
e693bc556d4e07471933b03456a509b068065698f86c34875d08bb0b4819597d.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x10],rdx
   140001005:	mov    QWORD PTR [rsp+0x8],rcx
   14000100a:	mov    rcx,QWORD PTR [rsp+0x8]
   14000100f:	mov    rax,QWORD PTR [rsp+0x10]
   140001014:	movzx  eax,WORD PTR [rax]
   140001017:	mov    WORD PTR [rcx],ax
   14000101a:	ret    
   14000101b:	int3   
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	mov    QWORD PTR [rsp+0x18],r8
   140001025:	mov    QWORD PTR [rsp+0x10],rdx
   14000102a:	mov    QWORD PTR [rsp+0x8],rcx
   14000102f:	sub    rsp,0x28
   140001033:	mov    r8,QWORD PTR [rsp+0x40]
   140001038:	mov    rdx,QWORD PTR [rsp+0x38]
   14000103d:	mov    rcx,QWORD PTR [rsp+0x30]
   140001042:	call   0x1400116e0
   140001047:	add    rsp,0x28
   14000104b:	ret    
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	mov    QWORD PTR [rsp+0x8],rcx
   140001055:	sub    rsp,0x28
   140001059:	mov    rcx,QWORD PTR [rsp+0x30]
   14000105e:	call   0x14001c520
   140001063:	add    rsp,0x28
   140001067:	ret    
   140001068:	int3   
   140001069:	int3   
   14000106a:	int3   
   14000106b:	int3   
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	mov    QWORD PTR [rsp+0x20],r9
   140001075:	mov    QWORD PTR [rsp+0x18],r8
   14000107a:	mov    QWORD PTR [rsp+0x10],rdx
   14000107f:	mov    QWORD PTR [rsp+0x8],rcx
   140001084:	sub    rsp,0x28
   140001088:	mov    r9,QWORD PTR [rsp+0x48]
   14000108d:	mov    r8,QWORD PTR [rsp+0x40]
   140001092:	mov    rdx,QWORD PTR [rsp+0x38]
   140001097:	mov    rcx,QWORD PTR [rsp+0x30]
   14000109c:	call   0x1400116a0
   1400010a1:	mov    rax,QWORD PTR [rsp+0x30]
   1400010a6:	add    rsp,0x28
   1400010aa:	ret    
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	mov    QWORD PTR [rsp+0x18],r8
   1400010b5:	mov    QWORD PTR [rsp+0x10],rdx
   1400010ba:	mov    QWORD PTR [rsp+0x8],rcx
   1400010bf:	sub    rsp,0x28
   1400010c3:	mov    r8,QWORD PTR [rsp+0x38]
   1400010c8:	mov    rax,QWORD PTR [rsp+0x40]
   1400010cd:	movzx  edx,WORD PTR [rax]
   1400010d0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400010d5:	call   0x140011640
   1400010da:	add    rsp,0x28
   1400010de:	ret    
   1400010df:	int3   
   1400010e0:	mov    QWORD PTR [rsp+0x20],r9
   1400010e5:	mov    QWORD PTR [rsp+0x18],r8
   1400010ea:	mov    QWORD PTR [rsp+0x10],rdx
   1400010ef:	mov    QWORD PTR [rsp+0x8],rcx
   1400010f4:	sub    rsp,0x28
   1400010f8:	mov    r9,QWORD PTR [rsp+0x48]
   1400010fd:	mov    r8,QWORD PTR [rsp+0x40]
   140001102:	mov    rdx,QWORD PTR [rsp+0x38]
   140001107:	mov    rcx,QWORD PTR [rsp+0x30]
   14000110c:	call   0x140011600
   140001111:	mov    rax,QWORD PTR [rsp+0x30]
   140001116:	add    rsp,0x28
   14000111a:	ret    
   14000111b:	int3   
   14000111c:	int3   
   14000111d:	int3   
   14000111e:	int3   
   14000111f:	int3   
   140001120:	mov    WORD PTR [rsp+0x18],r8w
   140001126:	mov    QWORD PTR [rsp+0x10],rdx
   14000112b:	mov    QWORD PTR [rsp+0x8],rcx
   140001130:	sub    rsp,0x28
   140001134:	mov    r8,QWORD PTR [rsp+0x38]
   140001139:	movzx  edx,WORD PTR [rsp+0x40]
   14000113e:	mov    rcx,QWORD PTR [rsp+0x30]
   140001143:	call   0x1400115a0
   140001148:	add    rsp,0x28
   14000114c:	ret    
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	mov    QWORD PTR [rsp+0x8],rcx
   140001155:	mov    rax,QWORD PTR [rsp+0x8]
   14000115a:	mov    ax,WORD PTR [rax]
   14000115d:	ret    
   14000115e:	int3   
   14000115f:	int3   
   140001160:	mov    QWORD PTR [rsp+0x10],rdx
   140001165:	mov    QWORD PTR [rsp+0x8],rcx
   14000116a:	sub    rsp,0x18
   14000116e:	mov    rax,QWORD PTR [rsp+0x20]
   140001173:	movzx  ecx,WORD PTR [rax]
   140001176:	mov    rax,QWORD PTR [rsp+0x28]
   14000117b:	movzx  eax,WORD PTR [rax]
   14000117e:	cmp    ecx,eax
   140001180:	jne    0x14000118b
   140001182:	mov    DWORD PTR [rsp],0x1
   140001189:	jmp    0x140001192
   14000118b:	mov    DWORD PTR [rsp],0x0
   140001192:	mov    al,BYTE PTR [rsp]
   140001195:	add    rsp,0x18
   140001199:	ret    
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	mov    eax,0xffff
   1400011a5:	ret    
   1400011a6:	int3   
   1400011a7:	int3   
   1400011a8:	int3   
   1400011a9:	int3   
   1400011aa:	int3   
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400011b5:	push   rbx
   1400011b6:	sub    rsp,0x30
   1400011ba:	mov    rax,QWORD PTR [rsp+0x40]
   1400011bf:	movzx  ebx,WORD PTR [rax]
   1400011c2:	call   0x1400011a0
   1400011c7:	movzx  eax,ax
   1400011ca:	cmp    ebx,eax
   1400011cc:	je     0x1400011dc
   1400011ce:	mov    rax,QWORD PTR [rsp+0x40]
   1400011d3:	movzx  eax,WORD PTR [rax]
   1400011d6:	mov    DWORD PTR [rsp+0x20],eax
   1400011da:	jmp    0x140001202
   1400011dc:	call   0x1400011a0
   1400011e1:	movzx  eax,ax
   1400011e4:	test   eax,eax
   1400011e6:	jne    0x1400011f2
   1400011e8:	mov    DWORD PTR [rsp+0x24],0x1
   1400011f0:	jmp    0x1400011fa
   1400011f2:	mov    DWORD PTR [rsp+0x24],0x0
   1400011fa:	mov    eax,DWORD PTR [rsp+0x24]
   1400011fe:	mov    DWORD PTR [rsp+0x20],eax
   140001202:	mov    ax,WORD PTR [rsp+0x20]
   140001207:	add    rsp,0x30
   14000120b:	pop    rbx
   14000120c:	ret    
   14000120d:	int3   
   14000120e:	int3   
   14000120f:	int3   
   140001210:	mov    QWORD PTR [rsp+0x10],rdx
   140001215:	mov    QWORD PTR [rsp+0x8],rcx
   14000121a:	mov    rcx,QWORD PTR [rsp+0x8]
   14000121f:	mov    rax,QWORD PTR [rsp+0x10]
   140001224:	movzx  eax,BYTE PTR [rax]
   140001227:	mov    BYTE PTR [rcx],al
   140001229:	ret    
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	mov    QWORD PTR [rsp+0x8],rcx
   140001235:	sub    rsp,0x28
   140001239:	mov    rcx,QWORD PTR [rsp+0x30]
   14000123e:	call   0x14001c650
   140001243:	add    rsp,0x28
   140001247:	ret    
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	mov    QWORD PTR [rsp+0x20],r9
   140001255:	mov    QWORD PTR [rsp+0x18],r8
   14000125a:	mov    QWORD PTR [rsp+0x10],rdx
   14000125f:	mov    QWORD PTR [rsp+0x8],rcx
   140001264:	sub    rsp,0x28
   140001268:	mov    r9,QWORD PTR [rsp+0x48]
   14000126d:	mov    r8,QWORD PTR [rsp+0x40]
   140001272:	mov    rdx,QWORD PTR [rsp+0x38]
   140001277:	mov    rcx,QWORD PTR [rsp+0x30]
   14000127c:	call   0x14001c53c
   140001281:	mov    rax,QWORD PTR [rsp+0x30]
   140001286:	add    rsp,0x28
   14000128a:	ret    
   14000128b:	int3   
   14000128c:	int3   
   14000128d:	int3   
   14000128e:	int3   
   14000128f:	int3   
   140001290:	mov    QWORD PTR [rsp+0x20],r9
   140001295:	mov    QWORD PTR [rsp+0x18],r8
   14000129a:	mov    QWORD PTR [rsp+0x10],rdx
   14000129f:	mov    QWORD PTR [rsp+0x8],rcx
   1400012a4:	sub    rsp,0x28
   1400012a8:	mov    r9,QWORD PTR [rsp+0x48]
   1400012ad:	mov    r8,QWORD PTR [rsp+0x40]
   1400012b2:	mov    rdx,QWORD PTR [rsp+0x38]
   1400012b7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400012bc:	call   0x14001c5d4
   1400012c1:	mov    rax,QWORD PTR [rsp+0x30]
   1400012c6:	add    rsp,0x28
   1400012ca:	ret    
   1400012cb:	int3   
   1400012cc:	int3   
   1400012cd:	int3   
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	mov    BYTE PTR [rsp+0x18],r8b
   1400012d5:	mov    QWORD PTR [rsp+0x10],rdx
   1400012da:	mov    QWORD PTR [rsp+0x8],rcx
   1400012df:	sub    rsp,0x28
   1400012e3:	movsx  edx,BYTE PTR [rsp+0x40]
   1400012e8:	mov    r8,QWORD PTR [rsp+0x38]
   1400012ed:	mov    rcx,QWORD PTR [rsp+0x30]
   1400012f2:	call   0x14001c730
   1400012f7:	add    rsp,0x28
   1400012fb:	ret    
   1400012fc:	int3   
   1400012fd:	int3   
   1400012fe:	int3   
   1400012ff:	int3   
   140001300:	mov    QWORD PTR [rsp+0x10],rdx
   140001305:	mov    QWORD PTR [rsp+0x8],rcx
   14000130a:	mov    rcx,QWORD PTR [rsp+0x8]
   14000130f:	mov    rax,QWORD PTR [rsp+0x10]
   140001314:	mov    QWORD PTR [rcx],rax
   140001317:	mov    rax,QWORD PTR [rsp+0x8]
   14000131c:	ret    
   14000131d:	int3   
   14000131e:	int3   
   14000131f:	int3   
   140001320:	mov    QWORD PTR [rsp+0x8],rcx
   140001325:	ret    
   140001326:	int3   
   140001327:	int3   
   140001328:	int3   
   140001329:	int3   
   14000132a:	int3   
   14000132b:	int3   
   14000132c:	int3   
   14000132d:	int3   
   14000132e:	int3   
   14000132f:	int3   
   140001330:	mov    QWORD PTR [rsp+0x10],rdx
   140001335:	mov    QWORD PTR [rsp+0x8],rcx
   14000133a:	mov    rcx,QWORD PTR [rsp+0x8]
   14000133f:	mov    rax,QWORD PTR [rsp+0x10]
   140001344:	mov    rax,QWORD PTR [rax]
   140001347:	mov    QWORD PTR [rcx],rax
   14000134a:	ret    
   14000134b:	int3   
   14000134c:	int3   
   14000134d:	int3   
   14000134e:	int3   
   14000134f:	int3   
   140001350:	mov    QWORD PTR [rsp+0x8],rcx
   140001355:	sub    rsp,0x38
   140001359:	mov    rax,QWORD PTR [rsp+0x40]
   14000135e:	cmp    QWORD PTR [rax],0x0
   140001362:	je     0x140001378
   140001364:	mov    rcx,QWORD PTR [rsp+0x40]
   140001369:	mov    rcx,QWORD PTR [rcx]
   14000136c:	call   0x140012200
   140001371:	mov    QWORD PTR [rsp+0x20],rax
   140001376:	jmp    0x140001381
   140001378:	mov    QWORD PTR [rsp+0x20],0x0
   140001381:	mov    rax,QWORD PTR [rsp+0x20]
   140001386:	add    rsp,0x38
   14000138a:	ret    
   14000138b:	int3   
   14000138c:	int3   
   14000138d:	int3   
   14000138e:	int3   
   14000138f:	int3   
   140001390:	mov    QWORD PTR [rsp+0x10],rdx
   140001395:	mov    QWORD PTR [rsp+0x8],rcx
   14000139a:	sub    rsp,0x18
   14000139e:	mov    rcx,QWORD PTR [rsp+0x20]
   1400013a3:	mov    rax,QWORD PTR [rsp+0x28]
   1400013a8:	mov    rax,QWORD PTR [rax]
   1400013ab:	cmp    QWORD PTR [rcx],rax
   1400013ae:	jne    0x1400013b9
   1400013b0:	mov    DWORD PTR [rsp],0x1
   1400013b7:	jmp    0x1400013c0
   1400013b9:	mov    DWORD PTR [rsp],0x0
   1400013c0:	mov    al,BYTE PTR [rsp]
   1400013c3:	add    rsp,0x18
   1400013c7:	ret    
   1400013c8:	int3   
   1400013c9:	int3   
   1400013ca:	int3   
   1400013cb:	int3   
   1400013cc:	int3   
   1400013cd:	int3   
   1400013ce:	int3   
   1400013cf:	int3   
   1400013d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400013d5:	sub    rsp,0x18
   1400013d9:	mov    rax,QWORD PTR [rsp+0x20]
   1400013de:	cmp    QWORD PTR [rax],0x0
   1400013e2:	je     0x1400013ed
   1400013e4:	mov    DWORD PTR [rsp],0x1
   1400013eb:	jmp    0x1400013f4
   1400013ed:	mov    DWORD PTR [rsp],0x0
   1400013f4:	mov    al,BYTE PTR [rsp]
   1400013f7:	add    rsp,0x18
   1400013fb:	ret    
   1400013fc:	int3   
   1400013fd:	int3   
   1400013fe:	int3   
   1400013ff:	int3   
   140001400:	mov    QWORD PTR [rsp+0x10],rdx
   140001405:	mov    QWORD PTR [rsp+0x8],rcx
   14000140a:	sub    rsp,0x28
   14000140e:	lea    rdx,[rsp+0x38]
   140001413:	mov    rcx,QWORD PTR [rsp+0x30]
   140001418:	call   0x14001c834
   14000141d:	mov    r11,QWORD PTR [rsp+0x30]
   140001422:	lea    rax,[rip+0x3922f]        # 0x14003a658
   140001429:	mov    QWORD PTR [r11],rax
   14000142c:	mov    rax,QWORD PTR [rsp+0x30]
   140001431:	add    rsp,0x28
   140001435:	ret    
   140001436:	int3   
   140001437:	int3   
   140001438:	int3   
   140001439:	int3   
   14000143a:	int3   
   14000143b:	int3   
   14000143c:	int3   
   14000143d:	int3   
   14000143e:	int3   
   14000143f:	int3   
   140001440:	mov    QWORD PTR [rsp+0x8],rcx
   140001445:	sub    rsp,0x28
   140001449:	mov    rcx,QWORD PTR [rsp+0x30]
   14000144e:	lea    rax,[rip+0x39203]        # 0x14003a658
   140001455:	mov    QWORD PTR [rcx],rax
   140001458:	mov    rcx,QWORD PTR [rsp+0x30]
   14000145d:	call   0x14001c944
   140001462:	add    rsp,0x28
   140001466:	ret    
   140001467:	int3   
   140001468:	int3   
   140001469:	int3   
   14000146a:	int3   
   14000146b:	int3   
   14000146c:	int3   
   14000146d:	int3   
   14000146e:	int3   
   14000146f:	int3   
   140001470:	mov    DWORD PTR [rsp+0x10],edx
   140001474:	mov    QWORD PTR [rsp+0x8],rcx
   140001479:	sub    rsp,0x28
   14000147d:	mov    rcx,QWORD PTR [rsp+0x30]
   140001482:	call   0x140001440
   140001487:	mov    eax,DWORD PTR [rsp+0x38]
   14000148b:	and    eax,0x1
   14000148e:	test   eax,eax
   140001490:	je     0x14000149c
   140001492:	mov    rcx,QWORD PTR [rsp+0x30]
   140001497:	call   0x14001c4dc
   14000149c:	mov    rax,QWORD PTR [rsp+0x30]
   1400014a1:	add    rsp,0x28
   1400014a5:	ret    
   1400014a6:	int3   
   1400014a7:	int3   
   1400014a8:	int3   
   1400014a9:	int3   
   1400014aa:	int3   
   1400014ab:	int3   
   1400014ac:	int3   
   1400014ad:	int3   
   1400014ae:	int3   
   1400014af:	int3   
   1400014b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400014b5:	mov    QWORD PTR [rsp+0x8],rcx
   1400014ba:	mov    rax,QWORD PTR [rsp+0x10]
   1400014bf:	ret    
   1400014c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400014c5:	mov    QWORD PTR [rsp+0x8],rcx
   1400014ca:	ret    
   1400014cb:	int3   
   1400014cc:	int3   
   1400014cd:	int3   
   1400014ce:	int3   
   1400014cf:	int3   
   1400014d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400014d5:	mov    QWORD PTR [rsp+0x8],rcx
   1400014da:	sub    rsp,0x38
   1400014de:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400014e7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400014ec:	call   0x14001c81c
   1400014f1:	nop
   1400014f2:	mov    rcx,QWORD PTR [rsp+0x40]
   1400014f7:	lea    rax,[rip+0x3924a]        # 0x14003a748
   1400014fe:	mov    QWORD PTR [rcx],rax
   140001501:	mov    rcx,QWORD PTR [rsp+0x40]
   140001506:	add    rcx,0x18
   14000150a:	mov    rdx,QWORD PTR [rsp+0x48]
   14000150f:	call   0x1400031d0
   140001514:	nop
   140001515:	mov    rax,QWORD PTR [rsp+0x40]
   14000151a:	add    rsp,0x38
   14000151e:	ret    
   14000151f:	int3   
   140001520:	mov    QWORD PTR [rsp+0x8],rcx
   140001525:	sub    rsp,0x28
   140001529:	mov    rcx,QWORD PTR [rsp+0x30]
   14000152e:	lea    rax,[rip+0x39213]        # 0x14003a748
   140001535:	mov    QWORD PTR [rcx],rax
   140001538:	mov    rcx,QWORD PTR [rsp+0x30]
   14000153d:	add    rcx,0x18
   140001541:	call   0x140003220
   140001546:	mov    rcx,QWORD PTR [rsp+0x30]
   14000154b:	call   0x14001c944
   140001550:	add    rsp,0x28
   140001554:	ret    
   140001555:	int3   
   140001556:	int3   
   140001557:	int3   
   140001558:	int3   
   140001559:	int3   
   14000155a:	int3   
   14000155b:	int3   
   14000155c:	int3   
   14000155d:	int3   
   14000155e:	int3   
   14000155f:	int3   
   140001560:	mov    QWORD PTR [rsp+0x8],rcx
   140001565:	sub    rsp,0x28
   140001569:	mov    rcx,QWORD PTR [rsp+0x30]
   14000156e:	add    rcx,0x18
   140001572:	call   0x1400032f0
   140001577:	add    rsp,0x28
   14000157b:	ret    
   14000157c:	int3   
   14000157d:	int3   
   14000157e:	int3   
   14000157f:	int3   
   140001580:	mov    DWORD PTR [rsp+0x10],edx
   140001584:	mov    QWORD PTR [rsp+0x8],rcx
   140001589:	sub    rsp,0x28
   14000158d:	mov    rcx,QWORD PTR [rsp+0x30]
   140001592:	call   0x140001520
   140001597:	mov    eax,DWORD PTR [rsp+0x38]
   14000159b:	and    eax,0x1
   14000159e:	test   eax,eax
   1400015a0:	je     0x1400015ac
   1400015a2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400015a7:	call   0x14001c4dc
   1400015ac:	mov    rax,QWORD PTR [rsp+0x30]
   1400015b1:	add    rsp,0x28
   1400015b5:	ret    
   1400015b6:	int3   
   1400015b7:	int3   
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400015c5:	mov    QWORD PTR [rsp+0x8],rcx
   1400015ca:	sub    rsp,0x28
   1400015ce:	mov    rdx,QWORD PTR [rsp+0x38]
   1400015d3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400015d8:	call   0x1400014d0
   1400015dd:	mov    r11,QWORD PTR [rsp+0x30]
   1400015e2:	lea    rax,[rip+0x39177]        # 0x14003a760
   1400015e9:	mov    QWORD PTR [r11],rax
   1400015ec:	mov    rax,QWORD PTR [rsp+0x30]
   1400015f1:	add    rsp,0x28
   1400015f5:	ret    
   1400015f6:	int3   
   1400015f7:	int3   
   1400015f8:	int3   
   1400015f9:	int3   
   1400015fa:	int3   
   1400015fb:	int3   
   1400015fc:	int3   
   1400015fd:	int3   
   1400015fe:	int3   
   1400015ff:	int3   
   140001600:	mov    QWORD PTR [rsp+0x8],rcx
   140001605:	sub    rsp,0x28
   140001609:	mov    rcx,QWORD PTR [rsp+0x30]
   14000160e:	lea    rax,[rip+0x3914b]        # 0x14003a760
   140001615:	mov    QWORD PTR [rcx],rax
   140001618:	mov    rcx,QWORD PTR [rsp+0x30]
   14000161d:	call   0x140001520
   140001622:	add    rsp,0x28
   140001626:	ret    
   140001627:	int3   
   140001628:	int3   
   140001629:	int3   
   14000162a:	int3   
   14000162b:	int3   
   14000162c:	int3   
   14000162d:	int3   
   14000162e:	int3   
   14000162f:	int3   
   140001630:	mov    DWORD PTR [rsp+0x10],edx
   140001634:	mov    QWORD PTR [rsp+0x8],rcx
   140001639:	sub    rsp,0x28
   14000163d:	mov    rcx,QWORD PTR [rsp+0x30]
   140001642:	call   0x140001600
   140001647:	mov    eax,DWORD PTR [rsp+0x38]
   14000164b:	and    eax,0x1
   14000164e:	test   eax,eax
   140001650:	je     0x14000165c
   140001652:	mov    rcx,QWORD PTR [rsp+0x30]
   140001657:	call   0x14001c4dc
   14000165c:	mov    rax,QWORD PTR [rsp+0x30]
   140001661:	add    rsp,0x28
   140001665:	ret    
   140001666:	int3   
   140001667:	int3   
   140001668:	int3   
   140001669:	int3   
   14000166a:	int3   
   14000166b:	int3   
   14000166c:	int3   
   14000166d:	int3   
   14000166e:	int3   
   14000166f:	int3   
   140001670:	mov    QWORD PTR [rsp+0x10],rdx
   140001675:	mov    QWORD PTR [rsp+0x8],rcx
   14000167a:	sub    rsp,0x38
   14000167e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001687:	mov    rcx,QWORD PTR [rsp+0x40]
   14000168c:	call   0x14001c81c
   140001691:	nop
   140001692:	mov    rcx,QWORD PTR [rsp+0x40]
   140001697:	lea    rax,[rip+0x39442]        # 0x14003aae0
   14000169e:	mov    QWORD PTR [rcx],rax
   1400016a1:	mov    rcx,QWORD PTR [rsp+0x40]
   1400016a6:	add    rcx,0x18
   1400016aa:	mov    rdx,QWORD PTR [rsp+0x48]
   1400016af:	call   0x1400031d0
   1400016b4:	nop
   1400016b5:	mov    rax,QWORD PTR [rsp+0x40]
   1400016ba:	add    rsp,0x38
   1400016be:	ret    
   1400016bf:	int3   
   1400016c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400016c5:	sub    rsp,0x28
   1400016c9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400016ce:	lea    rax,[rip+0x3940b]        # 0x14003aae0
   1400016d5:	mov    QWORD PTR [rcx],rax
   1400016d8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400016dd:	add    rcx,0x18
   1400016e1:	call   0x140003220
   1400016e6:	mov    rcx,QWORD PTR [rsp+0x30]
   1400016eb:	call   0x14001c944
   1400016f0:	add    rsp,0x28
   1400016f4:	ret    
   1400016f5:	int3   
   1400016f6:	int3   
   1400016f7:	int3   
   1400016f8:	int3   
   1400016f9:	int3   
   1400016fa:	int3   
   1400016fb:	int3   
   1400016fc:	int3   
   1400016fd:	int3   
   1400016fe:	int3   
   1400016ff:	int3   
   140001700:	mov    DWORD PTR [rsp+0x10],edx
   140001704:	mov    QWORD PTR [rsp+0x8],rcx
   140001709:	sub    rsp,0x28
   14000170d:	mov    rcx,QWORD PTR [rsp+0x30]
   140001712:	call   0x1400016c0
   140001717:	mov    eax,DWORD PTR [rsp+0x38]
   14000171b:	and    eax,0x1
   14000171e:	test   eax,eax
   140001720:	je     0x14000172c
   140001722:	mov    rcx,QWORD PTR [rsp+0x30]
   140001727:	call   0x14001c4dc
   14000172c:	mov    rax,QWORD PTR [rsp+0x30]
   140001731:	add    rsp,0x28
   140001735:	ret    
   140001736:	int3   
   140001737:	int3   
   140001738:	int3   
   140001739:	int3   
   14000173a:	int3   
   14000173b:	int3   
   14000173c:	int3   
   14000173d:	int3   
   14000173e:	int3   
   14000173f:	int3   
   140001740:	mov    QWORD PTR [rsp+0x10],rdx
   140001745:	mov    QWORD PTR [rsp+0x8],rcx
   14000174a:	sub    rsp,0x38
   14000174e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001757:	xor    edx,edx
   140001759:	mov    rcx,QWORD PTR [rsp+0x40]
   14000175e:	call   0x1400194bc
   140001763:	nop
   140001764:	mov    rcx,QWORD PTR [rsp+0x40]
   140001769:	add    rcx,0x8
   14000176d:	call   0x140003120
   140001772:	nop
   140001773:	mov    rcx,QWORD PTR [rsp+0x40]
   140001778:	add    rcx,0x30
   14000177c:	call   0x140003120
   140001781:	nop
   140001782:	mov    rcx,QWORD PTR [rsp+0x40]
   140001787:	add    rcx,0x58
   14000178b:	call   0x140003120
   140001790:	nop
   140001791:	mov    rcx,QWORD PTR [rsp+0x40]
   140001796:	add    rcx,0x80
   14000179d:	call   0x140003120
   1400017a2:	nop
   1400017a3:	mov    rdx,QWORD PTR [rsp+0x48]
   1400017a8:	mov    rcx,QWORD PTR [rsp+0x40]
   1400017ad:	call   0x140019998
   1400017b2:	nop
   1400017b3:	mov    rax,QWORD PTR [rsp+0x40]
   1400017b8:	add    rsp,0x38
   1400017bc:	ret    
   1400017bd:	int3   
   1400017be:	int3   
   1400017bf:	int3   
   1400017c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400017c5:	sub    rsp,0x38
   1400017c9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400017d2:	mov    rcx,QWORD PTR [rsp+0x40]
   1400017d7:	call   0x1400197a4
   1400017dc:	nop
   1400017dd:	mov    rcx,QWORD PTR [rsp+0x40]
   1400017e2:	add    rcx,0x80
   1400017e9:	call   0x140003220
   1400017ee:	nop
   1400017ef:	mov    rcx,QWORD PTR [rsp+0x40]
   1400017f4:	add    rcx,0x58
   1400017f8:	call   0x140003220
   1400017fd:	nop
   1400017fe:	mov    rcx,QWORD PTR [rsp+0x40]
   140001803:	add    rcx,0x30
   140001807:	call   0x140003220
   14000180c:	nop
   14000180d:	mov    rcx,QWORD PTR [rsp+0x40]
   140001812:	add    rcx,0x8
   140001816:	call   0x140003220
   14000181b:	nop
   14000181c:	mov    rcx,QWORD PTR [rsp+0x40]
   140001821:	call   0x1400194ec
   140001826:	add    rsp,0x38
   14000182a:	ret    
   14000182b:	int3   
   14000182c:	int3   
   14000182d:	int3   
   14000182e:	int3   
   14000182f:	int3   
   140001830:	mov    QWORD PTR [rsp+0x10],rdx
   140001835:	mov    QWORD PTR [rsp+0x8],rcx
   14000183a:	push   rsi
   14000183b:	push   rdi
   14000183c:	sub    rsp,0x78
   140001840:	lea    rcx,[rsp+0x38]
   140001845:	call   0x140019a38
   14000184a:	lea    rdi,[rsp+0x50]
   14000184f:	mov    rsi,rax
   140001852:	mov    ecx,0x18
   140001857:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140001859:	lea    rdi,[rsp+0x20]
   14000185e:	lea    rsi,[rsp+0x50]
   140001863:	mov    ecx,0x18
   140001868:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000186a:	lea    rsi,[rsp+0x20]
   14000186f:	mov    rdi,QWORD PTR [rsp+0x98]
   140001877:	mov    ecx,0x18
   14000187c:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000187e:	mov    rax,QWORD PTR [rsp+0x98]
   140001886:	add    rsp,0x78
   14000188a:	pop    rdi
   14000188b:	pop    rsi
   14000188c:	ret    
   14000188d:	int3   
   14000188e:	int3   
   14000188f:	int3   
   140001890:	mov    QWORD PTR [rsp+0x10],rdx
   140001895:	mov    QWORD PTR [rsp+0x8],rcx
   14000189a:	sub    rsp,0x38
   14000189e:	call   0x140019b60
   1400018a3:	mov    QWORD PTR [rsp+0x20],rax
   1400018a8:	mov    rcx,QWORD PTR [rsp+0x48]
   1400018ad:	mov    rax,QWORD PTR [rsp+0x20]
   1400018b2:	mov    QWORD PTR [rcx],rax
   1400018b5:	mov    rax,QWORD PTR [rsp+0x48]
   1400018ba:	add    rsp,0x38
   1400018be:	ret    
   1400018bf:	int3   
   1400018c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400018c5:	sub    rsp,0x28
   1400018c9:	call   0x14001cae4
   1400018ce:	add    rsp,0x28
   1400018d2:	ret    
   1400018d3:	int3   
   1400018d4:	int3   
   1400018d5:	int3   
   1400018d6:	int3   
   1400018d7:	int3   
   1400018d8:	int3   
   1400018d9:	int3   
   1400018da:	int3   
   1400018db:	int3   
   1400018dc:	int3   
   1400018dd:	int3   
   1400018de:	int3   
   1400018df:	int3   
   1400018e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400018e5:	lea    rax,[rip+0x3d944]        # 0x14003f230
   1400018ec:	ret    
   1400018ed:	int3   
   1400018ee:	int3   
   1400018ef:	int3   
   1400018f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400018f5:	lea    rax,[rip+0x3d93c]        # 0x14003f238
   1400018fc:	ret    
   1400018fd:	int3   
   1400018fe:	int3   
   1400018ff:	int3   
   140001900:	mov    QWORD PTR [rsp+0x10],rdx
   140001905:	mov    QWORD PTR [rsp+0x8],rcx
   14000190a:	sub    rsp,0x38
   14000190e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001917:	mov    rdx,QWORD PTR [rsp+0x48]
   14000191c:	mov    rcx,QWORD PTR [rsp+0x40]
   140001921:	call   0x14001c8c4
   140001926:	nop
   140001927:	mov    rcx,QWORD PTR [rsp+0x40]
   14000192c:	lea    rax,[rip+0x391ad]        # 0x14003aae0
   140001933:	mov    QWORD PTR [rcx],rax
   140001936:	mov    rdx,QWORD PTR [rsp+0x48]
   14000193b:	add    rdx,0x18
   14000193f:	mov    rcx,QWORD PTR [rsp+0x40]
   140001944:	add    rcx,0x18
   140001948:	call   0x1400031d0
   14000194d:	nop
   14000194e:	mov    rax,QWORD PTR [rsp+0x40]
   140001953:	add    rsp,0x38
   140001957:	ret    
   140001958:	int3   
   140001959:	int3   
   14000195a:	int3   
   14000195b:	int3   
   14000195c:	int3   
   14000195d:	int3   
   14000195e:	int3   
   14000195f:	int3   
   140001960:	mov    QWORD PTR [rsp+0x8],rcx
   140001965:	sub    rsp,0x38
   140001969:	mov    rax,QWORD PTR [rsp+0x40]
   14000196e:	cmp    QWORD PTR [rax],0x0
   140001972:	jne    0x1400019b3
   140001974:	xor    edx,edx
   140001976:	lea    rcx,[rsp+0x20]
   14000197b:	call   0x1400194bc
   140001980:	mov    rax,QWORD PTR [rsp+0x40]
   140001985:	cmp    QWORD PTR [rax],0x0
   140001989:	jne    0x1400019a9
   14000198b:	mov    eax,DWORD PTR [rip+0x49d4f]        # 0x14004b6e0
   140001991:	add    eax,0x1
   140001994:	mov    DWORD PTR [rip+0x49d46],eax        # 0x14004b6e0
   14000199a:	movsxd rcx,DWORD PTR [rip+0x49d3f]        # 0x14004b6e0
   1400019a1:	mov    rax,QWORD PTR [rsp+0x40]
   1400019a6:	mov    QWORD PTR [rax],rcx
   1400019a9:	lea    rcx,[rsp+0x20]
   1400019ae:	call   0x1400194ec
   1400019b3:	mov    rax,QWORD PTR [rsp+0x40]
   1400019b8:	mov    rax,QWORD PTR [rax]
   1400019bb:	add    rsp,0x38
   1400019bf:	ret    
   1400019c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400019c5:	sub    rsp,0x38
   1400019c9:	xor    edx,edx
   1400019cb:	lea    rcx,[rsp+0x20]
   1400019d0:	call   0x1400194bc
   1400019d5:	mov    rax,QWORD PTR [rsp+0x40]
   1400019da:	cmp    QWORD PTR [rax+0x8],0xffffffffffffffff
   1400019df:	jae    0x1400019f7
   1400019e1:	mov    rcx,QWORD PTR [rsp+0x40]
   1400019e6:	mov    rcx,QWORD PTR [rcx+0x8]
   1400019ea:	add    rcx,0x1
   1400019ee:	mov    rax,QWORD PTR [rsp+0x40]
   1400019f3:	mov    QWORD PTR [rax+0x8],rcx
   1400019f7:	lea    rcx,[rsp+0x20]
   1400019fc:	call   0x1400194ec
   140001a01:	add    rsp,0x38
   140001a05:	ret    
   140001a06:	int3   
   140001a07:	int3   
   140001a08:	int3   
   140001a09:	int3   
   140001a0a:	int3   
   140001a0b:	int3   
   140001a0c:	int3   
   140001a0d:	int3   
   140001a0e:	int3   
   140001a0f:	int3   
   140001a10:	mov    QWORD PTR [rsp+0x8],rcx
   140001a15:	sub    rsp,0x48
   140001a19:	xor    edx,edx
   140001a1b:	lea    rcx,[rsp+0x20]
   140001a20:	call   0x1400194bc
   140001a25:	mov    rax,QWORD PTR [rsp+0x50]
   140001a2a:	cmp    QWORD PTR [rax+0x8],0x0
   140001a2f:	jbe    0x140001a53
   140001a31:	mov    rax,QWORD PTR [rsp+0x50]
   140001a36:	cmp    QWORD PTR [rax+0x8],0xffffffffffffffff
   140001a3b:	jae    0x140001a53
   140001a3d:	mov    rcx,QWORD PTR [rsp+0x50]
   140001a42:	mov    rcx,QWORD PTR [rcx+0x8]
   140001a46:	sub    rcx,0x1
   140001a4a:	mov    rax,QWORD PTR [rsp+0x50]
   140001a4f:	mov    QWORD PTR [rax+0x8],rcx
   140001a53:	mov    rax,QWORD PTR [rsp+0x50]
   140001a58:	cmp    QWORD PTR [rax+0x8],0x0
   140001a5d:	jne    0x140001a6b
   140001a5f:	mov    rax,QWORD PTR [rsp+0x50]
   140001a64:	mov    QWORD PTR [rsp+0x30],rax
   140001a69:	jmp    0x140001a74
   140001a6b:	mov    QWORD PTR [rsp+0x30],0x0
   140001a74:	mov    rax,QWORD PTR [rsp+0x30]
   140001a79:	mov    QWORD PTR [rsp+0x28],rax
   140001a7e:	lea    rcx,[rsp+0x20]
   140001a83:	call   0x1400194ec
   140001a88:	mov    rax,QWORD PTR [rsp+0x28]
   140001a8d:	add    rsp,0x48
   140001a91:	ret    
   140001a92:	int3   
   140001a93:	int3   
   140001a94:	int3   
   140001a95:	int3   
   140001a96:	int3   
   140001a97:	int3   
   140001a98:	int3   
   140001a99:	int3   
   140001a9a:	int3   
   140001a9b:	int3   
   140001a9c:	int3   
   140001a9d:	int3   
   140001a9e:	int3   
   140001a9f:	int3   
   140001aa0:	mov    QWORD PTR [rsp+0x8],rcx
   140001aa5:	sub    rsp,0x28
   140001aa9:	mov    rcx,QWORD PTR [rsp+0x30]
   140001aae:	call   0x14001974c
   140001ab3:	add    rsp,0x28
   140001ab7:	ret    
   140001ab8:	int3   
   140001ab9:	int3   
   140001aba:	int3   
   140001abb:	int3   
   140001abc:	int3   
   140001abd:	int3   
   140001abe:	int3   
   140001abf:	int3   
   140001ac0:	mov    QWORD PTR [rsp+0x8],rcx
   140001ac5:	mov    rcx,QWORD PTR [rsp+0x8]
   140001aca:	lea    rax,[rip+0x38b9f]        # 0x14003a670
   140001ad1:	mov    QWORD PTR [rcx],rax
   140001ad4:	ret    
   140001ad5:	int3   
   140001ad6:	int3   
   140001ad7:	int3   
   140001ad8:	int3   
   140001ad9:	int3   
   140001ada:	int3   
   140001adb:	int3   
   140001adc:	int3   
   140001add:	int3   
   140001ade:	int3   
   140001adf:	int3   
   140001ae0:	mov    QWORD PTR [rsp+0x10],rdx
   140001ae5:	mov    QWORD PTR [rsp+0x8],rcx
   140001aea:	mov    rcx,QWORD PTR [rsp+0x8]
   140001aef:	lea    rax,[rip+0x38b7a]        # 0x14003a670
   140001af6:	mov    QWORD PTR [rcx],rax
   140001af9:	mov    rcx,QWORD PTR [rsp+0x8]
   140001afe:	mov    rax,QWORD PTR [rsp+0x10]
   140001b03:	mov    QWORD PTR [rcx+0x8],rax
   140001b07:	mov    rax,QWORD PTR [rsp+0x8]
   140001b0c:	ret    
   140001b0d:	int3   
   140001b0e:	int3   
   140001b0f:	int3   
   140001b10:	mov    QWORD PTR [rsp+0x8],rcx
   140001b15:	sub    rsp,0x28
   140001b19:	call   0x1400198bc
   140001b1e:	mov    r11,rax
   140001b21:	mov    rax,QWORD PTR [rsp+0x30]
   140001b26:	mov    QWORD PTR [rax],r11
   140001b29:	call   0x140019614
   140001b2e:	mov    rcx,rax
   140001b31:	call   0x1400019c0
   140001b36:	mov    rax,QWORD PTR [rsp+0x30]
   140001b3b:	add    rsp,0x28
   140001b3f:	ret    
   140001b40:	mov    QWORD PTR [rsp+0x10],rdx
   140001b45:	mov    QWORD PTR [rsp+0x8],rcx
   140001b4a:	sub    rsp,0x28
   140001b4e:	mov    rcx,QWORD PTR [rsp+0x30]
   140001b53:	mov    rax,QWORD PTR [rsp+0x38]
   140001b58:	mov    rax,QWORD PTR [rax]
   140001b5b:	mov    QWORD PTR [rcx],rax
   140001b5e:	mov    rcx,QWORD PTR [rsp+0x30]
   140001b63:	mov    rcx,QWORD PTR [rcx]
   140001b66:	call   0x1400019c0
   140001b6b:	mov    rax,QWORD PTR [rsp+0x30]
   140001b70:	add    rsp,0x28
   140001b74:	ret    
   140001b75:	int3   
   140001b76:	int3   
   140001b77:	int3   
   140001b78:	int3   
   140001b79:	int3   
   140001b7a:	int3   
   140001b7b:	int3   
   140001b7c:	int3   
   140001b7d:	int3   
   140001b7e:	int3   
   140001b7f:	int3   
   140001b80:	mov    QWORD PTR [rsp+0x8],rcx
   140001b85:	sub    rsp,0x48
   140001b89:	mov    rax,QWORD PTR [rsp+0x50]
   140001b8e:	cmp    QWORD PTR [rax],0x0
   140001b92:	je     0x140001bdc
   140001b94:	mov    rcx,QWORD PTR [rsp+0x50]
   140001b99:	mov    rcx,QWORD PTR [rcx]
   140001b9c:	call   0x140001a10
   140001ba1:	mov    QWORD PTR [rsp+0x28],rax
   140001ba6:	mov    rax,QWORD PTR [rsp+0x28]
   140001bab:	mov    QWORD PTR [rsp+0x20],rax
   140001bb0:	cmp    QWORD PTR [rsp+0x20],0x0
   140001bb6:	je     0x140001bd3
   140001bb8:	mov    rax,QWORD PTR [rsp+0x20]
   140001bbd:	mov    rax,QWORD PTR [rax]
   140001bc0:	mov    edx,0x1
   140001bc5:	mov    rcx,QWORD PTR [rsp+0x20]
   140001bca:	call   QWORD PTR [rax]
   140001bcc:	mov    QWORD PTR [rsp+0x30],rax
   140001bd1:	jmp    0x140001bdc
   140001bd3:	mov    QWORD PTR [rsp+0x30],0x0
   140001bdc:	add    rsp,0x48
   140001be0:	ret    
   140001be1:	int3   
   140001be2:	int3   
   140001be3:	int3   
   140001be4:	int3   
   140001be5:	int3   
   140001be6:	int3   
   140001be7:	int3   
   140001be8:	int3   
   140001be9:	int3   
   140001bea:	int3   
   140001beb:	int3   
   140001bec:	int3   
   140001bed:	int3   
   140001bee:	int3   
   140001bef:	int3   
   140001bf0:	mov    QWORD PTR [rsp+0x10],rdx
   140001bf5:	mov    QWORD PTR [rsp+0x8],rcx
   140001bfa:	sub    rsp,0x38
   140001bfe:	mov    DWORD PTR [rsp+0x20],0x0
   140001c06:	mov    rdx,QWORD PTR [rsp+0x40]
   140001c0b:	mov    rdx,QWORD PTR [rdx]
   140001c0e:	add    rdx,0x28
   140001c12:	mov    rcx,QWORD PTR [rsp+0x48]
   140001c17:	call   0x1400031d0
   140001c1c:	mov    eax,DWORD PTR [rsp+0x20]
   140001c20:	or     eax,0x1
   140001c23:	mov    DWORD PTR [rsp+0x20],eax
   140001c27:	mov    rax,QWORD PTR [rsp+0x48]
   140001c2c:	add    rsp,0x38
   140001c30:	ret    
   140001c31:	int3   
   140001c32:	int3   
   140001c33:	int3   
   140001c34:	int3   
   140001c35:	int3   
   140001c36:	int3   
   140001c37:	int3   
   140001c38:	int3   
   140001c39:	int3   
   140001c3a:	int3   
   140001c3b:	int3   
   140001c3c:	int3   
   140001c3d:	int3   
   140001c3e:	int3   
   140001c3f:	int3   
   140001c40:	mov    QWORD PTR [rsp+0x10],rdx
   140001c45:	mov    QWORD PTR [rsp+0x8],rcx
   140001c4a:	sub    rsp,0x48
   140001c4e:	mov    rax,QWORD PTR [rsp+0x50]
   140001c53:	mov    rax,QWORD PTR [rax]
   140001c56:	mov    rax,QWORD PTR [rax+0x18]
   140001c5a:	cmp    QWORD PTR [rsp+0x58],rax
   140001c5f:	jae    0x140001c7d
   140001c61:	mov    rcx,QWORD PTR [rsp+0x50]
   140001c66:	mov    rcx,QWORD PTR [rcx]
   140001c69:	mov    rcx,QWORD PTR [rcx+0x10]
   140001c6d:	mov    rax,QWORD PTR [rsp+0x58]
   140001c72:	mov    rax,QWORD PTR [rcx+rax*8]
   140001c76:	mov    QWORD PTR [rsp+0x30],rax
   140001c7b:	jmp    0x140001c86
   140001c7d:	mov    QWORD PTR [rsp+0x30],0x0
   140001c86:	mov    rax,QWORD PTR [rsp+0x30]
   140001c8b:	mov    QWORD PTR [rsp+0x20],rax
   140001c90:	cmp    QWORD PTR [rsp+0x20],0x0
   140001c96:	jne    0x140001ca8
   140001c98:	mov    rax,QWORD PTR [rsp+0x50]
   140001c9d:	mov    rax,QWORD PTR [rax]
   140001ca0:	movzx  eax,BYTE PTR [rax+0x24]
   140001ca4:	test   eax,eax
   140001ca6:	jne    0x140001cb1
   140001ca8:	mov    rax,QWORD PTR [rsp+0x20]
   140001cad:	jmp    0x140001cf2
   140001caf:	jmp    0x140001cf2
   140001cb1:	call   0x140019614
   140001cb6:	mov    QWORD PTR [rsp+0x28],rax
   140001cbb:	mov    rax,QWORD PTR [rsp+0x28]
   140001cc0:	mov    rax,QWORD PTR [rax+0x18]
   140001cc4:	cmp    QWORD PTR [rsp+0x58],rax
   140001cc9:	jae    0x140001ce4
   140001ccb:	mov    rcx,QWORD PTR [rsp+0x28]
   140001cd0:	mov    rcx,QWORD PTR [rcx+0x10]
   140001cd4:	mov    rax,QWORD PTR [rsp+0x58]
   140001cd9:	mov    rax,QWORD PTR [rcx+rax*8]
   140001cdd:	mov    QWORD PTR [rsp+0x38],rax
   140001ce2:	jmp    0x140001ced
   140001ce4:	mov    QWORD PTR [rsp+0x38],0x0
   140001ced:	mov    rax,QWORD PTR [rsp+0x38]
   140001cf2:	add    rsp,0x48
   140001cf6:	ret    
   140001cf7:	int3   
   140001cf8:	int3   
   140001cf9:	int3   
   140001cfa:	int3   
   140001cfb:	int3   
   140001cfc:	int3   
   140001cfd:	int3   
   140001cfe:	int3   
   140001cff:	int3   
   140001d00:	mov    DWORD PTR [rsp+0x10],edx
   140001d04:	mov    QWORD PTR [rsp+0x8],rcx
   140001d09:	sub    rsp,0x28
   140001d0d:	mov    rcx,QWORD PTR [rsp+0x30]
   140001d12:	call   0x140001ac0
   140001d17:	mov    eax,DWORD PTR [rsp+0x38]
   140001d1b:	and    eax,0x1
   140001d1e:	test   eax,eax
   140001d20:	je     0x140001d2c
   140001d22:	mov    rcx,QWORD PTR [rsp+0x30]
   140001d27:	call   0x14001c4dc
   140001d2c:	mov    rax,QWORD PTR [rsp+0x30]
   140001d31:	add    rsp,0x28
   140001d35:	ret    
   140001d36:	int3   
   140001d37:	int3   
   140001d38:	int3   
   140001d39:	int3   
   140001d3a:	int3   
   140001d3b:	int3   
   140001d3c:	int3   
   140001d3d:	int3   
   140001d3e:	int3   
   140001d3f:	int3   
   140001d40:	mov    QWORD PTR [rsp+0x10],rdx
   140001d45:	mov    WORD PTR [rsp+0x8],cx
   140001d4a:	sub    rsp,0x38
   140001d4e:	mov    BYTE PTR [rsp+0x20],0x0
   140001d53:	mov    DWORD PTR [rsp+0x24],0x0
   140001d5b:	mov    r9,QWORD PTR [rsp+0x48]
   140001d60:	lea    r8,[rsp+0x24]
   140001d65:	movzx  edx,WORD PTR [rsp+0x40]
   140001d6a:	lea    rcx,[rsp+0x20]
   140001d6f:	call   0x140019aa4
   140001d74:	mov    al,BYTE PTR [rsp+0x20]
   140001d78:	add    rsp,0x38
   140001d7c:	ret    
   140001d7d:	int3   
   140001d7e:	int3   
   140001d7f:	int3   
   140001d80:	mov    QWORD PTR [rsp+0x18],r8
   140001d85:	mov    QWORD PTR [rsp+0x10],rdx
   140001d8a:	mov    BYTE PTR [rsp+0x8],cl
   140001d8e:	sub    rsp,0x48
   140001d92:	xor    eax,eax
   140001d94:	mov    WORD PTR [rsp+0x30],ax
   140001d99:	mov    DWORD PTR [rsp+0x34],0x0
   140001da1:	mov    rax,QWORD PTR [rsp+0x60]
   140001da6:	mov    QWORD PTR [rsp+0x20],rax
   140001dab:	lea    r9,[rsp+0x34]
   140001db0:	mov    r8d,0x1
   140001db6:	lea    rdx,[rsp+0x50]
   140001dbb:	lea    rcx,[rsp+0x30]
   140001dc0:	call   0x140019d30
   140001dc5:	mov    ax,WORD PTR [rsp+0x30]
   140001dca:	add    rsp,0x48
   140001dce:	ret    
   140001dcf:	int3   
   140001dd0:	mov    QWORD PTR [rsp+0x18],r8
   140001dd5:	mov    QWORD PTR [rsp+0x10],rdx
   140001dda:	mov    QWORD PTR [rsp+0x8],rcx
   140001ddf:	sub    rsp,0x88
   140001de6:	mov    DWORD PTR [rsp+0x68],0x0
   140001dee:	mov    rcx,QWORD PTR [rsp+0x90]
   140001df6:	call   0x14001c650
   140001dfb:	add    rax,0x1
   140001dff:	mov    QWORD PTR [rsp+0x70],rax
   140001e04:	mov    rax,QWORD PTR [rsp+0x70]
   140001e09:	mov    QWORD PTR [rsp+0x48],rax
   140001e0e:	mov    QWORD PTR [rsp+0x38],0x0
   140001e17:	mov    rax,QWORD PTR [rsp+0x90]
   140001e1f:	mov    QWORD PTR [rsp+0x30],rax
   140001e24:	jmp    0x140001e58
   140001e26:	movsxd rcx,DWORD PTR [rsp+0x50]
   140001e2b:	mov    rax,QWORD PTR [rsp+0x48]
   140001e30:	sub    rax,rcx
   140001e33:	mov    QWORD PTR [rsp+0x48],rax
   140001e38:	movsxd rcx,DWORD PTR [rsp+0x50]
   140001e3d:	mov    rax,QWORD PTR [rsp+0x30]
   140001e42:	add    rax,rcx
   140001e45:	mov    QWORD PTR [rsp+0x30],rax
   140001e4a:	mov    rax,QWORD PTR [rsp+0x38]
   140001e4f:	add    rax,0x1
   140001e53:	mov    QWORD PTR [rsp+0x38],rax
   140001e58:	cmp    QWORD PTR [rsp+0x48],0x0
   140001e5e:	jbe    0x140001e95
   140001e60:	mov    rax,QWORD PTR [rsp+0xa0]
   140001e68:	mov    QWORD PTR [rsp+0x20],rax
   140001e6d:	lea    r9,[rsp+0x68]
   140001e72:	mov    r8,QWORD PTR [rsp+0x48]
   140001e77:	mov    rdx,QWORD PTR [rsp+0x30]
   140001e7c:	lea    rcx,[rsp+0x60]
   140001e81:	call   0x140019d30
   140001e86:	mov    DWORD PTR [rsp+0x50],eax
   140001e8a:	cmp    DWORD PTR [rsp+0x50],0x0
   140001e8f:	jg     0x140001e93
   140001e91:	jmp    0x140001e95
   140001e93:	jmp    0x140001e26
   140001e95:	mov    rax,QWORD PTR [rsp+0x38]
   140001e9a:	add    rax,0x1
   140001e9e:	mov    QWORD PTR [rsp+0x38],rax
   140001ea3:	mov    eax,0x2
   140001ea8:	mul    QWORD PTR [rsp+0x38]
   140001ead:	mov    rcx,rax
   140001eb0:	mov    rax,0xffffffffffffffff
   140001eb7:	cmovo  rcx,rax
   140001ebb:	call   0x140019f20
   140001ec0:	mov    QWORD PTR [rsp+0x78],rax
   140001ec5:	mov    rax,QWORD PTR [rsp+0x78]
   140001eca:	mov    QWORD PTR [rsp+0x40],rax
   140001ecf:	mov    rax,QWORD PTR [rsp+0x40]
   140001ed4:	mov    QWORD PTR [rsp+0x58],rax
   140001ed9:	mov    DWORD PTR [rsp+0x64],0x0
   140001ee1:	jmp    0x140001f29
   140001ee3:	movsxd rcx,DWORD PTR [rsp+0x50]
   140001ee8:	mov    rax,QWORD PTR [rsp+0x48]
   140001eed:	sub    rax,rcx
   140001ef0:	mov    QWORD PTR [rsp+0x48],rax
   140001ef5:	movsxd rcx,DWORD PTR [rsp+0x50]
   140001efa:	mov    rax,QWORD PTR [rsp+0x90]
   140001f02:	add    rax,rcx
   140001f05:	mov    QWORD PTR [rsp+0x90],rax
   140001f0d:	mov    rax,QWORD PTR [rsp+0x38]
   140001f12:	sub    rax,0x1
   140001f16:	mov    QWORD PTR [rsp+0x38],rax
   140001f1b:	mov    rax,QWORD PTR [rsp+0x58]
   140001f20:	add    rax,0x2
   140001f24:	mov    QWORD PTR [rsp+0x58],rax
   140001f29:	cmp    QWORD PTR [rsp+0x38],0x0
   140001f2f:	jbe    0x140001f6c
   140001f31:	mov    rax,QWORD PTR [rsp+0xa0]
   140001f39:	mov    QWORD PTR [rsp+0x20],rax
   140001f3e:	lea    r9,[rsp+0x64]
   140001f43:	mov    r8,QWORD PTR [rsp+0x70]
   140001f48:	mov    rdx,QWORD PTR [rsp+0x90]
   140001f50:	mov    rcx,QWORD PTR [rsp+0x58]
   140001f55:	call   0x140019d30
   140001f5a:	mov    DWORD PTR [rsp+0x50],eax
   140001f5e:	cmp    DWORD PTR [rsp+0x50],0x0
   140001f63:	jg     0x140001f67
   140001f65:	jmp    0x140001f6c
   140001f67:	jmp    0x140001ee3
   140001f6c:	xor    ecx,ecx
   140001f6e:	mov    rax,QWORD PTR [rsp+0x58]
   140001f73:	mov    WORD PTR [rax],cx
   140001f76:	mov    rax,QWORD PTR [rsp+0x40]
   140001f7b:	add    rsp,0x88
   140001f82:	ret    
   140001f83:	int3   
   140001f84:	int3   
   140001f85:	int3   
   140001f86:	int3   
   140001f87:	int3   
   140001f88:	int3   
   140001f89:	int3   
   140001f8a:	int3   
   140001f8b:	int3   
   140001f8c:	int3   
   140001f8d:	int3   
   140001f8e:	int3   
   140001f8f:	int3   
   140001f90:	mov    QWORD PTR [rsp+0x10],rdx
   140001f95:	mov    QWORD PTR [rsp+0x8],rcx
   140001f9a:	sub    rsp,0x28
   140001f9e:	mov    rdx,QWORD PTR [rsp+0x38]
   140001fa3:	mov    rcx,QWORD PTR [rsp+0x30]
   140001fa8:	call   0x140001ae0
   140001fad:	mov    r11,QWORD PTR [rsp+0x30]
   140001fb2:	lea    rax,[rip+0x3891f]        # 0x14003a8d8
   140001fb9:	mov    QWORD PTR [r11],rax
   140001fbc:	mov    rax,QWORD PTR [rsp+0x30]
   140001fc1:	add    rsp,0x28
   140001fc5:	ret    
   140001fc6:	int3   
   140001fc7:	int3   
   140001fc8:	int3   
   140001fc9:	int3   
   140001fca:	int3   
   140001fcb:	int3   
   140001fcc:	int3   
   140001fcd:	int3   
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	mov    QWORD PTR [rsp+0x8],rcx
   140001fd5:	sub    rsp,0x28
   140001fd9:	mov    rcx,QWORD PTR [rsp+0x30]
   140001fde:	lea    rax,[rip+0x388f3]        # 0x14003a8d8
   140001fe5:	mov    QWORD PTR [rcx],rax
   140001fe8:	mov    rcx,QWORD PTR [rsp+0x30]
   140001fed:	call   0x140001ac0
   140001ff2:	add    rsp,0x28
   140001ff6:	ret    
   140001ff7:	int3   
   140001ff8:	int3   
   140001ff9:	int3   
   140001ffa:	int3   
   140001ffb:	int3   
   140001ffc:	int3   
   140001ffd:	int3   
   140001ffe:	int3   
   140001fff:	int3   
   140002000:	mov    DWORD PTR [rsp+0x10],edx
   140002004:	mov    QWORD PTR [rsp+0x8],rcx
   140002009:	sub    rsp,0x28
   14000200d:	mov    rcx,QWORD PTR [rsp+0x30]
   140002012:	call   0x140001fd0
   140002017:	mov    eax,DWORD PTR [rsp+0x38]
   14000201b:	and    eax,0x1
   14000201e:	test   eax,eax
   140002020:	je     0x14000202c
   140002022:	mov    rcx,QWORD PTR [rsp+0x30]
   140002027:	call   0x14001c4dc
   14000202c:	mov    rax,QWORD PTR [rsp+0x30]
   140002031:	add    rsp,0x28
   140002035:	ret    
   140002036:	int3   
   140002037:	int3   
   140002038:	int3   
   140002039:	int3   
   14000203a:	int3   
   14000203b:	int3   
   14000203c:	int3   
   14000203d:	int3   
   14000203e:	int3   
   14000203f:	int3   
   140002040:	mov    QWORD PTR [rsp+0x10],rdx
   140002045:	mov    QWORD PTR [rsp+0x8],rcx
   14000204a:	sub    rsp,0x38
   14000204e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002057:	mov    rdx,QWORD PTR [rsp+0x48]
   14000205c:	mov    rcx,QWORD PTR [rsp+0x40]
   140002061:	call   0x14001c8c4
   140002066:	nop
   140002067:	mov    rcx,QWORD PTR [rsp+0x40]
   14000206c:	lea    rax,[rip+0x386d5]        # 0x14003a748
   140002073:	mov    QWORD PTR [rcx],rax
   140002076:	mov    rdx,QWORD PTR [rsp+0x48]
   14000207b:	add    rdx,0x18
   14000207f:	mov    rcx,QWORD PTR [rsp+0x40]
   140002084:	add    rcx,0x18
   140002088:	call   0x1400031d0
   14000208d:	nop
   14000208e:	mov    rax,QWORD PTR [rsp+0x40]
   140002093:	add    rsp,0x38
   140002097:	ret    
   140002098:	int3   
   140002099:	int3   
   14000209a:	int3   
   14000209b:	int3   
   14000209c:	int3   
   14000209d:	int3   
   14000209e:	int3   
   14000209f:	int3   
   1400020a0:	mov    WORD PTR [rsp+0x18],r8w
   1400020a6:	mov    WORD PTR [rsp+0x10],dx
   1400020ab:	mov    QWORD PTR [rsp+0x8],rcx
   1400020b0:	sub    rsp,0x28
   1400020b4:	mov    rax,QWORD PTR [rsp+0x30]
   1400020b9:	mov    rax,QWORD PTR [rax]
   1400020bc:	movzx  r8d,WORD PTR [rsp+0x40]
   1400020c2:	movzx  edx,WORD PTR [rsp+0x38]
   1400020c7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400020cc:	call   QWORD PTR [rax+0x10]
   1400020cf:	add    rsp,0x28
   1400020d3:	ret    
   1400020d4:	int3   
   1400020d5:	int3   
   1400020d6:	int3   
   1400020d7:	int3   
   1400020d8:	int3   
   1400020d9:	int3   
   1400020da:	int3   
   1400020db:	int3   
   1400020dc:	int3   
   1400020dd:	int3   
   1400020de:	int3   
   1400020df:	int3   
   1400020e0:	mov    BYTE PTR [rsp+0x10],dl
   1400020e4:	mov    QWORD PTR [rsp+0x8],rcx
   1400020e9:	sub    rsp,0x28
   1400020ed:	mov    rax,QWORD PTR [rsp+0x30]
   1400020f2:	mov    rax,QWORD PTR [rax]
   1400020f5:	movzx  edx,BYTE PTR [rsp+0x38]
   1400020fa:	mov    rcx,QWORD PTR [rsp+0x30]
   1400020ff:	call   QWORD PTR [rax+0x50]
   140002102:	add    rsp,0x28
   140002106:	ret    
   140002107:	int3   
   140002108:	int3   
   140002109:	int3   
   14000210a:	int3   
   14000210b:	int3   
   14000210c:	int3   
   14000210d:	int3   
   14000210e:	int3   
   14000210f:	int3   
   140002110:	mov    QWORD PTR [rsp+0x18],r8
   140002115:	mov    QWORD PTR [rsp+0x10],rdx
   14000211a:	mov    QWORD PTR [rsp+0x8],rcx
   14000211f:	sub    rsp,0x28
   140002123:	mov    rdx,QWORD PTR [rsp+0x40]
   140002128:	mov    rcx,QWORD PTR [rsp+0x30]
   14000212d:	call   0x140001f90
   140002132:	mov    r11,QWORD PTR [rsp+0x30]
   140002137:	lea    rax,[rip+0x387da]        # 0x14003a918
   14000213e:	mov    QWORD PTR [r11],rax
   140002141:	mov    rdx,QWORD PTR [rsp+0x38]
   140002146:	mov    rcx,QWORD PTR [rsp+0x30]
   14000214b:	call   0x140002310
   140002150:	mov    rax,QWORD PTR [rsp+0x30]
   140002155:	add    rsp,0x28
   140002159:	ret    
   14000215a:	int3   
   14000215b:	int3   
   14000215c:	int3   
   14000215d:	int3   
   14000215e:	int3   
   14000215f:	int3   
   140002160:	mov    QWORD PTR [rsp+0x10],rdx
   140002165:	mov    QWORD PTR [rsp+0x8],rcx
   14000216a:	sub    rsp,0x138
   140002171:	mov    QWORD PTR [rsp+0x108],0xfffffffffffffffe
   14000217d:	mov    DWORD PTR [rsp+0x100],0x0
   140002188:	cmp    QWORD PTR [rsp+0x140],0x0
   140002191:	je     0x1400022b9
   140002197:	mov    rax,QWORD PTR [rsp+0x140]
   14000219f:	cmp    QWORD PTR [rax],0x0
   1400021a3:	jne    0x1400022b9
   1400021a9:	mov    ecx,0x30
   1400021ae:	call   0x14001cb1c
   1400021b3:	mov    QWORD PTR [rsp+0x28],rax
   1400021b8:	cmp    QWORD PTR [rsp+0x28],0x0
   1400021be:	je     0x14000224c
   1400021c4:	lea    rdx,[rsp+0xd8]
   1400021cc:	mov    rcx,QWORD PTR [rsp+0x148]
   1400021d4:	call   0x140001bf0
   1400021d9:	mov    QWORD PTR [rsp+0x110],rax
   1400021e1:	mov    rax,QWORD PTR [rsp+0x110]
   1400021e9:	mov    QWORD PTR [rsp+0x118],rax
   1400021f1:	mov    eax,DWORD PTR [rsp+0x100]
   1400021f8:	or     eax,0x1
   1400021fb:	mov    DWORD PTR [rsp+0x100],eax
   140002202:	mov    rdx,QWORD PTR [rsp+0x118]
   14000220a:	lea    rcx,[rsp+0x30]
   14000220f:	call   0x140001740
   140002214:	mov    QWORD PTR [rsp+0x120],rax
   14000221c:	mov    eax,DWORD PTR [rsp+0x100]
   140002223:	or     eax,0x2
   140002226:	mov    DWORD PTR [rsp+0x100],eax
   14000222d:	xor    r8d,r8d
   140002230:	mov    rdx,QWORD PTR [rsp+0x120]
   140002238:	mov    rcx,QWORD PTR [rsp+0x28]
   14000223d:	call   0x140002110
   140002242:	mov    QWORD PTR [rsp+0x128],rax
   14000224a:	jmp    0x140002258
   14000224c:	mov    QWORD PTR [rsp+0x128],0x0
   140002258:	mov    rax,QWORD PTR [rsp+0x128]
   140002260:	mov    QWORD PTR [rsp+0x20],rax
   140002265:	mov    rcx,QWORD PTR [rsp+0x140]
   14000226d:	mov    rax,QWORD PTR [rsp+0x20]
   140002272:	mov    QWORD PTR [rcx],rax
   140002275:	mov    eax,DWORD PTR [rsp+0x100]
   14000227c:	and    eax,0x2
   14000227f:	test   eax,eax
   140002281:	je     0x140002296
   140002283:	and    DWORD PTR [rsp+0x100],0xfffffffd
   14000228b:	lea    rcx,[rsp+0x30]
   140002290:	call   0x1400017c0
   140002295:	nop
   140002296:	mov    eax,DWORD PTR [rsp+0x100]
   14000229d:	and    eax,0x1
   1400022a0:	test   eax,eax
   1400022a2:	je     0x1400022b9
   1400022a4:	and    DWORD PTR [rsp+0x100],0xfffffffe
   1400022ac:	lea    rcx,[rsp+0xd8]
   1400022b4:	call   0x140003220
   1400022b9:	movabs rax,0x2
   1400022c3:	add    rsp,0x138
   1400022ca:	ret    
   1400022cb:	int3   
   1400022cc:	int3   
   1400022cd:	int3   
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400022d5:	sub    rsp,0x28
   1400022d9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400022de:	lea    rax,[rip+0x38633]        # 0x14003a918
   1400022e5:	mov    QWORD PTR [rcx],rax
   1400022e8:	mov    rax,QWORD PTR [rsp+0x30]
   1400022ed:	cmp    DWORD PTR [rax+0x20],0x0
   1400022f1:	je     0x140002301
   1400022f3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400022f8:	mov    rcx,QWORD PTR [rcx+0x18]
   1400022fc:	call   0x14001ca48
   140002301:	mov    rcx,QWORD PTR [rsp+0x30]
   140002306:	call   0x140001fd0
   14000230b:	add    rsp,0x28
   14000230f:	ret    
   140002310:	mov    QWORD PTR [rsp+0x10],rdx
   140002315:	mov    QWORD PTR [rsp+0x8],rcx
   14000231a:	push   rsi
   14000231b:	push   rdi
   14000231c:	sub    rsp,0x68
   140002320:	lea    rdx,[rsp+0x20]
   140002325:	mov    rcx,QWORD PTR [rsp+0x88]
   14000232d:	call   0x140001830
   140002332:	lea    rdi,[rsp+0x40]
   140002337:	mov    rsi,rax
   14000233a:	mov    ecx,0x18
   14000233f:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140002341:	mov    rdi,QWORD PTR [rsp+0x80]
   140002349:	lea    rsi,[rsp+0x40]
   14000234e:	add    rdi,0x10
   140002352:	mov    ecx,0x18
   140002357:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140002359:	lea    rdx,[rsp+0x38]
   14000235e:	mov    rcx,QWORD PTR [rsp+0x88]
   140002366:	call   0x140001890
   14000236b:	mov    rcx,QWORD PTR [rax]
   14000236e:	mov    rax,QWORD PTR [rsp+0x80]
   140002376:	mov    QWORD PTR [rax+0x28],rcx
   14000237a:	add    rsp,0x68
   14000237e:	pop    rdi
   14000237f:	pop    rsi
   140002380:	ret    
   140002381:	int3   
   140002382:	int3   
   140002383:	int3   
   140002384:	int3   
   140002385:	int3   
   140002386:	int3   
   140002387:	int3   
   140002388:	int3   
   140002389:	int3   
   14000238a:	int3   
   14000238b:	int3   
   14000238c:	int3   
   14000238d:	int3   
   14000238e:	int3   
   14000238f:	int3   
   140002390:	mov    WORD PTR [rsp+0x18],r8w
   140002396:	mov    WORD PTR [rsp+0x10],dx
   14000239b:	mov    QWORD PTR [rsp+0x8],rcx
   1400023a0:	sub    rsp,0x38
   1400023a4:	mov    rdx,QWORD PTR [rsp+0x40]
   1400023a9:	add    rdx,0x10
   1400023ad:	movzx  ecx,WORD PTR [rsp+0x50]
   1400023b2:	call   0x140019f28
   1400023b7:	cwde   
   1400023b8:	movsx  ecx,WORD PTR [rsp+0x48]
   1400023bd:	and    eax,ecx
   1400023bf:	test   eax,eax
   1400023c1:	je     0x1400023cd
   1400023c3:	mov    DWORD PTR [rsp+0x20],0x1
   1400023cb:	jmp    0x1400023d5
   1400023cd:	mov    DWORD PTR [rsp+0x20],0x0
   1400023d5:	mov    al,BYTE PTR [rsp+0x20]
   1400023d9:	add    rsp,0x38
   1400023dd:	ret    
   1400023de:	int3   
   1400023df:	int3   
   1400023e0:	mov    QWORD PTR [rsp+0x20],r9
   1400023e5:	mov    QWORD PTR [rsp+0x18],r8
   1400023ea:	mov    QWORD PTR [rsp+0x10],rdx
   1400023ef:	mov    QWORD PTR [rsp+0x8],rcx
   1400023f4:	sub    rsp,0x28
   1400023f8:	mov    r9,QWORD PTR [rsp+0x30]
   1400023fd:	add    r9,0x10
   140002401:	mov    r8,QWORD PTR [rsp+0x48]
   140002406:	mov    rdx,QWORD PTR [rsp+0x40]
   14000240b:	mov    rcx,QWORD PTR [rsp+0x38]
   140002410:	call   0x140019f70
   140002415:	add    rsp,0x28
   140002419:	ret    
   14000241a:	int3   
   14000241b:	int3   
   14000241c:	int3   
   14000241d:	int3   
   14000241e:	int3   
   14000241f:	int3   
   140002420:	mov    QWORD PTR [rsp+0x20],r9
   140002425:	mov    QWORD PTR [rsp+0x18],r8
   14000242a:	mov    WORD PTR [rsp+0x10],dx
   14000242f:	mov    QWORD PTR [rsp+0x8],rcx
   140002434:	sub    rsp,0x28
   140002438:	jmp    0x140002448
   14000243a:	mov    rax,QWORD PTR [rsp+0x40]
   14000243f:	add    rax,0x2
   140002443:	mov    QWORD PTR [rsp+0x40],rax
   140002448:	mov    rax,QWORD PTR [rsp+0x48]
   14000244d:	cmp    QWORD PTR [rsp+0x40],rax
   140002452:	je     0x140002475
   140002454:	mov    rax,QWORD PTR [rsp+0x40]
   140002459:	movzx  r8d,WORD PTR [rax]
   14000245d:	movzx  edx,WORD PTR [rsp+0x38]
   140002462:	mov    rcx,QWORD PTR [rsp+0x30]
   140002467:	call   0x1400020a0
   14000246c:	movzx  eax,al
   14000246f:	test   eax,eax
   140002471:	jne    0x140002475
   140002473:	jmp    0x14000243a
   140002475:	mov    rax,QWORD PTR [rsp+0x40]
   14000247a:	add    rsp,0x28
   14000247e:	ret    
   14000247f:	int3   
   140002480:	mov    QWORD PTR [rsp+0x20],r9
   140002485:	mov    QWORD PTR [rsp+0x18],r8
   14000248a:	mov    WORD PTR [rsp+0x10],dx
   14000248f:	mov    QWORD PTR [rsp+0x8],rcx
   140002494:	sub    rsp,0x28
   140002498:	jmp    0x1400024a8
   14000249a:	mov    rax,QWORD PTR [rsp+0x40]
   14000249f:	add    rax,0x2
   1400024a3:	mov    QWORD PTR [rsp+0x40],rax
   1400024a8:	mov    rax,QWORD PTR [rsp+0x48]
   1400024ad:	cmp    QWORD PTR [rsp+0x40],rax
   1400024b2:	je     0x1400024d5
   1400024b4:	mov    rax,QWORD PTR [rsp+0x40]
   1400024b9:	movzx  r8d,WORD PTR [rax]
   1400024bd:	movzx  edx,WORD PTR [rsp+0x38]
   1400024c2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400024c7:	call   0x1400020a0
   1400024cc:	movzx  eax,al
   1400024cf:	test   eax,eax
   1400024d1:	je     0x1400024d5
   1400024d3:	jmp    0x14000249a
   1400024d5:	mov    rax,QWORD PTR [rsp+0x40]
   1400024da:	add    rsp,0x28
   1400024de:	ret    
   1400024df:	int3   
   1400024e0:	mov    WORD PTR [rsp+0x10],dx
   1400024e5:	mov    QWORD PTR [rsp+0x8],rcx
   1400024ea:	sub    rsp,0x28
   1400024ee:	mov    rdx,QWORD PTR [rsp+0x30]
   1400024f3:	add    rdx,0x10
   1400024f7:	movzx  ecx,WORD PTR [rsp+0x38]
   1400024fc:	call   0x140019fb4
   140002501:	add    rsp,0x28
   140002505:	ret    
   140002506:	int3   
   140002507:	int3   
   140002508:	int3   
   140002509:	int3   
   14000250a:	int3   
   14000250b:	int3   
   14000250c:	int3   
   14000250d:	int3   
   14000250e:	int3   
   14000250f:	int3   
   140002510:	mov    QWORD PTR [rsp+0x18],r8
   140002515:	mov    QWORD PTR [rsp+0x10],rdx
   14000251a:	mov    QWORD PTR [rsp+0x8],rcx
   14000251f:	sub    rsp,0x28
   140002523:	jmp    0x140002533
   140002525:	mov    rax,QWORD PTR [rsp+0x38]
   14000252a:	add    rax,0x2
   14000252e:	mov    QWORD PTR [rsp+0x38],rax
   140002533:	mov    rax,QWORD PTR [rsp+0x40]
   140002538:	cmp    QWORD PTR [rsp+0x38],rax
   14000253d:	je     0x140002564
   14000253f:	mov    rdx,QWORD PTR [rsp+0x30]
   140002544:	add    rdx,0x10
   140002548:	mov    rax,QWORD PTR [rsp+0x38]
   14000254d:	movzx  ecx,WORD PTR [rax]
   140002550:	call   0x140019fb4
   140002555:	movzx  r11d,ax
   140002559:	mov    rax,QWORD PTR [rsp+0x38]
   14000255e:	mov    WORD PTR [rax],r11w
   140002562:	jmp    0x140002525
   140002564:	mov    rax,QWORD PTR [rsp+0x38]
   140002569:	add    rsp,0x28
   14000256d:	ret    
   14000256e:	int3   
   14000256f:	int3   
   140002570:	mov    WORD PTR [rsp+0x10],dx
   140002575:	mov    QWORD PTR [rsp+0x8],rcx
   14000257a:	sub    rsp,0x28
   14000257e:	mov    rdx,QWORD PTR [rsp+0x30]
   140002583:	add    rdx,0x10
   140002587:	movzx  ecx,WORD PTR [rsp+0x38]
   14000258c:	call   0x14001a030
   140002591:	add    rsp,0x28
   140002595:	ret    
   140002596:	int3   
   140002597:	int3   
   140002598:	int3   
   140002599:	int3   
   14000259a:	int3   
   14000259b:	int3   
   14000259c:	int3   
   14000259d:	int3   
   14000259e:	int3   
   14000259f:	int3   
   1400025a0:	mov    QWORD PTR [rsp+0x18],r8
   1400025a5:	mov    QWORD PTR [rsp+0x10],rdx
   1400025aa:	mov    QWORD PTR [rsp+0x8],rcx
   1400025af:	sub    rsp,0x28
   1400025b3:	jmp    0x1400025c3
   1400025b5:	mov    rax,QWORD PTR [rsp+0x38]
   1400025ba:	add    rax,0x2
   1400025be:	mov    QWORD PTR [rsp+0x38],rax
   1400025c3:	mov    rax,QWORD PTR [rsp+0x40]
   1400025c8:	cmp    QWORD PTR [rsp+0x38],rax
   1400025cd:	je     0x1400025f4
   1400025cf:	mov    rdx,QWORD PTR [rsp+0x30]
   1400025d4:	add    rdx,0x10
   1400025d8:	mov    rax,QWORD PTR [rsp+0x38]
   1400025dd:	movzx  ecx,WORD PTR [rax]
   1400025e0:	call   0x14001a030
   1400025e5:	movzx  r11d,ax
   1400025e9:	mov    rax,QWORD PTR [rsp+0x38]
   1400025ee:	mov    WORD PTR [rax],r11w
   1400025f2:	jmp    0x1400025b5
   1400025f4:	mov    rax,QWORD PTR [rsp+0x38]
   1400025f9:	add    rsp,0x28
   1400025fd:	ret    
   1400025fe:	int3   
   1400025ff:	int3   
   140002600:	mov    BYTE PTR [rsp+0x10],dl
   140002604:	mov    QWORD PTR [rsp+0x8],rcx
   140002609:	sub    rsp,0x48
   14000260d:	mov    DWORD PTR [rsp+0x30],0x0
   140002615:	mov    rax,QWORD PTR [rsp+0x50]
   14000261a:	add    rax,0x28
   14000261e:	mov    QWORD PTR [rsp+0x20],rax
   140002623:	lea    r9,[rsp+0x30]
   140002628:	mov    r8d,0x1
   14000262e:	lea    rdx,[rsp+0x58]
   140002633:	lea    rcx,[rsp+0x34]
   140002638:	call   0x140019d30
   14000263d:	test   eax,eax
   14000263f:	jge    0x14000264d
   140002641:	mov    eax,0xffff
   140002646:	mov    WORD PTR [rsp+0x38],ax
   14000264b:	jmp    0x140002657
   14000264d:	movzx  eax,WORD PTR [rsp+0x34]
   140002652:	mov    WORD PTR [rsp+0x38],ax
   140002657:	mov    ax,WORD PTR [rsp+0x38]
   14000265c:	add    rsp,0x48
   140002660:	ret    
   140002661:	int3   
   140002662:	int3   
   140002663:	int3   
   140002664:	int3   
   140002665:	int3   
   140002666:	int3   
   140002667:	int3   
   140002668:	int3   
   140002669:	int3   
   14000266a:	int3   
   14000266b:	int3   
   14000266c:	int3   
   14000266d:	int3   
   14000266e:	int3   
   14000266f:	int3   
   140002670:	mov    BYTE PTR [rsp+0x10],dl
   140002674:	mov    QWORD PTR [rsp+0x8],rcx
   140002679:	sub    rsp,0x28
   14000267d:	movzx  edx,BYTE PTR [rsp+0x38]
   140002682:	mov    rcx,QWORD PTR [rsp+0x30]
   140002687:	call   0x140002600
   14000268c:	add    rsp,0x28
   140002690:	ret    
   140002691:	int3   
   140002692:	int3   
   140002693:	int3   
   140002694:	int3   
   140002695:	int3   
   140002696:	int3   
   140002697:	int3   
   140002698:	int3   
   140002699:	int3   
   14000269a:	int3   
   14000269b:	int3   
   14000269c:	int3   
   14000269d:	int3   
   14000269e:	int3   
   14000269f:	int3   
   1400026a0:	mov    QWORD PTR [rsp+0x20],r9
   1400026a5:	mov    QWORD PTR [rsp+0x18],r8
   1400026aa:	mov    QWORD PTR [rsp+0x10],rdx
   1400026af:	mov    QWORD PTR [rsp+0x8],rcx
   1400026b4:	sub    rsp,0x38
   1400026b8:	mov    rax,QWORD PTR [rsp+0x48]
   1400026bd:	mov    rcx,QWORD PTR [rsp+0x50]
   1400026c2:	sub    rcx,rax
   1400026c5:	mov    rax,QWORD PTR [rsp+0x40]
   1400026ca:	mov    rax,QWORD PTR [rax]
   1400026cd:	mov    QWORD PTR [rsp+0x20],rcx
   1400026d2:	mov    r9,QWORD PTR [rsp+0x58]
   1400026d7:	mov    r8,QWORD PTR [rsp+0x50]
   1400026dc:	mov    rdx,QWORD PTR [rsp+0x48]
   1400026e1:	mov    rcx,QWORD PTR [rsp+0x40]
   1400026e6:	call   QWORD PTR [rax+0x58]
   1400026e9:	add    rsp,0x38
   1400026ed:	ret    
   1400026ee:	int3   
   1400026ef:	int3   
   1400026f0:	mov    QWORD PTR [rsp+0x20],r9
   1400026f5:	mov    QWORD PTR [rsp+0x18],r8
   1400026fa:	mov    QWORD PTR [rsp+0x10],rdx
   1400026ff:	mov    QWORD PTR [rsp+0x8],rcx
   140002704:	sub    rsp,0x28
   140002708:	mov    rcx,QWORD PTR [rsp+0x38]
   14000270d:	mov    rax,QWORD PTR [rsp+0x40]
   140002712:	sub    rax,rcx
   140002715:	cmp    QWORD PTR [rsp+0x50],rax
   14000271a:	jae    0x140002721
   14000271c:	call   0x14001cd78
   140002721:	xor    eax,eax
   140002723:	test   eax,eax
   140002725:	jne    0x140002721
   140002727:	jmp    0x140002745
   140002729:	mov    rax,QWORD PTR [rsp+0x38]
   14000272e:	add    rax,0x1
   140002732:	mov    QWORD PTR [rsp+0x38],rax
   140002737:	mov    rax,QWORD PTR [rsp+0x48]
   14000273c:	add    rax,0x2
   140002740:	mov    QWORD PTR [rsp+0x48],rax
   140002745:	mov    rax,QWORD PTR [rsp+0x40]
   14000274a:	cmp    QWORD PTR [rsp+0x38],rax
   14000274f:	je     0x140002772
   140002751:	mov    rax,QWORD PTR [rsp+0x38]
   140002756:	movzx  edx,BYTE PTR [rax]
   140002759:	mov    rcx,QWORD PTR [rsp+0x30]
   14000275e:	call   0x140002600
   140002763:	movzx  r11d,ax
   140002767:	mov    rax,QWORD PTR [rsp+0x48]
   14000276c:	mov    WORD PTR [rax],r11w
   140002770:	jmp    0x140002729
   140002772:	mov    rax,QWORD PTR [rsp+0x38]
   140002777:	add    rsp,0x28
   14000277b:	ret    
   14000277c:	int3   
   14000277d:	int3   
   14000277e:	int3   
   14000277f:	int3   
   140002780:	mov    BYTE PTR [rsp+0x18],r8b
   140002785:	mov    WORD PTR [rsp+0x10],dx
   14000278a:	mov    QWORD PTR [rsp+0x8],rcx
   14000278f:	sub    rsp,0x48
   140002793:	mov    rax,QWORD PTR [rip+0x46cc6]        # 0x140049460
   14000279a:	xor    rax,rsp
   14000279d:	mov    QWORD PTR [rsp+0x38],rax
   1400027a2:	mov    DWORD PTR [rsp+0x30],0x0
   1400027aa:	mov    r9,QWORD PTR [rsp+0x50]
   1400027af:	add    r9,0x28
   1400027b3:	lea    r8,[rsp+0x30]
   1400027b8:	movzx  edx,WORD PTR [rsp+0x58]
   1400027bd:	lea    rcx,[rsp+0x28]
   1400027c2:	call   0x140019aa4
   1400027c7:	cmp    eax,0x1
   1400027ca:	je     0x1400027d7
   1400027cc:	movzx  eax,BYTE PTR [rsp+0x60]
   1400027d1:	mov    BYTE PTR [rsp+0x34],al
   1400027d5:	jmp    0x1400027e0
   1400027d7:	movzx  eax,BYTE PTR [rsp+0x28]
   1400027dc:	mov    BYTE PTR [rsp+0x34],al
   1400027e0:	mov    al,BYTE PTR [rsp+0x34]
   1400027e4:	mov    rcx,QWORD PTR [rsp+0x38]
   1400027e9:	xor    rcx,rsp
   1400027ec:	call   0x14001c500
   1400027f1:	add    rsp,0x48
   1400027f5:	ret    
   1400027f6:	int3   
   1400027f7:	int3   
   1400027f8:	int3   
   1400027f9:	int3   
   1400027fa:	int3   
   1400027fb:	int3   
   1400027fc:	int3   
   1400027fd:	int3   
   1400027fe:	int3   
   1400027ff:	int3   
   140002800:	mov    BYTE PTR [rsp+0x18],r8b
   140002805:	mov    WORD PTR [rsp+0x10],dx
   14000280a:	mov    QWORD PTR [rsp+0x8],rcx
   14000280f:	sub    rsp,0x28
   140002813:	movzx  r8d,BYTE PTR [rsp+0x40]
   140002819:	movzx  edx,WORD PTR [rsp+0x38]
   14000281e:	mov    rcx,QWORD PTR [rsp+0x30]
   140002823:	call   0x140002780
   140002828:	add    rsp,0x28
   14000282c:	ret    
   14000282d:	int3   
   14000282e:	int3   
   14000282f:	int3   
   140002830:	mov    BYTE PTR [rsp+0x20],r9b
   140002835:	mov    QWORD PTR [rsp+0x18],r8
   14000283a:	mov    QWORD PTR [rsp+0x10],rdx
   14000283f:	mov    QWORD PTR [rsp+0x8],rcx
   140002844:	sub    rsp,0x38
   140002848:	mov    rcx,QWORD PTR [rsp+0x48]
   14000284d:	mov    rax,QWORD PTR [rsp+0x50]
   140002852:	sub    rax,rcx
   140002855:	sar    rax,1
   140002858:	mov    r10,QWORD PTR [rsp+0x40]
   14000285d:	mov    r10,QWORD PTR [r10]
   140002860:	mov    QWORD PTR [rsp+0x28],rax
   140002865:	mov    rax,QWORD PTR [rsp+0x60]
   14000286a:	mov    QWORD PTR [rsp+0x20],rax
   14000286f:	movzx  r9d,BYTE PTR [rsp+0x58]
   140002875:	mov    r8,QWORD PTR [rsp+0x50]
   14000287a:	mov    rdx,QWORD PTR [rsp+0x48]
   14000287f:	mov    rcx,QWORD PTR [rsp+0x40]
   140002884:	call   QWORD PTR [r10+0x70]
   140002888:	add    rsp,0x38
   14000288c:	ret    
   14000288d:	int3   
   14000288e:	int3   
   14000288f:	int3   
   140002890:	mov    BYTE PTR [rsp+0x20],r9b
   140002895:	mov    QWORD PTR [rsp+0x18],r8
   14000289a:	mov    QWORD PTR [rsp+0x10],rdx
   14000289f:	mov    QWORD PTR [rsp+0x8],rcx
   1400028a4:	sub    rsp,0x28
   1400028a8:	mov    rcx,QWORD PTR [rsp+0x38]
   1400028ad:	mov    rax,QWORD PTR [rsp+0x40]
   1400028b2:	sub    rax,rcx
   1400028b5:	sar    rax,1
   1400028b8:	cmp    QWORD PTR [rsp+0x58],rax
   1400028bd:	jae    0x1400028c4
   1400028bf:	call   0x14001cd78
   1400028c4:	xor    eax,eax
   1400028c6:	test   eax,eax
   1400028c8:	jne    0x1400028c4
   1400028ca:	jmp    0x1400028e8
   1400028cc:	mov    rax,QWORD PTR [rsp+0x38]
   1400028d1:	add    rax,0x2
   1400028d5:	mov    QWORD PTR [rsp+0x38],rax
   1400028da:	mov    rax,QWORD PTR [rsp+0x50]
   1400028df:	add    rax,0x1
   1400028e3:	mov    QWORD PTR [rsp+0x50],rax
   1400028e8:	mov    rax,QWORD PTR [rsp+0x40]
   1400028ed:	cmp    QWORD PTR [rsp+0x38],rax
   1400028f2:	je     0x14000291a
   1400028f4:	movzx  r8d,BYTE PTR [rsp+0x48]
   1400028fa:	mov    rax,QWORD PTR [rsp+0x38]
   1400028ff:	movzx  edx,WORD PTR [rax]
   140002902:	mov    rcx,QWORD PTR [rsp+0x30]
   140002907:	call   0x140002780
   14000290c:	movzx  r11d,al
   140002910:	mov    rax,QWORD PTR [rsp+0x50]
   140002915:	mov    BYTE PTR [rax],r11b
   140002918:	jmp    0x1400028cc
   14000291a:	mov    rax,QWORD PTR [rsp+0x38]
   14000291f:	add    rsp,0x28
   140002923:	ret    
   140002924:	int3   
   140002925:	int3   
   140002926:	int3   
   140002927:	int3   
   140002928:	int3   
   140002929:	int3   
   14000292a:	int3   
   14000292b:	int3   
   14000292c:	int3   
   14000292d:	int3   
   14000292e:	int3   
   14000292f:	int3   
   140002930:	mov    DWORD PTR [rsp+0x10],edx
   140002934:	mov    QWORD PTR [rsp+0x8],rcx
   140002939:	sub    rsp,0x28
   14000293d:	mov    rcx,QWORD PTR [rsp+0x30]
   140002942:	call   0x1400022d0
   140002947:	mov    eax,DWORD PTR [rsp+0x38]
   14000294b:	and    eax,0x1
   14000294e:	test   eax,eax
   140002950:	je     0x14000295c
   140002952:	mov    rcx,QWORD PTR [rsp+0x30]
   140002957:	call   0x14001c4dc
   14000295c:	mov    rax,QWORD PTR [rsp+0x30]
   140002961:	add    rsp,0x28
   140002965:	ret    
   140002966:	int3   
   140002967:	int3   
   140002968:	int3   
   140002969:	int3   
   14000296a:	int3   
   14000296b:	int3   
   14000296c:	int3   
   14000296d:	int3   
   14000296e:	int3   
   14000296f:	int3   
   140002970:	mov    QWORD PTR [rsp+0x10],rdx
   140002975:	mov    QWORD PTR [rsp+0x8],rcx
   14000297a:	sub    rsp,0x28
   14000297e:	mov    rdx,QWORD PTR [rsp+0x38]
   140002983:	mov    rcx,QWORD PTR [rsp+0x30]
   140002988:	call   0x140001670
   14000298d:	mov    r11,QWORD PTR [rsp+0x30]
   140002992:	lea    rax,[rip+0x381d7]        # 0x14003ab70
   140002999:	mov    QWORD PTR [r11],rax
   14000299c:	mov    rax,QWORD PTR [rsp+0x30]
   1400029a1:	add    rsp,0x28
   1400029a5:	ret    
   1400029a6:	int3   
   1400029a7:	int3   
   1400029a8:	int3   
   1400029a9:	int3   
   1400029aa:	int3   
   1400029ab:	int3   
   1400029ac:	int3   
   1400029ad:	int3   
   1400029ae:	int3   
   1400029af:	int3   
   1400029b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400029b5:	sub    rsp,0x28
   1400029b9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400029be:	lea    rax,[rip+0x381ab]        # 0x14003ab70
   1400029c5:	mov    QWORD PTR [rcx],rax
   1400029c8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400029cd:	call   0x1400016c0
   1400029d2:	add    rsp,0x28
   1400029d6:	ret    
   1400029d7:	int3   
   1400029d8:	int3   
   1400029d9:	int3   
   1400029da:	int3   
   1400029db:	int3   
   1400029dc:	int3   
   1400029dd:	int3   
   1400029de:	int3   
   1400029df:	int3   
   1400029e0:	mov    BYTE PTR [rsp+0x18],r8b
   1400029e5:	mov    DWORD PTR [rsp+0x10],edx
   1400029e9:	mov    QWORD PTR [rsp+0x8],rcx
   1400029ee:	sub    rsp,0x168
   1400029f5:	mov    QWORD PTR [rsp+0x158],0xfffffffffffffffe
   140002a01:	mov    ecx,DWORD PTR [rsp+0x178]
   140002a08:	and    ecx,0x17
   140002a0b:	mov    rax,QWORD PTR [rsp+0x170]
   140002a13:	mov    DWORD PTR [rax+0x10],ecx
   140002a16:	mov    rdx,QWORD PTR [rsp+0x170]
   140002a1e:	mov    rax,QWORD PTR [rsp+0x170]
   140002a26:	mov    ecx,DWORD PTR [rax+0x14]
   140002a29:	mov    eax,DWORD PTR [rdx+0x10]
   140002a2c:	and    eax,ecx
   140002a2e:	test   eax,eax
   140002a30:	jne    0x140002a37
   140002a32:	jmp    0x140002b6d
   140002a37:	movzx  eax,BYTE PTR [rsp+0x180]
   140002a3f:	test   eax,eax
   140002a41:	je     0x140002a52
   140002a43:	xor    edx,edx
   140002a45:	xor    ecx,ecx
   140002a47:	call   0x14001e5c0
   140002a4c:	nop
   140002a4d:	jmp    0x140002b6d
   140002a52:	mov    rdx,QWORD PTR [rsp+0x170]
   140002a5a:	mov    rax,QWORD PTR [rsp+0x170]
   140002a62:	mov    ecx,DWORD PTR [rax+0x14]
   140002a65:	mov    eax,DWORD PTR [rdx+0x10]
   140002a68:	and    eax,ecx
   140002a6a:	and    eax,0x4
   140002a6d:	test   eax,eax
   140002a6f:	je     0x140002ab3
   140002a71:	lea    rdx,[rip+0x3c7c8]        # 0x14003f240
   140002a78:	lea    rcx,[rsp+0x60]
   140002a7d:	call   0x140003170
   140002a82:	nop
   140002a83:	lea    rdx,[rsp+0x60]
   140002a88:	lea    rcx,[rsp+0x20]
   140002a8d:	call   0x140002970
   140002a92:	lea    rdx,[rip+0x44ec7]        # 0x140047960
   140002a99:	lea    rcx,[rsp+0x20]
   140002a9e:	call   0x14001e5c0
   140002aa3:	nop
   140002aa4:	lea    rcx,[rsp+0x60]
   140002aa9:	call   0x140003220
   140002aae:	jmp    0x140002b6d
   140002ab3:	mov    rdx,QWORD PTR [rsp+0x170]
   140002abb:	mov    rax,QWORD PTR [rsp+0x170]
   140002ac3:	mov    ecx,DWORD PTR [rax+0x14]
   140002ac6:	mov    eax,DWORD PTR [rdx+0x10]
   140002ac9:	and    eax,ecx
   140002acb:	and    eax,0x2
   140002ace:	test   eax,eax
   140002ad0:	je     0x140002b20
   140002ad2:	lea    rdx,[rip+0x3c77f]        # 0x14003f258
   140002ad9:	lea    rcx,[rsp+0xc8]
   140002ae1:	call   0x140003170
   140002ae6:	nop
   140002ae7:	lea    rdx,[rsp+0xc8]
   140002aef:	lea    rcx,[rsp+0x88]
   140002af7:	call   0x140002970
   140002afc:	lea    rdx,[rip+0x44e5d]        # 0x140047960
   140002b03:	lea    rcx,[rsp+0x88]
   140002b0b:	call   0x14001e5c0
   140002b10:	nop
   140002b11:	lea    rcx,[rsp+0xc8]
   140002b19:	call   0x140003220
   140002b1e:	jmp    0x140002b6d
   140002b20:	lea    rdx,[rip+0x3c749]        # 0x14003f270
   140002b27:	lea    rcx,[rsp+0x130]
   140002b2f:	call   0x140003170
   140002b34:	nop
   140002b35:	lea    rdx,[rsp+0x130]
   140002b3d:	lea    rcx,[rsp+0xf0]
   140002b45:	call   0x140002970
   140002b4a:	lea    rdx,[rip+0x44e0f]        # 0x140047960
   140002b51:	lea    rcx,[rsp+0xf0]
   140002b59:	call   0x14001e5c0
   140002b5e:	nop
   140002b5f:	lea    rcx,[rsp+0x130]
   140002b67:	call   0x140003220
   140002b6c:	nop
   140002b6d:	add    rsp,0x168
   140002b74:	ret    
   140002b75:	int3   
   140002b76:	int3   
   140002b77:	int3   
   140002b78:	int3   
   140002b79:	int3   
   140002b7a:	int3   
   140002b7b:	int3   
   140002b7c:	int3   
   140002b7d:	int3   
   140002b7e:	int3   
   140002b7f:	int3   
   140002b80:	mov    DWORD PTR [rsp+0x10],edx
   140002b84:	mov    QWORD PTR [rsp+0x8],rcx
   140002b89:	sub    rsp,0x28
   140002b8d:	xor    r8d,r8d
   140002b90:	mov    edx,DWORD PTR [rsp+0x38]
   140002b94:	mov    rcx,QWORD PTR [rsp+0x30]
   140002b99:	call   0x1400029e0
   140002b9e:	add    rsp,0x28
   140002ba2:	ret    
   140002ba3:	int3   
   140002ba4:	int3   
   140002ba5:	int3   
   140002ba6:	int3   
   140002ba7:	int3   
   140002ba8:	int3   
   140002ba9:	int3   
   140002baa:	int3   
   140002bab:	int3   
   140002bac:	int3   
   140002bad:	int3   
   140002bae:	int3   
   140002baf:	int3   
   140002bb0:	mov    QWORD PTR [rsp+0x8],rcx
   140002bb5:	mov    rax,QWORD PTR [rsp+0x8]
   140002bba:	mov    eax,DWORD PTR [rax+0x10]
   140002bbd:	ret    
   140002bbe:	int3   
   140002bbf:	int3   
   140002bc0:	mov    QWORD PTR [rsp+0x8],rcx
   140002bc5:	sub    rsp,0x38
   140002bc9:	mov    rcx,QWORD PTR [rsp+0x40]
   140002bce:	call   0x140002bb0
   140002bd3:	test   eax,eax
   140002bd5:	jne    0x140002be1
   140002bd7:	mov    DWORD PTR [rsp+0x20],0x1
   140002bdf:	jmp    0x140002be9
   140002be1:	mov    DWORD PTR [rsp+0x20],0x0
   140002be9:	mov    al,BYTE PTR [rsp+0x20]
   140002bed:	add    rsp,0x38
   140002bf1:	ret    
   140002bf2:	int3   
   140002bf3:	int3   
   140002bf4:	int3   
   140002bf5:	int3   
   140002bf6:	int3   
   140002bf7:	int3   
   140002bf8:	int3   
   140002bf9:	int3   
   140002bfa:	int3   
   140002bfb:	int3   
   140002bfc:	int3   
   140002bfd:	int3   
   140002bfe:	int3   
   140002bff:	int3   
   140002c00:	mov    QWORD PTR [rsp+0x8],rcx
   140002c05:	sub    rsp,0x38
   140002c09:	mov    rcx,QWORD PTR [rsp+0x40]
   140002c0e:	call   0x140002bb0
   140002c13:	and    eax,0x6
   140002c16:	test   eax,eax
   140002c18:	je     0x140002c24
   140002c1a:	mov    DWORD PTR [rsp+0x20],0x1
   140002c22:	jmp    0x140002c2c
   140002c24:	mov    DWORD PTR [rsp+0x20],0x0
   140002c2c:	mov    al,BYTE PTR [rsp+0x20]
   140002c30:	add    rsp,0x38
   140002c34:	ret    
   140002c35:	int3   
   140002c36:	int3   
   140002c37:	int3   
   140002c38:	int3   
   140002c39:	int3   
   140002c3a:	int3   
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	mov    QWORD PTR [rsp+0x8],rcx
   140002c45:	mov    rax,QWORD PTR [rsp+0x8]
   140002c4a:	mov    eax,DWORD PTR [rax+0x18]
   140002c4d:	ret    
   140002c4e:	int3   
   140002c4f:	int3   
   140002c50:	mov    QWORD PTR [rsp+0x8],rcx
   140002c55:	mov    rax,QWORD PTR [rsp+0x8]
   140002c5a:	mov    rax,QWORD PTR [rax+0x28]
   140002c5e:	ret    
   140002c5f:	int3   
   140002c60:	mov    QWORD PTR [rsp+0x10],rdx
   140002c65:	mov    QWORD PTR [rsp+0x8],rcx
   140002c6a:	sub    rsp,0x18
   140002c6e:	mov    rax,QWORD PTR [rsp+0x20]
   140002c73:	mov    rax,QWORD PTR [rax+0x28]
   140002c77:	mov    QWORD PTR [rsp],rax
   140002c7b:	mov    rcx,QWORD PTR [rsp+0x20]
   140002c80:	mov    rax,QWORD PTR [rsp+0x28]
   140002c85:	mov    QWORD PTR [rcx+0x28],rax
   140002c89:	mov    rax,QWORD PTR [rsp]
   140002c8d:	add    rsp,0x18
   140002c91:	ret    
   140002c92:	int3   
   140002c93:	int3   
   140002c94:	int3   
   140002c95:	int3   
   140002c96:	int3   
   140002c97:	int3   
   140002c98:	int3   
   140002c99:	int3   
   140002c9a:	int3   
   140002c9b:	int3   
   140002c9c:	int3   
   140002c9d:	int3   
   140002c9e:	int3   
   140002c9f:	int3   
   140002ca0:	mov    QWORD PTR [rsp+0x10],rdx
   140002ca5:	mov    QWORD PTR [rsp+0x8],rcx
   140002caa:	sub    rsp,0x28
   140002cae:	mov    rdx,QWORD PTR [rsp+0x30]
   140002cb3:	mov    rdx,QWORD PTR [rdx+0x40]
   140002cb7:	mov    rcx,QWORD PTR [rsp+0x38]
   140002cbc:	call   0x140001b40
   140002cc1:	mov    rax,QWORD PTR [rsp+0x38]
   140002cc6:	add    rsp,0x28
   140002cca:	ret    
   140002ccb:	int3   
   140002ccc:	int3   
   140002ccd:	int3   
   140002cce:	int3   
   140002ccf:	int3   
   140002cd0:	mov    QWORD PTR [rsp+0x8],rcx
   140002cd5:	sub    rsp,0x28
   140002cd9:	mov    rcx,QWORD PTR [rsp+0x30]
   140002cde:	lea    rax,[rip+0x37c03]        # 0x14003a8e8
   140002ce5:	mov    QWORD PTR [rcx],rax
   140002ce8:	mov    rcx,QWORD PTR [rsp+0x30]
   140002ced:	call   0x14001a194
   140002cf2:	add    rsp,0x28
   140002cf6:	ret    
   140002cf7:	int3   
   140002cf8:	int3   
   140002cf9:	int3   
   140002cfa:	int3   
   140002cfb:	int3   
   140002cfc:	int3   
   140002cfd:	int3   
   140002cfe:	int3   
   140002cff:	int3   
   140002d00:	mov    QWORD PTR [rsp+0x8],rcx
   140002d05:	mov    rcx,QWORD PTR [rsp+0x8]
   140002d0a:	lea    rax,[rip+0x37bd7]        # 0x14003a8e8
   140002d11:	mov    QWORD PTR [rcx],rax
   140002d14:	mov    rax,QWORD PTR [rsp+0x8]
   140002d19:	ret    
   140002d1a:	int3   
   140002d1b:	int3   
   140002d1c:	int3   
   140002d1d:	int3   
   140002d1e:	int3   
   140002d1f:	int3   
   140002d20:	mov    QWORD PTR [rsp+0x8],rcx
   140002d25:	sub    rsp,0x38
   140002d29:	mov    rax,QWORD PTR [rsp+0x40]
   140002d2e:	mov    QWORD PTR [rax+0x40],0x0
   140002d36:	mov    rax,QWORD PTR [rsp+0x40]
   140002d3b:	mov    QWORD PTR [rax+0x8],0x0
   140002d43:	mov    rax,QWORD PTR [rsp+0x40]
   140002d48:	mov    DWORD PTR [rax+0x14],0x0
   140002d4f:	mov    rax,QWORD PTR [rsp+0x40]
   140002d54:	mov    DWORD PTR [rax+0x18],0x201
   140002d5b:	mov    rax,QWORD PTR [rsp+0x40]
   140002d60:	mov    QWORD PTR [rax+0x20],0x6
   140002d68:	mov    rax,QWORD PTR [rsp+0x40]
   140002d6d:	mov    QWORD PTR [rax+0x28],0x0
   140002d75:	mov    rax,QWORD PTR [rsp+0x40]
   140002d7a:	mov    QWORD PTR [rax+0x30],0x0
   140002d82:	mov    rax,QWORD PTR [rsp+0x40]
   140002d87:	mov    QWORD PTR [rax+0x38],0x0
   140002d8f:	xor    edx,edx
   140002d91:	mov    rcx,QWORD PTR [rsp+0x40]
   140002d96:	call   0x140002b80
   140002d9b:	mov    ecx,0x8
   140002da0:	call   0x14001cb1c
   140002da5:	mov    QWORD PTR [rsp+0x20],rax
   140002daa:	cmp    QWORD PTR [rsp+0x20],0x0
   140002db0:	je     0x140002dc3
   140002db2:	mov    rcx,QWORD PTR [rsp+0x20]
   140002db7:	call   0x140001b10
   140002dbc:	mov    QWORD PTR [rsp+0x28],rax
   140002dc1:	jmp    0x140002dcc
   140002dc3:	mov    QWORD PTR [rsp+0x28],0x0
   140002dcc:	mov    rcx,QWORD PTR [rsp+0x40]
   140002dd1:	mov    rax,QWORD PTR [rsp+0x28]
   140002dd6:	mov    QWORD PTR [rcx+0x40],rax
   140002dda:	add    rsp,0x38
   140002dde:	ret    
   140002ddf:	int3   
   140002de0:	mov    DWORD PTR [rsp+0x10],edx
   140002de4:	mov    QWORD PTR [rsp+0x8],rcx
   140002de9:	sub    rsp,0x28
   140002ded:	mov    rcx,QWORD PTR [rsp+0x30]
   140002df2:	call   0x1400029b0
   140002df7:	mov    eax,DWORD PTR [rsp+0x38]
   140002dfb:	and    eax,0x1
   140002dfe:	test   eax,eax
   140002e00:	je     0x140002e0c
   140002e02:	mov    rcx,QWORD PTR [rsp+0x30]
   140002e07:	call   0x14001c4dc
   140002e0c:	mov    rax,QWORD PTR [rsp+0x30]
   140002e11:	add    rsp,0x28
   140002e15:	ret    
   140002e16:	int3   
   140002e17:	int3   
   140002e18:	int3   
   140002e19:	int3   
   140002e1a:	int3   
   140002e1b:	int3   
   140002e1c:	int3   
   140002e1d:	int3   
   140002e1e:	int3   
   140002e1f:	int3   
   140002e20:	mov    QWORD PTR [rsp+0x10],rdx
   140002e25:	mov    QWORD PTR [rsp+0x8],rcx
   140002e2a:	sub    rsp,0x28
   140002e2e:	mov    rdx,QWORD PTR [rsp+0x38]
   140002e33:	mov    rcx,QWORD PTR [rsp+0x30]
   140002e38:	call   0x140001900
   140002e3d:	mov    r11,QWORD PTR [rsp+0x30]
   140002e42:	lea    rax,[rip+0x37d27]        # 0x14003ab70
   140002e49:	mov    QWORD PTR [r11],rax
   140002e4c:	mov    rax,QWORD PTR [rsp+0x30]
   140002e51:	add    rsp,0x28
   140002e55:	ret    
   140002e56:	int3   
   140002e57:	int3   
   140002e58:	int3   
   140002e59:	int3   
   140002e5a:	int3   
   140002e5b:	int3   
   140002e5c:	int3   
   140002e5d:	int3   
   140002e5e:	int3   
   140002e5f:	int3   
   140002e60:	mov    DWORD PTR [rsp+0x10],edx
   140002e64:	mov    QWORD PTR [rsp+0x8],rcx
   140002e69:	sub    rsp,0x28
   140002e6d:	mov    rcx,QWORD PTR [rsp+0x30]
   140002e72:	call   0x140002cd0
   140002e77:	mov    eax,DWORD PTR [rsp+0x38]
   140002e7b:	and    eax,0x1
   140002e7e:	test   eax,eax
   140002e80:	je     0x140002e8c
   140002e82:	mov    rcx,QWORD PTR [rsp+0x30]
   140002e87:	call   0x14001c4dc
   140002e8c:	mov    rax,QWORD PTR [rsp+0x30]
   140002e91:	add    rsp,0x28
   140002e95:	ret    
   140002e96:	int3   
   140002e97:	int3   
   140002e98:	int3   
   140002e99:	int3   
   140002e9a:	int3   
   140002e9b:	int3   
   140002e9c:	int3   
   140002e9d:	int3   
   140002e9e:	int3   
   140002e9f:	int3   
   140002ea0:	mov    QWORD PTR [rsp+0x8],rcx
   140002ea5:	sub    rsp,0x28
   140002ea9:	mov    rcx,QWORD PTR [rsp+0x30]
   140002eae:	call   0x140008ce0
   140002eb3:	add    rsp,0x28
   140002eb7:	ret    
   140002eb8:	int3   
   140002eb9:	int3   
   140002eba:	int3   
   140002ebb:	int3   
   140002ebc:	int3   
   140002ebd:	int3   
   140002ebe:	int3   
   140002ebf:	int3   
   140002ec0:	mov    QWORD PTR [rsp+0x8],rcx
   140002ec5:	sub    rsp,0x28
   140002ec9:	mov    rcx,QWORD PTR [rsp+0x30]
   140002ece:	add    rcx,0x668
   140002ed5:	call   0x140003080
   140002eda:	mov    rcx,QWORD PTR [rsp+0x30]
   140002edf:	add    rcx,0x5f8
   140002ee6:	call   0x140003060
   140002eeb:	mov    rcx,QWORD PTR [rsp+0x30]
   140002ef0:	add    rcx,0x588
   140002ef7:	call   0x140003060
   140002efc:	mov    rcx,QWORD PTR [rsp+0x30]
   140002f01:	add    rcx,0x518
   140002f08:	call   0x140003060
   140002f0d:	mov    rcx,QWORD PTR [rsp+0x30]
   140002f12:	add    rcx,0x4a8
   140002f19:	call   0x140003060
   140002f1e:	mov    rcx,QWORD PTR [rsp+0x30]
   140002f23:	add    rcx,0x3e0
   140002f2a:	call   0x140003020
   140002f2f:	mov    rcx,QWORD PTR [rsp+0x30]
   140002f34:	add    rcx,0x318
   140002f3b:	call   0x140003020
   140002f40:	mov    rcx,QWORD PTR [rsp+0x30]
   140002f45:	add    rcx,0x270
   140002f4c:	call   0x140002ff0
   140002f51:	mov    rcx,QWORD PTR [rsp+0x30]
   140002f56:	add    rcx,0x148
   140002f5d:	call   0x140002fc0
   140002f62:	mov    rcx,QWORD PTR [rsp+0x30]
   140002f67:	call   0x140002f80
   140002f6c:	add    rsp,0x28
   140002f70:	ret    
   140002f71:	int3   
   140002f72:	int3   
   140002f73:	int3   
   140002f74:	int3   
   140002f75:	int3   
   140002f76:	int3   
   140002f77:	int3   
   140002f78:	int3   
   140002f79:	int3   
   140002f7a:	int3   
   140002f7b:	int3   
   140002f7c:	int3   
   140002f7d:	int3   
   140002f7e:	int3   
   140002f7f:	int3   
   140002f80:	mov    QWORD PTR [rsp+0x8],rcx
   140002f85:	sub    rsp,0x28
   140002f89:	mov    rcx,QWORD PTR [rsp+0x30]
   140002f8e:	add    rcx,0xd8
   140002f95:	call   0x140003060
   140002f9a:	mov    rcx,QWORD PTR [rsp+0x30]
   140002f9f:	add    rcx,0x68
   140002fa3:	call   0x140003060
   140002fa8:	mov    rcx,QWORD PTR [rsp+0x30]
   140002fad:	call   0x1400030d0
   140002fb2:	add    rsp,0x28
   140002fb6:	ret    
   140002fb7:	int3   
   140002fb8:	int3   
   140002fb9:	int3   
   140002fba:	int3   
   140002fbb:	int3   
   140002fbc:	int3   
   140002fbd:	int3   
   140002fbe:	int3   
   140002fbf:	int3   
   140002fc0:	mov    QWORD PTR [rsp+0x8],rcx
   140002fc5:	sub    rsp,0x28
   140002fc9:	mov    rcx,QWORD PTR [rsp+0x30]
   140002fce:	add    rcx,0xf0
   140002fd5:	call   0x1400048c0
   140002fda:	mov    rcx,QWORD PTR [rsp+0x30]
   140002fdf:	call   0x140003080
   140002fe4:	add    rsp,0x28
   140002fe8:	ret    
   140002fe9:	int3   
   140002fea:	int3   
   140002feb:	int3   
   140002fec:	int3   
   140002fed:	int3   
   140002fee:	int3   
   140002fef:	int3   
   140002ff0:	mov    QWORD PTR [rsp+0x8],rcx
   140002ff5:	sub    rsp,0x28
   140002ff9:	mov    rcx,QWORD PTR [rsp+0x30]
   140002ffe:	add    rcx,0x70
   140003002:	call   0x140003a90
   140003007:	mov    rcx,QWORD PTR [rsp+0x30]
   14000300c:	call   0x1400323c0
   140003011:	add    rsp,0x28
   140003015:	ret    
   140003016:	int3   
   140003017:	int3   
   140003018:	int3   
   140003019:	int3   
   14000301a:	int3   
   14000301b:	int3   
   14000301c:	int3   
   14000301d:	int3   
   14000301e:	int3   
   14000301f:	int3   
   140003020:	mov    QWORD PTR [rsp+0x8],rcx
   140003025:	sub    rsp,0x28
   140003029:	mov    rcx,QWORD PTR [rsp+0x30]
   14000302e:	add    rcx,0x98
   140003035:	call   0x140003bf0
   14000303a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000303f:	add    rcx,0x70
   140003043:	call   0x140003a90
   140003048:	mov    rcx,QWORD PTR [rsp+0x30]
   14000304d:	call   0x1400323c0
   140003052:	add    rsp,0x28
   140003056:	ret    
   140003057:	int3   
   140003058:	int3   
   140003059:	int3   
   14000305a:	int3   
   14000305b:	int3   
   14000305c:	int3   
   14000305d:	int3   
   14000305e:	int3   
   14000305f:	int3   
   140003060:	mov    QWORD PTR [rsp+0x8],rcx
   140003065:	sub    rsp,0x28
   140003069:	mov    rcx,QWORD PTR [rsp+0x30]
   14000306e:	call   0x1400323c0
   140003073:	add    rsp,0x28
   140003077:	ret    
   140003078:	int3   
   140003079:	int3   
   14000307a:	int3   
   14000307b:	int3   
   14000307c:	int3   
   14000307d:	int3   
   14000307e:	int3   
   14000307f:	int3   
   140003080:	mov    QWORD PTR [rsp+0x8],rcx
   140003085:	sub    rsp,0x28
   140003089:	mov    rcx,QWORD PTR [rsp+0x30]
   14000308e:	add    rcx,0xc8
   140003095:	call   0x140003a90
   14000309a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000309f:	add    rcx,0xa0
   1400030a6:	call   0x140003a90
   1400030ab:	mov    rcx,QWORD PTR [rsp+0x30]
   1400030b0:	add    rcx,0x70
   1400030b4:	call   0x140003a90
   1400030b9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400030be:	call   0x1400323c0
   1400030c3:	add    rsp,0x28
   1400030c7:	ret    
   1400030c8:	int3   
   1400030c9:	int3   
   1400030ca:	int3   
   1400030cb:	int3   
   1400030cc:	int3   
   1400030cd:	int3   
   1400030ce:	int3   
   1400030cf:	int3   
   1400030d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400030d5:	sub    rsp,0x28
   1400030d9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400030de:	add    rcx,0x38
   1400030e2:	call   0x140003a90
   1400030e7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400030ec:	add    rcx,0x8
   1400030f0:	call   0x140003100
   1400030f5:	add    rsp,0x28
   1400030f9:	ret    
   1400030fa:	int3   
   1400030fb:	int3   
   1400030fc:	int3   
   1400030fd:	int3   
   1400030fe:	int3   
   1400030ff:	int3   
   140003100:	mov    QWORD PTR [rsp+0x8],rcx
   140003105:	sub    rsp,0x28
   140003109:	mov    rcx,QWORD PTR [rsp+0x30]
   14000310e:	call   0x140003c50
   140003113:	add    rsp,0x28
   140003117:	ret    
   140003118:	int3   
   140003119:	int3   
   14000311a:	int3   
   14000311b:	int3   
   14000311c:	int3   
   14000311d:	int3   
   14000311e:	int3   
   14000311f:	int3   
   140003120:	mov    QWORD PTR [rsp+0x8],rcx
   140003125:	sub    rsp,0x38
   140003129:	lea    rax,[rsp+0x20]
   14000312e:	mov    QWORD PTR [rsp+0x28],rax
   140003133:	mov    rcx,QWORD PTR [rsp+0x28]
   140003138:	call   0x140005660
   14000313d:	mov    rdx,rax
   140003140:	mov    rcx,QWORD PTR [rsp+0x40]
   140003145:	call   0x140005630
   14000314a:	xor    r8d,r8d
   14000314d:	xor    edx,edx
   14000314f:	mov    rcx,QWORD PTR [rsp+0x40]
   140003154:	call   0x140005550
   140003159:	mov    rax,QWORD PTR [rsp+0x40]
   14000315e:	add    rsp,0x38
   140003162:	ret    
   140003163:	int3   
   140003164:	int3   
   140003165:	int3   
   140003166:	int3   
   140003167:	int3   
   140003168:	int3   
   140003169:	int3   
   14000316a:	int3   
   14000316b:	int3   
   14000316c:	int3   
   14000316d:	int3   
   14000316e:	int3   
   14000316f:	int3   
   140003170:	mov    QWORD PTR [rsp+0x10],rdx
   140003175:	mov    QWORD PTR [rsp+0x8],rcx
   14000317a:	sub    rsp,0x38
   14000317e:	lea    rax,[rsp+0x20]
   140003183:	mov    QWORD PTR [rsp+0x28],rax
   140003188:	mov    rcx,QWORD PTR [rsp+0x28]
   14000318d:	call   0x140005660
   140003192:	mov    rdx,rax
   140003195:	mov    rcx,QWORD PTR [rsp+0x40]
   14000319a:	call   0x140005630
   14000319f:	xor    r8d,r8d
   1400031a2:	xor    edx,edx
   1400031a4:	mov    rcx,QWORD PTR [rsp+0x40]
   1400031a9:	call   0x140005550
   1400031ae:	mov    rdx,QWORD PTR [rsp+0x48]
   1400031b3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400031b8:	call   0x1400053a0
   1400031bd:	mov    rax,QWORD PTR [rsp+0x40]
   1400031c2:	add    rsp,0x38
   1400031c6:	ret    
   1400031c7:	int3   
   1400031c8:	int3   
   1400031c9:	int3   
   1400031ca:	int3   
   1400031cb:	int3   
   1400031cc:	int3   
   1400031cd:	int3   
   1400031ce:	int3   
   1400031cf:	int3   
   1400031d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400031d5:	mov    QWORD PTR [rsp+0x8],rcx
   1400031da:	sub    rsp,0x28
   1400031de:	mov    rdx,QWORD PTR [rsp+0x38]
   1400031e3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400031e8:	call   0x140005630
   1400031ed:	xor    r8d,r8d
   1400031f0:	xor    edx,edx
   1400031f2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400031f7:	call   0x140005550
   1400031fc:	mov    r9,QWORD PTR [rip+0x3c0f5]        # 0x14003f2f8
   140003203:	xor    r8d,r8d
   140003206:	mov    rdx,QWORD PTR [rsp+0x38]
   14000320b:	mov    rcx,QWORD PTR [rsp+0x30]
   140003210:	call   0x1400052a0
   140003215:	mov    rax,QWORD PTR [rsp+0x30]
   14000321a:	add    rsp,0x28
   14000321e:	ret    
   14000321f:	int3   
   140003220:	mov    QWORD PTR [rsp+0x8],rcx
   140003225:	sub    rsp,0x28
   140003229:	xor    r8d,r8d
   14000322c:	mov    dl,0x1
   14000322e:	mov    rcx,QWORD PTR [rsp+0x30]
   140003233:	call   0x140005550
   140003238:	add    rsp,0x28
   14000323c:	ret    
   14000323d:	int3   
   14000323e:	int3   
   14000323f:	int3   
   140003240:	mov    QWORD PTR [rsp+0x18],r8
   140003245:	mov    QWORD PTR [rsp+0x10],rdx
   14000324a:	mov    QWORD PTR [rsp+0x8],rcx
   14000324f:	sub    rsp,0x28
   140003253:	mov    rdx,QWORD PTR [rsp+0x38]
   140003258:	mov    rcx,QWORD PTR [rsp+0x30]
   14000325d:	call   0x140005500
   140003262:	movzx  eax,al
   140003265:	test   eax,eax
   140003267:	je     0x140003291
   140003269:	mov    rcx,QWORD PTR [rsp+0x30]
   14000326e:	call   0x1400055f0
   140003273:	mov    r8,QWORD PTR [rsp+0x38]
   140003278:	sub    r8,rax
   14000327b:	mov    r9,QWORD PTR [rsp+0x40]
   140003280:	mov    rdx,QWORD PTR [rsp+0x30]
   140003285:	mov    rcx,QWORD PTR [rsp+0x30]
   14000328a:	call   0x1400052a0
   14000328f:	jmp    0x1400032e3
   140003291:	xor    r8d,r8d
   140003294:	mov    rdx,QWORD PTR [rsp+0x40]
   140003299:	mov    rcx,QWORD PTR [rsp+0x30]
   14000329e:	call   0x140005420
   1400032a3:	movzx  eax,al
   1400032a6:	test   eax,eax
   1400032a8:	je     0x1400032de
   1400032aa:	mov    rcx,QWORD PTR [rsp+0x30]
   1400032af:	call   0x1400055f0
   1400032b4:	mov    r9,QWORD PTR [rsp+0x40]
   1400032b9:	mov    r8,QWORD PTR [rsp+0x38]
   1400032be:	mov    rdx,QWORD PTR [rsp+0x30]
   1400032c3:	mov    rdx,QWORD PTR [rdx+0x20]
   1400032c7:	mov    rcx,rax
   1400032ca:	call   0x14000b460
   1400032cf:	mov    rdx,QWORD PTR [rsp+0x40]
   1400032d4:	mov    rcx,QWORD PTR [rsp+0x30]
   1400032d9:	call   0x1400053d0
   1400032de:	mov    rax,QWORD PTR [rsp+0x30]
   1400032e3:	add    rsp,0x28
   1400032e7:	ret    
   1400032e8:	int3   
   1400032e9:	int3   
   1400032ea:	int3   
   1400032eb:	int3   
   1400032ec:	int3   
   1400032ed:	int3   
   1400032ee:	int3   
   1400032ef:	int3   
   1400032f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400032f5:	sub    rsp,0x28
   1400032f9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400032fe:	call   0x1400055f0
   140003303:	add    rsp,0x28
   140003307:	ret    
   140003308:	int3   
   140003309:	int3   
   14000330a:	int3   
   14000330b:	int3   
   14000330c:	int3   
   14000330d:	int3   
   14000330e:	int3   
   14000330f:	int3   
   140003310:	mov    QWORD PTR [rsp+0x8],rcx
   140003315:	mov    rax,QWORD PTR [rsp+0x8]
   14000331a:	mov    rax,QWORD PTR [rax-0x8]
   14000331e:	movsxd rdx,DWORD PTR [rax+0x4]
   140003322:	mov    rcx,QWORD PTR [rsp+0x8]
   140003327:	lea    rax,[rip+0x375ca]        # 0x14003a8f8
   14000332e:	mov    QWORD PTR [rcx+rdx*1-0x8],rax
   140003333:	ret    
   140003334:	int3   
   140003335:	int3   
   140003336:	int3   
   140003337:	int3   
   140003338:	int3   
   140003339:	int3   
   14000333a:	int3   
   14000333b:	int3   
   14000333c:	int3   
   14000333d:	int3   
   14000333e:	int3   
   14000333f:	int3   
   140003340:	mov    QWORD PTR [rsp+0x8],rcx
   140003345:	sub    rsp,0x38
   140003349:	mov    DWORD PTR [rsp+0x20],0x0
   140003351:	mov    rax,QWORD PTR [rsp+0x40]
   140003356:	mov    rax,QWORD PTR [rax]
   140003359:	movsxd rax,DWORD PTR [rax+0x4]
   14000335d:	mov    rcx,QWORD PTR [rsp+0x40]
   140003362:	add    rcx,rax
   140003365:	call   0x140002c00
   14000336a:	movzx  eax,al
   14000336d:	test   eax,eax
   14000336f:	jne    0x1400033a2
   140003371:	mov    rax,QWORD PTR [rsp+0x40]
   140003376:	mov    rax,QWORD PTR [rax]
   140003379:	movsxd rax,DWORD PTR [rax+0x4]
   14000337d:	mov    rcx,QWORD PTR [rsp+0x40]
   140003382:	add    rcx,rax
   140003385:	call   0x140003440
   14000338a:	mov    rcx,rax
   14000338d:	call   0x140005950
   140003392:	cmp    eax,0xffffffff
   140003395:	jne    0x1400033a2
   140003397:	mov    eax,DWORD PTR [rsp+0x20]
   14000339b:	or     eax,0x4
   14000339e:	mov    DWORD PTR [rsp+0x20],eax
   1400033a2:	mov    rax,QWORD PTR [rsp+0x40]
   1400033a7:	mov    rax,QWORD PTR [rax]
   1400033aa:	movsxd rax,DWORD PTR [rax+0x4]
   1400033ae:	mov    rcx,QWORD PTR [rsp+0x40]
   1400033b3:	add    rcx,rax
   1400033b6:	xor    r8d,r8d
   1400033b9:	mov    edx,DWORD PTR [rsp+0x20]
   1400033bd:	call   0x140003400
   1400033c2:	mov    rax,QWORD PTR [rsp+0x40]
   1400033c7:	add    rsp,0x38
   1400033cb:	ret    
   1400033cc:	int3   
   1400033cd:	int3   
   1400033ce:	int3   
   1400033cf:	int3   
   1400033d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400033d5:	sub    rsp,0x28
   1400033d9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400033de:	lea    rax,[rip+0x37523]        # 0x14003a908
   1400033e5:	mov    QWORD PTR [rcx],rax
   1400033e8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400033ed:	call   0x140002cd0
   1400033f2:	add    rsp,0x28
   1400033f6:	ret    
   1400033f7:	int3   
   1400033f8:	int3   
   1400033f9:	int3   
   1400033fa:	int3   
   1400033fb:	int3   
   1400033fc:	int3   
   1400033fd:	int3   
   1400033fe:	int3   
   1400033ff:	int3   
   140003400:	mov    BYTE PTR [rsp+0x18],r8b
   140003405:	mov    DWORD PTR [rsp+0x10],edx
   140003409:	mov    QWORD PTR [rsp+0x8],rcx
   14000340e:	sub    rsp,0x28
   140003412:	cmp    DWORD PTR [rsp+0x38],0x0
   140003417:	je     0x140003439
   140003419:	mov    rcx,QWORD PTR [rsp+0x30]
   14000341e:	call   0x140002bb0
   140003423:	mov    edx,eax
   140003425:	or     edx,DWORD PTR [rsp+0x38]
   140003429:	movzx  r8d,BYTE PTR [rsp+0x40]
   14000342f:	mov    rcx,QWORD PTR [rsp+0x30]
   140003434:	call   0x140005670
   140003439:	add    rsp,0x28
   14000343d:	ret    
   14000343e:	int3   
   14000343f:	int3   
   140003440:	mov    QWORD PTR [rsp+0x8],rcx
   140003445:	mov    rax,QWORD PTR [rsp+0x8]
   14000344a:	mov    rax,QWORD PTR [rax+0x48]
   14000344e:	ret    
   14000344f:	int3   
   140003450:	mov    QWORD PTR [rsp+0x8],rcx
   140003455:	mov    rax,QWORD PTR [rsp+0x8]
   14000345a:	mov    rax,QWORD PTR [rax-0x10]
   14000345e:	movsxd rdx,DWORD PTR [rax+0x4]
   140003462:	mov    rcx,QWORD PTR [rsp+0x8]
   140003467:	lea    rax,[rip+0x3bec2]        # 0x14003f330
   14000346e:	mov    QWORD PTR [rcx+rdx*1-0x10],rax
   140003473:	ret    
   140003474:	int3   
   140003475:	int3   
   140003476:	int3   
   140003477:	int3   
   140003478:	int3   
   140003479:	int3   
   14000347a:	int3   
   14000347b:	int3   
   14000347c:	int3   
   14000347d:	int3   
   14000347e:	int3   
   14000347f:	int3   
   140003480:	mov    BYTE PTR [rsp+0x18],r8b
   140003485:	mov    QWORD PTR [rsp+0x10],rdx
   14000348a:	mov    QWORD PTR [rsp+0x8],rcx
   14000348f:	sub    rsp,0x38
   140003493:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000349c:	mov    rdx,QWORD PTR [rsp+0x48]
   1400034a1:	mov    rcx,QWORD PTR [rsp+0x40]
   1400034a6:	call   0x1400058e0
   1400034ab:	nop
   1400034ac:	movzx  edx,BYTE PTR [rsp+0x50]
   1400034b1:	mov    rcx,QWORD PTR [rsp+0x40]
   1400034b6:	mov    rcx,QWORD PTR [rcx]
   1400034b9:	call   0x1400056c0
   1400034be:	movzx  r11d,al
   1400034c2:	mov    rax,QWORD PTR [rsp+0x40]
   1400034c7:	mov    BYTE PTR [rax+0x8],r11b
   1400034cb:	mov    rax,QWORD PTR [rsp+0x40]
   1400034d0:	add    rsp,0x38
   1400034d4:	ret    
   1400034d5:	int3   
   1400034d6:	int3   
   1400034d7:	int3   
   1400034d8:	int3   
   1400034d9:	int3   
   1400034da:	int3   
   1400034db:	int3   
   1400034dc:	int3   
   1400034dd:	int3   
   1400034de:	int3   
   1400034df:	int3   
   1400034e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400034e5:	sub    rsp,0x48
   1400034e9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400034ee:	lea    rax,[rip+0x374a3]        # 0x14003a998
   1400034f5:	mov    QWORD PTR [rcx],rax
   1400034f8:	mov    rax,QWORD PTR [rsp+0x50]
   1400034fd:	mov    rax,QWORD PTR [rax+0x68]
   140003501:	mov    QWORD PTR [rsp+0x28],rax
   140003506:	mov    rax,QWORD PTR [rsp+0x28]
   14000350b:	mov    QWORD PTR [rsp+0x20],rax
   140003510:	cmp    QWORD PTR [rsp+0x20],0x0
   140003516:	je     0x14000352e
   140003518:	mov    edx,0x1
   14000351d:	mov    rcx,QWORD PTR [rsp+0x20]
   140003522:	call   0x140005010
   140003527:	mov    QWORD PTR [rsp+0x30],rax
   14000352c:	jmp    0x140003537
   14000352e:	mov    QWORD PTR [rsp+0x30],0x0
   140003537:	mov    rcx,QWORD PTR [rsp+0x50]
   14000353c:	add    rcx,0x8
   140003540:	call   0x14001a20c
   140003545:	add    rsp,0x48
   140003549:	ret    
   14000354a:	int3   
   14000354b:	int3   
   14000354c:	int3   
   14000354d:	int3   
   14000354e:	int3   
   14000354f:	int3   
   140003550:	mov    QWORD PTR [rsp+0x8],rcx
   140003555:	sub    rsp,0x38
   140003559:	mov    rcx,QWORD PTR [rsp+0x40]
   14000355e:	call   0x140005ba0
   140003563:	test   rax,rax
   140003566:	jle    0x140003581
   140003568:	mov    rcx,QWORD PTR [rsp+0x40]
   14000356d:	call   0x140005a60
   140003572:	mov    rcx,rax
   140003575:	call   0x140001150
   14000357a:	mov    WORD PTR [rsp+0x20],ax
   14000357f:	jmp    0x140003596
   140003581:	mov    rax,QWORD PTR [rsp+0x40]
   140003586:	mov    rax,QWORD PTR [rax]
   140003589:	mov    rcx,QWORD PTR [rsp+0x40]
   14000358e:	call   QWORD PTR [rax+0x20]
   140003591:	mov    WORD PTR [rsp+0x20],ax
   140003596:	mov    ax,WORD PTR [rsp+0x20]
   14000359b:	add    rsp,0x38
   14000359f:	ret    
   1400035a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400035a5:	sub    rsp,0x38
   1400035a9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400035ae:	call   0x140005ba0
   1400035b3:	cmp    rax,0x1
   1400035b7:	jle    0x1400035d2
   1400035b9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400035be:	call   0x140005b50
   1400035c3:	mov    rcx,rax
   1400035c6:	call   0x140001150
   1400035cb:	mov    WORD PTR [rsp+0x24],ax
   1400035d0:	jmp    0x140003626
   1400035d2:	mov    rcx,QWORD PTR [rsp+0x40]
   1400035d7:	call   0x140005970
   1400035dc:	mov    WORD PTR [rsp+0x20],ax
   1400035e1:	call   0x1400011a0
   1400035e6:	mov    WORD PTR [rsp+0x22],ax
   1400035eb:	lea    rdx,[rsp+0x20]
   1400035f0:	lea    rcx,[rsp+0x22]
   1400035f5:	call   0x140001160
   1400035fa:	movzx  eax,al
   1400035fd:	test   eax,eax
   1400035ff:	je     0x14000360d
   140003601:	call   0x1400011a0
   140003606:	mov    WORD PTR [rsp+0x26],ax
   14000360b:	jmp    0x14000361c
   14000360d:	mov    rcx,QWORD PTR [rsp+0x40]
   140003612:	call   0x140003550
   140003617:	mov    WORD PTR [rsp+0x26],ax
   14000361c:	movzx  eax,WORD PTR [rsp+0x26]
   140003621:	mov    WORD PTR [rsp+0x24],ax
   140003626:	mov    ax,WORD PTR [rsp+0x24]
   14000362b:	add    rsp,0x38
   14000362f:	ret    
   140003630:	mov    WORD PTR [rsp+0x10],dx
   140003635:	mov    QWORD PTR [rsp+0x8],rcx
   14000363a:	sub    rsp,0x28
   14000363e:	call   0x1400011a0
   140003643:	add    rsp,0x28
   140003647:	ret    
   140003648:	int3   
   140003649:	int3   
   14000364a:	int3   
   14000364b:	int3   
   14000364c:	int3   
   14000364d:	int3   
   14000364e:	int3   
   14000364f:	int3   
   140003650:	mov    QWORD PTR [rsp+0x8],rcx
   140003655:	sub    rsp,0x28
   140003659:	call   0x1400011a0
   14000365e:	add    rsp,0x28
   140003662:	ret    
   140003663:	int3   
   140003664:	int3   
   140003665:	int3   
   140003666:	int3   
   140003667:	int3   
   140003668:	int3   
   140003669:	int3   
   14000366a:	int3   
   14000366b:	int3   
   14000366c:	int3   
   14000366d:	int3   
   14000366e:	int3   
   14000366f:	int3   
   140003670:	mov    QWORD PTR [rsp+0x8],rcx
   140003675:	sub    rsp,0x38
   140003679:	mov    rax,QWORD PTR [rsp+0x40]
   14000367e:	mov    rax,QWORD PTR [rax]
   140003681:	mov    rcx,QWORD PTR [rsp+0x40]
   140003686:	call   QWORD PTR [rax+0x20]
   140003689:	mov    WORD PTR [rsp+0x20],ax
   14000368e:	call   0x1400011a0
   140003693:	mov    WORD PTR [rsp+0x22],ax
   140003698:	lea    rdx,[rsp+0x20]
   14000369d:	lea    rcx,[rsp+0x22]
   1400036a2:	call   0x140001160
   1400036a7:	movzx  eax,al
   1400036aa:	test   eax,eax
   1400036ac:	je     0x1400036ba
   1400036ae:	call   0x1400011a0
   1400036b3:	mov    WORD PTR [rsp+0x24],ax
   1400036b8:	jmp    0x1400036d1
   1400036ba:	mov    rcx,QWORD PTR [rsp+0x40]
   1400036bf:	call   0x140005af0
   1400036c4:	mov    rcx,rax
   1400036c7:	call   0x140001150
   1400036cc:	mov    WORD PTR [rsp+0x24],ax
   1400036d1:	mov    ax,WORD PTR [rsp+0x24]
   1400036d6:	add    rsp,0x38
   1400036da:	ret    
   1400036db:	int3   
   1400036dc:	int3   
   1400036dd:	int3   
   1400036de:	int3   
   1400036df:	int3   
   1400036e0:	mov    QWORD PTR [rsp+0x18],r8
   1400036e5:	mov    QWORD PTR [rsp+0x10],rdx
   1400036ea:	mov    QWORD PTR [rsp+0x8],rcx
   1400036ef:	sub    rsp,0x28
   1400036f3:	mov    rax,QWORD PTR [rsp+0x30]
   1400036f8:	mov    rax,QWORD PTR [rax]
   1400036fb:	mov    r9,QWORD PTR [rsp+0x40]
   140003700:	mov    r8,0xffffffffffffffff
   140003707:	mov    rdx,QWORD PTR [rsp+0x38]
   14000370c:	mov    rcx,QWORD PTR [rsp+0x30]
   140003711:	call   QWORD PTR [rax+0x38]
   140003714:	add    rsp,0x28
   140003718:	ret    
   140003719:	int3   
   14000371a:	int3   
   14000371b:	int3   
   14000371c:	int3   
   14000371d:	int3   
   14000371e:	int3   
   14000371f:	int3   
   140003720:	mov    QWORD PTR [rsp+0x20],r9
   140003725:	mov    QWORD PTR [rsp+0x18],r8
   14000372a:	mov    QWORD PTR [rsp+0x10],rdx
   14000372f:	mov    QWORD PTR [rsp+0x8],rcx
   140003734:	sub    rsp,0x48
   140003738:	mov    QWORD PTR [rsp+0x20],0x0
   140003741:	cmp    QWORD PTR [rsp+0x68],0x0
   140003747:	jle    0x14000386f
   14000374d:	mov    rcx,QWORD PTR [rsp+0x50]
   140003752:	call   0x140005ba0
   140003757:	mov    QWORD PTR [rsp+0x28],rax
   14000375c:	cmp    QWORD PTR [rsp+0x28],0x0
   140003762:	jle    0x1400037f0
   140003768:	mov    rax,QWORD PTR [rsp+0x28]
   14000376d:	mov    QWORD PTR [rsp+0x30],rax
   140003772:	mov    rax,QWORD PTR [rsp+0x30]
   140003777:	cmp    QWORD PTR [rsp+0x68],rax
   14000377c:	jge    0x140003788
   14000377e:	mov    rax,QWORD PTR [rsp+0x68]
   140003783:	mov    QWORD PTR [rsp+0x30],rax
   140003788:	mov    rcx,QWORD PTR [rsp+0x50]
   14000378d:	call   0x140005a60
   140003792:	mov    r9,QWORD PTR [rsp+0x30]
   140003797:	mov    r8,rax
   14000379a:	mov    rdx,QWORD PTR [rsp+0x60]
   14000379f:	mov    rcx,QWORD PTR [rsp+0x58]
   1400037a4:	call   0x14000b4b0
   1400037a9:	mov    r11,QWORD PTR [rsp+0x58]
   1400037ae:	mov    rax,QWORD PTR [rsp+0x30]
   1400037b3:	lea    rax,[r11+rax*2]
   1400037b7:	mov    QWORD PTR [rsp+0x58],rax
   1400037bc:	mov    rcx,QWORD PTR [rsp+0x30]
   1400037c1:	mov    rax,QWORD PTR [rsp+0x20]
   1400037c6:	add    rax,rcx
   1400037c9:	mov    QWORD PTR [rsp+0x20],rax
   1400037ce:	mov    rcx,QWORD PTR [rsp+0x30]
   1400037d3:	mov    rax,QWORD PTR [rsp+0x68]
   1400037d8:	sub    rax,rcx
   1400037db:	mov    QWORD PTR [rsp+0x68],rax
   1400037e0:	mov    edx,DWORD PTR [rsp+0x30]
   1400037e4:	mov    rcx,QWORD PTR [rsp+0x50]
   1400037e9:	call   0x140005aa0
   1400037ee:	jmp    0x14000386a
   1400037f0:	mov    rax,QWORD PTR [rsp+0x50]
   1400037f5:	mov    rax,QWORD PTR [rax]
   1400037f8:	mov    rcx,QWORD PTR [rsp+0x50]
   1400037fd:	call   QWORD PTR [rax+0x28]
   140003800:	mov    WORD PTR [rsp+0x38],ax
   140003805:	call   0x1400011a0
   14000380a:	mov    WORD PTR [rsp+0x3c],ax
   14000380f:	lea    rdx,[rsp+0x38]
   140003814:	lea    rcx,[rsp+0x3c]
   140003819:	call   0x140001160
   14000381e:	movzx  eax,al
   140003821:	test   eax,eax
   140003823:	je     0x140003829
   140003825:	jmp    0x14000386f
   140003827:	jmp    0x14000386a
   140003829:	lea    rcx,[rsp+0x38]
   14000382e:	call   0x140001150
   140003833:	movzx  r11d,ax
   140003837:	mov    rax,QWORD PTR [rsp+0x58]
   14000383c:	mov    WORD PTR [rax],r11w
   140003840:	mov    rax,QWORD PTR [rsp+0x58]
   140003845:	add    rax,0x2
   140003849:	mov    QWORD PTR [rsp+0x58],rax
   14000384e:	mov    rax,QWORD PTR [rsp+0x20]
   140003853:	add    rax,0x1
   140003857:	mov    QWORD PTR [rsp+0x20],rax
   14000385c:	mov    rax,QWORD PTR [rsp+0x68]
   140003861:	sub    rax,0x1
   140003865:	mov    QWORD PTR [rsp+0x68],rax
   14000386a:	jmp    0x140003741
   14000386f:	mov    rax,QWORD PTR [rsp+0x20]
   140003874:	add    rsp,0x48
   140003878:	ret    
   140003879:	int3   
   14000387a:	int3   
   14000387b:	int3   
   14000387c:	int3   
   14000387d:	int3   
   14000387e:	int3   
   14000387f:	int3   
   140003880:	mov    QWORD PTR [rsp+0x18],r8
   140003885:	mov    QWORD PTR [rsp+0x10],rdx
   14000388a:	mov    QWORD PTR [rsp+0x8],rcx
   14000388f:	sub    rsp,0x48
   140003893:	mov    QWORD PTR [rsp+0x20],0x0
   14000389c:	cmp    QWORD PTR [rsp+0x60],0x0
   1400038a2:	jle    0x1400039c0
   1400038a8:	mov    rcx,QWORD PTR [rsp+0x50]
   1400038ad:	call   0x140005c30
   1400038b2:	mov    QWORD PTR [rsp+0x28],rax
   1400038b7:	cmp    QWORD PTR [rsp+0x28],0x0
   1400038bd:	jle    0x14000394b
   1400038c3:	mov    rax,QWORD PTR [rsp+0x28]
   1400038c8:	mov    QWORD PTR [rsp+0x30],rax
   1400038cd:	mov    rax,QWORD PTR [rsp+0x30]
   1400038d2:	cmp    QWORD PTR [rsp+0x60],rax
   1400038d7:	jge    0x1400038e3
   1400038d9:	mov    rax,QWORD PTR [rsp+0x60]
   1400038de:	mov    QWORD PTR [rsp+0x30],rax
   1400038e3:	mov    rcx,QWORD PTR [rsp+0x50]
   1400038e8:	call   0x140005a80
   1400038ed:	mov    r9,QWORD PTR [rsp+0x30]
   1400038f2:	mov    r8,QWORD PTR [rsp+0x58]
   1400038f7:	mov    rdx,QWORD PTR [rsp+0x28]
   1400038fc:	mov    rcx,rax
   1400038ff:	call   0x14000b4b0
   140003904:	mov    r11,QWORD PTR [rsp+0x58]
   140003909:	mov    rax,QWORD PTR [rsp+0x30]
   14000390e:	lea    rax,[r11+rax*2]
   140003912:	mov    QWORD PTR [rsp+0x58],rax
   140003917:	mov    rcx,QWORD PTR [rsp+0x30]
   14000391c:	mov    rax,QWORD PTR [rsp+0x20]
   140003921:	add    rax,rcx
   140003924:	mov    QWORD PTR [rsp+0x20],rax
   140003929:	mov    rcx,QWORD PTR [rsp+0x30]
   14000392e:	mov    rax,QWORD PTR [rsp+0x60]
   140003933:	sub    rax,rcx
   140003936:	mov    QWORD PTR [rsp+0x60],rax
   14000393b:	mov    edx,DWORD PTR [rsp+0x30]
   14000393f:	mov    rcx,QWORD PTR [rsp+0x50]
   140003944:	call   0x140005be0
   140003949:	jmp    0x1400039bb
   14000394b:	mov    rcx,QWORD PTR [rsp+0x58]
   140003950:	call   0x140001150
   140003955:	movzx  edx,ax
   140003958:	mov    rax,QWORD PTR [rsp+0x50]
   14000395d:	mov    rax,QWORD PTR [rax]
   140003960:	mov    rcx,QWORD PTR [rsp+0x50]
   140003965:	call   QWORD PTR [rax+0x8]
   140003968:	mov    WORD PTR [rsp+0x38],ax
   14000396d:	call   0x1400011a0
   140003972:	mov    WORD PTR [rsp+0x3a],ax
   140003977:	lea    rdx,[rsp+0x38]
   14000397c:	lea    rcx,[rsp+0x3a]
   140003981:	call   0x140001160
   140003986:	movzx  eax,al
   140003989:	test   eax,eax
   14000398b:	je     0x140003991
   14000398d:	jmp    0x1400039c0
   14000398f:	jmp    0x1400039bb
   140003991:	mov    rax,QWORD PTR [rsp+0x58]
   140003996:	add    rax,0x2
   14000399a:	mov    QWORD PTR [rsp+0x58],rax
   14000399f:	mov    rax,QWORD PTR [rsp+0x20]
   1400039a4:	add    rax,0x1
   1400039a8:	mov    QWORD PTR [rsp+0x20],rax
   1400039ad:	mov    rax,QWORD PTR [rsp+0x60]
   1400039b2:	sub    rax,0x1
   1400039b6:	mov    QWORD PTR [rsp+0x60],rax
   1400039bb:	jmp    0x14000389c
   1400039c0:	mov    rax,QWORD PTR [rsp+0x20]
   1400039c5:	add    rsp,0x48
   1400039c9:	ret    
   1400039ca:	int3   
   1400039cb:	int3   
   1400039cc:	int3   
   1400039cd:	int3   
   1400039ce:	int3   
   1400039cf:	int3   
   1400039d0:	mov    DWORD PTR [rsp+0x20],r9d
   1400039d5:	mov    QWORD PTR [rsp+0x18],r8
   1400039da:	mov    QWORD PTR [rsp+0x10],rdx
   1400039df:	mov    QWORD PTR [rsp+0x8],rcx
   1400039e4:	sub    rsp,0x28
   1400039e8:	mov    rdx,QWORD PTR [rip+0x36d49]        # 0x14003a738
   1400039ef:	mov    rcx,QWORD PTR [rsp+0x38]
   1400039f4:	call   0x140006a00
   1400039f9:	mov    rax,QWORD PTR [rsp+0x38]
   1400039fe:	add    rsp,0x28
   140003a02:	ret    
   140003a03:	int3   
   140003a04:	int3   
   140003a05:	int3   
   140003a06:	int3   
   140003a07:	int3   
   140003a08:	int3   
   140003a09:	int3   
   140003a0a:	int3   
   140003a0b:	int3   
   140003a0c:	int3   
   140003a0d:	int3   
   140003a0e:	int3   
   140003a0f:	int3   
   140003a10:	mov    QWORD PTR [rsp+0x18],r8
   140003a15:	mov    QWORD PTR [rsp+0x10],rdx
   140003a1a:	mov    QWORD PTR [rsp+0x8],rcx
   140003a1f:	mov    rax,QWORD PTR [rsp+0x8]
   140003a24:	ret    
   140003a25:	int3   
   140003a26:	int3   
   140003a27:	int3   
   140003a28:	int3   
   140003a29:	int3   
   140003a2a:	int3   
   140003a2b:	int3   
   140003a2c:	int3   
   140003a2d:	int3   
   140003a2e:	int3   
   140003a2f:	int3   
   140003a30:	mov    QWORD PTR [rsp+0x10],rdx
   140003a35:	mov    QWORD PTR [rsp+0x8],rcx
   140003a3a:	sub    rsp,0x38
   140003a3e:	lea    rax,[rsp+0x20]
   140003a43:	mov    QWORD PTR [rsp+0x28],rax
   140003a48:	mov    rcx,QWORD PTR [rsp+0x28]
   140003a4d:	call   0x140005660
   140003a52:	mov    rdx,rax
   140003a55:	mov    rcx,QWORD PTR [rsp+0x40]
   140003a5a:	call   0x140005630
   140003a5f:	xor    r8d,r8d
   140003a62:	xor    edx,edx
   140003a64:	mov    rcx,QWORD PTR [rsp+0x40]
   140003a69:	call   0x1400062d0
   140003a6e:	mov    rdx,QWORD PTR [rsp+0x48]
   140003a73:	mov    rcx,QWORD PTR [rsp+0x40]
   140003a78:	call   0x140005f20
   140003a7d:	mov    rax,QWORD PTR [rsp+0x40]
   140003a82:	add    rsp,0x38
   140003a86:	ret    
   140003a87:	int3   
   140003a88:	int3   
   140003a89:	int3   
   140003a8a:	int3   
   140003a8b:	int3   
   140003a8c:	int3   
   140003a8d:	int3   
   140003a8e:	int3   
   140003a8f:	int3   
   140003a90:	mov    QWORD PTR [rsp+0x8],rcx
   140003a95:	sub    rsp,0x28
   140003a99:	xor    r8d,r8d
   140003a9c:	mov    dl,0x1
   140003a9e:	mov    rcx,QWORD PTR [rsp+0x30]
   140003aa3:	call   0x1400062d0
   140003aa8:	add    rsp,0x28
   140003aac:	ret    
   140003aad:	int3   
   140003aae:	int3   
   140003aaf:	int3   
   140003ab0:	mov    QWORD PTR [rsp+0x10],rdx
   140003ab5:	mov    QWORD PTR [rsp+0x8],rcx
   140003aba:	sub    rsp,0x28
   140003abe:	mov    rdx,QWORD PTR [rsp+0x38]
   140003ac3:	mov    rcx,QWORD PTR [rsp+0x30]
   140003ac8:	call   0x140005de0
   140003acd:	add    rsp,0x28
   140003ad1:	ret    
   140003ad2:	int3   
   140003ad3:	int3   
   140003ad4:	int3   
   140003ad5:	int3   
   140003ad6:	int3   
   140003ad7:	int3   
   140003ad8:	int3   
   140003ad9:	int3   
   140003ada:	int3   
   140003adb:	int3   
   140003adc:	int3   
   140003add:	int3   
   140003ade:	int3   
   140003adf:	int3   
   140003ae0:	mov    QWORD PTR [rsp+0x18],r8
   140003ae5:	mov    QWORD PTR [rsp+0x10],rdx
   140003aea:	mov    QWORD PTR [rsp+0x8],rcx
   140003aef:	sub    rsp,0x28
   140003af3:	mov    rdx,QWORD PTR [rsp+0x38]
   140003af8:	mov    rcx,QWORD PTR [rsp+0x30]
   140003afd:	call   0x140006270
   140003b02:	movzx  eax,al
   140003b05:	test   eax,eax
   140003b07:	je     0x140003b34
   140003b09:	mov    rcx,QWORD PTR [rsp+0x30]
   140003b0e:	call   0x140006370
   140003b13:	mov    r8,QWORD PTR [rsp+0x38]
   140003b18:	sub    r8,rax
   140003b1b:	sar    r8,1
   140003b1e:	mov    r9,QWORD PTR [rsp+0x40]
   140003b23:	mov    rdx,QWORD PTR [rsp+0x30]
   140003b28:	mov    rcx,QWORD PTR [rsp+0x30]
   140003b2d:	call   0x140005e10
   140003b32:	jmp    0x140003b86
   140003b34:	xor    r8d,r8d
   140003b37:	mov    rdx,QWORD PTR [rsp+0x40]
   140003b3c:	mov    rcx,QWORD PTR [rsp+0x30]
   140003b41:	call   0x140006190
   140003b46:	movzx  eax,al
   140003b49:	test   eax,eax
   140003b4b:	je     0x140003b81
   140003b4d:	mov    rcx,QWORD PTR [rsp+0x30]
   140003b52:	call   0x140006370
   140003b57:	mov    r9,QWORD PTR [rsp+0x40]
   140003b5c:	mov    r8,QWORD PTR [rsp+0x38]
   140003b61:	mov    rdx,QWORD PTR [rsp+0x30]
   140003b66:	mov    rdx,QWORD PTR [rdx+0x20]
   140003b6a:	mov    rcx,rax
   140003b6d:	call   0x14000b4b0
   140003b72:	mov    rdx,QWORD PTR [rsp+0x40]
   140003b77:	mov    rcx,QWORD PTR [rsp+0x30]
   140003b7c:	call   0x140006140
   140003b81:	mov    rax,QWORD PTR [rsp+0x30]
   140003b86:	add    rsp,0x28
   140003b8a:	ret    
   140003b8b:	int3   
   140003b8c:	int3   
   140003b8d:	int3   
   140003b8e:	int3   
   140003b8f:	int3   
   140003b90:	mov    QWORD PTR [rsp+0x8],rcx
   140003b95:	sub    rsp,0x28
   140003b99:	mov    rcx,QWORD PTR [rsp+0x30]
   140003b9e:	call   0x140006370
   140003ba3:	add    rsp,0x28
   140003ba7:	ret    
   140003ba8:	int3   
   140003ba9:	int3   
   140003baa:	int3   
   140003bab:	int3   
   140003bac:	int3   
   140003bad:	int3   
   140003bae:	int3   
   140003baf:	int3   
   140003bb0:	mov    QWORD PTR [rsp+0x8],rcx
   140003bb5:	mov    rax,QWORD PTR [rsp+0x8]
   140003bba:	mov    rax,QWORD PTR [rax+0x18]
   140003bbe:	ret    
   140003bbf:	int3   
   140003bc0:	mov    QWORD PTR [rsp+0x8],rcx
   140003bc5:	sub    rsp,0x18
   140003bc9:	mov    rax,QWORD PTR [rsp+0x20]
   140003bce:	cmp    QWORD PTR [rax+0x18],0x0
   140003bd3:	jne    0x140003bde
   140003bd5:	mov    DWORD PTR [rsp],0x1
   140003bdc:	jmp    0x140003be5
   140003bde:	mov    DWORD PTR [rsp],0x0
   140003be5:	mov    al,BYTE PTR [rsp]
   140003be8:	add    rsp,0x18
   140003bec:	ret    
   140003bed:	int3   
   140003bee:	int3   
   140003bef:	int3   
   140003bf0:	mov    QWORD PTR [rsp+0x8],rcx
   140003bf5:	sub    rsp,0x28
   140003bf9:	mov    rcx,QWORD PTR [rsp+0x30]
   140003bfe:	call   0x140006510
   140003c03:	mov    rcx,QWORD PTR [rsp+0x30]
   140003c08:	call   0x140012270
   140003c0d:	add    rsp,0x28
   140003c11:	ret    
   140003c12:	int3   
   140003c13:	int3   
   140003c14:	int3   
   140003c15:	int3   
   140003c16:	int3   
   140003c17:	int3   
   140003c18:	int3   
   140003c19:	int3   
   140003c1a:	int3   
   140003c1b:	int3   
   140003c1c:	int3   
   140003c1d:	int3   
   140003c1e:	int3   
   140003c1f:	int3   
   140003c20:	mov    QWORD PTR [rsp+0x10],rdx
   140003c25:	mov    QWORD PTR [rsp+0x8],rcx
   140003c2a:	sub    rsp,0x28
   140003c2e:	mov    r8,QWORD PTR [rsp+0x30]
   140003c33:	mov    rdx,QWORD PTR [rsp+0x30]
   140003c38:	mov    rdx,QWORD PTR [rdx+0x18]
   140003c3c:	mov    rcx,QWORD PTR [rsp+0x38]
   140003c41:	call   0x140008d60
   140003c46:	mov    rax,QWORD PTR [rsp+0x38]
   140003c4b:	add    rsp,0x28
   140003c4f:	ret    
   140003c50:	mov    QWORD PTR [rsp+0x8],rcx
   140003c55:	sub    rsp,0x28
   140003c59:	mov    rcx,QWORD PTR [rsp+0x30]
   140003c5e:	call   0x1400065b0
   140003c63:	mov    rcx,QWORD PTR [rsp+0x30]
   140003c68:	call   0x140012270
   140003c6d:	add    rsp,0x28
   140003c71:	ret    
   140003c72:	int3   
   140003c73:	int3   
   140003c74:	int3   
   140003c75:	int3   
   140003c76:	int3   
   140003c77:	int3   
   140003c78:	int3   
   140003c79:	int3   
   140003c7a:	int3   
   140003c7b:	int3   
   140003c7c:	int3   
   140003c7d:	int3   
   140003c7e:	int3   
   140003c7f:	int3   
   140003c80:	mov    QWORD PTR [rsp+0x20],r9
   140003c85:	mov    QWORD PTR [rsp+0x18],r8
   140003c8a:	mov    QWORD PTR [rsp+0x10],rdx
   140003c8f:	mov    QWORD PTR [rsp+0x8],rcx
   140003c94:	sub    rsp,0x38
   140003c98:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003ca1:	mov    r9,QWORD PTR [rsp+0x58]
   140003ca6:	mov    r8,QWORD PTR [rsp+0x50]
   140003cab:	mov    rdx,QWORD PTR [rsp+0x48]
   140003cb0:	mov    rcx,QWORD PTR [rsp+0x40]
   140003cb5:	call   0x140004590
   140003cba:	nop
   140003cbb:	mov    rcx,QWORD PTR [rsp+0x40]
   140003cc0:	lea    rax,[rip+0x3b801]        # 0x14003f4c8
   140003cc7:	mov    QWORD PTR [rcx],rax
   140003cca:	mov    rcx,QWORD PTR [rsp+0x40]
   140003ccf:	add    rcx,0xf0
   140003cd6:	call   0x140006640
   140003cdb:	mov    r11,QWORD PTR [rsp+0x40]
   140003ce0:	mov    BYTE PTR [r11+0x120],0x0
   140003ce8:	mov    rax,QWORD PTR [rsp+0x40]
   140003ced:	add    rsp,0x38
   140003cf1:	ret    
   140003cf2:	int3   
   140003cf3:	int3   
   140003cf4:	int3   
   140003cf5:	int3   
   140003cf6:	int3   
   140003cf7:	int3   
   140003cf8:	int3   
   140003cf9:	int3   
   140003cfa:	int3   
   140003cfb:	int3   
   140003cfc:	int3   
   140003cfd:	int3   
   140003cfe:	int3   
   140003cff:	int3   
   140003d00:	mov    QWORD PTR [rsp+0x8],rcx
   140003d05:	push   rsi
   140003d06:	push   rdi
   140003d07:	sub    rsp,0x68
   140003d0b:	lea    rcx,[rsp+0x20]
   140003d10:	call   0x140004e40
   140003d15:	mov    rcx,QWORD PTR [rsp+0x80]
   140003d1d:	add    rcx,0xf0
   140003d24:	lea    rdx,[rsp+0x30]
   140003d29:	call   0x140006690
   140003d2e:	mov    rcx,QWORD PTR [rsp+0x80]
   140003d36:	add    rcx,0xf0
   140003d3d:	lea    rdx,[rsp+0x40]
   140003d42:	call   0x140003c20
   140003d47:	lea    rdi,[rsp+0x50]
   140003d4c:	mov    rsi,rax
   140003d4f:	mov    ecx,0x10
   140003d54:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140003d56:	lea    rdi,[rsp+0x20]
   140003d5b:	lea    rsi,[rsp+0x50]
   140003d60:	mov    ecx,0x10
   140003d65:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140003d67:	jmp    0x140003d73
   140003d69:	lea    rcx,[rsp+0x20]
   140003d6e:	call   0x140006a40
   140003d73:	lea    rdx,[rsp+0x30]
   140003d78:	lea    rcx,[rsp+0x20]
   140003d7d:	call   0x140004f40
   140003d82:	movzx  eax,al
   140003d85:	test   eax,eax
   140003d87:	je     0x140003dba
   140003d89:	mov    rdi,QWORD PTR [rsp+0x80]
   140003d91:	add    rdi,0xc8
   140003d98:	lea    rcx,[rsp+0x20]
   140003d9d:	call   0x1400120b0
   140003da2:	mov    rdx,rdi
   140003da5:	mov    rcx,rax
   140003da8:	call   0x14000b500
   140003dad:	movzx  eax,al
   140003db0:	test   eax,eax
   140003db2:	je     0x140003db8
   140003db4:	mov    al,0x1
   140003db6:	jmp    0x140003dbc
   140003db8:	jmp    0x140003d69
   140003dba:	xor    al,al
   140003dbc:	add    rsp,0x68
   140003dc0:	pop    rdi
   140003dc1:	pop    rsi
   140003dc2:	ret    
   140003dc3:	int3   
   140003dc4:	int3   
   140003dc5:	int3   
   140003dc6:	int3   
   140003dc7:	int3   
   140003dc8:	int3   
   140003dc9:	int3   
   140003dca:	int3   
   140003dcb:	int3   
   140003dcc:	int3   
   140003dcd:	int3   
   140003dce:	int3   
   140003dcf:	int3   
   140003dd0:	mov    QWORD PTR [rsp+0x18],r8
   140003dd5:	mov    QWORD PTR [rsp+0x10],rdx
   140003dda:	mov    QWORD PTR [rsp+0x8],rcx
   140003ddf:	push   rsi
   140003de0:	push   rdi
   140003de1:	sub    rsp,0x328
   140003de8:	mov    QWORD PTR [rsp+0x2e8],0xfffffffffffffffe
   140003df4:	mov    rax,QWORD PTR [rip+0x45665]        # 0x140049460
   140003dfb:	xor    rax,rsp
   140003dfe:	mov    QWORD PTR [rsp+0x318],rax
   140003e06:	mov    DWORD PTR [rsp+0x2b0],0x0
   140003e11:	lea    rax,[rsp+0x1b0]
   140003e19:	mov    QWORD PTR [rsp+0x1d8],rax
   140003e21:	mov    rdx,QWORD PTR [rsp+0x350]
   140003e29:	mov    rcx,QWORD PTR [rsp+0x1d8]
   140003e31:	call   0x140005d30
   140003e36:	mov    QWORD PTR [rsp+0x2f0],rax
   140003e3e:	mov    r8,QWORD PTR [rsp+0x2f0]
   140003e46:	lea    rdx,[rsp+0x28]
   140003e4b:	mov    rcx,QWORD PTR [rsp+0x340]
   140003e53:	call   0x1400046f0
   140003e58:	nop
   140003e59:	mov    rcx,QWORD PTR [rsp+0x340]
   140003e61:	add    rcx,0xf0
   140003e68:	call   0x1400066c0
   140003e6d:	movzx  eax,al
   140003e70:	test   eax,eax
   140003e72:	jne    0x140004179
   140003e78:	mov    BYTE PTR [rsp+0x1a0],0x1
   140003e80:	mov    r8d,0x1
   140003e86:	mov    edx,0x3
   140003e8b:	lea    rcx,[rsp+0x90]
   140003e93:	call   0x140006b00
   140003e98:	nop
   140003e99:	lea    rcx,[rsp+0x78]
   140003e9e:	call   0x140004e40
   140003ea3:	mov    rcx,QWORD PTR [rsp+0x340]
   140003eab:	add    rcx,0xf0
   140003eb2:	lea    rdx,[rsp+0x190]
   140003eba:	call   0x140006690
   140003ebf:	mov    rcx,QWORD PTR [rsp+0x340]
   140003ec7:	add    rcx,0xf0
   140003ece:	lea    rdx,[rsp+0x1e0]
   140003ed6:	call   0x140003c20
   140003edb:	lea    rdi,[rsp+0x2d8]
   140003ee3:	mov    rsi,rax
   140003ee6:	mov    ecx,0x10
   140003eeb:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140003eed:	lea    rdi,[rsp+0x78]
   140003ef2:	lea    rsi,[rsp+0x2d8]
   140003efa:	mov    ecx,0x10
   140003eff:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140003f01:	jmp    0x140003f0d
   140003f03:	lea    rcx,[rsp+0x78]
   140003f08:	call   0x140006a40
   140003f0d:	lea    rdx,[rsp+0x190]
   140003f15:	lea    rcx,[rsp+0x78]
   140003f1a:	call   0x140004f40
   140003f1f:	movzx  eax,al
   140003f22:	test   eax,eax
   140003f24:	je     0x140003fce
   140003f2a:	movzx  eax,BYTE PTR [rsp+0x1a0]
   140003f32:	test   eax,eax
   140003f34:	je     0x140003f40
   140003f36:	mov    BYTE PTR [rsp+0x1a0],0x0
   140003f3e:	jmp    0x140003f80
   140003f40:	lea    rax,[rsp+0x90]
   140003f48:	test   rax,rax
   140003f4b:	je     0x140003f63
   140003f4d:	lea    rax,[rsp+0x90]
   140003f55:	add    rax,0x10
   140003f59:	mov    QWORD PTR [rsp+0x2f8],rax
   140003f61:	jmp    0x140003f6f
   140003f63:	mov    QWORD PTR [rsp+0x2f8],0x0
   140003f6f:	mov    dx,0x7c
   140003f73:	mov    rcx,QWORD PTR [rsp+0x2f8]
   140003f7b:	call   0x14000b540
   140003f80:	lea    rax,[rsp+0x90]
   140003f88:	test   rax,rax
   140003f8b:	je     0x140003fa3
   140003f8d:	lea    rax,[rsp+0x90]
   140003f95:	add    rax,0x10
   140003f99:	mov    QWORD PTR [rsp+0x300],rax
   140003fa1:	jmp    0x140003faf
   140003fa3:	mov    QWORD PTR [rsp+0x300],0x0
   140003faf:	lea    rcx,[rsp+0x78]
   140003fb4:	call   0x1400120b0
   140003fb9:	mov    rdx,rax
   140003fbc:	mov    rcx,QWORD PTR [rsp+0x300]
   140003fc4:	call   0x14000b860
   140003fc9:	jmp    0x140003f03
   140003fce:	lea    rdx,[rip+0x3b2b3]        # 0x14003f288
   140003fd5:	lea    rcx,[rsp+0x50]
   140003fda:	call   0x140003a30
   140003fdf:	nop
   140003fe0:	xor    r8d,r8d
   140003fe3:	lea    rdx,[rsp+0x50]
   140003fe8:	lea    rcx,[rsp+0x28]
   140003fed:	call   0x1400060f0
   140003ff2:	mov    QWORD PTR [rsp+0x1a8],rax
   140003ffa:	mov    rax,QWORD PTR [rsp+0x1a8]
   140004002:	cmp    QWORD PTR [rip+0x3b2ef],rax        # 0x14003f2f8
   140004009:	je     0x140004161
   14000400f:	lea    rcx,[rsp+0x50]
   140004014:	call   0x140003bb0
   140004019:	mov    rdi,rax
   14000401c:	lea    rdx,[rsp+0x228]
   140004024:	lea    rcx,[rsp+0x28]
   140004029:	call   0x140006040
   14000402e:	mov    r8,QWORD PTR [rsp+0x1a8]
   140004036:	lea    rdx,[rsp+0x238]
   14000403e:	mov    rcx,rax
   140004041:	call   0x1400078f0
   140004046:	mov    r8,rdi
   140004049:	lea    rdx,[rsp+0x248]
   140004051:	mov    rcx,rax
   140004054:	call   0x1400078f0
   140004059:	lea    rdi,[rsp+0x2c8]
   140004061:	mov    rsi,rax
   140004064:	mov    ecx,0x10
   140004069:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000406b:	lea    rdi,[rsp+0x218]
   140004073:	lea    rsi,[rsp+0x2c8]
   14000407b:	mov    ecx,0x10
   140004080:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140004082:	lea    rdx,[rsp+0x268]
   14000408a:	lea    rcx,[rsp+0x28]
   14000408f:	call   0x140006040
   140004094:	mov    r8,QWORD PTR [rsp+0x1a8]
   14000409c:	lea    rdx,[rsp+0x278]
   1400040a4:	mov    rcx,rax
   1400040a7:	call   0x1400078f0
   1400040ac:	lea    rdi,[rsp+0x2b8]
   1400040b4:	mov    rsi,rax
   1400040b7:	mov    ecx,0x10
   1400040bc:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400040be:	lea    rdi,[rsp+0x258]
   1400040c6:	lea    rsi,[rsp+0x2b8]
   1400040ce:	mov    ecx,0x10
   1400040d3:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400040d5:	lea    rdx,[rsp+0x1f0]
   1400040dd:	lea    rcx,[rsp+0x90]
   1400040e5:	call   0x140006c20
   1400040ea:	mov    QWORD PTR [rsp+0x308],rax
   1400040f2:	mov    rax,QWORD PTR [rsp+0x308]
   1400040fa:	mov    QWORD PTR [rsp+0x310],rax
   140004102:	lea    rdi,[rsp+0x2a0]
   14000410a:	lea    rsi,[rsp+0x218]
   140004112:	mov    ecx,0x10
   140004117:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140004119:	lea    rdi,[rsp+0x290]
   140004121:	lea    rsi,[rsp+0x258]
   140004129:	mov    ecx,0x10
   14000412e:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140004130:	mov    r9,QWORD PTR [rsp+0x310]
   140004138:	lea    r8,[rsp+0x2a0]
   140004140:	lea    rdx,[rsp+0x290]
   140004148:	lea    rcx,[rsp+0x28]
   14000414d:	call   0x140005f50
   140004152:	nop
   140004153:	lea    rcx,[rsp+0x1f0]
   14000415b:	call   0x140003a90
   140004160:	nop
   140004161:	lea    rcx,[rsp+0x50]
   140004166:	call   0x140003a90
   14000416b:	nop
   14000416c:	lea    rcx,[rsp+0x90]
   140004174:	call   0x140005120
   140004179:	lea    rdx,[rsp+0x28]
   14000417e:	mov    rcx,QWORD PTR [rsp+0x348]
   140004186:	call   0x140005d30
   14000418b:	mov    eax,DWORD PTR [rsp+0x2b0]
   140004192:	or     eax,0x1
   140004195:	mov    DWORD PTR [rsp+0x2b0],eax
   14000419c:	lea    rcx,[rsp+0x28]
   1400041a1:	call   0x140003a90
   1400041a6:	mov    rax,QWORD PTR [rsp+0x348]
   1400041ae:	mov    rcx,QWORD PTR [rsp+0x318]
   1400041b6:	xor    rcx,rsp
   1400041b9:	call   0x14001c500
   1400041be:	add    rsp,0x328
   1400041c5:	pop    rdi
   1400041c6:	pop    rsi
   1400041c7:	ret    
   1400041c8:	int3   
   1400041c9:	int3   
   1400041ca:	int3   
   1400041cb:	int3   
   1400041cc:	int3   
   1400041cd:	int3   
   1400041ce:	int3   
   1400041cf:	int3   
   1400041d0:	mov    QWORD PTR [rsp+0x18],r8
   1400041d5:	mov    QWORD PTR [rsp+0x10],rdx
   1400041da:	mov    QWORD PTR [rsp+0x8],rcx
   1400041df:	push   rsi
   1400041e0:	push   rdi
   1400041e1:	sub    rsp,0x268
   1400041e8:	mov    QWORD PTR [rsp+0x228],0xfffffffffffffffe
   1400041f4:	mov    rax,QWORD PTR [rip+0x45265]        # 0x140049460
   1400041fb:	xor    rax,rsp
   1400041fe:	mov    QWORD PTR [rsp+0x250],rax
   140004206:	mov    DWORD PTR [rsp+0x210],0x0
   140004211:	lea    rax,[rsp+0x1a8]
   140004219:	mov    QWORD PTR [rsp+0x1d0],rax
   140004221:	mov    rdx,QWORD PTR [rsp+0x290]
   140004229:	mov    rcx,QWORD PTR [rsp+0x1d0]
   140004231:	call   0x140005d30
   140004236:	mov    QWORD PTR [rsp+0x230],rax
   14000423e:	mov    r8,QWORD PTR [rsp+0x230]
   140004246:	lea    rdx,[rsp+0x28]
   14000424b:	mov    rcx,QWORD PTR [rsp+0x280]
   140004253:	call   0x140004840
   140004258:	nop
   140004259:	mov    rax,QWORD PTR [rsp+0x280]
   140004261:	movzx  eax,BYTE PTR [rax+0x120]
   140004268:	test   eax,eax
   14000426a:	je     0x140004484
   140004270:	lea    rdx,[rip+0x3b021]        # 0x14003f298
   140004277:	lea    rcx,[rsp+0x28]
   14000427c:	call   0x140005db0
   140004281:	lea    rcx,[rsp+0x50]
   140004286:	call   0x140004e40
   14000428b:	mov    rcx,QWORD PTR [rsp+0x280]
   140004293:	add    rcx,0xf0
   14000429a:	lea    rdx,[rsp+0x60]
   14000429f:	call   0x140006690
   1400042a4:	mov    rcx,QWORD PTR [rsp+0x280]
   1400042ac:	add    rcx,0xf0
   1400042b3:	lea    rdx,[rsp+0x1d8]
   1400042bb:	call   0x140003c20
   1400042c0:	lea    rdi,[rsp+0x218]
   1400042c8:	mov    rsi,rax
   1400042cb:	mov    ecx,0x10
   1400042d0:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400042d2:	lea    rdi,[rsp+0x50]
   1400042d7:	lea    rsi,[rsp+0x218]
   1400042df:	mov    ecx,0x10
   1400042e4:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400042e6:	jmp    0x1400042f2
   1400042e8:	lea    rcx,[rsp+0x50]
   1400042ed:	call   0x140006a40
   1400042f2:	lea    rdx,[rsp+0x60]
   1400042f7:	lea    rcx,[rsp+0x50]
   1400042fc:	call   0x140004f40
   140004301:	movzx  eax,al
   140004304:	test   eax,eax
   140004306:	je     0x140004484
   14000430c:	lea    rdx,[rip+0x3afa1]        # 0x14003f2b4
   140004313:	lea    rcx,[rsp+0x28]
   140004318:	call   0x140005db0
   14000431d:	mov    QWORD PTR [rsp+0x98],0x3
   140004329:	mov    QWORD PTR [rsp+0x1a0],0xf
   140004335:	mov    r8w,0x20
   14000433a:	mov    edx,0x3
   14000433f:	lea    rcx,[rsp+0x70]
   140004344:	call   0x140005cc0
   140004349:	nop
   14000434a:	lea    rcx,[rsp+0x50]
   14000434f:	call   0x1400120b0
   140004354:	mov    rdx,rax
   140004357:	lea    rcx,[rsp+0x70]
   14000435c:	call   0x140003ab0
   140004361:	lea    rcx,[rsp+0x70]
   140004366:	call   0x140003bb0
   14000436b:	cmp    rax,0xf
   14000436f:	jae    0x140004385
   140004371:	mov    r8w,0x20
   140004376:	mov    edx,0xf
   14000437b:	lea    rcx,[rsp+0x70]
   140004380:	call   0x140006080
   140004385:	mov    r8d,0x1
   14000438b:	mov    edx,0x3
   140004390:	lea    rcx,[rsp+0xa0]
   140004398:	call   0x140006b00
   14000439d:	nop
   14000439e:	lea    rax,[rsp+0xa0]
   1400043a6:	test   rax,rax
   1400043a9:	je     0x1400043c1
   1400043ab:	lea    rax,[rsp+0xa0]
   1400043b3:	add    rax,0x10
   1400043b7:	mov    QWORD PTR [rsp+0x238],rax
   1400043bf:	jmp    0x1400043cd
   1400043c1:	mov    QWORD PTR [rsp+0x238],0x0
   1400043cd:	lea    rcx,[rsp+0x50]
   1400043d2:	call   0x1400120b0
   1400043d7:	mov    rdi,rax
   1400043da:	add    rdi,0x28
   1400043de:	lea    rdx,[rip+0x3aed7]        # 0x14003f2bc
   1400043e5:	mov    rcx,QWORD PTR [rsp+0x238]
   1400043ed:	call   0x14000bc00
   1400043f2:	lea    rdx,[rsp+0x70]
   1400043f7:	mov    rcx,rax
   1400043fa:	call   0x14000b860
   1400043ff:	lea    rdx,[rip+0x3aeb2]        # 0x14003f2b8
   140004406:	mov    rcx,rax
   140004409:	call   0x14000bc00
   14000440e:	mov    rdx,rdi
   140004411:	mov    rcx,rax
   140004414:	call   0x14000b860
   140004419:	lea    rdx,[rsp+0x1e8]
   140004421:	lea    rcx,[rsp+0xa0]
   140004429:	call   0x140006c20
   14000442e:	mov    QWORD PTR [rsp+0x240],rax
   140004436:	mov    rax,QWORD PTR [rsp+0x240]
   14000443e:	mov    QWORD PTR [rsp+0x248],rax
   140004446:	mov    rdx,QWORD PTR [rsp+0x248]
   14000444e:	lea    rcx,[rsp+0x28]
   140004453:	call   0x140003ab0
   140004458:	nop
   140004459:	lea    rcx,[rsp+0x1e8]
   140004461:	call   0x140003a90
   140004466:	nop
   140004467:	lea    rcx,[rsp+0xa0]
   14000446f:	call   0x140005120
   140004474:	nop
   140004475:	lea    rcx,[rsp+0x70]
   14000447a:	call   0x140003a90
   14000447f:	jmp    0x1400042e8
   140004484:	lea    rdx,[rsp+0x28]
   140004489:	mov    rcx,QWORD PTR [rsp+0x288]
   140004491:	call   0x140005d30
   140004496:	mov    eax,DWORD PTR [rsp+0x210]
   14000449d:	or     eax,0x1
   1400044a0:	mov    DWORD PTR [rsp+0x210],eax
   1400044a7:	lea    rcx,[rsp+0x28]
   1400044ac:	call   0x140003a90
   1400044b1:	nop
   1400044b2:	mov    rcx,QWORD PTR [rsp+0x290]
   1400044ba:	call   0x140003a90
   1400044bf:	mov    rax,QWORD PTR [rsp+0x288]
   1400044c7:	mov    rcx,QWORD PTR [rsp+0x250]
   1400044cf:	xor    rcx,rsp
   1400044d2:	call   0x14001c500
   1400044d7:	add    rsp,0x268
   1400044de:	pop    rdi
   1400044df:	pop    rsi
   1400044e0:	ret    
   1400044e1:	int3   
   1400044e2:	int3   
   1400044e3:	int3   
   1400044e4:	int3   
   1400044e5:	int3   
   1400044e6:	int3   
   1400044e7:	int3   
   1400044e8:	int3   
   1400044e9:	int3   
   1400044ea:	int3   
   1400044eb:	int3   
   1400044ec:	int3   
   1400044ed:	int3   
   1400044ee:	int3   
   1400044ef:	int3   
   1400044f0:	mov    QWORD PTR [rsp+0x18],r8
   1400044f5:	mov    QWORD PTR [rsp+0x10],rdx
   1400044fa:	mov    QWORD PTR [rsp+0x8],rcx
   1400044ff:	sub    rsp,0x98
   140004506:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   14000450f:	mov    rcx,QWORD PTR [rsp+0xb0]
   140004517:	call   0x140003bc0
   14000451c:	movzx  eax,al
   14000451f:	test   eax,eax
   140004521:	jne    0x140004532
   140004523:	mov    rax,QWORD PTR [rsp+0xa0]
   14000452b:	mov    BYTE PTR [rax+0x120],0x1
   140004532:	mov    r8,QWORD PTR [rsp+0xb0]
   14000453a:	mov    rdx,QWORD PTR [rsp+0xa8]
   140004542:	lea    rcx,[rsp+0x20]
   140004547:	call   0x140006ab0
   14000454c:	mov    QWORD PTR [rsp+0x78],rax
   140004551:	mov    rax,QWORD PTR [rsp+0x78]
   140004556:	mov    QWORD PTR [rsp+0x80],rax
   14000455e:	mov    rcx,QWORD PTR [rsp+0xa0]
   140004566:	add    rcx,0xf0
   14000456d:	mov    rdx,QWORD PTR [rsp+0x80]
   140004575:	call   0x140006700
   14000457a:	nop
   14000457b:	lea    rcx,[rsp+0x20]
   140004580:	call   0x140005150
   140004585:	add    rsp,0x98
   14000458c:	ret    
   14000458d:	int3   
   14000458e:	int3   
   14000458f:	int3   
   140004590:	mov    QWORD PTR [rsp+0x20],r9
   140004595:	mov    QWORD PTR [rsp+0x18],r8
   14000459a:	mov    QWORD PTR [rsp+0x10],rdx
   14000459f:	mov    QWORD PTR [rsp+0x8],rcx
   1400045a4:	sub    rsp,0x38
   1400045a8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400045b1:	mov    r8,QWORD PTR [rsp+0x50]
   1400045b6:	mov    rdx,QWORD PTR [rsp+0x48]
   1400045bb:	mov    rcx,QWORD PTR [rsp+0x40]
   1400045c0:	call   0x140032f80
   1400045c5:	nop
   1400045c6:	mov    rcx,QWORD PTR [rsp+0x40]
   1400045cb:	lea    rax,[rip+0x3aea6]        # 0x14003f478
   1400045d2:	mov    QWORD PTR [rcx],rax
   1400045d5:	mov    rcx,QWORD PTR [rsp+0x40]
   1400045da:	add    rcx,0x70
   1400045de:	mov    rdx,QWORD PTR [rsp+0x58]
   1400045e3:	call   0x140005d30
   1400045e8:	mov    r11,QWORD PTR [rsp+0x40]
   1400045ed:	mov    BYTE PTR [r11+0x98],0x0
   1400045f5:	mov    rcx,QWORD PTR [rsp+0x40]
   1400045fa:	add    rcx,0xa0
   140004601:	call   0x140005c70
   140004606:	mov    rcx,QWORD PTR [rsp+0x40]
   14000460b:	add    rcx,0xc8
   140004612:	call   0x140005c70
   140004617:	nop
   140004618:	mov    rax,QWORD PTR [rsp+0x40]
   14000461d:	add    rsp,0x38
   140004621:	ret    
   140004622:	int3   
   140004623:	int3   
   140004624:	int3   
   140004625:	int3   
   140004626:	int3   
   140004627:	int3   
   140004628:	int3   
   140004629:	int3   
   14000462a:	int3   
   14000462b:	int3   
   14000462c:	int3   
   14000462d:	int3   
   14000462e:	int3   
   14000462f:	int3   
   140004630:	mov    QWORD PTR [rsp+0x10],rdx
   140004635:	mov    QWORD PTR [rsp+0x8],rcx
   14000463a:	sub    rsp,0x28
   14000463e:	mov    rcx,QWORD PTR [rsp+0x30]
   140004643:	add    rcx,0xc8
   14000464a:	mov    rdx,QWORD PTR [rsp+0x38]
   14000464f:	call   0x140005d80
   140004654:	mov    rcx,QWORD PTR [rsp+0x30]
   140004659:	add    rcx,0xa0
   140004660:	mov    rdx,QWORD PTR [rsp+0x38]
   140004665:	call   0x140005d80
   14000466a:	mov    r11,QWORD PTR [rsp+0x30]
   14000466f:	mov    BYTE PTR [r11+0x98],0x1
   140004677:	add    rsp,0x28
   14000467b:	ret    
   14000467c:	int3   
   14000467d:	int3   
   14000467e:	int3   
   14000467f:	int3   
   140004680:	mov    QWORD PTR [rsp+0x8],rcx
   140004685:	sub    rsp,0x38
   140004689:	mov    rcx,QWORD PTR [rsp+0x40]
   14000468e:	call   0x1400320a0
   140004693:	movzx  eax,al
   140004696:	test   eax,eax
   140004698:	jne    0x1400046a4
   14000469a:	mov    DWORD PTR [rsp+0x20],0x1
   1400046a2:	jmp    0x1400046ac
   1400046a4:	mov    DWORD PTR [rsp+0x20],0x0
   1400046ac:	mov    al,BYTE PTR [rsp+0x20]
   1400046b0:	add    rsp,0x38
   1400046b4:	ret    
   1400046b5:	int3   
   1400046b6:	int3   
   1400046b7:	int3   
   1400046b8:	int3   
   1400046b9:	int3   
   1400046ba:	int3   
   1400046bb:	int3   
   1400046bc:	int3   
   1400046bd:	int3   
   1400046be:	int3   
   1400046bf:	int3   
   1400046c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400046c5:	mov    QWORD PTR [rsp+0x8],rcx
   1400046ca:	sub    rsp,0x28
   1400046ce:	mov    rdx,QWORD PTR [rsp+0x30]
   1400046d3:	add    rdx,0xc8
   1400046da:	mov    rcx,QWORD PTR [rsp+0x38]
   1400046df:	call   0x140032640
   1400046e4:	add    rsp,0x28
   1400046e8:	ret    
   1400046e9:	int3   
   1400046ea:	int3   
   1400046eb:	int3   
   1400046ec:	int3   
   1400046ed:	int3   
   1400046ee:	int3   
   1400046ef:	int3   
   1400046f0:	mov    QWORD PTR [rsp+0x18],r8
   1400046f5:	mov    QWORD PTR [rsp+0x10],rdx
   1400046fa:	mov    QWORD PTR [rsp+0x8],rcx
   1400046ff:	sub    rsp,0xa8
   140004706:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   14000470f:	mov    DWORD PTR [rsp+0x70],0x0
   140004717:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000471f:	call   0x140003bb0
   140004724:	test   rax,rax
   140004727:	je     0x140004736
   140004729:	mov    DWORD PTR [rsp+0x80],0x1
   140004734:	jmp    0x140004741
   140004736:	mov    DWORD PTR [rsp+0x80],0x0
   140004741:	movzx  eax,BYTE PTR [rsp+0x80]
   140004749:	mov    BYTE PTR [rsp+0x38],al
   14000474d:	movzx  eax,BYTE PTR [rsp+0x38]
   140004752:	test   eax,eax
   140004754:	je     0x14000476c
   140004756:	mov    rax,QWORD PTR [rsp+0xb0]
   14000475e:	add    rax,0x70
   140004762:	mov    QWORD PTR [rsp+0x88],rax
   14000476a:	jmp    0x1400047b0
   14000476c:	lea    rdx,[rip+0x3ae95]        # 0x14003f608
   140004773:	lea    rcx,[rsp+0x48]
   140004778:	call   0x140003a30
   14000477d:	mov    QWORD PTR [rsp+0x90],rax
   140004785:	mov    rax,QWORD PTR [rsp+0x90]
   14000478d:	mov    QWORD PTR [rsp+0x98],rax
   140004795:	mov    eax,DWORD PTR [rsp+0x70]
   140004799:	or     eax,0x1
   14000479c:	mov    DWORD PTR [rsp+0x70],eax
   1400047a0:	mov    rax,QWORD PTR [rsp+0x98]
   1400047a8:	mov    QWORD PTR [rsp+0x88],rax
   1400047b0:	mov    rax,QWORD PTR [rsp+0x88]
   1400047b8:	mov    QWORD PTR [rsp+0x40],rax
   1400047bd:	mov    rax,QWORD PTR [rsp+0x40]
   1400047c2:	mov    QWORD PTR [rsp+0x20],rax
   1400047c7:	mov    rax,QWORD PTR [rsp+0xb0]
   1400047cf:	movzx  r9d,BYTE PTR [rax+0x98]
   1400047d7:	mov    r8,QWORD PTR [rsp+0xc0]
   1400047df:	mov    rdx,QWORD PTR [rsp+0xb8]
   1400047e7:	mov    rcx,QWORD PTR [rsp+0xb0]
   1400047ef:	call   0x140033f40
   1400047f4:	mov    eax,DWORD PTR [rsp+0x70]
   1400047f8:	or     eax,0x2
   1400047fb:	mov    DWORD PTR [rsp+0x70],eax
   1400047ff:	mov    eax,DWORD PTR [rsp+0x70]
   140004803:	and    eax,0x1
   140004806:	test   eax,eax
   140004808:	je     0x14000481a
   14000480a:	and    DWORD PTR [rsp+0x70],0xfffffffe
   14000480f:	lea    rcx,[rsp+0x48]
   140004814:	call   0x140003a90
   140004819:	nop
   14000481a:	mov    rcx,QWORD PTR [rsp+0xc0]
   140004822:	call   0x140003a90
   140004827:	mov    rax,QWORD PTR [rsp+0xb8]
   14000482f:	add    rsp,0xa8
   140004836:	ret    
   140004837:	int3   
   140004838:	int3   
   140004839:	int3   
   14000483a:	int3   
   14000483b:	int3   
   14000483c:	int3   
   14000483d:	int3   
   14000483e:	int3   
   14000483f:	int3   
   140004840:	mov    QWORD PTR [rsp+0x18],r8
   140004845:	mov    QWORD PTR [rsp+0x10],rdx
   14000484a:	mov    QWORD PTR [rsp+0x8],rcx
   14000484f:	sub    rsp,0x48
   140004853:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000485c:	mov    DWORD PTR [rsp+0x28],0x0
   140004864:	mov    r9,QWORD PTR [rsp+0x50]
   140004869:	add    r9,0x70
   14000486d:	mov    r8,QWORD PTR [rsp+0x60]
   140004872:	mov    rdx,QWORD PTR [rsp+0x58]
   140004877:	mov    rcx,QWORD PTR [rsp+0x50]
   14000487c:	call   0x140033cc0
   140004881:	mov    eax,DWORD PTR [rsp+0x28]
   140004885:	or     eax,0x1
   140004888:	mov    DWORD PTR [rsp+0x28],eax
   14000488c:	mov    rcx,QWORD PTR [rsp+0x60]
   140004891:	call   0x140003a90
   140004896:	mov    rax,QWORD PTR [rsp+0x58]
   14000489b:	add    rsp,0x48
   14000489f:	ret    
   1400048a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400048a5:	mov    rax,QWORD PTR [rsp+0x8]
   1400048aa:	add    rax,0xc8
   1400048b0:	ret    
   1400048b1:	int3   
   1400048b2:	int3   
   1400048b3:	int3   
   1400048b4:	int3   
   1400048b5:	int3   
   1400048b6:	int3   
   1400048b7:	int3   
   1400048b8:	int3   
   1400048b9:	int3   
   1400048ba:	int3   
   1400048bb:	int3   
   1400048bc:	int3   
   1400048bd:	int3   
   1400048be:	int3   
   1400048bf:	int3   
   1400048c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400048c5:	sub    rsp,0x28
   1400048c9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400048ce:	call   0x1400067e0
   1400048d3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400048d8:	call   0x140012270
   1400048dd:	add    rsp,0x28
   1400048e1:	ret    
   1400048e2:	int3   
   1400048e3:	int3   
   1400048e4:	int3   
   1400048e5:	int3   
   1400048e6:	int3   
   1400048e7:	int3   
   1400048e8:	int3   
   1400048e9:	int3   
   1400048ea:	int3   
   1400048eb:	int3   
   1400048ec:	int3   
   1400048ed:	int3   
   1400048ee:	int3   
   1400048ef:	int3   
   1400048f0:	mov    QWORD PTR [rsp+0x20],r9
   1400048f5:	mov    QWORD PTR [rsp+0x18],r8
   1400048fa:	mov    QWORD PTR [rsp+0x10],rdx
   1400048ff:	mov    QWORD PTR [rsp+0x8],rcx
   140004904:	sub    rsp,0x38
   140004908:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004911:	mov    r8,QWORD PTR [rsp+0x50]
   140004916:	mov    rdx,QWORD PTR [rsp+0x48]
   14000491b:	mov    rcx,QWORD PTR [rsp+0x40]
   140004920:	call   0x140032f80
   140004925:	nop
   140004926:	mov    rcx,QWORD PTR [rsp+0x40]
   14000492b:	lea    rax,[rip+0x3abe6]        # 0x14003f518
   140004932:	mov    QWORD PTR [rcx],rax
   140004935:	mov    rcx,QWORD PTR [rsp+0x40]
   14000493a:	add    rcx,0x70
   14000493e:	mov    rdx,QWORD PTR [rsp+0x58]
   140004943:	call   0x140005d30
   140004948:	mov    r11,QWORD PTR [rsp+0x40]
   14000494d:	mov    BYTE PTR [r11+0x98],0x0
   140004955:	mov    rax,QWORD PTR [rsp+0x40]
   14000495a:	add    rsp,0x38
   14000495e:	ret    
   14000495f:	int3   
   140004960:	mov    QWORD PTR [rsp+0x10],rdx
   140004965:	mov    QWORD PTR [rsp+0x8],rcx
   14000496a:	mov    rcx,QWORD PTR [rsp+0x8]
   14000496f:	mov    rax,QWORD PTR [rsp+0x10]
   140004974:	mov    eax,DWORD PTR [rax]
   140004976:	mov    DWORD PTR [rcx+0xa0],eax
   14000497c:	mov    rcx,QWORD PTR [rsp+0x8]
   140004981:	mov    rax,QWORD PTR [rsp+0x10]
   140004986:	mov    eax,DWORD PTR [rax]
   140004988:	mov    DWORD PTR [rcx+0x9c],eax
   14000498e:	mov    rax,QWORD PTR [rsp+0x8]
   140004993:	mov    BYTE PTR [rax+0x98],0x1
   14000499a:	ret    
   14000499b:	int3   
   14000499c:	int3   
   14000499d:	int3   
   14000499e:	int3   
   14000499f:	int3   
   1400049a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400049a5:	sub    rsp,0x38
   1400049a9:	mov    rax,QWORD PTR [rsp+0x40]
   1400049ae:	movzx  eax,BYTE PTR [rax+0x98]
   1400049b5:	test   eax,eax
   1400049b7:	jne    0x1400049d4
   1400049b9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400049be:	call   0x1400320a0
   1400049c3:	movzx  eax,al
   1400049c6:	test   eax,eax
   1400049c8:	jne    0x1400049d4
   1400049ca:	mov    DWORD PTR [rsp+0x20],0x0
   1400049d2:	jmp    0x1400049dc
   1400049d4:	mov    DWORD PTR [rsp+0x20],0x1
   1400049dc:	mov    al,BYTE PTR [rsp+0x20]
   1400049e0:	add    rsp,0x38
   1400049e4:	ret    
   1400049e5:	int3   
   1400049e6:	int3   
   1400049e7:	int3   
   1400049e8:	int3   
   1400049e9:	int3   
   1400049ea:	int3   
   1400049eb:	int3   
   1400049ec:	int3   
   1400049ed:	int3   
   1400049ee:	int3   
   1400049ef:	int3   
   1400049f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400049f5:	mov    al,0x1
   1400049f7:	ret    
   1400049f8:	int3   
   1400049f9:	int3   
   1400049fa:	int3   
   1400049fb:	int3   
   1400049fc:	int3   
   1400049fd:	int3   
   1400049fe:	int3   
   1400049ff:	int3   
   140004a00:	mov    QWORD PTR [rsp+0x10],rdx
   140004a05:	mov    QWORD PTR [rsp+0x8],rcx
   140004a0a:	sub    rsp,0x28
   140004a0e:	mov    rdx,QWORD PTR [rsp+0x30]
   140004a13:	add    rdx,0xa0
   140004a1a:	mov    rcx,QWORD PTR [rsp+0x38]
   140004a1f:	call   0x14000bf40
   140004a24:	add    rsp,0x28
   140004a28:	ret    
   140004a29:	int3   
   140004a2a:	int3   
   140004a2b:	int3   
   140004a2c:	int3   
   140004a2d:	int3   
   140004a2e:	int3   
   140004a2f:	int3   
   140004a30:	mov    QWORD PTR [rsp+0x8],rcx
   140004a35:	mov    rax,QWORD PTR [rsp+0x8]
   140004a3a:	add    rax,0xa0
   140004a40:	ret    
   140004a41:	int3   
   140004a42:	int3   
   140004a43:	int3   
   140004a44:	int3   
   140004a45:	int3   
   140004a46:	int3   
   140004a47:	int3   
   140004a48:	int3   
   140004a49:	int3   
   140004a4a:	int3   
   140004a4b:	int3   
   140004a4c:	int3   
   140004a4d:	int3   
   140004a4e:	int3   
   140004a4f:	int3   
   140004a50:	mov    QWORD PTR [rsp+0x20],r9
   140004a55:	mov    QWORD PTR [rsp+0x18],r8
   140004a5a:	mov    QWORD PTR [rsp+0x10],rdx
   140004a5f:	mov    QWORD PTR [rsp+0x8],rcx
   140004a64:	sub    rsp,0x38
   140004a68:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004a71:	mov    r8,QWORD PTR [rsp+0x50]
   140004a76:	mov    rdx,QWORD PTR [rsp+0x48]
   140004a7b:	mov    rcx,QWORD PTR [rsp+0x40]
   140004a80:	call   0x140032f80
   140004a85:	nop
   140004a86:	mov    rcx,QWORD PTR [rsp+0x40]
   140004a8b:	lea    rax,[rip+0x3aac6]        # 0x14003f558
   140004a92:	mov    QWORD PTR [rcx],rax
   140004a95:	mov    rcx,QWORD PTR [rsp+0x40]
   140004a9a:	add    rcx,0x70
   140004a9e:	mov    rdx,QWORD PTR [rsp+0x58]
   140004aa3:	call   0x140005d30
   140004aa8:	nop
   140004aa9:	mov    rcx,QWORD PTR [rsp+0x40]
   140004aae:	add    rcx,0x98
   140004ab5:	call   0x1400063b0
   140004aba:	nop
   140004abb:	mov    rax,QWORD PTR [rsp+0x40]
   140004ac0:	add    rsp,0x38
   140004ac4:	ret    
   140004ac5:	int3   
   140004ac6:	int3   
   140004ac7:	int3   
   140004ac8:	int3   
   140004ac9:	int3   
   140004aca:	int3   
   140004acb:	int3   
   140004acc:	int3   
   140004acd:	int3   
   140004ace:	int3   
   140004acf:	int3   
   140004ad0:	mov    QWORD PTR [rsp+0x8],rcx
   140004ad5:	sub    rsp,0x38
   140004ad9:	mov    rcx,QWORD PTR [rsp+0x40]
   140004ade:	add    rcx,0x98
   140004ae5:	call   0x140006400
   140004aea:	test   rax,rax
   140004aed:	jb     0x140004af9
   140004aef:	mov    DWORD PTR [rsp+0x20],0x1
   140004af7:	jmp    0x140004b01
   140004af9:	mov    DWORD PTR [rsp+0x20],0x0
   140004b01:	mov    al,BYTE PTR [rsp+0x20]
   140004b05:	add    rsp,0x38
   140004b09:	ret    
   140004b0a:	int3   
   140004b0b:	int3   
   140004b0c:	int3   
   140004b0d:	int3   
   140004b0e:	int3   
   140004b0f:	int3   
   140004b10:	mov    QWORD PTR [rsp+0x8],rcx
   140004b15:	sub    rsp,0x38
   140004b19:	mov    rcx,QWORD PTR [rsp+0x40]
   140004b1e:	add    rcx,0x98
   140004b25:	call   0x140006400
   140004b2a:	cmp    rax,0xffffffffffffffff
   140004b2e:	jae    0x140004b3a
   140004b30:	mov    DWORD PTR [rsp+0x20],0x1
   140004b38:	jmp    0x140004b42
   140004b3a:	mov    DWORD PTR [rsp+0x20],0x0
   140004b42:	mov    al,BYTE PTR [rsp+0x20]
   140004b46:	add    rsp,0x38
   140004b4a:	ret    
   140004b4b:	int3   
   140004b4c:	int3   
   140004b4d:	int3   
   140004b4e:	int3   
   140004b4f:	int3   
   140004b50:	mov    QWORD PTR [rsp+0x8],rcx
   140004b55:	sub    rsp,0x28
   140004b59:	mov    rcx,QWORD PTR [rsp+0x30]
   140004b5e:	add    rcx,0x98
   140004b65:	call   0x140006400
   140004b6a:	add    rsp,0x28
   140004b6e:	ret    
   140004b6f:	int3   
   140004b70:	mov    QWORD PTR [rsp+0x8],rcx
   140004b75:	mov    rax,QWORD PTR [rsp+0x8]
   140004b7a:	add    rax,0x98
   140004b80:	ret    
   140004b81:	int3   
   140004b82:	int3   
   140004b83:	int3   
   140004b84:	int3   
   140004b85:	int3   
   140004b86:	int3   
   140004b87:	int3   
   140004b88:	int3   
   140004b89:	int3   
   140004b8a:	int3   
   140004b8b:	int3   
   140004b8c:	int3   
   140004b8d:	int3   
   140004b8e:	int3   
   140004b8f:	int3   
   140004b90:	mov    QWORD PTR [rsp+0x20],r9
   140004b95:	mov    QWORD PTR [rsp+0x18],r8
   140004b9a:	mov    QWORD PTR [rsp+0x10],rdx
   140004b9f:	mov    QWORD PTR [rsp+0x8],rcx
   140004ba4:	sub    rsp,0x38
   140004ba8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004bb1:	mov    r8,QWORD PTR [rsp+0x50]
   140004bb6:	mov    rdx,QWORD PTR [rsp+0x48]
   140004bbb:	mov    rcx,QWORD PTR [rsp+0x40]
   140004bc0:	call   0x140032f80
   140004bc5:	nop
   140004bc6:	mov    rcx,QWORD PTR [rsp+0x40]
   140004bcb:	lea    rax,[rip+0x3a9c6]        # 0x14003f598
   140004bd2:	mov    QWORD PTR [rcx],rax
   140004bd5:	mov    rcx,QWORD PTR [rsp+0x40]
   140004bda:	add    rcx,0x70
   140004bde:	mov    rdx,QWORD PTR [rsp+0x58]
   140004be3:	call   0x140005d30
   140004be8:	nop
   140004be9:	mov    rcx,QWORD PTR [rsp+0x40]
   140004bee:	add    rcx,0x98
   140004bf5:	call   0x1400063b0
   140004bfa:	nop
   140004bfb:	mov    rax,QWORD PTR [rsp+0x40]
   140004c00:	add    rsp,0x38
   140004c04:	ret    
   140004c05:	int3   
   140004c06:	int3   
   140004c07:	int3   
   140004c08:	int3   
   140004c09:	int3   
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	int3   
   140004c0d:	int3   
   140004c0e:	int3   
   140004c0f:	int3   
   140004c10:	mov    QWORD PTR [rsp+0x8],rcx
   140004c15:	sub    rsp,0x38
   140004c19:	mov    rcx,QWORD PTR [rsp+0x40]
   140004c1e:	add    rcx,0x98
   140004c25:	call   0x140006400
   140004c2a:	cmp    rax,0x1
   140004c2e:	jb     0x140004c3a
   140004c30:	mov    DWORD PTR [rsp+0x20],0x1
   140004c38:	jmp    0x140004c42
   140004c3a:	mov    DWORD PTR [rsp+0x20],0x0
   140004c42:	mov    al,BYTE PTR [rsp+0x20]
   140004c46:	add    rsp,0x38
   140004c4a:	ret    
   140004c4b:	int3   
   140004c4c:	int3   
   140004c4d:	int3   
   140004c4e:	int3   
   140004c4f:	int3   
   140004c50:	mov    QWORD PTR [rsp+0x10],rdx
   140004c55:	mov    QWORD PTR [rsp+0x8],rcx
   140004c5a:	sub    rsp,0x78
   140004c5e:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140004c67:	mov    rax,QWORD PTR [rip+0x447f2]        # 0x140049460
   140004c6e:	xor    rax,rsp
   140004c71:	mov    QWORD PTR [rsp+0x60],rax
   140004c76:	lea    rcx,[rsp+0x28]
   140004c7b:	call   0x140005c70
   140004c80:	nop
   140004c81:	lea    rdx,[rsp+0x28]
   140004c86:	mov    rcx,QWORD PTR [rsp+0x88]
   140004c8e:	call   0x140032640
   140004c93:	mov    BYTE PTR [rsp+0x50],al
   140004c97:	movzx  eax,BYTE PTR [rsp+0x50]
   140004c9c:	test   eax,eax
   140004c9e:	jne    0x140004cb9
   140004ca0:	movzx  eax,BYTE PTR [rsp+0x50]
   140004ca5:	mov    BYTE PTR [rsp+0x51],al
   140004ca9:	lea    rcx,[rsp+0x28]
   140004cae:	call   0x140003a90
   140004cb3:	mov    al,BYTE PTR [rsp+0x51]
   140004cb7:	jmp    0x140004ce5
   140004cb9:	mov    rcx,QWORD PTR [rsp+0x80]
   140004cc1:	add    rcx,0x98
   140004cc8:	lea    rdx,[rsp+0x28]
   140004ccd:	call   0x140006430
   140004cd2:	mov    BYTE PTR [rsp+0x52],0x1
   140004cd7:	lea    rcx,[rsp+0x28]
   140004cdc:	call   0x140003a90
   140004ce1:	mov    al,BYTE PTR [rsp+0x52]
   140004ce5:	mov    rcx,QWORD PTR [rsp+0x60]
   140004cea:	xor    rcx,rsp
   140004ced:	call   0x14001c500
   140004cf2:	add    rsp,0x78
   140004cf6:	ret    
   140004cf7:	int3   
   140004cf8:	int3   
   140004cf9:	int3   
   140004cfa:	int3   
   140004cfb:	int3   
   140004cfc:	int3   
   140004cfd:	int3   
   140004cfe:	int3   
   140004cff:	int3   
   140004d00:	mov    QWORD PTR [rsp+0x18],r8
   140004d05:	mov    QWORD PTR [rsp+0x10],rdx
   140004d0a:	mov    QWORD PTR [rsp+0x8],rcx
   140004d0f:	sub    rsp,0xc8
   140004d16:	mov    QWORD PTR [rsp+0x98],0xfffffffffffffffe
   140004d22:	mov    DWORD PTR [rsp+0x90],0x0
   140004d2d:	mov    rcx,QWORD PTR [rsp+0xe0]
   140004d35:	call   0x140003bb0
   140004d3a:	test   rax,rax
   140004d3d:	je     0x140004d4c
   140004d3f:	mov    DWORD PTR [rsp+0xa0],0x1
   140004d4a:	jmp    0x140004d57
   140004d4c:	mov    DWORD PTR [rsp+0xa0],0x0
   140004d57:	movzx  eax,BYTE PTR [rsp+0xa0]
   140004d5f:	mov    BYTE PTR [rsp+0x38],al
   140004d63:	movzx  eax,BYTE PTR [rsp+0x38]
   140004d68:	test   eax,eax
   140004d6a:	je     0x140004d7d
   140004d6c:	lea    rax,[rip+0x3a55d]        # 0x14003f2d0
   140004d73:	mov    QWORD PTR [rsp+0xa8],rax
   140004d7b:	jmp    0x140004d8c
   140004d7d:	lea    rax,[rip+0x3a884]        # 0x14003f608
   140004d84:	mov    QWORD PTR [rsp+0xa8],rax
   140004d8c:	mov    rdx,QWORD PTR [rsp+0xa8]
   140004d94:	lea    rcx,[rsp+0x40]
   140004d99:	call   0x140003a30
   140004d9e:	nop
   140004d9f:	lea    rax,[rsp+0x40]
   140004da4:	mov    QWORD PTR [rsp+0x20],rax
   140004da9:	mov    r9b,0x1
   140004dac:	mov    r8,QWORD PTR [rsp+0xe0]
   140004db4:	lea    rdx,[rsp+0x68]
   140004db9:	mov    rcx,QWORD PTR [rsp+0xd0]
   140004dc1:	call   0x140033f40
   140004dc6:	mov    QWORD PTR [rsp+0xb0],rax
   140004dce:	mov    rax,QWORD PTR [rsp+0xb0]
   140004dd6:	mov    QWORD PTR [rsp+0xb8],rax
   140004dde:	lea    r8,[rip+0x3a4e3]        # 0x14003f2c8
   140004de5:	mov    rdx,QWORD PTR [rsp+0xb8]
   140004ded:	mov    rcx,QWORD PTR [rsp+0xd8]
   140004df5:	call   0x14000bfb0
   140004dfa:	mov    eax,DWORD PTR [rsp+0x90]
   140004e01:	or     eax,0x1
   140004e04:	mov    DWORD PTR [rsp+0x90],eax
   140004e0b:	lea    rcx,[rsp+0x68]
   140004e10:	call   0x140003a90
   140004e15:	nop
   140004e16:	lea    rcx,[rsp+0x40]
   140004e1b:	call   0x140003a90
   140004e20:	nop
   140004e21:	mov    rcx,QWORD PTR [rsp+0xe0]
   140004e29:	call   0x140003a90
   140004e2e:	mov    rax,QWORD PTR [rsp+0xd8]
   140004e36:	add    rsp,0xc8
   140004e3d:	ret    
   140004e3e:	int3   
   140004e3f:	int3   
   140004e40:	mov    QWORD PTR [rsp+0x8],rcx
   140004e45:	sub    rsp,0x28
   140004e49:	mov    rcx,QWORD PTR [rsp+0x30]
   140004e4e:	call   0x140007970
   140004e53:	mov    r11,QWORD PTR [rsp+0x30]
   140004e58:	mov    QWORD PTR [r11+0x8],0x0
   140004e60:	mov    rax,QWORD PTR [rsp+0x30]
   140004e65:	add    rsp,0x28
   140004e69:	ret    
   140004e6a:	int3   
   140004e6b:	int3   
   140004e6c:	int3   
   140004e6d:	int3   
   140004e6e:	int3   
   140004e6f:	int3   
   140004e70:	mov    QWORD PTR [rsp+0x8],rcx
   140004e75:	sub    rsp,0x28
   140004e79:	mov    rcx,QWORD PTR [rsp+0x30]
   140004e7e:	call   0x1400013d0
   140004e83:	movzx  eax,al
   140004e86:	test   eax,eax
   140004e88:	jne    0x140004e8f
   140004e8a:	call   0x14001cd78
   140004e8f:	xor    eax,eax
   140004e91:	test   eax,eax
   140004e93:	jne    0x140004e8f
   140004e95:	mov    rcx,QWORD PTR [rsp+0x30]
   140004e9a:	call   0x140001350
   140004e9f:	mov    rcx,QWORD PTR [rsp+0x30]
   140004ea4:	mov    rax,QWORD PTR [rax+0x20]
   140004ea8:	cmp    QWORD PTR [rcx+0x8],rax
   140004eac:	jb     0x140004eb3
   140004eae:	call   0x14001cd78
   140004eb3:	xor    eax,eax
   140004eb5:	test   eax,eax
   140004eb7:	jne    0x140004eb3
   140004eb9:	mov    rax,QWORD PTR [rsp+0x30]
   140004ebe:	mov    rax,QWORD PTR [rax+0x8]
   140004ec2:	add    rsp,0x28
   140004ec6:	ret    
   140004ec7:	int3   
   140004ec8:	int3   
   140004ec9:	int3   
   140004eca:	int3   
   140004ecb:	int3   
   140004ecc:	int3   
   140004ecd:	int3   
   140004ece:	int3   
   140004ecf:	int3   
   140004ed0:	mov    QWORD PTR [rsp+0x8],rcx
   140004ed5:	sub    rsp,0x28
   140004ed9:	mov    rcx,QWORD PTR [rsp+0x30]
   140004ede:	call   0x1400013d0
   140004ee3:	movzx  eax,al
   140004ee6:	test   eax,eax
   140004ee8:	jne    0x140004eef
   140004eea:	call   0x14001cd78
   140004eef:	xor    eax,eax
   140004ef1:	test   eax,eax
   140004ef3:	jne    0x140004eef
   140004ef5:	mov    rcx,QWORD PTR [rsp+0x30]
   140004efa:	call   0x140001350
   140004eff:	mov    rcx,QWORD PTR [rsp+0x30]
   140004f04:	mov    rax,QWORD PTR [rax+0x20]
   140004f08:	cmp    QWORD PTR [rcx+0x8],rax
   140004f0c:	jb     0x140004f13
   140004f0e:	call   0x14001cd78
   140004f13:	xor    eax,eax
   140004f15:	test   eax,eax
   140004f17:	jne    0x140004f13
   140004f19:	mov    rcx,QWORD PTR [rsp+0x30]
   140004f1e:	mov    rcx,QWORD PTR [rcx+0x8]
   140004f22:	add    rcx,0x28
   140004f26:	mov    rax,QWORD PTR [rsp+0x30]
   140004f2b:	mov    QWORD PTR [rax+0x8],rcx
   140004f2f:	mov    rax,QWORD PTR [rsp+0x30]
   140004f34:	add    rsp,0x28
   140004f38:	ret    
   140004f39:	int3   
   140004f3a:	int3   
   140004f3b:	int3   
   140004f3c:	int3   
   140004f3d:	int3   
   140004f3e:	int3   
   140004f3f:	int3   
   140004f40:	mov    QWORD PTR [rsp+0x10],rdx
   140004f45:	mov    QWORD PTR [rsp+0x8],rcx
   140004f4a:	sub    rsp,0x38
   140004f4e:	mov    rdx,QWORD PTR [rsp+0x48]
   140004f53:	mov    rcx,QWORD PTR [rsp+0x40]
   140004f58:	call   0x140006880
   140004f5d:	movzx  eax,al
   140004f60:	test   eax,eax
   140004f62:	jne    0x140004f6e
   140004f64:	mov    DWORD PTR [rsp+0x20],0x1
   140004f6c:	jmp    0x140004f76
   140004f6e:	mov    DWORD PTR [rsp+0x20],0x0
   140004f76:	mov    al,BYTE PTR [rsp+0x20]
   140004f7a:	add    rsp,0x38
   140004f7e:	ret    
   140004f7f:	int3   
   140004f80:	mov    DWORD PTR [rsp+0x10],edx
   140004f84:	mov    QWORD PTR [rsp+0x8],rcx
   140004f89:	sub    rsp,0x28
   140004f8d:	mov    rcx,QWORD PTR [rsp+0x30]
   140004f92:	sub    rcx,0x8
   140004f96:	call   0x140005240
   140004f9b:	mov    eax,DWORD PTR [rsp+0x38]
   140004f9f:	and    eax,0x1
   140004fa2:	test   eax,eax
   140004fa4:	je     0x140004fb4
   140004fa6:	mov    rcx,QWORD PTR [rsp+0x30]
   140004fab:	sub    rcx,0x8
   140004faf:	call   0x14001c4dc
   140004fb4:	mov    rax,QWORD PTR [rsp+0x30]
   140004fb9:	sub    rax,0x8
   140004fbd:	add    rsp,0x28
   140004fc1:	ret    
   140004fc2:	int3   
   140004fc3:	int3   
   140004fc4:	int3   
   140004fc5:	int3   
   140004fc6:	int3   
   140004fc7:	int3   
   140004fc8:	int3   
   140004fc9:	int3   
   140004fca:	int3   
   140004fcb:	int3   
   140004fcc:	int3   
   140004fcd:	int3   
   140004fce:	int3   
   140004fcf:	int3   
   140004fd0:	mov    DWORD PTR [rsp+0x10],edx
   140004fd4:	mov    QWORD PTR [rsp+0x8],rcx
   140004fd9:	sub    rsp,0x28
   140004fdd:	mov    rcx,QWORD PTR [rsp+0x30]
   140004fe2:	call   0x1400033d0
   140004fe7:	mov    eax,DWORD PTR [rsp+0x38]
   140004feb:	and    eax,0x1
   140004fee:	test   eax,eax
   140004ff0:	je     0x140004ffc
   140004ff2:	mov    rcx,QWORD PTR [rsp+0x30]
   140004ff7:	call   0x14001c4dc
   140004ffc:	mov    rax,QWORD PTR [rsp+0x30]
   140005001:	add    rsp,0x28
   140005005:	ret    
   140005006:	int3   
   140005007:	int3   
   140005008:	int3   
   140005009:	int3   
   14000500a:	int3   
   14000500b:	int3   
   14000500c:	int3   
   14000500d:	int3   
   14000500e:	int3   
   14000500f:	int3   
   140005010:	mov    DWORD PTR [rsp+0x10],edx
   140005014:	mov    QWORD PTR [rsp+0x8],rcx
   140005019:	sub    rsp,0x28
   14000501d:	mov    rcx,QWORD PTR [rsp+0x30]
   140005022:	call   0x140001b80
   140005027:	mov    eax,DWORD PTR [rsp+0x38]
   14000502b:	and    eax,0x1
   14000502e:	test   eax,eax
   140005030:	je     0x14000503c
   140005032:	mov    rcx,QWORD PTR [rsp+0x30]
   140005037:	call   0x14001c4dc
   14000503c:	mov    rax,QWORD PTR [rsp+0x30]
   140005041:	add    rsp,0x28
   140005045:	ret    
   140005046:	int3   
   140005047:	int3   
   140005048:	int3   
   140005049:	int3   
   14000504a:	int3   
   14000504b:	int3   
   14000504c:	int3   
   14000504d:	int3   
   14000504e:	int3   
   14000504f:	int3   
   140005050:	mov    DWORD PTR [rsp+0x10],edx
   140005054:	mov    QWORD PTR [rsp+0x8],rcx
   140005059:	sub    rsp,0x28
   14000505d:	mov    rcx,QWORD PTR [rsp+0x30]
   140005062:	sub    rcx,0x10
   140005066:	call   0x140005270
   14000506b:	mov    eax,DWORD PTR [rsp+0x38]
   14000506f:	and    eax,0x1
   140005072:	test   eax,eax
   140005074:	je     0x140005084
   140005076:	mov    rcx,QWORD PTR [rsp+0x30]
   14000507b:	sub    rcx,0x10
   14000507f:	call   0x14001c4dc
   140005084:	mov    rax,QWORD PTR [rsp+0x30]
   140005089:	sub    rax,0x10
   14000508d:	add    rsp,0x28
   140005091:	ret    
   140005092:	int3   
   140005093:	int3   
   140005094:	int3   
   140005095:	int3   
   140005096:	int3   
   140005097:	int3   
   140005098:	int3   
   140005099:	int3   
   14000509a:	int3   
   14000509b:	int3   
   14000509c:	int3   
   14000509d:	int3   
   14000509e:	int3   
   14000509f:	int3   
   1400050a0:	mov    DWORD PTR [rsp+0x10],edx
   1400050a4:	mov    QWORD PTR [rsp+0x8],rcx
   1400050a9:	sub    rsp,0x28
   1400050ad:	mov    rcx,QWORD PTR [rsp+0x30]
   1400050b2:	call   0x1400034e0
   1400050b7:	mov    eax,DWORD PTR [rsp+0x38]
   1400050bb:	and    eax,0x1
   1400050be:	test   eax,eax
   1400050c0:	je     0x1400050cc
   1400050c2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400050c7:	call   0x14001c4dc
   1400050cc:	mov    rax,QWORD PTR [rsp+0x30]
   1400050d1:	add    rsp,0x28
   1400050d5:	ret    
   1400050d6:	int3   
   1400050d7:	int3   
   1400050d8:	int3   
   1400050d9:	int3   
   1400050da:	int3   
   1400050db:	int3   
   1400050dc:	int3   
   1400050dd:	int3   
   1400050de:	int3   
   1400050df:	int3   
   1400050e0:	mov    DWORD PTR [rsp+0x10],edx
   1400050e4:	mov    QWORD PTR [rsp+0x8],rcx
   1400050e9:	sub    rsp,0x28
   1400050ed:	mov    rcx,QWORD PTR [rsp+0x30]
   1400050f2:	call   0x140002fc0
   1400050f7:	mov    eax,DWORD PTR [rsp+0x38]
   1400050fb:	and    eax,0x1
   1400050fe:	test   eax,eax
   140005100:	je     0x14000510c
   140005102:	mov    rcx,QWORD PTR [rsp+0x30]
   140005107:	call   0x14001c4dc
   14000510c:	mov    rax,QWORD PTR [rsp+0x30]
   140005111:	add    rsp,0x28
   140005115:	ret    
   140005116:	int3   
   140005117:	int3   
   140005118:	int3   
   140005119:	int3   
   14000511a:	int3   
   14000511b:	int3   
   14000511c:	int3   
   14000511d:	int3   
   14000511e:	int3   
   14000511f:	int3   
   140005120:	mov    QWORD PTR [rsp+0x8],rcx
   140005125:	sub    rsp,0x28
   140005129:	mov    rcx,QWORD PTR [rsp+0x30]
   14000512e:	add    rcx,0x98
   140005135:	call   0x140006bc0
   14000513a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000513f:	add    rcx,0x98
   140005146:	call   0x1400033d0
   14000514b:	add    rsp,0x28
   14000514f:	ret    
   140005150:	mov    QWORD PTR [rsp+0x8],rcx
   140005155:	sub    rsp,0x28
   140005159:	mov    rcx,QWORD PTR [rsp+0x30]
   14000515e:	add    rcx,0x28
   140005162:	call   0x140003a90
   140005167:	mov    rcx,QWORD PTR [rsp+0x30]
   14000516c:	call   0x140003a90
   140005171:	add    rsp,0x28
   140005175:	ret    
   140005176:	int3   
   140005177:	int3   
   140005178:	int3   
   140005179:	int3   
   14000517a:	int3   
   14000517b:	int3   
   14000517c:	int3   
   14000517d:	int3   
   14000517e:	int3   
   14000517f:	int3   
   140005180:	mov    DWORD PTR [rsp+0x10],edx
   140005184:	mov    QWORD PTR [rsp+0x8],rcx
   140005189:	sub    rsp,0x28
   14000518d:	mov    rcx,QWORD PTR [rsp+0x30]
   140005192:	call   0x140003080
   140005197:	mov    eax,DWORD PTR [rsp+0x38]
   14000519b:	and    eax,0x1
   14000519e:	test   eax,eax
   1400051a0:	je     0x1400051ac
   1400051a2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400051a7:	call   0x14001c4dc
   1400051ac:	mov    rax,QWORD PTR [rsp+0x30]
   1400051b1:	add    rsp,0x28
   1400051b5:	ret    
   1400051b6:	int3   
   1400051b7:	int3   
   1400051b8:	int3   
   1400051b9:	int3   
   1400051ba:	int3   
   1400051bb:	int3   
   1400051bc:	int3   
   1400051bd:	int3   
   1400051be:	int3   
   1400051bf:	int3   
   1400051c0:	mov    DWORD PTR [rsp+0x10],edx
   1400051c4:	mov    QWORD PTR [rsp+0x8],rcx
   1400051c9:	sub    rsp,0x28
   1400051cd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400051d2:	call   0x140002ff0
   1400051d7:	mov    eax,DWORD PTR [rsp+0x38]
   1400051db:	and    eax,0x1
   1400051de:	test   eax,eax
   1400051e0:	je     0x1400051ec
   1400051e2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400051e7:	call   0x14001c4dc
   1400051ec:	mov    rax,QWORD PTR [rsp+0x30]
   1400051f1:	add    rsp,0x28
   1400051f5:	ret    
   1400051f6:	int3   
   1400051f7:	int3   
   1400051f8:	int3   
   1400051f9:	int3   
   1400051fa:	int3   
   1400051fb:	int3   
   1400051fc:	int3   
   1400051fd:	int3   
   1400051fe:	int3   
   1400051ff:	int3   
   140005200:	mov    DWORD PTR [rsp+0x10],edx
   140005204:	mov    QWORD PTR [rsp+0x8],rcx
   140005209:	sub    rsp,0x28
   14000520d:	mov    rcx,QWORD PTR [rsp+0x30]
   140005212:	call   0x140003020
   140005217:	mov    eax,DWORD PTR [rsp+0x38]
   14000521b:	and    eax,0x1
   14000521e:	test   eax,eax
   140005220:	je     0x14000522c
   140005222:	mov    rcx,QWORD PTR [rsp+0x30]
   140005227:	call   0x14001c4dc
   14000522c:	mov    rax,QWORD PTR [rsp+0x30]
   140005231:	add    rsp,0x28
   140005235:	ret    
   140005236:	int3   
   140005237:	int3   
   140005238:	int3   
   140005239:	int3   
   14000523a:	int3   
   14000523b:	int3   
   14000523c:	int3   
   14000523d:	int3   
   14000523e:	int3   
   14000523f:	int3   
   140005240:	mov    QWORD PTR [rsp+0x8],rcx
   140005245:	sub    rsp,0x28
   140005249:	mov    rcx,QWORD PTR [rsp+0x30]
   14000524e:	add    rcx,0x8
   140005252:	call   0x140003310
   140005257:	mov    rcx,QWORD PTR [rsp+0x30]
   14000525c:	add    rcx,0x8
   140005260:	call   0x1400033d0
   140005265:	add    rsp,0x28
   140005269:	ret    
   14000526a:	int3   
   14000526b:	int3   
   14000526c:	int3   
   14000526d:	int3   
   14000526e:	int3   
   14000526f:	int3   
   140005270:	mov    QWORD PTR [rsp+0x8],rcx
   140005275:	sub    rsp,0x28
   140005279:	mov    rcx,QWORD PTR [rsp+0x30]
   14000527e:	add    rcx,0x10
   140005282:	call   0x140003450
   140005287:	mov    rcx,QWORD PTR [rsp+0x30]
   14000528c:	add    rcx,0x10
   140005290:	call   0x1400033d0
   140005295:	add    rsp,0x28
   140005299:	ret    
   14000529a:	int3   
   14000529b:	int3   
   14000529c:	int3   
   14000529d:	int3   
   14000529e:	int3   
   14000529f:	int3   
   1400052a0:	mov    QWORD PTR [rsp+0x20],r9
   1400052a5:	mov    QWORD PTR [rsp+0x18],r8
   1400052aa:	mov    QWORD PTR [rsp+0x10],rdx
   1400052af:	mov    QWORD PTR [rsp+0x8],rcx
   1400052b4:	push   rbx
   1400052b5:	sub    rsp,0x30
   1400052b9:	mov    rcx,QWORD PTR [rsp+0x48]
   1400052be:	call   0x140003bb0
   1400052c3:	cmp    rax,QWORD PTR [rsp+0x50]
   1400052c8:	jae    0x1400052cf
   1400052ca:	call   0x14001a348
   1400052cf:	mov    rcx,QWORD PTR [rsp+0x48]
   1400052d4:	call   0x140003bb0
   1400052d9:	sub    rax,QWORD PTR [rsp+0x50]
   1400052de:	mov    QWORD PTR [rsp+0x20],rax
   1400052e3:	mov    rax,QWORD PTR [rsp+0x20]
   1400052e8:	cmp    QWORD PTR [rsp+0x58],rax
   1400052ed:	jae    0x1400052f9
   1400052ef:	mov    rax,QWORD PTR [rsp+0x58]
   1400052f4:	mov    QWORD PTR [rsp+0x20],rax
   1400052f9:	mov    rax,QWORD PTR [rsp+0x48]
   1400052fe:	cmp    QWORD PTR [rsp+0x40],rax
   140005303:	jne    0x140005336
   140005305:	mov    rax,QWORD PTR [rsp+0x20]
   14000530a:	mov    rdx,QWORD PTR [rsp+0x50]
   14000530f:	add    rdx,rax
   140005312:	mov    r8,QWORD PTR [rip+0x39fdf]        # 0x14003f2f8
   140005319:	mov    rcx,QWORD PTR [rsp+0x40]
   14000531e:	call   0x140007aa0
   140005323:	mov    r8,QWORD PTR [rsp+0x50]
   140005328:	xor    edx,edx
   14000532a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000532f:	call   0x140007aa0
   140005334:	jmp    0x140005393
   140005336:	xor    r8d,r8d
   140005339:	mov    rdx,QWORD PTR [rsp+0x20]
   14000533e:	mov    rcx,QWORD PTR [rsp+0x40]
   140005343:	call   0x140005420
   140005348:	movzx  eax,al
   14000534b:	test   eax,eax
   14000534d:	je     0x140005393
   14000534f:	mov    rcx,QWORD PTR [rsp+0x48]
   140005354:	call   0x1400055f0
   140005359:	mov    rbx,rax
   14000535c:	add    rbx,QWORD PTR [rsp+0x50]
   140005361:	mov    rcx,QWORD PTR [rsp+0x40]
   140005366:	call   0x1400055f0
   14000536b:	mov    r9,QWORD PTR [rsp+0x20]
   140005370:	mov    r8,rbx
   140005373:	mov    rdx,QWORD PTR [rsp+0x40]
   140005378:	mov    rdx,QWORD PTR [rdx+0x20]
   14000537c:	mov    rcx,rax
   14000537f:	call   0x14000b460
   140005384:	mov    rdx,QWORD PTR [rsp+0x20]
   140005389:	mov    rcx,QWORD PTR [rsp+0x40]
   14000538e:	call   0x1400053d0
   140005393:	mov    rax,QWORD PTR [rsp+0x40]
   140005398:	add    rsp,0x30
   14000539c:	pop    rbx
   14000539d:	ret    
   14000539e:	int3   
   14000539f:	int3   
   1400053a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400053a5:	mov    QWORD PTR [rsp+0x8],rcx
   1400053aa:	sub    rsp,0x28
   1400053ae:	mov    rcx,QWORD PTR [rsp+0x38]
   1400053b3:	call   0x140001230
   1400053b8:	mov    r8,rax
   1400053bb:	mov    rdx,QWORD PTR [rsp+0x38]
   1400053c0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400053c5:	call   0x140003240
   1400053ca:	add    rsp,0x28
   1400053ce:	ret    
   1400053cf:	int3   
   1400053d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400053d5:	mov    QWORD PTR [rsp+0x8],rcx
   1400053da:	sub    rsp,0x38
   1400053de:	mov    BYTE PTR [rsp+0x20],0x0
   1400053e3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400053e8:	mov    rax,QWORD PTR [rsp+0x48]
   1400053ed:	mov    QWORD PTR [rcx+0x18],rax
   1400053f1:	mov    rcx,QWORD PTR [rsp+0x40]
   1400053f6:	call   0x1400055f0
   1400053fb:	mov    rcx,rax
   1400053fe:	add    rcx,QWORD PTR [rsp+0x48]
   140005403:	lea    rdx,[rsp+0x20]
   140005408:	call   0x140001210
   14000540d:	add    rsp,0x38
   140005411:	ret    
   140005412:	int3   
   140005413:	int3   
   140005414:	int3   
   140005415:	int3   
   140005416:	int3   
   140005417:	int3   
   140005418:	int3   
   140005419:	int3   
   14000541a:	int3   
   14000541b:	int3   
   14000541c:	int3   
   14000541d:	int3   
   14000541e:	int3   
   14000541f:	int3   
   140005420:	mov    BYTE PTR [rsp+0x18],r8b
   140005425:	mov    QWORD PTR [rsp+0x10],rdx
   14000542a:	mov    QWORD PTR [rsp+0x8],rcx
   14000542f:	sub    rsp,0x38
   140005433:	mov    rcx,QWORD PTR [rsp+0x40]
   140005438:	call   0x140007ba0
   14000543d:	cmp    rax,QWORD PTR [rsp+0x48]
   140005442:	jae    0x140005449
   140005444:	call   0x14001a2e0
   140005449:	mov    rcx,QWORD PTR [rsp+0x40]
   14000544e:	mov    rax,QWORD PTR [rsp+0x48]
   140005453:	cmp    QWORD PTR [rcx+0x20],rax
   140005457:	jae    0x140005473
   140005459:	mov    r8,QWORD PTR [rsp+0x40]
   14000545e:	mov    r8,QWORD PTR [r8+0x18]
   140005462:	mov    rdx,QWORD PTR [rsp+0x48]
   140005467:	mov    rcx,QWORD PTR [rsp+0x40]
   14000546c:	call   0x140007bf0
   140005471:	jmp    0x1400054d5
   140005473:	movzx  eax,BYTE PTR [rsp+0x50]
   140005478:	test   eax,eax
   14000547a:	je     0x1400054c1
   14000547c:	cmp    QWORD PTR [rsp+0x48],0x10
   140005482:	jae    0x1400054c1
   140005484:	mov    rax,QWORD PTR [rsp+0x40]
   140005489:	mov    rax,QWORD PTR [rax+0x18]
   14000548d:	cmp    QWORD PTR [rsp+0x48],rax
   140005492:	jae    0x1400054a0
   140005494:	mov    rax,QWORD PTR [rsp+0x48]
   140005499:	mov    QWORD PTR [rsp+0x20],rax
   14000549e:	jmp    0x1400054ae
   1400054a0:	mov    rax,QWORD PTR [rsp+0x40]
   1400054a5:	mov    rax,QWORD PTR [rax+0x18]
   1400054a9:	mov    QWORD PTR [rsp+0x20],rax
   1400054ae:	mov    r8,QWORD PTR [rsp+0x20]
   1400054b3:	mov    dl,0x1
   1400054b5:	mov    rcx,QWORD PTR [rsp+0x40]
   1400054ba:	call   0x140005550
   1400054bf:	jmp    0x1400054d5
   1400054c1:	cmp    QWORD PTR [rsp+0x48],0x0
   1400054c7:	jne    0x1400054d5
   1400054c9:	xor    edx,edx
   1400054cb:	mov    rcx,QWORD PTR [rsp+0x40]
   1400054d0:	call   0x1400053d0
   1400054d5:	cmp    QWORD PTR [rsp+0x48],0x0
   1400054db:	jbe    0x1400054e7
   1400054dd:	mov    DWORD PTR [rsp+0x28],0x1
   1400054e5:	jmp    0x1400054ef
   1400054e7:	mov    DWORD PTR [rsp+0x28],0x0
   1400054ef:	mov    al,BYTE PTR [rsp+0x28]
   1400054f3:	add    rsp,0x38
   1400054f7:	ret    
   1400054f8:	int3   
   1400054f9:	int3   
   1400054fa:	int3   
   1400054fb:	int3   
   1400054fc:	int3   
   1400054fd:	int3   
   1400054fe:	int3   
   1400054ff:	int3   
   140005500:	mov    QWORD PTR [rsp+0x10],rdx
   140005505:	mov    QWORD PTR [rsp+0x8],rcx
   14000550a:	sub    rsp,0x28
   14000550e:	cmp    QWORD PTR [rsp+0x38],0x0
   140005514:	je     0x140005541
   140005516:	mov    rcx,QWORD PTR [rsp+0x30]
   14000551b:	call   0x1400055f0
   140005520:	cmp    QWORD PTR [rsp+0x38],rax
   140005525:	jb     0x140005541
   140005527:	mov    rcx,QWORD PTR [rsp+0x30]
   14000552c:	call   0x1400055f0
   140005531:	mov    rcx,QWORD PTR [rsp+0x30]
   140005536:	add    rax,QWORD PTR [rcx+0x18]
   14000553a:	cmp    rax,QWORD PTR [rsp+0x38]
   14000553f:	ja     0x140005547
   140005541:	xor    al,al
   140005543:	jmp    0x140005549
   140005545:	jmp    0x140005549
   140005547:	mov    al,0x1
   140005549:	add    rsp,0x28
   14000554d:	ret    
   14000554e:	int3   
   14000554f:	int3   
   140005550:	mov    QWORD PTR [rsp+0x18],r8
   140005555:	mov    BYTE PTR [rsp+0x10],dl
   140005559:	mov    QWORD PTR [rsp+0x8],rcx
   14000555e:	sub    rsp,0x38
   140005562:	movzx  eax,BYTE PTR [rsp+0x48]
   140005567:	test   eax,eax
   140005569:	jne    0x14000556d
   14000556b:	jmp    0x1400055c8
   14000556d:	mov    rax,QWORD PTR [rsp+0x40]
   140005572:	cmp    QWORD PTR [rax+0x20],0x10
   140005577:	jb     0x1400055c8
   140005579:	mov    rax,QWORD PTR [rsp+0x40]
   14000557e:	mov    rax,QWORD PTR [rax+0x8]
   140005582:	mov    QWORD PTR [rsp+0x20],rax
   140005587:	cmp    QWORD PTR [rsp+0x50],0x0
   14000558d:	jbe    0x1400055ac
   14000558f:	mov    rcx,QWORD PTR [rsp+0x40]
   140005594:	add    rcx,0x8
   140005598:	mov    r9,QWORD PTR [rsp+0x50]
   14000559d:	mov    r8,QWORD PTR [rsp+0x20]
   1400055a2:	mov    edx,0x10
   1400055a7:	call   0x14000b460
   1400055ac:	mov    r8,QWORD PTR [rsp+0x40]
   1400055b1:	mov    r8,QWORD PTR [r8+0x20]
   1400055b5:	add    r8,0x1
   1400055b9:	mov    rdx,QWORD PTR [rsp+0x20]
   1400055be:	mov    rcx,QWORD PTR [rsp+0x40]
   1400055c3:	call   0x1400089f0
   1400055c8:	mov    rax,QWORD PTR [rsp+0x40]
   1400055cd:	mov    QWORD PTR [rax+0x20],0xf
   1400055d5:	mov    rdx,QWORD PTR [rsp+0x50]
   1400055da:	mov    rcx,QWORD PTR [rsp+0x40]
   1400055df:	call   0x1400053d0
   1400055e4:	add    rsp,0x38
   1400055e8:	ret    
   1400055e9:	int3   
   1400055ea:	int3   
   1400055eb:	int3   
   1400055ec:	int3   
   1400055ed:	int3   
   1400055ee:	int3   
   1400055ef:	int3   
   1400055f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400055f5:	sub    rsp,0x18
   1400055f9:	mov    rax,QWORD PTR [rsp+0x20]
   1400055fe:	cmp    QWORD PTR [rax+0x20],0x10
   140005603:	jb     0x140005614
   140005605:	mov    rax,QWORD PTR [rsp+0x20]
   14000560a:	mov    rax,QWORD PTR [rax+0x8]
   14000560e:	mov    QWORD PTR [rsp],rax
   140005612:	jmp    0x140005621
   140005614:	mov    rax,QWORD PTR [rsp+0x20]
   140005619:	add    rax,0x8
   14000561d:	mov    QWORD PTR [rsp],rax
   140005621:	mov    rax,QWORD PTR [rsp]
   140005625:	add    rsp,0x18
   140005629:	ret    
   14000562a:	int3   
   14000562b:	int3   
   14000562c:	int3   
   14000562d:	int3   
   14000562e:	int3   
   14000562f:	int3   
   140005630:	mov    QWORD PTR [rsp+0x10],rdx
   140005635:	mov    QWORD PTR [rsp+0x8],rcx
   14000563a:	sub    rsp,0x28
   14000563e:	mov    rdx,QWORD PTR [rsp+0x38]
   140005643:	mov    rcx,QWORD PTR [rsp+0x30]
   140005648:	call   0x140007d50
   14000564d:	mov    rax,QWORD PTR [rsp+0x30]
   140005652:	add    rsp,0x28
   140005656:	ret    
   140005657:	int3   
   140005658:	int3   
   140005659:	int3   
   14000565a:	int3   
   14000565b:	int3   
   14000565c:	int3   
   14000565d:	int3   
   14000565e:	int3   
   14000565f:	int3   
   140005660:	mov    QWORD PTR [rsp+0x8],rcx
   140005665:	mov    rax,QWORD PTR [rsp+0x8]
   14000566a:	ret    
   14000566b:	int3   
   14000566c:	int3   
   14000566d:	int3   
   14000566e:	int3   
   14000566f:	int3   
   140005670:	mov    BYTE PTR [rsp+0x18],r8b
   140005675:	mov    DWORD PTR [rsp+0x10],edx
   140005679:	mov    QWORD PTR [rsp+0x8],rcx
   14000567e:	sub    rsp,0x38
   140005682:	mov    rax,QWORD PTR [rsp+0x40]
   140005687:	cmp    QWORD PTR [rax+0x48],0x0
   14000568c:	jne    0x14000569b
   14000568e:	mov    eax,DWORD PTR [rsp+0x48]
   140005692:	or     eax,0x4
   140005695:	mov    DWORD PTR [rsp+0x20],eax
   140005699:	jmp    0x1400056a3
   14000569b:	mov    eax,DWORD PTR [rsp+0x48]
   14000569f:	mov    DWORD PTR [rsp+0x20],eax
   1400056a3:	movzx  r8d,BYTE PTR [rsp+0x50]
   1400056a9:	mov    edx,DWORD PTR [rsp+0x20]
   1400056ad:	mov    rcx,QWORD PTR [rsp+0x40]
   1400056b2:	call   0x1400029e0
   1400056b7:	add    rsp,0x38
   1400056bb:	ret    
   1400056bc:	int3   
   1400056bd:	int3   
   1400056be:	int3   
   1400056bf:	int3   
   1400056c0:	mov    BYTE PTR [rsp+0x10],dl
   1400056c4:	mov    QWORD PTR [rsp+0x8],rcx
   1400056c9:	sub    rsp,0x68
   1400056cd:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400056d6:	mov    rax,QWORD PTR [rsp+0x70]
   1400056db:	mov    rax,QWORD PTR [rax]
   1400056de:	movsxd rax,DWORD PTR [rax+0x4]
   1400056e2:	mov    rcx,QWORD PTR [rsp+0x70]
   1400056e7:	add    rcx,rax
   1400056ea:	call   0x140002bc0
   1400056ef:	movzx  eax,al
   1400056f2:	test   eax,eax
   1400056f4:	je     0x1400058ac
   1400056fa:	mov    rax,QWORD PTR [rsp+0x70]
   1400056ff:	mov    rax,QWORD PTR [rax]
   140005702:	movsxd rax,DWORD PTR [rax+0x4]
   140005706:	mov    rcx,QWORD PTR [rsp+0x70]
   14000570b:	add    rcx,rax
   14000570e:	call   0x140007db0
   140005713:	test   rax,rax
   140005716:	je     0x140005739
   140005718:	mov    rax,QWORD PTR [rsp+0x70]
   14000571d:	mov    rax,QWORD PTR [rax]
   140005720:	movsxd rax,DWORD PTR [rax+0x4]
   140005724:	mov    rcx,QWORD PTR [rsp+0x70]
   140005729:	add    rcx,rax
   14000572c:	call   0x140007db0
   140005731:	mov    rcx,rax
   140005734:	call   0x140003340
   140005739:	movzx  eax,BYTE PTR [rsp+0x78]
   14000573e:	test   eax,eax
   140005740:	jne    0x140005888
   140005746:	mov    rax,QWORD PTR [rsp+0x70]
   14000574b:	mov    rax,QWORD PTR [rax]
   14000574e:	movsxd rax,DWORD PTR [rax+0x4]
   140005752:	mov    rcx,QWORD PTR [rsp+0x70]
   140005757:	add    rcx,rax
   14000575a:	call   0x140002c40
   14000575f:	and    eax,0x1
   140005762:	test   eax,eax
   140005764:	je     0x140005888
   14000576a:	mov    rax,QWORD PTR [rsp+0x70]
   14000576f:	mov    rax,QWORD PTR [rax]
   140005772:	movsxd rax,DWORD PTR [rax+0x4]
   140005776:	mov    rcx,QWORD PTR [rsp+0x70]
   14000577b:	add    rcx,rax
   14000577e:	lea    rdx,[rsp+0x30]
   140005783:	call   0x140002ca0
   140005788:	mov    QWORD PTR [rsp+0x48],rax
   14000578d:	mov    rax,QWORD PTR [rsp+0x48]
   140005792:	mov    QWORD PTR [rsp+0x50],rax
   140005797:	mov    rcx,QWORD PTR [rsp+0x50]
   14000579c:	call   0x14000b310
   1400057a1:	mov    QWORD PTR [rsp+0x20],rax
   1400057a6:	lea    rcx,[rsp+0x30]
   1400057ab:	call   0x140001b80
   1400057b0:	nop
   1400057b1:	mov    rax,QWORD PTR [rsp+0x70]
   1400057b6:	mov    rax,QWORD PTR [rax]
   1400057b9:	movsxd rax,DWORD PTR [rax+0x4]
   1400057bd:	mov    rcx,QWORD PTR [rsp+0x70]
   1400057c2:	add    rcx,rax
   1400057c5:	call   0x140003440
   1400057ca:	mov    rcx,rax
   1400057cd:	call   0x140003550
   1400057d2:	mov    WORD PTR [rsp+0x58],ax
   1400057d7:	movzx  eax,WORD PTR [rsp+0x58]
   1400057dc:	mov    WORD PTR [rsp+0x28],ax
   1400057e1:	jmp    0x140005813
   1400057e3:	mov    rax,QWORD PTR [rsp+0x70]
   1400057e8:	mov    rax,QWORD PTR [rax]
   1400057eb:	movsxd rax,DWORD PTR [rax+0x4]
   1400057ef:	mov    rcx,QWORD PTR [rsp+0x70]
   1400057f4:	add    rcx,rax
   1400057f7:	call   0x140003440
   1400057fc:	mov    rcx,rax
   1400057ff:	call   0x1400035a0
   140005804:	mov    WORD PTR [rsp+0x5a],ax
   140005809:	movzx  eax,WORD PTR [rsp+0x5a]
   14000580e:	mov    WORD PTR [rsp+0x28],ax
   140005813:	call   0x1400011a0
   140005818:	mov    WORD PTR [rsp+0x38],ax
   14000581d:	lea    rdx,[rsp+0x28]
   140005822:	lea    rcx,[rsp+0x38]
   140005827:	call   0x140001160
   14000582c:	movzx  eax,al
   14000582f:	test   eax,eax
   140005831:	je     0x140005858
   140005833:	mov    rax,QWORD PTR [rsp+0x70]
   140005838:	mov    rax,QWORD PTR [rax]
   14000583b:	movsxd rax,DWORD PTR [rax+0x4]
   14000583f:	mov    rcx,QWORD PTR [rsp+0x70]
   140005844:	add    rcx,rax
   140005847:	xor    r8d,r8d
   14000584a:	mov    edx,0x1
   14000584f:	call   0x140003400
   140005854:	jmp    0x140005888
   140005856:	jmp    0x140005883
   140005858:	lea    rcx,[rsp+0x28]
   14000585d:	call   0x140001150
   140005862:	movzx  r8d,ax
   140005866:	mov    dx,0x48
   14000586a:	mov    rcx,QWORD PTR [rsp+0x20]
   14000586f:	call   0x1400020a0
   140005874:	mov    BYTE PTR [rsp+0x5c],al
   140005878:	movzx  eax,BYTE PTR [rsp+0x5c]
   14000587d:	test   eax,eax
   14000587f:	jne    0x140005883
   140005881:	jmp    0x140005888
   140005883:	jmp    0x1400057e3
   140005888:	mov    rax,QWORD PTR [rsp+0x70]
   14000588d:	mov    rax,QWORD PTR [rax]
   140005890:	movsxd rax,DWORD PTR [rax+0x4]
   140005894:	mov    rcx,QWORD PTR [rsp+0x70]
   140005899:	add    rcx,rax
   14000589c:	call   0x140002bc0
   1400058a1:	movzx  eax,al
   1400058a4:	test   eax,eax
   1400058a6:	je     0x1400058ac
   1400058a8:	mov    al,0x1
   1400058aa:	jmp    0x1400058cf
   1400058ac:	mov    rax,QWORD PTR [rsp+0x70]
   1400058b1:	mov    rax,QWORD PTR [rax]
   1400058b4:	movsxd rax,DWORD PTR [rax+0x4]
   1400058b8:	mov    rcx,QWORD PTR [rsp+0x70]
   1400058bd:	add    rcx,rax
   1400058c0:	xor    r8d,r8d
   1400058c3:	mov    edx,0x2
   1400058c8:	call   0x140003400
   1400058cd:	xor    al,al
   1400058cf:	add    rsp,0x68
   1400058d3:	ret    
   1400058d4:	int3   
   1400058d5:	int3   
   1400058d6:	int3   
   1400058d7:	int3   
   1400058d8:	int3   
   1400058d9:	int3   
   1400058da:	int3   
   1400058db:	int3   
   1400058dc:	int3   
   1400058dd:	int3   
   1400058de:	int3   
   1400058df:	int3   
   1400058e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400058e5:	mov    QWORD PTR [rsp+0x8],rcx
   1400058ea:	sub    rsp,0x28
   1400058ee:	mov    rcx,QWORD PTR [rsp+0x30]
   1400058f3:	mov    rax,QWORD PTR [rsp+0x38]
   1400058f8:	mov    QWORD PTR [rcx],rax
   1400058fb:	mov    rax,QWORD PTR [rsp+0x30]
   140005900:	mov    rax,QWORD PTR [rax]
   140005903:	mov    rax,QWORD PTR [rax]
   140005906:	movsxd rcx,DWORD PTR [rax+0x4]
   14000590a:	mov    rax,QWORD PTR [rsp+0x30]
   14000590f:	add    rcx,QWORD PTR [rax]
   140005912:	call   0x140003440
   140005917:	test   rax,rax
   14000591a:	je     0x140005940
   14000591c:	mov    rax,QWORD PTR [rsp+0x30]
   140005921:	mov    rax,QWORD PTR [rax]
   140005924:	mov    rax,QWORD PTR [rax]
   140005927:	movsxd rcx,DWORD PTR [rax+0x4]
   14000592b:	mov    rax,QWORD PTR [rsp+0x30]
   140005930:	add    rcx,QWORD PTR [rax]
   140005933:	call   0x140003440
   140005938:	mov    rcx,rax
   14000593b:	call   0x140007df0
   140005940:	mov    rax,QWORD PTR [rsp+0x30]
   140005945:	add    rsp,0x28
   140005949:	ret    
   14000594a:	int3   
   14000594b:	int3   
   14000594c:	int3   
   14000594d:	int3   
   14000594e:	int3   
   14000594f:	int3   
   140005950:	mov    QWORD PTR [rsp+0x8],rcx
   140005955:	sub    rsp,0x28
   140005959:	mov    rax,QWORD PTR [rsp+0x30]
   14000595e:	mov    rax,QWORD PTR [rax]
   140005961:	mov    rcx,QWORD PTR [rsp+0x30]
   140005966:	call   QWORD PTR [rax+0x60]
   140005969:	add    rsp,0x28
   14000596d:	ret    
   14000596e:	int3   
   14000596f:	int3   
   140005970:	mov    QWORD PTR [rsp+0x8],rcx
   140005975:	sub    rsp,0x38
   140005979:	mov    rcx,QWORD PTR [rsp+0x40]
   14000597e:	call   0x140005ba0
   140005983:	test   rax,rax
   140005986:	jle    0x1400059a1
   140005988:	mov    rcx,QWORD PTR [rsp+0x40]
   14000598d:	call   0x140005af0
   140005992:	mov    rcx,rax
   140005995:	call   0x140001150
   14000599a:	mov    WORD PTR [rsp+0x20],ax
   14000599f:	jmp    0x1400059b6
   1400059a1:	mov    rax,QWORD PTR [rsp+0x40]
   1400059a6:	mov    rax,QWORD PTR [rax]
   1400059a9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400059ae:	call   QWORD PTR [rax+0x28]
   1400059b1:	mov    WORD PTR [rsp+0x20],ax
   1400059b6:	mov    ax,WORD PTR [rsp+0x20]
   1400059bb:	add    rsp,0x38
   1400059bf:	ret    
   1400059c0:	mov    WORD PTR [rsp+0x10],dx
   1400059c5:	mov    QWORD PTR [rsp+0x8],rcx
   1400059ca:	sub    rsp,0x38
   1400059ce:	mov    rcx,QWORD PTR [rsp+0x40]
   1400059d3:	call   0x140005c30
   1400059d8:	test   rax,rax
   1400059db:	jle    0x140005a0a
   1400059dd:	mov    rcx,QWORD PTR [rsp+0x40]
   1400059e2:	call   0x140007fc0
   1400059e7:	mov    QWORD PTR [rsp+0x20],rax
   1400059ec:	mov    rcx,QWORD PTR [rsp+0x20]
   1400059f1:	movzx  eax,WORD PTR [rsp+0x48]
   1400059f6:	mov    WORD PTR [rcx],ax
   1400059f9:	mov    rcx,QWORD PTR [rsp+0x20]
   1400059fe:	call   0x140001150
   140005a03:	mov    WORD PTR [rsp+0x28],ax
   140005a08:	jmp    0x140005a2c
   140005a0a:	lea    rcx,[rsp+0x48]
   140005a0f:	call   0x140001150
   140005a14:	movzx  edx,ax
   140005a17:	mov    rax,QWORD PTR [rsp+0x40]
   140005a1c:	mov    rax,QWORD PTR [rax]
   140005a1f:	mov    rcx,QWORD PTR [rsp+0x40]
   140005a24:	call   QWORD PTR [rax+0x8]
   140005a27:	mov    WORD PTR [rsp+0x28],ax
   140005a2c:	mov    ax,WORD PTR [rsp+0x28]
   140005a31:	add    rsp,0x38
   140005a35:	ret    
   140005a36:	int3   
   140005a37:	int3   
   140005a38:	int3   
   140005a39:	int3   
   140005a3a:	int3   
   140005a3b:	int3   
   140005a3c:	int3   
   140005a3d:	int3   
   140005a3e:	int3   
   140005a3f:	int3   
   140005a40:	mov    QWORD PTR [rsp+0x8],rcx
   140005a45:	sub    rsp,0x28
   140005a49:	mov    rcx,QWORD PTR [rsp+0x30]
   140005a4e:	add    rcx,0x8
   140005a52:	call   0x14001a234
   140005a57:	add    rsp,0x28
   140005a5b:	ret    
   140005a5c:	int3   
   140005a5d:	int3   
   140005a5e:	int3   
   140005a5f:	int3   
   140005a60:	mov    QWORD PTR [rsp+0x8],rcx
   140005a65:	mov    rax,QWORD PTR [rsp+0x8]
   140005a6a:	mov    rax,QWORD PTR [rax+0x40]
   140005a6e:	mov    rax,QWORD PTR [rax]
   140005a71:	ret    
   140005a72:	int3   
   140005a73:	int3   
   140005a74:	int3   
   140005a75:	int3   
   140005a76:	int3   
   140005a77:	int3   
   140005a78:	int3   
   140005a79:	int3   
   140005a7a:	int3   
   140005a7b:	int3   
   140005a7c:	int3   
   140005a7d:	int3   
   140005a7e:	int3   
   140005a7f:	int3   
   140005a80:	mov    QWORD PTR [rsp+0x8],rcx
   140005a85:	mov    rax,QWORD PTR [rsp+0x8]
   140005a8a:	mov    rax,QWORD PTR [rax+0x48]
   140005a8e:	mov    rax,QWORD PTR [rax]
   140005a91:	ret    
   140005a92:	int3   
   140005a93:	int3   
   140005a94:	int3   
   140005a95:	int3   
   140005a96:	int3   
   140005a97:	int3   
   140005a98:	int3   
   140005a99:	int3   
   140005a9a:	int3   
   140005a9b:	int3   
   140005a9c:	int3   
   140005a9d:	int3   
   140005a9e:	int3   
   140005a9f:	int3   
   140005aa0:	mov    DWORD PTR [rsp+0x10],edx
   140005aa4:	mov    QWORD PTR [rsp+0x8],rcx
   140005aa9:	mov    rcx,QWORD PTR [rsp+0x8]
   140005aae:	mov    rcx,QWORD PTR [rcx+0x58]
   140005ab2:	mov    eax,DWORD PTR [rsp+0x10]
   140005ab6:	mov    ecx,DWORD PTR [rcx]
   140005ab8:	sub    ecx,eax
   140005aba:	mov    rax,QWORD PTR [rsp+0x8]
   140005abf:	mov    rax,QWORD PTR [rax+0x58]
   140005ac3:	mov    DWORD PTR [rax],ecx
   140005ac5:	mov    rax,QWORD PTR [rsp+0x8]
   140005aca:	mov    rax,QWORD PTR [rax+0x40]
   140005ace:	movsxd rcx,DWORD PTR [rsp+0x10]
   140005ad3:	mov    rax,QWORD PTR [rax]
   140005ad6:	lea    rcx,[rax+rcx*2]
   140005ada:	mov    rax,QWORD PTR [rsp+0x8]
   140005adf:	mov    rax,QWORD PTR [rax+0x40]
   140005ae3:	mov    QWORD PTR [rax],rcx
   140005ae6:	ret    
   140005ae7:	int3   
   140005ae8:	int3   
   140005ae9:	int3   
   140005aea:	int3   
   140005aeb:	int3   
   140005aec:	int3   
   140005aed:	int3   
   140005aee:	int3   
   140005aef:	int3   
   140005af0:	mov    QWORD PTR [rsp+0x8],rcx
   140005af5:	sub    rsp,0x18
   140005af9:	mov    rax,QWORD PTR [rsp+0x20]
   140005afe:	mov    rax,QWORD PTR [rax+0x58]
   140005b02:	mov    ecx,DWORD PTR [rax]
   140005b04:	sub    ecx,0x1
   140005b07:	mov    rax,QWORD PTR [rsp+0x20]
   140005b0c:	mov    rax,QWORD PTR [rax+0x58]
   140005b10:	mov    DWORD PTR [rax],ecx
   140005b12:	mov    rax,QWORD PTR [rsp+0x20]
   140005b17:	mov    rax,QWORD PTR [rax+0x40]
   140005b1b:	mov    rax,QWORD PTR [rax]
   140005b1e:	mov    QWORD PTR [rsp],rax
   140005b22:	mov    rcx,QWORD PTR [rsp+0x20]
   140005b27:	mov    rcx,QWORD PTR [rcx+0x40]
   140005b2b:	mov    rcx,QWORD PTR [rcx]
   140005b2e:	add    rcx,0x2
   140005b32:	mov    rax,QWORD PTR [rsp+0x20]
   140005b37:	mov    rax,QWORD PTR [rax+0x40]
   140005b3b:	mov    QWORD PTR [rax],rcx
   140005b3e:	mov    rax,QWORD PTR [rsp]
   140005b42:	add    rsp,0x18
   140005b46:	ret    
   140005b47:	int3   
   140005b48:	int3   
   140005b49:	int3   
   140005b4a:	int3   
   140005b4b:	int3   
   140005b4c:	int3   
   140005b4d:	int3   
   140005b4e:	int3   
   140005b4f:	int3   
   140005b50:	mov    QWORD PTR [rsp+0x8],rcx
   140005b55:	mov    rax,QWORD PTR [rsp+0x8]
   140005b5a:	mov    rax,QWORD PTR [rax+0x58]
   140005b5e:	mov    ecx,DWORD PTR [rax]
   140005b60:	sub    ecx,0x1
   140005b63:	mov    rax,QWORD PTR [rsp+0x8]
   140005b68:	mov    rax,QWORD PTR [rax+0x58]
   140005b6c:	mov    DWORD PTR [rax],ecx
   140005b6e:	mov    rcx,QWORD PTR [rsp+0x8]
   140005b73:	mov    rcx,QWORD PTR [rcx+0x40]
   140005b77:	mov    rcx,QWORD PTR [rcx]
   140005b7a:	add    rcx,0x2
   140005b7e:	mov    rax,QWORD PTR [rsp+0x8]
   140005b83:	mov    rax,QWORD PTR [rax+0x40]
   140005b87:	mov    QWORD PTR [rax],rcx
   140005b8a:	mov    rax,QWORD PTR [rsp+0x8]
   140005b8f:	mov    rax,QWORD PTR [rax+0x40]
   140005b93:	mov    rax,QWORD PTR [rax]
   140005b96:	ret    
   140005b97:	int3   
   140005b98:	int3   
   140005b99:	int3   
   140005b9a:	int3   
   140005b9b:	int3   
   140005b9c:	int3   
   140005b9d:	int3   
   140005b9e:	int3   
   140005b9f:	int3   
   140005ba0:	mov    QWORD PTR [rsp+0x8],rcx
   140005ba5:	sub    rsp,0x18
   140005ba9:	mov    rax,QWORD PTR [rsp+0x20]
   140005bae:	mov    rax,QWORD PTR [rax+0x40]
   140005bb2:	cmp    QWORD PTR [rax],0x0
   140005bb6:	je     0x140005bc8
   140005bb8:	mov    rax,QWORD PTR [rsp+0x20]
   140005bbd:	mov    rax,QWORD PTR [rax+0x58]
   140005bc1:	mov    eax,DWORD PTR [rax]
   140005bc3:	mov    DWORD PTR [rsp],eax
   140005bc6:	jmp    0x140005bcf
   140005bc8:	mov    DWORD PTR [rsp],0x0
   140005bcf:	movsxd rax,DWORD PTR [rsp]
   140005bd3:	add    rsp,0x18
   140005bd7:	ret    
   140005bd8:	int3   
   140005bd9:	int3   
   140005bda:	int3   
   140005bdb:	int3   
   140005bdc:	int3   
   140005bdd:	int3   
   140005bde:	int3   
   140005bdf:	int3   
   140005be0:	mov    DWORD PTR [rsp+0x10],edx
   140005be4:	mov    QWORD PTR [rsp+0x8],rcx
   140005be9:	mov    rcx,QWORD PTR [rsp+0x8]
   140005bee:	mov    rcx,QWORD PTR [rcx+0x60]
   140005bf2:	mov    eax,DWORD PTR [rsp+0x10]
   140005bf6:	mov    ecx,DWORD PTR [rcx]
   140005bf8:	sub    ecx,eax
   140005bfa:	mov    rax,QWORD PTR [rsp+0x8]
   140005bff:	mov    rax,QWORD PTR [rax+0x60]
   140005c03:	mov    DWORD PTR [rax],ecx
   140005c05:	mov    rax,QWORD PTR [rsp+0x8]
   140005c0a:	mov    rax,QWORD PTR [rax+0x48]
   140005c0e:	movsxd rcx,DWORD PTR [rsp+0x10]
   140005c13:	mov    rax,QWORD PTR [rax]
   140005c16:	lea    rcx,[rax+rcx*2]
   140005c1a:	mov    rax,QWORD PTR [rsp+0x8]
   140005c1f:	mov    rax,QWORD PTR [rax+0x48]
   140005c23:	mov    QWORD PTR [rax],rcx
   140005c26:	ret    
   140005c27:	int3   
   140005c28:	int3   
   140005c29:	int3   
   140005c2a:	int3   
   140005c2b:	int3   
   140005c2c:	int3   
   140005c2d:	int3   
   140005c2e:	int3   
   140005c2f:	int3   
   140005c30:	mov    QWORD PTR [rsp+0x8],rcx
   140005c35:	sub    rsp,0x18
   140005c39:	mov    rax,QWORD PTR [rsp+0x20]
   140005c3e:	mov    rax,QWORD PTR [rax+0x48]
   140005c42:	cmp    QWORD PTR [rax],0x0
   140005c46:	je     0x140005c58
   140005c48:	mov    rax,QWORD PTR [rsp+0x20]
   140005c4d:	mov    rax,QWORD PTR [rax+0x60]
   140005c51:	mov    eax,DWORD PTR [rax]
   140005c53:	mov    DWORD PTR [rsp],eax
   140005c56:	jmp    0x140005c5f
   140005c58:	mov    DWORD PTR [rsp],0x0
   140005c5f:	movsxd rax,DWORD PTR [rsp]
   140005c63:	add    rsp,0x18
   140005c67:	ret    
   140005c68:	int3   
   140005c69:	int3   
   140005c6a:	int3   
   140005c6b:	int3   
   140005c6c:	int3   
   140005c6d:	int3   
   140005c6e:	int3   
   140005c6f:	int3   
   140005c70:	mov    QWORD PTR [rsp+0x8],rcx
   140005c75:	sub    rsp,0x38
   140005c79:	lea    rax,[rsp+0x20]
   140005c7e:	mov    QWORD PTR [rsp+0x28],rax
   140005c83:	mov    rcx,QWORD PTR [rsp+0x28]
   140005c88:	call   0x140005660
   140005c8d:	mov    rdx,rax
   140005c90:	mov    rcx,QWORD PTR [rsp+0x40]
   140005c95:	call   0x140005630
   140005c9a:	xor    r8d,r8d
   140005c9d:	xor    edx,edx
   140005c9f:	mov    rcx,QWORD PTR [rsp+0x40]
   140005ca4:	call   0x1400062d0
   140005ca9:	mov    rax,QWORD PTR [rsp+0x40]
   140005cae:	add    rsp,0x38
   140005cb2:	ret    
   140005cb3:	int3   
   140005cb4:	int3   
   140005cb5:	int3   
   140005cb6:	int3   
   140005cb7:	int3   
   140005cb8:	int3   
   140005cb9:	int3   
   140005cba:	int3   
   140005cbb:	int3   
   140005cbc:	int3   
   140005cbd:	int3   
   140005cbe:	int3   
   140005cbf:	int3   
   140005cc0:	mov    WORD PTR [rsp+0x18],r8w
   140005cc6:	mov    QWORD PTR [rsp+0x10],rdx
   140005ccb:	mov    QWORD PTR [rsp+0x8],rcx
   140005cd0:	sub    rsp,0x38
   140005cd4:	lea    rax,[rsp+0x20]
   140005cd9:	mov    QWORD PTR [rsp+0x28],rax
   140005cde:	mov    rcx,QWORD PTR [rsp+0x28]
   140005ce3:	call   0x140005660
   140005ce8:	mov    rdx,rax
   140005ceb:	mov    rcx,QWORD PTR [rsp+0x40]
   140005cf0:	call   0x140005630
   140005cf5:	xor    r8d,r8d
   140005cf8:	xor    edx,edx
   140005cfa:	mov    rcx,QWORD PTR [rsp+0x40]
   140005cff:	call   0x1400062d0
   140005d04:	movzx  r8d,WORD PTR [rsp+0x50]
   140005d0a:	mov    rdx,QWORD PTR [rsp+0x48]
   140005d0f:	mov    rcx,QWORD PTR [rsp+0x40]
   140005d14:	call   0x140008260
   140005d19:	mov    rax,QWORD PTR [rsp+0x40]
   140005d1e:	add    rsp,0x38
   140005d22:	ret    
   140005d23:	int3   
   140005d24:	int3   
   140005d25:	int3   
   140005d26:	int3   
   140005d27:	int3   
   140005d28:	int3   
   140005d29:	int3   
   140005d2a:	int3   
   140005d2b:	int3   
   140005d2c:	int3   
   140005d2d:	int3   
   140005d2e:	int3   
   140005d2f:	int3   
   140005d30:	mov    QWORD PTR [rsp+0x10],rdx
   140005d35:	mov    QWORD PTR [rsp+0x8],rcx
   140005d3a:	sub    rsp,0x28
   140005d3e:	mov    rdx,QWORD PTR [rsp+0x38]
   140005d43:	mov    rcx,QWORD PTR [rsp+0x30]
   140005d48:	call   0x140005630
   140005d4d:	xor    r8d,r8d
   140005d50:	xor    edx,edx
   140005d52:	mov    rcx,QWORD PTR [rsp+0x30]
   140005d57:	call   0x1400062d0
   140005d5c:	mov    r9,QWORD PTR [rip+0x39595]        # 0x14003f2f8
   140005d63:	xor    r8d,r8d
   140005d66:	mov    rdx,QWORD PTR [rsp+0x38]
   140005d6b:	mov    rcx,QWORD PTR [rsp+0x30]
   140005d70:	call   0x140005e10
   140005d75:	mov    rax,QWORD PTR [rsp+0x30]
   140005d7a:	add    rsp,0x28
   140005d7e:	ret    
   140005d7f:	int3   
   140005d80:	mov    QWORD PTR [rsp+0x10],rdx
   140005d85:	mov    QWORD PTR [rsp+0x8],rcx
   140005d8a:	sub    rsp,0x28
   140005d8e:	mov    rdx,QWORD PTR [rsp+0x38]
   140005d93:	mov    rcx,QWORD PTR [rsp+0x30]
   140005d98:	call   0x140008230
   140005d9d:	add    rsp,0x28
   140005da1:	ret    
   140005da2:	int3   
   140005da3:	int3   
   140005da4:	int3   
   140005da5:	int3   
   140005da6:	int3   
   140005da7:	int3   
   140005da8:	int3   
   140005da9:	int3   
   140005daa:	int3   
   140005dab:	int3   
   140005dac:	int3   
   140005dad:	int3   
   140005dae:	int3   
   140005daf:	int3   
   140005db0:	mov    QWORD PTR [rsp+0x10],rdx
   140005db5:	mov    QWORD PTR [rsp+0x8],rcx
   140005dba:	sub    rsp,0x28
   140005dbe:	mov    rdx,QWORD PTR [rsp+0x38]
   140005dc3:	mov    rcx,QWORD PTR [rsp+0x30]
   140005dc8:	call   0x140008160
   140005dcd:	add    rsp,0x28
   140005dd1:	ret    
   140005dd2:	int3   
   140005dd3:	int3   
   140005dd4:	int3   
   140005dd5:	int3   
   140005dd6:	int3   
   140005dd7:	int3   
   140005dd8:	int3   
   140005dd9:	int3   
   140005dda:	int3   
   140005ddb:	int3   
   140005ddc:	int3   
   140005ddd:	int3   
   140005dde:	int3   
   140005ddf:	int3   
   140005de0:	mov    QWORD PTR [rsp+0x10],rdx
   140005de5:	mov    QWORD PTR [rsp+0x8],rcx
   140005dea:	sub    rsp,0x28
   140005dee:	mov    r9,QWORD PTR [rip+0x39503]        # 0x14003f2f8
   140005df5:	xor    r8d,r8d
   140005df8:	mov    rdx,QWORD PTR [rsp+0x38]
   140005dfd:	mov    rcx,QWORD PTR [rsp+0x30]
   140005e02:	call   0x140008020
   140005e07:	add    rsp,0x28
   140005e0b:	ret    
   140005e0c:	int3   
   140005e0d:	int3   
   140005e0e:	int3   
   140005e0f:	int3   
   140005e10:	mov    QWORD PTR [rsp+0x20],r9
   140005e15:	mov    QWORD PTR [rsp+0x18],r8
   140005e1a:	mov    QWORD PTR [rsp+0x10],rdx
   140005e1f:	mov    QWORD PTR [rsp+0x8],rcx
   140005e24:	push   rbx
   140005e25:	sub    rsp,0x30
   140005e29:	mov    rcx,QWORD PTR [rsp+0x48]
   140005e2e:	call   0x140003bb0
   140005e33:	cmp    rax,QWORD PTR [rsp+0x50]
   140005e38:	jae    0x140005e3f
   140005e3a:	call   0x14001a348
   140005e3f:	mov    rcx,QWORD PTR [rsp+0x48]
   140005e44:	call   0x140003bb0
   140005e49:	sub    rax,QWORD PTR [rsp+0x50]
   140005e4e:	mov    QWORD PTR [rsp+0x20],rax
   140005e53:	mov    rax,QWORD PTR [rsp+0x20]
   140005e58:	cmp    QWORD PTR [rsp+0x58],rax
   140005e5d:	jae    0x140005e69
   140005e5f:	mov    rax,QWORD PTR [rsp+0x58]
   140005e64:	mov    QWORD PTR [rsp+0x20],rax
   140005e69:	mov    rax,QWORD PTR [rsp+0x48]
   140005e6e:	cmp    QWORD PTR [rsp+0x40],rax
   140005e73:	jne    0x140005ea6
   140005e75:	mov    rax,QWORD PTR [rsp+0x20]
   140005e7a:	mov    rdx,QWORD PTR [rsp+0x50]
   140005e7f:	add    rdx,rax
   140005e82:	mov    r8,QWORD PTR [rip+0x3946f]        # 0x14003f2f8
   140005e89:	mov    rcx,QWORD PTR [rsp+0x40]
   140005e8e:	call   0x1400082d0
   140005e93:	mov    r8,QWORD PTR [rsp+0x50]
   140005e98:	xor    edx,edx
   140005e9a:	mov    rcx,QWORD PTR [rsp+0x40]
   140005e9f:	call   0x1400082d0
   140005ea4:	jmp    0x140005f07
   140005ea6:	xor    r8d,r8d
   140005ea9:	mov    rdx,QWORD PTR [rsp+0x20]
   140005eae:	mov    rcx,QWORD PTR [rsp+0x40]
   140005eb3:	call   0x140006190
   140005eb8:	movzx  eax,al
   140005ebb:	test   eax,eax
   140005ebd:	je     0x140005f07
   140005ebf:	mov    rcx,QWORD PTR [rsp+0x48]
   140005ec4:	call   0x140006370
   140005ec9:	mov    r11,rax
   140005ecc:	mov    rax,QWORD PTR [rsp+0x50]
   140005ed1:	lea    rbx,[r11+rax*2]
   140005ed5:	mov    rcx,QWORD PTR [rsp+0x40]
   140005eda:	call   0x140006370
   140005edf:	mov    r9,QWORD PTR [rsp+0x20]
   140005ee4:	mov    r8,rbx
   140005ee7:	mov    rdx,QWORD PTR [rsp+0x40]
   140005eec:	mov    rdx,QWORD PTR [rdx+0x20]
   140005ef0:	mov    rcx,rax
   140005ef3:	call   0x14000b4b0
   140005ef8:	mov    rdx,QWORD PTR [rsp+0x20]
   140005efd:	mov    rcx,QWORD PTR [rsp+0x40]
   140005f02:	call   0x140006140
   140005f07:	mov    rax,QWORD PTR [rsp+0x40]
   140005f0c:	add    rsp,0x30
   140005f10:	pop    rbx
   140005f11:	ret    
   140005f12:	int3   
   140005f13:	int3   
   140005f14:	int3   
   140005f15:	int3   
   140005f16:	int3   
   140005f17:	int3   
   140005f18:	int3   
   140005f19:	int3   
   140005f1a:	int3   
   140005f1b:	int3   
   140005f1c:	int3   
   140005f1d:	int3   
   140005f1e:	int3   
   140005f1f:	int3   
   140005f20:	mov    QWORD PTR [rsp+0x10],rdx
   140005f25:	mov    QWORD PTR [rsp+0x8],rcx
   140005f2a:	sub    rsp,0x28
   140005f2e:	mov    rcx,QWORD PTR [rsp+0x38]
   140005f33:	call   0x140001050
   140005f38:	mov    r8,rax
   140005f3b:	mov    rdx,QWORD PTR [rsp+0x38]
   140005f40:	mov    rcx,QWORD PTR [rsp+0x30]
   140005f45:	call   0x140003ae0
   140005f4a:	add    rsp,0x28
   140005f4e:	ret    
   140005f4f:	int3   
   140005f50:	mov    QWORD PTR [rsp+0x20],r9
   140005f55:	mov    QWORD PTR [rsp+0x18],r8
   140005f5a:	mov    QWORD PTR [rsp+0x10],rdx
   140005f5f:	mov    QWORD PTR [rsp+0x8],rcx
   140005f64:	push   rsi
   140005f65:	push   rdi
   140005f66:	sub    rsp,0x98
   140005f6d:	lea    rdi,[rsp+0x50]
   140005f72:	mov    rsi,QWORD PTR [rsp+0xb8]
   140005f7a:	mov    ecx,0x10
   140005f7f:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140005f81:	lea    rdi,[rsp+0x40]
   140005f86:	mov    rsi,QWORD PTR [rsp+0xc0]
   140005f8e:	mov    ecx,0x10
   140005f93:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140005f95:	lea    rdx,[rsp+0x30]
   140005f9a:	mov    rcx,QWORD PTR [rsp+0xb0]
   140005fa2:	call   0x140006040
   140005fa7:	lea    rdi,[rsp+0x80]
   140005faf:	mov    rsi,rax
   140005fb2:	mov    ecx,0x10
   140005fb7:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140005fb9:	lea    rdi,[rsp+0x20]
   140005fbe:	lea    rsi,[rsp+0x80]
   140005fc6:	mov    ecx,0x10
   140005fcb:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140005fcd:	lea    rdi,[rsp+0x70]
   140005fd2:	lea    rsi,[rsp+0x20]
   140005fd7:	mov    ecx,0x10
   140005fdc:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140005fde:	lea    rdi,[rsp+0x60]
   140005fe3:	mov    rsi,QWORD PTR [rsp+0xb8]
   140005feb:	mov    ecx,0x10
   140005ff0:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140005ff2:	lea    rdx,[rsp+0x50]
   140005ff7:	lea    rcx,[rsp+0x40]
   140005ffc:	call   0x140008720
   140006001:	mov    rdi,rax
   140006004:	lea    rdx,[rsp+0x70]
   140006009:	lea    rcx,[rsp+0x60]
   14000600e:	call   0x140008720
   140006013:	mov    r9,QWORD PTR [rsp+0xc8]
   14000601b:	mov    r8,rdi
   14000601e:	mov    rdx,rax
   140006021:	mov    rcx,QWORD PTR [rsp+0xb0]
   140006029:	call   0x1400083e0
   14000602e:	add    rsp,0x98
   140006035:	pop    rdi
   140006036:	pop    rsi
   140006037:	ret    
   140006038:	int3   
   140006039:	int3   
   14000603a:	int3   
   14000603b:	int3   
   14000603c:	int3   
   14000603d:	int3   
   14000603e:	int3   
   14000603f:	int3   
   140006040:	mov    QWORD PTR [rsp+0x10],rdx
   140006045:	mov    QWORD PTR [rsp+0x8],rcx
   14000604a:	sub    rsp,0x28
   14000604e:	mov    rcx,QWORD PTR [rsp+0x30]
   140006053:	call   0x140006370
   140006058:	mov    r8,QWORD PTR [rsp+0x30]
   14000605d:	mov    rdx,rax
   140006060:	mov    rcx,QWORD PTR [rsp+0x38]
   140006065:	call   0x140009210
   14000606a:	mov    rax,QWORD PTR [rsp+0x38]
   14000606f:	add    rsp,0x28
   140006073:	ret    
   140006074:	int3   
   140006075:	int3   
   140006076:	int3   
   140006077:	int3   
   140006078:	int3   
   140006079:	int3   
   14000607a:	int3   
   14000607b:	int3   
   14000607c:	int3   
   14000607d:	int3   
   14000607e:	int3   
   14000607f:	int3   
   140006080:	mov    WORD PTR [rsp+0x18],r8w
   140006086:	mov    QWORD PTR [rsp+0x10],rdx
   14000608b:	mov    QWORD PTR [rsp+0x8],rcx
   140006090:	sub    rsp,0x28
   140006094:	mov    rax,QWORD PTR [rsp+0x30]
   140006099:	mov    rax,QWORD PTR [rax+0x18]
   14000609d:	cmp    QWORD PTR [rsp+0x38],rax
   1400060a2:	ja     0x1400060bc
   1400060a4:	mov    r8,QWORD PTR [rip+0x3924d]        # 0x14003f2f8
   1400060ab:	mov    rdx,QWORD PTR [rsp+0x38]
   1400060b0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400060b5:	call   0x1400082d0
   1400060ba:	jmp    0x1400060dd
   1400060bc:	mov    rax,QWORD PTR [rsp+0x30]
   1400060c1:	mov    rax,QWORD PTR [rax+0x18]
   1400060c5:	mov    rdx,QWORD PTR [rsp+0x38]
   1400060ca:	sub    rdx,rax
   1400060cd:	movzx  r8d,WORD PTR [rsp+0x40]
   1400060d3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400060d8:	call   0x140008190
   1400060dd:	add    rsp,0x28
   1400060e1:	ret    
   1400060e2:	int3   
   1400060e3:	int3   
   1400060e4:	int3   
   1400060e5:	int3   
   1400060e6:	int3   
   1400060e7:	int3   
   1400060e8:	int3   
   1400060e9:	int3   
   1400060ea:	int3   
   1400060eb:	int3   
   1400060ec:	int3   
   1400060ed:	int3   
   1400060ee:	int3   
   1400060ef:	int3   
   1400060f0:	mov    QWORD PTR [rsp+0x18],r8
   1400060f5:	mov    QWORD PTR [rsp+0x10],rdx
   1400060fa:	mov    QWORD PTR [rsp+0x8],rcx
   1400060ff:	push   rbx
   140006100:	sub    rsp,0x20
   140006104:	mov    rcx,QWORD PTR [rsp+0x38]
   140006109:	call   0x140003bb0
   14000610e:	mov    rbx,rax
   140006111:	mov    rcx,QWORD PTR [rsp+0x38]
   140006116:	call   0x140006370
   14000611b:	mov    r9,rbx
   14000611e:	mov    r8,QWORD PTR [rsp+0x40]
   140006123:	mov    rdx,rax
   140006126:	mov    rcx,QWORD PTR [rsp+0x30]
   14000612b:	call   0x140008480
   140006130:	add    rsp,0x20
   140006134:	pop    rbx
   140006135:	ret    
   140006136:	int3   
   140006137:	int3   
   140006138:	int3   
   140006139:	int3   
   14000613a:	int3   
   14000613b:	int3   
   14000613c:	int3   
   14000613d:	int3   
   14000613e:	int3   
   14000613f:	int3   
   140006140:	mov    QWORD PTR [rsp+0x10],rdx
   140006145:	mov    QWORD PTR [rsp+0x8],rcx
   14000614a:	sub    rsp,0x38
   14000614e:	xor    eax,eax
   140006150:	mov    WORD PTR [rsp+0x20],ax
   140006155:	mov    rcx,QWORD PTR [rsp+0x40]
   14000615a:	mov    rax,QWORD PTR [rsp+0x48]
   14000615f:	mov    QWORD PTR [rcx+0x18],rax
   140006163:	mov    rcx,QWORD PTR [rsp+0x40]
   140006168:	call   0x140006370
   14000616d:	mov    r11,rax
   140006170:	mov    rax,QWORD PTR [rsp+0x48]
   140006175:	lea    rcx,[r11+rax*2]
   140006179:	lea    rdx,[rsp+0x20]
   14000617e:	call   0x140001000
   140006183:	add    rsp,0x38
   140006187:	ret    
   140006188:	int3   
   140006189:	int3   
   14000618a:	int3   
   14000618b:	int3   
   14000618c:	int3   
   14000618d:	int3   
   14000618e:	int3   
   14000618f:	int3   
   140006190:	mov    BYTE PTR [rsp+0x18],r8b
   140006195:	mov    QWORD PTR [rsp+0x10],rdx
   14000619a:	mov    QWORD PTR [rsp+0x8],rcx
   14000619f:	sub    rsp,0x38
   1400061a3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400061a8:	call   0x140008430
   1400061ad:	cmp    rax,QWORD PTR [rsp+0x48]
   1400061b2:	jae    0x1400061b9
   1400061b4:	call   0x14001a2e0
   1400061b9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400061be:	mov    rax,QWORD PTR [rsp+0x48]
   1400061c3:	cmp    QWORD PTR [rcx+0x20],rax
   1400061c7:	jae    0x1400061e3
   1400061c9:	mov    r8,QWORD PTR [rsp+0x40]
   1400061ce:	mov    r8,QWORD PTR [r8+0x18]
   1400061d2:	mov    rdx,QWORD PTR [rsp+0x48]
   1400061d7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400061dc:	call   0x1400085c0
   1400061e1:	jmp    0x140006245
   1400061e3:	movzx  eax,BYTE PTR [rsp+0x50]
   1400061e8:	test   eax,eax
   1400061ea:	je     0x140006231
   1400061ec:	cmp    QWORD PTR [rsp+0x48],0x8
   1400061f2:	jae    0x140006231
   1400061f4:	mov    rax,QWORD PTR [rsp+0x40]
   1400061f9:	mov    rax,QWORD PTR [rax+0x18]
   1400061fd:	cmp    QWORD PTR [rsp+0x48],rax
   140006202:	jae    0x140006210
   140006204:	mov    rax,QWORD PTR [rsp+0x48]
   140006209:	mov    QWORD PTR [rsp+0x20],rax
   14000620e:	jmp    0x14000621e
   140006210:	mov    rax,QWORD PTR [rsp+0x40]
   140006215:	mov    rax,QWORD PTR [rax+0x18]
   140006219:	mov    QWORD PTR [rsp+0x20],rax
   14000621e:	mov    r8,QWORD PTR [rsp+0x20]
   140006223:	mov    dl,0x1
   140006225:	mov    rcx,QWORD PTR [rsp+0x40]
   14000622a:	call   0x1400062d0
   14000622f:	jmp    0x140006245
   140006231:	cmp    QWORD PTR [rsp+0x48],0x0
   140006237:	jne    0x140006245
   140006239:	xor    edx,edx
   14000623b:	mov    rcx,QWORD PTR [rsp+0x40]
   140006240:	call   0x140006140
   140006245:	cmp    QWORD PTR [rsp+0x48],0x0
   14000624b:	jbe    0x140006257
   14000624d:	mov    DWORD PTR [rsp+0x28],0x1
   140006255:	jmp    0x14000625f
   140006257:	mov    DWORD PTR [rsp+0x28],0x0
   14000625f:	mov    al,BYTE PTR [rsp+0x28]
   140006263:	add    rsp,0x38
   140006267:	ret    
   140006268:	int3   
   140006269:	int3   
   14000626a:	int3   
   14000626b:	int3   
   14000626c:	int3   
   14000626d:	int3   
   14000626e:	int3   
   14000626f:	int3   
   140006270:	mov    QWORD PTR [rsp+0x10],rdx
   140006275:	mov    QWORD PTR [rsp+0x8],rcx
   14000627a:	sub    rsp,0x28
   14000627e:	cmp    QWORD PTR [rsp+0x38],0x0
   140006284:	je     0x1400062b8
   140006286:	mov    rcx,QWORD PTR [rsp+0x30]
   14000628b:	call   0x140006370
   140006290:	cmp    QWORD PTR [rsp+0x38],rax
   140006295:	jb     0x1400062b8
   140006297:	mov    rcx,QWORD PTR [rsp+0x30]
   14000629c:	call   0x140006370
   1400062a1:	mov    r11,rax
   1400062a4:	mov    rax,QWORD PTR [rsp+0x30]
   1400062a9:	mov    rax,QWORD PTR [rax+0x18]
   1400062ad:	lea    rax,[r11+rax*2]
   1400062b1:	cmp    rax,QWORD PTR [rsp+0x38]
   1400062b6:	ja     0x1400062be
   1400062b8:	xor    al,al
   1400062ba:	jmp    0x1400062c0
   1400062bc:	jmp    0x1400062c0
   1400062be:	mov    al,0x1
   1400062c0:	add    rsp,0x28
   1400062c4:	ret    
   1400062c5:	int3   
   1400062c6:	int3   
   1400062c7:	int3   
   1400062c8:	int3   
   1400062c9:	int3   
   1400062ca:	int3   
   1400062cb:	int3   
   1400062cc:	int3   
   1400062cd:	int3   
   1400062ce:	int3   
   1400062cf:	int3   
   1400062d0:	mov    QWORD PTR [rsp+0x18],r8
   1400062d5:	mov    BYTE PTR [rsp+0x10],dl
   1400062d9:	mov    QWORD PTR [rsp+0x8],rcx
   1400062de:	sub    rsp,0x38
   1400062e2:	movzx  eax,BYTE PTR [rsp+0x48]
   1400062e7:	test   eax,eax
   1400062e9:	jne    0x1400062ed
   1400062eb:	jmp    0x140006348
   1400062ed:	mov    rax,QWORD PTR [rsp+0x40]
   1400062f2:	cmp    QWORD PTR [rax+0x20],0x8
   1400062f7:	jb     0x140006348
   1400062f9:	mov    rax,QWORD PTR [rsp+0x40]
   1400062fe:	mov    rax,QWORD PTR [rax+0x8]
   140006302:	mov    QWORD PTR [rsp+0x20],rax
   140006307:	cmp    QWORD PTR [rsp+0x50],0x0
   14000630d:	jbe    0x14000632c
   14000630f:	mov    rcx,QWORD PTR [rsp+0x40]
   140006314:	add    rcx,0x8
   140006318:	mov    r9,QWORD PTR [rsp+0x50]
   14000631d:	mov    r8,QWORD PTR [rsp+0x20]
   140006322:	mov    edx,0x8
   140006327:	call   0x14000b4b0
   14000632c:	mov    r8,QWORD PTR [rsp+0x40]
   140006331:	mov    r8,QWORD PTR [r8+0x20]
   140006335:	add    r8,0x1
   140006339:	mov    rdx,QWORD PTR [rsp+0x20]
   14000633e:	mov    rcx,QWORD PTR [rsp+0x40]
   140006343:	call   0x1400089f0
   140006348:	mov    rax,QWORD PTR [rsp+0x40]
   14000634d:	mov    QWORD PTR [rax+0x20],0x7
   140006355:	mov    rdx,QWORD PTR [rsp+0x50]
   14000635a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000635f:	call   0x140006140
   140006364:	add    rsp,0x38
   140006368:	ret    
   140006369:	int3   
   14000636a:	int3   
   14000636b:	int3   
   14000636c:	int3   
   14000636d:	int3   
   14000636e:	int3   
   14000636f:	int3   
   140006370:	mov    QWORD PTR [rsp+0x8],rcx
   140006375:	sub    rsp,0x18
   140006379:	mov    rax,QWORD PTR [rsp+0x20]
   14000637e:	cmp    QWORD PTR [rax+0x20],0x8
   140006383:	jb     0x140006394
   140006385:	mov    rax,QWORD PTR [rsp+0x20]
   14000638a:	mov    rax,QWORD PTR [rax+0x8]
   14000638e:	mov    QWORD PTR [rsp],rax
   140006392:	jmp    0x1400063a1
   140006394:	mov    rax,QWORD PTR [rsp+0x20]
   140006399:	add    rax,0x8
   14000639d:	mov    QWORD PTR [rsp],rax
   1400063a1:	mov    rax,QWORD PTR [rsp]
   1400063a5:	add    rsp,0x18
   1400063a9:	ret    
   1400063aa:	int3   
   1400063ab:	int3   
   1400063ac:	int3   
   1400063ad:	int3   
   1400063ae:	int3   
   1400063af:	int3   
   1400063b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400063b5:	sub    rsp,0x48
   1400063b9:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400063c2:	lea    rax,[rsp+0x20]
   1400063c7:	mov    QWORD PTR [rsp+0x28],rax
   1400063cc:	mov    rcx,QWORD PTR [rsp+0x28]
   1400063d1:	call   0x140005660
   1400063d6:	mov    rdx,rax
   1400063d9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400063de:	call   0x1400126b0
   1400063e3:	nop
   1400063e4:	xor    edx,edx
   1400063e6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400063eb:	call   0x1400088c0
   1400063f0:	nop
   1400063f1:	mov    rax,QWORD PTR [rsp+0x50]
   1400063f6:	add    rsp,0x48
   1400063fa:	ret    
   1400063fb:	int3   
   1400063fc:	int3   
   1400063fd:	int3   
   1400063fe:	int3   
   1400063ff:	int3   
   140006400:	mov    QWORD PTR [rsp+0x8],rcx
   140006405:	mov    rax,QWORD PTR [rsp+0x8]
   14000640a:	mov    rcx,QWORD PTR [rsp+0x8]
   14000640f:	mov    rcx,QWORD PTR [rcx+0x18]
   140006413:	mov    rax,QWORD PTR [rax+0x20]
   140006417:	sub    rax,rcx
   14000641a:	cqo    
   14000641c:	mov    ecx,0x28
   140006421:	idiv   rcx
   140006424:	ret    
   140006425:	int3   
   140006426:	int3   
   140006427:	int3   
   140006428:	int3   
   140006429:	int3   
   14000642a:	int3   
   14000642b:	int3   
   14000642c:	int3   
   14000642d:	int3   
   14000642e:	int3   
   14000642f:	int3   
   140006430:	mov    QWORD PTR [rsp+0x10],rdx
   140006435:	mov    QWORD PTR [rsp+0x8],rcx
   14000643a:	push   rsi
   14000643b:	push   rdi
   14000643c:	sub    rsp,0x78
   140006440:	mov    rcx,QWORD PTR [rsp+0x90]
   140006448:	call   0x140006400
   14000644d:	mov    rdi,rax
   140006450:	mov    rcx,QWORD PTR [rsp+0x90]
   140006458:	call   0x140008790
   14000645d:	cmp    rdi,rax
   140006460:	jae    0x14000649a
   140006462:	mov    r9,QWORD PTR [rsp+0x98]
   14000646a:	mov    r8d,0x1
   140006470:	mov    rdx,QWORD PTR [rsp+0x90]
   140006478:	mov    rdx,QWORD PTR [rdx+0x20]
   14000647c:	mov    rcx,QWORD PTR [rsp+0x90]
   140006484:	call   0x1400089a0
   140006489:	mov    rdx,rax
   14000648c:	mov    rax,QWORD PTR [rsp+0x90]
   140006494:	mov    QWORD PTR [rax+0x20],rdx
   140006498:	jmp    0x1400064fc
   14000649a:	lea    rdx,[rsp+0x30]
   14000649f:	mov    rcx,QWORD PTR [rsp+0x90]
   1400064a7:	call   0x140011cf0
   1400064ac:	lea    rdi,[rsp+0x60]
   1400064b1:	mov    rsi,rax
   1400064b4:	mov    ecx,0x10
   1400064b9:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400064bb:	lea    rdi,[rsp+0x20]
   1400064c0:	lea    rsi,[rsp+0x60]
   1400064c5:	mov    ecx,0x10
   1400064ca:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400064cc:	lea    rdi,[rsp+0x50]
   1400064d1:	lea    rsi,[rsp+0x20]
   1400064d6:	mov    ecx,0x10
   1400064db:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400064dd:	mov    r9,QWORD PTR [rsp+0x98]
   1400064e5:	lea    r8,[rsp+0x50]
   1400064ea:	lea    rdx,[rsp+0x40]
   1400064ef:	mov    rcx,QWORD PTR [rsp+0x90]
   1400064f7:	call   0x1400087e0
   1400064fc:	add    rsp,0x78
   140006500:	pop    rdi
   140006501:	pop    rsi
   140006502:	ret    
   140006503:	int3   
   140006504:	int3   
   140006505:	int3   
   140006506:	int3   
   140006507:	int3   
   140006508:	int3   
   140006509:	int3   
   14000650a:	int3   
   14000650b:	int3   
   14000650c:	int3   
   14000650d:	int3   
   14000650e:	int3   
   14000650f:	int3   
   140006510:	mov    QWORD PTR [rsp+0x8],rcx
   140006515:	sub    rsp,0x28
   140006519:	mov    rax,QWORD PTR [rsp+0x30]
   14000651e:	cmp    QWORD PTR [rax+0x18],0x0
   140006523:	je     0x14000657a
   140006525:	mov    r8,QWORD PTR [rsp+0x30]
   14000652a:	mov    r8,QWORD PTR [r8+0x20]
   14000652e:	mov    rdx,QWORD PTR [rsp+0x30]
   140006533:	mov    rdx,QWORD PTR [rdx+0x18]
   140006537:	mov    rcx,QWORD PTR [rsp+0x30]
   14000653c:	call   0x140008970
   140006541:	mov    rax,QWORD PTR [rsp+0x30]
   140006546:	mov    rcx,QWORD PTR [rsp+0x30]
   14000654b:	mov    rcx,QWORD PTR [rcx+0x18]
   14000654f:	mov    rax,QWORD PTR [rax+0x28]
   140006553:	sub    rax,rcx
   140006556:	cqo    
   140006558:	mov    ecx,0x28
   14000655d:	idiv   rcx
   140006560:	mov    rcx,QWORD PTR [rsp+0x30]
   140006565:	add    rcx,0x10
   140006569:	mov    r8,rax
   14000656c:	mov    rdx,QWORD PTR [rsp+0x30]
   140006571:	mov    rdx,QWORD PTR [rdx+0x18]
   140006575:	call   0x1400089f0
   14000657a:	mov    rax,QWORD PTR [rsp+0x30]
   14000657f:	mov    QWORD PTR [rax+0x18],0x0
   140006587:	mov    rax,QWORD PTR [rsp+0x30]
   14000658c:	mov    QWORD PTR [rax+0x20],0x0
   140006594:	mov    rax,QWORD PTR [rsp+0x30]
   140006599:	mov    QWORD PTR [rax+0x28],0x0
   1400065a1:	add    rsp,0x28
   1400065a5:	ret    
   1400065a6:	int3   
   1400065a7:	int3   
   1400065a8:	int3   
   1400065a9:	int3   
   1400065aa:	int3   
   1400065ab:	int3   
   1400065ac:	int3   
   1400065ad:	int3   
   1400065ae:	int3   
   1400065af:	int3   
   1400065b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400065b5:	sub    rsp,0x28
   1400065b9:	mov    rax,QWORD PTR [rsp+0x30]
   1400065be:	cmp    QWORD PTR [rax+0x18],0x0
   1400065c3:	je     0x140006611
   1400065c5:	mov    r8,QWORD PTR [rsp+0x30]
   1400065ca:	mov    r8,QWORD PTR [r8+0x20]
   1400065ce:	mov    rdx,QWORD PTR [rsp+0x30]
   1400065d3:	mov    rdx,QWORD PTR [rdx+0x18]
   1400065d7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400065dc:	call   0x140008a20
   1400065e1:	mov    r8,QWORD PTR [rsp+0x30]
   1400065e6:	mov    rax,QWORD PTR [rsp+0x30]
   1400065eb:	mov    rax,QWORD PTR [rax+0x18]
   1400065ef:	mov    r8,QWORD PTR [r8+0x28]
   1400065f3:	sub    r8,rax
   1400065f6:	sar    r8,0x4
   1400065fa:	mov    rcx,QWORD PTR [rsp+0x30]
   1400065ff:	add    rcx,0x10
   140006603:	mov    rdx,QWORD PTR [rsp+0x30]
   140006608:	mov    rdx,QWORD PTR [rdx+0x18]
   14000660c:	call   0x1400089f0
   140006611:	mov    rax,QWORD PTR [rsp+0x30]
   140006616:	mov    QWORD PTR [rax+0x18],0x0
   14000661e:	mov    rax,QWORD PTR [rsp+0x30]
   140006623:	mov    QWORD PTR [rax+0x20],0x0
   14000662b:	mov    rax,QWORD PTR [rsp+0x30]
   140006630:	mov    QWORD PTR [rax+0x28],0x0
   140006638:	add    rsp,0x28
   14000663c:	ret    
   14000663d:	int3   
   14000663e:	int3   
   14000663f:	int3   
   140006640:	mov    QWORD PTR [rsp+0x8],rcx
   140006645:	sub    rsp,0x48
   140006649:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140006652:	lea    rax,[rsp+0x20]
   140006657:	mov    QWORD PTR [rsp+0x28],rax
   14000665c:	mov    rcx,QWORD PTR [rsp+0x28]
   140006661:	call   0x140005660
   140006666:	mov    rdx,rax
   140006669:	mov    rcx,QWORD PTR [rsp+0x50]
   14000666e:	call   0x1400126b0
   140006673:	nop
   140006674:	xor    edx,edx
   140006676:	mov    rcx,QWORD PTR [rsp+0x50]
   14000667b:	call   0x140008bb0
   140006680:	nop
   140006681:	mov    rax,QWORD PTR [rsp+0x50]
   140006686:	add    rsp,0x48
   14000668a:	ret    
   14000668b:	int3   
   14000668c:	int3   
   14000668d:	int3   
   14000668e:	int3   
   14000668f:	int3   
   140006690:	mov    QWORD PTR [rsp+0x10],rdx
   140006695:	mov    QWORD PTR [rsp+0x8],rcx
   14000669a:	sub    rsp,0x28
   14000669e:	mov    r8,QWORD PTR [rsp+0x30]
   1400066a3:	mov    rdx,QWORD PTR [rsp+0x30]
   1400066a8:	mov    rdx,QWORD PTR [rdx+0x20]
   1400066ac:	mov    rcx,QWORD PTR [rsp+0x38]
   1400066b1:	call   0x140008d60
   1400066b6:	mov    rax,QWORD PTR [rsp+0x38]
   1400066bb:	add    rsp,0x28
   1400066bf:	ret    
   1400066c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400066c5:	sub    rsp,0x38
   1400066c9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400066ce:	call   0x140008aa0
   1400066d3:	test   rax,rax
   1400066d6:	jne    0x1400066e2
   1400066d8:	mov    DWORD PTR [rsp+0x20],0x1
   1400066e0:	jmp    0x1400066ea
   1400066e2:	mov    DWORD PTR [rsp+0x20],0x0
   1400066ea:	mov    al,BYTE PTR [rsp+0x20]
   1400066ee:	add    rsp,0x38
   1400066f2:	ret    
   1400066f3:	int3   
   1400066f4:	int3   
   1400066f5:	int3   
   1400066f6:	int3   
   1400066f7:	int3   
   1400066f8:	int3   
   1400066f9:	int3   
   1400066fa:	int3   
   1400066fb:	int3   
   1400066fc:	int3   
   1400066fd:	int3   
   1400066fe:	int3   
   1400066ff:	int3   
   140006700:	mov    QWORD PTR [rsp+0x10],rdx
   140006705:	mov    QWORD PTR [rsp+0x8],rcx
   14000670a:	push   rsi
   14000670b:	push   rdi
   14000670c:	sub    rsp,0x78
   140006710:	mov    rcx,QWORD PTR [rsp+0x90]
   140006718:	call   0x140008aa0
   14000671d:	mov    rdi,rax
   140006720:	mov    rcx,QWORD PTR [rsp+0x90]
   140006728:	call   0x140008a50
   14000672d:	cmp    rdi,rax
   140006730:	jae    0x14000676a
   140006732:	mov    r9,QWORD PTR [rsp+0x98]
   14000673a:	mov    r8d,0x1
   140006740:	mov    rdx,QWORD PTR [rsp+0x90]
   140006748:	mov    rdx,QWORD PTR [rdx+0x20]
   14000674c:	mov    rcx,QWORD PTR [rsp+0x90]
   140006754:	call   0x140008c90
   140006759:	mov    rdx,rax
   14000675c:	mov    rax,QWORD PTR [rsp+0x90]
   140006764:	mov    QWORD PTR [rax+0x20],rdx
   140006768:	jmp    0x1400067cc
   14000676a:	lea    rdx,[rsp+0x30]
   14000676f:	mov    rcx,QWORD PTR [rsp+0x90]
   140006777:	call   0x140011cf0
   14000677c:	lea    rdi,[rsp+0x60]
   140006781:	mov    rsi,rax
   140006784:	mov    ecx,0x10
   140006789:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000678b:	lea    rdi,[rsp+0x20]
   140006790:	lea    rsi,[rsp+0x60]
   140006795:	mov    ecx,0x10
   14000679a:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000679c:	lea    rdi,[rsp+0x50]
   1400067a1:	lea    rsi,[rsp+0x20]
   1400067a6:	mov    ecx,0x10
   1400067ab:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400067ad:	mov    r9,QWORD PTR [rsp+0x98]
   1400067b5:	lea    r8,[rsp+0x50]
   1400067ba:	lea    rdx,[rsp+0x40]
   1400067bf:	mov    rcx,QWORD PTR [rsp+0x90]
   1400067c7:	call   0x140008ad0
   1400067cc:	add    rsp,0x78
   1400067d0:	pop    rdi
   1400067d1:	pop    rsi
   1400067d2:	ret    
   1400067d3:	int3   
   1400067d4:	int3   
   1400067d5:	int3   
   1400067d6:	int3   
   1400067d7:	int3   
   1400067d8:	int3   
   1400067d9:	int3   
   1400067da:	int3   
   1400067db:	int3   
   1400067dc:	int3   
   1400067dd:	int3   
   1400067de:	int3   
   1400067df:	int3   
   1400067e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400067e5:	sub    rsp,0x28
   1400067e9:	mov    rax,QWORD PTR [rsp+0x30]
   1400067ee:	cmp    QWORD PTR [rax+0x18],0x0
   1400067f3:	je     0x14000684a
   1400067f5:	mov    r8,QWORD PTR [rsp+0x30]
   1400067fa:	mov    r8,QWORD PTR [r8+0x20]
   1400067fe:	mov    rdx,QWORD PTR [rsp+0x30]
   140006803:	mov    rdx,QWORD PTR [rdx+0x18]
   140006807:	mov    rcx,QWORD PTR [rsp+0x30]
   14000680c:	call   0x140008c60
   140006811:	mov    rax,QWORD PTR [rsp+0x30]
   140006816:	mov    rcx,QWORD PTR [rsp+0x30]
   14000681b:	mov    rcx,QWORD PTR [rcx+0x18]
   14000681f:	mov    rax,QWORD PTR [rax+0x28]
   140006823:	sub    rax,rcx
   140006826:	cqo    
   140006828:	mov    ecx,0x50
   14000682d:	idiv   rcx
   140006830:	mov    rcx,QWORD PTR [rsp+0x30]
   140006835:	add    rcx,0x10
   140006839:	mov    r8,rax
   14000683c:	mov    rdx,QWORD PTR [rsp+0x30]
   140006841:	mov    rdx,QWORD PTR [rdx+0x18]
   140006845:	call   0x1400089f0
   14000684a:	mov    rax,QWORD PTR [rsp+0x30]
   14000684f:	mov    QWORD PTR [rax+0x18],0x0
   140006857:	mov    rax,QWORD PTR [rsp+0x30]
   14000685c:	mov    QWORD PTR [rax+0x20],0x0
   140006864:	mov    rax,QWORD PTR [rsp+0x30]
   140006869:	mov    QWORD PTR [rax+0x28],0x0
   140006871:	add    rsp,0x28
   140006875:	ret    
   140006876:	int3   
   140006877:	int3   
   140006878:	int3   
   140006879:	int3   
   14000687a:	int3   
   14000687b:	int3   
   14000687c:	int3   
   14000687d:	int3   
   14000687e:	int3   
   14000687f:	int3   
   140006880:	mov    QWORD PTR [rsp+0x10],rdx
   140006885:	mov    QWORD PTR [rsp+0x8],rcx
   14000688a:	sub    rsp,0x38
   14000688e:	mov    rcx,QWORD PTR [rsp+0x40]
   140006893:	call   0x1400013d0
   140006898:	movzx  eax,al
   14000689b:	test   eax,eax
   14000689d:	je     0x1400068b5
   14000689f:	mov    rdx,QWORD PTR [rsp+0x48]
   1400068a4:	mov    rcx,QWORD PTR [rsp+0x40]
   1400068a9:	call   0x140001390
   1400068ae:	movzx  eax,al
   1400068b1:	test   eax,eax
   1400068b3:	jne    0x1400068ba
   1400068b5:	call   0x14001cd78
   1400068ba:	xor    eax,eax
   1400068bc:	test   eax,eax
   1400068be:	jne    0x1400068ba
   1400068c0:	mov    rcx,QWORD PTR [rsp+0x40]
   1400068c5:	mov    rax,QWORD PTR [rsp+0x48]
   1400068ca:	mov    rax,QWORD PTR [rax+0x8]
   1400068ce:	cmp    QWORD PTR [rcx+0x8],rax
   1400068d2:	jne    0x1400068de
   1400068d4:	mov    DWORD PTR [rsp+0x20],0x1
   1400068dc:	jmp    0x1400068e6
   1400068de:	mov    DWORD PTR [rsp+0x20],0x0
   1400068e6:	mov    al,BYTE PTR [rsp+0x20]
   1400068ea:	add    rsp,0x38
   1400068ee:	ret    
   1400068ef:	int3   
   1400068f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400068f5:	mov    QWORD PTR [rsp+0x8],rcx
   1400068fa:	sub    rsp,0x38
   1400068fe:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006907:	mov    rdx,QWORD PTR [rsp+0x48]
   14000690c:	mov    rcx,QWORD PTR [rsp+0x40]
   140006911:	call   0x1400058e0
   140006916:	nop
   140006917:	mov    rax,QWORD PTR [rsp+0x48]
   14000691c:	mov    rax,QWORD PTR [rax]
   14000691f:	movsxd rax,DWORD PTR [rax+0x4]
   140006923:	mov    rcx,QWORD PTR [rsp+0x48]
   140006928:	add    rcx,rax
   14000692b:	call   0x140002bc0
   140006930:	movzx  eax,al
   140006933:	test   eax,eax
   140006935:	je     0x140006976
   140006937:	mov    rax,QWORD PTR [rsp+0x48]
   14000693c:	mov    rax,QWORD PTR [rax]
   14000693f:	movsxd rax,DWORD PTR [rax+0x4]
   140006943:	mov    rcx,QWORD PTR [rsp+0x48]
   140006948:	add    rcx,rax
   14000694b:	call   0x140007db0
   140006950:	test   rax,rax
   140006953:	je     0x140006976
   140006955:	mov    rax,QWORD PTR [rsp+0x48]
   14000695a:	mov    rax,QWORD PTR [rax]
   14000695d:	movsxd rax,DWORD PTR [rax+0x4]
   140006961:	mov    rcx,QWORD PTR [rsp+0x48]
   140006966:	add    rcx,rax
   140006969:	call   0x140007db0
   14000696e:	mov    rcx,rax
   140006971:	call   0x140003340
   140006976:	mov    rax,QWORD PTR [rsp+0x48]
   14000697b:	mov    rax,QWORD PTR [rax]
   14000697e:	movsxd rax,DWORD PTR [rax+0x4]
   140006982:	mov    rcx,QWORD PTR [rsp+0x48]
   140006987:	add    rcx,rax
   14000698a:	call   0x140002bc0
   14000698f:	movzx  r11d,al
   140006993:	mov    rax,QWORD PTR [rsp+0x40]
   140006998:	mov    BYTE PTR [rax+0x8],r11b
   14000699c:	mov    rax,QWORD PTR [rsp+0x40]
   1400069a1:	add    rsp,0x38
   1400069a5:	ret    
   1400069a6:	int3   
   1400069a7:	int3   
   1400069a8:	int3   
   1400069a9:	int3   
   1400069aa:	int3   
   1400069ab:	int3   
   1400069ac:	int3   
   1400069ad:	int3   
   1400069ae:	int3   
   1400069af:	int3   
   1400069b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400069b5:	sub    rsp,0x38
   1400069b9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400069c2:	call   0x14001a440
   1400069c7:	movzx  eax,al
   1400069ca:	test   eax,eax
   1400069cc:	jne    0x1400069dc
   1400069ce:	mov    rcx,QWORD PTR [rsp+0x40]
   1400069d3:	mov    rcx,QWORD PTR [rcx]
   1400069d6:	call   0x140007d60
   1400069db:	nop
   1400069dc:	mov    rcx,QWORD PTR [rsp+0x40]
   1400069e1:	call   0x140008ce0
   1400069e6:	add    rsp,0x38
   1400069ea:	ret    
   1400069eb:	int3   
   1400069ec:	int3   
   1400069ed:	int3   
   1400069ee:	int3   
   1400069ef:	int3   
   1400069f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400069f5:	mov    rax,QWORD PTR [rsp+0x8]
   1400069fa:	mov    al,BYTE PTR [rax+0x8]
   1400069fd:	ret    
   1400069fe:	int3   
   1400069ff:	int3   
   140006a00:	mov    QWORD PTR [rsp+0x10],rdx
   140006a05:	mov    QWORD PTR [rsp+0x8],rcx
   140006a0a:	mov    rcx,QWORD PTR [rsp+0x8]
   140006a0f:	mov    rax,QWORD PTR [rsp+0x10]
   140006a14:	mov    QWORD PTR [rcx],rax
   140006a17:	mov    rax,QWORD PTR [rsp+0x8]
   140006a1c:	mov    QWORD PTR [rax+0x8],0x0
   140006a24:	mov    rcx,QWORD PTR [rsp+0x8]
   140006a29:	mov    eax,DWORD PTR [rip+0x388dd]        # 0x14003f30c
   140006a2f:	mov    DWORD PTR [rcx+0x10],eax
   140006a32:	mov    rax,QWORD PTR [rsp+0x8]
   140006a37:	ret    
   140006a38:	int3   
   140006a39:	int3   
   140006a3a:	int3   
   140006a3b:	int3   
   140006a3c:	int3   
   140006a3d:	int3   
   140006a3e:	int3   
   140006a3f:	int3   
   140006a40:	mov    QWORD PTR [rsp+0x8],rcx
   140006a45:	sub    rsp,0x28
   140006a49:	mov    rcx,QWORD PTR [rsp+0x30]
   140006a4e:	call   0x1400013d0
   140006a53:	movzx  eax,al
   140006a56:	test   eax,eax
   140006a58:	jne    0x140006a5f
   140006a5a:	call   0x14001cd78
   140006a5f:	xor    eax,eax
   140006a61:	test   eax,eax
   140006a63:	jne    0x140006a5f
   140006a65:	mov    rcx,QWORD PTR [rsp+0x30]
   140006a6a:	call   0x140001350
   140006a6f:	mov    rcx,QWORD PTR [rsp+0x30]
   140006a74:	mov    rax,QWORD PTR [rax+0x20]
   140006a78:	cmp    QWORD PTR [rcx+0x8],rax
   140006a7c:	jb     0x140006a83
   140006a7e:	call   0x14001cd78
   140006a83:	xor    eax,eax
   140006a85:	test   eax,eax
   140006a87:	jne    0x140006a83
   140006a89:	mov    rcx,QWORD PTR [rsp+0x30]
   140006a8e:	mov    rcx,QWORD PTR [rcx+0x8]
   140006a92:	add    rcx,0x50
   140006a96:	mov    rax,QWORD PTR [rsp+0x30]
   140006a9b:	mov    QWORD PTR [rax+0x8],rcx
   140006a9f:	mov    rax,QWORD PTR [rsp+0x30]
   140006aa4:	add    rsp,0x28
   140006aa8:	ret    
   140006aa9:	int3   
   140006aaa:	int3   
   140006aab:	int3   
   140006aac:	int3   
   140006aad:	int3   
   140006aae:	int3   
   140006aaf:	int3   
   140006ab0:	mov    QWORD PTR [rsp+0x18],r8
   140006ab5:	mov    QWORD PTR [rsp+0x10],rdx
   140006aba:	mov    QWORD PTR [rsp+0x8],rcx
   140006abf:	sub    rsp,0x38
   140006ac3:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006acc:	mov    rdx,QWORD PTR [rsp+0x48]
   140006ad1:	mov    rcx,QWORD PTR [rsp+0x40]
   140006ad6:	call   0x140005d30
   140006adb:	nop
   140006adc:	mov    rcx,QWORD PTR [rsp+0x40]
   140006ae1:	add    rcx,0x28
   140006ae5:	mov    rdx,QWORD PTR [rsp+0x50]
   140006aea:	call   0x140005d30
   140006aef:	nop
   140006af0:	mov    rax,QWORD PTR [rsp+0x40]
   140006af5:	add    rsp,0x38
   140006af9:	ret    
   140006afa:	int3   
   140006afb:	int3   
   140006afc:	int3   
   140006afd:	int3   
   140006afe:	int3   
   140006aff:	int3   
   140006b00:	mov    DWORD PTR [rsp+0x18],r8d
   140006b05:	mov    DWORD PTR [rsp+0x10],edx
   140006b09:	mov    QWORD PTR [rsp+0x8],rcx
   140006b0e:	sub    rsp,0x38
   140006b12:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140006b1b:	mov    DWORD PTR [rsp+0x20],0x0
   140006b23:	cmp    DWORD PTR [rsp+0x50],0x0
   140006b28:	je     0x140006b66
   140006b2a:	mov    rcx,QWORD PTR [rsp+0x40]
   140006b2f:	lea    rax,[rip+0x388b2]        # 0x14003f3e8
   140006b36:	mov    QWORD PTR [rcx],rax
   140006b39:	mov    rcx,QWORD PTR [rsp+0x40]
   140006b3e:	lea    rax,[rip+0x388ab]        # 0x14003f3f0
   140006b45:	mov    QWORD PTR [rcx+0x10],rax
   140006b49:	mov    rcx,QWORD PTR [rsp+0x40]
   140006b4e:	add    rcx,0x98
   140006b55:	call   0x140007dc0
   140006b5a:	nop
   140006b5b:	mov    eax,DWORD PTR [rsp+0x20]
   140006b5f:	or     eax,0x1
   140006b62:	mov    DWORD PTR [rsp+0x20],eax
   140006b66:	mov    rdx,QWORD PTR [rsp+0x40]
   140006b6b:	add    rdx,0x18
   140006b6f:	xor    r8d,r8d
   140006b72:	mov    rcx,QWORD PTR [rsp+0x40]
   140006b77:	call   0x140008de0
   140006b7c:	nop
   140006b7d:	mov    rax,QWORD PTR [rsp+0x40]
   140006b82:	mov    rax,QWORD PTR [rax]
   140006b85:	movsxd rdx,DWORD PTR [rax+0x4]
   140006b89:	mov    rcx,QWORD PTR [rsp+0x40]
   140006b8e:	lea    rax,[rip+0x3884b]        # 0x14003f3e0
   140006b95:	mov    QWORD PTR [rcx+rdx*1],rax
   140006b99:	mov    rcx,QWORD PTR [rsp+0x40]
   140006b9e:	add    rcx,0x18
   140006ba2:	mov    edx,DWORD PTR [rsp+0x48]
   140006ba6:	call   0x140008ea0
   140006bab:	nop
   140006bac:	mov    rax,QWORD PTR [rsp+0x40]
   140006bb1:	add    rsp,0x38
   140006bb5:	ret    
   140006bb6:	int3   
   140006bb7:	int3   
   140006bb8:	int3   
   140006bb9:	int3   
   140006bba:	int3   
   140006bbb:	int3   
   140006bbc:	int3   
   140006bbd:	int3   
   140006bbe:	int3   
   140006bbf:	int3   
   140006bc0:	mov    QWORD PTR [rsp+0x8],rcx
   140006bc5:	sub    rsp,0x38
   140006bc9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006bd2:	mov    rax,QWORD PTR [rsp+0x40]
   140006bd7:	mov    rax,QWORD PTR [rax-0x98]
   140006bde:	movsxd rdx,DWORD PTR [rax+0x4]
   140006be2:	mov    rcx,QWORD PTR [rsp+0x40]
   140006be7:	lea    rax,[rip+0x387f2]        # 0x14003f3e0
   140006bee:	mov    QWORD PTR [rcx+rdx*1-0x98],rax
   140006bf6:	mov    rcx,QWORD PTR [rsp+0x40]
   140006bfb:	sub    rcx,0x80
   140006c02:	call   0x140006cb0
   140006c07:	nop
   140006c08:	mov    rcx,QWORD PTR [rsp+0x40]
   140006c0d:	sub    rcx,0x80
   140006c14:	call   0x140006c60
   140006c19:	add    rsp,0x38
   140006c1d:	ret    
   140006c1e:	int3   
   140006c1f:	int3   
   140006c20:	mov    QWORD PTR [rsp+0x10],rdx
   140006c25:	mov    QWORD PTR [rsp+0x8],rcx
   140006c2a:	sub    rsp,0x38
   140006c2e:	mov    DWORD PTR [rsp+0x20],0x0
   140006c36:	mov    rcx,QWORD PTR [rsp+0x40]
   140006c3b:	add    rcx,0x18
   140006c3f:	mov    rdx,QWORD PTR [rsp+0x48]
   140006c44:	call   0x140008f10
   140006c49:	mov    eax,DWORD PTR [rsp+0x20]
   140006c4d:	or     eax,0x1
   140006c50:	mov    DWORD PTR [rsp+0x20],eax
   140006c54:	mov    rax,QWORD PTR [rsp+0x48]
   140006c59:	add    rsp,0x38
   140006c5d:	ret    
   140006c5e:	int3   
   140006c5f:	int3   
   140006c60:	mov    QWORD PTR [rsp+0x8],rcx
   140006c65:	sub    rsp,0x28
   140006c69:	mov    rax,QWORD PTR [rsp+0x30]
   140006c6e:	mov    rax,QWORD PTR [rax-0x18]
   140006c72:	movsxd rdx,DWORD PTR [rax+0x4]
   140006c76:	mov    rcx,QWORD PTR [rsp+0x30]
   140006c7b:	lea    rax,[rip+0x386ce]        # 0x14003f350
   140006c82:	mov    QWORD PTR [rcx+rdx*1-0x18],rax
   140006c87:	mov    rcx,QWORD PTR [rsp+0x30]
   140006c8c:	call   0x140003310
   140006c91:	mov    rcx,QWORD PTR [rsp+0x30]
   140006c96:	sub    rcx,0x8
   140006c9a:	call   0x140003450
   140006c9f:	add    rsp,0x28
   140006ca3:	ret    
   140006ca4:	int3   
   140006ca5:	int3   
   140006ca6:	int3   
   140006ca7:	int3   
   140006ca8:	int3   
   140006ca9:	int3   
   140006caa:	int3   
   140006cab:	int3   
   140006cac:	int3   
   140006cad:	int3   
   140006cae:	int3   
   140006caf:	int3   
   140006cb0:	mov    QWORD PTR [rsp+0x8],rcx
   140006cb5:	sub    rsp,0x28
   140006cb9:	mov    rcx,QWORD PTR [rsp+0x30]
   140006cbe:	lea    rax,[rip+0x386a3]        # 0x14003f368
   140006cc5:	mov    QWORD PTR [rcx],rax
   140006cc8:	mov    rcx,QWORD PTR [rsp+0x30]
   140006ccd:	call   0x140009140
   140006cd2:	mov    rcx,QWORD PTR [rsp+0x30]
   140006cd7:	call   0x1400034e0
   140006cdc:	add    rsp,0x28
   140006ce0:	ret    
   140006ce1:	int3   
   140006ce2:	int3   
   140006ce3:	int3   
   140006ce4:	int3   
   140006ce5:	int3   
   140006ce6:	int3   
   140006ce7:	int3   
   140006ce8:	int3   
   140006ce9:	int3   
   140006cea:	int3   
   140006ceb:	int3   
   140006cec:	int3   
   140006ced:	int3   
   140006cee:	int3   
   140006cef:	int3   
   140006cf0:	mov    WORD PTR [rsp+0x10],dx
   140006cf5:	mov    QWORD PTR [rsp+0x8],rcx
   140006cfa:	push   rbx
   140006cfb:	push   rdi
   140006cfc:	sub    rsp,0x68
   140006d00:	mov    rax,QWORD PTR [rsp+0x80]
   140006d08:	mov    eax,DWORD PTR [rax+0x78]
   140006d0b:	and    eax,0x8
   140006d0e:	test   eax,eax
   140006d10:	je     0x140006d7e
   140006d12:	mov    rcx,QWORD PTR [rsp+0x80]
   140006d1a:	call   0x140005a80
   140006d1f:	test   rax,rax
   140006d22:	je     0x140006d7e
   140006d24:	mov    rcx,QWORD PTR [rsp+0x80]
   140006d2c:	call   0x140005a80
   140006d31:	mov    r11,rax
   140006d34:	mov    rax,QWORD PTR [rsp+0x80]
   140006d3c:	cmp    r11,QWORD PTR [rax+0x70]
   140006d40:	jae    0x140006d7e
   140006d42:	mov    rcx,QWORD PTR [rsp+0x80]
   140006d4a:	call   0x140007ee0
   140006d4f:	mov    rbx,rax
   140006d52:	mov    rcx,QWORD PTR [rsp+0x80]
   140006d5a:	call   0x140007e30
   140006d5f:	mov    r9,rbx
   140006d62:	mov    r8,QWORD PTR [rsp+0x80]
   140006d6a:	mov    r8,QWORD PTR [r8+0x70]
   140006d6e:	mov    rdx,rax
   140006d71:	mov    rcx,QWORD PTR [rsp+0x80]
   140006d79:	call   0x140007f60
   140006d7e:	call   0x1400011a0
   140006d83:	mov    WORD PTR [rsp+0x48],ax
   140006d88:	lea    rdx,[rsp+0x88]
   140006d90:	lea    rcx,[rsp+0x48]
   140006d95:	call   0x140001160
   140006d9a:	movzx  eax,al
   140006d9d:	test   eax,eax
   140006d9f:	je     0x140006db8
   140006da1:	lea    rcx,[rsp+0x88]
   140006da9:	call   0x1400011b0
   140006dae:	jmp    0x140007182
   140006db3:	jmp    0x140007182
   140006db8:	mov    rcx,QWORD PTR [rsp+0x80]
   140006dc0:	call   0x140005a80
   140006dc5:	test   rax,rax
   140006dc8:	je     0x140006e1e
   140006dca:	mov    rcx,QWORD PTR [rsp+0x80]
   140006dd2:	call   0x140005a80
   140006dd7:	mov    rbx,rax
   140006dda:	mov    rcx,QWORD PTR [rsp+0x80]
   140006de2:	call   0x140007ee0
   140006de7:	cmp    rbx,rax
   140006dea:	jae    0x140006e1e
   140006dec:	lea    rcx,[rsp+0x88]
   140006df4:	call   0x140001150
   140006df9:	movzx  ebx,ax
   140006dfc:	mov    rcx,QWORD PTR [rsp+0x80]
   140006e04:	call   0x140007fc0
   140006e09:	mov    WORD PTR [rax],bx
   140006e0c:	mov    ax,WORD PTR [rsp+0x88]
   140006e14:	jmp    0x140007182
   140006e19:	jmp    0x140007182
   140006e1e:	mov    rax,QWORD PTR [rsp+0x80]
   140006e26:	mov    eax,DWORD PTR [rax+0x78]
   140006e29:	and    eax,0x2
   140006e2c:	test   eax,eax
   140006e2e:	je     0x140006e3f
   140006e30:	call   0x1400011a0
   140006e35:	jmp    0x140007182
   140006e3a:	jmp    0x140007182
   140006e3f:	mov    rcx,QWORD PTR [rsp+0x80]
   140006e47:	call   0x140005a80
   140006e4c:	test   rax,rax
   140006e4f:	jne    0x140006e5c
   140006e51:	mov    QWORD PTR [rsp+0x50],0x0
   140006e5a:	jmp    0x140006e8a
   140006e5c:	mov    rcx,QWORD PTR [rsp+0x80]
   140006e64:	call   0x140007ee0
   140006e69:	mov    rbx,rax
   140006e6c:	mov    rcx,QWORD PTR [rsp+0x80]
   140006e74:	call   0x140007e10
   140006e79:	mov    r11,rax
   140006e7c:	mov    rax,rbx
   140006e7f:	sub    rax,r11
   140006e82:	sar    rax,1
   140006e85:	mov    QWORD PTR [rsp+0x50],rax
   140006e8a:	mov    rax,QWORD PTR [rsp+0x50]
   140006e8f:	mov    QWORD PTR [rsp+0x30],rax
   140006e94:	mov    rax,QWORD PTR [rsp+0x30]
   140006e99:	mov    QWORD PTR [rsp+0x40],rax
   140006e9e:	xor    edx,edx
   140006ea0:	mov    rax,QWORD PTR [rsp+0x40]
   140006ea5:	mov    ecx,0x2
   140006eaa:	div    rcx
   140006ead:	cmp    rax,0x20
   140006eb1:	jae    0x140006ebe
   140006eb3:	mov    QWORD PTR [rsp+0x58],0x20
   140006ebc:	jmp    0x140006ed2
   140006ebe:	xor    edx,edx
   140006ec0:	mov    rax,QWORD PTR [rsp+0x40]
   140006ec5:	mov    ecx,0x2
   140006eca:	div    rcx
   140006ecd:	mov    QWORD PTR [rsp+0x58],rax
   140006ed2:	mov    rax,QWORD PTR [rsp+0x58]
   140006ed7:	mov    QWORD PTR [rsp+0x28],rax
   140006edc:	cmp    QWORD PTR [rsp+0x28],0x0
   140006ee2:	jbe    0x140006f0b
   140006ee4:	mov    eax,0x7fffffff
   140006ee9:	sub    rax,QWORD PTR [rsp+0x28]
   140006eee:	cmp    rax,QWORD PTR [rsp+0x40]
   140006ef3:	jae    0x140006f0b
   140006ef5:	xor    edx,edx
   140006ef7:	mov    rax,QWORD PTR [rsp+0x28]
   140006efc:	mov    ecx,0x2
   140006f01:	div    rcx
   140006f04:	mov    QWORD PTR [rsp+0x28],rax
   140006f09:	jmp    0x140006edc
   140006f0b:	cmp    QWORD PTR [rsp+0x28],0x0
   140006f11:	jne    0x140006f1d
   140006f13:	call   0x1400011a0
   140006f18:	jmp    0x140007182
   140006f1d:	mov    rcx,QWORD PTR [rsp+0x28]
   140006f22:	mov    rax,QWORD PTR [rsp+0x40]
   140006f27:	add    rax,rcx
   140006f2a:	mov    QWORD PTR [rsp+0x40],rax
   140006f2f:	mov    rcx,QWORD PTR [rsp+0x80]
   140006f37:	add    rcx,0x7c
   140006f3b:	mov    rdx,QWORD PTR [rsp+0x40]
   140006f40:	call   0x140008770
   140006f45:	mov    QWORD PTR [rsp+0x20],rax
   140006f4a:	mov    rcx,QWORD PTR [rsp+0x80]
   140006f52:	call   0x140007e10
   140006f57:	mov    QWORD PTR [rsp+0x38],rax
   140006f5c:	cmp    QWORD PTR [rsp+0x30],0x0
   140006f62:	jbe    0x140006f7d
   140006f64:	mov    r9,QWORD PTR [rsp+0x30]
   140006f69:	mov    r8,QWORD PTR [rsp+0x38]
   140006f6e:	mov    rdx,QWORD PTR [rsp+0x40]
   140006f73:	mov    rcx,QWORD PTR [rsp+0x20]
   140006f78:	call   0x14000b4b0
   140006f7d:	cmp    QWORD PTR [rsp+0x30],0x0
   140006f83:	jne    0x14000700d
   140006f89:	mov    rcx,QWORD PTR [rsp+0x80]
   140006f91:	mov    rax,QWORD PTR [rsp+0x20]
   140006f96:	mov    QWORD PTR [rcx+0x70],rax
   140006f9a:	mov    rcx,QWORD PTR [rsp+0x20]
   140006f9f:	mov    rax,QWORD PTR [rsp+0x40]
   140006fa4:	lea    r8,[rcx+rax*2]
   140006fa8:	mov    rdx,QWORD PTR [rsp+0x20]
   140006fad:	mov    rcx,QWORD PTR [rsp+0x80]
   140006fb5:	call   0x140007f10
   140006fba:	mov    rax,QWORD PTR [rsp+0x80]
   140006fc2:	mov    eax,DWORD PTR [rax+0x78]
   140006fc5:	and    eax,0x4
   140006fc8:	test   eax,eax
   140006fca:	je     0x140006fe8
   140006fcc:	mov    r9,QWORD PTR [rsp+0x20]
   140006fd1:	xor    r8d,r8d
   140006fd4:	mov    rdx,QWORD PTR [rsp+0x20]
   140006fd9:	mov    rcx,QWORD PTR [rsp+0x80]
   140006fe1:	call   0x140007e80
   140006fe6:	jmp    0x140007008
   140006fe8:	mov    r9,QWORD PTR [rsp+0x20]
   140006fed:	add    r9,0x2
   140006ff1:	mov    r8,QWORD PTR [rsp+0x20]
   140006ff6:	mov    rdx,QWORD PTR [rsp+0x20]
   140006ffb:	mov    rcx,QWORD PTR [rsp+0x80]
   140007003:	call   0x140007e80
   140007008:	jmp    0x140007114
   14000700d:	mov    rcx,QWORD PTR [rsp+0x80]
   140007015:	mov    rax,QWORD PTR [rsp+0x38]
   14000701a:	mov    rcx,QWORD PTR [rcx+0x70]
   14000701e:	sub    rcx,rax
   140007021:	sar    rcx,1
   140007024:	mov    rax,QWORD PTR [rsp+0x20]
   140007029:	lea    rcx,[rax+rcx*2]
   14000702d:	mov    rax,QWORD PTR [rsp+0x80]
   140007035:	mov    QWORD PTR [rax+0x70],rcx
   140007039:	mov    rcx,QWORD PTR [rsp+0x20]
   14000703e:	mov    rax,QWORD PTR [rsp+0x40]
   140007043:	lea    rdi,[rcx+rax*2]
   140007047:	mov    rcx,QWORD PTR [rsp+0x80]
   14000704f:	call   0x140005a80
   140007054:	mov    rcx,rax
   140007057:	sub    rcx,QWORD PTR [rsp+0x38]
   14000705c:	sar    rcx,1
   14000705f:	mov    rax,QWORD PTR [rsp+0x20]
   140007064:	lea    rbx,[rax+rcx*2]
   140007068:	mov    rcx,QWORD PTR [rsp+0x80]
   140007070:	call   0x140007e30
   140007075:	mov    rcx,rax
   140007078:	sub    rcx,QWORD PTR [rsp+0x38]
   14000707d:	sar    rcx,1
   140007080:	mov    rax,QWORD PTR [rsp+0x20]
   140007085:	lea    rdx,[rax+rcx*2]
   140007089:	mov    r9,rdi
   14000708c:	mov    r8,rbx
   14000708f:	mov    rcx,QWORD PTR [rsp+0x80]
   140007097:	call   0x140007f60
   14000709c:	mov    rax,QWORD PTR [rsp+0x80]
   1400070a4:	mov    eax,DWORD PTR [rax+0x78]
   1400070a7:	and    eax,0x4
   1400070aa:	test   eax,eax
   1400070ac:	je     0x1400070ca
   1400070ae:	mov    r9,QWORD PTR [rsp+0x20]
   1400070b3:	xor    r8d,r8d
   1400070b6:	mov    rdx,QWORD PTR [rsp+0x20]
   1400070bb:	mov    rcx,QWORD PTR [rsp+0x80]
   1400070c3:	call   0x140007e80
   1400070c8:	jmp    0x140007114
   1400070ca:	mov    rcx,QWORD PTR [rsp+0x80]
   1400070d2:	call   0x140005a80
   1400070d7:	mov    rbx,rax
   1400070da:	add    rbx,0x2
   1400070de:	mov    rcx,QWORD PTR [rsp+0x80]
   1400070e6:	call   0x140005a60
   1400070eb:	mov    rcx,rax
   1400070ee:	sub    rcx,QWORD PTR [rsp+0x38]
   1400070f3:	sar    rcx,1
   1400070f6:	mov    rax,QWORD PTR [rsp+0x20]
   1400070fb:	lea    r8,[rax+rcx*2]
   1400070ff:	mov    r9,rbx
   140007102:	mov    rdx,QWORD PTR [rsp+0x20]
   140007107:	mov    rcx,QWORD PTR [rsp+0x80]
   14000710f:	call   0x140007e80
   140007114:	mov    rax,QWORD PTR [rsp+0x80]
   14000711c:	mov    eax,DWORD PTR [rax+0x78]
   14000711f:	and    eax,0x1
   140007122:	test   eax,eax
   140007124:	je     0x140007141
   140007126:	mov    rcx,QWORD PTR [rsp+0x80]
   14000712e:	add    rcx,0x7c
   140007132:	mov    r8,QWORD PTR [rsp+0x30]
   140007137:	mov    rdx,QWORD PTR [rsp+0x38]
   14000713c:	call   0x1400089f0
   140007141:	mov    rax,QWORD PTR [rsp+0x80]
   140007149:	mov    ecx,DWORD PTR [rax+0x78]
   14000714c:	or     ecx,0x1
   14000714f:	mov    rax,QWORD PTR [rsp+0x80]
   140007157:	mov    DWORD PTR [rax+0x78],ecx
   14000715a:	lea    rcx,[rsp+0x88]
   140007162:	call   0x140001150
   140007167:	movzx  ebx,ax
   14000716a:	mov    rcx,QWORD PTR [rsp+0x80]
   140007172:	call   0x140007fc0
   140007177:	mov    WORD PTR [rax],bx
   14000717a:	mov    ax,WORD PTR [rsp+0x88]
   140007182:	add    rsp,0x68
   140007186:	pop    rdi
   140007187:	pop    rbx
   140007188:	ret    
   140007189:	int3   
   14000718a:	int3   
   14000718b:	int3   
   14000718c:	int3   
   14000718d:	int3   
   14000718e:	int3   
   14000718f:	int3   
   140007190:	mov    WORD PTR [rsp+0x10],dx
   140007195:	mov    QWORD PTR [rsp+0x8],rcx
   14000719a:	push   rbx
   14000719b:	sub    rsp,0x30
   14000719f:	mov    rcx,QWORD PTR [rsp+0x40]
   1400071a4:	call   0x140005a60
   1400071a9:	test   rax,rax
   1400071ac:	je     0x14000722a
   1400071ae:	mov    rcx,QWORD PTR [rsp+0x40]
   1400071b3:	call   0x140005a60
   1400071b8:	mov    rbx,rax
   1400071bb:	mov    rcx,QWORD PTR [rsp+0x40]
   1400071c0:	call   0x140007e10
   1400071c5:	cmp    rbx,rax
   1400071c8:	jbe    0x14000722a
   1400071ca:	call   0x1400011a0
   1400071cf:	mov    WORD PTR [rsp+0x20],ax
   1400071d4:	lea    rdx,[rsp+0x48]
   1400071d9:	lea    rcx,[rsp+0x20]
   1400071de:	call   0x140001160
   1400071e3:	movzx  eax,al
   1400071e6:	test   eax,eax
   1400071e8:	jne    0x140007233
   1400071ea:	lea    rcx,[rsp+0x48]
   1400071ef:	call   0x140001150
   1400071f4:	mov    WORD PTR [rsp+0x22],ax
   1400071f9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400071fe:	call   0x140005a60
   140007203:	mov    rdx,rax
   140007206:	sub    rdx,0x2
   14000720a:	lea    rcx,[rsp+0x22]
   14000720f:	call   0x140001160
   140007214:	movzx  eax,al
   140007217:	test   eax,eax
   140007219:	jne    0x140007233
   14000721b:	mov    rax,QWORD PTR [rsp+0x40]
   140007220:	mov    eax,DWORD PTR [rax+0x78]
   140007223:	and    eax,0x2
   140007226:	test   eax,eax
   140007228:	je     0x140007233
   14000722a:	call   0x1400011a0
   14000722f:	jmp    0x140007286
   140007231:	jmp    0x140007286
   140007233:	mov    edx,0xffffffff
   140007238:	mov    rcx,QWORD PTR [rsp+0x40]
   14000723d:	call   0x140005aa0
   140007242:	call   0x1400011a0
   140007247:	mov    WORD PTR [rsp+0x24],ax
   14000724c:	lea    rdx,[rsp+0x48]
   140007251:	lea    rcx,[rsp+0x24]
   140007256:	call   0x140001160
   14000725b:	movzx  eax,al
   14000725e:	test   eax,eax
   140007260:	jne    0x14000727c
   140007262:	lea    rcx,[rsp+0x48]
   140007267:	call   0x140001150
   14000726c:	movzx  ebx,ax
   14000726f:	mov    rcx,QWORD PTR [rsp+0x40]
   140007274:	call   0x140005a60
   140007279:	mov    WORD PTR [rax],bx
   14000727c:	lea    rcx,[rsp+0x48]
   140007281:	call   0x1400011b0
   140007286:	add    rsp,0x30
   14000728a:	pop    rbx
   14000728b:	ret    
   14000728c:	int3   
   14000728d:	int3   
   14000728e:	int3   
   14000728f:	int3   
   140007290:	mov    QWORD PTR [rsp+0x8],rcx
   140007295:	push   rbx
   140007296:	sub    rsp,0x20
   14000729a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000729f:	call   0x140005a60
   1400072a4:	test   rax,rax
   1400072a7:	jne    0x1400072b8
   1400072a9:	call   0x1400011a0
   1400072ae:	jmp    0x1400073bb
   1400072b3:	jmp    0x1400073bb
   1400072b8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400072bd:	call   0x140005a60
   1400072c2:	mov    rbx,rax
   1400072c5:	mov    rcx,QWORD PTR [rsp+0x30]
   1400072ca:	call   0x140007e50
   1400072cf:	cmp    rbx,rax
   1400072d2:	jae    0x1400072f0
   1400072d4:	mov    rcx,QWORD PTR [rsp+0x30]
   1400072d9:	call   0x140005a60
   1400072de:	mov    rcx,rax
   1400072e1:	call   0x140001150
   1400072e6:	jmp    0x1400073bb
   1400072eb:	jmp    0x1400073bb
   1400072f0:	mov    rax,QWORD PTR [rsp+0x30]
   1400072f5:	mov    eax,DWORD PTR [rax+0x78]
   1400072f8:	and    eax,0x4
   1400072fb:	test   eax,eax
   1400072fd:	jne    0x140007342
   1400072ff:	mov    rcx,QWORD PTR [rsp+0x30]
   140007304:	call   0x140005a80
   140007309:	test   rax,rax
   14000730c:	je     0x140007342
   14000730e:	mov    rcx,QWORD PTR [rsp+0x30]
   140007313:	call   0x140005a80
   140007318:	mov    rbx,rax
   14000731b:	mov    rcx,QWORD PTR [rsp+0x30]
   140007320:	call   0x140005a60
   140007325:	cmp    rbx,rax
   140007328:	ja     0x14000734b
   14000732a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000732f:	call   0x140005a60
   140007334:	mov    r11,rax
   140007337:	mov    rax,QWORD PTR [rsp+0x30]
   14000733c:	cmp    QWORD PTR [rax+0x70],r11
   140007340:	ja     0x14000734b
   140007342:	call   0x1400011a0
   140007347:	jmp    0x1400073bb
   140007349:	jmp    0x1400073bb
   14000734b:	mov    rcx,QWORD PTR [rsp+0x30]
   140007350:	call   0x140005a80
   140007355:	mov    r11,rax
   140007358:	mov    rax,QWORD PTR [rsp+0x30]
   14000735d:	cmp    QWORD PTR [rax+0x70],r11
   140007361:	jae    0x140007379
   140007363:	mov    rcx,QWORD PTR [rsp+0x30]
   140007368:	call   0x140005a80
   14000736d:	mov    r11,rax
   140007370:	mov    rax,QWORD PTR [rsp+0x30]
   140007375:	mov    QWORD PTR [rax+0x70],r11
   140007379:	mov    rcx,QWORD PTR [rsp+0x30]
   14000737e:	call   0x140005a60
   140007383:	mov    rbx,rax
   140007386:	mov    rcx,QWORD PTR [rsp+0x30]
   14000738b:	call   0x140007e10
   140007390:	mov    r9,QWORD PTR [rsp+0x30]
   140007395:	mov    r9,QWORD PTR [r9+0x70]
   140007399:	mov    r8,rbx
   14000739c:	mov    rdx,rax
   14000739f:	mov    rcx,QWORD PTR [rsp+0x30]
   1400073a4:	call   0x140007e80
   1400073a9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400073ae:	call   0x140005a60
   1400073b3:	mov    rcx,rax
   1400073b6:	call   0x140001150
   1400073bb:	add    rsp,0x20
   1400073bf:	pop    rbx
   1400073c0:	ret    
   1400073c1:	int3   
   1400073c2:	int3   
   1400073c3:	int3   
   1400073c4:	int3   
   1400073c5:	int3   
   1400073c6:	int3   
   1400073c7:	int3   
   1400073c8:	int3   
   1400073c9:	int3   
   1400073ca:	int3   
   1400073cb:	int3   
   1400073cc:	int3   
   1400073cd:	int3   
   1400073ce:	int3   
   1400073cf:	int3   
   1400073d0:	mov    DWORD PTR [rsp+0x20],r9d
   1400073d5:	mov    QWORD PTR [rsp+0x18],r8
   1400073da:	mov    QWORD PTR [rsp+0x10],rdx
   1400073df:	mov    QWORD PTR [rsp+0x8],rcx
   1400073e4:	push   rbx
   1400073e5:	push   rdi
   1400073e6:	sub    rsp,0x28
   1400073ea:	mov    rcx,QWORD PTR [rsp+0x40]
   1400073ef:	call   0x140005a80
   1400073f4:	test   rax,rax
   1400073f7:	je     0x140007427
   1400073f9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400073fe:	call   0x140005a80
   140007403:	mov    r11,rax
   140007406:	mov    rax,QWORD PTR [rsp+0x40]
   14000740b:	cmp    QWORD PTR [rax+0x70],r11
   14000740f:	jae    0x140007427
   140007411:	mov    rcx,QWORD PTR [rsp+0x40]
   140007416:	call   0x140005a80
   14000741b:	mov    r11,rax
   14000741e:	mov    rax,QWORD PTR [rsp+0x40]
   140007423:	mov    QWORD PTR [rax+0x70],r11
   140007427:	mov    eax,DWORD PTR [rsp+0x60]
   14000742b:	and    eax,0x1
   14000742e:	test   eax,eax
   140007430:	je     0x140007597
   140007436:	mov    rcx,QWORD PTR [rsp+0x40]
   14000743b:	call   0x140005a60
   140007440:	test   rax,rax
   140007443:	je     0x140007597
   140007449:	cmp    DWORD PTR [rsp+0x58],0x2
   14000744e:	jne    0x140007478
   140007450:	mov    rcx,QWORD PTR [rsp+0x40]
   140007455:	call   0x140007e10
   14000745a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000745f:	mov    rcx,QWORD PTR [rcx+0x70]
   140007463:	sub    rcx,rax
   140007466:	sar    rcx,1
   140007469:	mov    rax,QWORD PTR [rsp+0x50]
   14000746e:	add    rax,rcx
   140007471:	mov    QWORD PTR [rsp+0x50],rax
   140007476:	jmp    0x1400074cc
   140007478:	cmp    DWORD PTR [rsp+0x58],0x1
   14000747d:	jne    0x1400074b9
   14000747f:	mov    eax,DWORD PTR [rsp+0x60]
   140007483:	and    eax,0x2
   140007486:	test   eax,eax
   140007488:	jne    0x1400074b9
   14000748a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000748f:	call   0x140005a60
   140007494:	mov    rbx,rax
   140007497:	mov    rcx,QWORD PTR [rsp+0x40]
   14000749c:	call   0x140007e10
   1400074a1:	mov    rcx,rbx
   1400074a4:	sub    rcx,rax
   1400074a7:	sar    rcx,1
   1400074aa:	mov    rax,QWORD PTR [rsp+0x50]
   1400074af:	add    rax,rcx
   1400074b2:	mov    QWORD PTR [rsp+0x50],rax
   1400074b7:	jmp    0x1400074cc
   1400074b9:	cmp    DWORD PTR [rsp+0x58],0x0
   1400074be:	je     0x1400074cc
   1400074c0:	mov    rax,QWORD PTR [rip+0x33271]        # 0x14003a738
   1400074c7:	mov    QWORD PTR [rsp+0x50],rax
   1400074cc:	cmp    QWORD PTR [rsp+0x50],0x0
   1400074d2:	jl     0x140007586
   1400074d8:	mov    rcx,QWORD PTR [rsp+0x40]
   1400074dd:	call   0x140007e10
   1400074e2:	mov    r11,rax
   1400074e5:	mov    rax,QWORD PTR [rsp+0x40]
   1400074ea:	mov    rax,QWORD PTR [rax+0x70]
   1400074ee:	sub    rax,r11
   1400074f1:	sar    rax,1
   1400074f4:	cmp    QWORD PTR [rsp+0x50],rax
   1400074f9:	jg     0x140007586
   1400074ff:	mov    rcx,QWORD PTR [rsp+0x40]
   140007504:	call   0x140007e10
   140007509:	mov    rbx,rax
   14000750c:	mov    rcx,QWORD PTR [rsp+0x40]
   140007511:	call   0x140005a60
   140007516:	mov    r11,rax
   140007519:	mov    rax,rbx
   14000751c:	sub    rax,r11
   14000751f:	sar    rax,1
   140007522:	add    rax,QWORD PTR [rsp+0x50]
   140007527:	mov    edx,eax
   140007529:	mov    rcx,QWORD PTR [rsp+0x40]
   14000752e:	call   0x140005aa0
   140007533:	mov    eax,DWORD PTR [rsp+0x60]
   140007537:	and    eax,0x2
   14000753a:	test   eax,eax
   14000753c:	je     0x140007584
   14000753e:	mov    rcx,QWORD PTR [rsp+0x40]
   140007543:	call   0x140005a80
   140007548:	test   rax,rax
   14000754b:	je     0x140007584
   14000754d:	mov    rcx,QWORD PTR [rsp+0x40]
   140007552:	call   0x140007ee0
   140007557:	mov    rdi,rax
   14000755a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000755f:	call   0x140005a60
   140007564:	mov    rbx,rax
   140007567:	mov    rcx,QWORD PTR [rsp+0x40]
   14000756c:	call   0x140007e30
   140007571:	mov    r9,rdi
   140007574:	mov    r8,rbx
   140007577:	mov    rdx,rax
   14000757a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000757f:	call   0x140007f60
   140007584:	jmp    0x140007592
   140007586:	mov    rax,QWORD PTR [rip+0x331ab]        # 0x14003a738
   14000758d:	mov    QWORD PTR [rsp+0x50],rax
   140007592:	jmp    0x1400076ac
   140007597:	mov    eax,DWORD PTR [rsp+0x60]
   14000759b:	and    eax,0x2
   14000759e:	test   eax,eax
   1400075a0:	je     0x1400076a0
   1400075a6:	mov    rcx,QWORD PTR [rsp+0x40]
   1400075ab:	call   0x140005a80
   1400075b0:	test   rax,rax
   1400075b3:	je     0x1400076a0
   1400075b9:	cmp    DWORD PTR [rsp+0x58],0x2
   1400075be:	jne    0x1400075e8
   1400075c0:	mov    rcx,QWORD PTR [rsp+0x40]
   1400075c5:	call   0x140007e10
   1400075ca:	mov    rcx,QWORD PTR [rsp+0x40]
   1400075cf:	mov    rcx,QWORD PTR [rcx+0x70]
   1400075d3:	sub    rcx,rax
   1400075d6:	sar    rcx,1
   1400075d9:	mov    rax,QWORD PTR [rsp+0x50]
   1400075de:	add    rax,rcx
   1400075e1:	mov    QWORD PTR [rsp+0x50],rax
   1400075e6:	jmp    0x140007631
   1400075e8:	cmp    DWORD PTR [rsp+0x58],0x1
   1400075ed:	jne    0x14000761e
   1400075ef:	mov    rcx,QWORD PTR [rsp+0x40]
   1400075f4:	call   0x140005a80
   1400075f9:	mov    rbx,rax
   1400075fc:	mov    rcx,QWORD PTR [rsp+0x40]
   140007601:	call   0x140007e10
   140007606:	mov    rcx,rbx
   140007609:	sub    rcx,rax
   14000760c:	sar    rcx,1
   14000760f:	mov    rax,QWORD PTR [rsp+0x50]
   140007614:	add    rax,rcx
   140007617:	mov    QWORD PTR [rsp+0x50],rax
   14000761c:	jmp    0x140007631
   14000761e:	cmp    DWORD PTR [rsp+0x58],0x0
   140007623:	je     0x140007631
   140007625:	mov    rax,QWORD PTR [rip+0x3310c]        # 0x14003a738
   14000762c:	mov    QWORD PTR [rsp+0x50],rax
   140007631:	cmp    QWORD PTR [rsp+0x50],0x0
   140007637:	jl     0x140007692
   140007639:	mov    rcx,QWORD PTR [rsp+0x40]
   14000763e:	call   0x140007e10
   140007643:	mov    r11,rax
   140007646:	mov    rax,QWORD PTR [rsp+0x40]
   14000764b:	mov    rax,QWORD PTR [rax+0x70]
   14000764f:	sub    rax,r11
   140007652:	sar    rax,1
   140007655:	cmp    QWORD PTR [rsp+0x50],rax
   14000765a:	jg     0x140007692
   14000765c:	mov    rcx,QWORD PTR [rsp+0x40]
   140007661:	call   0x140007e10
   140007666:	mov    rbx,rax
   140007669:	mov    rcx,QWORD PTR [rsp+0x40]
   14000766e:	call   0x140005a80
   140007673:	mov    r11,rax
   140007676:	mov    rax,rbx
   140007679:	sub    rax,r11
   14000767c:	sar    rax,1
   14000767f:	add    rax,QWORD PTR [rsp+0x50]
   140007684:	mov    edx,eax
   140007686:	mov    rcx,QWORD PTR [rsp+0x40]
   14000768b:	call   0x140005be0
   140007690:	jmp    0x14000769e
   140007692:	mov    rax,QWORD PTR [rip+0x3309f]        # 0x14003a738
   140007699:	mov    QWORD PTR [rsp+0x50],rax
   14000769e:	jmp    0x1400076ac
   1400076a0:	mov    rax,QWORD PTR [rip+0x33091]        # 0x14003a738
   1400076a7:	mov    QWORD PTR [rsp+0x50],rax
   1400076ac:	mov    rdx,QWORD PTR [rsp+0x50]
   1400076b1:	mov    rcx,QWORD PTR [rsp+0x48]
   1400076b6:	call   0x140006a00
   1400076bb:	mov    rax,QWORD PTR [rsp+0x48]
   1400076c0:	add    rsp,0x28
   1400076c4:	pop    rdi
   1400076c5:	pop    rbx
   1400076c6:	ret    
   1400076c7:	int3   
   1400076c8:	int3   
   1400076c9:	int3   
   1400076ca:	int3   
   1400076cb:	int3   
   1400076cc:	int3   
   1400076cd:	int3   
   1400076ce:	int3   
   1400076cf:	int3   
   1400076d0:	mov    DWORD PTR [rsp+0x20],r9d
   1400076d5:	mov    QWORD PTR [rsp+0x18],r8
   1400076da:	mov    QWORD PTR [rsp+0x10],rdx
   1400076df:	mov    QWORD PTR [rsp+0x8],rcx
   1400076e4:	push   rbx
   1400076e5:	push   rdi
   1400076e6:	sub    rsp,0x38
   1400076ea:	mov    rcx,QWORD PTR [rsp+0x60]
   1400076ef:	call   0x140008d40
   1400076f4:	mov    QWORD PTR [rsp+0x20],rax
   1400076f9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400076fe:	call   0x140005a80
   140007703:	test   rax,rax
   140007706:	je     0x140007736
   140007708:	mov    rcx,QWORD PTR [rsp+0x50]
   14000770d:	call   0x140005a80
   140007712:	mov    r11,rax
   140007715:	mov    rax,QWORD PTR [rsp+0x50]
   14000771a:	cmp    QWORD PTR [rax+0x70],r11
   14000771e:	jae    0x140007736
   140007720:	mov    rcx,QWORD PTR [rsp+0x50]
   140007725:	call   0x140005a80
   14000772a:	mov    r11,rax
   14000772d:	mov    rax,QWORD PTR [rsp+0x50]
   140007732:	mov    QWORD PTR [rax+0x70],r11
   140007736:	mov    rax,QWORD PTR [rip+0x32ffb]        # 0x14003a738
   14000773d:	cmp    QWORD PTR [rsp+0x20],rax
   140007742:	jne    0x140007749
   140007744:	jmp    0x1400078cb
   140007749:	mov    eax,DWORD PTR [rsp+0x68]
   14000774d:	and    eax,0x1
   140007750:	test   eax,eax
   140007752:	je     0x140007836
   140007758:	mov    rcx,QWORD PTR [rsp+0x50]
   14000775d:	call   0x140005a60
   140007762:	test   rax,rax
   140007765:	je     0x140007836
   14000776b:	cmp    QWORD PTR [rsp+0x20],0x0
   140007771:	jl     0x140007825
   140007777:	mov    rcx,QWORD PTR [rsp+0x50]
   14000777c:	call   0x140007e10
   140007781:	mov    r11,rax
   140007784:	mov    rax,QWORD PTR [rsp+0x50]
   140007789:	mov    rax,QWORD PTR [rax+0x70]
   14000778d:	sub    rax,r11
   140007790:	sar    rax,1
   140007793:	cmp    QWORD PTR [rsp+0x20],rax
   140007798:	jg     0x140007825
   14000779e:	mov    rcx,QWORD PTR [rsp+0x50]
   1400077a3:	call   0x140007e10
   1400077a8:	mov    rbx,rax
   1400077ab:	mov    rcx,QWORD PTR [rsp+0x50]
   1400077b0:	call   0x140005a60
   1400077b5:	mov    r11,rax
   1400077b8:	mov    rax,rbx
   1400077bb:	sub    rax,r11
   1400077be:	sar    rax,1
   1400077c1:	add    rax,QWORD PTR [rsp+0x20]
   1400077c6:	mov    edx,eax
   1400077c8:	mov    rcx,QWORD PTR [rsp+0x50]
   1400077cd:	call   0x140005aa0
   1400077d2:	mov    eax,DWORD PTR [rsp+0x68]
   1400077d6:	and    eax,0x2
   1400077d9:	test   eax,eax
   1400077db:	je     0x140007823
   1400077dd:	mov    rcx,QWORD PTR [rsp+0x50]
   1400077e2:	call   0x140005a80
   1400077e7:	test   rax,rax
   1400077ea:	je     0x140007823
   1400077ec:	mov    rcx,QWORD PTR [rsp+0x50]
   1400077f1:	call   0x140007ee0
   1400077f6:	mov    rdi,rax
   1400077f9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400077fe:	call   0x140005a60
   140007803:	mov    rbx,rax
   140007806:	mov    rcx,QWORD PTR [rsp+0x50]
   14000780b:	call   0x140007e30
   140007810:	mov    r9,rdi
   140007813:	mov    r8,rbx
   140007816:	mov    rdx,rax
   140007819:	mov    rcx,QWORD PTR [rsp+0x50]
   14000781e:	call   0x140007f60
   140007823:	jmp    0x140007831
   140007825:	mov    rax,QWORD PTR [rip+0x32f0c]        # 0x14003a738
   14000782c:	mov    QWORD PTR [rsp+0x20],rax
   140007831:	jmp    0x1400078cb
   140007836:	mov    eax,DWORD PTR [rsp+0x68]
   14000783a:	and    eax,0x2
   14000783d:	test   eax,eax
   14000783f:	je     0x1400078bf
   140007841:	mov    rcx,QWORD PTR [rsp+0x50]
   140007846:	call   0x140005a80
   14000784b:	test   rax,rax
   14000784e:	je     0x1400078bf
   140007850:	cmp    QWORD PTR [rsp+0x20],0x0
   140007856:	jl     0x1400078b1
   140007858:	mov    rcx,QWORD PTR [rsp+0x50]
   14000785d:	call   0x140007e10
   140007862:	mov    r11,rax
   140007865:	mov    rax,QWORD PTR [rsp+0x50]
   14000786a:	mov    rax,QWORD PTR [rax+0x70]
   14000786e:	sub    rax,r11
   140007871:	sar    rax,1
   140007874:	cmp    QWORD PTR [rsp+0x20],rax
   140007879:	jg     0x1400078b1
   14000787b:	mov    rcx,QWORD PTR [rsp+0x50]
   140007880:	call   0x140007e10
   140007885:	mov    rbx,rax
   140007888:	mov    rcx,QWORD PTR [rsp+0x50]
   14000788d:	call   0x140005a80
   140007892:	mov    r11,rax
   140007895:	mov    rax,rbx
   140007898:	sub    rax,r11
   14000789b:	sar    rax,1
   14000789e:	add    rax,QWORD PTR [rsp+0x20]
   1400078a3:	mov    edx,eax
   1400078a5:	mov    rcx,QWORD PTR [rsp+0x50]
   1400078aa:	call   0x140005be0
   1400078af:	jmp    0x1400078bd
   1400078b1:	mov    rax,QWORD PTR [rip+0x32e80]        # 0x14003a738
   1400078b8:	mov    QWORD PTR [rsp+0x20],rax
   1400078bd:	jmp    0x1400078cb
   1400078bf:	mov    rax,QWORD PTR [rip+0x32e72]        # 0x14003a738
   1400078c6:	mov    QWORD PTR [rsp+0x20],rax
   1400078cb:	mov    rdx,QWORD PTR [rsp+0x20]
   1400078d0:	mov    rcx,QWORD PTR [rsp+0x58]
   1400078d5:	call   0x140006a00
   1400078da:	mov    rax,QWORD PTR [rsp+0x58]
   1400078df:	add    rsp,0x38
   1400078e3:	pop    rdi
   1400078e4:	pop    rbx
   1400078e5:	ret    
   1400078e6:	int3   
   1400078e7:	int3   
   1400078e8:	int3   
   1400078e9:	int3   
   1400078ea:	int3   
   1400078eb:	int3   
   1400078ec:	int3   
   1400078ed:	int3   
   1400078ee:	int3   
   1400078ef:	int3   
   1400078f0:	mov    QWORD PTR [rsp+0x18],r8
   1400078f5:	mov    QWORD PTR [rsp+0x10],rdx
   1400078fa:	mov    QWORD PTR [rsp+0x8],rcx
   1400078ff:	push   rsi
   140007900:	push   rdi
   140007901:	sub    rsp,0x58
   140007905:	lea    rdi,[rsp+0x40]
   14000790a:	mov    rsi,QWORD PTR [rsp+0x70]
   14000790f:	mov    ecx,0x10
   140007914:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007916:	lea    rdi,[rsp+0x20]
   14000791b:	lea    rsi,[rsp+0x40]
   140007920:	mov    ecx,0x10
   140007925:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007927:	mov    rdx,QWORD PTR [rsp+0x80]
   14000792f:	lea    rcx,[rsp+0x20]
   140007934:	call   0x140009250
   140007939:	lea    rdi,[rsp+0x30]
   14000793e:	mov    rsi,rax
   140007941:	mov    ecx,0x10
   140007946:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007948:	lea    rsi,[rsp+0x30]
   14000794d:	mov    rdi,QWORD PTR [rsp+0x78]
   140007952:	mov    ecx,0x10
   140007957:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007959:	mov    rax,QWORD PTR [rsp+0x78]
   14000795e:	add    rsp,0x58
   140007962:	pop    rdi
   140007963:	pop    rsi
   140007964:	ret    
   140007965:	int3   
   140007966:	int3   
   140007967:	int3   
   140007968:	int3   
   140007969:	int3   
   14000796a:	int3   
   14000796b:	int3   
   14000796c:	int3   
   14000796d:	int3   
   14000796e:	int3   
   14000796f:	int3   
   140007970:	mov    QWORD PTR [rsp+0x8],rcx
   140007975:	sub    rsp,0x28
   140007979:	mov    rcx,QWORD PTR [rsp+0x30]
   14000797e:	call   0x140012290
   140007983:	mov    rax,QWORD PTR [rsp+0x30]
   140007988:	add    rsp,0x28
   14000798c:	ret    
   14000798d:	int3   
   14000798e:	int3   
   14000798f:	int3   
   140007990:	mov    DWORD PTR [rsp+0x10],edx
   140007994:	mov    QWORD PTR [rsp+0x8],rcx
   140007999:	sub    rsp,0x28
   14000799d:	mov    rcx,QWORD PTR [rsp+0x30]
   1400079a2:	sub    rcx,0x98
   1400079a9:	call   0x140005120
   1400079ae:	mov    eax,DWORD PTR [rsp+0x38]
   1400079b2:	and    eax,0x1
   1400079b5:	test   eax,eax
   1400079b7:	je     0x1400079ca
   1400079b9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400079be:	sub    rcx,0x98
   1400079c5:	call   0x14001c4dc
   1400079ca:	mov    rax,QWORD PTR [rsp+0x30]
   1400079cf:	sub    rax,0x98
   1400079d5:	add    rsp,0x28
   1400079d9:	ret    
   1400079da:	int3   
   1400079db:	int3   
   1400079dc:	int3   
   1400079dd:	int3   
   1400079de:	int3   
   1400079df:	int3   
   1400079e0:	mov    DWORD PTR [rsp+0x10],edx
   1400079e4:	mov    QWORD PTR [rsp+0x8],rcx
   1400079e9:	sub    rsp,0x28
   1400079ed:	mov    rcx,QWORD PTR [rsp+0x30]
   1400079f2:	sub    rcx,0x18
   1400079f6:	call   0x140007a70
   1400079fb:	mov    eax,DWORD PTR [rsp+0x38]
   1400079ff:	and    eax,0x1
   140007a02:	test   eax,eax
   140007a04:	je     0x140007a14
   140007a06:	mov    rcx,QWORD PTR [rsp+0x30]
   140007a0b:	sub    rcx,0x18
   140007a0f:	call   0x14001c4dc
   140007a14:	mov    rax,QWORD PTR [rsp+0x30]
   140007a19:	sub    rax,0x18
   140007a1d:	add    rsp,0x28
   140007a21:	ret    
   140007a22:	int3   
   140007a23:	int3   
   140007a24:	int3   
   140007a25:	int3   
   140007a26:	int3   
   140007a27:	int3   
   140007a28:	int3   
   140007a29:	int3   
   140007a2a:	int3   
   140007a2b:	int3   
   140007a2c:	int3   
   140007a2d:	int3   
   140007a2e:	int3   
   140007a2f:	int3   
   140007a30:	mov    DWORD PTR [rsp+0x10],edx
   140007a34:	mov    QWORD PTR [rsp+0x8],rcx
   140007a39:	sub    rsp,0x28
   140007a3d:	mov    rcx,QWORD PTR [rsp+0x30]
   140007a42:	call   0x140006cb0
   140007a47:	mov    eax,DWORD PTR [rsp+0x38]
   140007a4b:	and    eax,0x1
   140007a4e:	test   eax,eax
   140007a50:	je     0x140007a5c
   140007a52:	mov    rcx,QWORD PTR [rsp+0x30]
   140007a57:	call   0x14001c4dc
   140007a5c:	mov    rax,QWORD PTR [rsp+0x30]
   140007a61:	add    rsp,0x28
   140007a65:	ret    
   140007a66:	int3   
   140007a67:	int3   
   140007a68:	int3   
   140007a69:	int3   
   140007a6a:	int3   
   140007a6b:	int3   
   140007a6c:	int3   
   140007a6d:	int3   
   140007a6e:	int3   
   140007a6f:	int3   
   140007a70:	mov    QWORD PTR [rsp+0x8],rcx
   140007a75:	sub    rsp,0x28
   140007a79:	mov    rcx,QWORD PTR [rsp+0x30]
   140007a7e:	add    rcx,0x18
   140007a82:	call   0x140006c60
   140007a87:	mov    rcx,QWORD PTR [rsp+0x30]
   140007a8c:	add    rcx,0x18
   140007a90:	call   0x1400033d0
   140007a95:	add    rsp,0x28
   140007a99:	ret    
   140007a9a:	int3   
   140007a9b:	int3   
   140007a9c:	int3   
   140007a9d:	int3   
   140007a9e:	int3   
   140007a9f:	int3   
   140007aa0:	mov    QWORD PTR [rsp+0x18],r8
   140007aa5:	mov    QWORD PTR [rsp+0x10],rdx
   140007aaa:	mov    QWORD PTR [rsp+0x8],rcx
   140007aaf:	push   rbx
   140007ab0:	push   rsi
   140007ab1:	push   rdi
   140007ab2:	sub    rsp,0x30
   140007ab6:	mov    rcx,QWORD PTR [rsp+0x50]
   140007abb:	mov    rax,QWORD PTR [rsp+0x58]
   140007ac0:	cmp    QWORD PTR [rcx+0x18],rax
   140007ac4:	jae    0x140007acb
   140007ac6:	call   0x14001a348
   140007acb:	mov    rax,QWORD PTR [rsp+0x50]
   140007ad0:	mov    rcx,QWORD PTR [rsp+0x58]
   140007ad5:	mov    rax,QWORD PTR [rax+0x18]
   140007ad9:	sub    rax,rcx
   140007adc:	cmp    rax,QWORD PTR [rsp+0x60]
   140007ae1:	jae    0x140007af9
   140007ae3:	mov    rax,QWORD PTR [rsp+0x50]
   140007ae8:	mov    rcx,QWORD PTR [rsp+0x58]
   140007aed:	mov    rax,QWORD PTR [rax+0x18]
   140007af1:	sub    rax,rcx
   140007af4:	mov    QWORD PTR [rsp+0x60],rax
   140007af9:	cmp    QWORD PTR [rsp+0x60],0x0
   140007aff:	jbe    0x140007b88
   140007b05:	mov    rsi,QWORD PTR [rsp+0x50]
   140007b0a:	mov    rax,QWORD PTR [rsp+0x58]
   140007b0f:	mov    rsi,QWORD PTR [rsi+0x18]
   140007b13:	sub    rsi,rax
   140007b16:	sub    rsi,QWORD PTR [rsp+0x60]
   140007b1b:	mov    rcx,QWORD PTR [rsp+0x50]
   140007b20:	call   0x1400055f0
   140007b25:	mov    rdi,rax
   140007b28:	add    rdi,QWORD PTR [rsp+0x58]
   140007b2d:	add    rdi,QWORD PTR [rsp+0x60]
   140007b32:	mov    rbx,QWORD PTR [rsp+0x50]
   140007b37:	mov    rax,QWORD PTR [rsp+0x58]
   140007b3c:	mov    rbx,QWORD PTR [rbx+0x20]
   140007b40:	sub    rbx,rax
   140007b43:	mov    rcx,QWORD PTR [rsp+0x50]
   140007b48:	call   0x1400055f0
   140007b4d:	mov    rcx,rax
   140007b50:	add    rcx,QWORD PTR [rsp+0x58]
   140007b55:	mov    r9,rsi
   140007b58:	mov    r8,rdi
   140007b5b:	mov    rdx,rbx
   140007b5e:	call   0x14000c040
   140007b63:	mov    rax,QWORD PTR [rsp+0x50]
   140007b68:	mov    rcx,QWORD PTR [rsp+0x60]
   140007b6d:	mov    rax,QWORD PTR [rax+0x18]
   140007b71:	sub    rax,rcx
   140007b74:	mov    QWORD PTR [rsp+0x20],rax
   140007b79:	mov    rdx,QWORD PTR [rsp+0x20]
   140007b7e:	mov    rcx,QWORD PTR [rsp+0x50]
   140007b83:	call   0x1400053d0
   140007b88:	mov    rax,QWORD PTR [rsp+0x50]
   140007b8d:	add    rsp,0x30
   140007b91:	pop    rdi
   140007b92:	pop    rsi
   140007b93:	pop    rbx
   140007b94:	ret    
   140007b95:	int3   
   140007b96:	int3   
   140007b97:	int3   
   140007b98:	int3   
   140007b99:	int3   
   140007b9a:	int3   
   140007b9b:	int3   
   140007b9c:	int3   
   140007b9d:	int3   
   140007b9e:	int3   
   140007b9f:	int3   
   140007ba0:	mov    QWORD PTR [rsp+0x8],rcx
   140007ba5:	sub    rsp,0x38
   140007ba9:	mov    rcx,QWORD PTR [rsp+0x40]
   140007bae:	call   0x1400092a0
   140007bb3:	mov    QWORD PTR [rsp+0x20],rax
   140007bb8:	cmp    QWORD PTR [rsp+0x20],0x1
   140007bbe:	ja     0x140007bcb
   140007bc0:	mov    QWORD PTR [rsp+0x28],0x1
   140007bc9:	jmp    0x140007bd9
   140007bcb:	mov    rax,QWORD PTR [rsp+0x20]
   140007bd0:	sub    rax,0x1
   140007bd4:	mov    QWORD PTR [rsp+0x28],rax
   140007bd9:	mov    rax,QWORD PTR [rsp+0x28]
   140007bde:	add    rsp,0x38
   140007be2:	ret    
   140007be3:	int3   
   140007be4:	int3   
   140007be5:	int3   
   140007be6:	int3   
   140007be7:	int3   
   140007be8:	int3   
   140007be9:	int3   
   140007bea:	int3   
   140007beb:	int3   
   140007bec:	int3   
   140007bed:	int3   
   140007bee:	int3   
   140007bef:	int3   
   140007bf0:	mov    QWORD PTR [rsp+0x18],r8
   140007bf5:	mov    QWORD PTR [rsp+0x10],rdx
   140007bfa:	mov    QWORD PTR [rsp+0x8],rcx
   140007bff:	push   rbx
   140007c00:	sub    rsp,0x50
   140007c04:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140007c0d:	mov    rax,QWORD PTR [rsp+0x68]
   140007c12:	or     rax,0xf
   140007c16:	mov    QWORD PTR [rsp+0x28],rax
   140007c1b:	mov    rcx,QWORD PTR [rsp+0x60]
   140007c20:	call   0x140007ba0
   140007c25:	cmp    rax,QWORD PTR [rsp+0x28]
   140007c2a:	jae    0x140007c38
   140007c2c:	mov    rax,QWORD PTR [rsp+0x68]
   140007c31:	mov    QWORD PTR [rsp+0x28],rax
   140007c36:	jmp    0x140007cb4
   140007c38:	xor    edx,edx
   140007c3a:	mov    rax,QWORD PTR [rsp+0x60]
   140007c3f:	mov    rax,QWORD PTR [rax+0x20]
   140007c43:	mov    ecx,0x2
   140007c48:	div    rcx
   140007c4b:	mov    r8,rax
   140007c4e:	xor    edx,edx
   140007c50:	mov    rax,QWORD PTR [rsp+0x28]
   140007c55:	mov    ecx,0x3
   140007c5a:	div    rcx
   140007c5d:	cmp    rax,r8
   140007c60:	jae    0x140007cb4
   140007c62:	xor    edx,edx
   140007c64:	mov    rax,QWORD PTR [rsp+0x60]
   140007c69:	mov    rax,QWORD PTR [rax+0x20]
   140007c6d:	mov    ecx,0x2
   140007c72:	div    rcx
   140007c75:	mov    rbx,rax
   140007c78:	mov    rcx,QWORD PTR [rsp+0x60]
   140007c7d:	call   0x140007ba0
   140007c82:	mov    rcx,rax
   140007c85:	sub    rcx,rbx
   140007c88:	mov    rax,QWORD PTR [rsp+0x60]
   140007c8d:	cmp    QWORD PTR [rax+0x20],rcx
   140007c91:	ja     0x140007cb4
   140007c93:	xor    edx,edx
   140007c95:	mov    rax,QWORD PTR [rsp+0x60]
   140007c9a:	mov    rax,QWORD PTR [rax+0x20]
   140007c9e:	mov    ecx,0x2
   140007ca3:	div    rcx
   140007ca6:	mov    rcx,QWORD PTR [rsp+0x60]
   140007cab:	add    rax,QWORD PTR [rcx+0x20]
   140007caf:	mov    QWORD PTR [rsp+0x28],rax
   140007cb4:	mov    QWORD PTR [rsp+0x20],0x0
   140007cbd:	mov    rdx,QWORD PTR [rsp+0x28]
   140007cc2:	add    rdx,0x1
   140007cc6:	mov    rcx,QWORD PTR [rsp+0x60]
   140007ccb:	call   0x140009280
   140007cd0:	mov    QWORD PTR [rsp+0x38],rax
   140007cd5:	mov    rax,QWORD PTR [rsp+0x38]
   140007cda:	mov    QWORD PTR [rsp+0x20],rax
   140007cdf:	cmp    QWORD PTR [rsp+0x70],0x0
   140007ce5:	jbe    0x140007d0c
   140007ce7:	mov    rcx,QWORD PTR [rsp+0x60]
   140007cec:	call   0x1400055f0
   140007cf1:	mov    rdx,QWORD PTR [rsp+0x28]
   140007cf6:	add    rdx,0x1
   140007cfa:	mov    r9,QWORD PTR [rsp+0x70]
   140007cff:	mov    r8,rax
   140007d02:	mov    rcx,QWORD PTR [rsp+0x20]
   140007d07:	call   0x14000b460
   140007d0c:	xor    r8d,r8d
   140007d0f:	mov    dl,0x1
   140007d11:	mov    rcx,QWORD PTR [rsp+0x60]
   140007d16:	call   0x140005550
   140007d1b:	mov    r11,QWORD PTR [rsp+0x60]
   140007d20:	mov    rax,QWORD PTR [rsp+0x20]
   140007d25:	mov    QWORD PTR [r11+0x8],rax
   140007d29:	mov    rcx,QWORD PTR [rsp+0x60]
   140007d2e:	mov    rax,QWORD PTR [rsp+0x28]
   140007d33:	mov    QWORD PTR [rcx+0x20],rax
   140007d37:	mov    rdx,QWORD PTR [rsp+0x70]
   140007d3c:	mov    rcx,QWORD PTR [rsp+0x60]
   140007d41:	call   0x1400053d0
   140007d46:	add    rsp,0x50
   140007d4a:	pop    rbx
   140007d4b:	ret    
   140007d4c:	int3   
   140007d4d:	int3   
   140007d4e:	int3   
   140007d4f:	int3   
   140007d50:	mov    QWORD PTR [rsp+0x10],rdx
   140007d55:	mov    QWORD PTR [rsp+0x8],rcx
   140007d5a:	mov    rax,QWORD PTR [rsp+0x8]
   140007d5f:	ret    
   140007d60:	mov    QWORD PTR [rsp+0x8],rcx
   140007d65:	sub    rsp,0x38
   140007d69:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007d72:	mov    rax,QWORD PTR [rsp+0x40]
   140007d77:	mov    rax,QWORD PTR [rax]
   140007d7a:	movsxd rax,DWORD PTR [rax+0x4]
   140007d7e:	mov    rcx,QWORD PTR [rsp+0x40]
   140007d83:	add    rcx,rax
   140007d86:	call   0x140002c40
   140007d8b:	and    eax,0x2
   140007d8e:	test   eax,eax
   140007d90:	je     0x140007d9d
   140007d92:	mov    rcx,QWORD PTR [rsp+0x40]
   140007d97:	call   0x140003340
   140007d9c:	nop
   140007d9d:	add    rsp,0x38
   140007da1:	ret    
   140007da2:	int3   
   140007da3:	int3   
   140007da4:	int3   
   140007da5:	int3   
   140007da6:	int3   
   140007da7:	int3   
   140007da8:	int3   
   140007da9:	int3   
   140007daa:	int3   
   140007dab:	int3   
   140007dac:	int3   
   140007dad:	int3   
   140007dae:	int3   
   140007daf:	int3   
   140007db0:	mov    QWORD PTR [rsp+0x8],rcx
   140007db5:	mov    rax,QWORD PTR [rsp+0x8]
   140007dba:	mov    rax,QWORD PTR [rax+0x50]
   140007dbe:	ret    
   140007dbf:	int3   
   140007dc0:	mov    QWORD PTR [rsp+0x8],rcx
   140007dc5:	sub    rsp,0x28
   140007dc9:	mov    rcx,QWORD PTR [rsp+0x30]
   140007dce:	call   0x140002d00
   140007dd3:	mov    r11,QWORD PTR [rsp+0x30]
   140007dd8:	lea    rax,[rip+0x32b29]        # 0x14003a908
   140007ddf:	mov    QWORD PTR [r11],rax
   140007de2:	mov    rax,QWORD PTR [rsp+0x30]
   140007de7:	add    rsp,0x28
   140007deb:	ret    
   140007dec:	int3   
   140007ded:	int3   
   140007dee:	int3   
   140007def:	int3   
   140007df0:	mov    QWORD PTR [rsp+0x8],rcx
   140007df5:	sub    rsp,0x28
   140007df9:	mov    rcx,QWORD PTR [rsp+0x30]
   140007dfe:	add    rcx,0x8
   140007e02:	call   0x14001a22c
   140007e07:	add    rsp,0x28
   140007e0b:	ret    
   140007e0c:	int3   
   140007e0d:	int3   
   140007e0e:	int3   
   140007e0f:	int3   
   140007e10:	mov    QWORD PTR [rsp+0x8],rcx
   140007e15:	mov    rax,QWORD PTR [rsp+0x8]
   140007e1a:	mov    rax,QWORD PTR [rax+0x20]
   140007e1e:	mov    rax,QWORD PTR [rax]
   140007e21:	ret    
   140007e22:	int3   
   140007e23:	int3   
   140007e24:	int3   
   140007e25:	int3   
   140007e26:	int3   
   140007e27:	int3   
   140007e28:	int3   
   140007e29:	int3   
   140007e2a:	int3   
   140007e2b:	int3   
   140007e2c:	int3   
   140007e2d:	int3   
   140007e2e:	int3   
   140007e2f:	int3   
   140007e30:	mov    QWORD PTR [rsp+0x8],rcx
   140007e35:	mov    rax,QWORD PTR [rsp+0x8]
   140007e3a:	mov    rax,QWORD PTR [rax+0x28]
   140007e3e:	mov    rax,QWORD PTR [rax]
   140007e41:	ret    
   140007e42:	int3   
   140007e43:	int3   
   140007e44:	int3   
   140007e45:	int3   
   140007e46:	int3   
   140007e47:	int3   
   140007e48:	int3   
   140007e49:	int3   
   140007e4a:	int3   
   140007e4b:	int3   
   140007e4c:	int3   
   140007e4d:	int3   
   140007e4e:	int3   
   140007e4f:	int3   
   140007e50:	mov    QWORD PTR [rsp+0x8],rcx
   140007e55:	mov    rdx,QWORD PTR [rsp+0x8]
   140007e5a:	mov    rdx,QWORD PTR [rdx+0x40]
   140007e5e:	mov    rax,QWORD PTR [rsp+0x8]
   140007e63:	mov    rax,QWORD PTR [rax+0x58]
   140007e67:	movsxd rcx,DWORD PTR [rax]
   140007e6a:	mov    rax,QWORD PTR [rdx]
   140007e6d:	lea    rax,[rax+rcx*2]
   140007e71:	ret    
   140007e72:	int3   
   140007e73:	int3   
   140007e74:	int3   
   140007e75:	int3   
   140007e76:	int3   
   140007e77:	int3   
   140007e78:	int3   
   140007e79:	int3   
   140007e7a:	int3   
   140007e7b:	int3   
   140007e7c:	int3   
   140007e7d:	int3   
   140007e7e:	int3   
   140007e7f:	int3   
   140007e80:	mov    QWORD PTR [rsp+0x20],r9
   140007e85:	mov    QWORD PTR [rsp+0x18],r8
   140007e8a:	mov    QWORD PTR [rsp+0x10],rdx
   140007e8f:	mov    QWORD PTR [rsp+0x8],rcx
   140007e94:	mov    rcx,QWORD PTR [rsp+0x8]
   140007e99:	mov    rcx,QWORD PTR [rcx+0x20]
   140007e9d:	mov    rax,QWORD PTR [rsp+0x10]
   140007ea2:	mov    QWORD PTR [rcx],rax
   140007ea5:	mov    rcx,QWORD PTR [rsp+0x8]
   140007eaa:	mov    rcx,QWORD PTR [rcx+0x40]
   140007eae:	mov    rax,QWORD PTR [rsp+0x18]
   140007eb3:	mov    QWORD PTR [rcx],rax
   140007eb6:	mov    rax,QWORD PTR [rsp+0x18]
   140007ebb:	mov    rcx,QWORD PTR [rsp+0x20]
   140007ec0:	sub    rcx,rax
   140007ec3:	sar    rcx,1
   140007ec6:	mov    rax,QWORD PTR [rsp+0x8]
   140007ecb:	mov    rax,QWORD PTR [rax+0x58]
   140007ecf:	mov    DWORD PTR [rax],ecx
   140007ed1:	ret    
   140007ed2:	int3   
   140007ed3:	int3   
   140007ed4:	int3   
   140007ed5:	int3   
   140007ed6:	int3   
   140007ed7:	int3   
   140007ed8:	int3   
   140007ed9:	int3   
   140007eda:	int3   
   140007edb:	int3   
   140007edc:	int3   
   140007edd:	int3   
   140007ede:	int3   
   140007edf:	int3   
   140007ee0:	mov    QWORD PTR [rsp+0x8],rcx
   140007ee5:	mov    rdx,QWORD PTR [rsp+0x8]
   140007eea:	mov    rdx,QWORD PTR [rdx+0x48]
   140007eee:	mov    rax,QWORD PTR [rsp+0x8]
   140007ef3:	mov    rax,QWORD PTR [rax+0x60]
   140007ef7:	movsxd rcx,DWORD PTR [rax]
   140007efa:	mov    rax,QWORD PTR [rdx]
   140007efd:	lea    rax,[rax+rcx*2]
   140007f01:	ret    
   140007f02:	int3   
   140007f03:	int3   
   140007f04:	int3   
   140007f05:	int3   
   140007f06:	int3   
   140007f07:	int3   
   140007f08:	int3   
   140007f09:	int3   
   140007f0a:	int3   
   140007f0b:	int3   
   140007f0c:	int3   
   140007f0d:	int3   
   140007f0e:	int3   
   140007f0f:	int3   
   140007f10:	mov    QWORD PTR [rsp+0x18],r8
   140007f15:	mov    QWORD PTR [rsp+0x10],rdx
   140007f1a:	mov    QWORD PTR [rsp+0x8],rcx
   140007f1f:	mov    rcx,QWORD PTR [rsp+0x8]
   140007f24:	mov    rcx,QWORD PTR [rcx+0x28]
   140007f28:	mov    rax,QWORD PTR [rsp+0x10]
   140007f2d:	mov    QWORD PTR [rcx],rax
   140007f30:	mov    rcx,QWORD PTR [rsp+0x8]
   140007f35:	mov    rcx,QWORD PTR [rcx+0x48]
   140007f39:	mov    rax,QWORD PTR [rsp+0x10]
   140007f3e:	mov    QWORD PTR [rcx],rax
   140007f41:	mov    rax,QWORD PTR [rsp+0x10]
   140007f46:	mov    rcx,QWORD PTR [rsp+0x18]
   140007f4b:	sub    rcx,rax
   140007f4e:	sar    rcx,1
   140007f51:	mov    rax,QWORD PTR [rsp+0x8]
   140007f56:	mov    rax,QWORD PTR [rax+0x60]
   140007f5a:	mov    DWORD PTR [rax],ecx
   140007f5c:	ret    
   140007f5d:	int3   
   140007f5e:	int3   
   140007f5f:	int3   
   140007f60:	mov    QWORD PTR [rsp+0x20],r9
   140007f65:	mov    QWORD PTR [rsp+0x18],r8
   140007f6a:	mov    QWORD PTR [rsp+0x10],rdx
   140007f6f:	mov    QWORD PTR [rsp+0x8],rcx
   140007f74:	mov    rcx,QWORD PTR [rsp+0x8]
   140007f79:	mov    rcx,QWORD PTR [rcx+0x28]
   140007f7d:	mov    rax,QWORD PTR [rsp+0x10]
   140007f82:	mov    QWORD PTR [rcx],rax
   140007f85:	mov    rcx,QWORD PTR [rsp+0x8]
   140007f8a:	mov    rcx,QWORD PTR [rcx+0x48]
   140007f8e:	mov    rax,QWORD PTR [rsp+0x18]
   140007f93:	mov    QWORD PTR [rcx],rax
   140007f96:	mov    rax,QWORD PTR [rsp+0x18]
   140007f9b:	mov    rcx,QWORD PTR [rsp+0x20]
   140007fa0:	sub    rcx,rax
   140007fa3:	sar    rcx,1
   140007fa6:	mov    rax,QWORD PTR [rsp+0x8]
   140007fab:	mov    rax,QWORD PTR [rax+0x60]
   140007faf:	mov    DWORD PTR [rax],ecx
   140007fb1:	ret    
   140007fb2:	int3   
   140007fb3:	int3   
   140007fb4:	int3   
   140007fb5:	int3   
   140007fb6:	int3   
   140007fb7:	int3   
   140007fb8:	int3   
   140007fb9:	int3   
   140007fba:	int3   
   140007fbb:	int3   
   140007fbc:	int3   
   140007fbd:	int3   
   140007fbe:	int3   
   140007fbf:	int3   
   140007fc0:	mov    QWORD PTR [rsp+0x8],rcx
   140007fc5:	sub    rsp,0x18
   140007fc9:	mov    rax,QWORD PTR [rsp+0x20]
   140007fce:	mov    rax,QWORD PTR [rax+0x60]
   140007fd2:	mov    ecx,DWORD PTR [rax]
   140007fd4:	sub    ecx,0x1
   140007fd7:	mov    rax,QWORD PTR [rsp+0x20]
   140007fdc:	mov    rax,QWORD PTR [rax+0x60]
   140007fe0:	mov    DWORD PTR [rax],ecx
   140007fe2:	mov    rax,QWORD PTR [rsp+0x20]
   140007fe7:	mov    rax,QWORD PTR [rax+0x48]
   140007feb:	mov    rax,QWORD PTR [rax]
   140007fee:	mov    QWORD PTR [rsp],rax
   140007ff2:	mov    rcx,QWORD PTR [rsp+0x20]
   140007ff7:	mov    rcx,QWORD PTR [rcx+0x48]
   140007ffb:	mov    rcx,QWORD PTR [rcx]
   140007ffe:	add    rcx,0x2
   140008002:	mov    rax,QWORD PTR [rsp+0x20]
   140008007:	mov    rax,QWORD PTR [rax+0x48]
   14000800b:	mov    QWORD PTR [rax],rcx
   14000800e:	mov    rax,QWORD PTR [rsp]
   140008012:	add    rsp,0x18
   140008016:	ret    
   140008017:	int3   
   140008018:	int3   
   140008019:	int3   
   14000801a:	int3   
   14000801b:	int3   
   14000801c:	int3   
   14000801d:	int3   
   14000801e:	int3   
   14000801f:	int3   
   140008020:	mov    QWORD PTR [rsp+0x20],r9
   140008025:	mov    QWORD PTR [rsp+0x18],r8
   14000802a:	mov    QWORD PTR [rsp+0x10],rdx
   14000802f:	mov    QWORD PTR [rsp+0x8],rcx
   140008034:	push   rbx
   140008035:	push   rdi
   140008036:	sub    rsp,0x38
   14000803a:	mov    rcx,QWORD PTR [rsp+0x58]
   14000803f:	call   0x140003bb0
   140008044:	cmp    rax,QWORD PTR [rsp+0x60]
   140008049:	jae    0x140008050
   14000804b:	call   0x14001a348
   140008050:	mov    rcx,QWORD PTR [rsp+0x58]
   140008055:	call   0x140003bb0
   14000805a:	sub    rax,QWORD PTR [rsp+0x60]
   14000805f:	mov    QWORD PTR [rsp+0x20],rax
   140008064:	mov    rax,QWORD PTR [rsp+0x68]
   140008069:	cmp    QWORD PTR [rsp+0x20],rax
   14000806e:	jae    0x14000807a
   140008070:	mov    rax,QWORD PTR [rsp+0x20]
   140008075:	mov    QWORD PTR [rsp+0x68],rax
   14000807a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000807f:	mov    rcx,QWORD PTR [rcx+0x18]
   140008083:	mov    rax,QWORD PTR [rip+0x3726e]        # 0x14003f2f8
   14000808a:	sub    rax,rcx
   14000808d:	cmp    rax,QWORD PTR [rsp+0x68]
   140008092:	jbe    0x1400080ad
   140008094:	mov    rcx,QWORD PTR [rsp+0x50]
   140008099:	mov    rcx,QWORD PTR [rcx+0x18]
   14000809d:	add    rcx,QWORD PTR [rsp+0x68]
   1400080a2:	mov    rax,QWORD PTR [rsp+0x50]
   1400080a7:	cmp    rcx,QWORD PTR [rax+0x18]
   1400080ab:	jae    0x1400080b2
   1400080ad:	call   0x14001a2e0
   1400080b2:	cmp    QWORD PTR [rsp+0x68],0x0
   1400080b8:	jbe    0x14000814e
   1400080be:	mov    rax,QWORD PTR [rsp+0x50]
   1400080c3:	mov    rax,QWORD PTR [rax+0x18]
   1400080c7:	add    rax,QWORD PTR [rsp+0x68]
   1400080cc:	mov    QWORD PTR [rsp+0x20],rax
   1400080d1:	xor    r8d,r8d
   1400080d4:	mov    rdx,QWORD PTR [rsp+0x20]
   1400080d9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400080de:	call   0x140006190
   1400080e3:	movzx  eax,al
   1400080e6:	test   eax,eax
   1400080e8:	je     0x14000814e
   1400080ea:	mov    rcx,QWORD PTR [rsp+0x58]
   1400080ef:	call   0x140006370
   1400080f4:	mov    r11,rax
   1400080f7:	mov    rax,QWORD PTR [rsp+0x60]
   1400080fc:	lea    rdi,[r11+rax*2]
   140008100:	mov    rbx,QWORD PTR [rsp+0x50]
   140008105:	mov    rax,QWORD PTR [rsp+0x50]
   14000810a:	mov    rax,QWORD PTR [rax+0x18]
   14000810e:	mov    rbx,QWORD PTR [rbx+0x20]
   140008112:	sub    rbx,rax
   140008115:	mov    rcx,QWORD PTR [rsp+0x50]
   14000811a:	call   0x140006370
   14000811f:	mov    r11,rax
   140008122:	mov    rax,QWORD PTR [rsp+0x50]
   140008127:	mov    rax,QWORD PTR [rax+0x18]
   14000812b:	lea    rcx,[r11+rax*2]
   14000812f:	mov    r9,QWORD PTR [rsp+0x68]
   140008134:	mov    r8,rdi
   140008137:	mov    rdx,rbx
   14000813a:	call   0x14000b4b0
   14000813f:	mov    rdx,QWORD PTR [rsp+0x20]
   140008144:	mov    rcx,QWORD PTR [rsp+0x50]
   140008149:	call   0x140006140
   14000814e:	mov    rax,QWORD PTR [rsp+0x50]
   140008153:	add    rsp,0x38
   140008157:	pop    rdi
   140008158:	pop    rbx
   140008159:	ret    
   14000815a:	int3   
   14000815b:	int3   
   14000815c:	int3   
   14000815d:	int3   
   14000815e:	int3   
   14000815f:	int3   
   140008160:	mov    QWORD PTR [rsp+0x10],rdx
   140008165:	mov    QWORD PTR [rsp+0x8],rcx
   14000816a:	sub    rsp,0x28
   14000816e:	mov    rcx,QWORD PTR [rsp+0x38]
   140008173:	call   0x140001050
   140008178:	mov    r8,rax
   14000817b:	mov    rdx,QWORD PTR [rsp+0x38]
   140008180:	mov    rcx,QWORD PTR [rsp+0x30]
   140008185:	call   0x140009560
   14000818a:	add    rsp,0x28
   14000818e:	ret    
   14000818f:	int3   
   140008190:	mov    WORD PTR [rsp+0x18],r8w
   140008196:	mov    QWORD PTR [rsp+0x10],rdx
   14000819b:	mov    QWORD PTR [rsp+0x8],rcx
   1400081a0:	sub    rsp,0x38
   1400081a4:	mov    rcx,QWORD PTR [rsp+0x40]
   1400081a9:	mov    rcx,QWORD PTR [rcx+0x18]
   1400081ad:	mov    rax,QWORD PTR [rip+0x37144]        # 0x14003f2f8
   1400081b4:	sub    rax,rcx
   1400081b7:	cmp    rax,QWORD PTR [rsp+0x48]
   1400081bc:	ja     0x1400081c3
   1400081be:	call   0x14001a2e0
   1400081c3:	cmp    QWORD PTR [rsp+0x48],0x0
   1400081c9:	jbe    0x140008224
   1400081cb:	mov    rax,QWORD PTR [rsp+0x40]
   1400081d0:	mov    rax,QWORD PTR [rax+0x18]
   1400081d4:	add    rax,QWORD PTR [rsp+0x48]
   1400081d9:	mov    QWORD PTR [rsp+0x20],rax
   1400081de:	xor    r8d,r8d
   1400081e1:	mov    rdx,QWORD PTR [rsp+0x20]
   1400081e6:	mov    rcx,QWORD PTR [rsp+0x40]
   1400081eb:	call   0x140006190
   1400081f0:	movzx  eax,al
   1400081f3:	test   eax,eax
   1400081f5:	je     0x140008224
   1400081f7:	movzx  r9d,WORD PTR [rsp+0x50]
   1400081fd:	mov    r8,QWORD PTR [rsp+0x48]
   140008202:	mov    rdx,QWORD PTR [rsp+0x40]
   140008207:	mov    rdx,QWORD PTR [rdx+0x18]
   14000820b:	mov    rcx,QWORD PTR [rsp+0x40]
   140008210:	call   0x140009c70
   140008215:	mov    rdx,QWORD PTR [rsp+0x20]
   14000821a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000821f:	call   0x140006140
   140008224:	mov    rax,QWORD PTR [rsp+0x40]
   140008229:	add    rsp,0x38
   14000822d:	ret    
   14000822e:	int3   
   14000822f:	int3   
   140008230:	mov    QWORD PTR [rsp+0x10],rdx
   140008235:	mov    QWORD PTR [rsp+0x8],rcx
   14000823a:	sub    rsp,0x28
   14000823e:	mov    r9,QWORD PTR [rip+0x370b3]        # 0x14003f2f8
   140008245:	xor    r8d,r8d
   140008248:	mov    rdx,QWORD PTR [rsp+0x38]
   14000824d:	mov    rcx,QWORD PTR [rsp+0x30]
   140008252:	call   0x140005e10
   140008257:	add    rsp,0x28
   14000825b:	ret    
   14000825c:	int3   
   14000825d:	int3   
   14000825e:	int3   
   14000825f:	int3   
   140008260:	mov    WORD PTR [rsp+0x18],r8w
   140008266:	mov    QWORD PTR [rsp+0x10],rdx
   14000826b:	mov    QWORD PTR [rsp+0x8],rcx
   140008270:	sub    rsp,0x28
   140008274:	mov    rax,QWORD PTR [rip+0x3707d]        # 0x14003f2f8
   14000827b:	cmp    QWORD PTR [rsp+0x38],rax
   140008280:	jne    0x140008287
   140008282:	call   0x14001a2e0
   140008287:	xor    r8d,r8d
   14000828a:	mov    rdx,QWORD PTR [rsp+0x38]
   14000828f:	mov    rcx,QWORD PTR [rsp+0x30]
   140008294:	call   0x140006190
   140008299:	movzx  eax,al
   14000829c:	test   eax,eax
   14000829e:	je     0x1400082c6
   1400082a0:	movzx  r9d,WORD PTR [rsp+0x40]
   1400082a6:	mov    r8,QWORD PTR [rsp+0x38]
   1400082ab:	xor    edx,edx
   1400082ad:	mov    rcx,QWORD PTR [rsp+0x30]
   1400082b2:	call   0x140009c70
   1400082b7:	mov    rdx,QWORD PTR [rsp+0x38]
   1400082bc:	mov    rcx,QWORD PTR [rsp+0x30]
   1400082c1:	call   0x140006140
   1400082c6:	mov    rax,QWORD PTR [rsp+0x30]
   1400082cb:	add    rsp,0x28
   1400082cf:	ret    
   1400082d0:	mov    QWORD PTR [rsp+0x18],r8
   1400082d5:	mov    QWORD PTR [rsp+0x10],rdx
   1400082da:	mov    QWORD PTR [rsp+0x8],rcx
   1400082df:	push   rbx
   1400082e0:	push   rsi
   1400082e1:	push   rdi
   1400082e2:	sub    rsp,0x30
   1400082e6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400082eb:	mov    rax,QWORD PTR [rsp+0x58]
   1400082f0:	cmp    QWORD PTR [rcx+0x18],rax
   1400082f4:	jae    0x1400082fb
   1400082f6:	call   0x14001a348
   1400082fb:	mov    rax,QWORD PTR [rsp+0x50]
   140008300:	mov    rcx,QWORD PTR [rsp+0x58]
   140008305:	mov    rax,QWORD PTR [rax+0x18]
   140008309:	sub    rax,rcx
   14000830c:	cmp    rax,QWORD PTR [rsp+0x60]
   140008311:	jae    0x140008329
   140008313:	mov    rax,QWORD PTR [rsp+0x50]
   140008318:	mov    rcx,QWORD PTR [rsp+0x58]
   14000831d:	mov    rax,QWORD PTR [rax+0x18]
   140008321:	sub    rax,rcx
   140008324:	mov    QWORD PTR [rsp+0x60],rax
   140008329:	cmp    QWORD PTR [rsp+0x60],0x0
   14000832f:	jbe    0x1400083c4
   140008335:	mov    rsi,QWORD PTR [rsp+0x50]
   14000833a:	mov    rax,QWORD PTR [rsp+0x58]
   14000833f:	mov    rsi,QWORD PTR [rsi+0x18]
   140008343:	sub    rsi,rax
   140008346:	sub    rsi,QWORD PTR [rsp+0x60]
   14000834b:	mov    rcx,QWORD PTR [rsp+0x50]
   140008350:	call   0x140006370
   140008355:	mov    r11,rax
   140008358:	mov    rax,QWORD PTR [rsp+0x58]
   14000835d:	lea    rcx,[r11+rax*2]
   140008361:	mov    rax,QWORD PTR [rsp+0x60]
   140008366:	lea    rdi,[rcx+rax*2]
   14000836a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000836f:	mov    rax,QWORD PTR [rsp+0x58]
   140008374:	mov    rbx,QWORD PTR [rbx+0x20]
   140008378:	sub    rbx,rax
   14000837b:	mov    rcx,QWORD PTR [rsp+0x50]
   140008380:	call   0x140006370
   140008385:	mov    r11,rax
   140008388:	mov    rax,QWORD PTR [rsp+0x58]
   14000838d:	lea    rcx,[r11+rax*2]
   140008391:	mov    r9,rsi
   140008394:	mov    r8,rdi
   140008397:	mov    rdx,rbx
   14000839a:	call   0x14000c090
   14000839f:	mov    rax,QWORD PTR [rsp+0x50]
   1400083a4:	mov    rcx,QWORD PTR [rsp+0x60]
   1400083a9:	mov    rax,QWORD PTR [rax+0x18]
   1400083ad:	sub    rax,rcx
   1400083b0:	mov    QWORD PTR [rsp+0x20],rax
   1400083b5:	mov    rdx,QWORD PTR [rsp+0x20]
   1400083ba:	mov    rcx,QWORD PTR [rsp+0x50]
   1400083bf:	call   0x140006140
   1400083c4:	mov    rax,QWORD PTR [rsp+0x50]
   1400083c9:	add    rsp,0x30
   1400083cd:	pop    rdi
   1400083ce:	pop    rsi
   1400083cf:	pop    rbx
   1400083d0:	ret    
   1400083d1:	int3   
   1400083d2:	int3   
   1400083d3:	int3   
   1400083d4:	int3   
   1400083d5:	int3   
   1400083d6:	int3   
   1400083d7:	int3   
   1400083d8:	int3   
   1400083d9:	int3   
   1400083da:	int3   
   1400083db:	int3   
   1400083dc:	int3   
   1400083dd:	int3   
   1400083de:	int3   
   1400083df:	int3   
   1400083e0:	mov    QWORD PTR [rsp+0x20],r9
   1400083e5:	mov    QWORD PTR [rsp+0x18],r8
   1400083ea:	mov    QWORD PTR [rsp+0x10],rdx
   1400083ef:	mov    QWORD PTR [rsp+0x8],rcx
   1400083f4:	sub    rsp,0x38
   1400083f8:	mov    rax,QWORD PTR [rip+0x36ef9]        # 0x14003f2f8
   1400083ff:	mov    QWORD PTR [rsp+0x28],rax
   140008404:	mov    QWORD PTR [rsp+0x20],0x0
   14000840d:	mov    r9,QWORD PTR [rsp+0x58]
   140008412:	mov    r8,QWORD PTR [rsp+0x50]
   140008417:	mov    rdx,QWORD PTR [rsp+0x48]
   14000841c:	mov    rcx,QWORD PTR [rsp+0x40]
   140008421:	call   0x140009680
   140008426:	add    rsp,0x38
   14000842a:	ret    
   14000842b:	int3   
   14000842c:	int3   
   14000842d:	int3   
   14000842e:	int3   
   14000842f:	int3   
   140008430:	mov    QWORD PTR [rsp+0x8],rcx
   140008435:	sub    rsp,0x38
   140008439:	mov    rcx,QWORD PTR [rsp+0x40]
   14000843e:	call   0x140009ce0
   140008443:	mov    QWORD PTR [rsp+0x20],rax
   140008448:	cmp    QWORD PTR [rsp+0x20],0x1
   14000844e:	ja     0x14000845b
   140008450:	mov    QWORD PTR [rsp+0x28],0x1
   140008459:	jmp    0x140008469
   14000845b:	mov    rax,QWORD PTR [rsp+0x20]
   140008460:	sub    rax,0x1
   140008464:	mov    QWORD PTR [rsp+0x28],rax
   140008469:	mov    rax,QWORD PTR [rsp+0x28]
   14000846e:	add    rsp,0x38
   140008472:	ret    
   140008473:	int3   
   140008474:	int3   
   140008475:	int3   
   140008476:	int3   
   140008477:	int3   
   140008478:	int3   
   140008479:	int3   
   14000847a:	int3   
   14000847b:	int3   
   14000847c:	int3   
   14000847d:	int3   
   14000847e:	int3   
   14000847f:	int3   
   140008480:	mov    QWORD PTR [rsp+0x20],r9
   140008485:	mov    QWORD PTR [rsp+0x18],r8
   14000848a:	mov    QWORD PTR [rsp+0x10],rdx
   14000848f:	mov    QWORD PTR [rsp+0x8],rcx
   140008494:	sub    rsp,0x48
   140008498:	cmp    QWORD PTR [rsp+0x68],0x0
   14000849e:	jne    0x1400084ba
   1400084a0:	mov    rax,QWORD PTR [rsp+0x50]
   1400084a5:	mov    rax,QWORD PTR [rax+0x18]
   1400084a9:	cmp    QWORD PTR [rsp+0x60],rax
   1400084ae:	ja     0x1400084ba
   1400084b0:	mov    rax,QWORD PTR [rsp+0x60]
   1400084b5:	jmp    0x1400085b5
   1400084ba:	mov    rax,QWORD PTR [rsp+0x50]
   1400084bf:	mov    rax,QWORD PTR [rax+0x18]
   1400084c3:	cmp    QWORD PTR [rsp+0x60],rax
   1400084c8:	jae    0x1400085ae
   1400084ce:	mov    rax,QWORD PTR [rsp+0x50]
   1400084d3:	mov    rcx,QWORD PTR [rsp+0x60]
   1400084d8:	mov    rax,QWORD PTR [rax+0x18]
   1400084dc:	sub    rax,rcx
   1400084df:	mov    QWORD PTR [rsp+0x20],rax
   1400084e4:	mov    rax,QWORD PTR [rsp+0x20]
   1400084e9:	cmp    QWORD PTR [rsp+0x68],rax
   1400084ee:	ja     0x1400085ae
   1400084f4:	mov    rcx,QWORD PTR [rsp+0x68]
   1400084f9:	sub    rcx,0x1
   1400084fd:	mov    rax,QWORD PTR [rsp+0x20]
   140008502:	sub    rax,rcx
   140008505:	mov    QWORD PTR [rsp+0x20],rax
   14000850a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000850f:	call   0x140006370
   140008514:	mov    r11,rax
   140008517:	mov    rax,QWORD PTR [rsp+0x60]
   14000851c:	lea    rax,[r11+rax*2]
   140008520:	mov    QWORD PTR [rsp+0x30],rax
   140008525:	jmp    0x140008556
   140008527:	mov    rax,QWORD PTR [rsp+0x30]
   14000852c:	mov    rcx,QWORD PTR [rsp+0x28]
   140008531:	sub    rcx,rax
   140008534:	sar    rcx,1
   140008537:	add    rcx,0x1
   14000853b:	mov    rax,QWORD PTR [rsp+0x20]
   140008540:	sub    rax,rcx
   140008543:	mov    QWORD PTR [rsp+0x20],rax
   140008548:	mov    rax,QWORD PTR [rsp+0x28]
   14000854d:	add    rax,0x2
   140008551:	mov    QWORD PTR [rsp+0x30],rax
   140008556:	mov    r8,QWORD PTR [rsp+0x58]
   14000855b:	mov    rdx,QWORD PTR [rsp+0x20]
   140008560:	mov    rcx,QWORD PTR [rsp+0x30]
   140008565:	call   0x1400010b0
   14000856a:	mov    QWORD PTR [rsp+0x28],rax
   14000856f:	cmp    QWORD PTR [rsp+0x28],0x0
   140008575:	je     0x1400085ae
   140008577:	mov    r8,QWORD PTR [rsp+0x68]
   14000857c:	mov    rdx,QWORD PTR [rsp+0x58]
   140008581:	mov    rcx,QWORD PTR [rsp+0x28]
   140008586:	call   0x140001020
   14000858b:	test   eax,eax
   14000858d:	jne    0x1400085a9
   14000858f:	mov    rcx,QWORD PTR [rsp+0x50]
   140008594:	call   0x140006370
   140008599:	mov    r11,rax
   14000859c:	mov    rax,QWORD PTR [rsp+0x28]
   1400085a1:	sub    rax,r11
   1400085a4:	sar    rax,1
   1400085a7:	jmp    0x1400085b5
   1400085a9:	jmp    0x140008527
   1400085ae:	mov    rax,QWORD PTR [rip+0x36d43]        # 0x14003f2f8
   1400085b5:	add    rsp,0x48
   1400085b9:	ret    
   1400085ba:	int3   
   1400085bb:	int3   
   1400085bc:	int3   
   1400085bd:	int3   
   1400085be:	int3   
   1400085bf:	int3   
   1400085c0:	mov    QWORD PTR [rsp+0x18],r8
   1400085c5:	mov    QWORD PTR [rsp+0x10],rdx
   1400085ca:	mov    QWORD PTR [rsp+0x8],rcx
   1400085cf:	push   rbx
   1400085d0:	sub    rsp,0x50
   1400085d4:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400085dd:	mov    rax,QWORD PTR [rsp+0x68]
   1400085e2:	or     rax,0x7
   1400085e6:	mov    QWORD PTR [rsp+0x28],rax
   1400085eb:	mov    rcx,QWORD PTR [rsp+0x60]
   1400085f0:	call   0x140008430
   1400085f5:	cmp    rax,QWORD PTR [rsp+0x28]
   1400085fa:	jae    0x140008608
   1400085fc:	mov    rax,QWORD PTR [rsp+0x68]
   140008601:	mov    QWORD PTR [rsp+0x28],rax
   140008606:	jmp    0x140008684
   140008608:	xor    edx,edx
   14000860a:	mov    rax,QWORD PTR [rsp+0x60]
   14000860f:	mov    rax,QWORD PTR [rax+0x20]
   140008613:	mov    ecx,0x2
   140008618:	div    rcx
   14000861b:	mov    r8,rax
   14000861e:	xor    edx,edx
   140008620:	mov    rax,QWORD PTR [rsp+0x28]
   140008625:	mov    ecx,0x3
   14000862a:	div    rcx
   14000862d:	cmp    rax,r8
   140008630:	jae    0x140008684
   140008632:	xor    edx,edx
   140008634:	mov    rax,QWORD PTR [rsp+0x60]
   140008639:	mov    rax,QWORD PTR [rax+0x20]
   14000863d:	mov    ecx,0x2
   140008642:	div    rcx
   140008645:	mov    rbx,rax
   140008648:	mov    rcx,QWORD PTR [rsp+0x60]
   14000864d:	call   0x140008430
   140008652:	mov    rcx,rax
   140008655:	sub    rcx,rbx
   140008658:	mov    rax,QWORD PTR [rsp+0x60]
   14000865d:	cmp    QWORD PTR [rax+0x20],rcx
   140008661:	ja     0x140008684
   140008663:	xor    edx,edx
   140008665:	mov    rax,QWORD PTR [rsp+0x60]
   14000866a:	mov    rax,QWORD PTR [rax+0x20]
   14000866e:	mov    ecx,0x2
   140008673:	div    rcx
   140008676:	mov    rcx,QWORD PTR [rsp+0x60]
   14000867b:	add    rax,QWORD PTR [rcx+0x20]
   14000867f:	mov    QWORD PTR [rsp+0x28],rax
   140008684:	mov    QWORD PTR [rsp+0x20],0x0
   14000868d:	mov    rdx,QWORD PTR [rsp+0x28]
   140008692:	add    rdx,0x1
   140008696:	mov    rcx,QWORD PTR [rsp+0x60]
   14000869b:	call   0x140008770
   1400086a0:	mov    QWORD PTR [rsp+0x38],rax
   1400086a5:	mov    rax,QWORD PTR [rsp+0x38]
   1400086aa:	mov    QWORD PTR [rsp+0x20],rax
   1400086af:	cmp    QWORD PTR [rsp+0x70],0x0
   1400086b5:	jbe    0x1400086dc
   1400086b7:	mov    rcx,QWORD PTR [rsp+0x60]
   1400086bc:	call   0x140006370
   1400086c1:	mov    rdx,QWORD PTR [rsp+0x28]
   1400086c6:	add    rdx,0x1
   1400086ca:	mov    r9,QWORD PTR [rsp+0x70]
   1400086cf:	mov    r8,rax
   1400086d2:	mov    rcx,QWORD PTR [rsp+0x20]
   1400086d7:	call   0x14000b4b0
   1400086dc:	xor    r8d,r8d
   1400086df:	mov    dl,0x1
   1400086e1:	mov    rcx,QWORD PTR [rsp+0x60]
   1400086e6:	call   0x1400062d0
   1400086eb:	mov    r11,QWORD PTR [rsp+0x60]
   1400086f0:	mov    rax,QWORD PTR [rsp+0x20]
   1400086f5:	mov    QWORD PTR [r11+0x8],rax
   1400086f9:	mov    rcx,QWORD PTR [rsp+0x60]
   1400086fe:	mov    rax,QWORD PTR [rsp+0x28]
   140008703:	mov    QWORD PTR [rcx+0x20],rax
   140008707:	mov    rdx,QWORD PTR [rsp+0x70]
   14000870c:	mov    rcx,QWORD PTR [rsp+0x60]
   140008711:	call   0x140006140
   140008716:	add    rsp,0x50
   14000871a:	pop    rbx
   14000871b:	ret    
   14000871c:	int3   
   14000871d:	int3   
   14000871e:	int3   
   14000871f:	int3   
   140008720:	mov    QWORD PTR [rsp+0x10],rdx
   140008725:	mov    QWORD PTR [rsp+0x8],rcx
   14000872a:	sub    rsp,0x38
   14000872e:	mov    rax,QWORD PTR [rsp+0x40]
   140008733:	cmp    QWORD PTR [rax+0x8],0x0
   140008738:	jne    0x140008745
   14000873a:	mov    QWORD PTR [rsp+0x20],0x0
   140008743:	jmp    0x140008759
   140008745:	mov    rdx,QWORD PTR [rsp+0x48]
   14000874a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000874f:	call   0x14000a470
   140008754:	mov    QWORD PTR [rsp+0x20],rax
   140008759:	mov    rax,QWORD PTR [rsp+0x20]
   14000875e:	add    rsp,0x38
   140008762:	ret    
   140008763:	int3   
   140008764:	int3   
   140008765:	int3   
   140008766:	int3   
   140008767:	int3   
   140008768:	int3   
   140008769:	int3   
   14000876a:	int3   
   14000876b:	int3   
   14000876c:	int3   
   14000876d:	int3   
   14000876e:	int3   
   14000876f:	int3   
   140008770:	mov    QWORD PTR [rsp+0x10],rdx
   140008775:	mov    QWORD PTR [rsp+0x8],rcx
   14000877a:	sub    rsp,0x28
   14000877e:	xor    edx,edx
   140008780:	mov    rcx,QWORD PTR [rsp+0x38]
   140008785:	call   0x14000c0e0
   14000878a:	add    rsp,0x28
   14000878e:	ret    
   14000878f:	int3   
   140008790:	mov    QWORD PTR [rsp+0x8],rcx
   140008795:	sub    rsp,0x18
   140008799:	mov    rax,QWORD PTR [rsp+0x20]
   14000879e:	cmp    QWORD PTR [rax+0x18],0x0
   1400087a3:	jne    0x1400087af
   1400087a5:	mov    QWORD PTR [rsp],0x0
   1400087ad:	jmp    0x1400087d2
   1400087af:	mov    rax,QWORD PTR [rsp+0x20]
   1400087b4:	mov    rcx,QWORD PTR [rsp+0x20]
   1400087b9:	mov    rcx,QWORD PTR [rcx+0x18]
   1400087bd:	mov    rax,QWORD PTR [rax+0x28]
   1400087c1:	sub    rax,rcx
   1400087c4:	cqo    
   1400087c6:	mov    ecx,0x28
   1400087cb:	idiv   rcx
   1400087ce:	mov    QWORD PTR [rsp],rax
   1400087d2:	mov    rax,QWORD PTR [rsp]
   1400087d6:	add    rsp,0x18
   1400087da:	ret    
   1400087db:	int3   
   1400087dc:	int3   
   1400087dd:	int3   
   1400087de:	int3   
   1400087df:	int3   
   1400087e0:	mov    QWORD PTR [rsp+0x20],r9
   1400087e5:	mov    QWORD PTR [rsp+0x18],r8
   1400087ea:	mov    QWORD PTR [rsp+0x10],rdx
   1400087ef:	mov    QWORD PTR [rsp+0x8],rcx
   1400087f4:	push   rsi
   1400087f5:	push   rdi
   1400087f6:	sub    rsp,0x78
   1400087fa:	mov    rcx,QWORD PTR [rsp+0x90]
   140008802:	call   0x140006400
   140008807:	test   rax,rax
   14000880a:	jne    0x140008817
   14000880c:	mov    QWORD PTR [rsp+0x60],0x0
   140008815:	jmp    0x14000883e
   140008817:	lea    rdx,[rsp+0x28]
   14000881c:	mov    rcx,QWORD PTR [rsp+0x90]
   140008824:	call   0x140009d20
   140008829:	mov    rdx,rax
   14000882c:	mov    rcx,QWORD PTR [rsp+0xa0]
   140008834:	call   0x14000aaf0
   140008839:	mov    QWORD PTR [rsp+0x60],rax
   14000883e:	mov    rax,QWORD PTR [rsp+0x60]
   140008843:	mov    QWORD PTR [rsp+0x20],rax
   140008848:	lea    rdi,[rsp+0x50]
   14000884d:	mov    rsi,QWORD PTR [rsp+0xa0]
   140008855:	mov    ecx,0x10
   14000885a:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000885c:	mov    r9,QWORD PTR [rsp+0xa8]
   140008864:	mov    r8d,0x1
   14000886a:	lea    rdx,[rsp+0x50]
   14000886f:	mov    rcx,QWORD PTR [rsp+0x90]
   140008877:	call   0x140009d70
   14000887c:	lea    rdx,[rsp+0x38]
   140008881:	mov    rcx,QWORD PTR [rsp+0x90]
   140008889:	call   0x140009d20
   14000888e:	mov    r8,QWORD PTR [rsp+0x20]
   140008893:	mov    rdx,QWORD PTR [rsp+0x98]
   14000889b:	mov    rcx,rax
   14000889e:	call   0x14000adb0
   1400088a3:	mov    rax,QWORD PTR [rsp+0x98]
   1400088ab:	add    rsp,0x78
   1400088af:	pop    rdi
   1400088b0:	pop    rsi
   1400088b1:	ret    
   1400088b2:	int3   
   1400088b3:	int3   
   1400088b4:	int3   
   1400088b5:	int3   
   1400088b6:	int3   
   1400088b7:	int3   
   1400088b8:	int3   
   1400088b9:	int3   
   1400088ba:	int3   
   1400088bb:	int3   
   1400088bc:	int3   
   1400088bd:	int3   
   1400088be:	int3   
   1400088bf:	int3   
   1400088c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400088c5:	mov    QWORD PTR [rsp+0x8],rcx
   1400088ca:	sub    rsp,0x28
   1400088ce:	mov    rax,QWORD PTR [rsp+0x30]
   1400088d3:	mov    QWORD PTR [rax+0x18],0x0
   1400088db:	mov    rax,QWORD PTR [rsp+0x30]
   1400088e0:	mov    QWORD PTR [rax+0x20],0x0
   1400088e8:	mov    rax,QWORD PTR [rsp+0x30]
   1400088ed:	mov    QWORD PTR [rax+0x28],0x0
   1400088f5:	cmp    QWORD PTR [rsp+0x38],0x0
   1400088fb:	jne    0x140008903
   1400088fd:	xor    al,al
   1400088ff:	jmp    0x140008969
   140008901:	jmp    0x140008967
   140008903:	mov    rcx,QWORD PTR [rsp+0x30]
   140008908:	call   0x140009d50
   14000890d:	cmp    rax,QWORD PTR [rsp+0x38]
   140008912:	jae    0x14000891b
   140008914:	call   0x14000aa70
   140008919:	jmp    0x140008967
   14000891b:	mov    rcx,QWORD PTR [rsp+0x30]
   140008920:	add    rcx,0x10
   140008924:	mov    rdx,QWORD PTR [rsp+0x38]
   140008929:	call   0x14000a2d0
   14000892e:	mov    r11,rax
   140008931:	mov    rax,QWORD PTR [rsp+0x30]
   140008936:	mov    QWORD PTR [rax+0x18],r11
   14000893a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000893f:	mov    rax,QWORD PTR [rsp+0x30]
   140008944:	mov    rax,QWORD PTR [rax+0x18]
   140008948:	mov    QWORD PTR [rcx+0x20],rax
   14000894c:	mov    rcx,QWORD PTR [rsp+0x38]
   140008951:	imul   rcx,rcx,0x28
   140008955:	mov    rax,QWORD PTR [rsp+0x30]
   14000895a:	add    rcx,QWORD PTR [rax+0x18]
   14000895e:	mov    rax,QWORD PTR [rsp+0x30]
   140008963:	mov    QWORD PTR [rax+0x28],rcx
   140008967:	mov    al,0x1
   140008969:	add    rsp,0x28
   14000896d:	ret    
   14000896e:	int3   
   14000896f:	int3   
   140008970:	mov    QWORD PTR [rsp+0x18],r8
   140008975:	mov    QWORD PTR [rsp+0x10],rdx
   14000897a:	mov    QWORD PTR [rsp+0x8],rcx
   14000897f:	sub    rsp,0x28
   140008983:	mov    r8,QWORD PTR [rsp+0x30]
   140008988:	add    r8,0x10
   14000898c:	mov    rdx,QWORD PTR [rsp+0x40]
   140008991:	mov    rcx,QWORD PTR [rsp+0x38]
   140008996:	call   0x14000c150
   14000899b:	add    rsp,0x28
   14000899f:	ret    
   1400089a0:	mov    QWORD PTR [rsp+0x20],r9
   1400089a5:	mov    QWORD PTR [rsp+0x18],r8
   1400089aa:	mov    QWORD PTR [rsp+0x10],rdx
   1400089af:	mov    QWORD PTR [rsp+0x8],rcx
   1400089b4:	sub    rsp,0x28
   1400089b8:	mov    r9,QWORD PTR [rsp+0x30]
   1400089bd:	add    r9,0x10
   1400089c1:	mov    r8,QWORD PTR [rsp+0x48]
   1400089c6:	mov    rdx,QWORD PTR [rsp+0x40]
   1400089cb:	mov    rcx,QWORD PTR [rsp+0x38]
   1400089d0:	call   0x14000c1a0
   1400089d5:	mov    rcx,QWORD PTR [rsp+0x40]
   1400089da:	imul   rcx,rcx,0x28
   1400089de:	mov    rax,QWORD PTR [rsp+0x38]
   1400089e3:	add    rax,rcx
   1400089e6:	add    rsp,0x28
   1400089ea:	ret    
   1400089eb:	int3   
   1400089ec:	int3   
   1400089ed:	int3   
   1400089ee:	int3   
   1400089ef:	int3   
   1400089f0:	mov    QWORD PTR [rsp+0x18],r8
   1400089f5:	mov    QWORD PTR [rsp+0x10],rdx
   1400089fa:	mov    QWORD PTR [rsp+0x8],rcx
   1400089ff:	sub    rsp,0x28
   140008a03:	mov    rcx,QWORD PTR [rsp+0x38]
   140008a08:	call   0x14001c4dc
   140008a0d:	add    rsp,0x28
   140008a11:	ret    
   140008a12:	int3   
   140008a13:	int3   
   140008a14:	int3   
   140008a15:	int3   
   140008a16:	int3   
   140008a17:	int3   
   140008a18:	int3   
   140008a19:	int3   
   140008a1a:	int3   
   140008a1b:	int3   
   140008a1c:	int3   
   140008a1d:	int3   
   140008a1e:	int3   
   140008a1f:	int3   
   140008a20:	mov    QWORD PTR [rsp+0x18],r8
   140008a25:	mov    QWORD PTR [rsp+0x10],rdx
   140008a2a:	mov    QWORD PTR [rsp+0x8],rcx
   140008a2f:	sub    rsp,0x28
   140008a33:	mov    r8,QWORD PTR [rsp+0x30]
   140008a38:	add    r8,0x10
   140008a3c:	mov    rdx,QWORD PTR [rsp+0x40]
   140008a41:	mov    rcx,QWORD PTR [rsp+0x38]
   140008a46:	call   0x14000c210
   140008a4b:	add    rsp,0x28
   140008a4f:	ret    
   140008a50:	mov    QWORD PTR [rsp+0x8],rcx
   140008a55:	sub    rsp,0x18
   140008a59:	mov    rax,QWORD PTR [rsp+0x20]
   140008a5e:	cmp    QWORD PTR [rax+0x18],0x0
   140008a63:	jne    0x140008a6f
   140008a65:	mov    QWORD PTR [rsp],0x0
   140008a6d:	jmp    0x140008a92
   140008a6f:	mov    rax,QWORD PTR [rsp+0x20]
   140008a74:	mov    rcx,QWORD PTR [rsp+0x20]
   140008a79:	mov    rcx,QWORD PTR [rcx+0x18]
   140008a7d:	mov    rax,QWORD PTR [rax+0x28]
   140008a81:	sub    rax,rcx
   140008a84:	cqo    
   140008a86:	mov    ecx,0x50
   140008a8b:	idiv   rcx
   140008a8e:	mov    QWORD PTR [rsp],rax
   140008a92:	mov    rax,QWORD PTR [rsp]
   140008a96:	add    rsp,0x18
   140008a9a:	ret    
   140008a9b:	int3   
   140008a9c:	int3   
   140008a9d:	int3   
   140008a9e:	int3   
   140008a9f:	int3   
   140008aa0:	mov    QWORD PTR [rsp+0x8],rcx
   140008aa5:	mov    rax,QWORD PTR [rsp+0x8]
   140008aaa:	mov    rcx,QWORD PTR [rsp+0x8]
   140008aaf:	mov    rcx,QWORD PTR [rcx+0x18]
   140008ab3:	mov    rax,QWORD PTR [rax+0x20]
   140008ab7:	sub    rax,rcx
   140008aba:	cqo    
   140008abc:	mov    ecx,0x50
   140008ac1:	idiv   rcx
   140008ac4:	ret    
   140008ac5:	int3   
   140008ac6:	int3   
   140008ac7:	int3   
   140008ac8:	int3   
   140008ac9:	int3   
   140008aca:	int3   
   140008acb:	int3   
   140008acc:	int3   
   140008acd:	int3   
   140008ace:	int3   
   140008acf:	int3   
   140008ad0:	mov    QWORD PTR [rsp+0x20],r9
   140008ad5:	mov    QWORD PTR [rsp+0x18],r8
   140008ada:	mov    QWORD PTR [rsp+0x10],rdx
   140008adf:	mov    QWORD PTR [rsp+0x8],rcx
   140008ae4:	push   rsi
   140008ae5:	push   rdi
   140008ae6:	sub    rsp,0x78
   140008aea:	mov    rcx,QWORD PTR [rsp+0x90]
   140008af2:	call   0x140008aa0
   140008af7:	test   rax,rax
   140008afa:	jne    0x140008b07
   140008afc:	mov    QWORD PTR [rsp+0x60],0x0
   140008b05:	jmp    0x140008b2e
   140008b07:	lea    rdx,[rsp+0x28]
   140008b0c:	mov    rcx,QWORD PTR [rsp+0x90]
   140008b14:	call   0x140009d20
   140008b19:	mov    rdx,rax
   140008b1c:	mov    rcx,QWORD PTR [rsp+0xa0]
   140008b24:	call   0x14000ab60
   140008b29:	mov    QWORD PTR [rsp+0x60],rax
   140008b2e:	mov    rax,QWORD PTR [rsp+0x60]
   140008b33:	mov    QWORD PTR [rsp+0x20],rax
   140008b38:	lea    rdi,[rsp+0x50]
   140008b3d:	mov    rsi,QWORD PTR [rsp+0xa0]
   140008b45:	mov    ecx,0x10
   140008b4a:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008b4c:	mov    r9,QWORD PTR [rsp+0xa8]
   140008b54:	mov    r8d,0x1
   140008b5a:	lea    rdx,[rsp+0x50]
   140008b5f:	mov    rcx,QWORD PTR [rsp+0x90]
   140008b67:	call   0x14000a500
   140008b6c:	lea    rdx,[rsp+0x38]
   140008b71:	mov    rcx,QWORD PTR [rsp+0x90]
   140008b79:	call   0x140009d20
   140008b7e:	mov    r8,QWORD PTR [rsp+0x20]
   140008b83:	mov    rdx,QWORD PTR [rsp+0x98]
   140008b8b:	mov    rcx,rax
   140008b8e:	call   0x14000ae30
   140008b93:	mov    rax,QWORD PTR [rsp+0x98]
   140008b9b:	add    rsp,0x78
   140008b9f:	pop    rdi
   140008ba0:	pop    rsi
   140008ba1:	ret    
   140008ba2:	int3   
   140008ba3:	int3   
   140008ba4:	int3   
   140008ba5:	int3   
   140008ba6:	int3   
   140008ba7:	int3   
   140008ba8:	int3   
   140008ba9:	int3   
   140008baa:	int3   
   140008bab:	int3   
   140008bac:	int3   
   140008bad:	int3   
   140008bae:	int3   
   140008baf:	int3   
   140008bb0:	mov    QWORD PTR [rsp+0x10],rdx
   140008bb5:	mov    QWORD PTR [rsp+0x8],rcx
   140008bba:	sub    rsp,0x28
   140008bbe:	mov    rax,QWORD PTR [rsp+0x30]
   140008bc3:	mov    QWORD PTR [rax+0x18],0x0
   140008bcb:	mov    rax,QWORD PTR [rsp+0x30]
   140008bd0:	mov    QWORD PTR [rax+0x20],0x0
   140008bd8:	mov    rax,QWORD PTR [rsp+0x30]
   140008bdd:	mov    QWORD PTR [rax+0x28],0x0
   140008be5:	cmp    QWORD PTR [rsp+0x38],0x0
   140008beb:	jne    0x140008bf3
   140008bed:	xor    al,al
   140008bef:	jmp    0x140008c59
   140008bf1:	jmp    0x140008c57
   140008bf3:	mov    rcx,QWORD PTR [rsp+0x30]
   140008bf8:	call   0x14000a4e0
   140008bfd:	cmp    rax,QWORD PTR [rsp+0x38]
   140008c02:	jae    0x140008c0b
   140008c04:	call   0x14000aa70
   140008c09:	jmp    0x140008c57
   140008c0b:	mov    rcx,QWORD PTR [rsp+0x30]
   140008c10:	add    rcx,0x10
   140008c14:	mov    rdx,QWORD PTR [rsp+0x38]
   140008c19:	call   0x14000aad0
   140008c1e:	mov    r11,rax
   140008c21:	mov    rax,QWORD PTR [rsp+0x30]
   140008c26:	mov    QWORD PTR [rax+0x18],r11
   140008c2a:	mov    rcx,QWORD PTR [rsp+0x30]
   140008c2f:	mov    rax,QWORD PTR [rsp+0x30]
   140008c34:	mov    rax,QWORD PTR [rax+0x18]
   140008c38:	mov    QWORD PTR [rcx+0x20],rax
   140008c3c:	mov    rcx,QWORD PTR [rsp+0x38]
   140008c41:	imul   rcx,rcx,0x50
   140008c45:	mov    rax,QWORD PTR [rsp+0x30]
   140008c4a:	add    rcx,QWORD PTR [rax+0x18]
   140008c4e:	mov    rax,QWORD PTR [rsp+0x30]
   140008c53:	mov    QWORD PTR [rax+0x28],rcx
   140008c57:	mov    al,0x1
   140008c59:	add    rsp,0x28
   140008c5d:	ret    
   140008c5e:	int3   
   140008c5f:	int3   
   140008c60:	mov    QWORD PTR [rsp+0x18],r8
   140008c65:	mov    QWORD PTR [rsp+0x10],rdx
   140008c6a:	mov    QWORD PTR [rsp+0x8],rcx
   140008c6f:	sub    rsp,0x28
   140008c73:	mov    r8,QWORD PTR [rsp+0x30]
   140008c78:	add    r8,0x10
   140008c7c:	mov    rdx,QWORD PTR [rsp+0x40]
   140008c81:	mov    rcx,QWORD PTR [rsp+0x38]
   140008c86:	call   0x14000c260
   140008c8b:	add    rsp,0x28
   140008c8f:	ret    
   140008c90:	mov    QWORD PTR [rsp+0x20],r9
   140008c95:	mov    QWORD PTR [rsp+0x18],r8
   140008c9a:	mov    QWORD PTR [rsp+0x10],rdx
   140008c9f:	mov    QWORD PTR [rsp+0x8],rcx
   140008ca4:	sub    rsp,0x28
   140008ca8:	mov    r9,QWORD PTR [rsp+0x30]
   140008cad:	add    r9,0x10
   140008cb1:	mov    r8,QWORD PTR [rsp+0x48]
   140008cb6:	mov    rdx,QWORD PTR [rsp+0x40]
   140008cbb:	mov    rcx,QWORD PTR [rsp+0x38]
   140008cc0:	call   0x14000c2b0
   140008cc5:	mov    rcx,QWORD PTR [rsp+0x40]
   140008cca:	imul   rcx,rcx,0x50
   140008cce:	mov    rax,QWORD PTR [rsp+0x38]
   140008cd3:	add    rax,rcx
   140008cd6:	add    rsp,0x28
   140008cda:	ret    
   140008cdb:	int3   
   140008cdc:	int3   
   140008cdd:	int3   
   140008cde:	int3   
   140008cdf:	int3   
   140008ce0:	mov    QWORD PTR [rsp+0x8],rcx
   140008ce5:	sub    rsp,0x28
   140008ce9:	mov    rax,QWORD PTR [rsp+0x30]
   140008cee:	mov    rax,QWORD PTR [rax]
   140008cf1:	mov    rax,QWORD PTR [rax]
   140008cf4:	movsxd rcx,DWORD PTR [rax+0x4]
   140008cf8:	mov    rax,QWORD PTR [rsp+0x30]
   140008cfd:	add    rcx,QWORD PTR [rax]
   140008d00:	call   0x140003440
   140008d05:	test   rax,rax
   140008d08:	je     0x140008d2e
   140008d0a:	mov    rax,QWORD PTR [rsp+0x30]
   140008d0f:	mov    rax,QWORD PTR [rax]
   140008d12:	mov    rax,QWORD PTR [rax]
   140008d15:	movsxd rcx,DWORD PTR [rax+0x4]
   140008d19:	mov    rax,QWORD PTR [rsp+0x30]
   140008d1e:	add    rcx,QWORD PTR [rax]
   140008d21:	call   0x140003440
   140008d26:	mov    rcx,rax
   140008d29:	call   0x140005a40
   140008d2e:	add    rsp,0x28
   140008d32:	ret    
   140008d33:	int3   
   140008d34:	int3   
   140008d35:	int3   
   140008d36:	int3   
   140008d37:	int3   
   140008d38:	int3   
   140008d39:	int3   
   140008d3a:	int3   
   140008d3b:	int3   
   140008d3c:	int3   
   140008d3d:	int3   
   140008d3e:	int3   
   140008d3f:	int3   
   140008d40:	mov    QWORD PTR [rsp+0x8],rcx
   140008d45:	mov    rax,QWORD PTR [rsp+0x8]
   140008d4a:	movsxd rax,DWORD PTR [rax+0x8]
   140008d4e:	mov    rcx,QWORD PTR [rsp+0x8]
   140008d53:	add    rax,QWORD PTR [rcx]
   140008d56:	ret    
   140008d57:	int3   
   140008d58:	int3   
   140008d59:	int3   
   140008d5a:	int3   
   140008d5b:	int3   
   140008d5c:	int3   
   140008d5d:	int3   
   140008d5e:	int3   
   140008d5f:	int3   
   140008d60:	mov    QWORD PTR [rsp+0x18],r8
   140008d65:	mov    QWORD PTR [rsp+0x10],rdx
   140008d6a:	mov    QWORD PTR [rsp+0x8],rcx
   140008d6f:	sub    rsp,0x28
   140008d73:	mov    rcx,QWORD PTR [rsp+0x30]
   140008d78:	call   0x140007970
   140008d7d:	cmp    QWORD PTR [rsp+0x40],0x0
   140008d83:	je     0x140008da5
   140008d85:	mov    rcx,QWORD PTR [rsp+0x40]
   140008d8a:	mov    rax,QWORD PTR [rsp+0x38]
   140008d8f:	cmp    QWORD PTR [rcx+0x18],rax
   140008d93:	ja     0x140008da5
   140008d95:	mov    rax,QWORD PTR [rsp+0x40]
   140008d9a:	mov    rax,QWORD PTR [rax+0x20]
   140008d9e:	cmp    QWORD PTR [rsp+0x38],rax
   140008da3:	jbe    0x140008daa
   140008da5:	call   0x14001cd78
   140008daa:	xor    eax,eax
   140008dac:	test   eax,eax
   140008dae:	jne    0x140008daa
   140008db0:	mov    rdx,QWORD PTR [rsp+0x40]
   140008db5:	mov    rcx,QWORD PTR [rsp+0x30]
   140008dba:	call   0x140001330
   140008dbf:	mov    r11,QWORD PTR [rsp+0x30]
   140008dc4:	mov    rax,QWORD PTR [rsp+0x38]
   140008dc9:	mov    QWORD PTR [r11+0x8],rax
   140008dcd:	mov    rax,QWORD PTR [rsp+0x30]
   140008dd2:	add    rsp,0x28
   140008dd6:	ret    
   140008dd7:	int3   
   140008dd8:	int3   
   140008dd9:	int3   
   140008dda:	int3   
   140008ddb:	int3   
   140008ddc:	int3   
   140008ddd:	int3   
   140008dde:	int3   
   140008ddf:	int3   
   140008de0:	mov    DWORD PTR [rsp+0x18],r8d
   140008de5:	mov    QWORD PTR [rsp+0x10],rdx
   140008dea:	mov    QWORD PTR [rsp+0x8],rcx
   140008def:	sub    rsp,0x38
   140008df3:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140008dfc:	mov    DWORD PTR [rsp+0x20],0x0
   140008e04:	cmp    DWORD PTR [rsp+0x50],0x0
   140008e09:	je     0x140008e44
   140008e0b:	mov    rcx,QWORD PTR [rsp+0x40]
   140008e10:	lea    rax,[rip+0x36541]        # 0x14003f358
   140008e17:	mov    QWORD PTR [rcx],rax
   140008e1a:	mov    rcx,QWORD PTR [rsp+0x40]
   140008e1f:	lea    rax,[rip+0x3651a]        # 0x14003f340
   140008e26:	mov    QWORD PTR [rcx+0x10],rax
   140008e2a:	mov    rcx,QWORD PTR [rsp+0x40]
   140008e2f:	add    rcx,0x18
   140008e33:	call   0x140007dc0
   140008e38:	nop
   140008e39:	mov    eax,DWORD PTR [rsp+0x20]
   140008e3d:	or     eax,0x1
   140008e40:	mov    DWORD PTR [rsp+0x20],eax
   140008e44:	xor    r9d,r9d
   140008e47:	xor    r8d,r8d
   140008e4a:	mov    rdx,QWORD PTR [rsp+0x48]
   140008e4f:	mov    rcx,QWORD PTR [rsp+0x40]
   140008e54:	call   0x1400093a0
   140008e59:	nop
   140008e5a:	mov    rcx,QWORD PTR [rsp+0x40]
   140008e5f:	add    rcx,0x10
   140008e63:	xor    r9d,r9d
   140008e66:	xor    r8d,r8d
   140008e69:	xor    edx,edx
   140008e6b:	call   0x1400092e0
   140008e70:	mov    rax,QWORD PTR [rsp+0x40]
   140008e75:	mov    rax,QWORD PTR [rax]
   140008e78:	movsxd rdx,DWORD PTR [rax+0x4]
   140008e7c:	mov    rcx,QWORD PTR [rsp+0x40]
   140008e81:	lea    rax,[rip+0x364c8]        # 0x14003f350
   140008e88:	mov    QWORD PTR [rcx+rdx*1],rax
   140008e8c:	mov    rax,QWORD PTR [rsp+0x40]
   140008e91:	add    rsp,0x38
   140008e95:	ret    
   140008e96:	int3   
   140008e97:	int3   
   140008e98:	int3   
   140008e99:	int3   
   140008e9a:	int3   
   140008e9b:	int3   
   140008e9c:	int3   
   140008e9d:	int3   
   140008e9e:	int3   
   140008e9f:	int3   
   140008ea0:	mov    DWORD PTR [rsp+0x10],edx
   140008ea4:	mov    QWORD PTR [rsp+0x8],rcx
   140008ea9:	sub    rsp,0x38
   140008ead:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008eb6:	mov    rcx,QWORD PTR [rsp+0x40]
   140008ebb:	call   0x140009460
   140008ec0:	nop
   140008ec1:	mov    rcx,QWORD PTR [rsp+0x40]
   140008ec6:	lea    rax,[rip+0x3649b]        # 0x14003f368
   140008ecd:	mov    QWORD PTR [rcx],rax
   140008ed0:	mov    rcx,QWORD PTR [rsp+0x40]
   140008ed5:	add    rcx,0x7c
   140008ed9:	call   0x140005660
   140008ede:	mov    edx,DWORD PTR [rsp+0x48]
   140008ee2:	mov    rcx,QWORD PTR [rsp+0x40]
   140008ee7:	call   0x14000ad40
   140008eec:	mov    r9d,eax
   140008eef:	xor    r8d,r8d
   140008ef2:	xor    edx,edx
   140008ef4:	mov    rcx,QWORD PTR [rsp+0x40]
   140008ef9:	call   0x14000abd0
   140008efe:	nop
   140008eff:	mov    rax,QWORD PTR [rsp+0x40]
   140008f04:	add    rsp,0x38
   140008f08:	ret    
   140008f09:	int3   
   140008f0a:	int3   
   140008f0b:	int3   
   140008f0c:	int3   
   140008f0d:	int3   
   140008f0e:	int3   
   140008f0f:	int3   
   140008f10:	mov    QWORD PTR [rsp+0x10],rdx
   140008f15:	mov    QWORD PTR [rsp+0x8],rcx
   140008f1a:	push   rbx
   140008f1b:	sub    rsp,0xc0
   140008f22:	mov    QWORD PTR [rsp+0xa8],0xfffffffffffffffe
   140008f2e:	mov    rax,QWORD PTR [rip+0x4052b]        # 0x140049460
   140008f35:	xor    rax,rsp
   140008f38:	mov    QWORD PTR [rsp+0xb8],rax
   140008f40:	mov    DWORD PTR [rsp+0xa0],0x0
   140008f4b:	mov    rax,QWORD PTR [rsp+0xd0]
   140008f53:	mov    eax,DWORD PTR [rax+0x78]
   140008f56:	and    eax,0x2
   140008f59:	test   eax,eax
   140008f5b:	jne    0x140009038
   140008f61:	mov    rcx,QWORD PTR [rsp+0xd0]
   140008f69:	call   0x140005a80
   140008f6e:	test   rax,rax
   140008f71:	je     0x140009038
   140008f77:	mov    rcx,QWORD PTR [rsp+0xd0]
   140008f7f:	call   0x140005a80
   140008f84:	mov    r11,rax
   140008f87:	mov    rax,QWORD PTR [rsp+0xd0]
   140008f8f:	cmp    QWORD PTR [rax+0x70],r11
   140008f93:	jae    0x140008fac
   140008f95:	mov    rcx,QWORD PTR [rsp+0xd0]
   140008f9d:	call   0x140005a80
   140008fa2:	mov    QWORD PTR [rsp+0xb0],rax
   140008faa:	jmp    0x140008fc0
   140008fac:	mov    rax,QWORD PTR [rsp+0xd0]
   140008fb4:	mov    rax,QWORD PTR [rax+0x70]
   140008fb8:	mov    QWORD PTR [rsp+0xb0],rax
   140008fc0:	mov    rcx,QWORD PTR [rsp+0xd0]
   140008fc8:	call   0x140007e30
   140008fcd:	mov    rbx,QWORD PTR [rsp+0xb0]
   140008fd5:	sub    rbx,rax
   140008fd8:	sar    rbx,1
   140008fdb:	mov    rcx,QWORD PTR [rsp+0xd0]
   140008fe3:	call   0x140007e30
   140008fe8:	mov    r8,rbx
   140008feb:	mov    rdx,rax
   140008fee:	lea    rcx,[rsp+0x28]
   140008ff3:	call   0x1400094f0
   140008ff8:	nop
   140008ff9:	lea    rdx,[rsp+0x28]
   140008ffe:	mov    rcx,QWORD PTR [rsp+0xd8]
   140009006:	call   0x140005d30
   14000900b:	mov    eax,DWORD PTR [rsp+0xa0]
   140009012:	or     eax,0x1
   140009015:	mov    DWORD PTR [rsp+0xa0],eax
   14000901c:	lea    rcx,[rsp+0x28]
   140009021:	call   0x140003a90
   140009026:	mov    rax,QWORD PTR [rsp+0xd8]
   14000902e:	jmp    0x14000911a
   140009033:	jmp    0x14000911a
   140009038:	mov    rax,QWORD PTR [rsp+0xd0]
   140009040:	mov    eax,DWORD PTR [rax+0x78]
   140009043:	and    eax,0x4
   140009046:	test   eax,eax
   140009048:	jne    0x1400090da
   14000904e:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009056:	call   0x140005a60
   14000905b:	test   rax,rax
   14000905e:	je     0x1400090da
   140009060:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009068:	call   0x140007e50
   14000906d:	mov    rbx,rax
   140009070:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009078:	call   0x140007e10
   14000907d:	sub    rbx,rax
   140009080:	sar    rbx,1
   140009083:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000908b:	call   0x140007e10
   140009090:	mov    r8,rbx
   140009093:	mov    rdx,rax
   140009096:	lea    rcx,[rsp+0x50]
   14000909b:	call   0x1400094f0
   1400090a0:	nop
   1400090a1:	lea    rdx,[rsp+0x50]
   1400090a6:	mov    rcx,QWORD PTR [rsp+0xd8]
   1400090ae:	call   0x140005d30
   1400090b3:	mov    eax,DWORD PTR [rsp+0xa0]
   1400090ba:	or     eax,0x1
   1400090bd:	mov    DWORD PTR [rsp+0xa0],eax
   1400090c4:	lea    rcx,[rsp+0x50]
   1400090c9:	call   0x140003a90
   1400090ce:	mov    rax,QWORD PTR [rsp+0xd8]
   1400090d6:	jmp    0x14000911a
   1400090d8:	jmp    0x14000911a
   1400090da:	lea    rcx,[rsp+0x78]
   1400090df:	call   0x140005c70
   1400090e4:	nop
   1400090e5:	lea    rdx,[rsp+0x78]
   1400090ea:	mov    rcx,QWORD PTR [rsp+0xd8]
   1400090f2:	call   0x140005d30
   1400090f7:	mov    eax,DWORD PTR [rsp+0xa0]
   1400090fe:	or     eax,0x1
   140009101:	mov    DWORD PTR [rsp+0xa0],eax
   140009108:	lea    rcx,[rsp+0x78]
   14000910d:	call   0x140003a90
   140009112:	mov    rax,QWORD PTR [rsp+0xd8]
   14000911a:	mov    rcx,QWORD PTR [rsp+0xb8]
   140009122:	xor    rcx,rsp
   140009125:	call   0x14001c500
   14000912a:	add    rsp,0xc0
   140009131:	pop    rbx
   140009132:	ret    
   140009133:	int3   
   140009134:	int3   
   140009135:	int3   
   140009136:	int3   
   140009137:	int3   
   140009138:	int3   
   140009139:	int3   
   14000913a:	int3   
   14000913b:	int3   
   14000913c:	int3   
   14000913d:	int3   
   14000913e:	int3   
   14000913f:	int3   
   140009140:	mov    QWORD PTR [rsp+0x8],rcx
   140009145:	push   rbx
   140009146:	sub    rsp,0x30
   14000914a:	mov    rax,QWORD PTR [rsp+0x40]
   14000914f:	mov    eax,DWORD PTR [rax+0x78]
   140009152:	and    eax,0x1
   140009155:	test   eax,eax
   140009157:	je     0x1400091bb
   140009159:	mov    rcx,QWORD PTR [rsp+0x40]
   14000915e:	call   0x140005a80
   140009163:	test   rax,rax
   140009166:	je     0x140009179
   140009168:	mov    rcx,QWORD PTR [rsp+0x40]
   14000916d:	call   0x140007ee0
   140009172:	mov    QWORD PTR [rsp+0x20],rax
   140009177:	jmp    0x140009188
   140009179:	mov    rcx,QWORD PTR [rsp+0x40]
   14000917e:	call   0x140007e50
   140009183:	mov    QWORD PTR [rsp+0x20],rax
   140009188:	mov    rcx,QWORD PTR [rsp+0x40]
   14000918d:	call   0x140007e10
   140009192:	mov    rbx,QWORD PTR [rsp+0x20]
   140009197:	sub    rbx,rax
   14000919a:	sar    rbx,1
   14000919d:	mov    rcx,QWORD PTR [rsp+0x40]
   1400091a2:	call   0x140007e10
   1400091a7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400091ac:	add    rcx,0x7c
   1400091b0:	mov    r8,rbx
   1400091b3:	mov    rdx,rax
   1400091b6:	call   0x1400089f0
   1400091bb:	xor    r9d,r9d
   1400091be:	xor    r8d,r8d
   1400091c1:	xor    edx,edx
   1400091c3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400091c8:	call   0x140007e80
   1400091cd:	xor    r8d,r8d
   1400091d0:	xor    edx,edx
   1400091d2:	mov    rcx,QWORD PTR [rsp+0x40]
   1400091d7:	call   0x140007f10
   1400091dc:	mov    r11,QWORD PTR [rsp+0x40]
   1400091e1:	mov    QWORD PTR [r11+0x70],0x0
   1400091e9:	mov    rax,QWORD PTR [rsp+0x40]
   1400091ee:	mov    ecx,DWORD PTR [rax+0x78]
   1400091f1:	and    ecx,0xfffffffe
   1400091f4:	mov    rax,QWORD PTR [rsp+0x40]
   1400091f9:	mov    DWORD PTR [rax+0x78],ecx
   1400091fc:	add    rsp,0x30
   140009200:	pop    rbx
   140009201:	ret    
   140009202:	int3   
   140009203:	int3   
   140009204:	int3   
   140009205:	int3   
   140009206:	int3   
   140009207:	int3   
   140009208:	int3   
   140009209:	int3   
   14000920a:	int3   
   14000920b:	int3   
   14000920c:	int3   
   14000920d:	int3   
   14000920e:	int3   
   14000920f:	int3   
   140009210:	mov    QWORD PTR [rsp+0x18],r8
   140009215:	mov    QWORD PTR [rsp+0x10],rdx
   14000921a:	mov    QWORD PTR [rsp+0x8],rcx
   14000921f:	sub    rsp,0x28
   140009223:	mov    r8,QWORD PTR [rsp+0x40]
   140009228:	mov    rdx,QWORD PTR [rsp+0x38]
   14000922d:	mov    rcx,QWORD PTR [rsp+0x30]
   140009232:	call   0x14000a310
   140009237:	mov    rax,QWORD PTR [rsp+0x30]
   14000923c:	add    rsp,0x28
   140009240:	ret    
   140009241:	int3   
   140009242:	int3   
   140009243:	int3   
   140009244:	int3   
   140009245:	int3   
   140009246:	int3   
   140009247:	int3   
   140009248:	int3   
   140009249:	int3   
   14000924a:	int3   
   14000924b:	int3   
   14000924c:	int3   
   14000924d:	int3   
   14000924e:	int3   
   14000924f:	int3   
   140009250:	mov    QWORD PTR [rsp+0x10],rdx
   140009255:	mov    QWORD PTR [rsp+0x8],rcx
   14000925a:	sub    rsp,0x28
   14000925e:	mov    rdx,QWORD PTR [rsp+0x38]
   140009263:	mov    rcx,QWORD PTR [rsp+0x30]
   140009268:	call   0x14000a3a0
   14000926d:	mov    rax,QWORD PTR [rsp+0x30]
   140009272:	add    rsp,0x28
   140009276:	ret    
   140009277:	int3   
   140009278:	int3   
   140009279:	int3   
   14000927a:	int3   
   14000927b:	int3   
   14000927c:	int3   
   14000927d:	int3   
   14000927e:	int3   
   14000927f:	int3   
   140009280:	mov    QWORD PTR [rsp+0x10],rdx
   140009285:	mov    QWORD PTR [rsp+0x8],rcx
   14000928a:	sub    rsp,0x28
   14000928e:	xor    edx,edx
   140009290:	mov    rcx,QWORD PTR [rsp+0x38]
   140009295:	call   0x14000c320
   14000929a:	add    rsp,0x28
   14000929e:	ret    
   14000929f:	int3   
   1400092a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400092a5:	sub    rsp,0x18
   1400092a9:	mov    QWORD PTR [rsp],0xffffffffffffffff
   1400092b1:	cmp    QWORD PTR [rsp],0x0
   1400092b6:	jbe    0x1400092c3
   1400092b8:	mov    rax,QWORD PTR [rsp]
   1400092bc:	mov    QWORD PTR [rsp+0x8],rax
   1400092c1:	jmp    0x1400092cc
   1400092c3:	mov    QWORD PTR [rsp+0x8],0x1
   1400092cc:	mov    rax,QWORD PTR [rsp+0x8]
   1400092d1:	add    rsp,0x18
   1400092d5:	ret    
   1400092d6:	int3   
   1400092d7:	int3   
   1400092d8:	int3   
   1400092d9:	int3   
   1400092da:	int3   
   1400092db:	int3   
   1400092dc:	int3   
   1400092dd:	int3   
   1400092de:	int3   
   1400092df:	int3   
   1400092e0:	mov    DWORD PTR [rsp+0x20],r9d
   1400092e5:	mov    BYTE PTR [rsp+0x18],r8b
   1400092ea:	mov    DWORD PTR [rsp+0x10],edx
   1400092ee:	mov    QWORD PTR [rsp+0x8],rcx
   1400092f3:	sub    rsp,0x48
   1400092f7:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140009300:	mov    DWORD PTR [rsp+0x20],0x0
   140009308:	cmp    DWORD PTR [rsp+0x68],0x0
   14000930d:	je     0x140009338
   14000930f:	mov    rcx,QWORD PTR [rsp+0x50]
   140009314:	lea    rax,[rip+0x36025]        # 0x14003f340
   14000931b:	mov    QWORD PTR [rcx],rax
   14000931e:	mov    rcx,QWORD PTR [rsp+0x50]
   140009323:	add    rcx,0x8
   140009327:	call   0x140007dc0
   14000932c:	nop
   14000932d:	mov    eax,DWORD PTR [rsp+0x20]
   140009331:	or     eax,0x1
   140009334:	mov    DWORD PTR [rsp+0x20],eax
   140009338:	mov    rax,QWORD PTR [rsp+0x50]
   14000933d:	mov    rax,QWORD PTR [rax]
   140009340:	movsxd rdx,DWORD PTR [rax+0x4]
   140009344:	mov    rcx,QWORD PTR [rsp+0x50]
   140009349:	lea    rax,[rip+0x315a8]        # 0x14003a8f8
   140009350:	mov    QWORD PTR [rcx+rdx*1],rax
   140009354:	movzx  eax,BYTE PTR [rsp+0x60]
   140009359:	test   eax,eax
   14000935b:	je     0x140009394
   14000935d:	cmp    QWORD PTR [rsp+0x50],0x0
   140009363:	jne    0x140009370
   140009365:	mov    QWORD PTR [rsp+0x30],0x0
   14000936e:	jmp    0x140009389
   140009370:	mov    rax,QWORD PTR [rsp+0x50]
   140009375:	mov    rax,QWORD PTR [rax]
   140009378:	movsxd rcx,DWORD PTR [rax+0x4]
   14000937c:	mov    rax,QWORD PTR [rsp+0x50]
   140009381:	add    rax,rcx
   140009384:	mov    QWORD PTR [rsp+0x30],rax
   140009389:	mov    rcx,QWORD PTR [rsp+0x30]
   14000938e:	call   0x14001a124
   140009393:	nop
   140009394:	mov    rax,QWORD PTR [rsp+0x50]
   140009399:	add    rsp,0x48
   14000939d:	ret    
   14000939e:	int3   
   14000939f:	int3   
   1400093a0:	mov    DWORD PTR [rsp+0x20],r9d
   1400093a5:	mov    BYTE PTR [rsp+0x18],r8b
   1400093aa:	mov    QWORD PTR [rsp+0x10],rdx
   1400093af:	mov    QWORD PTR [rsp+0x8],rcx
   1400093b4:	sub    rsp,0x38
   1400093b8:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400093c1:	mov    DWORD PTR [rsp+0x20],0x0
   1400093c9:	cmp    DWORD PTR [rsp+0x58],0x0
   1400093ce:	je     0x1400093f9
   1400093d0:	mov    rcx,QWORD PTR [rsp+0x40]
   1400093d5:	lea    rax,[rip+0x35f5c]        # 0x14003f338
   1400093dc:	mov    QWORD PTR [rcx],rax
   1400093df:	mov    rcx,QWORD PTR [rsp+0x40]
   1400093e4:	add    rcx,0x10
   1400093e8:	call   0x140007dc0
   1400093ed:	nop
   1400093ee:	mov    eax,DWORD PTR [rsp+0x20]
   1400093f2:	or     eax,0x1
   1400093f5:	mov    DWORD PTR [rsp+0x20],eax
   1400093f9:	mov    rax,QWORD PTR [rsp+0x40]
   1400093fe:	mov    rax,QWORD PTR [rax]
   140009401:	movsxd rdx,DWORD PTR [rax+0x4]
   140009405:	mov    rcx,QWORD PTR [rsp+0x40]
   14000940a:	lea    rax,[rip+0x35f1f]        # 0x14003f330
   140009411:	mov    QWORD PTR [rcx+rdx*1],rax
   140009415:	mov    rax,QWORD PTR [rsp+0x40]
   14000941a:	mov    QWORD PTR [rax+0x8],0x0
   140009422:	mov    rax,QWORD PTR [rsp+0x40]
   140009427:	mov    rax,QWORD PTR [rax]
   14000942a:	movsxd rax,DWORD PTR [rax+0x4]
   14000942e:	mov    rcx,QWORD PTR [rsp+0x40]
   140009433:	add    rcx,rax
   140009436:	movzx  r8d,BYTE PTR [rsp+0x50]
   14000943c:	mov    rdx,QWORD PTR [rsp+0x48]
   140009441:	call   0x14000af40
   140009446:	nop
   140009447:	mov    rax,QWORD PTR [rsp+0x40]
   14000944c:	add    rsp,0x38
   140009450:	ret    
   140009451:	int3   
   140009452:	int3   
   140009453:	int3   
   140009454:	int3   
   140009455:	int3   
   140009456:	int3   
   140009457:	int3   
   140009458:	int3   
   140009459:	int3   
   14000945a:	int3   
   14000945b:	int3   
   14000945c:	int3   
   14000945d:	int3   
   14000945e:	int3   
   14000945f:	int3   
   140009460:	mov    QWORD PTR [rsp+0x8],rcx
   140009465:	sub    rsp,0x48
   140009469:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140009472:	mov    rcx,QWORD PTR [rsp+0x50]
   140009477:	lea    rax,[rip+0x3151a]        # 0x14003a998
   14000947e:	mov    QWORD PTR [rcx],rax
   140009481:	mov    rcx,QWORD PTR [rsp+0x50]
   140009486:	add    rcx,0x8
   14000948a:	call   0x14001a1e4
   14000948f:	nop
   140009490:	mov    ecx,0x8
   140009495:	call   0x14001cb1c
   14000949a:	mov    QWORD PTR [rsp+0x20],rax
   14000949f:	cmp    QWORD PTR [rsp+0x20],0x0
   1400094a5:	je     0x1400094b8
   1400094a7:	mov    rcx,QWORD PTR [rsp+0x20]
   1400094ac:	call   0x140001b10
   1400094b1:	mov    QWORD PTR [rsp+0x30],rax
   1400094b6:	jmp    0x1400094c1
   1400094b8:	mov    QWORD PTR [rsp+0x30],0x0
   1400094c1:	mov    rcx,QWORD PTR [rsp+0x50]
   1400094c6:	mov    rax,QWORD PTR [rsp+0x30]
   1400094cb:	mov    QWORD PTR [rcx+0x68],rax
   1400094cf:	mov    rcx,QWORD PTR [rsp+0x50]
   1400094d4:	call   0x14000afe0
   1400094d9:	nop
   1400094da:	mov    rax,QWORD PTR [rsp+0x50]
   1400094df:	add    rsp,0x48
   1400094e3:	ret    
   1400094e4:	int3   
   1400094e5:	int3   
   1400094e6:	int3   
   1400094e7:	int3   
   1400094e8:	int3   
   1400094e9:	int3   
   1400094ea:	int3   
   1400094eb:	int3   
   1400094ec:	int3   
   1400094ed:	int3   
   1400094ee:	int3   
   1400094ef:	int3   
   1400094f0:	mov    QWORD PTR [rsp+0x18],r8
   1400094f5:	mov    QWORD PTR [rsp+0x10],rdx
   1400094fa:	mov    QWORD PTR [rsp+0x8],rcx
   1400094ff:	sub    rsp,0x38
   140009503:	lea    rax,[rsp+0x20]
   140009508:	mov    QWORD PTR [rsp+0x28],rax
   14000950d:	mov    rcx,QWORD PTR [rsp+0x28]
   140009512:	call   0x140005660
   140009517:	mov    rdx,rax
   14000951a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000951f:	call   0x140005630
   140009524:	xor    r8d,r8d
   140009527:	xor    edx,edx
   140009529:	mov    rcx,QWORD PTR [rsp+0x40]
   14000952e:	call   0x1400062d0
   140009533:	mov    r8,QWORD PTR [rsp+0x50]
   140009538:	mov    rdx,QWORD PTR [rsp+0x48]
   14000953d:	mov    rcx,QWORD PTR [rsp+0x40]
   140009542:	call   0x140003ae0
   140009547:	mov    rax,QWORD PTR [rsp+0x40]
   14000954c:	add    rsp,0x38
   140009550:	ret    
   140009551:	int3   
   140009552:	int3   
   140009553:	int3   
   140009554:	int3   
   140009555:	int3   
   140009556:	int3   
   140009557:	int3   
   140009558:	int3   
   140009559:	int3   
   14000955a:	int3   
   14000955b:	int3   
   14000955c:	int3   
   14000955d:	int3   
   14000955e:	int3   
   14000955f:	int3   
   140009560:	mov    QWORD PTR [rsp+0x18],r8
   140009565:	mov    QWORD PTR [rsp+0x10],rdx
   14000956a:	mov    QWORD PTR [rsp+0x8],rcx
   14000956f:	push   rbx
   140009570:	sub    rsp,0x30
   140009574:	mov    rdx,QWORD PTR [rsp+0x48]
   140009579:	mov    rcx,QWORD PTR [rsp+0x40]
   14000957e:	call   0x140006270
   140009583:	movzx  eax,al
   140009586:	test   eax,eax
   140009588:	je     0x1400095b8
   14000958a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000958f:	call   0x140006370
   140009594:	mov    r8,QWORD PTR [rsp+0x48]
   140009599:	sub    r8,rax
   14000959c:	sar    r8,1
   14000959f:	mov    r9,QWORD PTR [rsp+0x50]
   1400095a4:	mov    rdx,QWORD PTR [rsp+0x40]
   1400095a9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400095ae:	call   0x140008020
   1400095b3:	jmp    0x140009679
   1400095b8:	mov    rcx,QWORD PTR [rsp+0x40]
   1400095bd:	mov    rcx,QWORD PTR [rcx+0x18]
   1400095c1:	mov    rax,QWORD PTR [rip+0x35d30]        # 0x14003f2f8
   1400095c8:	sub    rax,rcx
   1400095cb:	cmp    rax,QWORD PTR [rsp+0x50]
   1400095d0:	jbe    0x1400095eb
   1400095d2:	mov    rcx,QWORD PTR [rsp+0x40]
   1400095d7:	mov    rcx,QWORD PTR [rcx+0x18]
   1400095db:	add    rcx,QWORD PTR [rsp+0x50]
   1400095e0:	mov    rax,QWORD PTR [rsp+0x40]
   1400095e5:	cmp    rcx,QWORD PTR [rax+0x18]
   1400095e9:	jae    0x1400095f0
   1400095eb:	call   0x14001a2e0
   1400095f0:	cmp    QWORD PTR [rsp+0x50],0x0
   1400095f6:	jbe    0x140009674
   1400095f8:	mov    rax,QWORD PTR [rsp+0x40]
   1400095fd:	mov    rax,QWORD PTR [rax+0x18]
   140009601:	add    rax,QWORD PTR [rsp+0x50]
   140009606:	mov    QWORD PTR [rsp+0x20],rax
   14000960b:	xor    r8d,r8d
   14000960e:	mov    rdx,QWORD PTR [rsp+0x20]
   140009613:	mov    rcx,QWORD PTR [rsp+0x40]
   140009618:	call   0x140006190
   14000961d:	movzx  eax,al
   140009620:	test   eax,eax
   140009622:	je     0x140009674
   140009624:	mov    rbx,QWORD PTR [rsp+0x40]
   140009629:	mov    rax,QWORD PTR [rsp+0x40]
   14000962e:	mov    rax,QWORD PTR [rax+0x18]
   140009632:	mov    rbx,QWORD PTR [rbx+0x20]
   140009636:	sub    rbx,rax
   140009639:	mov    rcx,QWORD PTR [rsp+0x40]
   14000963e:	call   0x140006370
   140009643:	mov    r11,rax
   140009646:	mov    rax,QWORD PTR [rsp+0x40]
   14000964b:	mov    rax,QWORD PTR [rax+0x18]
   14000964f:	lea    rcx,[r11+rax*2]
   140009653:	mov    r9,QWORD PTR [rsp+0x50]
   140009658:	mov    r8,QWORD PTR [rsp+0x48]
   14000965d:	mov    rdx,rbx
   140009660:	call   0x14000b4b0
   140009665:	mov    rdx,QWORD PTR [rsp+0x20]
   14000966a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000966f:	call   0x140006140
   140009674:	mov    rax,QWORD PTR [rsp+0x40]
   140009679:	add    rsp,0x30
   14000967d:	pop    rbx
   14000967e:	ret    
   14000967f:	int3   
   140009680:	mov    QWORD PTR [rsp+0x20],r9
   140009685:	mov    QWORD PTR [rsp+0x18],r8
   14000968a:	mov    QWORD PTR [rsp+0x10],rdx
   14000968f:	mov    QWORD PTR [rsp+0x8],rcx
   140009694:	push   rbx
   140009695:	push   rsi
   140009696:	push   rdi
   140009697:	sub    rsp,0x40
   14000969b:	mov    rcx,QWORD PTR [rsp+0x60]
   1400096a0:	mov    rax,QWORD PTR [rsp+0x68]
   1400096a5:	cmp    QWORD PTR [rcx+0x18],rax
   1400096a9:	jb     0x1400096bf
   1400096ab:	mov    rcx,QWORD PTR [rsp+0x78]
   1400096b0:	call   0x140003bb0
   1400096b5:	cmp    rax,QWORD PTR [rsp+0x80]
   1400096bd:	jae    0x1400096c4
   1400096bf:	call   0x14001a348
   1400096c4:	mov    rax,QWORD PTR [rsp+0x60]
   1400096c9:	mov    rcx,QWORD PTR [rsp+0x68]
   1400096ce:	mov    rax,QWORD PTR [rax+0x18]
   1400096d2:	sub    rax,rcx
   1400096d5:	cmp    rax,QWORD PTR [rsp+0x70]
   1400096da:	jae    0x1400096f2
   1400096dc:	mov    rax,QWORD PTR [rsp+0x60]
   1400096e1:	mov    rcx,QWORD PTR [rsp+0x68]
   1400096e6:	mov    rax,QWORD PTR [rax+0x18]
   1400096ea:	sub    rax,rcx
   1400096ed:	mov    QWORD PTR [rsp+0x70],rax
   1400096f2:	mov    rcx,QWORD PTR [rsp+0x78]
   1400096f7:	call   0x140003bb0
   1400096fc:	sub    rax,QWORD PTR [rsp+0x80]
   140009704:	mov    QWORD PTR [rsp+0x28],rax
   140009709:	mov    rax,QWORD PTR [rsp+0x88]
   140009711:	cmp    QWORD PTR [rsp+0x28],rax
   140009716:	jae    0x140009725
   140009718:	mov    rax,QWORD PTR [rsp+0x28]
   14000971d:	mov    QWORD PTR [rsp+0x88],rax
   140009725:	mov    rax,QWORD PTR [rsp+0x88]
   14000972d:	mov    rdx,QWORD PTR [rip+0x35bc4]        # 0x14003f2f8
   140009734:	sub    rdx,rax
   140009737:	mov    rax,QWORD PTR [rsp+0x60]
   14000973c:	mov    rcx,QWORD PTR [rsp+0x70]
   140009741:	mov    rax,QWORD PTR [rax+0x18]
   140009745:	sub    rax,rcx
   140009748:	cmp    rdx,rax
   14000974b:	ja     0x140009752
   14000974d:	call   0x14001a2e0
   140009752:	mov    rax,QWORD PTR [rsp+0x60]
   140009757:	mov    rcx,QWORD PTR [rsp+0x70]
   14000975c:	mov    rax,QWORD PTR [rax+0x18]
   140009760:	sub    rax,rcx
   140009763:	sub    rax,QWORD PTR [rsp+0x68]
   140009768:	mov    QWORD PTR [rsp+0x20],rax
   14000976d:	mov    rax,QWORD PTR [rsp+0x60]
   140009772:	mov    rax,QWORD PTR [rax+0x18]
   140009776:	add    rax,QWORD PTR [rsp+0x88]
   14000977e:	sub    rax,QWORD PTR [rsp+0x70]
   140009783:	mov    QWORD PTR [rsp+0x30],rax
   140009788:	mov    rcx,QWORD PTR [rsp+0x60]
   14000978d:	mov    rax,QWORD PTR [rsp+0x30]
   140009792:	cmp    QWORD PTR [rcx+0x18],rax
   140009796:	jae    0x1400097aa
   140009798:	xor    r8d,r8d
   14000979b:	mov    rdx,QWORD PTR [rsp+0x30]
   1400097a0:	mov    rcx,QWORD PTR [rsp+0x60]
   1400097a5:	call   0x140006190
   1400097aa:	mov    rax,QWORD PTR [rsp+0x78]
   1400097af:	cmp    QWORD PTR [rsp+0x60],rax
   1400097b4:	je     0x14000987c
   1400097ba:	mov    rcx,QWORD PTR [rsp+0x60]
   1400097bf:	call   0x140006370
   1400097c4:	mov    r11,rax
   1400097c7:	mov    rax,QWORD PTR [rsp+0x68]
   1400097cc:	lea    rcx,[r11+rax*2]
   1400097d0:	mov    rax,QWORD PTR [rsp+0x70]
   1400097d5:	lea    rdi,[rcx+rax*2]
   1400097d9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400097de:	mov    rax,QWORD PTR [rsp+0x68]
   1400097e3:	mov    rbx,QWORD PTR [rbx+0x20]
   1400097e7:	sub    rbx,rax
   1400097ea:	sub    rbx,QWORD PTR [rsp+0x88]
   1400097f2:	mov    rcx,QWORD PTR [rsp+0x60]
   1400097f7:	call   0x140006370
   1400097fc:	mov    r11,rax
   1400097ff:	mov    rax,QWORD PTR [rsp+0x68]
   140009804:	lea    rcx,[r11+rax*2]
   140009808:	mov    rax,QWORD PTR [rsp+0x88]
   140009810:	lea    rcx,[rcx+rax*2]
   140009814:	mov    r9,QWORD PTR [rsp+0x20]
   140009819:	mov    r8,rdi
   14000981c:	mov    rdx,rbx
   14000981f:	call   0x14000c090
   140009824:	mov    rcx,QWORD PTR [rsp+0x78]
   140009829:	call   0x140006370
   14000982e:	mov    r11,rax
   140009831:	mov    rax,QWORD PTR [rsp+0x80]
   140009839:	lea    rdi,[r11+rax*2]
   14000983d:	mov    rbx,QWORD PTR [rsp+0x60]
   140009842:	mov    rax,QWORD PTR [rsp+0x68]
   140009847:	mov    rbx,QWORD PTR [rbx+0x20]
   14000984b:	sub    rbx,rax
   14000984e:	mov    rcx,QWORD PTR [rsp+0x60]
   140009853:	call   0x140006370
   140009858:	mov    r11,rax
   14000985b:	mov    rax,QWORD PTR [rsp+0x68]
   140009860:	lea    rcx,[r11+rax*2]
   140009864:	mov    r9,QWORD PTR [rsp+0x88]
   14000986c:	mov    r8,rdi
   14000986f:	mov    rdx,rbx
   140009872:	call   0x14000b4b0
   140009877:	jmp    0x140009c45
   14000987c:	mov    rax,QWORD PTR [rsp+0x70]
   140009881:	cmp    QWORD PTR [rsp+0x88],rax
   140009889:	ja     0x140009951
   14000988f:	mov    rcx,QWORD PTR [rsp+0x60]
   140009894:	call   0x140006370
   140009899:	mov    r11,rax
   14000989c:	mov    rax,QWORD PTR [rsp+0x80]
   1400098a4:	lea    rdi,[r11+rax*2]
   1400098a8:	mov    rbx,QWORD PTR [rsp+0x60]
   1400098ad:	mov    rax,QWORD PTR [rsp+0x68]
   1400098b2:	mov    rbx,QWORD PTR [rbx+0x20]
   1400098b6:	sub    rbx,rax
   1400098b9:	mov    rcx,QWORD PTR [rsp+0x60]
   1400098be:	call   0x140006370
   1400098c3:	mov    r11,rax
   1400098c6:	mov    rax,QWORD PTR [rsp+0x68]
   1400098cb:	lea    rcx,[r11+rax*2]
   1400098cf:	mov    r9,QWORD PTR [rsp+0x88]
   1400098d7:	mov    r8,rdi
   1400098da:	mov    rdx,rbx
   1400098dd:	call   0x14000c090
   1400098e2:	mov    rcx,QWORD PTR [rsp+0x60]
   1400098e7:	call   0x140006370
   1400098ec:	mov    r11,rax
   1400098ef:	mov    rax,QWORD PTR [rsp+0x68]
   1400098f4:	lea    rcx,[r11+rax*2]
   1400098f8:	mov    rax,QWORD PTR [rsp+0x70]
   1400098fd:	lea    rdi,[rcx+rax*2]
   140009901:	mov    rbx,QWORD PTR [rsp+0x60]
   140009906:	mov    rax,QWORD PTR [rsp+0x68]
   14000990b:	mov    rbx,QWORD PTR [rbx+0x20]
   14000990f:	sub    rbx,rax
   140009912:	sub    rbx,QWORD PTR [rsp+0x88]
   14000991a:	mov    rcx,QWORD PTR [rsp+0x60]
   14000991f:	call   0x140006370
   140009924:	mov    r11,rax
   140009927:	mov    rax,QWORD PTR [rsp+0x68]
   14000992c:	lea    rcx,[r11+rax*2]
   140009930:	mov    rax,QWORD PTR [rsp+0x88]
   140009938:	lea    rcx,[rcx+rax*2]
   14000993c:	mov    r9,QWORD PTR [rsp+0x20]
   140009941:	mov    r8,rdi
   140009944:	mov    rdx,rbx
   140009947:	call   0x14000c090
   14000994c:	jmp    0x140009c45
   140009951:	mov    rax,QWORD PTR [rsp+0x68]
   140009956:	cmp    QWORD PTR [rsp+0x80],rax
   14000995e:	ja     0x140009a26
   140009964:	mov    rcx,QWORD PTR [rsp+0x60]
   140009969:	call   0x140006370
   14000996e:	mov    r11,rax
   140009971:	mov    rax,QWORD PTR [rsp+0x68]
   140009976:	lea    rcx,[r11+rax*2]
   14000997a:	mov    rax,QWORD PTR [rsp+0x70]
   14000997f:	lea    rdi,[rcx+rax*2]
   140009983:	mov    rbx,QWORD PTR [rsp+0x60]
   140009988:	mov    rax,QWORD PTR [rsp+0x68]
   14000998d:	mov    rbx,QWORD PTR [rbx+0x20]
   140009991:	sub    rbx,rax
   140009994:	sub    rbx,QWORD PTR [rsp+0x88]
   14000999c:	mov    rcx,QWORD PTR [rsp+0x60]
   1400099a1:	call   0x140006370
   1400099a6:	mov    r11,rax
   1400099a9:	mov    rax,QWORD PTR [rsp+0x68]
   1400099ae:	lea    rcx,[r11+rax*2]
   1400099b2:	mov    rax,QWORD PTR [rsp+0x88]
   1400099ba:	lea    rcx,[rcx+rax*2]
   1400099be:	mov    r9,QWORD PTR [rsp+0x20]
   1400099c3:	mov    r8,rdi
   1400099c6:	mov    rdx,rbx
   1400099c9:	call   0x14000c090
   1400099ce:	mov    rcx,QWORD PTR [rsp+0x60]
   1400099d3:	call   0x140006370
   1400099d8:	mov    r11,rax
   1400099db:	mov    rax,QWORD PTR [rsp+0x80]
   1400099e3:	lea    rdi,[r11+rax*2]
   1400099e7:	mov    rbx,QWORD PTR [rsp+0x60]
   1400099ec:	mov    rax,QWORD PTR [rsp+0x68]
   1400099f1:	mov    rbx,QWORD PTR [rbx+0x20]
   1400099f5:	sub    rbx,rax
   1400099f8:	mov    rcx,QWORD PTR [rsp+0x60]
   1400099fd:	call   0x140006370
   140009a02:	mov    r11,rax
   140009a05:	mov    rax,QWORD PTR [rsp+0x68]
   140009a0a:	lea    rcx,[r11+rax*2]
   140009a0e:	mov    r9,QWORD PTR [rsp+0x88]
   140009a16:	mov    r8,rdi
   140009a19:	mov    rdx,rbx
   140009a1c:	call   0x14000c090
   140009a21:	jmp    0x140009c45
   140009a26:	mov    rcx,QWORD PTR [rsp+0x70]
   140009a2b:	mov    rax,QWORD PTR [rsp+0x68]
   140009a30:	add    rax,rcx
   140009a33:	cmp    rax,QWORD PTR [rsp+0x80]
   140009a3b:	ja     0x140009b13
   140009a41:	mov    rcx,QWORD PTR [rsp+0x60]
   140009a46:	call   0x140006370
   140009a4b:	mov    r11,rax
   140009a4e:	mov    rax,QWORD PTR [rsp+0x68]
   140009a53:	lea    rcx,[r11+rax*2]
   140009a57:	mov    rax,QWORD PTR [rsp+0x70]
   140009a5c:	lea    rdi,[rcx+rax*2]
   140009a60:	mov    rbx,QWORD PTR [rsp+0x60]
   140009a65:	mov    rax,QWORD PTR [rsp+0x68]
   140009a6a:	mov    rbx,QWORD PTR [rbx+0x20]
   140009a6e:	sub    rbx,rax
   140009a71:	sub    rbx,QWORD PTR [rsp+0x88]
   140009a79:	mov    rcx,QWORD PTR [rsp+0x60]
   140009a7e:	call   0x140006370
   140009a83:	mov    r11,rax
   140009a86:	mov    rax,QWORD PTR [rsp+0x68]
   140009a8b:	lea    rcx,[r11+rax*2]
   140009a8f:	mov    rax,QWORD PTR [rsp+0x88]
   140009a97:	lea    rcx,[rcx+rax*2]
   140009a9b:	mov    r9,QWORD PTR [rsp+0x20]
   140009aa0:	mov    r8,rdi
   140009aa3:	mov    rdx,rbx
   140009aa6:	call   0x14000c090
   140009aab:	mov    rcx,QWORD PTR [rsp+0x60]
   140009ab0:	call   0x140006370
   140009ab5:	mov    r11,rax
   140009ab8:	mov    rcx,QWORD PTR [rsp+0x88]
   140009ac0:	mov    rax,QWORD PTR [rsp+0x80]
   140009ac8:	add    rax,rcx
   140009acb:	sub    rax,QWORD PTR [rsp+0x70]
   140009ad0:	lea    rdi,[r11+rax*2]
   140009ad4:	mov    rbx,QWORD PTR [rsp+0x60]
   140009ad9:	mov    rax,QWORD PTR [rsp+0x68]
   140009ade:	mov    rbx,QWORD PTR [rbx+0x20]
   140009ae2:	sub    rbx,rax
   140009ae5:	mov    rcx,QWORD PTR [rsp+0x60]
   140009aea:	call   0x140006370
   140009aef:	mov    r11,rax
   140009af2:	mov    rax,QWORD PTR [rsp+0x68]
   140009af7:	lea    rcx,[r11+rax*2]
   140009afb:	mov    r9,QWORD PTR [rsp+0x88]
   140009b03:	mov    r8,rdi
   140009b06:	mov    rdx,rbx
   140009b09:	call   0x14000c090
   140009b0e:	jmp    0x140009c45
   140009b13:	mov    rcx,QWORD PTR [rsp+0x60]
   140009b18:	call   0x140006370
   140009b1d:	mov    r11,rax
   140009b20:	mov    rax,QWORD PTR [rsp+0x80]
   140009b28:	lea    rdi,[r11+rax*2]
   140009b2c:	mov    rbx,QWORD PTR [rsp+0x60]
   140009b31:	mov    rax,QWORD PTR [rsp+0x68]
   140009b36:	mov    rbx,QWORD PTR [rbx+0x20]
   140009b3a:	sub    rbx,rax
   140009b3d:	mov    rcx,QWORD PTR [rsp+0x60]
   140009b42:	call   0x140006370
   140009b47:	mov    r11,rax
   140009b4a:	mov    rax,QWORD PTR [rsp+0x68]
   140009b4f:	lea    rcx,[r11+rax*2]
   140009b53:	mov    r9,QWORD PTR [rsp+0x70]
   140009b58:	mov    r8,rdi
   140009b5b:	mov    rdx,rbx
   140009b5e:	call   0x14000c090
   140009b63:	mov    rcx,QWORD PTR [rsp+0x60]
   140009b68:	call   0x140006370
   140009b6d:	mov    r11,rax
   140009b70:	mov    rax,QWORD PTR [rsp+0x68]
   140009b75:	lea    rcx,[r11+rax*2]
   140009b79:	mov    rax,QWORD PTR [rsp+0x70]
   140009b7e:	lea    rdi,[rcx+rax*2]
   140009b82:	mov    rbx,QWORD PTR [rsp+0x60]
   140009b87:	mov    rax,QWORD PTR [rsp+0x68]
   140009b8c:	mov    rbx,QWORD PTR [rbx+0x20]
   140009b90:	sub    rbx,rax
   140009b93:	sub    rbx,QWORD PTR [rsp+0x88]
   140009b9b:	mov    rcx,QWORD PTR [rsp+0x60]
   140009ba0:	call   0x140006370
   140009ba5:	mov    r11,rax
   140009ba8:	mov    rax,QWORD PTR [rsp+0x68]
   140009bad:	lea    rcx,[r11+rax*2]
   140009bb1:	mov    rax,QWORD PTR [rsp+0x88]
   140009bb9:	lea    rcx,[rcx+rax*2]
   140009bbd:	mov    r9,QWORD PTR [rsp+0x20]
   140009bc2:	mov    r8,rdi
   140009bc5:	mov    rdx,rbx
   140009bc8:	call   0x14000c090
   140009bcd:	mov    r11,QWORD PTR [rsp+0x70]
   140009bd2:	mov    rsi,QWORD PTR [rsp+0x88]
   140009bda:	sub    rsi,r11
   140009bdd:	mov    rcx,QWORD PTR [rsp+0x60]
   140009be2:	call   0x140006370
   140009be7:	mov    r11,rax
   140009bea:	mov    rax,QWORD PTR [rsp+0x80]
   140009bf2:	lea    rcx,[r11+rax*2]
   140009bf6:	mov    rax,QWORD PTR [rsp+0x88]
   140009bfe:	lea    rdi,[rcx+rax*2]
   140009c02:	mov    rbx,QWORD PTR [rsp+0x60]
   140009c07:	mov    rax,QWORD PTR [rsp+0x68]
   140009c0c:	mov    rbx,QWORD PTR [rbx+0x20]
   140009c10:	sub    rbx,rax
   140009c13:	sub    rbx,QWORD PTR [rsp+0x70]
   140009c18:	mov    rcx,QWORD PTR [rsp+0x60]
   140009c1d:	call   0x140006370
   140009c22:	mov    r11,rax
   140009c25:	mov    rax,QWORD PTR [rsp+0x68]
   140009c2a:	lea    rcx,[r11+rax*2]
   140009c2e:	mov    rax,QWORD PTR [rsp+0x70]
   140009c33:	lea    rcx,[rcx+rax*2]
   140009c37:	mov    r9,rsi
   140009c3a:	mov    r8,rdi
   140009c3d:	mov    rdx,rbx
   140009c40:	call   0x14000c090
   140009c45:	mov    rdx,QWORD PTR [rsp+0x30]
   140009c4a:	mov    rcx,QWORD PTR [rsp+0x60]
   140009c4f:	call   0x140006140
   140009c54:	mov    rax,QWORD PTR [rsp+0x60]
   140009c59:	add    rsp,0x40
   140009c5d:	pop    rdi
   140009c5e:	pop    rsi
   140009c5f:	pop    rbx
   140009c60:	ret    
   140009c61:	int3   
   140009c62:	int3   
   140009c63:	int3   
   140009c64:	int3   
   140009c65:	int3   
   140009c66:	int3   
   140009c67:	int3   
   140009c68:	int3   
   140009c69:	int3   
   140009c6a:	int3   
   140009c6b:	int3   
   140009c6c:	int3   
   140009c6d:	int3   
   140009c6e:	int3   
   140009c6f:	int3   
   140009c70:	mov    WORD PTR [rsp+0x20],r9w
   140009c76:	mov    QWORD PTR [rsp+0x18],r8
   140009c7b:	mov    QWORD PTR [rsp+0x10],rdx
   140009c80:	mov    QWORD PTR [rsp+0x8],rcx
   140009c85:	sub    rsp,0x28
   140009c89:	cmp    QWORD PTR [rsp+0x40],0x1
   140009c8f:	jne    0x140009cb3
   140009c91:	mov    rcx,QWORD PTR [rsp+0x30]
   140009c96:	call   0x140006370
   140009c9b:	mov    r11,rax
   140009c9e:	mov    rax,QWORD PTR [rsp+0x38]
   140009ca3:	lea    rcx,[r11+rax*2]
   140009ca7:	lea    rdx,[rsp+0x48]
   140009cac:	call   0x140001000
   140009cb1:	jmp    0x140009cd9
   140009cb3:	mov    rcx,QWORD PTR [rsp+0x30]
   140009cb8:	call   0x140006370
   140009cbd:	mov    r11,rax
   140009cc0:	mov    rax,QWORD PTR [rsp+0x38]
   140009cc5:	lea    rcx,[r11+rax*2]
   140009cc9:	movzx  r8d,WORD PTR [rsp+0x48]
   140009ccf:	mov    rdx,QWORD PTR [rsp+0x40]
   140009cd4:	call   0x140001120
   140009cd9:	add    rsp,0x28
   140009cdd:	ret    
   140009cde:	int3   
   140009cdf:	int3   
   140009ce0:	mov    QWORD PTR [rsp+0x8],rcx
   140009ce5:	sub    rsp,0x18
   140009ce9:	movabs rax,0x7fffffffffffffff
   140009cf3:	mov    QWORD PTR [rsp],rax
   140009cf7:	cmp    QWORD PTR [rsp],0x0
   140009cfc:	jbe    0x140009d09
   140009cfe:	mov    rax,QWORD PTR [rsp]
   140009d02:	mov    QWORD PTR [rsp+0x8],rax
   140009d07:	jmp    0x140009d12
   140009d09:	mov    QWORD PTR [rsp+0x8],0x1
   140009d12:	mov    rax,QWORD PTR [rsp+0x8]
   140009d17:	add    rsp,0x18
   140009d1b:	ret    
   140009d1c:	int3   
   140009d1d:	int3   
   140009d1e:	int3   
   140009d1f:	int3   
   140009d20:	mov    QWORD PTR [rsp+0x10],rdx
   140009d25:	mov    QWORD PTR [rsp+0x8],rcx
   140009d2a:	sub    rsp,0x28
   140009d2e:	mov    r8,QWORD PTR [rsp+0x30]
   140009d33:	mov    rdx,QWORD PTR [rsp+0x30]
   140009d38:	mov    rdx,QWORD PTR [rdx+0x18]
   140009d3c:	mov    rcx,QWORD PTR [rsp+0x38]
   140009d41:	call   0x1400127d0
   140009d46:	mov    rax,QWORD PTR [rsp+0x38]
   140009d4b:	add    rsp,0x28
   140009d4f:	ret    
   140009d50:	mov    QWORD PTR [rsp+0x8],rcx
   140009d55:	sub    rsp,0x28
   140009d59:	mov    rcx,QWORD PTR [rsp+0x30]
   140009d5e:	add    rcx,0x10
   140009d62:	call   0x14000b080
   140009d67:	add    rsp,0x28
   140009d6b:	ret    
   140009d6c:	int3   
   140009d6d:	int3   
   140009d6e:	int3   
   140009d6f:	int3   
   140009d70:	mov    QWORD PTR [rsp+0x20],r9
   140009d75:	mov    QWORD PTR [rsp+0x18],r8
   140009d7a:	mov    QWORD PTR [rsp+0x10],rdx
   140009d7f:	mov    QWORD PTR [rsp+0x8],rcx
   140009d84:	push   rbx
   140009d85:	sub    rsp,0xc0
   140009d8c:	mov    QWORD PTR [rsp+0xa0],0xfffffffffffffffe
   140009d98:	mov    rax,QWORD PTR [rip+0x3f6c1]        # 0x140049460
   140009d9f:	xor    rax,rsp
   140009da2:	mov    QWORD PTR [rsp+0xb0],rax
   140009daa:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009db2:	call   0x140008790
   140009db7:	mov    QWORD PTR [rsp+0x20],rax
   140009dbc:	cmp    QWORD PTR [rsp+0xe0],0x0
   140009dc5:	jne    0x140009dcc
   140009dc7:	jmp    0x14000a2a8
   140009dcc:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009dd4:	call   0x140006400
   140009dd9:	mov    rbx,rax
   140009ddc:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009de4:	call   0x140009d50
   140009de9:	sub    rax,rbx
   140009dec:	cmp    rax,QWORD PTR [rsp+0xe0]
   140009df4:	jae    0x140009e00
   140009df6:	call   0x14000aa70
   140009dfb:	jmp    0x14000a2a8
   140009e00:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009e08:	call   0x140006400
   140009e0d:	add    rax,QWORD PTR [rsp+0xe0]
   140009e15:	cmp    QWORD PTR [rsp+0x20],rax
   140009e1a:	jae    0x14000a0a8
   140009e20:	xor    edx,edx
   140009e22:	mov    rax,QWORD PTR [rsp+0x20]
   140009e27:	mov    ecx,0x2
   140009e2c:	div    rcx
   140009e2f:	mov    rbx,rax
   140009e32:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009e3a:	call   0x140009d50
   140009e3f:	sub    rax,rbx
   140009e42:	cmp    rax,QWORD PTR [rsp+0x20]
   140009e47:	jae    0x140009e57
   140009e49:	mov    QWORD PTR [rsp+0xa8],0x0
   140009e55:	jmp    0x140009e79
   140009e57:	xor    edx,edx
   140009e59:	mov    rax,QWORD PTR [rsp+0x20]
   140009e5e:	mov    ecx,0x2
   140009e63:	div    rcx
   140009e66:	mov    rcx,rax
   140009e69:	mov    rax,QWORD PTR [rsp+0x20]
   140009e6e:	add    rax,rcx
   140009e71:	mov    QWORD PTR [rsp+0xa8],rax
   140009e79:	mov    rax,QWORD PTR [rsp+0xa8]
   140009e81:	mov    QWORD PTR [rsp+0x20],rax
   140009e86:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009e8e:	call   0x140006400
   140009e93:	add    rax,QWORD PTR [rsp+0xe0]
   140009e9b:	cmp    QWORD PTR [rsp+0x20],rax
   140009ea0:	jae    0x140009ebc
   140009ea2:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009eaa:	call   0x140006400
   140009eaf:	add    rax,QWORD PTR [rsp+0xe0]
   140009eb7:	mov    QWORD PTR [rsp+0x20],rax
   140009ebc:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009ec4:	add    rcx,0x10
   140009ec8:	mov    rdx,QWORD PTR [rsp+0x20]
   140009ecd:	call   0x14000a2d0
   140009ed2:	mov    QWORD PTR [rsp+0x30],rax
   140009ed7:	mov    rax,QWORD PTR [rsp+0xd8]
   140009edf:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009ee7:	mov    rcx,QWORD PTR [rcx+0x18]
   140009eeb:	mov    rax,QWORD PTR [rax+0x8]
   140009eef:	sub    rax,rcx
   140009ef2:	cqo    
   140009ef4:	mov    ecx,0x28
   140009ef9:	idiv   rcx
   140009efc:	mov    QWORD PTR [rsp+0x28],rax
   140009f01:	mov    DWORD PTR [rsp+0x38],0x0
   140009f09:	mov    rax,QWORD PTR [rsp+0x28]
   140009f0e:	imul   rax,rax,0x28
   140009f12:	mov    rdx,QWORD PTR [rsp+0x30]
   140009f17:	add    rdx,rax
   140009f1a:	mov    r9,QWORD PTR [rsp+0xe8]
   140009f22:	mov    r8,QWORD PTR [rsp+0xe0]
   140009f2a:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009f32:	call   0x1400089a0
   140009f37:	mov    eax,DWORD PTR [rsp+0x38]
   140009f3b:	add    eax,0x1
   140009f3e:	mov    DWORD PTR [rsp+0x38],eax
   140009f42:	mov    r9,QWORD PTR [rsp+0x30]
   140009f47:	mov    r8,QWORD PTR [rsp+0xd8]
   140009f4f:	mov    r8,QWORD PTR [r8+0x8]
   140009f53:	mov    rdx,QWORD PTR [rsp+0xd0]
   140009f5b:	mov    rdx,QWORD PTR [rdx+0x18]
   140009f5f:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009f67:	call   0x14000c390
   140009f6c:	mov    eax,DWORD PTR [rsp+0x38]
   140009f70:	add    eax,0x1
   140009f73:	mov    DWORD PTR [rsp+0x38],eax
   140009f77:	mov    rcx,QWORD PTR [rsp+0xe0]
   140009f7f:	mov    rax,QWORD PTR [rsp+0x28]
   140009f84:	add    rax,rcx
   140009f87:	imul   rax,rax,0x28
   140009f8b:	mov    r9,QWORD PTR [rsp+0x30]
   140009f90:	add    r9,rax
   140009f93:	mov    r8,QWORD PTR [rsp+0xd0]
   140009f9b:	mov    r8,QWORD PTR [r8+0x20]
   140009f9f:	mov    rdx,QWORD PTR [rsp+0xd8]
   140009fa7:	mov    rdx,QWORD PTR [rdx+0x8]
   140009fab:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009fb3:	call   0x14000c390
   140009fb8:	nop
   140009fb9:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009fc1:	call   0x140006400
   140009fc6:	mov    r11,rax
   140009fc9:	mov    rax,QWORD PTR [rsp+0xe0]
   140009fd1:	add    rax,r11
   140009fd4:	mov    QWORD PTR [rsp+0xe0],rax
   140009fdc:	mov    rax,QWORD PTR [rsp+0xd0]
   140009fe4:	cmp    QWORD PTR [rax+0x18],0x0
   140009fe9:	je     0x14000a055
   140009feb:	mov    r8,QWORD PTR [rsp+0xd0]
   140009ff3:	mov    r8,QWORD PTR [r8+0x20]
   140009ff7:	mov    rdx,QWORD PTR [rsp+0xd0]
   140009fff:	mov    rdx,QWORD PTR [rdx+0x18]
   14000a003:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000a00b:	call   0x140008970
   14000a010:	mov    rax,QWORD PTR [rsp+0xd0]
   14000a018:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000a020:	mov    rcx,QWORD PTR [rcx+0x18]
   14000a024:	mov    rax,QWORD PTR [rax+0x28]
   14000a028:	sub    rax,rcx
   14000a02b:	cqo    
   14000a02d:	mov    ecx,0x28
   14000a032:	idiv   rcx
   14000a035:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000a03d:	add    rcx,0x10
   14000a041:	mov    r8,rax
   14000a044:	mov    rdx,QWORD PTR [rsp+0xd0]
   14000a04c:	mov    rdx,QWORD PTR [rdx+0x18]
   14000a050:	call   0x1400089f0
   14000a055:	mov    rax,QWORD PTR [rsp+0x20]
   14000a05a:	imul   rax,rax,0x28
   14000a05e:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a063:	add    rcx,rax
   14000a066:	mov    rax,QWORD PTR [rsp+0xd0]
   14000a06e:	mov    QWORD PTR [rax+0x28],rcx
   14000a072:	mov    rax,QWORD PTR [rsp+0xe0]
   14000a07a:	imul   rax,rax,0x28
   14000a07e:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a083:	add    rcx,rax
   14000a086:	mov    rax,QWORD PTR [rsp+0xd0]
   14000a08e:	mov    QWORD PTR [rax+0x20],rcx
   14000a092:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000a09a:	mov    rax,QWORD PTR [rsp+0x30]
   14000a09f:	mov    QWORD PTR [rcx+0x18],rax
   14000a0a3:	jmp    0x14000a2a8
   14000a0a8:	mov    rax,QWORD PTR [rsp+0xd0]
   14000a0b0:	mov    rcx,QWORD PTR [rsp+0xd8]
   14000a0b8:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a0bc:	mov    rax,QWORD PTR [rax+0x20]
   14000a0c0:	sub    rax,rcx
   14000a0c3:	cqo    
   14000a0c5:	mov    ecx,0x28
   14000a0ca:	idiv   rcx
   14000a0cd:	cmp    rax,QWORD PTR [rsp+0xe0]
   14000a0d5:	jae    0x14000a1e0
   14000a0db:	mov    rdx,QWORD PTR [rsp+0xe8]
   14000a0e3:	lea    rcx,[rsp+0x48]
   14000a0e8:	call   0x140005d30
   14000a0ed:	nop
   14000a0ee:	mov    r9,QWORD PTR [rsp+0xe0]
   14000a0f6:	imul   r9,r9,0x28
   14000a0fa:	mov    rax,QWORD PTR [rsp+0xd8]
   14000a102:	add    r9,QWORD PTR [rax+0x8]
   14000a106:	mov    r8,QWORD PTR [rsp+0xd0]
   14000a10e:	mov    r8,QWORD PTR [r8+0x20]
   14000a112:	mov    rdx,QWORD PTR [rsp+0xd8]
   14000a11a:	mov    rdx,QWORD PTR [rdx+0x8]
   14000a11e:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000a126:	call   0x14000c390
   14000a12b:	nop
   14000a12c:	mov    rax,QWORD PTR [rsp+0xd0]
   14000a134:	mov    rcx,QWORD PTR [rsp+0xd8]
   14000a13c:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a140:	mov    rax,QWORD PTR [rax+0x20]
   14000a144:	sub    rax,rcx
   14000a147:	cqo    
   14000a149:	mov    ecx,0x28
   14000a14e:	idiv   rcx
   14000a151:	mov    r8,QWORD PTR [rsp+0xe0]
   14000a159:	sub    r8,rax
   14000a15c:	lea    r9,[rsp+0x48]
   14000a161:	mov    rdx,QWORD PTR [rsp+0xd0]
   14000a169:	mov    rdx,QWORD PTR [rdx+0x20]
   14000a16d:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000a175:	call   0x1400089a0
   14000a17a:	nop
   14000a17b:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000a183:	imul   rcx,rcx,0x28
   14000a187:	mov    rax,QWORD PTR [rsp+0xd0]
   14000a18f:	add    rcx,QWORD PTR [rax+0x20]
   14000a193:	mov    rax,QWORD PTR [rsp+0xd0]
   14000a19b:	mov    QWORD PTR [rax+0x20],rcx
   14000a19f:	mov    rax,QWORD PTR [rsp+0xe0]
   14000a1a7:	imul   rax,rax,0x28
   14000a1ab:	mov    rdx,QWORD PTR [rsp+0xd0]
   14000a1b3:	mov    rdx,QWORD PTR [rdx+0x20]
   14000a1b7:	sub    rdx,rax
   14000a1ba:	lea    r8,[rsp+0x48]
   14000a1bf:	mov    rcx,QWORD PTR [rsp+0xd8]
   14000a1c7:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a1cb:	call   0x14000c3d0
   14000a1d0:	nop
   14000a1d1:	lea    rcx,[rsp+0x48]
   14000a1d6:	call   0x140003a90
   14000a1db:	jmp    0x14000a2a8
   14000a1e0:	mov    rdx,QWORD PTR [rsp+0xe8]
   14000a1e8:	lea    rcx,[rsp+0x78]
   14000a1ed:	call   0x140005d30
   14000a1f2:	nop
   14000a1f3:	mov    rax,QWORD PTR [rsp+0xd0]
   14000a1fb:	mov    rax,QWORD PTR [rax+0x20]
   14000a1ff:	mov    QWORD PTR [rsp+0x70],rax
   14000a204:	mov    rax,QWORD PTR [rsp+0xe0]
   14000a20c:	imul   rax,rax,0x28
   14000a210:	mov    rdx,QWORD PTR [rsp+0x70]
   14000a215:	sub    rdx,rax
   14000a218:	mov    r9,QWORD PTR [rsp+0xd0]
   14000a220:	mov    r9,QWORD PTR [r9+0x20]
   14000a224:	mov    r8,QWORD PTR [rsp+0x70]
   14000a229:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000a231:	call   0x14000c390
   14000a236:	mov    r11,rax
   14000a239:	mov    rax,QWORD PTR [rsp+0xd0]
   14000a241:	mov    QWORD PTR [rax+0x20],r11
   14000a245:	mov    rax,QWORD PTR [rsp+0xe0]
   14000a24d:	imul   rax,rax,0x28
   14000a251:	mov    rdx,QWORD PTR [rsp+0x70]
   14000a256:	sub    rdx,rax
   14000a259:	mov    r8,QWORD PTR [rsp+0x70]
   14000a25e:	mov    rcx,QWORD PTR [rsp+0xd8]
   14000a266:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a26a:	call   0x14000c420
   14000a26f:	mov    rdx,QWORD PTR [rsp+0xe0]
   14000a277:	imul   rdx,rdx,0x28
   14000a27b:	mov    rax,QWORD PTR [rsp+0xd8]
   14000a283:	add    rdx,QWORD PTR [rax+0x8]
   14000a287:	lea    r8,[rsp+0x78]
   14000a28c:	mov    rcx,QWORD PTR [rsp+0xd8]
   14000a294:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a298:	call   0x14000c3d0
   14000a29d:	nop
   14000a29e:	lea    rcx,[rsp+0x78]
   14000a2a3:	call   0x140003a90
   14000a2a8:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000a2b0:	xor    rcx,rsp
   14000a2b3:	call   0x14001c500
   14000a2b8:	add    rsp,0xc0
   14000a2bf:	pop    rbx
   14000a2c0:	ret    
   14000a2c1:	int3   
   14000a2c2:	int3   
   14000a2c3:	int3   
   14000a2c4:	int3   
   14000a2c5:	int3   
   14000a2c6:	int3   
   14000a2c7:	int3   
   14000a2c8:	int3   
   14000a2c9:	int3   
   14000a2ca:	int3   
   14000a2cb:	int3   
   14000a2cc:	int3   
   14000a2cd:	int3   
   14000a2ce:	int3   
   14000a2cf:	int3   
   14000a2d0:	mov    QWORD PTR [rsp+0x10],rdx
   14000a2d5:	mov    QWORD PTR [rsp+0x8],rcx
   14000a2da:	sub    rsp,0x28
   14000a2de:	xor    edx,edx
   14000a2e0:	mov    rcx,QWORD PTR [rsp+0x38]
   14000a2e5:	call   0x14000c4b0
   14000a2ea:	add    rsp,0x28
   14000a2ee:	ret    
   14000a2ef:	int3   
   14000a2f0:	mov    QWORD PTR [rsp+0x10],rdx
   14000a2f5:	mov    QWORD PTR [rsp+0x8],rcx
   14000a2fa:	sub    rsp,0x28
   14000a2fe:	xor    edx,edx
   14000a300:	mov    rcx,QWORD PTR [rsp+0x38]
   14000a305:	call   0x14000c520
   14000a30a:	add    rsp,0x28
   14000a30e:	ret    
   14000a30f:	int3   
   14000a310:	mov    QWORD PTR [rsp+0x18],r8
   14000a315:	mov    QWORD PTR [rsp+0x10],rdx
   14000a31a:	mov    QWORD PTR [rsp+0x8],rcx
   14000a31f:	sub    rsp,0x28
   14000a323:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a328:	call   0x140012290
   14000a32d:	cmp    QWORD PTR [rsp+0x40],0x0
   14000a333:	je     0x14000a36f
   14000a335:	cmp    QWORD PTR [rsp+0x38],0x0
   14000a33b:	je     0x14000a36f
   14000a33d:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a342:	call   0x140006370
   14000a347:	cmp    rax,QWORD PTR [rsp+0x38]
   14000a34c:	ja     0x14000a36f
   14000a34e:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a353:	call   0x140006370
   14000a358:	mov    r11,rax
   14000a35b:	mov    rax,QWORD PTR [rsp+0x40]
   14000a360:	mov    rax,QWORD PTR [rax+0x18]
   14000a364:	lea    rax,[r11+rax*2]
   14000a368:	cmp    QWORD PTR [rsp+0x38],rax
   14000a36d:	jbe    0x14000a374
   14000a36f:	call   0x14001cd78
   14000a374:	xor    eax,eax
   14000a376:	test   eax,eax
   14000a378:	jne    0x14000a374
   14000a37a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a37f:	mov    rax,QWORD PTR [rsp+0x40]
   14000a384:	mov    QWORD PTR [rcx],rax
   14000a387:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a38c:	mov    rax,QWORD PTR [rsp+0x38]
   14000a391:	mov    QWORD PTR [rcx+0x8],rax
   14000a395:	mov    rax,QWORD PTR [rsp+0x30]
   14000a39a:	add    rsp,0x28
   14000a39e:	ret    
   14000a39f:	int3   
   14000a3a0:	mov    QWORD PTR [rsp+0x10],rdx
   14000a3a5:	mov    QWORD PTR [rsp+0x8],rcx
   14000a3aa:	push   rbx
   14000a3ab:	sub    rsp,0x20
   14000a3af:	mov    rax,QWORD PTR [rsp+0x30]
   14000a3b4:	cmp    QWORD PTR [rax],0xfffffffffffffffc
   14000a3b8:	je     0x14000a440
   14000a3be:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a3c3:	call   0x1400013d0
   14000a3c8:	movzx  eax,al
   14000a3cb:	test   eax,eax
   14000a3cd:	jne    0x14000a3d4
   14000a3cf:	call   0x14001cd78
   14000a3d4:	xor    eax,eax
   14000a3d6:	test   eax,eax
   14000a3d8:	jne    0x14000a3d4
   14000a3da:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a3df:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a3e3:	mov    rax,QWORD PTR [rsp+0x38]
   14000a3e8:	lea    rbx,[rcx+rax*2]
   14000a3ec:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a3f1:	mov    rcx,QWORD PTR [rcx]
   14000a3f4:	call   0x140006370
   14000a3f9:	mov    r11,rax
   14000a3fc:	mov    rax,QWORD PTR [rsp+0x30]
   14000a401:	mov    rax,QWORD PTR [rax]
   14000a404:	mov    rax,QWORD PTR [rax+0x18]
   14000a408:	lea    rax,[r11+rax*2]
   14000a40c:	cmp    rbx,rax
   14000a40f:	ja     0x14000a435
   14000a411:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a416:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a41a:	mov    rax,QWORD PTR [rsp+0x38]
   14000a41f:	lea    rbx,[rcx+rax*2]
   14000a423:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a428:	mov    rcx,QWORD PTR [rcx]
   14000a42b:	call   0x140006370
   14000a430:	cmp    rbx,rax
   14000a433:	jae    0x14000a43a
   14000a435:	call   0x14001cd78
   14000a43a:	xor    eax,eax
   14000a43c:	test   eax,eax
   14000a43e:	jne    0x14000a43a
   14000a440:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a445:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a449:	mov    rax,QWORD PTR [rsp+0x38]
   14000a44e:	lea    rcx,[rcx+rax*2]
   14000a452:	mov    rax,QWORD PTR [rsp+0x30]
   14000a457:	mov    QWORD PTR [rax+0x8],rcx
   14000a45b:	mov    rax,QWORD PTR [rsp+0x30]
   14000a460:	add    rsp,0x20
   14000a464:	pop    rbx
   14000a465:	ret    
   14000a466:	int3   
   14000a467:	int3   
   14000a468:	int3   
   14000a469:	int3   
   14000a46a:	int3   
   14000a46b:	int3   
   14000a46c:	int3   
   14000a46d:	int3   
   14000a46e:	int3   
   14000a46f:	int3   
   14000a470:	mov    QWORD PTR [rsp+0x10],rdx
   14000a475:	mov    QWORD PTR [rsp+0x8],rcx
   14000a47a:	sub    rsp,0x28
   14000a47e:	mov    rax,QWORD PTR [rsp+0x30]
   14000a483:	cmp    QWORD PTR [rax],0xfffffffffffffffc
   14000a487:	je     0x14000a4bb
   14000a489:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a48e:	call   0x1400013d0
   14000a493:	movzx  eax,al
   14000a496:	test   eax,eax
   14000a498:	je     0x14000a4b0
   14000a49a:	mov    rdx,QWORD PTR [rsp+0x38]
   14000a49f:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a4a4:	call   0x140001390
   14000a4a9:	movzx  eax,al
   14000a4ac:	test   eax,eax
   14000a4ae:	jne    0x14000a4b5
   14000a4b0:	call   0x14001cd78
   14000a4b5:	xor    eax,eax
   14000a4b7:	test   eax,eax
   14000a4b9:	jne    0x14000a4b5
   14000a4bb:	mov    rax,QWORD PTR [rsp+0x30]
   14000a4c0:	mov    rcx,QWORD PTR [rsp+0x38]
   14000a4c5:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a4c9:	mov    rax,QWORD PTR [rax+0x8]
   14000a4cd:	sub    rax,rcx
   14000a4d0:	sar    rax,1
   14000a4d3:	add    rsp,0x28
   14000a4d7:	ret    
   14000a4d8:	int3   
   14000a4d9:	int3   
   14000a4da:	int3   
   14000a4db:	int3   
   14000a4dc:	int3   
   14000a4dd:	int3   
   14000a4de:	int3   
   14000a4df:	int3   
   14000a4e0:	mov    QWORD PTR [rsp+0x8],rcx
   14000a4e5:	sub    rsp,0x28
   14000a4e9:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a4ee:	add    rcx,0x10
   14000a4f2:	call   0x14000b0c0
   14000a4f7:	add    rsp,0x28
   14000a4fb:	ret    
   14000a4fc:	int3   
   14000a4fd:	int3   
   14000a4fe:	int3   
   14000a4ff:	int3   
   14000a500:	mov    QWORD PTR [rsp+0x20],r9
   14000a505:	mov    QWORD PTR [rsp+0x18],r8
   14000a50a:	mov    QWORD PTR [rsp+0x10],rdx
   14000a50f:	mov    QWORD PTR [rsp+0x8],rcx
   14000a514:	push   rbx
   14000a515:	sub    rsp,0x120
   14000a51c:	mov    QWORD PTR [rsp+0x100],0xfffffffffffffffe
   14000a528:	mov    rax,QWORD PTR [rip+0x3ef31]        # 0x140049460
   14000a52f:	xor    rax,rsp
   14000a532:	mov    QWORD PTR [rsp+0x110],rax
   14000a53a:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a542:	call   0x140008a50
   14000a547:	mov    QWORD PTR [rsp+0x20],rax
   14000a54c:	cmp    QWORD PTR [rsp+0x140],0x0
   14000a555:	jne    0x14000a55c
   14000a557:	jmp    0x14000aa50
   14000a55c:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a564:	call   0x140008aa0
   14000a569:	mov    rbx,rax
   14000a56c:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a574:	call   0x14000a4e0
   14000a579:	sub    rax,rbx
   14000a57c:	cmp    rax,QWORD PTR [rsp+0x140]
   14000a584:	jae    0x14000a590
   14000a586:	call   0x14000aa70
   14000a58b:	jmp    0x14000aa50
   14000a590:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a598:	call   0x140008aa0
   14000a59d:	add    rax,QWORD PTR [rsp+0x140]
   14000a5a5:	cmp    QWORD PTR [rsp+0x20],rax
   14000a5aa:	jae    0x14000a838
   14000a5b0:	xor    edx,edx
   14000a5b2:	mov    rax,QWORD PTR [rsp+0x20]
   14000a5b7:	mov    ecx,0x2
   14000a5bc:	div    rcx
   14000a5bf:	mov    rbx,rax
   14000a5c2:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a5ca:	call   0x14000a4e0
   14000a5cf:	sub    rax,rbx
   14000a5d2:	cmp    rax,QWORD PTR [rsp+0x20]
   14000a5d7:	jae    0x14000a5e7
   14000a5d9:	mov    QWORD PTR [rsp+0x108],0x0
   14000a5e5:	jmp    0x14000a609
   14000a5e7:	xor    edx,edx
   14000a5e9:	mov    rax,QWORD PTR [rsp+0x20]
   14000a5ee:	mov    ecx,0x2
   14000a5f3:	div    rcx
   14000a5f6:	mov    rcx,rax
   14000a5f9:	mov    rax,QWORD PTR [rsp+0x20]
   14000a5fe:	add    rax,rcx
   14000a601:	mov    QWORD PTR [rsp+0x108],rax
   14000a609:	mov    rax,QWORD PTR [rsp+0x108]
   14000a611:	mov    QWORD PTR [rsp+0x20],rax
   14000a616:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a61e:	call   0x140008aa0
   14000a623:	add    rax,QWORD PTR [rsp+0x140]
   14000a62b:	cmp    QWORD PTR [rsp+0x20],rax
   14000a630:	jae    0x14000a64c
   14000a632:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a63a:	call   0x140008aa0
   14000a63f:	add    rax,QWORD PTR [rsp+0x140]
   14000a647:	mov    QWORD PTR [rsp+0x20],rax
   14000a64c:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a654:	add    rcx,0x10
   14000a658:	mov    rdx,QWORD PTR [rsp+0x20]
   14000a65d:	call   0x14000aad0
   14000a662:	mov    QWORD PTR [rsp+0x30],rax
   14000a667:	mov    rax,QWORD PTR [rsp+0x138]
   14000a66f:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a677:	mov    rcx,QWORD PTR [rcx+0x18]
   14000a67b:	mov    rax,QWORD PTR [rax+0x8]
   14000a67f:	sub    rax,rcx
   14000a682:	cqo    
   14000a684:	mov    ecx,0x50
   14000a689:	idiv   rcx
   14000a68c:	mov    QWORD PTR [rsp+0x28],rax
   14000a691:	mov    DWORD PTR [rsp+0x38],0x0
   14000a699:	mov    rax,QWORD PTR [rsp+0x28]
   14000a69e:	imul   rax,rax,0x50
   14000a6a2:	mov    rdx,QWORD PTR [rsp+0x30]
   14000a6a7:	add    rdx,rax
   14000a6aa:	mov    r9,QWORD PTR [rsp+0x148]
   14000a6b2:	mov    r8,QWORD PTR [rsp+0x140]
   14000a6ba:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a6c2:	call   0x140008c90
   14000a6c7:	mov    eax,DWORD PTR [rsp+0x38]
   14000a6cb:	add    eax,0x1
   14000a6ce:	mov    DWORD PTR [rsp+0x38],eax
   14000a6d2:	mov    r9,QWORD PTR [rsp+0x30]
   14000a6d7:	mov    r8,QWORD PTR [rsp+0x138]
   14000a6df:	mov    r8,QWORD PTR [r8+0x8]
   14000a6e3:	mov    rdx,QWORD PTR [rsp+0x130]
   14000a6eb:	mov    rdx,QWORD PTR [rdx+0x18]
   14000a6ef:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a6f7:	call   0x14000c590
   14000a6fc:	mov    eax,DWORD PTR [rsp+0x38]
   14000a700:	add    eax,0x1
   14000a703:	mov    DWORD PTR [rsp+0x38],eax
   14000a707:	mov    rcx,QWORD PTR [rsp+0x140]
   14000a70f:	mov    rax,QWORD PTR [rsp+0x28]
   14000a714:	add    rax,rcx
   14000a717:	imul   rax,rax,0x50
   14000a71b:	mov    r9,QWORD PTR [rsp+0x30]
   14000a720:	add    r9,rax
   14000a723:	mov    r8,QWORD PTR [rsp+0x130]
   14000a72b:	mov    r8,QWORD PTR [r8+0x20]
   14000a72f:	mov    rdx,QWORD PTR [rsp+0x138]
   14000a737:	mov    rdx,QWORD PTR [rdx+0x8]
   14000a73b:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a743:	call   0x14000c590
   14000a748:	nop
   14000a749:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a751:	call   0x140008aa0
   14000a756:	mov    r11,rax
   14000a759:	mov    rax,QWORD PTR [rsp+0x140]
   14000a761:	add    rax,r11
   14000a764:	mov    QWORD PTR [rsp+0x140],rax
   14000a76c:	mov    rax,QWORD PTR [rsp+0x130]
   14000a774:	cmp    QWORD PTR [rax+0x18],0x0
   14000a779:	je     0x14000a7e5
   14000a77b:	mov    r8,QWORD PTR [rsp+0x130]
   14000a783:	mov    r8,QWORD PTR [r8+0x20]
   14000a787:	mov    rdx,QWORD PTR [rsp+0x130]
   14000a78f:	mov    rdx,QWORD PTR [rdx+0x18]
   14000a793:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a79b:	call   0x140008c60
   14000a7a0:	mov    rax,QWORD PTR [rsp+0x130]
   14000a7a8:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a7b0:	mov    rcx,QWORD PTR [rcx+0x18]
   14000a7b4:	mov    rax,QWORD PTR [rax+0x28]
   14000a7b8:	sub    rax,rcx
   14000a7bb:	cqo    
   14000a7bd:	mov    ecx,0x50
   14000a7c2:	idiv   rcx
   14000a7c5:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a7cd:	add    rcx,0x10
   14000a7d1:	mov    r8,rax
   14000a7d4:	mov    rdx,QWORD PTR [rsp+0x130]
   14000a7dc:	mov    rdx,QWORD PTR [rdx+0x18]
   14000a7e0:	call   0x1400089f0
   14000a7e5:	mov    rax,QWORD PTR [rsp+0x20]
   14000a7ea:	imul   rax,rax,0x50
   14000a7ee:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a7f3:	add    rcx,rax
   14000a7f6:	mov    rax,QWORD PTR [rsp+0x130]
   14000a7fe:	mov    QWORD PTR [rax+0x28],rcx
   14000a802:	mov    rax,QWORD PTR [rsp+0x140]
   14000a80a:	imul   rax,rax,0x50
   14000a80e:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a813:	add    rcx,rax
   14000a816:	mov    rax,QWORD PTR [rsp+0x130]
   14000a81e:	mov    QWORD PTR [rax+0x20],rcx
   14000a822:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a82a:	mov    rax,QWORD PTR [rsp+0x30]
   14000a82f:	mov    QWORD PTR [rcx+0x18],rax
   14000a833:	jmp    0x14000aa50
   14000a838:	mov    rax,QWORD PTR [rsp+0x130]
   14000a840:	mov    rcx,QWORD PTR [rsp+0x138]
   14000a848:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a84c:	mov    rax,QWORD PTR [rax+0x20]
   14000a850:	sub    rax,rcx
   14000a853:	cqo    
   14000a855:	mov    ecx,0x50
   14000a85a:	idiv   rcx
   14000a85d:	cmp    rax,QWORD PTR [rsp+0x140]
   14000a865:	jae    0x14000a970
   14000a86b:	mov    rdx,QWORD PTR [rsp+0x148]
   14000a873:	lea    rcx,[rsp+0x50]
   14000a878:	call   0x14000aef0
   14000a87d:	nop
   14000a87e:	mov    r9,QWORD PTR [rsp+0x140]
   14000a886:	imul   r9,r9,0x50
   14000a88a:	mov    rax,QWORD PTR [rsp+0x138]
   14000a892:	add    r9,QWORD PTR [rax+0x8]
   14000a896:	mov    r8,QWORD PTR [rsp+0x130]
   14000a89e:	mov    r8,QWORD PTR [r8+0x20]
   14000a8a2:	mov    rdx,QWORD PTR [rsp+0x138]
   14000a8aa:	mov    rdx,QWORD PTR [rdx+0x8]
   14000a8ae:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a8b6:	call   0x14000c590
   14000a8bb:	nop
   14000a8bc:	mov    rax,QWORD PTR [rsp+0x130]
   14000a8c4:	mov    rcx,QWORD PTR [rsp+0x138]
   14000a8cc:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a8d0:	mov    rax,QWORD PTR [rax+0x20]
   14000a8d4:	sub    rax,rcx
   14000a8d7:	cqo    
   14000a8d9:	mov    ecx,0x50
   14000a8de:	idiv   rcx
   14000a8e1:	mov    r8,QWORD PTR [rsp+0x140]
   14000a8e9:	sub    r8,rax
   14000a8ec:	lea    r9,[rsp+0x50]
   14000a8f1:	mov    rdx,QWORD PTR [rsp+0x130]
   14000a8f9:	mov    rdx,QWORD PTR [rdx+0x20]
   14000a8fd:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a905:	call   0x140008c90
   14000a90a:	nop
   14000a90b:	mov    rcx,QWORD PTR [rsp+0x140]
   14000a913:	imul   rcx,rcx,0x50
   14000a917:	mov    rax,QWORD PTR [rsp+0x130]
   14000a91f:	add    rcx,QWORD PTR [rax+0x20]
   14000a923:	mov    rax,QWORD PTR [rsp+0x130]
   14000a92b:	mov    QWORD PTR [rax+0x20],rcx
   14000a92f:	mov    rax,QWORD PTR [rsp+0x140]
   14000a937:	imul   rax,rax,0x50
   14000a93b:	mov    rdx,QWORD PTR [rsp+0x130]
   14000a943:	mov    rdx,QWORD PTR [rdx+0x20]
   14000a947:	sub    rdx,rax
   14000a94a:	lea    r8,[rsp+0x50]
   14000a94f:	mov    rcx,QWORD PTR [rsp+0x138]
   14000a957:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a95b:	call   0x14000c5d0
   14000a960:	nop
   14000a961:	lea    rcx,[rsp+0x50]
   14000a966:	call   0x140005150
   14000a96b:	jmp    0x14000aa50
   14000a970:	mov    rdx,QWORD PTR [rsp+0x148]
   14000a978:	lea    rcx,[rsp+0xb0]
   14000a980:	call   0x14000aef0
   14000a985:	nop
   14000a986:	mov    rax,QWORD PTR [rsp+0x130]
   14000a98e:	mov    rax,QWORD PTR [rax+0x20]
   14000a992:	mov    QWORD PTR [rsp+0xa0],rax
   14000a99a:	mov    rax,QWORD PTR [rsp+0x140]
   14000a9a2:	imul   rax,rax,0x50
   14000a9a6:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000a9ae:	sub    rdx,rax
   14000a9b1:	mov    r9,QWORD PTR [rsp+0x130]
   14000a9b9:	mov    r9,QWORD PTR [r9+0x20]
   14000a9bd:	mov    r8,QWORD PTR [rsp+0xa0]
   14000a9c5:	mov    rcx,QWORD PTR [rsp+0x130]
   14000a9cd:	call   0x14000c590
   14000a9d2:	mov    r11,rax
   14000a9d5:	mov    rax,QWORD PTR [rsp+0x130]
   14000a9dd:	mov    QWORD PTR [rax+0x20],r11
   14000a9e1:	mov    rax,QWORD PTR [rsp+0x140]
   14000a9e9:	imul   rax,rax,0x50
   14000a9ed:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000a9f5:	sub    rdx,rax
   14000a9f8:	mov    r8,QWORD PTR [rsp+0xa0]
   14000aa00:	mov    rcx,QWORD PTR [rsp+0x138]
   14000aa08:	mov    rcx,QWORD PTR [rcx+0x8]
   14000aa0c:	call   0x14000c620
   14000aa11:	mov    rdx,QWORD PTR [rsp+0x140]
   14000aa19:	imul   rdx,rdx,0x50
   14000aa1d:	mov    rax,QWORD PTR [rsp+0x138]
   14000aa25:	add    rdx,QWORD PTR [rax+0x8]
   14000aa29:	lea    r8,[rsp+0xb0]
   14000aa31:	mov    rcx,QWORD PTR [rsp+0x138]
   14000aa39:	mov    rcx,QWORD PTR [rcx+0x8]
   14000aa3d:	call   0x14000c5d0
   14000aa42:	nop
   14000aa43:	lea    rcx,[rsp+0xb0]
   14000aa4b:	call   0x140005150
   14000aa50:	mov    rcx,QWORD PTR [rsp+0x110]
   14000aa58:	xor    rcx,rsp
   14000aa5b:	call   0x14001c500
   14000aa60:	add    rsp,0x120
   14000aa67:	pop    rbx
   14000aa68:	ret    
   14000aa69:	int3   
   14000aa6a:	int3   
   14000aa6b:	int3   
   14000aa6c:	int3   
   14000aa6d:	int3   
   14000aa6e:	int3   
   14000aa6f:	int3   
   14000aa70:	sub    rsp,0x98
   14000aa77:	mov    QWORD PTR [rsp+0x88],0xfffffffffffffffe
   14000aa83:	lea    rdx,[rip+0x34856]        # 0x14003f2e0
   14000aa8a:	lea    rcx,[rsp+0x60]
   14000aa8f:	call   0x140003170
   14000aa94:	nop
   14000aa95:	lea    rdx,[rsp+0x60]
   14000aa9a:	lea    rcx,[rsp+0x20]
   14000aa9f:	call   0x1400015c0
   14000aaa4:	lea    rdx,[rip+0x3cf1d]        # 0x1400479c8
   14000aaab:	lea    rcx,[rsp+0x20]
   14000aab0:	call   0x14001e5c0
   14000aab5:	nop
   14000aab6:	lea    rcx,[rsp+0x60]
   14000aabb:	call   0x140003220
   14000aac0:	nop
   14000aac1:	add    rsp,0x98
   14000aac8:	ret    
   14000aac9:	int3   
   14000aaca:	int3   
   14000aacb:	int3   
   14000aacc:	int3   
   14000aacd:	int3   
   14000aace:	int3   
   14000aacf:	int3   
   14000aad0:	mov    QWORD PTR [rsp+0x10],rdx
   14000aad5:	mov    QWORD PTR [rsp+0x8],rcx
   14000aada:	sub    rsp,0x28
   14000aade:	xor    edx,edx
   14000aae0:	mov    rcx,QWORD PTR [rsp+0x38]
   14000aae5:	call   0x14000c6b0
   14000aaea:	add    rsp,0x28
   14000aaee:	ret    
   14000aaef:	int3   
   14000aaf0:	mov    QWORD PTR [rsp+0x10],rdx
   14000aaf5:	mov    QWORD PTR [rsp+0x8],rcx
   14000aafa:	sub    rsp,0x28
   14000aafe:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ab03:	call   0x1400013d0
   14000ab08:	movzx  eax,al
   14000ab0b:	test   eax,eax
   14000ab0d:	je     0x14000ab25
   14000ab0f:	mov    rdx,QWORD PTR [rsp+0x38]
   14000ab14:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ab19:	call   0x140001390
   14000ab1e:	movzx  eax,al
   14000ab21:	test   eax,eax
   14000ab23:	jne    0x14000ab2a
   14000ab25:	call   0x14001cd78
   14000ab2a:	xor    eax,eax
   14000ab2c:	test   eax,eax
   14000ab2e:	jne    0x14000ab2a
   14000ab30:	mov    rax,QWORD PTR [rsp+0x30]
   14000ab35:	mov    rcx,QWORD PTR [rsp+0x38]
   14000ab3a:	mov    rcx,QWORD PTR [rcx+0x8]
   14000ab3e:	mov    rax,QWORD PTR [rax+0x8]
   14000ab42:	sub    rax,rcx
   14000ab45:	cqo    
   14000ab47:	mov    ecx,0x28
   14000ab4c:	idiv   rcx
   14000ab4f:	add    rsp,0x28
   14000ab53:	ret    
   14000ab54:	int3   
   14000ab55:	int3   
   14000ab56:	int3   
   14000ab57:	int3   
   14000ab58:	int3   
   14000ab59:	int3   
   14000ab5a:	int3   
   14000ab5b:	int3   
   14000ab5c:	int3   
   14000ab5d:	int3   
   14000ab5e:	int3   
   14000ab5f:	int3   
   14000ab60:	mov    QWORD PTR [rsp+0x10],rdx
   14000ab65:	mov    QWORD PTR [rsp+0x8],rcx
   14000ab6a:	sub    rsp,0x28
   14000ab6e:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ab73:	call   0x1400013d0
   14000ab78:	movzx  eax,al
   14000ab7b:	test   eax,eax
   14000ab7d:	je     0x14000ab95
   14000ab7f:	mov    rdx,QWORD PTR [rsp+0x38]
   14000ab84:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ab89:	call   0x140001390
   14000ab8e:	movzx  eax,al
   14000ab91:	test   eax,eax
   14000ab93:	jne    0x14000ab9a
   14000ab95:	call   0x14001cd78
   14000ab9a:	xor    eax,eax
   14000ab9c:	test   eax,eax
   14000ab9e:	jne    0x14000ab9a
   14000aba0:	mov    rax,QWORD PTR [rsp+0x30]
   14000aba5:	mov    rcx,QWORD PTR [rsp+0x38]
   14000abaa:	mov    rcx,QWORD PTR [rcx+0x8]
   14000abae:	mov    rax,QWORD PTR [rax+0x8]
   14000abb2:	sub    rax,rcx
   14000abb5:	cqo    
   14000abb7:	mov    ecx,0x50
   14000abbc:	idiv   rcx
   14000abbf:	add    rsp,0x28
   14000abc3:	ret    
   14000abc4:	int3   
   14000abc5:	int3   
   14000abc6:	int3   
   14000abc7:	int3   
   14000abc8:	int3   
   14000abc9:	int3   
   14000abca:	int3   
   14000abcb:	int3   
   14000abcc:	int3   
   14000abcd:	int3   
   14000abce:	int3   
   14000abcf:	int3   
   14000abd0:	mov    DWORD PTR [rsp+0x20],r9d
   14000abd5:	mov    QWORD PTR [rsp+0x18],r8
   14000abda:	mov    QWORD PTR [rsp+0x10],rdx
   14000abdf:	mov    QWORD PTR [rsp+0x8],rcx
   14000abe4:	sub    rsp,0x38
   14000abe8:	mov    rax,QWORD PTR [rsp+0x40]
   14000abed:	mov    QWORD PTR [rax+0x70],0x0
   14000abf5:	mov    rcx,QWORD PTR [rsp+0x40]
   14000abfa:	mov    eax,DWORD PTR [rsp+0x58]
   14000abfe:	mov    DWORD PTR [rcx+0x78],eax
   14000ac01:	cmp    QWORD PTR [rsp+0x50],0x0
   14000ac07:	je     0x14000ad32
   14000ac0d:	mov    rax,QWORD PTR [rsp+0x40]
   14000ac12:	mov    eax,DWORD PTR [rax+0x78]
   14000ac15:	and    eax,0x6
   14000ac18:	cmp    eax,0x6
   14000ac1b:	je     0x14000ad32
   14000ac21:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ac26:	add    rcx,0x7c
   14000ac2a:	mov    rdx,QWORD PTR [rsp+0x50]
   14000ac2f:	call   0x140008770
   14000ac34:	mov    QWORD PTR [rsp+0x20],rax
   14000ac39:	mov    r9,QWORD PTR [rsp+0x50]
   14000ac3e:	mov    r8,QWORD PTR [rsp+0x48]
   14000ac43:	mov    rdx,QWORD PTR [rsp+0x50]
   14000ac48:	mov    rcx,QWORD PTR [rsp+0x20]
   14000ac4d:	call   0x14000b4b0
   14000ac52:	mov    r11,QWORD PTR [rsp+0x20]
   14000ac57:	mov    rax,QWORD PTR [rsp+0x50]
   14000ac5c:	lea    rcx,[r11+rax*2]
   14000ac60:	mov    rax,QWORD PTR [rsp+0x40]
   14000ac65:	mov    QWORD PTR [rax+0x70],rcx
   14000ac69:	mov    rax,QWORD PTR [rsp+0x40]
   14000ac6e:	mov    eax,DWORD PTR [rax+0x78]
   14000ac71:	and    eax,0x4
   14000ac74:	test   eax,eax
   14000ac76:	jne    0x14000ac9a
   14000ac78:	mov    rcx,QWORD PTR [rsp+0x20]
   14000ac7d:	mov    rax,QWORD PTR [rsp+0x50]
   14000ac82:	lea    r9,[rcx+rax*2]
   14000ac86:	mov    r8,QWORD PTR [rsp+0x20]
   14000ac8b:	mov    rdx,QWORD PTR [rsp+0x20]
   14000ac90:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ac95:	call   0x140007e80
   14000ac9a:	mov    rax,QWORD PTR [rsp+0x40]
   14000ac9f:	mov    eax,DWORD PTR [rax+0x78]
   14000aca2:	and    eax,0x2
   14000aca5:	test   eax,eax
   14000aca7:	jne    0x14000ad1f
   14000aca9:	mov    rax,QWORD PTR [rsp+0x40]
   14000acae:	mov    eax,DWORD PTR [rax+0x78]
   14000acb1:	and    eax,0x10
   14000acb4:	test   eax,eax
   14000acb6:	je     0x14000accd
   14000acb8:	mov    rcx,QWORD PTR [rsp+0x20]
   14000acbd:	mov    rax,QWORD PTR [rsp+0x50]
   14000acc2:	lea    rax,[rcx+rax*2]
   14000acc6:	mov    QWORD PTR [rsp+0x28],rax
   14000accb:	jmp    0x14000acd7
   14000accd:	mov    rax,QWORD PTR [rsp+0x20]
   14000acd2:	mov    QWORD PTR [rsp+0x28],rax
   14000acd7:	mov    rcx,QWORD PTR [rsp+0x20]
   14000acdc:	mov    rax,QWORD PTR [rsp+0x50]
   14000ace1:	lea    r9,[rcx+rax*2]
   14000ace5:	mov    r8,QWORD PTR [rsp+0x28]
   14000acea:	mov    rdx,QWORD PTR [rsp+0x20]
   14000acef:	mov    rcx,QWORD PTR [rsp+0x40]
   14000acf4:	call   0x140007f60
   14000acf9:	mov    rcx,QWORD PTR [rsp+0x40]
   14000acfe:	call   0x140005a60
   14000ad03:	test   rax,rax
   14000ad06:	jne    0x14000ad1f
   14000ad08:	mov    r9,QWORD PTR [rsp+0x20]
   14000ad0d:	xor    r8d,r8d
   14000ad10:	mov    rdx,QWORD PTR [rsp+0x20]
   14000ad15:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ad1a:	call   0x140007e80
   14000ad1f:	mov    rax,QWORD PTR [rsp+0x40]
   14000ad24:	mov    ecx,DWORD PTR [rax+0x78]
   14000ad27:	or     ecx,0x1
   14000ad2a:	mov    rax,QWORD PTR [rsp+0x40]
   14000ad2f:	mov    DWORD PTR [rax+0x78],ecx
   14000ad32:	add    rsp,0x38
   14000ad36:	ret    
   14000ad37:	int3   
   14000ad38:	int3   
   14000ad39:	int3   
   14000ad3a:	int3   
   14000ad3b:	int3   
   14000ad3c:	int3   
   14000ad3d:	int3   
   14000ad3e:	int3   
   14000ad3f:	int3   
   14000ad40:	mov    DWORD PTR [rsp+0x10],edx
   14000ad44:	mov    QWORD PTR [rsp+0x8],rcx
   14000ad49:	sub    rsp,0x18
   14000ad4d:	mov    DWORD PTR [rsp],0x0
   14000ad54:	mov    eax,DWORD PTR [rsp+0x28]
   14000ad58:	and    eax,0x1
   14000ad5b:	test   eax,eax
   14000ad5d:	jne    0x14000ad68
   14000ad5f:	mov    eax,DWORD PTR [rsp]
   14000ad62:	or     eax,0x4
   14000ad65:	mov    DWORD PTR [rsp],eax
   14000ad68:	mov    eax,DWORD PTR [rsp+0x28]
   14000ad6c:	and    eax,0x2
   14000ad6f:	test   eax,eax
   14000ad71:	jne    0x14000ad7c
   14000ad73:	mov    eax,DWORD PTR [rsp]
   14000ad76:	or     eax,0x2
   14000ad79:	mov    DWORD PTR [rsp],eax
   14000ad7c:	mov    eax,DWORD PTR [rsp+0x28]
   14000ad80:	and    eax,0x8
   14000ad83:	test   eax,eax
   14000ad85:	je     0x14000ad90
   14000ad87:	mov    eax,DWORD PTR [rsp]
   14000ad8a:	or     eax,0x8
   14000ad8d:	mov    DWORD PTR [rsp],eax
   14000ad90:	mov    eax,DWORD PTR [rsp+0x28]
   14000ad94:	and    eax,0x4
   14000ad97:	test   eax,eax
   14000ad99:	je     0x14000ada4
   14000ad9b:	mov    eax,DWORD PTR [rsp]
   14000ad9e:	or     eax,0x10
   14000ada1:	mov    DWORD PTR [rsp],eax
   14000ada4:	mov    eax,DWORD PTR [rsp]
   14000ada7:	add    rsp,0x18
   14000adab:	ret    
   14000adac:	int3   
   14000adad:	int3   
   14000adae:	int3   
   14000adaf:	int3   
   14000adb0:	mov    QWORD PTR [rsp+0x18],r8
   14000adb5:	mov    QWORD PTR [rsp+0x10],rdx
   14000adba:	mov    QWORD PTR [rsp+0x8],rcx
   14000adbf:	push   rsi
   14000adc0:	push   rdi
   14000adc1:	sub    rsp,0x58
   14000adc5:	lea    rdi,[rsp+0x40]
   14000adca:	mov    rsi,QWORD PTR [rsp+0x70]
   14000adcf:	mov    ecx,0x10
   14000add4:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000add6:	lea    rdi,[rsp+0x20]
   14000addb:	lea    rsi,[rsp+0x40]
   14000ade0:	mov    ecx,0x10
   14000ade5:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ade7:	mov    rdx,QWORD PTR [rsp+0x80]
   14000adef:	lea    rcx,[rsp+0x20]
   14000adf4:	call   0x14000b100
   14000adf9:	lea    rdi,[rsp+0x30]
   14000adfe:	mov    rsi,rax
   14000ae01:	mov    ecx,0x10
   14000ae06:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ae08:	lea    rsi,[rsp+0x30]
   14000ae0d:	mov    rdi,QWORD PTR [rsp+0x78]
   14000ae12:	mov    ecx,0x10
   14000ae17:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ae19:	mov    rax,QWORD PTR [rsp+0x78]
   14000ae1e:	add    rsp,0x58
   14000ae22:	pop    rdi
   14000ae23:	pop    rsi
   14000ae24:	ret    
   14000ae25:	int3   
   14000ae26:	int3   
   14000ae27:	int3   
   14000ae28:	int3   
   14000ae29:	int3   
   14000ae2a:	int3   
   14000ae2b:	int3   
   14000ae2c:	int3   
   14000ae2d:	int3   
   14000ae2e:	int3   
   14000ae2f:	int3   
   14000ae30:	mov    QWORD PTR [rsp+0x18],r8
   14000ae35:	mov    QWORD PTR [rsp+0x10],rdx
   14000ae3a:	mov    QWORD PTR [rsp+0x8],rcx
   14000ae3f:	push   rsi
   14000ae40:	push   rdi
   14000ae41:	sub    rsp,0x58
   14000ae45:	lea    rdi,[rsp+0x40]
   14000ae4a:	mov    rsi,QWORD PTR [rsp+0x70]
   14000ae4f:	mov    ecx,0x10
   14000ae54:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ae56:	lea    rdi,[rsp+0x20]
   14000ae5b:	lea    rsi,[rsp+0x40]
   14000ae60:	mov    ecx,0x10
   14000ae65:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ae67:	mov    rdx,QWORD PTR [rsp+0x80]
   14000ae6f:	lea    rcx,[rsp+0x20]
   14000ae74:	call   0x14000b130
   14000ae79:	lea    rdi,[rsp+0x30]
   14000ae7e:	mov    rsi,rax
   14000ae81:	mov    ecx,0x10
   14000ae86:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ae88:	lea    rsi,[rsp+0x30]
   14000ae8d:	mov    rdi,QWORD PTR [rsp+0x78]
   14000ae92:	mov    ecx,0x10
   14000ae97:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ae99:	mov    rax,QWORD PTR [rsp+0x78]
   14000ae9e:	add    rsp,0x58
   14000aea2:	pop    rdi
   14000aea3:	pop    rsi
   14000aea4:	ret    
   14000aea5:	int3   
   14000aea6:	int3   
   14000aea7:	int3   
   14000aea8:	int3   
   14000aea9:	int3   
   14000aeaa:	int3   
   14000aeab:	int3   
   14000aeac:	int3   
   14000aead:	int3   
   14000aeae:	int3   
   14000aeaf:	int3   
   14000aeb0:	mov    QWORD PTR [rsp+0x10],rdx
   14000aeb5:	mov    QWORD PTR [rsp+0x8],rcx
   14000aeba:	sub    rsp,0x28
   14000aebe:	mov    rdx,QWORD PTR [rsp+0x38]
   14000aec3:	mov    rcx,QWORD PTR [rsp+0x30]
   14000aec8:	call   0x140002040
   14000aecd:	mov    r11,QWORD PTR [rsp+0x30]
   14000aed2:	lea    rax,[rip+0x2f887]        # 0x14003a760
   14000aed9:	mov    QWORD PTR [r11],rax
   14000aedc:	mov    rax,QWORD PTR [rsp+0x30]
   14000aee1:	add    rsp,0x28
   14000aee5:	ret    
   14000aee6:	int3   
   14000aee7:	int3   
   14000aee8:	int3   
   14000aee9:	int3   
   14000aeea:	int3   
   14000aeeb:	int3   
   14000aeec:	int3   
   14000aeed:	int3   
   14000aeee:	int3   
   14000aeef:	int3   
   14000aef0:	mov    QWORD PTR [rsp+0x10],rdx
   14000aef5:	mov    QWORD PTR [rsp+0x8],rcx
   14000aefa:	sub    rsp,0x38
   14000aefe:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000af07:	mov    rdx,QWORD PTR [rsp+0x48]
   14000af0c:	mov    rcx,QWORD PTR [rsp+0x40]
   14000af11:	call   0x140005d30
   14000af16:	nop
   14000af17:	mov    rdx,QWORD PTR [rsp+0x48]
   14000af1c:	add    rdx,0x28
   14000af20:	mov    rcx,QWORD PTR [rsp+0x40]
   14000af25:	add    rcx,0x28
   14000af29:	call   0x140005d30
   14000af2e:	nop
   14000af2f:	mov    rax,QWORD PTR [rsp+0x40]
   14000af34:	add    rsp,0x38
   14000af38:	ret    
   14000af39:	int3   
   14000af3a:	int3   
   14000af3b:	int3   
   14000af3c:	int3   
   14000af3d:	int3   
   14000af3e:	int3   
   14000af3f:	int3   
   14000af40:	mov    BYTE PTR [rsp+0x18],r8b
   14000af45:	mov    QWORD PTR [rsp+0x10],rdx
   14000af4a:	mov    QWORD PTR [rsp+0x8],rcx
   14000af4f:	sub    rsp,0x28
   14000af53:	mov    rcx,QWORD PTR [rsp+0x30]
   14000af58:	call   0x140002d20
   14000af5d:	mov    r11,QWORD PTR [rsp+0x30]
   14000af62:	mov    rax,QWORD PTR [rsp+0x38]
   14000af67:	mov    QWORD PTR [r11+0x48],rax
   14000af6b:	mov    rax,QWORD PTR [rsp+0x30]
   14000af70:	mov    QWORD PTR [rax+0x50],0x0
   14000af78:	mov    dl,0x20
   14000af7a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000af7f:	call   0x14000b160
   14000af84:	movzx  r11d,ax
   14000af88:	mov    rax,QWORD PTR [rsp+0x30]
   14000af8d:	mov    WORD PTR [rax+0x58],r11w
   14000af92:	mov    rax,QWORD PTR [rsp+0x30]
   14000af97:	cmp    QWORD PTR [rax+0x48],0x0
   14000af9c:	jne    0x14000afb0
   14000af9e:	xor    r8d,r8d
   14000afa1:	mov    edx,0x4
   14000afa6:	mov    rcx,QWORD PTR [rsp+0x30]
   14000afab:	call   0x140003400
   14000afb0:	movzx  eax,BYTE PTR [rsp+0x40]
   14000afb5:	test   eax,eax
   14000afb7:	je     0x14000afc5
   14000afb9:	mov    rcx,QWORD PTR [rsp+0x30]
   14000afbe:	call   0x14001a124
   14000afc3:	jmp    0x14000afd2
   14000afc5:	mov    rax,QWORD PTR [rsp+0x30]
   14000afca:	mov    QWORD PTR [rax+0x8],0x0
   14000afd2:	add    rsp,0x28
   14000afd6:	ret    
   14000afd7:	int3   
   14000afd8:	int3   
   14000afd9:	int3   
   14000afda:	int3   
   14000afdb:	int3   
   14000afdc:	int3   
   14000afdd:	int3   
   14000afde:	int3   
   14000afdf:	int3   
   14000afe0:	mov    QWORD PTR [rsp+0x8],rcx
   14000afe5:	sub    rsp,0x28
   14000afe9:	mov    rcx,QWORD PTR [rsp+0x30]
   14000afee:	add    rcx,0x10
   14000aff2:	mov    rax,QWORD PTR [rsp+0x30]
   14000aff7:	mov    QWORD PTR [rax+0x20],rcx
   14000affb:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b000:	add    rcx,0x18
   14000b004:	mov    rax,QWORD PTR [rsp+0x30]
   14000b009:	mov    QWORD PTR [rax+0x28],rcx
   14000b00d:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b012:	add    rcx,0x30
   14000b016:	mov    rax,QWORD PTR [rsp+0x30]
   14000b01b:	mov    QWORD PTR [rax+0x40],rcx
   14000b01f:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b024:	add    rcx,0x38
   14000b028:	mov    rax,QWORD PTR [rsp+0x30]
   14000b02d:	mov    QWORD PTR [rax+0x48],rcx
   14000b031:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b036:	add    rcx,0x50
   14000b03a:	mov    rax,QWORD PTR [rsp+0x30]
   14000b03f:	mov    QWORD PTR [rax+0x58],rcx
   14000b043:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b048:	add    rcx,0x54
   14000b04c:	mov    rax,QWORD PTR [rsp+0x30]
   14000b051:	mov    QWORD PTR [rax+0x60],rcx
   14000b055:	xor    r8d,r8d
   14000b058:	xor    edx,edx
   14000b05a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b05f:	call   0x140007f10
   14000b064:	xor    r9d,r9d
   14000b067:	xor    r8d,r8d
   14000b06a:	xor    edx,edx
   14000b06c:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b071:	call   0x140007e80
   14000b076:	add    rsp,0x28
   14000b07a:	ret    
   14000b07b:	int3   
   14000b07c:	int3   
   14000b07d:	int3   
   14000b07e:	int3   
   14000b07f:	int3   
   14000b080:	mov    QWORD PTR [rsp+0x8],rcx
   14000b085:	sub    rsp,0x18
   14000b089:	movabs rax,0x666666666666666
   14000b093:	mov    QWORD PTR [rsp],rax
   14000b097:	cmp    QWORD PTR [rsp],0x0
   14000b09c:	jbe    0x14000b0a9
   14000b09e:	mov    rax,QWORD PTR [rsp]
   14000b0a2:	mov    QWORD PTR [rsp+0x8],rax
   14000b0a7:	jmp    0x14000b0b2
   14000b0a9:	mov    QWORD PTR [rsp+0x8],0x1
   14000b0b2:	mov    rax,QWORD PTR [rsp+0x8]
   14000b0b7:	add    rsp,0x18
   14000b0bb:	ret    
   14000b0bc:	int3   
   14000b0bd:	int3   
   14000b0be:	int3   
   14000b0bf:	int3   
   14000b0c0:	mov    QWORD PTR [rsp+0x8],rcx
   14000b0c5:	sub    rsp,0x18
   14000b0c9:	movabs rax,0x333333333333333
   14000b0d3:	mov    QWORD PTR [rsp],rax
   14000b0d7:	cmp    QWORD PTR [rsp],0x0
   14000b0dc:	jbe    0x14000b0e9
   14000b0de:	mov    rax,QWORD PTR [rsp]
   14000b0e2:	mov    QWORD PTR [rsp+0x8],rax
   14000b0e7:	jmp    0x14000b0f2
   14000b0e9:	mov    QWORD PTR [rsp+0x8],0x1
   14000b0f2:	mov    rax,QWORD PTR [rsp+0x8]
   14000b0f7:	add    rsp,0x18
   14000b0fb:	ret    
   14000b0fc:	int3   
   14000b0fd:	int3   
   14000b0fe:	int3   
   14000b0ff:	int3   
   14000b100:	mov    QWORD PTR [rsp+0x10],rdx
   14000b105:	mov    QWORD PTR [rsp+0x8],rcx
   14000b10a:	sub    rsp,0x28
   14000b10e:	mov    rdx,QWORD PTR [rsp+0x38]
   14000b113:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b118:	call   0x14000b1d0
   14000b11d:	mov    rax,QWORD PTR [rsp+0x30]
   14000b122:	add    rsp,0x28
   14000b126:	ret    
   14000b127:	int3   
   14000b128:	int3   
   14000b129:	int3   
   14000b12a:	int3   
   14000b12b:	int3   
   14000b12c:	int3   
   14000b12d:	int3   
   14000b12e:	int3   
   14000b12f:	int3   
   14000b130:	mov    QWORD PTR [rsp+0x10],rdx
   14000b135:	mov    QWORD PTR [rsp+0x8],rcx
   14000b13a:	sub    rsp,0x28
   14000b13e:	mov    rdx,QWORD PTR [rsp+0x38]
   14000b143:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b148:	call   0x14000b270
   14000b14d:	mov    rax,QWORD PTR [rsp+0x30]
   14000b152:	add    rsp,0x28
   14000b156:	ret    
   14000b157:	int3   
   14000b158:	int3   
   14000b159:	int3   
   14000b15a:	int3   
   14000b15b:	int3   
   14000b15c:	int3   
   14000b15d:	int3   
   14000b15e:	int3   
   14000b15f:	int3   
   14000b160:	mov    BYTE PTR [rsp+0x10],dl
   14000b164:	mov    QWORD PTR [rsp+0x8],rcx
   14000b169:	sub    rsp,0x58
   14000b16d:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000b176:	lea    rdx,[rsp+0x28]
   14000b17b:	mov    rcx,QWORD PTR [rsp+0x60]
   14000b180:	call   0x140002ca0
   14000b185:	mov    QWORD PTR [rsp+0x38],rax
   14000b18a:	mov    rax,QWORD PTR [rsp+0x38]
   14000b18f:	mov    QWORD PTR [rsp+0x40],rax
   14000b194:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b199:	call   0x14000b310
   14000b19e:	mov    QWORD PTR [rsp+0x20],rax
   14000b1a3:	lea    rcx,[rsp+0x28]
   14000b1a8:	call   0x140001b80
   14000b1ad:	movzx  edx,BYTE PTR [rsp+0x68]
   14000b1b2:	mov    rcx,QWORD PTR [rsp+0x20]
   14000b1b7:	call   0x1400020e0
   14000b1bc:	add    rsp,0x58
   14000b1c0:	ret    
   14000b1c1:	int3   
   14000b1c2:	int3   
   14000b1c3:	int3   
   14000b1c4:	int3   
   14000b1c5:	int3   
   14000b1c6:	int3   
   14000b1c7:	int3   
   14000b1c8:	int3   
   14000b1c9:	int3   
   14000b1ca:	int3   
   14000b1cb:	int3   
   14000b1cc:	int3   
   14000b1cd:	int3   
   14000b1ce:	int3   
   14000b1cf:	int3   
   14000b1d0:	mov    QWORD PTR [rsp+0x10],rdx
   14000b1d5:	mov    QWORD PTR [rsp+0x8],rcx
   14000b1da:	push   rbx
   14000b1db:	sub    rsp,0x20
   14000b1df:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b1e4:	call   0x1400013d0
   14000b1e9:	movzx  eax,al
   14000b1ec:	test   eax,eax
   14000b1ee:	jne    0x14000b1f5
   14000b1f0:	call   0x14001cd78
   14000b1f5:	xor    eax,eax
   14000b1f7:	test   eax,eax
   14000b1f9:	jne    0x14000b1f5
   14000b1fb:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b200:	imul   rbx,rbx,0x28
   14000b204:	mov    rax,QWORD PTR [rsp+0x30]
   14000b209:	add    rbx,QWORD PTR [rax+0x8]
   14000b20d:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b212:	call   0x140001350
   14000b217:	cmp    rbx,QWORD PTR [rax+0x20]
   14000b21b:	ja     0x14000b23f
   14000b21d:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b222:	imul   rbx,rbx,0x28
   14000b226:	mov    rax,QWORD PTR [rsp+0x30]
   14000b22b:	add    rbx,QWORD PTR [rax+0x8]
   14000b22f:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b234:	call   0x140001350
   14000b239:	cmp    rbx,QWORD PTR [rax+0x18]
   14000b23d:	jae    0x14000b244
   14000b23f:	call   0x14001cd78
   14000b244:	xor    eax,eax
   14000b246:	test   eax,eax
   14000b248:	jne    0x14000b244
   14000b24a:	mov    rcx,QWORD PTR [rsp+0x38]
   14000b24f:	imul   rcx,rcx,0x28
   14000b253:	mov    rax,QWORD PTR [rsp+0x30]
   14000b258:	add    rcx,QWORD PTR [rax+0x8]
   14000b25c:	mov    rax,QWORD PTR [rsp+0x30]
   14000b261:	mov    QWORD PTR [rax+0x8],rcx
   14000b265:	mov    rax,QWORD PTR [rsp+0x30]
   14000b26a:	add    rsp,0x20
   14000b26e:	pop    rbx
   14000b26f:	ret    
   14000b270:	mov    QWORD PTR [rsp+0x10],rdx
   14000b275:	mov    QWORD PTR [rsp+0x8],rcx
   14000b27a:	push   rbx
   14000b27b:	sub    rsp,0x20
   14000b27f:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b284:	call   0x1400013d0
   14000b289:	movzx  eax,al
   14000b28c:	test   eax,eax
   14000b28e:	jne    0x14000b295
   14000b290:	call   0x14001cd78
   14000b295:	xor    eax,eax
   14000b297:	test   eax,eax
   14000b299:	jne    0x14000b295
   14000b29b:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b2a0:	imul   rbx,rbx,0x50
   14000b2a4:	mov    rax,QWORD PTR [rsp+0x30]
   14000b2a9:	add    rbx,QWORD PTR [rax+0x8]
   14000b2ad:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b2b2:	call   0x140001350
   14000b2b7:	cmp    rbx,QWORD PTR [rax+0x20]
   14000b2bb:	ja     0x14000b2df
   14000b2bd:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b2c2:	imul   rbx,rbx,0x50
   14000b2c6:	mov    rax,QWORD PTR [rsp+0x30]
   14000b2cb:	add    rbx,QWORD PTR [rax+0x8]
   14000b2cf:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b2d4:	call   0x140001350
   14000b2d9:	cmp    rbx,QWORD PTR [rax+0x18]
   14000b2dd:	jae    0x14000b2e4
   14000b2df:	call   0x14001cd78
   14000b2e4:	xor    eax,eax
   14000b2e6:	test   eax,eax
   14000b2e8:	jne    0x14000b2e4
   14000b2ea:	mov    rcx,QWORD PTR [rsp+0x38]
   14000b2ef:	imul   rcx,rcx,0x50
   14000b2f3:	mov    rax,QWORD PTR [rsp+0x30]
   14000b2f8:	add    rcx,QWORD PTR [rax+0x8]
   14000b2fc:	mov    rax,QWORD PTR [rsp+0x30]
   14000b301:	mov    QWORD PTR [rax+0x8],rcx
   14000b305:	mov    rax,QWORD PTR [rsp+0x30]
   14000b30a:	add    rsp,0x20
   14000b30e:	pop    rbx
   14000b30f:	ret    
   14000b310:	mov    QWORD PTR [rsp+0x8],rcx
   14000b315:	sub    rsp,0x78
   14000b319:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   14000b322:	xor    edx,edx
   14000b324:	lea    rcx,[rsp+0x30]
   14000b329:	call   0x1400194bc
   14000b32e:	nop
   14000b32f:	mov    rax,QWORD PTR [rip+0x4175a]        # 0x14004ca90
   14000b336:	mov    QWORD PTR [rsp+0x38],rax
   14000b33b:	lea    rcx,[rip+0x403ce]        # 0x14004b710
   14000b342:	call   0x140001960
   14000b347:	mov    QWORD PTR [rsp+0x28],rax
   14000b34c:	mov    rdx,QWORD PTR [rsp+0x28]
   14000b351:	mov    rcx,QWORD PTR [rsp+0x80]
   14000b359:	call   0x140001c40
   14000b35e:	mov    QWORD PTR [rsp+0x20],rax
   14000b363:	cmp    QWORD PTR [rsp+0x20],0x0
   14000b369:	je     0x14000b370
   14000b36b:	jmp    0x14000b3f5
   14000b370:	cmp    QWORD PTR [rsp+0x38],0x0
   14000b376:	je     0x14000b384
   14000b378:	mov    rax,QWORD PTR [rsp+0x38]
   14000b37d:	mov    QWORD PTR [rsp+0x20],rax
   14000b382:	jmp    0x14000b3f5
   14000b384:	mov    rdx,QWORD PTR [rsp+0x80]
   14000b38c:	lea    rcx,[rsp+0x38]
   14000b391:	call   0x140002160
   14000b396:	cmp    rax,0xffffffffffffffff
   14000b39a:	jne    0x14000b3c1
   14000b39c:	lea    rdx,[rip+0x33f5d]        # 0x14003f300
   14000b3a3:	lea    rcx,[rsp+0x48]
   14000b3a8:	call   0x14001c97c
   14000b3ad:	lea    rdx,[rip+0x3c674]        # 0x140047a28
   14000b3b4:	lea    rcx,[rsp+0x48]
   14000b3b9:	call   0x14001e5c0
   14000b3be:	nop
   14000b3bf:	jmp    0x14000b3f5
   14000b3c1:	mov    rax,QWORD PTR [rsp+0x38]
   14000b3c6:	mov    QWORD PTR [rsp+0x20],rax
   14000b3cb:	mov    rax,QWORD PTR [rsp+0x38]
   14000b3d0:	mov    QWORD PTR [rip+0x416b9],rax        # 0x14004ca90
   14000b3d7:	mov    rax,QWORD PTR [rsp+0x38]
   14000b3dc:	mov    QWORD PTR [rsp+0x40],rax
   14000b3e1:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b3e6:	call   0x1400019c0
   14000b3eb:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b3f0:	call   0x140001aa0
   14000b3f5:	mov    rax,QWORD PTR [rsp+0x20]
   14000b3fa:	mov    QWORD PTR [rsp+0x60],rax
   14000b3ff:	lea    rcx,[rsp+0x30]
   14000b404:	call   0x1400194ec
   14000b409:	mov    rax,QWORD PTR [rsp+0x60]
   14000b40e:	add    rsp,0x78
   14000b412:	ret    
   14000b413:	int3   
   14000b414:	int3   
   14000b415:	int3   
   14000b416:	int3   
   14000b417:	int3   
   14000b418:	int3   
   14000b419:	int3   
   14000b41a:	int3   
   14000b41b:	int3   
   14000b41c:	int3   
   14000b41d:	int3   
   14000b41e:	int3   
   14000b41f:	int3   
   14000b420:	mov    QWORD PTR [rsp+0x10],rdx
   14000b425:	mov    QWORD PTR [rsp+0x8],rcx
   14000b42a:	sub    rsp,0x38
   14000b42e:	mov    rdx,QWORD PTR [rsp+0x48]
   14000b433:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b438:	call   0x14000ca20
   14000b43d:	test   eax,eax
   14000b43f:	jne    0x14000b44b
   14000b441:	mov    DWORD PTR [rsp+0x20],0x1
   14000b449:	jmp    0x14000b453
   14000b44b:	mov    DWORD PTR [rsp+0x20],0x0
   14000b453:	mov    al,BYTE PTR [rsp+0x20]
   14000b457:	add    rsp,0x38
   14000b45b:	ret    
   14000b45c:	int3   
   14000b45d:	int3   
   14000b45e:	int3   
   14000b45f:	int3   
   14000b460:	mov    QWORD PTR [rsp+0x20],r9
   14000b465:	mov    QWORD PTR [rsp+0x18],r8
   14000b46a:	mov    QWORD PTR [rsp+0x10],rdx
   14000b46f:	mov    QWORD PTR [rsp+0x8],rcx
   14000b474:	sub    rsp,0x48
   14000b478:	call   0x14000f9e0
   14000b47d:	mov    BYTE PTR [rsp+0x30],al
   14000b481:	movzx  eax,BYTE PTR [rsp+0x30]
   14000b486:	mov    BYTE PTR [rsp+0x20],al
   14000b48a:	mov    r9,QWORD PTR [rsp+0x68]
   14000b48f:	mov    r8,QWORD PTR [rsp+0x60]
   14000b494:	mov    rdx,QWORD PTR [rsp+0x58]
   14000b499:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b49e:	call   0x14000f9f0
   14000b4a3:	add    rsp,0x48
   14000b4a7:	ret    
   14000b4a8:	int3   
   14000b4a9:	int3   
   14000b4aa:	int3   
   14000b4ab:	int3   
   14000b4ac:	int3   
   14000b4ad:	int3   
   14000b4ae:	int3   
   14000b4af:	int3   
   14000b4b0:	mov    QWORD PTR [rsp+0x20],r9
   14000b4b5:	mov    QWORD PTR [rsp+0x18],r8
   14000b4ba:	mov    QWORD PTR [rsp+0x10],rdx
   14000b4bf:	mov    QWORD PTR [rsp+0x8],rcx
   14000b4c4:	sub    rsp,0x48
   14000b4c8:	call   0x14000f9e0
   14000b4cd:	mov    BYTE PTR [rsp+0x30],al
   14000b4d1:	movzx  eax,BYTE PTR [rsp+0x30]
   14000b4d6:	mov    BYTE PTR [rsp+0x20],al
   14000b4da:	mov    r9,QWORD PTR [rsp+0x68]
   14000b4df:	mov    r8,QWORD PTR [rsp+0x60]
   14000b4e4:	mov    rdx,QWORD PTR [rsp+0x58]
   14000b4e9:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b4ee:	call   0x14000fa30
   14000b4f3:	add    rsp,0x48
   14000b4f7:	ret    
   14000b4f8:	int3   
   14000b4f9:	int3   
   14000b4fa:	int3   
   14000b4fb:	int3   
   14000b4fc:	int3   
   14000b4fd:	int3   
   14000b4fe:	int3   
   14000b4ff:	int3   
   14000b500:	mov    QWORD PTR [rsp+0x10],rdx
   14000b505:	mov    QWORD PTR [rsp+0x8],rcx
   14000b50a:	sub    rsp,0x38
   14000b50e:	mov    rdx,QWORD PTR [rsp+0x48]
   14000b513:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b518:	call   0x14000c9d0
   14000b51d:	test   eax,eax
   14000b51f:	jne    0x14000b52b
   14000b521:	mov    DWORD PTR [rsp+0x20],0x1
   14000b529:	jmp    0x14000b533
   14000b52b:	mov    DWORD PTR [rsp+0x20],0x0
   14000b533:	mov    al,BYTE PTR [rsp+0x20]
   14000b537:	add    rsp,0x38
   14000b53b:	ret    
   14000b53c:	int3   
   14000b53d:	int3   
   14000b53e:	int3   
   14000b53f:	int3   
   14000b540:	mov    WORD PTR [rsp+0x10],dx
   14000b545:	mov    QWORD PTR [rsp+0x8],rcx
   14000b54a:	push   rbx
   14000b54b:	sub    rsp,0x70
   14000b54f:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14000b558:	mov    DWORD PTR [rsp+0x20],0x0
   14000b560:	mov    rdx,QWORD PTR [rsp+0x80]
   14000b568:	lea    rcx,[rsp+0x28]
   14000b56d:	call   0x1400068f0
   14000b572:	nop
   14000b573:	lea    rcx,[rsp+0x28]
   14000b578:	call   0x1400069f0
   14000b57d:	movzx  eax,al
   14000b580:	test   eax,eax
   14000b582:	je     0x14000b7eb
   14000b588:	mov    rax,QWORD PTR [rsp+0x80]
   14000b590:	mov    rax,QWORD PTR [rax]
   14000b593:	movsxd rax,DWORD PTR [rax+0x4]
   14000b597:	mov    rcx,QWORD PTR [rsp+0x80]
   14000b59f:	add    rcx,rax
   14000b5a2:	call   0x140002c50
   14000b5a7:	cmp    rax,0x1
   14000b5ab:	jg     0x14000b5b8
   14000b5ad:	mov    QWORD PTR [rsp+0x60],0x0
   14000b5b6:	jmp    0x14000b5e0
   14000b5b8:	mov    rax,QWORD PTR [rsp+0x80]
   14000b5c0:	mov    rax,QWORD PTR [rax]
   14000b5c3:	movsxd rax,DWORD PTR [rax+0x4]
   14000b5c7:	mov    rcx,QWORD PTR [rsp+0x80]
   14000b5cf:	add    rcx,rax
   14000b5d2:	call   0x140002c50
   14000b5d7:	sub    rax,0x1
   14000b5db:	mov    QWORD PTR [rsp+0x60],rax
   14000b5e0:	mov    rax,QWORD PTR [rsp+0x60]
   14000b5e5:	mov    QWORD PTR [rsp+0x38],rax
   14000b5ea:	mov    rax,QWORD PTR [rsp+0x80]
   14000b5f2:	mov    rax,QWORD PTR [rax]
   14000b5f5:	movsxd rax,DWORD PTR [rax+0x4]
   14000b5f9:	mov    rcx,QWORD PTR [rsp+0x80]
   14000b601:	add    rcx,rax
   14000b604:	call   0x140002c40
   14000b609:	and    eax,0x1c0
   14000b60e:	cmp    eax,0x40
   14000b611:	je     0x14000b6c9
   14000b617:	jmp    0x14000b627
   14000b619:	mov    rax,QWORD PTR [rsp+0x38]
   14000b61e:	sub    rax,0x1
   14000b622:	mov    QWORD PTR [rsp+0x38],rax
   14000b627:	cmp    DWORD PTR [rsp+0x20],0x0
   14000b62c:	jne    0x14000b6c9
   14000b632:	cmp    QWORD PTR [rsp+0x38],0x0
   14000b638:	jle    0x14000b6c9
   14000b63e:	mov    rax,QWORD PTR [rsp+0x80]
   14000b646:	mov    rax,QWORD PTR [rax]
   14000b649:	movsxd rax,DWORD PTR [rax+0x4]
   14000b64d:	mov    rcx,QWORD PTR [rsp+0x80]
   14000b655:	add    rcx,rax
   14000b658:	call   0x14000c760
   14000b65d:	movzx  ebx,ax
   14000b660:	mov    rax,QWORD PTR [rsp+0x80]
   14000b668:	mov    rax,QWORD PTR [rax]
   14000b66b:	movsxd rax,DWORD PTR [rax+0x4]
   14000b66f:	mov    rcx,QWORD PTR [rsp+0x80]
   14000b677:	add    rcx,rax
   14000b67a:	call   0x140003440
   14000b67f:	movzx  edx,bx
   14000b682:	mov    rcx,rax
   14000b685:	call   0x1400059c0
   14000b68a:	mov    WORD PTR [rsp+0x68],ax
   14000b68f:	movzx  eax,WORD PTR [rsp+0x68]
   14000b694:	mov    WORD PTR [rsp+0x40],ax
   14000b699:	call   0x1400011a0
   14000b69e:	mov    WORD PTR [rsp+0x42],ax
   14000b6a3:	lea    rdx,[rsp+0x40]
   14000b6a8:	lea    rcx,[rsp+0x42]
   14000b6ad:	call   0x140001160
   14000b6b2:	movzx  eax,al
   14000b6b5:	test   eax,eax
   14000b6b7:	je     0x14000b6c4
   14000b6b9:	mov    eax,DWORD PTR [rsp+0x20]
   14000b6bd:	or     eax,0x4
   14000b6c0:	mov    DWORD PTR [rsp+0x20],eax
   14000b6c4:	jmp    0x14000b619
   14000b6c9:	cmp    DWORD PTR [rsp+0x20],0x0
   14000b6ce:	jne    0x14000b739
   14000b6d0:	mov    rax,QWORD PTR [rsp+0x80]
   14000b6d8:	mov    rax,QWORD PTR [rax]
   14000b6db:	movsxd rax,DWORD PTR [rax+0x4]
   14000b6df:	mov    rcx,QWORD PTR [rsp+0x80]
   14000b6e7:	add    rcx,rax
   14000b6ea:	call   0x140003440
   14000b6ef:	movzx  edx,WORD PTR [rsp+0x88]
   14000b6f7:	mov    rcx,rax
   14000b6fa:	call   0x1400059c0
   14000b6ff:	mov    WORD PTR [rsp+0x6a],ax
   14000b704:	movzx  eax,WORD PTR [rsp+0x6a]
   14000b709:	mov    WORD PTR [rsp+0x44],ax
   14000b70e:	call   0x1400011a0
   14000b713:	mov    WORD PTR [rsp+0x46],ax
   14000b718:	lea    rdx,[rsp+0x44]
   14000b71d:	lea    rcx,[rsp+0x46]
   14000b722:	call   0x140001160
   14000b727:	movzx  eax,al
   14000b72a:	test   eax,eax
   14000b72c:	je     0x14000b739
   14000b72e:	mov    eax,DWORD PTR [rsp+0x20]
   14000b732:	or     eax,0x4
   14000b735:	mov    DWORD PTR [rsp+0x20],eax
   14000b739:	jmp    0x14000b749
   14000b73b:	mov    rax,QWORD PTR [rsp+0x38]
   14000b740:	sub    rax,0x1
   14000b744:	mov    QWORD PTR [rsp+0x38],rax
   14000b749:	cmp    DWORD PTR [rsp+0x20],0x0
   14000b74e:	jne    0x14000b7eb
   14000b754:	cmp    QWORD PTR [rsp+0x38],0x0
   14000b75a:	jle    0x14000b7eb
   14000b760:	mov    rax,QWORD PTR [rsp+0x80]
   14000b768:	mov    rax,QWORD PTR [rax]
   14000b76b:	movsxd rax,DWORD PTR [rax+0x4]
   14000b76f:	mov    rcx,QWORD PTR [rsp+0x80]
   14000b777:	add    rcx,rax
   14000b77a:	call   0x14000c760
   14000b77f:	movzx  ebx,ax
   14000b782:	mov    rax,QWORD PTR [rsp+0x80]
   14000b78a:	mov    rax,QWORD PTR [rax]
   14000b78d:	movsxd rax,DWORD PTR [rax+0x4]
   14000b791:	mov    rcx,QWORD PTR [rsp+0x80]
   14000b799:	add    rcx,rax
   14000b79c:	call   0x140003440
   14000b7a1:	movzx  edx,bx
   14000b7a4:	mov    rcx,rax
   14000b7a7:	call   0x1400059c0
   14000b7ac:	mov    WORD PTR [rsp+0x6c],ax
   14000b7b1:	movzx  eax,WORD PTR [rsp+0x6c]
   14000b7b6:	mov    WORD PTR [rsp+0x48],ax
   14000b7bb:	call   0x1400011a0
   14000b7c0:	mov    WORD PTR [rsp+0x4a],ax
   14000b7c5:	lea    rdx,[rsp+0x48]
   14000b7ca:	lea    rcx,[rsp+0x4a]
   14000b7cf:	call   0x140001160
   14000b7d4:	movzx  eax,al
   14000b7d7:	test   eax,eax
   14000b7d9:	je     0x14000b7e6
   14000b7db:	mov    eax,DWORD PTR [rsp+0x20]
   14000b7df:	or     eax,0x4
   14000b7e2:	mov    DWORD PTR [rsp+0x20],eax
   14000b7e6:	jmp    0x14000b73b
   14000b7eb:	mov    rax,QWORD PTR [rsp+0x80]
   14000b7f3:	mov    rax,QWORD PTR [rax]
   14000b7f6:	movsxd rax,DWORD PTR [rax+0x4]
   14000b7fa:	mov    rcx,QWORD PTR [rsp+0x80]
   14000b802:	add    rcx,rax
   14000b805:	xor    edx,edx
   14000b807:	call   0x140002c60
   14000b80c:	mov    rax,QWORD PTR [rsp+0x80]
   14000b814:	mov    rax,QWORD PTR [rax]
   14000b817:	movsxd rax,DWORD PTR [rax+0x4]
   14000b81b:	mov    rcx,QWORD PTR [rsp+0x80]
   14000b823:	add    rcx,rax
   14000b826:	xor    r8d,r8d
   14000b829:	mov    edx,DWORD PTR [rsp+0x20]
   14000b82d:	call   0x140003400
   14000b832:	mov    rax,QWORD PTR [rsp+0x80]
   14000b83a:	mov    QWORD PTR [rsp+0x50],rax
   14000b83f:	lea    rcx,[rsp+0x28]
   14000b844:	call   0x1400069b0
   14000b849:	mov    rax,QWORD PTR [rsp+0x50]
   14000b84e:	add    rsp,0x70
   14000b852:	pop    rbx
   14000b853:	ret    
   14000b854:	int3   
   14000b855:	int3   
   14000b856:	int3   
   14000b857:	int3   
   14000b858:	int3   
   14000b859:	int3   
   14000b85a:	int3   
   14000b85b:	int3   
   14000b85c:	int3   
   14000b85d:	int3   
   14000b85e:	int3   
   14000b85f:	int3   
   14000b860:	mov    QWORD PTR [rsp+0x10],rdx
   14000b865:	mov    QWORD PTR [rsp+0x8],rcx
   14000b86a:	push   rbx
   14000b86b:	sub    rsp,0x80
   14000b872:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   14000b87b:	mov    DWORD PTR [rsp+0x20],0x0
   14000b883:	mov    rcx,QWORD PTR [rsp+0x98]
   14000b88b:	call   0x140003bb0
   14000b890:	mov    QWORD PTR [rsp+0x40],rax
   14000b895:	mov    rax,QWORD PTR [rsp+0x90]
   14000b89d:	mov    rax,QWORD PTR [rax]
   14000b8a0:	movsxd rax,DWORD PTR [rax+0x4]
   14000b8a4:	mov    rcx,QWORD PTR [rsp+0x90]
   14000b8ac:	add    rcx,rax
   14000b8af:	call   0x140002c50
   14000b8b4:	test   rax,rax
   14000b8b7:	jle    0x14000b90a
   14000b8b9:	mov    rax,QWORD PTR [rsp+0x90]
   14000b8c1:	mov    rax,QWORD PTR [rax]
   14000b8c4:	movsxd rax,DWORD PTR [rax+0x4]
   14000b8c8:	mov    rcx,QWORD PTR [rsp+0x90]
   14000b8d0:	add    rcx,rax
   14000b8d3:	call   0x140002c50
   14000b8d8:	cmp    rax,QWORD PTR [rsp+0x40]
   14000b8dd:	jbe    0x14000b90a
   14000b8df:	mov    rax,QWORD PTR [rsp+0x90]
   14000b8e7:	mov    rax,QWORD PTR [rax]
   14000b8ea:	movsxd rax,DWORD PTR [rax+0x4]
   14000b8ee:	mov    rcx,QWORD PTR [rsp+0x90]
   14000b8f6:	add    rcx,rax
   14000b8f9:	call   0x140002c50
   14000b8fe:	sub    rax,QWORD PTR [rsp+0x40]
   14000b903:	mov    QWORD PTR [rsp+0x70],rax
   14000b908:	jmp    0x14000b913
   14000b90a:	mov    QWORD PTR [rsp+0x70],0x0
   14000b913:	mov    rax,QWORD PTR [rsp+0x70]
   14000b918:	mov    QWORD PTR [rsp+0x28],rax
   14000b91d:	mov    rdx,QWORD PTR [rsp+0x90]
   14000b925:	lea    rcx,[rsp+0x30]
   14000b92a:	call   0x1400068f0
   14000b92f:	nop
   14000b930:	lea    rcx,[rsp+0x30]
   14000b935:	call   0x1400069f0
   14000b93a:	movzx  eax,al
   14000b93d:	test   eax,eax
   14000b93f:	jne    0x14000b951
   14000b941:	mov    eax,DWORD PTR [rsp+0x20]
   14000b945:	or     eax,0x4
   14000b948:	mov    DWORD PTR [rsp+0x20],eax
   14000b94c:	jmp    0x14000bbb1
   14000b951:	mov    rax,QWORD PTR [rsp+0x90]
   14000b959:	mov    rax,QWORD PTR [rax]
   14000b95c:	movsxd rax,DWORD PTR [rax+0x4]
   14000b960:	mov    rcx,QWORD PTR [rsp+0x90]
   14000b968:	add    rcx,rax
   14000b96b:	call   0x140002c40
   14000b970:	and    eax,0x1c0
   14000b975:	cmp    eax,0x40
   14000b978:	je     0x14000ba27
   14000b97e:	jmp    0x14000b98e
   14000b980:	mov    rax,QWORD PTR [rsp+0x28]
   14000b985:	sub    rax,0x1
   14000b989:	mov    QWORD PTR [rsp+0x28],rax
   14000b98e:	cmp    QWORD PTR [rsp+0x28],0x0
   14000b994:	jbe    0x14000ba27
   14000b99a:	mov    rax,QWORD PTR [rsp+0x90]
   14000b9a2:	mov    rax,QWORD PTR [rax]
   14000b9a5:	movsxd rax,DWORD PTR [rax+0x4]
   14000b9a9:	mov    rcx,QWORD PTR [rsp+0x90]
   14000b9b1:	add    rcx,rax
   14000b9b4:	call   0x14000c760
   14000b9b9:	movzx  ebx,ax
   14000b9bc:	mov    rax,QWORD PTR [rsp+0x90]
   14000b9c4:	mov    rax,QWORD PTR [rax]
   14000b9c7:	movsxd rax,DWORD PTR [rax+0x4]
   14000b9cb:	mov    rcx,QWORD PTR [rsp+0x90]
   14000b9d3:	add    rcx,rax
   14000b9d6:	call   0x140003440
   14000b9db:	movzx  edx,bx
   14000b9de:	mov    rcx,rax
   14000b9e1:	call   0x1400059c0
   14000b9e6:	mov    WORD PTR [rsp+0x78],ax
   14000b9eb:	movzx  eax,WORD PTR [rsp+0x78]
   14000b9f0:	mov    WORD PTR [rsp+0x50],ax
   14000b9f5:	call   0x1400011a0
   14000b9fa:	mov    WORD PTR [rsp+0x52],ax
   14000b9ff:	lea    rdx,[rsp+0x50]
   14000ba04:	lea    rcx,[rsp+0x52]
   14000ba09:	call   0x140001160
   14000ba0e:	movzx  eax,al
   14000ba11:	test   eax,eax
   14000ba13:	je     0x14000ba22
   14000ba15:	mov    eax,DWORD PTR [rsp+0x20]
   14000ba19:	or     eax,0x4
   14000ba1c:	mov    DWORD PTR [rsp+0x20],eax
   14000ba20:	jmp    0x14000ba27
   14000ba22:	jmp    0x14000b980
   14000ba27:	cmp    DWORD PTR [rsp+0x20],0x0
   14000ba2c:	jne    0x14000badb
   14000ba32:	mov    QWORD PTR [rsp+0x48],0x0
   14000ba3b:	jmp    0x14000ba4b
   14000ba3d:	mov    rax,QWORD PTR [rsp+0x48]
   14000ba42:	add    rax,0x1
   14000ba46:	mov    QWORD PTR [rsp+0x48],rax
   14000ba4b:	mov    rax,QWORD PTR [rsp+0x40]
   14000ba50:	cmp    QWORD PTR [rsp+0x48],rax
   14000ba55:	jae    0x14000badb
   14000ba5b:	mov    rdx,QWORD PTR [rsp+0x48]
   14000ba60:	mov    rcx,QWORD PTR [rsp+0x98]
   14000ba68:	call   0x140011b90
   14000ba6d:	mov    rbx,rax
   14000ba70:	mov    rax,QWORD PTR [rsp+0x90]
   14000ba78:	mov    rax,QWORD PTR [rax]
   14000ba7b:	movsxd rax,DWORD PTR [rax+0x4]
   14000ba7f:	mov    rcx,QWORD PTR [rsp+0x90]
   14000ba87:	add    rcx,rax
   14000ba8a:	call   0x140003440
   14000ba8f:	movzx  edx,WORD PTR [rbx]
   14000ba92:	mov    rcx,rax
   14000ba95:	call   0x1400059c0
   14000ba9a:	mov    WORD PTR [rsp+0x7a],ax
   14000ba9f:	movzx  eax,WORD PTR [rsp+0x7a]
   14000baa4:	mov    WORD PTR [rsp+0x54],ax
   14000baa9:	call   0x1400011a0
   14000baae:	mov    WORD PTR [rsp+0x56],ax
   14000bab3:	lea    rdx,[rsp+0x54]
   14000bab8:	lea    rcx,[rsp+0x56]
   14000babd:	call   0x140001160
   14000bac2:	movzx  eax,al
   14000bac5:	test   eax,eax
   14000bac7:	je     0x14000bad6
   14000bac9:	mov    eax,DWORD PTR [rsp+0x20]
   14000bacd:	or     eax,0x4
   14000bad0:	mov    DWORD PTR [rsp+0x20],eax
   14000bad4:	jmp    0x14000badb
   14000bad6:	jmp    0x14000ba3d
   14000badb:	cmp    DWORD PTR [rsp+0x20],0x0
   14000bae0:	jne    0x14000bb8f
   14000bae6:	jmp    0x14000baf6
   14000bae8:	mov    rax,QWORD PTR [rsp+0x28]
   14000baed:	sub    rax,0x1
   14000baf1:	mov    QWORD PTR [rsp+0x28],rax
   14000baf6:	cmp    QWORD PTR [rsp+0x28],0x0
   14000bafc:	jbe    0x14000bb8f
   14000bb02:	mov    rax,QWORD PTR [rsp+0x90]
   14000bb0a:	mov    rax,QWORD PTR [rax]
   14000bb0d:	movsxd rax,DWORD PTR [rax+0x4]
   14000bb11:	mov    rcx,QWORD PTR [rsp+0x90]
   14000bb19:	add    rcx,rax
   14000bb1c:	call   0x14000c760
   14000bb21:	movzx  ebx,ax
   14000bb24:	mov    rax,QWORD PTR [rsp+0x90]
   14000bb2c:	mov    rax,QWORD PTR [rax]
   14000bb2f:	movsxd rax,DWORD PTR [rax+0x4]
   14000bb33:	mov    rcx,QWORD PTR [rsp+0x90]
   14000bb3b:	add    rcx,rax
   14000bb3e:	call   0x140003440
   14000bb43:	movzx  edx,bx
   14000bb46:	mov    rcx,rax
   14000bb49:	call   0x1400059c0
   14000bb4e:	mov    WORD PTR [rsp+0x7c],ax
   14000bb53:	movzx  eax,WORD PTR [rsp+0x7c]
   14000bb58:	mov    WORD PTR [rsp+0x58],ax
   14000bb5d:	call   0x1400011a0
   14000bb62:	mov    WORD PTR [rsp+0x5a],ax
   14000bb67:	lea    rdx,[rsp+0x58]
   14000bb6c:	lea    rcx,[rsp+0x5a]
   14000bb71:	call   0x140001160
   14000bb76:	movzx  eax,al
   14000bb79:	test   eax,eax
   14000bb7b:	je     0x14000bb8a
   14000bb7d:	mov    eax,DWORD PTR [rsp+0x20]
   14000bb81:	or     eax,0x4
   14000bb84:	mov    DWORD PTR [rsp+0x20],eax
   14000bb88:	jmp    0x14000bb8f
   14000bb8a:	jmp    0x14000bae8
   14000bb8f:	mov    rax,QWORD PTR [rsp+0x90]
   14000bb97:	mov    rax,QWORD PTR [rax]
   14000bb9a:	movsxd rax,DWORD PTR [rax+0x4]
   14000bb9e:	mov    rcx,QWORD PTR [rsp+0x90]
   14000bba6:	add    rcx,rax
   14000bba9:	xor    edx,edx
   14000bbab:	call   0x140002c60
   14000bbb0:	nop
   14000bbb1:	mov    rax,QWORD PTR [rsp+0x90]
   14000bbb9:	mov    rax,QWORD PTR [rax]
   14000bbbc:	movsxd rax,DWORD PTR [rax+0x4]
   14000bbc0:	mov    rcx,QWORD PTR [rsp+0x90]
   14000bbc8:	add    rcx,rax
   14000bbcb:	xor    r8d,r8d
   14000bbce:	mov    edx,DWORD PTR [rsp+0x20]
   14000bbd2:	call   0x140003400
   14000bbd7:	mov    rax,QWORD PTR [rsp+0x90]
   14000bbdf:	mov    QWORD PTR [rsp+0x60],rax
   14000bbe4:	lea    rcx,[rsp+0x30]
   14000bbe9:	call   0x1400069b0
   14000bbee:	mov    rax,QWORD PTR [rsp+0x60]
   14000bbf3:	add    rsp,0x80
   14000bbfa:	pop    rbx
   14000bbfb:	ret    
   14000bbfc:	int3   
   14000bbfd:	int3   
   14000bbfe:	int3   
   14000bbff:	int3   
   14000bc00:	mov    QWORD PTR [rsp+0x10],rdx
   14000bc05:	mov    QWORD PTR [rsp+0x8],rcx
   14000bc0a:	push   rbx
   14000bc0b:	sub    rsp,0x80
   14000bc12:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14000bc1b:	mov    DWORD PTR [rsp+0x20],0x0
   14000bc23:	mov    rcx,QWORD PTR [rsp+0x98]
   14000bc2b:	call   0x140001050
   14000bc30:	mov    QWORD PTR [rsp+0x28],rax
   14000bc35:	mov    rax,QWORD PTR [rsp+0x90]
   14000bc3d:	mov    rax,QWORD PTR [rax]
   14000bc40:	movsxd rax,DWORD PTR [rax+0x4]
   14000bc44:	mov    rcx,QWORD PTR [rsp+0x90]
   14000bc4c:	add    rcx,rax
   14000bc4f:	call   0x140002c50
   14000bc54:	test   rax,rax
   14000bc57:	jle    0x14000bcaa
   14000bc59:	mov    rax,QWORD PTR [rsp+0x90]
   14000bc61:	mov    rax,QWORD PTR [rax]
   14000bc64:	movsxd rax,DWORD PTR [rax+0x4]
   14000bc68:	mov    rcx,QWORD PTR [rsp+0x90]
   14000bc70:	add    rcx,rax
   14000bc73:	call   0x140002c50
   14000bc78:	cmp    rax,QWORD PTR [rsp+0x28]
   14000bc7d:	jle    0x14000bcaa
   14000bc7f:	mov    rax,QWORD PTR [rsp+0x90]
   14000bc87:	mov    rax,QWORD PTR [rax]
   14000bc8a:	movsxd rax,DWORD PTR [rax+0x4]
   14000bc8e:	mov    rcx,QWORD PTR [rsp+0x90]
   14000bc96:	add    rcx,rax
   14000bc99:	call   0x140002c50
   14000bc9e:	sub    rax,QWORD PTR [rsp+0x28]
   14000bca3:	mov    QWORD PTR [rsp+0x60],rax
   14000bca8:	jmp    0x14000bcb3
   14000bcaa:	mov    QWORD PTR [rsp+0x60],0x0
   14000bcb3:	mov    rax,QWORD PTR [rsp+0x60]
   14000bcb8:	mov    QWORD PTR [rsp+0x30],rax
   14000bcbd:	mov    rdx,QWORD PTR [rsp+0x90]
   14000bcc5:	lea    rcx,[rsp+0x38]
   14000bcca:	call   0x1400068f0
   14000bccf:	nop
   14000bcd0:	lea    rcx,[rsp+0x38]
   14000bcd5:	call   0x1400069f0
   14000bcda:	movzx  eax,al
   14000bcdd:	test   eax,eax
   14000bcdf:	jne    0x14000bcf1
   14000bce1:	mov    eax,DWORD PTR [rsp+0x20]
   14000bce5:	or     eax,0x4
   14000bce8:	mov    DWORD PTR [rsp+0x20],eax
   14000bcec:	jmp    0x14000bef4
   14000bcf1:	mov    rax,QWORD PTR [rsp+0x90]
   14000bcf9:	mov    rax,QWORD PTR [rax]
   14000bcfc:	movsxd rax,DWORD PTR [rax+0x4]
   14000bd00:	mov    rcx,QWORD PTR [rsp+0x90]
   14000bd08:	add    rcx,rax
   14000bd0b:	call   0x140002c40
   14000bd10:	and    eax,0x1c0
   14000bd15:	cmp    eax,0x40
   14000bd18:	je     0x14000bdc7
   14000bd1e:	jmp    0x14000bd2e
   14000bd20:	mov    rax,QWORD PTR [rsp+0x30]
   14000bd25:	sub    rax,0x1
   14000bd29:	mov    QWORD PTR [rsp+0x30],rax
   14000bd2e:	cmp    QWORD PTR [rsp+0x30],0x0
   14000bd34:	jle    0x14000bdc7
   14000bd3a:	mov    rax,QWORD PTR [rsp+0x90]
   14000bd42:	mov    rax,QWORD PTR [rax]
   14000bd45:	movsxd rax,DWORD PTR [rax+0x4]
   14000bd49:	mov    rcx,QWORD PTR [rsp+0x90]
   14000bd51:	add    rcx,rax
   14000bd54:	call   0x14000c760
   14000bd59:	movzx  ebx,ax
   14000bd5c:	mov    rax,QWORD PTR [rsp+0x90]
   14000bd64:	mov    rax,QWORD PTR [rax]
   14000bd67:	movsxd rax,DWORD PTR [rax+0x4]
   14000bd6b:	mov    rcx,QWORD PTR [rsp+0x90]
   14000bd73:	add    rcx,rax
   14000bd76:	call   0x140003440
   14000bd7b:	movzx  edx,bx
   14000bd7e:	mov    rcx,rax
   14000bd81:	call   0x1400059c0
   14000bd86:	mov    WORD PTR [rsp+0x68],ax
   14000bd8b:	movzx  eax,WORD PTR [rsp+0x68]
   14000bd90:	mov    WORD PTR [rsp+0x48],ax
   14000bd95:	call   0x1400011a0
   14000bd9a:	mov    WORD PTR [rsp+0x4a],ax
   14000bd9f:	lea    rdx,[rsp+0x48]
   14000bda4:	lea    rcx,[rsp+0x4a]
   14000bda9:	call   0x140001160
   14000bdae:	movzx  eax,al
   14000bdb1:	test   eax,eax
   14000bdb3:	je     0x14000bdc2
   14000bdb5:	mov    eax,DWORD PTR [rsp+0x20]
   14000bdb9:	or     eax,0x4
   14000bdbc:	mov    DWORD PTR [rsp+0x20],eax
   14000bdc0:	jmp    0x14000bdc7
   14000bdc2:	jmp    0x14000bd20
   14000bdc7:	cmp    DWORD PTR [rsp+0x20],0x0
   14000bdcc:	jne    0x14000be1e
   14000bdce:	mov    rax,QWORD PTR [rsp+0x90]
   14000bdd6:	mov    rax,QWORD PTR [rax]
   14000bdd9:	movsxd rax,DWORD PTR [rax+0x4]
   14000bddd:	mov    rcx,QWORD PTR [rsp+0x90]
   14000bde5:	add    rcx,rax
   14000bde8:	call   0x140003440
   14000bded:	mov    r8,QWORD PTR [rsp+0x28]
   14000bdf2:	mov    rdx,QWORD PTR [rsp+0x98]
   14000bdfa:	mov    rcx,rax
   14000bdfd:	call   0x14000c990
   14000be02:	mov    QWORD PTR [rsp+0x70],rax
   14000be07:	mov    rax,QWORD PTR [rsp+0x28]
   14000be0c:	cmp    QWORD PTR [rsp+0x70],rax
   14000be11:	je     0x14000be1e
   14000be13:	mov    eax,DWORD PTR [rsp+0x20]
   14000be17:	or     eax,0x4
   14000be1a:	mov    DWORD PTR [rsp+0x20],eax
   14000be1e:	cmp    DWORD PTR [rsp+0x20],0x0
   14000be23:	jne    0x14000bed2
   14000be29:	jmp    0x14000be39
   14000be2b:	mov    rax,QWORD PTR [rsp+0x30]
   14000be30:	sub    rax,0x1
   14000be34:	mov    QWORD PTR [rsp+0x30],rax
   14000be39:	cmp    QWORD PTR [rsp+0x30],0x0
   14000be3f:	jle    0x14000bed2
   14000be45:	mov    rax,QWORD PTR [rsp+0x90]
   14000be4d:	mov    rax,QWORD PTR [rax]
   14000be50:	movsxd rax,DWORD PTR [rax+0x4]
   14000be54:	mov    rcx,QWORD PTR [rsp+0x90]
   14000be5c:	add    rcx,rax
   14000be5f:	call   0x14000c760
   14000be64:	movzx  ebx,ax
   14000be67:	mov    rax,QWORD PTR [rsp+0x90]
   14000be6f:	mov    rax,QWORD PTR [rax]
   14000be72:	movsxd rax,DWORD PTR [rax+0x4]
   14000be76:	mov    rcx,QWORD PTR [rsp+0x90]
   14000be7e:	add    rcx,rax
   14000be81:	call   0x140003440
   14000be86:	movzx  edx,bx
   14000be89:	mov    rcx,rax
   14000be8c:	call   0x1400059c0
   14000be91:	mov    WORD PTR [rsp+0x78],ax
   14000be96:	movzx  eax,WORD PTR [rsp+0x78]
   14000be9b:	mov    WORD PTR [rsp+0x4c],ax
   14000bea0:	call   0x1400011a0
   14000bea5:	mov    WORD PTR [rsp+0x4e],ax
   14000beaa:	lea    rdx,[rsp+0x4c]
   14000beaf:	lea    rcx,[rsp+0x4e]
   14000beb4:	call   0x140001160
   14000beb9:	movzx  eax,al
   14000bebc:	test   eax,eax
   14000bebe:	je     0x14000becd
   14000bec0:	mov    eax,DWORD PTR [rsp+0x20]
   14000bec4:	or     eax,0x4
   14000bec7:	mov    DWORD PTR [rsp+0x20],eax
   14000becb:	jmp    0x14000bed2
   14000becd:	jmp    0x14000be2b
   14000bed2:	mov    rax,QWORD PTR [rsp+0x90]
   14000beda:	mov    rax,QWORD PTR [rax]
   14000bedd:	movsxd rax,DWORD PTR [rax+0x4]
   14000bee1:	mov    rcx,QWORD PTR [rsp+0x90]
   14000bee9:	add    rcx,rax
   14000beec:	xor    edx,edx
   14000beee:	call   0x140002c60
   14000bef3:	nop
   14000bef4:	mov    rax,QWORD PTR [rsp+0x90]
   14000befc:	mov    rax,QWORD PTR [rax]
   14000beff:	movsxd rax,DWORD PTR [rax+0x4]
   14000bf03:	mov    rcx,QWORD PTR [rsp+0x90]
   14000bf0b:	add    rcx,rax
   14000bf0e:	xor    r8d,r8d
   14000bf11:	mov    edx,DWORD PTR [rsp+0x20]
   14000bf15:	call   0x140003400
   14000bf1a:	mov    rax,QWORD PTR [rsp+0x90]
   14000bf22:	mov    QWORD PTR [rsp+0x50],rax
   14000bf27:	lea    rcx,[rsp+0x38]
   14000bf2c:	call   0x1400069b0
   14000bf31:	mov    rax,QWORD PTR [rsp+0x50]
   14000bf36:	add    rsp,0x80
   14000bf3d:	pop    rbx
   14000bf3e:	ret    
   14000bf3f:	int3   
   14000bf40:	mov    QWORD PTR [rsp+0x10],rdx
   14000bf45:	mov    QWORD PTR [rsp+0x8],rcx
   14000bf4a:	sub    rsp,0x138
   14000bf51:	mov    QWORD PTR [rsp+0x128],0xfffffffffffffffe
   14000bf5d:	mov    r9d,0x1
   14000bf63:	mov    r8d,0x3
   14000bf69:	mov    rdx,QWORD PTR [rsp+0x140]
   14000bf71:	lea    rcx,[rsp+0x20]
   14000bf76:	call   0x14000ca60
   14000bf7b:	nop
   14000bf7c:	mov    rdx,QWORD PTR [rsp+0x148]
   14000bf84:	lea    rcx,[rsp+0x20]
   14000bf89:	call   0x14000c770
   14000bf8e:	mov    BYTE PTR [rsp+0x120],0x1
   14000bf96:	lea    rcx,[rsp+0x20]
   14000bf9b:	call   0x140005120
   14000bfa0:	mov    al,BYTE PTR [rsp+0x120]
   14000bfa7:	add    rsp,0x138
   14000bfae:	ret    
   14000bfaf:	int3   
   14000bfb0:	mov    QWORD PTR [rsp+0x18],r8
   14000bfb5:	mov    QWORD PTR [rsp+0x10],rdx
   14000bfba:	mov    QWORD PTR [rsp+0x8],rcx
   14000bfbf:	sub    rsp,0x78
   14000bfc3:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14000bfcc:	mov    DWORD PTR [rsp+0x48],0x0
   14000bfd4:	mov    rdx,QWORD PTR [rsp+0x88]
   14000bfdc:	lea    rcx,[rsp+0x20]
   14000bfe1:	call   0x140005d30
   14000bfe6:	mov    QWORD PTR [rsp+0x58],rax
   14000bfeb:	mov    rax,QWORD PTR [rsp+0x58]
   14000bff0:	mov    QWORD PTR [rsp+0x60],rax
   14000bff5:	mov    rdx,QWORD PTR [rsp+0x90]
   14000bffd:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c002:	call   0x140005db0
   14000c007:	mov    rdx,rax
   14000c00a:	mov    rcx,QWORD PTR [rsp+0x80]
   14000c012:	call   0x140005d30
   14000c017:	mov    eax,DWORD PTR [rsp+0x48]
   14000c01b:	or     eax,0x1
   14000c01e:	mov    DWORD PTR [rsp+0x48],eax
   14000c022:	lea    rcx,[rsp+0x20]
   14000c027:	call   0x140003a90
   14000c02c:	mov    rax,QWORD PTR [rsp+0x80]
   14000c034:	add    rsp,0x78
   14000c038:	ret    
   14000c039:	int3   
   14000c03a:	int3   
   14000c03b:	int3   
   14000c03c:	int3   
   14000c03d:	int3   
   14000c03e:	int3   
   14000c03f:	int3   
   14000c040:	mov    QWORD PTR [rsp+0x20],r9
   14000c045:	mov    QWORD PTR [rsp+0x18],r8
   14000c04a:	mov    QWORD PTR [rsp+0x10],rdx
   14000c04f:	mov    QWORD PTR [rsp+0x8],rcx
   14000c054:	sub    rsp,0x48
   14000c058:	call   0x14000f9e0
   14000c05d:	mov    BYTE PTR [rsp+0x30],al
   14000c061:	movzx  eax,BYTE PTR [rsp+0x30]
   14000c066:	mov    BYTE PTR [rsp+0x20],al
   14000c06a:	mov    r9,QWORD PTR [rsp+0x68]
   14000c06f:	mov    r8,QWORD PTR [rsp+0x60]
   14000c074:	mov    rdx,QWORD PTR [rsp+0x58]
   14000c079:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c07e:	call   0x14000fa70
   14000c083:	add    rsp,0x48
   14000c087:	ret    
   14000c088:	int3   
   14000c089:	int3   
   14000c08a:	int3   
   14000c08b:	int3   
   14000c08c:	int3   
   14000c08d:	int3   
   14000c08e:	int3   
   14000c08f:	int3   
   14000c090:	mov    QWORD PTR [rsp+0x20],r9
   14000c095:	mov    QWORD PTR [rsp+0x18],r8
   14000c09a:	mov    QWORD PTR [rsp+0x10],rdx
   14000c09f:	mov    QWORD PTR [rsp+0x8],rcx
   14000c0a4:	sub    rsp,0x48
   14000c0a8:	call   0x14000f9e0
   14000c0ad:	mov    BYTE PTR [rsp+0x30],al
   14000c0b1:	movzx  eax,BYTE PTR [rsp+0x30]
   14000c0b6:	mov    BYTE PTR [rsp+0x20],al
   14000c0ba:	mov    r9,QWORD PTR [rsp+0x68]
   14000c0bf:	mov    r8,QWORD PTR [rsp+0x60]
   14000c0c4:	mov    rdx,QWORD PTR [rsp+0x58]
   14000c0c9:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c0ce:	call   0x14000fab0
   14000c0d3:	add    rsp,0x48
   14000c0d7:	ret    
   14000c0d8:	int3   
   14000c0d9:	int3   
   14000c0da:	int3   
   14000c0db:	int3   
   14000c0dc:	int3   
   14000c0dd:	int3   
   14000c0de:	int3   
   14000c0df:	int3   
   14000c0e0:	mov    QWORD PTR [rsp+0x10],rdx
   14000c0e5:	mov    QWORD PTR [rsp+0x8],rcx
   14000c0ea:	sub    rsp,0x48
   14000c0ee:	cmp    QWORD PTR [rsp+0x50],0x0
   14000c0f4:	ja     0x14000c101
   14000c0f6:	mov    QWORD PTR [rsp+0x50],0x0
   14000c0ff:	jmp    0x14000c132
   14000c101:	xor    edx,edx
   14000c103:	mov    rax,0xffffffffffffffff
   14000c10a:	div    QWORD PTR [rsp+0x50]
   14000c10f:	cmp    rax,0x2
   14000c113:	jae    0x14000c132
   14000c115:	xor    edx,edx
   14000c117:	lea    rcx,[rsp+0x20]
   14000c11c:	call   0x140001400
   14000c121:	lea    rdx,[rip+0x3b960]        # 0x140047a88
   14000c128:	lea    rcx,[rsp+0x20]
   14000c12d:	call   0x14001e5c0
   14000c132:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c137:	shl    rcx,1
   14000c13a:	call   0x14001cb1c
   14000c13f:	add    rsp,0x48
   14000c143:	ret    
   14000c144:	int3   
   14000c145:	int3   
   14000c146:	int3   
   14000c147:	int3   
   14000c148:	int3   
   14000c149:	int3   
   14000c14a:	int3   
   14000c14b:	int3   
   14000c14c:	int3   
   14000c14d:	int3   
   14000c14e:	int3   
   14000c14f:	int3   
   14000c150:	mov    QWORD PTR [rsp+0x18],r8
   14000c155:	mov    QWORD PTR [rsp+0x10],rdx
   14000c15a:	mov    QWORD PTR [rsp+0x8],rcx
   14000c15f:	sub    rsp,0x38
   14000c163:	lea    rdx,[rsp+0x48]
   14000c168:	lea    rcx,[rsp+0x40]
   14000c16d:	call   0x14000fbb0
   14000c172:	mov    BYTE PTR [rsp+0x20],al
   14000c176:	movzx  r9d,BYTE PTR [rsp+0x20]
   14000c17c:	mov    r8,QWORD PTR [rsp+0x50]
   14000c181:	mov    rdx,QWORD PTR [rsp+0x48]
   14000c186:	mov    rcx,QWORD PTR [rsp+0x40]
   14000c18b:	call   0x14000faf0
   14000c190:	add    rsp,0x38
   14000c194:	ret    
   14000c195:	int3   
   14000c196:	int3   
   14000c197:	int3   
   14000c198:	int3   
   14000c199:	int3   
   14000c19a:	int3   
   14000c19b:	int3   
   14000c19c:	int3   
   14000c19d:	int3   
   14000c19e:	int3   
   14000c19f:	int3   
   14000c1a0:	mov    QWORD PTR [rsp+0x20],r9
   14000c1a5:	mov    QWORD PTR [rsp+0x18],r8
   14000c1aa:	mov    QWORD PTR [rsp+0x10],rdx
   14000c1af:	mov    QWORD PTR [rsp+0x8],rcx
   14000c1b4:	push   rdi
   14000c1b5:	sub    rsp,0x40
   14000c1b9:	lea    rdi,[rsp+0x30]
   14000c1be:	xor    eax,eax
   14000c1c0:	mov    ecx,0x1
   14000c1c5:	rep stos BYTE PTR es:[rdi],al
   14000c1c7:	lea    rdx,[rsp+0x50]
   14000c1cc:	lea    rcx,[rsp+0x50]
   14000c1d1:	call   0x14000fbb0
   14000c1d6:	mov    BYTE PTR [rsp+0x31],al
   14000c1da:	movzx  eax,BYTE PTR [rsp+0x30]
   14000c1df:	mov    BYTE PTR [rsp+0x28],al
   14000c1e3:	movzx  eax,BYTE PTR [rsp+0x31]
   14000c1e8:	mov    BYTE PTR [rsp+0x20],al
   14000c1ec:	mov    r9,QWORD PTR [rsp+0x68]
   14000c1f1:	mov    r8,QWORD PTR [rsp+0x60]
   14000c1f6:	mov    rdx,QWORD PTR [rsp+0x58]
   14000c1fb:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c200:	call   0x14000fb40
   14000c205:	add    rsp,0x40
   14000c209:	pop    rdi
   14000c20a:	ret    
   14000c20b:	int3   
   14000c20c:	int3   
   14000c20d:	int3   
   14000c20e:	int3   
   14000c20f:	int3   
   14000c210:	mov    QWORD PTR [rsp+0x18],r8
   14000c215:	mov    QWORD PTR [rsp+0x10],rdx
   14000c21a:	mov    QWORD PTR [rsp+0x8],rcx
   14000c21f:	sub    rsp,0x38
   14000c223:	lea    rdx,[rsp+0x48]
   14000c228:	lea    rcx,[rsp+0x40]
   14000c22d:	call   0x14000fbb0
   14000c232:	mov    BYTE PTR [rsp+0x20],al
   14000c236:	movzx  r9d,BYTE PTR [rsp+0x20]
   14000c23c:	mov    r8,QWORD PTR [rsp+0x50]
   14000c241:	mov    rdx,QWORD PTR [rsp+0x48]
   14000c246:	mov    rcx,QWORD PTR [rsp+0x40]
   14000c24b:	call   0x14000fbd0
   14000c250:	add    rsp,0x38
   14000c254:	ret    
   14000c255:	int3   
   14000c256:	int3   
   14000c257:	int3   
   14000c258:	int3   
   14000c259:	int3   
   14000c25a:	int3   
   14000c25b:	int3   
   14000c25c:	int3   
   14000c25d:	int3   
   14000c25e:	int3   
   14000c25f:	int3   
   14000c260:	mov    QWORD PTR [rsp+0x18],r8
   14000c265:	mov    QWORD PTR [rsp+0x10],rdx
   14000c26a:	mov    QWORD PTR [rsp+0x8],rcx
   14000c26f:	sub    rsp,0x38
   14000c273:	lea    rdx,[rsp+0x48]
   14000c278:	lea    rcx,[rsp+0x40]
   14000c27d:	call   0x14000fbb0
   14000c282:	mov    BYTE PTR [rsp+0x20],al
   14000c286:	movzx  r9d,BYTE PTR [rsp+0x20]
   14000c28c:	mov    r8,QWORD PTR [rsp+0x50]
   14000c291:	mov    rdx,QWORD PTR [rsp+0x48]
   14000c296:	mov    rcx,QWORD PTR [rsp+0x40]
   14000c29b:	call   0x14000fc20
   14000c2a0:	add    rsp,0x38
   14000c2a4:	ret    
   14000c2a5:	int3   
   14000c2a6:	int3   
   14000c2a7:	int3   
   14000c2a8:	int3   
   14000c2a9:	int3   
   14000c2aa:	int3   
   14000c2ab:	int3   
   14000c2ac:	int3   
   14000c2ad:	int3   
   14000c2ae:	int3   
   14000c2af:	int3   
   14000c2b0:	mov    QWORD PTR [rsp+0x20],r9
   14000c2b5:	mov    QWORD PTR [rsp+0x18],r8
   14000c2ba:	mov    QWORD PTR [rsp+0x10],rdx
   14000c2bf:	mov    QWORD PTR [rsp+0x8],rcx
   14000c2c4:	push   rdi
   14000c2c5:	sub    rsp,0x40
   14000c2c9:	lea    rdi,[rsp+0x30]
   14000c2ce:	xor    eax,eax
   14000c2d0:	mov    ecx,0x1
   14000c2d5:	rep stos BYTE PTR es:[rdi],al
   14000c2d7:	lea    rdx,[rsp+0x50]
   14000c2dc:	lea    rcx,[rsp+0x50]
   14000c2e1:	call   0x14000fbb0
   14000c2e6:	mov    BYTE PTR [rsp+0x31],al
   14000c2ea:	movzx  eax,BYTE PTR [rsp+0x30]
   14000c2ef:	mov    BYTE PTR [rsp+0x28],al
   14000c2f3:	movzx  eax,BYTE PTR [rsp+0x31]
   14000c2f8:	mov    BYTE PTR [rsp+0x20],al
   14000c2fc:	mov    r9,QWORD PTR [rsp+0x68]
   14000c301:	mov    r8,QWORD PTR [rsp+0x60]
   14000c306:	mov    rdx,QWORD PTR [rsp+0x58]
   14000c30b:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c310:	call   0x14000fc70
   14000c315:	add    rsp,0x40
   14000c319:	pop    rdi
   14000c31a:	ret    
   14000c31b:	int3   
   14000c31c:	int3   
   14000c31d:	int3   
   14000c31e:	int3   
   14000c31f:	int3   
   14000c320:	mov    QWORD PTR [rsp+0x10],rdx
   14000c325:	mov    QWORD PTR [rsp+0x8],rcx
   14000c32a:	sub    rsp,0x48
   14000c32e:	cmp    QWORD PTR [rsp+0x50],0x0
   14000c334:	ja     0x14000c341
   14000c336:	mov    QWORD PTR [rsp+0x50],0x0
   14000c33f:	jmp    0x14000c372
   14000c341:	xor    edx,edx
   14000c343:	mov    rax,0xffffffffffffffff
   14000c34a:	div    QWORD PTR [rsp+0x50]
   14000c34f:	cmp    rax,0x1
   14000c353:	jae    0x14000c372
   14000c355:	xor    edx,edx
   14000c357:	lea    rcx,[rsp+0x20]
   14000c35c:	call   0x140001400
   14000c361:	lea    rdx,[rip+0x3b720]        # 0x140047a88
   14000c368:	lea    rcx,[rsp+0x20]
   14000c36d:	call   0x14001e5c0
   14000c372:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c377:	call   0x14001cb1c
   14000c37c:	add    rsp,0x48
   14000c380:	ret    
   14000c381:	int3   
   14000c382:	int3   
   14000c383:	int3   
   14000c384:	int3   
   14000c385:	int3   
   14000c386:	int3   
   14000c387:	int3   
   14000c388:	int3   
   14000c389:	int3   
   14000c38a:	int3   
   14000c38b:	int3   
   14000c38c:	int3   
   14000c38d:	int3   
   14000c38e:	int3   
   14000c38f:	int3   
   14000c390:	mov    QWORD PTR [rsp+0x20],r9
   14000c395:	mov    QWORD PTR [rsp+0x18],r8
   14000c39a:	mov    QWORD PTR [rsp+0x10],rdx
   14000c39f:	mov    QWORD PTR [rsp+0x8],rcx
   14000c3a4:	sub    rsp,0x28
   14000c3a8:	mov    r9,QWORD PTR [rsp+0x30]
   14000c3ad:	add    r9,0x10
   14000c3b1:	mov    r8,QWORD PTR [rsp+0x48]
   14000c3b6:	mov    rdx,QWORD PTR [rsp+0x40]
   14000c3bb:	mov    rcx,QWORD PTR [rsp+0x38]
   14000c3c0:	call   0x14000fce0
   14000c3c5:	add    rsp,0x28
   14000c3c9:	ret    
   14000c3ca:	int3   
   14000c3cb:	int3   
   14000c3cc:	int3   
   14000c3cd:	int3   
   14000c3ce:	int3   
   14000c3cf:	int3   
   14000c3d0:	mov    QWORD PTR [rsp+0x18],r8
   14000c3d5:	mov    QWORD PTR [rsp+0x10],rdx
   14000c3da:	mov    QWORD PTR [rsp+0x8],rcx
   14000c3df:	push   rbx
   14000c3e0:	sub    rsp,0x20
   14000c3e4:	lea    rcx,[rsp+0x38]
   14000c3e9:	call   0x14000ff10
   14000c3ee:	mov    rbx,rax
   14000c3f1:	lea    rcx,[rsp+0x30]
   14000c3f6:	call   0x14000ff10
   14000c3fb:	mov    r8,QWORD PTR [rsp+0x40]
   14000c400:	mov    rdx,rbx
   14000c403:	mov    rcx,rax
   14000c406:	call   0x14000fd60
   14000c40b:	add    rsp,0x20
   14000c40f:	pop    rbx
   14000c410:	ret    
   14000c411:	int3   
   14000c412:	int3   
   14000c413:	int3   
   14000c414:	int3   
   14000c415:	int3   
   14000c416:	int3   
   14000c417:	int3   
   14000c418:	int3   
   14000c419:	int3   
   14000c41a:	int3   
   14000c41b:	int3   
   14000c41c:	int3   
   14000c41d:	int3   
   14000c41e:	int3   
   14000c41f:	int3   
   14000c420:	mov    QWORD PTR [rsp+0x18],r8
   14000c425:	mov    QWORD PTR [rsp+0x10],rdx
   14000c42a:	mov    QWORD PTR [rsp+0x8],rcx
   14000c42f:	push   rbx
   14000c430:	push   rdi
   14000c431:	sub    rsp,0x48
   14000c435:	lea    rdi,[rsp+0x30]
   14000c43a:	xor    eax,eax
   14000c43c:	mov    ecx,0x1
   14000c441:	rep stos BYTE PTR es:[rdi],al
   14000c443:	lea    rcx,[rsp+0x70]
   14000c448:	call   0x14000fdd0
   14000c44d:	mov    BYTE PTR [rsp+0x31],al
   14000c451:	lea    r8,[rsp+0x70]
   14000c456:	lea    rdx,[rsp+0x60]
   14000c45b:	lea    rcx,[rsp+0x32]
   14000c460:	call   0x14000fdb0
   14000c465:	mov    rbx,rax
   14000c468:	lea    rcx,[rsp+0x68]
   14000c46d:	call   0x14000ff10
   14000c472:	mov    rdi,rax
   14000c475:	lea    rcx,[rsp+0x60]
   14000c47a:	call   0x14000ff10
   14000c47f:	mov    rcx,rax
   14000c482:	movzx  eax,BYTE PTR [rsp+0x30]
   14000c487:	mov    BYTE PTR [rsp+0x28],al
   14000c48b:	movzx  eax,BYTE PTR [rsp+0x31]
   14000c490:	mov    BYTE PTR [rsp+0x20],al
   14000c494:	movzx  r9d,BYTE PTR [rbx]
   14000c498:	mov    r8,QWORD PTR [rsp+0x70]
   14000c49d:	mov    rdx,rdi
   14000c4a0:	call   0x14000fdf0
   14000c4a5:	add    rsp,0x48
   14000c4a9:	pop    rdi
   14000c4aa:	pop    rbx
   14000c4ab:	ret    
   14000c4ac:	int3   
   14000c4ad:	int3   
   14000c4ae:	int3   
   14000c4af:	int3   
   14000c4b0:	mov    QWORD PTR [rsp+0x10],rdx
   14000c4b5:	mov    QWORD PTR [rsp+0x8],rcx
   14000c4ba:	sub    rsp,0x48
   14000c4be:	cmp    QWORD PTR [rsp+0x50],0x0
   14000c4c4:	ja     0x14000c4d1
   14000c4c6:	mov    QWORD PTR [rsp+0x50],0x0
   14000c4cf:	jmp    0x14000c502
   14000c4d1:	xor    edx,edx
   14000c4d3:	mov    rax,0xffffffffffffffff
   14000c4da:	div    QWORD PTR [rsp+0x50]
   14000c4df:	cmp    rax,0x28
   14000c4e3:	jae    0x14000c502
   14000c4e5:	xor    edx,edx
   14000c4e7:	lea    rcx,[rsp+0x20]
   14000c4ec:	call   0x140001400
   14000c4f1:	lea    rdx,[rip+0x3b590]        # 0x140047a88
   14000c4f8:	lea    rcx,[rsp+0x20]
   14000c4fd:	call   0x14001e5c0
   14000c502:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c507:	imul   rcx,rcx,0x28
   14000c50b:	call   0x14001cb1c
   14000c510:	add    rsp,0x48
   14000c514:	ret    
   14000c515:	int3   
   14000c516:	int3   
   14000c517:	int3   
   14000c518:	int3   
   14000c519:	int3   
   14000c51a:	int3   
   14000c51b:	int3   
   14000c51c:	int3   
   14000c51d:	int3   
   14000c51e:	int3   
   14000c51f:	int3   
   14000c520:	mov    QWORD PTR [rsp+0x10],rdx
   14000c525:	mov    QWORD PTR [rsp+0x8],rcx
   14000c52a:	sub    rsp,0x48
   14000c52e:	cmp    QWORD PTR [rsp+0x50],0x0
   14000c534:	ja     0x14000c541
   14000c536:	mov    QWORD PTR [rsp+0x50],0x0
   14000c53f:	jmp    0x14000c572
   14000c541:	xor    edx,edx
   14000c543:	mov    rax,0xffffffffffffffff
   14000c54a:	div    QWORD PTR [rsp+0x50]
   14000c54f:	cmp    rax,0x8
   14000c553:	jae    0x14000c572
   14000c555:	xor    edx,edx
   14000c557:	lea    rcx,[rsp+0x20]
   14000c55c:	call   0x140001400
   14000c561:	lea    rdx,[rip+0x3b520]        # 0x140047a88
   14000c568:	lea    rcx,[rsp+0x20]
   14000c56d:	call   0x14001e5c0
   14000c572:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c577:	shl    rcx,0x3
   14000c57b:	call   0x14001cb1c
   14000c580:	add    rsp,0x48
   14000c584:	ret    
   14000c585:	int3   
   14000c586:	int3   
   14000c587:	int3   
   14000c588:	int3   
   14000c589:	int3   
   14000c58a:	int3   
   14000c58b:	int3   
   14000c58c:	int3   
   14000c58d:	int3   
   14000c58e:	int3   
   14000c58f:	int3   
   14000c590:	mov    QWORD PTR [rsp+0x20],r9
   14000c595:	mov    QWORD PTR [rsp+0x18],r8
   14000c59a:	mov    QWORD PTR [rsp+0x10],rdx
   14000c59f:	mov    QWORD PTR [rsp+0x8],rcx
   14000c5a4:	sub    rsp,0x28
   14000c5a8:	mov    r9,QWORD PTR [rsp+0x30]
   14000c5ad:	add    r9,0x10
   14000c5b1:	mov    r8,QWORD PTR [rsp+0x48]
   14000c5b6:	mov    rdx,QWORD PTR [rsp+0x40]
   14000c5bb:	mov    rcx,QWORD PTR [rsp+0x38]
   14000c5c0:	call   0x14000fe90
   14000c5c5:	add    rsp,0x28
   14000c5c9:	ret    
   14000c5ca:	int3   
   14000c5cb:	int3   
   14000c5cc:	int3   
   14000c5cd:	int3   
   14000c5ce:	int3   
   14000c5cf:	int3   
   14000c5d0:	mov    QWORD PTR [rsp+0x18],r8
   14000c5d5:	mov    QWORD PTR [rsp+0x10],rdx
   14000c5da:	mov    QWORD PTR [rsp+0x8],rcx
   14000c5df:	push   rbx
   14000c5e0:	sub    rsp,0x20
   14000c5e4:	lea    rcx,[rsp+0x38]
   14000c5e9:	call   0x14000ff10
   14000c5ee:	mov    rbx,rax
   14000c5f1:	lea    rcx,[rsp+0x30]
   14000c5f6:	call   0x14000ff10
   14000c5fb:	mov    r8,QWORD PTR [rsp+0x40]
   14000c600:	mov    rdx,rbx
   14000c603:	mov    rcx,rax
   14000c606:	call   0x14000ff30
   14000c60b:	add    rsp,0x20
   14000c60f:	pop    rbx
   14000c610:	ret    
   14000c611:	int3   
   14000c612:	int3   
   14000c613:	int3   
   14000c614:	int3   
   14000c615:	int3   
   14000c616:	int3   
   14000c617:	int3   
   14000c618:	int3   
   14000c619:	int3   
   14000c61a:	int3   
   14000c61b:	int3   
   14000c61c:	int3   
   14000c61d:	int3   
   14000c61e:	int3   
   14000c61f:	int3   
   14000c620:	mov    QWORD PTR [rsp+0x18],r8
   14000c625:	mov    QWORD PTR [rsp+0x10],rdx
   14000c62a:	mov    QWORD PTR [rsp+0x8],rcx
   14000c62f:	push   rbx
   14000c630:	push   rdi
   14000c631:	sub    rsp,0x48
   14000c635:	lea    rdi,[rsp+0x30]
   14000c63a:	xor    eax,eax
   14000c63c:	mov    ecx,0x1
   14000c641:	rep stos BYTE PTR es:[rdi],al
   14000c643:	lea    rcx,[rsp+0x70]
   14000c648:	call   0x14000fdd0
   14000c64d:	mov    BYTE PTR [rsp+0x31],al
   14000c651:	lea    r8,[rsp+0x70]
   14000c656:	lea    rdx,[rsp+0x60]
   14000c65b:	lea    rcx,[rsp+0x32]
   14000c660:	call   0x14000fdb0
   14000c665:	mov    rbx,rax
   14000c668:	lea    rcx,[rsp+0x68]
   14000c66d:	call   0x14000ff10
   14000c672:	mov    rdi,rax
   14000c675:	lea    rcx,[rsp+0x60]
   14000c67a:	call   0x14000ff10
   14000c67f:	mov    rcx,rax
   14000c682:	movzx  eax,BYTE PTR [rsp+0x30]
   14000c687:	mov    BYTE PTR [rsp+0x28],al
   14000c68b:	movzx  eax,BYTE PTR [rsp+0x31]
   14000c690:	mov    BYTE PTR [rsp+0x20],al
   14000c694:	movzx  r9d,BYTE PTR [rbx]
   14000c698:	mov    r8,QWORD PTR [rsp+0x70]
   14000c69d:	mov    rdx,rdi
   14000c6a0:	call   0x14000ff80
   14000c6a5:	add    rsp,0x48
   14000c6a9:	pop    rdi
   14000c6aa:	pop    rbx
   14000c6ab:	ret    
   14000c6ac:	int3   
   14000c6ad:	int3   
   14000c6ae:	int3   
   14000c6af:	int3   
   14000c6b0:	mov    QWORD PTR [rsp+0x10],rdx
   14000c6b5:	mov    QWORD PTR [rsp+0x8],rcx
   14000c6ba:	sub    rsp,0x48
   14000c6be:	cmp    QWORD PTR [rsp+0x50],0x0
   14000c6c4:	ja     0x14000c6d1
   14000c6c6:	mov    QWORD PTR [rsp+0x50],0x0
   14000c6cf:	jmp    0x14000c702
   14000c6d1:	xor    edx,edx
   14000c6d3:	mov    rax,0xffffffffffffffff
   14000c6da:	div    QWORD PTR [rsp+0x50]
   14000c6df:	cmp    rax,0x50
   14000c6e3:	jae    0x14000c702
   14000c6e5:	xor    edx,edx
   14000c6e7:	lea    rcx,[rsp+0x20]
   14000c6ec:	call   0x140001400
   14000c6f1:	lea    rdx,[rip+0x3b390]        # 0x140047a88
   14000c6f8:	lea    rcx,[rsp+0x20]
   14000c6fd:	call   0x14001e5c0
   14000c702:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c707:	imul   rcx,rcx,0x50
   14000c70b:	call   0x14001cb1c
   14000c710:	add    rsp,0x48
   14000c714:	ret    
   14000c715:	int3   
   14000c716:	int3   
   14000c717:	int3   
   14000c718:	int3   
   14000c719:	int3   
   14000c71a:	int3   
   14000c71b:	int3   
   14000c71c:	int3   
   14000c71d:	int3   
   14000c71e:	int3   
   14000c71f:	int3   
   14000c720:	mov    QWORD PTR [rsp+0x10],rdx
   14000c725:	mov    QWORD PTR [rsp+0x8],rcx
   14000c72a:	sub    rsp,0x28
   14000c72e:	mov    rdx,QWORD PTR [rsp+0x38]
   14000c733:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c738:	call   0x14001c8c4
   14000c73d:	mov    r11,QWORD PTR [rsp+0x30]
   14000c742:	lea    rax,[rip+0x2df0f]        # 0x14003a658
   14000c749:	mov    QWORD PTR [r11],rax
   14000c74c:	mov    rax,QWORD PTR [rsp+0x30]
   14000c751:	add    rsp,0x28
   14000c755:	ret    
   14000c756:	int3   
   14000c757:	int3   
   14000c758:	int3   
   14000c759:	int3   
   14000c75a:	int3   
   14000c75b:	int3   
   14000c75c:	int3   
   14000c75d:	int3   
   14000c75e:	int3   
   14000c75f:	int3   
   14000c760:	mov    QWORD PTR [rsp+0x8],rcx
   14000c765:	mov    rax,QWORD PTR [rsp+0x8]
   14000c76a:	mov    ax,WORD PTR [rax+0x58]
   14000c76e:	ret    
   14000c76f:	int3   
   14000c770:	mov    QWORD PTR [rsp+0x10],rdx
   14000c775:	mov    QWORD PTR [rsp+0x8],rcx
   14000c77a:	push   rsi
   14000c77b:	push   rdi
   14000c77c:	sub    rsp,0xf8
   14000c783:	mov    QWORD PTR [rsp+0xd0],0xfffffffffffffffe
   14000c78f:	mov    DWORD PTR [rsp+0x40],0x0
   14000c797:	xor    r8d,r8d
   14000c79a:	mov    rdx,QWORD PTR [rsp+0x110]
   14000c7a2:	lea    rcx,[rsp+0x48]
   14000c7a7:	call   0x140003480
   14000c7ac:	nop
   14000c7ad:	lea    rcx,[rsp+0x48]
   14000c7b2:	call   0x1400069f0
   14000c7b7:	movzx  eax,al
   14000c7ba:	test   eax,eax
   14000c7bc:	je     0x14000c93b
   14000c7c2:	mov    DWORD PTR [rsp+0x58],0x0
   14000c7ca:	mov    rax,QWORD PTR [rsp+0x110]
   14000c7d2:	mov    rax,QWORD PTR [rax]
   14000c7d5:	movsxd rax,DWORD PTR [rax+0x4]
   14000c7d9:	mov    rcx,QWORD PTR [rsp+0x110]
   14000c7e1:	add    rcx,rax
   14000c7e4:	lea    rdx,[rsp+0x68]
   14000c7e9:	call   0x140002ca0
   14000c7ee:	mov    QWORD PTR [rsp+0xd8],rax
   14000c7f6:	mov    rax,QWORD PTR [rsp+0xd8]
   14000c7fe:	mov    QWORD PTR [rsp+0xe0],rax
   14000c806:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000c80e:	call   0x140010020
   14000c813:	mov    QWORD PTR [rsp+0x60],rax
   14000c818:	lea    rcx,[rsp+0x68]
   14000c81d:	call   0x140001b80
   14000c822:	nop
   14000c823:	cmp    QWORD PTR [rsp+0x110],0x0
   14000c82c:	jne    0x14000c83c
   14000c82e:	mov    QWORD PTR [rsp+0xe8],0x0
   14000c83a:	jmp    0x14000c85e
   14000c83c:	mov    rax,QWORD PTR [rsp+0x110]
   14000c844:	mov    rax,QWORD PTR [rax]
   14000c847:	movsxd rcx,DWORD PTR [rax+0x4]
   14000c84b:	mov    rax,QWORD PTR [rsp+0x110]
   14000c853:	add    rax,rcx
   14000c856:	mov    QWORD PTR [rsp+0xe8],rax
   14000c85e:	xor    edx,edx
   14000c860:	lea    rcx,[rsp+0x70]
   14000c865:	call   0x14000e1e0
   14000c86a:	lea    rdi,[rsp+0xc0]
   14000c872:	mov    rsi,rax
   14000c875:	mov    ecx,0x10
   14000c87a:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c87c:	mov    rax,QWORD PTR [rsp+0x110]
   14000c884:	mov    rax,QWORD PTR [rax]
   14000c887:	movsxd rax,DWORD PTR [rax+0x4]
   14000c88b:	mov    rcx,QWORD PTR [rsp+0x110]
   14000c893:	add    rcx,rax
   14000c896:	call   0x140003440
   14000c89b:	mov    rdx,rax
   14000c89e:	lea    rcx,[rsp+0x80]
   14000c8a6:	call   0x14000e1e0
   14000c8ab:	lea    rdi,[rsp+0xb0]
   14000c8b3:	mov    rsi,rax
   14000c8b6:	mov    ecx,0x10
   14000c8bb:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c8bd:	lea    rax,[rsp+0x58]
   14000c8c2:	mov    QWORD PTR [rsp+0x30],rax
   14000c8c7:	lea    rax,[rsp+0x40]
   14000c8cc:	mov    QWORD PTR [rsp+0x28],rax
   14000c8d1:	mov    rax,QWORD PTR [rsp+0xe8]
   14000c8d9:	mov    QWORD PTR [rsp+0x20],rax
   14000c8de:	lea    r9,[rsp+0xc0]
   14000c8e6:	lea    r8,[rsp+0xb0]
   14000c8ee:	lea    rdx,[rsp+0x90]
   14000c8f6:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c8fb:	call   0x14000cd00
   14000c900:	nop
   14000c901:	mov    eax,DWORD PTR [rsp+0x40]
   14000c905:	and    eax,0x2
   14000c908:	test   eax,eax
   14000c90a:	jne    0x14000c920
   14000c90c:	cmp    DWORD PTR [rsp+0x58],0x80000000
   14000c914:	jl     0x14000c920
   14000c916:	cmp    DWORD PTR [rsp+0x58],0x7fffffff
   14000c91e:	jle    0x14000c92d
   14000c920:	mov    eax,DWORD PTR [rsp+0x40]
   14000c924:	or     eax,0x2
   14000c927:	mov    DWORD PTR [rsp+0x40],eax
   14000c92b:	jmp    0x14000c93b
   14000c92d:	mov    rcx,QWORD PTR [rsp+0x118]
   14000c935:	mov    eax,DWORD PTR [rsp+0x58]
   14000c939:	mov    DWORD PTR [rcx],eax
   14000c93b:	mov    rax,QWORD PTR [rsp+0x110]
   14000c943:	mov    rax,QWORD PTR [rax]
   14000c946:	movsxd rax,DWORD PTR [rax+0x4]
   14000c94a:	mov    rcx,QWORD PTR [rsp+0x110]
   14000c952:	add    rcx,rax
   14000c955:	xor    r8d,r8d
   14000c958:	mov    edx,DWORD PTR [rsp+0x40]
   14000c95c:	call   0x140003400
   14000c961:	mov    rax,QWORD PTR [rsp+0x110]
   14000c969:	mov    QWORD PTR [rsp+0xa0],rax
   14000c971:	lea    rcx,[rsp+0x48]
   14000c976:	call   0x140002ea0
   14000c97b:	mov    rax,QWORD PTR [rsp+0xa0]
   14000c983:	add    rsp,0xf8
   14000c98a:	pop    rdi
   14000c98b:	pop    rsi
   14000c98c:	ret    
   14000c98d:	int3   
   14000c98e:	int3   
   14000c98f:	int3   
   14000c990:	mov    QWORD PTR [rsp+0x18],r8
   14000c995:	mov    QWORD PTR [rsp+0x10],rdx
   14000c99a:	mov    QWORD PTR [rsp+0x8],rcx
   14000c99f:	sub    rsp,0x28
   14000c9a3:	mov    rax,QWORD PTR [rsp+0x30]
   14000c9a8:	mov    rax,QWORD PTR [rax]
   14000c9ab:	mov    r8,QWORD PTR [rsp+0x40]
   14000c9b0:	mov    rdx,QWORD PTR [rsp+0x38]
   14000c9b5:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c9ba:	call   QWORD PTR [rax+0x40]
   14000c9bd:	add    rsp,0x28
   14000c9c1:	ret    
   14000c9c2:	int3   
   14000c9c3:	int3   
   14000c9c4:	int3   
   14000c9c5:	int3   
   14000c9c6:	int3   
   14000c9c7:	int3   
   14000c9c8:	int3   
   14000c9c9:	int3   
   14000c9ca:	int3   
   14000c9cb:	int3   
   14000c9cc:	int3   
   14000c9cd:	int3   
   14000c9ce:	int3   
   14000c9cf:	int3   
   14000c9d0:	mov    QWORD PTR [rsp+0x10],rdx
   14000c9d5:	mov    QWORD PTR [rsp+0x8],rcx
   14000c9da:	push   rbx
   14000c9db:	sub    rsp,0x30
   14000c9df:	mov    rcx,QWORD PTR [rsp+0x48]
   14000c9e4:	call   0x140003bb0
   14000c9e9:	mov    rbx,rax
   14000c9ec:	mov    rcx,QWORD PTR [rsp+0x48]
   14000c9f1:	call   0x140006370
   14000c9f6:	mov    QWORD PTR [rsp+0x20],rbx
   14000c9fb:	mov    r9,rax
   14000c9fe:	mov    r8,QWORD PTR [rsp+0x40]
   14000ca03:	mov    r8,QWORD PTR [r8+0x18]
   14000ca07:	xor    edx,edx
   14000ca09:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ca0e:	call   0x14000cb30
   14000ca13:	add    rsp,0x30
   14000ca17:	pop    rbx
   14000ca18:	ret    
   14000ca19:	int3   
   14000ca1a:	int3   
   14000ca1b:	int3   
   14000ca1c:	int3   
   14000ca1d:	int3   
   14000ca1e:	int3   
   14000ca1f:	int3   
   14000ca20:	mov    QWORD PTR [rsp+0x10],rdx
   14000ca25:	mov    QWORD PTR [rsp+0x8],rcx
   14000ca2a:	sub    rsp,0x38
   14000ca2e:	mov    rcx,QWORD PTR [rsp+0x48]
   14000ca33:	call   0x140001050
   14000ca38:	mov    QWORD PTR [rsp+0x20],rax
   14000ca3d:	mov    r9,QWORD PTR [rsp+0x48]
   14000ca42:	mov    r8,QWORD PTR [rsp+0x40]
   14000ca47:	mov    r8,QWORD PTR [r8+0x18]
   14000ca4b:	xor    edx,edx
   14000ca4d:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ca52:	call   0x14000cb30
   14000ca57:	add    rsp,0x38
   14000ca5b:	ret    
   14000ca5c:	int3   
   14000ca5d:	int3   
   14000ca5e:	int3   
   14000ca5f:	int3   
   14000ca60:	mov    DWORD PTR [rsp+0x20],r9d
   14000ca65:	mov    DWORD PTR [rsp+0x18],r8d
   14000ca6a:	mov    QWORD PTR [rsp+0x10],rdx
   14000ca6f:	mov    QWORD PTR [rsp+0x8],rcx
   14000ca74:	sub    rsp,0x38
   14000ca78:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000ca81:	mov    DWORD PTR [rsp+0x20],0x0
   14000ca89:	cmp    DWORD PTR [rsp+0x58],0x0
   14000ca8e:	je     0x14000cacc
   14000ca90:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ca95:	lea    rax,[rip+0x3294c]        # 0x14003f3e8
   14000ca9c:	mov    QWORD PTR [rcx],rax
   14000ca9f:	mov    rcx,QWORD PTR [rsp+0x40]
   14000caa4:	lea    rax,[rip+0x32945]        # 0x14003f3f0
   14000caab:	mov    QWORD PTR [rcx+0x10],rax
   14000caaf:	mov    rcx,QWORD PTR [rsp+0x40]
   14000cab4:	add    rcx,0x98
   14000cabb:	call   0x140007dc0
   14000cac0:	nop
   14000cac1:	mov    eax,DWORD PTR [rsp+0x20]
   14000cac5:	or     eax,0x1
   14000cac8:	mov    DWORD PTR [rsp+0x20],eax
   14000cacc:	mov    rdx,QWORD PTR [rsp+0x40]
   14000cad1:	add    rdx,0x18
   14000cad5:	xor    r8d,r8d
   14000cad8:	mov    rcx,QWORD PTR [rsp+0x40]
   14000cadd:	call   0x140008de0
   14000cae2:	nop
   14000cae3:	mov    rax,QWORD PTR [rsp+0x40]
   14000cae8:	mov    rax,QWORD PTR [rax]
   14000caeb:	movsxd rdx,DWORD PTR [rax+0x4]
   14000caef:	mov    rcx,QWORD PTR [rsp+0x40]
   14000caf4:	lea    rax,[rip+0x328e5]        # 0x14003f3e0
   14000cafb:	mov    QWORD PTR [rcx+rdx*1],rax
   14000caff:	mov    rcx,QWORD PTR [rsp+0x40]
   14000cb04:	add    rcx,0x18
   14000cb08:	mov    r8d,DWORD PTR [rsp+0x50]
   14000cb0d:	mov    rdx,QWORD PTR [rsp+0x48]
   14000cb12:	call   0x14000cc40
   14000cb17:	nop
   14000cb18:	mov    rax,QWORD PTR [rsp+0x40]
   14000cb1d:	add    rsp,0x38
   14000cb21:	ret    
   14000cb22:	int3   
   14000cb23:	int3   
   14000cb24:	int3   
   14000cb25:	int3   
   14000cb26:	int3   
   14000cb27:	int3   
   14000cb28:	int3   
   14000cb29:	int3   
   14000cb2a:	int3   
   14000cb2b:	int3   
   14000cb2c:	int3   
   14000cb2d:	int3   
   14000cb2e:	int3   
   14000cb2f:	int3   
   14000cb30:	mov    QWORD PTR [rsp+0x20],r9
   14000cb35:	mov    QWORD PTR [rsp+0x18],r8
   14000cb3a:	mov    QWORD PTR [rsp+0x10],rdx
   14000cb3f:	mov    QWORD PTR [rsp+0x8],rcx
   14000cb44:	sub    rsp,0x48
   14000cb48:	mov    rcx,QWORD PTR [rsp+0x50]
   14000cb4d:	mov    rax,QWORD PTR [rsp+0x58]
   14000cb52:	cmp    QWORD PTR [rcx+0x18],rax
   14000cb56:	jae    0x14000cb5d
   14000cb58:	call   0x14001a348
   14000cb5d:	mov    rax,QWORD PTR [rsp+0x50]
   14000cb62:	mov    rcx,QWORD PTR [rsp+0x58]
   14000cb67:	mov    rax,QWORD PTR [rax+0x18]
   14000cb6b:	sub    rax,rcx
   14000cb6e:	cmp    rax,QWORD PTR [rsp+0x60]
   14000cb73:	jae    0x14000cb8b
   14000cb75:	mov    rax,QWORD PTR [rsp+0x50]
   14000cb7a:	mov    rcx,QWORD PTR [rsp+0x58]
   14000cb7f:	mov    rax,QWORD PTR [rax+0x18]
   14000cb83:	sub    rax,rcx
   14000cb86:	mov    QWORD PTR [rsp+0x60],rax
   14000cb8b:	mov    rax,QWORD PTR [rsp+0x70]
   14000cb90:	cmp    QWORD PTR [rsp+0x60],rax
   14000cb95:	jae    0x14000cba3
   14000cb97:	mov    rax,QWORD PTR [rsp+0x60]
   14000cb9c:	mov    QWORD PTR [rsp+0x28],rax
   14000cba1:	jmp    0x14000cbad
   14000cba3:	mov    rax,QWORD PTR [rsp+0x70]
   14000cba8:	mov    QWORD PTR [rsp+0x28],rax
   14000cbad:	mov    rcx,QWORD PTR [rsp+0x50]
   14000cbb2:	call   0x140006370
   14000cbb7:	mov    r11,rax
   14000cbba:	mov    rax,QWORD PTR [rsp+0x58]
   14000cbbf:	lea    rcx,[r11+rax*2]
   14000cbc3:	mov    r8,QWORD PTR [rsp+0x28]
   14000cbc8:	mov    rdx,QWORD PTR [rsp+0x68]
   14000cbcd:	call   0x140001020
   14000cbd2:	cdqe   
   14000cbd4:	mov    QWORD PTR [rsp+0x20],rax
   14000cbd9:	cmp    QWORD PTR [rsp+0x20],0x0
   14000cbdf:	je     0x14000cbeb
   14000cbe1:	mov    eax,DWORD PTR [rsp+0x20]
   14000cbe5:	mov    DWORD PTR [rsp+0x30],eax
   14000cbe9:	jmp    0x14000cc2f
   14000cbeb:	mov    rax,QWORD PTR [rsp+0x70]
   14000cbf0:	cmp    QWORD PTR [rsp+0x60],rax
   14000cbf5:	jae    0x14000cc01
   14000cbf7:	mov    DWORD PTR [rsp+0x34],0xffffffff
   14000cbff:	jmp    0x14000cc27
   14000cc01:	mov    rax,QWORD PTR [rsp+0x70]
   14000cc06:	cmp    QWORD PTR [rsp+0x60],rax
   14000cc0b:	jne    0x14000cc17
   14000cc0d:	mov    DWORD PTR [rsp+0x38],0x0
   14000cc15:	jmp    0x14000cc1f
   14000cc17:	mov    DWORD PTR [rsp+0x38],0x1
   14000cc1f:	mov    eax,DWORD PTR [rsp+0x38]
   14000cc23:	mov    DWORD PTR [rsp+0x34],eax
   14000cc27:	mov    eax,DWORD PTR [rsp+0x34]
   14000cc2b:	mov    DWORD PTR [rsp+0x30],eax
   14000cc2f:	mov    eax,DWORD PTR [rsp+0x30]
   14000cc33:	add    rsp,0x48
   14000cc37:	ret    
   14000cc38:	int3   
   14000cc39:	int3   
   14000cc3a:	int3   
   14000cc3b:	int3   
   14000cc3c:	int3   
   14000cc3d:	int3   
   14000cc3e:	int3   
   14000cc3f:	int3   
   14000cc40:	mov    DWORD PTR [rsp+0x18],r8d
   14000cc45:	mov    QWORD PTR [rsp+0x10],rdx
   14000cc4a:	mov    QWORD PTR [rsp+0x8],rcx
   14000cc4f:	push   rbx
   14000cc50:	push   rdi
   14000cc51:	sub    rsp,0x38
   14000cc55:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cc5e:	mov    rcx,QWORD PTR [rsp+0x50]
   14000cc63:	call   0x140009460
   14000cc68:	nop
   14000cc69:	mov    rcx,QWORD PTR [rsp+0x50]
   14000cc6e:	lea    rax,[rip+0x326f3]        # 0x14003f368
   14000cc75:	mov    QWORD PTR [rcx],rax
   14000cc78:	mov    rcx,QWORD PTR [rsp+0x50]
   14000cc7d:	add    rcx,0x7c
   14000cc81:	call   0x140005660
   14000cc86:	mov    edx,DWORD PTR [rsp+0x60]
   14000cc8a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000cc8f:	call   0x14000ad40
   14000cc94:	mov    edi,eax
   14000cc96:	mov    rcx,QWORD PTR [rsp+0x58]
   14000cc9b:	call   0x140003bb0
   14000cca0:	mov    rbx,rax
   14000cca3:	mov    rcx,QWORD PTR [rsp+0x58]
   14000cca8:	call   0x140003b90
   14000ccad:	mov    r9d,edi
   14000ccb0:	mov    r8,rbx
   14000ccb3:	mov    rdx,rax
   14000ccb6:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ccbb:	call   0x14000abd0
   14000ccc0:	nop
   14000ccc1:	mov    rax,QWORD PTR [rsp+0x50]
   14000ccc6:	add    rsp,0x38
   14000ccca:	pop    rdi
   14000cccb:	pop    rbx
   14000cccc:	ret    
   14000cccd:	int3   
   14000ccce:	int3   
   14000cccf:	int3   
   14000ccd0:	mov    QWORD PTR [rsp+0x8],rcx
   14000ccd5:	sub    rsp,0x28
   14000ccd9:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ccde:	lea    rax,[rip+0x32723]        # 0x14003f408
   14000cce5:	mov    QWORD PTR [rcx],rax
   14000cce8:	mov    rcx,QWORD PTR [rsp+0x30]
   14000cced:	call   0x140001ac0
   14000ccf2:	add    rsp,0x28
   14000ccf6:	ret    
   14000ccf7:	int3   
   14000ccf8:	int3   
   14000ccf9:	int3   
   14000ccfa:	int3   
   14000ccfb:	int3   
   14000ccfc:	int3   
   14000ccfd:	int3   
   14000ccfe:	int3   
   14000ccff:	int3   
   14000cd00:	mov    QWORD PTR [rsp+0x20],r9
   14000cd05:	mov    QWORD PTR [rsp+0x18],r8
   14000cd0a:	mov    QWORD PTR [rsp+0x10],rdx
   14000cd0f:	mov    QWORD PTR [rsp+0x8],rcx
   14000cd14:	push   rsi
   14000cd15:	push   rdi
   14000cd16:	sub    rsp,0x68
   14000cd1a:	lea    rdi,[rsp+0x50]
   14000cd1f:	mov    rsi,QWORD PTR [rsp+0x98]
   14000cd27:	mov    ecx,0x10
   14000cd2c:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000cd2e:	lea    rdi,[rsp+0x40]
   14000cd33:	mov    rsi,QWORD PTR [rsp+0x90]
   14000cd3b:	mov    ecx,0x10
   14000cd40:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000cd42:	mov    rdi,QWORD PTR [rsp+0x80]
   14000cd4a:	mov    rdi,QWORD PTR [rdi]
   14000cd4d:	mov    rax,QWORD PTR [rsp+0xb0]
   14000cd55:	mov    QWORD PTR [rsp+0x30],rax
   14000cd5a:	mov    rax,QWORD PTR [rsp+0xa8]
   14000cd62:	mov    QWORD PTR [rsp+0x28],rax
   14000cd67:	mov    rax,QWORD PTR [rsp+0xa0]
   14000cd6f:	mov    QWORD PTR [rsp+0x20],rax
   14000cd74:	lea    r9,[rsp+0x50]
   14000cd79:	lea    r8,[rsp+0x40]
   14000cd7e:	mov    rdx,QWORD PTR [rsp+0x88]
   14000cd86:	mov    rcx,QWORD PTR [rsp+0x80]
   14000cd8e:	call   QWORD PTR [rdi+0x40]
   14000cd91:	mov    rax,QWORD PTR [rsp+0x88]
   14000cd99:	add    rsp,0x68
   14000cd9d:	pop    rdi
   14000cd9e:	pop    rsi
   14000cd9f:	ret    
   14000cda0:	mov    QWORD PTR [rsp+0x20],r9
   14000cda5:	mov    QWORD PTR [rsp+0x18],r8
   14000cdaa:	mov    QWORD PTR [rsp+0x10],rdx
   14000cdaf:	mov    QWORD PTR [rsp+0x8],rcx
   14000cdb4:	push   rsi
   14000cdb5:	push   rdi
   14000cdb6:	sub    rsp,0x178
   14000cdbd:	mov    QWORD PTR [rsp+0x110],0xfffffffffffffffe
   14000cdc9:	mov    rax,QWORD PTR [rip+0x3c690]        # 0x140049460
   14000cdd0:	xor    rax,rsp
   14000cdd3:	mov    QWORD PTR [rsp+0x160],rax
   14000cddb:	mov    DWORD PTR [rsp+0x30],0xffffffff
   14000cde3:	mov    rcx,QWORD PTR [rsp+0x1b0]
   14000cdeb:	call   0x140002c40
   14000cdf0:	and    eax,0x4000
   14000cdf5:	test   eax,eax
   14000cdf7:	je     0x14000cf37
   14000cdfd:	lea    rdx,[rsp+0xa0]
   14000ce05:	mov    rcx,QWORD PTR [rsp+0x1b0]
   14000ce0d:	call   0x140002ca0
   14000ce12:	mov    QWORD PTR [rsp+0x118],rax
   14000ce1a:	mov    rax,QWORD PTR [rsp+0x118]
   14000ce22:	mov    QWORD PTR [rsp+0x120],rax
   14000ce2a:	mov    rcx,QWORD PTR [rsp+0x120]
   14000ce32:	call   0x140010130
   14000ce37:	mov    QWORD PTR [rsp+0x38],rax
   14000ce3c:	lea    rcx,[rsp+0xa0]
   14000ce44:	call   0x140001b80
   14000ce49:	xor    r8d,r8d
   14000ce4c:	mov    edx,0x1
   14000ce51:	lea    rcx,[rsp+0x48]
   14000ce56:	call   0x140005cc0
   14000ce5b:	nop
   14000ce5c:	lea    rdx,[rsp+0xa8]
   14000ce64:	mov    rcx,QWORD PTR [rsp+0x38]
   14000ce69:	call   0x14000f3a0
   14000ce6e:	mov    QWORD PTR [rsp+0x128],rax
   14000ce76:	mov    rax,QWORD PTR [rsp+0x128]
   14000ce7e:	mov    QWORD PTR [rsp+0x130],rax
   14000ce86:	mov    rdx,QWORD PTR [rsp+0x130]
   14000ce8e:	lea    rcx,[rsp+0x48]
   14000ce93:	call   0x140003ab0
   14000ce98:	nop
   14000ce99:	lea    rcx,[rsp+0xa8]
   14000cea1:	call   0x140003a90
   14000cea6:	xor    edx,edx
   14000cea8:	lea    rcx,[rsp+0x48]
   14000cead:	call   0x14000e270
   14000ceb2:	lea    rdx,[rsp+0xd0]
   14000ceba:	mov    rcx,QWORD PTR [rsp+0x38]
   14000cebf:	call   0x14000f3e0
   14000cec4:	mov    QWORD PTR [rsp+0x138],rax
   14000cecc:	mov    rax,QWORD PTR [rsp+0x138]
   14000ced4:	mov    QWORD PTR [rsp+0x140],rax
   14000cedc:	mov    rdx,QWORD PTR [rsp+0x140]
   14000cee4:	lea    rcx,[rsp+0x48]
   14000cee9:	call   0x140003ab0
   14000ceee:	nop
   14000ceef:	lea    rcx,[rsp+0xd0]
   14000cef7:	call   0x140003a90
   14000cefc:	lea    rcx,[rsp+0x48]
   14000cf01:	call   0x140003b90
   14000cf06:	mov    r9,rax
   14000cf09:	mov    r8d,0x2
   14000cf0f:	mov    rdx,QWORD PTR [rsp+0x1a8]
   14000cf17:	mov    rcx,QWORD PTR [rsp+0x1a0]
   14000cf1f:	call   0x140010240
   14000cf24:	mov    DWORD PTR [rsp+0x30],eax
   14000cf28:	lea    rcx,[rsp+0x48]
   14000cf2d:	call   0x140003a90
   14000cf32:	jmp    0x14000d010
   14000cf37:	mov    DWORD PTR [rsp+0x9c],0x0
   14000cf42:	lea    rdx,[rsp+0xf8]
   14000cf4a:	mov    rcx,QWORD PTR [rsp+0x1b0]
   14000cf52:	call   0x140002ca0
   14000cf57:	mov    QWORD PTR [rsp+0x148],rax
   14000cf5f:	mov    rax,QWORD PTR [rsp+0x148]
   14000cf67:	mov    QWORD PTR [rsp+0x150],rax
   14000cf6f:	mov    rcx,QWORD PTR [rsp+0x1b0]
   14000cf77:	call   0x140002c40
   14000cf7c:	mov    edx,eax
   14000cf7e:	mov    rax,QWORD PTR [rsp+0x150]
   14000cf86:	mov    QWORD PTR [rsp+0x28],rax
   14000cf8b:	mov    DWORD PTR [rsp+0x20],edx
   14000cf8f:	mov    r9,QWORD PTR [rsp+0x1a8]
   14000cf97:	mov    r8,QWORD PTR [rsp+0x1a0]
   14000cf9f:	lea    rdx,[rsp+0x70]
   14000cfa4:	mov    rcx,QWORD PTR [rsp+0x190]
   14000cfac:	call   0x14000e2a0
   14000cfb1:	lea    r9,[rsp+0x9c]
   14000cfb9:	mov    r8d,eax
   14000cfbc:	lea    rdx,[rsp+0x90]
   14000cfc4:	lea    rcx,[rsp+0x70]
   14000cfc9:	call   0x14001a448
   14000cfce:	mov    DWORD PTR [rsp+0x98],eax
   14000cfd5:	lea    rcx,[rsp+0xf8]
   14000cfdd:	call   0x140001b80
   14000cfe2:	lea    rax,[rsp+0x70]
   14000cfe7:	cmp    QWORD PTR [rsp+0x90],rax
   14000cfef:	je     0x14000d010
   14000cff1:	cmp    DWORD PTR [rsp+0x9c],0x0
   14000cff9:	jne    0x14000d010
   14000cffb:	cmp    DWORD PTR [rsp+0x98],0x1
   14000d003:	ja     0x14000d010
   14000d005:	mov    eax,DWORD PTR [rsp+0x98]
   14000d00c:	mov    DWORD PTR [rsp+0x30],eax
   14000d010:	mov    rdx,QWORD PTR [rsp+0x1a8]
   14000d018:	mov    rcx,QWORD PTR [rsp+0x1a0]
   14000d020:	call   0x140010570
   14000d025:	movzx  eax,al
   14000d028:	test   eax,eax
   14000d02a:	je     0x14000d043
   14000d02c:	mov    rax,QWORD PTR [rsp+0x1b8]
   14000d034:	mov    ecx,DWORD PTR [rax]
   14000d036:	or     ecx,0x1
   14000d039:	mov    rax,QWORD PTR [rsp+0x1b8]
   14000d041:	mov    DWORD PTR [rax],ecx
   14000d043:	cmp    DWORD PTR [rsp+0x30],0x0
   14000d048:	jge    0x14000d063
   14000d04a:	mov    rax,QWORD PTR [rsp+0x1b8]
   14000d052:	mov    ecx,DWORD PTR [rax]
   14000d054:	or     ecx,0x2
   14000d057:	mov    rax,QWORD PTR [rsp+0x1b8]
   14000d05f:	mov    DWORD PTR [rax],ecx
   14000d061:	jmp    0x14000d094
   14000d063:	cmp    DWORD PTR [rsp+0x30],0x0
   14000d068:	je     0x14000d077
   14000d06a:	mov    DWORD PTR [rsp+0x158],0x1
   14000d075:	jmp    0x14000d082
   14000d077:	mov    DWORD PTR [rsp+0x158],0x0
   14000d082:	mov    rcx,QWORD PTR [rsp+0x1c0]
   14000d08a:	movzx  eax,BYTE PTR [rsp+0x158]
   14000d092:	mov    BYTE PTR [rcx],al
   14000d094:	lea    rdi,[rsp+0x100]
   14000d09c:	mov    rsi,QWORD PTR [rsp+0x1a0]
   14000d0a4:	mov    ecx,0x10
   14000d0a9:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d0ab:	lea    rsi,[rsp+0x100]
   14000d0b3:	mov    rdi,QWORD PTR [rsp+0x198]
   14000d0bb:	mov    ecx,0x10
   14000d0c0:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d0c2:	mov    rax,QWORD PTR [rsp+0x198]
   14000d0ca:	mov    rcx,QWORD PTR [rsp+0x160]
   14000d0d2:	xor    rcx,rsp
   14000d0d5:	call   0x14001c500
   14000d0da:	add    rsp,0x178
   14000d0e1:	pop    rdi
   14000d0e2:	pop    rsi
   14000d0e3:	ret    
   14000d0e4:	int3   
   14000d0e5:	int3   
   14000d0e6:	int3   
   14000d0e7:	int3   
   14000d0e8:	int3   
   14000d0e9:	int3   
   14000d0ea:	int3   
   14000d0eb:	int3   
   14000d0ec:	int3   
   14000d0ed:	int3   
   14000d0ee:	int3   
   14000d0ef:	int3   
   14000d0f0:	mov    QWORD PTR [rsp+0x20],r9
   14000d0f5:	mov    QWORD PTR [rsp+0x18],r8
   14000d0fa:	mov    QWORD PTR [rsp+0x10],rdx
   14000d0ff:	mov    QWORD PTR [rsp+0x8],rcx
   14000d104:	push   rsi
   14000d105:	push   rdi
   14000d106:	sub    rsp,0xc8
   14000d10d:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   14000d119:	mov    rax,QWORD PTR [rip+0x3c340]        # 0x140049460
   14000d120:	xor    rax,rsp
   14000d123:	mov    QWORD PTR [rsp+0xb8],rax
   14000d12b:	mov    DWORD PTR [rsp+0x6c],0x0
   14000d133:	lea    rdx,[rsp+0x78]
   14000d138:	mov    rcx,QWORD PTR [rsp+0x100]
   14000d140:	call   0x140002ca0
   14000d145:	mov    QWORD PTR [rsp+0x98],rax
   14000d14d:	mov    rax,QWORD PTR [rsp+0x98]
   14000d155:	mov    QWORD PTR [rsp+0xa0],rax
   14000d15d:	mov    rcx,QWORD PTR [rsp+0x100]
   14000d165:	call   0x140002c40
   14000d16a:	mov    edx,eax
   14000d16c:	mov    rax,QWORD PTR [rsp+0xa0]
   14000d174:	mov    QWORD PTR [rsp+0x28],rax
   14000d179:	mov    DWORD PTR [rsp+0x20],edx
   14000d17d:	mov    r9,QWORD PTR [rsp+0xf8]
   14000d185:	mov    r8,QWORD PTR [rsp+0xf0]
   14000d18d:	lea    rdx,[rsp+0x38]
   14000d192:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000d19a:	call   0x14000e2a0
   14000d19f:	mov    DWORD PTR [rsp+0x70],eax
   14000d1a3:	lea    rcx,[rsp+0x78]
   14000d1a8:	call   0x140001b80
   14000d1ad:	movsx  eax,BYTE PTR [rsp+0x38]
   14000d1b2:	cmp    eax,0x2d
   14000d1b5:	jne    0x14000d1c6
   14000d1b7:	lea    rax,[rsp+0x39]
   14000d1bc:	mov    QWORD PTR [rsp+0xa8],rax
   14000d1c4:	jmp    0x14000d1d3
   14000d1c6:	lea    rax,[rsp+0x38]
   14000d1cb:	mov    QWORD PTR [rsp+0xa8],rax
   14000d1d3:	mov    rax,QWORD PTR [rsp+0xa8]
   14000d1db:	mov    QWORD PTR [rsp+0x58],rax
   14000d1e0:	lea    r9,[rsp+0x6c]
   14000d1e5:	mov    r8d,DWORD PTR [rsp+0x70]
   14000d1ea:	lea    rdx,[rsp+0x60]
   14000d1ef:	mov    rcx,QWORD PTR [rsp+0x58]
   14000d1f4:	call   0x14001a448
   14000d1f9:	mov    DWORD PTR [rsp+0x68],eax
   14000d1fd:	mov    rdx,QWORD PTR [rsp+0xf8]
   14000d205:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000d20d:	call   0x140010570
   14000d212:	movzx  eax,al
   14000d215:	test   eax,eax
   14000d217:	je     0x14000d230
   14000d219:	mov    rax,QWORD PTR [rsp+0x108]
   14000d221:	mov    ecx,DWORD PTR [rax]
   14000d223:	or     ecx,0x1
   14000d226:	mov    rax,QWORD PTR [rsp+0x108]
   14000d22e:	mov    DWORD PTR [rax],ecx
   14000d230:	mov    rax,QWORD PTR [rsp+0x58]
   14000d235:	cmp    QWORD PTR [rsp+0x60],rax
   14000d23a:	je     0x14000d24d
   14000d23c:	cmp    DWORD PTR [rsp+0x6c],0x0
   14000d241:	jne    0x14000d24d
   14000d243:	cmp    DWORD PTR [rsp+0x68],0xffff
   14000d24b:	jbe    0x14000d266
   14000d24d:	mov    rax,QWORD PTR [rsp+0x108]
   14000d255:	mov    ecx,DWORD PTR [rax]
   14000d257:	or     ecx,0x2
   14000d25a:	mov    rax,QWORD PTR [rsp+0x108]
   14000d262:	mov    DWORD PTR [rax],ecx
   14000d264:	jmp    0x14000d29d
   14000d266:	movsx  eax,BYTE PTR [rsp+0x38]
   14000d26b:	cmp    eax,0x2d
   14000d26e:	jne    0x14000d27f
   14000d270:	xor    eax,eax
   14000d272:	sub    eax,DWORD PTR [rsp+0x68]
   14000d276:	mov    DWORD PTR [rsp+0xb0],eax
   14000d27d:	jmp    0x14000d28a
   14000d27f:	mov    eax,DWORD PTR [rsp+0x68]
   14000d283:	mov    DWORD PTR [rsp+0xb0],eax
   14000d28a:	mov    rcx,QWORD PTR [rsp+0x110]
   14000d292:	movzx  eax,WORD PTR [rsp+0xb0]
   14000d29a:	mov    WORD PTR [rcx],ax
   14000d29d:	lea    rdi,[rsp+0x80]
   14000d2a5:	mov    rsi,QWORD PTR [rsp+0xf0]
   14000d2ad:	mov    ecx,0x10
   14000d2b2:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d2b4:	lea    rsi,[rsp+0x80]
   14000d2bc:	mov    rdi,QWORD PTR [rsp+0xe8]
   14000d2c4:	mov    ecx,0x10
   14000d2c9:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d2cb:	mov    rax,QWORD PTR [rsp+0xe8]
   14000d2d3:	mov    rcx,QWORD PTR [rsp+0xb8]
   14000d2db:	xor    rcx,rsp
   14000d2de:	call   0x14001c500
   14000d2e3:	add    rsp,0xc8
   14000d2ea:	pop    rdi
   14000d2eb:	pop    rsi
   14000d2ec:	ret    
   14000d2ed:	int3   
   14000d2ee:	int3   
   14000d2ef:	int3   
   14000d2f0:	mov    QWORD PTR [rsp+0x20],r9
   14000d2f5:	mov    QWORD PTR [rsp+0x18],r8
   14000d2fa:	mov    QWORD PTR [rsp+0x10],rdx
   14000d2ff:	mov    QWORD PTR [rsp+0x8],rcx
   14000d304:	push   rsi
   14000d305:	push   rdi
   14000d306:	sub    rsp,0xc8
   14000d30d:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   14000d319:	mov    rax,QWORD PTR [rip+0x3c140]        # 0x140049460
   14000d320:	xor    rax,rsp
   14000d323:	mov    QWORD PTR [rsp+0xb8],rax
   14000d32b:	mov    DWORD PTR [rsp+0x6c],0x0
   14000d333:	lea    rdx,[rsp+0x78]
   14000d338:	mov    rcx,QWORD PTR [rsp+0x100]
   14000d340:	call   0x140002ca0
   14000d345:	mov    QWORD PTR [rsp+0x98],rax
   14000d34d:	mov    rax,QWORD PTR [rsp+0x98]
   14000d355:	mov    QWORD PTR [rsp+0xa0],rax
   14000d35d:	mov    rcx,QWORD PTR [rsp+0x100]
   14000d365:	call   0x140002c40
   14000d36a:	mov    edx,eax
   14000d36c:	mov    rax,QWORD PTR [rsp+0xa0]
   14000d374:	mov    QWORD PTR [rsp+0x28],rax
   14000d379:	mov    DWORD PTR [rsp+0x20],edx
   14000d37d:	mov    r9,QWORD PTR [rsp+0xf8]
   14000d385:	mov    r8,QWORD PTR [rsp+0xf0]
   14000d38d:	lea    rdx,[rsp+0x38]
   14000d392:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000d39a:	call   0x14000e2a0
   14000d39f:	mov    DWORD PTR [rsp+0x70],eax
   14000d3a3:	lea    rcx,[rsp+0x78]
   14000d3a8:	call   0x140001b80
   14000d3ad:	movsx  eax,BYTE PTR [rsp+0x38]
   14000d3b2:	cmp    eax,0x2d
   14000d3b5:	jne    0x14000d3c6
   14000d3b7:	lea    rax,[rsp+0x39]
   14000d3bc:	mov    QWORD PTR [rsp+0xa8],rax
   14000d3c4:	jmp    0x14000d3d3
   14000d3c6:	lea    rax,[rsp+0x38]
   14000d3cb:	mov    QWORD PTR [rsp+0xa8],rax
   14000d3d3:	mov    rax,QWORD PTR [rsp+0xa8]
   14000d3db:	mov    QWORD PTR [rsp+0x58],rax
   14000d3e0:	lea    r9,[rsp+0x6c]
   14000d3e5:	mov    r8d,DWORD PTR [rsp+0x70]
   14000d3ea:	lea    rdx,[rsp+0x60]
   14000d3ef:	mov    rcx,QWORD PTR [rsp+0x58]
   14000d3f4:	call   0x14001a448
   14000d3f9:	mov    DWORD PTR [rsp+0x68],eax
   14000d3fd:	mov    rdx,QWORD PTR [rsp+0xf8]
   14000d405:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000d40d:	call   0x140010570
   14000d412:	movzx  eax,al
   14000d415:	test   eax,eax
   14000d417:	je     0x14000d430
   14000d419:	mov    rax,QWORD PTR [rsp+0x108]
   14000d421:	mov    ecx,DWORD PTR [rax]
   14000d423:	or     ecx,0x1
   14000d426:	mov    rax,QWORD PTR [rsp+0x108]
   14000d42e:	mov    DWORD PTR [rax],ecx
   14000d430:	mov    rax,QWORD PTR [rsp+0x58]
   14000d435:	cmp    QWORD PTR [rsp+0x60],rax
   14000d43a:	je     0x14000d44a
   14000d43c:	cmp    DWORD PTR [rsp+0x6c],0x0
   14000d441:	jne    0x14000d44a
   14000d443:	cmp    DWORD PTR [rsp+0x68],0xffffffff
   14000d448:	jbe    0x14000d463
   14000d44a:	mov    rax,QWORD PTR [rsp+0x108]
   14000d452:	mov    ecx,DWORD PTR [rax]
   14000d454:	or     ecx,0x2
   14000d457:	mov    rax,QWORD PTR [rsp+0x108]
   14000d45f:	mov    DWORD PTR [rax],ecx
   14000d461:	jmp    0x14000d498
   14000d463:	movsx  eax,BYTE PTR [rsp+0x38]
   14000d468:	cmp    eax,0x2d
   14000d46b:	jne    0x14000d47c
   14000d46d:	xor    eax,eax
   14000d46f:	sub    eax,DWORD PTR [rsp+0x68]
   14000d473:	mov    DWORD PTR [rsp+0xb0],eax
   14000d47a:	jmp    0x14000d487
   14000d47c:	mov    eax,DWORD PTR [rsp+0x68]
   14000d480:	mov    DWORD PTR [rsp+0xb0],eax
   14000d487:	mov    rcx,QWORD PTR [rsp+0x110]
   14000d48f:	mov    eax,DWORD PTR [rsp+0xb0]
   14000d496:	mov    DWORD PTR [rcx],eax
   14000d498:	lea    rdi,[rsp+0x80]
   14000d4a0:	mov    rsi,QWORD PTR [rsp+0xf0]
   14000d4a8:	mov    ecx,0x10
   14000d4ad:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d4af:	lea    rsi,[rsp+0x80]
   14000d4b7:	mov    rdi,QWORD PTR [rsp+0xe8]
   14000d4bf:	mov    ecx,0x10
   14000d4c4:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d4c6:	mov    rax,QWORD PTR [rsp+0xe8]
   14000d4ce:	mov    rcx,QWORD PTR [rsp+0xb8]
   14000d4d6:	xor    rcx,rsp
   14000d4d9:	call   0x14001c500
   14000d4de:	add    rsp,0xc8
   14000d4e5:	pop    rdi
   14000d4e6:	pop    rsi
   14000d4e7:	ret    
   14000d4e8:	int3   
   14000d4e9:	int3   
   14000d4ea:	int3   
   14000d4eb:	int3   
   14000d4ec:	int3   
   14000d4ed:	int3   
   14000d4ee:	int3   
   14000d4ef:	int3   
   14000d4f0:	mov    QWORD PTR [rsp+0x20],r9
   14000d4f5:	mov    QWORD PTR [rsp+0x18],r8
   14000d4fa:	mov    QWORD PTR [rsp+0x10],rdx
   14000d4ff:	mov    QWORD PTR [rsp+0x8],rcx
   14000d504:	push   rsi
   14000d505:	push   rdi
   14000d506:	sub    rsp,0xa8
   14000d50d:	mov    QWORD PTR [rsp+0x80],0xfffffffffffffffe
   14000d519:	mov    rax,QWORD PTR [rip+0x3bf40]        # 0x140049460
   14000d520:	xor    rax,rsp
   14000d523:	mov    QWORD PTR [rsp+0x98],rax
   14000d52b:	mov    DWORD PTR [rsp+0x64],0x0
   14000d533:	lea    rdx,[rsp+0x68]
   14000d538:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000d540:	call   0x140002ca0
   14000d545:	mov    QWORD PTR [rsp+0x88],rax
   14000d54d:	mov    rax,QWORD PTR [rsp+0x88]
   14000d555:	mov    QWORD PTR [rsp+0x90],rax
   14000d55d:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000d565:	call   0x140002c40
   14000d56a:	mov    edx,eax
   14000d56c:	mov    rax,QWORD PTR [rsp+0x90]
   14000d574:	mov    QWORD PTR [rsp+0x28],rax
   14000d579:	mov    DWORD PTR [rsp+0x20],edx
   14000d57d:	mov    r9,QWORD PTR [rsp+0xd8]
   14000d585:	mov    r8,QWORD PTR [rsp+0xd0]
   14000d58d:	lea    rdx,[rsp+0x38]
   14000d592:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000d59a:	call   0x14000e2a0
   14000d59f:	lea    r9,[rsp+0x64]
   14000d5a4:	mov    r8d,eax
   14000d5a7:	lea    rdx,[rsp+0x58]
   14000d5ac:	lea    rcx,[rsp+0x38]
   14000d5b1:	call   0x14001a628
   14000d5b6:	mov    DWORD PTR [rsp+0x60],eax
   14000d5ba:	lea    rcx,[rsp+0x68]
   14000d5bf:	call   0x140001b80
   14000d5c4:	mov    rdx,QWORD PTR [rsp+0xd8]
   14000d5cc:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000d5d4:	call   0x140010570
   14000d5d9:	movzx  eax,al
   14000d5dc:	test   eax,eax
   14000d5de:	je     0x14000d5f7
   14000d5e0:	mov    rax,QWORD PTR [rsp+0xe8]
   14000d5e8:	mov    ecx,DWORD PTR [rax]
   14000d5ea:	or     ecx,0x1
   14000d5ed:	mov    rax,QWORD PTR [rsp+0xe8]
   14000d5f5:	mov    DWORD PTR [rax],ecx
   14000d5f7:	lea    rax,[rsp+0x38]
   14000d5fc:	cmp    QWORD PTR [rsp+0x58],rax
   14000d601:	je     0x14000d60a
   14000d603:	cmp    DWORD PTR [rsp+0x64],0x0
   14000d608:	je     0x14000d623
   14000d60a:	mov    rax,QWORD PTR [rsp+0xe8]
   14000d612:	mov    ecx,DWORD PTR [rax]
   14000d614:	or     ecx,0x2
   14000d617:	mov    rax,QWORD PTR [rsp+0xe8]
   14000d61f:	mov    DWORD PTR [rax],ecx
   14000d621:	jmp    0x14000d631
   14000d623:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000d62b:	mov    eax,DWORD PTR [rsp+0x60]
   14000d62f:	mov    DWORD PTR [rcx],eax
   14000d631:	lea    rdi,[rsp+0x70]
   14000d636:	mov    rsi,QWORD PTR [rsp+0xd0]
   14000d63e:	mov    ecx,0x10
   14000d643:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d645:	lea    rsi,[rsp+0x70]
   14000d64a:	mov    rdi,QWORD PTR [rsp+0xc8]
   14000d652:	mov    ecx,0x10
   14000d657:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d659:	mov    rax,QWORD PTR [rsp+0xc8]
   14000d661:	mov    rcx,QWORD PTR [rsp+0x98]
   14000d669:	xor    rcx,rsp
   14000d66c:	call   0x14001c500
   14000d671:	add    rsp,0xa8
   14000d678:	pop    rdi
   14000d679:	pop    rsi
   14000d67a:	ret    
   14000d67b:	int3   
   14000d67c:	int3   
   14000d67d:	int3   
   14000d67e:	int3   
   14000d67f:	int3   
   14000d680:	mov    QWORD PTR [rsp+0x20],r9
   14000d685:	mov    QWORD PTR [rsp+0x18],r8
   14000d68a:	mov    QWORD PTR [rsp+0x10],rdx
   14000d68f:	mov    QWORD PTR [rsp+0x8],rcx
   14000d694:	push   rsi
   14000d695:	push   rdi
   14000d696:	sub    rsp,0xa8
   14000d69d:	mov    QWORD PTR [rsp+0x80],0xfffffffffffffffe
   14000d6a9:	mov    rax,QWORD PTR [rip+0x3bdb0]        # 0x140049460
   14000d6b0:	xor    rax,rsp
   14000d6b3:	mov    QWORD PTR [rsp+0x98],rax
   14000d6bb:	mov    DWORD PTR [rsp+0x64],0x0
   14000d6c3:	lea    rdx,[rsp+0x68]
   14000d6c8:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000d6d0:	call   0x140002ca0
   14000d6d5:	mov    QWORD PTR [rsp+0x88],rax
   14000d6dd:	mov    rax,QWORD PTR [rsp+0x88]
   14000d6e5:	mov    QWORD PTR [rsp+0x90],rax
   14000d6ed:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000d6f5:	call   0x140002c40
   14000d6fa:	mov    edx,eax
   14000d6fc:	mov    rax,QWORD PTR [rsp+0x90]
   14000d704:	mov    QWORD PTR [rsp+0x28],rax
   14000d709:	mov    DWORD PTR [rsp+0x20],edx
   14000d70d:	mov    r9,QWORD PTR [rsp+0xd8]
   14000d715:	mov    r8,QWORD PTR [rsp+0xd0]
   14000d71d:	lea    rdx,[rsp+0x38]
   14000d722:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000d72a:	call   0x14000e2a0
   14000d72f:	lea    r9,[rsp+0x64]
   14000d734:	mov    r8d,eax
   14000d737:	lea    rdx,[rsp+0x58]
   14000d73c:	lea    rcx,[rsp+0x38]
   14000d741:	call   0x14001a448
   14000d746:	mov    DWORD PTR [rsp+0x60],eax
   14000d74a:	lea    rcx,[rsp+0x68]
   14000d74f:	call   0x140001b80
   14000d754:	mov    rdx,QWORD PTR [rsp+0xd8]
   14000d75c:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000d764:	call   0x140010570
   14000d769:	movzx  eax,al
   14000d76c:	test   eax,eax
   14000d76e:	je     0x14000d787
   14000d770:	mov    rax,QWORD PTR [rsp+0xe8]
   14000d778:	mov    ecx,DWORD PTR [rax]
   14000d77a:	or     ecx,0x1
   14000d77d:	mov    rax,QWORD PTR [rsp+0xe8]
   14000d785:	mov    DWORD PTR [rax],ecx
   14000d787:	lea    rax,[rsp+0x38]
   14000d78c:	cmp    QWORD PTR [rsp+0x58],rax
   14000d791:	je     0x14000d79a
   14000d793:	cmp    DWORD PTR [rsp+0x64],0x0
   14000d798:	je     0x14000d7b3
   14000d79a:	mov    rax,QWORD PTR [rsp+0xe8]
   14000d7a2:	mov    ecx,DWORD PTR [rax]
   14000d7a4:	or     ecx,0x2
   14000d7a7:	mov    rax,QWORD PTR [rsp+0xe8]
   14000d7af:	mov    DWORD PTR [rax],ecx
   14000d7b1:	jmp    0x14000d7c1
   14000d7b3:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000d7bb:	mov    eax,DWORD PTR [rsp+0x60]
   14000d7bf:	mov    DWORD PTR [rcx],eax
   14000d7c1:	lea    rdi,[rsp+0x70]
   14000d7c6:	mov    rsi,QWORD PTR [rsp+0xd0]
   14000d7ce:	mov    ecx,0x10
   14000d7d3:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d7d5:	lea    rsi,[rsp+0x70]
   14000d7da:	mov    rdi,QWORD PTR [rsp+0xc8]
   14000d7e2:	mov    ecx,0x10
   14000d7e7:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d7e9:	mov    rax,QWORD PTR [rsp+0xc8]
   14000d7f1:	mov    rcx,QWORD PTR [rsp+0x98]
   14000d7f9:	xor    rcx,rsp
   14000d7fc:	call   0x14001c500
   14000d801:	add    rsp,0xa8
   14000d808:	pop    rdi
   14000d809:	pop    rsi
   14000d80a:	ret    
   14000d80b:	int3   
   14000d80c:	int3   
   14000d80d:	int3   
   14000d80e:	int3   
   14000d80f:	int3   
   14000d810:	mov    QWORD PTR [rsp+0x20],r9
   14000d815:	mov    QWORD PTR [rsp+0x18],r8
   14000d81a:	mov    QWORD PTR [rsp+0x10],rdx
   14000d81f:	mov    QWORD PTR [rsp+0x8],rcx
   14000d824:	push   rsi
   14000d825:	push   rdi
   14000d826:	sub    rsp,0xb8
   14000d82d:	mov    QWORD PTR [rsp+0x88],0xfffffffffffffffe
   14000d839:	mov    rax,QWORD PTR [rip+0x3bc20]        # 0x140049460
   14000d840:	xor    rax,rsp
   14000d843:	mov    QWORD PTR [rsp+0xa0],rax
   14000d84b:	mov    DWORD PTR [rsp+0x68],0x0
   14000d853:	lea    rdx,[rsp+0x70]
   14000d858:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000d860:	call   0x140002ca0
   14000d865:	mov    QWORD PTR [rsp+0x90],rax
   14000d86d:	mov    rax,QWORD PTR [rsp+0x90]
   14000d875:	mov    QWORD PTR [rsp+0x98],rax
   14000d87d:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000d885:	call   0x140002c40
   14000d88a:	mov    edx,eax
   14000d88c:	mov    rax,QWORD PTR [rsp+0x98]
   14000d894:	mov    QWORD PTR [rsp+0x28],rax
   14000d899:	mov    DWORD PTR [rsp+0x20],edx
   14000d89d:	mov    r9,QWORD PTR [rsp+0xe8]
   14000d8a5:	mov    r8,QWORD PTR [rsp+0xe0]
   14000d8ad:	lea    rdx,[rsp+0x38]
   14000d8b2:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000d8ba:	call   0x14000e2a0
   14000d8bf:	lea    r9,[rsp+0x68]
   14000d8c4:	mov    r8d,eax
   14000d8c7:	lea    rdx,[rsp+0x58]
   14000d8cc:	lea    rcx,[rsp+0x38]
   14000d8d1:	call   0x14001a708
   14000d8d6:	mov    QWORD PTR [rsp+0x60],rax
   14000d8db:	lea    rcx,[rsp+0x70]
   14000d8e0:	call   0x140001b80
   14000d8e5:	mov    rdx,QWORD PTR [rsp+0xe8]
   14000d8ed:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000d8f5:	call   0x140010570
   14000d8fa:	movzx  eax,al
   14000d8fd:	test   eax,eax
   14000d8ff:	je     0x14000d918
   14000d901:	mov    rax,QWORD PTR [rsp+0xf8]
   14000d909:	mov    ecx,DWORD PTR [rax]
   14000d90b:	or     ecx,0x1
   14000d90e:	mov    rax,QWORD PTR [rsp+0xf8]
   14000d916:	mov    DWORD PTR [rax],ecx
   14000d918:	lea    rax,[rsp+0x38]
   14000d91d:	cmp    QWORD PTR [rsp+0x58],rax
   14000d922:	je     0x14000d92b
   14000d924:	cmp    DWORD PTR [rsp+0x68],0x0
   14000d929:	je     0x14000d944
   14000d92b:	mov    rax,QWORD PTR [rsp+0xf8]
   14000d933:	mov    ecx,DWORD PTR [rax]
   14000d935:	or     ecx,0x2
   14000d938:	mov    rax,QWORD PTR [rsp+0xf8]
   14000d940:	mov    DWORD PTR [rax],ecx
   14000d942:	jmp    0x14000d954
   14000d944:	mov    rcx,QWORD PTR [rsp+0x100]
   14000d94c:	mov    rax,QWORD PTR [rsp+0x60]
   14000d951:	mov    QWORD PTR [rcx],rax
   14000d954:	lea    rdi,[rsp+0x78]
   14000d959:	mov    rsi,QWORD PTR [rsp+0xe0]
   14000d961:	mov    ecx,0x10
   14000d966:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d968:	lea    rsi,[rsp+0x78]
   14000d96d:	mov    rdi,QWORD PTR [rsp+0xd8]
   14000d975:	mov    ecx,0x10
   14000d97a:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d97c:	mov    rax,QWORD PTR [rsp+0xd8]
   14000d984:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000d98c:	xor    rcx,rsp
   14000d98f:	call   0x14001c500
   14000d994:	add    rsp,0xb8
   14000d99b:	pop    rdi
   14000d99c:	pop    rsi
   14000d99d:	ret    
   14000d99e:	int3   
   14000d99f:	int3   
   14000d9a0:	mov    QWORD PTR [rsp+0x20],r9
   14000d9a5:	mov    QWORD PTR [rsp+0x18],r8
   14000d9aa:	mov    QWORD PTR [rsp+0x10],rdx
   14000d9af:	mov    QWORD PTR [rsp+0x8],rcx
   14000d9b4:	push   rsi
   14000d9b5:	push   rdi
   14000d9b6:	sub    rsp,0xb8
   14000d9bd:	mov    QWORD PTR [rsp+0x88],0xfffffffffffffffe
   14000d9c9:	mov    rax,QWORD PTR [rip+0x3ba90]        # 0x140049460
   14000d9d0:	xor    rax,rsp
   14000d9d3:	mov    QWORD PTR [rsp+0xa0],rax
   14000d9db:	mov    DWORD PTR [rsp+0x68],0x0
   14000d9e3:	lea    rdx,[rsp+0x70]
   14000d9e8:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000d9f0:	call   0x140002ca0
   14000d9f5:	mov    QWORD PTR [rsp+0x90],rax
   14000d9fd:	mov    rax,QWORD PTR [rsp+0x90]
   14000da05:	mov    QWORD PTR [rsp+0x98],rax
   14000da0d:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000da15:	call   0x140002c40
   14000da1a:	mov    edx,eax
   14000da1c:	mov    rax,QWORD PTR [rsp+0x98]
   14000da24:	mov    QWORD PTR [rsp+0x28],rax
   14000da29:	mov    DWORD PTR [rsp+0x20],edx
   14000da2d:	mov    r9,QWORD PTR [rsp+0xe8]
   14000da35:	mov    r8,QWORD PTR [rsp+0xe0]
   14000da3d:	lea    rdx,[rsp+0x38]
   14000da42:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000da4a:	call   0x14000e2a0
   14000da4f:	lea    r9,[rsp+0x68]
   14000da54:	mov    r8d,eax
   14000da57:	lea    rdx,[rsp+0x58]
   14000da5c:	lea    rcx,[rsp+0x38]
   14000da61:	call   0x14001a7fc
   14000da66:	mov    QWORD PTR [rsp+0x60],rax
   14000da6b:	lea    rcx,[rsp+0x70]
   14000da70:	call   0x140001b80
   14000da75:	mov    rdx,QWORD PTR [rsp+0xe8]
   14000da7d:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000da85:	call   0x140010570
   14000da8a:	movzx  eax,al
   14000da8d:	test   eax,eax
   14000da8f:	je     0x14000daa8
   14000da91:	mov    rax,QWORD PTR [rsp+0xf8]
   14000da99:	mov    ecx,DWORD PTR [rax]
   14000da9b:	or     ecx,0x1
   14000da9e:	mov    rax,QWORD PTR [rsp+0xf8]
   14000daa6:	mov    DWORD PTR [rax],ecx
   14000daa8:	lea    rax,[rsp+0x38]
   14000daad:	cmp    QWORD PTR [rsp+0x58],rax
   14000dab2:	je     0x14000dabb
   14000dab4:	cmp    DWORD PTR [rsp+0x68],0x0
   14000dab9:	je     0x14000dad4
   14000dabb:	mov    rax,QWORD PTR [rsp+0xf8]
   14000dac3:	mov    ecx,DWORD PTR [rax]
   14000dac5:	or     ecx,0x2
   14000dac8:	mov    rax,QWORD PTR [rsp+0xf8]
   14000dad0:	mov    DWORD PTR [rax],ecx
   14000dad2:	jmp    0x14000dae4
   14000dad4:	mov    rcx,QWORD PTR [rsp+0x100]
   14000dadc:	mov    rax,QWORD PTR [rsp+0x60]
   14000dae1:	mov    QWORD PTR [rcx],rax
   14000dae4:	lea    rdi,[rsp+0x78]
   14000dae9:	mov    rsi,QWORD PTR [rsp+0xe0]
   14000daf1:	mov    ecx,0x10
   14000daf6:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000daf8:	lea    rsi,[rsp+0x78]
   14000dafd:	mov    rdi,QWORD PTR [rsp+0xd8]
   14000db05:	mov    ecx,0x10
   14000db0a:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000db0c:	mov    rax,QWORD PTR [rsp+0xd8]
   14000db14:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000db1c:	xor    rcx,rsp
   14000db1f:	call   0x14001c500
   14000db24:	add    rsp,0xb8
   14000db2b:	pop    rdi
   14000db2c:	pop    rsi
   14000db2d:	ret    
   14000db2e:	int3   
   14000db2f:	int3   
   14000db30:	mov    QWORD PTR [rsp+0x20],r9
   14000db35:	mov    QWORD PTR [rsp+0x18],r8
   14000db3a:	mov    QWORD PTR [rsp+0x10],rdx
   14000db3f:	mov    QWORD PTR [rsp+0x8],rcx
   14000db44:	push   rsi
   14000db45:	push   rdi
   14000db46:	sub    rsp,0xc8
   14000db4d:	mov    QWORD PTR [rsp+0xa0],0xfffffffffffffffe
   14000db59:	mov    rax,QWORD PTR [rip+0x3b900]        # 0x140049460
   14000db60:	xor    rax,rsp
   14000db63:	mov    QWORD PTR [rsp+0xb8],rax
   14000db6b:	mov    DWORD PTR [rsp+0x84],0x0
   14000db76:	lea    rdx,[rsp+0x88]
   14000db7e:	mov    rcx,QWORD PTR [rsp+0x100]
   14000db86:	call   0x140002ca0
   14000db8b:	mov    QWORD PTR [rsp+0xa8],rax
   14000db93:	mov    rax,QWORD PTR [rsp+0xa8]
   14000db9b:	mov    QWORD PTR [rsp+0xb0],rax
   14000dba3:	mov    rax,QWORD PTR [rsp+0xb0]
   14000dbab:	mov    QWORD PTR [rsp+0x20],rax
   14000dbb0:	mov    r9,QWORD PTR [rsp+0xf8]
   14000dbb8:	mov    r8,QWORD PTR [rsp+0xf0]
   14000dbc0:	lea    rdx,[rsp+0x38]
   14000dbc5:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000dbcd:	call   0x14000e980
   14000dbd2:	lea    r9,[rsp+0x84]
   14000dbda:	mov    r8d,eax
   14000dbdd:	lea    rdx,[rsp+0x78]
   14000dbe2:	lea    rcx,[rsp+0x38]
   14000dbe7:	call   0x14001a9e8
   14000dbec:	movss  DWORD PTR [rsp+0x80],xmm0
   14000dbf5:	lea    rcx,[rsp+0x88]
   14000dbfd:	call   0x140001b80
   14000dc02:	mov    rdx,QWORD PTR [rsp+0xf8]
   14000dc0a:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000dc12:	call   0x140010570
   14000dc17:	movzx  eax,al
   14000dc1a:	test   eax,eax
   14000dc1c:	je     0x14000dc35
   14000dc1e:	mov    rax,QWORD PTR [rsp+0x108]
   14000dc26:	mov    ecx,DWORD PTR [rax]
   14000dc28:	or     ecx,0x1
   14000dc2b:	mov    rax,QWORD PTR [rsp+0x108]
   14000dc33:	mov    DWORD PTR [rax],ecx
   14000dc35:	lea    rax,[rsp+0x38]
   14000dc3a:	cmp    QWORD PTR [rsp+0x78],rax
   14000dc3f:	je     0x14000dc4b
   14000dc41:	cmp    DWORD PTR [rsp+0x84],0x0
   14000dc49:	je     0x14000dc64
   14000dc4b:	mov    rax,QWORD PTR [rsp+0x108]
   14000dc53:	mov    ecx,DWORD PTR [rax]
   14000dc55:	or     ecx,0x2
   14000dc58:	mov    rax,QWORD PTR [rsp+0x108]
   14000dc60:	mov    DWORD PTR [rax],ecx
   14000dc62:	jmp    0x14000dc79
   14000dc64:	mov    rax,QWORD PTR [rsp+0x110]
   14000dc6c:	movss  xmm0,DWORD PTR [rsp+0x80]
   14000dc75:	movss  DWORD PTR [rax],xmm0
   14000dc79:	lea    rdi,[rsp+0x90]
   14000dc81:	mov    rsi,QWORD PTR [rsp+0xf0]
   14000dc89:	mov    ecx,0x10
   14000dc8e:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dc90:	lea    rsi,[rsp+0x90]
   14000dc98:	mov    rdi,QWORD PTR [rsp+0xe8]
   14000dca0:	mov    ecx,0x10
   14000dca5:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dca7:	mov    rax,QWORD PTR [rsp+0xe8]
   14000dcaf:	mov    rcx,QWORD PTR [rsp+0xb8]
   14000dcb7:	xor    rcx,rsp
   14000dcba:	call   0x14001c500
   14000dcbf:	add    rsp,0xc8
   14000dcc6:	pop    rdi
   14000dcc7:	pop    rsi
   14000dcc8:	ret    
   14000dcc9:	int3   
   14000dcca:	int3   
   14000dccb:	int3   
   14000dccc:	int3   
   14000dccd:	int3   
   14000dcce:	int3   
   14000dccf:	int3   
   14000dcd0:	mov    QWORD PTR [rsp+0x20],r9
   14000dcd5:	mov    QWORD PTR [rsp+0x18],r8
   14000dcda:	mov    QWORD PTR [rsp+0x10],rdx
   14000dcdf:	mov    QWORD PTR [rsp+0x8],rcx
   14000dce4:	push   rsi
   14000dce5:	push   rdi
   14000dce6:	sub    rsp,0xd8
   14000dced:	mov    QWORD PTR [rsp+0xa8],0xfffffffffffffffe
   14000dcf9:	mov    rax,QWORD PTR [rip+0x3b760]        # 0x140049460
   14000dd00:	xor    rax,rsp
   14000dd03:	mov    QWORD PTR [rsp+0xc0],rax
   14000dd0b:	mov    DWORD PTR [rsp+0x88],0x0
   14000dd16:	lea    rdx,[rsp+0x90]
   14000dd1e:	mov    rcx,QWORD PTR [rsp+0x110]
   14000dd26:	call   0x140002ca0
   14000dd2b:	mov    QWORD PTR [rsp+0xb0],rax
   14000dd33:	mov    rax,QWORD PTR [rsp+0xb0]
   14000dd3b:	mov    QWORD PTR [rsp+0xb8],rax
   14000dd43:	mov    rax,QWORD PTR [rsp+0xb8]
   14000dd4b:	mov    QWORD PTR [rsp+0x20],rax
   14000dd50:	mov    r9,QWORD PTR [rsp+0x108]
   14000dd58:	mov    r8,QWORD PTR [rsp+0x100]
   14000dd60:	lea    rdx,[rsp+0x38]
   14000dd65:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000dd6d:	call   0x14000e980
   14000dd72:	lea    r9,[rsp+0x88]
   14000dd7a:	mov    r8d,eax
   14000dd7d:	lea    rdx,[rsp+0x78]
   14000dd82:	lea    rcx,[rsp+0x38]
   14000dd87:	call   0x14001a9fc
   14000dd8c:	movsd  QWORD PTR [rsp+0x80],xmm0
   14000dd95:	lea    rcx,[rsp+0x90]
   14000dd9d:	call   0x140001b80
   14000dda2:	mov    rdx,QWORD PTR [rsp+0x108]
   14000ddaa:	mov    rcx,QWORD PTR [rsp+0x100]
   14000ddb2:	call   0x140010570
   14000ddb7:	movzx  eax,al
   14000ddba:	test   eax,eax
   14000ddbc:	je     0x14000ddd5
   14000ddbe:	mov    rax,QWORD PTR [rsp+0x118]
   14000ddc6:	mov    ecx,DWORD PTR [rax]
   14000ddc8:	or     ecx,0x1
   14000ddcb:	mov    rax,QWORD PTR [rsp+0x118]
   14000ddd3:	mov    DWORD PTR [rax],ecx
   14000ddd5:	lea    rax,[rsp+0x38]
   14000ddda:	cmp    QWORD PTR [rsp+0x78],rax
   14000dddf:	je     0x14000ddeb
   14000dde1:	cmp    DWORD PTR [rsp+0x88],0x0
   14000dde9:	je     0x14000de04
   14000ddeb:	mov    rax,QWORD PTR [rsp+0x118]
   14000ddf3:	mov    ecx,DWORD PTR [rax]
   14000ddf5:	or     ecx,0x2
   14000ddf8:	mov    rax,QWORD PTR [rsp+0x118]
   14000de00:	mov    DWORD PTR [rax],ecx
   14000de02:	jmp    0x14000de19
   14000de04:	mov    rax,QWORD PTR [rsp+0x120]
   14000de0c:	movsd  xmm0,QWORD PTR [rsp+0x80]
   14000de15:	movsd  QWORD PTR [rax],xmm0
   14000de19:	lea    rdi,[rsp+0x98]
   14000de21:	mov    rsi,QWORD PTR [rsp+0x100]
   14000de29:	mov    ecx,0x10
   14000de2e:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000de30:	lea    rsi,[rsp+0x98]
   14000de38:	mov    rdi,QWORD PTR [rsp+0xf8]
   14000de40:	mov    ecx,0x10
   14000de45:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000de47:	mov    rax,QWORD PTR [rsp+0xf8]
   14000de4f:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000de57:	xor    rcx,rsp
   14000de5a:	call   0x14001c500
   14000de5f:	add    rsp,0xd8
   14000de66:	pop    rdi
   14000de67:	pop    rsi
   14000de68:	ret    
   14000de69:	int3   
   14000de6a:	int3   
   14000de6b:	int3   
   14000de6c:	int3   
   14000de6d:	int3   
   14000de6e:	int3   
   14000de6f:	int3   
   14000de70:	mov    QWORD PTR [rsp+0x20],r9
   14000de75:	mov    QWORD PTR [rsp+0x18],r8
   14000de7a:	mov    QWORD PTR [rsp+0x10],rdx
   14000de7f:	mov    QWORD PTR [rsp+0x8],rcx
   14000de84:	push   rsi
   14000de85:	push   rdi
   14000de86:	sub    rsp,0xd8
   14000de8d:	mov    QWORD PTR [rsp+0xa8],0xfffffffffffffffe
   14000de99:	mov    rax,QWORD PTR [rip+0x3b5c0]        # 0x140049460
   14000dea0:	xor    rax,rsp
   14000dea3:	mov    QWORD PTR [rsp+0xc0],rax
   14000deab:	mov    DWORD PTR [rsp+0x88],0x0
   14000deb6:	lea    rdx,[rsp+0x90]
   14000debe:	mov    rcx,QWORD PTR [rsp+0x110]
   14000dec6:	call   0x140002ca0
   14000decb:	mov    QWORD PTR [rsp+0xb0],rax
   14000ded3:	mov    rax,QWORD PTR [rsp+0xb0]
   14000dedb:	mov    QWORD PTR [rsp+0xb8],rax
   14000dee3:	mov    rax,QWORD PTR [rsp+0xb8]
   14000deeb:	mov    QWORD PTR [rsp+0x20],rax
   14000def0:	mov    r9,QWORD PTR [rsp+0x108]
   14000def8:	mov    r8,QWORD PTR [rsp+0x100]
   14000df00:	lea    rdx,[rsp+0x38]
   14000df05:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000df0d:	call   0x14000e980
   14000df12:	lea    r9,[rsp+0x88]
   14000df1a:	mov    r8d,eax
   14000df1d:	lea    rdx,[rsp+0x78]
   14000df22:	lea    rcx,[rsp+0x38]
   14000df27:	call   0x14001aaa0
   14000df2c:	movsd  QWORD PTR [rsp+0x80],xmm0
   14000df35:	lea    rcx,[rsp+0x90]
   14000df3d:	call   0x140001b80
   14000df42:	mov    rdx,QWORD PTR [rsp+0x108]
   14000df4a:	mov    rcx,QWORD PTR [rsp+0x100]
   14000df52:	call   0x140010570
   14000df57:	movzx  eax,al
   14000df5a:	test   eax,eax
   14000df5c:	je     0x14000df75
   14000df5e:	mov    rax,QWORD PTR [rsp+0x118]
   14000df66:	mov    ecx,DWORD PTR [rax]
   14000df68:	or     ecx,0x1
   14000df6b:	mov    rax,QWORD PTR [rsp+0x118]
   14000df73:	mov    DWORD PTR [rax],ecx
   14000df75:	lea    rax,[rsp+0x38]
   14000df7a:	cmp    QWORD PTR [rsp+0x78],rax
   14000df7f:	je     0x14000df8b
   14000df81:	cmp    DWORD PTR [rsp+0x88],0x0
   14000df89:	je     0x14000dfa4
   14000df8b:	mov    rax,QWORD PTR [rsp+0x118]
   14000df93:	mov    ecx,DWORD PTR [rax]
   14000df95:	or     ecx,0x2
   14000df98:	mov    rax,QWORD PTR [rsp+0x118]
   14000dfa0:	mov    DWORD PTR [rax],ecx
   14000dfa2:	jmp    0x14000dfb9
   14000dfa4:	mov    rax,QWORD PTR [rsp+0x120]
   14000dfac:	movsd  xmm0,QWORD PTR [rsp+0x80]
   14000dfb5:	movsd  QWORD PTR [rax],xmm0
   14000dfb9:	lea    rdi,[rsp+0x98]
   14000dfc1:	mov    rsi,QWORD PTR [rsp+0x100]
   14000dfc9:	mov    ecx,0x10
   14000dfce:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dfd0:	lea    rsi,[rsp+0x98]
   14000dfd8:	mov    rdi,QWORD PTR [rsp+0xf8]
   14000dfe0:	mov    ecx,0x10
   14000dfe5:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dfe7:	mov    rax,QWORD PTR [rsp+0xf8]
   14000dfef:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000dff7:	xor    rcx,rsp
   14000dffa:	call   0x14001c500
   14000dfff:	add    rsp,0xd8
   14000e006:	pop    rdi
   14000e007:	pop    rsi
   14000e008:	ret    
   14000e009:	int3   
   14000e00a:	int3   
   14000e00b:	int3   
   14000e00c:	int3   
   14000e00d:	int3   
   14000e00e:	int3   
   14000e00f:	int3   
   14000e010:	mov    QWORD PTR [rsp+0x20],r9
   14000e015:	mov    QWORD PTR [rsp+0x18],r8
   14000e01a:	mov    QWORD PTR [rsp+0x10],rdx
   14000e01f:	mov    QWORD PTR [rsp+0x8],rcx
   14000e024:	push   rsi
   14000e025:	push   rdi
   14000e026:	sub    rsp,0xb8
   14000e02d:	mov    QWORD PTR [rsp+0x88],0xfffffffffffffffe
   14000e039:	mov    rax,QWORD PTR [rip+0x3b420]        # 0x140049460
   14000e040:	xor    rax,rsp
   14000e043:	mov    QWORD PTR [rsp+0xa8],rax
   14000e04b:	mov    DWORD PTR [rsp+0x68],0x0
   14000e053:	lea    rdx,[rsp+0x70]
   14000e058:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000e060:	call   0x140002ca0
   14000e065:	mov    QWORD PTR [rsp+0x90],rax
   14000e06d:	mov    rax,QWORD PTR [rsp+0x90]
   14000e075:	mov    QWORD PTR [rsp+0x98],rax
   14000e07d:	mov    rax,QWORD PTR [rsp+0x98]
   14000e085:	mov    QWORD PTR [rsp+0x28],rax
   14000e08a:	mov    DWORD PTR [rsp+0x20],0x800
   14000e092:	mov    r9,QWORD PTR [rsp+0xe8]
   14000e09a:	mov    r8,QWORD PTR [rsp+0xe0]
   14000e0a2:	lea    rdx,[rsp+0x38]
   14000e0a7:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000e0af:	call   0x14000e2a0
   14000e0b4:	mov    DWORD PTR [rsp+0x6c],eax
   14000e0b8:	lea    rcx,[rsp+0x70]
   14000e0bd:	call   0x140001b80
   14000e0c2:	xor    eax,eax
   14000e0c4:	test   eax,eax
   14000e0c6:	je     0x14000e0ed
   14000e0c8:	lea    r9,[rsp+0x68]
   14000e0cd:	mov    r8d,DWORD PTR [rsp+0x6c]
   14000e0d2:	lea    rdx,[rsp+0x58]
   14000e0d7:	lea    rcx,[rsp+0x38]
   14000e0dc:	call   0x14001a448
   14000e0e1:	mov    eax,eax
   14000e0e3:	mov    QWORD PTR [rsp+0xa0],rax
   14000e0eb:	jmp    0x14000e10e
   14000e0ed:	lea    r9,[rsp+0x68]
   14000e0f2:	mov    r8d,DWORD PTR [rsp+0x6c]
   14000e0f7:	lea    rdx,[rsp+0x58]
   14000e0fc:	lea    rcx,[rsp+0x38]
   14000e101:	call   0x14001a7fc
   14000e106:	mov    QWORD PTR [rsp+0xa0],rax
   14000e10e:	mov    rax,QWORD PTR [rsp+0xa0]
   14000e116:	mov    QWORD PTR [rsp+0x60],rax
   14000e11b:	mov    rdx,QWORD PTR [rsp+0xe8]
   14000e123:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000e12b:	call   0x140010570
   14000e130:	movzx  eax,al
   14000e133:	test   eax,eax
   14000e135:	je     0x14000e14e
   14000e137:	mov    rax,QWORD PTR [rsp+0xf8]
   14000e13f:	mov    ecx,DWORD PTR [rax]
   14000e141:	or     ecx,0x1
   14000e144:	mov    rax,QWORD PTR [rsp+0xf8]
   14000e14c:	mov    DWORD PTR [rax],ecx
   14000e14e:	lea    rax,[rsp+0x38]
   14000e153:	cmp    QWORD PTR [rsp+0x58],rax
   14000e158:	je     0x14000e161
   14000e15a:	cmp    DWORD PTR [rsp+0x68],0x0
   14000e15f:	je     0x14000e17a
   14000e161:	mov    rax,QWORD PTR [rsp+0xf8]
   14000e169:	mov    ecx,DWORD PTR [rax]
   14000e16b:	or     ecx,0x2
   14000e16e:	mov    rax,QWORD PTR [rsp+0xf8]
   14000e176:	mov    DWORD PTR [rax],ecx
   14000e178:	jmp    0x14000e18a
   14000e17a:	mov    rcx,QWORD PTR [rsp+0x100]
   14000e182:	mov    rax,QWORD PTR [rsp+0x60]
   14000e187:	mov    QWORD PTR [rcx],rax
   14000e18a:	lea    rdi,[rsp+0x78]
   14000e18f:	mov    rsi,QWORD PTR [rsp+0xe0]
   14000e197:	mov    ecx,0x10
   14000e19c:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e19e:	lea    rsi,[rsp+0x78]
   14000e1a3:	mov    rdi,QWORD PTR [rsp+0xd8]
   14000e1ab:	mov    ecx,0x10
   14000e1b0:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e1b2:	mov    rax,QWORD PTR [rsp+0xd8]
   14000e1ba:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000e1c2:	xor    rcx,rsp
   14000e1c5:	call   0x14001c500
   14000e1ca:	add    rsp,0xb8
   14000e1d1:	pop    rdi
   14000e1d2:	pop    rsi
   14000e1d3:	ret    
   14000e1d4:	int3   
   14000e1d5:	int3   
   14000e1d6:	int3   
   14000e1d7:	int3   
   14000e1d8:	int3   
   14000e1d9:	int3   
   14000e1da:	int3   
   14000e1db:	int3   
   14000e1dc:	int3   
   14000e1dd:	int3   
   14000e1de:	int3   
   14000e1df:	int3   
   14000e1e0:	mov    QWORD PTR [rsp+0x10],rdx
   14000e1e5:	mov    QWORD PTR [rsp+0x8],rcx
   14000e1ea:	sub    rsp,0x18
   14000e1ee:	mov    rcx,QWORD PTR [rsp+0x20]
   14000e1f3:	mov    rax,QWORD PTR [rsp+0x28]
   14000e1f8:	mov    QWORD PTR [rcx],rax
   14000e1fb:	cmp    QWORD PTR [rsp+0x28],0x0
   14000e201:	jne    0x14000e20c
   14000e203:	mov    DWORD PTR [rsp],0x1
   14000e20a:	jmp    0x14000e213
   14000e20c:	mov    DWORD PTR [rsp],0x0
   14000e213:	mov    rcx,QWORD PTR [rsp+0x20]
   14000e218:	movzx  eax,BYTE PTR [rsp]
   14000e21c:	mov    BYTE PTR [rcx+0x8],al
   14000e21f:	mov    rax,QWORD PTR [rsp+0x20]
   14000e224:	add    rsp,0x18
   14000e228:	ret    
   14000e229:	int3   
   14000e22a:	int3   
   14000e22b:	int3   
   14000e22c:	int3   
   14000e22d:	int3   
   14000e22e:	int3   
   14000e22f:	int3   
   14000e230:	mov    DWORD PTR [rsp+0x10],edx
   14000e234:	mov    QWORD PTR [rsp+0x8],rcx
   14000e239:	sub    rsp,0x28
   14000e23d:	mov    rcx,QWORD PTR [rsp+0x30]
   14000e242:	call   0x14000ccd0
   14000e247:	mov    eax,DWORD PTR [rsp+0x38]
   14000e24b:	and    eax,0x1
   14000e24e:	test   eax,eax
   14000e250:	je     0x14000e25c
   14000e252:	mov    rcx,QWORD PTR [rsp+0x30]
   14000e257:	call   0x14001c4dc
   14000e25c:	mov    rax,QWORD PTR [rsp+0x30]
   14000e261:	add    rsp,0x28
   14000e265:	ret    
   14000e266:	int3   
   14000e267:	int3   
   14000e268:	int3   
   14000e269:	int3   
   14000e26a:	int3   
   14000e26b:	int3   
   14000e26c:	int3   
   14000e26d:	int3   
   14000e26e:	int3   
   14000e26f:	int3   
   14000e270:	mov    WORD PTR [rsp+0x10],dx
   14000e275:	mov    QWORD PTR [rsp+0x8],rcx
   14000e27a:	sub    rsp,0x28
   14000e27e:	movzx  r8d,WORD PTR [rsp+0x38]
   14000e284:	mov    edx,0x1
   14000e289:	mov    rcx,QWORD PTR [rsp+0x30]
   14000e28e:	call   0x140008190
   14000e293:	add    rsp,0x28
   14000e297:	ret    
   14000e298:	int3   
   14000e299:	int3   
   14000e29a:	int3   
   14000e29b:	int3   
   14000e29c:	int3   
   14000e29d:	int3   
   14000e29e:	int3   
   14000e29f:	int3   
   14000e2a0:	mov    QWORD PTR [rsp+0x20],r9
   14000e2a5:	mov    QWORD PTR [rsp+0x18],r8
   14000e2aa:	mov    QWORD PTR [rsp+0x10],rdx
   14000e2af:	mov    QWORD PTR [rsp+0x8],rcx
   14000e2b4:	push   rbx
   14000e2b5:	sub    rsp,0x100
   14000e2bc:	mov    QWORD PTR [rsp+0xc8],0xfffffffffffffffe
   14000e2c8:	mov    rax,QWORD PTR [rip+0x3b191]        # 0x140049460
   14000e2cf:	xor    rax,rsp
   14000e2d2:	mov    QWORD PTR [rsp+0xf0],rax
   14000e2da:	mov    rcx,QWORD PTR [rsp+0x138]
   14000e2e2:	call   0x140010130
   14000e2e7:	mov    QWORD PTR [rsp+0x28],rax
   14000e2ec:	lea    rdx,[rsp+0x80]
   14000e2f4:	mov    rcx,QWORD PTR [rsp+0x28]
   14000e2f9:	call   0x14000f760
   14000e2fe:	nop
   14000e2ff:	lea    rcx,[rsp+0x80]
   14000e307:	call   0x140003bb0
   14000e30c:	test   rax,rax
   14000e30f:	jne    0x14000e31d
   14000e311:	xor    eax,eax
   14000e313:	mov    WORD PTR [rsp+0xd0],ax
   14000e31b:	jmp    0x14000e32f
   14000e31d:	mov    rcx,QWORD PTR [rsp+0x28]
   14000e322:	call   0x14000f740
   14000e327:	mov    WORD PTR [rsp+0xd0],ax
   14000e32f:	movzx  eax,WORD PTR [rsp+0xd0]
   14000e337:	mov    WORD PTR [rsp+0x40],ax
   14000e33c:	mov    r8,QWORD PTR [rsp+0x110]
   14000e344:	add    r8,0x10
   14000e348:	xor    edx,edx
   14000e34a:	mov    cl,0x30
   14000e34c:	call   0x140001d80
   14000e351:	mov    WORD PTR [rsp+0x38],ax
   14000e356:	mov    rax,QWORD PTR [rsp+0x118]
   14000e35e:	mov    QWORD PTR [rsp+0x30],rax
   14000e363:	mov    rdx,QWORD PTR [rsp+0x128]
   14000e36b:	mov    rcx,QWORD PTR [rsp+0x120]
   14000e373:	call   0x140010570
   14000e378:	movzx  eax,al
   14000e37b:	test   eax,eax
   14000e37d:	je     0x14000e384
   14000e37f:	jmp    0x14000e424
   14000e384:	mov    rcx,QWORD PTR [rsp+0x120]
   14000e38c:	call   0x14000f6d0
   14000e391:	movzx  ebx,ax
   14000e394:	mov    r8,QWORD PTR [rsp+0x110]
   14000e39c:	add    r8,0x10
   14000e3a0:	xor    edx,edx
   14000e3a2:	mov    cl,0x2b
   14000e3a4:	call   0x140001d80
   14000e3a9:	movzx  eax,ax
   14000e3ac:	cmp    ebx,eax
   14000e3ae:	jne    0x14000e3d5
   14000e3b0:	mov    rax,QWORD PTR [rsp+0x30]
   14000e3b5:	mov    BYTE PTR [rax],0x2b
   14000e3b8:	mov    rax,QWORD PTR [rsp+0x30]
   14000e3bd:	add    rax,0x1
   14000e3c1:	mov    QWORD PTR [rsp+0x30],rax
   14000e3c6:	mov    rcx,QWORD PTR [rsp+0x120]
   14000e3ce:	call   0x14000f700
   14000e3d3:	jmp    0x14000e424
   14000e3d5:	mov    rcx,QWORD PTR [rsp+0x120]
   14000e3dd:	call   0x14000f6d0
   14000e3e2:	movzx  ebx,ax
   14000e3e5:	mov    r8,QWORD PTR [rsp+0x110]
   14000e3ed:	add    r8,0x10
   14000e3f1:	xor    edx,edx
   14000e3f3:	mov    cl,0x2d
   14000e3f5:	call   0x140001d80
   14000e3fa:	movzx  eax,ax
   14000e3fd:	cmp    ebx,eax
   14000e3ff:	jne    0x14000e424
   14000e401:	mov    rax,QWORD PTR [rsp+0x30]
   14000e406:	mov    BYTE PTR [rax],0x2d
   14000e409:	mov    rax,QWORD PTR [rsp+0x30]
   14000e40e:	add    rax,0x1
   14000e412:	mov    QWORD PTR [rsp+0x30],rax
   14000e417:	mov    rcx,QWORD PTR [rsp+0x120]
   14000e41f:	call   0x14000f700
   14000e424:	mov    eax,DWORD PTR [rsp+0x130]
   14000e42b:	and    eax,0xe00
   14000e430:	mov    DWORD PTR [rsp+0x130],eax
   14000e437:	cmp    DWORD PTR [rsp+0x130],0x400
   14000e442:	jne    0x14000e451
   14000e444:	mov    DWORD PTR [rsp+0xd4],0x8
   14000e44f:	jmp    0x14000e4a9
   14000e451:	cmp    DWORD PTR [rsp+0x130],0x800
   14000e45c:	jne    0x14000e46b
   14000e45e:	mov    DWORD PTR [rsp+0xd8],0x10
   14000e469:	jmp    0x14000e49b
   14000e46b:	cmp    DWORD PTR [rsp+0x130],0x0
   14000e473:	jne    0x14000e482
   14000e475:	mov    DWORD PTR [rsp+0xdc],0x0
   14000e480:	jmp    0x14000e48d
   14000e482:	mov    DWORD PTR [rsp+0xdc],0xa
   14000e48d:	mov    eax,DWORD PTR [rsp+0xdc]
   14000e494:	mov    DWORD PTR [rsp+0xd8],eax
   14000e49b:	mov    eax,DWORD PTR [rsp+0xd8]
   14000e4a2:	mov    DWORD PTR [rsp+0xd4],eax
   14000e4a9:	mov    eax,DWORD PTR [rsp+0xd4]
   14000e4b0:	mov    DWORD PTR [rsp+0xac],eax
   14000e4b7:	mov    BYTE PTR [rsp+0xa8],0x0
   14000e4bf:	mov    BYTE PTR [rsp+0x3c],0x0
   14000e4c4:	mov    rdx,QWORD PTR [rsp+0x128]
   14000e4cc:	mov    rcx,QWORD PTR [rsp+0x120]
   14000e4d4:	call   0x1400105a0
   14000e4d9:	movzx  eax,al
   14000e4dc:	test   eax,eax
   14000e4de:	je     0x14000e5d9
   14000e4e4:	mov    rcx,QWORD PTR [rsp+0x120]
   14000e4ec:	call   0x14000f6d0
   14000e4f1:	movzx  ecx,ax
   14000e4f4:	movzx  eax,WORD PTR [rsp+0x38]
   14000e4f9:	cmp    ecx,eax
   14000e4fb:	jne    0x14000e5d9
   14000e501:	mov    BYTE PTR [rsp+0xa8],0x1
   14000e509:	mov    rcx,QWORD PTR [rsp+0x120]
   14000e511:	call   0x14000f700
   14000e516:	mov    rdx,QWORD PTR [rsp+0x128]
   14000e51e:	mov    rcx,QWORD PTR [rsp+0x120]
   14000e526:	call   0x1400105a0
   14000e52b:	movzx  eax,al
   14000e52e:	test   eax,eax
   14000e530:	je     0x14000e5c4
   14000e536:	mov    rcx,QWORD PTR [rsp+0x120]
   14000e53e:	call   0x14000f6d0
   14000e543:	movzx  ebx,ax
   14000e546:	mov    r8,QWORD PTR [rsp+0x110]
   14000e54e:	add    r8,0x10
   14000e552:	xor    edx,edx
   14000e554:	mov    cl,0x78
   14000e556:	call   0x140001d80
   14000e55b:	movzx  eax,ax
   14000e55e:	cmp    ebx,eax
   14000e560:	je     0x14000e58e
   14000e562:	mov    rcx,QWORD PTR [rsp+0x120]
   14000e56a:	call   0x14000f6d0
   14000e56f:	movzx  ebx,ax
   14000e572:	mov    r8,QWORD PTR [rsp+0x110]
   14000e57a:	add    r8,0x10
   14000e57e:	xor    edx,edx
   14000e580:	mov    cl,0x58
   14000e582:	call   0x140001d80
   14000e587:	movzx  eax,ax
   14000e58a:	cmp    ebx,eax
   14000e58c:	jne    0x14000e5c4
   14000e58e:	cmp    DWORD PTR [rsp+0xac],0x0
   14000e596:	je     0x14000e5a2
   14000e598:	cmp    DWORD PTR [rsp+0xac],0x10
   14000e5a0:	jne    0x14000e5c4
   14000e5a2:	mov    DWORD PTR [rsp+0xac],0x10
   14000e5ad:	mov    BYTE PTR [rsp+0xa8],0x0
   14000e5b5:	mov    rcx,QWORD PTR [rsp+0x120]
   14000e5bd:	call   0x14000f700
   14000e5c2:	jmp    0x14000e5d9
   14000e5c4:	cmp    DWORD PTR [rsp+0xac],0x0
   14000e5cc:	jne    0x14000e5d9
   14000e5ce:	mov    DWORD PTR [rsp+0xac],0x8
   14000e5d9:	cmp    DWORD PTR [rsp+0xac],0x0
   14000e5e1:	je     0x14000e61f
   14000e5e3:	cmp    DWORD PTR [rsp+0xac],0xa
   14000e5eb:	je     0x14000e61f
   14000e5ed:	cmp    DWORD PTR [rsp+0xac],0x8
   14000e5f5:	jne    0x14000e604
   14000e5f7:	mov    DWORD PTR [rsp+0xe0],0x8
   14000e602:	jmp    0x14000e60f
   14000e604:	mov    DWORD PTR [rsp+0xe0],0x16
   14000e60f:	mov    eax,DWORD PTR [rsp+0xe0]
   14000e616:	mov    DWORD PTR [rsp+0xe4],eax
   14000e61d:	jmp    0x14000e62a
   14000e61f:	mov    DWORD PTR [rsp+0xe4],0xa
   14000e62a:	mov    eax,DWORD PTR [rsp+0xe4]
   14000e631:	mov    DWORD PTR [rsp+0x20],eax
   14000e635:	movzx  r8d,BYTE PTR [rsp+0xa8]
   14000e63e:	mov    edx,0x1
   14000e643:	lea    rcx,[rsp+0x50]
   14000e648:	call   0x14000f580
   14000e64d:	nop
   14000e64e:	mov    QWORD PTR [rsp+0x78],0x0
   14000e657:	mov    rax,QWORD PTR [rsp+0x118]
   14000e65f:	add    rax,0x1f
   14000e663:	mov    QWORD PTR [rsp+0xb0],rax
   14000e66b:	jmp    0x14000e67a
   14000e66d:	mov    rcx,QWORD PTR [rsp+0x120]
   14000e675:	call   0x14000f700
   14000e67a:	mov    rdx,QWORD PTR [rsp+0x128]
   14000e682:	mov    rcx,QWORD PTR [rsp+0x120]
   14000e68a:	call   0x1400105a0
   14000e68f:	movzx  eax,al
   14000e692:	test   eax,eax
   14000e694:	je     0x14000e7d5
   14000e69a:	mov    rbx,QWORD PTR [rsp+0x110]
   14000e6a2:	add    rbx,0x10
   14000e6a6:	mov    rcx,QWORD PTR [rsp+0x120]
   14000e6ae:	call   0x14000f6d0
   14000e6b3:	mov    rdx,rbx
   14000e6b6:	movzx  ecx,ax
   14000e6b9:	call   0x140001d40
   14000e6be:	movzx  r11d,al
   14000e6c2:	mov    rax,QWORD PTR [rsp+0x30]
   14000e6c7:	mov    BYTE PTR [rax],r11b
   14000e6ca:	movsxd r8,DWORD PTR [rsp+0x20]
   14000e6cf:	mov    rax,QWORD PTR [rsp+0x30]
   14000e6d4:	movsx  edx,BYTE PTR [rax]
   14000e6d7:	lea    rcx,[rip+0x30c32]        # 0x14003f310
   14000e6de:	call   0x14001c6f8
   14000e6e3:	test   rax,rax
   14000e6e6:	je     0x14000e774
   14000e6ec:	movzx  eax,BYTE PTR [rsp+0x3c]
   14000e6f1:	test   eax,eax
   14000e6f3:	jne    0x14000e702
   14000e6f5:	mov    rax,QWORD PTR [rsp+0x30]
   14000e6fa:	movsx  eax,BYTE PTR [rax]
   14000e6fd:	cmp    eax,0x30
   14000e700:	je     0x14000e724
   14000e702:	mov    rax,QWORD PTR [rsp+0xb0]
   14000e70a:	cmp    QWORD PTR [rsp+0x30],rax
   14000e70f:	jae    0x14000e724
   14000e711:	mov    rax,QWORD PTR [rsp+0x30]
   14000e716:	add    rax,0x1
   14000e71a:	mov    QWORD PTR [rsp+0x30],rax
   14000e71f:	mov    BYTE PTR [rsp+0x3c],0x1
   14000e724:	mov    BYTE PTR [rsp+0xa8],0x1
   14000e72c:	mov    rdx,QWORD PTR [rsp+0x78]
   14000e731:	lea    rcx,[rsp+0x50]
   14000e736:	call   0x14000f690
   14000e73b:	movsx  eax,BYTE PTR [rax]
   14000e73e:	cmp    eax,0x7f
   14000e741:	je     0x14000e772
   14000e743:	mov    rdx,QWORD PTR [rsp+0x78]
   14000e748:	lea    rcx,[rsp+0x50]
   14000e74d:	call   0x14000f690
   14000e752:	mov    QWORD PTR [rsp+0xe8],rax
   14000e75a:	mov    rax,QWORD PTR [rsp+0xe8]
   14000e762:	movzx  ecx,BYTE PTR [rax]
   14000e765:	add    cl,0x1
   14000e768:	mov    rax,QWORD PTR [rsp+0xe8]
   14000e770:	mov    BYTE PTR [rax],cl
   14000e772:	jmp    0x14000e7d0
   14000e774:	mov    rdx,QWORD PTR [rsp+0x78]
   14000e779:	lea    rcx,[rsp+0x50]
   14000e77e:	call   0x14000f690
   14000e783:	movsx  eax,BYTE PTR [rax]
   14000e786:	test   eax,eax
   14000e788:	je     0x14000e7ac
   14000e78a:	movzx  eax,WORD PTR [rsp+0x40]
   14000e78f:	test   eax,eax
   14000e791:	je     0x14000e7ac
   14000e793:	mov    rcx,QWORD PTR [rsp+0x120]
   14000e79b:	call   0x14000f6d0
   14000e7a0:	movzx  ecx,ax
   14000e7a3:	movzx  eax,WORD PTR [rsp+0x40]
   14000e7a8:	cmp    ecx,eax
   14000e7aa:	je     0x14000e7b0
   14000e7ac:	jmp    0x14000e7d5
   14000e7ae:	jmp    0x14000e7d0
   14000e7b0:	xor    r8d,r8d
   14000e7b3:	mov    edx,0x1
   14000e7b8:	lea    rcx,[rsp+0x50]
   14000e7bd:	call   0x14000f5f0
   14000e7c2:	mov    rax,QWORD PTR [rsp+0x78]
   14000e7c7:	add    rax,0x1
   14000e7cb:	mov    QWORD PTR [rsp+0x78],rax
   14000e7d0:	jmp    0x14000e66d
   14000e7d5:	cmp    QWORD PTR [rsp+0x78],0x0
   14000e7db:	jne    0x14000e7df
   14000e7dd:	jmp    0x14000e80d
   14000e7df:	mov    rdx,QWORD PTR [rsp+0x78]
   14000e7e4:	lea    rcx,[rsp+0x50]
   14000e7e9:	call   0x14000f690
   14000e7ee:	movsx  eax,BYTE PTR [rax]
   14000e7f1:	test   eax,eax
   14000e7f3:	jle    0x14000e805
   14000e7f5:	mov    rax,QWORD PTR [rsp+0x78]
   14000e7fa:	add    rax,0x1
   14000e7fe:	mov    QWORD PTR [rsp+0x78],rax
   14000e803:	jmp    0x14000e80d
   14000e805:	mov    BYTE PTR [rsp+0xa8],0x0
   14000e80d:	lea    rcx,[rsp+0x80]
   14000e815:	call   0x1400032f0
   14000e81a:	mov    QWORD PTR [rsp+0xb8],rax
   14000e822:	movzx  eax,BYTE PTR [rsp+0xa8]
   14000e82a:	test   eax,eax
   14000e82c:	je     0x14000e8eb
   14000e832:	cmp    QWORD PTR [rsp+0x78],0x0
   14000e838:	jbe    0x14000e8eb
   14000e83e:	mov    rax,QWORD PTR [rsp+0xb8]
   14000e846:	movsx  eax,BYTE PTR [rax]
   14000e849:	cmp    eax,0x7f
   14000e84c:	jne    0x14000e858
   14000e84e:	jmp    0x14000e8eb
   14000e853:	jmp    0x14000e8e6
   14000e858:	mov    rax,QWORD PTR [rsp+0x78]
   14000e85d:	sub    rax,0x1
   14000e861:	mov    QWORD PTR [rsp+0x78],rax
   14000e866:	cmp    QWORD PTR [rsp+0x78],0x0
   14000e86c:	jbe    0x14000e88f
   14000e86e:	mov    rax,QWORD PTR [rsp+0xb8]
   14000e876:	movsx  ebx,BYTE PTR [rax]
   14000e879:	mov    rdx,QWORD PTR [rsp+0x78]
   14000e87e:	lea    rcx,[rsp+0x50]
   14000e883:	call   0x14000f690
   14000e888:	movsx  eax,BYTE PTR [rax]
   14000e88b:	cmp    ebx,eax
   14000e88d:	jne    0x14000e8b8
   14000e88f:	cmp    QWORD PTR [rsp+0x78],0x0
   14000e895:	jne    0x14000e8c2
   14000e897:	mov    rax,QWORD PTR [rsp+0xb8]
   14000e89f:	movsx  ebx,BYTE PTR [rax]
   14000e8a2:	mov    rdx,QWORD PTR [rsp+0x78]
   14000e8a7:	lea    rcx,[rsp+0x50]
   14000e8ac:	call   0x14000f690
   14000e8b1:	movsx  eax,BYTE PTR [rax]
   14000e8b4:	cmp    ebx,eax
   14000e8b6:	jge    0x14000e8c2
   14000e8b8:	mov    BYTE PTR [rsp+0xa8],0x0
   14000e8c0:	jmp    0x14000e8e6
   14000e8c2:	mov    rax,QWORD PTR [rsp+0xb8]
   14000e8ca:	movsx  eax,BYTE PTR [rax+0x1]
   14000e8ce:	test   eax,eax
   14000e8d0:	jle    0x14000e8e6
   14000e8d2:	mov    rax,QWORD PTR [rsp+0xb8]
   14000e8da:	add    rax,0x1
   14000e8de:	mov    QWORD PTR [rsp+0xb8],rax
   14000e8e6:	jmp    0x14000e822
   14000e8eb:	movzx  eax,BYTE PTR [rsp+0xa8]
   14000e8f3:	test   eax,eax
   14000e8f5:	je     0x14000e918
   14000e8f7:	movzx  eax,BYTE PTR [rsp+0x3c]
   14000e8fc:	test   eax,eax
   14000e8fe:	jne    0x14000e918
   14000e900:	mov    rax,QWORD PTR [rsp+0x30]
   14000e905:	mov    BYTE PTR [rax],0x30
   14000e908:	mov    rax,QWORD PTR [rsp+0x30]
   14000e90d:	add    rax,0x1
   14000e911:	mov    QWORD PTR [rsp+0x30],rax
   14000e916:	jmp    0x14000e931
   14000e918:	movzx  eax,BYTE PTR [rsp+0xa8]
   14000e920:	test   eax,eax
   14000e922:	jne    0x14000e931
   14000e924:	mov    rax,QWORD PTR [rsp+0x118]
   14000e92c:	mov    QWORD PTR [rsp+0x30],rax
   14000e931:	mov    rax,QWORD PTR [rsp+0x30]
   14000e936:	mov    BYTE PTR [rax],0x0
   14000e939:	mov    eax,DWORD PTR [rsp+0xac]
   14000e940:	mov    DWORD PTR [rsp+0xc0],eax
   14000e947:	lea    rcx,[rsp+0x50]
   14000e94c:	call   0x140003220
   14000e951:	nop
   14000e952:	lea    rcx,[rsp+0x80]
   14000e95a:	call   0x140003220
   14000e95f:	mov    eax,DWORD PTR [rsp+0xc0]
   14000e966:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000e96e:	xor    rcx,rsp
   14000e971:	call   0x14001c500
   14000e976:	add    rsp,0x100
   14000e97d:	pop    rbx
   14000e97e:	ret    
   14000e97f:	int3   
   14000e980:	mov    QWORD PTR [rsp+0x20],r9
   14000e985:	mov    QWORD PTR [rsp+0x18],r8
   14000e98a:	mov    QWORD PTR [rsp+0x10],rdx
   14000e98f:	mov    QWORD PTR [rsp+0x8],rcx
   14000e994:	push   rbx
   14000e995:	sub    rsp,0xd0
   14000e99c:	mov    QWORD PTR [rsp+0xb8],0xfffffffffffffffe
   14000e9a8:	mov    rax,QWORD PTR [rip+0x3aab1]        # 0x140049460
   14000e9af:	xor    rax,rsp
   14000e9b2:	mov    QWORD PTR [rsp+0xc8],rax
   14000e9ba:	mov    rcx,QWORD PTR [rsp+0x100]
   14000e9c2:	call   0x140010130
   14000e9c7:	mov    QWORD PTR [rsp+0x20],rax
   14000e9cc:	lea    rdx,[rsp+0x48]
   14000e9d1:	mov    rcx,QWORD PTR [rsp+0x20]
   14000e9d6:	call   0x14000f760
   14000e9db:	nop
   14000e9dc:	mov    r8,QWORD PTR [rsp+0xe0]
   14000e9e4:	add    r8,0x10
   14000e9e8:	xor    edx,edx
   14000e9ea:	mov    cl,0x30
   14000e9ec:	call   0x140001d80
   14000e9f1:	mov    WORD PTR [rsp+0x30],ax
   14000e9f6:	mov    rax,QWORD PTR [rsp+0xe8]
   14000e9fe:	mov    QWORD PTR [rsp+0x28],rax
   14000ea03:	mov    BYTE PTR [rsp+0x3c],0x0
   14000ea08:	mov    rdx,QWORD PTR [rsp+0xf8]
   14000ea10:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000ea18:	call   0x140010570
   14000ea1d:	movzx  eax,al
   14000ea20:	test   eax,eax
   14000ea22:	je     0x14000ea29
   14000ea24:	jmp    0x14000eac9
   14000ea29:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000ea31:	call   0x14000f6d0
   14000ea36:	movzx  ebx,ax
   14000ea39:	mov    r8,QWORD PTR [rsp+0xe0]
   14000ea41:	add    r8,0x10
   14000ea45:	xor    edx,edx
   14000ea47:	mov    cl,0x2b
   14000ea49:	call   0x140001d80
   14000ea4e:	movzx  eax,ax
   14000ea51:	cmp    ebx,eax
   14000ea53:	jne    0x14000ea7a
   14000ea55:	mov    rax,QWORD PTR [rsp+0x28]
   14000ea5a:	mov    BYTE PTR [rax],0x2b
   14000ea5d:	mov    rax,QWORD PTR [rsp+0x28]
   14000ea62:	add    rax,0x1
   14000ea66:	mov    QWORD PTR [rsp+0x28],rax
   14000ea6b:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000ea73:	call   0x14000f700
   14000ea78:	jmp    0x14000eac9
   14000ea7a:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000ea82:	call   0x14000f6d0
   14000ea87:	movzx  ebx,ax
   14000ea8a:	mov    r8,QWORD PTR [rsp+0xe0]
   14000ea92:	add    r8,0x10
   14000ea96:	xor    edx,edx
   14000ea98:	mov    cl,0x2d
   14000ea9a:	call   0x140001d80
   14000ea9f:	movzx  eax,ax
   14000eaa2:	cmp    ebx,eax
   14000eaa4:	jne    0x14000eac9
   14000eaa6:	mov    rax,QWORD PTR [rsp+0x28]
   14000eaab:	mov    BYTE PTR [rax],0x2d
   14000eaae:	mov    rax,QWORD PTR [rsp+0x28]
   14000eab3:	add    rax,0x1
   14000eab7:	mov    QWORD PTR [rsp+0x28],rax
   14000eabc:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000eac4:	call   0x14000f700
   14000eac9:	mov    BYTE PTR [rsp+0x70],0x0
   14000eace:	mov    DWORD PTR [rsp+0x38],0x0
   14000ead6:	mov    DWORD PTR [rsp+0x34],0x0
   14000eade:	lea    rcx,[rsp+0x48]
   14000eae3:	call   0x1400032f0
   14000eae8:	movsx  eax,BYTE PTR [rax]
   14000eaeb:	cmp    eax,0x7f
   14000eaee:	je     0x14000eb05
   14000eaf0:	lea    rcx,[rsp+0x48]
   14000eaf5:	call   0x1400032f0
   14000eafa:	movsx  eax,BYTE PTR [rax]
   14000eafd:	test   eax,eax
   14000eaff:	jg     0x14000ebec
   14000eb05:	jmp    0x14000eb19
   14000eb07:	mov    BYTE PTR [rsp+0x70],0x1
   14000eb0c:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000eb14:	call   0x14000f700
   14000eb19:	mov    rdx,QWORD PTR [rsp+0xf8]
   14000eb21:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000eb29:	call   0x1400105a0
   14000eb2e:	movzx  eax,al
   14000eb31:	test   eax,eax
   14000eb33:	je     0x14000ebe7
   14000eb39:	movzx  ebx,WORD PTR [rsp+0x30]
   14000eb3e:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000eb46:	call   0x14000f6d0
   14000eb4b:	movzx  eax,ax
   14000eb4e:	cmp    ebx,eax
   14000eb50:	jg     0x14000ebe7
   14000eb56:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000eb5e:	call   0x14000f6d0
   14000eb63:	movzx  ecx,ax
   14000eb66:	movzx  eax,WORD PTR [rsp+0x30]
   14000eb6b:	add    eax,0x9
   14000eb6e:	cmp    ecx,eax
   14000eb70:	jg     0x14000ebe7
   14000eb72:	cmp    DWORD PTR [rsp+0x38],0x24
   14000eb77:	jl     0x14000eb86
   14000eb79:	mov    eax,DWORD PTR [rsp+0x34]
   14000eb7d:	add    eax,0x1
   14000eb80:	mov    DWORD PTR [rsp+0x34],eax
   14000eb84:	jmp    0x14000ebe2
   14000eb86:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000eb8e:	call   0x14000f6d0
   14000eb93:	movzx  ecx,ax
   14000eb96:	movzx  eax,WORD PTR [rsp+0x30]
   14000eb9b:	cmp    ecx,eax
   14000eb9d:	jne    0x14000eba8
   14000eb9f:	cmp    DWORD PTR [rsp+0x38],0x0
   14000eba4:	jne    0x14000eba8
   14000eba6:	jmp    0x14000ebe2
   14000eba8:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000ebb0:	call   0x14000f6d0
   14000ebb5:	movzx  ecx,ax
   14000ebb8:	movzx  eax,WORD PTR [rsp+0x30]
   14000ebbd:	sub    ecx,eax
   14000ebbf:	add    ecx,0x30
   14000ebc2:	mov    rax,QWORD PTR [rsp+0x28]
   14000ebc7:	mov    BYTE PTR [rax],cl
   14000ebc9:	mov    rax,QWORD PTR [rsp+0x28]
   14000ebce:	add    rax,0x1
   14000ebd2:	mov    QWORD PTR [rsp+0x28],rax
   14000ebd7:	mov    eax,DWORD PTR [rsp+0x38]
   14000ebdb:	add    eax,0x1
   14000ebde:	mov    DWORD PTR [rsp+0x38],eax
   14000ebe2:	jmp    0x14000eb07
   14000ebe7:	jmp    0x14000eee8
   14000ebec:	mov    rcx,QWORD PTR [rsp+0x20]
   14000ebf1:	call   0x14000f740
   14000ebf6:	mov    WORD PTR [rsp+0x74],ax
   14000ebfb:	xor    r8d,r8d
   14000ebfe:	mov    edx,0x1
   14000ec03:	lea    rcx,[rsp+0x78]
   14000ec08:	call   0x14000f580
   14000ec0d:	nop
   14000ec0e:	mov    QWORD PTR [rsp+0xa0],0x0
   14000ec1a:	jmp    0x14000ec29
   14000ec1c:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000ec24:	call   0x14000f700
   14000ec29:	mov    rdx,QWORD PTR [rsp+0xf8]
   14000ec31:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000ec39:	call   0x1400105a0
   14000ec3e:	movzx  eax,al
   14000ec41:	test   eax,eax
   14000ec43:	je     0x14000edb3
   14000ec49:	movzx  ebx,WORD PTR [rsp+0x30]
   14000ec4e:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000ec56:	call   0x14000f6d0
   14000ec5b:	movzx  eax,ax
   14000ec5e:	cmp    ebx,eax
   14000ec60:	jg     0x14000ed49
   14000ec66:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000ec6e:	call   0x14000f6d0
   14000ec73:	movzx  ecx,ax
   14000ec76:	movzx  eax,WORD PTR [rsp+0x30]
   14000ec7b:	add    eax,0x9
   14000ec7e:	cmp    ecx,eax
   14000ec80:	jg     0x14000ed49
   14000ec86:	mov    BYTE PTR [rsp+0x70],0x1
   14000ec8b:	cmp    DWORD PTR [rsp+0x38],0x24
   14000ec90:	jl     0x14000ec9f
   14000ec92:	mov    eax,DWORD PTR [rsp+0x34]
   14000ec96:	add    eax,0x1
   14000ec99:	mov    DWORD PTR [rsp+0x34],eax
   14000ec9d:	jmp    0x14000ecfb
   14000ec9f:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000eca7:	call   0x14000f6d0
   14000ecac:	movzx  ecx,ax
   14000ecaf:	movzx  eax,WORD PTR [rsp+0x30]
   14000ecb4:	cmp    ecx,eax
   14000ecb6:	jne    0x14000ecc1
   14000ecb8:	cmp    DWORD PTR [rsp+0x38],0x0
   14000ecbd:	jne    0x14000ecc1
   14000ecbf:	jmp    0x14000ecfb
   14000ecc1:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000ecc9:	call   0x14000f6d0
   14000ecce:	movzx  ecx,ax
   14000ecd1:	movzx  eax,WORD PTR [rsp+0x30]
   14000ecd6:	sub    ecx,eax
   14000ecd8:	add    ecx,0x30
   14000ecdb:	mov    rax,QWORD PTR [rsp+0x28]
   14000ece0:	mov    BYTE PTR [rax],cl
   14000ece2:	mov    rax,QWORD PTR [rsp+0x28]
   14000ece7:	add    rax,0x1
   14000eceb:	mov    QWORD PTR [rsp+0x28],rax
   14000ecf0:	mov    eax,DWORD PTR [rsp+0x38]
   14000ecf4:	add    eax,0x1
   14000ecf7:	mov    DWORD PTR [rsp+0x38],eax
   14000ecfb:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000ed03:	lea    rcx,[rsp+0x78]
   14000ed08:	call   0x14000f690
   14000ed0d:	movsx  eax,BYTE PTR [rax]
   14000ed10:	cmp    eax,0x7f
   14000ed13:	je     0x14000ed47
   14000ed15:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000ed1d:	lea    rcx,[rsp+0x78]
   14000ed22:	call   0x14000f690
   14000ed27:	mov    QWORD PTR [rsp+0xc0],rax
   14000ed2f:	mov    rax,QWORD PTR [rsp+0xc0]
   14000ed37:	movzx  ecx,BYTE PTR [rax]
   14000ed3a:	add    cl,0x1
   14000ed3d:	mov    rax,QWORD PTR [rsp+0xc0]
   14000ed45:	mov    BYTE PTR [rax],cl
   14000ed47:	jmp    0x14000edae
   14000ed49:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000ed51:	lea    rcx,[rsp+0x78]
   14000ed56:	call   0x14000f690
   14000ed5b:	movsx  eax,BYTE PTR [rax]
   14000ed5e:	test   eax,eax
   14000ed60:	je     0x14000ed84
   14000ed62:	movzx  eax,WORD PTR [rsp+0x74]
   14000ed67:	test   eax,eax
   14000ed69:	je     0x14000ed84
   14000ed6b:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000ed73:	call   0x14000f6d0
   14000ed78:	movzx  ecx,ax
   14000ed7b:	movzx  eax,WORD PTR [rsp+0x74]
   14000ed80:	cmp    ecx,eax
   14000ed82:	je     0x14000ed88
   14000ed84:	jmp    0x14000edb3
   14000ed86:	jmp    0x14000edae
   14000ed88:	xor    r8d,r8d
   14000ed8b:	mov    edx,0x1
   14000ed90:	lea    rcx,[rsp+0x78]
   14000ed95:	call   0x14000f5f0
   14000ed9a:	mov    rax,QWORD PTR [rsp+0xa0]
   14000eda2:	add    rax,0x1
   14000eda6:	mov    QWORD PTR [rsp+0xa0],rax
   14000edae:	jmp    0x14000ec1c
   14000edb3:	cmp    QWORD PTR [rsp+0xa0],0x0
   14000edbc:	jne    0x14000edc0
   14000edbe:	jmp    0x14000edf4
   14000edc0:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000edc8:	lea    rcx,[rsp+0x78]
   14000edcd:	call   0x14000f690
   14000edd2:	movsx  eax,BYTE PTR [rax]
   14000edd5:	test   eax,eax
   14000edd7:	jle    0x14000edef
   14000edd9:	mov    rax,QWORD PTR [rsp+0xa0]
   14000ede1:	add    rax,0x1
   14000ede5:	mov    QWORD PTR [rsp+0xa0],rax
   14000eded:	jmp    0x14000edf4
   14000edef:	mov    BYTE PTR [rsp+0x3c],0x1
   14000edf4:	lea    rcx,[rsp+0x48]
   14000edf9:	call   0x1400032f0
   14000edfe:	mov    QWORD PTR [rsp+0xa8],rax
   14000ee06:	movzx  eax,BYTE PTR [rsp+0x3c]
   14000ee0b:	test   eax,eax
   14000ee0d:	jne    0x14000eede
   14000ee13:	cmp    QWORD PTR [rsp+0xa0],0x0
   14000ee1c:	jbe    0x14000eede
   14000ee22:	mov    rax,QWORD PTR [rsp+0xa8]
   14000ee2a:	movsx  eax,BYTE PTR [rax]
   14000ee2d:	cmp    eax,0x7f
   14000ee30:	jne    0x14000ee3c
   14000ee32:	jmp    0x14000eede
   14000ee37:	jmp    0x14000eed9
   14000ee3c:	mov    rax,QWORD PTR [rsp+0xa0]
   14000ee44:	sub    rax,0x1
   14000ee48:	mov    QWORD PTR [rsp+0xa0],rax
   14000ee50:	cmp    QWORD PTR [rsp+0xa0],0x0
   14000ee59:	jbe    0x14000ee7f
   14000ee5b:	mov    rax,QWORD PTR [rsp+0xa8]
   14000ee63:	movsx  ebx,BYTE PTR [rax]
   14000ee66:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000ee6e:	lea    rcx,[rsp+0x78]
   14000ee73:	call   0x14000f690
   14000ee78:	movsx  eax,BYTE PTR [rax]
   14000ee7b:	cmp    ebx,eax
   14000ee7d:	jne    0x14000eeae
   14000ee7f:	cmp    QWORD PTR [rsp+0xa0],0x0
   14000ee88:	jne    0x14000eeb5
   14000ee8a:	mov    rax,QWORD PTR [rsp+0xa8]
   14000ee92:	movsx  ebx,BYTE PTR [rax]
   14000ee95:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000ee9d:	lea    rcx,[rsp+0x78]
   14000eea2:	call   0x14000f690
   14000eea7:	movsx  eax,BYTE PTR [rax]
   14000eeaa:	cmp    ebx,eax
   14000eeac:	jge    0x14000eeb5
   14000eeae:	mov    BYTE PTR [rsp+0x3c],0x1
   14000eeb3:	jmp    0x14000eed9
   14000eeb5:	mov    rax,QWORD PTR [rsp+0xa8]
   14000eebd:	movsx  eax,BYTE PTR [rax+0x1]
   14000eec1:	test   eax,eax
   14000eec3:	jle    0x14000eed9
   14000eec5:	mov    rax,QWORD PTR [rsp+0xa8]
   14000eecd:	add    rax,0x1
   14000eed1:	mov    QWORD PTR [rsp+0xa8],rax
   14000eed9:	jmp    0x14000ee06
   14000eede:	lea    rcx,[rsp+0x78]
   14000eee3:	call   0x140003220
   14000eee8:	movzx  eax,BYTE PTR [rsp+0x70]
   14000eeed:	test   eax,eax
   14000eeef:	je     0x14000ef0e
   14000eef1:	cmp    DWORD PTR [rsp+0x38],0x0
   14000eef6:	jne    0x14000ef0e
   14000eef8:	mov    rax,QWORD PTR [rsp+0x28]
   14000eefd:	mov    BYTE PTR [rax],0x30
   14000ef00:	mov    rax,QWORD PTR [rsp+0x28]
   14000ef05:	add    rax,0x1
   14000ef09:	mov    QWORD PTR [rsp+0x28],rax
   14000ef0e:	mov    rdx,QWORD PTR [rsp+0xf8]
   14000ef16:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000ef1e:	call   0x1400105a0
   14000ef23:	movzx  eax,al
   14000ef26:	test   eax,eax
   14000ef28:	je     0x14000ef78
   14000ef2a:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000ef32:	call   0x14000f6d0
   14000ef37:	movzx  ebx,ax
   14000ef3a:	mov    rcx,QWORD PTR [rsp+0x20]
   14000ef3f:	call   0x14000f720
   14000ef44:	movzx  eax,ax
   14000ef47:	cmp    ebx,eax
   14000ef49:	jne    0x14000ef78
   14000ef4b:	call   0x14001cae4
   14000ef50:	mov    rax,QWORD PTR [rax]
   14000ef53:	mov    rcx,QWORD PTR [rsp+0x28]
   14000ef58:	movzx  eax,BYTE PTR [rax]
   14000ef5b:	mov    BYTE PTR [rcx],al
   14000ef5d:	mov    rax,QWORD PTR [rsp+0x28]
   14000ef62:	add    rax,0x1
   14000ef66:	mov    QWORD PTR [rsp+0x28],rax
   14000ef6b:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000ef73:	call   0x14000f700
   14000ef78:	cmp    DWORD PTR [rsp+0x38],0x0
   14000ef7d:	jne    0x14000effd
   14000ef7f:	jmp    0x14000ef93
   14000ef81:	mov    BYTE PTR [rsp+0x70],0x1
   14000ef86:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000ef8e:	call   0x14000f700
   14000ef93:	mov    rdx,QWORD PTR [rsp+0xf8]
   14000ef9b:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000efa3:	call   0x1400105a0
   14000efa8:	movzx  eax,al
   14000efab:	test   eax,eax
   14000efad:	je     0x14000efd5
   14000efaf:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000efb7:	call   0x14000f6d0
   14000efbc:	movzx  ecx,ax
   14000efbf:	movzx  eax,WORD PTR [rsp+0x30]
   14000efc4:	cmp    ecx,eax
   14000efc6:	jne    0x14000efd5
   14000efc8:	mov    eax,DWORD PTR [rsp+0x34]
   14000efcc:	sub    eax,0x1
   14000efcf:	mov    DWORD PTR [rsp+0x34],eax
   14000efd3:	jmp    0x14000ef81
   14000efd5:	cmp    DWORD PTR [rsp+0x34],0x0
   14000efda:	jge    0x14000effd
   14000efdc:	mov    rax,QWORD PTR [rsp+0x28]
   14000efe1:	mov    BYTE PTR [rax],0x30
   14000efe4:	mov    rax,QWORD PTR [rsp+0x28]
   14000efe9:	add    rax,0x1
   14000efed:	mov    QWORD PTR [rsp+0x28],rax
   14000eff2:	mov    eax,DWORD PTR [rsp+0x34]
   14000eff6:	add    eax,0x1
   14000eff9:	mov    DWORD PTR [rsp+0x34],eax
   14000effd:	jmp    0x14000f011
   14000efff:	mov    BYTE PTR [rsp+0x70],0x1
   14000f004:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f00c:	call   0x14000f700
   14000f011:	mov    rdx,QWORD PTR [rsp+0xf8]
   14000f019:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f021:	call   0x1400105a0
   14000f026:	movzx  eax,al
   14000f029:	test   eax,eax
   14000f02b:	je     0x14000f0a8
   14000f02d:	movzx  ebx,WORD PTR [rsp+0x30]
   14000f032:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f03a:	call   0x14000f6d0
   14000f03f:	movzx  eax,ax
   14000f042:	cmp    ebx,eax
   14000f044:	jg     0x14000f0a8
   14000f046:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f04e:	call   0x14000f6d0
   14000f053:	movzx  ecx,ax
   14000f056:	movzx  eax,WORD PTR [rsp+0x30]
   14000f05b:	add    eax,0x9
   14000f05e:	cmp    ecx,eax
   14000f060:	jg     0x14000f0a8
   14000f062:	cmp    DWORD PTR [rsp+0x38],0x24
   14000f067:	jge    0x14000f0a3
   14000f069:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f071:	call   0x14000f6d0
   14000f076:	movzx  ecx,ax
   14000f079:	movzx  eax,WORD PTR [rsp+0x30]
   14000f07e:	sub    ecx,eax
   14000f080:	add    ecx,0x30
   14000f083:	mov    rax,QWORD PTR [rsp+0x28]
   14000f088:	mov    BYTE PTR [rax],cl
   14000f08a:	mov    rax,QWORD PTR [rsp+0x28]
   14000f08f:	add    rax,0x1
   14000f093:	mov    QWORD PTR [rsp+0x28],rax
   14000f098:	mov    eax,DWORD PTR [rsp+0x38]
   14000f09c:	add    eax,0x1
   14000f09f:	mov    DWORD PTR [rsp+0x38],eax
   14000f0a3:	jmp    0x14000efff
   14000f0a8:	movzx  eax,BYTE PTR [rsp+0x70]
   14000f0ad:	test   eax,eax
   14000f0af:	je     0x14000f335
   14000f0b5:	mov    rdx,QWORD PTR [rsp+0xf8]
   14000f0bd:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f0c5:	call   0x1400105a0
   14000f0ca:	movzx  eax,al
   14000f0cd:	test   eax,eax
   14000f0cf:	je     0x14000f335
   14000f0d5:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f0dd:	call   0x14000f6d0
   14000f0e2:	movzx  ebx,ax
   14000f0e5:	mov    r8,QWORD PTR [rsp+0xe0]
   14000f0ed:	add    r8,0x10
   14000f0f1:	xor    edx,edx
   14000f0f3:	mov    cl,0x65
   14000f0f5:	call   0x140001d80
   14000f0fa:	movzx  eax,ax
   14000f0fd:	cmp    ebx,eax
   14000f0ff:	je     0x14000f131
   14000f101:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f109:	call   0x14000f6d0
   14000f10e:	movzx  ebx,ax
   14000f111:	mov    r8,QWORD PTR [rsp+0xe0]
   14000f119:	add    r8,0x10
   14000f11d:	xor    edx,edx
   14000f11f:	mov    cl,0x45
   14000f121:	call   0x140001d80
   14000f126:	movzx  eax,ax
   14000f129:	cmp    ebx,eax
   14000f12b:	jne    0x14000f335
   14000f131:	mov    rax,QWORD PTR [rsp+0x28]
   14000f136:	mov    BYTE PTR [rax],0x65
   14000f139:	mov    rax,QWORD PTR [rsp+0x28]
   14000f13e:	add    rax,0x1
   14000f142:	mov    QWORD PTR [rsp+0x28],rax
   14000f147:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f14f:	call   0x14000f700
   14000f154:	mov    BYTE PTR [rsp+0x70],0x0
   14000f159:	mov    DWORD PTR [rsp+0x38],0x0
   14000f161:	mov    rdx,QWORD PTR [rsp+0xf8]
   14000f169:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f171:	call   0x140010570
   14000f176:	movzx  eax,al
   14000f179:	test   eax,eax
   14000f17b:	je     0x14000f182
   14000f17d:	jmp    0x14000f222
   14000f182:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f18a:	call   0x14000f6d0
   14000f18f:	movzx  ebx,ax
   14000f192:	mov    r8,QWORD PTR [rsp+0xe0]
   14000f19a:	add    r8,0x10
   14000f19e:	xor    edx,edx
   14000f1a0:	mov    cl,0x2b
   14000f1a2:	call   0x140001d80
   14000f1a7:	movzx  eax,ax
   14000f1aa:	cmp    ebx,eax
   14000f1ac:	jne    0x14000f1d3
   14000f1ae:	mov    rax,QWORD PTR [rsp+0x28]
   14000f1b3:	mov    BYTE PTR [rax],0x2b
   14000f1b6:	mov    rax,QWORD PTR [rsp+0x28]
   14000f1bb:	add    rax,0x1
   14000f1bf:	mov    QWORD PTR [rsp+0x28],rax
   14000f1c4:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f1cc:	call   0x14000f700
   14000f1d1:	jmp    0x14000f222
   14000f1d3:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f1db:	call   0x14000f6d0
   14000f1e0:	movzx  ebx,ax
   14000f1e3:	mov    r8,QWORD PTR [rsp+0xe0]
   14000f1eb:	add    r8,0x10
   14000f1ef:	xor    edx,edx
   14000f1f1:	mov    cl,0x2d
   14000f1f3:	call   0x140001d80
   14000f1f8:	movzx  eax,ax
   14000f1fb:	cmp    ebx,eax
   14000f1fd:	jne    0x14000f222
   14000f1ff:	mov    rax,QWORD PTR [rsp+0x28]
   14000f204:	mov    BYTE PTR [rax],0x2d
   14000f207:	mov    rax,QWORD PTR [rsp+0x28]
   14000f20c:	add    rax,0x1
   14000f210:	mov    QWORD PTR [rsp+0x28],rax
   14000f215:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f21d:	call   0x14000f700
   14000f222:	mov    rdx,QWORD PTR [rsp+0xf8]
   14000f22a:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f232:	call   0x1400105a0
   14000f237:	movzx  eax,al
   14000f23a:	test   eax,eax
   14000f23c:	je     0x14000f26b
   14000f23e:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f246:	call   0x14000f6d0
   14000f24b:	movzx  ecx,ax
   14000f24e:	movzx  eax,WORD PTR [rsp+0x30]
   14000f253:	cmp    ecx,eax
   14000f255:	jne    0x14000f26b
   14000f257:	mov    BYTE PTR [rsp+0x70],0x1
   14000f25c:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f264:	call   0x14000f700
   14000f269:	jmp    0x14000f222
   14000f26b:	movzx  eax,BYTE PTR [rsp+0x70]
   14000f270:	test   eax,eax
   14000f272:	je     0x14000f28a
   14000f274:	mov    rax,QWORD PTR [rsp+0x28]
   14000f279:	mov    BYTE PTR [rax],0x30
   14000f27c:	mov    rax,QWORD PTR [rsp+0x28]
   14000f281:	add    rax,0x1
   14000f285:	mov    QWORD PTR [rsp+0x28],rax
   14000f28a:	jmp    0x14000f29e
   14000f28c:	mov    BYTE PTR [rsp+0x70],0x1
   14000f291:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f299:	call   0x14000f700
   14000f29e:	mov    rdx,QWORD PTR [rsp+0xf8]
   14000f2a6:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f2ae:	call   0x1400105a0
   14000f2b3:	movzx  eax,al
   14000f2b6:	test   eax,eax
   14000f2b8:	je     0x14000f335
   14000f2ba:	movzx  ebx,WORD PTR [rsp+0x30]
   14000f2bf:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f2c7:	call   0x14000f6d0
   14000f2cc:	movzx  eax,ax
   14000f2cf:	cmp    ebx,eax
   14000f2d1:	jg     0x14000f335
   14000f2d3:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f2db:	call   0x14000f6d0
   14000f2e0:	movzx  ecx,ax
   14000f2e3:	movzx  eax,WORD PTR [rsp+0x30]
   14000f2e8:	add    eax,0x9
   14000f2eb:	cmp    ecx,eax
   14000f2ed:	jg     0x14000f335
   14000f2ef:	cmp    DWORD PTR [rsp+0x38],0x8
   14000f2f4:	jge    0x14000f330
   14000f2f6:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000f2fe:	call   0x14000f6d0
   14000f303:	movzx  ecx,ax
   14000f306:	movzx  eax,WORD PTR [rsp+0x30]
   14000f30b:	sub    ecx,eax
   14000f30d:	add    ecx,0x30
   14000f310:	mov    rax,QWORD PTR [rsp+0x28]
   14000f315:	mov    BYTE PTR [rax],cl
   14000f317:	mov    rax,QWORD PTR [rsp+0x28]
   14000f31c:	add    rax,0x1
   14000f320:	mov    QWORD PTR [rsp+0x28],rax
   14000f325:	mov    eax,DWORD PTR [rsp+0x38]
   14000f329:	add    eax,0x1
   14000f32c:	mov    DWORD PTR [rsp+0x38],eax
   14000f330:	jmp    0x14000f28c
   14000f335:	movzx  eax,BYTE PTR [rsp+0x3c]
   14000f33a:	test   eax,eax
   14000f33c:	jne    0x14000f347
   14000f33e:	movzx  eax,BYTE PTR [rsp+0x70]
   14000f343:	test   eax,eax
   14000f345:	jne    0x14000f354
   14000f347:	mov    rax,QWORD PTR [rsp+0xe8]
   14000f34f:	mov    QWORD PTR [rsp+0x28],rax
   14000f354:	mov    rax,QWORD PTR [rsp+0x28]
   14000f359:	mov    BYTE PTR [rax],0x0
   14000f35c:	mov    eax,DWORD PTR [rsp+0x34]
   14000f360:	mov    DWORD PTR [rsp+0xb0],eax
   14000f367:	lea    rcx,[rsp+0x48]
   14000f36c:	call   0x140003220
   14000f371:	mov    eax,DWORD PTR [rsp+0xb0]
   14000f378:	mov    rcx,QWORD PTR [rsp+0xc8]
   14000f380:	xor    rcx,rsp
   14000f383:	call   0x14001c500
   14000f388:	add    rsp,0xd0
   14000f38f:	pop    rbx
   14000f390:	ret    
   14000f391:	int3   
   14000f392:	int3   
   14000f393:	int3   
   14000f394:	int3   
   14000f395:	int3   
   14000f396:	int3   
   14000f397:	int3   
   14000f398:	int3   
   14000f399:	int3   
   14000f39a:	int3   
   14000f39b:	int3   
   14000f39c:	int3   
   14000f39d:	int3   
   14000f39e:	int3   
   14000f39f:	int3   
   14000f3a0:	mov    QWORD PTR [rsp+0x10],rdx
   14000f3a5:	mov    QWORD PTR [rsp+0x8],rcx
   14000f3aa:	sub    rsp,0x38
   14000f3ae:	mov    DWORD PTR [rsp+0x20],0x0
   14000f3b6:	mov    rax,QWORD PTR [rsp+0x40]
   14000f3bb:	mov    rax,QWORD PTR [rax]
   14000f3be:	mov    rdx,QWORD PTR [rsp+0x48]
   14000f3c3:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f3c8:	call   QWORD PTR [rax+0x20]
   14000f3cb:	mov    eax,DWORD PTR [rsp+0x20]
   14000f3cf:	or     eax,0x1
   14000f3d2:	mov    DWORD PTR [rsp+0x20],eax
   14000f3d6:	mov    rax,QWORD PTR [rsp+0x48]
   14000f3db:	add    rsp,0x38
   14000f3df:	ret    
   14000f3e0:	mov    QWORD PTR [rsp+0x10],rdx
   14000f3e5:	mov    QWORD PTR [rsp+0x8],rcx
   14000f3ea:	sub    rsp,0x38
   14000f3ee:	mov    DWORD PTR [rsp+0x20],0x0
   14000f3f6:	mov    rax,QWORD PTR [rsp+0x40]
   14000f3fb:	mov    rax,QWORD PTR [rax]
   14000f3fe:	mov    rdx,QWORD PTR [rsp+0x48]
   14000f403:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f408:	call   QWORD PTR [rax+0x28]
   14000f40b:	mov    eax,DWORD PTR [rsp+0x20]
   14000f40f:	or     eax,0x1
   14000f412:	mov    DWORD PTR [rsp+0x20],eax
   14000f416:	mov    rax,QWORD PTR [rsp+0x48]
   14000f41b:	add    rsp,0x38
   14000f41f:	ret    
   14000f420:	mov    QWORD PTR [rsp+0x8],rcx
   14000f425:	sub    rsp,0x28
   14000f429:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f42e:	lea    rax,[rip+0x301a3]        # 0x14003f5d8
   14000f435:	mov    QWORD PTR [rcx],rax
   14000f438:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f43d:	call   0x14000f7a0
   14000f442:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f447:	call   0x140001ac0
   14000f44c:	add    rsp,0x28
   14000f450:	ret    
   14000f451:	int3   
   14000f452:	int3   
   14000f453:	int3   
   14000f454:	int3   
   14000f455:	int3   
   14000f456:	int3   
   14000f457:	int3   
   14000f458:	int3   
   14000f459:	int3   
   14000f45a:	int3   
   14000f45b:	int3   
   14000f45c:	int3   
   14000f45d:	int3   
   14000f45e:	int3   
   14000f45f:	int3   
   14000f460:	mov    QWORD PTR [rsp+0x8],rcx
   14000f465:	mov    rax,QWORD PTR [rsp+0x8]
   14000f46a:	mov    ax,WORD PTR [rax+0x18]
   14000f46e:	ret    
   14000f46f:	int3   
   14000f470:	mov    QWORD PTR [rsp+0x8],rcx
   14000f475:	mov    rax,QWORD PTR [rsp+0x8]
   14000f47a:	mov    ax,WORD PTR [rax+0x1a]
   14000f47e:	ret    
   14000f47f:	int3   
   14000f480:	mov    QWORD PTR [rsp+0x10],rdx
   14000f485:	mov    QWORD PTR [rsp+0x8],rcx
   14000f48a:	sub    rsp,0x38
   14000f48e:	mov    DWORD PTR [rsp+0x20],0x0
   14000f496:	mov    rdx,QWORD PTR [rsp+0x40]
   14000f49b:	mov    rdx,QWORD PTR [rdx+0x10]
   14000f49f:	mov    rcx,QWORD PTR [rsp+0x48]
   14000f4a4:	call   0x140003170
   14000f4a9:	mov    eax,DWORD PTR [rsp+0x20]
   14000f4ad:	or     eax,0x1
   14000f4b0:	mov    DWORD PTR [rsp+0x20],eax
   14000f4b4:	mov    rax,QWORD PTR [rsp+0x48]
   14000f4b9:	add    rsp,0x38
   14000f4bd:	ret    
   14000f4be:	int3   
   14000f4bf:	int3   
   14000f4c0:	mov    QWORD PTR [rsp+0x10],rdx
   14000f4c5:	mov    QWORD PTR [rsp+0x8],rcx
   14000f4ca:	sub    rsp,0x38
   14000f4ce:	mov    DWORD PTR [rsp+0x20],0x0
   14000f4d6:	mov    rdx,QWORD PTR [rsp+0x40]
   14000f4db:	mov    rdx,QWORD PTR [rdx+0x20]
   14000f4df:	mov    rcx,QWORD PTR [rsp+0x48]
   14000f4e4:	call   0x140003a30
   14000f4e9:	mov    eax,DWORD PTR [rsp+0x20]
   14000f4ed:	or     eax,0x1
   14000f4f0:	mov    DWORD PTR [rsp+0x20],eax
   14000f4f4:	mov    rax,QWORD PTR [rsp+0x48]
   14000f4f9:	add    rsp,0x38
   14000f4fd:	ret    
   14000f4fe:	int3   
   14000f4ff:	int3   
   14000f500:	mov    QWORD PTR [rsp+0x10],rdx
   14000f505:	mov    QWORD PTR [rsp+0x8],rcx
   14000f50a:	sub    rsp,0x38
   14000f50e:	mov    DWORD PTR [rsp+0x20],0x0
   14000f516:	mov    rdx,QWORD PTR [rsp+0x40]
   14000f51b:	mov    rdx,QWORD PTR [rdx+0x28]
   14000f51f:	mov    rcx,QWORD PTR [rsp+0x48]
   14000f524:	call   0x140003a30
   14000f529:	mov    eax,DWORD PTR [rsp+0x20]
   14000f52d:	or     eax,0x1
   14000f530:	mov    DWORD PTR [rsp+0x20],eax
   14000f534:	mov    rax,QWORD PTR [rsp+0x48]
   14000f539:	add    rsp,0x38
   14000f53d:	ret    
   14000f53e:	int3   
   14000f53f:	int3   
   14000f540:	mov    DWORD PTR [rsp+0x10],edx
   14000f544:	mov    QWORD PTR [rsp+0x8],rcx
   14000f549:	sub    rsp,0x28
   14000f54d:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f552:	call   0x14000f420
   14000f557:	mov    eax,DWORD PTR [rsp+0x38]
   14000f55b:	and    eax,0x1
   14000f55e:	test   eax,eax
   14000f560:	je     0x14000f56c
   14000f562:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f567:	call   0x14001c4dc
   14000f56c:	mov    rax,QWORD PTR [rsp+0x30]
   14000f571:	add    rsp,0x28
   14000f575:	ret    
   14000f576:	int3   
   14000f577:	int3   
   14000f578:	int3   
   14000f579:	int3   
   14000f57a:	int3   
   14000f57b:	int3   
   14000f57c:	int3   
   14000f57d:	int3   
   14000f57e:	int3   
   14000f57f:	int3   
   14000f580:	mov    BYTE PTR [rsp+0x18],r8b
   14000f585:	mov    QWORD PTR [rsp+0x10],rdx
   14000f58a:	mov    QWORD PTR [rsp+0x8],rcx
   14000f58f:	sub    rsp,0x38
   14000f593:	lea    rax,[rsp+0x20]
   14000f598:	mov    QWORD PTR [rsp+0x28],rax
   14000f59d:	mov    rcx,QWORD PTR [rsp+0x28]
   14000f5a2:	call   0x140005660
   14000f5a7:	mov    rdx,rax
   14000f5aa:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f5af:	call   0x140005630
   14000f5b4:	xor    r8d,r8d
   14000f5b7:	xor    edx,edx
   14000f5b9:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f5be:	call   0x140005550
   14000f5c3:	movzx  r8d,BYTE PTR [rsp+0x50]
   14000f5c9:	mov    rdx,QWORD PTR [rsp+0x48]
   14000f5ce:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f5d3:	call   0x14000f800
   14000f5d8:	mov    rax,QWORD PTR [rsp+0x40]
   14000f5dd:	add    rsp,0x38
   14000f5e1:	ret    
   14000f5e2:	int3   
   14000f5e3:	int3   
   14000f5e4:	int3   
   14000f5e5:	int3   
   14000f5e6:	int3   
   14000f5e7:	int3   
   14000f5e8:	int3   
   14000f5e9:	int3   
   14000f5ea:	int3   
   14000f5eb:	int3   
   14000f5ec:	int3   
   14000f5ed:	int3   
   14000f5ee:	int3   
   14000f5ef:	int3   
   14000f5f0:	mov    BYTE PTR [rsp+0x18],r8b
   14000f5f5:	mov    QWORD PTR [rsp+0x10],rdx
   14000f5fa:	mov    QWORD PTR [rsp+0x8],rcx
   14000f5ff:	sub    rsp,0x38
   14000f603:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f608:	mov    rax,0xffffffffffffffff
   14000f60f:	sub    rax,QWORD PTR [rcx+0x18]
   14000f613:	cmp    rax,QWORD PTR [rsp+0x48]
   14000f618:	ja     0x14000f61f
   14000f61a:	call   0x14001a2e0
   14000f61f:	cmp    QWORD PTR [rsp+0x48],0x0
   14000f625:	jbe    0x14000f680
   14000f627:	mov    rax,QWORD PTR [rsp+0x40]
   14000f62c:	mov    rax,QWORD PTR [rax+0x18]
   14000f630:	add    rax,QWORD PTR [rsp+0x48]
   14000f635:	mov    QWORD PTR [rsp+0x20],rax
   14000f63a:	xor    r8d,r8d
   14000f63d:	mov    rdx,QWORD PTR [rsp+0x20]
   14000f642:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f647:	call   0x140005420
   14000f64c:	movzx  eax,al
   14000f64f:	test   eax,eax
   14000f651:	je     0x14000f680
   14000f653:	movzx  r9d,BYTE PTR [rsp+0x50]
   14000f659:	mov    r8,QWORD PTR [rsp+0x48]
   14000f65e:	mov    rdx,QWORD PTR [rsp+0x40]
   14000f663:	mov    rdx,QWORD PTR [rdx+0x18]
   14000f667:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f66c:	call   0x14000f870
   14000f671:	mov    rdx,QWORD PTR [rsp+0x20]
   14000f676:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f67b:	call   0x1400053d0
   14000f680:	mov    rax,QWORD PTR [rsp+0x40]
   14000f685:	add    rsp,0x38
   14000f689:	ret    
   14000f68a:	int3   
   14000f68b:	int3   
   14000f68c:	int3   
   14000f68d:	int3   
   14000f68e:	int3   
   14000f68f:	int3   
   14000f690:	mov    QWORD PTR [rsp+0x10],rdx
   14000f695:	mov    QWORD PTR [rsp+0x8],rcx
   14000f69a:	sub    rsp,0x28
   14000f69e:	mov    rax,QWORD PTR [rsp+0x30]
   14000f6a3:	mov    rax,QWORD PTR [rax+0x18]
   14000f6a7:	cmp    QWORD PTR [rsp+0x38],rax
   14000f6ac:	jbe    0x14000f6b3
   14000f6ae:	call   0x14001cd78
   14000f6b3:	xor    eax,eax
   14000f6b5:	test   eax,eax
   14000f6b7:	jne    0x14000f6b3
   14000f6b9:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f6be:	call   0x1400055f0
   14000f6c3:	add    rax,QWORD PTR [rsp+0x38]
   14000f6c8:	add    rsp,0x28
   14000f6cc:	ret    
   14000f6cd:	int3   
   14000f6ce:	int3   
   14000f6cf:	int3   
   14000f6d0:	mov    QWORD PTR [rsp+0x8],rcx
   14000f6d5:	sub    rsp,0x28
   14000f6d9:	mov    rax,QWORD PTR [rsp+0x30]
   14000f6de:	movzx  eax,BYTE PTR [rax+0x8]
   14000f6e2:	test   eax,eax
   14000f6e4:	jne    0x14000f6f0
   14000f6e6:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f6eb:	call   0x14000f950
   14000f6f0:	mov    rax,QWORD PTR [rsp+0x30]
   14000f6f5:	mov    ax,WORD PTR [rax+0xa]
   14000f6f9:	add    rsp,0x28
   14000f6fd:	ret    
   14000f6fe:	int3   
   14000f6ff:	int3   
   14000f700:	mov    QWORD PTR [rsp+0x8],rcx
   14000f705:	sub    rsp,0x28
   14000f709:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f70e:	call   0x14000f8e0
   14000f713:	mov    rax,QWORD PTR [rsp+0x30]
   14000f718:	add    rsp,0x28
   14000f71c:	ret    
   14000f71d:	int3   
   14000f71e:	int3   
   14000f71f:	int3   
   14000f720:	mov    QWORD PTR [rsp+0x8],rcx
   14000f725:	sub    rsp,0x28
   14000f729:	mov    rax,QWORD PTR [rsp+0x30]
   14000f72e:	mov    rax,QWORD PTR [rax]
   14000f731:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f736:	call   QWORD PTR [rax+0x8]
   14000f739:	add    rsp,0x28
   14000f73d:	ret    
   14000f73e:	int3   
   14000f73f:	int3   
   14000f740:	mov    QWORD PTR [rsp+0x8],rcx
   14000f745:	sub    rsp,0x28
   14000f749:	mov    rax,QWORD PTR [rsp+0x30]
   14000f74e:	mov    rax,QWORD PTR [rax]
   14000f751:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f756:	call   QWORD PTR [rax+0x10]
   14000f759:	add    rsp,0x28
   14000f75d:	ret    
   14000f75e:	int3   
   14000f75f:	int3   
   14000f760:	mov    QWORD PTR [rsp+0x10],rdx
   14000f765:	mov    QWORD PTR [rsp+0x8],rcx
   14000f76a:	sub    rsp,0x38
   14000f76e:	mov    DWORD PTR [rsp+0x20],0x0
   14000f776:	mov    rax,QWORD PTR [rsp+0x40]
   14000f77b:	mov    rax,QWORD PTR [rax]
   14000f77e:	mov    rdx,QWORD PTR [rsp+0x48]
   14000f783:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f788:	call   QWORD PTR [rax+0x18]
   14000f78b:	mov    eax,DWORD PTR [rsp+0x20]
   14000f78f:	or     eax,0x1
   14000f792:	mov    DWORD PTR [rsp+0x20],eax
   14000f796:	mov    rax,QWORD PTR [rsp+0x48]
   14000f79b:	add    rsp,0x38
   14000f79f:	ret    
   14000f7a0:	mov    QWORD PTR [rsp+0x8],rcx
   14000f7a5:	sub    rsp,0x48
   14000f7a9:	mov    rax,QWORD PTR [rsp+0x50]
   14000f7ae:	mov    rax,QWORD PTR [rax+0x10]
   14000f7b2:	mov    QWORD PTR [rsp+0x20],rax
   14000f7b7:	mov    rcx,QWORD PTR [rsp+0x20]
   14000f7bc:	call   0x14001cbb8
   14000f7c1:	mov    rax,QWORD PTR [rsp+0x50]
   14000f7c6:	mov    rax,QWORD PTR [rax+0x20]
   14000f7ca:	mov    QWORD PTR [rsp+0x28],rax
   14000f7cf:	mov    rcx,QWORD PTR [rsp+0x28]
   14000f7d4:	call   0x14001cbb8
   14000f7d9:	mov    rax,QWORD PTR [rsp+0x50]
   14000f7de:	mov    rax,QWORD PTR [rax+0x28]
   14000f7e2:	mov    QWORD PTR [rsp+0x30],rax
   14000f7e7:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f7ec:	call   0x14001cbb8
   14000f7f1:	add    rsp,0x48
   14000f7f5:	ret    
   14000f7f6:	int3   
   14000f7f7:	int3   
   14000f7f8:	int3   
   14000f7f9:	int3   
   14000f7fa:	int3   
   14000f7fb:	int3   
   14000f7fc:	int3   
   14000f7fd:	int3   
   14000f7fe:	int3   
   14000f7ff:	int3   
   14000f800:	mov    BYTE PTR [rsp+0x18],r8b
   14000f805:	mov    QWORD PTR [rsp+0x10],rdx
   14000f80a:	mov    QWORD PTR [rsp+0x8],rcx
   14000f80f:	sub    rsp,0x28
   14000f813:	cmp    QWORD PTR [rsp+0x38],0xffffffffffffffff
   14000f819:	jne    0x14000f820
   14000f81b:	call   0x14001a2e0
   14000f820:	xor    r8d,r8d
   14000f823:	mov    rdx,QWORD PTR [rsp+0x38]
   14000f828:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f82d:	call   0x140005420
   14000f832:	movzx  eax,al
   14000f835:	test   eax,eax
   14000f837:	je     0x14000f85f
   14000f839:	movzx  r9d,BYTE PTR [rsp+0x40]
   14000f83f:	mov    r8,QWORD PTR [rsp+0x38]
   14000f844:	xor    edx,edx
   14000f846:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f84b:	call   0x14000f870
   14000f850:	mov    rdx,QWORD PTR [rsp+0x38]
   14000f855:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f85a:	call   0x1400053d0
   14000f85f:	mov    rax,QWORD PTR [rsp+0x30]
   14000f864:	add    rsp,0x28
   14000f868:	ret    
   14000f869:	int3   
   14000f86a:	int3   
   14000f86b:	int3   
   14000f86c:	int3   
   14000f86d:	int3   
   14000f86e:	int3   
   14000f86f:	int3   
   14000f870:	mov    BYTE PTR [rsp+0x20],r9b
   14000f875:	mov    QWORD PTR [rsp+0x18],r8
   14000f87a:	mov    QWORD PTR [rsp+0x10],rdx
   14000f87f:	mov    QWORD PTR [rsp+0x8],rcx
   14000f884:	sub    rsp,0x28
   14000f888:	cmp    QWORD PTR [rsp+0x40],0x1
   14000f88e:	jne    0x14000f8ae
   14000f890:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f895:	call   0x1400055f0
   14000f89a:	mov    rcx,rax
   14000f89d:	add    rcx,QWORD PTR [rsp+0x38]
   14000f8a2:	lea    rdx,[rsp+0x48]
   14000f8a7:	call   0x140001210
   14000f8ac:	jmp    0x14000f8d0
   14000f8ae:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f8b3:	call   0x1400055f0
   14000f8b8:	mov    rcx,rax
   14000f8bb:	add    rcx,QWORD PTR [rsp+0x38]
   14000f8c0:	movzx  r8d,BYTE PTR [rsp+0x48]
   14000f8c6:	mov    rdx,QWORD PTR [rsp+0x40]
   14000f8cb:	call   0x1400012d0
   14000f8d0:	add    rsp,0x28
   14000f8d4:	ret    
   14000f8d5:	int3   
   14000f8d6:	int3   
   14000f8d7:	int3   
   14000f8d8:	int3   
   14000f8d9:	int3   
   14000f8da:	int3   
   14000f8db:	int3   
   14000f8dc:	int3   
   14000f8dd:	int3   
   14000f8de:	int3   
   14000f8df:	int3   
   14000f8e0:	mov    QWORD PTR [rsp+0x8],rcx
   14000f8e5:	sub    rsp,0x38
   14000f8e9:	mov    rax,QWORD PTR [rsp+0x40]
   14000f8ee:	cmp    QWORD PTR [rax],0x0
   14000f8f2:	je     0x14000f926
   14000f8f4:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f8f9:	mov    rcx,QWORD PTR [rcx]
   14000f8fc:	call   0x140005970
   14000f901:	mov    WORD PTR [rsp+0x20],ax
   14000f906:	call   0x1400011a0
   14000f90b:	mov    WORD PTR [rsp+0x22],ax
   14000f910:	lea    rdx,[rsp+0x20]
   14000f915:	lea    rcx,[rsp+0x22]
   14000f91a:	call   0x140001160
   14000f91f:	movzx  eax,al
   14000f922:	test   eax,eax
   14000f924:	je     0x14000f93d
   14000f926:	mov    rax,QWORD PTR [rsp+0x40]
   14000f92b:	mov    QWORD PTR [rax],0x0
   14000f932:	mov    rax,QWORD PTR [rsp+0x40]
   14000f937:	mov    BYTE PTR [rax+0x8],0x1
   14000f93b:	jmp    0x14000f946
   14000f93d:	mov    rax,QWORD PTR [rsp+0x40]
   14000f942:	mov    BYTE PTR [rax+0x8],0x0
   14000f946:	add    rsp,0x38
   14000f94a:	ret    
   14000f94b:	int3   
   14000f94c:	int3   
   14000f94d:	int3   
   14000f94e:	int3   
   14000f94f:	int3   
   14000f950:	mov    QWORD PTR [rsp+0x8],rcx
   14000f955:	sub    rsp,0x38
   14000f959:	mov    rax,QWORD PTR [rsp+0x40]
   14000f95e:	cmp    QWORD PTR [rax],0x0
   14000f962:	je     0x14000f996
   14000f964:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f969:	mov    rcx,QWORD PTR [rcx]
   14000f96c:	call   0x140003550
   14000f971:	mov    WORD PTR [rsp+0x20],ax
   14000f976:	call   0x1400011a0
   14000f97b:	mov    WORD PTR [rsp+0x24],ax
   14000f980:	lea    rdx,[rsp+0x20]
   14000f985:	lea    rcx,[rsp+0x24]
   14000f98a:	call   0x140001160
   14000f98f:	movzx  eax,al
   14000f992:	test   eax,eax
   14000f994:	je     0x14000f9a4
   14000f996:	mov    rax,QWORD PTR [rsp+0x40]
   14000f99b:	mov    QWORD PTR [rax],0x0
   14000f9a2:	jmp    0x14000f9bc
   14000f9a4:	lea    rcx,[rsp+0x20]
   14000f9a9:	call   0x140001150
   14000f9ae:	movzx  r11d,ax
   14000f9b2:	mov    rax,QWORD PTR [rsp+0x40]
   14000f9b7:	mov    WORD PTR [rax+0xa],r11w
   14000f9bc:	mov    rax,QWORD PTR [rsp+0x40]
   14000f9c1:	mov    BYTE PTR [rax+0x8],0x1
   14000f9c5:	mov    rax,QWORD PTR [rsp+0x40]
   14000f9ca:	mov    ax,WORD PTR [rax+0xa]
   14000f9ce:	add    rsp,0x38
   14000f9d2:	ret    
   14000f9d3:	int3   
   14000f9d4:	int3   
   14000f9d5:	int3   
   14000f9d6:	int3   
   14000f9d7:	int3   
   14000f9d8:	int3   
   14000f9d9:	int3   
   14000f9da:	int3   
   14000f9db:	int3   
   14000f9dc:	int3   
   14000f9dd:	int3   
   14000f9de:	int3   
   14000f9df:	int3   
   14000f9e0:	sub    rsp,0x18
   14000f9e4:	mov    al,BYTE PTR [rsp]
   14000f9e7:	add    rsp,0x18
   14000f9eb:	ret    
   14000f9ec:	int3   
   14000f9ed:	int3   
   14000f9ee:	int3   
   14000f9ef:	int3   
   14000f9f0:	mov    QWORD PTR [rsp+0x20],r9
   14000f9f5:	mov    QWORD PTR [rsp+0x18],r8
   14000f9fa:	mov    QWORD PTR [rsp+0x10],rdx
   14000f9ff:	mov    QWORD PTR [rsp+0x8],rcx
   14000fa04:	sub    rsp,0x28
   14000fa08:	mov    r9,QWORD PTR [rsp+0x48]
   14000fa0d:	mov    r8,QWORD PTR [rsp+0x40]
   14000fa12:	mov    rdx,QWORD PTR [rsp+0x38]
   14000fa17:	mov    rcx,QWORD PTR [rsp+0x30]
   14000fa1c:	call   0x140001250
   14000fa21:	add    rsp,0x28
   14000fa25:	ret    
   14000fa26:	int3   
   14000fa27:	int3   
   14000fa28:	int3   
   14000fa29:	int3   
   14000fa2a:	int3   
   14000fa2b:	int3   
   14000fa2c:	int3   
   14000fa2d:	int3   
   14000fa2e:	int3   
   14000fa2f:	int3   
   14000fa30:	mov    QWORD PTR [rsp+0x20],r9
   14000fa35:	mov    QWORD PTR [rsp+0x18],r8
   14000fa3a:	mov    QWORD PTR [rsp+0x10],rdx
   14000fa3f:	mov    QWORD PTR [rsp+0x8],rcx
   14000fa44:	sub    rsp,0x28
   14000fa48:	mov    r9,QWORD PTR [rsp+0x48]
   14000fa4d:	mov    r8,QWORD PTR [rsp+0x40]
   14000fa52:	mov    rdx,QWORD PTR [rsp+0x38]
   14000fa57:	mov    rcx,QWORD PTR [rsp+0x30]
   14000fa5c:	call   0x140001070
   14000fa61:	add    rsp,0x28
   14000fa65:	ret    
   14000fa66:	int3   
   14000fa67:	int3   
   14000fa68:	int3   
   14000fa69:	int3   
   14000fa6a:	int3   
   14000fa6b:	int3   
   14000fa6c:	int3   
   14000fa6d:	int3   
   14000fa6e:	int3   
   14000fa6f:	int3   
   14000fa70:	mov    QWORD PTR [rsp+0x20],r9
   14000fa75:	mov    QWORD PTR [rsp+0x18],r8
   14000fa7a:	mov    QWORD PTR [rsp+0x10],rdx
   14000fa7f:	mov    QWORD PTR [rsp+0x8],rcx
   14000fa84:	sub    rsp,0x28
   14000fa88:	mov    r9,QWORD PTR [rsp+0x48]
   14000fa8d:	mov    r8,QWORD PTR [rsp+0x40]
   14000fa92:	mov    rdx,QWORD PTR [rsp+0x38]
   14000fa97:	mov    rcx,QWORD PTR [rsp+0x30]
   14000fa9c:	call   0x140001290
   14000faa1:	add    rsp,0x28
   14000faa5:	ret    
   14000faa6:	int3   
   14000faa7:	int3   
   14000faa8:	int3   
   14000faa9:	int3   
   14000faaa:	int3   
   14000faab:	int3   
   14000faac:	int3   
   14000faad:	int3   
   14000faae:	int3   
   14000faaf:	int3   
   14000fab0:	mov    QWORD PTR [rsp+0x20],r9
   14000fab5:	mov    QWORD PTR [rsp+0x18],r8
   14000faba:	mov    QWORD PTR [rsp+0x10],rdx
   14000fabf:	mov    QWORD PTR [rsp+0x8],rcx
   14000fac4:	sub    rsp,0x28
   14000fac8:	mov    r9,QWORD PTR [rsp+0x48]
   14000facd:	mov    r8,QWORD PTR [rsp+0x40]
   14000fad2:	mov    rdx,QWORD PTR [rsp+0x38]
   14000fad7:	mov    rcx,QWORD PTR [rsp+0x30]
   14000fadc:	call   0x1400010e0
   14000fae1:	add    rsp,0x28
   14000fae5:	ret    
   14000fae6:	int3   
   14000fae7:	int3   
   14000fae8:	int3   
   14000fae9:	int3   
   14000faea:	int3   
   14000faeb:	int3   
   14000faec:	int3   
   14000faed:	int3   
   14000faee:	int3   
   14000faef:	int3   
   14000faf0:	mov    BYTE PTR [rsp+0x20],r9b
   14000faf5:	mov    QWORD PTR [rsp+0x18],r8
   14000fafa:	mov    QWORD PTR [rsp+0x10],rdx
   14000faff:	mov    QWORD PTR [rsp+0x8],rcx
   14000fb04:	sub    rsp,0x28
   14000fb08:	jmp    0x14000fb18
   14000fb0a:	mov    rax,QWORD PTR [rsp+0x30]
   14000fb0f:	add    rax,0x28
   14000fb13:	mov    QWORD PTR [rsp+0x30],rax
   14000fb18:	mov    rax,QWORD PTR [rsp+0x38]
   14000fb1d:	cmp    QWORD PTR [rsp+0x30],rax
   14000fb22:	je     0x14000fb35
   14000fb24:	mov    rdx,QWORD PTR [rsp+0x30]
   14000fb29:	mov    rcx,QWORD PTR [rsp+0x40]
   14000fb2e:	call   0x140010650
   14000fb33:	jmp    0x14000fb0a
   14000fb35:	add    rsp,0x28
   14000fb39:	ret    
   14000fb3a:	int3   
   14000fb3b:	int3   
   14000fb3c:	int3   
   14000fb3d:	int3   
   14000fb3e:	int3   
   14000fb3f:	int3   
   14000fb40:	mov    QWORD PTR [rsp+0x20],r9
   14000fb45:	mov    QWORD PTR [rsp+0x18],r8
   14000fb4a:	mov    QWORD PTR [rsp+0x10],rdx
   14000fb4f:	mov    QWORD PTR [rsp+0x8],rcx
   14000fb54:	sub    rsp,0x38
   14000fb58:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000fb61:	mov    rax,QWORD PTR [rsp+0x40]
   14000fb66:	mov    QWORD PTR [rsp+0x20],rax
   14000fb6b:	jmp    0x14000fb89
   14000fb6d:	mov    rax,QWORD PTR [rsp+0x48]
   14000fb72:	sub    rax,0x1
   14000fb76:	mov    QWORD PTR [rsp+0x48],rax
   14000fb7b:	mov    rax,QWORD PTR [rsp+0x40]
   14000fb80:	add    rax,0x28
   14000fb84:	mov    QWORD PTR [rsp+0x40],rax
   14000fb89:	cmp    QWORD PTR [rsp+0x48],0x0
   14000fb8f:	jbe    0x14000fba7
   14000fb91:	mov    r8,QWORD PTR [rsp+0x50]
   14000fb96:	mov    rdx,QWORD PTR [rsp+0x40]
   14000fb9b:	mov    rcx,QWORD PTR [rsp+0x58]
   14000fba0:	call   0x140010620
   14000fba5:	jmp    0x14000fb6d
   14000fba7:	add    rsp,0x38
   14000fbab:	ret    
   14000fbac:	int3   
   14000fbad:	int3   
   14000fbae:	int3   
   14000fbaf:	int3   
   14000fbb0:	mov    QWORD PTR [rsp+0x10],rdx
   14000fbb5:	mov    QWORD PTR [rsp+0x8],rcx
   14000fbba:	sub    rsp,0x18
   14000fbbe:	mov    al,BYTE PTR [rsp]
   14000fbc1:	add    rsp,0x18
   14000fbc5:	ret    
   14000fbc6:	int3   
   14000fbc7:	int3   
   14000fbc8:	int3   
   14000fbc9:	int3   
   14000fbca:	int3   
   14000fbcb:	int3   
   14000fbcc:	int3   
   14000fbcd:	int3   
   14000fbce:	int3   
   14000fbcf:	int3   
   14000fbd0:	mov    BYTE PTR [rsp+0x20],r9b
   14000fbd5:	mov    QWORD PTR [rsp+0x18],r8
   14000fbda:	mov    QWORD PTR [rsp+0x10],rdx
   14000fbdf:	mov    QWORD PTR [rsp+0x8],rcx
   14000fbe4:	sub    rsp,0x28
   14000fbe8:	jmp    0x14000fbf8
   14000fbea:	mov    rax,QWORD PTR [rsp+0x30]
   14000fbef:	add    rax,0x10
   14000fbf3:	mov    QWORD PTR [rsp+0x30],rax
   14000fbf8:	mov    rax,QWORD PTR [rsp+0x38]
   14000fbfd:	cmp    QWORD PTR [rsp+0x30],rax
   14000fc02:	je     0x14000fc15
   14000fc04:	mov    rdx,QWORD PTR [rsp+0x30]
   14000fc09:	mov    rcx,QWORD PTR [rsp+0x40]
   14000fc0e:	call   0x140010670
   14000fc13:	jmp    0x14000fbea
   14000fc15:	add    rsp,0x28
   14000fc19:	ret    
   14000fc1a:	int3   
   14000fc1b:	int3   
   14000fc1c:	int3   
   14000fc1d:	int3   
   14000fc1e:	int3   
   14000fc1f:	int3   
   14000fc20:	mov    BYTE PTR [rsp+0x20],r9b
   14000fc25:	mov    QWORD PTR [rsp+0x18],r8
   14000fc2a:	mov    QWORD PTR [rsp+0x10],rdx
   14000fc2f:	mov    QWORD PTR [rsp+0x8],rcx
   14000fc34:	sub    rsp,0x28
   14000fc38:	jmp    0x14000fc48
   14000fc3a:	mov    rax,QWORD PTR [rsp+0x30]
   14000fc3f:	add    rax,0x50
   14000fc43:	mov    QWORD PTR [rsp+0x30],rax
   14000fc48:	mov    rax,QWORD PTR [rsp+0x38]
   14000fc4d:	cmp    QWORD PTR [rsp+0x30],rax
   14000fc52:	je     0x14000fc65
   14000fc54:	mov    rdx,QWORD PTR [rsp+0x30]
   14000fc59:	mov    rcx,QWORD PTR [rsp+0x40]
   14000fc5e:	call   0x1400106c0
   14000fc63:	jmp    0x14000fc3a
   14000fc65:	add    rsp,0x28
   14000fc69:	ret    
   14000fc6a:	int3   
   14000fc6b:	int3   
   14000fc6c:	int3   
   14000fc6d:	int3   
   14000fc6e:	int3   
   14000fc6f:	int3   
   14000fc70:	mov    QWORD PTR [rsp+0x20],r9
   14000fc75:	mov    QWORD PTR [rsp+0x18],r8
   14000fc7a:	mov    QWORD PTR [rsp+0x10],rdx
   14000fc7f:	mov    QWORD PTR [rsp+0x8],rcx
   14000fc84:	sub    rsp,0x38
   14000fc88:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000fc91:	mov    rax,QWORD PTR [rsp+0x40]
   14000fc96:	mov    QWORD PTR [rsp+0x20],rax
   14000fc9b:	jmp    0x14000fcb9
   14000fc9d:	mov    rax,QWORD PTR [rsp+0x48]
   14000fca2:	sub    rax,0x1
   14000fca6:	mov    QWORD PTR [rsp+0x48],rax
   14000fcab:	mov    rax,QWORD PTR [rsp+0x40]
   14000fcb0:	add    rax,0x50
   14000fcb4:	mov    QWORD PTR [rsp+0x40],rax
   14000fcb9:	cmp    QWORD PTR [rsp+0x48],0x0
   14000fcbf:	jbe    0x14000fcd7
   14000fcc1:	mov    r8,QWORD PTR [rsp+0x50]
   14000fcc6:	mov    rdx,QWORD PTR [rsp+0x40]
   14000fccb:	mov    rcx,QWORD PTR [rsp+0x58]
   14000fcd0:	call   0x140010690
   14000fcd5:	jmp    0x14000fc9d
   14000fcd7:	add    rsp,0x38
   14000fcdb:	ret    
   14000fcdc:	int3   
   14000fcdd:	int3   
   14000fcde:	int3   
   14000fcdf:	int3   
   14000fce0:	mov    QWORD PTR [rsp+0x20],r9
   14000fce5:	mov    QWORD PTR [rsp+0x18],r8
   14000fcea:	mov    QWORD PTR [rsp+0x10],rdx
   14000fcef:	mov    QWORD PTR [rsp+0x8],rcx
   14000fcf4:	push   rdi
   14000fcf5:	sub    rsp,0x40
   14000fcf9:	lea    rdi,[rsp+0x30]
   14000fcfe:	xor    eax,eax
   14000fd00:	mov    ecx,0x1
   14000fd05:	rep stos BYTE PTR es:[rdi],al
   14000fd07:	lea    rcx,[rsp+0x60]
   14000fd0c:	call   0x14000fdd0
   14000fd11:	mov    BYTE PTR [rsp+0x31],al
   14000fd15:	lea    rcx,[rsp+0x58]
   14000fd1a:	call   0x14000ff10
   14000fd1f:	mov    rdi,rax
   14000fd22:	lea    rcx,[rsp+0x50]
   14000fd27:	call   0x14000ff10
   14000fd2c:	mov    rcx,rax
   14000fd2f:	movzx  eax,BYTE PTR [rsp+0x30]
   14000fd34:	mov    BYTE PTR [rsp+0x28],al
   14000fd38:	movzx  eax,BYTE PTR [rsp+0x31]
   14000fd3d:	mov    BYTE PTR [rsp+0x20],al
   14000fd41:	mov    r9,QWORD PTR [rsp+0x68]
   14000fd46:	mov    r8,QWORD PTR [rsp+0x60]
   14000fd4b:	mov    rdx,rdi
   14000fd4e:	call   0x140010d90
   14000fd53:	add    rsp,0x40
   14000fd57:	pop    rdi
   14000fd58:	ret    
   14000fd59:	int3   
   14000fd5a:	int3   
   14000fd5b:	int3   
   14000fd5c:	int3   
   14000fd5d:	int3   
   14000fd5e:	int3   
   14000fd5f:	int3   
   14000fd60:	mov    QWORD PTR [rsp+0x18],r8
   14000fd65:	mov    QWORD PTR [rsp+0x10],rdx
   14000fd6a:	mov    QWORD PTR [rsp+0x8],rcx
   14000fd6f:	sub    rsp,0x28
   14000fd73:	jmp    0x14000fd83
   14000fd75:	mov    rax,QWORD PTR [rsp+0x30]
   14000fd7a:	add    rax,0x28
   14000fd7e:	mov    QWORD PTR [rsp+0x30],rax
   14000fd83:	mov    rax,QWORD PTR [rsp+0x38]
   14000fd88:	cmp    QWORD PTR [rsp+0x30],rax
   14000fd8d:	je     0x14000fda0
   14000fd8f:	mov    rdx,QWORD PTR [rsp+0x40]
   14000fd94:	mov    rcx,QWORD PTR [rsp+0x30]
   14000fd99:	call   0x140005d80
   14000fd9e:	jmp    0x14000fd75
   14000fda0:	add    rsp,0x28
   14000fda4:	ret    
   14000fda5:	int3   
   14000fda6:	int3   
   14000fda7:	int3   
   14000fda8:	int3   
   14000fda9:	int3   
   14000fdaa:	int3   
   14000fdab:	int3   
   14000fdac:	int3   
   14000fdad:	int3   
   14000fdae:	int3   
   14000fdaf:	int3   
   14000fdb0:	mov    QWORD PTR [rsp+0x18],r8
   14000fdb5:	mov    QWORD PTR [rsp+0x10],rdx
   14000fdba:	mov    QWORD PTR [rsp+0x8],rcx
   14000fdbf:	sub    rsp,0x18
   14000fdc3:	mov    rax,QWORD PTR [rsp+0x20]
   14000fdc8:	add    rsp,0x18
   14000fdcc:	ret    
   14000fdcd:	int3   
   14000fdce:	int3   
   14000fdcf:	int3   
   14000fdd0:	mov    QWORD PTR [rsp+0x8],rcx
   14000fdd5:	sub    rsp,0x18
   14000fdd9:	mov    al,BYTE PTR [rsp]
   14000fddc:	add    rsp,0x18
   14000fde0:	ret    
   14000fde1:	int3   
   14000fde2:	int3   
   14000fde3:	int3   
   14000fde4:	int3   
   14000fde5:	int3   
   14000fde6:	int3   
   14000fde7:	int3   
   14000fde8:	int3   
   14000fde9:	int3   
   14000fdea:	int3   
   14000fdeb:	int3   
   14000fdec:	int3   
   14000fded:	int3   
   14000fdee:	int3   
   14000fdef:	int3   
   14000fdf0:	mov    BYTE PTR [rsp+0x20],r9b
   14000fdf5:	mov    QWORD PTR [rsp+0x18],r8
   14000fdfa:	mov    QWORD PTR [rsp+0x10],rdx
   14000fdff:	mov    QWORD PTR [rsp+0x8],rcx
   14000fe04:	push   rdi
   14000fe05:	sub    rsp,0x40
   14000fe09:	mov    rcx,QWORD PTR [rsp+0x50]
   14000fe0e:	mov    rax,QWORD PTR [rsp+0x58]
   14000fe13:	sub    rax,rcx
   14000fe16:	cqo    
   14000fe18:	mov    ecx,0x28
   14000fe1d:	idiv   rcx
   14000fe20:	mov    rcx,rax
   14000fe23:	imul   rcx,rcx,0x28
   14000fe27:	mov    rax,QWORD PTR [rsp+0x60]
   14000fe2c:	sub    rax,rcx
   14000fe2f:	mov    QWORD PTR [rsp+0x30],rax
   14000fe34:	lea    rdi,[rsp+0x38]
   14000fe39:	xor    eax,eax
   14000fe3b:	mov    ecx,0x1
   14000fe40:	rep stos BYTE PTR es:[rdi],al
   14000fe42:	lea    rcx,[rsp+0x60]
   14000fe47:	call   0x14000ff10
   14000fe4c:	mov    r8,rax
   14000fe4f:	movzx  eax,BYTE PTR [rsp+0x38]
   14000fe54:	mov    BYTE PTR [rsp+0x28],al
   14000fe58:	movzx  eax,BYTE PTR [rsp+0x70]
   14000fe5d:	mov    BYTE PTR [rsp+0x20],al
   14000fe61:	movzx  r9d,BYTE PTR [rsp+0x39]
   14000fe67:	mov    rdx,QWORD PTR [rsp+0x58]
   14000fe6c:	mov    rcx,QWORD PTR [rsp+0x50]
   14000fe71:	call   0x140010e80
   14000fe76:	mov    rax,QWORD PTR [rsp+0x30]
   14000fe7b:	add    rsp,0x40
   14000fe7f:	pop    rdi
   14000fe80:	ret    
   14000fe81:	int3   
   14000fe82:	int3   
   14000fe83:	int3   
   14000fe84:	int3   
   14000fe85:	int3   
   14000fe86:	int3   
   14000fe87:	int3   
   14000fe88:	int3   
   14000fe89:	int3   
   14000fe8a:	int3   
   14000fe8b:	int3   
   14000fe8c:	int3   
   14000fe8d:	int3   
   14000fe8e:	int3   
   14000fe8f:	int3   
   14000fe90:	mov    QWORD PTR [rsp+0x20],r9
   14000fe95:	mov    QWORD PTR [rsp+0x18],r8
   14000fe9a:	mov    QWORD PTR [rsp+0x10],rdx
   14000fe9f:	mov    QWORD PTR [rsp+0x8],rcx
   14000fea4:	push   rdi
   14000fea5:	sub    rsp,0x40
   14000fea9:	lea    rdi,[rsp+0x30]
   14000feae:	xor    eax,eax
   14000feb0:	mov    ecx,0x1
   14000feb5:	rep stos BYTE PTR es:[rdi],al
   14000feb7:	lea    rcx,[rsp+0x60]
   14000febc:	call   0x14000fdd0
   14000fec1:	mov    BYTE PTR [rsp+0x31],al
   14000fec5:	lea    rcx,[rsp+0x58]
   14000feca:	call   0x14000ff10
   14000fecf:	mov    rdi,rax
   14000fed2:	lea    rcx,[rsp+0x50]
   14000fed7:	call   0x14000ff10
   14000fedc:	mov    rcx,rax
   14000fedf:	movzx  eax,BYTE PTR [rsp+0x30]
   14000fee4:	mov    BYTE PTR [rsp+0x28],al
   14000fee8:	movzx  eax,BYTE PTR [rsp+0x31]
   14000feed:	mov    BYTE PTR [rsp+0x20],al
   14000fef1:	mov    r9,QWORD PTR [rsp+0x68]
   14000fef6:	mov    r8,QWORD PTR [rsp+0x60]
   14000fefb:	mov    rdx,rdi
   14000fefe:	call   0x140010ee0
   14000ff03:	add    rsp,0x40
   14000ff07:	pop    rdi
   14000ff08:	ret    
   14000ff09:	int3   
   14000ff0a:	int3   
   14000ff0b:	int3   
   14000ff0c:	int3   
   14000ff0d:	int3   
   14000ff0e:	int3   
   14000ff0f:	int3   
   14000ff10:	mov    QWORD PTR [rsp+0x8],rcx
   14000ff15:	sub    rsp,0x38
   14000ff19:	movzx  edx,BYTE PTR [rsp+0x20]
   14000ff1e:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ff23:	call   0x140013b00
   14000ff28:	add    rsp,0x38
   14000ff2c:	ret    
   14000ff2d:	int3   
   14000ff2e:	int3   
   14000ff2f:	int3   
   14000ff30:	mov    QWORD PTR [rsp+0x18],r8
   14000ff35:	mov    QWORD PTR [rsp+0x10],rdx
   14000ff3a:	mov    QWORD PTR [rsp+0x8],rcx
   14000ff3f:	sub    rsp,0x28
   14000ff43:	jmp    0x14000ff53
   14000ff45:	mov    rax,QWORD PTR [rsp+0x30]
   14000ff4a:	add    rax,0x50
   14000ff4e:	mov    QWORD PTR [rsp+0x30],rax
   14000ff53:	mov    rax,QWORD PTR [rsp+0x38]
   14000ff58:	cmp    QWORD PTR [rsp+0x30],rax
   14000ff5d:	je     0x14000ff70
   14000ff5f:	mov    rdx,QWORD PTR [rsp+0x40]
   14000ff64:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ff69:	call   0x1400105e0
   14000ff6e:	jmp    0x14000ff45
   14000ff70:	add    rsp,0x28
   14000ff74:	ret    
   14000ff75:	int3   
   14000ff76:	int3   
   14000ff77:	int3   
   14000ff78:	int3   
   14000ff79:	int3   
   14000ff7a:	int3   
   14000ff7b:	int3   
   14000ff7c:	int3   
   14000ff7d:	int3   
   14000ff7e:	int3   
   14000ff7f:	int3   
   14000ff80:	mov    BYTE PTR [rsp+0x20],r9b
   14000ff85:	mov    QWORD PTR [rsp+0x18],r8
   14000ff8a:	mov    QWORD PTR [rsp+0x10],rdx
   14000ff8f:	mov    QWORD PTR [rsp+0x8],rcx
   14000ff94:	push   rdi
   14000ff95:	sub    rsp,0x40
   14000ff99:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ff9e:	mov    rax,QWORD PTR [rsp+0x58]
   14000ffa3:	sub    rax,rcx
   14000ffa6:	cqo    
   14000ffa8:	mov    ecx,0x50
   14000ffad:	idiv   rcx
   14000ffb0:	mov    rcx,rax
   14000ffb3:	imul   rcx,rcx,0x50
   14000ffb7:	mov    rax,QWORD PTR [rsp+0x60]
   14000ffbc:	sub    rax,rcx
   14000ffbf:	mov    QWORD PTR [rsp+0x30],rax
   14000ffc4:	lea    rdi,[rsp+0x38]
   14000ffc9:	xor    eax,eax
   14000ffcb:	mov    ecx,0x1
   14000ffd0:	rep stos BYTE PTR es:[rdi],al
   14000ffd2:	lea    rcx,[rsp+0x60]
   14000ffd7:	call   0x14000ff10
   14000ffdc:	mov    r8,rax
   14000ffdf:	movzx  eax,BYTE PTR [rsp+0x38]
   14000ffe4:	mov    BYTE PTR [rsp+0x28],al
   14000ffe8:	movzx  eax,BYTE PTR [rsp+0x70]
   14000ffed:	mov    BYTE PTR [rsp+0x20],al
   14000fff1:	movzx  r9d,BYTE PTR [rsp+0x39]
   14000fff7:	mov    rdx,QWORD PTR [rsp+0x58]
   14000fffc:	mov    rcx,QWORD PTR [rsp+0x50]
   140010001:	call   0x140010fe0
   140010006:	mov    rax,QWORD PTR [rsp+0x30]
   14001000b:	add    rsp,0x40
   14001000f:	pop    rdi
   140010010:	ret    
   140010011:	int3   
   140010012:	int3   
   140010013:	int3   
   140010014:	int3   
   140010015:	int3   
   140010016:	int3   
   140010017:	int3   
   140010018:	int3   
   140010019:	int3   
   14001001a:	int3   
   14001001b:	int3   
   14001001c:	int3   
   14001001d:	int3   
   14001001e:	int3   
   14001001f:	int3   
   140010020:	mov    QWORD PTR [rsp+0x8],rcx
   140010025:	sub    rsp,0x78
   140010029:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   140010032:	xor    edx,edx
   140010034:	lea    rcx,[rsp+0x30]
   140010039:	call   0x1400194bc
   14001003e:	nop
   14001003f:	mov    rax,QWORD PTR [rip+0x3ca52]        # 0x14004ca98
   140010046:	mov    QWORD PTR [rsp+0x38],rax
   14001004b:	lea    rcx,[rip+0x3d2ae]        # 0x14004d300
   140010052:	call   0x140001960
   140010057:	mov    QWORD PTR [rsp+0x28],rax
   14001005c:	mov    rdx,QWORD PTR [rsp+0x28]
   140010061:	mov    rcx,QWORD PTR [rsp+0x80]
   140010069:	call   0x140001c40
   14001006e:	mov    QWORD PTR [rsp+0x20],rax
   140010073:	cmp    QWORD PTR [rsp+0x20],0x0
   140010079:	je     0x140010080
   14001007b:	jmp    0x140010105
   140010080:	cmp    QWORD PTR [rsp+0x38],0x0
   140010086:	je     0x140010094
   140010088:	mov    rax,QWORD PTR [rsp+0x38]
   14001008d:	mov    QWORD PTR [rsp+0x20],rax
   140010092:	jmp    0x140010105
   140010094:	mov    rdx,QWORD PTR [rsp+0x80]
   14001009c:	lea    rcx,[rsp+0x38]
   1400100a1:	call   0x1400106e0
   1400100a6:	cmp    rax,0xffffffffffffffff
   1400100aa:	jne    0x1400100d1
   1400100ac:	lea    rdx,[rip+0x2f24d]        # 0x14003f300
   1400100b3:	lea    rcx,[rsp+0x48]
   1400100b8:	call   0x14001c97c
   1400100bd:	lea    rdx,[rip+0x37964]        # 0x140047a28
   1400100c4:	lea    rcx,[rsp+0x48]
   1400100c9:	call   0x14001e5c0
   1400100ce:	nop
   1400100cf:	jmp    0x140010105
   1400100d1:	mov    rax,QWORD PTR [rsp+0x38]
   1400100d6:	mov    QWORD PTR [rsp+0x20],rax
   1400100db:	mov    rax,QWORD PTR [rsp+0x38]
   1400100e0:	mov    QWORD PTR [rip+0x3c9b1],rax        # 0x14004ca98
   1400100e7:	mov    rax,QWORD PTR [rsp+0x38]
   1400100ec:	mov    QWORD PTR [rsp+0x40],rax
   1400100f1:	mov    rcx,QWORD PTR [rsp+0x40]
   1400100f6:	call   0x1400019c0
   1400100fb:	mov    rcx,QWORD PTR [rsp+0x40]
   140010100:	call   0x140001aa0
   140010105:	mov    rax,QWORD PTR [rsp+0x20]
   14001010a:	mov    QWORD PTR [rsp+0x60],rax
   14001010f:	lea    rcx,[rsp+0x30]
   140010114:	call   0x1400194ec
   140010119:	mov    rax,QWORD PTR [rsp+0x60]
   14001011e:	add    rsp,0x78
   140010122:	ret    
   140010123:	int3   
   140010124:	int3   
   140010125:	int3   
   140010126:	int3   
   140010127:	int3   
   140010128:	int3   
   140010129:	int3   
   14001012a:	int3   
   14001012b:	int3   
   14001012c:	int3   
   14001012d:	int3   
   14001012e:	int3   
   14001012f:	int3   
   140010130:	mov    QWORD PTR [rsp+0x8],rcx
   140010135:	sub    rsp,0x78
   140010139:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   140010142:	xor    edx,edx
   140010144:	lea    rcx,[rsp+0x30]
   140010149:	call   0x1400194bc
   14001014e:	nop
   14001014f:	mov    rax,QWORD PTR [rip+0x3c94a]        # 0x14004caa0
   140010156:	mov    QWORD PTR [rsp+0x38],rax
   14001015b:	lea    rcx,[rip+0x3d196]        # 0x14004d2f8
   140010162:	call   0x140001960
   140010167:	mov    QWORD PTR [rsp+0x28],rax
   14001016c:	mov    rdx,QWORD PTR [rsp+0x28]
   140010171:	mov    rcx,QWORD PTR [rsp+0x80]
   140010179:	call   0x140001c40
   14001017e:	mov    QWORD PTR [rsp+0x20],rax
   140010183:	cmp    QWORD PTR [rsp+0x20],0x0
   140010189:	je     0x140010190
   14001018b:	jmp    0x140010215
   140010190:	cmp    QWORD PTR [rsp+0x38],0x0
   140010196:	je     0x1400101a4
   140010198:	mov    rax,QWORD PTR [rsp+0x38]
   14001019d:	mov    QWORD PTR [rsp+0x20],rax
   1400101a2:	jmp    0x140010215
   1400101a4:	mov    rdx,QWORD PTR [rsp+0x80]
   1400101ac:	lea    rcx,[rsp+0x38]
   1400101b1:	call   0x1400108e0
   1400101b6:	cmp    rax,0xffffffffffffffff
   1400101ba:	jne    0x1400101e1
   1400101bc:	lea    rdx,[rip+0x2f13d]        # 0x14003f300
   1400101c3:	lea    rcx,[rsp+0x48]
   1400101c8:	call   0x14001c97c
   1400101cd:	lea    rdx,[rip+0x37854]        # 0x140047a28
   1400101d4:	lea    rcx,[rsp+0x48]
   1400101d9:	call   0x14001e5c0
   1400101de:	nop
   1400101df:	jmp    0x140010215
   1400101e1:	mov    rax,QWORD PTR [rsp+0x38]
   1400101e6:	mov    QWORD PTR [rsp+0x20],rax
   1400101eb:	mov    rax,QWORD PTR [rsp+0x38]
   1400101f0:	mov    QWORD PTR [rip+0x3c8a9],rax        # 0x14004caa0
   1400101f7:	mov    rax,QWORD PTR [rsp+0x38]
   1400101fc:	mov    QWORD PTR [rsp+0x40],rax
   140010201:	mov    rcx,QWORD PTR [rsp+0x40]
   140010206:	call   0x1400019c0
   14001020b:	mov    rcx,QWORD PTR [rsp+0x40]
   140010210:	call   0x140001aa0
   140010215:	mov    rax,QWORD PTR [rsp+0x20]
   14001021a:	mov    QWORD PTR [rsp+0x60],rax
   14001021f:	lea    rcx,[rsp+0x30]
   140010224:	call   0x1400194ec
   140010229:	mov    rax,QWORD PTR [rsp+0x60]
   14001022e:	add    rsp,0x78
   140010232:	ret    
   140010233:	int3   
   140010234:	int3   
   140010235:	int3   
   140010236:	int3   
   140010237:	int3   
   140010238:	int3   
   140010239:	int3   
   14001023a:	int3   
   14001023b:	int3   
   14001023c:	int3   
   14001023d:	int3   
   14001023e:	int3   
   14001023f:	int3   
   140010240:	mov    QWORD PTR [rsp+0x20],r9
   140010245:	mov    QWORD PTR [rsp+0x18],r8
   14001024a:	mov    QWORD PTR [rsp+0x10],rdx
   14001024f:	mov    QWORD PTR [rsp+0x8],rcx
   140010254:	push   rbx
   140010255:	sub    rsp,0xb0
   14001025c:	mov    QWORD PTR [rsp+0x88],0xfffffffffffffffe
   140010268:	mov    rax,QWORD PTR [rip+0x391f1]        # 0x140049460
   14001026f:	xor    rax,rsp
   140010272:	mov    QWORD PTR [rsp+0xa0],rax
   14001027a:	mov    QWORD PTR [rsp+0x58],0x0
   140010283:	jmp    0x140010293
   140010285:	mov    rax,QWORD PTR [rsp+0x58]
   14001028a:	add    rax,0x1
   14001028e:	mov    QWORD PTR [rsp+0x58],rax
   140010293:	mov    rcx,QWORD PTR [rsp+0xd8]
   14001029b:	mov    rax,QWORD PTR [rsp+0x58]
   1400102a0:	movzx  eax,WORD PTR [rcx+rax*2]
   1400102a4:	test   eax,eax
   1400102a6:	je     0x1400102de
   1400102a8:	mov    rcx,QWORD PTR [rsp+0xd8]
   1400102b0:	mov    rax,QWORD PTR [rsp+0x58]
   1400102b5:	movzx  ecx,WORD PTR [rcx+rax*2]
   1400102b9:	mov    rax,QWORD PTR [rsp+0xd8]
   1400102c1:	movzx  eax,WORD PTR [rax]
   1400102c4:	cmp    ecx,eax
   1400102c6:	jne    0x1400102dc
   1400102c8:	mov    rax,QWORD PTR [rsp+0xd0]
   1400102d0:	add    rax,0x1
   1400102d4:	mov    QWORD PTR [rsp+0xd0],rax
   1400102dc:	jmp    0x140010285
   1400102de:	xor    r8d,r8d
   1400102e1:	mov    rdx,QWORD PTR [rsp+0xd0]
   1400102e9:	lea    rcx,[rsp+0x30]
   1400102ee:	call   0x14000f580
   1400102f3:	nop
   1400102f4:	mov    DWORD PTR [rsp+0x20],0xfffffffe
   1400102fc:	mov    QWORD PTR [rsp+0x60],0x1
   140010305:	jmp    0x14001032a
   140010307:	mov    rax,QWORD PTR [rsp+0x60]
   14001030c:	add    rax,0x1
   140010310:	mov    QWORD PTR [rsp+0x60],rax
   140010315:	mov    rcx,QWORD PTR [rsp+0xc0]
   14001031d:	call   0x14000f700
   140010322:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001032a:	mov    BYTE PTR [rsp+0x70],0x0
   14001032f:	mov    QWORD PTR [rsp+0x78],0x0
   140010338:	mov    QWORD PTR [rsp+0x68],0x0
   140010341:	jmp    0x140010351
   140010343:	mov    rax,QWORD PTR [rsp+0x68]
   140010348:	add    rax,0x1
   14001034c:	mov    QWORD PTR [rsp+0x68],rax
   140010351:	mov    rax,QWORD PTR [rsp+0xd0]
   140010359:	cmp    QWORD PTR [rsp+0x68],rax
   14001035e:	jae    0x140010507
   140010364:	jmp    0x140010374
   140010366:	mov    rax,QWORD PTR [rsp+0x78]
   14001036b:	add    rax,0x1
   14001036f:	mov    QWORD PTR [rsp+0x78],rax
   140010374:	mov    rcx,QWORD PTR [rsp+0xd8]
   14001037c:	mov    rax,QWORD PTR [rsp+0x78]
   140010381:	movzx  eax,WORD PTR [rcx+rax*2]
   140010385:	test   eax,eax
   140010387:	je     0x1400103ab
   140010389:	mov    rcx,QWORD PTR [rsp+0xd8]
   140010391:	mov    rax,QWORD PTR [rsp+0x78]
   140010396:	movzx  ecx,WORD PTR [rcx+rax*2]
   14001039a:	mov    rax,QWORD PTR [rsp+0xd8]
   1400103a2:	movzx  eax,WORD PTR [rax]
   1400103a5:	cmp    ecx,eax
   1400103a7:	je     0x1400103ab
   1400103a9:	jmp    0x140010366
   1400103ab:	mov    rdx,QWORD PTR [rsp+0x68]
   1400103b0:	lea    rcx,[rsp+0x30]
   1400103b5:	call   0x14000f690
   1400103ba:	movsx  eax,BYTE PTR [rax]
   1400103bd:	test   eax,eax
   1400103bf:	je     0x1400103e6
   1400103c1:	mov    rdx,QWORD PTR [rsp+0x68]
   1400103c6:	lea    rcx,[rsp+0x30]
   1400103cb:	call   0x14000f690
   1400103d0:	movsx  rcx,BYTE PTR [rax]
   1400103d4:	mov    rax,QWORD PTR [rsp+0x78]
   1400103d9:	add    rax,rcx
   1400103dc:	mov    QWORD PTR [rsp+0x78],rax
   1400103e1:	jmp    0x140010502
   1400103e6:	mov    rcx,QWORD PTR [rsp+0x60]
   1400103eb:	mov    rax,QWORD PTR [rsp+0x78]
   1400103f0:	add    rax,rcx
   1400103f3:	mov    QWORD PTR [rsp+0x78],rax
   1400103f8:	mov    rcx,QWORD PTR [rsp+0xd8]
   140010400:	mov    rax,QWORD PTR [rsp+0x78]
   140010405:	movzx  ecx,WORD PTR [rcx+rax*2]
   140010409:	mov    rax,QWORD PTR [rsp+0xd8]
   140010411:	movzx  eax,WORD PTR [rax]
   140010414:	cmp    ecx,eax
   140010416:	je     0x14001042d
   140010418:	mov    rcx,QWORD PTR [rsp+0xd8]
   140010420:	mov    rax,QWORD PTR [rsp+0x78]
   140010425:	movzx  eax,WORD PTR [rcx+rax*2]
   140010429:	test   eax,eax
   14001042b:	jne    0x14001047a
   14001042d:	cmp    QWORD PTR [rsp+0x60],0x7f
   140010433:	jae    0x140010444
   140010435:	mov    rax,QWORD PTR [rsp+0x60]
   14001043a:	mov    QWORD PTR [rsp+0x90],rax
   140010442:	jmp    0x140010450
   140010444:	mov    QWORD PTR [rsp+0x90],0x7f
   140010450:	mov    rdx,QWORD PTR [rsp+0x68]
   140010455:	lea    rcx,[rsp+0x30]
   14001045a:	call   0x14000f690
   14001045f:	mov    r11,rax
   140010462:	movzx  eax,BYTE PTR [rsp+0x90]
   14001046a:	mov    BYTE PTR [r11],al
   14001046d:	mov    eax,DWORD PTR [rsp+0x68]
   140010471:	mov    DWORD PTR [rsp+0x20],eax
   140010475:	jmp    0x140010502
   14001047a:	mov    rdx,QWORD PTR [rsp+0xc8]
   140010482:	mov    rcx,QWORD PTR [rsp+0xc0]
   14001048a:	call   0x140010570
   14001048f:	movzx  eax,al
   140010492:	test   eax,eax
   140010494:	jne    0x1400104bb
   140010496:	mov    rcx,QWORD PTR [rsp+0xd8]
   14001049e:	mov    rax,QWORD PTR [rsp+0x78]
   1400104a3:	movzx  ebx,WORD PTR [rcx+rax*2]
   1400104a7:	mov    rcx,QWORD PTR [rsp+0xc0]
   1400104af:	call   0x14000f6d0
   1400104b4:	movzx  eax,ax
   1400104b7:	cmp    ebx,eax
   1400104b9:	je     0x1400104fd
   1400104bb:	cmp    QWORD PTR [rsp+0x60],0x7f
   1400104c1:	jae    0x1400104d2
   1400104c3:	mov    rax,QWORD PTR [rsp+0x60]
   1400104c8:	mov    QWORD PTR [rsp+0x98],rax
   1400104d0:	jmp    0x1400104de
   1400104d2:	mov    QWORD PTR [rsp+0x98],0x7f
   1400104de:	mov    rdx,QWORD PTR [rsp+0x68]
   1400104e3:	lea    rcx,[rsp+0x30]
   1400104e8:	call   0x14000f690
   1400104ed:	mov    r11,rax
   1400104f0:	movzx  eax,BYTE PTR [rsp+0x98]
   1400104f8:	mov    BYTE PTR [r11],al
   1400104fb:	jmp    0x140010502
   1400104fd:	mov    BYTE PTR [rsp+0x70],0x1
   140010502:	jmp    0x140010343
   140010507:	movzx  eax,BYTE PTR [rsp+0x70]
   14001050c:	test   eax,eax
   14001050e:	je     0x14001052c
   140010510:	mov    rdx,QWORD PTR [rsp+0xc8]
   140010518:	mov    rcx,QWORD PTR [rsp+0xc0]
   140010520:	call   0x140010570
   140010525:	movzx  eax,al
   140010528:	test   eax,eax
   14001052a:	je     0x14001052e
   14001052c:	jmp    0x140010533
   14001052e:	jmp    0x140010307
   140010533:	mov    eax,DWORD PTR [rsp+0x20]
   140010537:	mov    DWORD PTR [rsp+0x80],eax
   14001053e:	lea    rcx,[rsp+0x30]
   140010543:	call   0x140003220
   140010548:	mov    eax,DWORD PTR [rsp+0x80]
   14001054f:	mov    rcx,QWORD PTR [rsp+0xa0]
   140010557:	xor    rcx,rsp
   14001055a:	call   0x14001c500
   14001055f:	add    rsp,0xb0
   140010566:	pop    rbx
   140010567:	ret    
   140010568:	int3   
   140010569:	int3   
   14001056a:	int3   
   14001056b:	int3   
   14001056c:	int3   
   14001056d:	int3   
   14001056e:	int3   
   14001056f:	int3   
   140010570:	mov    QWORD PTR [rsp+0x10],rdx
   140010575:	mov    QWORD PTR [rsp+0x8],rcx
   14001057a:	sub    rsp,0x28
   14001057e:	mov    rdx,QWORD PTR [rsp+0x38]
   140010583:	mov    rcx,QWORD PTR [rsp+0x30]
   140010588:	call   0x140010850
   14001058d:	add    rsp,0x28
   140010591:	ret    
   140010592:	int3   
   140010593:	int3   
   140010594:	int3   
   140010595:	int3   
   140010596:	int3   
   140010597:	int3   
   140010598:	int3   
   140010599:	int3   
   14001059a:	int3   
   14001059b:	int3   
   14001059c:	int3   
   14001059d:	int3   
   14001059e:	int3   
   14001059f:	int3   
   1400105a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400105a5:	mov    QWORD PTR [rsp+0x8],rcx
   1400105aa:	sub    rsp,0x38
   1400105ae:	mov    rdx,QWORD PTR [rsp+0x48]
   1400105b3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400105b8:	call   0x140010570
   1400105bd:	movzx  eax,al
   1400105c0:	test   eax,eax
   1400105c2:	jne    0x1400105ce
   1400105c4:	mov    DWORD PTR [rsp+0x20],0x1
   1400105cc:	jmp    0x1400105d6
   1400105ce:	mov    DWORD PTR [rsp+0x20],0x0
   1400105d6:	mov    al,BYTE PTR [rsp+0x20]
   1400105da:	add    rsp,0x38
   1400105de:	ret    
   1400105df:	int3   
   1400105e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400105e5:	mov    QWORD PTR [rsp+0x8],rcx
   1400105ea:	sub    rsp,0x28
   1400105ee:	mov    rdx,QWORD PTR [rsp+0x38]
   1400105f3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400105f8:	call   0x140005d80
   1400105fd:	mov    rdx,QWORD PTR [rsp+0x38]
   140010602:	add    rdx,0x28
   140010606:	mov    rcx,QWORD PTR [rsp+0x30]
   14001060b:	add    rcx,0x28
   14001060f:	call   0x140005d80
   140010614:	mov    rax,QWORD PTR [rsp+0x30]
   140010619:	add    rsp,0x28
   14001061d:	ret    
   14001061e:	int3   
   14001061f:	int3   
   140010620:	mov    QWORD PTR [rsp+0x18],r8
   140010625:	mov    QWORD PTR [rsp+0x10],rdx
   14001062a:	mov    QWORD PTR [rsp+0x8],rcx
   14001062f:	sub    rsp,0x28
   140010633:	mov    rdx,QWORD PTR [rsp+0x40]
   140010638:	mov    rcx,QWORD PTR [rsp+0x38]
   14001063d:	call   0x140011040
   140010642:	add    rsp,0x28
   140010646:	ret    
   140010647:	int3   
   140010648:	int3   
   140010649:	int3   
   14001064a:	int3   
   14001064b:	int3   
   14001064c:	int3   
   14001064d:	int3   
   14001064e:	int3   
   14001064f:	int3   
   140010650:	mov    QWORD PTR [rsp+0x10],rdx
   140010655:	mov    QWORD PTR [rsp+0x8],rcx
   14001065a:	sub    rsp,0x28
   14001065e:	mov    rcx,QWORD PTR [rsp+0x38]
   140010663:	call   0x1400110b0
   140010668:	add    rsp,0x28
   14001066c:	ret    
   14001066d:	int3   
   14001066e:	int3   
   14001066f:	int3   
   140010670:	mov    QWORD PTR [rsp+0x10],rdx
   140010675:	mov    QWORD PTR [rsp+0x8],rcx
   14001067a:	sub    rsp,0x28
   14001067e:	mov    rcx,QWORD PTR [rsp+0x38]
   140010683:	call   0x140001320
   140010688:	add    rsp,0x28
   14001068c:	ret    
   14001068d:	int3   
   14001068e:	int3   
   14001068f:	int3   
   140010690:	mov    QWORD PTR [rsp+0x18],r8
   140010695:	mov    QWORD PTR [rsp+0x10],rdx
   14001069a:	mov    QWORD PTR [rsp+0x8],rcx
   14001069f:	sub    rsp,0x28
   1400106a3:	mov    rdx,QWORD PTR [rsp+0x40]
   1400106a8:	mov    rcx,QWORD PTR [rsp+0x38]
   1400106ad:	call   0x1400110d0
   1400106b2:	add    rsp,0x28
   1400106b6:	ret    
   1400106b7:	int3   
   1400106b8:	int3   
   1400106b9:	int3   
   1400106ba:	int3   
   1400106bb:	int3   
   1400106bc:	int3   
   1400106bd:	int3   
   1400106be:	int3   
   1400106bf:	int3   
   1400106c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400106c5:	mov    QWORD PTR [rsp+0x8],rcx
   1400106ca:	sub    rsp,0x28
   1400106ce:	mov    rcx,QWORD PTR [rsp+0x38]
   1400106d3:	call   0x140011140
   1400106d8:	add    rsp,0x28
   1400106dc:	ret    
   1400106dd:	int3   
   1400106de:	int3   
   1400106df:	int3   
   1400106e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400106e5:	mov    QWORD PTR [rsp+0x8],rcx
   1400106ea:	sub    rsp,0x138
   1400106f1:	mov    QWORD PTR [rsp+0x108],0xfffffffffffffffe
   1400106fd:	mov    DWORD PTR [rsp+0x100],0x0
   140010708:	cmp    QWORD PTR [rsp+0x140],0x0
   140010711:	je     0x140010839
   140010717:	mov    rax,QWORD PTR [rsp+0x140]
   14001071f:	cmp    QWORD PTR [rax],0x0
   140010723:	jne    0x140010839
   140010729:	mov    ecx,0x18
   14001072e:	call   0x14001cb1c
   140010733:	mov    QWORD PTR [rsp+0x28],rax
   140010738:	cmp    QWORD PTR [rsp+0x28],0x0
   14001073e:	je     0x1400107cc
   140010744:	lea    rdx,[rsp+0xd8]
   14001074c:	mov    rcx,QWORD PTR [rsp+0x148]
   140010754:	call   0x140001bf0
   140010759:	mov    QWORD PTR [rsp+0x110],rax
   140010761:	mov    rax,QWORD PTR [rsp+0x110]
   140010769:	mov    QWORD PTR [rsp+0x118],rax
   140010771:	mov    eax,DWORD PTR [rsp+0x100]
   140010778:	or     eax,0x1
   14001077b:	mov    DWORD PTR [rsp+0x100],eax
   140010782:	mov    rdx,QWORD PTR [rsp+0x118]
   14001078a:	lea    rcx,[rsp+0x30]
   14001078f:	call   0x140001740
   140010794:	mov    QWORD PTR [rsp+0x120],rax
   14001079c:	mov    eax,DWORD PTR [rsp+0x100]
   1400107a3:	or     eax,0x2
   1400107a6:	mov    DWORD PTR [rsp+0x100],eax
   1400107ad:	xor    r8d,r8d
   1400107b0:	mov    rdx,QWORD PTR [rsp+0x120]
   1400107b8:	mov    rcx,QWORD PTR [rsp+0x28]
   1400107bd:	call   0x140010a60
   1400107c2:	mov    QWORD PTR [rsp+0x128],rax
   1400107ca:	jmp    0x1400107d8
   1400107cc:	mov    QWORD PTR [rsp+0x128],0x0
   1400107d8:	mov    rax,QWORD PTR [rsp+0x128]
   1400107e0:	mov    QWORD PTR [rsp+0x20],rax
   1400107e5:	mov    rcx,QWORD PTR [rsp+0x140]
   1400107ed:	mov    rax,QWORD PTR [rsp+0x20]
   1400107f2:	mov    QWORD PTR [rcx],rax
   1400107f5:	mov    eax,DWORD PTR [rsp+0x100]
   1400107fc:	and    eax,0x2
   1400107ff:	test   eax,eax
   140010801:	je     0x140010816
   140010803:	and    DWORD PTR [rsp+0x100],0xfffffffd
   14001080b:	lea    rcx,[rsp+0x30]
   140010810:	call   0x1400017c0
   140010815:	nop
   140010816:	mov    eax,DWORD PTR [rsp+0x100]
   14001081d:	and    eax,0x1
   140010820:	test   eax,eax
   140010822:	je     0x140010839
   140010824:	and    DWORD PTR [rsp+0x100],0xfffffffe
   14001082c:	lea    rcx,[rsp+0xd8]
   140010834:	call   0x140003220
   140010839:	movabs rax,0x4
   140010843:	add    rsp,0x138
   14001084a:	ret    
   14001084b:	int3   
   14001084c:	int3   
   14001084d:	int3   
   14001084e:	int3   
   14001084f:	int3   
   140010850:	mov    QWORD PTR [rsp+0x10],rdx
   140010855:	mov    QWORD PTR [rsp+0x8],rcx
   14001085a:	sub    rsp,0x38
   14001085e:	mov    rax,QWORD PTR [rsp+0x40]
   140010863:	movzx  eax,BYTE PTR [rax+0x8]
   140010867:	test   eax,eax
   140010869:	jne    0x140010875
   14001086b:	mov    rcx,QWORD PTR [rsp+0x40]
   140010870:	call   0x14000f950
   140010875:	mov    rax,QWORD PTR [rsp+0x48]
   14001087a:	movzx  eax,BYTE PTR [rax+0x8]
   14001087e:	test   eax,eax
   140010880:	jne    0x14001088c
   140010882:	mov    rcx,QWORD PTR [rsp+0x48]
   140010887:	call   0x14000f950
   14001088c:	mov    rax,QWORD PTR [rsp+0x40]
   140010891:	cmp    QWORD PTR [rax],0x0
   140010895:	jne    0x1400108a2
   140010897:	mov    rax,QWORD PTR [rsp+0x48]
   14001089c:	cmp    QWORD PTR [rax],0x0
   1400108a0:	je     0x1400108c2
   1400108a2:	mov    rax,QWORD PTR [rsp+0x40]
   1400108a7:	cmp    QWORD PTR [rax],0x0
   1400108ab:	je     0x1400108b8
   1400108ad:	mov    rax,QWORD PTR [rsp+0x48]
   1400108b2:	cmp    QWORD PTR [rax],0x0
   1400108b6:	jne    0x1400108c2
   1400108b8:	mov    DWORD PTR [rsp+0x20],0x0
   1400108c0:	jmp    0x1400108ca
   1400108c2:	mov    DWORD PTR [rsp+0x20],0x1
   1400108ca:	mov    al,BYTE PTR [rsp+0x20]
   1400108ce:	add    rsp,0x38
   1400108d2:	ret    
   1400108d3:	int3   
   1400108d4:	int3   
   1400108d5:	int3   
   1400108d6:	int3   
   1400108d7:	int3   
   1400108d8:	int3   
   1400108d9:	int3   
   1400108da:	int3   
   1400108db:	int3   
   1400108dc:	int3   
   1400108dd:	int3   
   1400108de:	int3   
   1400108df:	int3   
   1400108e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400108e5:	mov    QWORD PTR [rsp+0x8],rcx
   1400108ea:	sub    rsp,0x148
   1400108f1:	mov    QWORD PTR [rsp+0x108],0xfffffffffffffffe
   1400108fd:	mov    DWORD PTR [rsp+0x100],0x0
   140010908:	cmp    QWORD PTR [rsp+0x150],0x0
   140010911:	je     0x140010a4c
   140010917:	mov    rax,QWORD PTR [rsp+0x150]
   14001091f:	cmp    QWORD PTR [rax],0x0
   140010923:	jne    0x140010a4c
   140010929:	mov    ecx,0x30
   14001092e:	call   0x14001cb1c
   140010933:	mov    QWORD PTR [rsp+0x28],rax
   140010938:	cmp    QWORD PTR [rsp+0x28],0x0
   14001093e:	je     0x1400109df
   140010944:	lea    rdx,[rsp+0xd8]
   14001094c:	mov    rcx,QWORD PTR [rsp+0x158]
   140010954:	call   0x140001bf0
   140010959:	mov    QWORD PTR [rsp+0x110],rax
   140010961:	mov    rax,QWORD PTR [rsp+0x110]
   140010969:	mov    QWORD PTR [rsp+0x118],rax
   140010971:	mov    eax,DWORD PTR [rsp+0x100]
   140010978:	or     eax,0x1
   14001097b:	mov    DWORD PTR [rsp+0x100],eax
   140010982:	mov    rdx,QWORD PTR [rsp+0x118]
   14001098a:	lea    rcx,[rsp+0x30]
   14001098f:	call   0x140001740
   140010994:	mov    QWORD PTR [rsp+0x120],rax
   14001099c:	mov    rax,QWORD PTR [rsp+0x120]
   1400109a4:	mov    QWORD PTR [rsp+0x128],rax
   1400109ac:	mov    eax,DWORD PTR [rsp+0x100]
   1400109b3:	or     eax,0x2
   1400109b6:	mov    DWORD PTR [rsp+0x100],eax
   1400109bd:	mov    r9b,0x1
   1400109c0:	xor    r8d,r8d
   1400109c3:	mov    rdx,QWORD PTR [rsp+0x128]
   1400109cb:	mov    rcx,QWORD PTR [rsp+0x28]
   1400109d0:	call   0x140010ab0
   1400109d5:	mov    QWORD PTR [rsp+0x130],rax
   1400109dd:	jmp    0x1400109eb
   1400109df:	mov    QWORD PTR [rsp+0x130],0x0
   1400109eb:	mov    rax,QWORD PTR [rsp+0x130]
   1400109f3:	mov    QWORD PTR [rsp+0x20],rax
   1400109f8:	mov    rcx,QWORD PTR [rsp+0x150]
   140010a00:	mov    rax,QWORD PTR [rsp+0x20]
   140010a05:	mov    QWORD PTR [rcx],rax
   140010a08:	mov    eax,DWORD PTR [rsp+0x100]
   140010a0f:	and    eax,0x2
   140010a12:	test   eax,eax
   140010a14:	je     0x140010a29
   140010a16:	and    DWORD PTR [rsp+0x100],0xfffffffd
   140010a1e:	lea    rcx,[rsp+0x30]
   140010a23:	call   0x1400017c0
   140010a28:	nop
   140010a29:	mov    eax,DWORD PTR [rsp+0x100]
   140010a30:	and    eax,0x1
   140010a33:	test   eax,eax
   140010a35:	je     0x140010a4c
   140010a37:	and    DWORD PTR [rsp+0x100],0xfffffffe
   140010a3f:	lea    rcx,[rsp+0xd8]
   140010a47:	call   0x140003220
   140010a4c:	movabs rax,0x4
   140010a56:	add    rsp,0x148
   140010a5d:	ret    
   140010a5e:	int3   
   140010a5f:	int3   
   140010a60:	mov    QWORD PTR [rsp+0x18],r8
   140010a65:	mov    QWORD PTR [rsp+0x10],rdx
   140010a6a:	mov    QWORD PTR [rsp+0x8],rcx
   140010a6f:	sub    rsp,0x28
   140010a73:	mov    rdx,QWORD PTR [rsp+0x40]
   140010a78:	mov    rcx,QWORD PTR [rsp+0x30]
   140010a7d:	call   0x140001ae0
   140010a82:	mov    r11,QWORD PTR [rsp+0x30]
   140010a87:	lea    rax,[rip+0x2e97a]        # 0x14003f408
   140010a8e:	mov    QWORD PTR [r11],rax
   140010a91:	mov    rdx,QWORD PTR [rsp+0x38]
   140010a96:	mov    rcx,QWORD PTR [rsp+0x30]
   140010a9b:	call   0x140010b10
   140010aa0:	mov    rax,QWORD PTR [rsp+0x30]
   140010aa5:	add    rsp,0x28
   140010aa9:	ret    
   140010aaa:	int3   
   140010aab:	int3   
   140010aac:	int3   
   140010aad:	int3   
   140010aae:	int3   
   140010aaf:	int3   
   140010ab0:	mov    BYTE PTR [rsp+0x20],r9b
   140010ab5:	mov    QWORD PTR [rsp+0x18],r8
   140010aba:	mov    QWORD PTR [rsp+0x10],rdx
   140010abf:	mov    QWORD PTR [rsp+0x8],rcx
   140010ac4:	sub    rsp,0x38
   140010ac8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010ad1:	mov    rdx,QWORD PTR [rsp+0x50]
   140010ad6:	mov    rcx,QWORD PTR [rsp+0x40]
   140010adb:	call   0x140001ae0
   140010ae0:	nop
   140010ae1:	mov    rcx,QWORD PTR [rsp+0x40]
   140010ae6:	lea    rax,[rip+0x2eaeb]        # 0x14003f5d8
   140010aed:	mov    QWORD PTR [rcx],rax
   140010af0:	movzx  r8d,BYTE PTR [rsp+0x58]
   140010af6:	mov    rdx,QWORD PTR [rsp+0x48]
   140010afb:	mov    rcx,QWORD PTR [rsp+0x40]
   140010b00:	call   0x140010b40
   140010b05:	nop
   140010b06:	mov    rax,QWORD PTR [rsp+0x40]
   140010b0b:	add    rsp,0x38
   140010b0f:	ret    
   140010b10:	mov    QWORD PTR [rsp+0x10],rdx
   140010b15:	mov    QWORD PTR [rsp+0x8],rcx
   140010b1a:	sub    rsp,0x38
   140010b1e:	lea    rdx,[rsp+0x20]
   140010b23:	mov    rcx,QWORD PTR [rsp+0x48]
   140010b28:	call   0x140001890
   140010b2d:	mov    rcx,QWORD PTR [rax]
   140010b30:	mov    rax,QWORD PTR [rsp+0x40]
   140010b35:	mov    QWORD PTR [rax+0x10],rcx
   140010b39:	add    rsp,0x38
   140010b3d:	ret    
   140010b3e:	int3   
   140010b3f:	int3   
   140010b40:	mov    BYTE PTR [rsp+0x18],r8b
   140010b45:	mov    QWORD PTR [rsp+0x10],rdx
   140010b4a:	mov    QWORD PTR [rsp+0x8],rcx
   140010b4f:	push   rbx
   140010b50:	sub    rsp,0x90
   140010b57:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   140010b60:	mov    rcx,QWORD PTR [rsp+0xa8]
   140010b68:	call   0x1400018c0
   140010b6d:	mov    QWORD PTR [rsp+0x20],rax
   140010b72:	mov    rax,QWORD PTR [rsp+0xa0]
   140010b7a:	mov    QWORD PTR [rax+0x10],0x0
   140010b82:	mov    rax,QWORD PTR [rsp+0xa0]
   140010b8a:	mov    QWORD PTR [rax+0x20],0x0
   140010b92:	mov    rax,QWORD PTR [rsp+0xa0]
   140010b9a:	mov    QWORD PTR [rax+0x28],0x0
   140010ba2:	lea    rdx,[rsp+0x28]
   140010ba7:	mov    rcx,QWORD PTR [rsp+0xa8]
   140010baf:	call   0x140001890
   140010bb4:	mov    r8,rax
   140010bb7:	xor    edx,edx
   140010bb9:	mov    rcx,QWORD PTR [rsp+0x20]
   140010bbe:	mov    rcx,QWORD PTR [rcx+0x10]
   140010bc2:	call   0x140011160
   140010bc7:	mov    QWORD PTR [rsp+0x70],rax
   140010bcc:	mov    rcx,QWORD PTR [rsp+0xa0]
   140010bd4:	mov    rax,QWORD PTR [rsp+0x70]
   140010bd9:	mov    QWORD PTR [rcx+0x10],rax
   140010bdd:	lea    rdx,[rsp+0x30]
   140010be2:	mov    rcx,QWORD PTR [rsp+0xa8]
   140010bea:	call   0x140001890
   140010bef:	mov    rbx,rax
   140010bf2:	mov    rcx,QWORD PTR [rsp+0xa8]
   140010bfa:	call   0x1400018e0
   140010bff:	mov    r8,rbx
   140010c02:	xor    edx,edx
   140010c04:	mov    rcx,rax
   140010c07:	call   0x140001dd0
   140010c0c:	mov    QWORD PTR [rsp+0x78],rax
   140010c11:	mov    rcx,QWORD PTR [rsp+0xa0]
   140010c19:	mov    rax,QWORD PTR [rsp+0x78]
   140010c1e:	mov    QWORD PTR [rcx+0x20],rax
   140010c22:	lea    rdx,[rsp+0x38]
   140010c27:	mov    rcx,QWORD PTR [rsp+0xa8]
   140010c2f:	call   0x140001890
   140010c34:	mov    rbx,rax
   140010c37:	mov    rcx,QWORD PTR [rsp+0xa8]
   140010c3f:	call   0x1400018f0
   140010c44:	mov    r8,rbx
   140010c47:	xor    edx,edx
   140010c49:	mov    rcx,rax
   140010c4c:	call   0x140001dd0
   140010c51:	mov    QWORD PTR [rsp+0x80],rax
   140010c59:	mov    rcx,QWORD PTR [rsp+0xa0]
   140010c61:	mov    rax,QWORD PTR [rsp+0x80]
   140010c69:	mov    QWORD PTR [rcx+0x28],rax
   140010c6d:	lea    rdx,[rsp+0x40]
   140010c72:	mov    rcx,QWORD PTR [rsp+0xa8]
   140010c7a:	call   0x140001890
   140010c7f:	mov    r8,rax
   140010c82:	mov    rax,QWORD PTR [rsp+0x20]
   140010c87:	mov    rax,QWORD PTR [rax]
   140010c8a:	xor    edx,edx
   140010c8c:	movzx  ecx,BYTE PTR [rax]
   140010c8f:	call   0x140001d80
   140010c94:	movzx  r11d,ax
   140010c98:	mov    rax,QWORD PTR [rsp+0xa0]
   140010ca0:	mov    WORD PTR [rax+0x18],r11w
   140010ca5:	lea    rdx,[rsp+0x48]
   140010caa:	mov    rcx,QWORD PTR [rsp+0xa8]
   140010cb2:	call   0x140001890
   140010cb7:	mov    r8,rax
   140010cba:	mov    rax,QWORD PTR [rsp+0x20]
   140010cbf:	mov    rax,QWORD PTR [rax+0x8]
   140010cc3:	xor    edx,edx
   140010cc5:	movzx  ecx,BYTE PTR [rax]
   140010cc8:	call   0x140001d80
   140010ccd:	movzx  r11d,ax
   140010cd1:	mov    rax,QWORD PTR [rsp+0xa0]
   140010cd9:	mov    WORD PTR [rax+0x1a],r11w
   140010cde:	movzx  eax,BYTE PTR [rsp+0xb0]
   140010ce6:	test   eax,eax
   140010ce8:	je     0x140010d7e
   140010cee:	lea    rdx,[rsp+0x50]
   140010cf3:	mov    rcx,QWORD PTR [rsp+0xa8]
   140010cfb:	call   0x140001890
   140010d00:	mov    r8,rax
   140010d03:	xor    edx,edx
   140010d05:	lea    rcx,[rip+0x2e61b]        # 0x14003f327
   140010d0c:	call   0x140011160
   140010d11:	mov    r11,rax
   140010d14:	mov    rax,QWORD PTR [rsp+0xa0]
   140010d1c:	mov    QWORD PTR [rax+0x10],r11
   140010d20:	lea    rdx,[rsp+0x58]
   140010d25:	mov    rcx,QWORD PTR [rsp+0xa8]
   140010d2d:	call   0x140001890
   140010d32:	mov    r8,rax
   140010d35:	xor    edx,edx
   140010d37:	mov    cl,0x2e
   140010d39:	call   0x140001d80
   140010d3e:	movzx  r11d,ax
   140010d42:	mov    rax,QWORD PTR [rsp+0xa0]
   140010d4a:	mov    WORD PTR [rax+0x18],r11w
   140010d4f:	lea    rdx,[rsp+0x60]
   140010d54:	mov    rcx,QWORD PTR [rsp+0xa8]
   140010d5c:	call   0x140001890
   140010d61:	mov    r8,rax
   140010d64:	xor    edx,edx
   140010d66:	mov    cl,0x2c
   140010d68:	call   0x140001d80
   140010d6d:	movzx  r11d,ax
   140010d71:	mov    rax,QWORD PTR [rsp+0xa0]
   140010d79:	mov    WORD PTR [rax+0x1a],r11w
   140010d7e:	add    rsp,0x90
   140010d85:	pop    rbx
   140010d86:	ret    
   140010d87:	int3   
   140010d88:	int3   
   140010d89:	int3   
   140010d8a:	int3   
   140010d8b:	int3   
   140010d8c:	int3   
   140010d8d:	int3   
   140010d8e:	int3   
   140010d8f:	int3   
   140010d90:	mov    QWORD PTR [rsp+0x20],r9
   140010d95:	mov    QWORD PTR [rsp+0x18],r8
   140010d9a:	mov    QWORD PTR [rsp+0x10],rdx
   140010d9f:	mov    QWORD PTR [rsp+0x8],rcx
   140010da4:	sub    rsp,0x78
   140010da8:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140010db1:	mov    rax,QWORD PTR [rip+0x386a8]        # 0x140049460
   140010db8:	xor    rax,rsp
   140010dbb:	mov    QWORD PTR [rsp+0x68],rax
   140010dc0:	mov    rax,QWORD PTR [rsp+0x90]
   140010dc8:	mov    QWORD PTR [rsp+0x20],rax
   140010dcd:	lea    rcx,[rsp+0x30]
   140010dd2:	call   0x140005c70
   140010dd7:	nop
   140010dd8:	jmp    0x140010e02
   140010dda:	mov    rax,QWORD PTR [rsp+0x90]
   140010de2:	add    rax,0x28
   140010de6:	mov    QWORD PTR [rsp+0x90],rax
   140010dee:	mov    rax,QWORD PTR [rsp+0x80]
   140010df6:	add    rax,0x28
   140010dfa:	mov    QWORD PTR [rsp+0x80],rax
   140010e02:	mov    rax,QWORD PTR [rsp+0x88]
   140010e0a:	cmp    QWORD PTR [rsp+0x80],rax
   140010e12:	je     0x140010e45
   140010e14:	lea    r8,[rsp+0x30]
   140010e19:	mov    rdx,QWORD PTR [rsp+0x90]
   140010e21:	mov    rcx,QWORD PTR [rsp+0x98]
   140010e29:	call   0x140010620
   140010e2e:	mov    rdx,QWORD PTR [rsp+0x80]
   140010e36:	mov    rcx,QWORD PTR [rsp+0x90]
   140010e3e:	call   0x1400112b0
   140010e43:	jmp    0x140010dda
   140010e45:	mov    rax,QWORD PTR [rsp+0x90]
   140010e4d:	mov    QWORD PTR [rsp+0x58],rax
   140010e52:	lea    rcx,[rsp+0x30]
   140010e57:	call   0x140003a90
   140010e5c:	mov    rax,QWORD PTR [rsp+0x58]
   140010e61:	mov    rcx,QWORD PTR [rsp+0x68]
   140010e66:	xor    rcx,rsp
   140010e69:	call   0x14001c500
   140010e6e:	add    rsp,0x78
   140010e72:	ret    
   140010e73:	int3   
   140010e74:	int3   
   140010e75:	int3   
   140010e76:	int3   
   140010e77:	int3   
   140010e78:	int3   
   140010e79:	int3   
   140010e7a:	int3   
   140010e7b:	int3   
   140010e7c:	int3   
   140010e7d:	int3   
   140010e7e:	int3   
   140010e7f:	int3   
   140010e80:	mov    BYTE PTR [rsp+0x20],r9b
   140010e85:	mov    QWORD PTR [rsp+0x18],r8
   140010e8a:	mov    QWORD PTR [rsp+0x10],rdx
   140010e8f:	mov    QWORD PTR [rsp+0x8],rcx
   140010e94:	sub    rsp,0x28
   140010e98:	mov    rax,QWORD PTR [rsp+0x38]
   140010e9d:	cmp    QWORD PTR [rsp+0x30],rax
   140010ea2:	je     0x140010ed1
   140010ea4:	mov    rax,QWORD PTR [rsp+0x38]
   140010ea9:	sub    rax,0x28
   140010ead:	mov    QWORD PTR [rsp+0x38],rax
   140010eb2:	mov    rax,QWORD PTR [rsp+0x40]
   140010eb7:	sub    rax,0x28
   140010ebb:	mov    QWORD PTR [rsp+0x40],rax
   140010ec0:	mov    rdx,QWORD PTR [rsp+0x38]
   140010ec5:	mov    rcx,QWORD PTR [rsp+0x40]
   140010eca:	call   0x1400112b0
   140010ecf:	jmp    0x140010e98
   140010ed1:	mov    rax,QWORD PTR [rsp+0x40]
   140010ed6:	add    rsp,0x28
   140010eda:	ret    
   140010edb:	int3   
   140010edc:	int3   
   140010edd:	int3   
   140010ede:	int3   
   140010edf:	int3   
   140010ee0:	mov    QWORD PTR [rsp+0x20],r9
   140010ee5:	mov    QWORD PTR [rsp+0x18],r8
   140010eea:	mov    QWORD PTR [rsp+0x10],rdx
   140010eef:	mov    QWORD PTR [rsp+0x8],rcx
   140010ef4:	sub    rsp,0xa8
   140010efb:	mov    QWORD PTR [rsp+0x88],0xfffffffffffffffe
   140010f07:	mov    rax,QWORD PTR [rip+0x38552]        # 0x140049460
   140010f0e:	xor    rax,rsp
   140010f11:	mov    QWORD PTR [rsp+0x90],rax
   140010f19:	mov    rax,QWORD PTR [rsp+0xc0]
   140010f21:	mov    QWORD PTR [rsp+0x20],rax
   140010f26:	lea    rcx,[rsp+0x30]
   140010f2b:	call   0x140011280
   140010f30:	nop
   140010f31:	jmp    0x140010f5b
   140010f33:	mov    rax,QWORD PTR [rsp+0xc0]
   140010f3b:	add    rax,0x50
   140010f3f:	mov    QWORD PTR [rsp+0xc0],rax
   140010f47:	mov    rax,QWORD PTR [rsp+0xb0]
   140010f4f:	add    rax,0x50
   140010f53:	mov    QWORD PTR [rsp+0xb0],rax
   140010f5b:	mov    rax,QWORD PTR [rsp+0xb8]
   140010f63:	cmp    QWORD PTR [rsp+0xb0],rax
   140010f6b:	je     0x140010f9e
   140010f6d:	lea    r8,[rsp+0x30]
   140010f72:	mov    rdx,QWORD PTR [rsp+0xc0]
   140010f7a:	mov    rcx,QWORD PTR [rsp+0xc8]
   140010f82:	call   0x140010690
   140010f87:	mov    rdx,QWORD PTR [rsp+0xb0]
   140010f8f:	mov    rcx,QWORD PTR [rsp+0xc0]
   140010f97:	call   0x1400112e0
   140010f9c:	jmp    0x140010f33
   140010f9e:	mov    rax,QWORD PTR [rsp+0xc0]
   140010fa6:	mov    QWORD PTR [rsp+0x80],rax
   140010fae:	lea    rcx,[rsp+0x30]
   140010fb3:	call   0x140005150
   140010fb8:	mov    rax,QWORD PTR [rsp+0x80]
   140010fc0:	mov    rcx,QWORD PTR [rsp+0x90]
   140010fc8:	xor    rcx,rsp
   140010fcb:	call   0x14001c500
   140010fd0:	add    rsp,0xa8
   140010fd7:	ret    
   140010fd8:	int3   
   140010fd9:	int3   
   140010fda:	int3   
   140010fdb:	int3   
   140010fdc:	int3   
   140010fdd:	int3   
   140010fde:	int3   
   140010fdf:	int3   
   140010fe0:	mov    BYTE PTR [rsp+0x20],r9b
   140010fe5:	mov    QWORD PTR [rsp+0x18],r8
   140010fea:	mov    QWORD PTR [rsp+0x10],rdx
   140010fef:	mov    QWORD PTR [rsp+0x8],rcx
   140010ff4:	sub    rsp,0x28
   140010ff8:	mov    rax,QWORD PTR [rsp+0x38]
   140010ffd:	cmp    QWORD PTR [rsp+0x30],rax
   140011002:	je     0x140011031
   140011004:	mov    rax,QWORD PTR [rsp+0x38]
   140011009:	sub    rax,0x50
   14001100d:	mov    QWORD PTR [rsp+0x38],rax
   140011012:	mov    rax,QWORD PTR [rsp+0x40]
   140011017:	sub    rax,0x50
   14001101b:	mov    QWORD PTR [rsp+0x40],rax
   140011020:	mov    rdx,QWORD PTR [rsp+0x38]
   140011025:	mov    rcx,QWORD PTR [rsp+0x40]
   14001102a:	call   0x1400112e0
   14001102f:	jmp    0x140010ff8
   140011031:	mov    rax,QWORD PTR [rsp+0x40]
   140011036:	add    rsp,0x28
   14001103a:	ret    
   14001103b:	int3   
   14001103c:	int3   
   14001103d:	int3   
   14001103e:	int3   
   14001103f:	int3   
   140011040:	mov    QWORD PTR [rsp+0x10],rdx
   140011045:	mov    QWORD PTR [rsp+0x8],rcx
   14001104a:	sub    rsp,0x58
   14001104e:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140011057:	mov    rax,QWORD PTR [rsp+0x60]
   14001105c:	mov    QWORD PTR [rsp+0x20],rax
   140011061:	mov    rdx,QWORD PTR [rsp+0x20]
   140011066:	mov    ecx,0x28
   14001106b:	call   0x1400014b0
   140011070:	mov    QWORD PTR [rsp+0x30],rax
   140011075:	cmp    QWORD PTR [rsp+0x30],0x0
   14001107b:	je     0x140011093
   14001107d:	mov    rdx,QWORD PTR [rsp+0x68]
   140011082:	mov    rcx,QWORD PTR [rsp+0x30]
   140011087:	call   0x140005d30
   14001108c:	mov    QWORD PTR [rsp+0x40],rax
   140011091:	jmp    0x14001109c
   140011093:	mov    QWORD PTR [rsp+0x40],0x0
   14001109c:	mov    rax,QWORD PTR [rsp+0x40]
   1400110a1:	mov    QWORD PTR [rsp+0x28],rax
   1400110a6:	add    rsp,0x58
   1400110aa:	ret    
   1400110ab:	int3   
   1400110ac:	int3   
   1400110ad:	int3   
   1400110ae:	int3   
   1400110af:	int3   
   1400110b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400110b5:	sub    rsp,0x28
   1400110b9:	xor    edx,edx
   1400110bb:	mov    rcx,QWORD PTR [rsp+0x30]
   1400110c0:	call   0x140011200
   1400110c5:	add    rsp,0x28
   1400110c9:	ret    
   1400110ca:	int3   
   1400110cb:	int3   
   1400110cc:	int3   
   1400110cd:	int3   
   1400110ce:	int3   
   1400110cf:	int3   
   1400110d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400110d5:	mov    QWORD PTR [rsp+0x8],rcx
   1400110da:	sub    rsp,0x58
   1400110de:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400110e7:	mov    rax,QWORD PTR [rsp+0x60]
   1400110ec:	mov    QWORD PTR [rsp+0x20],rax
   1400110f1:	mov    rdx,QWORD PTR [rsp+0x20]
   1400110f6:	mov    ecx,0x50
   1400110fb:	call   0x1400014b0
   140011100:	mov    QWORD PTR [rsp+0x30],rax
   140011105:	cmp    QWORD PTR [rsp+0x30],0x0
   14001110b:	je     0x140011123
   14001110d:	mov    rdx,QWORD PTR [rsp+0x68]
   140011112:	mov    rcx,QWORD PTR [rsp+0x30]
   140011117:	call   0x14000aef0
   14001111c:	mov    QWORD PTR [rsp+0x40],rax
   140011121:	jmp    0x14001112c
   140011123:	mov    QWORD PTR [rsp+0x40],0x0
   14001112c:	mov    rax,QWORD PTR [rsp+0x40]
   140011131:	mov    QWORD PTR [rsp+0x28],rax
   140011136:	add    rsp,0x58
   14001113a:	ret    
   14001113b:	int3   
   14001113c:	int3   
   14001113d:	int3   
   14001113e:	int3   
   14001113f:	int3   
   140011140:	mov    QWORD PTR [rsp+0x8],rcx
   140011145:	sub    rsp,0x28
   140011149:	xor    edx,edx
   14001114b:	mov    rcx,QWORD PTR [rsp+0x30]
   140011150:	call   0x140011240
   140011155:	add    rsp,0x28
   140011159:	ret    
   14001115a:	int3   
   14001115b:	int3   
   14001115c:	int3   
   14001115d:	int3   
   14001115e:	int3   
   14001115f:	int3   
   140011160:	mov    QWORD PTR [rsp+0x18],r8
   140011165:	mov    QWORD PTR [rsp+0x10],rdx
   14001116a:	mov    QWORD PTR [rsp+0x8],rcx
   14001116f:	sub    rsp,0x48
   140011173:	mov    rcx,QWORD PTR [rsp+0x50]
   140011178:	call   0x14001c650
   14001117d:	add    rax,0x1
   140011181:	mov    QWORD PTR [rsp+0x28],rax
   140011186:	mov    rcx,QWORD PTR [rsp+0x28]
   14001118b:	call   0x140019f20
   140011190:	mov    QWORD PTR [rsp+0x38],rax
   140011195:	mov    rax,QWORD PTR [rsp+0x38]
   14001119a:	mov    QWORD PTR [rsp+0x20],rax
   14001119f:	mov    rax,QWORD PTR [rsp+0x20]
   1400111a4:	mov    QWORD PTR [rsp+0x30],rax
   1400111a9:	jmp    0x1400111d5
   1400111ab:	mov    rax,QWORD PTR [rsp+0x28]
   1400111b0:	sub    rax,0x1
   1400111b4:	mov    QWORD PTR [rsp+0x28],rax
   1400111b9:	mov    rax,QWORD PTR [rsp+0x30]
   1400111be:	add    rax,0x1
   1400111c2:	mov    QWORD PTR [rsp+0x30],rax
   1400111c7:	mov    rax,QWORD PTR [rsp+0x50]
   1400111cc:	add    rax,0x1
   1400111d0:	mov    QWORD PTR [rsp+0x50],rax
   1400111d5:	cmp    QWORD PTR [rsp+0x28],0x0
   1400111db:	jbe    0x1400111ee
   1400111dd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400111e2:	mov    rax,QWORD PTR [rsp+0x50]
   1400111e7:	movzx  eax,BYTE PTR [rax]
   1400111ea:	mov    BYTE PTR [rcx],al
   1400111ec:	jmp    0x1400111ab
   1400111ee:	mov    rax,QWORD PTR [rsp+0x20]
   1400111f3:	add    rsp,0x48
   1400111f7:	ret    
   1400111f8:	int3   
   1400111f9:	int3   
   1400111fa:	int3   
   1400111fb:	int3   
   1400111fc:	int3   
   1400111fd:	int3   
   1400111fe:	int3   
   1400111ff:	int3   
   140011200:	mov    DWORD PTR [rsp+0x10],edx
   140011204:	mov    QWORD PTR [rsp+0x8],rcx
   140011209:	sub    rsp,0x28
   14001120d:	mov    rcx,QWORD PTR [rsp+0x30]
   140011212:	call   0x140003a90
   140011217:	mov    eax,DWORD PTR [rsp+0x38]
   14001121b:	and    eax,0x1
   14001121e:	test   eax,eax
   140011220:	je     0x14001122c
   140011222:	mov    rcx,QWORD PTR [rsp+0x30]
   140011227:	call   0x14001c4dc
   14001122c:	mov    rax,QWORD PTR [rsp+0x30]
   140011231:	add    rsp,0x28
   140011235:	ret    
   140011236:	int3   
   140011237:	int3   
   140011238:	int3   
   140011239:	int3   
   14001123a:	int3   
   14001123b:	int3   
   14001123c:	int3   
   14001123d:	int3   
   14001123e:	int3   
   14001123f:	int3   
   140011240:	mov    DWORD PTR [rsp+0x10],edx
   140011244:	mov    QWORD PTR [rsp+0x8],rcx
   140011249:	sub    rsp,0x28
   14001124d:	mov    rcx,QWORD PTR [rsp+0x30]
   140011252:	call   0x140005150
   140011257:	mov    eax,DWORD PTR [rsp+0x38]
   14001125b:	and    eax,0x1
   14001125e:	test   eax,eax
   140011260:	je     0x14001126c
   140011262:	mov    rcx,QWORD PTR [rsp+0x30]
   140011267:	call   0x14001c4dc
   14001126c:	mov    rax,QWORD PTR [rsp+0x30]
   140011271:	add    rsp,0x28
   140011275:	ret    
   140011276:	int3   
   140011277:	int3   
   140011278:	int3   
   140011279:	int3   
   14001127a:	int3   
   14001127b:	int3   
   14001127c:	int3   
   14001127d:	int3   
   14001127e:	int3   
   14001127f:	int3   
   140011280:	mov    QWORD PTR [rsp+0x8],rcx
   140011285:	sub    rsp,0x28
   140011289:	mov    rcx,QWORD PTR [rsp+0x30]
   14001128e:	call   0x140005c70
   140011293:	mov    rcx,QWORD PTR [rsp+0x30]
   140011298:	add    rcx,0x28
   14001129c:	call   0x140005c70
   1400112a1:	mov    rax,QWORD PTR [rsp+0x30]
   1400112a6:	add    rsp,0x28
   1400112aa:	ret    
   1400112ab:	int3   
   1400112ac:	int3   
   1400112ad:	int3   
   1400112ae:	int3   
   1400112af:	int3   
   1400112b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400112b5:	mov    QWORD PTR [rsp+0x8],rcx
   1400112ba:	sub    rsp,0x28
   1400112be:	mov    rdx,QWORD PTR [rsp+0x38]
   1400112c3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400112c8:	call   0x140011310
   1400112cd:	add    rsp,0x28
   1400112d1:	ret    
   1400112d2:	int3   
   1400112d3:	int3   
   1400112d4:	int3   
   1400112d5:	int3   
   1400112d6:	int3   
   1400112d7:	int3   
   1400112d8:	int3   
   1400112d9:	int3   
   1400112da:	int3   
   1400112db:	int3   
   1400112dc:	int3   
   1400112dd:	int3   
   1400112de:	int3   
   1400112df:	int3   
   1400112e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400112e5:	mov    QWORD PTR [rsp+0x8],rcx
   1400112ea:	sub    rsp,0x28
   1400112ee:	mov    rdx,QWORD PTR [rsp+0x38]
   1400112f3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400112f8:	call   0x140011340
   1400112fd:	add    rsp,0x28
   140011301:	ret    
   140011302:	int3   
   140011303:	int3   
   140011304:	int3   
   140011305:	int3   
   140011306:	int3   
   140011307:	int3   
   140011308:	int3   
   140011309:	int3   
   14001130a:	int3   
   14001130b:	int3   
   14001130c:	int3   
   14001130d:	int3   
   14001130e:	int3   
   14001130f:	int3   
   140011310:	mov    QWORD PTR [rsp+0x10],rdx
   140011315:	mov    QWORD PTR [rsp+0x8],rcx
   14001131a:	sub    rsp,0x28
   14001131e:	mov    rdx,QWORD PTR [rsp+0x38]
   140011323:	mov    rcx,QWORD PTR [rsp+0x30]
   140011328:	call   0x140011370
   14001132d:	add    rsp,0x28
   140011331:	ret    
   140011332:	int3   
   140011333:	int3   
   140011334:	int3   
   140011335:	int3   
   140011336:	int3   
   140011337:	int3   
   140011338:	int3   
   140011339:	int3   
   14001133a:	int3   
   14001133b:	int3   
   14001133c:	int3   
   14001133d:	int3   
   14001133e:	int3   
   14001133f:	int3   
   140011340:	mov    QWORD PTR [rsp+0x10],rdx
   140011345:	mov    QWORD PTR [rsp+0x8],rcx
   14001134a:	sub    rsp,0x28
   14001134e:	mov    rdx,QWORD PTR [rsp+0x38]
   140011353:	mov    rcx,QWORD PTR [rsp+0x30]
   140011358:	call   0x140011530
   14001135d:	add    rsp,0x28
   140011361:	ret    
   140011362:	int3   
   140011363:	int3   
   140011364:	int3   
   140011365:	int3   
   140011366:	int3   
   140011367:	int3   
   140011368:	int3   
   140011369:	int3   
   14001136a:	int3   
   14001136b:	int3   
   14001136c:	int3   
   14001136d:	int3   
   14001136e:	int3   
   14001136f:	int3   
   140011370:	mov    QWORD PTR [rsp+0x10],rdx
   140011375:	mov    QWORD PTR [rsp+0x8],rcx
   14001137a:	push   rsi
   14001137b:	push   rdi
   14001137c:	sub    rsp,0xa8
   140011383:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   14001138f:	mov    rax,QWORD PTR [rip+0x380ca]        # 0x140049460
   140011396:	xor    rax,rsp
   140011399:	mov    QWORD PTR [rsp+0x98],rax
   1400113a1:	mov    rax,QWORD PTR [rsp+0xc8]
   1400113a9:	cmp    QWORD PTR [rsp+0xc0],rax
   1400113b1:	jne    0x1400113b8
   1400113b3:	jmp    0x14001150a
   1400113b8:	mov    rdx,QWORD PTR [rsp+0xc8]
   1400113c0:	mov    rcx,QWORD PTR [rsp+0xc0]
   1400113c8:	call   0x140011580
   1400113cd:	movzx  eax,al
   1400113d0:	test   eax,eax
   1400113d2:	je     0x1400114c5
   1400113d8:	lea    rdi,[rsp+0x80]
   1400113e0:	mov    rsi,QWORD PTR [rsp+0xc0]
   1400113e8:	add    rsi,0x8
   1400113ec:	mov    ecx,0x10
   1400113f1:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400113f3:	lea    rdi,[rsp+0x30]
   1400113f8:	lea    rsi,[rsp+0x80]
   140011400:	mov    ecx,0x10
   140011405:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011407:	lea    rdi,[rsp+0x70]
   14001140c:	mov    rsi,QWORD PTR [rsp+0xc8]
   140011414:	add    rsi,0x8
   140011418:	mov    ecx,0x10
   14001141d:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001141f:	mov    rdi,QWORD PTR [rsp+0xc0]
   140011427:	lea    rsi,[rsp+0x70]
   14001142c:	add    rdi,0x8
   140011430:	mov    ecx,0x10
   140011435:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011437:	mov    rdi,QWORD PTR [rsp+0xc8]
   14001143f:	lea    rsi,[rsp+0x30]
   140011444:	add    rdi,0x8
   140011448:	mov    ecx,0x10
   14001144d:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001144f:	mov    rax,QWORD PTR [rsp+0xc0]
   140011457:	mov    rax,QWORD PTR [rax+0x18]
   14001145b:	mov    QWORD PTR [rsp+0x20],rax
   140011460:	mov    rcx,QWORD PTR [rsp+0xc0]
   140011468:	mov    rax,QWORD PTR [rsp+0xc8]
   140011470:	mov    rax,QWORD PTR [rax+0x18]
   140011474:	mov    QWORD PTR [rcx+0x18],rax
   140011478:	mov    rcx,QWORD PTR [rsp+0xc8]
   140011480:	mov    rax,QWORD PTR [rsp+0x20]
   140011485:	mov    QWORD PTR [rcx+0x18],rax
   140011489:	mov    rax,QWORD PTR [rsp+0xc0]
   140011491:	mov    rax,QWORD PTR [rax+0x20]
   140011495:	mov    QWORD PTR [rsp+0x40],rax
   14001149a:	mov    rcx,QWORD PTR [rsp+0xc0]
   1400114a2:	mov    rax,QWORD PTR [rsp+0xc8]
   1400114aa:	mov    rax,QWORD PTR [rax+0x20]
   1400114ae:	mov    QWORD PTR [rcx+0x20],rax
   1400114b2:	mov    rcx,QWORD PTR [rsp+0xc8]
   1400114ba:	mov    rax,QWORD PTR [rsp+0x40]
   1400114bf:	mov    QWORD PTR [rcx+0x20],rax
   1400114c3:	jmp    0x14001150a
   1400114c5:	mov    rdx,QWORD PTR [rsp+0xc0]
   1400114cd:	lea    rcx,[rsp+0x48]
   1400114d2:	call   0x140005d30
   1400114d7:	nop
   1400114d8:	mov    rdx,QWORD PTR [rsp+0xc8]
   1400114e0:	mov    rcx,QWORD PTR [rsp+0xc0]
   1400114e8:	call   0x140005d80
   1400114ed:	lea    rdx,[rsp+0x48]
   1400114f2:	mov    rcx,QWORD PTR [rsp+0xc8]
   1400114fa:	call   0x140005d80
   1400114ff:	nop
   140011500:	lea    rcx,[rsp+0x48]
   140011505:	call   0x140003a90
   14001150a:	mov    rcx,QWORD PTR [rsp+0x98]
   140011512:	xor    rcx,rsp
   140011515:	call   0x14001c500
   14001151a:	add    rsp,0xa8
   140011521:	pop    rdi
   140011522:	pop    rsi
   140011523:	ret    
   140011524:	int3   
   140011525:	int3   
   140011526:	int3   
   140011527:	int3   
   140011528:	int3   
   140011529:	int3   
   14001152a:	int3   
   14001152b:	int3   
   14001152c:	int3   
   14001152d:	int3   
   14001152e:	int3   
   14001152f:	int3   
   140011530:	mov    QWORD PTR [rsp+0x10],rdx
   140011535:	mov    QWORD PTR [rsp+0x8],rcx
   14001153a:	sub    rsp,0x28
   14001153e:	mov    rax,QWORD PTR [rsp+0x38]
   140011543:	cmp    QWORD PTR [rsp+0x30],rax
   140011548:	je     0x140011570
   14001154a:	mov    rdx,QWORD PTR [rsp+0x38]
   14001154f:	mov    rcx,QWORD PTR [rsp+0x30]
   140011554:	call   0x1400112b0
   140011559:	mov    rdx,QWORD PTR [rsp+0x38]
   14001155e:	add    rdx,0x28
   140011562:	mov    rcx,QWORD PTR [rsp+0x30]
   140011567:	add    rcx,0x28
   14001156b:	call   0x1400112b0
   140011570:	add    rsp,0x28
   140011574:	ret    
   140011575:	int3   
   140011576:	int3   
   140011577:	int3   
   140011578:	int3   
   140011579:	int3   
   14001157a:	int3   
   14001157b:	int3   
   14001157c:	int3   
   14001157d:	int3   
   14001157e:	int3   
   14001157f:	int3   
   140011580:	mov    QWORD PTR [rsp+0x10],rdx
   140011585:	mov    QWORD PTR [rsp+0x8],rcx
   14001158a:	mov    al,0x1
   14001158c:	ret    
   14001158d:	int3   
   14001158e:	int3   
   14001158f:	int3   
   140011590:	mov    QWORD PTR [rsp+0x8],rcx
   140011595:	mov    rax,QWORD PTR [rip+0x3a034]        # 0x14004b5d0
   14001159c:	ret    
   14001159d:	int3   
   14001159e:	int3   
   14001159f:	int3   
   1400115a0:	mov    QWORD PTR [rsp+0x18],r8
   1400115a5:	mov    WORD PTR [rsp+0x10],dx
   1400115aa:	mov    QWORD PTR [rsp+0x8],rcx
   1400115af:	sub    rsp,0x18
   1400115b3:	mov    rax,QWORD PTR [rsp+0x20]
   1400115b8:	mov    QWORD PTR [rsp],rax
   1400115bc:	jmp    0x1400115d8
   1400115be:	mov    rax,QWORD PTR [rsp]
   1400115c2:	add    rax,0x2
   1400115c6:	mov    QWORD PTR [rsp],rax
   1400115ca:	mov    rax,QWORD PTR [rsp+0x30]
   1400115cf:	sub    rax,0x1
   1400115d3:	mov    QWORD PTR [rsp+0x30],rax
   1400115d8:	cmp    QWORD PTR [rsp+0x30],0x0
   1400115de:	jbe    0x1400115ee
   1400115e0:	mov    rcx,QWORD PTR [rsp]
   1400115e4:	movzx  eax,WORD PTR [rsp+0x28]
   1400115e9:	mov    WORD PTR [rcx],ax
   1400115ec:	jmp    0x1400115be
   1400115ee:	mov    rax,QWORD PTR [rsp+0x20]
   1400115f3:	add    rsp,0x18
   1400115f7:	ret    
   1400115f8:	int3   
   1400115f9:	int3   
   1400115fa:	int3   
   1400115fb:	int3   
   1400115fc:	int3   
   1400115fd:	int3   
   1400115fe:	int3   
   1400115ff:	int3   
   140011600:	mov    QWORD PTR [rsp+0x20],r9
   140011605:	mov    QWORD PTR [rsp+0x18],r8
   14001160a:	mov    QWORD PTR [rsp+0x10],rdx
   14001160f:	mov    QWORD PTR [rsp+0x8],rcx
   140011614:	sub    rsp,0x28
   140011618:	mov    r9,QWORD PTR [rsp+0x48]
   14001161d:	shl    r9,1
   140011620:	mov    rdx,QWORD PTR [rsp+0x38]
   140011625:	shl    rdx,1
   140011628:	mov    r8,QWORD PTR [rsp+0x40]
   14001162d:	mov    rcx,QWORD PTR [rsp+0x30]
   140011632:	call   0x14001c5d4
   140011637:	add    rsp,0x28
   14001163b:	ret    
   14001163c:	int3   
   14001163d:	int3   
   14001163e:	int3   
   14001163f:	int3   
   140011640:	mov    QWORD PTR [rsp+0x18],r8
   140011645:	mov    WORD PTR [rsp+0x10],dx
   14001164a:	mov    QWORD PTR [rsp+0x8],rcx
   14001164f:	jmp    0x14001166d
   140011651:	mov    rax,QWORD PTR [rsp+0x8]
   140011656:	add    rax,0x2
   14001165a:	mov    QWORD PTR [rsp+0x8],rax
   14001165f:	mov    rax,QWORD PTR [rsp+0x18]
   140011664:	sub    rax,0x1
   140011668:	mov    QWORD PTR [rsp+0x18],rax
   14001166d:	cmp    QWORD PTR [rsp+0x18],0x0
   140011673:	jbe    0x14001168f
   140011675:	mov    rax,QWORD PTR [rsp+0x8]
   14001167a:	movzx  ecx,WORD PTR [rax]
   14001167d:	movzx  eax,WORD PTR [rsp+0x10]
   140011682:	cmp    ecx,eax
   140011684:	jne    0x14001168d
   140011686:	mov    rax,QWORD PTR [rsp+0x8]
   14001168b:	jmp    0x140011691
   14001168d:	jmp    0x140011651
   14001168f:	xor    eax,eax
   140011691:	repz ret 
   140011693:	int3   
   140011694:	int3   
   140011695:	int3   
   140011696:	int3   
   140011697:	int3   
   140011698:	int3   
   140011699:	int3   
   14001169a:	int3   
   14001169b:	int3   
   14001169c:	int3   
   14001169d:	int3   
   14001169e:	int3   
   14001169f:	int3   
   1400116a0:	mov    QWORD PTR [rsp+0x20],r9
   1400116a5:	mov    QWORD PTR [rsp+0x18],r8
   1400116aa:	mov    QWORD PTR [rsp+0x10],rdx
   1400116af:	mov    QWORD PTR [rsp+0x8],rcx
   1400116b4:	sub    rsp,0x28
   1400116b8:	mov    r9,QWORD PTR [rsp+0x48]
   1400116bd:	shl    r9,1
   1400116c0:	mov    rdx,QWORD PTR [rsp+0x38]
   1400116c5:	shl    rdx,1
   1400116c8:	mov    r8,QWORD PTR [rsp+0x40]
   1400116cd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400116d2:	call   0x14001c53c
   1400116d7:	add    rsp,0x28
   1400116db:	ret    
   1400116dc:	int3   
   1400116dd:	int3   
   1400116de:	int3   
   1400116df:	int3   
   1400116e0:	mov    QWORD PTR [rsp+0x18],r8
   1400116e5:	mov    QWORD PTR [rsp+0x10],rdx
   1400116ea:	mov    QWORD PTR [rsp+0x8],rcx
   1400116ef:	sub    rsp,0x18
   1400116f3:	jmp    0x14001171f
   1400116f5:	mov    rax,QWORD PTR [rsp+0x20]
   1400116fa:	add    rax,0x2
   1400116fe:	mov    QWORD PTR [rsp+0x20],rax
   140011703:	mov    rax,QWORD PTR [rsp+0x28]
   140011708:	add    rax,0x2
   14001170c:	mov    QWORD PTR [rsp+0x28],rax
   140011711:	mov    rax,QWORD PTR [rsp+0x30]
   140011716:	sub    rax,0x1
   14001171a:	mov    QWORD PTR [rsp+0x30],rax
   14001171f:	cmp    QWORD PTR [rsp+0x30],0x0
   140011725:	jbe    0x140011766
   140011727:	mov    rax,QWORD PTR [rsp+0x20]
   14001172c:	movzx  ecx,WORD PTR [rax]
   14001172f:	mov    rax,QWORD PTR [rsp+0x28]
   140011734:	movzx  eax,WORD PTR [rax]
   140011737:	cmp    ecx,eax
   140011739:	je     0x140011764
   14001173b:	mov    rax,QWORD PTR [rsp+0x20]
   140011740:	movzx  ecx,WORD PTR [rax]
   140011743:	mov    rax,QWORD PTR [rsp+0x28]
   140011748:	movzx  eax,WORD PTR [rax]
   14001174b:	cmp    ecx,eax
   14001174d:	jge    0x140011758
   14001174f:	mov    DWORD PTR [rsp],0xffffffff
   140011756:	jmp    0x14001175f
   140011758:	mov    DWORD PTR [rsp],0x1
   14001175f:	mov    eax,DWORD PTR [rsp]
   140011762:	jmp    0x140011768
   140011764:	jmp    0x1400116f5
   140011766:	xor    eax,eax
   140011768:	add    rsp,0x18
   14001176c:	ret    
   14001176d:	int3   
   14001176e:	int3   
   14001176f:	int3   
   140011770:	mov    QWORD PTR [rsp+0x8],rcx
   140011775:	sub    rsp,0x28
   140011779:	mov    dx,0xa
   14001177d:	mov    rcx,QWORD PTR [rsp+0x30]
   140011782:	call   0x140011950
   140011787:	mov    rcx,QWORD PTR [rsp+0x30]
   14001178c:	call   0x140003340
   140011791:	mov    rax,QWORD PTR [rsp+0x30]
   140011796:	add    rsp,0x28
   14001179a:	ret    
   14001179b:	int3   
   14001179c:	int3   
   14001179d:	int3   
   14001179e:	int3   
   14001179f:	int3   
   1400117a0:	mov    QWORD PTR [rsp+0x20],r9
   1400117a5:	mov    QWORD PTR [rsp+0x18],r8
   1400117aa:	mov    QWORD PTR [rsp+0x10],rdx
   1400117af:	mov    QWORD PTR [rsp+0x8],rcx
   1400117b4:	sub    rsp,0x88
   1400117bb:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   1400117c4:	mov    rcx,QWORD PTR [rsp+0xa8]
   1400117cc:	call   0x140003bc0
   1400117d1:	call   QWORD PTR [rip+0x289c1]        # 0x14003a198
   1400117d7:	mov    DWORD PTR [rsp+0x28],0x0
   1400117df:	mov    QWORD PTR [rsp+0x20],0x0
   1400117e8:	mov    r9d,DWORD PTR [rsp+0xa0]
   1400117f0:	mov    r8,QWORD PTR [rsp+0x98]
   1400117f8:	xor    edx,edx
   1400117fa:	mov    ecx,eax
   1400117fc:	call   QWORD PTR [rip+0x2899e]        # 0x14003a1a0
   140011802:	mov    DWORD PTR [rsp+0x30],eax
   140011806:	movsxd rdx,DWORD PTR [rsp+0x30]
   14001180b:	lea    rcx,[rsp+0x38]
   140011810:	call   0x140011e00
   140011815:	nop
   140011816:	xor    edx,edx
   140011818:	lea    rcx,[rsp+0x38]
   14001181d:	call   0x140011e90
   140011822:	mov    QWORD PTR [rsp+0x68],rax
   140011827:	call   QWORD PTR [rip+0x2896b]        # 0x14003a198
   14001182d:	mov    ecx,eax
   14001182f:	mov    eax,DWORD PTR [rsp+0x30]
   140011833:	mov    DWORD PTR [rsp+0x28],eax
   140011837:	mov    rax,QWORD PTR [rsp+0x68]
   14001183c:	mov    QWORD PTR [rsp+0x20],rax
   140011841:	mov    r9d,DWORD PTR [rsp+0xa0]
   140011849:	mov    r8,QWORD PTR [rsp+0x98]
   140011851:	xor    edx,edx
   140011853:	call   QWORD PTR [rip+0x28947]        # 0x14003a1a0
   140011859:	mov    DWORD PTR [rsp+0x34],eax
   14001185d:	movsxd r8,DWORD PTR [rsp+0x34]
   140011862:	mov    rdx,QWORD PTR [rsp+0x68]
   140011867:	mov    rcx,QWORD PTR [rsp+0xa8]
   14001186f:	call   0x140003ae0
   140011874:	nop
   140011875:	lea    rcx,[rsp+0x38]
   14001187a:	call   0x140011e60
   14001187f:	add    rsp,0x88
   140011886:	ret    
   140011887:	int3   
   140011888:	int3   
   140011889:	int3   
   14001188a:	int3   
   14001188b:	int3   
   14001188c:	int3   
   14001188d:	int3   
   14001188e:	int3   
   14001188f:	int3   
   140011890:	mov    DWORD PTR [rsp+0x10],edx
   140011894:	mov    QWORD PTR [rsp+0x8],rcx
   140011899:	sub    rsp,0x28
   14001189d:	mov    rcx,QWORD PTR [rsp+0x30]
   1400118a2:	call   0x1400323c0
   1400118a7:	mov    eax,DWORD PTR [rsp+0x38]
   1400118ab:	and    eax,0x1
   1400118ae:	test   eax,eax
   1400118b0:	je     0x1400118bc
   1400118b2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400118b7:	call   0x14001c4dc
   1400118bc:	mov    rax,QWORD PTR [rsp+0x30]
   1400118c1:	add    rsp,0x28
   1400118c5:	ret    
   1400118c6:	int3   
   1400118c7:	int3   
   1400118c8:	int3   
   1400118c9:	int3   
   1400118ca:	int3   
   1400118cb:	int3   
   1400118cc:	int3   
   1400118cd:	int3   
   1400118ce:	int3   
   1400118cf:	int3   
   1400118d0:	mov    DWORD PTR [rsp+0x10],edx
   1400118d4:	mov    QWORD PTR [rsp+0x8],rcx
   1400118d9:	sub    rsp,0x28
   1400118dd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400118e2:	call   0x140003060
   1400118e7:	mov    eax,DWORD PTR [rsp+0x38]
   1400118eb:	and    eax,0x1
   1400118ee:	test   eax,eax
   1400118f0:	je     0x1400118fc
   1400118f2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400118f7:	call   0x14001c4dc
   1400118fc:	mov    rax,QWORD PTR [rsp+0x30]
   140011901:	add    rsp,0x28
   140011905:	ret    
   140011906:	int3   
   140011907:	int3   
   140011908:	int3   
   140011909:	int3   
   14001190a:	int3   
   14001190b:	int3   
   14001190c:	int3   
   14001190d:	int3   
   14001190e:	int3   
   14001190f:	int3   
   140011910:	mov    QWORD PTR [rsp+0x8],rcx
   140011915:	sub    rsp,0x28
   140011919:	mov    rcx,QWORD PTR [rsp+0x30]
   14001191e:	call   0x140011ca0
   140011923:	mov    rax,QWORD PTR [rsp+0x30]
   140011928:	add    rsp,0x28
   14001192c:	ret    
   14001192d:	int3   
   14001192e:	int3   
   14001192f:	int3   
   140011930:	mov    QWORD PTR [rsp+0x10],rdx
   140011935:	mov    QWORD PTR [rsp+0x8],rcx
   14001193a:	sub    rsp,0x28
   14001193e:	mov    rcx,QWORD PTR [rsp+0x30]
   140011943:	call   QWORD PTR [rsp+0x38]
   140011947:	add    rsp,0x28
   14001194b:	ret    
   14001194c:	int3   
   14001194d:	int3   
   14001194e:	int3   
   14001194f:	int3   
   140011950:	mov    WORD PTR [rsp+0x10],dx
   140011955:	mov    QWORD PTR [rsp+0x8],rcx
   14001195a:	sub    rsp,0x68
   14001195e:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140011967:	mov    DWORD PTR [rsp+0x20],0x0
   14001196f:	mov    rdx,QWORD PTR [rsp+0x70]
   140011974:	lea    rcx,[rsp+0x28]
   140011979:	call   0x1400068f0
   14001197e:	nop
   14001197f:	lea    rcx,[rsp+0x28]
   140011984:	call   0x1400069f0
   140011989:	movzx  eax,al
   14001198c:	test   eax,eax
   14001198e:	jne    0x14001199d
   140011990:	mov    eax,DWORD PTR [rsp+0x20]
   140011994:	or     eax,0x4
   140011997:	mov    DWORD PTR [rsp+0x20],eax
   14001199b:	jmp    0x1400119fd
   14001199d:	mov    rax,QWORD PTR [rsp+0x70]
   1400119a2:	mov    rax,QWORD PTR [rax]
   1400119a5:	movsxd rax,DWORD PTR [rax+0x4]
   1400119a9:	mov    rcx,QWORD PTR [rsp+0x70]
   1400119ae:	add    rcx,rax
   1400119b1:	call   0x140003440
   1400119b6:	movzx  edx,WORD PTR [rsp+0x78]
   1400119bb:	mov    rcx,rax
   1400119be:	call   0x1400059c0
   1400119c3:	mov    WORD PTR [rsp+0x50],ax
   1400119c8:	movzx  eax,WORD PTR [rsp+0x50]
   1400119cd:	mov    WORD PTR [rsp+0x38],ax
   1400119d2:	call   0x1400011a0
   1400119d7:	mov    WORD PTR [rsp+0x3a],ax
   1400119dc:	lea    rdx,[rsp+0x38]
   1400119e1:	lea    rcx,[rsp+0x3a]
   1400119e6:	call   0x140001160
   1400119eb:	movzx  eax,al
   1400119ee:	test   eax,eax
   1400119f0:	je     0x1400119fd
   1400119f2:	mov    eax,DWORD PTR [rsp+0x20]
   1400119f6:	or     eax,0x4
   1400119f9:	mov    DWORD PTR [rsp+0x20],eax
   1400119fd:	mov    rax,QWORD PTR [rsp+0x70]
   140011a02:	mov    rax,QWORD PTR [rax]
   140011a05:	movsxd rax,DWORD PTR [rax+0x4]
   140011a09:	mov    rcx,QWORD PTR [rsp+0x70]
   140011a0e:	add    rcx,rax
   140011a11:	xor    r8d,r8d
   140011a14:	mov    edx,DWORD PTR [rsp+0x20]
   140011a18:	call   0x140003400
   140011a1d:	mov    rax,QWORD PTR [rsp+0x70]
   140011a22:	mov    QWORD PTR [rsp+0x40],rax
   140011a27:	lea    rcx,[rsp+0x28]
   140011a2c:	call   0x1400069b0
   140011a31:	mov    rax,QWORD PTR [rsp+0x40]
   140011a36:	add    rsp,0x68
   140011a3a:	ret    
   140011a3b:	int3   
   140011a3c:	int3   
   140011a3d:	int3   
   140011a3e:	int3   
   140011a3f:	int3   
   140011a40:	mov    QWORD PTR [rsp+0x10],rdx
   140011a45:	mov    QWORD PTR [rsp+0x8],rcx
   140011a4a:	sub    rsp,0x28
   140011a4e:	mov    rdx,QWORD PTR [rsp+0x38]
   140011a53:	mov    rcx,QWORD PTR [rsp+0x30]
   140011a58:	call   0x140005f20
   140011a5d:	add    rsp,0x28
   140011a61:	ret    
   140011a62:	int3   
   140011a63:	int3   
   140011a64:	int3   
   140011a65:	int3   
   140011a66:	int3   
   140011a67:	int3   
   140011a68:	int3   
   140011a69:	int3   
   140011a6a:	int3   
   140011a6b:	int3   
   140011a6c:	int3   
   140011a6d:	int3   
   140011a6e:	int3   
   140011a6f:	int3   
   140011a70:	mov    QWORD PTR [rsp+0x10],rdx
   140011a75:	mov    QWORD PTR [rsp+0x8],rcx
   140011a7a:	sub    rsp,0x28
   140011a7e:	mov    rcx,QWORD PTR [rsp+0x30]
   140011a83:	call   0x140006370
   140011a88:	mov    r8,QWORD PTR [rsp+0x30]
   140011a8d:	mov    rdx,rax
   140011a90:	mov    rcx,QWORD PTR [rsp+0x38]
   140011a95:	call   0x14000a310
   140011a9a:	mov    rax,QWORD PTR [rsp+0x38]
   140011a9f:	add    rsp,0x28
   140011aa3:	ret    
   140011aa4:	int3   
   140011aa5:	int3   
   140011aa6:	int3   
   140011aa7:	int3   
   140011aa8:	int3   
   140011aa9:	int3   
   140011aaa:	int3   
   140011aab:	int3   
   140011aac:	int3   
   140011aad:	int3   
   140011aae:	int3   
   140011aaf:	int3   
   140011ab0:	mov    QWORD PTR [rsp+0x10],rdx
   140011ab5:	mov    QWORD PTR [rsp+0x8],rcx
   140011aba:	sub    rsp,0x28
   140011abe:	mov    rcx,QWORD PTR [rsp+0x30]
   140011ac3:	call   0x140006370
   140011ac8:	mov    r11,rax
   140011acb:	mov    rax,QWORD PTR [rsp+0x30]
   140011ad0:	mov    rax,QWORD PTR [rax+0x18]
   140011ad4:	lea    rdx,[r11+rax*2]
   140011ad8:	mov    r8,QWORD PTR [rsp+0x30]
   140011add:	mov    rcx,QWORD PTR [rsp+0x38]
   140011ae2:	call   0x140009210
   140011ae7:	mov    rax,QWORD PTR [rsp+0x38]
   140011aec:	add    rsp,0x28
   140011af0:	ret    
   140011af1:	int3   
   140011af2:	int3   
   140011af3:	int3   
   140011af4:	int3   
   140011af5:	int3   
   140011af6:	int3   
   140011af7:	int3   
   140011af8:	int3   
   140011af9:	int3   
   140011afa:	int3   
   140011afb:	int3   
   140011afc:	int3   
   140011afd:	int3   
   140011afe:	int3   
   140011aff:	int3   
   140011b00:	mov    QWORD PTR [rsp+0x10],rdx
   140011b05:	mov    QWORD PTR [rsp+0x8],rcx
   140011b0a:	sub    rsp,0x28
   140011b0e:	mov    rcx,QWORD PTR [rsp+0x30]
   140011b13:	call   0x140006370
   140011b18:	mov    r11,rax
   140011b1b:	mov    rax,QWORD PTR [rsp+0x30]
   140011b20:	mov    rax,QWORD PTR [rax+0x18]
   140011b24:	lea    rdx,[r11+rax*2]
   140011b28:	mov    r8,QWORD PTR [rsp+0x30]
   140011b2d:	mov    rcx,QWORD PTR [rsp+0x38]
   140011b32:	call   0x14000a310
   140011b37:	mov    rax,QWORD PTR [rsp+0x38]
   140011b3c:	add    rsp,0x28
   140011b40:	ret    
   140011b41:	int3   
   140011b42:	int3   
   140011b43:	int3   
   140011b44:	int3   
   140011b45:	int3   
   140011b46:	int3   
   140011b47:	int3   
   140011b48:	int3   
   140011b49:	int3   
   140011b4a:	int3   
   140011b4b:	int3   
   140011b4c:	int3   
   140011b4d:	int3   
   140011b4e:	int3   
   140011b4f:	int3   
   140011b50:	mov    QWORD PTR [rsp+0x10],rdx
   140011b55:	mov    QWORD PTR [rsp+0x8],rcx
   140011b5a:	sub    rsp,0x28
   140011b5e:	mov    rcx,QWORD PTR [rsp+0x30]
   140011b63:	mov    rax,QWORD PTR [rsp+0x38]
   140011b68:	cmp    QWORD PTR [rcx+0x18],rax
   140011b6c:	ja     0x140011b73
   140011b6e:	call   0x14001a348
   140011b73:	mov    rcx,QWORD PTR [rsp+0x30]
   140011b78:	call   0x140006370
   140011b7d:	mov    r11,rax
   140011b80:	mov    rax,QWORD PTR [rsp+0x38]
   140011b85:	lea    rax,[r11+rax*2]
   140011b89:	add    rsp,0x28
   140011b8d:	ret    
   140011b8e:	int3   
   140011b8f:	int3   
   140011b90:	mov    QWORD PTR [rsp+0x10],rdx
   140011b95:	mov    QWORD PTR [rsp+0x8],rcx
   140011b9a:	sub    rsp,0x28
   140011b9e:	mov    rax,QWORD PTR [rsp+0x30]
   140011ba3:	mov    rax,QWORD PTR [rax+0x18]
   140011ba7:	cmp    QWORD PTR [rsp+0x38],rax
   140011bac:	jbe    0x140011bb3
   140011bae:	call   0x14001cd78
   140011bb3:	xor    eax,eax
   140011bb5:	test   eax,eax
   140011bb7:	jne    0x140011bb3
   140011bb9:	mov    rcx,QWORD PTR [rsp+0x30]
   140011bbe:	call   0x140006370
   140011bc3:	mov    r11,rax
   140011bc6:	mov    rax,QWORD PTR [rsp+0x38]
   140011bcb:	lea    rax,[r11+rax*2]
   140011bcf:	add    rsp,0x28
   140011bd3:	ret    
   140011bd4:	int3   
   140011bd5:	int3   
   140011bd6:	int3   
   140011bd7:	int3   
   140011bd8:	int3   
   140011bd9:	int3   
   140011bda:	int3   
   140011bdb:	int3   
   140011bdc:	int3   
   140011bdd:	int3   
   140011bde:	int3   
   140011bdf:	int3   
   140011be0:	mov    QWORD PTR [rsp+0x20],r9
   140011be5:	mov    QWORD PTR [rsp+0x18],r8
   140011bea:	mov    QWORD PTR [rsp+0x10],rdx
   140011bef:	mov    QWORD PTR [rsp+0x8],rcx
   140011bf4:	sub    rsp,0x48
   140011bf8:	mov    DWORD PTR [rsp+0x34],0x0
   140011c00:	lea    rdx,[rsp+0x30]
   140011c05:	mov    rcx,QWORD PTR [rsp+0x50]
   140011c0a:	call   0x140012320
   140011c0f:	mov    QWORD PTR [rsp+0x20],rax
   140011c14:	mov    r9,QWORD PTR [rsp+0x68]
   140011c19:	mov    r8,QWORD PTR [rsp+0x60]
   140011c1e:	mov    rdx,QWORD PTR [rsp+0x50]
   140011c23:	mov    rcx,QWORD PTR [rsp+0x58]
   140011c28:	call   0x1400122b0
   140011c2d:	mov    eax,DWORD PTR [rsp+0x34]
   140011c31:	or     eax,0x1
   140011c34:	mov    DWORD PTR [rsp+0x34],eax
   140011c38:	mov    rax,QWORD PTR [rsp+0x58]
   140011c3d:	add    rsp,0x48
   140011c41:	ret    
   140011c42:	int3   
   140011c43:	int3   
   140011c44:	int3   
   140011c45:	int3   
   140011c46:	int3   
   140011c47:	int3   
   140011c48:	int3   
   140011c49:	int3   
   140011c4a:	int3   
   140011c4b:	int3   
   140011c4c:	int3   
   140011c4d:	int3   
   140011c4e:	int3   
   140011c4f:	int3   
   140011c50:	mov    QWORD PTR [rsp+0x10],rdx
   140011c55:	mov    QWORD PTR [rsp+0x8],rcx
   140011c5a:	sub    rsp,0x28
   140011c5e:	mov    rcx,QWORD PTR [rsp+0x30]
   140011c63:	call   0x140006400
   140011c68:	cmp    QWORD PTR [rsp+0x38],rax
   140011c6d:	jb     0x140011c74
   140011c6f:	call   0x14001cd78
   140011c74:	xor    eax,eax
   140011c76:	test   eax,eax
   140011c78:	jne    0x140011c74
   140011c7a:	mov    rax,QWORD PTR [rsp+0x38]
   140011c7f:	imul   rax,rax,0x28
   140011c83:	mov    rcx,QWORD PTR [rsp+0x30]
   140011c88:	add    rax,QWORD PTR [rcx+0x18]
   140011c8c:	add    rsp,0x28
   140011c90:	ret    
   140011c91:	int3   
   140011c92:	int3   
   140011c93:	int3   
   140011c94:	int3   
   140011c95:	int3   
   140011c96:	int3   
   140011c97:	int3   
   140011c98:	int3   
   140011c99:	int3   
   140011c9a:	int3   
   140011c9b:	int3   
   140011c9c:	int3   
   140011c9d:	int3   
   140011c9e:	int3   
   140011c9f:	int3   
   140011ca0:	mov    QWORD PTR [rsp+0x8],rcx
   140011ca5:	sub    rsp,0x48
   140011ca9:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140011cb2:	lea    rax,[rsp+0x20]
   140011cb7:	mov    QWORD PTR [rsp+0x28],rax
   140011cbc:	mov    rcx,QWORD PTR [rsp+0x28]
   140011cc1:	call   0x140005660
   140011cc6:	mov    rdx,rax
   140011cc9:	mov    rcx,QWORD PTR [rsp+0x50]
   140011cce:	call   0x1400126b0
   140011cd3:	nop
   140011cd4:	xor    edx,edx
   140011cd6:	mov    rcx,QWORD PTR [rsp+0x50]
   140011cdb:	call   0x1400124a0
   140011ce0:	nop
   140011ce1:	mov    rax,QWORD PTR [rsp+0x50]
   140011ce6:	add    rsp,0x48
   140011cea:	ret    
   140011ceb:	int3   
   140011cec:	int3   
   140011ced:	int3   
   140011cee:	int3   
   140011cef:	int3   
   140011cf0:	mov    QWORD PTR [rsp+0x10],rdx
   140011cf5:	mov    QWORD PTR [rsp+0x8],rcx
   140011cfa:	sub    rsp,0x28
   140011cfe:	mov    r8,QWORD PTR [rsp+0x30]
   140011d03:	mov    rdx,QWORD PTR [rsp+0x30]
   140011d08:	mov    rdx,QWORD PTR [rdx+0x20]
   140011d0c:	mov    rcx,QWORD PTR [rsp+0x38]
   140011d11:	call   0x1400127d0
   140011d16:	mov    rax,QWORD PTR [rsp+0x38]
   140011d1b:	add    rsp,0x28
   140011d1f:	ret    
   140011d20:	mov    QWORD PTR [rsp+0x10],rdx
   140011d25:	mov    QWORD PTR [rsp+0x8],rcx
   140011d2a:	push   rsi
   140011d2b:	push   rdi
   140011d2c:	sub    rsp,0x78
   140011d30:	mov    rcx,QWORD PTR [rsp+0x90]
   140011d38:	call   0x1400123a0
   140011d3d:	mov    rdi,rax
   140011d40:	mov    rcx,QWORD PTR [rsp+0x90]
   140011d48:	call   0x140012350
   140011d4d:	cmp    rdi,rax
   140011d50:	jae    0x140011d8a
   140011d52:	mov    r9,QWORD PTR [rsp+0x98]
   140011d5a:	mov    r8d,0x1
   140011d60:	mov    rdx,QWORD PTR [rsp+0x90]
   140011d68:	mov    rdx,QWORD PTR [rdx+0x20]
   140011d6c:	mov    rcx,QWORD PTR [rsp+0x90]
   140011d74:	call   0x140012550
   140011d79:	mov    rdx,rax
   140011d7c:	mov    rax,QWORD PTR [rsp+0x90]
   140011d84:	mov    QWORD PTR [rax+0x20],rdx
   140011d88:	jmp    0x140011dec
   140011d8a:	lea    rdx,[rsp+0x30]
   140011d8f:	mov    rcx,QWORD PTR [rsp+0x90]
   140011d97:	call   0x140011cf0
   140011d9c:	lea    rdi,[rsp+0x60]
   140011da1:	mov    rsi,rax
   140011da4:	mov    ecx,0x10
   140011da9:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011dab:	lea    rdi,[rsp+0x20]
   140011db0:	lea    rsi,[rsp+0x60]
   140011db5:	mov    ecx,0x10
   140011dba:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011dbc:	lea    rdi,[rsp+0x50]
   140011dc1:	lea    rsi,[rsp+0x20]
   140011dc6:	mov    ecx,0x10
   140011dcb:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011dcd:	mov    r9,QWORD PTR [rsp+0x98]
   140011dd5:	lea    r8,[rsp+0x50]
   140011dda:	lea    rdx,[rsp+0x40]
   140011ddf:	mov    rcx,QWORD PTR [rsp+0x90]
   140011de7:	call   0x1400123c0
   140011dec:	add    rsp,0x78
   140011df0:	pop    rdi
   140011df1:	pop    rsi
   140011df2:	ret    
   140011df3:	int3   
   140011df4:	int3   
   140011df5:	int3   
   140011df6:	int3   
   140011df7:	int3   
   140011df8:	int3   
   140011df9:	int3   
   140011dfa:	int3   
   140011dfb:	int3   
   140011dfc:	int3   
   140011dfd:	int3   
   140011dfe:	int3   
   140011dff:	int3   
   140011e00:	mov    QWORD PTR [rsp+0x10],rdx
   140011e05:	mov    QWORD PTR [rsp+0x8],rcx
   140011e0a:	sub    rsp,0x48
   140011e0e:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140011e17:	lea    rax,[rsp+0x20]
   140011e1c:	mov    QWORD PTR [rsp+0x28],rax
   140011e21:	mov    rcx,QWORD PTR [rsp+0x28]
   140011e26:	call   0x140005660
   140011e2b:	mov    rdx,rax
   140011e2e:	mov    rcx,QWORD PTR [rsp+0x50]
   140011e33:	call   0x1400126b0
   140011e38:	nop
   140011e39:	xor    eax,eax
   140011e3b:	mov    WORD PTR [rsp+0x30],ax
   140011e40:	lea    r8,[rsp+0x30]
   140011e45:	mov    rdx,QWORD PTR [rsp+0x58]
   140011e4a:	mov    rcx,QWORD PTR [rsp+0x50]
   140011e4f:	call   0x1400125a0
   140011e54:	nop
   140011e55:	mov    rax,QWORD PTR [rsp+0x50]
   140011e5a:	add    rsp,0x48
   140011e5e:	ret    
   140011e5f:	int3   
   140011e60:	mov    QWORD PTR [rsp+0x8],rcx
   140011e65:	sub    rsp,0x28
   140011e69:	mov    rcx,QWORD PTR [rsp+0x30]
   140011e6e:	call   0x140012620
   140011e73:	mov    rcx,QWORD PTR [rsp+0x30]
   140011e78:	call   0x140012270
   140011e7d:	add    rsp,0x28
   140011e81:	ret    
   140011e82:	int3   
   140011e83:	int3   
   140011e84:	int3   
   140011e85:	int3   
   140011e86:	int3   
   140011e87:	int3   
   140011e88:	int3   
   140011e89:	int3   
   140011e8a:	int3   
   140011e8b:	int3   
   140011e8c:	int3   
   140011e8d:	int3   
   140011e8e:	int3   
   140011e8f:	int3   
   140011e90:	mov    QWORD PTR [rsp+0x10],rdx
   140011e95:	mov    QWORD PTR [rsp+0x8],rcx
   140011e9a:	sub    rsp,0x28
   140011e9e:	mov    rcx,QWORD PTR [rsp+0x30]
   140011ea3:	call   0x140012600
   140011ea8:	cmp    QWORD PTR [rsp+0x38],rax
   140011ead:	jb     0x140011eb4
   140011eaf:	call   0x14001cd78
   140011eb4:	xor    eax,eax
   140011eb6:	test   eax,eax
   140011eb8:	jne    0x140011eb4
   140011eba:	mov    rcx,QWORD PTR [rsp+0x30]
   140011ebf:	mov    rcx,QWORD PTR [rcx+0x18]
   140011ec3:	mov    rax,QWORD PTR [rsp+0x38]
   140011ec8:	lea    rax,[rcx+rax*2]
   140011ecc:	add    rsp,0x28
   140011ed0:	ret    
   140011ed1:	int3   
   140011ed2:	int3   
   140011ed3:	int3   
   140011ed4:	int3   
   140011ed5:	int3   
   140011ed6:	int3   
   140011ed7:	int3   
   140011ed8:	int3   
   140011ed9:	int3   
   140011eda:	int3   
   140011edb:	int3   
   140011edc:	int3   
   140011edd:	int3   
   140011ede:	int3   
   140011edf:	int3   
   140011ee0:	mov    QWORD PTR [rsp+0x8],rcx
   140011ee5:	sub    rsp,0x28
   140011ee9:	mov    rax,QWORD PTR [rsp+0x30]
   140011eee:	cmp    QWORD PTR [rax],0xfffffffffffffffc
   140011ef2:	je     0x140011f46
   140011ef4:	mov    rcx,QWORD PTR [rsp+0x30]
   140011ef9:	call   0x1400013d0
   140011efe:	movzx  eax,al
   140011f01:	test   eax,eax
   140011f03:	jne    0x140011f0a
   140011f05:	call   0x14001cd78
   140011f0a:	xor    eax,eax
   140011f0c:	test   eax,eax
   140011f0e:	jne    0x140011f0a
   140011f10:	mov    rcx,QWORD PTR [rsp+0x30]
   140011f15:	mov    rcx,QWORD PTR [rcx]
   140011f18:	call   0x140006370
   140011f1d:	mov    r11,rax
   140011f20:	mov    rax,QWORD PTR [rsp+0x30]
   140011f25:	mov    rax,QWORD PTR [rax]
   140011f28:	mov    rax,QWORD PTR [rax+0x18]
   140011f2c:	lea    rcx,[r11+rax*2]
   140011f30:	mov    rax,QWORD PTR [rsp+0x30]
   140011f35:	cmp    QWORD PTR [rax+0x8],rcx
   140011f39:	jb     0x140011f40
   140011f3b:	call   0x14001cd78
   140011f40:	xor    eax,eax
   140011f42:	test   eax,eax
   140011f44:	jne    0x140011f40
   140011f46:	mov    rax,QWORD PTR [rsp+0x30]
   140011f4b:	mov    rax,QWORD PTR [rax+0x8]
   140011f4f:	add    rsp,0x28
   140011f53:	ret    
   140011f54:	int3   
   140011f55:	int3   
   140011f56:	int3   
   140011f57:	int3   
   140011f58:	int3   
   140011f59:	int3   
   140011f5a:	int3   
   140011f5b:	int3   
   140011f5c:	int3   
   140011f5d:	int3   
   140011f5e:	int3   
   140011f5f:	int3   
   140011f60:	mov    QWORD PTR [rsp+0x8],rcx
   140011f65:	sub    rsp,0x28
   140011f69:	mov    rax,QWORD PTR [rsp+0x30]
   140011f6e:	cmp    QWORD PTR [rax],0xfffffffffffffffc
   140011f72:	je     0x140011fc6
   140011f74:	mov    rcx,QWORD PTR [rsp+0x30]
   140011f79:	call   0x1400013d0
   140011f7e:	movzx  eax,al
   140011f81:	test   eax,eax
   140011f83:	jne    0x140011f8a
   140011f85:	call   0x14001cd78
   140011f8a:	xor    eax,eax
   140011f8c:	test   eax,eax
   140011f8e:	jne    0x140011f8a
   140011f90:	mov    rcx,QWORD PTR [rsp+0x30]
   140011f95:	mov    rcx,QWORD PTR [rcx]
   140011f98:	call   0x140006370
   140011f9d:	mov    r11,rax
   140011fa0:	mov    rax,QWORD PTR [rsp+0x30]
   140011fa5:	mov    rax,QWORD PTR [rax]
   140011fa8:	mov    rax,QWORD PTR [rax+0x18]
   140011fac:	lea    rcx,[r11+rax*2]
   140011fb0:	mov    rax,QWORD PTR [rsp+0x30]
   140011fb5:	cmp    QWORD PTR [rax+0x8],rcx
   140011fb9:	jb     0x140011fc0
   140011fbb:	call   0x14001cd78
   140011fc0:	xor    eax,eax
   140011fc2:	test   eax,eax
   140011fc4:	jne    0x140011fc0
   140011fc6:	mov    rcx,QWORD PTR [rsp+0x30]
   140011fcb:	mov    rcx,QWORD PTR [rcx+0x8]
   140011fcf:	add    rcx,0x2
   140011fd3:	mov    rax,QWORD PTR [rsp+0x30]
   140011fd8:	mov    QWORD PTR [rax+0x8],rcx
   140011fdc:	mov    rax,QWORD PTR [rsp+0x30]
   140011fe1:	add    rsp,0x28
   140011fe5:	ret    
   140011fe6:	int3   
   140011fe7:	int3   
   140011fe8:	int3   
   140011fe9:	int3   
   140011fea:	int3   
   140011feb:	int3   
   140011fec:	int3   
   140011fed:	int3   
   140011fee:	int3   
   140011fef:	int3   
   140011ff0:	mov    QWORD PTR [rsp+0x18],r8
   140011ff5:	mov    QWORD PTR [rsp+0x10],rdx
   140011ffa:	mov    QWORD PTR [rsp+0x8],rcx
   140011fff:	push   rsi
   140012000:	push   rdi
   140012001:	sub    rsp,0x58
   140012005:	lea    rdi,[rsp+0x40]
   14001200a:	mov    rsi,QWORD PTR [rsp+0x70]
   14001200f:	mov    ecx,0x10
   140012014:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012016:	lea    rdi,[rsp+0x20]
   14001201b:	lea    rsi,[rsp+0x40]
   140012020:	mov    ecx,0x10
   140012025:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012027:	mov    rdx,QWORD PTR [rsp+0x80]
   14001202f:	lea    rcx,[rsp+0x20]
   140012034:	call   0x14000a3a0
   140012039:	lea    rdi,[rsp+0x30]
   14001203e:	mov    rsi,rax
   140012041:	mov    ecx,0x10
   140012046:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012048:	lea    rsi,[rsp+0x30]
   14001204d:	mov    rdi,QWORD PTR [rsp+0x78]
   140012052:	mov    ecx,0x10
   140012057:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012059:	mov    rax,QWORD PTR [rsp+0x78]
   14001205e:	add    rsp,0x58
   140012062:	pop    rdi
   140012063:	pop    rsi
   140012064:	ret    
   140012065:	int3   
   140012066:	int3   
   140012067:	int3   
   140012068:	int3   
   140012069:	int3   
   14001206a:	int3   
   14001206b:	int3   
   14001206c:	int3   
   14001206d:	int3   
   14001206e:	int3   
   14001206f:	int3   
   140012070:	mov    QWORD PTR [rsp+0x10],rdx
   140012075:	mov    QWORD PTR [rsp+0x8],rcx
   14001207a:	sub    rsp,0x38
   14001207e:	mov    rdx,QWORD PTR [rsp+0x48]
   140012083:	mov    rcx,QWORD PTR [rsp+0x40]
   140012088:	call   0x140012750
   14001208d:	movzx  eax,al
   140012090:	test   eax,eax
   140012092:	jne    0x14001209e
   140012094:	mov    DWORD PTR [rsp+0x20],0x1
   14001209c:	jmp    0x1400120a6
   14001209e:	mov    DWORD PTR [rsp+0x20],0x0
   1400120a6:	mov    al,BYTE PTR [rsp+0x20]
   1400120aa:	add    rsp,0x38
   1400120ae:	ret    
   1400120af:	int3   
   1400120b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400120b5:	sub    rsp,0x28
   1400120b9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400120be:	call   0x140004e70
   1400120c3:	add    rsp,0x28
   1400120c7:	ret    
   1400120c8:	int3   
   1400120c9:	int3   
   1400120ca:	int3   
   1400120cb:	int3   
   1400120cc:	int3   
   1400120cd:	int3   
   1400120ce:	int3   
   1400120cf:	int3   
   1400120d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400120d5:	sub    rsp,0x28
   1400120d9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400120de:	call   0x1400013d0
   1400120e3:	movzx  eax,al
   1400120e6:	test   eax,eax
   1400120e8:	jne    0x1400120ef
   1400120ea:	call   0x14001cd78
   1400120ef:	xor    eax,eax
   1400120f1:	test   eax,eax
   1400120f3:	jne    0x1400120ef
   1400120f5:	mov    rcx,QWORD PTR [rsp+0x30]
   1400120fa:	call   0x140001350
   1400120ff:	mov    rcx,QWORD PTR [rsp+0x30]
   140012104:	mov    rax,QWORD PTR [rax+0x20]
   140012108:	cmp    QWORD PTR [rcx+0x8],rax
   14001210c:	jb     0x140012113
   14001210e:	call   0x14001cd78
   140012113:	xor    eax,eax
   140012115:	test   eax,eax
   140012117:	jne    0x140012113
   140012119:	mov    rcx,QWORD PTR [rsp+0x30]
   14001211e:	mov    rcx,QWORD PTR [rcx+0x8]
   140012122:	add    rcx,0x10
   140012126:	mov    rax,QWORD PTR [rsp+0x30]
   14001212b:	mov    QWORD PTR [rax+0x8],rcx
   14001212f:	mov    rax,QWORD PTR [rsp+0x30]
   140012134:	add    rsp,0x28
   140012138:	ret    
   140012139:	int3   
   14001213a:	int3   
   14001213b:	int3   
   14001213c:	int3   
   14001213d:	int3   
   14001213e:	int3   
   14001213f:	int3   
   140012140:	mov    QWORD PTR [rsp+0x8],rcx
   140012145:	sub    rsp,0x28
   140012149:	mov    rcx,QWORD PTR [rsp+0x30]
   14001214e:	call   0x1400120b0
   140012153:	add    rsp,0x28
   140012157:	ret    
   140012158:	int3   
   140012159:	int3   
   14001215a:	int3   
   14001215b:	int3   
   14001215c:	int3   
   14001215d:	int3   
   14001215e:	int3   
   14001215f:	int3   
   140012160:	mov    QWORD PTR [rsp+0x8],rcx
   140012165:	sub    rsp,0x28
   140012169:	mov    rcx,QWORD PTR [rsp+0x30]
   14001216e:	call   0x1400120d0
   140012173:	mov    rax,QWORD PTR [rsp+0x30]
   140012178:	add    rsp,0x28
   14001217c:	ret    
   14001217d:	int3   
   14001217e:	int3   
   14001217f:	int3   
   140012180:	mov    QWORD PTR [rsp+0x10],rdx
   140012185:	mov    QWORD PTR [rsp+0x8],rcx
   14001218a:	mov    rcx,QWORD PTR [rsp+0x8]
   14001218f:	mov    rax,QWORD PTR [rsp+0x10]
   140012194:	mov    rax,QWORD PTR [rax]
   140012197:	mov    QWORD PTR [rcx],rax
   14001219a:	mov    rax,QWORD PTR [rsp+0x8]
   14001219f:	ret    
   1400121a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400121a5:	sub    rsp,0x28
   1400121a9:	mov    rax,QWORD PTR [rsp+0x30]
   1400121ae:	cmp    DWORD PTR [rax],0xffffffff
   1400121b1:	je     0x1400121c1
   1400121b3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400121b8:	mov    rcx,QWORD PTR [rcx]
   1400121bb:	call   QWORD PTR [rip+0x27eaf]        # 0x14003a070
   1400121c1:	add    rsp,0x28
   1400121c5:	ret    
   1400121c6:	int3   
   1400121c7:	int3   
   1400121c8:	int3   
   1400121c9:	int3   
   1400121ca:	int3   
   1400121cb:	int3   
   1400121cc:	int3   
   1400121cd:	int3   
   1400121ce:	int3   
   1400121cf:	int3   
   1400121d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400121d5:	sub    rsp,0x18
   1400121d9:	mov    rax,QWORD PTR [rsp+0x20]
   1400121de:	cmp    DWORD PTR [rax],0xffffffff
   1400121e1:	jne    0x1400121ec
   1400121e3:	mov    DWORD PTR [rsp],0x1
   1400121ea:	jmp    0x1400121f3
   1400121ec:	mov    DWORD PTR [rsp],0x0
   1400121f3:	mov    al,BYTE PTR [rsp]
   1400121f6:	add    rsp,0x18
   1400121fa:	ret    
   1400121fb:	int3   
   1400121fc:	int3   
   1400121fd:	int3   
   1400121fe:	int3   
   1400121ff:	int3   
   140012200:	mov    QWORD PTR [rsp+0x8],rcx
   140012205:	mov    rax,QWORD PTR [rsp+0x8]
   14001220a:	mov    rax,QWORD PTR [rax]
   14001220d:	ret    
   14001220e:	int3   
   14001220f:	int3   
   140012210:	mov    QWORD PTR [rsp+0x8],rcx
   140012215:	sub    rsp,0x28
   140012219:	mov    rax,QWORD PTR [rsp+0x30]
   14001221e:	cmp    QWORD PTR [rax],0x0
   140012222:	je     0x140012232
   140012224:	mov    rcx,QWORD PTR [rsp+0x30]
   140012229:	mov    rcx,QWORD PTR [rcx]
   14001222c:	call   QWORD PTR [rip+0x27e3e]        # 0x14003a070
   140012232:	add    rsp,0x28
   140012236:	ret    
   140012237:	int3   
   140012238:	int3   
   140012239:	int3   
   14001223a:	int3   
   14001223b:	int3   
   14001223c:	int3   
   14001223d:	int3   
   14001223e:	int3   
   14001223f:	int3   
   140012240:	mov    QWORD PTR [rsp+0x8],rcx
   140012245:	sub    rsp,0x18
   140012249:	mov    rax,QWORD PTR [rsp+0x20]
   14001224e:	cmp    QWORD PTR [rax],0x0
   140012252:	jne    0x14001225d
   140012254:	mov    DWORD PTR [rsp],0x1
   14001225b:	jmp    0x140012264
   14001225d:	mov    DWORD PTR [rsp],0x0
   140012264:	mov    al,BYTE PTR [rsp]
   140012267:	add    rsp,0x18
   14001226b:	ret    
   14001226c:	int3   
   14001226d:	int3   
   14001226e:	int3   
   14001226f:	int3   
   140012270:	mov    QWORD PTR [rsp+0x8],rcx
   140012275:	sub    rsp,0x28
   140012279:	mov    rcx,QWORD PTR [rsp+0x30]
   14001227e:	call   0x140012710
   140012283:	add    rsp,0x28
   140012287:	ret    
   140012288:	int3   
   140012289:	int3   
   14001228a:	int3   
   14001228b:	int3   
   14001228c:	int3   
   14001228d:	int3   
   14001228e:	int3   
   14001228f:	int3   
   140012290:	mov    QWORD PTR [rsp+0x8],rcx
   140012295:	sub    rsp,0x28
   140012299:	mov    rcx,QWORD PTR [rsp+0x30]
   14001229e:	call   0x140015790
   1400122a3:	mov    rax,QWORD PTR [rsp+0x30]
   1400122a8:	add    rsp,0x28
   1400122ac:	ret    
   1400122ad:	int3   
   1400122ae:	int3   
   1400122af:	int3   
   1400122b0:	mov    QWORD PTR [rsp+0x20],r9
   1400122b5:	mov    QWORD PTR [rsp+0x18],r8
   1400122ba:	mov    QWORD PTR [rsp+0x10],rdx
   1400122bf:	mov    QWORD PTR [rsp+0x8],rcx
   1400122c4:	sub    rsp,0x38
   1400122c8:	lea    rax,[rsp+0x20]
   1400122cd:	mov    QWORD PTR [rsp+0x28],rax
   1400122d2:	mov    rdx,QWORD PTR [rsp+0x60]
   1400122d7:	mov    rcx,QWORD PTR [rsp+0x28]
   1400122dc:	call   0x140007d50
   1400122e1:	mov    rdx,rax
   1400122e4:	mov    rcx,QWORD PTR [rsp+0x40]
   1400122e9:	call   0x140005630
   1400122ee:	xor    r8d,r8d
   1400122f1:	xor    edx,edx
   1400122f3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400122f8:	call   0x1400062d0
   1400122fd:	mov    r9,QWORD PTR [rsp+0x58]
   140012302:	mov    r8,QWORD PTR [rsp+0x50]
   140012307:	mov    rdx,QWORD PTR [rsp+0x48]
   14001230c:	mov    rcx,QWORD PTR [rsp+0x40]
   140012311:	call   0x140005e10
   140012316:	mov    rax,QWORD PTR [rsp+0x40]
   14001231b:	add    rsp,0x38
   14001231f:	ret    
   140012320:	mov    QWORD PTR [rsp+0x10],rdx
   140012325:	mov    QWORD PTR [rsp+0x8],rcx
   14001232a:	sub    rsp,0x28
   14001232e:	mov    rdx,QWORD PTR [rsp+0x30]
   140012333:	mov    rcx,QWORD PTR [rsp+0x38]
   140012338:	call   0x140007d50
   14001233d:	mov    rax,QWORD PTR [rsp+0x38]
   140012342:	add    rsp,0x28
   140012346:	ret    
   140012347:	int3   
   140012348:	int3   
   140012349:	int3   
   14001234a:	int3   
   14001234b:	int3   
   14001234c:	int3   
   14001234d:	int3   
   14001234e:	int3   
   14001234f:	int3   
   140012350:	mov    QWORD PTR [rsp+0x8],rcx
   140012355:	sub    rsp,0x18
   140012359:	mov    rax,QWORD PTR [rsp+0x20]
   14001235e:	cmp    QWORD PTR [rax+0x18],0x0
   140012363:	jne    0x14001236f
   140012365:	mov    QWORD PTR [rsp],0x0
   14001236d:	jmp    0x14001238c
   14001236f:	mov    rax,QWORD PTR [rsp+0x20]
   140012374:	mov    rcx,QWORD PTR [rsp+0x20]
   140012379:	mov    rcx,QWORD PTR [rcx+0x18]
   14001237d:	mov    rax,QWORD PTR [rax+0x28]
   140012381:	sub    rax,rcx
   140012384:	sar    rax,0x4
   140012388:	mov    QWORD PTR [rsp],rax
   14001238c:	mov    rax,QWORD PTR [rsp]
   140012390:	add    rsp,0x18
   140012394:	ret    
   140012395:	int3   
   140012396:	int3   
   140012397:	int3   
   140012398:	int3   
   140012399:	int3   
   14001239a:	int3   
   14001239b:	int3   
   14001239c:	int3   
   14001239d:	int3   
   14001239e:	int3   
   14001239f:	int3   
   1400123a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400123a5:	mov    rax,QWORD PTR [rsp+0x8]
   1400123aa:	mov    rcx,QWORD PTR [rsp+0x8]
   1400123af:	mov    rcx,QWORD PTR [rcx+0x18]
   1400123b3:	mov    rax,QWORD PTR [rax+0x20]
   1400123b7:	sub    rax,rcx
   1400123ba:	sar    rax,0x4
   1400123be:	ret    
   1400123bf:	int3   
   1400123c0:	mov    QWORD PTR [rsp+0x20],r9
   1400123c5:	mov    QWORD PTR [rsp+0x18],r8
   1400123ca:	mov    QWORD PTR [rsp+0x10],rdx
   1400123cf:	mov    QWORD PTR [rsp+0x8],rcx
   1400123d4:	push   rsi
   1400123d5:	push   rdi
   1400123d6:	sub    rsp,0x78
   1400123da:	mov    rcx,QWORD PTR [rsp+0x90]
   1400123e2:	call   0x1400123a0
   1400123e7:	test   rax,rax
   1400123ea:	jne    0x1400123f7
   1400123ec:	mov    QWORD PTR [rsp+0x60],0x0
   1400123f5:	jmp    0x14001241e
   1400123f7:	lea    rdx,[rsp+0x28]
   1400123fc:	mov    rcx,QWORD PTR [rsp+0x90]
   140012404:	call   0x140009d20
   140012409:	mov    rdx,rax
   14001240c:	mov    rcx,QWORD PTR [rsp+0xa0]
   140012414:	call   0x140012f60
   140012419:	mov    QWORD PTR [rsp+0x60],rax
   14001241e:	mov    rax,QWORD PTR [rsp+0x60]
   140012423:	mov    QWORD PTR [rsp+0x20],rax
   140012428:	lea    rdi,[rsp+0x50]
   14001242d:	mov    rsi,QWORD PTR [rsp+0xa0]
   140012435:	mov    ecx,0x10
   14001243a:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001243c:	mov    r9,QWORD PTR [rsp+0xa8]
   140012444:	mov    r8d,0x1
   14001244a:	lea    rdx,[rsp+0x50]
   14001244f:	mov    rcx,QWORD PTR [rsp+0x90]
   140012457:	call   0x140012830
   14001245c:	lea    rdx,[rsp+0x38]
   140012461:	mov    rcx,QWORD PTR [rsp+0x90]
   140012469:	call   0x140009d20
   14001246e:	mov    r8,QWORD PTR [rsp+0x20]
   140012473:	mov    rdx,QWORD PTR [rsp+0x98]
   14001247b:	mov    rcx,rax
   14001247e:	call   0x140012fc0
   140012483:	mov    rax,QWORD PTR [rsp+0x98]
   14001248b:	add    rsp,0x78
   14001248f:	pop    rdi
   140012490:	pop    rsi
   140012491:	ret    
   140012492:	int3   
   140012493:	int3   
   140012494:	int3   
   140012495:	int3   
   140012496:	int3   
   140012497:	int3   
   140012498:	int3   
   140012499:	int3   
   14001249a:	int3   
   14001249b:	int3   
   14001249c:	int3   
   14001249d:	int3   
   14001249e:	int3   
   14001249f:	int3   
   1400124a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400124a5:	mov    QWORD PTR [rsp+0x8],rcx
   1400124aa:	sub    rsp,0x28
   1400124ae:	mov    rax,QWORD PTR [rsp+0x30]
   1400124b3:	mov    QWORD PTR [rax+0x18],0x0
   1400124bb:	mov    rax,QWORD PTR [rsp+0x30]
   1400124c0:	mov    QWORD PTR [rax+0x20],0x0
   1400124c8:	mov    rax,QWORD PTR [rsp+0x30]
   1400124cd:	mov    QWORD PTR [rax+0x28],0x0
   1400124d5:	cmp    QWORD PTR [rsp+0x38],0x0
   1400124db:	jne    0x1400124e3
   1400124dd:	xor    al,al
   1400124df:	jmp    0x140012549
   1400124e1:	jmp    0x140012547
   1400124e3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400124e8:	call   0x140012810
   1400124ed:	cmp    rax,QWORD PTR [rsp+0x38]
   1400124f2:	jae    0x1400124fb
   1400124f4:	call   0x14000aa70
   1400124f9:	jmp    0x140012547
   1400124fb:	mov    rcx,QWORD PTR [rsp+0x30]
   140012500:	add    rcx,0x10
   140012504:	mov    rdx,QWORD PTR [rsp+0x38]
   140012509:	call   0x140012d60
   14001250e:	mov    r11,rax
   140012511:	mov    rax,QWORD PTR [rsp+0x30]
   140012516:	mov    QWORD PTR [rax+0x18],r11
   14001251a:	mov    rcx,QWORD PTR [rsp+0x30]
   14001251f:	mov    rax,QWORD PTR [rsp+0x30]
   140012524:	mov    rax,QWORD PTR [rax+0x18]
   140012528:	mov    QWORD PTR [rcx+0x20],rax
   14001252c:	mov    rcx,QWORD PTR [rsp+0x38]
   140012531:	imul   rcx,rcx,0x10
   140012535:	mov    rax,QWORD PTR [rsp+0x30]
   14001253a:	add    rcx,QWORD PTR [rax+0x18]
   14001253e:	mov    rax,QWORD PTR [rsp+0x30]
   140012543:	mov    QWORD PTR [rax+0x28],rcx
   140012547:	mov    al,0x1
   140012549:	add    rsp,0x28
   14001254d:	ret    
   14001254e:	int3   
   14001254f:	int3   
   140012550:	mov    QWORD PTR [rsp+0x20],r9
   140012555:	mov    QWORD PTR [rsp+0x18],r8
   14001255a:	mov    QWORD PTR [rsp+0x10],rdx
   14001255f:	mov    QWORD PTR [rsp+0x8],rcx
   140012564:	sub    rsp,0x28
   140012568:	mov    r9,QWORD PTR [rsp+0x30]
   14001256d:	add    r9,0x10
   140012571:	mov    r8,QWORD PTR [rsp+0x48]
   140012576:	mov    rdx,QWORD PTR [rsp+0x40]
   14001257b:	mov    rcx,QWORD PTR [rsp+0x38]
   140012580:	call   0x1400133f0
   140012585:	mov    rcx,QWORD PTR [rsp+0x40]
   14001258a:	imul   rcx,rcx,0x10
   14001258e:	mov    rax,QWORD PTR [rsp+0x38]
   140012593:	add    rax,rcx
   140012596:	add    rsp,0x28
   14001259a:	ret    
   14001259b:	int3   
   14001259c:	int3   
   14001259d:	int3   
   14001259e:	int3   
   14001259f:	int3   
   1400125a0:	mov    QWORD PTR [rsp+0x18],r8
   1400125a5:	mov    QWORD PTR [rsp+0x10],rdx
   1400125aa:	mov    QWORD PTR [rsp+0x8],rcx
   1400125af:	sub    rsp,0x38
   1400125b3:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400125bc:	mov    rdx,QWORD PTR [rsp+0x48]
   1400125c1:	mov    rcx,QWORD PTR [rsp+0x40]
   1400125c6:	call   0x140012d80
   1400125cb:	movzx  eax,al
   1400125ce:	test   eax,eax
   1400125d0:	je     0x1400125fb
   1400125d2:	mov    r9,QWORD PTR [rsp+0x50]
   1400125d7:	mov    r8,QWORD PTR [rsp+0x48]
   1400125dc:	mov    rdx,QWORD PTR [rsp+0x40]
   1400125e1:	mov    rdx,QWORD PTR [rdx+0x18]
   1400125e5:	mov    rcx,QWORD PTR [rsp+0x40]
   1400125ea:	call   0x140012e60
   1400125ef:	mov    r11,rax
   1400125f2:	mov    rax,QWORD PTR [rsp+0x40]
   1400125f7:	mov    QWORD PTR [rax+0x20],r11
   1400125fb:	add    rsp,0x38
   1400125ff:	ret    
   140012600:	mov    QWORD PTR [rsp+0x8],rcx
   140012605:	mov    rax,QWORD PTR [rsp+0x8]
   14001260a:	mov    rcx,QWORD PTR [rsp+0x8]
   14001260f:	mov    rcx,QWORD PTR [rcx+0x18]
   140012613:	mov    rax,QWORD PTR [rax+0x20]
   140012617:	sub    rax,rcx
   14001261a:	sar    rax,1
   14001261d:	ret    
   14001261e:	int3   
   14001261f:	int3   
   140012620:	mov    QWORD PTR [rsp+0x8],rcx
   140012625:	sub    rsp,0x28
   140012629:	mov    rax,QWORD PTR [rsp+0x30]
   14001262e:	cmp    QWORD PTR [rax+0x18],0x0
   140012633:	je     0x140012680
   140012635:	mov    r8,QWORD PTR [rsp+0x30]
   14001263a:	mov    r8,QWORD PTR [r8+0x20]
   14001263e:	mov    rdx,QWORD PTR [rsp+0x30]
   140012643:	mov    rdx,QWORD PTR [rdx+0x18]
   140012647:	mov    rcx,QWORD PTR [rsp+0x30]
   14001264c:	call   0x140012e30
   140012651:	mov    r8,QWORD PTR [rsp+0x30]
   140012656:	mov    rax,QWORD PTR [rsp+0x30]
   14001265b:	mov    rax,QWORD PTR [rax+0x18]
   14001265f:	mov    r8,QWORD PTR [r8+0x28]
   140012663:	sub    r8,rax
   140012666:	sar    r8,1
   140012669:	mov    rcx,QWORD PTR [rsp+0x30]
   14001266e:	add    rcx,0x10
   140012672:	mov    rdx,QWORD PTR [rsp+0x30]
   140012677:	mov    rdx,QWORD PTR [rdx+0x18]
   14001267b:	call   0x1400089f0
   140012680:	mov    rax,QWORD PTR [rsp+0x30]
   140012685:	mov    QWORD PTR [rax+0x18],0x0
   14001268d:	mov    rax,QWORD PTR [rsp+0x30]
   140012692:	mov    QWORD PTR [rax+0x20],0x0
   14001269a:	mov    rax,QWORD PTR [rsp+0x30]
   14001269f:	mov    QWORD PTR [rax+0x28],0x0
   1400126a7:	add    rsp,0x28
   1400126ab:	ret    
   1400126ac:	int3   
   1400126ad:	int3   
   1400126ae:	int3   
   1400126af:	int3   
   1400126b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400126b5:	mov    QWORD PTR [rsp+0x8],rcx
   1400126ba:	sub    rsp,0x38
   1400126be:	lea    rax,[rsp+0x20]
   1400126c3:	mov    QWORD PTR [rsp+0x28],rax
   1400126c8:	mov    rdx,QWORD PTR [rsp+0x48]
   1400126cd:	mov    rcx,QWORD PTR [rsp+0x28]
   1400126d2:	call   0x140007d50
   1400126d7:	mov    rdx,rax
   1400126da:	mov    rcx,QWORD PTR [rsp+0x40]
   1400126df:	call   0x140012eb0
   1400126e4:	mov    rcx,QWORD PTR [rsp+0x40]
   1400126e9:	add    rcx,0x10
   1400126ed:	mov    rdx,QWORD PTR [rsp+0x48]
   1400126f2:	call   0x140007d50
   1400126f7:	mov    rax,QWORD PTR [rsp+0x40]
   1400126fc:	add    rsp,0x38
   140012700:	ret    
   140012701:	int3   
   140012702:	int3   
   140012703:	int3   
   140012704:	int3   
   140012705:	int3   
   140012706:	int3   
   140012707:	int3   
   140012708:	int3   
   140012709:	int3   
   14001270a:	int3   
   14001270b:	int3   
   14001270c:	int3   
   14001270d:	int3   
   14001270e:	int3   
   14001270f:	int3   
   140012710:	mov    QWORD PTR [rsp+0x8],rcx
   140012715:	sub    rsp,0x28
   140012719:	mov    rcx,QWORD PTR [rsp+0x30]
   14001271e:	add    rcx,0x8
   140012722:	mov    r8d,0x1
   140012728:	mov    rdx,QWORD PTR [rsp+0x30]
   14001272d:	mov    rdx,QWORD PTR [rdx]
   140012730:	call   0x1400089f0
   140012735:	mov    rcx,QWORD PTR [rsp+0x30]
   14001273a:	call   0x140001320
   14001273f:	add    rsp,0x28
   140012743:	ret    
   140012744:	int3   
   140012745:	int3   
   140012746:	int3   
   140012747:	int3   
   140012748:	int3   
   140012749:	int3   
   14001274a:	int3   
   14001274b:	int3   
   14001274c:	int3   
   14001274d:	int3   
   14001274e:	int3   
   14001274f:	int3   
   140012750:	mov    QWORD PTR [rsp+0x10],rdx
   140012755:	mov    QWORD PTR [rsp+0x8],rcx
   14001275a:	sub    rsp,0x38
   14001275e:	mov    rax,QWORD PTR [rsp+0x40]
   140012763:	cmp    QWORD PTR [rax],0xfffffffffffffffc
   140012767:	je     0x14001279b
   140012769:	mov    rcx,QWORD PTR [rsp+0x40]
   14001276e:	call   0x1400013d0
   140012773:	movzx  eax,al
   140012776:	test   eax,eax
   140012778:	je     0x140012790
   14001277a:	mov    rdx,QWORD PTR [rsp+0x48]
   14001277f:	mov    rcx,QWORD PTR [rsp+0x40]
   140012784:	call   0x140001390
   140012789:	movzx  eax,al
   14001278c:	test   eax,eax
   14001278e:	jne    0x140012795
   140012790:	call   0x14001cd78
   140012795:	xor    eax,eax
   140012797:	test   eax,eax
   140012799:	jne    0x140012795
   14001279b:	mov    rcx,QWORD PTR [rsp+0x40]
   1400127a0:	mov    rax,QWORD PTR [rsp+0x48]
   1400127a5:	mov    rax,QWORD PTR [rax+0x8]
   1400127a9:	cmp    QWORD PTR [rcx+0x8],rax
   1400127ad:	jne    0x1400127b9
   1400127af:	mov    DWORD PTR [rsp+0x20],0x1
   1400127b7:	jmp    0x1400127c1
   1400127b9:	mov    DWORD PTR [rsp+0x20],0x0
   1400127c1:	mov    al,BYTE PTR [rsp+0x20]
   1400127c5:	add    rsp,0x38
   1400127c9:	ret    
   1400127ca:	int3   
   1400127cb:	int3   
   1400127cc:	int3   
   1400127cd:	int3   
   1400127ce:	int3   
   1400127cf:	int3   
   1400127d0:	mov    QWORD PTR [rsp+0x18],r8
   1400127d5:	mov    QWORD PTR [rsp+0x10],rdx
   1400127da:	mov    QWORD PTR [rsp+0x8],rcx
   1400127df:	sub    rsp,0x28
   1400127e3:	mov    r8,QWORD PTR [rsp+0x40]
   1400127e8:	mov    rdx,QWORD PTR [rsp+0x38]
   1400127ed:	mov    rcx,QWORD PTR [rsp+0x30]
   1400127f2:	call   0x140008d60
   1400127f7:	mov    rax,QWORD PTR [rsp+0x30]
   1400127fc:	add    rsp,0x28
   140012800:	ret    
   140012801:	int3   
   140012802:	int3   
   140012803:	int3   
   140012804:	int3   
   140012805:	int3   
   140012806:	int3   
   140012807:	int3   
   140012808:	int3   
   140012809:	int3   
   14001280a:	int3   
   14001280b:	int3   
   14001280c:	int3   
   14001280d:	int3   
   14001280e:	int3   
   14001280f:	int3   
   140012810:	mov    QWORD PTR [rsp+0x8],rcx
   140012815:	sub    rsp,0x28
   140012819:	mov    rcx,QWORD PTR [rsp+0x30]
   14001281e:	add    rcx,0x10
   140012822:	call   0x140013040
   140012827:	add    rsp,0x28
   14001282b:	ret    
   14001282c:	int3   
   14001282d:	int3   
   14001282e:	int3   
   14001282f:	int3   
   140012830:	mov    QWORD PTR [rsp+0x20],r9
   140012835:	mov    QWORD PTR [rsp+0x18],r8
   14001283a:	mov    QWORD PTR [rsp+0x10],rdx
   14001283f:	mov    QWORD PTR [rsp+0x8],rcx
   140012844:	push   rsi
   140012845:	push   rdi
   140012846:	sub    rsp,0xa8
   14001284d:	mov    QWORD PTR [rsp+0x88],0xfffffffffffffffe
   140012859:	mov    rcx,QWORD PTR [rsp+0xc0]
   140012861:	call   0x140012350
   140012866:	mov    QWORD PTR [rsp+0x20],rax
   14001286b:	cmp    QWORD PTR [rsp+0xd0],0x0
   140012874:	jne    0x14001287b
   140012876:	jmp    0x140012d4a
   14001287b:	mov    rcx,QWORD PTR [rsp+0xc0]
   140012883:	call   0x1400123a0
   140012888:	mov    rdi,rax
   14001288b:	mov    rcx,QWORD PTR [rsp+0xc0]
   140012893:	call   0x140012810
   140012898:	sub    rax,rdi
   14001289b:	cmp    rax,QWORD PTR [rsp+0xd0]
   1400128a3:	jae    0x1400128af
   1400128a5:	call   0x14000aa70
   1400128aa:	jmp    0x140012d4a
   1400128af:	mov    rcx,QWORD PTR [rsp+0xc0]
   1400128b7:	call   0x1400123a0
   1400128bc:	add    rax,QWORD PTR [rsp+0xd0]
   1400128c4:	cmp    QWORD PTR [rsp+0x20],rax
   1400128c9:	jae    0x140012b48
   1400128cf:	xor    edx,edx
   1400128d1:	mov    rax,QWORD PTR [rsp+0x20]
   1400128d6:	mov    ecx,0x2
   1400128db:	div    rcx
   1400128de:	mov    rdi,rax
   1400128e1:	mov    rcx,QWORD PTR [rsp+0xc0]
   1400128e9:	call   0x140012810
   1400128ee:	sub    rax,rdi
   1400128f1:	cmp    rax,QWORD PTR [rsp+0x20]
   1400128f6:	jae    0x140012906
   1400128f8:	mov    QWORD PTR [rsp+0x90],0x0
   140012904:	jmp    0x140012928
   140012906:	xor    edx,edx
   140012908:	mov    rax,QWORD PTR [rsp+0x20]
   14001290d:	mov    ecx,0x2
   140012912:	div    rcx
   140012915:	mov    rcx,rax
   140012918:	mov    rax,QWORD PTR [rsp+0x20]
   14001291d:	add    rax,rcx
   140012920:	mov    QWORD PTR [rsp+0x90],rax
   140012928:	mov    rax,QWORD PTR [rsp+0x90]
   140012930:	mov    QWORD PTR [rsp+0x20],rax
   140012935:	mov    rcx,QWORD PTR [rsp+0xc0]
   14001293d:	call   0x1400123a0
   140012942:	add    rax,QWORD PTR [rsp+0xd0]
   14001294a:	cmp    QWORD PTR [rsp+0x20],rax
   14001294f:	jae    0x14001296b
   140012951:	mov    rcx,QWORD PTR [rsp+0xc0]
   140012959:	call   0x1400123a0
   14001295e:	add    rax,QWORD PTR [rsp+0xd0]
   140012966:	mov    QWORD PTR [rsp+0x20],rax
   14001296b:	mov    rcx,QWORD PTR [rsp+0xc0]
   140012973:	add    rcx,0x10
   140012977:	mov    rdx,QWORD PTR [rsp+0x20]
   14001297c:	call   0x140012d60
   140012981:	mov    QWORD PTR [rsp+0x30],rax
   140012986:	mov    rax,QWORD PTR [rsp+0xc8]
   14001298e:	mov    rcx,QWORD PTR [rsp+0xc0]
   140012996:	mov    rcx,QWORD PTR [rcx+0x18]
   14001299a:	mov    rax,QWORD PTR [rax+0x8]
   14001299e:	sub    rax,rcx
   1400129a1:	sar    rax,0x4
   1400129a5:	mov    QWORD PTR [rsp+0x28],rax
   1400129aa:	mov    DWORD PTR [rsp+0x38],0x0
   1400129b2:	mov    rax,QWORD PTR [rsp+0x28]
   1400129b7:	imul   rax,rax,0x10
   1400129bb:	mov    rdx,QWORD PTR [rsp+0x30]
   1400129c0:	add    rdx,rax
   1400129c3:	mov    r9,QWORD PTR [rsp+0xd8]
   1400129cb:	mov    r8,QWORD PTR [rsp+0xd0]
   1400129d3:	mov    rcx,QWORD PTR [rsp+0xc0]
   1400129db:	call   0x140012550
   1400129e0:	mov    eax,DWORD PTR [rsp+0x38]
   1400129e4:	add    eax,0x1
   1400129e7:	mov    DWORD PTR [rsp+0x38],eax
   1400129eb:	mov    r9,QWORD PTR [rsp+0x30]
   1400129f0:	mov    r8,QWORD PTR [rsp+0xc8]
   1400129f8:	mov    r8,QWORD PTR [r8+0x8]
   1400129fc:	mov    rdx,QWORD PTR [rsp+0xc0]
   140012a04:	mov    rdx,QWORD PTR [rdx+0x18]
   140012a08:	mov    rcx,QWORD PTR [rsp+0xc0]
   140012a10:	call   0x140013460
   140012a15:	mov    eax,DWORD PTR [rsp+0x38]
   140012a19:	add    eax,0x1
   140012a1c:	mov    DWORD PTR [rsp+0x38],eax
   140012a20:	mov    rcx,QWORD PTR [rsp+0xd0]
   140012a28:	mov    rax,QWORD PTR [rsp+0x28]
   140012a2d:	add    rax,rcx
   140012a30:	imul   rax,rax,0x10
   140012a34:	mov    r9,QWORD PTR [rsp+0x30]
   140012a39:	add    r9,rax
   140012a3c:	mov    r8,QWORD PTR [rsp+0xc0]
   140012a44:	mov    r8,QWORD PTR [r8+0x20]
   140012a48:	mov    rdx,QWORD PTR [rsp+0xc8]
   140012a50:	mov    rdx,QWORD PTR [rdx+0x8]
   140012a54:	mov    rcx,QWORD PTR [rsp+0xc0]
   140012a5c:	call   0x140013460
   140012a61:	nop
   140012a62:	mov    rcx,QWORD PTR [rsp+0xc0]
   140012a6a:	call   0x1400123a0
   140012a6f:	mov    rdx,rax
   140012a72:	mov    rax,QWORD PTR [rsp+0xd0]
   140012a7a:	add    rax,rdx
   140012a7d:	mov    QWORD PTR [rsp+0xd0],rax
   140012a85:	mov    rax,QWORD PTR [rsp+0xc0]
   140012a8d:	cmp    QWORD PTR [rax+0x18],0x0
   140012a92:	je     0x140012af5
   140012a94:	mov    r8,QWORD PTR [rsp+0xc0]
   140012a9c:	mov    r8,QWORD PTR [r8+0x20]
   140012aa0:	mov    rdx,QWORD PTR [rsp+0xc0]
   140012aa8:	mov    rdx,QWORD PTR [rdx+0x18]
   140012aac:	mov    rcx,QWORD PTR [rsp+0xc0]
   140012ab4:	call   0x140008a20
   140012ab9:	mov    r8,QWORD PTR [rsp+0xc0]
   140012ac1:	mov    rax,QWORD PTR [rsp+0xc0]
   140012ac9:	mov    rax,QWORD PTR [rax+0x18]
   140012acd:	mov    r8,QWORD PTR [r8+0x28]
   140012ad1:	sub    r8,rax
   140012ad4:	sar    r8,0x4
   140012ad8:	mov    rcx,QWORD PTR [rsp+0xc0]
   140012ae0:	add    rcx,0x10
   140012ae4:	mov    rdx,QWORD PTR [rsp+0xc0]
   140012aec:	mov    rdx,QWORD PTR [rdx+0x18]
   140012af0:	call   0x1400089f0
   140012af5:	mov    rax,QWORD PTR [rsp+0x20]
   140012afa:	imul   rax,rax,0x10
   140012afe:	mov    rcx,QWORD PTR [rsp+0x30]
   140012b03:	add    rcx,rax
   140012b06:	mov    rax,QWORD PTR [rsp+0xc0]
   140012b0e:	mov    QWORD PTR [rax+0x28],rcx
   140012b12:	mov    rax,QWORD PTR [rsp+0xd0]
   140012b1a:	imul   rax,rax,0x10
   140012b1e:	mov    rcx,QWORD PTR [rsp+0x30]
   140012b23:	add    rcx,rax
   140012b26:	mov    rax,QWORD PTR [rsp+0xc0]
   140012b2e:	mov    QWORD PTR [rax+0x20],rcx
   140012b32:	mov    rcx,QWORD PTR [rsp+0xc0]
   140012b3a:	mov    rax,QWORD PTR [rsp+0x30]
   140012b3f:	mov    QWORD PTR [rcx+0x18],rax
   140012b43:	jmp    0x140012d4a
   140012b48:	mov    rax,QWORD PTR [rsp+0xc0]
   140012b50:	mov    rcx,QWORD PTR [rsp+0xc8]
   140012b58:	mov    rcx,QWORD PTR [rcx+0x8]
   140012b5c:	mov    rax,QWORD PTR [rax+0x20]
   140012b60:	sub    rax,rcx
   140012b63:	sar    rax,0x4
   140012b67:	cmp    rax,QWORD PTR [rsp+0xd0]
   140012b6f:	jae    0x140012c7b
   140012b75:	lea    rdi,[rsp+0x78]
   140012b7a:	mov    rsi,QWORD PTR [rsp+0xd8]
   140012b82:	mov    ecx,0x10
   140012b87:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012b89:	lea    rdi,[rsp+0x40]
   140012b8e:	lea    rsi,[rsp+0x78]
   140012b93:	mov    ecx,0x10
   140012b98:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012b9a:	mov    r9,QWORD PTR [rsp+0xd0]
   140012ba2:	imul   r9,r9,0x10
   140012ba6:	mov    rax,QWORD PTR [rsp+0xc8]
   140012bae:	add    r9,QWORD PTR [rax+0x8]
   140012bb2:	mov    r8,QWORD PTR [rsp+0xc0]
   140012bba:	mov    r8,QWORD PTR [r8+0x20]
   140012bbe:	mov    rdx,QWORD PTR [rsp+0xc8]
   140012bc6:	mov    rdx,QWORD PTR [rdx+0x8]
   140012bca:	mov    rcx,QWORD PTR [rsp+0xc0]
   140012bd2:	call   0x140013460
   140012bd7:	nop
   140012bd8:	mov    rax,QWORD PTR [rsp+0xc0]
   140012be0:	mov    rcx,QWORD PTR [rsp+0xc8]
   140012be8:	mov    rcx,QWORD PTR [rcx+0x8]
   140012bec:	mov    rax,QWORD PTR [rax+0x20]
   140012bf0:	sub    rax,rcx
   140012bf3:	sar    rax,0x4
   140012bf7:	mov    r8,QWORD PTR [rsp+0xd0]
   140012bff:	sub    r8,rax
   140012c02:	lea    r9,[rsp+0x40]
   140012c07:	mov    rdx,QWORD PTR [rsp+0xc0]
   140012c0f:	mov    rdx,QWORD PTR [rdx+0x20]
   140012c13:	mov    rcx,QWORD PTR [rsp+0xc0]
   140012c1b:	call   0x140012550
   140012c20:	nop
   140012c21:	mov    rcx,QWORD PTR [rsp+0xd0]
   140012c29:	imul   rcx,rcx,0x10
   140012c2d:	mov    rax,QWORD PTR [rsp+0xc0]
   140012c35:	add    rcx,QWORD PTR [rax+0x20]
   140012c39:	mov    rax,QWORD PTR [rsp+0xc0]
   140012c41:	mov    QWORD PTR [rax+0x20],rcx
   140012c45:	mov    rax,QWORD PTR [rsp+0xd0]
   140012c4d:	imul   rax,rax,0x10
   140012c51:	mov    rdx,QWORD PTR [rsp+0xc0]
   140012c59:	mov    rdx,QWORD PTR [rdx+0x20]
   140012c5d:	sub    rdx,rax
   140012c60:	lea    r8,[rsp+0x40]
   140012c65:	mov    rcx,QWORD PTR [rsp+0xc8]
   140012c6d:	mov    rcx,QWORD PTR [rcx+0x8]
   140012c71:	call   0x1400134a0
   140012c76:	jmp    0x140012d4a
   140012c7b:	lea    rdi,[rsp+0x68]
   140012c80:	mov    rsi,QWORD PTR [rsp+0xd8]
   140012c88:	mov    ecx,0x10
   140012c8d:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012c8f:	lea    rdi,[rsp+0x58]
   140012c94:	lea    rsi,[rsp+0x68]
   140012c99:	mov    ecx,0x10
   140012c9e:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012ca0:	mov    rax,QWORD PTR [rsp+0xc0]
   140012ca8:	mov    rax,QWORD PTR [rax+0x20]
   140012cac:	mov    QWORD PTR [rsp+0x50],rax
   140012cb1:	mov    rax,QWORD PTR [rsp+0xd0]
   140012cb9:	imul   rax,rax,0x10
   140012cbd:	mov    rdx,QWORD PTR [rsp+0x50]
   140012cc2:	sub    rdx,rax
   140012cc5:	mov    r9,QWORD PTR [rsp+0xc0]
   140012ccd:	mov    r9,QWORD PTR [r9+0x20]
   140012cd1:	mov    r8,QWORD PTR [rsp+0x50]
   140012cd6:	mov    rcx,QWORD PTR [rsp+0xc0]
   140012cde:	call   0x140013460
   140012ce3:	mov    rdx,rax
   140012ce6:	mov    rax,QWORD PTR [rsp+0xc0]
   140012cee:	mov    QWORD PTR [rax+0x20],rdx
   140012cf2:	mov    rax,QWORD PTR [rsp+0xd0]
   140012cfa:	imul   rax,rax,0x10
   140012cfe:	mov    rdx,QWORD PTR [rsp+0x50]
   140012d03:	sub    rdx,rax
   140012d06:	mov    r8,QWORD PTR [rsp+0x50]
   140012d0b:	mov    rcx,QWORD PTR [rsp+0xc8]
   140012d13:	mov    rcx,QWORD PTR [rcx+0x8]
   140012d17:	call   0x1400134f0
   140012d1c:	mov    rdx,QWORD PTR [rsp+0xd0]
   140012d24:	imul   rdx,rdx,0x10
   140012d28:	mov    rax,QWORD PTR [rsp+0xc8]
   140012d30:	add    rdx,QWORD PTR [rax+0x8]
   140012d34:	lea    r8,[rsp+0x58]
   140012d39:	mov    rcx,QWORD PTR [rsp+0xc8]
   140012d41:	mov    rcx,QWORD PTR [rcx+0x8]
   140012d45:	call   0x1400134a0
   140012d4a:	add    rsp,0xa8
   140012d51:	pop    rdi
   140012d52:	pop    rsi
   140012d53:	ret    
   140012d54:	int3   
   140012d55:	int3   
   140012d56:	int3   
   140012d57:	int3   
   140012d58:	int3   
   140012d59:	int3   
   140012d5a:	int3   
   140012d5b:	int3   
   140012d5c:	int3   
   140012d5d:	int3   
   140012d5e:	int3   
   140012d5f:	int3   
   140012d60:	mov    QWORD PTR [rsp+0x10],rdx
   140012d65:	mov    QWORD PTR [rsp+0x8],rcx
   140012d6a:	sub    rsp,0x28
   140012d6e:	xor    edx,edx
   140012d70:	mov    rcx,QWORD PTR [rsp+0x38]
   140012d75:	call   0x140013580
   140012d7a:	add    rsp,0x28
   140012d7e:	ret    
   140012d7f:	int3   
   140012d80:	mov    QWORD PTR [rsp+0x10],rdx
   140012d85:	mov    QWORD PTR [rsp+0x8],rcx
   140012d8a:	sub    rsp,0x28
   140012d8e:	mov    rax,QWORD PTR [rsp+0x30]
   140012d93:	mov    QWORD PTR [rax+0x18],0x0
   140012d9b:	mov    rax,QWORD PTR [rsp+0x30]
   140012da0:	mov    QWORD PTR [rax+0x20],0x0
   140012da8:	mov    rax,QWORD PTR [rsp+0x30]
   140012dad:	mov    QWORD PTR [rax+0x28],0x0
   140012db5:	cmp    QWORD PTR [rsp+0x38],0x0
   140012dbb:	jne    0x140012dc3
   140012dbd:	xor    al,al
   140012dbf:	jmp    0x140012e29
   140012dc1:	jmp    0x140012e27
   140012dc3:	mov    rcx,QWORD PTR [rsp+0x30]
   140012dc8:	call   0x140013080
   140012dcd:	cmp    rax,QWORD PTR [rsp+0x38]
   140012dd2:	jae    0x140012ddb
   140012dd4:	call   0x14000aa70
   140012dd9:	jmp    0x140012e27
   140012ddb:	mov    rcx,QWORD PTR [rsp+0x30]
   140012de0:	add    rcx,0x10
   140012de4:	mov    rdx,QWORD PTR [rsp+0x38]
   140012de9:	call   0x140008770
   140012dee:	mov    r11,rax
   140012df1:	mov    rax,QWORD PTR [rsp+0x30]
   140012df6:	mov    QWORD PTR [rax+0x18],r11
   140012dfa:	mov    rcx,QWORD PTR [rsp+0x30]
   140012dff:	mov    rax,QWORD PTR [rsp+0x30]
   140012e04:	mov    rax,QWORD PTR [rax+0x18]
   140012e08:	mov    QWORD PTR [rcx+0x20],rax
   140012e0c:	mov    rcx,QWORD PTR [rsp+0x30]
   140012e11:	mov    rcx,QWORD PTR [rcx+0x18]
   140012e15:	mov    rax,QWORD PTR [rsp+0x38]
   140012e1a:	lea    rcx,[rcx+rax*2]
   140012e1e:	mov    rax,QWORD PTR [rsp+0x30]
   140012e23:	mov    QWORD PTR [rax+0x28],rcx
   140012e27:	mov    al,0x1
   140012e29:	add    rsp,0x28
   140012e2d:	ret    
   140012e2e:	int3   
   140012e2f:	int3   
   140012e30:	mov    QWORD PTR [rsp+0x18],r8
   140012e35:	mov    QWORD PTR [rsp+0x10],rdx
   140012e3a:	mov    QWORD PTR [rsp+0x8],rcx
   140012e3f:	sub    rsp,0x28
   140012e43:	mov    r8,QWORD PTR [rsp+0x30]
   140012e48:	add    r8,0x10
   140012e4c:	mov    rdx,QWORD PTR [rsp+0x40]
   140012e51:	mov    rcx,QWORD PTR [rsp+0x38]
   140012e56:	call   0x1400135f0
   140012e5b:	add    rsp,0x28
   140012e5f:	ret    
   140012e60:	mov    QWORD PTR [rsp+0x20],r9
   140012e65:	mov    QWORD PTR [rsp+0x18],r8
   140012e6a:	mov    QWORD PTR [rsp+0x10],rdx
   140012e6f:	mov    QWORD PTR [rsp+0x8],rcx
   140012e74:	sub    rsp,0x28
   140012e78:	mov    r9,QWORD PTR [rsp+0x30]
   140012e7d:	add    r9,0x10
   140012e81:	mov    r8,QWORD PTR [rsp+0x48]
   140012e86:	mov    rdx,QWORD PTR [rsp+0x40]
   140012e8b:	mov    rcx,QWORD PTR [rsp+0x38]
   140012e90:	call   0x140013640
   140012e95:	mov    r11,QWORD PTR [rsp+0x38]
   140012e9a:	mov    rax,QWORD PTR [rsp+0x40]
   140012e9f:	lea    rax,[r11+rax*2]
   140012ea3:	add    rsp,0x28
   140012ea7:	ret    
   140012ea8:	int3   
   140012ea9:	int3   
   140012eaa:	int3   
   140012eab:	int3   
   140012eac:	int3   
   140012ead:	int3   
   140012eae:	int3   
   140012eaf:	int3   
   140012eb0:	mov    QWORD PTR [rsp+0x10],rdx
   140012eb5:	mov    QWORD PTR [rsp+0x8],rcx
   140012eba:	sub    rsp,0x58
   140012ebe:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140012ec7:	mov    rcx,QWORD PTR [rsp+0x60]
   140012ecc:	call   0x140005660
   140012ed1:	nop
   140012ed2:	mov    rcx,QWORD PTR [rsp+0x60]
   140012ed7:	add    rcx,0x8
   140012edb:	mov    rdx,QWORD PTR [rsp+0x68]
   140012ee0:	call   0x140007d50
   140012ee5:	mov    rcx,QWORD PTR [rsp+0x60]
   140012eea:	add    rcx,0x8
   140012eee:	mov    edx,0x1
   140012ef3:	call   0x14000a2f0
   140012ef8:	mov    QWORD PTR [rsp+0x30],rax
   140012efd:	mov    rdx,QWORD PTR [rsp+0x30]
   140012f02:	mov    ecx,0x8
   140012f07:	call   0x1400014b0
   140012f0c:	mov    QWORD PTR [rsp+0x28],rax
   140012f11:	cmp    QWORD PTR [rsp+0x28],0x0
   140012f17:	je     0x140012f2f
   140012f19:	mov    rdx,QWORD PTR [rsp+0x60]
   140012f1e:	mov    rcx,QWORD PTR [rsp+0x28]
   140012f23:	call   0x140001300
   140012f28:	mov    QWORD PTR [rsp+0x40],rax
   140012f2d:	jmp    0x140012f38
   140012f2f:	mov    QWORD PTR [rsp+0x40],0x0
   140012f38:	mov    rax,QWORD PTR [rsp+0x40]
   140012f3d:	mov    QWORD PTR [rsp+0x20],rax
   140012f42:	mov    rcx,QWORD PTR [rsp+0x60]
   140012f47:	mov    rax,QWORD PTR [rsp+0x20]
   140012f4c:	mov    QWORD PTR [rcx],rax
   140012f4f:	mov    rax,QWORD PTR [rsp+0x60]
   140012f54:	add    rsp,0x58
   140012f58:	ret    
   140012f59:	int3   
   140012f5a:	int3   
   140012f5b:	int3   
   140012f5c:	int3   
   140012f5d:	int3   
   140012f5e:	int3   
   140012f5f:	int3   
   140012f60:	mov    QWORD PTR [rsp+0x10],rdx
   140012f65:	mov    QWORD PTR [rsp+0x8],rcx
   140012f6a:	sub    rsp,0x28
   140012f6e:	mov    rcx,QWORD PTR [rsp+0x30]
   140012f73:	call   0x1400013d0
   140012f78:	movzx  eax,al
   140012f7b:	test   eax,eax
   140012f7d:	je     0x140012f95
   140012f7f:	mov    rdx,QWORD PTR [rsp+0x38]
   140012f84:	mov    rcx,QWORD PTR [rsp+0x30]
   140012f89:	call   0x140001390
   140012f8e:	movzx  eax,al
   140012f91:	test   eax,eax
   140012f93:	jne    0x140012f9a
   140012f95:	call   0x14001cd78
   140012f9a:	xor    eax,eax
   140012f9c:	test   eax,eax
   140012f9e:	jne    0x140012f9a
   140012fa0:	mov    rax,QWORD PTR [rsp+0x30]
   140012fa5:	mov    rcx,QWORD PTR [rsp+0x38]
   140012faa:	mov    rcx,QWORD PTR [rcx+0x8]
   140012fae:	mov    rax,QWORD PTR [rax+0x8]
   140012fb2:	sub    rax,rcx
   140012fb5:	sar    rax,0x4
   140012fb9:	add    rsp,0x28
   140012fbd:	ret    
   140012fbe:	int3   
   140012fbf:	int3   
   140012fc0:	mov    QWORD PTR [rsp+0x18],r8
   140012fc5:	mov    QWORD PTR [rsp+0x10],rdx
   140012fca:	mov    QWORD PTR [rsp+0x8],rcx
   140012fcf:	push   rsi
   140012fd0:	push   rdi
   140012fd1:	sub    rsp,0x58
   140012fd5:	lea    rdi,[rsp+0x40]
   140012fda:	mov    rsi,QWORD PTR [rsp+0x70]
   140012fdf:	mov    ecx,0x10
   140012fe4:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012fe6:	lea    rdi,[rsp+0x20]
   140012feb:	lea    rsi,[rsp+0x40]
   140012ff0:	mov    ecx,0x10
   140012ff5:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012ff7:	mov    rdx,QWORD PTR [rsp+0x80]
   140012fff:	lea    rcx,[rsp+0x20]
   140013004:	call   0x1400130a0
   140013009:	lea    rdi,[rsp+0x30]
   14001300e:	mov    rsi,rax
   140013011:	mov    ecx,0x10
   140013016:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013018:	lea    rsi,[rsp+0x30]
   14001301d:	mov    rdi,QWORD PTR [rsp+0x78]
   140013022:	mov    ecx,0x10
   140013027:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013029:	mov    rax,QWORD PTR [rsp+0x78]
   14001302e:	add    rsp,0x58
   140013032:	pop    rdi
   140013033:	pop    rsi
   140013034:	ret    
   140013035:	int3   
   140013036:	int3   
   140013037:	int3   
   140013038:	int3   
   140013039:	int3   
   14001303a:	int3   
   14001303b:	int3   
   14001303c:	int3   
   14001303d:	int3   
   14001303e:	int3   
   14001303f:	int3   
   140013040:	mov    QWORD PTR [rsp+0x8],rcx
   140013045:	sub    rsp,0x18
   140013049:	movabs rax,0xfffffffffffffff
   140013053:	mov    QWORD PTR [rsp],rax
   140013057:	cmp    QWORD PTR [rsp],0x0
   14001305c:	jbe    0x140013069
   14001305e:	mov    rax,QWORD PTR [rsp]
   140013062:	mov    QWORD PTR [rsp+0x8],rax
   140013067:	jmp    0x140013072
   140013069:	mov    QWORD PTR [rsp+0x8],0x1
   140013072:	mov    rax,QWORD PTR [rsp+0x8]
   140013077:	add    rsp,0x18
   14001307b:	ret    
   14001307c:	int3   
   14001307d:	int3   
   14001307e:	int3   
   14001307f:	int3   
   140013080:	mov    QWORD PTR [rsp+0x8],rcx
   140013085:	sub    rsp,0x28
   140013089:	mov    rcx,QWORD PTR [rsp+0x30]
   14001308e:	add    rcx,0x10
   140013092:	call   0x140009ce0
   140013097:	add    rsp,0x28
   14001309b:	ret    
   14001309c:	int3   
   14001309d:	int3   
   14001309e:	int3   
   14001309f:	int3   
   1400130a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400130a5:	mov    QWORD PTR [rsp+0x8],rcx
   1400130aa:	sub    rsp,0x28
   1400130ae:	mov    rdx,QWORD PTR [rsp+0x38]
   1400130b3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400130b8:	call   0x1400130d0
   1400130bd:	mov    rax,QWORD PTR [rsp+0x30]
   1400130c2:	add    rsp,0x28
   1400130c6:	ret    
   1400130c7:	int3   
   1400130c8:	int3   
   1400130c9:	int3   
   1400130ca:	int3   
   1400130cb:	int3   
   1400130cc:	int3   
   1400130cd:	int3   
   1400130ce:	int3   
   1400130cf:	int3   
   1400130d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400130d5:	mov    QWORD PTR [rsp+0x8],rcx
   1400130da:	push   rbx
   1400130db:	sub    rsp,0x20
   1400130df:	mov    rcx,QWORD PTR [rsp+0x30]
   1400130e4:	call   0x1400013d0
   1400130e9:	movzx  eax,al
   1400130ec:	test   eax,eax
   1400130ee:	jne    0x1400130f5
   1400130f0:	call   0x14001cd78
   1400130f5:	xor    eax,eax
   1400130f7:	test   eax,eax
   1400130f9:	jne    0x1400130f5
   1400130fb:	mov    rbx,QWORD PTR [rsp+0x38]
   140013100:	imul   rbx,rbx,0x10
   140013104:	mov    rax,QWORD PTR [rsp+0x30]
   140013109:	add    rbx,QWORD PTR [rax+0x8]
   14001310d:	mov    rcx,QWORD PTR [rsp+0x30]
   140013112:	call   0x140001350
   140013117:	cmp    rbx,QWORD PTR [rax+0x20]
   14001311b:	ja     0x14001313f
   14001311d:	mov    rbx,QWORD PTR [rsp+0x38]
   140013122:	imul   rbx,rbx,0x10
   140013126:	mov    rax,QWORD PTR [rsp+0x30]
   14001312b:	add    rbx,QWORD PTR [rax+0x8]
   14001312f:	mov    rcx,QWORD PTR [rsp+0x30]
   140013134:	call   0x140001350
   140013139:	cmp    rbx,QWORD PTR [rax+0x18]
   14001313d:	jae    0x140013144
   14001313f:	call   0x14001cd78
   140013144:	xor    eax,eax
   140013146:	test   eax,eax
   140013148:	jne    0x140013144
   14001314a:	mov    rcx,QWORD PTR [rsp+0x38]
   14001314f:	imul   rcx,rcx,0x10
   140013153:	mov    rax,QWORD PTR [rsp+0x30]
   140013158:	add    rcx,QWORD PTR [rax+0x8]
   14001315c:	mov    rax,QWORD PTR [rsp+0x30]
   140013161:	mov    QWORD PTR [rax+0x8],rcx
   140013165:	mov    rax,QWORD PTR [rsp+0x30]
   14001316a:	add    rsp,0x20
   14001316e:	pop    rbx
   14001316f:	ret    
   140013170:	mov    QWORD PTR [rsp+0x18],r8
   140013175:	mov    QWORD PTR [rsp+0x10],rdx
   14001317a:	mov    QWORD PTR [rsp+0x8],rcx
   14001317f:	sub    rsp,0x78
   140013183:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14001318c:	mov    DWORD PTR [rsp+0x48],0x0
   140013194:	mov    rdx,QWORD PTR [rsp+0x88]
   14001319c:	lea    rcx,[rsp+0x20]
   1400131a1:	call   0x140005d30
   1400131a6:	mov    QWORD PTR [rsp+0x58],rax
   1400131ab:	mov    rax,QWORD PTR [rsp+0x58]
   1400131b0:	mov    QWORD PTR [rsp+0x60],rax
   1400131b5:	mov    rdx,QWORD PTR [rsp+0x90]
   1400131bd:	mov    rcx,QWORD PTR [rsp+0x60]
   1400131c2:	call   0x140003ab0
   1400131c7:	mov    rdx,rax
   1400131ca:	mov    rcx,QWORD PTR [rsp+0x80]
   1400131d2:	call   0x140005d30
   1400131d7:	mov    eax,DWORD PTR [rsp+0x48]
   1400131db:	or     eax,0x1
   1400131de:	mov    DWORD PTR [rsp+0x48],eax
   1400131e2:	lea    rcx,[rsp+0x20]
   1400131e7:	call   0x140003a90
   1400131ec:	mov    rax,QWORD PTR [rsp+0x80]
   1400131f4:	add    rsp,0x78
   1400131f8:	ret    
   1400131f9:	int3   
   1400131fa:	int3   
   1400131fb:	int3   
   1400131fc:	int3   
   1400131fd:	int3   
   1400131fe:	int3   
   1400131ff:	int3   
   140013200:	mov    QWORD PTR [rsp+0x18],r8
   140013205:	mov    QWORD PTR [rsp+0x10],rdx
   14001320a:	mov    QWORD PTR [rsp+0x8],rcx
   14001320f:	sub    rsp,0x78
   140013213:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14001321c:	mov    DWORD PTR [rsp+0x48],0x0
   140013224:	mov    rdx,QWORD PTR [rsp+0x88]
   14001322c:	lea    rcx,[rsp+0x20]
   140013231:	call   0x140003a30
   140013236:	mov    QWORD PTR [rsp+0x58],rax
   14001323b:	mov    rax,QWORD PTR [rsp+0x58]
   140013240:	mov    QWORD PTR [rsp+0x60],rax
   140013245:	mov    rdx,QWORD PTR [rsp+0x90]
   14001324d:	mov    rcx,QWORD PTR [rsp+0x60]
   140013252:	call   0x140003ab0
   140013257:	mov    rdx,rax
   14001325a:	mov    rcx,QWORD PTR [rsp+0x80]
   140013262:	call   0x140005d30
   140013267:	mov    eax,DWORD PTR [rsp+0x48]
   14001326b:	or     eax,0x1
   14001326e:	mov    DWORD PTR [rsp+0x48],eax
   140013272:	lea    rcx,[rsp+0x20]
   140013277:	call   0x140003a90
   14001327c:	mov    rax,QWORD PTR [rsp+0x80]
   140013284:	add    rsp,0x78
   140013288:	ret    
   140013289:	int3   
   14001328a:	int3   
   14001328b:	int3   
   14001328c:	int3   
   14001328d:	int3   
   14001328e:	int3   
   14001328f:	int3   
   140013290:	mov    QWORD PTR [rsp+0x20],r9
   140013295:	mov    QWORD PTR [rsp+0x18],r8
   14001329a:	mov    QWORD PTR [rsp+0x10],rdx
   14001329f:	mov    QWORD PTR [rsp+0x8],rcx
   1400132a4:	sub    rsp,0x28
   1400132a8:	mov    r8,QWORD PTR [rsp+0x40]
   1400132ad:	mov    rdx,QWORD PTR [rsp+0x38]
   1400132b2:	mov    rcx,QWORD PTR [rsp+0x48]
   1400132b7:	call   0x140003ae0
   1400132bc:	add    rsp,0x28
   1400132c0:	ret    
   1400132c1:	int3   
   1400132c2:	int3   
   1400132c3:	int3   
   1400132c4:	int3   
   1400132c5:	int3   
   1400132c6:	int3   
   1400132c7:	int3   
   1400132c8:	int3   
   1400132c9:	int3   
   1400132ca:	int3   
   1400132cb:	int3   
   1400132cc:	int3   
   1400132cd:	int3   
   1400132ce:	int3   
   1400132cf:	int3   
   1400132d0:	mov    QWORD PTR [rsp+0x18],r8
   1400132d5:	mov    QWORD PTR [rsp+0x10],rdx
   1400132da:	mov    QWORD PTR [rsp+0x8],rcx
   1400132df:	sub    rsp,0x38
   1400132e3:	mov    rax,QWORD PTR [rsp+0x50]
   1400132e8:	movsx  ax,BYTE PTR [rax]
   1400132ec:	mov    WORD PTR [rsp+0x20],ax
   1400132f1:	lea    r8,[rsp+0x20]
   1400132f6:	mov    rdx,QWORD PTR [rsp+0x48]
   1400132fb:	mov    rcx,QWORD PTR [rsp+0x40]
   140013300:	call   0x1400136b0
   140013305:	mov    rax,QWORD PTR [rsp+0x40]
   14001330a:	add    rsp,0x38
   14001330e:	ret    
   14001330f:	int3   
   140013310:	mov    QWORD PTR [rsp+0x20],r9
   140013315:	mov    DWORD PTR [rsp+0x18],r8d
   14001331a:	mov    QWORD PTR [rsp+0x10],rdx
   14001331f:	mov    QWORD PTR [rsp+0x8],rcx
   140013324:	push   rbx
   140013325:	sub    rsp,0x20
   140013329:	mov    rcx,QWORD PTR [rsp+0x38]
   14001332e:	call   0x1400136e0
   140013333:	mov    rbx,rax
   140013336:	mov    rcx,QWORD PTR [rsp+0x30]
   14001333b:	call   0x1400136e0
   140013340:	mov    r9,QWORD PTR [rsp+0x48]
   140013345:	mov    r8d,DWORD PTR [rsp+0x40]
   14001334a:	mov    rdx,rbx
   14001334d:	mov    rcx,rax
   140013350:	call   0x140013700
   140013355:	add    rsp,0x20
   140013359:	pop    rbx
   14001335a:	ret    
   14001335b:	int3   
   14001335c:	int3   
   14001335d:	int3   
   14001335e:	int3   
   14001335f:	int3   
   140013360:	mov    QWORD PTR [rsp+0x18],r8
   140013365:	mov    QWORD PTR [rsp+0x10],rdx
   14001336a:	mov    QWORD PTR [rsp+0x8],rcx
   14001336f:	sub    rsp,0x38
   140013373:	mov    rax,QWORD PTR [rsp+0x50]
   140013378:	movzx  eax,WORD PTR [rax]
   14001337b:	mov    WORD PTR [rsp+0x20],ax
   140013380:	lea    r8,[rsp+0x20]
   140013385:	mov    rdx,QWORD PTR [rsp+0x48]
   14001338a:	mov    rcx,QWORD PTR [rsp+0x40]
   14001338f:	call   0x1400136b0
   140013394:	mov    rax,QWORD PTR [rsp+0x40]
   140013399:	add    rsp,0x38
   14001339d:	ret    
   14001339e:	int3   
   14001339f:	int3   
   1400133a0:	mov    QWORD PTR [rsp+0x20],r9
   1400133a5:	mov    DWORD PTR [rsp+0x18],r8d
   1400133aa:	mov    QWORD PTR [rsp+0x10],rdx
   1400133af:	mov    QWORD PTR [rsp+0x8],rcx
   1400133b4:	push   rbx
   1400133b5:	sub    rsp,0x20
   1400133b9:	mov    rcx,QWORD PTR [rsp+0x38]
   1400133be:	call   0x1400136e0
   1400133c3:	mov    rbx,rax
   1400133c6:	mov    rcx,QWORD PTR [rsp+0x30]
   1400133cb:	call   0x1400136e0
   1400133d0:	mov    r9,QWORD PTR [rsp+0x48]
   1400133d5:	mov    r8d,DWORD PTR [rsp+0x40]
   1400133da:	mov    rdx,rbx
   1400133dd:	mov    rcx,rax
   1400133e0:	call   0x140013770
   1400133e5:	add    rsp,0x20
   1400133e9:	pop    rbx
   1400133ea:	ret    
   1400133eb:	int3   
   1400133ec:	int3   
   1400133ed:	int3   
   1400133ee:	int3   
   1400133ef:	int3   
   1400133f0:	mov    QWORD PTR [rsp+0x20],r9
   1400133f5:	mov    QWORD PTR [rsp+0x18],r8
   1400133fa:	mov    QWORD PTR [rsp+0x10],rdx
   1400133ff:	mov    QWORD PTR [rsp+0x8],rcx
   140013404:	push   rdi
   140013405:	sub    rsp,0x40
   140013409:	lea    rdi,[rsp+0x30]
   14001340e:	xor    eax,eax
   140013410:	mov    ecx,0x1
   140013415:	rep stos BYTE PTR es:[rdi],al
   140013417:	lea    rdx,[rsp+0x50]
   14001341c:	lea    rcx,[rsp+0x50]
   140013421:	call   0x14000fbb0
   140013426:	mov    BYTE PTR [rsp+0x31],al
   14001342a:	movzx  eax,BYTE PTR [rsp+0x30]
   14001342f:	mov    BYTE PTR [rsp+0x28],al
   140013433:	movzx  eax,BYTE PTR [rsp+0x31]
   140013438:	mov    BYTE PTR [rsp+0x20],al
   14001343c:	mov    r9,QWORD PTR [rsp+0x68]
   140013441:	mov    r8,QWORD PTR [rsp+0x60]
   140013446:	mov    rdx,QWORD PTR [rsp+0x58]
   14001344b:	mov    rcx,QWORD PTR [rsp+0x50]
   140013450:	call   0x1400137e0
   140013455:	add    rsp,0x40
   140013459:	pop    rdi
   14001345a:	ret    
   14001345b:	int3   
   14001345c:	int3   
   14001345d:	int3   
   14001345e:	int3   
   14001345f:	int3   
   140013460:	mov    QWORD PTR [rsp+0x20],r9
   140013465:	mov    QWORD PTR [rsp+0x18],r8
   14001346a:	mov    QWORD PTR [rsp+0x10],rdx
   14001346f:	mov    QWORD PTR [rsp+0x8],rcx
   140013474:	sub    rsp,0x28
   140013478:	mov    r9,QWORD PTR [rsp+0x30]
   14001347d:	add    r9,0x10
   140013481:	mov    r8,QWORD PTR [rsp+0x48]
   140013486:	mov    rdx,QWORD PTR [rsp+0x40]
   14001348b:	mov    rcx,QWORD PTR [rsp+0x38]
   140013490:	call   0x140013850
   140013495:	add    rsp,0x28
   140013499:	ret    
   14001349a:	int3   
   14001349b:	int3   
   14001349c:	int3   
   14001349d:	int3   
   14001349e:	int3   
   14001349f:	int3   
   1400134a0:	mov    QWORD PTR [rsp+0x18],r8
   1400134a5:	mov    QWORD PTR [rsp+0x10],rdx
   1400134aa:	mov    QWORD PTR [rsp+0x8],rcx
   1400134af:	push   rbx
   1400134b0:	sub    rsp,0x20
   1400134b4:	lea    rcx,[rsp+0x38]
   1400134b9:	call   0x14000ff10
   1400134be:	mov    rbx,rax
   1400134c1:	lea    rcx,[rsp+0x30]
   1400134c6:	call   0x14000ff10
   1400134cb:	mov    r8,QWORD PTR [rsp+0x40]
   1400134d0:	mov    rdx,rbx
   1400134d3:	mov    rcx,rax
   1400134d6:	call   0x1400138d0
   1400134db:	add    rsp,0x20
   1400134df:	pop    rbx
   1400134e0:	ret    
   1400134e1:	int3   
   1400134e2:	int3   
   1400134e3:	int3   
   1400134e4:	int3   
   1400134e5:	int3   
   1400134e6:	int3   
   1400134e7:	int3   
   1400134e8:	int3   
   1400134e9:	int3   
   1400134ea:	int3   
   1400134eb:	int3   
   1400134ec:	int3   
   1400134ed:	int3   
   1400134ee:	int3   
   1400134ef:	int3   
   1400134f0:	mov    QWORD PTR [rsp+0x18],r8
   1400134f5:	mov    QWORD PTR [rsp+0x10],rdx
   1400134fa:	mov    QWORD PTR [rsp+0x8],rcx
   1400134ff:	push   rbx
   140013500:	push   rdi
   140013501:	sub    rsp,0x48
   140013505:	lea    rdi,[rsp+0x30]
   14001350a:	xor    eax,eax
   14001350c:	mov    ecx,0x1
   140013511:	rep stos BYTE PTR es:[rdi],al
   140013513:	lea    rcx,[rsp+0x70]
   140013518:	call   0x14000fdd0
   14001351d:	mov    BYTE PTR [rsp+0x31],al
   140013521:	lea    r8,[rsp+0x70]
   140013526:	lea    rdx,[rsp+0x60]
   14001352b:	lea    rcx,[rsp+0x32]
   140013530:	call   0x14000fdb0
   140013535:	mov    rbx,rax
   140013538:	lea    rcx,[rsp+0x68]
   14001353d:	call   0x14000ff10
   140013542:	mov    rdi,rax
   140013545:	lea    rcx,[rsp+0x60]
   14001354a:	call   0x14000ff10
   14001354f:	mov    rcx,rax
   140013552:	movzx  eax,BYTE PTR [rsp+0x30]
   140013557:	mov    BYTE PTR [rsp+0x28],al
   14001355b:	movzx  eax,BYTE PTR [rsp+0x31]
   140013560:	mov    BYTE PTR [rsp+0x20],al
   140013564:	movzx  r9d,BYTE PTR [rbx]
   140013568:	mov    r8,QWORD PTR [rsp+0x70]
   14001356d:	mov    rdx,rdi
   140013570:	call   0x140013930
   140013575:	add    rsp,0x48
   140013579:	pop    rdi
   14001357a:	pop    rbx
   14001357b:	ret    
   14001357c:	int3   
   14001357d:	int3   
   14001357e:	int3   
   14001357f:	int3   
   140013580:	mov    QWORD PTR [rsp+0x10],rdx
   140013585:	mov    QWORD PTR [rsp+0x8],rcx
   14001358a:	sub    rsp,0x48
   14001358e:	cmp    QWORD PTR [rsp+0x50],0x0
   140013594:	ja     0x1400135a1
   140013596:	mov    QWORD PTR [rsp+0x50],0x0
   14001359f:	jmp    0x1400135d2
   1400135a1:	xor    edx,edx
   1400135a3:	mov    rax,0xffffffffffffffff
   1400135aa:	div    QWORD PTR [rsp+0x50]
   1400135af:	cmp    rax,0x10
   1400135b3:	jae    0x1400135d2
   1400135b5:	xor    edx,edx
   1400135b7:	lea    rcx,[rsp+0x20]
   1400135bc:	call   0x140001400
   1400135c1:	lea    rdx,[rip+0x344c0]        # 0x140047a88
   1400135c8:	lea    rcx,[rsp+0x20]
   1400135cd:	call   0x14001e5c0
   1400135d2:	mov    rcx,QWORD PTR [rsp+0x50]
   1400135d7:	imul   rcx,rcx,0x10
   1400135db:	call   0x14001cb1c
   1400135e0:	add    rsp,0x48
   1400135e4:	ret    
   1400135e5:	int3   
   1400135e6:	int3   
   1400135e7:	int3   
   1400135e8:	int3   
   1400135e9:	int3   
   1400135ea:	int3   
   1400135eb:	int3   
   1400135ec:	int3   
   1400135ed:	int3   
   1400135ee:	int3   
   1400135ef:	int3   
   1400135f0:	mov    QWORD PTR [rsp+0x18],r8
   1400135f5:	mov    QWORD PTR [rsp+0x10],rdx
   1400135fa:	mov    QWORD PTR [rsp+0x8],rcx
   1400135ff:	sub    rsp,0x38
   140013603:	lea    rdx,[rsp+0x48]
   140013608:	lea    rcx,[rsp+0x40]
   14001360d:	call   0x14000fbb0
   140013612:	mov    BYTE PTR [rsp+0x20],al
   140013616:	movzx  r9d,BYTE PTR [rsp+0x20]
   14001361c:	mov    r8,QWORD PTR [rsp+0x50]
   140013621:	mov    rdx,QWORD PTR [rsp+0x48]
   140013626:	mov    rcx,QWORD PTR [rsp+0x40]
   14001362b:	call   0x1400139a0
   140013630:	add    rsp,0x38
   140013634:	ret    
   140013635:	int3   
   140013636:	int3   
   140013637:	int3   
   140013638:	int3   
   140013639:	int3   
   14001363a:	int3   
   14001363b:	int3   
   14001363c:	int3   
   14001363d:	int3   
   14001363e:	int3   
   14001363f:	int3   
   140013640:	mov    QWORD PTR [rsp+0x20],r9
   140013645:	mov    QWORD PTR [rsp+0x18],r8
   14001364a:	mov    QWORD PTR [rsp+0x10],rdx
   14001364f:	mov    QWORD PTR [rsp+0x8],rcx
   140013654:	push   rdi
   140013655:	sub    rsp,0x40
   140013659:	lea    rdi,[rsp+0x30]
   14001365e:	xor    eax,eax
   140013660:	mov    ecx,0x1
   140013665:	rep stos BYTE PTR es:[rdi],al
   140013667:	lea    rdx,[rsp+0x50]
   14001366c:	lea    rcx,[rsp+0x50]
   140013671:	call   0x14000fbb0
   140013676:	mov    BYTE PTR [rsp+0x31],al
   14001367a:	movzx  eax,BYTE PTR [rsp+0x30]
   14001367f:	mov    BYTE PTR [rsp+0x28],al
   140013683:	movzx  eax,BYTE PTR [rsp+0x31]
   140013688:	mov    BYTE PTR [rsp+0x20],al
   14001368c:	mov    r9,QWORD PTR [rsp+0x68]
   140013691:	mov    r8,QWORD PTR [rsp+0x60]
   140013696:	mov    rdx,QWORD PTR [rsp+0x58]
   14001369b:	mov    rcx,QWORD PTR [rsp+0x50]
   1400136a0:	call   0x1400139c0
   1400136a5:	add    rsp,0x40
   1400136a9:	pop    rdi
   1400136aa:	ret    
   1400136ab:	int3   
   1400136ac:	int3   
   1400136ad:	int3   
   1400136ae:	int3   
   1400136af:	int3   
   1400136b0:	mov    QWORD PTR [rsp+0x18],r8
   1400136b5:	mov    QWORD PTR [rsp+0x10],rdx
   1400136ba:	mov    QWORD PTR [rsp+0x8],rcx
   1400136bf:	mov    rcx,QWORD PTR [rsp+0x8]
   1400136c4:	mov    rax,QWORD PTR [rsp+0x18]
   1400136c9:	movzx  eax,WORD PTR [rax]
   1400136cc:	mov    WORD PTR [rcx+0x2],ax
   1400136d0:	mov    rax,QWORD PTR [rsp+0x8]
   1400136d5:	ret    
   1400136d6:	int3   
   1400136d7:	int3   
   1400136d8:	int3   
   1400136d9:	int3   
   1400136da:	int3   
   1400136db:	int3   
   1400136dc:	int3   
   1400136dd:	int3   
   1400136de:	int3   
   1400136df:	int3   
   1400136e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400136e5:	sub    rsp,0x38
   1400136e9:	movzx  edx,BYTE PTR [rsp+0x20]
   1400136ee:	mov    rcx,QWORD PTR [rsp+0x40]
   1400136f3:	call   0x140013aa0
   1400136f8:	add    rsp,0x38
   1400136fc:	ret    
   1400136fd:	int3   
   1400136fe:	int3   
   1400136ff:	int3   
   140013700:	mov    QWORD PTR [rsp+0x20],r9
   140013705:	mov    DWORD PTR [rsp+0x18],r8d
   14001370a:	mov    QWORD PTR [rsp+0x10],rdx
   14001370f:	mov    QWORD PTR [rsp+0x8],rcx
   140013714:	sub    rsp,0x28
   140013718:	jmp    0x140013728
   14001371a:	mov    rax,QWORD PTR [rsp+0x30]
   14001371f:	add    rax,0x2
   140013723:	mov    QWORD PTR [rsp+0x30],rax
   140013728:	mov    rax,QWORD PTR [rsp+0x38]
   14001372d:	cmp    QWORD PTR [rsp+0x30],rax
   140013732:	je     0x14001375d
   140013734:	mov    rdx,QWORD PTR [rsp+0x30]
   140013739:	lea    rcx,[rsp+0x40]
   14001373e:	call   0x140013a30
   140013743:	movzx  eax,al
   140013746:	test   eax,eax
   140013748:	je     0x14001375b
   14001374a:	mov    rax,QWORD PTR [rsp+0x48]
   14001374f:	movsx  cx,BYTE PTR [rax]
   140013753:	mov    rax,QWORD PTR [rsp+0x30]
   140013758:	mov    WORD PTR [rax],cx
   14001375b:	jmp    0x14001371a
   14001375d:	add    rsp,0x28
   140013761:	ret    
   140013762:	int3   
   140013763:	int3   
   140013764:	int3   
   140013765:	int3   
   140013766:	int3   
   140013767:	int3   
   140013768:	int3   
   140013769:	int3   
   14001376a:	int3   
   14001376b:	int3   
   14001376c:	int3   
   14001376d:	int3   
   14001376e:	int3   
   14001376f:	int3   
   140013770:	mov    QWORD PTR [rsp+0x20],r9
   140013775:	mov    DWORD PTR [rsp+0x18],r8d
   14001377a:	mov    QWORD PTR [rsp+0x10],rdx
   14001377f:	mov    QWORD PTR [rsp+0x8],rcx
   140013784:	sub    rsp,0x28
   140013788:	jmp    0x140013798
   14001378a:	mov    rax,QWORD PTR [rsp+0x30]
   14001378f:	add    rax,0x2
   140013793:	mov    QWORD PTR [rsp+0x30],rax
   140013798:	mov    rax,QWORD PTR [rsp+0x38]
   14001379d:	cmp    QWORD PTR [rsp+0x30],rax
   1400137a2:	je     0x1400137cc
   1400137a4:	mov    rdx,QWORD PTR [rsp+0x30]
   1400137a9:	lea    rcx,[rsp+0x40]
   1400137ae:	call   0x140013a30
   1400137b3:	movzx  eax,al
   1400137b6:	test   eax,eax
   1400137b8:	je     0x1400137ca
   1400137ba:	mov    rcx,QWORD PTR [rsp+0x30]
   1400137bf:	mov    rax,QWORD PTR [rsp+0x48]
   1400137c4:	movzx  eax,WORD PTR [rax]
   1400137c7:	mov    WORD PTR [rcx],ax
   1400137ca:	jmp    0x14001378a
   1400137cc:	add    rsp,0x28
   1400137d0:	ret    
   1400137d1:	int3   
   1400137d2:	int3   
   1400137d3:	int3   
   1400137d4:	int3   
   1400137d5:	int3   
   1400137d6:	int3   
   1400137d7:	int3   
   1400137d8:	int3   
   1400137d9:	int3   
   1400137da:	int3   
   1400137db:	int3   
   1400137dc:	int3   
   1400137dd:	int3   
   1400137de:	int3   
   1400137df:	int3   
   1400137e0:	mov    QWORD PTR [rsp+0x20],r9
   1400137e5:	mov    QWORD PTR [rsp+0x18],r8
   1400137ea:	mov    QWORD PTR [rsp+0x10],rdx
   1400137ef:	mov    QWORD PTR [rsp+0x8],rcx
   1400137f4:	sub    rsp,0x38
   1400137f8:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140013801:	mov    rax,QWORD PTR [rsp+0x40]
   140013806:	mov    QWORD PTR [rsp+0x20],rax
   14001380b:	jmp    0x140013829
   14001380d:	mov    rax,QWORD PTR [rsp+0x48]
   140013812:	sub    rax,0x1
   140013816:	mov    QWORD PTR [rsp+0x48],rax
   14001381b:	mov    rax,QWORD PTR [rsp+0x40]
   140013820:	add    rax,0x10
   140013824:	mov    QWORD PTR [rsp+0x40],rax
   140013829:	cmp    QWORD PTR [rsp+0x48],0x0
   14001382f:	jbe    0x140013847
   140013831:	mov    r8,QWORD PTR [rsp+0x50]
   140013836:	mov    rdx,QWORD PTR [rsp+0x40]
   14001383b:	mov    rcx,QWORD PTR [rsp+0x58]
   140013840:	call   0x140013a00
   140013845:	jmp    0x14001380d
   140013847:	add    rsp,0x38
   14001384b:	ret    
   14001384c:	int3   
   14001384d:	int3   
   14001384e:	int3   
   14001384f:	int3   
   140013850:	mov    QWORD PTR [rsp+0x20],r9
   140013855:	mov    QWORD PTR [rsp+0x18],r8
   14001385a:	mov    QWORD PTR [rsp+0x10],rdx
   14001385f:	mov    QWORD PTR [rsp+0x8],rcx
   140013864:	push   rdi
   140013865:	sub    rsp,0x40
   140013869:	lea    rdi,[rsp+0x30]
   14001386e:	xor    eax,eax
   140013870:	mov    ecx,0x1
   140013875:	rep stos BYTE PTR es:[rdi],al
   140013877:	lea    rcx,[rsp+0x60]
   14001387c:	call   0x14000fdd0
   140013881:	mov    BYTE PTR [rsp+0x31],al
   140013885:	lea    rcx,[rsp+0x58]
   14001388a:	call   0x14000ff10
   14001388f:	mov    rdi,rax
   140013892:	lea    rcx,[rsp+0x50]
   140013897:	call   0x14000ff10
   14001389c:	mov    rcx,rax
   14001389f:	movzx  eax,BYTE PTR [rsp+0x30]
   1400138a4:	mov    BYTE PTR [rsp+0x28],al
   1400138a8:	movzx  eax,BYTE PTR [rsp+0x31]
   1400138ad:	mov    BYTE PTR [rsp+0x20],al
   1400138b1:	mov    r9,QWORD PTR [rsp+0x68]
   1400138b6:	mov    r8,QWORD PTR [rsp+0x60]
   1400138bb:	mov    rdx,rdi
   1400138be:	call   0x140013ac0
   1400138c3:	add    rsp,0x40
   1400138c7:	pop    rdi
   1400138c8:	ret    
   1400138c9:	int3   
   1400138ca:	int3   
   1400138cb:	int3   
   1400138cc:	int3   
   1400138cd:	int3   
   1400138ce:	int3   
   1400138cf:	int3   
   1400138d0:	mov    QWORD PTR [rsp+0x18],r8
   1400138d5:	mov    QWORD PTR [rsp+0x10],rdx
   1400138da:	mov    QWORD PTR [rsp+0x8],rcx
   1400138df:	push   rsi
   1400138e0:	push   rdi
   1400138e1:	sub    rsp,0x18
   1400138e5:	jmp    0x1400138f5
   1400138e7:	mov    rax,QWORD PTR [rsp+0x30]
   1400138ec:	add    rax,0x10
   1400138f0:	mov    QWORD PTR [rsp+0x30],rax
   1400138f5:	mov    rax,QWORD PTR [rsp+0x38]
   1400138fa:	cmp    QWORD PTR [rsp+0x30],rax
   1400138ff:	je     0x140013923
   140013901:	lea    rdi,[rsp]
   140013905:	mov    rsi,QWORD PTR [rsp+0x40]
   14001390a:	mov    ecx,0x10
   14001390f:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013911:	lea    rsi,[rsp]
   140013915:	mov    rdi,QWORD PTR [rsp+0x30]
   14001391a:	mov    ecx,0x10
   14001391f:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013921:	jmp    0x1400138e7
   140013923:	add    rsp,0x18
   140013927:	pop    rdi
   140013928:	pop    rsi
   140013929:	ret    
   14001392a:	int3   
   14001392b:	int3   
   14001392c:	int3   
   14001392d:	int3   
   14001392e:	int3   
   14001392f:	int3   
   140013930:	mov    BYTE PTR [rsp+0x20],r9b
   140013935:	mov    QWORD PTR [rsp+0x18],r8
   14001393a:	mov    QWORD PTR [rsp+0x10],rdx
   14001393f:	mov    QWORD PTR [rsp+0x8],rcx
   140013944:	push   rdi
   140013945:	sub    rsp,0x40
   140013949:	lea    rdi,[rsp+0x30]
   14001394e:	xor    eax,eax
   140013950:	mov    ecx,0x1
   140013955:	rep stos BYTE PTR es:[rdi],al
   140013957:	lea    rdx,[rsp+0x60]
   14001395c:	lea    rcx,[rsp+0x50]
   140013961:	call   0x14000fbb0
   140013966:	mov    BYTE PTR [rsp+0x31],al
   14001396a:	movzx  eax,BYTE PTR [rsp+0x30]
   14001396f:	mov    BYTE PTR [rsp+0x28],al
   140013973:	movzx  eax,BYTE PTR [rsp+0x31]
   140013978:	mov    BYTE PTR [rsp+0x20],al
   14001397c:	movzx  r9d,BYTE PTR [rsp+0x68]
   140013982:	mov    r8,QWORD PTR [rsp+0x60]
   140013987:	mov    rdx,QWORD PTR [rsp+0x58]
   14001398c:	mov    rcx,QWORD PTR [rsp+0x50]
   140013991:	call   0x140013b20
   140013996:	add    rsp,0x40
   14001399a:	pop    rdi
   14001399b:	ret    
   14001399c:	int3   
   14001399d:	int3   
   14001399e:	int3   
   14001399f:	int3   
   1400139a0:	mov    BYTE PTR [rsp+0x20],r9b
   1400139a5:	mov    QWORD PTR [rsp+0x18],r8
   1400139aa:	mov    QWORD PTR [rsp+0x10],rdx
   1400139af:	mov    QWORD PTR [rsp+0x8],rcx
   1400139b4:	ret    
   1400139b5:	int3   
   1400139b6:	int3   
   1400139b7:	int3   
   1400139b8:	int3   
   1400139b9:	int3   
   1400139ba:	int3   
   1400139bb:	int3   
   1400139bc:	int3   
   1400139bd:	int3   
   1400139be:	int3   
   1400139bf:	int3   
   1400139c0:	mov    QWORD PTR [rsp+0x20],r9
   1400139c5:	mov    QWORD PTR [rsp+0x18],r8
   1400139ca:	mov    QWORD PTR [rsp+0x10],rdx
   1400139cf:	mov    QWORD PTR [rsp+0x8],rcx
   1400139d4:	sub    rsp,0x28
   1400139d8:	mov    r8,QWORD PTR [rsp+0x40]
   1400139dd:	mov    rdx,QWORD PTR [rsp+0x38]
   1400139e2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400139e7:	call   0x140013bc0
   1400139ec:	add    rsp,0x28
   1400139f0:	ret    
   1400139f1:	int3   
   1400139f2:	int3   
   1400139f3:	int3   
   1400139f4:	int3   
   1400139f5:	int3   
   1400139f6:	int3   
   1400139f7:	int3   
   1400139f8:	int3   
   1400139f9:	int3   
   1400139fa:	int3   
   1400139fb:	int3   
   1400139fc:	int3   
   1400139fd:	int3   
   1400139fe:	int3   
   1400139ff:	int3   
   140013a00:	mov    QWORD PTR [rsp+0x18],r8
   140013a05:	mov    QWORD PTR [rsp+0x10],rdx
   140013a0a:	mov    QWORD PTR [rsp+0x8],rcx
   140013a0f:	sub    rsp,0x28
   140013a13:	mov    rdx,QWORD PTR [rsp+0x40]
   140013a18:	mov    rcx,QWORD PTR [rsp+0x38]
   140013a1d:	call   0x140013c20
   140013a22:	add    rsp,0x28
   140013a26:	ret    
   140013a27:	int3   
   140013a28:	int3   
   140013a29:	int3   
   140013a2a:	int3   
   140013a2b:	int3   
   140013a2c:	int3   
   140013a2d:	int3   
   140013a2e:	int3   
   140013a2f:	int3   
   140013a30:	mov    QWORD PTR [rsp+0x10],rdx
   140013a35:	mov    QWORD PTR [rsp+0x8],rcx
   140013a3a:	sub    rsp,0x28
   140013a3e:	mov    r8,QWORD PTR [rsp+0x30]
   140013a43:	add    r8,0x2
   140013a47:	mov    rdx,QWORD PTR [rsp+0x38]
   140013a4c:	mov    rcx,QWORD PTR [rsp+0x30]
   140013a51:	call   0x140013a60
   140013a56:	add    rsp,0x28
   140013a5a:	ret    
   140013a5b:	int3   
   140013a5c:	int3   
   140013a5d:	int3   
   140013a5e:	int3   
   140013a5f:	int3   
   140013a60:	mov    QWORD PTR [rsp+0x18],r8
   140013a65:	mov    QWORD PTR [rsp+0x10],rdx
   140013a6a:	mov    QWORD PTR [rsp+0x8],rcx
   140013a6f:	sub    rsp,0x18
   140013a73:	mov    rax,QWORD PTR [rsp+0x28]
   140013a78:	movzx  ecx,WORD PTR [rax]
   140013a7b:	mov    rax,QWORD PTR [rsp+0x30]
   140013a80:	movzx  eax,WORD PTR [rax]
   140013a83:	cmp    ecx,eax
   140013a85:	jne    0x140013a90
   140013a87:	mov    DWORD PTR [rsp],0x1
   140013a8e:	jmp    0x140013a97
   140013a90:	mov    DWORD PTR [rsp],0x0
   140013a97:	mov    al,BYTE PTR [rsp]
   140013a9a:	add    rsp,0x18
   140013a9e:	ret    
   140013a9f:	int3   
   140013aa0:	mov    BYTE PTR [rsp+0x10],dl
   140013aa4:	mov    QWORD PTR [rsp+0x8],rcx
   140013aa9:	sub    rsp,0x28
   140013aad:	mov    rcx,QWORD PTR [rsp+0x30]
   140013ab2:	call   0x140014fd0
   140013ab7:	add    rsp,0x28
   140013abb:	ret    
   140013abc:	int3   
   140013abd:	int3   
   140013abe:	int3   
   140013abf:	int3   
   140013ac0:	mov    QWORD PTR [rsp+0x20],r9
   140013ac5:	mov    QWORD PTR [rsp+0x18],r8
   140013aca:	mov    QWORD PTR [rsp+0x10],rdx
   140013acf:	mov    QWORD PTR [rsp+0x8],rcx
   140013ad4:	sub    rsp,0x28
   140013ad8:	mov    r9,QWORD PTR [rsp+0x48]
   140013add:	mov    r8,QWORD PTR [rsp+0x40]
   140013ae2:	mov    rdx,QWORD PTR [rsp+0x38]
   140013ae7:	mov    rcx,QWORD PTR [rsp+0x30]
   140013aec:	call   0x140013ca0
   140013af1:	add    rsp,0x28
   140013af5:	ret    
   140013af6:	int3   
   140013af7:	int3   
   140013af8:	int3   
   140013af9:	int3   
   140013afa:	int3   
   140013afb:	int3   
   140013afc:	int3   
   140013afd:	int3   
   140013afe:	int3   
   140013aff:	int3   
   140013b00:	mov    BYTE PTR [rsp+0x10],dl
   140013b04:	mov    QWORD PTR [rsp+0x8],rcx
   140013b09:	mov    rax,QWORD PTR [rsp+0x8]
   140013b0e:	mov    rax,QWORD PTR [rax]
   140013b11:	ret    
   140013b12:	int3   
   140013b13:	int3   
   140013b14:	int3   
   140013b15:	int3   
   140013b16:	int3   
   140013b17:	int3   
   140013b18:	int3   
   140013b19:	int3   
   140013b1a:	int3   
   140013b1b:	int3   
   140013b1c:	int3   
   140013b1d:	int3   
   140013b1e:	int3   
   140013b1f:	int3   
   140013b20:	mov    BYTE PTR [rsp+0x20],r9b
   140013b25:	mov    QWORD PTR [rsp+0x18],r8
   140013b2a:	mov    QWORD PTR [rsp+0x10],rdx
   140013b2f:	mov    QWORD PTR [rsp+0x8],rcx
   140013b34:	push   rdi
   140013b35:	sub    rsp,0x40
   140013b39:	mov    rax,QWORD PTR [rsp+0x50]
   140013b3e:	mov    rcx,QWORD PTR [rsp+0x58]
   140013b43:	sub    rcx,rax
   140013b46:	sar    rcx,0x4
   140013b4a:	imul   rcx,rcx,0x10
   140013b4e:	mov    rax,QWORD PTR [rsp+0x60]
   140013b53:	sub    rax,rcx
   140013b56:	mov    QWORD PTR [rsp+0x30],rax
   140013b5b:	lea    rdi,[rsp+0x38]
   140013b60:	xor    eax,eax
   140013b62:	mov    ecx,0x1
   140013b67:	rep stos BYTE PTR es:[rdi],al
   140013b69:	lea    rdi,[rsp+0x39]
   140013b6e:	xor    eax,eax
   140013b70:	mov    ecx,0x1
   140013b75:	rep stos BYTE PTR es:[rdi],al
   140013b77:	lea    rcx,[rsp+0x60]
   140013b7c:	call   0x14000ff10
   140013b81:	mov    r8,rax
   140013b84:	movzx  eax,BYTE PTR [rsp+0x38]
   140013b89:	mov    BYTE PTR [rsp+0x28],al
   140013b8d:	movzx  eax,BYTE PTR [rsp+0x39]
   140013b92:	mov    BYTE PTR [rsp+0x20],al
   140013b96:	movzx  r9d,BYTE PTR [rsp+0x3a]
   140013b9c:	mov    rdx,QWORD PTR [rsp+0x58]
   140013ba1:	mov    rcx,QWORD PTR [rsp+0x50]
   140013ba6:	call   0x140013d20
   140013bab:	mov    rax,QWORD PTR [rsp+0x30]
   140013bb0:	add    rsp,0x40
   140013bb4:	pop    rdi
   140013bb5:	ret    
   140013bb6:	int3   
   140013bb7:	int3   
   140013bb8:	int3   
   140013bb9:	int3   
   140013bba:	int3   
   140013bbb:	int3   
   140013bbc:	int3   
   140013bbd:	int3   
   140013bbe:	int3   
   140013bbf:	int3   
   140013bc0:	mov    QWORD PTR [rsp+0x18],r8
   140013bc5:	mov    QWORD PTR [rsp+0x10],rdx
   140013bca:	mov    QWORD PTR [rsp+0x8],rcx
   140013bcf:	push   rdi
   140013bd0:	sub    rsp,0x40
   140013bd4:	lea    rdi,[rsp+0x30]
   140013bd9:	xor    eax,eax
   140013bdb:	mov    ecx,0x1
   140013be0:	rep stos BYTE PTR es:[rdi],al
   140013be2:	lea    rdx,[rsp+0x50]
   140013be7:	lea    rcx,[rsp+0x31]
   140013bec:	call   0x140013d90
   140013bf1:	mov    rdx,rax
   140013bf4:	movzx  eax,BYTE PTR [rsp+0x30]
   140013bf9:	mov    BYTE PTR [rsp+0x20],al
   140013bfd:	movzx  r9d,BYTE PTR [rdx]
   140013c01:	mov    r8,QWORD PTR [rsp+0x60]
   140013c06:	mov    rdx,QWORD PTR [rsp+0x58]
   140013c0b:	mov    rcx,QWORD PTR [rsp+0x50]
   140013c10:	call   0x140013db0
   140013c15:	add    rsp,0x40
   140013c19:	pop    rdi
   140013c1a:	ret    
   140013c1b:	int3   
   140013c1c:	int3   
   140013c1d:	int3   
   140013c1e:	int3   
   140013c1f:	int3   
   140013c20:	mov    QWORD PTR [rsp+0x10],rdx
   140013c25:	mov    QWORD PTR [rsp+0x8],rcx
   140013c2a:	push   rsi
   140013c2b:	push   rdi
   140013c2c:	sub    rsp,0x58
   140013c30:	mov    rax,QWORD PTR [rsp+0x70]
   140013c35:	mov    QWORD PTR [rsp+0x20],rax
   140013c3a:	mov    rdx,QWORD PTR [rsp+0x20]
   140013c3f:	mov    ecx,0x10
   140013c44:	call   0x1400014b0
   140013c49:	mov    QWORD PTR [rsp+0x28],rax
   140013c4e:	cmp    QWORD PTR [rsp+0x28],0x0
   140013c54:	je     0x140013c84
   140013c56:	lea    rdi,[rsp+0x30]
   140013c5b:	mov    rsi,QWORD PTR [rsp+0x78]
   140013c60:	mov    ecx,0x10
   140013c65:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013c67:	lea    rsi,[rsp+0x30]
   140013c6c:	mov    rdi,QWORD PTR [rsp+0x28]
   140013c71:	mov    ecx,0x10
   140013c76:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013c78:	mov    rax,QWORD PTR [rsp+0x28]
   140013c7d:	mov    QWORD PTR [rsp+0x40],rax
   140013c82:	jmp    0x140013c8d
   140013c84:	mov    QWORD PTR [rsp+0x40],0x0
   140013c8d:	add    rsp,0x58
   140013c91:	pop    rdi
   140013c92:	pop    rsi
   140013c93:	ret    
   140013c94:	int3   
   140013c95:	int3   
   140013c96:	int3   
   140013c97:	int3   
   140013c98:	int3   
   140013c99:	int3   
   140013c9a:	int3   
   140013c9b:	int3   
   140013c9c:	int3   
   140013c9d:	int3   
   140013c9e:	int3   
   140013c9f:	int3   
   140013ca0:	mov    QWORD PTR [rsp+0x20],r9
   140013ca5:	mov    QWORD PTR [rsp+0x18],r8
   140013caa:	mov    QWORD PTR [rsp+0x10],rdx
   140013caf:	mov    QWORD PTR [rsp+0x8],rcx
   140013cb4:	push   rdi
   140013cb5:	sub    rsp,0x40
   140013cb9:	lea    rdi,[rsp+0x30]
   140013cbe:	xor    eax,eax
   140013cc0:	mov    ecx,0x1
   140013cc5:	rep stos BYTE PTR es:[rdi],al
   140013cc7:	lea    rdx,[rsp+0x60]
   140013ccc:	lea    rcx,[rsp+0x50]
   140013cd1:	call   0x14000fbb0
   140013cd6:	mov    BYTE PTR [rsp+0x31],al
   140013cda:	lea    rcx,[rsp+0x58]
   140013cdf:	call   0x14000ff10
   140013ce4:	mov    rdi,rax
   140013ce7:	lea    rcx,[rsp+0x50]
   140013cec:	call   0x14000ff10
   140013cf1:	mov    rcx,rax
   140013cf4:	movzx  eax,BYTE PTR [rsp+0x30]
   140013cf9:	mov    BYTE PTR [rsp+0x28],al
   140013cfd:	movzx  eax,BYTE PTR [rsp+0x31]
   140013d02:	mov    BYTE PTR [rsp+0x20],al
   140013d06:	mov    r9,QWORD PTR [rsp+0x68]
   140013d0b:	mov    r8,QWORD PTR [rsp+0x60]
   140013d10:	mov    rdx,rdi
   140013d13:	call   0x140013e20
   140013d18:	add    rsp,0x40
   140013d1c:	pop    rdi
   140013d1d:	ret    
   140013d1e:	int3   
   140013d1f:	int3   
   140013d20:	mov    BYTE PTR [rsp+0x20],r9b
   140013d25:	mov    QWORD PTR [rsp+0x18],r8
   140013d2a:	mov    QWORD PTR [rsp+0x10],rdx
   140013d2f:	mov    QWORD PTR [rsp+0x8],rcx
   140013d34:	push   rsi
   140013d35:	push   rdi
   140013d36:	sub    rsp,0x18
   140013d3a:	mov    rax,QWORD PTR [rsp+0x38]
   140013d3f:	cmp    QWORD PTR [rsp+0x30],rax
   140013d44:	je     0x140013d84
   140013d46:	mov    rax,QWORD PTR [rsp+0x38]
   140013d4b:	sub    rax,0x10
   140013d4f:	mov    QWORD PTR [rsp+0x38],rax
   140013d54:	mov    rax,QWORD PTR [rsp+0x40]
   140013d59:	sub    rax,0x10
   140013d5d:	mov    QWORD PTR [rsp+0x40],rax
   140013d62:	lea    rdi,[rsp]
   140013d66:	mov    rsi,QWORD PTR [rsp+0x38]
   140013d6b:	mov    ecx,0x10
   140013d70:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013d72:	lea    rsi,[rsp]
   140013d76:	mov    rdi,QWORD PTR [rsp+0x40]
   140013d7b:	mov    ecx,0x10
   140013d80:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013d82:	jmp    0x140013d3a
   140013d84:	mov    rax,QWORD PTR [rsp+0x40]
   140013d89:	add    rsp,0x18
   140013d8d:	pop    rdi
   140013d8e:	pop    rsi
   140013d8f:	ret    
   140013d90:	mov    QWORD PTR [rsp+0x10],rdx
   140013d95:	mov    QWORD PTR [rsp+0x8],rcx
   140013d9a:	sub    rsp,0x18
   140013d9e:	mov    rax,QWORD PTR [rsp+0x20]
   140013da3:	add    rsp,0x18
   140013da7:	ret    
   140013da8:	int3   
   140013da9:	int3   
   140013daa:	int3   
   140013dab:	int3   
   140013dac:	int3   
   140013dad:	int3   
   140013dae:	int3   
   140013daf:	int3   
   140013db0:	mov    BYTE PTR [rsp+0x20],r9b
   140013db5:	mov    QWORD PTR [rsp+0x18],r8
   140013dba:	mov    QWORD PTR [rsp+0x10],rdx
   140013dbf:	mov    QWORD PTR [rsp+0x8],rcx
   140013dc4:	push   rdi
   140013dc5:	sub    rsp,0x30
   140013dc9:	mov    rcx,QWORD PTR [rsp+0x40]
   140013dce:	mov    rax,QWORD PTR [rsp+0x48]
   140013dd3:	lea    rax,[rcx+rax*2]
   140013dd7:	mov    QWORD PTR [rsp+0x20],rax
   140013ddc:	lea    rdi,[rsp+0x28]
   140013de1:	xor    eax,eax
   140013de3:	mov    ecx,0x1
   140013de8:	rep stos BYTE PTR es:[rdi],al
   140013dea:	lea    rcx,[rsp+0x40]
   140013def:	call   0x14000ff10
   140013df4:	movzx  r9d,BYTE PTR [rsp+0x28]
   140013dfa:	mov    r8,QWORD PTR [rsp+0x50]
   140013dff:	mov    rdx,QWORD PTR [rsp+0x48]
   140013e04:	mov    rcx,rax
   140013e07:	call   0x140013ea0
   140013e0c:	add    rsp,0x30
   140013e10:	pop    rdi
   140013e11:	ret    
   140013e12:	int3   
   140013e13:	int3   
   140013e14:	int3   
   140013e15:	int3   
   140013e16:	int3   
   140013e17:	int3   
   140013e18:	int3   
   140013e19:	int3   
   140013e1a:	int3   
   140013e1b:	int3   
   140013e1c:	int3   
   140013e1d:	int3   
   140013e1e:	int3   
   140013e1f:	int3   
   140013e20:	mov    QWORD PTR [rsp+0x20],r9
   140013e25:	mov    QWORD PTR [rsp+0x18],r8
   140013e2a:	mov    QWORD PTR [rsp+0x10],rdx
   140013e2f:	mov    QWORD PTR [rsp+0x8],rcx
   140013e34:	sub    rsp,0x38
   140013e38:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140013e41:	mov    rax,QWORD PTR [rsp+0x50]
   140013e46:	mov    QWORD PTR [rsp+0x20],rax
   140013e4b:	jmp    0x140013e69
   140013e4d:	mov    rax,QWORD PTR [rsp+0x50]
   140013e52:	add    rax,0x10
   140013e56:	mov    QWORD PTR [rsp+0x50],rax
   140013e5b:	mov    rax,QWORD PTR [rsp+0x40]
   140013e60:	add    rax,0x10
   140013e64:	mov    QWORD PTR [rsp+0x40],rax
   140013e69:	mov    rax,QWORD PTR [rsp+0x48]
   140013e6e:	cmp    QWORD PTR [rsp+0x40],rax
   140013e73:	je     0x140013e8b
   140013e75:	mov    r8,QWORD PTR [rsp+0x40]
   140013e7a:	mov    rdx,QWORD PTR [rsp+0x50]
   140013e7f:	mov    rcx,QWORD PTR [rsp+0x58]
   140013e84:	call   0x140013a00
   140013e89:	jmp    0x140013e4d
   140013e8b:	mov    rax,QWORD PTR [rsp+0x50]
   140013e90:	add    rsp,0x38
   140013e94:	ret    
   140013e95:	int3   
   140013e96:	int3   
   140013e97:	int3   
   140013e98:	int3   
   140013e99:	int3   
   140013e9a:	int3   
   140013e9b:	int3   
   140013e9c:	int3   
   140013e9d:	int3   
   140013e9e:	int3   
   140013e9f:	int3   
   140013ea0:	mov    BYTE PTR [rsp+0x20],r9b
   140013ea5:	mov    QWORD PTR [rsp+0x18],r8
   140013eaa:	mov    QWORD PTR [rsp+0x10],rdx
   140013eaf:	mov    QWORD PTR [rsp+0x8],rcx
   140013eb4:	jmp    0x140013ed2
   140013eb6:	mov    rax,QWORD PTR [rsp+0x10]
   140013ebb:	sub    rax,0x1
   140013ebf:	mov    QWORD PTR [rsp+0x10],rax
   140013ec4:	mov    rax,QWORD PTR [rsp+0x8]
   140013ec9:	add    rax,0x2
   140013ecd:	mov    QWORD PTR [rsp+0x8],rax
   140013ed2:	cmp    QWORD PTR [rsp+0x10],0x0
   140013ed8:	jbe    0x140013eec
   140013eda:	mov    rcx,QWORD PTR [rsp+0x8]
   140013edf:	mov    rax,QWORD PTR [rsp+0x18]
   140013ee4:	movzx  eax,WORD PTR [rax]
   140013ee7:	mov    WORD PTR [rcx],ax
   140013eea:	jmp    0x140013eb6
   140013eec:	repz ret 
   140013eee:	int3   
   140013eef:	int3   
   140013ef0:	mov    QWORD PTR [rsp+0x8],rcx
   140013ef5:	sub    rsp,0x28
   140013ef9:	mov    rcx,QWORD PTR [rsp+0x30]
   140013efe:	call   0x1400192a0
   140013f03:	mov    r11,QWORD PTR [rsp+0x30]
   140013f08:	lea    rax,[rip+0x2b919]        # 0x14003f828
   140013f0f:	mov    QWORD PTR [r11],rax
   140013f12:	mov    rax,QWORD PTR [rsp+0x30]
   140013f17:	add    rsp,0x28
   140013f1b:	ret    
   140013f1c:	int3   
   140013f1d:	int3   
   140013f1e:	int3   
   140013f1f:	int3   
   140013f20:	mov    QWORD PTR [rsp+0x8],rcx
   140013f25:	sub    rsp,0x28
   140013f29:	mov    rcx,QWORD PTR [rsp+0x30]
   140013f2e:	call   0x140013fe0
   140013f33:	add    rsp,0x28
   140013f37:	ret    
   140013f38:	int3   
   140013f39:	int3   
   140013f3a:	int3   
   140013f3b:	int3   
   140013f3c:	int3   
   140013f3d:	int3   
   140013f3e:	int3   
   140013f3f:	int3   
   140013f40:	mov    DWORD PTR [rsp+0x10],edx
   140013f44:	mov    QWORD PTR [rsp+0x8],rcx
   140013f49:	sub    rsp,0x28
   140013f4d:	mov    rcx,QWORD PTR [rsp+0x30]
   140013f52:	call   0x140013f20
   140013f57:	mov    eax,DWORD PTR [rsp+0x38]
   140013f5b:	and    eax,0x1
   140013f5e:	test   eax,eax
   140013f60:	je     0x140013f6c
   140013f62:	mov    rcx,QWORD PTR [rsp+0x30]
   140013f67:	call   0x14001c4dc
   140013f6c:	mov    rax,QWORD PTR [rsp+0x30]
   140013f71:	add    rsp,0x28
   140013f75:	ret    
   140013f76:	int3   
   140013f77:	int3   
   140013f78:	int3   
   140013f79:	int3   
   140013f7a:	int3   
   140013f7b:	int3   
   140013f7c:	int3   
   140013f7d:	int3   
   140013f7e:	int3   
   140013f7f:	int3   
   140013f80:	mov    QWORD PTR [rsp+0x8],rcx
   140013f85:	sub    rsp,0x28
   140013f89:	mov    rcx,QWORD PTR [rsp+0x30]
   140013f8e:	add    rcx,0x10
   140013f92:	call   0x140005c70
   140013f97:	mov    rcx,QWORD PTR [rsp+0x30]
   140013f9c:	add    rcx,0x38
   140013fa0:	call   0x140005c70
   140013fa5:	mov    rax,QWORD PTR [rsp+0x30]
   140013faa:	add    rsp,0x28
   140013fae:	ret    
   140013faf:	int3   
   140013fb0:	mov    QWORD PTR [rsp+0x8],rcx
   140013fb5:	sub    rsp,0x28
   140013fb9:	mov    rcx,QWORD PTR [rsp+0x30]
   140013fbe:	add    rcx,0x38
   140013fc2:	call   0x140003a90
   140013fc7:	mov    rcx,QWORD PTR [rsp+0x30]
   140013fcc:	add    rcx,0x10
   140013fd0:	call   0x140003a90
   140013fd5:	add    rsp,0x28
   140013fd9:	ret    
   140013fda:	int3   
   140013fdb:	int3   
   140013fdc:	int3   
   140013fdd:	int3   
   140013fde:	int3   
   140013fdf:	int3   
   140013fe0:	mov    QWORD PTR [rsp+0x8],rcx
   140013fe5:	sub    rsp,0x28
   140013fe9:	mov    rcx,QWORD PTR [rsp+0x30]
   140013fee:	lea    rax,[rip+0x2bab3]        # 0x14003faa8
   140013ff5:	mov    QWORD PTR [rcx],rax
   140013ff8:	mov    rcx,QWORD PTR [rsp+0x30]
   140013ffd:	call   0x1400142a0
   140014002:	add    rsp,0x28
   140014006:	ret    
   140014007:	int3   
   140014008:	int3   
   140014009:	int3   
   14001400a:	int3   
   14001400b:	int3   
   14001400c:	int3   
   14001400d:	int3   
   14001400e:	int3   
   14001400f:	int3   
   140014010:	mov    QWORD PTR [rsp+0x8],rcx
   140014015:	sub    rsp,0x28
   140014019:	mov    rcx,QWORD PTR [rsp+0x30]
   14001401e:	add    rcx,0x10
   140014022:	call   0x140014b20
   140014027:	mov    rax,QWORD PTR [rsp+0x30]
   14001402c:	add    rsp,0x28
   140014030:	ret    
   140014031:	int3   
   140014032:	int3   
   140014033:	int3   
   140014034:	int3   
   140014035:	int3   
   140014036:	int3   
   140014037:	int3   
   140014038:	int3   
   140014039:	int3   
   14001403a:	int3   
   14001403b:	int3   
   14001403c:	int3   
   14001403d:	int3   
   14001403e:	int3   
   14001403f:	int3   
   140014040:	mov    QWORD PTR [rsp+0x8],rcx
   140014045:	sub    rsp,0x28
   140014049:	mov    rcx,QWORD PTR [rsp+0x30]
   14001404e:	add    rcx,0x8
   140014052:	call   0x140014010
   140014057:	mov    r11,QWORD PTR [rsp+0x30]
   14001405c:	mov    DWORD PTR [r11+0x8],0x0
   140014064:	mov    rax,QWORD PTR [rsp+0x30]
   140014069:	mov    QWORD PTR [rax+0x10],0x0
   140014071:	mov    rax,QWORD PTR [rsp+0x30]
   140014076:	mov    DWORD PTR [rax+0xc],0x0
   14001407d:	mov    rax,QWORD PTR [rsp+0x30]
   140014082:	mov    QWORD PTR [rip+0x38a27],rax        # 0x14004cab0
   140014089:	mov    rax,QWORD PTR [rsp+0x30]
   14001408e:	mov    QWORD PTR [rax+0x40],0x0
   140014096:	mov    rcx,QWORD PTR [rsp+0x30]
   14001409b:	add    rcx,0x18
   14001409f:	call   0x140014f40
   1400140a4:	test   eax,eax
   1400140a6:	jge    0x1400140b1
   1400140a8:	mov    BYTE PTR [rip+0x389fd],0x1        # 0x14004caac
   1400140af:	jmp    0x1400140bd
   1400140b1:	mov    rax,QWORD PTR [rsp+0x30]
   1400140b6:	mov    DWORD PTR [rax+0x8],0x38
   1400140bd:	mov    rax,QWORD PTR [rsp+0x30]
   1400140c2:	add    rsp,0x28
   1400140c6:	ret    
   1400140c7:	int3   
   1400140c8:	int3   
   1400140c9:	int3   
   1400140ca:	int3   
   1400140cb:	int3   
   1400140cc:	int3   
   1400140cd:	int3   
   1400140ce:	int3   
   1400140cf:	int3   
   1400140d0:	ret    
   1400140d1:	int3   
   1400140d2:	int3   
   1400140d3:	int3   
   1400140d4:	int3   
   1400140d5:	int3   
   1400140d6:	int3   
   1400140d7:	int3   
   1400140d8:	int3   
   1400140d9:	int3   
   1400140da:	int3   
   1400140db:	int3   
   1400140dc:	int3   
   1400140dd:	int3   
   1400140de:	int3   
   1400140df:	int3   
   1400140e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400140e5:	sub    rsp,0x28
   1400140e9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400140ee:	call   0x140014040
   1400140f3:	call   0x1400140d0
   1400140f8:	mov    rax,QWORD PTR [rsp+0x30]
   1400140fd:	add    rsp,0x28
   140014101:	ret    
   140014102:	int3   
   140014103:	int3   
   140014104:	int3   
   140014105:	int3   
   140014106:	int3   
   140014107:	int3   
   140014108:	int3   
   140014109:	int3   
   14001410a:	int3   
   14001410b:	int3   
   14001410c:	int3   
   14001410d:	int3   
   14001410e:	int3   
   14001410f:	int3   
   140014110:	mov    QWORD PTR [rsp+0x8],rcx
   140014115:	sub    rsp,0x28
   140014119:	mov    rcx,QWORD PTR [rsp+0x30]
   14001411e:	add    rcx,0x10
   140014122:	call   0x140001320
   140014127:	add    rsp,0x28
   14001412b:	ret    
   14001412c:	int3   
   14001412d:	int3   
   14001412e:	int3   
   14001412f:	int3   
   140014130:	mov    QWORD PTR [rsp+0x8],rcx
   140014135:	sub    rsp,0x48
   140014139:	cmp    QWORD PTR [rsp+0x50],0x0
   14001413f:	jne    0x140014150
   140014141:	mov    edx,0x1
   140014146:	mov    ecx,0xc0000005
   14001414b:	call   0x140015a90
   140014150:	mov    rax,QWORD PTR [rsp+0x50]
   140014155:	mov    rax,QWORD PTR [rax+0x8]
   140014159:	mov    QWORD PTR [rsp+0x28],rax
   14001415e:	mov    QWORD PTR [rsp+0x20],0x0
   140014167:	cmp    QWORD PTR [rsp+0x28],0x0
   14001416d:	je     0x1400141ad
   14001416f:	mov    rcx,QWORD PTR [rsp+0x28]
   140014174:	mov    rcx,QWORD PTR [rcx+0x8]
   140014178:	mov    rax,QWORD PTR [rsp+0x28]
   14001417d:	call   QWORD PTR [rax]
   14001417f:	mov    rax,QWORD PTR [rsp+0x28]
   140014184:	mov    rax,QWORD PTR [rax+0x10]
   140014188:	mov    QWORD PTR [rsp+0x20],rax
   14001418d:	mov    rax,QWORD PTR [rsp+0x28]
   140014192:	mov    QWORD PTR [rsp+0x30],rax
   140014197:	mov    rcx,QWORD PTR [rsp+0x30]
   14001419c:	call   0x14001c4dc
   1400141a1:	mov    rax,QWORD PTR [rsp+0x20]
   1400141a6:	mov    QWORD PTR [rsp+0x28],rax
   1400141ab:	jmp    0x140014167
   1400141ad:	mov    rax,QWORD PTR [rsp+0x50]
   1400141b2:	mov    QWORD PTR [rax+0x8],0x0
   1400141ba:	add    rsp,0x48
   1400141be:	ret    
   1400141bf:	int3   
   1400141c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400141c5:	sub    rsp,0x38
   1400141c9:	mov    rax,QWORD PTR [rsp+0x40]
   1400141ce:	cmp    DWORD PTR [rax+0x8],0x0
   1400141d2:	jne    0x1400141d9
   1400141d4:	jmp    0x14001425c
   1400141d9:	mov    rax,QWORD PTR [rsp+0x40]
   1400141de:	cmp    QWORD PTR [rax+0x10],0x0
   1400141e3:	je     0x14001421d
   1400141e5:	cmp    QWORD PTR [rsp+0x40],0x0
   1400141eb:	je     0x1400141fd
   1400141ed:	mov    rax,QWORD PTR [rsp+0x40]
   1400141f2:	add    rax,0x8
   1400141f6:	mov    QWORD PTR [rsp+0x20],rax
   1400141fb:	jmp    0x140014206
   1400141fd:	mov    QWORD PTR [rsp+0x20],0x0
   140014206:	mov    rcx,QWORD PTR [rsp+0x20]
   14001420b:	call   0x140014130
   140014210:	mov    r11,QWORD PTR [rsp+0x40]
   140014215:	mov    QWORD PTR [r11+0x10],0x0
   14001421d:	mov    rax,QWORD PTR [rsp+0x40]
   140014222:	cmp    QWORD PTR [rax+0x40],0x0
   140014227:	je     0x140014241
   140014229:	mov    rax,QWORD PTR [rsp+0x40]
   14001422e:	mov    rax,QWORD PTR [rax+0x40]
   140014232:	mov    rcx,QWORD PTR [rsp+0x40]
   140014237:	mov    rcx,QWORD PTR [rcx+0x40]
   14001423b:	mov    rax,QWORD PTR [rax]
   14001423e:	call   QWORD PTR [rax+0x10]
   140014241:	mov    rcx,QWORD PTR [rsp+0x40]
   140014246:	add    rcx,0x18
   14001424a:	call   0x140014cc0
   14001424f:	mov    r11,QWORD PTR [rsp+0x40]
   140014254:	mov    DWORD PTR [r11+0x8],0x0
   14001425c:	add    rsp,0x38
   140014260:	ret    
   140014261:	int3   
   140014262:	int3   
   140014263:	int3   
   140014264:	int3   
   140014265:	int3   
   140014266:	int3   
   140014267:	int3   
   140014268:	int3   
   140014269:	int3   
   14001426a:	int3   
   14001426b:	int3   
   14001426c:	int3   
   14001426d:	int3   
   14001426e:	int3   
   14001426f:	int3   
   140014270:	mov    QWORD PTR [rsp+0x8],rcx
   140014275:	sub    rsp,0x28
   140014279:	mov    rcx,QWORD PTR [rsp+0x30]
   14001427e:	call   0x1400141c0
   140014283:	mov    rcx,QWORD PTR [rsp+0x30]
   140014288:	add    rcx,0x8
   14001428c:	call   0x140014110
   140014291:	add    rsp,0x28
   140014295:	ret    
   140014296:	int3   
   140014297:	int3   
   140014298:	int3   
   140014299:	int3   
   14001429a:	int3   
   14001429b:	int3   
   14001429c:	int3   
   14001429d:	int3   
   14001429e:	int3   
   14001429f:	int3   
   1400142a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400142a5:	sub    rsp,0x28
   1400142a9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400142ae:	call   0x140014270
   1400142b3:	add    rsp,0x28
   1400142b7:	ret    
   1400142b8:	int3   
   1400142b9:	int3   
   1400142ba:	int3   
   1400142bb:	int3   
   1400142bc:	int3   
   1400142bd:	int3   
   1400142be:	int3   
   1400142bf:	int3   
   1400142c0:	mov    DWORD PTR [rsp+0x10],edx
   1400142c4:	mov    QWORD PTR [rsp+0x8],rcx
   1400142c9:	sub    rsp,0x28
   1400142cd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400142d2:	call   0x140013fe0
   1400142d7:	mov    eax,DWORD PTR [rsp+0x38]
   1400142db:	and    eax,0x1
   1400142de:	test   eax,eax
   1400142e0:	je     0x1400142ec
   1400142e2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400142e7:	call   0x14001c4dc
   1400142ec:	mov    rax,QWORD PTR [rsp+0x30]
   1400142f1:	add    rsp,0x28
   1400142f5:	ret    
   1400142f6:	int3   
   1400142f7:	int3   
   1400142f8:	int3   
   1400142f9:	int3   
   1400142fa:	int3   
   1400142fb:	int3   
   1400142fc:	int3   
   1400142fd:	int3   
   1400142fe:	int3   
   1400142ff:	int3   
   140014300:	mov    QWORD PTR [rsp+0x8],rcx
   140014305:	mov    rcx,QWORD PTR [rsp+0x8]
   14001430a:	mov    eax,0x1
   14001430f:	lock xadd DWORD PTR [rcx],eax
   140014313:	add    eax,0x1
   140014316:	ret    
   140014317:	int3   
   140014318:	int3   
   140014319:	int3   
   14001431a:	int3   
   14001431b:	int3   
   14001431c:	int3   
   14001431d:	int3   
   14001431e:	int3   
   14001431f:	int3   
   140014320:	mov    QWORD PTR [rsp+0x8],rcx
   140014325:	sub    rsp,0x28
   140014329:	mov    rcx,QWORD PTR [rsp+0x30]
   14001432e:	add    rcx,0xc
   140014332:	call   0x140014300
   140014337:	add    rsp,0x28
   14001433b:	ret    
   14001433c:	int3   
   14001433d:	int3   
   14001433e:	int3   
   14001433f:	int3   
   140014340:	mov    QWORD PTR [rsp+0x8],rcx
   140014345:	mov    rcx,QWORD PTR [rsp+0x8]
   14001434a:	mov    eax,0xffffffff
   14001434f:	lock xadd DWORD PTR [rcx],eax
   140014353:	add    eax,0xffffffff
   140014356:	ret    
   140014357:	int3   
   140014358:	int3   
   140014359:	int3   
   14001435a:	int3   
   14001435b:	int3   
   14001435c:	int3   
   14001435d:	int3   
   14001435e:	int3   
   14001435f:	int3   
   140014360:	mov    QWORD PTR [rsp+0x8],rcx
   140014365:	sub    rsp,0x28
   140014369:	mov    rcx,QWORD PTR [rsp+0x30]
   14001436e:	add    rcx,0xc
   140014372:	call   0x140014340
   140014377:	add    rsp,0x28
   14001437b:	ret    
   14001437c:	int3   
   14001437d:	int3   
   14001437e:	int3   
   14001437f:	int3   
   140014380:	mov    QWORD PTR [rsp+0x8],rcx
   140014385:	mov    rax,QWORD PTR [rsp+0x8]
   14001438a:	mov    eax,DWORD PTR [rax+0xc]
   14001438d:	ret    
   14001438e:	int3   
   14001438f:	int3   
   140014390:	mov    QWORD PTR [rsp+0x10],rdx
   140014395:	mov    QWORD PTR [rsp+0x8],rcx
   14001439a:	sub    rsp,0x48
   14001439e:	cmp    QWORD PTR [rsp+0x58],0x0
   1400143a4:	jne    0x1400143b0
   1400143a6:	mov    eax,0x80004003
   1400143ab:	jmp    0x140014432
   1400143b0:	mov    DWORD PTR [rsp+0x30],0x0
   1400143b8:	mov    rax,QWORD PTR [rsp+0x50]
   1400143bd:	cmp    QWORD PTR [rax+0x40],0x0
   1400143c2:	jne    0x1400143f2
   1400143c4:	mov    rax,QWORD PTR [rsp+0x50]
   1400143c9:	add    rax,0x40
   1400143cd:	mov    QWORD PTR [rsp+0x20],rax
   1400143d2:	lea    r9,[rip+0x2b757]        # 0x14003fb30
   1400143d9:	mov    r8d,0x1
   1400143df:	xor    edx,edx
   1400143e1:	lea    rcx,[rip+0x261c8]        # 0x14003a5b0
   1400143e8:	call   QWORD PTR [rip+0x26032]        # 0x14003a420
   1400143ee:	mov    DWORD PTR [rsp+0x30],eax
   1400143f2:	cmp    DWORD PTR [rsp+0x30],0x0
   1400143f7:	jl     0x14001442e
   1400143f9:	xor    eax,eax
   1400143fb:	test   eax,eax
   1400143fd:	jne    0x1400143f9
   1400143ff:	xor    eax,eax
   140014401:	test   eax,eax
   140014403:	jne    0x1400143f9
   140014405:	mov    rcx,QWORD PTR [rsp+0x58]
   14001440a:	mov    rax,QWORD PTR [rsp+0x50]
   14001440f:	mov    rax,QWORD PTR [rax+0x40]
   140014413:	mov    QWORD PTR [rcx],rax
   140014416:	mov    rax,QWORD PTR [rsp+0x50]
   14001441b:	mov    rax,QWORD PTR [rax+0x40]
   14001441f:	mov    rcx,QWORD PTR [rsp+0x50]
   140014424:	mov    rcx,QWORD PTR [rcx+0x40]
   140014428:	mov    rax,QWORD PTR [rax]
   14001442b:	call   QWORD PTR [rax+0x8]
   14001442e:	mov    eax,DWORD PTR [rsp+0x30]
   140014432:	add    rsp,0x48
   140014436:	ret    
   140014437:	int3   
   140014438:	int3   
   140014439:	int3   
   14001443a:	int3   
   14001443b:	int3   
   14001443c:	int3   
   14001443d:	int3   
   14001443e:	int3   
   14001443f:	int3   
   140014440:	lea    rax,[rip+0x2b1c1]        # 0x14003f608
   140014447:	ret    
   140014448:	int3   
   140014449:	int3   
   14001444a:	int3   
   14001444b:	int3   
   14001444c:	int3   
   14001444d:	int3   
   14001444e:	int3   
   14001444f:	int3   
   140014450:	mov    QWORD PTR [rsp+0x10],rdx
   140014455:	mov    QWORD PTR [rsp+0x8],rcx
   14001445a:	sub    rsp,0x28
   14001445e:	call   0x140014440
   140014463:	mov    r8,rax
   140014466:	mov    rax,QWORD PTR [rsp+0x38]
   14001446b:	mov    rax,QWORD PTR [rax]
   14001446e:	lea    rdx,[rip+0x2b613]        # 0x14003fa88
   140014475:	mov    rcx,QWORD PTR [rsp+0x38]
   14001447a:	call   QWORD PTR [rax+0x18]
   14001447d:	add    rsp,0x28
   140014481:	ret    
   140014482:	int3   
   140014483:	int3   
   140014484:	int3   
   140014485:	int3   
   140014486:	int3   
   140014487:	int3   
   140014488:	int3   
   140014489:	int3   
   14001448a:	int3   
   14001448b:	int3   
   14001448c:	int3   
   14001448d:	int3   
   14001448e:	int3   
   14001448f:	int3   
   140014490:	mov    QWORD PTR [rsp+0x20],r9
   140014495:	mov    DWORD PTR [rsp+0x18],r8d
   14001449a:	mov    DWORD PTR [rsp+0x10],edx
   14001449e:	mov    QWORD PTR [rsp+0x8],rcx
   1400144a3:	mov    eax,0x80004005
   1400144a8:	ret    
   1400144a9:	int3   
   1400144aa:	int3   
   1400144ab:	int3   
   1400144ac:	int3   
   1400144ad:	int3   
   1400144ae:	int3   
   1400144af:	int3   
   1400144b0:	mov    QWORD PTR [rsp+0x20],r9
   1400144b5:	mov    DWORD PTR [rsp+0x18],r8d
   1400144ba:	mov    QWORD PTR [rsp+0x10],rdx
   1400144bf:	mov    QWORD PTR [rsp+0x8],rcx
   1400144c4:	mov    eax,0x80004005
   1400144c9:	ret    
   1400144ca:	int3   
   1400144cb:	int3   
   1400144cc:	int3   
   1400144cd:	int3   
   1400144ce:	int3   
   1400144cf:	int3   
   1400144d0:	mov    QWORD PTR [rsp+0x20],r9
   1400144d5:	mov    DWORD PTR [rsp+0x18],r8d
   1400144da:	mov    QWORD PTR [rsp+0x10],rdx
   1400144df:	mov    QWORD PTR [rsp+0x8],rcx
   1400144e4:	sub    rsp,0x78
   1400144e8:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   1400144f1:	call   0x140016a00
   1400144f6:	mov    DWORD PTR [rsp+0x40],eax
   1400144fa:	lea    rcx,[rsp+0x48]
   1400144ff:	call   0x140015790
   140014504:	nop
   140014505:	mov    edx,0x400
   14001450a:	mov    rcx,QWORD PTR [rsp+0x98]
   140014512:	call   0x140015bd0
   140014517:	mov    QWORD PTR [rsp+0x50],rax
   14001451c:	movzx  r8d,WORD PTR [rsp+0x90]
   140014525:	mov    DWORD PTR [rsp+0x20],0x1
   14001452d:	mov    r9,QWORD PTR [rsp+0x50]
   140014532:	mov    rdx,QWORD PTR [rsp+0x88]
   14001453a:	mov    rcx,QWORD PTR [rsp+0x80]
   140014542:	call   0x140018a10
   140014547:	mov    DWORD PTR [rsp+0x58],eax
   14001454b:	lea    rcx,[rsp+0x48]
   140014550:	call   0x140016a10
   140014555:	mov    eax,DWORD PTR [rsp+0x58]
   140014559:	add    rsp,0x78
   14001455d:	ret    
   14001455e:	int3   
   14001455f:	int3   
   140014560:	mov    QWORD PTR [rsp+0x20],r9
   140014565:	mov    DWORD PTR [rsp+0x18],r8d
   14001456a:	mov    QWORD PTR [rsp+0x10],rdx
   14001456f:	mov    QWORD PTR [rsp+0x8],rcx
   140014574:	sub    rsp,0x78
   140014578:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140014581:	call   0x140016a00
   140014586:	mov    DWORD PTR [rsp+0x40],eax
   14001458a:	lea    rcx,[rsp+0x48]
   14001458f:	call   0x140015790
   140014594:	nop
   140014595:	mov    edx,0x400
   14001459a:	mov    rcx,QWORD PTR [rsp+0x98]
   1400145a2:	call   0x140015bd0
   1400145a7:	mov    QWORD PTR [rsp+0x50],rax
   1400145ac:	movzx  r8d,WORD PTR [rsp+0x90]
   1400145b5:	mov    DWORD PTR [rsp+0x20],0x0
   1400145bd:	mov    r9,QWORD PTR [rsp+0x50]
   1400145c2:	mov    rdx,QWORD PTR [rsp+0x88]
   1400145ca:	mov    rcx,QWORD PTR [rsp+0x80]
   1400145d2:	call   0x140018a10
   1400145d7:	mov    DWORD PTR [rsp+0x58],eax
   1400145db:	lea    rcx,[rsp+0x48]
   1400145e0:	call   0x140016a10
   1400145e5:	mov    eax,DWORD PTR [rsp+0x58]
   1400145e9:	add    rsp,0x78
   1400145ed:	ret    
   1400145ee:	int3   
   1400145ef:	int3   
   1400145f0:	mov    QWORD PTR [rsp+0x20],r9
   1400145f5:	mov    DWORD PTR [rsp+0x18],r8d
   1400145fa:	mov    DWORD PTR [rsp+0x10],edx
   1400145fe:	mov    QWORD PTR [rsp+0x8],rcx
   140014603:	sub    rsp,0xb58
   14001460a:	mov    rax,QWORD PTR [rip+0x34e4f]        # 0x140049460
   140014611:	xor    rax,rsp
   140014614:	mov    QWORD PTR [rsp+0xb40],rax
   14001461c:	lea    rcx,[rsp+0x270]
   140014624:	call   0x140014ba0
   140014629:	lea    rcx,[rsp+0x270]
   140014631:	call   0x140014fb0
   140014636:	mov    DWORD PTR [rsp+0x2c4],eax
   14001463d:	cmp    DWORD PTR [rsp+0x2c4],0x0
   140014645:	jge    0x14001466e
   140014647:	mov    eax,DWORD PTR [rsp+0x2c4]
   14001464e:	mov    DWORD PTR [rsp+0xb18],eax
   140014655:	lea    rcx,[rsp+0x270]
   14001465d:	call   0x140014ef0
   140014662:	mov    eax,DWORD PTR [rsp+0xb18]
   140014669:	jmp    0x140014a69
   14001466e:	cmp    QWORD PTR [rsp+0xb78],0x0
   140014677:	je     0x1400146c1
   140014679:	mov    rax,QWORD PTR [rsp+0xb78]
   140014681:	cmp    QWORD PTR [rax],0x0
   140014685:	je     0x1400146c1
   140014687:	mov    r8,QWORD PTR [rsp+0xb78]
   14001468f:	mov    r8,QWORD PTR [r8+0x8]
   140014693:	mov    rdx,QWORD PTR [rsp+0xb78]
   14001469b:	mov    rdx,QWORD PTR [rdx]
   14001469e:	lea    rcx,[rsp+0x270]
   1400146a6:	call   0x1400155a0
   1400146ab:	mov    rax,QWORD PTR [rsp+0xb78]
   1400146b3:	add    rax,0x10
   1400146b7:	mov    QWORD PTR [rsp+0xb78],rax
   1400146bf:	jmp    0x140014679
   1400146c1:	mov    rax,QWORD PTR [rsp+0xb60]
   1400146c9:	mov    rax,QWORD PTR [rax]
   1400146cc:	lea    rdx,[rsp+0x270]
   1400146d4:	mov    rcx,QWORD PTR [rsp+0xb60]
   1400146dc:	call   QWORD PTR [rax+0x28]
   1400146df:	mov    DWORD PTR [rsp+0x2c4],eax
   1400146e6:	cmp    DWORD PTR [rsp+0x2c4],0x0
   1400146ee:	jge    0x140014717
   1400146f0:	mov    eax,DWORD PTR [rsp+0x2c4]
   1400146f7:	mov    DWORD PTR [rsp+0xb1c],eax
   1400146fe:	lea    rcx,[rsp+0x270]
   140014706:	call   0x140014ef0
   14001470b:	mov    eax,DWORD PTR [rsp+0xb1c]
   140014712:	jmp    0x140014a69
   140014717:	call   0x140016a00
   14001471c:	mov    DWORD PTR [rsp+0x38],eax
   140014720:	lea    rcx,[rsp+0x268]
   140014728:	call   0x140015790
   14001472d:	lea    rcx,[rip+0x36e8c]        # 0x14004b5c0
   140014734:	call   0x140014fd0
   140014739:	mov    QWORD PTR [rsp+0x30],rax
   14001473e:	mov    r8d,0x104
   140014744:	lea    rdx,[rsp+0x50]
   140014749:	mov    rcx,QWORD PTR [rsp+0x30]
   14001474e:	call   QWORD PTR [rip+0x25a1c]        # 0x14003a170
   140014754:	mov    DWORD PTR [rsp+0x2c0],eax
   14001475b:	cmp    DWORD PTR [rsp+0x2c0],0x0
   140014763:	jne    0x140014799
   140014765:	call   0x140015830
   14001476a:	mov    DWORD PTR [rsp+0xb20],eax
   140014771:	lea    rcx,[rsp+0x268]
   140014779:	call   0x140016a10
   14001477e:	lea    rcx,[rsp+0x270]
   140014786:	call   0x140014ef0
   14001478b:	mov    eax,DWORD PTR [rsp+0xb20]
   140014792:	jmp    0x140014a69
   140014797:	jmp    0x1400147dd
   140014799:	cmp    DWORD PTR [rsp+0x2c0],0x104
   1400147a4:	jne    0x1400147dd
   1400147a6:	mov    ecx,0x7a
   1400147ab:	call   0x140017980
   1400147b0:	mov    DWORD PTR [rsp+0xb24],eax
   1400147b7:	lea    rcx,[rsp+0x268]
   1400147bf:	call   0x140016a10
   1400147c4:	lea    rcx,[rsp+0x270]
   1400147cc:	call   0x140014ef0
   1400147d1:	mov    eax,DWORD PTR [rsp+0xb24]
   1400147d8:	jmp    0x140014a69
   1400147dd:	mov    QWORD PTR [rsp+0x2d8],0x0
   1400147e9:	mov    edx,0x400
   1400147ee:	lea    rcx,[rsp+0x50]
   1400147f3:	call   0x140015bd0
   1400147f8:	mov    QWORD PTR [rsp+0x2d8],rax
   140014800:	mov    r8,QWORD PTR [rsp+0x2d8]
   140014808:	mov    edx,0x208
   14001480d:	lea    rcx,[rsp+0x2e0]
   140014815:	call   0x140014fe0
   14001481a:	cmp    QWORD PTR [rsp+0x30],0x0
   140014820:	je     0x140014835
   140014822:	xor    ecx,ecx
   140014824:	call   QWORD PTR [rip+0x25856]        # 0x14003a080
   14001482a:	cmp    QWORD PTR [rsp+0x30],rax
   14001482f:	jne    0x1400148f7
   140014835:	mov    eax,0x22
   14001483a:	mov    WORD PTR [rsp+0x6f0],ax
   140014842:	lea    rcx,[rsp+0x6f2]
   14001484a:	lea    r8,[rsp+0x2e0]
   140014852:	mov    edx,0x20b
   140014857:	call   0x1400150c0
   14001485c:	movzx  eax,al
   14001485f:	test   eax,eax
   140014861:	jne    0x140014894
   140014863:	mov    DWORD PTR [rsp+0xb28],0x80004005
   14001486e:	lea    rcx,[rsp+0x268]
   140014876:	call   0x140016a10
   14001487b:	lea    rcx,[rsp+0x270]
   140014883:	call   0x140014ef0
   140014888:	mov    eax,DWORD PTR [rsp+0xb28]
   14001488f:	jmp    0x140014a69
   140014894:	lea    rcx,[rsp+0x6f0]
   14001489c:	call   0x140015120
   1400148a1:	cdqe   
   1400148a3:	mov    QWORD PTR [rsp+0xb10],rax
   1400148ab:	mov    ecx,0x22
   1400148b0:	mov    rax,QWORD PTR [rsp+0xb10]
   1400148b8:	mov    WORD PTR [rsp+rax*2+0x6f0],cx
   1400148c0:	xor    ecx,ecx
   1400148c2:	mov    rax,QWORD PTR [rsp+0xb10]
   1400148ca:	mov    WORD PTR [rsp+rax*2+0x6f2],cx
   1400148d2:	lea    r8,[rsp+0x6f0]
   1400148da:	lea    rdx,[rip+0x2b167]        # 0x14003fa48
   1400148e1:	lea    rcx,[rsp+0x270]
   1400148e9:	call   0x1400155a0
   1400148ee:	mov    DWORD PTR [rsp+0x2d0],eax
   1400148f5:	jmp    0x14001491a
   1400148f7:	lea    r8,[rsp+0x2e0]
   1400148ff:	lea    rdx,[rip+0x2b142]        # 0x14003fa48
   140014906:	lea    rcx,[rsp+0x270]
   14001490e:	call   0x1400155a0
   140014913:	mov    DWORD PTR [rsp+0x2d0],eax
   14001491a:	cmp    DWORD PTR [rsp+0x2d0],0x0
   140014922:	jge    0x140014958
   140014924:	mov    eax,DWORD PTR [rsp+0x2d0]
   14001492b:	mov    DWORD PTR [rsp+0xb2c],eax
   140014932:	lea    rcx,[rsp+0x268]
   14001493a:	call   0x140016a10
   14001493f:	lea    rcx,[rsp+0x270]
   140014947:	call   0x140014ef0
   14001494c:	mov    eax,DWORD PTR [rsp+0xb2c]
   140014953:	jmp    0x140014a69
   140014958:	lea    r8,[rsp+0x2e0]
   140014960:	lea    rdx,[rip+0x2b0f1]        # 0x14003fa58
   140014967:	lea    rcx,[rsp+0x270]
   14001496f:	call   0x1400155a0
   140014974:	mov    DWORD PTR [rsp+0x2d0],eax
   14001497b:	cmp    DWORD PTR [rsp+0x2d0],0x0
   140014983:	jge    0x1400149b9
   140014985:	mov    eax,DWORD PTR [rsp+0x2d0]
   14001498c:	mov    DWORD PTR [rsp+0xb30],eax
   140014993:	lea    rcx,[rsp+0x268]
   14001499b:	call   0x140016a10
   1400149a0:	lea    rcx,[rsp+0x270]
   1400149a8:	call   0x140014ef0
   1400149ad:	mov    eax,DWORD PTR [rsp+0xb30]
   1400149b4:	jmp    0x140014a69
   1400149b9:	lea    rax,[rip+0x2b0b0]        # 0x14003fa70
   1400149c0:	mov    QWORD PTR [rsp+0x2c8],rax
   1400149c8:	cmp    DWORD PTR [rsp+0xb70],0x0
   1400149d0:	je     0x140014a00
   1400149d2:	mov    r9,QWORD PTR [rsp+0x2c8]
   1400149da:	mov    r8d,DWORD PTR [rsp+0xb68]
   1400149e2:	mov    rdx,QWORD PTR [rsp+0x2d8]
   1400149ea:	lea    rcx,[rsp+0x270]
   1400149f2:	call   0x1400144d0
   1400149f7:	mov    DWORD PTR [rsp+0xb38],eax
   1400149fe:	jmp    0x140014a2c
   140014a00:	mov    r9,QWORD PTR [rsp+0x2c8]
   140014a08:	mov    r8d,DWORD PTR [rsp+0xb68]
   140014a10:	mov    rdx,QWORD PTR [rsp+0x2d8]
   140014a18:	lea    rcx,[rsp+0x270]
   140014a20:	call   0x140014560
   140014a25:	mov    DWORD PTR [rsp+0xb38],eax
   140014a2c:	mov    eax,DWORD PTR [rsp+0xb38]
   140014a33:	mov    DWORD PTR [rsp+0x2c4],eax
   140014a3a:	mov    eax,DWORD PTR [rsp+0x2c4]
   140014a41:	mov    DWORD PTR [rsp+0xb34],eax
   140014a48:	lea    rcx,[rsp+0x268]
   140014a50:	call   0x140016a10
   140014a55:	lea    rcx,[rsp+0x270]
   140014a5d:	call   0x140014ef0
   140014a62:	mov    eax,DWORD PTR [rsp+0xb34]
   140014a69:	mov    rcx,QWORD PTR [rsp+0xb40]
   140014a71:	xor    rcx,rsp
   140014a74:	call   0x14001c500
   140014a79:	add    rsp,0xb58
   140014a80:	ret    
   140014a81:	int3   
   140014a82:	int3   
   140014a83:	int3   
   140014a84:	int3   
   140014a85:	int3   
   140014a86:	int3   
   140014a87:	int3   
   140014a88:	int3   
   140014a89:	int3   
   140014a8a:	int3   
   140014a8b:	int3   
   140014a8c:	int3   
   140014a8d:	int3   
   140014a8e:	int3   
   140014a8f:	int3   
   140014a90:	mov    QWORD PTR [rsp+0x20],r9
   140014a95:	mov    DWORD PTR [rsp+0x18],r8d
   140014a9a:	mov    DWORD PTR [rsp+0x10],edx
   140014a9e:	mov    QWORD PTR [rsp+0x8],rcx
   140014aa3:	sub    rsp,0x28
   140014aa7:	mov    r9,QWORD PTR [rsp+0x48]
   140014aac:	mov    r8d,DWORD PTR [rsp+0x40]
   140014ab1:	mov    edx,DWORD PTR [rsp+0x38]
   140014ab5:	mov    rcx,QWORD PTR [rsp+0x30]
   140014aba:	call   0x1400145f0
   140014abf:	add    rsp,0x28
   140014ac3:	ret    
   140014ac4:	int3   
   140014ac5:	int3   
   140014ac6:	int3   
   140014ac7:	int3   
   140014ac8:	int3   
   140014ac9:	int3   
   140014aca:	int3   
   140014acb:	int3   
   140014acc:	int3   
   140014acd:	int3   
   140014ace:	int3   
   140014acf:	int3   
   140014ad0:	mov    QWORD PTR [rsp+0x8],rcx
   140014ad5:	mov    rax,QWORD PTR [rsp+0x8]
   140014ada:	mov    QWORD PTR [rax],0x0
   140014ae1:	mov    rax,QWORD PTR [rsp+0x8]
   140014ae6:	mov    QWORD PTR [rax+0x8],0x0
   140014aee:	mov    rax,QWORD PTR [rsp+0x8]
   140014af3:	mov    DWORD PTR [rax+0x10],0x0
   140014afa:	mov    rax,QWORD PTR [rsp+0x8]
   140014aff:	ret    
   140014b00:	mov    QWORD PTR [rsp+0x8],rcx
   140014b05:	sub    rsp,0x28
   140014b09:	mov    rcx,QWORD PTR [rsp+0x30]
   140014b0e:	call   0x140014ad0
   140014b13:	mov    rax,QWORD PTR [rsp+0x30]
   140014b18:	add    rsp,0x28
   140014b1c:	ret    
   140014b1d:	int3   
   140014b1e:	int3   
   140014b1f:	int3   
   140014b20:	mov    QWORD PTR [rsp+0x8],rcx
   140014b25:	sub    rsp,0x28
   140014b29:	mov    r8d,0x28
   140014b2f:	xor    edx,edx
   140014b31:	mov    rcx,QWORD PTR [rsp+0x30]
   140014b36:	call   0x14001c730
   140014b3b:	mov    rax,QWORD PTR [rsp+0x30]
   140014b40:	add    rsp,0x28
   140014b44:	ret    
   140014b45:	int3   
   140014b46:	int3   
   140014b47:	int3   
   140014b48:	int3   
   140014b49:	int3   
   140014b4a:	int3   
   140014b4b:	int3   
   140014b4c:	int3   
   140014b4d:	int3   
   140014b4e:	int3   
   140014b4f:	int3   
   140014b50:	mov    QWORD PTR [rsp+0x8],rcx
   140014b55:	sub    rsp,0x28
   140014b59:	mov    rcx,QWORD PTR [rsp+0x30]
   140014b5e:	call   0x140014b20
   140014b63:	mov    r11,QWORD PTR [rsp+0x30]
   140014b68:	mov    BYTE PTR [r11+0x28],0x0
   140014b6d:	mov    rax,QWORD PTR [rsp+0x30]
   140014b72:	add    rsp,0x28
   140014b76:	ret    
   140014b77:	int3   
   140014b78:	int3   
   140014b79:	int3   
   140014b7a:	int3   
   140014b7b:	int3   
   140014b7c:	int3   
   140014b7d:	int3   
   140014b7e:	int3   
   140014b7f:	int3   
   140014b80:	mov    QWORD PTR [rsp+0x8],rcx
   140014b85:	sub    rsp,0x28
   140014b89:	mov    rcx,QWORD PTR [rsp+0x30]
   140014b8e:	call   0x140014b50
   140014b93:	mov    rax,QWORD PTR [rsp+0x30]
   140014b98:	add    rsp,0x28
   140014b9c:	ret    
   140014b9d:	int3   
   140014b9e:	int3   
   140014b9f:	int3   
   140014ba0:	mov    QWORD PTR [rsp+0x8],rcx
   140014ba5:	sub    rsp,0x28
   140014ba9:	mov    rcx,QWORD PTR [rsp+0x30]
   140014bae:	call   0x1400192e0
   140014bb3:	mov    r11,QWORD PTR [rsp+0x30]
   140014bb8:	lea    rax,[rip+0x2af41]        # 0x14003fb00
   140014bbf:	mov    QWORD PTR [r11],rax
   140014bc2:	mov    rcx,QWORD PTR [rsp+0x30]
   140014bc7:	add    rcx,0x8
   140014bcb:	call   0x140014b00
   140014bd0:	mov    rcx,QWORD PTR [rsp+0x30]
   140014bd5:	add    rcx,0x20
   140014bd9:	call   0x140014b80
   140014bde:	mov    rax,QWORD PTR [rsp+0x30]
   140014be3:	add    rsp,0x28
   140014be7:	ret    
   140014be8:	int3   
   140014be9:	int3   
   140014bea:	int3   
   140014beb:	int3   
   140014bec:	int3   
   140014bed:	int3   
   140014bee:	int3   
   140014bef:	int3   
   140014bf0:	mov    QWORD PTR [rsp+0x18],r8
   140014bf5:	mov    QWORD PTR [rsp+0x10],rdx
   140014bfa:	mov    QWORD PTR [rsp+0x8],rcx
   140014bff:	mov    eax,0x80004001
   140014c04:	ret    
   140014c05:	int3   
   140014c06:	int3   
   140014c07:	int3   
   140014c08:	int3   
   140014c09:	int3   
   140014c0a:	int3   
   140014c0b:	int3   
   140014c0c:	int3   
   140014c0d:	int3   
   140014c0e:	int3   
   140014c0f:	int3   
   140014c10:	mov    QWORD PTR [rsp+0x8],rcx
   140014c15:	mov    eax,0x1
   140014c1a:	ret    
   140014c1b:	int3   
   140014c1c:	int3   
   140014c1d:	int3   
   140014c1e:	int3   
   140014c1f:	int3   
   140014c20:	mov    QWORD PTR [rsp+0x8],rcx
   140014c25:	xor    eax,eax
   140014c27:	ret    
   140014c28:	int3   
   140014c29:	int3   
   140014c2a:	int3   
   140014c2b:	int3   
   140014c2c:	int3   
   140014c2d:	int3   
   140014c2e:	int3   
   140014c2f:	int3   
   140014c30:	mov    DWORD PTR [rsp+0x10],edx
   140014c34:	mov    QWORD PTR [rsp+0x8],rcx
   140014c39:	sub    rsp,0x28
   140014c3d:	mov    rcx,QWORD PTR [rsp+0x30]
   140014c42:	call   0x140014ef0
   140014c47:	mov    eax,DWORD PTR [rsp+0x38]
   140014c4b:	and    eax,0x1
   140014c4e:	test   eax,eax
   140014c50:	je     0x140014c5c
   140014c52:	mov    rcx,QWORD PTR [rsp+0x30]
   140014c57:	call   0x14001c4dc
   140014c5c:	mov    rax,QWORD PTR [rsp+0x30]
   140014c61:	add    rsp,0x28
   140014c65:	ret    
   140014c66:	int3   
   140014c67:	int3   
   140014c68:	int3   
   140014c69:	int3   
   140014c6a:	int3   
   140014c6b:	int3   
   140014c6c:	int3   
   140014c6d:	int3   
   140014c6e:	int3   
   140014c6f:	int3   
   140014c70:	mov    QWORD PTR [rsp+0x8],rcx
   140014c75:	sub    rsp,0x28
   140014c79:	mov    rcx,QWORD PTR [rsp+0x30]
   140014c7e:	call   0x140014d90
   140014c83:	add    rsp,0x28
   140014c87:	ret    
   140014c88:	int3   
   140014c89:	int3   
   140014c8a:	int3   
   140014c8b:	int3   
   140014c8c:	int3   
   140014c8d:	int3   
   140014c8e:	int3   
   140014c8f:	int3   
   140014c90:	mov    QWORD PTR [rsp+0x8],rcx
   140014c95:	sub    rsp,0x28
   140014c99:	mov    rcx,QWORD PTR [rsp+0x30]
   140014c9e:	call   0x140014e20
   140014ca3:	mov    rcx,QWORD PTR [rsp+0x30]
   140014ca8:	call   0x140014c70
   140014cad:	add    rsp,0x28
   140014cb1:	ret    
   140014cb2:	int3   
   140014cb3:	int3   
   140014cb4:	int3   
   140014cb5:	int3   
   140014cb6:	int3   
   140014cb7:	int3   
   140014cb8:	int3   
   140014cb9:	int3   
   140014cba:	int3   
   140014cbb:	int3   
   140014cbc:	int3   
   140014cbd:	int3   
   140014cbe:	int3   
   140014cbf:	int3   
   140014cc0:	mov    QWORD PTR [rsp+0x8],rcx
   140014cc5:	sub    rsp,0x28
   140014cc9:	mov    rcx,QWORD PTR [rsp+0x30]
   140014cce:	call   QWORD PTR [rip+0x25424]        # 0x14003a0f8
   140014cd4:	xor    eax,eax
   140014cd6:	add    rsp,0x28
   140014cda:	ret    
   140014cdb:	int3   
   140014cdc:	int3   
   140014cdd:	int3   
   140014cde:	int3   
   140014cdf:	int3   
   140014ce0:	mov    QWORD PTR [rsp+0x8],rcx
   140014ce5:	sub    rsp,0x28
   140014ce9:	mov    rax,QWORD PTR [rsp+0x30]
   140014cee:	movzx  eax,BYTE PTR [rax+0x28]
   140014cf2:	test   eax,eax
   140014cf4:	jne    0x140014cf8
   140014cf6:	jmp    0x140014d0b
   140014cf8:	mov    rax,QWORD PTR [rsp+0x30]
   140014cfd:	mov    BYTE PTR [rax+0x28],0x0
   140014d01:	mov    rcx,QWORD PTR [rsp+0x30]
   140014d06:	call   0x140014cc0
   140014d0b:	mov    rcx,QWORD PTR [rsp+0x30]
   140014d10:	call   0x140001320
   140014d15:	add    rsp,0x28
   140014d19:	ret    
   140014d1a:	int3   
   140014d1b:	int3   
   140014d1c:	int3   
   140014d1d:	int3   
   140014d1e:	int3   
   140014d1f:	int3   
   140014d20:	mov    QWORD PTR [rsp+0x8],rcx
   140014d25:	sub    rsp,0x28
   140014d29:	mov    rcx,QWORD PTR [rsp+0x30]
   140014d2e:	call   0x140014ce0
   140014d33:	add    rsp,0x28
   140014d37:	ret    
   140014d38:	int3   
   140014d39:	int3   
   140014d3a:	int3   
   140014d3b:	int3   
   140014d3c:	int3   
   140014d3d:	int3   
   140014d3e:	int3   
   140014d3f:	int3   
   140014d40:	mov    DWORD PTR [rsp+0x10],edx
   140014d44:	mov    QWORD PTR [rsp+0x8],rcx
   140014d49:	sub    rsp,0x28
   140014d4d:	cmp    DWORD PTR [rsp+0x38],0x0
   140014d52:	jl     0x140014d62
   140014d54:	mov    rax,QWORD PTR [rsp+0x30]
   140014d59:	mov    eax,DWORD PTR [rax+0x10]
   140014d5c:	cmp    DWORD PTR [rsp+0x38],eax
   140014d60:	jl     0x140014d71
   140014d62:	mov    edx,0x1
   140014d67:	mov    ecx,0xc000008c
   140014d6c:	call   0x140015a90
   140014d71:	movsxd rcx,DWORD PTR [rsp+0x38]
   140014d76:	mov    rax,QWORD PTR [rsp+0x30]
   140014d7b:	mov    rax,QWORD PTR [rax]
   140014d7e:	lea    rax,[rax+rcx*8]
   140014d82:	add    rsp,0x28
   140014d86:	ret    
   140014d87:	int3   
   140014d88:	int3   
   140014d89:	int3   
   140014d8a:	int3   
   140014d8b:	int3   
   140014d8c:	int3   
   140014d8d:	int3   
   140014d8e:	int3   
   140014d8f:	int3   
   140014d90:	mov    QWORD PTR [rsp+0x8],rcx
   140014d95:	sub    rsp,0x38
   140014d99:	mov    rax,QWORD PTR [rsp+0x40]
   140014d9e:	cmp    QWORD PTR [rax],0x0
   140014da2:	je     0x140014de2
   140014da4:	mov    DWORD PTR [rsp+0x20],0x0
   140014dac:	jmp    0x140014db9
   140014dae:	mov    eax,DWORD PTR [rsp+0x20]
   140014db2:	add    eax,0x1
   140014db5:	mov    DWORD PTR [rsp+0x20],eax
   140014db9:	mov    rax,QWORD PTR [rsp+0x40]
   140014dbe:	mov    eax,DWORD PTR [rax+0x10]
   140014dc1:	cmp    DWORD PTR [rsp+0x20],eax
   140014dc5:	jge    0x140014dc9
   140014dc7:	jmp    0x140014dae
   140014dc9:	mov    rcx,QWORD PTR [rsp+0x40]
   140014dce:	mov    rcx,QWORD PTR [rcx]
   140014dd1:	call   0x14001ca48
   140014dd6:	mov    r11,QWORD PTR [rsp+0x40]
   140014ddb:	mov    QWORD PTR [r11],0x0
   140014de2:	mov    rax,QWORD PTR [rsp+0x40]
   140014de7:	cmp    QWORD PTR [rax+0x8],0x0
   140014dec:	je     0x140014e09
   140014dee:	mov    rcx,QWORD PTR [rsp+0x40]
   140014df3:	mov    rcx,QWORD PTR [rcx+0x8]
   140014df7:	call   0x14001ca48
   140014dfc:	mov    r11,QWORD PTR [rsp+0x40]
   140014e01:	mov    QWORD PTR [r11+0x8],0x0
   140014e09:	mov    rax,QWORD PTR [rsp+0x40]
   140014e0e:	mov    DWORD PTR [rax+0x10],0x0
   140014e15:	add    rsp,0x38
   140014e19:	ret    
   140014e1a:	int3   
   140014e1b:	int3   
   140014e1c:	int3   
   140014e1d:	int3   
   140014e1e:	int3   
   140014e1f:	int3   
   140014e20:	mov    QWORD PTR [rsp+0x8],rcx
   140014e25:	sub    rsp,0x48
   140014e29:	mov    DWORD PTR [rsp+0x20],0x0
   140014e31:	jmp    0x140014e3e
   140014e33:	mov    eax,DWORD PTR [rsp+0x20]
   140014e37:	add    eax,0x1
   140014e3a:	mov    DWORD PTR [rsp+0x20],eax
   140014e3e:	mov    rcx,QWORD PTR [rsp+0x50]
   140014e43:	call   0x140002bb0
   140014e48:	cmp    DWORD PTR [rsp+0x20],eax
   140014e4c:	jge    0x140014e90
   140014e4e:	mov    edx,DWORD PTR [rsp+0x20]
   140014e52:	mov    rcx,QWORD PTR [rsp+0x50]
   140014e57:	call   0x140014d40
   140014e5c:	mov    rax,QWORD PTR [rax]
   140014e5f:	mov    QWORD PTR [rsp+0x28],rax
   140014e64:	mov    rcx,QWORD PTR [rsp+0x28]
   140014e69:	call   0x14001cbb8
   140014e6e:	mov    edx,DWORD PTR [rsp+0x20]
   140014e72:	mov    rcx,QWORD PTR [rsp+0x50]
   140014e77:	call   0x140015ac0
   140014e7c:	mov    rax,QWORD PTR [rax]
   140014e7f:	mov    QWORD PTR [rsp+0x30],rax
   140014e84:	mov    rcx,QWORD PTR [rsp+0x30]
   140014e89:	call   0x14001cbb8
   140014e8e:	jmp    0x140014e33
   140014e90:	mov    rcx,QWORD PTR [rsp+0x50]
   140014e95:	call   0x140014d90
   140014e9a:	xor    eax,eax
   140014e9c:	add    rsp,0x48
   140014ea0:	ret    
   140014ea1:	int3   
   140014ea2:	int3   
   140014ea3:	int3   
   140014ea4:	int3   
   140014ea5:	int3   
   140014ea6:	int3   
   140014ea7:	int3   
   140014ea8:	int3   
   140014ea9:	int3   
   140014eaa:	int3   
   140014eab:	int3   
   140014eac:	int3   
   140014ead:	int3   
   140014eae:	int3   
   140014eaf:	int3   
   140014eb0:	mov    QWORD PTR [rsp+0x8],rcx
   140014eb5:	sub    rsp,0x38
   140014eb9:	mov    rcx,QWORD PTR [rsp+0x40]
   140014ebe:	add    rcx,0x20
   140014ec2:	call   0x1400159c0
   140014ec7:	mov    rcx,QWORD PTR [rsp+0x40]
   140014ecc:	add    rcx,0x8
   140014ed0:	call   0x140014e20
   140014ed5:	mov    DWORD PTR [rsp+0x20],eax
   140014ed9:	mov    rcx,QWORD PTR [rsp+0x40]
   140014ede:	add    rcx,0x20
   140014ee2:	call   0x140015b60
   140014ee7:	mov    eax,DWORD PTR [rsp+0x20]
   140014eeb:	add    rsp,0x38
   140014eef:	ret    
   140014ef0:	mov    QWORD PTR [rsp+0x8],rcx
   140014ef5:	sub    rsp,0x28
   140014ef9:	mov    rcx,QWORD PTR [rsp+0x30]
   140014efe:	lea    rax,[rip+0x2abfb]        # 0x14003fb00
   140014f05:	mov    QWORD PTR [rcx],rax
   140014f08:	mov    rcx,QWORD PTR [rsp+0x30]
   140014f0d:	call   0x140014eb0
   140014f12:	mov    rcx,QWORD PTR [rsp+0x30]
   140014f17:	add    rcx,0x20
   140014f1b:	call   0x140014d20
   140014f20:	mov    rcx,QWORD PTR [rsp+0x30]
   140014f25:	add    rcx,0x8
   140014f29:	call   0x140014c90
   140014f2e:	add    rsp,0x28
   140014f32:	ret    
   140014f33:	int3   
   140014f34:	int3   
   140014f35:	int3   
   140014f36:	int3   
   140014f37:	int3   
   140014f38:	int3   
   140014f39:	int3   
   140014f3a:	int3   
   140014f3b:	int3   
   140014f3c:	int3   
   140014f3d:	int3   
   140014f3e:	int3   
   140014f3f:	int3   
   140014f40:	mov    QWORD PTR [rsp+0x8],rcx
   140014f45:	sub    rsp,0x48
   140014f49:	mov    DWORD PTR [rsp+0x20],0x80004005
   140014f51:	mov    rcx,QWORD PTR [rsp+0x50]
   140014f56:	call   QWORD PTR [rip+0x2524c]        # 0x14003a1a8
   140014f5c:	mov    DWORD PTR [rsp+0x20],0x0
   140014f64:	jmp    0x140014f6e
   140014f66:	mov    DWORD PTR [rsp+0x20],0x8007000e
   140014f6e:	mov    eax,DWORD PTR [rsp+0x20]
   140014f72:	add    rsp,0x48
   140014f76:	ret    
   140014f77:	int3   
   140014f78:	int3   
   140014f79:	int3   
   140014f7a:	int3   
   140014f7b:	int3   
   140014f7c:	int3   
   140014f7d:	int3   
   140014f7e:	int3   
   140014f7f:	int3   
   140014f80:	mov    QWORD PTR [rsp+0x8],rcx
   140014f85:	sub    rsp,0x38
   140014f89:	mov    rcx,QWORD PTR [rsp+0x40]
   140014f8e:	call   0x140014f40
   140014f93:	mov    DWORD PTR [rsp+0x20],eax
   140014f97:	cmp    DWORD PTR [rsp+0x20],0x0
   140014f9c:	jl     0x140014fa7
   140014f9e:	mov    rax,QWORD PTR [rsp+0x40]
   140014fa3:	mov    BYTE PTR [rax+0x28],0x1
   140014fa7:	mov    eax,DWORD PTR [rsp+0x20]
   140014fab:	add    rsp,0x38
   140014faf:	ret    
   140014fb0:	mov    QWORD PTR [rsp+0x8],rcx
   140014fb5:	sub    rsp,0x28
   140014fb9:	mov    rcx,QWORD PTR [rsp+0x30]
   140014fbe:	add    rcx,0x20
   140014fc2:	call   0x140014f80
   140014fc7:	add    rsp,0x28
   140014fcb:	ret    
   140014fcc:	int3   
   140014fcd:	int3   
   140014fce:	int3   
   140014fcf:	int3   
   140014fd0:	mov    QWORD PTR [rsp+0x8],rcx
   140014fd5:	mov    rax,QWORD PTR [rsp+0x8]
   140014fda:	mov    rax,QWORD PTR [rax+0x8]
   140014fde:	ret    
   140014fdf:	int3   
   140014fe0:	mov    QWORD PTR [rsp+0x18],r8
   140014fe5:	mov    QWORD PTR [rsp+0x10],rdx
   140014fea:	mov    QWORD PTR [rsp+0x8],rcx
   140014fef:	sub    rsp,0x18
   140014ff3:	cmp    QWORD PTR [rsp+0x28],0x0
   140014ff9:	jne    0x140015000
   140014ffb:	jmp    0x1400150ba
   140015000:	mov    DWORD PTR [rsp],0x0
   140015007:	mov    DWORD PTR [rsp],0x0
   14001500e:	jmp    0x140015019
   140015010:	mov    eax,DWORD PTR [rsp]
   140015013:	add    eax,0x1
   140015016:	mov    DWORD PTR [rsp],eax
   140015019:	mov    ecx,DWORD PTR [rsp]
   14001501c:	mov    rax,QWORD PTR [rsp+0x28]
   140015021:	sub    rax,0x1
   140015025:	cmp    rcx,rax
   140015028:	jae    0x1400150b0
   14001502e:	mov    rax,QWORD PTR [rsp+0x30]
   140015033:	movzx  eax,WORD PTR [rax]
   140015036:	test   eax,eax
   140015038:	je     0x1400150b0
   14001503a:	mov    rcx,QWORD PTR [rsp+0x20]
   14001503f:	mov    rax,QWORD PTR [rsp+0x30]
   140015044:	movzx  eax,WORD PTR [rax]
   140015047:	mov    WORD PTR [rcx],ax
   14001504a:	mov    rax,QWORD PTR [rsp+0x20]
   14001504f:	add    rax,0x2
   140015053:	mov    QWORD PTR [rsp+0x20],rax
   140015058:	mov    rax,QWORD PTR [rsp+0x30]
   14001505d:	movzx  eax,WORD PTR [rax]
   140015060:	cmp    eax,0x27
   140015063:	jne    0x14001509d
   140015065:	mov    eax,DWORD PTR [rsp]
   140015068:	add    eax,0x1
   14001506b:	mov    DWORD PTR [rsp],eax
   14001506e:	mov    ecx,DWORD PTR [rsp]
   140015071:	mov    rax,QWORD PTR [rsp+0x28]
   140015076:	sub    rax,0x1
   14001507a:	cmp    rcx,rax
   14001507d:	jae    0x14001509d
   14001507f:	mov    rcx,QWORD PTR [rsp+0x20]
   140015084:	mov    rax,QWORD PTR [rsp+0x30]
   140015089:	movzx  eax,WORD PTR [rax]
   14001508c:	mov    WORD PTR [rcx],ax
   14001508f:	mov    rax,QWORD PTR [rsp+0x20]
   140015094:	add    rax,0x2
   140015098:	mov    QWORD PTR [rsp+0x20],rax
   14001509d:	mov    rax,QWORD PTR [rsp+0x30]
   1400150a2:	add    rax,0x2
   1400150a6:	mov    QWORD PTR [rsp+0x30],rax
   1400150ab:	jmp    0x140015010
   1400150b0:	xor    ecx,ecx
   1400150b2:	mov    rax,QWORD PTR [rsp+0x20]
   1400150b7:	mov    WORD PTR [rax],cx
   1400150ba:	add    rsp,0x18
   1400150be:	ret    
   1400150bf:	int3   
   1400150c0:	mov    QWORD PTR [rsp+0x18],r8
   1400150c5:	mov    QWORD PTR [rsp+0x10],rdx
   1400150ca:	mov    QWORD PTR [rsp+0x8],rcx
   1400150cf:	sub    rsp,0x38
   1400150d3:	mov    rcx,QWORD PTR [rsp+0x50]
   1400150d8:	call   0x140015120
   1400150dd:	add    eax,0x1
   1400150e0:	movsxd r9,eax
   1400150e3:	shl    r9,1
   1400150e6:	mov    rdx,QWORD PTR [rsp+0x48]
   1400150eb:	shl    rdx,1
   1400150ee:	mov    r8,QWORD PTR [rsp+0x50]
   1400150f3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400150f8:	call   0x14001c53c
   1400150fd:	test   eax,eax
   1400150ff:	jne    0x14001510b
   140015101:	mov    DWORD PTR [rsp+0x20],0x1
   140015109:	jmp    0x140015113
   14001510b:	mov    DWORD PTR [rsp+0x20],0x0
   140015113:	mov    al,BYTE PTR [rsp+0x20]
   140015117:	add    rsp,0x38
   14001511b:	ret    
   14001511c:	int3   
   14001511d:	int3   
   14001511e:	int3   
   14001511f:	int3   
   140015120:	mov    QWORD PTR [rsp+0x8],rcx
   140015125:	sub    rsp,0x28
   140015129:	mov    rcx,QWORD PTR [rsp+0x30]
   14001512e:	call   QWORD PTR [rip+0x24f6c]        # 0x14003a0a0
   140015134:	add    rsp,0x28
   140015138:	ret    
   140015139:	int3   
   14001513a:	int3   
   14001513b:	int3   
   14001513c:	int3   
   14001513d:	int3   
   14001513e:	int3   
   14001513f:	int3   
   140015140:	mov    QWORD PTR [rsp+0x8],rcx
   140015145:	sub    rsp,0x38
   140015149:	mov    rax,QWORD PTR [rsp+0x40]
   14001514e:	mov    rax,QWORD PTR [rax]
   140015151:	mov    QWORD PTR [rsp+0x20],rax
   140015156:	mov    rcx,QWORD PTR [rsp+0x20]
   14001515b:	call   0x14001cbb8
   140015160:	mov    rax,QWORD PTR [rsp+0x40]
   140015165:	mov    QWORD PTR [rax],0x0
   14001516c:	add    rsp,0x38
   140015170:	ret    
   140015171:	int3   
   140015172:	int3   
   140015173:	int3   
   140015174:	int3   
   140015175:	int3   
   140015176:	int3   
   140015177:	int3   
   140015178:	int3   
   140015179:	int3   
   14001517a:	int3   
   14001517b:	int3   
   14001517c:	int3   
   14001517d:	int3   
   14001517e:	int3   
   14001517f:	int3   
   140015180:	mov    QWORD PTR [rsp+0x8],rcx
   140015185:	sub    rsp,0x28
   140015189:	mov    rcx,QWORD PTR [rsp+0x30]
   14001518e:	call   0x140015140
   140015193:	add    rsp,0x28
   140015197:	ret    
   140015198:	int3   
   140015199:	int3   
   14001519a:	int3   
   14001519b:	int3   
   14001519c:	int3   
   14001519d:	int3   
   14001519e:	int3   
   14001519f:	int3   
   1400151a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400151a5:	mov    QWORD PTR [rsp+0x8],rcx
   1400151aa:	xor    eax,eax
   1400151ac:	test   eax,eax
   1400151ae:	jne    0x1400151aa
   1400151b0:	xor    eax,eax
   1400151b2:	test   eax,eax
   1400151b4:	jne    0x1400151aa
   1400151b6:	mov    rcx,QWORD PTR [rsp+0x8]
   1400151bb:	mov    rax,QWORD PTR [rsp+0x10]
   1400151c0:	mov    QWORD PTR [rcx],rax
   1400151c3:	ret    
   1400151c4:	int3   
   1400151c5:	int3   
   1400151c6:	int3   
   1400151c7:	int3   
   1400151c8:	int3   
   1400151c9:	int3   
   1400151ca:	int3   
   1400151cb:	int3   
   1400151cc:	int3   
   1400151cd:	int3   
   1400151ce:	int3   
   1400151cf:	int3   
   1400151d0:	mov    QWORD PTR [rsp+0x20],r9
   1400151d5:	mov    QWORD PTR [rsp+0x18],r8
   1400151da:	mov    DWORD PTR [rsp+0x10],edx
   1400151de:	mov    QWORD PTR [rsp+0x8],rcx
   1400151e3:	sub    rsp,0x58
   1400151e7:	movsxd rcx,DWORD PTR [rsp+0x68]
   1400151ec:	mov    rax,QWORD PTR [rsp+0x60]
   1400151f1:	mov    rax,QWORD PTR [rax]
   1400151f4:	lea    rdx,[rax+rcx*8]
   1400151f8:	mov    ecx,0x8
   1400151fd:	call   0x1400014b0
   140015202:	mov    QWORD PTR [rsp+0x28],rax
   140015207:	cmp    QWORD PTR [rsp+0x28],0x0
   14001520d:	je     0x140015225
   14001520f:	mov    rdx,QWORD PTR [rsp+0x70]
   140015214:	mov    rcx,QWORD PTR [rsp+0x28]
   140015219:	call   0x140012180
   14001521e:	mov    QWORD PTR [rsp+0x40],rax
   140015223:	jmp    0x14001522e
   140015225:	mov    QWORD PTR [rsp+0x40],0x0
   14001522e:	mov    rax,QWORD PTR [rsp+0x40]
   140015233:	mov    QWORD PTR [rsp+0x20],rax
   140015238:	movsxd rcx,DWORD PTR [rsp+0x68]
   14001523d:	mov    rax,QWORD PTR [rsp+0x60]
   140015242:	mov    rax,QWORD PTR [rax+0x8]
   140015246:	lea    rdx,[rax+rcx*8]
   14001524a:	mov    ecx,0x8
   14001524f:	call   0x1400014b0
   140015254:	mov    QWORD PTR [rsp+0x38],rax
   140015259:	cmp    QWORD PTR [rsp+0x38],0x0
   14001525f:	je     0x140015277
   140015261:	mov    rdx,QWORD PTR [rsp+0x78]
   140015266:	mov    rcx,QWORD PTR [rsp+0x38]
   14001526b:	call   0x140012180
   140015270:	mov    QWORD PTR [rsp+0x48],rax
   140015275:	jmp    0x140015280
   140015277:	mov    QWORD PTR [rsp+0x48],0x0
   140015280:	mov    rax,QWORD PTR [rsp+0x48]
   140015285:	mov    QWORD PTR [rsp+0x30],rax
   14001528a:	add    rsp,0x58
   14001528e:	ret    
   14001528f:	int3   
   140015290:	mov    QWORD PTR [rsp+0x18],r8
   140015295:	mov    QWORD PTR [rsp+0x10],rdx
   14001529a:	mov    QWORD PTR [rsp+0x8],rcx
   14001529f:	sub    rsp,0x38
   1400152a3:	mov    rax,QWORD PTR [rsp+0x40]
   1400152a8:	mov    eax,DWORD PTR [rax+0x10]
   1400152ab:	add    eax,0x1
   1400152ae:	movsxd rdx,eax
   1400152b1:	mov    r8d,0x8
   1400152b7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400152bc:	mov    rcx,QWORD PTR [rcx]
   1400152bf:	call   0x14001d78c
   1400152c4:	mov    QWORD PTR [rsp+0x28],rax
   1400152c9:	cmp    QWORD PTR [rsp+0x28],0x0
   1400152cf:	jne    0x1400152d8
   1400152d1:	xor    eax,eax
   1400152d3:	jmp    0x14001535b
   1400152d8:	mov    rcx,QWORD PTR [rsp+0x40]
   1400152dd:	mov    rax,QWORD PTR [rsp+0x28]
   1400152e2:	mov    QWORD PTR [rcx],rax
   1400152e5:	mov    rax,QWORD PTR [rsp+0x40]
   1400152ea:	mov    eax,DWORD PTR [rax+0x10]
   1400152ed:	add    eax,0x1
   1400152f0:	movsxd rdx,eax
   1400152f3:	mov    r8d,0x8
   1400152f9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400152fe:	mov    rcx,QWORD PTR [rcx+0x8]
   140015302:	call   0x14001d78c
   140015307:	mov    QWORD PTR [rsp+0x20],rax
   14001530c:	cmp    QWORD PTR [rsp+0x20],0x0
   140015312:	jne    0x140015318
   140015314:	xor    eax,eax
   140015316:	jmp    0x14001535b
   140015318:	mov    rcx,QWORD PTR [rsp+0x40]
   14001531d:	mov    rax,QWORD PTR [rsp+0x20]
   140015322:	mov    QWORD PTR [rcx+0x8],rax
   140015326:	mov    r9,QWORD PTR [rsp+0x50]
   14001532b:	mov    r8,QWORD PTR [rsp+0x48]
   140015330:	mov    rax,QWORD PTR [rsp+0x40]
   140015335:	mov    edx,DWORD PTR [rax+0x10]
   140015338:	mov    rcx,QWORD PTR [rsp+0x40]
   14001533d:	call   0x1400151d0
   140015342:	mov    r11,QWORD PTR [rsp+0x40]
   140015347:	mov    ecx,DWORD PTR [r11+0x10]
   14001534b:	add    ecx,0x1
   14001534e:	mov    rax,QWORD PTR [rsp+0x40]
   140015353:	mov    DWORD PTR [rax+0x10],ecx
   140015356:	mov    eax,0x1
   14001535b:	add    rsp,0x38
   14001535f:	ret    
   140015360:	mov    QWORD PTR [rsp+0x8],rcx
   140015365:	sub    rsp,0x18
   140015369:	mov    rax,QWORD PTR [rsp+0x20]
   14001536e:	mov    rax,QWORD PTR [rax]
   140015371:	mov    QWORD PTR [rsp],rax
   140015375:	mov    rax,QWORD PTR [rsp+0x20]
   14001537a:	mov    QWORD PTR [rax],0x0
   140015381:	mov    rax,QWORD PTR [rsp]
   140015385:	add    rsp,0x18
   140015389:	ret    
   14001538a:	int3   
   14001538b:	int3   
   14001538c:	int3   
   14001538d:	int3   
   14001538e:	int3   
   14001538f:	int3   
   140015390:	mov    QWORD PTR [rsp+0x18],r8
   140015395:	mov    QWORD PTR [rsp+0x10],rdx
   14001539a:	mov    QWORD PTR [rsp+0x8],rcx
   14001539f:	sub    rsp,0x98
   1400153a6:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   1400153af:	cmp    QWORD PTR [rsp+0xa8],0x0
   1400153b8:	je     0x1400153c5
   1400153ba:	cmp    QWORD PTR [rsp+0xb0],0x0
   1400153c3:	jne    0x1400153cc
   1400153c5:	xor    eax,eax
   1400153c7:	jmp    0x140015594
   1400153cc:	mov    DWORD PTR [rsp+0x38],0x0
   1400153d4:	mov    rcx,QWORD PTR [rsp+0xa8]
   1400153dc:	call   QWORD PTR [rip+0x24cbe]        # 0x14003a0a0
   1400153e2:	add    eax,0x1
   1400153e5:	cdqe   
   1400153e7:	shl    rax,1
   1400153ea:	mov    QWORD PTR [rsp+0x20],rax
   1400153ef:	mov    QWORD PTR [rsp+0x50],0x0
   1400153f8:	mov    eax,0x2
   1400153fd:	mul    QWORD PTR [rsp+0x20]
   140015402:	mov    rcx,rax
   140015405:	mov    rax,0xffffffffffffffff
   14001540c:	cmovo  rcx,rax
   140015410:	call   0x140019f20
   140015415:	mov    QWORD PTR [rsp+0x78],rax
   14001541a:	mov    rax,QWORD PTR [rsp+0x78]
   14001541f:	mov    QWORD PTR [rsp+0x58],rax
   140015424:	mov    rax,QWORD PTR [rsp+0x58]
   140015429:	mov    QWORD PTR [rsp+0x50],rax
   14001542e:	lea    rcx,[rsp+0x30]
   140015433:	call   0x140015790
   140015438:	nop
   140015439:	mov    rdx,QWORD PTR [rsp+0x50]
   14001543e:	lea    rcx,[rsp+0x30]
   140015443:	call   0x1400151a0
   140015448:	mov    rcx,QWORD PTR [rsp+0xb0]
   140015450:	call   0x140015120
   140015455:	add    eax,0x1
   140015458:	cdqe   
   14001545a:	shl    rax,1
   14001545d:	mov    QWORD PTR [rsp+0x28],rax
   140015462:	mov    QWORD PTR [rsp+0x48],0x0
   14001546b:	mov    eax,0x2
   140015470:	mul    QWORD PTR [rsp+0x28]
   140015475:	mov    rcx,rax
   140015478:	mov    rax,0xffffffffffffffff
   14001547f:	cmovo  rcx,rax
   140015483:	call   0x140019f20
   140015488:	mov    QWORD PTR [rsp+0x80],rax
   140015490:	mov    rax,QWORD PTR [rsp+0x80]
   140015498:	mov    QWORD PTR [rsp+0x60],rax
   14001549d:	mov    rax,QWORD PTR [rsp+0x60]
   1400154a2:	mov    QWORD PTR [rsp+0x48],rax
   1400154a7:	lea    rcx,[rsp+0x40]
   1400154ac:	call   0x140015790
   1400154b1:	nop
   1400154b2:	mov    rdx,QWORD PTR [rsp+0x48]
   1400154b7:	lea    rcx,[rsp+0x40]
   1400154bc:	call   0x1400151a0
   1400154c1:	cmp    QWORD PTR [rsp+0x50],0x0
   1400154c7:	je     0x1400154d1
   1400154c9:	cmp    QWORD PTR [rsp+0x48],0x0
   1400154cf:	jne    0x1400154db
   1400154d1:	mov    DWORD PTR [rsp+0x38],0x8007000e
   1400154d9:	jmp    0x140015536
   1400154db:	mov    r9,QWORD PTR [rsp+0x20]
   1400154e0:	mov    r8,QWORD PTR [rsp+0xa8]
   1400154e8:	mov    rdx,QWORD PTR [rsp+0x20]
   1400154ed:	mov    rcx,QWORD PTR [rsp+0x50]
   1400154f2:	call   0x140015d20
   1400154f7:	mov    r9,QWORD PTR [rsp+0x28]
   1400154fc:	mov    r8,QWORD PTR [rsp+0xb0]
   140015504:	mov    rdx,QWORD PTR [rsp+0x28]
   140015509:	mov    rcx,QWORD PTR [rsp+0x48]
   14001550e:	call   0x140015d20
   140015513:	lea    r8,[rsp+0x48]
   140015518:	lea    rdx,[rsp+0x50]
   14001551d:	mov    rcx,QWORD PTR [rsp+0xa0]
   140015525:	call   0x140015290
   14001552a:	test   eax,eax
   14001552c:	jne    0x140015536
   14001552e:	mov    DWORD PTR [rsp+0x38],0x8007000e
   140015536:	cmp    DWORD PTR [rsp+0x38],0x0
   14001553b:	jl     0x140015551
   14001553d:	lea    rcx,[rsp+0x30]
   140015542:	call   0x140015360
   140015547:	lea    rcx,[rsp+0x40]
   14001554c:	call   0x140015360
   140015551:	cmp    DWORD PTR [rsp+0x38],0x0
   140015556:	jl     0x140015565
   140015558:	mov    DWORD PTR [rsp+0x88],0x1
   140015563:	jmp    0x140015570
   140015565:	mov    DWORD PTR [rsp+0x88],0x0
   140015570:	mov    eax,DWORD PTR [rsp+0x88]
   140015577:	mov    DWORD PTR [rsp+0x68],eax
   14001557b:	lea    rcx,[rsp+0x40]
   140015580:	call   0x140015180
   140015585:	nop
   140015586:	lea    rcx,[rsp+0x30]
   14001558b:	call   0x140015180
   140015590:	mov    eax,DWORD PTR [rsp+0x68]
   140015594:	add    rsp,0x98
   14001559b:	ret    
   14001559c:	int3   
   14001559d:	int3   
   14001559e:	int3   
   14001559f:	int3   
   1400155a0:	mov    QWORD PTR [rsp+0x18],r8
   1400155a5:	mov    QWORD PTR [rsp+0x10],rdx
   1400155aa:	mov    QWORD PTR [rsp+0x8],rcx
   1400155af:	sub    rsp,0x78
   1400155b3:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   1400155bc:	cmp    QWORD PTR [rsp+0x88],0x0
   1400155c5:	je     0x1400155d2
   1400155c7:	cmp    QWORD PTR [rsp+0x90],0x0
   1400155d0:	jne    0x1400155dc
   1400155d2:	mov    eax,0x80070057
   1400155d7:	jmp    0x14001567a
   1400155dc:	mov    rcx,QWORD PTR [rsp+0x80]
   1400155e4:	add    rcx,0x20
   1400155e8:	call   0x1400159c0
   1400155ed:	call   0x140016a00
   1400155f2:	mov    DWORD PTR [rsp+0x30],eax
   1400155f6:	lea    rcx,[rsp+0x38]
   1400155fb:	call   0x140015790
   140015600:	nop
   140015601:	mov    edx,0x400
   140015606:	mov    rcx,QWORD PTR [rsp+0x88]
   14001560e:	call   0x140015bd0
   140015613:	mov    QWORD PTR [rsp+0x48],rax
   140015618:	mov    rcx,QWORD PTR [rsp+0x80]
   140015620:	add    rcx,0x8
   140015624:	mov    r8,QWORD PTR [rsp+0x90]
   14001562c:	mov    rdx,QWORD PTR [rsp+0x48]
   140015631:	call   0x140015390
   140015636:	mov    DWORD PTR [rsp+0x40],eax
   14001563a:	mov    rcx,QWORD PTR [rsp+0x80]
   140015642:	add    rcx,0x20
   140015646:	call   0x140015b60
   14001564b:	cmp    DWORD PTR [rsp+0x40],0x0
   140015650:	je     0x14001565c
   140015652:	mov    DWORD PTR [rsp+0x60],0x0
   14001565a:	jmp    0x140015664
   14001565c:	mov    DWORD PTR [rsp+0x60],0x8007000e
   140015664:	mov    eax,DWORD PTR [rsp+0x60]
   140015668:	mov    DWORD PTR [rsp+0x50],eax
   14001566c:	lea    rcx,[rsp+0x38]
   140015671:	call   0x140016a10
   140015676:	mov    eax,DWORD PTR [rsp+0x50]
   14001567a:	add    rsp,0x78
   14001567e:	ret    
   14001567f:	int3   
   140015680:	mov    QWORD PTR [rsp+0x20],r9
   140015685:	mov    QWORD PTR [rsp+0x18],r8
   14001568a:	mov    QWORD PTR [rsp+0x10],rdx
   14001568f:	mov    QWORD PTR [rsp+0x8],rcx
   140015694:	sub    rsp,0x88
   14001569b:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   1400156a4:	call   0x140016a00
   1400156a9:	mov    DWORD PTR [rsp+0x48],eax
   1400156ad:	lea    rcx,[rsp+0x60]
   1400156b2:	call   0x140015790
   1400156b7:	nop
   1400156b8:	cmp    QWORD PTR [rsp+0xa0],0x0
   1400156c1:	je     0x1400156ce
   1400156c3:	cmp    QWORD PTR [rsp+0xa8],0x0
   1400156cc:	jne    0x1400156e6
   1400156ce:	mov    DWORD PTR [rsp+0x68],0x80070057
   1400156d6:	lea    rcx,[rsp+0x60]
   1400156db:	call   0x140016a10
   1400156e0:	mov    eax,DWORD PTR [rsp+0x68]
   1400156e4:	jmp    0x14001574d
   1400156e6:	mov    edx,0x400
   1400156eb:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400156f3:	call   0x140015bd0
   1400156f8:	mov    QWORD PTR [rsp+0x30],rax
   1400156fd:	mov    edx,0x400
   140015702:	mov    rcx,QWORD PTR [rsp+0xa8]
   14001570a:	call   0x140015bd0
   14001570f:	mov    QWORD PTR [rsp+0x50],rax
   140015714:	mov    DWORD PTR [rsp+0x20],0x1
   14001571c:	mov    r9,QWORD PTR [rsp+0x50]
   140015721:	mov    r8,QWORD PTR [rsp+0x30]
   140015726:	mov    rdx,QWORD PTR [rsp+0x98]
   14001572e:	mov    rcx,QWORD PTR [rsp+0x90]
   140015736:	call   0x140018a10
   14001573b:	mov    DWORD PTR [rsp+0x6c],eax
   14001573f:	lea    rcx,[rsp+0x60]
   140015744:	call   0x140016a10
   140015749:	mov    eax,DWORD PTR [rsp+0x6c]
   14001574d:	add    rsp,0x88
   140015754:	ret    
   140015755:	int3   
   140015756:	int3   
   140015757:	int3   
   140015758:	int3   
   140015759:	int3   
   14001575a:	int3   
   14001575b:	int3   
   14001575c:	int3   
   14001575d:	int3   
   14001575e:	int3   
   14001575f:	int3   
   140015760:	mov    QWORD PTR [rsp+0x10],rdx
   140015765:	mov    QWORD PTR [rsp+0x8],rcx
   14001576a:	mov    rcx,QWORD PTR [rsp+0x8]
   14001576f:	mov    rax,QWORD PTR [rsp+0x10]
   140015774:	mov    QWORD PTR [rcx+0x8],rax
   140015778:	mov    rax,QWORD PTR [rsp+0x8]
   14001577d:	mov    QWORD PTR [rax],0x0
   140015784:	mov    rax,QWORD PTR [rsp+0x8]
   140015789:	ret    
   14001578a:	int3   
   14001578b:	int3   
   14001578c:	int3   
   14001578d:	int3   
   14001578e:	int3   
   14001578f:	int3   
   140015790:	mov    QWORD PTR [rsp+0x8],rcx
   140015795:	mov    rax,QWORD PTR [rsp+0x8]
   14001579a:	mov    QWORD PTR [rax],0x0
   1400157a1:	mov    rax,QWORD PTR [rsp+0x8]
   1400157a6:	ret    
   1400157a7:	int3   
   1400157a8:	int3   
   1400157a9:	int3   
   1400157aa:	int3   
   1400157ab:	int3   
   1400157ac:	int3   
   1400157ad:	int3   
   1400157ae:	int3   
   1400157af:	int3   
   1400157b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400157b5:	mov    QWORD PTR [rsp+0x8],rcx
   1400157ba:	sub    rsp,0x28
   1400157be:	cmp    QWORD PTR [rsp+0x38],0x400
   1400157c7:	jbe    0x1400157da
   1400157c9:	mov    rdx,QWORD PTR [rsp+0x38]
   1400157ce:	mov    rcx,QWORD PTR [rsp+0x30]
   1400157d3:	call   0x140016b20
   1400157d8:	jmp    0x1400157eb
   1400157da:	mov    rcx,QWORD PTR [rsp+0x30]
   1400157df:	add    rcx,0x8
   1400157e3:	mov    rax,QWORD PTR [rsp+0x30]
   1400157e8:	mov    QWORD PTR [rax],rcx
   1400157eb:	mov    rax,QWORD PTR [rsp+0x30]
   1400157f0:	mov    rax,QWORD PTR [rax]
   1400157f3:	add    rsp,0x28
   1400157f7:	ret    
   1400157f8:	int3   
   1400157f9:	int3   
   1400157fa:	int3   
   1400157fb:	int3   
   1400157fc:	int3   
   1400157fd:	int3   
   1400157fe:	int3   
   1400157ff:	int3   
   140015800:	mov    QWORD PTR [rsp+0x10],rdx
   140015805:	mov    QWORD PTR [rsp+0x8],rcx
   14001580a:	sub    rsp,0x28
   14001580e:	mov    edx,0x2
   140015813:	mov    rcx,QWORD PTR [rsp+0x38]
   140015818:	call   0x140016c20
   14001581d:	mov    rdx,rax
   140015820:	mov    rcx,QWORD PTR [rsp+0x30]
   140015825:	call   0x1400157b0
   14001582a:	add    rsp,0x28
   14001582e:	ret    
   14001582f:	int3   
   140015830:	sub    rsp,0x38
   140015834:	call   QWORD PTR [rip+0x2488e]        # 0x14003a0c8
   14001583a:	mov    DWORD PTR [rsp+0x20],eax
   14001583e:	mov    ecx,DWORD PTR [rsp+0x20]
   140015842:	call   0x140017980
   140015847:	add    rsp,0x38
   14001584b:	ret    
   14001584c:	int3   
   14001584d:	int3   
   14001584e:	int3   
   14001584f:	int3   
   140015850:	mov    DWORD PTR [rsp+0x10],edx
   140015854:	mov    DWORD PTR [rsp+0x8],ecx
   140015858:	sub    rsp,0x38
   14001585c:	mov    DWORD PTR [rsp+0x20],0x0
   140015864:	mov    r8d,DWORD PTR [rsp+0x48]
   140015869:	mov    edx,DWORD PTR [rsp+0x40]
   14001586d:	lea    rcx,[rsp+0x20]
   140015872:	call   0x140015c80
   140015877:	mov    DWORD PTR [rsp+0x24],eax
   14001587b:	cmp    DWORD PTR [rsp+0x24],0x0
   140015880:	jge    0x140015886
   140015882:	xor    eax,eax
   140015884:	jmp    0x140015890
   140015886:	mov    ecx,DWORD PTR [rsp+0x20]
   14001588a:	call   QWORD PTR [rip+0x24b88]        # 0x14003a418
   140015890:	add    rsp,0x38
   140015894:	ret    
   140015895:	int3   
   140015896:	int3   
   140015897:	int3   
   140015898:	int3   
   140015899:	int3   
   14001589a:	int3   
   14001589b:	int3   
   14001589c:	int3   
   14001589d:	int3   
   14001589e:	int3   
   14001589f:	int3   
   1400158a0:	mov    DWORD PTR [rsp+0x10],edx
   1400158a4:	mov    QWORD PTR [rsp+0x8],rcx
   1400158a9:	sub    rsp,0x28
   1400158ad:	cmp    DWORD PTR [rsp+0x38],0x64
   1400158b2:	jge    0x1400158bc
   1400158b4:	mov    DWORD PTR [rsp+0x38],0x3e8
   1400158bc:	mov    rax,QWORD PTR [rsp+0x30]
   1400158c1:	mov    DWORD PTR [rax],0x0
   1400158c7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400158cc:	mov    eax,DWORD PTR [rsp+0x38]
   1400158d0:	mov    DWORD PTR [rcx+0x4],eax
   1400158d3:	mov    edx,0x2
   1400158d8:	mov    rax,QWORD PTR [rsp+0x30]
   1400158dd:	mov    ecx,DWORD PTR [rax+0x4]
   1400158e0:	call   0x140015850
   1400158e5:	mov    r11,rax
   1400158e8:	mov    rax,QWORD PTR [rsp+0x30]
   1400158ed:	mov    QWORD PTR [rax+0x8],r11
   1400158f1:	mov    rax,QWORD PTR [rsp+0x30]
   1400158f6:	cmp    QWORD PTR [rax+0x8],0x0
   1400158fb:	je     0x14001590b
   1400158fd:	mov    rcx,QWORD PTR [rsp+0x30]
   140015902:	mov    rcx,QWORD PTR [rcx+0x8]
   140015906:	xor    eax,eax
   140015908:	mov    WORD PTR [rcx],ax
   14001590b:	mov    rax,QWORD PTR [rsp+0x30]
   140015910:	add    rsp,0x28
   140015914:	ret    
   140015915:	int3   
   140015916:	int3   
   140015917:	int3   
   140015918:	int3   
   140015919:	int3   
   14001591a:	int3   
   14001591b:	int3   
   14001591c:	int3   
   14001591d:	int3   
   14001591e:	int3   
   14001591f:	int3   
   140015920:	mov    QWORD PTR [rsp+0x8],rcx
   140015925:	sub    rsp,0x28
   140015929:	mov    rcx,QWORD PTR [rsp+0x30]
   14001592e:	mov    rcx,QWORD PTR [rcx+0x8]
   140015932:	call   QWORD PTR [rip+0x24b08]        # 0x14003a440
   140015938:	add    rsp,0x28
   14001593c:	ret    
   14001593d:	int3   
   14001593e:	int3   
   14001593f:	int3   
   140015940:	mov    QWORD PTR [rsp+0x8],rcx
   140015945:	cmp    QWORD PTR [rsp+0x8],0x0
   14001594b:	jne    0x140015954
   14001594d:	mov    eax,0x80004003
   140015952:	jmp    0x140015964
   140015954:	mov    rcx,QWORD PTR [rsp+0x8]
   140015959:	movzx  eax,BYTE PTR [rip+0x3714d]        # 0x14004caad
   140015960:	mov    BYTE PTR [rcx],al
   140015962:	xor    eax,eax
   140015964:	repz ret 
   140015966:	int3   
   140015967:	int3   
   140015968:	int3   
   140015969:	int3   
   14001596a:	int3   
   14001596b:	int3   
   14001596c:	int3   
   14001596d:	int3   
   14001596e:	int3   
   14001596f:	int3   
   140015970:	mov    QWORD PTR [rsp+0x10],rdx
   140015975:	mov    QWORD PTR [rsp+0x8],rcx
   14001597a:	sub    rsp,0x28
   14001597e:	mov    rdx,QWORD PTR [rsp+0x38]
   140015983:	mov    rcx,QWORD PTR [rsp+0x30]
   140015988:	call   0x14001d724
   14001598d:	add    rsp,0x28
   140015991:	ret    
   140015992:	int3   
   140015993:	int3   
   140015994:	int3   
   140015995:	int3   
   140015996:	int3   
   140015997:	int3   
   140015998:	int3   
   140015999:	int3   
   14001599a:	int3   
   14001599b:	int3   
   14001599c:	int3   
   14001599d:	int3   
   14001599e:	int3   
   14001599f:	int3   
   1400159a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400159a5:	sub    rsp,0x28
   1400159a9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400159ae:	call   QWORD PTR [rip+0x2470c]        # 0x14003a0c0
   1400159b4:	xor    eax,eax
   1400159b6:	add    rsp,0x28
   1400159ba:	ret    
   1400159bb:	int3   
   1400159bc:	int3   
   1400159bd:	int3   
   1400159be:	int3   
   1400159bf:	int3   
   1400159c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400159c5:	sub    rsp,0x28
   1400159c9:	xor    eax,eax
   1400159cb:	test   eax,eax
   1400159cd:	jne    0x1400159c9
   1400159cf:	xor    eax,eax
   1400159d1:	test   eax,eax
   1400159d3:	jne    0x1400159c9
   1400159d5:	mov    rcx,QWORD PTR [rsp+0x30]
   1400159da:	call   0x1400159a0
   1400159df:	add    rsp,0x28
   1400159e3:	ret    
   1400159e4:	int3   
   1400159e5:	int3   
   1400159e6:	int3   
   1400159e7:	int3   
   1400159e8:	int3   
   1400159e9:	int3   
   1400159ea:	int3   
   1400159eb:	int3   
   1400159ec:	int3   
   1400159ed:	int3   
   1400159ee:	int3   
   1400159ef:	int3   
   1400159f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400159f5:	mov    QWORD PTR [rsp+0x8],rcx
   1400159fa:	sub    rsp,0x28
   1400159fe:	mov    rdx,QWORD PTR [rsp+0x38]
   140015a03:	mov    rcx,QWORD PTR [rsp+0x30]
   140015a08:	call   QWORD PTR [rip+0x2469a]        # 0x14003a0a8
   140015a0e:	test   eax,eax
   140015a10:	jne    0x140015a16
   140015a12:	mov    al,0x1
   140015a14:	jmp    0x140015a18
   140015a16:	xor    al,al
   140015a18:	add    rsp,0x28
   140015a1c:	ret    
   140015a1d:	int3   
   140015a1e:	int3   
   140015a1f:	int3   
   140015a20:	mov    QWORD PTR [rsp+0x10],rdx
   140015a25:	mov    QWORD PTR [rsp+0x8],rcx
   140015a2a:	sub    rsp,0x38
   140015a2e:	mov    DWORD PTR [rsp+0x20],0x0
   140015a36:	jmp    0x140015a43
   140015a38:	mov    eax,DWORD PTR [rsp+0x20]
   140015a3c:	add    eax,0x1
   140015a3f:	mov    DWORD PTR [rsp+0x20],eax
   140015a43:	mov    rax,QWORD PTR [rsp+0x40]
   140015a48:	mov    eax,DWORD PTR [rax+0x10]
   140015a4b:	cmp    DWORD PTR [rsp+0x20],eax
   140015a4f:	jge    0x140015a7e
   140015a51:	movsxd rax,DWORD PTR [rsp+0x20]
   140015a56:	mov    rcx,QWORD PTR [rsp+0x40]
   140015a5b:	mov    rcx,QWORD PTR [rcx]
   140015a5e:	mov    rdx,QWORD PTR [rsp+0x48]
   140015a63:	mov    rdx,QWORD PTR [rdx]
   140015a66:	mov    rcx,QWORD PTR [rcx+rax*8]
   140015a6a:	call   0x1400159f0
   140015a6f:	movzx  eax,al
   140015a72:	test   eax,eax
   140015a74:	je     0x140015a7c
   140015a76:	mov    eax,DWORD PTR [rsp+0x20]
   140015a7a:	jmp    0x140015a83
   140015a7c:	jmp    0x140015a38
   140015a7e:	mov    eax,0xffffffff
   140015a83:	add    rsp,0x38
   140015a87:	ret    
   140015a88:	int3   
   140015a89:	int3   
   140015a8a:	int3   
   140015a8b:	int3   
   140015a8c:	int3   
   140015a8d:	int3   
   140015a8e:	int3   
   140015a8f:	int3   
   140015a90:	mov    DWORD PTR [rsp+0x10],edx
   140015a94:	mov    DWORD PTR [rsp+0x8],ecx
   140015a98:	sub    rsp,0x28
   140015a9c:	xor    r9d,r9d
   140015a9f:	xor    r8d,r8d
   140015aa2:	mov    edx,DWORD PTR [rsp+0x38]
   140015aa6:	mov    ecx,DWORD PTR [rsp+0x30]
   140015aaa:	call   QWORD PTR [rip+0x24608]        # 0x14003a0b8
   140015ab0:	add    rsp,0x28
   140015ab4:	ret    
   140015ab5:	int3   
   140015ab6:	int3   
   140015ab7:	int3   
   140015ab8:	int3   
   140015ab9:	int3   
   140015aba:	int3   
   140015abb:	int3   
   140015abc:	int3   
   140015abd:	int3   
   140015abe:	int3   
   140015abf:	int3   
   140015ac0:	mov    DWORD PTR [rsp+0x10],edx
   140015ac4:	mov    QWORD PTR [rsp+0x8],rcx
   140015ac9:	sub    rsp,0x28
   140015acd:	cmp    DWORD PTR [rsp+0x38],0x0
   140015ad2:	jl     0x140015ae2
   140015ad4:	mov    rax,QWORD PTR [rsp+0x30]
   140015ad9:	mov    eax,DWORD PTR [rax+0x10]
   140015adc:	cmp    DWORD PTR [rsp+0x38],eax
   140015ae0:	jl     0x140015af1
   140015ae2:	mov    edx,0x1
   140015ae7:	mov    ecx,0xc000008c
   140015aec:	call   0x140015a90
   140015af1:	movsxd rcx,DWORD PTR [rsp+0x38]
   140015af6:	mov    rax,QWORD PTR [rsp+0x30]
   140015afb:	mov    rax,QWORD PTR [rax+0x8]
   140015aff:	lea    rax,[rax+rcx*8]
   140015b03:	add    rsp,0x28
   140015b07:	ret    
   140015b08:	int3   
   140015b09:	int3   
   140015b0a:	int3   
   140015b0b:	int3   
   140015b0c:	int3   
   140015b0d:	int3   
   140015b0e:	int3   
   140015b0f:	int3   
   140015b10:	mov    QWORD PTR [rsp+0x10],rdx
   140015b15:	mov    QWORD PTR [rsp+0x8],rcx
   140015b1a:	sub    rsp,0x38
   140015b1e:	mov    rdx,QWORD PTR [rsp+0x48]
   140015b23:	mov    rcx,QWORD PTR [rsp+0x40]
   140015b28:	call   0x140015a20
   140015b2d:	mov    DWORD PTR [rsp+0x20],eax
   140015b31:	cmp    DWORD PTR [rsp+0x20],0xffffffff
   140015b36:	jne    0x140015b3c
   140015b38:	xor    eax,eax
   140015b3a:	jmp    0x140015b4d
   140015b3c:	mov    edx,DWORD PTR [rsp+0x20]
   140015b40:	mov    rcx,QWORD PTR [rsp+0x40]
   140015b45:	call   0x140015ac0
   140015b4a:	mov    rax,QWORD PTR [rax]
   140015b4d:	add    rsp,0x38
   140015b51:	ret    
   140015b52:	int3   
   140015b53:	int3   
   140015b54:	int3   
   140015b55:	int3   
   140015b56:	int3   
   140015b57:	int3   
   140015b58:	int3   
   140015b59:	int3   
   140015b5a:	int3   
   140015b5b:	int3   
   140015b5c:	int3   
   140015b5d:	int3   
   140015b5e:	int3   
   140015b5f:	int3   
   140015b60:	mov    QWORD PTR [rsp+0x8],rcx
   140015b65:	sub    rsp,0x28
   140015b69:	mov    rcx,QWORD PTR [rsp+0x30]
   140015b6e:	call   QWORD PTR [rip+0x2453c]        # 0x14003a0b0
   140015b74:	xor    eax,eax
   140015b76:	add    rsp,0x28
   140015b7a:	ret    
   140015b7b:	int3   
   140015b7c:	int3   
   140015b7d:	int3   
   140015b7e:	int3   
   140015b7f:	int3   
   140015b80:	mov    QWORD PTR [rsp+0x10],rdx
   140015b85:	mov    QWORD PTR [rsp+0x8],rcx
   140015b8a:	sub    rsp,0x38
   140015b8e:	mov    rcx,QWORD PTR [rsp+0x40]
   140015b93:	add    rcx,0x20
   140015b97:	call   0x1400159c0
   140015b9c:	mov    rcx,QWORD PTR [rsp+0x40]
   140015ba1:	add    rcx,0x8
   140015ba5:	lea    rdx,[rsp+0x48]
   140015baa:	call   0x140015b10
   140015baf:	mov    QWORD PTR [rsp+0x20],rax
   140015bb4:	mov    rcx,QWORD PTR [rsp+0x40]
   140015bb9:	add    rcx,0x20
   140015bbd:	call   0x140015b60
   140015bc2:	mov    rax,QWORD PTR [rsp+0x20]
   140015bc7:	add    rsp,0x38
   140015bcb:	ret    
   140015bcc:	int3   
   140015bcd:	int3   
   140015bce:	int3   
   140015bcf:	int3   
   140015bd0:	mov    DWORD PTR [rsp+0x10],edx
   140015bd4:	mov    QWORD PTR [rsp+0x8],rcx
   140015bd9:	mov    rax,QWORD PTR [rsp+0x8]
   140015bde:	ret    
   140015bdf:	int3   
   140015be0:	mov    QWORD PTR [rsp+0x10],rdx
   140015be5:	mov    QWORD PTR [rsp+0x8],rcx
   140015bea:	sub    rsp,0x68
   140015bee:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140015bf7:	cmp    QWORD PTR [rsp+0x78],0x0
   140015bfd:	jne    0x140015c03
   140015bff:	xor    eax,eax
   140015c01:	jmp    0x140015c7a
   140015c03:	call   0x140016a00
   140015c08:	mov    DWORD PTR [rsp+0x30],eax
   140015c0c:	lea    rcx,[rsp+0x38]
   140015c11:	call   0x140015790
   140015c16:	nop
   140015c17:	mov    edx,0x400
   140015c1c:	mov    rcx,QWORD PTR [rsp+0x78]
   140015c21:	call   0x140015bd0
   140015c26:	mov    QWORD PTR [rsp+0x40],rax
   140015c2b:	cmp    QWORD PTR [rsp+0x40],0x0
   140015c31:	jne    0x140015c4b
   140015c33:	mov    DWORD PTR [rsp+0x48],0x0
   140015c3b:	lea    rcx,[rsp+0x38]
   140015c40:	call   0x140016a10
   140015c45:	mov    eax,DWORD PTR [rsp+0x48]
   140015c49:	jmp    0x140015c7a
   140015c4b:	mov    rcx,QWORD PTR [rsp+0x40]
   140015c50:	call   QWORD PTR [rip+0x2444a]        # 0x14003a0a0
   140015c56:	mov    r8d,eax
   140015c59:	mov    rdx,QWORD PTR [rsp+0x40]
   140015c5e:	mov    rcx,QWORD PTR [rsp+0x70]
   140015c63:	call   0x140015d60
   140015c68:	mov    DWORD PTR [rsp+0x4c],eax
   140015c6c:	lea    rcx,[rsp+0x38]
   140015c71:	call   0x140016a10
   140015c76:	mov    eax,DWORD PTR [rsp+0x4c]
   140015c7a:	add    rsp,0x68
   140015c7e:	ret    
   140015c7f:	int3   
   140015c80:	mov    DWORD PTR [rsp+0x18],r8d
   140015c85:	mov    DWORD PTR [rsp+0x10],edx
   140015c89:	mov    QWORD PTR [rsp+0x8],rcx
   140015c8e:	sub    rsp,0x18
   140015c92:	mov    eax,DWORD PTR [rsp+0x28]
   140015c96:	mov    ecx,DWORD PTR [rsp+0x30]
   140015c9a:	imul   rax,rcx
   140015c9e:	mov    QWORD PTR [rsp],rax
   140015ca2:	mov    eax,0xffffffff
   140015ca7:	cmp    QWORD PTR [rsp],rax
   140015cab:	jbe    0x140015cb4
   140015cad:	mov    eax,0x80070057
   140015cb2:	jmp    0x140015cc0
   140015cb4:	mov    rcx,QWORD PTR [rsp+0x20]
   140015cb9:	mov    eax,DWORD PTR [rsp]
   140015cbc:	mov    DWORD PTR [rcx],eax
   140015cbe:	xor    eax,eax
   140015cc0:	add    rsp,0x18
   140015cc4:	ret    
   140015cc5:	int3   
   140015cc6:	int3   
   140015cc7:	int3   
   140015cc8:	int3   
   140015cc9:	int3   
   140015cca:	int3   
   140015ccb:	int3   
   140015ccc:	int3   
   140015ccd:	int3   
   140015cce:	int3   
   140015ccf:	int3   
   140015cd0:	mov    DWORD PTR [rsp+0x18],r8d
   140015cd5:	mov    DWORD PTR [rsp+0x10],edx
   140015cd9:	mov    QWORD PTR [rsp+0x8],rcx
   140015cde:	sub    rsp,0x38
   140015ce2:	mov    DWORD PTR [rsp+0x20],0x0
   140015cea:	mov    r8d,DWORD PTR [rsp+0x50]
   140015cef:	mov    edx,DWORD PTR [rsp+0x48]
   140015cf3:	lea    rcx,[rsp+0x20]
   140015cf8:	call   0x140015c80
   140015cfd:	mov    DWORD PTR [rsp+0x24],eax
   140015d01:	cmp    DWORD PTR [rsp+0x24],0x0
   140015d06:	jge    0x140015d0c
   140015d08:	xor    eax,eax
   140015d0a:	jmp    0x140015d1b
   140015d0c:	mov    edx,DWORD PTR [rsp+0x20]
   140015d10:	mov    rcx,QWORD PTR [rsp+0x40]
   140015d15:	call   QWORD PTR [rip+0x2471d]        # 0x14003a438
   140015d1b:	add    rsp,0x38
   140015d1f:	ret    
   140015d20:	mov    QWORD PTR [rsp+0x20],r9
   140015d25:	mov    QWORD PTR [rsp+0x18],r8
   140015d2a:	mov    QWORD PTR [rsp+0x10],rdx
   140015d2f:	mov    QWORD PTR [rsp+0x8],rcx
   140015d34:	sub    rsp,0x28
   140015d38:	mov    r9,QWORD PTR [rsp+0x48]
   140015d3d:	mov    r8,QWORD PTR [rsp+0x40]
   140015d42:	mov    rdx,QWORD PTR [rsp+0x38]
   140015d47:	mov    rcx,QWORD PTR [rsp+0x30]
   140015d4c:	call   0x14001c53c
   140015d51:	mov    ecx,eax
   140015d53:	call   0x140017340
   140015d58:	add    rsp,0x28
   140015d5c:	ret    
   140015d5d:	int3   
   140015d5e:	int3   
   140015d5f:	int3   
   140015d60:	mov    DWORD PTR [rsp+0x18],r8d
   140015d65:	mov    QWORD PTR [rsp+0x10],rdx
   140015d6a:	mov    QWORD PTR [rsp+0x8],rcx
   140015d6f:	sub    rsp,0x38
   140015d73:	mov    rax,QWORD PTR [rsp+0x40]
   140015d78:	mov    ecx,DWORD PTR [rax]
   140015d7a:	mov    eax,DWORD PTR [rsp+0x50]
   140015d7e:	lea    eax,[rcx+rax*1+0x1]
   140015d82:	mov    DWORD PTR [rsp+0x20],eax
   140015d86:	mov    rax,QWORD PTR [rsp+0x40]
   140015d8b:	mov    eax,DWORD PTR [rax]
   140015d8d:	cmp    DWORD PTR [rsp+0x20],eax
   140015d91:	jle    0x140015d9d
   140015d93:	mov    eax,DWORD PTR [rsp+0x50]
   140015d97:	cmp    DWORD PTR [rsp+0x20],eax
   140015d9b:	jg     0x140015da4
   140015d9d:	xor    eax,eax
   140015d9f:	jmp    0x140015ed1
   140015da4:	mov    rax,QWORD PTR [rsp+0x40]
   140015da9:	mov    eax,DWORD PTR [rax+0x4]
   140015dac:	cmp    DWORD PTR [rsp+0x20],eax
   140015db0:	jl     0x140015e27
   140015db2:	mov    rax,QWORD PTR [rsp+0x40]
   140015db7:	mov    eax,DWORD PTR [rax+0x4]
   140015dba:	cmp    DWORD PTR [rsp+0x20],eax
   140015dbe:	jl     0x140015de9
   140015dc0:	mov    rax,QWORD PTR [rsp+0x40]
   140015dc5:	cmp    DWORD PTR [rax+0x4],0x3fffffff
   140015dcc:	jle    0x140015dd5
   140015dce:	xor    eax,eax
   140015dd0:	jmp    0x140015ed1
   140015dd5:	mov    rax,QWORD PTR [rsp+0x40]
   140015dda:	mov    ecx,DWORD PTR [rax+0x4]
   140015ddd:	shl    ecx,1
   140015ddf:	mov    rax,QWORD PTR [rsp+0x40]
   140015de4:	mov    DWORD PTR [rax+0x4],ecx
   140015de7:	jmp    0x140015db2
   140015de9:	mov    r8d,0x2
   140015def:	mov    rax,QWORD PTR [rsp+0x40]
   140015df4:	mov    edx,DWORD PTR [rax+0x4]
   140015df7:	mov    rcx,QWORD PTR [rsp+0x40]
   140015dfc:	mov    rcx,QWORD PTR [rcx+0x8]
   140015e00:	call   0x140015cd0
   140015e05:	mov    QWORD PTR [rsp+0x28],rax
   140015e0a:	cmp    QWORD PTR [rsp+0x28],0x0
   140015e10:	jne    0x140015e19
   140015e12:	xor    eax,eax
   140015e14:	jmp    0x140015ed1
   140015e19:	mov    rcx,QWORD PTR [rsp+0x40]
   140015e1e:	mov    rax,QWORD PTR [rsp+0x28]
   140015e23:	mov    QWORD PTR [rcx+0x8],rax
   140015e27:	mov    rax,QWORD PTR [rsp+0x40]
   140015e2c:	cmp    DWORD PTR [rax],0x0
   140015e2f:	jl     0x140015e5d
   140015e31:	mov    rcx,QWORD PTR [rsp+0x40]
   140015e36:	mov    rax,QWORD PTR [rsp+0x40]
   140015e3b:	mov    eax,DWORD PTR [rax+0x4]
   140015e3e:	cmp    DWORD PTR [rcx],eax
   140015e40:	jge    0x140015e5d
   140015e42:	mov    rcx,QWORD PTR [rsp+0x40]
   140015e47:	mov    rax,QWORD PTR [rsp+0x40]
   140015e4c:	mov    eax,DWORD PTR [rax]
   140015e4e:	mov    ecx,DWORD PTR [rcx+0x4]
   140015e51:	sub    ecx,eax
   140015e53:	mov    rax,QWORD PTR [rsp+0x40]
   140015e58:	cmp    ecx,DWORD PTR [rax+0x4]
   140015e5b:	jle    0x140015e61
   140015e5d:	xor    eax,eax
   140015e5f:	jmp    0x140015ed1
   140015e61:	movsxd rax,DWORD PTR [rsp+0x50]
   140015e66:	shl    rax,1
   140015e69:	movsxd r9,eax
   140015e6c:	mov    rdx,QWORD PTR [rsp+0x40]
   140015e71:	mov    rax,QWORD PTR [rsp+0x40]
   140015e76:	mov    ecx,DWORD PTR [rax]
   140015e78:	mov    eax,DWORD PTR [rdx+0x4]
   140015e7b:	sub    eax,ecx
   140015e7d:	movsxd rdx,eax
   140015e80:	shl    rdx,1
   140015e83:	mov    rax,QWORD PTR [rsp+0x40]
   140015e88:	movsxd rcx,DWORD PTR [rax]
   140015e8b:	mov    rax,QWORD PTR [rsp+0x40]
   140015e90:	mov    rax,QWORD PTR [rax+0x8]
   140015e94:	lea    rcx,[rax+rcx*2]
   140015e98:	mov    r8,QWORD PTR [rsp+0x48]
   140015e9d:	call   0x140015d20
   140015ea2:	mov    r11,QWORD PTR [rsp+0x40]
   140015ea7:	mov    ecx,DWORD PTR [r11]
   140015eaa:	add    ecx,DWORD PTR [rsp+0x50]
   140015eae:	mov    rax,QWORD PTR [rsp+0x40]
   140015eb3:	mov    DWORD PTR [rax],ecx
   140015eb5:	mov    rax,QWORD PTR [rsp+0x40]
   140015eba:	movsxd rdx,DWORD PTR [rax]
   140015ebd:	mov    rcx,QWORD PTR [rsp+0x40]
   140015ec2:	mov    rcx,QWORD PTR [rcx+0x8]
   140015ec6:	xor    eax,eax
   140015ec8:	mov    WORD PTR [rcx+rdx*2],ax
   140015ecc:	mov    eax,0x1
   140015ed1:	add    rsp,0x38
   140015ed5:	ret    
   140015ed6:	int3   
   140015ed7:	int3   
   140015ed8:	int3   
   140015ed9:	int3   
   140015eda:	int3   
   140015edb:	int3   
   140015edc:	int3   
   140015edd:	int3   
   140015ede:	int3   
   140015edf:	int3   
   140015ee0:	mov    QWORD PTR [rsp+0x10],rdx
   140015ee5:	mov    QWORD PTR [rsp+0x8],rcx
   140015eea:	sub    rsp,0x38
   140015eee:	mov    DWORD PTR [rsp+0x20],0x1
   140015ef6:	mov    r8d,DWORD PTR [rsp+0x20]
   140015efb:	mov    rdx,QWORD PTR [rsp+0x48]
   140015f00:	mov    rcx,QWORD PTR [rsp+0x40]
   140015f05:	call   0x140015d60
   140015f0a:	add    rsp,0x38
   140015f0e:	ret    
   140015f0f:	int3   
   140015f10:	mov    QWORD PTR [rsp+0x8],rcx
   140015f15:	sub    rsp,0x18
   140015f19:	mov    rax,QWORD PTR [rsp+0x20]
   140015f1e:	mov    rax,QWORD PTR [rax+0x8]
   140015f22:	mov    QWORD PTR [rsp],rax
   140015f26:	mov    rax,QWORD PTR [rsp+0x20]
   140015f2b:	mov    QWORD PTR [rax+0x8],0x0
   140015f33:	mov    rax,QWORD PTR [rsp+0x20]
   140015f38:	mov    DWORD PTR [rax],0x0
   140015f3e:	mov    rax,QWORD PTR [rsp+0x20]
   140015f43:	mov    DWORD PTR [rax+0x4],0x0
   140015f4a:	mov    rax,QWORD PTR [rsp]
   140015f4e:	add    rsp,0x18
   140015f52:	ret    
   140015f53:	int3   
   140015f54:	int3   
   140015f55:	int3   
   140015f56:	int3   
   140015f57:	int3   
   140015f58:	int3   
   140015f59:	int3   
   140015f5a:	int3   
   140015f5b:	int3   
   140015f5c:	int3   
   140015f5d:	int3   
   140015f5e:	int3   
   140015f5f:	int3   
   140015f60:	mov    QWORD PTR [rsp+0x18],r8
   140015f65:	mov    QWORD PTR [rsp+0x10],rdx
   140015f6a:	mov    QWORD PTR [rsp+0x8],rcx
   140015f6f:	sub    rsp,0xf8
   140015f76:	mov    QWORD PTR [rsp+0xd8],0xfffffffffffffffe
   140015f82:	mov    rax,QWORD PTR [rip+0x334d7]        # 0x140049460
   140015f89:	xor    rax,rsp
   140015f8c:	mov    QWORD PTR [rsp+0xe0],rax
   140015f94:	cmp    QWORD PTR [rsp+0x108],0x0
   140015f9d:	je     0x140015faa
   140015f9f:	cmp    QWORD PTR [rsp+0x110],0x0
   140015fa8:	jne    0x140015fb4
   140015faa:	mov    eax,0x80004003
   140015faf:	jmp    0x1400164e9
   140015fb4:	mov    rax,QWORD PTR [rsp+0x110]
   140015fbc:	mov    QWORD PTR [rax],0x0
   140015fc3:	mov    rcx,QWORD PTR [rsp+0x108]
   140015fcb:	call   QWORD PTR [rip+0x240cf]        # 0x14003a0a0
   140015fd1:	shl    eax,1
   140015fd3:	mov    DWORD PTR [rsp+0x24],eax
   140015fd7:	mov    edx,DWORD PTR [rsp+0x24]
   140015fdb:	lea    rcx,[rsp+0x30]
   140015fe0:	call   0x1400158a0
   140015fe5:	nop
   140015fe6:	cmp    QWORD PTR [rsp+0x38],0x0
   140015fec:	jne    0x14001600f
   140015fee:	mov    DWORD PTR [rsp+0xcc],0x8007000e
   140015ff9:	lea    rcx,[rsp+0x30]
   140015ffe:	call   0x140015920
   140016003:	mov    eax,DWORD PTR [rsp+0xcc]
   14001600a:	jmp    0x1400164e9
   14001600f:	mov    rcx,QWORD PTR [rsp+0x100]
   140016017:	mov    rax,QWORD PTR [rsp+0x108]
   14001601f:	mov    QWORD PTR [rcx],rax
   140016022:	mov    DWORD PTR [rsp+0x44],0x0
   14001602a:	mov    BYTE PTR [rsp+0x48],0x0
   14001602f:	lea    rcx,[rsp+0x48]
   140016034:	call   0x140015940
   140016039:	mov    DWORD PTR [rsp+0x44],eax
   14001603d:	cmp    DWORD PTR [rsp+0x44],0x0
   140016042:	jge    0x140016065
   140016044:	mov    eax,DWORD PTR [rsp+0x44]
   140016048:	mov    DWORD PTR [rsp+0xd0],eax
   14001604f:	lea    rcx,[rsp+0x30]
   140016054:	call   0x140015920
   140016059:	mov    eax,DWORD PTR [rsp+0xd0]
   140016060:	jmp    0x1400164e9
   140016065:	mov    DWORD PTR [rsp+0x20],0x0
   14001606d:	mov    BYTE PTR [rsp+0x40],0x0
   140016072:	mov    BYTE PTR [rsp+0x28],0x0
   140016077:	mov    rax,QWORD PTR [rsp+0x100]
   14001607f:	mov    rax,QWORD PTR [rax]
   140016082:	movzx  eax,WORD PTR [rax]
   140016085:	test   eax,eax
   140016087:	je     0x1400164ae
   14001608d:	movzx  eax,BYTE PTR [rsp+0x48]
   140016092:	cmp    eax,0x1
   140016095:	jne    0x1400162aa
   14001609b:	lea    rax,[rip+0x2994e]        # 0x14003f9f0
   1400160a2:	mov    QWORD PTR [rsp+0x58],rax
   1400160a7:	lea    rax,[rip+0x29982]        # 0x14003fa30
   1400160ae:	mov    QWORD PTR [rsp+0x50],rax
   1400160b3:	cmp    DWORD PTR [rsp+0x20],0x0
   1400160b8:	jne    0x1400161a6
   1400160be:	mov    QWORD PTR [rsp+0x60],0x0
   1400160c7:	lea    rdx,[rip+0x29742]        # 0x14003f810
   1400160ce:	mov    rcx,QWORD PTR [rsp+0x100]
   1400160d6:	mov    rcx,QWORD PTR [rcx]
   1400160d9:	call   0x140015970
   1400160de:	mov    QWORD PTR [rsp+0x60],rax
   1400160e3:	cmp    QWORD PTR [rsp+0x60],0x0
   1400160e9:	je     0x1400161a6
   1400160ef:	mov    rax,QWORD PTR [rsp+0x100]
   1400160f7:	mov    rax,QWORD PTR [rax]
   1400160fa:	cmp    QWORD PTR [rsp+0x60],rax
   1400160ff:	jne    0x1400161a6
   140016105:	mov    rcx,QWORD PTR [rsp+0x100]
   14001610d:	mov    rcx,QWORD PTR [rcx]
   140016110:	call   QWORD PTR [rip+0x242c2]        # 0x14003a3d8
   140016116:	mov    r11,rax
   140016119:	mov    rax,QWORD PTR [rsp+0x100]
   140016121:	mov    QWORD PTR [rax],r11
   140016124:	mov    rcx,QWORD PTR [rsp+0x100]
   14001612c:	mov    rcx,QWORD PTR [rcx]
   14001612f:	call   QWORD PTR [rip+0x242a3]        # 0x14003a3d8
   140016135:	mov    r11,rax
   140016138:	mov    rax,QWORD PTR [rsp+0x100]
   140016140:	mov    QWORD PTR [rax],r11
   140016143:	mov    rcx,QWORD PTR [rsp+0x100]
   14001614b:	mov    rcx,QWORD PTR [rcx]
   14001614e:	call   QWORD PTR [rip+0x24284]        # 0x14003a3d8
   140016154:	mov    r11,rax
   140016157:	mov    rax,QWORD PTR [rsp+0x100]
   14001615f:	mov    QWORD PTR [rax],r11
   140016162:	mov    rcx,QWORD PTR [rsp+0x100]
   14001616a:	mov    rcx,QWORD PTR [rcx]
   14001616d:	call   QWORD PTR [rip+0x24265]        # 0x14003a3d8
   140016173:	mov    r11,rax
   140016176:	mov    rax,QWORD PTR [rsp+0x100]
   14001617e:	mov    QWORD PTR [rax],r11
   140016181:	mov    rdx,QWORD PTR [rsp+0x58]
   140016186:	lea    rcx,[rsp+0x30]
   14001618b:	call   0x140015be0
   140016190:	test   eax,eax
   140016192:	jne    0x1400161a1
   140016194:	mov    DWORD PTR [rsp+0x44],0x8007000e
   14001619c:	jmp    0x1400164ae
   1400161a1:	mov    BYTE PTR [rsp+0x40],0x1
   1400161a6:	mov    rax,QWORD PTR [rsp+0x100]
   1400161ae:	mov    rax,QWORD PTR [rax]
   1400161b1:	movzx  eax,WORD PTR [rax]
   1400161b4:	cmp    eax,0x27
   1400161b7:	jne    0x140016226
   1400161b9:	movzx  eax,BYTE PTR [rsp+0x28]
   1400161be:	test   eax,eax
   1400161c0:	jne    0x1400161c9
   1400161c2:	mov    BYTE PTR [rsp+0x28],0x1
   1400161c7:	jmp    0x140016226
   1400161c9:	mov    rcx,QWORD PTR [rsp+0x100]
   1400161d1:	call   0x1400179e0
   1400161d6:	test   eax,eax
   1400161d8:	je     0x1400161e1
   1400161da:	mov    BYTE PTR [rsp+0x28],0x0
   1400161df:	jmp    0x140016226
   1400161e1:	mov    rcx,QWORD PTR [rsp+0x100]
   1400161e9:	mov    rcx,QWORD PTR [rcx]
   1400161ec:	call   QWORD PTR [rip+0x241e6]        # 0x14003a3d8
   1400161f2:	mov    r11,rax
   1400161f5:	mov    rax,QWORD PTR [rsp+0x100]
   1400161fd:	mov    QWORD PTR [rax],r11
   140016200:	mov    rdx,QWORD PTR [rsp+0x100]
   140016208:	mov    rdx,QWORD PTR [rdx]
   14001620b:	lea    rcx,[rsp+0x30]
   140016210:	call   0x140015ee0
   140016215:	test   eax,eax
   140016217:	jne    0x140016226
   140016219:	mov    DWORD PTR [rsp+0x44],0x8007000e
   140016221:	jmp    0x1400164ae
   140016226:	movzx  eax,BYTE PTR [rsp+0x28]
   14001622b:	test   eax,eax
   14001622d:	jne    0x14001624d
   14001622f:	mov    rax,QWORD PTR [rsp+0x100]
   140016237:	mov    rax,QWORD PTR [rax]
   14001623a:	movzx  eax,WORD PTR [rax]
   14001623d:	cmp    eax,0x7b
   140016240:	jne    0x14001624d
   140016242:	mov    eax,DWORD PTR [rsp+0x20]
   140016246:	add    eax,0x1
   140016249:	mov    DWORD PTR [rsp+0x20],eax
   14001624d:	movzx  eax,BYTE PTR [rsp+0x28]
   140016252:	test   eax,eax
   140016254:	jne    0x1400162aa
   140016256:	mov    rax,QWORD PTR [rsp+0x100]
   14001625e:	mov    rax,QWORD PTR [rax]
   140016261:	movzx  eax,WORD PTR [rax]
   140016264:	cmp    eax,0x7d
   140016267:	jne    0x1400162aa
   140016269:	mov    eax,DWORD PTR [rsp+0x20]
   14001626d:	sub    eax,0x1
   140016270:	mov    DWORD PTR [rsp+0x20],eax
   140016274:	cmp    DWORD PTR [rsp+0x20],0x0
   140016279:	jne    0x1400162aa
   14001627b:	movzx  eax,BYTE PTR [rsp+0x40]
   140016280:	cmp    eax,0x1
   140016283:	jne    0x1400162aa
   140016285:	mov    rdx,QWORD PTR [rsp+0x50]
   14001628a:	lea    rcx,[rsp+0x30]
   14001628f:	call   0x140015be0
   140016294:	test   eax,eax
   140016296:	jne    0x1400162a5
   140016298:	mov    DWORD PTR [rsp+0x44],0x8007000e
   1400162a0:	jmp    0x1400164ae
   1400162a5:	mov    BYTE PTR [rsp+0x40],0x0
   1400162aa:	mov    rax,QWORD PTR [rsp+0x100]
   1400162b2:	mov    rax,QWORD PTR [rax]
   1400162b5:	movzx  eax,WORD PTR [rax]
   1400162b8:	cmp    eax,0x25
   1400162bb:	jne    0x140016467
   1400162c1:	mov    rcx,QWORD PTR [rsp+0x100]
   1400162c9:	mov    rcx,QWORD PTR [rcx]
   1400162cc:	call   QWORD PTR [rip+0x24106]        # 0x14003a3d8
   1400162d2:	mov    r11,rax
   1400162d5:	mov    rax,QWORD PTR [rsp+0x100]
   1400162dd:	mov    QWORD PTR [rax],r11
   1400162e0:	mov    rax,QWORD PTR [rsp+0x100]
   1400162e8:	mov    rax,QWORD PTR [rax]
   1400162eb:	movzx  eax,WORD PTR [rax]
   1400162ee:	cmp    eax,0x25
   1400162f1:	jne    0x14001631e
   1400162f3:	mov    rdx,QWORD PTR [rsp+0x100]
   1400162fb:	mov    rdx,QWORD PTR [rdx]
   1400162fe:	lea    rcx,[rsp+0x30]
   140016303:	call   0x140015ee0
   140016308:	test   eax,eax
   14001630a:	jne    0x140016319
   14001630c:	mov    DWORD PTR [rsp+0x44],0x8007000e
   140016314:	jmp    0x1400164ae
   140016319:	jmp    0x140016465
   14001631e:	mov    dx,0x25
   140016322:	mov    rcx,QWORD PTR [rsp+0x100]
   14001632a:	mov    rcx,QWORD PTR [rcx]
   14001632d:	call   0x1400165c0
   140016332:	mov    QWORD PTR [rsp+0xc0],rax
   14001633a:	cmp    QWORD PTR [rsp+0xc0],0x0
   140016343:	jne    0x140016360
   140016345:	mov    edx,0x203
   14001634a:	mov    rcx,QWORD PTR [rsp+0x100]
   140016352:	call   0x140017a30
   140016357:	mov    DWORD PTR [rsp+0x44],eax
   14001635b:	jmp    0x1400164ae
   140016360:	mov    rcx,QWORD PTR [rsp+0x100]
   140016368:	mov    rcx,QWORD PTR [rcx]
   14001636b:	mov    rax,QWORD PTR [rsp+0xc0]
   140016373:	sub    rax,rcx
   140016376:	sar    rax,1
   140016379:	cmp    rax,0x1f
   14001637d:	jle    0x14001638c
   14001637f:	mov    DWORD PTR [rsp+0x44],0x80004005
   140016387:	jmp    0x1400164ae
   14001638c:	mov    rcx,QWORD PTR [rsp+0x100]
   140016394:	mov    rcx,QWORD PTR [rcx]
   140016397:	mov    rax,QWORD PTR [rsp+0xc0]
   14001639f:	sub    rax,rcx
   1400163a2:	sar    rax,1
   1400163a5:	mov    DWORD PTR [rsp+0xc8],eax
   1400163ac:	movsxd r9,DWORD PTR [rsp+0xc8]
   1400163b4:	mov    r8,QWORD PTR [rsp+0x100]
   1400163bc:	mov    r8,QWORD PTR [r8]
   1400163bf:	mov    edx,0x20
   1400163c4:	lea    rcx,[rsp+0x80]
   1400163cc:	call   0x1400173b0
   1400163d1:	lea    rdx,[rsp+0x80]
   1400163d9:	mov    rcx,QWORD PTR [rsp+0x100]
   1400163e1:	mov    rcx,QWORD PTR [rcx+0x8]
   1400163e5:	call   0x140015b80
   1400163ea:	mov    QWORD PTR [rsp+0x68],rax
   1400163ef:	cmp    QWORD PTR [rsp+0x68],0x0
   1400163f5:	jne    0x140016412
   1400163f7:	mov    edx,0x202
   1400163fc:	mov    rcx,QWORD PTR [rsp+0x100]
   140016404:	call   0x140017a30
   140016409:	mov    DWORD PTR [rsp+0x44],eax
   14001640d:	jmp    0x1400164ae
   140016412:	mov    rdx,QWORD PTR [rsp+0x68]
   140016417:	lea    rcx,[rsp+0x30]
   14001641c:	call   0x140015be0
   140016421:	test   eax,eax
   140016423:	jne    0x14001642f
   140016425:	mov    DWORD PTR [rsp+0x44],0x8007000e
   14001642d:	jmp    0x1400164ae
   14001642f:	mov    rcx,QWORD PTR [rsp+0x100]
   140016437:	mov    rax,QWORD PTR [rsp+0xc0]
   14001643f:	cmp    QWORD PTR [rcx],rax
   140016442:	je     0x140016465
   140016444:	mov    rcx,QWORD PTR [rsp+0x100]
   14001644c:	mov    rcx,QWORD PTR [rcx]
   14001644f:	call   QWORD PTR [rip+0x23f83]        # 0x14003a3d8
   140016455:	mov    r11,rax
   140016458:	mov    rax,QWORD PTR [rsp+0x100]
   140016460:	mov    QWORD PTR [rax],r11
   140016463:	jmp    0x14001642f
   140016465:	jmp    0x14001648a
   140016467:	mov    rdx,QWORD PTR [rsp+0x100]
   14001646f:	mov    rdx,QWORD PTR [rdx]
   140016472:	lea    rcx,[rsp+0x30]
   140016477:	call   0x140015ee0
   14001647c:	test   eax,eax
   14001647e:	jne    0x14001648a
   140016480:	mov    DWORD PTR [rsp+0x44],0x8007000e
   140016488:	jmp    0x1400164ae
   14001648a:	mov    rcx,QWORD PTR [rsp+0x100]
   140016492:	mov    rcx,QWORD PTR [rcx]
   140016495:	call   QWORD PTR [rip+0x23f3d]        # 0x14003a3d8
   14001649b:	mov    r11,rax
   14001649e:	mov    rax,QWORD PTR [rsp+0x100]
   1400164a6:	mov    QWORD PTR [rax],r11
   1400164a9:	jmp    0x140016077
   1400164ae:	cmp    DWORD PTR [rsp+0x44],0x0
   1400164b3:	jl     0x1400164cd
   1400164b5:	lea    rcx,[rsp+0x30]
   1400164ba:	call   0x140015f10
   1400164bf:	mov    r11,rax
   1400164c2:	mov    rax,QWORD PTR [rsp+0x110]
   1400164ca:	mov    QWORD PTR [rax],r11
   1400164cd:	mov    eax,DWORD PTR [rsp+0x44]
   1400164d1:	mov    DWORD PTR [rsp+0xd4],eax
   1400164d8:	lea    rcx,[rsp+0x30]
   1400164dd:	call   0x140015920
   1400164e2:	mov    eax,DWORD PTR [rsp+0xd4]
   1400164e9:	mov    rcx,QWORD PTR [rsp+0xe0]
   1400164f1:	xor    rcx,rsp
   1400164f4:	call   0x14001c500
   1400164f9:	add    rsp,0xf8
   140016500:	ret    
   140016501:	int3   
   140016502:	int3   
   140016503:	int3   
   140016504:	int3   
   140016505:	int3   
   140016506:	int3   
   140016507:	int3   
   140016508:	int3   
   140016509:	int3   
   14001650a:	int3   
   14001650b:	int3   
   14001650c:	int3   
   14001650d:	int3   
   14001650e:	int3   
   14001650f:	int3   
   140016510:	mov    QWORD PTR [rsp+0x8],rcx
   140016515:	sub    rsp,0x38
   140016519:	mov    DWORD PTR [rsp+0x20],0x0
   140016521:	jmp    0x14001652e
   140016523:	mov    eax,DWORD PTR [rsp+0x20]
   140016527:	add    eax,0x1
   14001652a:	mov    DWORD PTR [rsp+0x20],eax
   14001652e:	movsxd rax,DWORD PTR [rsp+0x20]
   140016533:	cmp    rax,0xe
   140016537:	jae    0x140016575
   140016539:	movsxd rax,DWORD PTR [rsp+0x20]
   14001653e:	imul   rax,rax,0x10
   140016542:	lea    rdx,[rip+0x293c7]        # 0x14003f910
   140016549:	mov    rdx,QWORD PTR [rdx+rax*1]
   14001654d:	mov    rcx,QWORD PTR [rsp+0x40]
   140016552:	call   QWORD PTR [rip+0x23b50]        # 0x14003a0a8
   140016558:	test   eax,eax
   14001655a:	jne    0x140016573
   14001655c:	movsxd rcx,DWORD PTR [rsp+0x20]
   140016561:	imul   rcx,rcx,0x10
   140016565:	lea    rax,[rip+0x293a4]        # 0x14003f910
   14001656c:	mov    rax,QWORD PTR [rax+rcx*1+0x8]
   140016571:	jmp    0x140016577
   140016573:	jmp    0x140016523
   140016575:	xor    eax,eax
   140016577:	add    rsp,0x38
   14001657b:	ret    
   14001657c:	int3   
   14001657d:	int3   
   14001657e:	int3   
   14001657f:	int3   
   140016580:	mov    QWORD PTR [rsp+0x10],rdx
   140016585:	mov    QWORD PTR [rsp+0x8],rcx
   14001658a:	sub    rsp,0x28
   14001658e:	xor    eax,eax
   140016590:	test   eax,eax
   140016592:	jne    0x14001658e
   140016594:	xor    eax,eax
   140016596:	test   eax,eax
   140016598:	jne    0x14001658e
   14001659a:	mov    rdx,QWORD PTR [rsp+0x38]
   14001659f:	mov    rcx,QWORD PTR [rsp+0x30]
   1400165a4:	mov    rcx,QWORD PTR [rcx]
   1400165a7:	call   QWORD PTR [rip+0x23a5b]        # 0x14003a008
   1400165ad:	add    rsp,0x28
   1400165b1:	ret    
   1400165b2:	int3   
   1400165b3:	int3   
   1400165b4:	int3   
   1400165b5:	int3   
   1400165b6:	int3   
   1400165b7:	int3   
   1400165b8:	int3   
   1400165b9:	int3   
   1400165ba:	int3   
   1400165bb:	int3   
   1400165bc:	int3   
   1400165bd:	int3   
   1400165be:	int3   
   1400165bf:	int3   
   1400165c0:	mov    WORD PTR [rsp+0x10],dx
   1400165c5:	mov    QWORD PTR [rsp+0x8],rcx
   1400165ca:	sub    rsp,0x38
   1400165ce:	mov    QWORD PTR [rsp+0x20],0x0
   1400165d7:	cmp    QWORD PTR [rsp+0x40],0x0
   1400165dd:	jne    0x1400165e3
   1400165df:	xor    eax,eax
   1400165e1:	jmp    0x140016623
   1400165e3:	mov    rax,QWORD PTR [rsp+0x40]
   1400165e8:	movzx  eax,WORD PTR [rax]
   1400165eb:	test   eax,eax
   1400165ed:	je     0x14001661e
   1400165ef:	mov    rax,QWORD PTR [rsp+0x40]
   1400165f4:	movzx  ecx,WORD PTR [rax]
   1400165f7:	movzx  eax,WORD PTR [rsp+0x48]
   1400165fc:	cmp    ecx,eax
   1400165fe:	jne    0x14001660c
   140016600:	mov    rax,QWORD PTR [rsp+0x40]
   140016605:	mov    QWORD PTR [rsp+0x20],rax
   14001660a:	jmp    0x14001661e
   14001660c:	mov    rcx,QWORD PTR [rsp+0x40]
   140016611:	call   QWORD PTR [rip+0x23dc1]        # 0x14003a3d8
   140016617:	mov    QWORD PTR [rsp+0x40],rax
   14001661c:	jmp    0x1400165e3
   14001661e:	mov    rax,QWORD PTR [rsp+0x20]
   140016623:	add    rsp,0x38
   140016627:	ret    
   140016628:	int3   
   140016629:	int3   
   14001662a:	int3   
   14001662b:	int3   
   14001662c:	int3   
   14001662d:	int3   
   14001662e:	int3   
   14001662f:	int3   
   140016630:	mov    QWORD PTR [rsp+0x20],r9
   140016635:	mov    QWORD PTR [rsp+0x18],r8
   14001663a:	mov    QWORD PTR [rsp+0x10],rdx
   14001663f:	mov    QWORD PTR [rsp+0x8],rcx
   140016644:	sub    rsp,0x68
   140016648:	mov    QWORD PTR [rsp+0x50],0x0
   140016651:	lea    rax,[rsp+0x5c]
   140016656:	mov    QWORD PTR [rsp+0x40],rax
   14001665b:	lea    rax,[rsp+0x50]
   140016660:	mov    QWORD PTR [rsp+0x38],rax
   140016665:	mov    rax,QWORD PTR [rsp+0xa0]
   14001666d:	mov    QWORD PTR [rsp+0x30],rax
   140016672:	mov    eax,DWORD PTR [rsp+0x98]
   140016679:	mov    DWORD PTR [rsp+0x28],eax
   14001667d:	mov    eax,DWORD PTR [rsp+0x90]
   140016684:	mov    DWORD PTR [rsp+0x20],eax
   140016688:	mov    r9,QWORD PTR [rsp+0x88]
   140016690:	xor    r8d,r8d
   140016693:	mov    rdx,QWORD PTR [rsp+0x80]
   14001669b:	mov    rcx,QWORD PTR [rsp+0x78]
   1400166a0:	call   QWORD PTR [rip+0x2396a]        # 0x14003a010
   1400166a6:	mov    DWORD PTR [rsp+0x58],eax
   1400166aa:	cmp    QWORD PTR [rsp+0xa8],0x0
   1400166b3:	je     0x1400166c3
   1400166b5:	mov    rcx,QWORD PTR [rsp+0xa8]
   1400166bd:	mov    eax,DWORD PTR [rsp+0x5c]
   1400166c1:	mov    DWORD PTR [rcx],eax
   1400166c3:	cmp    DWORD PTR [rsp+0x58],0x0
   1400166c8:	jne    0x1400166fa
   1400166ca:	mov    rcx,QWORD PTR [rsp+0x70]
   1400166cf:	call   0x1400177f0
   1400166d4:	mov    DWORD PTR [rsp+0x58],eax
   1400166d8:	mov    rcx,QWORD PTR [rsp+0x70]
   1400166dd:	mov    rax,QWORD PTR [rsp+0x50]
   1400166e2:	mov    QWORD PTR [rcx],rax
   1400166e5:	mov    ecx,DWORD PTR [rsp+0x98]
   1400166ec:	and    ecx,0x300
   1400166f2:	mov    rax,QWORD PTR [rsp+0x70]
   1400166f7:	mov    DWORD PTR [rax+0x8],ecx
   1400166fa:	mov    eax,DWORD PTR [rsp+0x58]
   1400166fe:	add    rsp,0x68
   140016702:	ret    
   140016703:	int3   
   140016704:	int3   
   140016705:	int3   
   140016706:	int3   
   140016707:	int3   
   140016708:	int3   
   140016709:	int3   
   14001670a:	int3   
   14001670b:	int3   
   14001670c:	int3   
   14001670d:	int3   
   14001670e:	int3   
   14001670f:	int3   
   140016710:	mov    QWORD PTR [rsp+0x10],rdx
   140016715:	mov    QWORD PTR [rsp+0x8],rcx
   14001671a:	sub    rsp,0x38
   14001671e:	mov    eax,DWORD PTR [rip+0x36384]        # 0x14004caa8
   140016724:	and    eax,0x1
   140016727:	test   eax,eax
   140016729:	jne    0x1400167a2
   14001672b:	mov    eax,DWORD PTR [rip+0x36377]        # 0x14004caa8
   140016731:	or     eax,0x1
   140016734:	mov    DWORD PTR [rip+0x3636e],eax        # 0x14004caa8
   14001673a:	mov    rax,QWORD PTR [rip+0x27aef]        # 0x14003e230
   140016741:	mov    QWORD PTR [rip+0x36388],rax        # 0x14004cad0
   140016748:	mov    eax,0x8
   14001674d:	mov    WORD PTR [rip+0x36384],ax        # 0x14004cad8
   140016754:	mov    rax,QWORD PTR [rip+0x27add]        # 0x14003e238
   14001675b:	mov    QWORD PTR [rip+0x3637e],rax        # 0x14004cae0
   140016762:	mov    eax,0x4008
   140016767:	mov    WORD PTR [rip+0x3637a],ax        # 0x14004cae8
   14001676e:	mov    rax,QWORD PTR [rip+0x27acb]        # 0x14003e240
   140016775:	mov    QWORD PTR [rip+0x36374],rax        # 0x14004caf0
   14001677c:	mov    eax,0x13
   140016781:	mov    WORD PTR [rip+0x36370],ax        # 0x14004caf8
   140016788:	mov    rax,QWORD PTR [rip+0x27ab9]        # 0x14003e248
   14001678f:	mov    QWORD PTR [rip+0x3636a],rax        # 0x14004cb00
   140016796:	mov    eax,0x11
   14001679b:	mov    WORD PTR [rip+0x36366],ax        # 0x14004cb08
   1400167a2:	mov    DWORD PTR [rsp+0x20],0x0
   1400167aa:	jmp    0x1400167b7
   1400167ac:	mov    eax,DWORD PTR [rsp+0x20]
   1400167b0:	add    eax,0x1
   1400167b3:	mov    DWORD PTR [rsp+0x20],eax
   1400167b7:	movsxd rax,DWORD PTR [rsp+0x20]
   1400167bc:	cmp    rax,0x4
   1400167c0:	jae    0x14001680b
   1400167c2:	movsxd rax,DWORD PTR [rsp+0x20]
   1400167c7:	imul   rax,rax,0x10
   1400167cb:	lea    rdx,[rip+0x362fe]        # 0x14004cad0
   1400167d2:	mov    rdx,QWORD PTR [rdx+rax*1]
   1400167d6:	mov    rcx,QWORD PTR [rsp+0x40]
   1400167db:	call   QWORD PTR [rip+0x238c7]        # 0x14003a0a8
   1400167e1:	test   eax,eax
   1400167e3:	jne    0x140016809
   1400167e5:	movsxd rdx,DWORD PTR [rsp+0x20]
   1400167ea:	imul   rdx,rdx,0x10
   1400167ee:	lea    rax,[rip+0x362db]        # 0x14004cad0
   1400167f5:	mov    rcx,QWORD PTR [rsp+0x48]
   1400167fa:	movzx  eax,WORD PTR [rax+rdx*1+0x8]
   1400167ff:	mov    WORD PTR [rcx],ax
   140016802:	mov    eax,0x1
   140016807:	jmp    0x14001680d
   140016809:	jmp    0x1400167ac
   14001680b:	xor    eax,eax
   14001680d:	add    rsp,0x38
   140016811:	ret    
   140016812:	int3   
   140016813:	int3   
   140016814:	int3   
   140016815:	int3   
   140016816:	int3   
   140016817:	int3   
   140016818:	int3   
   140016819:	int3   
   14001681a:	int3   
   14001681b:	int3   
   14001681c:	int3   
   14001681d:	int3   
   14001681e:	int3   
   14001681f:	int3   
   140016820:	mov    DWORD PTR [rsp+0x20],r9d
   140016825:	mov    QWORD PTR [rsp+0x18],r8
   14001682a:	mov    QWORD PTR [rsp+0x10],rdx
   14001682f:	mov    QWORD PTR [rsp+0x8],rcx
   140016834:	sub    rsp,0x48
   140016838:	xor    eax,eax
   14001683a:	test   eax,eax
   14001683c:	jne    0x140016838
   14001683e:	xor    eax,eax
   140016840:	test   eax,eax
   140016842:	jne    0x140016838
   140016844:	cmp    QWORD PTR [rsp+0x60],0x0
   14001684a:	je     0x140016856
   14001684c:	mov    DWORD PTR [rsp+0x34],0x1
   140016854:	jmp    0x14001685e
   140016856:	mov    DWORD PTR [rsp+0x34],0x0
   14001685e:	mov    eax,DWORD PTR [rsp+0x34]
   140016862:	mov    DWORD PTR [rsp+0x30],eax
   140016866:	cmp    DWORD PTR [rsp+0x30],0x0
   14001686b:	jne    0x140016874
   14001686d:	mov    eax,0xd
   140016872:	jmp    0x1400168b6
   140016874:	xor    eax,eax
   140016876:	test   eax,eax
   140016878:	jne    0x140016844
   14001687a:	mov    rcx,QWORD PTR [rsp+0x60]
   14001687f:	call   QWORD PTR [rip+0x2381b]        # 0x14003a0a0
   140016885:	add    eax,0x1
   140016888:	cdqe   
   14001688a:	shl    rax,1
   14001688d:	mov    DWORD PTR [rsp+0x28],eax
   140016891:	mov    rax,QWORD PTR [rsp+0x60]
   140016896:	mov    QWORD PTR [rsp+0x20],rax
   14001689b:	mov    r9d,DWORD PTR [rsp+0x68]
   1400168a0:	xor    r8d,r8d
   1400168a3:	mov    rdx,QWORD PTR [rsp+0x58]
   1400168a8:	mov    rcx,QWORD PTR [rsp+0x50]
   1400168ad:	mov    rcx,QWORD PTR [rcx]
   1400168b0:	call   QWORD PTR [rip+0x23762]        # 0x14003a018
   1400168b6:	add    rsp,0x48
   1400168ba:	ret    
   1400168bb:	int3   
   1400168bc:	int3   
   1400168bd:	int3   
   1400168be:	int3   
   1400168bf:	int3   
   1400168c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400168c5:	sub    rsp,0x28
   1400168c9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400168ce:	add    rcx,0x8
   1400168d2:	mov    rax,QWORD PTR [rsp+0x30]
   1400168d7:	cmp    QWORD PTR [rax],rcx
   1400168da:	je     0x1400168e6
   1400168dc:	mov    rcx,QWORD PTR [rsp+0x30]
   1400168e1:	call   0x140016ae0
   1400168e6:	add    rsp,0x28
   1400168ea:	ret    
   1400168eb:	int3   
   1400168ec:	int3   
   1400168ed:	int3   
   1400168ee:	int3   
   1400168ef:	int3   
   1400168f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400168f5:	mov    QWORD PTR [rsp+0x8],rcx
   1400168fa:	sub    rsp,0x28
   1400168fe:	mov    edx,0x2
   140016903:	mov    rcx,QWORD PTR [rsp+0x38]
   140016908:	call   0x140016c20
   14001690d:	mov    rdx,rax
   140016910:	mov    rcx,QWORD PTR [rsp+0x30]
   140016915:	call   0x140016b70
   14001691a:	add    rsp,0x28
   14001691e:	ret    
   14001691f:	int3   
   140016920:	mov    QWORD PTR [rsp+0x18],r8
   140016925:	mov    QWORD PTR [rsp+0x10],rdx
   14001692a:	mov    QWORD PTR [rsp+0x8],rcx
   14001692f:	sub    rsp,0x58
   140016933:	xor    eax,eax
   140016935:	test   eax,eax
   140016937:	jne    0x140016933
   140016939:	xor    eax,eax
   14001693b:	test   eax,eax
   14001693d:	jne    0x140016933
   14001693f:	cmp    QWORD PTR [rsp+0x70],0x0
   140016945:	je     0x140016951
   140016947:	mov    DWORD PTR [rsp+0x48],0x1
   14001694f:	jmp    0x140016959
   140016951:	mov    DWORD PTR [rsp+0x48],0x0
   140016959:	mov    eax,DWORD PTR [rsp+0x48]
   14001695d:	mov    DWORD PTR [rsp+0x44],eax
   140016961:	cmp    DWORD PTR [rsp+0x44],0x0
   140016966:	jne    0x140016972
   140016968:	mov    eax,0xd
   14001696d:	jmp    0x1400169f3
   140016972:	xor    eax,eax
   140016974:	test   eax,eax
   140016976:	jne    0x14001693f
   140016978:	mov    DWORD PTR [rsp+0x30],0x0
   140016980:	mov    rax,QWORD PTR [rsp+0x70]
   140016985:	mov    QWORD PTR [rsp+0x38],rax
   14001698a:	mov    rcx,QWORD PTR [rsp+0x38]
   14001698f:	call   QWORD PTR [rip+0x2370b]        # 0x14003a0a0
   140016995:	add    eax,0x1
   140016998:	mov    DWORD PTR [rsp+0x40],eax
   14001699c:	mov    ecx,DWORD PTR [rsp+0x40]
   1400169a0:	mov    rax,QWORD PTR [rsp+0x38]
   1400169a5:	lea    rax,[rax+rcx*2]
   1400169a9:	mov    QWORD PTR [rsp+0x38],rax
   1400169ae:	mov    ecx,DWORD PTR [rsp+0x40]
   1400169b2:	mov    eax,DWORD PTR [rsp+0x30]
   1400169b6:	lea    rax,[rax+rcx*2]
   1400169ba:	mov    DWORD PTR [rsp+0x30],eax
   1400169be:	cmp    DWORD PTR [rsp+0x40],0x1
   1400169c3:	jne    0x14001698a
   1400169c5:	mov    eax,DWORD PTR [rsp+0x30]
   1400169c9:	mov    DWORD PTR [rsp+0x28],eax
   1400169cd:	mov    rax,QWORD PTR [rsp+0x70]
   1400169d2:	mov    QWORD PTR [rsp+0x20],rax
   1400169d7:	mov    r9d,0x7
   1400169dd:	xor    r8d,r8d
   1400169e0:	mov    rdx,QWORD PTR [rsp+0x68]
   1400169e5:	mov    rcx,QWORD PTR [rsp+0x60]
   1400169ea:	mov    rcx,QWORD PTR [rcx]
   1400169ed:	call   QWORD PTR [rip+0x23625]        # 0x14003a018
   1400169f3:	add    rsp,0x58
   1400169f7:	ret    
   1400169f8:	int3   
   1400169f9:	int3   
   1400169fa:	int3   
   1400169fb:	int3   
   1400169fc:	int3   
   1400169fd:	int3   
   1400169fe:	int3   
   1400169ff:	int3   
   140016a00:	mov    eax,0x3
   140016a05:	ret    
   140016a06:	int3   
   140016a07:	int3   
   140016a08:	int3   
   140016a09:	int3   
   140016a0a:	int3   
   140016a0b:	int3   
   140016a0c:	int3   
   140016a0d:	int3   
   140016a0e:	int3   
   140016a0f:	int3   
   140016a10:	mov    QWORD PTR [rsp+0x8],rcx
   140016a15:	sub    rsp,0x38
   140016a19:	mov    rax,QWORD PTR [rsp+0x40]
   140016a1e:	cmp    QWORD PTR [rax],0x0
   140016a22:	je     0x140016a50
   140016a24:	mov    rax,QWORD PTR [rsp+0x40]
   140016a29:	mov    rax,QWORD PTR [rax]
   140016a2c:	mov    QWORD PTR [rsp+0x20],rax
   140016a31:	mov    rax,QWORD PTR [rsp+0x40]
   140016a36:	mov    rax,QWORD PTR [rax]
   140016a39:	mov    rcx,QWORD PTR [rsp+0x40]
   140016a3e:	mov    rax,QWORD PTR [rax]
   140016a41:	mov    QWORD PTR [rcx],rax
   140016a44:	mov    rcx,QWORD PTR [rsp+0x20]
   140016a49:	call   0x140016ac0
   140016a4e:	jmp    0x140016a19
   140016a50:	add    rsp,0x38
   140016a54:	ret    
   140016a55:	int3   
   140016a56:	int3   
   140016a57:	int3   
   140016a58:	int3   
   140016a59:	int3   
   140016a5a:	int3   
   140016a5b:	int3   
   140016a5c:	int3   
   140016a5d:	int3   
   140016a5e:	int3   
   140016a5f:	int3   
   140016a60:	mov    DWORD PTR [rsp+0x18],r8d
   140016a65:	mov    QWORD PTR [rsp+0x10],rdx
   140016a6a:	mov    QWORD PTR [rsp+0x8],rcx
   140016a6f:	sub    rsp,0x38
   140016a73:	xor    eax,eax
   140016a75:	test   eax,eax
   140016a77:	jne    0x140016a73
   140016a79:	xor    eax,eax
   140016a7b:	test   eax,eax
   140016a7d:	jne    0x140016a73
   140016a7f:	mov    DWORD PTR [rsp+0x28],0x4
   140016a87:	lea    rax,[rsp+0x50]
   140016a8c:	mov    QWORD PTR [rsp+0x20],rax
   140016a91:	mov    r9d,0x4
   140016a97:	xor    r8d,r8d
   140016a9a:	mov    rdx,QWORD PTR [rsp+0x48]
   140016a9f:	mov    rcx,QWORD PTR [rsp+0x40]
   140016aa4:	mov    rcx,QWORD PTR [rcx]
   140016aa7:	call   QWORD PTR [rip+0x2356b]        # 0x14003a018
   140016aad:	add    rsp,0x38
   140016ab1:	ret    
   140016ab2:	int3   
   140016ab3:	int3   
   140016ab4:	int3   
   140016ab5:	int3   
   140016ab6:	int3   
   140016ab7:	int3   
   140016ab8:	int3   
   140016ab9:	int3   
   140016aba:	int3   
   140016abb:	int3   
   140016abc:	int3   
   140016abd:	int3   
   140016abe:	int3   
   140016abf:	int3   
   140016ac0:	mov    QWORD PTR [rsp+0x8],rcx
   140016ac5:	sub    rsp,0x28
   140016ac9:	mov    rcx,QWORD PTR [rsp+0x30]
   140016ace:	call   0x14001ca48
   140016ad3:	add    rsp,0x28
   140016ad7:	ret    
   140016ad8:	int3   
   140016ad9:	int3   
   140016ada:	int3   
   140016adb:	int3   
   140016adc:	int3   
   140016add:	int3   
   140016ade:	int3   
   140016adf:	int3   
   140016ae0:	mov    QWORD PTR [rsp+0x8],rcx
   140016ae5:	sub    rsp,0x28
   140016ae9:	mov    rcx,QWORD PTR [rsp+0x30]
   140016aee:	mov    rcx,QWORD PTR [rcx]
   140016af1:	call   0x140016ac0
   140016af6:	add    rsp,0x28
   140016afa:	ret    
   140016afb:	int3   
   140016afc:	int3   
   140016afd:	int3   
   140016afe:	int3   
   140016aff:	int3   
   140016b00:	mov    QWORD PTR [rsp+0x8],rcx
   140016b05:	sub    rsp,0x28
   140016b09:	mov    rcx,QWORD PTR [rsp+0x30]
   140016b0e:	call   0x14001d66c
   140016b13:	add    rsp,0x28
   140016b17:	ret    
   140016b18:	int3   
   140016b19:	int3   
   140016b1a:	int3   
   140016b1b:	int3   
   140016b1c:	int3   
   140016b1d:	int3   
   140016b1e:	int3   
   140016b1f:	int3   
   140016b20:	mov    QWORD PTR [rsp+0x10],rdx
   140016b25:	mov    QWORD PTR [rsp+0x8],rcx
   140016b2a:	sub    rsp,0x38
   140016b2e:	mov    rcx,QWORD PTR [rsp+0x48]
   140016b33:	call   0x140016b00
   140016b38:	mov    QWORD PTR [rsp+0x20],rax
   140016b3d:	cmp    QWORD PTR [rsp+0x20],0x0
   140016b43:	jne    0x140016b4f
   140016b45:	mov    ecx,0x8007000e
   140016b4a:	call   0x140017300
   140016b4f:	mov    rcx,QWORD PTR [rsp+0x40]
   140016b54:	mov    rax,QWORD PTR [rsp+0x20]
   140016b59:	mov    QWORD PTR [rcx],rax
   140016b5c:	add    rsp,0x38
   140016b60:	ret    
   140016b61:	int3   
   140016b62:	int3   
   140016b63:	int3   
   140016b64:	int3   
   140016b65:	int3   
   140016b66:	int3   
   140016b67:	int3   
   140016b68:	int3   
   140016b69:	int3   
   140016b6a:	int3   
   140016b6b:	int3   
   140016b6c:	int3   
   140016b6d:	int3   
   140016b6e:	int3   
   140016b6f:	int3   
   140016b70:	mov    QWORD PTR [rsp+0x10],rdx
   140016b75:	mov    QWORD PTR [rsp+0x8],rcx
   140016b7a:	sub    rsp,0x28
   140016b7e:	cmp    QWORD PTR [rsp+0x38],0x100
   140016b87:	jbe    0x140016b9a
   140016b89:	mov    rdx,QWORD PTR [rsp+0x38]
   140016b8e:	mov    rcx,QWORD PTR [rsp+0x30]
   140016b93:	call   0x140016b20
   140016b98:	jmp    0x140016bab
   140016b9a:	mov    rcx,QWORD PTR [rsp+0x30]
   140016b9f:	add    rcx,0x8
   140016ba3:	mov    rax,QWORD PTR [rsp+0x30]
   140016ba8:	mov    QWORD PTR [rax],rcx
   140016bab:	mov    rax,QWORD PTR [rsp+0x30]
   140016bb0:	mov    rax,QWORD PTR [rax]
   140016bb3:	add    rsp,0x28
   140016bb7:	ret    
   140016bb8:	int3   
   140016bb9:	int3   
   140016bba:	int3   
   140016bbb:	int3   
   140016bbc:	int3   
   140016bbd:	int3   
   140016bbe:	int3   
   140016bbf:	int3   
   140016bc0:	mov    QWORD PTR [rsp+0x18],r8
   140016bc5:	mov    QWORD PTR [rsp+0x10],rdx
   140016bca:	mov    QWORD PTR [rsp+0x8],rcx
   140016bcf:	cmp    QWORD PTR [rsp+0x10],0x0
   140016bd5:	jne    0x140016be7
   140016bd7:	mov    rax,QWORD PTR [rsp+0x8]
   140016bdc:	mov    QWORD PTR [rax],0x0
   140016be3:	xor    eax,eax
   140016be5:	jmp    0x140016c18
   140016be7:	xor    edx,edx
   140016be9:	mov    rax,0xffffffffffffffff
   140016bf0:	div    QWORD PTR [rsp+0x10]
   140016bf5:	cmp    rax,QWORD PTR [rsp+0x18]
   140016bfa:	jae    0x140016c03
   140016bfc:	mov    eax,0x80070057
   140016c01:	jmp    0x140016c18
   140016c03:	mov    rcx,QWORD PTR [rsp+0x10]
   140016c08:	imul   rcx,QWORD PTR [rsp+0x18]
   140016c0e:	mov    rax,QWORD PTR [rsp+0x8]
   140016c13:	mov    QWORD PTR [rax],rcx
   140016c16:	xor    eax,eax
   140016c18:	repz ret 
   140016c1a:	int3   
   140016c1b:	int3   
   140016c1c:	int3   
   140016c1d:	int3   
   140016c1e:	int3   
   140016c1f:	int3   
   140016c20:	mov    QWORD PTR [rsp+0x10],rdx
   140016c25:	mov    QWORD PTR [rsp+0x8],rcx
   140016c2a:	sub    rsp,0x38
   140016c2e:	mov    r8,QWORD PTR [rsp+0x48]
   140016c33:	mov    rdx,QWORD PTR [rsp+0x40]
   140016c38:	lea    rcx,[rsp+0x20]
   140016c3d:	call   0x140016bc0
   140016c42:	mov    DWORD PTR [rsp+0x28],eax
   140016c46:	cmp    DWORD PTR [rsp+0x28],0x0
   140016c4b:	jge    0x140016c56
   140016c4d:	mov    ecx,DWORD PTR [rsp+0x28]
   140016c51:	call   0x140017300
   140016c56:	mov    rax,QWORD PTR [rsp+0x20]
   140016c5b:	add    rsp,0x38
   140016c5f:	ret    
   140016c60:	mov    QWORD PTR [rsp+0x10],rdx
   140016c65:	mov    QWORD PTR [rsp+0x8],rcx
   140016c6a:	sub    rsp,0x28
   140016c6e:	mov    edx,0x1
   140016c73:	mov    rcx,QWORD PTR [rsp+0x38]
   140016c78:	call   0x140016c20
   140016c7d:	mov    rdx,rax
   140016c80:	mov    rcx,QWORD PTR [rsp+0x30]
   140016c85:	call   0x140016b70
   140016c8a:	add    rsp,0x28
   140016c8e:	ret    
   140016c8f:	int3   
   140016c90:	mov    WORD PTR [rsp+0x8],cx
   140016c95:	sub    rsp,0x18
   140016c99:	movzx  eax,WORD PTR [rsp+0x20]
   140016c9e:	mov    DWORD PTR [rsp],eax
   140016ca1:	mov    eax,DWORD PTR [rsp]
   140016ca4:	sub    eax,0x30
   140016ca7:	mov    DWORD PTR [rsp],eax
   140016caa:	cmp    DWORD PTR [rsp],0x36
   140016cae:	ja     0x140016ced
   140016cb0:	movsxd rax,DWORD PTR [rsp]
   140016cb4:	lea    rcx,[rip+0xfffffffffffe9345]        # 0x140000000
   140016cbb:	movzx  eax,BYTE PTR [rcx+rax*1+0x16d04]
   140016cc3:	mov    eax,DWORD PTR [rcx+rax*4+0x16cf4]
   140016cca:	add    rax,rcx
   140016ccd:	jmp    rax
   140016ccf:	movzx  eax,WORD PTR [rsp+0x20]
   140016cd4:	sub    eax,0x30
   140016cd7:	jmp    0x140016cef
   140016cd9:	movzx  eax,WORD PTR [rsp+0x20]
   140016cde:	sub    eax,0x37
   140016ce1:	jmp    0x140016cef
   140016ce3:	movzx  eax,WORD PTR [rsp+0x20]
   140016ce8:	sub    eax,0x57
   140016ceb:	jmp    0x140016cef
   140016ced:	xor    al,al
   140016cef:	add    rsp,0x18
   140016cf3:	ret    
   140016cf4:	iret   
   140016cf5:	ins    BYTE PTR es:[rdi],dx
   140016cf6:	add    DWORD PTR [rax],eax
   140016cf8:	fldcw  WORD PTR [rcx+rax*1+0x0]
   140016cfc:	jrcxz  0x140016d6a
   140016cfe:	add    DWORD PTR [rax],eax
   140016d00:	in     eax,dx
   140016d01:	ins    BYTE PTR es:[rdi],dx
   140016d02:	add    DWORD PTR [rax],eax
	...
   140016d0c:	add    BYTE PTR [rax],al
   140016d0e:	add    eax,DWORD PTR [rbx]
   140016d10:	add    eax,DWORD PTR [rbx]
   140016d12:	add    eax,DWORD PTR [rbx]
   140016d14:	add    eax,DWORD PTR [rcx]
   140016d16:	add    DWORD PTR [rcx],eax
   140016d18:	add    DWORD PTR [rcx],eax
   140016d1a:	add    DWORD PTR [rbx],eax
   140016d1c:	add    eax,DWORD PTR [rbx]
   140016d1e:	add    eax,DWORD PTR [rbx]
   140016d20:	add    eax,DWORD PTR [rbx]
   140016d22:	add    eax,DWORD PTR [rbx]
   140016d24:	add    eax,DWORD PTR [rbx]
   140016d26:	add    eax,DWORD PTR [rbx]
   140016d28:	add    eax,DWORD PTR [rbx]
   140016d2a:	add    eax,DWORD PTR [rbx]
   140016d2c:	add    eax,DWORD PTR [rbx]
   140016d2e:	add    eax,DWORD PTR [rbx]
   140016d30:	add    eax,DWORD PTR [rbx]
   140016d32:	add    eax,DWORD PTR [rbx]
   140016d34:	add    eax,DWORD PTR [rdx]
   140016d36:	add    al,BYTE PTR [rdx]
   140016d38:	add    al,BYTE PTR [rdx]
   140016d3a:	add    cl,ah
   140016d3c:	int3   
   140016d3d:	int3   
   140016d3e:	int3   
   140016d3f:	int3   
   140016d40:	mov    QWORD PTR [rsp+0x20],r9
   140016d45:	mov    QWORD PTR [rsp+0x18],r8
   140016d4a:	mov    QWORD PTR [rsp+0x10],rdx
   140016d4f:	mov    QWORD PTR [rsp+0x8],rcx
   140016d54:	push   rbx
   140016d55:	mov    eax,0x2300
   140016d5a:	call   0x140036570
   140016d5f:	sub    rsp,rax
   140016d62:	mov    QWORD PTR [rsp+0x22d8],0xfffffffffffffffe
   140016d6e:	mov    rax,QWORD PTR [rip+0x326eb]        # 0x140049460
   140016d75:	xor    rax,rsp
   140016d78:	mov    QWORD PTR [rsp+0x22f0],rax
   140016d80:	xor    eax,eax
   140016d82:	mov    WORD PTR [rsp+0x38],ax
   140016d87:	mov    DWORD PTR [rsp+0x34],0x0
   140016d8f:	mov    DWORD PTR [rsp+0x30],0x0
   140016d97:	lea    rdx,[rsp+0x50]
   140016d9c:	mov    rcx,QWORD PTR [rsp+0x2310]
   140016da4:	call   0x140017a40
   140016da9:	mov    DWORD PTR [rsp+0x3c],eax
   140016dad:	cmp    DWORD PTR [rsp+0x3c],0x0
   140016db2:	jge    0x140016dbd
   140016db4:	mov    eax,DWORD PTR [rsp+0x3c]
   140016db8:	jmp    0x1400172be
   140016dbd:	lea    rdx,[rsp+0x38]
   140016dc2:	lea    rcx,[rsp+0x50]
   140016dc7:	call   0x140016710
   140016dcc:	test   eax,eax
   140016dce:	jne    0x140016de7
   140016dd0:	mov    edx,0x20f
   140016dd5:	mov    rcx,QWORD PTR [rsp+0x2310]
   140016ddd:	call   0x140017a30
   140016de2:	jmp    0x1400172be
   140016de7:	mov    rcx,QWORD PTR [rsp+0x2310]
   140016def:	call   0x140018780
   140016df4:	lea    rdx,[rsp+0x50]
   140016df9:	mov    rcx,QWORD PTR [rsp+0x2310]
   140016e01:	call   0x140017a40
   140016e06:	mov    DWORD PTR [rsp+0x3c],eax
   140016e0a:	cmp    DWORD PTR [rsp+0x3c],0x0
   140016e0f:	jge    0x140016e1a
   140016e11:	mov    eax,DWORD PTR [rsp+0x3c]
   140016e15:	jmp    0x1400172be
   140016e1a:	movzx  eax,WORD PTR [rsp+0x38]
   140016e1f:	mov    DWORD PTR [rsp+0x22e0],eax
   140016e26:	cmp    DWORD PTR [rsp+0x22e0],0x8
   140016e2e:	je     0x140016e5e
   140016e30:	cmp    DWORD PTR [rsp+0x22e0],0x11
   140016e38:	je     0x1400170ca
   140016e3e:	cmp    DWORD PTR [rsp+0x22e0],0x13
   140016e46:	je     0x14001704c
   140016e4c:	cmp    DWORD PTR [rsp+0x22e0],0x4008
   140016e57:	je     0x140016e87
   140016e59:	jmp    0x14001727c
   140016e5e:	mov    r9d,0x1
   140016e64:	lea    r8,[rsp+0x50]
   140016e69:	mov    rdx,QWORD PTR [rsp+0x2320]
   140016e71:	mov    rcx,QWORD PTR [rsp+0x2318]
   140016e79:	call   0x140016820
   140016e7e:	mov    DWORD PTR [rsp+0x34],eax
   140016e82:	jmp    0x14001727c
   140016e87:	lea    rcx,[rsp+0x50]
   140016e8c:	call   QWORD PTR [rip+0x2320e]        # 0x14003a0a0
   140016e92:	add    eax,0x2
   140016e95:	mov    DWORD PTR [rsp+0x2160],eax
   140016e9c:	lea    rcx,[rsp+0x2050]
   140016ea4:	call   0x140015790
   140016ea9:	nop
   140016eaa:	movsxd rdx,DWORD PTR [rsp+0x2160]
   140016eb2:	lea    rcx,[rsp+0x2050]
   140016eba:	call   0x1400168f0
   140016ebf:	nop
   140016ec0:	lea    rcx,[rsp+0x2050]
   140016ec8:	call   0x140012200
   140016ecd:	test   rax,rax
   140016ed0:	je     0x140017032
   140016ed6:	lea    rcx,[rsp+0x2050]
   140016ede:	call   0x140012200
   140016ee3:	mov    QWORD PTR [rsp+0x2168],rax
   140016eeb:	lea    rax,[rsp+0x50]
   140016ef0:	mov    QWORD PTR [rsp+0x2170],rax
   140016ef8:	mov    DWORD PTR [rsp+0x2160],0x0
   140016f03:	mov    rax,QWORD PTR [rsp+0x2170]
   140016f0b:	movzx  eax,WORD PTR [rax]
   140016f0e:	test   eax,eax
   140016f10:	je     0x140016fd9
   140016f16:	mov    rcx,QWORD PTR [rsp+0x2170]
   140016f1e:	call   QWORD PTR [rip+0x234b4]        # 0x14003a3d8
   140016f24:	mov    QWORD PTR [rsp+0x2178],rax
   140016f2c:	mov    rax,QWORD PTR [rsp+0x2170]
   140016f34:	movzx  eax,WORD PTR [rax]
   140016f37:	cmp    eax,0x5c
   140016f3a:	jne    0x140016f85
   140016f3c:	mov    rax,QWORD PTR [rsp+0x2178]
   140016f44:	movzx  eax,WORD PTR [rax]
   140016f47:	cmp    eax,0x30
   140016f4a:	jne    0x140016f85
   140016f4c:	xor    ecx,ecx
   140016f4e:	mov    rax,QWORD PTR [rsp+0x2168]
   140016f56:	mov    WORD PTR [rax],cx
   140016f59:	mov    rax,QWORD PTR [rsp+0x2168]
   140016f61:	add    rax,0x2
   140016f65:	mov    QWORD PTR [rsp+0x2168],rax
   140016f6d:	mov    rcx,QWORD PTR [rsp+0x2178]
   140016f75:	call   QWORD PTR [rip+0x2345d]        # 0x14003a3d8
   140016f7b:	mov    QWORD PTR [rsp+0x2170],rax
   140016f83:	jmp    0x140016fc3
   140016f85:	mov    rcx,QWORD PTR [rsp+0x2168]
   140016f8d:	mov    rax,QWORD PTR [rsp+0x2170]
   140016f95:	movzx  eax,WORD PTR [rax]
   140016f98:	mov    WORD PTR [rcx],ax
   140016f9b:	mov    rax,QWORD PTR [rsp+0x2168]
   140016fa3:	add    rax,0x2
   140016fa7:	mov    QWORD PTR [rsp+0x2168],rax
   140016faf:	mov    rax,QWORD PTR [rsp+0x2170]
   140016fb7:	add    rax,0x2
   140016fbb:	mov    QWORD PTR [rsp+0x2170],rax
   140016fc3:	mov    eax,DWORD PTR [rsp+0x2160]
   140016fca:	add    eax,0x1
   140016fcd:	mov    DWORD PTR [rsp+0x2160],eax
   140016fd4:	jmp    0x140016f03
   140016fd9:	xor    ecx,ecx
   140016fdb:	mov    rax,QWORD PTR [rsp+0x2168]
   140016fe3:	mov    WORD PTR [rax],cx
   140016fe6:	mov    rax,QWORD PTR [rsp+0x2168]
   140016fee:	add    rax,0x2
   140016ff2:	mov    QWORD PTR [rsp+0x2168],rax
   140016ffa:	xor    ecx,ecx
   140016ffc:	mov    rax,QWORD PTR [rsp+0x2168]
   140017004:	mov    WORD PTR [rax],cx
   140017007:	lea    rcx,[rsp+0x2050]
   14001700f:	call   0x140012200
   140017014:	mov    r8,rax
   140017017:	mov    rdx,QWORD PTR [rsp+0x2320]
   14001701f:	mov    rcx,QWORD PTR [rsp+0x2318]
   140017027:	call   0x140016920
   14001702c:	mov    DWORD PTR [rsp+0x34],eax
   140017030:	jmp    0x14001703a
   140017032:	mov    DWORD PTR [rsp+0x34],0xe
   14001703a:	lea    rcx,[rsp+0x2050]
   140017042:	call   0x1400168c0
   140017047:	jmp    0x14001727c
   14001704c:	call   0x140016a00
   140017051:	mov    DWORD PTR [rsp+0x2198],eax
   140017058:	lea    rcx,[rsp+0x21a0]
   140017060:	call   0x140015790
   140017065:	mov    edx,0x400
   14001706a:	lea    rcx,[rsp+0x50]
   14001706f:	call   0x140015bd0
   140017074:	mov    QWORD PTR [rsp+0x2190],rax
   14001707c:	lea    r9,[rsp+0x21a8]
   140017084:	xor    r8d,r8d
   140017087:	xor    edx,edx
   140017089:	mov    rcx,QWORD PTR [rsp+0x2190]
   140017091:	call   QWORD PTR [rip+0x232e9]        # 0x14003a380
   140017097:	mov    r8d,DWORD PTR [rsp+0x21a8]
   14001709f:	mov    rdx,QWORD PTR [rsp+0x2320]
   1400170a7:	mov    rcx,QWORD PTR [rsp+0x2318]
   1400170af:	call   0x140016a60
   1400170b4:	mov    DWORD PTR [rsp+0x34],eax
   1400170b8:	lea    rcx,[rsp+0x21a0]
   1400170c0:	call   0x140016a10
   1400170c5:	jmp    0x14001727c
   1400170ca:	lea    rcx,[rsp+0x50]
   1400170cf:	call   QWORD PTR [rip+0x22fcb]        # 0x14003a0a0
   1400170d5:	mov    DWORD PTR [rsp+0x21b0],eax
   1400170dc:	mov    eax,DWORD PTR [rsp+0x21b0]
   1400170e3:	and    eax,0x1
   1400170e6:	test   eax,eax
   1400170e8:	je     0x1400170f4
   1400170ea:	mov    eax,0x80004005
   1400170ef:	jmp    0x1400172be
   1400170f4:	mov    eax,DWORD PTR [rsp+0x21b0]
   1400170fb:	cdq    
   1400170fc:	sub    eax,edx
   1400170fe:	sar    eax,1
   140017100:	mov    DWORD PTR [rsp+0x21ac],eax
   140017107:	lea    rcx,[rsp+0x21c0]
   14001710f:	call   0x140015790
   140017114:	nop
   140017115:	movsxd rdx,DWORD PTR [rsp+0x21ac]
   14001711d:	lea    rcx,[rsp+0x21c0]
   140017125:	call   0x140016c60
   14001712a:	nop
   14001712b:	lea    rcx,[rsp+0x21c0]
   140017133:	call   0x140012200
   140017138:	test   rax,rax
   14001713b:	jne    0x140017161
   14001713d:	mov    DWORD PTR [rsp+0x22d4],0x80004005
   140017148:	lea    rcx,[rsp+0x21c0]
   140017150:	call   0x1400168c0
   140017155:	mov    eax,DWORD PTR [rsp+0x22d4]
   14001715c:	jmp    0x1400172be
   140017161:	movsxd rbx,DWORD PTR [rsp+0x21ac]
   140017169:	lea    rcx,[rsp+0x21c0]
   140017171:	call   0x140012200
   140017176:	mov    r8,rbx
   140017179:	xor    edx,edx
   14001717b:	mov    rcx,rax
   14001717e:	call   0x14001c730
   140017183:	mov    DWORD PTR [rsp+0x22d0],0x0
   14001718e:	jmp    0x1400171a1
   140017190:	mov    eax,DWORD PTR [rsp+0x22d0]
   140017197:	add    eax,0x1
   14001719a:	mov    DWORD PTR [rsp+0x22d0],eax
   1400171a1:	mov    eax,DWORD PTR [rsp+0x21b0]
   1400171a8:	cmp    DWORD PTR [rsp+0x22d0],eax
   1400171af:	jge    0x140017224
   1400171b1:	mov    eax,DWORD PTR [rsp+0x22d0]
   1400171b8:	cdq    
   1400171b9:	sub    eax,edx
   1400171bb:	sar    eax,1
   1400171bd:	movsxd rbx,eax
   1400171c0:	lea    rcx,[rsp+0x21c0]
   1400171c8:	call   0x140012200
   1400171cd:	add    rax,rbx
   1400171d0:	mov    QWORD PTR [rsp+0x22e8],rax
   1400171d8:	mov    eax,DWORD PTR [rsp+0x22d0]
   1400171df:	and    eax,0x1
   1400171e2:	mov    ebx,0x1
   1400171e7:	sub    ebx,eax
   1400171e9:	shl    ebx,0x2
   1400171ec:	movsxd rax,DWORD PTR [rsp+0x22d0]
   1400171f4:	movzx  ecx,WORD PTR [rsp+rax*2+0x50]
   1400171f9:	call   0x140016c90
   1400171fe:	movzx  edx,al
   140017201:	mov    eax,ebx
   140017203:	movzx  ecx,al
   140017206:	shl    edx,cl
   140017208:	mov    rax,QWORD PTR [rsp+0x22e8]
   140017210:	movzx  ecx,BYTE PTR [rax]
   140017213:	or     ecx,edx
   140017215:	mov    rax,QWORD PTR [rsp+0x22e8]
   14001721d:	mov    BYTE PTR [rax],cl
   14001721f:	jmp    0x140017190
   140017224:	lea    rcx,[rsp+0x21c0]
   14001722c:	call   0x140012200
   140017231:	mov    rbx,rax
   140017234:	mov    rcx,QWORD PTR [rsp+0x2318]
   14001723c:	call   0x140012200
   140017241:	mov    rcx,rax
   140017244:	mov    eax,DWORD PTR [rsp+0x21ac]
   14001724b:	mov    DWORD PTR [rsp+0x28],eax
   14001724f:	mov    QWORD PTR [rsp+0x20],rbx
   140017254:	mov    r9d,0x3
   14001725a:	xor    r8d,r8d
   14001725d:	mov    rdx,QWORD PTR [rsp+0x2320]
   140017265:	call   QWORD PTR [rip+0x22dad]        # 0x14003a018
   14001726b:	mov    DWORD PTR [rsp+0x34],eax
   14001726f:	lea    rcx,[rsp+0x21c0]
   140017277:	call   0x1400168c0
   14001727c:	cmp    DWORD PTR [rsp+0x34],0x0
   140017281:	je     0x140017296
   140017283:	mov    DWORD PTR [rsp+0x30],0x204
   14001728b:	mov    ecx,DWORD PTR [rsp+0x34]
   14001728f:	call   0x1400179c0
   140017294:	jmp    0x1400172be
   140017296:	mov    rdx,QWORD PTR [rsp+0x2328]
   14001729e:	mov    rcx,QWORD PTR [rsp+0x2310]
   1400172a6:	call   0x140017a40
   1400172ab:	mov    DWORD PTR [rsp+0x3c],eax
   1400172af:	cmp    DWORD PTR [rsp+0x3c],0x0
   1400172b4:	jge    0x1400172bc
   1400172b6:	mov    eax,DWORD PTR [rsp+0x3c]
   1400172ba:	jmp    0x1400172be
   1400172bc:	xor    eax,eax
   1400172be:	mov    rcx,QWORD PTR [rsp+0x22f0]
   1400172c6:	xor    rcx,rsp
   1400172c9:	call   0x14001c500
   1400172ce:	add    rsp,0x2300
   1400172d5:	pop    rbx
   1400172d6:	ret    
   1400172d7:	int3   
   1400172d8:	int3   
   1400172d9:	int3   
   1400172da:	int3   
   1400172db:	int3   
   1400172dc:	int3   
   1400172dd:	int3   
   1400172de:	int3   
   1400172df:	int3   
   1400172e0:	mov    DWORD PTR [rsp+0x10],edx
   1400172e4:	mov    QWORD PTR [rsp+0x8],rcx
   1400172e9:	mov    rcx,QWORD PTR [rsp+0x8]
   1400172ee:	mov    eax,DWORD PTR [rsp+0x10]
   1400172f2:	mov    DWORD PTR [rcx],eax
   1400172f4:	mov    rax,QWORD PTR [rsp+0x8]
   1400172f9:	ret    
   1400172fa:	int3   
   1400172fb:	int3   
   1400172fc:	int3   
   1400172fd:	int3   
   1400172fe:	int3   
   1400172ff:	int3   
   140017300:	mov    DWORD PTR [rsp+0x8],ecx
   140017304:	sub    rsp,0x38
   140017308:	mov    edx,DWORD PTR [rsp+0x40]
   14001730c:	lea    rcx,[rsp+0x24]
   140017311:	call   0x1400172e0
   140017316:	mov    eax,DWORD PTR [rax]
   140017318:	mov    DWORD PTR [rsp+0x20],eax
   14001731c:	lea    rdx,[rip+0x307bd]        # 0x140047ae0
   140017323:	lea    rcx,[rsp+0x20]
   140017328:	call   0x14001e5c0
   14001732d:	add    rsp,0x38
   140017331:	ret    
   140017332:	int3   
   140017333:	int3   
   140017334:	int3   
   140017335:	int3   
   140017336:	int3   
   140017337:	int3   
   140017338:	int3   
   140017339:	int3   
   14001733a:	int3   
   14001733b:	int3   
   14001733c:	int3   
   14001733d:	int3   
   14001733e:	int3   
   14001733f:	int3   
   140017340:	mov    DWORD PTR [rsp+0x8],ecx
   140017344:	sub    rsp,0x38
   140017348:	mov    eax,DWORD PTR [rsp+0x40]
   14001734c:	mov    DWORD PTR [rsp+0x20],eax
   140017350:	cmp    DWORD PTR [rsp+0x20],0x0
   140017355:	je     0x14001738d
   140017357:	cmp    DWORD PTR [rsp+0x20],0xc
   14001735c:	je     0x140017375
   14001735e:	cmp    DWORD PTR [rsp+0x20],0x16
   140017363:	je     0x140017381
   140017365:	cmp    DWORD PTR [rsp+0x20],0x22
   14001736a:	je     0x140017381
   14001736c:	cmp    DWORD PTR [rsp+0x20],0x50
   140017371:	je     0x14001738d
   140017373:	jmp    0x14001738f
   140017375:	mov    ecx,0x8007000e
   14001737a:	call   0x140017300
   14001737f:	jmp    0x140017399
   140017381:	mov    ecx,0x80070057
   140017386:	call   0x140017300
   14001738b:	jmp    0x140017399
   14001738d:	jmp    0x140017399
   14001738f:	mov    ecx,0x80004005
   140017394:	call   0x140017300
   140017399:	mov    eax,DWORD PTR [rsp+0x40]
   14001739d:	add    rsp,0x38
   1400173a1:	ret    
   1400173a2:	int3   
   1400173a3:	int3   
   1400173a4:	int3   
   1400173a5:	int3   
   1400173a6:	int3   
   1400173a7:	int3   
   1400173a8:	int3   
   1400173a9:	int3   
   1400173aa:	int3   
   1400173ab:	int3   
   1400173ac:	int3   
   1400173ad:	int3   
   1400173ae:	int3   
   1400173af:	int3   
   1400173b0:	mov    QWORD PTR [rsp+0x20],r9
   1400173b5:	mov    QWORD PTR [rsp+0x18],r8
   1400173ba:	mov    QWORD PTR [rsp+0x10],rdx
   1400173bf:	mov    QWORD PTR [rsp+0x8],rcx
   1400173c4:	sub    rsp,0x28
   1400173c8:	mov    r9,QWORD PTR [rsp+0x48]
   1400173cd:	mov    r8,QWORD PTR [rsp+0x40]
   1400173d2:	mov    rdx,QWORD PTR [rsp+0x38]
   1400173d7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400173dc:	call   0x14001d580
   1400173e1:	mov    ecx,eax
   1400173e3:	call   0x140017340
   1400173e8:	add    rsp,0x28
   1400173ec:	ret    
   1400173ed:	int3   
   1400173ee:	int3   
   1400173ef:	int3   
   1400173f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400173f5:	mov    QWORD PTR [rsp+0x8],rcx
   1400173fa:	mov    eax,0x2048
   1400173ff:	call   0x140036570
   140017404:	sub    rsp,rax
   140017407:	mov    rax,QWORD PTR [rip+0x32052]        # 0x140049460
   14001740e:	xor    rax,rsp
   140017411:	mov    QWORD PTR [rsp+0x2030],rax
   140017419:	mov    rax,QWORD PTR [rsp+0x2058]
   140017421:	movzx  eax,WORD PTR [rax]
   140017424:	cmp    eax,0x3d
   140017427:	jne    0x1400174a5
   140017429:	mov    rdx,QWORD PTR [rsp+0x2058]
   140017431:	mov    rcx,QWORD PTR [rsp+0x2050]
   140017439:	call   0x140017a40
   14001743e:	mov    DWORD PTR [rsp+0x20],eax
   140017442:	cmp    DWORD PTR [rsp+0x20],0x0
   140017447:	jge    0x14001744f
   140017449:	mov    eax,DWORD PTR [rsp+0x20]
   14001744d:	jmp    0x1400174a7
   14001744f:	mov    rcx,QWORD PTR [rsp+0x2050]
   140017457:	call   0x140018780
   14001745c:	lea    rdx,[rsp+0x30]
   140017461:	mov    rcx,QWORD PTR [rsp+0x2050]
   140017469:	call   0x140017a40
   14001746e:	mov    DWORD PTR [rsp+0x20],eax
   140017472:	cmp    DWORD PTR [rsp+0x20],0x0
   140017477:	jge    0x14001747f
   140017479:	mov    eax,DWORD PTR [rsp+0x20]
   14001747d:	jmp    0x1400174a7
   14001747f:	mov    rdx,QWORD PTR [rsp+0x2058]
   140017487:	mov    rcx,QWORD PTR [rsp+0x2050]
   14001748f:	call   0x140017a40
   140017494:	mov    DWORD PTR [rsp+0x20],eax
   140017498:	cmp    DWORD PTR [rsp+0x20],0x0
   14001749d:	jge    0x1400174a5
   14001749f:	mov    eax,DWORD PTR [rsp+0x20]
   1400174a3:	jmp    0x1400174a7
   1400174a5:	xor    eax,eax
   1400174a7:	mov    rcx,QWORD PTR [rsp+0x2030]
   1400174af:	xor    rcx,rsp
   1400174b2:	call   0x14001c500
   1400174b7:	add    rsp,0x2048
   1400174be:	ret    
   1400174bf:	int3   
   1400174c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400174c5:	mov    QWORD PTR [rsp+0x8],rcx
   1400174ca:	sub    rsp,0x38
   1400174ce:	mov    DWORD PTR [rsp+0x20],0x0
   1400174d6:	jmp    0x1400174e3
   1400174d8:	mov    eax,DWORD PTR [rsp+0x20]
   1400174dc:	add    eax,0x1
   1400174df:	mov    DWORD PTR [rsp+0x20],eax
   1400174e3:	cmp    DWORD PTR [rsp+0x20],0xc
   1400174e8:	jge    0x14001750f
   1400174ea:	movsxd rax,DWORD PTR [rsp+0x20]
   1400174ef:	lea    rdx,[rip+0x283ba]        # 0x14003f8b0
   1400174f6:	mov    rdx,QWORD PTR [rdx+rax*8]
   1400174fa:	mov    rcx,QWORD PTR [rsp+0x48]
   1400174ff:	call   QWORD PTR [rip+0x22ba3]        # 0x14003a0a8
   140017505:	test   eax,eax
   140017507:	jne    0x14001750d
   140017509:	xor    eax,eax
   14001750b:	jmp    0x140017514
   14001750d:	jmp    0x1400174d8
   14001750f:	mov    eax,0x1
   140017514:	add    rsp,0x38
   140017518:	ret    
   140017519:	int3   
   14001751a:	int3   
   14001751b:	int3   
   14001751c:	int3   
   14001751d:	int3   
   14001751e:	int3   
   14001751f:	int3   
   140017520:	mov    DWORD PTR [rsp+0x20],r9d
   140017525:	mov    QWORD PTR [rsp+0x18],r8
   14001752a:	mov    QWORD PTR [rsp+0x10],rdx
   14001752f:	mov    QWORD PTR [rsp+0x8],rcx
   140017534:	sub    rsp,0x48
   140017538:	xor    eax,eax
   14001753a:	test   eax,eax
   14001753c:	jne    0x140017538
   14001753e:	xor    eax,eax
   140017540:	test   eax,eax
   140017542:	jne    0x140017538
   140017544:	mov    QWORD PTR [rsp+0x30],0x0
   14001754d:	lea    rax,[rsp+0x30]
   140017552:	mov    QWORD PTR [rsp+0x20],rax
   140017557:	mov    r9d,DWORD PTR [rsp+0x68]
   14001755c:	xor    r8d,r8d
   14001755f:	mov    rdx,QWORD PTR [rsp+0x60]
   140017564:	mov    rcx,QWORD PTR [rsp+0x58]
   140017569:	call   QWORD PTR [rip+0x22ab1]        # 0x14003a020
   14001756f:	mov    DWORD PTR [rsp+0x38],eax
   140017573:	cmp    DWORD PTR [rsp+0x38],0x0
   140017578:	jne    0x1400175a7
   14001757a:	mov    rcx,QWORD PTR [rsp+0x50]
   14001757f:	call   0x1400177f0
   140017584:	mov    DWORD PTR [rsp+0x38],eax
   140017588:	mov    rcx,QWORD PTR [rsp+0x50]
   14001758d:	mov    rax,QWORD PTR [rsp+0x30]
   140017592:	mov    QWORD PTR [rcx],rax
   140017595:	mov    ecx,DWORD PTR [rsp+0x68]
   140017599:	and    ecx,0x300
   14001759f:	mov    rax,QWORD PTR [rsp+0x50]
   1400175a4:	mov    DWORD PTR [rax+0x8],ecx
   1400175a7:	mov    eax,DWORD PTR [rsp+0x38]
   1400175ab:	add    rsp,0x48
   1400175af:	ret    
   1400175b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400175b5:	mov    QWORD PTR [rsp+0x8],rcx
   1400175ba:	sub    rsp,0x298
   1400175c1:	mov    rax,QWORD PTR [rip+0x31e98]        # 0x140049460
   1400175c8:	xor    rax,rsp
   1400175cb:	mov    QWORD PTR [rsp+0x280],rax
   1400175d3:	lea    rcx,[rsp+0x50]
   1400175d8:	call   0x1400177c0
   1400175dd:	mov    r11,QWORD PTR [rsp+0x2a0]
   1400175e5:	mov    r9d,DWORD PTR [r11+0x8]
   1400175e9:	or     r9d,0x2001f
   1400175f0:	mov    r8,QWORD PTR [rsp+0x2a8]
   1400175f8:	mov    rdx,QWORD PTR [rsp+0x2a0]
   140017600:	mov    rdx,QWORD PTR [rdx]
   140017603:	lea    rcx,[rsp+0x50]
   140017608:	call   0x140017520
   14001760d:	mov    DWORD PTR [rsp+0x60],eax
   140017611:	cmp    DWORD PTR [rsp+0x60],0x0
   140017616:	je     0x140017639
   140017618:	mov    eax,DWORD PTR [rsp+0x60]
   14001761c:	mov    DWORD PTR [rsp+0x270],eax
   140017623:	lea    rcx,[rsp+0x50]
   140017628:	call   0x140017840
   14001762d:	mov    eax,DWORD PTR [rsp+0x270]
   140017634:	jmp    0x1400176fd
   140017639:	mov    DWORD PTR [rsp+0x40],0x100
   140017641:	lea    rax,[rsp+0x48]
   140017646:	mov    QWORD PTR [rsp+0x38],rax
   14001764b:	mov    QWORD PTR [rsp+0x30],0x0
   140017654:	mov    QWORD PTR [rsp+0x28],0x0
   14001765d:	mov    QWORD PTR [rsp+0x20],0x0
   140017666:	lea    r9,[rsp+0x40]
   14001766b:	lea    r8,[rsp+0x70]
   140017670:	xor    edx,edx
   140017672:	mov    rcx,QWORD PTR [rsp+0x50]
   140017677:	call   QWORD PTR [rip+0x229ab]        # 0x14003a028
   14001767d:	test   eax,eax
   14001767f:	jne    0x1400176c6
   140017681:	lea    rdx,[rsp+0x70]
   140017686:	lea    rcx,[rsp+0x50]
   14001768b:	call   0x1400175b0
   140017690:	mov    DWORD PTR [rsp+0x60],eax
   140017694:	cmp    DWORD PTR [rsp+0x60],0x0
   140017699:	je     0x1400176b9
   14001769b:	mov    eax,DWORD PTR [rsp+0x60]
   14001769f:	mov    DWORD PTR [rsp+0x274],eax
   1400176a6:	lea    rcx,[rsp+0x50]
   1400176ab:	call   0x140017840
   1400176b0:	mov    eax,DWORD PTR [rsp+0x274]
   1400176b7:	jmp    0x1400176fd
   1400176b9:	mov    DWORD PTR [rsp+0x40],0x100
   1400176c1:	jmp    0x140017641
   1400176c6:	lea    rcx,[rsp+0x50]
   1400176cb:	call   0x1400177f0
   1400176d0:	mov    rdx,QWORD PTR [rsp+0x2a8]
   1400176d8:	mov    rcx,QWORD PTR [rsp+0x2a0]
   1400176e0:	call   0x140017890
   1400176e5:	mov    DWORD PTR [rsp+0x278],eax
   1400176ec:	lea    rcx,[rsp+0x50]
   1400176f1:	call   0x140017840
   1400176f6:	mov    eax,DWORD PTR [rsp+0x278]
   1400176fd:	mov    rcx,QWORD PTR [rsp+0x280]
   140017705:	xor    rcx,rsp
   140017708:	call   0x14001c500
   14001770d:	add    rsp,0x298
   140017714:	ret    
   140017715:	int3   
   140017716:	int3   
   140017717:	int3   
   140017718:	int3   
   140017719:	int3   
   14001771a:	int3   
   14001771b:	int3   
   14001771c:	int3   
   14001771d:	int3   
   14001771e:	int3   
   14001771f:	int3   
   140017720:	mov    QWORD PTR [rsp+0x10],rdx
   140017725:	mov    QWORD PTR [rsp+0x8],rcx
   14001772a:	sub    rsp,0x78
   14001772e:	mov    DWORD PTR [rsp+0x60],0x0
   140017736:	mov    QWORD PTR [rsp+0x58],0x0
   14001773f:	mov    QWORD PTR [rsp+0x50],0x0
   140017748:	mov    QWORD PTR [rsp+0x48],0x0
   140017751:	mov    QWORD PTR [rsp+0x40],0x0
   14001775a:	mov    QWORD PTR [rsp+0x38],0x0
   140017763:	mov    QWORD PTR [rsp+0x30],0x0
   14001776c:	mov    QWORD PTR [rsp+0x28],0x0
   140017775:	lea    rax,[rsp+0x60]
   14001777a:	mov    QWORD PTR [rsp+0x20],rax
   14001777f:	xor    r9d,r9d
   140017782:	xor    r8d,r8d
   140017785:	xor    edx,edx
   140017787:	mov    rcx,QWORD PTR [rsp+0x88]
   14001778f:	call   QWORD PTR [rip+0x2289b]        # 0x14003a030
   140017795:	test   eax,eax
   140017797:	je     0x14001779d
   140017799:	xor    eax,eax
   14001779b:	jmp    0x1400177ba
   14001779d:	cmp    DWORD PTR [rsp+0x60],0x0
   1400177a2:	jbe    0x1400177ae
   1400177a4:	mov    DWORD PTR [rsp+0x64],0x1
   1400177ac:	jmp    0x1400177b6
   1400177ae:	mov    DWORD PTR [rsp+0x64],0x0
   1400177b6:	mov    eax,DWORD PTR [rsp+0x64]
   1400177ba:	add    rsp,0x78
   1400177be:	ret    
   1400177bf:	int3   
   1400177c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400177c5:	mov    rax,QWORD PTR [rsp+0x8]
   1400177ca:	mov    QWORD PTR [rax],0x0
   1400177d1:	mov    rax,QWORD PTR [rsp+0x8]
   1400177d6:	mov    DWORD PTR [rax+0x8],0x0
   1400177dd:	mov    rax,QWORD PTR [rsp+0x8]
   1400177e2:	ret    
   1400177e3:	int3   
   1400177e4:	int3   
   1400177e5:	int3   
   1400177e6:	int3   
   1400177e7:	int3   
   1400177e8:	int3   
   1400177e9:	int3   
   1400177ea:	int3   
   1400177eb:	int3   
   1400177ec:	int3   
   1400177ed:	int3   
   1400177ee:	int3   
   1400177ef:	int3   
   1400177f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400177f5:	sub    rsp,0x38
   1400177f9:	mov    DWORD PTR [rsp+0x20],0x0
   140017801:	mov    rax,QWORD PTR [rsp+0x40]
   140017806:	cmp    QWORD PTR [rax],0x0
   14001780a:	je     0x14001782a
   14001780c:	mov    rcx,QWORD PTR [rsp+0x40]
   140017811:	mov    rcx,QWORD PTR [rcx]
   140017814:	call   QWORD PTR [rip+0x2281e]        # 0x14003a038
   14001781a:	mov    DWORD PTR [rsp+0x20],eax
   14001781e:	mov    rax,QWORD PTR [rsp+0x40]
   140017823:	mov    QWORD PTR [rax],0x0
   14001782a:	mov    rax,QWORD PTR [rsp+0x40]
   14001782f:	mov    DWORD PTR [rax+0x8],0x0
   140017836:	mov    eax,DWORD PTR [rsp+0x20]
   14001783a:	add    rsp,0x38
   14001783e:	ret    
   14001783f:	int3   
   140017840:	mov    QWORD PTR [rsp+0x8],rcx
   140017845:	sub    rsp,0x28
   140017849:	mov    rcx,QWORD PTR [rsp+0x30]
   14001784e:	call   0x1400177f0
   140017853:	add    rsp,0x28
   140017857:	ret    
   140017858:	int3   
   140017859:	int3   
   14001785a:	int3   
   14001785b:	int3   
   14001785c:	int3   
   14001785d:	int3   
   14001785e:	int3   
   14001785f:	int3   
   140017860:	mov    QWORD PTR [rsp+0x10],rdx
   140017865:	mov    QWORD PTR [rsp+0x8],rcx
   14001786a:	xor    eax,eax
   14001786c:	test   eax,eax
   14001786e:	jne    0x14001786a
   140017870:	xor    eax,eax
   140017872:	test   eax,eax
   140017874:	jne    0x14001786a
   140017876:	mov    rcx,QWORD PTR [rsp+0x8]
   14001787b:	mov    rax,QWORD PTR [rsp+0x10]
   140017880:	mov    QWORD PTR [rcx],rax
   140017883:	mov    rax,QWORD PTR [rsp+0x8]
   140017888:	mov    DWORD PTR [rax+0x8],0x0
   14001788f:	ret    
   140017890:	mov    QWORD PTR [rsp+0x10],rdx
   140017895:	mov    QWORD PTR [rsp+0x8],rcx
   14001789a:	sub    rsp,0x38
   14001789e:	xor    eax,eax
   1400178a0:	test   eax,eax
   1400178a2:	jne    0x14001789e
   1400178a4:	xor    eax,eax
   1400178a6:	test   eax,eax
   1400178a8:	jne    0x14001789e
   1400178aa:	movzx  eax,BYTE PTR [rip+0x3520f]        # 0x14004cac0
   1400178b1:	test   eax,eax
   1400178b3:	jne    0x1400178ef
   1400178b5:	lea    rcx,[rip+0x27fbc]        # 0x14003f878
   1400178bc:	call   QWORD PTR [rip+0x227be]        # 0x14003a080
   1400178c2:	mov    QWORD PTR [rsp+0x20],rax
   1400178c7:	cmp    QWORD PTR [rsp+0x20],0x0
   1400178cd:	je     0x1400178e8
   1400178cf:	lea    rdx,[rip+0x27fc2]        # 0x14003f898
   1400178d6:	mov    rcx,QWORD PTR [rsp+0x20]
   1400178db:	call   QWORD PTR [rip+0x22797]        # 0x14003a078
   1400178e1:	mov    QWORD PTR [rip+0x351e0],rax        # 0x14004cac8
   1400178e8:	mov    BYTE PTR [rip+0x351d1],0x1        # 0x14004cac0
   1400178ef:	cmp    QWORD PTR [rip+0x351d1],0x0        # 0x14004cac8
   1400178f7:	je     0x14001791a
   1400178f9:	xor    r9d,r9d
   1400178fc:	mov    rax,QWORD PTR [rsp+0x40]
   140017901:	mov    r8d,DWORD PTR [rax+0x8]
   140017905:	mov    rdx,QWORD PTR [rsp+0x48]
   14001790a:	mov    rcx,QWORD PTR [rsp+0x40]
   14001790f:	mov    rcx,QWORD PTR [rcx]
   140017912:	call   QWORD PTR [rip+0x351b0]        # 0x14004cac8
   140017918:	jmp    0x14001792d
   14001791a:	mov    rdx,QWORD PTR [rsp+0x48]
   14001791f:	mov    rcx,QWORD PTR [rsp+0x40]
   140017924:	mov    rcx,QWORD PTR [rcx]
   140017927:	call   QWORD PTR [rip+0x22713]        # 0x14003a040
   14001792d:	add    rsp,0x38
   140017931:	ret    
   140017932:	int3   
   140017933:	int3   
   140017934:	int3   
   140017935:	int3   
   140017936:	int3   
   140017937:	int3   
   140017938:	int3   
   140017939:	int3   
   14001793a:	int3   
   14001793b:	int3   
   14001793c:	int3   
   14001793d:	int3   
   14001793e:	int3   
   14001793f:	int3   
   140017940:	mov    QWORD PTR [rsp+0x8],rcx
   140017945:	sub    rsp,0x18
   140017949:	mov    rax,QWORD PTR [rsp+0x20]
   14001794e:	mov    rax,QWORD PTR [rax]
   140017951:	mov    QWORD PTR [rsp],rax
   140017955:	mov    rax,QWORD PTR [rsp+0x20]
   14001795a:	mov    QWORD PTR [rax],0x0
   140017961:	mov    rax,QWORD PTR [rsp+0x20]
   140017966:	mov    DWORD PTR [rax+0x8],0x0
   14001796d:	mov    rax,QWORD PTR [rsp]
   140017971:	add    rsp,0x18
   140017975:	ret    
   140017976:	int3   
   140017977:	int3   
   140017978:	int3   
   140017979:	int3   
   14001797a:	int3   
   14001797b:	int3   
   14001797c:	int3   
   14001797d:	int3   
   14001797e:	int3   
   14001797f:	int3   
   140017980:	mov    DWORD PTR [rsp+0x8],ecx
   140017984:	sub    rsp,0x18
   140017988:	cmp    DWORD PTR [rsp+0x20],0x0
   14001798d:	jg     0x140017998
   14001798f:	mov    eax,DWORD PTR [rsp+0x20]
   140017993:	mov    DWORD PTR [rsp],eax
   140017996:	jmp    0x1400179ae
   140017998:	mov    eax,DWORD PTR [rsp+0x20]
   14001799c:	and    eax,0xffff
   1400179a1:	or     eax,0x70000
   1400179a6:	or     eax,0x80000000
   1400179ab:	mov    DWORD PTR [rsp],eax
   1400179ae:	mov    eax,DWORD PTR [rsp]
   1400179b1:	add    rsp,0x18
   1400179b5:	ret    
   1400179b6:	int3   
   1400179b7:	int3   
   1400179b8:	int3   
   1400179b9:	int3   
   1400179ba:	int3   
   1400179bb:	int3   
   1400179bc:	int3   
   1400179bd:	int3   
   1400179be:	int3   
   1400179bf:	int3   
   1400179c0:	mov    DWORD PTR [rsp+0x8],ecx
   1400179c4:	sub    rsp,0x28
   1400179c8:	mov    ecx,DWORD PTR [rsp+0x30]
   1400179cc:	call   0x140017980
   1400179d1:	add    rsp,0x28
   1400179d5:	ret    
   1400179d6:	int3   
   1400179d7:	int3   
   1400179d8:	int3   
   1400179d9:	int3   
   1400179da:	int3   
   1400179db:	int3   
   1400179dc:	int3   
   1400179dd:	int3   
   1400179de:	int3   
   1400179df:	int3   
   1400179e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400179e5:	sub    rsp,0x38
   1400179e9:	mov    rax,QWORD PTR [rsp+0x40]
   1400179ee:	mov    rax,QWORD PTR [rax]
   1400179f1:	movzx  eax,WORD PTR [rax]
   1400179f4:	cmp    eax,0x27
   1400179f7:	jne    0x140017a19
   1400179f9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400179fe:	mov    rcx,QWORD PTR [rcx]
   140017a01:	call   QWORD PTR [rip+0x229d1]        # 0x14003a3d8
   140017a07:	movzx  eax,WORD PTR [rax]
   140017a0a:	cmp    eax,0x27
   140017a0d:	je     0x140017a19
   140017a0f:	mov    DWORD PTR [rsp+0x20],0x1
   140017a17:	jmp    0x140017a21
   140017a19:	mov    DWORD PTR [rsp+0x20],0x0
   140017a21:	mov    eax,DWORD PTR [rsp+0x20]
   140017a25:	add    rsp,0x38
   140017a29:	ret    
   140017a2a:	int3   
   140017a2b:	int3   
   140017a2c:	int3   
   140017a2d:	int3   
   140017a2e:	int3   
   140017a2f:	int3   
   140017a30:	mov    DWORD PTR [rsp+0x10],edx
   140017a34:	mov    QWORD PTR [rsp+0x8],rcx
   140017a39:	mov    eax,0x80020009
   140017a3e:	ret    
   140017a3f:	int3   
   140017a40:	mov    QWORD PTR [rsp+0x10],rdx
   140017a45:	mov    QWORD PTR [rsp+0x8],rcx
   140017a4a:	sub    rsp,0x68
   140017a4e:	mov    rcx,QWORD PTR [rsp+0x70]
   140017a53:	call   0x140018780
   140017a58:	mov    rax,QWORD PTR [rsp+0x70]
   140017a5d:	mov    rax,QWORD PTR [rax]
   140017a60:	movzx  eax,WORD PTR [rax]
   140017a63:	test   eax,eax
   140017a65:	jne    0x140017a7b
   140017a67:	mov    edx,0x203
   140017a6c:	mov    rcx,QWORD PTR [rsp+0x70]
   140017a71:	call   0x140017a30
   140017a76:	jmp    0x140017d0a
   140017a7b:	mov    rax,QWORD PTR [rsp+0x78]
   140017a80:	mov    QWORD PTR [rsp+0x20],rax
   140017a85:	mov    rax,QWORD PTR [rsp+0x70]
   140017a8a:	mov    rax,QWORD PTR [rax]
   140017a8d:	movzx  eax,WORD PTR [rax]
   140017a90:	cmp    eax,0x27
   140017a93:	jne    0x140017c0e
   140017a99:	mov    rcx,QWORD PTR [rsp+0x70]
   140017a9e:	mov    rcx,QWORD PTR [rcx]
   140017aa1:	call   QWORD PTR [rip+0x22931]        # 0x14003a3d8
   140017aa7:	mov    r11,rax
   140017aaa:	mov    rax,QWORD PTR [rsp+0x70]
   140017aaf:	mov    QWORD PTR [rax],r11
   140017ab2:	mov    rax,QWORD PTR [rsp+0x70]
   140017ab7:	mov    rax,QWORD PTR [rax]
   140017aba:	movzx  eax,WORD PTR [rax]
   140017abd:	test   eax,eax
   140017abf:	je     0x140017bc3
   140017ac5:	mov    rcx,QWORD PTR [rsp+0x70]
   140017aca:	call   0x1400179e0
   140017acf:	test   eax,eax
   140017ad1:	jne    0x140017bc3
   140017ad7:	mov    rax,QWORD PTR [rsp+0x70]
   140017adc:	mov    rax,QWORD PTR [rax]
   140017adf:	movzx  eax,WORD PTR [rax]
   140017ae2:	cmp    eax,0x27
   140017ae5:	jne    0x140017b00
   140017ae7:	mov    rcx,QWORD PTR [rsp+0x70]
   140017aec:	mov    rcx,QWORD PTR [rcx]
   140017aef:	call   QWORD PTR [rip+0x228e3]        # 0x14003a3d8
   140017af5:	mov    r11,rax
   140017af8:	mov    rax,QWORD PTR [rsp+0x70]
   140017afd:	mov    QWORD PTR [rax],r11
   140017b00:	mov    rax,QWORD PTR [rsp+0x70]
   140017b05:	mov    rax,QWORD PTR [rax]
   140017b08:	mov    QWORD PTR [rsp+0x28],rax
   140017b0d:	mov    rcx,QWORD PTR [rsp+0x70]
   140017b12:	mov    rcx,QWORD PTR [rcx]
   140017b15:	call   QWORD PTR [rip+0x228bd]        # 0x14003a3d8
   140017b1b:	mov    r11,rax
   140017b1e:	mov    rax,QWORD PTR [rsp+0x70]
   140017b23:	mov    QWORD PTR [rax],r11
   140017b26:	mov    rax,QWORD PTR [rsp+0x70]
   140017b2b:	mov    rcx,QWORD PTR [rsp+0x28]
   140017b30:	mov    rax,QWORD PTR [rax]
   140017b33:	sub    rax,rcx
   140017b36:	sar    rax,1
   140017b39:	mov    QWORD PTR [rsp+0x30],rax
   140017b3e:	mov    rcx,QWORD PTR [rsp+0x78]
   140017b43:	mov    rax,QWORD PTR [rsp+0x30]
   140017b48:	lea    rcx,[rcx+rax*2+0x2]
   140017b4d:	mov    rax,QWORD PTR [rsp+0x20]
   140017b52:	add    rax,0x2000
   140017b58:	cmp    rcx,rax
   140017b5b:	jb     0x140017b71
   140017b5d:	mov    edx,0x215
   140017b62:	mov    rcx,QWORD PTR [rsp+0x70]
   140017b67:	call   0x140017a30
   140017b6c:	jmp    0x140017d0a
   140017b71:	mov    DWORD PTR [rsp+0x38],0x0
   140017b79:	jmp    0x140017ba2
   140017b7b:	mov    eax,DWORD PTR [rsp+0x38]
   140017b7f:	add    eax,0x1
   140017b82:	mov    DWORD PTR [rsp+0x38],eax
   140017b86:	mov    rax,QWORD PTR [rsp+0x78]
   140017b8b:	add    rax,0x2
   140017b8f:	mov    QWORD PTR [rsp+0x78],rax
   140017b94:	mov    rax,QWORD PTR [rsp+0x28]
   140017b99:	add    rax,0x2
   140017b9d:	mov    QWORD PTR [rsp+0x28],rax
   140017ba2:	mov    eax,DWORD PTR [rsp+0x30]
   140017ba6:	cmp    DWORD PTR [rsp+0x38],eax
   140017baa:	jge    0x140017bbe
   140017bac:	mov    rcx,QWORD PTR [rsp+0x78]
   140017bb1:	mov    rax,QWORD PTR [rsp+0x28]
   140017bb6:	movzx  eax,WORD PTR [rax]
   140017bb9:	mov    WORD PTR [rcx],ax
   140017bbc:	jmp    0x140017b7b
   140017bbe:	jmp    0x140017ab2
   140017bc3:	mov    rax,QWORD PTR [rsp+0x70]
   140017bc8:	mov    rax,QWORD PTR [rax]
   140017bcb:	movzx  eax,WORD PTR [rax]
   140017bce:	test   eax,eax
   140017bd0:	jne    0x140017be6
   140017bd2:	mov    edx,0x203
   140017bd7:	mov    rcx,QWORD PTR [rsp+0x70]
   140017bdc:	call   0x140017a30
   140017be1:	jmp    0x140017d0a
   140017be6:	xor    ecx,ecx
   140017be8:	mov    rax,QWORD PTR [rsp+0x78]
   140017bed:	mov    WORD PTR [rax],cx
   140017bf0:	mov    rcx,QWORD PTR [rsp+0x70]
   140017bf5:	mov    rcx,QWORD PTR [rcx]
   140017bf8:	call   QWORD PTR [rip+0x227da]        # 0x14003a3d8
   140017bfe:	mov    r11,rax
   140017c01:	mov    rax,QWORD PTR [rsp+0x70]
   140017c06:	mov    QWORD PTR [rax],r11
   140017c09:	jmp    0x140017d08
   140017c0e:	mov    rax,QWORD PTR [rsp+0x70]
   140017c13:	mov    rax,QWORD PTR [rax]
   140017c16:	movzx  eax,WORD PTR [rax]
   140017c19:	test   eax,eax
   140017c1b:	je     0x140017cfe
   140017c21:	mov    rax,QWORD PTR [rsp+0x70]
   140017c26:	mov    rax,QWORD PTR [rax]
   140017c29:	movzx  edx,WORD PTR [rax]
   140017c2c:	mov    rcx,QWORD PTR [rsp+0x70]
   140017c31:	call   0x140018740
   140017c36:	test   eax,eax
   140017c38:	jne    0x140017cfe
   140017c3e:	mov    rax,QWORD PTR [rsp+0x70]
   140017c43:	mov    rax,QWORD PTR [rax]
   140017c46:	mov    QWORD PTR [rsp+0x40],rax
   140017c4b:	mov    rcx,QWORD PTR [rsp+0x70]
   140017c50:	mov    rcx,QWORD PTR [rcx]
   140017c53:	call   QWORD PTR [rip+0x2277f]        # 0x14003a3d8
   140017c59:	mov    r11,rax
   140017c5c:	mov    rax,QWORD PTR [rsp+0x70]
   140017c61:	mov    QWORD PTR [rax],r11
   140017c64:	mov    rax,QWORD PTR [rsp+0x70]
   140017c69:	mov    rcx,QWORD PTR [rsp+0x40]
   140017c6e:	mov    rax,QWORD PTR [rax]
   140017c71:	sub    rax,rcx
   140017c74:	sar    rax,1
   140017c77:	mov    QWORD PTR [rsp+0x48],rax
   140017c7c:	mov    rcx,QWORD PTR [rsp+0x78]
   140017c81:	mov    rax,QWORD PTR [rsp+0x48]
   140017c86:	lea    rcx,[rcx+rax*2+0x2]
   140017c8b:	mov    rax,QWORD PTR [rsp+0x20]
   140017c90:	add    rax,0x2000
   140017c96:	cmp    rcx,rax
   140017c99:	jb     0x140017cac
   140017c9b:	mov    edx,0x215
   140017ca0:	mov    rcx,QWORD PTR [rsp+0x70]
   140017ca5:	call   0x140017a30
   140017caa:	jmp    0x140017d0a
   140017cac:	mov    DWORD PTR [rsp+0x50],0x0
   140017cb4:	jmp    0x140017cdd
   140017cb6:	mov    eax,DWORD PTR [rsp+0x50]
   140017cba:	add    eax,0x1
   140017cbd:	mov    DWORD PTR [rsp+0x50],eax
   140017cc1:	mov    rax,QWORD PTR [rsp+0x78]
   140017cc6:	add    rax,0x2
   140017cca:	mov    QWORD PTR [rsp+0x78],rax
   140017ccf:	mov    rax,QWORD PTR [rsp+0x40]
   140017cd4:	add    rax,0x2
   140017cd8:	mov    QWORD PTR [rsp+0x40],rax
   140017cdd:	mov    eax,DWORD PTR [rsp+0x48]
   140017ce1:	cmp    DWORD PTR [rsp+0x50],eax
   140017ce5:	jge    0x140017cf9
   140017ce7:	mov    rcx,QWORD PTR [rsp+0x78]
   140017cec:	mov    rax,QWORD PTR [rsp+0x40]
   140017cf1:	movzx  eax,WORD PTR [rax]
   140017cf4:	mov    WORD PTR [rcx],ax
   140017cf7:	jmp    0x140017cb6
   140017cf9:	jmp    0x140017c0e
   140017cfe:	xor    ecx,ecx
   140017d00:	mov    rax,QWORD PTR [rsp+0x78]
   140017d05:	mov    WORD PTR [rax],cx
   140017d08:	xor    eax,eax
   140017d0a:	add    rsp,0x68
   140017d0e:	ret    
   140017d0f:	int3   
   140017d10:	mov    DWORD PTR [rsp+0x20],r9d
   140017d15:	mov    QWORD PTR [rsp+0x18],r8
   140017d1a:	mov    QWORD PTR [rsp+0x10],rdx
   140017d1f:	mov    QWORD PTR [rsp+0x8],rcx
   140017d24:	mov    eax,0x2318
   140017d29:	call   0x140036570
   140017d2e:	sub    rsp,rax
   140017d31:	mov    QWORD PTR [rsp+0x22f8],0xfffffffffffffffe
   140017d3d:	mov    rax,QWORD PTR [rip+0x3171c]        # 0x140049460
   140017d44:	xor    rax,rsp
   140017d47:	mov    QWORD PTR [rsp+0x2308],rax
   140017d4f:	lea    rcx,[rsp+0x48]
   140017d54:	call   0x1400177c0
   140017d59:	nop
   140017d5a:	mov    DWORD PTR [rsp+0x40],0x1
   140017d62:	mov    eax,DWORD PTR [rsp+0x2340]
   140017d69:	mov    DWORD PTR [rsp+0x5c],eax
   140017d6d:	mov    DWORD PTR [rsp+0x60],0x0
   140017d75:	mov    rdx,QWORD PTR [rsp+0x2328]
   140017d7d:	mov    rcx,QWORD PTR [rsp+0x2320]
   140017d85:	call   0x140017a40
   140017d8a:	mov    DWORD PTR [rsp+0x60],eax
   140017d8e:	cmp    DWORD PTR [rsp+0x60],0x0
   140017d93:	jge    0x140017db6
   140017d95:	mov    eax,DWORD PTR [rsp+0x60]
   140017d99:	mov    DWORD PTR [rsp+0x22d8],eax
   140017da0:	lea    rcx,[rsp+0x48]
   140017da5:	call   0x140017840
   140017daa:	mov    eax,DWORD PTR [rsp+0x22d8]
   140017db1:	jmp    0x140018724
   140017db6:	mov    rax,QWORD PTR [rsp+0x2328]
   140017dbe:	movzx  eax,WORD PTR [rax]
   140017dc1:	cmp    eax,0x7d
   140017dc4:	je     0x140018708
   140017dca:	mov    DWORD PTR [rsp+0x40],0x1
   140017dd2:	mov    rdx,QWORD PTR [rip+0x264d7]        # 0x14003e2b0
   140017dd9:	mov    rcx,QWORD PTR [rsp+0x2328]
   140017de1:	call   QWORD PTR [rip+0x222c1]        # 0x14003a0a8
   140017de7:	test   eax,eax
   140017de9:	jne    0x140017df8
   140017deb:	mov    DWORD PTR [rsp+0x2300],0x1
   140017df6:	jmp    0x140017e03
   140017df8:	mov    DWORD PTR [rsp+0x2300],0x0
   140017e03:	mov    eax,DWORD PTR [rsp+0x2300]
   140017e0a:	mov    DWORD PTR [rsp+0x280],eax
   140017e11:	mov    rdx,QWORD PTR [rip+0x26460]        # 0x14003e278
   140017e18:	mov    rcx,QWORD PTR [rsp+0x2328]
   140017e20:	call   QWORD PTR [rip+0x22282]        # 0x14003a0a8
   140017e26:	test   eax,eax
   140017e28:	je     0x140017e38
   140017e2a:	cmp    DWORD PTR [rsp+0x280],0x0
   140017e32:	je     0x140017fa8
   140017e38:	mov    rdx,QWORD PTR [rsp+0x2328]
   140017e40:	mov    rcx,QWORD PTR [rsp+0x2320]
   140017e48:	call   0x140017a40
   140017e4d:	mov    DWORD PTR [rsp+0x60],eax
   140017e51:	cmp    DWORD PTR [rsp+0x60],0x0
   140017e56:	jge    0x140017e5d
   140017e58:	jmp    0x140018708
   140017e5d:	cmp    DWORD PTR [rsp+0x2338],0x0
   140017e65:	je     0x140017fa8
   140017e6b:	lea    rcx,[rsp+0x288]
   140017e73:	call   0x1400177c0
   140017e78:	mov    dx,0x5c
   140017e7c:	mov    rcx,QWORD PTR [rsp+0x2328]
   140017e84:	call   0x1400165c0
   140017e89:	test   rax,rax
   140017e8c:	je     0x140017ecb
   140017e8e:	mov    edx,0x211
   140017e93:	mov    rcx,QWORD PTR [rsp+0x2320]
   140017e9b:	call   0x140017a30
   140017ea0:	mov    DWORD PTR [rsp+0x22dc],eax
   140017ea7:	lea    rcx,[rsp+0x288]
   140017eaf:	call   0x140017840
   140017eb4:	nop
   140017eb5:	lea    rcx,[rsp+0x48]
   140017eba:	call   0x140017840
   140017ebf:	mov    eax,DWORD PTR [rsp+0x22dc]
   140017ec6:	jmp    0x140018724
   140017ecb:	mov    rdx,QWORD PTR [rsp+0x2328]
   140017ed3:	mov    rcx,QWORD PTR [rsp+0x2320]
   140017edb:	call   0x1400174c0
   140017ee0:	test   eax,eax
   140017ee2:	je     0x140017f1b
   140017ee4:	mov    rdx,QWORD PTR [rsp+0x2330]
   140017eec:	lea    rcx,[rsp+0x288]
   140017ef4:	call   0x140017860
   140017ef9:	mov    rdx,QWORD PTR [rsp+0x2328]
   140017f01:	lea    rcx,[rsp+0x288]
   140017f09:	call   0x1400175b0
   140017f0e:	lea    rcx,[rsp+0x288]
   140017f16:	call   0x140017940
   140017f1b:	cmp    DWORD PTR [rsp+0x280],0x0
   140017f23:	je     0x140017f9b
   140017f25:	mov    rdx,QWORD PTR [rsp+0x2328]
   140017f2d:	mov    rcx,QWORD PTR [rsp+0x2320]
   140017f35:	call   0x140017a40
   140017f3a:	mov    DWORD PTR [rsp+0x60],eax
   140017f3e:	cmp    DWORD PTR [rsp+0x60],0x0
   140017f43:	jge    0x140017f57
   140017f45:	lea    rcx,[rsp+0x288]
   140017f4d:	call   0x140017840
   140017f52:	jmp    0x140018708
   140017f57:	mov    rdx,QWORD PTR [rsp+0x2328]
   140017f5f:	mov    rcx,QWORD PTR [rsp+0x2320]
   140017f67:	call   0x1400173f0
   140017f6c:	mov    DWORD PTR [rsp+0x60],eax
   140017f70:	cmp    DWORD PTR [rsp+0x60],0x0
   140017f75:	jge    0x140017f89
   140017f77:	lea    rcx,[rsp+0x288]
   140017f7f:	call   0x140017840
   140017f84:	jmp    0x140018708
   140017f89:	lea    rcx,[rsp+0x288]
   140017f91:	call   0x140017840
   140017f96:	jmp    0x14001867d
   140017f9b:	lea    rcx,[rsp+0x288]
   140017fa3:	call   0x140017840
   140017fa8:	mov    rdx,QWORD PTR [rip+0x262e9]        # 0x14003e298
   140017faf:	mov    rcx,QWORD PTR [rsp+0x2328]
   140017fb7:	call   QWORD PTR [rip+0x220eb]        # 0x14003a0a8
   140017fbd:	test   eax,eax
   140017fbf:	jne    0x140017fee
   140017fc1:	mov    DWORD PTR [rsp+0x40],0x0
   140017fc9:	mov    rdx,QWORD PTR [rsp+0x2328]
   140017fd1:	mov    rcx,QWORD PTR [rsp+0x2320]
   140017fd9:	call   0x140017a40
   140017fde:	mov    DWORD PTR [rsp+0x60],eax
   140017fe2:	cmp    DWORD PTR [rsp+0x60],0x0
   140017fe7:	jge    0x140017fee
   140017fe9:	jmp    0x140018708
   140017fee:	mov    rdx,QWORD PTR [rip+0x26263]        # 0x14003e258
   140017ff5:	mov    rcx,QWORD PTR [rsp+0x2328]
   140017ffd:	call   QWORD PTR [rip+0x220a5]        # 0x14003a0a8
   140018003:	test   eax,eax
   140018005:	jne    0x140018235
   14001800b:	lea    rdx,[rsp+0x2a0]
   140018013:	mov    rcx,QWORD PTR [rsp+0x2320]
   14001801b:	call   0x140017a40
   140018020:	mov    DWORD PTR [rsp+0x60],eax
   140018024:	cmp    DWORD PTR [rsp+0x60],0x0
   140018029:	jge    0x140018030
   14001802b:	jmp    0x140018708
   140018030:	mov    rdx,QWORD PTR [rsp+0x2328]
   140018038:	mov    rcx,QWORD PTR [rsp+0x2320]
   140018040:	call   0x140017a40
   140018045:	mov    DWORD PTR [rsp+0x60],eax
   140018049:	cmp    DWORD PTR [rsp+0x60],0x0
   14001804e:	jge    0x140018055
   140018050:	jmp    0x140018708
   140018055:	mov    rax,QWORD PTR [rsp+0x2328]
   14001805d:	movzx  eax,WORD PTR [rax]
   140018060:	cmp    eax,0x3d
   140018063:	je     0x140018094
   140018065:	mov    edx,0x206
   14001806a:	mov    rcx,QWORD PTR [rsp+0x2320]
   140018072:	call   0x140017a30
   140018077:	mov    DWORD PTR [rsp+0x22e0],eax
   14001807e:	lea    rcx,[rsp+0x48]
   140018083:	call   0x140017840
   140018088:	mov    eax,DWORD PTR [rsp+0x22e0]
   14001808f:	jmp    0x140018724
   140018094:	cmp    DWORD PTR [rsp+0x2338],0x0
   14001809c:	je     0x140018148
   1400180a2:	lea    rcx,[rsp+0x22a0]
   1400180aa:	call   0x1400177c0
   1400180af:	nop
   1400180b0:	mov    rdx,QWORD PTR [rsp+0x2330]
   1400180b8:	lea    rcx,[rsp+0x22a0]
   1400180c0:	call   0x140017860
   1400180c5:	mov    r9,QWORD PTR [rsp+0x2328]
   1400180cd:	lea    r8,[rsp+0x2a0]
   1400180d5:	lea    rdx,[rsp+0x22a0]
   1400180dd:	mov    rcx,QWORD PTR [rsp+0x2320]
   1400180e5:	call   0x140016d40
   1400180ea:	mov    DWORD PTR [rsp+0x60],eax
   1400180ee:	lea    rcx,[rsp+0x22a0]
   1400180f6:	call   0x140017940
   1400180fb:	cmp    DWORD PTR [rsp+0x60],0x0
   140018100:	jge    0x140018131
   140018102:	mov    eax,DWORD PTR [rsp+0x60]
   140018106:	mov    DWORD PTR [rsp+0x22e4],eax
   14001810d:	lea    rcx,[rsp+0x22a0]
   140018115:	call   0x140017840
   14001811a:	nop
   14001811b:	lea    rcx,[rsp+0x48]
   140018120:	call   0x140017840
   140018125:	mov    eax,DWORD PTR [rsp+0x22e4]
   14001812c:	jmp    0x140018724
   140018131:	lea    rcx,[rsp+0x22a0]
   140018139:	call   0x140017840
   14001813e:	jmp    0x14001867d
   140018143:	jmp    0x140018235
   140018148:	cmp    DWORD PTR [rsp+0x2340],0x0
   140018150:	jne    0x14001820b
   140018156:	cmp    DWORD PTR [rsp+0x40],0x0
   14001815b:	je     0x14001820b
   140018161:	lea    rcx,[rsp+0x22b0]
   140018169:	call   0x1400177c0
   14001816e:	mov    r9d,0x20006
   140018174:	xor    r8d,r8d
   140018177:	mov    rdx,QWORD PTR [rsp+0x2330]
   14001817f:	lea    rcx,[rsp+0x22b0]
   140018187:	call   0x140017520
   14001818c:	mov    DWORD PTR [rsp+0x58],eax
   140018190:	cmp    DWORD PTR [rsp+0x58],0x0
   140018195:	jne    0x1400181df
   140018197:	lea    rdx,[rsp+0x2a0]
   14001819f:	lea    rcx,[rsp+0x22b0]
   1400181a7:	call   0x140016580
   1400181ac:	mov    DWORD PTR [rsp+0x58],eax
   1400181b0:	cmp    DWORD PTR [rsp+0x58],0x0
   1400181b5:	je     0x1400181dd
   1400181b7:	cmp    DWORD PTR [rsp+0x58],0x2
   1400181bc:	je     0x1400181dd
   1400181be:	mov    ecx,DWORD PTR [rsp+0x58]
   1400181c2:	call   0x1400179c0
   1400181c7:	mov    DWORD PTR [rsp+0x60],eax
   1400181cb:	lea    rcx,[rsp+0x22b0]
   1400181d3:	call   0x140017840
   1400181d8:	jmp    0x140018708
   1400181dd:	jmp    0x1400181fe
   1400181df:	mov    ecx,DWORD PTR [rsp+0x58]
   1400181e3:	call   0x1400179c0
   1400181e8:	mov    DWORD PTR [rsp+0x60],eax
   1400181ec:	lea    rcx,[rsp+0x22b0]
   1400181f4:	call   0x140017840
   1400181f9:	jmp    0x140018708
   1400181fe:	lea    rcx,[rsp+0x22b0]
   140018206:	call   0x140017840
   14001820b:	mov    rdx,QWORD PTR [rsp+0x2328]
   140018213:	mov    rcx,QWORD PTR [rsp+0x2320]
   14001821b:	call   0x1400173f0
   140018220:	mov    DWORD PTR [rsp+0x60],eax
   140018224:	cmp    DWORD PTR [rsp+0x60],0x0
   140018229:	jge    0x140018230
   14001822b:	jmp    0x140018708
   140018230:	jmp    0x140017db6
   140018235:	mov    dx,0x5c
   140018239:	mov    rcx,QWORD PTR [rsp+0x2328]
   140018241:	call   0x1400165c0
   140018246:	test   rax,rax
   140018249:	je     0x14001827a
   14001824b:	mov    edx,0x211
   140018250:	mov    rcx,QWORD PTR [rsp+0x2320]
   140018258:	call   0x140017a30
   14001825d:	mov    DWORD PTR [rsp+0x22e8],eax
   140018264:	lea    rcx,[rsp+0x48]
   140018269:	call   0x140017840
   14001826e:	mov    eax,DWORD PTR [rsp+0x22e8]
   140018275:	jmp    0x140018724
   14001827a:	cmp    DWORD PTR [rsp+0x2338],0x0
   140018282:	je     0x1400183b9
   140018288:	mov    r9d,0x2001f
   14001828e:	mov    r8,QWORD PTR [rsp+0x2328]
   140018296:	mov    rdx,QWORD PTR [rsp+0x2330]
   14001829e:	lea    rcx,[rsp+0x48]
   1400182a3:	call   0x140017520
   1400182a8:	mov    DWORD PTR [rsp+0x58],eax
   1400182ac:	cmp    DWORD PTR [rsp+0x58],0x0
   1400182b1:	je     0x140018352
   1400182b7:	mov    r9d,0x20019
   1400182bd:	mov    r8,QWORD PTR [rsp+0x2328]
   1400182c5:	mov    rdx,QWORD PTR [rsp+0x2330]
   1400182cd:	lea    rcx,[rsp+0x48]
   1400182d2:	call   0x140017520
   1400182d7:	mov    DWORD PTR [rsp+0x58],eax
   1400182db:	cmp    DWORD PTR [rsp+0x58],0x0
   1400182e0:	je     0x140018352
   1400182e2:	mov    QWORD PTR [rsp+0x38],0x0
   1400182eb:	mov    QWORD PTR [rsp+0x30],0x0
   1400182f4:	mov    DWORD PTR [rsp+0x28],0x2001f
   1400182fc:	mov    DWORD PTR [rsp+0x20],0x0
   140018304:	xor    r9d,r9d
   140018307:	mov    r8,QWORD PTR [rsp+0x2328]
   14001830f:	mov    rdx,QWORD PTR [rsp+0x2330]
   140018317:	lea    rcx,[rsp+0x48]
   14001831c:	call   0x140016630
   140018321:	mov    DWORD PTR [rsp+0x58],eax
   140018325:	cmp    DWORD PTR [rsp+0x58],0x0
   14001832a:	je     0x140018352
   14001832c:	mov    ecx,DWORD PTR [rsp+0x58]
   140018330:	call   0x1400179c0
   140018335:	mov    DWORD PTR [rsp+0x22ec],eax
   14001833c:	lea    rcx,[rsp+0x48]
   140018341:	call   0x140017840
   140018346:	mov    eax,DWORD PTR [rsp+0x22ec]
   14001834d:	jmp    0x140018724
   140018352:	mov    rdx,QWORD PTR [rsp+0x2328]
   14001835a:	mov    rcx,QWORD PTR [rsp+0x2320]
   140018362:	call   0x140017a40
   140018367:	mov    DWORD PTR [rsp+0x60],eax
   14001836b:	cmp    DWORD PTR [rsp+0x60],0x0
   140018370:	jge    0x140018377
   140018372:	jmp    0x140018708
   140018377:	mov    rax,QWORD PTR [rsp+0x2328]
   14001837f:	movzx  eax,WORD PTR [rax]
   140018382:	cmp    eax,0x3d
   140018385:	jne    0x1400183b4
   140018387:	mov    r9,QWORD PTR [rsp+0x2328]
   14001838f:	xor    r8d,r8d
   140018392:	lea    rdx,[rsp+0x48]
   140018397:	mov    rcx,QWORD PTR [rsp+0x2320]
   14001839f:	call   0x140016d40
   1400183a4:	mov    DWORD PTR [rsp+0x60],eax
   1400183a8:	cmp    DWORD PTR [rsp+0x60],0x0
   1400183ad:	jge    0x1400183b4
   1400183af:	jmp    0x140018708
   1400183b4:	jmp    0x14001867d
   1400183b9:	cmp    DWORD PTR [rsp+0x2340],0x0
   1400183c1:	jne    0x1400183e9
   1400183c3:	mov    r9d,0x20019
   1400183c9:	mov    r8,QWORD PTR [rsp+0x2328]
   1400183d1:	mov    rdx,QWORD PTR [rsp+0x2330]
   1400183d9:	lea    rcx,[rsp+0x48]
   1400183de:	call   0x140017520
   1400183e3:	mov    DWORD PTR [rsp+0x58],eax
   1400183e7:	jmp    0x1400183f1
   1400183e9:	mov    DWORD PTR [rsp+0x58],0x2
   1400183f1:	cmp    DWORD PTR [rsp+0x58],0x0
   1400183f6:	je     0x140018403
   1400183f8:	mov    DWORD PTR [rsp+0x2340],0x1
   140018403:	mov    r9,0xffffffffffffffff
   14001840a:	mov    r8,QWORD PTR [rsp+0x2328]
   140018412:	mov    edx,0x104
   140018417:	lea    rcx,[rsp+0x70]
   14001841c:	call   0x1400173b0
   140018421:	mov    rdx,QWORD PTR [rsp+0x2328]
   140018429:	mov    rcx,QWORD PTR [rsp+0x2320]
   140018431:	call   0x140017a40
   140018436:	mov    DWORD PTR [rsp+0x60],eax
   14001843a:	cmp    DWORD PTR [rsp+0x60],0x0
   14001843f:	jge    0x140018446
   140018441:	jmp    0x140018708
   140018446:	mov    rdx,QWORD PTR [rsp+0x2328]
   14001844e:	mov    rcx,QWORD PTR [rsp+0x2320]
   140018456:	call   0x1400173f0
   14001845b:	mov    DWORD PTR [rsp+0x60],eax
   14001845f:	cmp    DWORD PTR [rsp+0x60],0x0
   140018464:	jge    0x14001846b
   140018466:	jmp    0x140018708
   14001846b:	mov    rax,QWORD PTR [rsp+0x2328]
   140018473:	movzx  eax,WORD PTR [rax]
   140018476:	cmp    eax,0x7b
   140018479:	jne    0x1400184fa
   14001847b:	mov    rcx,QWORD PTR [rsp+0x2328]
   140018483:	call   QWORD PTR [rip+0x21c17]        # 0x14003a0a0
   140018489:	cmp    eax,0x1
   14001848c:	jne    0x1400184fa
   14001848e:	mov    eax,DWORD PTR [rsp+0x2340]
   140018495:	mov    DWORD PTR [rsp+0x20],eax
   140018499:	mov    r9d,DWORD PTR [rsp+0x2338]
   1400184a1:	mov    r8,QWORD PTR [rsp+0x48]
   1400184a6:	mov    rdx,QWORD PTR [rsp+0x2328]
   1400184ae:	mov    rcx,QWORD PTR [rsp+0x2320]
   1400184b6:	call   0x140017d10
   1400184bb:	mov    DWORD PTR [rsp+0x60],eax
   1400184bf:	cmp    DWORD PTR [rsp+0x60],0x0
   1400184c4:	jge    0x1400184d5
   1400184c6:	cmp    DWORD PTR [rsp+0x2340],0x0
   1400184ce:	jne    0x1400184d5
   1400184d0:	jmp    0x140018708
   1400184d5:	mov    rdx,QWORD PTR [rsp+0x2328]
   1400184dd:	mov    rcx,QWORD PTR [rsp+0x2320]
   1400184e5:	call   0x140017a40
   1400184ea:	mov    DWORD PTR [rsp+0x60],eax
   1400184ee:	cmp    DWORD PTR [rsp+0x60],0x0
   1400184f3:	jge    0x1400184fa
   1400184f5:	jmp    0x140018708
   1400184fa:	mov    eax,DWORD PTR [rsp+0x5c]
   1400184fe:	mov    DWORD PTR [rsp+0x2340],eax
   140018505:	cmp    DWORD PTR [rsp+0x58],0x2
   14001850a:	jne    0x140018511
   14001850c:	jmp    0x140017db6
   140018511:	cmp    DWORD PTR [rsp+0x58],0x0
   140018516:	je     0x14001853b
   140018518:	cmp    DWORD PTR [rsp+0x2340],0x0
   140018520:	je     0x140018529
   140018522:	jmp    0x140017db6
   140018527:	jmp    0x14001853b
   140018529:	mov    ecx,DWORD PTR [rsp+0x58]
   14001852d:	call   0x1400179c0
   140018532:	mov    DWORD PTR [rsp+0x60],eax
   140018536:	jmp    0x140018708
   14001853b:	cmp    DWORD PTR [rsp+0x2340],0x0
   140018543:	je     0x140018594
   140018545:	lea    rcx,[rsp+0x48]
   14001854a:	call   0x140012200
   14001854f:	mov    rdx,rax
   140018552:	mov    rcx,QWORD PTR [rsp+0x2320]
   14001855a:	call   0x140017720
   14001855f:	test   eax,eax
   140018561:	je     0x140018594
   140018563:	lea    rdx,[rsp+0x70]
   140018568:	mov    rcx,QWORD PTR [rsp+0x2320]
   140018570:	call   0x1400174c0
   140018575:	test   eax,eax
   140018577:	je     0x14001858f
   140018579:	cmp    DWORD PTR [rsp+0x40],0x0
   14001857e:	je     0x14001858f
   140018580:	lea    rdx,[rsp+0x70]
   140018585:	lea    rcx,[rsp+0x48]
   14001858a:	call   0x1400175b0
   14001858f:	jmp    0x140017db6
   140018594:	lea    rcx,[rsp+0x48]
   140018599:	call   0x140012200
   14001859e:	mov    rdx,rax
   1400185a1:	mov    rcx,QWORD PTR [rsp+0x2320]
   1400185a9:	call   0x140017720
   1400185ae:	mov    DWORD PTR [rsp+0x22c0],eax
   1400185b5:	lea    rcx,[rsp+0x48]
   1400185ba:	call   0x1400177f0
   1400185bf:	mov    DWORD PTR [rsp+0x58],eax
   1400185c3:	cmp    DWORD PTR [rsp+0x58],0x0
   1400185c8:	je     0x1400185f0
   1400185ca:	mov    ecx,DWORD PTR [rsp+0x58]
   1400185ce:	call   0x1400179c0
   1400185d3:	mov    DWORD PTR [rsp+0x22f0],eax
   1400185da:	lea    rcx,[rsp+0x48]
   1400185df:	call   0x140017840
   1400185e4:	mov    eax,DWORD PTR [rsp+0x22f0]
   1400185eb:	jmp    0x140018724
   1400185f0:	cmp    DWORD PTR [rsp+0x40],0x0
   1400185f5:	je     0x14001867d
   1400185fb:	cmp    DWORD PTR [rsp+0x22c0],0x0
   140018603:	jne    0x14001867d
   140018605:	lea    rcx,[rsp+0x22c8]
   14001860d:	call   0x1400177c0
   140018612:	mov    rdx,QWORD PTR [rsp+0x2330]
   14001861a:	lea    rcx,[rsp+0x22c8]
   140018622:	call   0x140017860
   140018627:	lea    rdx,[rsp+0x70]
   14001862c:	lea    rcx,[rsp+0x22c8]
   140018634:	call   0x140017890
   140018639:	mov    DWORD PTR [rsp+0x58],eax
   14001863d:	lea    rcx,[rsp+0x22c8]
   140018645:	call   0x140017940
   14001864a:	cmp    DWORD PTR [rsp+0x58],0x0
   14001864f:	je     0x140018670
   140018651:	mov    ecx,DWORD PTR [rsp+0x58]
   140018655:	call   0x1400179c0
   14001865a:	mov    DWORD PTR [rsp+0x60],eax
   14001865e:	lea    rcx,[rsp+0x22c8]
   140018666:	call   0x140017840
   14001866b:	jmp    0x140018708
   140018670:	lea    rcx,[rsp+0x22c8]
   140018678:	call   0x140017840
   14001867d:	cmp    DWORD PTR [rsp+0x2338],0x0
   140018685:	je     0x140018703
   140018687:	mov    rax,QWORD PTR [rsp+0x2328]
   14001868f:	movzx  eax,WORD PTR [rax]
   140018692:	cmp    eax,0x7b
   140018695:	jne    0x140018703
   140018697:	mov    rcx,QWORD PTR [rsp+0x2328]
   14001869f:	call   QWORD PTR [rip+0x219fb]        # 0x14003a0a0
   1400186a5:	cmp    eax,0x1
   1400186a8:	jne    0x140018703
   1400186aa:	mov    DWORD PTR [rsp+0x20],0x0
   1400186b2:	mov    r9d,DWORD PTR [rsp+0x2338]
   1400186ba:	mov    r8,QWORD PTR [rsp+0x48]
   1400186bf:	mov    rdx,QWORD PTR [rsp+0x2328]
   1400186c7:	mov    rcx,QWORD PTR [rsp+0x2320]
   1400186cf:	call   0x140017d10
   1400186d4:	mov    DWORD PTR [rsp+0x60],eax
   1400186d8:	cmp    DWORD PTR [rsp+0x60],0x0
   1400186dd:	jge    0x1400186e1
   1400186df:	jmp    0x140018708
   1400186e1:	mov    rdx,QWORD PTR [rsp+0x2328]
   1400186e9:	mov    rcx,QWORD PTR [rsp+0x2320]
   1400186f1:	call   0x140017a40
   1400186f6:	mov    DWORD PTR [rsp+0x60],eax
   1400186fa:	cmp    DWORD PTR [rsp+0x60],0x0
   1400186ff:	jge    0x140018703
   140018701:	jmp    0x140018708
   140018703:	jmp    0x140017db6
   140018708:	mov    eax,DWORD PTR [rsp+0x60]
   14001870c:	mov    DWORD PTR [rsp+0x22f4],eax
   140018713:	lea    rcx,[rsp+0x48]
   140018718:	call   0x140017840
   14001871d:	mov    eax,DWORD PTR [rsp+0x22f4]
   140018724:	mov    rcx,QWORD PTR [rsp+0x2308]
   14001872c:	xor    rcx,rsp
   14001872f:	call   0x14001c500
   140018734:	add    rsp,0x2318
   14001873b:	ret    
   14001873c:	int3   
   14001873d:	int3   
   14001873e:	int3   
   14001873f:	int3   
   140018740:	mov    WORD PTR [rsp+0x10],dx
   140018745:	mov    QWORD PTR [rsp+0x8],rcx
   14001874a:	sub    rsp,0x18
   14001874e:	movzx  eax,WORD PTR [rsp+0x28]
   140018753:	mov    DWORD PTR [rsp],eax
   140018756:	cmp    DWORD PTR [rsp],0x9
   14001875a:	jl     0x140018777
   14001875c:	cmp    DWORD PTR [rsp],0xa
   140018760:	jle    0x140018770
   140018762:	cmp    DWORD PTR [rsp],0xd
   140018766:	je     0x140018770
   140018768:	cmp    DWORD PTR [rsp],0x20
   14001876c:	je     0x140018770
   14001876e:	jmp    0x140018777
   140018770:	mov    eax,0x1
   140018775:	jmp    0x140018779
   140018777:	xor    eax,eax
   140018779:	add    rsp,0x18
   14001877d:	ret    
   14001877e:	int3   
   14001877f:	int3   
   140018780:	mov    QWORD PTR [rsp+0x8],rcx
   140018785:	sub    rsp,0x28
   140018789:	mov    rax,QWORD PTR [rsp+0x30]
   14001878e:	mov    rax,QWORD PTR [rax]
   140018791:	movzx  edx,WORD PTR [rax]
   140018794:	mov    rcx,QWORD PTR [rsp+0x30]
   140018799:	call   0x140018740
   14001879e:	test   eax,eax
   1400187a0:	je     0x1400187bd
   1400187a2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400187a7:	mov    rcx,QWORD PTR [rcx]
   1400187aa:	call   QWORD PTR [rip+0x21c28]        # 0x14003a3d8
   1400187b0:	mov    r11,rax
   1400187b3:	mov    rax,QWORD PTR [rsp+0x30]
   1400187b8:	mov    QWORD PTR [rax],r11
   1400187bb:	jmp    0x140018789
   1400187bd:	add    rsp,0x28
   1400187c1:	ret    
   1400187c2:	int3   
   1400187c3:	int3   
   1400187c4:	int3   
   1400187c5:	int3   
   1400187c6:	int3   
   1400187c7:	int3   
   1400187c8:	int3   
   1400187c9:	int3   
   1400187ca:	int3   
   1400187cb:	int3   
   1400187cc:	int3   
   1400187cd:	int3   
   1400187ce:	int3   
   1400187cf:	int3   
   1400187d0:	mov    DWORD PTR [rsp+0x18],r8d
   1400187d5:	mov    QWORD PTR [rsp+0x10],rdx
   1400187da:	mov    QWORD PTR [rsp+0x8],rcx
   1400187df:	mov    eax,0x2078
   1400187e4:	call   0x140036570
   1400187e9:	sub    rsp,rax
   1400187ec:	mov    rax,QWORD PTR [rip+0x30c6d]        # 0x140049460
   1400187f3:	xor    rax,rsp
   1400187f6:	mov    QWORD PTR [rsp+0x2060],rax
   1400187fe:	mov    DWORD PTR [rsp+0x38],0x0
   140018806:	mov    QWORD PTR [rsp+0x30],0x0
   14001880f:	lea    r8,[rsp+0x30]
   140018814:	mov    rdx,QWORD PTR [rsp+0x2088]
   14001881c:	mov    rcx,QWORD PTR [rsp+0x2080]
   140018824:	call   0x140015f60
   140018829:	mov    DWORD PTR [rsp+0x38],eax
   14001882d:	cmp    DWORD PTR [rsp+0x38],0x0
   140018832:	jge    0x14001883d
   140018834:	mov    eax,DWORD PTR [rsp+0x38]
   140018838:	jmp    0x1400189ee
   14001883d:	mov    rcx,QWORD PTR [rsp+0x2080]
   140018845:	mov    rax,QWORD PTR [rsp+0x30]
   14001884a:	mov    QWORD PTR [rcx],rax
   14001884d:	mov    rax,QWORD PTR [rsp+0x2080]
   140018855:	mov    rax,QWORD PTR [rax]
   140018858:	movzx  eax,WORD PTR [rax]
   14001885b:	test   eax,eax
   14001885d:	je     0x1400189df
   140018863:	lea    rdx,[rsp+0x50]
   140018868:	mov    rcx,QWORD PTR [rsp+0x2080]
   140018870:	call   0x140017a40
   140018875:	mov    DWORD PTR [rsp+0x38],eax
   140018879:	cmp    DWORD PTR [rsp+0x38],0x0
   14001887e:	jge    0x140018885
   140018880:	jmp    0x1400189df
   140018885:	lea    rcx,[rsp+0x50]
   14001888a:	call   0x140016510
   14001888f:	mov    QWORD PTR [rsp+0x2050],rax
   140018897:	cmp    QWORD PTR [rsp+0x2050],0x0
   1400188a0:	jne    0x1400188bd
   1400188a2:	mov    edx,0x20c
   1400188a7:	mov    rcx,QWORD PTR [rsp+0x2080]
   1400188af:	call   0x140017a30
   1400188b4:	mov    DWORD PTR [rsp+0x38],eax
   1400188b8:	jmp    0x1400189df
   1400188bd:	lea    rdx,[rsp+0x50]
   1400188c2:	mov    rcx,QWORD PTR [rsp+0x2080]
   1400188ca:	call   0x140017a40
   1400188cf:	mov    DWORD PTR [rsp+0x38],eax
   1400188d3:	cmp    DWORD PTR [rsp+0x38],0x0
   1400188d8:	jge    0x1400188df
   1400188da:	jmp    0x1400189df
   1400188df:	movzx  eax,WORD PTR [rsp+0x50]
   1400188e4:	cmp    eax,0x7b
   1400188e7:	je     0x140018904
   1400188e9:	mov    edx,0x20d
   1400188ee:	mov    rcx,QWORD PTR [rsp+0x2080]
   1400188f6:	call   0x140017a30
   1400188fb:	mov    DWORD PTR [rsp+0x38],eax
   1400188ff:	jmp    0x1400189df
   140018904:	cmp    DWORD PTR [rsp+0x2090],0x0
   14001890c:	je     0x140018996
   140018912:	mov    rax,QWORD PTR [rsp+0x2080]
   14001891a:	mov    rax,QWORD PTR [rax]
   14001891d:	mov    QWORD PTR [rsp+0x2058],rax
   140018925:	mov    DWORD PTR [rsp+0x20],0x0
   14001892d:	mov    r9d,DWORD PTR [rsp+0x2090]
   140018935:	mov    r8,QWORD PTR [rsp+0x2050]
   14001893d:	lea    rdx,[rsp+0x50]
   140018942:	mov    rcx,QWORD PTR [rsp+0x2080]
   14001894a:	call   0x140017d10
   14001894f:	mov    DWORD PTR [rsp+0x38],eax
   140018953:	cmp    DWORD PTR [rsp+0x38],0x0
   140018958:	jge    0x140018994
   14001895a:	mov    rcx,QWORD PTR [rsp+0x2080]
   140018962:	mov    rax,QWORD PTR [rsp+0x2058]
   14001896a:	mov    QWORD PTR [rcx],rax
   14001896d:	mov    DWORD PTR [rsp+0x20],0x0
   140018975:	xor    r9d,r9d
   140018978:	mov    r8,QWORD PTR [rsp+0x2050]
   140018980:	lea    rdx,[rsp+0x50]
   140018985:	mov    rcx,QWORD PTR [rsp+0x2080]
   14001898d:	call   0x140017d10
   140018992:	jmp    0x1400189df
   140018994:	jmp    0x1400189cd
   140018996:	mov    DWORD PTR [rsp+0x20],0x0
   14001899e:	mov    r9d,DWORD PTR [rsp+0x2090]
   1400189a6:	mov    r8,QWORD PTR [rsp+0x2050]
   1400189ae:	lea    rdx,[rsp+0x50]
   1400189b3:	mov    rcx,QWORD PTR [rsp+0x2080]
   1400189bb:	call   0x140017d10
   1400189c0:	mov    DWORD PTR [rsp+0x38],eax
   1400189c4:	cmp    DWORD PTR [rsp+0x38],0x0
   1400189c9:	jge    0x1400189cd
   1400189cb:	jmp    0x1400189df
   1400189cd:	mov    rcx,QWORD PTR [rsp+0x2080]
   1400189d5:	call   0x140018780
   1400189da:	jmp    0x14001884d
   1400189df:	mov    rcx,QWORD PTR [rsp+0x30]
   1400189e4:	call   QWORD PTR [rip+0x21a56]        # 0x14003a440
   1400189ea:	mov    eax,DWORD PTR [rsp+0x38]
   1400189ee:	mov    rcx,QWORD PTR [rsp+0x2060]
   1400189f6:	xor    rcx,rsp
   1400189f9:	call   0x14001c500
   1400189fe:	add    rsp,0x2078
   140018a05:	ret    
   140018a06:	int3   
   140018a07:	int3   
   140018a08:	int3   
   140018a09:	int3   
   140018a0a:	int3   
   140018a0b:	int3   
   140018a0c:	int3   
   140018a0d:	int3   
   140018a0e:	int3   
   140018a0f:	int3   
   140018a10:	mov    QWORD PTR [rsp+0x20],r9
   140018a15:	mov    QWORD PTR [rsp+0x18],r8
   140018a1a:	mov    QWORD PTR [rsp+0x10],rdx
   140018a1f:	mov    QWORD PTR [rsp+0x8],rcx
   140018a24:	push   rbx
   140018a25:	sub    rsp,0x4e0
   140018a2c:	mov    QWORD PTR [rsp+0x4c8],0xfffffffffffffffe
   140018a38:	mov    rax,QWORD PTR [rip+0x30a21]        # 0x140049460
   140018a3f:	xor    rax,rsp
   140018a42:	mov    QWORD PTR [rsp+0x4d0],rax
   140018a4a:	call   0x140016a00
   140018a4f:	mov    DWORD PTR [rsp+0x70],eax
   140018a53:	lea    rcx,[rsp+0x78]
   140018a58:	call   0x140015790
   140018a5d:	nop
   140018a5e:	mov    rdx,QWORD PTR [rsp+0x4f0]
   140018a66:	lea    rcx,[rsp+0x50]
   140018a6b:	call   0x140015760
   140018a70:	lea    rcx,[rsp+0x90]
   140018a78:	call   0x140015790
   140018a7d:	nop
   140018a7e:	mov    edx,0x400
   140018a83:	mov    rcx,QWORD PTR [rsp+0x4f8]
   140018a8b:	call   0x140015bd0
   140018a90:	mov    QWORD PTR [rsp+0x38],rax
   140018a95:	mov    r8d,0x2
   140018a9b:	xor    edx,edx
   140018a9d:	mov    rcx,QWORD PTR [rsp+0x38]
   140018aa2:	call   QWORD PTR [rip+0x21640]        # 0x14003a0e8
   140018aa8:	mov    QWORD PTR [rsp+0x48],rax
   140018aad:	cmp    QWORD PTR [rsp+0x48],0x0
   140018ab3:	jne    0x140018ac6
   140018ab5:	call   0x140015830
   140018aba:	mov    DWORD PTR [rsp+0x4b0],eax
   140018ac1:	jmp    0x140018c71
   140018ac6:	mov    r8,QWORD PTR [rsp+0x508]
   140018ace:	mov    rdx,QWORD PTR [rsp+0x500]
   140018ad6:	mov    rcx,QWORD PTR [rsp+0x48]
   140018adb:	call   QWORD PTR [rip+0x215ff]        # 0x14003a0e0
   140018ae1:	mov    QWORD PTR [rsp+0x4a8],rax
   140018ae9:	cmp    QWORD PTR [rsp+0x4a8],0x0
   140018af2:	jne    0x140018b05
   140018af4:	call   0x140015830
   140018af9:	mov    DWORD PTR [rsp+0x4b0],eax
   140018b00:	jmp    0x140018c71
   140018b05:	mov    rdx,QWORD PTR [rsp+0x4a8]
   140018b0d:	mov    rcx,QWORD PTR [rsp+0x48]
   140018b12:	call   QWORD PTR [rip+0x215c0]        # 0x14003a0d8
   140018b18:	mov    QWORD PTR [rsp+0x4b8],rax
   140018b20:	cmp    QWORD PTR [rsp+0x4b8],0x0
   140018b29:	jne    0x140018b3c
   140018b2b:	call   0x140015830
   140018b30:	mov    DWORD PTR [rsp+0x4b0],eax
   140018b37:	jmp    0x140018c71
   140018b3c:	mov    rdx,QWORD PTR [rsp+0x4a8]
   140018b44:	mov    rcx,QWORD PTR [rsp+0x48]
   140018b49:	call   QWORD PTR [rip+0x21581]        # 0x14003a0d0
   140018b4f:	mov    DWORD PTR [rsp+0x60],eax
   140018b53:	mov    rax,QWORD PTR [rsp+0x4b8]
   140018b5b:	mov    QWORD PTR [rsp+0x40],rax
   140018b60:	mov    eax,DWORD PTR [rsp+0x60]
   140018b64:	add    eax,0x1
   140018b67:	cmp    eax,DWORD PTR [rsp+0x60]
   140018b6b:	jae    0x140018b9c
   140018b6d:	mov    DWORD PTR [rsp+0x4c0],0x8007000e
   140018b78:	lea    rcx,[rsp+0x90]
   140018b80:	call   0x1400168c0
   140018b85:	nop
   140018b86:	lea    rcx,[rsp+0x78]
   140018b8b:	call   0x140016a10
   140018b90:	mov    eax,DWORD PTR [rsp+0x4c0]
   140018b97:	jmp    0x140018cb1
   140018b9c:	mov    eax,DWORD PTR [rsp+0x60]
   140018ba0:	add    eax,0x1
   140018ba3:	mov    edx,eax
   140018ba5:	lea    rcx,[rsp+0x90]
   140018bad:	call   0x140015800
   140018bb2:	nop
   140018bb3:	lea    rcx,[rsp+0x90]
   140018bbb:	call   0x140012200
   140018bc0:	test   rax,rax
   140018bc3:	jne    0x140018bd5
   140018bc5:	mov    DWORD PTR [rsp+0x4b0],0x8007000e
   140018bd0:	jmp    0x140018c71
   140018bd5:	lea    rcx,[rsp+0x90]
   140018bdd:	call   0x140012200
   140018be2:	mov    rbx,rax
   140018be5:	call   0x140016a00
   140018bea:	mov    ecx,eax
   140018bec:	mov    eax,DWORD PTR [rsp+0x60]
   140018bf0:	mov    DWORD PTR [rsp+0x28],eax
   140018bf4:	mov    QWORD PTR [rsp+0x20],rbx
   140018bf9:	mov    r9d,DWORD PTR [rsp+0x60]
   140018bfe:	mov    r8,QWORD PTR [rsp+0x40]
   140018c03:	xor    edx,edx
   140018c05:	call   QWORD PTR [rip+0x21595]        # 0x14003a1a0
   140018c0b:	mov    DWORD PTR [rsp+0x4a0],eax
   140018c12:	cmp    DWORD PTR [rsp+0x4a0],0x0
   140018c1a:	jne    0x140018c2a
   140018c1c:	call   0x140015830
   140018c21:	mov    DWORD PTR [rsp+0x4b0],eax
   140018c28:	jmp    0x140018c71
   140018c2a:	mov    ebx,DWORD PTR [rsp+0x4a0]
   140018c31:	lea    rcx,[rsp+0x90]
   140018c39:	call   0x140012200
   140018c3e:	mov    r11,rax
   140018c41:	xor    eax,eax
   140018c43:	mov    WORD PTR [r11+rbx*2],ax
   140018c48:	lea    rcx,[rsp+0x90]
   140018c50:	call   0x140012200
   140018c55:	mov    r8d,DWORD PTR [rsp+0x510]
   140018c5d:	mov    rdx,rax
   140018c60:	lea    rcx,[rsp+0x50]
   140018c65:	call   0x1400187d0
   140018c6a:	mov    DWORD PTR [rsp+0x4b0],eax
   140018c71:	cmp    QWORD PTR [rsp+0x48],0x0
   140018c77:	je     0x140018c84
   140018c79:	mov    rcx,QWORD PTR [rsp+0x48]
   140018c7e:	call   QWORD PTR [rip+0x21414]        # 0x14003a098
   140018c84:	mov    eax,DWORD PTR [rsp+0x4b0]
   140018c8b:	mov    DWORD PTR [rsp+0x4c4],eax
   140018c92:	lea    rcx,[rsp+0x90]
   140018c9a:	call   0x1400168c0
   140018c9f:	nop
   140018ca0:	lea    rcx,[rsp+0x78]
   140018ca5:	call   0x140016a10
   140018caa:	mov    eax,DWORD PTR [rsp+0x4c4]
   140018cb1:	mov    rcx,QWORD PTR [rsp+0x4d0]
   140018cb9:	xor    rcx,rsp
   140018cbc:	call   0x14001c500
   140018cc1:	add    rsp,0x4e0
   140018cc8:	pop    rbx
   140018cc9:	ret    
   140018cca:	int3   
   140018ccb:	int3   
   140018ccc:	int3   
   140018ccd:	int3   
   140018cce:	int3   
   140018ccf:	int3   
   140018cd0:	mov    QWORD PTR [rsp+0x20],r9
   140018cd5:	mov    QWORD PTR [rsp+0x18],r8
   140018cda:	mov    QWORD PTR [rsp+0x10],rdx
   140018cdf:	mov    QWORD PTR [rsp+0x8],rcx
   140018ce4:	sub    rsp,0x88
   140018ceb:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140018cf4:	call   0x140016a00
   140018cf9:	mov    DWORD PTR [rsp+0x48],eax
   140018cfd:	lea    rcx,[rsp+0x60]
   140018d02:	call   0x140015790
   140018d07:	nop
   140018d08:	cmp    QWORD PTR [rsp+0xa0],0x0
   140018d11:	je     0x140018d1e
   140018d13:	cmp    QWORD PTR [rsp+0xa8],0x0
   140018d1c:	jne    0x140018d36
   140018d1e:	mov    DWORD PTR [rsp+0x68],0x80070057
   140018d26:	lea    rcx,[rsp+0x60]
   140018d2b:	call   0x140016a10
   140018d30:	mov    eax,DWORD PTR [rsp+0x68]
   140018d34:	jmp    0x140018d9d
   140018d36:	mov    edx,0x400
   140018d3b:	mov    rcx,QWORD PTR [rsp+0xa0]
   140018d43:	call   0x140015bd0
   140018d48:	mov    QWORD PTR [rsp+0x30],rax
   140018d4d:	mov    edx,0x400
   140018d52:	mov    rcx,QWORD PTR [rsp+0xa8]
   140018d5a:	call   0x140015bd0
   140018d5f:	mov    QWORD PTR [rsp+0x50],rax
   140018d64:	mov    DWORD PTR [rsp+0x20],0x0
   140018d6c:	mov    r9,QWORD PTR [rsp+0x50]
   140018d71:	mov    r8,QWORD PTR [rsp+0x30]
   140018d76:	mov    rdx,QWORD PTR [rsp+0x98]
   140018d7e:	mov    rcx,QWORD PTR [rsp+0x90]
   140018d86:	call   0x140018a10
   140018d8b:	mov    DWORD PTR [rsp+0x6c],eax
   140018d8f:	lea    rcx,[rsp+0x60]
   140018d94:	call   0x140016a10
   140018d99:	mov    eax,DWORD PTR [rsp+0x6c]
   140018d9d:	add    rsp,0x88
   140018da4:	ret    
   140018da5:	int3   
   140018da6:	int3   
   140018da7:	int3   
   140018da8:	int3   
   140018da9:	int3   
   140018daa:	int3   
   140018dab:	int3   
   140018dac:	int3   
   140018dad:	int3   
   140018dae:	int3   
   140018daf:	int3   
   140018db0:	mov    QWORD PTR [rsp+0x20],r9
   140018db5:	mov    DWORD PTR [rsp+0x18],r8d
   140018dba:	mov    QWORD PTR [rsp+0x10],rdx
   140018dbf:	mov    QWORD PTR [rsp+0x8],rcx
   140018dc4:	sub    rsp,0xb58
   140018dcb:	mov    rax,QWORD PTR [rip+0x3068e]        # 0x140049460
   140018dd2:	xor    rax,rsp
   140018dd5:	mov    QWORD PTR [rsp+0xb40],rax
   140018ddd:	lea    rcx,[rsp+0x270]
   140018de5:	call   0x140014ba0
   140018dea:	lea    rcx,[rsp+0x270]
   140018df2:	call   0x140014fb0
   140018df7:	mov    DWORD PTR [rsp+0x2c4],eax
   140018dfe:	cmp    DWORD PTR [rsp+0x2c4],0x0
   140018e06:	jge    0x140018e2f
   140018e08:	mov    eax,DWORD PTR [rsp+0x2c4]
   140018e0f:	mov    DWORD PTR [rsp+0xb18],eax
   140018e16:	lea    rcx,[rsp+0x270]
   140018e1e:	call   0x140014ef0
   140018e23:	mov    eax,DWORD PTR [rsp+0xb18]
   140018e2a:	jmp    0x14001923b
   140018e2f:	cmp    QWORD PTR [rsp+0xb78],0x0
   140018e38:	je     0x140018e82
   140018e3a:	mov    rax,QWORD PTR [rsp+0xb78]
   140018e42:	cmp    QWORD PTR [rax],0x0
   140018e46:	je     0x140018e82
   140018e48:	mov    r8,QWORD PTR [rsp+0xb78]
   140018e50:	mov    r8,QWORD PTR [r8+0x8]
   140018e54:	mov    rdx,QWORD PTR [rsp+0xb78]
   140018e5c:	mov    rdx,QWORD PTR [rdx]
   140018e5f:	lea    rcx,[rsp+0x270]
   140018e67:	call   0x1400155a0
   140018e6c:	mov    rax,QWORD PTR [rsp+0xb78]
   140018e74:	add    rax,0x10
   140018e78:	mov    QWORD PTR [rsp+0xb78],rax
   140018e80:	jmp    0x140018e3a
   140018e82:	mov    rax,QWORD PTR [rsp+0xb60]
   140018e8a:	mov    rax,QWORD PTR [rax]
   140018e8d:	lea    rdx,[rsp+0x270]
   140018e95:	mov    rcx,QWORD PTR [rsp+0xb60]
   140018e9d:	call   QWORD PTR [rax+0x28]
   140018ea0:	mov    DWORD PTR [rsp+0x2c4],eax
   140018ea7:	cmp    DWORD PTR [rsp+0x2c4],0x0
   140018eaf:	jge    0x140018ed8
   140018eb1:	mov    eax,DWORD PTR [rsp+0x2c4]
   140018eb8:	mov    DWORD PTR [rsp+0xb1c],eax
   140018ebf:	lea    rcx,[rsp+0x270]
   140018ec7:	call   0x140014ef0
   140018ecc:	mov    eax,DWORD PTR [rsp+0xb1c]
   140018ed3:	jmp    0x14001923b
   140018ed8:	call   0x140016a00
   140018edd:	mov    DWORD PTR [rsp+0x40],eax
   140018ee1:	lea    rcx,[rsp+0x268]
   140018ee9:	call   0x140015790
   140018eee:	lea    rcx,[rip+0x326cb]        # 0x14004b5c0
   140018ef5:	call   0x140014fd0
   140018efa:	mov    QWORD PTR [rsp+0x38],rax
   140018eff:	mov    r8d,0x104
   140018f05:	lea    rdx,[rsp+0x50]
   140018f0a:	mov    rcx,QWORD PTR [rsp+0x38]
   140018f0f:	call   QWORD PTR [rip+0x2125b]        # 0x14003a170
   140018f15:	mov    DWORD PTR [rsp+0x2c0],eax
   140018f1c:	cmp    DWORD PTR [rsp+0x2c0],0x0
   140018f24:	jne    0x140018f5a
   140018f26:	call   0x140015830
   140018f2b:	mov    DWORD PTR [rsp+0xb20],eax
   140018f32:	lea    rcx,[rsp+0x268]
   140018f3a:	call   0x140016a10
   140018f3f:	lea    rcx,[rsp+0x270]
   140018f47:	call   0x140014ef0
   140018f4c:	mov    eax,DWORD PTR [rsp+0xb20]
   140018f53:	jmp    0x14001923b
   140018f58:	jmp    0x140018f9e
   140018f5a:	cmp    DWORD PTR [rsp+0x2c0],0x104
   140018f65:	jne    0x140018f9e
   140018f67:	mov    ecx,0x7a
   140018f6c:	call   0x140017980
   140018f71:	mov    DWORD PTR [rsp+0xb24],eax
   140018f78:	lea    rcx,[rsp+0x268]
   140018f80:	call   0x140016a10
   140018f85:	lea    rcx,[rsp+0x270]
   140018f8d:	call   0x140014ef0
   140018f92:	mov    eax,DWORD PTR [rsp+0xb24]
   140018f99:	jmp    0x14001923b
   140018f9e:	mov    QWORD PTR [rsp+0x2d8],0x0
   140018faa:	mov    edx,0x400
   140018faf:	lea    rcx,[rsp+0x50]
   140018fb4:	call   0x140015bd0
   140018fb9:	mov    QWORD PTR [rsp+0x2d8],rax
   140018fc1:	mov    r8,QWORD PTR [rsp+0x2d8]
   140018fc9:	mov    edx,0x208
   140018fce:	lea    rcx,[rsp+0x2e0]
   140018fd6:	call   0x140014fe0
   140018fdb:	cmp    QWORD PTR [rsp+0x38],0x0
   140018fe1:	je     0x140018ff6
   140018fe3:	xor    ecx,ecx
   140018fe5:	call   QWORD PTR [rip+0x21095]        # 0x14003a080
   140018feb:	cmp    QWORD PTR [rsp+0x38],rax
   140018ff0:	jne    0x1400190b8
   140018ff6:	mov    eax,0x22
   140018ffb:	mov    WORD PTR [rsp+0x6f0],ax
   140019003:	lea    rcx,[rsp+0x6f2]
   14001900b:	lea    r8,[rsp+0x2e0]
   140019013:	mov    edx,0x20b
   140019018:	call   0x1400150c0
   14001901d:	movzx  eax,al
   140019020:	test   eax,eax
   140019022:	jne    0x140019055
   140019024:	mov    DWORD PTR [rsp+0xb28],0x80004005
   14001902f:	lea    rcx,[rsp+0x268]
   140019037:	call   0x140016a10
   14001903c:	lea    rcx,[rsp+0x270]
   140019044:	call   0x140014ef0
   140019049:	mov    eax,DWORD PTR [rsp+0xb28]
   140019050:	jmp    0x14001923b
   140019055:	lea    rcx,[rsp+0x6f0]
   14001905d:	call   0x140015120
   140019062:	cdqe   
   140019064:	mov    QWORD PTR [rsp+0xb10],rax
   14001906c:	mov    ecx,0x22
   140019071:	mov    rax,QWORD PTR [rsp+0xb10]
   140019079:	mov    WORD PTR [rsp+rax*2+0x6f0],cx
   140019081:	xor    ecx,ecx
   140019083:	mov    rax,QWORD PTR [rsp+0xb10]
   14001908b:	mov    WORD PTR [rsp+rax*2+0x6f2],cx
   140019093:	lea    r8,[rsp+0x6f0]
   14001909b:	lea    rdx,[rip+0x269a6]        # 0x14003fa48
   1400190a2:	lea    rcx,[rsp+0x270]
   1400190aa:	call   0x1400155a0
   1400190af:	mov    DWORD PTR [rsp+0x2d0],eax
   1400190b6:	jmp    0x1400190db
   1400190b8:	lea    r8,[rsp+0x2e0]
   1400190c0:	lea    rdx,[rip+0x26981]        # 0x14003fa48
   1400190c7:	lea    rcx,[rsp+0x270]
   1400190cf:	call   0x1400155a0
   1400190d4:	mov    DWORD PTR [rsp+0x2d0],eax
   1400190db:	cmp    DWORD PTR [rsp+0x2d0],0x0
   1400190e3:	jge    0x140019119
   1400190e5:	mov    eax,DWORD PTR [rsp+0x2d0]
   1400190ec:	mov    DWORD PTR [rsp+0xb2c],eax
   1400190f3:	lea    rcx,[rsp+0x268]
   1400190fb:	call   0x140016a10
   140019100:	lea    rcx,[rsp+0x270]
   140019108:	call   0x140014ef0
   14001910d:	mov    eax,DWORD PTR [rsp+0xb2c]
   140019114:	jmp    0x14001923b
   140019119:	lea    r8,[rsp+0x2e0]
   140019121:	lea    rdx,[rip+0x26930]        # 0x14003fa58
   140019128:	lea    rcx,[rsp+0x270]
   140019130:	call   0x1400155a0
   140019135:	mov    DWORD PTR [rsp+0x2d0],eax
   14001913c:	cmp    DWORD PTR [rsp+0x2d0],0x0
   140019144:	jge    0x14001917a
   140019146:	mov    eax,DWORD PTR [rsp+0x2d0]
   14001914d:	mov    DWORD PTR [rsp+0xb30],eax
   140019154:	lea    rcx,[rsp+0x268]
   14001915c:	call   0x140016a10
   140019161:	lea    rcx,[rsp+0x270]
   140019169:	call   0x140014ef0
   14001916e:	mov    eax,DWORD PTR [rsp+0xb30]
   140019175:	jmp    0x14001923b
   14001917a:	lea    rax,[rip+0x268ef]        # 0x14003fa70
   140019181:	mov    QWORD PTR [rsp+0x2c8],rax
   140019189:	mov    edx,0x400
   14001918e:	mov    rcx,QWORD PTR [rsp+0xb68]
   140019196:	call   0x140015bd0
   14001919b:	mov    QWORD PTR [rsp+0x28],rax
   1400191a0:	cmp    DWORD PTR [rsp+0xb70],0x0
   1400191a8:	je     0x1400191d5
   1400191aa:	mov    r9,QWORD PTR [rsp+0x2c8]
   1400191b2:	mov    r8,QWORD PTR [rsp+0x28]
   1400191b7:	mov    rdx,QWORD PTR [rsp+0x2d8]
   1400191bf:	lea    rcx,[rsp+0x270]
   1400191c7:	call   0x140015680
   1400191cc:	mov    DWORD PTR [rsp+0xb38],eax
   1400191d3:	jmp    0x1400191fe
   1400191d5:	mov    r9,QWORD PTR [rsp+0x2c8]
   1400191dd:	mov    r8,QWORD PTR [rsp+0x28]
   1400191e2:	mov    rdx,QWORD PTR [rsp+0x2d8]
   1400191ea:	lea    rcx,[rsp+0x270]
   1400191f2:	call   0x140018cd0
   1400191f7:	mov    DWORD PTR [rsp+0xb38],eax
   1400191fe:	mov    eax,DWORD PTR [rsp+0xb38]
   140019205:	mov    DWORD PTR [rsp+0x2c4],eax
   14001920c:	mov    eax,DWORD PTR [rsp+0x2c4]
   140019213:	mov    DWORD PTR [rsp+0xb34],eax
   14001921a:	lea    rcx,[rsp+0x268]
   140019222:	call   0x140016a10
   140019227:	lea    rcx,[rsp+0x270]
   14001922f:	call   0x140014ef0
   140019234:	mov    eax,DWORD PTR [rsp+0xb34]
   14001923b:	mov    rcx,QWORD PTR [rsp+0xb40]
   140019243:	xor    rcx,rsp
   140019246:	call   0x14001c500
   14001924b:	add    rsp,0xb58
   140019252:	ret    
   140019253:	int3   
   140019254:	int3   
   140019255:	int3   
   140019256:	int3   
   140019257:	int3   
   140019258:	int3   
   140019259:	int3   
   14001925a:	int3   
   14001925b:	int3   
   14001925c:	int3   
   14001925d:	int3   
   14001925e:	int3   
   14001925f:	int3   
   140019260:	mov    QWORD PTR [rsp+0x20],r9
   140019265:	mov    DWORD PTR [rsp+0x18],r8d
   14001926a:	mov    QWORD PTR [rsp+0x10],rdx
   14001926f:	mov    QWORD PTR [rsp+0x8],rcx
   140019274:	sub    rsp,0x28
   140019278:	mov    r9,QWORD PTR [rsp+0x48]
   14001927d:	mov    r8d,DWORD PTR [rsp+0x40]
   140019282:	mov    rdx,QWORD PTR [rsp+0x38]
   140019287:	mov    rcx,QWORD PTR [rsp+0x30]
   14001928c:	call   0x140018db0
   140019291:	add    rsp,0x28
   140019295:	ret    
   140019296:	int3   
   140019297:	int3   
   140019298:	int3   
   140019299:	int3   
   14001929a:	int3   
   14001929b:	int3   
   14001929c:	int3   
   14001929d:	int3   
   14001929e:	int3   
   14001929f:	int3   
   1400192a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400192a5:	sub    rsp,0x28
   1400192a9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400192ae:	call   0x1400140e0
   1400192b3:	mov    r11,QWORD PTR [rsp+0x30]
   1400192b8:	lea    rax,[rip+0x267e9]        # 0x14003faa8
   1400192bf:	mov    QWORD PTR [r11],rax
   1400192c2:	mov    rax,QWORD PTR [rsp+0x30]
   1400192c7:	mov    QWORD PTR [rip+0x337ea],rax        # 0x14004cab8
   1400192ce:	mov    rax,QWORD PTR [rsp+0x30]
   1400192d3:	add    rsp,0x28
   1400192d7:	ret    
   1400192d8:	int3   
   1400192d9:	int3   
   1400192da:	int3   
   1400192db:	int3   
   1400192dc:	int3   
   1400192dd:	int3   
   1400192de:	int3   
   1400192df:	int3   
   1400192e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400192e5:	sub    rsp,0x28
   1400192e9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400192ee:	call   0x140005660
   1400192f3:	mov    rax,QWORD PTR [rsp+0x30]
   1400192f8:	add    rsp,0x28
   1400192fc:	ret    
   1400192fd:	int3   
   1400192fe:	int3   
   1400192ff:	int3   
   140019300:	mov    QWORD PTR [rsp+0x10],rdx
   140019305:	mov    QWORD PTR [rsp+0x8],rcx
   14001930a:	sub    rsp,0x28
   14001930e:	mov    rdx,QWORD PTR [rsp+0x38]
   140019313:	mov    rcx,QWORD PTR [rsp+0x30]
   140019318:	call   0x140019330
   14001931d:	add    rsp,0x28
   140019321:	ret    
   140019322:	int3   
   140019323:	int3   
   140019324:	int3   
   140019325:	int3   
   140019326:	int3   
   140019327:	int3   
   140019328:	int3   
   140019329:	int3   
   14001932a:	int3   
   14001932b:	int3   
   14001932c:	int3   
   14001932d:	int3   
   14001932e:	int3   
   14001932f:	int3   
   140019330:	mov    QWORD PTR [rsp+0x10],rdx
   140019335:	mov    QWORD PTR [rsp+0x8],rcx
   14001933a:	sub    rsp,0x38
   14001933e:	mov    r8d,0x10
   140019344:	mov    rdx,QWORD PTR [rsp+0x48]
   140019349:	mov    rcx,QWORD PTR [rsp+0x40]
   14001934e:	call   0x14001d840
   140019353:	test   eax,eax
   140019355:	jne    0x140019361
   140019357:	mov    DWORD PTR [rsp+0x20],0x1
   14001935f:	jmp    0x140019369
   140019361:	mov    DWORD PTR [rsp+0x20],0x0
   140019369:	mov    eax,DWORD PTR [rsp+0x20]
   14001936d:	add    rsp,0x38
   140019371:	ret    
   140019372:	jmp    QWORD PTR [rip+0x21018]        # 0x14003a390
   140019378:	rex push rbx
   14001937a:	sub    rsp,0x20
   14001937e:	mov    rbx,rcx
   140019381:	add    rcx,0x28
   140019385:	call   QWORD PTR [rip+0x20d6d]        # 0x14003a0f8
   14001938b:	mov    rcx,QWORD PTR [rbx+0x50]
   14001938f:	test   rcx,rcx
   140019392:	je     0x14001939e
   140019394:	call   0x14001ca48
   140019399:	and    QWORD PTR [rbx+0x50],0x0
   14001939e:	and    DWORD PTR [rbx+0x58],0x0
   1400193a2:	and    DWORD PTR [rbx+0x5c],0x0
   1400193a6:	add    rsp,0x20
   1400193aa:	pop    rbx
   1400193ab:	ret    
   1400193ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400193b1:	push   rdi
   1400193b2:	sub    rsp,0x20
   1400193b6:	xor    edx,edx
   1400193b8:	mov    rdi,rcx
   1400193bb:	lea    r8d,[rdx+0x28]
   1400193bf:	add    rcx,r8
   1400193c2:	call   0x14001c730
   1400193c7:	and    QWORD PTR [rdi+0x50],0x0
   1400193cc:	and    DWORD PTR [rdi+0x58],0x0
   1400193d0:	and    DWORD PTR [rdi+0x5c],0x0
   1400193d4:	lea    rax,[rip+0xfffffffffffe6c25]        # 0x140000000
   1400193db:	lea    rcx,[rdi+0x28]
   1400193df:	mov    QWORD PTR [rdi+0x10],rax
   1400193e3:	mov    QWORD PTR [rdi+0x8],rax
   1400193e7:	lea    rax,[rip+0x21242]        # 0x14003a630
   1400193ee:	mov    DWORD PTR [rdi],0x60
   1400193f4:	mov    DWORD PTR [rdi+0x18],0x900
   1400193fb:	mov    QWORD PTR [rdi+0x20],rax
   1400193ff:	call   0x140014f40
   140019404:	movzx  ecx,BYTE PTR [rip+0x336a1]        # 0x14004caac
   14001940b:	mov    rbx,QWORD PTR [rsp+0x30]
   140019410:	test   eax,eax
   140019412:	mov    edx,0x1
   140019417:	mov    rax,rdi
   14001941a:	cmovs  ecx,edx
   14001941d:	mov    BYTE PTR [rip+0x33689],cl        # 0x14004caac
   140019423:	add    rsp,0x20
   140019427:	pop    rdi
   140019428:	ret    
   140019429:	int3   
   14001942a:	int3   
   14001942b:	int3   
   14001942c:	mov    QWORD PTR [rsp+0x8],rbx
   140019431:	mov    QWORD PTR [rsp+0x10],rsi
   140019436:	push   rdi
   140019437:	sub    rsp,0x20
   14001943b:	mov    rbx,rcx
   14001943e:	lock add DWORD PTR [rip+0x2fbba],0x1        # 0x140049000
   140019446:	jne    0x140019466
   140019448:	lea    rdi,[rip+0x321d1]        # 0x14004b620
   14001944f:	mov    esi,0x4
   140019454:	mov    rcx,rdi
   140019457:	call   0x14001c478
   14001945c:	add    rdi,0x28
   140019460:	sub    rsi,0x1
   140019464:	jne    0x140019454
   140019466:	mov    rsi,QWORD PTR [rsp+0x38]
   14001946b:	mov    rax,rbx
   14001946e:	mov    rbx,QWORD PTR [rsp+0x30]
   140019473:	add    rsp,0x20
   140019477:	pop    rdi
   140019478:	ret    
   140019479:	int3   
   14001947a:	int3   
   14001947b:	int3   
   14001947c:	mov    QWORD PTR [rsp+0x8],rbx
   140019481:	push   rdi
   140019482:	sub    rsp,0x20
   140019486:	lock add DWORD PTR [rip+0x2fb72],0xffffffff        # 0x140049000
   14001948e:	jns    0x1400194ae
   140019490:	lea    rbx,[rip+0x32189]        # 0x14004b620
   140019497:	mov    edi,0x4
   14001949c:	mov    rcx,rbx
   14001949f:	call   0x14001c480
   1400194a4:	add    rbx,0x28
   1400194a8:	sub    rdi,0x1
   1400194ac:	jne    0x14001949c
   1400194ae:	mov    rbx,QWORD PTR [rsp+0x30]
   1400194b3:	add    rsp,0x20
   1400194b7:	pop    rdi
   1400194b8:	ret    
   1400194b9:	int3   
   1400194ba:	int3   
   1400194bb:	int3   
   1400194bc:	rex push rbx
   1400194be:	sub    rsp,0x20
   1400194c2:	cmp    edx,0x4
   1400194c5:	mov    rbx,rcx
   1400194c8:	mov    DWORD PTR [rcx],edx
   1400194ca:	jge    0x1400194e3
   1400194cc:	movsxd rax,edx
   1400194cf:	lea    rdx,[rax+rax*4]
   1400194d3:	lea    rax,[rip+0x32146]        # 0x14004b620
   1400194da:	lea    rcx,[rax+rdx*8]
   1400194de:	call   0x14001c488
   1400194e3:	mov    rax,rbx
   1400194e6:	add    rsp,0x20
   1400194ea:	pop    rbx
   1400194eb:	ret    
   1400194ec:	sub    rsp,0x28
   1400194f0:	cmp    DWORD PTR [rcx],0x4
   1400194f3:	jge    0x14001950c
   1400194f5:	movsxd rax,DWORD PTR [rcx]
   1400194f8:	lea    rcx,[rax+rax*4]
   1400194fc:	lea    rax,[rip+0x3211d]        # 0x14004b620
   140019503:	lea    rcx,[rax+rcx*8]
   140019507:	call   0x14001c490
   14001950c:	add    rsp,0x28
   140019510:	ret    
   140019511:	int3   
   140019512:	int3   
   140019513:	int3   
   140019514:	mov    QWORD PTR [rsp+0x10],rbx
   140019519:	push   rdi
   14001951a:	sub    rsp,0x20
   14001951e:	mov    rdi,QWORD PTR [rcx+0x8]
   140019522:	lea    rcx,[rsp+0x30]
   140019527:	xor    edx,edx
   140019529:	call   0x1400194bc
   14001952e:	mov    rax,QWORD PTR [rdi+0x8]
   140019532:	test   rax,rax
   140019535:	je     0x140019544
   140019537:	cmp    rax,0xffffffffffffffff
   14001953b:	jae    0x140019544
   14001953d:	dec    rax
   140019540:	mov    QWORD PTR [rdi+0x8],rax
   140019544:	xor    ebx,ebx
   140019546:	lea    rcx,[rsp+0x30]
   14001954b:	cmp    QWORD PTR [rdi+0x8],rbx
   14001954f:	cmove  rbx,rdi
   140019553:	call   0x1400194ec
   140019558:	test   rbx,rbx
   14001955b:	je     0x14001956a
   14001955d:	mov    rax,QWORD PTR [rbx]
   140019560:	mov    edx,0x1
   140019565:	mov    rcx,rbx
   140019568:	call   QWORD PTR [rax]
   14001956a:	mov    rbx,QWORD PTR [rsp+0x38]
   14001956f:	add    rsp,0x20
   140019573:	pop    rdi
   140019574:	ret    
   140019575:	int3   
   140019576:	int3   
   140019577:	int3   
   140019578:	mov    QWORD PTR [rsp+0x10],rbx
   14001957d:	push   rdi
   14001957e:	sub    rsp,0x20
   140019582:	mov    rbx,QWORD PTR [rcx]
   140019585:	test   rbx,rbx
   140019588:	je     0x1400195d2
   14001958a:	lea    rcx,[rsp+0x30]
   14001958f:	xor    edx,edx
   140019591:	call   0x1400194bc
   140019596:	mov    rax,QWORD PTR [rbx+0x8]
   14001959a:	test   rax,rax
   14001959d:	je     0x1400195ac
   14001959f:	cmp    rax,0xffffffffffffffff
   1400195a3:	jae    0x1400195ac
   1400195a5:	dec    rax
   1400195a8:	mov    QWORD PTR [rbx+0x8],rax
   1400195ac:	xor    edi,edi
   1400195ae:	lea    rcx,[rsp+0x30]
   1400195b3:	cmp    QWORD PTR [rbx+0x8],rdi
   1400195b7:	cmove  rdi,rbx
   1400195bb:	call   0x1400194ec
   1400195c0:	test   rdi,rdi
   1400195c3:	je     0x1400195d2
   1400195c5:	mov    rax,QWORD PTR [rdi]
   1400195c8:	mov    edx,0x1
   1400195cd:	mov    rcx,rdi
   1400195d0:	call   QWORD PTR [rax]
   1400195d2:	mov    rbx,QWORD PTR [rsp+0x38]
   1400195d7:	add    rsp,0x20
   1400195db:	pop    rdi
   1400195dc:	ret    
   1400195dd:	int3   
   1400195de:	int3   
   1400195df:	int3   
   1400195e0:	sub    rsp,0x28
   1400195e4:	lea    rcx,[rsp+0x30]
   1400195e9:	xor    edx,edx
   1400195eb:	call   0x1400194bc
   1400195f0:	lea    rcx,[rip+0x320d9]        # 0x14004b6d0
   1400195f7:	call   0x140019578
   1400195fc:	and    QWORD PTR [rip+0x320cc],0x0        # 0x14004b6d0
   140019604:	lea    rcx,[rsp+0x30]
   140019609:	call   0x1400194ec
   14001960e:	add    rsp,0x28
   140019612:	ret    
   140019613:	int3   
   140019614:	mov    rax,QWORD PTR [rip+0x320b5]        # 0x14004b6d0
   14001961b:	ret    
   14001961c:	rex push rbx
   14001961e:	sub    rsp,0x20
   140019622:	cmp    BYTE PTR [rip+0x320ef],0x0        # 0x14004b718
   140019629:	mov    rbx,rcx
   14001962c:	jne    0x140019641
   14001962e:	lea    rcx,[rip+0xffffffffffffffab]        # 0x1400195e0
   140019635:	mov    BYTE PTR [rip+0x320dc],0x1        # 0x14004b718
   14001963c:	call   0x14001c498
   140019641:	mov    QWORD PTR [rip+0x32088],rbx        # 0x14004b6d0
   140019648:	add    rsp,0x20
   14001964c:	pop    rbx
   14001964d:	ret    
   14001964e:	int3   
   14001964f:	int3   
   140019650:	rex push rbp
   140019652:	push   rsi
   140019653:	push   rdi
   140019654:	sub    rsp,0x30
   140019658:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140019661:	mov    QWORD PTR [rsp+0x60],rbx
   140019666:	mov    rdi,rcx
   140019669:	xor    edx,edx
   14001966b:	lea    rcx,[rsp+0x58]
   140019670:	call   0x1400194bc
   140019675:	nop
   140019676:	mov    rbx,QWORD PTR [rdi+0x18]
   14001967a:	test   rbx,rbx
   14001967d:	je     0x1400196de
   14001967f:	dec    rbx
   140019682:	mov    rax,QWORD PTR [rdi+0x10]
   140019686:	cmp    QWORD PTR [rax+rbx*8],0x0
   14001968b:	je     0x1400196d9
   14001968d:	mov    rbp,QWORD PTR [rax+rbx*8]
   140019691:	xor    edx,edx
   140019693:	lea    rcx,[rsp+0x50]
   140019698:	call   0x1400194bc
   14001969d:	mov    rax,QWORD PTR [rbp+0x8]
   1400196a1:	test   rax,rax
   1400196a4:	je     0x1400196b3
   1400196a6:	cmp    rax,0xffffffffffffffff
   1400196aa:	jae    0x1400196b3
   1400196ac:	dec    rax
   1400196af:	mov    QWORD PTR [rbp+0x8],rax
   1400196b3:	xor    esi,esi
   1400196b5:	cmp    QWORD PTR [rbp+0x8],rsi
   1400196b9:	cmove  rsi,rbp
   1400196bd:	lea    rcx,[rsp+0x50]
   1400196c2:	call   0x1400194ec
   1400196c7:	test   rsi,rsi
   1400196ca:	je     0x1400196d9
   1400196cc:	mov    rax,QWORD PTR [rsi]
   1400196cf:	mov    edx,0x1
   1400196d4:	mov    rcx,rsi
   1400196d7:	call   QWORD PTR [rax]
   1400196d9:	test   rbx,rbx
   1400196dc:	jne    0x14001967f
   1400196de:	mov    rcx,QWORD PTR [rdi+0x10]
   1400196e2:	call   0x14001ca48
   1400196e7:	nop
   1400196e8:	lea    rcx,[rsp+0x58]
   1400196ed:	call   0x1400194ec
   1400196f2:	mov    rbx,QWORD PTR [rsp+0x60]
   1400196f7:	add    rsp,0x30
   1400196fb:	pop    rdi
   1400196fc:	pop    rsi
   1400196fd:	pop    rbp
   1400196fe:	ret    
   1400196ff:	int3   
   140019700:	rex push rbx
   140019702:	sub    rsp,0x20
   140019706:	lea    rcx,[rsp+0x30]
   14001970b:	xor    edx,edx
   14001970d:	call   0x1400194bc
   140019712:	jmp    0x14001972e
   140019714:	mov    rax,QWORD PTR [rbx]
   140019717:	mov    rcx,rbx
   14001971a:	mov    QWORD PTR [rip+0x31fa7],rax        # 0x14004b6c8
   140019721:	call   0x140019514
   140019726:	mov    rcx,rbx
   140019729:	call   0x14001c4dc
   14001972e:	mov    rbx,QWORD PTR [rip+0x31f93]        # 0x14004b6c8
   140019735:	test   rbx,rbx
   140019738:	jne    0x140019714
   14001973a:	lea    rcx,[rsp+0x30]
   14001973f:	call   0x1400194ec
   140019744:	add    rsp,0x20
   140019748:	pop    rbx
   140019749:	ret    
   14001974a:	int3   
   14001974b:	int3   
   14001974c:	rex push rbx
   14001974e:	sub    rsp,0x20
   140019752:	cmp    QWORD PTR [rip+0x31f6e],0x0        # 0x14004b6c8
   14001975a:	mov    rbx,rcx
   14001975d:	jne    0x140019774
   14001975f:	lea    rcx,[rip+0xffffffffffffff9a]        # 0x140019700
   140019766:	call   0x14001cee4
   14001976b:	test   eax,eax
   14001976d:	je     0x140019774
   14001976f:	call   0x14001de98
   140019774:	mov    ecx,0x10
   140019779:	call   0x14001cb1c
   14001977e:	test   rax,rax
   140019781:	je     0x140019793
   140019783:	mov    rcx,QWORD PTR [rip+0x31f3e]        # 0x14004b6c8
   14001978a:	mov    QWORD PTR [rax+0x8],rbx
   14001978e:	mov    QWORD PTR [rax],rcx
   140019791:	jmp    0x140019795
   140019793:	xor    eax,eax
   140019795:	mov    QWORD PTR [rip+0x31f2c],rax        # 0x14004b6c8
   14001979c:	add    rsp,0x20
   1400197a0:	pop    rbx
   1400197a1:	ret    
   1400197a2:	int3   
   1400197a3:	int3   
   1400197a4:	sub    rsp,0x28
   1400197a8:	cmp    QWORD PTR [rcx+0x70],0x0
   1400197ad:	jbe    0x1400197c7
   1400197af:	cmp    QWORD PTR [rcx+0x78],0x10
   1400197b4:	jb     0x1400197bc
   1400197b6:	mov    rdx,QWORD PTR [rcx+0x60]
   1400197ba:	jmp    0x1400197c0
   1400197bc:	lea    rdx,[rcx+0x60]
   1400197c0:	xor    ecx,ecx
   1400197c2:	call   0x14001f778
   1400197c7:	add    rsp,0x28
   1400197cb:	ret    
   1400197cc:	mov    QWORD PTR [rsp+0x8],rcx
   1400197d1:	push   rdi
   1400197d2:	sub    rsp,0x30
   1400197d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400197df:	mov    QWORD PTR [rsp+0x48],rbx
   1400197e4:	mov    rdi,rcx
   1400197e7:	mov    QWORD PTR [rcx+0x8],0x1
   1400197ef:	lea    rax,[rip+0x20ee2]        # 0x14003a6d8
   1400197f6:	mov    QWORD PTR [rcx],rax
   1400197f9:	xor    eax,eax
   1400197fb:	mov    QWORD PTR [rcx+0x10],rax
   1400197ff:	mov    QWORD PTR [rcx+0x18],rax
   140019803:	mov    DWORD PTR [rcx+0x20],eax
   140019806:	mov    BYTE PTR [rcx+0x24],dl
   140019809:	mov    QWORD PTR [rcx+0x48],0xf
   140019811:	mov    QWORD PTR [rcx+0x40],rax
   140019815:	mov    BYTE PTR [rcx+0x30],al
   140019818:	lea    rcx,[rip+0x20ea9]        # 0x14003a6c8
   14001981f:	call   0x14001c650
   140019824:	mov    r8,rax
   140019827:	lea    rdx,[rip+0x20e9a]        # 0x14003a6c8
   14001982e:	lea    rcx,[rdi+0x28]
   140019832:	call   0x140003240
   140019837:	nop
   140019838:	mov    rax,rdi
   14001983b:	mov    rbx,QWORD PTR [rsp+0x48]
   140019840:	add    rsp,0x30
   140019844:	pop    rdi
   140019845:	ret    
   140019846:	int3   
   140019847:	int3   
   140019848:	mov    QWORD PTR [rsp+0x8],rcx
   14001984d:	push   rdi
   14001984e:	sub    rsp,0x30
   140019852:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001985b:	mov    QWORD PTR [rsp+0x48],rbx
   140019860:	mov    edi,edx
   140019862:	mov    rbx,rcx
   140019865:	lea    rax,[rip+0x20e6c]        # 0x14003a6d8
   14001986c:	mov    QWORD PTR [rcx],rax
   14001986f:	call   0x140019650
   140019874:	nop
   140019875:	cmp    QWORD PTR [rbx+0x48],0x10
   14001987a:	jb     0x140019885
   14001987c:	mov    rcx,QWORD PTR [rbx+0x30]
   140019880:	call   0x14001c4dc
   140019885:	mov    QWORD PTR [rbx+0x48],0xf
   14001988d:	and    QWORD PTR [rbx+0x40],0x0
   140019892:	mov    BYTE PTR [rbx+0x30],0x0
   140019896:	lea    rax,[rip+0x20dd3]        # 0x14003a670
   14001989d:	mov    QWORD PTR [rbx],rax
   1400198a0:	test   dil,0x1
   1400198a4:	je     0x1400198ae
   1400198a6:	mov    rcx,rbx
   1400198a9:	call   0x14001c4dc
   1400198ae:	mov    rax,rbx
   1400198b1:	mov    rbx,QWORD PTR [rsp+0x48]
   1400198b6:	add    rsp,0x30
   1400198ba:	pop    rdi
   1400198bb:	ret    
   1400198bc:	rex push rbx
   1400198be:	sub    rsp,0x30
   1400198c2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400198cb:	mov    rbx,QWORD PTR [rip+0x31dfe]        # 0x14004b6d0
   1400198d2:	test   rbx,rbx
   1400198d5:	jne    0x14001998f
   1400198db:	xor    edx,edx
   1400198dd:	lea    rcx,[rsp+0x48]
   1400198e2:	call   0x1400194bc
   1400198e7:	nop
   1400198e8:	mov    rbx,QWORD PTR [rip+0x31de1]        # 0x14004b6d0
   1400198ef:	test   rbx,rbx
   1400198f2:	jne    0x140019985
   1400198f8:	lea    ecx,[rbx+0x50]
   1400198fb:	call   0x14001cb1c
   140019900:	mov    QWORD PTR [rsp+0x40],rax
   140019905:	test   rax,rax
   140019908:	je     0x140019919
   14001990a:	xor    edx,edx
   14001990c:	mov    rcx,rax
   14001990f:	call   0x1400197cc
   140019914:	mov    rbx,rax
   140019917:	jmp    0x14001991b
   140019919:	xor    ebx,ebx
   14001991b:	mov    rcx,rbx
   14001991e:	call   0x14001961c
   140019923:	mov    DWORD PTR [rbx+0x20],0x3f
   14001992a:	lea    rcx,[rip+0x20dff]        # 0x14003a730
   140019931:	call   0x14001c650
   140019936:	lea    rcx,[rbx+0x28]
   14001993a:	mov    r8,rax
   14001993d:	lea    rdx,[rip+0x20dec]        # 0x14003a730
   140019944:	call   0x140003240
   140019949:	mov    QWORD PTR [rip+0x31d88],rbx        # 0x14004b6d8
   140019950:	xor    edx,edx
   140019952:	lea    rcx,[rsp+0x40]
   140019957:	call   0x1400194bc
   14001995c:	mov    rcx,QWORD PTR [rbx+0x8]
   140019960:	cmp    rcx,0xffffffffffffffff
   140019964:	jae    0x14001996d
   140019966:	inc    rcx
   140019969:	mov    QWORD PTR [rbx+0x8],rcx
   14001996d:	lea    rcx,[rsp+0x40]
   140019972:	call   0x1400194ec
   140019977:	mov    r11,QWORD PTR [rip+0x31d5a]        # 0x14004b6d8
   14001997e:	mov    QWORD PTR [rip+0x31d7b],r11        # 0x14004b700
   140019985:	lea    rcx,[rsp+0x48]
   14001998a:	call   0x1400194ec
   14001998f:	mov    rax,rbx
   140019992:	add    rsp,0x30
   140019996:	pop    rbx
   140019997:	ret    
   140019998:	mov    QWORD PTR [rsp+0x8],rbx
   14001999d:	mov    QWORD PTR [rsp+0x10],rsi
   1400199a2:	push   rdi
   1400199a3:	sub    rsp,0x20
   1400199a7:	cmp    QWORD PTR [rdx+0x20],0x10
   1400199ac:	mov    rsi,rcx
   1400199af:	jb     0x1400199b7
   1400199b1:	mov    rdi,QWORD PTR [rdx+0x8]
   1400199b5:	jmp    0x1400199bb
   1400199b7:	lea    rdi,[rdx+0x8]
   1400199bb:	xor    edx,edx
   1400199bd:	xor    ecx,ecx
   1400199bf:	call   0x14001f778
   1400199c4:	mov    rbx,rax
   1400199c7:	lea    rax,[rip+0x25959]        # 0x14003f327
   1400199ce:	test   rbx,rbx
   1400199d1:	cmove  rbx,rax
   1400199d5:	mov    rcx,rbx
   1400199d8:	call   0x14001c650
   1400199dd:	lea    rcx,[rsi+0x58]
   1400199e1:	mov    rdx,rbx
   1400199e4:	mov    r8,rax
   1400199e7:	call   0x140003240
   1400199ec:	test   rdi,rdi
   1400199ef:	je     0x1400199fe
   1400199f1:	mov    rdx,rdi
   1400199f4:	xor    ecx,ecx
   1400199f6:	call   0x14001f778
   1400199fb:	mov    rdi,rax
   1400199fe:	lea    rax,[rip+0x20cc3]        # 0x14003a6c8
   140019a05:	test   rdi,rdi
   140019a08:	cmove  rdi,rax
   140019a0c:	mov    rcx,rdi
   140019a0f:	call   0x14001c650
   140019a14:	lea    rcx,[rsi+0x80]
   140019a1b:	mov    rdx,rdi
   140019a1e:	mov    r8,rax
   140019a21:	mov    rbx,QWORD PTR [rsp+0x30]
   140019a26:	mov    rsi,QWORD PTR [rsp+0x38]
   140019a2b:	add    rsp,0x20
   140019a2f:	pop    rdi
   140019a30:	jmp    0x140003240
   140019a35:	int3   
   140019a36:	int3   
   140019a37:	int3   
   140019a38:	rex push rbx
   140019a3a:	sub    rsp,0x20
   140019a3e:	mov    rbx,rcx
   140019a41:	call   0x140020564
   140019a46:	mov    edx,DWORD PTR [rax+0x4]
   140019a49:	mov    DWORD PTR [rbx],edx
   140019a4b:	call   0x14002052c
   140019a50:	mov    edx,0x2
   140019a55:	mov    ecx,0x100
   140019a5a:	mov    DWORD PTR [rbx+0x4],eax
   140019a5d:	call   0x140020950
   140019a62:	mov    QWORD PTR [rbx+0x8],rax
   140019a66:	test   rax,rax
   140019a69:	je     0x140019a8b
   140019a6b:	call   0x14001ff70
   140019a70:	mov    rcx,QWORD PTR [rbx+0x8]
   140019a74:	mov    r8d,0x200
   140019a7a:	mov    rdx,rax
   140019a7d:	call   0x1400205b0
   140019a82:	mov    DWORD PTR [rbx+0x10],0x1
   140019a89:	jmp    0x140019a98
   140019a8b:	call   0x14001ff70
   140019a90:	and    DWORD PTR [rbx+0x10],0x0
   140019a94:	mov    QWORD PTR [rbx+0x8],rax
   140019a98:	mov    rax,rbx
   140019a9b:	add    rsp,0x20
   140019a9f:	pop    rbx
   140019aa0:	ret    
   140019aa1:	int3   
   140019aa2:	int3   
   140019aa3:	int3   
   140019aa4:	mov    QWORD PTR [rsp+0x8],rbx
   140019aa9:	mov    QWORD PTR [rsp+0x18],rsi
   140019aae:	mov    WORD PTR [rsp+0x10],dx
   140019ab3:	push   rdi
   140019ab4:	sub    rsp,0x40
   140019ab8:	mov    rsi,rcx
   140019abb:	test   r9,r9
   140019abe:	jne    0x140019ad6
   140019ac0:	call   0x140020564
   140019ac5:	mov    ebx,DWORD PTR [rax+0x8]
   140019ac8:	call   0x14002052c
   140019acd:	movzx  edx,WORD PTR [rsp+0x58]
   140019ad2:	mov    edi,eax
   140019ad4:	jmp    0x140019add
   140019ad6:	mov    ebx,DWORD PTR [r9]
   140019ad9:	mov    edi,DWORD PTR [r9+0x4]
   140019add:	test   ebx,ebx
   140019adf:	jne    0x140019af2
   140019ae1:	mov    eax,0xff
   140019ae6:	cmp    dx,ax
   140019ae9:	ja     0x140019b3f
   140019aeb:	mov    BYTE PTR [rsi],dl
   140019aed:	lea    eax,[rbx+0x1]
   140019af0:	jmp    0x140019b4d
   140019af2:	and    DWORD PTR [rsp+0x68],0x0
   140019af7:	mov    ecx,edi
   140019af9:	call   0x140019bd0
   140019afe:	mov    rcx,rax
   140019b01:	call   0x14002050c
   140019b06:	lea    rcx,[rsp+0x68]
   140019b0b:	lea    r8,[rsp+0x58]
   140019b10:	mov    QWORD PTR [rsp+0x38],rcx
   140019b15:	and    QWORD PTR [rsp+0x30],0x0
   140019b1b:	mov    DWORD PTR [rsp+0x28],eax
   140019b1f:	mov    ecx,edi
   140019b21:	mov    r9d,0x1
   140019b27:	xor    edx,edx
   140019b29:	mov    QWORD PTR [rsp+0x20],rsi
   140019b2e:	call   QWORD PTR [rip+0x206f4]        # 0x14003a228
   140019b34:	test   eax,eax
   140019b36:	je     0x140019b3f
   140019b38:	cmp    DWORD PTR [rsp+0x68],0x0
   140019b3d:	je     0x140019b4d
   140019b3f:	call   0x140020aa4
   140019b44:	mov    DWORD PTR [rax],0x2a
   140019b4a:	or     eax,0xffffffff
   140019b4d:	mov    rbx,QWORD PTR [rsp+0x50]
   140019b52:	mov    rsi,QWORD PTR [rsp+0x60]
   140019b57:	add    rsp,0x40
   140019b5b:	pop    rdi
   140019b5c:	ret    
   140019b5d:	int3   
   140019b5e:	int3   
   140019b5f:	int3   
   140019b60:	sub    rsp,0x28
   140019b64:	call   0x140020564
   140019b69:	mov    ecx,DWORD PTR [rax+0x8]
   140019b6c:	mov    DWORD PTR [rsp+0x30],ecx
   140019b70:	call   0x14002052c
   140019b75:	mov    DWORD PTR [rsp+0x34],eax
   140019b79:	mov    rax,QWORD PTR [rsp+0x30]
   140019b7e:	add    rsp,0x28
   140019b82:	ret    
   140019b83:	int3   
   140019b84:	sub    rsp,0x58
   140019b88:	mov    rax,QWORD PTR [rip+0x2f8d1]        # 0x140049460
   140019b8f:	xor    rax,rsp
   140019b92:	mov    QWORD PTR [rsp+0x40],rax
   140019b97:	mov    r9d,0xa
   140019b9d:	lea    rdx,[rsp+0x21]
   140019ba2:	mov    ecx,ecx
   140019ba4:	lea    r8d,[r9+0x15]
   140019ba8:	mov    BYTE PTR [rsp+0x20],0x2e
   140019bad:	call   0x140020de4
   140019bb2:	lea    rdx,[rsp+0x20]
   140019bb7:	xor    ecx,ecx
   140019bb9:	call   0x14001f640
   140019bbe:	mov    rcx,QWORD PTR [rsp+0x40]
   140019bc3:	xor    rcx,rsp
   140019bc6:	call   0x14001c500
   140019bcb:	add    rsp,0x58
   140019bcf:	ret    
   140019bd0:	mov    QWORD PTR [rsp+0x8],rbx
   140019bd5:	mov    QWORD PTR [rsp+0x10],rbp
   140019bda:	mov    QWORD PTR [rsp+0x18],rsi
   140019bdf:	push   rdi
   140019be0:	push   r12
   140019be2:	push   r13
   140019be4:	sub    rsp,0x20
   140019be8:	mov    eax,0x8421085
   140019bed:	mov    r8d,ecx
   140019bf0:	mov    r12d,ecx
   140019bf3:	mov    ebp,ecx
   140019bf5:	lea    r13,[rip+0x31b24]        # 0x14004b720
   140019bfc:	mul    ecx
   140019bfe:	sub    r8d,edx
   140019c01:	shr    r8d,1
   140019c04:	add    r8d,edx
   140019c07:	shr    r8d,0x5
   140019c0b:	imul   r8d,r8d,0x3e
   140019c0f:	sub    r12d,r8d
   140019c12:	xor    ebx,ebx
   140019c14:	mov    rsi,QWORD PTR [r13+r12*8+0x0]
   140019c19:	mov    rdi,rsi
   140019c1c:	test   rsi,rsi
   140019c1f:	je     0x140019c2e
   140019c21:	cmp    DWORD PTR [rdi+0x8],ebp
   140019c24:	je     0x140019c82
   140019c26:	mov    rdi,QWORD PTR [rdi]
   140019c29:	test   rdi,rdi
   140019c2c:	jne    0x140019c21
   140019c2e:	test   rbx,rbx
   140019c31:	jne    0x140019c56
   140019c33:	lea    ecx,[rbx+0x18]
   140019c36:	call   0x1400208e4
   140019c3b:	mov    rbx,rax
   140019c3e:	test   rax,rax
   140019c41:	je     0x140019ca6
   140019c43:	mov    ecx,ebp
   140019c45:	call   0x140019b84
   140019c4a:	mov    QWORD PTR [rbx+0x10],rax
   140019c4e:	test   rax,rax
   140019c51:	je     0x140019c9e
   140019c53:	mov    DWORD PTR [rbx+0x8],ebp
   140019c56:	mov    QWORD PTR [rbx],rsi
   140019c59:	mov    rax,rsi
   140019c5c:	lock cmpxchg QWORD PTR [r13+r12*8+0x0],rbx
   140019c63:	jne    0x140019c14
   140019c65:	mov    rax,QWORD PTR [rbx+0x10]
   140019c69:	mov    rbx,QWORD PTR [rsp+0x40]
   140019c6e:	mov    rbp,QWORD PTR [rsp+0x48]
   140019c73:	mov    rsi,QWORD PTR [rsp+0x50]
   140019c78:	add    rsp,0x20
   140019c7c:	pop    r13
   140019c7e:	pop    r12
   140019c80:	pop    rdi
   140019c81:	ret    
   140019c82:	test   rbx,rbx
   140019c85:	je     0x140019c98
   140019c87:	mov    rcx,QWORD PTR [rbx+0x10]
   140019c8b:	call   0x14001e9e0
   140019c90:	mov    rcx,rbx
   140019c93:	call   0x14001ca48
   140019c98:	mov    rax,QWORD PTR [rdi+0x10]
   140019c9c:	jmp    0x140019c69
   140019c9e:	mov    rcx,rbx
   140019ca1:	call   0x14001ca48
   140019ca6:	xor    eax,eax
   140019ca8:	jmp    0x140019c69
   140019caa:	int3   
   140019cab:	int3   
   140019cac:	mov    QWORD PTR [rsp+0x8],rbx
   140019cb1:	mov    QWORD PTR [rsp+0x10],rbp
   140019cb6:	mov    QWORD PTR [rsp+0x18],rsi
   140019cbb:	push   rdi
   140019cbc:	sub    rsp,0x20
   140019cc0:	lea    rdi,[rip+0x31a59]        # 0x14004b720
   140019cc7:	mov    esi,0x3e
   140019ccc:	xor    ebp,ebp
   140019cce:	xchg   QWORD PTR [rdi],rbp
   140019cd1:	test   rbp,rbp
   140019cd4:	je     0x140019cf3
   140019cd6:	mov    rcx,QWORD PTR [rbp+0x10]
   140019cda:	mov    rbx,QWORD PTR [rbp+0x0]
   140019cde:	call   0x14001e9e0
   140019ce3:	mov    rcx,rbp
   140019ce6:	call   0x14001ca48
   140019ceb:	mov    rbp,rbx
   140019cee:	test   rbx,rbx
   140019cf1:	jne    0x140019cd6
   140019cf3:	add    rdi,0x8
   140019cf7:	sub    rsi,0x1
   140019cfb:	jne    0x140019ccc
   140019cfd:	mov    rbx,QWORD PTR [rsp+0x30]
   140019d02:	mov    rbp,QWORD PTR [rsp+0x38]
   140019d07:	mov    rsi,QWORD PTR [rsp+0x40]
   140019d0c:	add    rsp,0x20
   140019d10:	pop    rdi
   140019d11:	ret    
   140019d12:	int3   
   140019d13:	int3   
   140019d14:	sub    rsp,0x28
   140019d18:	lea    rcx,[rip+0xffffffffffffff8d]        # 0x140019cac
   140019d1f:	call   0x14001cee4
   140019d24:	neg    eax
   140019d26:	sbb    eax,eax
   140019d28:	and    eax,0x18
   140019d2b:	add    rsp,0x28
   140019d2f:	ret    
   140019d30:	mov    QWORD PTR [rsp+0x8],rbx
   140019d35:	mov    QWORD PTR [rsp+0x10],rbp
   140019d3a:	mov    QWORD PTR [rsp+0x18],rsi
   140019d3f:	push   rdi
   140019d40:	push   r12
   140019d42:	push   r13
   140019d44:	push   r14
   140019d46:	push   r15
   140019d48:	sub    rsp,0x30
   140019d4c:	xor    r15d,r15d
   140019d4f:	mov    r12,r9
   140019d52:	mov    r14,r8
   140019d55:	mov    rdi,rdx
   140019d58:	mov    rsi,rcx
   140019d5b:	cmp    rdx,r15
   140019d5e:	je     0x140019d73
   140019d60:	cmp    r8,r15
   140019d63:	je     0x140019d73
   140019d65:	cmp    BYTE PTR [rdx],r15b
   140019d68:	jne    0x140019d92
   140019d6a:	cmp    rcx,r15
   140019d6d:	je     0x140019d73
   140019d6f:	mov    WORD PTR [rcx],r15w
   140019d73:	xor    eax,eax
   140019d75:	mov    rbx,QWORD PTR [rsp+0x60]
   140019d7a:	mov    rbp,QWORD PTR [rsp+0x68]
   140019d7f:	mov    rsi,QWORD PTR [rsp+0x70]
   140019d84:	add    rsp,0x30
   140019d88:	pop    r15
   140019d8a:	pop    r14
   140019d8c:	pop    r13
   140019d8e:	pop    r12
   140019d90:	pop    rdi
   140019d91:	ret    
   140019d92:	mov    rax,QWORD PTR [rsp+0x80]
   140019d9a:	cmp    rax,r15
   140019d9d:	jne    0x140019db1
   140019d9f:	call   0x140020564
   140019da4:	mov    ebx,DWORD PTR [rax+0x8]
   140019da7:	call   0x14002052c
   140019dac:	mov    r13d,eax
   140019daf:	jmp    0x140019db7
   140019db1:	mov    ebx,DWORD PTR [rax]
   140019db3:	mov    r13d,DWORD PTR [rax+0x4]
   140019db7:	cmp    ebx,r15d
   140019dba:	jne    0x140019dce
   140019dbc:	cmp    rsi,r15
   140019dbf:	je     0x140019dc7
   140019dc1:	movzx  eax,BYTE PTR [rdi]
   140019dc4:	mov    WORD PTR [rsi],ax
   140019dc7:	mov    eax,0x1
   140019dcc:	jmp    0x140019d75
   140019dce:	mov    ecx,r13d
   140019dd1:	call   0x140019bd0
   140019dd6:	mov    rbp,rax
   140019dd9:	cmp    DWORD PTR [r12],r15d
   140019ddd:	je     0x140019e48
   140019ddf:	mov    cl,BYTE PTR [rdi]
   140019de1:	mov    BYTE PTR [r12+0x1],cl
   140019de6:	mov    rcx,rax
   140019de9:	call   0x14002050c
   140019dee:	cmp    eax,0x1
   140019df1:	jle    0x140019e31
   140019df3:	mov    ecx,r15d
   140019df6:	mov    r9d,0x2
   140019dfc:	cmp    rsi,r15
   140019dff:	setne  cl
   140019e02:	lea    edx,[r9+0x7]
   140019e06:	mov    r8,r12
   140019e09:	mov    DWORD PTR [rsp+0x28],ecx
   140019e0d:	mov    ecx,r13d
   140019e10:	mov    QWORD PTR [rsp+0x20],rsi
   140019e15:	call   QWORD PTR [rip+0x20385]        # 0x14003a1a0
   140019e1b:	cmp    eax,r15d
   140019e1e:	je     0x140019e31
   140019e20:	mov    DWORD PTR [r12],r15d
   140019e24:	mov    rcx,rbp
   140019e27:	call   0x14002050c
   140019e2c:	jmp    0x140019d75
   140019e31:	mov    DWORD PTR [r12],r15d
   140019e35:	call   0x140020aa4
   140019e3a:	mov    DWORD PTR [rax],0x2a
   140019e40:	or     eax,0xffffffff
   140019e43:	jmp    0x140019d75
   140019e48:	cmp    rax,r15
   140019e4b:	jne    0x140019e61
   140019e4d:	call   0x14001ff70
   140019e52:	movzx  ecx,BYTE PTR [rdi]
   140019e55:	movzx  edx,WORD PTR [rax+rcx*2]
   140019e59:	and    edx,0x8000
   140019e5f:	jmp    0x140019e70
   140019e61:	movzx  ecx,BYTE PTR [rdi]
   140019e64:	mov    rax,QWORD PTR [rax+0x8]
   140019e68:	movzx  edx,BYTE PTR [rax+rcx*1+0x1d]
   140019e6d:	and    edx,0x4
   140019e70:	cmp    edx,r15d
   140019e73:	je     0x140019ee8
   140019e75:	mov    rcx,rbp
   140019e78:	call   0x14002050c
   140019e7d:	movsxd rcx,eax
   140019e80:	cmp    r14,rcx
   140019e83:	jae    0x140019e95
   140019e85:	mov    al,BYTE PTR [rdi]
   140019e87:	mov    BYTE PTR [r12],al
   140019e8b:	mov    eax,0xfffffffe
   140019e90:	jmp    0x140019d75
   140019e95:	mov    rcx,rbp
   140019e98:	call   0x14002050c
   140019e9d:	cmp    eax,0x1
   140019ea0:	jle    0x140019ed9
   140019ea2:	cmp    rsi,r15
   140019ea5:	mov    rcx,rbp
   140019ea8:	mov    ebx,r15d
   140019eab:	setne  bl
   140019eae:	call   0x14002050c
   140019eb3:	mov    r8,rdi
   140019eb6:	mov    edx,0x9
   140019ebb:	mov    ecx,r13d
   140019ebe:	mov    r9d,eax
   140019ec1:	mov    DWORD PTR [rsp+0x28],ebx
   140019ec5:	mov    QWORD PTR [rsp+0x20],rsi
   140019eca:	call   QWORD PTR [rip+0x202d0]        # 0x14003a1a0
   140019ed0:	cmp    eax,r15d
   140019ed3:	jne    0x140019e24
   140019ed9:	cmp    BYTE PTR [rdi+0x1],r15b
   140019edd:	jne    0x140019e24
   140019ee3:	jmp    0x140019e31
   140019ee8:	mov    eax,r15d
   140019eeb:	mov    r9d,0x1
   140019ef1:	cmp    rsi,r15
   140019ef4:	setne  al
   140019ef7:	lea    edx,[r9+0x8]
   140019efb:	mov    r8,rdi
   140019efe:	mov    DWORD PTR [rsp+0x28],eax
   140019f02:	mov    ecx,r13d
   140019f05:	mov    QWORD PTR [rsp+0x20],rsi
   140019f0a:	call   QWORD PTR [rip+0x20290]        # 0x14003a1a0
   140019f10:	cmp    eax,r15d
   140019f13:	jne    0x140019dc7
   140019f19:	jmp    0x140019e35
   140019f1e:	int3   
   140019f1f:	int3   
   140019f20:	jmp    0x14001cb1c
   140019f25:	int3   
   140019f26:	int3   
   140019f27:	int3   
   140019f28:	mov    WORD PTR [rsp+0x8],cx
   140019f2d:	sub    rsp,0x48
   140019f31:	mov    eax,DWORD PTR [rdx]
   140019f33:	lea    r8,[rsp+0x50]
   140019f38:	xor    ecx,ecx
   140019f3a:	mov    DWORD PTR [rsp+0x30],eax
   140019f3e:	mov    eax,DWORD PTR [rdx+0x4]
   140019f41:	mov    edx,0x1
   140019f46:	mov    DWORD PTR [rsp+0x28],eax
   140019f4a:	lea    rax,[rsp+0x58]
   140019f4f:	mov    r9d,edx
   140019f52:	mov    QWORD PTR [rsp+0x20],rax
   140019f57:	call   0x140020df8
   140019f5c:	movsx  edx,WORD PTR [rsp+0x58]
   140019f61:	neg    eax
   140019f63:	sbb    ecx,ecx
   140019f65:	and    ecx,edx
   140019f67:	mov    ax,cx
   140019f6a:	add    rsp,0x48
   140019f6e:	ret    
   140019f6f:	int3   
   140019f70:	rex push rbx
   140019f72:	sub    rsp,0x40
   140019f76:	mov    r10,r9
   140019f79:	mov    r9,rdx
   140019f7c:	mov    rbx,rdx
   140019f7f:	mov    eax,DWORD PTR [r10]
   140019f82:	sub    r9,rcx
   140019f85:	mov    edx,0x1
   140019f8a:	mov    DWORD PTR [rsp+0x30],eax
   140019f8e:	mov    eax,DWORD PTR [r10+0x4]
   140019f92:	sar    r9,1
   140019f95:	mov    DWORD PTR [rsp+0x28],eax
   140019f99:	mov    QWORD PTR [rsp+0x20],r8
   140019f9e:	mov    r8,rcx
   140019fa1:	xor    ecx,ecx
   140019fa3:	call   0x140020df8
   140019fa8:	mov    rax,rbx
   140019fab:	add    rsp,0x40
   140019faf:	pop    rbx
   140019fb0:	ret    
   140019fb1:	int3   
   140019fb2:	int3   
   140019fb3:	int3   
   140019fb4:	mov    WORD PTR [rsp+0x8],cx
   140019fb9:	sub    rsp,0x48
   140019fbd:	mov    eax,0xffff
   140019fc2:	mov    WORD PTR [rsp+0x60],cx
   140019fc7:	cmp    cx,ax
   140019fca:	je     0x14001a025
   140019fcc:	cmp    DWORD PTR [rdx],0x0
   140019fcf:	mov    r8d,0x100
   140019fd5:	jne    0x140019fec
   140019fd7:	cmp    cx,r8w
   140019fdb:	jae    0x140019fec
   140019fdd:	lea    eax,[rcx-0x41]
   140019fe0:	cmp    ax,0x19
   140019fe4:	ja     0x14001a025
   140019fe6:	add    cx,0x20
   140019fea:	jmp    0x14001a025
   140019fec:	mov    eax,DWORD PTR [rdx+0x4]
   140019fef:	mov    edx,DWORD PTR [rdx]
   140019ff1:	mov    ecx,0x1
   140019ff6:	mov    DWORD PTR [rsp+0x38],eax
   140019ffa:	mov    DWORD PTR [rsp+0x30],ecx
   140019ffe:	lea    rax,[rsp+0x60]
   14001a003:	mov    QWORD PTR [rsp+0x28],rax
   14001a008:	mov    DWORD PTR [rsp+0x20],ecx
   14001a00c:	lea    r9,[rsp+0x50]
   14001a011:	xor    ecx,ecx
   14001a013:	call   0x140020e5c
   14001a018:	movzx  ecx,WORD PTR [rsp+0x60]
   14001a01d:	test   eax,eax
   14001a01f:	cmove  cx,WORD PTR [rsp+0x50]
   14001a025:	mov    ax,cx
   14001a028:	add    rsp,0x48
   14001a02c:	ret    
   14001a02d:	int3   
   14001a02e:	int3   
   14001a02f:	int3   
   14001a030:	mov    WORD PTR [rsp+0x8],cx
   14001a035:	sub    rsp,0x48
   14001a039:	mov    rax,rdx
   14001a03c:	mov    edx,0xffff
   14001a041:	mov    WORD PTR [rsp+0x60],cx
   14001a046:	cmp    cx,dx
   14001a049:	je     0x14001a0a9
   14001a04b:	mov    edx,DWORD PTR [rax]
   14001a04d:	test   edx,edx
   14001a04f:	jne    0x14001a06c
   14001a051:	mov    r8d,0x100
   14001a057:	cmp    cx,r8w
   14001a05b:	jae    0x14001a06c
   14001a05d:	lea    eax,[rcx-0x61]
   14001a060:	cmp    ax,0x19
   14001a064:	ja     0x14001a0a9
   14001a066:	sub    cx,0x20
   14001a06a:	jmp    0x14001a0a9
   14001a06c:	mov    eax,DWORD PTR [rax+0x4]
   14001a06f:	mov    ecx,0x1
   14001a074:	lea    r9,[rsp+0x50]
   14001a079:	mov    DWORD PTR [rsp+0x38],eax
   14001a07d:	mov    DWORD PTR [rsp+0x30],ecx
   14001a081:	lea    rax,[rsp+0x60]
   14001a086:	mov    QWORD PTR [rsp+0x28],rax
   14001a08b:	mov    DWORD PTR [rsp+0x20],ecx
   14001a08f:	xor    ecx,ecx
   14001a091:	mov    r8d,0x200
   14001a097:	call   0x140020e5c
   14001a09c:	movzx  ecx,WORD PTR [rsp+0x60]
   14001a0a1:	test   eax,eax
   14001a0a3:	cmove  cx,WORD PTR [rsp+0x50]
   14001a0a9:	mov    ax,cx
   14001a0ac:	add    rsp,0x48
   14001a0b0:	ret    
   14001a0b1:	int3   
   14001a0b2:	int3   
   14001a0b3:	int3   
   14001a0b4:	mov    QWORD PTR [rsp+0x8],rbx
   14001a0b9:	push   rdi
   14001a0ba:	sub    rsp,0x20
   14001a0be:	mov    rbx,QWORD PTR [rcx+0x38]
   14001a0c2:	mov    rdi,rcx
   14001a0c5:	jmp    0x14001a0d6
   14001a0c7:	mov    r8d,DWORD PTR [rbx+0x8]
   14001a0cb:	mov    rdx,rdi
   14001a0ce:	xor    ecx,ecx
   14001a0d0:	call   QWORD PTR [rbx+0x10]
   14001a0d3:	mov    rbx,QWORD PTR [rbx]
   14001a0d6:	test   rbx,rbx
   14001a0d9:	jne    0x14001a0c7
   14001a0db:	mov    rcx,QWORD PTR [rdi+0x30]
   14001a0df:	test   rcx,rcx
   14001a0e2:	je     0x14001a0f4
   14001a0e4:	mov    rbx,QWORD PTR [rcx]
   14001a0e7:	call   0x14001c4dc
   14001a0ec:	mov    rcx,rbx
   14001a0ef:	test   rbx,rbx
   14001a0f2:	jne    0x14001a0e4
   14001a0f4:	mov    rcx,QWORD PTR [rdi+0x38]
   14001a0f8:	and    QWORD PTR [rdi+0x30],0x0
   14001a0fd:	test   rcx,rcx
   14001a100:	je     0x14001a112
   14001a102:	mov    rbx,QWORD PTR [rcx]
   14001a105:	call   0x14001c4dc
   14001a10a:	mov    rcx,rbx
   14001a10d:	test   rbx,rbx
   14001a110:	jne    0x14001a102
   14001a112:	and    QWORD PTR [rdi+0x38],0x0
   14001a117:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a11c:	add    rsp,0x20
   14001a120:	pop    rdi
   14001a121:	ret    
   14001a122:	int3   
   14001a123:	int3   
   14001a124:	rex push rbx
   14001a126:	sub    rsp,0x20
   14001a12a:	mov    rbx,rcx
   14001a12d:	lea    rcx,[rsp+0x30]
   14001a132:	mov    edx,0x2
   14001a137:	call   0x1400194bc
   14001a13c:	mov    QWORD PTR [rbx+0x8],0x1
   14001a144:	lea    rdx,[rip+0xfffffffffffe5eb5]        # 0x140000000
   14001a14b:	mov    rax,QWORD PTR [rbx+0x8]
   14001a14f:	mov    rcx,QWORD PTR [rdx+rax*8+0x4b920]
   14001a157:	test   rcx,rcx
   14001a15a:	je     0x14001a16c
   14001a15c:	cmp    rcx,rbx
   14001a15f:	je     0x14001a16c
   14001a161:	inc    QWORD PTR [rbx+0x8]
   14001a165:	cmp    QWORD PTR [rbx+0x8],0x8
   14001a16a:	jb     0x14001a14b
   14001a16c:	mov    rax,QWORD PTR [rbx+0x8]
   14001a170:	lea    rcx,[rsp+0x30]
   14001a175:	mov    QWORD PTR [rdx+rax*8+0x4b920],rbx
   14001a17d:	mov    rax,QWORD PTR [rbx+0x8]
   14001a181:	inc    BYTE PTR [rdx+rax*1+0x4b970]
   14001a188:	call   0x1400194ec
   14001a18d:	add    rsp,0x20
   14001a191:	pop    rbx
   14001a192:	ret    
   14001a193:	int3   
   14001a194:	rex push rbx
   14001a196:	sub    rsp,0x20
   14001a19a:	cmp    QWORD PTR [rcx+0x8],0x0
   14001a19f:	mov    rbx,rcx
   14001a1a2:	jbe    0x14001a1bc
   14001a1a4:	mov    rax,QWORD PTR [rbx+0x8]
   14001a1a8:	lea    rcx,[rip+0x317c1]        # 0x14004b970
   14001a1af:	dec    BYTE PTR [rcx+rax*1]
   14001a1b2:	mov    rax,QWORD PTR [rbx+0x8]
   14001a1b6:	cmp    BYTE PTR [rcx+rax*1],0x0
   14001a1ba:	jg     0x14001a1dd
   14001a1bc:	mov    rcx,rbx
   14001a1bf:	call   0x14001a0b4
   14001a1c4:	mov    rbx,QWORD PTR [rbx+0x40]
   14001a1c8:	test   rbx,rbx
   14001a1cb:	je     0x14001a1dd
   14001a1cd:	mov    rcx,rbx
   14001a1d0:	call   0x140001b80
   14001a1d5:	mov    rcx,rbx
   14001a1d8:	call   0x14001c4dc
   14001a1dd:	add    rsp,0x20
   14001a1e1:	pop    rbx
   14001a1e2:	ret    
   14001a1e3:	int3   
   14001a1e4:	rex push rbx
   14001a1e6:	sub    rsp,0x20
   14001a1ea:	mov    rbx,rcx
   14001a1ed:	mov    ecx,0x28
   14001a1f2:	call   0x14001cb1c
   14001a1f7:	mov    rcx,rax
   14001a1fa:	mov    QWORD PTR [rbx],rax
   14001a1fd:	call   0x14001c478
   14001a202:	mov    rax,rbx
   14001a205:	add    rsp,0x20
   14001a209:	pop    rbx
   14001a20a:	ret    
   14001a20b:	int3   
   14001a20c:	rex push rbx
   14001a20e:	sub    rsp,0x20
   14001a212:	mov    rbx,rcx
   14001a215:	mov    rcx,QWORD PTR [rcx]
   14001a218:	call   0x14001c480
   14001a21d:	mov    rcx,QWORD PTR [rbx]
   14001a220:	add    rsp,0x20
   14001a224:	pop    rbx
   14001a225:	jmp    0x14001c4dc
   14001a22a:	int3   
   14001a22b:	int3   
   14001a22c:	mov    rcx,QWORD PTR [rcx]
   14001a22f:	jmp    0x14001c488
   14001a234:	mov    rcx,QWORD PTR [rcx]
   14001a237:	jmp    0x14001c490
   14001a23c:	rex push rbx
   14001a23e:	sub    rsp,0x20
   14001a242:	lea    rax,[rip+0x204ff]        # 0x14003a748
   14001a249:	mov    rbx,rcx
   14001a24c:	mov    QWORD PTR [rcx],rax
   14001a24f:	cmp    QWORD PTR [rcx+0x38],0x10
   14001a254:	jb     0x14001a25f
   14001a256:	mov    rcx,QWORD PTR [rcx+0x20]
   14001a25a:	call   0x14001c4dc
   14001a25f:	and    QWORD PTR [rbx+0x30],0x0
   14001a264:	mov    QWORD PTR [rbx+0x38],0xf
   14001a26c:	mov    rcx,rbx
   14001a26f:	mov    BYTE PTR [rbx+0x20],0x0
   14001a273:	add    rsp,0x20
   14001a277:	pop    rbx
   14001a278:	jmp    0x14001c944
   14001a27d:	int3   
   14001a27e:	int3   
   14001a27f:	int3   
   14001a280:	mov    QWORD PTR [rsp+0x8],rbx
   14001a285:	push   rdi
   14001a286:	sub    rsp,0x20
   14001a28a:	lea    rax,[rip+0x204b7]        # 0x14003a748
   14001a291:	mov    edi,edx
   14001a293:	mov    rbx,rcx
   14001a296:	mov    QWORD PTR [rcx],rax
   14001a299:	cmp    QWORD PTR [rcx+0x38],0x10
   14001a29e:	jb     0x14001a2a9
   14001a2a0:	mov    rcx,QWORD PTR [rcx+0x20]
   14001a2a4:	call   0x14001c4dc
   14001a2a9:	and    QWORD PTR [rbx+0x30],0x0
   14001a2ae:	mov    QWORD PTR [rbx+0x38],0xf
   14001a2b6:	mov    rcx,rbx
   14001a2b9:	mov    BYTE PTR [rbx+0x20],0x0
   14001a2bd:	call   0x14001c944
   14001a2c2:	test   dil,0x1
   14001a2c6:	je     0x14001a2d0
   14001a2c8:	mov    rcx,rbx
   14001a2cb:	call   0x14001c4dc
   14001a2d0:	mov    rax,rbx
   14001a2d3:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a2d8:	add    rsp,0x20
   14001a2dc:	pop    rdi
   14001a2dd:	ret    
   14001a2de:	int3   
   14001a2df:	int3   
   14001a2e0:	sub    rsp,0x98
   14001a2e7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001a2f0:	lea    rdx,[rip+0x204b9]        # 0x14003a7b0
   14001a2f7:	lea    rcx,[rsp+0x28]
   14001a2fc:	call   0x140003170
   14001a301:	nop
   14001a302:	lea    rcx,[rsp+0x50]
   14001a307:	call   0x14001c81c
   14001a30c:	nop
   14001a30d:	lea    rax,[rip+0x20434]        # 0x14003a748
   14001a314:	mov    QWORD PTR [rsp+0x50],rax
   14001a319:	lea    rdx,[rsp+0x28]
   14001a31e:	lea    rcx,[rsp+0x68]
   14001a323:	call   0x1400031d0
   14001a328:	nop
   14001a329:	lea    rax,[rip+0x20430]        # 0x14003a760
   14001a330:	mov    QWORD PTR [rsp+0x50],rax
   14001a335:	lea    rdx,[rip+0x2d68c]        # 0x1400479c8
   14001a33c:	lea    rcx,[rsp+0x50]
   14001a341:	call   0x14001e5c0
   14001a346:	int3   
   14001a347:	int3   
   14001a348:	sub    rsp,0x98
   14001a34f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001a358:	mov    QWORD PTR [rsp+0x48],0xf
   14001a361:	and    QWORD PTR [rsp+0x40],0x0
   14001a367:	mov    BYTE PTR [rsp+0x30],0x0
   14001a36c:	lea    rcx,[rip+0x20475]        # 0x14003a7e8
   14001a373:	call   0x14001c650
   14001a378:	mov    r8,rax
   14001a37b:	lea    rdx,[rip+0x20466]        # 0x14003a7e8
   14001a382:	lea    rcx,[rsp+0x28]
   14001a387:	call   0x140003240
   14001a38c:	nop
   14001a38d:	lea    rcx,[rsp+0x50]
   14001a392:	call   0x14001c81c
   14001a397:	nop
   14001a398:	lea    rax,[rip+0x203a9]        # 0x14003a748
   14001a39f:	mov    QWORD PTR [rsp+0x50],rax
   14001a3a4:	lea    rdx,[rsp+0x28]
   14001a3a9:	lea    rcx,[rsp+0x68]
   14001a3ae:	call   0x1400031d0
   14001a3b3:	nop
   14001a3b4:	lea    rax,[rip+0x203bd]        # 0x14003a778
   14001a3bb:	mov    QWORD PTR [rsp+0x50],rax
   14001a3c0:	lea    rdx,[rip+0x2d411]        # 0x1400477d8
   14001a3c7:	lea    rcx,[rsp+0x50]
   14001a3cc:	call   0x14001e5c0
   14001a3d1:	int3   
   14001a3d2:	int3   
   14001a3d3:	int3   
   14001a3d4:	mov    QWORD PTR [rsp+0x8],rcx
   14001a3d9:	push   rdi
   14001a3da:	sub    rsp,0x30
   14001a3de:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001a3e7:	mov    QWORD PTR [rsp+0x48],rbx
   14001a3ec:	mov    rbx,rdx
   14001a3ef:	mov    rdi,rcx
   14001a3f2:	call   0x14001c8c4
   14001a3f7:	nop
   14001a3f8:	lea    rax,[rip+0x20349]        # 0x14003a748
   14001a3ff:	mov    QWORD PTR [rdi],rax
   14001a402:	lea    rcx,[rdi+0x18]
   14001a406:	mov    QWORD PTR [rcx+0x20],0xf
   14001a40e:	and    QWORD PTR [rcx+0x18],0x0
   14001a413:	mov    BYTE PTR [rcx+0x8],0x0
   14001a417:	lea    rdx,[rbx+0x18]
   14001a41b:	or     r9,0xffffffffffffffff
   14001a41f:	xor    r8d,r8d
   14001a422:	call   0x1400052a0
   14001a427:	nop
   14001a428:	lea    rax,[rip+0x20349]        # 0x14003a778
   14001a42f:	mov    QWORD PTR [rdi],rax
   14001a432:	mov    rax,rdi
   14001a435:	mov    rbx,QWORD PTR [rsp+0x48]
   14001a43a:	add    rsp,0x30
   14001a43e:	pop    rdi
   14001a43f:	ret    
   14001a440:	jmp    0x1400212b8
   14001a445:	int3   
   14001a446:	int3   
   14001a447:	int3   
   14001a448:	mov    QWORD PTR [rsp+0x20],r9
   14001a44d:	mov    QWORD PTR [rsp+0x10],rdx
   14001a452:	push   rbx
   14001a453:	push   rbp
   14001a454:	push   rsi
   14001a455:	push   rdi
   14001a456:	push   r12
   14001a458:	push   r13
   14001a45a:	push   r14
   14001a45c:	push   r15
   14001a45e:	sub    rsp,0x38
   14001a462:	mov    r14,r9
   14001a465:	mov    esi,r8d
   14001a468:	mov    rbp,rdx
   14001a46b:	mov    r13,rcx
   14001a46e:	test   r9,r9
   14001a471:	je     0x14001a477
   14001a473:	and    DWORD PTR [r9],0x0
   14001a477:	mov    rbx,rcx
   14001a47a:	movzx  ecx,BYTE PTR [rcx]
   14001a47d:	jmp    0x14001a485
   14001a47f:	inc    rbx
   14001a482:	movzx  ecx,BYTE PTR [rbx]
   14001a485:	call   0x14002002c
   14001a48a:	test   eax,eax
   14001a48c:	jne    0x14001a47f
   14001a48e:	mov    r12b,BYTE PTR [rbx]
   14001a491:	cmp    r12b,0x2d
   14001a495:	je     0x14001a4a2
   14001a497:	cmp    r12b,0x2b
   14001a49b:	je     0x14001a4a2
   14001a49d:	mov    r12b,0x2b
   14001a4a0:	jmp    0x14001a4a5
   14001a4a2:	inc    rbx
   14001a4a5:	test   esi,esi
   14001a4a7:	js     0x14001a60c
   14001a4ad:	cmp    esi,0x1
   14001a4b0:	je     0x14001a60c
   14001a4b6:	cmp    esi,0x24
   14001a4b9:	jg     0x14001a60c
   14001a4bf:	mov    cl,0x30
   14001a4c1:	test   esi,esi
   14001a4c3:	jle    0x14001a4db
   14001a4c5:	cmp    esi,0x10
   14001a4c8:	jne    0x14001a501
   14001a4ca:	cmp    BYTE PTR [rbx],cl
   14001a4cc:	jne    0x14001a501
   14001a4ce:	mov    al,BYTE PTR [rbx+0x1]
   14001a4d1:	cmp    al,0x78
   14001a4d3:	je     0x14001a4fd
   14001a4d5:	cmp    al,0x58
   14001a4d7:	jne    0x14001a501
   14001a4d9:	jmp    0x14001a4fd
   14001a4db:	cmp    BYTE PTR [rbx],cl
   14001a4dd:	je     0x14001a4e6
   14001a4df:	mov    esi,0xa
   14001a4e4:	jmp    0x14001a501
   14001a4e6:	mov    al,BYTE PTR [rbx+0x1]
   14001a4e9:	cmp    al,0x78
   14001a4eb:	je     0x14001a4f8
   14001a4ed:	cmp    al,0x58
   14001a4ef:	je     0x14001a4f8
   14001a4f1:	mov    esi,0x8
   14001a4f6:	jmp    0x14001a501
   14001a4f8:	mov    esi,0x10
   14001a4fd:	add    rbx,0x2
   14001a501:	mov    QWORD PTR [rsp+0x80],rbx
   14001a509:	jmp    0x14001a50e
   14001a50b:	inc    rbx
   14001a50e:	cmp    BYTE PTR [rbx],cl
   14001a510:	je     0x14001a50b
   14001a512:	movsx  ecx,BYTE PTR [rbx]
   14001a515:	xor    edi,edi
   14001a517:	mov    QWORD PTR [rsp+0x20],rbx
   14001a51c:	and    DWORD PTR [rsp+0x90],edi
   14001a523:	movsxd r15,esi
   14001a526:	call   0x1400224cc
   14001a52b:	lea    rcx,[rip+0x202f6]        # 0x14003a828
   14001a532:	mov    r8,r15
   14001a535:	mov    edx,eax
   14001a537:	call   0x14001c6f8
   14001a53c:	test   rax,rax
   14001a53f:	je     0x14001a58e
   14001a541:	movsxd rbp,esi
   14001a544:	lea    r14,[rip+0x202dd]        # 0x14003a828
   14001a54b:	mov    DWORD PTR [rsp+0x90],edi
   14001a552:	sub    al,r14b
   14001a555:	inc    rbx
   14001a558:	movsx  ecx,BYTE PTR [rbx]
   14001a55b:	movsx  r15d,al
   14001a55f:	imul   edi,esi
   14001a562:	add    edi,r15d
   14001a565:	call   0x1400224cc
   14001a56a:	mov    r8,rbp
   14001a56d:	mov    edx,eax
   14001a56f:	mov    rcx,r14
   14001a572:	call   0x14001c6f8
   14001a577:	test   rax,rax
   14001a57a:	jne    0x14001a54b
   14001a57c:	mov    rbp,QWORD PTR [rsp+0x88]
   14001a584:	mov    r14,QWORD PTR [rsp+0x98]
   14001a58c:	jmp    0x14001a596
   14001a58e:	mov    r15b,BYTE PTR [rsp+0x90]
   14001a596:	cmp    QWORD PTR [rsp+0x80],rbx
   14001a59e:	je     0x14001a60c
   14001a5a0:	lea    rcx,[rip+0x202a9]        # 0x14003a850
   14001a5a7:	movsxd rax,esi
   14001a5aa:	movsx  rax,BYTE PTR [rax+rcx*1]
   14001a5af:	mov    rcx,rbx
   14001a5b2:	sub    rcx,rax
   14001a5b5:	sub    rcx,QWORD PTR [rsp+0x20]
   14001a5ba:	js     0x14001a5f7
   14001a5bc:	test   rcx,rcx
   14001a5bf:	jg     0x14001a5da
   14001a5c1:	movsx  ecx,r15b
   14001a5c5:	mov    eax,edi
   14001a5c7:	sub    eax,ecx
   14001a5c9:	cmp    edi,eax
   14001a5cb:	jb     0x14001a5da
   14001a5cd:	xor    edx,edx
   14001a5cf:	div    esi
   14001a5d1:	cmp    eax,DWORD PTR [rsp+0x90]
   14001a5d8:	je     0x14001a5f7
   14001a5da:	call   0x140020aa4
   14001a5df:	mov    DWORD PTR [rax],0x22
   14001a5e5:	test   r14,r14
   14001a5e8:	je     0x14001a5f1
   14001a5ea:	mov    DWORD PTR [r14],0x1
   14001a5f1:	or     edi,0xffffffff
   14001a5f4:	mov    r12b,0x2b
   14001a5f7:	cmp    r12b,0x2d
   14001a5fb:	jne    0x14001a5ff
   14001a5fd:	neg    edi
   14001a5ff:	test   rbp,rbp
   14001a602:	je     0x14001a608
   14001a604:	mov    QWORD PTR [rbp+0x0],rbx
   14001a608:	mov    eax,edi
   14001a60a:	jmp    0x14001a617
   14001a60c:	test   rbp,rbp
   14001a60f:	je     0x14001a615
   14001a611:	mov    QWORD PTR [rbp+0x0],r13
   14001a615:	xor    eax,eax
   14001a617:	add    rsp,0x38
   14001a61b:	pop    r15
   14001a61d:	pop    r14
   14001a61f:	pop    r13
   14001a621:	pop    r12
   14001a623:	pop    rdi
   14001a624:	pop    rsi
   14001a625:	pop    rbp
   14001a626:	pop    rbx
   14001a627:	ret    
   14001a628:	mov    rax,rsp
   14001a62b:	mov    QWORD PTR [rax+0x10],rbx
   14001a62f:	mov    QWORD PTR [rax+0x18],rbp
   14001a633:	mov    QWORD PTR [rax+0x20],rsi
   14001a637:	push   rdi
   14001a638:	push   r12
   14001a63a:	push   r13
   14001a63c:	sub    rsp,0x20
   14001a640:	lea    rsi,[rax+0x8]
   14001a644:	test   rdx,rdx
   14001a647:	mov    r12,rcx
   14001a64a:	mov    rdi,rcx
   14001a64d:	movzx  ecx,BYTE PTR [rcx]
   14001a650:	mov    rbp,r9
   14001a653:	cmovne rsi,rdx
   14001a657:	mov    r13d,r8d
   14001a65a:	jmp    0x14001a662
   14001a65c:	inc    rdi
   14001a65f:	movzx  ecx,BYTE PTR [rdi]
   14001a662:	call   0x14002002c
   14001a667:	test   eax,eax
   14001a669:	jne    0x14001a65c
   14001a66b:	mov    bl,BYTE PTR [rdi]
   14001a66d:	cmp    bl,0x2d
   14001a670:	je     0x14001a67b
   14001a672:	cmp    bl,0x2b
   14001a675:	je     0x14001a67b
   14001a677:	mov    bl,0x2b
   14001a679:	jmp    0x14001a67e
   14001a67b:	inc    rdi
   14001a67e:	mov    r9,rbp
   14001a681:	mov    r8d,r13d
   14001a684:	mov    rdx,rsi
   14001a687:	mov    rcx,rdi
   14001a68a:	call   0x14001a448
   14001a68f:	mov    r11d,eax
   14001a692:	cmp    rdi,QWORD PTR [rsi]
   14001a695:	jne    0x14001a69a
   14001a697:	mov    QWORD PTR [rsi],r12
   14001a69a:	mov    edi,0x7fffffff
   14001a69f:	cmp    r12,QWORD PTR [rsi]
   14001a6a2:	jne    0x14001a6a8
   14001a6a4:	test   eax,eax
   14001a6a6:	jne    0x14001a6bd
   14001a6a8:	cmp    bl,0x2b
   14001a6ab:	jne    0x14001a6b1
   14001a6ad:	cmp    eax,edi
   14001a6af:	ja     0x14001a6bd
   14001a6b1:	cmp    bl,0x2d
   14001a6b4:	jne    0x14001a6e3
   14001a6b6:	cmp    eax,0x80000000
   14001a6bb:	jbe    0x14001a6e3
   14001a6bd:	call   0x140020aa4
   14001a6c2:	mov    DWORD PTR [rax],0x22
   14001a6c8:	test   rbp,rbp
   14001a6cb:	je     0x14001a6d4
   14001a6cd:	mov    DWORD PTR [rbp+0x0],0x1
   14001a6d4:	mov    eax,0x80000000
   14001a6d9:	cmp    bl,0x2d
   14001a6dc:	cmove  edi,eax
   14001a6df:	mov    eax,edi
   14001a6e1:	jmp    0x14001a6ef
   14001a6e3:	neg    eax
   14001a6e5:	cmp    bl,0x2d
   14001a6e8:	cmove  r11d,eax
   14001a6ec:	mov    eax,r11d
   14001a6ef:	mov    rbx,QWORD PTR [rsp+0x48]
   14001a6f4:	mov    rbp,QWORD PTR [rsp+0x50]
   14001a6f9:	mov    rsi,QWORD PTR [rsp+0x58]
   14001a6fe:	add    rsp,0x20
   14001a702:	pop    r13
   14001a704:	pop    r12
   14001a706:	pop    rdi
   14001a707:	ret    
   14001a708:	mov    rax,rsp
   14001a70b:	mov    QWORD PTR [rax+0x10],rbx
   14001a70f:	mov    QWORD PTR [rax+0x18],rbp
   14001a713:	mov    QWORD PTR [rax+0x20],rsi
   14001a717:	push   rdi
   14001a718:	push   r12
   14001a71a:	push   r13
   14001a71c:	sub    rsp,0x20
   14001a720:	lea    rsi,[rax+0x8]
   14001a724:	test   rdx,rdx
   14001a727:	mov    r12,rcx
   14001a72a:	mov    rdi,rcx
   14001a72d:	movzx  ecx,BYTE PTR [rcx]
   14001a730:	mov    rbp,r9
   14001a733:	cmovne rsi,rdx
   14001a737:	mov    r13d,r8d
   14001a73a:	jmp    0x14001a742
   14001a73c:	inc    rdi
   14001a73f:	movzx  ecx,BYTE PTR [rdi]
   14001a742:	call   0x14002002c
   14001a747:	test   eax,eax
   14001a749:	jne    0x14001a73c
   14001a74b:	mov    bl,BYTE PTR [rdi]
   14001a74d:	cmp    bl,0x2d
   14001a750:	je     0x14001a75b
   14001a752:	cmp    bl,0x2b
   14001a755:	je     0x14001a75b
   14001a757:	mov    bl,0x2b
   14001a759:	jmp    0x14001a75e
   14001a75b:	inc    rdi
   14001a75e:	mov    r9,rbp
   14001a761:	mov    r8d,r13d
   14001a764:	mov    rdx,rsi
   14001a767:	mov    rcx,rdi
   14001a76a:	call   0x14001a7fc
   14001a76f:	mov    r11,rax
   14001a772:	cmp    rdi,QWORD PTR [rsi]
   14001a775:	jne    0x14001a77a
   14001a777:	mov    QWORD PTR [rsi],r12
   14001a77a:	movabs rdi,0x8000000000000000
   14001a784:	cmp    r12,QWORD PTR [rsi]
   14001a787:	jne    0x14001a78e
   14001a789:	test   rax,rax
   14001a78c:	jne    0x14001a7ac
   14001a78e:	cmp    bl,0x2b
   14001a791:	jne    0x14001a7a2
   14001a793:	movabs rax,0x7fffffffffffffff
   14001a79d:	cmp    r11,rax
   14001a7a0:	ja     0x14001a7ac
   14001a7a2:	cmp    bl,0x2d
   14001a7a5:	jne    0x14001a7d0
   14001a7a7:	cmp    r11,rdi
   14001a7aa:	jbe    0x14001a7d0
   14001a7ac:	call   0x140020aa4
   14001a7b1:	mov    DWORD PTR [rax],0x22
   14001a7b7:	test   rbp,rbp
   14001a7ba:	je     0x14001a7c3
   14001a7bc:	mov    DWORD PTR [rbp+0x0],0x1
   14001a7c3:	sub    bl,0x2d
   14001a7c6:	neg    bl
   14001a7c8:	sbb    rax,rax
   14001a7cb:	add    rax,rdi
   14001a7ce:	jmp    0x14001a7e0
   14001a7d0:	mov    rax,r11
   14001a7d3:	neg    rax
   14001a7d6:	cmp    bl,0x2d
   14001a7d9:	cmove  r11,rax
   14001a7dd:	mov    rax,r11
   14001a7e0:	mov    rbx,QWORD PTR [rsp+0x48]
   14001a7e5:	mov    rbp,QWORD PTR [rsp+0x50]
   14001a7ea:	mov    rsi,QWORD PTR [rsp+0x58]
   14001a7ef:	add    rsp,0x20
   14001a7f3:	pop    r13
   14001a7f5:	pop    r12
   14001a7f7:	pop    rdi
   14001a7f8:	ret    
   14001a7f9:	int3   
   14001a7fa:	int3   
   14001a7fb:	int3   
   14001a7fc:	mov    QWORD PTR [rsp+0x20],r9
   14001a801:	mov    QWORD PTR [rsp+0x10],rdx
   14001a806:	push   rbx
   14001a807:	push   rbp
   14001a808:	push   rsi
   14001a809:	push   rdi
   14001a80a:	push   r12
   14001a80c:	push   r13
   14001a80e:	push   r14
   14001a810:	push   r15
   14001a812:	sub    rsp,0x38
   14001a816:	mov    r14,r9
   14001a819:	mov    esi,r8d
   14001a81c:	mov    rbp,rdx
   14001a81f:	mov    r13,rcx
   14001a822:	test   r9,r9
   14001a825:	je     0x14001a82b
   14001a827:	and    DWORD PTR [r9],0x0
   14001a82b:	mov    rbx,rcx
   14001a82e:	movzx  ecx,BYTE PTR [rcx]
   14001a831:	jmp    0x14001a839
   14001a833:	inc    rbx
   14001a836:	movzx  ecx,BYTE PTR [rbx]
   14001a839:	call   0x14002002c
   14001a83e:	test   eax,eax
   14001a840:	jne    0x14001a833
   14001a842:	mov    r12b,BYTE PTR [rbx]
   14001a845:	cmp    r12b,0x2d
   14001a849:	je     0x14001a856
   14001a84b:	cmp    r12b,0x2b
   14001a84f:	je     0x14001a856
   14001a851:	mov    r12b,0x2b
   14001a854:	jmp    0x14001a859
   14001a856:	inc    rbx
   14001a859:	test   esi,esi
   14001a85b:	js     0x14001a9cc
   14001a861:	cmp    esi,0x1
   14001a864:	je     0x14001a9cc
   14001a86a:	cmp    esi,0x24
   14001a86d:	jg     0x14001a9cc
   14001a873:	mov    cl,0x30
   14001a875:	test   esi,esi
   14001a877:	jle    0x14001a88f
   14001a879:	cmp    esi,0x10
   14001a87c:	jne    0x14001a8b5
   14001a87e:	cmp    BYTE PTR [rbx],cl
   14001a880:	jne    0x14001a8b5
   14001a882:	mov    al,BYTE PTR [rbx+0x1]
   14001a885:	cmp    al,0x78
   14001a887:	je     0x14001a8b1
   14001a889:	cmp    al,0x58
   14001a88b:	jne    0x14001a8b5
   14001a88d:	jmp    0x14001a8b1
   14001a88f:	cmp    BYTE PTR [rbx],cl
   14001a891:	je     0x14001a89a
   14001a893:	mov    esi,0xa
   14001a898:	jmp    0x14001a8b5
   14001a89a:	mov    al,BYTE PTR [rbx+0x1]
   14001a89d:	cmp    al,0x78
   14001a89f:	je     0x14001a8ac
   14001a8a1:	cmp    al,0x58
   14001a8a3:	je     0x14001a8ac
   14001a8a5:	mov    esi,0x8
   14001a8aa:	jmp    0x14001a8b5
   14001a8ac:	mov    esi,0x10
   14001a8b1:	add    rbx,0x2
   14001a8b5:	mov    r15,rbx
   14001a8b8:	jmp    0x14001a8bd
   14001a8ba:	inc    rbx
   14001a8bd:	cmp    BYTE PTR [rbx],cl
   14001a8bf:	je     0x14001a8ba
   14001a8c1:	movsx  ecx,BYTE PTR [rbx]
   14001a8c4:	xor    edi,edi
   14001a8c6:	mov    QWORD PTR [rsp+0x20],rbx
   14001a8cb:	and    QWORD PTR [rsp+0x80],rdi
   14001a8d3:	mov    BYTE PTR [rsp+0x90],dil
   14001a8db:	movsxd rsi,esi
   14001a8de:	call   0x1400224cc
   14001a8e3:	lea    rcx,[rip+0x1ff8e]        # 0x14003a878
   14001a8ea:	mov    r8,rsi
   14001a8ed:	mov    edx,eax
   14001a8ef:	call   0x14001c6f8
   14001a8f4:	test   rax,rax
   14001a8f7:	je     0x14001a951
   14001a8f9:	lea    r14,[rip+0x1ff78]        # 0x14003a878
   14001a900:	mov    bpl,al
   14001a903:	mov    QWORD PTR [rsp+0x80],rdi
   14001a90b:	mov    rcx,rsi
   14001a90e:	sub    bpl,r14b
   14001a911:	inc    rbx
   14001a914:	imul   rcx,rdi
   14001a918:	movsx  rdi,bpl
   14001a91c:	mov    BYTE PTR [rsp+0x90],bpl
   14001a924:	add    rdi,rcx
   14001a927:	movsx  ecx,BYTE PTR [rbx]
   14001a92a:	call   0x1400224cc
   14001a92f:	mov    r8,rsi
   14001a932:	mov    rcx,r14
   14001a935:	mov    edx,eax
   14001a937:	call   0x14001c6f8
   14001a93c:	test   rax,rax
   14001a93f:	jne    0x14001a900
   14001a941:	mov    rbp,QWORD PTR [rsp+0x88]
   14001a949:	mov    r14,QWORD PTR [rsp+0x98]
   14001a951:	cmp    r15,rbx
   14001a954:	je     0x14001a9cc
   14001a956:	lea    rax,[rip+0x1ff43]        # 0x14003a8a0
   14001a95d:	mov    rcx,rbx
   14001a960:	movsx  rax,BYTE PTR [rsi+rax*1]
   14001a965:	sub    rcx,rax
   14001a968:	sub    rcx,QWORD PTR [rsp+0x20]
   14001a96d:	js     0x14001a9b5
   14001a96f:	test   rcx,rcx
   14001a972:	jg     0x14001a997
   14001a974:	movsx  rcx,BYTE PTR [rsp+0x90]
   14001a97d:	mov    rax,rdi
   14001a980:	sub    rax,rcx
   14001a983:	cmp    rdi,rax
   14001a986:	jb     0x14001a997
   14001a988:	xor    edx,edx
   14001a98a:	div    rsi
   14001a98d:	cmp    rax,QWORD PTR [rsp+0x80]
   14001a995:	je     0x14001a9b5
   14001a997:	call   0x140020aa4
   14001a99c:	mov    DWORD PTR [rax],0x22
   14001a9a2:	test   r14,r14
   14001a9a5:	je     0x14001a9ae
   14001a9a7:	mov    DWORD PTR [r14],0x1
   14001a9ae:	or     rdi,0xffffffffffffffff
   14001a9b2:	mov    r12b,0x2b
   14001a9b5:	cmp    r12b,0x2d
   14001a9b9:	jne    0x14001a9be
   14001a9bb:	neg    rdi
   14001a9be:	test   rbp,rbp
   14001a9c1:	je     0x14001a9c7
   14001a9c3:	mov    QWORD PTR [rbp+0x0],rbx
   14001a9c7:	mov    rax,rdi
   14001a9ca:	jmp    0x14001a9d7
   14001a9cc:	test   rbp,rbp
   14001a9cf:	je     0x14001a9d5
   14001a9d1:	mov    QWORD PTR [rbp+0x0],r13
   14001a9d5:	xor    eax,eax
   14001a9d7:	add    rsp,0x38
   14001a9db:	pop    r15
   14001a9dd:	pop    r14
   14001a9df:	pop    r13
   14001a9e1:	pop    r12
   14001a9e3:	pop    rdi
   14001a9e4:	pop    rsi
   14001a9e5:	pop    rbp
   14001a9e6:	pop    rbx
   14001a9e7:	ret    
   14001a9e8:	sub    rsp,0x28
   14001a9ec:	call   0x14001a9fc
   14001a9f1:	cvtsd2ss xmm0,xmm0
   14001a9f5:	add    rsp,0x28
   14001a9f9:	ret    
   14001a9fa:	int3   
   14001a9fb:	int3   
   14001a9fc:	mov    rax,rsp
   14001a9ff:	mov    QWORD PTR [rax+0x8],rbx
   14001aa03:	mov    QWORD PTR [rax+0x10],rbp
   14001aa07:	mov    QWORD PTR [rax+0x18],rsi
   14001aa0b:	mov    QWORD PTR [rax+0x20],rdi
   14001aa0f:	push   r12
   14001aa11:	sub    rsp,0x30
   14001aa15:	movaps XMMWORD PTR [rax-0x18],xmm6
   14001aa19:	mov    rbp,r9
   14001aa1c:	mov    r12d,r8d
   14001aa1f:	mov    rbx,rdx
   14001aa22:	mov    rdi,rcx
   14001aa25:	call   0x140020aa4
   14001aa2a:	mov    esi,DWORD PTR [rax]
   14001aa2c:	call   0x140020aa4
   14001aa31:	mov    rdx,rbx
   14001aa34:	and    DWORD PTR [rax],0x0
   14001aa37:	mov    rcx,rdi
   14001aa3a:	call   0x140022700
   14001aa3f:	movapd xmm6,xmm0
   14001aa43:	call   0x140020aa4
   14001aa48:	mov    ecx,DWORD PTR [rax]
   14001aa4a:	mov    DWORD PTR [rbp+0x0],ecx
   14001aa4d:	call   0x140020aa4
   14001aa52:	movsd  xmm0,QWORD PTR [rip+0x1fe6e]        # 0x14003a8c8
   14001aa5a:	mov    DWORD PTR [rax],esi
   14001aa5c:	jmp    0x14001aa65
   14001aa5e:	mulsd  xmm6,xmm0
   14001aa62:	dec    r12d
   14001aa65:	test   r12d,r12d
   14001aa68:	jg     0x14001aa5e
   14001aa6a:	jns    0x14001aa7c
   14001aa6c:	neg    r12d
   14001aa6f:	mov    eax,r12d
   14001aa72:	sub    rax,0x1
   14001aa76:	divsd  xmm6,xmm0
   14001aa7a:	jne    0x14001aa72
   14001aa7c:	mov    rbx,QWORD PTR [rsp+0x40]
   14001aa81:	mov    rbp,QWORD PTR [rsp+0x48]
   14001aa86:	mov    rsi,QWORD PTR [rsp+0x50]
   14001aa8b:	movapd xmm0,xmm6
   14001aa8f:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14001aa94:	mov    rdi,QWORD PTR [rsp+0x58]
   14001aa99:	add    rsp,0x30
   14001aa9d:	pop    r12
   14001aa9f:	ret    
   14001aaa0:	jmp    0x14001a9fc
   14001aaa5:	int3   
   14001aaa6:	int3   
   14001aaa7:	int3   
   14001aaa8:	mov    r9,QWORD PTR [rip+0x30fa1]        # 0x14004ba50
   14001aaaf:	lea    r8,[rip+0x2e5ea]        # 0x1400490a0
   14001aab6:	mov    r10,rcx
   14001aab9:	mov    QWORD PTR [rip+0x30f98],r8        # 0x14004ba58
   14001aac0:	test   r9,r9
   14001aac3:	je     0x14001aad8
   14001aac5:	mov    rax,QWORD PTR [r9]
   14001aac8:	movsxd rdx,DWORD PTR [rax+0x4]
   14001aacc:	mov    QWORD PTR [rdx+r9*1+0x50],r8
   14001aad1:	mov    r8,QWORD PTR [rip+0x30f80]        # 0x14004ba58
   14001aad8:	mov    rdx,QWORD PTR [rip+0x30f81]        # 0x14004ba60
   14001aadf:	test   rdx,rdx
   14001aae2:	je     0x14001aaf7
   14001aae4:	mov    rax,QWORD PTR [rdx]
   14001aae7:	movsxd rcx,DWORD PTR [rax+0x4]
   14001aaeb:	mov    QWORD PTR [rcx+rdx*1+0x50],r8
   14001aaf0:	mov    r8,QWORD PTR [rip+0x30f61]        # 0x14004ba58
   14001aaf7:	mov    rdx,QWORD PTR [rip+0x30f6a]        # 0x14004ba68
   14001aafe:	test   rdx,rdx
   14001ab01:	je     0x14001ab0f
   14001ab03:	mov    rax,QWORD PTR [rdx]
   14001ab06:	movsxd rcx,DWORD PTR [rax+0x4]
   14001ab0a:	mov    QWORD PTR [rcx+rdx*1+0x50],r8
   14001ab0f:	mov    rax,r10
   14001ab12:	ret    
   14001ab13:	int3   
   14001ab14:	mov    QWORD PTR [rsp+0x8],rbx
   14001ab19:	mov    QWORD PTR [rsp+0x10],rsi
   14001ab1e:	push   rdi
   14001ab1f:	sub    rsp,0x20
   14001ab23:	and    QWORD PTR [rcx],0x0
   14001ab27:	mov    rbx,r8
   14001ab2a:	mov    rsi,rdx
   14001ab2d:	mov    rdi,rcx
   14001ab30:	test   r8,r8
   14001ab33:	je     0x14001ab65
   14001ab35:	test   rdx,rdx
   14001ab38:	je     0x14001ab65
   14001ab3a:	cmp    QWORD PTR [r8+0x20],0x10
   14001ab3f:	lea    rcx,[r8+0x8]
   14001ab43:	jb     0x14001ab4a
   14001ab45:	mov    rax,QWORD PTR [rcx]
   14001ab48:	jmp    0x14001ab4d
   14001ab4a:	mov    rax,rcx
   14001ab4d:	cmp    rax,rdx
   14001ab50:	ja     0x14001ab65
   14001ab52:	cmp    QWORD PTR [r8+0x20],0x10
   14001ab57:	jb     0x14001ab5c
   14001ab59:	mov    rcx,QWORD PTR [rcx]
   14001ab5c:	add    rcx,QWORD PTR [r8+0x18]
   14001ab60:	cmp    rdx,rcx
   14001ab63:	jbe    0x14001ab6a
   14001ab65:	call   0x14001cd78
   14001ab6a:	mov    QWORD PTR [rdi],rbx
   14001ab6d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ab72:	mov    QWORD PTR [rdi+0x8],rsi
   14001ab76:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ab7b:	mov    rax,rdi
   14001ab7e:	add    rsp,0x20
   14001ab82:	pop    rdi
   14001ab83:	ret    
   14001ab84:	mov    QWORD PTR [rsp+0x8],rbx
   14001ab89:	push   rdi
   14001ab8a:	sub    rsp,0x20
   14001ab8e:	mov    rbx,rdx
   14001ab91:	mov    rdi,rcx
   14001ab94:	call   0x140009460
   14001ab99:	xor    ecx,ecx
   14001ab9b:	lea    rax,[rdi+0x10]
   14001ab9f:	lea    r8,[rdi+0x18]
   14001aba3:	mov    QWORD PTR [rdi+0x20],rax
   14001aba7:	mov    BYTE PTR [rdi+0x80],cl
   14001abad:	mov    BYTE PTR [rdi+0x7a],cl
   14001abb0:	mov    QWORD PTR [rdi+0x28],r8
   14001abb4:	lea    rax,[rdi+0x30]
   14001abb8:	lea    r11,[rip+0x1fe59]        # 0x14003aa18
   14001abbf:	mov    QWORD PTR [rdi+0x40],rax
   14001abc3:	mov    QWORD PTR [rdi],r11
   14001abc6:	lea    rax,[rdi+0x38]
   14001abca:	mov    QWORD PTR [rdi+0x48],rax
   14001abce:	lea    rax,[rdi+0x50]
   14001abd2:	mov    QWORD PTR [rdi+0x58],rax
   14001abd6:	lea    rax,[rdi+0x54]
   14001abda:	mov    QWORD PTR [rdi+0x60],rax
   14001abde:	mov    QWORD PTR [r8],rcx
   14001abe1:	mov    rax,QWORD PTR [rdi+0x48]
   14001abe5:	mov    QWORD PTR [rax],rcx
   14001abe8:	mov    rax,QWORD PTR [rdi+0x60]
   14001abec:	mov    DWORD PTR [rax],ecx
   14001abee:	mov    rax,QWORD PTR [rdi+0x20]
   14001abf2:	mov    QWORD PTR [rax],rcx
   14001abf5:	mov    rax,QWORD PTR [rdi+0x40]
   14001abf9:	mov    QWORD PTR [rax],rcx
   14001abfc:	mov    rax,QWORD PTR [rdi+0x58]
   14001ac00:	mov    DWORD PTR [rax],ecx
   14001ac02:	mov    QWORD PTR [rdi+0x88],rbx
   14001ac09:	mov    eax,DWORD PTR [rip+0x30d6d]        # 0x14004b97c
   14001ac0f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ac14:	mov    DWORD PTR [rdi+0x7c],eax
   14001ac17:	mov    QWORD PTR [rdi+0x70],rcx
   14001ac1b:	mov    rax,rdi
   14001ac1e:	add    rsp,0x20
   14001ac22:	pop    rdi
   14001ac23:	ret    
   14001ac24:	mov    eax,0x1
   14001ac29:	ret    
   14001ac2a:	int3   
   14001ac2b:	int3   
   14001ac2c:	mov    QWORD PTR [rsp+0x8],rbx
   14001ac31:	mov    QWORD PTR [rsp+0x10],rsi
   14001ac36:	push   rdi
   14001ac37:	sub    rsp,0x20
   14001ac3b:	xor    ebx,ebx
   14001ac3d:	mov    rdi,rcx
   14001ac40:	cmp    QWORD PTR [rcx+0x88],rbx
   14001ac47:	je     0x14001ac6e
   14001ac49:	mov    rax,QWORD PTR [rcx]
   14001ac4c:	mov    esi,0xffff
   14001ac51:	mov    edx,esi
   14001ac53:	call   QWORD PTR [rax+0x8]
   14001ac56:	cmp    si,ax
   14001ac59:	je     0x14001ac6e
   14001ac5b:	mov    rcx,QWORD PTR [rdi+0x88]
   14001ac62:	call   0x140023000
   14001ac67:	cmp    eax,ebx
   14001ac69:	jge    0x14001ac6e
   14001ac6b:	or     ebx,0xffffffff
   14001ac6e:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ac73:	mov    eax,ebx
   14001ac75:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ac7a:	add    rsp,0x20
   14001ac7e:	pop    rdi
   14001ac7f:	ret    
   14001ac80:	mov    QWORD PTR [rsp+0x8],rbx
   14001ac85:	mov    QWORD PTR [rsp+0x10],rbp
   14001ac8a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ac8f:	push   rdi
   14001ac90:	push   r12
   14001ac92:	push   r13
   14001ac94:	push   r14
   14001ac96:	push   r15
   14001ac98:	sub    rsp,0x30
   14001ac9c:	mov    rbx,QWORD PTR [rsp+0x80]
   14001aca4:	mov    rsi,QWORD PTR [rsp+0x98]
   14001acac:	mov    rax,QWORD PTR [rsp+0x88]
   14001acb4:	mov    QWORD PTR [rbx],r8
   14001acb7:	xor    r15d,r15d
   14001acba:	mov    QWORD PTR [rsi],rax
   14001acbd:	cmp    QWORD PTR [rbx],r9
   14001acc0:	mov    edi,r15d
   14001acc3:	mov    rbp,r9
   14001acc6:	setne  dil
   14001acca:	mov    r13,rdx
   14001accd:	mov    r14,rcx
   14001acd0:	cmp    QWORD PTR [rbx],r9
   14001acd3:	je     0x14001ad4c
   14001acd5:	mov    r12,QWORD PTR [rsp+0x90]
   14001acdd:	cmp    QWORD PTR [rsi],r12
   14001ace0:	je     0x14001ad4c
   14001ace2:	mov    rdx,QWORD PTR [rbx]
   14001ace5:	mov    rcx,QWORD PTR [rsi]
   14001ace8:	lea    rax,[r14+0x10]
   14001acec:	mov    r8,rbp
   14001acef:	mov    r9,r13
   14001acf2:	mov    QWORD PTR [rsp+0x20],rax
   14001acf7:	sub    r8,QWORD PTR [rbx]
   14001acfa:	call   0x140019d30
   14001acff:	mov    r11d,eax
   14001ad02:	cmp    eax,0xfffffffe
   14001ad05:	je     0x14001ad49
   14001ad07:	cmp    eax,0xffffffff
   14001ad0a:	je     0x14001ad42
   14001ad0c:	cmp    eax,r15d
   14001ad0f:	jne    0x14001ad26
   14001ad11:	mov    rax,QWORD PTR [rsi]
   14001ad14:	cmp    WORD PTR [rax],r15w
   14001ad18:	jne    0x14001ad2e
   14001ad1a:	mov    rcx,QWORD PTR [rbx]
   14001ad1d:	call   0x14001c650
   14001ad22:	lea    r11d,[rax+0x1]
   14001ad26:	cmp    r11d,0xfffffffd
   14001ad2a:	cmove  r11d,r15d
   14001ad2e:	movsxd rax,r11d
   14001ad31:	mov    edi,r15d
   14001ad34:	add    QWORD PTR [rbx],rax
   14001ad37:	add    QWORD PTR [rsi],0x2
   14001ad3b:	cmp    QWORD PTR [rbx],rbp
   14001ad3e:	jne    0x14001acdd
   14001ad40:	jmp    0x14001ad4c
   14001ad42:	mov    eax,0x2
   14001ad47:	jmp    0x14001ad4e
   14001ad49:	mov    QWORD PTR [rbx],rbp
   14001ad4c:	mov    eax,edi
   14001ad4e:	mov    rbx,QWORD PTR [rsp+0x60]
   14001ad53:	mov    rbp,QWORD PTR [rsp+0x68]
   14001ad58:	mov    rsi,QWORD PTR [rsp+0x70]
   14001ad5d:	add    rsp,0x30
   14001ad61:	pop    r15
   14001ad63:	pop    r14
   14001ad65:	pop    r13
   14001ad67:	pop    r12
   14001ad69:	pop    rdi
   14001ad6a:	ret    
   14001ad6b:	int3   
   14001ad6c:	mov    QWORD PTR [rsp+0x18],rbx
   14001ad71:	push   rbp
   14001ad72:	push   rsi
   14001ad73:	push   rdi
   14001ad74:	push   r12
   14001ad76:	push   r13
   14001ad78:	push   r14
   14001ad7a:	push   r15
   14001ad7c:	sub    rsp,0x40
   14001ad80:	mov    rax,QWORD PTR [rip+0x2e6d9]        # 0x140049460
   14001ad87:	xor    rax,rsp
   14001ad8a:	mov    QWORD PTR [rsp+0x30],rax
   14001ad8f:	mov    rsi,QWORD PTR [rsp+0xa0]
   14001ad97:	mov    rdi,QWORD PTR [rsp+0xb8]
   14001ad9f:	mov    rax,QWORD PTR [rsp+0xa8]
   14001ada7:	mov    r14,QWORD PTR [rsp+0xb0]
   14001adaf:	mov    QWORD PTR [rsi],r8
   14001adb2:	xor    ebx,ebx
   14001adb4:	mov    QWORD PTR [rdi],rax
   14001adb7:	cmp    QWORD PTR [rsi],r9
   14001adba:	mov    r15,r9
   14001adbd:	setne  bl
   14001adc0:	cmp    QWORD PTR [rsi],r9
   14001adc3:	mov    r13,rdx
   14001adc6:	mov    r12,rcx
   14001adc9:	mov    QWORD PTR [rsp+0x20],rcx
   14001adce:	je     0x14001ae69
   14001add4:	cmp    QWORD PTR [rdi],r14
   14001add7:	je     0x14001ae69
   14001addd:	mov    rbp,QWORD PTR [rdi]
   14001ade0:	call   0x1400204d0
   14001ade5:	lea    r9,[r12+0x10]
   14001adea:	movsxd rdx,eax
   14001aded:	mov    rax,r14
   14001adf0:	mov    r8,r13
   14001adf3:	sub    rax,rbp
   14001adf6:	cmp    rdx,rax
   14001adf9:	mov    rax,QWORD PTR [rsi]
   14001adfc:	movzx  edx,WORD PTR [rax]
   14001adff:	jg     0x14001ae18
   14001ae01:	mov    rcx,rbp
   14001ae04:	call   0x140019aa4
   14001ae09:	test   eax,eax
   14001ae0b:	js     0x14001ae5e
   14001ae0d:	add    QWORD PTR [rsi],0x2
   14001ae11:	cdqe   
   14001ae13:	add    QWORD PTR [rdi],rax
   14001ae16:	jmp    0x14001ae54
   14001ae18:	mov    ebp,DWORD PTR [r13+0x0]
   14001ae1c:	lea    rcx,[rsp+0x28]
   14001ae21:	call   0x140019aa4
   14001ae26:	test   eax,eax
   14001ae28:	js     0x14001ae5e
   14001ae2a:	mov    rdx,r14
   14001ae2d:	movsxd r12,eax
   14001ae30:	sub    rdx,QWORD PTR [rdi]
   14001ae33:	cmp    rdx,r12
   14001ae36:	jl     0x14001ae65
   14001ae38:	mov    rcx,QWORD PTR [rdi]
   14001ae3b:	lea    r8,[rsp+0x28]
   14001ae40:	mov    r9,r12
   14001ae43:	call   0x14001c53c
   14001ae48:	add    QWORD PTR [rsi],0x2
   14001ae4c:	add    QWORD PTR [rdi],r12
   14001ae4f:	mov    r12,QWORD PTR [rsp+0x20]
   14001ae54:	xor    ebx,ebx
   14001ae56:	cmp    QWORD PTR [rsi],r15
   14001ae59:	jmp    0x14001adce
   14001ae5e:	mov    eax,0x2
   14001ae63:	jmp    0x14001ae6b
   14001ae65:	mov    DWORD PTR [r13+0x0],ebp
   14001ae69:	mov    eax,ebx
   14001ae6b:	mov    rcx,QWORD PTR [rsp+0x30]
   14001ae70:	xor    rcx,rsp
   14001ae73:	call   0x14001c500
   14001ae78:	mov    rbx,QWORD PTR [rsp+0x90]
   14001ae80:	add    rsp,0x40
   14001ae84:	pop    r15
   14001ae86:	pop    r14
   14001ae88:	pop    r13
   14001ae8a:	pop    r12
   14001ae8c:	pop    rdi
   14001ae8d:	pop    rsi
   14001ae8e:	pop    rbp
   14001ae8f:	ret    
   14001ae90:	mov    QWORD PTR [rsp+0x18],rbx
   14001ae95:	push   rbp
   14001ae96:	push   rsi
   14001ae97:	push   rdi
   14001ae98:	push   r12
   14001ae9a:	push   r13
   14001ae9c:	sub    rsp,0x30
   14001aea0:	mov    rax,QWORD PTR [rip+0x2e5b9]        # 0x140049460
   14001aea7:	xor    rax,rsp
   14001aeaa:	mov    QWORD PTR [rsp+0x28],rax
   14001aeaf:	mov    rbp,QWORD PTR [rsp+0x80]
   14001aeb7:	mov    r12,rdx
   14001aeba:	mov    rsi,r9
   14001aebd:	mov    QWORD PTR [rbp+0x0],r8
   14001aec1:	mov    r13d,DWORD PTR [rdx]
   14001aec4:	lea    r9,[rcx+0x10]
   14001aec8:	lea    rcx,[rsp+0x20]
   14001aecd:	xor    edx,edx
   14001aecf:	mov    r8,r12
   14001aed2:	xor    ebx,ebx
   14001aed4:	call   0x140019aa4
   14001aed9:	cmp    eax,ebx
   14001aedb:	jg     0x14001aee4
   14001aedd:	mov    ebx,0x2
   14001aee2:	jmp    0x14001af19
   14001aee4:	sub    rsi,QWORD PTR [rbp+0x0]
   14001aee8:	dec    eax
   14001aeea:	movsxd rdi,eax
   14001aeed:	cmp    rsi,rdi
   14001aef0:	jge    0x14001aefd
   14001aef2:	mov    DWORD PTR [r12],r13d
   14001aef6:	mov    ebx,0x1
   14001aefb:	jmp    0x14001af19
   14001aefd:	cmp    eax,ebx
   14001aeff:	jle    0x14001af19
   14001af01:	mov    rcx,QWORD PTR [rbp+0x0]
   14001af05:	lea    r8,[rsp+0x20]
   14001af0a:	mov    r9,rdi
   14001af0d:	mov    rdx,rsi
   14001af10:	call   0x14001c53c
   14001af15:	add    QWORD PTR [rbp+0x0],rdi
   14001af19:	mov    eax,ebx
   14001af1b:	mov    rcx,QWORD PTR [rsp+0x28]
   14001af20:	xor    rcx,rsp
   14001af23:	call   0x14001c500
   14001af28:	mov    rbx,QWORD PTR [rsp+0x70]
   14001af2d:	add    rsp,0x30
   14001af31:	pop    r13
   14001af33:	pop    r12
   14001af35:	pop    rdi
   14001af36:	pop    rsi
   14001af37:	pop    rbp
   14001af38:	ret    
   14001af39:	int3   
   14001af3a:	int3   
   14001af3b:	int3   
   14001af3c:	mov    QWORD PTR [rsp+0x8],rbx
   14001af41:	mov    QWORD PTR [rsp+0x20],rsi
   14001af46:	push   rdi
   14001af47:	push   r12
   14001af49:	push   r13
   14001af4b:	sub    rsp,0x30
   14001af4f:	mov    eax,DWORD PTR [rdx]
   14001af51:	xor    r13d,r13d
   14001af54:	mov    rsi,r9
   14001af57:	mov    rdi,r8
   14001af5a:	mov    r12,rcx
   14001af5d:	mov    DWORD PTR [rsp+0x60],eax
   14001af61:	mov    ebx,r13d
   14001af64:	cmp    QWORD PTR [rsp+0x70],r13
   14001af69:	jbe    0x14001afcb
   14001af6b:	cmp    rdi,rsi
   14001af6e:	je     0x14001afcb
   14001af70:	lea    rax,[r12+0x10]
   14001af75:	mov    r8,rsi
   14001af78:	lea    r9,[rsp+0x60]
   14001af7d:	lea    rcx,[rsp+0x58]
   14001af82:	mov    rdx,rdi
   14001af85:	sub    r8,rdi
   14001af88:	mov    QWORD PTR [rsp+0x20],rax
   14001af8d:	call   0x140019d30
   14001af92:	cmp    eax,0xfffffffe
   14001af95:	je     0x14001afcb
   14001af97:	cmp    eax,0xffffffff
   14001af9a:	je     0x14001afcb
   14001af9c:	cmp    eax,r13d
   14001af9f:	jne    0x14001afb3
   14001afa1:	cmp    WORD PTR [rsp+0x58],r13w
   14001afa7:	jne    0x14001afba
   14001afa9:	mov    rcx,rdi
   14001afac:	call   0x14001c650
   14001afb1:	inc    eax
   14001afb3:	cmp    eax,0xfffffffd
   14001afb6:	cmove  eax,r13d
   14001afba:	cdqe   
   14001afbc:	inc    ebx
   14001afbe:	add    rdi,rax
   14001afc1:	movsxd rax,ebx
   14001afc4:	cmp    rax,QWORD PTR [rsp+0x70]
   14001afc9:	jb     0x14001af6b
   14001afcb:	mov    rsi,QWORD PTR [rsp+0x68]
   14001afd0:	mov    eax,ebx
   14001afd2:	mov    rbx,QWORD PTR [rsp+0x50]
   14001afd7:	add    rsp,0x30
   14001afdb:	pop    r13
   14001afdd:	pop    r12
   14001afdf:	pop    rdi
   14001afe0:	ret    
   14001afe1:	int3   
   14001afe2:	int3   
   14001afe3:	int3   
   14001afe4:	xor    al,al
   14001afe6:	ret    
   14001afe7:	int3   
   14001afe8:	mov    eax,0x5
   14001afed:	ret    
   14001afee:	int3   
   14001afef:	int3   
   14001aff0:	rex push rbx
   14001aff2:	sub    rsp,0x20
   14001aff6:	lea    rax,[rip+0x1f673]        # 0x14003a670
   14001affd:	mov    rbx,rcx
   14001b000:	mov    QWORD PTR [rcx],rax
   14001b003:	test   dl,0x1
   14001b006:	je     0x14001b00d
   14001b008:	call   0x14001c4dc
   14001b00d:	mov    rax,rbx
   14001b010:	add    rsp,0x20
   14001b014:	pop    rbx
   14001b015:	ret    
   14001b016:	int3   
   14001b017:	int3   
   14001b018:	mov    QWORD PTR [rsp+0x8],rbx
   14001b01d:	mov    QWORD PTR [rsp+0x10],rsi
   14001b022:	push   rdi
   14001b023:	sub    rsp,0x20
   14001b027:	mov    rax,QWORD PTR [rcx+0x40]
   14001b02b:	movzx  ebx,dx
   14001b02e:	mov    rdi,rcx
   14001b031:	mov    rdx,QWORD PTR [rax]
   14001b034:	xor    ecx,ecx
   14001b036:	mov    esi,0xffff
   14001b03b:	cmp    rdx,rcx
   14001b03e:	je     0x14001b06f
   14001b040:	mov    rax,QWORD PTR [rdi+0x20]
   14001b044:	cmp    QWORD PTR [rax],rdx
   14001b047:	jae    0x14001b06f
   14001b049:	cmp    si,bx
   14001b04c:	je     0x14001b054
   14001b04e:	cmp    WORD PTR [rdx-0x2],bx
   14001b052:	jne    0x14001b06f
   14001b054:	mov    rax,QWORD PTR [rdi+0x58]
   14001b058:	inc    DWORD PTR [rax]
   14001b05a:	mov    rax,QWORD PTR [rdi+0x40]
   14001b05e:	add    QWORD PTR [rax],0xfffffffffffffffe
   14001b062:	cmp    bx,si
   14001b065:	je     0x14001b06a
   14001b067:	movzx  ecx,bx
   14001b06a:	mov    ax,cx
   14001b06d:	jmp    0x14001b0ce
   14001b06f:	mov    rdx,QWORD PTR [rdi+0x88]
   14001b076:	cmp    rdx,rcx
   14001b079:	je     0x14001b0cb
   14001b07b:	cmp    si,bx
   14001b07e:	je     0x14001b0cb
   14001b080:	cmp    QWORD PTR [rdi+0x70],rcx
   14001b084:	jne    0x14001b098
   14001b086:	movzx  ecx,bx
   14001b089:	call   0x140022dd0
   14001b08e:	cmp    ax,si
   14001b091:	je     0x14001b098
   14001b093:	mov    ax,bx
   14001b096:	jmp    0x14001b0ce
   14001b098:	mov    rax,QWORD PTR [rdi+0x40]
   14001b09c:	lea    rdx,[rdi+0x78]
   14001b0a0:	cmp    QWORD PTR [rax],rdx
   14001b0a3:	je     0x14001b0cb
   14001b0a5:	mov    rax,QWORD PTR [rdi+0x20]
   14001b0a9:	mov    WORD PTR [rdx],bx
   14001b0ac:	mov    rcx,rdi
   14001b0af:	mov    QWORD PTR [rax],rdx
   14001b0b2:	mov    rax,QWORD PTR [rdi+0x40]
   14001b0b6:	sub    rcx,rdx
   14001b0b9:	mov    QWORD PTR [rax],rdx
   14001b0bc:	mov    rax,QWORD PTR [rdi+0x58]
   14001b0c0:	add    rcx,0x7a
   14001b0c4:	sar    rcx,1
   14001b0c7:	mov    DWORD PTR [rax],ecx
   14001b0c9:	jmp    0x14001b093
   14001b0cb:	mov    ax,si
   14001b0ce:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b0d3:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b0d8:	add    rsp,0x20
   14001b0dc:	pop    rdi
   14001b0dd:	ret    
   14001b0de:	int3   
   14001b0df:	int3   
   14001b0e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b0e5:	push   rdi
   14001b0e6:	sub    rsp,0x20
   14001b0ea:	mov    rax,QWORD PTR [rcx+0x40]
   14001b0ee:	mov    rbx,rcx
   14001b0f1:	mov    rcx,QWORD PTR [rax]
   14001b0f4:	test   rcx,rcx
   14001b0f7:	je     0x14001b10e
   14001b0f9:	mov    rdx,QWORD PTR [rbx+0x58]
   14001b0fd:	movsxd r8,DWORD PTR [rdx]
   14001b100:	lea    rdx,[rcx+r8*2]
   14001b104:	cmp    rcx,rdx
   14001b107:	jae    0x14001b10e
   14001b109:	mov    ax,WORD PTR [rcx]
   14001b10c:	jmp    0x14001b133
   14001b10e:	mov    rax,QWORD PTR [rbx]
   14001b111:	mov    rcx,rbx
   14001b114:	call   QWORD PTR [rax+0x28]
   14001b117:	movzx  edi,ax
   14001b11a:	mov    eax,0xffff
   14001b11f:	cmp    ax,di
   14001b122:	je     0x14001b133
   14001b124:	mov    rax,QWORD PTR [rbx]
   14001b127:	movzx  edx,di
   14001b12a:	mov    rcx,rbx
   14001b12d:	call   QWORD PTR [rax+0x10]
   14001b130:	mov    ax,di
   14001b133:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b138:	add    rsp,0x20
   14001b13c:	pop    rdi
   14001b13d:	ret    
   14001b13e:	int3   
   14001b13f:	int3   
   14001b140:	mov    QWORD PTR [rsp+0x8],rbx
   14001b145:	push   rdi
   14001b146:	sub    rsp,0x20
   14001b14a:	mov    rax,QWORD PTR [rdx]
   14001b14d:	mov    rbx,rcx
   14001b150:	mov    rcx,rdx
   14001b153:	mov    rdi,rdx
   14001b156:	call   QWORD PTR [rax+0x8]
   14001b159:	xor    edx,edx
   14001b15b:	cmp    al,dl
   14001b15d:	je     0x14001b165
   14001b15f:	mov    QWORD PTR [rbx+0x70],rdx
   14001b163:	jmp    0x14001b1bd
   14001b165:	mov    QWORD PTR [rbx+0x70],rdi
   14001b169:	lea    rax,[rbx+0x10]
   14001b16d:	lea    rcx,[rbx+0x18]
   14001b171:	mov    QWORD PTR [rbx+0x20],rax
   14001b175:	mov    QWORD PTR [rbx+0x28],rcx
   14001b179:	lea    rax,[rbx+0x30]
   14001b17d:	mov    QWORD PTR [rbx+0x40],rax
   14001b181:	lea    rax,[rbx+0x38]
   14001b185:	mov    QWORD PTR [rbx+0x48],rax
   14001b189:	lea    rax,[rbx+0x50]
   14001b18d:	mov    QWORD PTR [rbx+0x58],rax
   14001b191:	lea    rax,[rbx+0x54]
   14001b195:	mov    QWORD PTR [rbx+0x60],rax
   14001b199:	mov    QWORD PTR [rcx],rdx
   14001b19c:	mov    rax,QWORD PTR [rbx+0x48]
   14001b1a0:	mov    QWORD PTR [rax],rdx
   14001b1a3:	mov    rax,QWORD PTR [rbx+0x60]
   14001b1a7:	mov    DWORD PTR [rax],edx
   14001b1a9:	mov    rax,QWORD PTR [rbx+0x20]
   14001b1ad:	mov    QWORD PTR [rax],rdx
   14001b1b0:	mov    rax,QWORD PTR [rbx+0x40]
   14001b1b4:	mov    QWORD PTR [rax],rdx
   14001b1b7:	mov    rax,QWORD PTR [rbx+0x58]
   14001b1bb:	mov    DWORD PTR [rax],edx
   14001b1bd:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b1c2:	add    rsp,0x20
   14001b1c6:	pop    rdi
   14001b1c7:	ret    
   14001b1c8:	rex push rbx
   14001b1ca:	sub    rsp,0x20
   14001b1ce:	mov    rbx,rcx
   14001b1d1:	mov    rcx,QWORD PTR [rcx+0x88]
   14001b1d8:	mov    r9,r8
   14001b1db:	test   rcx,rcx
   14001b1de:	je     0x14001b28c
   14001b1e4:	test   rdx,rdx
   14001b1e7:	jne    0x14001b1f4
   14001b1e9:	test   r8,r8
   14001b1ec:	jne    0x14001b1f4
   14001b1ee:	lea    r8d,[r9+0x4]
   14001b1f2:	jmp    0x14001b1f7
   14001b1f4:	xor    r8d,r8d
   14001b1f7:	add    r9,r9
   14001b1fa:	call   0x140023050
   14001b1ff:	test   eax,eax
   14001b201:	jne    0x14001b28c
   14001b207:	mov    rdx,QWORD PTR [rbx+0x88]
   14001b20e:	mov    BYTE PTR [rbx+0x7a],al
   14001b211:	mov    BYTE PTR [rbx+0x80],0x1
   14001b218:	lea    rax,[rbx+0x10]
   14001b21c:	lea    rcx,[rbx+0x18]
   14001b220:	mov    QWORD PTR [rbx+0x20],rax
   14001b224:	mov    QWORD PTR [rbx+0x28],rcx
   14001b228:	lea    rax,[rbx+0x30]
   14001b22c:	mov    QWORD PTR [rbx+0x40],rax
   14001b230:	lea    rax,[rbx+0x38]
   14001b234:	mov    QWORD PTR [rbx+0x48],rax
   14001b238:	lea    rax,[rbx+0x50]
   14001b23c:	mov    QWORD PTR [rbx+0x58],rax
   14001b240:	lea    rax,[rbx+0x54]
   14001b244:	mov    QWORD PTR [rbx+0x60],rax
   14001b248:	and    QWORD PTR [rcx],0x0
   14001b24c:	mov    rax,QWORD PTR [rbx+0x48]
   14001b250:	and    QWORD PTR [rax],0x0
   14001b254:	mov    rax,QWORD PTR [rbx+0x60]
   14001b258:	and    DWORD PTR [rax],0x0
   14001b25b:	mov    rax,QWORD PTR [rbx+0x20]
   14001b25f:	and    QWORD PTR [rax],0x0
   14001b263:	mov    rax,QWORD PTR [rbx+0x40]
   14001b267:	and    QWORD PTR [rax],0x0
   14001b26b:	mov    rax,QWORD PTR [rbx+0x58]
   14001b26f:	and    DWORD PTR [rax],0x0
   14001b272:	mov    QWORD PTR [rbx+0x88],rdx
   14001b279:	mov    eax,DWORD PTR [rip+0x306fd]        # 0x14004b97c
   14001b27f:	and    QWORD PTR [rbx+0x70],0x0
   14001b284:	mov    DWORD PTR [rbx+0x7c],eax
   14001b287:	mov    rax,rbx
   14001b28a:	jmp    0x14001b28e
   14001b28c:	xor    eax,eax
   14001b28e:	add    rsp,0x20
   14001b292:	pop    rbx
   14001b293:	ret    
   14001b294:	mov    rax,rsp
   14001b297:	push   rsi
   14001b298:	push   rdi
   14001b299:	push   r12
   14001b29b:	sub    rsp,0xc0
   14001b2a2:	mov    QWORD PTR [rsp+0x88],0xfffffffffffffffe
   14001b2ae:	mov    QWORD PTR [rax+0x10],rbx
   14001b2b2:	mov    QWORD PTR [rax+0x18],rbp
   14001b2b6:	mov    rax,QWORD PTR [rip+0x2e1a3]        # 0x140049460
   14001b2bd:	xor    rax,rsp
   14001b2c0:	mov    QWORD PTR [rsp+0xb8],rax
   14001b2c8:	mov    rbx,rcx
   14001b2cb:	mov    rax,QWORD PTR [rcx+0x40]
   14001b2cf:	cmp    QWORD PTR [rax],0x0
   14001b2d3:	je     0x14001b304
   14001b2d5:	mov    rdx,QWORD PTR [rax]
   14001b2d8:	mov    rax,QWORD PTR [rcx+0x58]
   14001b2dc:	movsxd rcx,DWORD PTR [rax]
   14001b2df:	lea    rax,[rdx+rcx*2]
   14001b2e3:	cmp    rdx,rax
   14001b2e6:	jae    0x14001b304
   14001b2e8:	mov    rax,QWORD PTR [rbx+0x58]
   14001b2ec:	dec    DWORD PTR [rax]
   14001b2ee:	mov    rdx,QWORD PTR [rbx+0x40]
   14001b2f2:	mov    rax,QWORD PTR [rdx]
   14001b2f5:	lea    rcx,[rax+0x2]
   14001b2f9:	mov    QWORD PTR [rdx],rcx
   14001b2fc:	mov    ax,WORD PTR [rax]
   14001b2ff:	jmp    0x14001b6fc
   14001b304:	mov    rcx,QWORD PTR [rbx+0x88]
   14001b30b:	test   rcx,rcx
   14001b30e:	jne    0x14001b31a
   14001b310:	mov    eax,0xffff
   14001b315:	jmp    0x14001b6fc
   14001b31a:	cmp    QWORD PTR [rbx+0x70],0x0
   14001b31f:	jne    0x14001b342
   14001b321:	call   0x140022900
   14001b326:	movzx  r11d,ax
   14001b32a:	mov    eax,0xffff
   14001b32f:	cmp    r11w,ax
   14001b333:	je     0x14001b6fc
   14001b339:	mov    ax,r11w
   14001b33d:	jmp    0x14001b6fc
   14001b342:	mov    QWORD PTR [rsp+0xb0],0xf
   14001b34e:	and    QWORD PTR [rsp+0xa8],0x0
   14001b357:	mov    BYTE PTR [rsp+0x98],0x0
   14001b35f:	call   0x1400233d8
   14001b364:	cmp    eax,0xffffffff
   14001b367:	je     0x14001b6df
   14001b36d:	mov    r8b,al
   14001b370:	mov    edx,0x1
   14001b375:	lea    rcx,[rsp+0x90]
   14001b37d:	call   0x14000f5f0
   14001b382:	lea    rdx,[rsp+0x98]
   14001b38a:	cmp    QWORD PTR [rsp+0xb0],0x10
   14001b393:	cmovae rdx,QWORD PTR [rsp+0x98]
   14001b39c:	lea    r8,[rsp+0x90]
   14001b3a4:	lea    rcx,[rsp+0x78]
   14001b3a9:	call   0x14001ab14
   14001b3ae:	mov    rbp,QWORD PTR [rsp+0x80]
   14001b3b6:	mov    rdi,QWORD PTR [rsp+0x78]
   14001b3bb:	cmp    rdi,0xfffffffffffffffc
   14001b3bf:	je     0x14001b3ea
   14001b3c1:	test   rdi,rdi
   14001b3c4:	jne    0x14001b3cb
   14001b3c6:	call   0x14001cd78
   14001b3cb:	cmp    QWORD PTR [rdi+0x20],0x10
   14001b3d0:	jb     0x14001b3d8
   14001b3d2:	mov    rcx,QWORD PTR [rdi+0x8]
   14001b3d6:	jmp    0x14001b3dc
   14001b3d8:	lea    rcx,[rdi+0x8]
   14001b3dc:	add    rcx,QWORD PTR [rdi+0x18]
   14001b3e0:	cmp    rbp,rcx
   14001b3e3:	jb     0x14001b3ea
   14001b3e5:	call   0x14001cd78
   14001b3ea:	mov    rsi,QWORD PTR [rsp+0xa8]
   14001b3f2:	lea    rdx,[rsp+0x98]
   14001b3fa:	cmp    QWORD PTR [rsp+0xb0],0x10
   14001b403:	cmovae rdx,QWORD PTR [rsp+0x98]
   14001b40c:	lea    r8,[rsp+0x90]
   14001b414:	lea    rcx,[rsp+0x68]
   14001b419:	call   0x14001ab14
   14001b41e:	mov    rdi,QWORD PTR [rsp+0x68]
   14001b423:	cmp    rdi,0xfffffffffffffffc
   14001b427:	je     0x14001b454
   14001b429:	test   rdi,rdi
   14001b42c:	jne    0x14001b433
   14001b42e:	call   0x14001cd78
   14001b433:	cmp    QWORD PTR [rdi+0x20],0x10
   14001b438:	jb     0x14001b440
   14001b43a:	mov    rcx,QWORD PTR [rdi+0x8]
   14001b43e:	jmp    0x14001b444
   14001b440:	lea    rcx,[rdi+0x8]
   14001b444:	add    rcx,QWORD PTR [rdi+0x18]
   14001b448:	cmp    QWORD PTR [rsp+0x70],rcx
   14001b44d:	jb     0x14001b454
   14001b44f:	call   0x14001cd78
   14001b454:	mov    rcx,QWORD PTR [rbx+0x70]
   14001b458:	mov    rax,QWORD PTR [rcx]
   14001b45b:	lea    r9,[rsi+rbp*1]
   14001b45f:	lea    rdx,[rsp+0x60]
   14001b464:	mov    QWORD PTR [rsp+0x38],rdx
   14001b469:	lea    rdx,[rsp+0x42]
   14001b46e:	mov    QWORD PTR [rsp+0x30],rdx
   14001b473:	lea    rdx,[rsp+0x40]
   14001b478:	mov    QWORD PTR [rsp+0x28],rdx
   14001b47d:	lea    rdx,[rsp+0x58]
   14001b482:	mov    QWORD PTR [rsp+0x20],rdx
   14001b487:	mov    r8,QWORD PTR [rsp+0x70]
   14001b48c:	lea    rdx,[rbx+0x7c]
   14001b490:	call   QWORD PTR [rax+0x20]
   14001b493:	test   eax,eax
   14001b495:	js     0x14001b6c0
   14001b49b:	cmp    eax,0x1
   14001b49e:	jle    0x14001b4bd
   14001b4a0:	cmp    eax,0x3
   14001b4a3:	jne    0x14001b6c0
   14001b4a9:	cmp    QWORD PTR [rsp+0xa8],0x2
   14001b4b2:	jae    0x14001b562
   14001b4b8:	jmp    0x14001b548
   14001b4bd:	lea    rax,[rsp+0x40]
   14001b4c2:	cmp    QWORD PTR [rsp+0x60],rax
   14001b4c7:	jne    0x14001b604
   14001b4cd:	lea    rdx,[rsp+0x98]
   14001b4d5:	cmp    QWORD PTR [rsp+0xb0],0x10
   14001b4de:	cmovae rdx,QWORD PTR [rsp+0x98]
   14001b4e7:	lea    r8,[rsp+0x90]
   14001b4ef:	lea    rcx,[rsp+0x48]
   14001b4f4:	call   0x14001ab14
   14001b4f9:	mov    rdi,QWORD PTR [rsp+0x48]
   14001b4fe:	cmp    rdi,0xfffffffffffffffc
   14001b502:	je     0x14001b52f
   14001b504:	test   rdi,rdi
   14001b507:	jne    0x14001b50e
   14001b509:	call   0x14001cd78
   14001b50e:	cmp    QWORD PTR [rdi+0x20],0x10
   14001b513:	jb     0x14001b51b
   14001b515:	mov    rcx,QWORD PTR [rdi+0x8]
   14001b519:	jmp    0x14001b51f
   14001b51b:	lea    rcx,[rdi+0x8]
   14001b51f:	add    rcx,QWORD PTR [rdi+0x18]
   14001b523:	cmp    QWORD PTR [rsp+0x50],rcx
   14001b528:	jb     0x14001b52f
   14001b52a:	call   0x14001cd78
   14001b52f:	mov    r8,QWORD PTR [rsp+0x58]
   14001b534:	sub    r8,QWORD PTR [rsp+0x50]
   14001b539:	xor    edx,edx
   14001b53b:	lea    rcx,[rsp+0x90]
   14001b543:	call   0x140007aa0
   14001b548:	mov    rcx,QWORD PTR [rbx+0x88]
   14001b54f:	call   0x1400233d8
   14001b554:	cmp    eax,0xffffffff
   14001b557:	je     0x14001b6df
   14001b55d:	jmp    0x14001b36d
   14001b562:	lea    rdx,[rsp+0x98]
   14001b56a:	cmp    QWORD PTR [rsp+0xb0],0x10
   14001b573:	cmovae rdx,QWORD PTR [rsp+0x98]
   14001b57c:	lea    r8,[rsp+0x90]
   14001b584:	lea    rcx,[rsp+0x48]
   14001b589:	call   0x14001ab14
   14001b58e:	mov    rbx,QWORD PTR [rsp+0x48]
   14001b593:	cmp    rbx,0xfffffffffffffffc
   14001b597:	je     0x14001b5c7
   14001b599:	test   rbx,rbx
   14001b59c:	jne    0x14001b5a3
   14001b59e:	call   0x14001cd78
   14001b5a3:	cmp    QWORD PTR [rbx+0x20],0x10
   14001b5a8:	jb     0x14001b5b0
   14001b5aa:	mov    rcx,QWORD PTR [rbx+0x8]
   14001b5ae:	jmp    0x14001b5b4
   14001b5b0:	lea    rcx,[rbx+0x8]
   14001b5b4:	mov    rax,QWORD PTR [rbx+0x18]
   14001b5b8:	add    rcx,rax
   14001b5bb:	cmp    QWORD PTR [rsp+0x50],rcx
   14001b5c0:	jb     0x14001b5c7
   14001b5c2:	call   0x14001cd78
   14001b5c7:	mov    r9d,0x2
   14001b5cd:	mov    r8,QWORD PTR [rsp+0x50]
   14001b5d2:	mov    rdx,r9
   14001b5d5:	lea    rcx,[rsp+0x40]
   14001b5da:	call   0x14001c53c
   14001b5df:	movzx  ebx,WORD PTR [rsp+0x40]
   14001b5e4:	cmp    QWORD PTR [rsp+0xb0],0x10
   14001b5ed:	jb     0x14001b5fc
   14001b5ef:	mov    rcx,QWORD PTR [rsp+0x98]
   14001b5f7:	call   0x14001c4dc
   14001b5fc:	mov    ax,bx
   14001b5ff:	jmp    0x14001b6fc
   14001b604:	lea    rdx,[rsp+0x98]
   14001b60c:	cmp    QWORD PTR [rsp+0xb0],0x10
   14001b615:	cmovae rdx,QWORD PTR [rsp+0x98]
   14001b61e:	lea    r8,[rsp+0x90]
   14001b626:	lea    rcx,[rsp+0x48]
   14001b62b:	call   0x14001ab14
   14001b630:	mov    rdi,QWORD PTR [rsp+0x48]
   14001b635:	cmp    rdi,0xfffffffffffffffc
   14001b639:	je     0x14001b666
   14001b63b:	test   rdi,rdi
   14001b63e:	jne    0x14001b645
   14001b640:	call   0x14001cd78
   14001b645:	cmp    QWORD PTR [rdi+0x20],0x10
   14001b64a:	jb     0x14001b652
   14001b64c:	mov    rcx,QWORD PTR [rdi+0x8]
   14001b650:	jmp    0x14001b656
   14001b652:	lea    rcx,[rdi+0x8]
   14001b656:	add    rcx,QWORD PTR [rdi+0x18]
   14001b65a:	cmp    QWORD PTR [rsp+0x50],rcx
   14001b65f:	jb     0x14001b666
   14001b661:	call   0x14001cd78
   14001b666:	mov    eax,DWORD PTR [rsp+0xa8]
   14001b66d:	mov    rcx,QWORD PTR [rsp+0x58]
   14001b672:	sub    eax,ecx
   14001b674:	add    eax,DWORD PTR [rsp+0x50]
   14001b678:	movsxd rdi,eax
   14001b67b:	test   eax,eax
   14001b67d:	jle    0x14001b69e
   14001b67f:	dec    rdi
   14001b682:	movsx  ecx,BYTE PTR [rdi+rcx*1]
   14001b686:	mov    rdx,QWORD PTR [rbx+0x88]
   14001b68d:	call   0x140023368
   14001b692:	test   rdi,rdi
   14001b695:	jle    0x14001b69e
   14001b697:	mov    rcx,QWORD PTR [rsp+0x58]
   14001b69c:	jmp    0x14001b67f
   14001b69e:	movzx  ebx,WORD PTR [rsp+0x40]
   14001b6a3:	cmp    QWORD PTR [rsp+0xb0],0x10
   14001b6ac:	jb     0x14001b6bb
   14001b6ae:	mov    rcx,QWORD PTR [rsp+0x98]
   14001b6b6:	call   0x14001c4dc
   14001b6bb:	mov    ax,bx
   14001b6be:	jmp    0x14001b6fc
   14001b6c0:	cmp    QWORD PTR [rsp+0xb0],0x10
   14001b6c9:	jb     0x14001b6d8
   14001b6cb:	mov    rcx,QWORD PTR [rsp+0x98]
   14001b6d3:	call   0x14001c4dc
   14001b6d8:	mov    eax,0xffff
   14001b6dd:	jmp    0x14001b6fc
   14001b6df:	cmp    QWORD PTR [rsp+0xb0],0x10
   14001b6e8:	jb     0x14001b6f7
   14001b6ea:	mov    rcx,QWORD PTR [rsp+0x98]
   14001b6f2:	call   0x14001c4dc
   14001b6f7:	mov    eax,0xffff
   14001b6fc:	mov    rcx,QWORD PTR [rsp+0xb8]
   14001b704:	xor    rcx,rsp
   14001b707:	call   0x14001c500
   14001b70c:	lea    r11,[rsp+0xc0]
   14001b714:	mov    rbx,QWORD PTR [r11+0x28]
   14001b718:	mov    rbp,QWORD PTR [r11+0x30]
   14001b71c:	mov    rsp,r11
   14001b71f:	pop    r12
   14001b721:	pop    rdi
   14001b722:	pop    rsi
   14001b723:	ret    
   14001b724:	mov    rax,rsp
   14001b727:	push   rsi
   14001b728:	push   rdi
   14001b729:	push   r12
   14001b72b:	sub    rsp,0xb0
   14001b732:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   14001b73b:	mov    QWORD PTR [rax+0x10],rbx
   14001b73f:	mov    QWORD PTR [rax+0x18],rbp
   14001b743:	mov    rax,QWORD PTR [rip+0x2dd16]        # 0x140049460
   14001b74a:	xor    rax,rsp
   14001b74d:	mov    QWORD PTR [rsp+0xa8],rax
   14001b755:	mov    rdi,rcx
   14001b758:	cmp    QWORD PTR [rcx+0x70],0x0
   14001b75d:	je     0x14001ba50
   14001b763:	cmp    BYTE PTR [rcx+0x7a],0x0
   14001b767:	je     0x14001ba50
   14001b76d:	mov    rax,QWORD PTR [rcx]
   14001b770:	mov    ebx,0xffff
   14001b775:	mov    edx,ebx
   14001b777:	call   QWORD PTR [rax+0x8]
   14001b77a:	cmp    bx,ax
   14001b77d:	jne    0x14001b786
   14001b77f:	xor    al,al
   14001b781:	jmp    0x14001ba52
   14001b786:	mov    QWORD PTR [rsp+0xa0],0xf
   14001b792:	and    QWORD PTR [rsp+0x98],0x0
   14001b79b:	mov    BYTE PTR [rsp+0x88],0x0
   14001b7a3:	xor    r8d,r8d
   14001b7a6:	lea    edx,[r8+0x8]
   14001b7aa:	lea    rcx,[rsp+0x80]
   14001b7b2:	call   0x14000f800
   14001b7b7:	nop
   14001b7b8:	lea    rdx,[rsp+0x88]
   14001b7c0:	cmp    QWORD PTR [rsp+0xa0],0x10
   14001b7c9:	cmovae rdx,QWORD PTR [rsp+0x88]
   14001b7d2:	lea    r8,[rsp+0x80]
   14001b7da:	lea    rcx,[rsp+0x68]
   14001b7df:	call   0x14001ab14
   14001b7e4:	mov    rsi,QWORD PTR [rsp+0x70]
   14001b7e9:	mov    rbx,QWORD PTR [rsp+0x68]
   14001b7ee:	cmp    rbx,0xfffffffffffffffc
   14001b7f2:	je     0x14001b81d
   14001b7f4:	test   rbx,rbx
   14001b7f7:	jne    0x14001b7fe
   14001b7f9:	call   0x14001cd78
   14001b7fe:	cmp    QWORD PTR [rbx+0x20],0x10
   14001b803:	jb     0x14001b80b
   14001b805:	mov    rcx,QWORD PTR [rbx+0x8]
   14001b809:	jmp    0x14001b80f
   14001b80b:	lea    rcx,[rbx+0x8]
   14001b80f:	add    rcx,QWORD PTR [rbx+0x18]
   14001b813:	cmp    rsi,rcx
   14001b816:	jb     0x14001b81d
   14001b818:	call   0x14001cd78
   14001b81d:	mov    rbp,QWORD PTR [rsp+0x98]
   14001b825:	lea    rdx,[rsp+0x88]
   14001b82d:	cmp    QWORD PTR [rsp+0xa0],0x10
   14001b836:	cmovae rdx,QWORD PTR [rsp+0x88]
   14001b83f:	lea    r8,[rsp+0x80]
   14001b847:	lea    rcx,[rsp+0x58]
   14001b84c:	call   0x14001ab14
   14001b851:	mov    rbx,QWORD PTR [rsp+0x58]
   14001b856:	cmp    rbx,0xfffffffffffffffc
   14001b85a:	je     0x14001b887
   14001b85c:	test   rbx,rbx
   14001b85f:	jne    0x14001b866
   14001b861:	call   0x14001cd78
   14001b866:	cmp    QWORD PTR [rbx+0x20],0x10
   14001b86b:	jb     0x14001b873
   14001b86d:	mov    rcx,QWORD PTR [rbx+0x8]
   14001b871:	jmp    0x14001b877
   14001b873:	lea    rcx,[rbx+0x8]
   14001b877:	add    rcx,QWORD PTR [rbx+0x18]
   14001b87b:	cmp    QWORD PTR [rsp+0x60],rcx
   14001b880:	jb     0x14001b887
   14001b882:	call   0x14001cd78
   14001b887:	mov    rcx,QWORD PTR [rdi+0x70]
   14001b88b:	mov    rax,QWORD PTR [rcx]
   14001b88e:	lea    r9,[rsi+rbp*1]
   14001b892:	lea    rdx,[rsp+0x40]
   14001b897:	mov    QWORD PTR [rsp+0x20],rdx
   14001b89c:	mov    r8,QWORD PTR [rsp+0x60]
   14001b8a1:	lea    rdx,[rdi+0x7c]
   14001b8a5:	call   QWORD PTR [rax+0x30]
   14001b8a8:	test   eax,eax
   14001b8aa:	je     0x14001b8b7
   14001b8ac:	sub    eax,0x1
   14001b8af:	jne    0x14001b9db
   14001b8b5:	jmp    0x14001b8bb
   14001b8b7:	mov    BYTE PTR [rdi+0x7a],0x0
   14001b8bb:	lea    rdx,[rsp+0x88]
   14001b8c3:	cmp    QWORD PTR [rsp+0xa0],0x10
   14001b8cc:	cmovae rdx,QWORD PTR [rsp+0x88]
   14001b8d5:	lea    r8,[rsp+0x80]
   14001b8dd:	lea    rcx,[rsp+0x30]
   14001b8e2:	call   0x14001ab14
   14001b8e7:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b8ec:	cmp    rbx,0xfffffffffffffffc
   14001b8f0:	je     0x14001b920
   14001b8f2:	test   rbx,rbx
   14001b8f5:	jne    0x14001b8fc
   14001b8f7:	call   0x14001cd78
   14001b8fc:	cmp    QWORD PTR [rbx+0x20],0x10
   14001b901:	jb     0x14001b909
   14001b903:	mov    rcx,QWORD PTR [rbx+0x8]
   14001b907:	jmp    0x14001b90d
   14001b909:	lea    rcx,[rbx+0x8]
   14001b90d:	mov    rax,QWORD PTR [rbx+0x18]
   14001b911:	add    rcx,rax
   14001b914:	cmp    QWORD PTR [rsp+0x38],rcx
   14001b919:	jb     0x14001b920
   14001b91b:	call   0x14001cd78
   14001b920:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b925:	sub    rsi,QWORD PTR [rsp+0x38]
   14001b92a:	je     0x14001b9b4
   14001b930:	lea    rdx,[rsp+0x88]
   14001b938:	cmp    QWORD PTR [rsp+0xa0],0x10
   14001b941:	cmovae rdx,QWORD PTR [rsp+0x88]
   14001b94a:	lea    r8,[rsp+0x80]
   14001b952:	lea    rcx,[rsp+0x48]
   14001b957:	call   0x14001ab14
   14001b95c:	mov    rbx,QWORD PTR [rsp+0x48]
   14001b961:	cmp    rbx,0xfffffffffffffffc
   14001b965:	je     0x14001b996
   14001b967:	test   rbx,rbx
   14001b96a:	jne    0x14001b971
   14001b96c:	call   0x14001cd78
   14001b971:	cmp    QWORD PTR [rbx+0x20],0x10
   14001b976:	jb     0x14001b97e
   14001b978:	mov    rcx,QWORD PTR [rbx+0x8]
   14001b97c:	jmp    0x14001b982
   14001b97e:	lea    rcx,[rbx+0x8]
   14001b982:	mov    rax,QWORD PTR [rbx+0x18]
   14001b986:	lea    rdx,[rcx+rax*1]
   14001b98a:	cmp    QWORD PTR [rsp+0x50],rdx
   14001b98f:	jb     0x14001b996
   14001b991:	call   0x14001cd78
   14001b996:	mov    r9,QWORD PTR [rdi+0x88]
   14001b99d:	mov    r8,rsi
   14001b9a0:	mov    edx,0x1
   14001b9a5:	mov    rcx,QWORD PTR [rsp+0x50]
   14001b9aa:	call   0x140023698
   14001b9af:	cmp    rsi,rax
   14001b9b2:	jne    0x14001ba18
   14001b9b4:	cmp    BYTE PTR [rdi+0x7a],0x0
   14001b9b8:	je     0x14001ba34
   14001b9ba:	test   rsi,rsi
   14001b9bd:	jne    0x14001b7b8
   14001b9c3:	xor    r8d,r8d
   14001b9c6:	lea    edx,[rsi+0x8]
   14001b9c9:	lea    rcx,[rsp+0x80]
   14001b9d1:	call   0x14000f5f0
   14001b9d6:	jmp    0x14001b7b8
   14001b9db:	sub    eax,0x2
   14001b9de:	je     0x14001b9fc
   14001b9e0:	cmp    QWORD PTR [rsp+0xa0],0x10
   14001b9e9:	jb     0x14001b9f8
   14001b9eb:	mov    rcx,QWORD PTR [rsp+0x88]
   14001b9f3:	call   0x14001c4dc
   14001b9f8:	xor    al,al
   14001b9fa:	jmp    0x14001ba52
   14001b9fc:	cmp    QWORD PTR [rsp+0xa0],0x10
   14001ba05:	jb     0x14001ba14
   14001ba07:	mov    rcx,QWORD PTR [rsp+0x88]
   14001ba0f:	call   0x14001c4dc
   14001ba14:	mov    al,0x1
   14001ba16:	jmp    0x14001ba52
   14001ba18:	cmp    QWORD PTR [rsp+0xa0],0x10
   14001ba21:	jb     0x14001ba30
   14001ba23:	mov    rcx,QWORD PTR [rsp+0x88]
   14001ba2b:	call   0x14001c4dc
   14001ba30:	xor    al,al
   14001ba32:	jmp    0x14001ba52
   14001ba34:	cmp    QWORD PTR [rsp+0xa0],0x10
   14001ba3d:	jb     0x14001ba4c
   14001ba3f:	mov    rcx,QWORD PTR [rsp+0x88]
   14001ba47:	call   0x14001c4dc
   14001ba4c:	mov    al,0x1
   14001ba4e:	jmp    0x14001ba52
   14001ba50:	mov    al,0x1
   14001ba52:	mov    rcx,QWORD PTR [rsp+0xa8]
   14001ba5a:	xor    rcx,rsp
   14001ba5d:	call   0x14001c500
   14001ba62:	lea    r11,[rsp+0xb0]
   14001ba6a:	mov    rbx,QWORD PTR [r11+0x28]
   14001ba6e:	mov    rbp,QWORD PTR [r11+0x30]
   14001ba72:	mov    rsp,r11
   14001ba75:	pop    r12
   14001ba77:	pop    rdi
   14001ba78:	pop    rsi
   14001ba79:	ret    
   14001ba7a:	int3   
   14001ba7b:	int3   
   14001ba7c:	mov    rax,rsp
   14001ba7f:	push   rbp
   14001ba80:	push   rsi
   14001ba81:	push   rdi
   14001ba82:	sub    rsp,0x100
   14001ba89:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001ba92:	mov    QWORD PTR [rax+0x10],rbx
   14001ba96:	mov    rbp,rdx
   14001ba99:	mov    rsi,rcx
   14001ba9c:	xor    ebx,ebx
   14001ba9e:	mov    DWORD PTR [rax+0x8],ebx
   14001baa1:	test   rcx,rcx
   14001baa4:	je     0x14001bb46
   14001baaa:	cmp    QWORD PTR [rcx],rbx
   14001baad:	jne    0x14001bb46
   14001bab3:	lea    ecx,[rbx+0x18]
   14001bab6:	call   0x14001cb1c
   14001babb:	mov    rdi,rax
   14001babe:	mov    QWORD PTR [rsp+0x130],rax
   14001bac6:	test   rax,rax
   14001bac9:	je     0x14001bb10
   14001bacb:	lea    rdx,[rsp+0x28]
   14001bad0:	mov    rcx,rbp
   14001bad3:	call   0x140001bf0
   14001bad8:	nop
   14001bad9:	mov    DWORD PTR [rsp+0x120],0x1
   14001bae4:	mov    rdx,rax
   14001bae7:	lea    rcx,[rsp+0x50]
   14001baec:	call   0x140001740
   14001baf1:	mov    ebx,0x3
   14001baf6:	and    QWORD PTR [rdi+0x8],0x0
   14001bafb:	lea    rax,[rip+0x1ef96]        # 0x14003aa98
   14001bb02:	mov    QWORD PTR [rdi],rax
   14001bb05:	call   0x140019b60
   14001bb0a:	mov    QWORD PTR [rdi+0x10],rax
   14001bb0e:	jmp    0x14001bb12
   14001bb10:	xor    edi,edi
   14001bb12:	mov    QWORD PTR [rsi],rdi
   14001bb15:	test   bl,0x2
   14001bb18:	je     0x14001bb2f
   14001bb1a:	and    ebx,0xfffffffd
   14001bb1d:	mov    DWORD PTR [rsp+0x120],ebx
   14001bb24:	lea    rcx,[rsp+0x50]
   14001bb29:	call   0x1400017c0
   14001bb2e:	nop
   14001bb2f:	test   bl,0x1
   14001bb32:	je     0x14001bb46
   14001bb34:	cmp    QWORD PTR [rsp+0x48],0x10
   14001bb3a:	jb     0x14001bb46
   14001bb3c:	mov    rcx,QWORD PTR [rsp+0x30]
   14001bb41:	call   0x14001c4dc
   14001bb46:	movabs rax,0x2
   14001bb50:	mov    rbx,QWORD PTR [rsp+0x128]
   14001bb58:	add    rsp,0x100
   14001bb5f:	pop    rdi
   14001bb60:	pop    rsi
   14001bb61:	pop    rbp
   14001bb62:	ret    
   14001bb63:	int3   
   14001bb64:	mov    rax,rsp
   14001bb67:	push   rbp
   14001bb68:	push   rsi
   14001bb69:	push   rdi
   14001bb6a:	push   r12
   14001bb6c:	push   r13
   14001bb6e:	push   r14
   14001bb70:	push   r15
   14001bb72:	sub    rsp,0xd0
   14001bb79:	mov    QWORD PTR [rsp+0x98],0xfffffffffffffffe
   14001bb85:	mov    QWORD PTR [rax+0x18],rbx
   14001bb89:	mov    rax,QWORD PTR [rip+0x2d8d0]        # 0x140049460
   14001bb90:	xor    rax,rsp
   14001bb93:	mov    QWORD PTR [rsp+0xc8],rax
   14001bb9b:	mov    si,dx
   14001bb9e:	mov    rbp,rcx
   14001bba1:	mov    ebx,0xffff
   14001bba6:	cmp    bx,dx
   14001bba9:	jne    0x14001bbb5
   14001bbab:	xor    edi,edi
   14001bbad:	mov    ax,di
   14001bbb0:	jmp    0x14001bf73
   14001bbb5:	mov    rdx,QWORD PTR [rcx+0x48]
   14001bbb9:	xor    edi,edi
   14001bbbb:	cmp    QWORD PTR [rdx],rdi
   14001bbbe:	je     0x14001bbef
   14001bbc0:	mov    rdx,QWORD PTR [rdx]
   14001bbc3:	mov    r8,QWORD PTR [rcx+0x60]
   14001bbc7:	movsxd rax,DWORD PTR [r8]
   14001bbca:	lea    rcx,[rdx+rax*2]
   14001bbce:	cmp    rdx,rcx
   14001bbd1:	jae    0x14001bbef
   14001bbd3:	dec    DWORD PTR [r8]
   14001bbd6:	mov    rcx,QWORD PTR [rbp+0x48]
   14001bbda:	mov    rdx,QWORD PTR [rcx]
   14001bbdd:	lea    rax,[rdx+0x2]
   14001bbe1:	mov    QWORD PTR [rcx],rax
   14001bbe4:	mov    WORD PTR [rdx],si
   14001bbe7:	mov    ax,si
   14001bbea:	jmp    0x14001bf73
   14001bbef:	mov    rdx,QWORD PTR [rbp+0x88]
   14001bbf6:	cmp    rdx,rdi
   14001bbf9:	jne    0x14001bc03
   14001bbfb:	mov    ax,bx
   14001bbfe:	jmp    0x14001bf73
   14001bc03:	cmp    QWORD PTR [rbp+0x70],rdi
   14001bc07:	jne    0x14001bc21
   14001bc09:	movzx  ecx,si
   14001bc0c:	call   0x140022b54
   14001bc11:	cmp    ax,bx
   14001bc14:	je     0x14001bc19
   14001bc16:	mov    bx,si
   14001bc19:	mov    ax,bx
   14001bc1c:	jmp    0x14001bf73
   14001bc21:	mov    WORD PTR [rsp+0x40],si
   14001bc26:	mov    QWORD PTR [rsp+0xc0],0xf
   14001bc32:	mov    QWORD PTR [rsp+0xb8],rdi
   14001bc3a:	mov    BYTE PTR [rsp+0xa8],dil
   14001bc42:	xor    r8d,r8d
   14001bc45:	lea    edx,[r8+0x8]
   14001bc49:	lea    rcx,[rsp+0xa0]
   14001bc51:	call   0x14000f800
   14001bc56:	nop
   14001bc57:	lea    rdx,[rsp+0xa8]
   14001bc5f:	cmp    QWORD PTR [rsp+0xc0],0x10
   14001bc68:	cmovae rdx,QWORD PTR [rsp+0xa8]
   14001bc71:	lea    r8,[rsp+0xa0]
   14001bc79:	lea    rcx,[rsp+0x78]
   14001bc7e:	call   0x14001ab14
   14001bc83:	mov    r15,QWORD PTR [rsp+0x80]
   14001bc8b:	mov    r12,QWORD PTR [rsp+0x78]
   14001bc90:	cmp    r12,0xfffffffffffffffc
   14001bc94:	je     0x14001bcc3
   14001bc96:	cmp    r12,rdi
   14001bc99:	jne    0x14001bca0
   14001bc9b:	call   0x14001cd78
   14001bca0:	cmp    QWORD PTR [r12+0x20],0x10
   14001bca6:	jb     0x14001bcaf
   14001bca8:	mov    rcx,QWORD PTR [r12+0x8]
   14001bcad:	jmp    0x14001bcb4
   14001bcaf:	lea    rcx,[r12+0x8]
   14001bcb4:	add    rcx,QWORD PTR [r12+0x18]
   14001bcb9:	cmp    r15,rcx
   14001bcbc:	jb     0x14001bcc3
   14001bcbe:	call   0x14001cd78
   14001bcc3:	mov    r14,QWORD PTR [rsp+0xb8]
   14001bccb:	lea    rdx,[rsp+0xa8]
   14001bcd3:	cmp    QWORD PTR [rsp+0xc0],0x10
   14001bcdc:	cmovae rdx,QWORD PTR [rsp+0xa8]
   14001bce5:	lea    r8,[rsp+0xa0]
   14001bced:	lea    rcx,[rsp+0x88]
   14001bcf5:	call   0x14001ab14
   14001bcfa:	mov    r13,QWORD PTR [rsp+0x90]
   14001bd02:	mov    r12,QWORD PTR [rsp+0x88]
   14001bd0a:	cmp    r12,0xfffffffffffffffc
   14001bd0e:	je     0x14001bd3d
   14001bd10:	cmp    r12,rdi
   14001bd13:	jne    0x14001bd1a
   14001bd15:	call   0x14001cd78
   14001bd1a:	cmp    QWORD PTR [r12+0x20],0x10
   14001bd20:	jb     0x14001bd29
   14001bd22:	mov    rcx,QWORD PTR [r12+0x8]
   14001bd27:	jmp    0x14001bd2e
   14001bd29:	lea    rcx,[r12+0x8]
   14001bd2e:	add    rcx,QWORD PTR [r12+0x18]
   14001bd33:	cmp    r13,rcx
   14001bd36:	jb     0x14001bd3d
   14001bd38:	call   0x14001cd78
   14001bd3d:	mov    rcx,QWORD PTR [rbp+0x70]
   14001bd41:	mov    r10,QWORD PTR [rcx]
   14001bd44:	lea    rax,[r15+r14*1]
   14001bd48:	lea    rdx,[rsp+0x70]
   14001bd4d:	mov    QWORD PTR [rsp+0x38],rdx
   14001bd52:	mov    QWORD PTR [rsp+0x30],rax
   14001bd57:	mov    QWORD PTR [rsp+0x28],r13
   14001bd5c:	lea    rax,[rsp+0x68]
   14001bd61:	mov    QWORD PTR [rsp+0x20],rax
   14001bd66:	lea    r9,[rsp+0x42]
   14001bd6b:	lea    r8,[rsp+0x40]
   14001bd70:	lea    rdx,[rbp+0x7c]
   14001bd74:	call   QWORD PTR [r10+0x28]
   14001bd78:	cmp    eax,edi
   14001bd7a:	jl     0x14001bf58
   14001bd80:	cmp    eax,0x1
   14001bd83:	jg     0x14001bf1e
   14001bd89:	lea    rdx,[rsp+0xa8]
   14001bd91:	cmp    QWORD PTR [rsp+0xc0],0x10
   14001bd9a:	cmovae rdx,QWORD PTR [rsp+0xa8]
   14001bda3:	lea    r8,[rsp+0xa0]
   14001bdab:	lea    rcx,[rsp+0x48]
   14001bdb0:	call   0x14001ab14
   14001bdb5:	mov    r12,QWORD PTR [rsp+0x48]
   14001bdba:	cmp    r12,0xfffffffffffffffc
   14001bdbe:	je     0x14001bdef
   14001bdc0:	cmp    r12,rdi
   14001bdc3:	jne    0x14001bdca
   14001bdc5:	call   0x14001cd78
   14001bdca:	cmp    QWORD PTR [r12+0x20],0x10
   14001bdd0:	jb     0x14001bdd9
   14001bdd2:	mov    rcx,QWORD PTR [r12+0x8]
   14001bdd7:	jmp    0x14001bdde
   14001bdd9:	lea    rcx,[r12+0x8]
   14001bdde:	add    rcx,QWORD PTR [r12+0x18]
   14001bde3:	cmp    QWORD PTR [rsp+0x50],rcx
   14001bde8:	jb     0x14001bdef
   14001bdea:	call   0x14001cd78
   14001bdef:	mov    r13,QWORD PTR [rsp+0x70]
   14001bdf4:	sub    r13,QWORD PTR [rsp+0x50]
   14001bdf9:	je     0x14001be87
   14001bdff:	lea    rdx,[rsp+0xa8]
   14001be07:	cmp    QWORD PTR [rsp+0xc0],0x10
   14001be10:	cmovae rdx,QWORD PTR [rsp+0xa8]
   14001be19:	lea    r8,[rsp+0xa0]
   14001be21:	lea    rcx,[rsp+0x58]
   14001be26:	call   0x14001ab14
   14001be2b:	mov    r12,QWORD PTR [rsp+0x58]
   14001be30:	cmp    r12,0xfffffffffffffffc
   14001be34:	je     0x14001be69
   14001be36:	cmp    r12,rdi
   14001be39:	jne    0x14001be40
   14001be3b:	call   0x14001cd78
   14001be40:	cmp    QWORD PTR [r12+0x20],0x10
   14001be46:	jb     0x14001be4f
   14001be48:	mov    rcx,QWORD PTR [r12+0x8]
   14001be4d:	jmp    0x14001be54
   14001be4f:	lea    rcx,[r12+0x8]
   14001be54:	mov    rax,QWORD PTR [r12+0x18]
   14001be59:	lea    rdx,[rcx+rax*1]
   14001be5d:	cmp    QWORD PTR [rsp+0x60],rdx
   14001be62:	jb     0x14001be69
   14001be64:	call   0x14001cd78
   14001be69:	mov    r9,QWORD PTR [rbp+0x88]
   14001be70:	mov    r8,r13
   14001be73:	mov    edx,0x1
   14001be78:	mov    rcx,QWORD PTR [rsp+0x60]
   14001be7d:	call   0x140023698
   14001be82:	cmp    r13,rax
   14001be85:	jne    0x14001bec4
   14001be87:	mov    BYTE PTR [rbp+0x7a],0x1
   14001be8b:	lea    rax,[rsp+0x40]
   14001be90:	cmp    QWORD PTR [rsp+0x68],rax
   14001be95:	jne    0x14001bf01
   14001be97:	cmp    r13,rdi
   14001be9a:	ja     0x14001bc57
   14001bea0:	cmp    QWORD PTR [rsp+0xb8],0x20
   14001bea9:	jae    0x14001bee4
   14001beab:	xor    r8d,r8d
   14001beae:	lea    edx,[r8+0x8]
   14001beb2:	lea    rcx,[rsp+0xa0]
   14001beba:	call   0x14000f5f0
   14001bebf:	jmp    0x14001bc57
   14001bec4:	cmp    QWORD PTR [rsp+0xc0],0x10
   14001becd:	jb     0x14001bedc
   14001becf:	mov    rcx,QWORD PTR [rsp+0xa8]
   14001bed7:	call   0x14001c4dc
   14001bedc:	mov    ax,bx
   14001bedf:	jmp    0x14001bf73
   14001bee4:	cmp    QWORD PTR [rsp+0xc0],0x10
   14001beed:	jb     0x14001befc
   14001beef:	mov    rcx,QWORD PTR [rsp+0xa8]
   14001bef7:	call   0x14001c4dc
   14001befc:	mov    ax,bx
   14001beff:	jmp    0x14001bf73
   14001bf01:	cmp    QWORD PTR [rsp+0xc0],0x10
   14001bf0a:	jb     0x14001bf19
   14001bf0c:	mov    rcx,QWORD PTR [rsp+0xa8]
   14001bf14:	call   0x14001c4dc
   14001bf19:	mov    ax,si
   14001bf1c:	jmp    0x14001bf73
   14001bf1e:	cmp    eax,0x3
   14001bf21:	jne    0x14001bf58
   14001bf23:	mov    rdx,QWORD PTR [rbp+0x88]
   14001bf2a:	movzx  ecx,WORD PTR [rsp+0x40]
   14001bf2f:	call   0x140022b54
   14001bf34:	cmp    ax,bx
   14001bf37:	jne    0x14001bf3b
   14001bf39:	mov    esi,ebx
   14001bf3b:	cmp    QWORD PTR [rsp+0xc0],0x10
   14001bf44:	jb     0x14001bf53
   14001bf46:	mov    rcx,QWORD PTR [rsp+0xa8]
   14001bf4e:	call   0x14001c4dc
   14001bf53:	mov    ax,si
   14001bf56:	jmp    0x14001bf73
   14001bf58:	cmp    QWORD PTR [rsp+0xc0],0x10
   14001bf61:	jb     0x14001bf70
   14001bf63:	mov    rcx,QWORD PTR [rsp+0xa8]
   14001bf6b:	call   0x14001c4dc
   14001bf70:	mov    ax,bx
   14001bf73:	mov    rcx,QWORD PTR [rsp+0xc8]
   14001bf7b:	xor    rcx,rsp
   14001bf7e:	call   0x14001c500
   14001bf83:	mov    rbx,QWORD PTR [rsp+0x120]
   14001bf8b:	add    rsp,0xd0
   14001bf92:	pop    r15
   14001bf94:	pop    r14
   14001bf96:	pop    r13
   14001bf98:	pop    r12
   14001bf9a:	pop    rdi
   14001bf9b:	pop    rsi
   14001bf9c:	pop    rbp
   14001bf9d:	ret    
   14001bf9e:	int3   
   14001bf9f:	int3   
   14001bfa0:	mov    QWORD PTR [rsp+0x10],rbx
   14001bfa5:	mov    QWORD PTR [rsp+0x18],rbp
   14001bfaa:	push   rsi
   14001bfab:	push   rdi
   14001bfac:	push   r12
   14001bfae:	sub    rsp,0x20
   14001bfb2:	mov    rax,QWORD PTR [rcx+0x40]
   14001bfb6:	lea    r12,[rcx+0x78]
   14001bfba:	mov    ebp,r9d
   14001bfbd:	mov    rsi,r8
   14001bfc0:	mov    rbx,rdx
   14001bfc3:	mov    rdi,rcx
   14001bfc6:	cmp    QWORD PTR [rax],r12
   14001bfc9:	jne    0x14001bfdc
   14001bfcb:	cmp    r9d,0x1
   14001bfcf:	jne    0x14001bfdc
   14001bfd1:	cmp    QWORD PTR [rcx+0x70],0x0
   14001bfd6:	jne    0x14001bfdc
   14001bfd8:	sub    rsi,0x2
   14001bfdc:	cmp    QWORD PTR [rcx+0x88],0x0
   14001bfe4:	je     0x14001c06a
   14001bfea:	call   0x14001b724
   14001bfef:	test   al,al
   14001bff1:	je     0x14001c06a
   14001bff3:	test   rsi,rsi
   14001bff6:	jne    0x14001bffd
   14001bff8:	cmp    ebp,0x1
   14001bffb:	je     0x14001c012
   14001bffd:	mov    rcx,QWORD PTR [rdi+0x88]
   14001c004:	mov    r8d,ebp
   14001c007:	mov    edx,esi
   14001c009:	call   0x14002384c
   14001c00e:	test   eax,eax
   14001c010:	jne    0x14001c06a
   14001c012:	mov    rcx,QWORD PTR [rdi+0x88]
   14001c019:	lea    rdx,[rsp+0x40]
   14001c01e:	call   0x14002373c
   14001c023:	test   eax,eax
   14001c025:	jne    0x14001c06a
   14001c027:	mov    rax,QWORD PTR [rdi+0x40]
   14001c02b:	cmp    QWORD PTR [rax],r12
   14001c02e:	jne    0x14001c055
   14001c030:	mov    rax,QWORD PTR [rdi+0x20]
   14001c034:	lea    rcx,[rdi+0x7a]
   14001c038:	mov    rdx,rdi
   14001c03b:	mov    QWORD PTR [rax],r12
   14001c03e:	mov    rax,QWORD PTR [rdi+0x40]
   14001c042:	sub    rdx,rcx
   14001c045:	mov    QWORD PTR [rax],rcx
   14001c048:	mov    rax,QWORD PTR [rdi+0x58]
   14001c04c:	add    rdx,0x7a
   14001c050:	sar    rdx,1
   14001c053:	mov    DWORD PTR [rax],edx
   14001c055:	mov    rax,QWORD PTR [rsp+0x40]
   14001c05a:	and    QWORD PTR [rbx],0x0
   14001c05e:	mov    QWORD PTR [rbx+0x8],rax
   14001c062:	mov    eax,DWORD PTR [rdi+0x7c]
   14001c065:	mov    DWORD PTR [rbx+0x10],eax
   14001c068:	jmp    0x14001c07d
   14001c06a:	mov    rax,QWORD PTR [rip+0x1e6c7]        # 0x14003a738
   14001c071:	and    QWORD PTR [rbx+0x8],0x0
   14001c076:	and    DWORD PTR [rbx+0x10],0x0
   14001c07a:	mov    QWORD PTR [rbx],rax
   14001c07d:	mov    rbp,QWORD PTR [rsp+0x50]
   14001c082:	mov    rax,rbx
   14001c085:	mov    rbx,QWORD PTR [rsp+0x48]
   14001c08a:	add    rsp,0x20
   14001c08e:	pop    r12
   14001c090:	pop    rdi
   14001c091:	pop    rsi
   14001c092:	ret    
   14001c093:	int3   
   14001c094:	mov    r11,rsp
   14001c097:	mov    QWORD PTR [r11+0x10],rbx
   14001c09b:	mov    QWORD PTR [r11+0x18],rbp
   14001c09f:	mov    QWORD PTR [r11+0x20],rsi
   14001c0a3:	push   rdi
   14001c0a4:	sub    rsp,0x20
   14001c0a8:	mov    rax,QWORD PTR [r8+0x8]
   14001c0ac:	mov    rbp,r8
   14001c0af:	mov    rbx,rdx
   14001c0b2:	movsxd r9,eax
   14001c0b5:	movsxd rsi,eax
   14001c0b8:	mov    rdi,rcx
   14001c0bb:	sub    rsi,r9
   14001c0be:	mov    QWORD PTR [r11+0x8],rax
   14001c0c2:	add    rsi,QWORD PTR [r8]
   14001c0c5:	cmp    QWORD PTR [rcx+0x88],0x0
   14001c0cd:	je     0x14001c172
   14001c0d3:	call   0x14001b724
   14001c0d8:	test   al,al
   14001c0da:	je     0x14001c172
   14001c0e0:	mov    rcx,QWORD PTR [rdi+0x88]
   14001c0e7:	lea    rdx,[rsp+0x30]
   14001c0ec:	call   0x1400238fc
   14001c0f1:	test   eax,eax
   14001c0f3:	jne    0x14001c172
   14001c0f5:	test   rsi,rsi
   14001c0f8:	je     0x14001c110
   14001c0fa:	mov    rcx,QWORD PTR [rdi+0x88]
   14001c101:	lea    r8d,[rax+0x1]
   14001c105:	mov    edx,esi
   14001c107:	call   0x14002384c
   14001c10c:	test   eax,eax
   14001c10e:	jne    0x14001c172
   14001c110:	mov    rcx,QWORD PTR [rdi+0x88]
   14001c117:	lea    rdx,[rsp+0x30]
   14001c11c:	call   0x14002373c
   14001c121:	test   eax,eax
   14001c123:	jne    0x14001c172
   14001c125:	mov    eax,DWORD PTR [rbp+0x10]
   14001c128:	lea    rdx,[rdi+0x78]
   14001c12c:	mov    DWORD PTR [rdi+0x7c],eax
   14001c12f:	mov    rax,QWORD PTR [rdi+0x40]
   14001c133:	cmp    QWORD PTR [rax],rdx
   14001c136:	jne    0x14001c15d
   14001c138:	mov    rax,QWORD PTR [rdi+0x20]
   14001c13c:	lea    rcx,[rdi+0x7a]
   14001c140:	mov    QWORD PTR [rax],rdx
   14001c143:	mov    rax,QWORD PTR [rdi+0x40]
   14001c147:	mov    rdx,rdi
   14001c14a:	sub    rdx,rcx
   14001c14d:	mov    QWORD PTR [rax],rcx
   14001c150:	mov    rax,QWORD PTR [rdi+0x58]
   14001c154:	add    rdx,0x7a
   14001c158:	sar    rdx,1
   14001c15b:	mov    DWORD PTR [rax],edx
   14001c15d:	mov    rax,QWORD PTR [rsp+0x30]
   14001c162:	and    QWORD PTR [rbx],0x0
   14001c166:	mov    QWORD PTR [rbx+0x8],rax
   14001c16a:	mov    eax,DWORD PTR [rdi+0x7c]
   14001c16d:	mov    DWORD PTR [rbx+0x10],eax
   14001c170:	jmp    0x14001c185
   14001c172:	mov    rax,QWORD PTR [rip+0x1e5bf]        # 0x14003a738
   14001c179:	and    QWORD PTR [rbx+0x8],0x0
   14001c17e:	and    DWORD PTR [rbx+0x10],0x0
   14001c182:	mov    QWORD PTR [rbx],rax
   14001c185:	mov    rbp,QWORD PTR [rsp+0x40]
   14001c18a:	mov    rsi,QWORD PTR [rsp+0x48]
   14001c18f:	mov    rax,rbx
   14001c192:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c197:	add    rsp,0x20
   14001c19b:	pop    rdi
   14001c19c:	ret    
   14001c19d:	int3   
   14001c19e:	int3   
   14001c19f:	int3   
   14001c1a0:	mov    QWORD PTR [rsp+0x8],rbx
   14001c1a5:	mov    QWORD PTR [rsp+0x10],rsi
   14001c1aa:	push   rdi
   14001c1ab:	sub    rsp,0x20
   14001c1af:	xor    esi,esi
   14001c1b1:	mov    rbx,rcx
   14001c1b4:	cmp    QWORD PTR [rcx+0x88],rsi
   14001c1bb:	jne    0x14001c1c2
   14001c1bd:	mov    rdi,rsi
   14001c1c0:	jmp    0x14001c1e1
   14001c1c2:	call   0x14001b724
   14001c1c7:	mov    rcx,QWORD PTR [rbx+0x88]
   14001c1ce:	neg    al
   14001c1d0:	sbb    rdi,rdi
   14001c1d3:	and    rdi,rbx
   14001c1d6:	call   0x1400239cc
   14001c1db:	cmp    eax,esi
   14001c1dd:	cmovne rdi,rsi
   14001c1e1:	mov    BYTE PTR [rbx+0x80],sil
   14001c1e8:	mov    BYTE PTR [rbx+0x7a],sil
   14001c1ec:	lea    rcx,[rbx+0x18]
   14001c1f0:	mov    QWORD PTR [rbx+0x28],rcx
   14001c1f4:	lea    rax,[rbx+0x10]
   14001c1f8:	mov    QWORD PTR [rbx+0x20],rax
   14001c1fc:	lea    rax,[rbx+0x30]
   14001c200:	mov    QWORD PTR [rbx+0x40],rax
   14001c204:	lea    rax,[rbx+0x38]
   14001c208:	mov    QWORD PTR [rbx+0x48],rax
   14001c20c:	lea    rax,[rbx+0x50]
   14001c210:	mov    QWORD PTR [rbx+0x58],rax
   14001c214:	lea    rax,[rbx+0x54]
   14001c218:	mov    QWORD PTR [rbx+0x60],rax
   14001c21c:	mov    QWORD PTR [rcx],rsi
   14001c21f:	mov    rcx,QWORD PTR [rbx+0x48]
   14001c223:	mov    QWORD PTR [rcx],rsi
   14001c226:	mov    rcx,QWORD PTR [rbx+0x60]
   14001c22a:	mov    rax,rdi
   14001c22d:	mov    DWORD PTR [rcx],esi
   14001c22f:	mov    rcx,QWORD PTR [rbx+0x20]
   14001c233:	mov    QWORD PTR [rcx],rsi
   14001c236:	mov    rcx,QWORD PTR [rbx+0x40]
   14001c23a:	mov    QWORD PTR [rcx],rsi
   14001c23d:	mov    rcx,QWORD PTR [rbx+0x58]
   14001c241:	mov    DWORD PTR [rcx],esi
   14001c243:	mov    QWORD PTR [rbx+0x88],rsi
   14001c24a:	mov    ecx,DWORD PTR [rip+0x2f72c]        # 0x14004b97c
   14001c250:	mov    QWORD PTR [rbx+0x70],rsi
   14001c254:	mov    rsi,QWORD PTR [rsp+0x38]
   14001c259:	mov    DWORD PTR [rbx+0x7c],ecx
   14001c25c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c261:	add    rsp,0x20
   14001c265:	pop    rdi
   14001c266:	ret    
   14001c267:	int3   
   14001c268:	rex push rbp
   14001c26a:	push   rsi
   14001c26b:	push   rdi
   14001c26c:	sub    rsp,0x40
   14001c270:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c279:	mov    QWORD PTR [rsp+0x78],rbx
   14001c27e:	mov    rbp,rcx
   14001c281:	xor    edx,edx
   14001c283:	lea    rcx,[rsp+0x68]
   14001c288:	call   0x1400194bc
   14001c28d:	nop
   14001c28e:	mov    rsi,QWORD PTR [rip+0x2f6eb]        # 0x14004b980
   14001c295:	mov    QWORD PTR [rsp+0x70],rsi
   14001c29a:	mov    rdi,QWORD PTR [rip+0x2f457]        # 0x14004b6f8
   14001c2a1:	test   rdi,rdi
   14001c2a4:	jne    0x14001c2e3
   14001c2a6:	xor    edx,edx
   14001c2a8:	lea    rcx,[rsp+0x60]
   14001c2ad:	call   0x1400194bc
   14001c2b2:	cmp    QWORD PTR [rip+0x2f43f],rdi        # 0x14004b6f8
   14001c2b9:	jne    0x14001c2d2
   14001c2bb:	mov    eax,DWORD PTR [rip+0x2f41f]        # 0x14004b6e0
   14001c2c1:	inc    eax
   14001c2c3:	mov    DWORD PTR [rip+0x2f417],eax        # 0x14004b6e0
   14001c2c9:	cdqe   
   14001c2cb:	mov    QWORD PTR [rip+0x2f426],rax        # 0x14004b6f8
   14001c2d2:	lea    rcx,[rsp+0x60]
   14001c2d7:	call   0x1400194ec
   14001c2dc:	mov    rdi,QWORD PTR [rip+0x2f415]        # 0x14004b6f8
   14001c2e3:	mov    rcx,QWORD PTR [rbp+0x0]
   14001c2e7:	cmp    rdi,QWORD PTR [rcx+0x18]
   14001c2eb:	jae    0x14001c2f7
   14001c2ed:	mov    rax,QWORD PTR [rcx+0x10]
   14001c2f1:	mov    rbx,QWORD PTR [rax+rdi*8]
   14001c2f5:	jmp    0x14001c2f9
   14001c2f7:	xor    ebx,ebx
   14001c2f9:	test   rbx,rbx
   14001c2fc:	jne    0x14001c31a
   14001c2fe:	cmp    BYTE PTR [rcx+0x24],bl
   14001c301:	je     0x14001c31a
   14001c303:	call   0x140019614
   14001c308:	cmp    rdi,QWORD PTR [rax+0x18]
   14001c30c:	jae    0x14001c318
   14001c30e:	mov    rax,QWORD PTR [rax+0x10]
   14001c312:	mov    rbx,QWORD PTR [rax+rdi*8]
   14001c316:	jmp    0x14001c31a
   14001c318:	xor    ebx,ebx
   14001c31a:	test   rbx,rbx
   14001c31d:	jne    0x14001c39b
   14001c31f:	test   rsi,rsi
   14001c322:	je     0x14001c329
   14001c324:	mov    rbx,rsi
   14001c327:	jmp    0x14001c39b
   14001c329:	mov    rdx,rbp
   14001c32c:	lea    rcx,[rsp+0x70]
   14001c331:	call   0x14001ba7c
   14001c336:	cmp    rax,0xffffffffffffffff
   14001c33a:	jne    0x14001c35f
   14001c33c:	lea    rdx,[rip+0x22fbd]        # 0x14003f300
   14001c343:	lea    rcx,[rsp+0x28]
   14001c348:	call   0x14001c97c
   14001c34d:	lea    rdx,[rip+0x2b6d4]        # 0x140047a28
   14001c354:	lea    rcx,[rsp+0x28]
   14001c359:	call   0x14001e5c0
   14001c35e:	int3   
   14001c35f:	mov    rbx,QWORD PTR [rsp+0x70]
   14001c364:	mov    QWORD PTR [rip+0x2f615],rbx        # 0x14004b980
   14001c36b:	xor    edx,edx
   14001c36d:	lea    rcx,[rsp+0x60]
   14001c372:	call   0x1400194bc
   14001c377:	mov    rcx,QWORD PTR [rbx+0x8]
   14001c37b:	cmp    rcx,0xffffffffffffffff
   14001c37f:	jae    0x14001c388
   14001c381:	inc    rcx
   14001c384:	mov    QWORD PTR [rbx+0x8],rcx
   14001c388:	lea    rcx,[rsp+0x60]
   14001c38d:	call   0x1400194ec
   14001c392:	mov    rcx,rbx
   14001c395:	call   0x14001974c
   14001c39a:	nop
   14001c39b:	lea    rcx,[rsp+0x68]
   14001c3a0:	call   0x1400194ec
   14001c3a5:	mov    rax,rbx
   14001c3a8:	mov    rbx,QWORD PTR [rsp+0x78]
   14001c3ad:	add    rsp,0x40
   14001c3b1:	pop    rdi
   14001c3b2:	pop    rsi
   14001c3b3:	pop    rbp
   14001c3b4:	ret    
   14001c3b5:	int3   
   14001c3b6:	int3   
   14001c3b7:	int3   
   14001c3b8:	mov    QWORD PTR [rsp+0x8],rcx
   14001c3bd:	push   rdi
   14001c3be:	sub    rsp,0x30
   14001c3c2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c3cb:	mov    QWORD PTR [rsp+0x48],rbx
   14001c3d0:	mov    rbx,rcx
   14001c3d3:	lea    rax,[rip+0x1e63e]        # 0x14003aa18
   14001c3da:	mov    QWORD PTR [rcx],rax
   14001c3dd:	cmp    BYTE PTR [rcx+0x80],0x0
   14001c3e4:	je     0x14001c3ec
   14001c3e6:	call   0x14001c1a0
   14001c3eb:	nop
   14001c3ec:	lea    rax,[rip+0x1e5a5]        # 0x14003a998
   14001c3f3:	mov    QWORD PTR [rbx],rax
   14001c3f6:	mov    rdi,QWORD PTR [rbx+0x68]
   14001c3fa:	test   rdi,rdi
   14001c3fd:	je     0x14001c40f
   14001c3ff:	mov    rcx,rdi
   14001c402:	call   0x140001b80
   14001c407:	mov    rcx,rdi
   14001c40a:	call   0x14001c4dc
   14001c40f:	lea    rcx,[rbx+0x8]
   14001c413:	mov    rbx,QWORD PTR [rsp+0x48]
   14001c418:	add    rsp,0x30
   14001c41c:	pop    rdi
   14001c41d:	jmp    0x14001a20c
   14001c422:	int3   
   14001c423:	int3   
   14001c424:	rex push rbx
   14001c426:	sub    rsp,0x20
   14001c42a:	mov    rbx,rcx
   14001c42d:	mov    rcx,rdx
   14001c430:	call   0x14001c268
   14001c435:	mov    rcx,rbx
   14001c438:	mov    rdx,rax
   14001c43b:	add    rsp,0x20
   14001c43f:	pop    rbx
   14001c440:	jmp    0x14001b140
   14001c445:	int3   
   14001c446:	int3   
   14001c447:	int3   
   14001c448:	mov    QWORD PTR [rsp+0x8],rbx
   14001c44d:	push   rdi
   14001c44e:	sub    rsp,0x20
   14001c452:	mov    ebx,edx
   14001c454:	mov    rdi,rcx
   14001c457:	call   0x14001c3b8
   14001c45c:	test   bl,0x1
   14001c45f:	je     0x14001c469
   14001c461:	mov    rcx,rdi
   14001c464:	call   0x14001c4dc
   14001c469:	mov    rax,rdi
   14001c46c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c471:	add    rsp,0x20
   14001c475:	pop    rdi
   14001c476:	ret    
   14001c477:	int3   
   14001c478:	rex.W jmp QWORD PTR [rip+0x1dd29]        # 0x14003a1a8
   14001c47f:	int3   
   14001c480:	rex.W jmp QWORD PTR [rip+0x1dc71]        # 0x14003a0f8
   14001c487:	int3   
   14001c488:	rex.W jmp QWORD PTR [rip+0x1dc31]        # 0x14003a0c0
   14001c48f:	int3   
   14001c490:	rex.W jmp QWORD PTR [rip+0x1dc19]        # 0x14003a0b0
   14001c497:	int3   
   14001c498:	sub    rsp,0x28
   14001c49c:	mov    rax,QWORD PTR [rip+0x2cd15]        # 0x1400491b8
   14001c4a3:	test   rax,rax
   14001c4a6:	jne    0x14001c4af
   14001c4a8:	call   0x14001de98
   14001c4ad:	jmp    0x14001c4c4
   14001c4af:	dec    rax
   14001c4b2:	lea    rdx,[rip+0x2f5b7]        # 0x14004ba70
   14001c4b9:	mov    QWORD PTR [rdx+rax*8],rcx
   14001c4bd:	mov    QWORD PTR [rip+0x2ccf4],rax        # 0x1400491b8
   14001c4c4:	add    rsp,0x28
   14001c4c8:	ret    
   14001c4c9:	int3   
   14001c4ca:	jmp    QWORD PTR [rip+0x1df30]        # 0x14003a400
   14001c4d0:	jmp    QWORD PTR [rip+0x1df32]        # 0x14003a408
   14001c4d6:	jmp    QWORD PTR [rip+0x1df1c]        # 0x14003a3f8
   14001c4dc:	jmp    0x14001ca48
   14001c4e1:	int3   
   14001c4e2:	int3   
   14001c4e3:	int3   
   14001c4e4:	int3   
   14001c4e5:	int3   
   14001c4e6:	int3   
   14001c4e7:	int3   
   14001c4e8:	int3   
   14001c4e9:	int3   
   14001c4ea:	int3   
   14001c4eb:	int3   
   14001c4ec:	int3   
   14001c4ed:	int3   
   14001c4ee:	int3   
   14001c4ef:	int3   
   14001c4f0:	int3   
   14001c4f1:	int3   
   14001c4f2:	int3   
   14001c4f3:	int3   
   14001c4f4:	int3   
   14001c4f5:	int3   
   14001c4f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001c500:	cmp    rcx,QWORD PTR [rip+0x2cf59]        # 0x140049460
   14001c507:	jne    0x14001c51a
   14001c509:	rol    rcx,0x10
   14001c50d:	test   cx,0xffff
   14001c512:	jne    0x14001c516
   14001c514:	repz ret 
   14001c516:	ror    rcx,0x10
   14001c51a:	jmp    0x140023c68
   14001c51f:	int3   
   14001c520:	mov    rax,rcx
   14001c523:	movzx  edx,WORD PTR [rax]
   14001c526:	add    rax,0x2
   14001c52a:	test   dx,dx
   14001c52d:	jne    0x14001c523
   14001c52f:	sub    rax,rcx
   14001c532:	sar    rax,1
   14001c535:	dec    rax
   14001c538:	ret    
   14001c539:	int3   
   14001c53a:	int3   
   14001c53b:	int3   
   14001c53c:	mov    QWORD PTR [rsp+0x8],rbx
   14001c541:	mov    QWORD PTR [rsp+0x10],rsi
   14001c546:	push   rdi
   14001c547:	sub    rsp,0x30
   14001c54b:	mov    rbx,r9
   14001c54e:	mov    rsi,r8
   14001c551:	mov    rdi,rdx
   14001c554:	test   r9,r9
   14001c557:	jne    0x14001c55d
   14001c559:	xor    eax,eax
   14001c55b:	jmp    0x14001c5c3
   14001c55d:	test   rcx,rcx
   14001c560:	jne    0x14001c587
   14001c562:	call   0x140020aa4
   14001c567:	mov    ebx,0x16
   14001c56c:	and    QWORD PTR [rsp+0x20],0x0
   14001c572:	xor    r9d,r9d
   14001c575:	xor    r8d,r8d
   14001c578:	xor    edx,edx
   14001c57a:	xor    ecx,ecx
   14001c57c:	mov    DWORD PTR [rax],ebx
   14001c57e:	call   0x14001ccf0
   14001c583:	mov    eax,ebx
   14001c585:	jmp    0x14001c5c3
   14001c587:	test   r8,r8
   14001c58a:	je     0x14001c59e
   14001c58c:	cmp    rdx,rbx
   14001c58f:	jb     0x14001c59e
   14001c591:	mov    r8,rbx
   14001c594:	mov    rdx,rsi
   14001c597:	call   0x1400205b0
   14001c59c:	jmp    0x14001c559
   14001c59e:	mov    r8,rdx
   14001c5a1:	xor    edx,edx
   14001c5a3:	call   0x14001c730
   14001c5a8:	test   rsi,rsi
   14001c5ab:	je     0x14001c562
   14001c5ad:	cmp    rdi,rbx
   14001c5b0:	jae    0x14001c5be
   14001c5b2:	call   0x140020aa4
   14001c5b7:	mov    ebx,0x22
   14001c5bc:	jmp    0x14001c56c
   14001c5be:	mov    eax,0x16
   14001c5c3:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c5c8:	mov    rsi,QWORD PTR [rsp+0x48]
   14001c5cd:	add    rsp,0x30
   14001c5d1:	pop    rdi
   14001c5d2:	ret    
   14001c5d3:	int3   
   14001c5d4:	rex push rbx
   14001c5d6:	sub    rsp,0x30
   14001c5da:	mov    rax,r8
   14001c5dd:	test   r9,r9
   14001c5e0:	je     0x14001c62d
   14001c5e2:	test   rcx,rcx
   14001c5e5:	jne    0x14001c60c
   14001c5e7:	call   0x140020aa4
   14001c5ec:	mov    ebx,0x16
   14001c5f1:	and    QWORD PTR [rsp+0x20],0x0
   14001c5f7:	xor    r9d,r9d
   14001c5fa:	xor    r8d,r8d
   14001c5fd:	xor    edx,edx
   14001c5ff:	xor    ecx,ecx
   14001c601:	mov    DWORD PTR [rax],ebx
   14001c603:	call   0x14001ccf0
   14001c608:	mov    eax,ebx
   14001c60a:	jmp    0x14001c62f
   14001c60c:	test   rax,rax
   14001c60f:	je     0x14001c5e7
   14001c611:	cmp    rdx,r9
   14001c614:	jae    0x14001c622
   14001c616:	call   0x140020aa4
   14001c61b:	mov    ebx,0x22
   14001c620:	jmp    0x14001c5f1
   14001c622:	mov    r8,r9
   14001c625:	mov    rdx,rax
   14001c628:	call   0x1400205b0
   14001c62d:	xor    eax,eax
   14001c62f:	add    rsp,0x30
   14001c633:	pop    rbx
   14001c634:	ret    
   14001c635:	int3   
   14001c636:	int3   
   14001c637:	int3   
   14001c638:	int3   
   14001c639:	int3   
   14001c63a:	int3   
   14001c63b:	int3   
   14001c63c:	int3   
   14001c63d:	int3   
   14001c63e:	int3   
   14001c63f:	int3   
   14001c640:	int3   
   14001c641:	int3   
   14001c642:	int3   
   14001c643:	int3   
   14001c644:	int3   
   14001c645:	int3   
   14001c646:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001c650:	mov    rax,rcx
   14001c653:	neg    rcx
   14001c656:	test   rax,0x7
   14001c65c:	je     0x14001c66d
   14001c65e:	xchg   ax,ax
   14001c660:	mov    dl,BYTE PTR [rax]
   14001c662:	inc    rax
   14001c665:	test   dl,dl
   14001c667:	je     0x14001c6c8
   14001c669:	test   al,0x7
   14001c66b:	jne    0x14001c660
   14001c66d:	movabs r8,0x7efefefefefefeff
   14001c677:	movabs r11,0x8101010101010100
   14001c681:	mov    rdx,QWORD PTR [rax]
   14001c684:	mov    r9,r8
   14001c687:	add    rax,0x8
   14001c68b:	add    r9,rdx
   14001c68e:	not    rdx
   14001c691:	xor    rdx,r9
   14001c694:	and    rdx,r11
   14001c697:	je     0x14001c681
   14001c699:	mov    rdx,QWORD PTR [rax-0x8]
   14001c69d:	test   dl,dl
   14001c69f:	je     0x14001c6f2
   14001c6a1:	test   dh,dh
   14001c6a3:	je     0x14001c6ec
   14001c6a5:	shr    rdx,0x10
   14001c6a9:	test   dl,dl
   14001c6ab:	je     0x14001c6e6
   14001c6ad:	test   dh,dh
   14001c6af:	je     0x14001c6e0
   14001c6b1:	shr    rdx,0x10
   14001c6b5:	test   dl,dl
   14001c6b7:	je     0x14001c6da
   14001c6b9:	test   dh,dh
   14001c6bb:	je     0x14001c6d4
   14001c6bd:	shr    edx,0x10
   14001c6c0:	test   dl,dl
   14001c6c2:	je     0x14001c6ce
   14001c6c4:	test   dh,dh
   14001c6c6:	jne    0x14001c681
   14001c6c8:	lea    rax,[rcx+rax*1-0x1]
   14001c6cd:	ret    
   14001c6ce:	lea    rax,[rcx+rax*1-0x2]
   14001c6d3:	ret    
   14001c6d4:	lea    rax,[rcx+rax*1-0x3]
   14001c6d9:	ret    
   14001c6da:	lea    rax,[rcx+rax*1-0x4]
   14001c6df:	ret    
   14001c6e0:	lea    rax,[rcx+rax*1-0x5]
   14001c6e5:	ret    
   14001c6e6:	lea    rax,[rcx+rax*1-0x6]
   14001c6eb:	ret    
   14001c6ec:	lea    rax,[rcx+rax*1-0x7]
   14001c6f1:	ret    
   14001c6f2:	lea    rax,[rcx+rax*1-0x8]
   14001c6f7:	ret    
   14001c6f8:	test   r8,r8
   14001c6fb:	je     0x14001c70a
   14001c6fd:	cmp    BYTE PTR [rcx],dl
   14001c6ff:	je     0x14001c70a
   14001c701:	inc    rcx
   14001c704:	sub    r8,0x1
   14001c708:	jne    0x14001c6fd
   14001c70a:	neg    r8
   14001c70d:	sbb    rax,rax
   14001c710:	and    rax,rcx
   14001c713:	ret    
   14001c714:	int3   
   14001c715:	int3   
   14001c716:	int3   
   14001c717:	int3   
   14001c718:	int3   
   14001c719:	int3   
   14001c71a:	int3   
   14001c71b:	int3   
   14001c71c:	int3   
   14001c71d:	int3   
   14001c71e:	int3   
   14001c71f:	int3   
   14001c720:	int3   
   14001c721:	int3   
   14001c722:	int3   
   14001c723:	int3   
   14001c724:	int3   
   14001c725:	int3   
   14001c726:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001c730:	mov    rax,rcx
   14001c733:	cmp    r8,0x8
   14001c737:	jb     0x14001c78c
   14001c739:	movzx  edx,dl
   14001c73c:	movabs r9,0x101010101010101
   14001c746:	imul   rdx,r9
   14001c74a:	cmp    r8,0x40
   14001c74e:	jb     0x14001c76e
   14001c750:	neg    rcx
   14001c753:	and    ecx,0x7
   14001c756:	je     0x14001c75e
   14001c758:	sub    r8,rcx
   14001c75b:	mov    QWORD PTR [rax],rdx
   14001c75e:	add    rcx,rax
   14001c761:	mov    r9,r8
   14001c764:	and    r8,0x3f
   14001c768:	shr    r9,0x6
   14001c76c:	jne    0x14001c7a7
   14001c76e:	mov    r9,r8
   14001c771:	and    r8,0x7
   14001c775:	shr    r9,0x3
   14001c779:	je     0x14001c78c
   14001c77b:	data16 data16 xchg ax,ax
   14001c77f:	nop
   14001c780:	mov    QWORD PTR [rcx],rdx
   14001c783:	add    rcx,0x8
   14001c787:	dec    r9
   14001c78a:	jne    0x14001c780
   14001c78c:	test   r8,r8
   14001c78f:	je     0x14001c79b
   14001c791:	mov    BYTE PTR [rcx],dl
   14001c793:	inc    rcx
   14001c796:	dec    r8
   14001c799:	jne    0x14001c791
   14001c79b:	ret    
   14001c79c:	nop    DWORD PTR [rax+0x0]
   14001c7a0:	data16 data16 xchg ax,ax
   14001c7a4:	data16 xchg ax,ax
   14001c7a7:	cmp    r9,0x1c00
   14001c7ae:	jae    0x14001c7e0
   14001c7b0:	mov    QWORD PTR [rcx],rdx
   14001c7b3:	mov    QWORD PTR [rcx+0x8],rdx
   14001c7b7:	mov    QWORD PTR [rcx+0x10],rdx
   14001c7bb:	add    rcx,0x40
   14001c7bf:	mov    QWORD PTR [rcx-0x28],rdx
   14001c7c3:	mov    QWORD PTR [rcx-0x20],rdx
   14001c7c7:	dec    r9
   14001c7ca:	mov    QWORD PTR [rcx-0x18],rdx
   14001c7ce:	mov    QWORD PTR [rcx-0x10],rdx
   14001c7d2:	mov    QWORD PTR [rcx-0x8],rdx
   14001c7d6:	jne    0x14001c7b0
   14001c7d8:	jmp    0x14001c76e
   14001c7da:	nop    WORD PTR [rax+rax*1+0x0]
   14001c7e0:	movnti QWORD PTR [rcx],rdx
   14001c7e4:	movnti QWORD PTR [rcx+0x8],rdx
   14001c7e9:	movnti QWORD PTR [rcx+0x10],rdx
   14001c7ee:	add    rcx,0x40
   14001c7f2:	movnti QWORD PTR [rcx-0x28],rdx
   14001c7f7:	movnti QWORD PTR [rcx-0x20],rdx
   14001c7fc:	dec    r9
   14001c7ff:	movnti QWORD PTR [rcx-0x18],rdx
   14001c804:	movnti QWORD PTR [rcx-0x10],rdx
   14001c809:	movnti QWORD PTR [rcx-0x8],rdx
   14001c80e:	jne    0x14001c7e0
   14001c810:	lock or BYTE PTR [rsp],0x0
   14001c815:	jmp    0x14001c76e
   14001c81a:	int3   
   14001c81b:	int3   
   14001c81c:	and    QWORD PTR [rcx+0x8],0x0
   14001c821:	and    DWORD PTR [rcx+0x10],0x0
   14001c825:	lea    rax,[rip+0x1e3fc]        # 0x14003ac28
   14001c82c:	mov    QWORD PTR [rcx],rax
   14001c82f:	mov    rax,rcx
   14001c832:	ret    
   14001c833:	int3   
   14001c834:	mov    QWORD PTR [rsp+0x8],rbx
   14001c839:	mov    QWORD PTR [rsp+0x10],rsi
   14001c83e:	push   rdi
   14001c83f:	sub    rsp,0x20
   14001c843:	lea    rax,[rip+0x1e3de]        # 0x14003ac28
   14001c84a:	mov    rbx,rcx
   14001c84d:	mov    rdi,rdx
   14001c850:	mov    QWORD PTR [rcx],rax
   14001c853:	mov    rcx,QWORD PTR [rdx]
   14001c856:	test   rcx,rcx
   14001c859:	je     0x14001c886
   14001c85b:	call   0x14001c650
   14001c860:	mov    rsi,rax
   14001c863:	lea    rcx,[rax+0x1]
   14001c867:	call   0x14001d66c
   14001c86c:	mov    QWORD PTR [rbx+0x8],rax
   14001c870:	test   rax,rax
   14001c873:	je     0x14001c88b
   14001c875:	mov    r8,QWORD PTR [rdi]
   14001c878:	lea    rdx,[rsi+0x1]
   14001c87c:	mov    rcx,rax
   14001c87f:	call   0x140023db4
   14001c884:	jmp    0x14001c88b
   14001c886:	and    QWORD PTR [rbx+0x8],0x0
   14001c88b:	mov    rsi,QWORD PTR [rsp+0x38]
   14001c890:	mov    DWORD PTR [rbx+0x10],0x1
   14001c897:	mov    rax,rbx
   14001c89a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c89f:	add    rsp,0x20
   14001c8a3:	pop    rdi
   14001c8a4:	ret    
   14001c8a5:	int3   
   14001c8a6:	int3   
   14001c8a7:	int3   
   14001c8a8:	lea    rax,[rip+0x1e379]        # 0x14003ac28
   14001c8af:	mov    QWORD PTR [rcx],rax
   14001c8b2:	mov    rax,QWORD PTR [rdx]
   14001c8b5:	and    DWORD PTR [rcx+0x10],0x0
   14001c8b9:	mov    QWORD PTR [rcx+0x8],rax
   14001c8bd:	mov    rax,rcx
   14001c8c0:	ret    
   14001c8c1:	int3   
   14001c8c2:	int3   
   14001c8c3:	int3   
   14001c8c4:	mov    QWORD PTR [rsp+0x8],rbx
   14001c8c9:	mov    QWORD PTR [rsp+0x10],rsi
   14001c8ce:	push   rdi
   14001c8cf:	sub    rsp,0x20
   14001c8d3:	lea    rax,[rip+0x1e34e]        # 0x14003ac28
   14001c8da:	mov    rdi,rdx
   14001c8dd:	mov    rbx,rcx
   14001c8e0:	mov    QWORD PTR [rcx],rax
   14001c8e3:	mov    eax,DWORD PTR [rdx+0x10]
   14001c8e6:	mov    DWORD PTR [rcx+0x10],eax
   14001c8e9:	test   eax,eax
   14001c8eb:	je     0x14001c929
   14001c8ed:	mov    rcx,QWORD PTR [rdx+0x8]
   14001c8f1:	test   rcx,rcx
   14001c8f4:	je     0x14001c922
   14001c8f6:	call   0x14001c650
   14001c8fb:	mov    rsi,rax
   14001c8fe:	lea    rcx,[rax+0x1]
   14001c902:	call   0x14001d66c
   14001c907:	mov    QWORD PTR [rbx+0x8],rax
   14001c90b:	test   rax,rax
   14001c90e:	je     0x14001c931
   14001c910:	mov    r8,QWORD PTR [rdi+0x8]
   14001c914:	lea    rdx,[rsi+0x1]
   14001c918:	mov    rcx,rax
   14001c91b:	call   0x140023db4
   14001c920:	jmp    0x14001c931
   14001c922:	and    QWORD PTR [rbx+0x8],0x0
   14001c927:	jmp    0x14001c931
   14001c929:	mov    rax,QWORD PTR [rdx+0x8]
   14001c92d:	mov    QWORD PTR [rcx+0x8],rax
   14001c931:	mov    rsi,QWORD PTR [rsp+0x38]
   14001c936:	mov    rax,rbx
   14001c939:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c93e:	add    rsp,0x20
   14001c942:	pop    rdi
   14001c943:	ret    
   14001c944:	sub    rsp,0x28
   14001c948:	cmp    DWORD PTR [rcx+0x10],0x0
   14001c94c:	lea    rax,[rip+0x1e2d5]        # 0x14003ac28
   14001c953:	mov    QWORD PTR [rcx],rax
   14001c956:	je     0x14001c961
   14001c958:	mov    rcx,QWORD PTR [rcx+0x8]
   14001c95c:	call   0x14001ca48
   14001c961:	add    rsp,0x28
   14001c965:	ret    
   14001c966:	int3   
   14001c967:	int3   
   14001c968:	mov    rax,QWORD PTR [rcx+0x8]
   14001c96c:	test   rax,rax
   14001c96f:	jne    0x14001c978
   14001c971:	lea    rax,[rip+0x1e2c0]        # 0x14003ac38
   14001c978:	ret    
   14001c979:	int3   
   14001c97a:	int3   
   14001c97b:	int3   
   14001c97c:	mov    QWORD PTR [rsp+0x10],rdx
   14001c981:	push   rbx
   14001c982:	sub    rsp,0x20
   14001c986:	lea    rdx,[rsp+0x38]
   14001c98b:	mov    rbx,rcx
   14001c98e:	call   0x14001c834
   14001c993:	lea    r11,[rip+0x1e2be]        # 0x14003ac58
   14001c99a:	mov    rax,rbx
   14001c99d:	mov    QWORD PTR [rbx],r11
   14001c9a0:	add    rsp,0x20
   14001c9a4:	pop    rbx
   14001c9a5:	ret    
   14001c9a6:	int3   
   14001c9a7:	int3   
   14001c9a8:	rex push rbx
   14001c9aa:	sub    rsp,0x20
   14001c9ae:	mov    rbx,rcx
   14001c9b1:	call   0x14001c8c4
   14001c9b6:	lea    r11,[rip+0x1e29b]        # 0x14003ac58
   14001c9bd:	mov    QWORD PTR [rbx],r11
   14001c9c0:	mov    rax,rbx
   14001c9c3:	add    rsp,0x20
   14001c9c7:	pop    rbx
   14001c9c8:	ret    
   14001c9c9:	int3   
   14001c9ca:	int3   
   14001c9cb:	int3   
   14001c9cc:	lea    rax,[rip+0x1e285]        # 0x14003ac58
   14001c9d3:	mov    QWORD PTR [rcx],rax
   14001c9d6:	jmp    0x14001c944
   14001c9db:	int3   
   14001c9dc:	mov    QWORD PTR [rsp+0x8],rbx
   14001c9e1:	push   rdi
   14001c9e2:	sub    rsp,0x20
   14001c9e6:	mov    ebx,edx
   14001c9e8:	mov    rdi,rcx
   14001c9eb:	call   0x14001c944
   14001c9f0:	test   bl,0x1
   14001c9f3:	je     0x14001c9fd
   14001c9f5:	mov    rcx,rdi
   14001c9f8:	call   0x14001c4dc
   14001c9fd:	mov    rax,rdi
   14001ca00:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ca05:	add    rsp,0x20
   14001ca09:	pop    rdi
   14001ca0a:	ret    
   14001ca0b:	int3   
   14001ca0c:	mov    QWORD PTR [rsp+0x8],rbx
   14001ca11:	push   rdi
   14001ca12:	sub    rsp,0x20
   14001ca16:	lea    rax,[rip+0x1e23b]        # 0x14003ac58
   14001ca1d:	mov    ebx,edx
   14001ca1f:	mov    rdi,rcx
   14001ca22:	mov    QWORD PTR [rcx],rax
   14001ca25:	call   0x14001c944
   14001ca2a:	test   bl,0x1
   14001ca2d:	je     0x14001ca37
   14001ca2f:	mov    rcx,rdi
   14001ca32:	call   0x14001c4dc
   14001ca37:	mov    rax,rdi
   14001ca3a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ca3f:	add    rsp,0x20
   14001ca43:	pop    rdi
   14001ca44:	ret    
   14001ca45:	int3   
   14001ca46:	int3   
   14001ca47:	int3   
   14001ca48:	test   rcx,rcx
   14001ca4b:	je     0x14001ca84
   14001ca4d:	push   rbx
   14001ca4e:	sub    rsp,0x20
   14001ca52:	mov    r8,rcx
   14001ca55:	mov    rcx,QWORD PTR [rip+0x2f634]        # 0x14004c090
   14001ca5c:	xor    edx,edx
   14001ca5e:	call   QWORD PTR [rip+0x1d7d4]        # 0x14003a238
   14001ca64:	test   eax,eax
   14001ca66:	jne    0x14001ca7f
   14001ca68:	call   0x140020aa4
   14001ca6d:	mov    rbx,rax
   14001ca70:	call   QWORD PTR [rip+0x1d652]        # 0x14003a0c8
   14001ca76:	mov    ecx,eax
   14001ca78:	call   0x140020a5c
   14001ca7d:	mov    DWORD PTR [rbx],eax
   14001ca7f:	add    rsp,0x20
   14001ca83:	pop    rbx
   14001ca84:	ret    
   14001ca85:	int3   
   14001ca86:	int3   
   14001ca87:	int3   
   14001ca88:	mov    QWORD PTR [rsp+0x8],rbx
   14001ca8d:	push   rdi
   14001ca8e:	sub    rsp,0x20
   14001ca92:	lea    rax,[rip+0x1e1d7]        # 0x14003ac70
   14001ca99:	mov    ebx,edx
   14001ca9b:	mov    rdi,rcx
   14001ca9e:	mov    QWORD PTR [rcx],rax
   14001caa1:	call   0x140023e74
   14001caa6:	test   bl,0x1
   14001caa9:	je     0x14001cab3
   14001caab:	mov    rcx,rdi
   14001caae:	call   0x14001c4dc
   14001cab3:	mov    rax,rdi
   14001cab6:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cabb:	add    rsp,0x20
   14001cabf:	pop    rdi
   14001cac0:	ret    
   14001cac1:	int3   
   14001cac2:	int3   
   14001cac3:	int3   
   14001cac4:	sub    rsp,0x28
   14001cac8:	mov    rax,rdx
   14001cacb:	lea    rdx,[rcx+0x11]
   14001cacf:	lea    rcx,[rax+0x11]
   14001cad3:	call   0x140023f00
   14001cad8:	xor    ecx,ecx
   14001cada:	cmp    eax,ecx
   14001cadc:	sete   al
   14001cadf:	add    rsp,0x28
   14001cae3:	ret    
   14001cae4:	sub    rsp,0x28
   14001cae8:	call   0x14002412c
   14001caed:	mov    rcx,QWORD PTR [rip+0x2cf0c]        # 0x140049a00
   14001caf4:	cmp    QWORD PTR [rax+0xc0],rcx
   14001cafb:	je     0x14001cb10
   14001cafd:	mov    eax,DWORD PTR [rax+0xc8]
   14001cb03:	test   DWORD PTR [rip+0x2cd77],eax        # 0x140049880
   14001cb09:	jne    0x14001cb10
   14001cb0b:	call   0x14001e968
   14001cb10:	mov    rax,QWORD PTR [rip+0x2c7a1]        # 0x1400492b8
   14001cb17:	add    rsp,0x28
   14001cb1b:	ret    
   14001cb1c:	rex push rbx
   14001cb1e:	sub    rsp,0x40
   14001cb22:	mov    rbx,rcx
   14001cb25:	jmp    0x14001cb36
   14001cb27:	mov    rcx,rbx
   14001cb2a:	call   0x140024314
   14001cb2f:	test   eax,eax
   14001cb31:	je     0x14001cb46
   14001cb33:	mov    rcx,rbx
   14001cb36:	call   0x14001d66c
   14001cb3b:	test   rax,rax
   14001cb3e:	je     0x14001cb27
   14001cb40:	add    rsp,0x40
   14001cb44:	pop    rbx
   14001cb45:	ret    
   14001cb46:	mov    eax,DWORD PTR [rip+0x2ef94]        # 0x14004bae0
   14001cb4c:	mov    r8d,0x1
   14001cb52:	lea    rbx,[rip+0x1daff]        # 0x14003a658
   14001cb59:	test   r8b,al
   14001cb5c:	jne    0x14001cb8d
   14001cb5e:	or     eax,r8d
   14001cb61:	lea    rdx,[rip+0x2c758]        # 0x1400492c0
   14001cb68:	lea    rcx,[rip+0x2ef59]        # 0x14004bac8
   14001cb6f:	mov    DWORD PTR [rip+0x2ef6b],eax        # 0x14004bae0
   14001cb75:	call   0x14001c8a8
   14001cb7a:	lea    rcx,[rip+0x1cc4b]        # 0x1400397cc
   14001cb81:	mov    QWORD PTR [rip+0x2ef40],rbx        # 0x14004bac8
   14001cb88:	call   0x14001cee4
   14001cb8d:	lea    rdx,[rip+0x2ef34]        # 0x14004bac8
   14001cb94:	lea    rcx,[rsp+0x20]
   14001cb99:	call   0x14001c8c4
   14001cb9e:	lea    rdx,[rip+0x2aee3]        # 0x140047a88
   14001cba5:	lea    rcx,[rsp+0x20]
   14001cbaa:	mov    QWORD PTR [rsp+0x20],rbx
   14001cbaf:	call   0x14001e5c0
   14001cbb4:	int3   
   14001cbb5:	int3   
   14001cbb6:	int3   
   14001cbb7:	int3   
   14001cbb8:	jmp    0x14001c4dc
   14001cbbd:	int3   
   14001cbbe:	int3   
   14001cbbf:	int3   
   14001cbc0:	mov    QWORD PTR [rip+0x2ef21],rcx        # 0x14004bae8
   14001cbc7:	ret    
   14001cbc8:	rex push rbx
   14001cbca:	sub    rsp,0x5e0
   14001cbd1:	and    DWORD PTR [rsp+0x70],0x0
   14001cbd6:	lea    rcx,[rsp+0x74]
   14001cbdb:	xor    edx,edx
   14001cbdd:	mov    r8d,0x94
   14001cbe3:	call   0x14001c730
   14001cbe8:	lea    r11,[rsp+0x70]
   14001cbed:	lea    rax,[rsp+0x110]
   14001cbf5:	lea    rcx,[rsp+0x110]
   14001cbfd:	mov    QWORD PTR [rsp+0x48],r11
   14001cc02:	mov    QWORD PTR [rsp+0x50],rax
   14001cc07:	call   QWORD PTR [rip+0x1d663]        # 0x14003a270
   14001cc0d:	mov    rbx,QWORD PTR [rsp+0x208]
   14001cc15:	lea    rdx,[rsp+0x40]
   14001cc1a:	mov    rcx,rbx
   14001cc1d:	xor    r8d,r8d
   14001cc20:	call   0x140030e46
   14001cc25:	test   rax,rax
   14001cc28:	je     0x14001cc65
   14001cc2a:	and    QWORD PTR [rsp+0x38],0x0
   14001cc30:	mov    rdx,QWORD PTR [rsp+0x40]
   14001cc35:	lea    rcx,[rsp+0x60]
   14001cc3a:	mov    QWORD PTR [rsp+0x30],rcx
   14001cc3f:	lea    rcx,[rsp+0x58]
   14001cc44:	mov    r9,rax
   14001cc47:	mov    QWORD PTR [rsp+0x28],rcx
   14001cc4c:	lea    rcx,[rsp+0x110]
   14001cc54:	mov    r8,rbx
   14001cc57:	mov    QWORD PTR [rsp+0x20],rcx
   14001cc5c:	xor    ecx,ecx
   14001cc5e:	call   0x140030e40
   14001cc63:	jmp    0x14001cc85
   14001cc65:	mov    rax,QWORD PTR [rsp+0x5e8]
   14001cc6d:	mov    QWORD PTR [rsp+0x208],rax
   14001cc75:	lea    rax,[rsp+0x5e8]
   14001cc7d:	mov    QWORD PTR [rsp+0x1a8],rax
   14001cc85:	mov    rax,QWORD PTR [rsp+0x5e8]
   14001cc8d:	mov    DWORD PTR [rsp+0x70],0xc0000417
   14001cc95:	mov    DWORD PTR [rsp+0x74],0x1
   14001cc9d:	mov    QWORD PTR [rsp+0x80],rax
   14001cca5:	call   QWORD PTR [rip+0x1d5ad]        # 0x14003a258
   14001ccab:	xor    ecx,ecx
   14001ccad:	mov    ebx,eax
   14001ccaf:	call   QWORD PTR [rip+0x1d59b]        # 0x14003a250
   14001ccb5:	lea    rcx,[rsp+0x48]
   14001ccba:	call   QWORD PTR [rip+0x1d588]        # 0x14003a248
   14001ccc0:	test   eax,eax
   14001ccc2:	jne    0x14001ccd0
   14001ccc4:	test   ebx,ebx
   14001ccc6:	jne    0x14001ccd0
   14001ccc8:	lea    ecx,[rax+0x2]
   14001cccb:	call   0x140024348
   14001ccd0:	call   QWORD PTR [rip+0x1d432]        # 0x14003a108
   14001ccd6:	mov    edx,0xc0000417
   14001ccdb:	mov    rcx,rax
   14001ccde:	call   QWORD PTR [rip+0x1d55c]        # 0x14003a240
   14001cce4:	add    rsp,0x5e0
   14001cceb:	pop    rbx
   14001ccec:	ret    
   14001cced:	int3   
   14001ccee:	int3   
   14001ccef:	int3   
   14001ccf0:	mov    QWORD PTR [rsp+0x8],rbx
   14001ccf5:	mov    QWORD PTR [rsp+0x10],rbp
   14001ccfa:	mov    QWORD PTR [rsp+0x18],rsi
   14001ccff:	push   rdi
   14001cd00:	sub    rsp,0x30
   14001cd04:	mov    rbp,rcx
   14001cd07:	mov    rcx,QWORD PTR [rip+0x2edda]        # 0x14004bae8
   14001cd0e:	mov    ebx,r9d
   14001cd11:	mov    rdi,r8
   14001cd14:	mov    rsi,rdx
   14001cd17:	call   0x140023fc4
   14001cd1c:	test   rax,rax
   14001cd1f:	je     0x14001cd3b
   14001cd21:	mov    r10,QWORD PTR [rsp+0x60]
   14001cd26:	mov    r9d,ebx
   14001cd29:	mov    r8,rdi
   14001cd2c:	mov    rdx,rsi
   14001cd2f:	mov    rcx,rbp
   14001cd32:	mov    QWORD PTR [rsp+0x20],r10
   14001cd37:	call   rax
   14001cd39:	jmp    0x14001cd60
   14001cd3b:	mov    ecx,0x2
   14001cd40:	call   0x140024348
   14001cd45:	mov    r11,QWORD PTR [rsp+0x60]
   14001cd4a:	mov    r9d,ebx
   14001cd4d:	mov    r8,rdi
   14001cd50:	mov    rdx,rsi
   14001cd53:	mov    rcx,rbp
   14001cd56:	mov    QWORD PTR [rsp+0x20],r11
   14001cd5b:	call   0x14001cbc8
   14001cd60:	mov    rbx,QWORD PTR [rsp+0x40]
   14001cd65:	mov    rbp,QWORD PTR [rsp+0x48]
   14001cd6a:	mov    rsi,QWORD PTR [rsp+0x50]
   14001cd6f:	add    rsp,0x30
   14001cd73:	pop    rdi
   14001cd74:	ret    
   14001cd75:	int3   
   14001cd76:	int3   
   14001cd77:	int3   
   14001cd78:	sub    rsp,0x38
   14001cd7c:	and    QWORD PTR [rsp+0x20],0x0
   14001cd82:	xor    r9d,r9d
   14001cd85:	xor    r8d,r8d
   14001cd88:	xor    edx,edx
   14001cd8a:	xor    ecx,ecx
   14001cd8c:	call   0x14001ccf0
   14001cd91:	add    rsp,0x38
   14001cd95:	ret    
   14001cd96:	int3   
   14001cd97:	int3   
   14001cd98:	rex push rbx
   14001cd9a:	sub    rsp,0x20
   14001cd9e:	mov    edx,0x8
   14001cda3:	lea    ecx,[rdx+0x18]
   14001cda6:	call   0x140020950
   14001cdab:	mov    rcx,rax
   14001cdae:	mov    rbx,rax
   14001cdb1:	call   0x140023fb0
   14001cdb6:	mov    QWORD PTR [rip+0x30773],rax        # 0x14004d530
   14001cdbd:	mov    QWORD PTR [rip+0x30764],rax        # 0x14004d528
   14001cdc4:	test   rbx,rbx
   14001cdc7:	jne    0x14001cdce
   14001cdc9:	lea    eax,[rbx+0x18]
   14001cdcc:	jmp    0x14001cdd4
   14001cdce:	and    QWORD PTR [rbx],0x0
   14001cdd2:	xor    eax,eax
   14001cdd4:	add    rsp,0x20
   14001cdd8:	pop    rbx
   14001cdd9:	ret    
   14001cdda:	int3   
   14001cddb:	int3   
   14001cddc:	mov    QWORD PTR [rsp+0x8],rbx
   14001cde1:	mov    QWORD PTR [rsp+0x10],rsi
   14001cde6:	mov    QWORD PTR [rsp+0x18],rdi
   14001cdeb:	push   r12
   14001cded:	push   r13
   14001cdef:	push   r14
   14001cdf1:	sub    rsp,0x20
   14001cdf5:	mov    r14,rcx
   14001cdf8:	call   0x14002441c
   14001cdfd:	nop
   14001cdfe:	mov    rcx,QWORD PTR [rip+0x3072b]        # 0x14004d530
   14001ce05:	call   0x140023fc4
   14001ce0a:	mov    r12,rax
   14001ce0d:	mov    rcx,QWORD PTR [rip+0x30714]        # 0x14004d528
   14001ce14:	call   0x140023fc4
   14001ce19:	mov    rbx,rax
   14001ce1c:	cmp    rax,r12
   14001ce1f:	jb     0x14001cebd
   14001ce25:	mov    rdi,rax
   14001ce28:	sub    rdi,r12
   14001ce2b:	lea    r13,[rdi+0x8]
   14001ce2f:	cmp    r13,0x8
   14001ce33:	jb     0x14001cebd
   14001ce39:	mov    rcx,r12
   14001ce3c:	call   0x140024350
   14001ce41:	mov    rsi,rax
   14001ce44:	cmp    rax,r13
   14001ce47:	jae    0x14001ce9d
   14001ce49:	mov    edx,0x1000
   14001ce4e:	cmp    rax,rdx
   14001ce51:	cmovb  rdx,rax
   14001ce55:	add    rdx,rax
   14001ce58:	cmp    rdx,rax
   14001ce5b:	jb     0x14001ce6e
   14001ce5d:	mov    rcx,r12
   14001ce60:	call   0x1400209d4
   14001ce65:	xor    ebx,ebx
   14001ce67:	cmp    rax,rbx
   14001ce6a:	jne    0x14001ce86
   14001ce6c:	jmp    0x14001ce70
   14001ce6e:	xor    ebx,ebx
   14001ce70:	lea    rdx,[rsi+0x20]
   14001ce74:	cmp    rdx,rsi
   14001ce77:	jb     0x14001cebf
   14001ce79:	mov    rcx,r12
   14001ce7c:	call   0x1400209d4
   14001ce81:	cmp    rax,rbx
   14001ce84:	je     0x14001cebf
   14001ce86:	sar    rdi,0x3
   14001ce8a:	lea    rbx,[rax+rdi*8]
   14001ce8e:	mov    rcx,rax
   14001ce91:	call   0x140023fb0
   14001ce96:	mov    QWORD PTR [rip+0x30693],rax        # 0x14004d530
   14001ce9d:	mov    rcx,r14
   14001cea0:	call   0x140023fb0
   14001cea5:	mov    QWORD PTR [rbx],rax
   14001cea8:	lea    rcx,[rbx+0x8]
   14001ceac:	call   0x140023fb0
   14001ceb1:	mov    QWORD PTR [rip+0x30670],rax        # 0x14004d528
   14001ceb8:	mov    rbx,r14
   14001cebb:	jmp    0x14001cebf
   14001cebd:	xor    ebx,ebx
   14001cebf:	call   0x140024428
   14001cec4:	mov    rax,rbx
   14001cec7:	mov    rbx,QWORD PTR [rsp+0x40]
   14001cecc:	mov    rsi,QWORD PTR [rsp+0x48]
   14001ced1:	mov    rdi,QWORD PTR [rsp+0x50]
   14001ced6:	add    rsp,0x20
   14001ceda:	pop    r14
   14001cedc:	pop    r13
   14001cede:	pop    r12
   14001cee0:	ret    
   14001cee1:	int3   
   14001cee2:	int3   
   14001cee3:	int3   
   14001cee4:	sub    rsp,0x28
   14001cee8:	call   0x14001cddc
   14001ceed:	neg    rax
   14001cef0:	sbb    eax,eax
   14001cef2:	neg    eax
   14001cef4:	dec    eax
   14001cef6:	add    rsp,0x28
   14001cefa:	ret    
   14001cefb:	int3   
   14001cefc:	xor    r9d,r9d
   14001ceff:	jmp    0x14001cf0f
   14001cf01:	cmp    r8w,r9w
   14001cf05:	je     0x14001cf1b
   14001cf07:	add    rcx,0x2
   14001cf0b:	add    rdx,0x2
   14001cf0f:	movzx  eax,WORD PTR [rcx]
   14001cf12:	movzx  r8d,WORD PTR [rdx]
   14001cf16:	sub    eax,r8d
   14001cf19:	je     0x14001cf01
   14001cf1b:	cmp    eax,r9d
   14001cf1e:	jge    0x14001cf24
   14001cf20:	or     eax,0xffffffff
   14001cf23:	ret    
   14001cf24:	mov    ecx,0x1
   14001cf29:	cmp    eax,r9d
   14001cf2c:	cmovg  eax,ecx
   14001cf2f:	ret    
   14001cf30:	rex push rbx
   14001cf32:	sub    rsp,0x20
   14001cf36:	mov    rbx,rcx
   14001cf39:	mov    BYTE PTR [rcx+0x18],0x0
   14001cf3d:	test   rdx,rdx
   14001cf40:	jne    0x14001cfc8
   14001cf46:	call   0x14002412c
   14001cf4b:	mov    QWORD PTR [rbx+0x10],rax
   14001cf4f:	mov    rdx,QWORD PTR [rax+0xc0]
   14001cf56:	mov    QWORD PTR [rbx],rdx
   14001cf59:	mov    rcx,QWORD PTR [rax+0xb8]
   14001cf60:	mov    QWORD PTR [rbx+0x8],rcx
   14001cf64:	mov    rcx,QWORD PTR [rip+0x2ca95]        # 0x140049a00
   14001cf6b:	cmp    rdx,rcx
   14001cf6e:	je     0x14001cf86
   14001cf70:	mov    eax,DWORD PTR [rax+0xc8]
   14001cf76:	test   DWORD PTR [rip+0x2c904],eax        # 0x140049880
   14001cf7c:	jne    0x14001cf86
   14001cf7e:	call   0x14001e968
   14001cf83:	mov    QWORD PTR [rbx],rax
   14001cf86:	mov    rax,QWORD PTR [rip+0x2ced3]        # 0x140049e60
   14001cf8d:	cmp    QWORD PTR [rbx+0x8],rax
   14001cf91:	je     0x14001cfae
   14001cf93:	mov    rax,QWORD PTR [rbx+0x10]
   14001cf97:	mov    ecx,DWORD PTR [rax+0xc8]
   14001cf9d:	test   DWORD PTR [rip+0x2c8dd],ecx        # 0x140049880
   14001cfa3:	jne    0x14001cfae
   14001cfa5:	call   0x1400249f8
   14001cfaa:	mov    QWORD PTR [rbx+0x8],rax
   14001cfae:	mov    rax,QWORD PTR [rbx+0x10]
   14001cfb2:	test   BYTE PTR [rax+0xc8],0x2
   14001cfb9:	jne    0x14001cfd0
   14001cfbb:	or     DWORD PTR [rax+0xc8],0x2
   14001cfc2:	mov    BYTE PTR [rbx+0x18],0x1
   14001cfc6:	jmp    0x14001cfd0
   14001cfc8:	movdqu xmm0,XMMWORD PTR [rdx]
   14001cfcc:	movdqu XMMWORD PTR [rcx],xmm0
   14001cfd0:	mov    rax,rbx
   14001cfd3:	add    rsp,0x20
   14001cfd7:	pop    rbx
   14001cfd8:	ret    
   14001cfd9:	int3   
   14001cfda:	int3   
   14001cfdb:	int3   
   14001cfdc:	mov    rax,rsp
   14001cfdf:	mov    QWORD PTR [rax+0x8],rbx
   14001cfe3:	mov    QWORD PTR [rax+0x10],rbp
   14001cfe7:	mov    QWORD PTR [rax+0x18],rsi
   14001cfeb:	push   rdi
   14001cfec:	sub    rsp,0x50
   14001cff0:	mov    rsi,rcx
   14001cff3:	mov    rdi,rdx
   14001cff6:	lea    rcx,[rax-0x28]
   14001cffa:	mov    rdx,r8
   14001cffd:	call   0x14001cf30
   14001d002:	xor    ebp,ebp
   14001d004:	cmp    rsi,rbp
   14001d007:	jne    0x14001d045
   14001d009:	call   0x140020aa4
   14001d00e:	xor    r9d,r9d
   14001d011:	xor    r8d,r8d
   14001d014:	xor    edx,edx
   14001d016:	xor    ecx,ecx
   14001d018:	mov    QWORD PTR [rsp+0x20],rbp
   14001d01d:	mov    DWORD PTR [rax],0x16
   14001d023:	call   0x14001ccf0
   14001d028:	cmp    BYTE PTR [rsp+0x48],bpl
   14001d02d:	je     0x14001d03b
   14001d02f:	mov    rax,QWORD PTR [rsp+0x40]
   14001d034:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001d03b:	mov    eax,0x7fffffff
   14001d040:	jmp    0x14001d0d8
   14001d045:	cmp    rdi,rbp
   14001d048:	je     0x14001d009
   14001d04a:	mov    rax,QWORD PTR [rsp+0x30]
   14001d04f:	cmp    DWORD PTR [rax+0x14],ebp
   14001d052:	jne    0x14001d08e
   14001d054:	movzx  ebx,WORD PTR [rsi]
   14001d057:	cmp    bx,0x41
   14001d05b:	jb     0x14001d067
   14001d05d:	cmp    bx,0x5a
   14001d061:	ja     0x14001d067
   14001d063:	add    bx,0x20
   14001d067:	movzx  eax,WORD PTR [rdi]
   14001d06a:	cmp    ax,0x41
   14001d06e:	jb     0x14001d07a
   14001d070:	cmp    ax,0x5a
   14001d074:	ja     0x14001d07a
   14001d076:	add    ax,0x20
   14001d07a:	add    rsi,0x2
   14001d07e:	add    rdi,0x2
   14001d082:	cmp    bx,bp
   14001d085:	je     0x14001d0bd
   14001d087:	cmp    bx,ax
   14001d08a:	je     0x14001d054
   14001d08c:	jmp    0x14001d0bd
   14001d08e:	movzx  ecx,WORD PTR [rsi]
   14001d091:	lea    rdx,[rsp+0x30]
   14001d096:	call   0x140024fdc
   14001d09b:	movzx  ecx,WORD PTR [rdi]
   14001d09e:	lea    rdx,[rsp+0x30]
   14001d0a3:	mov    bx,ax
   14001d0a6:	add    rsi,0x2
   14001d0aa:	call   0x140024fdc
   14001d0af:	add    rdi,0x2
   14001d0b3:	cmp    bx,bp
   14001d0b6:	je     0x14001d0bd
   14001d0b8:	cmp    bx,ax
   14001d0bb:	je     0x14001d08e
   14001d0bd:	movzx  ecx,ax
   14001d0c0:	movzx  eax,bx
   14001d0c3:	sub    eax,ecx
   14001d0c5:	cmp    BYTE PTR [rsp+0x48],bpl
   14001d0ca:	je     0x14001d0d8
   14001d0cc:	mov    rcx,QWORD PTR [rsp+0x40]
   14001d0d1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001d0d8:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d0dd:	mov    rbp,QWORD PTR [rsp+0x68]
   14001d0e2:	mov    rsi,QWORD PTR [rsp+0x70]
   14001d0e7:	add    rsp,0x50
   14001d0eb:	pop    rdi
   14001d0ec:	ret    
   14001d0ed:	int3   
   14001d0ee:	int3   
   14001d0ef:	int3   
   14001d0f0:	rex push rbx
   14001d0f2:	sub    rsp,0x30
   14001d0f6:	xor    ebx,ebx
   14001d0f8:	mov    r9,rcx
   14001d0fb:	cmp    DWORD PTR [rip+0x2ea03],ebx        # 0x14004bb04
   14001d101:	jne    0x14001d176
   14001d103:	cmp    rcx,rbx
   14001d106:	jne    0x14001d12e
   14001d108:	call   0x140020aa4
   14001d10d:	xor    r9d,r9d
   14001d110:	xor    r8d,r8d
   14001d113:	xor    edx,edx
   14001d115:	xor    ecx,ecx
   14001d117:	mov    QWORD PTR [rsp+0x20],rbx
   14001d11c:	mov    DWORD PTR [rax],0x16
   14001d122:	call   0x14001ccf0
   14001d127:	mov    eax,0x7fffffff
   14001d12c:	jmp    0x14001d17e
   14001d12e:	cmp    rdx,rbx
   14001d131:	je     0x14001d108
   14001d133:	movzx  eax,WORD PTR [r9]
   14001d137:	cmp    ax,0x41
   14001d13b:	jb     0x14001d147
   14001d13d:	cmp    ax,0x5a
   14001d141:	ja     0x14001d147
   14001d143:	add    ax,0x20
   14001d147:	movzx  ecx,WORD PTR [rdx]
   14001d14a:	cmp    cx,0x41
   14001d14e:	jb     0x14001d15a
   14001d150:	cmp    cx,0x5a
   14001d154:	ja     0x14001d15a
   14001d156:	add    cx,0x20
   14001d15a:	add    r9,0x2
   14001d15e:	add    rdx,0x2
   14001d162:	cmp    ax,bx
   14001d165:	je     0x14001d16c
   14001d167:	cmp    ax,cx
   14001d16a:	je     0x14001d133
   14001d16c:	movzx  ecx,cx
   14001d16f:	movzx  eax,ax
   14001d172:	sub    eax,ecx
   14001d174:	jmp    0x14001d17e
   14001d176:	xor    r8d,r8d
   14001d179:	call   0x14001cfdc
   14001d17e:	add    rsp,0x30
   14001d182:	pop    rbx
   14001d183:	ret    
   14001d184:	mov    QWORD PTR [rsp+0x10],rbx
   14001d189:	mov    QWORD PTR [rsp+0x18],r8
   14001d18e:	push   rbp
   14001d18f:	push   rsi
   14001d190:	push   rdi
   14001d191:	push   r12
   14001d193:	push   r13
   14001d195:	push   r14
   14001d197:	push   r15
   14001d199:	sub    rsp,0x30
   14001d19d:	mov    r12,QWORD PTR [rsp+0xa8]
   14001d1a5:	mov    r13,QWORD PTR [rsp+0x98]
   14001d1ad:	mov    rdi,rcx
   14001d1b0:	xor    ecx,ecx
   14001d1b2:	mov    r15,r9
   14001d1b5:	mov    r14,rdx
   14001d1b8:	mov    r9,r8
   14001d1bb:	mov    esi,ecx
   14001d1bd:	mov    DWORD PTR [rsp+0x70],ecx
   14001d1c1:	cmp    rdi,rcx
   14001d1c4:	je     0x14001d1d0
   14001d1c6:	cmp    rdx,rcx
   14001d1c9:	jne    0x14001d1da
   14001d1cb:	cmp    r8,rcx
   14001d1ce:	je     0x14001d1df
   14001d1d0:	mov    esi,0x1
   14001d1d5:	jmp    0x14001d39d
   14001d1da:	cmp    r8,rcx
   14001d1dd:	je     0x14001d1d0
   14001d1df:	cmp    r15,rcx
   14001d1e2:	jne    0x14001d1f0
   14001d1e4:	cmp    QWORD PTR [rsp+0x90],rcx
   14001d1ec:	jne    0x14001d1d0
   14001d1ee:	jmp    0x14001d1fa
   14001d1f0:	cmp    QWORD PTR [rsp+0x90],rcx
   14001d1f8:	je     0x14001d1d0
   14001d1fa:	cmp    r13,rcx
   14001d1fd:	jne    0x14001d20b
   14001d1ff:	cmp    QWORD PTR [rsp+0xa0],rcx
   14001d207:	jne    0x14001d1d0
   14001d209:	jmp    0x14001d215
   14001d20b:	cmp    QWORD PTR [rsp+0xa0],rcx
   14001d213:	je     0x14001d1d0
   14001d215:	cmp    r12,rcx
   14001d218:	jne    0x14001d226
   14001d21a:	cmp    QWORD PTR [rsp+0xb0],rcx
   14001d222:	jne    0x14001d1d0
   14001d224:	jmp    0x14001d230
   14001d226:	cmp    QWORD PTR [rsp+0xb0],rcx
   14001d22e:	je     0x14001d1d0
   14001d230:	mov    eax,0x1
   14001d235:	mov    rbx,rdi
   14001d238:	cmp    WORD PTR [rbx],cx
   14001d23b:	je     0x14001d249
   14001d23d:	dec    rax
   14001d240:	add    rbx,0x2
   14001d244:	cmp    rax,rcx
   14001d247:	ja     0x14001d238
   14001d249:	cmp    WORD PTR [rbx],0x3a
   14001d24d:	jne    0x14001d27b
   14001d24f:	cmp    rdx,rcx
   14001d252:	je     0x14001d275
   14001d254:	cmp    r8,0x3
   14001d258:	jb     0x14001d39d
   14001d25e:	mov    r9d,0x2
   14001d264:	mov    r8,rdi
   14001d267:	or     rdx,0xffffffffffffffff
   14001d26b:	mov    rcx,r14
   14001d26e:	call   0x14001d580
   14001d273:	xor    ecx,ecx
   14001d275:	lea    rdi,[rbx+0x2]
   14001d279:	jmp    0x14001d283
   14001d27b:	cmp    rdx,rcx
   14001d27e:	je     0x14001d283
   14001d280:	mov    WORD PTR [rdx],cx
   14001d283:	movzx  eax,WORD PTR [rdi]
   14001d286:	mov    rbp,rcx
   14001d289:	mov    rsi,rcx
   14001d28c:	mov    rbx,rdi
   14001d28f:	cmp    ax,cx
   14001d292:	je     0x14001d2f2
   14001d294:	cmp    ax,0x2f
   14001d298:	je     0x14001d2ab
   14001d29a:	cmp    ax,0x5c
   14001d29e:	je     0x14001d2ab
   14001d2a0:	cmp    ax,0x2e
   14001d2a4:	jne    0x14001d2af
   14001d2a6:	mov    rsi,rbx
   14001d2a9:	jmp    0x14001d2af
   14001d2ab:	lea    rbp,[rbx+0x2]
   14001d2af:	add    rbx,0x2
   14001d2b3:	mov    ax,WORD PTR [rbx]
   14001d2b6:	cmp    ax,cx
   14001d2b9:	jne    0x14001d294
   14001d2bb:	cmp    rbp,rcx
   14001d2be:	je     0x14001d2f2
   14001d2c0:	cmp    r15,rcx
   14001d2c3:	je     0x14001d2ed
   14001d2c5:	mov    r9,rbp
   14001d2c8:	sub    r9,rdi
   14001d2cb:	sar    r9,1
   14001d2ce:	cmp    QWORD PTR [rsp+0x90],r9
   14001d2d6:	jbe    0x14001d391
   14001d2dc:	mov    r8,rdi
   14001d2df:	or     rdx,0xffffffffffffffff
   14001d2e3:	mov    rcx,r15
   14001d2e6:	call   0x14001d580
   14001d2eb:	xor    ecx,ecx
   14001d2ed:	mov    rdi,rbp
   14001d2f0:	jmp    0x14001d2fb
   14001d2f2:	cmp    r15,rcx
   14001d2f5:	je     0x14001d2fb
   14001d2f7:	mov    WORD PTR [r15],cx
   14001d2fb:	cmp    rsi,rcx
   14001d2fe:	je     0x14001d357
   14001d300:	cmp    rsi,rdi
   14001d303:	jb     0x14001d357
   14001d305:	cmp    r13,rcx
   14001d308:	je     0x14001d32e
   14001d30a:	mov    r9,rsi
   14001d30d:	sub    r9,rdi
   14001d310:	sar    r9,1
   14001d313:	cmp    QWORD PTR [rsp+0xa0],r9
   14001d31b:	jbe    0x14001d391
   14001d31d:	mov    r8,rdi
   14001d320:	or     rdx,0xffffffffffffffff
   14001d324:	mov    rcx,r13
   14001d327:	call   0x14001d580
   14001d32c:	xor    ecx,ecx
   14001d32e:	cmp    r12,rcx
   14001d331:	je     0x14001d38a
   14001d333:	sub    rbx,rsi
   14001d336:	sar    rbx,1
   14001d339:	cmp    QWORD PTR [rsp+0xb0],rbx
   14001d341:	jbe    0x14001d391
   14001d343:	mov    r9,rbx
   14001d346:	mov    r8,rsi
   14001d349:	or     rdx,0xffffffffffffffff
   14001d34d:	mov    rcx,r12
   14001d350:	call   0x14001d580
   14001d355:	jmp    0x14001d38a
   14001d357:	cmp    r13,rcx
   14001d35a:	je     0x14001d380
   14001d35c:	sub    rbx,rdi
   14001d35f:	sar    rbx,1
   14001d362:	cmp    QWORD PTR [rsp+0xa0],rbx
   14001d36a:	jbe    0x14001d391
   14001d36c:	mov    r9,rbx
   14001d36f:	mov    r8,rdi
   14001d372:	or     rdx,0xffffffffffffffff
   14001d376:	mov    rcx,r13
   14001d379:	call   0x14001d580
   14001d37e:	xor    ecx,ecx
   14001d380:	cmp    r12,rcx
   14001d383:	je     0x14001d38a
   14001d385:	mov    WORD PTR [r12],cx
   14001d38a:	xor    eax,eax
   14001d38c:	jmp    0x14001d422
   14001d391:	mov    esi,DWORD PTR [rsp+0x70]
   14001d395:	mov    r9,QWORD PTR [rsp+0x80]
   14001d39d:	cmp    r14,rcx
   14001d3a0:	je     0x14001d3ab
   14001d3a2:	cmp    r9,rcx
   14001d3a5:	jbe    0x14001d3ab
   14001d3a7:	mov    WORD PTR [r14],cx
   14001d3ab:	cmp    r15,rcx
   14001d3ae:	je     0x14001d3be
   14001d3b0:	cmp    QWORD PTR [rsp+0x90],rcx
   14001d3b8:	jbe    0x14001d3be
   14001d3ba:	mov    WORD PTR [r15],cx
   14001d3be:	cmp    r13,rcx
   14001d3c1:	je     0x14001d3d2
   14001d3c3:	cmp    QWORD PTR [rsp+0xa0],rcx
   14001d3cb:	jbe    0x14001d3d2
   14001d3cd:	mov    WORD PTR [r13+0x0],cx
   14001d3d2:	cmp    r12,rcx
   14001d3d5:	je     0x14001d3e6
   14001d3d7:	cmp    QWORD PTR [rsp+0xb0],rcx
   14001d3df:	jbe    0x14001d3e6
   14001d3e1:	mov    WORD PTR [r12],cx
   14001d3e6:	cmp    rdi,rcx
   14001d3e9:	jne    0x14001d410
   14001d3eb:	call   0x140020aa4
   14001d3f0:	and    QWORD PTR [rsp+0x20],0x0
   14001d3f6:	mov    ebx,0x16
   14001d3fb:	xor    r9d,r9d
   14001d3fe:	xor    r8d,r8d
   14001d401:	xor    edx,edx
   14001d403:	xor    ecx,ecx
   14001d405:	mov    DWORD PTR [rax],ebx
   14001d407:	call   0x14001ccf0
   14001d40c:	mov    eax,ebx
   14001d40e:	jmp    0x14001d422
   14001d410:	cmp    esi,ecx
   14001d412:	jne    0x14001d3eb
   14001d414:	call   0x140020aa4
   14001d419:	mov    ecx,0x22
   14001d41e:	mov    DWORD PTR [rax],ecx
   14001d420:	mov    eax,ecx
   14001d422:	mov    rbx,QWORD PTR [rsp+0x78]
   14001d427:	add    rsp,0x30
   14001d42b:	pop    r15
   14001d42d:	pop    r14
   14001d42f:	pop    r13
   14001d431:	pop    r12
   14001d433:	pop    rdi
   14001d434:	pop    rsi
   14001d435:	pop    rbp
   14001d436:	ret    
   14001d437:	int3   
   14001d438:	mov    QWORD PTR [rsp+0x8],rbx
   14001d43d:	mov    QWORD PTR [rsp+0x10],rsi
   14001d442:	push   rdi
   14001d443:	sub    rsp,0x50
   14001d447:	mov    rbx,r8
   14001d44a:	mov    rdi,rdx
   14001d44d:	mov    r8d,0x100
   14001d453:	mov    rsi,rcx
   14001d456:	mov    rcx,QWORD PTR [rsp+0x80]
   14001d45e:	mov    rax,rcx
   14001d461:	neg    rax
   14001d464:	mov    rax,r9
   14001d467:	sbb    r11,r11
   14001d46a:	and    r11,r8
   14001d46d:	neg    rax
   14001d470:	mov    rax,rbx
   14001d473:	sbb    r10,r10
   14001d476:	mov    QWORD PTR [rsp+0x40],r11
   14001d47b:	mov    QWORD PTR [rsp+0x38],rcx
   14001d480:	and    r10,r8
   14001d483:	neg    rax
   14001d486:	mov    rax,rdi
   14001d489:	sbb    rdx,rdx
   14001d48c:	mov    QWORD PTR [rsp+0x30],r10
   14001d491:	mov    QWORD PTR [rsp+0x28],r9
   14001d496:	and    rdx,r8
   14001d499:	neg    rax
   14001d49c:	mov    r9,rbx
   14001d49f:	sbb    r8,r8
   14001d4a2:	mov    QWORD PTR [rsp+0x20],rdx
   14001d4a7:	mov    rdx,rdi
   14001d4aa:	and    r8d,0x3
   14001d4ae:	mov    rcx,rsi
   14001d4b1:	call   0x14001d184
   14001d4b6:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d4bb:	mov    rsi,QWORD PTR [rsp+0x68]
   14001d4c0:	add    rsp,0x50
   14001d4c4:	pop    rdi
   14001d4c5:	ret    
   14001d4c6:	int3   
   14001d4c7:	int3   
   14001d4c8:	sub    rsp,0x28
   14001d4cc:	mov    rcx,QWORD PTR [rip+0x2ef9d]        # 0x14004c470
   14001d4d3:	call   0x140023fc4
   14001d4d8:	test   rax,rax
   14001d4db:	je     0x14001d4df
   14001d4dd:	call   rax
   14001d4df:	mov    ecx,0x19
   14001d4e4:	call   0x1400250d8
   14001d4e9:	mov    edx,0x1
   14001d4ee:	xor    ecx,ecx
   14001d4f0:	call   0x14001df3c
   14001d4f5:	add    rsp,0x28
   14001d4f9:	jmp    0x14001de98
   14001d4fe:	int3   
   14001d4ff:	int3   
   14001d500:	mov    r9,rcx
   14001d503:	xor    r8d,r8d
   14001d506:	movzx  eax,WORD PTR [rcx]
   14001d509:	add    rcx,0x2
   14001d50d:	cmp    ax,r8w
   14001d511:	jne    0x14001d506
   14001d513:	sub    rcx,0x2
   14001d517:	cmp    rcx,r9
   14001d51a:	je     0x14001d521
   14001d51c:	cmp    WORD PTR [rcx],dx
   14001d51f:	jne    0x14001d513
   14001d521:	cmp    WORD PTR [rcx],dx
   14001d524:	cmove  r8,rcx
   14001d528:	mov    rax,r8
   14001d52b:	ret    
   14001d52c:	mov    QWORD PTR [rsp+0x8],rdi
   14001d531:	xor    edi,edi
   14001d533:	mov    r9,rcx
   14001d536:	cmp    r8,rdi
   14001d539:	je     0x14001d56b
   14001d53b:	movzx  eax,WORD PTR [rdx]
   14001d53e:	add    rdx,0x2
   14001d542:	mov    WORD PTR [rcx],ax
   14001d545:	add    rcx,0x2
   14001d549:	cmp    ax,di
   14001d54c:	je     0x14001d554
   14001d54e:	sub    r8,0x1
   14001d552:	jne    0x14001d53b
   14001d554:	cmp    r8,rdi
   14001d557:	je     0x14001d56b
   14001d559:	sub    r8,0x1
   14001d55d:	je     0x14001d56b
   14001d55f:	movzx  eax,di
   14001d562:	mov    rdi,rcx
   14001d565:	mov    rcx,r8
   14001d568:	rep stos WORD PTR es:[rdi],ax
   14001d56b:	mov    rdi,QWORD PTR [rsp+0x8]
   14001d570:	mov    rax,r9
   14001d573:	ret    
   14001d574:	xor    edx,edx
   14001d576:	lea    r8d,[rdx+0xa]
   14001d57a:	jmp    0x140025758
   14001d57f:	int3   
   14001d580:	mov    QWORD PTR [rsp+0x8],rbx
   14001d585:	push   rdi
   14001d586:	sub    rsp,0x30
   14001d58a:	xor    edi,edi
   14001d58c:	mov    r11,r8
   14001d58f:	cmp    r9,rdi
   14001d592:	jne    0x14001d5a2
   14001d594:	cmp    rcx,rdi
   14001d597:	jne    0x14001d5a7
   14001d599:	cmp    rdx,rdi
   14001d59c:	jne    0x14001d5be
   14001d59e:	xor    eax,eax
   14001d5a0:	jmp    0x14001d5e0
   14001d5a2:	cmp    rcx,rdi
   14001d5a5:	je     0x14001d5be
   14001d5a7:	cmp    rdx,rdi
   14001d5aa:	jbe    0x14001d5be
   14001d5ac:	cmp    r9,rdi
   14001d5af:	jne    0x14001d5b6
   14001d5b1:	mov    WORD PTR [rcx],di
   14001d5b4:	jmp    0x14001d59e
   14001d5b6:	cmp    r8,rdi
   14001d5b9:	jne    0x14001d5eb
   14001d5bb:	mov    WORD PTR [rcx],di
   14001d5be:	call   0x140020aa4
   14001d5c3:	mov    ebx,0x16
   14001d5c8:	xor    r9d,r9d
   14001d5cb:	xor    r8d,r8d
   14001d5ce:	xor    edx,edx
   14001d5d0:	xor    ecx,ecx
   14001d5d2:	mov    QWORD PTR [rsp+0x20],rdi
   14001d5d7:	mov    DWORD PTR [rax],ebx
   14001d5d9:	call   0x14001ccf0
   14001d5de:	mov    eax,ebx
   14001d5e0:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d5e5:	add    rsp,0x30
   14001d5e9:	pop    rdi
   14001d5ea:	ret    
   14001d5eb:	mov    r10,rcx
   14001d5ee:	mov    r8,rdx
   14001d5f1:	cmp    r9,0xffffffffffffffff
   14001d5f5:	jne    0x14001d614
   14001d5f7:	movzx  eax,WORD PTR [r11]
   14001d5fb:	add    r11,0x2
   14001d5ff:	mov    WORD PTR [r10],ax
   14001d603:	add    r10,0x2
   14001d607:	cmp    ax,di
   14001d60a:	je     0x14001d63e
   14001d60c:	sub    r8,0x1
   14001d610:	jne    0x14001d5f7
   14001d612:	jmp    0x14001d63e
   14001d614:	movzx  eax,WORD PTR [r11]
   14001d618:	add    r11,0x2
   14001d61c:	mov    WORD PTR [r10],ax
   14001d620:	add    r10,0x2
   14001d624:	cmp    ax,di
   14001d627:	je     0x14001d635
   14001d629:	sub    r8,0x1
   14001d62d:	je     0x14001d635
   14001d62f:	sub    r9,0x1
   14001d633:	jne    0x14001d614
   14001d635:	cmp    r9,rdi
   14001d638:	jne    0x14001d63e
   14001d63a:	mov    WORD PTR [r10],di
   14001d63e:	cmp    r8,rdi
   14001d641:	jne    0x14001d59e
   14001d647:	cmp    r9,0xffffffffffffffff
   14001d64b:	jne    0x14001d658
   14001d64d:	mov    WORD PTR [rcx+rdx*2-0x2],di
   14001d652:	lea    eax,[r9+0x51]
   14001d656:	jmp    0x14001d5e0
   14001d658:	mov    WORD PTR [rcx],di
   14001d65b:	call   0x140020aa4
   14001d660:	mov    ebx,0x22
   14001d665:	jmp    0x14001d5c8
   14001d66a:	int3   
   14001d66b:	int3   
   14001d66c:	mov    QWORD PTR [rsp+0x8],rbx
   14001d671:	mov    QWORD PTR [rsp+0x10],rsi
   14001d676:	push   rdi
   14001d677:	sub    rsp,0x20
   14001d67b:	mov    rbx,rcx
   14001d67e:	cmp    rcx,0xffffffffffffffe0
   14001d682:	ja     0x14001d700
   14001d684:	mov    edi,0x1
   14001d689:	test   rcx,rcx
   14001d68c:	cmovne rdi,rcx
   14001d690:	mov    rcx,QWORD PTR [rip+0x2e9f9]        # 0x14004c090
   14001d697:	test   rcx,rcx
   14001d69a:	jne    0x14001d6bc
   14001d69c:	call   0x140025300
   14001d6a1:	mov    ecx,0x1e
   14001d6a6:	call   0x1400250d8
   14001d6ab:	mov    ecx,0xff
   14001d6b0:	call   0x140024404
   14001d6b5:	mov    rcx,QWORD PTR [rip+0x2e9d4]        # 0x14004c090
   14001d6bc:	mov    r8,rdi
   14001d6bf:	xor    edx,edx
   14001d6c1:	call   QWORD PTR [rip+0x1cbb1]        # 0x14003a278
   14001d6c7:	mov    rsi,rax
   14001d6ca:	test   rax,rax
   14001d6cd:	jne    0x14001d6fb
   14001d6cf:	cmp    DWORD PTR [rip+0x2eda3],eax        # 0x14004c478
   14001d6d5:	je     0x14001d6e5
   14001d6d7:	mov    rcx,rbx
   14001d6da:	call   0x140024314
   14001d6df:	test   eax,eax
   14001d6e1:	je     0x14001d6f0
   14001d6e3:	jmp    0x14001d690
   14001d6e5:	call   0x140020aa4
   14001d6ea:	mov    DWORD PTR [rax],0xc
   14001d6f0:	call   0x140020aa4
   14001d6f5:	mov    DWORD PTR [rax],0xc
   14001d6fb:	mov    rax,rsi
   14001d6fe:	jmp    0x14001d712
   14001d700:	call   0x140024314
   14001d705:	call   0x140020aa4
   14001d70a:	mov    DWORD PTR [rax],0xc
   14001d710:	xor    eax,eax
   14001d712:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d717:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d71c:	add    rsp,0x20
   14001d720:	pop    rdi
   14001d721:	ret    
   14001d722:	int3   
   14001d723:	int3   
   14001d724:	xor    r11d,r11d
   14001d727:	mov    r10,rdx
   14001d72a:	mov    r8,rcx
   14001d72d:	cmp    WORD PTR [rdx],r11w
   14001d731:	jne    0x14001d737
   14001d733:	mov    rax,rcx
   14001d736:	ret    
   14001d737:	movzx  eax,WORD PTR [rcx]
   14001d73a:	cmp    ax,r11w
   14001d73e:	je     0x14001d784
   14001d740:	mov    r9,rcx
   14001d743:	sub    r9,rdx
   14001d746:	mov    rdx,r10
   14001d749:	cmp    ax,r11w
   14001d74d:	je     0x14001d76c
   14001d74f:	cmp    WORD PTR [rdx],r11w
   14001d753:	je     0x14001d787
   14001d755:	movzx  ecx,WORD PTR [r9+rdx*1]
   14001d75a:	movzx  eax,WORD PTR [rdx]
   14001d75d:	cmp    ecx,eax
   14001d75f:	jne    0x14001d76c
   14001d761:	add    rdx,0x2
   14001d765:	cmp    WORD PTR [r9+rdx*1],r11w
   14001d76a:	jne    0x14001d74f
   14001d76c:	cmp    WORD PTR [rdx],r11w
   14001d770:	je     0x14001d787
   14001d772:	add    r8,0x2
   14001d776:	add    r9,0x2
   14001d77a:	mov    ax,WORD PTR [r8]
   14001d77e:	cmp    ax,r11w
   14001d782:	jne    0x14001d746
   14001d784:	xor    eax,eax
   14001d786:	ret    
   14001d787:	mov    rax,r8
   14001d78a:	ret    
   14001d78b:	int3   
   14001d78c:	mov    QWORD PTR [rsp+0x8],rbx
   14001d791:	mov    QWORD PTR [rsp+0x10],rsi
   14001d796:	push   rdi
   14001d797:	sub    rsp,0x30
   14001d79b:	xor    edi,edi
   14001d79d:	mov    rbx,rdx
   14001d7a0:	mov    rsi,rcx
   14001d7a3:	test   rdx,rdx
   14001d7a6:	je     0x14001d7d9
   14001d7a8:	xor    edx,edx
   14001d7aa:	lea    rax,[rdi-0x20]
   14001d7ae:	div    rbx
   14001d7b1:	cmp    rax,r8
   14001d7b4:	jae    0x14001d7d9
   14001d7b6:	call   0x140020aa4
   14001d7bb:	and    QWORD PTR [rsp+0x20],rdi
   14001d7c0:	xor    r9d,r9d
   14001d7c3:	xor    r8d,r8d
   14001d7c6:	xor    edx,edx
   14001d7c8:	xor    ecx,ecx
   14001d7ca:	mov    DWORD PTR [rax],0xc
   14001d7d0:	call   0x14001ccf0
   14001d7d5:	xor    eax,eax
   14001d7d7:	jmp    0x14001d816
   14001d7d9:	imul   rbx,r8
   14001d7dd:	test   rcx,rcx
   14001d7e0:	je     0x14001d7ea
   14001d7e2:	call   0x140024350
   14001d7e7:	mov    rdi,rax
   14001d7ea:	mov    rdx,rbx
   14001d7ed:	mov    rcx,rsi
   14001d7f0:	call   0x140025788
   14001d7f5:	mov    rsi,rax
   14001d7f8:	test   rax,rax
   14001d7fb:	je     0x14001d813
   14001d7fd:	cmp    rdi,rbx
   14001d800:	jae    0x14001d813
   14001d802:	sub    rbx,rdi
   14001d805:	lea    rcx,[rdi+rax*1]
   14001d809:	xor    edx,edx
   14001d80b:	mov    r8,rbx
   14001d80e:	call   0x14001c730
   14001d813:	mov    rax,rsi
   14001d816:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d81b:	mov    rsi,QWORD PTR [rsp+0x48]
   14001d820:	add    rsp,0x30
   14001d824:	pop    rdi
   14001d825:	ret    
   14001d826:	int3   
   14001d827:	int3   
   14001d828:	int3   
   14001d829:	int3   
   14001d82a:	int3   
   14001d82b:	int3   
   14001d82c:	int3   
   14001d82d:	int3   
   14001d82e:	int3   
   14001d82f:	int3   
   14001d830:	int3   
   14001d831:	int3   
   14001d832:	int3   
   14001d833:	int3   
   14001d834:	int3   
   14001d835:	int3   
   14001d836:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001d840:	sub    rdx,rcx
   14001d843:	cmp    r8,0x8
   14001d847:	jb     0x14001d86b
   14001d849:	test   cl,0x7
   14001d84c:	je     0x14001d862
   14001d84e:	xchg   ax,ax
   14001d850:	mov    al,BYTE PTR [rcx]
   14001d852:	cmp    al,BYTE PTR [rdx+rcx*1]
   14001d855:	jne    0x14001d883
   14001d857:	inc    rcx
   14001d85a:	dec    r8
   14001d85d:	test   cl,0x7
   14001d860:	jne    0x14001d850
   14001d862:	mov    r9,r8
   14001d865:	shr    r9,0x3
   14001d869:	jne    0x14001d88a
   14001d86b:	test   r8,r8
   14001d86e:	je     0x14001d87f
   14001d870:	mov    al,BYTE PTR [rcx]
   14001d872:	cmp    al,BYTE PTR [rdx+rcx*1]
   14001d875:	jne    0x14001d883
   14001d877:	inc    rcx
   14001d87a:	dec    r8
   14001d87d:	jne    0x14001d870
   14001d87f:	xor    rax,rax
   14001d882:	ret    
   14001d883:	sbb    eax,eax
   14001d885:	sbb    eax,0xffffffff
   14001d888:	ret    
   14001d889:	nop
   14001d88a:	shr    r9,0x2
   14001d88e:	je     0x14001d8c7
   14001d890:	mov    rax,QWORD PTR [rcx]
   14001d893:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14001d897:	jne    0x14001d8f4
   14001d899:	mov    rax,QWORD PTR [rcx+0x8]
   14001d89d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14001d8a2:	jne    0x14001d8f0
   14001d8a4:	mov    rax,QWORD PTR [rcx+0x10]
   14001d8a8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14001d8ad:	jne    0x14001d8ec
   14001d8af:	mov    rax,QWORD PTR [rcx+0x18]
   14001d8b3:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14001d8b8:	jne    0x14001d8e8
   14001d8ba:	add    rcx,0x20
   14001d8be:	dec    r9
   14001d8c1:	jne    0x14001d890
   14001d8c3:	and    r8,0x1f
   14001d8c7:	mov    r9,r8
   14001d8ca:	shr    r9,0x3
   14001d8ce:	je     0x14001d86b
   14001d8d0:	mov    rax,QWORD PTR [rcx]
   14001d8d3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14001d8d7:	jne    0x14001d8f4
   14001d8d9:	add    rcx,0x8
   14001d8dd:	dec    r9
   14001d8e0:	jne    0x14001d8d0
   14001d8e2:	and    r8,0x7
   14001d8e6:	jmp    0x14001d86b
   14001d8e8:	add    rcx,0x8
   14001d8ec:	add    rcx,0x8
   14001d8f0:	add    rcx,0x8
   14001d8f4:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14001d8f8:	bswap  rax
   14001d8fb:	bswap  rcx
   14001d8fe:	cmp    rax,rcx
   14001d901:	sbb    eax,eax
   14001d903:	sbb    eax,0xffffffff
   14001d906:	ret    
   14001d907:	int3   
   14001d908:	mov    r11,rsp
   14001d90b:	mov    QWORD PTR [r11+0x18],r8
   14001d90f:	mov    QWORD PTR [r11+0x20],r9
   14001d913:	sub    rsp,0x38
   14001d917:	lea    rax,[r11+0x20]
   14001d91b:	xor    r9d,r9d
   14001d91e:	mov    QWORD PTR [r11-0x18],rax
   14001d922:	call   0x14001da50
   14001d927:	add    rsp,0x38
   14001d92b:	ret    
   14001d92c:	mov    QWORD PTR [rsp+0x8],rbx
   14001d931:	mov    QWORD PTR [rsp+0x10],rbp
   14001d936:	mov    QWORD PTR [rsp+0x18],rsi
   14001d93b:	push   rdi
   14001d93c:	sub    rsp,0x60
   14001d940:	xor    ebx,ebx
   14001d942:	mov    r10,r9
   14001d945:	mov    rbp,r8
   14001d948:	mov    rsi,rdx
   14001d94b:	mov    r11,rcx
   14001d94e:	cmp    r9,rbx
   14001d951:	jne    0x14001d97a
   14001d953:	call   0x140020aa4
   14001d958:	xor    r9d,r9d
   14001d95b:	xor    r8d,r8d
   14001d95e:	xor    edx,edx
   14001d960:	xor    ecx,ecx
   14001d962:	mov    QWORD PTR [rsp+0x20],rbx
   14001d967:	mov    DWORD PTR [rax],0x16
   14001d96d:	call   0x14001ccf0
   14001d972:	or     eax,0xffffffff
   14001d975:	jmp    0x14001da39
   14001d97a:	cmp    r8,rbx
   14001d97d:	je     0x14001d984
   14001d97f:	cmp    rdx,rbx
   14001d982:	je     0x14001d953
   14001d984:	mov    DWORD PTR [rsp+0x48],0x42
   14001d98c:	mov    QWORD PTR [rsp+0x40],rdx
   14001d991:	mov    QWORD PTR [rsp+0x30],rdx
   14001d996:	cmp    r8,0x3fffffff
   14001d99d:	jbe    0x14001d9a9
   14001d99f:	mov    DWORD PTR [rsp+0x38],0x7fffffff
   14001d9a7:	jmp    0x14001d9b1
   14001d9a9:	lea    eax,[r8+r8*1]
   14001d9ad:	mov    DWORD PTR [rsp+0x38],eax
   14001d9b1:	mov    r9,QWORD PTR [rsp+0x98]
   14001d9b9:	mov    r8,QWORD PTR [rsp+0x90]
   14001d9c1:	lea    rcx,[rsp+0x30]
   14001d9c6:	mov    rdx,r10
   14001d9c9:	call   r11
   14001d9cc:	mov    edi,eax
   14001d9ce:	cmp    rsi,rbx
   14001d9d1:	je     0x14001da39
   14001d9d3:	cmp    eax,ebx
   14001d9d5:	jl     0x14001da2a
   14001d9d7:	sub    DWORD PTR [rsp+0x38],0x1
   14001d9dc:	js     0x14001d9f4
   14001d9de:	mov    rax,QWORD PTR [rsp+0x30]
   14001d9e3:	mov    BYTE PTR [rax],bl
   14001d9e5:	mov    rax,QWORD PTR [rsp+0x30]
   14001d9ea:	inc    rax
   14001d9ed:	mov    QWORD PTR [rsp+0x30],rax
   14001d9f2:	jmp    0x14001da0a
   14001d9f4:	lea    rdx,[rsp+0x30]
   14001d9f9:	xor    ecx,ecx
   14001d9fb:	call   0x1400258c0
   14001da00:	cmp    eax,0xffffffff
   14001da03:	je     0x14001da2a
   14001da05:	mov    rax,QWORD PTR [rsp+0x30]
   14001da0a:	sub    DWORD PTR [rsp+0x38],0x1
   14001da0f:	js     0x14001da15
   14001da11:	mov    BYTE PTR [rax],bl
   14001da13:	jmp    0x14001da26
   14001da15:	lea    rdx,[rsp+0x30]
   14001da1a:	xor    ecx,ecx
   14001da1c:	call   0x1400258c0
   14001da21:	cmp    eax,0xffffffff
   14001da24:	je     0x14001da2a
   14001da26:	mov    eax,edi
   14001da28:	jmp    0x14001da39
   14001da2a:	cmp    DWORD PTR [rsp+0x38],ebx
   14001da2e:	mov    WORD PTR [rsi+rbp*2-0x2],bx
   14001da33:	setge  bl
   14001da36:	lea    eax,[rbx-0x2]
   14001da39:	lea    r11,[rsp+0x60]
   14001da3e:	mov    rbx,QWORD PTR [r11+0x10]
   14001da42:	mov    rbp,QWORD PTR [r11+0x18]
   14001da46:	mov    rsi,QWORD PTR [r11+0x20]
   14001da4a:	mov    rsp,r11
   14001da4d:	pop    rdi
   14001da4e:	ret    
   14001da4f:	int3   
   14001da50:	mov    QWORD PTR [rsp+0x8],rbx
   14001da55:	push   rdi
   14001da56:	sub    rsp,0x30
   14001da5a:	xor    edi,edi
   14001da5c:	mov    rbx,rcx
   14001da5f:	cmp    r8,rdi
   14001da62:	je     0x14001daab
   14001da64:	cmp    rcx,rdi
   14001da67:	je     0x14001daab
   14001da69:	cmp    rdx,rdi
   14001da6c:	jbe    0x14001daab
   14001da6e:	mov    rax,QWORD PTR [rsp+0x60]
   14001da73:	mov    QWORD PTR [rsp+0x28],rax
   14001da78:	mov    QWORD PTR [rsp+0x20],r9
   14001da7d:	mov    r9,r8
   14001da80:	mov    r8,rdx
   14001da83:	mov    rdx,rcx
   14001da86:	lea    rcx,[rip+0x80d3]        # 0x140025b60
   14001da8d:	call   0x14001d92c
   14001da92:	cmp    eax,edi
   14001da94:	jge    0x14001da99
   14001da96:	mov    WORD PTR [rbx],di
   14001da99:	cmp    eax,0xfffffffe
   14001da9c:	jne    0x14001dacd
   14001da9e:	call   0x140020aa4
   14001daa3:	mov    DWORD PTR [rax],0x22
   14001daa9:	jmp    0x14001dab6
   14001daab:	call   0x140020aa4
   14001dab0:	mov    DWORD PTR [rax],0x16
   14001dab6:	xor    r9d,r9d
   14001dab9:	xor    r8d,r8d
   14001dabc:	xor    edx,edx
   14001dabe:	xor    ecx,ecx
   14001dac0:	mov    QWORD PTR [rsp+0x20],rdi
   14001dac5:	call   0x14001ccf0
   14001daca:	or     eax,0xffffffff
   14001dacd:	mov    rbx,QWORD PTR [rsp+0x40]
   14001dad2:	add    rsp,0x30
   14001dad6:	pop    rdi
   14001dad7:	ret    
   14001dad8:	sub    rsp,0x38
   14001dadc:	mov    QWORD PTR [rsp+0x20],r9
   14001dae1:	xor    r9d,r9d
   14001dae4:	call   0x14001da50
   14001dae9:	add    rsp,0x38
   14001daed:	ret    
   14001daee:	int3   
   14001daef:	int3   
   14001daf0:	mov    r8,rcx
   14001daf3:	movzx  eax,WORD PTR [rdx]
   14001daf6:	add    rdx,0x2
   14001dafa:	mov    WORD PTR [r8],ax
   14001dafe:	add    r8,0x2
   14001db02:	test   ax,ax
   14001db05:	jne    0x14001daf3
   14001db07:	mov    rax,rcx
   14001db0a:	ret    
   14001db0b:	int3   
   14001db0c:	mov    QWORD PTR [rsp+0x10],rbx
   14001db11:	push   rdi
   14001db12:	sub    rsp,0xa0
   14001db19:	lea    rcx,[rsp+0x30]
   14001db1e:	call   QWORD PTR [rip+0x1c75c]        # 0x14003a280
   14001db24:	nop
   14001db25:	mov    eax,0x5a4d
   14001db2a:	cmp    WORD PTR [rip+0xfffffffffffe24cf],ax        # 0x140000000
   14001db31:	jne    0x14001db95
   14001db33:	movsxd rax,DWORD PTR [rip+0xfffffffffffe2502]        # 0x14000003c
   14001db3a:	lea    rdi,[rip+0xfffffffffffe24bf]        # 0x140000000
   14001db41:	add    rax,rdi
   14001db44:	cmp    DWORD PTR [rax],0x4550
   14001db4a:	je     0x14001db57
   14001db4c:	xor    ebx,ebx
   14001db4e:	mov    DWORD PTR [rsp+0xb0],ebx
   14001db55:	jmp    0x14001dba5
   14001db57:	mov    ecx,0x20b
   14001db5c:	cmp    WORD PTR [rax+0x18],cx
   14001db60:	je     0x14001db6d
   14001db62:	xor    ebx,ebx
   14001db64:	mov    DWORD PTR [rsp+0xb0],ebx
   14001db6b:	jmp    0x14001dba5
   14001db6d:	cmp    DWORD PTR [rax+0x84],0xe
   14001db74:	ja     0x14001db81
   14001db76:	xor    ebx,ebx
   14001db78:	mov    DWORD PTR [rsp+0xb0],ebx
   14001db7f:	jmp    0x14001dba5
   14001db81:	xor    ebx,ebx
   14001db83:	cmp    DWORD PTR [rax+0xf8],ebx
   14001db89:	setne  bl
   14001db8c:	mov    DWORD PTR [rsp+0xb0],ebx
   14001db93:	jmp    0x14001dba5
   14001db95:	xor    ebx,ebx
   14001db97:	mov    DWORD PTR [rsp+0xb0],ebx
   14001db9e:	lea    rdi,[rip+0xfffffffffffe245b]        # 0x140000000
   14001dba5:	mov    ecx,0x1
   14001dbaa:	call   0x140023e28
   14001dbaf:	test   eax,eax
   14001dbb1:	jne    0x14001dbd5
   14001dbb3:	cmp    DWORD PTR [rip+0x2df46],0x1        # 0x14004bb00
   14001dbba:	jne    0x14001dbc1
   14001dbbc:	call   0x140025300
   14001dbc1:	mov    ecx,0x1c
   14001dbc6:	call   0x1400250d8
   14001dbcb:	mov    ecx,0xff
   14001dbd0:	call   0x140024404
   14001dbd5:	call   0x140024288
   14001dbda:	test   eax,eax
   14001dbdc:	jne    0x14001dc00
   14001dbde:	cmp    DWORD PTR [rip+0x2df1b],0x1        # 0x14004bb00
   14001dbe5:	jne    0x14001dbec
   14001dbe7:	call   0x140025300
   14001dbec:	mov    ecx,0x10
   14001dbf1:	call   0x1400250d8
   14001dbf6:	mov    ecx,0xff
   14001dbfb:	call   0x140024404
   14001dc00:	call   0x1400270cc
   14001dc05:	nop
   14001dc06:	call   0x140026ddc
   14001dc0b:	test   eax,eax
   14001dc0d:	jns    0x14001dc19
   14001dc0f:	mov    ecx,0x1b
   14001dc14:	call   0x140024398
   14001dc19:	call   0x140026dd4
   14001dc1e:	mov    QWORD PTR [rip+0x30943],rax        # 0x14004e568
   14001dc25:	call   0x140026d48
   14001dc2a:	mov    QWORD PTR [rip+0x2dec7],rax        # 0x14004baf8
   14001dc31:	call   0x140026c58
   14001dc36:	test   eax,eax
   14001dc38:	jns    0x14001dc44
   14001dc3a:	mov    ecx,0x8
   14001dc3f:	call   0x140024398
   14001dc44:	call   0x140026988
   14001dc49:	test   eax,eax
   14001dc4b:	jns    0x14001dc57
   14001dc4d:	mov    ecx,0x9
   14001dc52:	call   0x140024398
   14001dc57:	mov    ecx,0x1
   14001dc5c:	call   0x1400244a4
   14001dc61:	test   eax,eax
   14001dc63:	je     0x14001dc6c
   14001dc65:	mov    ecx,eax
   14001dc67:	call   0x140024398
   14001dc6c:	call   0x14002692c
   14001dc71:	test   BYTE PTR [rsp+0x6c],0x1
   14001dc76:	movzx  edx,WORD PTR [rsp+0x70]
   14001dc7b:	mov    r9d,0xa
   14001dc81:	cmovne r9d,edx
   14001dc85:	mov    r8,rax
   14001dc88:	xor    edx,edx
   14001dc8a:	mov    rcx,rdi
   14001dc8d:	call   0x1400361b0
   14001dc92:	mov    edi,eax
   14001dc94:	mov    DWORD PTR [rsp+0x20],eax
   14001dc98:	test   ebx,ebx
   14001dc9a:	jne    0x14001dca3
   14001dc9c:	mov    ecx,eax
   14001dc9e:	call   0x1400246e0
   14001dca3:	call   0x1400246f8
   14001dca8:	jmp    0x14001dcc4
   14001dcaa:	mov    edi,eax
   14001dcac:	cmp    DWORD PTR [rsp+0xb0],0x0
   14001dcb4:	jne    0x14001dcbe
   14001dcb6:	mov    ecx,eax
   14001dcb8:	call   0x1400246ec
   14001dcbd:	int3   
   14001dcbe:	call   0x140024708
   14001dcc3:	nop
   14001dcc4:	mov    eax,edi
   14001dcc6:	jmp    0x14001dccd
   14001dcc8:	mov    eax,0xff
   14001dccd:	mov    rbx,QWORD PTR [rsp+0xb8]
   14001dcd5:	add    rsp,0xa0
   14001dcdc:	pop    rdi
   14001dcdd:	ret    
   14001dcde:	int3   
   14001dcdf:	int3   
   14001dce0:	sub    rsp,0x28
   14001dce4:	call   0x14002713c
   14001dce9:	add    rsp,0x28
   14001dced:	jmp    0x14001db0c
   14001dcf2:	int3   
   14001dcf3:	int3   
   14001dcf4:	mov    rax,rsp
   14001dcf7:	mov    QWORD PTR [rax+0x8],rbx
   14001dcfb:	mov    QWORD PTR [rax+0x18],rbp
   14001dcff:	mov    QWORD PTR [rax+0x20],rsi
   14001dd03:	mov    QWORD PTR [rax+0x10],rdx
   14001dd07:	push   rdi
   14001dd08:	push   r12
   14001dd0a:	push   r13
   14001dd0c:	push   r14
   14001dd0e:	push   r15
   14001dd10:	sub    rsp,0x40
   14001dd14:	mov    r15,QWORD PTR [r9+0x8]
   14001dd18:	mov    r12,QWORD PTR [r9]
   14001dd1b:	mov    rsi,QWORD PTR [r9+0x38]
   14001dd1f:	sub    r12,r15
   14001dd22:	test   BYTE PTR [rcx+0x4],0x66
   14001dd26:	mov    r14,r9
   14001dd29:	mov    rbp,rdx
   14001dd2c:	mov    r13,rcx
   14001dd2f:	jne    0x14001de11
   14001dd35:	xor    edi,edi
   14001dd37:	mov    QWORD PTR [rax-0x38],rcx
   14001dd3b:	mov    QWORD PTR [rax-0x30],r8
   14001dd3f:	cmp    DWORD PTR [rsi],edi
   14001dd41:	jbe    0x14001de72
   14001dd47:	lea    rbx,[rsi+0xc]
   14001dd4b:	mov    eax,DWORD PTR [rbx-0x8]
   14001dd4e:	cmp    r12,rax
   14001dd51:	jb     0x14001ddfe
   14001dd57:	mov    eax,DWORD PTR [rbx-0x4]
   14001dd5a:	cmp    r12,rax
   14001dd5d:	jae    0x14001ddfe
   14001dd63:	cmp    DWORD PTR [rbx+0x4],0x0
   14001dd67:	je     0x14001ddfe
   14001dd6d:	cmp    DWORD PTR [rbx],0x1
   14001dd70:	je     0x14001dd8b
   14001dd72:	mov    eax,DWORD PTR [rbx]
   14001dd74:	lea    rcx,[rsp+0x30]
   14001dd79:	mov    rdx,rbp
   14001dd7c:	add    rax,r15
   14001dd7f:	call   rax
   14001dd81:	test   eax,eax
   14001dd83:	js     0x14001de0d
   14001dd89:	jle    0x14001ddfe
   14001dd8b:	cmp    DWORD PTR [r13+0x0],0xe06d7363
   14001dd93:	jne    0x14001ddbd
   14001dd95:	cmp    QWORD PTR [rip+0x1d953],0x0        # 0x14003b6f0
   14001dd9d:	je     0x14001ddbd
   14001dd9f:	lea    rcx,[rip+0x1d94a]        # 0x14003b6f0
   14001dda6:	call   0x1400272f0
   14001ddab:	test   eax,eax
   14001ddad:	je     0x14001ddbd
   14001ddaf:	mov    edx,0x1
   14001ddb4:	mov    rcx,r13
   14001ddb7:	call   QWORD PTR [rip+0x1d933]        # 0x14003b6f0
   14001ddbd:	mov    ecx,DWORD PTR [rbx+0x4]
   14001ddc0:	mov    r8d,0x1
   14001ddc6:	mov    rdx,rbp
   14001ddc9:	add    rcx,r15
   14001ddcc:	call   0x140027230
   14001ddd1:	mov    rax,QWORD PTR [r14+0x40]
   14001ddd5:	mov    edx,DWORD PTR [rbx+0x4]
   14001ddd8:	movsxd r9,DWORD PTR [r13+0x0]
   14001dddc:	mov    QWORD PTR [rsp+0x28],rax
   14001dde1:	mov    rax,QWORD PTR [r14+0x28]
   14001dde5:	add    rdx,r15
   14001dde8:	mov    r8,r13
   14001ddeb:	mov    rcx,rbp
   14001ddee:	mov    QWORD PTR [rsp+0x20],rax
   14001ddf3:	call   QWORD PTR [rip+0x1c48f]        # 0x14003a288
   14001ddf9:	call   0x140027260
   14001ddfe:	inc    edi
   14001de00:	add    rbx,0x10
   14001de04:	cmp    edi,DWORD PTR [rsi]
   14001de06:	jae    0x14001de72
   14001de08:	jmp    0x14001dd4b
   14001de0d:	xor    eax,eax
   14001de0f:	jmp    0x14001de77
   14001de11:	mov    rdi,QWORD PTR [r9+0x20]
   14001de15:	xor    ebp,ebp
   14001de17:	sub    rdi,r15
   14001de1a:	cmp    DWORD PTR [rsi],ebp
   14001de1c:	jbe    0x14001de72
   14001de1e:	lea    rbx,[rsi+0x10]
   14001de22:	mov    ecx,DWORD PTR [rbx-0xc]
   14001de25:	cmp    r12,rcx
   14001de28:	jb     0x14001de68
   14001de2a:	mov    eax,DWORD PTR [rbx-0x8]
   14001de2d:	cmp    r12,rax
   14001de30:	jae    0x14001de68
   14001de32:	cmp    rdi,rcx
   14001de35:	jb     0x14001de43
   14001de37:	cmp    rdi,rax
   14001de3a:	jae    0x14001de43
   14001de3c:	test   BYTE PTR [r13+0x4],0x20
   14001de41:	jne    0x14001de72
   14001de43:	cmp    DWORD PTR [rbx],0x0
   14001de46:	je     0x14001de51
   14001de48:	mov    eax,DWORD PTR [rbx]
   14001de4a:	cmp    rdi,rax
   14001de4d:	je     0x14001de72
   14001de4f:	jmp    0x14001de68
   14001de51:	mov    rdx,QWORD PTR [rsp+0x78]
   14001de56:	add    rax,r15
   14001de59:	mov    cl,0x1
   14001de5b:	mov    QWORD PTR [r14],rax
   14001de5e:	mov    r8d,DWORD PTR [rbx-0x4]
   14001de62:	add    r8,r15
   14001de65:	call   r8
   14001de68:	inc    ebp
   14001de6a:	add    rbx,0x10
   14001de6e:	cmp    ebp,DWORD PTR [rsi]
   14001de70:	jb     0x14001de22
   14001de72:	mov    eax,0x1
   14001de77:	lea    r11,[rsp+0x40]
   14001de7c:	mov    rbx,QWORD PTR [r11+0x30]
   14001de80:	mov    rbp,QWORD PTR [r11+0x40]
   14001de84:	mov    rsi,QWORD PTR [r11+0x48]
   14001de88:	mov    rsp,r11
   14001de8b:	pop    r15
   14001de8d:	pop    r14
   14001de8f:	pop    r13
   14001de91:	pop    r12
   14001de93:	pop    rdi
   14001de94:	ret    
   14001de95:	int3   
   14001de96:	int3   
   14001de97:	int3   
   14001de98:	sub    rsp,0x5a8
   14001de9f:	test   BYTE PTR [rip+0x2b42e],0x1        # 0x1400492d4
   14001dea6:	je     0x14001deb2
   14001dea8:	mov    ecx,0xa
   14001dead:	call   0x1400250d8
   14001deb2:	call   0x140027354
   14001deb7:	test   rax,rax
   14001deba:	je     0x14001dec6
   14001debc:	mov    ecx,0x16
   14001dec1:	call   0x140027360
   14001dec6:	test   BYTE PTR [rip+0x2b407],0x2        # 0x1400492d4
   14001decd:	je     0x14001df2e
   14001decf:	lea    rcx,[rsp+0xd0]
   14001ded7:	call   QWORD PTR [rip+0x1c393]        # 0x14003a270
   14001dedd:	lea    rcx,[rsp+0x30]
   14001dee2:	xor    edx,edx
   14001dee4:	mov    r8d,0x98
   14001deea:	call   0x14001c730
   14001deef:	mov    rax,QWORD PTR [rsp+0x5a8]
   14001def7:	xor    ecx,ecx
   14001def9:	mov    QWORD PTR [rsp+0x40],rax
   14001defe:	lea    rax,[rsp+0x30]
   14001df03:	mov    DWORD PTR [rsp+0x30],0x40000015
   14001df0b:	mov    QWORD PTR [rsp+0x20],rax
   14001df10:	lea    rax,[rsp+0xd0]
   14001df18:	mov    QWORD PTR [rsp+0x28],rax
   14001df1d:	call   QWORD PTR [rip+0x1c32d]        # 0x14003a250
   14001df23:	lea    rcx,[rsp+0x20]
   14001df28:	call   QWORD PTR [rip+0x1c31a]        # 0x14003a248
   14001df2e:	mov    ecx,0x3
   14001df33:	call   0x1400246ec
   14001df38:	int3   
   14001df39:	int3   
   14001df3a:	int3   
   14001df3b:	int3   
   14001df3c:	mov    eax,DWORD PTR [rip+0x2b392]        # 0x1400492d4
   14001df42:	mov    r8d,edx
   14001df45:	and    ecx,edx
   14001df47:	not    r8d
   14001df4a:	and    r8d,eax
   14001df4d:	or     r8d,ecx
   14001df50:	mov    DWORD PTR [rip+0x2b37d],r8d        # 0x1400492d4
   14001df57:	ret    
   14001df58:	mov    QWORD PTR [rsp+0x10],rbx
   14001df5d:	mov    QWORD PTR [rsp+0x18],rbp
   14001df62:	mov    QWORD PTR [rsp+0x20],rsi
   14001df67:	push   rdi
   14001df68:	push   r12
   14001df6a:	push   r13
   14001df6c:	push   r14
   14001df6e:	push   r15
   14001df70:	sub    rsp,0x20
   14001df74:	movsxd rdi,DWORD PTR [r8+0xc]
   14001df78:	mov    r15,rcx
   14001df7b:	mov    rcx,r8
   14001df7e:	mov    rbp,r9
   14001df81:	mov    r13,r8
   14001df84:	mov    r14,rdx
   14001df87:	call   0x140027660
   14001df8c:	mov    r10,QWORD PTR [r15]
   14001df8f:	mov    QWORD PTR [rbp+0x0],r10
   14001df93:	mov    r12d,eax
   14001df96:	test   edi,edi
   14001df98:	je     0x14001e023
   14001df9e:	lea    rcx,[rdi+rdi*4]
   14001dfa2:	lea    rsi,[rcx*4-0x14]
   14001dfaa:	movsxd rbx,DWORD PTR [r13+0x10]
   14001dfae:	add    rbx,QWORD PTR [r14+0x8]
   14001dfb2:	add    rbx,rsi
   14001dfb5:	cmp    r12d,DWORD PTR [rbx+0x4]
   14001dfb9:	jle    0x14001e004
   14001dfbb:	cmp    r12d,DWORD PTR [rbx+0x8]
   14001dfbf:	jg     0x14001e004
   14001dfc1:	mov    rcx,QWORD PTR [r14]
   14001dfc4:	lea    rdx,[rsp+0x50]
   14001dfc9:	xor    r8d,r8d
   14001dfcc:	call   0x140030e46
   14001dfd1:	movsxd r8,DWORD PTR [rbx+0x10]
   14001dfd5:	mov    r9d,DWORD PTR [rbx+0xc]
   14001dfd9:	add    r8,QWORD PTR [rsp+0x50]
   14001dfde:	mov    r10d,DWORD PTR [rax]
   14001dfe1:	xor    ecx,ecx
   14001dfe3:	test   r9d,r9d
   14001dfe6:	je     0x14001dfff
   14001dfe8:	lea    rdx,[r8+0xc]
   14001dfec:	movsxd rax,DWORD PTR [rdx]
   14001dfef:	cmp    rax,r10
   14001dff2:	je     0x14001dfff
   14001dff4:	inc    ecx
   14001dff6:	add    rdx,0x14
   14001dffa:	cmp    ecx,r9d
   14001dffd:	jb     0x14001dfec
   14001dfff:	cmp    ecx,r9d
   14001e002:	jb     0x14001e00f
   14001e004:	sub    rsi,0x14
   14001e008:	add    edi,0xffffffff
   14001e00b:	je     0x14001e023
   14001e00d:	jmp    0x14001dfaa
   14001e00f:	mov    rax,QWORD PTR [r15]
   14001e012:	lea    rcx,[rcx+rcx*4]
   14001e016:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   14001e01b:	mov    rcx,QWORD PTR [rcx+rax*1]
   14001e01f:	mov    QWORD PTR [rbp+0x0],rcx
   14001e023:	mov    rbx,QWORD PTR [rsp+0x58]
   14001e028:	mov    rsi,QWORD PTR [rsp+0x68]
   14001e02d:	mov    rax,rbp
   14001e030:	mov    rbp,QWORD PTR [rsp+0x60]
   14001e035:	add    rsp,0x20
   14001e039:	pop    r15
   14001e03b:	pop    r14
   14001e03d:	pop    r13
   14001e03f:	pop    r12
   14001e041:	pop    rdi
   14001e042:	ret    
   14001e043:	int3   
   14001e044:	sub    rsp,0x28
   14001e048:	call   0x14002412c
   14001e04d:	mov    rax,QWORD PTR [rax+0x128]
   14001e054:	add    rsp,0x28
   14001e058:	ret    
   14001e059:	int3   
   14001e05a:	int3   
   14001e05b:	int3   
   14001e05c:	sub    rsp,0x28
   14001e060:	call   0x14002412c
   14001e065:	mov    rax,QWORD PTR [rax+0x130]
   14001e06c:	add    rsp,0x28
   14001e070:	ret    
   14001e071:	int3   
   14001e072:	int3   
   14001e073:	int3   
   14001e074:	rex push rbx
   14001e076:	sub    rsp,0x20
   14001e07a:	mov    rbx,rcx
   14001e07d:	call   0x14002412c
   14001e082:	mov    QWORD PTR [rax+0x128],rbx
   14001e089:	add    rsp,0x20
   14001e08d:	pop    rbx
   14001e08e:	ret    
   14001e08f:	int3   
   14001e090:	rex push rbx
   14001e092:	sub    rsp,0x20
   14001e096:	mov    rbx,rcx
   14001e099:	call   0x14002412c
   14001e09e:	mov    QWORD PTR [rax+0x130],rbx
   14001e0a5:	add    rsp,0x20
   14001e0a9:	pop    rbx
   14001e0aa:	ret    
   14001e0ab:	int3   
   14001e0ac:	mov    rax,rsp
   14001e0af:	mov    QWORD PTR [rax+0x8],rbx
   14001e0b3:	mov    QWORD PTR [rax+0x10],rbp
   14001e0b7:	mov    QWORD PTR [rax+0x20],rsi
   14001e0bb:	push   rdi
   14001e0bc:	push   r12
   14001e0be:	push   r13
   14001e0c0:	sub    rsp,0x20
   14001e0c4:	lea    r9,[rax+0x18]
   14001e0c8:	mov    rbp,r8
   14001e0cb:	mov    r12,rdx
   14001e0ce:	call   0x14001df58
   14001e0d3:	mov    rdx,r12
   14001e0d6:	mov    rcx,rbp
   14001e0d9:	mov    r13,rax
   14001e0dc:	call   0x140027660
   14001e0e1:	movsxd rdi,DWORD PTR [rbp+0xc]
   14001e0e5:	mov    esi,eax
   14001e0e7:	test   edi,edi
   14001e0e9:	je     0x14001e120
   14001e0eb:	lea    rcx,[rdi+rdi*4]
   14001e0ef:	lea    rbx,[rcx*4-0x14]
   14001e0f7:	call   0x14002412c
   14001e0fc:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001e100:	mov    rdx,QWORD PTR [rax+0x128]
   14001e107:	add    rdx,rcx
   14001e10a:	add    rdx,rbx
   14001e10d:	cmp    esi,DWORD PTR [rdx+0x4]
   14001e110:	jle    0x14001e117
   14001e112:	cmp    esi,DWORD PTR [rdx+0x8]
   14001e115:	jle    0x14001e122
   14001e117:	sub    rbx,0x14
   14001e11b:	add    edi,0xffffffff
   14001e11e:	jne    0x14001e0f7
   14001e120:	xor    edx,edx
   14001e122:	test   rdx,rdx
   14001e125:	jne    0x14001e12d
   14001e127:	or     r9d,0xffffffff
   14001e12b:	jmp    0x14001e131
   14001e12d:	mov    r9d,DWORD PTR [rdx+0x4]
   14001e131:	mov    r8,rbp
   14001e134:	mov    rdx,r12
   14001e137:	mov    rcx,r13
   14001e13a:	call   0x1400210bc
   14001e13f:	mov    rbx,QWORD PTR [rsp+0x40]
   14001e144:	mov    rbp,QWORD PTR [rsp+0x48]
   14001e149:	mov    rsi,QWORD PTR [rsp+0x58]
   14001e14e:	add    rsp,0x20
   14001e152:	pop    r13
   14001e154:	pop    r12
   14001e156:	pop    rdi
   14001e157:	ret    
   14001e158:	mov    QWORD PTR [rsp+0x10],rbx
   14001e15d:	mov    QWORD PTR [rsp+0x18],rsi
   14001e162:	push   rdi
   14001e163:	sub    rsp,0x40
   14001e167:	mov    rbx,r9
   14001e16a:	mov    rdi,r8
   14001e16d:	mov    rsi,rcx
   14001e170:	mov    QWORD PTR [rsp+0x50],rdx
   14001e175:	call   0x14002412c
   14001e17a:	mov    rdx,QWORD PTR [rbx+0x8]
   14001e17e:	mov    QWORD PTR [rax+0x128],rdx
   14001e185:	call   0x14002412c
   14001e18a:	mov    rdx,QWORD PTR [rsi+0x38]
   14001e18e:	mov    QWORD PTR [rax+0x130],rdx
   14001e195:	call   0x14002412c
   14001e19a:	mov    rdx,QWORD PTR [rbx+0x38]
   14001e19e:	mov    r8d,DWORD PTR [rdx]
   14001e1a1:	lea    rdx,[rsp+0x50]
   14001e1a6:	mov    r9,rbx
   14001e1a9:	add    r8,QWORD PTR [rax+0x128]
   14001e1b0:	xor    eax,eax
   14001e1b2:	mov    rcx,rsi
   14001e1b5:	mov    DWORD PTR [rsp+0x38],eax
   14001e1b9:	mov    QWORD PTR [rsp+0x30],rax
   14001e1be:	mov    DWORD PTR [rsp+0x28],eax
   14001e1c2:	mov    QWORD PTR [rsp+0x20],r8
   14001e1c7:	mov    r8,rdi
   14001e1ca:	call   0x140022134
   14001e1cf:	mov    rbx,QWORD PTR [rsp+0x58]
   14001e1d4:	mov    rsi,QWORD PTR [rsp+0x60]
   14001e1d9:	add    rsp,0x40
   14001e1dd:	pop    rdi
   14001e1de:	ret    
   14001e1df:	int3   
   14001e1e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e1e5:	mov    QWORD PTR [rsp+0x10],rbp
   14001e1ea:	mov    QWORD PTR [rsp+0x18],rsi
   14001e1ef:	push   rdi
   14001e1f0:	sub    rsp,0x40
   14001e1f4:	mov    rsi,r9
   14001e1f7:	mov    rbp,r8
   14001e1fa:	mov    rbx,rdx
   14001e1fd:	mov    rdi,rcx
   14001e200:	call   0x14002412c
   14001e205:	mov    QWORD PTR [rax+0x138],rbx
   14001e20c:	mov    rbx,QWORD PTR [rdi]
   14001e20f:	call   0x14002412c
   14001e214:	mov    rdx,QWORD PTR [rbx+0x38]
   14001e218:	mov    rcx,QWORD PTR [rsp+0x78]
   14001e21d:	mov    r9,QWORD PTR [rsp+0x70]
   14001e222:	mov    DWORD PTR [rsp+0x38],0x1
   14001e22a:	mov    QWORD PTR [rax+0x130],rdx
   14001e231:	xor    ebx,ebx
   14001e233:	mov    QWORD PTR [rsp+0x30],rbx
   14001e238:	mov    DWORD PTR [rsp+0x28],ebx
   14001e23c:	mov    QWORD PTR [rsp+0x20],rcx
   14001e241:	mov    rcx,QWORD PTR [rdi]
   14001e244:	mov    r8,rsi
   14001e247:	mov    rdx,rbp
   14001e24a:	call   0x140022134
   14001e24f:	call   0x14002412c
   14001e254:	mov    rcx,QWORD PTR [rsp+0x80]
   14001e25c:	mov    rbp,QWORD PTR [rsp+0x58]
   14001e261:	mov    rsi,QWORD PTR [rsp+0x60]
   14001e266:	mov    QWORD PTR [rax+0x138],rbx
   14001e26d:	lea    eax,[rbx+0x1]
   14001e270:	mov    rbx,QWORD PTR [rsp+0x50]
   14001e275:	mov    DWORD PTR [rcx],0x1
   14001e27b:	add    rsp,0x40
   14001e27f:	pop    rdi
   14001e280:	ret    
   14001e281:	int3   
   14001e282:	int3   
   14001e283:	int3   
   14001e284:	mov    rax,rsp
   14001e287:	mov    QWORD PTR [rax+0x20],r9
   14001e28b:	mov    QWORD PTR [rax+0x18],r8
   14001e28f:	mov    QWORD PTR [rax+0x10],rdx
   14001e293:	mov    QWORD PTR [rax+0x8],rcx
   14001e297:	push   rbx
   14001e298:	sub    rsp,0x60
   14001e29c:	mov    rbx,rcx
   14001e29f:	and    DWORD PTR [rax-0x28],0x0
   14001e2a3:	mov    QWORD PTR [rax-0x20],rcx
   14001e2a7:	mov    QWORD PTR [rax-0x18],r8
   14001e2ab:	call   0x14002412c
   14001e2b0:	mov    r8,QWORD PTR [rax+0xe0]
   14001e2b7:	lea    rdx,[rsp+0x48]
   14001e2bc:	mov    ecx,DWORD PTR [rbx]
   14001e2be:	call   r8
   14001e2c1:	mov    DWORD PTR [rsp+0x40],0x0
   14001e2c9:	jmp    0x14001e2cb
   14001e2cb:	mov    eax,DWORD PTR [rsp+0x40]
   14001e2cf:	add    rsp,0x60
   14001e2d3:	pop    rbx
   14001e2d4:	ret    
   14001e2d5:	int3   
   14001e2d6:	int3   
   14001e2d7:	int3   
   14001e2d8:	mov    QWORD PTR [rsp+0x8],rbx
   14001e2dd:	mov    QWORD PTR [rsp+0x10],rbp
   14001e2e2:	mov    QWORD PTR [rsp+0x18],rsi
   14001e2e7:	push   rdi
   14001e2e8:	push   r12
   14001e2ea:	push   r13
   14001e2ec:	sub    rsp,0x20
   14001e2f0:	movsxd rbx,DWORD PTR [rdx+0xc]
   14001e2f4:	mov    r12,QWORD PTR [rsp+0x70]
   14001e2f9:	mov    rsi,rdx
   14001e2fc:	mov    rcx,rsi
   14001e2ff:	mov    rdx,r12
   14001e302:	mov    r13d,r9d
   14001e305:	xor    ebp,ebp
   14001e307:	call   0x140027660
   14001e30c:	mov    edi,eax
   14001e30e:	test   ebx,ebx
   14001e310:	jne    0x14001e317
   14001e312:	call   0x140025880
   14001e317:	mov    r10,QWORD PTR [rsp+0x68]
   14001e31c:	mov    r8,QWORD PTR [rsp+0x60]
   14001e321:	or     r11d,0xffffffff
   14001e325:	mov    DWORD PTR [r10],r11d
   14001e328:	mov    edx,ebx
   14001e32a:	mov    DWORD PTR [r8],r11d
   14001e32d:	test   ebx,ebx
   14001e32f:	je     0x14001e35b
   14001e331:	movsxd rcx,DWORD PTR [rsi+0x10]
   14001e335:	lea    rax,[rbx+rbx*4]
   14001e339:	lea    rcx,[rcx+rax*4]
   14001e33d:	mov    rax,QWORD PTR [r12+0x8]
   14001e342:	lea    r9,[rcx+rax*1-0xc]
   14001e347:	cmp    edi,DWORD PTR [r9-0x4]
   14001e34b:	jle    0x14001e352
   14001e34d:	cmp    edi,DWORD PTR [r9]
   14001e350:	jle    0x14001e35b
   14001e352:	sub    r9,0x14
   14001e356:	add    edx,r11d
   14001e359:	jne    0x14001e347
   14001e35b:	test   edx,edx
   14001e35d:	je     0x14001e373
   14001e35f:	lea    eax,[rdx-0x1]
   14001e362:	lea    rdx,[rax+rax*4]
   14001e366:	movsxd rax,DWORD PTR [rsi+0x10]
   14001e36a:	lea    rbp,[rax+rdx*4]
   14001e36e:	add    rbp,QWORD PTR [r12+0x8]
   14001e373:	xor    edx,edx
   14001e375:	test   ebx,ebx
   14001e377:	je     0x14001e3da
   14001e379:	xor    r9d,r9d
   14001e37c:	movsxd rcx,DWORD PTR [rsi+0x10]
   14001e380:	add    rcx,QWORD PTR [r12+0x8]
   14001e385:	add    rcx,r9
   14001e388:	test   rbp,rbp
   14001e38b:	je     0x14001e39c
   14001e38d:	mov    eax,DWORD PTR [rbp+0x4]
   14001e390:	cmp    DWORD PTR [rcx],eax
   14001e392:	jle    0x14001e3b5
   14001e394:	mov    eax,DWORD PTR [rbp+0x8]
   14001e397:	cmp    DWORD PTR [rcx+0x4],eax
   14001e39a:	jg     0x14001e3b5
   14001e39c:	cmp    r13d,DWORD PTR [rcx]
   14001e39f:	jl     0x14001e3b5
   14001e3a1:	cmp    r13d,DWORD PTR [rcx+0x4]
   14001e3a5:	jg     0x14001e3b5
   14001e3a7:	cmp    DWORD PTR [r8],r11d
   14001e3aa:	jne    0x14001e3af
   14001e3ac:	mov    DWORD PTR [r8],edx
   14001e3af:	lea    eax,[rdx+0x1]
   14001e3b2:	mov    DWORD PTR [r10],eax
   14001e3b5:	inc    edx
   14001e3b7:	add    r9,0x14
   14001e3bb:	cmp    edx,ebx
   14001e3bd:	jb     0x14001e37c
   14001e3bf:	cmp    DWORD PTR [r8],r11d
   14001e3c2:	je     0x14001e3da
   14001e3c4:	mov    eax,DWORD PTR [r8]
   14001e3c7:	lea    rcx,[rax+rax*4]
   14001e3cb:	movsxd rax,DWORD PTR [rsi+0x10]
   14001e3cf:	lea    rax,[rax+rcx*4]
   14001e3d3:	add    rax,QWORD PTR [r12+0x8]
   14001e3d8:	jmp    0x14001e3e4
   14001e3da:	and    DWORD PTR [r8],0x0
   14001e3de:	and    DWORD PTR [r10],0x0
   14001e3e2:	xor    eax,eax
   14001e3e4:	mov    rbx,QWORD PTR [rsp+0x40]
   14001e3e9:	mov    rbp,QWORD PTR [rsp+0x48]
   14001e3ee:	mov    rsi,QWORD PTR [rsp+0x50]
   14001e3f3:	add    rsp,0x20
   14001e3f7:	pop    r13
   14001e3f9:	pop    r12
   14001e3fb:	pop    rdi
   14001e3fc:	ret    
   14001e3fd:	int3   
   14001e3fe:	int3   
   14001e3ff:	int3   
   14001e400:	rex push rbx
   14001e402:	sub    rsp,0x20
   14001e406:	mov    rbx,rcx
   14001e409:	mov    QWORD PTR [rcx],rdx
   14001e40c:	call   0x14002412c
   14001e411:	cmp    rbx,QWORD PTR [rax+0x120]
   14001e418:	jae    0x14001e428
   14001e41a:	call   0x14002412c
   14001e41f:	mov    rcx,QWORD PTR [rax+0x120]
   14001e426:	jmp    0x14001e42a
   14001e428:	xor    ecx,ecx
   14001e42a:	mov    QWORD PTR [rbx+0x8],rcx
   14001e42e:	call   0x14002412c
   14001e433:	mov    QWORD PTR [rax+0x120],rbx
   14001e43a:	mov    rax,rbx
   14001e43d:	add    rsp,0x20
   14001e441:	pop    rbx
   14001e442:	ret    
   14001e443:	int3   
   14001e444:	rex push rbx
   14001e446:	sub    rsp,0x20
   14001e44a:	mov    rbx,rcx
   14001e44d:	call   0x14002412c
   14001e452:	mov    rdx,QWORD PTR [rax+0x120]
   14001e459:	jmp    0x14001e464
   14001e45b:	cmp    QWORD PTR [rdx],rbx
   14001e45e:	je     0x14001e472
   14001e460:	mov    rdx,QWORD PTR [rdx+0x8]
   14001e464:	test   rdx,rdx
   14001e467:	jne    0x14001e45b
   14001e469:	lea    eax,[rdx+0x1]
   14001e46c:	add    rsp,0x20
   14001e470:	pop    rbx
   14001e471:	ret    
   14001e472:	xor    eax,eax
   14001e474:	jmp    0x14001e46c
   14001e476:	int3   
   14001e477:	int3   
   14001e478:	mov    QWORD PTR [rsp+0x8],rbx
   14001e47d:	push   rdi
   14001e47e:	sub    rsp,0x20
   14001e482:	mov    rdi,rcx
   14001e485:	call   0x14002412c
   14001e48a:	cmp    rdi,QWORD PTR [rax+0x120]
   14001e491:	je     0x14001e498
   14001e493:	call   0x140025880
   14001e498:	call   0x14002412c
   14001e49d:	mov    rbx,QWORD PTR [rax+0x120]
   14001e4a4:	jmp    0x14001e4af
   14001e4a6:	cmp    rdi,rbx
   14001e4a9:	je     0x14001e4c4
   14001e4ab:	mov    rbx,QWORD PTR [rbx+0x8]
   14001e4af:	test   rbx,rbx
   14001e4b2:	jne    0x14001e4a6
   14001e4b4:	call   0x140025880
   14001e4b9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e4be:	add    rsp,0x20
   14001e4c2:	pop    rdi
   14001e4c3:	ret    
   14001e4c4:	call   0x14002412c
   14001e4c9:	mov    rcx,QWORD PTR [rbx+0x8]
   14001e4cd:	mov    QWORD PTR [rax+0x120],rcx
   14001e4d4:	jmp    0x14001e4b9
   14001e4d6:	int3   
   14001e4d7:	int3   
   14001e4d8:	mov    QWORD PTR [rsp+0x8],rbx
   14001e4dd:	mov    QWORD PTR [rsp+0x10],rbp
   14001e4e2:	mov    QWORD PTR [rsp+0x18],rsi
   14001e4e7:	push   rdi
   14001e4e8:	sub    rsp,0x5a0
   14001e4ef:	mov    rsi,rdx
   14001e4f2:	mov    rbp,rcx
   14001e4f5:	mov    rdi,r8
   14001e4f8:	lea    rcx,[rsp+0x30]
   14001e4fd:	lea    rdx,[rip+0x1c77c]        # 0x14003ac80
   14001e504:	mov    r8d,0x98
   14001e50a:	mov    rbx,r9
   14001e50d:	call   0x1400205b0
   14001e512:	mov    rax,QWORD PTR [rsp+0x5d0]
   14001e51a:	mov    rdx,QWORD PTR [rsp+0x5e8]
   14001e522:	mov    rcx,QWORD PTR [rbp+0x0]
   14001e526:	mov    QWORD PTR [rsp+0x60],rax
   14001e52b:	movsxd rax,DWORD PTR [rsp+0x5d8]
   14001e533:	lea    r11,[rip+0x2e6e]        # 0x1400213a8
   14001e53a:	lea    r8,[rsp+0x30]
   14001e53f:	mov    QWORD PTR [rsp+0x68],rax
   14001e544:	mov    rax,QWORD PTR [rsp+0x5e0]
   14001e54c:	xor    r9d,r9d
   14001e54f:	mov    QWORD PTR [rsp+0x78],rax
   14001e554:	movzx  eax,BYTE PTR [rsp+0x5f0]
   14001e55c:	mov    QWORD PTR [rsp+0x50],r11
   14001e561:	mov    QWORD PTR [rsp+0x88],rax
   14001e569:	mov    rax,QWORD PTR [rdx+0x40]
   14001e56d:	mov    rdx,QWORD PTR [rdx]
   14001e570:	mov    QWORD PTR [rsp+0x28],rax
   14001e575:	lea    rax,[rsp+0xd0]
   14001e57d:	mov    QWORD PTR [rsp+0x58],rbx
   14001e582:	mov    QWORD PTR [rsp+0x70],rdi
   14001e587:	mov    QWORD PTR [rsp+0x80],rsi
   14001e58f:	mov    QWORD PTR [rsp+0x90],0x19930520
   14001e59b:	mov    QWORD PTR [rsp+0x20],rax
   14001e5a0:	call   0x140030e4c
   14001e5a5:	lea    r11,[rsp+0x5a0]
   14001e5ad:	mov    rbx,QWORD PTR [r11+0x10]
   14001e5b1:	mov    rbp,QWORD PTR [r11+0x18]
   14001e5b5:	mov    rsi,QWORD PTR [r11+0x20]
   14001e5b9:	mov    rsp,r11
   14001e5bc:	pop    rdi
   14001e5bd:	ret    
   14001e5be:	int3   
   14001e5bf:	int3   
   14001e5c0:	mov    QWORD PTR [rsp+0x10],rbx
   14001e5c5:	push   rdi
   14001e5c6:	sub    rsp,0x60
   14001e5ca:	mov    rdi,rdx
   14001e5cd:	mov    rbx,rcx
   14001e5d0:	lea    rcx,[rsp+0x20]
   14001e5d5:	lea    rdx,[rip+0x1c744]        # 0x14003ad20
   14001e5dc:	mov    r8d,0x40
   14001e5e2:	call   0x1400205b0
   14001e5e7:	lea    rdx,[rsp+0x70]
   14001e5ec:	mov    rcx,rdi
   14001e5ef:	mov    QWORD PTR [rsp+0x48],rbx
   14001e5f4:	mov    QWORD PTR [rsp+0x50],rdi
   14001e5f9:	call   0x140030e52
   14001e5fe:	mov    r11,rax
   14001e601:	mov    QWORD PTR [rsp+0x70],rax
   14001e606:	mov    QWORD PTR [rsp+0x58],rax
   14001e60b:	test   rdi,rdi
   14001e60e:	je     0x14001e62e
   14001e610:	test   BYTE PTR [rdi],0x8
   14001e613:	mov    ecx,0x1994000
   14001e618:	je     0x14001e620
   14001e61a:	mov    DWORD PTR [rsp+0x40],ecx
   14001e61e:	jmp    0x14001e62e
   14001e620:	mov    eax,DWORD PTR [rsp+0x40]
   14001e624:	test   r11,r11
   14001e627:	cmove  eax,ecx
   14001e62a:	mov    DWORD PTR [rsp+0x40],eax
   14001e62e:	mov    r8d,DWORD PTR [rsp+0x38]
   14001e633:	mov    edx,DWORD PTR [rsp+0x24]
   14001e637:	mov    ecx,DWORD PTR [rsp+0x20]
   14001e63b:	lea    r9,[rsp+0x40]
   14001e640:	call   QWORD PTR [rip+0x1ba72]        # 0x14003a0b8
   14001e646:	mov    rbx,QWORD PTR [rsp+0x78]
   14001e64b:	add    rsp,0x60
   14001e64f:	pop    rdi
   14001e650:	ret    
   14001e651:	int3   
   14001e652:	int3   
   14001e653:	int3   
   14001e654:	mov    QWORD PTR [rsp+0x8],rbx
   14001e659:	mov    QWORD PTR [rsp+0x10],rsi
   14001e65e:	push   rdi
   14001e65f:	sub    rsp,0x20
   14001e663:	mov    rax,QWORD PTR [rcx+0x128]
   14001e66a:	mov    rbx,rcx
   14001e66d:	test   rax,rax
   14001e670:	je     0x14001e6eb
   14001e672:	lea    rcx,[rip+0x2abe7]        # 0x140049260
   14001e679:	cmp    rax,rcx
   14001e67c:	je     0x14001e6eb
   14001e67e:	mov    rax,QWORD PTR [rbx+0x110]
   14001e685:	test   rax,rax
   14001e688:	je     0x14001e6eb
   14001e68a:	cmp    DWORD PTR [rax],0x0
   14001e68d:	jne    0x14001e6eb
   14001e68f:	mov    rcx,QWORD PTR [rbx+0x120]
   14001e696:	test   rcx,rcx
   14001e699:	je     0x14001e6b1
   14001e69b:	cmp    DWORD PTR [rcx],0x0
   14001e69e:	jne    0x14001e6b1
   14001e6a0:	call   0x14001ca48
   14001e6a5:	mov    rcx,QWORD PTR [rbx+0x128]
   14001e6ac:	call   0x140028214
   14001e6b1:	mov    rcx,QWORD PTR [rbx+0x118]
   14001e6b8:	test   rcx,rcx
   14001e6bb:	je     0x14001e6d3
   14001e6bd:	cmp    DWORD PTR [rcx],0x0
   14001e6c0:	jne    0x14001e6d3
   14001e6c2:	call   0x14001ca48
   14001e6c7:	mov    rcx,QWORD PTR [rbx+0x128]
   14001e6ce:	call   0x140027fc0
   14001e6d3:	mov    rcx,QWORD PTR [rbx+0x110]
   14001e6da:	call   0x14001ca48
   14001e6df:	mov    rcx,QWORD PTR [rbx+0x128]
   14001e6e6:	call   0x14001ca48
   14001e6eb:	mov    rax,QWORD PTR [rbx+0x130]
   14001e6f2:	test   rax,rax
   14001e6f5:	je     0x14001e73e
   14001e6f7:	cmp    DWORD PTR [rax],0x0
   14001e6fa:	jne    0x14001e73e
   14001e6fc:	mov    rcx,QWORD PTR [rbx+0x138]
   14001e703:	sub    rcx,0xfe
   14001e70a:	call   0x14001ca48
   14001e70f:	mov    rcx,QWORD PTR [rbx+0x148]
   14001e716:	mov    edi,0x80
   14001e71b:	sub    rcx,rdi
   14001e71e:	call   0x14001ca48
   14001e723:	mov    rcx,QWORD PTR [rbx+0x150]
   14001e72a:	sub    rcx,rdi
   14001e72d:	call   0x14001ca48
   14001e732:	mov    rcx,QWORD PTR [rbx+0x130]
   14001e739:	call   0x14001ca48
   14001e73e:	mov    rcx,QWORD PTR [rbx+0x158]
   14001e745:	lea    rax,[rip+0x2b9f4]        # 0x14004a140
   14001e74c:	cmp    rcx,rax
   14001e74f:	je     0x14001e76b
   14001e751:	cmp    DWORD PTR [rcx+0x160],0x0
   14001e758:	jne    0x14001e76b
   14001e75a:	call   0x140027d38
   14001e75f:	mov    rcx,QWORD PTR [rbx+0x158]
   14001e766:	call   0x14001ca48
   14001e76b:	lea    rdi,[rbx+0x58]
   14001e76f:	mov    esi,0x6
   14001e774:	lea    rax,[rip+0x2b115]        # 0x140049890
   14001e77b:	cmp    QWORD PTR [rdi-0x10],rax
   14001e77f:	je     0x14001e793
   14001e781:	mov    rcx,QWORD PTR [rdi]
   14001e784:	test   rcx,rcx
   14001e787:	je     0x14001e793
   14001e789:	cmp    DWORD PTR [rcx],0x0
   14001e78c:	jne    0x14001e793
   14001e78e:	call   0x14001ca48
   14001e793:	cmp    QWORD PTR [rdi-0x8],0x0
   14001e798:	je     0x14001e7ad
   14001e79a:	mov    rcx,QWORD PTR [rdi+0x8]
   14001e79e:	test   rcx,rcx
   14001e7a1:	je     0x14001e7ad
   14001e7a3:	cmp    DWORD PTR [rcx],0x0
   14001e7a6:	jne    0x14001e7ad
   14001e7a8:	call   0x14001ca48
   14001e7ad:	add    rdi,0x20
   14001e7b1:	sub    rsi,0x1
   14001e7b5:	jne    0x14001e774
   14001e7b7:	mov    rcx,rbx
   14001e7ba:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e7bf:	mov    rsi,QWORD PTR [rsp+0x38]
   14001e7c4:	add    rsp,0x20
   14001e7c8:	pop    rdi
   14001e7c9:	jmp    0x14001ca48
   14001e7ce:	int3   
   14001e7cf:	int3   
   14001e7d0:	lock add DWORD PTR [rcx],0x1
   14001e7d4:	mov    rax,QWORD PTR [rcx+0x110]
   14001e7db:	test   rax,rax
   14001e7de:	je     0x14001e7e4
   14001e7e0:	lock add DWORD PTR [rax],0x1
   14001e7e4:	mov    rax,QWORD PTR [rcx+0x120]
   14001e7eb:	test   rax,rax
   14001e7ee:	je     0x14001e7f4
   14001e7f0:	lock add DWORD PTR [rax],0x1
   14001e7f4:	mov    rax,QWORD PTR [rcx+0x118]
   14001e7fb:	test   rax,rax
   14001e7fe:	je     0x14001e804
   14001e800:	lock add DWORD PTR [rax],0x1
   14001e804:	mov    rax,QWORD PTR [rcx+0x130]
   14001e80b:	test   rax,rax
   14001e80e:	je     0x14001e814
   14001e810:	lock add DWORD PTR [rax],0x1
   14001e814:	lea    rax,[rcx+0x58]
   14001e818:	mov    r8d,0x6
   14001e81e:	lea    rdx,[rip+0x2b06b]        # 0x140049890
   14001e825:	cmp    QWORD PTR [rax-0x10],rdx
   14001e829:	je     0x14001e837
   14001e82b:	mov    rdx,QWORD PTR [rax]
   14001e82e:	test   rdx,rdx
   14001e831:	je     0x14001e837
   14001e833:	lock add DWORD PTR [rdx],0x1
   14001e837:	cmp    QWORD PTR [rax-0x8],0x0
   14001e83c:	je     0x14001e84b
   14001e83e:	mov    rdx,QWORD PTR [rax+0x8]
   14001e842:	test   rdx,rdx
   14001e845:	je     0x14001e84b
   14001e847:	lock add DWORD PTR [rdx],0x1
   14001e84b:	add    rax,0x20
   14001e84f:	sub    r8,0x1
   14001e853:	jne    0x14001e81e
   14001e855:	mov    rax,QWORD PTR [rcx+0x158]
   14001e85c:	lock add DWORD PTR [rax+0x160],0x1
   14001e864:	ret    
   14001e865:	int3   
   14001e866:	int3   
   14001e867:	int3   
   14001e868:	test   rcx,rcx
   14001e86b:	je     0x14001e909
   14001e871:	or     r9d,0xffffffff
   14001e875:	lock add DWORD PTR [rcx],r9d
   14001e879:	mov    rax,QWORD PTR [rcx+0x110]
   14001e880:	test   rax,rax
   14001e883:	je     0x14001e889
   14001e885:	lock add DWORD PTR [rax],r9d
   14001e889:	mov    rax,QWORD PTR [rcx+0x120]
   14001e890:	test   rax,rax
   14001e893:	je     0x14001e899
   14001e895:	lock add DWORD PTR [rax],r9d
   14001e899:	mov    rax,QWORD PTR [rcx+0x118]
   14001e8a0:	test   rax,rax
   14001e8a3:	je     0x14001e8a9
   14001e8a5:	lock add DWORD PTR [rax],r9d
   14001e8a9:	mov    rax,QWORD PTR [rcx+0x130]
   14001e8b0:	test   rax,rax
   14001e8b3:	je     0x14001e8b9
   14001e8b5:	lock add DWORD PTR [rax],r9d
   14001e8b9:	lea    rax,[rcx+0x58]
   14001e8bd:	mov    r8d,0x6
   14001e8c3:	lea    rdx,[rip+0x2afc6]        # 0x140049890
   14001e8ca:	cmp    QWORD PTR [rax-0x10],rdx
   14001e8ce:	je     0x14001e8dc
   14001e8d0:	mov    rdx,QWORD PTR [rax]
   14001e8d3:	test   rdx,rdx
   14001e8d6:	je     0x14001e8dc
   14001e8d8:	lock add DWORD PTR [rdx],r9d
   14001e8dc:	cmp    QWORD PTR [rax-0x8],0x0
   14001e8e1:	je     0x14001e8f0
   14001e8e3:	mov    rdx,QWORD PTR [rax+0x8]
   14001e8e7:	test   rdx,rdx
   14001e8ea:	je     0x14001e8f0
   14001e8ec:	lock add DWORD PTR [rdx],r9d
   14001e8f0:	add    rax,0x20
   14001e8f4:	sub    r8,0x1
   14001e8f8:	jne    0x14001e8c3
   14001e8fa:	mov    rax,QWORD PTR [rcx+0x158]
   14001e901:	lock add DWORD PTR [rax+0x160],r9d
   14001e909:	mov    rax,rcx
   14001e90c:	ret    
   14001e90d:	int3   
   14001e90e:	int3   
   14001e90f:	int3   
   14001e910:	rex push rbx
   14001e912:	sub    rsp,0x20
   14001e916:	mov    rbx,rdx
   14001e919:	test   rdx,rdx
   14001e91c:	je     0x14001e95f
   14001e91e:	test   rcx,rcx
   14001e921:	je     0x14001e95f
   14001e923:	mov    r10,QWORD PTR [rcx]
   14001e926:	cmp    r10,rdx
   14001e929:	je     0x14001e95a
   14001e92b:	mov    QWORD PTR [rcx],rdx
   14001e92e:	mov    rcx,rdx
   14001e931:	call   0x14001e7d0
   14001e936:	test   r10,r10
   14001e939:	je     0x14001e95a
   14001e93b:	mov    rcx,r10
   14001e93e:	call   0x14001e868
   14001e943:	cmp    DWORD PTR [r10],0x0
   14001e947:	jne    0x14001e95a
   14001e949:	lea    rax,[rip+0x2af50]        # 0x1400498a0
   14001e950:	cmp    r10,rax
   14001e953:	je     0x14001e95a
   14001e955:	call   0x14001e654
   14001e95a:	mov    rax,rbx
   14001e95d:	jmp    0x14001e961
   14001e95f:	xor    eax,eax
   14001e961:	add    rsp,0x20
   14001e965:	pop    rbx
   14001e966:	ret    
   14001e967:	int3   
   14001e968:	rex push rbx
   14001e96a:	sub    rsp,0x20
   14001e96e:	call   0x14002412c
   14001e973:	mov    rbx,rax
   14001e976:	mov    ecx,DWORD PTR [rax+0xc8]
   14001e97c:	test   DWORD PTR [rip+0x2aefe],ecx        # 0x140049880
   14001e982:	je     0x14001e99c
   14001e984:	cmp    QWORD PTR [rax+0xc0],0x0
   14001e98c:	je     0x14001e99c
   14001e98e:	call   0x14002412c
   14001e993:	mov    rbx,QWORD PTR [rax+0xc0]
   14001e99a:	jmp    0x14001e9c7
   14001e99c:	mov    ecx,0xc
   14001e9a1:	call   0x140028880
   14001e9a6:	nop
   14001e9a7:	lea    rcx,[rbx+0xc0]
   14001e9ae:	mov    rdx,QWORD PTR [rip+0x2b04b]        # 0x140049a00
   14001e9b5:	call   0x14001e910
   14001e9ba:	mov    rbx,rax
   14001e9bd:	mov    ecx,0xc
   14001e9c2:	call   0x140028780
   14001e9c7:	test   rbx,rbx
   14001e9ca:	jne    0x14001e9d4
   14001e9cc:	lea    ecx,[rbx+0x20]
   14001e9cf:	call   0x140024398
   14001e9d4:	mov    rax,rbx
   14001e9d7:	add    rsp,0x20
   14001e9db:	pop    rbx
   14001e9dc:	ret    
   14001e9dd:	int3   
   14001e9de:	int3   
   14001e9df:	int3   
   14001e9e0:	test   rcx,rcx
   14001e9e3:	je     0x14001ea86
   14001e9e9:	push   rbx
   14001e9ea:	sub    rsp,0x20
   14001e9ee:	mov    rbx,rcx
   14001e9f1:	mov    ecx,0xd
   14001e9f6:	call   0x140028880
   14001e9fb:	nop
   14001e9fc:	mov    rcx,QWORD PTR [rbx+0x8]
   14001ea00:	test   rcx,rcx
   14001ea03:	je     0x14001ea21
   14001ea05:	lock add DWORD PTR [rcx],0xffffffff
   14001ea09:	jne    0x14001ea21
   14001ea0b:	mov    rcx,QWORD PTR [rbx+0x8]
   14001ea0f:	lea    rax,[rip+0x2b01a]        # 0x140049a30
   14001ea16:	cmp    rcx,rax
   14001ea19:	je     0x14001ea21
   14001ea1b:	call   0x14001ca48
   14001ea20:	nop
   14001ea21:	mov    ecx,0xd
   14001ea26:	call   0x140028780
   14001ea2b:	cmp    QWORD PTR [rbx],0x0
   14001ea2f:	je     0x14001ea6d
   14001ea31:	mov    ecx,0xc
   14001ea36:	call   0x140028880
   14001ea3b:	nop
   14001ea3c:	mov    rcx,QWORD PTR [rbx]
   14001ea3f:	call   0x14001e868
   14001ea44:	mov    rcx,QWORD PTR [rbx]
   14001ea47:	test   rcx,rcx
   14001ea4a:	je     0x14001ea63
   14001ea4c:	cmp    DWORD PTR [rcx],0x0
   14001ea4f:	jne    0x14001ea63
   14001ea51:	lea    rax,[rip+0x2ae48]        # 0x1400498a0
   14001ea58:	cmp    rcx,rax
   14001ea5b:	je     0x14001ea63
   14001ea5d:	call   0x14001e654
   14001ea62:	nop
   14001ea63:	mov    ecx,0xc
   14001ea68:	call   0x140028780
   14001ea6d:	mov    eax,0xbaadf00d
   14001ea72:	mov    QWORD PTR [rbx],rax
   14001ea75:	mov    QWORD PTR [rbx+0x8],rax
   14001ea79:	mov    rcx,rbx
   14001ea7c:	call   0x14001ca48
   14001ea81:	add    rsp,0x20
   14001ea85:	pop    rbx
   14001ea86:	ret    
   14001ea87:	int3   
   14001ea88:	test   r8d,r8d
   14001ea8b:	jle    0x14001eaeb
   14001ea8d:	mov    DWORD PTR [rsp+0x18],r8d
   14001ea92:	mov    QWORD PTR [rsp+0x20],r9
   14001ea97:	push   rbx
   14001ea98:	push   rbp
   14001ea99:	push   rsi
   14001ea9a:	push   rdi
   14001ea9b:	sub    rsp,0x38
   14001ea9f:	lea    rdi,[rsp+0x78]
   14001eaa4:	xor    ebx,ebx
   14001eaa6:	mov    rsi,rdx
   14001eaa9:	add    rdi,0xfffffffffffffff8
   14001eaad:	mov    rbp,rcx
   14001eab0:	add    rdi,0x8
   14001eab4:	mov    rdx,rsi
   14001eab7:	mov    rcx,rbp
   14001eaba:	mov    r8,QWORD PTR [rdi]
   14001eabd:	call   0x1400288c4
   14001eac2:	test   eax,eax
   14001eac4:	je     0x14001eadb
   14001eac6:	and    QWORD PTR [rsp+0x20],0x0
   14001eacc:	xor    r9d,r9d
   14001eacf:	xor    r8d,r8d
   14001ead2:	xor    edx,edx
   14001ead4:	xor    ecx,ecx
   14001ead6:	call   0x14001cbc8
   14001eadb:	inc    ebx
   14001eadd:	cmp    ebx,DWORD PTR [rsp+0x70]
   14001eae1:	jl     0x14001eab0
   14001eae3:	add    rsp,0x38
   14001eae7:	pop    rdi
   14001eae8:	pop    rsi
   14001eae9:	pop    rbp
   14001eaea:	pop    rbx
   14001eaeb:	ret    
   14001eaec:	mov    rax,rsp
   14001eaef:	mov    QWORD PTR [rax+0x8],rbx
   14001eaf3:	mov    QWORD PTR [rax+0x10],rbp
   14001eaf7:	mov    QWORD PTR [rax+0x18],rsi
   14001eafb:	mov    QWORD PTR [rax+0x20],rdi
   14001eaff:	push   r12
   14001eb01:	sub    rsp,0x30
   14001eb05:	mov    rbx,rdx
   14001eb08:	mov    r8d,0x90
   14001eb0e:	xor    edx,edx
   14001eb10:	mov    rsi,rcx
   14001eb13:	call   0x14001c730
   14001eb18:	cmp    BYTE PTR [rbx],0x0
   14001eb1b:	jne    0x14001eb24
   14001eb1d:	xor    eax,eax
   14001eb1f:	jmp    0x14001ec36
   14001eb24:	cmp    BYTE PTR [rbx],0x2e
   14001eb27:	jne    0x14001eb6a
   14001eb29:	lea    r8,[rbx+0x1]
   14001eb2d:	cmp    BYTE PTR [r8],0x0
   14001eb31:	je     0x14001eb6a
   14001eb33:	mov    edx,0x10
   14001eb38:	lea    rcx,[rsi+0x80]
   14001eb3f:	lea    r9d,[rdx-0x1]
   14001eb43:	call   0x1400289e4
   14001eb48:	test   eax,eax
   14001eb4a:	je     0x14001eb61
   14001eb4c:	and    QWORD PTR [rsp+0x20],0x0
   14001eb52:	xor    r9d,r9d
   14001eb55:	xor    r8d,r8d
   14001eb58:	xor    edx,edx
   14001eb5a:	xor    ecx,ecx
   14001eb5c:	call   0x14001cbc8
   14001eb61:	mov    BYTE PTR [rsi+0x8f],0x0
   14001eb68:	jmp    0x14001eb1d
   14001eb6a:	xor    ebp,ebp
   14001eb6c:	jmp    0x14001ec1b
   14001eb71:	lea    r12,[rax+rbx*1]
   14001eb75:	mov    dil,BYTE PTR [r12]
   14001eb79:	test   ebp,ebp
   14001eb7b:	jne    0x14001eb99
   14001eb7d:	cmp    rax,0x40
   14001eb81:	jae    0x14001ec33
   14001eb87:	cmp    dil,0x2e
   14001eb8b:	je     0x14001ec33
   14001eb91:	lea    edx,[rbp+0x40]
   14001eb94:	mov    rcx,rsi
   14001eb97:	jmp    0x14001ebdd
   14001eb99:	cmp    ebp,0x1
   14001eb9c:	jne    0x14001ebbb
   14001eb9e:	cmp    rax,0x40
   14001eba2:	jae    0x14001ec33
   14001eba8:	cmp    dil,0x5f
   14001ebac:	je     0x14001ec33
   14001ebb2:	lea    rcx,[rsi+0x40]
   14001ebb6:	lea    edx,[rbp+0x3f]
   14001ebb9:	jmp    0x14001ebdd
   14001ebbb:	cmp    ebp,0x2
   14001ebbe:	jne    0x14001ec33
   14001ebc0:	cmp    rax,0x10
   14001ebc4:	jae    0x14001ec33
   14001ebc6:	test   dil,dil
   14001ebc9:	je     0x14001ebd1
   14001ebcb:	cmp    dil,0x2c
   14001ebcf:	jne    0x14001ec33
   14001ebd1:	lea    rcx,[rsi+0x80]
   14001ebd8:	mov    edx,0x10
   14001ebdd:	mov    r9,rax
   14001ebe0:	mov    r8,rbx
   14001ebe3:	call   0x1400289e4
   14001ebe8:	test   eax,eax
   14001ebea:	je     0x14001ec01
   14001ebec:	and    QWORD PTR [rsp+0x20],0x0
   14001ebf2:	xor    r9d,r9d
   14001ebf5:	xor    r8d,r8d
   14001ebf8:	xor    edx,edx
   14001ebfa:	xor    ecx,ecx
   14001ebfc:	call   0x14001cbc8
   14001ec01:	cmp    dil,0x2c
   14001ec05:	je     0x14001eb1d
   14001ec0b:	test   dil,dil
   14001ec0e:	je     0x14001eb1d
   14001ec14:	lea    rbx,[r12+0x1]
   14001ec19:	inc    ebp
   14001ec1b:	lea    rdx,[rip+0x1c29e]        # 0x14003aec0
   14001ec22:	mov    rcx,rbx
   14001ec25:	call   0x140028950
   14001ec2a:	test   rax,rax
   14001ec2d:	jne    0x14001eb71
   14001ec33:	or     eax,0xffffffff
   14001ec36:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ec3b:	mov    rbp,QWORD PTR [rsp+0x48]
   14001ec40:	mov    rsi,QWORD PTR [rsp+0x50]
   14001ec45:	mov    rdi,QWORD PTR [rsp+0x58]
   14001ec4a:	add    rsp,0x30
   14001ec4e:	pop    r12
   14001ec50:	ret    
   14001ec51:	int3   
   14001ec52:	int3   
   14001ec53:	int3   
   14001ec54:	mov    QWORD PTR [rsp+0x8],rbx
   14001ec59:	mov    QWORD PTR [rsp+0x10],rsi
   14001ec5e:	push   rdi
   14001ec5f:	sub    rsp,0x30
   14001ec63:	mov    rbx,r8
   14001ec66:	mov    rdi,rdx
   14001ec69:	mov    rsi,rcx
   14001ec6c:	call   0x140023db4
   14001ec71:	test   eax,eax
   14001ec73:	je     0x14001ec8a
   14001ec75:	and    QWORD PTR [rsp+0x20],0x0
   14001ec7b:	xor    r9d,r9d
   14001ec7e:	xor    r8d,r8d
   14001ec81:	xor    edx,edx
   14001ec83:	xor    ecx,ecx
   14001ec85:	call   0x14001cbc8
   14001ec8a:	lea    rax,[rbx+0x40]
   14001ec8e:	cmp    BYTE PTR [rax],0x0
   14001ec91:	je     0x14001ecb0
   14001ec93:	lea    r9,[rip+0x1c22e]        # 0x14003aec8
   14001ec9a:	mov    r8d,0x2
   14001eca0:	mov    rdx,rdi
   14001eca3:	mov    rcx,rsi
   14001eca6:	mov    QWORD PTR [rsp+0x20],rax
   14001ecab:	call   0x14001ea88
   14001ecb0:	lea    rax,[rbx+0x80]
   14001ecb7:	cmp    BYTE PTR [rax],0x0
   14001ecba:	je     0x14001ecd9
   14001ecbc:	lea    r9,[rip+0x1c201]        # 0x14003aec4
   14001ecc3:	mov    r8d,0x2
   14001ecc9:	mov    rdx,rdi
   14001eccc:	mov    rcx,rsi
   14001eccf:	mov    QWORD PTR [rsp+0x20],rax
   14001ecd4:	call   0x14001ea88
   14001ecd9:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ecde:	mov    rsi,QWORD PTR [rsp+0x48]
   14001ece3:	add    rsp,0x30
   14001ece7:	pop    rdi
   14001ece8:	ret    
   14001ece9:	int3   
   14001ecea:	int3   
   14001eceb:	int3   
   14001ecec:	mov    QWORD PTR [rsp+0x8],rbx
   14001ecf1:	push   rbp
   14001ecf2:	push   rsi
   14001ecf3:	push   rdi
   14001ecf4:	push   r12
   14001ecf6:	push   r13
   14001ecf8:	push   r14
   14001ecfa:	push   r15
   14001ecfc:	sub    rsp,0x30
   14001ed00:	mov    rbx,rcx
   14001ed03:	mov    r12d,0x1
   14001ed09:	mov    ecx,0x355
   14001ed0e:	mov    edi,r12d
   14001ed11:	call   0x1400208e4
   14001ed16:	mov    rsi,rax
   14001ed19:	mov    QWORD PTR [rsp+0x80],rax
   14001ed21:	xor    eax,eax
   14001ed23:	cmp    rsi,rax
   14001ed26:	je     0x14001eebd
   14001ed2c:	lea    rbp,[rsi+0x4]
   14001ed30:	lea    r13,[rbx+0x68]
   14001ed34:	lea    r8d,[r12+0x2]
   14001ed39:	mov    BYTE PTR [rbp+0x0],al
   14001ed3c:	mov    DWORD PTR [rsi],r12d
   14001ed3f:	mov    rax,QWORD PTR [r13+0x0]
   14001ed43:	mov    r9,QWORD PTR [rip+0x1c07e]        # 0x14003adc8
   14001ed4a:	mov    QWORD PTR [rsp+0x28],rax
   14001ed4f:	lea    rax,[rip+0x1c17a]        # 0x14003aed0
   14001ed56:	mov    edx,0x351
   14001ed5b:	mov    rcx,rbp
   14001ed5e:	mov    QWORD PTR [rsp+0x20],rax
   14001ed63:	call   0x14001ea88
   14001ed68:	mov    r15,r12
   14001ed6b:	lea    r12,[rbx+0x88]
   14001ed72:	lea    r14,[rip+0x1c04f]        # 0x14003adc8
   14001ed79:	xor    esi,esi
   14001ed7b:	lea    r8,[rip+0x1c14a]        # 0x14003aecc
   14001ed82:	mov    edx,0x351
   14001ed87:	mov    rcx,rbp
   14001ed8a:	call   0x1400288c4
   14001ed8f:	cmp    eax,esi
   14001ed91:	je     0x14001eda7
   14001ed93:	xor    r9d,r9d
   14001ed96:	xor    r8d,r8d
   14001ed99:	xor    edx,edx
   14001ed9b:	xor    ecx,ecx
   14001ed9d:	mov    QWORD PTR [rsp+0x20],rsi
   14001eda2:	call   0x14001cbc8
   14001eda7:	mov    rdx,QWORD PTR [r12]
   14001edab:	mov    rcx,QWORD PTR [r13+0x0]
   14001edaf:	call   0x140023f00
   14001edb4:	mov    edx,0x351
   14001edb9:	mov    r8d,0x3
   14001edbf:	cmp    eax,esi
   14001edc1:	mov    rcx,rbp
   14001edc4:	cmovne edi,esi
   14001edc7:	inc    r15
   14001edca:	add    r14,0x18
   14001edce:	mov    r9,QWORD PTR [r14]
   14001edd1:	mov    rax,r15
   14001edd4:	add    r12,0x20
   14001edd8:	shl    rax,0x5
   14001eddc:	lea    r13,[rax+rbx*1+0x48]
   14001ede1:	mov    rax,QWORD PTR [r13+0x0]
   14001ede5:	mov    QWORD PTR [rsp+0x28],rax
   14001edea:	lea    rax,[rip+0x1c0df]        # 0x14003aed0
   14001edf1:	mov    QWORD PTR [rsp+0x20],rax
   14001edf6:	call   0x14001ea88
   14001edfb:	lea    r11,[rip+0x1c026]        # 0x14003ae28
   14001ee02:	cmp    r14,r11
   14001ee05:	jl     0x14001ed7b
   14001ee0b:	mov    rsi,QWORD PTR [rsp+0x80]
   14001ee13:	xor    r13d,r13d
   14001ee16:	cmp    edi,r13d
   14001ee19:	jne    0x14001ee63
   14001ee1b:	mov    rcx,QWORD PTR [rbx+0x58]
   14001ee1f:	or     edi,0xffffffff
   14001ee22:	cmp    rcx,r13
   14001ee25:	je     0x14001ee3a
   14001ee27:	mov    eax,edi
   14001ee29:	lock xadd DWORD PTR [rcx],eax
   14001ee2d:	add    eax,edi
   14001ee2f:	jne    0x14001ee3a
   14001ee31:	mov    rcx,QWORD PTR [rbx+0x58]
   14001ee35:	call   0x14001ca48
   14001ee3a:	mov    rdx,QWORD PTR [rbx+0x60]
   14001ee3e:	cmp    rdx,r13
   14001ee41:	je     0x14001ee56
   14001ee43:	mov    ecx,edi
   14001ee45:	lock xadd DWORD PTR [rdx],ecx
   14001ee49:	add    ecx,edi
   14001ee4b:	jne    0x14001ee56
   14001ee4d:	mov    rcx,QWORD PTR [rbx+0x60]
   14001ee51:	call   0x14001ca48
   14001ee56:	mov    QWORD PTR [rbx+0x58],rsi
   14001ee5a:	mov    QWORD PTR [rbx+0x48],rbp
   14001ee5e:	mov    rax,rbp
   14001ee61:	jmp    0x14001eeb5
   14001ee63:	mov    rcx,rsi
   14001ee66:	call   0x14001ca48
   14001ee6b:	mov    rcx,QWORD PTR [rbx+0x58]
   14001ee6f:	or     edi,0xffffffff
   14001ee72:	cmp    rcx,r13
   14001ee75:	je     0x14001ee8a
   14001ee77:	mov    eax,edi
   14001ee79:	lock xadd DWORD PTR [rcx],eax
   14001ee7d:	add    eax,edi
   14001ee7f:	jne    0x14001ee8a
   14001ee81:	mov    rcx,QWORD PTR [rbx+0x58]
   14001ee85:	call   0x14001ca48
   14001ee8a:	mov    rdx,QWORD PTR [rbx+0x60]
   14001ee8e:	cmp    rdx,r13
   14001ee91:	je     0x14001eea6
   14001ee93:	mov    ecx,edi
   14001ee95:	lock xadd DWORD PTR [rdx],ecx
   14001ee99:	add    ecx,edi
   14001ee9b:	jne    0x14001eea6
   14001ee9d:	mov    rcx,QWORD PTR [rbx+0x60]
   14001eea1:	call   0x14001ca48
   14001eea6:	mov    rax,QWORD PTR [rbx+0x88]
   14001eead:	mov    QWORD PTR [rbx+0x58],r13
   14001eeb1:	mov    QWORD PTR [rbx+0x48],r13
   14001eeb5:	mov    QWORD PTR [rbx+0x50],r13
   14001eeb9:	mov    QWORD PTR [rbx+0x60],r13
   14001eebd:	mov    rbx,QWORD PTR [rsp+0x70]
   14001eec2:	add    rsp,0x30
   14001eec6:	pop    r15
   14001eec8:	pop    r14
   14001eeca:	pop    r13
   14001eecc:	pop    r12
   14001eece:	pop    rdi
   14001eecf:	pop    rsi
   14001eed0:	pop    rbp
   14001eed1:	ret    
   14001eed2:	int3   
   14001eed3:	int3   
   14001eed4:	rex push rbx
   14001eed6:	push   rbp
   14001eed7:	push   rsi
   14001eed8:	push   rdi
   14001eed9:	push   r12
   14001eedb:	push   r13
   14001eedd:	push   r14
   14001eedf:	push   r15
   14001eee1:	sub    rsp,0xf8
   14001eee8:	mov    rax,QWORD PTR [rip+0x2a571]        # 0x140049460
   14001eeef:	xor    rax,rsp
   14001eef2:	mov    QWORD PTR [rsp+0xe0],rax
   14001eefa:	mov    rsi,QWORD PTR [rsp+0x160]
   14001ef02:	mov    rdi,r9
   14001ef05:	mov    r15,r8
   14001ef08:	mov    rbp,rdx
   14001ef0b:	mov    rbx,rcx
   14001ef0e:	call   0x14002412c
   14001ef13:	lea    rcx,[rax+0x170]
   14001ef1a:	lea    r14,[rax+0x168]
   14001ef21:	xor    r12d,r12d
   14001ef24:	mov    QWORD PTR [rsp+0x40],rcx
   14001ef29:	lea    rcx,[rax+0x174]
   14001ef30:	mov    QWORD PTR [rsp+0x30],r14
   14001ef35:	lea    r13,[rax+0x1f7]
   14001ef3c:	mov    QWORD PTR [rsp+0x38],rcx
   14001ef41:	cmp    rbx,r12
   14001ef44:	je     0x14001f0ee
   14001ef4a:	cmp    rbp,r12
   14001ef4d:	je     0x14001f0ee
   14001ef53:	cmp    r15,r12
   14001ef56:	je     0x14001f0ee
   14001ef5c:	cmp    BYTE PTR [rbx],0x43
   14001ef5f:	jne    0x14001efb5
   14001ef61:	cmp    BYTE PTR [rbx+0x1],r12b
   14001ef65:	jne    0x14001efb5
   14001ef67:	lea    r8,[rip+0x1b7c2]        # 0x14003a730
   14001ef6e:	mov    rdx,r15
   14001ef71:	mov    rcx,rbp
   14001ef74:	call   0x140023db4
   14001ef79:	cmp    eax,r12d
   14001ef7c:	je     0x14001ef92
   14001ef7e:	xor    r9d,r9d
   14001ef81:	xor    r8d,r8d
   14001ef84:	xor    edx,edx
   14001ef86:	xor    ecx,ecx
   14001ef88:	mov    QWORD PTR [rsp+0x20],r12
   14001ef8d:	call   0x14001cbc8
   14001ef92:	cmp    rdi,r12
   14001ef95:	je     0x14001efa5
   14001ef97:	mov    WORD PTR [rdi],r12w
   14001ef9b:	mov    WORD PTR [rdi+0x2],r12w
   14001efa0:	mov    WORD PTR [rdi+0x4],r12w
   14001efa5:	cmp    rsi,r12
   14001efa8:	je     0x14001efad
   14001efaa:	mov    DWORD PTR [rsi],r12d
   14001efad:	mov    rax,rbp
   14001efb0:	jmp    0x14001f0f0
   14001efb5:	mov    rcx,rbx
   14001efb8:	call   0x14001c650
   14001efbd:	mov    r12,rax
   14001efc0:	cmp    rax,0x83
   14001efc6:	jae    0x14001eff0
   14001efc8:	mov    rdx,rbx
   14001efcb:	mov    rcx,r13
   14001efce:	call   0x140023f00
   14001efd3:	test   eax,eax
   14001efd5:	je     0x14001f094
   14001efdb:	mov    rcx,QWORD PTR [rsp+0x38]
   14001efe0:	mov    rdx,rbx
   14001efe3:	call   0x140023f00
   14001efe8:	test   eax,eax
   14001efea:	je     0x14001f094
   14001eff0:	lea    rcx,[rsp+0x50]
   14001eff5:	mov    rdx,rbx
   14001eff8:	xor    r14d,r14d
   14001effb:	call   0x14001eaec
   14001f000:	test   eax,eax
   14001f002:	jne    0x14001f0ee
   14001f008:	mov    rdx,QWORD PTR [rsp+0x30]
   14001f00d:	lea    r8,[rsp+0x50]
   14001f012:	lea    rcx,[rsp+0x50]
   14001f017:	call   0x140029298
   14001f01c:	test   eax,eax
   14001f01e:	je     0x14001f0ee
   14001f024:	mov    rax,QWORD PTR [rsp+0x30]
   14001f029:	mov    rcx,QWORD PTR [rsp+0x40]
   14001f02e:	lea    r8,[rsp+0x50]
   14001f033:	movzx  eax,WORD PTR [rax+0x4]
   14001f037:	mov    edx,0x83
   14001f03c:	mov    DWORD PTR [rcx],eax
   14001f03e:	mov    rcx,r13
   14001f041:	call   0x14001ec54
   14001f046:	cmp    BYTE PTR [rbx],r14b
   14001f049:	je     0x14001f059
   14001f04b:	cmp    r12,0x83
   14001f052:	jae    0x14001f059
   14001f054:	mov    r14,r12
   14001f057:	jmp    0x14001f060
   14001f059:	lea    rbx,[rip+0x202c7]        # 0x14003f327
   14001f060:	mov    rcx,QWORD PTR [rsp+0x38]
   14001f065:	lea    r9,[r14+0x1]
   14001f069:	mov    r8,rbx
   14001f06c:	mov    edx,0x83
   14001f071:	call   0x1400289e4
   14001f076:	test   eax,eax
   14001f078:	je     0x14001f08f
   14001f07a:	and    QWORD PTR [rsp+0x20],0x0
   14001f080:	xor    r9d,r9d
   14001f083:	xor    r8d,r8d
   14001f086:	xor    edx,edx
   14001f088:	xor    ecx,ecx
   14001f08a:	call   0x14001cbc8
   14001f08f:	mov    r14,QWORD PTR [rsp+0x30]
   14001f094:	test   rdi,rdi
   14001f097:	je     0x14001f0aa
   14001f099:	mov    r8d,0x6
   14001f09f:	mov    rdx,r14
   14001f0a2:	mov    rcx,rdi
   14001f0a5:	call   0x1400205b0
   14001f0aa:	test   rsi,rsi
   14001f0ad:	je     0x14001f0c2
   14001f0af:	mov    rdx,QWORD PTR [rsp+0x40]
   14001f0b4:	mov    r8d,0x4
   14001f0ba:	mov    rcx,rsi
   14001f0bd:	call   0x1400205b0
   14001f0c2:	mov    r8,r13
   14001f0c5:	mov    rdx,r15
   14001f0c8:	mov    rcx,rbp
   14001f0cb:	call   0x140023db4
   14001f0d0:	test   eax,eax
   14001f0d2:	je     0x14001f0e9
   14001f0d4:	and    QWORD PTR [rsp+0x20],0x0
   14001f0da:	xor    r9d,r9d
   14001f0dd:	xor    r8d,r8d
   14001f0e0:	xor    edx,edx
   14001f0e2:	xor    ecx,ecx
   14001f0e4:	call   0x14001cbc8
   14001f0e9:	mov    rax,r13
   14001f0ec:	jmp    0x14001f0f0
   14001f0ee:	xor    eax,eax
   14001f0f0:	mov    rcx,QWORD PTR [rsp+0xe0]
   14001f0f8:	xor    rcx,rsp
   14001f0fb:	call   0x14001c500
   14001f100:	add    rsp,0xf8
   14001f107:	pop    r15
   14001f109:	pop    r14
   14001f10b:	pop    r13
   14001f10d:	pop    r12
   14001f10f:	pop    rdi
   14001f110:	pop    rsi
   14001f111:	pop    rbp
   14001f112:	pop    rbx
   14001f113:	ret    
   14001f114:	mov    QWORD PTR [rsp+0x20],rbx
   14001f119:	push   rbp
   14001f11a:	push   rsi
   14001f11b:	push   rdi
   14001f11c:	push   r12
   14001f11e:	push   r13
   14001f120:	push   r14
   14001f122:	push   r15
   14001f124:	sub    rsp,0x210
   14001f12b:	mov    rax,QWORD PTR [rip+0x2a32e]        # 0x140049460
   14001f132:	xor    rax,rsp
   14001f135:	mov    QWORD PTR [rsp+0x200],rax
   14001f13d:	mov    rbx,r8
   14001f140:	movsxd r15,edx
   14001f143:	mov    rdi,rcx
   14001f146:	call   0x14002412c
   14001f14b:	lea    r9,[rsp+0x48]
   14001f150:	lea    rdx,[rsp+0x70]
   14001f155:	mov    rsi,rax
   14001f158:	lea    rax,[rsp+0x40]
   14001f15d:	mov    r8d,0x83
   14001f163:	mov    rcx,rbx
   14001f166:	mov    DWORD PTR [rsp+0x28],r15d
   14001f16b:	mov    QWORD PTR [rsp+0x20],rax
   14001f170:	call   0x14001eed4
   14001f175:	test   rax,rax
   14001f178:	jne    0x14001f181
   14001f17a:	xor    eax,eax
   14001f17c:	jmp    0x14001f3f0
   14001f181:	mov    rbx,r15
   14001f184:	lea    rcx,[rsp+0x70]
   14001f189:	shl    rbx,0x5
   14001f18d:	mov    rdx,QWORD PTR [rbx+rdi*1+0x48]
   14001f192:	call   0x140023f00
   14001f197:	test   eax,eax
   14001f199:	je     0x14001f3eb
   14001f19f:	lea    rcx,[rsp+0x70]
   14001f1a4:	call   0x14001c650
   14001f1a9:	mov    rbp,rax
   14001f1ac:	lea    rcx,[rax+0x5]
   14001f1b0:	call   0x1400208e4
   14001f1b5:	mov    r12,rax
   14001f1b8:	test   rax,rax
   14001f1bb:	je     0x14001f17a
   14001f1bd:	mov    rax,QWORD PTR [rbx+rdi*1+0x48]
   14001f1c2:	lea    r13,[r15+0x3]
   14001f1c6:	lea    rcx,[rsp+0x68]
   14001f1cb:	mov    QWORD PTR [rsp+0x58],rax
   14001f1d0:	mov    eax,DWORD PTR [rdi+r13*4]
   14001f1d4:	mov    r8d,0x6
   14001f1da:	mov    DWORD PTR [rsp+0x50],eax
   14001f1de:	lea    rax,[r15+r15*2+0x12]
   14001f1e3:	lea    rax,[rdi+rax*2]
   14001f1e7:	mov    rdx,rax
   14001f1ea:	mov    QWORD PTR [rsp+0x60],rax
   14001f1ef:	call   0x1400205b0
   14001f1f4:	mov    eax,DWORD PTR [rdi+0x4]
   14001f1f7:	lea    rdx,[rbp+0x1]
   14001f1fb:	lea    r8,[rsp+0x70]
   14001f200:	lea    rcx,[r12+0x4]
   14001f205:	mov    DWORD PTR [rsp+0x44],eax
   14001f209:	call   0x140023db4
   14001f20e:	test   eax,eax
   14001f210:	je     0x14001f227
   14001f212:	and    QWORD PTR [rsp+0x20],0x0
   14001f218:	xor    r9d,r9d
   14001f21b:	xor    r8d,r8d
   14001f21e:	xor    edx,edx
   14001f220:	xor    ecx,ecx
   14001f222:	call   0x14001cbc8
   14001f227:	mov    rcx,QWORD PTR [rsp+0x60]
   14001f22c:	lea    rax,[r12+0x4]
   14001f231:	lea    rdx,[rsp+0x48]
   14001f236:	mov    QWORD PTR [rbx+rdi*1+0x48],rax
   14001f23b:	movzx  eax,WORD PTR [rsp+0x48]
   14001f240:	mov    r8d,0x6
   14001f246:	mov    DWORD PTR [rdi+r13*4],eax
   14001f24a:	call   0x1400205b0
   14001f24f:	cmp    r15d,0x2
   14001f253:	jne    0x14001f360
   14001f259:	mov    eax,DWORD PTR [rsp+0x40]
   14001f25d:	xor    r8d,r8d
   14001f260:	xor    edx,edx
   14001f262:	mov    DWORD PTR [rdi+0x4],eax
   14001f265:	mov    rcx,QWORD PTR [rsi+0x29c]
   14001f26c:	mov    eax,DWORD PTR [rsi+rdx*8+0x27c]
   14001f273:	cmp    DWORD PTR [rdi+0x4],eax
   14001f276:	je     0x14001f299
   14001f278:	mov    rax,QWORD PTR [rsi+rdx*8+0x27c]
   14001f280:	mov    QWORD PTR [rsi+rdx*8+0x27c],rcx
   14001f288:	inc    rdx
   14001f28b:	inc    r8d
   14001f28e:	cmp    rdx,0x5
   14001f292:	mov    rcx,rax
   14001f295:	jl     0x14001f26c
   14001f297:	jmp    0x14001f2b8
   14001f299:	test   r8d,r8d
   14001f29c:	je     0x14001f2b8
   14001f29e:	movsxd rdx,r8d
   14001f2a1:	mov    rax,QWORD PTR [rsi+rdx*8+0x27c]
   14001f2a9:	mov    QWORD PTR [rsi+0x27c],rax
   14001f2b0:	mov    QWORD PTR [rsi+rdx*8+0x27c],rcx
   14001f2b8:	cmp    r8d,0x5
   14001f2bc:	jne    0x14001f354
   14001f2c2:	mov    eax,DWORD PTR [rdi+0x14]
   14001f2c5:	lea    ebp,[r8+0x7a]
   14001f2c9:	mov    DWORD PTR [rsp+0x38],0x1
   14001f2d1:	mov    DWORD PTR [rsp+0x30],eax
   14001f2d5:	mov    eax,DWORD PTR [rdi+0x4]
   14001f2d8:	lea    r8,[rip+0x1bb61]        # 0x14003ae40
   14001f2df:	mov    DWORD PTR [rsp+0x28],eax
   14001f2e3:	lea    rax,[rsp+0x100]
   14001f2eb:	lea    edx,[rbp-0x7e]
   14001f2ee:	mov    r9d,ebp
   14001f2f1:	xor    ecx,ecx
   14001f2f3:	mov    QWORD PTR [rsp+0x20],rax
   14001f2f8:	call   0x14002976c
   14001f2fd:	test   eax,eax
   14001f2ff:	je     0x14001f344
   14001f301:	lea    rax,[rsp+0x100]
   14001f309:	mov    ecx,0x1ff
   14001f30e:	and    WORD PTR [rax],cx
   14001f311:	add    rax,0x2
   14001f315:	sub    rbp,0x1
   14001f319:	jne    0x14001f309
   14001f31b:	mov    rdx,QWORD PTR [rip+0x29fb6]        # 0x1400492d8
   14001f322:	lea    rcx,[rsp+0x100]
   14001f32a:	mov    r8d,0xfe
   14001f330:	call   0x14001d840
   14001f335:	xor    ecx,ecx
   14001f337:	test   eax,eax
   14001f339:	sete   cl
   14001f33c:	mov    DWORD PTR [rsi+0x280],ecx
   14001f342:	jmp    0x14001f34b
   14001f344:	and    DWORD PTR [rsi+0x280],0x0
   14001f34b:	mov    eax,DWORD PTR [rdi+0x4]
   14001f34e:	mov    DWORD PTR [rsi+0x27c],eax
   14001f354:	mov    eax,DWORD PTR [rsi+0x280]
   14001f35a:	mov    DWORD PTR [rdi+0x108],eax
   14001f360:	cmp    r15d,0x1
   14001f364:	jne    0x14001f36d
   14001f366:	mov    eax,DWORD PTR [rsp+0x40]
   14001f36a:	mov    DWORD PTR [rdi+0x8],eax
   14001f36d:	lea    rax,[r15+r15*2]
   14001f371:	lea    rdx,[rip+0x1ba48]        # 0x14003adc0
   14001f378:	mov    rcx,rdi
   14001f37b:	call   QWORD PTR [rdx+rax*8]
   14001f37e:	test   eax,eax
   14001f380:	mov    rax,QWORD PTR [rsp+0x58]
   14001f385:	je     0x14001f3a9
   14001f387:	mov    rcx,r12
   14001f38a:	mov    QWORD PTR [rbx+rdi*1+0x48],rax
   14001f38f:	call   0x14001ca48
   14001f394:	mov    r11d,DWORD PTR [rsp+0x50]
   14001f399:	mov    eax,DWORD PTR [rsp+0x44]
   14001f39d:	mov    DWORD PTR [rdi+r13*4],r11d
   14001f3a1:	mov    DWORD PTR [rdi+0x4],eax
   14001f3a4:	jmp    0x14001f17a
   14001f3a9:	lea    rcx,[rip+0x2a4e0]        # 0x140049890
   14001f3b0:	cmp    rax,rcx
   14001f3b3:	je     0x14001f3de
   14001f3b5:	mov    rdx,QWORD PTR [rbx+rdi*1+0x58]
   14001f3ba:	lock add DWORD PTR [rdx],0xffffffff
   14001f3be:	jne    0x14001f3de
   14001f3c0:	mov    rcx,QWORD PTR [rbx+rdi*1+0x58]
   14001f3c5:	call   0x14001ca48
   14001f3ca:	shl    r13,0x5
   14001f3ce:	mov    rcx,QWORD PTR [r13+rdi*1+0x0]
   14001f3d3:	call   0x14001ca48
   14001f3d8:	and    QWORD PTR [rbx+rdi*1+0x50],0x0
   14001f3de:	mov    DWORD PTR [r12],0x1
   14001f3e6:	mov    QWORD PTR [rbx+rdi*1+0x58],r12
   14001f3eb:	mov    rax,QWORD PTR [rbx+rdi*1+0x48]
   14001f3f0:	mov    rcx,QWORD PTR [rsp+0x200]
   14001f3f8:	xor    rcx,rsp
   14001f3fb:	call   0x14001c500
   14001f400:	mov    rbx,QWORD PTR [rsp+0x268]
   14001f408:	add    rsp,0x210
   14001f40f:	pop    r15
   14001f411:	pop    r14
   14001f413:	pop    r13
   14001f415:	pop    r12
   14001f417:	pop    rdi
   14001f418:	pop    rsi
   14001f419:	pop    rbp
   14001f41a:	ret    
   14001f41b:	int3   
   14001f41c:	rex push rbx
   14001f41e:	push   rbp
   14001f41f:	push   rsi
   14001f420:	push   rdi
   14001f421:	push   r12
   14001f423:	push   r13
   14001f425:	push   r14
   14001f427:	sub    rsp,0xd0
   14001f42e:	mov    rax,QWORD PTR [rip+0x2a02b]        # 0x140049460
   14001f435:	xor    rax,rsp
   14001f438:	mov    QWORD PTR [rsp+0xc0],rax
   14001f440:	mov    rbx,r8
   14001f443:	mov    rdi,rcx
   14001f446:	test   edx,edx
   14001f448:	je     0x14001f46a
   14001f44a:	test   rbx,rbx
   14001f44d:	je     0x14001f459
   14001f44f:	call   0x14001f114
   14001f454:	jmp    0x14001f5a2
   14001f459:	movsxd rax,edx
   14001f45c:	shl    rax,0x5
   14001f460:	mov    rax,QWORD PTR [rax+rcx*1+0x48]
   14001f465:	jmp    0x14001f5a2
   14001f46a:	xor    esi,esi
   14001f46c:	lea    r12d,[rsi+0x1]
   14001f470:	test   rbx,rbx
   14001f473:	je     0x14001f59d
   14001f479:	cmp    BYTE PTR [r8],0x4c
   14001f47d:	jne    0x14001f5c4
   14001f483:	cmp    BYTE PTR [r8+0x1],0x43
   14001f488:	jne    0x14001f5c4
   14001f48e:	cmp    BYTE PTR [r8+0x2],0x5f
   14001f493:	jne    0x14001f5c4
   14001f499:	lea    rdx,[rip+0x1ba34]        # 0x14003aed4
   14001f4a0:	mov    rcx,rbx
   14001f4a3:	call   0x1400298c8
   14001f4a8:	mov    rbp,rax
   14001f4ab:	test   rax,rax
   14001f4ae:	je     0x14001f638
   14001f4b4:	mov    r13,rax
   14001f4b7:	sub    r13,rbx
   14001f4ba:	je     0x14001f638
   14001f4c0:	cmp    BYTE PTR [rax],0x3b
   14001f4c3:	je     0x14001f638
   14001f4c9:	mov    r14d,0x1
   14001f4cf:	lea    r12,[rip+0x1b8f2]        # 0x14003adc8
   14001f4d6:	mov    rcx,QWORD PTR [r12]
   14001f4da:	mov    r8,r13
   14001f4dd:	mov    rdx,rbx
   14001f4e0:	call   0x140029810
   14001f4e5:	test   eax,eax
   14001f4e7:	jne    0x14001f4f7
   14001f4e9:	mov    rcx,QWORD PTR [r12]
   14001f4ed:	call   0x14001c650
   14001f4f2:	cmp    r13,rax
   14001f4f5:	je     0x14001f50a
   14001f4f7:	lea    rax,[rip+0x1b92a]        # 0x14003ae28
   14001f4fe:	add    r12,0x18
   14001f502:	inc    r14d
   14001f505:	cmp    r12,rax
   14001f508:	jle    0x14001f4d6
   14001f50a:	inc    rbp
   14001f50d:	lea    rdx,[rip+0x1b9b8]        # 0x14003aecc
   14001f514:	mov    rcx,rbp
   14001f517:	call   0x140028950
   14001f51c:	mov    rbx,rax
   14001f51f:	test   rax,rax
   14001f522:	jne    0x14001f52e
   14001f524:	cmp    BYTE PTR [rbp+0x0],0x3b
   14001f528:	jne    0x14001f638
   14001f52e:	cmp    r14d,0x5
   14001f532:	jg     0x14001f57e
   14001f534:	lea    rcx,[rsp+0x30]
   14001f539:	mov    r9,rax
   14001f53c:	mov    r8,rbp
   14001f53f:	mov    edx,0x83
   14001f544:	call   0x1400289e4
   14001f549:	test   eax,eax
   14001f54b:	je     0x14001f562
   14001f54d:	and    QWORD PTR [rsp+0x20],0x0
   14001f553:	xor    r9d,r9d
   14001f556:	xor    r8d,r8d
   14001f559:	xor    edx,edx
   14001f55b:	xor    ecx,ecx
   14001f55d:	call   0x14001cbc8
   14001f562:	lea    r8,[rsp+0x30]
   14001f567:	mov    edx,r14d
   14001f56a:	mov    rcx,rdi
   14001f56d:	mov    BYTE PTR [rsp+rbx*1+0x30],0x0
   14001f572:	call   0x14001f114
   14001f577:	test   rax,rax
   14001f57a:	je     0x14001f57e
   14001f57c:	inc    esi
   14001f57e:	add    rbx,rbp
   14001f581:	cmp    BYTE PTR [rbx],0x0
   14001f584:	je     0x14001f592
   14001f586:	inc    rbx
   14001f589:	cmp    BYTE PTR [rbx],0x0
   14001f58c:	jne    0x14001f499
   14001f592:	test   esi,esi
   14001f594:	je     0x14001f638
   14001f59a:	mov    rcx,rdi
   14001f59d:	call   0x14001ecec
   14001f5a2:	mov    rcx,QWORD PTR [rsp+0xc0]
   14001f5aa:	xor    rcx,rsp
   14001f5ad:	call   0x14001c500
   14001f5b2:	add    rsp,0xd0
   14001f5b9:	pop    r14
   14001f5bb:	pop    r13
   14001f5bd:	pop    r12
   14001f5bf:	pop    rdi
   14001f5c0:	pop    rsi
   14001f5c1:	pop    rbp
   14001f5c2:	pop    rbx
   14001f5c3:	ret    
   14001f5c4:	and    DWORD PTR [rsp+0x28],esi
   14001f5c8:	and    QWORD PTR [rsp+0x20],rsi
   14001f5cd:	lea    rdx,[rsp+0x30]
   14001f5d2:	xor    r9d,r9d
   14001f5d5:	mov    r8d,0x83
   14001f5db:	mov    rcx,rbx
   14001f5de:	call   0x14001eed4
   14001f5e3:	test   rax,rax
   14001f5e6:	je     0x14001f5a2
   14001f5e8:	xor    ebx,ebx
   14001f5ea:	lea    rbp,[rdi+0x48]
   14001f5ee:	test   ebx,ebx
   14001f5f0:	je     0x14001f61f
   14001f5f2:	mov    rdx,QWORD PTR [rbp+0x0]
   14001f5f6:	lea    rcx,[rsp+0x30]
   14001f5fb:	call   0x140023f00
   14001f600:	test   eax,eax
   14001f602:	je     0x14001f61d
   14001f604:	lea    r8,[rsp+0x30]
   14001f609:	mov    edx,ebx
   14001f60b:	mov    rcx,rdi
   14001f60e:	call   0x14001f114
   14001f613:	test   rax,rax
   14001f616:	jne    0x14001f61d
   14001f618:	xor    r12d,r12d
   14001f61b:	jmp    0x14001f61f
   14001f61d:	inc    esi
   14001f61f:	inc    ebx
   14001f621:	add    rbp,0x20
   14001f625:	cmp    ebx,0x5
   14001f628:	jle    0x14001f5ee
   14001f62a:	test   r12d,r12d
   14001f62d:	jne    0x14001f59a
   14001f633:	jmp    0x14001f592
   14001f638:	xor    eax,eax
   14001f63a:	jmp    0x14001f5a2
   14001f63f:	int3   
   14001f640:	mov    rax,rsp
   14001f643:	mov    QWORD PTR [rax+0x8],rbx
   14001f647:	mov    QWORD PTR [rax+0x10],rbp
   14001f64b:	mov    QWORD PTR [rax+0x18],rsi
   14001f64f:	mov    QWORD PTR [rax+0x20],rdi
   14001f653:	push   r12
   14001f655:	sub    rsp,0x20
   14001f659:	mov    rsi,rdx
   14001f65c:	mov    ebp,ecx
   14001f65e:	cmp    ecx,0x5
   14001f661:	ja     0x14001f68e
   14001f663:	test   rdx,rdx
   14001f666:	je     0x14001f68e
   14001f668:	mov    r12d,0x1
   14001f66e:	mov    rdx,r12
   14001f671:	lea    ecx,[r12+0xf]
   14001f676:	call   0x140020950
   14001f67b:	mov    rbx,rax
   14001f67e:	test   rax,rax
   14001f681:	jne    0x14001f6ab
   14001f683:	call   0x140020aa4
   14001f688:	mov    DWORD PTR [rax],0xc
   14001f68e:	xor    eax,eax
   14001f690:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f695:	mov    rbp,QWORD PTR [rsp+0x38]
   14001f69a:	mov    rsi,QWORD PTR [rsp+0x40]
   14001f69f:	mov    rdi,QWORD PTR [rsp+0x48]
   14001f6a4:	add    rsp,0x20
   14001f6a8:	pop    r12
   14001f6aa:	ret    
   14001f6ab:	mov    rdx,r12
   14001f6ae:	mov    ecx,0x160
   14001f6b3:	call   0x140020950
   14001f6b8:	mov    QWORD PTR [rbx],rax
   14001f6bb:	test   rax,rax
   14001f6be:	jne    0x14001f6ca
   14001f6c0:	mov    rcx,rbx
   14001f6c3:	call   0x14001ca48
   14001f6c8:	jmp    0x14001f683
   14001f6ca:	mov    rdx,r12
   14001f6cd:	mov    ecx,0x220
   14001f6d2:	call   0x140020950
   14001f6d7:	mov    QWORD PTR [rbx+0x8],rax
   14001f6db:	test   rax,rax
   14001f6de:	jne    0x14001f6ea
   14001f6e0:	mov    rcx,QWORD PTR [rbx]
   14001f6e3:	call   0x14001ca48
   14001f6e8:	jmp    0x14001f6c0
   14001f6ea:	mov    rdi,QWORD PTR [rbx]
   14001f6ed:	test   rdi,rdi
   14001f6f0:	je     0x14001f717
   14001f6f2:	lea    rdx,[rip+0x2a1a7]        # 0x1400498a0
   14001f6f9:	cmp    rdi,rdx
   14001f6fc:	je     0x14001f717
   14001f6fe:	mov    rcx,rdi
   14001f701:	mov    r8d,0x160
   14001f707:	call   0x1400205b0
   14001f70c:	and    DWORD PTR [rdi],0x0
   14001f70f:	mov    rcx,rdi
   14001f712:	call   0x14001e7d0
   14001f717:	mov    rcx,QWORD PTR [rbx]
   14001f71a:	mov    r8,rsi
   14001f71d:	mov    edx,ebp
   14001f71f:	call   0x14001f41c
   14001f724:	test   rax,rax
   14001f727:	je     0x14001f745
   14001f729:	mov    rax,QWORD PTR [rbx]
   14001f72c:	mov    rdx,QWORD PTR [rbx+0x8]
   14001f730:	mov    ecx,DWORD PTR [rax+0x4]
   14001f733:	call   0x140024b44
   14001f738:	test   eax,eax
   14001f73a:	je     0x14001f761
   14001f73c:	mov    rcx,QWORD PTR [rbx+0x8]
   14001f740:	call   0x14001ca48
   14001f745:	mov    rcx,QWORD PTR [rbx]
   14001f748:	call   0x14001e868
   14001f74d:	mov    rcx,QWORD PTR [rbx]
   14001f750:	call   0x14001e654
   14001f755:	mov    rcx,rbx
   14001f758:	call   0x14001ca48
   14001f75d:	xor    ebx,ebx
   14001f75f:	jmp    0x14001f76f
   14001f761:	mov    rax,QWORD PTR [rbx+0x8]
   14001f765:	mov    DWORD PTR [rax],r12d
   14001f768:	mov    rax,QWORD PTR [rbx+0x8]
   14001f76c:	mov    DWORD PTR [rax],r12d
   14001f76f:	mov    rax,rbx
   14001f772:	jmp    0x14001f690
   14001f777:	int3   
   14001f778:	mov    QWORD PTR [rsp+0x8],rsi
   14001f77d:	mov    QWORD PTR [rsp+0x10],rdi
   14001f782:	mov    QWORD PTR [rsp+0x20],r12
   14001f787:	push   r13
   14001f789:	push   r14
   14001f78b:	push   r15
   14001f78d:	sub    rsp,0x40
   14001f791:	mov    r13,rdx
   14001f794:	mov    r14d,ecx
   14001f797:	xor    r12d,r12d
   14001f79a:	cmp    ecx,0x5
   14001f79d:	jbe    0x14001f7c5
   14001f79f:	call   0x140020aa4
   14001f7a4:	mov    DWORD PTR [rax],0x16
   14001f7aa:	and    QWORD PTR [rsp+0x20],r12
   14001f7af:	xor    r9d,r9d
   14001f7b2:	xor    r8d,r8d
   14001f7b5:	xor    edx,edx
   14001f7b7:	xor    ecx,ecx
   14001f7b9:	call   0x14001ccf0
   14001f7be:	xor    eax,eax
   14001f7c0:	jmp    0x14001f97b
   14001f7c5:	call   0x14002412c
   14001f7ca:	mov    rsi,rax
   14001f7cd:	mov    QWORD PTR [rsp+0x70],rax
   14001f7d2:	call   0x14001e968
   14001f7d7:	or     DWORD PTR [rsi+0xc8],0x10
   14001f7de:	mov    edx,0x1
   14001f7e3:	mov    ecx,0x160
   14001f7e8:	call   0x140020950
   14001f7ed:	mov    rdi,rax
   14001f7f0:	test   rax,rax
   14001f7f3:	je     0x14001f971
   14001f7f9:	mov    ecx,0xc
   14001f7fe:	call   0x140028880
   14001f803:	nop
   14001f804:	mov    rdx,QWORD PTR [rsi+0xc0]
   14001f80b:	test   rdx,rdx
   14001f80e:	je     0x14001f82f
   14001f810:	cmp    rdi,rdx
   14001f813:	je     0x14001f82f
   14001f815:	mov    rcx,rdi
   14001f818:	mov    r8d,0x160
   14001f81e:	call   0x1400205b0
   14001f823:	and    DWORD PTR [rdi],0x0
   14001f826:	mov    rcx,rdi
   14001f829:	call   0x14001e7d0
   14001f82e:	nop
   14001f82f:	mov    ecx,0xc
   14001f834:	call   0x140028780
   14001f839:	mov    r8,r13
   14001f83c:	mov    edx,r14d
   14001f83f:	mov    rcx,rdi
   14001f842:	call   0x14001f41c
   14001f847:	mov    r12,rax
   14001f84a:	mov    QWORD PTR [rsp+0x30],rax
   14001f84f:	test   rax,rax
   14001f852:	je     0x14001f963
   14001f858:	test   r13,r13
   14001f85b:	je     0x14001f886
   14001f85d:	lea    rdx,[rip+0x2a02c]        # 0x140049890
   14001f864:	mov    rcx,r13
   14001f867:	call   0x140023f00
   14001f86c:	mov    ecx,DWORD PTR [rip+0x2c292]        # 0x14004bb04
   14001f872:	test   eax,eax
   14001f874:	mov    r13d,0x1
   14001f87a:	cmovne ecx,r13d
   14001f87e:	mov    DWORD PTR [rip+0x2c280],ecx        # 0x14004bb04
   14001f884:	jmp    0x14001f88c
   14001f886:	mov    r13d,0x1
   14001f88c:	mov    ecx,0xc
   14001f891:	call   0x140028880
   14001f896:	nop
   14001f897:	mov    rdx,rdi
   14001f89a:	lea    rcx,[rsi+0xc0]
   14001f8a1:	call   0x14001e910
   14001f8a6:	mov    rcx,rdi
   14001f8a9:	call   0x14001e868
   14001f8ae:	test   BYTE PTR [rsi+0xc8],0x2
   14001f8b5:	jne    0x14001f957
   14001f8bb:	test   BYTE PTR [rip+0x29fbe],r13b        # 0x140049880
   14001f8c2:	jne    0x14001f957
   14001f8c8:	mov    rdx,QWORD PTR [rsi+0xc0]
   14001f8cf:	lea    rcx,[rip+0x2a12a]        # 0x140049a00
   14001f8d6:	call   0x14001e910
   14001f8db:	mov    rdx,QWORD PTR [rip+0x2a11e]        # 0x140049a00
   14001f8e2:	add    rdx,0xc
   14001f8e6:	mov    r8d,0x18
   14001f8ec:	lea    rcx,[rip+0x2c7b5]        # 0x14004c0a8
   14001f8f3:	call   0x1400205b0
   14001f8f8:	mov    r11,QWORD PTR [rip+0x2a101]        # 0x140049a00
   14001f8ff:	mov    eax,DWORD PTR [r11+0x4]
   14001f903:	mov    DWORD PTR [rip+0x2c7b7],eax        # 0x14004c0c0
   14001f909:	mov    eax,DWORD PTR [r11+0x8]
   14001f90d:	mov    DWORD PTR [rip+0x2c7b1],eax        # 0x14004c0c4
   14001f913:	mov    eax,DWORD PTR [r11+0x108]
   14001f91a:	mov    DWORD PTR [rip+0x2a0e8],eax        # 0x140049a08
   14001f920:	mov    rax,QWORD PTR [r11+0x158]
   14001f927:	mov    QWORD PTR [rip+0x2a97a],rax        # 0x14004a2a8
   14001f92e:	mov    rax,QWORD PTR [r11+0x128]
   14001f935:	mov    QWORD PTR [rip+0x2997c],rax        # 0x1400492b8
   14001f93c:	mov    rax,QWORD PTR [r11+0x140]
   14001f943:	mov    QWORD PTR [rip+0x29996],rax        # 0x1400492e0
   14001f94a:	mov    eax,DWORD PTR [r11+0x10c]
   14001f951:	mov    DWORD PTR [rip+0x2ab99],eax        # 0x14004a4f0
   14001f957:	mov    ecx,0xc
   14001f95c:	call   0x140028780
   14001f961:	jmp    0x14001f971
   14001f963:	mov    rcx,rdi
   14001f966:	call   0x14001e868
   14001f96b:	call   0x14001e654
   14001f970:	nop
   14001f971:	and    DWORD PTR [rsi+0xc8],0xffffffef
   14001f978:	mov    rax,r12
   14001f97b:	mov    rsi,QWORD PTR [rsp+0x60]
   14001f980:	mov    rdi,QWORD PTR [rsp+0x68]
   14001f985:	mov    r12,QWORD PTR [rsp+0x78]
   14001f98a:	add    rsp,0x40
   14001f98e:	pop    r15
   14001f990:	pop    r14
   14001f992:	pop    r13
   14001f994:	ret    
   14001f995:	int3   
   14001f996:	int3   
   14001f997:	int3   
   14001f998:	rex push rbp
   14001f99a:	push   r12
   14001f99c:	push   r13
   14001f99e:	push   r14
   14001f9a0:	push   r15
   14001f9a2:	sub    rsp,0x60
   14001f9a6:	lea    rbp,[rsp+0x40]
   14001f9ab:	mov    QWORD PTR [rbp+0x50],rbx
   14001f9af:	mov    QWORD PTR [rbp+0x58],rsi
   14001f9b3:	mov    QWORD PTR [rbp+0x60],rdi
   14001f9b7:	mov    rax,QWORD PTR [rip+0x29aa2]        # 0x140049460
   14001f9be:	xor    rax,rbp
   14001f9c1:	mov    QWORD PTR [rbp+0x18],rax
   14001f9c5:	mov    r10d,DWORD PTR [rip+0x2c13c]        # 0x14004bb08
   14001f9cc:	mov    esi,0x2
   14001f9d1:	xor    edi,edi
   14001f9d3:	mov    r11,r9
   14001f9d6:	mov    QWORD PTR [rbp+0x10],r9
   14001f9da:	mov    DWORD PTR [rbp+0x0],r8d
   14001f9de:	mov    r14d,edx
   14001f9e1:	mov    DWORD PTR [rbp+0x8],edx
   14001f9e4:	mov    rbx,rcx
   14001f9e7:	lea    r13d,[rsi-0x1]
   14001f9eb:	cmp    r10d,edi
   14001f9ee:	jne    0x14001fa3f
   14001f9f0:	lea    r8,[rip+0x1b4e1]        # 0x14003aed8
   14001f9f7:	mov    r9d,r13d
   14001f9fa:	mov    edx,0x100
   14001f9ff:	xor    ecx,ecx
   14001fa01:	mov    DWORD PTR [rsp+0x28],edi
   14001fa05:	mov    QWORD PTR [rsp+0x20],rdi
   14001fa0a:	call   QWORD PTR [rip+0x1a890]        # 0x14003a2a0
   14001fa10:	cmp    eax,edi
   14001fa12:	je     0x14001fa20
   14001fa14:	mov    r10d,r13d
   14001fa17:	mov    DWORD PTR [rip+0x2c0ea],r13d        # 0x14004bb08
   14001fa1e:	jmp    0x14001fa3b
   14001fa20:	call   QWORD PTR [rip+0x1a6a2]        # 0x14003a0c8
   14001fa26:	mov    r10d,DWORD PTR [rip+0x2c0db]        # 0x14004bb08
   14001fa2d:	cmp    eax,0x78
   14001fa30:	cmove  r10d,esi
   14001fa34:	mov    DWORD PTR [rip+0x2c0cd],r10d        # 0x14004bb08
   14001fa3b:	mov    r11,QWORD PTR [rbp+0x10]
   14001fa3f:	mov    r9d,DWORD PTR [rbp+0x70]
   14001fa43:	cmp    r9d,edi
   14001fa46:	jle    0x14001fa7d
   14001fa48:	mov    ecx,r9d
   14001fa4b:	mov    rax,r11
   14001fa4e:	sub    ecx,r13d
   14001fa51:	cmp    BYTE PTR [rax],dil
   14001fa54:	je     0x14001fa60
   14001fa56:	add    rax,r13
   14001fa59:	cmp    ecx,edi
   14001fa5b:	jne    0x14001fa4e
   14001fa5d:	or     ecx,0xffffffff
   14001fa60:	mov    eax,r9d
   14001fa63:	sub    eax,ecx
   14001fa65:	sub    eax,r13d
   14001fa68:	cmp    eax,r9d
   14001fa6b:	jge    0x14001fa77
   14001fa6d:	lea    r9d,[rax+0x1]
   14001fa71:	mov    DWORD PTR [rbp+0x70],r9d
   14001fa75:	jmp    0x14001fa7d
   14001fa77:	mov    r9d,eax
   14001fa7a:	mov    DWORD PTR [rbp+0x70],eax
   14001fa7d:	cmp    r10d,esi
   14001fa80:	je     0x14001fce2
   14001fa86:	cmp    r10d,edi
   14001fa89:	je     0x14001fce2
   14001fa8f:	cmp    r10d,r13d
   14001fa92:	jne    0x14001fd18
   14001fa98:	mov    r12d,DWORD PTR [rbp+0x88]
   14001fa9f:	mov    esi,edi
   14001faa1:	cmp    r12d,edi
   14001faa4:	jne    0x14001faad
   14001faa6:	mov    rax,QWORD PTR [rbx]
   14001faa9:	mov    r12d,DWORD PTR [rax+0x4]
   14001faad:	neg    DWORD PTR [rbp+0x90]
   14001fab3:	mov    r8,r11
   14001fab6:	mov    ecx,r12d
   14001fab9:	sbb    edx,edx
   14001fabb:	mov    DWORD PTR [rsp+0x28],edi
   14001fabf:	mov    QWORD PTR [rsp+0x20],rdi
   14001fac4:	and    edx,0x8
   14001fac7:	add    edx,r13d
   14001faca:	call   QWORD PTR [rip+0x1a6d0]        # 0x14003a1a0
   14001fad0:	movsxd r15,eax
   14001fad3:	cmp    r15d,edi
   14001fad6:	je     0x14001fd18
   14001fadc:	movabs rbx,0xffffffffffffff0
   14001fae6:	mov    r14d,0xdddd
   14001faec:	mov    r13d,0x400
   14001faf2:	jle    0x14001fb4f
   14001faf4:	xor    edx,edx
   14001faf6:	lea    rax,[rdx-0x20]
   14001fafa:	div    r15
   14001fafd:	cmp    rax,0x2
   14001fb01:	jb     0x14001fb4f
   14001fb03:	lea    rcx,[r15+r15*1+0x10]
   14001fb08:	cmp    rcx,r13
   14001fb0b:	ja     0x14001fb3b
   14001fb0d:	lea    rax,[rcx+0xf]
   14001fb11:	cmp    rax,rcx
   14001fb14:	ja     0x14001fb19
   14001fb16:	mov    rax,rbx
   14001fb19:	and    rax,0xfffffffffffffff0
   14001fb1d:	call   0x140036570
   14001fb22:	sub    rsp,rax
   14001fb25:	lea    rdi,[rsp+0x40]
   14001fb2a:	test   rdi,rdi
   14001fb2d:	je     0x14001fd18
   14001fb33:	mov    DWORD PTR [rdi],0xcccc
   14001fb39:	jmp    0x14001fb4b
   14001fb3b:	call   0x14001d66c
   14001fb40:	mov    rdi,rax
   14001fb43:	test   rax,rax
   14001fb46:	je     0x14001fb4f
   14001fb48:	mov    DWORD PTR [rax],r14d
   14001fb4b:	add    rdi,0x10
   14001fb4f:	test   rdi,rdi
   14001fb52:	je     0x14001fd18
   14001fb58:	mov    r9d,DWORD PTR [rbp+0x70]
   14001fb5c:	mov    r8,QWORD PTR [rbp+0x10]
   14001fb60:	mov    edx,0x1
   14001fb65:	mov    ecx,r12d
   14001fb68:	mov    DWORD PTR [rsp+0x28],r15d
   14001fb6d:	mov    QWORD PTR [rsp+0x20],rdi
   14001fb72:	call   QWORD PTR [rip+0x1a628]        # 0x14003a1a0
   14001fb78:	xor    ecx,ecx
   14001fb7a:	cmp    eax,ecx
   14001fb7c:	je     0x14001fccd
   14001fb82:	mov    edx,DWORD PTR [rbp+0x0]
   14001fb85:	mov    DWORD PTR [rsp+0x28],ecx
   14001fb89:	mov    QWORD PTR [rsp+0x20],rcx
   14001fb8e:	mov    ecx,DWORD PTR [rbp+0x8]
   14001fb91:	mov    r9d,r15d
   14001fb94:	mov    r8,rdi
   14001fb97:	call   QWORD PTR [rip+0x1a703]        # 0x14003a2a0
   14001fb9d:	xor    r8d,r8d
   14001fba0:	movsxd rsi,eax
   14001fba3:	cmp    esi,r8d
   14001fba6:	je     0x14001fccd
   14001fbac:	mov    r10d,DWORD PTR [rbp+0x0]
   14001fbb0:	bt     r10d,0xa
   14001fbb5:	jae    0x14001fbf2
   14001fbb7:	mov    eax,DWORD PTR [rbp+0x80]
   14001fbbd:	cmp    eax,r8d
   14001fbc0:	je     0x14001fccd
   14001fbc6:	cmp    esi,eax
   14001fbc8:	jg     0x14001fccd
   14001fbce:	mov    ecx,DWORD PTR [rbp+0x8]
   14001fbd1:	mov    DWORD PTR [rsp+0x28],eax
   14001fbd5:	mov    rax,QWORD PTR [rbp+0x78]
   14001fbd9:	mov    r9d,r15d
   14001fbdc:	mov    r8,rdi
   14001fbdf:	mov    edx,r10d
   14001fbe2:	mov    QWORD PTR [rsp+0x20],rax
   14001fbe7:	call   QWORD PTR [rip+0x1a6b3]        # 0x14003a2a0
   14001fbed:	jmp    0x14001fccd
   14001fbf2:	cmp    esi,r8d
   14001fbf5:	jle    0x14001fc57
   14001fbf7:	xor    edx,edx
   14001fbf9:	lea    rax,[rdx-0x20]
   14001fbfd:	div    rsi
   14001fc00:	cmp    rax,0x2
   14001fc04:	jb     0x14001fc57
   14001fc06:	lea    rcx,[rsi+rsi*1+0x10]
   14001fc0b:	cmp    rcx,r13
   14001fc0e:	ja     0x14001fc3a
   14001fc10:	lea    rax,[rcx+0xf]
   14001fc14:	cmp    rax,rcx
   14001fc17:	ja     0x14001fc1c
   14001fc19:	mov    rax,rbx
   14001fc1c:	and    rax,0xfffffffffffffff0
   14001fc20:	call   0x140036570
   14001fc25:	sub    rsp,rax
   14001fc28:	lea    rbx,[rsp+0x40]
   14001fc2d:	cmp    rbx,r8
   14001fc30:	je     0x14001fc51
   14001fc32:	mov    DWORD PTR [rbx],0xcccc
   14001fc38:	jmp    0x14001fc4d
   14001fc3a:	call   0x14001d66c
   14001fc3f:	xor    r8d,r8d
   14001fc42:	mov    rbx,rax
   14001fc45:	cmp    rax,r8
   14001fc48:	je     0x14001fc51
   14001fc4a:	mov    DWORD PTR [rax],r14d
   14001fc4d:	add    rbx,0x10
   14001fc51:	mov    r10d,DWORD PTR [rbp+0x0]
   14001fc55:	jmp    0x14001fc5a
   14001fc57:	mov    rbx,r8
   14001fc5a:	cmp    rbx,r8
   14001fc5d:	je     0x14001fccd
   14001fc5f:	mov    ecx,DWORD PTR [rbp+0x8]
   14001fc62:	mov    r9d,r15d
   14001fc65:	mov    r8,rdi
   14001fc68:	mov    edx,r10d
   14001fc6b:	mov    DWORD PTR [rsp+0x28],esi
   14001fc6f:	mov    QWORD PTR [rsp+0x20],rbx
   14001fc74:	call   QWORD PTR [rip+0x1a626]        # 0x14003a2a0
   14001fc7a:	xor    ecx,ecx
   14001fc7c:	cmp    eax,ecx
   14001fc7e:	je     0x14001fcbf
   14001fc80:	mov    eax,DWORD PTR [rbp+0x80]
   14001fc86:	xor    edx,edx
   14001fc88:	mov    QWORD PTR [rsp+0x38],rcx
   14001fc8d:	mov    r9d,esi
   14001fc90:	mov    r8,rbx
   14001fc93:	mov    QWORD PTR [rsp+0x30],rcx
   14001fc98:	cmp    eax,ecx
   14001fc9a:	jne    0x14001fca7
   14001fc9c:	mov    DWORD PTR [rsp+0x28],ecx
   14001fca0:	mov    QWORD PTR [rsp+0x20],rcx
   14001fca5:	jmp    0x14001fcb4
   14001fca7:	mov    DWORD PTR [rsp+0x28],eax
   14001fcab:	mov    rax,QWORD PTR [rbp+0x78]
   14001fcaf:	mov    QWORD PTR [rsp+0x20],rax
   14001fcb4:	mov    ecx,r12d
   14001fcb7:	call   QWORD PTR [rip+0x1a56b]        # 0x14003a228
   14001fcbd:	mov    esi,eax
   14001fcbf:	lea    rcx,[rbx-0x10]
   14001fcc3:	cmp    DWORD PTR [rcx],r14d
   14001fcc6:	jne    0x14001fccd
   14001fcc8:	call   0x14001ca48
   14001fccd:	lea    rcx,[rdi-0x10]
   14001fcd1:	cmp    DWORD PTR [rcx],r14d
   14001fcd4:	jne    0x14001fcdb
   14001fcd6:	call   0x14001ca48
   14001fcdb:	mov    eax,esi
   14001fcdd:	jmp    0x14001feaf
   14001fce2:	mov    rsi,rdi
   14001fce5:	mov    r12,rdi
   14001fce8:	cmp    r14d,edi
   14001fceb:	jne    0x14001fcf8
   14001fced:	mov    rax,QWORD PTR [rbx]
   14001fcf0:	mov    r14d,DWORD PTR [rax+0x14]
   14001fcf4:	mov    DWORD PTR [rbp+0x8],r14d
   14001fcf8:	mov    edi,DWORD PTR [rbp+0x88]
   14001fcfe:	test   edi,edi
   14001fd00:	jne    0x14001fd08
   14001fd02:	mov    rax,QWORD PTR [rbx]
   14001fd05:	mov    edi,DWORD PTR [rax+0x4]
   14001fd08:	mov    ecx,r14d
   14001fd0b:	call   0x140029964
   14001fd10:	mov    r13d,eax
   14001fd13:	cmp    eax,0xffffffff
   14001fd16:	jne    0x14001fd1f
   14001fd18:	xor    eax,eax
   14001fd1a:	jmp    0x14001feaf
   14001fd1f:	mov    r15,QWORD PTR [rbp+0x78]
   14001fd23:	mov    r8,QWORD PTR [rbp+0x10]
   14001fd27:	cmp    eax,edi
   14001fd29:	je     0x14001fe6b
   14001fd2f:	xor    ebx,ebx
   14001fd31:	lea    r9,[rbp+0x70]
   14001fd35:	mov    edx,eax
   14001fd37:	mov    ecx,edi
   14001fd39:	mov    DWORD PTR [rsp+0x28],ebx
   14001fd3d:	mov    QWORD PTR [rsp+0x20],rbx
   14001fd42:	call   0x1400299b8
   14001fd47:	mov    rsi,rax
   14001fd4a:	cmp    rax,rbx
   14001fd4d:	je     0x14001fd18
   14001fd4f:	mov    r9d,DWORD PTR [rbp+0x70]
   14001fd53:	mov    edx,DWORD PTR [rbp+0x0]
   14001fd56:	mov    r8,rax
   14001fd59:	mov    ecx,r14d
   14001fd5c:	mov    DWORD PTR [rsp+0x28],ebx
   14001fd60:	mov    QWORD PTR [rsp+0x20],rbx
   14001fd65:	call   QWORD PTR [rip+0x1a52d]        # 0x14003a298
   14001fd6b:	movsxd r9,eax
   14001fd6e:	mov    DWORD PTR [rbp+0x4],r9d
   14001fd72:	cmp    r9d,ebx
   14001fd75:	jne    0x14001fd7e
   14001fd77:	mov    edi,ebx
   14001fd79:	jmp    0x14001fe8e
   14001fd7e:	cmp    r9d,ebx
   14001fd81:	mov    r14d,0xdddd
   14001fd87:	jle    0x14001fdeb
   14001fd89:	mov    rcx,r9
   14001fd8c:	cmp    r9,0xffffffffffffffe0
   14001fd90:	ja     0x14001fdeb
   14001fd92:	add    rcx,0x10
   14001fd96:	cmp    rcx,0x400
   14001fd9d:	ja     0x14001fdd3
   14001fd9f:	lea    rbx,[rcx+0xf]
   14001fda3:	cmp    rbx,rcx
   14001fda6:	ja     0x14001fdb2
   14001fda8:	movabs rbx,0xffffffffffffff0
   14001fdb2:	and    rbx,0xfffffffffffffff0
   14001fdb6:	mov    rax,rbx
   14001fdb9:	call   0x140036570
   14001fdbe:	sub    rsp,rbx
   14001fdc1:	lea    rbx,[rsp+0x40]
   14001fdc6:	test   rbx,rbx
   14001fdc9:	je     0x14001fdf0
   14001fdcb:	mov    DWORD PTR [rbx],0xcccc
   14001fdd1:	jmp    0x14001fde3
   14001fdd3:	call   0x14001d66c
   14001fdd8:	mov    rbx,rax
   14001fddb:	test   rax,rax
   14001fdde:	je     0x14001fde7
   14001fde0:	mov    DWORD PTR [rax],r14d
   14001fde3:	add    rbx,0x10
   14001fde7:	mov    r9d,DWORD PTR [rbp+0x4]
   14001fdeb:	test   rbx,rbx
   14001fdee:	jne    0x14001fdf4
   14001fdf0:	xor    ebx,ebx
   14001fdf2:	jmp    0x14001fd77
   14001fdf4:	movsxd r8,r9d
   14001fdf7:	xor    edx,edx
   14001fdf9:	mov    rcx,rbx
   14001fdfc:	call   0x14001c730
   14001fe01:	mov    r11d,DWORD PTR [rbp+0x4]
   14001fe05:	mov    r9d,DWORD PTR [rbp+0x70]
   14001fe09:	mov    edx,DWORD PTR [rbp+0x0]
   14001fe0c:	mov    ecx,DWORD PTR [rbp+0x8]
   14001fe0f:	mov    DWORD PTR [rsp+0x28],r11d
   14001fe14:	mov    r8,rsi
   14001fe17:	mov    QWORD PTR [rsp+0x20],rbx
   14001fe1c:	call   QWORD PTR [rip+0x1a476]        # 0x14003a298
   14001fe22:	mov    DWORD PTR [rbp+0x4],eax
   14001fe25:	test   eax,eax
   14001fe27:	jne    0x14001fe2d
   14001fe29:	xor    edi,edi
   14001fe2b:	jmp    0x14001fe5b
   14001fe2d:	mov    eax,DWORD PTR [rbp+0x80]
   14001fe33:	lea    r9,[rbp+0x4]
   14001fe37:	mov    r8,rbx
   14001fe3a:	mov    DWORD PTR [rsp+0x28],eax
   14001fe3e:	mov    edx,edi
   14001fe40:	mov    ecx,r13d
   14001fe43:	mov    QWORD PTR [rsp+0x20],r15
   14001fe48:	call   0x1400299b8
   14001fe4d:	mov    edi,DWORD PTR [rbp+0x4]
   14001fe50:	mov    r12,rax
   14001fe53:	xor    eax,eax
   14001fe55:	cmp    r12,rax
   14001fe58:	cmove  edi,eax
   14001fe5b:	lea    rcx,[rbx-0x10]
   14001fe5f:	cmp    DWORD PTR [rcx],r14d
   14001fe62:	jne    0x14001fe8c
   14001fe64:	call   0x14001ca48
   14001fe69:	jmp    0x14001fe8c
   14001fe6b:	mov    eax,DWORD PTR [rbp+0x80]
   14001fe71:	mov    r9d,DWORD PTR [rbp+0x70]
   14001fe75:	mov    edx,DWORD PTR [rbp+0x0]
   14001fe78:	mov    DWORD PTR [rsp+0x28],eax
   14001fe7c:	mov    ecx,r14d
   14001fe7f:	mov    QWORD PTR [rsp+0x20],r15
   14001fe84:	call   QWORD PTR [rip+0x1a40e]        # 0x14003a298
   14001fe8a:	mov    edi,eax
   14001fe8c:	xor    ebx,ebx
   14001fe8e:	cmp    rsi,rbx
   14001fe91:	je     0x14001fe9b
   14001fe93:	mov    rcx,rsi
   14001fe96:	call   0x14001ca48
   14001fe9b:	cmp    r12,rbx
   14001fe9e:	je     0x14001fead
   14001fea0:	cmp    r15,r12
   14001fea3:	je     0x14001fead
   14001fea5:	mov    rcx,r12
   14001fea8:	call   0x14001ca48
   14001fead:	mov    eax,edi
   14001feaf:	mov    rcx,QWORD PTR [rbp+0x18]
   14001feb3:	xor    rcx,rbp
   14001feb6:	call   0x14001c500
   14001febb:	mov    rbx,QWORD PTR [rbp+0x50]
   14001febf:	mov    rsi,QWORD PTR [rbp+0x58]
   14001fec3:	mov    rdi,QWORD PTR [rbp+0x60]
   14001fec7:	lea    rsp,[rbp+0x20]
   14001fecb:	pop    r15
   14001fecd:	pop    r14
   14001fecf:	pop    r13
   14001fed1:	pop    r12
   14001fed3:	pop    rbp
   14001fed4:	ret    
   14001fed5:	int3   
   14001fed6:	int3   
   14001fed7:	int3   
   14001fed8:	mov    QWORD PTR [rsp+0x8],rbx
   14001fedd:	mov    QWORD PTR [rsp+0x10],rsi
   14001fee2:	push   rdi
   14001fee3:	sub    rsp,0x70
   14001fee7:	mov    esi,edx
   14001fee9:	mov    rdx,rcx
   14001feec:	lea    rcx,[rsp+0x50]
   14001fef1:	mov    rbx,r9
   14001fef4:	mov    edi,r8d
   14001fef7:	call   0x14001cf30
   14001fefc:	mov    eax,DWORD PTR [rsp+0xb8]
   14001ff03:	mov    r11d,DWORD PTR [rsp+0xc0]
   14001ff0b:	lea    rcx,[rsp+0x50]
   14001ff10:	mov    DWORD PTR [rsp+0x40],r11d
   14001ff15:	mov    DWORD PTR [rsp+0x38],eax
   14001ff19:	mov    eax,DWORD PTR [rsp+0xb0]
   14001ff20:	mov    DWORD PTR [rsp+0x30],eax
   14001ff24:	mov    rax,QWORD PTR [rsp+0xa8]
   14001ff2c:	mov    r9,rbx
   14001ff2f:	mov    QWORD PTR [rsp+0x28],rax
   14001ff34:	mov    eax,DWORD PTR [rsp+0xa0]
   14001ff3b:	mov    r8d,edi
   14001ff3e:	mov    edx,esi
   14001ff40:	mov    DWORD PTR [rsp+0x20],eax
   14001ff44:	call   0x14001f998
   14001ff49:	cmp    BYTE PTR [rsp+0x68],0x0
   14001ff4e:	je     0x14001ff5c
   14001ff50:	mov    rcx,QWORD PTR [rsp+0x60]
   14001ff55:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001ff5c:	lea    r11,[rsp+0x70]
   14001ff61:	mov    rbx,QWORD PTR [r11+0x10]
   14001ff65:	mov    rsi,QWORD PTR [r11+0x18]
   14001ff69:	mov    rsp,r11
   14001ff6c:	pop    rdi
   14001ff6d:	ret    
   14001ff6e:	int3   
   14001ff6f:	int3   
   14001ff70:	sub    rsp,0x28
   14001ff74:	call   0x14002412c
   14001ff79:	mov    rcx,QWORD PTR [rax+0xc0]
   14001ff80:	cmp    rcx,QWORD PTR [rip+0x29a79]        # 0x140049a00
   14001ff87:	je     0x14001ff9f
   14001ff89:	mov    eax,DWORD PTR [rax+0xc8]
   14001ff8f:	test   DWORD PTR [rip+0x298eb],eax        # 0x140049880
   14001ff95:	jne    0x14001ff9f
   14001ff97:	call   0x14001e968
   14001ff9c:	mov    rcx,rax
   14001ff9f:	mov    rax,QWORD PTR [rcx+0x140]
   14001ffa6:	add    rsp,0x28
   14001ffaa:	ret    
   14001ffab:	int3   
   14001ffac:	rex push rbx
   14001ffae:	sub    rsp,0x40
   14001ffb2:	cmp    DWORD PTR [rip+0x2bb4b],0x0        # 0x14004bb04
   14001ffb9:	movsxd rbx,ecx
   14001ffbc:	jne    0x14001ffce
   14001ffbe:	mov    rax,QWORD PTR [rip+0x29a1b]        # 0x1400499e0
   14001ffc5:	movzx  eax,WORD PTR [rax+rbx*2]
   14001ffc9:	and    eax,0x4
   14001ffcc:	jmp    0x140020024
   14001ffce:	lea    rcx,[rsp+0x20]
   14001ffd3:	xor    edx,edx
   14001ffd5:	call   0x14001cf30
   14001ffda:	mov    rax,QWORD PTR [rsp+0x20]
   14001ffdf:	cmp    DWORD PTR [rax+0x10c],0x1
   14001ffe6:	jle    0x14001fffe
   14001ffe8:	lea    r8,[rsp+0x20]
   14001ffed:	mov    edx,0x4
   14001fff2:	mov    ecx,ebx
   14001fff4:	call   0x140029c40
   14001fff9:	mov    r11d,eax
   14001fffc:	jmp    0x14002000e
   14001fffe:	mov    rax,QWORD PTR [rax+0x140]
   140020005:	movzx  r11d,WORD PTR [rax+rbx*2]
   14002000a:	and    r11d,0x4
   14002000e:	cmp    BYTE PTR [rsp+0x38],0x0
   140020013:	je     0x140020021
   140020015:	mov    rax,QWORD PTR [rsp+0x30]
   14002001a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140020021:	mov    eax,r11d
   140020024:	add    rsp,0x40
   140020028:	pop    rbx
   140020029:	ret    
   14002002a:	int3   
   14002002b:	int3   
   14002002c:	rex push rbx
   14002002e:	sub    rsp,0x40
   140020032:	cmp    DWORD PTR [rip+0x2bacb],0x0        # 0x14004bb04
   140020039:	movsxd rbx,ecx
   14002003c:	jne    0x14002004e
   14002003e:	mov    rax,QWORD PTR [rip+0x2999b]        # 0x1400499e0
   140020045:	movzx  eax,WORD PTR [rax+rbx*2]
   140020049:	and    eax,0x8
   14002004c:	jmp    0x1400200a4
   14002004e:	lea    rcx,[rsp+0x20]
   140020053:	xor    edx,edx
   140020055:	call   0x14001cf30
   14002005a:	mov    rax,QWORD PTR [rsp+0x20]
   14002005f:	cmp    DWORD PTR [rax+0x10c],0x1
   140020066:	jle    0x14002007e
   140020068:	lea    r8,[rsp+0x20]
   14002006d:	mov    edx,0x8
   140020072:	mov    ecx,ebx
   140020074:	call   0x140029c40
   140020079:	mov    r11d,eax
   14002007c:	jmp    0x14002008e
   14002007e:	mov    rax,QWORD PTR [rax+0x140]
   140020085:	movzx  r11d,WORD PTR [rax+rbx*2]
   14002008a:	and    r11d,0x8
   14002008e:	cmp    BYTE PTR [rsp+0x38],0x0
   140020093:	je     0x1400200a1
   140020095:	mov    rax,QWORD PTR [rsp+0x30]
   14002009a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400200a1:	mov    eax,r11d
   1400200a4:	add    rsp,0x40
   1400200a8:	pop    rbx
   1400200a9:	ret    
   1400200aa:	int3   
   1400200ab:	int3   
   1400200ac:	mov    r11,rsp
   1400200af:	mov    QWORD PTR [r11+0x10],rbx
   1400200b3:	mov    QWORD PTR [r11+0x18],rbp
   1400200b7:	mov    QWORD PTR [r11+0x20],rsi
   1400200bb:	push   rdi
   1400200bc:	push   r12
   1400200be:	push   r13
   1400200c0:	push   r14
   1400200c2:	push   r15
   1400200c4:	sub    rsp,0x90
   1400200cb:	mov    rax,QWORD PTR [rip+0x2938e]        # 0x140049460
   1400200d2:	xor    rax,rsp
   1400200d5:	mov    QWORD PTR [rsp+0x88],rax
   1400200dd:	xor    ebx,ebx
   1400200df:	mov    rdi,rcx
   1400200e2:	mov    QWORD PTR [r11-0x58],rcx
   1400200e6:	mov    QWORD PTR [rsp+0x58],rbx
   1400200eb:	mov    r13,rbx
   1400200ee:	mov    r15,rbx
   1400200f1:	mov    r14,rbx
   1400200f4:	mov    r12,rbx
   1400200f7:	mov    QWORD PTR [r11-0x50],rbx
   1400200fb:	cmp    DWORD PTR [rcx+0x14],ebx
   1400200fe:	je     0x140020448
   140020104:	lea    rbp,[rcx+0x4]
   140020108:	lea    esi,[rbx+0x1]
   14002010b:	cmp    DWORD PTR [rbp+0x0],ebx
   14002010e:	jne    0x140020133
   140020110:	movzx  r8d,WORD PTR [rcx+0x30]
   140020115:	lea    rcx,[r11-0x58]
   140020119:	xor    edx,edx
   14002011b:	mov    r9d,0x1004
   140020121:	mov    QWORD PTR [rsp+0x20],rbp
   140020126:	call   0x140025344
   14002012b:	cmp    eax,ebx
   14002012d:	jne    0x140020418
   140020133:	mov    ecx,0x4
   140020138:	call   0x1400208e4
   14002013d:	mov    r12d,0x180
   140020143:	mov    edx,0x2
   140020148:	mov    rcx,r12
   14002014b:	mov    QWORD PTR [rsp+0x58],rax
   140020150:	call   0x140020950
   140020155:	mov    rdx,rsi
   140020158:	mov    rcx,r12
   14002015b:	mov    r13,rax
   14002015e:	call   0x140020950
   140020163:	mov    rdx,rsi
   140020166:	mov    rcx,r12
   140020169:	mov    r15,rax
   14002016c:	call   0x140020950
   140020171:	lea    ecx,[r12-0x7f]
   140020176:	mov    rdx,rsi
   140020179:	mov    r14,rax
   14002017c:	call   0x140020950
   140020181:	mov    r12,rax
   140020184:	mov    rax,QWORD PTR [rsp+0x58]
   140020189:	cmp    rax,rbx
   14002018c:	je     0x140020418
   140020192:	cmp    r13,rbx
   140020195:	je     0x140020418
   14002019b:	cmp    r12,rbx
   14002019e:	je     0x140020418
   1400201a4:	cmp    r15,rbx
   1400201a7:	je     0x140020418
   1400201ad:	cmp    r14,rbx
   1400201b0:	je     0x140020418
   1400201b6:	mov    DWORD PTR [rax],ebx
   1400201b8:	mov    rcx,r12
   1400201bb:	mov    eax,ebx
   1400201bd:	mov    BYTE PTR [rcx],al
   1400201bf:	add    eax,esi
   1400201c1:	add    rcx,rsi
   1400201c4:	cmp    eax,0x100
   1400201c9:	jl     0x1400201bd
   1400201cb:	mov    ecx,DWORD PTR [rbp+0x0]
   1400201ce:	lea    rdx,[rsp+0x70]
   1400201d3:	call   QWORD PTR [rip+0x1a0cf]        # 0x14003a2a8
   1400201d9:	cmp    eax,ebx
   1400201db:	je     0x140020418
   1400201e1:	cmp    DWORD PTR [rsp+0x70],0x5
   1400201e6:	ja     0x140020418
   1400201ec:	movzx  eax,WORD PTR [rsp+0x70]
   1400201f1:	cmp    eax,esi
   1400201f3:	mov    DWORD PTR [rsp+0x50],eax
   1400201f7:	jle    0x140020228
   1400201f9:	cmp    BYTE PTR [rsp+0x76],bl
   1400201fd:	je     0x140020228
   1400201ff:	lea    rcx,[rsp+0x77]
   140020204:	cmp    BYTE PTR [rcx],bl
   140020206:	je     0x140020228
   140020208:	movzx  edx,BYTE PTR [rcx-0x1]
   14002020c:	jmp    0x140020218
   14002020e:	movsxd rax,edx
   140020211:	add    edx,esi
   140020213:	mov    BYTE PTR [rax+r12*1],0x20
   140020218:	movzx  eax,BYTE PTR [rcx]
   14002021b:	cmp    edx,eax
   14002021d:	jle    0x14002020e
   14002021f:	add    rcx,0x2
   140020223:	cmp    BYTE PTR [rcx-0x1],bl
   140020226:	jne    0x140020204
   140020228:	mov    eax,DWORD PTR [rbp+0x0]
   14002022b:	mov    DWORD PTR [rsp+0x38],ebx
   14002022f:	lea    rcx,[r13+0x100]
   140020236:	mov    DWORD PTR [rsp+0x30],ebx
   14002023a:	mov    DWORD PTR [rsp+0x28],eax
   14002023e:	mov    QWORD PTR [rsp+0x20],rcx
   140020243:	xor    ecx,ecx
   140020245:	mov    r9d,0x100
   14002024b:	mov    r8,r12
   14002024e:	mov    edx,esi
   140020250:	call   0x14002976c
   140020255:	cmp    eax,ebx
   140020257:	je     0x140020418
   14002025d:	mov    eax,DWORD PTR [rbp+0x0]
   140020260:	mov    edx,DWORD PTR [rdi+0x14]
   140020263:	mov    DWORD PTR [rsp+0x40],ebx
   140020267:	mov    DWORD PTR [rsp+0x38],eax
   14002026b:	mov    eax,0xff
   140020270:	lea    rcx,[r15+0x81]
   140020277:	mov    DWORD PTR [rsp+0x30],eax
   14002027b:	mov    QWORD PTR [rsp+0x28],rcx
   140020280:	lea    r8d,[rax+0x1]
   140020284:	lea    r9,[r12+0x1]
   140020289:	xor    ecx,ecx
   14002028b:	mov    DWORD PTR [rsp+0x20],eax
   14002028f:	call   0x14001fed8
   140020294:	cmp    eax,ebx
   140020296:	je     0x140020418
   14002029c:	mov    eax,DWORD PTR [rbp+0x0]
   14002029f:	mov    edx,DWORD PTR [rdi+0x14]
   1400202a2:	mov    DWORD PTR [rsp+0x40],ebx
   1400202a6:	mov    DWORD PTR [rsp+0x38],eax
   1400202aa:	mov    eax,0xff
   1400202af:	lea    rcx,[r14+0x81]
   1400202b6:	mov    DWORD PTR [rsp+0x30],eax
   1400202ba:	mov    QWORD PTR [rsp+0x28],rcx
   1400202bf:	lea    r9,[r12+0x1]
   1400202c4:	xor    ecx,ecx
   1400202c6:	mov    r8d,0x200
   1400202cc:	mov    DWORD PTR [rsp+0x20],eax
   1400202d0:	call   0x14001fed8
   1400202d5:	cmp    eax,ebx
   1400202d7:	je     0x140020418
   1400202dd:	cmp    DWORD PTR [rsp+0x50],esi
   1400202e1:	lea    rbp,[r13+0xfe]
   1400202e8:	mov    WORD PTR [rbp+0x0],bx
   1400202ec:	mov    BYTE PTR [r15+0x7f],bl
   1400202f0:	mov    BYTE PTR [r14+0x7f],bl
   1400202f4:	mov    BYTE PTR [r15+0x80],bl
   1400202fb:	mov    BYTE PTR [r14+0x80],bl
   140020302:	jle    0x14002033d
   140020304:	cmp    BYTE PTR [rsp+0x76],bl
   140020308:	je     0x14002033d
   14002030a:	lea    rcx,[rsp+0x77]
   14002030f:	cmp    BYTE PTR [rcx],bl
   140020311:	je     0x14002033d
   140020313:	movzx  edx,BYTE PTR [rcx-0x1]
   140020317:	jmp    0x14002032d
   140020319:	movsxd rax,edx
   14002031c:	mov    r8d,0x8000
   140020322:	add    edx,esi
   140020324:	mov    WORD PTR [r13+rax*2+0x100],r8w
   14002032d:	movzx  eax,BYTE PTR [rcx]
   140020330:	cmp    edx,eax
   140020332:	jle    0x140020319
   140020334:	add    rcx,0x2
   140020338:	cmp    BYTE PTR [rcx-0x1],bl
   14002033b:	jne    0x14002030f
   14002033d:	lea    rdx,[r13+0x200]
   140020344:	mov    r8d,0xfe
   14002034a:	mov    rcx,r13
   14002034d:	call   0x1400205b0
   140020352:	lea    rdx,[r15+0x100]
   140020359:	mov    r8d,0x7f
   14002035f:	mov    rcx,r15
   140020362:	call   0x1400205b0
   140020367:	lea    rdx,[r14+0x100]
   14002036e:	mov    r8d,0x7f
   140020374:	mov    rcx,r14
   140020377:	call   0x1400205b0
   14002037c:	mov    rcx,QWORD PTR [rdi+0x130]
   140020383:	cmp    rcx,rbx
   140020386:	je     0x1400203cd
   140020388:	lock add DWORD PTR [rcx],0xffffffff
   14002038c:	jne    0x1400203cd
   14002038e:	mov    rcx,QWORD PTR [rdi+0x138]
   140020395:	sub    rcx,0xfe
   14002039c:	call   0x14001ca48
   1400203a1:	mov    rcx,QWORD PTR [rdi+0x148]
   1400203a8:	add    rcx,0xffffffffffffff80
   1400203ac:	call   0x14001ca48
   1400203b1:	mov    rcx,QWORD PTR [rdi+0x150]
   1400203b8:	add    rcx,0xffffffffffffff80
   1400203bc:	call   0x14001ca48
   1400203c1:	mov    rcx,QWORD PTR [rdi+0x130]
   1400203c8:	call   0x14001ca48
   1400203cd:	mov    rax,QWORD PTR [rsp+0x58]
   1400203d2:	mov    DWORD PTR [rax],esi
   1400203d4:	mov    QWORD PTR [rdi+0x130],rax
   1400203db:	lea    rax,[r13+0x100]
   1400203e2:	mov    QWORD PTR [rdi+0x140],rax
   1400203e9:	lea    rax,[r15+0x80]
   1400203f0:	mov    QWORD PTR [rdi+0x138],rbp
   1400203f7:	mov    QWORD PTR [rdi+0x148],rax
   1400203fe:	lea    rax,[r14+0x80]
   140020405:	mov    QWORD PTR [rdi+0x150],rax
   14002040c:	mov    eax,DWORD PTR [rsp+0x50]
   140020410:	mov    DWORD PTR [rdi+0x10c],eax
   140020416:	jmp    0x14002043c
   140020418:	mov    rcx,QWORD PTR [rsp+0x58]
   14002041d:	call   0x14001ca48
   140020422:	mov    rcx,r13
   140020425:	call   0x14001ca48
   14002042a:	mov    rcx,r15
   14002042d:	call   0x14001ca48
   140020432:	mov    rcx,r14
   140020435:	call   0x14001ca48
   14002043a:	mov    ebx,esi
   14002043c:	mov    rcx,r12
   14002043f:	call   0x14001ca48
   140020444:	mov    eax,ebx
   140020446:	jmp    0x14002049d
   140020448:	mov    rax,QWORD PTR [rcx+0x130]
   14002044f:	cmp    rax,rbx
   140020452:	je     0x140020458
   140020454:	lock add DWORD PTR [rax],0xffffffff
   140020458:	lea    rax,[rip+0x1ab81]        # 0x14003afe0
   14002045f:	mov    esi,0x1
   140020464:	mov    QWORD PTR [rcx+0x130],rbx
   14002046b:	mov    QWORD PTR [rcx+0x140],rax
   140020472:	lea    rax,[rip+0x1aff7]        # 0x14003b470
   140020479:	mov    QWORD PTR [rcx+0x138],rbx
   140020480:	mov    QWORD PTR [rcx+0x148],rax
   140020487:	lea    rax,[rip+0x1b162]        # 0x14003b5f0
   14002048e:	mov    DWORD PTR [rcx+0x10c],esi
   140020494:	mov    QWORD PTR [rcx+0x150],rax
   14002049b:	xor    eax,eax
   14002049d:	mov    rcx,QWORD PTR [rsp+0x88]
   1400204a5:	xor    rcx,rsp
   1400204a8:	call   0x14001c500
   1400204ad:	lea    r11,[rsp+0x90]
   1400204b5:	mov    rbx,QWORD PTR [r11+0x38]
   1400204b9:	mov    rbp,QWORD PTR [r11+0x40]
   1400204bd:	mov    rsi,QWORD PTR [r11+0x48]
   1400204c1:	mov    rsp,r11
   1400204c4:	pop    r15
   1400204c6:	pop    r14
   1400204c8:	pop    r13
   1400204ca:	pop    r12
   1400204cc:	pop    rdi
   1400204cd:	ret    
   1400204ce:	int3   
   1400204cf:	int3   
   1400204d0:	sub    rsp,0x28
   1400204d4:	call   0x14002412c
   1400204d9:	mov    rcx,QWORD PTR [rax+0xc0]
   1400204e0:	cmp    rcx,QWORD PTR [rip+0x29519]        # 0x140049a00
   1400204e7:	je     0x1400204ff
   1400204e9:	mov    eax,DWORD PTR [rax+0xc8]
   1400204ef:	test   DWORD PTR [rip+0x2938b],eax        # 0x140049880
   1400204f5:	jne    0x1400204ff
   1400204f7:	call   0x14001e968
   1400204fc:	mov    rcx,rax
   1400204ff:	mov    eax,DWORD PTR [rcx+0x10c]
   140020505:	add    rsp,0x28
   140020509:	ret    
   14002050a:	int3   
   14002050b:	int3   
   14002050c:	sub    rsp,0x28
   140020510:	test   rcx,rcx
   140020513:	jne    0x14002051c
   140020515:	call   0x1400204d0
   14002051a:	jmp    0x140020525
   14002051c:	mov    rax,QWORD PTR [rcx]
   14002051f:	mov    eax,DWORD PTR [rax+0x10c]
   140020525:	add    rsp,0x28
   140020529:	ret    
   14002052a:	int3   
   14002052b:	int3   
   14002052c:	sub    rsp,0x28
   140020530:	call   0x14002412c
   140020535:	mov    rcx,QWORD PTR [rax+0xc0]
   14002053c:	cmp    rcx,QWORD PTR [rip+0x294bd]        # 0x140049a00
   140020543:	je     0x14002055b
   140020545:	mov    eax,DWORD PTR [rax+0xc8]
   14002054b:	test   DWORD PTR [rip+0x2932f],eax        # 0x140049880
   140020551:	jne    0x14002055b
   140020553:	call   0x14001e968
   140020558:	mov    rcx,rax
   14002055b:	mov    eax,DWORD PTR [rcx+0x4]
   14002055e:	add    rsp,0x28
   140020562:	ret    
   140020563:	int3   
   140020564:	sub    rsp,0x28
   140020568:	call   0x14002412c
   14002056d:	mov    rcx,QWORD PTR [rax+0xc0]
   140020574:	cmp    rcx,QWORD PTR [rip+0x29485]        # 0x140049a00
   14002057b:	je     0x140020593
   14002057d:	mov    eax,DWORD PTR [rax+0xc8]
   140020583:	test   DWORD PTR [rip+0x292f7],eax        # 0x140049880
   140020589:	jne    0x140020593
   14002058b:	call   0x14001e968
   140020590:	mov    rcx,rax
   140020593:	lea    rax,[rcx+0xc]
   140020597:	add    rsp,0x28
   14002059b:	ret    
   14002059c:	int3   
   14002059d:	int3   
   14002059e:	int3   
   14002059f:	int3   
   1400205a0:	int3   
   1400205a1:	int3   
   1400205a2:	int3   
   1400205a3:	int3   
   1400205a4:	int3   
   1400205a5:	int3   
   1400205a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400205b0:	mov    r11,rcx
   1400205b3:	sub    rdx,rcx
   1400205b6:	jb     0x14002075a
   1400205bc:	cmp    r8,0x8
   1400205c0:	jb     0x140020623
   1400205c2:	test   cl,0x7
   1400205c5:	je     0x1400205fd
   1400205c7:	test   cl,0x1
   1400205ca:	je     0x1400205d7
   1400205cc:	mov    al,BYTE PTR [rdx+rcx*1]
   1400205cf:	dec    r8
   1400205d2:	mov    BYTE PTR [rcx],al
   1400205d4:	inc    rcx
   1400205d7:	test   cl,0x2
   1400205da:	je     0x1400205eb
   1400205dc:	mov    ax,WORD PTR [rdx+rcx*1]
   1400205e0:	sub    r8,0x2
   1400205e4:	mov    WORD PTR [rcx],ax
   1400205e7:	add    rcx,0x2
   1400205eb:	test   cl,0x4
   1400205ee:	je     0x1400205fd
   1400205f0:	mov    eax,DWORD PTR [rdx+rcx*1]
   1400205f3:	sub    r8,0x4
   1400205f7:	mov    DWORD PTR [rcx],eax
   1400205f9:	add    rcx,0x4
   1400205fd:	mov    r9,r8
   140020600:	shr    r9,0x5
   140020604:	jne    0x140020657
   140020606:	mov    r9,r8
   140020609:	shr    r9,0x3
   14002060d:	je     0x140020623
   14002060f:	mov    rax,QWORD PTR [rdx+rcx*1]
   140020613:	mov    QWORD PTR [rcx],rax
   140020616:	add    rcx,0x8
   14002061a:	dec    r9
   14002061d:	jne    0x14002060f
   14002061f:	and    r8,0x7
   140020623:	test   r8,r8
   140020626:	jne    0x140020630
   140020628:	mov    rax,r11
   14002062b:	ret    
   14002062c:	nop    DWORD PTR [rax+0x0]
   140020630:	mov    al,BYTE PTR [rdx+rcx*1]
   140020633:	mov    BYTE PTR [rcx],al
   140020635:	inc    rcx
   140020638:	dec    r8
   14002063b:	jne    0x140020630
   14002063d:	mov    rax,r11
   140020640:	ret    
   140020641:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140020650:	data16 data16 xchg ax,ax
   140020654:	data16 xchg ax,ax
   140020657:	cmp    r9,0x2000
   14002065e:	jae    0x1400206a2
   140020660:	mov    rax,QWORD PTR [rdx+rcx*1]
   140020664:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140020669:	add    rcx,0x20
   14002066d:	mov    QWORD PTR [rcx-0x20],rax
   140020671:	mov    QWORD PTR [rcx-0x18],r10
   140020675:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14002067a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14002067f:	dec    r9
   140020682:	mov    QWORD PTR [rcx-0x10],rax
   140020686:	mov    QWORD PTR [rcx-0x8],r10
   14002068a:	jne    0x140020660
   14002068c:	and    r8,0x1f
   140020690:	jmp    0x140020606
   140020695:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400206a0:	xchg   ax,ax
   1400206a2:	cmp    rdx,0x1000
   1400206a9:	jb     0x140020660
   1400206ab:	mov    eax,0x20
   1400206b0:	prefetchnta BYTE PTR [rdx+rcx*1]
   1400206b4:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   1400206b9:	add    rcx,0x80
   1400206c0:	dec    eax
   1400206c2:	jne    0x1400206b0
   1400206c4:	sub    rcx,0x1000
   1400206cb:	mov    eax,0x40
   1400206d0:	mov    r9,QWORD PTR [rdx+rcx*1]
   1400206d4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   1400206d9:	movnti QWORD PTR [rcx],r9
   1400206dd:	movnti QWORD PTR [rcx+0x8],r10
   1400206e2:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   1400206e7:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   1400206ec:	movnti QWORD PTR [rcx+0x10],r9
   1400206f1:	movnti QWORD PTR [rcx+0x18],r10
   1400206f6:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   1400206fb:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   140020700:	add    rcx,0x40
   140020704:	movnti QWORD PTR [rcx-0x20],r9
   140020709:	movnti QWORD PTR [rcx-0x18],r10
   14002070e:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   140020713:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   140020718:	dec    eax
   14002071a:	movnti QWORD PTR [rcx-0x10],r9
   14002071f:	movnti QWORD PTR [rcx-0x8],r10
   140020724:	jne    0x1400206d0
   140020726:	sub    r8,0x1000
   14002072d:	cmp    r8,0x1000
   140020734:	jae    0x1400206ab
   14002073a:	lock or BYTE PTR [rsp],0x0
   14002073f:	jmp    0x1400205fd
   140020744:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140020750:	data16 data16 xchg ax,ax
   140020754:	data16 data16 xchg ax,ax
   140020758:	xchg   ax,ax
   14002075a:	add    rcx,r8
   14002075d:	cmp    r8,0x8
   140020761:	jb     0x1400207c4
   140020763:	test   cl,0x7
   140020766:	je     0x14002079e
   140020768:	test   cl,0x1
   14002076b:	je     0x140020778
   14002076d:	dec    rcx
   140020770:	mov    al,BYTE PTR [rdx+rcx*1]
   140020773:	dec    r8
   140020776:	mov    BYTE PTR [rcx],al
   140020778:	test   cl,0x2
   14002077b:	je     0x14002078c
   14002077d:	sub    rcx,0x2
   140020781:	mov    ax,WORD PTR [rdx+rcx*1]
   140020785:	sub    r8,0x2
   140020789:	mov    WORD PTR [rcx],ax
   14002078c:	test   cl,0x4
   14002078f:	je     0x14002079e
   140020791:	sub    rcx,0x4
   140020795:	mov    eax,DWORD PTR [rdx+rcx*1]
   140020798:	sub    r8,0x4
   14002079c:	mov    DWORD PTR [rcx],eax
   14002079e:	mov    r9,r8
   1400207a1:	shr    r9,0x5
   1400207a5:	jne    0x1400207f7
   1400207a7:	mov    r9,r8
   1400207aa:	shr    r9,0x3
   1400207ae:	je     0x1400207c4
   1400207b0:	sub    rcx,0x8
   1400207b4:	mov    rax,QWORD PTR [rdx+rcx*1]
   1400207b8:	dec    r9
   1400207bb:	mov    QWORD PTR [rcx],rax
   1400207be:	jne    0x1400207b0
   1400207c0:	and    r8,0x7
   1400207c4:	test   r8,r8
   1400207c7:	jne    0x1400207d0
   1400207c9:	mov    rax,r11
   1400207cc:	ret    
   1400207cd:	nop    DWORD PTR [rax]
   1400207d0:	dec    rcx
   1400207d3:	mov    al,BYTE PTR [rdx+rcx*1]
   1400207d6:	dec    r8
   1400207d9:	mov    BYTE PTR [rcx],al
   1400207db:	jne    0x1400207d0
   1400207dd:	mov    rax,r11
   1400207e0:	ret    
   1400207e1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400207f0:	data16 data16 xchg ax,ax
   1400207f4:	data16 xchg ax,ax
   1400207f7:	cmp    r9,0x2000
   1400207fe:	jae    0x140020842
   140020800:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140020805:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14002080a:	sub    rcx,0x20
   14002080e:	mov    QWORD PTR [rcx+0x18],rax
   140020812:	mov    QWORD PTR [rcx+0x10],r10
   140020816:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14002081b:	mov    r10,QWORD PTR [rdx+rcx*1]
   14002081f:	dec    r9
   140020822:	mov    QWORD PTR [rcx+0x8],rax
   140020826:	mov    QWORD PTR [rcx],r10
   140020829:	jne    0x140020800
   14002082b:	and    r8,0x1f
   14002082f:	jmp    0x1400207a7
   140020834:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140020840:	xchg   ax,ax
   140020842:	cmp    rdx,0xfffffffffffff000
   140020849:	ja     0x140020800
   14002084b:	mov    eax,0x20
   140020850:	sub    rcx,0x80
   140020857:	prefetchnta BYTE PTR [rdx+rcx*1]
   14002085b:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140020860:	dec    eax
   140020862:	jne    0x140020850
   140020864:	add    rcx,0x1000
   14002086b:	mov    eax,0x40
   140020870:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   140020875:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14002087a:	movnti QWORD PTR [rcx-0x8],r9
   14002087f:	movnti QWORD PTR [rcx-0x10],r10
   140020884:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   140020889:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   14002088e:	movnti QWORD PTR [rcx-0x18],r9
   140020893:	movnti QWORD PTR [rcx-0x20],r10
   140020898:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   14002089d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   1400208a2:	sub    rcx,0x40
   1400208a6:	movnti QWORD PTR [rcx+0x18],r9
   1400208ab:	movnti QWORD PTR [rcx+0x10],r10
   1400208b0:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   1400208b5:	mov    r10,QWORD PTR [rdx+rcx*1]
   1400208b9:	dec    eax
   1400208bb:	movnti QWORD PTR [rcx+0x8],r9
   1400208c0:	movnti QWORD PTR [rcx],r10
   1400208c4:	jne    0x140020870
   1400208c6:	sub    r8,0x1000
   1400208cd:	cmp    r8,0x1000
   1400208d4:	jae    0x14002084b
   1400208da:	lock or BYTE PTR [rsp],0x0
   1400208df:	jmp    0x14002079e
   1400208e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400208e9:	mov    QWORD PTR [rsp+0x10],rbp
   1400208ee:	mov    QWORD PTR [rsp+0x18],rsi
   1400208f3:	push   rdi
   1400208f4:	sub    rsp,0x20
   1400208f8:	xor    edi,edi
   1400208fa:	mov    rsi,rcx
   1400208fd:	or     ebp,0xffffffff
   140020900:	mov    rcx,rsi
   140020903:	call   0x14001d66c
   140020908:	mov    rbx,rax
   14002090b:	test   rax,rax
   14002090e:	jne    0x140020938
   140020910:	cmp    DWORD PTR [rip+0x2b1f6],eax        # 0x14004bb0c
   140020916:	jbe    0x140020938
   140020918:	mov    ecx,edi
   14002091a:	call   QWORD PTR [rip+0x19910]        # 0x14003a230
   140020920:	lea    r11d,[rdi+0x3e8]
   140020927:	cmp    r11d,DWORD PTR [rip+0x2b1de]        # 0x14004bb0c
   14002092e:	mov    edi,r11d
   140020931:	cmova  edi,ebp
   140020934:	cmp    edi,ebp
   140020936:	jne    0x140020900
   140020938:	mov    rbp,QWORD PTR [rsp+0x38]
   14002093d:	mov    rsi,QWORD PTR [rsp+0x40]
   140020942:	mov    rax,rbx
   140020945:	mov    rbx,QWORD PTR [rsp+0x30]
   14002094a:	add    rsp,0x20
   14002094e:	pop    rdi
   14002094f:	ret    
   140020950:	mov    rax,rsp
   140020953:	mov    QWORD PTR [rax+0x8],rbx
   140020957:	mov    QWORD PTR [rax+0x10],rbp
   14002095b:	mov    QWORD PTR [rax+0x18],rsi
   14002095f:	mov    QWORD PTR [rax+0x20],rdi
   140020963:	push   r12
   140020965:	sub    rsp,0x20
   140020969:	xor    edi,edi
   14002096b:	mov    rsi,rdx
   14002096e:	mov    rbp,rcx
   140020971:	or     r12d,0xffffffff
   140020975:	xor    r8d,r8d
   140020978:	mov    rdx,rsi
   14002097b:	mov    rcx,rbp
   14002097e:	call   0x140029d4c
   140020983:	mov    rbx,rax
   140020986:	test   rax,rax
   140020989:	jne    0x1400209b5
   14002098b:	cmp    DWORD PTR [rip+0x2b17b],eax        # 0x14004bb0c
   140020991:	jbe    0x1400209b5
   140020993:	mov    ecx,edi
   140020995:	call   QWORD PTR [rip+0x19895]        # 0x14003a230
   14002099b:	lea    r11d,[rdi+0x3e8]
   1400209a2:	cmp    r11d,DWORD PTR [rip+0x2b163]        # 0x14004bb0c
   1400209a9:	mov    edi,r11d
   1400209ac:	cmova  edi,r12d
   1400209b0:	cmp    edi,r12d
   1400209b3:	jne    0x140020975
   1400209b5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400209ba:	mov    rsi,QWORD PTR [rsp+0x40]
   1400209bf:	mov    rdi,QWORD PTR [rsp+0x48]
   1400209c4:	mov    rax,rbx
   1400209c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400209cc:	add    rsp,0x20
   1400209d0:	pop    r12
   1400209d2:	ret    
   1400209d3:	int3   
   1400209d4:	mov    rax,rsp
   1400209d7:	mov    QWORD PTR [rax+0x8],rbx
   1400209db:	mov    QWORD PTR [rax+0x10],rbp
   1400209df:	mov    QWORD PTR [rax+0x18],rsi
   1400209e3:	mov    QWORD PTR [rax+0x20],rdi
   1400209e7:	push   r12
   1400209e9:	sub    rsp,0x20
   1400209ed:	xor    esi,esi
   1400209ef:	mov    rdi,rdx
   1400209f2:	mov    rbp,rcx
   1400209f5:	or     r12d,0xffffffff
   1400209f9:	mov    rdx,rdi
   1400209fc:	mov    rcx,rbp
   1400209ff:	call   0x140025788
   140020a04:	mov    rbx,rax
   140020a07:	test   rax,rax
   140020a0a:	jne    0x140020a3b
   140020a0c:	test   rdi,rdi
   140020a0f:	je     0x140020a3b
   140020a11:	cmp    DWORD PTR [rip+0x2b0f5],eax        # 0x14004bb0c
   140020a17:	jbe    0x140020a3b
   140020a19:	mov    ecx,esi
   140020a1b:	call   QWORD PTR [rip+0x1980f]        # 0x14003a230
   140020a21:	lea    r11d,[rsi+0x3e8]
   140020a28:	cmp    r11d,DWORD PTR [rip+0x2b0dd]        # 0x14004bb0c
   140020a2f:	mov    esi,r11d
   140020a32:	cmova  esi,r12d
   140020a36:	cmp    esi,r12d
   140020a39:	jne    0x1400209f9
   140020a3b:	mov    rbp,QWORD PTR [rsp+0x38]
   140020a40:	mov    rsi,QWORD PTR [rsp+0x40]
   140020a45:	mov    rdi,QWORD PTR [rsp+0x48]
   140020a4a:	mov    rax,rbx
   140020a4d:	mov    rbx,QWORD PTR [rsp+0x30]
   140020a52:	add    rsp,0x20
   140020a56:	pop    r12
   140020a58:	ret    
   140020a59:	int3   
   140020a5a:	int3   
   140020a5b:	int3   
   140020a5c:	lea    r9,[rip+0x2888d]        # 0x1400492f0
   140020a63:	xor    eax,eax
   140020a65:	mov    rdx,r9
   140020a68:	lea    r8d,[rax+0x8]
   140020a6c:	cmp    ecx,DWORD PTR [rdx]
   140020a6e:	je     0x140020a9b
   140020a70:	inc    eax
   140020a72:	add    rdx,r8
   140020a75:	cmp    eax,0x2d
   140020a78:	jb     0x140020a6c
   140020a7a:	lea    eax,[rcx-0x13]
   140020a7d:	cmp    eax,0x11
   140020a80:	ja     0x140020a88
   140020a82:	mov    eax,0xd
   140020a87:	ret    
   140020a88:	add    ecx,0xffffff44
   140020a8e:	mov    eax,0x16
   140020a93:	cmp    ecx,0xe
   140020a96:	cmovbe eax,r8d
   140020a9a:	ret    
   140020a9b:	cdqe   
   140020a9d:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   140020aa2:	ret    
   140020aa3:	int3   
   140020aa4:	sub    rsp,0x28
   140020aa8:	call   0x1400240a8
   140020aad:	test   rax,rax
   140020ab0:	jne    0x140020abb
   140020ab2:	lea    rax,[rip+0x2899f]        # 0x140049458
   140020ab9:	jmp    0x140020abf
   140020abb:	add    rax,0x10
   140020abf:	add    rsp,0x28
   140020ac3:	ret    
   140020ac4:	sub    rsp,0x28
   140020ac8:	call   0x1400240a8
   140020acd:	test   rax,rax
   140020ad0:	jne    0x140020adb
   140020ad2:	lea    rax,[rip+0x28983]        # 0x14004945c
   140020ad9:	jmp    0x140020adf
   140020adb:	add    rax,0x14
   140020adf:	add    rsp,0x28
   140020ae3:	ret    
   140020ae4:	rex push rbx
   140020ae6:	sub    rsp,0x20
   140020aea:	mov    ebx,ecx
   140020aec:	call   0x1400240a8
   140020af1:	test   rax,rax
   140020af4:	jne    0x140020aff
   140020af6:	lea    rax,[rip+0x2895f]        # 0x14004945c
   140020afd:	jmp    0x140020b03
   140020aff:	add    rax,0x14
   140020b03:	mov    DWORD PTR [rax],ebx
   140020b05:	call   0x1400240a8
   140020b0a:	lea    r10,[rip+0x28947]        # 0x140049458
   140020b11:	test   rax,rax
   140020b14:	je     0x140020b1a
   140020b16:	lea    r10,[rax+0x10]
   140020b1a:	mov    ecx,ebx
   140020b1c:	call   0x140020a5c
   140020b21:	mov    DWORD PTR [r10],eax
   140020b24:	add    rsp,0x20
   140020b28:	pop    rbx
   140020b29:	ret    
   140020b2a:	int3   
   140020b2b:	int3   
   140020b2c:	rex push rbx
   140020b2e:	sub    rsp,0x20
   140020b32:	mov    r11d,DWORD PTR [r8]
   140020b35:	mov    rbx,rdx
   140020b38:	mov    r9,rcx
   140020b3b:	and    r11d,0xfffffff8
   140020b3f:	test   BYTE PTR [r8],0x4
   140020b43:	mov    r10,rcx
   140020b46:	je     0x140020b5b
   140020b48:	mov    eax,DWORD PTR [r8+0x8]
   140020b4c:	movsxd r10,DWORD PTR [r8+0x4]
   140020b50:	neg    eax
   140020b52:	add    r10,rcx
   140020b55:	movsxd rcx,eax
   140020b58:	and    r10,rcx
   140020b5b:	movsxd rax,r11d
   140020b5e:	mov    rdx,QWORD PTR [rax+r10*1]
   140020b62:	mov    rax,QWORD PTR [rbx+0x10]
   140020b66:	mov    ecx,DWORD PTR [rax+0x8]
   140020b69:	add    rcx,QWORD PTR [rbx+0x8]
   140020b6d:	test   BYTE PTR [rcx+0x3],0xf
   140020b71:	je     0x140020b7f
   140020b73:	movzx  eax,BYTE PTR [rcx+0x3]
   140020b77:	and    eax,0xfffffff0
   140020b7a:	cdqe   
   140020b7c:	add    r9,rax
   140020b7f:	xor    r9,rdx
   140020b82:	mov    rcx,r9
   140020b85:	add    rsp,0x20
   140020b89:	pop    rbx
   140020b8a:	jmp    0x14001c500
   140020b8f:	int3   
   140020b90:	sub    rsp,0x28
   140020b94:	mov    r8,QWORD PTR [r9+0x38]
   140020b98:	mov    rcx,rdx
   140020b9b:	mov    rdx,r9
   140020b9e:	call   0x140020b2c
   140020ba3:	mov    eax,0x1
   140020ba8:	add    rsp,0x28
   140020bac:	ret    
   140020bad:	int3   
   140020bae:	int3   
   140020baf:	int3   
   140020bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140020bb5:	mov    QWORD PTR [rsp+0x10],rsi
   140020bba:	push   rdi
   140020bbb:	sub    rsp,0x30
   140020bbf:	mov    esi,r9d
   140020bc2:	mov    r11,r8
   140020bc5:	mov    r10,rdx
   140020bc8:	mov    edi,ecx
   140020bca:	test   rdx,rdx
   140020bcd:	jne    0x140020bf7
   140020bcf:	call   0x140020aa4
   140020bd4:	mov    ebx,0x16
   140020bd9:	and    QWORD PTR [rsp+0x20],0x0
   140020bdf:	xor    r9d,r9d
   140020be2:	xor    r8d,r8d
   140020be5:	xor    edx,edx
   140020be7:	xor    ecx,ecx
   140020be9:	mov    DWORD PTR [rax],ebx
   140020beb:	call   0x14001ccf0
   140020bf0:	mov    eax,ebx
   140020bf2:	jmp    0x140020ca1
   140020bf7:	test   r8,r8
   140020bfa:	je     0x140020bcf
   140020bfc:	mov    BYTE PTR [rdx],0x0
   140020bff:	mov    edx,DWORD PTR [rsp+0x60]
   140020c03:	mov    eax,edx
   140020c05:	neg    eax
   140020c07:	sbb    rcx,rcx
   140020c0a:	neg    rcx
   140020c0d:	inc    rcx
   140020c10:	cmp    r8,rcx
   140020c13:	ja     0x140020c21
   140020c15:	call   0x140020aa4
   140020c1a:	mov    ebx,0x22
   140020c1f:	jmp    0x140020bd9
   140020c21:	lea    eax,[r9-0x2]
   140020c25:	mov    ebx,0x22
   140020c2a:	cmp    eax,ebx
   140020c2c:	ja     0x140020bcf
   140020c2e:	xor    ecx,ecx
   140020c30:	mov    r8,r10
   140020c33:	test   edx,edx
   140020c35:	je     0x140020c44
   140020c37:	mov    BYTE PTR [r10],0x2d
   140020c3b:	lea    r8,[r10+0x1]
   140020c3f:	lea    ecx,[rbx-0x21]
   140020c42:	neg    edi
   140020c44:	mov    r9,r8
   140020c47:	xor    edx,edx
   140020c49:	mov    eax,edi
   140020c4b:	div    esi
   140020c4d:	mov    edi,eax
   140020c4f:	cmp    edx,0x9
   140020c52:	jbe    0x140020c59
   140020c54:	add    dl,0x57
   140020c57:	jmp    0x140020c5c
   140020c59:	add    dl,0x30
   140020c5c:	mov    BYTE PTR [r8],dl
   140020c5f:	inc    rcx
   140020c62:	inc    r8
   140020c65:	test   eax,eax
   140020c67:	je     0x140020c6e
   140020c69:	cmp    rcx,r11
   140020c6c:	jb     0x140020c47
   140020c6e:	cmp    rcx,r11
   140020c71:	jb     0x140020c81
   140020c73:	mov    BYTE PTR [r10],0x0
   140020c77:	call   0x140020aa4
   140020c7c:	jmp    0x140020bd9
   140020c81:	mov    BYTE PTR [r8],0x0
   140020c85:	dec    r8
   140020c88:	mov    al,BYTE PTR [r9]
   140020c8b:	mov    cl,BYTE PTR [r8]
   140020c8e:	mov    BYTE PTR [r8],al
   140020c91:	mov    BYTE PTR [r9],cl
   140020c94:	inc    r9
   140020c97:	dec    r8
   140020c9a:	cmp    r9,r8
   140020c9d:	jb     0x140020c88
   140020c9f:	xor    eax,eax
   140020ca1:	mov    rbx,QWORD PTR [rsp+0x40]
   140020ca6:	mov    rsi,QWORD PTR [rsp+0x48]
   140020cab:	add    rsp,0x30
   140020caf:	pop    rdi
   140020cb0:	ret    
   140020cb1:	int3   
   140020cb2:	int3   
   140020cb3:	int3   
   140020cb4:	sub    rsp,0x38
   140020cb8:	cmp    r9d,0xa
   140020cbc:	jne    0x140020ccc
   140020cbe:	test   ecx,ecx
   140020cc0:	jns    0x140020ccc
   140020cc2:	mov    DWORD PTR [rsp+0x20],0x1
   140020cca:	jmp    0x140020cd1
   140020ccc:	and    DWORD PTR [rsp+0x20],0x0
   140020cd1:	call   0x140020bb0
   140020cd6:	add    rsp,0x38
   140020cda:	ret    
   140020cdb:	int3   
   140020cdc:	mov    QWORD PTR [rsp+0x8],rbx
   140020ce1:	mov    QWORD PTR [rsp+0x10],rsi
   140020ce6:	push   rdi
   140020ce7:	sub    rsp,0x30
   140020ceb:	mov    esi,r9d
   140020cee:	mov    r11,r8
   140020cf1:	mov    r10,rdx
   140020cf4:	mov    rdi,rcx
   140020cf7:	test   rdx,rdx
   140020cfa:	jne    0x140020d24
   140020cfc:	call   0x140020aa4
   140020d01:	mov    ebx,0x16
   140020d06:	and    QWORD PTR [rsp+0x20],0x0
   140020d0c:	xor    r9d,r9d
   140020d0f:	xor    r8d,r8d
   140020d12:	xor    edx,edx
   140020d14:	xor    ecx,ecx
   140020d16:	mov    DWORD PTR [rax],ebx
   140020d18:	call   0x14001ccf0
   140020d1d:	mov    eax,ebx
   140020d1f:	jmp    0x140020dd2
   140020d24:	test   r8,r8
   140020d27:	je     0x140020cfc
   140020d29:	mov    BYTE PTR [rdx],0x0
   140020d2c:	mov    edx,DWORD PTR [rsp+0x60]
   140020d30:	mov    eax,edx
   140020d32:	neg    eax
   140020d34:	sbb    rcx,rcx
   140020d37:	neg    rcx
   140020d3a:	inc    rcx
   140020d3d:	cmp    r8,rcx
   140020d40:	ja     0x140020d4e
   140020d42:	call   0x140020aa4
   140020d47:	mov    ebx,0x22
   140020d4c:	jmp    0x140020d06
   140020d4e:	lea    eax,[rsi-0x2]
   140020d51:	mov    ebx,0x22
   140020d56:	cmp    eax,ebx
   140020d58:	ja     0x140020cfc
   140020d5a:	xor    ecx,ecx
   140020d5c:	mov    r8,r10
   140020d5f:	test   edx,edx
   140020d61:	je     0x140020d71
   140020d63:	mov    BYTE PTR [r10],0x2d
   140020d67:	lea    r8,[r10+0x1]
   140020d6b:	lea    ecx,[rbx-0x21]
   140020d6e:	neg    rdi
   140020d71:	mov    r9,r8
   140020d74:	xor    edx,edx
   140020d76:	mov    rax,rdi
   140020d79:	div    rsi
   140020d7c:	mov    rdi,rax
   140020d7f:	cmp    edx,0x9
   140020d82:	jbe    0x140020d89
   140020d84:	add    dl,0x57
   140020d87:	jmp    0x140020d8c
   140020d89:	add    dl,0x30
   140020d8c:	mov    BYTE PTR [r8],dl
   140020d8f:	inc    rcx
   140020d92:	inc    r8
   140020d95:	test   rax,rax
   140020d98:	je     0x140020d9f
   140020d9a:	cmp    rcx,r11
   140020d9d:	jb     0x140020d74
   140020d9f:	cmp    rcx,r11
   140020da2:	jb     0x140020db2
   140020da4:	mov    BYTE PTR [r10],0x0
   140020da8:	call   0x140020aa4
   140020dad:	jmp    0x140020d06
   140020db2:	mov    BYTE PTR [r8],0x0
   140020db6:	dec    r8
   140020db9:	mov    al,BYTE PTR [r9]
   140020dbc:	mov    cl,BYTE PTR [r8]
   140020dbf:	mov    BYTE PTR [r8],al
   140020dc2:	mov    BYTE PTR [r9],cl
   140020dc5:	inc    r9
   140020dc8:	dec    r8
   140020dcb:	cmp    r9,r8
   140020dce:	jb     0x140020db9
   140020dd0:	xor    eax,eax
   140020dd2:	mov    rbx,QWORD PTR [rsp+0x40]
   140020dd7:	mov    rsi,QWORD PTR [rsp+0x48]
   140020ddc:	add    rsp,0x30
   140020de0:	pop    rdi
   140020de1:	ret    
   140020de2:	int3   
   140020de3:	int3   
   140020de4:	sub    rsp,0x38
   140020de8:	and    DWORD PTR [rsp+0x20],0x0
   140020ded:	call   0x140020cdc
   140020df2:	add    rsp,0x38
   140020df6:	ret    
   140020df7:	int3   
   140020df8:	mov    QWORD PTR [rsp+0x8],rbx
   140020dfd:	mov    QWORD PTR [rsp+0x10],rsi
   140020e02:	push   rdi
   140020e03:	sub    rsp,0x40
   140020e07:	mov    esi,edx
   140020e09:	mov    rdx,rcx
   140020e0c:	lea    rcx,[rsp+0x20]
   140020e11:	mov    ebx,r9d
   140020e14:	mov    rdi,r8
   140020e17:	call   0x14001cf30
   140020e1c:	cmp    ebx,0xffffffff
   140020e1f:	jge    0x140020e25
   140020e21:	xor    eax,eax
   140020e23:	jmp    0x140020e38
   140020e25:	mov    r9,QWORD PTR [rsp+0x70]
   140020e2a:	mov    r8d,ebx
   140020e2d:	mov    rdx,rdi
   140020e30:	mov    ecx,esi
   140020e32:	call   QWORD PTR [rip+0x19478]        # 0x14003a2b0
   140020e38:	cmp    BYTE PTR [rsp+0x38],0x0
   140020e3d:	je     0x140020e4b
   140020e3f:	mov    rcx,QWORD PTR [rsp+0x30]
   140020e44:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140020e4b:	mov    rbx,QWORD PTR [rsp+0x50]
   140020e50:	mov    rsi,QWORD PTR [rsp+0x58]
   140020e55:	add    rsp,0x40
   140020e59:	pop    rdi
   140020e5a:	ret    
   140020e5b:	int3   
   140020e5c:	mov    rax,rsp
   140020e5f:	mov    QWORD PTR [rax+0x8],rbx
   140020e63:	mov    QWORD PTR [rax+0x10],rbp
   140020e67:	mov    QWORD PTR [rax+0x18],rsi
   140020e6b:	push   rdi
   140020e6c:	sub    rsp,0x50
   140020e70:	mov    esi,edx
   140020e72:	mov    rdx,rcx
   140020e75:	lea    rcx,[rax-0x28]
   140020e79:	mov    rbx,r9
   140020e7c:	mov    edi,r8d
   140020e7f:	call   0x14001cf30
   140020e84:	mov    r9d,DWORD PTR [rsp+0x80]
   140020e8c:	xor    ebp,ebp
   140020e8e:	cmp    r9d,ebp
   140020e91:	jle    0x140020eb1
   140020e93:	mov    eax,r9d
   140020e96:	mov    rcx,rbx
   140020e99:	dec    eax
   140020e9b:	cmp    WORD PTR [rcx],bp
   140020e9e:	je     0x140020eab
   140020ea0:	add    rcx,0x2
   140020ea4:	cmp    eax,ebp
   140020ea6:	jne    0x140020e99
   140020ea8:	or     eax,0xffffffff
   140020eab:	sub    r9d,eax
   140020eae:	dec    r9d
   140020eb1:	mov    eax,DWORD PTR [rsp+0x90]
   140020eb8:	mov    r8,rbx
   140020ebb:	mov    edx,edi
   140020ebd:	mov    DWORD PTR [rsp+0x28],eax
   140020ec1:	mov    rax,QWORD PTR [rsp+0x88]
   140020ec9:	mov    ecx,esi
   140020ecb:	mov    QWORD PTR [rsp+0x20],rax
   140020ed0:	call   QWORD PTR [rip+0x193ca]        # 0x14003a2a0
   140020ed6:	cmp    BYTE PTR [rsp+0x48],bpl
   140020edb:	je     0x140020ee9
   140020edd:	mov    rcx,QWORD PTR [rsp+0x40]
   140020ee2:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140020ee9:	mov    rbx,QWORD PTR [rsp+0x60]
   140020eee:	mov    rbp,QWORD PTR [rsp+0x68]
   140020ef3:	mov    rsi,QWORD PTR [rsp+0x70]
   140020ef8:	add    rsp,0x50
   140020efc:	pop    rdi
   140020efd:	ret    
   140020efe:	int3   
   140020eff:	int3   
   140020f00:	lea    rax,[rip+0x1a7f9]        # 0x14003b700
   140020f07:	mov    QWORD PTR [rcx],rax
   140020f0a:	jmp    0x14001c944
   140020f0f:	int3   
   140020f10:	mov    QWORD PTR [rsp+0x8],rbx
   140020f15:	push   rdi
   140020f16:	sub    rsp,0x20
   140020f1a:	lea    rax,[rip+0x1a7df]        # 0x14003b700
   140020f21:	mov    ebx,edx
   140020f23:	mov    rdi,rcx
   140020f26:	mov    QWORD PTR [rcx],rax
   140020f29:	call   0x14001c944
   140020f2e:	test   bl,0x1
   140020f31:	je     0x140020f3b
   140020f33:	mov    rcx,rdi
   140020f36:	call   0x14001c4dc
   140020f3b:	mov    rax,rdi
   140020f3e:	mov    rbx,QWORD PTR [rsp+0x30]
   140020f43:	add    rsp,0x20
   140020f47:	pop    rdi
   140020f48:	ret    
   140020f49:	int3   
   140020f4a:	int3   
   140020f4b:	int3   
   140020f4c:	mov    rax,rsp
   140020f4f:	mov    QWORD PTR [rax+0x8],rbx
   140020f53:	mov    QWORD PTR [rax+0x10],rbp
   140020f57:	mov    QWORD PTR [rax+0x18],rsi
   140020f5b:	mov    QWORD PTR [rax+0x20],rdi
   140020f5f:	push   r12
   140020f61:	sub    rsp,0x20
   140020f65:	mov    esi,DWORD PTR [rcx+0x4]
   140020f68:	xor    ebx,ebx
   140020f6a:	mov    r12,r8
   140020f6d:	mov    rbp,rdx
   140020f70:	mov    rdi,rcx
   140020f73:	cmp    esi,ebx
   140020f75:	je     0x140020f85
   140020f77:	movsxd rsi,esi
   140020f7a:	call   0x14001e044
   140020f7f:	lea    r11,[rsi+rax*1]
   140020f83:	jmp    0x140020f88
   140020f85:	mov    r11,rbx
   140020f88:	cmp    r11,rbx
   140020f8b:	je     0x14002104f
   140020f91:	cmp    esi,ebx
   140020f93:	je     0x140020fa4
   140020f95:	movsxd rsi,DWORD PTR [rdi+0x4]
   140020f99:	call   0x14001e044
   140020f9e:	lea    r11,[rsi+rax*1]
   140020fa2:	jmp    0x140020fa7
   140020fa4:	mov    r11,rbx
   140020fa7:	cmp    BYTE PTR [r11+0x10],bl
   140020fab:	je     0x14002104f
   140020fb1:	cmp    esi,ebx
   140020fb3:	je     0x140020fc6
   140020fb5:	call   0x14001e044
   140020fba:	mov    rsi,rax
   140020fbd:	movsxd rax,DWORD PTR [rdi+0x4]
   140020fc1:	add    rsi,rax
   140020fc4:	jmp    0x140020fc9
   140020fc6:	mov    rsi,rbx
   140020fc9:	call   0x14001e05c
   140020fce:	mov    r11,rax
   140020fd1:	movsxd rax,DWORD PTR [rbp+0x4]
   140020fd5:	add    r11,rax
   140020fd8:	cmp    rsi,r11
   140020fdb:	je     0x140021018
   140020fdd:	cmp    DWORD PTR [rdi+0x4],ebx
   140020fe0:	je     0x140020ff3
   140020fe2:	call   0x14001e044
   140020fe7:	mov    rsi,rax
   140020fea:	movsxd rax,DWORD PTR [rdi+0x4]
   140020fee:	add    rsi,rax
   140020ff1:	jmp    0x140020ff6
   140020ff3:	mov    rsi,rbx
   140020ff6:	call   0x14001e05c
   140020ffb:	lea    rcx,[rsi+0x10]
   140020fff:	mov    r11,rax
   140021002:	movsxd rax,DWORD PTR [rbp+0x4]
   140021006:	lea    rdx,[r11+rax*1+0x10]
   14002100b:	call   0x140023f00
   140021010:	cmp    eax,ebx
   140021012:	je     0x140021018
   140021014:	xor    eax,eax
   140021016:	jmp    0x140021054
   140021018:	mov    al,0x2
   14002101a:	test   BYTE PTR [rbp+0x0],al
   14002101d:	je     0x140021024
   14002101f:	test   BYTE PTR [rdi],0x8
   140021022:	je     0x14002104b
   140021024:	test   BYTE PTR [r12],0x1
   140021029:	je     0x140021030
   14002102b:	test   BYTE PTR [rdi],0x1
   14002102e:	je     0x14002104b
   140021030:	test   BYTE PTR [r12],0x4
   140021035:	je     0x14002103c
   140021037:	test   BYTE PTR [rdi],0x4
   14002103a:	je     0x14002104b
   14002103c:	test   BYTE PTR [r12],al
   140021040:	je     0x140021046
   140021042:	test   BYTE PTR [rdi],al
   140021044:	je     0x14002104b
   140021046:	mov    ebx,0x1
   14002104b:	mov    eax,ebx
   14002104d:	jmp    0x140021054
   14002104f:	mov    eax,0x1
   140021054:	mov    rbx,QWORD PTR [rsp+0x30]
   140021059:	mov    rbp,QWORD PTR [rsp+0x38]
   14002105e:	mov    rsi,QWORD PTR [rsp+0x40]
   140021063:	mov    rdi,QWORD PTR [rsp+0x48]
   140021068:	add    rsp,0x20
   14002106c:	pop    r12
   14002106e:	ret    
   14002106f:	int3   
   140021070:	sub    rsp,0x28
   140021074:	mov    rax,QWORD PTR [rcx]
   140021077:	cmp    DWORD PTR [rax],0xe0434f4d
   14002107d:	je     0x140021099
   14002107f:	cmp    DWORD PTR [rax],0xe06d7363
   140021085:	jne    0x1400210b2
   140021087:	call   0x14002412c
   14002108c:	and    DWORD PTR [rax+0x100],0x0
   140021093:	call   0x14002585c
   140021098:	int3   
   140021099:	call   0x14002412c
   14002109e:	cmp    DWORD PTR [rax+0x100],0x0
   1400210a5:	jle    0x1400210b2
   1400210a7:	call   0x14002412c
   1400210ac:	dec    DWORD PTR [rax+0x100]
   1400210b2:	xor    eax,eax
   1400210b4:	add    rsp,0x28
   1400210b8:	ret    
   1400210b9:	int3   
   1400210ba:	int3   
   1400210bb:	int3   
   1400210bc:	mov    rax,rsp
   1400210bf:	mov    DWORD PTR [rax+0x20],r9d
   1400210c3:	mov    QWORD PTR [rax+0x18],r8
   1400210c7:	mov    QWORD PTR [rax+0x10],rdx
   1400210cb:	mov    QWORD PTR [rax+0x8],rcx
   1400210cf:	push   rbx
   1400210d0:	push   rsi
   1400210d1:	push   rdi
   1400210d2:	push   r12
   1400210d4:	push   r13
   1400210d6:	push   r14
   1400210d8:	push   r15
   1400210da:	sub    rsp,0x30
   1400210de:	mov    r13d,r9d
   1400210e1:	mov    rsi,r8
   1400210e4:	mov    rbx,rdx
   1400210e7:	mov    r14,rcx
   1400210ea:	call   0x140027668
   1400210ef:	mov    edi,eax
   1400210f1:	call   0x14001e044
   1400210f6:	mov    r15,rax
   1400210f9:	mov    QWORD PTR [rsp+0x28],rax
   1400210fe:	call   0x14002412c
   140021103:	inc    DWORD PTR [rax+0x100]
   140021109:	cmp    edi,0xffffffff
   14002110c:	je     0x140021207
   140021112:	cmp    edi,r13d
   140021115:	jle    0x140021207
   14002111b:	cmp    edi,0xffffffff
   14002111e:	jle    0x140021125
   140021120:	cmp    edi,DWORD PTR [rsi+0x4]
   140021123:	jl     0x14002112a
   140021125:	call   0x140025880
   14002112a:	movsxd r12,edi
   14002112d:	call   0x14001e044
   140021132:	movsxd rcx,DWORD PTR [rsi+0x8]
   140021136:	lea    rax,[rax+r12*8]
   14002113a:	mov    edi,DWORD PTR [rcx+rax*1]
   14002113d:	mov    DWORD PTR [rsp+0x20],edi
   140021141:	call   0x14001e044
   140021146:	movsxd rcx,DWORD PTR [rsi+0x8]
   14002114a:	lea    rax,[rax+r12*8]
   14002114e:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   140021153:	je     0x140021176
   140021155:	call   0x14001e044
   14002115a:	movsxd rcx,DWORD PTR [rsi+0x8]
   14002115e:	lea    rax,[rax+r12*8]
   140021162:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140021167:	call   0x14001e044
   14002116c:	add    rax,rbx
   14002116f:	mov    rbx,QWORD PTR [rsp+0x78]
   140021174:	jmp    0x140021178
   140021176:	xor    eax,eax
   140021178:	test   rax,rax
   14002117b:	je     0x1400211d9
   14002117d:	mov    r9d,edi
   140021180:	mov    r8,rsi
   140021183:	mov    rdx,rbx
   140021186:	mov    rcx,r14
   140021189:	call   0x140027690
   14002118e:	call   0x14001e044
   140021193:	movsxd rcx,DWORD PTR [rsi+0x8]
   140021197:	lea    rax,[rax+r12*8]
   14002119b:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   1400211a0:	je     0x1400211be
   1400211a2:	call   0x14001e044
   1400211a7:	movsxd rcx,DWORD PTR [rsi+0x8]
   1400211ab:	lea    rax,[rax+r12*8]
   1400211af:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   1400211b4:	call   0x14001e044
   1400211b9:	add    rax,rbx
   1400211bc:	jmp    0x1400211c0
   1400211be:	xor    eax,eax
   1400211c0:	mov    r8d,0x103
   1400211c6:	mov    rdx,r14
   1400211c9:	mov    rcx,rax
   1400211cc:	call   0x1400365d0
   1400211d1:	mov    rcx,r15
   1400211d4:	call   0x14001e074
   1400211d9:	jmp    0x1400211f9
   1400211db:	mov    r13d,DWORD PTR [rsp+0x88]
   1400211e3:	mov    rsi,QWORD PTR [rsp+0x80]
   1400211eb:	mov    r14,QWORD PTR [rsp+0x70]
   1400211f0:	mov    r15,QWORD PTR [rsp+0x28]
   1400211f5:	mov    edi,DWORD PTR [rsp+0x20]
   1400211f9:	mov    DWORD PTR [rsp+0x24],edi
   1400211fd:	mov    rbx,QWORD PTR [rsp+0x78]
   140021202:	jmp    0x140021109
   140021207:	call   0x14002412c
   14002120c:	cmp    DWORD PTR [rax+0x100],0x0
   140021213:	jle    0x140021220
   140021215:	call   0x14002412c
   14002121a:	dec    DWORD PTR [rax+0x100]
   140021220:	cmp    edi,0xffffffff
   140021223:	je     0x14002122f
   140021225:	cmp    edi,r13d
   140021228:	jle    0x14002122f
   14002122a:	call   0x140025880
   14002122f:	mov    r9d,edi
   140021232:	mov    r8,rsi
   140021235:	mov    rdx,rbx
   140021238:	mov    rcx,r14
   14002123b:	call   0x140027690
   140021240:	add    rsp,0x30
   140021244:	pop    r15
   140021246:	pop    r14
   140021248:	pop    r13
   14002124a:	pop    r12
   14002124c:	pop    rdi
   14002124d:	pop    rsi
   14002124e:	pop    rbx
   14002124f:	ret    
   140021250:	test   rcx,rcx
   140021253:	je     0x140021291
   140021255:	mov    BYTE PTR [rsp+0x10],dl
   140021259:	sub    rsp,0x28
   14002125d:	cmp    DWORD PTR [rcx],0xe06d7363
   140021263:	jne    0x14002128d
   140021265:	mov    rax,QWORD PTR [rcx+0x30]
   140021269:	test   rax,rax
   14002126c:	je     0x14002128d
   14002126e:	cmp    DWORD PTR [rax+0x4],0x0
   140021272:	je     0x14002128d
   140021274:	movsxd rax,DWORD PTR [rax+0x4]
   140021278:	mov    rdx,QWORD PTR [rcx+0x38]
   14002127c:	add    rdx,rax
   14002127f:	mov    rcx,QWORD PTR [rcx+0x28]
   140021283:	call   rdx
   140021285:	jmp    0x14002128d
   140021287:	call   0x14002585c
   14002128c:	nop
   14002128d:	add    rsp,0x28
   140021291:	ret    
   140021292:	int3   
   140021293:	int3   
   140021294:	movsxd rax,DWORD PTR [rdx]
   140021297:	add    rax,rcx
   14002129a:	cmp    DWORD PTR [rdx+0x4],0x0
   14002129e:	jl     0x1400212b6
   1400212a0:	movsxd r9,DWORD PTR [rdx+0x4]
   1400212a4:	movsxd rdx,DWORD PTR [rdx+0x8]
   1400212a8:	mov    rcx,QWORD PTR [r9+rcx*1]
   1400212ac:	movsxd r8,DWORD PTR [rdx+rcx*1]
   1400212b0:	add    r8,r9
   1400212b3:	add    rax,r8
   1400212b6:	ret    
   1400212b7:	int3   
   1400212b8:	sub    rsp,0x28
   1400212bc:	call   0x14002412c
   1400212c1:	xor    ecx,ecx
   1400212c3:	cmp    DWORD PTR [rax+0x100],ecx
   1400212c9:	setne  al
   1400212cc:	add    rsp,0x28
   1400212d0:	ret    
   1400212d1:	int3   
   1400212d2:	int3   
   1400212d3:	int3   
   1400212d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400212d9:	mov    QWORD PTR [rsp+0x10],rbp
   1400212de:	mov    QWORD PTR [rsp+0x18],rsi
   1400212e3:	push   rdi
   1400212e4:	push   r12
   1400212e6:	push   r13
   1400212e8:	push   r14
   1400212ea:	push   r15
   1400212ec:	sub    rsp,0x20
   1400212f0:	mov    rsi,rdx
   1400212f3:	mov    r14,rcx
   1400212f6:	test   rdx,rdx
   1400212f9:	jne    0x140021306
   1400212fb:	call   0x140025880
   140021300:	call   0x14002585c
   140021305:	int3   
   140021306:	xor    edi,edi
   140021308:	xor    r12b,r12b
   14002130b:	cmp    DWORD PTR [rdx],edi
   14002130d:	jle    0x140021387
   14002130f:	call   0x14001e05c
   140021314:	mov    r11,rax
   140021317:	mov    rax,QWORD PTR [r14+0x30]
   14002131b:	movsxd rcx,DWORD PTR [rax+0xc]
   14002131f:	lea    r13,[r11+rcx*1+0x4]
   140021324:	call   0x14001e05c
   140021329:	mov    r11,rax
   14002132c:	mov    rax,QWORD PTR [r14+0x30]
   140021330:	movsxd rcx,DWORD PTR [rax+0xc]
   140021334:	mov    ebp,DWORD PTR [r11+rcx*1]
   140021338:	test   ebp,ebp
   14002133a:	jle    0x140021381
   14002133c:	movsxd rax,edi
   14002133f:	lea    r15,[rax+rax*4]
   140021343:	call   0x14001e05c
   140021348:	mov    rbx,rax
   14002134b:	movsxd rax,DWORD PTR [r13+0x0]
   14002134f:	add    rbx,rax
   140021352:	call   0x14001e044
   140021357:	movsxd rcx,DWORD PTR [rsi+0x4]
   14002135b:	mov    r8,QWORD PTR [r14+0x30]
   14002135f:	lea    rax,[rax+r15*4]
   140021363:	mov    rdx,rbx
   140021366:	add    rcx,rax
   140021369:	call   0x140020f4c
   14002136e:	test   eax,eax
   140021370:	jne    0x14002137e
   140021372:	dec    ebp
   140021374:	add    r13,0x4
   140021378:	test   ebp,ebp
   14002137a:	jg     0x140021343
   14002137c:	jmp    0x140021381
   14002137e:	mov    r12b,0x1
   140021381:	inc    edi
   140021383:	cmp    edi,DWORD PTR [rsi]
   140021385:	jl     0x14002130f
   140021387:	mov    rbx,QWORD PTR [rsp+0x50]
   14002138c:	mov    rbp,QWORD PTR [rsp+0x58]
   140021391:	mov    rsi,QWORD PTR [rsp+0x60]
   140021396:	mov    al,r12b
   140021399:	add    rsp,0x20
   14002139d:	pop    r15
   14002139f:	pop    r14
   1400213a1:	pop    r13
   1400213a3:	pop    r12
   1400213a5:	pop    rdi
   1400213a6:	ret    
   1400213a7:	int3   
   1400213a8:	rex push rbx
   1400213aa:	push   rsi
   1400213ab:	push   rdi
   1400213ac:	push   r13
   1400213ae:	push   r14
   1400213b0:	push   r15
   1400213b2:	sub    rsp,0x98
   1400213b9:	mov    rdi,rcx
   1400213bc:	xor    r14d,r14d
   1400213bf:	mov    DWORD PTR [rsp+0x20],r14d
   1400213c4:	and    DWORD PTR [rsp+0xd0],r14d
   1400213cc:	and    QWORD PTR [rsp+0x48],r14
   1400213d1:	and    QWORD PTR [rsp+0x40],r14
   1400213d6:	call   0x14002412c
   1400213db:	mov    rax,QWORD PTR [rax+0xf8]
   1400213e2:	mov    QWORD PTR [rsp+0xe8],rax
   1400213ea:	call   0x14002412c
   1400213ef:	mov    rax,QWORD PTR [rax+0xf0]
   1400213f6:	mov    QWORD PTR [rsp+0xe0],rax
   1400213fe:	mov    rsi,QWORD PTR [rdi+0x50]
   140021402:	mov    QWORD PTR [rsp+0xd8],rsi
   14002140a:	mov    rax,QWORD PTR [rdi+0x48]
   14002140e:	mov    QWORD PTR [rsp+0x38],rax
   140021413:	mov    rbx,QWORD PTR [rdi+0x40]
   140021417:	mov    rax,QWORD PTR [rdi+0x30]
   14002141b:	mov    QWORD PTR [rsp+0x58],rax
   140021420:	mov    r13,QWORD PTR [rdi+0x28]
   140021424:	mov    QWORD PTR [rsp+0x60],r13
   140021429:	call   0x14002412c
   14002142e:	mov    QWORD PTR [rax+0xf0],rsi
   140021435:	call   0x14002412c
   14002143a:	mov    QWORD PTR [rax+0xf8],rbx
   140021441:	call   0x14002412c
   140021446:	mov    rdx,QWORD PTR [rax+0xf0]
   14002144d:	mov    rdx,QWORD PTR [rdx+0x28]
   140021451:	lea    rcx,[rsp+0x78]
   140021456:	call   0x14001e400
   14002145b:	mov    r15,rax
   14002145e:	mov    QWORD PTR [rsp+0x50],rax
   140021463:	cmp    QWORD PTR [rdi+0x58],r14
   140021467:	je     0x140021491
   140021469:	mov    DWORD PTR [rsp+0xd0],0x1
   140021474:	call   0x14002412c
   140021479:	mov    rbx,QWORD PTR [rax+0x138]
   140021480:	mov    QWORD PTR [rsp+0x40],rbx
   140021485:	call   0x14002412c
   14002148a:	mov    QWORD PTR [rax+0xf0],rbx
   140021491:	mov    r8d,0x100
   140021497:	mov    rdx,r13
   14002149a:	mov    rcx,QWORD PTR [rsp+0x58]
   14002149f:	call   0x1400365d0
   1400214a4:	mov    rbx,rax
   1400214a7:	mov    QWORD PTR [rsp+0x48],rax
   1400214ac:	mov    rdi,QWORD PTR [rsp+0xe8]
   1400214b4:	jmp    0x14002153c
   1400214b9:	mov    DWORD PTR [rsp+0x20],0x1
   1400214c1:	call   0x14002412c
   1400214c6:	and    DWORD PTR [rax+0x2c0],0x0
   1400214cd:	cmp    DWORD PTR [rsp+0xd0],0x0
   1400214d5:	je     0x140021505
   1400214d7:	mov    dl,0x1
   1400214d9:	mov    rsi,QWORD PTR [rsp+0xd8]
   1400214e1:	mov    rcx,rsi
   1400214e4:	call   0x140021250
   1400214e9:	mov    r11,QWORD PTR [rsp+0x40]
   1400214ee:	lea    r9,[r11+0x20]
   1400214f2:	mov    r8d,DWORD PTR [r11+0x18]
   1400214f6:	mov    edx,DWORD PTR [r11+0x4]
   1400214fa:	mov    ecx,DWORD PTR [r11]
   1400214fd:	call   QWORD PTR [rip+0x18bb5]        # 0x14003a0b8
   140021503:	jmp    0x140021520
   140021505:	mov    rsi,QWORD PTR [rsp+0xd8]
   14002150d:	lea    r9,[rsi+0x20]
   140021511:	mov    r8d,DWORD PTR [rsi+0x18]
   140021515:	mov    edx,DWORD PTR [rsi+0x4]
   140021518:	mov    ecx,DWORD PTR [rsi]
   14002151a:	call   QWORD PTR [rip+0x18b98]        # 0x14003a0b8
   140021520:	mov    r14d,DWORD PTR [rsp+0x20]
   140021525:	mov    rbx,QWORD PTR [rsp+0x48]
   14002152a:	mov    rdi,QWORD PTR [rsp+0xe8]
   140021532:	mov    r13,QWORD PTR [rsp+0x60]
   140021537:	mov    r15,QWORD PTR [rsp+0x50]
   14002153c:	mov    rcx,r15
   14002153f:	call   0x14001e478
   140021544:	test   r14d,r14d
   140021547:	jne    0x140021589
   140021549:	cmp    DWORD PTR [rsi],0xe06d7363
   14002154f:	jne    0x140021589
   140021551:	cmp    DWORD PTR [rsi+0x18],0x4
   140021555:	jne    0x140021589
   140021557:	cmp    DWORD PTR [rsi+0x20],0x19930520
   14002155e:	je     0x140021572
   140021560:	cmp    DWORD PTR [rsi+0x20],0x19930521
   140021567:	je     0x140021572
   140021569:	cmp    DWORD PTR [rsi+0x20],0x19930522
   140021570:	jne    0x140021589
   140021572:	mov    rcx,QWORD PTR [rsi+0x28]
   140021576:	call   0x14001e444
   14002157b:	test   eax,eax
   14002157d:	je     0x140021589
   14002157f:	mov    dl,0x1
   140021581:	mov    rcx,rsi
   140021584:	call   0x140021250
   140021589:	call   0x14002412c
   14002158e:	mov    rcx,QWORD PTR [rsp+0xe0]
   140021596:	mov    QWORD PTR [rax+0xf0],rcx
   14002159d:	call   0x14002412c
   1400215a2:	mov    QWORD PTR [rax+0xf8],rdi
   1400215a9:	mov    rax,QWORD PTR [rsp+0x38]
   1400215ae:	movsxd rcx,DWORD PTR [rax+0x1c]
   1400215b2:	mov    rax,QWORD PTR [r13+0x0]
   1400215b6:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   1400215be:	mov    rax,rbx
   1400215c1:	add    rsp,0x98
   1400215c8:	pop    r15
   1400215ca:	pop    r14
   1400215cc:	pop    r13
   1400215ce:	pop    rdi
   1400215cf:	pop    rsi
   1400215d0:	pop    rbx
   1400215d1:	ret    
   1400215d2:	int3   
   1400215d3:	int3   
   1400215d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400215d9:	mov    QWORD PTR [rsp+0x10],rsi
   1400215de:	mov    QWORD PTR [rsp+0x18],rdi
   1400215e3:	push   r12
   1400215e5:	push   r13
   1400215e7:	push   r14
   1400215e9:	sub    rsp,0x30
   1400215ed:	mov    rsi,r9
   1400215f0:	mov    rdi,r8
   1400215f3:	mov    r12,rdx
   1400215f6:	mov    r14,rcx
   1400215f9:	xor    ebx,ebx
   1400215fb:	mov    r13d,DWORD PTR [r8+0x4]
   1400215ff:	cmp    r13d,ebx
   140021602:	je     0x140021613
   140021604:	movsxd r13,r13d
   140021607:	call   0x14001e044
   14002160c:	lea    r11,[r13+rax*1+0x0]
   140021611:	jmp    0x140021616
   140021613:	mov    r11,rbx
   140021616:	cmp    r11,rbx
   140021619:	je     0x1400217de
   14002161f:	cmp    r13d,ebx
   140021622:	je     0x140021635
   140021624:	call   0x14001e044
   140021629:	mov    r11,rax
   14002162c:	movsxd rax,DWORD PTR [rdi+0x4]
   140021630:	add    r11,rax
   140021633:	jmp    0x140021638
   140021635:	mov    r11,rbx
   140021638:	cmp    BYTE PTR [r11+0x10],bl
   14002163c:	je     0x1400217de
   140021642:	cmp    DWORD PTR [rdi+0x8],ebx
   140021645:	jne    0x140021651
   140021647:	bt     DWORD PTR [rdi],0x1f
   14002164b:	jae    0x1400217de
   140021651:	bt     DWORD PTR [rdi],0x1f
   140021655:	jb     0x140021662
   140021657:	movsxd rax,DWORD PTR [rdi+0x8]
   14002165b:	add    rax,QWORD PTR [r12]
   14002165f:	mov    r12,rax
   140021662:	test   BYTE PTR [rdi],0x8
   140021665:	je     0x1400216ad
   140021667:	mov    edi,0x1
   14002166c:	mov    edx,edi
   14002166e:	mov    rcx,QWORD PTR [r14+0x28]
   140021672:	call   0x140029e08
   140021677:	cmp    eax,ebx
   140021679:	je     0x1400216a3
   14002167b:	mov    edx,edi
   14002167d:	mov    rcx,r12
   140021680:	call   0x140029e08
   140021685:	cmp    eax,ebx
   140021687:	je     0x1400216a3
   140021689:	mov    rcx,QWORD PTR [r14+0x28]
   14002168d:	mov    QWORD PTR [r12],rcx
   140021691:	lea    rdx,[rsi+0x8]
   140021695:	call   0x140021294
   14002169a:	mov    QWORD PTR [r12],rax
   14002169e:	jmp    0x1400217d4
   1400216a3:	call   0x140025880
   1400216a8:	jmp    0x1400217d4
   1400216ad:	mov    edi,0x1
   1400216b2:	test   BYTE PTR [rsi],dil
   1400216b5:	je     0x140021718
   1400216b7:	mov    edx,edi
   1400216b9:	mov    rcx,QWORD PTR [r14+0x28]
   1400216bd:	call   0x140029e08
   1400216c2:	cmp    eax,ebx
   1400216c4:	je     0x14002170e
   1400216c6:	mov    edx,edi
   1400216c8:	mov    rcx,r12
   1400216cb:	call   0x140029e08
   1400216d0:	cmp    eax,ebx
   1400216d2:	je     0x14002170e
   1400216d4:	movsxd r8,DWORD PTR [rsi+0x14]
   1400216d8:	mov    rdx,QWORD PTR [r14+0x28]
   1400216dc:	mov    rcx,r12
   1400216df:	call   0x1400205b0
   1400216e4:	cmp    DWORD PTR [rsi+0x14],0x8
   1400216e8:	jne    0x1400217d4
   1400216ee:	cmp    QWORD PTR [r12],rbx
   1400216f2:	je     0x1400217d4
   1400216f8:	lea    rdx,[rsi+0x8]
   1400216fc:	mov    rcx,QWORD PTR [r12]
   140021700:	call   0x140021294
   140021705:	mov    QWORD PTR [r12],rax
   140021709:	jmp    0x1400217d4
   14002170e:	call   0x140025880
   140021713:	jmp    0x1400217d4
   140021718:	cmp    DWORD PTR [rsi+0x18],ebx
   14002171b:	je     0x14002172e
   14002171d:	call   0x14001e05c
   140021722:	mov    r11,rax
   140021725:	movsxd rax,DWORD PTR [rsi+0x18]
   140021729:	add    r11,rax
   14002172c:	jmp    0x140021731
   14002172e:	mov    r11,rbx
   140021731:	cmp    r11,rbx
   140021734:	jne    0x14002177b
   140021736:	mov    edx,edi
   140021738:	mov    rcx,QWORD PTR [r14+0x28]
   14002173c:	call   0x140029e08
   140021741:	cmp    eax,ebx
   140021743:	je     0x140021774
   140021745:	mov    edx,edi
   140021747:	mov    rcx,r12
   14002174a:	call   0x140029e08
   14002174f:	cmp    eax,ebx
   140021751:	je     0x140021774
   140021753:	movsxd r10,DWORD PTR [rsi+0x14]
   140021757:	lea    rdx,[rsi+0x8]
   14002175b:	mov    rcx,QWORD PTR [r14+0x28]
   14002175f:	call   0x140021294
   140021764:	mov    rdx,rax
   140021767:	mov    r8,r10
   14002176a:	mov    rcx,r12
   14002176d:	call   0x1400205b0
   140021772:	jmp    0x1400217d4
   140021774:	call   0x140025880
   140021779:	jmp    0x1400217d4
   14002177b:	mov    edx,edi
   14002177d:	mov    rcx,QWORD PTR [r14+0x28]
   140021781:	call   0x140029e08
   140021786:	cmp    eax,ebx
   140021788:	je     0x1400217ce
   14002178a:	mov    edx,edi
   14002178c:	mov    rcx,r12
   14002178f:	call   0x140029e08
   140021794:	cmp    eax,ebx
   140021796:	je     0x1400217ce
   140021798:	cmp    DWORD PTR [rsi+0x18],ebx
   14002179b:	je     0x1400217ae
   14002179d:	call   0x14001e05c
   1400217a2:	mov    rcx,rax
   1400217a5:	movsxd rax,DWORD PTR [rsi+0x18]
   1400217a9:	add    rcx,rax
   1400217ac:	jmp    0x1400217b1
   1400217ae:	mov    rcx,rbx
   1400217b1:	call   0x140029e08
   1400217b6:	cmp    eax,ebx
   1400217b8:	je     0x1400217ce
   1400217ba:	mov    al,BYTE PTR [rsi]
   1400217bc:	and    al,0x4
   1400217be:	neg    al
   1400217c0:	sbb    ecx,ecx
   1400217c2:	neg    ecx
   1400217c4:	add    ecx,edi
   1400217c6:	mov    ebx,ecx
   1400217c8:	mov    DWORD PTR [rsp+0x20],ecx
   1400217cc:	jmp    0x1400217d4
   1400217ce:	call   0x140025880
   1400217d3:	nop
   1400217d4:	mov    eax,ebx
   1400217d6:	jmp    0x1400217e0
   1400217d8:	call   0x14002585c
   1400217dd:	nop
   1400217de:	xor    eax,eax
   1400217e0:	mov    rbx,QWORD PTR [rsp+0x50]
   1400217e5:	mov    rsi,QWORD PTR [rsp+0x58]
   1400217ea:	mov    rdi,QWORD PTR [rsp+0x60]
   1400217ef:	add    rsp,0x30
   1400217f3:	pop    r14
   1400217f5:	pop    r13
   1400217f7:	pop    r12
   1400217f9:	ret    
   1400217fa:	int3   
   1400217fb:	int3   
   1400217fc:	mov    QWORD PTR [rsp+0x8],rbx
   140021801:	mov    QWORD PTR [rsp+0x10],rsi
   140021806:	push   rdi
   140021807:	sub    rsp,0x20
   14002180b:	mov    rbx,r9
   14002180e:	mov    rsi,rcx
   140021811:	bt     DWORD PTR [r8],0x1f
   140021816:	jae    0x14002181d
   140021818:	mov    rdi,rdx
   14002181b:	jmp    0x140021824
   14002181d:	movsxd rdi,DWORD PTR [r8+0x8]
   140021821:	add    rdi,QWORD PTR [rdx]
   140021824:	call   0x1400215d4
   140021829:	sub    eax,0x1
   14002182c:	je     0x140021869
   14002182e:	cmp    eax,0x1
   140021831:	jne    0x140021894
   140021833:	xor    r10d,r10d
   140021836:	cmp    DWORD PTR [rbx+0x18],r10d
   14002183a:	je     0x14002184b
   14002183c:	call   0x14001e05c
   140021841:	mov    r10,rax
   140021844:	movsxd rax,DWORD PTR [rbx+0x18]
   140021848:	add    r10,rax
   14002184b:	lea    rdx,[rbx+0x8]
   14002184f:	mov    rcx,QWORD PTR [rsi+0x28]
   140021853:	call   0x140021294
   140021858:	mov    rdx,rax
   14002185b:	mov    r8d,0x1
   140021861:	mov    rcx,rdi
   140021864:	call   r10
   140021867:	jmp    0x140021894
   140021869:	xor    r10d,r10d
   14002186c:	cmp    DWORD PTR [rbx+0x18],r10d
   140021870:	je     0x14002187e
   140021872:	call   0x14001e05c
   140021877:	movsxd r10,DWORD PTR [rbx+0x18]
   14002187b:	add    r10,rax
   14002187e:	lea    rdx,[rbx+0x8]
   140021882:	mov    rcx,QWORD PTR [rsi+0x28]
   140021886:	call   0x140021294
   14002188b:	mov    rdx,rax
   14002188e:	mov    rcx,rdi
   140021891:	call   r10
   140021894:	jmp    0x14002189c
   140021896:	call   0x14002585c
   14002189b:	nop
   14002189c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400218a1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400218a6:	add    rsp,0x20
   1400218aa:	pop    rdi
   1400218ab:	ret    
   1400218ac:	mov    rax,rsp
   1400218af:	mov    QWORD PTR [rax+0x8],rbx
   1400218b3:	mov    QWORD PTR [rax+0x18],rbp
   1400218b7:	push   rsi
   1400218b8:	push   rdi
   1400218b9:	push   r12
   1400218bb:	push   r13
   1400218bd:	push   r14
   1400218bf:	sub    rsp,0x50
   1400218c3:	mov    r13,QWORD PTR [rsp+0xa0]
   1400218cb:	mov    rbp,r9
   1400218ce:	mov    r12,rdx
   1400218d1:	mov    r14,r8
   1400218d4:	mov    rbx,rcx
   1400218d7:	lea    r9,[rax+0x10]
   1400218db:	mov    r8,r13
   1400218de:	mov    rdx,rbp
   1400218e1:	mov    rcx,r12
   1400218e4:	call   0x14001df58
   1400218e9:	mov    r9,QWORD PTR [rsp+0xb0]
   1400218f1:	mov    rsi,QWORD PTR [rsp+0xa8]
   1400218f9:	mov    rdi,rax
   1400218fc:	test   r9,r9
   1400218ff:	je     0x14002190f
   140021901:	mov    r8,rsi
   140021904:	mov    rdx,rax
   140021907:	mov    rcx,rbx
   14002190a:	call   0x1400217fc
   14002190f:	call   0x14001e044
   140021914:	movsxd rcx,DWORD PTR [rsi+0xc]
   140021918:	mov    r9,rdi
   14002191b:	add    rax,rcx
   14002191e:	mov    cl,BYTE PTR [rsp+0xd8]
   140021925:	mov    r8,r14
   140021928:	mov    BYTE PTR [rsp+0x40],cl
   14002192c:	mov    rcx,QWORD PTR [rsp+0xb8]
   140021934:	mov    QWORD PTR [rsp+0x38],rbp
   140021939:	mov    edx,DWORD PTR [rcx]
   14002193b:	mov    QWORD PTR [rsp+0x30],r13
   140021940:	mov    rcx,r12
   140021943:	mov    DWORD PTR [rsp+0x28],edx
   140021947:	mov    rdx,rbx
   14002194a:	mov    QWORD PTR [rsp+0x20],rax
   14002194f:	call   0x14001e4d8
   140021954:	lea    r11,[rsp+0x50]
   140021959:	mov    rbx,QWORD PTR [r11+0x30]
   14002195d:	mov    rbp,QWORD PTR [r11+0x40]
   140021961:	mov    rsp,r11
   140021964:	pop    r14
   140021966:	pop    r13
   140021968:	pop    r12
   14002196a:	pop    rdi
   14002196b:	pop    rsi
   14002196c:	ret    
   14002196d:	int3   
   14002196e:	int3   
   14002196f:	int3   
   140021970:	mov    QWORD PTR [rsp+0x10],rbx
   140021975:	mov    QWORD PTR [rsp+0x18],r8
   14002197a:	push   rbp
   14002197b:	push   rsi
   14002197c:	push   rdi
   14002197d:	push   r12
   14002197f:	push   r13
   140021981:	push   r14
   140021983:	push   r15
   140021985:	sub    rsp,0x70
   140021989:	cmp    DWORD PTR [rcx],0x80000003
   14002198f:	mov    r13,r9
   140021992:	mov    rdi,r8
   140021995:	mov    r14,rdx
   140021998:	mov    rsi,rcx
   14002199b:	je     0x140021b9c
   1400219a1:	call   0x14002412c
   1400219a6:	mov    r15d,DWORD PTR [rsp+0xe0]
   1400219ae:	mov    rbp,QWORD PTR [rsp+0xd0]
   1400219b6:	cmp    QWORD PTR [rax+0xe0],0x0
   1400219be:	je     0x140021a0e
   1400219c0:	call   0x14002412c
   1400219c5:	mov    rbx,rax
   1400219c8:	call   0x140023fb8
   1400219cd:	cmp    QWORD PTR [rbx+0xe0],rax
   1400219d4:	je     0x140021a0e
   1400219d6:	cmp    DWORD PTR [rsi],0xe0434f4d
   1400219dc:	je     0x140021a0e
   1400219de:	mov    rax,QWORD PTR [rsp+0xe8]
   1400219e6:	mov    r9,r13
   1400219e9:	mov    r8,rdi
   1400219ec:	mov    QWORD PTR [rsp+0x30],rax
   1400219f1:	mov    rdx,r14
   1400219f4:	mov    rcx,rsi
   1400219f7:	mov    DWORD PTR [rsp+0x28],r15d
   1400219fc:	mov    QWORD PTR [rsp+0x20],rbp
   140021a01:	call   0x14001e284
   140021a06:	test   eax,eax
   140021a08:	jne    0x140021b9c
   140021a0e:	cmp    DWORD PTR [rbp+0xc],0x0
   140021a12:	jne    0x140021a19
   140021a14:	call   0x140025880
   140021a19:	mov    r12d,DWORD PTR [rsp+0xd8]
   140021a21:	lea    rax,[rsp+0x60]
   140021a26:	mov    QWORD PTR [rsp+0x30],r13
   140021a2b:	mov    QWORD PTR [rsp+0x28],rax
   140021a30:	lea    rax,[rsp+0xb0]
   140021a38:	mov    r8d,r15d
   140021a3b:	mov    r9d,r12d
   140021a3e:	mov    rdx,rbp
   140021a41:	mov    rcx,r14
   140021a44:	mov    QWORD PTR [rsp+0x20],rax
   140021a49:	call   0x14001e2d8
   140021a4e:	mov    rdi,rax
   140021a51:	mov    eax,DWORD PTR [rsp+0xb0]
   140021a58:	jmp    0x140021b92
   140021a5d:	cmp    r12d,DWORD PTR [rdi]
   140021a60:	jl     0x140021b85
   140021a66:	cmp    r12d,DWORD PTR [rdi+0x4]
   140021a6a:	jg     0x140021b85
   140021a70:	call   0x14001e044
   140021a75:	movsxd rcx,DWORD PTR [rdi+0xc]
   140021a79:	lea    rdx,[rcx+rcx*4]
   140021a7d:	movsxd rcx,DWORD PTR [rdi+0x10]
   140021a81:	lea    rdx,[rcx+rdx*4]
   140021a85:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   140021a8a:	je     0x140021ab0
   140021a8c:	call   0x14001e044
   140021a91:	movsxd rcx,DWORD PTR [rdi+0xc]
   140021a95:	lea    rdx,[rcx+rcx*4]
   140021a99:	movsxd rcx,DWORD PTR [rdi+0x10]
   140021a9d:	lea    rdx,[rcx+rdx*4]
   140021aa1:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   140021aa6:	call   0x14001e044
   140021aab:	add    rax,rbx
   140021aae:	jmp    0x140021ab2
   140021ab0:	xor    eax,eax
   140021ab2:	test   rax,rax
   140021ab5:	je     0x140021aff
   140021ab7:	call   0x14001e044
   140021abc:	movsxd rcx,DWORD PTR [rdi+0xc]
   140021ac0:	lea    rdx,[rcx+rcx*4]
   140021ac4:	movsxd rcx,DWORD PTR [rdi+0x10]
   140021ac8:	lea    rdx,[rcx+rdx*4]
   140021acc:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   140021ad1:	je     0x140021af7
   140021ad3:	call   0x14001e044
   140021ad8:	movsxd rcx,DWORD PTR [rdi+0xc]
   140021adc:	lea    rdx,[rcx+rcx*4]
   140021ae0:	movsxd rcx,DWORD PTR [rdi+0x10]
   140021ae4:	lea    rdx,[rcx+rdx*4]
   140021ae8:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   140021aed:	call   0x14001e044
   140021af2:	add    rax,rbx
   140021af5:	jmp    0x140021af9
   140021af7:	xor    eax,eax
   140021af9:	cmp    BYTE PTR [rax+0x10],0x0
   140021afd:	jne    0x140021b7e
   140021aff:	call   0x14001e044
   140021b04:	movsxd rcx,DWORD PTR [rdi+0xc]
   140021b08:	lea    rdx,[rcx+rcx*4]
   140021b0c:	movsxd rcx,DWORD PTR [rdi+0x10]
   140021b10:	lea    rdx,[rcx+rdx*4]
   140021b14:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   140021b19:	jne    0x140021b7e
   140021b1b:	call   0x14001e044
   140021b20:	mov    ecx,DWORD PTR [rdi+0xc]
   140021b23:	mov    r8,QWORD PTR [rsp+0xc0]
   140021b2b:	mov    BYTE PTR [rsp+0x58],0x0
   140021b30:	mov    BYTE PTR [rsp+0x50],0x1
   140021b35:	dec    ecx
   140021b37:	movsxd rcx,ecx
   140021b3a:	mov    r9,r13
   140021b3d:	lea    rdx,[rcx+rcx*4]
   140021b41:	lea    rcx,[rax+rdx*4]
   140021b45:	movsxd rax,DWORD PTR [rdi+0x10]
   140021b49:	mov    rdx,r14
   140021b4c:	add    rcx,rax
   140021b4f:	mov    rax,QWORD PTR [rsp+0xe8]
   140021b57:	mov    QWORD PTR [rsp+0x48],rax
   140021b5c:	mov    DWORD PTR [rsp+0x40],r15d
   140021b61:	mov    QWORD PTR [rsp+0x38],rdi
   140021b66:	and    QWORD PTR [rsp+0x30],0x0
   140021b6c:	mov    QWORD PTR [rsp+0x28],rcx
   140021b71:	mov    rcx,rsi
   140021b74:	mov    QWORD PTR [rsp+0x20],rbp
   140021b79:	call   0x1400218ac
   140021b7e:	mov    eax,DWORD PTR [rsp+0xb0]
   140021b85:	inc    eax
   140021b87:	add    rdi,0x14
   140021b8b:	mov    DWORD PTR [rsp+0xb0],eax
   140021b92:	cmp    eax,DWORD PTR [rsp+0x60]
   140021b96:	jb     0x140021a5d
   140021b9c:	mov    rbx,QWORD PTR [rsp+0xb8]
   140021ba4:	add    rsp,0x70
   140021ba8:	pop    r15
   140021baa:	pop    r14
   140021bac:	pop    r13
   140021bae:	pop    r12
   140021bb0:	pop    rdi
   140021bb1:	pop    rsi
   140021bb2:	pop    rbp
   140021bb3:	ret    
   140021bb4:	mov    QWORD PTR [rsp+0x20],rbx
   140021bb9:	mov    QWORD PTR [rsp+0x18],r8
   140021bbe:	mov    QWORD PTR [rsp+0x10],rdx
   140021bc3:	push   rbp
   140021bc4:	push   rsi
   140021bc5:	push   rdi
   140021bc6:	push   r12
   140021bc8:	push   r13
   140021bca:	push   r14
   140021bcc:	push   r15
   140021bce:	sub    rsp,0xa0
   140021bd5:	mov    rbx,QWORD PTR [rsp+0x100]
   140021bdd:	xor    r15d,r15d
   140021be0:	mov    r12,rdx
   140021be3:	mov    rdi,rcx
   140021be6:	mov    rdx,r9
   140021be9:	mov    rcx,rbx
   140021bec:	mov    r13,r9
   140021bef:	mov    rbp,r8
   140021bf2:	mov    BYTE PTR [rsp+0x60],r15b
   140021bf7:	mov    r14b,r15b
   140021bfa:	mov    BYTE PTR [rsp+0xe0],r15b
   140021c02:	call   0x140027660
   140021c07:	lea    r9,[rsp+0x78]
   140021c0c:	mov    r8,rbx
   140021c0f:	mov    rdx,r13
   140021c12:	mov    rcx,r12
   140021c15:	mov    esi,eax
   140021c17:	call   0x14001df58
   140021c1c:	mov    r8,rbx
   140021c1f:	mov    rdx,r13
   140021c22:	mov    rcx,r12
   140021c25:	call   0x1400276d8
   140021c2a:	mov    r8,rbx
   140021c2d:	mov    rdx,r13
   140021c30:	cmp    esi,eax
   140021c32:	jle    0x140021c54
   140021c34:	lea    rcx,[rsp+0x78]
   140021c39:	mov    r9d,esi
   140021c3c:	call   0x140027690
   140021c41:	mov    r9d,esi
   140021c44:	mov    r8,rbx
   140021c47:	mov    rdx,r13
   140021c4a:	mov    rcx,r12
   140021c4d:	call   0x14002769c
   140021c52:	jmp    0x140021c5e
   140021c54:	mov    rcx,r12
   140021c57:	call   0x1400276d8
   140021c5c:	mov    esi,eax
   140021c5e:	cmp    esi,0xffffffff
   140021c61:	jl     0x140021c68
   140021c63:	cmp    esi,DWORD PTR [rbx+0x4]
   140021c66:	jl     0x140021c6d
   140021c68:	call   0x140025880
   140021c6d:	cmp    DWORD PTR [rdi],0xe06d7363
   140021c73:	jne    0x1400220c4
   140021c79:	cmp    DWORD PTR [rdi+0x18],0x4
   140021c7d:	jne    0x140021e33
   140021c83:	cmp    DWORD PTR [rdi+0x20],0x19930520
   140021c8a:	je     0x140021ca2
   140021c8c:	cmp    DWORD PTR [rdi+0x20],0x19930521
   140021c93:	je     0x140021ca2
   140021c95:	cmp    DWORD PTR [rdi+0x20],0x19930522
   140021c9c:	jne    0x140021e33
   140021ca2:	cmp    QWORD PTR [rdi+0x30],r15
   140021ca6:	jne    0x140021e33
   140021cac:	call   0x14002412c
   140021cb1:	cmp    QWORD PTR [rax+0xf0],r15
   140021cb8:	je     0x1400220a9
   140021cbe:	call   0x14002412c
   140021cc3:	mov    rdi,QWORD PTR [rax+0xf0]
   140021cca:	call   0x14002412c
   140021ccf:	mov    rcx,QWORD PTR [rdi+0x38]
   140021cd3:	mov    rbp,QWORD PTR [rax+0xf8]
   140021cda:	mov    BYTE PTR [rsp+0x60],0x1
   140021cdf:	mov    QWORD PTR [rsp+0xf0],rbp
   140021ce7:	call   0x14001e090
   140021cec:	mov    edx,0x1
   140021cf1:	mov    rcx,rdi
   140021cf4:	call   0x140029e08
   140021cf9:	cmp    eax,r15d
   140021cfc:	jne    0x140021d03
   140021cfe:	call   0x140025880
   140021d03:	cmp    DWORD PTR [rdi],0xe06d7363
   140021d09:	jne    0x140021d37
   140021d0b:	cmp    DWORD PTR [rdi+0x18],0x4
   140021d0f:	jne    0x140021d37
   140021d11:	cmp    DWORD PTR [rdi+0x20],0x19930520
   140021d18:	je     0x140021d2c
   140021d1a:	cmp    DWORD PTR [rdi+0x20],0x19930521
   140021d21:	je     0x140021d2c
   140021d23:	cmp    DWORD PTR [rdi+0x20],0x19930522
   140021d2a:	jne    0x140021d37
   140021d2c:	cmp    QWORD PTR [rdi+0x30],r15
   140021d30:	jne    0x140021d37
   140021d32:	call   0x140025880
   140021d37:	call   0x14002412c
   140021d3c:	cmp    QWORD PTR [rax+0x108],r15
   140021d43:	je     0x140021e33
   140021d49:	call   0x14002412c
   140021d4e:	mov    rbp,QWORD PTR [rax+0x108]
   140021d55:	call   0x14002412c
   140021d5a:	mov    rdx,rbp
   140021d5d:	mov    rcx,rdi
   140021d60:	mov    QWORD PTR [rax+0x108],r15
   140021d67:	call   0x1400212d4
   140021d6c:	cmp    al,r15b
   140021d6f:	jne    0x140021e2b
   140021d75:	cmp    DWORD PTR [rbp+0x0],r15d
   140021d79:	mov    r12d,r15d
   140021d7c:	jle    0x140021dd3
   140021d7e:	mov    rsi,r15
   140021d81:	call   0x14001e044
   140021d86:	movsxd rcx,DWORD PTR [rbp+0x4]
   140021d8a:	add    rax,rsi
   140021d8d:	cmp    DWORD PTR [rcx+rax*1+0x4],r15d
   140021d92:	je     0x140021daf
   140021d94:	call   0x14001e044
   140021d99:	movsxd rcx,DWORD PTR [rbp+0x4]
   140021d9d:	add    rax,rsi
   140021da0:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140021da5:	call   0x14001e044
   140021daa:	add    rax,rbx
   140021dad:	jmp    0x140021db2
   140021daf:	mov    rax,r15
   140021db2:	lea    rdx,[rip+0x276bf]        # 0x140049478
   140021db9:	mov    rcx,rax
   140021dbc:	call   0x14001cac4
   140021dc1:	cmp    al,r15b
   140021dc4:	jne    0x140021dd9
   140021dc6:	inc    r12d
   140021dc9:	add    rsi,0x14
   140021dcd:	cmp    r12d,DWORD PTR [rbp+0x0]
   140021dd1:	jl     0x140021d81
   140021dd3:	call   0x14002585c
   140021dd8:	int3   
   140021dd9:	mov    dl,0x1
   140021ddb:	mov    rcx,rdi
   140021dde:	call   0x140021250
   140021de3:	lea    r11,[rip+0x19926]        # 0x14003b710
   140021dea:	lea    rdx,[rsp+0xe0]
   140021df2:	lea    rcx,[rsp+0x88]
   140021dfa:	mov    QWORD PTR [rsp+0xe0],r11
   140021e02:	call   0x14001c834
   140021e07:	lea    r11,[rip+0x198f2]        # 0x14003b700
   140021e0e:	lea    rdx,[rip+0x25a2b]        # 0x140047840
   140021e15:	lea    rcx,[rsp+0x88]
   140021e1d:	mov    QWORD PTR [rsp+0x88],r11
   140021e25:	call   0x14001e5c0
   140021e2a:	int3   
   140021e2b:	mov    rbp,QWORD PTR [rsp+0xf0]
   140021e33:	cmp    DWORD PTR [rdi],0xe06d7363
   140021e39:	jne    0x1400220c4
   140021e3f:	cmp    DWORD PTR [rdi+0x18],0x4
   140021e43:	jne    0x1400220c4
   140021e49:	cmp    DWORD PTR [rdi+0x20],0x19930520
   140021e50:	je     0x140021e68
   140021e52:	cmp    DWORD PTR [rdi+0x20],0x19930521
   140021e59:	je     0x140021e68
   140021e5b:	cmp    DWORD PTR [rdi+0x20],0x19930522
   140021e62:	jne    0x1400220c4
   140021e68:	cmp    DWORD PTR [rbx+0xc],r15d
   140021e6c:	jbe    0x140021ff6
   140021e72:	mov    r8d,DWORD PTR [rsp+0x110]
   140021e7a:	lea    rax,[rsp+0x68]
   140021e7f:	mov    QWORD PTR [rsp+0x30],r13
   140021e84:	mov    QWORD PTR [rsp+0x28],rax
   140021e89:	lea    rax,[rsp+0x64]
   140021e8e:	mov    r9d,esi
   140021e91:	mov    rdx,rbx
   140021e94:	mov    rcx,r12
   140021e97:	mov    QWORD PTR [rsp+0x20],rax
   140021e9c:	call   0x14001e2d8
   140021ea1:	mov    ecx,DWORD PTR [rsp+0x64]
   140021ea5:	mov    rbp,rax
   140021ea8:	mov    eax,DWORD PTR [rsp+0x68]
   140021eac:	cmp    ecx,eax
   140021eae:	jae    0x140021ff6
   140021eb4:	cmp    DWORD PTR [rbp+0x0],esi
   140021eb7:	jg     0x140021fdb
   140021ebd:	cmp    esi,DWORD PTR [rbp+0x4]
   140021ec0:	jg     0x140021fdb
   140021ec6:	call   0x14001e044
   140021ecb:	movsxd r12,DWORD PTR [rbp+0x10]
   140021ecf:	mov    r14d,DWORD PTR [rbp+0xc]
   140021ed3:	add    r12,rax
   140021ed6:	cmp    r14d,r15d
   140021ed9:	jle    0x140021fc3
   140021edf:	call   0x14001e05c
   140021ee4:	mov    rcx,QWORD PTR [rdi+0x30]
   140021ee8:	movsxd rdx,DWORD PTR [rcx+0xc]
   140021eec:	lea    rax,[rax+rdx*1+0x4]
   140021ef1:	mov    QWORD PTR [rsp+0x70],rax
   140021ef6:	call   0x14001e05c
   140021efb:	mov    rcx,QWORD PTR [rdi+0x30]
   140021eff:	movsxd rdx,DWORD PTR [rcx+0xc]
   140021f03:	mov    r15d,DWORD PTR [rax+rdx*1]
   140021f07:	jmp    0x140021f3d
   140021f09:	call   0x14001e05c
   140021f0e:	mov    rcx,QWORD PTR [rsp+0x70]
   140021f13:	mov    r8,QWORD PTR [rdi+0x30]
   140021f17:	movsxd rcx,DWORD PTR [rcx]
   140021f1a:	add    rax,rcx
   140021f1d:	mov    rcx,r12
   140021f20:	mov    rdx,rax
   140021f23:	mov    QWORD PTR [rsp+0x80],rax
   140021f2b:	call   0x140020f4c
   140021f30:	test   eax,eax
   140021f32:	jne    0x140021f4e
   140021f34:	dec    r15d
   140021f37:	add    QWORD PTR [rsp+0x70],0x4
   140021f3d:	test   r15d,r15d
   140021f40:	jg     0x140021f09
   140021f42:	dec    r14d
   140021f45:	add    r12,0x14
   140021f49:	xor    r15d,r15d
   140021f4c:	jmp    0x140021ed6
   140021f4e:	mov    al,BYTE PTR [rsp+0x108]
   140021f55:	mov    r8,QWORD PTR [rsp+0xf0]
   140021f5d:	mov    r14b,0x1
   140021f60:	mov    BYTE PTR [rsp+0x58],al
   140021f64:	mov    al,BYTE PTR [rsp+0x60]
   140021f68:	mov    r9,r13
   140021f6b:	mov    BYTE PTR [rsp+0x50],al
   140021f6f:	mov    rax,QWORD PTR [rsp+0x118]
   140021f77:	mov    rcx,rdi
   140021f7a:	mov    QWORD PTR [rsp+0x48],rax
   140021f7f:	mov    eax,DWORD PTR [rsp+0x110]
   140021f86:	mov    BYTE PTR [rsp+0xe0],r14b
   140021f8e:	mov    DWORD PTR [rsp+0x40],eax
   140021f92:	mov    rax,QWORD PTR [rsp+0x80]
   140021f9a:	mov    QWORD PTR [rsp+0x38],rbp
   140021f9f:	mov    QWORD PTR [rsp+0x30],rax
   140021fa4:	mov    QWORD PTR [rsp+0x28],r12
   140021fa9:	mov    r12,QWORD PTR [rsp+0xe8]
   140021fb1:	mov    rdx,r12
   140021fb4:	mov    QWORD PTR [rsp+0x20],rbx
   140021fb9:	call   0x1400218ac
   140021fbe:	xor    r15d,r15d
   140021fc1:	jmp    0x140021fd3
   140021fc3:	mov    r14b,BYTE PTR [rsp+0xe0]
   140021fcb:	mov    r12,QWORD PTR [rsp+0xe8]
   140021fd3:	mov    eax,DWORD PTR [rsp+0x68]
   140021fd7:	mov    ecx,DWORD PTR [rsp+0x64]
   140021fdb:	inc    ecx
   140021fdd:	add    rbp,0x14
   140021fe1:	mov    DWORD PTR [rsp+0x64],ecx
   140021fe5:	cmp    ecx,eax
   140021fe7:	jb     0x140021eb4
   140021fed:	cmp    r14b,r15b
   140021ff0:	jne    0x140022096
   140021ff6:	mov    eax,DWORD PTR [rbx]
   140021ff8:	and    eax,0x1fffffff
   140021ffd:	cmp    eax,0x19930521
   140022002:	jb     0x140022096
   140022008:	mov    esi,DWORD PTR [rbx+0x20]
   14002200b:	cmp    esi,r15d
   14002200e:	je     0x14002201d
   140022010:	movsxd rsi,esi
   140022013:	call   0x14001e044
   140022018:	add    rax,rsi
   14002201b:	jmp    0x140022020
   14002201d:	mov    rax,r15
   140022020:	cmp    rax,r15
   140022023:	je     0x140022096
   140022025:	cmp    esi,r15d
   140022028:	je     0x14002203b
   14002202a:	call   0x14001e044
   14002202f:	mov    rdx,rax
   140022032:	movsxd rax,DWORD PTR [rbx+0x20]
   140022036:	add    rdx,rax
   140022039:	jmp    0x14002203e
   14002203b:	mov    rdx,r15
   14002203e:	mov    rcx,rdi
   140022041:	call   0x1400212d4
   140022046:	cmp    al,r15b
   140022049:	jne    0x140022096
   14002204b:	lea    r9,[rsp+0xe0]
   140022053:	mov    r8,rbx
   140022056:	mov    rdx,r13
   140022059:	mov    rcx,r12
   14002205c:	call   0x14001df58
   140022061:	mov    cl,BYTE PTR [rsp+0x108]
   140022068:	mov    r8,QWORD PTR [rsp+0xf0]
   140022070:	mov    BYTE PTR [rsp+0x40],cl
   140022074:	mov    QWORD PTR [rsp+0x38],r13
   140022079:	mov    QWORD PTR [rsp+0x30],rbx
   14002207e:	or     DWORD PTR [rsp+0x28],0xffffffff
   140022083:	mov    r9,rax
   140022086:	mov    rdx,rdi
   140022089:	mov    rcx,r12
   14002208c:	mov    QWORD PTR [rsp+0x20],r15
   140022091:	call   0x14001e4d8
   140022096:	call   0x14002412c
   14002209b:	cmp    QWORD PTR [rax+0x108],r15
   1400220a2:	je     0x1400220a9
   1400220a4:	call   0x140025880
   1400220a9:	mov    rbx,QWORD PTR [rsp+0xf8]
   1400220b1:	add    rsp,0xa0
   1400220b8:	pop    r15
   1400220ba:	pop    r14
   1400220bc:	pop    r13
   1400220be:	pop    r12
   1400220c0:	pop    rdi
   1400220c1:	pop    rsi
   1400220c2:	pop    rbp
   1400220c3:	ret    
   1400220c4:	cmp    DWORD PTR [rbx+0xc],r15d
   1400220c8:	jbe    0x140022096
   1400220ca:	cmp    BYTE PTR [rsp+0x108],r15b
   1400220d2:	jne    0x140022108
   1400220d4:	mov    rax,QWORD PTR [rsp+0x118]
   1400220dc:	mov    r9,r13
   1400220df:	mov    r8,rbp
   1400220e2:	mov    QWORD PTR [rsp+0x38],rax
   1400220e7:	mov    eax,DWORD PTR [rsp+0x110]
   1400220ee:	mov    rdx,r12
   1400220f1:	mov    DWORD PTR [rsp+0x30],eax
   1400220f5:	mov    rcx,rdi
   1400220f8:	mov    DWORD PTR [rsp+0x28],esi
   1400220fc:	mov    QWORD PTR [rsp+0x20],rbx
   140022101:	call   0x140021970
   140022106:	jmp    0x140022096
   140022108:	call   0x14002585c
   14002210d:	int3   
   14002210e:	int3   
   14002210f:	int3   
   140022110:	rex push rbx
   140022112:	sub    rsp,0x20
   140022116:	mov    rbx,rcx
   140022119:	call   0x14001c8c4
   14002211e:	lea    r11,[rip+0x195db]        # 0x14003b700
   140022125:	mov    QWORD PTR [rbx],r11
   140022128:	mov    rax,rbx
   14002212b:	add    rsp,0x20
   14002212f:	pop    rbx
   140022130:	ret    
   140022131:	int3   
   140022132:	int3   
   140022133:	int3   
   140022134:	mov    QWORD PTR [rsp+0x8],rbx
   140022139:	mov    QWORD PTR [rsp+0x10],rbp
   14002213e:	mov    QWORD PTR [rsp+0x18],rsi
   140022143:	push   rdi
   140022144:	push   r12
   140022146:	push   r14
   140022148:	sub    rsp,0x40
   14002214c:	mov    rbp,r9
   14002214f:	mov    r12,r8
   140022152:	mov    rsi,rdx
   140022155:	mov    rbx,rcx
   140022158:	call   0x14002412c
   14002215d:	mov    rdi,QWORD PTR [rsp+0x80]
   140022165:	cmp    DWORD PTR [rax+0x2c0],0x0
   14002216c:	mov    edx,0x1fffffff
   140022171:	mov    r8d,0x80000029
   140022177:	mov    r9d,0x80000026
   14002217d:	mov    r14d,0x1
   140022183:	jne    0x1400221bd
   140022185:	cmp    DWORD PTR [rbx],0xe06d7363
   14002218b:	je     0x1400221bd
   14002218d:	cmp    DWORD PTR [rbx],r8d
   140022190:	jne    0x1400221a2
   140022192:	cmp    DWORD PTR [rbx+0x18],0xf
   140022196:	jne    0x1400221a2
   140022198:	cmp    QWORD PTR [rbx+0x60],0x19930520
   1400221a0:	je     0x1400221bd
   1400221a2:	cmp    DWORD PTR [rbx],r9d
   1400221a5:	je     0x1400221bd
   1400221a7:	mov    ecx,DWORD PTR [rdi]
   1400221a9:	and    ecx,edx
   1400221ab:	cmp    ecx,0x19930522
   1400221b1:	jb     0x1400221bd
   1400221b3:	test   BYTE PTR [rdi+0x24],r14b
   1400221b7:	jne    0x14002233d
   1400221bd:	mov    eax,DWORD PTR [rbx+0x4]
   1400221c0:	test   al,0x66
   1400221c2:	je     0x14002225b
   1400221c8:	cmp    DWORD PTR [rdi+0x4],0x0
   1400221cc:	je     0x14002233d
   1400221d2:	cmp    DWORD PTR [rsp+0x88],0x0
   1400221da:	jne    0x14002233d
   1400221e0:	and    eax,0x20
   1400221e3:	je     0x140022224
   1400221e5:	cmp    DWORD PTR [rbx],r9d
   1400221e8:	jne    0x140022224
   1400221ea:	mov    r8,QWORD PTR [r12+0xf8]
   1400221f2:	mov    rdx,rbp
   1400221f5:	mov    rcx,rdi
   1400221f8:	call   0x1400275d4
   1400221fd:	cmp    eax,0xffffffff
   140022200:	mov    ebx,eax
   140022202:	jl     0x140022209
   140022204:	cmp    eax,DWORD PTR [rdi+0x4]
   140022207:	jl     0x14002220e
   140022209:	call   0x140025880
   14002220e:	mov    r9d,ebx
   140022211:	mov    rcx,rsi
   140022214:	mov    rdx,rbp
   140022217:	mov    r8,rdi
   14002221a:	call   0x1400210bc
   14002221f:	jmp    0x14002233d
   140022224:	test   eax,eax
   140022226:	je     0x140022248
   140022228:	cmp    DWORD PTR [rbx],r8d
   14002222b:	jne    0x140022248
   14002222d:	mov    esi,DWORD PTR [rbx+0x38]
   140022230:	cmp    esi,0xffffffff
   140022233:	jl     0x14002223a
   140022235:	cmp    esi,DWORD PTR [rdi+0x4]
   140022238:	jl     0x14002223f
   14002223a:	call   0x140025880
   14002223f:	mov    rcx,QWORD PTR [rbx+0x28]
   140022243:	mov    r9d,esi
   140022246:	jmp    0x140022214
   140022248:	mov    r8,rdi
   14002224b:	mov    rdx,rbp
   14002224e:	mov    rcx,rsi
   140022251:	call   0x14001e0ac
   140022256:	jmp    0x14002233d
   14002225b:	cmp    DWORD PTR [rdi+0xc],0x0
   14002225f:	jne    0x14002228f
   140022261:	mov    eax,DWORD PTR [rdi]
   140022263:	and    eax,edx
   140022265:	cmp    eax,0x19930521
   14002226a:	jb     0x14002233d
   140022270:	cmp    DWORD PTR [rdi+0x20],0x0
   140022274:	je     0x140022284
   140022276:	call   0x14001e044
   14002227b:	movsxd rcx,DWORD PTR [rdi+0x20]
   14002227f:	add    rax,rcx
   140022282:	jmp    0x140022286
   140022284:	xor    eax,eax
   140022286:	test   rax,rax
   140022289:	je     0x14002233d
   14002228f:	cmp    DWORD PTR [rbx],0xe06d7363
   140022295:	jne    0x140022304
   140022297:	cmp    DWORD PTR [rbx+0x18],0x3
   14002229b:	jb     0x140022304
   14002229d:	cmp    DWORD PTR [rbx+0x20],0x19930522
   1400222a4:	jbe    0x140022304
   1400222a6:	mov    rax,QWORD PTR [rbx+0x30]
   1400222aa:	cmp    DWORD PTR [rax+0x8],0x0
   1400222ae:	je     0x1400222c2
   1400222b0:	call   0x14001e05c
   1400222b5:	mov    rcx,QWORD PTR [rbx+0x30]
   1400222b9:	movsxd r11,DWORD PTR [rcx+0x8]
   1400222bd:	add    r11,rax
   1400222c0:	jmp    0x1400222c5
   1400222c2:	xor    r11d,r11d
   1400222c5:	test   r11,r11
   1400222c8:	je     0x140022304
   1400222ca:	movzx  eax,BYTE PTR [rsp+0x98]
   1400222d2:	mov    r9,rbp
   1400222d5:	mov    r8,r12
   1400222d8:	mov    DWORD PTR [rsp+0x38],eax
   1400222dc:	mov    rax,QWORD PTR [rsp+0x90]
   1400222e4:	mov    rdx,rsi
   1400222e7:	mov    QWORD PTR [rsp+0x30],rax
   1400222ec:	mov    eax,DWORD PTR [rsp+0x88]
   1400222f3:	mov    rcx,rbx
   1400222f6:	mov    DWORD PTR [rsp+0x28],eax
   1400222fa:	mov    QWORD PTR [rsp+0x20],rdi
   1400222ff:	call   r11
   140022302:	jmp    0x140022340
   140022304:	mov    rax,QWORD PTR [rsp+0x90]
   14002230c:	mov    r9,rbp
   14002230f:	mov    r8,r12
   140022312:	mov    QWORD PTR [rsp+0x38],rax
   140022317:	mov    eax,DWORD PTR [rsp+0x88]
   14002231e:	mov    rdx,rsi
   140022321:	mov    DWORD PTR [rsp+0x30],eax
   140022325:	mov    al,BYTE PTR [rsp+0x98]
   14002232c:	mov    rcx,rbx
   14002232f:	mov    BYTE PTR [rsp+0x28],al
   140022333:	mov    QWORD PTR [rsp+0x20],rdi
   140022338:	call   0x140021bb4
   14002233d:	mov    eax,r14d
   140022340:	mov    rbx,QWORD PTR [rsp+0x60]
   140022345:	mov    rbp,QWORD PTR [rsp+0x68]
   14002234a:	mov    rsi,QWORD PTR [rsp+0x70]
   14002234f:	add    rsp,0x40
   140022353:	pop    r14
   140022355:	pop    r12
   140022357:	pop    rdi
   140022358:	ret    
   140022359:	int3   
   14002235a:	int3   
   14002235b:	int3   
   14002235c:	mov    QWORD PTR [rsp+0x10],rbp
   140022361:	push   rdi
   140022362:	sub    rsp,0x70
   140022366:	movsxd rdi,ecx
   140022369:	lea    rcx,[rsp+0x50]
   14002236e:	call   0x14001cf30
   140022373:	cmp    edi,0x100
   140022379:	jae    0x1400223dd
   14002237b:	mov    rdx,QWORD PTR [rsp+0x50]
   140022380:	cmp    DWORD PTR [rdx+0x10c],0x1
   140022387:	jle    0x1400223a1
   140022389:	lea    r8,[rsp+0x50]
   14002238e:	mov    edx,0x1
   140022393:	mov    ecx,edi
   140022395:	call   0x140029c40
   14002239a:	mov    rdx,QWORD PTR [rsp+0x50]
   14002239f:	jmp    0x1400223af
   1400223a1:	mov    rax,QWORD PTR [rdx+0x140]
   1400223a8:	movzx  eax,WORD PTR [rax+rdi*2]
   1400223ac:	and    eax,0x1
   1400223af:	test   eax,eax
   1400223b1:	je     0x1400223c3
   1400223b3:	mov    rax,QWORD PTR [rdx+0x148]
   1400223ba:	movzx  eax,BYTE PTR [rax+rdi*1]
   1400223be:	jmp    0x1400224ab
   1400223c3:	cmp    BYTE PTR [rsp+0x68],0x0
   1400223c8:	je     0x1400223d6
   1400223ca:	mov    rax,QWORD PTR [rsp+0x60]
   1400223cf:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400223d6:	mov    eax,edi
   1400223d8:	jmp    0x1400224be
   1400223dd:	mov    rax,QWORD PTR [rsp+0x50]
   1400223e2:	cmp    DWORD PTR [rax+0x10c],0x1
   1400223e9:	jle    0x140022421
   1400223eb:	mov    ebp,edi
   1400223ed:	lea    rdx,[rsp+0x50]
   1400223f2:	sar    ebp,0x8
   1400223f5:	movzx  ecx,bpl
   1400223f9:	call   0x140029e14
   1400223fe:	test   eax,eax
   140022400:	je     0x140022421
   140022402:	mov    BYTE PTR [rsp+0x80],bpl
   14002240a:	mov    BYTE PTR [rsp+0x81],dil
   140022412:	mov    BYTE PTR [rsp+0x82],0x0
   14002241a:	mov    edx,0x2
   14002241f:	jmp    0x140022441
   140022421:	call   0x140020aa4
   140022426:	mov    edx,0x1
   14002242b:	mov    DWORD PTR [rax],0x2a
   140022431:	mov    BYTE PTR [rsp+0x80],dil
   140022439:	mov    BYTE PTR [rsp+0x81],0x0
   140022441:	mov    rcx,QWORD PTR [rsp+0x50]
   140022446:	mov    DWORD PTR [rsp+0x40],0x1
   14002244e:	lea    r9,[rsp+0x80]
   140022456:	mov    eax,DWORD PTR [rcx+0x4]
   140022459:	mov    r8d,0x100
   14002245f:	mov    DWORD PTR [rsp+0x38],eax
   140022463:	lea    rax,[rsp+0x90]
   14002246b:	mov    DWORD PTR [rsp+0x30],0x3
   140022473:	mov    QWORD PTR [rsp+0x28],rax
   140022478:	mov    DWORD PTR [rsp+0x20],edx
   14002247c:	mov    edx,DWORD PTR [rcx+0x14]
   14002247f:	lea    rcx,[rsp+0x50]
   140022484:	call   0x14001fed8
   140022489:	test   eax,eax
   14002248b:	je     0x1400223c3
   140022491:	cmp    eax,0x1
   140022494:	movzx  eax,BYTE PTR [rsp+0x90]
   14002249c:	je     0x1400224ab
   14002249e:	movzx  ecx,BYTE PTR [rsp+0x91]
   1400224a6:	shl    eax,0x8
   1400224a9:	or     eax,ecx
   1400224ab:	cmp    BYTE PTR [rsp+0x68],0x0
   1400224b0:	je     0x1400224be
   1400224b2:	mov    rcx,QWORD PTR [rsp+0x60]
   1400224b7:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400224be:	mov    rbp,QWORD PTR [rsp+0x88]
   1400224c6:	add    rsp,0x70
   1400224ca:	pop    rdi
   1400224cb:	ret    
   1400224cc:	sub    rsp,0x28
   1400224d0:	cmp    DWORD PTR [rip+0x2962d],0x0        # 0x14004bb04
   1400224d7:	jne    0x1400224e8
   1400224d9:	lea    eax,[rcx-0x41]
   1400224dc:	cmp    eax,0x19
   1400224df:	ja     0x1400224e4
   1400224e1:	add    ecx,0x20
   1400224e4:	mov    eax,ecx
   1400224e6:	jmp    0x1400224ef
   1400224e8:	xor    edx,edx
   1400224ea:	call   0x14002235c
   1400224ef:	add    rsp,0x28
   1400224f3:	ret    
   1400224f4:	lea    rax,[rip+0x7b35]        # 0x14002a030
   1400224fb:	lea    rcx,[rip+0x874e]        # 0x14002ac50
   140022502:	mov    QWORD PTR [rip+0x27fff],rax        # 0x14004a508
   140022509:	lea    rax,[rip+0x7b10]        # 0x14002a020
   140022510:	mov    QWORD PTR [rip+0x27fe9],rcx        # 0x14004a500
   140022517:	mov    QWORD PTR [rip+0x27ff2],rax        # 0x14004a510
   14002251e:	lea    rax,[rip+0x7b03]        # 0x14002a028
   140022525:	mov    QWORD PTR [rip+0x27ffc],rcx        # 0x14004a528
   14002252c:	mov    QWORD PTR [rip+0x27fe5],rax        # 0x14004a518
   140022533:	lea    rax,[rip+0x7a8a]        # 0x140029fc4
   14002253a:	mov    QWORD PTR [rip+0x27fdf],rax        # 0x14004a520
   140022541:	lea    rax,[rip+0x8670]        # 0x14002abb8
   140022548:	mov    QWORD PTR [rip+0x27fe1],rax        # 0x14004a530
   14002254f:	lea    rax,[rip+0x7a86]        # 0x140029fdc
   140022556:	mov    QWORD PTR [rip+0x27fdb],rax        # 0x14004a538
   14002255d:	lea    rax,[rip+0x79c0]        # 0x140029f24
   140022564:	mov    QWORD PTR [rip+0x27fd5],rax        # 0x14004a540
   14002256b:	lea    rax,[rip+0x7932]        # 0x140029ea4
   140022572:	mov    QWORD PTR [rip+0x27fcf],rax        # 0x14004a548
   140022579:	ret    
   14002257a:	int3   
   14002257b:	int3   
   14002257c:	jmp    0x1400224f4
   140022581:	int3   
   140022582:	int3   
   140022583:	int3   
   140022584:	mov    rax,rsp
   140022587:	mov    QWORD PTR [rax+0x8],rbx
   14002258b:	mov    QWORD PTR [rax+0x10],rsi
   14002258f:	push   rdi
   140022590:	sub    rsp,0x80
   140022597:	mov    rsi,rcx
   14002259a:	mov    rbx,rcx
   14002259d:	mov    rdi,rdx
   1400225a0:	lea    rcx,[rax-0x40]
   1400225a4:	mov    rdx,r8
   1400225a7:	movaps XMMWORD PTR [rax-0x18],xmm6
   1400225ab:	call   0x14001cf30
   1400225b0:	test   rdi,rdi
   1400225b3:	je     0x1400225b8
   1400225b5:	mov    QWORD PTR [rdi],rbx
   1400225b8:	test   rsi,rsi
   1400225bb:	jne    0x1400225f8
   1400225bd:	call   0x140020aa4
   1400225c2:	and    QWORD PTR [rsp+0x20],rsi
   1400225c7:	xor    r9d,r9d
   1400225ca:	xor    r8d,r8d
   1400225cd:	xor    edx,edx
   1400225cf:	xor    ecx,ecx
   1400225d1:	mov    DWORD PTR [rax],0x16
   1400225d7:	call   0x14001ccf0
   1400225dc:	cmp    BYTE PTR [rsp+0x60],sil
   1400225e1:	je     0x1400225ef
   1400225e3:	mov    rax,QWORD PTR [rsp+0x58]
   1400225e8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400225ef:	xorpd  xmm0,xmm0
   1400225f3:	jmp    0x1400226e4
   1400225f8:	mov    rdx,QWORD PTR [rsp+0x48]
   1400225fd:	cmp    DWORD PTR [rdx+0x10c],0x1
   140022604:	jle    0x14002261f
   140022606:	movzx  ecx,BYTE PTR [rbx]
   140022609:	lea    r8,[rsp+0x48]
   14002260e:	mov    edx,0x8
   140022613:	call   0x140029c40
   140022618:	mov    rdx,QWORD PTR [rsp+0x48]
   14002261d:	jmp    0x140022630
   14002261f:	movzx  ecx,BYTE PTR [rbx]
   140022622:	mov    rax,QWORD PTR [rdx+0x140]
   140022629:	movzx  eax,WORD PTR [rax+rcx*2]
   14002262d:	and    eax,0x8
   140022630:	test   eax,eax
   140022632:	je     0x140022639
   140022634:	inc    rbx
   140022637:	jmp    0x1400225fd
   140022639:	mov    rcx,rbx
   14002263c:	call   0x14001c650
   140022641:	lea    rcx,[rsp+0x30]
   140022646:	xor    r9d,r9d
   140022649:	mov    r8,rax
   14002264c:	lea    rax,[rsp+0x48]
   140022651:	mov    rdx,rbx
   140022654:	mov    QWORD PTR [rsp+0x28],rax
   140022659:	and    DWORD PTR [rsp+0x20],0x0
   14002265e:	call   0x14002acb0
   140022663:	test   rdi,rdi
   140022666:	je     0x140022672
   140022668:	movsxd rcx,DWORD PTR [rax+0x4]
   14002266c:	add    rcx,rbx
   14002266f:	mov    QWORD PTR [rdi],rcx
   140022672:	test   DWORD PTR [rax],0x240
   140022678:	je     0x140022688
   14002267a:	xorpd  xmm6,xmm6
   14002267e:	test   rdi,rdi
   140022681:	je     0x1400226cd
   140022683:	mov    QWORD PTR [rdi],rsi
   140022686:	jmp    0x1400226cd
   140022688:	test   BYTE PTR [rax],0x81
   14002268b:	je     0x1400226a4
   14002268d:	cmp    BYTE PTR [rbx],0x2d
   140022690:	movsd  xmm6,QWORD PTR [rip+0x27eb8]        # 0x14004a550
   140022698:	jne    0x1400226bb
   14002269a:	xorpd  xmm6,XMMWORD PTR [rip+0x1909e]        # 0x14003b740
   1400226a2:	jmp    0x1400226bb
   1400226a4:	bt     DWORD PTR [rax],0x8
   1400226a8:	jae    0x1400226c8
   1400226aa:	movsd  xmm0,QWORD PTR [rax+0x10]
   1400226af:	xorpd  xmm6,xmm6
   1400226b3:	ucomisd xmm0,xmm6
   1400226b7:	jp     0x1400226c8
   1400226b9:	jne    0x1400226c8
   1400226bb:	call   0x140020aa4
   1400226c0:	mov    DWORD PTR [rax],0x22
   1400226c6:	jmp    0x1400226cd
   1400226c8:	movsd  xmm6,QWORD PTR [rax+0x10]
   1400226cd:	cmp    BYTE PTR [rsp+0x60],0x0
   1400226d2:	je     0x1400226e0
   1400226d4:	mov    rax,QWORD PTR [rsp+0x58]
   1400226d9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400226e0:	movapd xmm0,xmm6
   1400226e4:	movaps xmm6,XMMWORD PTR [rsp+0x70]
   1400226e9:	lea    r11,[rsp+0x80]
   1400226f1:	mov    rbx,QWORD PTR [r11+0x10]
   1400226f5:	mov    rsi,QWORD PTR [r11+0x18]
   1400226f9:	mov    rsp,r11
   1400226fc:	pop    rdi
   1400226fd:	ret    
   1400226fe:	int3   
   1400226ff:	int3   
   140022700:	xor    r8d,r8d
   140022703:	jmp    0x140022584
   140022708:	mov    QWORD PTR [rsp+0x18],rbx
   14002270d:	push   rsi
   14002270e:	push   rdi
   14002270f:	push   r12
   140022711:	sub    rsp,0x20
   140022715:	test   BYTE PTR [rcx+0x18],0x40
   140022719:	mov    rdi,rcx
   14002271c:	lea    r12,[rip+0x2abfd]        # 0x14004d320
   140022723:	lea    rsi,[rip+0x279b6]        # 0x14004a0e0
   14002272a:	jne    0x1400227db
   140022730:	call   0x14002b1bc
   140022735:	cmp    eax,0xffffffff
   140022738:	je     0x14002276f
   14002273a:	mov    rcx,rdi
   14002273d:	call   0x14002b1bc
   140022742:	cmp    eax,0xfffffffe
   140022745:	je     0x14002276f
   140022747:	mov    rcx,rdi
   14002274a:	call   0x14002b1bc
   14002274f:	mov    rcx,rdi
   140022752:	movsxd rbx,eax
   140022755:	sar    rbx,0x5
   140022759:	call   0x14002b1bc
   14002275e:	mov    r11d,eax
   140022761:	and    r11d,0x1f
   140022765:	imul   r11,r11,0x58
   140022769:	add    r11,QWORD PTR [r12+rbx*8]
   14002276d:	jmp    0x140022772
   14002276f:	mov    r11,rsi
   140022772:	test   BYTE PTR [r11+0x38],0x7f
   140022777:	je     0x1400227db
   140022779:	add    DWORD PTR [rdi+0x8],0xffffffff
   14002277d:	js     0x14002278d
   14002277f:	mov    rax,QWORD PTR [rdi]
   140022782:	movzx  ecx,BYTE PTR [rax]
   140022785:	inc    rax
   140022788:	mov    QWORD PTR [rdi],rax
   14002278b:	jmp    0x140022797
   14002278d:	mov    rcx,rdi
   140022790:	call   0x14002b060
   140022795:	mov    ecx,eax
   140022797:	cmp    ecx,0xffffffff
   14002279a:	jne    0x1400227a6
   14002279c:	mov    eax,0xffff
   1400227a1:	jmp    0x1400228ef
   1400227a6:	add    DWORD PTR [rdi+0x8],0xffffffff
   1400227aa:	mov    BYTE PTR [rsp+0x40],cl
   1400227ae:	js     0x1400227be
   1400227b0:	mov    rax,QWORD PTR [rdi]
   1400227b3:	movzx  ecx,BYTE PTR [rax]
   1400227b6:	inc    rax
   1400227b9:	mov    QWORD PTR [rdi],rax
   1400227bc:	jmp    0x1400227c8
   1400227be:	mov    rcx,rdi
   1400227c1:	call   0x14002b060
   1400227c6:	mov    ecx,eax
   1400227c8:	cmp    ecx,0xffffffff
   1400227cb:	je     0x14002279c
   1400227cd:	mov    BYTE PTR [rsp+0x41],cl
   1400227d1:	mov    ax,WORD PTR [rsp+0x40]
   1400227d6:	jmp    0x1400228ef
   1400227db:	test   BYTE PTR [rdi+0x18],0x40
   1400227df:	jne    0x1400228d2
   1400227e5:	mov    rcx,rdi
   1400227e8:	call   0x14002b1bc
   1400227ed:	cmp    eax,0xffffffff
   1400227f0:	je     0x140022823
   1400227f2:	mov    rcx,rdi
   1400227f5:	call   0x14002b1bc
   1400227fa:	cmp    eax,0xfffffffe
   1400227fd:	je     0x140022823
   1400227ff:	mov    rcx,rdi
   140022802:	call   0x14002b1bc
   140022807:	mov    rcx,rdi
   14002280a:	movsxd rbx,eax
   14002280d:	sar    rbx,0x5
   140022811:	call   0x14002b1bc
   140022816:	mov    esi,eax
   140022818:	and    esi,0x1f
   14002281b:	imul   rsi,rsi,0x58
   14002281f:	add    rsi,QWORD PTR [r12+rbx*8]
   140022823:	test   BYTE PTR [rsi+0x8],0x80
   140022827:	je     0x1400228d2
   14002282d:	add    DWORD PTR [rdi+0x8],0xffffffff
   140022831:	mov    ebx,0x1
   140022836:	js     0x140022846
   140022838:	mov    rax,QWORD PTR [rdi]
   14002283b:	movzx  ecx,BYTE PTR [rax]
   14002283e:	inc    rax
   140022841:	mov    QWORD PTR [rdi],rax
   140022844:	jmp    0x140022850
   140022846:	mov    rcx,rdi
   140022849:	call   0x14002b060
   14002284e:	mov    ecx,eax
   140022850:	cmp    ecx,0xffffffff
   140022853:	je     0x14002279c
   140022859:	mov    BYTE PTR [rsp+0x48],cl
   14002285d:	movzx  ecx,cl
   140022860:	call   0x140029e5c
   140022865:	test   eax,eax
   140022867:	je     0x1400228a7
   140022869:	add    DWORD PTR [rdi+0x8],0xffffffff
   14002286d:	js     0x14002287d
   14002286f:	mov    rax,QWORD PTR [rdi]
   140022872:	movzx  ecx,BYTE PTR [rax]
   140022875:	inc    rax
   140022878:	mov    QWORD PTR [rdi],rax
   14002287b:	jmp    0x140022887
   14002287d:	mov    rcx,rdi
   140022880:	call   0x14002b060
   140022885:	mov    ecx,eax
   140022887:	cmp    ecx,0xffffffff
   14002288a:	jne    0x14002289e
   14002288c:	movsx  ecx,BYTE PTR [rsp+0x48]
   140022891:	mov    rdx,rdi
   140022894:	call   0x140023368
   140022899:	jmp    0x14002279c
   14002289e:	mov    BYTE PTR [rsp+0x49],cl
   1400228a2:	mov    ebx,0x2
   1400228a7:	lea    rdx,[rsp+0x48]
   1400228ac:	lea    rcx,[rsp+0x40]
   1400228b1:	movsxd r8,ebx
   1400228b4:	call   0x14002b058
   1400228b9:	cmp    eax,0xffffffff
   1400228bc:	jne    0x1400227d1
   1400228c2:	call   0x140020aa4
   1400228c7:	mov    DWORD PTR [rax],0x2a
   1400228cd:	jmp    0x14002279c
   1400228d2:	add    DWORD PTR [rdi+0x8],0xfffffffe
   1400228d6:	js     0x1400228e7
   1400228d8:	mov    rcx,QWORD PTR [rdi]
   1400228db:	movzx  eax,WORD PTR [rcx]
   1400228de:	add    rcx,0x2
   1400228e2:	mov    QWORD PTR [rdi],rcx
   1400228e5:	jmp    0x1400228ef
   1400228e7:	mov    rcx,rdi
   1400228ea:	call   0x14002ad7c
   1400228ef:	mov    rbx,QWORD PTR [rsp+0x50]
   1400228f4:	add    rsp,0x20
   1400228f8:	pop    r12
   1400228fa:	pop    rdi
   1400228fb:	pop    rsi
   1400228fc:	ret    
   1400228fd:	int3   
   1400228fe:	int3   
   1400228ff:	int3   
   140022900:	mov    QWORD PTR [rsp+0x10],rbx
   140022905:	mov    QWORD PTR [rsp+0x8],rcx
   14002290a:	push   rdi
   14002290b:	sub    rsp,0x30
   14002290f:	mov    rbx,rcx
   140022912:	xor    eax,eax
   140022914:	test   rcx,rcx
   140022917:	setne  al
   14002291a:	test   eax,eax
   14002291c:	jne    0x140022945
   14002291e:	call   0x140020aa4
   140022923:	mov    DWORD PTR [rax],0x16
   140022929:	and    QWORD PTR [rsp+0x20],0x0
   14002292f:	xor    r9d,r9d
   140022932:	xor    r8d,r8d
   140022935:	xor    edx,edx
   140022937:	xor    ecx,ecx
   140022939:	call   0x14001ccf0
   14002293e:	mov    eax,0xffff
   140022943:	jmp    0x140022961
   140022945:	call   0x140023b58
   14002294a:	nop
   14002294b:	mov    rcx,rbx
   14002294e:	call   0x140022708
   140022953:	movzx  edi,ax
   140022956:	mov    rcx,rbx
   140022959:	call   0x140023be8
   14002295e:	mov    ax,di
   140022961:	mov    rbx,QWORD PTR [rsp+0x48]
   140022966:	add    rsp,0x30
   14002296a:	pop    rdi
   14002296b:	ret    
   14002296c:	mov    QWORD PTR [rsp+0x18],rbx
   140022971:	mov    QWORD PTR [rsp+0x20],rbp
   140022976:	push   rsi
   140022977:	push   rdi
   140022978:	push   r12
   14002297a:	sub    rsp,0x40
   14002297e:	mov    rax,QWORD PTR [rip+0x26adb]        # 0x140049460
   140022985:	xor    rax,rsp
   140022988:	mov    QWORD PTR [rsp+0x30],rax
   14002298d:	test   BYTE PTR [rdx+0x18],0x40
   140022991:	mov    rdi,rdx
   140022994:	movzx  esi,cx
   140022997:	jne    0x140022b13
   14002299d:	mov    rcx,rdx
   1400229a0:	call   0x14002b1bc
   1400229a5:	lea    rbp,[rip+0x27734]        # 0x14004a0e0
   1400229ac:	lea    r12,[rip+0x2a96d]        # 0x14004d320
   1400229b3:	cmp    eax,0xffffffff
   1400229b6:	je     0x1400229ed
   1400229b8:	mov    rcx,rdi
   1400229bb:	call   0x14002b1bc
   1400229c0:	cmp    eax,0xfffffffe
   1400229c3:	je     0x1400229ed
   1400229c5:	mov    rcx,rdi
   1400229c8:	call   0x14002b1bc
   1400229cd:	mov    rcx,rdi
   1400229d0:	movsxd rbx,eax
   1400229d3:	sar    rbx,0x5
   1400229d7:	call   0x14002b1bc
   1400229dc:	mov    r11d,eax
   1400229df:	and    r11d,0x1f
   1400229e3:	imul   r11,r11,0x58
   1400229e7:	add    r11,QWORD PTR [r12+rbx*8]
   1400229eb:	jmp    0x1400229f0
   1400229ed:	mov    r11,rbp
   1400229f0:	mov    al,BYTE PTR [r11+0x38]
   1400229f4:	and    al,0x7f
   1400229f6:	cmp    al,0x2
   1400229f8:	je     0x140022b05
   1400229fe:	mov    rcx,rdi
   140022a01:	call   0x14002b1bc
   140022a06:	cmp    eax,0xffffffff
   140022a09:	je     0x140022a40
   140022a0b:	mov    rcx,rdi
   140022a0e:	call   0x14002b1bc
   140022a13:	cmp    eax,0xfffffffe
   140022a16:	je     0x140022a40
   140022a18:	mov    rcx,rdi
   140022a1b:	call   0x14002b1bc
   140022a20:	mov    rcx,rdi
   140022a23:	movsxd rbx,eax
   140022a26:	sar    rbx,0x5
   140022a2a:	call   0x14002b1bc
   140022a2f:	mov    r11d,eax
   140022a32:	and    r11d,0x1f
   140022a36:	imul   r11,r11,0x58
   140022a3a:	add    r11,QWORD PTR [r12+rbx*8]
   140022a3e:	jmp    0x140022a43
   140022a40:	mov    r11,rbp
   140022a43:	mov    al,BYTE PTR [r11+0x38]
   140022a47:	and    al,0x7f
   140022a49:	cmp    al,0x1
   140022a4b:	je     0x140022b05
   140022a51:	mov    rcx,rdi
   140022a54:	call   0x14002b1bc
   140022a59:	cmp    eax,0xffffffff
   140022a5c:	je     0x140022a8f
   140022a5e:	mov    rcx,rdi
   140022a61:	call   0x14002b1bc
   140022a66:	cmp    eax,0xfffffffe
   140022a69:	je     0x140022a8f
   140022a6b:	mov    rcx,rdi
   140022a6e:	call   0x14002b1bc
   140022a73:	mov    rcx,rdi
   140022a76:	movsxd rbx,eax
   140022a79:	sar    rbx,0x5
   140022a7d:	call   0x14002b1bc
   140022a82:	mov    ebp,eax
   140022a84:	and    ebp,0x1f
   140022a87:	imul   rbp,rbp,0x58
   140022a8b:	add    rbp,QWORD PTR [r12+rbx*8]
   140022a8f:	test   BYTE PTR [rbp+0x8],0x80
   140022a93:	je     0x140022b13
   140022a95:	lea    rdx,[rsp+0x24]
   140022a9a:	lea    rcx,[rsp+0x20]
   140022a9f:	movzx  r9d,si
   140022aa3:	mov    r8d,0x5
   140022aa9:	call   0x14002b594
   140022aae:	xor    ebx,ebx
   140022ab0:	cmp    eax,ebx
   140022ab2:	je     0x140022abb
   140022ab4:	mov    eax,0xffff
   140022ab9:	jmp    0x140022b33
   140022abb:	cmp    DWORD PTR [rsp+0x20],ebx
   140022abf:	jle    0x140022b00
   140022ac1:	lea    rbp,[rsp+0x24]
   140022ac6:	add    DWORD PTR [rdi+0x8],0xffffffff
   140022aca:	js     0x140022ae2
   140022acc:	mov    rcx,QWORD PTR [rdi]
   140022acf:	mov    al,BYTE PTR [rbp+0x0]
   140022ad2:	mov    BYTE PTR [rcx],al
   140022ad4:	mov    rax,QWORD PTR [rdi]
   140022ad7:	movzx  ecx,BYTE PTR [rax]
   140022ada:	inc    rax
   140022add:	mov    QWORD PTR [rdi],rax
   140022ae0:	jmp    0x140022af0
   140022ae2:	movsx  ecx,BYTE PTR [rbp+0x0]
   140022ae6:	mov    rdx,rdi
   140022ae9:	call   0x1400258c0
   140022aee:	mov    ecx,eax
   140022af0:	cmp    ecx,0xffffffff
   140022af3:	je     0x140022ab4
   140022af5:	inc    ebx
   140022af7:	inc    rbp
   140022afa:	cmp    ebx,DWORD PTR [rsp+0x20]
   140022afe:	jl     0x140022ac6
   140022b00:	mov    ax,si
   140022b03:	jmp    0x140022b33
   140022b05:	add    DWORD PTR [rdi+0x8],0xfffffffe
   140022b09:	js     0x140022b28
   140022b0b:	mov    rcx,QWORD PTR [rdi]
   140022b0e:	mov    WORD PTR [rcx],si
   140022b11:	jmp    0x140022b1f
   140022b13:	add    DWORD PTR [rdi+0x8],0xfffffffe
   140022b17:	js     0x140022b28
   140022b19:	mov    rax,QWORD PTR [rdi]
   140022b1c:	mov    WORD PTR [rax],si
   140022b1f:	add    QWORD PTR [rdi],0x2
   140022b23:	mov    ax,si
   140022b26:	jmp    0x140022b33
   140022b28:	mov    rdx,rdi
   140022b2b:	movzx  ecx,si
   140022b2e:	call   0x14002b1f4
   140022b33:	mov    rcx,QWORD PTR [rsp+0x30]
   140022b38:	xor    rcx,rsp
   140022b3b:	call   0x14001c500
   140022b40:	mov    rbx,QWORD PTR [rsp+0x70]
   140022b45:	mov    rbp,QWORD PTR [rsp+0x78]
   140022b4a:	add    rsp,0x40
   140022b4e:	pop    r12
   140022b50:	pop    rdi
   140022b51:	pop    rsi
   140022b52:	ret    
   140022b53:	int3   
   140022b54:	mov    QWORD PTR [rsp+0x8],rbx
   140022b59:	mov    QWORD PTR [rsp+0x10],rdx
   140022b5e:	push   rdi
   140022b5f:	sub    rsp,0x30
   140022b63:	mov    rbx,rdx
   140022b66:	movzx  edi,cx
   140022b69:	xor    eax,eax
   140022b6b:	test   rdx,rdx
   140022b6e:	setne  al
   140022b71:	test   eax,eax
   140022b73:	jne    0x140022b9c
   140022b75:	call   0x140020aa4
   140022b7a:	mov    DWORD PTR [rax],0x16
   140022b80:	and    QWORD PTR [rsp+0x20],0x0
   140022b86:	xor    r9d,r9d
   140022b89:	xor    r8d,r8d
   140022b8c:	xor    edx,edx
   140022b8e:	xor    ecx,ecx
   140022b90:	call   0x14001ccf0
   140022b95:	mov    eax,0xffff
   140022b9a:	jmp    0x140022bbe
   140022b9c:	mov    rcx,rdx
   140022b9f:	call   0x140023b58
   140022ba4:	nop
   140022ba5:	mov    rdx,rbx
   140022ba8:	movzx  ecx,di
   140022bab:	call   0x14002296c
   140022bb0:	movzx  edi,ax
   140022bb3:	mov    rcx,rbx
   140022bb6:	call   0x140023be8
   140022bbb:	mov    ax,di
   140022bbe:	mov    rbx,QWORD PTR [rsp+0x40]
   140022bc3:	add    rsp,0x30
   140022bc7:	pop    rdi
   140022bc8:	ret    
   140022bc9:	int3   
   140022bca:	int3   
   140022bcb:	int3   
   140022bcc:	mov    QWORD PTR [rsp+0x18],rbx
   140022bd1:	mov    QWORD PTR [rsp+0x20],rbp
   140022bd6:	push   rsi
   140022bd7:	push   rdi
   140022bd8:	push   r12
   140022bda:	push   r13
   140022bdc:	push   r15
   140022bde:	sub    rsp,0x40
   140022be2:	mov    rax,QWORD PTR [rip+0x26877]        # 0x140049460
   140022be9:	xor    rax,rsp
   140022bec:	mov    QWORD PTR [rsp+0x30],rax
   140022bf1:	mov    r13d,0xffff
   140022bf7:	mov    rdi,rdx
   140022bfa:	movzx  ebp,cx
   140022bfd:	mov    WORD PTR [rsp+0x24],cx
   140022c02:	cmp    cx,r13w
   140022c06:	je     0x140022da1
   140022c0c:	test   BYTE PTR [rdx+0x18],0x1
   140022c10:	mov    esi,0x2
   140022c15:	jne    0x140022c2b
   140022c17:	test   BYTE PTR [rdx+0x18],0x80
   140022c1b:	je     0x140022da1
   140022c21:	test   BYTE PTR [rdx+0x18],sil
   140022c25:	jne    0x140022da1
   140022c2b:	cmp    QWORD PTR [rdx+0x10],0x0
   140022c30:	jne    0x140022c3a
   140022c32:	mov    rcx,rdx
   140022c35:	call   0x14002b5a8
   140022c3a:	test   BYTE PTR [rdi+0x18],0x40
   140022c3e:	jne    0x140022d6f
   140022c44:	mov    rcx,rdi
   140022c47:	call   0x14002b1bc
   140022c4c:	lea    r12,[rip+0x2748d]        # 0x14004a0e0
   140022c53:	lea    r15,[rip+0x2a6c6]        # 0x14004d320
   140022c5a:	cmp    eax,0xffffffff
   140022c5d:	je     0x140022c94
   140022c5f:	mov    rcx,rdi
   140022c62:	call   0x14002b1bc
   140022c67:	cmp    eax,0xfffffffe
   140022c6a:	je     0x140022c94
   140022c6c:	mov    rcx,rdi
   140022c6f:	call   0x14002b1bc
   140022c74:	mov    rcx,rdi
   140022c77:	movsxd rbx,eax
   140022c7a:	sar    rbx,0x5
   140022c7e:	call   0x14002b1bc
   140022c83:	mov    r11d,eax
   140022c86:	and    r11d,0x1f
   140022c8a:	imul   r11,r11,0x58
   140022c8e:	add    r11,QWORD PTR [r15+rbx*8]
   140022c92:	jmp    0x140022c97
   140022c94:	mov    r11,r12
   140022c97:	test   BYTE PTR [r11+0x8],0x80
   140022c9c:	je     0x140022d6f
   140022ca2:	mov    rcx,rdi
   140022ca5:	call   0x14002b1bc
   140022caa:	cmp    eax,0xffffffff
   140022cad:	je     0x140022ce2
   140022caf:	mov    rcx,rdi
   140022cb2:	call   0x14002b1bc
   140022cb7:	cmp    eax,0xfffffffe
   140022cba:	je     0x140022ce2
   140022cbc:	mov    rcx,rdi
   140022cbf:	call   0x14002b1bc
   140022cc4:	mov    rcx,rdi
   140022cc7:	movsxd rbx,eax
   140022cca:	sar    rbx,0x5
   140022cce:	call   0x14002b1bc
   140022cd3:	mov    r12d,eax
   140022cd6:	and    r12d,0x1f
   140022cda:	imul   r12,r12,0x58
   140022cde:	add    r12,QWORD PTR [r15+rbx*8]
   140022ce2:	test   BYTE PTR [r12+0x38],0x7f
   140022ce8:	je     0x140022cfd
   140022cea:	mov    al,BYTE PTR [rsp+0x25]
   140022cee:	mov    BYTE PTR [rsp+0x28],bpl
   140022cf3:	mov    DWORD PTR [rsp+0x20],esi
   140022cf7:	mov    BYTE PTR [rsp+0x29],al
   140022cfb:	jmp    0x140022d22
   140022cfd:	lea    rdx,[rsp+0x28]
   140022d02:	lea    rcx,[rsp+0x20]
   140022d07:	movzx  r9d,bp
   140022d0b:	mov    r8d,0x5
   140022d11:	call   0x14002b594
   140022d16:	test   eax,eax
   140022d18:	jne    0x140022da1
   140022d1e:	mov    esi,DWORD PTR [rsp+0x20]
   140022d22:	mov    rax,QWORD PTR [rdi+0x10]
   140022d26:	movsxd rdx,esi
   140022d29:	add    rdx,rax
   140022d2c:	cmp    QWORD PTR [rdi],rdx
   140022d2f:	jae    0x140022d3f
   140022d31:	cmp    DWORD PTR [rdi+0x8],0x0
   140022d35:	jne    0x140022da1
   140022d37:	cmp    esi,DWORD PTR [rdi+0x24]
   140022d3a:	jg     0x140022da1
   140022d3c:	mov    QWORD PTR [rdi],rdx
   140022d3f:	lea    eax,[rsi-0x1]
   140022d42:	movsxd rdx,eax
   140022d45:	test   eax,eax
   140022d47:	js     0x140022d5f
   140022d49:	dec    QWORD PTR [rdi]
   140022d4c:	mov    al,BYTE PTR [rsp+rdx*1+0x28]
   140022d50:	sub    rdx,0x1
   140022d54:	mov    rcx,QWORD PTR [rdi]
   140022d57:	mov    BYTE PTR [rcx],al
   140022d59:	jns    0x140022d49
   140022d5b:	mov    esi,DWORD PTR [rsp+0x20]
   140022d5f:	add    DWORD PTR [rdi+0x8],esi
   140022d62:	and    DWORD PTR [rdi+0x18],0xffffffef
   140022d66:	or     DWORD PTR [rdi+0x18],0x1
   140022d6a:	mov    ax,bp
   140022d6d:	jmp    0x140022da5
   140022d6f:	mov    rax,QWORD PTR [rdi+0x10]
   140022d73:	add    rax,rsi
   140022d76:	cmp    QWORD PTR [rdi],rax
   140022d79:	jae    0x140022d89
   140022d7b:	cmp    DWORD PTR [rdi+0x8],0x0
   140022d7f:	jne    0x140022da1
   140022d81:	cmp    DWORD PTR [rdi+0x24],esi
   140022d84:	jb     0x140022da1
   140022d86:	mov    QWORD PTR [rdi],rax
   140022d89:	add    QWORD PTR [rdi],0xfffffffffffffffe
   140022d8d:	test   BYTE PTR [rdi+0x18],0x40
   140022d91:	mov    rax,QWORD PTR [rdi]
   140022d94:	je     0x140022dcb
   140022d96:	cmp    WORD PTR [rax],bp
   140022d99:	je     0x140022d5f
   140022d9b:	add    rax,rsi
   140022d9e:	mov    QWORD PTR [rdi],rax
   140022da1:	mov    ax,r13w
   140022da5:	mov    rcx,QWORD PTR [rsp+0x30]
   140022daa:	xor    rcx,rsp
   140022dad:	call   0x14001c500
   140022db2:	lea    r11,[rsp+0x40]
   140022db7:	mov    rbx,QWORD PTR [r11+0x40]
   140022dbb:	mov    rbp,QWORD PTR [r11+0x48]
   140022dbf:	mov    rsp,r11
   140022dc2:	pop    r15
   140022dc4:	pop    r13
   140022dc6:	pop    r12
   140022dc8:	pop    rdi
   140022dc9:	pop    rsi
   140022dca:	ret    
   140022dcb:	mov    WORD PTR [rax],bp
   140022dce:	jmp    0x140022d5f
   140022dd0:	mov    QWORD PTR [rsp+0x8],rbx
   140022dd5:	mov    QWORD PTR [rsp+0x10],rdx
   140022dda:	push   rdi
   140022ddb:	sub    rsp,0x30
   140022ddf:	mov    rbx,rdx
   140022de2:	movzx  edi,cx
   140022de5:	xor    eax,eax
   140022de7:	test   rdx,rdx
   140022dea:	setne  al
   140022ded:	test   eax,eax
   140022def:	jne    0x140022e18
   140022df1:	call   0x140020aa4
   140022df6:	mov    DWORD PTR [rax],0x16
   140022dfc:	and    QWORD PTR [rsp+0x20],0x0
   140022e02:	xor    r9d,r9d
   140022e05:	xor    r8d,r8d
   140022e08:	xor    edx,edx
   140022e0a:	xor    ecx,ecx
   140022e0c:	call   0x14001ccf0
   140022e11:	mov    eax,0xffff
   140022e16:	jmp    0x140022e3a
   140022e18:	mov    rcx,rdx
   140022e1b:	call   0x140023b58
   140022e20:	nop
   140022e21:	mov    rdx,rbx
   140022e24:	movzx  ecx,di
   140022e27:	call   0x140022bcc
   140022e2c:	movzx  edi,ax
   140022e2f:	mov    rcx,rbx
   140022e32:	call   0x140023be8
   140022e37:	mov    ax,di
   140022e3a:	mov    rbx,QWORD PTR [rsp+0x40]
   140022e3f:	add    rsp,0x30
   140022e43:	pop    rdi
   140022e44:	ret    
   140022e45:	int3   
   140022e46:	int3   
   140022e47:	int3   
   140022e48:	mov    QWORD PTR [rsp+0x8],rbx
   140022e4d:	mov    QWORD PTR [rsp+0x10],rsi
   140022e52:	push   rdi
   140022e53:	sub    rsp,0x20
   140022e57:	mov    eax,DWORD PTR [rcx+0x18]
   140022e5a:	xor    esi,esi
   140022e5c:	mov    rbx,rcx
   140022e5f:	and    al,0x3
   140022e61:	cmp    al,0x2
   140022e63:	jne    0x140022ea4
   140022e65:	test   DWORD PTR [rcx+0x18],0x108
   140022e6c:	je     0x140022ea4
   140022e6e:	mov    edi,DWORD PTR [rcx]
   140022e70:	sub    edi,DWORD PTR [rcx+0x10]
   140022e73:	test   edi,edi
   140022e75:	jle    0x140022ea4
   140022e77:	call   0x14002b1bc
   140022e7c:	mov    rdx,QWORD PTR [rbx+0x10]
   140022e80:	mov    r8d,edi
   140022e83:	mov    ecx,eax
   140022e85:	call   0x14002bd5c
   140022e8a:	cmp    eax,edi
   140022e8c:	jne    0x140022e9d
   140022e8e:	mov    eax,DWORD PTR [rbx+0x18]
   140022e91:	test   al,al
   140022e93:	jns    0x140022ea4
   140022e95:	and    eax,0xfffffffd
   140022e98:	mov    DWORD PTR [rbx+0x18],eax
   140022e9b:	jmp    0x140022ea4
   140022e9d:	or     DWORD PTR [rbx+0x18],0x20
   140022ea1:	or     esi,0xffffffff
   140022ea4:	mov    rcx,QWORD PTR [rbx+0x10]
   140022ea8:	and    DWORD PTR [rbx+0x8],0x0
   140022eac:	mov    eax,esi
   140022eae:	mov    rsi,QWORD PTR [rsp+0x38]
   140022eb3:	mov    QWORD PTR [rbx],rcx
   140022eb6:	mov    rbx,QWORD PTR [rsp+0x30]
   140022ebb:	add    rsp,0x20
   140022ebf:	pop    rdi
   140022ec0:	ret    
   140022ec1:	int3   
   140022ec2:	int3   
   140022ec3:	int3   
   140022ec4:	rex push rbx
   140022ec6:	sub    rsp,0x20
   140022eca:	mov    rbx,rcx
   140022ecd:	test   rcx,rcx
   140022ed0:	jne    0x140022ed9
   140022ed2:	call   0x140022f0c
   140022ed7:	jmp    0x140022f05
   140022ed9:	call   0x140022e48
   140022ede:	test   eax,eax
   140022ee0:	je     0x140022ee7
   140022ee2:	or     eax,0xffffffff
   140022ee5:	jmp    0x140022f05
   140022ee7:	bt     DWORD PTR [rbx+0x18],0xe
   140022eec:	jae    0x140022f03
   140022eee:	mov    rcx,rbx
   140022ef1:	call   0x14002b1bc
   140022ef6:	mov    ecx,eax
   140022ef8:	call   0x14002be90
   140022efd:	neg    eax
   140022eff:	sbb    eax,eax
   140022f01:	jmp    0x140022f05
   140022f03:	xor    eax,eax
   140022f05:	add    rsp,0x20
   140022f09:	pop    rbx
   140022f0a:	ret    
   140022f0b:	int3   
   140022f0c:	mov    QWORD PTR [rsp+0x8],rsi
   140022f11:	mov    QWORD PTR [rsp+0x10],rdi
   140022f16:	mov    QWORD PTR [rsp+0x18],r12
   140022f1b:	push   r13
   140022f1d:	push   r14
   140022f1f:	push   r15
   140022f21:	sub    rsp,0x30
   140022f25:	mov    r14d,ecx
   140022f28:	xor    r12d,r12d
   140022f2b:	xor    esi,esi
   140022f2d:	lea    ecx,[rsi+0x1]
   140022f30:	call   0x140028880
   140022f35:	nop
   140022f36:	xor    edi,edi
   140022f38:	mov    DWORD PTR [rsp+0x20],edi
   140022f3c:	or     r15d,0xffffffff
   140022f40:	cmp    edi,DWORD PTR [rip+0x2b61a]        # 0x14004e560
   140022f46:	jge    0x140022fd2
   140022f4c:	movsxd r13,edi
   140022f4f:	mov    rax,QWORD PTR [rip+0x2a5fa]        # 0x14004d550
   140022f56:	cmp    QWORD PTR [rax+r13*8],0x0
   140022f5b:	je     0x140022fc7
   140022f5d:	mov    rdx,QWORD PTR [rax+r13*8]
   140022f61:	test   BYTE PTR [rdx+0x18],0x83
   140022f65:	je     0x140022fc7
   140022f67:	mov    ecx,edi
   140022f69:	call   0x140023bb8
   140022f6e:	nop
   140022f6f:	mov    rax,QWORD PTR [rip+0x2a5da]        # 0x14004d550
   140022f76:	mov    rcx,QWORD PTR [rax+r13*8]
   140022f7a:	test   BYTE PTR [rcx+0x18],0x83
   140022f7e:	je     0x140022fb5
   140022f80:	cmp    r14d,0x1
   140022f84:	jne    0x140022f9a
   140022f86:	call   0x140022ec4
   140022f8b:	cmp    eax,r15d
   140022f8e:	je     0x140022fb5
   140022f90:	inc    r12d
   140022f93:	mov    DWORD PTR [rsp+0x24],r12d
   140022f98:	jmp    0x140022fb5
   140022f9a:	test   r14d,r14d
   140022f9d:	jne    0x140022fb5
   140022f9f:	test   BYTE PTR [rcx+0x18],0x2
   140022fa3:	je     0x140022fb5
   140022fa5:	call   0x140022ec4
   140022faa:	cmp    eax,r15d
   140022fad:	cmove  esi,r15d
   140022fb1:	mov    DWORD PTR [rsp+0x28],esi
   140022fb5:	mov    rdx,QWORD PTR [rip+0x2a594]        # 0x14004d550
   140022fbc:	mov    rdx,QWORD PTR [rdx+r13*8]
   140022fc0:	mov    ecx,edi
   140022fc2:	call   0x140023c40
   140022fc7:	inc    edi
   140022fc9:	mov    DWORD PTR [rsp+0x20],edi
   140022fcd:	jmp    0x140022f40
   140022fd2:	mov    ecx,0x1
   140022fd7:	call   0x140028780
   140022fdc:	cmp    r14d,0x1
   140022fe0:	cmove  esi,r12d
   140022fe4:	mov    eax,esi
   140022fe6:	mov    rsi,QWORD PTR [rsp+0x50]
   140022feb:	mov    rdi,QWORD PTR [rsp+0x58]
   140022ff0:	mov    r12,QWORD PTR [rsp+0x60]
   140022ff5:	add    rsp,0x30
   140022ff9:	pop    r15
   140022ffb:	pop    r14
   140022ffd:	pop    r13
   140022fff:	ret    
   140023000:	mov    QWORD PTR [rsp+0x10],rbx
   140023005:	mov    QWORD PTR [rsp+0x8],rcx
   14002300a:	push   rdi
   14002300b:	sub    rsp,0x20
   14002300f:	mov    rbx,rcx
   140023012:	test   rcx,rcx
   140023015:	jne    0x14002301e
   140023017:	call   0x140022f0c
   14002301c:	jmp    0x140023038
   14002301e:	call   0x140023b58
   140023023:	nop
   140023024:	mov    rcx,rbx
   140023027:	call   0x140022ec4
   14002302c:	mov    edi,eax
   14002302e:	mov    rcx,rbx
   140023031:	call   0x140023be8
   140023036:	mov    eax,edi
   140023038:	mov    rbx,QWORD PTR [rsp+0x38]
   14002303d:	add    rsp,0x20
   140023041:	pop    rdi
   140023042:	ret    
   140023043:	int3   
   140023044:	mov    ecx,0x1
   140023049:	jmp    0x140022f0c
   14002304e:	int3   
   14002304f:	int3   
   140023050:	mov    QWORD PTR [rsp+0x10],rbx
   140023055:	mov    QWORD PTR [rsp+0x18],rsi
   14002305a:	mov    QWORD PTR [rsp+0x8],rcx
   14002305f:	push   rdi
   140023060:	push   r12
   140023062:	push   r13
   140023064:	sub    rsp,0x30
   140023068:	mov    rsi,r9
   14002306b:	mov    r12d,r8d
   14002306e:	mov    r13,rdx
   140023071:	mov    rbx,rcx
   140023074:	xor    edi,edi
   140023076:	mov    eax,edi
   140023078:	cmp    rcx,rdi
   14002307b:	setne  al
   14002307e:	cmp    eax,edi
   140023080:	jne    0x1400230a9
   140023082:	call   0x140020aa4
   140023087:	mov    DWORD PTR [rax],0x16
   14002308d:	mov    QWORD PTR [rsp+0x20],rdi
   140023092:	xor    r9d,r9d
   140023095:	xor    r8d,r8d
   140023098:	xor    edx,edx
   14002309a:	xor    ecx,ecx
   14002309c:	call   0x14001ccf0
   1400230a1:	or     eax,0xffffffff
   1400230a4:	jmp    0x1400231a7
   1400230a9:	cmp    r8d,0x4
   1400230ad:	je     0x1400230e1
   1400230af:	cmp    r8d,edi
   1400230b2:	je     0x1400230e1
   1400230b4:	cmp    r8d,0x40
   1400230b8:	je     0x1400230e1
   1400230ba:	call   0x140020aa4
   1400230bf:	mov    DWORD PTR [rax],0x16
   1400230c5:	mov    QWORD PTR [rsp+0x20],rdi
   1400230ca:	xor    r9d,r9d
   1400230cd:	xor    r8d,r8d
   1400230d0:	xor    edx,edx
   1400230d2:	xor    ecx,ecx
   1400230d4:	call   0x14001ccf0
   1400230d9:	or     eax,0xffffffff
   1400230dc:	jmp    0x1400231a7
   1400230e1:	cmp    r8d,edi
   1400230e4:	je     0x1400230ec
   1400230e6:	cmp    r8d,0x40
   1400230ea:	jne    0x14002311f
   1400230ec:	lea    rax,[r9-0x2]
   1400230f0:	cmp    rax,0x7ffffffd
   1400230f6:	jbe    0x14002311f
   1400230f8:	call   0x140020aa4
   1400230fd:	mov    DWORD PTR [rax],0x16
   140023103:	mov    QWORD PTR [rsp+0x20],rdi
   140023108:	xor    r9d,r9d
   14002310b:	xor    r8d,r8d
   14002310e:	xor    edx,edx
   140023110:	xor    ecx,ecx
   140023112:	call   0x14001ccf0
   140023117:	or     eax,0xffffffff
   14002311a:	jmp    0x1400231a7
   14002311f:	and    rsi,0xfffffffffffffffe
   140023123:	call   0x140023b58
   140023128:	nop
   140023129:	mov    rcx,rbx
   14002312c:	call   0x140022e48
   140023131:	mov    rcx,rbx
   140023134:	call   0x14002bfa4
   140023139:	and    DWORD PTR [rbx+0x18],0xffffc2f3
   140023140:	mov    eax,DWORD PTR [rbx+0x18]
   140023143:	test   r12b,0x4
   140023147:	je     0x14002315f
   140023149:	or     eax,0x4
   14002314c:	mov    DWORD PTR [rbx+0x18],eax
   14002314f:	lea    r13,[rbx+0x20]
   140023153:	mov    esi,0x2
   140023158:	mov    QWORD PTR [rsp+0x68],rsi
   14002315d:	jmp    0x140023190
   14002315f:	cmp    r13,rdi
   140023162:	jne    0x140023188
   140023164:	mov    rcx,rsi
   140023167:	call   0x1400208e4
   14002316c:	mov    r13,rax
   14002316f:	cmp    rax,rdi
   140023172:	jne    0x14002317f
   140023174:	inc    DWORD PTR [rip+0x2899a]        # 0x14004bb14
   14002317a:	or     edi,0xffffffff
   14002317d:	jmp    0x14002319d
   14002317f:	or     DWORD PTR [rbx+0x18],0x408
   140023186:	jmp    0x140023190
   140023188:	or     eax,0x500
   14002318d:	mov    DWORD PTR [rbx+0x18],eax
   140023190:	mov    DWORD PTR [rbx+0x24],esi
   140023193:	mov    QWORD PTR [rbx+0x10],r13
   140023197:	mov    QWORD PTR [rbx],r13
   14002319a:	mov    DWORD PTR [rbx+0x8],edi
   14002319d:	mov    rcx,rbx
   1400231a0:	call   0x140023be8
   1400231a5:	mov    eax,edi
   1400231a7:	mov    rbx,QWORD PTR [rsp+0x58]
   1400231ac:	mov    rsi,QWORD PTR [rsp+0x60]
   1400231b1:	add    rsp,0x30
   1400231b5:	pop    r13
   1400231b7:	pop    r12
   1400231b9:	pop    rdi
   1400231ba:	ret    
   1400231bb:	int3   
   1400231bc:	mov    rax,rsp
   1400231bf:	mov    QWORD PTR [rax+0x8],rbx
   1400231c3:	mov    QWORD PTR [rax+0x10],rbp
   1400231c7:	mov    QWORD PTR [rax+0x18],rsi
   1400231cb:	mov    QWORD PTR [rax+0x20],rdi
   1400231cf:	push   r12
   1400231d1:	sub    rsp,0x20
   1400231d5:	mov    rbx,QWORD PTR [r9+0x38]
   1400231d9:	mov    rsi,rdx
   1400231dc:	mov    r12,r8
   1400231df:	mov    rbp,rcx
   1400231e2:	lea    r8,[rbx+0x4]
   1400231e6:	mov    rdx,r9
   1400231e9:	mov    rcx,rsi
   1400231ec:	mov    rdi,r9
   1400231ef:	call   0x140020b2c
   1400231f4:	mov    r11d,DWORD PTR [rbx+0x4]
   1400231f8:	mov    r10d,DWORD PTR [rbp+0x4]
   1400231fc:	mov    eax,r11d
   1400231ff:	and    r11d,0x2
   140023203:	mov    r8d,0x1
   140023209:	and    eax,r8d
   14002320c:	and    r10b,0x66
   140023210:	cmove  r11d,eax
   140023214:	test   r11d,r11d
   140023217:	je     0x14002322d
   140023219:	mov    r9,rdi
   14002321c:	mov    r8,r12
   14002321f:	mov    rdx,rsi
   140023222:	mov    rcx,rbp
   140023225:	call   0x14001e158
   14002322a:	mov    r8d,eax
   14002322d:	mov    rbx,QWORD PTR [rsp+0x30]
   140023232:	mov    rbp,QWORD PTR [rsp+0x38]
   140023237:	mov    rsi,QWORD PTR [rsp+0x40]
   14002323c:	mov    rdi,QWORD PTR [rsp+0x48]
   140023241:	mov    eax,r8d
   140023244:	add    rsp,0x20
   140023248:	pop    r12
   14002324a:	ret    
   14002324b:	int3   
   14002324c:	mov    QWORD PTR [rsp+0x8],rbx
   140023251:	push   rdi
   140023252:	sub    rsp,0x30
   140023256:	test   BYTE PTR [rdx+0x18],0x40
   14002325a:	mov    rbx,rdx
   14002325d:	mov    edi,ecx
   14002325f:	jne    0x1400232ff
   140023265:	mov    rcx,rdx
   140023268:	call   0x14002b1bc
   14002326d:	lea    rdx,[rip+0x26e6c]        # 0x14004a0e0
   140023274:	lea    r8,[rip+0x2a0a5]        # 0x14004d320
   14002327b:	movsxd r11,eax
   14002327e:	cmp    r11d,0xffffffff
   140023282:	je     0x1400232a1
   140023284:	cmp    r11d,0xfffffffe
   140023288:	je     0x1400232a1
   14002328a:	mov    rcx,r11
   14002328d:	mov    rax,r11
   140023290:	and    ecx,0x1f
   140023293:	sar    rax,0x5
   140023297:	imul   rcx,rcx,0x58
   14002329b:	add    rcx,QWORD PTR [r8+rax*8]
   14002329f:	jmp    0x1400232a4
   1400232a1:	mov    rcx,rdx
   1400232a4:	test   BYTE PTR [rcx+0x38],0x7f
   1400232a8:	jne    0x1400232d1
   1400232aa:	cmp    r11d,0xffffffff
   1400232ae:	je     0x1400232cb
   1400232b0:	cmp    r11d,0xfffffffe
   1400232b4:	je     0x1400232cb
   1400232b6:	mov    rdx,r11
   1400232b9:	mov    rax,r11
   1400232bc:	and    edx,0x1f
   1400232bf:	sar    rax,0x5
   1400232c3:	imul   rdx,rdx,0x58
   1400232c7:	add    rdx,QWORD PTR [r8+rax*8]
   1400232cb:	test   BYTE PTR [rdx+0x38],0x80
   1400232cf:	je     0x1400232ff
   1400232d1:	call   0x140020aa4
   1400232d6:	and    QWORD PTR [rsp+0x20],0x0
   1400232dc:	xor    r9d,r9d
   1400232df:	xor    r8d,r8d
   1400232e2:	xor    edx,edx
   1400232e4:	xor    ecx,ecx
   1400232e6:	mov    DWORD PTR [rax],0x16
   1400232ec:	call   0x14001ccf0
   1400232f1:	or     eax,0xffffffff
   1400232f4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400232f9:	add    rsp,0x30
   1400232fd:	pop    rdi
   1400232fe:	ret    
   1400232ff:	cmp    edi,0xffffffff
   140023302:	je     0x1400232f1
   140023304:	test   BYTE PTR [rbx+0x18],0x1
   140023308:	jne    0x140023316
   14002330a:	test   BYTE PTR [rbx+0x18],0x80
   14002330e:	je     0x1400232f1
   140023310:	test   BYTE PTR [rbx+0x18],0x2
   140023314:	jne    0x1400232f1
   140023316:	cmp    QWORD PTR [rbx+0x10],0x0
   14002331b:	jne    0x140023325
   14002331d:	mov    rcx,rbx
   140023320:	call   0x14002b5a8
   140023325:	mov    rax,QWORD PTR [rbx]
   140023328:	cmp    rax,QWORD PTR [rbx+0x10]
   14002332c:	jne    0x14002333a
   14002332e:	cmp    DWORD PTR [rbx+0x8],0x0
   140023332:	jne    0x1400232f1
   140023334:	inc    rax
   140023337:	mov    QWORD PTR [rbx],rax
   14002333a:	dec    QWORD PTR [rbx]
   14002333d:	test   BYTE PTR [rbx+0x18],0x40
   140023341:	mov    rax,QWORD PTR [rbx]
   140023344:	je     0x140023353
   140023346:	cmp    BYTE PTR [rax],dil
   140023349:	je     0x140023356
   14002334b:	inc    rax
   14002334e:	mov    QWORD PTR [rbx],rax
   140023351:	jmp    0x1400232f1
   140023353:	mov    BYTE PTR [rax],dil
   140023356:	inc    DWORD PTR [rbx+0x8]
   140023359:	and    DWORD PTR [rbx+0x18],0xffffffef
   14002335d:	or     DWORD PTR [rbx+0x18],0x1
   140023361:	movzx  eax,dil
   140023365:	jmp    0x1400232f4
   140023367:	int3   
   140023368:	mov    QWORD PTR [rsp+0x8],rbx
   14002336d:	mov    QWORD PTR [rsp+0x10],rdx
   140023372:	push   rdi
   140023373:	sub    rsp,0x30
   140023377:	mov    rbx,rdx
   14002337a:	mov    edi,ecx
   14002337c:	xor    eax,eax
   14002337e:	test   rdx,rdx
   140023381:	setne  al
   140023384:	test   eax,eax
   140023386:	jne    0x1400233ad
   140023388:	call   0x140020aa4
   14002338d:	mov    DWORD PTR [rax],0x16
   140023393:	and    QWORD PTR [rsp+0x20],0x0
   140023399:	xor    r9d,r9d
   14002339c:	xor    r8d,r8d
   14002339f:	xor    edx,edx
   1400233a1:	xor    ecx,ecx
   1400233a3:	call   0x14001ccf0
   1400233a8:	or     eax,0xffffffff
   1400233ab:	jmp    0x1400233cc
   1400233ad:	mov    rcx,rdx
   1400233b0:	call   0x140023b58
   1400233b5:	nop
   1400233b6:	mov    rdx,rbx
   1400233b9:	mov    ecx,edi
   1400233bb:	call   0x14002324c
   1400233c0:	mov    edi,eax
   1400233c2:	mov    rcx,rbx
   1400233c5:	call   0x140023be8
   1400233ca:	mov    eax,edi
   1400233cc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400233d1:	add    rsp,0x30
   1400233d5:	pop    rdi
   1400233d6:	ret    
   1400233d7:	int3   
   1400233d8:	mov    QWORD PTR [rsp+0x10],rbx
   1400233dd:	mov    QWORD PTR [rsp+0x8],rcx
   1400233e2:	push   rdi
   1400233e3:	sub    rsp,0x30
   1400233e7:	mov    rbx,rcx
   1400233ea:	xor    edi,edi
   1400233ec:	xor    eax,eax
   1400233ee:	test   rcx,rcx
   1400233f1:	setne  al
   1400233f4:	test   eax,eax
   1400233f6:	jne    0x14002341f
   1400233f8:	call   0x140020aa4
   1400233fd:	mov    DWORD PTR [rax],0x16
   140023403:	and    QWORD PTR [rsp+0x20],rdi
   140023408:	xor    r9d,r9d
   14002340b:	xor    r8d,r8d
   14002340e:	xor    edx,edx
   140023410:	xor    ecx,ecx
   140023412:	call   0x14001ccf0
   140023417:	or     eax,0xffffffff
   14002341a:	jmp    0x1400234f1
   14002341f:	call   0x140023b58
   140023424:	nop
   140023425:	test   BYTE PTR [rbx+0x18],0x40
   140023429:	jne    0x1400234c5
   14002342f:	mov    rcx,rbx
   140023432:	call   0x14002b1bc
   140023437:	cmp    eax,0xffffffff
   14002343a:	je     0x140023466
   14002343c:	cmp    eax,0xfffffffe
   14002343f:	je     0x140023466
   140023441:	movsxd rdx,eax
   140023444:	mov    rcx,rdx
   140023447:	sar    rcx,0x5
   14002344b:	lea    r8,[rip+0x29ece]        # 0x14004d320
   140023452:	and    edx,0x1f
   140023455:	imul   rdx,rdx,0x58
   140023459:	add    rdx,QWORD PTR [r8+rcx*8]
   14002345d:	lea    rcx,[rip+0x26c7c]        # 0x14004a0e0
   140023464:	jmp    0x140023477
   140023466:	lea    rcx,[rip+0x26c73]        # 0x14004a0e0
   14002346d:	mov    rdx,rcx
   140023470:	lea    r8,[rip+0x29ea9]        # 0x14004d320
   140023477:	test   BYTE PTR [rdx+0x38],0x7f
   14002347b:	jne    0x1400234a2
   14002347d:	cmp    eax,0xffffffff
   140023480:	je     0x14002349c
   140023482:	cmp    eax,0xfffffffe
   140023485:	je     0x14002349c
   140023487:	movsxd rcx,eax
   14002348a:	mov    rax,rcx
   14002348d:	sar    rax,0x5
   140023491:	and    ecx,0x1f
   140023494:	imul   rcx,rcx,0x58
   140023498:	add    rcx,QWORD PTR [r8+rax*8]
   14002349c:	test   BYTE PTR [rcx+0x38],0x80
   1400234a0:	je     0x1400234c5
   1400234a2:	call   0x140020aa4
   1400234a7:	mov    DWORD PTR [rax],0x16
   1400234ad:	and    QWORD PTR [rsp+0x20],0x0
   1400234b3:	xor    r9d,r9d
   1400234b6:	xor    r8d,r8d
   1400234b9:	xor    edx,edx
   1400234bb:	xor    ecx,ecx
   1400234bd:	call   0x14001ccf0
   1400234c2:	or     edi,0xffffffff
   1400234c5:	test   edi,edi
   1400234c7:	jne    0x1400234e7
   1400234c9:	add    DWORD PTR [rbx+0x8],0xffffffff
   1400234cd:	js     0x1400234dd
   1400234cf:	mov    rax,QWORD PTR [rbx]
   1400234d2:	movzx  edi,BYTE PTR [rax]
   1400234d5:	inc    rax
   1400234d8:	mov    QWORD PTR [rbx],rax
   1400234db:	jmp    0x1400234e7
   1400234dd:	mov    rcx,rbx
   1400234e0:	call   0x14002b060
   1400234e5:	mov    edi,eax
   1400234e7:	mov    rcx,rbx
   1400234ea:	call   0x140023be8
   1400234ef:	mov    eax,edi
   1400234f1:	mov    rbx,QWORD PTR [rsp+0x48]
   1400234f6:	add    rsp,0x30
   1400234fa:	pop    rdi
   1400234fb:	ret    
   1400234fc:	mov    QWORD PTR [rsp+0x8],rbx
   140023501:	mov    QWORD PTR [rsp+0x18],rbp
   140023506:	mov    QWORD PTR [rsp+0x20],rsi
   14002350b:	push   rdi
   14002350c:	push   r12
   14002350e:	push   r13
   140023510:	push   r14
   140023512:	push   r15
   140023514:	sub    rsp,0x30
   140023518:	mov    rsi,r9
   14002351b:	mov    r15,r8
   14002351e:	mov    r12,rdx
   140023521:	mov    r14,rcx
   140023524:	test   rdx,rdx
   140023527:	je     0x140023553
   140023529:	test   r8,r8
   14002352c:	je     0x140023553
   14002352e:	test   r9,r9
   140023531:	jne    0x140023572
   140023533:	call   0x140020aa4
   140023538:	and    QWORD PTR [rsp+0x20],0x0
   14002353e:	xor    r9d,r9d
   140023541:	xor    r8d,r8d
   140023544:	xor    edx,edx
   140023546:	xor    ecx,ecx
   140023548:	mov    DWORD PTR [rax],0x16
   14002354e:	call   0x14001ccf0
   140023553:	xor    eax,eax
   140023555:	mov    rbx,QWORD PTR [rsp+0x60]
   14002355a:	mov    rbp,QWORD PTR [rsp+0x70]
   14002355f:	mov    rsi,QWORD PTR [rsp+0x78]
   140023564:	add    rsp,0x30
   140023568:	pop    r15
   14002356a:	pop    r14
   14002356c:	pop    r13
   14002356e:	pop    r12
   140023570:	pop    rdi
   140023571:	ret    
   140023572:	test   rcx,rcx
   140023575:	je     0x140023533
   140023577:	xor    edx,edx
   140023579:	or     rax,0xffffffffffffffff
   14002357d:	div    r12
   140023580:	cmp    r8,rax
   140023583:	ja     0x140023533
   140023585:	mov    rdi,r12
   140023588:	imul   rdi,r15
   14002358c:	test   DWORD PTR [r9+0x18],0x10c
   140023594:	mov    rbp,rdi
   140023597:	je     0x14002359f
   140023599:	mov    r13d,DWORD PTR [r9+0x24]
   14002359d:	jmp    0x1400235a5
   14002359f:	mov    r13d,0x1000
   1400235a5:	test   rdi,rdi
   1400235a8:	je     0x14002368e
   1400235ae:	mov    eax,DWORD PTR [rsi+0x18]
   1400235b1:	and    eax,0x108
   1400235b6:	je     0x1400235f4
   1400235b8:	mov    ecx,DWORD PTR [rsi+0x8]
   1400235bb:	test   ecx,ecx
   1400235bd:	je     0x1400235f4
   1400235bf:	js     0x14002364c
   1400235c5:	cmp    rbp,rcx
   1400235c8:	mov    rdx,r14
   1400235cb:	cmovb  ecx,ebp
   1400235ce:	mov    DWORD PTR [rsp+0x68],ecx
   1400235d2:	mov    ebx,ecx
   1400235d4:	mov    r8d,ecx
   1400235d7:	mov    rcx,QWORD PTR [rsi]
   1400235da:	call   0x1400205b0
   1400235df:	mov    eax,DWORD PTR [rsp+0x68]
   1400235e3:	add    QWORD PTR [rsi],rbx
   1400235e6:	sub    DWORD PTR [rsi+0x8],eax
   1400235e9:	sub    rbp,rbx
   1400235ec:	add    r14,rbx
   1400235ef:	jmp    0x140023686
   1400235f4:	mov    ebx,r13d
   1400235f7:	cmp    rbp,rbx
   1400235fa:	jb     0x140023660
   1400235fc:	test   eax,eax
   1400235fe:	je     0x14002360c
   140023600:	mov    rcx,rsi
   140023603:	call   0x140022e48
   140023608:	test   eax,eax
   14002360a:	jne    0x140023650
   14002360c:	test   r13d,r13d
   14002360f:	je     0x14002361f
   140023611:	xor    edx,edx
   140023613:	mov    rax,rbp
   140023616:	div    rbx
   140023619:	mov    ebx,ebp
   14002361b:	sub    ebx,edx
   14002361d:	jmp    0x140023621
   14002361f:	mov    ebx,ebp
   140023621:	mov    rcx,rsi
   140023624:	call   0x14002b1bc
   140023629:	mov    r8d,ebx
   14002362c:	mov    rdx,r14
   14002362f:	mov    ecx,eax
   140023631:	call   0x14002bd5c
   140023636:	cmp    eax,0xffffffff
   140023639:	je     0x14002364c
   14002363b:	mov    ecx,eax
   14002363d:	cmp    eax,ebx
   14002363f:	cmova  ecx,ebx
   140023642:	sub    rbp,rcx
   140023645:	add    r14,rcx
   140023648:	cmp    eax,ebx
   14002364a:	jae    0x140023686
   14002364c:	or     DWORD PTR [rsi+0x18],0x20
   140023650:	sub    rdi,rbp
   140023653:	xor    edx,edx
   140023655:	mov    rax,rdi
   140023658:	div    r12
   14002365b:	jmp    0x140023555
   140023660:	movsx  ecx,BYTE PTR [r14]
   140023664:	mov    rdx,rsi
   140023667:	call   0x1400258c0
   14002366c:	cmp    eax,0xffffffff
   14002366f:	je     0x140023650
   140023671:	inc    r14
   140023674:	dec    rbp
   140023677:	cmp    DWORD PTR [rsi+0x24],0x0
   14002367b:	mov    r13d,0x1
   140023681:	cmovg  r13d,DWORD PTR [rsi+0x24]
   140023686:	test   rbp,rbp
   140023689:	jmp    0x1400235a8
   14002368e:	mov    rax,r15
   140023691:	jmp    0x140023555
   140023696:	int3   
   140023697:	int3   
   140023698:	mov    rax,rsp
   14002369b:	mov    QWORD PTR [rax+0x8],rbx
   14002369f:	mov    QWORD PTR [rax+0x10],rsi
   1400236a3:	mov    QWORD PTR [rax+0x18],rdi
   1400236a7:	mov    QWORD PTR [rax+0x20],r9
   1400236ab:	push   r12
   1400236ad:	sub    rsp,0x30
   1400236b1:	mov    rbx,r9
   1400236b4:	mov    rdi,r8
   1400236b7:	mov    rsi,rdx
   1400236ba:	mov    r12,rcx
   1400236bd:	test   rdx,rdx
   1400236c0:	je     0x140023721
   1400236c2:	test   r8,r8
   1400236c5:	je     0x140023721
   1400236c7:	xor    eax,eax
   1400236c9:	test   rbx,rbx
   1400236cc:	setne  al
   1400236cf:	test   eax,eax
   1400236d1:	jne    0x1400236f7
   1400236d3:	call   0x140020aa4
   1400236d8:	mov    DWORD PTR [rax],0x16
   1400236de:	and    QWORD PTR [rsp+0x20],0x0
   1400236e4:	xor    r9d,r9d
   1400236e7:	xor    r8d,r8d
   1400236ea:	xor    edx,edx
   1400236ec:	xor    ecx,ecx
   1400236ee:	call   0x14001ccf0
   1400236f3:	xor    eax,eax
   1400236f5:	jmp    0x140023723
   1400236f7:	mov    rcx,rbx
   1400236fa:	call   0x140023b58
   1400236ff:	nop
   140023700:	mov    r9,rbx
   140023703:	mov    r8,rdi
   140023706:	mov    rdx,rsi
   140023709:	mov    rcx,r12
   14002370c:	call   0x1400234fc
   140023711:	mov    rdi,rax
   140023714:	mov    rcx,rbx
   140023717:	call   0x140023be8
   14002371c:	mov    rax,rdi
   14002371f:	jmp    0x140023723
   140023721:	xor    eax,eax
   140023723:	mov    rbx,QWORD PTR [rsp+0x40]
   140023728:	mov    rsi,QWORD PTR [rsp+0x48]
   14002372d:	mov    rdi,QWORD PTR [rsp+0x50]
   140023732:	add    rsp,0x30
   140023736:	pop    r12
   140023738:	ret    
   140023739:	int3   
   14002373a:	int3   
   14002373b:	int3   
   14002373c:	mov    QWORD PTR [rsp+0x8],rbx
   140023741:	push   rdi
   140023742:	sub    rsp,0x30
   140023746:	xor    ebx,ebx
   140023748:	mov    rdi,rdx
   14002374b:	cmp    rcx,rbx
   14002374e:	jne    0x140023774
   140023750:	call   0x140020aa4
   140023755:	xor    r9d,r9d
   140023758:	xor    r8d,r8d
   14002375b:	xor    edx,edx
   14002375d:	xor    ecx,ecx
   14002375f:	mov    QWORD PTR [rsp+0x20],rbx
   140023764:	mov    DWORD PTR [rax],0x16
   14002376a:	call   0x14001ccf0
   14002376f:	or     eax,0xffffffff
   140023772:	jmp    0x14002378b
   140023774:	cmp    rdx,rbx
   140023777:	je     0x140023750
   140023779:	call   0x14002c2cc
   14002377e:	cmp    rax,0xffffffffffffffff
   140023782:	mov    QWORD PTR [rdi],rax
   140023785:	setne  bl
   140023788:	lea    eax,[rbx-0x1]
   14002378b:	mov    rbx,QWORD PTR [rsp+0x40]
   140023790:	add    rsp,0x30
   140023794:	pop    rdi
   140023795:	ret    
   140023796:	int3   
   140023797:	int3   
   140023798:	mov    QWORD PTR [rsp+0x8],rbx
   14002379d:	mov    QWORD PTR [rsp+0x10],rbp
   1400237a2:	mov    QWORD PTR [rsp+0x18],rsi
   1400237a7:	push   rdi
   1400237a8:	sub    rsp,0x20
   1400237ac:	mov    eax,DWORD PTR [rcx+0x18]
   1400237af:	mov    edi,r8d
   1400237b2:	mov    esi,edx
   1400237b4:	mov    rbx,rcx
   1400237b7:	test   al,0x83
   1400237b9:	jne    0x1400237cb
   1400237bb:	call   0x140020aa4
   1400237c0:	mov    DWORD PTR [rax],0x16
   1400237c6:	or     eax,0xffffffff
   1400237c9:	jmp    0x140023835
   1400237cb:	and    eax,0xffffffef
   1400237ce:	xor    ebp,ebp
   1400237d0:	mov    DWORD PTR [rcx+0x18],eax
   1400237d3:	cmp    r8d,0x1
   1400237d7:	jne    0x1400237e2
   1400237d9:	call   0x14002c4d4
   1400237de:	mov    edi,ebp
   1400237e0:	add    esi,eax
   1400237e2:	mov    rcx,rbx
   1400237e5:	call   0x140022e48
   1400237ea:	mov    r11d,DWORD PTR [rbx+0x18]
   1400237ee:	test   r11b,r11b
   1400237f1:	jns    0x1400237fd
   1400237f3:	and    r11d,0xfffffffc
   1400237f7:	mov    DWORD PTR [rbx+0x18],r11d
   1400237fb:	jmp    0x140023817
   1400237fd:	test   r11b,0x1
   140023801:	je     0x140023817
   140023803:	test   r11b,0x8
   140023807:	je     0x140023817
   140023809:	bt     r11d,0xa
   14002380e:	jb     0x140023817
   140023810:	mov    DWORD PTR [rbx+0x24],0x200
   140023817:	mov    rcx,rbx
   14002381a:	call   0x14002b1bc
   14002381f:	mov    r8d,edi
   140023822:	mov    edx,esi
   140023824:	mov    ecx,eax
   140023826:	call   0x14002c3a0
   14002382b:	cmp    eax,0xffffffff
   14002382e:	setne  bpl
   140023832:	lea    eax,[rbp-0x1]
   140023835:	mov    rbx,QWORD PTR [rsp+0x30]
   14002383a:	mov    rbp,QWORD PTR [rsp+0x38]
   14002383f:	mov    rsi,QWORD PTR [rsp+0x40]
   140023844:	add    rsp,0x20
   140023848:	pop    rdi
   140023849:	ret    
   14002384a:	int3   
   14002384b:	int3   
   14002384c:	mov    QWORD PTR [rsp+0x10],rbx
   140023851:	mov    QWORD PTR [rsp+0x18],rsi
   140023856:	mov    QWORD PTR [rsp+0x8],rcx
   14002385b:	push   rdi
   14002385c:	sub    rsp,0x30
   140023860:	mov    ebx,r8d
   140023863:	mov    esi,edx
   140023865:	mov    rdi,rcx
   140023868:	xor    eax,eax
   14002386a:	test   rcx,rcx
   14002386d:	setne  al
   140023870:	test   eax,eax
   140023872:	jne    0x140023899
   140023874:	call   0x140020aa4
   140023879:	mov    DWORD PTR [rax],0x16
   14002387f:	and    QWORD PTR [rsp+0x20],0x0
   140023885:	xor    r9d,r9d
   140023888:	xor    r8d,r8d
   14002388b:	xor    edx,edx
   14002388d:	xor    ecx,ecx
   14002388f:	call   0x14001ccf0
   140023894:	or     eax,0xffffffff
   140023897:	jmp    0x1400238eb
   140023899:	test   ebx,ebx
   14002389b:	je     0x1400238cc
   14002389d:	cmp    ebx,0x1
   1400238a0:	je     0x1400238cc
   1400238a2:	cmp    ebx,0x2
   1400238a5:	je     0x1400238cc
   1400238a7:	call   0x140020aa4
   1400238ac:	mov    DWORD PTR [rax],0x16
   1400238b2:	and    QWORD PTR [rsp+0x20],0x0
   1400238b8:	xor    r9d,r9d
   1400238bb:	xor    r8d,r8d
   1400238be:	xor    edx,edx
   1400238c0:	xor    ecx,ecx
   1400238c2:	call   0x14001ccf0
   1400238c7:	or     eax,0xffffffff
   1400238ca:	jmp    0x1400238eb
   1400238cc:	call   0x140023b58
   1400238d1:	nop
   1400238d2:	mov    r8d,ebx
   1400238d5:	mov    edx,esi
   1400238d7:	mov    rcx,rdi
   1400238da:	call   0x140023798
   1400238df:	mov    ebx,eax
   1400238e1:	mov    rcx,rdi
   1400238e4:	call   0x140023be8
   1400238e9:	mov    eax,ebx
   1400238eb:	mov    rbx,QWORD PTR [rsp+0x48]
   1400238f0:	mov    rsi,QWORD PTR [rsp+0x50]
   1400238f5:	add    rsp,0x30
   1400238f9:	pop    rdi
   1400238fa:	ret    
   1400238fb:	int3   
   1400238fc:	sub    rsp,0x38
   140023900:	test   rcx,rcx
   140023903:	jne    0x14002392a
   140023905:	call   0x140020aa4
   14002390a:	and    QWORD PTR [rsp+0x20],0x0
   140023910:	xor    r9d,r9d
   140023913:	xor    r8d,r8d
   140023916:	xor    edx,edx
   140023918:	xor    ecx,ecx
   14002391a:	mov    DWORD PTR [rax],0x16
   140023920:	call   0x14001ccf0
   140023925:	or     eax,0xffffffff
   140023928:	jmp    0x14002393a
   14002392a:	test   rdx,rdx
   14002392d:	je     0x140023905
   14002392f:	mov    rdx,QWORD PTR [rdx]
   140023932:	xor    r8d,r8d
   140023935:	call   0x14002c764
   14002393a:	add    rsp,0x38
   14002393e:	ret    
   14002393f:	int3   
   140023940:	mov    QWORD PTR [rsp+0x8],rbx
   140023945:	push   rdi
   140023946:	sub    rsp,0x30
   14002394a:	or     edi,0xffffffff
   14002394d:	mov    rbx,rcx
   140023950:	test   rcx,rcx
   140023953:	jne    0x140023978
   140023955:	call   0x140020aa4
   14002395a:	and    QWORD PTR [rsp+0x20],rbx
   14002395f:	xor    r9d,r9d
   140023962:	xor    r8d,r8d
   140023965:	xor    edx,edx
   140023967:	xor    ecx,ecx
   140023969:	mov    DWORD PTR [rax],0x16
   14002396f:	call   0x14001ccf0
   140023974:	or     eax,edi
   140023976:	jmp    0x1400239be
   140023978:	test   BYTE PTR [rcx+0x18],0x83
   14002397c:	je     0x1400239b8
   14002397e:	call   0x140022e48
   140023983:	mov    rcx,rbx
   140023986:	mov    edi,eax
   140023988:	call   0x14002bfa4
   14002398d:	mov    rcx,rbx
   140023990:	call   0x14002b1bc
   140023995:	mov    ecx,eax
   140023997:	call   0x14002c870
   14002399c:	test   eax,eax
   14002399e:	jns    0x1400239a5
   1400239a0:	or     edi,0xffffffff
   1400239a3:	jmp    0x1400239b8
   1400239a5:	mov    rcx,QWORD PTR [rbx+0x28]
   1400239a9:	test   rcx,rcx
   1400239ac:	je     0x1400239b8
   1400239ae:	call   0x14001ca48
   1400239b3:	and    QWORD PTR [rbx+0x28],0x0
   1400239b8:	and    DWORD PTR [rbx+0x18],0x0
   1400239bc:	mov    eax,edi
   1400239be:	mov    rbx,QWORD PTR [rsp+0x40]
   1400239c3:	add    rsp,0x30
   1400239c7:	pop    rdi
   1400239c8:	ret    
   1400239c9:	int3   
   1400239ca:	int3   
   1400239cb:	int3   
   1400239cc:	mov    QWORD PTR [rsp+0x10],rbx
   1400239d1:	mov    QWORD PTR [rsp+0x8],rcx
   1400239d6:	push   rdi
   1400239d7:	sub    rsp,0x30
   1400239db:	mov    rbx,rcx
   1400239de:	or     edi,0xffffffff
   1400239e1:	xor    eax,eax
   1400239e3:	test   rcx,rcx
   1400239e6:	setne  al
   1400239e9:	test   eax,eax
   1400239eb:	jne    0x140023a11
   1400239ed:	call   0x140020aa4
   1400239f2:	mov    DWORD PTR [rax],0x16
   1400239f8:	and    QWORD PTR [rsp+0x20],0x0
   1400239fe:	xor    r9d,r9d
   140023a01:	xor    r8d,r8d
   140023a04:	xor    edx,edx
   140023a06:	xor    ecx,ecx
   140023a08:	call   0x14001ccf0
   140023a0d:	mov    eax,edi
   140023a0f:	jmp    0x140023a37
   140023a11:	test   BYTE PTR [rcx+0x18],0x40
   140023a15:	je     0x140023a1d
   140023a17:	and    DWORD PTR [rcx+0x18],0x0
   140023a1b:	jmp    0x140023a35
   140023a1d:	call   0x140023b58
   140023a22:	nop
   140023a23:	mov    rcx,rbx
   140023a26:	call   0x140023940
   140023a2b:	mov    edi,eax
   140023a2d:	mov    rcx,rbx
   140023a30:	call   0x140023be8
   140023a35:	mov    eax,edi
   140023a37:	mov    rbx,QWORD PTR [rsp+0x48]
   140023a3c:	add    rsp,0x30
   140023a40:	pop    rdi
   140023a41:	ret    
   140023a42:	int3   
   140023a43:	int3   
   140023a44:	lea    rax,[rip+0x25a65]        # 0x1400494b0
   140023a4b:	ret    
   140023a4c:	rex push rbx
   140023a4e:	sub    rsp,0x20
   140023a52:	mov    eax,DWORD PTR [rip+0x2ab08]        # 0x14004e560
   140023a58:	mov    ebx,0x14
   140023a5d:	test   eax,eax
   140023a5f:	jne    0x140023a68
   140023a61:	mov    eax,0x200
   140023a66:	jmp    0x140023a6d
   140023a68:	cmp    eax,ebx
   140023a6a:	cmovl  eax,ebx
   140023a6d:	movsxd rcx,eax
   140023a70:	mov    edx,0x8
   140023a75:	mov    DWORD PTR [rip+0x2aae5],eax        # 0x14004e560
   140023a7b:	call   0x140020950
   140023a80:	mov    QWORD PTR [rip+0x29ac9],rax        # 0x14004d550
   140023a87:	test   rax,rax
   140023a8a:	jne    0x140023ab0
   140023a8c:	lea    edx,[rax+0x8]
   140023a8f:	mov    rcx,rbx
   140023a92:	mov    DWORD PTR [rip+0x2aac8],ebx        # 0x14004e560
   140023a98:	call   0x140020950
   140023a9d:	mov    QWORD PTR [rip+0x29aac],rax        # 0x14004d550
   140023aa4:	test   rax,rax
   140023aa7:	jne    0x140023ab0
   140023aa9:	mov    eax,0x1a
   140023aae:	jmp    0x140023b28
   140023ab0:	xor    ecx,ecx
   140023ab2:	lea    rdx,[rip+0x259f7]        # 0x1400494b0
   140023ab9:	mov    QWORD PTR [rcx+rax*1],rdx
   140023abd:	add    rdx,0x30
   140023ac1:	add    rcx,0x8
   140023ac5:	sub    rbx,0x1
   140023ac9:	je     0x140023ad4
   140023acb:	mov    rax,QWORD PTR [rip+0x29a7e]        # 0x14004d550
   140023ad2:	jmp    0x140023ab9
   140023ad4:	xor    r8d,r8d
   140023ad7:	lea    rdx,[rip+0x259ee]        # 0x1400494cc
   140023ade:	lea    r9d,[r8+0x3]
   140023ae2:	mov    rcx,r8
   140023ae5:	lea    r10,[rip+0x29834]        # 0x14004d320
   140023aec:	mov    rax,r8
   140023aef:	sar    rax,0x5
   140023af3:	and    ecx,0x1f
   140023af6:	mov    rax,QWORD PTR [r10+rax*8]
   140023afa:	imul   rcx,rcx,0x58
   140023afe:	mov    r10,QWORD PTR [rcx+rax*1]
   140023b02:	cmp    r10,0xffffffffffffffff
   140023b06:	je     0x140023b13
   140023b08:	cmp    r10,0xfffffffffffffffe
   140023b0c:	je     0x140023b13
   140023b0e:	test   r10,r10
   140023b11:	jne    0x140023b19
   140023b13:	mov    DWORD PTR [rdx],0xfffffffe
   140023b19:	inc    r8
   140023b1c:	add    rdx,0x30
   140023b20:	sub    r9,0x1
   140023b24:	jne    0x140023ae2
   140023b26:	xor    eax,eax
   140023b28:	add    rsp,0x20
   140023b2c:	pop    rbx
   140023b2d:	ret    
   140023b2e:	int3   
   140023b2f:	int3   
   140023b30:	sub    rsp,0x28
   140023b34:	call   0x140023044
   140023b39:	cmp    BYTE PTR [rip+0x285d8],0x0        # 0x14004c118
   140023b40:	je     0x140023b47
   140023b42:	call   0x14002c988
   140023b47:	mov    rcx,QWORD PTR [rip+0x29a02]        # 0x14004d550
   140023b4e:	add    rsp,0x28
   140023b52:	jmp    0x14001ca48
   140023b57:	int3   
   140023b58:	rex push rbx
   140023b5a:	sub    rsp,0x20
   140023b5e:	mov    rbx,rcx
   140023b61:	lea    rcx,[rip+0x25948]        # 0x1400494b0
   140023b68:	cmp    rbx,rcx
   140023b6b:	jb     0x140023ba7
   140023b6d:	lea    rax,[rip+0x25ccc]        # 0x140049840
   140023b74:	cmp    rbx,rax
   140023b77:	ja     0x140023ba7
   140023b79:	mov    rdx,rbx
   140023b7c:	movabs rax,0x2aaaaaaaaaaaaaab
   140023b86:	sub    rdx,rcx
   140023b89:	imul   rdx
   140023b8c:	sar    rdx,0x3
   140023b90:	mov    rcx,rdx
   140023b93:	shr    rcx,0x3f
   140023b97:	lea    ecx,[rcx+rdx*1+0x10]
   140023b9b:	call   0x140028880
   140023ba0:	bts    DWORD PTR [rbx+0x18],0xf
   140023ba5:	jmp    0x140023bb1
   140023ba7:	lea    rcx,[rbx+0x30]
   140023bab:	call   QWORD PTR [rip+0x1650f]        # 0x14003a0c0
   140023bb1:	add    rsp,0x20
   140023bb5:	pop    rbx
   140023bb6:	ret    
   140023bb7:	int3   
   140023bb8:	rex push rbx
   140023bba:	sub    rsp,0x20
   140023bbe:	cmp    ecx,0x14
   140023bc1:	mov    rbx,rdx
   140023bc4:	jge    0x140023bd5
   140023bc6:	add    ecx,0x10
   140023bc9:	call   0x140028880
   140023bce:	bts    DWORD PTR [rbx+0x18],0xf
   140023bd3:	jmp    0x140023bdf
   140023bd5:	lea    rcx,[rdx+0x30]
   140023bd9:	call   QWORD PTR [rip+0x164e1]        # 0x14003a0c0
   140023bdf:	add    rsp,0x20
   140023be3:	pop    rbx
   140023be4:	ret    
   140023be5:	int3   
   140023be6:	int3   
   140023be7:	int3   
   140023be8:	sub    rsp,0x28
   140023bec:	lea    rdx,[rip+0x258bd]        # 0x1400494b0
   140023bf3:	cmp    rcx,rdx
   140023bf6:	jb     0x140023c2f
   140023bf8:	lea    rax,[rip+0x25c41]        # 0x140049840
   140023bff:	cmp    rcx,rax
   140023c02:	ja     0x140023c2f
   140023c04:	btr    DWORD PTR [rcx+0x18],0xf
   140023c09:	sub    rcx,rdx
   140023c0c:	movabs rax,0x2aaaaaaaaaaaaaab
   140023c16:	imul   rcx
   140023c19:	sar    rdx,0x3
   140023c1d:	mov    rcx,rdx
   140023c20:	shr    rcx,0x3f
   140023c24:	lea    ecx,[rcx+rdx*1+0x10]
   140023c28:	call   0x140028780
   140023c2d:	jmp    0x140023c39
   140023c2f:	add    rcx,0x30
   140023c33:	call   QWORD PTR [rip+0x16477]        # 0x14003a0b0
   140023c39:	add    rsp,0x28
   140023c3d:	ret    
   140023c3e:	int3   
   140023c3f:	int3   
   140023c40:	sub    rsp,0x28
   140023c44:	cmp    ecx,0x14
   140023c47:	jge    0x140023c58
   140023c49:	btr    DWORD PTR [rdx+0x18],0xf
   140023c4e:	add    ecx,0x10
   140023c51:	call   0x140028780
   140023c56:	jmp    0x140023c62
   140023c58:	lea    rcx,[rdx+0x30]
   140023c5c:	call   QWORD PTR [rip+0x1644e]        # 0x14003a0b0
   140023c62:	add    rsp,0x28
   140023c66:	ret    
   140023c67:	int3   
   140023c68:	mov    QWORD PTR [rsp+0x8],rcx
   140023c6d:	sub    rsp,0x88
   140023c74:	lea    rcx,[rip+0x27f45]        # 0x14004bbc0
   140023c7b:	call   QWORD PTR [rip+0x165ef]        # 0x14003a270
   140023c81:	mov    r11,QWORD PTR [rip+0x28030]        # 0x14004bcb8
   140023c88:	mov    QWORD PTR [rsp+0x58],r11
   140023c8d:	xor    r8d,r8d
   140023c90:	lea    rdx,[rsp+0x60]
   140023c95:	mov    rcx,QWORD PTR [rsp+0x58]
   140023c9a:	call   0x140030e46
   140023c9f:	mov    QWORD PTR [rsp+0x50],rax
   140023ca4:	cmp    QWORD PTR [rsp+0x50],0x0
   140023caa:	je     0x140023ced
   140023cac:	mov    QWORD PTR [rsp+0x38],0x0
   140023cb5:	lea    rax,[rsp+0x48]
   140023cba:	mov    QWORD PTR [rsp+0x30],rax
   140023cbf:	lea    rax,[rsp+0x40]
   140023cc4:	mov    QWORD PTR [rsp+0x28],rax
   140023cc9:	lea    rax,[rip+0x27ef0]        # 0x14004bbc0
   140023cd0:	mov    QWORD PTR [rsp+0x20],rax
   140023cd5:	mov    r9,QWORD PTR [rsp+0x50]
   140023cda:	mov    r8,QWORD PTR [rsp+0x58]
   140023cdf:	mov    rdx,QWORD PTR [rsp+0x60]
   140023ce4:	xor    ecx,ecx
   140023ce6:	call   0x140030e40
   140023ceb:	jmp    0x140023d0f
   140023ced:	mov    rax,QWORD PTR [rsp+0x88]
   140023cf5:	mov    QWORD PTR [rip+0x27fbc],rax        # 0x14004bcb8
   140023cfc:	lea    rax,[rsp+0x88]
   140023d04:	add    rax,0x8
   140023d08:	mov    QWORD PTR [rip+0x27f49],rax        # 0x14004bc58
   140023d0f:	mov    rax,QWORD PTR [rip+0x27fa2]        # 0x14004bcb8
   140023d16:	mov    QWORD PTR [rip+0x27e13],rax        # 0x14004bb30
   140023d1d:	mov    rax,QWORD PTR [rsp+0x90]
   140023d25:	mov    QWORD PTR [rip+0x27f14],rax        # 0x14004bc40
   140023d2c:	mov    DWORD PTR [rip+0x27dea],0xc0000409        # 0x14004bb20
   140023d36:	mov    DWORD PTR [rip+0x27de4],0x1        # 0x14004bb24
   140023d40:	mov    rax,QWORD PTR [rip+0x25719]        # 0x140049460
   140023d47:	mov    QWORD PTR [rsp+0x68],rax
   140023d4c:	mov    rax,QWORD PTR [rip+0x25715]        # 0x140049468
   140023d53:	mov    QWORD PTR [rsp+0x70],rax
   140023d58:	call   QWORD PTR [rip+0x164fa]        # 0x14003a258
   140023d5e:	mov    DWORD PTR [rip+0x27e54],eax        # 0x14004bbb8
   140023d64:	mov    ecx,0x1
   140023d69:	call   0x140024348
   140023d6e:	xor    ecx,ecx
   140023d70:	call   QWORD PTR [rip+0x164da]        # 0x14003a250
   140023d76:	lea    rcx,[rip+0x179d3]        # 0x14003b750
   140023d7d:	call   QWORD PTR [rip+0x164c5]        # 0x14003a248
   140023d83:	cmp    DWORD PTR [rip+0x27e2e],0x0        # 0x14004bbb8
   140023d8a:	jne    0x140023d96
   140023d8c:	mov    ecx,0x1
   140023d91:	call   0x140024348
   140023d96:	call   QWORD PTR [rip+0x1636c]        # 0x14003a108
   140023d9c:	mov    edx,0xc0000409
   140023da1:	mov    rcx,rax
   140023da4:	call   QWORD PTR [rip+0x16496]        # 0x14003a240
   140023daa:	add    rsp,0x88
   140023db1:	ret    
   140023db2:	int3   
   140023db3:	int3   
   140023db4:	rex push rbx
   140023db6:	sub    rsp,0x30
   140023dba:	test   rcx,rcx
   140023dbd:	je     0x140023dcc
   140023dbf:	test   rdx,rdx
   140023dc2:	je     0x140023dcc
   140023dc4:	test   r8,r8
   140023dc7:	jne    0x140023df5
   140023dc9:	mov    BYTE PTR [rcx],r8b
   140023dcc:	call   0x140020aa4
   140023dd1:	mov    ebx,0x16
   140023dd6:	and    QWORD PTR [rsp+0x20],0x0
   140023ddc:	xor    r9d,r9d
   140023ddf:	xor    r8d,r8d
   140023de2:	xor    edx,edx
   140023de4:	xor    ecx,ecx
   140023de6:	mov    DWORD PTR [rax],ebx
   140023de8:	call   0x14001ccf0
   140023ded:	mov    eax,ebx
   140023def:	add    rsp,0x30
   140023df3:	pop    rbx
   140023df4:	ret    
   140023df5:	mov    r9,rcx
   140023df8:	mov    al,BYTE PTR [r8]
   140023dfb:	inc    r8
   140023dfe:	mov    BYTE PTR [r9],al
   140023e01:	inc    r9
   140023e04:	test   al,al
   140023e06:	je     0x140023e0e
   140023e08:	sub    rdx,0x1
   140023e0c:	jne    0x140023df8
   140023e0e:	test   rdx,rdx
   140023e11:	jne    0x140023e21
   140023e13:	mov    BYTE PTR [rcx],dl
   140023e15:	call   0x140020aa4
   140023e1a:	mov    ebx,0x22
   140023e1f:	jmp    0x140023dd6
   140023e21:	xor    eax,eax
   140023e23:	jmp    0x140023def
   140023e25:	int3   
   140023e26:	int3   
   140023e27:	int3   
   140023e28:	mov    DWORD PTR [rsp+0x8],ecx
   140023e2c:	sub    rsp,0x28
   140023e30:	xor    r8d,r8d
   140023e33:	mov    edx,0x1000
   140023e38:	xor    ecx,ecx
   140023e3a:	call   QWORD PTR [rip+0x16480]        # 0x14003a2c0
   140023e40:	mov    QWORD PTR [rip+0x28249],rax        # 0x14004c090
   140023e47:	test   rax,rax
   140023e4a:	je     0x140023e6f
   140023e4c:	lea    r8,[rsp+0x30]
   140023e51:	mov    r9d,0x4
   140023e57:	xor    edx,edx
   140023e59:	mov    rcx,rax
   140023e5c:	mov    DWORD PTR [rsp+0x30],0x2
   140023e64:	call   QWORD PTR [rip+0x1644e]        # 0x14003a2b8
   140023e6a:	mov    eax,0x1
   140023e6f:	add    rsp,0x28
   140023e73:	ret    
   140023e74:	rex push rbx
   140023e76:	sub    rsp,0x30
   140023e7a:	mov    rbx,rcx
   140023e7d:	mov    ecx,0xe
   140023e82:	call   0x140028880
   140023e87:	nop
   140023e88:	mov    rax,QWORD PTR [rbx+0x8]
   140023e8c:	test   rax,rax
   140023e8f:	je     0x140023ed5
   140023e91:	mov    rcx,QWORD PTR [rip+0x28208]        # 0x14004c0a0
   140023e98:	mov    QWORD PTR [rsp+0x20],rcx
   140023e9d:	lea    rdx,[rip+0x281f4]        # 0x14004c098
   140023ea4:	test   rcx,rcx
   140023ea7:	je     0x140023ec7
   140023ea9:	cmp    QWORD PTR [rcx],rax
   140023eac:	jne    0x140023ebd
   140023eae:	mov    rax,QWORD PTR [rcx+0x8]
   140023eb2:	mov    QWORD PTR [rdx+0x8],rax
   140023eb6:	call   0x14001ca48
   140023ebb:	jmp    0x140023ec7
   140023ebd:	mov    rdx,rcx
   140023ec0:	mov    QWORD PTR [rsp+0x20],rcx
   140023ec5:	jmp    0x140023ea4
   140023ec7:	mov    rcx,QWORD PTR [rbx+0x8]
   140023ecb:	call   0x14001ca48
   140023ed0:	and    QWORD PTR [rbx+0x8],0x0
   140023ed5:	mov    ecx,0xe
   140023eda:	call   0x140028780
   140023edf:	add    rsp,0x30
   140023ee3:	pop    rbx
   140023ee4:	ret    
   140023ee5:	int3   
   140023ee6:	int3   
   140023ee7:	int3   
   140023ee8:	int3   
   140023ee9:	int3   
   140023eea:	int3   
   140023eeb:	int3   
   140023eec:	int3   
   140023eed:	int3   
   140023eee:	int3   
   140023eef:	int3   
   140023ef0:	int3   
   140023ef1:	int3   
   140023ef2:	int3   
   140023ef3:	int3   
   140023ef4:	int3   
   140023ef5:	int3   
   140023ef6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140023f00:	sub    rdx,rcx
   140023f03:	mov    r9,rdx
   140023f06:	test   cl,0x7
   140023f09:	je     0x140023f26
   140023f0b:	mov    al,BYTE PTR [rcx]
   140023f0d:	mov    dl,BYTE PTR [rcx+r9*1]
   140023f11:	cmp    al,dl
   140023f13:	jne    0x140023f6b
   140023f15:	inc    rcx
   140023f18:	test   al,al
   140023f1a:	je     0x140023f73
   140023f1c:	test   rcx,0x7
   140023f23:	jne    0x140023f0b
   140023f25:	nop
   140023f26:	movabs r11,0x8101010101010100
   140023f30:	lea    rdx,[rcx+r9*1]
   140023f34:	and    dx,0xfff
   140023f39:	cmp    dx,0xff8
   140023f3e:	ja     0x140023f0b
   140023f40:	mov    rax,QWORD PTR [rcx]
   140023f43:	mov    rdx,QWORD PTR [rcx+r9*1]
   140023f47:	cmp    rax,rdx
   140023f4a:	jne    0x140023f0b
   140023f4c:	movabs r10,0x7efefefefefefeff
   140023f56:	add    r10,rdx
   140023f59:	xor    rax,0xffffffffffffffff
   140023f5d:	add    rcx,0x8
   140023f61:	xor    rax,r10
   140023f64:	test   r11,rax
   140023f67:	je     0x140023f30
   140023f69:	jmp    0x140023f7a
   140023f6b:	sbb    rax,rax
   140023f6e:	sbb    rax,0xffffffffffffffff
   140023f72:	ret    
   140023f73:	xor    eax,eax
   140023f75:	ret    
   140023f76:	data16 data16 xchg ax,ax
   140023f7a:	test   dl,dl
   140023f7c:	je     0x140023fa5
   140023f7e:	test   dh,dh
   140023f80:	je     0x140023fa5
   140023f82:	shr    rdx,0x10
   140023f86:	test   dl,dl
   140023f88:	je     0x140023fa5
   140023f8a:	test   dh,dh
   140023f8c:	je     0x140023fa5
   140023f8e:	shr    rdx,0x10
   140023f92:	test   dl,dl
   140023f94:	je     0x140023fa5
   140023f96:	test   dh,dh
   140023f98:	je     0x140023fa5
   140023f9a:	shr    edx,0x10
   140023f9d:	test   dl,dl
   140023f9f:	je     0x140023fa5
   140023fa1:	test   dh,dh
   140023fa3:	jne    0x140023f30
   140023fa5:	xor    eax,eax
   140023fa7:	ret    
   140023fa8:	sbb    rax,rax
   140023fab:	sbb    rax,0xffffffffffffffff
   140023faf:	ret    
   140023fb0:	rex.W jmp QWORD PTR [rip+0x16311]        # 0x14003a2c8
   140023fb7:	int3   
   140023fb8:	xor    ecx,ecx
   140023fba:	rex.W jmp QWORD PTR [rip+0x16307]        # 0x14003a2c8
   140023fc1:	int3   
   140023fc2:	int3   
   140023fc3:	int3   
   140023fc4:	rex.W jmp QWORD PTR [rip+0x16305]        # 0x14003a2d0
   140023fcb:	int3   
   140023fcc:	sub    rsp,0x28
   140023fd0:	mov    ecx,DWORD PTR [rip+0x25a4a]        # 0x140049a20
   140023fd6:	cmp    ecx,0xffffffff
   140023fd9:	je     0x140023fe8
   140023fdb:	call   QWORD PTR [rip+0x16307]        # 0x14003a2e8
   140023fe1:	or     DWORD PTR [rip+0x25a38],0xffffffff        # 0x140049a20
   140023fe8:	add    rsp,0x28
   140023fec:	jmp    0x1400286fc
   140023ff1:	int3   
   140023ff2:	int3   
   140023ff3:	int3   
   140023ff4:	mov    QWORD PTR [rsp+0x8],rbx
   140023ff9:	push   rdi
   140023ffa:	sub    rsp,0x20
   140023ffe:	mov    rdi,rdx
   140024001:	mov    rbx,rcx
   140024004:	lea    rax,[rip+0x17d65]        # 0x14003bd70
   14002400b:	mov    QWORD PTR [rcx+0xa0],rax
   140024012:	mov    DWORD PTR [rcx+0x1c],0x1
   140024019:	mov    DWORD PTR [rcx+0xc8],0x1
   140024023:	mov    BYTE PTR [rcx+0x174],0x43
   14002402a:	mov    BYTE PTR [rcx+0x1f7],0x43
   140024031:	lea    rax,[rip+0x259f8]        # 0x140049a30
   140024038:	mov    QWORD PTR [rcx+0xb8],rax
   14002403f:	mov    ecx,0xd
   140024044:	call   0x140028880
   140024049:	nop
   14002404a:	mov    rax,QWORD PTR [rbx+0xb8]
   140024051:	lock add DWORD PTR [rax],0x1
   140024055:	mov    ecx,0xd
   14002405a:	call   0x140028780
   14002405f:	mov    ecx,0xc
   140024064:	call   0x140028880
   140024069:	nop
   14002406a:	mov    QWORD PTR [rbx+0xc0],rdi
   140024071:	test   rdi,rdi
   140024074:	jne    0x140024084
   140024076:	mov    rax,QWORD PTR [rip+0x25983]        # 0x140049a00
   14002407d:	mov    QWORD PTR [rbx+0xc0],rax
   140024084:	mov    rcx,QWORD PTR [rbx+0xc0]
   14002408b:	call   0x14001e7d0
   140024090:	nop
   140024091:	mov    ecx,0xc
   140024096:	call   0x140028780
   14002409b:	mov    rbx,QWORD PTR [rsp+0x30]
   1400240a0:	add    rsp,0x20
   1400240a4:	pop    rdi
   1400240a5:	ret    
   1400240a6:	int3   
   1400240a7:	int3   
   1400240a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400240ad:	push   rdi
   1400240ae:	sub    rsp,0x20
   1400240b2:	call   QWORD PTR [rip+0x16010]        # 0x14003a0c8
   1400240b8:	mov    ecx,DWORD PTR [rip+0x25962]        # 0x140049a20
   1400240be:	mov    edi,eax
   1400240c0:	call   QWORD PTR [rip+0x16212]        # 0x14003a2d8
   1400240c6:	mov    rbx,rax
   1400240c9:	test   rax,rax
   1400240cc:	jne    0x140024116
   1400240ce:	lea    ecx,[rax+0x1]
   1400240d1:	mov    edx,0x2c8
   1400240d6:	call   0x140020950
   1400240db:	mov    rbx,rax
   1400240de:	test   rax,rax
   1400240e1:	je     0x140024116
   1400240e3:	mov    ecx,DWORD PTR [rip+0x25937]        # 0x140049a20
   1400240e9:	mov    rdx,rax
   1400240ec:	call   QWORD PTR [rip+0x161ee]        # 0x14003a2e0
   1400240f2:	mov    rcx,rbx
   1400240f5:	test   eax,eax
   1400240f7:	je     0x14002410f
   1400240f9:	xor    edx,edx
   1400240fb:	call   0x140023ff4
   140024100:	call   QWORD PTR [rip+0x161f2]        # 0x14003a2f8
   140024106:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14002410b:	mov    DWORD PTR [rbx],eax
   14002410d:	jmp    0x140024116
   14002410f:	call   0x14001ca48
   140024114:	xor    ebx,ebx
   140024116:	mov    ecx,edi
   140024118:	call   QWORD PTR [rip+0x161d2]        # 0x14003a2f0
   14002411e:	mov    rax,rbx
   140024121:	mov    rbx,QWORD PTR [rsp+0x30]
   140024126:	add    rsp,0x20
   14002412a:	pop    rdi
   14002412b:	ret    
   14002412c:	rex push rbx
   14002412e:	sub    rsp,0x20
   140024132:	call   0x1400240a8
   140024137:	mov    rbx,rax
   14002413a:	test   rax,rax
   14002413d:	jne    0x140024147
   14002413f:	lea    ecx,[rax+0x10]
   140024142:	call   0x140024398
   140024147:	mov    rax,rbx
   14002414a:	add    rsp,0x20
   14002414e:	pop    rbx
   14002414f:	ret    
   140024150:	test   rcx,rcx
   140024153:	je     0x140024284
   140024159:	mov    QWORD PTR [rsp+0x10],rbx
   14002415e:	push   rdi
   14002415f:	sub    rsp,0x20
   140024163:	mov    rbx,rcx
   140024166:	mov    rcx,QWORD PTR [rcx+0x38]
   14002416a:	test   rcx,rcx
   14002416d:	je     0x140024174
   14002416f:	call   0x14001ca48
   140024174:	mov    rcx,QWORD PTR [rbx+0x48]
   140024178:	test   rcx,rcx
   14002417b:	je     0x140024182
   14002417d:	call   0x14001ca48
   140024182:	mov    rcx,QWORD PTR [rbx+0x58]
   140024186:	test   rcx,rcx
   140024189:	je     0x140024190
   14002418b:	call   0x14001ca48
   140024190:	mov    rcx,QWORD PTR [rbx+0x68]
   140024194:	test   rcx,rcx
   140024197:	je     0x14002419e
   140024199:	call   0x14001ca48
   14002419e:	mov    rcx,QWORD PTR [rbx+0x70]
   1400241a2:	test   rcx,rcx
   1400241a5:	je     0x1400241ac
   1400241a7:	call   0x14001ca48
   1400241ac:	mov    rcx,QWORD PTR [rbx+0x78]
   1400241b0:	test   rcx,rcx
   1400241b3:	je     0x1400241ba
   1400241b5:	call   0x14001ca48
   1400241ba:	mov    rcx,QWORD PTR [rbx+0x80]
   1400241c1:	test   rcx,rcx
   1400241c4:	je     0x1400241cb
   1400241c6:	call   0x14001ca48
   1400241cb:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400241d2:	lea    rax,[rip+0x17b97]        # 0x14003bd70
   1400241d9:	cmp    rcx,rax
   1400241dc:	je     0x1400241e3
   1400241de:	call   0x14001ca48
   1400241e3:	mov    ecx,0xd
   1400241e8:	call   0x140028880
   1400241ed:	nop
   1400241ee:	mov    rcx,QWORD PTR [rbx+0xb8]
   1400241f5:	mov    QWORD PTR [rsp+0x30],rcx
   1400241fa:	test   rcx,rcx
   1400241fd:	je     0x14002421c
   1400241ff:	lock add DWORD PTR [rcx],0xffffffff
   140024203:	jne    0x14002421c
   140024205:	lea    rax,[rip+0x25824]        # 0x140049a30
   14002420c:	mov    rcx,QWORD PTR [rsp+0x30]
   140024211:	cmp    rcx,rax
   140024214:	je     0x14002421c
   140024216:	call   0x14001ca48
   14002421b:	nop
   14002421c:	mov    ecx,0xd
   140024221:	call   0x140028780
   140024226:	mov    ecx,0xc
   14002422b:	call   0x140028880
   140024230:	nop
   140024231:	mov    rdi,QWORD PTR [rbx+0xc0]
   140024238:	test   rdi,rdi
   14002423b:	je     0x140024268
   14002423d:	mov    rcx,rdi
   140024240:	call   0x14001e868
   140024245:	cmp    rdi,QWORD PTR [rip+0x257b4]        # 0x140049a00
   14002424c:	je     0x140024268
   14002424e:	lea    rax,[rip+0x2564b]        # 0x1400498a0
   140024255:	cmp    rdi,rax
   140024258:	je     0x140024268
   14002425a:	cmp    DWORD PTR [rdi],0x0
   14002425d:	jne    0x140024268
   14002425f:	mov    rcx,rdi
   140024262:	call   0x14001e654
   140024267:	nop
   140024268:	mov    ecx,0xc
   14002426d:	call   0x140028780
   140024272:	mov    rcx,rbx
   140024275:	call   0x14001ca48
   14002427a:	mov    rbx,QWORD PTR [rsp+0x38]
   14002427f:	add    rsp,0x20
   140024283:	pop    rdi
   140024284:	ret    
   140024285:	int3   
   140024286:	int3   
   140024287:	int3   
   140024288:	rex push rbx
   14002428a:	sub    rsp,0x20
   14002428e:	call   0x140024718
   140024293:	call   0x140028670
   140024298:	test   eax,eax
   14002429a:	je     0x1400242fc
   14002429c:	lea    rcx,[rip+0xfffffffffffffead]        # 0x140024150
   1400242a3:	call   QWORD PTR [rip+0x16057]        # 0x14003a300
   1400242a9:	mov    DWORD PTR [rip+0x25771],eax        # 0x140049a20
   1400242af:	cmp    eax,0xffffffff
   1400242b2:	je     0x1400242fc
   1400242b4:	mov    edx,0x2c8
   1400242b9:	mov    ecx,0x1
   1400242be:	call   0x140020950
   1400242c3:	mov    rbx,rax
   1400242c6:	test   rax,rax
   1400242c9:	je     0x1400242fc
   1400242cb:	mov    ecx,DWORD PTR [rip+0x2574f]        # 0x140049a20
   1400242d1:	mov    rdx,rax
   1400242d4:	call   QWORD PTR [rip+0x16006]        # 0x14003a2e0
   1400242da:	test   eax,eax
   1400242dc:	je     0x1400242fc
   1400242de:	xor    edx,edx
   1400242e0:	mov    rcx,rbx
   1400242e3:	call   0x140023ff4
   1400242e8:	call   QWORD PTR [rip+0x1600a]        # 0x14003a2f8
   1400242ee:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   1400242f3:	mov    DWORD PTR [rbx],eax
   1400242f5:	mov    eax,0x1
   1400242fa:	jmp    0x140024303
   1400242fc:	call   0x140023fcc
   140024301:	xor    eax,eax
   140024303:	add    rsp,0x20
   140024307:	pop    rbx
   140024308:	ret    
   140024309:	int3   
   14002430a:	int3   
   14002430b:	int3   
   14002430c:	mov    QWORD PTR [rip+0x27db5],rcx        # 0x14004c0c8
   140024313:	ret    
   140024314:	rex push rbx
   140024316:	sub    rsp,0x20
   14002431a:	mov    rbx,rcx
   14002431d:	mov    rcx,QWORD PTR [rip+0x27da4]        # 0x14004c0c8
   140024324:	call   0x140023fc4
   140024329:	test   rax,rax
   14002432c:	je     0x14002433e
   14002432e:	mov    rcx,rbx
   140024331:	call   rax
   140024333:	test   eax,eax
   140024335:	je     0x14002433e
   140024337:	mov    eax,0x1
   14002433c:	jmp    0x140024340
   14002433e:	xor    eax,eax
   140024340:	add    rsp,0x20
   140024344:	pop    rbx
   140024345:	ret    
   140024346:	int3   
   140024347:	int3   
   140024348:	and    DWORD PTR [rip+0x291f9],0x0        # 0x14004d548
   14002434f:	ret    
   140024350:	sub    rsp,0x38
   140024354:	test   rcx,rcx
   140024357:	jne    0x14002437f
   140024359:	call   0x140020aa4
   14002435e:	and    QWORD PTR [rsp+0x20],0x0
   140024364:	xor    r9d,r9d
   140024367:	xor    r8d,r8d
   14002436a:	xor    edx,edx
   14002436c:	xor    ecx,ecx
   14002436e:	mov    DWORD PTR [rax],0x16
   140024374:	call   0x14001ccf0
   140024379:	or     rax,0xffffffffffffffff
   14002437d:	jmp    0x140024391
   14002437f:	mov    r8,rcx
   140024382:	mov    rcx,QWORD PTR [rip+0x27d07]        # 0x14004c090
   140024389:	xor    edx,edx
   14002438b:	call   QWORD PTR [rip+0x15f77]        # 0x14003a308
   140024391:	add    rsp,0x38
   140024395:	ret    
   140024396:	int3   
   140024397:	int3   
   140024398:	rex push rbx
   14002439a:	sub    rsp,0x20
   14002439e:	mov    ebx,ecx
   1400243a0:	call   0x140025300
   1400243a5:	mov    ecx,ebx
   1400243a7:	call   0x1400250d8
   1400243ac:	mov    rcx,QWORD PTR [rip+0x25675]        # 0x140049a28
   1400243b3:	call   0x140023fc4
   1400243b8:	mov    ecx,0xff
   1400243bd:	add    rsp,0x20
   1400243c1:	pop    rbx
   1400243c2:	rex.W jmp rax
   1400243c5:	int3   
   1400243c6:	int3   
   1400243c7:	int3   
   1400243c8:	rex push rbx
   1400243ca:	sub    rsp,0x20
   1400243ce:	mov    ebx,ecx
   1400243d0:	lea    rcx,[rip+0x17399]        # 0x14003b770
   1400243d7:	call   QWORD PTR [rip+0x15ca3]        # 0x14003a080
   1400243dd:	test   rax,rax
   1400243e0:	je     0x1400243fb
   1400243e2:	lea    rdx,[rip+0x17377]        # 0x14003b760
   1400243e9:	mov    rcx,rax
   1400243ec:	call   QWORD PTR [rip+0x15c86]        # 0x14003a078
   1400243f2:	test   rax,rax
   1400243f5:	je     0x1400243fb
   1400243f7:	mov    ecx,ebx
   1400243f9:	call   rax
   1400243fb:	add    rsp,0x20
   1400243ff:	pop    rbx
   140024400:	ret    
   140024401:	int3   
   140024402:	int3   
   140024403:	int3   
   140024404:	rex push rbx
   140024406:	sub    rsp,0x20
   14002440a:	mov    ebx,ecx
   14002440c:	call   0x1400243c8
   140024411:	mov    ecx,ebx
   140024413:	call   QWORD PTR [rip+0x15ef7]        # 0x14003a310
   140024419:	int3   
   14002441a:	int3   
   14002441b:	int3   
   14002441c:	mov    ecx,0x8
   140024421:	jmp    0x140028880
   140024426:	int3   
   140024427:	int3   
   140024428:	mov    ecx,0x8
   14002442d:	jmp    0x140028780
   140024432:	int3   
   140024433:	int3   
   140024434:	cmp    rcx,rdx
   140024437:	jae    0x140024466
   140024439:	mov    QWORD PTR [rsp+0x8],rbx
   14002443e:	push   rdi
   14002443f:	sub    rsp,0x20
   140024443:	mov    rdi,rdx
   140024446:	mov    rbx,rcx
   140024449:	mov    rax,QWORD PTR [rbx]
   14002444c:	test   rax,rax
   14002444f:	je     0x140024453
   140024451:	call   rax
   140024453:	add    rbx,0x8
   140024457:	cmp    rbx,rdi
   14002445a:	jb     0x140024449
   14002445c:	mov    rbx,QWORD PTR [rsp+0x30]
   140024461:	add    rsp,0x20
   140024465:	pop    rdi
   140024466:	ret    
   140024467:	int3   
   140024468:	mov    QWORD PTR [rsp+0x8],rbx
   14002446d:	push   rdi
   14002446e:	sub    rsp,0x20
   140024472:	xor    eax,eax
   140024474:	mov    rdi,rdx
   140024477:	mov    rbx,rcx
   14002447a:	cmp    rcx,rdx
   14002447d:	jae    0x140024496
   14002447f:	test   eax,eax
   140024481:	jne    0x140024496
   140024483:	mov    rcx,QWORD PTR [rbx]
   140024486:	test   rcx,rcx
   140024489:	je     0x14002448d
   14002448b:	call   rcx
   14002448d:	add    rbx,0x8
   140024491:	cmp    rbx,rdi
   140024494:	jb     0x14002447f
   140024496:	mov    rbx,QWORD PTR [rsp+0x30]
   14002449b:	add    rsp,0x20
   14002449f:	pop    rdi
   1400244a0:	ret    
   1400244a1:	int3   
   1400244a2:	int3   
   1400244a3:	int3   
   1400244a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400244a9:	push   rdi
   1400244aa:	sub    rsp,0x20
   1400244ae:	cmp    QWORD PTR [rip+0x1726a],0x0        # 0x14003b720
   1400244b6:	mov    ebx,ecx
   1400244b8:	je     0x1400244d2
   1400244ba:	lea    rcx,[rip+0x1725f]        # 0x14003b720
   1400244c1:	call   0x1400272f0
   1400244c6:	test   eax,eax
   1400244c8:	je     0x1400244d2
   1400244ca:	mov    ecx,ebx
   1400244cc:	call   QWORD PTR [rip+0x1724e]        # 0x14003b720
   1400244d2:	call   0x14002ac74
   1400244d7:	lea    rdx,[rip+0x1607a]        # 0x14003a558
   1400244de:	lea    rcx,[rip+0x16043]        # 0x14003a528
   1400244e5:	call   0x140024468
   1400244ea:	test   eax,eax
   1400244ec:	jne    0x140024548
   1400244ee:	lea    rcx,[rip+0x2c0f]        # 0x140027104
   1400244f5:	call   0x14001cee4
   1400244fa:	lea    rbx,[rip+0x15f4f]        # 0x14003a450
   140024501:	lea    rdi,[rip+0x16018]        # 0x14003a520
   140024508:	jmp    0x140024518
   14002450a:	mov    rax,QWORD PTR [rbx]
   14002450d:	test   rax,rax
   140024510:	je     0x140024514
   140024512:	call   rax
   140024514:	add    rbx,0x8
   140024518:	cmp    rbx,rdi
   14002451b:	jb     0x14002450a
   14002451d:	cmp    QWORD PTR [rip+0x2901b],0x0        # 0x14004d540
   140024525:	je     0x140024546
   140024527:	lea    rcx,[rip+0x29012]        # 0x14004d540
   14002452e:	call   0x1400272f0
   140024533:	test   eax,eax
   140024535:	je     0x140024546
   140024537:	xor    r8d,r8d
   14002453a:	xor    ecx,ecx
   14002453c:	lea    edx,[r8+0x2]
   140024540:	call   QWORD PTR [rip+0x28ffa]        # 0x14004d540
   140024546:	xor    eax,eax
   140024548:	mov    rbx,QWORD PTR [rsp+0x30]
   14002454d:	add    rsp,0x20
   140024551:	pop    rdi
   140024552:	ret    
   140024553:	int3   
   140024554:	mov    QWORD PTR [rsp+0x8],rbx
   140024559:	mov    QWORD PTR [rsp+0x10],rsi
   14002455e:	mov    DWORD PTR [rsp+0x18],r8d
   140024563:	push   rdi
   140024564:	push   r12
   140024566:	push   r13
   140024568:	push   r14
   14002456a:	push   r15
   14002456c:	sub    rsp,0x40
   140024570:	mov    r12d,r8d
   140024573:	mov    ebx,edx
   140024575:	mov    r15d,ecx
   140024578:	mov    ecx,0x8
   14002457d:	call   0x140028880
   140024582:	nop
   140024583:	cmp    DWORD PTR [rip+0x27b96],0x1        # 0x14004c120
   14002458a:	je     0x14002468c
   140024590:	mov    DWORD PTR [rip+0x27b82],0x1        # 0x14004c11c
   14002459a:	mov    BYTE PTR [rip+0x27b77],r12b        # 0x14004c118
   1400245a1:	test   ebx,ebx
   1400245a3:	jne    0x140024678
   1400245a9:	mov    rcx,QWORD PTR [rip+0x28f80]        # 0x14004d530
   1400245b0:	call   0x140023fc4
   1400245b5:	mov    rsi,rax
   1400245b8:	mov    QWORD PTR [rsp+0x30],rax
   1400245bd:	test   rax,rax
   1400245c0:	je     0x140024665
   1400245c6:	mov    rcx,QWORD PTR [rip+0x28f5b]        # 0x14004d528
   1400245cd:	call   0x140023fc4
   1400245d2:	mov    rdi,rax
   1400245d5:	mov    QWORD PTR [rsp+0x20],rax
   1400245da:	mov    r14,rsi
   1400245dd:	mov    QWORD PTR [rsp+0x28],rsi
   1400245e2:	mov    r13,rax
   1400245e5:	mov    QWORD PTR [rsp+0x38],rax
   1400245ea:	sub    rdi,0x8
   1400245ee:	mov    QWORD PTR [rsp+0x20],rdi
   1400245f3:	cmp    rdi,rsi
   1400245f6:	jb     0x140024604
   1400245f8:	call   0x140023fb8
   1400245fd:	cmp    QWORD PTR [rdi],rax
   140024600:	jne    0x140024604
   140024602:	jmp    0x1400245ea
   140024604:	cmp    rdi,rsi
   140024607:	jb     0x140024665
   140024609:	mov    rcx,QWORD PTR [rdi]
   14002460c:	call   0x140023fc4
   140024611:	mov    rbx,rax
   140024614:	call   0x140023fb8
   140024619:	mov    QWORD PTR [rdi],rax
   14002461c:	call   rbx
   14002461e:	mov    rcx,QWORD PTR [rip+0x28f0b]        # 0x14004d530
   140024625:	call   0x140023fc4
   14002462a:	mov    rbx,rax
   14002462d:	mov    rcx,QWORD PTR [rip+0x28ef4]        # 0x14004d528
   140024634:	call   0x140023fc4
   140024639:	cmp    r14,rbx
   14002463c:	jne    0x140024643
   14002463e:	cmp    r13,rax
   140024641:	je     0x140024663
   140024643:	mov    r14,rbx
   140024646:	mov    QWORD PTR [rsp+0x28],rbx
   14002464b:	mov    rsi,rbx
   14002464e:	mov    QWORD PTR [rsp+0x30],rbx
   140024653:	mov    r13,rax
   140024656:	mov    QWORD PTR [rsp+0x38],rax
   14002465b:	mov    rdi,rax
   14002465e:	mov    QWORD PTR [rsp+0x20],rax
   140024663:	jmp    0x1400245ea
   140024665:	lea    rdx,[rip+0x15f0c]        # 0x14003a578
   14002466c:	lea    rcx,[rip+0x15eed]        # 0x14003a560
   140024673:	call   0x140024434
   140024678:	lea    rdx,[rip+0x15f09]        # 0x14003a588
   14002467f:	lea    rcx,[rip+0x15efa]        # 0x14003a580
   140024686:	call   0x140024434
   14002468b:	nop
   14002468c:	test   r12d,r12d
   14002468f:	je     0x14002469b
   140024691:	mov    ecx,0x8
   140024696:	call   0x140028780
   14002469b:	test   r12d,r12d
   14002469e:	jne    0x1400246c6
   1400246a0:	mov    DWORD PTR [rip+0x27a76],0x1        # 0x14004c120
   1400246aa:	lea    ecx,[r12+0x8]
   1400246af:	call   0x140028780
   1400246b4:	mov    ecx,r15d
   1400246b7:	call   0x1400243c8
   1400246bc:	mov    ecx,r15d
   1400246bf:	call   QWORD PTR [rip+0x15c4b]        # 0x14003a310
   1400246c5:	int3   
   1400246c6:	mov    rbx,QWORD PTR [rsp+0x70]
   1400246cb:	mov    rsi,QWORD PTR [rsp+0x78]
   1400246d0:	add    rsp,0x40
   1400246d4:	pop    r15
   1400246d6:	pop    r14
   1400246d8:	pop    r13
   1400246da:	pop    r12
   1400246dc:	pop    rdi
   1400246dd:	ret    
   1400246de:	int3   
   1400246df:	int3   
   1400246e0:	xor    r8d,r8d
   1400246e3:	xor    edx,edx
   1400246e5:	jmp    0x140024554
   1400246ea:	int3   
   1400246eb:	int3   
   1400246ec:	xor    r8d,r8d
   1400246ef:	lea    edx,[r8+0x1]
   1400246f3:	jmp    0x140024554
   1400246f8:	xor    edx,edx
   1400246fa:	xor    ecx,ecx
   1400246fc:	lea    r8d,[rdx+0x1]
   140024700:	jmp    0x140024554
   140024705:	int3   
   140024706:	int3   
   140024707:	int3   
   140024708:	mov    edx,0x1
   14002470d:	xor    ecx,ecx
   14002470f:	mov    r8d,edx
   140024712:	jmp    0x140024554
   140024717:	int3   
   140024718:	rex push rbx
   14002471a:	sub    rsp,0x20
   14002471e:	call   0x140023fb8
   140024723:	mov    rcx,rax
   140024726:	mov    rbx,rax
   140024729:	call   0x14002430c
   14002472e:	mov    rcx,rbx
   140024731:	call   0x14002ca40
   140024736:	mov    rcx,rbx
   140024739:	call   0x14001cbc0
   14002473e:	mov    rcx,rbx
   140024741:	call   0x140025508
   140024746:	mov    rcx,rbx
   140024749:	call   0x14002ca38
   14002474e:	mov    rcx,rbx
   140024751:	call   0x140027334
   140024756:	mov    rcx,rbx
   140024759:	call   0x140026758
   14002475e:	mov    rcx,rbx
   140024761:	call   0x1400258a4
   140024766:	lea    rcx,[rip+0xffffffffffffff7f]        # 0x1400246ec
   14002476d:	call   0x140023fb0
   140024772:	mov    QWORD PTR [rip+0x252af],rax        # 0x140049a28
   140024779:	add    rsp,0x20
   14002477d:	pop    rbx
   14002477e:	ret    
   14002477f:	int3   
   140024780:	mov    QWORD PTR [rsp+0x8],rbx
   140024785:	mov    QWORD PTR [rsp+0x10],rbp
   14002478a:	mov    QWORD PTR [rsp+0x18],rsi
   14002478f:	push   rdi
   140024790:	sub    rsp,0x20
   140024794:	lea    rbx,[rcx+0x1c]
   140024798:	mov    rbp,rcx
   14002479b:	mov    esi,0x101
   1400247a0:	mov    rcx,rbx
   1400247a3:	mov    r8,rsi
   1400247a6:	xor    edx,edx
   1400247a8:	call   0x14001c730
   1400247ad:	xor    r11d,r11d
   1400247b0:	lea    rdi,[rbp+0x10]
   1400247b4:	lea    ecx,[r11+0x6]
   1400247b8:	movzx  eax,r11w
   1400247bc:	mov    DWORD PTR [rbp+0x4],r11d
   1400247c0:	mov    DWORD PTR [rbp+0x8],r11d
   1400247c4:	mov    DWORD PTR [rbp+0xc],r11d
   1400247c8:	rep stos WORD PTR es:[rdi],ax
   1400247cb:	lea    rdi,[rip+0x2525e]        # 0x140049a30
   1400247d2:	sub    rdi,rbp
   1400247d5:	mov    al,BYTE PTR [rdi+rbx*1]
   1400247d8:	mov    BYTE PTR [rbx],al
   1400247da:	inc    rbx
   1400247dd:	sub    rsi,0x1
   1400247e1:	jne    0x1400247d5
   1400247e3:	lea    rcx,[rbp+0x11d]
   1400247ea:	mov    edx,0x100
   1400247ef:	mov    al,BYTE PTR [rcx+rdi*1]
   1400247f2:	mov    BYTE PTR [rcx],al
   1400247f4:	inc    rcx
   1400247f7:	sub    rdx,0x1
   1400247fb:	jne    0x1400247ef
   1400247fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140024802:	mov    rbp,QWORD PTR [rsp+0x38]
   140024807:	mov    rsi,QWORD PTR [rsp+0x40]
   14002480c:	add    rsp,0x20
   140024810:	pop    rdi
   140024811:	ret    
   140024812:	int3   
   140024813:	int3   
   140024814:	mov    QWORD PTR [rsp+0x10],rbx
   140024819:	mov    QWORD PTR [rsp+0x18],rsi
   14002481e:	push   rdi
   14002481f:	sub    rsp,0x580
   140024826:	mov    rax,QWORD PTR [rip+0x24c33]        # 0x140049460
   14002482d:	xor    rax,rsp
   140024830:	mov    QWORD PTR [rsp+0x570],rax
   140024838:	mov    rsi,rcx
   14002483b:	mov    ecx,DWORD PTR [rcx+0x4]
   14002483e:	lea    rdx,[rsp+0x50]
   140024843:	call   QWORD PTR [rip+0x15a5f]        # 0x14003a2a8
   140024849:	mov    ebx,0x100
   14002484e:	test   eax,eax
   140024850:	je     0x140024993
   140024856:	xor    eax,eax
   140024858:	lea    rdx,[rsp+0x70]
   14002485d:	mov    BYTE PTR [rdx],al
   14002485f:	inc    eax
   140024861:	inc    rdx
   140024864:	cmp    eax,ebx
   140024866:	jb     0x14002485d
   140024868:	mov    al,BYTE PTR [rsp+0x56]
   14002486c:	mov    BYTE PTR [rsp+0x70],0x20
   140024871:	lea    rdi,[rsp+0x56]
   140024876:	jmp    0x1400248a1
   140024878:	movzx  edx,BYTE PTR [rdi+0x1]
   14002487c:	movzx  r8d,al
   140024880:	cmp    r8d,edx
   140024883:	ja     0x14002489b
   140024885:	sub    edx,r8d
   140024888:	mov    rax,r8
   14002488b:	lea    rcx,[rsp+r8*1+0x70]
   140024890:	lea    r8d,[rdx+0x1]
   140024894:	mov    dl,0x20
   140024896:	call   0x14001c730
   14002489b:	add    rdi,0x2
   14002489f:	mov    al,BYTE PTR [rdi]
   1400248a1:	test   al,al
   1400248a3:	jne    0x140024878
   1400248a5:	mov    eax,DWORD PTR [rsi+0xc]
   1400248a8:	and    DWORD PTR [rsp+0x38],0x0
   1400248ad:	lea    r8,[rsp+0x70]
   1400248b2:	mov    DWORD PTR [rsp+0x30],eax
   1400248b6:	mov    eax,DWORD PTR [rsi+0x4]
   1400248b9:	mov    r9d,ebx
   1400248bc:	mov    DWORD PTR [rsp+0x28],eax
   1400248c0:	lea    rax,[rsp+0x370]
   1400248c8:	mov    edx,0x1
   1400248cd:	xor    ecx,ecx
   1400248cf:	mov    QWORD PTR [rsp+0x20],rax
   1400248d4:	call   0x14002976c
   1400248d9:	and    DWORD PTR [rsp+0x40],0x0
   1400248de:	mov    eax,DWORD PTR [rsi+0x4]
   1400248e1:	mov    edx,DWORD PTR [rsi+0xc]
   1400248e4:	mov    DWORD PTR [rsp+0x38],eax
   1400248e8:	lea    rax,[rsp+0x170]
   1400248f0:	mov    DWORD PTR [rsp+0x30],ebx
   1400248f4:	mov    QWORD PTR [rsp+0x28],rax
   1400248f9:	lea    r9,[rsp+0x70]
   1400248fe:	mov    r8d,ebx
   140024901:	xor    ecx,ecx
   140024903:	mov    DWORD PTR [rsp+0x20],ebx
   140024907:	call   0x14001fed8
   14002490c:	and    DWORD PTR [rsp+0x40],0x0
   140024911:	mov    eax,DWORD PTR [rsi+0x4]
   140024914:	mov    edx,DWORD PTR [rsi+0xc]
   140024917:	mov    DWORD PTR [rsp+0x38],eax
   14002491b:	lea    rax,[rsp+0x270]
   140024923:	mov    DWORD PTR [rsp+0x30],ebx
   140024927:	mov    QWORD PTR [rsp+0x28],rax
   14002492c:	lea    r9,[rsp+0x70]
   140024931:	mov    r8d,0x200
   140024937:	xor    ecx,ecx
   140024939:	mov    DWORD PTR [rsp+0x20],ebx
   14002493d:	call   0x14001fed8
   140024942:	lea    r11,[rsp+0x370]
   14002494a:	lea    rcx,[rsi+0x1d]
   14002494e:	xor    edx,edx
   140024950:	test   BYTE PTR [r11],0x1
   140024954:	je     0x140024962
   140024956:	or     BYTE PTR [rcx],0x10
   140024959:	mov    al,BYTE PTR [rsp+rdx*1+0x170]
   140024960:	jmp    0x140024972
   140024962:	test   BYTE PTR [r11],0x2
   140024966:	je     0x14002497a
   140024968:	or     BYTE PTR [rcx],0x20
   14002496b:	mov    al,BYTE PTR [rsp+rdx*1+0x270]
   140024972:	mov    BYTE PTR [rcx+0x100],al
   140024978:	jmp    0x140024981
   14002497a:	mov    BYTE PTR [rcx+0x100],0x0
   140024981:	inc    rcx
   140024984:	inc    rdx
   140024987:	add    r11,0x2
   14002498b:	sub    rbx,0x1
   14002498f:	jne    0x140024950
   140024991:	jmp    0x1400249d2
   140024993:	xor    edx,edx
   140024995:	lea    rcx,[rsi+0x1d]
   140024999:	lea    r8d,[rdx-0x61]
   14002499d:	lea    eax,[r8+0x20]
   1400249a1:	cmp    eax,0x19
   1400249a4:	ja     0x1400249ae
   1400249a6:	or     BYTE PTR [rcx],0x10
   1400249a9:	lea    eax,[rdx+0x20]
   1400249ac:	jmp    0x1400249ba
   1400249ae:	cmp    r8d,0x19
   1400249b2:	ja     0x1400249c2
   1400249b4:	or     BYTE PTR [rcx],0x20
   1400249b7:	lea    eax,[rdx-0x20]
   1400249ba:	mov    BYTE PTR [rcx+0x100],al
   1400249c0:	jmp    0x1400249c9
   1400249c2:	mov    BYTE PTR [rcx+0x100],0x0
   1400249c9:	inc    edx
   1400249cb:	inc    rcx
   1400249ce:	cmp    edx,ebx
   1400249d0:	jb     0x140024999
   1400249d2:	mov    rcx,QWORD PTR [rsp+0x570]
   1400249da:	xor    rcx,rsp
   1400249dd:	call   0x14001c500
   1400249e2:	lea    r11,[rsp+0x580]
   1400249ea:	mov    rbx,QWORD PTR [r11+0x18]
   1400249ee:	mov    rsi,QWORD PTR [r11+0x20]
   1400249f2:	mov    rsp,r11
   1400249f5:	pop    rdi
   1400249f6:	ret    
   1400249f7:	int3   
   1400249f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400249fd:	push   rdi
   1400249fe:	sub    rsp,0x20
   140024a02:	call   0x14002412c
   140024a07:	mov    rdi,rax
   140024a0a:	mov    ecx,DWORD PTR [rax+0xc8]
   140024a10:	test   DWORD PTR [rip+0x24e6a],ecx        # 0x140049880
   140024a16:	je     0x140024a2b
   140024a18:	cmp    QWORD PTR [rax+0xc0],0x0
   140024a20:	je     0x140024a2b
   140024a22:	mov    rbx,QWORD PTR [rax+0xb8]
   140024a29:	jmp    0x140024a99
   140024a2b:	mov    ecx,0xd
   140024a30:	call   0x140028880
   140024a35:	nop
   140024a36:	mov    rbx,QWORD PTR [rdi+0xb8]
   140024a3d:	mov    QWORD PTR [rsp+0x30],rbx
   140024a42:	cmp    rbx,QWORD PTR [rip+0x25417]        # 0x140049e60
   140024a49:	je     0x140024a8f
   140024a4b:	test   rbx,rbx
   140024a4e:	je     0x140024a6c
   140024a50:	lock add DWORD PTR [rbx],0xffffffff
   140024a54:	jne    0x140024a6c
   140024a56:	lea    rax,[rip+0x24fd3]        # 0x140049a30
   140024a5d:	mov    rcx,QWORD PTR [rsp+0x30]
   140024a62:	cmp    rcx,rax
   140024a65:	je     0x140024a6c
   140024a67:	call   0x14001ca48
   140024a6c:	mov    rax,QWORD PTR [rip+0x253ed]        # 0x140049e60
   140024a73:	mov    QWORD PTR [rdi+0xb8],rax
   140024a7a:	mov    rax,QWORD PTR [rip+0x253df]        # 0x140049e60
   140024a81:	mov    QWORD PTR [rsp+0x30],rax
   140024a86:	lock add DWORD PTR [rax],0x1
   140024a8a:	mov    rbx,QWORD PTR [rsp+0x30]
   140024a8f:	mov    ecx,0xd
   140024a94:	call   0x140028780
   140024a99:	test   rbx,rbx
   140024a9c:	jne    0x140024aa6
   140024a9e:	lea    ecx,[rbx+0x20]
   140024aa1:	call   0x140024398
   140024aa6:	mov    rax,rbx
   140024aa9:	mov    rbx,QWORD PTR [rsp+0x38]
   140024aae:	add    rsp,0x20
   140024ab2:	pop    rdi
   140024ab3:	ret    
   140024ab4:	rex push rbx
   140024ab6:	sub    rsp,0x40
   140024aba:	mov    ebx,ecx
   140024abc:	lea    rcx,[rsp+0x20]
   140024ac1:	xor    edx,edx
   140024ac3:	call   0x14001cf30
   140024ac8:	and    DWORD PTR [rip+0x27659],0x0        # 0x14004c128
   140024acf:	cmp    ebx,0xfffffffe
   140024ad2:	jne    0x140024af9
   140024ad4:	mov    DWORD PTR [rip+0x2764a],0x1        # 0x14004c128
   140024ade:	call   QWORD PTR [rip+0x15834]        # 0x14003a318
   140024ae4:	cmp    BYTE PTR [rsp+0x38],0x0
   140024ae9:	je     0x140024b3e
   140024aeb:	mov    rcx,QWORD PTR [rsp+0x30]
   140024af0:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024af7:	jmp    0x140024b3e
   140024af9:	cmp    ebx,0xfffffffd
   140024afc:	jne    0x140024b10
   140024afe:	mov    DWORD PTR [rip+0x27620],0x1        # 0x14004c128
   140024b08:	call   QWORD PTR [rip+0x1568a]        # 0x14003a198
   140024b0e:	jmp    0x140024ae4
   140024b10:	cmp    ebx,0xfffffffc
   140024b13:	jne    0x140024b29
   140024b15:	mov    rax,QWORD PTR [rsp+0x20]
   140024b1a:	mov    DWORD PTR [rip+0x27604],0x1        # 0x14004c128
   140024b24:	mov    eax,DWORD PTR [rax+0x4]
   140024b27:	jmp    0x140024ae4
   140024b29:	cmp    BYTE PTR [rsp+0x38],0x0
   140024b2e:	je     0x140024b3c
   140024b30:	mov    rax,QWORD PTR [rsp+0x30]
   140024b35:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140024b3c:	mov    eax,ebx
   140024b3e:	add    rsp,0x40
   140024b42:	pop    rbx
   140024b43:	ret    
   140024b44:	mov    QWORD PTR [rsp+0x18],rbx
   140024b49:	push   rbp
   140024b4a:	push   rsi
   140024b4b:	push   rdi
   140024b4c:	push   r12
   140024b4e:	push   r13
   140024b50:	sub    rsp,0x40
   140024b54:	mov    rax,QWORD PTR [rip+0x24905]        # 0x140049460
   140024b5b:	xor    rax,rsp
   140024b5e:	mov    QWORD PTR [rsp+0x38],rax
   140024b63:	mov    rsi,rdx
   140024b66:	call   0x140024ab4
   140024b6b:	xor    ebx,ebx
   140024b6d:	mov    edi,eax
   140024b6f:	cmp    eax,ebx
   140024b71:	jne    0x140024b80
   140024b73:	mov    rcx,rsi
   140024b76:	call   0x140024780
   140024b7b:	jmp    0x140024d98
   140024b80:	lea    r13,[rip+0x252e9]        # 0x140049e70
   140024b87:	mov    ecx,ebx
   140024b89:	mov    rbp,rbx
   140024b8c:	mov    rax,r13
   140024b8f:	mov    r12d,0x1
   140024b95:	cmp    DWORD PTR [rax],edi
   140024b97:	je     0x140024cc4
   140024b9d:	add    ecx,r12d
   140024ba0:	add    rbp,r12
   140024ba3:	add    rax,0x30
   140024ba7:	cmp    ecx,0x5
   140024baa:	jb     0x140024b95
   140024bac:	cmp    edi,0xfde8
   140024bb2:	je     0x140024cbc
   140024bb8:	cmp    edi,0xfde9
   140024bbe:	je     0x140024cbc
   140024bc4:	movzx  ecx,di
   140024bc7:	call   QWORD PTR [rip+0x15753]        # 0x14003a320
   140024bcd:	cmp    eax,ebx
   140024bcf:	je     0x140024cbc
   140024bd5:	lea    rdx,[rsp+0x20]
   140024bda:	mov    ecx,edi
   140024bdc:	call   QWORD PTR [rip+0x156c6]        # 0x14003a2a8
   140024be2:	cmp    eax,ebx
   140024be4:	je     0x140024cb0
   140024bea:	lea    rcx,[rsi+0x1c]
   140024bee:	xor    edx,edx
   140024bf0:	mov    r8d,0x101
   140024bf6:	call   0x14001c730
   140024bfb:	mov    DWORD PTR [rsi+0x4],edi
   140024bfe:	mov    DWORD PTR [rsi+0xc],ebx
   140024c01:	cmp    DWORD PTR [rsp+0x20],r12d
   140024c06:	jbe    0x140024c99
   140024c0c:	lea    rax,[rsp+0x26]
   140024c11:	cmp    BYTE PTR [rsp+0x26],bl
   140024c15:	je     0x140024c44
   140024c17:	cmp    BYTE PTR [rax+0x1],bl
   140024c1a:	je     0x140024c44
   140024c1c:	movzx  edi,BYTE PTR [rax]
   140024c1f:	movzx  ecx,BYTE PTR [rax+0x1]
   140024c23:	cmp    edi,ecx
   140024c25:	ja     0x140024c3c
   140024c27:	sub    ecx,edi
   140024c29:	lea    rdx,[rdi+rsi*1+0x1d]
   140024c2e:	add    ecx,r12d
   140024c31:	or     BYTE PTR [rdx],0x4
   140024c34:	add    rdx,r12
   140024c37:	sub    rcx,r12
   140024c3a:	jne    0x140024c31
   140024c3c:	add    rax,0x2
   140024c40:	cmp    BYTE PTR [rax],bl
   140024c42:	jne    0x140024c17
   140024c44:	lea    rax,[rsi+0x1e]
   140024c48:	mov    ecx,0xfe
   140024c4d:	or     BYTE PTR [rax],0x8
   140024c50:	add    rax,r12
   140024c53:	sub    rcx,r12
   140024c56:	jne    0x140024c4d
   140024c58:	mov    ecx,DWORD PTR [rsi+0x4]
   140024c5b:	sub    ecx,0x3a4
   140024c61:	je     0x140024c8b
   140024c63:	sub    ecx,0x4
   140024c66:	je     0x140024c84
   140024c68:	sub    ecx,0xd
   140024c6b:	je     0x140024c7d
   140024c6d:	cmp    ecx,r12d
   140024c70:	je     0x140024c76
   140024c72:	mov    eax,ebx
   140024c74:	jmp    0x140024c90
   140024c76:	mov    eax,0x404
   140024c7b:	jmp    0x140024c90
   140024c7d:	mov    eax,0x412
   140024c82:	jmp    0x140024c90
   140024c84:	mov    eax,0x804
   140024c89:	jmp    0x140024c90
   140024c8b:	mov    eax,0x411
   140024c90:	mov    DWORD PTR [rsi+0xc],eax
   140024c93:	mov    DWORD PTR [rsi+0x8],r12d
   140024c97:	jmp    0x140024c9c
   140024c99:	mov    DWORD PTR [rsi+0x8],ebx
   140024c9c:	lea    rdi,[rsi+0x10]
   140024ca0:	movzx  eax,bx
   140024ca3:	mov    ecx,0x6
   140024ca8:	rep stos WORD PTR es:[rdi],ax
   140024cab:	jmp    0x140024d90
   140024cb0:	cmp    DWORD PTR [rip+0x27472],ebx        # 0x14004c128
   140024cb6:	jne    0x140024b73
   140024cbc:	or     eax,0xffffffff
   140024cbf:	jmp    0x140024d9a
   140024cc4:	lea    rcx,[rsi+0x1c]
   140024cc8:	xor    edx,edx
   140024cca:	mov    r8d,0x101
   140024cd0:	call   0x14001c730
   140024cd5:	lea    rbp,[rbp+rbp*2+0x0]
   140024cda:	lea    r11,[rip+0x25187]        # 0x140049e68
   140024ce1:	add    rbp,rbp
   140024ce4:	mov    r10d,0x4
   140024cea:	lea    r8,[r13+rbp*8+0x10]
   140024cef:	mov    rcx,r8
   140024cf2:	cmp    BYTE PTR [r8],bl
   140024cf5:	je     0x140024d28
   140024cf7:	cmp    BYTE PTR [rcx+0x1],bl
   140024cfa:	je     0x140024d28
   140024cfc:	movzx  edx,BYTE PTR [rcx]
   140024cff:	movzx  eax,BYTE PTR [rcx+0x1]
   140024d03:	cmp    edx,eax
   140024d05:	ja     0x140024d20
   140024d07:	lea    r9,[rdx+rsi*1+0x1d]
   140024d0c:	mov    al,BYTE PTR [r11]
   140024d0f:	add    edx,r12d
   140024d12:	or     BYTE PTR [r9],al
   140024d15:	movzx  eax,BYTE PTR [rcx+0x1]
   140024d19:	add    r9,r12
   140024d1c:	cmp    edx,eax
   140024d1e:	jbe    0x140024d0c
   140024d20:	add    rcx,0x2
   140024d24:	cmp    BYTE PTR [rcx],bl
   140024d26:	jne    0x140024cf7
   140024d28:	add    r8,0x8
   140024d2c:	add    r11,r12
   140024d2f:	sub    r10,r12
   140024d32:	jne    0x140024cef
   140024d34:	mov    DWORD PTR [rsi+0x4],edi
   140024d37:	sub    edi,0x3a4
   140024d3d:	mov    DWORD PTR [rsi+0x8],r12d
   140024d41:	je     0x140024d67
   140024d43:	sub    edi,0x4
   140024d46:	je     0x140024d60
   140024d48:	sub    edi,0xd
   140024d4b:	je     0x140024d59
   140024d4d:	cmp    edi,r12d
   140024d50:	jne    0x140024d6c
   140024d52:	mov    ebx,0x404
   140024d57:	jmp    0x140024d6c
   140024d59:	mov    ebx,0x412
   140024d5e:	jmp    0x140024d6c
   140024d60:	mov    ebx,0x804
   140024d65:	jmp    0x140024d6c
   140024d67:	mov    ebx,0x411
   140024d6c:	mov    DWORD PTR [rsi+0xc],ebx
   140024d6f:	lea    rdx,[rsi+0x10]
   140024d73:	lea    rdi,[r13+rbp*8+0x4]
   140024d78:	mov    ecx,0x6
   140024d7d:	movzx  eax,WORD PTR [rdi]
   140024d80:	add    rdi,0x2
   140024d84:	mov    WORD PTR [rdx],ax
   140024d87:	add    rdx,0x2
   140024d8b:	sub    rcx,r12
   140024d8e:	jne    0x140024d7d
   140024d90:	mov    rcx,rsi
   140024d93:	call   0x140024814
   140024d98:	xor    eax,eax
   140024d9a:	mov    rcx,QWORD PTR [rsp+0x38]
   140024d9f:	xor    rcx,rsp
   140024da2:	call   0x14001c500
   140024da7:	mov    rbx,QWORD PTR [rsp+0x80]
   140024daf:	add    rsp,0x40
   140024db3:	pop    r13
   140024db5:	pop    r12
   140024db7:	pop    rdi
   140024db8:	pop    rsi
   140024db9:	pop    rbp
   140024dba:	ret    
   140024dbb:	int3   
   140024dbc:	mov    rax,rsp
   140024dbf:	mov    QWORD PTR [rax+0x8],rbx
   140024dc3:	mov    QWORD PTR [rax+0x10],rsi
   140024dc7:	mov    QWORD PTR [rax+0x18],rdi
   140024dcb:	mov    QWORD PTR [rax+0x20],r12
   140024dcf:	push   r13
   140024dd1:	sub    rsp,0x30
   140024dd5:	mov    edi,ecx
   140024dd7:	or     r13d,0xffffffff
   140024ddb:	call   0x14002412c
   140024de0:	mov    rsi,rax
   140024de3:	call   0x1400249f8
   140024de8:	mov    rbx,QWORD PTR [rsi+0xb8]
   140024def:	mov    ecx,edi
   140024df1:	call   0x140024ab4
   140024df6:	mov    r12d,eax
   140024df9:	cmp    eax,DWORD PTR [rbx+0x4]
   140024dfc:	je     0x140024f91
   140024e02:	mov    ecx,0x220
   140024e07:	call   0x1400208e4
   140024e0c:	mov    rbx,rax
   140024e0f:	xor    edi,edi
   140024e11:	cmp    rax,rdi
   140024e14:	je     0x140024f96
   140024e1a:	mov    rdx,QWORD PTR [rsi+0xb8]
   140024e21:	mov    rcx,rax
   140024e24:	mov    r8d,0x220
   140024e2a:	call   0x1400205b0
   140024e2f:	mov    DWORD PTR [rbx],edi
   140024e31:	mov    rdx,rbx
   140024e34:	mov    ecx,r12d
   140024e37:	call   0x140024b44
   140024e3c:	mov    r13d,eax
   140024e3f:	cmp    eax,edi
   140024e41:	jne    0x140024f6b
   140024e47:	mov    rcx,QWORD PTR [rsi+0xb8]
   140024e4e:	lock add DWORD PTR [rcx],0xffffffff
   140024e52:	jne    0x140024e6e
   140024e54:	mov    rcx,QWORD PTR [rsi+0xb8]
   140024e5b:	lea    r12,[rip+0x24bce]        # 0x140049a30
   140024e62:	cmp    rcx,r12
   140024e65:	je     0x140024e75
   140024e67:	call   0x14001ca48
   140024e6c:	jmp    0x140024e75
   140024e6e:	lea    r12,[rip+0x24bbb]        # 0x140049a30
   140024e75:	mov    QWORD PTR [rsi+0xb8],rbx
   140024e7c:	lock add DWORD PTR [rbx],0x1
   140024e80:	test   BYTE PTR [rsi+0xc8],0x2
   140024e87:	jne    0x140024f96
   140024e8d:	test   BYTE PTR [rip+0x249ec],0x1        # 0x140049880
   140024e94:	jne    0x140024f96
   140024e9a:	mov    ecx,0xd
   140024e9f:	call   0x140028880
   140024ea4:	nop
   140024ea5:	mov    eax,DWORD PTR [rbx+0x4]
   140024ea8:	mov    DWORD PTR [rip+0x2728e],eax        # 0x14004c13c
   140024eae:	mov    eax,DWORD PTR [rbx+0x8]
   140024eb1:	mov    DWORD PTR [rip+0x27289],eax        # 0x14004c140
   140024eb7:	mov    eax,DWORD PTR [rbx+0xc]
   140024eba:	mov    DWORD PTR [rip+0x27284],eax        # 0x14004c144
   140024ec0:	mov    edx,edi
   140024ec2:	mov    DWORD PTR [rsp+0x20],edx
   140024ec6:	lea    r8,[rip+0xfffffffffffdb133]        # 0x140000000
   140024ecd:	cmp    edx,0x5
   140024ed0:	jge    0x140024eeb
   140024ed2:	movsxd rcx,edx
   140024ed5:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   140024eda:	mov    WORD PTR [r8+rcx*2+0x4c130],ax
   140024ee3:	inc    edx
   140024ee5:	mov    DWORD PTR [rsp+0x20],edx
   140024ee9:	jmp    0x140024ecd
   140024eeb:	mov    edx,edi
   140024eed:	mov    DWORD PTR [rsp+0x20],edx
   140024ef1:	cmp    edx,0x101
   140024ef7:	jge    0x140024f10
   140024ef9:	movsxd rcx,edx
   140024efc:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   140024f00:	mov    BYTE PTR [rcx+r8*1+0x49c50],al
   140024f08:	inc    edx
   140024f0a:	mov    DWORD PTR [rsp+0x20],edx
   140024f0e:	jmp    0x140024ef1
   140024f10:	mov    DWORD PTR [rsp+0x20],edi
   140024f14:	cmp    edi,0x100
   140024f1a:	jge    0x140024f36
   140024f1c:	movsxd rcx,edi
   140024f1f:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   140024f26:	mov    BYTE PTR [rcx+r8*1+0x49d60],al
   140024f2e:	inc    edi
   140024f30:	mov    DWORD PTR [rsp+0x20],edi
   140024f34:	jmp    0x140024f14
   140024f36:	mov    rax,QWORD PTR [rip+0x24f23]        # 0x140049e60
   140024f3d:	lock add DWORD PTR [rax],0xffffffff
   140024f41:	jne    0x140024f54
   140024f43:	mov    rcx,QWORD PTR [rip+0x24f16]        # 0x140049e60
   140024f4a:	cmp    rcx,r12
   140024f4d:	je     0x140024f54
   140024f4f:	call   0x14001ca48
   140024f54:	mov    QWORD PTR [rip+0x24f05],rbx        # 0x140049e60
   140024f5b:	lock add DWORD PTR [rbx],0x1
   140024f5f:	mov    ecx,0xd
   140024f64:	call   0x140028780
   140024f69:	jmp    0x140024f96
   140024f6b:	cmp    eax,0xffffffff
   140024f6e:	jne    0x140024f96
   140024f70:	lea    r12,[rip+0x24ab9]        # 0x140049a30
   140024f77:	cmp    rbx,r12
   140024f7a:	je     0x140024f84
   140024f7c:	mov    rcx,rbx
   140024f7f:	call   0x14001ca48
   140024f84:	call   0x140020aa4
   140024f89:	mov    DWORD PTR [rax],0x16
   140024f8f:	jmp    0x140024f96
   140024f91:	xor    edi,edi
   140024f93:	mov    r13d,edi
   140024f96:	mov    eax,r13d
   140024f99:	mov    rbx,QWORD PTR [rsp+0x40]
   140024f9e:	mov    rsi,QWORD PTR [rsp+0x48]
   140024fa3:	mov    rdi,QWORD PTR [rsp+0x50]
   140024fa8:	mov    r12,QWORD PTR [rsp+0x58]
   140024fad:	add    rsp,0x30
   140024fb1:	pop    r13
   140024fb3:	ret    
   140024fb4:	sub    rsp,0x28
   140024fb8:	cmp    DWORD PTR [rip+0x28579],0x0        # 0x14004d538
   140024fbf:	jne    0x140024fd5
   140024fc1:	mov    ecx,0xfffffffd
   140024fc6:	call   0x140024dbc
   140024fcb:	mov    DWORD PTR [rip+0x28563],0x1        # 0x14004d538
   140024fd5:	xor    eax,eax
   140024fd7:	add    rsp,0x28
   140024fdb:	ret    
   140024fdc:	mov    WORD PTR [rsp+0x8],cx
   140024fe1:	sub    rsp,0x68
   140024fe5:	mov    eax,0xffff
   140024fea:	cmp    cx,ax
   140024fed:	je     0x1400250d1
   140024ff3:	lea    rcx,[rsp+0x40]
   140024ff8:	call   0x14001cf30
   140024ffd:	mov    r11,QWORD PTR [rsp+0x40]
   140025002:	mov    edx,DWORD PTR [r11+0x14]
   140025006:	test   edx,edx
   140025008:	jne    0x140025037
   14002500a:	movzx  edx,WORD PTR [rsp+0x70]
   14002500f:	lea    eax,[rdx-0x41]
   140025012:	cmp    ax,0x19
   140025016:	ja     0x14002501c
   140025018:	add    dx,0x20
   14002501c:	cmp    BYTE PTR [rsp+0x58],0x0
   140025021:	je     0x14002502f
   140025023:	mov    rcx,QWORD PTR [rsp+0x50]
   140025028:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002502f:	mov    ax,dx
   140025032:	jmp    0x1400250d1
   140025037:	movzx  ecx,WORD PTR [rsp+0x70]
   14002503c:	mov    r8d,0x100
   140025042:	cmp    cx,r8w
   140025046:	jae    0x140025079
   140025048:	lea    r8,[rsp+0x40]
   14002504d:	mov    edx,0x1
   140025052:	call   0x14002ca78
   140025057:	test   eax,eax
   140025059:	jne    0x140025062
   14002505b:	movzx  eax,WORD PTR [rsp+0x70]
   140025060:	jmp    0x1400250be
   140025062:	mov    rax,QWORD PTR [rsp+0x40]
   140025067:	movzx  edx,WORD PTR [rsp+0x70]
   14002506c:	mov    rcx,QWORD PTR [rax+0x148]
   140025073:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140025077:	jmp    0x1400250be
   140025079:	mov    eax,DWORD PTR [r11+0x4]
   14002507d:	lea    r9,[rsp+0x70]
   140025082:	lea    rcx,[rsp+0x40]
   140025087:	mov    DWORD PTR [rsp+0x38],eax
   14002508b:	lea    rax,[rsp+0x80]
   140025093:	mov    DWORD PTR [rsp+0x30],0x1
   14002509b:	mov    QWORD PTR [rsp+0x28],rax
   1400250a0:	mov    DWORD PTR [rsp+0x20],0x1
   1400250a8:	call   0x140020e5c
   1400250ad:	test   eax,eax
   1400250af:	movzx  eax,WORD PTR [rsp+0x70]
   1400250b4:	je     0x1400250be
   1400250b6:	movzx  eax,WORD PTR [rsp+0x80]
   1400250be:	cmp    BYTE PTR [rsp+0x58],0x0
   1400250c3:	je     0x1400250d1
   1400250c5:	mov    rcx,QWORD PTR [rsp+0x50]
   1400250ca:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400250d1:	add    rsp,0x68
   1400250d5:	ret    
   1400250d6:	int3   
   1400250d7:	int3   
   1400250d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400250dd:	mov    QWORD PTR [rsp+0x18],rdi
   1400250e2:	mov    QWORD PTR [rsp+0x20],r13
   1400250e7:	push   r14
   1400250e9:	sub    rsp,0x30
   1400250ed:	lea    r14,[rip+0x24e6c]        # 0x140049f60
   1400250f4:	mov    edi,ecx
   1400250f6:	xor    ebx,ebx
   1400250f8:	mov    rax,r14
   1400250fb:	cmp    ecx,DWORD PTR [rax]
   1400250fd:	je     0x14002510a
   1400250ff:	inc    ebx
   140025101:	add    rax,0x10
   140025105:	cmp    ebx,0x17
   140025108:	jb     0x1400250fb
   14002510a:	cmp    ebx,0x17
   14002510d:	jae    0x1400252e7
   140025113:	mov    ecx,0x3
   140025118:	call   0x14002cd28
   14002511d:	cmp    eax,0x1
   140025120:	je     0x1400252a2
   140025126:	mov    ecx,0x3
   14002512b:	call   0x14002cd28
   140025130:	test   eax,eax
   140025132:	jne    0x140025141
   140025134:	cmp    DWORD PTR [rip+0x24195],0x1        # 0x1400492d0
   14002513b:	je     0x1400252a2
   140025141:	cmp    edi,0xfc
   140025147:	je     0x1400252e7
   14002514d:	lea    rdi,[rip+0x26ffc]        # 0x14004c150
   140025154:	mov    r13d,0x314
   14002515a:	lea    r8,[rip+0x16bef]        # 0x14003bd50
   140025161:	mov    rcx,rdi
   140025164:	mov    rdx,r13
   140025167:	call   0x140023db4
   14002516c:	test   eax,eax
   14002516e:	je     0x140025185
   140025170:	and    QWORD PTR [rsp+0x20],0x0
   140025176:	xor    r9d,r9d
   140025179:	xor    r8d,r8d
   14002517c:	xor    edx,edx
   14002517e:	xor    ecx,ecx
   140025180:	call   0x14001cbc8
   140025185:	lea    rdx,[rip+0x26fdd]        # 0x14004c169
   14002518c:	mov    r8d,0x104
   140025192:	xor    ecx,ecx
   140025194:	mov    BYTE PTR [rip+0x270d2],0x0        # 0x14004c26d
   14002519b:	call   QWORD PTR [rip+0x15197]        # 0x14003a338
   1400251a1:	test   eax,eax
   1400251a3:	jne    0x1400251d6
   1400251a5:	lea    r8,[rip+0x16b8c]        # 0x14003bd38
   1400251ac:	lea    rcx,[rip+0x26fb6]        # 0x14004c169
   1400251b3:	mov    edx,0x2fb
   1400251b8:	call   0x140023db4
   1400251bd:	test   eax,eax
   1400251bf:	je     0x1400251d6
   1400251c1:	and    QWORD PTR [rsp+0x20],0x0
   1400251c7:	xor    r9d,r9d
   1400251ca:	xor    r8d,r8d
   1400251cd:	xor    edx,edx
   1400251cf:	xor    ecx,ecx
   1400251d1:	call   0x14001cbc8
   1400251d6:	lea    rcx,[rip+0x26f8c]        # 0x14004c169
   1400251dd:	call   0x14001c650
   1400251e2:	inc    rax
   1400251e5:	cmp    rax,0x3c
   1400251e9:	jbe    0x140025231
   1400251eb:	lea    rcx,[rip+0x26f77]        # 0x14004c169
   1400251f2:	call   0x14001c650
   1400251f7:	lea    rdx,[rip+0x27266]        # 0x14004c464
   1400251fe:	lea    r8,[rip+0x16b2f]        # 0x14003bd34
   140025205:	lea    rcx,[rax+rdi*1-0x22]
   14002520a:	mov    r9d,0x3
   140025210:	sub    rdx,rcx
   140025213:	call   0x1400289e4
   140025218:	test   eax,eax
   14002521a:	je     0x140025231
   14002521c:	and    QWORD PTR [rsp+0x20],0x0
   140025222:	xor    r9d,r9d
   140025225:	xor    r8d,r8d
   140025228:	xor    edx,edx
   14002522a:	xor    ecx,ecx
   14002522c:	call   0x14001cbc8
   140025231:	lea    r8,[rip+0x16af8]        # 0x14003bd30
   140025238:	mov    rdx,r13
   14002523b:	mov    rcx,rdi
   14002523e:	call   0x1400288c4
   140025243:	test   eax,eax
   140025245:	je     0x14002525c
   140025247:	and    QWORD PTR [rsp+0x20],0x0
   14002524d:	xor    r9d,r9d
   140025250:	xor    r8d,r8d
   140025253:	xor    edx,edx
   140025255:	xor    ecx,ecx
   140025257:	call   0x14001cbc8
   14002525c:	movsxd r8,ebx
   14002525f:	mov    rdx,r13
   140025262:	mov    rcx,rdi
   140025265:	add    r8,r8
   140025268:	mov    r8,QWORD PTR [r14+r8*8+0x8]
   14002526d:	call   0x1400288c4
   140025272:	test   eax,eax
   140025274:	je     0x14002528b
   140025276:	and    QWORD PTR [rsp+0x20],0x0
   14002527c:	xor    r9d,r9d
   14002527f:	xor    r8d,r8d
   140025282:	xor    edx,edx
   140025284:	xor    ecx,ecx
   140025286:	call   0x14001cbc8
   14002528b:	lea    rdx,[rip+0x16a76]        # 0x14003bd08
   140025292:	mov    r8d,0x12010
   140025298:	mov    rcx,rdi
   14002529b:	call   0x14002cb34
   1400252a0:	jmp    0x1400252e7
   1400252a2:	mov    ecx,0xfffffff4
   1400252a7:	call   QWORD PTR [rip+0x15083]        # 0x14003a330
   1400252ad:	mov    rdi,rax
   1400252b0:	test   rax,rax
   1400252b3:	je     0x1400252e7
   1400252b5:	cmp    rax,0xffffffffffffffff
   1400252b9:	je     0x1400252e7
   1400252bb:	movsxd rbx,ebx
   1400252be:	add    rbx,rbx
   1400252c1:	mov    rcx,QWORD PTR [r14+rbx*8+0x8]
   1400252c6:	call   0x14001c650
   1400252cb:	mov    rdx,QWORD PTR [r14+rbx*8+0x8]
   1400252d0:	and    QWORD PTR [rsp+0x20],0x0
   1400252d6:	lea    r9,[rsp+0x48]
   1400252db:	mov    r8,rax
   1400252de:	mov    rcx,rdi
   1400252e1:	call   QWORD PTR [rip+0x15041]        # 0x14003a328
   1400252e7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400252ec:	mov    rdi,QWORD PTR [rsp+0x50]
   1400252f1:	mov    r13,QWORD PTR [rsp+0x58]
   1400252f6:	add    rsp,0x30
   1400252fa:	pop    r14
   1400252fc:	ret    
   1400252fd:	int3   
   1400252fe:	int3   
   1400252ff:	int3   
   140025300:	sub    rsp,0x28
   140025304:	mov    ecx,0x3
   140025309:	call   0x14002cd28
   14002530e:	cmp    eax,0x1
   140025311:	je     0x14002532a
   140025313:	mov    ecx,0x3
   140025318:	call   0x14002cd28
   14002531d:	test   eax,eax
   14002531f:	jne    0x14002533e
   140025321:	cmp    DWORD PTR [rip+0x23fa8],0x1        # 0x1400492d0
   140025328:	jne    0x14002533e
   14002532a:	mov    ecx,0xfc
   14002532f:	call   0x1400250d8
   140025334:	mov    ecx,0xff
   140025339:	call   0x1400250d8
   14002533e:	add    rsp,0x28
   140025342:	ret    
   140025343:	int3   
   140025344:	rex push rbp
   140025346:	push   rsi
   140025347:	push   rdi
   140025348:	push   r12
   14002534a:	push   r13
   14002534c:	push   r14
   14002534e:	push   r15
   140025350:	sub    rsp,0xc0
   140025357:	mov    rax,QWORD PTR [rip+0x24102]        # 0x140049460
   14002535e:	xor    rax,rsp
   140025361:	mov    QWORD PTR [rsp+0xb0],rax
   140025369:	mov    rbp,QWORD PTR [rsp+0x120]
   140025371:	mov    r15d,r9d
   140025374:	mov    r14d,r8d
   140025377:	mov    r13,rcx
   14002537a:	cmp    edx,0x1
   14002537d:	jne    0x1400254a0
   140025383:	xor    esi,esi
   140025385:	lea    r9,[rsp+0x30]
   14002538a:	mov    r8d,r15d
   14002538d:	and    DWORD PTR [rsp+0x28],esi
   140025391:	mov    edx,r14d
   140025394:	lea    rdi,[rsp+0x30]
   140025399:	mov    DWORD PTR [rsp+0x20],0x80
   1400253a1:	call   0x14002cfb0
   1400253a6:	mov    r12d,eax
   1400253a9:	test   eax,eax
   1400253ab:	jne    0x140025416
   1400253ad:	call   QWORD PTR [rip+0x14d15]        # 0x14003a0c8
   1400253b3:	cmp    eax,0x7a
   1400253b6:	jne    0x14002543e
   1400253bc:	and    DWORD PTR [rsp+0x28],esi
   1400253c0:	and    DWORD PTR [rsp+0x20],esi
   1400253c4:	xor    r9d,r9d
   1400253c7:	mov    r8d,r15d
   1400253ca:	mov    edx,r14d
   1400253cd:	mov    rcx,r13
   1400253d0:	call   0x14002cfb0
   1400253d5:	movsxd r12,eax
   1400253d8:	test   eax,eax
   1400253da:	je     0x14002543e
   1400253dc:	mov    esi,0x1
   1400253e1:	mov    rcx,r12
   1400253e4:	mov    rdx,rsi
   1400253e7:	call   0x140020950
   1400253ec:	mov    rdi,rax
   1400253ef:	test   rax,rax
   1400253f2:	je     0x14002543e
   1400253f4:	and    DWORD PTR [rsp+0x28],0x0
   1400253f9:	mov    r9,rax
   1400253fc:	mov    r8d,r15d
   1400253ff:	mov    edx,r14d
   140025402:	mov    rcx,r13
   140025405:	mov    DWORD PTR [rsp+0x20],r12d
   14002540a:	call   0x14002cfb0
   14002540f:	mov    r12d,eax
   140025412:	test   eax,eax
   140025414:	je     0x140025436
   140025416:	movsxd r13,r12d
   140025419:	mov    edx,0x1
   14002541e:	mov    rcx,r13
   140025421:	call   0x140020950
   140025426:	mov    rcx,rax
   140025429:	mov    QWORD PTR [rbp+0x0],rax
   14002542d:	test   rax,rax
   140025430:	jne    0x140025464
   140025432:	test   esi,esi
   140025434:	je     0x14002543e
   140025436:	mov    rcx,rdi
   140025439:	call   0x14001ca48
   14002543e:	or     eax,0xffffffff
   140025441:	mov    rcx,QWORD PTR [rsp+0xb0]
   140025449:	xor    rcx,rsp
   14002544c:	call   0x14001c500
   140025451:	add    rsp,0xc0
   140025458:	pop    r15
   14002545a:	pop    r14
   14002545c:	pop    r13
   14002545e:	pop    r12
   140025460:	pop    rdi
   140025461:	pop    rsi
   140025462:	pop    rbp
   140025463:	ret    
   140025464:	lea    eax,[r12-0x1]
   140025469:	mov    r8,rdi
   14002546c:	mov    rdx,r13
   14002546f:	movsxd r9,eax
   140025472:	call   0x1400289e4
   140025477:	test   eax,eax
   140025479:	je     0x140025490
   14002547b:	and    QWORD PTR [rsp+0x20],0x0
   140025481:	xor    r9d,r9d
   140025484:	xor    r8d,r8d
   140025487:	xor    edx,edx
   140025489:	xor    ecx,ecx
   14002548b:	call   0x14001cbc8
   140025490:	test   esi,esi
   140025492:	je     0x14002549c
   140025494:	mov    rcx,rdi
   140025497:	call   0x14001ca48
   14002549c:	xor    eax,eax
   14002549e:	jmp    0x140025441
   1400254a0:	test   edx,edx
   1400254a2:	jne    0x14002543e
   1400254a4:	and    DWORD PTR [rsp+0x28],edx
   1400254a8:	lea    rdi,[rip+0x26fb9]        # 0x14004c468
   1400254af:	mov    r8d,r15d
   1400254b2:	mov    edx,r14d
   1400254b5:	mov    r9,rdi
   1400254b8:	mov    DWORD PTR [rsp+0x20],0x4
   1400254c0:	call   0x14002cd78
   1400254c5:	test   eax,eax
   1400254c7:	je     0x14002543e
   1400254cd:	mov    BYTE PTR [rbp+0x0],0x0
   1400254d1:	movzx  esi,BYTE PTR [rdi]
   1400254d4:	mov    ecx,esi
   1400254d6:	call   0x14001ffac
   1400254db:	test   eax,eax
   1400254dd:	je     0x14002549c
   1400254df:	mov    cl,BYTE PTR [rbp+0x0]
   1400254e2:	add    rdi,0x2
   1400254e6:	mov    al,cl
   1400254e8:	shl    al,0x2
   1400254eb:	add    cl,al
   1400254ed:	lea    rax,[rip+0x26f7c]        # 0x14004c470
   1400254f4:	add    cl,cl
   1400254f6:	add    cl,sil
   1400254f9:	sub    cl,0x30
   1400254fc:	cmp    rdi,rax
   1400254ff:	mov    BYTE PTR [rbp+0x0],cl
   140025502:	jl     0x1400254d1
   140025504:	jmp    0x14002549c
   140025506:	int3   
   140025507:	int3   
   140025508:	mov    QWORD PTR [rip+0x26f61],rcx        # 0x14004c470
   14002550f:	ret    
   140025510:	mov    QWORD PTR [rsp+0x8],rbx
   140025515:	mov    QWORD PTR [rsp+0x10],rdx
   14002551a:	push   rbp
   14002551b:	push   rsi
   14002551c:	push   rdi
   14002551d:	push   r12
   14002551f:	push   r13
   140025521:	push   r14
   140025523:	push   r15
   140025525:	sub    rsp,0x50
   140025529:	mov    r14,rdx
   14002552c:	mov    rdx,rcx
   14002552f:	lea    rcx,[rsp+0x30]
   140025534:	mov    r12d,r9d
   140025537:	mov    r13,r8
   14002553a:	call   0x14001cf30
   14002553f:	xor    r15d,r15d
   140025542:	cmp    r13,r15
   140025545:	je     0x14002554b
   140025547:	mov    QWORD PTR [r13+0x0],r14
   14002554b:	cmp    r14,r15
   14002554e:	jne    0x140025589
   140025550:	call   0x140020aa4
   140025555:	xor    r9d,r9d
   140025558:	xor    r8d,r8d
   14002555b:	xor    edx,edx
   14002555d:	xor    ecx,ecx
   14002555f:	mov    QWORD PTR [rsp+0x20],r15
   140025564:	mov    DWORD PTR [rax],0x16
   14002556a:	call   0x14001ccf0
   14002556f:	cmp    BYTE PTR [rsp+0x48],r15b
   140025574:	je     0x140025582
   140025576:	mov    rax,QWORD PTR [rsp+0x40]
   14002557b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140025582:	xor    eax,eax
   140025584:	jmp    0x140025740
   140025589:	cmp    r12d,r15d
   14002558c:	je     0x14002559a
   14002558e:	cmp    r12d,0x2
   140025592:	jl     0x140025550
   140025594:	cmp    r12d,0x24
   140025598:	jg     0x140025550
   14002559a:	movzx  esi,WORD PTR [r14]
   14002559e:	mov    edi,r15d
   1400255a1:	lea    rbx,[r14+0x2]
   1400255a5:	mov    ebp,0x8
   1400255aa:	jmp    0x1400255b3
   1400255ac:	mov    si,WORD PTR [rbx]
   1400255af:	add    rbx,0x2
   1400255b3:	lea    r8,[rsp+0x30]
   1400255b8:	mov    edx,ebp
   1400255ba:	movzx  ecx,si
   1400255bd:	call   0x14002ca78
   1400255c2:	cmp    eax,r15d
   1400255c5:	jne    0x1400255ac
   1400255c7:	mov    ebp,DWORD PTR [rsp+0xb0]
   1400255ce:	cmp    si,0x2d
   1400255d2:	jne    0x1400255d9
   1400255d4:	or     ebp,0x2
   1400255d7:	jmp    0x1400255df
   1400255d9:	cmp    si,0x2b
   1400255dd:	jne    0x1400255e6
   1400255df:	mov    si,WORD PTR [rbx]
   1400255e2:	add    rbx,0x2
   1400255e6:	cmp    r12d,r15d
   1400255e9:	jne    0x14002561a
   1400255eb:	movzx  ecx,si
   1400255ee:	call   0x14002d024
   1400255f3:	cmp    eax,r15d
   1400255f6:	je     0x140025600
   1400255f8:	mov    r12d,0xa
   1400255fe:	jmp    0x140025641
   140025600:	cmp    WORD PTR [rbx],0x78
   140025604:	je     0x140025614
   140025606:	cmp    WORD PTR [rbx],0x58
   14002560a:	je     0x140025614
   14002560c:	mov    r12d,0x8
   140025612:	jmp    0x140025641
   140025614:	mov    r12d,0x10
   14002561a:	cmp    r12d,0x10
   14002561e:	jne    0x140025641
   140025620:	movzx  ecx,si
   140025623:	call   0x14002d024
   140025628:	cmp    eax,r15d
   14002562b:	jne    0x140025641
   14002562d:	cmp    WORD PTR [rbx],0x78
   140025631:	je     0x140025639
   140025633:	cmp    WORD PTR [rbx],0x58
   140025637:	jne    0x140025641
   140025639:	mov    si,WORD PTR [rbx+0x2]
   14002563d:	add    rbx,0x4
   140025641:	xor    edx,edx
   140025643:	or     eax,0xffffffff
   140025646:	div    r12d
   140025649:	mov    r15d,eax
   14002564c:	mov    r14d,edx
   14002564f:	movzx  ecx,si
   140025652:	call   0x14002d024
   140025657:	cmp    eax,0xffffffff
   14002565a:	jne    0x140025687
   14002565c:	mov    eax,0x41
   140025661:	cmp    ax,si
   140025664:	ja     0x14002566c
   140025666:	cmp    si,0x5a
   14002566a:	jbe    0x140025675
   14002566c:	lea    eax,[rsi-0x61]
   14002566f:	cmp    ax,0x19
   140025673:	ja     0x1400256a3
   140025675:	lea    eax,[rsi-0x61]
   140025678:	cmp    ax,0x19
   14002567c:	movzx  eax,si
   14002567f:	ja     0x140025684
   140025681:	sub    eax,0x20
   140025684:	add    eax,0xffffffc9
   140025687:	cmp    eax,r12d
   14002568a:	jae    0x1400256a3
   14002568c:	or     ebp,0x8
   14002568f:	cmp    edi,r15d
   140025692:	jb     0x1400256c0
   140025694:	jne    0x14002569b
   140025696:	cmp    eax,r14d
   140025699:	jbe    0x1400256c0
   14002569b:	or     ebp,0x4
   14002569e:	test   r13,r13
   1400256a1:	jne    0x1400256c6
   1400256a3:	mov    r14,QWORD PTR [rsp+0x98]
   1400256ab:	sub    rbx,0x2
   1400256af:	test   bpl,0x8
   1400256b3:	jne    0x1400256cf
   1400256b5:	test   r13,r13
   1400256b8:	cmovne rbx,r14
   1400256bc:	xor    edi,edi
   1400256be:	jmp    0x14002571a
   1400256c0:	imul   edi,r12d
   1400256c4:	add    edi,eax
   1400256c6:	mov    si,WORD PTR [rbx]
   1400256c9:	add    rbx,0x2
   1400256cd:	jmp    0x14002564f
   1400256cf:	mov    esi,0x7fffffff
   1400256d4:	test   bpl,0x4
   1400256d8:	jne    0x1400256f7
   1400256da:	test   bpl,0x1
   1400256de:	jne    0x14002571a
   1400256e0:	mov    eax,ebp
   1400256e2:	and    eax,0x2
   1400256e5:	je     0x1400256ef
   1400256e7:	cmp    edi,0x80000000
   1400256ed:	ja     0x1400256f7
   1400256ef:	test   eax,eax
   1400256f1:	jne    0x14002571a
   1400256f3:	cmp    edi,esi
   1400256f5:	jbe    0x14002571a
   1400256f7:	call   0x140020aa4
   1400256fc:	mov    DWORD PTR [rax],0x22
   140025702:	test   bpl,0x1
   140025706:	je     0x14002570d
   140025708:	or     edi,0xffffffff
   14002570b:	jmp    0x14002571a
   14002570d:	mov    al,bpl
   140025710:	and    al,0x2
   140025712:	neg    al
   140025714:	sbb    edi,edi
   140025716:	neg    edi
   140025718:	add    edi,esi
   14002571a:	test   r13,r13
   14002571d:	je     0x140025723
   14002571f:	mov    QWORD PTR [r13+0x0],rbx
   140025723:	test   bpl,0x2
   140025727:	je     0x14002572b
   140025729:	neg    edi
   14002572b:	cmp    BYTE PTR [rsp+0x48],0x0
   140025730:	je     0x14002573e
   140025732:	mov    rcx,QWORD PTR [rsp+0x40]
   140025737:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002573e:	mov    eax,edi
   140025740:	mov    rbx,QWORD PTR [rsp+0x90]
   140025748:	add    rsp,0x50
   14002574c:	pop    r15
   14002574e:	pop    r14
   140025750:	pop    r13
   140025752:	pop    r12
   140025754:	pop    rdi
   140025755:	pop    rsi
   140025756:	pop    rbp
   140025757:	ret    
   140025758:	sub    rsp,0x38
   14002575c:	xor    eax,eax
   14002575e:	mov    r9d,r8d
   140025761:	mov    r8,rdx
   140025764:	mov    DWORD PTR [rsp+0x20],eax
   140025768:	mov    rdx,rcx
   14002576b:	cmp    DWORD PTR [rip+0x26393],eax        # 0x14004bb04
   140025771:	jne    0x14002577c
   140025773:	lea    rcx,[rip+0x24296]        # 0x140049a10
   14002577a:	jmp    0x14002577e
   14002577c:	xor    ecx,ecx
   14002577e:	call   0x140025510
   140025783:	add    rsp,0x38
   140025787:	ret    
   140025788:	mov    QWORD PTR [rsp+0x8],rbx
   14002578d:	mov    QWORD PTR [rsp+0x10],rsi
   140025792:	push   rdi
   140025793:	sub    rsp,0x20
   140025797:	mov    rbx,rdx
   14002579a:	mov    rdi,rcx
   14002579d:	test   rcx,rcx
   1400257a0:	jne    0x1400257ac
   1400257a2:	mov    rcx,rdx
   1400257a5:	call   0x14001d66c
   1400257aa:	jmp    0x140025816
   1400257ac:	test   rdx,rdx
   1400257af:	jne    0x1400257b8
   1400257b1:	call   0x14001ca48
   1400257b6:	jmp    0x140025814
   1400257b8:	cmp    rdx,0xffffffffffffffe0
   1400257bc:	ja     0x140025801
   1400257be:	mov    rcx,QWORD PTR [rip+0x268cb]        # 0x14004c090
   1400257c5:	mov    eax,0x1
   1400257ca:	test   rbx,rbx
   1400257cd:	cmove  rbx,rax
   1400257d1:	mov    r8,rdi
   1400257d4:	xor    edx,edx
   1400257d6:	mov    r9,rbx
   1400257d9:	call   QWORD PTR [rip+0x14b61]        # 0x14003a340
   1400257df:	mov    rsi,rax
   1400257e2:	test   rax,rax
   1400257e5:	jne    0x140025856
   1400257e7:	cmp    DWORD PTR [rip+0x26c8b],eax        # 0x14004c478
   1400257ed:	je     0x14002583f
   1400257ef:	mov    rcx,rbx
   1400257f2:	call   0x140024314
   1400257f7:	test   eax,eax
   1400257f9:	je     0x140025826
   1400257fb:	cmp    rbx,0xffffffffffffffe0
   1400257ff:	jbe    0x1400257be
   140025801:	mov    rcx,rbx
   140025804:	call   0x140024314
   140025809:	call   0x140020aa4
   14002580e:	mov    DWORD PTR [rax],0xc
   140025814:	xor    eax,eax
   140025816:	mov    rbx,QWORD PTR [rsp+0x30]
   14002581b:	mov    rsi,QWORD PTR [rsp+0x38]
   140025820:	add    rsp,0x20
   140025824:	pop    rdi
   140025825:	ret    
   140025826:	call   0x140020aa4
   14002582b:	mov    rbx,rax
   14002582e:	call   QWORD PTR [rip+0x14894]        # 0x14003a0c8
   140025834:	mov    ecx,eax
   140025836:	call   0x140020a5c
   14002583b:	mov    DWORD PTR [rbx],eax
   14002583d:	jmp    0x140025814
   14002583f:	call   0x140020aa4
   140025844:	mov    rbx,rax
   140025847:	call   QWORD PTR [rip+0x1487b]        # 0x14003a0c8
   14002584d:	mov    ecx,eax
   14002584f:	call   0x140020a5c
   140025854:	mov    DWORD PTR [rbx],eax
   140025856:	mov    rax,rsi
   140025859:	jmp    0x140025816
   14002585b:	int3   
   14002585c:	sub    rsp,0x28
   140025860:	call   0x14002412c
   140025865:	mov    rcx,QWORD PTR [rax+0xd0]
   14002586c:	test   rcx,rcx
   14002586f:	je     0x140025875
   140025871:	call   rcx
   140025873:	jmp    0x140025875
   140025875:	call   0x14001de98
   14002587a:	add    rsp,0x28
   14002587e:	ret    
   14002587f:	int3   
   140025880:	sub    rsp,0x28
   140025884:	mov    rcx,QWORD PTR [rip+0x26bf5]        # 0x14004c480
   14002588b:	call   0x140023fc4
   140025890:	test   rax,rax
   140025893:	je     0x140025899
   140025895:	call   rax
   140025897:	jmp    0x140025899
   140025899:	call   0x14002585c
   14002589e:	int3   
   14002589f:	add    rsp,0x28
   1400258a3:	ret    
   1400258a4:	sub    rsp,0x28
   1400258a8:	lea    rcx,[rip+0xffffffffffffffad]        # 0x14002585c
   1400258af:	call   0x140023fb0
   1400258b4:	mov    QWORD PTR [rip+0x26bc5],rax        # 0x14004c480
   1400258bb:	add    rsp,0x28
   1400258bf:	ret    
   1400258c0:	mov    rax,rsp
   1400258c3:	mov    QWORD PTR [rax+0x10],rbx
   1400258c7:	mov    QWORD PTR [rax+0x18],rbp
   1400258cb:	mov    QWORD PTR [rax+0x20],rsi
   1400258cf:	mov    DWORD PTR [rax+0x8],ecx
   1400258d2:	push   rdi
   1400258d3:	sub    rsp,0x20
   1400258d7:	mov    rcx,rdx
   1400258da:	mov    rbx,rdx
   1400258dd:	call   0x14002b1bc
   1400258e2:	mov    ecx,DWORD PTR [rbx+0x18]
   1400258e5:	movsxd rsi,eax
   1400258e8:	test   cl,0x82
   1400258eb:	jne    0x140025904
   1400258ed:	call   0x140020aa4
   1400258f2:	mov    DWORD PTR [rax],0x9
   1400258f8:	or     DWORD PTR [rbx+0x18],0x20
   1400258fc:	or     eax,0xffffffff
   1400258ff:	jmp    0x140025a38
   140025904:	test   cl,0x40
   140025907:	je     0x140025916
   140025909:	call   0x140020aa4
   14002590e:	mov    DWORD PTR [rax],0x22
   140025914:	jmp    0x1400258f8
   140025916:	xor    edi,edi
   140025918:	test   cl,0x1
   14002591b:	je     0x140025936
   14002591d:	mov    DWORD PTR [rbx+0x8],edi
   140025920:	test   cl,0x10
   140025923:	je     0x1400259b2
   140025929:	mov    rax,QWORD PTR [rbx+0x10]
   14002592d:	and    ecx,0xfffffffe
   140025930:	mov    QWORD PTR [rbx],rax
   140025933:	mov    DWORD PTR [rbx+0x18],ecx
   140025936:	mov    eax,DWORD PTR [rbx+0x18]
   140025939:	mov    DWORD PTR [rbx+0x8],edi
   14002593c:	and    eax,0xffffffef
   14002593f:	or     eax,0x2
   140025942:	mov    DWORD PTR [rbx+0x18],eax
   140025945:	test   eax,0x10c
   14002594a:	jne    0x14002597b
   14002594c:	call   0x140023a44
   140025951:	add    rax,0x30
   140025955:	cmp    rbx,rax
   140025958:	je     0x140025968
   14002595a:	call   0x140023a44
   14002595f:	add    rax,0x60
   140025963:	cmp    rbx,rax
   140025966:	jne    0x140025973
   140025968:	mov    ecx,esi
   14002596a:	call   0x14002d38c
   14002596f:	cmp    eax,edi
   140025971:	jne    0x14002597b
   140025973:	mov    rcx,rbx
   140025976:	call   0x14002b5a8
   14002597b:	test   DWORD PTR [rbx+0x18],0x108
   140025982:	je     0x140025a15
   140025988:	mov    ebp,DWORD PTR [rbx]
   14002598a:	mov    rdx,QWORD PTR [rbx+0x10]
   14002598e:	sub    ebp,DWORD PTR [rbx+0x10]
   140025991:	lea    rax,[rdx+0x1]
   140025995:	mov    QWORD PTR [rbx],rax
   140025998:	mov    eax,DWORD PTR [rbx+0x24]
   14002599b:	dec    eax
   14002599d:	cmp    ebp,edi
   14002599f:	mov    DWORD PTR [rbx+0x8],eax
   1400259a2:	jle    0x1400259bd
   1400259a4:	mov    r8d,ebp
   1400259a7:	mov    ecx,esi
   1400259a9:	call   0x14002bd5c
   1400259ae:	mov    edi,eax
   1400259b0:	jmp    0x140025a09
   1400259b2:	or     ecx,0x20
   1400259b5:	mov    DWORD PTR [rbx+0x18],ecx
   1400259b8:	jmp    0x1400258fc
   1400259bd:	cmp    esi,0xffffffff
   1400259c0:	je     0x1400259e5
   1400259c2:	cmp    esi,0xfffffffe
   1400259c5:	je     0x1400259e5
   1400259c7:	mov    rcx,rsi
   1400259ca:	mov    rax,rsi
   1400259cd:	lea    rdx,[rip+0x2794c]        # 0x14004d320
   1400259d4:	and    ecx,0x1f
   1400259d7:	sar    rax,0x5
   1400259db:	imul   rcx,rcx,0x58
   1400259df:	add    rcx,QWORD PTR [rdx+rax*8]
   1400259e3:	jmp    0x1400259ec
   1400259e5:	lea    rcx,[rip+0x246f4]        # 0x14004a0e0
   1400259ec:	test   BYTE PTR [rcx+0x8],0x20
   1400259f0:	je     0x140025a09
   1400259f2:	xor    edx,edx
   1400259f4:	mov    ecx,esi
   1400259f6:	lea    r8d,[rdx+0x2]
   1400259fa:	call   0x14002d254
   1400259ff:	cmp    rax,0xffffffffffffffff
   140025a03:	je     0x1400258f8
   140025a09:	mov    rcx,QWORD PTR [rbx+0x10]
   140025a0d:	mov    al,BYTE PTR [rsp+0x30]
   140025a11:	mov    BYTE PTR [rcx],al
   140025a13:	jmp    0x140025a2b
   140025a15:	mov    ebp,0x1
   140025a1a:	lea    rdx,[rsp+0x30]
   140025a1f:	mov    ecx,esi
   140025a21:	mov    r8d,ebp
   140025a24:	call   0x14002bd5c
   140025a29:	mov    edi,eax
   140025a2b:	cmp    edi,ebp
   140025a2d:	jne    0x1400258f8
   140025a33:	movzx  eax,BYTE PTR [rsp+0x30]
   140025a38:	mov    rbx,QWORD PTR [rsp+0x38]
   140025a3d:	mov    rbp,QWORD PTR [rsp+0x40]
   140025a42:	mov    rsi,QWORD PTR [rsp+0x48]
   140025a47:	add    rsp,0x20
   140025a4b:	pop    rdi
   140025a4c:	ret    
   140025a4d:	int3   
   140025a4e:	int3   
   140025a4f:	int3   
   140025a50:	rex push rbx
   140025a52:	sub    rsp,0x20
   140025a56:	test   BYTE PTR [rdx+0x18],0x40
   140025a5a:	mov    rbx,r8
   140025a5d:	je     0x140025a6b
   140025a5f:	cmp    QWORD PTR [rdx+0x10],0x0
   140025a64:	jne    0x140025a6b
   140025a66:	inc    DWORD PTR [r8]
   140025a69:	jmp    0x140025a81
   140025a6b:	call   0x14002296c
   140025a70:	mov    ecx,0xffff
   140025a75:	cmp    ax,cx
   140025a78:	jne    0x140025a7f
   140025a7a:	or     DWORD PTR [rbx],0xffffffff
   140025a7d:	jmp    0x140025a81
   140025a7f:	inc    DWORD PTR [rbx]
   140025a81:	add    rsp,0x20
   140025a85:	pop    rbx
   140025a86:	ret    
   140025a87:	int3   
   140025a88:	test   edx,edx
   140025a8a:	jle    0x140025ad8
   140025a8c:	mov    QWORD PTR [rsp+0x8],rbx
   140025a91:	mov    QWORD PTR [rsp+0x10],rbp
   140025a96:	mov    QWORD PTR [rsp+0x18],rsi
   140025a9b:	push   rdi
   140025a9c:	sub    rsp,0x20
   140025aa0:	mov    rdi,r9
   140025aa3:	mov    rsi,r8
   140025aa6:	mov    ebx,edx
   140025aa8:	movzx  ebp,cx
   140025aab:	mov    r8,rdi
   140025aae:	mov    rdx,rsi
   140025ab1:	movzx  ecx,bp
   140025ab4:	dec    ebx
   140025ab6:	call   0x140025a50
   140025abb:	cmp    DWORD PTR [rdi],0xffffffff
   140025abe:	je     0x140025ac4
   140025ac0:	test   ebx,ebx
   140025ac2:	jg     0x140025aab
   140025ac4:	mov    rbx,QWORD PTR [rsp+0x30]
   140025ac9:	mov    rbp,QWORD PTR [rsp+0x38]
   140025ace:	mov    rsi,QWORD PTR [rsp+0x40]
   140025ad3:	add    rsp,0x20
   140025ad7:	pop    rdi
   140025ad8:	ret    
   140025ad9:	int3   
   140025ada:	int3   
   140025adb:	int3   
   140025adc:	mov    QWORD PTR [rsp+0x8],rbx
   140025ae1:	mov    QWORD PTR [rsp+0x10],rbp
   140025ae6:	mov    QWORD PTR [rsp+0x18],rsi
   140025aeb:	push   rdi
   140025aec:	sub    rsp,0x20
   140025af0:	test   BYTE PTR [r8+0x18],0x40
   140025af5:	mov    rdi,r9
   140025af8:	mov    rsi,r8
   140025afb:	mov    ebx,edx
   140025afd:	mov    rbp,rcx
   140025b00:	je     0x140025b0e
   140025b02:	cmp    QWORD PTR [r8+0x10],0x0
   140025b07:	jne    0x140025b0e
   140025b09:	add    DWORD PTR [r9],edx
   140025b0c:	jmp    0x140025b4a
   140025b0e:	test   edx,edx
   140025b10:	jle    0x140025b4a
   140025b12:	movzx  ecx,WORD PTR [rbp+0x0]
   140025b16:	mov    r8,rdi
   140025b19:	mov    rdx,rsi
   140025b1c:	dec    ebx
   140025b1e:	call   0x140025a50
   140025b23:	add    rbp,0x2
   140025b27:	cmp    DWORD PTR [rdi],0xffffffff
   140025b2a:	jne    0x140025b46
   140025b2c:	call   0x140020aa4
   140025b31:	cmp    DWORD PTR [rax],0x2a
   140025b34:	jne    0x140025b4a
   140025b36:	mov    ecx,0x3f
   140025b3b:	mov    r8,rdi
   140025b3e:	mov    rdx,rsi
   140025b41:	call   0x140025a50
   140025b46:	test   ebx,ebx
   140025b48:	jg     0x140025b12
   140025b4a:	mov    rbx,QWORD PTR [rsp+0x30]
   140025b4f:	mov    rbp,QWORD PTR [rsp+0x38]
   140025b54:	mov    rsi,QWORD PTR [rsp+0x40]
   140025b59:	add    rsp,0x20
   140025b5d:	pop    rdi
   140025b5e:	ret    
   140025b5f:	int3   
   140025b60:	mov    QWORD PTR [rsp+0x18],rbx
   140025b65:	push   rbp
   140025b66:	push   rsi
   140025b67:	push   rdi
   140025b68:	push   r12
   140025b6a:	push   r13
   140025b6c:	push   r14
   140025b6e:	push   r15
   140025b70:	sub    rsp,0x4d0
   140025b77:	mov    rax,QWORD PTR [rip+0x238e2]        # 0x140049460
   140025b7e:	xor    rax,rsp
   140025b81:	mov    QWORD PTR [rsp+0x4c0],rax
   140025b89:	xor    eax,eax
   140025b8b:	mov    rbx,rcx
   140025b8e:	mov    QWORD PTR [rsp+0x70],rcx
   140025b93:	mov    rdi,rdx
   140025b96:	lea    rcx,[rsp+0x80]
   140025b9e:	mov    rdx,r8
   140025ba1:	mov    r15,r9
   140025ba4:	mov    DWORD PTR [rsp+0x68],eax
   140025ba8:	mov    ebp,eax
   140025baa:	mov    DWORD PTR [rsp+0x50],eax
   140025bae:	mov    r13d,eax
   140025bb1:	mov    DWORD PTR [rsp+0x48],eax
   140025bb5:	mov    DWORD PTR [rsp+0x4c],eax
   140025bb9:	mov    DWORD PTR [rsp+0x64],eax
   140025bbd:	mov    DWORD PTR [rsp+0x44],eax
   140025bc1:	call   0x14001cf30
   140025bc6:	xor    r10d,r10d
   140025bc9:	cmp    rbx,r10
   140025bcc:	jne    0x140025c0f
   140025bce:	call   0x140020aa4
   140025bd3:	xor    ebx,ebx
   140025bd5:	xor    r9d,r9d
   140025bd8:	xor    r8d,r8d
   140025bdb:	xor    edx,edx
   140025bdd:	xor    ecx,ecx
   140025bdf:	mov    DWORD PTR [rax],0x16
   140025be5:	mov    QWORD PTR [rsp+0x20],rbx
   140025bea:	call   0x14001ccf0
   140025bef:	cmp    BYTE PTR [rsp+0x98],bl
   140025bf6:	je     0x140025c07
   140025bf8:	mov    rax,QWORD PTR [rsp+0x90]
   140025c00:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140025c07:	or     eax,0xffffffff
   140025c0a:	jmp    0x140026694
   140025c0f:	cmp    rdi,r10
   140025c12:	je     0x140025bce
   140025c14:	movzx  r12d,WORD PTR [rdi]
   140025c18:	mov    edx,r10d
   140025c1b:	mov    r14d,r10d
   140025c1e:	mov    r8d,r10d
   140025c21:	mov    QWORD PTR [rsp+0xa0],r10
   140025c29:	mov    DWORD PTR [rsp+0x40],edx
   140025c2d:	cmp    r12w,r10w
   140025c31:	je     0x140026679
   140025c37:	mov    rbx,QWORD PTR [rsp+0xb0]
   140025c3f:	or     esi,0xffffffff
   140025c42:	lea    ecx,[rsi+0x59]
   140025c45:	lea    r11d,[rsi+0x21]
   140025c49:	lea    r9d,[rsi+0x31]
   140025c4d:	add    rdi,0x2
   140025c51:	cmp    edx,r10d
   140025c54:	mov    QWORD PTR [rsp+0xa8],rdi
   140025c5c:	jl     0x14002666e
   140025c62:	movzx  eax,r12w
   140025c66:	sub    ax,r11w
   140025c6a:	cmp    ax,cx
   140025c6d:	ja     0x140025c84
   140025c6f:	lea    rcx,[rip+0x1788a]        # 0x14003d500
   140025c76:	movzx  eax,r12w
   140025c7a:	movzx  ecx,BYTE PTR [rax+rcx*1-0x20]
   140025c7f:	and    ecx,0xf
   140025c82:	jmp    0x140025c87
   140025c84:	mov    ecx,r10d
   140025c87:	movsxd rax,ecx
   140025c8a:	lea    rcx,[rax+rax*8]
   140025c8e:	movsxd rax,r8d
   140025c91:	add    rcx,rax
   140025c94:	lea    rax,[rip+0x17865]        # 0x14003d500
   140025c9b:	movzx  r8d,BYTE PTR [rcx+rax*1]
   140025ca0:	shr    r8d,0x4
   140025ca4:	mov    DWORD PTR [rsp+0x60],r8d
   140025ca9:	cmp    r8d,0x8
   140025cad:	je     0x1400266bf
   140025cb3:	mov    ecx,r8d
   140025cb6:	cmp    r8d,r10d
   140025cb9:	je     0x140026524
   140025cbf:	sub    ecx,0x1
   140025cc2:	je     0x140026620
   140025cc8:	sub    ecx,0x1
   140025ccb:	je     0x1400265dc
   140025cd1:	sub    ecx,0x1
   140025cd4:	je     0x140026599
   140025cda:	sub    ecx,0x1
   140025cdd:	je     0x14002658c
   140025ce3:	sub    ecx,0x1
   140025ce6:	je     0x140026547
   140025cec:	sub    ecx,0x1
   140025cef:	je     0x140026442
   140025cf5:	cmp    ecx,0x1
   140025cf8:	jne    0x14002665b
   140025cfe:	movzx  eax,r12w
   140025d02:	mov    ecx,0x64
   140025d07:	cmp    eax,ecx
   140025d09:	jg     0x140025f08
   140025d0f:	je     0x140026027
   140025d15:	cmp    eax,0x41
   140025d18:	je     0x140025ef4
   140025d1e:	cmp    eax,0x43
   140025d21:	je     0x140025e73
   140025d27:	cmp    eax,0x45
   140025d2a:	je     0x140025ef4
   140025d30:	cmp    eax,0x47
   140025d33:	je     0x140025ef4
   140025d39:	cmp    eax,0x53
   140025d3c:	je     0x140025dfc
   140025d42:	cmp    eax,0x58
   140025d45:	je     0x140025fb2
   140025d4b:	cmp    eax,0x5a
   140025d4e:	je     0x140025d9e
   140025d50:	cmp    eax,0x61
   140025d53:	je     0x140026154
   140025d59:	cmp    eax,0x63
   140025d5c:	je     0x140025e7e
   140025d62:	mov    r12d,DWORD PTR [rsp+0x44]
   140025d67:	mov    edi,0x2d
   140025d6c:	cmp    DWORD PTR [rsp+0x64],r10d
   140025d71:	jne    0x1400263ed
   140025d77:	test   bpl,0x40
   140025d7b:	je     0x1400262ce
   140025d81:	bt     ebp,0x8
   140025d85:	jae    0x1400262a0
   140025d8b:	mov    WORD PTR [rsp+0x5c],di
   140025d90:	mov    edi,0x1
   140025d95:	mov    DWORD PTR [rsp+0x4c],edi
   140025d99:	jmp    0x1400262d2
   140025d9e:	mov    rax,QWORD PTR [r15]
   140025da1:	add    r15,0x8
   140025da5:	cmp    rax,r10
   140025da8:	je     0x140025de2
   140025daa:	mov    rbx,QWORD PTR [rax+0x8]
   140025dae:	cmp    rbx,r10
   140025db1:	je     0x140025de2
   140025db3:	bt     ebp,0xb
   140025db7:	mov    edi,0x2d
   140025dbc:	jae    0x140025dd4
   140025dbe:	movsx  eax,WORD PTR [rax]
   140025dc1:	lea    r12d,[rdi-0x2c]
   140025dc5:	cdq    
   140025dc6:	mov    DWORD PTR [rsp+0x44],r12d
   140025dcb:	sub    eax,edx
   140025dcd:	sar    eax,1
   140025dcf:	mov    r14d,eax
   140025dd2:	jmp    0x140025d6c
   140025dd4:	movsx  r14d,WORD PTR [rax]
   140025dd8:	mov    r12d,r10d
   140025ddb:	mov    DWORD PTR [rsp+0x44],r10d
   140025de0:	jmp    0x140025d6c
   140025de2:	mov    rbx,QWORD PTR [rip+0x2476f]        # 0x14004a558
   140025de9:	mov    rcx,rbx
   140025dec:	call   0x14001c650
   140025df1:	xor    r10d,r10d
   140025df4:	mov    r14,rax
   140025df7:	jmp    0x140025d62
   140025dfc:	test   ebp,0x830
   140025e02:	jne    0x140025e07
   140025e04:	or     ebp,r11d
   140025e07:	mov    rbx,QWORD PTR [r15]
   140025e0a:	cmp    r13d,esi
   140025e0d:	mov    edi,r13d
   140025e10:	mov    eax,0x7fffffff
   140025e15:	cmove  edi,eax
   140025e18:	add    r15,0x8
   140025e1c:	test   r11b,bpl
   140025e1f:	je     0x140025f6e
   140025e25:	cmp    rbx,r10
   140025e28:	mov    r14d,r10d
   140025e2b:	cmove  rbx,QWORD PTR [rip+0x24725]        # 0x14004a558
   140025e33:	cmp    edi,r10d
   140025e36:	mov    rsi,rbx
   140025e39:	jle    0x140025d62
   140025e3f:	cmp    BYTE PTR [rsi],r10b
   140025e42:	je     0x140025d62
   140025e48:	movzx  ecx,BYTE PTR [rsi]
   140025e4b:	lea    rdx,[rsp+0x80]
   140025e53:	call   0x140029e14
   140025e58:	xor    r10d,r10d
   140025e5b:	cmp    eax,r10d
   140025e5e:	je     0x140025e63
   140025e60:	inc    rsi
   140025e63:	inc    r14d
   140025e66:	inc    rsi
   140025e69:	cmp    r14d,edi
   140025e6c:	jl     0x140025e3f
   140025e6e:	jmp    0x140025d62
   140025e73:	test   ebp,0x830
   140025e79:	jne    0x140025e7e
   140025e7b:	or     ebp,r11d
   140025e7e:	movzx  eax,WORD PTR [r15]
   140025e82:	add    r15,0x8
   140025e86:	mov    r12d,0x1
   140025e8c:	mov    WORD PTR [rsp+0x58],ax
   140025e91:	mov    DWORD PTR [rsp+0x44],r12d
   140025e96:	test   r11b,bpl
   140025e99:	je     0x140025edc
   140025e9b:	mov    BYTE PTR [rsp+0x54],al
   140025e9f:	mov    rax,QWORD PTR [rsp+0x80]
   140025ea7:	mov    BYTE PTR [rsp+0x55],r10b
   140025eac:	movsxd r8,DWORD PTR [rax+0x10c]
   140025eb3:	lea    r9,[rsp+0x80]
   140025ebb:	lea    rdx,[rsp+0x54]
   140025ec0:	lea    rcx,[rsp+0xc0]
   140025ec8:	call   0x14002aee4
   140025ecd:	xor    r10d,r10d
   140025ed0:	cmp    eax,r10d
   140025ed3:	jge    0x140025ee4
   140025ed5:	mov    DWORD PTR [rsp+0x64],r12d
   140025eda:	jmp    0x140025ee4
   140025edc:	mov    WORD PTR [rsp+0xc0],ax
   140025ee4:	lea    rbx,[rsp+0xc0]
   140025eec:	mov    r14d,r12d
   140025eef:	jmp    0x140025d67
   140025ef4:	mov    r14d,0x1
   140025efa:	add    r12w,r11w
   140025efe:	mov    DWORD PTR [rsp+0x6c],r14d
   140025f03:	jmp    0x140026159
   140025f08:	cmp    eax,0x65
   140025f0b:	jl     0x140025d62
   140025f11:	mov    ecx,0x67
   140025f16:	cmp    eax,ecx
   140025f18:	jle    0x14002614d
   140025f1e:	mov    ecx,0x69
   140025f23:	cmp    eax,ecx
   140025f25:	je     0x140026027
   140025f2b:	cmp    eax,0x6e
   140025f2e:	je     0x140025fee
   140025f34:	mov    ecx,0x6f
   140025f39:	cmp    eax,ecx
   140025f3b:	je     0x140025fdd
   140025f41:	cmp    eax,0x70
   140025f44:	je     0x140025fa8
   140025f46:	cmp    eax,0x73
   140025f49:	je     0x140025e07
   140025f4f:	mov    ecx,0x75
   140025f54:	cmp    eax,ecx
   140025f56:	je     0x14002602a
   140025f5c:	mov    ecx,0x78
   140025f61:	cmp    eax,ecx
   140025f63:	jne    0x140026291
   140025f69:	lea    eax,[rcx-0x51]
   140025f6c:	jmp    0x140025fb7
   140025f6e:	cmp    rbx,r10
   140025f71:	mov    r12d,0x1
   140025f77:	cmove  rbx,QWORD PTR [rip+0x245e1]        # 0x14004a560
   140025f7f:	mov    DWORD PTR [rsp+0x44],r12d
   140025f84:	mov    rax,rbx
   140025f87:	jmp    0x140025f95
   140025f89:	dec    edi
   140025f8b:	cmp    WORD PTR [rax],r10w
   140025f8f:	je     0x140025f9a
   140025f91:	add    rax,0x2
   140025f95:	cmp    edi,r10d
   140025f98:	jne    0x140025f89
   140025f9a:	sub    rax,rbx
   140025f9d:	sar    rax,1
   140025fa0:	mov    r14d,eax
   140025fa3:	jmp    0x140025d67
   140025fa8:	mov    r13d,0x10
   140025fae:	bts    ebp,0xf
   140025fb2:	mov    eax,0x7
   140025fb7:	mov    r9d,0x10
   140025fbd:	mov    DWORD PTR [rsp+0x68],eax
   140025fc1:	lea    edi,[r9+0x20]
   140025fc5:	test   bpl,bpl
   140025fc8:	jns    0x140026035
   140025fca:	add    ax,0x51
   140025fce:	mov    WORD PTR [rsp+0x5c],di
   140025fd3:	lea    edx,[rdi-0x2e]
   140025fd6:	mov    WORD PTR [rsp+0x5e],ax
   140025fdb:	jmp    0x140026039
   140025fdd:	mov    r9d,0x8
   140025fe3:	test   bpl,bpl
   140025fe6:	jns    0x140026030
   140025fe8:	bts    ebp,0x9
   140025fec:	jmp    0x140026030
   140025fee:	mov    rdi,QWORD PTR [r15]
   140025ff1:	add    r15,0x8
   140025ff5:	call   0x14002d3fc
   140025ffa:	xor    r10d,r10d
   140025ffd:	cmp    eax,r10d
   140026000:	je     0x1400266bf
   140026006:	mov    eax,DWORD PTR [rsp+0x40]
   14002600a:	lea    r11d,[r10+0x20]
   14002600e:	test   r11b,bpl
   140026011:	je     0x140026018
   140026013:	mov    WORD PTR [rdi],ax
   140026016:	jmp    0x14002601a
   140026018:	mov    DWORD PTR [rdi],eax
   14002601a:	mov    DWORD PTR [rsp+0x64],0x1
   140026022:	jmp    0x1400263f3
   140026027:	or     ebp,0x40
   14002602a:	mov    r9d,0xa
   140026030:	mov    edi,0x30
   140026035:	mov    edx,DWORD PTR [rsp+0x4c]
   140026039:	bt     ebp,0xf
   14002603d:	jae    0x140026048
   14002603f:	mov    r8,QWORD PTR [r15]
   140026042:	add    r15,0x8
   140026046:	jmp    0x140026080
   140026048:	bt     ebp,0xc
   14002604c:	jb     0x14002603f
   14002604e:	add    r15,0x8
   140026052:	test   r11b,bpl
   140026055:	je     0x140026070
   140026057:	mov    QWORD PTR [rsp+0x78],r15
   14002605c:	test   bpl,0x40
   140026060:	je     0x140026069
   140026062:	movsx  r8,WORD PTR [r15-0x8]
   140026067:	jmp    0x140026085
   140026069:	movzx  r8d,WORD PTR [r15-0x8]
   14002606e:	jmp    0x140026085
   140026070:	test   bpl,0x40
   140026074:	je     0x14002607c
   140026076:	movsxd r8,DWORD PTR [r15-0x8]
   14002607a:	jmp    0x140026080
   14002607c:	mov    r8d,DWORD PTR [r15-0x8]
   140026080:	mov    QWORD PTR [rsp+0x78],r15
   140026085:	test   bpl,0x40
   140026089:	je     0x140026097
   14002608b:	cmp    r8,r10
   14002608e:	jge    0x140026097
   140026090:	neg    r8
   140026093:	bts    ebp,0x8
   140026097:	bt     ebp,0xf
   14002609b:	jb     0x1400260a6
   14002609d:	bt     ebp,0xc
   1400260a1:	jb     0x1400260a6
   1400260a3:	mov    r8d,r8d
   1400260a6:	cmp    r13d,r10d
   1400260a9:	jge    0x1400260b3
   1400260ab:	mov    r13d,0x1
   1400260b1:	jmp    0x1400260c2
   1400260b3:	mov    eax,0x200
   1400260b8:	and    ebp,0xfffffff7
   1400260bb:	cmp    r13d,eax
   1400260be:	cmovg  r13d,eax
   1400260c2:	mov    r15d,DWORD PTR [rsp+0x68]
   1400260c7:	mov    rax,r8
   1400260ca:	lea    rbx,[rsp+0x2bf]
   1400260d2:	neg    rax
   1400260d5:	sbb    ecx,ecx
   1400260d7:	and    ecx,edx
   1400260d9:	mov    DWORD PTR [rsp+0x4c],ecx
   1400260dd:	mov    ecx,r13d
   1400260e0:	dec    r13d
   1400260e3:	cmp    ecx,r10d
   1400260e6:	jg     0x1400260ed
   1400260e8:	cmp    r8,r10
   1400260eb:	je     0x14002610d
   1400260ed:	xor    edx,edx
   1400260ef:	mov    rax,r8
   1400260f2:	movsxd rcx,r9d
   1400260f5:	div    rcx
   1400260f8:	mov    r8,rax
   1400260fb:	lea    eax,[rdx+0x30]
   1400260fe:	cmp    eax,0x39
   140026101:	jle    0x140026106
   140026103:	add    eax,r15d
   140026106:	mov    BYTE PTR [rbx],al
   140026108:	dec    rbx
   14002610b:	jmp    0x1400260dd
   14002610d:	mov    r15,QWORD PTR [rsp+0x78]
   140026112:	lea    rax,[rsp+0x2bf]
   14002611a:	mov    DWORD PTR [rsp+0x48],r13d
   14002611f:	sub    eax,ebx
   140026121:	inc    rbx
   140026124:	bt     ebp,0x9
   140026128:	mov    r14d,eax
   14002612b:	jae    0x140025d62
   140026131:	cmp    eax,r10d
   140026134:	je     0x14002613f
   140026136:	cmp    BYTE PTR [rbx],dil
   140026139:	je     0x140025d62
   14002613f:	dec    rbx
   140026142:	inc    r14d
   140026145:	mov    BYTE PTR [rbx],dil
   140026148:	jmp    0x140025d62
   14002614d:	mov    r14d,DWORD PTR [rsp+0x6c]
   140026152:	jmp    0x14002615e
   140026154:	mov    r14d,DWORD PTR [rsp+0x6c]
   140026159:	mov    ecx,0x67
   14002615e:	mov    eax,0x200
   140026163:	or     ebp,0x40
   140026166:	cmp    r13d,r10d
   140026169:	mov    esi,eax
   14002616b:	lea    rbx,[rsp+0xc0]
   140026173:	jge    0x14002617d
   140026175:	mov    r13d,0x6
   14002617b:	jmp    0x1400261cb
   14002617d:	jne    0x14002618d
   14002617f:	cmp    r12w,cx
   140026183:	jne    0x1400261d0
   140026185:	mov    r13d,0x1
   14002618b:	jmp    0x1400261cb
   14002618d:	cmp    r13d,eax
   140026190:	cmovg  r13d,eax
   140026194:	cmp    r13d,0xa3
   14002619b:	mov    DWORD PTR [rsp+0x48],r13d
   1400261a0:	jle    0x1400261d0
   1400261a2:	lea    edi,[r13+0x15d]
   1400261a9:	movsxd rcx,edi
   1400261ac:	call   0x1400208e4
   1400261b1:	mov    QWORD PTR [rsp+0xa0],rax
   1400261b9:	test   rax,rax
   1400261bc:	je     0x1400261c5
   1400261be:	mov    rbx,rax
   1400261c1:	mov    esi,edi
   1400261c3:	jmp    0x1400261d0
   1400261c5:	mov    r13d,0xa3
   1400261cb:	mov    DWORD PTR [rsp+0x48],r13d
   1400261d0:	mov    rax,QWORD PTR [r15]
   1400261d3:	mov    rcx,QWORD PTR [rip+0x24356]        # 0x14004a530
   1400261da:	add    r15,0x8
   1400261de:	movsx  edi,r12b
   1400261e2:	movsxd rsi,esi
   1400261e5:	mov    QWORD PTR [rsp+0xb0],rax
   1400261ed:	call   0x140023fc4
   1400261f2:	lea    rcx,[rsp+0x80]
   1400261fa:	mov    r9d,edi
   1400261fd:	mov    QWORD PTR [rsp+0x30],rcx
   140026202:	lea    rcx,[rsp+0xb0]
   14002620a:	mov    r8,rsi
   14002620d:	mov    rdx,rbx
   140026210:	mov    DWORD PTR [rsp+0x28],r14d
   140026215:	mov    DWORD PTR [rsp+0x20],r13d
   14002621a:	call   rax
   14002621c:	mov    edi,ebp
   14002621e:	xor    eax,eax
   140026220:	and    edi,0x80
   140026226:	je     0x140026248
   140026228:	cmp    r13d,eax
   14002622b:	jne    0x140026248
   14002622d:	mov    rcx,QWORD PTR [rip+0x24314]        # 0x14004a548
   140026234:	call   0x140023fc4
   140026239:	lea    rdx,[rsp+0x80]
   140026241:	mov    rcx,rbx
   140026244:	call   rax
   140026246:	xor    eax,eax
   140026248:	mov    ecx,0x67
   14002624d:	cmp    r12w,cx
   140026251:	jne    0x140026270
   140026253:	cmp    edi,eax
   140026255:	jne    0x140026270
   140026257:	mov    rcx,QWORD PTR [rip+0x242e2]        # 0x14004a540
   14002625e:	call   0x140023fc4
   140026263:	lea    rdx,[rsp+0x80]
   14002626b:	mov    rcx,rbx
   14002626e:	call   rax
   140026270:	mov    edi,0x2d
   140026275:	cmp    BYTE PTR [rbx],dil
   140026278:	jne    0x140026281
   14002627a:	bts    ebp,0x8
   14002627e:	inc    rbx
   140026281:	mov    rcx,rbx
   140026284:	call   0x14001c650
   140026289:	xor    r10d,r10d
   14002628c:	mov    r14d,eax
   14002628f:	jmp    0x140026296
   140026291:	mov    edi,0x2d
   140026296:	mov    r12d,DWORD PTR [rsp+0x44]
   14002629b:	jmp    0x140025d6c
   1400262a0:	test   bpl,0x1
   1400262a4:	je     0x1400262b5
   1400262a6:	mov    eax,0x2b
   1400262ab:	mov    WORD PTR [rsp+0x5c],ax
   1400262b0:	jmp    0x140025d90
   1400262b5:	test   bpl,0x2
   1400262b9:	je     0x1400262ce
   1400262bb:	mov    eax,0x20
   1400262c0:	mov    WORD PTR [rsp+0x5c],ax
   1400262c5:	lea    edi,[rax-0x1f]
   1400262c8:	mov    DWORD PTR [rsp+0x4c],edi
   1400262cc:	jmp    0x1400262d7
   1400262ce:	mov    edi,DWORD PTR [rsp+0x4c]
   1400262d2:	mov    eax,0x20
   1400262d7:	mov    r13d,DWORD PTR [rsp+0x50]
   1400262dc:	mov    rsi,QWORD PTR [rsp+0x70]
   1400262e1:	sub    r13d,r14d
   1400262e4:	sub    r13d,edi
   1400262e7:	test   bpl,0xc
   1400262eb:	jne    0x1400262ff
   1400262ed:	lea    r9,[rsp+0x40]
   1400262f2:	mov    ecx,eax
   1400262f4:	mov    r8,rsi
   1400262f7:	mov    edx,r13d
   1400262fa:	call   0x140025a88
   1400262ff:	lea    r9,[rsp+0x40]
   140026304:	lea    rcx,[rsp+0x5c]
   140026309:	mov    r8,rsi
   14002630c:	mov    edx,edi
   14002630e:	call   0x140025adc
   140026313:	test   bpl,0x8
   140026317:	je     0x140026334
   140026319:	test   bpl,0x4
   14002631d:	jne    0x140026334
   14002631f:	lea    r9,[rsp+0x40]
   140026324:	mov    ecx,0x30
   140026329:	mov    r8,rsi
   14002632c:	mov    edx,r13d
   14002632f:	call   0x140025a88
   140026334:	xor    eax,eax
   140026336:	cmp    r12d,eax
   140026339:	jne    0x1400263ab
   14002633b:	cmp    r14d,eax
   14002633e:	jle    0x1400263ab
   140026340:	mov    rdi,rbx
   140026343:	mov    esi,r14d
   140026346:	mov    rax,QWORD PTR [rsp+0x80]
   14002634e:	lea    r9,[rsp+0x80]
   140026356:	lea    rcx,[rsp+0x58]
   14002635b:	movsxd r8,DWORD PTR [rax+0x10c]
   140026362:	mov    rdx,rdi
   140026365:	dec    esi
   140026367:	call   0x14002aee4
   14002636c:	xor    r10d,r10d
   14002636f:	movsxd r12,eax
   140026372:	cmp    r12d,r10d
   140026375:	jle    0x14002639d
   140026377:	mov    rdx,QWORD PTR [rsp+0x70]
   14002637c:	movzx  ecx,WORD PTR [rsp+0x58]
   140026381:	lea    r8,[rsp+0x40]
   140026386:	call   0x140025a50
   14002638b:	xor    r10d,r10d
   14002638e:	add    rdi,r12
   140026391:	cmp    esi,r10d
   140026394:	jg     0x140026346
   140026396:	mov    rsi,QWORD PTR [rsp+0x70]
   14002639b:	jmp    0x1400263c1
   14002639d:	mov    rsi,QWORD PTR [rsp+0x70]
   1400263a2:	or     edx,0xffffffff
   1400263a5:	mov    DWORD PTR [rsp+0x40],edx
   1400263a9:	jmp    0x1400263c5
   1400263ab:	lea    r9,[rsp+0x40]
   1400263b0:	mov    r8,rsi
   1400263b3:	mov    edx,r14d
   1400263b6:	mov    rcx,rbx
   1400263b9:	call   0x140025adc
   1400263be:	xor    r10d,r10d
   1400263c1:	mov    edx,DWORD PTR [rsp+0x40]
   1400263c5:	cmp    edx,r10d
   1400263c8:	jl     0x140026435
   1400263ca:	test   bpl,0x4
   1400263ce:	je     0x140026435
   1400263d0:	lea    r9,[rsp+0x40]
   1400263d5:	mov    ecx,0x20
   1400263da:	mov    r8,rsi
   1400263dd:	mov    edx,r13d
   1400263e0:	call   0x140025a88
   1400263e5:	mov    r13d,DWORD PTR [rsp+0x48]
   1400263ea:	xor    r10d,r10d
   1400263ed:	mov    r11d,0x20
   1400263f3:	mov    edx,DWORD PTR [rsp+0x40]
   1400263f7:	mov    rax,QWORD PTR [rsp+0xa0]
   1400263ff:	cmp    rax,r10
   140026402:	je     0x140026645
   140026408:	mov    rcx,rax
   14002640b:	call   0x14001ca48
   140026410:	mov    rdi,QWORD PTR [rsp+0xa8]
   140026418:	xor    r10d,r10d
   14002641b:	mov    QWORD PTR [rsp+0xa0],r10
   140026423:	or     esi,0xffffffff
   140026426:	mov    edx,DWORD PTR [rsp+0x40]
   14002642a:	mov    r11d,0x20
   140026430:	jmp    0x140026650
   140026435:	mov    r13d,DWORD PTR [rsp+0x48]
   14002643a:	mov    r11d,0x20
   140026440:	jmp    0x1400263f7
   140026442:	movzx  eax,r12w
   140026446:	cmp    eax,0x49
   140026449:	je     0x140026497
   14002644b:	cmp    eax,0x68
   14002644e:	je     0x14002648f
   140026450:	mov    ecx,0x6c
   140026455:	cmp    eax,ecx
   140026457:	je     0x140026470
   140026459:	mov    ecx,0x58
   14002645e:	cmp    eax,0x77
   140026461:	jne    0x140026660
   140026467:	bts    ebp,0xb
   14002646b:	jmp    0x140026660
   140026470:	cmp    WORD PTR [rdi],cx
   140026473:	mov    ecx,0x58
   140026478:	jne    0x140026487
   14002647a:	add    rdi,0x2
   14002647e:	bts    ebp,0xc
   140026482:	jmp    0x140026660
   140026487:	or     ebp,0x10
   14002648a:	jmp    0x140026660
   14002648f:	or     ebp,r11d
   140026492:	jmp    0x14002665b
   140026497:	bts    ebp,0xf
   14002649b:	cmp    WORD PTR [rdi],0x36
   14002649f:	jne    0x1400264b5
   1400264a1:	cmp    WORD PTR [rdi+0x2],0x34
   1400264a6:	jne    0x1400264b5
   1400264a8:	add    rdi,0x4
   1400264ac:	bts    ebp,0xf
   1400264b0:	jmp    0x14002665b
   1400264b5:	cmp    WORD PTR [rdi],0x33
   1400264b9:	jne    0x1400264cf
   1400264bb:	cmp    WORD PTR [rdi+0x2],0x32
   1400264c0:	jne    0x1400264cf
   1400264c2:	add    rdi,0x4
   1400264c6:	btr    ebp,0xf
   1400264ca:	jmp    0x14002665b
   1400264cf:	mov    eax,0x64
   1400264d4:	cmp    WORD PTR [rdi],ax
   1400264d7:	je     0x14002665b
   1400264dd:	mov    eax,0x69
   1400264e2:	cmp    WORD PTR [rdi],ax
   1400264e5:	je     0x14002665b
   1400264eb:	mov    eax,0x6f
   1400264f0:	cmp    WORD PTR [rdi],ax
   1400264f3:	je     0x14002665b
   1400264f9:	mov    eax,0x75
   1400264fe:	lea    ecx,[rax-0x1d]
   140026501:	cmp    WORD PTR [rdi],ax
   140026504:	je     0x140026660
   14002650a:	lea    eax,[rcx+0x20]
   14002650d:	cmp    WORD PTR [rdi],ax
   140026510:	je     0x140026660
   140026516:	cmp    WORD PTR [rdi],cx
   140026519:	je     0x140026660
   14002651f:	mov    DWORD PTR [rsp+0x60],r10d
   140026524:	mov    rdx,QWORD PTR [rsp+0x70]
   140026529:	lea    r8,[rsp+0x40]
   14002652e:	movzx  ecx,r12w
   140026532:	mov    DWORD PTR [rsp+0x44],0x1
   14002653a:	call   0x140025a50
   14002653f:	xor    r10d,r10d
   140026542:	jmp    0x140026426
   140026547:	cmp    r12w,0x2a
   14002654c:	jne    0x140026574
   14002654e:	mov    r13d,DWORD PTR [r15]
   140026551:	add    r15,0x8
   140026555:	mov    ecx,0x58
   14002655a:	cmp    r13d,r10d
   14002655d:	mov    DWORD PTR [rsp+0x48],r13d
   140026562:	jge    0x140026660
   140026568:	mov    r13d,esi
   14002656b:	mov    DWORD PTR [rsp+0x48],esi
   14002656f:	jmp    0x140026660
   140026574:	lea    ecx,[r13+r13*4+0x0]
   140026579:	movzx  eax,r12w
   14002657d:	lea    r13d,[rax+rcx*2-0x30]
   140026582:	mov    DWORD PTR [rsp+0x48],r13d
   140026587:	jmp    0x14002665b
   14002658c:	mov    r13d,r10d
   14002658f:	mov    DWORD PTR [rsp+0x48],r10d
   140026594:	jmp    0x14002665b
   140026599:	cmp    r12w,0x2a
   14002659e:	jne    0x1400265c7
   1400265a0:	mov    eax,DWORD PTR [r15]
   1400265a3:	add    r15,0x8
   1400265a7:	mov    ecx,0x58
   1400265ac:	cmp    eax,r10d
   1400265af:	mov    DWORD PTR [rsp+0x50],eax
   1400265b3:	jge    0x140026660
   1400265b9:	or     ebp,0x4
   1400265bc:	neg    eax
   1400265be:	mov    DWORD PTR [rsp+0x50],eax
   1400265c2:	jmp    0x140026660
   1400265c7:	mov    eax,DWORD PTR [rsp+0x50]
   1400265cb:	lea    ecx,[rax+rax*4]
   1400265ce:	movzx  eax,r12w
   1400265d2:	lea    eax,[rax+rcx*2-0x30]
   1400265d6:	mov    DWORD PTR [rsp+0x50],eax
   1400265da:	jmp    0x14002665b
   1400265dc:	movzx  eax,r12w
   1400265e0:	cmp    eax,r11d
   1400265e3:	je     0x14002661b
   1400265e5:	cmp    eax,0x23
   1400265e8:	je     0x140026615
   1400265ea:	mov    ecx,0x2b
   1400265ef:	cmp    eax,ecx
   1400265f1:	je     0x140026610
   1400265f3:	mov    ecx,0x2d
   1400265f8:	cmp    eax,ecx
   1400265fa:	je     0x14002660b
   1400265fc:	mov    ecx,0x58
   140026601:	cmp    eax,r9d
   140026604:	jne    0x140026660
   140026606:	or     ebp,0x8
   140026609:	jmp    0x140026660
   14002660b:	or     ebp,0x4
   14002660e:	jmp    0x14002665b
   140026610:	or     ebp,0x1
   140026613:	jmp    0x14002665b
   140026615:	bts    ebp,0x7
   140026619:	jmp    0x14002665b
   14002661b:	or     ebp,0x2
   14002661e:	jmp    0x14002665b
   140026620:	mov    DWORD PTR [rsp+0x6c],r10d
   140026625:	mov    DWORD PTR [rsp+0x64],r10d
   14002662a:	mov    DWORD PTR [rsp+0x50],r10d
   14002662f:	mov    DWORD PTR [rsp+0x4c],r10d
   140026634:	mov    ebp,r10d
   140026637:	mov    r13d,esi
   14002663a:	mov    DWORD PTR [rsp+0x48],esi
   14002663e:	mov    DWORD PTR [rsp+0x44],r10d
   140026643:	jmp    0x14002665b
   140026645:	mov    rdi,QWORD PTR [rsp+0xa8]
   14002664d:	or     esi,0xffffffff
   140026650:	mov    r8d,DWORD PTR [rsp+0x60]
   140026655:	mov    r9d,0x30
   14002665b:	mov    ecx,0x58
   140026660:	mov    r12w,WORD PTR [rdi]
   140026664:	cmp    r12w,r10w
   140026668:	jne    0x140025c4d
   14002666e:	cmp    r8d,r10d
   140026671:	je     0x140026679
   140026673:	cmp    r8d,0x7
   140026677:	jne    0x1400266bf
   140026679:	cmp    BYTE PTR [rsp+0x98],r10b
   140026681:	je     0x140026692
   140026683:	mov    rcx,QWORD PTR [rsp+0x90]
   14002668b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140026692:	mov    eax,edx
   140026694:	mov    rcx,QWORD PTR [rsp+0x4c0]
   14002669c:	xor    rcx,rsp
   14002669f:	call   0x14001c500
   1400266a4:	mov    rbx,QWORD PTR [rsp+0x520]
   1400266ac:	add    rsp,0x4d0
   1400266b3:	pop    r15
   1400266b5:	pop    r14
   1400266b7:	pop    r13
   1400266b9:	pop    r12
   1400266bb:	pop    rdi
   1400266bc:	pop    rsi
   1400266bd:	pop    rbp
   1400266be:	ret    
   1400266bf:	call   0x140020aa4
   1400266c4:	xor    ebx,ebx
   1400266c6:	xor    r9d,r9d
   1400266c9:	xor    r8d,r8d
   1400266cc:	xor    edx,edx
   1400266ce:	xor    ecx,ecx
   1400266d0:	mov    DWORD PTR [rax],0x16
   1400266d6:	mov    QWORD PTR [rsp+0x20],rbx
   1400266db:	call   0x14001ccf0
   1400266e0:	cmp    BYTE PTR [rsp+0x98],bl
   1400266e7:	je     0x1400266f8
   1400266e9:	mov    rax,QWORD PTR [rsp+0x90]
   1400266f1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400266f8:	mov    eax,esi
   1400266fa:	jmp    0x140026694
   1400266fc:	sub    rsp,0x28
   140026700:	mov    rax,QWORD PTR [rcx]
   140026703:	cmp    DWORD PTR [rax],0xe06d7363
   140026709:	jne    0x140026736
   14002670b:	cmp    DWORD PTR [rax+0x18],0x4
   14002670f:	jne    0x140026736
   140026711:	mov    eax,DWORD PTR [rax+0x20]
   140026714:	cmp    eax,0x19930520
   140026719:	je     0x140026730
   14002671b:	cmp    eax,0x19930521
   140026720:	je     0x140026730
   140026722:	cmp    eax,0x19930522
   140026727:	je     0x140026730
   140026729:	cmp    eax,0x1994000
   14002672e:	jne    0x140026736
   140026730:	call   0x14002585c
   140026735:	int3   
   140026736:	xor    eax,eax
   140026738:	add    rsp,0x28
   14002673c:	ret    
   14002673d:	int3   
   14002673e:	int3   
   14002673f:	int3   
   140026740:	sub    rsp,0x28
   140026744:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x1400266fc
   14002674b:	call   QWORD PTR [rip+0x13aff]        # 0x14003a250
   140026751:	xor    eax,eax
   140026753:	add    rsp,0x28
   140026757:	ret    
   140026758:	ret    0x0
   14002675b:	int3   
   14002675c:	mov    QWORD PTR [rsp+0x8],rbx
   140026761:	mov    QWORD PTR [rsp+0x10],rbp
   140026766:	mov    QWORD PTR [rsp+0x18],rsi
   14002676b:	push   rdi
   14002676c:	sub    rsp,0x20
   140026770:	mov    rsi,rdx
   140026773:	mov    edi,ecx
   140026775:	call   0x1400240a8
   14002677a:	xor    r11d,r11d
   14002677d:	mov    rbx,rax
   140026780:	cmp    rax,r11
   140026783:	je     0x140026913
   140026789:	mov    rcx,QWORD PTR [rax+0xa0]
   140026790:	movsxd r8,DWORD PTR [rip+0x23945]        # 0x14004a0dc
   140026797:	mov    rdx,rcx
   14002679a:	cmp    DWORD PTR [rdx],edi
   14002679c:	je     0x1400267b1
   14002679e:	mov    rax,r8
   1400267a1:	add    rdx,0x10
   1400267a5:	shl    rax,0x4
   1400267a9:	add    rax,rcx
   1400267ac:	cmp    rdx,rax
   1400267af:	jb     0x14002679a
   1400267b1:	mov    rax,r8
   1400267b4:	shl    rax,0x4
   1400267b8:	add    rax,rcx
   1400267bb:	cmp    rdx,rax
   1400267be:	jae    0x1400267c4
   1400267c0:	cmp    DWORD PTR [rdx],edi
   1400267c2:	je     0x1400267c7
   1400267c4:	mov    rdx,r11
   1400267c7:	cmp    rdx,r11
   1400267ca:	je     0x140026913
   1400267d0:	mov    r8,QWORD PTR [rdx+0x8]
   1400267d4:	cmp    r8,r11
   1400267d7:	je     0x140026913
   1400267dd:	cmp    r8,0x5
   1400267e1:	jne    0x1400267f0
   1400267e3:	mov    QWORD PTR [rdx+0x8],r11
   1400267e7:	lea    eax,[r8-0x4]
   1400267eb:	jmp    0x140026915
   1400267f0:	cmp    r8,0x1
   1400267f4:	jne    0x1400267fe
   1400267f6:	or     eax,0xffffffff
   1400267f9:	jmp    0x140026915
   1400267fe:	mov    rbp,QWORD PTR [rbx+0xa8]
   140026805:	mov    QWORD PTR [rbx+0xa8],rsi
   14002680c:	mov    ecx,DWORD PTR [rdx+0x4]
   14002680f:	cmp    ecx,0x8
   140026812:	jne    0x140026900
   140026818:	movsxd r10,DWORD PTR [rip+0x238b1]        # 0x14004a0d0
   14002681f:	mov    ecx,DWORD PTR [rip+0x238af]        # 0x14004a0d4
   140026825:	add    ecx,r10d
   140026828:	mov    r9,r10
   14002682b:	cmp    r10d,ecx
   14002682e:	jge    0x14002685a
   140026830:	shl    r9,0x4
   140026834:	mov    rax,QWORD PTR [rbx+0xa0]
   14002683b:	inc    r10d
   14002683e:	add    r9,0x10
   140026842:	mov    QWORD PTR [r9+rax*1-0x8],r11
   140026847:	mov    ecx,DWORD PTR [rip+0x23883]        # 0x14004a0d0
   14002684d:	mov    eax,DWORD PTR [rip+0x23881]        # 0x14004a0d4
   140026853:	add    ecx,eax
   140026855:	cmp    r10d,ecx
   140026858:	jl     0x140026834
   14002685a:	cmp    DWORD PTR [rdx],0xc000008e
   140026860:	mov    edi,DWORD PTR [rbx+0xb0]
   140026866:	jne    0x140026874
   140026868:	mov    DWORD PTR [rbx+0xb0],0x83
   140026872:	jmp    0x1400268ea
   140026874:	cmp    DWORD PTR [rdx],0xc0000090
   14002687a:	jne    0x140026888
   14002687c:	mov    DWORD PTR [rbx+0xb0],0x81
   140026886:	jmp    0x1400268ea
   140026888:	cmp    DWORD PTR [rdx],0xc0000091
   14002688e:	jne    0x14002689c
   140026890:	mov    DWORD PTR [rbx+0xb0],0x84
   14002689a:	jmp    0x1400268ea
   14002689c:	cmp    DWORD PTR [rdx],0xc0000093
   1400268a2:	jne    0x1400268b0
   1400268a4:	mov    DWORD PTR [rbx+0xb0],0x85
   1400268ae:	jmp    0x1400268ea
   1400268b0:	cmp    DWORD PTR [rdx],0xc000008d
   1400268b6:	jne    0x1400268c4
   1400268b8:	mov    DWORD PTR [rbx+0xb0],0x82
   1400268c2:	jmp    0x1400268ea
   1400268c4:	cmp    DWORD PTR [rdx],0xc000008f
   1400268ca:	jne    0x1400268d8
   1400268cc:	mov    DWORD PTR [rbx+0xb0],0x86
   1400268d6:	jmp    0x1400268ea
   1400268d8:	cmp    DWORD PTR [rdx],0xc0000092
   1400268de:	jne    0x1400268ea
   1400268e0:	mov    DWORD PTR [rbx+0xb0],0x8a
   1400268ea:	mov    edx,DWORD PTR [rbx+0xb0]
   1400268f0:	mov    ecx,0x8
   1400268f5:	call   r8
   1400268f8:	mov    DWORD PTR [rbx+0xb0],edi
   1400268fe:	jmp    0x140026907
   140026900:	mov    QWORD PTR [rdx+0x8],r11
   140026904:	call   r8
   140026907:	mov    QWORD PTR [rbx+0xa8],rbp
   14002690e:	jmp    0x1400267f6
   140026913:	xor    eax,eax
   140026915:	mov    rbx,QWORD PTR [rsp+0x30]
   14002691a:	mov    rbp,QWORD PTR [rsp+0x38]
   14002691f:	mov    rsi,QWORD PTR [rsp+0x40]
   140026924:	add    rsp,0x20
   140026928:	pop    rdi
   140026929:	ret    
   14002692a:	int3   
   14002692b:	int3   
   14002692c:	mov    rcx,QWORD PTR [rip+0x27c35]        # 0x14004e568
   140026933:	xor    r8d,r8d
   140026936:	lea    rax,[rip+0x18ccb]        # 0x14003f608
   14002693d:	cmp    rcx,r8
   140026940:	mov    edx,r8d
   140026943:	cmove  rcx,rax
   140026947:	cmp    WORD PTR [rcx],0x20
   14002694b:	ja     0x140026958
   14002694d:	cmp    WORD PTR [rcx],r8w
   140026951:	je     0x140026982
   140026953:	cmp    edx,r8d
   140026956:	je     0x140026979
   140026958:	cmp    WORD PTR [rcx],0x22
   14002695c:	jne    0x140026969
   14002695e:	cmp    edx,r8d
   140026961:	mov    eax,r8d
   140026964:	sete   al
   140026967:	mov    edx,eax
   140026969:	add    rcx,0x2
   14002696d:	jmp    0x140026947
   14002696f:	cmp    ax,0x20
   140026973:	ja     0x140026982
   140026975:	add    rcx,0x2
   140026979:	movzx  eax,WORD PTR [rcx]
   14002697c:	cmp    ax,r8w
   140026980:	jne    0x14002696f
   140026982:	mov    rax,rcx
   140026985:	ret    
   140026986:	int3   
   140026987:	int3   
   140026988:	mov    rax,rsp
   14002698b:	mov    QWORD PTR [rax+0x8],rbx
   14002698f:	mov    QWORD PTR [rax+0x10],rbp
   140026993:	mov    QWORD PTR [rax+0x18],rsi
   140026997:	mov    QWORD PTR [rax+0x20],rdi
   14002699b:	push   r12
   14002699d:	sub    rsp,0x30
   1400269a1:	mov    rbx,QWORD PTR [rip+0x25150]        # 0x14004baf8
   1400269a8:	xor    r12d,r12d
   1400269ab:	mov    edi,r12d
   1400269ae:	cmp    rbx,r12
   1400269b1:	jne    0x1400269d0
   1400269b3:	or     eax,0xffffffff
   1400269b6:	jmp    0x140026a8b
   1400269bb:	cmp    ax,0x3d
   1400269bf:	je     0x1400269c3
   1400269c1:	inc    edi
   1400269c3:	mov    rcx,rbx
   1400269c6:	call   0x14001c520
   1400269cb:	lea    rbx,[rbx+rax*2+0x2]
   1400269d0:	movzx  eax,WORD PTR [rbx]
   1400269d3:	cmp    ax,r12w
   1400269d7:	jne    0x1400269bb
   1400269d9:	lea    eax,[rdi+0x1]
   1400269dc:	mov    edx,0x8
   1400269e1:	movsxd rcx,eax
   1400269e4:	call   0x140020950
   1400269e9:	mov    rdi,rax
   1400269ec:	mov    QWORD PTR [rip+0x25705],rax        # 0x14004c0f8
   1400269f3:	cmp    rax,r12
   1400269f6:	je     0x1400269b3
   1400269f8:	mov    rbx,QWORD PTR [rip+0x250f9]        # 0x14004baf8
   1400269ff:	cmp    WORD PTR [rbx],r12w
   140026a03:	je     0x140026a6d
   140026a05:	mov    rcx,rbx
   140026a08:	call   0x14001c520
   140026a0d:	cmp    WORD PTR [rbx],0x3d
   140026a11:	lea    esi,[rax+0x1]
   140026a14:	je     0x140026a59
   140026a16:	movsxd rbp,esi
   140026a19:	mov    edx,0x2
   140026a1e:	mov    rcx,rbp
   140026a21:	call   0x140020950
   140026a26:	mov    QWORD PTR [rdi],rax
   140026a29:	cmp    rax,r12
   140026a2c:	je     0x140026aa6
   140026a2e:	mov    r8,rbx
   140026a31:	mov    rdx,rbp
   140026a34:	mov    rcx,rax
   140026a37:	call   0x14002d414
   140026a3c:	cmp    eax,r12d
   140026a3f:	je     0x140026a55
   140026a41:	xor    r9d,r9d
   140026a44:	xor    r8d,r8d
   140026a47:	xor    edx,edx
   140026a49:	xor    ecx,ecx
   140026a4b:	mov    QWORD PTR [rsp+0x20],r12
   140026a50:	call   0x14001cbc8
   140026a55:	add    rdi,0x8
   140026a59:	movsxd rax,esi
   140026a5c:	lea    rbx,[rbx+rax*2]
   140026a60:	cmp    WORD PTR [rbx],r12w
   140026a64:	jne    0x140026a05
   140026a66:	mov    rbx,QWORD PTR [rip+0x2508b]        # 0x14004baf8
   140026a6d:	mov    rcx,rbx
   140026a70:	call   0x14001ca48
   140026a75:	mov    QWORD PTR [rip+0x2507c],r12        # 0x14004baf8
   140026a7c:	mov    QWORD PTR [rdi],r12
   140026a7f:	mov    DWORD PTR [rip+0x26a97],0x1        # 0x14004d520
   140026a89:	xor    eax,eax
   140026a8b:	mov    rbx,QWORD PTR [rsp+0x40]
   140026a90:	mov    rbp,QWORD PTR [rsp+0x48]
   140026a95:	mov    rsi,QWORD PTR [rsp+0x50]
   140026a9a:	mov    rdi,QWORD PTR [rsp+0x58]
   140026a9f:	add    rsp,0x30
   140026aa3:	pop    r12
   140026aa5:	ret    
   140026aa6:	mov    rcx,QWORD PTR [rip+0x2564b]        # 0x14004c0f8
   140026aad:	call   0x14001ca48
   140026ab2:	mov    QWORD PTR [rip+0x2563f],r12        # 0x14004c0f8
   140026ab9:	jmp    0x1400269b3
   140026abe:	int3   
   140026abf:	int3   
   140026ac0:	mov    rax,rsp
   140026ac3:	mov    QWORD PTR [rax+0x8],rbx
   140026ac7:	mov    QWORD PTR [rax+0x10],rsi
   140026acb:	mov    QWORD PTR [rax+0x18],rdi
   140026acf:	mov    QWORD PTR [rax+0x20],r13
   140026ad3:	push   r14
   140026ad5:	mov    r11,QWORD PTR [rsp+0x30]
   140026ada:	xor    esi,esi
   140026adc:	mov    rbx,r9
   140026adf:	mov    DWORD PTR [r11],esi
   140026ae2:	mov    DWORD PTR [r9],0x1
   140026ae9:	mov    r10,rdx
   140026aec:	cmp    rdx,rsi
   140026aef:	je     0x140026af8
   140026af1:	mov    QWORD PTR [rdx],r8
   140026af4:	add    r10,0x8
   140026af8:	mov    edx,esi
   140026afa:	mov    r14d,0x22
   140026b00:	cmp    WORD PTR [rcx],r14w
   140026b04:	jne    0x140026b19
   140026b06:	cmp    edx,esi
   140026b08:	mov    eax,esi
   140026b0a:	sete   al
   140026b0d:	add    rcx,0x2
   140026b11:	mov    edx,eax
   140026b13:	movzx  eax,r14w
   140026b17:	jmp    0x140026b38
   140026b19:	inc    DWORD PTR [r11]
   140026b1c:	cmp    r8,rsi
   140026b1f:	je     0x140026b2c
   140026b21:	movzx  eax,WORD PTR [rcx]
   140026b24:	mov    WORD PTR [r8],ax
   140026b28:	add    r8,0x2
   140026b2c:	mov    ax,WORD PTR [rcx]
   140026b2f:	add    rcx,0x2
   140026b33:	cmp    ax,si
   140026b36:	je     0x140026b54
   140026b38:	cmp    edx,esi
   140026b3a:	jne    0x140026b00
   140026b3c:	cmp    ax,0x20
   140026b40:	je     0x140026b48
   140026b42:	cmp    ax,0x9
   140026b46:	jne    0x140026b00
   140026b48:	cmp    r8,rsi
   140026b4b:	je     0x140026b58
   140026b4d:	mov    WORD PTR [r8-0x2],si
   140026b52:	jmp    0x140026b58
   140026b54:	sub    rcx,0x2
   140026b58:	mov    edi,esi
   140026b5a:	mov    r13d,0x5c
   140026b60:	cmp    WORD PTR [rcx],si
   140026b63:	je     0x140026c37
   140026b69:	cmp    WORD PTR [rcx],0x20
   140026b6d:	je     0x140026b75
   140026b6f:	cmp    WORD PTR [rcx],0x9
   140026b73:	jne    0x140026b7b
   140026b75:	add    rcx,0x2
   140026b79:	jmp    0x140026b69
   140026b7b:	cmp    WORD PTR [rcx],si
   140026b7e:	je     0x140026c37
   140026b84:	cmp    r10,rsi
   140026b87:	je     0x140026b90
   140026b89:	mov    QWORD PTR [r10],r8
   140026b8c:	add    r10,0x8
   140026b90:	inc    DWORD PTR [rbx]
   140026b92:	mov    r9d,0x1
   140026b98:	mov    edx,esi
   140026b9a:	jmp    0x140026ba2
   140026b9c:	add    rcx,0x2
   140026ba0:	inc    edx
   140026ba2:	cmp    WORD PTR [rcx],r13w
   140026ba6:	je     0x140026b9c
   140026ba8:	cmp    WORD PTR [rcx],r14w
   140026bac:	jne    0x140026be8
   140026bae:	test   r9b,dl
   140026bb1:	jne    0x140026bd2
   140026bb3:	cmp    edi,esi
   140026bb5:	je     0x140026bc6
   140026bb7:	lea    rax,[rcx+0x2]
   140026bbb:	cmp    WORD PTR [rax],r14w
   140026bbf:	jne    0x140026bc6
   140026bc1:	mov    rcx,rax
   140026bc4:	jmp    0x140026bd2
   140026bc6:	cmp    edi,esi
   140026bc8:	mov    eax,esi
   140026bca:	mov    r9d,esi
   140026bcd:	sete   al
   140026bd0:	mov    edi,eax
   140026bd2:	shr    edx,1
   140026bd4:	jmp    0x140026be8
   140026bd6:	dec    edx
   140026bd8:	cmp    r8,rsi
   140026bdb:	je     0x140026be5
   140026bdd:	mov    WORD PTR [r8],r13w
   140026be1:	add    r8,0x2
   140026be5:	inc    DWORD PTR [r11]
   140026be8:	cmp    edx,esi
   140026bea:	jne    0x140026bd6
   140026bec:	movzx  eax,WORD PTR [rcx]
   140026bef:	cmp    ax,si
   140026bf2:	je     0x140026c22
   140026bf4:	cmp    edi,esi
   140026bf6:	jne    0x140026c04
   140026bf8:	cmp    ax,0x20
   140026bfc:	je     0x140026c22
   140026bfe:	cmp    ax,0x9
   140026c02:	je     0x140026c22
   140026c04:	cmp    r9d,esi
   140026c07:	je     0x140026c19
   140026c09:	cmp    r8,rsi
   140026c0c:	je     0x140026c16
   140026c0e:	mov    WORD PTR [r8],ax
   140026c12:	add    r8,0x2
   140026c16:	inc    DWORD PTR [r11]
   140026c19:	add    rcx,0x2
   140026c1d:	jmp    0x140026b92
   140026c22:	cmp    r8,rsi
   140026c25:	je     0x140026c2f
   140026c27:	mov    WORD PTR [r8],si
   140026c2b:	add    r8,0x2
   140026c2f:	inc    DWORD PTR [r11]
   140026c32:	jmp    0x140026b60
   140026c37:	cmp    r10,rsi
   140026c3a:	je     0x140026c3f
   140026c3c:	mov    QWORD PTR [r10],rsi
   140026c3f:	inc    DWORD PTR [rbx]
   140026c41:	mov    rsi,QWORD PTR [rsp+0x18]
   140026c46:	mov    rdi,QWORD PTR [rsp+0x20]
   140026c4b:	mov    rbx,QWORD PTR [rsp+0x10]
   140026c50:	mov    r13,QWORD PTR [rsp+0x28]
   140026c55:	pop    r14
   140026c57:	ret    
   140026c58:	mov    QWORD PTR [rsp+0x18],rbx
   140026c5d:	push   rbp
   140026c5e:	push   rsi
   140026c5f:	push   rdi
   140026c60:	sub    rsp,0x30
   140026c64:	lea    rdi,[rip+0x25825]        # 0x14004c490
   140026c6b:	xor    ebp,ebp
   140026c6d:	mov    r8d,0x104
   140026c73:	mov    rdx,rdi
   140026c76:	xor    ecx,ecx
   140026c78:	mov    WORD PTR [rip+0x25a19],bp        # 0x14004c698
   140026c7f:	call   QWORD PTR [rip+0x134eb]        # 0x14003a170
   140026c85:	mov    rbx,QWORD PTR [rip+0x278dc]        # 0x14004e568
   140026c8c:	mov    QWORD PTR [rip+0x2547d],rdi        # 0x14004c110
   140026c93:	cmp    rbx,rbp
   140026c96:	je     0x140026c9d
   140026c98:	cmp    WORD PTR [rbx],bp
   140026c9b:	jne    0x140026ca0
   140026c9d:	mov    rbx,rdi
   140026ca0:	lea    rax,[rsp+0x58]
   140026ca5:	lea    r9,[rsp+0x50]
   140026caa:	xor    r8d,r8d
   140026cad:	xor    edx,edx
   140026caf:	mov    rcx,rbx
   140026cb2:	mov    QWORD PTR [rsp+0x20],rax
   140026cb7:	call   0x140026ac0
   140026cbc:	movsxd rsi,DWORD PTR [rsp+0x50]
   140026cc1:	movabs rax,0x1fffffffffffffff
   140026ccb:	cmp    rsi,rax
   140026cce:	jae    0x140026d38
   140026cd0:	movsxd rax,DWORD PTR [rsp+0x58]
   140026cd5:	movabs rcx,0x7fffffffffffffff
   140026cdf:	cmp    rax,rcx
   140026ce2:	jae    0x140026d38
   140026ce4:	lea    rcx,[rax+rsi*4]
   140026ce8:	add    rax,rax
   140026ceb:	add    rcx,rcx
   140026cee:	cmp    rcx,rax
   140026cf1:	jb     0x140026d38
   140026cf3:	call   0x1400208e4
   140026cf8:	mov    rdi,rax
   140026cfb:	cmp    rax,rbp
   140026cfe:	je     0x140026d38
   140026d00:	lea    r8,[rax+rsi*8]
   140026d04:	lea    rax,[rsp+0x58]
   140026d09:	lea    r9,[rsp+0x50]
   140026d0e:	mov    rdx,rdi
   140026d11:	mov    rcx,rbx
   140026d14:	mov    QWORD PTR [rsp+0x20],rax
   140026d19:	call   0x140026ac0
   140026d1e:	mov    r11d,DWORD PTR [rsp+0x50]
   140026d23:	mov    QWORD PTR [rip+0x253b6],rdi        # 0x14004c0e0
   140026d2a:	dec    r11d
   140026d2d:	xor    eax,eax
   140026d2f:	mov    DWORD PTR [rip+0x2539e],r11d        # 0x14004c0d4
   140026d36:	jmp    0x140026d3b
   140026d38:	or     eax,0xffffffff
   140026d3b:	mov    rbx,QWORD PTR [rsp+0x60]
   140026d40:	add    rsp,0x30
   140026d44:	pop    rdi
   140026d45:	pop    rsi
   140026d46:	pop    rbp
   140026d47:	ret    
   140026d48:	mov    QWORD PTR [rsp+0x8],rbx
   140026d4d:	mov    QWORD PTR [rsp+0x10],rbp
   140026d52:	mov    QWORD PTR [rsp+0x18],rsi
   140026d57:	push   rdi
   140026d58:	sub    rsp,0x20
   140026d5c:	call   QWORD PTR [rip+0x135ee]        # 0x14003a350
   140026d62:	xor    ebx,ebx
   140026d64:	mov    rdi,rax
   140026d67:	cmp    rax,rbx
   140026d6a:	jne    0x140026d70
   140026d6c:	xor    eax,eax
   140026d6e:	jmp    0x140026dbc
   140026d70:	cmp    WORD PTR [rdi],bx
   140026d73:	je     0x140026d87
   140026d75:	add    rax,0x2
   140026d79:	cmp    WORD PTR [rax],bx
   140026d7c:	jne    0x140026d75
   140026d7e:	add    rax,0x2
   140026d82:	cmp    WORD PTR [rax],bx
   140026d85:	jne    0x140026d75
   140026d87:	sub    eax,edi
   140026d89:	add    eax,0x2
   140026d8c:	movsxd rbp,eax
   140026d8f:	mov    rcx,rbp
   140026d92:	call   0x1400208e4
   140026d97:	mov    rsi,rax
   140026d9a:	cmp    rax,rbx
   140026d9d:	je     0x140026db0
   140026d9f:	mov    r8,rbp
   140026da2:	mov    rdx,rdi
   140026da5:	mov    rcx,rax
   140026da8:	call   0x1400205b0
   140026dad:	mov    rbx,rsi
   140026db0:	mov    rcx,rdi
   140026db3:	call   QWORD PTR [rip+0x1358f]        # 0x14003a348
   140026db9:	mov    rax,rbx
   140026dbc:	mov    rbx,QWORD PTR [rsp+0x30]
   140026dc1:	mov    rbp,QWORD PTR [rsp+0x38]
   140026dc6:	mov    rsi,QWORD PTR [rsp+0x40]
   140026dcb:	add    rsp,0x20
   140026dcf:	pop    rdi
   140026dd0:	ret    
   140026dd1:	int3   
   140026dd2:	int3   
   140026dd3:	int3   
   140026dd4:	rex.W jmp QWORD PTR [rip+0x1357d]        # 0x14003a358
   140026ddb:	int3   
   140026ddc:	mov    rax,rsp
   140026ddf:	mov    QWORD PTR [rax+0x8],rbx
   140026de3:	mov    QWORD PTR [rax+0x10],rsi
   140026de7:	mov    QWORD PTR [rax+0x18],rdi
   140026deb:	mov    QWORD PTR [rax+0x20],r12
   140026def:	push   r13
   140026df1:	push   r14
   140026df3:	push   r15
   140026df5:	sub    rsp,0x90
   140026dfc:	lea    rcx,[rsp+0x20]
   140026e01:	call   QWORD PTR [rip+0x13569]        # 0x14003a370
   140026e07:	nop
   140026e08:	mov    edx,0x58
   140026e0d:	lea    r12d,[rdx-0x38]
   140026e11:	mov    rcx,r12
   140026e14:	call   0x140020950
   140026e19:	mov    r11,rax
   140026e1c:	xor    r15d,r15d
   140026e1f:	cmp    rax,r15
   140026e22:	jne    0x140026e2c
   140026e24:	or     eax,0xffffffff
   140026e27:	jmp    0x1400270a7
   140026e2c:	mov    QWORD PTR [rip+0x264ed],rax        # 0x14004d320
   140026e33:	mov    ecx,r12d
   140026e36:	mov    DWORD PTR [rip+0x264cc],ecx        # 0x14004d308
   140026e3c:	add    rax,0xb00
   140026e42:	cmp    r11,rax
   140026e45:	jae    0x140026e8a
   140026e47:	mov    BYTE PTR [r11+0x8],r15b
   140026e4b:	or     QWORD PTR [r11],0xffffffffffffffff
   140026e4f:	mov    BYTE PTR [r11+0x9],0xa
   140026e54:	mov    DWORD PTR [r11+0xc],r15d
   140026e58:	mov    BYTE PTR [r11+0x38],r15b
   140026e5c:	mov    BYTE PTR [r11+0x39],0xa
   140026e61:	mov    BYTE PTR [r11+0x3a],0xa
   140026e66:	mov    DWORD PTR [r11+0x50],r15d
   140026e6a:	mov    BYTE PTR [r11+0x4c],r15b
   140026e6e:	add    r11,0x58
   140026e72:	mov    rax,QWORD PTR [rip+0x264a7]        # 0x14004d320
   140026e79:	add    rax,0xb00
   140026e7f:	cmp    r11,rax
   140026e82:	jb     0x140026e47
   140026e84:	mov    ecx,DWORD PTR [rip+0x2647e]        # 0x14004d308
   140026e8a:	cmp    WORD PTR [rsp+0x62],r15w
   140026e90:	je     0x140026fdf
   140026e96:	mov    rax,QWORD PTR [rsp+0x68]
   140026e9b:	cmp    rax,r15
   140026e9e:	je     0x140026fdf
   140026ea4:	lea    r13,[rax+0x4]
   140026ea8:	movsxd rsi,DWORD PTR [rax]
   140026eab:	add    rsi,r13
   140026eae:	mov    ebx,0x800
   140026eb3:	cmp    DWORD PTR [rax],ebx
   140026eb5:	cmovl  ebx,DWORD PTR [rax]
   140026eb8:	mov    edi,0x1
   140026ebd:	cmp    ecx,ebx
   140026ebf:	jge    0x140026f52
   140026ec5:	lea    r14,[rip+0x26454]        # 0x14004d320
   140026ecc:	mov    edx,0x58
   140026ed1:	mov    rcx,r12
   140026ed4:	call   0x140020950
   140026ed9:	mov    r11,rax
   140026edc:	cmp    rax,r15
   140026edf:	je     0x140026f4a
   140026ee1:	mov    QWORD PTR [r14+rdi*8],rax
   140026ee5:	mov    eax,DWORD PTR [rip+0x2641d]        # 0x14004d308
   140026eeb:	add    eax,r12d
   140026eee:	mov    DWORD PTR [rip+0x26414],eax        # 0x14004d308
   140026ef4:	lea    rcx,[r11+0xb00]
   140026efb:	cmp    r11,rcx
   140026efe:	jae    0x140026f41
   140026f00:	mov    BYTE PTR [r11+0x8],r15b
   140026f04:	or     QWORD PTR [r11],0xffffffffffffffff
   140026f08:	mov    BYTE PTR [r11+0x9],0xa
   140026f0d:	mov    DWORD PTR [r11+0xc],r15d
   140026f11:	and    BYTE PTR [r11+0x38],0x80
   140026f16:	mov    BYTE PTR [r11+0x39],0xa
   140026f1b:	mov    BYTE PTR [r11+0x3a],0xa
   140026f20:	mov    DWORD PTR [r11+0x50],r15d
   140026f24:	mov    BYTE PTR [r11+0x4c],r15b
   140026f28:	add    r11,0x58
   140026f2c:	mov    rax,QWORD PTR [r14+rdi*8]
   140026f30:	add    rax,0xb00
   140026f36:	cmp    r11,rax
   140026f39:	jb     0x140026f00
   140026f3b:	mov    eax,DWORD PTR [rip+0x263c7]        # 0x14004d308
   140026f41:	inc    rdi
   140026f44:	cmp    eax,ebx
   140026f46:	jl     0x140026ecc
   140026f48:	jmp    0x140026f59
   140026f4a:	mov    ebx,DWORD PTR [rip+0x263b8]        # 0x14004d308
   140026f50:	jmp    0x140026f59
   140026f52:	lea    r14,[rip+0x263c7]        # 0x14004d320
   140026f59:	mov    edi,r15d
   140026f5c:	cmp    ebx,r15d
   140026f5f:	jle    0x140026fdf
   140026f61:	cmp    QWORD PTR [rsi],0xffffffffffffffff
   140026f65:	je     0x140026fd2
   140026f67:	cmp    QWORD PTR [rsi],0xfffffffffffffffe
   140026f6b:	je     0x140026fd2
   140026f6d:	test   BYTE PTR [r13+0x0],0x1
   140026f72:	je     0x140026fd2
   140026f74:	test   BYTE PTR [r13+0x0],0x8
   140026f79:	jne    0x140026f89
   140026f7b:	mov    rcx,QWORD PTR [rsi]
   140026f7e:	call   QWORD PTR [rip+0x133e4]        # 0x14003a368
   140026f84:	cmp    eax,r15d
   140026f87:	je     0x140026fd2
   140026f89:	movsxd r12,edi
   140026f8c:	mov    rax,r12
   140026f8f:	sar    rax,0x5
   140026f93:	and    r12d,0x1f
   140026f97:	imul   r12,r12,0x58
   140026f9b:	add    r12,QWORD PTR [r14+rax*8]
   140026f9f:	mov    rax,QWORD PTR [rsi]
   140026fa2:	mov    QWORD PTR [r12],rax
   140026fa6:	mov    al,BYTE PTR [r13+0x0]
   140026faa:	mov    BYTE PTR [r12+0x8],al
   140026faf:	lea    rcx,[r12+0x10]
   140026fb4:	mov    edx,0xfa0
   140026fb9:	call   0x14002ca48
   140026fbe:	cmp    eax,r15d
   140026fc1:	je     0x140026fca
   140026fc3:	inc    DWORD PTR [r12+0xc]
   140026fc8:	jmp    0x140026fd2
   140026fca:	or     eax,0xffffffff
   140026fcd:	jmp    0x1400270a7
   140026fd2:	inc    edi
   140026fd4:	inc    r13
   140026fd7:	add    rsi,0x8
   140026fdb:	cmp    edi,ebx
   140026fdd:	jl     0x140026f61
   140026fdf:	mov    r12d,r15d
   140026fe2:	mov    rdi,r15
   140026fe5:	mov    rbx,rdi
   140026fe8:	imul   rbx,rbx,0x58
   140026fec:	add    rbx,QWORD PTR [rip+0x2632d]        # 0x14004d320
   140026ff3:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   140026ff7:	je     0x140027005
   140026ff9:	cmp    QWORD PTR [rbx],0xfffffffffffffffe
   140026ffd:	je     0x140027005
   140026fff:	or     BYTE PTR [rbx+0x8],0x80
   140027003:	jmp    0x140027084
   140027005:	mov    BYTE PTR [rbx+0x8],0x81
   140027009:	lea    eax,[r12-0x1]
   14002700e:	neg    eax
   140027010:	sbb    ecx,ecx
   140027012:	add    ecx,0xfffffff5
   140027015:	mov    eax,0xfffffff6
   14002701a:	cmp    r12d,r15d
   14002701d:	cmove  ecx,eax
   140027020:	call   QWORD PTR [rip+0x1330a]        # 0x14003a330
   140027026:	mov    rsi,rax
   140027029:	cmp    rax,0xffffffffffffffff
   14002702d:	je     0x140027079
   14002702f:	cmp    rax,r15
   140027032:	je     0x140027079
   140027034:	mov    rcx,rax
   140027037:	call   QWORD PTR [rip+0x1332b]        # 0x14003a368
   14002703d:	cmp    eax,r15d
   140027040:	je     0x140027079
   140027042:	mov    QWORD PTR [rbx],rsi
   140027045:	movzx  eax,al
   140027048:	cmp    eax,0x2
   14002704b:	jne    0x140027053
   14002704d:	or     BYTE PTR [rbx+0x8],0x40
   140027051:	jmp    0x14002705c
   140027053:	cmp    eax,0x3
   140027056:	jne    0x14002705c
   140027058:	or     BYTE PTR [rbx+0x8],0x8
   14002705c:	lea    rcx,[rbx+0x10]
   140027060:	mov    edx,0xfa0
   140027065:	call   0x14002ca48
   14002706a:	cmp    eax,r15d
   14002706d:	je     0x140027074
   14002706f:	inc    DWORD PTR [rbx+0xc]
   140027072:	jmp    0x140027084
   140027074:	or     eax,0xffffffff
   140027077:	jmp    0x1400270a7
   140027079:	or     BYTE PTR [rbx+0x8],0x40
   14002707d:	mov    QWORD PTR [rbx],0xfffffffffffffffe
   140027084:	inc    r12d
   140027087:	inc    rdi
   14002708a:	cmp    rdi,0x3
   14002708e:	jl     0x140026fe5
   140027094:	mov    ecx,DWORD PTR [rip+0x2626e]        # 0x14004d308
   14002709a:	call   QWORD PTR [rip+0x132c0]        # 0x14003a360
   1400270a0:	xor    eax,eax
   1400270a2:	jmp    0x1400270a7
   1400270a4:	or     eax,0xffffffff
   1400270a7:	lea    r11,[rsp+0x90]
   1400270af:	mov    rbx,QWORD PTR [r11+0x20]
   1400270b3:	mov    rsi,QWORD PTR [r11+0x28]
   1400270b7:	mov    rdi,QWORD PTR [r11+0x30]
   1400270bb:	mov    r12,QWORD PTR [r11+0x38]
   1400270bf:	mov    rsp,r11
   1400270c2:	pop    r15
   1400270c4:	pop    r14
   1400270c6:	pop    r13
   1400270c8:	ret    
   1400270c9:	int3   
   1400270ca:	int3   
   1400270cb:	int3   
   1400270cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400270d1:	push   rdi
   1400270d2:	sub    rsp,0x20
   1400270d6:	lea    rbx,[rip+0x1b7fb]        # 0x1400428d8
   1400270dd:	lea    rdi,[rip+0x1b7f4]        # 0x1400428d8
   1400270e4:	jmp    0x1400270f4
   1400270e6:	mov    rax,QWORD PTR [rbx]
   1400270e9:	test   rax,rax
   1400270ec:	je     0x1400270f0
   1400270ee:	call   rax
   1400270f0:	add    rbx,0x8
   1400270f4:	cmp    rbx,rdi
   1400270f7:	jb     0x1400270e6
   1400270f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400270fe:	add    rsp,0x20
   140027102:	pop    rdi
   140027103:	ret    
   140027104:	mov    QWORD PTR [rsp+0x8],rbx
   140027109:	push   rdi
   14002710a:	sub    rsp,0x20
   14002710e:	lea    rbx,[rip+0x1b7d3]        # 0x1400428e8
   140027115:	lea    rdi,[rip+0x1b7cc]        # 0x1400428e8
   14002711c:	jmp    0x14002712c
   14002711e:	mov    rax,QWORD PTR [rbx]
   140027121:	test   rax,rax
   140027124:	je     0x140027128
   140027126:	call   rax
   140027128:	add    rbx,0x8
   14002712c:	cmp    rbx,rdi
   14002712f:	jb     0x14002711e
   140027131:	mov    rbx,QWORD PTR [rsp+0x30]
   140027136:	add    rsp,0x20
   14002713a:	pop    rdi
   14002713b:	ret    
   14002713c:	mov    QWORD PTR [rsp+0x18],rbx
   140027141:	push   rdi
   140027142:	sub    rsp,0x20
   140027146:	mov    rax,QWORD PTR [rip+0x22313]        # 0x140049460
   14002714d:	and    QWORD PTR [rsp+0x30],0x0
   140027153:	movabs rdi,0x2b992ddfa232
   14002715d:	cmp    rax,rdi
   140027160:	je     0x14002716e
   140027162:	not    rax
   140027165:	mov    QWORD PTR [rip+0x222fc],rax        # 0x140049468
   14002716c:	jmp    0x1400271e4
   14002716e:	lea    rcx,[rsp+0x30]
   140027173:	call   QWORD PTR [rip+0x13087]        # 0x14003a200
   140027179:	mov    rbx,QWORD PTR [rsp+0x30]
   14002717e:	call   QWORD PTR [rip+0x12f0c]        # 0x14003a090
   140027184:	mov    r11d,eax
   140027187:	xor    rbx,r11
   14002718a:	call   QWORD PTR [rip+0x13168]        # 0x14003a2f8
   140027190:	mov    r11d,eax
   140027193:	xor    rbx,r11
   140027196:	call   QWORD PTR [rip+0x12f74]        # 0x14003a110
   14002719c:	lea    rcx,[rsp+0x38]
   1400271a1:	mov    r11d,eax
   1400271a4:	xor    rbx,r11
   1400271a7:	call   QWORD PTR [rip+0x13063]        # 0x14003a210
   1400271ad:	mov    r11,QWORD PTR [rsp+0x38]
   1400271b2:	xor    r11,rbx
   1400271b5:	movabs rax,0xffffffffffff
   1400271bf:	and    r11,rax
   1400271c2:	movabs rax,0x2b992ddfa233
   1400271cc:	cmp    r11,rdi
   1400271cf:	cmove  r11,rax
   1400271d3:	mov    QWORD PTR [rip+0x22286],r11        # 0x140049460
   1400271da:	not    r11
   1400271dd:	mov    QWORD PTR [rip+0x22284],r11        # 0x140049468
   1400271e4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400271e9:	add    rsp,0x20
   1400271ed:	pop    rdi
   1400271ee:	ret    
   1400271ef:	int3   
   1400271f0:	int3   
   1400271f1:	int3   
   1400271f2:	int3   
   1400271f3:	int3   
   1400271f4:	int3   
   1400271f5:	int3   
   1400271f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140027200:	sub    rsp,0x4d8
   140027207:	xor    r8,r8
   14002720a:	xor    r9,r9
   14002720d:	mov    QWORD PTR [rsp+0x20],rsp
   140027212:	mov    QWORD PTR [rsp+0x28],r8
   140027217:	call   0x140030e4c
   14002721c:	add    rsp,0x4d8
   140027223:	ret    
   140027224:	int3   
   140027225:	int3   
   140027226:	int3   
   140027227:	int3   
   140027228:	int3   
   140027229:	int3   
   14002722a:	nop    WORD PTR [rax+rax*1+0x0]
   140027230:	mov    QWORD PTR [rsp+0x8],rcx
   140027235:	mov    QWORD PTR [rsp+0x18],rdx
   14002723a:	mov    DWORD PTR [rsp+0x10],r8d
   14002723f:	mov    r9,0x19930520
   140027246:	jmp    0x140027250
   140027248:	int3   
   140027249:	int3   
   14002724a:	int3   
   14002724b:	int3   
   14002724c:	int3   
   14002724d:	int3   
   14002724e:	xchg   ax,ax
   140027250:	ret    
   140027251:	int3   
   140027252:	int3   
   140027253:	int3   
   140027254:	int3   
   140027255:	int3   
   140027256:	int3   
   140027257:	nop    WORD PTR [rax+rax*1+0x0]
   140027260:	ret    
   140027261:	int3   
   140027262:	int3   
   140027263:	int3   
   140027264:	int3   
   140027265:	int3   
   140027266:	int3   
   140027267:	int3   
   140027268:	int3   
   140027269:	int3   
   14002726a:	int3   
   14002726b:	int3   
   14002726c:	int3   
   14002726d:	int3   
   14002726e:	int3   
   14002726f:	int3   
   140027270:	mov    rax,rcx
   140027273:	mov    ecx,0x5a4d
   140027278:	cmp    WORD PTR [rax],cx
   14002727b:	je     0x140027280
   14002727d:	xor    eax,eax
   14002727f:	ret    
   140027280:	movsxd rcx,DWORD PTR [rax+0x3c]
   140027284:	add    rcx,rax
   140027287:	xor    eax,eax
   140027289:	cmp    DWORD PTR [rcx],0x4550
   14002728f:	jne    0x14002729d
   140027291:	mov    edx,0x20b
   140027296:	cmp    WORD PTR [rcx+0x18],dx
   14002729a:	sete   al
   14002729d:	repz ret 
   14002729f:	int3   
   1400272a0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400272a4:	xor    r9d,r9d
   1400272a7:	mov    r10,rdx
   1400272aa:	add    r8,rcx
   1400272ad:	movzx  eax,WORD PTR [r8+0x14]
   1400272b2:	movzx  r11d,WORD PTR [r8+0x6]
   1400272b7:	lea    rcx,[rax+r8*1+0x18]
   1400272bc:	test   r11d,r11d
   1400272bf:	je     0x1400272df
   1400272c1:	mov    edx,DWORD PTR [rcx+0xc]
   1400272c4:	cmp    r10,rdx
   1400272c7:	jb     0x1400272d3
   1400272c9:	mov    eax,DWORD PTR [rcx+0x8]
   1400272cc:	add    eax,edx
   1400272ce:	cmp    r10,rax
   1400272d1:	jb     0x1400272e2
   1400272d3:	inc    r9d
   1400272d6:	add    rcx,0x28
   1400272da:	cmp    r9d,r11d
   1400272dd:	jb     0x1400272c1
   1400272df:	xor    eax,eax
   1400272e1:	ret    
   1400272e2:	mov    rax,rcx
   1400272e5:	ret    
   1400272e6:	int3   
   1400272e7:	int3   
   1400272e8:	int3   
   1400272e9:	int3   
   1400272ea:	int3   
   1400272eb:	int3   
   1400272ec:	int3   
   1400272ed:	int3   
   1400272ee:	int3   
   1400272ef:	int3   
   1400272f0:	sub    rsp,0x28
   1400272f4:	mov    r8,rcx
   1400272f7:	lea    r9,[rip+0xfffffffffffd8d02]        # 0x140000000
   1400272fe:	mov    rcx,r9
   140027301:	call   0x140027270
   140027306:	test   eax,eax
   140027308:	je     0x14002732c
   14002730a:	sub    r8,r9
   14002730d:	mov    rdx,r8
   140027310:	mov    rcx,r9
   140027313:	call   0x1400272a0
   140027318:	test   rax,rax
   14002731b:	je     0x14002732c
   14002731d:	mov    eax,DWORD PTR [rax+0x24]
   140027320:	shr    eax,0x1f
   140027323:	not    eax
   140027325:	and    eax,0x1
   140027328:	jmp    0x14002732c
   14002732a:	xor    eax,eax
   14002732c:	add    rsp,0x28
   140027330:	ret    
   140027331:	int3   
   140027332:	int3   
   140027333:	int3   
   140027334:	mov    QWORD PTR [rip+0x25365],rcx        # 0x14004c6a0
   14002733b:	mov    QWORD PTR [rip+0x25366],rcx        # 0x14004c6a8
   140027342:	mov    QWORD PTR [rip+0x25367],rcx        # 0x14004c6b0
   140027349:	mov    QWORD PTR [rip+0x25368],rcx        # 0x14004c6b8
   140027350:	ret    
   140027351:	int3   
   140027352:	int3   
   140027353:	int3   
   140027354:	mov    rcx,QWORD PTR [rip+0x25355]        # 0x14004c6b0
   14002735b:	jmp    0x140023fc4
   140027360:	mov    QWORD PTR [rsp+0x10],rbx
   140027365:	mov    QWORD PTR [rsp+0x18],rsi
   14002736a:	push   rdi
   14002736b:	push   r12
   14002736d:	push   r13
   14002736f:	push   r14
   140027371:	push   r15
   140027373:	sub    rsp,0x40
   140027377:	mov    ebx,ecx
   140027379:	xor    edi,edi
   14002737b:	mov    DWORD PTR [rsp+0x70],edi
   14002737f:	xor    esi,esi
   140027381:	mov    edx,ecx
   140027383:	sub    edx,0x2
   140027386:	je     0x140027495
   14002738c:	sub    edx,0x2
   14002738f:	je     0x140027437
   140027395:	sub    edx,0x2
   140027398:	je     0x14002741e
   14002739e:	sub    edx,0x2
   1400273a1:	je     0x140027437
   1400273a7:	sub    edx,0x3
   1400273aa:	je     0x140027437
   1400273b0:	sub    edx,0x4
   1400273b3:	je     0x140027402
   1400273b5:	sub    edx,0x6
   1400273b8:	je     0x1400273e6
   1400273ba:	cmp    edx,0x1
   1400273bd:	je     0x14002741e
   1400273bf:	call   0x140020aa4
   1400273c4:	mov    DWORD PTR [rax],0x16
   1400273ca:	and    QWORD PTR [rsp+0x20],rsi
   1400273cf:	xor    r9d,r9d
   1400273d2:	xor    r8d,r8d
   1400273d5:	xor    edx,edx
   1400273d7:	xor    ecx,ecx
   1400273d9:	call   0x14001ccf0
   1400273de:	or     eax,0xffffffff
   1400273e1:	jmp    0x1400275b7
   1400273e6:	lea    r12,[rip+0x252bb]        # 0x14004c6a8
   1400273ed:	mov    rcx,QWORD PTR [rip+0x252b4]        # 0x14004c6a8
   1400273f4:	mov    edi,0x1
   1400273f9:	mov    DWORD PTR [rsp+0x70],edi
   1400273fd:	jmp    0x1400274ac
   140027402:	lea    r12,[rip+0x252af]        # 0x14004c6b8
   140027409:	mov    rcx,QWORD PTR [rip+0x252a8]        # 0x14004c6b8
   140027410:	mov    edi,0x1
   140027415:	mov    DWORD PTR [rsp+0x70],edi
   140027419:	jmp    0x1400274ac
   14002741e:	lea    r12,[rip+0x2528b]        # 0x14004c6b0
   140027425:	mov    rcx,QWORD PTR [rip+0x25284]        # 0x14004c6b0
   14002742c:	mov    edi,0x1
   140027431:	mov    DWORD PTR [rsp+0x70],edi
   140027435:	jmp    0x1400274ac
   140027437:	call   0x1400240a8
   14002743c:	mov    rsi,rax
   14002743f:	test   rax,rax
   140027442:	jne    0x14002744c
   140027444:	or     eax,0xffffffff
   140027447:	jmp    0x1400275b7
   14002744c:	mov    rdx,QWORD PTR [rax+0xa0]
   140027453:	mov    rcx,rdx
   140027456:	movsxd r8,DWORD PTR [rip+0x22c7f]        # 0x14004a0dc
   14002745d:	cmp    DWORD PTR [rcx+0x4],ebx
   140027460:	je     0x140027475
   140027462:	add    rcx,0x10
   140027466:	mov    rax,r8
   140027469:	shl    rax,0x4
   14002746d:	add    rax,rdx
   140027470:	cmp    rcx,rax
   140027473:	jb     0x14002745d
   140027475:	mov    rax,r8
   140027478:	shl    rax,0x4
   14002747c:	add    rax,rdx
   14002747f:	cmp    rcx,rax
   140027482:	jae    0x140027489
   140027484:	cmp    DWORD PTR [rcx+0x4],ebx
   140027487:	je     0x14002748b
   140027489:	xor    ecx,ecx
   14002748b:	lea    r12,[rcx+0x8]
   14002748f:	mov    r13,QWORD PTR [r12]
   140027493:	jmp    0x1400274b4
   140027495:	lea    r12,[rip+0x25204]        # 0x14004c6a0
   14002749c:	mov    rcx,QWORD PTR [rip+0x251fd]        # 0x14004c6a0
   1400274a3:	mov    edi,0x1
   1400274a8:	mov    DWORD PTR [rsp+0x70],edi
   1400274ac:	call   0x140023fc4
   1400274b1:	mov    r13,rax
   1400274b4:	cmp    r13,0x1
   1400274b8:	jne    0x1400274c1
   1400274ba:	xor    eax,eax
   1400274bc:	jmp    0x1400275b7
   1400274c1:	test   r13,r13
   1400274c4:	jne    0x1400274d0
   1400274c6:	lea    ecx,[r13+0x3]
   1400274ca:	call   0x1400246ec
   1400274cf:	int3   
   1400274d0:	test   edi,edi
   1400274d2:	je     0x1400274dc
   1400274d4:	xor    ecx,ecx
   1400274d6:	call   0x140028880
   1400274db:	nop
   1400274dc:	cmp    ebx,0x8
   1400274df:	je     0x1400274f7
   1400274e1:	cmp    ebx,0xb
   1400274e4:	je     0x1400274f7
   1400274e6:	cmp    ebx,0x4
   1400274e9:	je     0x1400274f7
   1400274eb:	mov    r15,QWORD PTR [rsp+0x38]
   1400274f0:	mov    r14d,DWORD PTR [rsp+0x70]
   1400274f5:	jmp    0x140027528
   1400274f7:	mov    r15,QWORD PTR [rsi+0xa8]
   1400274fe:	mov    QWORD PTR [rsp+0x38],r15
   140027503:	and    QWORD PTR [rsi+0xa8],0x0
   14002750b:	cmp    ebx,0x8
   14002750e:	jne    0x140027523
   140027510:	mov    r14d,DWORD PTR [rsi+0xb0]
   140027517:	mov    DWORD PTR [rsi+0xb0],0x8c
   140027521:	jmp    0x140027528
   140027523:	mov    r14d,DWORD PTR [rsp+0x70]
   140027528:	cmp    ebx,0x8
   14002752b:	jne    0x140027566
   14002752d:	mov    ecx,DWORD PTR [rip+0x22b9d]        # 0x14004a0d0
   140027533:	mov    edx,ecx
   140027535:	mov    DWORD PTR [rsp+0x30],ecx
   140027539:	mov    eax,DWORD PTR [rip+0x22b95]        # 0x14004a0d4
   14002753f:	add    ecx,eax
   140027541:	cmp    edx,ecx
   140027543:	jge    0x14002756f
   140027545:	movsxd rcx,edx
   140027548:	add    rcx,rcx
   14002754b:	mov    rax,QWORD PTR [rsi+0xa0]
   140027552:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   140027558:	inc    edx
   14002755a:	mov    DWORD PTR [rsp+0x30],edx
   14002755e:	mov    ecx,DWORD PTR [rip+0x22b6c]        # 0x14004a0d0
   140027564:	jmp    0x140027539
   140027566:	call   0x140023fb8
   14002756b:	mov    QWORD PTR [r12],rax
   14002756f:	test   edi,edi
   140027571:	je     0x14002757a
   140027573:	xor    ecx,ecx
   140027575:	call   0x140028780
   14002757a:	mov    edi,0x8
   14002757f:	cmp    ebx,edi
   140027581:	jne    0x140027590
   140027583:	mov    edx,DWORD PTR [rsi+0xb0]
   140027589:	mov    ecx,edi
   14002758b:	call   r13
   14002758e:	jmp    0x140027595
   140027590:	mov    ecx,ebx
   140027592:	call   r13
   140027595:	cmp    ebx,edi
   140027597:	je     0x1400275a3
   140027599:	cmp    ebx,0xb
   14002759c:	je     0x1400275a3
   14002759e:	cmp    ebx,0x4
   1400275a1:	jne    0x1400275b5
   1400275a3:	mov    QWORD PTR [rsi+0xa8],r15
   1400275aa:	cmp    ebx,edi
   1400275ac:	jne    0x1400275b5
   1400275ae:	mov    DWORD PTR [rsi+0xb0],r14d
   1400275b5:	xor    eax,eax
   1400275b7:	lea    r11,[rsp+0x40]
   1400275bc:	mov    rbx,QWORD PTR [r11+0x38]
   1400275c0:	mov    rsi,QWORD PTR [r11+0x40]
   1400275c4:	mov    rsp,r11
   1400275c7:	pop    r15
   1400275c9:	pop    r14
   1400275cb:	pop    r13
   1400275cd:	pop    r12
   1400275cf:	pop    rdi
   1400275d0:	ret    
   1400275d1:	int3   
   1400275d2:	int3   
   1400275d3:	int3   
   1400275d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400275d9:	mov    QWORD PTR [rsp+0x10],rbp
   1400275de:	mov    QWORD PTR [rsp+0x18],rsi
   1400275e3:	push   rdi
   1400275e4:	sub    rsp,0x20
   1400275e8:	mov    rbp,r8
   1400275eb:	mov    rsi,rdx
   1400275ee:	mov    rbx,rcx
   1400275f1:	test   rcx,rcx
   1400275f4:	jne    0x1400275fb
   1400275f6:	call   0x140025880
   1400275fb:	movsxd rax,DWORD PTR [rbx+0x18]
   1400275ff:	mov    edi,DWORD PTR [rbx+0x14]
   140027602:	add    rax,QWORD PTR [rsi+0x8]
   140027606:	jne    0x14002760d
   140027608:	call   0x140025880
   14002760d:	xor    ecx,ecx
   14002760f:	test   edi,edi
   140027611:	je     0x140027646
   140027613:	mov    r9,QWORD PTR [rsi+0x8]
   140027617:	movsxd r8,DWORD PTR [rbx+0x18]
   14002761b:	lea    rdx,[r9+r8*1]
   14002761f:	movsxd rax,DWORD PTR [rdx]
   140027622:	add    rax,r9
   140027625:	cmp    rbp,rax
   140027628:	jl     0x140027634
   14002762a:	inc    ecx
   14002762c:	add    rdx,0x8
   140027630:	cmp    ecx,edi
   140027632:	jb     0x14002761f
   140027634:	test   ecx,ecx
   140027636:	je     0x140027646
   140027638:	lea    eax,[rcx-0x1]
   14002763b:	lea    rdx,[r8+rax*8]
   14002763f:	mov    eax,DWORD PTR [rdx+r9*1+0x4]
   140027644:	jmp    0x140027649
   140027646:	or     eax,0xffffffff
   140027649:	mov    rbx,QWORD PTR [rsp+0x30]
   14002764e:	mov    rbp,QWORD PTR [rsp+0x38]
   140027653:	mov    rsi,QWORD PTR [rsp+0x40]
   140027658:	add    rsp,0x20
   14002765c:	pop    rdi
   14002765d:	ret    
   14002765e:	int3   
   14002765f:	int3   
   140027660:	mov    r8,QWORD PTR [rdx]
   140027663:	jmp    0x1400275d4
   140027668:	sub    rsp,0x28
   14002766c:	movsxd r9,DWORD PTR [r8+0x1c]
   140027670:	mov    rax,QWORD PTR [rcx]
   140027673:	mov    r10,r8
   140027676:	mov    eax,DWORD PTR [r9+rax*1]
   14002767a:	cmp    eax,0xfffffffe
   14002767d:	jne    0x14002768a
   14002767f:	mov    r8,QWORD PTR [rdx]
   140027682:	mov    rcx,r10
   140027685:	call   0x1400275d4
   14002768a:	add    rsp,0x28
   14002768e:	ret    
   14002768f:	int3   
   140027690:	movsxd rdx,DWORD PTR [r8+0x1c]
   140027694:	mov    rax,QWORD PTR [rcx]
   140027697:	mov    DWORD PTR [rdx+rax*1],r9d
   14002769b:	ret    
   14002769c:	mov    QWORD PTR [rsp+0x8],rbx
   1400276a1:	push   rdi
   1400276a2:	sub    rsp,0x20
   1400276a6:	mov    edi,r9d
   1400276a9:	lea    r9,[rsp+0x40]
   1400276ae:	mov    rbx,r8
   1400276b1:	call   0x14001df58
   1400276b6:	mov    rcx,QWORD PTR [rax]
   1400276b9:	movsxd rax,DWORD PTR [rbx+0x1c]
   1400276bd:	mov    QWORD PTR [rsp+0x40],rcx
   1400276c2:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   1400276c6:	jle    0x1400276cc
   1400276c8:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   1400276cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400276d1:	add    rsp,0x20
   1400276d5:	pop    rdi
   1400276d6:	ret    
   1400276d7:	int3   
   1400276d8:	rex push rbx
   1400276da:	sub    rsp,0x20
   1400276de:	lea    r9,[rsp+0x40]
   1400276e3:	mov    rbx,r8
   1400276e6:	call   0x14001df58
   1400276eb:	mov    rcx,QWORD PTR [rax]
   1400276ee:	movsxd rax,DWORD PTR [rbx+0x1c]
   1400276f2:	mov    QWORD PTR [rsp+0x40],rcx
   1400276f7:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   1400276fb:	add    rsp,0x20
   1400276ff:	pop    rbx
   140027700:	ret    
   140027701:	int3   
   140027702:	int3   
   140027703:	int3   
   140027704:	mov    rax,rsp
   140027707:	mov    QWORD PTR [rax+0x8],rbx
   14002770b:	mov    QWORD PTR [rax+0x10],rbp
   14002770f:	mov    QWORD PTR [rax+0x18],rsi
   140027713:	mov    QWORD PTR [rax+0x20],rdi
   140027717:	push   r12
   140027719:	sub    rsp,0x40
   14002771d:	movzx  esi,WORD PTR [rdx+0x42]
   140027721:	movzx  ebp,WORD PTR [rdx+0x44]
   140027725:	mov    rdi,rcx
   140027728:	test   rcx,rcx
   14002772b:	jne    0x140027735
   14002772d:	or     eax,0xffffffff
   140027730:	jmp    0x140027d1c
   140027735:	and    QWORD PTR [rsp+0x38],0x0
   14002773b:	lea    rax,[rcx+0x8]
   14002773f:	mov    r9d,0x31
   140027745:	lea    r12d,[r9-0x30]
   140027749:	mov    QWORD PTR [rsp+0x30],rdx
   14002774e:	lea    rcx,[rsp+0x30]
   140027753:	mov    r8d,esi
   140027756:	mov    edx,r12d
   140027759:	mov    QWORD PTR [rsp+0x20],rax
   14002775e:	call   0x140025344
   140027763:	lea    rcx,[rdi+0x10]
   140027767:	lea    r9d,[r12+0x31]
   14002776c:	mov    QWORD PTR [rsp+0x20],rcx
   140027771:	lea    rcx,[rsp+0x30]
   140027776:	mov    r8d,esi
   140027779:	mov    edx,r12d
   14002777c:	mov    ebx,eax
   14002777e:	call   0x140025344
   140027783:	lea    rcx,[rdi+0x18]
   140027787:	lea    r9d,[r12+0x32]
   14002778c:	mov    QWORD PTR [rsp+0x20],rcx
   140027791:	lea    rcx,[rsp+0x30]
   140027796:	mov    r8d,esi
   140027799:	mov    edx,r12d
   14002779c:	or     ebx,eax
   14002779e:	call   0x140025344
   1400277a3:	lea    r9d,[r12+0x33]
   1400277a8:	lea    rcx,[rsp+0x30]
   1400277ad:	or     ebx,eax
   1400277af:	lea    rax,[rdi+0x20]
   1400277b3:	mov    r8d,esi
   1400277b6:	mov    edx,r12d
   1400277b9:	mov    QWORD PTR [rsp+0x20],rax
   1400277be:	call   0x140025344
   1400277c3:	lea    r9d,[r12+0x34]
   1400277c8:	lea    rcx,[rsp+0x30]
   1400277cd:	or     ebx,eax
   1400277cf:	lea    rax,[rdi+0x28]
   1400277d3:	mov    r8d,esi
   1400277d6:	mov    edx,r12d
   1400277d9:	mov    QWORD PTR [rsp+0x20],rax
   1400277de:	call   0x140025344
   1400277e3:	lea    r9d,[r12+0x35]
   1400277e8:	lea    rcx,[rsp+0x30]
   1400277ed:	or     ebx,eax
   1400277ef:	lea    rax,[rdi+0x30]
   1400277f3:	mov    r8d,esi
   1400277f6:	mov    edx,r12d
   1400277f9:	mov    QWORD PTR [rsp+0x20],rax
   1400277fe:	call   0x140025344
   140027803:	lea    r9d,[r12+0x36]
   140027808:	lea    rcx,[rsp+0x30]
   14002780d:	mov    r8d,esi
   140027810:	mov    edx,r12d
   140027813:	mov    QWORD PTR [rsp+0x20],rdi
   140027818:	or     ebx,eax
   14002781a:	call   0x140025344
   14002781f:	lea    r9d,[r12+0x29]
   140027824:	or     ebx,eax
   140027826:	lea    rax,[rdi+0x40]
   14002782a:	lea    rcx,[rsp+0x30]
   14002782f:	mov    r8d,esi
   140027832:	mov    edx,r12d
   140027835:	mov    QWORD PTR [rsp+0x20],rax
   14002783a:	call   0x140025344
   14002783f:	lea    r9d,[r12+0x2a]
   140027844:	lea    rcx,[rsp+0x30]
   140027849:	or     ebx,eax
   14002784b:	lea    rax,[rdi+0x48]
   14002784f:	mov    r8d,esi
   140027852:	mov    edx,r12d
   140027855:	mov    QWORD PTR [rsp+0x20],rax
   14002785a:	call   0x140025344
   14002785f:	lea    r9d,[r12+0x2b]
   140027864:	lea    rcx,[rsp+0x30]
   140027869:	or     ebx,eax
   14002786b:	lea    rax,[rdi+0x50]
   14002786f:	mov    r8d,esi
   140027872:	mov    edx,r12d
   140027875:	mov    QWORD PTR [rsp+0x20],rax
   14002787a:	call   0x140025344
   14002787f:	or     ebx,eax
   140027881:	lea    rax,[rdi+0x58]
   140027885:	lea    r9d,[r12+0x2c]
   14002788a:	lea    rcx,[rsp+0x30]
   14002788f:	mov    r8d,esi
   140027892:	mov    edx,r12d
   140027895:	mov    QWORD PTR [rsp+0x20],rax
   14002789a:	call   0x140025344
   14002789f:	lea    r9d,[r12+0x2d]
   1400278a4:	or     ebx,eax
   1400278a6:	lea    rax,[rdi+0x60]
   1400278aa:	lea    rcx,[rsp+0x30]
   1400278af:	mov    r8d,esi
   1400278b2:	mov    edx,r12d
   1400278b5:	mov    QWORD PTR [rsp+0x20],rax
   1400278ba:	call   0x140025344
   1400278bf:	lea    r9d,[r12+0x2e]
   1400278c4:	lea    rcx,[rsp+0x30]
   1400278c9:	or     ebx,eax
   1400278cb:	lea    rax,[rdi+0x68]
   1400278cf:	mov    r8d,esi
   1400278d2:	mov    edx,r12d
   1400278d5:	mov    QWORD PTR [rsp+0x20],rax
   1400278da:	call   0x140025344
   1400278df:	lea    r9d,[r12+0x2f]
   1400278e4:	lea    rcx,[rsp+0x30]
   1400278e9:	or     ebx,eax
   1400278eb:	lea    rax,[rdi+0x38]
   1400278ef:	mov    r8d,esi
   1400278f2:	mov    edx,r12d
   1400278f5:	mov    QWORD PTR [rsp+0x20],rax
   1400278fa:	call   0x140025344
   1400278ff:	lea    r9d,[r12+0x43]
   140027904:	lea    rcx,[rsp+0x30]
   140027909:	or     ebx,eax
   14002790b:	lea    rax,[rdi+0x70]
   14002790f:	mov    r8d,esi
   140027912:	mov    edx,r12d
   140027915:	mov    QWORD PTR [rsp+0x20],rax
   14002791a:	call   0x140025344
   14002791f:	lea    r9d,[r12+0x44]
   140027924:	lea    rcx,[rsp+0x30]
   140027929:	or     ebx,eax
   14002792b:	lea    rax,[rdi+0x78]
   14002792f:	mov    r8d,esi
   140027932:	mov    edx,r12d
   140027935:	mov    QWORD PTR [rsp+0x20],rax
   14002793a:	call   0x140025344
   14002793f:	lea    r9d,[r12+0x45]
   140027944:	lea    rcx,[rsp+0x30]
   140027949:	or     ebx,eax
   14002794b:	lea    rax,[rdi+0x80]
   140027952:	mov    r8d,esi
   140027955:	mov    edx,r12d
   140027958:	mov    QWORD PTR [rsp+0x20],rax
   14002795d:	call   0x140025344
   140027962:	lea    r9d,[r12+0x46]
   140027967:	lea    rcx,[rsp+0x30]
   14002796c:	or     ebx,eax
   14002796e:	lea    rax,[rdi+0x88]
   140027975:	mov    r8d,esi
   140027978:	mov    edx,r12d
   14002797b:	mov    QWORD PTR [rsp+0x20],rax
   140027980:	call   0x140025344
   140027985:	lea    r9d,[r12+0x47]
   14002798a:	lea    rcx,[rsp+0x30]
   14002798f:	or     ebx,eax
   140027991:	lea    rax,[rdi+0x90]
   140027998:	mov    r8d,esi
   14002799b:	mov    edx,r12d
   14002799e:	mov    QWORD PTR [rsp+0x20],rax
   1400279a3:	call   0x140025344
   1400279a8:	lea    r9d,[r12+0x48]
   1400279ad:	lea    rcx,[rsp+0x30]
   1400279b2:	or     ebx,eax
   1400279b4:	lea    rax,[rdi+0x98]
   1400279bb:	mov    r8d,esi
   1400279be:	mov    edx,r12d
   1400279c1:	mov    QWORD PTR [rsp+0x20],rax
   1400279c6:	call   0x140025344
   1400279cb:	or     ebx,eax
   1400279cd:	lea    rax,[rdi+0xa0]
   1400279d4:	lea    r9d,[r12+0x49]
   1400279d9:	lea    rcx,[rsp+0x30]
   1400279de:	mov    r8d,esi
   1400279e1:	mov    edx,r12d
   1400279e4:	mov    QWORD PTR [rsp+0x20],rax
   1400279e9:	call   0x140025344
   1400279ee:	lea    r9d,[r12+0x4a]
   1400279f3:	lea    rcx,[rsp+0x30]
   1400279f8:	or     ebx,eax
   1400279fa:	lea    rax,[rdi+0xa8]
   140027a01:	mov    r8d,esi
   140027a04:	mov    edx,r12d
   140027a07:	mov    QWORD PTR [rsp+0x20],rax
   140027a0c:	call   0x140025344
   140027a11:	lea    r9d,[r12+0x4b]
   140027a16:	lea    rcx,[rsp+0x30]
   140027a1b:	or     ebx,eax
   140027a1d:	lea    rax,[rdi+0xb0]
   140027a24:	mov    r8d,esi
   140027a27:	mov    edx,r12d
   140027a2a:	mov    QWORD PTR [rsp+0x20],rax
   140027a2f:	call   0x140025344
   140027a34:	lea    r9d,[r12+0x4c]
   140027a39:	lea    rcx,[rsp+0x30]
   140027a3e:	or     ebx,eax
   140027a40:	lea    rax,[rdi+0xb8]
   140027a47:	mov    r8d,esi
   140027a4a:	mov    edx,r12d
   140027a4d:	mov    QWORD PTR [rsp+0x20],rax
   140027a52:	call   0x140025344
   140027a57:	lea    r9d,[r12+0x4d]
   140027a5c:	lea    rcx,[rsp+0x30]
   140027a61:	or     ebx,eax
   140027a63:	lea    rax,[rdi+0xc0]
   140027a6a:	mov    r8d,esi
   140027a6d:	mov    edx,r12d
   140027a70:	mov    QWORD PTR [rsp+0x20],rax
   140027a75:	call   0x140025344
   140027a7a:	lea    r9d,[r12+0x4e]
   140027a7f:	lea    rcx,[rsp+0x30]
   140027a84:	or     ebx,eax
   140027a86:	lea    rax,[rdi+0xc8]
   140027a8d:	mov    r8d,esi
   140027a90:	mov    edx,r12d
   140027a93:	mov    QWORD PTR [rsp+0x20],rax
   140027a98:	call   0x140025344
   140027a9d:	lea    r9d,[r12+0x37]
   140027aa2:	lea    rcx,[rsp+0x30]
   140027aa7:	or     ebx,eax
   140027aa9:	lea    rax,[rdi+0xd0]
   140027ab0:	mov    r8d,esi
   140027ab3:	mov    edx,r12d
   140027ab6:	mov    QWORD PTR [rsp+0x20],rax
   140027abb:	call   0x140025344
   140027ac0:	lea    r9d,[r12+0x38]
   140027ac5:	lea    rcx,[rsp+0x30]
   140027aca:	or     ebx,eax
   140027acc:	lea    rax,[rdi+0xd8]
   140027ad3:	mov    r8d,esi
   140027ad6:	mov    edx,r12d
   140027ad9:	mov    QWORD PTR [rsp+0x20],rax
   140027ade:	call   0x140025344
   140027ae3:	lea    r9d,[r12+0x39]
   140027ae8:	lea    rcx,[rsp+0x30]
   140027aed:	or     ebx,eax
   140027aef:	lea    rax,[rdi+0xe0]
   140027af6:	mov    r8d,esi
   140027af9:	mov    edx,r12d
   140027afc:	mov    QWORD PTR [rsp+0x20],rax
   140027b01:	call   0x140025344
   140027b06:	lea    r9d,[r12+0x3a]
   140027b0b:	lea    rcx,[rsp+0x30]
   140027b10:	or     ebx,eax
   140027b12:	lea    rax,[rdi+0xe8]
   140027b19:	mov    r8d,esi
   140027b1c:	mov    edx,r12d
   140027b1f:	mov    QWORD PTR [rsp+0x20],rax
   140027b24:	call   0x140025344
   140027b29:	or     ebx,eax
   140027b2b:	lea    rax,[rdi+0xf0]
   140027b32:	lea    r9d,[r12+0x3b]
   140027b37:	lea    rcx,[rsp+0x30]
   140027b3c:	mov    r8d,esi
   140027b3f:	mov    edx,r12d
   140027b42:	mov    QWORD PTR [rsp+0x20],rax
   140027b47:	call   0x140025344
   140027b4c:	lea    r9d,[r12+0x3c]
   140027b51:	lea    rcx,[rsp+0x30]
   140027b56:	or     ebx,eax
   140027b58:	lea    rax,[rdi+0xf8]
   140027b5f:	mov    r8d,esi
   140027b62:	mov    edx,r12d
   140027b65:	mov    QWORD PTR [rsp+0x20],rax
   140027b6a:	call   0x140025344
   140027b6f:	lea    r9d,[r12+0x3d]
   140027b74:	lea    rcx,[rsp+0x30]
   140027b79:	or     ebx,eax
   140027b7b:	lea    rax,[rdi+0x100]
   140027b82:	mov    r8d,esi
   140027b85:	mov    edx,r12d
   140027b88:	mov    QWORD PTR [rsp+0x20],rax
   140027b8d:	call   0x140025344
   140027b92:	lea    r9d,[r12+0x3e]
   140027b97:	lea    rcx,[rsp+0x30]
   140027b9c:	or     ebx,eax
   140027b9e:	lea    rax,[rdi+0x108]
   140027ba5:	mov    r8d,esi
   140027ba8:	mov    edx,r12d
   140027bab:	mov    QWORD PTR [rsp+0x20],rax
   140027bb0:	call   0x140025344
   140027bb5:	lea    r9d,[r12+0x3f]
   140027bba:	lea    rcx,[rsp+0x30]
   140027bbf:	or     ebx,eax
   140027bc1:	lea    rax,[rdi+0x110]
   140027bc8:	mov    r8d,esi
   140027bcb:	mov    edx,r12d
   140027bce:	mov    QWORD PTR [rsp+0x20],rax
   140027bd3:	call   0x140025344
   140027bd8:	lea    r9d,[r12+0x40]
   140027bdd:	lea    rcx,[rsp+0x30]
   140027be2:	or     ebx,eax
   140027be4:	lea    rax,[rdi+0x118]
   140027beb:	mov    r8d,esi
   140027bee:	mov    edx,r12d
   140027bf1:	mov    QWORD PTR [rsp+0x20],rax
   140027bf6:	call   0x140025344
   140027bfb:	lea    r9d,[r12+0x41]
   140027c00:	lea    rcx,[rsp+0x30]
   140027c05:	or     ebx,eax
   140027c07:	lea    rax,[rdi+0x120]
   140027c0e:	mov    r8d,esi
   140027c11:	mov    edx,r12d
   140027c14:	mov    QWORD PTR [rsp+0x20],rax
   140027c19:	call   0x140025344
   140027c1e:	lea    r9d,[r12+0x42]
   140027c23:	lea    rcx,[rsp+0x30]
   140027c28:	or     ebx,eax
   140027c2a:	lea    rax,[rdi+0x128]
   140027c31:	mov    r8d,esi
   140027c34:	mov    edx,r12d
   140027c37:	mov    QWORD PTR [rsp+0x20],rax
   140027c3c:	call   0x140025344
   140027c41:	lea    r9d,[r12+0x27]
   140027c46:	lea    rcx,[rsp+0x30]
   140027c4b:	or     ebx,eax
   140027c4d:	lea    rax,[rdi+0x130]
   140027c54:	mov    r8d,esi
   140027c57:	mov    edx,r12d
   140027c5a:	mov    QWORD PTR [rsp+0x20],rax
   140027c5f:	call   0x140025344
   140027c64:	lea    r9d,[r12+0x28]
   140027c69:	lea    rcx,[rsp+0x30]
   140027c6e:	or     ebx,eax
   140027c70:	lea    rax,[rdi+0x138]
   140027c77:	mov    r8d,esi
   140027c7a:	mov    edx,r12d
   140027c7d:	mov    QWORD PTR [rsp+0x20],rax
   140027c82:	call   0x140025344
   140027c87:	or     ebx,eax
   140027c89:	lea    rax,[rdi+0x140]
   140027c90:	mov    QWORD PTR [rsp+0x20],rax
   140027c95:	lea    r9d,[r12+0x1e]
   140027c9a:	lea    rcx,[rsp+0x30]
   140027c9f:	mov    r8d,ebp
   140027ca2:	mov    edx,r12d
   140027ca5:	call   0x140025344
   140027caa:	lea    r9d,[r12+0x1f]
   140027caf:	lea    rcx,[rsp+0x30]
   140027cb4:	or     ebx,eax
   140027cb6:	lea    rax,[rdi+0x148]
   140027cbd:	mov    r8d,ebp
   140027cc0:	mov    edx,r12d
   140027cc3:	mov    QWORD PTR [rsp+0x20],rax
   140027cc8:	call   0x140025344
   140027ccd:	lea    rcx,[rsp+0x30]
   140027cd2:	mov    r9d,0x1003
   140027cd8:	or     ebx,eax
   140027cda:	lea    rax,[rdi+0x150]
   140027ce1:	mov    r8d,ebp
   140027ce4:	mov    edx,r12d
   140027ce7:	mov    QWORD PTR [rsp+0x20],rax
   140027cec:	call   0x140025344
   140027cf1:	lea    rcx,[rsp+0x30]
   140027cf6:	mov    r9d,0x1009
   140027cfc:	or     ebx,eax
   140027cfe:	lea    rax,[rdi+0x15c]
   140027d05:	mov    r8d,ebp
   140027d08:	xor    edx,edx
   140027d0a:	mov    QWORD PTR [rsp+0x20],rax
   140027d0f:	call   0x140025344
   140027d14:	mov    DWORD PTR [rdi+0x158],ebp
   140027d1a:	or     eax,ebx
   140027d1c:	mov    rbx,QWORD PTR [rsp+0x50]
   140027d21:	mov    rbp,QWORD PTR [rsp+0x58]
   140027d26:	mov    rsi,QWORD PTR [rsp+0x60]
   140027d2b:	mov    rdi,QWORD PTR [rsp+0x68]
   140027d30:	add    rsp,0x40
   140027d34:	pop    r12
   140027d36:	ret    
   140027d37:	int3   
   140027d38:	test   rcx,rcx
   140027d3b:	je     0x140027f21
   140027d41:	push   rbx
   140027d42:	sub    rsp,0x20
   140027d46:	mov    rbx,rcx
   140027d49:	mov    rcx,QWORD PTR [rcx+0x8]
   140027d4d:	call   0x14001ca48
   140027d52:	mov    rcx,QWORD PTR [rbx+0x10]
   140027d56:	call   0x14001ca48
   140027d5b:	mov    rcx,QWORD PTR [rbx+0x18]
   140027d5f:	call   0x14001ca48
   140027d64:	mov    rcx,QWORD PTR [rbx+0x20]
   140027d68:	call   0x14001ca48
   140027d6d:	mov    rcx,QWORD PTR [rbx+0x28]
   140027d71:	call   0x14001ca48
   140027d76:	mov    rcx,QWORD PTR [rbx+0x30]
   140027d7a:	call   0x14001ca48
   140027d7f:	mov    rcx,QWORD PTR [rbx]
   140027d82:	call   0x14001ca48
   140027d87:	mov    rcx,QWORD PTR [rbx+0x40]
   140027d8b:	call   0x14001ca48
   140027d90:	mov    rcx,QWORD PTR [rbx+0x48]
   140027d94:	call   0x14001ca48
   140027d99:	mov    rcx,QWORD PTR [rbx+0x50]
   140027d9d:	call   0x14001ca48
   140027da2:	mov    rcx,QWORD PTR [rbx+0x58]
   140027da6:	call   0x14001ca48
   140027dab:	mov    rcx,QWORD PTR [rbx+0x60]
   140027daf:	call   0x14001ca48
   140027db4:	mov    rcx,QWORD PTR [rbx+0x68]
   140027db8:	call   0x14001ca48
   140027dbd:	mov    rcx,QWORD PTR [rbx+0x38]
   140027dc1:	call   0x14001ca48
   140027dc6:	mov    rcx,QWORD PTR [rbx+0x70]
   140027dca:	call   0x14001ca48
   140027dcf:	mov    rcx,QWORD PTR [rbx+0x78]
   140027dd3:	call   0x14001ca48
   140027dd8:	mov    rcx,QWORD PTR [rbx+0x80]
   140027ddf:	call   0x14001ca48
   140027de4:	mov    rcx,QWORD PTR [rbx+0x88]
   140027deb:	call   0x14001ca48
   140027df0:	mov    rcx,QWORD PTR [rbx+0x90]
   140027df7:	call   0x14001ca48
   140027dfc:	mov    rcx,QWORD PTR [rbx+0x98]
   140027e03:	call   0x14001ca48
   140027e08:	mov    rcx,QWORD PTR [rbx+0xa0]
   140027e0f:	call   0x14001ca48
   140027e14:	mov    rcx,QWORD PTR [rbx+0xa8]
   140027e1b:	call   0x14001ca48
   140027e20:	mov    rcx,QWORD PTR [rbx+0xb0]
   140027e27:	call   0x14001ca48
   140027e2c:	mov    rcx,QWORD PTR [rbx+0xb8]
   140027e33:	call   0x14001ca48
   140027e38:	mov    rcx,QWORD PTR [rbx+0xc0]
   140027e3f:	call   0x14001ca48
   140027e44:	mov    rcx,QWORD PTR [rbx+0xc8]
   140027e4b:	call   0x14001ca48
   140027e50:	mov    rcx,QWORD PTR [rbx+0xd0]
   140027e57:	call   0x14001ca48
   140027e5c:	mov    rcx,QWORD PTR [rbx+0xd8]
   140027e63:	call   0x14001ca48
   140027e68:	mov    rcx,QWORD PTR [rbx+0xe0]
   140027e6f:	call   0x14001ca48
   140027e74:	mov    rcx,QWORD PTR [rbx+0xe8]
   140027e7b:	call   0x14001ca48
   140027e80:	mov    rcx,QWORD PTR [rbx+0xf0]
   140027e87:	call   0x14001ca48
   140027e8c:	mov    rcx,QWORD PTR [rbx+0xf8]
   140027e93:	call   0x14001ca48
   140027e98:	mov    rcx,QWORD PTR [rbx+0x100]
   140027e9f:	call   0x14001ca48
   140027ea4:	mov    rcx,QWORD PTR [rbx+0x108]
   140027eab:	call   0x14001ca48
   140027eb0:	mov    rcx,QWORD PTR [rbx+0x110]
   140027eb7:	call   0x14001ca48
   140027ebc:	mov    rcx,QWORD PTR [rbx+0x118]
   140027ec3:	call   0x14001ca48
   140027ec8:	mov    rcx,QWORD PTR [rbx+0x120]
   140027ecf:	call   0x14001ca48
   140027ed4:	mov    rcx,QWORD PTR [rbx+0x128]
   140027edb:	call   0x14001ca48
   140027ee0:	mov    rcx,QWORD PTR [rbx+0x130]
   140027ee7:	call   0x14001ca48
   140027eec:	mov    rcx,QWORD PTR [rbx+0x138]
   140027ef3:	call   0x14001ca48
   140027ef8:	mov    rcx,QWORD PTR [rbx+0x140]
   140027eff:	call   0x14001ca48
   140027f04:	mov    rcx,QWORD PTR [rbx+0x148]
   140027f0b:	call   0x14001ca48
   140027f10:	mov    rcx,QWORD PTR [rbx+0x150]
   140027f17:	call   0x14001ca48
   140027f1c:	add    rsp,0x20
   140027f20:	pop    rbx
   140027f21:	ret    
   140027f22:	int3   
   140027f23:	int3   
   140027f24:	mov    QWORD PTR [rsp+0x8],rbx
   140027f29:	mov    QWORD PTR [rsp+0x10],rbp
   140027f2e:	push   rdi
   140027f2f:	sub    rsp,0x20
   140027f33:	cmp    DWORD PTR [rcx+0x20],0x0
   140027f37:	mov    rdi,rcx
   140027f3a:	lea    rbp,[rip+0x221ff]        # 0x14004a140
   140027f41:	je     0x140027f8e
   140027f43:	mov    edx,0x168
   140027f48:	mov    ecx,0x1
   140027f4d:	call   0x140020950
   140027f52:	mov    rbx,rax
   140027f55:	test   rax,rax
   140027f58:	jne    0x140027f61
   140027f5a:	mov    eax,0x1
   140027f5f:	jmp    0x140027fae
   140027f61:	mov    rdx,rdi
   140027f64:	mov    rcx,rax
   140027f67:	call   0x140027704
   140027f6c:	test   eax,eax
   140027f6e:	je     0x140027f82
   140027f70:	mov    rcx,rbx
   140027f73:	call   0x140027d38
   140027f78:	mov    rcx,rbx
   140027f7b:	call   0x14001ca48
   140027f80:	jmp    0x140027f5a
   140027f82:	mov    DWORD PTR [rbx+0x160],0x1
   140027f8c:	jmp    0x140027f91
   140027f8e:	mov    rbx,rbp
   140027f91:	mov    rax,QWORD PTR [rdi+0x158]
   140027f98:	cmp    rax,rbp
   140027f9b:	je     0x140027fa5
   140027f9d:	lock add DWORD PTR [rax+0x160],0xffffffff
   140027fa5:	mov    QWORD PTR [rdi+0x158],rbx
   140027fac:	xor    eax,eax
   140027fae:	mov    rbx,QWORD PTR [rsp+0x30]
   140027fb3:	mov    rbp,QWORD PTR [rsp+0x38]
   140027fb8:	add    rsp,0x20
   140027fbc:	pop    rdi
   140027fbd:	ret    
   140027fbe:	int3   
   140027fbf:	int3   
   140027fc0:	test   rcx,rcx
   140027fc3:	je     0x140028007
   140027fc5:	push   rbx
   140027fc6:	sub    rsp,0x20
   140027fca:	mov    rbx,rcx
   140027fcd:	mov    rcx,QWORD PTR [rcx]
   140027fd0:	cmp    rcx,QWORD PTR [rip+0x21289]        # 0x140049260
   140027fd7:	je     0x140027fde
   140027fd9:	call   0x14001ca48
   140027fde:	mov    rcx,QWORD PTR [rbx+0x8]
   140027fe2:	cmp    rcx,QWORD PTR [rip+0x2127f]        # 0x140049268
   140027fe9:	je     0x140027ff0
   140027feb:	call   0x14001ca48
   140027ff0:	mov    rcx,QWORD PTR [rbx+0x10]
   140027ff4:	cmp    rcx,QWORD PTR [rip+0x21275]        # 0x140049270
   140027ffb:	je     0x140028002
   140027ffd:	call   0x14001ca48
   140028002:	add    rsp,0x20
   140028006:	pop    rbx
   140028007:	ret    
   140028008:	mov    rax,rsp
   14002800b:	mov    QWORD PTR [rax+0x8],rbx
   14002800f:	mov    QWORD PTR [rax+0x10],rbp
   140028013:	mov    QWORD PTR [rax+0x18],rsi
   140028017:	push   rdi
   140028018:	push   r12
   14002801a:	push   r13
   14002801c:	push   r14
   14002801e:	push   r15
   140028020:	sub    rsp,0x40
   140028024:	xor    ebx,ebx
   140028026:	mov    rsi,rcx
   140028029:	mov    QWORD PTR [rax-0x38],rcx
   14002802d:	mov    QWORD PTR [rax-0x30],rbx
   140028031:	cmp    DWORD PTR [rcx+0x1c],ebx
   140028034:	jne    0x14002804d
   140028036:	cmp    DWORD PTR [rcx+0x18],ebx
   140028039:	jne    0x14002804d
   14002803b:	mov    r13,rbx
   14002803e:	mov    r14,rbx
   140028041:	lea    rbp,[rip+0x21218]        # 0x140049260
   140028048:	jmp    0x1400281a5
   14002804d:	mov    edi,0x58
   140028052:	mov    rdx,rdi
   140028055:	lea    r12d,[rdi-0x57]
   140028059:	mov    rcx,r12
   14002805c:	call   0x140020950
   140028061:	mov    rbp,rax
   140028064:	cmp    rax,rbx
   140028067:	jne    0x140028071
   140028069:	mov    eax,r12d
   14002806c:	jmp    0x1400281f6
   140028071:	mov    rdx,QWORD PTR [rsi+0x128]
   140028078:	mov    rcx,rax
   14002807b:	mov    r8,rdi
   14002807e:	call   0x1400205b0
   140028083:	mov    edi,0x4
   140028088:	mov    rcx,rdi
   14002808b:	call   0x1400208e4
   140028090:	mov    r14,rax
   140028093:	cmp    rax,rbx
   140028096:	jne    0x1400280a2
   140028098:	mov    rcx,rbp
   14002809b:	call   0x14001ca48
   1400280a0:	jmp    0x140028069
   1400280a2:	mov    DWORD PTR [rax],ebx
   1400280a4:	cmp    DWORD PTR [rsi+0x1c],ebx
   1400280a7:	je     0x140028175
   1400280ad:	mov    rcx,rdi
   1400280b0:	call   0x1400208e4
   1400280b5:	mov    r13,rax
   1400280b8:	cmp    rax,rbx
   1400280bb:	je     0x140028130
   1400280bd:	mov    DWORD PTR [rax],ebx
   1400280bf:	movzx  edi,WORD PTR [rsi+0x3e]
   1400280c3:	lea    rcx,[rsp+0x30]
   1400280c8:	mov    r9d,0xe
   1400280ce:	mov    edx,r12d
   1400280d1:	mov    r8d,edi
   1400280d4:	mov    QWORD PTR [rsp+0x20],rbp
   1400280d9:	call   0x140025344
   1400280de:	lea    rcx,[rbp+0x8]
   1400280e2:	mov    QWORD PTR [rsp+0x20],rcx
   1400280e7:	lea    rcx,[rsp+0x30]
   1400280ec:	mov    r9d,0xf
   1400280f2:	mov    r8d,edi
   1400280f5:	mov    edx,r12d
   1400280f8:	mov    ebx,eax
   1400280fa:	call   0x140025344
   1400280ff:	lea    r15,[rbp+0x10]
   140028103:	lea    rcx,[rsp+0x30]
   140028108:	mov    r9d,0x10
   14002810e:	mov    r8d,edi
   140028111:	mov    edx,r12d
   140028114:	or     ebx,eax
   140028116:	mov    QWORD PTR [rsp+0x20],r15
   14002811b:	call   0x140025344
   140028120:	or     eax,ebx
   140028122:	je     0x140028140
   140028124:	mov    rcx,rbp
   140028127:	call   0x140027fc0
   14002812c:	or     r12d,0xffffffff
   140028130:	mov    rcx,rbp
   140028133:	call   0x14001ca48
   140028138:	mov    rcx,r14
   14002813b:	jmp    0x14002809b
   140028140:	mov    rdx,QWORD PTR [r15]
   140028143:	xor    ebx,ebx
   140028145:	jmp    0x140028158
   140028147:	mov    al,BYTE PTR [rdx]
   140028149:	cmp    al,0x30
   14002814b:	jl     0x14002815e
   14002814d:	cmp    al,0x39
   14002814f:	jg     0x14002815e
   140028151:	sub    al,0x30
   140028153:	mov    BYTE PTR [rdx],al
   140028155:	add    rdx,r12
   140028158:	cmp    BYTE PTR [rdx],bl
   14002815a:	jne    0x140028147
   14002815c:	jmp    0x140028199
   14002815e:	cmp    al,0x3b
   140028160:	jne    0x140028155
   140028162:	mov    r8,rdx
   140028165:	mov    al,BYTE PTR [r8+0x1]
   140028169:	mov    BYTE PTR [r8],al
   14002816c:	inc    r8
   14002816f:	cmp    al,bl
   140028171:	jne    0x140028165
   140028173:	jmp    0x140028158
   140028175:	mov    rax,QWORD PTR [rip+0x210e4]        # 0x140049260
   14002817c:	mov    r13,rbx
   14002817f:	mov    QWORD PTR [rbp+0x0],rax
   140028183:	mov    rax,QWORD PTR [rip+0x210de]        # 0x140049268
   14002818a:	mov    QWORD PTR [rbp+0x8],rax
   14002818e:	mov    rax,QWORD PTR [rip+0x210db]        # 0x140049270
   140028195:	mov    QWORD PTR [rbp+0x10],rax
   140028199:	mov    DWORD PTR [r14],r12d
   14002819c:	cmp    r13,rbx
   14002819f:	je     0x1400281a5
   1400281a1:	mov    DWORD PTR [r13+0x0],r12d
   1400281a5:	mov    rax,QWORD PTR [rsi+0x118]
   1400281ac:	cmp    rax,rbx
   1400281af:	je     0x1400281b5
   1400281b1:	lock add DWORD PTR [rax],0xffffffff
   1400281b5:	mov    rcx,QWORD PTR [rsi+0x110]
   1400281bc:	cmp    rcx,rbx
   1400281bf:	je     0x1400281df
   1400281c1:	lock add DWORD PTR [rcx],0xffffffff
   1400281c5:	jne    0x1400281df
   1400281c7:	mov    rcx,QWORD PTR [rsi+0x110]
   1400281ce:	call   0x14001ca48
   1400281d3:	mov    rcx,QWORD PTR [rsi+0x128]
   1400281da:	call   0x14001ca48
   1400281df:	mov    QWORD PTR [rsi+0x118],r13
   1400281e6:	mov    QWORD PTR [rsi+0x110],r14
   1400281ed:	mov    QWORD PTR [rsi+0x128],rbp
   1400281f4:	xor    eax,eax
   1400281f6:	lea    r11,[rsp+0x40]
   1400281fb:	mov    rbx,QWORD PTR [r11+0x30]
   1400281ff:	mov    rbp,QWORD PTR [r11+0x38]
   140028203:	mov    rsi,QWORD PTR [r11+0x40]
   140028207:	mov    rsp,r11
   14002820a:	pop    r15
   14002820c:	pop    r14
   14002820e:	pop    r13
   140028210:	pop    r12
   140028212:	pop    rdi
   140028213:	ret    
   140028214:	test   rcx,rcx
   140028217:	je     0x1400282a8
   14002821d:	push   rbx
   14002821e:	sub    rsp,0x20
   140028222:	mov    rbx,rcx
   140028225:	mov    rcx,QWORD PTR [rcx+0x18]
   140028229:	cmp    rcx,QWORD PTR [rip+0x21048]        # 0x140049278
   140028230:	je     0x140028237
   140028232:	call   0x14001ca48
   140028237:	mov    rcx,QWORD PTR [rbx+0x20]
   14002823b:	cmp    rcx,QWORD PTR [rip+0x2103e]        # 0x140049280
   140028242:	je     0x140028249
   140028244:	call   0x14001ca48
   140028249:	mov    rcx,QWORD PTR [rbx+0x28]
   14002824d:	cmp    rcx,QWORD PTR [rip+0x21034]        # 0x140049288
   140028254:	je     0x14002825b
   140028256:	call   0x14001ca48
   14002825b:	mov    rcx,QWORD PTR [rbx+0x30]
   14002825f:	cmp    rcx,QWORD PTR [rip+0x2102a]        # 0x140049290
   140028266:	je     0x14002826d
   140028268:	call   0x14001ca48
   14002826d:	mov    rcx,QWORD PTR [rbx+0x38]
   140028271:	cmp    rcx,QWORD PTR [rip+0x21020]        # 0x140049298
   140028278:	je     0x14002827f
   14002827a:	call   0x14001ca48
   14002827f:	mov    rcx,QWORD PTR [rbx+0x40]
   140028283:	cmp    rcx,QWORD PTR [rip+0x21016]        # 0x1400492a0
   14002828a:	je     0x140028291
   14002828c:	call   0x14001ca48
   140028291:	mov    rcx,QWORD PTR [rbx+0x48]
   140028295:	cmp    rcx,QWORD PTR [rip+0x2100c]        # 0x1400492a8
   14002829c:	je     0x1400282a3
   14002829e:	call   0x14001ca48
   1400282a3:	add    rsp,0x20
   1400282a7:	pop    rbx
   1400282a8:	ret    
   1400282a9:	int3   
   1400282aa:	int3   
   1400282ab:	int3   
   1400282ac:	mov    rax,rsp
   1400282af:	mov    QWORD PTR [rax+0x8],rbx
   1400282b3:	mov    QWORD PTR [rax+0x10],rbp
   1400282b7:	mov    QWORD PTR [rax+0x18],rsi
   1400282bb:	mov    QWORD PTR [rax+0x20],rdi
   1400282bf:	push   r12
   1400282c1:	push   r13
   1400282c3:	push   r14
   1400282c5:	sub    rsp,0x40
   1400282c9:	xor    r12d,r12d
   1400282cc:	mov    rsi,rcx
   1400282cf:	mov    QWORD PTR [rax-0x28],rcx
   1400282d3:	and    QWORD PTR [rax-0x20],r12
   1400282d7:	cmp    DWORD PTR [rcx+0x18],r12d
   1400282db:	jne    0x1400282f2
   1400282dd:	cmp    DWORD PTR [rcx+0x1c],r12d
   1400282e1:	jne    0x1400282f2
   1400282e3:	xor    r13d,r13d
   1400282e6:	lea    rbp,[rip+0x20f73]        # 0x140049260
   1400282ed:	jmp    0x1400285fb
   1400282f2:	mov    edi,0x58
   1400282f7:	mov    rdx,rdi
   1400282fa:	lea    ecx,[rdi-0x57]
   1400282fd:	call   0x140020950
   140028302:	mov    rbp,rax
   140028305:	test   rax,rax
   140028308:	jne    0x140028314
   14002830a:	mov    eax,0x1
   14002830f:	jmp    0x14002864c
   140028314:	mov    ebx,0x4
   140028319:	mov    rcx,rbx
   14002831c:	call   0x1400208e4
   140028321:	mov    r13,rax
   140028324:	test   rax,rax
   140028327:	jne    0x140028333
   140028329:	mov    rcx,rbp
   14002832c:	call   0x14001ca48
   140028331:	jmp    0x14002830a
   140028333:	and    DWORD PTR [rax],r12d
   140028336:	cmp    DWORD PTR [rsi+0x18],r12d
   14002833a:	je     0x1400285a8
   140028340:	mov    rcx,rbx
   140028343:	call   0x1400208e4
   140028348:	mov    r12,rax
   14002834b:	test   rax,rax
   14002834e:	jne    0x14002835d
   140028350:	mov    rcx,rbp
   140028353:	call   0x14001ca48
   140028358:	mov    rcx,r13
   14002835b:	jmp    0x14002832c
   14002835d:	and    DWORD PTR [rax],0x0
   140028360:	movzx  edi,WORD PTR [rsi+0x38]
   140028364:	mov    r9d,0x15
   14002836a:	lea    rax,[rbp+0x18]
   14002836e:	lea    edx,[r9-0x14]
   140028372:	lea    rcx,[rsp+0x30]
   140028377:	mov    r8d,edi
   14002837a:	mov    QWORD PTR [rsp+0x20],rax
   14002837f:	call   0x140025344
   140028384:	lea    rcx,[rbp+0x20]
   140028388:	mov    r9d,0x14
   14002838e:	mov    QWORD PTR [rsp+0x20],rcx
   140028393:	lea    edx,[r9-0x13]
   140028397:	lea    rcx,[rsp+0x30]
   14002839c:	mov    r8d,edi
   14002839f:	mov    ebx,eax
   1400283a1:	call   0x140025344
   1400283a6:	lea    rcx,[rbp+0x28]
   1400283aa:	mov    r9d,0x16
   1400283b0:	mov    QWORD PTR [rsp+0x20],rcx
   1400283b5:	lea    edx,[r9-0x15]
   1400283b9:	lea    rcx,[rsp+0x30]
   1400283be:	mov    r8d,edi
   1400283c1:	or     ebx,eax
   1400283c3:	call   0x140025344
   1400283c8:	mov    r9d,0x17
   1400283ce:	lea    rcx,[rsp+0x30]
   1400283d3:	or     ebx,eax
   1400283d5:	lea    rax,[rbp+0x30]
   1400283d9:	lea    edx,[r9-0x16]
   1400283dd:	mov    r8d,edi
   1400283e0:	mov    QWORD PTR [rsp+0x20],rax
   1400283e5:	call   0x140025344
   1400283ea:	mov    r9d,0x18
   1400283f0:	lea    r14,[rbp+0x38]
   1400283f4:	lea    rcx,[rsp+0x30]
   1400283f9:	lea    edx,[r9-0x17]
   1400283fd:	mov    r8d,edi
   140028400:	or     ebx,eax
   140028402:	mov    QWORD PTR [rsp+0x20],r14
   140028407:	call   0x140025344
   14002840c:	mov    r9d,0x50
   140028412:	or     ebx,eax
   140028414:	lea    rax,[rbp+0x40]
   140028418:	lea    rcx,[rsp+0x30]
   14002841d:	lea    edx,[r9-0x4f]
   140028421:	mov    r8d,edi
   140028424:	mov    QWORD PTR [rsp+0x20],rax
   140028429:	call   0x140025344
   14002842e:	mov    r9d,0x51
   140028434:	or     ebx,eax
   140028436:	lea    rax,[rbp+0x48]
   14002843a:	lea    rcx,[rsp+0x30]
   14002843f:	lea    edx,[r9-0x50]
   140028443:	mov    r8d,edi
   140028446:	mov    QWORD PTR [rsp+0x20],rax
   14002844b:	call   0x140025344
   140028450:	lea    rcx,[rsp+0x30]
   140028455:	mov    r9d,0x1a
   14002845b:	or     ebx,eax
   14002845d:	lea    rax,[rbp+0x50]
   140028461:	mov    r8d,edi
   140028464:	xor    edx,edx
   140028466:	mov    QWORD PTR [rsp+0x20],rax
   14002846b:	call   0x140025344
   140028470:	lea    rcx,[rsp+0x30]
   140028475:	mov    r9d,0x19
   14002847b:	or     ebx,eax
   14002847d:	lea    rax,[rbp+0x51]
   140028481:	mov    r8d,edi
   140028484:	xor    edx,edx
   140028486:	mov    QWORD PTR [rsp+0x20],rax
   14002848b:	call   0x140025344
   140028490:	lea    rcx,[rsp+0x30]
   140028495:	mov    r9d,0x54
   14002849b:	or     ebx,eax
   14002849d:	lea    rax,[rbp+0x52]
   1400284a1:	mov    r8d,edi
   1400284a4:	xor    edx,edx
   1400284a6:	mov    QWORD PTR [rsp+0x20],rax
   1400284ab:	call   0x140025344
   1400284b0:	or     ebx,eax
   1400284b2:	lea    rax,[rbp+0x53]
   1400284b6:	lea    rcx,[rsp+0x30]
   1400284bb:	mov    r9d,0x55
   1400284c1:	mov    r8d,edi
   1400284c4:	xor    edx,edx
   1400284c6:	mov    QWORD PTR [rsp+0x20],rax
   1400284cb:	call   0x140025344
   1400284d0:	lea    rcx,[rsp+0x30]
   1400284d5:	or     ebx,eax
   1400284d7:	lea    rax,[rbp+0x54]
   1400284db:	mov    r9d,0x56
   1400284e1:	mov    r8d,edi
   1400284e4:	xor    edx,edx
   1400284e6:	mov    QWORD PTR [rsp+0x20],rax
   1400284eb:	call   0x140025344
   1400284f0:	lea    rcx,[rsp+0x30]
   1400284f5:	mov    r9d,0x57
   1400284fb:	or     ebx,eax
   1400284fd:	lea    rax,[rbp+0x55]
   140028501:	mov    r8d,edi
   140028504:	xor    edx,edx
   140028506:	mov    QWORD PTR [rsp+0x20],rax
   14002850b:	call   0x140025344
   140028510:	lea    rcx,[rsp+0x30]
   140028515:	mov    r9d,0x52
   14002851b:	or     ebx,eax
   14002851d:	lea    rax,[rbp+0x56]
   140028521:	mov    r8d,edi
   140028524:	xor    edx,edx
   140028526:	mov    QWORD PTR [rsp+0x20],rax
   14002852b:	call   0x140025344
   140028530:	lea    rcx,[rsp+0x30]
   140028535:	mov    r9d,0x53
   14002853b:	or     ebx,eax
   14002853d:	lea    rax,[rbp+0x57]
   140028541:	mov    r8d,edi
   140028544:	xor    edx,edx
   140028546:	mov    QWORD PTR [rsp+0x20],rax
   14002854b:	call   0x140025344
   140028550:	or     eax,ebx
   140028552:	je     0x140028574
   140028554:	mov    rcx,rbp
   140028557:	call   0x140028214
   14002855c:	mov    rcx,rbp
   14002855f:	call   0x14001ca48
   140028564:	mov    rcx,r13
   140028567:	call   0x14001ca48
   14002856c:	mov    rcx,r12
   14002856f:	jmp    0x14002832c
   140028574:	mov    rdx,QWORD PTR [r14]
   140028577:	jmp    0x14002858a
   140028579:	mov    al,BYTE PTR [rdx]
   14002857b:	cmp    al,0x30
   14002857d:	jl     0x140028591
   14002857f:	cmp    al,0x39
   140028581:	jg     0x140028591
   140028583:	sub    al,0x30
   140028585:	mov    BYTE PTR [rdx],al
   140028587:	inc    rdx
   14002858a:	cmp    BYTE PTR [rdx],0x0
   14002858d:	jne    0x140028579
   14002858f:	jmp    0x1400285ba
   140028591:	cmp    al,0x3b
   140028593:	jne    0x140028587
   140028595:	mov    r8,rdx
   140028598:	mov    al,BYTE PTR [r8+0x1]
   14002859c:	mov    BYTE PTR [r8],al
   14002859f:	inc    r8
   1400285a2:	cmp    al,0x0
   1400285a4:	jne    0x140028598
   1400285a6:	jmp    0x14002858a
   1400285a8:	lea    rdx,[rip+0x20cb1]        # 0x140049260
   1400285af:	mov    rcx,rbp
   1400285b2:	mov    r8,rdi
   1400285b5:	call   0x1400205b0
   1400285ba:	mov    rax,QWORD PTR [rsi+0x128]
   1400285c1:	mov    rcx,QWORD PTR [rax]
   1400285c4:	mov    QWORD PTR [rbp+0x0],rcx
   1400285c8:	mov    rax,QWORD PTR [rsi+0x128]
   1400285cf:	mov    rcx,QWORD PTR [rax+0x8]
   1400285d3:	mov    QWORD PTR [rbp+0x8],rcx
   1400285d7:	mov    rax,QWORD PTR [rsi+0x128]
   1400285de:	mov    rcx,QWORD PTR [rax+0x10]
   1400285e2:	mov    QWORD PTR [rbp+0x10],rcx
   1400285e6:	mov    DWORD PTR [r13+0x0],0x1
   1400285ee:	test   r12,r12
   1400285f1:	je     0x1400285fb
   1400285f3:	mov    DWORD PTR [r12],0x1
   1400285fb:	mov    rax,QWORD PTR [rsi+0x120]
   140028602:	test   rax,rax
   140028605:	je     0x14002860b
   140028607:	lock add DWORD PTR [rax],0xffffffff
   14002860b:	mov    rcx,QWORD PTR [rsi+0x110]
   140028612:	test   rcx,rcx
   140028615:	je     0x140028635
   140028617:	lock add DWORD PTR [rcx],0xffffffff
   14002861b:	jne    0x140028635
   14002861d:	mov    rcx,QWORD PTR [rsi+0x128]
   140028624:	call   0x14001ca48
   140028629:	mov    rcx,QWORD PTR [rsi+0x110]
   140028630:	call   0x14001ca48
   140028635:	mov    QWORD PTR [rsi+0x120],r12
   14002863c:	mov    QWORD PTR [rsi+0x110],r13
   140028643:	mov    QWORD PTR [rsi+0x128],rbp
   14002864a:	xor    eax,eax
   14002864c:	mov    rbx,QWORD PTR [rsp+0x60]
   140028651:	mov    rbp,QWORD PTR [rsp+0x68]
   140028656:	mov    rsi,QWORD PTR [rsp+0x70]
   14002865b:	mov    rdi,QWORD PTR [rsp+0x78]
   140028660:	add    rsp,0x40
   140028664:	pop    r14
   140028666:	pop    r13
   140028668:	pop    r12
   14002866a:	ret    
   14002866b:	int3   
   14002866c:	xor    eax,eax
   14002866e:	ret    
   14002866f:	int3   
   140028670:	mov    QWORD PTR [rsp+0x8],rbx
   140028675:	mov    QWORD PTR [rsp+0x10],rsi
   14002867a:	mov    QWORD PTR [rsp+0x18],rdi
   14002867f:	push   r12
   140028681:	sub    rsp,0x20
   140028685:	lea    r12,[rip+0x21c24]        # 0x14004a2b0
   14002868c:	xor    esi,esi
   14002868e:	xor    edi,edi
   140028690:	mov    rbx,r12
   140028693:	cmp    DWORD PTR [rbx+0x8],0x1
   140028697:	jne    0x1400286be
   140028699:	movsxd rax,esi
   14002869c:	mov    edx,0xfa0
   1400286a1:	inc    esi
   1400286a3:	lea    rcx,[rax+rax*4]
   1400286a7:	lea    rax,[rip+0x24022]        # 0x14004c6d0
   1400286ae:	lea    rcx,[rax+rcx*8]
   1400286b2:	mov    QWORD PTR [rbx],rcx
   1400286b5:	call   0x14002ca48
   1400286ba:	test   eax,eax
   1400286bc:	je     0x1400286eb
   1400286be:	lea    rax,[rip+0x21e2b]        # 0x14004a4f0
   1400286c5:	add    rbx,0x10
   1400286c9:	inc    edi
   1400286cb:	cmp    rbx,rax
   1400286ce:	jl     0x140028693
   1400286d0:	mov    eax,0x1
   1400286d5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400286da:	mov    rsi,QWORD PTR [rsp+0x38]
   1400286df:	mov    rdi,QWORD PTR [rsp+0x40]
   1400286e4:	add    rsp,0x20
   1400286e8:	pop    r12
   1400286ea:	ret    
   1400286eb:	movsxd rax,edi
   1400286ee:	add    rax,rax
   1400286f1:	and    QWORD PTR [r12+rax*8],0x0
   1400286f6:	xor    eax,eax
   1400286f8:	jmp    0x1400286d5
   1400286fa:	int3   
   1400286fb:	int3   
   1400286fc:	mov    QWORD PTR [rsp+0x8],rbx
   140028701:	mov    QWORD PTR [rsp+0x10],rbp
   140028706:	mov    QWORD PTR [rsp+0x18],rsi
   14002870b:	push   rdi
   14002870c:	sub    rsp,0x20
   140028710:	lea    rbx,[rip+0x21b99]        # 0x14004a2b0
   140028717:	lea    rbp,[rip+0x21dd2]        # 0x14004a4f0
   14002871e:	mov    rdi,rbx
   140028721:	mov    rsi,QWORD PTR [rdi]
   140028724:	test   rsi,rsi
   140028727:	je     0x140028744
   140028729:	cmp    DWORD PTR [rdi+0x8],0x1
   14002872d:	je     0x140028744
   14002872f:	mov    rcx,rsi
   140028732:	call   QWORD PTR [rip+0x119c0]        # 0x14003a0f8
   140028738:	mov    rcx,rsi
   14002873b:	call   0x14001ca48
   140028740:	and    QWORD PTR [rdi],0x0
   140028744:	add    rdi,0x10
   140028748:	cmp    rdi,rbp
   14002874b:	jl     0x140028721
   14002874d:	mov    rcx,QWORD PTR [rbx]
   140028750:	test   rcx,rcx
   140028753:	je     0x140028761
   140028755:	cmp    DWORD PTR [rbx+0x8],0x1
   140028759:	jne    0x140028761
   14002875b:	call   QWORD PTR [rip+0x11997]        # 0x14003a0f8
   140028761:	add    rbx,0x10
   140028765:	cmp    rbx,rbp
   140028768:	jl     0x14002874d
   14002876a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002876f:	mov    rbp,QWORD PTR [rsp+0x38]
   140028774:	mov    rsi,QWORD PTR [rsp+0x40]
   140028779:	add    rsp,0x20
   14002877d:	pop    rdi
   14002877e:	ret    
   14002877f:	int3   
   140028780:	movsxd rcx,ecx
   140028783:	lea    rax,[rip+0x21b26]        # 0x14004a2b0
   14002878a:	add    rcx,rcx
   14002878d:	mov    rcx,QWORD PTR [rax+rcx*8]
   140028791:	rex.W jmp QWORD PTR [rip+0x11918]        # 0x14003a0b0
   140028798:	mov    QWORD PTR [rsp+0x8],rbx
   14002879d:	mov    QWORD PTR [rsp+0x10],rsi
   1400287a2:	mov    QWORD PTR [rsp+0x18],rdi
   1400287a7:	push   r13
   1400287a9:	sub    rsp,0x20
   1400287ad:	movsxd rbx,ecx
   1400287b0:	mov    esi,0x1
   1400287b5:	cmp    QWORD PTR [rip+0x238d3],0x0        # 0x14004c090
   1400287bd:	jne    0x1400287d6
   1400287bf:	call   0x140025300
   1400287c4:	lea    ecx,[rsi+0x1d]
   1400287c7:	call   0x1400250d8
   1400287cc:	mov    ecx,0xff
   1400287d1:	call   0x140024404
   1400287d6:	mov    rdi,rbx
   1400287d9:	add    rdi,rdi
   1400287dc:	lea    r13,[rip+0x21acd]        # 0x14004a2b0
   1400287e3:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   1400287e9:	je     0x1400287ef
   1400287eb:	mov    eax,esi
   1400287ed:	jmp    0x14002886a
   1400287ef:	mov    ecx,0x28
   1400287f4:	call   0x1400208e4
   1400287f9:	mov    rbx,rax
   1400287fc:	test   rax,rax
   1400287ff:	jne    0x140028810
   140028801:	call   0x140020aa4
   140028806:	mov    DWORD PTR [rax],0xc
   14002880c:	xor    eax,eax
   14002880e:	jmp    0x14002886a
   140028810:	mov    ecx,0xa
   140028815:	call   0x140028880
   14002881a:	nop
   14002881b:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   140028821:	jne    0x140028852
   140028823:	mov    edx,0xfa0
   140028828:	mov    rcx,rbx
   14002882b:	call   0x14002ca48
   140028830:	test   eax,eax
   140028832:	jne    0x14002884b
   140028834:	mov    rcx,rbx
   140028837:	call   0x14001ca48
   14002883c:	call   0x140020aa4
   140028841:	mov    DWORD PTR [rax],0xc
   140028847:	xor    esi,esi
   140028849:	jmp    0x14002885b
   14002884b:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   140028850:	jmp    0x14002885b
   140028852:	mov    rcx,rbx
   140028855:	call   0x14001ca48
   14002885a:	nop
   14002885b:	mov    rcx,QWORD PTR [rip+0x21aee]        # 0x14004a350
   140028862:	call   QWORD PTR [rip+0x11848]        # 0x14003a0b0
   140028868:	mov    eax,esi
   14002886a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002886f:	mov    rsi,QWORD PTR [rsp+0x38]
   140028874:	mov    rdi,QWORD PTR [rsp+0x40]
   140028879:	add    rsp,0x20
   14002887d:	pop    r13
   14002887f:	ret    
   140028880:	mov    QWORD PTR [rsp+0x8],rbx
   140028885:	push   rdi
   140028886:	sub    rsp,0x20
   14002888a:	movsxd rbx,ecx
   14002888d:	lea    rdi,[rip+0x21a1c]        # 0x14004a2b0
   140028894:	add    rbx,rbx
   140028897:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14002889c:	jne    0x1400288af
   14002889e:	call   0x140028798
   1400288a3:	test   eax,eax
   1400288a5:	jne    0x1400288af
   1400288a7:	lea    ecx,[rax+0x11]
   1400288aa:	call   0x140024398
   1400288af:	mov    rcx,QWORD PTR [rdi+rbx*8]
   1400288b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400288b8:	add    rsp,0x20
   1400288bc:	pop    rdi
   1400288bd:	rex.W jmp QWORD PTR [rip+0x117fc]        # 0x14003a0c0
   1400288c4:	rex push rbx
   1400288c6:	sub    rsp,0x30
   1400288ca:	mov    r9,rcx
   1400288cd:	test   rcx,rcx
   1400288d0:	je     0x1400288df
   1400288d2:	test   rdx,rdx
   1400288d5:	je     0x1400288df
   1400288d7:	test   r8,r8
   1400288da:	jne    0x140028908
   1400288dc:	mov    BYTE PTR [rcx],r8b
   1400288df:	call   0x140020aa4
   1400288e4:	mov    ebx,0x16
   1400288e9:	and    QWORD PTR [rsp+0x20],0x0
   1400288ef:	xor    r9d,r9d
   1400288f2:	xor    r8d,r8d
   1400288f5:	xor    edx,edx
   1400288f7:	xor    ecx,ecx
   1400288f9:	mov    DWORD PTR [rax],ebx
   1400288fb:	call   0x14001ccf0
   140028900:	mov    eax,ebx
   140028902:	add    rsp,0x30
   140028906:	pop    rbx
   140028907:	ret    
   140028908:	cmp    BYTE PTR [rcx],0x0
   14002890b:	je     0x140028916
   14002890d:	inc    rcx
   140028910:	sub    rdx,0x1
   140028914:	jne    0x140028908
   140028916:	test   rdx,rdx
   140028919:	jne    0x140028920
   14002891b:	mov    BYTE PTR [r9],dl
   14002891e:	jmp    0x1400288df
   140028920:	mov    al,BYTE PTR [r8]
   140028923:	inc    r8
   140028926:	mov    BYTE PTR [rcx],al
   140028928:	inc    rcx
   14002892b:	test   al,al
   14002892d:	je     0x140028935
   14002892f:	sub    rdx,0x1
   140028933:	jne    0x140028920
   140028935:	test   rdx,rdx
   140028938:	jne    0x140028949
   14002893a:	mov    BYTE PTR [r9],dl
   14002893d:	call   0x140020aa4
   140028942:	mov    ebx,0x22
   140028947:	jmp    0x1400288e9
   140028949:	xor    eax,eax
   14002894b:	jmp    0x140028902
   14002894d:	int3   
   14002894e:	int3   
   14002894f:	int3   
   140028950:	sub    rsp,0x38
   140028954:	mov    rax,QWORD PTR [rip+0x20b05]        # 0x140049460
   14002895b:	xor    rax,rsp
   14002895e:	mov    QWORD PTR [rsp+0x20],rax
   140028963:	mov    al,BYTE PTR [rdx]
   140028965:	xor    r9d,r9d
   140028968:	mov    r11,rdx
   14002896b:	mov    QWORD PTR [rsp],r9
   14002896f:	mov    QWORD PTR [rsp+0x8],r9
   140028974:	mov    QWORD PTR [rsp+0x10],r9
   140028979:	mov    QWORD PTR [rsp+0x18],r9
   14002897e:	mov    r10,rcx
   140028981:	jmp    0x14002899f
   140028983:	movzx  r8d,al
   140028987:	movzx  eax,al
   14002898a:	and    eax,0x7
   14002898d:	shr    r8,0x3
   140028991:	mov    cl,al
   140028993:	shl    dl,cl
   140028995:	or     BYTE PTR [rsp+r8*1],dl
   140028999:	inc    r11
   14002899c:	mov    al,BYTE PTR [r11]
   14002899f:	mov    edx,0x1
   1400289a4:	cmp    al,r9b
   1400289a7:	jne    0x140028983
   1400289a9:	or     BYTE PTR [rsp],dl
   1400289ac:	jmp    0x1400289b9
   1400289ae:	inc    r9d
   1400289b1:	mov    edx,0x1
   1400289b6:	inc    r10
   1400289b9:	movzx  r8d,BYTE PTR [r10]
   1400289bd:	mov    ecx,r8d
   1400289c0:	shr    r8,0x3
   1400289c4:	and    ecx,0x7
   1400289c7:	shl    edx,cl
   1400289c9:	test   BYTE PTR [rsp+r8*1],dl
   1400289cd:	je     0x1400289ae
   1400289cf:	movsxd rax,r9d
   1400289d2:	mov    rcx,QWORD PTR [rsp+0x20]
   1400289d7:	xor    rcx,rsp
   1400289da:	call   0x14001c500
   1400289df:	add    rsp,0x38
   1400289e3:	ret    
   1400289e4:	rex push rbx
   1400289e6:	sub    rsp,0x30
   1400289ea:	mov    r11,r8
   1400289ed:	test   r9,r9
   1400289f0:	jne    0x140028a00
   1400289f2:	test   rcx,rcx
   1400289f5:	jne    0x140028a05
   1400289f7:	test   rdx,rdx
   1400289fa:	jne    0x140028a1c
   1400289fc:	xor    eax,eax
   1400289fe:	jmp    0x140028a3f
   140028a00:	test   rcx,rcx
   140028a03:	je     0x140028a1c
   140028a05:	test   rdx,rdx
   140028a08:	je     0x140028a1c
   140028a0a:	test   r9,r9
   140028a0d:	jne    0x140028a14
   140028a0f:	mov    BYTE PTR [rcx],r9b
   140028a12:	jmp    0x1400289fc
   140028a14:	test   r8,r8
   140028a17:	jne    0x140028a45
   140028a19:	mov    BYTE PTR [rcx],r8b
   140028a1c:	call   0x140020aa4
   140028a21:	mov    ebx,0x16
   140028a26:	and    QWORD PTR [rsp+0x20],0x0
   140028a2c:	xor    r9d,r9d
   140028a2f:	xor    r8d,r8d
   140028a32:	xor    edx,edx
   140028a34:	xor    ecx,ecx
   140028a36:	mov    DWORD PTR [rax],ebx
   140028a38:	call   0x14001ccf0
   140028a3d:	mov    eax,ebx
   140028a3f:	add    rsp,0x30
   140028a43:	pop    rbx
   140028a44:	ret    
   140028a45:	mov    r10,rcx
   140028a48:	mov    r8,rdx
   140028a4b:	cmp    r9,0xffffffffffffffff
   140028a4f:	jne    0x140028a69
   140028a51:	mov    al,BYTE PTR [r11]
   140028a54:	inc    r11
   140028a57:	mov    BYTE PTR [r10],al
   140028a5a:	inc    r10
   140028a5d:	test   al,al
   140028a5f:	je     0x140028a8d
   140028a61:	sub    r8,0x1
   140028a65:	jne    0x140028a51
   140028a67:	jmp    0x140028a8d
   140028a69:	mov    al,BYTE PTR [r11]
   140028a6c:	inc    r11
   140028a6f:	mov    BYTE PTR [r10],al
   140028a72:	inc    r10
   140028a75:	test   al,al
   140028a77:	je     0x140028a85
   140028a79:	sub    r8,0x1
   140028a7d:	je     0x140028a85
   140028a7f:	sub    r9,0x1
   140028a83:	jne    0x140028a69
   140028a85:	test   r9,r9
   140028a88:	jne    0x140028a8d
   140028a8a:	mov    BYTE PTR [r10],r9b
   140028a8d:	test   r8,r8
   140028a90:	jne    0x1400289fc
   140028a96:	cmp    r9,0xffffffffffffffff
   140028a9a:	jne    0x140028aa7
   140028a9c:	mov    BYTE PTR [rcx+rdx*1-0x1],r8b
   140028aa1:	lea    eax,[r8+0x50]
   140028aa5:	jmp    0x140028a3f
   140028aa7:	mov    BYTE PTR [rcx],0x0
   140028aaa:	call   0x140020aa4
   140028aaf:	mov    ebx,0x22
   140028ab4:	jmp    0x140028a26
   140028ab9:	int3   
   140028aba:	int3   
   140028abb:	int3   
   140028abc:	mov    rax,rsp
   140028abf:	mov    QWORD PTR [rax+0x8],rbx
   140028ac3:	mov    QWORD PTR [rax+0x10],rbp
   140028ac7:	mov    QWORD PTR [rax+0x18],rsi
   140028acb:	mov    QWORD PTR [rax+0x20],rdi
   140028acf:	push   r12
   140028ad1:	push   r13
   140028ad3:	push   r14
   140028ad5:	sub    rsp,0x20
   140028ad9:	xor    ebx,ebx
   140028adb:	mov    r13,r8
   140028ade:	mov    edi,edx
   140028ae0:	cmp    edx,ebx
   140028ae2:	mov    r14,rcx
   140028ae5:	mov    eax,0x1
   140028aea:	mov    esi,ebx
   140028aec:	jl     0x140028b2d
   140028aee:	cmp    eax,ebx
   140028af0:	je     0x140028b2f
   140028af2:	mov    rcx,QWORD PTR [r13+0x0]
   140028af6:	lea    eax,[rsi+rdi*1]
   140028af9:	cdq    
   140028afa:	sub    eax,edx
   140028afc:	sar    eax,1
   140028afe:	movsxd rbp,eax
   140028b01:	mov    r12,rbp
   140028b04:	add    r12,r12
   140028b07:	mov    rdx,QWORD PTR [r14+r12*8]
   140028b0b:	call   0x14002d5b8
   140028b10:	cmp    eax,ebx
   140028b12:	jne    0x140028b1f
   140028b14:	lea    rcx,[r14+r12*8+0x8]
   140028b19:	mov    QWORD PTR [r13+0x0],rcx
   140028b1d:	jmp    0x140028b29
   140028b1f:	jge    0x140028b26
   140028b21:	lea    edi,[rbp-0x1]
   140028b24:	jmp    0x140028b29
   140028b26:	lea    esi,[rbp+0x1]
   140028b29:	cmp    esi,edi
   140028b2b:	jle    0x140028aee
   140028b2d:	cmp    eax,ebx
   140028b2f:	mov    rbp,QWORD PTR [rsp+0x48]
   140028b34:	mov    rsi,QWORD PTR [rsp+0x50]
   140028b39:	mov    rdi,QWORD PTR [rsp+0x58]
   140028b3e:	sete   bl
   140028b41:	mov    eax,ebx
   140028b43:	mov    rbx,QWORD PTR [rsp+0x40]
   140028b48:	add    rsp,0x20
   140028b4c:	pop    r14
   140028b4e:	pop    r13
   140028b50:	pop    r12
   140028b52:	ret    
   140028b53:	int3   
   140028b54:	mov    QWORD PTR [rsp+0x18],rbx
   140028b59:	push   rdi
   140028b5a:	sub    rsp,0x30
   140028b5e:	mov    rax,QWORD PTR [rip+0x208fb]        # 0x140049460
   140028b65:	xor    rax,rsp
   140028b68:	mov    QWORD PTR [rsp+0x28],rax
   140028b6d:	mov    rdi,rdx
   140028b70:	mov    rbx,rcx
   140028b73:	test   rcx,rcx
   140028b76:	je     0x140028bde
   140028b78:	cmp    BYTE PTR [rcx],0x0
   140028b7b:	je     0x140028bde
   140028b7d:	lea    rdx,[rip+0x13f38]        # 0x14003cabc
   140028b84:	call   0x140023f00
   140028b89:	test   eax,eax
   140028b8b:	je     0x140028bde
   140028b8d:	lea    rdx,[rip+0x13f24]        # 0x14003cab8
   140028b94:	mov    rcx,rbx
   140028b97:	call   0x140023f00
   140028b9c:	test   eax,eax
   140028b9e:	jne    0x140028bbe
   140028ba0:	mov    ecx,DWORD PTR [rdi+0x24]
   140028ba3:	lea    r9d,[rax+0x8]
   140028ba7:	lea    r8,[rsp+0x20]
   140028bac:	lea    edx,[rax+0xb]
   140028baf:	call   QWORD PTR [rip+0x11663]        # 0x14003a218
   140028bb5:	test   eax,eax
   140028bb7:	je     0x140028bfb
   140028bb9:	lea    rbx,[rsp+0x20]
   140028bbe:	mov    rcx,rbx
   140028bc1:	call   0x14002d60c
   140028bc6:	mov    rcx,QWORD PTR [rsp+0x28]
   140028bcb:	xor    rcx,rsp
   140028bce:	call   0x14001c500
   140028bd3:	mov    rbx,QWORD PTR [rsp+0x50]
   140028bd8:	add    rsp,0x30
   140028bdc:	pop    rdi
   140028bdd:	ret    
   140028bde:	mov    ecx,DWORD PTR [rdi+0x24]
   140028be1:	lea    r8,[rsp+0x20]
   140028be6:	mov    r9d,0x8
   140028bec:	mov    edx,0x1004
   140028bf1:	call   QWORD PTR [rip+0x11621]        # 0x14003a218
   140028bf7:	test   eax,eax
   140028bf9:	jne    0x140028bff
   140028bfb:	xor    eax,eax
   140028bfd:	jmp    0x140028bc6
   140028bff:	lea    rdx,[rip+0x13eae]        # 0x14003cab4
   140028c06:	lea    rcx,[rsp+0x20]
   140028c0b:	call   0x140023f00
   140028c10:	test   eax,eax
   140028c12:	jne    0x140028bb9
   140028c14:	call   QWORD PTR [rip+0x1157e]        # 0x14003a198
   140028c1a:	jmp    0x140028bc6
   140028c1c:	mov    dl,BYTE PTR [rcx]
   140028c1e:	mov    r8,rcx
   140028c21:	xor    r9d,r9d
   140028c24:	jmp    0x140028c4d
   140028c26:	lea    eax,[rdx-0x61]
   140028c29:	inc    r8
   140028c2c:	cmp    al,0x5
   140028c2e:	ja     0x140028c35
   140028c30:	add    dl,0xd9
   140028c33:	jmp    0x140028c3f
   140028c35:	lea    eax,[rdx-0x41]
   140028c38:	cmp    al,0x5
   140028c3a:	ja     0x140028c3f
   140028c3c:	add    dl,0xf9
   140028c3f:	movsx  ecx,dl
   140028c42:	mov    dl,BYTE PTR [r8]
   140028c45:	add    r9d,r9d
   140028c48:	lea    r9d,[rcx+r9*8-0x30]
   140028c4d:	test   dl,dl
   140028c4f:	jne    0x140028c26
   140028c51:	mov    eax,r9d
   140028c54:	ret    
   140028c55:	int3   
   140028c56:	int3   
   140028c57:	int3   
   140028c58:	mov    QWORD PTR [rsp+0x10],rbx
   140028c5d:	mov    QWORD PTR [rsp+0x18],rsi
   140028c62:	push   rdi
   140028c63:	sub    rsp,0xb0
   140028c6a:	mov    rax,QWORD PTR [rip+0x207ef]        # 0x140049460
   140028c71:	xor    rax,rsp
   140028c74:	mov    QWORD PTR [rsp+0xa0],rax
   140028c7c:	mov    rbx,rcx
   140028c7f:	call   0x14002412c
   140028c84:	mov    rcx,rbx
   140028c87:	mov    rdi,rax
   140028c8a:	call   0x140028c1c
   140028c8f:	mov    ecx,DWORD PTR [rdi+0x15c]
   140028c95:	neg    ecx
   140028c97:	lea    r8,[rsp+0x20]
   140028c9c:	mov    r9d,0x78
   140028ca2:	sbb    edx,edx
   140028ca4:	mov    ecx,eax
   140028ca6:	mov    esi,eax
   140028ca8:	and    edx,0xfffff005
   140028cae:	add    edx,0x1002
   140028cb4:	call   QWORD PTR [rip+0x1155e]        # 0x14003a218
   140028cba:	xor    ebx,ebx
   140028cbc:	cmp    eax,ebx
   140028cbe:	jne    0x140028ccb
   140028cc0:	mov    DWORD PTR [rdi+0x150],ebx
   140028cc6:	lea    eax,[rbx+0x1]
   140028cc9:	jmp    0x140028d18
   140028ccb:	mov    rcx,QWORD PTR [rdi+0x148]
   140028cd2:	lea    rdx,[rsp+0x20]
   140028cd7:	call   0x14002d5b8
   140028cdc:	cmp    eax,ebx
   140028cde:	jne    0x140028d0a
   140028ce0:	lea    rax,[rip+0x13db9]        # 0x14003caa0
   140028ce7:	cmp    si,WORD PTR [rax]
   140028cea:	je     0x140028d0a
   140028cec:	inc    ebx
   140028cee:	add    rax,0x2
   140028cf2:	cmp    ebx,0xa
   140028cf5:	jb     0x140028ce7
   140028cf7:	or     DWORD PTR [rdi+0x150],0x4
   140028cfe:	mov    DWORD PTR [rdi+0x164],esi
   140028d04:	mov    DWORD PTR [rdi+0x160],esi
   140028d0a:	mov    eax,DWORD PTR [rdi+0x150]
   140028d10:	shr    eax,0x2
   140028d13:	not    eax
   140028d15:	and    eax,0x1
   140028d18:	mov    rcx,QWORD PTR [rsp+0xa0]
   140028d20:	xor    rcx,rsp
   140028d23:	call   0x14001c500
   140028d28:	lea    r11,[rsp+0xb0]
   140028d30:	mov    rbx,QWORD PTR [r11+0x18]
   140028d34:	mov    rsi,QWORD PTR [r11+0x20]
   140028d38:	mov    rsp,r11
   140028d3b:	pop    rdi
   140028d3c:	ret    
   140028d3d:	int3   
   140028d3e:	int3   
   140028d3f:	int3   
   140028d40:	mov    QWORD PTR [rsp+0x10],rbx
   140028d45:	push   rbp
   140028d46:	push   rsi
   140028d47:	push   rdi
   140028d48:	sub    rsp,0xb0
   140028d4f:	mov    rax,QWORD PTR [rip+0x2070a]        # 0x140049460
   140028d56:	xor    rax,rsp
   140028d59:	mov    QWORD PTR [rsp+0xa0],rax
   140028d61:	mov    esi,ecx
   140028d63:	mov    r9d,0x78
   140028d69:	and    ecx,0x3ff
   140028d6f:	mov    rbp,r8
   140028d72:	mov    edi,edx
   140028d74:	lea    edx,[r9-0x77]
   140028d78:	lea    r8,[rsp+0x20]
   140028d7d:	bts    ecx,0xa
   140028d81:	call   QWORD PTR [rip+0x11491]        # 0x14003a218
   140028d87:	xor    ebx,ebx
   140028d89:	cmp    eax,ebx
   140028d8b:	jne    0x140028d91
   140028d8d:	xor    eax,eax
   140028d8f:	jmp    0x140028dd0
   140028d91:	lea    rcx,[rsp+0x20]
   140028d96:	call   0x140028c1c
   140028d9b:	cmp    esi,eax
   140028d9d:	je     0x140028dcb
   140028d9f:	cmp    edi,ebx
   140028da1:	je     0x140028dcb
   140028da3:	mov    rcx,QWORD PTR [rbp+0x0]
   140028da7:	mov    al,BYTE PTR [rcx]
   140028da9:	inc    rcx
   140028dac:	cmp    al,0x41
   140028dae:	jl     0x140028db4
   140028db0:	cmp    al,0x5a
   140028db2:	jle    0x140028dba
   140028db4:	sub    al,0x61
   140028db6:	cmp    al,0x19
   140028db8:	ja     0x140028dbe
   140028dba:	inc    ebx
   140028dbc:	jmp    0x140028da7
   140028dbe:	mov    rcx,QWORD PTR [rbp+0x0]
   140028dc2:	call   0x14001c650
   140028dc7:	cmp    ebx,eax
   140028dc9:	je     0x140028d8d
   140028dcb:	mov    eax,0x1
   140028dd0:	mov    rcx,QWORD PTR [rsp+0xa0]
   140028dd8:	xor    rcx,rsp
   140028ddb:	call   0x14001c500
   140028de0:	mov    rbx,QWORD PTR [rsp+0xd8]
   140028de8:	add    rsp,0xb0
   140028def:	pop    rdi
   140028df0:	pop    rsi
   140028df1:	pop    rbp
   140028df2:	ret    
   140028df3:	int3   
   140028df4:	mov    QWORD PTR [rsp+0x10],rbx
   140028df9:	mov    QWORD PTR [rsp+0x18],rbp
   140028dfe:	push   rdi
   140028dff:	sub    rsp,0xb0
   140028e06:	mov    rax,QWORD PTR [rip+0x20653]        # 0x140049460
   140028e0d:	xor    rax,rsp
   140028e10:	mov    QWORD PTR [rsp+0xa0],rax
   140028e18:	mov    rbx,rcx
   140028e1b:	call   0x14002412c
   140028e20:	mov    rcx,rbx
   140028e23:	mov    rdi,rax
   140028e26:	call   0x140028c1c
   140028e2b:	mov    ecx,DWORD PTR [rdi+0x15c]
   140028e31:	neg    ecx
   140028e33:	lea    r8,[rsp+0x20]
   140028e38:	mov    r9d,0x78
   140028e3e:	sbb    edx,edx
   140028e40:	mov    ecx,eax
   140028e42:	mov    ebx,eax
   140028e44:	and    edx,0xfffff005
   140028e4a:	add    edx,0x1002
   140028e50:	call   QWORD PTR [rip+0x113c2]        # 0x14003a218
   140028e56:	xor    ebp,ebp
   140028e58:	cmp    eax,ebp
   140028e5a:	jne    0x140028e6c
   140028e5c:	mov    DWORD PTR [rdi+0x150],ebp
   140028e62:	mov    eax,0x1
   140028e67:	jmp    0x140029061
   140028e6c:	mov    rcx,QWORD PTR [rdi+0x148]
   140028e73:	lea    rdx,[rsp+0x20]
   140028e78:	call   0x14002d5b8
   140028e7d:	cmp    eax,ebp
   140028e7f:	jne    0x140028f64
   140028e85:	mov    eax,DWORD PTR [rdi+0x158]
   140028e8b:	lea    r8,[rsp+0x20]
   140028e90:	mov    r9d,0x78
   140028e96:	neg    eax
   140028e98:	mov    ecx,ebx
   140028e9a:	sbb    edx,edx
   140028e9c:	and    edx,0xfffff002
   140028ea2:	add    edx,0x1001
   140028ea8:	call   QWORD PTR [rip+0x1136a]        # 0x14003a218
   140028eae:	cmp    eax,ebp
   140028eb0:	je     0x140028e5c
   140028eb2:	mov    rcx,QWORD PTR [rdi+0x140]
   140028eb9:	lea    rdx,[rsp+0x20]
   140028ebe:	call   0x14002d5b8
   140028ec3:	cmp    eax,ebp
   140028ec5:	jne    0x140028edc
   140028ec7:	or     DWORD PTR [rdi+0x150],0x304
   140028ed1:	mov    DWORD PTR [rdi+0x160],ebx
   140028ed7:	jmp    0x140028f5e
   140028edc:	test   BYTE PTR [rdi+0x150],0x2
   140028ee3:	jne    0x140028f64
   140028ee5:	cmp    DWORD PTR [rdi+0x154],ebp
   140028eeb:	je     0x140028f32
   140028eed:	movsxd r8,DWORD PTR [rdi+0x154]
   140028ef4:	mov    rcx,QWORD PTR [rdi+0x140]
   140028efb:	lea    rdx,[rsp+0x20]
   140028f00:	call   0x14002d774
   140028f05:	cmp    eax,ebp
   140028f07:	jne    0x140028f32
   140028f09:	mov    rcx,QWORD PTR [rdi+0x140]
   140028f10:	or     DWORD PTR [rdi+0x150],0x2
   140028f17:	mov    DWORD PTR [rdi+0x164],ebx
   140028f1d:	call   0x14001c650
   140028f22:	cmp    eax,DWORD PTR [rdi+0x154]
   140028f28:	jne    0x140028f64
   140028f2a:	mov    DWORD PTR [rdi+0x160],ebx
   140028f30:	jmp    0x140028f64
   140028f32:	mov    eax,DWORD PTR [rdi+0x150]
   140028f38:	test   al,0x1
   140028f3a:	jne    0x140028f64
   140028f3c:	mov    edx,ebp
   140028f3e:	lea    rcx,[rip+0x13b5b]        # 0x14003caa0
   140028f45:	cmp    bx,WORD PTR [rcx]
   140028f48:	je     0x140028f64
   140028f4a:	inc    edx
   140028f4c:	add    rcx,0x2
   140028f50:	cmp    edx,0xa
   140028f53:	jb     0x140028f45
   140028f55:	or     eax,0x1
   140028f58:	mov    DWORD PTR [rdi+0x150],eax
   140028f5e:	mov    DWORD PTR [rdi+0x164],ebx
   140028f64:	mov    eax,DWORD PTR [rdi+0x150]
   140028f6a:	mov    ecx,0x300
   140028f6f:	and    eax,ecx
   140028f71:	cmp    eax,ecx
   140028f73:	je     0x140029053
   140028f79:	mov    eax,DWORD PTR [rdi+0x158]
   140028f7f:	lea    r8,[rsp+0x20]
   140028f84:	mov    r9d,0x78
   140028f8a:	neg    eax
   140028f8c:	mov    ecx,ebx
   140028f8e:	sbb    edx,edx
   140028f90:	and    edx,0xfffff002
   140028f96:	add    edx,0x1001
   140028f9c:	call   QWORD PTR [rip+0x11276]        # 0x14003a218
   140028fa2:	cmp    eax,ebp
   140028fa4:	je     0x140028e5c
   140028faa:	mov    rcx,QWORD PTR [rdi+0x140]
   140028fb1:	lea    rdx,[rsp+0x20]
   140028fb6:	call   0x14002d5b8
   140028fbb:	cmp    eax,ebp
   140028fbd:	jne    0x140029004
   140028fbf:	bts    DWORD PTR [rdi+0x150],0x9
   140028fc7:	mov    eax,DWORD PTR [rdi+0x150]
   140028fcd:	cmp    DWORD PTR [rdi+0x158],ebp
   140028fd3:	je     0x140028fe1
   140028fd5:	bts    eax,0x8
   140028fd9:	mov    DWORD PTR [rdi+0x150],eax
   140028fdf:	jmp    0x140029045
   140028fe1:	cmp    DWORD PTR [rdi+0x154],ebp
   140028fe7:	je     0x14002903d
   140028fe9:	mov    rcx,QWORD PTR [rdi+0x140]
   140028ff0:	call   0x14001c650
   140028ff5:	cmp    eax,DWORD PTR [rdi+0x154]
   140028ffb:	jne    0x14002903d
   140028ffd:	mov    edx,0x1
   140029002:	jmp    0x14002902b
   140029004:	cmp    DWORD PTR [rdi+0x158],ebp
   14002900a:	jne    0x140029053
   14002900c:	cmp    DWORD PTR [rdi+0x154],ebp
   140029012:	je     0x140029053
   140029014:	mov    rcx,QWORD PTR [rdi+0x140]
   14002901b:	lea    rdx,[rsp+0x20]
   140029020:	call   0x14002d5b8
   140029025:	cmp    eax,ebp
   140029027:	jne    0x140029053
   140029029:	xor    edx,edx
   14002902b:	lea    r8,[rdi+0x140]
   140029032:	mov    ecx,ebx
   140029034:	call   0x140028d40
   140029039:	cmp    eax,ebp
   14002903b:	je     0x140029053
   14002903d:	bts    DWORD PTR [rdi+0x150],0x8
   140029045:	cmp    DWORD PTR [rdi+0x160],ebp
   14002904b:	jne    0x140029053
   14002904d:	mov    DWORD PTR [rdi+0x160],ebx
   140029053:	mov    eax,DWORD PTR [rdi+0x150]
   140029059:	shr    eax,0x2
   14002905c:	not    eax
   14002905e:	and    eax,0x1
   140029061:	mov    rcx,QWORD PTR [rsp+0xa0]
   140029069:	xor    rcx,rsp
   14002906c:	call   0x14001c500
   140029071:	lea    r11,[rsp+0xb0]
   140029079:	mov    rbx,QWORD PTR [r11+0x18]
   14002907d:	mov    rbp,QWORD PTR [r11+0x20]
   140029081:	mov    rsp,r11
   140029084:	pop    rdi
   140029085:	ret    
   140029086:	int3   
   140029087:	int3   
   140029088:	mov    QWORD PTR [rsp+0x10],rbx
   14002908d:	push   rdi
   14002908e:	sub    rsp,0xb0
   140029095:	mov    rax,QWORD PTR [rip+0x203c4]        # 0x140049460
   14002909c:	xor    rax,rsp
   14002909f:	mov    QWORD PTR [rsp+0xa0],rax
   1400290a7:	mov    rbx,rcx
   1400290aa:	call   0x14002412c
   1400290af:	mov    rcx,rbx
   1400290b2:	mov    rdi,rax
   1400290b5:	call   0x140028c1c
   1400290ba:	mov    ecx,DWORD PTR [rdi+0x158]
   1400290c0:	neg    ecx
   1400290c2:	lea    r8,[rsp+0x20]
   1400290c7:	mov    r9d,0x78
   1400290cd:	sbb    edx,edx
   1400290cf:	mov    ecx,eax
   1400290d1:	mov    ebx,eax
   1400290d3:	and    edx,0xfffff002
   1400290d9:	add    edx,0x1001
   1400290df:	call   QWORD PTR [rip+0x11133]        # 0x14003a218
   1400290e5:	test   eax,eax
   1400290e7:	jne    0x1400290f6
   1400290e9:	and    DWORD PTR [rdi+0x150],eax
   1400290ef:	mov    eax,0x1
   1400290f4:	jmp    0x140029174
   1400290f6:	mov    rcx,QWORD PTR [rdi+0x140]
   1400290fd:	lea    rdx,[rsp+0x20]
   140029102:	call   0x14002d5b8
   140029107:	test   eax,eax
   140029109:	jne    0x140029118
   14002910b:	cmp    DWORD PTR [rdi+0x158],eax
   140029111:	jne    0x140029153
   140029113:	lea    edx,[rax+0x1]
   140029116:	jmp    0x140029141
   140029118:	cmp    DWORD PTR [rdi+0x158],0x0
   14002911f:	jne    0x140029166
   140029121:	cmp    DWORD PTR [rdi+0x154],0x0
   140029128:	je     0x140029166
   14002912a:	mov    rcx,QWORD PTR [rdi+0x140]
   140029131:	lea    rdx,[rsp+0x20]
   140029136:	call   0x14002d5b8
   14002913b:	test   eax,eax
   14002913d:	jne    0x140029166
   14002913f:	xor    edx,edx
   140029141:	lea    r8,[rdi+0x140]
   140029148:	mov    ecx,ebx
   14002914a:	call   0x140028d40
   14002914f:	test   eax,eax
   140029151:	je     0x140029166
   140029153:	or     DWORD PTR [rdi+0x150],0x4
   14002915a:	mov    DWORD PTR [rdi+0x160],ebx
   140029160:	mov    DWORD PTR [rdi+0x164],ebx
   140029166:	mov    eax,DWORD PTR [rdi+0x150]
   14002916c:	shr    eax,0x2
   14002916f:	not    eax
   140029171:	and    eax,0x1
   140029174:	mov    rcx,QWORD PTR [rsp+0xa0]
   14002917c:	xor    rcx,rsp
   14002917f:	call   0x14001c500
   140029184:	mov    rbx,QWORD PTR [rsp+0xc8]
   14002918c:	add    rsp,0xb0
   140029193:	pop    rdi
   140029194:	ret    
   140029195:	int3   
   140029196:	int3   
   140029197:	int3   
   140029198:	rex push rbx
   14002919a:	sub    rsp,0x20
   14002919e:	mov    rbx,rcx
   1400291a1:	mov    rcx,QWORD PTR [rcx]
   1400291a4:	call   0x14001c650
   1400291a9:	mov    rcx,QWORD PTR [rbx+0x8]
   1400291ad:	xor    edx,edx
   1400291af:	cmp    rax,0x3
   1400291b3:	sete   dl
   1400291b6:	mov    DWORD PTR [rbx+0x18],edx
   1400291b9:	call   0x14001c650
   1400291be:	xor    ecx,ecx
   1400291c0:	cmp    rax,0x3
   1400291c4:	sete   cl
   1400291c7:	and    DWORD PTR [rbx+0x20],0x0
   1400291cb:	cmp    DWORD PTR [rbx+0x18],0x0
   1400291cf:	mov    DWORD PTR [rbx+0x1c],ecx
   1400291d2:	je     0x14002920c
   1400291d4:	mov    edx,0x2
   1400291d9:	mov    DWORD PTR [rbx+0x14],edx
   1400291dc:	lea    rcx,[rip+0xfffffffffffffc11]        # 0x140028df4
   1400291e3:	mov    edx,0x1
   1400291e8:	call   QWORD PTR [rip+0x1101a]        # 0x14003a208
   1400291ee:	bt     DWORD PTR [rbx+0x10],0x8
   1400291f3:	jae    0x140029202
   1400291f5:	bt     DWORD PTR [rbx+0x10],0x9
   1400291fa:	jae    0x140029202
   1400291fc:	test   BYTE PTR [rbx+0x10],0x7
   140029200:	jne    0x140029206
   140029202:	and    DWORD PTR [rbx+0x10],0x0
   140029206:	add    rsp,0x20
   14002920a:	pop    rbx
   14002920b:	ret    
   14002920c:	mov    rax,QWORD PTR [rbx]
   14002920f:	xor    edx,edx
   140029211:	mov    cl,BYTE PTR [rax]
   140029213:	inc    rax
   140029216:	cmp    cl,0x41
   140029219:	jl     0x140029220
   14002921b:	cmp    cl,0x5a
   14002921e:	jle    0x140029228
   140029220:	sub    cl,0x61
   140029223:	cmp    cl,0x19
   140029226:	ja     0x1400291d9
   140029228:	inc    edx
   14002922a:	jmp    0x140029211
   14002922c:	rex push rbx
   14002922e:	sub    rsp,0x20
   140029232:	mov    rbx,rcx
   140029235:	mov    rcx,QWORD PTR [rcx]
   140029238:	call   0x14001c650
   14002923d:	xor    edx,edx
   14002923f:	cmp    rax,0x3
   140029243:	sete   dl
   140029246:	mov    DWORD PTR [rbx+0x18],edx
   140029249:	test   edx,edx
   14002924b:	je     0x140029277
   14002924d:	mov    edx,0x2
   140029252:	mov    DWORD PTR [rbx+0x14],edx
   140029255:	lea    rcx,[rip+0xfffffffffffffe2c]        # 0x140029088
   14002925c:	mov    edx,0x1
   140029261:	call   QWORD PTR [rip+0x10fa1]        # 0x14003a208
   140029267:	test   BYTE PTR [rbx+0x10],0x4
   14002926b:	jne    0x140029271
   14002926d:	and    DWORD PTR [rbx+0x10],0x0
   140029271:	add    rsp,0x20
   140029275:	pop    rbx
   140029276:	ret    
   140029277:	mov    rax,QWORD PTR [rbx]
   14002927a:	xor    edx,edx
   14002927c:	mov    cl,BYTE PTR [rax]
   14002927e:	inc    rax
   140029281:	cmp    cl,0x41
   140029284:	jl     0x14002928b
   140029286:	cmp    cl,0x5a
   140029289:	jle    0x140029293
   14002928b:	sub    cl,0x61
   14002928e:	cmp    cl,0x19
   140029291:	ja     0x140029252
   140029293:	inc    edx
   140029295:	jmp    0x14002927c
   140029297:	int3   
   140029298:	mov    rax,rsp
   14002929b:	mov    QWORD PTR [rax+0x8],rbx
   14002929f:	mov    QWORD PTR [rax+0x10],rbp
   1400292a3:	mov    QWORD PTR [rax+0x18],rsi
   1400292a7:	mov    QWORD PTR [rax+0x20],rdi
   1400292ab:	push   r12
   1400292ad:	sub    rsp,0x30
   1400292b1:	mov    r12,r8
   1400292b4:	mov    rbp,rdx
   1400292b7:	mov    rsi,rcx
   1400292ba:	call   0x14002412c
   1400292bf:	lea    rbx,[rax+0x140]
   1400292c6:	test   rsi,rsi
   1400292c9:	jne    0x1400292d7
   1400292cb:	or     DWORD PTR [rbx+0x10],0x104
   1400292d2:	jmp    0x1400293ba
   1400292d7:	lea    rax,[rsi+0x40]
   1400292db:	mov    QWORD PTR [rbx],rsi
   1400292de:	mov    QWORD PTR [rbx+0x8],rax
   1400292e2:	test   rax,rax
   1400292e5:	je     0x140029301
   1400292e7:	cmp    BYTE PTR [rax],0x0
   1400292ea:	je     0x140029301
   1400292ec:	lea    r8,[rbx+0x8]
   1400292f0:	lea    rcx,[rip+0x13639]        # 0x14003c930
   1400292f7:	mov    edx,0x16
   1400292fc:	call   0x140028abc
   140029301:	mov    rax,QWORD PTR [rbx]
   140029304:	and    DWORD PTR [rbx+0x10],0x0
   140029308:	test   rax,rax
   14002930b:	je     0x140029376
   14002930d:	cmp    BYTE PTR [rax],0x0
   140029310:	je     0x140029376
   140029312:	mov    rax,QWORD PTR [rbx+0x8]
   140029316:	test   rax,rax
   140029319:	je     0x14002932a
   14002931b:	cmp    BYTE PTR [rax],0x0
   14002931e:	je     0x14002932a
   140029320:	mov    rcx,rbx
   140029323:	call   0x140029198
   140029328:	jmp    0x140029332
   14002932a:	mov    rcx,rbx
   14002932d:	call   0x14002922c
   140029332:	cmp    DWORD PTR [rbx+0x10],0x0
   140029336:	jne    0x1400293d0
   14002933c:	lea    rcx,[rip+0x131dd]        # 0x14003c520
   140029343:	mov    r8,rbx
   140029346:	mov    edx,0x40
   14002934b:	call   0x140028abc
   140029350:	test   eax,eax
   140029352:	je     0x1400293c6
   140029354:	mov    rax,QWORD PTR [rbx+0x8]
   140029358:	test   rax,rax
   14002935b:	je     0x14002936c
   14002935d:	cmp    BYTE PTR [rax],0x0
   140029360:	je     0x14002936c
   140029362:	mov    rcx,rbx
   140029365:	call   0x140029198
   14002936a:	jmp    0x1400293c6
   14002936c:	mov    rcx,rbx
   14002936f:	call   0x14002922c
   140029374:	jmp    0x1400293c6
   140029376:	mov    rcx,QWORD PTR [rbx+0x8]
   14002937a:	test   rcx,rcx
   14002937d:	je     0x1400293b3
   14002937f:	cmp    BYTE PTR [rcx],0x0
   140029382:	je     0x1400293b3
   140029384:	call   0x14001c650
   140029389:	xor    ecx,ecx
   14002938b:	mov    edx,0x1
   140029390:	cmp    rax,0x3
   140029394:	sete   cl
   140029397:	mov    DWORD PTR [rbx+0x1c],ecx
   14002939a:	lea    rcx,[rip+0xfffffffffffff8b7]        # 0x140028c58
   1400293a1:	call   QWORD PTR [rip+0x10e61]        # 0x14003a208
   1400293a7:	test   BYTE PTR [rbx+0x10],0x4
   1400293ab:	jne    0x1400293c6
   1400293ad:	and    DWORD PTR [rbx+0x10],0x0
   1400293b1:	jmp    0x1400293c6
   1400293b3:	mov    DWORD PTR [rbx+0x10],0x104
   1400293ba:	call   QWORD PTR [rip+0x10e60]        # 0x14003a220
   1400293c0:	mov    DWORD PTR [rbx+0x20],eax
   1400293c3:	mov    DWORD PTR [rbx+0x24],eax
   1400293c6:	cmp    DWORD PTR [rbx+0x10],0x0
   1400293ca:	je     0x1400294e3
   1400293d0:	lea    rax,[rsi+0x80]
   1400293d7:	neg    rsi
   1400293da:	mov    rdx,rbx
   1400293dd:	sbb    rcx,rcx
   1400293e0:	and    rcx,rax
   1400293e3:	call   0x140028b54
   1400293e8:	mov    edi,eax
   1400293ea:	test   eax,eax
   1400293ec:	je     0x1400294e3
   1400293f2:	cmp    eax,0xfde8
   1400293f7:	je     0x1400294e3
   1400293fd:	cmp    eax,0xfde9
   140029402:	je     0x1400294e3
   140029408:	movzx  ecx,ax
   14002940b:	call   QWORD PTR [rip+0x10f0f]        # 0x14003a320
   140029411:	test   eax,eax
   140029413:	je     0x1400294e3
   140029419:	mov    ecx,DWORD PTR [rbx+0x20]
   14002941c:	mov    edx,0x1
   140029421:	call   QWORD PTR [rip+0x10dd1]        # 0x14003a1f8
   140029427:	test   eax,eax
   140029429:	je     0x1400294e3
   14002942f:	test   rbp,rbp
   140029432:	je     0x140029448
   140029434:	movzx  eax,WORD PTR [rbx+0x20]
   140029438:	mov    WORD PTR [rbp+0x0],ax
   14002943c:	movzx  eax,WORD PTR [rbx+0x24]
   140029440:	mov    WORD PTR [rbp+0x4],di
   140029444:	mov    WORD PTR [rbp+0x2],ax
   140029448:	test   r12,r12
   14002944b:	je     0x1400294dc
   140029451:	mov    eax,0x814
   140029456:	cmp    WORD PTR [rbp+0x0],ax
   14002945a:	jne    0x14002948b
   14002945c:	lea    r8,[rip+0x1365d]        # 0x14003cac0
   140029463:	mov    edx,0x40
   140029468:	mov    rcx,r12
   14002946b:	call   0x140023db4
   140029470:	test   eax,eax
   140029472:	je     0x1400294a6
   140029474:	and    QWORD PTR [rsp+0x20],0x0
   14002947a:	xor    r9d,r9d
   14002947d:	xor    r8d,r8d
   140029480:	xor    edx,edx
   140029482:	xor    ecx,ecx
   140029484:	call   0x14001cbc8
   140029489:	jmp    0x1400294a6
   14002948b:	mov    ecx,DWORD PTR [rbx+0x20]
   14002948e:	mov    r9d,0x40
   140029494:	mov    r8,r12
   140029497:	mov    edx,0x1001
   14002949c:	call   QWORD PTR [rip+0x10d76]        # 0x14003a218
   1400294a2:	test   eax,eax
   1400294a4:	je     0x1400294e3
   1400294a6:	mov    ecx,DWORD PTR [rbx+0x24]
   1400294a9:	lea    r8,[r12+0x40]
   1400294ae:	mov    edx,0x1002
   1400294b3:	mov    r9d,0x40
   1400294b9:	call   QWORD PTR [rip+0x10d59]        # 0x14003a218
   1400294bf:	test   eax,eax
   1400294c1:	je     0x1400294e3
   1400294c3:	mov    r9d,0xa
   1400294c9:	lea    rdx,[r12+0x80]
   1400294d1:	mov    ecx,edi
   1400294d3:	lea    r8d,[r9+0x6]
   1400294d7:	call   0x140020cb4
   1400294dc:	mov    eax,0x1
   1400294e1:	jmp    0x1400294e5
   1400294e3:	xor    eax,eax
   1400294e5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400294ea:	mov    rbp,QWORD PTR [rsp+0x48]
   1400294ef:	mov    rsi,QWORD PTR [rsp+0x50]
   1400294f4:	mov    rdi,QWORD PTR [rsp+0x58]
   1400294f9:	add    rsp,0x30
   1400294fd:	pop    r12
   1400294ff:	ret    
   140029500:	mov    DWORD PTR [rsp+0x20],r9d
   140029505:	push   rbp
   140029506:	push   r12
   140029508:	push   r13
   14002950a:	push   r14
   14002950c:	push   r15
   14002950e:	sub    rsp,0x40
   140029512:	lea    rbp,[rsp+0x30]
   140029517:	mov    QWORD PTR [rbp+0x40],rbx
   14002951b:	mov    QWORD PTR [rbp+0x48],rsi
   14002951f:	mov    QWORD PTR [rbp+0x50],rdi
   140029523:	mov    rax,QWORD PTR [rip+0x1ff36]        # 0x140049460
   14002952a:	xor    rax,rbp
   14002952d:	mov    QWORD PTR [rbp+0x8],rax
   140029531:	mov    r9d,DWORD PTR [rip+0x233c8]        # 0x14004c900
   140029538:	mov    edi,0x1
   14002953d:	xor    ebx,ebx
   14002953f:	mov    r14,r8
   140029542:	mov    r15d,edx
   140029545:	mov    r13,rcx
   140029548:	lea    esi,[rdi+0x1]
   14002954b:	cmp    r9d,ebx
   14002954e:	jne    0x14002958d
   140029550:	lea    r9,[rbp+0x0]
   140029554:	lea    rdx,[rip+0x1197d]        # 0x14003aed8
   14002955b:	mov    r8d,edi
   14002955e:	mov    ecx,edi
   140029560:	call   QWORD PTR [rip+0x10d4a]        # 0x14003a2b0
   140029566:	cmp    eax,ebx
   140029568:	je     0x140029572
   14002956a:	mov    DWORD PTR [rip+0x23390],edi        # 0x14004c900
   140029570:	jmp    0x1400295a8
   140029572:	call   QWORD PTR [rip+0x10b50]        # 0x14003a0c8
   140029578:	mov    r9d,DWORD PTR [rip+0x23381]        # 0x14004c900
   14002957f:	cmp    eax,0x78
   140029582:	cmove  r9d,esi
   140029586:	mov    DWORD PTR [rip+0x23373],r9d        # 0x14004c900
   14002958d:	cmp    r9d,esi
   140029590:	je     0x1400296bc
   140029596:	cmp    r9d,ebx
   140029599:	je     0x1400296bc
   14002959f:	cmp    r9d,edi
   1400295a2:	jne    0x1400296eb
   1400295a8:	mov    esi,DWORD PTR [rbp+0x68]
   1400295ab:	cmp    esi,ebx
   1400295ad:	jne    0x1400295b6
   1400295af:	mov    rax,QWORD PTR [r13+0x0]
   1400295b3:	mov    esi,DWORD PTR [rax+0x4]
   1400295b6:	neg    DWORD PTR [rbp+0x78]
   1400295b9:	mov    r9d,DWORD PTR [rbp+0x58]
   1400295bd:	mov    r8,r14
   1400295c0:	sbb    edx,edx
   1400295c2:	mov    ecx,esi
   1400295c4:	mov    DWORD PTR [rsp+0x28],ebx
   1400295c8:	and    edx,0x8
   1400295cb:	mov    QWORD PTR [rsp+0x20],rbx
   1400295d0:	add    edx,edi
   1400295d2:	call   QWORD PTR [rip+0x10bc8]        # 0x14003a1a0
   1400295d8:	movsxd r12,eax
   1400295db:	cmp    r12d,ebx
   1400295de:	je     0x1400296eb
   1400295e4:	mov    r13d,0xdddd
   1400295ea:	jle    0x140029654
   1400295ec:	movabs rax,0x7ffffffffffffff0
   1400295f6:	cmp    r12,rax
   1400295f9:	ja     0x140029654
   1400295fb:	lea    rcx,[r12+r12*1+0x10]
   140029600:	cmp    rcx,0x400
   140029607:	ja     0x14002963e
   140029609:	lea    rax,[rcx+0xf]
   14002960d:	cmp    rax,rcx
   140029610:	ja     0x14002961c
   140029612:	movabs rax,0xffffffffffffff0
   14002961c:	and    rax,0xfffffffffffffff0
   140029620:	call   0x140036570
   140029625:	sub    rsp,rax
   140029628:	lea    rdi,[rsp+0x30]
   14002962d:	cmp    rdi,rbx
   140029630:	je     0x1400296eb
   140029636:	mov    DWORD PTR [rdi],0xcccc
   14002963c:	jmp    0x14002964e
   14002963e:	call   0x14001d66c
   140029643:	mov    rdi,rax
   140029646:	cmp    rax,rbx
   140029649:	je     0x140029657
   14002964b:	mov    DWORD PTR [rax],r13d
   14002964e:	add    rdi,0x10
   140029652:	jmp    0x140029657
   140029654:	mov    rdi,rbx
   140029657:	cmp    rdi,rbx
   14002965a:	je     0x1400296eb
   140029660:	mov    r8,r12
   140029663:	xor    edx,edx
   140029665:	mov    rcx,rdi
   140029668:	add    r8,r8
   14002966b:	call   0x14001c730
   140029670:	mov    r9d,DWORD PTR [rbp+0x58]
   140029674:	mov    r8,r14
   140029677:	mov    edx,0x1
   14002967c:	mov    ecx,esi
   14002967e:	mov    DWORD PTR [rsp+0x28],r12d
   140029683:	mov    QWORD PTR [rsp+0x20],rdi
   140029688:	call   QWORD PTR [rip+0x10b12]        # 0x14003a1a0
   14002968e:	cmp    eax,ebx
   140029690:	je     0x1400296a7
   140029692:	mov    r9,QWORD PTR [rbp+0x60]
   140029696:	mov    r8d,eax
   140029699:	mov    rdx,rdi
   14002969c:	mov    ecx,r15d
   14002969f:	call   QWORD PTR [rip+0x10c0b]        # 0x14003a2b0
   1400296a5:	mov    ebx,eax
   1400296a7:	lea    rcx,[rdi-0x10]
   1400296ab:	cmp    DWORD PTR [rcx],r13d
   1400296ae:	jne    0x1400296b5
   1400296b0:	call   0x14001ca48
   1400296b5:	mov    eax,ebx
   1400296b7:	jmp    0x140029744
   1400296bc:	mov    r12d,DWORD PTR [rbp+0x70]
   1400296c0:	mov    rdi,rbx
   1400296c3:	cmp    r12d,ebx
   1400296c6:	jne    0x1400296d0
   1400296c8:	mov    rax,QWORD PTR [r13+0x0]
   1400296cc:	mov    r12d,DWORD PTR [rax+0x14]
   1400296d0:	mov    esi,DWORD PTR [rbp+0x68]
   1400296d3:	cmp    esi,ebx
   1400296d5:	jne    0x1400296de
   1400296d7:	mov    rax,QWORD PTR [r13+0x0]
   1400296db:	mov    esi,DWORD PTR [rax+0x4]
   1400296de:	mov    ecx,r12d
   1400296e1:	call   0x140029964
   1400296e6:	cmp    eax,0xffffffff
   1400296e9:	jne    0x1400296ef
   1400296eb:	xor    eax,eax
   1400296ed:	jmp    0x140029744
   1400296ef:	cmp    eax,esi
   1400296f1:	je     0x140029717
   1400296f3:	lea    r9,[rbp+0x58]
   1400296f7:	mov    r8,r14
   1400296fa:	mov    edx,eax
   1400296fc:	mov    ecx,esi
   1400296fe:	mov    DWORD PTR [rsp+0x28],ebx
   140029702:	mov    QWORD PTR [rsp+0x20],rbx
   140029707:	call   0x1400299b8
   14002970c:	mov    rdi,rax
   14002970f:	cmp    rax,rbx
   140029712:	je     0x1400296eb
   140029714:	mov    r14,rax
   140029717:	mov    rax,QWORD PTR [rbp+0x60]
   14002971b:	mov    r9d,DWORD PTR [rbp+0x58]
   14002971f:	mov    r8,r14
   140029722:	mov    edx,r15d
   140029725:	mov    ecx,r12d
   140029728:	mov    QWORD PTR [rsp+0x20],rax
   14002972d:	call   QWORD PTR [rip+0x10abd]        # 0x14003a1f0
   140029733:	mov    esi,eax
   140029735:	cmp    rdi,rbx
   140029738:	je     0x140029742
   14002973a:	mov    rcx,rdi
   14002973d:	call   0x14001ca48
   140029742:	mov    eax,esi
   140029744:	mov    rcx,QWORD PTR [rbp+0x8]
   140029748:	xor    rcx,rbp
   14002974b:	call   0x14001c500
   140029750:	mov    rbx,QWORD PTR [rbp+0x40]
   140029754:	mov    rsi,QWORD PTR [rbp+0x48]
   140029758:	mov    rdi,QWORD PTR [rbp+0x50]
   14002975c:	lea    rsp,[rbp+0x10]
   140029760:	pop    r15
   140029762:	pop    r14
   140029764:	pop    r13
   140029766:	pop    r12
   140029768:	pop    rbp
   140029769:	ret    
   14002976a:	int3   
   14002976b:	int3   
   14002976c:	mov    QWORD PTR [rsp+0x8],rbx
   140029771:	mov    QWORD PTR [rsp+0x10],rsi
   140029776:	push   rdi
   140029777:	sub    rsp,0x60
   14002977b:	mov    esi,edx
   14002977d:	mov    rdx,rcx
   140029780:	lea    rcx,[rsp+0x40]
   140029785:	mov    ebx,r9d
   140029788:	mov    rdi,r8
   14002978b:	call   0x14001cf30
   140029790:	mov    eax,DWORD PTR [rsp+0xa0]
   140029797:	mov    r11d,DWORD PTR [rsp+0xa8]
   14002979f:	lea    rcx,[rsp+0x40]
   1400297a4:	mov    DWORD PTR [rsp+0x38],r11d
   1400297a9:	mov    DWORD PTR [rsp+0x30],eax
   1400297ad:	mov    eax,DWORD PTR [rsp+0x98]
   1400297b4:	mov    DWORD PTR [rsp+0x28],eax
   1400297b8:	mov    rax,QWORD PTR [rsp+0x90]
   1400297c0:	mov    r9d,ebx
   1400297c3:	mov    r8,rdi
   1400297c6:	mov    edx,esi
   1400297c8:	mov    QWORD PTR [rsp+0x20],rax
   1400297cd:	call   0x140029500
   1400297d2:	cmp    BYTE PTR [rsp+0x58],0x0
   1400297d7:	je     0x1400297e5
   1400297d9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400297de:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400297e5:	mov    rbx,QWORD PTR [rsp+0x70]
   1400297ea:	mov    rsi,QWORD PTR [rsp+0x78]
   1400297ef:	add    rsp,0x60
   1400297f3:	pop    rdi
   1400297f4:	ret    
   1400297f5:	int3   
   1400297f6:	int3   
   1400297f7:	int3   
   1400297f8:	int3   
   1400297f9:	int3   
   1400297fa:	int3   
   1400297fb:	int3   
   1400297fc:	int3   
   1400297fd:	int3   
   1400297fe:	int3   
   1400297ff:	int3   
   140029800:	int3   
   140029801:	int3   
   140029802:	int3   
   140029803:	int3   
   140029804:	int3   
   140029805:	int3   
   140029806:	data16 nop WORD PTR [rax+rax*1+0x0]
   140029810:	test   r8,r8
   140029813:	je     0x14002988a
   140029815:	sub    rdx,rcx
   140029818:	mov    r9,rdx
   14002981b:	movabs r11,0x8101010101010100
   140029825:	test   cl,0x7
   140029828:	je     0x140029849
   14002982a:	mov    al,BYTE PTR [rcx]
   14002982c:	mov    dl,BYTE PTR [rcx+r9*1]
   140029830:	inc    rcx
   140029833:	cmp    al,dl
   140029835:	jne    0x14002988e
   140029837:	dec    r8
   14002983a:	je     0x14002988a
   14002983c:	test   al,al
   14002983e:	je     0x14002988a
   140029840:	test   rcx,0x7
   140029847:	jne    0x14002982a
   140029849:	lea    rdx,[rcx+r9*1]
   14002984d:	and    dx,0xfff
   140029852:	cmp    dx,0xff8
   140029857:	ja     0x14002982a
   140029859:	mov    rax,QWORD PTR [rcx]
   14002985c:	mov    rdx,QWORD PTR [rcx+r9*1]
   140029860:	cmp    rax,rdx
   140029863:	jne    0x14002982a
   140029865:	add    rcx,0x8
   140029869:	sub    r8,0x8
   14002986d:	movabs r10,0x7efefefefefefeff
   140029877:	jbe    0x14002988a
   140029879:	xor    rax,0xffffffffffffffff
   14002987d:	add    r10,rdx
   140029880:	xor    rax,r10
   140029883:	test   r11,rax
   140029886:	je     0x140029849
   140029888:	jmp    0x140029896
   14002988a:	xor    rax,rax
   14002988d:	ret    
   14002988e:	sbb    rax,rax
   140029891:	sbb    rax,0xffffffffffffffff
   140029895:	ret    
   140029896:	test   dl,dl
   140029898:	je     0x1400298c1
   14002989a:	test   dh,dh
   14002989c:	je     0x1400298c1
   14002989e:	shr    rdx,0x10
   1400298a2:	test   dl,dl
   1400298a4:	je     0x1400298c1
   1400298a6:	test   dh,dh
   1400298a8:	je     0x1400298c1
   1400298aa:	shr    rdx,0x10
   1400298ae:	test   dl,dl
   1400298b0:	je     0x1400298c1
   1400298b2:	test   dh,dh
   1400298b4:	je     0x1400298c1
   1400298b6:	shr    edx,0x10
   1400298b9:	test   dl,dl
   1400298bb:	je     0x1400298c1
   1400298bd:	test   dh,dh
   1400298bf:	jne    0x140029849
   1400298c1:	xor    rax,rax
   1400298c4:	ret    
   1400298c5:	int3   
   1400298c6:	int3   
   1400298c7:	int3   
   1400298c8:	sub    rsp,0x38
   1400298cc:	mov    rax,QWORD PTR [rip+0x1fb8d]        # 0x140049460
   1400298d3:	xor    rax,rsp
   1400298d6:	mov    QWORD PTR [rsp+0x20],rax
   1400298db:	mov    al,BYTE PTR [rdx]
   1400298dd:	xor    r11d,r11d
   1400298e0:	mov    r10,rdx
   1400298e3:	mov    QWORD PTR [rsp],r11
   1400298e7:	mov    QWORD PTR [rsp+0x8],r11
   1400298ec:	mov    QWORD PTR [rsp+0x10],r11
   1400298f1:	mov    QWORD PTR [rsp+0x18],r11
   1400298f6:	mov    r9,rcx
   1400298f9:	jmp    0x14002991c
   1400298fb:	movzx  r8d,al
   1400298ff:	movzx  eax,al
   140029902:	mov    edx,0x1
   140029907:	and    eax,0x7
   14002990a:	shr    r8,0x3
   14002990e:	mov    cl,al
   140029910:	shl    dl,cl
   140029912:	or     BYTE PTR [rsp+r8*1],dl
   140029916:	inc    r10
   140029919:	mov    al,BYTE PTR [r10]
   14002991c:	cmp    al,r11b
   14002991f:	jne    0x1400298fb
   140029921:	jmp    0x140029941
   140029923:	movzx  ecx,r8b
   140029927:	movzx  eax,r8b
   14002992b:	mov    edx,0x1
   140029930:	and    ecx,0x7
   140029933:	shr    rax,0x3
   140029937:	shl    edx,cl
   140029939:	test   BYTE PTR [rsp+rax*1],dl
   14002993c:	jne    0x14002995d
   14002993e:	inc    r9
   140029941:	mov    r8b,BYTE PTR [r9]
   140029944:	cmp    r8b,r11b
   140029947:	jne    0x140029923
   140029949:	xor    eax,eax
   14002994b:	mov    rcx,QWORD PTR [rsp+0x20]
   140029950:	xor    rcx,rsp
   140029953:	call   0x14001c500
   140029958:	add    rsp,0x38
   14002995c:	ret    
   14002995d:	mov    rax,r9
   140029960:	jmp    0x14002994b
   140029962:	int3   
   140029963:	int3   
   140029964:	sub    rsp,0x38
   140029968:	mov    rax,QWORD PTR [rip+0x1faf1]        # 0x140049460
   14002996f:	xor    rax,rsp
   140029972:	mov    QWORD PTR [rsp+0x28],rax
   140029977:	lea    r8,[rsp+0x20]
   14002997c:	mov    r9d,0x6
   140029982:	mov    edx,0x1004
   140029987:	mov    BYTE PTR [rsp+0x26],0x0
   14002998c:	call   QWORD PTR [rip+0x10886]        # 0x14003a218
   140029992:	test   eax,eax
   140029994:	jne    0x14002999b
   140029996:	or     eax,0xffffffff
   140029999:	jmp    0x1400299a5
   14002999b:	lea    rcx,[rsp+0x20]
   1400299a0:	call   0x14002d60c
   1400299a5:	mov    rcx,QWORD PTR [rsp+0x28]
   1400299aa:	xor    rcx,rsp
   1400299ad:	call   0x14001c500
   1400299b2:	add    rsp,0x38
   1400299b6:	ret    
   1400299b7:	int3   
   1400299b8:	rex push rbp
   1400299ba:	push   rbx
   1400299bb:	push   rsi
   1400299bc:	push   rdi
   1400299bd:	push   r12
   1400299bf:	push   r13
   1400299c1:	push   r14
   1400299c3:	push   r15
   1400299c5:	sub    rsp,0x88
   1400299cc:	lea    rbp,[rsp+0x40]
   1400299d1:	mov    rax,QWORD PTR [rip+0x1fa88]        # 0x140049460
   1400299d8:	xor    rax,rbp
   1400299db:	mov    QWORD PTR [rbp+0x30],rax
   1400299df:	mov    r14,QWORD PTR [rbp+0xb0]
   1400299e6:	mov    r12d,DWORD PTR [r9]
   1400299e9:	xor    edi,edi
   1400299eb:	mov    rbx,r8
   1400299ee:	mov    rsi,rdi
   1400299f1:	mov    DWORD PTR [rbp+0x0],edi
   1400299f4:	mov    QWORD PTR [rbp+0x10],r9
   1400299f8:	mov    r13d,edx
   1400299fb:	mov    r15d,ecx
   1400299fe:	mov    QWORD PTR [rbp+0x8],rbx
   140029a02:	cmp    ecx,edx
   140029a04:	je     0x140029c1d
   140029a0a:	lea    rdx,[rbp+0x18]
   140029a0e:	call   QWORD PTR [rip+0x10894]        # 0x14003a2a8
   140029a14:	cmp    eax,edi
   140029a16:	je     0x140029abb
   140029a1c:	cmp    DWORD PTR [rbp+0x18],0x1
   140029a20:	jne    0x140029abb
   140029a26:	lea    rdx,[rbp+0x18]
   140029a2a:	mov    ecx,r13d
   140029a2d:	call   QWORD PTR [rip+0x10875]        # 0x14003a2a8
   140029a33:	cmp    eax,edi
   140029a35:	je     0x140029abb
   140029a3b:	cmp    DWORD PTR [rbp+0x18],0x1
   140029a3f:	jne    0x140029abb
   140029a41:	mov    DWORD PTR [rbp+0x0],0x1
   140029a48:	cmp    r12d,0xffffffff
   140029a4c:	je     0x140029aae
   140029a4e:	mov    edi,r12d
   140029a51:	test   edi,edi
   140029a53:	jle    0x140029b02
   140029a59:	movsxd rcx,edi
   140029a5c:	movabs rax,0x7ffffffffffffff0
   140029a66:	cmp    rcx,rax
   140029a69:	ja     0x140029b02
   140029a6f:	lea    rcx,[rcx+rcx*1+0x10]
   140029a74:	cmp    rcx,0x400
   140029a7b:	ja     0x140029ae9
   140029a7d:	lea    rax,[rcx+0xf]
   140029a81:	cmp    rax,rcx
   140029a84:	ja     0x140029a90
   140029a86:	movabs rax,0xffffffffffffff0
   140029a90:	and    rax,0xfffffffffffffff0
   140029a94:	call   0x140036570
   140029a99:	sub    rsp,rax
   140029a9c:	lea    rbx,[rsp+0x40]
   140029aa1:	test   rbx,rbx
   140029aa4:	je     0x140029ae2
   140029aa6:	mov    DWORD PTR [rbx],0xcccc
   140029aac:	jmp    0x140029afc
   140029aae:	mov    rcx,rbx
   140029ab1:	call   0x14001c650
   140029ab6:	lea    edi,[rax+0x1]
   140029ab9:	jmp    0x140029a51
   140029abb:	mov    r9d,r12d
   140029abe:	mov    r8,rbx
   140029ac1:	mov    edx,0x1
   140029ac6:	mov    ecx,r15d
   140029ac9:	mov    DWORD PTR [rsp+0x28],edi
   140029acd:	mov    QWORD PTR [rsp+0x20],rdi
   140029ad2:	call   QWORD PTR [rip+0x106c8]        # 0x14003a1a0
   140029ad8:	mov    edi,eax
   140029ada:	test   eax,eax
   140029adc:	jne    0x140029a51
   140029ae2:	xor    eax,eax
   140029ae4:	jmp    0x140029c20
   140029ae9:	call   0x14001d66c
   140029aee:	mov    rbx,rax
   140029af1:	test   rax,rax
   140029af4:	je     0x140029b04
   140029af6:	mov    DWORD PTR [rax],0xdddd
   140029afc:	add    rbx,0x10
   140029b00:	jmp    0x140029b04
   140029b02:	xor    ebx,ebx
   140029b04:	test   rbx,rbx
   140029b07:	je     0x140029ae2
   140029b09:	movsxd r8,edi
   140029b0c:	xor    edx,edx
   140029b0e:	mov    rcx,rbx
   140029b11:	add    r8,r8
   140029b14:	call   0x14001c730
   140029b19:	mov    r8,QWORD PTR [rbp+0x8]
   140029b1d:	mov    r9d,r12d
   140029b20:	mov    edx,0x1
   140029b25:	mov    ecx,r15d
   140029b28:	mov    DWORD PTR [rsp+0x28],edi
   140029b2c:	mov    QWORD PTR [rsp+0x20],rbx
   140029b31:	call   QWORD PTR [rip+0x10669]        # 0x14003a1a0
   140029b37:	xor    r15d,r15d
   140029b3a:	cmp    eax,r15d
   140029b3d:	je     0x140029c0c
   140029b43:	cmp    r14,r15
   140029b46:	je     0x140029b83
   140029b48:	mov    eax,DWORD PTR [rbp+0xb8]
   140029b4e:	mov    QWORD PTR [rsp+0x38],r15
   140029b53:	mov    QWORD PTR [rsp+0x30],r15
   140029b58:	mov    DWORD PTR [rsp+0x28],eax
   140029b5c:	mov    r9d,edi
   140029b5f:	mov    r8,rbx
   140029b62:	xor    edx,edx
   140029b64:	mov    ecx,r13d
   140029b67:	mov    QWORD PTR [rsp+0x20],r14
   140029b6c:	call   QWORD PTR [rip+0x106b6]        # 0x14003a228
   140029b72:	cmp    eax,r15d
   140029b75:	je     0x140029c0c
   140029b7b:	mov    rsi,r14
   140029b7e:	jmp    0x140029c0c
   140029b83:	cmp    DWORD PTR [rbp+0x0],r15d
   140029b87:	jne    0x140029bb5
   140029b89:	mov    QWORD PTR [rsp+0x38],r15
   140029b8e:	mov    QWORD PTR [rsp+0x30],r15
   140029b93:	mov    r9d,edi
   140029b96:	mov    r8,rbx
   140029b99:	xor    edx,edx
   140029b9b:	mov    ecx,r13d
   140029b9e:	mov    DWORD PTR [rsp+0x28],r15d
   140029ba3:	mov    QWORD PTR [rsp+0x20],r15
   140029ba8:	call   QWORD PTR [rip+0x1067a]        # 0x14003a228
   140029bae:	mov    edi,eax
   140029bb0:	cmp    eax,r15d
   140029bb3:	je     0x140029c0c
   140029bb5:	movsxd rdx,edi
   140029bb8:	mov    ecx,0x1
   140029bbd:	call   0x140020950
   140029bc2:	mov    rsi,rax
   140029bc5:	cmp    rax,r15
   140029bc8:	je     0x140029c0c
   140029bca:	mov    QWORD PTR [rsp+0x38],r15
   140029bcf:	mov    QWORD PTR [rsp+0x30],r15
   140029bd4:	mov    r9d,edi
   140029bd7:	mov    r8,rbx
   140029bda:	xor    edx,edx
   140029bdc:	mov    ecx,r13d
   140029bdf:	mov    DWORD PTR [rsp+0x28],edi
   140029be3:	mov    QWORD PTR [rsp+0x20],rax
   140029be8:	call   QWORD PTR [rip+0x1063a]        # 0x14003a228
   140029bee:	cmp    eax,r15d
   140029bf1:	jne    0x140029c00
   140029bf3:	mov    rcx,rsi
   140029bf6:	call   0x14001ca48
   140029bfb:	mov    rsi,r15
   140029bfe:	jmp    0x140029c0c
   140029c00:	cmp    r12d,0xffffffff
   140029c04:	je     0x140029c0c
   140029c06:	mov    rcx,QWORD PTR [rbp+0x10]
   140029c0a:	mov    DWORD PTR [rcx],eax
   140029c0c:	lea    rcx,[rbx-0x10]
   140029c10:	cmp    DWORD PTR [rcx],0xdddd
   140029c16:	jne    0x140029c1d
   140029c18:	call   0x14001ca48
   140029c1d:	mov    rax,rsi
   140029c20:	mov    rcx,QWORD PTR [rbp+0x30]
   140029c24:	xor    rcx,rbp
   140029c27:	call   0x14001c500
   140029c2c:	lea    rsp,[rbp+0x48]
   140029c30:	pop    r15
   140029c32:	pop    r14
   140029c34:	pop    r13
   140029c36:	pop    r12
   140029c38:	pop    rdi
   140029c39:	pop    rsi
   140029c3a:	pop    rbx
   140029c3b:	pop    rbp
   140029c3c:	ret    
   140029c3d:	int3   
   140029c3e:	int3   
   140029c3f:	int3   
   140029c40:	mov    QWORD PTR [rsp+0x10],rbp
   140029c45:	mov    QWORD PTR [rsp+0x18],rsi
   140029c4a:	push   rdi
   140029c4b:	sub    rsp,0x60
   140029c4f:	movsxd rdi,ecx
   140029c52:	mov    ebp,edx
   140029c54:	lea    rcx,[rsp+0x40]
   140029c59:	mov    rdx,r8
   140029c5c:	call   0x14001cf30
   140029c61:	lea    r11d,[rdi+0x1]
   140029c65:	cmp    r11d,0x100
   140029c6c:	ja     0x140029c83
   140029c6e:	mov    rax,QWORD PTR [rsp+0x40]
   140029c73:	mov    rcx,QWORD PTR [rax+0x140]
   140029c7a:	movzx  eax,WORD PTR [rcx+rdi*2]
   140029c7e:	jmp    0x140029d22
   140029c83:	mov    esi,edi
   140029c85:	lea    rdx,[rsp+0x40]
   140029c8a:	sar    esi,0x8
   140029c8d:	movzx  ecx,sil
   140029c91:	call   0x140029e14
   140029c96:	mov    edx,0x1
   140029c9b:	test   eax,eax
   140029c9d:	je     0x140029cbd
   140029c9f:	mov    BYTE PTR [rsp+0x88],sil
   140029ca7:	mov    BYTE PTR [rsp+0x89],dil
   140029caf:	mov    BYTE PTR [rsp+0x8a],0x0
   140029cb7:	lea    r9d,[rdx+0x1]
   140029cbb:	jmp    0x140029cd0
   140029cbd:	mov    BYTE PTR [rsp+0x88],dil
   140029cc5:	mov    BYTE PTR [rsp+0x89],0x0
   140029ccd:	mov    r9d,edx
   140029cd0:	mov    rcx,QWORD PTR [rsp+0x40]
   140029cd5:	mov    DWORD PTR [rsp+0x38],edx
   140029cd9:	lea    r8,[rsp+0x88]
   140029ce1:	mov    eax,DWORD PTR [rcx+0x14]
   140029ce4:	mov    DWORD PTR [rsp+0x30],eax
   140029ce8:	mov    eax,DWORD PTR [rcx+0x4]
   140029ceb:	lea    rcx,[rsp+0x40]
   140029cf0:	mov    DWORD PTR [rsp+0x28],eax
   140029cf4:	lea    rax,[rsp+0x70]
   140029cf9:	mov    QWORD PTR [rsp+0x20],rax
   140029cfe:	call   0x14002976c
   140029d03:	test   eax,eax
   140029d05:	jne    0x140029d1d
   140029d07:	cmp    BYTE PTR [rsp+0x58],al
   140029d0b:	je     0x140029d19
   140029d0d:	mov    rax,QWORD PTR [rsp+0x50]
   140029d12:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140029d19:	xor    eax,eax
   140029d1b:	jmp    0x140029d37
   140029d1d:	movzx  eax,WORD PTR [rsp+0x70]
   140029d22:	and    eax,ebp
   140029d24:	cmp    BYTE PTR [rsp+0x58],0x0
   140029d29:	je     0x140029d37
   140029d2b:	mov    rcx,QWORD PTR [rsp+0x50]
   140029d30:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140029d37:	lea    r11,[rsp+0x60]
   140029d3c:	mov    rbp,QWORD PTR [r11+0x18]
   140029d40:	mov    rsi,QWORD PTR [r11+0x20]
   140029d44:	mov    rsp,r11
   140029d47:	pop    rdi
   140029d48:	ret    
   140029d49:	int3   
   140029d4a:	int3   
   140029d4b:	int3   
   140029d4c:	mov    QWORD PTR [rsp+0x8],rbx
   140029d51:	push   rdi
   140029d52:	sub    rsp,0x30
   140029d56:	mov    rbx,r8
   140029d59:	mov    rdi,rdx
   140029d5c:	test   rcx,rcx
   140029d5f:	je     0x140029d93
   140029d61:	xor    edx,edx
   140029d63:	lea    rax,[rdx-0x20]
   140029d67:	div    rcx
   140029d6a:	cmp    rax,rdi
   140029d6d:	jae    0x140029d93
   140029d6f:	call   0x140020aa4
   140029d74:	and    QWORD PTR [rsp+0x20],0x0
   140029d7a:	xor    r9d,r9d
   140029d7d:	xor    r8d,r8d
   140029d80:	xor    edx,edx
   140029d82:	xor    ecx,ecx
   140029d84:	mov    DWORD PTR [rax],0xc
   140029d8a:	call   0x14001ccf0
   140029d8f:	xor    eax,eax
   140029d91:	jmp    0x140029df0
   140029d93:	imul   rdi,rcx
   140029d97:	mov    eax,0x1
   140029d9c:	test   rdi,rdi
   140029d9f:	cmove  rdi,rax
   140029da3:	xor    eax,eax
   140029da5:	cmp    rdi,0xffffffffffffffe0
   140029da9:	ja     0x140029dc3
   140029dab:	mov    rcx,QWORD PTR [rip+0x222de]        # 0x14004c090
   140029db2:	lea    edx,[rax+0x8]
   140029db5:	mov    r8,rdi
   140029db8:	call   QWORD PTR [rip+0x104ba]        # 0x14003a278
   140029dbe:	test   rax,rax
   140029dc1:	jne    0x140029df0
   140029dc3:	cmp    DWORD PTR [rip+0x226ae],0x0        # 0x14004c478
   140029dca:	je     0x140029de5
   140029dcc:	mov    rcx,rdi
   140029dcf:	call   0x140024314
   140029dd4:	test   eax,eax
   140029dd6:	jne    0x140029da3
   140029dd8:	test   rbx,rbx
   140029ddb:	je     0x140029d8f
   140029ddd:	mov    DWORD PTR [rbx],0xc
   140029de3:	jmp    0x140029d8f
   140029de5:	test   rbx,rbx
   140029de8:	je     0x140029df0
   140029dea:	mov    DWORD PTR [rbx],0xc
   140029df0:	mov    rbx,QWORD PTR [rsp+0x40]
   140029df5:	add    rsp,0x30
   140029df9:	pop    rdi
   140029dfa:	ret    
   140029dfb:	int3   
   140029dfc:	int3   
   140029dfd:	int3   
   140029dfe:	int3   
   140029dff:	int3   
   140029e00:	mov    rax,QWORD PTR [rsp]
   140029e04:	mov    QWORD PTR [rcx],rax
   140029e07:	ret    
   140029e08:	neg    rcx
   140029e0b:	sbb    eax,eax
   140029e0d:	and    eax,0x1
   140029e10:	ret    
   140029e11:	int3   
   140029e12:	int3   
   140029e13:	int3   
   140029e14:	rex push rbx
   140029e16:	sub    rsp,0x40
   140029e1a:	mov    ebx,ecx
   140029e1c:	lea    rcx,[rsp+0x20]
   140029e21:	call   0x14001cf30
   140029e26:	mov    rax,QWORD PTR [rsp+0x20]
   140029e2b:	movzx  r11d,bl
   140029e2f:	mov    rcx,QWORD PTR [rax+0x140]
   140029e36:	movzx  eax,WORD PTR [rcx+r11*2]
   140029e3b:	and    eax,0x8000
   140029e40:	cmp    BYTE PTR [rsp+0x38],0x0
   140029e45:	je     0x140029e53
   140029e47:	mov    rcx,QWORD PTR [rsp+0x30]
   140029e4c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140029e53:	add    rsp,0x40
   140029e57:	pop    rbx
   140029e58:	ret    
   140029e59:	int3   
   140029e5a:	int3   
   140029e5b:	int3   
   140029e5c:	rex push rbx
   140029e5e:	sub    rsp,0x40
   140029e62:	mov    ebx,ecx
   140029e64:	lea    rcx,[rsp+0x20]
   140029e69:	xor    edx,edx
   140029e6b:	call   0x14001cf30
   140029e70:	mov    rax,QWORD PTR [rsp+0x20]
   140029e75:	movzx  r11d,bl
   140029e79:	mov    rcx,QWORD PTR [rax+0x140]
   140029e80:	movzx  eax,WORD PTR [rcx+r11*2]
   140029e85:	and    eax,0x8000
   140029e8a:	cmp    BYTE PTR [rsp+0x38],0x0
   140029e8f:	je     0x140029e9d
   140029e91:	mov    rcx,QWORD PTR [rsp+0x30]
   140029e96:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140029e9d:	add    rsp,0x40
   140029ea1:	pop    rbx
   140029ea2:	ret    
   140029ea3:	int3   
   140029ea4:	rex push rbx
   140029ea6:	sub    rsp,0x40
   140029eaa:	mov    rbx,rcx
   140029ead:	lea    rcx,[rsp+0x20]
   140029eb2:	call   0x14001cf30
   140029eb7:	movsx  ecx,BYTE PTR [rbx]
   140029eba:	call   0x1400224cc
   140029ebf:	cmp    eax,0x65
   140029ec2:	je     0x140029ed3
   140029ec4:	inc    rbx
   140029ec7:	movzx  ecx,BYTE PTR [rbx]
   140029eca:	call   0x14001ffac
   140029ecf:	test   eax,eax
   140029ed1:	jne    0x140029ec4
   140029ed3:	movsx  ecx,BYTE PTR [rbx]
   140029ed6:	call   0x1400224cc
   140029edb:	cmp    eax,0x78
   140029ede:	jne    0x140029ee4
   140029ee0:	add    rbx,0x2
   140029ee4:	mov    rax,QWORD PTR [rsp+0x20]
   140029ee9:	mov    dl,BYTE PTR [rbx]
   140029eeb:	mov    rcx,QWORD PTR [rax+0x128]
   140029ef2:	mov    rax,QWORD PTR [rcx]
   140029ef5:	mov    cl,BYTE PTR [rax]
   140029ef7:	mov    BYTE PTR [rbx],cl
   140029ef9:	inc    rbx
   140029efc:	mov    al,BYTE PTR [rbx]
   140029efe:	mov    BYTE PTR [rbx],dl
   140029f00:	mov    dl,al
   140029f02:	mov    al,BYTE PTR [rbx]
   140029f04:	inc    rbx
   140029f07:	test   al,al
   140029f09:	jne    0x140029efc
   140029f0b:	cmp    BYTE PTR [rsp+0x38],al
   140029f0f:	je     0x140029f1d
   140029f11:	mov    rax,QWORD PTR [rsp+0x30]
   140029f16:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140029f1d:	add    rsp,0x40
   140029f21:	pop    rbx
   140029f22:	ret    
   140029f23:	int3   
   140029f24:	rex push rbx
   140029f26:	sub    rsp,0x40
   140029f2a:	mov    rbx,rcx
   140029f2d:	lea    rcx,[rsp+0x20]
   140029f32:	call   0x14001cf30
   140029f37:	mov    r11b,BYTE PTR [rbx]
   140029f3a:	mov    rcx,QWORD PTR [rsp+0x20]
   140029f3f:	test   r11b,r11b
   140029f42:	je     0x140029f60
   140029f44:	mov    rax,QWORD PTR [rcx+0x128]
   140029f4b:	mov    rdx,QWORD PTR [rax]
   140029f4e:	mov    al,BYTE PTR [rdx]
   140029f50:	cmp    r11b,al
   140029f53:	je     0x140029f60
   140029f55:	inc    rbx
   140029f58:	mov    r11b,BYTE PTR [rbx]
   140029f5b:	test   r11b,r11b
   140029f5e:	jne    0x140029f50
   140029f60:	mov    al,BYTE PTR [rbx]
   140029f62:	inc    rbx
   140029f65:	test   al,al
   140029f67:	je     0x140029fa8
   140029f69:	jmp    0x140029f76
   140029f6b:	cmp    al,0x65
   140029f6d:	je     0x140029f7c
   140029f6f:	cmp    al,0x45
   140029f71:	je     0x140029f7c
   140029f73:	inc    rbx
   140029f76:	mov    al,BYTE PTR [rbx]
   140029f78:	test   al,al
   140029f7a:	jne    0x140029f6b
   140029f7c:	mov    rdx,rbx
   140029f7f:	dec    rbx
   140029f82:	cmp    BYTE PTR [rbx],0x30
   140029f85:	je     0x140029f7f
   140029f87:	mov    rax,QWORD PTR [rcx+0x128]
   140029f8e:	mov    rcx,QWORD PTR [rax]
   140029f91:	mov    al,BYTE PTR [rcx]
   140029f93:	cmp    BYTE PTR [rbx],al
   140029f95:	jne    0x140029f9a
   140029f97:	dec    rbx
   140029f9a:	mov    al,BYTE PTR [rdx]
   140029f9c:	inc    rbx
   140029f9f:	inc    rdx
   140029fa2:	mov    BYTE PTR [rbx],al
   140029fa4:	test   al,al
   140029fa6:	jne    0x140029f9a
   140029fa8:	cmp    BYTE PTR [rsp+0x38],0x0
   140029fad:	je     0x140029fbb
   140029faf:	mov    rax,QWORD PTR [rsp+0x30]
   140029fb4:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140029fbb:	add    rsp,0x40
   140029fbf:	pop    rbx
   140029fc0:	ret    
   140029fc1:	int3   
   140029fc2:	int3   
   140029fc3:	int3   
   140029fc4:	movsd  xmm0,QWORD PTR [rcx]
   140029fc8:	comisd xmm0,QWORD PTR [rip+0x12b08]        # 0x14003cad8
   140029fd0:	jb     0x140029fd8
   140029fd2:	mov    eax,0x1
   140029fd7:	ret    
   140029fd8:	xor    eax,eax
   140029fda:	ret    
   140029fdb:	int3   
   140029fdc:	rex push rbx
   140029fde:	sub    rsp,0x30
   140029fe2:	mov    rax,r8
   140029fe5:	mov    rbx,rdx
   140029fe8:	mov    r8,r9
   140029feb:	mov    rdx,rax
   140029fee:	test   ecx,ecx
   140029ff0:	je     0x14002a006
   140029ff2:	lea    rcx,[rsp+0x20]
   140029ff7:	call   0x14002d7f8
   140029ffc:	mov    r11,QWORD PTR [rsp+0x20]
   14002a001:	mov    QWORD PTR [rbx],r11
   14002a004:	jmp    0x14002a018
   14002a006:	lea    rcx,[rsp+0x40]
   14002a00b:	call   0x14002d8fc
   14002a010:	mov    r11d,DWORD PTR [rsp+0x40]
   14002a015:	mov    DWORD PTR [rbx],r11d
   14002a018:	add    rsp,0x30
   14002a01c:	pop    rbx
   14002a01d:	ret    
   14002a01e:	int3   
   14002a01f:	int3   
   14002a020:	xor    r9d,r9d
   14002a023:	jmp    0x140029fdc
   14002a028:	xor    edx,edx
   14002a02a:	jmp    0x140029ea4
   14002a02f:	int3   
   14002a030:	xor    edx,edx
   14002a032:	jmp    0x140029f24
   14002a037:	int3   
   14002a038:	mov    rax,rsp
   14002a03b:	mov    QWORD PTR [rax+0x8],rbx
   14002a03f:	mov    QWORD PTR [rax+0x10],rbp
   14002a043:	mov    QWORD PTR [rax+0x18],rsi
   14002a047:	mov    QWORD PTR [rax+0x20],rdi
   14002a04b:	push   r12
   14002a04d:	push   r13
   14002a04f:	push   r15
   14002a051:	sub    rsp,0x50
   14002a055:	mov    r12,rdx
   14002a058:	mov    rdx,QWORD PTR [rsp+0xa0]
   14002a060:	mov    rdi,rcx
   14002a063:	lea    rcx,[rax-0x38]
   14002a067:	mov    r15d,r9d
   14002a06a:	movsxd rbx,r8d
   14002a06d:	call   0x14001cf30
   14002a072:	xor    r13d,r13d
   14002a075:	cmp    rdi,r13
   14002a078:	jne    0x14002a0b3
   14002a07a:	call   0x140020aa4
   14002a07f:	lea    ebx,[r13+0x16]
   14002a083:	xor    r9d,r9d
   14002a086:	xor    r8d,r8d
   14002a089:	xor    edx,edx
   14002a08b:	xor    ecx,ecx
   14002a08d:	mov    DWORD PTR [rax],ebx
   14002a08f:	mov    QWORD PTR [rsp+0x20],r13
   14002a094:	call   0x14001ccf0
   14002a099:	cmp    BYTE PTR [rsp+0x48],r13b
   14002a09e:	je     0x14002a0ac
   14002a0a0:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a0a5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002a0ac:	mov    eax,ebx
   14002a0ae:	jmp    0x14002a270
   14002a0b3:	cmp    r12,r13
   14002a0b6:	ja     0x14002a0ed
   14002a0b8:	call   0x140020aa4
   14002a0bd:	mov    ebx,0x16
   14002a0c2:	xor    r9d,r9d
   14002a0c5:	xor    r8d,r8d
   14002a0c8:	xor    edx,edx
   14002a0ca:	xor    ecx,ecx
   14002a0cc:	mov    DWORD PTR [rax],ebx
   14002a0ce:	mov    QWORD PTR [rsp+0x20],r13
   14002a0d3:	call   0x14001ccf0
   14002a0d8:	cmp    BYTE PTR [rsp+0x48],r13b
   14002a0dd:	je     0x14002a0ac
   14002a0df:	mov    rax,QWORD PTR [rsp+0x40]
   14002a0e4:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002a0eb:	jmp    0x14002a0ac
   14002a0ed:	mov    eax,r13d
   14002a0f0:	cmp    ebx,r13d
   14002a0f3:	cmovg  eax,ebx
   14002a0f6:	add    eax,0x9
   14002a0f9:	cdqe   
   14002a0fb:	cmp    r12,rax
   14002a0fe:	ja     0x14002a10f
   14002a100:	call   0x140020aa4
   14002a105:	mov    ebx,0x22
   14002a10a:	jmp    0x14002a083
   14002a10f:	mov    rbp,QWORD PTR [rsp+0x90]
   14002a117:	cmp    BYTE PTR [rsp+0x98],r13b
   14002a11f:	je     0x14002a157
   14002a121:	cmp    DWORD PTR [rbp+0x0],0x2d
   14002a125:	mov    rsi,r13
   14002a128:	sete   sil
   14002a12c:	add    rsi,rdi
   14002a12f:	test   ebx,ebx
   14002a131:	setg   r13b
   14002a135:	test   r13d,r13d
   14002a138:	je     0x14002a154
   14002a13a:	mov    rcx,rsi
   14002a13d:	call   0x14001c650
   14002a142:	movsxd rcx,r13d
   14002a145:	mov    rdx,rsi
   14002a148:	lea    r8,[rax+0x1]
   14002a14c:	add    rcx,rsi
   14002a14f:	call   0x1400205b0
   14002a154:	xor    r13d,r13d
   14002a157:	cmp    DWORD PTR [rbp+0x0],0x2d
   14002a15b:	mov    rdx,rdi
   14002a15e:	jne    0x14002a167
   14002a160:	mov    BYTE PTR [rdi],0x2d
   14002a163:	lea    rdx,[rdi+0x1]
   14002a167:	cmp    ebx,r13d
   14002a16a:	jle    0x14002a187
   14002a16c:	mov    al,BYTE PTR [rdx+0x1]
   14002a16f:	mov    BYTE PTR [rdx],al
   14002a171:	mov    rax,QWORD PTR [rsp+0x30]
   14002a176:	inc    rdx
   14002a179:	mov    rcx,QWORD PTR [rax+0x128]
   14002a180:	mov    rax,QWORD PTR [rcx]
   14002a183:	mov    cl,BYTE PTR [rax]
   14002a185:	mov    BYTE PTR [rdx],cl
   14002a187:	cmp    BYTE PTR [rsp+0x98],r13b
   14002a18f:	mov    rcx,r13
   14002a192:	lea    r8,[rip+0x12947]        # 0x14003cae0
   14002a199:	sete   cl
   14002a19c:	add    rbx,rdx
   14002a19f:	add    rbx,rcx
   14002a1a2:	sub    rdi,rbx
   14002a1a5:	cmp    r12,0xffffffffffffffff
   14002a1a9:	mov    rcx,rbx
   14002a1ac:	lea    rdx,[r12+rdi*1]
   14002a1b0:	cmove  rdx,r12
   14002a1b4:	call   0x140023db4
   14002a1b9:	cmp    eax,r13d
   14002a1bc:	je     0x14002a1d2
   14002a1be:	xor    r9d,r9d
   14002a1c1:	xor    r8d,r8d
   14002a1c4:	xor    edx,edx
   14002a1c6:	xor    ecx,ecx
   14002a1c8:	mov    QWORD PTR [rsp+0x20],r13
   14002a1cd:	call   0x14001cbc8
   14002a1d2:	lea    rcx,[rbx+0x2]
   14002a1d6:	cmp    r15d,r13d
   14002a1d9:	je     0x14002a1de
   14002a1db:	mov    BYTE PTR [rbx],0x45
   14002a1de:	mov    rax,QWORD PTR [rbp+0x10]
   14002a1e2:	cmp    BYTE PTR [rax],0x30
   14002a1e5:	je     0x14002a23e
   14002a1e7:	mov    r8d,DWORD PTR [rbp+0x4]
   14002a1eb:	sub    r8d,0x1
   14002a1ef:	jns    0x14002a1f8
   14002a1f1:	neg    r8d
   14002a1f4:	mov    BYTE PTR [rbx+0x1],0x2d
   14002a1f8:	cmp    r8d,0x64
   14002a1fc:	jl     0x14002a219
   14002a1fe:	mov    eax,0x51eb851f
   14002a203:	imul   r8d
   14002a206:	sar    edx,0x5
   14002a209:	mov    eax,edx
   14002a20b:	shr    eax,0x1f
   14002a20e:	add    edx,eax
   14002a210:	add    BYTE PTR [rbx+0x2],dl
   14002a213:	imul   edx,edx,0xffffff9c
   14002a216:	add    r8d,edx
   14002a219:	cmp    r8d,0xa
   14002a21d:	jl     0x14002a23a
   14002a21f:	mov    eax,0x66666667
   14002a224:	imul   r8d
   14002a227:	sar    edx,0x2
   14002a22a:	mov    eax,edx
   14002a22c:	shr    eax,0x1f
   14002a22f:	add    edx,eax
   14002a231:	add    BYTE PTR [rbx+0x3],dl
   14002a234:	imul   edx,edx,0xfffffff6
   14002a237:	add    r8d,edx
   14002a23a:	add    BYTE PTR [rbx+0x4],r8b
   14002a23e:	test   BYTE PTR [rip+0x22837],0x1        # 0x14004ca7c
   14002a245:	je     0x14002a25b
   14002a247:	cmp    BYTE PTR [rcx],0x30
   14002a24a:	jne    0x14002a25b
   14002a24c:	lea    rdx,[rcx+0x1]
   14002a250:	mov    r8d,0x3
   14002a256:	call   0x1400205b0
   14002a25b:	cmp    BYTE PTR [rsp+0x48],r13b
   14002a260:	je     0x14002a26e
   14002a262:	mov    rax,QWORD PTR [rsp+0x40]
   14002a267:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002a26e:	xor    eax,eax
   14002a270:	lea    r11,[rsp+0x50]
   14002a275:	mov    rbx,QWORD PTR [r11+0x20]
   14002a279:	mov    rbp,QWORD PTR [r11+0x28]
   14002a27d:	mov    rsi,QWORD PTR [r11+0x30]
   14002a281:	mov    rdi,QWORD PTR [r11+0x38]
   14002a285:	mov    rsp,r11
   14002a288:	pop    r15
   14002a28a:	pop    r13
   14002a28c:	pop    r12
   14002a28e:	ret    
   14002a28f:	int3   
   14002a290:	rex push rbx
   14002a292:	push   rsi
   14002a293:	push   rdi
   14002a294:	push   r12
   14002a296:	sub    rsp,0x88
   14002a29d:	mov    rax,QWORD PTR [rip+0x1f1bc]        # 0x140049460
   14002a2a4:	xor    rax,rsp
   14002a2a7:	mov    QWORD PTR [rsp+0x70],rax
   14002a2ac:	mov    rcx,QWORD PTR [rcx]
   14002a2af:	mov    rbx,r8
   14002a2b2:	mov    rdi,rdx
   14002a2b5:	mov    esi,r9d
   14002a2b8:	mov    r12d,0x16
   14002a2be:	lea    r8,[rsp+0x58]
   14002a2c3:	lea    rdx,[rsp+0x40]
   14002a2c8:	mov    r9,r12
   14002a2cb:	call   0x14002dbb4
   14002a2d0:	test   rdi,rdi
   14002a2d3:	jne    0x14002a2fa
   14002a2d5:	call   0x140020aa4
   14002a2da:	and    QWORD PTR [rsp+0x20],0x0
   14002a2e0:	xor    r9d,r9d
   14002a2e3:	xor    r8d,r8d
   14002a2e6:	xor    edx,edx
   14002a2e8:	xor    ecx,ecx
   14002a2ea:	mov    DWORD PTR [rax],r12d
   14002a2ed:	call   0x14001ccf0
   14002a2f2:	mov    eax,r12d
   14002a2f5:	jmp    0x14002a382
   14002a2fa:	test   rbx,rbx
   14002a2fd:	je     0x14002a2d5
   14002a2ff:	or     rdx,0xffffffffffffffff
   14002a303:	cmp    rbx,rdx
   14002a306:	je     0x14002a322
   14002a308:	xor    eax,eax
   14002a30a:	cmp    DWORD PTR [rsp+0x40],0x2d
   14002a30f:	mov    rdx,rbx
   14002a312:	sete   al
   14002a315:	sub    rdx,rax
   14002a318:	xor    eax,eax
   14002a31a:	test   esi,esi
   14002a31c:	setg   al
   14002a31f:	sub    rdx,rax
   14002a322:	xor    eax,eax
   14002a324:	cmp    DWORD PTR [rsp+0x40],0x2d
   14002a329:	lea    r8d,[rsi+0x1]
   14002a32d:	sete   al
   14002a330:	xor    ecx,ecx
   14002a332:	test   esi,esi
   14002a334:	setg   cl
   14002a337:	add    rax,rdi
   14002a33a:	lea    r9,[rsp+0x40]
   14002a33f:	add    rcx,rax
   14002a342:	call   0x14002da00
   14002a347:	test   eax,eax
   14002a349:	je     0x14002a350
   14002a34b:	mov    BYTE PTR [rdi],0x0
   14002a34e:	jmp    0x14002a382
   14002a350:	mov    rax,QWORD PTR [rsp+0xd8]
   14002a358:	mov    r9d,DWORD PTR [rsp+0xd0]
   14002a360:	mov    r8d,esi
   14002a363:	mov    QWORD PTR [rsp+0x30],rax
   14002a368:	lea    rax,[rsp+0x40]
   14002a36d:	mov    rdx,rbx
   14002a370:	mov    rcx,rdi
   14002a373:	mov    BYTE PTR [rsp+0x28],0x0
   14002a378:	mov    QWORD PTR [rsp+0x20],rax
   14002a37d:	call   0x14002a038
   14002a382:	mov    rcx,QWORD PTR [rsp+0x70]
   14002a387:	xor    rcx,rsp
   14002a38a:	call   0x14001c500
   14002a38f:	add    rsp,0x88
   14002a396:	pop    r12
   14002a398:	pop    rdi
   14002a399:	pop    rsi
   14002a39a:	pop    rbx
   14002a39b:	ret    
   14002a39c:	mov    rax,rsp
   14002a39f:	mov    QWORD PTR [rax+0x8],rbx
   14002a3a3:	mov    QWORD PTR [rax+0x10],rbp
   14002a3a7:	mov    QWORD PTR [rax+0x18],rdi
   14002a3ab:	mov    QWORD PTR [rax+0x20],r12
   14002a3af:	push   r13
   14002a3b1:	push   r14
   14002a3b3:	push   r15
   14002a3b5:	sub    rsp,0x50
   14002a3b9:	mov    rdi,rdx
   14002a3bc:	mov    rdx,QWORD PTR [rsp+0x98]
   14002a3c4:	mov    r13,rcx
   14002a3c7:	lea    rcx,[rax-0x38]
   14002a3cb:	mov    ebp,r9d
   14002a3ce:	mov    rbx,r8
   14002a3d1:	mov    r15d,0x3ff
   14002a3d7:	mov    r12d,0x30
   14002a3dd:	call   0x14001cf30
   14002a3e2:	xor    r14d,r14d
   14002a3e5:	cmp    ebp,r14d
   14002a3e8:	cmovl  ebp,r14d
   14002a3ec:	cmp    rdi,r14
   14002a3ef:	jne    0x14002a42b
   14002a3f1:	call   0x140020aa4
   14002a3f6:	lea    ebx,[r12-0x1a]
   14002a3fb:	xor    r9d,r9d
   14002a3fe:	xor    r8d,r8d
   14002a401:	xor    edx,edx
   14002a403:	xor    ecx,ecx
   14002a405:	mov    DWORD PTR [rax],ebx
   14002a407:	mov    QWORD PTR [rsp+0x20],r14
   14002a40c:	call   0x14001ccf0
   14002a411:	cmp    BYTE PTR [rsp+0x48],r14b
   14002a416:	je     0x14002a424
   14002a418:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a41d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002a424:	mov    eax,ebx
   14002a426:	jmp    0x14002a7a6
   14002a42b:	cmp    rbx,r14
   14002a42e:	ja     0x14002a465
   14002a430:	call   0x140020aa4
   14002a435:	mov    ebx,0x16
   14002a43a:	xor    r9d,r9d
   14002a43d:	xor    r8d,r8d
   14002a440:	xor    edx,edx
   14002a442:	xor    ecx,ecx
   14002a444:	mov    DWORD PTR [rax],ebx
   14002a446:	mov    QWORD PTR [rsp+0x20],r14
   14002a44b:	call   0x14001ccf0
   14002a450:	cmp    BYTE PTR [rsp+0x48],r14b
   14002a455:	je     0x14002a424
   14002a457:	mov    rax,QWORD PTR [rsp+0x40]
   14002a45c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002a463:	jmp    0x14002a424
   14002a465:	lea    eax,[rbp+0xb]
   14002a468:	mov    BYTE PTR [rdi],r14b
   14002a46b:	movsxd rcx,eax
   14002a46e:	cmp    rbx,rcx
   14002a471:	ja     0x14002a482
   14002a473:	call   0x140020aa4
   14002a478:	mov    ebx,0x22
   14002a47d:	jmp    0x14002a3fb
   14002a482:	mov    rax,QWORD PTR [r13+0x0]
   14002a486:	mov    ecx,0x7ff
   14002a48b:	shr    rax,0x34
   14002a48f:	and    rax,rcx
   14002a492:	cmp    rax,rcx
   14002a495:	jne    0x14002a536
   14002a49b:	lea    r8,[rbx-0x2]
   14002a49f:	cmp    rbx,0xffffffffffffffff
   14002a4a3:	lea    rdx,[rdi+0x2]
   14002a4a7:	mov    r9d,ebp
   14002a4aa:	mov    rcx,r13
   14002a4ad:	cmove  r8,rbx
   14002a4b1:	mov    QWORD PTR [rsp+0x28],r14
   14002a4b6:	mov    DWORD PTR [rsp+0x20],r14d
   14002a4bb:	call   0x14002a290
   14002a4c0:	cmp    eax,r14d
   14002a4c3:	je     0x14002a4e4
   14002a4c5:	mov    BYTE PTR [rdi],r14b
   14002a4c8:	cmp    BYTE PTR [rsp+0x48],r14b
   14002a4cd:	je     0x14002a7a6
   14002a4d3:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a4d8:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002a4df:	jmp    0x14002a7a6
   14002a4e4:	cmp    BYTE PTR [rdi+0x2],0x2d
   14002a4e8:	jne    0x14002a4f0
   14002a4ea:	mov    BYTE PTR [rdi],0x2d
   14002a4ed:	inc    rdi
   14002a4f0:	mov    ebx,DWORD PTR [rsp+0x90]
   14002a4f7:	mov    BYTE PTR [rdi],0x30
   14002a4fa:	mov    edx,0x65
   14002a4ff:	mov    eax,ebx
   14002a501:	neg    eax
   14002a503:	sbb    cl,cl
   14002a505:	and    cl,0xe0
   14002a508:	add    cl,0x78
   14002a50b:	mov    BYTE PTR [rdi+0x1],cl
   14002a50e:	lea    rcx,[rdi+0x2]
   14002a512:	call   0x14002d7d0
   14002a517:	cmp    rax,r14
   14002a51a:	je     0x14002a52c
   14002a51c:	neg    ebx
   14002a51e:	sbb    cl,cl
   14002a520:	and    cl,0xe0
   14002a523:	add    cl,0x70
   14002a526:	mov    BYTE PTR [rax],cl
   14002a528:	mov    BYTE PTR [rax+0x3],r14b
   14002a52c:	cmp    BYTE PTR [rsp+0x48],r14b
   14002a531:	jmp    0x14002a796
   14002a536:	movabs rax,0x8000000000000000
   14002a540:	test   QWORD PTR [r13+0x0],rax
   14002a544:	je     0x14002a54c
   14002a546:	mov    BYTE PTR [rdi],0x2d
   14002a549:	inc    rdi
   14002a54c:	mov    r9d,DWORD PTR [rsp+0x90]
   14002a554:	mov    r11d,0x30
   14002a55a:	movabs rbx,0xfffffffffffff
   14002a564:	mov    eax,r9d
   14002a567:	mov    BYTE PTR [rdi],r11b
   14002a56a:	neg    eax
   14002a56c:	mov    eax,r9d
   14002a56f:	sbb    cl,cl
   14002a571:	and    cl,0xe0
   14002a574:	add    cl,0x78
   14002a577:	neg    eax
   14002a579:	movabs rax,0x7ff0000000000000
   14002a583:	sbb    edx,edx
   14002a585:	mov    BYTE PTR [rdi+0x1],cl
   14002a588:	and    edx,0xffffffe0
   14002a58b:	sub    edx,0xffffffd9
   14002a58e:	test   QWORD PTR [r13+0x0],rax
   14002a592:	jne    0x14002a5b2
   14002a594:	mov    BYTE PTR [rdi+0x2],r11b
   14002a598:	mov    rax,QWORD PTR [r13+0x0]
   14002a59c:	add    rdi,0x3
   14002a5a0:	and    rax,rbx
   14002a5a3:	neg    rax
   14002a5a6:	sbb    r15,r15
   14002a5a9:	and    r15d,0x3fe
   14002a5b0:	jmp    0x14002a5ba
   14002a5b2:	mov    BYTE PTR [rdi+0x2],0x31
   14002a5b6:	add    rdi,0x3
   14002a5ba:	xor    r10d,r10d
   14002a5bd:	mov    r14,rdi
   14002a5c0:	inc    rdi
   14002a5c3:	cmp    ebp,r10d
   14002a5c6:	jne    0x14002a5cd
   14002a5c8:	mov    BYTE PTR [r14],r10b
   14002a5cb:	jmp    0x14002a5e1
   14002a5cd:	mov    rax,QWORD PTR [rsp+0x30]
   14002a5d2:	mov    rcx,QWORD PTR [rax+0x128]
   14002a5d9:	mov    rax,QWORD PTR [rcx]
   14002a5dc:	mov    cl,BYTE PTR [rax]
   14002a5de:	mov    BYTE PTR [r14],cl
   14002a5e1:	test   QWORD PTR [r13+0x0],rbx
   14002a5e5:	jbe    0x14002a67b
   14002a5eb:	movabs r8,0xf000000000000
   14002a5f5:	cmp    ebp,r10d
   14002a5f8:	jle    0x14002a62d
   14002a5fa:	mov    rax,QWORD PTR [r13+0x0]
   14002a5fe:	mov    cl,r12b
   14002a601:	and    rax,r8
   14002a604:	and    rax,rbx
   14002a607:	shr    rax,cl
   14002a60a:	add    ax,r11w
   14002a60e:	cmp    ax,0x39
   14002a612:	jbe    0x14002a617
   14002a614:	add    ax,dx
   14002a617:	add    r12w,0xfffc
   14002a61c:	mov    BYTE PTR [rdi],al
   14002a61e:	shr    r8,0x4
   14002a622:	inc    rdi
   14002a625:	dec    ebp
   14002a627:	cmp    r12w,r10w
   14002a62b:	jge    0x14002a5f5
   14002a62d:	cmp    r12w,r10w
   14002a631:	jl     0x14002a67b
   14002a633:	mov    rax,QWORD PTR [r13+0x0]
   14002a637:	mov    cl,r12b
   14002a63a:	and    rax,r8
   14002a63d:	and    rax,rbx
   14002a640:	shr    rax,cl
   14002a643:	cmp    ax,0x8
   14002a647:	jbe    0x14002a67b
   14002a649:	lea    rax,[rdi-0x1]
   14002a64d:	cmp    BYTE PTR [rax],0x66
   14002a650:	je     0x14002a657
   14002a652:	cmp    BYTE PTR [rax],0x46
   14002a655:	jne    0x14002a65f
   14002a657:	mov    BYTE PTR [rax],r11b
   14002a65a:	dec    rax
   14002a65d:	jmp    0x14002a64d
   14002a65f:	cmp    rax,r14
   14002a662:	je     0x14002a678
   14002a664:	mov    cl,BYTE PTR [rax]
   14002a666:	cmp    cl,0x39
   14002a669:	jne    0x14002a672
   14002a66b:	add    dl,0x3a
   14002a66e:	mov    BYTE PTR [rax],dl
   14002a670:	jmp    0x14002a67b
   14002a672:	inc    cl
   14002a674:	mov    BYTE PTR [rax],cl
   14002a676:	jmp    0x14002a67b
   14002a678:	inc    BYTE PTR [rax-0x1]
   14002a67b:	cmp    ebp,r10d
   14002a67e:	jle    0x14002a6a2
   14002a680:	mov    r8d,ebp
   14002a683:	mov    dl,r11b
   14002a686:	mov    rcx,rdi
   14002a689:	mov    ebx,ebp
   14002a68b:	call   0x14001c730
   14002a690:	mov    r9d,DWORD PTR [rsp+0x90]
   14002a698:	add    rdi,rbx
   14002a69b:	xor    r10d,r10d
   14002a69e:	lea    r11d,[r10+0x30]
   14002a6a2:	cmp    BYTE PTR [r14],r10b
   14002a6a5:	cmove  rdi,r14
   14002a6a9:	neg    r9d
   14002a6ac:	sbb    al,al
   14002a6ae:	and    al,0xe0
   14002a6b0:	add    al,0x70
   14002a6b2:	mov    BYTE PTR [rdi],al
   14002a6b4:	mov    rcx,QWORD PTR [r13+0x0]
   14002a6b8:	shr    rcx,0x34
   14002a6bc:	and    ecx,0x7ff
   14002a6c2:	sub    rcx,r15
   14002a6c5:	js     0x14002a6d1
   14002a6c7:	mov    BYTE PTR [rdi+0x1],0x2b
   14002a6cb:	add    rdi,0x2
   14002a6cf:	jmp    0x14002a6dc
   14002a6d1:	mov    BYTE PTR [rdi+0x1],0x2d
   14002a6d5:	add    rdi,0x2
   14002a6d9:	neg    rcx
   14002a6dc:	cmp    rcx,0x3e8
   14002a6e3:	mov    r8,rdi
   14002a6e6:	mov    BYTE PTR [rdi],r11b
   14002a6e9:	jl     0x14002a71e
   14002a6eb:	movabs rax,0x20c49ba5e353f7cf
   14002a6f5:	imul   rcx
   14002a6f8:	sar    rdx,0x7
   14002a6fc:	mov    rax,rdx
   14002a6ff:	shr    rax,0x3f
   14002a703:	add    rdx,rax
   14002a706:	lea    eax,[r11+rdx*1]
   14002a70a:	imul   rdx,rdx,0xfffffffffffffc18
   14002a711:	mov    BYTE PTR [rdi],al
   14002a713:	inc    rdi
   14002a716:	add    rcx,rdx
   14002a719:	cmp    rdi,r8
   14002a71c:	jne    0x14002a724
   14002a71e:	cmp    rcx,0x64
   14002a722:	jl     0x14002a752
   14002a724:	movabs rax,0xa3d70a3d70a3d70b
   14002a72e:	imul   rcx
   14002a731:	add    rdx,rcx
   14002a734:	sar    rdx,0x6
   14002a738:	mov    rax,rdx
   14002a73b:	shr    rax,0x3f
   14002a73f:	add    rdx,rax
   14002a742:	lea    eax,[r11+rdx*1]
   14002a746:	imul   rdx,rdx,0xffffffffffffff9c
   14002a74a:	mov    BYTE PTR [rdi],al
   14002a74c:	inc    rdi
   14002a74f:	add    rcx,rdx
   14002a752:	cmp    rdi,r8
   14002a755:	jne    0x14002a75d
   14002a757:	cmp    rcx,0xa
   14002a75b:	jl     0x14002a788
   14002a75d:	movabs rax,0x6666666666666667
   14002a767:	imul   rcx
   14002a76a:	sar    rdx,0x2
   14002a76e:	mov    rax,rdx
   14002a771:	shr    rax,0x3f
   14002a775:	add    rdx,rax
   14002a778:	lea    eax,[r11+rdx*1]
   14002a77c:	imul   rdx,rdx,0xfffffffffffffff6
   14002a780:	mov    BYTE PTR [rdi],al
   14002a782:	inc    rdi
   14002a785:	add    rcx,rdx
   14002a788:	add    cl,r11b
   14002a78b:	cmp    BYTE PTR [rsp+0x48],r10b
   14002a790:	mov    BYTE PTR [rdi],cl
   14002a792:	mov    BYTE PTR [rdi+0x1],r10b
   14002a796:	je     0x14002a7a4
   14002a798:	mov    rax,QWORD PTR [rsp+0x40]
   14002a79d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002a7a4:	xor    eax,eax
   14002a7a6:	lea    r11,[rsp+0x50]
   14002a7ab:	mov    rbx,QWORD PTR [r11+0x20]
   14002a7af:	mov    rbp,QWORD PTR [r11+0x28]
   14002a7b3:	mov    rdi,QWORD PTR [r11+0x30]
   14002a7b7:	mov    r12,QWORD PTR [r11+0x38]
   14002a7bb:	mov    rsp,r11
   14002a7be:	pop    r15
   14002a7c0:	pop    r14
   14002a7c2:	pop    r13
   14002a7c4:	ret    
   14002a7c5:	int3   
   14002a7c6:	int3   
   14002a7c7:	int3   
   14002a7c8:	mov    rax,rsp
   14002a7cb:	mov    QWORD PTR [rax+0x8],rbx
   14002a7cf:	mov    QWORD PTR [rax+0x10],rbp
   14002a7d3:	mov    QWORD PTR [rax+0x18],rsi
   14002a7d7:	mov    QWORD PTR [rax+0x20],rdi
   14002a7db:	push   r12
   14002a7dd:	sub    rsp,0x50
   14002a7e1:	mov    ebx,DWORD PTR [r9+0x4]
   14002a7e5:	mov    rsi,rdx
   14002a7e8:	mov    rdx,QWORD PTR [rsp+0x88]
   14002a7f0:	mov    rdi,rcx
   14002a7f3:	lea    rcx,[rax-0x28]
   14002a7f7:	mov    r12,r9
   14002a7fa:	dec    ebx
   14002a7fc:	mov    ebp,r8d
   14002a7ff:	call   0x14001cf30
   14002a804:	test   rdi,rdi
   14002a807:	jne    0x14002a841
   14002a809:	call   0x140020aa4
   14002a80e:	and    QWORD PTR [rsp+0x20],rdi
   14002a813:	lea    ebx,[rdi+0x16]
   14002a816:	xor    r9d,r9d
   14002a819:	xor    r8d,r8d
   14002a81c:	xor    edx,edx
   14002a81e:	xor    ecx,ecx
   14002a820:	mov    DWORD PTR [rax],ebx
   14002a822:	call   0x14001ccf0
   14002a827:	cmp    BYTE PTR [rsp+0x48],dil
   14002a82c:	je     0x14002a83a
   14002a82e:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a833:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002a83a:	mov    eax,ebx
   14002a83c:	jmp    0x14002a970
   14002a841:	test   rsi,rsi
   14002a844:	jne    0x14002a879
   14002a846:	call   0x140020aa4
   14002a84b:	and    QWORD PTR [rsp+0x20],rsi
   14002a850:	lea    ebx,[rsi+0x16]
   14002a853:	xor    r9d,r9d
   14002a856:	xor    r8d,r8d
   14002a859:	xor    edx,edx
   14002a85b:	xor    ecx,ecx
   14002a85d:	mov    DWORD PTR [rax],ebx
   14002a85f:	call   0x14001ccf0
   14002a864:	cmp    BYTE PTR [rsp+0x48],sil
   14002a869:	je     0x14002a83a
   14002a86b:	mov    rax,QWORD PTR [rsp+0x40]
   14002a870:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002a877:	jmp    0x14002a83a
   14002a879:	cmp    BYTE PTR [rsp+0x80],0x0
   14002a881:	je     0x14002a8a0
   14002a883:	cmp    ebx,ebp
   14002a885:	jne    0x14002a8a0
   14002a887:	xor    eax,eax
   14002a889:	cmp    DWORD PTR [r12],0x2d
   14002a88e:	movsxd rcx,ebx
   14002a891:	sete   al
   14002a894:	add    rax,rdi
   14002a897:	mov    BYTE PTR [rcx+rax*1],0x30
   14002a89b:	mov    BYTE PTR [rcx+rax*1+0x1],0x0
   14002a8a0:	cmp    DWORD PTR [r12],0x2d
   14002a8a5:	jne    0x14002a8ad
   14002a8a7:	mov    BYTE PTR [rdi],0x2d
   14002a8aa:	inc    rdi
   14002a8ad:	cmp    DWORD PTR [r12+0x4],0x0
   14002a8b3:	jg     0x14002a8d5
   14002a8b5:	mov    rcx,rdi
   14002a8b8:	call   0x14001c650
   14002a8bd:	lea    rcx,[rdi+0x1]
   14002a8c1:	mov    rdx,rdi
   14002a8c4:	lea    r8,[rax+0x1]
   14002a8c8:	call   0x1400205b0
   14002a8cd:	mov    BYTE PTR [rdi],0x30
   14002a8d0:	inc    rdi
   14002a8d3:	jmp    0x14002a8dd
   14002a8d5:	movsxd rax,DWORD PTR [r12+0x4]
   14002a8da:	add    rdi,rax
   14002a8dd:	test   ebp,ebp
   14002a8df:	jle    0x14002a95b
   14002a8e1:	mov    rcx,rdi
   14002a8e4:	lea    rsi,[rdi+0x1]
   14002a8e8:	call   0x14001c650
   14002a8ed:	mov    rdx,rdi
   14002a8f0:	mov    rcx,rsi
   14002a8f3:	lea    r8,[rax+0x1]
   14002a8f7:	call   0x1400205b0
   14002a8fc:	mov    r11,QWORD PTR [rsp+0x30]
   14002a901:	mov    rax,QWORD PTR [r11+0x128]
   14002a908:	mov    rcx,QWORD PTR [rax]
   14002a90b:	mov    al,BYTE PTR [rcx]
   14002a90d:	mov    BYTE PTR [rdi],al
   14002a90f:	mov    ebx,DWORD PTR [r12+0x4]
   14002a914:	test   ebx,ebx
   14002a916:	jns    0x14002a95b
   14002a918:	neg    ebx
   14002a91a:	cmp    BYTE PTR [rsp+0x80],0x0
   14002a922:	jne    0x14002a92d
   14002a924:	mov    eax,ebx
   14002a926:	mov    ebx,ebp
   14002a928:	cmp    ebp,eax
   14002a92a:	cmovge ebx,eax
   14002a92d:	test   ebx,ebx
   14002a92f:	je     0x14002a94b
   14002a931:	mov    rcx,rsi
   14002a934:	call   0x14001c650
   14002a939:	movsxd rcx,ebx
   14002a93c:	mov    rdx,rsi
   14002a93f:	lea    r8,[rax+0x1]
   14002a943:	add    rcx,rsi
   14002a946:	call   0x1400205b0
   14002a94b:	movsxd r8,ebx
   14002a94e:	mov    edx,0x30
   14002a953:	mov    rcx,rsi
   14002a956:	call   0x14001c730
   14002a95b:	cmp    BYTE PTR [rsp+0x48],0x0
   14002a960:	je     0x14002a96e
   14002a962:	mov    rax,QWORD PTR [rsp+0x40]
   14002a967:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002a96e:	xor    eax,eax
   14002a970:	mov    rbx,QWORD PTR [rsp+0x60]
   14002a975:	mov    rbp,QWORD PTR [rsp+0x68]
   14002a97a:	mov    rsi,QWORD PTR [rsp+0x70]
   14002a97f:	mov    rdi,QWORD PTR [rsp+0x78]
   14002a984:	add    rsp,0x50
   14002a988:	pop    r12
   14002a98a:	ret    
   14002a98b:	int3   
   14002a98c:	rex push rbx
   14002a98e:	push   rsi
   14002a98f:	push   rdi
   14002a990:	push   r12
   14002a992:	sub    rsp,0x78
   14002a996:	mov    rax,QWORD PTR [rip+0x1eac3]        # 0x140049460
   14002a99d:	xor    rax,rsp
   14002a9a0:	mov    QWORD PTR [rsp+0x60],rax
   14002a9a5:	mov    rcx,QWORD PTR [rcx]
   14002a9a8:	mov    rbx,r8
   14002a9ab:	mov    rdi,rdx
   14002a9ae:	mov    esi,r9d
   14002a9b1:	mov    r12d,0x16
   14002a9b7:	lea    r8,[rsp+0x48]
   14002a9bc:	lea    rdx,[rsp+0x30]
   14002a9c1:	mov    r9,r12
   14002a9c4:	call   0x14002dbb4
   14002a9c9:	test   rdi,rdi
   14002a9cc:	jne    0x14002a9f0
   14002a9ce:	call   0x140020aa4
   14002a9d3:	and    QWORD PTR [rsp+0x20],0x0
   14002a9d9:	xor    r9d,r9d
   14002a9dc:	xor    r8d,r8d
   14002a9df:	xor    edx,edx
   14002a9e1:	xor    ecx,ecx
   14002a9e3:	mov    DWORD PTR [rax],r12d
   14002a9e6:	call   0x14001ccf0
   14002a9eb:	mov    eax,r12d
   14002a9ee:	jmp    0x14002aa5b
   14002a9f0:	test   rbx,rbx
   14002a9f3:	je     0x14002a9ce
   14002a9f5:	or     rdx,0xffffffffffffffff
   14002a9f9:	cmp    rbx,rdx
   14002a9fc:	je     0x14002aa0e
   14002a9fe:	xor    eax,eax
   14002aa00:	cmp    DWORD PTR [rsp+0x30],0x2d
   14002aa05:	mov    rdx,rbx
   14002aa08:	sete   al
   14002aa0b:	sub    rdx,rax
   14002aa0e:	mov    r8d,DWORD PTR [rsp+0x34]
   14002aa13:	xor    ecx,ecx
   14002aa15:	lea    r9,[rsp+0x30]
   14002aa1a:	add    r8d,esi
   14002aa1d:	cmp    DWORD PTR [rsp+0x30],0x2d
   14002aa22:	sete   cl
   14002aa25:	add    rcx,rdi
   14002aa28:	call   0x14002da00
   14002aa2d:	test   eax,eax
   14002aa2f:	je     0x14002aa36
   14002aa31:	mov    BYTE PTR [rdi],0x0
   14002aa34:	jmp    0x14002aa5b
   14002aa36:	mov    rax,QWORD PTR [rsp+0xc0]
   14002aa3e:	lea    r9,[rsp+0x30]
   14002aa43:	mov    r8d,esi
   14002aa46:	mov    QWORD PTR [rsp+0x28],rax
   14002aa4b:	mov    rdx,rbx
   14002aa4e:	mov    rcx,rdi
   14002aa51:	mov    BYTE PTR [rsp+0x20],0x0
   14002aa56:	call   0x14002a7c8
   14002aa5b:	mov    rcx,QWORD PTR [rsp+0x60]
   14002aa60:	xor    rcx,rsp
   14002aa63:	call   0x14001c500
   14002aa68:	add    rsp,0x78
   14002aa6c:	pop    r12
   14002aa6e:	pop    rdi
   14002aa6f:	pop    rsi
   14002aa70:	pop    rbx
   14002aa71:	ret    
   14002aa72:	int3   
   14002aa73:	int3   
   14002aa74:	rex push rbx
   14002aa76:	push   rbp
   14002aa77:	push   rsi
   14002aa78:	push   rdi
   14002aa79:	push   r12
   14002aa7b:	sub    rsp,0x80
   14002aa82:	mov    rax,QWORD PTR [rip+0x1e9d7]        # 0x140049460
   14002aa89:	xor    rax,rsp
   14002aa8c:	mov    QWORD PTR [rsp+0x70],rax
   14002aa91:	mov    rcx,QWORD PTR [rcx]
   14002aa94:	mov    rdi,r8
   14002aa97:	mov    rsi,rdx
   14002aa9a:	mov    ebp,r9d
   14002aa9d:	mov    ebx,0x16
   14002aaa2:	lea    r8,[rsp+0x58]
   14002aaa7:	lea    rdx,[rsp+0x40]
   14002aaac:	mov    r9,rbx
   14002aaaf:	call   0x14002dbb4
   14002aab4:	test   rsi,rsi
   14002aab7:	jne    0x14002aadc
   14002aab9:	call   0x140020aa4
   14002aabe:	and    QWORD PTR [rsp+0x20],0x0
   14002aac4:	xor    r9d,r9d
   14002aac7:	xor    r8d,r8d
   14002aaca:	xor    edx,edx
   14002aacc:	xor    ecx,ecx
   14002aace:	mov    DWORD PTR [rax],ebx
   14002aad0:	call   0x14001ccf0
   14002aad5:	mov    eax,ebx
   14002aad7:	jmp    0x14002ab9d
   14002aadc:	test   rdi,rdi
   14002aadf:	je     0x14002aab9
   14002aae1:	mov    r12d,DWORD PTR [rsp+0x44]
   14002aae6:	xor    eax,eax
   14002aae8:	dec    r12d
   14002aaeb:	cmp    DWORD PTR [rsp+0x40],0x2d
   14002aaf0:	sete   al
   14002aaf3:	or     rdx,0xffffffffffffffff
   14002aaf7:	lea    rbx,[rax+rsi*1]
   14002aafb:	cmp    rdi,rdx
   14002aafe:	je     0x14002ab06
   14002ab00:	mov    rdx,rdi
   14002ab03:	sub    rdx,rax
   14002ab06:	lea    r9,[rsp+0x40]
   14002ab0b:	mov    r8d,ebp
   14002ab0e:	mov    rcx,rbx
   14002ab11:	call   0x14002da00
   14002ab16:	test   eax,eax
   14002ab18:	je     0x14002ab1f
   14002ab1a:	mov    BYTE PTR [rsi],0x0
   14002ab1d:	jmp    0x14002ab9d
   14002ab1f:	mov    eax,DWORD PTR [rsp+0x44]
   14002ab23:	dec    eax
   14002ab25:	cmp    r12d,eax
   14002ab28:	setl   cl
   14002ab2b:	cmp    eax,0xfffffffc
   14002ab2e:	jl     0x14002ab6b
   14002ab30:	cmp    eax,ebp
   14002ab32:	jge    0x14002ab6b
   14002ab34:	test   cl,cl
   14002ab36:	je     0x14002ab44
   14002ab38:	mov    al,BYTE PTR [rbx]
   14002ab3a:	inc    rbx
   14002ab3d:	test   al,al
   14002ab3f:	jne    0x14002ab38
   14002ab41:	mov    BYTE PTR [rbx-0x2],al
   14002ab44:	mov    rax,QWORD PTR [rsp+0xd8]
   14002ab4c:	lea    r9,[rsp+0x40]
   14002ab51:	mov    r8d,ebp
   14002ab54:	mov    QWORD PTR [rsp+0x28],rax
   14002ab59:	mov    rdx,rdi
   14002ab5c:	mov    rcx,rsi
   14002ab5f:	mov    BYTE PTR [rsp+0x20],0x1
   14002ab64:	call   0x14002a7c8
   14002ab69:	jmp    0x14002ab9d
   14002ab6b:	mov    rax,QWORD PTR [rsp+0xd8]
   14002ab73:	mov    r9d,DWORD PTR [rsp+0xd0]
   14002ab7b:	mov    r8d,ebp
   14002ab7e:	mov    QWORD PTR [rsp+0x30],rax
   14002ab83:	lea    rax,[rsp+0x40]
   14002ab88:	mov    rdx,rdi
   14002ab8b:	mov    rcx,rsi
   14002ab8e:	mov    BYTE PTR [rsp+0x28],0x1
   14002ab93:	mov    QWORD PTR [rsp+0x20],rax
   14002ab98:	call   0x14002a038
   14002ab9d:	mov    rcx,QWORD PTR [rsp+0x70]
   14002aba2:	xor    rcx,rsp
   14002aba5:	call   0x14001c500
   14002abaa:	add    rsp,0x80
   14002abb1:	pop    r12
   14002abb3:	pop    rdi
   14002abb4:	pop    rsi
   14002abb5:	pop    rbp
   14002abb6:	pop    rbx
   14002abb7:	ret    
   14002abb8:	sub    rsp,0x38
   14002abbc:	cmp    r9d,0x65
   14002abc0:	je     0x14002ac2c
   14002abc2:	cmp    r9d,0x45
   14002abc6:	je     0x14002ac2c
   14002abc8:	cmp    r9d,0x66
   14002abcc:	jne    0x14002abe4
   14002abce:	mov    rax,QWORD PTR [rsp+0x70]
   14002abd3:	mov    r9d,DWORD PTR [rsp+0x60]
   14002abd8:	mov    QWORD PTR [rsp+0x20],rax
   14002abdd:	call   0x14002a98c
   14002abe2:	jmp    0x14002ac48
   14002abe4:	cmp    r9d,0x61
   14002abe8:	je     0x14002ac0e
   14002abea:	cmp    r9d,0x41
   14002abee:	je     0x14002ac0e
   14002abf0:	mov    rax,QWORD PTR [rsp+0x70]
   14002abf5:	mov    r9d,DWORD PTR [rsp+0x60]
   14002abfa:	mov    QWORD PTR [rsp+0x28],rax
   14002abff:	mov    eax,DWORD PTR [rsp+0x68]
   14002ac03:	mov    DWORD PTR [rsp+0x20],eax
   14002ac07:	call   0x14002aa74
   14002ac0c:	jmp    0x14002ac48
   14002ac0e:	mov    rax,QWORD PTR [rsp+0x70]
   14002ac13:	mov    r9d,DWORD PTR [rsp+0x60]
   14002ac18:	mov    QWORD PTR [rsp+0x28],rax
   14002ac1d:	mov    eax,DWORD PTR [rsp+0x68]
   14002ac21:	mov    DWORD PTR [rsp+0x20],eax
   14002ac25:	call   0x14002a39c
   14002ac2a:	jmp    0x14002ac48
   14002ac2c:	mov    rax,QWORD PTR [rsp+0x70]
   14002ac31:	mov    r9d,DWORD PTR [rsp+0x60]
   14002ac36:	mov    QWORD PTR [rsp+0x28],rax
   14002ac3b:	mov    eax,DWORD PTR [rsp+0x68]
   14002ac3f:	mov    DWORD PTR [rsp+0x20],eax
   14002ac43:	call   0x14002a290
   14002ac48:	add    rsp,0x38
   14002ac4c:	ret    
   14002ac4d:	int3   
   14002ac4e:	int3   
   14002ac4f:	int3   
   14002ac50:	sub    rsp,0x48
   14002ac54:	mov    eax,DWORD PTR [rsp+0x78]
   14002ac58:	and    QWORD PTR [rsp+0x30],0x0
   14002ac5e:	mov    DWORD PTR [rsp+0x28],eax
   14002ac62:	mov    eax,DWORD PTR [rsp+0x70]
   14002ac66:	mov    DWORD PTR [rsp+0x20],eax
   14002ac6a:	call   0x14002abb8
   14002ac6f:	add    rsp,0x48
   14002ac73:	ret    
   14002ac74:	mov    QWORD PTR [rsp+0x8],rbx
   14002ac79:	push   rdi
   14002ac7a:	sub    rsp,0x20
   14002ac7e:	lea    rbx,[rip+0x1f87b]        # 0x14004a500
   14002ac85:	mov    edi,0xa
   14002ac8a:	mov    rcx,QWORD PTR [rbx]
   14002ac8d:	call   0x140023fb0
   14002ac92:	mov    QWORD PTR [rbx],rax
   14002ac95:	add    rbx,0x8
   14002ac99:	sub    rdi,0x1
   14002ac9d:	jne    0x14002ac8a
   14002ac9f:	mov    rbx,QWORD PTR [rsp+0x30]
   14002aca4:	add    rsp,0x20
   14002aca8:	pop    rdi
   14002aca9:	ret    
   14002acaa:	int3   
   14002acab:	int3   
   14002acac:	int3   
   14002acad:	int3   
   14002acae:	int3   
   14002acaf:	int3   
   14002acb0:	mov    r11,rsp
   14002acb3:	mov    QWORD PTR [r11+0x18],rbx
   14002acb7:	push   rbp
   14002acb8:	push   rsi
   14002acb9:	push   rdi
   14002acba:	sub    rsp,0x70
   14002acbe:	mov    rax,QWORD PTR [rip+0x1e79b]        # 0x140049460
   14002acc5:	xor    rax,rsp
   14002acc8:	mov    QWORD PTR [rsp+0x60],rax
   14002accd:	mov    rax,QWORD PTR [rsp+0xb8]
   14002acd5:	xor    ebx,ebx
   14002acd7:	mov    rbp,rdx
   14002acda:	mov    QWORD PTR [r11-0x50],rax
   14002acde:	and    DWORD PTR [rsp+0x30],ebx
   14002ace2:	and    DWORD PTR [rsp+0x28],ebx
   14002ace6:	and    DWORD PTR [rsp+0x20],ebx
   14002acea:	mov    rdi,rcx
   14002aced:	mov    r8,rdx
   14002acf0:	lea    rdx,[r11-0x40]
   14002acf4:	lea    rcx,[r11-0x38]
   14002acf8:	xor    r9d,r9d
   14002acfb:	call   0x14002e888
   14002ad00:	mov    esi,eax
   14002ad02:	test   al,0x4
   14002ad04:	je     0x14002ad17
   14002ad06:	and    DWORD PTR [rsp+0x40],0x0
   14002ad0b:	and    DWORD PTR [rsp+0x44],0x0
   14002ad10:	mov    ebx,0x200
   14002ad15:	jmp    0x14002ad45
   14002ad17:	lea    rdx,[rsp+0x40]
   14002ad1c:	lea    rcx,[rsp+0x50]
   14002ad21:	call   0x14002dc80
   14002ad26:	test   sil,0x2
   14002ad2a:	jne    0x14002ad31
   14002ad2c:	cmp    eax,0x1
   14002ad2f:	jne    0x14002ad36
   14002ad31:	mov    ebx,0x80
   14002ad36:	test   sil,0x1
   14002ad3a:	jne    0x14002ad41
   14002ad3c:	cmp    eax,0x2
   14002ad3f:	jne    0x14002ad45
   14002ad41:	bts    ebx,0x8
   14002ad45:	mov    ecx,DWORD PTR [rsp+0x48]
   14002ad49:	mov    DWORD PTR [rdi],ebx
   14002ad4b:	mov    rax,rdi
   14002ad4e:	sub    ecx,ebp
   14002ad50:	mov    DWORD PTR [rdi+0x4],ecx
   14002ad53:	mov    rcx,QWORD PTR [rsp+0x40]
   14002ad58:	mov    QWORD PTR [rdi+0x10],rcx
   14002ad5c:	mov    rcx,QWORD PTR [rsp+0x60]
   14002ad61:	xor    rcx,rsp
   14002ad64:	call   0x14001c500
   14002ad69:	mov    rbx,QWORD PTR [rsp+0xa0]
   14002ad71:	add    rsp,0x70
   14002ad75:	pop    rdi
   14002ad76:	pop    rsi
   14002ad77:	pop    rbp
   14002ad78:	ret    
   14002ad79:	int3   
   14002ad7a:	int3   
   14002ad7b:	int3   
   14002ad7c:	mov    QWORD PTR [rsp+0x8],rbx
   14002ad81:	mov    QWORD PTR [rsp+0x10],rsi
   14002ad86:	push   rdi
   14002ad87:	sub    rsp,0x30
   14002ad8b:	mov    rdi,rcx
   14002ad8e:	test   rcx,rcx
   14002ad91:	jne    0x14002adb7
   14002ad93:	call   0x140020aa4
   14002ad98:	and    QWORD PTR [rsp+0x20],rdi
   14002ad9d:	xor    r9d,r9d
   14002ada0:	xor    r8d,r8d
   14002ada3:	xor    edx,edx
   14002ada5:	xor    ecx,ecx
   14002ada7:	mov    DWORD PTR [rax],0x16
   14002adad:	call   0x14001ccf0
   14002adb2:	jmp    0x14002aece
   14002adb7:	mov    eax,DWORD PTR [rcx+0x18]
   14002adba:	test   al,0x83
   14002adbc:	je     0x14002aece
   14002adc2:	test   al,0x40
   14002adc4:	jne    0x14002aece
   14002adca:	test   al,0x2
   14002adcc:	je     0x14002add9
   14002adce:	or     eax,0x20
   14002add1:	mov    DWORD PTR [rcx+0x18],eax
   14002add4:	jmp    0x14002aece
   14002add9:	or     eax,0x1
   14002addc:	mov    DWORD PTR [rcx+0x18],eax
   14002addf:	test   eax,0x10c
   14002ade4:	jne    0x14002aded
   14002ade6:	call   0x14002b5a8
   14002adeb:	jmp    0x14002adf4
   14002aded:	mov    rax,QWORD PTR [rcx+0x10]
   14002adf1:	mov    QWORD PTR [rcx],rax
   14002adf4:	mov    rcx,rdi
   14002adf7:	call   0x14002b1bc
   14002adfc:	mov    r8d,DWORD PTR [rdi+0x24]
   14002ae00:	mov    rdx,QWORD PTR [rdi+0x10]
   14002ae04:	mov    ecx,eax
   14002ae06:	call   0x14002f904
   14002ae0b:	mov    DWORD PTR [rdi+0x8],eax
   14002ae0e:	test   eax,eax
   14002ae10:	je     0x14002aebd
   14002ae16:	cmp    eax,0x1
   14002ae19:	je     0x14002aebd
   14002ae1f:	cmp    eax,0xffffffff
   14002ae22:	je     0x14002aebd
   14002ae28:	test   BYTE PTR [rdi+0x18],0x82
   14002ae2c:	jne    0x14002ae8d
   14002ae2e:	mov    rcx,rdi
   14002ae31:	call   0x14002b1bc
   14002ae36:	cmp    eax,0xffffffff
   14002ae39:	je     0x14002ae77
   14002ae3b:	mov    rcx,rdi
   14002ae3e:	call   0x14002b1bc
   14002ae43:	cmp    eax,0xfffffffe
   14002ae46:	je     0x14002ae77
   14002ae48:	mov    rcx,rdi
   14002ae4b:	call   0x14002b1bc
   14002ae50:	mov    rcx,rdi
   14002ae53:	lea    rsi,[rip+0x224c6]        # 0x14004d320
   14002ae5a:	movsxd rbx,eax
   14002ae5d:	sar    rbx,0x5
   14002ae61:	call   0x14002b1bc
   14002ae66:	mov    r11d,eax
   14002ae69:	and    r11d,0x1f
   14002ae6d:	imul   r11,r11,0x58
   14002ae71:	add    r11,QWORD PTR [rsi+rbx*8]
   14002ae75:	jmp    0x14002ae7e
   14002ae77:	lea    r11,[rip+0x1f262]        # 0x14004a0e0
   14002ae7e:	mov    al,BYTE PTR [r11+0x8]
   14002ae82:	and    al,0x82
   14002ae84:	cmp    al,0x82
   14002ae86:	jne    0x14002ae8d
   14002ae88:	bts    DWORD PTR [rdi+0x18],0xd
   14002ae8d:	cmp    DWORD PTR [rdi+0x24],0x200
   14002ae94:	jne    0x14002aeaa
   14002ae96:	test   BYTE PTR [rdi+0x18],0x8
   14002ae9a:	je     0x14002aeaa
   14002ae9c:	bt     DWORD PTR [rdi+0x18],0xa
   14002aea1:	jb     0x14002aeaa
   14002aea3:	mov    DWORD PTR [rdi+0x24],0x1000
   14002aeaa:	mov    rcx,QWORD PTR [rdi]
   14002aead:	add    DWORD PTR [rdi+0x8],0xfffffffe
   14002aeb1:	movzx  eax,WORD PTR [rcx]
   14002aeb4:	add    rcx,0x2
   14002aeb8:	mov    QWORD PTR [rdi],rcx
   14002aebb:	jmp    0x14002aed3
   14002aebd:	neg    eax
   14002aebf:	sbb    eax,eax
   14002aec1:	and    eax,0x10
   14002aec4:	add    eax,0x10
   14002aec7:	or     DWORD PTR [rdi+0x18],eax
   14002aeca:	and    DWORD PTR [rdi+0x8],0x0
   14002aece:	mov    eax,0xffff
   14002aed3:	mov    rbx,QWORD PTR [rsp+0x40]
   14002aed8:	mov    rsi,QWORD PTR [rsp+0x48]
   14002aedd:	add    rsp,0x30
   14002aee1:	pop    rdi
   14002aee2:	ret    
   14002aee3:	int3   
   14002aee4:	mov    QWORD PTR [rsp+0x8],rbx
   14002aee9:	mov    QWORD PTR [rsp+0x10],rbp
   14002aeee:	mov    QWORD PTR [rsp+0x18],rsi
   14002aef3:	push   rdi
   14002aef4:	sub    rsp,0x50
   14002aef8:	xor    ebp,ebp
   14002aefa:	mov    rsi,r8
   14002aefd:	mov    rdi,rdx
   14002af00:	mov    rbx,rcx
   14002af03:	cmp    rdx,rbp
   14002af06:	je     0x14002af1a
   14002af08:	cmp    r8,rbp
   14002af0b:	je     0x14002af1a
   14002af0d:	cmp    BYTE PTR [rdx],bpl
   14002af10:	jne    0x14002af31
   14002af12:	cmp    rcx,rbp
   14002af15:	je     0x14002af1a
   14002af17:	mov    WORD PTR [rcx],bp
   14002af1a:	xor    eax,eax
   14002af1c:	mov    rbx,QWORD PTR [rsp+0x60]
   14002af21:	mov    rbp,QWORD PTR [rsp+0x68]
   14002af26:	mov    rsi,QWORD PTR [rsp+0x70]
   14002af2b:	add    rsp,0x50
   14002af2f:	pop    rdi
   14002af30:	ret    
   14002af31:	lea    rcx,[rsp+0x30]
   14002af36:	mov    rdx,r9
   14002af39:	call   0x14001cf30
   14002af3e:	mov    r11,QWORD PTR [rsp+0x30]
   14002af43:	cmp    DWORD PTR [r11+0x14],ebp
   14002af47:	jne    0x14002af6e
   14002af49:	cmp    rbx,rbp
   14002af4c:	je     0x14002af54
   14002af4e:	movzx  eax,BYTE PTR [rdi]
   14002af51:	mov    WORD PTR [rbx],ax
   14002af54:	cmp    BYTE PTR [rsp+0x48],bpl
   14002af59:	je     0x14002af67
   14002af5b:	mov    rax,QWORD PTR [rsp+0x40]
   14002af60:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002af67:	mov    eax,0x1
   14002af6c:	jmp    0x14002af1c
   14002af6e:	movzx  ecx,BYTE PTR [rdi]
   14002af71:	lea    rdx,[rsp+0x30]
   14002af76:	call   0x140029e14
   14002af7b:	cmp    eax,ebp
   14002af7d:	je     0x14002b01f
   14002af83:	mov    rcx,QWORD PTR [rsp+0x30]
   14002af88:	mov    r9d,DWORD PTR [rcx+0x10c]
   14002af8f:	cmp    r9d,0x1
   14002af93:	jle    0x14002afc5
   14002af95:	cmp    esi,r9d
   14002af98:	jl     0x14002afc5
   14002af9a:	mov    ecx,DWORD PTR [rcx+0x4]
   14002af9d:	mov    eax,ebp
   14002af9f:	cmp    rbx,rbp
   14002afa2:	setne  al
   14002afa5:	mov    r8,rdi
   14002afa8:	mov    edx,0x9
   14002afad:	mov    DWORD PTR [rsp+0x28],eax
   14002afb1:	mov    QWORD PTR [rsp+0x20],rbx
   14002afb6:	call   QWORD PTR [rip+0xf1e4]        # 0x14003a1a0
   14002afbc:	mov    rcx,QWORD PTR [rsp+0x30]
   14002afc1:	cmp    eax,ebp
   14002afc3:	jne    0x14002afd7
   14002afc5:	movsxd rax,DWORD PTR [rcx+0x10c]
   14002afcc:	cmp    rsi,rax
   14002afcf:	jb     0x14002aff9
   14002afd1:	cmp    BYTE PTR [rdi+0x1],bpl
   14002afd5:	je     0x14002aff9
   14002afd7:	mov    eax,DWORD PTR [rcx+0x10c]
   14002afdd:	cmp    BYTE PTR [rsp+0x48],bpl
   14002afe2:	je     0x14002af1c
   14002afe8:	mov    rcx,QWORD PTR [rsp+0x40]
   14002afed:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002aff4:	jmp    0x14002af1c
   14002aff9:	call   0x140020aa4
   14002affe:	mov    DWORD PTR [rax],0x2a
   14002b004:	cmp    BYTE PTR [rsp+0x48],bpl
   14002b009:	je     0x14002b017
   14002b00b:	mov    rax,QWORD PTR [rsp+0x40]
   14002b010:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002b017:	or     eax,0xffffffff
   14002b01a:	jmp    0x14002af1c
   14002b01f:	mov    eax,ebp
   14002b021:	mov    r9d,0x1
   14002b027:	cmp    rbx,rbp
   14002b02a:	setne  al
   14002b02d:	lea    edx,[r9+0x8]
   14002b031:	mov    r8,rdi
   14002b034:	mov    DWORD PTR [rsp+0x28],eax
   14002b038:	mov    rax,QWORD PTR [rsp+0x30]
   14002b03d:	mov    QWORD PTR [rsp+0x20],rbx
   14002b042:	mov    ecx,DWORD PTR [rax+0x4]
   14002b045:	call   QWORD PTR [rip+0xf155]        # 0x14003a1a0
   14002b04b:	cmp    eax,ebp
   14002b04d:	jne    0x14002af54
   14002b053:	jmp    0x14002aff9
   14002b055:	int3   
   14002b056:	int3   
   14002b057:	int3   
   14002b058:	xor    r9d,r9d
   14002b05b:	jmp    0x14002aee4
   14002b060:	mov    QWORD PTR [rsp+0x8],rbx
   14002b065:	mov    QWORD PTR [rsp+0x10],rsi
   14002b06a:	push   rdi
   14002b06b:	sub    rsp,0x30
   14002b06f:	mov    rdi,rcx
   14002b072:	test   rcx,rcx
   14002b075:	jne    0x14002b09b
   14002b077:	call   0x140020aa4
   14002b07c:	and    QWORD PTR [rsp+0x20],rdi
   14002b081:	xor    r9d,r9d
   14002b084:	xor    r8d,r8d
   14002b087:	xor    edx,edx
   14002b089:	xor    ecx,ecx
   14002b08b:	mov    DWORD PTR [rax],0x16
   14002b091:	call   0x14001ccf0
   14002b096:	jmp    0x14002b1a7
   14002b09b:	mov    eax,DWORD PTR [rcx+0x18]
   14002b09e:	test   al,0x83
   14002b0a0:	je     0x14002b1a7
   14002b0a6:	test   al,0x40
   14002b0a8:	jne    0x14002b1a7
   14002b0ae:	test   al,0x2
   14002b0b0:	je     0x14002b0bd
   14002b0b2:	or     eax,0x20
   14002b0b5:	mov    DWORD PTR [rcx+0x18],eax
   14002b0b8:	jmp    0x14002b1a7
   14002b0bd:	or     eax,0x1
   14002b0c0:	mov    DWORD PTR [rcx+0x18],eax
   14002b0c3:	test   eax,0x10c
   14002b0c8:	jne    0x14002b0d1
   14002b0ca:	call   0x14002b5a8
   14002b0cf:	jmp    0x14002b0d8
   14002b0d1:	mov    rax,QWORD PTR [rcx+0x10]
   14002b0d5:	mov    QWORD PTR [rcx],rax
   14002b0d8:	mov    rcx,rdi
   14002b0db:	call   0x14002b1bc
   14002b0e0:	mov    r8d,DWORD PTR [rdi+0x24]
   14002b0e4:	mov    rdx,QWORD PTR [rdi+0x10]
   14002b0e8:	mov    ecx,eax
   14002b0ea:	call   0x14002f904
   14002b0ef:	mov    DWORD PTR [rdi+0x8],eax
   14002b0f2:	test   eax,eax
   14002b0f4:	je     0x14002b196
   14002b0fa:	cmp    eax,0xffffffff
   14002b0fd:	je     0x14002b196
   14002b103:	test   BYTE PTR [rdi+0x18],0x82
   14002b107:	jne    0x14002b168
   14002b109:	mov    rcx,rdi
   14002b10c:	call   0x14002b1bc
   14002b111:	cmp    eax,0xffffffff
   14002b114:	je     0x14002b152
   14002b116:	mov    rcx,rdi
   14002b119:	call   0x14002b1bc
   14002b11e:	cmp    eax,0xfffffffe
   14002b121:	je     0x14002b152
   14002b123:	mov    rcx,rdi
   14002b126:	call   0x14002b1bc
   14002b12b:	mov    rcx,rdi
   14002b12e:	lea    rsi,[rip+0x221eb]        # 0x14004d320
   14002b135:	movsxd rbx,eax
   14002b138:	sar    rbx,0x5
   14002b13c:	call   0x14002b1bc
   14002b141:	mov    r11d,eax
   14002b144:	and    r11d,0x1f
   14002b148:	imul   r11,r11,0x58
   14002b14c:	add    r11,QWORD PTR [rsi+rbx*8]
   14002b150:	jmp    0x14002b159
   14002b152:	lea    r11,[rip+0x1ef87]        # 0x14004a0e0
   14002b159:	mov    al,BYTE PTR [r11+0x8]
   14002b15d:	and    al,0x82
   14002b15f:	cmp    al,0x82
   14002b161:	jne    0x14002b168
   14002b163:	bts    DWORD PTR [rdi+0x18],0xd
   14002b168:	cmp    DWORD PTR [rdi+0x24],0x200
   14002b16f:	jne    0x14002b185
   14002b171:	test   BYTE PTR [rdi+0x18],0x8
   14002b175:	je     0x14002b185
   14002b177:	bt     DWORD PTR [rdi+0x18],0xa
   14002b17c:	jb     0x14002b185
   14002b17e:	mov    DWORD PTR [rdi+0x24],0x1000
   14002b185:	mov    rcx,QWORD PTR [rdi]
   14002b188:	dec    DWORD PTR [rdi+0x8]
   14002b18b:	movzx  eax,BYTE PTR [rcx]
   14002b18e:	inc    rcx
   14002b191:	mov    QWORD PTR [rdi],rcx
   14002b194:	jmp    0x14002b1aa
   14002b196:	neg    eax
   14002b198:	sbb    eax,eax
   14002b19a:	and    eax,0x10
   14002b19d:	add    eax,0x10
   14002b1a0:	or     DWORD PTR [rdi+0x18],eax
   14002b1a3:	and    DWORD PTR [rdi+0x8],0x0
   14002b1a7:	or     eax,0xffffffff
   14002b1aa:	mov    rbx,QWORD PTR [rsp+0x40]
   14002b1af:	mov    rsi,QWORD PTR [rsp+0x48]
   14002b1b4:	add    rsp,0x30
   14002b1b8:	pop    rdi
   14002b1b9:	ret    
   14002b1ba:	int3   
   14002b1bb:	int3   
   14002b1bc:	sub    rsp,0x38
   14002b1c0:	test   rcx,rcx
   14002b1c3:	jne    0x14002b1ea
   14002b1c5:	call   0x140020aa4
   14002b1ca:	and    QWORD PTR [rsp+0x20],0x0
   14002b1d0:	xor    r9d,r9d
   14002b1d3:	xor    r8d,r8d
   14002b1d6:	xor    edx,edx
   14002b1d8:	xor    ecx,ecx
   14002b1da:	mov    DWORD PTR [rax],0x16
   14002b1e0:	call   0x14001ccf0
   14002b1e5:	or     eax,0xffffffff
   14002b1e8:	jmp    0x14002b1ed
   14002b1ea:	mov    eax,DWORD PTR [rcx+0x1c]
   14002b1ed:	add    rsp,0x38
   14002b1f1:	ret    
   14002b1f2:	int3   
   14002b1f3:	int3   
   14002b1f4:	mov    QWORD PTR [rsp+0x8],rbx
   14002b1f9:	mov    QWORD PTR [rsp+0x18],rbp
   14002b1fe:	push   rsi
   14002b1ff:	push   rdi
   14002b200:	push   r12
   14002b202:	sub    rsp,0x20
   14002b206:	mov    r12d,ecx
   14002b209:	mov    rcx,rdx
   14002b20c:	mov    rbx,rdx
   14002b20f:	call   0x14002b1bc
   14002b214:	mov    edx,DWORD PTR [rbx+0x18]
   14002b217:	movsxd rsi,eax
   14002b21a:	test   dl,0x82
   14002b21d:	jne    0x14002b238
   14002b21f:	call   0x140020aa4
   14002b224:	mov    DWORD PTR [rax],0x9
   14002b22a:	or     DWORD PTR [rbx+0x18],0x20
   14002b22e:	mov    eax,0xffff
   14002b233:	jmp    0x14002b370
   14002b238:	test   dl,0x40
   14002b23b:	je     0x14002b24a
   14002b23d:	call   0x140020aa4
   14002b242:	mov    DWORD PTR [rax],0x22
   14002b248:	jmp    0x14002b22a
   14002b24a:	xor    edi,edi
   14002b24c:	test   dl,0x1
   14002b24f:	je     0x14002b26a
   14002b251:	mov    DWORD PTR [rbx+0x8],edi
   14002b254:	test   dl,0x10
   14002b257:	je     0x14002b2e7
   14002b25d:	mov    rax,QWORD PTR [rbx+0x10]
   14002b261:	and    edx,0xfffffffe
   14002b264:	mov    QWORD PTR [rbx],rax
   14002b267:	mov    DWORD PTR [rbx+0x18],edx
   14002b26a:	mov    eax,DWORD PTR [rbx+0x18]
   14002b26d:	mov    DWORD PTR [rbx+0x8],edi
   14002b270:	and    eax,0xffffffef
   14002b273:	or     eax,0x2
   14002b276:	mov    DWORD PTR [rbx+0x18],eax
   14002b279:	test   eax,0x10c
   14002b27e:	jne    0x14002b2af
   14002b280:	call   0x140023a44
   14002b285:	add    rax,0x30
   14002b289:	cmp    rbx,rax
   14002b28c:	je     0x14002b29c
   14002b28e:	call   0x140023a44
   14002b293:	add    rax,0x60
   14002b297:	cmp    rbx,rax
   14002b29a:	jne    0x14002b2a7
   14002b29c:	mov    ecx,esi
   14002b29e:	call   0x14002d38c
   14002b2a3:	cmp    eax,edi
   14002b2a5:	jne    0x14002b2af
   14002b2a7:	mov    rcx,rbx
   14002b2aa:	call   0x14002b5a8
   14002b2af:	test   DWORD PTR [rbx+0x18],0x108
   14002b2b6:	je     0x14002b348
   14002b2bc:	mov    ebp,DWORD PTR [rbx]
   14002b2be:	mov    rdx,QWORD PTR [rbx+0x10]
   14002b2c2:	sub    ebp,DWORD PTR [rbx+0x10]
   14002b2c5:	lea    rax,[rdx+0x2]
   14002b2c9:	mov    QWORD PTR [rbx],rax
   14002b2cc:	mov    eax,DWORD PTR [rbx+0x24]
   14002b2cf:	sub    eax,0x2
   14002b2d2:	cmp    ebp,edi
   14002b2d4:	mov    DWORD PTR [rbx+0x8],eax
   14002b2d7:	jle    0x14002b2f2
   14002b2d9:	mov    r8d,ebp
   14002b2dc:	mov    ecx,esi
   14002b2de:	call   0x14002bd5c
   14002b2e3:	mov    edi,eax
   14002b2e5:	jmp    0x14002b33e
   14002b2e7:	or     edx,0x20
   14002b2ea:	mov    DWORD PTR [rbx+0x18],edx
   14002b2ed:	jmp    0x14002b22e
   14002b2f2:	cmp    esi,0xffffffff
   14002b2f5:	je     0x14002b31a
   14002b2f7:	cmp    esi,0xfffffffe
   14002b2fa:	je     0x14002b31a
   14002b2fc:	mov    rcx,rsi
   14002b2ff:	mov    rax,rsi
   14002b302:	lea    rdx,[rip+0x22017]        # 0x14004d320
   14002b309:	and    ecx,0x1f
   14002b30c:	sar    rax,0x5
   14002b310:	imul   rcx,rcx,0x58
   14002b314:	add    rcx,QWORD PTR [rdx+rax*8]
   14002b318:	jmp    0x14002b321
   14002b31a:	lea    rcx,[rip+0x1edbf]        # 0x14004a0e0
   14002b321:	test   BYTE PTR [rcx+0x8],0x20
   14002b325:	je     0x14002b33e
   14002b327:	xor    edx,edx
   14002b329:	mov    ecx,esi
   14002b32b:	lea    r8d,[rdx+0x2]
   14002b32f:	call   0x14002d254
   14002b334:	cmp    rax,0xffffffffffffffff
   14002b338:	je     0x14002b22a
   14002b33e:	mov    rax,QWORD PTR [rbx+0x10]
   14002b342:	mov    WORD PTR [rax],r12w
   14002b346:	jmp    0x14002b364
   14002b348:	mov    ebp,0x2
   14002b34d:	lea    rdx,[rsp+0x48]
   14002b352:	mov    ecx,esi
   14002b354:	mov    r8d,ebp
   14002b357:	mov    WORD PTR [rsp+0x48],r12w
   14002b35d:	call   0x14002bd5c
   14002b362:	mov    edi,eax
   14002b364:	cmp    edi,ebp
   14002b366:	jne    0x14002b22a
   14002b36c:	movzx  eax,r12w
   14002b370:	mov    rbx,QWORD PTR [rsp+0x40]
   14002b375:	mov    rbp,QWORD PTR [rsp+0x50]
   14002b37a:	add    rsp,0x20
   14002b37e:	pop    r12
   14002b380:	pop    rdi
   14002b381:	pop    rsi
   14002b382:	ret    
   14002b383:	int3   
   14002b384:	mov    QWORD PTR [rsp+0x8],rbx
   14002b389:	mov    WORD PTR [rsp+0x20],r9w
   14002b38f:	push   rbp
   14002b390:	push   rsi
   14002b391:	push   rdi
   14002b392:	sub    rsp,0x60
   14002b396:	xor    ebp,ebp
   14002b398:	mov    rdi,r8
   14002b39b:	mov    rsi,rdx
   14002b39e:	mov    rbx,rcx
   14002b3a1:	cmp    rdx,rbp
   14002b3a4:	jne    0x14002b3b9
   14002b3a6:	cmp    r8,rbp
   14002b3a9:	jbe    0x14002b3b9
   14002b3ab:	cmp    rcx,rbp
   14002b3ae:	je     0x14002b3b2
   14002b3b0:	mov    DWORD PTR [rcx],ebp
   14002b3b2:	xor    eax,eax
   14002b3b4:	jmp    0x14002b45d
   14002b3b9:	cmp    rcx,rbp
   14002b3bc:	je     0x14002b3c1
   14002b3be:	or     DWORD PTR [rcx],0xffffffff
   14002b3c1:	cmp    r8,0x7fffffff
   14002b3c8:	jbe    0x14002b3ee
   14002b3ca:	call   0x140020aa4
   14002b3cf:	mov    ebx,0x16
   14002b3d4:	xor    r9d,r9d
   14002b3d7:	xor    r8d,r8d
   14002b3da:	xor    edx,edx
   14002b3dc:	xor    ecx,ecx
   14002b3de:	mov    DWORD PTR [rax],ebx
   14002b3e0:	mov    QWORD PTR [rsp+0x20],rbp
   14002b3e5:	call   0x14001ccf0
   14002b3ea:	mov    eax,ebx
   14002b3ec:	jmp    0x14002b45d
   14002b3ee:	mov    rdx,QWORD PTR [rsp+0xa0]
   14002b3f6:	lea    rcx,[rsp+0x40]
   14002b3fb:	call   0x14001cf30
   14002b400:	mov    r11,QWORD PTR [rsp+0x40]
   14002b405:	cmp    DWORD PTR [r11+0x14],ebp
   14002b409:	jne    0x14002b4dc
   14002b40f:	movzx  eax,WORD PTR [rsp+0x98]
   14002b417:	mov    ecx,0xff
   14002b41c:	cmp    ax,cx
   14002b41f:	jbe    0x14002b46d
   14002b421:	cmp    rsi,rbp
   14002b424:	je     0x14002b438
   14002b426:	cmp    rdi,rbp
   14002b429:	jbe    0x14002b438
   14002b42b:	mov    r8,rdi
   14002b42e:	xor    edx,edx
   14002b430:	mov    rcx,rsi
   14002b433:	call   0x14001c730
   14002b438:	call   0x140020aa4
   14002b43d:	mov    DWORD PTR [rax],0x2a
   14002b443:	call   0x140020aa4
   14002b448:	mov    eax,DWORD PTR [rax]
   14002b44a:	cmp    BYTE PTR [rsp+0x58],bpl
   14002b44f:	je     0x14002b45d
   14002b451:	mov    rcx,QWORD PTR [rsp+0x50]
   14002b456:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002b45d:	mov    rbx,QWORD PTR [rsp+0x80]
   14002b465:	add    rsp,0x60
   14002b469:	pop    rdi
   14002b46a:	pop    rsi
   14002b46b:	pop    rbp
   14002b46c:	ret    
   14002b46d:	cmp    rsi,rbp
   14002b470:	je     0x14002b4b5
   14002b472:	cmp    rdi,rbp
   14002b475:	ja     0x14002b4b3
   14002b477:	call   0x140020aa4
   14002b47c:	mov    ebx,0x22
   14002b481:	xor    r9d,r9d
   14002b484:	xor    r8d,r8d
   14002b487:	xor    edx,edx
   14002b489:	xor    ecx,ecx
   14002b48b:	mov    DWORD PTR [rax],ebx
   14002b48d:	mov    QWORD PTR [rsp+0x20],rbp
   14002b492:	call   0x14001ccf0
   14002b497:	cmp    BYTE PTR [rsp+0x58],bpl
   14002b49c:	je     0x14002b3ea
   14002b4a2:	mov    rcx,QWORD PTR [rsp+0x50]
   14002b4a7:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002b4ae:	jmp    0x14002b3ea
   14002b4b3:	mov    BYTE PTR [rsi],al
   14002b4b5:	cmp    rbx,rbp
   14002b4b8:	je     0x14002b4c0
   14002b4ba:	mov    DWORD PTR [rbx],0x1
   14002b4c0:	cmp    BYTE PTR [rsp+0x58],bpl
   14002b4c5:	je     0x14002b3b2
   14002b4cb:	mov    rax,QWORD PTR [rsp+0x50]
   14002b4d0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002b4d7:	jmp    0x14002b3b2
   14002b4dc:	lea    rax,[rsp+0x88]
   14002b4e4:	mov    DWORD PTR [rsp+0x88],ebp
   14002b4eb:	mov    ecx,DWORD PTR [r11+0x4]
   14002b4ef:	mov    QWORD PTR [rsp+0x38],rax
   14002b4f4:	mov    QWORD PTR [rsp+0x30],rbp
   14002b4f9:	lea    r8,[rsp+0x98]
   14002b501:	mov    r9d,0x1
   14002b507:	xor    edx,edx
   14002b509:	mov    DWORD PTR [rsp+0x28],edi
   14002b50d:	mov    QWORD PTR [rsp+0x20],rsi
   14002b512:	call   QWORD PTR [rip+0xed10]        # 0x14003a228
   14002b518:	cmp    eax,ebp
   14002b51a:	je     0x14002b532
   14002b51c:	cmp    DWORD PTR [rsp+0x88],ebp
   14002b523:	jne    0x14002b438
   14002b529:	cmp    rbx,rbp
   14002b52c:	je     0x14002b4c0
   14002b52e:	mov    DWORD PTR [rbx],eax
   14002b530:	jmp    0x14002b4c0
   14002b532:	call   QWORD PTR [rip+0xeb90]        # 0x14003a0c8
   14002b538:	cmp    eax,0x7a
   14002b53b:	jne    0x14002b438
   14002b541:	cmp    rsi,rbp
   14002b544:	je     0x14002b558
   14002b546:	cmp    rdi,rbp
   14002b549:	jbe    0x14002b558
   14002b54b:	mov    r8,rdi
   14002b54e:	xor    edx,edx
   14002b550:	mov    rcx,rsi
   14002b553:	call   0x14001c730
   14002b558:	call   0x140020aa4
   14002b55d:	mov    ebx,0x22
   14002b562:	xor    r9d,r9d
   14002b565:	xor    r8d,r8d
   14002b568:	xor    edx,edx
   14002b56a:	xor    ecx,ecx
   14002b56c:	mov    DWORD PTR [rax],ebx
   14002b56e:	mov    QWORD PTR [rsp+0x20],rbp
   14002b573:	call   0x14001ccf0
   14002b578:	cmp    BYTE PTR [rsp+0x58],bpl
   14002b57d:	je     0x14002b3ea
   14002b583:	mov    rax,QWORD PTR [rsp+0x50]
   14002b588:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002b58f:	jmp    0x14002b3ea
   14002b594:	sub    rsp,0x38
   14002b598:	and    QWORD PTR [rsp+0x20],0x0
   14002b59e:	call   0x14002b384
   14002b5a3:	add    rsp,0x38
   14002b5a7:	ret    
   14002b5a8:	rex push rbx
   14002b5aa:	sub    rsp,0x20
   14002b5ae:	inc    DWORD PTR [rip+0x20560]        # 0x14004bb14
   14002b5b4:	mov    rbx,rcx
   14002b5b7:	mov    ecx,0x1000
   14002b5bc:	call   0x1400208e4
   14002b5c1:	mov    QWORD PTR [rbx+0x10],rax
   14002b5c5:	test   rax,rax
   14002b5c8:	je     0x14002b5d7
   14002b5ca:	or     DWORD PTR [rbx+0x18],0x8
   14002b5ce:	mov    DWORD PTR [rbx+0x24],0x1000
   14002b5d5:	jmp    0x14002b5ea
   14002b5d7:	or     DWORD PTR [rbx+0x18],0x4
   14002b5db:	lea    rax,[rbx+0x20]
   14002b5df:	mov    DWORD PTR [rbx+0x24],0x2
   14002b5e6:	mov    QWORD PTR [rbx+0x10],rax
   14002b5ea:	mov    rax,QWORD PTR [rbx+0x10]
   14002b5ee:	and    DWORD PTR [rbx+0x8],0x0
   14002b5f2:	mov    QWORD PTR [rbx],rax
   14002b5f5:	add    rsp,0x20
   14002b5f9:	pop    rbx
   14002b5fa:	ret    
   14002b5fb:	int3   
   14002b5fc:	mov    QWORD PTR [rsp+0x20],rbx
   14002b601:	push   rbp
   14002b602:	push   rsi
   14002b603:	push   rdi
   14002b604:	push   r12
   14002b606:	push   r13
   14002b608:	push   r14
   14002b60a:	push   r15
   14002b60c:	mov    eax,0x1b30
   14002b611:	call   0x140036570
   14002b616:	sub    rsp,rax
   14002b619:	mov    rax,QWORD PTR [rip+0x1de40]        # 0x140049460
   14002b620:	xor    rax,rsp
   14002b623:	mov    QWORD PTR [rsp+0x1b20],rax
   14002b62b:	xor    ebp,ebp
   14002b62d:	xor    edi,edi
   14002b62f:	mov    r13d,r8d
   14002b632:	mov    r12,rdx
   14002b635:	movsxd rbx,ecx
   14002b638:	mov    DWORD PTR [rsp+0x40],ebp
   14002b63c:	test   r8d,r8d
   14002b63f:	jne    0x14002b648
   14002b641:	xor    eax,eax
   14002b643:	jmp    0x14002bd2f
   14002b648:	test   rdx,rdx
   14002b64b:	jne    0x14002b67b
   14002b64d:	call   0x140020ac4
   14002b652:	and    DWORD PTR [rax],edi
   14002b654:	call   0x140020aa4
   14002b659:	and    QWORD PTR [rsp+0x20],rdi
   14002b65e:	xor    r9d,r9d
   14002b661:	xor    r8d,r8d
   14002b664:	xor    edx,edx
   14002b666:	xor    ecx,ecx
   14002b668:	mov    DWORD PTR [rax],0x16
   14002b66e:	call   0x14001ccf0
   14002b673:	or     eax,0xffffffff
   14002b676:	jmp    0x14002bd2f
   14002b67b:	mov    r15,rbx
   14002b67e:	mov    r14,rbx
   14002b681:	lea    rax,[rip+0x21c98]        # 0x14004d320
   14002b688:	sar    r14,0x5
   14002b68c:	and    r15d,0x1f
   14002b690:	mov    rcx,QWORD PTR [rax+r14*8]
   14002b694:	mov    QWORD PTR [rsp+0x50],r14
   14002b699:	imul   r15,r15,0x58
   14002b69d:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   14002b6a2:	add    sil,sil
   14002b6a5:	sar    sil,1
   14002b6a8:	cmp    sil,0x2
   14002b6ac:	je     0x14002b6b4
   14002b6ae:	cmp    sil,0x1
   14002b6b2:	jne    0x14002b6bd
   14002b6b4:	mov    eax,r13d
   14002b6b7:	not    eax
   14002b6b9:	test   al,0x1
   14002b6bb:	je     0x14002b64d
   14002b6bd:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   14002b6c3:	je     0x14002b6d2
   14002b6c5:	xor    edx,edx
   14002b6c7:	mov    ecx,ebx
   14002b6c9:	lea    r8d,[rdx+0x2]
   14002b6cd:	call   0x14002d1bc
   14002b6d2:	mov    ecx,ebx
   14002b6d4:	call   0x14002d38c
   14002b6d9:	test   eax,eax
   14002b6db:	je     0x14002b9d2
   14002b6e1:	lea    rax,[rip+0x21c38]        # 0x14004d320
   14002b6e8:	mov    rax,QWORD PTR [rax+r14*8]
   14002b6ec:	test   BYTE PTR [r15+rax*1+0x8],0x80
   14002b6f2:	je     0x14002b9d2
   14002b6f8:	call   0x14002412c
   14002b6fd:	xor    ebx,ebx
   14002b6ff:	lea    rdx,[rsp+0x58]
   14002b704:	mov    rcx,QWORD PTR [rax+0xc0]
   14002b70b:	lea    rax,[rip+0x21c0e]        # 0x14004d320
   14002b712:	cmp    DWORD PTR [rcx+0x14],ebx
   14002b715:	mov    rcx,QWORD PTR [rax+r14*8]
   14002b719:	mov    rcx,QWORD PTR [r15+rcx*1]
   14002b71d:	sete   bl
   14002b720:	call   QWORD PTR [rip+0xeaba]        # 0x14003a1e0
   14002b726:	test   eax,eax
   14002b728:	je     0x14002b9d2
   14002b72e:	test   ebx,ebx
   14002b730:	je     0x14002b73b
   14002b732:	test   sil,sil
   14002b735:	je     0x14002b9d2
   14002b73b:	call   QWORD PTR [rip+0xeaa7]        # 0x14003a1e8
   14002b741:	and    DWORD PTR [rsp+0x4c],edi
   14002b745:	mov    rbx,r12
   14002b748:	mov    DWORD PTR [rsp+0x58],eax
   14002b74c:	test   r13d,r13d
   14002b74f:	je     0x14002b9cc
   14002b755:	mov    r14d,DWORD PTR [rsp+0x58]
   14002b75a:	mov    ebp,0xd
   14002b75f:	test   sil,sil
   14002b762:	jne    0x14002b8eb
   14002b768:	mov    rdx,QWORD PTR [rsp+0x50]
   14002b76d:	mov    cl,BYTE PTR [rbx]
   14002b76f:	xor    r14d,r14d
   14002b772:	cmp    cl,0xa
   14002b775:	lea    rbp,[rip+0x21ba4]        # 0x14004d320
   14002b77c:	mov    rdx,QWORD PTR [rbp+rdx*8+0x0]
   14002b781:	sete   r14b
   14002b785:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   14002b78b:	je     0x14002b7ad
   14002b78d:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   14002b792:	mov    BYTE PTR [rsp+0x5d],cl
   14002b796:	mov    r8d,0x2
   14002b79c:	mov    BYTE PTR [rsp+0x5c],al
   14002b7a0:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   14002b7a6:	lea    rdx,[rsp+0x5c]
   14002b7ab:	jmp    0x14002b7f6
   14002b7ad:	movsx  ecx,cl
   14002b7b0:	call   0x140029e5c
   14002b7b5:	test   eax,eax
   14002b7b7:	je     0x14002b7ed
   14002b7b9:	mov    rax,r13
   14002b7bc:	sub    rax,rbx
   14002b7bf:	add    rax,r12
   14002b7c2:	cmp    rax,0x1
   14002b7c6:	jle    0x14002b99b
   14002b7cc:	lea    rcx,[rsp+0x44]
   14002b7d1:	mov    r8d,0x2
   14002b7d7:	mov    rdx,rbx
   14002b7da:	call   0x14002b058
   14002b7df:	cmp    eax,0xffffffff
   14002b7e2:	je     0x14002b95e
   14002b7e8:	inc    rbx
   14002b7eb:	jmp    0x14002b809
   14002b7ed:	mov    r8d,0x1
   14002b7f3:	mov    rdx,rbx
   14002b7f6:	lea    rcx,[rsp+0x44]
   14002b7fb:	call   0x14002b058
   14002b800:	cmp    eax,0xffffffff
   14002b803:	je     0x14002b95e
   14002b809:	and    QWORD PTR [rsp+0x38],0x0
   14002b80f:	and    QWORD PTR [rsp+0x30],0x0
   14002b815:	mov    ecx,DWORD PTR [rsp+0x58]
   14002b819:	lea    rax,[rsp+0x5c]
   14002b81e:	lea    r8,[rsp+0x44]
   14002b823:	mov    r9d,0x1
   14002b829:	xor    edx,edx
   14002b82b:	mov    DWORD PTR [rsp+0x28],0x5
   14002b833:	inc    rbx
   14002b836:	mov    QWORD PTR [rsp+0x20],rax
   14002b83b:	call   QWORD PTR [rip+0xe9e7]        # 0x14003a228
   14002b841:	mov    ebp,eax
   14002b843:	test   eax,eax
   14002b845:	je     0x14002b95e
   14002b84b:	mov    rax,QWORD PTR [rsp+0x50]
   14002b850:	and    QWORD PTR [rsp+0x20],0x0
   14002b856:	lea    rcx,[rip+0x21ac3]        # 0x14004d320
   14002b85d:	mov    rcx,QWORD PTR [rcx+rax*8]
   14002b861:	lea    r9,[rsp+0x4c]
   14002b866:	lea    rdx,[rsp+0x5c]
   14002b86b:	mov    rcx,QWORD PTR [r15+rcx*1]
   14002b86f:	mov    r8d,ebp
   14002b872:	call   QWORD PTR [rip+0xeab0]        # 0x14003a328
   14002b878:	test   eax,eax
   14002b87a:	je     0x14002b9c2
   14002b880:	mov    edi,ebx
   14002b882:	sub    edi,r12d
   14002b885:	add    edi,DWORD PTR [rsp+0x40]
   14002b889:	cmp    DWORD PTR [rsp+0x4c],ebp
   14002b88d:	jl     0x14002b95e
   14002b893:	mov    ebp,0xd
   14002b898:	test   r14d,r14d
   14002b89b:	je     0x14002b950
   14002b8a1:	mov    rax,QWORD PTR [rsp+0x50]
   14002b8a6:	and    QWORD PTR [rsp+0x20],0x0
   14002b8ac:	mov    BYTE PTR [rsp+0x5c],bpl
   14002b8b1:	lea    rcx,[rip+0x21a68]        # 0x14004d320
   14002b8b8:	lea    r9,[rsp+0x4c]
   14002b8bd:	lea    r8d,[rbp-0xc]
   14002b8c1:	mov    rcx,QWORD PTR [rcx+rax*8]
   14002b8c5:	lea    rdx,[rsp+0x5c]
   14002b8ca:	mov    rcx,QWORD PTR [r15+rcx*1]
   14002b8ce:	call   QWORD PTR [rip+0xea54]        # 0x14003a328
   14002b8d4:	test   eax,eax
   14002b8d6:	je     0x14002b9c2
   14002b8dc:	cmp    DWORD PTR [rsp+0x4c],0x1
   14002b8e1:	jl     0x14002b95e
   14002b8e3:	inc    DWORD PTR [rsp+0x40]
   14002b8e7:	inc    edi
   14002b8e9:	jmp    0x14002b950
   14002b8eb:	cmp    sil,0x1
   14002b8ef:	je     0x14002b8f7
   14002b8f1:	cmp    sil,0x2
   14002b8f5:	jne    0x14002b90e
   14002b8f7:	movzx  eax,WORD PTR [rbx]
   14002b8fa:	xor    r14d,r14d
   14002b8fd:	cmp    ax,0xa
   14002b901:	mov    WORD PTR [rsp+0x44],ax
   14002b906:	sete   r14b
   14002b90a:	add    rbx,0x2
   14002b90e:	cmp    sil,0x1
   14002b912:	je     0x14002b91a
   14002b914:	cmp    sil,0x2
   14002b918:	jne    0x14002b950
   14002b91a:	movzx  ecx,WORD PTR [rsp+0x44]
   14002b91f:	call   0x14002fa78
   14002b924:	cmp    ax,WORD PTR [rsp+0x44]
   14002b929:	jne    0x14002b9c2
   14002b92f:	add    edi,0x2
   14002b932:	test   r14d,r14d
   14002b935:	je     0x14002b950
   14002b937:	mov    ecx,ebp
   14002b939:	mov    WORD PTR [rsp+0x44],bp
   14002b93e:	call   0x14002fa78
   14002b943:	cmp    ax,WORD PTR [rsp+0x44]
   14002b948:	jne    0x14002b9c2
   14002b94a:	inc    edi
   14002b94c:	inc    DWORD PTR [rsp+0x40]
   14002b950:	mov    eax,ebx
   14002b952:	sub    eax,r12d
   14002b955:	cmp    eax,r13d
   14002b958:	jb     0x14002b75f
   14002b95e:	mov    ebx,DWORD PTR [rsp+0x4c]
   14002b962:	mov    r14,QWORD PTR [rsp+0x50]
   14002b967:	mov    ebp,DWORD PTR [rsp+0x40]
   14002b96b:	test   edi,edi
   14002b96d:	jne    0x14002bd2b
   14002b973:	test   ebx,ebx
   14002b975:	je     0x14002bcf5
   14002b97b:	cmp    ebx,0x5
   14002b97e:	jne    0x14002bce9
   14002b984:	call   0x140020aa4
   14002b989:	mov    DWORD PTR [rax],0x9
   14002b98f:	call   0x140020ac4
   14002b994:	mov    DWORD PTR [rax],ebx
   14002b996:	jmp    0x14002b673
   14002b99b:	mov    al,BYTE PTR [rbx]
   14002b99d:	mov    r14,QWORD PTR [rsp+0x50]
   14002b9a2:	inc    edi
   14002b9a4:	mov    rcx,QWORD PTR [rbp+r14*8+0x0]
   14002b9a9:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   14002b9ae:	mov    rax,QWORD PTR [rbp+r14*8+0x0]
   14002b9b3:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   14002b9bc:	mov    ebx,DWORD PTR [rsp+0x4c]
   14002b9c0:	jmp    0x14002b967
   14002b9c2:	call   QWORD PTR [rip+0xe700]        # 0x14003a0c8
   14002b9c8:	mov    ebx,eax
   14002b9ca:	jmp    0x14002b962
   14002b9cc:	mov    ebx,DWORD PTR [rsp+0x4c]
   14002b9d0:	jmp    0x14002b973
   14002b9d2:	lea    rax,[rip+0x21947]        # 0x14004d320
   14002b9d9:	mov    rcx,QWORD PTR [rax+r14*8]
   14002b9dd:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   14002b9e3:	je     0x14002bcb3
   14002b9e9:	xor    ebx,ebx
   14002b9eb:	mov    rbp,r12
   14002b9ee:	test   sil,sil
   14002b9f1:	jne    0x14002bac7
   14002b9f7:	test   r13d,r13d
   14002b9fa:	je     0x14002bcfc
   14002ba00:	lea    edx,[rbx+0xd]
   14002ba03:	mov    r14d,DWORD PTR [rsp+0x40]
   14002ba08:	lea    rsi,[rsp+0x720]
   14002ba10:	xor    ecx,ecx
   14002ba12:	mov    eax,ebp
   14002ba14:	sub    eax,r12d
   14002ba17:	cmp    eax,r13d
   14002ba1a:	jae    0x14002ba42
   14002ba1c:	mov    al,BYTE PTR [rbp+0x0]
   14002ba1f:	inc    rbp
   14002ba22:	cmp    al,0xa
   14002ba24:	jne    0x14002ba31
   14002ba26:	mov    BYTE PTR [rsi],dl
   14002ba28:	inc    r14d
   14002ba2b:	inc    rsi
   14002ba2e:	inc    rcx
   14002ba31:	inc    rcx
   14002ba34:	mov    BYTE PTR [rsi],al
   14002ba36:	inc    rsi
   14002ba39:	cmp    rcx,0x13ff
   14002ba40:	jb     0x14002ba12
   14002ba42:	and    QWORD PTR [rsp+0x20],rbx
   14002ba47:	lea    rax,[rsp+0x720]
   14002ba4f:	mov    r8d,esi
   14002ba52:	sub    r8d,eax
   14002ba55:	lea    rax,[rip+0x218c4]        # 0x14004d320
   14002ba5c:	mov    DWORD PTR [rsp+0x40],r14d
   14002ba61:	mov    r14,QWORD PTR [rsp+0x50]
   14002ba66:	lea    r9,[rsp+0x48]
   14002ba6b:	lea    rdx,[rsp+0x720]
   14002ba73:	mov    rcx,QWORD PTR [rax+r14*8]
   14002ba77:	mov    rcx,QWORD PTR [r15+rcx*1]
   14002ba7b:	call   QWORD PTR [rip+0xe8a7]        # 0x14003a328
   14002ba81:	test   eax,eax
   14002ba83:	je     0x14002baba
   14002ba85:	add    edi,DWORD PTR [rsp+0x48]
   14002ba89:	lea    rax,[rsp+0x720]
   14002ba91:	sub    rsi,rax
   14002ba94:	movsxd rax,DWORD PTR [rsp+0x48]
   14002ba99:	cmp    rax,rsi
   14002ba9c:	jl     0x14002b967
   14002baa2:	mov    eax,ebp
   14002baa4:	mov    edx,0xd
   14002baa9:	sub    eax,r12d
   14002baac:	cmp    eax,r13d
   14002baaf:	jb     0x14002ba03
   14002bab5:	jmp    0x14002b967
   14002baba:	call   QWORD PTR [rip+0xe608]        # 0x14003a0c8
   14002bac0:	mov    ebx,eax
   14002bac2:	jmp    0x14002b967
   14002bac7:	cmp    sil,0x2
   14002bacb:	jne    0x14002bba5
   14002bad1:	test   r13d,r13d
   14002bad4:	je     0x14002bcfc
   14002bada:	mov    edx,0xd
   14002badf:	mov    r14d,DWORD PTR [rsp+0x40]
   14002bae4:	lea    rsi,[rsp+0x720]
   14002baec:	xor    ecx,ecx
   14002baee:	mov    eax,ebp
   14002baf0:	sub    eax,r12d
   14002baf3:	cmp    eax,r13d
   14002baf6:	jae    0x14002bb29
   14002baf8:	movzx  eax,WORD PTR [rbp+0x0]
   14002bafc:	add    rbp,0x2
   14002bb00:	cmp    ax,0xa
   14002bb04:	jne    0x14002bb15
   14002bb06:	mov    WORD PTR [rsi],dx
   14002bb09:	add    r14d,0x2
   14002bb0d:	add    rsi,0x2
   14002bb11:	add    rcx,0x2
   14002bb15:	add    rcx,0x2
   14002bb19:	mov    WORD PTR [rsi],ax
   14002bb1c:	add    rsi,0x2
   14002bb20:	cmp    rcx,0x13fe
   14002bb27:	jb     0x14002baee
   14002bb29:	and    QWORD PTR [rsp+0x20],rbx
   14002bb2e:	lea    rax,[rsp+0x720]
   14002bb36:	mov    r8d,esi
   14002bb39:	sub    r8d,eax
   14002bb3c:	lea    rax,[rip+0x217dd]        # 0x14004d320
   14002bb43:	mov    DWORD PTR [rsp+0x40],r14d
   14002bb48:	mov    r14,QWORD PTR [rsp+0x50]
   14002bb4d:	lea    r9,[rsp+0x48]
   14002bb52:	lea    rdx,[rsp+0x720]
   14002bb5a:	mov    rcx,QWORD PTR [rax+r14*8]
   14002bb5e:	mov    rcx,QWORD PTR [r15+rcx*1]
   14002bb62:	call   QWORD PTR [rip+0xe7c0]        # 0x14003a328
   14002bb68:	test   eax,eax
   14002bb6a:	je     0x14002baba
   14002bb70:	add    edi,DWORD PTR [rsp+0x48]
   14002bb74:	lea    rax,[rsp+0x720]
   14002bb7c:	sub    rsi,rax
   14002bb7f:	movsxd rax,DWORD PTR [rsp+0x48]
   14002bb84:	cmp    rax,rsi
   14002bb87:	jl     0x14002b967
   14002bb8d:	mov    eax,ebp
   14002bb8f:	mov    edx,0xd
   14002bb94:	sub    eax,r12d
   14002bb97:	cmp    eax,r13d
   14002bb9a:	jb     0x14002badf
   14002bba0:	jmp    0x14002b967
   14002bba5:	test   r13d,r13d
   14002bba8:	je     0x14002bcfc
   14002bbae:	mov    r8d,0xd
   14002bbb4:	lea    rcx,[rsp+0x70]
   14002bbb9:	xor    edx,edx
   14002bbbb:	mov    eax,ebp
   14002bbbd:	sub    eax,r12d
   14002bbc0:	cmp    eax,r13d
   14002bbc3:	jae    0x14002bbf3
   14002bbc5:	movzx  eax,WORD PTR [rbp+0x0]
   14002bbc9:	add    rbp,0x2
   14002bbcd:	cmp    ax,0xa
   14002bbd1:	jne    0x14002bbdf
   14002bbd3:	mov    WORD PTR [rcx],r8w
   14002bbd7:	add    rcx,0x2
   14002bbdb:	add    rdx,0x2
   14002bbdf:	add    rdx,0x2
   14002bbe3:	mov    WORD PTR [rcx],ax
   14002bbe6:	add    rcx,0x2
   14002bbea:	cmp    rdx,0x6a8
   14002bbf1:	jb     0x14002bbbb
   14002bbf3:	and    QWORD PTR [rsp+0x38],0x0
   14002bbf9:	and    QWORD PTR [rsp+0x30],0x0
   14002bbff:	lea    rax,[rsp+0x70]
   14002bc04:	sub    ecx,eax
   14002bc06:	lea    r8,[rsp+0x70]
   14002bc0b:	mov    DWORD PTR [rsp+0x28],0xd55
   14002bc13:	mov    eax,ecx
   14002bc15:	mov    ecx,0xfde9
   14002bc1a:	cdq    
   14002bc1b:	sub    eax,edx
   14002bc1d:	xor    edx,edx
   14002bc1f:	sar    eax,1
   14002bc21:	mov    r9d,eax
   14002bc24:	lea    rax,[rsp+0x720]
   14002bc2c:	mov    QWORD PTR [rsp+0x20],rax
   14002bc31:	call   QWORD PTR [rip+0xe5f1]        # 0x14003a228
   14002bc37:	mov    r14d,eax
   14002bc3a:	test   eax,eax
   14002bc3c:	je     0x14002b9c2
   14002bc42:	xor    esi,esi
   14002bc44:	mov    rax,QWORD PTR [rsp+0x50]
   14002bc49:	and    QWORD PTR [rsp+0x20],0x0
   14002bc4f:	movsxd rcx,esi
   14002bc52:	lea    rdx,[rsp+rcx*1+0x720]
   14002bc5a:	mov    r8d,r14d
   14002bc5d:	lea    rcx,[rip+0x216bc]        # 0x14004d320
   14002bc64:	mov    rcx,QWORD PTR [rcx+rax*8]
   14002bc68:	lea    r9,[rsp+0x48]
   14002bc6d:	sub    r8d,esi
   14002bc70:	mov    rcx,QWORD PTR [r15+rcx*1]
   14002bc74:	call   QWORD PTR [rip+0xe6ae]        # 0x14003a328
   14002bc7a:	test   eax,eax
   14002bc7c:	je     0x14002bc89
   14002bc7e:	add    esi,DWORD PTR [rsp+0x48]
   14002bc82:	cmp    r14d,esi
   14002bc85:	jg     0x14002bc44
   14002bc87:	jmp    0x14002bc91
   14002bc89:	call   QWORD PTR [rip+0xe439]        # 0x14003a0c8
   14002bc8f:	mov    ebx,eax
   14002bc91:	cmp    r14d,esi
   14002bc94:	jg     0x14002b962
   14002bc9a:	mov    edi,ebp
   14002bc9c:	mov    r8d,0xd
   14002bca2:	sub    edi,r12d
   14002bca5:	cmp    edi,r13d
   14002bca8:	jb     0x14002bbb4
   14002bcae:	jmp    0x14002b962
   14002bcb3:	mov    rcx,QWORD PTR [r15+rcx*1]
   14002bcb7:	and    QWORD PTR [rsp+0x20],rdi
   14002bcbc:	lea    r9,[rsp+0x48]
   14002bcc1:	mov    r8d,r13d
   14002bcc4:	mov    rdx,r12
   14002bcc7:	call   QWORD PTR [rip+0xe65b]        # 0x14003a328
   14002bccd:	test   eax,eax
   14002bccf:	je     0x14002bcdc
   14002bcd1:	mov    edi,DWORD PTR [rsp+0x48]
   14002bcd5:	xor    ebx,ebx
   14002bcd7:	jmp    0x14002b96b
   14002bcdc:	call   QWORD PTR [rip+0xe3e6]        # 0x14003a0c8
   14002bce2:	mov    ebx,eax
   14002bce4:	jmp    0x14002b96b
   14002bce9:	mov    ecx,ebx
   14002bceb:	call   0x140020ae4
   14002bcf0:	jmp    0x14002b673
   14002bcf5:	lea    rax,[rip+0x21624]        # 0x14004d320
   14002bcfc:	mov    rax,QWORD PTR [rax+r14*8]
   14002bd00:	test   BYTE PTR [r15+rax*1+0x8],0x40
   14002bd06:	je     0x14002bd13
   14002bd08:	cmp    BYTE PTR [r12],0x1a
   14002bd0d:	je     0x14002b641
   14002bd13:	call   0x140020aa4
   14002bd18:	mov    DWORD PTR [rax],0x1c
   14002bd1e:	call   0x140020ac4
   14002bd23:	and    DWORD PTR [rax],0x0
   14002bd26:	jmp    0x14002b673
   14002bd2b:	sub    edi,ebp
   14002bd2d:	mov    eax,edi
   14002bd2f:	mov    rcx,QWORD PTR [rsp+0x1b20]
   14002bd37:	xor    rcx,rsp
   14002bd3a:	call   0x14001c500
   14002bd3f:	mov    rbx,QWORD PTR [rsp+0x1b88]
   14002bd47:	add    rsp,0x1b30
   14002bd4e:	pop    r15
   14002bd50:	pop    r14
   14002bd52:	pop    r13
   14002bd54:	pop    r12
   14002bd56:	pop    rdi
   14002bd57:	pop    rsi
   14002bd58:	pop    rbp
   14002bd59:	ret    
   14002bd5a:	int3   
   14002bd5b:	int3   
   14002bd5c:	mov    QWORD PTR [rsp+0x10],rbx
   14002bd61:	mov    QWORD PTR [rsp+0x18],rsi
   14002bd66:	mov    DWORD PTR [rsp+0x8],ecx
   14002bd6a:	push   rdi
   14002bd6b:	push   r12
   14002bd6d:	push   r13
   14002bd6f:	push   r14
   14002bd71:	push   r15
   14002bd73:	sub    rsp,0x30
   14002bd77:	mov    r12d,r8d
   14002bd7a:	mov    r13,rdx
   14002bd7d:	movsxd rbx,ecx
   14002bd80:	cmp    ebx,0xfffffffe
   14002bd83:	jne    0x14002bda1
   14002bd85:	call   0x140020ac4
   14002bd8a:	xor    edi,edi
   14002bd8c:	mov    DWORD PTR [rax],edi
   14002bd8e:	call   0x140020aa4
   14002bd93:	mov    DWORD PTR [rax],0x9
   14002bd99:	or     eax,0xffffffff
   14002bd9c:	jmp    0x14002be75
   14002bda1:	xor    edi,edi
   14002bda3:	cmp    ebx,edi
   14002bda5:	jl     0x14002be4c
   14002bdab:	cmp    ebx,DWORD PTR [rip+0x21557]        # 0x14004d308
   14002bdb1:	jae    0x14002be4c
   14002bdb7:	mov    rsi,rbx
   14002bdba:	mov    r14,rbx
   14002bdbd:	sar    r14,0x5
   14002bdc1:	lea    r15,[rip+0x21558]        # 0x14004d320
   14002bdc8:	and    esi,0x1f
   14002bdcb:	imul   rsi,rsi,0x58
   14002bdcf:	mov    rax,QWORD PTR [r15+r14*8]
   14002bdd3:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14002bdd8:	and    ecx,0x1
   14002bddb:	jne    0x14002be08
   14002bddd:	call   0x140020ac4
   14002bde2:	mov    DWORD PTR [rax],edi
   14002bde4:	call   0x140020aa4
   14002bde9:	mov    DWORD PTR [rax],0x9
   14002bdef:	mov    QWORD PTR [rsp+0x20],rdi
   14002bdf4:	xor    r9d,r9d
   14002bdf7:	xor    r8d,r8d
   14002bdfa:	xor    edx,edx
   14002bdfc:	xor    ecx,ecx
   14002bdfe:	call   0x14001ccf0
   14002be03:	or     eax,0xffffffff
   14002be06:	jmp    0x14002be75
   14002be08:	mov    ecx,ebx
   14002be0a:	call   0x14002fcbc
   14002be0f:	nop
   14002be10:	mov    rax,QWORD PTR [r15+r14*8]
   14002be14:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   14002be19:	je     0x14002be2c
   14002be1b:	mov    r8d,r12d
   14002be1e:	mov    rdx,r13
   14002be21:	mov    ecx,ebx
   14002be23:	call   0x14002b5fc
   14002be28:	mov    edi,eax
   14002be2a:	jmp    0x14002be41
   14002be2c:	call   0x140020aa4
   14002be31:	mov    DWORD PTR [rax],0x9
   14002be37:	call   0x140020ac4
   14002be3c:	mov    DWORD PTR [rax],edi
   14002be3e:	or     edi,0xffffffff
   14002be41:	mov    ecx,ebx
   14002be43:	call   0x14002fd64
   14002be48:	mov    eax,edi
   14002be4a:	jmp    0x14002be75
   14002be4c:	call   0x140020ac4
   14002be51:	mov    DWORD PTR [rax],edi
   14002be53:	call   0x140020aa4
   14002be58:	mov    DWORD PTR [rax],0x9
   14002be5e:	mov    QWORD PTR [rsp+0x20],rdi
   14002be63:	xor    r9d,r9d
   14002be66:	xor    r8d,r8d
   14002be69:	xor    edx,edx
   14002be6b:	xor    ecx,ecx
   14002be6d:	call   0x14001ccf0
   14002be72:	or     eax,0xffffffff
   14002be75:	mov    rbx,QWORD PTR [rsp+0x68]
   14002be7a:	mov    rsi,QWORD PTR [rsp+0x70]
   14002be7f:	add    rsp,0x30
   14002be83:	pop    r15
   14002be85:	pop    r14
   14002be87:	pop    r13
   14002be89:	pop    r12
   14002be8b:	pop    rdi
   14002be8c:	ret    
   14002be8d:	int3   
   14002be8e:	int3   
   14002be8f:	int3   
   14002be90:	mov    QWORD PTR [rsp+0x18],rbx
   14002be95:	mov    DWORD PTR [rsp+0x8],ecx
   14002be99:	push   rsi
   14002be9a:	push   rdi
   14002be9b:	push   r12
   14002be9d:	sub    rsp,0x30
   14002bea1:	movsxd rdi,ecx
   14002bea4:	cmp    edi,0xfffffffe
   14002bea7:	jne    0x14002bebc
   14002bea9:	call   0x140020aa4
   14002beae:	mov    DWORD PTR [rax],0x9
   14002beb4:	or     eax,0xffffffff
   14002beb7:	jmp    0x14002bf95
   14002bebc:	test   ecx,ecx
   14002bebe:	js     0x14002bf72
   14002bec4:	cmp    edi,DWORD PTR [rip+0x2143e]        # 0x14004d308
   14002beca:	jae    0x14002bf72
   14002bed0:	mov    rbx,rdi
   14002bed3:	mov    rsi,rdi
   14002bed6:	sar    rsi,0x5
   14002beda:	lea    r12,[rip+0x2143f]        # 0x14004d320
   14002bee1:	and    ebx,0x1f
   14002bee4:	imul   rbx,rbx,0x58
   14002bee8:	mov    rax,QWORD PTR [r12+rsi*8]
   14002beec:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   14002bef1:	and    ecx,0x1
   14002bef4:	jne    0x14002bf1b
   14002bef6:	call   0x140020aa4
   14002befb:	mov    DWORD PTR [rax],0x9
   14002bf01:	and    QWORD PTR [rsp+0x20],0x0
   14002bf07:	xor    r9d,r9d
   14002bf0a:	xor    r8d,r8d
   14002bf0d:	xor    edx,edx
   14002bf0f:	xor    ecx,ecx
   14002bf11:	call   0x14001ccf0
   14002bf16:	or     eax,0xffffffff
   14002bf19:	jmp    0x14002bf95
   14002bf1b:	mov    ecx,edi
   14002bf1d:	call   0x14002fcbc
   14002bf22:	nop
   14002bf23:	mov    rax,QWORD PTR [r12+rsi*8]
   14002bf27:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14002bf2c:	je     0x14002bf59
   14002bf2e:	mov    ecx,edi
   14002bf30:	call   0x14002fc38
   14002bf35:	mov    rcx,rax
   14002bf38:	call   QWORD PTR [rip+0xe29a]        # 0x14003a1d8
   14002bf3e:	test   eax,eax
   14002bf40:	jne    0x14002bf4c
   14002bf42:	call   QWORD PTR [rip+0xe180]        # 0x14003a0c8
   14002bf48:	mov    ebx,eax
   14002bf4a:	jmp    0x14002bf4e
   14002bf4c:	xor    ebx,ebx
   14002bf4e:	test   ebx,ebx
   14002bf50:	je     0x14002bf67
   14002bf52:	call   0x140020ac4
   14002bf57:	mov    DWORD PTR [rax],ebx
   14002bf59:	call   0x140020aa4
   14002bf5e:	mov    DWORD PTR [rax],0x9
   14002bf64:	or     ebx,0xffffffff
   14002bf67:	mov    ecx,edi
   14002bf69:	call   0x14002fd64
   14002bf6e:	mov    eax,ebx
   14002bf70:	jmp    0x14002bf95
   14002bf72:	call   0x140020aa4
   14002bf77:	mov    DWORD PTR [rax],0x9
   14002bf7d:	and    QWORD PTR [rsp+0x20],0x0
   14002bf83:	xor    r9d,r9d
   14002bf86:	xor    r8d,r8d
   14002bf89:	xor    edx,edx
   14002bf8b:	xor    ecx,ecx
   14002bf8d:	call   0x14001ccf0
   14002bf92:	or     eax,0xffffffff
   14002bf95:	mov    rbx,QWORD PTR [rsp+0x60]
   14002bf9a:	add    rsp,0x30
   14002bf9e:	pop    r12
   14002bfa0:	pop    rdi
   14002bfa1:	pop    rsi
   14002bfa2:	ret    
   14002bfa3:	int3   
   14002bfa4:	rex push rbx
   14002bfa6:	sub    rsp,0x20
   14002bfaa:	test   BYTE PTR [rcx+0x18],0x83
   14002bfae:	mov    rbx,rcx
   14002bfb1:	je     0x14002bfd5
   14002bfb3:	test   BYTE PTR [rcx+0x18],0x8
   14002bfb7:	je     0x14002bfd5
   14002bfb9:	mov    rcx,QWORD PTR [rcx+0x10]
   14002bfbd:	call   0x14001ca48
   14002bfc2:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   14002bfc9:	xor    eax,eax
   14002bfcb:	mov    QWORD PTR [rbx],rax
   14002bfce:	mov    QWORD PTR [rbx+0x10],rax
   14002bfd2:	mov    DWORD PTR [rbx+0x8],eax
   14002bfd5:	add    rsp,0x20
   14002bfd9:	pop    rbx
   14002bfda:	ret    
   14002bfdb:	int3   
   14002bfdc:	mov    QWORD PTR [rsp+0x10],rbx
   14002bfe1:	mov    QWORD PTR [rsp+0x18],rbp
   14002bfe6:	mov    QWORD PTR [rsp+0x20],rsi
   14002bfeb:	push   rdi
   14002bfec:	push   r12
   14002bfee:	push   r13
   14002bff0:	push   r14
   14002bff2:	push   r15
   14002bff4:	mov    eax,0x1050
   14002bff9:	call   0x140036570
   14002bffe:	sub    rsp,rax
   14002c001:	mov    rax,QWORD PTR [rip+0x1d458]        # 0x140049460
   14002c008:	xor    rax,rsp
   14002c00b:	mov    QWORD PTR [rsp+0x1040],rax
   14002c013:	mov    rbp,rcx
   14002c016:	call   0x14002b1bc
   14002c01b:	xor    ebx,ebx
   14002c01d:	cmp    DWORD PTR [rbp+0x8],ebx
   14002c020:	movsxd r12,eax
   14002c023:	jge    0x14002c028
   14002c025:	mov    DWORD PTR [rbp+0x8],ebx
   14002c028:	xor    edx,edx
   14002c02a:	mov    ecx,r12d
   14002c02d:	lea    r8d,[rdx+0x1]
   14002c031:	call   0x14002d254
   14002c036:	cmp    rax,rbx
   14002c039:	mov    rsi,rax
   14002c03c:	jge    0x14002c047
   14002c03e:	or     rax,0xffffffffffffffff
   14002c042:	jmp    0x14002c299
   14002c047:	mov    edx,DWORD PTR [rbp+0x18]
   14002c04a:	mov    r13,r12
   14002c04d:	mov    r15,r12
   14002c050:	sar    r15,0x5
   14002c054:	and    r13d,0x1f
   14002c058:	lea    rax,[rip+0xfffffffffffd3fa1]        # 0x140000000
   14002c05f:	mov    rcx,QWORD PTR [rax+r15*8+0x4d320]
   14002c067:	imul   r13,r13,0x58
   14002c06b:	mov    r14b,BYTE PTR [r13+rcx*1+0x38]
   14002c070:	add    r14b,r14b
   14002c073:	sar    r14b,1
   14002c076:	test   edx,0x108
   14002c07c:	jne    0x14002c08d
   14002c07e:	movsxd rax,DWORD PTR [rbp+0x8]
   14002c082:	sub    rsi,rax
   14002c085:	mov    rax,rsi
   14002c088:	jmp    0x14002c299
   14002c08d:	mov    rdi,QWORD PTR [rbp+0x0]
   14002c091:	sub    rdi,QWORD PTR [rbp+0x10]
   14002c095:	test   dl,0x3
   14002c098:	je     0x14002c1b9
   14002c09e:	cmp    r14b,0x1
   14002c0a2:	jne    0x14002c18d
   14002c0a8:	cmp    DWORD PTR [r13+rcx*1+0x48],ebx
   14002c0ad:	je     0x14002c18d
   14002c0b3:	shr    rdi,1
   14002c0b6:	cmp    DWORD PTR [rbp+0x8],ebx
   14002c0b9:	je     0x14002c085
   14002c0bb:	mov    rdx,QWORD PTR [r13+rcx*1+0x40]
   14002c0c0:	xor    r8d,r8d
   14002c0c3:	mov    ecx,r12d
   14002c0c6:	call   0x14002d254
   14002c0cb:	lea    rbp,[rip+0xfffffffffffd3f2e]        # 0x140000000
   14002c0d2:	mov    rcx,QWORD PTR [rbp+r15*8+0x4d320]
   14002c0da:	mov    rbx,rax
   14002c0dd:	cmp    rax,QWORD PTR [r13+rcx*1+0x40]
   14002c0e2:	jne    0x14002c03e
   14002c0e8:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14002c0ed:	and    QWORD PTR [rsp+0x20],0x0
   14002c0f3:	lea    r9,[rsp+0x30]
   14002c0f8:	lea    rdx,[rsp+0x40]
   14002c0fd:	mov    r8d,0x1000
   14002c103:	call   QWORD PTR [rip+0xe0c7]        # 0x14003a1d0
   14002c109:	test   eax,eax
   14002c10b:	je     0x14002c03e
   14002c111:	xor    r8d,r8d
   14002c114:	mov    rdx,rsi
   14002c117:	mov    ecx,r12d
   14002c11a:	call   0x14002d254
   14002c11f:	test   rax,rax
   14002c122:	js     0x14002c03e
   14002c128:	mov    eax,DWORD PTR [rsp+0x30]
   14002c12c:	cmp    rdi,rax
   14002c12f:	ja     0x14002c03e
   14002c135:	lea    rcx,[rsp+0x40]
   14002c13a:	test   rdi,rdi
   14002c13d:	je     0x14002c17c
   14002c13f:	lea    rdx,[rsp+rax*1+0x40]
   14002c144:	dec    rdi
   14002c147:	cmp    rcx,rdx
   14002c14a:	jae    0x14002c17c
   14002c14c:	cmp    BYTE PTR [rcx],0xd
   14002c14f:	jne    0x14002c165
   14002c151:	lea    rax,[rdx-0x1]
   14002c155:	cmp    rcx,rax
   14002c158:	jae    0x14002c174
   14002c15a:	cmp    BYTE PTR [rcx+0x1],0xa
   14002c15e:	jne    0x14002c174
   14002c160:	inc    rcx
   14002c163:	jmp    0x14002c174
   14002c165:	movzx  eax,BYTE PTR [rcx]
   14002c168:	movsx  rax,BYTE PTR [rax+rbp*1+0x4a660]
   14002c171:	add    rcx,rax
   14002c174:	inc    rcx
   14002c177:	test   rdi,rdi
   14002c17a:	jne    0x14002c144
   14002c17c:	lea    rax,[rsp+0x40]
   14002c181:	sub    rcx,rax
   14002c184:	lea    rax,[rbx+rcx*1]
   14002c188:	jmp    0x14002c299
   14002c18d:	test   BYTE PTR [r13+rcx*1+0x8],0x80
   14002c193:	je     0x14002c1ac
   14002c195:	mov    rax,QWORD PTR [rbp+0x10]
   14002c199:	jmp    0x14002c1a6
   14002c19b:	cmp    BYTE PTR [rax],0xa
   14002c19e:	jne    0x14002c1a3
   14002c1a0:	inc    rdi
   14002c1a3:	inc    rax
   14002c1a6:	cmp    rax,QWORD PTR [rbp+0x0]
   14002c1aa:	jb     0x14002c19b
   14002c1ac:	cmp    rsi,rbx
   14002c1af:	jne    0x14002c1cd
   14002c1b1:	mov    rax,rdi
   14002c1b4:	jmp    0x14002c299
   14002c1b9:	test   dl,dl
   14002c1bb:	js     0x14002c1ac
   14002c1bd:	call   0x140020aa4
   14002c1c2:	mov    DWORD PTR [rax],0x16
   14002c1c8:	jmp    0x14002c03e
   14002c1cd:	test   dl,0x1
   14002c1d0:	je     0x14002c28c
   14002c1d6:	cmp    DWORD PTR [rbp+0x8],ebx
   14002c1d9:	jne    0x14002c1e3
   14002c1db:	mov    rdi,rbx
   14002c1de:	jmp    0x14002c28c
   14002c1e3:	movsxd rbx,DWORD PTR [rbp+0x8]
   14002c1e7:	sub    rbx,QWORD PTR [rbp+0x10]
   14002c1eb:	add    rbx,QWORD PTR [rbp+0x0]
   14002c1ef:	test   BYTE PTR [r13+rcx*1+0x8],0x80
   14002c1f5:	je     0x14002c280
   14002c1fb:	xor    edx,edx
   14002c1fd:	mov    ecx,r12d
   14002c200:	lea    r8d,[rdx+0x2]
   14002c204:	call   0x14002d254
   14002c209:	cmp    rax,rsi
   14002c20c:	jne    0x14002c231
   14002c20e:	mov    rax,QWORD PTR [rbp+0x10]
   14002c212:	lea    rcx,[rax+rbx*1]
   14002c216:	jmp    0x14002c223
   14002c218:	cmp    BYTE PTR [rax],0xa
   14002c21b:	jne    0x14002c220
   14002c21d:	inc    rbx
   14002c220:	inc    rax
   14002c223:	cmp    rax,rcx
   14002c226:	jb     0x14002c218
   14002c228:	bt     DWORD PTR [rbp+0x18],0xd
   14002c22d:	jae    0x14002c280
   14002c22f:	jmp    0x14002c27d
   14002c231:	xor    r8d,r8d
   14002c234:	mov    rdx,rsi
   14002c237:	mov    ecx,r12d
   14002c23a:	call   0x14002d254
   14002c23f:	test   rax,rax
   14002c242:	js     0x14002c03e
   14002c248:	mov    eax,0x200
   14002c24d:	cmp    rbx,rax
   14002c250:	ja     0x14002c262
   14002c252:	test   BYTE PTR [rbp+0x18],0x8
   14002c256:	je     0x14002c262
   14002c258:	bt     DWORD PTR [rbp+0x18],0xa
   14002c25d:	mov    rbx,rax
   14002c260:	jae    0x14002c266
   14002c262:	movsxd rbx,DWORD PTR [rbp+0x24]
   14002c266:	lea    rbp,[rip+0xfffffffffffd3d93]        # 0x140000000
   14002c26d:	mov    rax,QWORD PTR [rbp+r15*8+0x4d320]
   14002c275:	test   BYTE PTR [r13+rax*1+0x8],0x4
   14002c27b:	je     0x14002c280
   14002c27d:	inc    rbx
   14002c280:	cmp    r14b,0x1
   14002c284:	jne    0x14002c289
   14002c286:	shr    rbx,1
   14002c289:	sub    rsi,rbx
   14002c28c:	cmp    r14b,0x1
   14002c290:	jne    0x14002c295
   14002c292:	shr    rdi,1
   14002c295:	lea    rax,[rdi+rsi*1]
   14002c299:	mov    rcx,QWORD PTR [rsp+0x1040]
   14002c2a1:	xor    rcx,rsp
   14002c2a4:	call   0x14001c500
   14002c2a9:	lea    r11,[rsp+0x1050]
   14002c2b1:	mov    rbx,QWORD PTR [r11+0x38]
   14002c2b5:	mov    rbp,QWORD PTR [r11+0x40]
   14002c2b9:	mov    rsi,QWORD PTR [r11+0x48]
   14002c2bd:	mov    rsp,r11
   14002c2c0:	pop    r15
   14002c2c2:	pop    r14
   14002c2c4:	pop    r13
   14002c2c6:	pop    r12
   14002c2c8:	pop    rdi
   14002c2c9:	ret    
   14002c2ca:	int3   
   14002c2cb:	int3   
   14002c2cc:	mov    QWORD PTR [rsp+0x10],rbx
   14002c2d1:	mov    QWORD PTR [rsp+0x8],rcx
   14002c2d6:	push   rdi
   14002c2d7:	sub    rsp,0x20
   14002c2db:	mov    rbx,rcx
   14002c2de:	call   0x140023b58
   14002c2e3:	nop
   14002c2e4:	mov    rcx,rbx
   14002c2e7:	call   0x14002bfdc
   14002c2ec:	mov    rdi,rax
   14002c2ef:	mov    rcx,rbx
   14002c2f2:	call   0x140023be8
   14002c2f7:	mov    rax,rdi
   14002c2fa:	mov    rbx,QWORD PTR [rsp+0x38]
   14002c2ff:	add    rsp,0x20
   14002c303:	pop    rdi
   14002c304:	ret    
   14002c305:	int3   
   14002c306:	int3   
   14002c307:	int3   
   14002c308:	mov    QWORD PTR [rsp+0x8],rbx
   14002c30d:	mov    QWORD PTR [rsp+0x10],rsi
   14002c312:	push   rdi
   14002c313:	sub    rsp,0x20
   14002c317:	movsxd rbx,ecx
   14002c31a:	mov    edi,r8d
   14002c31d:	mov    esi,edx
   14002c31f:	mov    ecx,ebx
   14002c321:	call   0x14002fc38
   14002c326:	cmp    rax,0xffffffffffffffff
   14002c32a:	jne    0x14002c33c
   14002c32c:	call   0x140020aa4
   14002c331:	mov    DWORD PTR [rax],0x9
   14002c337:	or     eax,0xffffffff
   14002c33a:	jmp    0x14002c38e
   14002c33c:	mov    r9d,edi
   14002c33f:	xor    r8d,r8d
   14002c342:	mov    edx,esi
   14002c344:	mov    rcx,rax
   14002c347:	call   QWORD PTR [rip+0xde7b]        # 0x14003a1c8
   14002c34d:	mov    edi,eax
   14002c34f:	cmp    eax,0xffffffff
   14002c352:	jne    0x14002c35c
   14002c354:	call   QWORD PTR [rip+0xdd6e]        # 0x14003a0c8
   14002c35a:	jmp    0x14002c35e
   14002c35c:	xor    eax,eax
   14002c35e:	test   eax,eax
   14002c360:	je     0x14002c36b
   14002c362:	mov    ecx,eax
   14002c364:	call   0x140020ae4
   14002c369:	jmp    0x14002c337
   14002c36b:	mov    rcx,rbx
   14002c36e:	mov    rax,rbx
   14002c371:	lea    rdx,[rip+0x20fa8]        # 0x14004d320
   14002c378:	sar    rax,0x5
   14002c37c:	and    ecx,0x1f
   14002c37f:	mov    rax,QWORD PTR [rdx+rax*8]
   14002c383:	imul   rcx,rcx,0x58
   14002c387:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   14002c38c:	mov    eax,edi
   14002c38e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c393:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c398:	add    rsp,0x20
   14002c39c:	pop    rdi
   14002c39d:	ret    
   14002c39e:	int3   
   14002c39f:	int3   
   14002c3a0:	mov    QWORD PTR [rsp+0x10],rbx
   14002c3a5:	mov    QWORD PTR [rsp+0x18],rsi
   14002c3aa:	mov    DWORD PTR [rsp+0x8],ecx
   14002c3ae:	push   rdi
   14002c3af:	push   r12
   14002c3b1:	push   r13
   14002c3b3:	push   r14
   14002c3b5:	push   r15
   14002c3b7:	sub    rsp,0x30
   14002c3bb:	mov    r12d,r8d
   14002c3be:	mov    r13d,edx
   14002c3c1:	movsxd rbx,ecx
   14002c3c4:	cmp    ebx,0xfffffffe
   14002c3c7:	jne    0x14002c3e5
   14002c3c9:	call   0x140020ac4
   14002c3ce:	xor    edi,edi
   14002c3d0:	mov    DWORD PTR [rax],edi
   14002c3d2:	call   0x140020aa4
   14002c3d7:	mov    DWORD PTR [rax],0x9
   14002c3dd:	or     eax,0xffffffff
   14002c3e0:	jmp    0x14002c4b9
   14002c3e5:	xor    edi,edi
   14002c3e7:	cmp    ebx,edi
   14002c3e9:	jl     0x14002c490
   14002c3ef:	cmp    ebx,DWORD PTR [rip+0x20f13]        # 0x14004d308
   14002c3f5:	jae    0x14002c490
   14002c3fb:	mov    rsi,rbx
   14002c3fe:	mov    r14,rbx
   14002c401:	sar    r14,0x5
   14002c405:	lea    r15,[rip+0x20f14]        # 0x14004d320
   14002c40c:	and    esi,0x1f
   14002c40f:	imul   rsi,rsi,0x58
   14002c413:	mov    rax,QWORD PTR [r15+r14*8]
   14002c417:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14002c41c:	and    ecx,0x1
   14002c41f:	jne    0x14002c44c
   14002c421:	call   0x140020ac4
   14002c426:	mov    DWORD PTR [rax],edi
   14002c428:	call   0x140020aa4
   14002c42d:	mov    DWORD PTR [rax],0x9
   14002c433:	mov    QWORD PTR [rsp+0x20],rdi
   14002c438:	xor    r9d,r9d
   14002c43b:	xor    r8d,r8d
   14002c43e:	xor    edx,edx
   14002c440:	xor    ecx,ecx
   14002c442:	call   0x14001ccf0
   14002c447:	or     eax,0xffffffff
   14002c44a:	jmp    0x14002c4b9
   14002c44c:	mov    ecx,ebx
   14002c44e:	call   0x14002fcbc
   14002c453:	nop
   14002c454:	mov    rax,QWORD PTR [r15+r14*8]
   14002c458:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   14002c45d:	je     0x14002c470
   14002c45f:	mov    r8d,r12d
   14002c462:	mov    edx,r13d
   14002c465:	mov    ecx,ebx
   14002c467:	call   0x14002c308
   14002c46c:	mov    edi,eax
   14002c46e:	jmp    0x14002c485
   14002c470:	call   0x140020aa4
   14002c475:	mov    DWORD PTR [rax],0x9
   14002c47b:	call   0x140020ac4
   14002c480:	mov    DWORD PTR [rax],edi
   14002c482:	or     edi,0xffffffff
   14002c485:	mov    ecx,ebx
   14002c487:	call   0x14002fd64
   14002c48c:	mov    eax,edi
   14002c48e:	jmp    0x14002c4b9
   14002c490:	call   0x140020ac4
   14002c495:	mov    DWORD PTR [rax],edi
   14002c497:	call   0x140020aa4
   14002c49c:	mov    DWORD PTR [rax],0x9
   14002c4a2:	mov    QWORD PTR [rsp+0x20],rdi
   14002c4a7:	xor    r9d,r9d
   14002c4aa:	xor    r8d,r8d
   14002c4ad:	xor    edx,edx
   14002c4af:	xor    ecx,ecx
   14002c4b1:	call   0x14001ccf0
   14002c4b6:	or     eax,0xffffffff
   14002c4b9:	mov    rbx,QWORD PTR [rsp+0x68]
   14002c4be:	mov    rsi,QWORD PTR [rsp+0x70]
   14002c4c3:	add    rsp,0x30
   14002c4c7:	pop    r15
   14002c4c9:	pop    r14
   14002c4cb:	pop    r13
   14002c4cd:	pop    r12
   14002c4cf:	pop    rdi
   14002c4d0:	ret    
   14002c4d1:	int3   
   14002c4d2:	int3   
   14002c4d3:	int3   
   14002c4d4:	mov    rax,rsp
   14002c4d7:	mov    QWORD PTR [rax+0x8],rbx
   14002c4db:	mov    QWORD PTR [rax+0x10],rbp
   14002c4df:	mov    QWORD PTR [rax+0x18],rsi
   14002c4e3:	mov    QWORD PTR [rax+0x20],rdi
   14002c4e7:	push   r12
   14002c4e9:	push   r13
   14002c4eb:	push   r14
   14002c4ed:	sub    rsp,0x30
   14002c4f1:	mov    rbx,rcx
   14002c4f4:	test   rcx,rcx
   14002c4f7:	jne    0x14002c520
   14002c4f9:	call   0x140020aa4
   14002c4fe:	and    QWORD PTR [rsp+0x20],rbx
   14002c503:	xor    r9d,r9d
   14002c506:	xor    r8d,r8d
   14002c509:	xor    edx,edx
   14002c50b:	xor    ecx,ecx
   14002c50d:	mov    DWORD PTR [rax],0x16
   14002c513:	call   0x14001ccf0
   14002c518:	or     eax,0xffffffff
   14002c51b:	jmp    0x14002c678
   14002c520:	call   0x14002b1bc
   14002c525:	cmp    DWORD PTR [rbx+0x8],0x0
   14002c529:	movsxd r12,eax
   14002c52c:	jge    0x14002c532
   14002c52e:	and    DWORD PTR [rbx+0x8],0x0
   14002c532:	xor    edx,edx
   14002c534:	mov    ecx,r12d
   14002c537:	lea    r8d,[rdx+0x1]
   14002c53b:	call   0x14002c3a0
   14002c540:	mov    esi,eax
   14002c542:	test   eax,eax
   14002c544:	js     0x14002c518
   14002c546:	mov    edx,DWORD PTR [rbx+0x18]
   14002c549:	test   edx,0x108
   14002c54f:	jne    0x14002c55b
   14002c551:	sub    esi,DWORD PTR [rbx+0x8]
   14002c554:	mov    eax,esi
   14002c556:	jmp    0x14002c678
   14002c55b:	mov    edi,DWORD PTR [rbx]
   14002c55d:	lea    r8,[rip+0x20dbc]        # 0x14004d320
   14002c564:	mov    ebp,edi
   14002c566:	sub    ebp,DWORD PTR [rbx+0x10]
   14002c569:	test   dl,0x3
   14002c56c:	je     0x14002c5aa
   14002c56e:	mov    rcx,r12
   14002c571:	mov    rax,r12
   14002c574:	sar    rax,0x5
   14002c578:	and    ecx,0x1f
   14002c57b:	mov    rax,QWORD PTR [r8+rax*8]
   14002c57f:	imul   rcx,rcx,0x58
   14002c583:	test   BYTE PTR [rax+rcx*1+0x8],0x80
   14002c588:	je     0x14002c59f
   14002c58a:	mov    rax,QWORD PTR [rbx+0x10]
   14002c58e:	jmp    0x14002c59a
   14002c590:	cmp    BYTE PTR [rax],0xa
   14002c593:	jne    0x14002c597
   14002c595:	inc    ebp
   14002c597:	inc    rax
   14002c59a:	cmp    rax,QWORD PTR [rbx]
   14002c59d:	jb     0x14002c590
   14002c59f:	test   esi,esi
   14002c5a1:	jne    0x14002c5be
   14002c5a3:	mov    eax,ebp
   14002c5a5:	jmp    0x14002c678
   14002c5aa:	test   dl,dl
   14002c5ac:	js     0x14002c59f
   14002c5ae:	call   0x140020aa4
   14002c5b3:	mov    DWORD PTR [rax],0x16
   14002c5b9:	jmp    0x14002c518
   14002c5be:	test   dl,0x1
   14002c5c1:	je     0x14002c674
   14002c5c7:	cmp    DWORD PTR [rbx+0x8],0x0
   14002c5cb:	jne    0x14002c5d4
   14002c5cd:	xor    ebp,ebp
   14002c5cf:	jmp    0x14002c674
   14002c5d4:	sub    edi,DWORD PTR [rbx+0x10]
   14002c5d7:	mov    r13,r12
   14002c5da:	mov    r14,r12
   14002c5dd:	add    edi,DWORD PTR [rbx+0x8]
   14002c5e0:	sar    r14,0x5
   14002c5e4:	and    r13d,0x1f
   14002c5e8:	mov    rax,QWORD PTR [r8+r14*8]
   14002c5ec:	imul   r13,r13,0x58
   14002c5f0:	test   BYTE PTR [r13+rax*1+0x8],0x80
   14002c5f6:	je     0x14002c672
   14002c5f8:	xor    edx,edx
   14002c5fa:	mov    ecx,r12d
   14002c5fd:	lea    r8d,[rdx+0x2]
   14002c601:	call   0x14002c3a0
   14002c606:	cmp    eax,esi
   14002c608:	jne    0x14002c62d
   14002c60a:	mov    rax,QWORD PTR [rbx+0x10]
   14002c60e:	mov    ecx,edi
   14002c610:	add    rcx,rax
   14002c613:	jmp    0x14002c61f
   14002c615:	cmp    BYTE PTR [rax],0xa
   14002c618:	jne    0x14002c61c
   14002c61a:	inc    edi
   14002c61c:	inc    rax
   14002c61f:	cmp    rax,rcx
   14002c622:	jb     0x14002c615
   14002c624:	bt     DWORD PTR [rbx+0x18],0xd
   14002c629:	jae    0x14002c672
   14002c62b:	jmp    0x14002c670
   14002c62d:	xor    r8d,r8d
   14002c630:	mov    edx,esi
   14002c632:	mov    ecx,r12d
   14002c635:	call   0x14002c3a0
   14002c63a:	test   eax,eax
   14002c63c:	js     0x14002c518
   14002c642:	mov    eax,0x200
   14002c647:	cmp    edi,eax
   14002c649:	ja     0x14002c65a
   14002c64b:	test   BYTE PTR [rbx+0x18],0x8
   14002c64f:	je     0x14002c65a
   14002c651:	bt     DWORD PTR [rbx+0x18],0xa
   14002c656:	mov    edi,eax
   14002c658:	jae    0x14002c65d
   14002c65a:	mov    edi,DWORD PTR [rbx+0x24]
   14002c65d:	lea    rax,[rip+0x20cbc]        # 0x14004d320
   14002c664:	mov    rax,QWORD PTR [rax+r14*8]
   14002c668:	test   BYTE PTR [r13+rax*1+0x8],0x4
   14002c66e:	je     0x14002c672
   14002c670:	inc    edi
   14002c672:	sub    esi,edi
   14002c674:	lea    eax,[rbp+rsi*1+0x0]
   14002c678:	mov    rbx,QWORD PTR [rsp+0x50]
   14002c67d:	mov    rbp,QWORD PTR [rsp+0x58]
   14002c682:	mov    rsi,QWORD PTR [rsp+0x60]
   14002c687:	mov    rdi,QWORD PTR [rsp+0x68]
   14002c68c:	add    rsp,0x30
   14002c690:	pop    r14
   14002c692:	pop    r13
   14002c694:	pop    r12
   14002c696:	ret    
   14002c697:	int3   
   14002c698:	mov    QWORD PTR [rsp+0x8],rbx
   14002c69d:	mov    QWORD PTR [rsp+0x10],rbp
   14002c6a2:	mov    QWORD PTR [rsp+0x18],rsi
   14002c6a7:	push   rdi
   14002c6a8:	sub    rsp,0x20
   14002c6ac:	mov    eax,DWORD PTR [rcx+0x18]
   14002c6af:	mov    edi,r8d
   14002c6b2:	mov    rbp,rdx
   14002c6b5:	mov    rbx,rcx
   14002c6b8:	test   al,0x83
   14002c6ba:	je     0x14002c740
   14002c6c0:	xor    esi,esi
   14002c6c2:	cmp    r8d,esi
   14002c6c5:	je     0x14002c6d3
   14002c6c7:	cmp    r8d,0x1
   14002c6cb:	je     0x14002c6d3
   14002c6cd:	cmp    r8d,0x2
   14002c6d1:	jne    0x14002c740
   14002c6d3:	and    eax,0xffffffef
   14002c6d6:	mov    DWORD PTR [rcx+0x18],eax
   14002c6d9:	cmp    r8d,0x1
   14002c6dd:	jne    0x14002c6e9
   14002c6df:	call   0x14002bfdc
   14002c6e4:	mov    edi,esi
   14002c6e6:	add    rbp,rax
   14002c6e9:	mov    rcx,rbx
   14002c6ec:	call   0x140022e48
   14002c6f1:	mov    r11d,DWORD PTR [rbx+0x18]
   14002c6f5:	test   r11b,r11b
   14002c6f8:	jns    0x14002c704
   14002c6fa:	and    r11d,0xfffffffc
   14002c6fe:	mov    DWORD PTR [rbx+0x18],r11d
   14002c702:	jmp    0x14002c71e
   14002c704:	test   r11b,0x1
   14002c708:	je     0x14002c71e
   14002c70a:	test   r11b,0x8
   14002c70e:	je     0x14002c71e
   14002c710:	bt     r11d,0xa
   14002c715:	jb     0x14002c71e
   14002c717:	mov    DWORD PTR [rbx+0x24],0x200
   14002c71e:	mov    rcx,rbx
   14002c721:	call   0x14002b1bc
   14002c726:	mov    r8d,edi
   14002c729:	mov    rdx,rbp
   14002c72c:	mov    ecx,eax
   14002c72e:	call   0x14002d254
   14002c733:	cmp    rax,0xffffffffffffffff
   14002c737:	setne  sil
   14002c73b:	lea    eax,[rsi-0x1]
   14002c73e:	jmp    0x14002c74e
   14002c740:	call   0x140020aa4
   14002c745:	mov    DWORD PTR [rax],0x16
   14002c74b:	or     eax,0xffffffff
   14002c74e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c753:	mov    rbp,QWORD PTR [rsp+0x38]
   14002c758:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c75d:	add    rsp,0x20
   14002c761:	pop    rdi
   14002c762:	ret    
   14002c763:	int3   
   14002c764:	mov    QWORD PTR [rsp+0x10],rbx
   14002c769:	mov    QWORD PTR [rsp+0x18],rsi
   14002c76e:	mov    QWORD PTR [rsp+0x8],rcx
   14002c773:	push   rdi
   14002c774:	sub    rsp,0x20
   14002c778:	mov    edi,r8d
   14002c77b:	mov    rsi,rdx
   14002c77e:	mov    rbx,rcx
   14002c781:	call   0x140023b58
   14002c786:	nop
   14002c787:	mov    r8d,edi
   14002c78a:	mov    rdx,rsi
   14002c78d:	mov    rcx,rbx
   14002c790:	call   0x14002c698
   14002c795:	mov    edi,eax
   14002c797:	mov    rcx,rbx
   14002c79a:	call   0x140023be8
   14002c79f:	mov    eax,edi
   14002c7a1:	mov    rbx,QWORD PTR [rsp+0x38]
   14002c7a6:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c7ab:	add    rsp,0x20
   14002c7af:	pop    rdi
   14002c7b0:	ret    
   14002c7b1:	int3   
   14002c7b2:	int3   
   14002c7b3:	int3   
   14002c7b4:	mov    QWORD PTR [rsp+0x8],rbx
   14002c7b9:	push   rdi
   14002c7ba:	sub    rsp,0x20
   14002c7be:	movsxd rdi,ecx
   14002c7c1:	mov    ecx,edi
   14002c7c3:	call   0x14002fc38
   14002c7c8:	cmp    rax,0xffffffffffffffff
   14002c7cc:	je     0x14002c827
   14002c7ce:	mov    rax,QWORD PTR [rip+0x20b4b]        # 0x14004d320
   14002c7d5:	mov    ecx,0x2
   14002c7da:	cmp    edi,0x1
   14002c7dd:	jne    0x14002c7e8
   14002c7df:	test   BYTE PTR [rax+0xb8],dil
   14002c7e6:	jne    0x14002c7f2
   14002c7e8:	cmp    edi,ecx
   14002c7ea:	jne    0x14002c809
   14002c7ec:	test   BYTE PTR [rax+0x60],0x1
   14002c7f0:	je     0x14002c809
   14002c7f2:	call   0x14002fc38
   14002c7f7:	mov    ecx,0x1
   14002c7fc:	mov    rbx,rax
   14002c7ff:	call   0x14002fc38
   14002c804:	cmp    rax,rbx
   14002c807:	je     0x14002c827
   14002c809:	mov    ecx,edi
   14002c80b:	call   0x14002fc38
   14002c810:	mov    rcx,rax
   14002c813:	call   QWORD PTR [rip+0xd857]        # 0x14003a070
   14002c819:	test   eax,eax
   14002c81b:	jne    0x14002c827
   14002c81d:	call   QWORD PTR [rip+0xd8a5]        # 0x14003a0c8
   14002c823:	mov    ebx,eax
   14002c825:	jmp    0x14002c829
   14002c827:	xor    ebx,ebx
   14002c829:	mov    ecx,edi
   14002c82b:	call   0x14002fb8c
   14002c830:	mov    r11,rdi
   14002c833:	mov    rcx,rdi
   14002c836:	sar    rcx,0x5
   14002c83a:	and    r11d,0x1f
   14002c83e:	lea    rdx,[rip+0x20adb]        # 0x14004d320
   14002c845:	mov    rcx,QWORD PTR [rdx+rcx*8]
   14002c849:	imul   r11,r11,0x58
   14002c84d:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   14002c853:	test   ebx,ebx
   14002c855:	je     0x14002c863
   14002c857:	mov    ecx,ebx
   14002c859:	call   0x140020ae4
   14002c85e:	or     eax,0xffffffff
   14002c861:	jmp    0x14002c865
   14002c863:	xor    eax,eax
   14002c865:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c86a:	add    rsp,0x20
   14002c86e:	pop    rdi
   14002c86f:	ret    
   14002c870:	mov    QWORD PTR [rsp+0x18],rbx
   14002c875:	mov    QWORD PTR [rsp+0x20],rsi
   14002c87a:	mov    DWORD PTR [rsp+0x8],ecx
   14002c87e:	push   rdi
   14002c87f:	push   r12
   14002c881:	push   r13
   14002c883:	sub    rsp,0x30
   14002c887:	movsxd rbx,ecx
   14002c88a:	cmp    ebx,0xfffffffe
   14002c88d:	jne    0x14002c8ab
   14002c88f:	call   0x140020ac4
   14002c894:	xor    edi,edi
   14002c896:	mov    DWORD PTR [rax],edi
   14002c898:	call   0x140020aa4
   14002c89d:	mov    DWORD PTR [rax],0x9
   14002c8a3:	or     eax,0xffffffff
   14002c8a6:	jmp    0x14002c974
   14002c8ab:	xor    edi,edi
   14002c8ad:	cmp    ebx,edi
   14002c8af:	jl     0x14002c94b
   14002c8b5:	cmp    ebx,DWORD PTR [rip+0x20a4d]        # 0x14004d308
   14002c8bb:	jae    0x14002c94b
   14002c8c1:	mov    rsi,rbx
   14002c8c4:	mov    r12,rbx
   14002c8c7:	sar    r12,0x5
   14002c8cb:	lea    r13,[rip+0x20a4e]        # 0x14004d320
   14002c8d2:	and    esi,0x1f
   14002c8d5:	imul   rsi,rsi,0x58
   14002c8d9:	mov    rax,QWORD PTR [r13+r12*8+0x0]
   14002c8de:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14002c8e3:	and    ecx,0x1
   14002c8e6:	jne    0x14002c913
   14002c8e8:	call   0x140020ac4
   14002c8ed:	mov    DWORD PTR [rax],edi
   14002c8ef:	call   0x140020aa4
   14002c8f4:	mov    DWORD PTR [rax],0x9
   14002c8fa:	mov    QWORD PTR [rsp+0x20],rdi
   14002c8ff:	xor    r9d,r9d
   14002c902:	xor    r8d,r8d
   14002c905:	xor    edx,edx
   14002c907:	xor    ecx,ecx
   14002c909:	call   0x14001ccf0
   14002c90e:	or     eax,0xffffffff
   14002c911:	jmp    0x14002c974
   14002c913:	mov    ecx,ebx
   14002c915:	call   0x14002fcbc
   14002c91a:	nop
   14002c91b:	mov    rax,QWORD PTR [r13+r12*8+0x0]
   14002c920:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   14002c925:	je     0x14002c932
   14002c927:	mov    ecx,ebx
   14002c929:	call   0x14002c7b4
   14002c92e:	mov    edi,eax
   14002c930:	jmp    0x14002c940
   14002c932:	call   0x140020aa4
   14002c937:	mov    DWORD PTR [rax],0x9
   14002c93d:	or     edi,0xffffffff
   14002c940:	mov    ecx,ebx
   14002c942:	call   0x14002fd64
   14002c947:	mov    eax,edi
   14002c949:	jmp    0x14002c974
   14002c94b:	call   0x140020ac4
   14002c950:	mov    DWORD PTR [rax],edi
   14002c952:	call   0x140020aa4
   14002c957:	mov    DWORD PTR [rax],0x9
   14002c95d:	mov    QWORD PTR [rsp+0x20],rdi
   14002c962:	xor    r9d,r9d
   14002c965:	xor    r8d,r8d
   14002c968:	xor    edx,edx
   14002c96a:	xor    ecx,ecx
   14002c96c:	call   0x14001ccf0
   14002c971:	or     eax,0xffffffff
   14002c974:	mov    rbx,QWORD PTR [rsp+0x60]
   14002c979:	mov    rsi,QWORD PTR [rsp+0x68]
   14002c97e:	add    rsp,0x30
   14002c982:	pop    r13
   14002c984:	pop    r12
   14002c986:	pop    rdi
   14002c987:	ret    
   14002c988:	mov    QWORD PTR [rsp+0x8],rbx
   14002c98d:	mov    QWORD PTR [rsp+0x10],rsi
   14002c992:	push   r12
   14002c994:	sub    rsp,0x30
   14002c998:	xor    esi,esi
   14002c99a:	lea    ecx,[rsi+0x1]
   14002c99d:	call   0x140028880
   14002c9a2:	nop
   14002c9a3:	lea    ebx,[rsi+0x3]
   14002c9a6:	mov    DWORD PTR [rsp+0x20],ebx
   14002c9aa:	cmp    ebx,DWORD PTR [rip+0x21bb0]        # 0x14004e560
   14002c9b0:	jge    0x14002ca1b
   14002c9b2:	movsxd r12,ebx
   14002c9b5:	mov    rax,QWORD PTR [rip+0x20b94]        # 0x14004d550
   14002c9bc:	cmp    QWORD PTR [rax+r12*8],0x0
   14002c9c1:	je     0x14002ca13
   14002c9c3:	mov    rcx,QWORD PTR [rax+r12*8]
   14002c9c7:	test   BYTE PTR [rcx+0x18],0x83
   14002c9cb:	je     0x14002c9dd
   14002c9cd:	call   0x1400239cc
   14002c9d2:	cmp    eax,0xffffffff
   14002c9d5:	je     0x14002c9dd
   14002c9d7:	inc    esi
   14002c9d9:	mov    DWORD PTR [rsp+0x24],esi
   14002c9dd:	cmp    ebx,0x14
   14002c9e0:	jl     0x14002ca13
   14002c9e2:	mov    rax,QWORD PTR [rip+0x20b67]        # 0x14004d550
   14002c9e9:	mov    rcx,QWORD PTR [rax+r12*8]
   14002c9ed:	add    rcx,0x30
   14002c9f1:	call   QWORD PTR [rip+0xd701]        # 0x14003a0f8
   14002c9f7:	mov    rcx,QWORD PTR [rip+0x20b52]        # 0x14004d550
   14002c9fe:	mov    rcx,QWORD PTR [rcx+r12*8]
   14002ca02:	call   0x14001ca48
   14002ca07:	mov    r11,QWORD PTR [rip+0x20b42]        # 0x14004d550
   14002ca0e:	and    QWORD PTR [r11+r12*8],0x0
   14002ca13:	inc    ebx
   14002ca15:	mov    DWORD PTR [rsp+0x20],ebx
   14002ca19:	jmp    0x14002c9aa
   14002ca1b:	mov    ecx,0x1
   14002ca20:	call   0x140028780
   14002ca25:	mov    eax,esi
   14002ca27:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ca2c:	mov    rsi,QWORD PTR [rsp+0x48]
   14002ca31:	add    rsp,0x30
   14002ca35:	pop    r12
   14002ca37:	ret    
   14002ca38:	mov    QWORD PTR [rip+0x1ff39],rcx        # 0x14004c978
   14002ca3f:	ret    
   14002ca40:	mov    QWORD PTR [rip+0x1ff39],rcx        # 0x14004c980
   14002ca47:	ret    
   14002ca48:	sub    rsp,0x38
   14002ca4c:	call   QWORD PTR [rip+0xd766]        # 0x14003a1b8
   14002ca52:	mov    DWORD PTR [rsp+0x20],eax
   14002ca56:	jmp    0x14002ca70
   14002ca58:	cmp    eax,0xc0000017
   14002ca5d:	jne    0x14002ca6a
   14002ca5f:	mov    ecx,0x8
   14002ca64:	call   QWORD PTR [rip+0xd886]        # 0x14003a2f0
   14002ca6a:	xor    eax,eax
   14002ca6c:	mov    DWORD PTR [rsp+0x20],eax
   14002ca70:	add    rsp,0x38
   14002ca74:	ret    
   14002ca75:	int3   
   14002ca76:	int3   
   14002ca77:	int3   
   14002ca78:	mov    WORD PTR [rsp+0x8],cx
   14002ca7d:	push   rbx
   14002ca7e:	sub    rsp,0x60
   14002ca82:	mov    eax,0xffff
   14002ca87:	movzx  ebx,dx
   14002ca8a:	cmp    cx,ax
   14002ca8d:	jne    0x14002ca99
   14002ca8f:	xor    ecx,ecx
   14002ca91:	mov    ax,cx
   14002ca94:	jmp    0x14002cb24
   14002ca99:	mov    eax,0x100
   14002ca9e:	cmp    cx,ax
   14002caa1:	jae    0x14002cab6
   14002caa3:	mov    rax,QWORD PTR [rip+0x1c83e]        # 0x1400492e8
   14002caaa:	movzx  ecx,cx
   14002caad:	mov    ax,WORD PTR [rax+rcx*2]
   14002cab1:	and    ax,bx
   14002cab4:	jmp    0x14002cb24
   14002cab6:	lea    rcx,[rsp+0x40]
   14002cabb:	mov    rdx,r8
   14002cabe:	call   0x14001cf30
   14002cac3:	mov    r11,QWORD PTR [rsp+0x40]
   14002cac8:	mov    edx,0x1
   14002cacd:	mov    eax,DWORD PTR [r11+0x14]
   14002cad1:	lea    r8,[rsp+0x70]
   14002cad6:	lea    rcx,[rsp+0x40]
   14002cadb:	mov    DWORD PTR [rsp+0x30],eax
   14002cadf:	mov    eax,DWORD PTR [r11+0x4]
   14002cae3:	mov    r9d,edx
   14002cae6:	mov    DWORD PTR [rsp+0x28],eax
   14002caea:	lea    rax,[rsp+0x78]
   14002caef:	mov    QWORD PTR [rsp+0x20],rax
   14002caf4:	call   0x140020df8
   14002caf9:	xor    ecx,ecx
   14002cafb:	cmp    eax,ecx
   14002cafd:	jne    0x14002cb08
   14002caff:	mov    eax,ecx
   14002cb01:	mov    WORD PTR [rsp+0x78],cx
   14002cb06:	jmp    0x14002cb0d
   14002cb08:	mov    ax,WORD PTR [rsp+0x78]
   14002cb0d:	cmp    BYTE PTR [rsp+0x58],cl
   14002cb11:	je     0x14002cb24
   14002cb13:	mov    rax,QWORD PTR [rsp+0x50]
   14002cb18:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002cb1f:	mov    ax,WORD PTR [rsp+0x78]
   14002cb24:	movzx  eax,ax
   14002cb27:	movzx  ecx,bx
   14002cb2a:	and    eax,ecx
   14002cb2c:	add    rsp,0x60
   14002cb30:	pop    rbx
   14002cb31:	ret    
   14002cb32:	int3   
   14002cb33:	int3   
   14002cb34:	mov    QWORD PTR [rsp+0x8],rbx
   14002cb39:	mov    QWORD PTR [rsp+0x10],rbp
   14002cb3e:	push   rsi
   14002cb3f:	push   rdi
   14002cb40:	push   r12
   14002cb42:	push   r13
   14002cb44:	push   r14
   14002cb46:	sub    rsp,0x40
   14002cb4a:	mov    ebp,r8d
   14002cb4d:	mov    r13,rdx
   14002cb50:	mov    r14,rcx
   14002cb53:	call   0x140023fb8
   14002cb58:	xor    ebx,ebx
   14002cb5a:	mov    rdi,rax
   14002cb5d:	cmp    QWORD PTR [rip+0x1fe24],rbx        # 0x14004c988
   14002cb64:	jne    0x14002cc3a
   14002cb6a:	lea    rcx,[rip+0x108ff]        # 0x14003d470
   14002cb71:	call   QWORD PTR [rip+0xd649]        # 0x14003a1c0
   14002cb77:	mov    rsi,rax
   14002cb7a:	test   rax,rax
   14002cb7d:	je     0x14002cd0f
   14002cb83:	lea    rdx,[rip+0x108d6]        # 0x14003d460
   14002cb8a:	mov    rcx,rax
   14002cb8d:	call   QWORD PTR [rip+0xd4e5]        # 0x14003a078
   14002cb93:	test   rax,rax
   14002cb96:	je     0x14002cd0f
   14002cb9c:	mov    rcx,rax
   14002cb9f:	call   0x140023fb0
   14002cba4:	lea    rdx,[rip+0x108a5]        # 0x14003d450
   14002cbab:	mov    rcx,rsi
   14002cbae:	mov    QWORD PTR [rip+0x1fdd3],rax        # 0x14004c988
   14002cbb5:	call   QWORD PTR [rip+0xd4bd]        # 0x14003a078
   14002cbbb:	mov    rcx,rax
   14002cbbe:	call   0x140023fb0
   14002cbc3:	lea    rdx,[rip+0x1086e]        # 0x14003d438
   14002cbca:	mov    rcx,rsi
   14002cbcd:	mov    QWORD PTR [rip+0x1fdbc],rax        # 0x14004c990
   14002cbd4:	call   QWORD PTR [rip+0xd49e]        # 0x14003a078
   14002cbda:	mov    rcx,rax
   14002cbdd:	call   0x140023fb0
   14002cbe2:	lea    rdx,[rip+0x1082f]        # 0x14003d418
   14002cbe9:	mov    rcx,rsi
   14002cbec:	mov    QWORD PTR [rip+0x1fda5],rax        # 0x14004c998
   14002cbf3:	call   QWORD PTR [rip+0xd47f]        # 0x14003a078
   14002cbf9:	mov    rcx,rax
   14002cbfc:	call   0x140023fb0
   14002cc01:	mov    r11,rax
   14002cc04:	mov    QWORD PTR [rip+0x1fd9d],rax        # 0x14004c9a8
   14002cc0b:	test   rax,rax
   14002cc0e:	je     0x14002cc31
   14002cc10:	lea    rdx,[rip+0x107e9]        # 0x14003d400
   14002cc17:	mov    rcx,rsi
   14002cc1a:	call   QWORD PTR [rip+0xd458]        # 0x14003a078
   14002cc20:	mov    rcx,rax
   14002cc23:	call   0x140023fb0
   14002cc28:	mov    QWORD PTR [rip+0x1fd71],rax        # 0x14004c9a0
   14002cc2f:	jmp    0x14002cc41
   14002cc31:	mov    rax,QWORD PTR [rip+0x1fd68]        # 0x14004c9a0
   14002cc38:	jmp    0x14002cc48
   14002cc3a:	mov    rax,QWORD PTR [rip+0x1fd5f]        # 0x14004c9a0
   14002cc41:	mov    r11,QWORD PTR [rip+0x1fd60]        # 0x14004c9a8
   14002cc48:	cmp    rax,rdi
   14002cc4b:	je     0x14002ccb0
   14002cc4d:	cmp    r11,rdi
   14002cc50:	je     0x14002ccb0
   14002cc52:	mov    rcx,rax
   14002cc55:	call   0x140023fc4
   14002cc5a:	mov    rcx,QWORD PTR [rip+0x1fd47]        # 0x14004c9a8
   14002cc61:	mov    rsi,rax
   14002cc64:	call   0x140023fc4
   14002cc69:	mov    r12,rax
   14002cc6c:	test   rsi,rsi
   14002cc6f:	je     0x14002ccb0
   14002cc71:	test   rax,rax
   14002cc74:	je     0x14002ccb0
   14002cc76:	call   rsi
   14002cc78:	test   rax,rax
   14002cc7b:	je     0x14002ccaa
   14002cc7d:	lea    rcx,[rsp+0x88]
   14002cc85:	mov    r9d,0xc
   14002cc8b:	lea    r8,[rsp+0x30]
   14002cc90:	mov    QWORD PTR [rsp+0x20],rcx
   14002cc95:	lea    edx,[r9-0xb]
   14002cc99:	mov    rcx,rax
   14002cc9c:	call   r12
   14002cc9f:	test   eax,eax
   14002cca1:	je     0x14002ccaa
   14002cca3:	test   BYTE PTR [rsp+0x38],0x1
   14002cca8:	jne    0x14002ccb0
   14002ccaa:	bts    ebp,0x15
   14002ccae:	jmp    0x14002ccee
   14002ccb0:	mov    rcx,QWORD PTR [rip+0x1fcd9]        # 0x14004c990
   14002ccb7:	cmp    rcx,rdi
   14002ccba:	je     0x14002ccee
   14002ccbc:	call   0x140023fc4
   14002ccc1:	test   rax,rax
   14002ccc4:	je     0x14002ccee
   14002ccc6:	call   rax
   14002ccc8:	mov    rbx,rax
   14002cccb:	test   rax,rax
   14002ccce:	je     0x14002ccee
   14002ccd0:	mov    rcx,QWORD PTR [rip+0x1fcc1]        # 0x14004c998
   14002ccd7:	cmp    rcx,rdi
   14002ccda:	je     0x14002ccee
   14002ccdc:	call   0x140023fc4
   14002cce1:	test   rax,rax
   14002cce4:	je     0x14002ccee
   14002cce6:	mov    rcx,rbx
   14002cce9:	call   rax
   14002cceb:	mov    rbx,rax
   14002ccee:	mov    rcx,QWORD PTR [rip+0x1fc93]        # 0x14004c988
   14002ccf5:	call   0x140023fc4
   14002ccfa:	test   rax,rax
   14002ccfd:	je     0x14002cd0f
   14002ccff:	mov    r9d,ebp
   14002cd02:	mov    r8,r13
   14002cd05:	mov    rdx,r14
   14002cd08:	mov    rcx,rbx
   14002cd0b:	call   rax
   14002cd0d:	jmp    0x14002cd11
   14002cd0f:	xor    eax,eax
   14002cd11:	mov    rbx,QWORD PTR [rsp+0x70]
   14002cd16:	mov    rbp,QWORD PTR [rsp+0x78]
   14002cd1b:	add    rsp,0x40
   14002cd1f:	pop    r14
   14002cd21:	pop    r13
   14002cd23:	pop    r12
   14002cd25:	pop    rdi
   14002cd26:	pop    rsi
   14002cd27:	ret    
   14002cd28:	sub    rsp,0x38
   14002cd2c:	test   ecx,ecx
   14002cd2e:	js     0x14002cd50
   14002cd30:	cmp    ecx,0x2
   14002cd33:	jle    0x14002cd42
   14002cd35:	cmp    ecx,0x3
   14002cd38:	jne    0x14002cd50
   14002cd3a:	mov    eax,DWORD PTR [rip+0x1edc0]        # 0x14004bb00
   14002cd40:	jmp    0x14002cd73
   14002cd42:	mov    eax,DWORD PTR [rip+0x1edb8]        # 0x14004bb00
   14002cd48:	mov    DWORD PTR [rip+0x1edb2],ecx        # 0x14004bb00
   14002cd4e:	jmp    0x14002cd73
   14002cd50:	call   0x140020aa4
   14002cd55:	and    QWORD PTR [rsp+0x20],0x0
   14002cd5b:	xor    r9d,r9d
   14002cd5e:	xor    r8d,r8d
   14002cd61:	xor    edx,edx
   14002cd63:	xor    ecx,ecx
   14002cd65:	mov    DWORD PTR [rax],0x16
   14002cd6b:	call   0x14001ccf0
   14002cd70:	or     eax,0xffffffff
   14002cd73:	add    rsp,0x38
   14002cd77:	ret    
   14002cd78:	mov    QWORD PTR [rsp+0x8],rbx
   14002cd7d:	mov    QWORD PTR [rsp+0x10],rsi
   14002cd82:	push   rdi
   14002cd83:	sub    rsp,0x40
   14002cd87:	mov    esi,edx
   14002cd89:	mov    rdx,rcx
   14002cd8c:	lea    rcx,[rsp+0x20]
   14002cd91:	mov    rbx,r9
   14002cd94:	mov    edi,r8d
   14002cd97:	call   0x14001cf30
   14002cd9c:	mov    r9d,DWORD PTR [rsp+0x70]
   14002cda1:	mov    r8,rbx
   14002cda4:	mov    edx,edi
   14002cda6:	mov    ecx,esi
   14002cda8:	call   QWORD PTR [rip+0xd402]        # 0x14003a1b0
   14002cdae:	cmp    BYTE PTR [rsp+0x38],0x0
   14002cdb3:	je     0x14002cdc1
   14002cdb5:	mov    rcx,QWORD PTR [rsp+0x30]
   14002cdba:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002cdc1:	mov    rbx,QWORD PTR [rsp+0x50]
   14002cdc6:	mov    rsi,QWORD PTR [rsp+0x58]
   14002cdcb:	add    rsp,0x40
   14002cdcf:	pop    rdi
   14002cdd0:	ret    
   14002cdd1:	int3   
   14002cdd2:	int3   
   14002cdd3:	int3   
   14002cdd4:	rex push rbp
   14002cdd6:	push   r12
   14002cdd8:	push   r13
   14002cdda:	push   r14
   14002cddc:	push   r15
   14002cdde:	sub    rsp,0x50
   14002cde2:	lea    rbp,[rsp+0x40]
   14002cde7:	mov    QWORD PTR [rbp+0x40],rbx
   14002cdeb:	mov    QWORD PTR [rbp+0x48],rsi
   14002cdef:	mov    QWORD PTR [rbp+0x50],rdi
   14002cdf3:	mov    rax,QWORD PTR [rip+0x1c666]        # 0x140049460
   14002cdfa:	xor    rax,rbp
   14002cdfd:	mov    QWORD PTR [rbp+0x0],rax
   14002ce01:	mov    r10d,DWORD PTR [rip+0x1fba8]        # 0x14004c9b0
   14002ce08:	mov    esi,0x1
   14002ce0d:	xor    ebx,ebx
   14002ce0f:	mov    r15,r9
   14002ce12:	mov    r13d,r8d
   14002ce15:	mov    r14d,edx
   14002ce18:	mov    rdi,rcx
   14002ce1b:	lea    r12d,[rsi+0x1]
   14002ce1f:	cmp    r10d,ebx
   14002ce22:	jne    0x14002ce5b
   14002ce24:	xor    r9d,r9d
   14002ce27:	xor    r8d,r8d
   14002ce2a:	mov    edx,esi
   14002ce2c:	xor    ecx,ecx
   14002ce2e:	call   QWORD PTR [rip+0xd37c]        # 0x14003a1b0
   14002ce34:	cmp    eax,ebx
   14002ce36:	je     0x14002ce40
   14002ce38:	mov    DWORD PTR [rip+0x1fb72],esi        # 0x14004c9b0
   14002ce3e:	jmp    0x14002ce72
   14002ce40:	call   QWORD PTR [rip+0xd282]        # 0x14003a0c8
   14002ce46:	mov    r10d,DWORD PTR [rip+0x1fb63]        # 0x14004c9b0
   14002ce4d:	cmp    eax,0x78
   14002ce50:	cmove  r10d,r12d
   14002ce54:	mov    DWORD PTR [rip+0x1fb55],r10d        # 0x14004c9b0
   14002ce5b:	cmp    r10d,r12d
   14002ce5e:	je     0x14002cf74
   14002ce64:	cmp    r10d,ebx
   14002ce67:	je     0x14002cf74
   14002ce6d:	cmp    r10d,esi
   14002ce70:	jne    0x14002ce99
   14002ce72:	mov    esi,DWORD PTR [rbp+0x68]
   14002ce75:	cmp    esi,ebx
   14002ce77:	jne    0x14002ce7f
   14002ce79:	mov    rax,QWORD PTR [rdi]
   14002ce7c:	mov    esi,DWORD PTR [rax+0x4]
   14002ce7f:	xor    r9d,r9d
   14002ce82:	xor    r8d,r8d
   14002ce85:	mov    edx,r13d
   14002ce88:	mov    ecx,r14d
   14002ce8b:	call   QWORD PTR [rip+0xd31f]        # 0x14003a1b0
   14002ce91:	movsxd r12,eax
   14002ce94:	cmp    r12d,ebx
   14002ce97:	jne    0x14002cea0
   14002ce99:	xor    eax,eax
   14002ce9b:	jmp    0x14002cf87
   14002cea0:	jle    0x14002cf09
   14002cea2:	xor    edx,edx
   14002cea4:	lea    rax,[rdx-0x20]
   14002cea8:	div    r12
   14002ceab:	cmp    rax,0x2
   14002ceaf:	jb     0x14002cf09
   14002ceb1:	lea    rcx,[r12+r12*1+0x10]
   14002ceb6:	cmp    rcx,0x400
   14002cebd:	ja     0x14002cef0
   14002cebf:	lea    rax,[rcx+0xf]
   14002cec3:	cmp    rax,rcx
   14002cec6:	ja     0x14002ced2
   14002cec8:	movabs rax,0xffffffffffffff0
   14002ced2:	and    rax,0xfffffffffffffff0
   14002ced6:	call   0x140036570
   14002cedb:	sub    rsp,rax
   14002cede:	lea    rdi,[rsp+0x40]
   14002cee3:	cmp    rdi,rbx
   14002cee6:	je     0x14002ce99
   14002cee8:	mov    DWORD PTR [rdi],0xcccc
   14002ceee:	jmp    0x14002cf03
   14002cef0:	call   0x14001d66c
   14002cef5:	mov    rdi,rax
   14002cef8:	cmp    rax,rbx
   14002cefb:	je     0x14002cf0c
   14002cefd:	mov    DWORD PTR [rax],0xdddd
   14002cf03:	add    rdi,0x10
   14002cf07:	jmp    0x14002cf0c
   14002cf09:	mov    rdi,rbx
   14002cf0c:	cmp    rdi,rbx
   14002cf0f:	je     0x14002ce99
   14002cf11:	mov    r9d,r12d
   14002cf14:	mov    r8,rdi
   14002cf17:	mov    edx,r13d
   14002cf1a:	mov    ecx,r14d
   14002cf1d:	call   QWORD PTR [rip+0xd28d]        # 0x14003a1b0
   14002cf23:	cmp    eax,ebx
   14002cf25:	je     0x14002cf5f
   14002cf27:	mov    eax,DWORD PTR [rbp+0x60]
   14002cf2a:	or     r9d,0xffffffff
   14002cf2e:	xor    edx,edx
   14002cf30:	mov    QWORD PTR [rsp+0x38],rbx
   14002cf35:	mov    r8,rdi
   14002cf38:	mov    ecx,esi
   14002cf3a:	mov    QWORD PTR [rsp+0x30],rbx
   14002cf3f:	cmp    eax,ebx
   14002cf41:	jne    0x14002cf4e
   14002cf43:	mov    DWORD PTR [rsp+0x28],ebx
   14002cf47:	mov    QWORD PTR [rsp+0x20],rbx
   14002cf4c:	jmp    0x14002cf57
   14002cf4e:	mov    DWORD PTR [rsp+0x28],eax
   14002cf52:	mov    QWORD PTR [rsp+0x20],r15
   14002cf57:	call   QWORD PTR [rip+0xd2cb]        # 0x14003a228
   14002cf5d:	mov    ebx,eax
   14002cf5f:	lea    rcx,[rdi-0x10]
   14002cf63:	cmp    DWORD PTR [rcx],0xdddd
   14002cf69:	jne    0x14002cf70
   14002cf6b:	call   0x14001ca48
   14002cf70:	mov    eax,ebx
   14002cf72:	jmp    0x14002cf87
   14002cf74:	mov    r9d,DWORD PTR [rbp+0x60]
   14002cf78:	mov    r8,r15
   14002cf7b:	mov    edx,r13d
   14002cf7e:	mov    ecx,r14d
   14002cf81:	call   QWORD PTR [rip+0xd291]        # 0x14003a218
   14002cf87:	mov    rcx,QWORD PTR [rbp+0x0]
   14002cf8b:	xor    rcx,rbp
   14002cf8e:	call   0x14001c500
   14002cf93:	mov    rbx,QWORD PTR [rbp+0x40]
   14002cf97:	mov    rsi,QWORD PTR [rbp+0x48]
   14002cf9b:	mov    rdi,QWORD PTR [rbp+0x50]
   14002cf9f:	lea    rsp,[rbp+0x10]
   14002cfa3:	pop    r15
   14002cfa5:	pop    r14
   14002cfa7:	pop    r13
   14002cfa9:	pop    r12
   14002cfab:	pop    rbp
   14002cfac:	ret    
   14002cfad:	int3   
   14002cfae:	int3   
   14002cfaf:	int3   
   14002cfb0:	mov    QWORD PTR [rsp+0x8],rbx
   14002cfb5:	mov    QWORD PTR [rsp+0x10],rsi
   14002cfba:	push   rdi
   14002cfbb:	sub    rsp,0x50
   14002cfbf:	mov    esi,edx
   14002cfc1:	mov    rdx,rcx
   14002cfc4:	lea    rcx,[rsp+0x30]
   14002cfc9:	mov    rbx,r9
   14002cfcc:	mov    edi,r8d
   14002cfcf:	call   0x14001cf30
   14002cfd4:	mov    r11d,DWORD PTR [rsp+0x88]
   14002cfdc:	mov    eax,DWORD PTR [rsp+0x80]
   14002cfe3:	lea    rcx,[rsp+0x30]
   14002cfe8:	mov    DWORD PTR [rsp+0x28],r11d
   14002cfed:	mov    r9,rbx
   14002cff0:	mov    r8d,edi
   14002cff3:	mov    edx,esi
   14002cff5:	mov    DWORD PTR [rsp+0x20],eax
   14002cff9:	call   0x14002cdd4
   14002cffe:	cmp    BYTE PTR [rsp+0x48],0x0
   14002d003:	je     0x14002d011
   14002d005:	mov    rcx,QWORD PTR [rsp+0x40]
   14002d00a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002d011:	mov    rbx,QWORD PTR [rsp+0x60]
   14002d016:	mov    rsi,QWORD PTR [rsp+0x68]
   14002d01b:	add    rsp,0x50
   14002d01f:	pop    rdi
   14002d020:	ret    
   14002d021:	int3   
   14002d022:	int3   
   14002d023:	int3   
   14002d024:	mov    edx,0x30
   14002d029:	cmp    cx,dx
   14002d02c:	jb     0x14002d1b5
   14002d032:	cmp    cx,0x3a
   14002d036:	jae    0x14002d03e
   14002d038:	movzx  eax,cx
   14002d03b:	sub    eax,edx
   14002d03d:	ret    
   14002d03e:	mov    edx,0xff10
   14002d043:	cmp    cx,dx
   14002d046:	jae    0x14002d1a7
   14002d04c:	mov    edx,0x660
   14002d051:	cmp    cx,dx
   14002d054:	jb     0x14002d1b5
   14002d05a:	lea    eax,[rdx+0xa]
   14002d05d:	cmp    cx,ax
   14002d060:	jb     0x14002d038
   14002d062:	mov    edx,0x6f0
   14002d067:	cmp    cx,dx
   14002d06a:	jb     0x14002d1b5
   14002d070:	lea    eax,[rdx+0xa]
   14002d073:	cmp    cx,ax
   14002d076:	jb     0x14002d038
   14002d078:	mov    edx,0x966
   14002d07d:	cmp    cx,dx
   14002d080:	jb     0x14002d1b5
   14002d086:	lea    eax,[rdx+0xa]
   14002d089:	cmp    cx,ax
   14002d08c:	jb     0x14002d038
   14002d08e:	lea    edx,[rax+0x76]
   14002d091:	cmp    cx,dx
   14002d094:	jb     0x14002d1b5
   14002d09a:	lea    eax,[rdx+0xa]
   14002d09d:	cmp    cx,ax
   14002d0a0:	jb     0x14002d038
   14002d0a2:	lea    edx,[rax+0x76]
   14002d0a5:	cmp    cx,dx
   14002d0a8:	jb     0x14002d1b5
   14002d0ae:	lea    eax,[rdx+0xa]
   14002d0b1:	cmp    cx,ax
   14002d0b4:	jb     0x14002d038
   14002d0b6:	lea    edx,[rax+0x76]
   14002d0b9:	cmp    cx,dx
   14002d0bc:	jb     0x14002d1b5
   14002d0c2:	lea    eax,[rdx+0xa]
   14002d0c5:	cmp    cx,ax
   14002d0c8:	jb     0x14002d038
   14002d0ce:	lea    edx,[rax+0x76]
   14002d0d1:	cmp    cx,dx
   14002d0d4:	jb     0x14002d1b5
   14002d0da:	lea    eax,[rdx+0xa]
   14002d0dd:	cmp    cx,ax
   14002d0e0:	jb     0x14002d038
   14002d0e6:	mov    edx,0xc66
   14002d0eb:	cmp    cx,dx
   14002d0ee:	jb     0x14002d1b5
   14002d0f4:	lea    eax,[rdx+0xa]
   14002d0f7:	cmp    cx,ax
   14002d0fa:	jb     0x14002d038
   14002d100:	lea    edx,[rax+0x76]
   14002d103:	cmp    cx,dx
   14002d106:	jb     0x14002d1b5
   14002d10c:	lea    eax,[rdx+0xa]
   14002d10f:	cmp    cx,ax
   14002d112:	jb     0x14002d038
   14002d118:	lea    edx,[rax+0x76]
   14002d11b:	cmp    cx,dx
   14002d11e:	jb     0x14002d1b5
   14002d124:	lea    eax,[rdx+0xa]
   14002d127:	cmp    cx,ax
   14002d12a:	jb     0x14002d038
   14002d130:	mov    edx,0xe50
   14002d135:	cmp    cx,dx
   14002d138:	jb     0x14002d1b5
   14002d13a:	lea    eax,[rdx+0xa]
   14002d13d:	cmp    cx,ax
   14002d140:	jb     0x14002d038
   14002d146:	lea    edx,[rax+0x76]
   14002d149:	cmp    cx,dx
   14002d14c:	jb     0x14002d1b5
   14002d14e:	lea    eax,[rdx+0xa]
   14002d151:	cmp    cx,ax
   14002d154:	jb     0x14002d038
   14002d15a:	lea    edx,[rax+0x46]
   14002d15d:	cmp    cx,dx
   14002d160:	jb     0x14002d1b5
   14002d162:	lea    eax,[rdx+0xa]
   14002d165:	cmp    cx,ax
   14002d168:	jb     0x14002d038
   14002d16e:	mov    edx,0x1040
   14002d173:	cmp    cx,dx
   14002d176:	jb     0x14002d1b5
   14002d178:	lea    eax,[rdx+0xa]
   14002d17b:	cmp    cx,ax
   14002d17e:	jb     0x14002d038
   14002d184:	mov    edx,0x17e0
   14002d189:	cmp    cx,dx
   14002d18c:	jb     0x14002d1b5
   14002d18e:	lea    eax,[rdx+0xa]
   14002d191:	cmp    cx,ax
   14002d194:	jb     0x14002d038
   14002d19a:	lea    edx,[rax+0x26]
   14002d19d:	cmp    cx,dx
   14002d1a0:	jb     0x14002d1b5
   14002d1a2:	lea    eax,[rdx+0xa]
   14002d1a5:	jmp    0x14002d1ac
   14002d1a7:	mov    eax,0xff1a
   14002d1ac:	cmp    cx,ax
   14002d1af:	jb     0x14002d038
   14002d1b5:	or     eax,0xffffffff
   14002d1b8:	ret    
   14002d1b9:	int3   
   14002d1ba:	int3   
   14002d1bb:	int3   
   14002d1bc:	mov    QWORD PTR [rsp+0x8],rbx
   14002d1c1:	push   rdi
   14002d1c2:	sub    rsp,0x20
   14002d1c6:	movsxd rbx,ecx
   14002d1c9:	mov    edi,r8d
   14002d1cc:	mov    QWORD PTR [rsp+0x38],rdx
   14002d1d1:	mov    ecx,ebx
   14002d1d3:	call   0x14002fc38
   14002d1d8:	cmp    rax,0xffffffffffffffff
   14002d1dc:	jne    0x14002d1ef
   14002d1de:	call   0x140020aa4
   14002d1e3:	mov    DWORD PTR [rax],0x9
   14002d1e9:	or     rax,0xffffffffffffffff
   14002d1ed:	jmp    0x14002d246
   14002d1ef:	mov    edx,DWORD PTR [rsp+0x38]
   14002d1f3:	lea    r8,[rsp+0x3c]
   14002d1f8:	mov    r9d,edi
   14002d1fb:	mov    rcx,rax
   14002d1fe:	call   QWORD PTR [rip+0xcfc4]        # 0x14003a1c8
   14002d204:	mov    DWORD PTR [rsp+0x38],eax
   14002d208:	cmp    eax,0xffffffff
   14002d20b:	jne    0x14002d220
   14002d20d:	call   QWORD PTR [rip+0xceb5]        # 0x14003a0c8
   14002d213:	test   eax,eax
   14002d215:	je     0x14002d220
   14002d217:	mov    ecx,eax
   14002d219:	call   0x140020ae4
   14002d21e:	jmp    0x14002d1e9
   14002d220:	mov    rcx,rbx
   14002d223:	mov    rax,rbx
   14002d226:	lea    rdx,[rip+0x200f3]        # 0x14004d320
   14002d22d:	sar    rax,0x5
   14002d231:	and    ecx,0x1f
   14002d234:	mov    rax,QWORD PTR [rdx+rax*8]
   14002d238:	imul   rcx,rcx,0x58
   14002d23c:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   14002d241:	mov    rax,QWORD PTR [rsp+0x38]
   14002d246:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d24b:	add    rsp,0x20
   14002d24f:	pop    rdi
   14002d250:	ret    
   14002d251:	int3   
   14002d252:	int3   
   14002d253:	int3   
   14002d254:	mov    QWORD PTR [rsp+0x10],rbx
   14002d259:	mov    QWORD PTR [rsp+0x18],rsi
   14002d25e:	mov    DWORD PTR [rsp+0x8],ecx
   14002d262:	push   rdi
   14002d263:	push   r12
   14002d265:	push   r13
   14002d267:	push   r14
   14002d269:	push   r15
   14002d26b:	sub    rsp,0x30
   14002d26f:	mov    r12d,r8d
   14002d272:	mov    r13,rdx
   14002d275:	movsxd rbx,ecx
   14002d278:	cmp    ebx,0xfffffffe
   14002d27b:	jne    0x14002d29a
   14002d27d:	call   0x140020ac4
   14002d282:	xor    edi,edi
   14002d284:	mov    DWORD PTR [rax],edi
   14002d286:	call   0x140020aa4
   14002d28b:	mov    DWORD PTR [rax],0x9
   14002d291:	or     rax,0xffffffffffffffff
   14002d295:	jmp    0x14002d373
   14002d29a:	xor    edi,edi
   14002d29c:	cmp    ebx,edi
   14002d29e:	jl     0x14002d349
   14002d2a4:	cmp    ebx,DWORD PTR [rip+0x2005e]        # 0x14004d308
   14002d2aa:	jae    0x14002d349
   14002d2b0:	mov    rsi,rbx
   14002d2b3:	mov    r14,rbx
   14002d2b6:	sar    r14,0x5
   14002d2ba:	lea    r15,[rip+0x2005f]        # 0x14004d320
   14002d2c1:	and    esi,0x1f
   14002d2c4:	imul   rsi,rsi,0x58
   14002d2c8:	mov    rax,QWORD PTR [r15+r14*8]
   14002d2cc:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14002d2d1:	and    ecx,0x1
   14002d2d4:	jne    0x14002d302
   14002d2d6:	call   0x140020ac4
   14002d2db:	mov    DWORD PTR [rax],edi
   14002d2dd:	call   0x140020aa4
   14002d2e2:	mov    DWORD PTR [rax],0x9
   14002d2e8:	mov    QWORD PTR [rsp+0x20],rdi
   14002d2ed:	xor    r9d,r9d
   14002d2f0:	xor    r8d,r8d
   14002d2f3:	xor    edx,edx
   14002d2f5:	xor    ecx,ecx
   14002d2f7:	call   0x14001ccf0
   14002d2fc:	or     rax,0xffffffffffffffff
   14002d300:	jmp    0x14002d373
   14002d302:	mov    ecx,ebx
   14002d304:	call   0x14002fcbc
   14002d309:	nop
   14002d30a:	mov    rax,QWORD PTR [r15+r14*8]
   14002d30e:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   14002d313:	je     0x14002d327
   14002d315:	mov    r8d,r12d
   14002d318:	mov    rdx,r13
   14002d31b:	mov    ecx,ebx
   14002d31d:	call   0x14002d1bc
   14002d322:	mov    rdi,rax
   14002d325:	jmp    0x14002d33d
   14002d327:	call   0x140020aa4
   14002d32c:	mov    DWORD PTR [rax],0x9
   14002d332:	call   0x140020ac4
   14002d337:	mov    DWORD PTR [rax],edi
   14002d339:	or     rdi,0xffffffffffffffff
   14002d33d:	mov    ecx,ebx
   14002d33f:	call   0x14002fd64
   14002d344:	mov    rax,rdi
   14002d347:	jmp    0x14002d373
   14002d349:	call   0x140020ac4
   14002d34e:	mov    DWORD PTR [rax],edi
   14002d350:	call   0x140020aa4
   14002d355:	mov    DWORD PTR [rax],0x9
   14002d35b:	mov    QWORD PTR [rsp+0x20],rdi
   14002d360:	xor    r9d,r9d
   14002d363:	xor    r8d,r8d
   14002d366:	xor    edx,edx
   14002d368:	xor    ecx,ecx
   14002d36a:	call   0x14001ccf0
   14002d36f:	or     rax,0xffffffffffffffff
   14002d373:	mov    rbx,QWORD PTR [rsp+0x68]
   14002d378:	mov    rsi,QWORD PTR [rsp+0x70]
   14002d37d:	add    rsp,0x30
   14002d381:	pop    r15
   14002d383:	pop    r14
   14002d385:	pop    r13
   14002d387:	pop    r12
   14002d389:	pop    rdi
   14002d38a:	ret    
   14002d38b:	int3   
   14002d38c:	sub    rsp,0x38
   14002d390:	cmp    ecx,0xfffffffe
   14002d393:	jne    0x14002d3a2
   14002d395:	call   0x140020aa4
   14002d39a:	mov    DWORD PTR [rax],0x9
   14002d3a0:	jmp    0x14002d3f4
   14002d3a2:	test   ecx,ecx
   14002d3a4:	js     0x14002d3d4
   14002d3a6:	cmp    ecx,DWORD PTR [rip+0x1ff5c]        # 0x14004d308
   14002d3ac:	jae    0x14002d3d4
   14002d3ae:	movsxd rcx,ecx
   14002d3b1:	lea    rdx,[rip+0x1ff68]        # 0x14004d320
   14002d3b8:	mov    rax,rcx
   14002d3bb:	and    ecx,0x1f
   14002d3be:	sar    rax,0x5
   14002d3c2:	imul   rcx,rcx,0x58
   14002d3c6:	mov    rax,QWORD PTR [rdx+rax*8]
   14002d3ca:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   14002d3cf:	and    eax,0x40
   14002d3d2:	jmp    0x14002d3f6
   14002d3d4:	call   0x140020aa4
   14002d3d9:	and    QWORD PTR [rsp+0x20],0x0
   14002d3df:	xor    r9d,r9d
   14002d3e2:	xor    r8d,r8d
   14002d3e5:	xor    edx,edx
   14002d3e7:	xor    ecx,ecx
   14002d3e9:	mov    DWORD PTR [rax],0x9
   14002d3ef:	call   0x14001ccf0
   14002d3f4:	xor    eax,eax
   14002d3f6:	add    rsp,0x38
   14002d3fa:	ret    
   14002d3fb:	int3   
   14002d3fc:	mov    rcx,QWORD PTR [rip+0x1c05d]        # 0x140049460
   14002d403:	xor    eax,eax
   14002d405:	or     rcx,0x1
   14002d409:	cmp    QWORD PTR [rip+0x1f5a8],rcx        # 0x14004c9b8
   14002d410:	sete   al
   14002d413:	ret    
   14002d414:	mov    QWORD PTR [rsp+0x8],rbx
   14002d419:	push   rdi
   14002d41a:	sub    rsp,0x30
   14002d41e:	xor    edi,edi
   14002d420:	cmp    rcx,rdi
   14002d423:	je     0x14002d432
   14002d425:	cmp    rdx,rdi
   14002d428:	jbe    0x14002d432
   14002d42a:	cmp    r8,rdi
   14002d42d:	jne    0x14002d45f
   14002d42f:	mov    WORD PTR [rcx],di
   14002d432:	call   0x140020aa4
   14002d437:	mov    ebx,0x16
   14002d43c:	xor    r9d,r9d
   14002d43f:	xor    r8d,r8d
   14002d442:	xor    edx,edx
   14002d444:	xor    ecx,ecx
   14002d446:	mov    QWORD PTR [rsp+0x20],rdi
   14002d44b:	mov    DWORD PTR [rax],ebx
   14002d44d:	call   0x14001ccf0
   14002d452:	mov    eax,ebx
   14002d454:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d459:	add    rsp,0x30
   14002d45d:	pop    rdi
   14002d45e:	ret    
   14002d45f:	mov    r9,rcx
   14002d462:	movzx  eax,WORD PTR [r8]
   14002d466:	add    r8,0x2
   14002d46a:	mov    WORD PTR [r9],ax
   14002d46e:	add    r9,0x2
   14002d472:	cmp    ax,di
   14002d475:	je     0x14002d47d
   14002d477:	sub    rdx,0x1
   14002d47b:	jne    0x14002d462
   14002d47d:	cmp    rdx,rdi
   14002d480:	jne    0x14002d491
   14002d482:	mov    WORD PTR [rcx],di
   14002d485:	call   0x140020aa4
   14002d48a:	mov    ebx,0x22
   14002d48f:	jmp    0x14002d43c
   14002d491:	xor    eax,eax
   14002d493:	jmp    0x14002d454
   14002d495:	int3   
   14002d496:	int3   
   14002d497:	int3   
   14002d498:	mov    r9,rcx
   14002d49b:	movzx  r8d,BYTE PTR [r9]
   14002d49f:	inc    r9
   14002d4a2:	lea    eax,[r8-0x41]
   14002d4a6:	cmp    eax,0x19
   14002d4a9:	ja     0x14002d4af
   14002d4ab:	add    r8d,0x20
   14002d4af:	movzx  ecx,BYTE PTR [rdx]
   14002d4b2:	inc    rdx
   14002d4b5:	lea    eax,[rcx-0x41]
   14002d4b8:	cmp    eax,0x19
   14002d4bb:	ja     0x14002d4c0
   14002d4bd:	add    ecx,0x20
   14002d4c0:	test   r8d,r8d
   14002d4c3:	je     0x14002d4ca
   14002d4c5:	cmp    r8d,ecx
   14002d4c8:	je     0x14002d49b
   14002d4ca:	sub    r8d,ecx
   14002d4cd:	mov    eax,r8d
   14002d4d0:	ret    
   14002d4d1:	int3   
   14002d4d2:	int3   
   14002d4d3:	int3   
   14002d4d4:	mov    QWORD PTR [rsp+0x8],rbx
   14002d4d9:	mov    QWORD PTR [rsp+0x10],rsi
   14002d4de:	push   rdi
   14002d4df:	sub    rsp,0x50
   14002d4e3:	mov    rsi,rcx
   14002d4e6:	mov    rdi,rdx
   14002d4e9:	lea    rcx,[rsp+0x30]
   14002d4ee:	mov    rdx,r8
   14002d4f1:	call   0x14001cf30
   14002d4f6:	test   rsi,rsi
   14002d4f9:	jne    0x14002d535
   14002d4fb:	call   0x140020aa4
   14002d500:	and    QWORD PTR [rsp+0x20],0x0
   14002d506:	xor    r9d,r9d
   14002d509:	xor    r8d,r8d
   14002d50c:	xor    edx,edx
   14002d50e:	xor    ecx,ecx
   14002d510:	mov    DWORD PTR [rax],0x16
   14002d516:	call   0x14001ccf0
   14002d51b:	cmp    BYTE PTR [rsp+0x48],0x0
   14002d520:	je     0x14002d52e
   14002d522:	mov    rax,QWORD PTR [rsp+0x40]
   14002d527:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002d52e:	mov    eax,0x7fffffff
   14002d533:	jmp    0x14002d5a6
   14002d535:	test   rdi,rdi
   14002d538:	je     0x14002d4fb
   14002d53a:	mov    rax,QWORD PTR [rsp+0x30]
   14002d53f:	cmp    DWORD PTR [rax+0x14],0x0
   14002d543:	jne    0x14002d565
   14002d545:	mov    rdx,rdi
   14002d548:	mov    rcx,rsi
   14002d54b:	call   0x14002d498
   14002d550:	cmp    BYTE PTR [rsp+0x48],0x0
   14002d555:	je     0x14002d5a6
   14002d557:	mov    rcx,QWORD PTR [rsp+0x40]
   14002d55c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002d563:	jmp    0x14002d5a6
   14002d565:	movzx  ecx,BYTE PTR [rsi]
   14002d568:	lea    rdx,[rsp+0x30]
   14002d56d:	call   0x14002235c
   14002d572:	movzx  ecx,BYTE PTR [rdi]
   14002d575:	lea    rdx,[rsp+0x30]
   14002d57a:	mov    ebx,eax
   14002d57c:	inc    rsi
   14002d57f:	call   0x14002235c
   14002d584:	inc    rdi
   14002d587:	test   ebx,ebx
   14002d589:	je     0x14002d58f
   14002d58b:	cmp    ebx,eax
   14002d58d:	je     0x14002d565
   14002d58f:	sub    ebx,eax
   14002d591:	cmp    BYTE PTR [rsp+0x48],0x0
   14002d596:	je     0x14002d5a4
   14002d598:	mov    rcx,QWORD PTR [rsp+0x40]
   14002d59d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002d5a4:	mov    eax,ebx
   14002d5a6:	mov    rbx,QWORD PTR [rsp+0x60]
   14002d5ab:	mov    rsi,QWORD PTR [rsp+0x68]
   14002d5b0:	add    rsp,0x50
   14002d5b4:	pop    rdi
   14002d5b5:	ret    
   14002d5b6:	int3   
   14002d5b7:	int3   
   14002d5b8:	sub    rsp,0x38
   14002d5bc:	cmp    DWORD PTR [rip+0x1e541],0x0        # 0x14004bb04
   14002d5c3:	jne    0x14002d5fd
   14002d5c5:	test   rcx,rcx
   14002d5c8:	jne    0x14002d5f1
   14002d5ca:	call   0x140020aa4
   14002d5cf:	and    QWORD PTR [rsp+0x20],0x0
   14002d5d5:	xor    r9d,r9d
   14002d5d8:	xor    r8d,r8d
   14002d5db:	xor    edx,edx
   14002d5dd:	xor    ecx,ecx
   14002d5df:	mov    DWORD PTR [rax],0x16
   14002d5e5:	call   0x14001ccf0
   14002d5ea:	mov    eax,0x7fffffff
   14002d5ef:	jmp    0x14002d605
   14002d5f1:	test   rdx,rdx
   14002d5f4:	je     0x14002d5ca
   14002d5f6:	call   0x14002d498
   14002d5fb:	jmp    0x14002d605
   14002d5fd:	xor    r8d,r8d
   14002d600:	call   0x14002d4d4
   14002d605:	add    rsp,0x38
   14002d609:	ret    
   14002d60a:	int3   
   14002d60b:	int3   
   14002d60c:	xor    edx,edx
   14002d60e:	lea    r8d,[rdx+0xa]
   14002d612:	jmp    0x140030010
   14002d617:	int3   
   14002d618:	mov    r10,rcx
   14002d61b:	test   r8,r8
   14002d61e:	je     0x14002d65c
   14002d620:	movzx  r9d,BYTE PTR [r10]
   14002d624:	inc    r10
   14002d627:	lea    eax,[r9-0x41]
   14002d62b:	cmp    eax,0x19
   14002d62e:	ja     0x14002d634
   14002d630:	add    r9d,0x20
   14002d634:	movzx  ecx,BYTE PTR [rdx]
   14002d637:	inc    rdx
   14002d63a:	lea    eax,[rcx-0x41]
   14002d63d:	cmp    eax,0x19
   14002d640:	ja     0x14002d645
   14002d642:	add    ecx,0x20
   14002d645:	sub    r8,0x1
   14002d649:	je     0x14002d655
   14002d64b:	test   r9d,r9d
   14002d64e:	je     0x14002d655
   14002d650:	cmp    r9d,ecx
   14002d653:	je     0x14002d620
   14002d655:	sub    r9d,ecx
   14002d658:	mov    eax,r9d
   14002d65b:	ret    
   14002d65c:	xor    eax,eax
   14002d65e:	ret    
   14002d65f:	int3   
   14002d660:	mov    rax,rsp
   14002d663:	mov    QWORD PTR [rax+0x8],rbx
   14002d667:	mov    QWORD PTR [rax+0x10],rbp
   14002d66b:	mov    QWORD PTR [rax+0x18],rsi
   14002d66f:	push   rdi
   14002d670:	sub    rsp,0x50
   14002d674:	mov    rdi,r8
   14002d677:	mov    rsi,rdx
   14002d67a:	mov    rbp,rcx
   14002d67d:	test   r8,r8
   14002d680:	je     0x14002d75a
   14002d686:	lea    rcx,[rax-0x28]
   14002d68a:	mov    rdx,r9
   14002d68d:	call   0x14001cf30
   14002d692:	test   rbp,rbp
   14002d695:	jne    0x14002d6d4
   14002d697:	call   0x140020aa4
   14002d69c:	and    QWORD PTR [rsp+0x20],0x0
   14002d6a2:	xor    r9d,r9d
   14002d6a5:	xor    r8d,r8d
   14002d6a8:	xor    edx,edx
   14002d6aa:	xor    ecx,ecx
   14002d6ac:	mov    DWORD PTR [rax],0x16
   14002d6b2:	call   0x14001ccf0
   14002d6b7:	cmp    BYTE PTR [rsp+0x48],0x0
   14002d6bc:	je     0x14002d6ca
   14002d6be:	mov    rax,QWORD PTR [rsp+0x40]
   14002d6c3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002d6ca:	mov    eax,0x7fffffff
   14002d6cf:	jmp    0x14002d75c
   14002d6d4:	test   rsi,rsi
   14002d6d7:	je     0x14002d697
   14002d6d9:	cmp    rdi,0x7fffffff
   14002d6e0:	ja     0x14002d697
   14002d6e2:	mov    rax,QWORD PTR [rsp+0x30]
   14002d6e7:	cmp    DWORD PTR [rax+0x14],0x0
   14002d6eb:	jne    0x14002d710
   14002d6ed:	mov    r8,rdi
   14002d6f0:	mov    rdx,rsi
   14002d6f3:	mov    rcx,rbp
   14002d6f6:	call   0x14002d618
   14002d6fb:	cmp    BYTE PTR [rsp+0x48],0x0
   14002d700:	je     0x14002d75c
   14002d702:	mov    rcx,QWORD PTR [rsp+0x40]
   14002d707:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002d70e:	jmp    0x14002d75c
   14002d710:	movzx  ecx,BYTE PTR [rbp+0x0]
   14002d714:	lea    rdx,[rsp+0x30]
   14002d719:	call   0x14002235c
   14002d71e:	movzx  ecx,BYTE PTR [rsi]
   14002d721:	lea    rdx,[rsp+0x30]
   14002d726:	mov    ebx,eax
   14002d728:	inc    rbp
   14002d72b:	call   0x14002235c
   14002d730:	inc    rsi
   14002d733:	sub    rdi,0x1
   14002d737:	je     0x14002d741
   14002d739:	test   ebx,ebx
   14002d73b:	je     0x14002d741
   14002d73d:	cmp    ebx,eax
   14002d73f:	je     0x14002d710
   14002d741:	sub    ebx,eax
   14002d743:	cmp    BYTE PTR [rsp+0x48],0x0
   14002d748:	je     0x14002d756
   14002d74a:	mov    rcx,QWORD PTR [rsp+0x40]
   14002d74f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002d756:	mov    eax,ebx
   14002d758:	jmp    0x14002d75c
   14002d75a:	xor    eax,eax
   14002d75c:	mov    rbx,QWORD PTR [rsp+0x60]
   14002d761:	mov    rbp,QWORD PTR [rsp+0x68]
   14002d766:	mov    rsi,QWORD PTR [rsp+0x70]
   14002d76b:	add    rsp,0x50
   14002d76f:	pop    rdi
   14002d770:	ret    
   14002d771:	int3   
   14002d772:	int3   
   14002d773:	int3   
   14002d774:	sub    rsp,0x38
   14002d778:	cmp    DWORD PTR [rip+0x1e385],0x0        # 0x14004bb04
   14002d77f:	jne    0x14002d7c2
   14002d781:	test   rcx,rcx
   14002d784:	jne    0x14002d7ad
   14002d786:	call   0x140020aa4
   14002d78b:	and    QWORD PTR [rsp+0x20],0x0
   14002d791:	xor    r9d,r9d
   14002d794:	xor    r8d,r8d
   14002d797:	xor    edx,edx
   14002d799:	xor    ecx,ecx
   14002d79b:	mov    DWORD PTR [rax],0x16
   14002d7a1:	call   0x14001ccf0
   14002d7a6:	mov    eax,0x7fffffff
   14002d7ab:	jmp    0x14002d7ca
   14002d7ad:	test   rdx,rdx
   14002d7b0:	je     0x14002d786
   14002d7b2:	cmp    r8,0x7fffffff
   14002d7b9:	ja     0x14002d786
   14002d7bb:	call   0x14002d618
   14002d7c0:	jmp    0x14002d7ca
   14002d7c2:	xor    r9d,r9d
   14002d7c5:	call   0x14002d660
   14002d7ca:	add    rsp,0x38
   14002d7ce:	ret    
   14002d7cf:	int3   
   14002d7d0:	mov    r9,rcx
   14002d7d3:	xor    r8d,r8d
   14002d7d6:	mov    al,BYTE PTR [rcx]
   14002d7d8:	inc    rcx
   14002d7db:	cmp    al,r8b
   14002d7de:	jne    0x14002d7d6
   14002d7e0:	dec    rcx
   14002d7e3:	cmp    rcx,r9
   14002d7e6:	je     0x14002d7ec
   14002d7e8:	cmp    BYTE PTR [rcx],dl
   14002d7ea:	jne    0x14002d7e0
   14002d7ec:	cmp    BYTE PTR [rcx],dl
   14002d7ee:	cmove  r8,rcx
   14002d7f2:	mov    rax,r8
   14002d7f5:	ret    
   14002d7f6:	int3   
   14002d7f7:	int3   
   14002d7f8:	mov    QWORD PTR [rsp+0x18],rbx
   14002d7fd:	push   rdi
   14002d7fe:	sub    rsp,0x80
   14002d805:	mov    rax,QWORD PTR [rip+0x1bc54]        # 0x140049460
   14002d80c:	xor    rax,rsp
   14002d80f:	mov    QWORD PTR [rsp+0x78],rax
   14002d814:	mov    rdi,rcx
   14002d817:	mov    rbx,rdx
   14002d81a:	lea    rcx,[rsp+0x40]
   14002d81f:	mov    rdx,r8
   14002d822:	call   0x14001cf30
   14002d827:	lea    r11,[rsp+0x40]
   14002d82c:	lea    rdx,[rsp+0x60]
   14002d831:	mov    QWORD PTR [rsp+0x38],r11
   14002d836:	and    DWORD PTR [rsp+0x30],0x0
   14002d83b:	and    DWORD PTR [rsp+0x28],0x0
   14002d840:	and    DWORD PTR [rsp+0x20],0x0
   14002d845:	lea    rcx,[rsp+0x68]
   14002d84a:	xor    r9d,r9d
   14002d84d:	mov    r8,rbx
   14002d850:	call   0x14002e888
   14002d855:	lea    rcx,[rsp+0x68]
   14002d85a:	mov    rdx,rdi
   14002d85d:	mov    ebx,eax
   14002d85f:	call   0x14002dc80
   14002d864:	mov    edx,0x3
   14002d869:	test   dl,bl
   14002d86b:	jne    0x14002d8a8
   14002d86d:	cmp    eax,0x1
   14002d870:	jne    0x14002d889
   14002d872:	cmp    BYTE PTR [rsp+0x58],0x0
   14002d877:	je     0x14002d885
   14002d879:	mov    rcx,QWORD PTR [rsp+0x50]
   14002d87e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002d885:	mov    eax,edx
   14002d887:	jmp    0x14002d8dc
   14002d889:	cmp    eax,0x2
   14002d88c:	jne    0x14002d8c7
   14002d88e:	cmp    BYTE PTR [rsp+0x58],0x0
   14002d893:	je     0x14002d8a1
   14002d895:	mov    rax,QWORD PTR [rsp+0x50]
   14002d89a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002d8a1:	mov    eax,0x4
   14002d8a6:	jmp    0x14002d8dc
   14002d8a8:	test   bl,0x1
   14002d8ab:	jne    0x14002d88e
   14002d8ad:	test   bl,0x2
   14002d8b0:	je     0x14002d8c7
   14002d8b2:	cmp    BYTE PTR [rsp+0x58],0x0
   14002d8b7:	je     0x14002d885
   14002d8b9:	mov    rax,QWORD PTR [rsp+0x50]
   14002d8be:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002d8c5:	jmp    0x14002d885
   14002d8c7:	cmp    BYTE PTR [rsp+0x58],0x0
   14002d8cc:	je     0x14002d8da
   14002d8ce:	mov    rax,QWORD PTR [rsp+0x50]
   14002d8d3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002d8da:	xor    eax,eax
   14002d8dc:	mov    rcx,QWORD PTR [rsp+0x78]
   14002d8e1:	xor    rcx,rsp
   14002d8e4:	call   0x14001c500
   14002d8e9:	mov    rbx,QWORD PTR [rsp+0xa0]
   14002d8f1:	add    rsp,0x80
   14002d8f8:	pop    rdi
   14002d8f9:	ret    
   14002d8fa:	int3   
   14002d8fb:	int3   
   14002d8fc:	mov    QWORD PTR [rsp+0x18],rbx
   14002d901:	push   rdi
   14002d902:	sub    rsp,0x80
   14002d909:	mov    rax,QWORD PTR [rip+0x1bb50]        # 0x140049460
   14002d910:	xor    rax,rsp
   14002d913:	mov    QWORD PTR [rsp+0x78],rax
   14002d918:	mov    rdi,rcx
   14002d91b:	mov    rbx,rdx
   14002d91e:	lea    rcx,[rsp+0x40]
   14002d923:	mov    rdx,r8
   14002d926:	call   0x14001cf30
   14002d92b:	lea    r11,[rsp+0x40]
   14002d930:	lea    rdx,[rsp+0x60]
   14002d935:	mov    QWORD PTR [rsp+0x38],r11
   14002d93a:	and    DWORD PTR [rsp+0x30],0x0
   14002d93f:	and    DWORD PTR [rsp+0x28],0x0
   14002d944:	and    DWORD PTR [rsp+0x20],0x0
   14002d949:	lea    rcx,[rsp+0x68]
   14002d94e:	xor    r9d,r9d
   14002d951:	mov    r8,rbx
   14002d954:	call   0x14002e888
   14002d959:	lea    rcx,[rsp+0x68]
   14002d95e:	mov    rdx,rdi
   14002d961:	mov    ebx,eax
   14002d963:	call   0x14002e284
   14002d968:	mov    edx,0x3
   14002d96d:	test   dl,bl
   14002d96f:	jne    0x14002d9ac
   14002d971:	cmp    eax,0x1
   14002d974:	jne    0x14002d98d
   14002d976:	cmp    BYTE PTR [rsp+0x58],0x0
   14002d97b:	je     0x14002d989
   14002d97d:	mov    rcx,QWORD PTR [rsp+0x50]
   14002d982:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002d989:	mov    eax,edx
   14002d98b:	jmp    0x14002d9e0
   14002d98d:	cmp    eax,0x2
   14002d990:	jne    0x14002d9cb
   14002d992:	cmp    BYTE PTR [rsp+0x58],0x0
   14002d997:	je     0x14002d9a5
   14002d999:	mov    rax,QWORD PTR [rsp+0x50]
   14002d99e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002d9a5:	mov    eax,0x4
   14002d9aa:	jmp    0x14002d9e0
   14002d9ac:	test   bl,0x1
   14002d9af:	jne    0x14002d992
   14002d9b1:	test   bl,0x2
   14002d9b4:	je     0x14002d9cb
   14002d9b6:	cmp    BYTE PTR [rsp+0x58],0x0
   14002d9bb:	je     0x14002d989
   14002d9bd:	mov    rax,QWORD PTR [rsp+0x50]
   14002d9c2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002d9c9:	jmp    0x14002d989
   14002d9cb:	cmp    BYTE PTR [rsp+0x58],0x0
   14002d9d0:	je     0x14002d9de
   14002d9d2:	mov    rax,QWORD PTR [rsp+0x50]
   14002d9d7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002d9de:	xor    eax,eax
   14002d9e0:	mov    rcx,QWORD PTR [rsp+0x78]
   14002d9e5:	xor    rcx,rsp
   14002d9e8:	call   0x14001c500
   14002d9ed:	mov    rbx,QWORD PTR [rsp+0xa0]
   14002d9f5:	add    rsp,0x80
   14002d9fc:	pop    rdi
   14002d9fd:	ret    
   14002d9fe:	int3   
   14002d9ff:	int3   
   14002da00:	mov    QWORD PTR [rsp+0x8],rbx
   14002da05:	push   rdi
   14002da06:	sub    rsp,0x30
   14002da0a:	mov    r10,QWORD PTR [r9+0x10]
   14002da0e:	mov    rbx,rcx
   14002da11:	test   rcx,rcx
   14002da14:	jne    0x14002da3e
   14002da16:	call   0x140020aa4
   14002da1b:	mov    ebx,0x16
   14002da20:	and    QWORD PTR [rsp+0x20],0x0
   14002da26:	xor    r9d,r9d
   14002da29:	xor    r8d,r8d
   14002da2c:	xor    edx,edx
   14002da2e:	xor    ecx,ecx
   14002da30:	mov    DWORD PTR [rax],ebx
   14002da32:	call   0x14001ccf0
   14002da37:	mov    eax,ebx
   14002da39:	jmp    0x14002dace
   14002da3e:	test   rdx,rdx
   14002da41:	je     0x14002da16
   14002da43:	xor    eax,eax
   14002da45:	test   r8d,r8d
   14002da48:	mov    BYTE PTR [rcx],0x0
   14002da4b:	cmovg  eax,r8d
   14002da4f:	inc    eax
   14002da51:	cdqe   
   14002da53:	cmp    rdx,rax
   14002da56:	ja     0x14002da64
   14002da58:	call   0x140020aa4
   14002da5d:	mov    ebx,0x22
   14002da62:	jmp    0x14002da20
   14002da64:	mov    BYTE PTR [rcx],0x30
   14002da67:	lea    rax,[rcx+0x1]
   14002da6b:	jmp    0x14002da89
   14002da6d:	cmp    BYTE PTR [r10],0x0
   14002da71:	je     0x14002da7c
   14002da73:	movsx  ecx,BYTE PTR [r10]
   14002da77:	inc    r10
   14002da7a:	jmp    0x14002da81
   14002da7c:	mov    ecx,0x30
   14002da81:	mov    BYTE PTR [rax],cl
   14002da83:	inc    rax
   14002da86:	dec    r8d
   14002da89:	test   r8d,r8d
   14002da8c:	jg     0x14002da6d
   14002da8e:	mov    BYTE PTR [rax],0x0
   14002da91:	js     0x14002daa8
   14002da93:	cmp    BYTE PTR [r10],0x35
   14002da97:	jl     0x14002daa8
   14002da99:	jmp    0x14002da9e
   14002da9b:	mov    BYTE PTR [rax],0x30
   14002da9e:	dec    rax
   14002daa1:	cmp    BYTE PTR [rax],0x39
   14002daa4:	je     0x14002da9b
   14002daa6:	inc    BYTE PTR [rax]
   14002daa8:	cmp    BYTE PTR [rbx],0x31
   14002daab:	jne    0x14002dab3
   14002daad:	inc    DWORD PTR [r9+0x4]
   14002dab1:	jmp    0x14002dacc
   14002dab3:	lea    rcx,[rbx+0x1]
   14002dab7:	call   0x14001c650
   14002dabc:	lea    rdx,[rbx+0x1]
   14002dac0:	mov    rcx,rbx
   14002dac3:	lea    r8,[rax+0x1]
   14002dac7:	call   0x1400205b0
   14002dacc:	xor    eax,eax
   14002dace:	mov    rbx,QWORD PTR [rsp+0x40]
   14002dad3:	add    rsp,0x30
   14002dad7:	pop    rdi
   14002dad8:	ret    
   14002dad9:	int3   
   14002dada:	int3   
   14002dadb:	int3   
   14002dadc:	mov    QWORD PTR [rsp+0x8],rbx
   14002dae1:	mov    QWORD PTR [rsp+0x10],rdi
   14002dae6:	movzx  r10d,WORD PTR [rdx+0x6]
   14002daeb:	mov    r11d,DWORD PTR [rdx+0x4]
   14002daef:	mov    eax,0x8000
   14002daf4:	mov    r8w,r10w
   14002daf8:	and    r10w,ax
   14002dafc:	mov    edi,0x7ff
   14002db01:	shr    r8w,0x4
   14002db06:	and    r11d,0xfffff
   14002db0d:	mov    r9,rcx
   14002db10:	mov    ecx,DWORD PTR [rdx]
   14002db12:	and    r8w,di
   14002db16:	mov    ebx,0x80000000
   14002db1b:	movzx  eax,r8w
   14002db1f:	test   eax,eax
   14002db21:	je     0x14002db3a
   14002db23:	cmp    eax,edi
   14002db25:	je     0x14002db32
   14002db27:	mov    eax,0x3c00
   14002db2c:	add    r8w,ax
   14002db30:	jmp    0x14002db57
   14002db32:	mov    r8d,0x7fff
   14002db38:	jmp    0x14002db57
   14002db3a:	test   r11d,r11d
   14002db3d:	jne    0x14002db4c
   14002db3f:	test   ecx,ecx
   14002db41:	jne    0x14002db4c
   14002db43:	and    DWORD PTR [r9+0x4],ecx
   14002db47:	and    DWORD PTR [r9],ecx
   14002db4a:	jmp    0x14002dba2
   14002db4c:	mov    eax,0x3c01
   14002db51:	add    r8w,ax
   14002db55:	xor    ebx,ebx
   14002db57:	mov    eax,ecx
   14002db59:	shl    r11d,0xb
   14002db5d:	shl    ecx,0xb
   14002db60:	shr    eax,0x15
   14002db63:	mov    DWORD PTR [r9],ecx
   14002db66:	or     eax,r11d
   14002db69:	or     eax,ebx
   14002db6b:	bt     eax,0x1f
   14002db6f:	mov    DWORD PTR [r9+0x4],eax
   14002db73:	jb     0x14002db9e
   14002db75:	mov    ecx,DWORD PTR [r9]
   14002db78:	mov    edx,DWORD PTR [r9+0x4]
   14002db7c:	add    edx,edx
   14002db7e:	mov    eax,ecx
   14002db80:	shr    eax,0x1f
   14002db83:	or     edx,eax
   14002db85:	lea    eax,[rcx+rcx*1]
   14002db88:	mov    DWORD PTR [r9],eax
   14002db8b:	mov    eax,0xffff
   14002db90:	mov    DWORD PTR [r9+0x4],edx
   14002db94:	add    r8w,ax
   14002db98:	bt     edx,0x1f
   14002db9c:	jae    0x14002db75
   14002db9e:	or     r10w,r8w
   14002dba2:	mov    rbx,QWORD PTR [rsp+0x8]
   14002dba7:	mov    rdi,QWORD PTR [rsp+0x10]
   14002dbac:	mov    WORD PTR [r9+0x8],r10w
   14002dbb1:	ret    
   14002dbb2:	int3   
   14002dbb3:	int3   
   14002dbb4:	rex push rbx
   14002dbb6:	push   rsi
   14002dbb7:	push   rdi
   14002dbb8:	sub    rsp,0x80
   14002dbbf:	mov    rax,QWORD PTR [rip+0x1b89a]        # 0x140049460
   14002dbc6:	xor    rax,rsp
   14002dbc9:	mov    QWORD PTR [rsp+0x70],rax
   14002dbce:	mov    rdi,rdx
   14002dbd1:	mov    QWORD PTR [rsp+0x30],rcx
   14002dbd6:	lea    rdx,[rsp+0x30]
   14002dbdb:	lea    rcx,[rsp+0x40]
   14002dbe0:	mov    rbx,r9
   14002dbe3:	mov    rsi,r8
   14002dbe6:	call   0x14002dadc
   14002dbeb:	lea    rcx,[rsp+0x40]
   14002dbf0:	lea    r11,[rsp+0x30]
   14002dbf5:	mov    rax,QWORD PTR [rcx]
   14002dbf8:	xor    r8d,r8d
   14002dbfb:	lea    r9,[rsp+0x50]
   14002dc00:	mov    QWORD PTR [r11],rax
   14002dc03:	movzx  eax,WORD PTR [rcx+0x8]
   14002dc07:	lea    edx,[r8+0x11]
   14002dc0b:	lea    rcx,[rsp+0x30]
   14002dc10:	mov    WORD PTR [r11+0x8],ax
   14002dc15:	call   0x140030040
   14002dc1a:	lea    r8,[rsp+0x54]
   14002dc1f:	mov    rdx,rbx
   14002dc22:	mov    DWORD PTR [rdi+0x8],eax
   14002dc25:	movsx  eax,BYTE PTR [rsp+0x52]
   14002dc2a:	mov    rcx,rsi
   14002dc2d:	mov    DWORD PTR [rdi],eax
   14002dc2f:	movsx  eax,WORD PTR [rsp+0x50]
   14002dc34:	mov    DWORD PTR [rdi+0x4],eax
   14002dc37:	call   0x140023db4
   14002dc3c:	test   eax,eax
   14002dc3e:	je     0x14002dc55
   14002dc40:	and    QWORD PTR [rsp+0x20],0x0
   14002dc46:	xor    r9d,r9d
   14002dc49:	xor    r8d,r8d
   14002dc4c:	xor    edx,edx
   14002dc4e:	xor    ecx,ecx
   14002dc50:	call   0x14001cbc8
   14002dc55:	mov    QWORD PTR [rdi+0x10],rsi
   14002dc59:	mov    rax,rdi
   14002dc5c:	mov    rcx,QWORD PTR [rsp+0x70]
   14002dc61:	xor    rcx,rsp
   14002dc64:	call   0x14001c500
   14002dc69:	add    rsp,0x80
   14002dc70:	pop    rdi
   14002dc71:	pop    rsi
   14002dc72:	pop    rbx
   14002dc73:	ret    
   14002dc74:	mov    ecx,0x2
   14002dc79:	jmp    0x140024398
   14002dc7e:	int3   
   14002dc7f:	int3   
   14002dc80:	mov    QWORD PTR [rsp+0x10],rdx
   14002dc85:	push   rbx
   14002dc86:	push   rsi
   14002dc87:	push   rdi
   14002dc88:	push   r12
   14002dc8a:	push   r13
   14002dc8c:	push   r14
   14002dc8e:	push   r15
   14002dc90:	sub    rsp,0x40
   14002dc94:	movzx  eax,WORD PTR [rcx+0xa]
   14002dc98:	xor    ebx,ebx
   14002dc9a:	mov    r15d,0x1f
   14002dca0:	mov    edi,eax
   14002dca2:	and    eax,0x8000
   14002dca7:	lea    esi,[rbx+0x1]
   14002dcaa:	mov    DWORD PTR [rsp+0x80],eax
   14002dcb1:	mov    eax,DWORD PTR [rcx+0x6]
   14002dcb4:	and    edi,0x7fff
   14002dcba:	mov    DWORD PTR [rsp+0x20],eax
   14002dcbe:	mov    eax,DWORD PTR [rcx+0x2]
   14002dcc1:	sub    edi,0x3fff
   14002dcc7:	mov    DWORD PTR [rsp+0x24],eax
   14002dccb:	movzx  eax,WORD PTR [rcx]
   14002dcce:	shl    eax,0x10
   14002dcd1:	mov    DWORD PTR [rsp+0x28],eax
   14002dcd5:	cmp    edi,0xffffc001
   14002dcdb:	jne    0x14002dd0a
   14002dcdd:	mov    r8d,ebx
   14002dce0:	mov    rax,rbx
   14002dce3:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   14002dce7:	jne    0x14002dcf7
   14002dce9:	add    rax,rsi
   14002dcec:	cmp    rax,0x3
   14002dcf0:	jl     0x14002dce3
   14002dcf2:	jmp    0x14002e22f
   14002dcf7:	mov    QWORD PTR [rsp+0x20],rbx
   14002dcfc:	mov    DWORD PTR [rsp+0x28],ebx
   14002dd00:	mov    ebx,0x2
   14002dd05:	jmp    0x14002e22f
   14002dd0a:	mov    r9d,DWORD PTR [rip+0x1c927]        # 0x14004a638
   14002dd11:	lea    rcx,[rsp+0x20]
   14002dd16:	mov    r11d,r15d
   14002dd19:	mov    rax,QWORD PTR [rcx]
   14002dd1c:	or     r13d,0xffffffff
   14002dd20:	mov    DWORD PTR [rsp+0x90],edi
   14002dd27:	mov    QWORD PTR [rsp+0x30],rax
   14002dd2c:	mov    eax,DWORD PTR [rcx+0x8]
   14002dd2f:	mov    r12d,ebx
   14002dd32:	mov    DWORD PTR [rsp+0x38],eax
   14002dd36:	mov    eax,r9d
   14002dd39:	cdq    
   14002dd3a:	and    edx,r15d
   14002dd3d:	add    eax,edx
   14002dd3f:	mov    r10d,eax
   14002dd42:	and    eax,r15d
   14002dd45:	sar    r10d,0x5
   14002dd49:	sub    eax,edx
   14002dd4b:	movsxd r14,r10d
   14002dd4e:	sub    r11d,eax
   14002dd51:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   14002dd56:	bt     ecx,r11d
   14002dd5a:	jae    0x14002ddf9
   14002dd60:	mov    ecx,r11d
   14002dd63:	mov    eax,r13d
   14002dd66:	movsxd r8,r10d
   14002dd69:	shl    eax,cl
   14002dd6b:	not    eax
   14002dd6d:	test   DWORD PTR [rsp+r8*4+0x20],eax
   14002dd72:	jne    0x14002dd8d
   14002dd74:	lea    eax,[rsi+r8*1]
   14002dd78:	cdqe   
   14002dd7a:	jmp    0x14002dd85
   14002dd7c:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   14002dd80:	jne    0x14002dd8d
   14002dd82:	add    rax,rsi
   14002dd85:	cmp    rax,0x3
   14002dd89:	jl     0x14002dd7c
   14002dd8b:	jmp    0x14002ddf9
   14002dd8d:	lea    eax,[r9-0x1]
   14002dd91:	mov    ecx,r15d
   14002dd94:	cdq    
   14002dd95:	and    edx,r15d
   14002dd98:	add    eax,edx
   14002dd9a:	mov    r8d,eax
   14002dd9d:	and    eax,r15d
   14002dda0:	sub    eax,edx
   14002dda2:	sar    r8d,0x5
   14002dda6:	mov    edx,esi
   14002dda8:	sub    ecx,eax
   14002ddaa:	movsxd r9,r8d
   14002ddad:	mov    eax,DWORD PTR [rsp+r9*4+0x20]
   14002ddb2:	shl    edx,cl
   14002ddb4:	lea    ecx,[rax+rdx*1]
   14002ddb7:	cmp    ecx,eax
   14002ddb9:	jb     0x14002ddbf
   14002ddbb:	cmp    ecx,edx
   14002ddbd:	jae    0x14002ddc2
   14002ddbf:	mov    r12d,esi
   14002ddc2:	sub    r8d,esi
   14002ddc5:	mov    DWORD PTR [rsp+r9*4+0x20],ecx
   14002ddca:	movsxd rdx,r8d
   14002ddcd:	cmp    rdx,rbx
   14002ddd0:	jl     0x14002ddf9
   14002ddd2:	cmp    r12d,ebx
   14002ddd5:	je     0x14002ddf9
   14002ddd7:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   14002dddb:	mov    r12d,ebx
   14002ddde:	lea    r8d,[rax+0x1]
   14002dde2:	cmp    r8d,eax
   14002dde5:	jb     0x14002ddec
   14002dde7:	cmp    r8d,esi
   14002ddea:	jae    0x14002ddef
   14002ddec:	mov    r12d,esi
   14002ddef:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14002ddf4:	sub    rdx,rsi
   14002ddf7:	jns    0x14002ddd2
   14002ddf9:	mov    ecx,r11d
   14002ddfc:	mov    eax,r13d
   14002ddff:	shl    eax,cl
   14002de01:	and    DWORD PTR [rsp+r14*4+0x20],eax
   14002de06:	lea    eax,[r10+0x1]
   14002de0a:	movsxd rdx,eax
   14002de0d:	cmp    rdx,0x3
   14002de11:	jge    0x14002de2c
   14002de13:	lea    rcx,[rsp+rdx*4+0x20]
   14002de18:	mov    r8d,0x3
   14002de1e:	sub    r8,rdx
   14002de21:	xor    edx,edx
   14002de23:	shl    r8,0x2
   14002de27:	call   0x14001c730
   14002de2c:	cmp    r12d,ebx
   14002de2f:	je     0x14002de33
   14002de31:	add    edi,esi
   14002de33:	mov    edx,DWORD PTR [rip+0x1c7fb]        # 0x14004a634
   14002de39:	mov    eax,edx
   14002de3b:	sub    eax,DWORD PTR [rip+0x1c7f7]        # 0x14004a638
   14002de41:	cmp    edi,eax
   14002de43:	jge    0x14002de5b
   14002de45:	mov    QWORD PTR [rsp+0x20],rbx
   14002de4a:	mov    DWORD PTR [rsp+0x28],ebx
   14002de4e:	mov    r8d,ebx
   14002de51:	mov    ebx,0x2
   14002de56:	jmp    0x14002e227
   14002de5b:	cmp    edi,edx
   14002de5d:	jg     0x14002e0c0
   14002de63:	sub    edx,DWORD PTR [rsp+0x90]
   14002de6a:	lea    rax,[rsp+0x30]
   14002de6f:	mov    r11d,r13d
   14002de72:	mov    rcx,QWORD PTR [rax]
   14002de75:	mov    r12d,0x20
   14002de7b:	mov    r9d,ebx
   14002de7e:	mov    QWORD PTR [rsp+0x20],rcx
   14002de83:	mov    ecx,DWORD PTR [rax+0x8]
   14002de86:	mov    eax,edx
   14002de88:	cdq    
   14002de89:	mov    DWORD PTR [rsp+0x28],ecx
   14002de8d:	mov    r8,rbx
   14002de90:	and    edx,r15d
   14002de93:	add    eax,edx
   14002de95:	mov    r10d,eax
   14002de98:	and    eax,r15d
   14002de9b:	sub    eax,edx
   14002de9d:	sar    r10d,0x5
   14002dea1:	mov    ecx,eax
   14002dea3:	mov    edi,eax
   14002dea5:	shl    r11d,cl
   14002dea8:	sub    r12d,eax
   14002deab:	not    r11d
   14002deae:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14002deb3:	mov    ecx,edi
   14002deb5:	mov    eax,edx
   14002deb7:	shr    edx,cl
   14002deb9:	mov    ecx,r12d
   14002debc:	or     edx,r9d
   14002debf:	and    eax,r11d
   14002dec2:	mov    DWORD PTR [rsp+0x90],eax
   14002dec9:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   14002dece:	add    r8,rsi
   14002ded1:	mov    r9d,DWORD PTR [rsp+0x90]
   14002ded9:	shl    r9d,cl
   14002dedc:	cmp    r8,0x3
   14002dee0:	jl     0x14002deae
   14002dee2:	movsxd r8,r10d
   14002dee5:	lea    rdx,[rsp+0x28]
   14002deea:	mov    edi,0x2
   14002deef:	mov    rax,r8
   14002def2:	mov    rcx,rdi
   14002def5:	shl    rax,0x2
   14002def9:	sub    rdx,rax
   14002defc:	cmp    rcx,r8
   14002deff:	jl     0x14002df09
   14002df01:	mov    eax,DWORD PTR [rdx]
   14002df03:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14002df07:	jmp    0x14002df0d
   14002df09:	mov    DWORD PTR [rsp+rcx*4+0x20],ebx
   14002df0d:	sub    rcx,rsi
   14002df10:	sub    rdx,0x4
   14002df14:	cmp    rcx,rbx
   14002df17:	jge    0x14002defc
   14002df19:	mov    r9d,DWORD PTR [rip+0x1c718]        # 0x14004a638
   14002df20:	mov    r12d,r15d
   14002df23:	mov    eax,r9d
   14002df26:	cdq    
   14002df27:	and    edx,r15d
   14002df2a:	add    eax,edx
   14002df2c:	mov    r11d,eax
   14002df2f:	and    eax,r15d
   14002df32:	sar    r11d,0x5
   14002df36:	sub    eax,edx
   14002df38:	movsxd r14,r11d
   14002df3b:	sub    r12d,eax
   14002df3e:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   14002df43:	bt     ecx,r12d
   14002df47:	jae    0x14002dfe8
   14002df4d:	mov    ecx,r12d
   14002df50:	mov    eax,r13d
   14002df53:	movsxd r8,r11d
   14002df56:	shl    eax,cl
   14002df58:	not    eax
   14002df5a:	test   DWORD PTR [rsp+r8*4+0x20],eax
   14002df5f:	jne    0x14002df7a
   14002df61:	lea    eax,[rsi+r8*1]
   14002df65:	cdqe   
   14002df67:	jmp    0x14002df72
   14002df69:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   14002df6d:	jne    0x14002df7a
   14002df6f:	add    rax,rsi
   14002df72:	cmp    rax,0x3
   14002df76:	jl     0x14002df69
   14002df78:	jmp    0x14002dfe8
   14002df7a:	lea    eax,[r9-0x1]
   14002df7e:	mov    ecx,r15d
   14002df81:	mov    r9d,esi
   14002df84:	cdq    
   14002df85:	and    edx,r15d
   14002df88:	add    eax,edx
   14002df8a:	mov    r8d,eax
   14002df8d:	and    eax,r15d
   14002df90:	sub    eax,edx
   14002df92:	sar    r8d,0x5
   14002df96:	sub    ecx,eax
   14002df98:	movsxd r10,r8d
   14002df9b:	mov    eax,DWORD PTR [rsp+r10*4+0x20]
   14002dfa0:	shl    r9d,cl
   14002dfa3:	mov    ecx,ebx
   14002dfa5:	lea    edx,[rax+r9*1]
   14002dfa9:	cmp    edx,eax
   14002dfab:	jb     0x14002dfb2
   14002dfad:	cmp    edx,r9d
   14002dfb0:	jae    0x14002dfb4
   14002dfb2:	mov    ecx,esi
   14002dfb4:	sub    r8d,esi
   14002dfb7:	mov    DWORD PTR [rsp+r10*4+0x20],edx
   14002dfbc:	movsxd rdx,r8d
   14002dfbf:	cmp    rdx,rbx
   14002dfc2:	jl     0x14002dfe8
   14002dfc4:	cmp    ecx,ebx
   14002dfc6:	je     0x14002dfe8
   14002dfc8:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   14002dfcc:	mov    ecx,ebx
   14002dfce:	lea    r8d,[rax+0x1]
   14002dfd2:	cmp    r8d,eax
   14002dfd5:	jb     0x14002dfdc
   14002dfd7:	cmp    r8d,esi
   14002dfda:	jae    0x14002dfde
   14002dfdc:	mov    ecx,esi
   14002dfde:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14002dfe3:	sub    rdx,rsi
   14002dfe6:	jns    0x14002dfc4
   14002dfe8:	mov    ecx,r12d
   14002dfeb:	mov    eax,r13d
   14002dfee:	shl    eax,cl
   14002dff0:	and    DWORD PTR [rsp+r14*4+0x20],eax
   14002dff5:	lea    eax,[r11+0x1]
   14002dff9:	movsxd rdx,eax
   14002dffc:	cmp    rdx,0x3
   14002e000:	jge    0x14002e01b
   14002e002:	lea    rcx,[rsp+rdx*4+0x20]
   14002e007:	mov    r8d,0x3
   14002e00d:	sub    r8,rdx
   14002e010:	xor    edx,edx
   14002e012:	shl    r8,0x2
   14002e016:	call   0x14001c730
   14002e01b:	mov    eax,DWORD PTR [rip+0x1c61b]        # 0x14004a63c
   14002e021:	mov    r12d,0x20
   14002e027:	mov    r9d,ebx
   14002e02a:	inc    eax
   14002e02c:	mov    r8,rbx
   14002e02f:	cdq    
   14002e030:	and    edx,r15d
   14002e033:	add    eax,edx
   14002e035:	mov    r10d,eax
   14002e038:	and    eax,r15d
   14002e03b:	sub    eax,edx
   14002e03d:	sar    r10d,0x5
   14002e041:	mov    ecx,eax
   14002e043:	mov    r11d,eax
   14002e046:	shl    r13d,cl
   14002e049:	sub    r12d,eax
   14002e04c:	not    r13d
   14002e04f:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14002e054:	mov    ecx,r11d
   14002e057:	mov    eax,edx
   14002e059:	shr    edx,cl
   14002e05b:	mov    ecx,r12d
   14002e05e:	or     edx,r9d
   14002e061:	and    eax,r13d
   14002e064:	mov    DWORD PTR [rsp+0x90],eax
   14002e06b:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   14002e070:	add    r8,rsi
   14002e073:	mov    r9d,DWORD PTR [rsp+0x90]
   14002e07b:	shl    r9d,cl
   14002e07e:	cmp    r8,0x3
   14002e082:	jl     0x14002e04f
   14002e084:	movsxd r8,r10d
   14002e087:	lea    rdx,[rsp+0x28]
   14002e08c:	mov    rcx,rdi
   14002e08f:	mov    rax,r8
   14002e092:	shl    rax,0x2
   14002e096:	sub    rdx,rax
   14002e099:	cmp    rcx,r8
   14002e09c:	jl     0x14002e0a6
   14002e09e:	mov    eax,DWORD PTR [rdx]
   14002e0a0:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14002e0a4:	jmp    0x14002e0aa
   14002e0a6:	mov    DWORD PTR [rsp+rcx*4+0x20],ebx
   14002e0aa:	sub    rcx,rsi
   14002e0ad:	sub    rdx,0x4
   14002e0b1:	cmp    rcx,rbx
   14002e0b4:	jge    0x14002e099
   14002e0b6:	mov    r8d,ebx
   14002e0b9:	mov    ebx,edi
   14002e0bb:	jmp    0x14002e227
   14002e0c0:	mov    eax,DWORD PTR [rip+0x1c576]        # 0x14004a63c
   14002e0c6:	cdq    
   14002e0c7:	and    edx,r15d
   14002e0ca:	add    eax,edx
   14002e0cc:	cmp    edi,DWORD PTR [rip+0x1c55e]        # 0x14004a630
   14002e0d2:	jl     0x14002e18a
   14002e0d8:	mov    r10d,eax
   14002e0db:	and    eax,r15d
   14002e0de:	mov    edi,0x20
   14002e0e3:	sub    eax,edx
   14002e0e5:	mov    QWORD PTR [rsp+0x20],rbx
   14002e0ea:	bts    DWORD PTR [rsp+0x20],0x1f
   14002e0f0:	mov    ecx,eax
   14002e0f2:	sar    r10d,0x5
   14002e0f6:	mov    DWORD PTR [rsp+0x28],ebx
   14002e0fa:	shl    r13d,cl
   14002e0fd:	mov    r11d,eax
   14002e100:	mov    r9d,ebx
   14002e103:	not    r13d
   14002e106:	mov    r8,rbx
   14002e109:	sub    edi,eax
   14002e10b:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14002e110:	mov    ecx,r11d
   14002e113:	mov    eax,r13d
   14002e116:	and    eax,edx
   14002e118:	shr    edx,cl
   14002e11a:	mov    ecx,edi
   14002e11c:	or     edx,r9d
   14002e11f:	mov    DWORD PTR [rsp+0x90],eax
   14002e126:	mov    r9d,DWORD PTR [rsp+0x90]
   14002e12e:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   14002e133:	add    r8,rsi
   14002e136:	shl    r9d,cl
   14002e139:	cmp    r8,0x3
   14002e13d:	jl     0x14002e10b
   14002e13f:	movsxd rdx,r10d
   14002e142:	lea    rcx,[rsp+0x28]
   14002e147:	mov    edi,0x2
   14002e14c:	mov    rax,rdx
   14002e14f:	shl    rax,0x2
   14002e153:	sub    rcx,rax
   14002e156:	cmp    rdi,rdx
   14002e159:	jl     0x14002e163
   14002e15b:	mov    eax,DWORD PTR [rcx]
   14002e15d:	mov    DWORD PTR [rsp+rdi*4+0x20],eax
   14002e161:	jmp    0x14002e167
   14002e163:	mov    DWORD PTR [rsp+rdi*4+0x20],ebx
   14002e167:	sub    rdi,rsi
   14002e16a:	sub    rcx,0x4
   14002e16e:	cmp    rdi,rbx
   14002e171:	jge    0x14002e156
   14002e173:	mov    ecx,DWORD PTR [rip+0x1c4b7]        # 0x14004a630
   14002e179:	mov    r8d,DWORD PTR [rip+0x1c4c4]        # 0x14004a644
   14002e180:	mov    ebx,esi
   14002e182:	add    r8d,ecx
   14002e185:	jmp    0x14002e227
   14002e18a:	mov    r8d,DWORD PTR [rip+0x1c4b3]        # 0x14004a644
   14002e191:	btr    DWORD PTR [rsp+0x20],0x1f
   14002e197:	mov    r11d,eax
   14002e19a:	and    eax,r15d
   14002e19d:	add    r8d,edi
   14002e1a0:	mov    r12d,0x20
   14002e1a6:	sub    eax,edx
   14002e1a8:	sar    r11d,0x5
   14002e1ac:	mov    r10d,ebx
   14002e1af:	mov    ecx,eax
   14002e1b1:	mov    edi,eax
   14002e1b3:	mov    r9,rbx
   14002e1b6:	shl    r13d,cl
   14002e1b9:	sub    r12d,eax
   14002e1bc:	not    r13d
   14002e1bf:	mov    edx,DWORD PTR [rsp+r9*4+0x20]
   14002e1c4:	mov    ecx,edi
   14002e1c6:	mov    eax,r13d
   14002e1c9:	and    eax,edx
   14002e1cb:	shr    edx,cl
   14002e1cd:	mov    ecx,r12d
   14002e1d0:	or     edx,r10d
   14002e1d3:	mov    DWORD PTR [rsp+0x90],eax
   14002e1da:	mov    r10d,DWORD PTR [rsp+0x90]
   14002e1e2:	mov    DWORD PTR [rsp+r9*4+0x20],edx
   14002e1e7:	add    r9,rsi
   14002e1ea:	shl    r10d,cl
   14002e1ed:	cmp    r9,0x3
   14002e1f1:	jl     0x14002e1bf
   14002e1f3:	movsxd rdx,r11d
   14002e1f6:	lea    rcx,[rsp+0x28]
   14002e1fb:	mov    edi,0x2
   14002e200:	mov    rax,rdx
   14002e203:	shl    rax,0x2
   14002e207:	sub    rcx,rax
   14002e20a:	cmp    rdi,rdx
   14002e20d:	jl     0x14002e217
   14002e20f:	mov    eax,DWORD PTR [rcx]
   14002e211:	mov    DWORD PTR [rsp+rdi*4+0x20],eax
   14002e215:	jmp    0x14002e21b
   14002e217:	mov    DWORD PTR [rsp+rdi*4+0x20],ebx
   14002e21b:	sub    rdi,rsi
   14002e21e:	sub    rcx,0x4
   14002e222:	cmp    rdi,rbx
   14002e225:	jge    0x14002e20a
   14002e227:	mov    rdx,QWORD PTR [rsp+0x88]
   14002e22f:	sub    r15d,DWORD PTR [rip+0x1c406]        # 0x14004a63c
   14002e236:	mov    cl,r15b
   14002e239:	shl    r8d,cl
   14002e23c:	neg    DWORD PTR [rsp+0x80]
   14002e243:	sbb    eax,eax
   14002e245:	and    eax,0x80000000
   14002e24a:	or     r8d,eax
   14002e24d:	mov    eax,DWORD PTR [rip+0x1c3ed]        # 0x14004a640
   14002e253:	or     r8d,DWORD PTR [rsp+0x20]
   14002e258:	cmp    eax,0x40
   14002e25b:	jne    0x14002e269
   14002e25d:	mov    eax,DWORD PTR [rsp+0x24]
   14002e261:	mov    DWORD PTR [rdx+0x4],r8d
   14002e265:	mov    DWORD PTR [rdx],eax
   14002e267:	jmp    0x14002e271
   14002e269:	cmp    eax,0x20
   14002e26c:	jne    0x14002e271
   14002e26e:	mov    DWORD PTR [rdx],r8d
   14002e271:	mov    eax,ebx
   14002e273:	add    rsp,0x40
   14002e277:	pop    r15
   14002e279:	pop    r14
   14002e27b:	pop    r13
   14002e27d:	pop    r12
   14002e27f:	pop    rdi
   14002e280:	pop    rsi
   14002e281:	pop    rbx
   14002e282:	ret    
   14002e283:	int3   
   14002e284:	mov    QWORD PTR [rsp+0x10],rdx
   14002e289:	push   rbx
   14002e28a:	push   rsi
   14002e28b:	push   rdi
   14002e28c:	push   r12
   14002e28e:	push   r13
   14002e290:	push   r14
   14002e292:	push   r15
   14002e294:	sub    rsp,0x40
   14002e298:	movzx  eax,WORD PTR [rcx+0xa]
   14002e29c:	xor    ebx,ebx
   14002e29e:	mov    r15d,0x1f
   14002e2a4:	mov    edi,eax
   14002e2a6:	and    eax,0x8000
   14002e2ab:	lea    esi,[rbx+0x1]
   14002e2ae:	mov    DWORD PTR [rsp+0x80],eax
   14002e2b5:	mov    eax,DWORD PTR [rcx+0x6]
   14002e2b8:	and    edi,0x7fff
   14002e2be:	mov    DWORD PTR [rsp+0x20],eax
   14002e2c2:	mov    eax,DWORD PTR [rcx+0x2]
   14002e2c5:	sub    edi,0x3fff
   14002e2cb:	mov    DWORD PTR [rsp+0x24],eax
   14002e2cf:	movzx  eax,WORD PTR [rcx]
   14002e2d2:	shl    eax,0x10
   14002e2d5:	mov    DWORD PTR [rsp+0x28],eax
   14002e2d9:	cmp    edi,0xffffc001
   14002e2df:	jne    0x14002e30e
   14002e2e1:	mov    r8d,ebx
   14002e2e4:	mov    rax,rbx
   14002e2e7:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   14002e2eb:	jne    0x14002e2fb
   14002e2ed:	add    rax,rsi
   14002e2f0:	cmp    rax,0x3
   14002e2f4:	jl     0x14002e2e7
   14002e2f6:	jmp    0x14002e833
   14002e2fb:	mov    QWORD PTR [rsp+0x20],rbx
   14002e300:	mov    DWORD PTR [rsp+0x28],ebx
   14002e304:	mov    ebx,0x2
   14002e309:	jmp    0x14002e833
   14002e30e:	mov    r9d,DWORD PTR [rip+0x1c33b]        # 0x14004a650
   14002e315:	lea    rcx,[rsp+0x20]
   14002e31a:	mov    r11d,r15d
   14002e31d:	mov    rax,QWORD PTR [rcx]
   14002e320:	or     r13d,0xffffffff
   14002e324:	mov    DWORD PTR [rsp+0x90],edi
   14002e32b:	mov    QWORD PTR [rsp+0x30],rax
   14002e330:	mov    eax,DWORD PTR [rcx+0x8]
   14002e333:	mov    r12d,ebx
   14002e336:	mov    DWORD PTR [rsp+0x38],eax
   14002e33a:	mov    eax,r9d
   14002e33d:	cdq    
   14002e33e:	and    edx,r15d
   14002e341:	add    eax,edx
   14002e343:	mov    r10d,eax
   14002e346:	and    eax,r15d
   14002e349:	sar    r10d,0x5
   14002e34d:	sub    eax,edx
   14002e34f:	movsxd r14,r10d
   14002e352:	sub    r11d,eax
   14002e355:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   14002e35a:	bt     ecx,r11d
   14002e35e:	jae    0x14002e3fd
   14002e364:	mov    ecx,r11d
   14002e367:	mov    eax,r13d
   14002e36a:	movsxd r8,r10d
   14002e36d:	shl    eax,cl
   14002e36f:	not    eax
   14002e371:	test   DWORD PTR [rsp+r8*4+0x20],eax
   14002e376:	jne    0x14002e391
   14002e378:	lea    eax,[rsi+r8*1]
   14002e37c:	cdqe   
   14002e37e:	jmp    0x14002e389
   14002e380:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   14002e384:	jne    0x14002e391
   14002e386:	add    rax,rsi
   14002e389:	cmp    rax,0x3
   14002e38d:	jl     0x14002e380
   14002e38f:	jmp    0x14002e3fd
   14002e391:	lea    eax,[r9-0x1]
   14002e395:	mov    ecx,r15d
   14002e398:	cdq    
   14002e399:	and    edx,r15d
   14002e39c:	add    eax,edx
   14002e39e:	mov    r8d,eax
   14002e3a1:	and    eax,r15d
   14002e3a4:	sub    eax,edx
   14002e3a6:	sar    r8d,0x5
   14002e3aa:	mov    edx,esi
   14002e3ac:	sub    ecx,eax
   14002e3ae:	movsxd r9,r8d
   14002e3b1:	mov    eax,DWORD PTR [rsp+r9*4+0x20]
   14002e3b6:	shl    edx,cl
   14002e3b8:	lea    ecx,[rax+rdx*1]
   14002e3bb:	cmp    ecx,eax
   14002e3bd:	jb     0x14002e3c3
   14002e3bf:	cmp    ecx,edx
   14002e3c1:	jae    0x14002e3c6
   14002e3c3:	mov    r12d,esi
   14002e3c6:	sub    r8d,esi
   14002e3c9:	mov    DWORD PTR [rsp+r9*4+0x20],ecx
   14002e3ce:	movsxd rdx,r8d
   14002e3d1:	cmp    rdx,rbx
   14002e3d4:	jl     0x14002e3fd
   14002e3d6:	cmp    r12d,ebx
   14002e3d9:	je     0x14002e3fd
   14002e3db:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   14002e3df:	mov    r12d,ebx
   14002e3e2:	lea    r8d,[rax+0x1]
   14002e3e6:	cmp    r8d,eax
   14002e3e9:	jb     0x14002e3f0
   14002e3eb:	cmp    r8d,esi
   14002e3ee:	jae    0x14002e3f3
   14002e3f0:	mov    r12d,esi
   14002e3f3:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14002e3f8:	sub    rdx,rsi
   14002e3fb:	jns    0x14002e3d6
   14002e3fd:	mov    ecx,r11d
   14002e400:	mov    eax,r13d
   14002e403:	shl    eax,cl
   14002e405:	and    DWORD PTR [rsp+r14*4+0x20],eax
   14002e40a:	lea    eax,[r10+0x1]
   14002e40e:	movsxd rdx,eax
   14002e411:	cmp    rdx,0x3
   14002e415:	jge    0x14002e430
   14002e417:	lea    rcx,[rsp+rdx*4+0x20]
   14002e41c:	mov    r8d,0x3
   14002e422:	sub    r8,rdx
   14002e425:	xor    edx,edx
   14002e427:	shl    r8,0x2
   14002e42b:	call   0x14001c730
   14002e430:	cmp    r12d,ebx
   14002e433:	je     0x14002e437
   14002e435:	add    edi,esi
   14002e437:	mov    edx,DWORD PTR [rip+0x1c20f]        # 0x14004a64c
   14002e43d:	mov    eax,edx
   14002e43f:	sub    eax,DWORD PTR [rip+0x1c20b]        # 0x14004a650
   14002e445:	cmp    edi,eax
   14002e447:	jge    0x14002e45f
   14002e449:	mov    QWORD PTR [rsp+0x20],rbx
   14002e44e:	mov    DWORD PTR [rsp+0x28],ebx
   14002e452:	mov    r8d,ebx
   14002e455:	mov    ebx,0x2
   14002e45a:	jmp    0x14002e82b
   14002e45f:	cmp    edi,edx
   14002e461:	jg     0x14002e6c4
   14002e467:	sub    edx,DWORD PTR [rsp+0x90]
   14002e46e:	lea    rax,[rsp+0x30]
   14002e473:	mov    r11d,r13d
   14002e476:	mov    rcx,QWORD PTR [rax]
   14002e479:	mov    r12d,0x20
   14002e47f:	mov    r9d,ebx
   14002e482:	mov    QWORD PTR [rsp+0x20],rcx
   14002e487:	mov    ecx,DWORD PTR [rax+0x8]
   14002e48a:	mov    eax,edx
   14002e48c:	cdq    
   14002e48d:	mov    DWORD PTR [rsp+0x28],ecx
   14002e491:	mov    r8,rbx
   14002e494:	and    edx,r15d
   14002e497:	add    eax,edx
   14002e499:	mov    r10d,eax
   14002e49c:	and    eax,r15d
   14002e49f:	sub    eax,edx
   14002e4a1:	sar    r10d,0x5
   14002e4a5:	mov    ecx,eax
   14002e4a7:	mov    edi,eax
   14002e4a9:	shl    r11d,cl
   14002e4ac:	sub    r12d,eax
   14002e4af:	not    r11d
   14002e4b2:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14002e4b7:	mov    ecx,edi
   14002e4b9:	mov    eax,edx
   14002e4bb:	shr    edx,cl
   14002e4bd:	mov    ecx,r12d
   14002e4c0:	or     edx,r9d
   14002e4c3:	and    eax,r11d
   14002e4c6:	mov    DWORD PTR [rsp+0x90],eax
   14002e4cd:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   14002e4d2:	add    r8,rsi
   14002e4d5:	mov    r9d,DWORD PTR [rsp+0x90]
   14002e4dd:	shl    r9d,cl
   14002e4e0:	cmp    r8,0x3
   14002e4e4:	jl     0x14002e4b2
   14002e4e6:	movsxd r8,r10d
   14002e4e9:	lea    rdx,[rsp+0x28]
   14002e4ee:	mov    edi,0x2
   14002e4f3:	mov    rax,r8
   14002e4f6:	mov    rcx,rdi
   14002e4f9:	shl    rax,0x2
   14002e4fd:	sub    rdx,rax
   14002e500:	cmp    rcx,r8
   14002e503:	jl     0x14002e50d
   14002e505:	mov    eax,DWORD PTR [rdx]
   14002e507:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14002e50b:	jmp    0x14002e511
   14002e50d:	mov    DWORD PTR [rsp+rcx*4+0x20],ebx
   14002e511:	sub    rcx,rsi
   14002e514:	sub    rdx,0x4
   14002e518:	cmp    rcx,rbx
   14002e51b:	jge    0x14002e500
   14002e51d:	mov    r9d,DWORD PTR [rip+0x1c12c]        # 0x14004a650
   14002e524:	mov    r12d,r15d
   14002e527:	mov    eax,r9d
   14002e52a:	cdq    
   14002e52b:	and    edx,r15d
   14002e52e:	add    eax,edx
   14002e530:	mov    r11d,eax
   14002e533:	and    eax,r15d
   14002e536:	sar    r11d,0x5
   14002e53a:	sub    eax,edx
   14002e53c:	movsxd r14,r11d
   14002e53f:	sub    r12d,eax
   14002e542:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   14002e547:	bt     ecx,r12d
   14002e54b:	jae    0x14002e5ec
   14002e551:	mov    ecx,r12d
   14002e554:	mov    eax,r13d
   14002e557:	movsxd r8,r11d
   14002e55a:	shl    eax,cl
   14002e55c:	not    eax
   14002e55e:	test   DWORD PTR [rsp+r8*4+0x20],eax
   14002e563:	jne    0x14002e57e
   14002e565:	lea    eax,[rsi+r8*1]
   14002e569:	cdqe   
   14002e56b:	jmp    0x14002e576
   14002e56d:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   14002e571:	jne    0x14002e57e
   14002e573:	add    rax,rsi
   14002e576:	cmp    rax,0x3
   14002e57a:	jl     0x14002e56d
   14002e57c:	jmp    0x14002e5ec
   14002e57e:	lea    eax,[r9-0x1]
   14002e582:	mov    ecx,r15d
   14002e585:	mov    r9d,esi
   14002e588:	cdq    
   14002e589:	and    edx,r15d
   14002e58c:	add    eax,edx
   14002e58e:	mov    r8d,eax
   14002e591:	and    eax,r15d
   14002e594:	sub    eax,edx
   14002e596:	sar    r8d,0x5
   14002e59a:	sub    ecx,eax
   14002e59c:	movsxd r10,r8d
   14002e59f:	mov    eax,DWORD PTR [rsp+r10*4+0x20]
   14002e5a4:	shl    r9d,cl
   14002e5a7:	mov    ecx,ebx
   14002e5a9:	lea    edx,[rax+r9*1]
   14002e5ad:	cmp    edx,eax
   14002e5af:	jb     0x14002e5b6
   14002e5b1:	cmp    edx,r9d
   14002e5b4:	jae    0x14002e5b8
   14002e5b6:	mov    ecx,esi
   14002e5b8:	sub    r8d,esi
   14002e5bb:	mov    DWORD PTR [rsp+r10*4+0x20],edx
   14002e5c0:	movsxd rdx,r8d
   14002e5c3:	cmp    rdx,rbx
   14002e5c6:	jl     0x14002e5ec
   14002e5c8:	cmp    ecx,ebx
   14002e5ca:	je     0x14002e5ec
   14002e5cc:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   14002e5d0:	mov    ecx,ebx
   14002e5d2:	lea    r8d,[rax+0x1]
   14002e5d6:	cmp    r8d,eax
   14002e5d9:	jb     0x14002e5e0
   14002e5db:	cmp    r8d,esi
   14002e5de:	jae    0x14002e5e2
   14002e5e0:	mov    ecx,esi
   14002e5e2:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14002e5e7:	sub    rdx,rsi
   14002e5ea:	jns    0x14002e5c8
   14002e5ec:	mov    ecx,r12d
   14002e5ef:	mov    eax,r13d
   14002e5f2:	shl    eax,cl
   14002e5f4:	and    DWORD PTR [rsp+r14*4+0x20],eax
   14002e5f9:	lea    eax,[r11+0x1]
   14002e5fd:	movsxd rdx,eax
   14002e600:	cmp    rdx,0x3
   14002e604:	jge    0x14002e61f
   14002e606:	lea    rcx,[rsp+rdx*4+0x20]
   14002e60b:	mov    r8d,0x3
   14002e611:	sub    r8,rdx
   14002e614:	xor    edx,edx
   14002e616:	shl    r8,0x2
   14002e61a:	call   0x14001c730
   14002e61f:	mov    eax,DWORD PTR [rip+0x1c02f]        # 0x14004a654
   14002e625:	mov    r12d,0x20
   14002e62b:	mov    r9d,ebx
   14002e62e:	inc    eax
   14002e630:	mov    r8,rbx
   14002e633:	cdq    
   14002e634:	and    edx,r15d
   14002e637:	add    eax,edx
   14002e639:	mov    r10d,eax
   14002e63c:	and    eax,r15d
   14002e63f:	sub    eax,edx
   14002e641:	sar    r10d,0x5
   14002e645:	mov    ecx,eax
   14002e647:	mov    r11d,eax
   14002e64a:	shl    r13d,cl
   14002e64d:	sub    r12d,eax
   14002e650:	not    r13d
   14002e653:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14002e658:	mov    ecx,r11d
   14002e65b:	mov    eax,edx
   14002e65d:	shr    edx,cl
   14002e65f:	mov    ecx,r12d
   14002e662:	or     edx,r9d
   14002e665:	and    eax,r13d
   14002e668:	mov    DWORD PTR [rsp+0x90],eax
   14002e66f:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   14002e674:	add    r8,rsi
   14002e677:	mov    r9d,DWORD PTR [rsp+0x90]
   14002e67f:	shl    r9d,cl
   14002e682:	cmp    r8,0x3
   14002e686:	jl     0x14002e653
   14002e688:	movsxd r8,r10d
   14002e68b:	lea    rdx,[rsp+0x28]
   14002e690:	mov    rcx,rdi
   14002e693:	mov    rax,r8
   14002e696:	shl    rax,0x2
   14002e69a:	sub    rdx,rax
   14002e69d:	cmp    rcx,r8
   14002e6a0:	jl     0x14002e6aa
   14002e6a2:	mov    eax,DWORD PTR [rdx]
   14002e6a4:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14002e6a8:	jmp    0x14002e6ae
   14002e6aa:	mov    DWORD PTR [rsp+rcx*4+0x20],ebx
   14002e6ae:	sub    rcx,rsi
   14002e6b1:	sub    rdx,0x4
   14002e6b5:	cmp    rcx,rbx
   14002e6b8:	jge    0x14002e69d
   14002e6ba:	mov    r8d,ebx
   14002e6bd:	mov    ebx,edi
   14002e6bf:	jmp    0x14002e82b
   14002e6c4:	mov    eax,DWORD PTR [rip+0x1bf8a]        # 0x14004a654
   14002e6ca:	cdq    
   14002e6cb:	and    edx,r15d
   14002e6ce:	add    eax,edx
   14002e6d0:	cmp    edi,DWORD PTR [rip+0x1bf72]        # 0x14004a648
   14002e6d6:	jl     0x14002e78e
   14002e6dc:	mov    r10d,eax
   14002e6df:	and    eax,r15d
   14002e6e2:	mov    edi,0x20
   14002e6e7:	sub    eax,edx
   14002e6e9:	mov    QWORD PTR [rsp+0x20],rbx
   14002e6ee:	bts    DWORD PTR [rsp+0x20],0x1f
   14002e6f4:	mov    ecx,eax
   14002e6f6:	sar    r10d,0x5
   14002e6fa:	mov    DWORD PTR [rsp+0x28],ebx
   14002e6fe:	shl    r13d,cl
   14002e701:	mov    r11d,eax
   14002e704:	mov    r9d,ebx
   14002e707:	not    r13d
   14002e70a:	mov    r8,rbx
   14002e70d:	sub    edi,eax
   14002e70f:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14002e714:	mov    ecx,r11d
   14002e717:	mov    eax,r13d
   14002e71a:	and    eax,edx
   14002e71c:	shr    edx,cl
   14002e71e:	mov    ecx,edi
   14002e720:	or     edx,r9d
   14002e723:	mov    DWORD PTR [rsp+0x90],eax
   14002e72a:	mov    r9d,DWORD PTR [rsp+0x90]
   14002e732:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   14002e737:	add    r8,rsi
   14002e73a:	shl    r9d,cl
   14002e73d:	cmp    r8,0x3
   14002e741:	jl     0x14002e70f
   14002e743:	movsxd rdx,r10d
   14002e746:	lea    rcx,[rsp+0x28]
   14002e74b:	mov    edi,0x2
   14002e750:	mov    rax,rdx
   14002e753:	shl    rax,0x2
   14002e757:	sub    rcx,rax
   14002e75a:	cmp    rdi,rdx
   14002e75d:	jl     0x14002e767
   14002e75f:	mov    eax,DWORD PTR [rcx]
   14002e761:	mov    DWORD PTR [rsp+rdi*4+0x20],eax
   14002e765:	jmp    0x14002e76b
   14002e767:	mov    DWORD PTR [rsp+rdi*4+0x20],ebx
   14002e76b:	sub    rdi,rsi
   14002e76e:	sub    rcx,0x4
   14002e772:	cmp    rdi,rbx
   14002e775:	jge    0x14002e75a
   14002e777:	mov    ecx,DWORD PTR [rip+0x1becb]        # 0x14004a648
   14002e77d:	mov    r8d,DWORD PTR [rip+0x1bed8]        # 0x14004a65c
   14002e784:	mov    ebx,esi
   14002e786:	add    r8d,ecx
   14002e789:	jmp    0x14002e82b
   14002e78e:	mov    r8d,DWORD PTR [rip+0x1bec7]        # 0x14004a65c
   14002e795:	btr    DWORD PTR [rsp+0x20],0x1f
   14002e79b:	mov    r11d,eax
   14002e79e:	and    eax,r15d
   14002e7a1:	add    r8d,edi
   14002e7a4:	mov    r12d,0x20
   14002e7aa:	sub    eax,edx
   14002e7ac:	sar    r11d,0x5
   14002e7b0:	mov    r10d,ebx
   14002e7b3:	mov    ecx,eax
   14002e7b5:	mov    edi,eax
   14002e7b7:	mov    r9,rbx
   14002e7ba:	shl    r13d,cl
   14002e7bd:	sub    r12d,eax
   14002e7c0:	not    r13d
   14002e7c3:	mov    edx,DWORD PTR [rsp+r9*4+0x20]
   14002e7c8:	mov    ecx,edi
   14002e7ca:	mov    eax,r13d
   14002e7cd:	and    eax,edx
   14002e7cf:	shr    edx,cl
   14002e7d1:	mov    ecx,r12d
   14002e7d4:	or     edx,r10d
   14002e7d7:	mov    DWORD PTR [rsp+0x90],eax
   14002e7de:	mov    r10d,DWORD PTR [rsp+0x90]
   14002e7e6:	mov    DWORD PTR [rsp+r9*4+0x20],edx
   14002e7eb:	add    r9,rsi
   14002e7ee:	shl    r10d,cl
   14002e7f1:	cmp    r9,0x3
   14002e7f5:	jl     0x14002e7c3
   14002e7f7:	movsxd rdx,r11d
   14002e7fa:	lea    rcx,[rsp+0x28]
   14002e7ff:	mov    edi,0x2
   14002e804:	mov    rax,rdx
   14002e807:	shl    rax,0x2
   14002e80b:	sub    rcx,rax
   14002e80e:	cmp    rdi,rdx
   14002e811:	jl     0x14002e81b
   14002e813:	mov    eax,DWORD PTR [rcx]
   14002e815:	mov    DWORD PTR [rsp+rdi*4+0x20],eax
   14002e819:	jmp    0x14002e81f
   14002e81b:	mov    DWORD PTR [rsp+rdi*4+0x20],ebx
   14002e81f:	sub    rdi,rsi
   14002e822:	sub    rcx,0x4
   14002e826:	cmp    rdi,rbx
   14002e829:	jge    0x14002e80e
   14002e82b:	mov    rdx,QWORD PTR [rsp+0x88]
   14002e833:	sub    r15d,DWORD PTR [rip+0x1be1a]        # 0x14004a654
   14002e83a:	mov    cl,r15b
   14002e83d:	shl    r8d,cl
   14002e840:	neg    DWORD PTR [rsp+0x80]
   14002e847:	sbb    eax,eax
   14002e849:	and    eax,0x80000000
   14002e84e:	or     r8d,eax
   14002e851:	mov    eax,DWORD PTR [rip+0x1be01]        # 0x14004a658
   14002e857:	or     r8d,DWORD PTR [rsp+0x20]
   14002e85c:	cmp    eax,0x40
   14002e85f:	jne    0x14002e86d
   14002e861:	mov    eax,DWORD PTR [rsp+0x24]
   14002e865:	mov    DWORD PTR [rdx+0x4],r8d
   14002e869:	mov    DWORD PTR [rdx],eax
   14002e86b:	jmp    0x14002e875
   14002e86d:	cmp    eax,0x20
   14002e870:	jne    0x14002e875
   14002e872:	mov    DWORD PTR [rdx],r8d
   14002e875:	mov    eax,ebx
   14002e877:	add    rsp,0x40
   14002e87b:	pop    r15
   14002e87d:	pop    r14
   14002e87f:	pop    r13
   14002e881:	pop    r12
   14002e883:	pop    rdi
   14002e884:	pop    rsi
   14002e885:	pop    rbx
   14002e886:	ret    
   14002e887:	int3   
   14002e888:	mov    r11,rsp
   14002e88b:	mov    QWORD PTR [r11+0x18],rbx
   14002e88f:	push   rbp
   14002e890:	push   rsi
   14002e891:	push   rdi
   14002e892:	push   r12
   14002e894:	push   r13
   14002e896:	push   r14
   14002e898:	push   r15
   14002e89a:	sub    rsp,0xb0
   14002e8a1:	mov    rax,QWORD PTR [rip+0x1abb8]        # 0x140049460
   14002e8a8:	xor    rax,rsp
   14002e8ab:	mov    QWORD PTR [rsp+0xa0],rax
   14002e8b3:	mov    r12,QWORD PTR [rsp+0x128]
   14002e8bb:	xor    ebx,ebx
   14002e8bd:	mov    DWORD PTR [rsp+0x38],r9d
   14002e8c2:	lea    r9d,[rbx+0x1]
   14002e8c6:	mov    QWORD PTR [rsp+0x48],rcx
   14002e8cb:	mov    r15,rdx
   14002e8ce:	lea    r10,[r11-0x68]
   14002e8d2:	mov    WORD PTR [rsp+0x3c],bx
   14002e8d7:	mov    edi,ebx
   14002e8d9:	mov    DWORD PTR [rsp+0x34],r9d
   14002e8de:	mov    r13d,ebx
   14002e8e1:	mov    DWORD PTR [rsp+0x30],ebx
   14002e8e5:	mov    r14d,ebx
   14002e8e8:	mov    ebp,ebx
   14002e8ea:	mov    esi,ebx
   14002e8ec:	mov    ecx,ebx
   14002e8ee:	cmp    r12,rbx
   14002e8f1:	jne    0x14002e919
   14002e8f3:	call   0x140020aa4
   14002e8f8:	xor    r9d,r9d
   14002e8fb:	xor    r8d,r8d
   14002e8fe:	xor    edx,edx
   14002e900:	xor    ecx,ecx
   14002e902:	mov    QWORD PTR [rsp+0x20],rbx
   14002e907:	mov    DWORD PTR [rax],0x16
   14002e90d:	call   0x14001ccf0
   14002e912:	xor    eax,eax
   14002e914:	jmp    0x14002f156
   14002e919:	mov    r11,r8
   14002e91c:	mov    al,BYTE PTR [r8]
   14002e91f:	cmp    al,0x20
   14002e921:	je     0x14002e92f
   14002e923:	cmp    al,0x9
   14002e925:	je     0x14002e92f
   14002e927:	cmp    al,0xa
   14002e929:	je     0x14002e92f
   14002e92b:	cmp    al,0xd
   14002e92d:	jne    0x14002e934
   14002e92f:	add    r8,r9
   14002e932:	jmp    0x14002e91c
   14002e934:	mov    dl,BYTE PTR [r8]
   14002e937:	add    r8,r9
   14002e93a:	cmp    ecx,0x5
   14002e93d:	jg     0x14002eb68
   14002e943:	je     0x14002eb4d
   14002e949:	mov    r9d,ecx
   14002e94c:	cmp    ecx,ebx
   14002e94e:	je     0x14002eaea
   14002e954:	mov    eax,0x1
   14002e959:	sub    r9d,eax
   14002e95c:	je     0x14002eaa4
   14002e962:	sub    r9d,eax
   14002e965:	je     0x14002ea51
   14002e96b:	sub    r9d,eax
   14002e96e:	je     0x14002ea03
   14002e974:	cmp    r9d,eax
   14002e977:	jne    0x14002ec3e
   14002e97d:	mov    r9,rax
   14002e980:	mov    r13d,r9d
   14002e983:	mov    DWORD PTR [rsp+0x30],r9d
   14002e988:	cmp    edi,ebx
   14002e98a:	jne    0x14002e9bd
   14002e98c:	jmp    0x14002e997
   14002e98e:	mov    dl,BYTE PTR [r8]
   14002e991:	sub    esi,r9d
   14002e994:	add    r8,r9
   14002e997:	cmp    dl,0x30
   14002e99a:	je     0x14002e98e
   14002e99c:	jmp    0x14002e9bd
   14002e99e:	cmp    dl,0x39
   14002e9a1:	jg     0x14002e9c2
   14002e9a3:	cmp    edi,0x19
   14002e9a6:	jae    0x14002e9b7
   14002e9a8:	sub    dl,0x30
   14002e9ab:	add    edi,r9d
   14002e9ae:	mov    BYTE PTR [r10],dl
   14002e9b1:	add    r10,r9
   14002e9b4:	sub    esi,r9d
   14002e9b7:	mov    dl,BYTE PTR [r8]
   14002e9ba:	add    r8,r9
   14002e9bd:	cmp    dl,0x30
   14002e9c0:	jge    0x14002e99e
   14002e9c2:	cmp    dl,0x2b
   14002e9c5:	je     0x14002e9f6
   14002e9c7:	cmp    dl,0x2d
   14002e9ca:	je     0x14002e9f6
   14002e9cc:	cmp    dl,0x43
   14002e9cf:	jle    0x14002eb24
   14002e9d5:	cmp    dl,0x45
   14002e9d8:	jle    0x14002e9ec
   14002e9da:	cmp    dl,0x63
   14002e9dd:	jle    0x14002eb24
   14002e9e3:	cmp    dl,0x65
   14002e9e6:	jg     0x14002eb24
   14002e9ec:	mov    ecx,0x6
   14002e9f1:	jmp    0x14002e934
   14002e9f6:	sub    r8,r9
   14002e9f9:	mov    ecx,0xb
   14002e9fe:	jmp    0x14002e934
   14002ea03:	mov    r9,rax
   14002ea06:	mov    al,0x30
   14002ea08:	mov    r13d,r9d
   14002ea0b:	jmp    0x14002ea2d
   14002ea0d:	cmp    dl,0x39
   14002ea10:	jg     0x14002ea31
   14002ea12:	cmp    edi,0x19
   14002ea15:	jae    0x14002ea24
   14002ea17:	sub    dl,al
   14002ea19:	add    edi,r9d
   14002ea1c:	mov    BYTE PTR [r10],dl
   14002ea1f:	add    r10,r9
   14002ea22:	jmp    0x14002ea27
   14002ea24:	add    esi,r9d
   14002ea27:	mov    dl,BYTE PTR [r8]
   14002ea2a:	add    r8,r9
   14002ea2d:	cmp    dl,al
   14002ea2f:	jge    0x14002ea0d
   14002ea31:	mov    rax,QWORD PTR [r12]
   14002ea35:	mov    rcx,QWORD PTR [rax+0x128]
   14002ea3c:	mov    rax,QWORD PTR [rcx]
   14002ea3f:	cmp    dl,BYTE PTR [rax]
   14002ea41:	jne    0x14002e9c2
   14002ea47:	mov    ecx,0x4
   14002ea4c:	jmp    0x14002e934
   14002ea51:	lea    eax,[rdx-0x31]
   14002ea54:	cmp    al,0x8
   14002ea56:	ja     0x14002ea6b
   14002ea58:	mov    ecx,0x3
   14002ea5d:	mov    r9d,0x1
   14002ea63:	sub    r8,r9
   14002ea66:	jmp    0x14002e934
   14002ea6b:	mov    rax,QWORD PTR [r12]
   14002ea6f:	mov    rcx,QWORD PTR [rax+0x128]
   14002ea76:	mov    rax,QWORD PTR [rcx]
   14002ea79:	cmp    dl,BYTE PTR [rax]
   14002ea7b:	jne    0x14002ea8d
   14002ea7d:	mov    ecx,0x5
   14002ea82:	mov    r9d,0x1
   14002ea88:	jmp    0x14002e934
   14002ea8d:	cmp    dl,0x30
   14002ea90:	jne    0x14002ecad
   14002ea96:	mov    r9d,0x1
   14002ea9c:	mov    ecx,r9d
   14002ea9f:	jmp    0x14002e934
   14002eaa4:	mov    r9,rax
   14002eaa7:	lea    eax,[rdx-0x31]
   14002eaaa:	mov    r13d,r9d
   14002eaad:	cmp    al,0x8
   14002eaaf:	ja     0x14002eab8
   14002eab1:	mov    ecx,0x3
   14002eab6:	jmp    0x14002ea63
   14002eab8:	mov    rax,QWORD PTR [r12]
   14002eabc:	mov    rcx,QWORD PTR [rax+0x128]
   14002eac3:	mov    rax,QWORD PTR [rcx]
   14002eac6:	cmp    dl,BYTE PTR [rax]
   14002eac8:	je     0x14002ea47
   14002eace:	cmp    dl,0x2b
   14002ead1:	je     0x14002e9f6
   14002ead7:	cmp    dl,0x2d
   14002eada:	je     0x14002e9f6
   14002eae0:	cmp    dl,0x30
   14002eae3:	je     0x14002ea9c
   14002eae5:	jmp    0x14002e9cc
   14002eaea:	lea    eax,[rdx-0x31]
   14002eaed:	cmp    al,0x8
   14002eaef:	jbe    0x14002ea58
   14002eaf5:	mov    rax,QWORD PTR [r12]
   14002eaf9:	mov    rcx,QWORD PTR [rax+0x128]
   14002eb00:	mov    rax,QWORD PTR [rcx]
   14002eb03:	cmp    dl,BYTE PTR [rax]
   14002eb05:	je     0x14002ea7d
   14002eb0b:	cmp    dl,0x2b
   14002eb0e:	je     0x14002eb3e
   14002eb10:	cmp    dl,0x2d
   14002eb13:	je     0x14002eb2c
   14002eb15:	cmp    dl,0x30
   14002eb18:	je     0x14002ea96
   14002eb1e:	mov    r9d,0x1
   14002eb24:	sub    r8,r9
   14002eb27:	jmp    0x14002ecb6
   14002eb2c:	mov    ecx,0x2
   14002eb31:	mov    DWORD PTR [rsp+0x3c],0x8000
   14002eb39:	jmp    0x14002ea82
   14002eb3e:	mov    ecx,0x2
   14002eb43:	mov    WORD PTR [rsp+0x3c],bx
   14002eb48:	jmp    0x14002ea82
   14002eb4d:	sub    dl,0x30
   14002eb50:	mov    DWORD PTR [rsp+0x30],r9d
   14002eb55:	cmp    dl,0x9
   14002eb58:	ja     0x14002ec48
   14002eb5e:	mov    ecx,0x4
   14002eb63:	jmp    0x14002ea63
   14002eb68:	mov    r9d,ecx
   14002eb6b:	sub    r9d,0x6
   14002eb6f:	je     0x14002ec15
   14002eb75:	mov    eax,0x1
   14002eb7a:	sub    r9d,eax
   14002eb7d:	je     0x14002ebf1
   14002eb7f:	sub    r9d,eax
   14002eb82:	je     0x14002ebc8
   14002eb84:	sub    r9d,eax
   14002eb87:	je     0x14002ec5d
   14002eb8d:	cmp    r9d,0x2
   14002eb91:	jne    0x14002ec3e
   14002eb97:	cmp    DWORD PTR [rsp+0x120],ebx
   14002eb9e:	je     0x14002ec55
   14002eba4:	lea    r11,[r8-0x1]
   14002eba8:	cmp    dl,0x2b
   14002ebab:	je     0x14002ebbb
   14002ebad:	cmp    dl,0x2d
   14002ebb0:	jne    0x14002ec4d
   14002ebb6:	or     DWORD PTR [rsp+0x34],0xffffffff
   14002ebbb:	mov    ecx,0x7
   14002ebc0:	mov    r9,rax
   14002ebc3:	jmp    0x14002e934
   14002ebc8:	mov    r9,rax
   14002ebcb:	mov    r14d,r9d
   14002ebce:	jmp    0x14002ebd6
   14002ebd0:	mov    dl,BYTE PTR [r8]
   14002ebd3:	add    r8,r9
   14002ebd6:	cmp    dl,0x30
   14002ebd9:	je     0x14002ebd0
   14002ebdb:	sub    dl,0x31
   14002ebde:	cmp    dl,0x8
   14002ebe1:	ja     0x14002eb24
   14002ebe7:	mov    ecx,0x9
   14002ebec:	jmp    0x14002ea63
   14002ebf1:	lea    eax,[rdx-0x31]
   14002ebf4:	cmp    al,0x8
   14002ebf6:	ja     0x14002ec02
   14002ebf8:	mov    ecx,0x9
   14002ebfd:	jmp    0x14002ea5d
   14002ec02:	cmp    dl,0x30
   14002ec05:	jne    0x14002ecad
   14002ec0b:	mov    ecx,0x8
   14002ec10:	jmp    0x14002ea82
   14002ec15:	lea    eax,[rdx-0x31]
   14002ec18:	lea    r11,[r8-0x2]
   14002ec1c:	cmp    al,0x8
   14002ec1e:	jbe    0x14002ebf8
   14002ec20:	cmp    dl,0x2b
   14002ec23:	je     0x14002ec39
   14002ec25:	cmp    dl,0x2d
   14002ec28:	jne    0x14002ec02
   14002ec2a:	or     DWORD PTR [rsp+0x34],0xffffffff
   14002ec2f:	mov    ecx,0x7
   14002ec34:	jmp    0x14002ea82
   14002ec39:	mov    ecx,0x7
   14002ec3e:	cmp    ecx,0xa
   14002ec41:	je     0x14002ecb0
   14002ec43:	jmp    0x14002ea82
   14002ec48:	mov    r8,r11
   14002ec4b:	jmp    0x14002ecb6
   14002ec4d:	mov    r8,r11
   14002ec50:	mov    r9,rax
   14002ec53:	jmp    0x14002ecb6
   14002ec55:	mov    r9,rax
   14002ec58:	jmp    0x14002eb24
   14002ec5d:	mov    r9,rax
   14002ec60:	mov    r11b,0x30
   14002ec63:	mov    r14d,r9d
   14002ec66:	jmp    0x14002ec86
   14002ec68:	cmp    dl,0x39
   14002ec6b:	jg     0x14002eca3
   14002ec6d:	lea    ecx,[rbp+rbp*4+0x0]
   14002ec71:	movsx  eax,dl
   14002ec74:	lea    ebp,[rax+rcx*2-0x30]
   14002ec78:	cmp    ebp,0x1450
   14002ec7e:	jg     0x14002ec8d
   14002ec80:	mov    dl,BYTE PTR [r8]
   14002ec83:	add    r8,r9
   14002ec86:	cmp    dl,r11b
   14002ec89:	jge    0x14002ec68
   14002ec8b:	jmp    0x14002eca3
   14002ec8d:	mov    ebp,0x1451
   14002ec92:	jmp    0x14002eca3
   14002ec94:	cmp    dl,0x39
   14002ec97:	jg     0x14002eb24
   14002ec9d:	mov    dl,BYTE PTR [r8]
   14002eca0:	add    r8,r9
   14002eca3:	cmp    dl,r11b
   14002eca6:	jge    0x14002ec94
   14002eca8:	jmp    0x14002eb24
   14002ecad:	mov    r8,r11
   14002ecb0:	mov    r9d,0x1
   14002ecb6:	mov    QWORD PTR [r15],r8
   14002ecb9:	cmp    r13d,ebx
   14002ecbc:	je     0x14002f12a
   14002ecc2:	cmp    edi,0x18
   14002ecc5:	jbe    0x14002ece7
   14002ecc7:	mov    al,BYTE PTR [rsp+0x97]
   14002ecce:	cmp    al,0x5
   14002ecd0:	jl     0x14002ecdc
   14002ecd2:	add    al,r9b
   14002ecd5:	mov    BYTE PTR [rsp+0x97],al
   14002ecdc:	sub    r10,r9
   14002ecdf:	mov    edi,0x18
   14002ece4:	add    esi,r9d
   14002ece7:	cmp    edi,ebx
   14002ece9:	jbe    0x14002f11e
   14002ecef:	sub    r10,r9
   14002ecf2:	or     r15d,0xffffffff
   14002ecf6:	jmp    0x14002ed01
   14002ecf8:	add    edi,r15d
   14002ecfb:	add    esi,r9d
   14002ecfe:	sub    r10,r9
   14002ed01:	cmp    BYTE PTR [r10],bl
   14002ed04:	je     0x14002ecf8
   14002ed06:	lea    r8,[rsp+0x60]
   14002ed0b:	lea    rcx,[rsp+0x80]
   14002ed13:	mov    edx,edi
   14002ed15:	call   0x140030ba8
   14002ed1a:	cmp    DWORD PTR [rsp+0x34],ebx
   14002ed1e:	jge    0x14002ed22
   14002ed20:	neg    ebp
   14002ed22:	add    ebp,esi
   14002ed24:	cmp    r14d,ebx
   14002ed27:	jne    0x14002ed30
   14002ed29:	add    ebp,DWORD PTR [rsp+0x110]
   14002ed30:	cmp    DWORD PTR [rsp+0x30],ebx
   14002ed34:	jne    0x14002ed3d
   14002ed36:	sub    ebp,DWORD PTR [rsp+0x118]
   14002ed3d:	cmp    ebp,0x1450
   14002ed43:	jg     0x14002f108
   14002ed49:	cmp    ebp,0xffffebb0
   14002ed4f:	jl     0x14002f0f8
   14002ed55:	lea    rsi,[rip+0x1ba84]        # 0x14004a7e0
   14002ed5c:	sub    rsi,0x60
   14002ed60:	cmp    ebp,ebx
   14002ed62:	je     0x14002f0e2
   14002ed68:	jge    0x14002ed77
   14002ed6a:	lea    rsi,[rip+0x1bbcf]        # 0x14004a940
   14002ed71:	neg    ebp
   14002ed73:	sub    rsi,0x60
   14002ed77:	cmp    DWORD PTR [rsp+0x38],ebx
   14002ed7b:	jne    0x14002ed82
   14002ed7d:	mov    WORD PTR [rsp+0x60],bx
   14002ed82:	cmp    ebp,ebx
   14002ed84:	je     0x14002f0e2
   14002ed8a:	mov    edi,0x80000000
   14002ed8f:	mov    r9d,0x7fff
   14002ed95:	mov    r11d,0x1
   14002ed9b:	mov    eax,ebp
   14002ed9d:	add    rsi,0x54
   14002eda1:	sar    ebp,0x3
   14002eda4:	and    eax,0x7
   14002eda7:	mov    QWORD PTR [rsp+0x40],rsi
   14002edac:	mov    DWORD PTR [rsp+0x38],ebp
   14002edb0:	cmp    eax,ebx
   14002edb2:	je     0x14002f0da
   14002edb8:	cdqe   
   14002edba:	mov    r14d,0x8000
   14002edc0:	lea    rcx,[rax+rax*2]
   14002edc4:	lea    rdx,[rsi+rcx*4]
   14002edc8:	cmp    WORD PTR [rdx],r14w
   14002edcc:	jb     0x14002edf4
   14002edce:	mov    rax,QWORD PTR [rdx]
   14002edd1:	lea    rcx,[rsp+0x70]
   14002edd6:	mov    QWORD PTR [rcx],rax
   14002edd9:	mov    eax,DWORD PTR [rdx+0x8]
   14002eddc:	lea    rdx,[rsp+0x70]
   14002ede1:	mov    DWORD PTR [rcx+0x8],eax
   14002ede4:	mov    rax,QWORD PTR [rsp+0x70]
   14002ede9:	shr    rax,0x10
   14002eded:	sub    eax,r11d
   14002edf0:	mov    DWORD PTR [rsp+0x72],eax
   14002edf4:	movzx  ecx,WORD PTR [rdx+0xa]
   14002edf8:	mov    eax,ebx
   14002edfa:	movzx  eax,WORD PTR [rsp+0x6a]
   14002edff:	movzx  r13d,cx
   14002ee03:	and    cx,r9w
   14002ee07:	mov    DWORD PTR [rsp+0x50],ebx
   14002ee0b:	xor    r13w,ax
   14002ee0f:	and    ax,r9w
   14002ee13:	mov    DWORD PTR [rsp+0x54],ebx
   14002ee17:	and    r13w,r14w
   14002ee1b:	lea    r8d,[rax+rcx*1]
   14002ee1f:	mov    DWORD PTR [rsp+0x58],ebx
   14002ee23:	cmp    ax,r9w
   14002ee27:	jae    0x14002f0c1
   14002ee2d:	cmp    cx,r9w
   14002ee31:	jae    0x14002f0c1
   14002ee37:	mov    r10d,0xbffd
   14002ee3d:	cmp    r8w,r10w
   14002ee41:	ja     0x14002f0c1
   14002ee47:	mov    r10d,0x3fbf
   14002ee4d:	cmp    r8w,r10w
   14002ee51:	ja     0x14002ee5c
   14002ee53:	mov    DWORD PTR [rsp+0x68],ebx
   14002ee57:	jmp    0x14002f0d2
   14002ee5c:	cmp    ax,bx
   14002ee5f:	jne    0x14002ee87
   14002ee61:	mov    eax,DWORD PTR [rsp+0x68]
   14002ee65:	add    r8w,r11w
   14002ee69:	btr    eax,0x1f
   14002ee6d:	cmp    eax,ebx
   14002ee6f:	jne    0x14002ee87
   14002ee71:	cmp    DWORD PTR [rsp+0x64],ebx
   14002ee75:	jne    0x14002ee87
   14002ee77:	cmp    DWORD PTR [rsp+0x60],ebx
   14002ee7b:	jne    0x14002ee87
   14002ee7d:	mov    WORD PTR [rsp+0x6a],bx
   14002ee82:	jmp    0x14002f0da
   14002ee87:	cmp    cx,bx
   14002ee8a:	jne    0x14002eea4
   14002ee8c:	mov    eax,DWORD PTR [rdx+0x8]
   14002ee8f:	add    r8w,r11w
   14002ee93:	btr    eax,0x1f
   14002ee97:	cmp    eax,ebx
   14002ee99:	jne    0x14002eea4
   14002ee9b:	cmp    DWORD PTR [rdx+0x4],ebx
   14002ee9e:	jne    0x14002eea4
   14002eea0:	cmp    DWORD PTR [rdx],ebx
   14002eea2:	je     0x14002ee53
   14002eea4:	mov    esi,0x1
   14002eea9:	mov    r12d,ebx
   14002eeac:	lea    rcx,[rsp+0x54]
   14002eeb1:	lea    r10d,[rsi+0x4]
   14002eeb5:	cmp    r10d,ebx
   14002eeb8:	lea    eax,[r12+r12*1]
   14002eebc:	mov    DWORD PTR [rsp+0x34],r10d
   14002eec1:	movsxd r9,eax
   14002eec4:	jle    0x14002ef1b
   14002eec6:	mov    edi,r12d
   14002eec9:	lea    r14,[rsp+r9*1+0x60]
   14002eece:	lea    r15,[rdx+0x8]
   14002eed2:	and    edi,esi
   14002eed4:	movzx  eax,WORD PTR [r14]
   14002eed8:	movzx  r9d,WORD PTR [r15]
   14002eedc:	mov    r11d,ebx
   14002eedf:	imul   r9d,eax
   14002eee3:	mov    eax,DWORD PTR [rcx-0x4]
   14002eee6:	lea    ebp,[rax+r9*1]
   14002eeea:	cmp    ebp,eax
   14002eeec:	jb     0x14002eef3
   14002eeee:	cmp    ebp,r9d
   14002eef1:	jae    0x14002eef6
   14002eef3:	mov    r11d,esi
   14002eef6:	mov    DWORD PTR [rcx-0x4],ebp
   14002eef9:	cmp    r11d,ebx
   14002eefc:	je     0x14002ef01
   14002eefe:	add    WORD PTR [rcx],si
   14002ef01:	mov    r11d,DWORD PTR [rsp+0x34]
   14002ef06:	add    r14,0x2
   14002ef0a:	sub    r15,0x2
   14002ef0e:	sub    r11d,esi
   14002ef11:	cmp    r11d,ebx
   14002ef14:	mov    DWORD PTR [rsp+0x34],r11d
   14002ef19:	jg     0x14002eed4
   14002ef1b:	sub    r10d,esi
   14002ef1e:	add    rcx,0x2
   14002ef22:	add    r12d,esi
   14002ef25:	cmp    r10d,ebx
   14002ef28:	jg     0x14002eeb5
   14002ef2a:	mov    r10d,DWORD PTR [rsp+0x58]
   14002ef2f:	mov    r9d,DWORD PTR [rsp+0x50]
   14002ef34:	mov    eax,0xc002
   14002ef39:	add    r8w,ax
   14002ef3d:	mov    r12d,0xffff
   14002ef43:	cmp    r8w,bx
   14002ef47:	jle    0x14002ef8e
   14002ef49:	bt     r10d,0x1f
   14002ef4e:	jb     0x14002ef88
   14002ef50:	mov    r11d,DWORD PTR [rsp+0x54]
   14002ef55:	mov    edx,r9d
   14002ef58:	add    r10d,r10d
   14002ef5b:	shr    edx,0x1f
   14002ef5e:	add    r9d,r9d
   14002ef61:	mov    ecx,r11d
   14002ef64:	shr    ecx,0x1f
   14002ef67:	lea    eax,[r11+r11*1]
   14002ef6b:	add    r8w,r12w
   14002ef6f:	or     eax,edx
   14002ef71:	or     r10d,ecx
   14002ef74:	cmp    r8w,bx
   14002ef78:	mov    DWORD PTR [rsp+0x54],eax
   14002ef7c:	mov    DWORD PTR [rsp+0x58],r10d
   14002ef81:	mov    DWORD PTR [rsp+0x50],r9d
   14002ef86:	jg     0x14002ef49
   14002ef88:	cmp    r8w,bx
   14002ef8c:	jg     0x14002f000
   14002ef8e:	add    r8w,r12w
   14002ef92:	jns    0x14002f000
   14002ef94:	movzx  eax,r8w
   14002ef98:	neg    ax
   14002ef9b:	movzx  edx,ax
   14002ef9e:	add    r8w,dx
   14002efa2:	test   BYTE PTR [rsp+0x50],sil
   14002efa7:	je     0x14002efab
   14002efa9:	add    ebx,esi
   14002efab:	mov    r11d,DWORD PTR [rsp+0x54]
   14002efb0:	mov    eax,r10d
   14002efb3:	shr    r9d,1
   14002efb6:	mov    ecx,r11d
   14002efb9:	shl    eax,0x1f
   14002efbc:	shr    r11d,1
   14002efbf:	shl    ecx,0x1f
   14002efc2:	or     r11d,eax
   14002efc5:	shr    r10d,1
   14002efc8:	or     r9d,ecx
   14002efcb:	sub    rdx,rsi
   14002efce:	mov    DWORD PTR [rsp+0x54],r11d
   14002efd3:	mov    DWORD PTR [rsp+0x50],r9d
   14002efd8:	jne    0x14002efa2
   14002efda:	mov    DWORD PTR [rsp+0x30],ebx
   14002efde:	xor    ebx,ebx
   14002efe0:	mov    DWORD PTR [rsp+0x58],r10d
   14002efe5:	mov    eax,DWORD PTR [rsp+0x30]
   14002efe9:	cmp    eax,ebx
   14002efeb:	je     0x14002f000
   14002efed:	movzx  eax,r9w
   14002eff1:	or     ax,si
   14002eff4:	mov    WORD PTR [rsp+0x50],ax
   14002eff9:	mov    r9d,DWORD PTR [rsp+0x50]
   14002effe:	jmp    0x14002f005
   14002f000:	mov    ax,WORD PTR [rsp+0x50]
   14002f005:	mov    rsi,QWORD PTR [rsp+0x40]
   14002f00a:	mov    r14d,0x8000
   14002f010:	mov    edi,0x80000000
   14002f015:	cmp    ax,r14w
   14002f019:	ja     0x14002f02b
   14002f01b:	and    r9d,0x1ffff
   14002f022:	cmp    r9d,0x18000
   14002f029:	jne    0x14002f088
   14002f02b:	mov    eax,DWORD PTR [rsp+0x52]
   14002f02f:	or     r15d,0xffffffff
   14002f033:	mov    r11d,0x1
   14002f039:	cmp    eax,r15d
   14002f03c:	jne    0x14002f07f
   14002f03e:	mov    eax,DWORD PTR [rsp+0x56]
   14002f042:	mov    DWORD PTR [rsp+0x52],ebx
   14002f046:	cmp    eax,r15d
   14002f049:	jne    0x14002f071
   14002f04b:	movzx  eax,WORD PTR [rsp+0x5a]
   14002f050:	mov    DWORD PTR [rsp+0x56],ebx
   14002f054:	cmp    ax,r12w
   14002f058:	jne    0x14002f066
   14002f05a:	mov    WORD PTR [rsp+0x5a],r14w
   14002f060:	add    r8w,r11w
   14002f064:	jmp    0x14002f078
   14002f066:	add    ax,r11w
   14002f06a:	mov    WORD PTR [rsp+0x5a],ax
   14002f06f:	jmp    0x14002f078
   14002f071:	add    eax,r11d
   14002f074:	mov    DWORD PTR [rsp+0x56],eax
   14002f078:	mov    r10d,DWORD PTR [rsp+0x58]
   14002f07d:	jmp    0x14002f08e
   14002f07f:	add    eax,r11d
   14002f082:	mov    DWORD PTR [rsp+0x52],eax
   14002f086:	jmp    0x14002f08e
   14002f088:	mov    r11d,0x1
   14002f08e:	mov    ebp,DWORD PTR [rsp+0x38]
   14002f092:	mov    r9d,0x7fff
   14002f098:	cmp    r8w,r9w
   14002f09c:	jae    0x14002f0c1
   14002f09e:	movzx  eax,WORD PTR [rsp+0x52]
   14002f0a3:	or     r8w,r13w
   14002f0a7:	mov    DWORD PTR [rsp+0x66],r10d
   14002f0ac:	mov    WORD PTR [rsp+0x60],ax
   14002f0b1:	mov    eax,DWORD PTR [rsp+0x54]
   14002f0b5:	mov    WORD PTR [rsp+0x6a],r8w
   14002f0bb:	mov    DWORD PTR [rsp+0x62],eax
   14002f0bf:	jmp    0x14002f0da
   14002f0c1:	neg    r13w
   14002f0c5:	sbb    eax,eax
   14002f0c7:	and    eax,edi
   14002f0c9:	add    eax,0x7fff8000
   14002f0ce:	mov    DWORD PTR [rsp+0x68],eax
   14002f0d2:	mov    DWORD PTR [rsp+0x60],ebx
   14002f0d6:	mov    DWORD PTR [rsp+0x64],ebx
   14002f0da:	cmp    ebp,ebx
   14002f0dc:	jne    0x14002ed9b
   14002f0e2:	mov    eax,DWORD PTR [rsp+0x68]
   14002f0e6:	mov    dx,WORD PTR [rsp+0x60]
   14002f0eb:	mov    ecx,DWORD PTR [rsp+0x62]
   14002f0ef:	mov    edi,DWORD PTR [rsp+0x66]
   14002f0f3:	shr    eax,0x10
   14002f0f6:	jmp    0x14002f139
   14002f0f8:	mov    edx,ebx
   14002f0fa:	mov    ax,bx
   14002f0fd:	mov    edi,ebx
   14002f0ff:	mov    ecx,ebx
   14002f101:	mov    ebx,0x1
   14002f106:	jmp    0x14002f139
   14002f108:	mov    ecx,ebx
   14002f10a:	mov    dx,bx
   14002f10d:	mov    eax,0x7fff
   14002f112:	mov    ebx,0x2
   14002f117:	mov    edi,0x80000000
   14002f11c:	jmp    0x14002f139
   14002f11e:	mov    dx,bx
   14002f121:	mov    ax,bx
   14002f124:	mov    edi,ebx
   14002f126:	mov    ecx,ebx
   14002f128:	jmp    0x14002f139
   14002f12a:	mov    dx,bx
   14002f12d:	mov    ax,bx
   14002f130:	mov    edi,ebx
   14002f132:	mov    ecx,ebx
   14002f134:	mov    ebx,0x4
   14002f139:	mov    r8,QWORD PTR [rsp+0x48]
   14002f13e:	or     ax,WORD PTR [rsp+0x3c]
   14002f143:	mov    WORD PTR [r8+0xa],ax
   14002f148:	mov    eax,ebx
   14002f14a:	mov    WORD PTR [r8],dx
   14002f14e:	mov    DWORD PTR [r8+0x2],ecx
   14002f152:	mov    DWORD PTR [r8+0x6],edi
   14002f156:	mov    rcx,QWORD PTR [rsp+0xa0]
   14002f15e:	xor    rcx,rsp
   14002f161:	call   0x14001c500
   14002f166:	mov    rbx,QWORD PTR [rsp+0x100]
   14002f16e:	add    rsp,0xb0
   14002f175:	pop    r15
   14002f177:	pop    r14
   14002f179:	pop    r13
   14002f17b:	pop    r12
   14002f17d:	pop    rdi
   14002f17e:	pop    rsi
   14002f17f:	pop    rbp
   14002f180:	ret    
   14002f181:	int3   
   14002f182:	int3   
   14002f183:	int3   
   14002f184:	mov    QWORD PTR [rsp+0x10],rdx
   14002f189:	mov    DWORD PTR [rsp+0x8],ecx
   14002f18d:	push   rbx
   14002f18e:	push   rbp
   14002f18f:	push   rsi
   14002f190:	push   rdi
   14002f191:	push   r12
   14002f193:	push   r13
   14002f195:	push   r14
   14002f197:	push   r15
   14002f199:	sub    rsp,0x58
   14002f19d:	mov    r12d,0xfffffffe
   14002f1a3:	movsxd rax,ecx
   14002f1a6:	mov    ebx,r8d
   14002f1a9:	mov    DWORD PTR [rsp+0x34],r12d
   14002f1ae:	mov    DWORD PTR [rsp+0x38],ebx
   14002f1b2:	cmp    eax,r12d
   14002f1b5:	jne    0x14002f1d0
   14002f1b7:	call   0x140020ac4
   14002f1bc:	xor    edi,edi
   14002f1be:	mov    DWORD PTR [rax],edi
   14002f1c0:	call   0x140020aa4
   14002f1c5:	mov    DWORD PTR [rax],0x9
   14002f1cb:	jmp    0x14002f8ef
   14002f1d0:	xor    edi,edi
   14002f1d2:	cmp    eax,edi
   14002f1d4:	jl     0x14002f8c9
   14002f1da:	cmp    eax,DWORD PTR [rip+0x1e128]        # 0x14004d308
   14002f1e0:	jae    0x14002f8c9
   14002f1e6:	mov    rsi,rax
   14002f1e9:	mov    r14,rax
   14002f1ec:	lea    r9,[rip+0xfffffffffffd0e0d]        # 0x140000000
   14002f1f3:	sar    r14,0x5
   14002f1f7:	and    esi,0x1f
   14002f1fa:	mov    rcx,QWORD PTR [r9+r14*8+0x4d320]
   14002f202:	imul   rsi,rsi,0x58
   14002f206:	mov    al,BYTE PTR [rcx+rsi*1+0x8]
   14002f20a:	test   al,0x1
   14002f20c:	je     0x14002f8c9
   14002f212:	cmp    ebx,0x7fffffff
   14002f218:	jbe    0x14002f231
   14002f21a:	call   0x140020ac4
   14002f21f:	mov    DWORD PTR [rax],edi
   14002f221:	call   0x140020aa4
   14002f226:	mov    DWORD PTR [rax],0x16
   14002f22c:	jmp    0x14002f8db
   14002f231:	mov    ebp,edi
   14002f233:	cmp    ebx,edi
   14002f235:	je     0x14002f8c5
   14002f23b:	test   al,0x2
   14002f23d:	jne    0x14002f8c5
   14002f243:	cmp    rdx,rdi
   14002f246:	je     0x14002f21a
   14002f248:	mov    r15b,BYTE PTR [rcx+rsi*1+0x38]
   14002f24d:	mov    r8d,0x4
   14002f253:	add    r15b,r15b
   14002f256:	sar    r15b,1
   14002f259:	movsx  ecx,r15b
   14002f25d:	sub    ecx,0x1
   14002f260:	je     0x14002f277
   14002f262:	sub    ecx,0x1
   14002f265:	jne    0x14002f272
   14002f267:	mov    eax,ebx
   14002f269:	not    eax
   14002f26b:	test   al,0x1
   14002f26d:	je     0x14002f21a
   14002f26f:	and    ebx,0xfffffffe
   14002f272:	mov    r13,rdx
   14002f275:	jmp    0x14002f2db
   14002f277:	mov    eax,ebx
   14002f279:	not    eax
   14002f27b:	test   al,0x1
   14002f27d:	je     0x14002f21a
   14002f27f:	shr    ebx,1
   14002f281:	cmp    ebx,r8d
   14002f284:	cmovb  ebx,r8d
   14002f288:	mov    ecx,ebx
   14002f28a:	call   0x1400208e4
   14002f28f:	mov    r13,rax
   14002f292:	cmp    rax,rdi
   14002f295:	jne    0x14002f2b2
   14002f297:	call   0x140020aa4
   14002f29c:	mov    DWORD PTR [rax],0xc
   14002f2a2:	call   0x140020ac4
   14002f2a7:	mov    DWORD PTR [rax],0x8
   14002f2ad:	jmp    0x14002f8ef
   14002f2b2:	mov    ecx,DWORD PTR [rsp+0xa0]
   14002f2b9:	xor    edx,edx
   14002f2bb:	lea    r8d,[rdx+0x1]
   14002f2bf:	call   0x14002d1bc
   14002f2c4:	lea    r9,[rip+0xfffffffffffd0d35]        # 0x140000000
   14002f2cb:	mov    r11,rax
   14002f2ce:	mov    rax,QWORD PTR [r9+r14*8+0x4d320]
   14002f2d6:	mov    QWORD PTR [rax+rsi*1+0x40],r11
   14002f2db:	mov    rax,QWORD PTR [r9+r14*8+0x4d320]
   14002f2e3:	mov    rdx,r13
   14002f2e6:	mov    r8d,0xa
   14002f2ec:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14002f2f1:	je     0x14002f393
   14002f2f7:	mov    cl,BYTE PTR [rax+rsi*1+0x9]
   14002f2fb:	cmp    cl,r8b
   14002f2fe:	je     0x14002f393
   14002f304:	cmp    ebx,edi
   14002f306:	je     0x14002f393
   14002f30c:	mov    BYTE PTR [r13+0x0],cl
   14002f310:	mov    rax,QWORD PTR [r9+r14*8+0x4d320]
   14002f318:	or     r10d,0xffffffff
   14002f31c:	add    ebx,r10d
   14002f31f:	lea    rdx,[r13+0x1]
   14002f323:	lea    ebp,[r8-0x9]
   14002f327:	mov    BYTE PTR [rax+rsi*1+0x9],r8b
   14002f32c:	cmp    r15b,dil
   14002f32f:	je     0x14002f393
   14002f331:	mov    rax,QWORD PTR [r9+r14*8+0x4d320]
   14002f339:	mov    cl,BYTE PTR [rax+rsi*1+0x39]
   14002f33d:	cmp    cl,r8b
   14002f340:	je     0x14002f393
   14002f342:	cmp    ebx,edi
   14002f344:	je     0x14002f393
   14002f346:	mov    BYTE PTR [rdx],cl
   14002f348:	mov    rax,QWORD PTR [r9+r14*8+0x4d320]
   14002f350:	add    ebx,r10d
   14002f353:	inc    rdx
   14002f356:	lea    ebp,[r8-0x8]
   14002f35a:	mov    BYTE PTR [rax+rsi*1+0x39],r8b
   14002f35f:	cmp    r15b,0x1
   14002f363:	jne    0x14002f393
   14002f365:	mov    rax,QWORD PTR [r9+r14*8+0x4d320]
   14002f36d:	mov    cl,BYTE PTR [rax+rsi*1+0x3a]
   14002f371:	cmp    cl,r8b
   14002f374:	je     0x14002f393
   14002f376:	cmp    ebx,edi
   14002f378:	je     0x14002f393
   14002f37a:	mov    BYTE PTR [rdx],cl
   14002f37c:	mov    rax,QWORD PTR [r9+r14*8+0x4d320]
   14002f384:	inc    rdx
   14002f387:	lea    ebp,[r8-0x7]
   14002f38b:	add    ebx,r10d
   14002f38e:	mov    BYTE PTR [rax+rsi*1+0x3a],r8b
   14002f393:	mov    rcx,QWORD PTR [r9+r14*8+0x4d320]
   14002f39b:	lea    r9,[rsp+0x30]
   14002f3a0:	mov    r8d,ebx
   14002f3a3:	mov    rcx,QWORD PTR [rcx+rsi*1]
   14002f3a7:	mov    QWORD PTR [rsp+0x20],rdi
   14002f3ac:	call   QWORD PTR [rip+0xae1e]        # 0x14003a1d0
   14002f3b2:	cmp    eax,edi
   14002f3b4:	je     0x14002f889
   14002f3ba:	movsxd rdx,DWORD PTR [rsp+0x30]
   14002f3bf:	cmp    edx,edi
   14002f3c1:	jl     0x14002f889
   14002f3c7:	mov    eax,ebx
   14002f3c9:	cmp    rdx,rax
   14002f3cc:	ja     0x14002f889
   14002f3d2:	lea    r8,[rip+0xfffffffffffd0c27]        # 0x140000000
   14002f3d9:	add    ebp,edx
   14002f3db:	mov    rax,QWORD PTR [r8+r14*8+0x4d320]
   14002f3e3:	test   BYTE PTR [rax+rsi*1+0x8],0x80
   14002f3e8:	je     0x14002f867
   14002f3ee:	cmp    r15b,0x2
   14002f3f2:	je     0x14002f6b0
   14002f3f8:	cmp    edx,edi
   14002f3fa:	je     0x14002f40a
   14002f3fc:	cmp    BYTE PTR [r13+0x0],0xa
   14002f401:	jne    0x14002f40a
   14002f403:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   14002f408:	jmp    0x14002f40f
   14002f40a:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   14002f40f:	movsxd rax,ebp
   14002f412:	mov    rbx,r13
   14002f415:	mov    r12,r13
   14002f418:	add    rax,r13
   14002f41b:	mov    QWORD PTR [rsp+0x40],rax
   14002f420:	cmp    r13,rax
   14002f423:	jae    0x14002f563
   14002f429:	mov    ebp,0xd
   14002f42e:	mov    al,BYTE PTR [r12]
   14002f432:	cmp    al,0x1a
   14002f434:	je     0x14002f544
   14002f43a:	cmp    al,bpl
   14002f43d:	je     0x14002f44c
   14002f43f:	mov    BYTE PTR [rbx],al
   14002f441:	inc    rbx
   14002f444:	inc    r12
   14002f447:	jmp    0x14002f537
   14002f44c:	mov    rax,QWORD PTR [rsp+0x40]
   14002f451:	dec    rax
   14002f454:	cmp    r12,rax
   14002f457:	jae    0x14002f474
   14002f459:	lea    rax,[r12+0x1]
   14002f45e:	cmp    BYTE PTR [rax],0xa
   14002f461:	jne    0x14002f46c
   14002f463:	add    r12,0x2
   14002f467:	jmp    0x14002f4fc
   14002f46c:	mov    r12,rax
   14002f46f:	jmp    0x14002f531
   14002f474:	mov    rcx,QWORD PTR [r8+r14*8+0x4d320]
   14002f47c:	lea    r9,[rsp+0x30]
   14002f481:	lea    rdx,[rsp+0xb0]
   14002f489:	mov    rcx,QWORD PTR [rcx+rsi*1]
   14002f48d:	mov    r8d,0x1
   14002f493:	inc    r12
   14002f496:	mov    QWORD PTR [rsp+0x20],rdi
   14002f49b:	call   QWORD PTR [rip+0xad2f]        # 0x14003a1d0
   14002f4a1:	cmp    eax,edi
   14002f4a3:	jne    0x14002f4af
   14002f4a5:	call   QWORD PTR [rip+0xac1d]        # 0x14003a0c8
   14002f4ab:	cmp    eax,edi
   14002f4ad:	jne    0x14002f52a
   14002f4af:	cmp    DWORD PTR [rsp+0x30],edi
   14002f4b3:	je     0x14002f52a
   14002f4b5:	lea    r8,[rip+0xfffffffffffd0b44]        # 0x140000000
   14002f4bc:	mov    rax,QWORD PTR [r8+r14*8+0x4d320]
   14002f4c4:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14002f4c9:	je     0x14002f4ed
   14002f4cb:	cmp    BYTE PTR [rsp+0xb0],0xa
   14002f4d3:	je     0x14002f4fc
   14002f4d5:	mov    BYTE PTR [rbx],bpl
   14002f4d8:	mov    rcx,QWORD PTR [r8+r14*8+0x4d320]
   14002f4e0:	mov    al,BYTE PTR [rsp+0xb0]
   14002f4e7:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   14002f4eb:	jmp    0x14002f534
   14002f4ed:	cmp    rbx,r13
   14002f4f0:	jne    0x14002f501
   14002f4f2:	cmp    BYTE PTR [rsp+0xb0],0xa
   14002f4fa:	jne    0x14002f501
   14002f4fc:	mov    BYTE PTR [rbx],0xa
   14002f4ff:	jmp    0x14002f534
   14002f501:	mov    ecx,DWORD PTR [rsp+0xa0]
   14002f508:	mov    r8d,0x1
   14002f50e:	or     rdx,0xffffffffffffffff
   14002f512:	call   0x14002d1bc
   14002f517:	cmp    BYTE PTR [rsp+0xb0],0xa
   14002f51f:	lea    r8,[rip+0xfffffffffffd0ada]        # 0x140000000
   14002f526:	je     0x14002f537
   14002f528:	jmp    0x14002f531
   14002f52a:	lea    r8,[rip+0xfffffffffffd0acf]        # 0x140000000
   14002f531:	mov    BYTE PTR [rbx],bpl
   14002f534:	inc    rbx
   14002f537:	cmp    r12,QWORD PTR [rsp+0x40]
   14002f53c:	jb     0x14002f42e
   14002f542:	jmp    0x14002f563
   14002f544:	mov    rax,QWORD PTR [r8+r14*8+0x4d320]
   14002f54c:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   14002f551:	jne    0x14002f55a
   14002f553:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   14002f558:	jmp    0x14002f563
   14002f55a:	mov    al,BYTE PTR [r12]
   14002f55e:	mov    BYTE PTR [rbx],al
   14002f560:	inc    rbx
   14002f563:	mov    ebp,ebx
   14002f565:	sub    ebp,r13d
   14002f568:	cmp    r15b,0x1
   14002f56c:	jne    0x14002f862
   14002f572:	cmp    ebp,edi
   14002f574:	je     0x14002f862
   14002f57a:	mov    r15d,0x1
   14002f580:	sub    rbx,r15
   14002f583:	test   BYTE PTR [rbx],0x80
   14002f586:	jne    0x14002f590
   14002f588:	add    rbx,r15
   14002f58b:	jmp    0x14002f642
   14002f590:	mov    edx,r15d
   14002f593:	jmp    0x14002f5a5
   14002f595:	cmp    edx,0x4
   14002f598:	jg     0x14002f5b2
   14002f59a:	cmp    rbx,r13
   14002f59d:	jb     0x14002f5b2
   14002f59f:	sub    rbx,r15
   14002f5a2:	add    edx,r15d
   14002f5a5:	movzx  eax,BYTE PTR [rbx]
   14002f5a8:	cmp    BYTE PTR [rax+r8*1+0x4a660],dil
   14002f5b0:	je     0x14002f595
   14002f5b2:	movzx  ecx,BYTE PTR [rbx]
   14002f5b5:	movsx  eax,BYTE PTR [rcx+r8*1+0x4a660]
   14002f5be:	cmp    eax,edi
   14002f5c0:	jne    0x14002f5d6
   14002f5c2:	call   0x140020aa4
   14002f5c7:	mov    DWORD PTR [rax],0x2a
   14002f5cd:	or     r12d,0xffffffff
   14002f5d1:	jmp    0x14002f867
   14002f5d6:	inc    eax
   14002f5d8:	cmp    eax,edx
   14002f5da:	jne    0x14002f5e4
   14002f5dc:	movsxd rax,edx
   14002f5df:	add    rbx,rax
   14002f5e2:	jmp    0x14002f642
   14002f5e4:	mov    rax,QWORD PTR [r8+r14*8+0x4d320]
   14002f5ec:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14002f5f1:	je     0x14002f62e
   14002f5f3:	add    rbx,r15
   14002f5f6:	cmp    edx,0x2
   14002f5f9:	mov    BYTE PTR [rax+rsi*1+0x9],cl
   14002f5fd:	jl     0x14002f610
   14002f5ff:	mov    al,BYTE PTR [rbx]
   14002f601:	mov    rcx,QWORD PTR [r8+r14*8+0x4d320]
   14002f609:	add    rbx,r15
   14002f60c:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   14002f610:	cmp    edx,0x3
   14002f613:	jne    0x14002f626
   14002f615:	mov    al,BYTE PTR [rbx]
   14002f617:	mov    rcx,QWORD PTR [r8+r14*8+0x4d320]
   14002f61f:	add    rbx,r15
   14002f622:	mov    BYTE PTR [rcx+rsi*1+0x3a],al
   14002f626:	movsxd rax,edx
   14002f629:	sub    rbx,rax
   14002f62c:	jmp    0x14002f642
   14002f62e:	mov    ecx,DWORD PTR [rsp+0xa0]
   14002f635:	neg    edx
   14002f637:	mov    r8d,r15d
   14002f63a:	movsxd rdx,edx
   14002f63d:	call   0x14002d1bc
   14002f642:	mov    eax,DWORD PTR [rsp+0x38]
   14002f646:	mov    r15,QWORD PTR [rsp+0xa8]
   14002f64e:	sub    ebx,r13d
   14002f651:	shr    eax,1
   14002f653:	mov    r9d,ebx
   14002f656:	mov    r8,r13
   14002f659:	mov    DWORD PTR [rsp+0x28],eax
   14002f65d:	xor    edx,edx
   14002f65f:	mov    ecx,0xfde9
   14002f664:	mov    QWORD PTR [rsp+0x20],r15
   14002f669:	call   QWORD PTR [rip+0xab31]        # 0x14003a1a0
   14002f66f:	mov    ebp,eax
   14002f671:	cmp    eax,edi
   14002f673:	jne    0x14002f68b
   14002f675:	call   QWORD PTR [rip+0xaa4d]        # 0x14003a0c8
   14002f67b:	mov    ecx,eax
   14002f67d:	call   0x140020ae4
   14002f682:	or     r12d,0xffffffff
   14002f686:	jmp    0x14002f86f
   14002f68b:	mov    r12d,DWORD PTR [rsp+0x34]
   14002f690:	cmp    eax,ebx
   14002f692:	lea    rax,[rip+0xfffffffffffd0967]        # 0x140000000
   14002f699:	mov    rax,QWORD PTR [rax+r14*8+0x4d320]
   14002f6a1:	setne  dil
   14002f6a5:	add    ebp,ebp
   14002f6a7:	mov    DWORD PTR [rax+rsi*1+0x48],edi
   14002f6ab:	jmp    0x14002f86f
   14002f6b0:	cmp    edx,edi
   14002f6b2:	mov    edx,0xa
   14002f6b7:	je     0x14002f6c7
   14002f6b9:	cmp    WORD PTR [r13+0x0],dx
   14002f6be:	jne    0x14002f6c7
   14002f6c0:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   14002f6c5:	jmp    0x14002f6cc
   14002f6c7:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   14002f6cc:	movsxd rax,ebp
   14002f6cf:	mov    rbx,r13
   14002f6d2:	mov    r12,r13
   14002f6d5:	lea    r15,[rax+r13*1]
   14002f6d9:	cmp    r13,r15
   14002f6dc:	jae    0x14002f85d
   14002f6e2:	mov    ebp,0xd
   14002f6e7:	movzx  eax,WORD PTR [r12]
   14002f6ec:	cmp    ax,0x1a
   14002f6f0:	je     0x14002f83b
   14002f6f6:	cmp    ax,bp
   14002f6f9:	je     0x14002f70b
   14002f6fb:	mov    WORD PTR [rbx],ax
   14002f6fe:	add    rbx,0x2
   14002f702:	add    r12,0x2
   14002f706:	jmp    0x14002f830
   14002f70b:	lea    rax,[r15-0x2]
   14002f70f:	cmp    r12,rax
   14002f712:	jae    0x14002f72f
   14002f714:	lea    rax,[r12+0x2]
   14002f719:	cmp    WORD PTR [rax],dx
   14002f71c:	jne    0x14002f727
   14002f71e:	add    r12,0x4
   14002f722:	jmp    0x14002f7e9
   14002f727:	mov    r12,rax
   14002f72a:	jmp    0x14002f829
   14002f72f:	mov    rcx,QWORD PTR [r8+r14*8+0x4d320]
   14002f737:	lea    r9,[rsp+0x30]
   14002f73c:	lea    rdx,[rsp+0xb8]
   14002f744:	mov    rcx,QWORD PTR [rcx+rsi*1]
   14002f748:	mov    r8d,0x2
   14002f74e:	add    r12,0x2
   14002f752:	mov    QWORD PTR [rsp+0x20],rdi
   14002f757:	call   QWORD PTR [rip+0xaa73]        # 0x14003a1d0
   14002f75d:	cmp    eax,edi
   14002f75f:	jne    0x14002f76f
   14002f761:	call   QWORD PTR [rip+0xa961]        # 0x14003a0c8
   14002f767:	cmp    eax,edi
   14002f769:	jne    0x14002f81d
   14002f76f:	cmp    DWORD PTR [rsp+0x30],edi
   14002f773:	je     0x14002f81d
   14002f779:	lea    r8,[rip+0xfffffffffffd0880]        # 0x140000000
   14002f780:	mov    rax,QWORD PTR [r8+r14*8+0x4d320]
   14002f788:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14002f78d:	je     0x14002f7d5
   14002f78f:	mov    edx,0xa
   14002f794:	cmp    WORD PTR [rsp+0xb8],dx
   14002f79c:	je     0x14002f7e9
   14002f79e:	mov    WORD PTR [rbx],bp
   14002f7a1:	mov    al,BYTE PTR [rsp+0xb8]
   14002f7a8:	mov    rcx,QWORD PTR [r8+r14*8+0x4d320]
   14002f7b0:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   14002f7b4:	mov    al,BYTE PTR [rsp+0xb9]
   14002f7bb:	mov    rcx,QWORD PTR [r8+r14*8+0x4d320]
   14002f7c3:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   14002f7c7:	mov    rax,QWORD PTR [r8+r14*8+0x4d320]
   14002f7cf:	mov    BYTE PTR [rax+rsi*1+0x3a],dl
   14002f7d3:	jmp    0x14002f82c
   14002f7d5:	cmp    rbx,r13
   14002f7d8:	jne    0x14002f7ee
   14002f7da:	mov    edx,0xa
   14002f7df:	cmp    WORD PTR [rsp+0xb8],dx
   14002f7e7:	jne    0x14002f7ee
   14002f7e9:	mov    WORD PTR [rbx],dx
   14002f7ec:	jmp    0x14002f82c
   14002f7ee:	mov    ecx,DWORD PTR [rsp+0xa0]
   14002f7f5:	mov    rdx,0xfffffffffffffffe
   14002f7fc:	lea    r8d,[rdx+0x3]
   14002f800:	call   0x14002d1bc
   14002f805:	mov    edx,0xa
   14002f80a:	lea    r8,[rip+0xfffffffffffd07ef]        # 0x140000000
   14002f811:	cmp    WORD PTR [rsp+0xb8],dx
   14002f819:	je     0x14002f830
   14002f81b:	jmp    0x14002f829
   14002f81d:	mov    edx,0xa
   14002f822:	lea    r8,[rip+0xfffffffffffd07d7]        # 0x140000000
   14002f829:	mov    WORD PTR [rbx],bp
   14002f82c:	add    rbx,0x2
   14002f830:	cmp    r12,r15
   14002f833:	jb     0x14002f6e7
   14002f839:	jmp    0x14002f85d
   14002f83b:	mov    rax,QWORD PTR [r8+r14*8+0x4d320]
   14002f843:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   14002f848:	jne    0x14002f851
   14002f84a:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   14002f84f:	jmp    0x14002f85d
   14002f851:	movzx  eax,WORD PTR [r12]
   14002f856:	mov    WORD PTR [rbx],ax
   14002f859:	add    rbx,0x2
   14002f85d:	mov    ebp,ebx
   14002f85f:	sub    ebp,r13d
   14002f862:	mov    r12d,DWORD PTR [rsp+0x34]
   14002f867:	mov    r15,QWORD PTR [rsp+0xa8]
   14002f86f:	cmp    r13,r15
   14002f872:	je     0x14002f87c
   14002f874:	mov    rcx,r13
   14002f877:	call   0x14001ca48
   14002f87c:	cmp    r12d,0xfffffffe
   14002f880:	cmove  r12d,ebp
   14002f884:	mov    eax,r12d
   14002f887:	jmp    0x14002f8f2
   14002f889:	call   QWORD PTR [rip+0xa839]        # 0x14003a0c8
   14002f88f:	cmp    eax,0x5
   14002f892:	jne    0x14002f8af
   14002f894:	call   0x140020aa4
   14002f899:	mov    DWORD PTR [rax],0x9
   14002f89f:	call   0x140020ac4
   14002f8a4:	mov    DWORD PTR [rax],0x5
   14002f8aa:	jmp    0x14002f5cd
   14002f8af:	cmp    eax,0x6d
   14002f8b2:	jne    0x14002f8b9
   14002f8b4:	mov    r12d,edi
   14002f8b7:	jmp    0x14002f867
   14002f8b9:	mov    ecx,eax
   14002f8bb:	call   0x140020ae4
   14002f8c0:	jmp    0x14002f5cd
   14002f8c5:	xor    eax,eax
   14002f8c7:	jmp    0x14002f8f2
   14002f8c9:	call   0x140020ac4
   14002f8ce:	mov    DWORD PTR [rax],edi
   14002f8d0:	call   0x140020aa4
   14002f8d5:	mov    DWORD PTR [rax],0x9
   14002f8db:	xor    r9d,r9d
   14002f8de:	xor    r8d,r8d
   14002f8e1:	xor    edx,edx
   14002f8e3:	xor    ecx,ecx
   14002f8e5:	mov    QWORD PTR [rsp+0x20],rdi
   14002f8ea:	call   0x14001ccf0
   14002f8ef:	or     eax,0xffffffff
   14002f8f2:	add    rsp,0x58
   14002f8f6:	pop    r15
   14002f8f8:	pop    r14
   14002f8fa:	pop    r13
   14002f8fc:	pop    r12
   14002f8fe:	pop    rdi
   14002f8ff:	pop    rsi
   14002f900:	pop    rbp
   14002f901:	pop    rbx
   14002f902:	ret    
   14002f903:	int3   
   14002f904:	mov    QWORD PTR [rsp+0x10],rbx
   14002f909:	mov    QWORD PTR [rsp+0x18],rsi
   14002f90e:	mov    DWORD PTR [rsp+0x8],ecx
   14002f912:	push   rdi
   14002f913:	push   r12
   14002f915:	push   r13
   14002f917:	push   r14
   14002f919:	push   r15
   14002f91b:	sub    rsp,0x30
   14002f91f:	mov    esi,r8d
   14002f922:	mov    r13,rdx
   14002f925:	movsxd rdi,ecx
   14002f928:	cmp    edi,0xfffffffe
   14002f92b:	jne    0x14002f949
   14002f92d:	call   0x140020ac4
   14002f932:	xor    ebx,ebx
   14002f934:	mov    DWORD PTR [rax],ebx
   14002f936:	call   0x140020aa4
   14002f93b:	mov    DWORD PTR [rax],0x9
   14002f941:	or     eax,0xffffffff
   14002f944:	jmp    0x14002fa5e
   14002f949:	xor    ebx,ebx
   14002f94b:	cmp    edi,ebx
   14002f94d:	jl     0x14002fa35
   14002f953:	cmp    edi,DWORD PTR [rip+0x1d9af]        # 0x14004d308
   14002f959:	jae    0x14002fa35
   14002f95f:	mov    r12,rdi
   14002f962:	mov    r14,rdi
   14002f965:	sar    r14,0x5
   14002f969:	lea    r15,[rip+0x1d9b0]        # 0x14004d320
   14002f970:	and    r12d,0x1f
   14002f974:	imul   r12,r12,0x58
   14002f978:	mov    rax,QWORD PTR [r15+r14*8]
   14002f97c:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   14002f982:	and    ecx,0x1
   14002f985:	jne    0x14002f9b5
   14002f987:	call   0x140020ac4
   14002f98c:	mov    DWORD PTR [rax],ebx
   14002f98e:	call   0x140020aa4
   14002f993:	mov    DWORD PTR [rax],0x9
   14002f999:	mov    QWORD PTR [rsp+0x20],rbx
   14002f99e:	xor    r9d,r9d
   14002f9a1:	xor    r8d,r8d
   14002f9a4:	xor    edx,edx
   14002f9a6:	xor    ecx,ecx
   14002f9a8:	call   0x14001ccf0
   14002f9ad:	or     eax,0xffffffff
   14002f9b0:	jmp    0x14002fa5e
   14002f9b5:	mov    eax,ebx
   14002f9b7:	cmp    r8d,0x7fffffff
   14002f9be:	setbe  al
   14002f9c1:	cmp    eax,ebx
   14002f9c3:	jne    0x14002f9f0
   14002f9c5:	call   0x140020ac4
   14002f9ca:	mov    DWORD PTR [rax],ebx
   14002f9cc:	call   0x140020aa4
   14002f9d1:	mov    DWORD PTR [rax],0x16
   14002f9d7:	mov    QWORD PTR [rsp+0x20],rbx
   14002f9dc:	xor    r9d,r9d
   14002f9df:	xor    r8d,r8d
   14002f9e2:	xor    edx,edx
   14002f9e4:	xor    ecx,ecx
   14002f9e6:	call   0x14001ccf0
   14002f9eb:	or     eax,0xffffffff
   14002f9ee:	jmp    0x14002fa5e
   14002f9f0:	mov    ecx,edi
   14002f9f2:	call   0x14002fcbc
   14002f9f7:	nop
   14002f9f8:	mov    rax,QWORD PTR [r15+r14*8]
   14002f9fc:	test   BYTE PTR [rax+r12*1+0x8],0x1
   14002fa02:	je     0x14002fa15
   14002fa04:	mov    r8d,esi
   14002fa07:	mov    rdx,r13
   14002fa0a:	mov    ecx,edi
   14002fa0c:	call   0x14002f184
   14002fa11:	mov    ebx,eax
   14002fa13:	jmp    0x14002fa2a
   14002fa15:	call   0x140020aa4
   14002fa1a:	mov    DWORD PTR [rax],0x9
   14002fa20:	call   0x140020ac4
   14002fa25:	mov    DWORD PTR [rax],ebx
   14002fa27:	or     ebx,0xffffffff
   14002fa2a:	mov    ecx,edi
   14002fa2c:	call   0x14002fd64
   14002fa31:	mov    eax,ebx
   14002fa33:	jmp    0x14002fa5e
   14002fa35:	call   0x140020ac4
   14002fa3a:	mov    DWORD PTR [rax],ebx
   14002fa3c:	call   0x140020aa4
   14002fa41:	mov    DWORD PTR [rax],0x9
   14002fa47:	mov    QWORD PTR [rsp+0x20],rbx
   14002fa4c:	xor    r9d,r9d
   14002fa4f:	xor    r8d,r8d
   14002fa52:	xor    edx,edx
   14002fa54:	xor    ecx,ecx
   14002fa56:	call   0x14001ccf0
   14002fa5b:	or     eax,0xffffffff
   14002fa5e:	mov    rbx,QWORD PTR [rsp+0x68]
   14002fa63:	mov    rsi,QWORD PTR [rsp+0x70]
   14002fa68:	add    rsp,0x30
   14002fa6c:	pop    r15
   14002fa6e:	pop    r14
   14002fa70:	pop    r13
   14002fa72:	pop    r12
   14002fa74:	pop    rdi
   14002fa75:	ret    
   14002fa76:	int3   
   14002fa77:	int3   
   14002fa78:	sub    rsp,0x68
   14002fa7c:	mov    rax,QWORD PTR [rip+0x199dd]        # 0x140049460
   14002fa83:	xor    rax,rsp
   14002fa86:	mov    QWORD PTR [rsp+0x50],rax
   14002fa8b:	cmp    DWORD PTR [rip+0x1acce],0x0        # 0x14004a760
   14002fa92:	mov    WORD PTR [rsp+0x40],cx
   14002fa97:	je     0x14002faff
   14002fa99:	mov    rcx,QWORD PTR [rip+0x1b008]        # 0x14004aaa8
   14002faa0:	cmp    rcx,0xfffffffffffffffe
   14002faa4:	jne    0x14002fab2
   14002faa6:	call   0x140030dc8
   14002faab:	mov    rcx,QWORD PTR [rip+0x1aff6]        # 0x14004aaa8
   14002fab2:	cmp    rcx,0xffffffffffffffff
   14002fab6:	je     0x14002fb75
   14002fabc:	and    QWORD PTR [rsp+0x20],0x0
   14002fac2:	lea    r9,[rsp+0x44]
   14002fac7:	lea    rdx,[rsp+0x40]
   14002facc:	mov    r8d,0x1
   14002fad2:	call   QWORD PTR [rip+0xa678]        # 0x14003a150
   14002fad8:	test   eax,eax
   14002fada:	jne    0x14002fb69
   14002fae0:	cmp    DWORD PTR [rip+0x1ac79],0x2        # 0x14004a760
   14002fae7:	jne    0x14002fb75
   14002faed:	call   QWORD PTR [rip+0xa5d5]        # 0x14003a0c8
   14002faf3:	cmp    eax,0x78
   14002faf6:	jne    0x14002fb75
   14002faf8:	and    DWORD PTR [rip+0x1ac61],0x0        # 0x14004a760
   14002faff:	call   QWORD PTR [rip+0xa653]        # 0x14003a158
   14002fb05:	and    QWORD PTR [rsp+0x38],0x0
   14002fb0b:	and    QWORD PTR [rsp+0x30],0x0
   14002fb11:	mov    ecx,eax
   14002fb13:	lea    rax,[rsp+0x48]
   14002fb18:	lea    r8,[rsp+0x40]
   14002fb1d:	mov    r9d,0x1
   14002fb23:	xor    edx,edx
   14002fb25:	mov    DWORD PTR [rsp+0x28],0x5
   14002fb2d:	mov    QWORD PTR [rsp+0x20],rax
   14002fb32:	call   QWORD PTR [rip+0xa6f0]        # 0x14003a228
   14002fb38:	mov    rcx,QWORD PTR [rip+0x1af69]        # 0x14004aaa8
   14002fb3f:	cmp    rcx,0xffffffffffffffff
   14002fb43:	je     0x14002fb75
   14002fb45:	and    QWORD PTR [rsp+0x20],0x0
   14002fb4b:	lea    r9,[rsp+0x44]
   14002fb50:	lea    rdx,[rsp+0x48]
   14002fb55:	mov    r8d,eax
   14002fb58:	call   QWORD PTR [rip+0xa602]        # 0x14003a160
   14002fb5e:	test   eax,eax
   14002fb60:	je     0x14002fb75
   14002fb62:	mov    ax,WORD PTR [rsp+0x40]
   14002fb67:	jmp    0x14002fb7a
   14002fb69:	mov    DWORD PTR [rip+0x1abed],0x1        # 0x14004a760
   14002fb73:	jmp    0x14002fb62
   14002fb75:	mov    eax,0xffff
   14002fb7a:	mov    rcx,QWORD PTR [rsp+0x50]
   14002fb7f:	xor    rcx,rsp
   14002fb82:	call   0x14001c500
   14002fb87:	add    rsp,0x68
   14002fb8b:	ret    
   14002fb8c:	mov    QWORD PTR [rsp+0x8],rbx
   14002fb91:	mov    QWORD PTR [rsp+0x10],rbp
   14002fb96:	push   rdi
   14002fb97:	sub    rsp,0x20
   14002fb9b:	test   ecx,ecx
   14002fb9d:	js     0x14002fc12
   14002fb9f:	cmp    ecx,DWORD PTR [rip+0x1d763]        # 0x14004d308
   14002fba5:	jae    0x14002fc12
   14002fba7:	movsxd rbx,ecx
   14002fbaa:	lea    rbp,[rip+0x1d76f]        # 0x14004d320
   14002fbb1:	mov    rdi,rbx
   14002fbb4:	and    ebx,0x1f
   14002fbb7:	sar    rdi,0x5
   14002fbbb:	imul   rbx,rbx,0x58
   14002fbbf:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14002fbc4:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14002fbc9:	je     0x14002fc12
   14002fbcb:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   14002fbd0:	je     0x14002fc12
   14002fbd2:	cmp    DWORD PTR [rip+0x196f7],0x1        # 0x1400492d0
   14002fbd9:	jne    0x14002fc04
   14002fbdb:	test   ecx,ecx
   14002fbdd:	je     0x14002fbf7
   14002fbdf:	sub    ecx,0x1
   14002fbe2:	je     0x14002fbf0
   14002fbe4:	cmp    ecx,0x1
   14002fbe7:	jne    0x14002fc04
   14002fbe9:	mov    ecx,0xfffffff4
   14002fbee:	jmp    0x14002fbfc
   14002fbf0:	mov    ecx,0xfffffff5
   14002fbf5:	jmp    0x14002fbfc
   14002fbf7:	mov    ecx,0xfffffff6
   14002fbfc:	xor    edx,edx
   14002fbfe:	call   QWORD PTR [rip+0xa544]        # 0x14003a148
   14002fc04:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14002fc09:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   14002fc0e:	xor    eax,eax
   14002fc10:	jmp    0x14002fc28
   14002fc12:	call   0x140020aa4
   14002fc17:	mov    DWORD PTR [rax],0x9
   14002fc1d:	call   0x140020ac4
   14002fc22:	and    DWORD PTR [rax],0x0
   14002fc25:	or     eax,0xffffffff
   14002fc28:	mov    rbx,QWORD PTR [rsp+0x30]
   14002fc2d:	mov    rbp,QWORD PTR [rsp+0x38]
   14002fc32:	add    rsp,0x20
   14002fc36:	pop    rdi
   14002fc37:	ret    
   14002fc38:	sub    rsp,0x38
   14002fc3c:	cmp    ecx,0xfffffffe
   14002fc3f:	jne    0x14002fc56
   14002fc41:	call   0x140020ac4
   14002fc46:	and    DWORD PTR [rax],0x0
   14002fc49:	call   0x140020aa4
   14002fc4e:	mov    DWORD PTR [rax],0x9
   14002fc54:	jmp    0x14002fcb3
   14002fc56:	test   ecx,ecx
   14002fc58:	js     0x14002fc8b
   14002fc5a:	cmp    ecx,DWORD PTR [rip+0x1d6a8]        # 0x14004d308
   14002fc60:	jae    0x14002fc8b
   14002fc62:	movsxd rdx,ecx
   14002fc65:	lea    rcx,[rip+0x1d6b4]        # 0x14004d320
   14002fc6c:	mov    rax,rdx
   14002fc6f:	and    edx,0x1f
   14002fc72:	sar    rax,0x5
   14002fc76:	imul   rdx,rdx,0x58
   14002fc7a:	mov    rax,QWORD PTR [rcx+rax*8]
   14002fc7e:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   14002fc83:	je     0x14002fc8b
   14002fc85:	mov    rax,QWORD PTR [rax+rdx*1]
   14002fc89:	jmp    0x14002fcb7
   14002fc8b:	call   0x140020ac4
   14002fc90:	and    DWORD PTR [rax],0x0
   14002fc93:	call   0x140020aa4
   14002fc98:	and    QWORD PTR [rsp+0x20],0x0
   14002fc9e:	xor    r9d,r9d
   14002fca1:	xor    r8d,r8d
   14002fca4:	xor    edx,edx
   14002fca6:	xor    ecx,ecx
   14002fca8:	mov    DWORD PTR [rax],0x9
   14002fcae:	call   0x14001ccf0
   14002fcb3:	or     rax,0xffffffffffffffff
   14002fcb7:	add    rsp,0x38
   14002fcbb:	ret    
   14002fcbc:	mov    rax,rsp
   14002fcbf:	mov    QWORD PTR [rax+0x8],rbx
   14002fcc3:	mov    QWORD PTR [rax+0x10],rsi
   14002fcc7:	mov    QWORD PTR [rax+0x18],rdi
   14002fccb:	mov    QWORD PTR [rax+0x20],r12
   14002fccf:	push   r13
   14002fcd1:	sub    rsp,0x20
   14002fcd5:	movsxd rbx,ecx
   14002fcd8:	mov    r12,rbx
   14002fcdb:	sar    r12,0x5
   14002fcdf:	lea    r13,[rip+0x1d63a]        # 0x14004d320
   14002fce6:	and    ebx,0x1f
   14002fce9:	imul   rbx,rbx,0x58
   14002fced:	mov    rsi,QWORD PTR [r13+r12*8+0x0]
   14002fcf2:	mov    edi,0x1
   14002fcf7:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14002fcfc:	jne    0x14002fd31
   14002fcfe:	lea    ecx,[rdi+0x9]
   14002fd01:	call   0x140028880
   14002fd06:	nop
   14002fd07:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14002fd0c:	jne    0x14002fd27
   14002fd0e:	lea    rcx,[rbx+rsi*1+0x10]
   14002fd13:	mov    edx,0xfa0
   14002fd18:	call   0x14002ca48
   14002fd1d:	neg    eax
   14002fd1f:	sbb    edx,edx
   14002fd21:	and    edi,edx
   14002fd23:	inc    DWORD PTR [rbx+rsi*1+0xc]
   14002fd27:	mov    ecx,0xa
   14002fd2c:	call   0x140028780
   14002fd31:	test   edi,edi
   14002fd33:	je     0x14002fd45
   14002fd35:	mov    rcx,QWORD PTR [r13+r12*8+0x0]
   14002fd3a:	lea    rcx,[rcx+rbx*1+0x10]
   14002fd3f:	call   QWORD PTR [rip+0xa37b]        # 0x14003a0c0
   14002fd45:	mov    eax,edi
   14002fd47:	mov    rbx,QWORD PTR [rsp+0x30]
   14002fd4c:	mov    rsi,QWORD PTR [rsp+0x38]
   14002fd51:	mov    rdi,QWORD PTR [rsp+0x40]
   14002fd56:	mov    r12,QWORD PTR [rsp+0x48]
   14002fd5b:	add    rsp,0x20
   14002fd5f:	pop    r13
   14002fd61:	ret    
   14002fd62:	int3   
   14002fd63:	int3   
   14002fd64:	movsxd rdx,ecx
   14002fd67:	lea    rcx,[rip+0x1d5b2]        # 0x14004d320
   14002fd6e:	mov    rax,rdx
   14002fd71:	and    edx,0x1f
   14002fd74:	sar    rax,0x5
   14002fd78:	imul   rdx,rdx,0x58
   14002fd7c:	mov    rax,QWORD PTR [rcx+rax*8]
   14002fd80:	lea    rcx,[rax+rdx*1+0x10]
   14002fd85:	rex.W jmp QWORD PTR [rip+0xa324]        # 0x14003a0b0
   14002fd8c:	mov    rax,rsp
   14002fd8f:	mov    QWORD PTR [rax+0x8],rbx
   14002fd93:	mov    QWORD PTR [rax+0x10],rbp
   14002fd97:	mov    QWORD PTR [rax+0x18],rsi
   14002fd9b:	mov    QWORD PTR [rax+0x20],rdi
   14002fd9f:	push   r12
   14002fda1:	push   r13
   14002fda3:	push   r14
   14002fda5:	sub    rsp,0x50
   14002fda9:	mov    r14,rdx
   14002fdac:	mov    rdx,rcx
   14002fdaf:	lea    rcx,[rax-0x38]
   14002fdb3:	mov    r12d,r9d
   14002fdb6:	mov    r13,r8
   14002fdb9:	call   0x14001cf30
   14002fdbe:	test   r13,r13
   14002fdc1:	je     0x14002fdc7
   14002fdc3:	mov    QWORD PTR [r13+0x0],r14
   14002fdc7:	test   r14,r14
   14002fdca:	jne    0x14002fdf6
   14002fdcc:	call   0x140020aa4
   14002fdd1:	and    QWORD PTR [rsp+0x20],0x0
   14002fdd7:	xor    r9d,r9d
   14002fdda:	xor    r8d,r8d
   14002fddd:	xor    edx,edx
   14002fddf:	xor    ecx,ecx
   14002fde1:	mov    DWORD PTR [rax],0x16
   14002fde7:	call   0x14001ccf0
   14002fdec:	cmp    BYTE PTR [rsp+0x48],0x0
   14002fdf1:	jmp    0x14002ffdf
   14002fdf6:	test   r12d,r12d
   14002fdf9:	je     0x14002fe07
   14002fdfb:	cmp    r12d,0x2
   14002fdff:	jl     0x14002fdcc
   14002fe01:	cmp    r12d,0x24
   14002fe05:	jg     0x14002fdcc
   14002fe07:	mov    bpl,BYTE PTR [r14]
   14002fe0a:	mov    r8,QWORD PTR [rsp+0x30]
   14002fe0f:	xor    edi,edi
   14002fe11:	lea    rbx,[r14+0x1]
   14002fe15:	cmp    DWORD PTR [r8+0x10c],0x1
   14002fe1d:	jle    0x14002fe39
   14002fe1f:	lea    r8,[rsp+0x30]
   14002fe24:	movzx  ecx,bpl
   14002fe28:	mov    edx,0x8
   14002fe2d:	call   0x140029c40
   14002fe32:	mov    r8,QWORD PTR [rsp+0x30]
   14002fe37:	jmp    0x14002fe4b
   14002fe39:	mov    rax,QWORD PTR [r8+0x140]
   14002fe40:	movzx  ecx,bpl
   14002fe44:	movzx  eax,WORD PTR [rax+rcx*2]
   14002fe48:	and    eax,0x8
   14002fe4b:	test   eax,eax
   14002fe4d:	je     0x14002fe57
   14002fe4f:	mov    bpl,BYTE PTR [rbx]
   14002fe52:	inc    rbx
   14002fe55:	jmp    0x14002fe15
   14002fe57:	mov    esi,DWORD PTR [rsp+0x90]
   14002fe5e:	cmp    bpl,0x2d
   14002fe62:	jne    0x14002fe69
   14002fe64:	or     esi,0x2
   14002fe67:	jmp    0x14002fe6f
   14002fe69:	cmp    bpl,0x2b
   14002fe6d:	jne    0x14002fe75
   14002fe6f:	mov    bpl,BYTE PTR [rbx]
   14002fe72:	inc    rbx
   14002fe75:	test   r12d,r12d
   14002fe78:	js     0x14002ffd1
   14002fe7e:	cmp    r12d,0x1
   14002fe82:	je     0x14002ffd1
   14002fe88:	cmp    r12d,0x24
   14002fe8c:	jg     0x14002ffd1
   14002fe92:	test   r12d,r12d
   14002fe95:	jne    0x14002febf
   14002fe97:	cmp    bpl,0x30
   14002fe9b:	je     0x14002fea5
   14002fe9d:	mov    r12d,0xa
   14002fea3:	jmp    0x14002fedd
   14002fea5:	cmp    BYTE PTR [rbx],0x78
   14002fea8:	je     0x14002feb7
   14002feaa:	cmp    BYTE PTR [rbx],0x58
   14002fead:	je     0x14002feb7
   14002feaf:	mov    r12d,0x8
   14002feb5:	jmp    0x14002fedd
   14002feb7:	mov    r12d,0x10
   14002febd:	jmp    0x14002fecb
   14002febf:	cmp    r12d,0x10
   14002fec3:	jne    0x14002fedd
   14002fec5:	cmp    bpl,0x30
   14002fec9:	jne    0x14002fedd
   14002fecb:	cmp    BYTE PTR [rbx],0x78
   14002fece:	je     0x14002fed5
   14002fed0:	cmp    BYTE PTR [rbx],0x58
   14002fed3:	jne    0x14002fedd
   14002fed5:	mov    bpl,BYTE PTR [rbx+0x1]
   14002fed9:	add    rbx,0x2
   14002fedd:	mov    r10,QWORD PTR [r8+0x140]
   14002fee4:	xor    edx,edx
   14002fee6:	or     eax,0xffffffff
   14002fee9:	div    r12d
   14002feec:	mov    r9d,eax
   14002feef:	movzx  ecx,bpl
   14002fef3:	movzx  r8d,WORD PTR [r10+rcx*2]
   14002fef8:	test   r8b,0x4
   14002fefc:	je     0x14002ff07
   14002fefe:	movsx  ecx,bpl
   14002ff02:	sub    ecx,0x30
   14002ff05:	jmp    0x14002ff21
   14002ff07:	test   r8d,0x103
   14002ff0e:	je     0x14002ff3c
   14002ff10:	lea    eax,[rbp-0x61]
   14002ff13:	movsx  ecx,bpl
   14002ff17:	cmp    al,0x19
   14002ff19:	ja     0x14002ff1e
   14002ff1b:	sub    ecx,0x20
   14002ff1e:	add    ecx,0xffffffc9
   14002ff21:	cmp    ecx,r12d
   14002ff24:	jae    0x14002ff3c
   14002ff26:	or     esi,0x8
   14002ff29:	cmp    edi,r9d
   14002ff2c:	jb     0x14002ff50
   14002ff2e:	jne    0x14002ff34
   14002ff30:	cmp    ecx,edx
   14002ff32:	jbe    0x14002ff50
   14002ff34:	or     esi,0x4
   14002ff37:	test   r13,r13
   14002ff3a:	jne    0x14002ff56
   14002ff3c:	dec    rbx
   14002ff3f:	test   sil,0x8
   14002ff43:	jne    0x14002ff5e
   14002ff45:	test   r13,r13
   14002ff48:	cmovne rbx,r14
   14002ff4c:	xor    edi,edi
   14002ff4e:	jmp    0x14002ffa9
   14002ff50:	imul   edi,r12d
   14002ff54:	add    edi,ecx
   14002ff56:	mov    bpl,BYTE PTR [rbx]
   14002ff59:	inc    rbx
   14002ff5c:	jmp    0x14002feef
   14002ff5e:	mov    ebp,0x7fffffff
   14002ff63:	test   sil,0x4
   14002ff67:	jne    0x14002ff86
   14002ff69:	test   sil,0x1
   14002ff6d:	jne    0x14002ffa9
   14002ff6f:	mov    eax,esi
   14002ff71:	and    eax,0x2
   14002ff74:	je     0x14002ff7e
   14002ff76:	cmp    edi,0x80000000
   14002ff7c:	ja     0x14002ff86
   14002ff7e:	test   eax,eax
   14002ff80:	jne    0x14002ffa9
   14002ff82:	cmp    edi,ebp
   14002ff84:	jbe    0x14002ffa9
   14002ff86:	call   0x140020aa4
   14002ff8b:	mov    DWORD PTR [rax],0x22
   14002ff91:	test   sil,0x1
   14002ff95:	je     0x14002ff9c
   14002ff97:	or     edi,0xffffffff
   14002ff9a:	jmp    0x14002ffa9
   14002ff9c:	mov    al,sil
   14002ff9f:	and    al,0x2
   14002ffa1:	neg    al
   14002ffa3:	sbb    edi,edi
   14002ffa5:	neg    edi
   14002ffa7:	add    edi,ebp
   14002ffa9:	test   r13,r13
   14002ffac:	je     0x14002ffb2
   14002ffae:	mov    QWORD PTR [r13+0x0],rbx
   14002ffb2:	test   sil,0x2
   14002ffb6:	je     0x14002ffba
   14002ffb8:	neg    edi
   14002ffba:	cmp    BYTE PTR [rsp+0x48],0x0
   14002ffbf:	je     0x14002ffcd
   14002ffc1:	mov    rcx,QWORD PTR [rsp+0x40]
   14002ffc6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002ffcd:	mov    eax,edi
   14002ffcf:	jmp    0x14002ffef
   14002ffd1:	test   r13,r13
   14002ffd4:	je     0x14002ffda
   14002ffd6:	mov    QWORD PTR [r13+0x0],r14
   14002ffda:	cmp    BYTE PTR [rsp+0x48],dil
   14002ffdf:	je     0x14002ffed
   14002ffe1:	mov    rax,QWORD PTR [rsp+0x40]
   14002ffe6:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002ffed:	xor    eax,eax
   14002ffef:	lea    r11,[rsp+0x50]
   14002fff4:	mov    rbx,QWORD PTR [r11+0x20]
   14002fff8:	mov    rbp,QWORD PTR [r11+0x28]
   14002fffc:	mov    rsi,QWORD PTR [r11+0x30]
   140030000:	mov    rdi,QWORD PTR [r11+0x38]
   140030004:	mov    rsp,r11
   140030007:	pop    r14
   140030009:	pop    r13
   14003000b:	pop    r12
   14003000d:	ret    
   14003000e:	int3   
   14003000f:	int3   
   140030010:	sub    rsp,0x38
   140030014:	xor    eax,eax
   140030016:	mov    r9d,r8d
   140030019:	mov    r8,rdx
   14003001c:	mov    DWORD PTR [rsp+0x20],eax
   140030020:	mov    rdx,rcx
   140030023:	cmp    DWORD PTR [rip+0x1badb],eax        # 0x14004bb04
   140030029:	jne    0x140030034
   14003002b:	lea    rcx,[rip+0x199de]        # 0x140049a10
   140030032:	jmp    0x140030036
   140030034:	xor    ecx,ecx
   140030036:	call   0x14002fd8c
   14003003b:	add    rsp,0x38
   14003003f:	ret    
   140030040:	mov    r11,rsp
   140030043:	mov    QWORD PTR [r11+0x10],rbx
   140030047:	push   rbp
   140030048:	push   rsi
   140030049:	push   rdi
   14003004a:	push   r12
   14003004c:	push   r13
   14003004e:	push   r14
   140030050:	push   r15
   140030052:	sub    rsp,0xb0
   140030059:	mov    rax,QWORD PTR [rip+0x19400]        # 0x140049460
   140030060:	xor    rax,rsp
   140030063:	mov    QWORD PTR [rsp+0xa0],rax
   14003006b:	movzx  edi,WORD PTR [rcx+0x8]
   14003006f:	mov    r10d,DWORD PTR [rcx]
   140030072:	mov    r14d,0x8000
   140030078:	mov    rbx,r9
   14003007b:	mov    r9d,DWORD PTR [rcx+0x4]
   14003007f:	movzx  ecx,di
   140030082:	and    cx,r14w
   140030086:	mov    BYTE PTR [r11-0x68],0xcc
   14003008b:	mov    BYTE PTR [r11-0x67],0xcc
   140030090:	mov    BYTE PTR [r11-0x66],0xcc
   140030095:	mov    BYTE PTR [r11-0x65],0xcc
   14003009a:	mov    BYTE PTR [r11-0x64],0xcc
   14003009f:	mov    BYTE PTR [r11-0x63],0xcc
   1400300a4:	mov    BYTE PTR [r11-0x62],0xcc
   1400300a9:	mov    BYTE PTR [r11-0x61],0xcc
   1400300ae:	mov    BYTE PTR [r11-0x60],0xcc
   1400300b3:	mov    BYTE PTR [r11-0x5f],0xcc
   1400300b8:	mov    BYTE PTR [r11-0x5e],0xfb
   1400300bd:	mov    BYTE PTR [r11-0x5d],0x3f
   1400300c2:	mov    r11d,0x1
   1400300c8:	lea    ebp,[r14-0x1]
   1400300cc:	lea    eax,[r11+0x1f]
   1400300d0:	xor    r12d,r12d
   1400300d3:	and    di,bp
   1400300d6:	mov    DWORD PTR [rsp+0x44],edx
   1400300da:	mov    QWORD PTR [rsp+0x50],rbx
   1400300df:	mov    DWORD PTR [rsp+0x4c],r8d
   1400300e4:	mov    WORD PTR [rsp+0x30],cx
   1400300e9:	lea    edx,[rax+0xd]
   1400300ec:	cmp    cx,r12w
   1400300f0:	je     0x1400300f7
   1400300f2:	mov    BYTE PTR [rbx+0x2],dl
   1400300f5:	jmp    0x1400300fa
   1400300f7:	mov    BYTE PTR [rbx+0x2],al
   1400300fa:	cmp    di,r12w
   1400300fe:	jne    0x140030131
   140030100:	cmp    r9d,r12d
   140030103:	jne    0x1400301f6
   140030109:	cmp    r10d,r12d
   14003010c:	jne    0x1400301f6
   140030112:	cmp    cx,r14w
   140030116:	cmove  eax,edx
   140030119:	mov    BYTE PTR [rbx+0x4],0x30
   14003011d:	mov    WORD PTR [rbx],r12w
   140030121:	mov    BYTE PTR [rbx+0x3],r11b
   140030125:	mov    BYTE PTR [rbx+0x2],al
   140030128:	mov    BYTE PTR [rbx+0x5],r12b
   14003012c:	jmp    0x140030b4d
   140030131:	cmp    di,bp
   140030134:	jne    0x1400301f6
   14003013a:	mov    eax,0x80000000
   14003013f:	mov    WORD PTR [rbx],r11w
   140030143:	cmp    r9d,eax
   140030146:	jne    0x14003014d
   140030148:	cmp    r10d,r12d
   14003014b:	je     0x14003015d
   14003014d:	bt     r9d,0x1e
   140030152:	jb     0x14003015d
   140030154:	lea    r8,[rip+0xd45d]        # 0x14003d5b8
   14003015b:	jmp    0x1400301c3
   14003015d:	cmp    cx,r12w
   140030161:	je     0x14003017a
   140030163:	cmp    r9d,0xc0000000
   14003016a:	jne    0x14003017a
   14003016c:	cmp    r10d,r12d
   14003016f:	jne    0x1400301bc
   140030171:	lea    r8,[rip+0xd438]        # 0x14003d5b0
   140030178:	jmp    0x14003018b
   14003017a:	cmp    r9d,eax
   14003017d:	jne    0x1400301bc
   14003017f:	cmp    r10d,r12d
   140030182:	jne    0x1400301bc
   140030184:	lea    r8,[rip+0xd41d]        # 0x14003d5a8
   14003018b:	lea    rcx,[rbx+0x4]
   14003018f:	mov    edx,0x16
   140030194:	call   0x140023db4
   140030199:	cmp    eax,r12d
   14003019c:	je     0x1400301b2
   14003019e:	xor    r9d,r9d
   1400301a1:	xor    r8d,r8d
   1400301a4:	xor    edx,edx
   1400301a6:	xor    ecx,ecx
   1400301a8:	mov    QWORD PTR [rsp+0x20],r12
   1400301ad:	call   0x14001cbc8
   1400301b2:	mov    eax,0x5
   1400301b7:	mov    BYTE PTR [rbx+0x3],al
   1400301ba:	jmp    0x1400301ee
   1400301bc:	lea    r8,[rip+0xd3dd]        # 0x14003d5a0
   1400301c3:	lea    rcx,[rbx+0x4]
   1400301c7:	mov    edx,0x16
   1400301cc:	call   0x140023db4
   1400301d1:	cmp    eax,r12d
   1400301d4:	je     0x1400301ea
   1400301d6:	xor    r9d,r9d
   1400301d9:	xor    r8d,r8d
   1400301dc:	xor    edx,edx
   1400301de:	xor    ecx,ecx
   1400301e0:	mov    QWORD PTR [rsp+0x20],r12
   1400301e5:	call   0x14001cbc8
   1400301ea:	mov    BYTE PTR [rbx+0x3],0x6
   1400301ee:	mov    r11d,r12d
   1400301f1:	jmp    0x140030b4d
   1400301f6:	movzx  r8d,di
   1400301fa:	mov    ecx,r9d
   1400301fd:	mov    DWORD PTR [rsp+0x76],r9d
   140030202:	shr    ecx,0x18
   140030205:	mov    eax,r8d
   140030208:	mov    DWORD PTR [rsp+0x72],r10d
   14003020d:	shr    eax,0x8
   140030210:	lea    r9,[rip+0x1a5c9]        # 0x14004a7e0
   140030217:	mov    r13d,0x5
   14003021d:	imul   r8d,r8d,0x4d10
   140030224:	lea    edx,[rax+rcx*2]
   140030227:	sub    r9,0x60
   14003022b:	mov    WORD PTR [rsp+0x7a],di
   140030230:	mov    WORD PTR [rsp+0x70],r12w
   140030236:	mov    DWORD PTR [rsp+0x48],r13d
   14003023b:	mov    esi,0xbffd
   140030240:	imul   edx,edx,0x4d
   140030243:	lea    ecx,[rdx+r8*1-0x134312f4]
   14003024b:	mov    edi,0x3fbf
   140030250:	sar    ecx,0x10
   140030253:	movsx  r10d,cx
   140030257:	mov    DWORD PTR [rsp+0x34],ecx
   14003025b:	neg    r10d
   14003025e:	cmp    r10d,r12d
   140030261:	je     0x14003062e
   140030267:	jge    0x140030277
   140030269:	lea    r9,[rip+0x1a6d0]        # 0x14004a940
   140030270:	neg    r10d
   140030273:	sub    r9,0x60
   140030277:	cmp    r10d,r12d
   14003027a:	je     0x14003062e
   140030280:	mov    r8d,DWORD PTR [rsp+0x74]
   140030285:	mov    edx,DWORD PTR [rsp+0x70]
   140030289:	mov    eax,r10d
   14003028c:	add    r9,0x54
   140030290:	sar    r10d,0x3
   140030294:	and    eax,0x7
   140030297:	mov    QWORD PTR [rsp+0x38],r9
   14003029c:	mov    DWORD PTR [rsp+0x40],r10d
   1400302a1:	cmp    eax,r12d
   1400302a4:	je     0x14003061a
   1400302aa:	cdqe   
   1400302ac:	lea    rcx,[rax+rax*2]
   1400302b0:	lea    rbp,[r9+rcx*4]
   1400302b4:	mov    QWORD PTR [rsp+0x58],rbp
   1400302b9:	cmp    WORD PTR [rbp+0x0],r14w
   1400302be:	jb     0x1400302f8
   1400302c0:	mov    rax,QWORD PTR [rbp+0x0]
   1400302c4:	lea    rcx,[rsp+0x90]
   1400302cc:	mov    QWORD PTR [rcx],rax
   1400302cf:	mov    eax,DWORD PTR [rbp+0x8]
   1400302d2:	lea    rbp,[rsp+0x90]
   1400302da:	mov    DWORD PTR [rcx+0x8],eax
   1400302dd:	mov    rax,QWORD PTR [rsp+0x90]
   1400302e5:	mov    QWORD PTR [rsp+0x58],rbp
   1400302ea:	shr    rax,0x10
   1400302ee:	sub    eax,r11d
   1400302f1:	mov    DWORD PTR [rsp+0x92],eax
   1400302f8:	movzx  ecx,WORD PTR [rbp+0xa]
   1400302fc:	movzx  eax,WORD PTR [rsp+0x7a]
   140030301:	mov    r15d,0x7fff
   140030307:	movzx  edi,cx
   14003030a:	and    cx,r15w
   14003030e:	mov    ebx,r12d
   140030311:	xor    di,ax
   140030314:	and    ax,r15w
   140030318:	mov    DWORD PTR [rsp+0x60],r12d
   14003031d:	and    di,r14w
   140030321:	mov    DWORD PTR [rsp+0x64],r12d
   140030326:	mov    DWORD PTR [rsp+0x68],r12d
   14003032b:	lea    r9d,[rax+rcx*1]
   14003032f:	mov    WORD PTR [rsp+0x32],di
   140030334:	cmp    ax,r15w
   140030338:	jae    0x1400305eb
   14003033e:	cmp    cx,r15w
   140030342:	jae    0x1400305eb
   140030348:	cmp    r9w,si
   14003034c:	ja     0x1400305eb
   140030352:	mov    edi,0x3fbf
   140030357:	cmp    r9w,di
   14003035b:	ja     0x140030367
   14003035d:	mov    DWORD PTR [rsp+0x78],r12d
   140030362:	jmp    0x140030603
   140030367:	cmp    ax,r12w
   14003036b:	jne    0x140030393
   14003036d:	mov    eax,DWORD PTR [rsp+0x78]
   140030371:	add    r9w,r11w
   140030375:	btr    eax,0x1f
   140030379:	cmp    eax,r12d
   14003037c:	jne    0x140030393
   14003037e:	cmp    r8d,r12d
   140030381:	jne    0x140030393
   140030383:	cmp    edx,r12d
   140030386:	jne    0x140030393
   140030388:	mov    WORD PTR [rsp+0x7a],r12w
   14003038e:	jmp    0x140030612
   140030393:	cmp    cx,r12w
   140030397:	jne    0x1400303b5
   140030399:	mov    eax,DWORD PTR [rbp+0x8]
   14003039c:	add    r9w,r11w
   1400303a0:	btr    eax,0x1f
   1400303a4:	cmp    eax,r12d
   1400303a7:	jne    0x1400303b5
   1400303a9:	cmp    DWORD PTR [rbp+0x4],r12d
   1400303ad:	jne    0x1400303b5
   1400303af:	cmp    DWORD PTR [rbp+0x0],r12d
   1400303b3:	je     0x14003035d
   1400303b5:	mov    esi,r12d
   1400303b8:	lea    r8,[rsp+0x64]
   1400303bd:	mov    edi,r13d
   1400303c0:	cmp    edi,r12d
   1400303c3:	lea    eax,[rsi+rsi*1]
   1400303c6:	mov    r14d,edi
   1400303c9:	movsxd rcx,eax
   1400303cc:	jle    0x140030426
   1400303ce:	mov    r15d,esi
   1400303d1:	lea    r13,[rbp+0x8]
   1400303d5:	lea    r12,[rsp+rcx*1+0x70]
   1400303da:	and    r15d,r11d
   1400303dd:	xor    ebp,ebp
   1400303df:	movzx  eax,WORD PTR [r13+0x0]
   1400303e4:	movzx  ecx,WORD PTR [r12]
   1400303e9:	mov    r10d,ebp
   1400303ec:	imul   ecx,eax
   1400303ef:	mov    eax,DWORD PTR [r8-0x4]
   1400303f3:	lea    edx,[rax+rcx*1]
   1400303f6:	cmp    edx,eax
   1400303f8:	jb     0x1400303fe
   1400303fa:	cmp    edx,ecx
   1400303fc:	jae    0x140030401
   1400303fe:	mov    r10d,r11d
   140030401:	mov    DWORD PTR [r8-0x4],edx
   140030405:	cmp    r10d,ebp
   140030408:	je     0x14003040e
   14003040a:	add    WORD PTR [r8],r11w
   14003040e:	sub    r14d,r11d
   140030411:	add    r12,0x2
   140030415:	sub    r13,0x2
   140030419:	cmp    r14d,ebp
   14003041c:	jg     0x1400303df
   14003041e:	mov    rbp,QWORD PTR [rsp+0x58]
   140030423:	xor    r12d,r12d
   140030426:	sub    edi,r11d
   140030429:	add    r8,0x2
   14003042d:	add    esi,r11d
   140030430:	cmp    edi,r12d
   140030433:	jg     0x1400303c0
   140030435:	mov    r10d,DWORD PTR [rsp+0x68]
   14003043a:	mov    r8d,DWORD PTR [rsp+0x60]
   14003043f:	mov    eax,0xc002
   140030444:	add    r9w,ax
   140030448:	mov    r15d,0xffff
   14003044e:	cmp    r9w,r12w
   140030452:	jle    0x140030496
   140030454:	bt     r10d,0x1f
   140030459:	jb     0x140030490
   14003045b:	mov    edi,DWORD PTR [rsp+0x64]
   14003045f:	mov    edx,r8d
   140030462:	add    r10d,r10d
   140030465:	shr    edx,0x1f
   140030468:	add    r8d,r8d
   14003046b:	mov    ecx,edi
   14003046d:	shr    ecx,0x1f
   140030470:	lea    eax,[rdi+rdi*1]
   140030473:	add    r9w,r15w
   140030477:	or     eax,edx
   140030479:	or     r10d,ecx
   14003047c:	cmp    r9w,r12w
   140030480:	mov    DWORD PTR [rsp+0x64],eax
   140030484:	mov    DWORD PTR [rsp+0x68],r10d
   140030489:	mov    DWORD PTR [rsp+0x60],r8d
   14003048e:	jg     0x140030454
   140030490:	cmp    r9w,r12w
   140030494:	jg     0x1400304fc
   140030496:	add    r9w,r15w
   14003049a:	jns    0x1400304fc
   14003049c:	movzx  eax,r9w
   1400304a0:	neg    ax
   1400304a3:	movzx  edx,ax
   1400304a6:	add    r9w,dx
   1400304aa:	test   BYTE PTR [rsp+0x60],r11b
   1400304af:	je     0x1400304b4
   1400304b1:	add    ebx,r11d
   1400304b4:	mov    edi,DWORD PTR [rsp+0x64]
   1400304b8:	mov    eax,r10d
   1400304bb:	shr    r8d,1
   1400304be:	mov    ecx,edi
   1400304c0:	shl    eax,0x1f
   1400304c3:	shr    edi,1
   1400304c5:	shl    ecx,0x1f
   1400304c8:	or     edi,eax
   1400304ca:	shr    r10d,1
   1400304cd:	or     r8d,ecx
   1400304d0:	sub    rdx,r11
   1400304d3:	mov    DWORD PTR [rsp+0x64],edi
   1400304d7:	mov    DWORD PTR [rsp+0x60],r8d
   1400304dc:	jne    0x1400304aa
   1400304de:	mov    DWORD PTR [rsp+0x68],r10d
   1400304e3:	cmp    ebx,r12d
   1400304e6:	je     0x1400304fc
   1400304e8:	movzx  eax,r8w
   1400304ec:	or     ax,r11w
   1400304f0:	mov    WORD PTR [rsp+0x60],ax
   1400304f5:	mov    r8d,DWORD PTR [rsp+0x60]
   1400304fa:	jmp    0x140030501
   1400304fc:	mov    ax,WORD PTR [rsp+0x60]
   140030501:	mov    r14d,0x8000
   140030507:	cmp    ax,r14w
   14003050b:	ja     0x14003051d
   14003050d:	and    r8d,0x1ffff
   140030514:	cmp    r8d,0x18000
   14003051b:	jne    0x140030571
   14003051d:	mov    eax,DWORD PTR [rsp+0x62]
   140030521:	or     ecx,0xffffffff
   140030524:	cmp    eax,ecx
   140030526:	jne    0x14003056a
   140030528:	mov    eax,DWORD PTR [rsp+0x66]
   14003052c:	mov    DWORD PTR [rsp+0x62],r12d
   140030531:	cmp    eax,ecx
   140030533:	jne    0x14003055c
   140030535:	movzx  eax,WORD PTR [rsp+0x6a]
   14003053a:	mov    DWORD PTR [rsp+0x66],r12d
   14003053f:	cmp    ax,r15w
   140030543:	jne    0x140030551
   140030545:	mov    WORD PTR [rsp+0x6a],r14w
   14003054b:	add    r9w,r11w
   14003054f:	jmp    0x140030563
   140030551:	add    ax,r11w
   140030555:	mov    WORD PTR [rsp+0x6a],ax
   14003055a:	jmp    0x140030563
   14003055c:	add    eax,r11d
   14003055f:	mov    DWORD PTR [rsp+0x66],eax
   140030563:	mov    r10d,DWORD PTR [rsp+0x68]
   140030568:	jmp    0x140030571
   14003056a:	add    eax,r11d
   14003056d:	mov    DWORD PTR [rsp+0x62],eax
   140030571:	mov    ebp,0x7fff
   140030576:	mov    r13d,0x5
   14003057c:	mov    esi,0xbffd
   140030581:	mov    edi,0x3fbf
   140030586:	cmp    r9w,bp
   14003058a:	jb     0x1400305ba
   14003058c:	mov    ax,WORD PTR [rsp+0x32]
   140030591:	mov    edx,r12d
   140030594:	mov    r8d,r12d
   140030597:	neg    ax
   14003059a:	mov    DWORD PTR [rsp+0x74],r12d
   14003059f:	mov    DWORD PTR [rsp+0x70],edx
   1400305a3:	sbb    eax,eax
   1400305a5:	and    eax,0x80000000
   1400305aa:	add    eax,0x7fff8000
   1400305af:	mov    DWORD PTR [rsp+0x78],eax
   1400305b3:	mov    r10d,DWORD PTR [rsp+0x40]
   1400305b8:	jmp    0x140030615
   1400305ba:	movzx  eax,WORD PTR [rsp+0x62]
   1400305bf:	mov    DWORD PTR [rsp+0x76],r10d
   1400305c4:	mov    WORD PTR [rsp+0x70],ax
   1400305c9:	mov    eax,DWORD PTR [rsp+0x64]
   1400305cd:	mov    DWORD PTR [rsp+0x72],eax
   1400305d1:	mov    ax,WORD PTR [rsp+0x32]
   1400305d6:	mov    r8d,DWORD PTR [rsp+0x74]
   1400305db:	mov    edx,DWORD PTR [rsp+0x70]
   1400305df:	or     r9w,ax
   1400305e3:	mov    WORD PTR [rsp+0x7a],r9w
   1400305e9:	jmp    0x1400305b3
   1400305eb:	neg    di
   1400305ee:	mov    edi,0x3fbf
   1400305f3:	sbb    eax,eax
   1400305f5:	and    eax,0x80000000
   1400305fa:	add    eax,0x7fff8000
   1400305ff:	mov    DWORD PTR [rsp+0x78],eax
   140030603:	mov    edx,r12d
   140030606:	mov    r8d,r12d
   140030609:	mov    DWORD PTR [rsp+0x74],r12d
   14003060e:	mov    DWORD PTR [rsp+0x70],edx
   140030612:	mov    ebp,r15d
   140030615:	mov    r9,QWORD PTR [rsp+0x38]
   14003061a:	cmp    r10d,r12d
   14003061d:	jne    0x140030289
   140030623:	mov    rbx,QWORD PTR [rsp+0x50]
   140030628:	mov    ecx,DWORD PTR [rsp+0x34]
   14003062c:	jmp    0x140030637
   14003062e:	mov    r8d,DWORD PTR [rsp+0x74]
   140030633:	mov    edx,DWORD PTR [rsp+0x70]
   140030637:	mov    eax,DWORD PTR [rsp+0x78]
   14003063b:	mov    r9d,0x3fff
   140030641:	shr    eax,0x10
   140030644:	cmp    ax,r9w
   140030648:	jb     0x140030944
   14003064e:	add    cx,r11w
   140030652:	mov    r9d,0x8000
   140030658:	mov    r15d,r12d
   14003065b:	mov    DWORD PTR [rsp+0x34],ecx
   14003065f:	movzx  ecx,WORD PTR [rsp+0x8a]
   140030667:	mov    DWORD PTR [rsp+0x60],r12d
   14003066c:	movzx  r14d,cx
   140030670:	and    cx,bp
   140030673:	mov    DWORD PTR [rsp+0x64],r12d
   140030678:	xor    r14w,ax
   14003067c:	and    ax,bp
   14003067f:	mov    DWORD PTR [rsp+0x68],r12d
   140030684:	and    r14w,r9w
   140030688:	lea    r9d,[rax+rcx*1]
   14003068c:	cmp    ax,bp
   14003068f:	jae    0x14003092a
   140030695:	cmp    cx,bp
   140030698:	jae    0x14003092a
   14003069e:	cmp    r9w,si
   1400306a2:	ja     0x14003092a
   1400306a8:	cmp    r9w,di
   1400306ac:	ja     0x1400306b8
   1400306ae:	mov    DWORD PTR [rsp+0x78],r12d
   1400306b3:	jmp    0x14003093e
   1400306b8:	cmp    ax,r12w
   1400306bc:	jne    0x1400306e4
   1400306be:	mov    eax,DWORD PTR [rsp+0x78]
   1400306c2:	add    r9w,r11w
   1400306c6:	btr    eax,0x1f
   1400306ca:	cmp    eax,r12d
   1400306cd:	jne    0x1400306e4
   1400306cf:	cmp    r8d,r12d
   1400306d2:	jne    0x1400306e4
   1400306d4:	cmp    edx,r12d
   1400306d7:	jne    0x1400306e4
   1400306d9:	mov    WORD PTR [rsp+0x7a],r12w
   1400306df:	jmp    0x140030944
   1400306e4:	cmp    cx,r12w
   1400306e8:	jne    0x140030712
   1400306ea:	mov    eax,DWORD PTR [rsp+0x88]
   1400306f1:	add    r9w,r11w
   1400306f5:	btr    eax,0x1f
   1400306f9:	cmp    eax,r12d
   1400306fc:	jne    0x140030712
   1400306fe:	cmp    DWORD PTR [rsp+0x84],r12d
   140030706:	jne    0x140030712
   140030708:	cmp    DWORD PTR [rsp+0x80],r12d
   140030710:	je     0x1400306ae
   140030712:	mov    edi,r12d
   140030715:	lea    rdx,[rsp+0x64]
   14003071a:	lea    eax,[rdi+rdi*1]
   14003071d:	xor    ebx,ebx
   14003071f:	mov    r12d,r13d
   140030722:	cmp    r13d,ebx
   140030725:	movsxd rcx,eax
   140030728:	jle    0x140030780
   14003072a:	mov    r13d,edi
   14003072d:	lea    rsi,[rsp+0x88]
   140030735:	lea    rbp,[rsp+rcx*1+0x70]
   14003073a:	and    r13d,r11d
   14003073d:	movzx  eax,WORD PTR [rbp+0x0]
   140030741:	movzx  ecx,WORD PTR [rsi]
   140030744:	mov    r10d,ebx
   140030747:	imul   ecx,eax
   14003074a:	mov    eax,DWORD PTR [rdx-0x4]
   14003074d:	lea    r8d,[rax+rcx*1]
   140030751:	cmp    r8d,eax
   140030754:	jb     0x14003075b
   140030756:	cmp    r8d,ecx
   140030759:	jae    0x14003075e
   14003075b:	mov    r10d,r11d
   14003075e:	mov    DWORD PTR [rdx-0x4],r8d
   140030762:	cmp    r10d,ebx
   140030765:	je     0x14003076b
   140030767:	add    WORD PTR [rdx],r11w
   14003076b:	sub    r12d,r11d
   14003076e:	add    rbp,0x2
   140030772:	sub    rsi,0x2
   140030776:	cmp    r12d,ebx
   140030779:	jg     0x14003073d
   14003077b:	mov    r13d,DWORD PTR [rsp+0x48]
   140030780:	sub    r13d,r11d
   140030783:	xor    r12d,r12d
   140030786:	add    rdx,0x2
   14003078a:	add    edi,r11d
   14003078d:	cmp    r13d,r12d
   140030790:	mov    DWORD PTR [rsp+0x48],r13d
   140030795:	jg     0x14003071a
   140030797:	mov    r8d,DWORD PTR [rsp+0x68]
   14003079c:	mov    r10d,DWORD PTR [rsp+0x60]
   1400307a1:	mov    eax,0xc002
   1400307a6:	add    r9w,ax
   1400307aa:	mov    esi,0xffff
   1400307af:	cmp    r9w,r12w
   1400307b3:	jle    0x1400307f7
   1400307b5:	bt     r8d,0x1f
   1400307ba:	jb     0x1400307f1
   1400307bc:	mov    edi,DWORD PTR [rsp+0x64]
   1400307c0:	mov    edx,r10d
   1400307c3:	add    r8d,r8d
   1400307c6:	shr    edx,0x1f
   1400307c9:	add    r10d,r10d
   1400307cc:	mov    ecx,edi
   1400307ce:	shr    ecx,0x1f
   1400307d1:	lea    eax,[rdi+rdi*1]
   1400307d4:	add    r9w,si
   1400307d8:	or     eax,edx
   1400307da:	or     r8d,ecx
   1400307dd:	cmp    r9w,r12w
   1400307e1:	mov    DWORD PTR [rsp+0x64],eax
   1400307e5:	mov    DWORD PTR [rsp+0x68],r8d
   1400307ea:	mov    DWORD PTR [rsp+0x60],r10d
   1400307ef:	jg     0x1400307b5
   1400307f1:	cmp    r9w,r12w
   1400307f5:	jg     0x14003085d
   1400307f7:	add    r9w,si
   1400307fb:	jns    0x14003085d
   1400307fd:	movzx  eax,r9w
   140030801:	neg    ax
   140030804:	movzx  edx,ax
   140030807:	add    r9w,dx
   14003080b:	test   BYTE PTR [rsp+0x60],r11b
   140030810:	je     0x140030815
   140030812:	add    r15d,r11d
   140030815:	mov    edi,DWORD PTR [rsp+0x64]
   140030819:	mov    eax,r8d
   14003081c:	shr    r10d,1
   14003081f:	mov    ecx,edi
   140030821:	shl    eax,0x1f
   140030824:	shr    edi,1
   140030826:	shl    ecx,0x1f
   140030829:	or     edi,eax
   14003082b:	shr    r8d,1
   14003082e:	or     r10d,ecx
   140030831:	sub    rdx,r11
   140030834:	mov    DWORD PTR [rsp+0x64],edi
   140030838:	mov    DWORD PTR [rsp+0x60],r10d
   14003083d:	jne    0x14003080b
   14003083f:	mov    DWORD PTR [rsp+0x68],r8d
   140030844:	cmp    r15d,r12d
   140030847:	je     0x14003085d
   140030849:	movzx  eax,r10w
   14003084d:	or     ax,r11w
   140030851:	mov    WORD PTR [rsp+0x60],ax
   140030856:	mov    r10d,DWORD PTR [rsp+0x60]
   14003085b:	jmp    0x140030862
   14003085d:	mov    ax,WORD PTR [rsp+0x60]
   140030862:	mov    rbx,QWORD PTR [rsp+0x50]
   140030867:	mov    r13d,0x8000
   14003086d:	cmp    ax,r13w
   140030871:	ja     0x140030883
   140030873:	and    r10d,0x1ffff
   14003087a:	cmp    r10d,0x18000
   140030881:	jne    0x1400308d6
   140030883:	mov    eax,DWORD PTR [rsp+0x62]
   140030887:	or     ecx,0xffffffff
   14003088a:	cmp    eax,ecx
   14003088c:	jne    0x1400308cf
   14003088e:	mov    eax,DWORD PTR [rsp+0x66]
   140030892:	mov    DWORD PTR [rsp+0x62],r12d
   140030897:	cmp    eax,ecx
   140030899:	jne    0x1400308c1
   14003089b:	movzx  eax,WORD PTR [rsp+0x6a]
   1400308a0:	mov    DWORD PTR [rsp+0x66],r12d
   1400308a5:	cmp    ax,si
   1400308a8:	jne    0x1400308b6
   1400308aa:	mov    WORD PTR [rsp+0x6a],r13w
   1400308b0:	add    r9w,r11w
   1400308b4:	jmp    0x1400308c8
   1400308b6:	add    ax,r11w
   1400308ba:	mov    WORD PTR [rsp+0x6a],ax
   1400308bf:	jmp    0x1400308c8
   1400308c1:	add    eax,r11d
   1400308c4:	mov    DWORD PTR [rsp+0x66],eax
   1400308c8:	mov    r8d,DWORD PTR [rsp+0x68]
   1400308cd:	jmp    0x1400308d6
   1400308cf:	add    eax,r11d
   1400308d2:	mov    DWORD PTR [rsp+0x62],eax
   1400308d6:	mov    r15d,0x7fff
   1400308dc:	cmp    r9w,r15w
   1400308e0:	jb     0x1400308fe
   1400308e2:	neg    r14w
   1400308e6:	mov    r8d,r12d
   1400308e9:	mov    edx,r12d
   1400308ec:	sbb    eax,eax
   1400308ee:	and    eax,0x80000000
   1400308f3:	add    eax,0x7fff8000
   1400308f8:	mov    DWORD PTR [rsp+0x78],eax
   1400308fc:	jmp    0x14003094a
   1400308fe:	movzx  eax,WORD PTR [rsp+0x62]
   140030903:	or     r9w,r14w
   140030907:	mov    DWORD PTR [rsp+0x76],r8d
   14003090c:	mov    WORD PTR [rsp+0x70],ax
   140030911:	mov    eax,DWORD PTR [rsp+0x64]
   140030915:	mov    WORD PTR [rsp+0x7a],r9w
   14003091b:	mov    DWORD PTR [rsp+0x72],eax
   14003091f:	mov    r8d,DWORD PTR [rsp+0x74]
   140030924:	mov    edx,DWORD PTR [rsp+0x70]
   140030928:	jmp    0x14003094a
   14003092a:	neg    r14w
   14003092e:	sbb    eax,eax
   140030930:	and    eax,0x80000000
   140030935:	add    eax,0x7fff8000
   14003093a:	mov    DWORD PTR [rsp+0x78],eax
   14003093e:	mov    edx,r12d
   140030941:	mov    r8d,r12d
   140030944:	mov    r13d,0x8000
   14003094a:	mov    eax,DWORD PTR [rsp+0x34]
   14003094e:	mov    esi,DWORD PTR [rsp+0x44]
   140030952:	mov    WORD PTR [rbx],ax
   140030955:	test   BYTE PTR [rsp+0x4c],r11b
   14003095a:	je     0x14003097a
   14003095c:	cwde   
   14003095d:	add    esi,eax
   14003095f:	cmp    esi,r12d
   140030962:	jg     0x14003097a
   140030964:	cmp    WORD PTR [rsp+0x30],r13w
   14003096a:	mov    eax,0x20
   14003096f:	lea    ecx,[rax+0xd]
   140030972:	cmove  eax,ecx
   140030975:	jmp    0x140030119
   14003097a:	mov    r10d,DWORD PTR [rsp+0x78]
   14003097f:	mov    eax,0x15
   140030984:	mov    WORD PTR [rsp+0x7a],r12w
   14003098a:	mov    r9d,DWORD PTR [rsp+0x78]
   14003098f:	cmp    esi,eax
   140030991:	lea    edi,[rax-0xd]
   140030994:	cmovg  esi,eax
   140030997:	shr    r10d,0x10
   14003099b:	sub    r10d,0x3ffe
   1400309a2:	mov    ecx,r8d
   1400309a5:	mov    eax,edx
   1400309a7:	add    r9d,r9d
   1400309aa:	add    r8d,r8d
   1400309ad:	shr    eax,0x1f
   1400309b0:	shr    ecx,0x1f
   1400309b3:	or     r8d,eax
   1400309b6:	or     r9d,ecx
   1400309b9:	add    edx,edx
   1400309bb:	sub    rdi,r11
   1400309be:	jne    0x1400309a2
   1400309c0:	cmp    r10d,r12d
   1400309c3:	mov    DWORD PTR [rsp+0x74],r8d
   1400309c8:	mov    DWORD PTR [rsp+0x70],edx
   1400309cc:	mov    DWORD PTR [rsp+0x78],r9d
   1400309d1:	jge    0x140030a0e
   1400309d3:	neg    r10d
   1400309d6:	movzx  r10d,r10b
   1400309da:	cmp    r10d,r12d
   1400309dd:	jle    0x140030a0e
   1400309df:	mov    ecx,r8d
   1400309e2:	mov    eax,r9d
   1400309e5:	shr    edx,1
   1400309e7:	shr    r8d,1
   1400309ea:	shl    eax,0x1f
   1400309ed:	shl    ecx,0x1f
   1400309f0:	sub    r10d,r11d
   1400309f3:	shr    r9d,1
   1400309f6:	or     r8d,eax
   1400309f9:	or     edx,ecx
   1400309fb:	cmp    r10d,r12d
   1400309fe:	jg     0x1400309df
   140030a00:	mov    DWORD PTR [rsp+0x74],r8d
   140030a05:	mov    DWORD PTR [rsp+0x70],edx
   140030a09:	mov    DWORD PTR [rsp+0x78],r9d
   140030a0e:	lea    ebp,[rsi+0x1]
   140030a11:	lea    rdi,[rbx+0x4]
   140030a15:	cmp    ebp,r12d
   140030a18:	mov    r10,rdi
   140030a1b:	jle    0x140030b09
   140030a21:	add    r9d,r9d
   140030a24:	lea    rcx,[rsp+0x70]
   140030a29:	lea    rsi,[rsp+0x90]
   140030a31:	mov    rax,QWORD PTR [rcx]
   140030a34:	mov    QWORD PTR [rsi],rax
   140030a37:	mov    eax,DWORD PTR [rcx+0x8]
   140030a3a:	mov    ecx,r8d
   140030a3d:	mov    DWORD PTR [rsi+0x8],eax
   140030a40:	mov    eax,edx
   140030a42:	add    r8d,r8d
   140030a45:	shr    eax,0x1f
   140030a48:	shr    ecx,0x1f
   140030a4b:	add    edx,edx
   140030a4d:	or     r8d,eax
   140030a50:	or     r9d,ecx
   140030a53:	mov    eax,edx
   140030a55:	mov    ecx,r8d
   140030a58:	shr    eax,0x1f
   140030a5b:	add    r8d,r8d
   140030a5e:	or     r8d,eax
   140030a61:	mov    rax,QWORD PTR [rsp+0x90]
   140030a69:	add    edx,edx
   140030a6b:	shr    ecx,0x1f
   140030a6e:	add    r9d,r9d
   140030a71:	lea    r12d,[rax+rdx*1]
   140030a75:	or     r9d,ecx
   140030a78:	cmp    r12d,edx
   140030a7b:	jb     0x140030a82
   140030a7d:	cmp    r12d,eax
   140030a80:	jae    0x140030a9f
   140030a82:	lea    ecx,[r8+0x1]
   140030a86:	xor    edx,edx
   140030a88:	cmp    ecx,r8d
   140030a8b:	jb     0x140030a92
   140030a8d:	cmp    ecx,r11d
   140030a90:	jae    0x140030a95
   140030a92:	mov    edx,r11d
   140030a95:	mov    r8d,ecx
   140030a98:	test   edx,edx
   140030a9a:	je     0x140030a9f
   140030a9c:	add    r9d,r11d
   140030a9f:	shr    rax,0x20
   140030aa3:	lea    esi,[r8+rax*1]
   140030aa7:	cmp    esi,r8d
   140030aaa:	jb     0x140030ab0
   140030aac:	cmp    esi,eax
   140030aae:	jae    0x140030ab3
   140030ab0:	add    r9d,r11d
   140030ab3:	add    r9d,DWORD PTR [rsp+0x98]
   140030abb:	mov    eax,r12d
   140030abe:	lea    edx,[r12+r12*1]
   140030ac2:	shr    eax,0x1f
   140030ac5:	xor    r12d,r12d
   140030ac8:	lea    r8d,[rsi+rsi*1]
   140030acc:	or     r8d,eax
   140030acf:	mov    ecx,esi
   140030ad1:	lea    eax,[r9+r9*1]
   140030ad5:	shr    ecx,0x1f
   140030ad8:	sub    ebp,r11d
   140030adb:	mov    DWORD PTR [rsp+0x70],edx
   140030adf:	or     eax,ecx
   140030ae1:	mov    DWORD PTR [rsp+0x74],r8d
   140030ae6:	mov    DWORD PTR [rsp+0x78],eax
   140030aea:	shr    eax,0x18
   140030aed:	mov    BYTE PTR [rsp+0x7b],r12b
   140030af2:	add    al,0x30
   140030af4:	mov    BYTE PTR [r10],al
   140030af7:	add    r10,r11
   140030afa:	cmp    ebp,r12d
   140030afd:	jle    0x140030b09
   140030aff:	mov    r9d,DWORD PTR [rsp+0x78]
   140030b04:	jmp    0x140030a21
   140030b09:	sub    r10,r11
   140030b0c:	mov    al,BYTE PTR [r10]
   140030b0f:	sub    r10,r11
   140030b12:	cmp    al,0x35
   140030b14:	jl     0x140030b84
   140030b16:	jmp    0x140030b25
   140030b18:	cmp    BYTE PTR [r10],0x39
   140030b1c:	jne    0x140030b2a
   140030b1e:	mov    BYTE PTR [r10],0x30
   140030b22:	sub    r10,r11
   140030b25:	cmp    r10,rdi
   140030b28:	jae    0x140030b18
   140030b2a:	cmp    r10,rdi
   140030b2d:	jae    0x140030b36
   140030b2f:	add    r10,r11
   140030b32:	add    WORD PTR [rbx],r11w
   140030b36:	add    BYTE PTR [r10],r11b
   140030b39:	sub    r10b,bl
   140030b3c:	sub    r10b,0x3
   140030b40:	movsx  rax,r10b
   140030b44:	mov    BYTE PTR [rbx+0x3],r10b
   140030b48:	mov    BYTE PTR [rax+rbx*1+0x4],r12b
   140030b4d:	mov    eax,r11d
   140030b50:	mov    rcx,QWORD PTR [rsp+0xa0]
   140030b58:	xor    rcx,rsp
   140030b5b:	call   0x14001c500
   140030b60:	mov    rbx,QWORD PTR [rsp+0xf8]
   140030b68:	add    rsp,0xb0
   140030b6f:	pop    r15
   140030b71:	pop    r14
   140030b73:	pop    r13
   140030b75:	pop    r12
   140030b77:	pop    rdi
   140030b78:	pop    rsi
   140030b79:	pop    rbp
   140030b7a:	ret    
   140030b7b:	cmp    BYTE PTR [r10],0x30
   140030b7f:	jne    0x140030b89
   140030b81:	sub    r10,r11
   140030b84:	cmp    r10,rdi
   140030b87:	jae    0x140030b7b
   140030b89:	cmp    r10,rdi
   140030b8c:	jae    0x140030b39
   140030b8e:	cmp    WORD PTR [rsp+0x30],r13w
   140030b94:	mov    eax,0x20
   140030b99:	mov    BYTE PTR [rdi],0x30
   140030b9c:	lea    ecx,[rax+0xd]
   140030b9f:	cmove  eax,ecx
   140030ba2:	jmp    0x14003011d
   140030ba7:	int3   
   140030ba8:	mov    QWORD PTR [rsp+0x8],rbx
   140030bad:	mov    QWORD PTR [rsp+0x10],rbp
   140030bb2:	push   rsi
   140030bb3:	push   rdi
   140030bb4:	push   r13
   140030bb6:	sub    rsp,0x20
   140030bba:	mov    rax,QWORD PTR [rip+0x1889f]        # 0x140049460
   140030bc1:	xor    rax,rsp
   140030bc4:	mov    QWORD PTR [rsp+0x10],rax
   140030bc9:	and    DWORD PTR [r8],0x0
   140030bcd:	and    DWORD PTR [r8+0x4],0x0
   140030bd2:	and    DWORD PTR [r8+0x8],0x0
   140030bd7:	mov    rbx,r8
   140030bda:	mov    esi,edx
   140030bdc:	mov    rbp,rcx
   140030bdf:	mov    edi,0x404e
   140030be4:	test   edx,edx
   140030be6:	je     0x140030d30
   140030bec:	mov    r13d,0x1
   140030bf2:	mov    rax,QWORD PTR [rbx]
   140030bf5:	mov    r11d,DWORD PTR [rbx+0x8]
   140030bf9:	lea    rcx,[rsp]
   140030bfd:	mov    QWORD PTR [rcx],rax
   140030c00:	mov    eax,DWORD PTR [rbx+0x8]
   140030c03:	add    r11d,r11d
   140030c06:	mov    DWORD PTR [rcx+0x8],eax
   140030c09:	mov    ecx,DWORD PTR [rbx]
   140030c0b:	mov    eax,DWORD PTR [rbx+0x4]
   140030c0e:	lea    r9d,[rcx+rcx*1]
   140030c12:	mov    edx,ecx
   140030c14:	lea    r10d,[rax+rax*1]
   140030c18:	mov    r8d,eax
   140030c1b:	shr    edx,0x1f
   140030c1e:	mov    eax,r9d
   140030c21:	or     r10d,edx
   140030c24:	shr    r8d,0x1f
   140030c28:	lea    edx,[r9+r9*1]
   140030c2c:	or     r11d,r8d
   140030c2f:	mov    ecx,r10d
   140030c32:	shr    eax,0x1f
   140030c35:	shr    ecx,0x1f
   140030c38:	add    r11d,r11d
   140030c3b:	add    r10d,r10d
   140030c3e:	or     r11d,ecx
   140030c41:	mov    ecx,DWORD PTR [rsp]
   140030c44:	or     r10d,eax
   140030c47:	lea    r8d,[rdx+rcx*1]
   140030c4b:	xor    eax,eax
   140030c4d:	mov    DWORD PTR [rbx],edx
   140030c4f:	mov    DWORD PTR [rbx+0x4],r10d
   140030c53:	mov    DWORD PTR [rbx+0x8],r11d
   140030c57:	cmp    r8d,edx
   140030c5a:	jb     0x140030c61
   140030c5c:	cmp    r8d,ecx
   140030c5f:	jae    0x140030c64
   140030c61:	mov    eax,r13d
   140030c64:	mov    DWORD PTR [rbx],r8d
   140030c67:	test   eax,eax
   140030c69:	je     0x140030c8c
   140030c6b:	lea    eax,[r10+0x1]
   140030c6f:	xor    ecx,ecx
   140030c71:	cmp    eax,r10d
   140030c74:	jb     0x140030c7b
   140030c76:	cmp    eax,r13d
   140030c79:	jae    0x140030c7e
   140030c7b:	mov    ecx,r13d
   140030c7e:	mov    DWORD PTR [rbx+0x4],eax
   140030c81:	test   ecx,ecx
   140030c83:	je     0x140030c8c
   140030c85:	lea    eax,[r11+0x1]
   140030c89:	mov    DWORD PTR [rbx+0x8],eax
   140030c8c:	mov    eax,DWORD PTR [rbx+0x4]
   140030c8f:	mov    rcx,QWORD PTR [rsp]
   140030c93:	xor    edx,edx
   140030c95:	shr    rcx,0x20
   140030c99:	lea    r9d,[rax+rcx*1]
   140030c9d:	cmp    r9d,eax
   140030ca0:	jb     0x140030ca7
   140030ca2:	cmp    r9d,ecx
   140030ca5:	jae    0x140030caa
   140030ca7:	mov    edx,r13d
   140030caa:	mov    DWORD PTR [rbx+0x4],r9d
   140030cae:	test   edx,edx
   140030cb0:	je     0x140030cb6
   140030cb2:	add    DWORD PTR [rbx+0x8],r13d
   140030cb6:	mov    eax,DWORD PTR [rsp+0x8]
   140030cba:	mov    ecx,r9d
   140030cbd:	add    r9d,r9d
   140030cc0:	add    DWORD PTR [rbx+0x8],eax
   140030cc3:	mov    edx,DWORD PTR [rbx+0x8]
   140030cc6:	shr    ecx,0x1f
   140030cc9:	mov    eax,r8d
   140030ccc:	add    r8d,r8d
   140030ccf:	add    edx,edx
   140030cd1:	shr    eax,0x1f
   140030cd4:	or     edx,ecx
   140030cd6:	mov    DWORD PTR [rbx],r8d
   140030cd9:	or     r9d,eax
   140030cdc:	mov    DWORD PTR [rbx+0x8],edx
   140030cdf:	xor    r10d,r10d
   140030ce2:	mov    DWORD PTR [rbx+0x4],r9d
   140030ce6:	movsx  ecx,BYTE PTR [rbp+0x0]
   140030cea:	lea    eax,[r8+rcx*1]
   140030cee:	mov    DWORD PTR [rsp],ecx
   140030cf1:	cmp    eax,r8d
   140030cf4:	jb     0x140030cfa
   140030cf6:	cmp    eax,ecx
   140030cf8:	jae    0x140030cfd
   140030cfa:	mov    r10d,r13d
   140030cfd:	mov    DWORD PTR [rbx],eax
   140030cff:	test   r10d,r10d
   140030d02:	je     0x140030d24
   140030d04:	lea    eax,[r9+0x1]
   140030d08:	xor    ecx,ecx
   140030d0a:	cmp    eax,r9d
   140030d0d:	jb     0x140030d14
   140030d0f:	cmp    eax,r13d
   140030d12:	jae    0x140030d17
   140030d14:	mov    ecx,r13d
   140030d17:	mov    DWORD PTR [rbx+0x4],eax
   140030d1a:	test   ecx,ecx
   140030d1c:	je     0x140030d24
   140030d1e:	lea    eax,[rdx+0x1]
   140030d21:	mov    DWORD PTR [rbx+0x8],eax
   140030d24:	add    rbp,r13
   140030d27:	add    esi,0xffffffff
   140030d2a:	jne    0x140030bf2
   140030d30:	cmp    DWORD PTR [rbx+0x8],0x0
   140030d34:	jne    0x140030d65
   140030d36:	mov    ecx,DWORD PTR [rbx]
   140030d38:	mov    edx,DWORD PTR [rbx+0x4]
   140030d3b:	mov    r8d,edx
   140030d3e:	mov    eax,ecx
   140030d40:	shl    edx,0x10
   140030d43:	shr    eax,0x10
   140030d46:	shr    r8d,0x10
   140030d4a:	shl    ecx,0x10
   140030d4d:	or     edx,eax
   140030d4f:	mov    eax,0xfff0
   140030d54:	mov    DWORD PTR [rbx+0x8],r8d
   140030d58:	add    di,ax
   140030d5b:	mov    DWORD PTR [rbx+0x4],edx
   140030d5e:	mov    DWORD PTR [rbx],ecx
   140030d60:	test   r8d,r8d
   140030d63:	je     0x140030d36
   140030d65:	bt     DWORD PTR [rbx+0x8],0xf
   140030d6a:	jb     0x140030da2
   140030d6c:	mov    ecx,DWORD PTR [rbx+0x4]
   140030d6f:	mov    eax,DWORD PTR [rbx]
   140030d71:	mov    edx,eax
   140030d73:	add    eax,eax
   140030d75:	mov    r8d,ecx
   140030d78:	mov    DWORD PTR [rbx],eax
   140030d7a:	lea    eax,[rcx+rcx*1]
   140030d7d:	shr    edx,0x1f
   140030d80:	or     eax,edx
   140030d82:	shr    r8d,0x1f
   140030d86:	mov    ecx,0xffff
   140030d8b:	mov    DWORD PTR [rbx+0x4],eax
   140030d8e:	mov    eax,DWORD PTR [rbx+0x8]
   140030d91:	add    di,cx
   140030d94:	add    eax,eax
   140030d96:	or     eax,r8d
   140030d99:	bt     eax,0xf
   140030d9d:	mov    DWORD PTR [rbx+0x8],eax
   140030da0:	jae    0x140030d6c
   140030da2:	mov    WORD PTR [rbx+0xa],di
   140030da6:	mov    rcx,QWORD PTR [rsp+0x10]
   140030dab:	xor    rcx,rsp
   140030dae:	call   0x14001c500
   140030db3:	mov    rbx,QWORD PTR [rsp+0x40]
   140030db8:	mov    rbp,QWORD PTR [rsp+0x48]
   140030dbd:	add    rsp,0x20
   140030dc1:	pop    r13
   140030dc3:	pop    rdi
   140030dc4:	pop    rsi
   140030dc5:	ret    
   140030dc6:	int3   
   140030dc7:	int3   
   140030dc8:	sub    rsp,0x48
   140030dcc:	and    QWORD PTR [rsp+0x30],0x0
   140030dd2:	and    DWORD PTR [rsp+0x28],0x0
   140030dd7:	mov    r8d,0x3
   140030ddd:	lea    rcx,[rip+0xc7dc]        # 0x14003d5c0
   140030de4:	xor    r9d,r9d
   140030de7:	mov    edx,0x40000000
   140030dec:	mov    DWORD PTR [rsp+0x20],r8d
   140030df1:	call   QWORD PTR [rip+0x9349]        # 0x14003a140
   140030df7:	mov    QWORD PTR [rip+0x19caa],rax        # 0x14004aaa8
   140030dfe:	add    rsp,0x48
   140030e02:	ret    
   140030e03:	int3   
   140030e04:	sub    rsp,0x28
   140030e08:	mov    rcx,QWORD PTR [rip+0x19c99]        # 0x14004aaa8
   140030e0f:	cmp    rcx,0xffffffffffffffff
   140030e13:	je     0x140030e21
   140030e15:	cmp    rcx,0xfffffffffffffffe
   140030e19:	je     0x140030e21
   140030e1b:	call   QWORD PTR [rip+0x924f]        # 0x14003a070
   140030e21:	mov    rcx,QWORD PTR [rip+0x19c78]        # 0x14004aaa0
   140030e28:	cmp    rcx,0xffffffffffffffff
   140030e2c:	je     0x140030e3a
   140030e2e:	cmp    rcx,0xfffffffffffffffe
   140030e32:	je     0x140030e3a
   140030e34:	call   QWORD PTR [rip+0x9236]        # 0x14003a070
   140030e3a:	add    rsp,0x28
   140030e3e:	ret    
   140030e3f:	int3   
   140030e40:	jmp    QWORD PTR [rip+0x941a]        # 0x14003a260
   140030e46:	jmp    QWORD PTR [rip+0x941c]        # 0x14003a268
   140030e4c:	jmp    QWORD PTR [rip+0x9436]        # 0x14003a288
   140030e52:	jmp    QWORD PTR [rip+0x9438]        # 0x14003a290
   140030e58:	int3   
   140030e59:	int3   
   140030e5a:	int3   
   140030e5b:	int3   
   140030e5c:	int3   
   140030e5d:	int3   
   140030e5e:	int3   
   140030e5f:	int3   
   140030e60:	mov    QWORD PTR [rsp+0x10],rdx
   140030e65:	mov    QWORD PTR [rsp+0x8],rcx
   140030e6a:	sub    rsp,0x158
   140030e71:	mov    rax,QWORD PTR [rip+0x185e8]        # 0x140049460
   140030e78:	xor    rax,rsp
   140030e7b:	mov    QWORD PTR [rsp+0x140],rax
   140030e83:	mov    QWORD PTR [rsp+0x130],0x0
   140030e8f:	mov    DWORD PTR [rsp+0x138],0x0
   140030e9a:	mov    r9,QWORD PTR [rsp+0x168]
   140030ea2:	mov    r8,QWORD PTR [rsp+0x160]
   140030eaa:	lea    rdx,[rip+0xc71f]        # 0x14003d5d0
   140030eb1:	lea    rcx,[rsp+0x30]
   140030eb6:	call   QWORD PTR [rip+0x952c]        # 0x14003a3e8
   140030ebc:	lea    r9,[rsp+0x138]
   140030ec4:	lea    r8,[rsp+0x130]
   140030ecc:	lea    rdx,[rsp+0x30]
   140030ed1:	mov    rcx,QWORD PTR [rsp+0x160]
   140030ed9:	mov    rcx,QWORD PTR [rcx+0x20]
   140030edd:	call   0x14001c4d6
   140030ee2:	test   eax,eax
   140030ee4:	je     0x140030ef0
   140030ee6:	mov    rax,QWORD PTR [rsp+0x130]
   140030eee:	jmp    0x140030ef2
   140030ef0:	xor    eax,eax
   140030ef2:	mov    rcx,QWORD PTR [rsp+0x140]
   140030efa:	xor    rcx,rsp
   140030efd:	call   0x14001c500
   140030f02:	add    rsp,0x158
   140030f09:	ret    
   140030f0a:	int3   
   140030f0b:	int3   
   140030f0c:	int3   
   140030f0d:	int3   
   140030f0e:	int3   
   140030f0f:	int3   
   140030f10:	mov    QWORD PTR [rsp+0x8],rcx
   140030f15:	sub    rsp,0x38
   140030f19:	mov    rax,QWORD PTR [rsp+0x40]
   140030f1e:	mov    rax,QWORD PTR [rax+0x20]
   140030f22:	mov    QWORD PTR [rsp+0x20],rax
   140030f27:	mov    rcx,QWORD PTR [rsp+0x20]
   140030f2c:	call   0x14001cbb8
   140030f31:	mov    rax,QWORD PTR [rsp+0x40]
   140030f36:	mov    QWORD PTR [rax+0x20],0x0
   140030f3e:	add    rsp,0x38
   140030f42:	ret    
   140030f43:	int3   
   140030f44:	int3   
   140030f45:	int3   
   140030f46:	int3   
   140030f47:	int3   
   140030f48:	int3   
   140030f49:	int3   
   140030f4a:	int3   
   140030f4b:	int3   
   140030f4c:	int3   
   140030f4d:	int3   
   140030f4e:	int3   
   140030f4f:	int3   
   140030f50:	mov    QWORD PTR [rsp+0x10],rdx
   140030f55:	mov    QWORD PTR [rsp+0x8],rcx
   140030f5a:	sub    rsp,0x28
   140030f5e:	mov    rax,QWORD PTR [rsp+0x30]
   140030f63:	mov    QWORD PTR [rax+0x20],0x0
   140030f6b:	mov    rdx,QWORD PTR [rsp+0x38]
   140030f70:	mov    rcx,QWORD PTR [rsp+0x30]
   140030f75:	call   0x14001daf0
   140030f7a:	mov    rax,QWORD PTR [rsp+0x30]
   140030f7f:	add    rsp,0x28
   140030f83:	ret    
   140030f84:	int3   
   140030f85:	int3   
   140030f86:	int3   
   140030f87:	int3   
   140030f88:	int3   
   140030f89:	int3   
   140030f8a:	int3   
   140030f8b:	int3   
   140030f8c:	int3   
   140030f8d:	int3   
   140030f8e:	int3   
   140030f8f:	int3   
   140030f90:	mov    QWORD PTR [rsp+0x8],rcx
   140030f95:	sub    rsp,0x28
   140030f99:	mov    rcx,QWORD PTR [rsp+0x30]
   140030f9e:	call   0x140030f10
   140030fa3:	add    rsp,0x28
   140030fa7:	ret    
   140030fa8:	int3   
   140030fa9:	int3   
   140030faa:	int3   
   140030fab:	int3   
   140030fac:	int3   
   140030fad:	int3   
   140030fae:	int3   
   140030faf:	int3   
   140030fb0:	mov    QWORD PTR [rsp+0x10],rdx
   140030fb5:	mov    QWORD PTR [rsp+0x8],rcx
   140030fba:	sub    rsp,0x38
   140030fbe:	mov    rcx,QWORD PTR [rsp+0x40]
   140030fc3:	call   0x140030f10
   140030fc8:	mov    DWORD PTR [rsp+0x20],0x0
   140030fd0:	lea    rdx,[rsp+0x20]
   140030fd5:	mov    rcx,QWORD PTR [rsp+0x48]
   140030fda:	call   0x14001c4ca
   140030fdf:	mov    DWORD PTR [rsp+0x24],eax
   140030fe3:	cmp    DWORD PTR [rsp+0x24],0x0
   140030fe8:	jne    0x140030ff1
   140030fea:	mov    eax,0x80004005
   140030fef:	jmp    0x140031051
   140030ff1:	mov    ecx,DWORD PTR [rsp+0x24]
   140030ff5:	call   0x140019f20
   140030ffa:	mov    QWORD PTR [rsp+0x28],rax
   140030fff:	mov    rcx,QWORD PTR [rsp+0x40]
   140031004:	mov    rax,QWORD PTR [rsp+0x28]
   140031009:	mov    QWORD PTR [rcx+0x20],rax
   14003100d:	mov    rax,QWORD PTR [rsp+0x40]
   140031012:	cmp    QWORD PTR [rax+0x20],0x0
   140031017:	jne    0x140031020
   140031019:	mov    eax,0x8007000e
   14003101e:	jmp    0x140031051
   140031020:	mov    r9,QWORD PTR [rsp+0x40]
   140031025:	mov    r9,QWORD PTR [r9+0x20]
   140031029:	mov    r8d,DWORD PTR [rsp+0x24]
   14003102e:	mov    edx,DWORD PTR [rsp+0x20]
   140031032:	mov    rcx,QWORD PTR [rsp+0x48]
   140031037:	call   0x14001c4d0
   14003103c:	test   eax,eax
   14003103e:	jne    0x14003104f
   140031040:	call   QWORD PTR [rip+0x9082]        # 0x14003a0c8
   140031046:	mov    ecx,eax
   140031048:	call   0x140017980
   14003104d:	jmp    0x140031051
   14003104f:	xor    eax,eax
   140031051:	add    rsp,0x38
   140031055:	ret    
   140031056:	int3   
   140031057:	int3   
   140031058:	int3   
   140031059:	int3   
   14003105a:	int3   
   14003105b:	int3   
   14003105c:	int3   
   14003105d:	int3   
   14003105e:	int3   
   14003105f:	int3   
   140031060:	mov    QWORD PTR [rsp+0x10],rdx
   140031065:	mov    QWORD PTR [rsp+0x8],rcx
   14003106a:	sub    rsp,0x258
   140031071:	mov    rax,QWORD PTR [rip+0x183e8]        # 0x140049460
   140031078:	xor    rax,rsp
   14003107b:	mov    QWORD PTR [rsp+0x240],rax
   140031083:	mov    r8d,0x104
   140031089:	lea    rdx,[rsp+0x30]
   14003108e:	mov    rcx,QWORD PTR [rsp+0x268]
   140031096:	call   QWORD PTR [rip+0x90d4]        # 0x14003a170
   14003109c:	test   eax,eax
   14003109e:	jne    0x1400310af
   1400310a0:	call   QWORD PTR [rip+0x9022]        # 0x14003a0c8
   1400310a6:	mov    ecx,eax
   1400310a8:	call   0x140017980
   1400310ad:	jmp    0x1400310c1
   1400310af:	lea    rdx,[rsp+0x30]
   1400310b4:	mov    rcx,QWORD PTR [rsp+0x260]
   1400310bc:	call   0x140030fb0
   1400310c1:	mov    rcx,QWORD PTR [rsp+0x240]
   1400310c9:	xor    rcx,rsp
   1400310cc:	call   0x14001c500
   1400310d1:	add    rsp,0x258
   1400310d8:	ret    
   1400310d9:	int3   
   1400310da:	int3   
   1400310db:	int3   
   1400310dc:	int3   
   1400310dd:	int3   
   1400310de:	int3   
   1400310df:	int3   
   1400310e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400310e5:	mov    rax,QWORD PTR [rsp+0x8]
   1400310ea:	mov    eax,DWORD PTR [rax+0x8]
   1400310ed:	ret    
   1400310ee:	int3   
   1400310ef:	int3   
   1400310f0:	int3   
   1400310f1:	int3   
   1400310f2:	int3   
   1400310f3:	int3   
   1400310f4:	int3   
   1400310f5:	int3   
   1400310f6:	int3   
   1400310f7:	int3   
   1400310f8:	int3   
   1400310f9:	int3   
   1400310fa:	int3   
   1400310fb:	int3   
   1400310fc:	int3   
   1400310fd:	int3   
   1400310fe:	int3   
   1400310ff:	int3   
   140031100:	mov    QWORD PTR [rsp+0x8],rcx
   140031105:	xor    eax,eax
   140031107:	ret    
   140031108:	int3   
   140031109:	int3   
   14003110a:	int3   
   14003110b:	int3   
   14003110c:	int3   
   14003110d:	int3   
   14003110e:	int3   
   14003110f:	int3   
   140031110:	mov    QWORD PTR [rsp+0x8],rcx
   140031115:	mov    eax,0x1
   14003111a:	ret    
   14003111b:	int3   
   14003111c:	int3   
   14003111d:	int3   
   14003111e:	int3   
   14003111f:	int3   
   140031120:	int3   
   140031121:	int3   
   140031122:	int3   
   140031123:	int3   
   140031124:	int3   
   140031125:	int3   
   140031126:	int3   
   140031127:	int3   
   140031128:	int3   
   140031129:	int3   
   14003112a:	int3   
   14003112b:	int3   
   14003112c:	int3   
   14003112d:	int3   
   14003112e:	int3   
   14003112f:	int3   
   140031130:	mov    QWORD PTR [rsp+0x18],r8
   140031135:	mov    QWORD PTR [rsp+0x10],rdx
   14003113a:	mov    QWORD PTR [rsp+0x8],rcx
   14003113f:	sub    rsp,0x28
   140031143:	lea    rdx,[rip+0x94c6]        # 0x14003a610
   14003114a:	mov    rcx,QWORD PTR [rsp+0x38]
   14003114f:	call   0x140019300
   140031154:	test   eax,eax
   140031156:	jne    0x14003116d
   140031158:	lea    rdx,[rip+0x9481]        # 0x14003a5e0
   14003115f:	mov    rcx,QWORD PTR [rsp+0x38]
   140031164:	call   0x140019300
   140031169:	test   eax,eax
   14003116b:	je     0x14003118e
   14003116d:	mov    rcx,QWORD PTR [rsp+0x40]
   140031172:	mov    rax,QWORD PTR [rsp+0x30]
   140031177:	mov    QWORD PTR [rcx],rax
   14003117a:	mov    rax,QWORD PTR [rsp+0x30]
   14003117f:	mov    rax,QWORD PTR [rax]
   140031182:	mov    rcx,QWORD PTR [rsp+0x30]
   140031187:	call   QWORD PTR [rax+0x8]
   14003118a:	xor    eax,eax
   14003118c:	jmp    0x140031193
   14003118e:	mov    eax,0x80004002
   140031193:	add    rsp,0x28
   140031197:	ret    
   140031198:	int3   
   140031199:	int3   
   14003119a:	int3   
   14003119b:	int3   
   14003119c:	int3   
   14003119d:	int3   
   14003119e:	int3   
   14003119f:	int3   
   1400311a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400311a5:	sub    rsp,0x28
   1400311a9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400311ae:	call   0x1400192e0
   1400311b3:	mov    r11,QWORD PTR [rsp+0x30]
   1400311b8:	lea    rax,[rip+0xe9d9]        # 0x14003fb98
   1400311bf:	mov    QWORD PTR [r11],rax
   1400311c2:	mov    rax,QWORD PTR [rsp+0x30]
   1400311c7:	mov    DWORD PTR [rax+0x8],0xff
   1400311ce:	mov    rax,QWORD PTR [rsp+0x30]
   1400311d3:	add    rsp,0x28
   1400311d7:	ret    
   1400311d8:	int3   
   1400311d9:	int3   
   1400311da:	int3   
   1400311db:	int3   
   1400311dc:	int3   
   1400311dd:	int3   
   1400311de:	int3   
   1400311df:	int3   
   1400311e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400311e5:	mov    QWORD PTR [rsp+0x8],rcx
   1400311ea:	sub    rsp,0x28
   1400311ee:	lea    r9,[rip+0xc53b]        # 0x14003d730
   1400311f5:	mov    r8d,0x2f
   1400311fb:	lea    rdx,[rip+0xc59e]        # 0x14003d7a0
   140031202:	mov    ecx,0x2
   140031207:	call   0x140031440
   14003120c:	mov    r11,QWORD PTR [rsp+0x30]
   140031211:	mov    DWORD PTR [r11+0x8],0x7
   140031219:	mov    eax,0x1
   14003121e:	add    rsp,0x28
   140031222:	ret    
   140031223:	int3   
   140031224:	int3   
   140031225:	int3   
   140031226:	int3   
   140031227:	int3   
   140031228:	int3   
   140031229:	int3   
   14003122a:	int3   
   14003122b:	int3   
   14003122c:	int3   
   14003122d:	int3   
   14003122e:	int3   
   14003122f:	int3   
   140031230:	mov    QWORD PTR [rsp+0x10],rdx
   140031235:	mov    QWORD PTR [rsp+0x8],rcx
   14003123a:	sub    rsp,0x28
   14003123e:	lea    r9,[rip+0xc44b]        # 0x14003d690
   140031245:	mov    r8d,0x28
   14003124b:	lea    rdx,[rip+0xc49e]        # 0x14003d6f0
   140031252:	mov    ecx,0x2
   140031257:	call   0x140031440
   14003125c:	mov    r11,QWORD PTR [rsp+0x30]
   140031261:	mov    DWORD PTR [r11+0x8],0x6
   140031269:	mov    eax,0x1
   14003126e:	add    rsp,0x28
   140031272:	ret    
   140031273:	int3   
   140031274:	int3   
   140031275:	int3   
   140031276:	int3   
   140031277:	int3   
   140031278:	int3   
   140031279:	int3   
   14003127a:	int3   
   14003127b:	int3   
   14003127c:	int3   
   14003127d:	int3   
   14003127e:	int3   
   14003127f:	int3   
   140031280:	mov    QWORD PTR [rsp+0x10],rdx
   140031285:	mov    QWORD PTR [rsp+0x8],rcx
   14003128a:	sub    rsp,0x28
   14003128e:	lea    r9,[rip+0xc36b]        # 0x14003d600
   140031295:	mov    r8d,0x21
   14003129b:	lea    rdx,[rip+0xc3ae]        # 0x14003d650
   1400312a2:	mov    ecx,0x2
   1400312a7:	call   0x140031440
   1400312ac:	mov    r11,QWORD PTR [rsp+0x30]
   1400312b1:	mov    DWORD PTR [r11+0x8],0x3
   1400312b9:	mov    eax,0x1
   1400312be:	add    rsp,0x28
   1400312c2:	ret    
   1400312c3:	int3   
   1400312c4:	int3   
   1400312c5:	int3   
   1400312c6:	int3   
   1400312c7:	int3   
   1400312c8:	int3   
   1400312c9:	int3   
   1400312ca:	int3   
   1400312cb:	int3   
   1400312cc:	int3   
   1400312cd:	int3   
   1400312ce:	int3   
   1400312cf:	int3   
   1400312d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400312d5:	sub    rsp,0x28
   1400312d9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400312de:	call   QWORD PTR [rip+0x8e54]        # 0x14003a138
   1400312e4:	mov    eax,0x1
   1400312e9:	add    rsp,0x28
   1400312ed:	ret    
   1400312ee:	int3   
   1400312ef:	int3   
   1400312f0:	int3   
   1400312f1:	int3   
   1400312f2:	int3   
   1400312f3:	int3   
   1400312f4:	int3   
   1400312f5:	int3   
   1400312f6:	int3   
   1400312f7:	int3   
   1400312f8:	int3   
   1400312f9:	int3   
   1400312fa:	int3   
   1400312fb:	int3   
   1400312fc:	int3   
   1400312fd:	int3   
   1400312fe:	int3   
   1400312ff:	int3   
   140031300:	mov    DWORD PTR [rsp+0x8],ecx
   140031304:	sub    rsp,0x458
   14003130b:	mov    rax,QWORD PTR [rip+0x1814e]        # 0x140049460
   140031312:	xor    rax,rsp
   140031315:	mov    QWORD PTR [rsp+0x440],rax
   14003131d:	mov    QWORD PTR [rsp+0x28],0x0
   140031326:	mov    DWORD PTR [rsp+0x20],0x3
   14003132e:	mov    r8d,0x200
   140031334:	lea    rdx,[rsp+0x40]
   140031339:	lea    rcx,[rip+0x19da0]        # 0x14004b0e0
   140031340:	call   0x140031600
   140031345:	test   eax,eax
   140031347:	jne    0x1400313dc
   14003134d:	lea    rdx,[rsp+0x40]
   140031352:	lea    rcx,[rip+0x19d97]        # 0x14004b0f0
   140031359:	call   0x14001d0f0
   14003135e:	test   eax,eax
   140031360:	jne    0x14003136c
   140031362:	mov    DWORD PTR [rsp+0x20],0x0
   14003136a:	jmp    0x1400313dc
   14003136c:	lea    rdx,[rsp+0x40]
   140031371:	lea    rcx,[rip+0x19d88]        # 0x14004b100
   140031378:	call   0x14001d0f0
   14003137d:	test   eax,eax
   14003137f:	jne    0x14003138b
   140031381:	mov    DWORD PTR [rsp+0x20],0x4
   140031389:	jmp    0x1400313dc
   14003138b:	lea    rdx,[rsp+0x40]
   140031390:	lea    rcx,[rip+0x19d79]        # 0x14004b110
   140031397:	call   0x14001d0f0
   14003139c:	test   eax,eax
   14003139e:	jne    0x1400313aa
   1400313a0:	mov    DWORD PTR [rsp+0x20],0x3
   1400313a8:	jmp    0x1400313dc
   1400313aa:	lea    rdx,[rsp+0x40]
   1400313af:	lea    rcx,[rip+0x19d6a]        # 0x14004b120
   1400313b6:	call   0x14001d0f0
   1400313bb:	test   eax,eax
   1400313bd:	je     0x1400313d4
   1400313bf:	lea    rdx,[rsp+0x40]
   1400313c4:	lea    rcx,[rip+0x19d65]        # 0x14004b130
   1400313cb:	call   0x14001d0f0
   1400313d0:	test   eax,eax
   1400313d2:	jne    0x1400313dc
   1400313d4:	mov    DWORD PTR [rsp+0x20],0x2
   1400313dc:	mov    eax,DWORD PTR [rsp+0x20]
   1400313e0:	cmp    DWORD PTR [rsp+0x460],eax
   1400313e7:	jl     0x140031410
   1400313e9:	mov    r8d,0x200
   1400313ef:	lea    rdx,[rsp+0x40]
   1400313f4:	lea    rcx,[rip+0x19d4d]        # 0x14004b148
   1400313fb:	call   0x140031600
   140031400:	test   eax,eax
   140031402:	jne    0x140031410
   140031404:	lea    rax,[rip+0xfffffffffffffec5]        # 0x1400312d0
   14003140b:	mov    QWORD PTR [rsp+0x28],rax
   140031410:	mov    rax,QWORD PTR [rsp+0x28]
   140031415:	mov    rcx,QWORD PTR [rsp+0x440]
   14003141d:	xor    rcx,rsp
   140031420:	call   0x14001c500
   140031425:	add    rsp,0x458
   14003142c:	ret    
   14003142d:	int3   
   14003142e:	int3   
   14003142f:	int3   
   140031430:	int3   
   140031431:	int3   
   140031432:	int3   
   140031433:	int3   
   140031434:	int3   
   140031435:	int3   
   140031436:	int3   
   140031437:	int3   
   140031438:	int3   
   140031439:	int3   
   14003143a:	int3   
   14003143b:	int3   
   14003143c:	int3   
   14003143d:	int3   
   14003143e:	int3   
   14003143f:	int3   
   140031440:	mov    QWORD PTR [rsp+0x20],r9
   140031445:	mov    DWORD PTR [rsp+0x18],r8d
   14003144a:	mov    QWORD PTR [rsp+0x10],rdx
   14003144f:	mov    DWORD PTR [rsp+0x8],ecx
   140031453:	sub    rsp,0x868
   14003145a:	mov    rax,QWORD PTR [rip+0x17fff]        # 0x140049460
   140031461:	xor    rax,rsp
   140031464:	mov    QWORD PTR [rsp+0x850],rax
   14003146c:	mov    ecx,DWORD PTR [rsp+0x870]
   140031473:	call   0x140031300
   140031478:	mov    QWORD PTR [rsp+0x30],rax
   14003147d:	cmp    QWORD PTR [rsp+0x30],0x0
   140031483:	je     0x14003151c
   140031489:	cmp    QWORD PTR [rsp+0x878],0x0
   140031492:	je     0x1400314db
   140031494:	cmp    DWORD PTR [rsp+0x880],0x0
   14003149c:	je     0x1400314db
   14003149e:	mov    eax,DWORD PTR [rsp+0x870]
   1400314a5:	mov    DWORD PTR [rsp+0x28],eax
   1400314a9:	mov    eax,DWORD PTR [rsp+0x880]
   1400314b0:	mov    DWORD PTR [rsp+0x20],eax
   1400314b4:	mov    r9,QWORD PTR [rsp+0x878]
   1400314bc:	lea    r8,[rip+0x19c95]        # 0x14004b158
   1400314c3:	mov    edx,0x400
   1400314c8:	lea    rcx,[rsp+0x50]
   1400314cd:	call   0x14001d908
   1400314d2:	lea    rcx,[rsp+0x50]
   1400314d7:	call   QWORD PTR [rsp+0x30]
   1400314db:	lea    rax,[rsp+0x890]
   1400314e3:	mov    QWORD PTR [rsp+0x38],rax
   1400314e8:	cmp    QWORD PTR [rsp+0x888],0x0
   1400314f1:	je     0x14003151c
   1400314f3:	mov    r9,QWORD PTR [rsp+0x38]
   1400314f8:	mov    r8,QWORD PTR [rsp+0x888]
   140031500:	mov    edx,0x400
   140031505:	lea    rcx,[rsp+0x50]
   14003150a:	call   0x14001dad8
   14003150f:	test   eax,eax
   140031511:	jl     0x14003151c
   140031513:	lea    rcx,[rsp+0x50]
   140031518:	call   QWORD PTR [rsp+0x30]
   14003151c:	mov    rcx,QWORD PTR [rsp+0x850]
   140031524:	xor    rcx,rsp
   140031527:	call   0x14001c500
   14003152c:	add    rsp,0x868
   140031533:	ret    
   140031534:	int3   
   140031535:	int3   
   140031536:	int3   
   140031537:	int3   
   140031538:	int3   
   140031539:	int3   
   14003153a:	int3   
   14003153b:	int3   
   14003153c:	int3   
   14003153d:	int3   
   14003153e:	int3   
   14003153f:	int3   
   140031540:	mov    DWORD PTR [rsp+0x20],r9d
   140031545:	mov    QWORD PTR [rsp+0x18],r8
   14003154a:	mov    QWORD PTR [rsp+0x10],rdx
   14003154f:	mov    QWORD PTR [rsp+0x8],rcx
   140031554:	sub    rsp,0x58
   140031558:	mov    DWORD PTR [rsp+0x40],0x80004005
   140031560:	mov    eax,DWORD PTR [rsp+0x78]
   140031564:	mov    DWORD PTR [rsp+0x30],eax
   140031568:	lea    rax,[rsp+0x38]
   14003156d:	mov    QWORD PTR [rsp+0x20],rax
   140031572:	mov    r9d,0x20019
   140031578:	xor    r8d,r8d
   14003157b:	mov    rdx,QWORD PTR [rsp+0x60]
   140031580:	mov    rcx,0xffffffff80000001
   140031587:	call   QWORD PTR [rip+0x8a93]        # 0x14003a020
   14003158d:	test   eax,eax
   14003158f:	jne    0x1400315ec
   140031591:	lea    rax,[rsp+0x30]
   140031596:	mov    QWORD PTR [rsp+0x28],rax
   14003159b:	mov    rax,QWORD PTR [rsp+0x70]
   1400315a0:	mov    QWORD PTR [rsp+0x20],rax
   1400315a5:	lea    r9,[rsp+0x34]
   1400315aa:	xor    r8d,r8d
   1400315ad:	mov    rdx,QWORD PTR [rsp+0x68]
   1400315b2:	mov    rcx,QWORD PTR [rsp+0x38]
   1400315b7:	call   QWORD PTR [rip+0x8a8b]        # 0x14003a048
   1400315bd:	test   eax,eax
   1400315bf:	jne    0x1400315e1
   1400315c1:	cmp    DWORD PTR [rsp+0x34],0x1
   1400315c6:	jne    0x1400315e1
   1400315c8:	mov    eax,DWORD PTR [rsp+0x78]
   1400315cc:	cmp    DWORD PTR [rsp+0x30],eax
   1400315d0:	jae    0x1400315e1
   1400315d2:	cmp    DWORD PTR [rsp+0x30],0x0
   1400315d7:	jbe    0x1400315e1
   1400315d9:	mov    DWORD PTR [rsp+0x40],0x0
   1400315e1:	mov    rcx,QWORD PTR [rsp+0x38]
   1400315e6:	call   QWORD PTR [rip+0x8a4c]        # 0x14003a038
   1400315ec:	mov    eax,DWORD PTR [rsp+0x40]
   1400315f0:	add    rsp,0x58
   1400315f4:	ret    
   1400315f5:	int3   
   1400315f6:	int3   
   1400315f7:	int3   
   1400315f8:	int3   
   1400315f9:	int3   
   1400315fa:	int3   
   1400315fb:	int3   
   1400315fc:	int3   
   1400315fd:	int3   
   1400315fe:	int3   
   1400315ff:	int3   
   140031600:	mov    DWORD PTR [rsp+0x18],r8d
   140031605:	mov    QWORD PTR [rsp+0x10],rdx
   14003160a:	mov    QWORD PTR [rsp+0x8],rcx
   14003160f:	sub    rsp,0x28
   140031613:	mov    r9d,DWORD PTR [rsp+0x40]
   140031618:	mov    r8,QWORD PTR [rsp+0x38]
   14003161d:	mov    rdx,QWORD PTR [rsp+0x30]
   140031622:	lea    rcx,[rip+0x19b67]        # 0x14004b190
   140031629:	call   0x140031540
   14003162e:	add    rsp,0x28
   140031632:	ret    
   140031633:	int3   
   140031634:	int3   
   140031635:	int3   
   140031636:	int3   
   140031637:	int3   
   140031638:	int3   
   140031639:	int3   
   14003163a:	int3   
   14003163b:	int3   
   14003163c:	int3   
   14003163d:	int3   
   14003163e:	int3   
   14003163f:	int3   
   140031640:	sub    rsp,0x28
   140031644:	movzx  eax,BYTE PTR [rip+0x1b4c9]        # 0x14004cb14
   14003164b:	test   eax,eax
   14003164d:	je     0x14003166b
   14003164f:	xor    r8d,r8d
   140031652:	mov    edx,0x1
   140031657:	mov    rcx,QWORD PTR [rip+0x1bc8a]        # 0x14004d2e8
   14003165e:	call   QWORD PTR [rip+0x8acc]        # 0x14003a130
   140031664:	mov    BYTE PTR [rip+0x1b4a9],0x0        # 0x14004cb14
   14003166b:	mov    rcx,QWORD PTR [rip+0x1bc76]        # 0x14004d2e8
   140031672:	call   QWORD PTR [rip+0x89f8]        # 0x14003a070
   140031678:	mov    rcx,QWORD PTR [rip+0x1bc71]        # 0x14004d2f0
   14003167f:	call   QWORD PTR [rip+0x89eb]        # 0x14003a070
   140031685:	add    rsp,0x28
   140031689:	ret    
   14003168a:	int3   
   14003168b:	int3   
   14003168c:	int3   
   14003168d:	int3   
   14003168e:	int3   
   14003168f:	int3   
   140031690:	sub    rsp,0x38
   140031694:	mov    BYTE PTR [rsp+0x20],0x0
   140031699:	xor    edx,edx
   14003169b:	mov    rcx,QWORD PTR [rip+0x1bc4e]        # 0x14004d2f0
   1400316a2:	call   QWORD PTR [rip+0x8a80]        # 0x14003a128
   1400316a8:	test   eax,eax
   1400316aa:	jne    0x1400316c6
   1400316ac:	xor    r8d,r8d
   1400316af:	mov    edx,0x1
   1400316b4:	mov    rcx,QWORD PTR [rip+0x1bc35]        # 0x14004d2f0
   1400316bb:	call   QWORD PTR [rip+0x8a6f]        # 0x14003a130
   1400316c1:	mov    BYTE PTR [rsp+0x20],0x1
   1400316c6:	mov    al,BYTE PTR [rsp+0x20]
   1400316ca:	add    rsp,0x38
   1400316ce:	ret    
   1400316cf:	int3   
   1400316d0:	int3   
   1400316d1:	int3   
   1400316d2:	int3   
   1400316d3:	int3   
   1400316d4:	int3   
   1400316d5:	int3   
   1400316d6:	int3   
   1400316d7:	int3   
   1400316d8:	int3   
   1400316d9:	int3   
   1400316da:	int3   
   1400316db:	int3   
   1400316dc:	int3   
   1400316dd:	int3   
   1400316de:	int3   
   1400316df:	int3   
   1400316e0:	sub    rsp,0x28
   1400316e4:	xor    r9d,r9d
   1400316e7:	mov    r8d,0xffffffff
   1400316ed:	mov    rdx,QWORD PTR [rip+0x1bbf4]        # 0x14004d2e8
   1400316f4:	mov    rcx,QWORD PTR [rip+0x1bbf5]        # 0x14004d2f0
   1400316fb:	call   QWORD PTR [rip+0x8a1f]        # 0x14003a120
   140031701:	test   eax,eax
   140031703:	jne    0x14003171e
   140031705:	mov    edx,0xffffffff
   14003170a:	mov    rcx,QWORD PTR [rip+0x1bbdf]        # 0x14004d2f0
   140031711:	call   QWORD PTR [rip+0x8a11]        # 0x14003a128
   140031717:	mov    BYTE PTR [rip+0x1b3f6],0x1        # 0x14004cb14
   14003171e:	add    rsp,0x28
   140031722:	ret    
   140031723:	int3   
   140031724:	int3   
   140031725:	int3   
   140031726:	int3   
   140031727:	int3   
   140031728:	int3   
   140031729:	int3   
   14003172a:	int3   
   14003172b:	int3   
   14003172c:	int3   
   14003172d:	int3   
   14003172e:	int3   
   14003172f:	int3   
   140031730:	mov    BYTE PTR [rsp+0x8],cl
   140031734:	sub    rsp,0x58
   140031738:	mov    DWORD PTR [rsp+0x38],0x0
   140031740:	lea    r8,[rsp+0x30]
   140031745:	lea    rdx,[rip+0xc2a4]        # 0x14003d9f0
   14003174c:	mov    rcx,0xffffffff80000001
   140031753:	call   QWORD PTR [rip+0x88a7]        # 0x14003a000
   140031759:	mov    DWORD PTR [rsp+0x38],eax
   14003175d:	cmp    DWORD PTR [rsp+0x38],0x0
   140031762:	jne    0x1400317b8
   140031764:	movzx  eax,BYTE PTR [rsp+0x60]
   140031769:	test   eax,eax
   14003176b:	je     0x140031777
   14003176d:	mov    DWORD PTR [rsp+0x40],0x1
   140031775:	jmp    0x14003177f
   140031777:	mov    DWORD PTR [rsp+0x40],0x0
   14003177f:	mov    eax,DWORD PTR [rsp+0x40]
   140031783:	mov    DWORD PTR [rsp+0x3c],eax
   140031787:	mov    DWORD PTR [rsp+0x28],0x4
   14003178f:	lea    rax,[rsp+0x3c]
   140031794:	mov    QWORD PTR [rsp+0x20],rax
   140031799:	mov    r9d,0x4
   14003179f:	xor    r8d,r8d
   1400317a2:	lea    rdx,[rip+0xc2bf]        # 0x14003da68
   1400317a9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400317ae:	call   QWORD PTR [rip+0x8864]        # 0x14003a018
   1400317b4:	mov    DWORD PTR [rsp+0x38],eax
   1400317b8:	mov    eax,DWORD PTR [rsp+0x38]
   1400317bc:	add    rsp,0x58
   1400317c0:	ret    
   1400317c1:	int3   
   1400317c2:	int3   
   1400317c3:	int3   
   1400317c4:	int3   
   1400317c5:	int3   
   1400317c6:	int3   
   1400317c7:	int3   
   1400317c8:	int3   
   1400317c9:	int3   
   1400317ca:	int3   
   1400317cb:	int3   
   1400317cc:	int3   
   1400317cd:	int3   
   1400317ce:	int3   
   1400317cf:	int3   
   1400317d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400317d5:	mov    rax,QWORD PTR [rsp+0x8]
   1400317da:	mov    al,BYTE PTR [rax+0x10]
   1400317dd:	ret    
   1400317de:	int3   
   1400317df:	int3   
   1400317e0:	int3   
   1400317e1:	int3   
   1400317e2:	int3   
   1400317e3:	int3   
   1400317e4:	int3   
   1400317e5:	int3   
   1400317e6:	int3   
   1400317e7:	int3   
   1400317e8:	int3   
   1400317e9:	int3   
   1400317ea:	int3   
   1400317eb:	int3   
   1400317ec:	int3   
   1400317ed:	int3   
   1400317ee:	int3   
   1400317ef:	int3   
   1400317f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400317f5:	sub    rsp,0x48
   1400317f9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400317fe:	call   0x140031a50
   140031803:	mov    DWORD PTR [rsp+0x30],eax
   140031807:	cmp    DWORD PTR [rsp+0x30],0x0
   14003180c:	jne    0x14003185d
   14003180e:	call   0x140031690
   140031813:	movzx  eax,al
   140031816:	test   eax,eax
   140031818:	je     0x14003185d
   14003181a:	call   QWORD PTR [rip+0x88e8]        # 0x14003a108
   140031820:	mov    rcx,rax
   140031823:	call   QWORD PTR [rip+0x88d7]        # 0x14003a100
   140031829:	mov    DWORD PTR [rsp+0x20],eax
   14003182d:	lea    r9,[rip+0xc25c]        # 0x14003da90
   140031834:	mov    r8d,0x16
   14003183a:	lea    rdx,[rip+0xc2df]        # 0x14003db20
   140031841:	mov    ecx,0x2
   140031846:	call   0x140031440
   14003184b:	mov    r11,QWORD PTR [rsp+0x50]
   140031850:	mov    BYTE PTR [r11+0x10],0x1
   140031855:	mov    DWORD PTR [rsp+0x30],0x1
   14003185d:	mov    eax,DWORD PTR [rsp+0x30]
   140031861:	add    rsp,0x48
   140031865:	ret    
   140031866:	int3   
   140031867:	int3   
   140031868:	int3   
   140031869:	int3   
   14003186a:	int3   
   14003186b:	int3   
   14003186c:	int3   
   14003186d:	int3   
   14003186e:	int3   
   14003186f:	int3   
   140031870:	mov    DWORD PTR [rsp+0x10],edx
   140031874:	mov    QWORD PTR [rsp+0x8],rcx
   140031879:	sub    rsp,0x28
   14003187d:	mov    edx,DWORD PTR [rsp+0x38]
   140031881:	mov    rcx,QWORD PTR [rsp+0x30]
   140031886:	call   0x140031a90
   14003188b:	mov    r11,QWORD PTR [rsp+0x30]
   140031890:	lea    rax,[rip+0xe2d9]        # 0x14003fb70
   140031897:	mov    QWORD PTR [r11],rax
   14003189a:	mov    rax,QWORD PTR [rsp+0x30]
   14003189f:	mov    BYTE PTR [rax+0x10],0x0
   1400318a3:	mov    rax,QWORD PTR [rsp+0x30]
   1400318a8:	add    rsp,0x28
   1400318ac:	ret    
   1400318ad:	int3   
   1400318ae:	int3   
   1400318af:	int3   
   1400318b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400318b5:	xor    eax,eax
   1400318b7:	ret    
   1400318b8:	int3   
   1400318b9:	int3   
   1400318ba:	int3   
   1400318bb:	int3   
   1400318bc:	int3   
   1400318bd:	int3   
   1400318be:	int3   
   1400318bf:	int3   
   1400318c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400318c5:	mov    eax,0x1
   1400318ca:	ret    
   1400318cb:	int3   
   1400318cc:	int3   
   1400318cd:	int3   
   1400318ce:	int3   
   1400318cf:	int3   
   1400318d0:	int3   
   1400318d1:	int3   
   1400318d2:	int3   
   1400318d3:	int3   
   1400318d4:	int3   
   1400318d5:	int3   
   1400318d6:	int3   
   1400318d7:	int3   
   1400318d8:	int3   
   1400318d9:	int3   
   1400318da:	int3   
   1400318db:	int3   
   1400318dc:	int3   
   1400318dd:	int3   
   1400318de:	int3   
   1400318df:	int3   
   1400318e0:	mov    QWORD PTR [rsp+0x18],r8
   1400318e5:	mov    QWORD PTR [rsp+0x10],rdx
   1400318ea:	mov    QWORD PTR [rsp+0x8],rcx
   1400318ef:	sub    rsp,0x28
   1400318f3:	lea    rdx,[rip+0x8d16]        # 0x14003a610
   1400318fa:	mov    rcx,QWORD PTR [rsp+0x38]
   1400318ff:	call   0x140019300
   140031904:	test   eax,eax
   140031906:	jne    0x14003191d
   140031908:	lea    rdx,[rip+0x8cb1]        # 0x14003a5c0
   14003190f:	mov    rcx,QWORD PTR [rsp+0x38]
   140031914:	call   0x140019300
   140031919:	test   eax,eax
   14003191b:	je     0x14003193e
   14003191d:	mov    rcx,QWORD PTR [rsp+0x40]
   140031922:	mov    rax,QWORD PTR [rsp+0x30]
   140031927:	mov    QWORD PTR [rcx],rax
   14003192a:	mov    rax,QWORD PTR [rsp+0x30]
   14003192f:	mov    rax,QWORD PTR [rax]
   140031932:	mov    rcx,QWORD PTR [rsp+0x30]
   140031937:	call   QWORD PTR [rax+0x8]
   14003193a:	xor    eax,eax
   14003193c:	jmp    0x140031943
   14003193e:	mov    eax,0x80004002
   140031943:	add    rsp,0x28
   140031947:	ret    
   140031948:	int3   
   140031949:	int3   
   14003194a:	int3   
   14003194b:	int3   
   14003194c:	int3   
   14003194d:	int3   
   14003194e:	int3   
   14003194f:	int3   
   140031950:	mov    QWORD PTR [rsp+0x8],rcx
   140031955:	sub    rsp,0x48
   140031959:	mov    BYTE PTR [rsp+0x30],0x0
   14003195e:	mov    rax,QWORD PTR [rsp+0x50]
   140031963:	cmp    DWORD PTR [rax+0x8],0x0
   140031967:	je     0x1400319d3
   140031969:	call   QWORD PTR [rip+0x87a1]        # 0x14003a110
   14003196f:	mov    rcx,QWORD PTR [rsp+0x50]
   140031974:	sub    eax,DWORD PTR [rcx+0xc]
   140031977:	mov    DWORD PTR [rsp+0x34],eax
   14003197b:	mov    rax,QWORD PTR [rsp+0x50]
   140031980:	mov    eax,DWORD PTR [rax+0x8]
   140031983:	cmp    DWORD PTR [rsp+0x34],eax
   140031987:	jbe    0x140031993
   140031989:	mov    DWORD PTR [rsp+0x38],0x1
   140031991:	jmp    0x14003199b
   140031993:	mov    DWORD PTR [rsp+0x38],0x0
   14003199b:	movzx  eax,BYTE PTR [rsp+0x38]
   1400319a0:	mov    BYTE PTR [rsp+0x30],al
   1400319a4:	movzx  eax,BYTE PTR [rsp+0x30]
   1400319a9:	mov    DWORD PTR [rsp+0x28],eax
   1400319ad:	mov    eax,DWORD PTR [rsp+0x34]
   1400319b1:	mov    DWORD PTR [rsp+0x20],eax
   1400319b5:	lea    r9,[rip+0xc21c]        # 0x14003dbd8
   1400319bc:	mov    r8d,0x3e
   1400319c2:	lea    rdx,[rip+0xc24f]        # 0x14003dc18
   1400319c9:	mov    ecx,0x2
   1400319ce:	call   0x140031440
   1400319d3:	mov    al,BYTE PTR [rsp+0x30]
   1400319d7:	add    rsp,0x48
   1400319db:	ret    
   1400319dc:	int3   
   1400319dd:	int3   
   1400319de:	int3   
   1400319df:	int3   
   1400319e0:	int3   
   1400319e1:	int3   
   1400319e2:	int3   
   1400319e3:	int3   
   1400319e4:	int3   
   1400319e5:	int3   
   1400319e6:	int3   
   1400319e7:	int3   
   1400319e8:	int3   
   1400319e9:	int3   
   1400319ea:	int3   
   1400319eb:	int3   
   1400319ec:	int3   
   1400319ed:	int3   
   1400319ee:	int3   
   1400319ef:	int3   
   1400319f0:	mov    DWORD PTR [rsp+0x10],edx
   1400319f4:	mov    QWORD PTR [rsp+0x8],rcx
   1400319f9:	sub    rsp,0x38
   1400319fd:	mov    eax,DWORD PTR [rsp+0x48]
   140031a01:	mov    DWORD PTR [rsp+0x20],eax
   140031a05:	lea    r9,[rip+0xc154]        # 0x14003db60
   140031a0c:	mov    r8d,0x31
   140031a12:	lea    rdx,[rip+0xc197]        # 0x14003dbb0
   140031a19:	mov    ecx,0x2
   140031a1e:	call   0x140031440
   140031a23:	mov    r11,QWORD PTR [rsp+0x40]
   140031a28:	mov    eax,DWORD PTR [rsp+0x48]
   140031a2c:	mov    DWORD PTR [r11+0x8],eax
   140031a30:	call   QWORD PTR [rip+0x86da]        # 0x14003a110
   140031a36:	mov    r11d,eax
   140031a39:	mov    rax,QWORD PTR [rsp+0x40]
   140031a3e:	mov    DWORD PTR [rax+0xc],r11d
   140031a42:	add    rsp,0x38
   140031a46:	ret    
   140031a47:	int3   
   140031a48:	int3   
   140031a49:	int3   
   140031a4a:	int3   
   140031a4b:	int3   
   140031a4c:	int3   
   140031a4d:	int3   
   140031a4e:	int3   
   140031a4f:	int3   
   140031a50:	mov    QWORD PTR [rsp+0x8],rcx
   140031a55:	sub    rsp,0x38
   140031a59:	mov    DWORD PTR [rsp+0x20],0x0
   140031a61:	mov    rcx,QWORD PTR [rsp+0x40]
   140031a66:	call   0x140031950
   140031a6b:	movzx  eax,al
   140031a6e:	test   eax,eax
   140031a70:	je     0x140031a7a
   140031a72:	mov    DWORD PTR [rsp+0x20],0x1
   140031a7a:	mov    eax,DWORD PTR [rsp+0x20]
   140031a7e:	add    rsp,0x38
   140031a82:	ret    
   140031a83:	int3   
   140031a84:	int3   
   140031a85:	int3   
   140031a86:	int3   
   140031a87:	int3   
   140031a88:	int3   
   140031a89:	int3   
   140031a8a:	int3   
   140031a8b:	int3   
   140031a8c:	int3   
   140031a8d:	int3   
   140031a8e:	int3   
   140031a8f:	int3   
   140031a90:	mov    DWORD PTR [rsp+0x10],edx
   140031a94:	mov    QWORD PTR [rsp+0x8],rcx
   140031a99:	sub    rsp,0x28
   140031a9d:	mov    rcx,QWORD PTR [rsp+0x30]
   140031aa2:	call   0x1400192e0
   140031aa7:	mov    r11,QWORD PTR [rsp+0x30]
   140031aac:	lea    rax,[rip+0xe095]        # 0x14003fb48
   140031ab3:	mov    QWORD PTR [r11],rax
   140031ab6:	mov    rax,QWORD PTR [rsp+0x30]
   140031abb:	mov    DWORD PTR [rax+0x8],0x0
   140031ac2:	mov    edx,DWORD PTR [rsp+0x38]
   140031ac6:	mov    rcx,QWORD PTR [rsp+0x30]
   140031acb:	call   0x1400319f0
   140031ad0:	mov    rax,QWORD PTR [rsp+0x30]
   140031ad5:	add    rsp,0x28
   140031ad9:	ret    
   140031ada:	int3   
   140031adb:	int3   
   140031adc:	int3   
   140031add:	int3   
   140031ade:	int3   
   140031adf:	int3   
   140031ae0:	mov    DWORD PTR [rsp+0x8],ecx
   140031ae4:	sub    rsp,0x88
   140031aeb:	mov    DWORD PTR [rsp+0x60],0xffffffff
   140031af3:	lea    rcx,[rip+0xc8de]        # 0x14003e3d8
   140031afa:	call   QWORD PTR [rip+0x8580]        # 0x14003a080
   140031b00:	lea    rdx,[rip+0xc8b1]        # 0x14003e3b8
   140031b07:	mov    rcx,rax
   140031b0a:	call   QWORD PTR [rip+0x8568]        # 0x14003a078
   140031b10:	mov    QWORD PTR [rsp+0x68],rax
   140031b15:	mov    r8d,DWORD PTR [rsp+0x90]
   140031b1d:	xor    edx,edx
   140031b1f:	mov    ecx,0x400
   140031b24:	call   QWORD PTR [rip+0x855e]        # 0x14003a088
   140031b2a:	mov    QWORD PTR [rsp+0x58],rax
   140031b2f:	cmp    QWORD PTR [rsp+0x58],0x0
   140031b35:	jne    0x140031b3e
   140031b37:	mov    eax,0xffffffff
   140031b3c:	jmp    0x140031b80
   140031b3e:	lea    rax,[rsp+0x30]
   140031b43:	mov    QWORD PTR [rsp+0x20],rax
   140031b48:	mov    r9d,0x20
   140031b4e:	lea    r8,[rsp+0x38]
   140031b53:	xor    edx,edx
   140031b55:	mov    rcx,QWORD PTR [rsp+0x58]
   140031b5a:	call   QWORD PTR [rsp+0x68]
   140031b5e:	mov    DWORD PTR [rsp+0x70],eax
   140031b62:	cmp    DWORD PTR [rsp+0x70],0x0
   140031b67:	jne    0x140031b71
   140031b69:	mov    eax,DWORD PTR [rsp+0x54]
   140031b6d:	mov    DWORD PTR [rsp+0x60],eax
   140031b71:	mov    rcx,QWORD PTR [rsp+0x58]
   140031b76:	call   QWORD PTR [rip+0x84f4]        # 0x14003a070
   140031b7c:	mov    eax,DWORD PTR [rsp+0x60]
   140031b80:	add    rsp,0x88
   140031b87:	ret    
   140031b88:	int3   
   140031b89:	int3   
   140031b8a:	int3   
   140031b8b:	int3   
   140031b8c:	int3   
   140031b8d:	int3   
   140031b8e:	int3   
   140031b8f:	int3   
   140031b90:	sub    rsp,0x278
   140031b97:	mov    rax,QWORD PTR [rip+0x178c2]        # 0x140049460
   140031b9e:	xor    rax,rsp
   140031ba1:	mov    QWORD PTR [rsp+0x260],rax
   140031ba9:	mov    QWORD PTR [rsp+0x38],0x0
   140031bb2:	call   QWORD PTR [rip+0x84d8]        # 0x14003a090
   140031bb8:	mov    ecx,eax
   140031bba:	call   0x140031ae0
   140031bbf:	mov    DWORD PTR [rsp+0x30],eax
   140031bc3:	cmp    DWORD PTR [rsp+0x30],0x0
   140031bc8:	je     0x140031c28
   140031bca:	mov    r8d,DWORD PTR [rsp+0x30]
   140031bcf:	xor    edx,edx
   140031bd1:	mov    ecx,0x410
   140031bd6:	call   QWORD PTR [rip+0x84ac]        # 0x14003a088
   140031bdc:	mov    QWORD PTR [rsp+0x40],rax
   140031be1:	cmp    QWORD PTR [rsp+0x40],0x0
   140031be7:	je     0x140031c28
   140031be9:	mov    r9d,0x208
   140031bef:	lea    r8,[rsp+0x50]
   140031bf4:	xor    edx,edx
   140031bf6:	mov    rcx,QWORD PTR [rsp+0x40]
   140031bfb:	call   0x140019372
   140031c00:	mov    DWORD PTR [rsp+0x20],0x1
   140031c08:	lea    r9,[rsp+0x38]
   140031c0d:	xor    r8d,r8d
   140031c10:	xor    edx,edx
   140031c12:	lea    rcx,[rsp+0x50]
   140031c17:	call   QWORD PTR [rip+0x878b]        # 0x14003a3a8
   140031c1d:	mov    rcx,QWORD PTR [rsp+0x40]
   140031c22:	call   QWORD PTR [rip+0x8448]        # 0x14003a070
   140031c28:	mov    rax,QWORD PTR [rsp+0x38]
   140031c2d:	mov    rcx,QWORD PTR [rsp+0x260]
   140031c35:	xor    rcx,rsp
   140031c38:	call   0x14001c500
   140031c3d:	add    rsp,0x278
   140031c44:	ret    
   140031c45:	int3   
   140031c46:	int3   
   140031c47:	int3   
   140031c48:	int3   
   140031c49:	int3   
   140031c4a:	int3   
   140031c4b:	int3   
   140031c4c:	int3   
   140031c4d:	int3   
   140031c4e:	int3   
   140031c4f:	int3   
   140031c50:	mov    QWORD PTR [rsp+0x8],rcx
   140031c55:	push   rbx
   140031c56:	sub    rsp,0x270
   140031c5d:	mov    rax,QWORD PTR [rip+0x177fc]        # 0x140049460
   140031c64:	xor    rax,rsp
   140031c67:	mov    QWORD PTR [rsp+0x268],rax
   140031c6f:	mov    QWORD PTR [rsp+0x30],0x0
   140031c78:	mov    rdx,QWORD PTR [rsp+0x280]
   140031c80:	lea    rcx,[rip+0xc761]        # 0x14003e3e8
   140031c87:	call   0x14001d0f0
   140031c8c:	test   eax,eax
   140031c8e:	je     0x140031db2
   140031c94:	mov    ecx,0x32
   140031c99:	call   QWORD PTR [rip+0x8731]        # 0x14003a3d0
   140031c9f:	mov    ebx,eax
   140031ca1:	mov    ecx,0x31
   140031ca6:	call   QWORD PTR [rip+0x8724]        # 0x14003a3d0
   140031cac:	mov    DWORD PTR [rsp+0x28],0x1010
   140031cb4:	mov    DWORD PTR [rsp+0x20],ebx
   140031cb8:	mov    r9d,eax
   140031cbb:	mov    r8d,0x1
   140031cc1:	mov    rdx,QWORD PTR [rsp+0x280]
   140031cc9:	xor    ecx,ecx
   140031ccb:	call   QWORD PTR [rip+0x86f7]        # 0x14003a3c8
   140031cd1:	mov    QWORD PTR [rsp+0x30],rax
   140031cd6:	cmp    QWORD PTR [rsp+0x30],0x0
   140031cdc:	jne    0x140031db0
   140031ce2:	mov    rax,QWORD PTR [rsp+0x280]
   140031cea:	mov    QWORD PTR [rsp+0x258],rax
   140031cf2:	mov    dx,0x2c
   140031cf6:	mov    rcx,QWORD PTR [rsp+0x280]
   140031cfe:	call   0x14001d500
   140031d03:	mov    QWORD PTR [rsp+0x260],rax
   140031d0b:	mov    DWORD PTR [rsp+0x250],0x1
   140031d16:	cmp    QWORD PTR [rsp+0x260],0x0
   140031d1f:	je     0x140031d8b
   140031d21:	mov    rax,QWORD PTR [rsp+0x280]
   140031d29:	mov    r8,QWORD PTR [rsp+0x260]
   140031d31:	sub    r8,rax
   140031d34:	sar    r8,1
   140031d37:	mov    rdx,QWORD PTR [rsp+0x280]
   140031d3f:	lea    rcx,[rsp+0x40]
   140031d44:	call   0x14001d52c
   140031d49:	mov    r11,QWORD PTR [rsp+0x280]
   140031d51:	mov    rcx,QWORD PTR [rsp+0x260]
   140031d59:	sub    rcx,r11
   140031d5c:	sar    rcx,1
   140031d5f:	xor    eax,eax
   140031d61:	mov    WORD PTR [rsp+rcx*2+0x40],ax
   140031d66:	mov    rcx,QWORD PTR [rsp+0x260]
   140031d6e:	add    rcx,0x2
   140031d72:	call   0x14001d574
   140031d77:	mov    DWORD PTR [rsp+0x250],eax
   140031d7e:	lea    rax,[rsp+0x40]
   140031d83:	mov    QWORD PTR [rsp+0x258],rax
   140031d8b:	mov    DWORD PTR [rsp+0x20],0x1
   140031d93:	lea    r9,[rsp+0x30]
   140031d98:	xor    r8d,r8d
   140031d9b:	mov    edx,DWORD PTR [rsp+0x250]
   140031da2:	mov    rcx,QWORD PTR [rsp+0x258]
   140031daa:	call   QWORD PTR [rip+0x85f8]        # 0x14003a3a8
   140031db0:	jmp    0x140031dbc
   140031db2:	call   0x140031b90
   140031db7:	mov    QWORD PTR [rsp+0x30],rax
   140031dbc:	mov    rax,QWORD PTR [rsp+0x30]
   140031dc1:	mov    rcx,QWORD PTR [rsp+0x268]
   140031dc9:	xor    rcx,rsp
   140031dcc:	call   0x14001c500
   140031dd1:	add    rsp,0x270
   140031dd8:	pop    rbx
   140031dd9:	ret    
   140031dda:	int3   
   140031ddb:	int3   
   140031ddc:	int3   
   140031ddd:	int3   
   140031dde:	int3   
   140031ddf:	int3   
   140031de0:	rex push rdi
   140031de2:	sub    rsp,0x530
   140031de9:	mov    rax,QWORD PTR [rip+0x17670]        # 0x140049460
   140031df0:	xor    rax,rsp
   140031df3:	mov    QWORD PTR [rsp+0x528],rax
   140031dfb:	mov    r8d,0x104
   140031e01:	lea    rdx,[rsp+0x40]
   140031e06:	xor    ecx,ecx
   140031e08:	call   QWORD PTR [rip+0x8362]        # 0x14003a170
   140031e0e:	mov    QWORD PTR [rsp+0x260],0x0
   140031e1a:	lea    rdi,[rsp+0x268]
   140031e22:	xor    eax,eax
   140031e24:	mov    ecx,0x2b0
   140031e29:	rep stos BYTE PTR es:[rdi],al
   140031e2b:	mov    DWORD PTR [rsp+0x20],0x2000
   140031e33:	mov    r9d,0x2b8
   140031e39:	lea    r8,[rsp+0x260]
   140031e41:	xor    edx,edx
   140031e43:	lea    rcx,[rsp+0x40]
   140031e48:	call   QWORD PTR [rip+0x8552]        # 0x14003a3a0
   140031e4e:	mov    DWORD PTR [rsp+0x250],eax
   140031e55:	mov    eax,DWORD PTR [rsp+0x250]
   140031e5c:	and    rax,0xffff
   140031e62:	movzx  eax,ax
   140031e65:	cmp    eax,0x4550
   140031e6a:	jne    0x140031e91
   140031e6c:	mov    eax,DWORD PTR [rsp+0x250]
   140031e73:	shr    rax,0x10
   140031e77:	and    rax,0xffff
   140031e7d:	movzx  eax,ax
   140031e80:	test   eax,eax
   140031e82:	jne    0x140031e91
   140031e84:	mov    DWORD PTR [rsp+0x520],0x1
   140031e8f:	jmp    0x140031e9c
   140031e91:	mov    DWORD PTR [rsp+0x520],0x0
   140031e9c:	mov    al,BYTE PTR [rsp+0x520]
   140031ea3:	mov    rcx,QWORD PTR [rsp+0x528]
   140031eab:	xor    rcx,rsp
   140031eae:	call   0x14001c500
   140031eb3:	add    rsp,0x530
   140031eba:	pop    rdi
   140031ebb:	ret    
   140031ebc:	int3   
   140031ebd:	int3   
   140031ebe:	int3   
   140031ebf:	int3   
   140031ec0:	int3   
   140031ec1:	int3   
   140031ec2:	int3   
   140031ec3:	int3   
   140031ec4:	int3   
   140031ec5:	int3   
   140031ec6:	int3   
   140031ec7:	int3   
   140031ec8:	int3   
   140031ec9:	int3   
   140031eca:	int3   
   140031ecb:	int3   
   140031ecc:	int3   
   140031ecd:	int3   
   140031ece:	int3   
   140031ecf:	int3   
   140031ed0:	mov    QWORD PTR [rsp+0x18],r8
   140031ed5:	mov    DWORD PTR [rsp+0x10],edx
   140031ed9:	mov    QWORD PTR [rsp+0x8],rcx
   140031ede:	mov    rcx,QWORD PTR [rsp+0x8]
   140031ee3:	mov    eax,DWORD PTR [rsp+0x10]
   140031ee7:	mov    DWORD PTR [rcx],eax
   140031ee9:	mov    rcx,QWORD PTR [rsp+0x8]
   140031eee:	mov    rax,QWORD PTR [rsp+0x18]
   140031ef3:	mov    QWORD PTR [rcx+0x8],rax
   140031ef7:	mov    rax,QWORD PTR [rsp+0x8]
   140031efc:	ret    
   140031efd:	int3   
   140031efe:	int3   
   140031eff:	int3   
   140031f00:	int3   
   140031f01:	int3   
   140031f02:	int3   
   140031f03:	int3   
   140031f04:	int3   
   140031f05:	int3   
   140031f06:	int3   
   140031f07:	int3   
   140031f08:	int3   
   140031f09:	int3   
   140031f0a:	int3   
   140031f0b:	int3   
   140031f0c:	int3   
   140031f0d:	int3   
   140031f0e:	int3   
   140031f0f:	int3   
   140031f10:	mov    QWORD PTR [rsp+0x8],rcx
   140031f15:	sub    rsp,0x28
   140031f19:	mov    rcx,QWORD PTR [rsp+0x30]
   140031f1e:	mov    rcx,QWORD PTR [rcx]
   140031f21:	call   QWORD PTR [rip+0x8141]        # 0x14003a068
   140031f27:	add    rsp,0x28
   140031f2b:	ret    
   140031f2c:	int3   
   140031f2d:	int3   
   140031f2e:	int3   
   140031f2f:	int3   
   140031f30:	int3   
   140031f31:	int3   
   140031f32:	int3   
   140031f33:	int3   
   140031f34:	int3   
   140031f35:	int3   
   140031f36:	int3   
   140031f37:	int3   
   140031f38:	int3   
   140031f39:	int3   
   140031f3a:	int3   
   140031f3b:	int3   
   140031f3c:	int3   
   140031f3d:	int3   
   140031f3e:	int3   
   140031f3f:	int3   
   140031f40:	mov    QWORD PTR [rsp+0x10],rdx
   140031f45:	mov    QWORD PTR [rsp+0x8],rcx
   140031f4a:	mov    rcx,QWORD PTR [rsp+0x8]
   140031f4f:	mov    rax,QWORD PTR [rsp+0x10]
   140031f54:	mov    QWORD PTR [rcx],rax
   140031f57:	mov    rax,QWORD PTR [rsp+0x8]
   140031f5c:	ret    
   140031f5d:	int3   
   140031f5e:	int3   
   140031f5f:	int3   
   140031f60:	int3   
   140031f61:	int3   
   140031f62:	int3   
   140031f63:	int3   
   140031f64:	int3   
   140031f65:	int3   
   140031f66:	int3   
   140031f67:	int3   
   140031f68:	int3   
   140031f69:	int3   
   140031f6a:	int3   
   140031f6b:	int3   
   140031f6c:	int3   
   140031f6d:	int3   
   140031f6e:	int3   
   140031f6f:	int3   
   140031f70:	mov    WORD PTR [rsp+0x8],cx
   140031f75:	sub    rsp,0x18
   140031f79:	movzx  eax,WORD PTR [rsp+0x20]
   140031f7e:	cmp    eax,0x20
   140031f81:	je     0x140031faa
   140031f83:	movzx  eax,WORD PTR [rsp+0x20]
   140031f88:	cmp    eax,0x9
   140031f8b:	je     0x140031faa
   140031f8d:	movzx  eax,WORD PTR [rsp+0x20]
   140031f92:	cmp    eax,0xa
   140031f95:	je     0x140031faa
   140031f97:	movzx  eax,WORD PTR [rsp+0x20]
   140031f9c:	cmp    eax,0xd
   140031f9f:	je     0x140031faa
   140031fa1:	mov    DWORD PTR [rsp],0x0
   140031fa8:	jmp    0x140031fb1
   140031faa:	mov    DWORD PTR [rsp],0x1
   140031fb1:	mov    al,BYTE PTR [rsp]
   140031fb4:	add    rsp,0x18
   140031fb8:	ret    
   140031fb9:	int3   
   140031fba:	int3   
   140031fbb:	int3   
   140031fbc:	int3   
   140031fbd:	int3   
   140031fbe:	int3   
   140031fbf:	int3   
   140031fc0:	mov    QWORD PTR [rsp+0x8],rcx
   140031fc5:	sub    rsp,0x28
   140031fc9:	mov    rcx,QWORD PTR [rsp+0x30]
   140031fce:	call   QWORD PTR [rip+0x81a4]        # 0x14003a178
   140031fd4:	add    rsp,0x28
   140031fd8:	ret    
   140031fd9:	int3   
   140031fda:	int3   
   140031fdb:	int3   
   140031fdc:	int3   
   140031fdd:	int3   
   140031fde:	int3   
   140031fdf:	int3   
   140031fe0:	mov    QWORD PTR [rsp+0x10],rdx
   140031fe5:	mov    QWORD PTR [rsp+0x8],rcx
   140031fea:	sub    rsp,0x38
   140031fee:	mov    rdx,QWORD PTR [rsp+0x40]
   140031ff3:	mov    ecx,0x104
   140031ff8:	call   QWORD PTR [rip+0x8182]        # 0x14003a180
   140031ffe:	mov    rcx,QWORD PTR [rsp+0x48]
   140032003:	call   QWORD PTR [rip+0x816f]        # 0x14003a178
   140032009:	mov    DWORD PTR [rsp+0x20],eax
   14003200d:	mov    rax,QWORD PTR [rsp+0x40]
   140032012:	add    rsp,0x38
   140032016:	ret    
   140032017:	int3   
   140032018:	int3   
   140032019:	int3   
   14003201a:	int3   
   14003201b:	int3   
   14003201c:	int3   
   14003201d:	int3   
   14003201e:	int3   
   14003201f:	int3   
   140032020:	mov    QWORD PTR [rsp+0x10],rdx
   140032025:	mov    QWORD PTR [rsp+0x8],rcx
   14003202a:	xor    al,al
   14003202c:	ret    
   14003202d:	int3   
   14003202e:	int3   
   14003202f:	int3   
   140032030:	int3   
   140032031:	int3   
   140032032:	int3   
   140032033:	int3   
   140032034:	int3   
   140032035:	int3   
   140032036:	int3   
   140032037:	int3   
   140032038:	int3   
   140032039:	int3   
   14003203a:	int3   
   14003203b:	int3   
   14003203c:	int3   
   14003203d:	int3   
   14003203e:	int3   
   14003203f:	int3   
   140032040:	mov    QWORD PTR [rsp+0x8],rcx
   140032045:	xor    al,al
   140032047:	ret    
   140032048:	int3   
   140032049:	int3   
   14003204a:	int3   
   14003204b:	int3   
   14003204c:	int3   
   14003204d:	int3   
   14003204e:	int3   
   14003204f:	int3   
   140032050:	mov    QWORD PTR [rsp+0x8],rcx
   140032055:	xor    al,al
   140032057:	ret    
   140032058:	int3   
   140032059:	int3   
   14003205a:	int3   
   14003205b:	int3   
   14003205c:	int3   
   14003205d:	int3   
   14003205e:	int3   
   14003205f:	int3   
   140032060:	mov    QWORD PTR [rsp+0x8],rcx
   140032065:	mov    al,0x1
   140032067:	ret    
   140032068:	int3   
   140032069:	int3   
   14003206a:	int3   
   14003206b:	int3   
   14003206c:	int3   
   14003206d:	int3   
   14003206e:	int3   
   14003206f:	int3   
   140032070:	mov    BYTE PTR [rsp+0x10],dl
   140032074:	mov    QWORD PTR [rsp+0x8],rcx
   140032079:	movzx  edx,BYTE PTR [rsp+0x10]
   14003207e:	and    dl,0x1
   140032081:	mov    rax,QWORD PTR [rsp+0x8]
   140032086:	movzx  ecx,BYTE PTR [rax+0x8]
   14003208a:	and    cl,0xfe
   14003208d:	or     cl,dl
   14003208f:	mov    rax,QWORD PTR [rsp+0x8]
   140032094:	mov    BYTE PTR [rax+0x8],cl
   140032097:	ret    
   140032098:	int3   
   140032099:	int3   
   14003209a:	int3   
   14003209b:	int3   
   14003209c:	int3   
   14003209d:	int3   
   14003209e:	int3   
   14003209f:	int3   
   1400320a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400320a5:	mov    rax,QWORD PTR [rsp+0x8]
   1400320aa:	movzx  eax,BYTE PTR [rax+0x8]
   1400320ae:	and    al,0x1
   1400320b0:	ret    
   1400320b1:	int3   
   1400320b2:	int3   
   1400320b3:	int3   
   1400320b4:	int3   
   1400320b5:	int3   
   1400320b6:	int3   
   1400320b7:	int3   
   1400320b8:	int3   
   1400320b9:	int3   
   1400320ba:	int3   
   1400320bb:	int3   
   1400320bc:	int3   
   1400320bd:	int3   
   1400320be:	int3   
   1400320bf:	int3   
   1400320c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400320c5:	sub    rsp,0x38
   1400320c9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400320ce:	add    rcx,0x38
   1400320d2:	call   0x140003bb0
   1400320d7:	test   rax,rax
   1400320da:	jbe    0x1400320e6
   1400320dc:	mov    DWORD PTR [rsp+0x20],0x1
   1400320e4:	jmp    0x1400320ee
   1400320e6:	mov    DWORD PTR [rsp+0x20],0x0
   1400320ee:	mov    al,BYTE PTR [rsp+0x20]
   1400320f2:	add    rsp,0x38
   1400320f6:	ret    
   1400320f7:	int3   
   1400320f8:	int3   
   1400320f9:	int3   
   1400320fa:	int3   
   1400320fb:	int3   
   1400320fc:	int3   
   1400320fd:	int3   
   1400320fe:	int3   
   1400320ff:	int3   
   140032100:	mov    QWORD PTR [rsp+0x8],rcx
   140032105:	sub    rsp,0x28
   140032109:	mov    rcx,QWORD PTR [rsp+0x30]
   14003210e:	call   0x1400320a0
   140032113:	add    rsp,0x28
   140032117:	ret    
   140032118:	int3   
   140032119:	int3   
   14003211a:	int3   
   14003211b:	int3   
   14003211c:	int3   
   14003211d:	int3   
   14003211e:	int3   
   14003211f:	int3   
   140032120:	mov    QWORD PTR [rsp+0x8],rcx
   140032125:	sub    rsp,0x58
   140032129:	lea    rdx,[rsp+0x20]
   14003212e:	mov    rcx,QWORD PTR [rsp+0x60]
   140032133:	call   0x140003c20
   140032138:	jmp    0x140032144
   14003213a:	lea    rcx,[rsp+0x20]
   14003213f:	call   0x1400120d0
   140032144:	lea    rdx,[rsp+0x38]
   140032149:	mov    rcx,QWORD PTR [rsp+0x60]
   14003214e:	call   0x140006690
   140032153:	mov    rdx,rax
   140032156:	lea    rcx,[rsp+0x20]
   14003215b:	call   0x140004f40
   140032160:	movzx  eax,al
   140032163:	test   eax,eax
   140032165:	je     0x1400321c3
   140032167:	lea    rcx,[rsp+0x20]
   14003216c:	call   0x1400120b0
   140032171:	cmp    DWORD PTR [rax],0x1
   140032174:	jne    0x1400321be
   140032176:	lea    rcx,[rsp+0x20]
   14003217b:	call   0x1400120b0
   140032180:	mov    rax,QWORD PTR [rax+0x8]
   140032184:	mov    QWORD PTR [rsp+0x30],rax
   140032189:	mov    rax,QWORD PTR [rsp+0x30]
   14003218e:	mov    rax,QWORD PTR [rax]
   140032191:	mov    rcx,QWORD PTR [rsp+0x30]
   140032196:	call   QWORD PTR [rax+0x10]
   140032199:	movzx  eax,al
   14003219c:	test   eax,eax
   14003219e:	je     0x1400321be
   1400321a0:	mov    rax,QWORD PTR [rsp+0x30]
   1400321a5:	mov    rax,QWORD PTR [rax]
   1400321a8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400321ad:	call   QWORD PTR [rax+0x18]
   1400321b0:	movzx  eax,al
   1400321b3:	test   eax,eax
   1400321b5:	je     0x1400321be
   1400321b7:	mov    rax,QWORD PTR [rsp+0x30]
   1400321bc:	jmp    0x1400321c5
   1400321be:	jmp    0x14003213a
   1400321c3:	xor    eax,eax
   1400321c5:	add    rsp,0x58
   1400321c9:	ret    
   1400321ca:	int3   
   1400321cb:	int3   
   1400321cc:	int3   
   1400321cd:	int3   
   1400321ce:	int3   
   1400321cf:	int3   
   1400321d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400321d5:	sub    rsp,0x28
   1400321d9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400321de:	add    rcx,0x38
   1400321e2:	mov    r8,QWORD PTR [rip+0xd10f]        # 0x14003f2f8
   1400321e9:	xor    edx,edx
   1400321eb:	call   0x1400082d0
   1400321f0:	add    rsp,0x28
   1400321f4:	ret    
   1400321f5:	int3   
   1400321f6:	int3   
   1400321f7:	int3   
   1400321f8:	int3   
   1400321f9:	int3   
   1400321fa:	int3   
   1400321fb:	int3   
   1400321fc:	int3   
   1400321fd:	int3   
   1400321fe:	int3   
   1400321ff:	int3   
   140032200:	mov    QWORD PTR [rsp+0x10],rdx
   140032205:	mov    QWORD PTR [rsp+0x8],rcx
   14003220a:	push   rbx
   14003220b:	sub    rsp,0x50
   14003220f:	mov    rax,QWORD PTR [rsp+0x60]
   140032214:	movzx  eax,BYTE PTR [rax+0x8]
   140032218:	shr    al,1
   14003221a:	and    al,0x1
   14003221c:	movzx  eax,al
   14003221f:	test   eax,eax
   140032221:	je     0x140032231
   140032223:	lea    rax,[rip+0xfffffffffffeacd2]        # 0x14001cefc
   14003222a:	mov    QWORD PTR [rsp+0x48],rax
   14003222f:	jmp    0x14003223d
   140032231:	lea    rax,[rip+0xfffffffffffeaeb8]        # 0x14001d0f0
   140032238:	mov    QWORD PTR [rsp+0x48],rax
   14003223d:	mov    rax,QWORD PTR [rsp+0x48]
   140032242:	mov    QWORD PTR [rsp+0x20],rax
   140032247:	mov    rcx,QWORD PTR [rsp+0x60]
   14003224c:	add    rcx,0x10
   140032250:	lea    rdx,[rsp+0x28]
   140032255:	call   0x140003c20
   14003225a:	jmp    0x140032266
   14003225c:	lea    rcx,[rsp+0x28]
   140032261:	call   0x140004ed0
   140032266:	mov    rcx,QWORD PTR [rsp+0x60]
   14003226b:	add    rcx,0x10
   14003226f:	lea    rdx,[rsp+0x38]
   140032274:	call   0x140006690
   140032279:	mov    rdx,rax
   14003227c:	lea    rcx,[rsp+0x28]
   140032281:	call   0x140004f40
   140032286:	movzx  eax,al
   140032289:	test   eax,eax
   14003228b:	je     0x1400322c0
   14003228d:	mov    rcx,QWORD PTR [rsp+0x68]
   140032292:	call   0x140003b90
   140032297:	mov    rbx,rax
   14003229a:	lea    rcx,[rsp+0x28]
   14003229f:	call   0x1400120b0
   1400322a4:	mov    rcx,rax
   1400322a7:	call   0x140003b90
   1400322ac:	mov    rdx,rbx
   1400322af:	mov    rcx,rax
   1400322b2:	call   QWORD PTR [rsp+0x20]
   1400322b6:	test   eax,eax
   1400322b8:	jne    0x1400322be
   1400322ba:	mov    al,0x1
   1400322bc:	jmp    0x1400322c2
   1400322be:	jmp    0x14003225c
   1400322c0:	xor    al,al
   1400322c2:	add    rsp,0x50
   1400322c6:	pop    rbx
   1400322c7:	ret    
   1400322c8:	int3   
   1400322c9:	int3   
   1400322ca:	int3   
   1400322cb:	int3   
   1400322cc:	int3   
   1400322cd:	int3   
   1400322ce:	int3   
   1400322cf:	int3   
   1400322d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400322d5:	mov    QWORD PTR [rsp+0x8],rcx
   1400322da:	sub    rsp,0x48
   1400322de:	lea    rdx,[rsp+0x20]
   1400322e3:	mov    rcx,QWORD PTR [rsp+0x50]
   1400322e8:	call   0x140003c20
   1400322ed:	jmp    0x1400322f9
   1400322ef:	lea    rcx,[rsp+0x20]
   1400322f4:	call   0x1400120d0
   1400322f9:	lea    rdx,[rsp+0x30]
   1400322fe:	mov    rcx,QWORD PTR [rsp+0x50]
   140032303:	call   0x140006690
   140032308:	mov    rdx,rax
   14003230b:	lea    rcx,[rsp+0x20]
   140032310:	call   0x140004f40
   140032315:	movzx  eax,al
   140032318:	test   eax,eax
   14003231a:	je     0x14003235c
   14003231c:	lea    rcx,[rsp+0x20]
   140032321:	call   0x1400120b0
   140032326:	cmp    DWORD PTR [rax],0x0
   140032329:	jne    0x14003235a
   14003232b:	lea    rcx,[rsp+0x20]
   140032330:	call   0x1400120b0
   140032335:	mov    rdx,QWORD PTR [rsp+0x58]
   14003233a:	mov    rcx,QWORD PTR [rax+0x8]
   14003233e:	call   0x140032200
   140032343:	movzx  eax,al
   140032346:	test   eax,eax
   140032348:	je     0x14003235a
   14003234a:	lea    rcx,[rsp+0x20]
   14003234f:	call   0x1400120b0
   140032354:	mov    rax,QWORD PTR [rax+0x8]
   140032358:	jmp    0x14003235e
   14003235a:	jmp    0x1400322ef
   14003235c:	xor    eax,eax
   14003235e:	add    rsp,0x48
   140032362:	ret    
   140032363:	int3   
   140032364:	int3   
   140032365:	int3   
   140032366:	int3   
   140032367:	int3   
   140032368:	int3   
   140032369:	int3   
   14003236a:	int3   
   14003236b:	int3   
   14003236c:	int3   
   14003236d:	int3   
   14003236e:	int3   
   14003236f:	int3   
   140032370:	mov    QWORD PTR [rsp+0x10],rdx
   140032375:	mov    QWORD PTR [rsp+0x8],rcx
   14003237a:	sub    rsp,0x38
   14003237e:	mov    DWORD PTR [rsp+0x20],0x0
   140032386:	mov    rcx,QWORD PTR [rsp+0x40]
   14003238b:	add    rcx,0x10
   14003238f:	xor    edx,edx
   140032391:	call   0x140011c50
   140032396:	mov    rdx,rax
   140032399:	mov    rcx,QWORD PTR [rsp+0x48]
   14003239e:	call   0x140005d30
   1400323a3:	mov    eax,DWORD PTR [rsp+0x20]
   1400323a7:	or     eax,0x1
   1400323aa:	mov    DWORD PTR [rsp+0x20],eax
   1400323ae:	mov    rax,QWORD PTR [rsp+0x48]
   1400323b3:	add    rsp,0x38
   1400323b7:	ret    
   1400323b8:	int3   
   1400323b9:	int3   
   1400323ba:	int3   
   1400323bb:	int3   
   1400323bc:	int3   
   1400323bd:	int3   
   1400323be:	int3   
   1400323bf:	int3   
   1400323c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400323c5:	sub    rsp,0x28
   1400323c9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400323ce:	lea    rax,[rip+0xd243]        # 0x14003f618
   1400323d5:	mov    QWORD PTR [rcx],rax
   1400323d8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400323dd:	add    rcx,0x40
   1400323e1:	call   0x140003a90
   1400323e6:	mov    rcx,QWORD PTR [rsp+0x30]
   1400323eb:	add    rcx,0x10
   1400323ef:	call   0x140003bf0
   1400323f4:	add    rsp,0x28
   1400323f8:	ret    
   1400323f9:	int3   
   1400323fa:	int3   
   1400323fb:	int3   
   1400323fc:	int3   
   1400323fd:	int3   
   1400323fe:	int3   
   1400323ff:	int3   
   140032400:	mov    QWORD PTR [rsp+0x20],r9
   140032405:	mov    QWORD PTR [rsp+0x18],r8
   14003240a:	mov    QWORD PTR [rsp+0x10],rdx
   14003240f:	mov    QWORD PTR [rsp+0x8],rcx
   140032414:	sub    rsp,0x58
   140032418:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140032421:	mov    DWORD PTR [rsp+0x38],0x0
   140032429:	mov    rcx,QWORD PTR [rsp+0x70]
   14003242e:	call   0x140003bb0
   140032433:	mov    QWORD PTR [rsp+0x28],rax
   140032438:	mov    QWORD PTR [rsp+0x30],0x0
   140032441:	mov    r8,QWORD PTR [rsp+0x30]
   140032446:	mov    rdx,QWORD PTR [rsp+0x70]
   14003244b:	mov    rcx,QWORD PTR [rsp+0x68]
   140032450:	call   0x1400060f0
   140032455:	mov    QWORD PTR [rsp+0x30],rax
   14003245a:	mov    rax,QWORD PTR [rip+0xce97]        # 0x14003f2f8
   140032461:	cmp    QWORD PTR [rsp+0x30],rax
   140032466:	je     0x1400324a3
   140032468:	mov    r9,QWORD PTR [rsp+0x78]
   14003246d:	mov    r8,QWORD PTR [rsp+0x28]
   140032472:	mov    rdx,QWORD PTR [rsp+0x30]
   140032477:	mov    rcx,QWORD PTR [rsp+0x68]
   14003247c:	call   0x1400083e0
   140032481:	movzx  eax,BYTE PTR [rsp+0x80]
   140032489:	test   eax,eax
   14003248b:	jne    0x14003248f
   14003248d:	jmp    0x1400324a3
   14003248f:	mov    rcx,QWORD PTR [rsp+0x28]
   140032494:	mov    rax,QWORD PTR [rsp+0x30]
   140032499:	add    rax,rcx
   14003249c:	mov    QWORD PTR [rsp+0x30],rax
   1400324a1:	jmp    0x140032441
   1400324a3:	mov    rdx,QWORD PTR [rsp+0x68]
   1400324a8:	mov    rcx,QWORD PTR [rsp+0x60]
   1400324ad:	call   0x140005d30
   1400324b2:	mov    eax,DWORD PTR [rsp+0x38]
   1400324b6:	or     eax,0x1
   1400324b9:	mov    DWORD PTR [rsp+0x38],eax
   1400324bd:	mov    rcx,QWORD PTR [rsp+0x68]
   1400324c2:	call   0x140003a90
   1400324c7:	mov    rax,QWORD PTR [rsp+0x60]
   1400324cc:	add    rsp,0x58
   1400324d0:	ret    
   1400324d1:	int3   
   1400324d2:	int3   
   1400324d3:	int3   
   1400324d4:	int3   
   1400324d5:	int3   
   1400324d6:	int3   
   1400324d7:	int3   
   1400324d8:	int3   
   1400324d9:	int3   
   1400324da:	int3   
   1400324db:	int3   
   1400324dc:	int3   
   1400324dd:	int3   
   1400324de:	int3   
   1400324df:	int3   
   1400324e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400324e5:	sub    rsp,0x478
   1400324ec:	mov    rax,QWORD PTR [rip+0x16f6d]        # 0x140049460
   1400324f3:	xor    rax,rsp
   1400324f6:	mov    QWORD PTR [rsp+0x468],rax
   1400324fe:	mov    DWORD PTR [rsp+0x460],0x0
   140032509:	mov    r8d,0x104
   14003250f:	lea    rdx,[rsp+0x40]
   140032514:	xor    ecx,ecx
   140032516:	call   QWORD PTR [rip+0x7c54]        # 0x14003a170
   14003251c:	mov    QWORD PTR [rsp+0x20],0x0
   140032525:	lea    r9,[rsp+0x250]
   14003252d:	xor    r8d,r8d
   140032530:	xor    edx,edx
   140032532:	lea    rcx,[rsp+0x40]
   140032537:	call   0x14001d438
   14003253c:	lea    rdx,[rsp+0x250]
   140032544:	mov    rcx,QWORD PTR [rsp+0x480]
   14003254c:	call   0x140003a30
   140032551:	mov    eax,DWORD PTR [rsp+0x460]
   140032558:	or     eax,0x1
   14003255b:	mov    DWORD PTR [rsp+0x460],eax
   140032562:	mov    rax,QWORD PTR [rsp+0x480]
   14003256a:	mov    rcx,QWORD PTR [rsp+0x468]
   140032572:	xor    rcx,rsp
   140032575:	call   0x14001c500
   14003257a:	add    rsp,0x478
   140032581:	ret    
   140032582:	int3   
   140032583:	int3   
   140032584:	int3   
   140032585:	int3   
   140032586:	int3   
   140032587:	int3   
   140032588:	int3   
   140032589:	int3   
   14003258a:	int3   
   14003258b:	int3   
   14003258c:	int3   
   14003258d:	int3   
   14003258e:	int3   
   14003258f:	int3   
   140032590:	mov    QWORD PTR [rsp+0x10],rdx
   140032595:	mov    QWORD PTR [rsp+0x8],rcx
   14003259a:	sub    rsp,0x38
   14003259e:	mov    r8,QWORD PTR [rsp+0x48]
   1400325a3:	xor    edx,edx
   1400325a5:	lea    rcx,[rsp+0x20]
   1400325aa:	call   0x140031ed0
   1400325af:	mov    rcx,QWORD PTR [rsp+0x40]
   1400325b4:	add    rcx,0x8
   1400325b8:	mov    rdx,rax
   1400325bb:	call   0x140011d20
   1400325c0:	add    rsp,0x38
   1400325c4:	ret    
   1400325c5:	int3   
   1400325c6:	int3   
   1400325c7:	int3   
   1400325c8:	int3   
   1400325c9:	int3   
   1400325ca:	int3   
   1400325cb:	int3   
   1400325cc:	int3   
   1400325cd:	int3   
   1400325ce:	int3   
   1400325cf:	int3   
   1400325d0:	mov    BYTE PTR [rsp+0x10],dl
   1400325d4:	mov    QWORD PTR [rsp+0x8],rcx
   1400325d9:	sub    rsp,0x28
   1400325dd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400325e2:	lea    rax,[rip+0xd0af]        # 0x14003f698
   1400325e9:	mov    QWORD PTR [rcx],rax
   1400325ec:	mov    rcx,QWORD PTR [rsp+0x30]
   1400325f1:	add    rcx,0x8
   1400325f5:	call   0x140011910
   1400325fa:	mov    rcx,QWORD PTR [rsp+0x30]
   1400325ff:	add    rcx,0x38
   140032603:	call   0x140005c70
   140032608:	movzx  edx,BYTE PTR [rsp+0x38]
   14003260d:	and    dl,0x1
   140032610:	mov    rax,QWORD PTR [rsp+0x30]
   140032615:	movzx  ecx,BYTE PTR [rax+0x60]
   140032619:	and    cl,0xfe
   14003261c:	or     cl,dl
   14003261e:	mov    rax,QWORD PTR [rsp+0x30]
   140032623:	mov    BYTE PTR [rax+0x60],cl
   140032626:	mov    rax,QWORD PTR [rsp+0x30]
   14003262b:	add    rsp,0x28
   14003262f:	ret    
   140032630:	int3   
   140032631:	int3   
   140032632:	int3   
   140032633:	int3   
   140032634:	int3   
   140032635:	int3   
   140032636:	int3   
   140032637:	int3   
   140032638:	int3   
   140032639:	int3   
   14003263a:	int3   
   14003263b:	int3   
   14003263c:	int3   
   14003263d:	int3   
   14003263e:	int3   
   14003263f:	int3   
   140032640:	mov    QWORD PTR [rsp+0x10],rdx
   140032645:	mov    QWORD PTR [rsp+0x8],rcx
   14003264a:	sub    rsp,0x28
   14003264e:	mov    rdx,QWORD PTR [rsp+0x30]
   140032653:	mov    rcx,QWORD PTR [rsp+0x38]
   140032658:	call   0x140005d80
   14003265d:	mov    al,0x1
   14003265f:	add    rsp,0x28
   140032663:	ret    
   140032664:	int3   
   140032665:	int3   
   140032666:	int3   
   140032667:	int3   
   140032668:	int3   
   140032669:	int3   
   14003266a:	int3   
   14003266b:	int3   
   14003266c:	int3   
   14003266d:	int3   
   14003266e:	int3   
   14003266f:	int3   
   140032670:	mov    QWORD PTR [rsp+0x18],r8
   140032675:	mov    QWORD PTR [rsp+0x10],rdx
   14003267a:	mov    QWORD PTR [rsp+0x8],rcx
   14003267f:	push   rsi
   140032680:	push   rdi
   140032681:	sub    rsp,0x198
   140032688:	mov    QWORD PTR [rsp+0x180],0xfffffffffffffffe
   140032694:	mov    rcx,QWORD PTR [rsp+0x1b0]
   14003269c:	call   0x1400321d0
   1400326a1:	lea    rdx,[rip+0xc0bc]        # 0x14003e764
   1400326a8:	mov    rcx,QWORD PTR [rsp+0x1c0]
   1400326b0:	call   0x140011a40
   1400326b5:	mov    rcx,QWORD PTR [rsp+0x1b8]
   1400326bd:	call   0x140003b90
   1400326c2:	mov    QWORD PTR [rsp+0x30],0x0
   1400326cb:	mov    DWORD PTR [rsp+0x28],0x80
   1400326d3:	mov    DWORD PTR [rsp+0x20],0x3
   1400326db:	xor    r9d,r9d
   1400326de:	xor    r8d,r8d
   1400326e1:	mov    edx,0x80000000
   1400326e6:	mov    rcx,rax
   1400326e9:	call   QWORD PTR [rip+0x7a79]        # 0x14003a168
   1400326ef:	mov    QWORD PTR [rsp+0xc0],rax
   1400326f7:	lea    rdx,[rsp+0xc0]
   1400326ff:	lea    rcx,[rsp+0x90]
   140032707:	call   0x140012180
   14003270c:	nop
   14003270d:	lea    rcx,[rsp+0x90]
   140032715:	call   0x1400121d0
   14003271a:	movzx  eax,al
   14003271d:	test   eax,eax
   14003271f:	je     0x140032773
   140032721:	mov    rcx,QWORD PTR [rsp+0x1b0]
   140032729:	add    rcx,0x38
   14003272d:	lea    rdx,[rip+0xc034]        # 0x14003e768
   140032734:	call   0x140011a40
   140032739:	mov    rcx,QWORD PTR [rsp+0x1b0]
   140032741:	add    rcx,0x38
   140032745:	mov    rdx,QWORD PTR [rsp+0x1b8]
   14003274d:	call   0x140003ab0
   140032752:	mov    BYTE PTR [rsp+0xc8],0x0
   14003275a:	lea    rcx,[rsp+0x90]
   140032762:	call   0x1400121a0
   140032767:	mov    al,BYTE PTR [rsp+0xc8]
   14003276e:	jmp    0x140032d15
   140032773:	mov    r8d,0x34
   140032779:	xor    edx,edx
   14003277b:	lea    rcx,[rsp+0x50]
   140032780:	call   0x14001c730
   140032785:	lea    rcx,[rsp+0x90]
   14003278d:	call   0x140012200
   140032792:	lea    rdx,[rsp+0x50]
   140032797:	mov    rcx,rax
   14003279a:	call   QWORD PTR [rip+0x7950]        # 0x14003a0f0
   1400327a0:	test   eax,eax
   1400327a2:	jne    0x1400327f6
   1400327a4:	mov    rcx,QWORD PTR [rsp+0x1b0]
   1400327ac:	add    rcx,0x38
   1400327b0:	lea    rdx,[rip+0xbfe9]        # 0x14003e7a0
   1400327b7:	call   0x140011a40
   1400327bc:	mov    rcx,QWORD PTR [rsp+0x1b0]
   1400327c4:	add    rcx,0x38
   1400327c8:	mov    rdx,QWORD PTR [rsp+0x1b8]
   1400327d0:	call   0x140003ab0
   1400327d5:	mov    BYTE PTR [rsp+0xc9],0x0
   1400327dd:	lea    rcx,[rsp+0x90]
   1400327e5:	call   0x1400121a0
   1400327ea:	mov    al,BYTE PTR [rsp+0xc9]
   1400327f1:	jmp    0x140032d15
   1400327f6:	cmp    DWORD PTR [rsp+0x70],0x0
   1400327fb:	je     0x140032869
   1400327fd:	mov    rcx,QWORD PTR [rsp+0x1b0]
   140032805:	add    rcx,0x38
   140032809:	lea    rdx,[rip+0xbfd8]        # 0x14003e7e8
   140032810:	call   0x140011a40
   140032815:	mov    rcx,QWORD PTR [rsp+0x1b0]
   14003281d:	add    rcx,0x38
   140032821:	mov    rdx,QWORD PTR [rsp+0x1b8]
   140032829:	call   0x140003ab0
   14003282e:	mov    rcx,QWORD PTR [rsp+0x1b0]
   140032836:	add    rcx,0x38
   14003283a:	lea    rdx,[rip+0xbfb7]        # 0x14003e7f8
   140032841:	call   0x140005db0
   140032846:	mov    BYTE PTR [rsp+0xca],0x0
   14003284e:	lea    rcx,[rsp+0x90]
   140032856:	call   0x1400121a0
   14003285b:	mov    al,BYTE PTR [rsp+0xca]
   140032862:	jmp    0x140032d15
   140032867:	jmp    0x140032891
   140032869:	cmp    DWORD PTR [rsp+0x74],0x0
   14003286e:	jne    0x140032891
   140032870:	mov    BYTE PTR [rsp+0xcb],0x1
   140032878:	lea    rcx,[rsp+0x90]
   140032880:	call   0x1400121a0
   140032885:	mov    al,BYTE PTR [rsp+0xcb]
   14003288c:	jmp    0x140032d15
   140032891:	mov    eax,DWORD PTR [rsp+0x74]
   140032895:	mov    QWORD PTR [rsp+0xa8],rax
   14003289d:	lea    rcx,[rsp+0x90]
   1400328a5:	call   0x140012200
   1400328aa:	mov    rcx,rax
   1400328ad:	mov    QWORD PTR [rsp+0x28],0x0
   1400328b6:	mov    eax,DWORD PTR [rsp+0xa8]
   1400328bd:	mov    DWORD PTR [rsp+0x20],eax
   1400328c1:	xor    r9d,r9d
   1400328c4:	mov    r8d,0x8
   1400328ca:	xor    edx,edx
   1400328cc:	call   QWORD PTR [rip+0x7786]        # 0x14003a058
   1400328d2:	mov    QWORD PTR [rsp+0xd0],rax
   1400328da:	lea    rdx,[rsp+0xd0]
   1400328e2:	lea    rcx,[rsp+0x88]
   1400328ea:	call   0x140012180
   1400328ef:	nop
   1400328f0:	lea    rcx,[rsp+0x88]
   1400328f8:	call   0x140012240
   1400328fd:	movzx  eax,al
   140032900:	test   eax,eax
   140032902:	je     0x140032964
   140032904:	mov    rcx,QWORD PTR [rsp+0x1b0]
   14003290c:	add    rcx,0x38
   140032910:	lea    rdx,[rip+0xbf39]        # 0x14003e850
   140032917:	call   0x140011a40
   14003291c:	mov    rcx,QWORD PTR [rsp+0x1b0]
   140032924:	add    rcx,0x38
   140032928:	mov    rdx,QWORD PTR [rsp+0x1b8]
   140032930:	call   0x140003ab0
   140032935:	mov    BYTE PTR [rsp+0xd8],0x0
   14003293d:	lea    rcx,[rsp+0x88]
   140032945:	call   0x140012210
   14003294a:	nop
   14003294b:	lea    rcx,[rsp+0x90]
   140032953:	call   0x1400121a0
   140032958:	mov    al,BYTE PTR [rsp+0xd8]
   14003295f:	jmp    0x140032d15
   140032964:	lea    rcx,[rsp+0x88]
   14003296c:	call   0x140012200
   140032971:	mov    QWORD PTR [rsp+0x20],0x0
   14003297a:	xor    r9d,r9d
   14003297d:	xor    r8d,r8d
   140032980:	mov    edx,0x1
   140032985:	mov    rcx,rax
   140032988:	call   QWORD PTR [rip+0x76d2]        # 0x14003a060
   14003298e:	mov    QWORD PTR [rsp+0x40],rax
   140032993:	cmp    QWORD PTR [rsp+0x40],0x0
   140032999:	jne    0x1400329fb
   14003299b:	mov    rcx,QWORD PTR [rsp+0x1b0]
   1400329a3:	add    rcx,0x38
   1400329a7:	lea    rdx,[rip+0xbe6a]        # 0x14003e818
   1400329ae:	call   0x140011a40
   1400329b3:	mov    rcx,QWORD PTR [rsp+0x1b0]
   1400329bb:	add    rcx,0x38
   1400329bf:	mov    rdx,QWORD PTR [rsp+0x1b8]
   1400329c7:	call   0x140003ab0
   1400329cc:	mov    BYTE PTR [rsp+0xd9],0x0
   1400329d4:	lea    rcx,[rsp+0x88]
   1400329dc:	call   0x140012210
   1400329e1:	nop
   1400329e2:	lea    rcx,[rsp+0x90]
   1400329ea:	call   0x1400121a0
   1400329ef:	mov    al,BYTE PTR [rsp+0xd9]
   1400329f6:	jmp    0x140032d15
   1400329fb:	mov    rdx,QWORD PTR [rsp+0x40]
   140032a00:	lea    rcx,[rsp+0x98]
   140032a08:	call   0x140031f40
   140032a0d:	nop
   140032a0e:	mov    rax,QWORD PTR [rsp+0x40]
   140032a13:	mov    QWORD PTR [rsp+0x48],rax
   140032a18:	mov    BYTE PTR [rsp+0xa0],0x0
   140032a20:	cmp    QWORD PTR [rsp+0xa8],0x2
   140032a29:	jbe    0x140032b02
   140032a2f:	mov    rax,QWORD PTR [rsp+0x40]
   140032a34:	movzx  eax,WORD PTR [rax]
   140032a37:	mov    WORD PTR [rsp+0xb0],ax
   140032a3f:	movzx  eax,WORD PTR [rsp+0xb0]
   140032a47:	cmp    eax,0xfeff
   140032a4c:	jne    0x140032a69
   140032a4e:	mov    rax,QWORD PTR [rsp+0x40]
   140032a53:	add    rax,0x2
   140032a57:	mov    QWORD PTR [rsp+0x48],rax
   140032a5c:	mov    BYTE PTR [rsp+0xa0],0x1
   140032a64:	jmp    0x140032b02
   140032a69:	movzx  eax,WORD PTR [rsp+0xb0]
   140032a71:	cmp    eax,0xfffe
   140032a76:	jne    0x140032b02
   140032a7c:	mov    rcx,QWORD PTR [rsp+0x1b0]
   140032a84:	add    rcx,0x38
   140032a88:	lea    rdx,[rip+0xbe11]        # 0x14003e8a0
   140032a8f:	call   0x140011a40
   140032a94:	mov    rcx,QWORD PTR [rsp+0x1b0]
   140032a9c:	add    rcx,0x38
   140032aa0:	mov    rdx,QWORD PTR [rsp+0x1b8]
   140032aa8:	call   0x140003ab0
   140032aad:	mov    rcx,QWORD PTR [rsp+0x1b0]
   140032ab5:	add    rcx,0x38
   140032ab9:	lea    rdx,[rip+0xbdf0]        # 0x14003e8b0
   140032ac0:	call   0x140005db0
   140032ac5:	mov    BYTE PTR [rsp+0xda],0x0
   140032acd:	lea    rcx,[rsp+0x98]
   140032ad5:	call   0x140031f10
   140032ada:	nop
   140032adb:	lea    rcx,[rsp+0x88]
   140032ae3:	call   0x140012210
   140032ae8:	nop
   140032ae9:	lea    rcx,[rsp+0x90]
   140032af1:	call   0x1400121a0
   140032af6:	mov    al,BYTE PTR [rsp+0xda]
   140032afd:	jmp    0x140032d15
   140032b02:	movzx  eax,BYTE PTR [rsp+0xa0]
   140032b0a:	test   eax,eax
   140032b0c:	je     0x140032b43
   140032b0e:	xor    edx,edx
   140032b10:	mov    rax,QWORD PTR [rsp+0xa8]
   140032b18:	mov    ecx,0x2
   140032b1d:	div    rcx
   140032b20:	mov    r8,rax
   140032b23:	sub    r8,0x1
   140032b27:	mov    r9,QWORD PTR [rsp+0x1c0]
   140032b2f:	mov    rdx,QWORD PTR [rsp+0x48]
   140032b34:	mov    rcx,QWORD PTR [rsp+0x1b0]
   140032b3c:	call   0x140013290
   140032b41:	jmp    0x140032b66
   140032b43:	mov    r9,QWORD PTR [rsp+0x1c0]
   140032b4b:	mov    r8,QWORD PTR [rsp+0xa8]
   140032b53:	mov    rdx,QWORD PTR [rsp+0x48]
   140032b58:	mov    rcx,QWORD PTR [rsp+0x1b0]
   140032b60:	call   0x1400117a0
   140032b65:	nop
   140032b66:	jmp    0x140032b9d
   140032b68:	lea    rcx,[rsp+0x98]
   140032b70:	call   0x140031f10
   140032b75:	nop
   140032b76:	lea    rcx,[rsp+0x88]
   140032b7e:	call   0x140012210
   140032b83:	nop
   140032b84:	lea    rcx,[rsp+0x90]
   140032b8c:	call   0x1400121a0
   140032b91:	mov    al,BYTE PTR [rsp+0xdb]
   140032b98:	jmp    0x140032d15
   140032b9d:	mov    BYTE PTR [rsp+0xdc],0x20
   140032ba5:	mov    BYTE PTR [rsp+0xdd],0xd
   140032bad:	lea    rdx,[rsp+0xe8]
   140032bb5:	mov    rcx,QWORD PTR [rsp+0x1c0]
   140032bbd:	call   0x140011ab0
   140032bc2:	lea    rdi,[rsp+0x150]
   140032bca:	mov    rsi,rax
   140032bcd:	mov    ecx,0x10
   140032bd2:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032bd4:	lea    rdx,[rsp+0xf8]
   140032bdc:	mov    rcx,QWORD PTR [rsp+0x1c0]
   140032be4:	call   0x140006040
   140032be9:	lea    rdi,[rsp+0x140]
   140032bf1:	mov    rsi,rax
   140032bf4:	mov    ecx,0x10
   140032bf9:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032bfb:	lea    r8,[rsp+0xdd]
   140032c03:	lea    rdx,[rsp+0xde]
   140032c0b:	lea    rcx,[rsp+0xe0]
   140032c13:	call   0x1400132d0
   140032c18:	lea    r9,[rsp+0xdc]
   140032c20:	mov    r8d,DWORD PTR [rax]
   140032c23:	lea    rdx,[rsp+0x150]
   140032c2b:	lea    rcx,[rsp+0x140]
   140032c33:	call   0x140013310
   140032c38:	mov    eax,0x20
   140032c3d:	mov    WORD PTR [rsp+0x108],ax
   140032c45:	mov    eax,0xa
   140032c4a:	mov    WORD PTR [rsp+0x10a],ax
   140032c52:	lea    rdx,[rsp+0x118]
   140032c5a:	mov    rcx,QWORD PTR [rsp+0x1c0]
   140032c62:	call   0x140011ab0
   140032c67:	lea    rdi,[rsp+0x170]
   140032c6f:	mov    rsi,rax
   140032c72:	mov    ecx,0x10
   140032c77:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032c79:	lea    rdx,[rsp+0x128]
   140032c81:	mov    rcx,QWORD PTR [rsp+0x1c0]
   140032c89:	call   0x140006040
   140032c8e:	lea    rdi,[rsp+0x160]
   140032c96:	mov    rsi,rax
   140032c99:	mov    ecx,0x10
   140032c9e:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032ca0:	lea    r8,[rsp+0x10a]
   140032ca8:	lea    rdx,[rsp+0x10c]
   140032cb0:	lea    rcx,[rsp+0x10e]
   140032cb8:	call   0x140013360
   140032cbd:	lea    r9,[rsp+0x108]
   140032cc5:	mov    r8d,DWORD PTR [rax]
   140032cc8:	lea    rdx,[rsp+0x170]
   140032cd0:	lea    rcx,[rsp+0x160]
   140032cd8:	call   0x1400133a0
   140032cdd:	mov    BYTE PTR [rsp+0x138],0x1
   140032ce5:	lea    rcx,[rsp+0x98]
   140032ced:	call   0x140031f10
   140032cf2:	nop
   140032cf3:	lea    rcx,[rsp+0x88]
   140032cfb:	call   0x140012210
   140032d00:	nop
   140032d01:	lea    rcx,[rsp+0x90]
   140032d09:	call   0x1400121a0
   140032d0e:	mov    al,BYTE PTR [rsp+0x138]
   140032d15:	add    rsp,0x198
   140032d1c:	pop    rdi
   140032d1d:	pop    rsi
   140032d1e:	ret    
   140032d1f:	int3   
   140032d20:	int3   
   140032d21:	int3   
   140032d22:	int3   
   140032d23:	int3   
   140032d24:	int3   
   140032d25:	int3   
   140032d26:	int3   
   140032d27:	int3   
   140032d28:	int3   
   140032d29:	int3   
   140032d2a:	int3   
   140032d2b:	int3   
   140032d2c:	int3   
   140032d2d:	int3   
   140032d2e:	int3   
   140032d2f:	int3   
   140032d30:	mov    QWORD PTR [rsp+0x10],rdx
   140032d35:	mov    QWORD PTR [rsp+0x8],rcx
   140032d3a:	sub    rsp,0x4d8
   140032d41:	mov    QWORD PTR [rsp+0x4b0],0xfffffffffffffffe
   140032d4d:	mov    rax,QWORD PTR [rip+0x1670c]        # 0x140049460
   140032d54:	xor    rax,rsp
   140032d57:	mov    QWORD PTR [rsp+0x4c0],rax
   140032d5f:	mov    rcx,QWORD PTR [rsp+0x4e8]
   140032d67:	call   0x140003b90
   140032d6c:	mov    rcx,rax
   140032d6f:	call   QWORD PTR [rip+0x741b]        # 0x14003a190
   140032d75:	mov    DWORD PTR [rsp+0x49c],eax
   140032d7c:	cmp    DWORD PTR [rsp+0x49c],0xffffffff
   140032d84:	je     0x140032da1
   140032d86:	mov    eax,DWORD PTR [rsp+0x49c]
   140032d8d:	and    eax,0x10
   140032d90:	test   eax,eax
   140032d92:	jne    0x140032da1
   140032d94:	mov    DWORD PTR [rsp+0x4b8],0x1
   140032d9f:	jmp    0x140032dac
   140032da1:	mov    DWORD PTR [rsp+0x4b8],0x0
   140032dac:	movzx  eax,BYTE PTR [rsp+0x4b8]
   140032db4:	mov    BYTE PTR [rsp+0x498],al
   140032dbb:	movzx  eax,BYTE PTR [rsp+0x498]
   140032dc3:	test   eax,eax
   140032dc5:	jne    0x140032e17
   140032dc7:	mov    rcx,QWORD PTR [rsp+0x4e0]
   140032dcf:	add    rcx,0x38
   140032dd3:	lea    rdx,[rip+0xb88e]        # 0x14003e668
   140032dda:	call   0x140011a40
   140032ddf:	mov    rcx,QWORD PTR [rsp+0x4e0]
   140032de7:	add    rcx,0x38
   140032deb:	lea    rdx,[rip+0xb87e]        # 0x14003e670
   140032df2:	call   0x140005db0
   140032df7:	mov    rcx,QWORD PTR [rsp+0x4e0]
   140032dff:	add    rcx,0x38
   140032e03:	mov    rdx,QWORD PTR [rsp+0x4e8]
   140032e0b:	call   0x140003ab0
   140032e10:	xor    al,al
   140032e12:	jmp    0x140032f2d
   140032e17:	mov    QWORD PTR [rsp+0x4a0],0x0
   140032e23:	mov    rcx,QWORD PTR [rsp+0x4e8]
   140032e2b:	call   0x140003b90
   140032e30:	lea    r9,[rsp+0x4a0]
   140032e38:	lea    r8,[rsp+0x50]
   140032e3d:	mov    edx,0x104
   140032e42:	mov    rcx,rax
   140032e45:	call   QWORD PTR [rip+0x733d]        # 0x14003a188
   140032e4b:	lea    rdx,[rsp+0x50]
   140032e50:	lea    rcx,[rsp+0x470]
   140032e58:	call   0x140003a30
   140032e5d:	nop
   140032e5e:	xor    ecx,ecx
   140032e60:	mov    rax,QWORD PTR [rsp+0x4a0]
   140032e68:	mov    WORD PTR [rax],cx
   140032e6b:	lea    rdx,[rsp+0x50]
   140032e70:	lea    rcx,[rsp+0x260]
   140032e78:	call   0x140031fe0
   140032e7d:	nop
   140032e7e:	lea    rcx,[rsp+0x28]
   140032e83:	call   0x140005c70
   140032e88:	nop
   140032e89:	lea    r8,[rsp+0x28]
   140032e8e:	lea    rdx,[rsp+0x470]
   140032e96:	mov    rcx,QWORD PTR [rsp+0x4e0]
   140032e9e:	call   0x140032670
   140032ea3:	movzx  eax,al
   140032ea6:	test   eax,eax
   140032ea8:	jne    0x140032ee1
   140032eaa:	mov    BYTE PTR [rsp+0x4a8],0x0
   140032eb2:	lea    rcx,[rsp+0x28]
   140032eb7:	call   0x140003a90
   140032ebc:	nop
   140032ebd:	lea    rcx,[rsp+0x260]
   140032ec5:	call   0x140031fc0
   140032eca:	nop
   140032ecb:	lea    rcx,[rsp+0x470]
   140032ed3:	call   0x140003a90
   140032ed8:	mov    al,BYTE PTR [rsp+0x4a8]
   140032edf:	jmp    0x140032f2d
   140032ee1:	xor    r9d,r9d
   140032ee4:	xor    r8d,r8d
   140032ee7:	lea    rdx,[rsp+0x28]
   140032eec:	mov    rcx,QWORD PTR [rsp+0x4e0]
   140032ef4:	call   0x140033a10
   140032ef9:	mov    BYTE PTR [rsp+0x4a9],al
   140032f00:	lea    rcx,[rsp+0x28]
   140032f05:	call   0x140003a90
   140032f0a:	nop
   140032f0b:	lea    rcx,[rsp+0x260]
   140032f13:	call   0x140031fc0
   140032f18:	nop
   140032f19:	lea    rcx,[rsp+0x470]
   140032f21:	call   0x140003a90
   140032f26:	mov    al,BYTE PTR [rsp+0x4a9]
   140032f2d:	mov    rcx,QWORD PTR [rsp+0x4c0]
   140032f35:	xor    rcx,rsp
   140032f38:	call   0x14001c500
   140032f3d:	add    rsp,0x4d8
   140032f44:	ret    
   140032f45:	int3   
   140032f46:	int3   
   140032f47:	int3   
   140032f48:	int3   
   140032f49:	int3   
   140032f4a:	int3   
   140032f4b:	int3   
   140032f4c:	int3   
   140032f4d:	int3   
   140032f4e:	int3   
   140032f4f:	int3   
   140032f50:	mov    QWORD PTR [rsp+0x10],rdx
   140032f55:	mov    QWORD PTR [rsp+0x8],rcx
   140032f5a:	sub    rsp,0x28
   140032f5e:	mov    rcx,QWORD PTR [rsp+0x30]
   140032f63:	add    rcx,0x10
   140032f67:	mov    rdx,QWORD PTR [rsp+0x38]
   140032f6c:	call   0x140006430
   140032f71:	add    rsp,0x28
   140032f75:	ret    
   140032f76:	int3   
   140032f77:	int3   
   140032f78:	int3   
   140032f79:	int3   
   140032f7a:	int3   
   140032f7b:	int3   
   140032f7c:	int3   
   140032f7d:	int3   
   140032f7e:	int3   
   140032f7f:	int3   
   140032f80:	mov    QWORD PTR [rsp+0x18],r8
   140032f85:	mov    QWORD PTR [rsp+0x10],rdx
   140032f8a:	mov    QWORD PTR [rsp+0x8],rcx
   140032f8f:	sub    rsp,0x38
   140032f93:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140032f9c:	mov    rcx,QWORD PTR [rsp+0x40]
   140032fa1:	lea    rax,[rip+0xc670]        # 0x14003f618
   140032fa8:	mov    QWORD PTR [rcx],rax
   140032fab:	mov    rax,QWORD PTR [rsp+0x40]
   140032fb0:	movzx  ecx,BYTE PTR [rax+0x8]
   140032fb4:	and    cl,0xfe
   140032fb7:	mov    rax,QWORD PTR [rsp+0x40]
   140032fbc:	mov    BYTE PTR [rax+0x8],cl
   140032fbf:	mov    rax,QWORD PTR [rsp+0x40]
   140032fc4:	movzx  ecx,BYTE PTR [rax+0x8]
   140032fc8:	and    cl,0xfd
   140032fcb:	mov    rax,QWORD PTR [rsp+0x40]
   140032fd0:	mov    BYTE PTR [rax+0x8],cl
   140032fd3:	mov    rcx,QWORD PTR [rsp+0x40]
   140032fd8:	add    rcx,0x10
   140032fdc:	call   0x1400063b0
   140032fe1:	nop
   140032fe2:	mov    rcx,QWORD PTR [rsp+0x40]
   140032fe7:	add    rcx,0x40
   140032feb:	mov    rdx,QWORD PTR [rsp+0x50]
   140032ff0:	call   0x140005d30
   140032ff5:	nop
   140032ff6:	mov    rax,QWORD PTR [rsp+0x40]
   140032ffb:	mov    BYTE PTR [rax+0x68],0x1
   140032fff:	mov    rdx,QWORD PTR [rsp+0x48]
   140033004:	mov    rcx,QWORD PTR [rsp+0x40]
   140033009:	call   0x140032f50
   14003300e:	nop
   14003300f:	mov    rax,QWORD PTR [rsp+0x40]
   140033014:	add    rsp,0x38
   140033018:	ret    
   140033019:	int3   
   14003301a:	int3   
   14003301b:	int3   
   14003301c:	int3   
   14003301d:	int3   
   14003301e:	int3   
   14003301f:	int3   
   140033020:	mov    BYTE PTR [rsp+0x18],r8b
   140033025:	mov    QWORD PTR [rsp+0x10],rdx
   14003302a:	mov    QWORD PTR [rsp+0x8],rcx
   14003302f:	push   rbx
   140033030:	sub    rsp,0x5b0
   140033037:	mov    QWORD PTR [rsp+0x420],0xfffffffffffffffe
   140033043:	mov    rcx,QWORD PTR [rsp+0x5c0]
   14003304b:	call   0x1400321d0
   140033050:	lea    rdx,[rsp+0x20]
   140033055:	mov    rcx,QWORD PTR [rsp+0x5c8]
   14003305d:	call   0x140003c20
   140033062:	jmp    0x14003306e
   140033064:	lea    rcx,[rsp+0x20]
   140033069:	call   0x140004ed0
   14003306e:	lea    rdx,[rsp+0x50]
   140033073:	mov    rcx,QWORD PTR [rsp+0x5c8]
   14003307b:	call   0x140006690
   140033080:	mov    rdx,rax
   140033083:	lea    rcx,[rsp+0x20]
   140033088:	call   0x140004f40
   14003308d:	movzx  eax,al
   140033090:	test   eax,eax
   140033092:	je     0x140033885
   140033098:	mov    QWORD PTR [rsp+0x38],0x0
   1400330a1:	mov    BYTE PTR [rsp+0x30],0x0
   1400330a6:	lea    rcx,[rsp+0x20]
   1400330ab:	call   0x1400120b0
   1400330b0:	mov    rcx,rax
   1400330b3:	call   0x140003bb0
   1400330b8:	cmp    rax,0x1
   1400330bc:	jbe    0x140033168
   1400330c2:	lea    rcx,[rsp+0x20]
   1400330c7:	call   0x1400120b0
   1400330cc:	xor    edx,edx
   1400330ce:	mov    rcx,rax
   1400330d1:	call   0x140011b50
   1400330d6:	movzx  eax,WORD PTR [rax]
   1400330d9:	cmp    eax,0x2f
   1400330dc:	je     0x1400330fa
   1400330de:	lea    rcx,[rsp+0x20]
   1400330e3:	call   0x1400120b0
   1400330e8:	xor    edx,edx
   1400330ea:	mov    rcx,rax
   1400330ed:	call   0x140011b50
   1400330f2:	movzx  eax,WORD PTR [rax]
   1400330f5:	cmp    eax,0x2d
   1400330f8:	jne    0x140033168
   1400330fa:	lea    rcx,[rsp+0x20]
   1400330ff:	call   0x1400120b0
   140033104:	mov    r9,QWORD PTR [rip+0xc1ed]        # 0x14003f2f8
   14003310b:	mov    r8d,0x1
   140033111:	lea    rdx,[rsp+0x60]
   140033116:	mov    rcx,rax
   140033119:	call   0x140011be0
   14003311e:	mov    QWORD PTR [rsp+0x428],rax
   140033126:	mov    rax,QWORD PTR [rsp+0x428]
   14003312e:	mov    QWORD PTR [rsp+0x430],rax
   140033136:	mov    rcx,QWORD PTR [rsp+0x5c0]
   14003313e:	add    rcx,0x8
   140033142:	mov    rdx,QWORD PTR [rsp+0x430]
   14003314a:	call   0x1400322d0
   14003314f:	mov    QWORD PTR [rsp+0x38],rax
   140033154:	lea    rcx,[rsp+0x60]
   140033159:	call   0x140003a90
   14003315e:	mov    BYTE PTR [rsp+0x30],0x1
   140033163:	jmp    0x14003327e
   140033168:	lea    rcx,[rsp+0x20]
   14003316d:	call   0x1400120b0
   140033172:	mov    rcx,rax
   140033175:	call   0x140003bb0
   14003317a:	cmp    rax,0x1
   14003317e:	jbe    0x140033268
   140033184:	lea    rcx,[rsp+0x20]
   140033189:	call   0x1400120b0
   14003318e:	xor    edx,edx
   140033190:	mov    rcx,rax
   140033193:	call   0x140011b50
   140033198:	movzx  eax,WORD PTR [rax]
   14003319b:	cmp    eax,0x40
   14003319e:	jne    0x140033268
   1400331a4:	mov    rax,QWORD PTR [rsp+0x5c0]
   1400331ac:	movzx  eax,BYTE PTR [rax+0x60]
   1400331b0:	and    al,0x1
   1400331b2:	movzx  eax,al
   1400331b5:	test   eax,eax
   1400331b7:	je     0x140033268
   1400331bd:	lea    rcx,[rsp+0x20]
   1400331c2:	call   0x1400120b0
   1400331c7:	mov    r9,QWORD PTR [rip+0xc12a]        # 0x14003f2f8
   1400331ce:	mov    r8d,0x1
   1400331d4:	lea    rdx,[rsp+0x90]
   1400331dc:	mov    rcx,rax
   1400331df:	call   0x140011be0
   1400331e4:	mov    QWORD PTR [rsp+0x438],rax
   1400331ec:	mov    rax,QWORD PTR [rsp+0x438]
   1400331f4:	mov    QWORD PTR [rsp+0x440],rax
   1400331fc:	mov    rdx,QWORD PTR [rsp+0x440]
   140033204:	mov    rcx,QWORD PTR [rsp+0x5c0]
   14003320c:	call   0x140032d30
   140033211:	movzx  eax,al
   140033214:	test   eax,eax
   140033216:	jne    0x140033225
   140033218:	mov    DWORD PTR [rsp+0x448],0x1
   140033223:	jmp    0x140033230
   140033225:	mov    DWORD PTR [rsp+0x448],0x0
   140033230:	movzx  eax,BYTE PTR [rsp+0x448]
   140033238:	mov    BYTE PTR [rsp+0x88],al
   14003323f:	lea    rcx,[rsp+0x90]
   140033247:	call   0x140003a90
   14003324c:	movzx  r11d,BYTE PTR [rsp+0x88]
   140033255:	test   r11d,r11d
   140033258:	je     0x140033261
   14003325a:	xor    al,al
   14003325c:	jmp    0x1400339f8
   140033261:	jmp    0x140033064
   140033266:	jmp    0x14003327e
   140033268:	mov    rcx,QWORD PTR [rsp+0x5c0]
   140033270:	add    rcx,0x8
   140033274:	call   0x140032120
   140033279:	mov    QWORD PTR [rsp+0x38],rax
   14003327e:	cmp    QWORD PTR [rsp+0x38],0x0
   140033284:	jne    0x140033333
   14003328a:	lea    rcx,[rsp+0x20]
   14003328f:	call   0x140004e70
   140033294:	mov    r8,rax
   140033297:	lea    rdx,[rip+0xb212]        # 0x14003e4b0
   14003329e:	lea    rcx,[rsp+0xb8]
   1400332a6:	call   0x140013200
   1400332ab:	mov    QWORD PTR [rsp+0x450],rax
   1400332b3:	mov    rax,QWORD PTR [rsp+0x450]
   1400332bb:	mov    QWORD PTR [rsp+0x458],rax
   1400332c3:	lea    r8,[rip+0xb1de]        # 0x14003e4a8
   1400332ca:	mov    rdx,QWORD PTR [rsp+0x458]
   1400332d2:	lea    rcx,[rsp+0xe0]
   1400332da:	call   0x14000bfb0
   1400332df:	mov    QWORD PTR [rsp+0x460],rax
   1400332e7:	mov    rax,QWORD PTR [rsp+0x460]
   1400332ef:	mov    QWORD PTR [rsp+0x468],rax
   1400332f7:	mov    rcx,QWORD PTR [rsp+0x5c0]
   1400332ff:	add    rcx,0x38
   140033303:	mov    rdx,QWORD PTR [rsp+0x468]
   14003330b:	call   0x140005d80
   140033310:	nop
   140033311:	lea    rcx,[rsp+0xe0]
   140033319:	call   0x140003a90
   14003331e:	nop
   14003331f:	lea    rcx,[rsp+0xb8]
   140033327:	call   0x140003a90
   14003332c:	xor    al,al
   14003332e:	jmp    0x1400339f8
   140033333:	mov    rax,QWORD PTR [rsp+0x38]
   140033338:	mov    rax,QWORD PTR [rax]
   14003333b:	mov    rcx,QWORD PTR [rsp+0x38]
   140033340:	call   QWORD PTR [rax+0x10]
   140033343:	movzx  eax,al
   140033346:	test   eax,eax
   140033348:	je     0x140033783
   14003334e:	movzx  eax,BYTE PTR [rsp+0x30]
   140033353:	test   eax,eax
   140033355:	je     0x14003346f
   14003335b:	lea    rdx,[rsp+0x108]
   140033363:	mov    rcx,QWORD PTR [rsp+0x5c8]
   14003336b:	call   0x140006690
   140033370:	mov    rbx,rax
   140033373:	lea    rcx,[rsp+0x20]
   140033378:	call   0x140004ed0
   14003337d:	mov    rdx,rbx
   140033380:	mov    rcx,rax
   140033383:	call   0x140006880
   140033388:	movzx  eax,al
   14003338b:	test   eax,eax
   14003338d:	je     0x14003346f
   140033393:	lea    rdx,[rsp+0x118]
   14003339b:	mov    rcx,QWORD PTR [rsp+0x38]
   1400333a0:	call   0x140032370
   1400333a5:	mov    QWORD PTR [rsp+0x470],rax
   1400333ad:	mov    rax,QWORD PTR [rsp+0x470]
   1400333b5:	mov    QWORD PTR [rsp+0x478],rax
   1400333bd:	mov    r8,QWORD PTR [rsp+0x478]
   1400333c5:	lea    rdx,[rip+0xb144]        # 0x14003e510
   1400333cc:	lea    rcx,[rsp+0x140]
   1400333d4:	call   0x140013200
   1400333d9:	mov    QWORD PTR [rsp+0x480],rax
   1400333e1:	mov    rax,QWORD PTR [rsp+0x480]
   1400333e9:	mov    QWORD PTR [rsp+0x488],rax
   1400333f1:	lea    r8,[rip+0xb0e8]        # 0x14003e4e0
   1400333f8:	mov    rdx,QWORD PTR [rsp+0x488]
   140033400:	lea    rcx,[rsp+0x168]
   140033408:	call   0x14000bfb0
   14003340d:	mov    QWORD PTR [rsp+0x490],rax
   140033415:	mov    rax,QWORD PTR [rsp+0x490]
   14003341d:	mov    QWORD PTR [rsp+0x498],rax
   140033425:	mov    rcx,QWORD PTR [rsp+0x5c0]
   14003342d:	add    rcx,0x38
   140033431:	mov    rdx,QWORD PTR [rsp+0x498]
   140033439:	call   0x140005d80
   14003343e:	nop
   14003343f:	lea    rcx,[rsp+0x168]
   140033447:	call   0x140003a90
   14003344c:	nop
   14003344d:	lea    rcx,[rsp+0x140]
   140033455:	call   0x140003a90
   14003345a:	nop
   14003345b:	lea    rcx,[rsp+0x118]
   140033463:	call   0x140003a90
   140033468:	xor    al,al
   14003346a:	jmp    0x1400339f8
   14003346f:	mov    rax,QWORD PTR [rsp+0x38]
   140033474:	mov    rax,QWORD PTR [rax]
   140033477:	mov    rcx,QWORD PTR [rsp+0x38]
   14003347c:	call   QWORD PTR [rax+0x18]
   14003347f:	movzx  eax,al
   140033482:	test   eax,eax
   140033484:	jne    0x1400335f0
   14003348a:	lea    rdx,[rsp+0x190]
   140033492:	mov    rcx,QWORD PTR [rsp+0x38]
   140033497:	call   0x140032370
   14003349c:	mov    QWORD PTR [rsp+0x4a0],rax
   1400334a4:	mov    rax,QWORD PTR [rsp+0x4a0]
   1400334ac:	mov    QWORD PTR [rsp+0x4a8],rax
   1400334b4:	mov    r8,QWORD PTR [rsp+0x4a8]
   1400334bc:	lea    rdx,[rip+0xb0bd]        # 0x14003e580
   1400334c3:	lea    rcx,[rsp+0x1b8]
   1400334cb:	call   0x140013200
   1400334d0:	mov    QWORD PTR [rsp+0x4b0],rax
   1400334d8:	mov    rax,QWORD PTR [rsp+0x4b0]
   1400334e0:	mov    QWORD PTR [rsp+0x4b8],rax
   1400334e8:	lea    r8,[rip+0xb041]        # 0x14003e530
   1400334ef:	mov    rdx,QWORD PTR [rsp+0x4b8]
   1400334f7:	lea    rcx,[rsp+0x1e0]
   1400334ff:	call   0x14000bfb0
   140033504:	mov    QWORD PTR [rsp+0x4c0],rax
   14003350c:	mov    rax,QWORD PTR [rsp+0x4c0]
   140033514:	mov    QWORD PTR [rsp+0x4c8],rax
   14003351c:	lea    rcx,[rsp+0x20]
   140033521:	call   0x140004e70
   140033526:	mov    r8,rax
   140033529:	mov    rdx,QWORD PTR [rsp+0x4c8]
   140033531:	lea    rcx,[rsp+0x208]
   140033539:	call   0x140013170
   14003353e:	mov    QWORD PTR [rsp+0x4d0],rax
   140033546:	mov    rax,QWORD PTR [rsp+0x4d0]
   14003354e:	mov    QWORD PTR [rsp+0x4d8],rax
   140033556:	lea    r8,[rip+0xafcb]        # 0x14003e528
   14003355d:	mov    rdx,QWORD PTR [rsp+0x4d8]
   140033565:	lea    rcx,[rsp+0x230]
   14003356d:	call   0x14000bfb0
   140033572:	mov    QWORD PTR [rsp+0x4e0],rax
   14003357a:	mov    rax,QWORD PTR [rsp+0x4e0]
   140033582:	mov    QWORD PTR [rsp+0x4e8],rax
   14003358a:	mov    rcx,QWORD PTR [rsp+0x5c0]
   140033592:	add    rcx,0x38
   140033596:	mov    rdx,QWORD PTR [rsp+0x4e8]
   14003359e:	call   0x140005d80
   1400335a3:	nop
   1400335a4:	lea    rcx,[rsp+0x230]
   1400335ac:	call   0x140003a90
   1400335b1:	nop
   1400335b2:	lea    rcx,[rsp+0x208]
   1400335ba:	call   0x140003a90
   1400335bf:	nop
   1400335c0:	lea    rcx,[rsp+0x1e0]
   1400335c8:	call   0x140003a90
   1400335cd:	nop
   1400335ce:	lea    rcx,[rsp+0x1b8]
   1400335d6:	call   0x140003a90
   1400335db:	nop
   1400335dc:	lea    rcx,[rsp+0x190]
   1400335e4:	call   0x140003a90
   1400335e9:	xor    al,al
   1400335eb:	jmp    0x1400339f8
   1400335f0:	lea    rcx,[rsp+0x20]
   1400335f5:	call   0x140004e70
   1400335fa:	mov    rdx,rax
   1400335fd:	mov    rax,QWORD PTR [rsp+0x38]
   140033602:	mov    rax,QWORD PTR [rax]
   140033605:	mov    rcx,QWORD PTR [rsp+0x38]
   14003360a:	call   QWORD PTR [rax+0x20]
   14003360d:	movzx  eax,al
   140033610:	test   eax,eax
   140033612:	jne    0x14003377e
   140033618:	lea    rdx,[rsp+0x258]
   140033620:	mov    rcx,QWORD PTR [rsp+0x38]
   140033625:	call   0x140032370
   14003362a:	mov    QWORD PTR [rsp+0x4f0],rax
   140033632:	mov    rax,QWORD PTR [rsp+0x4f0]
   14003363a:	mov    QWORD PTR [rsp+0x4f8],rax
   140033642:	mov    r8,QWORD PTR [rsp+0x4f8]
   14003364a:	lea    rdx,[rip+0xaf8f]        # 0x14003e5e0
   140033651:	lea    rcx,[rsp+0x280]
   140033659:	call   0x140013200
   14003365e:	mov    QWORD PTR [rsp+0x500],rax
   140033666:	mov    rax,QWORD PTR [rsp+0x500]
   14003366e:	mov    QWORD PTR [rsp+0x508],rax
   140033676:	lea    r8,[rip+0xaf23]        # 0x14003e5a0
   14003367d:	mov    rdx,QWORD PTR [rsp+0x508]
   140033685:	lea    rcx,[rsp+0x2a8]
   14003368d:	call   0x14000bfb0
   140033692:	mov    QWORD PTR [rsp+0x510],rax
   14003369a:	mov    rax,QWORD PTR [rsp+0x510]
   1400336a2:	mov    QWORD PTR [rsp+0x518],rax
   1400336aa:	lea    rcx,[rsp+0x20]
   1400336af:	call   0x140004e70
   1400336b4:	mov    r8,rax
   1400336b7:	mov    rdx,QWORD PTR [rsp+0x518]
   1400336bf:	lea    rcx,[rsp+0x2d0]
   1400336c7:	call   0x140013170
   1400336cc:	mov    QWORD PTR [rsp+0x520],rax
   1400336d4:	mov    rax,QWORD PTR [rsp+0x520]
   1400336dc:	mov    QWORD PTR [rsp+0x528],rax
   1400336e4:	lea    r8,[rip+0xaead]        # 0x14003e598
   1400336eb:	mov    rdx,QWORD PTR [rsp+0x528]
   1400336f3:	lea    rcx,[rsp+0x2f8]
   1400336fb:	call   0x14000bfb0
   140033700:	mov    QWORD PTR [rsp+0x530],rax
   140033708:	mov    rax,QWORD PTR [rsp+0x530]
   140033710:	mov    QWORD PTR [rsp+0x538],rax
   140033718:	mov    rcx,QWORD PTR [rsp+0x5c0]
   140033720:	add    rcx,0x38
   140033724:	mov    rdx,QWORD PTR [rsp+0x538]
   14003372c:	call   0x140005d80
   140033731:	nop
   140033732:	lea    rcx,[rsp+0x2f8]
   14003373a:	call   0x140003a90
   14003373f:	nop
   140033740:	lea    rcx,[rsp+0x2d0]
   140033748:	call   0x140003a90
   14003374d:	nop
   14003374e:	lea    rcx,[rsp+0x2a8]
   140033756:	call   0x140003a90
   14003375b:	nop
   14003375c:	lea    rcx,[rsp+0x280]
   140033764:	call   0x140003a90
   140033769:	nop
   14003376a:	lea    rcx,[rsp+0x258]
   140033772:	call   0x140003a90
   140033777:	xor    al,al
   140033779:	jmp    0x1400339f8
   14003377e:	jmp    0x140033874
   140033783:	mov    rcx,QWORD PTR [rsp+0x38]
   140033788:	call   0x1400320a0
   14003378d:	movzx  eax,al
   140033790:	test   eax,eax
   140033792:	je     0x140033874
   140033798:	lea    rdx,[rsp+0x320]
   1400337a0:	mov    rcx,QWORD PTR [rsp+0x38]
   1400337a5:	call   0x140032370
   1400337aa:	mov    QWORD PTR [rsp+0x540],rax
   1400337b2:	mov    rax,QWORD PTR [rsp+0x540]
   1400337ba:	mov    QWORD PTR [rsp+0x548],rax
   1400337c2:	mov    r8,QWORD PTR [rsp+0x548]
   1400337ca:	lea    rdx,[rip+0xae4f]        # 0x14003e620
   1400337d1:	lea    rcx,[rsp+0x348]
   1400337d9:	call   0x140013200
   1400337de:	mov    QWORD PTR [rsp+0x550],rax
   1400337e6:	mov    rax,QWORD PTR [rsp+0x550]
   1400337ee:	mov    QWORD PTR [rsp+0x558],rax
   1400337f6:	lea    r8,[rip+0xadfb]        # 0x14003e5f8
   1400337fd:	mov    rdx,QWORD PTR [rsp+0x558]
   140033805:	lea    rcx,[rsp+0x370]
   14003380d:	call   0x14000bfb0
   140033812:	mov    QWORD PTR [rsp+0x560],rax
   14003381a:	mov    rax,QWORD PTR [rsp+0x560]
   140033822:	mov    QWORD PTR [rsp+0x568],rax
   14003382a:	mov    rcx,QWORD PTR [rsp+0x5c0]
   140033832:	add    rcx,0x38
   140033836:	mov    rdx,QWORD PTR [rsp+0x568]
   14003383e:	call   0x140005d80
   140033843:	nop
   140033844:	lea    rcx,[rsp+0x370]
   14003384c:	call   0x140003a90
   140033851:	nop
   140033852:	lea    rcx,[rsp+0x348]
   14003385a:	call   0x140003a90
   14003385f:	nop
   140033860:	lea    rcx,[rsp+0x320]
   140033868:	call   0x140003a90
   14003386d:	xor    al,al
   14003386f:	jmp    0x1400339f8
   140033874:	mov    dl,0x1
   140033876:	mov    rcx,QWORD PTR [rsp+0x38]
   14003387b:	call   0x140032070
   140033880:	jmp    0x140033064
   140033885:	mov    rcx,QWORD PTR [rsp+0x5c0]
   14003388d:	add    rcx,0x8
   140033891:	lea    rdx,[rsp+0x40]
   140033896:	call   0x140009d20
   14003389b:	jmp    0x1400338a7
   14003389d:	lea    rcx,[rsp+0x40]
   1400338a2:	call   0x140012160
   1400338a7:	mov    rcx,QWORD PTR [rsp+0x5c0]
   1400338af:	add    rcx,0x8
   1400338b3:	lea    rdx,[rsp+0x398]
   1400338bb:	call   0x140011cf0
   1400338c0:	mov    rdx,rax
   1400338c3:	lea    rcx,[rsp+0x40]
   1400338c8:	call   0x140004f40
   1400338cd:	movzx  eax,al
   1400338d0:	test   eax,eax
   1400338d2:	je     0x1400339f6
   1400338d8:	lea    rcx,[rsp+0x40]
   1400338dd:	call   0x140012140
   1400338e2:	mov    rax,QWORD PTR [rax+0x8]
   1400338e6:	mov    QWORD PTR [rsp+0x570],rax
   1400338ee:	mov    rax,QWORD PTR [rsp+0x570]
   1400338f6:	mov    rax,QWORD PTR [rax]
   1400338f9:	mov    rcx,QWORD PTR [rsp+0x570]
   140033901:	call   QWORD PTR [rax+0x8]
   140033904:	movzx  eax,al
   140033907:	test   eax,eax
   140033909:	jne    0x1400339f1
   14003390f:	lea    rcx,[rsp+0x40]
   140033914:	call   0x140012140
   140033919:	lea    rdx,[rsp+0x3a8]
   140033921:	mov    rcx,QWORD PTR [rax+0x8]
   140033925:	call   0x140032370
   14003392a:	mov    QWORD PTR [rsp+0x578],rax
   140033932:	mov    rax,QWORD PTR [rsp+0x578]
   14003393a:	mov    QWORD PTR [rsp+0x580],rax
   140033942:	mov    r8,QWORD PTR [rsp+0x580]
   14003394a:	lea    rdx,[rip+0xacef]        # 0x14003e640
   140033951:	lea    rcx,[rsp+0x3d0]
   140033959:	call   0x140013200
   14003395e:	mov    QWORD PTR [rsp+0x588],rax
   140033966:	mov    rax,QWORD PTR [rsp+0x588]
   14003396e:	mov    QWORD PTR [rsp+0x590],rax
   140033976:	lea    r8,[rip+0xacbb]        # 0x14003e638
   14003397d:	mov    rdx,QWORD PTR [rsp+0x590]
   140033985:	lea    rcx,[rsp+0x3f8]
   14003398d:	call   0x14000bfb0
   140033992:	mov    QWORD PTR [rsp+0x598],rax
   14003399a:	mov    rax,QWORD PTR [rsp+0x598]
   1400339a2:	mov    QWORD PTR [rsp+0x5a0],rax
   1400339aa:	mov    rcx,QWORD PTR [rsp+0x5c0]
   1400339b2:	add    rcx,0x38
   1400339b6:	mov    rdx,QWORD PTR [rsp+0x5a0]
   1400339be:	call   0x140005d80
   1400339c3:	nop
   1400339c4:	lea    rcx,[rsp+0x3f8]
   1400339cc:	call   0x140003a90
   1400339d1:	nop
   1400339d2:	lea    rcx,[rsp+0x3d0]
   1400339da:	call   0x140003a90
   1400339df:	nop
   1400339e0:	lea    rcx,[rsp+0x3a8]
   1400339e8:	call   0x140003a90
   1400339ed:	xor    al,al
   1400339ef:	jmp    0x1400339f8
   1400339f1:	jmp    0x14003389d
   1400339f6:	mov    al,0x1
   1400339f8:	add    rsp,0x5b0
   1400339ff:	pop    rbx
   140033a00:	ret    
   140033a01:	int3   
   140033a02:	int3   
   140033a03:	int3   
   140033a04:	int3   
   140033a05:	int3   
   140033a06:	int3   
   140033a07:	int3   
   140033a08:	int3   
   140033a09:	int3   
   140033a0a:	int3   
   140033a0b:	int3   
   140033a0c:	int3   
   140033a0d:	int3   
   140033a0e:	int3   
   140033a0f:	int3   
   140033a10:	mov    BYTE PTR [rsp+0x20],r9b
   140033a15:	mov    BYTE PTR [rsp+0x18],r8b
   140033a1a:	mov    QWORD PTR [rsp+0x10],rdx
   140033a1f:	mov    QWORD PTR [rsp+0x8],rcx
   140033a24:	sub    rsp,0xe8
   140033a2b:	mov    QWORD PTR [rsp+0xc0],0xfffffffffffffffe
   140033a37:	mov    rax,QWORD PTR [rip+0x15a22]        # 0x140049460
   140033a3e:	xor    rax,rsp
   140033a41:	mov    QWORD PTR [rsp+0xd0],rax
   140033a49:	lea    rcx,[rsp+0x58]
   140033a4e:	call   0x1400063b0
   140033a53:	nop
   140033a54:	lea    rcx,[rsp+0x30]
   140033a59:	call   0x140005c70
   140033a5e:	nop
   140033a5f:	mov    BYTE PTR [rsp+0x20],0x0
   140033a64:	lea    rdx,[rsp+0x88]
   140033a6c:	mov    rcx,QWORD PTR [rsp+0xf8]
   140033a74:	call   0x140011a70
   140033a79:	jmp    0x140033a88
   140033a7b:	lea    rcx,[rsp+0x88]
   140033a83:	call   0x140011f60
   140033a88:	lea    rdx,[rsp+0x98]
   140033a90:	mov    rcx,QWORD PTR [rsp+0xf8]
   140033a98:	call   0x140011b00
   140033a9d:	mov    rdx,rax
   140033aa0:	lea    rcx,[rsp+0x88]
   140033aa8:	call   0x140012070
   140033aad:	movzx  eax,al
   140033ab0:	test   eax,eax
   140033ab2:	je     0x140033be7
   140033ab8:	lea    rcx,[rsp+0x88]
   140033ac0:	call   0x140011ee0
   140033ac5:	movzx  eax,WORD PTR [rax]
   140033ac8:	cmp    eax,0x22
   140033acb:	jne    0x140033b01
   140033acd:	movzx  eax,BYTE PTR [rsp+0x20]
   140033ad2:	test   eax,eax
   140033ad4:	jne    0x140033ae3
   140033ad6:	mov    DWORD PTR [rsp+0xc8],0x1
   140033ae1:	jmp    0x140033aee
   140033ae3:	mov    DWORD PTR [rsp+0xc8],0x0
   140033aee:	movzx  eax,BYTE PTR [rsp+0xc8]
   140033af6:	mov    BYTE PTR [rsp+0x20],al
   140033afa:	jmp    0x140033a7b
   140033aff:	jmp    0x140033b57
   140033b01:	lea    rcx,[rsp+0x88]
   140033b09:	call   0x140011ee0
   140033b0e:	movzx  eax,WORD PTR [rax]
   140033b11:	cmp    eax,0x5c
   140033b14:	jne    0x140033b57
   140033b16:	movzx  eax,BYTE PTR [rsp+0x20]
   140033b1b:	test   eax,eax
   140033b1d:	je     0x140033b57
   140033b1f:	mov    r8d,0x1
   140033b25:	lea    rdx,[rsp+0xa8]
   140033b2d:	lea    rcx,[rsp+0x88]
   140033b35:	call   0x140011ff0
   140033b3a:	mov    rcx,rax
   140033b3d:	call   0x140011ee0
   140033b42:	movzx  eax,WORD PTR [rax]
   140033b45:	cmp    eax,0x22
   140033b48:	jne    0x140033b57
   140033b4a:	lea    rcx,[rsp+0x88]
   140033b52:	call   0x140011f60
   140033b57:	lea    rcx,[rsp+0x88]
   140033b5f:	call   0x140011ee0
   140033b64:	movzx  ecx,WORD PTR [rax]
   140033b67:	call   0x140031f70
   140033b6c:	movzx  eax,al
   140033b6f:	test   eax,eax
   140033b71:	je     0x140033bc8
   140033b73:	movzx  eax,BYTE PTR [rsp+0x20]
   140033b78:	test   eax,eax
   140033b7a:	jne    0x140033bc8
   140033b7c:	lea    rcx,[rsp+0x30]
   140033b81:	call   0x140003bc0
   140033b86:	movzx  eax,al
   140033b89:	test   eax,eax
   140033b8b:	jne    0x140033bc3
   140033b8d:	movzx  eax,BYTE PTR [rsp+0x108]
   140033b95:	test   eax,eax
   140033b97:	je     0x140033ba3
   140033b99:	mov    BYTE PTR [rsp+0x108],0x0
   140033ba1:	jmp    0x140033bb2
   140033ba3:	lea    rdx,[rsp+0x30]
   140033ba8:	lea    rcx,[rsp+0x58]
   140033bad:	call   0x140006430
   140033bb2:	lea    rdx,[rip+0xa8eb]        # 0x14003e4a4
   140033bb9:	lea    rcx,[rsp+0x30]
   140033bbe:	call   0x140011a40
   140033bc3:	jmp    0x140033a7b
   140033bc8:	lea    rcx,[rsp+0x88]
   140033bd0:	call   0x140011ee0
   140033bd5:	movzx  edx,WORD PTR [rax]
   140033bd8:	lea    rcx,[rsp+0x30]
   140033bdd:	call   0x14000e270
   140033be2:	jmp    0x140033a7b
   140033be7:	lea    rcx,[rsp+0x30]
   140033bec:	call   0x140003bc0
   140033bf1:	movzx  eax,al
   140033bf4:	test   eax,eax
   140033bf6:	jne    0x140033c13
   140033bf8:	movzx  eax,BYTE PTR [rsp+0x108]
   140033c00:	test   eax,eax
   140033c02:	jne    0x140033c13
   140033c04:	lea    rdx,[rsp+0x30]
   140033c09:	lea    rcx,[rsp+0x58]
   140033c0e:	call   0x140006430
   140033c13:	movzx  r8d,BYTE PTR [rsp+0x100]
   140033c1c:	lea    rdx,[rsp+0x58]
   140033c21:	mov    rcx,QWORD PTR [rsp+0xf0]
   140033c29:	call   0x140033020
   140033c2e:	mov    BYTE PTR [rsp+0xb8],al
   140033c35:	lea    rcx,[rsp+0x30]
   140033c3a:	call   0x140003a90
   140033c3f:	nop
   140033c40:	lea    rcx,[rsp+0x58]
   140033c45:	call   0x140003bf0
   140033c4a:	mov    al,BYTE PTR [rsp+0xb8]
   140033c51:	mov    rcx,QWORD PTR [rsp+0xd0]
   140033c59:	xor    rcx,rsp
   140033c5c:	call   0x14001c500
   140033c61:	add    rsp,0xe8
   140033c68:	ret    
   140033c69:	int3   
   140033c6a:	int3   
   140033c6b:	int3   
   140033c6c:	int3   
   140033c6d:	int3   
   140033c6e:	int3   
   140033c6f:	int3   
   140033c70:	mov    QWORD PTR [rsp+0x18],r8
   140033c75:	mov    QWORD PTR [rsp+0x10],rdx
   140033c7a:	mov    QWORD PTR [rsp+0x8],rcx
   140033c7f:	sub    rsp,0x28
   140033c83:	mov    r8,QWORD PTR [rsp+0x40]
   140033c88:	mov    rdx,QWORD PTR [rsp+0x38]
   140033c8d:	mov    rcx,QWORD PTR [rsp+0x30]
   140033c92:	call   0x140032f80
   140033c97:	mov    r11,QWORD PTR [rsp+0x30]
   140033c9c:	lea    rax,[rip+0xb9b5]        # 0x14003f658
   140033ca3:	mov    QWORD PTR [r11],rax
   140033ca6:	mov    rax,QWORD PTR [rsp+0x30]
   140033cab:	add    rsp,0x28
   140033caf:	ret    
   140033cb0:	int3   
   140033cb1:	int3   
   140033cb2:	int3   
   140033cb3:	int3   
   140033cb4:	int3   
   140033cb5:	int3   
   140033cb6:	int3   
   140033cb7:	int3   
   140033cb8:	int3   
   140033cb9:	int3   
   140033cba:	int3   
   140033cbb:	int3   
   140033cbc:	int3   
   140033cbd:	int3   
   140033cbe:	int3   
   140033cbf:	int3   
   140033cc0:	mov    QWORD PTR [rsp+0x20],r9
   140033cc5:	mov    QWORD PTR [rsp+0x18],r8
   140033cca:	mov    QWORD PTR [rsp+0x10],rdx
   140033ccf:	mov    QWORD PTR [rsp+0x8],rcx
   140033cd4:	sub    rsp,0x128
   140033cdb:	mov    QWORD PTR [rsp+0xd8],0xfffffffffffffffe
   140033ce7:	mov    rax,QWORD PTR [rip+0x15772]        # 0x140049460
   140033cee:	xor    rax,rsp
   140033cf1:	mov    QWORD PTR [rsp+0x118],rax
   140033cf9:	mov    DWORD PTR [rsp+0xd0],0x0
   140033d04:	mov    rcx,QWORD PTR [rsp+0x130]
   140033d0c:	add    rcx,0x40
   140033d10:	call   0x140003bc0
   140033d15:	movzx  eax,al
   140033d18:	test   eax,eax
   140033d1a:	je     0x140033d4e
   140033d1c:	lea    rdx,[rip+0xa5a1]        # 0x14003e2c4
   140033d23:	mov    rcx,QWORD PTR [rsp+0x138]
   140033d2b:	call   0x140003a30
   140033d30:	mov    eax,DWORD PTR [rsp+0xd0]
   140033d37:	or     eax,0x1
   140033d3a:	mov    DWORD PTR [rsp+0xd0],eax
   140033d41:	mov    rax,QWORD PTR [rsp+0x138]
   140033d49:	jmp    0x140033f1c
   140033d4e:	mov    rcx,QWORD PTR [rsp+0x140]
   140033d56:	call   0x140003bc0
   140033d5b:	movzx  eax,al
   140033d5e:	test   eax,eax
   140033d60:	jne    0x140033d6f
   140033d62:	mov    DWORD PTR [rsp+0xe0],0x1
   140033d6d:	jmp    0x140033d7a
   140033d6f:	mov    DWORD PTR [rsp+0xe0],0x0
   140033d7a:	movzx  eax,BYTE PTR [rsp+0xe0]
   140033d82:	mov    BYTE PTR [rsp+0x50],al
   140033d86:	lea    rcx,[rsp+0x28]
   140033d8b:	call   0x140005c70
   140033d90:	nop
   140033d91:	mov    rdx,QWORD PTR [rsp+0x140]
   140033d99:	lea    rcx,[rsp+0x28]
   140033d9e:	call   0x140003ab0
   140033da3:	lea    rdx,[rsp+0x58]
   140033da8:	mov    rcx,QWORD PTR [rsp+0x130]
   140033db0:	call   0x140032370
   140033db5:	mov    QWORD PTR [rsp+0xe8],rax
   140033dbd:	mov    rax,QWORD PTR [rsp+0xe8]
   140033dc5:	mov    QWORD PTR [rsp+0xf0],rax
   140033dcd:	mov    rdx,QWORD PTR [rsp+0xf0]
   140033dd5:	lea    rcx,[rsp+0x28]
   140033dda:	call   0x140003ab0
   140033ddf:	nop
   140033de0:	lea    rcx,[rsp+0x58]
   140033de5:	call   0x140003a90
   140033dea:	movzx  eax,BYTE PTR [rsp+0x50]
   140033def:	test   eax,eax
   140033df1:	je     0x140033ea5
   140033df7:	mov    rcx,QWORD PTR [rsp+0x148]
   140033dff:	call   0x140003bc0
   140033e04:	movzx  eax,al
   140033e07:	test   eax,eax
   140033e09:	jne    0x140033ea5
   140033e0f:	mov    r8,QWORD PTR [rsp+0x148]
   140033e17:	lea    rdx,[rip+0xa5f2]        # 0x14003e410
   140033e1e:	lea    rcx,[rsp+0x80]
   140033e26:	call   0x140013200
   140033e2b:	mov    QWORD PTR [rsp+0xf8],rax
   140033e33:	mov    rax,QWORD PTR [rsp+0xf8]
   140033e3b:	mov    QWORD PTR [rsp+0x100],rax
   140033e43:	lea    r8,[rip+0xa48a]        # 0x14003e2d4
   140033e4a:	mov    rdx,QWORD PTR [rsp+0x100]
   140033e52:	lea    rcx,[rsp+0xa8]
   140033e5a:	call   0x14000bfb0
   140033e5f:	mov    QWORD PTR [rsp+0x108],rax
   140033e67:	mov    rax,QWORD PTR [rsp+0x108]
   140033e6f:	mov    QWORD PTR [rsp+0x110],rax
   140033e77:	mov    rdx,QWORD PTR [rsp+0x110]
   140033e7f:	lea    rcx,[rsp+0x28]
   140033e84:	call   0x140003ab0
   140033e89:	nop
   140033e8a:	lea    rcx,[rsp+0xa8]
   140033e92:	call   0x140003a90
   140033e97:	nop
   140033e98:	lea    rcx,[rsp+0x80]
   140033ea0:	call   0x140003a90
   140033ea5:	lea    rcx,[rsp+0x28]
   140033eaa:	call   0x140003bb0
   140033eaf:	cmp    rax,0x8
   140033eb3:	jae    0x140033ec3
   140033eb5:	mov    dx,0x9
   140033eb9:	lea    rcx,[rsp+0x28]
   140033ebe:	call   0x14000e270
   140033ec3:	mov    dx,0x9
   140033ec7:	lea    rcx,[rsp+0x28]
   140033ecc:	call   0x14000e270
   140033ed1:	mov    rdx,QWORD PTR [rsp+0x130]
   140033ed9:	add    rdx,0x40
   140033edd:	lea    rcx,[rsp+0x28]
   140033ee2:	call   0x140003ab0
   140033ee7:	lea    rdx,[rsp+0x28]
   140033eec:	mov    rcx,QWORD PTR [rsp+0x138]
   140033ef4:	call   0x140005d30
   140033ef9:	mov    eax,DWORD PTR [rsp+0xd0]
   140033f00:	or     eax,0x1
   140033f03:	mov    DWORD PTR [rsp+0xd0],eax
   140033f0a:	lea    rcx,[rsp+0x28]
   140033f0f:	call   0x140003a90
   140033f14:	mov    rax,QWORD PTR [rsp+0x138]
   140033f1c:	mov    rcx,QWORD PTR [rsp+0x118]
   140033f24:	xor    rcx,rsp
   140033f27:	call   0x14001c500
   140033f2c:	add    rsp,0x128
   140033f33:	ret    
   140033f34:	int3   
   140033f35:	int3   
   140033f36:	int3   
   140033f37:	int3   
   140033f38:	int3   
   140033f39:	int3   
   140033f3a:	int3   
   140033f3b:	int3   
   140033f3c:	int3   
   140033f3d:	int3   
   140033f3e:	int3   
   140033f3f:	int3   
   140033f40:	mov    BYTE PTR [rsp+0x20],r9b
   140033f45:	mov    QWORD PTR [rsp+0x18],r8
   140033f4a:	mov    QWORD PTR [rsp+0x10],rdx
   140033f4f:	mov    QWORD PTR [rsp+0x8],rcx
   140033f54:	sub    rsp,0x178
   140033f5b:	mov    QWORD PTR [rsp+0x120],0xfffffffffffffffe
   140033f67:	mov    rax,QWORD PTR [rip+0x154f2]        # 0x140049460
   140033f6e:	xor    rax,rsp
   140033f71:	mov    QWORD PTR [rsp+0x160],rax
   140033f79:	mov    DWORD PTR [rsp+0x118],0x0
   140033f84:	lea    rcx,[rsp+0x28]
   140033f89:	call   0x140005c70
   140033f8e:	nop
   140033f8f:	movzx  eax,BYTE PTR [rsp+0x198]
   140033f97:	test   eax,eax
   140033f99:	je     0x140033fac
   140033f9b:	lea    rdx,[rip+0x9c72]        # 0x14003dc14
   140033fa2:	lea    rcx,[rsp+0x28]
   140033fa7:	call   0x140005db0
   140033fac:	mov    rdx,QWORD PTR [rsp+0x190]
   140033fb4:	lea    rcx,[rsp+0x28]
   140033fb9:	call   0x140003ab0
   140033fbe:	mov    rcx,QWORD PTR [rsp+0x190]
   140033fc6:	call   0x140003bb0
   140033fcb:	test   rax,rax
   140033fce:	jne    0x140033fdd
   140033fd0:	mov    DWORD PTR [rsp+0x128],0x1
   140033fdb:	jmp    0x140033fe8
   140033fdd:	mov    DWORD PTR [rsp+0x128],0x0
   140033fe8:	movzx  eax,BYTE PTR [rsp+0x128]
   140033ff0:	mov    BYTE PTR [rsp+0x50],al
   140033ff4:	movzx  eax,BYTE PTR [rsp+0x50]
   140033ff9:	test   eax,eax
   140033ffb:	je     0x14003401a
   140033ffd:	movzx  eax,BYTE PTR [rsp+0x198]
   140034005:	test   eax,eax
   140034007:	jne    0x14003401a
   140034009:	lea    rdx,[rip+0x9c9c]        # 0x14003dcac
   140034010:	lea    rcx,[rsp+0x28]
   140034015:	call   0x140005db0
   14003401a:	lea    rcx,[rsp+0x58]
   14003401f:	call   0x140005c70
   140034024:	nop
   140034025:	mov    rcx,QWORD PTR [rsp+0x180]
   14003402d:	add    rcx,0x10
   140034031:	lea    rdx,[rsp+0x80]
   140034039:	call   0x140003c20
   14003403e:	jmp    0x14003404d
   140034040:	lea    rcx,[rsp+0x80]
   140034048:	call   0x140004ed0
   14003404d:	mov    rcx,QWORD PTR [rsp+0x180]
   140034055:	add    rcx,0x10
   140034059:	lea    rdx,[rsp+0x90]
   140034061:	call   0x140006690
   140034066:	mov    rdx,rax
   140034069:	lea    rcx,[rsp+0x80]
   140034071:	call   0x140004f40
   140034076:	movzx  eax,al
   140034079:	test   eax,eax
   14003407b:	je     0x1400340ed
   14003407d:	lea    rcx,[rsp+0x80]
   140034085:	call   0x140004e70
   14003408a:	mov    r8,rax
   14003408d:	lea    rdx,[rsp+0x58]
   140034092:	lea    rcx,[rsp+0xa0]
   14003409a:	call   0x140013170
   14003409f:	mov    QWORD PTR [rsp+0x130],rax
   1400340a7:	mov    rax,QWORD PTR [rsp+0x130]
   1400340af:	mov    QWORD PTR [rsp+0x138],rax
   1400340b7:	mov    rdx,QWORD PTR [rsp+0x138]
   1400340bf:	lea    rcx,[rsp+0x28]
   1400340c4:	call   0x140003ab0
   1400340c9:	nop
   1400340ca:	lea    rcx,[rsp+0xa0]
   1400340d2:	call   0x140003a90
   1400340d7:	lea    rdx,[rip+0x9c56]        # 0x14003dd34
   1400340de:	lea    rcx,[rsp+0x58]
   1400340e3:	call   0x140011a40
   1400340e8:	jmp    0x140034040
   1400340ed:	mov    rcx,QWORD PTR [rsp+0x1a0]
   1400340f5:	call   0x140003bc0
   1400340fa:	movzx  eax,al
   1400340fd:	test   eax,eax
   1400340ff:	jne    0x14003419b
   140034105:	mov    r8,QWORD PTR [rsp+0x1a0]
   14003410d:	lea    rdx,[rip+0xa2f4]        # 0x14003e408
   140034114:	lea    rcx,[rsp+0xc8]
   14003411c:	call   0x140013200
   140034121:	mov    QWORD PTR [rsp+0x140],rax
   140034129:	mov    rax,QWORD PTR [rsp+0x140]
   140034131:	mov    QWORD PTR [rsp+0x148],rax
   140034139:	lea    r8,[rip+0x9d24]        # 0x14003de64
   140034140:	mov    rdx,QWORD PTR [rsp+0x148]
   140034148:	lea    rcx,[rsp+0xf0]
   140034150:	call   0x14000bfb0
   140034155:	mov    QWORD PTR [rsp+0x150],rax
   14003415d:	mov    rax,QWORD PTR [rsp+0x150]
   140034165:	mov    QWORD PTR [rsp+0x158],rax
   14003416d:	mov    rdx,QWORD PTR [rsp+0x158]
   140034175:	lea    rcx,[rsp+0x28]
   14003417a:	call   0x140003ab0
   14003417f:	nop
   140034180:	lea    rcx,[rsp+0xf0]
   140034188:	call   0x140003a90
   14003418d:	nop
   14003418e:	lea    rcx,[rsp+0xc8]
   140034196:	call   0x140003a90
   14003419b:	movzx  eax,BYTE PTR [rsp+0x50]
   1400341a0:	test   eax,eax
   1400341a2:	je     0x1400341c1
   1400341a4:	movzx  eax,BYTE PTR [rsp+0x198]
   1400341ac:	test   eax,eax
   1400341ae:	jne    0x1400341c1
   1400341b0:	lea    rdx,[rip+0x9f45]        # 0x14003e0fc
   1400341b7:	lea    rcx,[rsp+0x28]
   1400341bc:	call   0x140005db0
   1400341c1:	movzx  eax,BYTE PTR [rsp+0x198]
   1400341c9:	test   eax,eax
   1400341cb:	je     0x1400341de
   1400341cd:	lea    rdx,[rip+0xa038]        # 0x14003e20c
   1400341d4:	lea    rcx,[rsp+0x28]
   1400341d9:	call   0x140005db0
   1400341de:	lea    rdx,[rsp+0x28]
   1400341e3:	mov    rcx,QWORD PTR [rsp+0x188]
   1400341eb:	call   0x140005d30
   1400341f0:	mov    eax,DWORD PTR [rsp+0x118]
   1400341f7:	or     eax,0x1
   1400341fa:	mov    DWORD PTR [rsp+0x118],eax
   140034201:	lea    rcx,[rsp+0x58]
   140034206:	call   0x140003a90
   14003420b:	nop
   14003420c:	lea    rcx,[rsp+0x28]
   140034211:	call   0x140003a90
   140034216:	mov    rax,QWORD PTR [rsp+0x188]
   14003421e:	mov    rcx,QWORD PTR [rsp+0x160]
   140034226:	xor    rcx,rsp
   140034229:	call   0x14001c500
   14003422e:	add    rsp,0x178
   140034235:	ret    
   140034236:	int3   
   140034237:	int3   
   140034238:	int3   
   140034239:	int3   
   14003423a:	int3   
   14003423b:	int3   
   14003423c:	int3   
   14003423d:	int3   
   14003423e:	int3   
   14003423f:	int3   
   140034240:	mov    BYTE PTR [rsp+0x10],dl
   140034244:	mov    QWORD PTR [rsp+0x8],rcx
   140034249:	sub    rsp,0x148
   140034250:	mov    QWORD PTR [rsp+0x138],0xfffffffffffffffe
   14003425c:	movzx  edx,BYTE PTR [rsp+0x158]
   140034264:	mov    rcx,QWORD PTR [rsp+0x150]
   14003426c:	call   0x1400325d0
   140034271:	nop
   140034272:	mov    rcx,QWORD PTR [rsp+0x150]
   14003427a:	lea    rax,[rip+0xb427]        # 0x14003f6a8
   140034281:	mov    QWORD PTR [rcx],rax
   140034284:	lea    rdx,[rip+0xa6cd]        # 0x14003e958
   14003428b:	lea    rcx,[rsp+0x20]
   140034290:	call   0x140003a30
   140034295:	nop
   140034296:	lea    rdx,[rip+0xa577]        # 0x14003e814
   14003429d:	lea    rcx,[rsp+0x48]
   1400342a2:	call   0x140003a30
   1400342a7:	nop
   1400342a8:	mov    rcx,QWORD PTR [rsp+0x150]
   1400342b0:	add    rcx,0x68
   1400342b4:	lea    r8,[rsp+0x20]
   1400342b9:	lea    rdx,[rsp+0x48]
   1400342be:	call   0x140033c70
   1400342c3:	nop
   1400342c4:	lea    rcx,[rsp+0x48]
   1400342c9:	call   0x140003a90
   1400342ce:	nop
   1400342cf:	lea    rcx,[rsp+0x20]
   1400342d4:	call   0x140003a90
   1400342d9:	lea    rdx,[rip+0xa690]        # 0x14003e970
   1400342e0:	lea    rcx,[rsp+0x70]
   1400342e5:	call   0x140003a30
   1400342ea:	nop
   1400342eb:	lea    rdx,[rip+0xa5ba]        # 0x14003e8ac
   1400342f2:	lea    rcx,[rsp+0x98]
   1400342fa:	call   0x140003a30
   1400342ff:	nop
   140034300:	mov    rcx,QWORD PTR [rsp+0x150]
   140034308:	add    rcx,0xd8
   14003430f:	lea    r8,[rsp+0x70]
   140034314:	lea    rdx,[rsp+0x98]
   14003431c:	call   0x140033c70
   140034321:	nop
   140034322:	lea    rcx,[rsp+0x98]
   14003432a:	call   0x140003a90
   14003432f:	nop
   140034330:	lea    rcx,[rsp+0x70]
   140034335:	call   0x140003a90
   14003433a:	mov    rdx,QWORD PTR [rsp+0x150]
   140034342:	add    rdx,0x68
   140034346:	mov    rcx,QWORD PTR [rsp+0x150]
   14003434e:	call   0x140032590
   140034353:	lea    rdx,[rip+0xa632]        # 0x14003e98c
   14003435a:	lea    rcx,[rsp+0xc0]
   140034362:	call   0x140003a30
   140034367:	nop
   140034368:	mov    rcx,QWORD PTR [rsp+0x150]
   140034370:	add    rcx,0x68
   140034374:	lea    rdx,[rsp+0xc0]
   14003437c:	call   0x140032f50
   140034381:	nop
   140034382:	lea    rcx,[rsp+0xc0]
   14003438a:	call   0x140003a90
   14003438f:	lea    rdx,[rip+0xa5fa]        # 0x14003e990
   140034396:	lea    rcx,[rsp+0xe8]
   14003439e:	call   0x140003a30
   1400343a3:	nop
   1400343a4:	mov    rcx,QWORD PTR [rsp+0x150]
   1400343ac:	add    rcx,0x68
   1400343b0:	lea    rdx,[rsp+0xe8]
   1400343b8:	call   0x140032f50
   1400343bd:	nop
   1400343be:	lea    rcx,[rsp+0xe8]
   1400343c6:	call   0x140003a90
   1400343cb:	mov    rdx,QWORD PTR [rsp+0x150]
   1400343d3:	add    rdx,0xd8
   1400343da:	mov    rcx,QWORD PTR [rsp+0x150]
   1400343e2:	call   0x140032590
   1400343e7:	lea    rdx,[rip+0xa5b2]        # 0x14003e9a0
   1400343ee:	lea    rcx,[rsp+0x110]
   1400343f6:	call   0x140003a30
   1400343fb:	nop
   1400343fc:	mov    rcx,QWORD PTR [rsp+0x150]
   140034404:	add    rcx,0xd8
   14003440b:	lea    rdx,[rsp+0x110]
   140034413:	call   0x140032f50
   140034418:	nop
   140034419:	lea    rcx,[rsp+0x110]
   140034421:	call   0x140003a90
   140034426:	nop
   140034427:	mov    rax,QWORD PTR [rsp+0x150]
   14003442f:	add    rsp,0x148
   140034436:	ret    
   140034437:	int3   
   140034438:	int3   
   140034439:	int3   
   14003443a:	int3   
   14003443b:	int3   
   14003443c:	int3   
   14003443d:	int3   
   14003443e:	int3   
   14003443f:	int3   
   140034440:	mov    QWORD PTR [rsp+0x18],r8
   140034445:	mov    QWORD PTR [rsp+0x10],rdx
   14003444a:	mov    QWORD PTR [rsp+0x8],rcx
   14003444f:	sub    rsp,0x68
   140034453:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14003445c:	mov    DWORD PTR [rsp+0x50],0x0
   140034464:	lea    rdx,[rip+0x9f79]        # 0x14003e3e4
   14003446b:	lea    rcx,[rsp+0x28]
   140034470:	call   0x140003a30
   140034475:	nop
   140034476:	lea    r9,[rsp+0x28]
   14003447b:	mov    r8,QWORD PTR [rsp+0x80]
   140034483:	mov    rdx,QWORD PTR [rsp+0x78]
   140034488:	mov    rcx,QWORD PTR [rsp+0x70]
   14003448d:	call   0x140033cc0
   140034492:	mov    eax,DWORD PTR [rsp+0x50]
   140034496:	or     eax,0x1
   140034499:	mov    DWORD PTR [rsp+0x50],eax
   14003449d:	lea    rcx,[rsp+0x28]
   1400344a2:	call   0x140003a90
   1400344a7:	nop
   1400344a8:	mov    rcx,QWORD PTR [rsp+0x80]
   1400344b0:	call   0x140003a90
   1400344b5:	mov    rax,QWORD PTR [rsp+0x78]
   1400344ba:	add    rsp,0x68
   1400344be:	ret    
   1400344bf:	int3   
   1400344c0:	int3   
   1400344c1:	int3   
   1400344c2:	int3   
   1400344c3:	int3   
   1400344c4:	int3   
   1400344c5:	int3   
   1400344c6:	int3   
   1400344c7:	int3   
   1400344c8:	int3   
   1400344c9:	int3   
   1400344ca:	int3   
   1400344cb:	int3   
   1400344cc:	int3   
   1400344cd:	int3   
   1400344ce:	int3   
   1400344cf:	int3   
   1400344d0:	mov    QWORD PTR [rsp+0x18],r8
   1400344d5:	mov    QWORD PTR [rsp+0x10],rdx
   1400344da:	mov    QWORD PTR [rsp+0x8],rcx
   1400344df:	sub    rsp,0x78
   1400344e3:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   1400344ec:	mov    DWORD PTR [rsp+0x60],0x0
   1400344f4:	lea    rdx,[rip+0x9e39]        # 0x14003e334
   1400344fb:	lea    rcx,[rsp+0x38]
   140034500:	call   0x140003a30
   140034505:	nop
   140034506:	lea    rax,[rsp+0x38]
   14003450b:	mov    QWORD PTR [rsp+0x20],rax
   140034510:	mov    r9b,0x1
   140034513:	mov    r8,QWORD PTR [rsp+0x90]
   14003451b:	mov    rdx,QWORD PTR [rsp+0x88]
   140034523:	mov    rcx,QWORD PTR [rsp+0x80]
   14003452b:	call   0x140033f40
   140034530:	mov    eax,DWORD PTR [rsp+0x60]
   140034534:	or     eax,0x1
   140034537:	mov    DWORD PTR [rsp+0x60],eax
   14003453b:	lea    rcx,[rsp+0x38]
   140034540:	call   0x140003a90
   140034545:	nop
   140034546:	mov    rcx,QWORD PTR [rsp+0x90]
   14003454e:	call   0x140003a90
   140034553:	mov    rax,QWORD PTR [rsp+0x88]
   14003455b:	add    rsp,0x78
   14003455f:	ret    
   140034560:	int3   
   140034561:	int3   
   140034562:	int3   
   140034563:	int3   
   140034564:	int3   
   140034565:	int3   
   140034566:	int3   
   140034567:	int3   
   140034568:	int3   
   140034569:	int3   
   14003456a:	int3   
   14003456b:	int3   
   14003456c:	int3   
   14003456d:	int3   
   14003456e:	int3   
   14003456f:	int3   
   140034570:	mov    QWORD PTR [rsp+0x10],rdx
   140034575:	mov    QWORD PTR [rsp+0x8],rcx
   14003457a:	push   rbx
   14003457b:	sub    rsp,0x50
   14003457f:	call   0x140031de0
   140034584:	movzx  eax,al
   140034587:	test   eax,eax
   140034589:	je     0x1400345b5
   14003458b:	mov    rcx,QWORD PTR [rsp+0x68]
   140034590:	call   0x140003b90
   140034595:	mov    rdx,rax
   140034598:	mov    rcx,QWORD PTR [rip+0x16c61]        # 0x14004b200
   14003459f:	call   0x14000bc00
   1400345a4:	lea    rdx,[rip+0xfffffffffffdd1c5]        # 0x140011770
   1400345ab:	mov    rcx,rax
   1400345ae:	call   0x140011930
   1400345b3:	jmp    0x1400345f9
   1400345b5:	lea    rcx,[rsp+0x20]
   1400345ba:	call   0x1400324e0
   1400345bf:	mov    QWORD PTR [rsp+0x48],rax
   1400345c4:	mov    rcx,QWORD PTR [rsp+0x48]
   1400345c9:	call   0x140003b90
   1400345ce:	mov    rbx,rax
   1400345d1:	mov    rcx,QWORD PTR [rsp+0x68]
   1400345d6:	call   0x140003b90
   1400345db:	mov    r9d,0x10000
   1400345e1:	mov    r8,rbx
   1400345e4:	mov    rdx,rax
   1400345e7:	xor    ecx,ecx
   1400345e9:	call   QWORD PTR [rip+0x5dd1]        # 0x14003a3c0
   1400345ef:	lea    rcx,[rsp+0x20]
   1400345f4:	call   0x140003a90
   1400345f9:	add    rsp,0x50
   1400345fd:	pop    rbx
   1400345fe:	ret    
   1400345ff:	int3   
   140034600:	int3   
   140034601:	int3   
   140034602:	int3   
   140034603:	int3   
   140034604:	int3   
   140034605:	int3   
   140034606:	int3   
   140034607:	int3   
   140034608:	int3   
   140034609:	int3   
   14003460a:	int3   
   14003460b:	int3   
   14003460c:	int3   
   14003460d:	int3   
   14003460e:	int3   
   14003460f:	int3   
   140034610:	mov    QWORD PTR [rsp+0x10],rdx
   140034615:	mov    QWORD PTR [rsp+0x8],rcx
   14003461a:	sub    rsp,0x3b8
   140034621:	mov    QWORD PTR [rsp+0x348],0xfffffffffffffffe
   14003462d:	mov    rax,QWORD PTR [rip+0x14e2c]        # 0x140049460
   140034634:	xor    rax,rsp
   140034637:	mov    QWORD PTR [rsp+0x3a0],rax
   14003463f:	mov    DWORD PTR [rsp+0x340],0x0
   14003464a:	lea    rdx,[rip+0xa047]        # 0x14003e698
   140034651:	lea    rcx,[rsp+0x38]
   140034656:	call   0x140030f50
   14003465b:	nop
   14003465c:	lea    rcx,[rip+0x18c1d]        # 0x14004d280
   140034663:	call   0x140011590
   140034668:	mov    rdx,rax
   14003466b:	lea    rcx,[rsp+0x38]
   140034670:	call   0x140031060
   140034675:	test   eax,eax
   140034677:	jge    0x1400346b5
   140034679:	lea    rdx,[rip+0xa02c]        # 0x14003e6ac
   140034680:	mov    rcx,QWORD PTR [rsp+0x3c8]
   140034688:	call   0x140003a30
   14003468d:	mov    eax,DWORD PTR [rsp+0x340]
   140034694:	or     eax,0x1
   140034697:	mov    DWORD PTR [rsp+0x340],eax
   14003469e:	lea    rcx,[rsp+0x38]
   1400346a3:	call   0x140030f90
   1400346a8:	mov    rax,QWORD PTR [rsp+0x3c8]
   1400346b0:	jmp    0x140034abb
   1400346b5:	lea    rdx,[rip+0x9ff4]        # 0x14003e6b0
   1400346bc:	lea    rcx,[rsp+0x38]
   1400346c1:	call   0x140030e60
   1400346c6:	mov    QWORD PTR [rsp+0xe8],rax
   1400346ce:	lea    rdx,[rip+0x9ffb]        # 0x14003e6d0
   1400346d5:	lea    rcx,[rsp+0x38]
   1400346da:	call   0x140030e60
   1400346df:	mov    QWORD PTR [rsp+0x88],rax
   1400346e7:	lea    rdx,[rip+0x9ffa]        # 0x14003e6e8
   1400346ee:	lea    rcx,[rsp+0x38]
   1400346f3:	call   0x140030e60
   1400346f8:	mov    QWORD PTR [rsp+0xb8],rax
   140034700:	cmp    QWORD PTR [rsp+0xe8],0x0
   140034709:	je     0x14003471d
   14003470b:	mov    rax,QWORD PTR [rsp+0xe8]
   140034713:	mov    QWORD PTR [rsp+0x350],rax
   14003471b:	jmp    0x14003472c
   14003471d:	lea    rax,[rip+0x9fe4]        # 0x14003e708
   140034724:	mov    QWORD PTR [rsp+0x350],rax
   14003472c:	mov    rdx,QWORD PTR [rsp+0x350]
   140034734:	lea    rcx,[rsp+0xc0]
   14003473c:	call   0x140003a30
   140034741:	nop
   140034742:	cmp    QWORD PTR [rsp+0x88],0x0
   14003474b:	je     0x14003475f
   14003474d:	mov    rax,QWORD PTR [rsp+0x88]
   140034755:	mov    QWORD PTR [rsp+0x358],rax
   14003475d:	jmp    0x14003476e
   14003475f:	lea    rax,[rip+0x9fa6]        # 0x14003e70c
   140034766:	mov    QWORD PTR [rsp+0x358],rax
   14003476e:	mov    rdx,QWORD PTR [rsp+0x358]
   140034776:	lea    rcx,[rsp+0x90]
   14003477e:	call   0x140003a30
   140034783:	nop
   140034784:	cmp    QWORD PTR [rsp+0xb8],0x0
   14003478d:	je     0x1400347a1
   14003478f:	mov    rax,QWORD PTR [rsp+0xb8]
   140034797:	mov    QWORD PTR [rsp+0x360],rax
   14003479f:	jmp    0x1400347b0
   1400347a1:	lea    rax,[rip+0x9f68]        # 0x14003e710
   1400347a8:	mov    QWORD PTR [rsp+0x360],rax
   1400347b0:	mov    rdx,QWORD PTR [rsp+0x360]
   1400347b8:	lea    rcx,[rsp+0x60]
   1400347bd:	call   0x140003a30
   1400347c2:	nop
   1400347c3:	mov    r8d,0x1
   1400347c9:	mov    edx,0x3
   1400347ce:	lea    rcx,[rsp+0xf0]
   1400347d6:	call   0x140006b00
   1400347db:	nop
   1400347dc:	lea    rdx,[rip+0x9f35]        # 0x14003e718
   1400347e3:	lea    rcx,[rsp+0x1f0]
   1400347eb:	call   0x140003a30
   1400347f0:	nop
   1400347f1:	lea    rdx,[rip+0x9f28]        # 0x14003e720
   1400347f8:	lea    rcx,[rsp+0x218]
   140034800:	call   0x140003a30
   140034805:	nop
   140034806:	lea    rax,[rsp+0x240]
   14003480e:	mov    QWORD PTR [rsp+0x268],rax
   140034816:	lea    rdx,[rsp+0x60]
   14003481b:	mov    rcx,QWORD PTR [rsp+0x268]
   140034823:	call   0x140005d30
   140034828:	mov    QWORD PTR [rsp+0x368],rax
   140034830:	mov    BYTE PTR [rsp+0x20],0x1
   140034835:	lea    r9,[rsp+0x1f0]
   14003483d:	lea    r8,[rsp+0x218]
   140034845:	mov    rdx,QWORD PTR [rsp+0x368]
   14003484d:	lea    rcx,[rsp+0x270]
   140034855:	call   0x140032400
   14003485a:	mov    QWORD PTR [rsp+0x370],rax
   140034862:	mov    rax,QWORD PTR [rsp+0x370]
   14003486a:	mov    QWORD PTR [rsp+0x378],rax
   140034872:	mov    rdx,QWORD PTR [rsp+0x378]
   14003487a:	lea    rcx,[rsp+0x60]
   14003487f:	call   0x140005d80
   140034884:	nop
   140034885:	lea    rcx,[rsp+0x270]
   14003488d:	call   0x140003a90
   140034892:	nop
   140034893:	lea    rcx,[rsp+0x218]
   14003489b:	call   0x140003a90
   1400348a0:	nop
   1400348a1:	lea    rcx,[rsp+0x1f0]
   1400348a9:	call   0x140003a90
   1400348ae:	lea    rdx,[rip+0x9e73]        # 0x14003e728
   1400348b5:	lea    rcx,[rsp+0x298]
   1400348bd:	call   0x140003a30
   1400348c2:	nop
   1400348c3:	lea    rdx,[rip+0x9e5a]        # 0x14003e724
   1400348ca:	lea    rcx,[rsp+0x2c0]
   1400348d2:	call   0x140003a30
   1400348d7:	nop
   1400348d8:	lea    rax,[rsp+0x2e8]
   1400348e0:	mov    QWORD PTR [rsp+0x310],rax
   1400348e8:	lea    rdx,[rsp+0x60]
   1400348ed:	mov    rcx,QWORD PTR [rsp+0x310]
   1400348f5:	call   0x140005d30
   1400348fa:	mov    QWORD PTR [rsp+0x380],rax
   140034902:	mov    BYTE PTR [rsp+0x20],0x1
   140034907:	lea    r9,[rsp+0x298]
   14003490f:	lea    r8,[rsp+0x2c0]
   140034917:	mov    rdx,QWORD PTR [rsp+0x380]
   14003491f:	lea    rcx,[rsp+0x318]
   140034927:	call   0x140032400
   14003492c:	mov    QWORD PTR [rsp+0x388],rax
   140034934:	mov    rax,QWORD PTR [rsp+0x388]
   14003493c:	mov    QWORD PTR [rsp+0x390],rax
   140034944:	mov    rdx,QWORD PTR [rsp+0x390]
   14003494c:	lea    rcx,[rsp+0x60]
   140034951:	call   0x140005d80
   140034956:	nop
   140034957:	lea    rcx,[rsp+0x318]
   14003495f:	call   0x140003a90
   140034964:	nop
   140034965:	lea    rcx,[rsp+0x2c0]
   14003496d:	call   0x140003a90
   140034972:	nop
   140034973:	lea    rcx,[rsp+0x298]
   14003497b:	call   0x140003a90
   140034980:	lea    rcx,[rsp+0x60]
   140034985:	call   0x140003bb0
   14003498a:	mov    rdx,rax
   14003498d:	sub    rdx,0x1
   140034991:	lea    rcx,[rsp+0x60]
   140034996:	call   0x140011b90
   14003499b:	movzx  eax,WORD PTR [rax]
   14003499e:	cmp    eax,0x2e
   1400349a1:	je     0x1400349b1
   1400349a3:	mov    dx,0x2e
   1400349a7:	lea    rcx,[rsp+0x60]
   1400349ac:	call   0x14000e270
   1400349b1:	lea    rax,[rsp+0xf0]
   1400349b9:	test   rax,rax
   1400349bc:	je     0x1400349d4
   1400349be:	lea    rax,[rsp+0xf0]
   1400349c6:	add    rax,0x10
   1400349ca:	mov    QWORD PTR [rsp+0x398],rax
   1400349d2:	jmp    0x1400349e0
   1400349d4:	mov    QWORD PTR [rsp+0x398],0x0
   1400349e0:	lea    rdx,[rsp+0xc0]
   1400349e8:	mov    rcx,QWORD PTR [rsp+0x398]
   1400349f0:	call   0x14000b860
   1400349f5:	lea    rdx,[rip+0x9d54]        # 0x14003e750
   1400349fc:	mov    rcx,rax
   1400349ff:	call   0x14000bc00
   140034a04:	lea    rdx,[rsp+0x90]
   140034a0c:	mov    rcx,rax
   140034a0f:	call   0x14000b860
   140034a14:	lea    rdx,[rip+0xfffffffffffdcd55]        # 0x140011770
   140034a1b:	mov    rcx,rax
   140034a1e:	call   0x140011930
   140034a23:	lea    rdx,[rsp+0x60]
   140034a28:	mov    rcx,rax
   140034a2b:	call   0x14000b860
   140034a30:	lea    rdx,[rip+0x9cf9]        # 0x14003e730
   140034a37:	mov    rcx,rax
   140034a3a:	call   0x14000bc00
   140034a3f:	lea    rdx,[rip+0xfffffffffffdcd2a]        # 0x140011770
   140034a46:	mov    rcx,rax
   140034a49:	call   0x140011930
   140034a4e:	mov    rdx,QWORD PTR [rsp+0x3c8]
   140034a56:	lea    rcx,[rsp+0xf0]
   140034a5e:	call   0x140006c20
   140034a63:	mov    eax,DWORD PTR [rsp+0x340]
   140034a6a:	or     eax,0x1
   140034a6d:	mov    DWORD PTR [rsp+0x340],eax
   140034a74:	lea    rcx,[rsp+0xf0]
   140034a7c:	call   0x140005120
   140034a81:	nop
   140034a82:	lea    rcx,[rsp+0x60]
   140034a87:	call   0x140003a90
   140034a8c:	nop
   140034a8d:	lea    rcx,[rsp+0x90]
   140034a95:	call   0x140003a90
   140034a9a:	nop
   140034a9b:	lea    rcx,[rsp+0xc0]
   140034aa3:	call   0x140003a90
   140034aa8:	nop
   140034aa9:	lea    rcx,[rsp+0x38]
   140034aae:	call   0x140030f90
   140034ab3:	mov    rax,QWORD PTR [rsp+0x3c8]
   140034abb:	mov    rcx,QWORD PTR [rsp+0x3a0]
   140034ac3:	xor    rcx,rsp
   140034ac6:	call   0x14001c500
   140034acb:	add    rsp,0x3b8
   140034ad2:	ret    
   140034ad3:	int3   
   140034ad4:	int3   
   140034ad5:	int3   
   140034ad6:	int3   
   140034ad7:	int3   
   140034ad8:	int3   
   140034ad9:	int3   
   140034ada:	int3   
   140034adb:	int3   
   140034adc:	int3   
   140034add:	int3   
   140034ade:	int3   
   140034adf:	int3   
   140034ae0:	mov    QWORD PTR [rsp+0x18],r8
   140034ae5:	mov    QWORD PTR [rsp+0x10],rdx
   140034aea:	mov    QWORD PTR [rsp+0x8],rcx
   140034aef:	push   rsi
   140034af0:	push   rdi
   140034af1:	sub    rsp,0x388
   140034af8:	mov    QWORD PTR [rsp+0x2c8],0xfffffffffffffffe
   140034b04:	mov    rax,QWORD PTR [rip+0x14955]        # 0x140049460
   140034b0b:	xor    rax,rsp
   140034b0e:	mov    QWORD PTR [rsp+0x370],rax
   140034b16:	mov    DWORD PTR [rsp+0x2a0],0x0
   140034b21:	mov    r8d,0x1
   140034b27:	mov    edx,0x3
   140034b2c:	lea    rcx,[rsp+0x30]
   140034b31:	call   0x140006b00
   140034b36:	nop
   140034b37:	mov    rax,QWORD PTR [rsp+0x3a0]
   140034b3f:	mov    rax,QWORD PTR [rax]
   140034b42:	lea    rdx,[rsp+0x138]
   140034b4a:	mov    rcx,QWORD PTR [rsp+0x3a0]
   140034b52:	call   QWORD PTR [rax]
   140034b54:	nop
   140034b55:	lea    rcx,[rsp+0x138]
   140034b5d:	call   0x140003bb0
   140034b62:	test   rax,rax
   140034b65:	je     0x140034bfb
   140034b6b:	lea    rax,[rsp+0x30]
   140034b70:	test   rax,rax
   140034b73:	je     0x140034b88
   140034b75:	lea    rax,[rsp+0x30]
   140034b7a:	add    rax,0x10
   140034b7e:	mov    QWORD PTR [rsp+0x2d0],rax
   140034b86:	jmp    0x140034b94
   140034b88:	mov    QWORD PTR [rsp+0x2d0],0x0
   140034b94:	mov    rax,QWORD PTR [rsp+0x3a0]
   140034b9c:	mov    rax,QWORD PTR [rax]
   140034b9f:	lea    rdx,[rsp+0x188]
   140034ba7:	mov    rcx,QWORD PTR [rsp+0x3a0]
   140034baf:	call   QWORD PTR [rax]
   140034bb1:	mov    QWORD PTR [rsp+0x2d8],rax
   140034bb9:	mov    rax,QWORD PTR [rsp+0x2d8]
   140034bc1:	mov    QWORD PTR [rsp+0x2e0],rax
   140034bc9:	mov    rdx,QWORD PTR [rsp+0x2e0]
   140034bd1:	mov    rcx,QWORD PTR [rsp+0x2d0]
   140034bd9:	call   0x14000b860
   140034bde:	lea    rdx,[rip+0xfffffffffffdcb8b]        # 0x140011770
   140034be5:	mov    rcx,rax
   140034be8:	call   0x140011930
   140034bed:	nop
   140034bee:	lea    rcx,[rsp+0x188]
   140034bf6:	call   0x140003a90
   140034bfb:	mov    rcx,QWORD PTR [rsp+0x3b0]
   140034c03:	call   0x140003bc0
   140034c08:	movzx  eax,al
   140034c0b:	test   eax,eax
   140034c0d:	jne    0x140034c6d
   140034c0f:	lea    rax,[rsp+0x30]
   140034c14:	test   rax,rax
   140034c17:	je     0x140034c2c
   140034c19:	lea    rax,[rsp+0x30]
   140034c1e:	add    rax,0x10
   140034c22:	mov    QWORD PTR [rsp+0x2e8],rax
   140034c2a:	jmp    0x140034c38
   140034c2c:	mov    QWORD PTR [rsp+0x2e8],0x0
   140034c38:	mov    rdx,QWORD PTR [rsp+0x3b0]
   140034c40:	mov    rcx,QWORD PTR [rsp+0x2e8]
   140034c48:	call   0x14000b860
   140034c4d:	lea    rdx,[rip+0xfffffffffffdcb1c]        # 0x140011770
   140034c54:	mov    rcx,rax
   140034c57:	call   0x140011930
   140034c5c:	lea    rdx,[rip+0xfffffffffffdcb0d]        # 0x140011770
   140034c63:	mov    rcx,rax
   140034c66:	call   0x140011930
   140034c6b:	jmp    0x140034ce1
   140034c6d:	mov    rcx,QWORD PTR [rsp+0x3a0]
   140034c75:	call   0x1400320c0
   140034c7a:	movzx  eax,al
   140034c7d:	test   eax,eax
   140034c7f:	je     0x140034ce1
   140034c81:	lea    rax,[rsp+0x30]
   140034c86:	test   rax,rax
   140034c89:	je     0x140034c9e
   140034c8b:	lea    rax,[rsp+0x30]
   140034c90:	add    rax,0x10
   140034c94:	mov    QWORD PTR [rsp+0x2f0],rax
   140034c9c:	jmp    0x140034caa
   140034c9e:	mov    QWORD PTR [rsp+0x2f0],0x0
   140034caa:	mov    rdx,QWORD PTR [rsp+0x3a0]
   140034cb2:	add    rdx,0x38
   140034cb6:	mov    rcx,QWORD PTR [rsp+0x2f0]
   140034cbe:	call   0x14000b860
   140034cc3:	lea    rdx,[rip+0xfffffffffffdcaa6]        # 0x140011770
   140034cca:	mov    rcx,rax
   140034ccd:	call   0x140011930
   140034cd2:	lea    rdx,[rip+0xfffffffffffdca97]        # 0x140011770
   140034cd9:	mov    rcx,rax
   140034cdc:	call   0x140011930
   140034ce1:	lea    rax,[rsp+0x30]
   140034ce6:	test   rax,rax
   140034ce9:	je     0x140034cfe
   140034ceb:	lea    rax,[rsp+0x30]
   140034cf0:	add    rax,0x10
   140034cf4:	mov    QWORD PTR [rsp+0x2f8],rax
   140034cfc:	jmp    0x140034d0a
   140034cfe:	mov    QWORD PTR [rsp+0x2f8],0x0
   140034d0a:	lea    rcx,[rsp+0x1b0]
   140034d12:	call   0x1400324e0
   140034d17:	mov    QWORD PTR [rsp+0x300],rax
   140034d1f:	mov    rax,QWORD PTR [rsp+0x300]
   140034d27:	mov    QWORD PTR [rsp+0x308],rax
   140034d2f:	lea    rdx,[rip+0x96e2]        # 0x14003e418
   140034d36:	mov    rcx,QWORD PTR [rsp+0x2f8]
   140034d3e:	call   0x14000bc00
   140034d43:	mov    rdx,QWORD PTR [rsp+0x308]
   140034d4b:	mov    rcx,rax
   140034d4e:	call   0x14000b860
   140034d53:	nop
   140034d54:	lea    rcx,[rsp+0x1b0]
   140034d5c:	call   0x140003a90
   140034d61:	mov    rax,QWORD PTR [rsp+0x3a0]
   140034d69:	movzx  eax,BYTE PTR [rax+0x60]
   140034d6d:	and    al,0x1
   140034d6f:	movzx  eax,al
   140034d72:	test   eax,eax
   140034d74:	je     0x140034dc2
   140034d76:	lea    rax,[rsp+0x30]
   140034d7b:	test   rax,rax
   140034d7e:	je     0x140034d93
   140034d80:	lea    rax,[rsp+0x30]
   140034d85:	add    rax,0x10
   140034d89:	mov    QWORD PTR [rsp+0x310],rax
   140034d91:	jmp    0x140034d9f
   140034d93:	mov    QWORD PTR [rsp+0x310],0x0
   140034d9f:	lea    rdx,[rip+0x969a]        # 0x14003e440
   140034da6:	mov    rcx,QWORD PTR [rsp+0x310]
   140034dae:	call   0x14000bc00
   140034db3:	lea    rdx,[rip+0x966e]        # 0x14003e428
   140034dba:	mov    rcx,rax
   140034dbd:	call   0x14000bc00
   140034dc2:	lea    rcx,[rsp+0x20]
   140034dc7:	call   0x140004e40
   140034dcc:	mov    rcx,QWORD PTR [rsp+0x3a0]
   140034dd4:	add    rcx,0x8
   140034dd8:	lea    rdx,[rsp+0x1d8]
   140034de0:	call   0x140003c20
   140034de5:	lea    rdi,[rsp+0x2b8]
   140034ded:	mov    rsi,rax
   140034df0:	mov    ecx,0x10
   140034df5:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140034df7:	lea    rdi,[rsp+0x20]
   140034dfc:	lea    rsi,[rsp+0x2b8]
   140034e04:	mov    ecx,0x10
   140034e09:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140034e0b:	jmp    0x140034e17
   140034e0d:	lea    rcx,[rsp+0x20]
   140034e12:	call   0x1400120d0
   140034e17:	mov    rcx,QWORD PTR [rsp+0x3a0]
   140034e1f:	add    rcx,0x8
   140034e23:	lea    rdx,[rsp+0x1e8]
   140034e2b:	call   0x140006690
   140034e30:	mov    rdx,rax
   140034e33:	lea    rcx,[rsp+0x20]
   140034e38:	call   0x140004f40
   140034e3d:	movzx  eax,al
   140034e40:	test   eax,eax
   140034e42:	je     0x140034f58
   140034e48:	lea    rax,[rsp+0x1f8]
   140034e50:	mov    QWORD PTR [rsp+0x220],rax
   140034e58:	lea    rcx,[rsp+0x20]
   140034e5d:	call   0x1400120b0
   140034e62:	cmp    DWORD PTR [rax],0x0
   140034e65:	jne    0x140034e78
   140034e67:	lea    rax,[rip+0x95d6]        # 0x14003e444
   140034e6e:	mov    QWORD PTR [rsp+0x318],rax
   140034e76:	jmp    0x140034e87
   140034e78:	lea    rax,[rip+0x95c9]        # 0x14003e448
   140034e7f:	mov    QWORD PTR [rsp+0x318],rax
   140034e87:	lea    rax,[rsp+0x30]
   140034e8c:	test   rax,rax
   140034e8f:	je     0x140034ea4
   140034e91:	lea    rax,[rsp+0x30]
   140034e96:	add    rax,0x10
   140034e9a:	mov    QWORD PTR [rsp+0x320],rax
   140034ea2:	jmp    0x140034eb0
   140034ea4:	mov    QWORD PTR [rsp+0x320],0x0
   140034eb0:	lea    rcx,[rsp+0x20]
   140034eb5:	call   0x1400120b0
   140034eba:	mov    rax,QWORD PTR [rax+0x8]
   140034ebe:	mov    QWORD PTR [rsp+0x328],rax
   140034ec6:	mov    rdx,QWORD PTR [rsp+0x318]
   140034ece:	mov    rcx,QWORD PTR [rsp+0x220]
   140034ed6:	call   0x140003a30
   140034edb:	mov    QWORD PTR [rsp+0x330],rax
   140034ee3:	mov    rax,QWORD PTR [rsp+0x328]
   140034eeb:	mov    rax,QWORD PTR [rax]
   140034eee:	mov    r8,QWORD PTR [rsp+0x330]
   140034ef6:	lea    rdx,[rsp+0x228]
   140034efe:	mov    rcx,QWORD PTR [rsp+0x328]
   140034f06:	call   QWORD PTR [rax+0x28]
   140034f09:	mov    QWORD PTR [rsp+0x338],rax
   140034f11:	mov    rax,QWORD PTR [rsp+0x338]
   140034f19:	mov    QWORD PTR [rsp+0x340],rax
   140034f21:	lea    rdx,[rip+0x9524]        # 0x14003e44c
   140034f28:	mov    rcx,QWORD PTR [rsp+0x320]
   140034f30:	call   0x14000bc00
   140034f35:	mov    rdx,QWORD PTR [rsp+0x340]
   140034f3d:	mov    rcx,rax
   140034f40:	call   0x14000b860
   140034f45:	nop
   140034f46:	lea    rcx,[rsp+0x228]
   140034f4e:	call   0x140003a90
   140034f53:	jmp    0x140034e0d
   140034f58:	lea    rcx,[rsp+0x40]
   140034f5d:	lea    rdx,[rip+0xfffffffffffdc80c]        # 0x140011770
   140034f64:	call   0x140011930
   140034f69:	lea    rcx,[rsp+0x40]
   140034f6e:	lea    rdx,[rip+0xfffffffffffdc7fb]        # 0x140011770
   140034f75:	call   0x140011930
   140034f7a:	mov    rax,QWORD PTR [rsp+0x3a0]
   140034f82:	movzx  eax,BYTE PTR [rax+0x60]
   140034f86:	and    al,0x1
   140034f88:	movzx  eax,al
   140034f8b:	test   eax,eax
   140034f8d:	je     0x140034fdb
   140034f8f:	lea    rax,[rsp+0x30]
   140034f94:	test   rax,rax
   140034f97:	je     0x140034fac
   140034f99:	lea    rax,[rsp+0x30]
   140034f9e:	add    rax,0x10
   140034fa2:	mov    QWORD PTR [rsp+0x348],rax
   140034faa:	jmp    0x140034fb8
   140034fac:	mov    QWORD PTR [rsp+0x348],0x0
   140034fb8:	lea    rdx,[rip+0x9491]        # 0x14003e450
   140034fbf:	mov    rcx,QWORD PTR [rsp+0x348]
   140034fc7:	call   0x14000bc00
   140034fcc:	lea    rdx,[rip+0xfffffffffffdc79d]        # 0x140011770
   140034fd3:	mov    rcx,rax
   140034fd6:	call   0x140011930
   140034fdb:	mov    rcx,QWORD PTR [rsp+0x3a0]
   140034fe3:	add    rcx,0x8
   140034fe7:	lea    rdx,[rsp+0x250]
   140034fef:	call   0x140003c20
   140034ff4:	lea    rdi,[rsp+0x2a8]
   140034ffc:	mov    rsi,rax
   140034fff:	mov    ecx,0x10
   140035004:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140035006:	lea    rdi,[rsp+0x20]
   14003500b:	lea    rsi,[rsp+0x2a8]
   140035013:	mov    ecx,0x10
   140035018:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003501a:	jmp    0x140035026
   14003501c:	lea    rcx,[rsp+0x20]
   140035021:	call   0x1400120d0
   140035026:	mov    rcx,QWORD PTR [rsp+0x3a0]
   14003502e:	add    rcx,0x8
   140035032:	lea    rdx,[rsp+0x260]
   14003503a:	call   0x140006690
   14003503f:	mov    rdx,rax
   140035042:	lea    rcx,[rsp+0x20]
   140035047:	call   0x140004f40
   14003504c:	movzx  eax,al
   14003504f:	test   eax,eax
   140035051:	je     0x140035162
   140035057:	lea    rax,[rsp+0x270]
   14003505f:	mov    QWORD PTR [rsp+0x298],rax
   140035067:	lea    rcx,[rsp+0x20]
   14003506c:	call   0x1400120b0
   140035071:	cmp    DWORD PTR [rax],0x0
   140035074:	jne    0x140035087
   140035076:	lea    rax,[rip+0x941f]        # 0x14003e49c
   14003507d:	mov    QWORD PTR [rsp+0x350],rax
   140035085:	jmp    0x140035096
   140035087:	lea    rax,[rip+0x9412]        # 0x14003e4a0
   14003508e:	mov    QWORD PTR [rsp+0x350],rax
   140035096:	lea    rcx,[rsp+0x20]
   14003509b:	call   0x1400120b0
   1400350a0:	mov    rax,QWORD PTR [rax+0x8]
   1400350a4:	mov    QWORD PTR [rsp+0x358],rax
   1400350ac:	mov    rdx,QWORD PTR [rsp+0x350]
   1400350b4:	mov    rcx,QWORD PTR [rsp+0x298]
   1400350bc:	call   0x140003a30
   1400350c1:	mov    QWORD PTR [rsp+0x360],rax
   1400350c9:	mov    rax,QWORD PTR [rsp+0x358]
   1400350d1:	mov    rax,QWORD PTR [rax]
   1400350d4:	mov    r8,QWORD PTR [rsp+0x360]
   1400350dc:	lea    rdx,[rsp+0x160]
   1400350e4:	mov    rcx,QWORD PTR [rsp+0x358]
   1400350ec:	call   QWORD PTR [rax+0x30]
   1400350ef:	nop
   1400350f0:	lea    rcx,[rsp+0x160]
   1400350f8:	call   0x140003bb0
   1400350fd:	test   rax,rax
   140035100:	je     0x140035150
   140035102:	lea    rax,[rsp+0x30]
   140035107:	test   rax,rax
   14003510a:	je     0x14003511f
   14003510c:	lea    rax,[rsp+0x30]
   140035111:	add    rax,0x10
   140035115:	mov    QWORD PTR [rsp+0x368],rax
   14003511d:	jmp    0x14003512b
   14003511f:	mov    QWORD PTR [rsp+0x368],0x0
   14003512b:	lea    rdx,[rsp+0x160]
   140035133:	mov    rcx,QWORD PTR [rsp+0x368]
   14003513b:	call   0x14000b860
   140035140:	lea    rdx,[rip+0xfffffffffffdc629]        # 0x140011770
   140035147:	mov    rcx,rax
   14003514a:	call   0x140011930
   14003514f:	nop
   140035150:	lea    rcx,[rsp+0x160]
   140035158:	call   0x140003a90
   14003515d:	jmp    0x14003501c
   140035162:	mov    rdx,QWORD PTR [rsp+0x3a8]
   14003516a:	lea    rcx,[rsp+0x30]
   14003516f:	call   0x140006c20
   140035174:	mov    eax,DWORD PTR [rsp+0x2a0]
   14003517b:	or     eax,0x1
   14003517e:	mov    DWORD PTR [rsp+0x2a0],eax
   140035185:	lea    rcx,[rsp+0x138]
   14003518d:	call   0x140003a90
   140035192:	nop
   140035193:	lea    rcx,[rsp+0x30]
   140035198:	call   0x140005120
   14003519d:	mov    rax,QWORD PTR [rsp+0x3a8]
   1400351a5:	mov    rcx,QWORD PTR [rsp+0x370]
   1400351ad:	xor    rcx,rsp
   1400351b0:	call   0x14001c500
   1400351b5:	add    rsp,0x388
   1400351bc:	pop    rdi
   1400351bd:	pop    rsi
   1400351be:	ret    
   1400351bf:	int3   
   1400351c0:	int3   
   1400351c1:	int3   
   1400351c2:	int3   
   1400351c3:	int3   
   1400351c4:	int3   
   1400351c5:	int3   
   1400351c6:	int3   
   1400351c7:	int3   
   1400351c8:	int3   
   1400351c9:	int3   
   1400351ca:	int3   
   1400351cb:	int3   
   1400351cc:	int3   
   1400351cd:	int3   
   1400351ce:	int3   
   1400351cf:	int3   
   1400351d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400351d5:	sub    rsp,0xc8
   1400351dc:	mov    QWORD PTR [rsp+0x98],0xfffffffffffffffe
   1400351e8:	mov    rcx,QWORD PTR [rsp+0xd0]
   1400351f0:	add    rcx,0xd8
   1400351f7:	call   0x140032100
   1400351fc:	movzx  eax,al
   1400351ff:	test   eax,eax
   140035201:	je     0x14003525c
   140035203:	mov    rax,QWORD PTR [rsp+0xd0]
   14003520b:	mov    rax,QWORD PTR [rax]
   14003520e:	lea    rdx,[rsp+0x20]
   140035213:	mov    rcx,QWORD PTR [rsp+0xd0]
   14003521b:	call   QWORD PTR [rax]
   14003521d:	mov    QWORD PTR [rsp+0xa0],rax
   140035225:	mov    rax,QWORD PTR [rsp+0xa0]
   14003522d:	mov    QWORD PTR [rsp+0xa8],rax
   140035235:	mov    rdx,QWORD PTR [rsp+0xa8]
   14003523d:	mov    rcx,QWORD PTR [rsp+0xd0]
   140035245:	call   0x140034570
   14003524a:	nop
   14003524b:	lea    rcx,[rsp+0x20]
   140035250:	call   0x140003a90
   140035255:	xor    al,al
   140035257:	jmp    0x140035323
   14003525c:	mov    rcx,QWORD PTR [rsp+0xd0]
   140035264:	call   0x1400320c0
   140035269:	movzx  eax,al
   14003526c:	test   eax,eax
   14003526e:	jne    0x14003528c
   140035270:	mov    rcx,QWORD PTR [rsp+0xd0]
   140035278:	add    rcx,0x68
   14003527c:	call   0x140032100
   140035281:	movzx  eax,al
   140035284:	test   eax,eax
   140035286:	je     0x140035321
   14003528c:	mov    rcx,QWORD PTR [rsp+0xd0]
   140035294:	add    rcx,0x68
   140035298:	call   0x140032100
   14003529d:	movzx  eax,al
   1400352a0:	test   eax,eax
   1400352a2:	je     0x1400352b1
   1400352a4:	mov    rcx,QWORD PTR [rsp+0xd0]
   1400352ac:	call   0x1400321d0
   1400352b1:	lea    rdx,[rip+0x96f8]        # 0x14003e9b0
   1400352b8:	lea    rcx,[rsp+0x48]
   1400352bd:	call   0x140003a30
   1400352c2:	nop
   1400352c3:	lea    r8,[rsp+0x48]
   1400352c8:	lea    rdx,[rsp+0x70]
   1400352cd:	mov    rcx,QWORD PTR [rsp+0xd0]
   1400352d5:	call   0x140034ae0
   1400352da:	mov    QWORD PTR [rsp+0xb0],rax
   1400352e2:	mov    rax,QWORD PTR [rsp+0xb0]
   1400352ea:	mov    QWORD PTR [rsp+0xb8],rax
   1400352f2:	mov    rdx,QWORD PTR [rsp+0xb8]
   1400352fa:	mov    rcx,QWORD PTR [rsp+0xd0]
   140035302:	call   0x140034570
   140035307:	nop
   140035308:	lea    rcx,[rsp+0x70]
   14003530d:	call   0x140003a90
   140035312:	nop
   140035313:	lea    rcx,[rsp+0x48]
   140035318:	call   0x140003a90
   14003531d:	xor    al,al
   14003531f:	jmp    0x140035323
   140035321:	mov    al,0x1
   140035323:	add    rsp,0xc8
   14003532a:	ret    
   14003532b:	int3   
   14003532c:	int3   
   14003532d:	int3   
   14003532e:	int3   
   14003532f:	int3   
   140035330:	mov    QWORD PTR [rsp+0x10],rdx
   140035335:	mov    QWORD PTR [rsp+0x8],rcx
   14003533a:	push   rsi
   14003533b:	push   rdi
   14003533c:	sub    rsp,0xc8
   140035343:	mov    QWORD PTR [rsp+0xb8],0xfffffffffffffffe
   14003534f:	mov    rcx,QWORD PTR [rsp+0xe0]
   140035357:	add    rcx,0x270
   14003535e:	call   0x140004a30
   140035363:	mov    rcx,QWORD PTR [rsp+0xe8]
   14003536b:	mov    eax,DWORD PTR [rax]
   14003536d:	mov    DWORD PTR [rcx],eax
   14003536f:	mov    rax,QWORD PTR [rsp+0xe8]
   140035377:	cmp    DWORD PTR [rax],0x78
   14003537a:	jge    0x140035396
   14003537c:	mov    rax,QWORD PTR [rsp+0xe8]
   140035384:	mov    ecx,DWORD PTR [rax]
   140035386:	imul   ecx,ecx,0x3e8
   14003538c:	mov    rax,QWORD PTR [rsp+0xe8]
   140035394:	mov    DWORD PTR [rax],ecx
   140035396:	mov    rcx,QWORD PTR [rsp+0xe0]
   14003539e:	add    rcx,0x148
   1400353a5:	call   0x1400048a0
   1400353aa:	lea    rdx,[rip+0x9b6f]        # 0x14003ef20
   1400353b1:	mov    rcx,rax
   1400353b4:	call   0x14000b420
   1400353b9:	movzx  eax,al
   1400353bc:	test   eax,eax
   1400353be:	je     0x1400353d1
   1400353c0:	mov    rax,QWORD PTR [rsp+0xe8]
   1400353c8:	mov    DWORD PTR [rax+0x4],0x2
   1400353cf:	jmp    0x14003541b
   1400353d1:	mov    rcx,QWORD PTR [rsp+0xe0]
   1400353d9:	add    rcx,0x148
   1400353e0:	call   0x1400048a0
   1400353e5:	lea    rdx,[rip+0x9b44]        # 0x14003ef30
   1400353ec:	mov    rcx,rax
   1400353ef:	call   0x14000b420
   1400353f4:	movzx  eax,al
   1400353f7:	test   eax,eax
   1400353f9:	je     0x14003540c
   1400353fb:	mov    rax,QWORD PTR [rsp+0xe8]
   140035403:	mov    DWORD PTR [rax+0x4],0x3
   14003540a:	jmp    0x14003541b
   14003540c:	mov    rax,QWORD PTR [rsp+0xe8]
   140035414:	mov    DWORD PTR [rax+0x4],0x1
   14003541b:	mov    rcx,QWORD PTR [rsp+0xe0]
   140035423:	add    rcx,0x518
   14003542a:	call   0x140032100
   14003542f:	movzx  eax,al
   140035432:	test   eax,eax
   140035434:	je     0x14003544f
   140035436:	mov    rax,QWORD PTR [rsp+0xe8]
   14003543e:	mov    ecx,DWORD PTR [rax+0x4]
   140035441:	or     ecx,0x10
   140035444:	mov    rax,QWORD PTR [rsp+0xe8]
   14003544c:	mov    DWORD PTR [rax+0x4],ecx
   14003544f:	mov    rcx,QWORD PTR [rsp+0xe0]
   140035457:	add    rcx,0x588
   14003545e:	call   0x140032100
   140035463:	movzx  eax,al
   140035466:	test   eax,eax
   140035468:	jne    0x140035486
   14003546a:	mov    rax,QWORD PTR [rsp+0xe8]
   140035472:	mov    ecx,DWORD PTR [rax+0x4]
   140035475:	or     ecx,0x80
   14003547b:	mov    rax,QWORD PTR [rsp+0xe8]
   140035483:	mov    DWORD PTR [rax+0x4],ecx
   140035486:	mov    rcx,QWORD PTR [rsp+0xe0]
   14003548e:	add    rcx,0x5f8
   140035495:	call   0x140032100
   14003549a:	movzx  edx,al
   14003549d:	mov    rax,QWORD PTR [rsp+0xe8]
   1400354a5:	mov    BYTE PTR [rax+0x8],dl
   1400354a8:	mov    rcx,QWORD PTR [rsp+0xe0]
   1400354b0:	add    rcx,0x668
   1400354b7:	call   0x1400048a0
   1400354bc:	mov    rcx,rax
   1400354bf:	call   0x140003b90
   1400354c4:	mov    rcx,rax
   1400354c7:	call   0x140031c50
   1400354cc:	mov    rdx,rax
   1400354cf:	mov    rax,QWORD PTR [rsp+0xe8]
   1400354d7:	mov    QWORD PTR [rax+0x60],rdx
   1400354db:	mov    rax,QWORD PTR [rsp+0xe8]
   1400354e3:	cmp    QWORD PTR [rax+0x60],0x0
   1400354e8:	jne    0x140035513
   1400354ea:	lea    rcx,[rip+0x17d8f]        # 0x14004d280
   1400354f1:	call   0x140011590
   1400354f6:	mov    edx,0x65
   1400354fb:	mov    rcx,rax
   1400354fe:	call   QWORD PTR [rip+0x4eb4]        # 0x14003a3b8
   140035504:	mov    rdx,rax
   140035507:	mov    rax,QWORD PTR [rsp+0xe8]
   14003550f:	mov    QWORD PTR [rax+0x60],rdx
   140035513:	lea    rcx,[rsp+0x20]
   140035518:	call   0x140004e40
   14003551d:	mov    rcx,QWORD PTR [rsp+0xe0]
   140035525:	add    rcx,0x318
   14003552c:	call   0x140004b50
   140035531:	test   rax,rax
   140035534:	jne    0x140035579
   140035536:	lea    rdx,[rip+0x9a03]        # 0x14003ef40
   14003553d:	lea    rcx,[rsp+0x30]
   140035542:	call   0x140003a30
   140035547:	nop
   140035548:	mov    rcx,QWORD PTR [rsp+0xe0]
   140035550:	add    rcx,0x318
   140035557:	mov    rax,QWORD PTR [rsp+0xe0]
   14003555f:	mov    rax,QWORD PTR [rax+0x318]
   140035566:	lea    rdx,[rsp+0x30]
   14003556b:	call   QWORD PTR [rax+0x20]
   14003556e:	nop
   14003556f:	lea    rcx,[rsp+0x30]
   140035574:	call   0x140003a90
   140035579:	mov    rcx,QWORD PTR [rsp+0xe0]
   140035581:	add    rcx,0x318
   140035588:	call   0x140004b70
   14003558d:	lea    rdx,[rsp+0x58]
   140035592:	mov    rcx,rax
   140035595:	call   0x140003c20
   14003559a:	lea    rdi,[rsp+0xa8]
   1400355a2:	mov    rsi,rax
   1400355a5:	mov    ecx,0x10
   1400355aa:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400355ac:	lea    rdi,[rsp+0x20]
   1400355b1:	lea    rsi,[rsp+0xa8]
   1400355b9:	mov    ecx,0x10
   1400355be:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400355c0:	jmp    0x1400355cc
   1400355c2:	lea    rcx,[rsp+0x20]
   1400355c7:	call   0x140004ed0
   1400355cc:	mov    rcx,QWORD PTR [rsp+0xe0]
   1400355d4:	add    rcx,0x318
   1400355db:	call   0x140004b70
   1400355e0:	lea    rdx,[rsp+0x68]
   1400355e5:	mov    rcx,rax
   1400355e8:	call   0x140006690
   1400355ed:	mov    rdx,rax
   1400355f0:	lea    rcx,[rsp+0x20]
   1400355f5:	call   0x140004f40
   1400355fa:	movzx  eax,al
   1400355fd:	test   eax,eax
   1400355ff:	je     0x140035621
   140035601:	lea    rcx,[rsp+0x20]
   140035606:	call   0x140004e70
   14003560b:	mov    rcx,QWORD PTR [rsp+0xe8]
   140035613:	add    rcx,0x10
   140035617:	mov    rdx,rax
   14003561a:	call   0x140003ab0
   14003561f:	jmp    0x1400355c2
   140035621:	mov    rcx,QWORD PTR [rsp+0xe0]
   140035629:	add    rcx,0x3e0
   140035630:	call   0x140004b70
   140035635:	lea    rdx,[rsp+0x78]
   14003563a:	mov    rcx,rax
   14003563d:	call   0x140003c20
   140035642:	lea    rdi,[rsp+0x98]
   14003564a:	mov    rsi,rax
   14003564d:	mov    ecx,0x10
   140035652:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140035654:	lea    rdi,[rsp+0x20]
   140035659:	lea    rsi,[rsp+0x98]
   140035661:	mov    ecx,0x10
   140035666:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140035668:	jmp    0x140035674
   14003566a:	lea    rcx,[rsp+0x20]
   14003566f:	call   0x140004ed0
   140035674:	mov    rcx,QWORD PTR [rsp+0xe0]
   14003567c:	add    rcx,0x3e0
   140035683:	call   0x140004b70
   140035688:	lea    rdx,[rsp+0x88]
   140035690:	mov    rcx,rax
   140035693:	call   0x140006690
   140035698:	mov    rdx,rax
   14003569b:	lea    rcx,[rsp+0x20]
   1400356a0:	call   0x140004f40
   1400356a5:	movzx  eax,al
   1400356a8:	test   eax,eax
   1400356aa:	je     0x1400356cc
   1400356ac:	lea    rcx,[rsp+0x20]
   1400356b1:	call   0x140004e70
   1400356b6:	mov    rcx,QWORD PTR [rsp+0xe8]
   1400356be:	add    rcx,0x38
   1400356c2:	mov    rdx,rax
   1400356c5:	call   0x140003ab0
   1400356ca:	jmp    0x14003566a
   1400356cc:	xor    eax,eax
   1400356ce:	add    rsp,0xc8
   1400356d5:	pop    rdi
   1400356d6:	pop    rsi
   1400356d7:	ret    
   1400356d8:	int3   
   1400356d9:	int3   
   1400356da:	int3   
   1400356db:	int3   
   1400356dc:	int3   
   1400356dd:	int3   
   1400356de:	int3   
   1400356df:	int3   
   1400356e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400356e5:	sub    rsp,0x178
   1400356ec:	mov    QWORD PTR [rsp+0x168],0xfffffffffffffffe
   1400356f8:	lea    rdx,[rip+0x96f1]        # 0x14003edf0
   1400356ff:	lea    rcx,[rsp+0x20]
   140035704:	call   0x140003a30
   140035709:	nop
   14003570a:	lea    rdx,[rip+0x972f]        # 0x14003ee40
   140035711:	lea    rcx,[rsp+0x48]
   140035716:	call   0x140003a30
   14003571b:	nop
   14003571c:	mov    rcx,QWORD PTR [rsp+0x180]
   140035724:	add    rcx,0x148
   14003572b:	lea    r8,[rsp+0x20]
   140035730:	lea    rdx,[rsp+0x48]
   140035735:	call   0x1400044f0
   14003573a:	nop
   14003573b:	lea    rcx,[rsp+0x48]
   140035740:	call   0x140003a90
   140035745:	nop
   140035746:	lea    rcx,[rsp+0x20]
   14003574b:	call   0x140003a90
   140035750:	lea    rdx,[rip+0x96f9]        # 0x14003ee50
   140035757:	lea    rcx,[rsp+0x70]
   14003575c:	call   0x140003a30
   140035761:	nop
   140035762:	lea    rdx,[rip+0x972f]        # 0x14003ee98
   140035769:	lea    rcx,[rsp+0x98]
   140035771:	call   0x140003a30
   140035776:	nop
   140035777:	mov    rcx,QWORD PTR [rsp+0x180]
   14003577f:	add    rcx,0x148
   140035786:	lea    r8,[rsp+0x70]
   14003578b:	lea    rdx,[rsp+0x98]
   140035793:	call   0x1400044f0
   140035798:	nop
   140035799:	lea    rcx,[rsp+0x98]
   1400357a1:	call   0x140003a90
   1400357a6:	nop
   1400357a7:	lea    rcx,[rsp+0x70]
   1400357ac:	call   0x140003a90
   1400357b1:	lea    rdx,[rip+0x96f8]        # 0x14003eeb0
   1400357b8:	lea    rcx,[rsp+0xc0]
   1400357c0:	call   0x140003a30
   1400357c5:	nop
   1400357c6:	lea    rdx,[rip+0x9723]        # 0x14003eef0
   1400357cd:	lea    rcx,[rsp+0xe8]
   1400357d5:	call   0x140003a30
   1400357da:	nop
   1400357db:	mov    rcx,QWORD PTR [rsp+0x180]
   1400357e3:	add    rcx,0x148
   1400357ea:	lea    r8,[rsp+0xc0]
   1400357f2:	lea    rdx,[rsp+0xe8]
   1400357fa:	call   0x1400044f0
   1400357ff:	nop
   140035800:	lea    rcx,[rsp+0xe8]
   140035808:	call   0x140003a90
   14003580d:	nop
   14003580e:	lea    rcx,[rsp+0xc0]
   140035816:	call   0x140003a90
   14003581b:	mov    DWORD PTR [rsp+0x110],0x0
   140035826:	mov    rcx,QWORD PTR [rsp+0x180]
   14003582e:	add    rcx,0x270
   140035835:	lea    rdx,[rsp+0x110]
   14003583d:	call   0x140004960
   140035842:	lea    rdx,[rip+0x96b7]        # 0x14003ef00
   140035849:	lea    rcx,[rsp+0x118]
   140035851:	call   0x140003a30
   140035856:	nop
   140035857:	mov    rcx,QWORD PTR [rsp+0x180]
   14003585f:	add    rcx,0x148
   140035866:	lea    rdx,[rsp+0x118]
   14003586e:	call   0x140004630
   140035873:	nop
   140035874:	lea    rcx,[rsp+0x118]
   14003587c:	call   0x140003a90
   140035881:	lea    rdx,[rip+0x9688]        # 0x14003ef10
   140035888:	lea    rcx,[rsp+0x140]
   140035890:	call   0x140003a30
   140035895:	nop
   140035896:	mov    rcx,QWORD PTR [rsp+0x180]
   14003589e:	add    rcx,0x668
   1400358a5:	lea    rdx,[rsp+0x140]
   1400358ad:	call   0x140004630
   1400358b2:	nop
   1400358b3:	lea    rcx,[rsp+0x140]
   1400358bb:	call   0x140003a90
   1400358c0:	mov    rdx,QWORD PTR [rsp+0x180]
   1400358c8:	add    rdx,0x148
   1400358cf:	mov    rcx,QWORD PTR [rsp+0x180]
   1400358d7:	call   0x140032590
   1400358dc:	mov    rdx,QWORD PTR [rsp+0x180]
   1400358e4:	add    rdx,0x270
   1400358eb:	mov    rcx,QWORD PTR [rsp+0x180]
   1400358f3:	call   0x140032590
   1400358f8:	mov    rdx,QWORD PTR [rsp+0x180]
   140035900:	add    rdx,0x318
   140035907:	mov    rcx,QWORD PTR [rsp+0x180]
   14003590f:	call   0x140032590
   140035914:	mov    rdx,QWORD PTR [rsp+0x180]
   14003591c:	add    rdx,0x3e0
   140035923:	mov    rcx,QWORD PTR [rsp+0x180]
   14003592b:	call   0x140032590
   140035930:	mov    rdx,QWORD PTR [rsp+0x180]
   140035938:	add    rdx,0x668
   14003593f:	mov    rcx,QWORD PTR [rsp+0x180]
   140035947:	call   0x140032590
   14003594c:	mov    rdx,QWORD PTR [rsp+0x180]
   140035954:	add    rdx,0x4a8
   14003595b:	mov    rcx,QWORD PTR [rsp+0x180]
   140035963:	call   0x140032590
   140035968:	mov    rdx,QWORD PTR [rsp+0x180]
   140035970:	add    rdx,0x518
   140035977:	mov    rcx,QWORD PTR [rsp+0x180]
   14003597f:	call   0x140032590
   140035984:	mov    rdx,QWORD PTR [rsp+0x180]
   14003598c:	add    rdx,0x588
   140035993:	mov    rcx,QWORD PTR [rsp+0x180]
   14003599b:	call   0x140032590
   1400359a0:	mov    rdx,QWORD PTR [rsp+0x180]
   1400359a8:	add    rdx,0x5f8
   1400359af:	mov    rcx,QWORD PTR [rsp+0x180]
   1400359b7:	call   0x140032590
   1400359bc:	add    rsp,0x178
   1400359c3:	ret    
   1400359c4:	int3   
   1400359c5:	int3   
   1400359c6:	int3   
   1400359c7:	int3   
   1400359c8:	int3   
   1400359c9:	int3   
   1400359ca:	int3   
   1400359cb:	int3   
   1400359cc:	int3   
   1400359cd:	int3   
   1400359ce:	int3   
   1400359cf:	int3   
   1400359d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400359d5:	sub    rsp,0x3c8
   1400359dc:	mov    QWORD PTR [rsp+0x3b8],0xfffffffffffffffe
   1400359e8:	mov    dl,0x1
   1400359ea:	mov    rcx,QWORD PTR [rsp+0x3d0]
   1400359f2:	call   0x140034240
   1400359f7:	nop
   1400359f8:	mov    rcx,QWORD PTR [rsp+0x3d0]
   140035a00:	lea    rax,[rip+0x9ab1]        # 0x14003f4b8
   140035a07:	mov    QWORD PTR [rcx],rax
   140035a0a:	lea    rdx,[rip+0x8fb7]        # 0x14003e9c8
   140035a11:	lea    rcx,[rsp+0x20]
   140035a16:	call   0x140003a30
   140035a1b:	nop
   140035a1c:	lea    rdx,[rip+0x8fb5]        # 0x14003e9d8
   140035a23:	lea    rcx,[rsp+0x48]
   140035a28:	call   0x140003a30
   140035a2d:	nop
   140035a2e:	lea    rdx,[rip+0x8f9f]        # 0x14003e9d4
   140035a35:	lea    rcx,[rsp+0x70]
   140035a3a:	call   0x140003a30
   140035a3f:	nop
   140035a40:	mov    rcx,QWORD PTR [rsp+0x3d0]
   140035a48:	add    rcx,0x148
   140035a4f:	lea    r9,[rsp+0x20]
   140035a54:	lea    r8,[rsp+0x48]
   140035a59:	lea    rdx,[rsp+0x70]
   140035a5e:	call   0x140003c80
   140035a63:	nop
   140035a64:	lea    rcx,[rsp+0x70]
   140035a69:	call   0x140003a90
   140035a6e:	nop
   140035a6f:	lea    rcx,[rsp+0x48]
   140035a74:	call   0x140003a90
   140035a79:	nop
   140035a7a:	lea    rcx,[rsp+0x20]
   140035a7f:	call   0x140003a90
   140035a84:	lea    rdx,[rip+0x8f8d]        # 0x14003ea18
   140035a8b:	lea    rcx,[rsp+0x98]
   140035a93:	call   0x140003a30
   140035a98:	nop
   140035a99:	lea    rdx,[rip+0x8f90]        # 0x14003ea30
   140035aa0:	lea    rcx,[rsp+0xc0]
   140035aa8:	call   0x140003a30
   140035aad:	nop
   140035aae:	lea    rdx,[rip+0x8f6f]        # 0x14003ea24
   140035ab5:	lea    rcx,[rsp+0xe8]
   140035abd:	call   0x140003a30
   140035ac2:	nop
   140035ac3:	mov    rcx,QWORD PTR [rsp+0x3d0]
   140035acb:	add    rcx,0x270
   140035ad2:	lea    r9,[rsp+0x98]
   140035ada:	lea    r8,[rsp+0xc0]
   140035ae2:	lea    rdx,[rsp+0xe8]
   140035aea:	call   0x1400048f0
   140035aef:	nop
   140035af0:	lea    rcx,[rsp+0xe8]
   140035af8:	call   0x140003a90
   140035afd:	nop
   140035afe:	lea    rcx,[rsp+0xc0]
   140035b06:	call   0x140003a90
   140035b0b:	nop
   140035b0c:	lea    rcx,[rsp+0x98]
   140035b14:	call   0x140003a90
   140035b19:	lea    rdx,[rip+0x8f90]        # 0x14003eab0
   140035b20:	lea    rcx,[rsp+0x110]
   140035b28:	call   0x140003a30
   140035b2d:	nop
   140035b2e:	lea    rdx,[rip+0x8f8b]        # 0x14003eac0
   140035b35:	lea    rcx,[rsp+0x138]
   140035b3d:	call   0x140003a30
   140035b42:	nop
   140035b43:	lea    rdx,[rip+0x8ede]        # 0x14003ea28
   140035b4a:	lea    rcx,[rsp+0x160]
   140035b52:	call   0x140003a30
   140035b57:	nop
   140035b58:	mov    rcx,QWORD PTR [rsp+0x3d0]
   140035b60:	add    rcx,0x318
   140035b67:	lea    r9,[rsp+0x110]
   140035b6f:	lea    r8,[rsp+0x138]
   140035b77:	lea    rdx,[rsp+0x160]
   140035b7f:	call   0x140004a50
   140035b84:	nop
   140035b85:	lea    rcx,[rsp+0x160]
   140035b8d:	call   0x140003a90
   140035b92:	nop
   140035b93:	lea    rcx,[rsp+0x138]
   140035b9b:	call   0x140003a90
   140035ba0:	nop
   140035ba1:	lea    rcx,[rsp+0x110]
   140035ba9:	call   0x140003a90
   140035bae:	lea    rdx,[rip+0x8f53]        # 0x14003eb08
   140035bb5:	lea    rcx,[rsp+0x188]
   140035bbd:	call   0x140003a30
   140035bc2:	nop
   140035bc3:	lea    rdx,[rip+0x8f4e]        # 0x14003eb18
   140035bca:	lea    rcx,[rsp+0x1b0]
   140035bd2:	call   0x140003a30
   140035bd7:	nop
   140035bd8:	lea    rdx,[rip+0x8e4d]        # 0x14003ea2c
   140035bdf:	lea    rcx,[rsp+0x1d8]
   140035be7:	call   0x140003a30
   140035bec:	nop
   140035bed:	mov    rcx,QWORD PTR [rsp+0x3d0]
   140035bf5:	add    rcx,0x3e0
   140035bfc:	lea    r9,[rsp+0x188]
   140035c04:	lea    r8,[rsp+0x1b0]
   140035c0c:	lea    rdx,[rsp+0x1d8]
   140035c14:	call   0x140004b90
   140035c19:	nop
   140035c1a:	lea    rcx,[rsp+0x1d8]
   140035c22:	call   0x140003a90
   140035c27:	nop
   140035c28:	lea    rcx,[rsp+0x1b0]
   140035c30:	call   0x140003a90
   140035c35:	nop
   140035c36:	lea    rcx,[rsp+0x188]
   140035c3e:	call   0x140003a90
   140035c43:	lea    rdx,[rip+0x8ef6]        # 0x14003eb40
   140035c4a:	lea    rcx,[rsp+0x200]
   140035c52:	call   0x140003a30
   140035c57:	nop
   140035c58:	lea    rdx,[rip+0x8e4d]        # 0x14003eaac
   140035c5f:	lea    rcx,[rsp+0x228]
   140035c67:	call   0x140003a30
   140035c6c:	nop
   140035c6d:	mov    rcx,QWORD PTR [rsp+0x3d0]
   140035c75:	add    rcx,0x4a8
   140035c7c:	lea    r8,[rsp+0x200]
   140035c84:	lea    rdx,[rsp+0x228]
   140035c8c:	call   0x140033c70
   140035c91:	nop
   140035c92:	lea    rcx,[rsp+0x228]
   140035c9a:	call   0x140003a90
   140035c9f:	nop
   140035ca0:	lea    rcx,[rsp+0x200]
   140035ca8:	call   0x140003a90
   140035cad:	lea    rdx,[rip+0x8efc]        # 0x14003ebb0
   140035cb4:	lea    rcx,[rsp+0x250]
   140035cbc:	call   0x140003a30
   140035cc1:	nop
   140035cc2:	lea    rdx,[rip+0x8df3]        # 0x14003eabc
   140035cc9:	lea    rcx,[rsp+0x278]
   140035cd1:	call   0x140003a30
   140035cd6:	nop
   140035cd7:	mov    rcx,QWORD PTR [rsp+0x3d0]
   140035cdf:	add    rcx,0x518
   140035ce6:	lea    r8,[rsp+0x250]
   140035cee:	lea    rdx,[rsp+0x278]
   140035cf6:	call   0x140033c70
   140035cfb:	nop
   140035cfc:	lea    rcx,[rsp+0x278]
   140035d04:	call   0x140003a90
   140035d09:	nop
   140035d0a:	lea    rcx,[rsp+0x250]
   140035d12:	call   0x140003a90
   140035d17:	lea    rdx,[rip+0x8f02]        # 0x14003ec20
   140035d1e:	lea    rcx,[rsp+0x2a0]
   140035d26:	call   0x140003a30
   140035d2b:	nop
   140035d2c:	lea    rdx,[rip+0x8de1]        # 0x14003eb14
   140035d33:	lea    rcx,[rsp+0x2c8]
   140035d3b:	call   0x140003a30
   140035d40:	nop
   140035d41:	mov    rcx,QWORD PTR [rsp+0x3d0]
   140035d49:	add    rcx,0x588
   140035d50:	lea    r8,[rsp+0x2a0]
   140035d58:	lea    rdx,[rsp+0x2c8]
   140035d60:	call   0x140033c70
   140035d65:	nop
   140035d66:	lea    rcx,[rsp+0x2c8]
   140035d6e:	call   0x140003a90
   140035d73:	nop
   140035d74:	lea    rcx,[rsp+0x2a0]
   140035d7c:	call   0x140003a90
   140035d81:	lea    rdx,[rip+0x8f78]        # 0x14003ed00
   140035d88:	lea    rcx,[rsp+0x2f0]
   140035d90:	call   0x140003a30
   140035d95:	nop
   140035d96:	lea    rdx,[rip+0x8e77]        # 0x14003ec14
   140035d9d:	lea    rcx,[rsp+0x318]
   140035da5:	call   0x140003a30
   140035daa:	nop
   140035dab:	mov    rcx,QWORD PTR [rsp+0x3d0]
   140035db3:	add    rcx,0x5f8
   140035dba:	lea    r8,[rsp+0x2f0]
   140035dc2:	lea    rdx,[rsp+0x318]
   140035dca:	call   0x140033c70
   140035dcf:	nop
   140035dd0:	lea    rcx,[rsp+0x318]
   140035dd8:	call   0x140003a90
   140035ddd:	nop
   140035dde:	lea    rcx,[rsp+0x2f0]
   140035de6:	call   0x140003a90
   140035deb:	lea    rdx,[rip+0x8f5e]        # 0x14003ed50
   140035df2:	lea    rcx,[rsp+0x340]
   140035dfa:	call   0x140003a30
   140035dff:	nop
   140035e00:	lea    rdx,[rip+0x8f59]        # 0x14003ed60
   140035e07:	lea    rcx,[rsp+0x368]
   140035e0f:	call   0x140003a30
   140035e14:	nop
   140035e15:	lea    rdx,[rip+0x8ee0]        # 0x14003ecfc
   140035e1c:	lea    rcx,[rsp+0x390]
   140035e24:	call   0x140003a30
   140035e29:	nop
   140035e2a:	mov    rcx,QWORD PTR [rsp+0x3d0]
   140035e32:	add    rcx,0x668
   140035e39:	lea    r9,[rsp+0x340]
   140035e41:	lea    r8,[rsp+0x368]
   140035e49:	lea    rdx,[rsp+0x390]
   140035e51:	call   0x140004590
   140035e56:	nop
   140035e57:	lea    rcx,[rsp+0x390]
   140035e5f:	call   0x140003a90
   140035e64:	nop
   140035e65:	lea    rcx,[rsp+0x368]
   140035e6d:	call   0x140003a90
   140035e72:	nop
   140035e73:	lea    rcx,[rsp+0x340]
   140035e7b:	call   0x140003a90
   140035e80:	nop
   140035e81:	mov    rax,QWORD PTR [rsp+0x3d0]
   140035e89:	add    rsp,0x3c8
   140035e90:	ret    
   140035e91:	int3   
   140035e92:	int3   
   140035e93:	int3   
   140035e94:	int3   
   140035e95:	int3   
   140035e96:	int3   
   140035e97:	int3   
   140035e98:	int3   
   140035e99:	int3   
   140035e9a:	int3   
   140035e9b:	int3   
   140035e9c:	int3   
   140035e9d:	int3   
   140035e9e:	int3   
   140035e9f:	int3   
   140035ea0:	mov    QWORD PTR [rsp+0x18],r8
   140035ea5:	mov    QWORD PTR [rsp+0x10],rdx
   140035eaa:	mov    QWORD PTR [rsp+0x8],rcx
   140035eaf:	push   rbx
   140035eb0:	sub    rsp,0xf0
   140035eb7:	mov    QWORD PTR [rsp+0xd8],0xfffffffffffffffe
   140035ec3:	mov    rax,QWORD PTR [rip+0x13596]        # 0x140049460
   140035eca:	xor    rax,rsp
   140035ecd:	mov    QWORD PTR [rsp+0xe0],rax
   140035ed5:	mov    DWORD PTR [rsp+0x40],0x80004005
   140035edd:	mov    QWORD PTR [rsp+0x38],0x0
   140035ee6:	mov    QWORD PTR [rsp+0x30],0x0
   140035eef:	mov    rax,QWORD PTR [rsp+0x100]
   140035ef7:	movzx  eax,BYTE PTR [rax+0x8]
   140035efb:	test   eax,eax
   140035efd:	jne    0x140035f29
   140035eff:	lea    rax,[rsp+0x30]
   140035f04:	mov    QWORD PTR [rsp+0x20],rax
   140035f09:	lea    r9,[rip+0x46e0]        # 0x14003a5f0
   140035f10:	mov    r8d,0x17
   140035f16:	xor    edx,edx
   140035f18:	lea    rcx,[rip+0x46e1]        # 0x14003a600
   140035f1f:	call   QWORD PTR [rip+0x44fb]        # 0x14003a420
   140035f25:	mov    DWORD PTR [rsp+0x40],eax
   140035f29:	cmp    DWORD PTR [rsp+0x40],0x0
   140035f2e:	jge    0x140035f7a
   140035f30:	lea    r9,[rip+0x7d19]        # 0x14003dc50
   140035f37:	mov    r8d,0x1d
   140035f3d:	lea    rdx,[rip+0x7d6c]        # 0x14003dcb0
   140035f44:	mov    ecx,0x3
   140035f49:	call   0x140031440
   140035f4e:	lea    r11,[rsp+0x38]
   140035f53:	mov    QWORD PTR [rsp+0x20],r11
   140035f58:	lea    r9,[rip+0x4671]        # 0x14003a5d0
   140035f5f:	mov    r8d,0x17
   140035f65:	xor    edx,edx
   140035f67:	lea    rcx,[rip+0x4692]        # 0x14003a600
   140035f6e:	call   QWORD PTR [rip+0x44ac]        # 0x14003a420
   140035f74:	mov    DWORD PTR [rsp+0x40],eax
   140035f78:	jmp    0x140035fa2
   140035f7a:	lea    r9,[rip+0x7d5f]        # 0x14003dce0
   140035f81:	mov    r8d,0x22
   140035f87:	lea    rdx,[rip+0x7daa]        # 0x14003dd38
   140035f8e:	mov    ecx,0x2
   140035f93:	call   0x140031440
   140035f98:	mov    r11,QWORD PTR [rsp+0x30]
   140035f9d:	mov    QWORD PTR [rsp+0x38],r11
   140035fa2:	cmp    DWORD PTR [rsp+0x40],0x0
   140035fa7:	jl     0x140036186
   140035fad:	lea    rdx,[rip+0x7da8]        # 0x14003dd5c
   140035fb4:	lea    rcx,[rsp+0xa8]
   140035fbc:	call   0x140003a30
   140035fc1:	nop
   140035fc2:	lea    rdx,[rip+0x79c3]        # 0x14003d98c
   140035fc9:	lea    rcx,[rsp+0x80]
   140035fd1:	call   0x140003a30
   140035fd6:	nop
   140035fd7:	mov    rdx,QWORD PTR [rsp+0x100]
   140035fdf:	add    rdx,0x38
   140035fe3:	lea    rcx,[rsp+0x58]
   140035fe8:	call   0x140005d30
   140035fed:	nop
   140035fee:	mov    QWORD PTR [rsp+0xd0],0x0
   140035ffa:	mov    r8,QWORD PTR [rsp+0xd0]
   140036002:	lea    rdx,[rsp+0xa8]
   14003600a:	lea    rcx,[rsp+0x58]
   14003600f:	call   0x1400060f0
   140036014:	mov    QWORD PTR [rsp+0x48],rax
   140036019:	mov    rax,QWORD PTR [rip+0x92d8]        # 0x14003f2f8
   140036020:	cmp    QWORD PTR [rsp+0x48],rax
   140036025:	je     0x140036061
   140036027:	lea    rcx,[rsp+0xa8]
   14003602f:	call   0x140003bb0
   140036034:	lea    r9,[rsp+0x80]
   14003603c:	mov    r8,rax
   14003603f:	mov    rdx,QWORD PTR [rsp+0x48]
   140036044:	lea    rcx,[rsp+0x58]
   140036049:	call   0x1400083e0
   14003604e:	mov    rax,QWORD PTR [rsp+0x48]
   140036053:	add    rax,0x1
   140036057:	mov    QWORD PTR [rsp+0xd0],rax
   14003605f:	jmp    0x140035ffa
   140036061:	mov    rcx,QWORD PTR [rsp+0x100]
   140036069:	add    rcx,0x10
   14003606d:	call   0x140003b90
   140036072:	mov    r8,rax
   140036075:	mov    rax,QWORD PTR [rsp+0x38]
   14003607a:	mov    rax,QWORD PTR [rax]
   14003607d:	mov    rdx,QWORD PTR [rsp+0x100]
   140036085:	mov    rdx,QWORD PTR [rdx+0x60]
   140036089:	mov    rcx,QWORD PTR [rsp+0x38]
   14003608e:	call   QWORD PTR [rax+0x28]
   140036091:	mov    DWORD PTR [rsp+0x40],eax
   140036095:	lea    rcx,[rsp+0x58]
   14003609a:	call   0x140003b90
   14003609f:	mov    rbx,rax
   1400360a2:	mov    rcx,QWORD PTR [rsp+0x100]
   1400360aa:	add    rcx,0x10
   1400360ae:	call   0x140003b90
   1400360b3:	mov    rdx,rax
   1400360b6:	mov    r10,QWORD PTR [rsp+0x38]
   1400360bb:	mov    r10,QWORD PTR [r10]
   1400360be:	mov    rax,QWORD PTR [rsp+0x100]
   1400360c6:	mov    r9d,DWORD PTR [rax+0x4]
   1400360ca:	mov    r8,rbx
   1400360cd:	mov    rcx,QWORD PTR [rsp+0x38]
   1400360d2:	call   QWORD PTR [r10+0x18]
   1400360d6:	mov    DWORD PTR [rsp+0x40],eax
   1400360da:	mov    rax,QWORD PTR [rsp+0x38]
   1400360df:	mov    rax,QWORD PTR [rax]
   1400360e2:	xor    r9d,r9d
   1400360e5:	mov    r8d,0xfa
   1400360eb:	xor    edx,edx
   1400360ed:	mov    rcx,QWORD PTR [rsp+0x38]
   1400360f2:	call   QWORD PTR [rax+0x20]
   1400360f5:	mov    DWORD PTR [rsp+0x40],eax
   1400360f9:	cmp    QWORD PTR [rsp+0x30],0x0
   1400360ff:	je     0x14003612d
   140036101:	mov    rax,QWORD PTR [rsp+0x30]
   140036106:	mov    rax,QWORD PTR [rax]
   140036109:	mov    r9,QWORD PTR [rsp+0x110]
   140036111:	mov    r8d,0xfa
   140036117:	mov    rdx,QWORD PTR [rsp+0x108]
   14003611f:	mov    rcx,QWORD PTR [rsp+0x30]
   140036124:	call   QWORD PTR [rax+0x30]
   140036127:	mov    DWORD PTR [rsp+0x40],eax
   14003612b:	jmp    0x14003614f
   14003612d:	mov    rax,QWORD PTR [rsp+0x38]
   140036132:	mov    rax,QWORD PTR [rax]
   140036135:	mov    r8d,0xfa
   14003613b:	mov    rdx,QWORD PTR [rsp+0x108]
   140036143:	mov    rcx,QWORD PTR [rsp+0x38]
   140036148:	call   QWORD PTR [rax+0x30]
   14003614b:	mov    DWORD PTR [rsp+0x40],eax
   14003614f:	mov    rax,QWORD PTR [rsp+0x38]
   140036154:	mov    rax,QWORD PTR [rax]
   140036157:	mov    rcx,QWORD PTR [rsp+0x38]
   14003615c:	call   QWORD PTR [rax+0x10]
   14003615f:	nop
   140036160:	lea    rcx,[rsp+0x58]
   140036165:	call   0x140003a90
   14003616a:	nop
   14003616b:	lea    rcx,[rsp+0x80]
   140036173:	call   0x140003a90
   140036178:	nop
   140036179:	lea    rcx,[rsp+0xa8]
   140036181:	call   0x140003a90
   140036186:	mov    eax,DWORD PTR [rsp+0x40]
   14003618a:	mov    rcx,QWORD PTR [rsp+0xe0]
   140036192:	xor    rcx,rsp
   140036195:	call   0x14001c500
   14003619a:	add    rsp,0xf0
   1400361a1:	pop    rbx
   1400361a2:	ret    
   1400361a3:	int3   
   1400361a4:	int3   
   1400361a5:	int3   
   1400361a6:	int3   
   1400361a7:	int3   
   1400361a8:	int3   
   1400361a9:	int3   
   1400361aa:	int3   
   1400361ab:	int3   
   1400361ac:	int3   
   1400361ad:	int3   
   1400361ae:	int3   
   1400361af:	int3   
   1400361b0:	mov    DWORD PTR [rsp+0x20],r9d
   1400361b5:	mov    QWORD PTR [rsp+0x18],r8
   1400361ba:	mov    QWORD PTR [rsp+0x10],rdx
   1400361bf:	mov    QWORD PTR [rsp+0x8],rcx
   1400361c4:	sub    rsp,0x198
   1400361cb:	mov    rax,QWORD PTR [rip+0x1328e]        # 0x140049460
   1400361d2:	xor    rax,rsp
   1400361d5:	mov    QWORD PTR [rsp+0x188],rax
   1400361dd:	mov    DWORD PTR [rsp+0x30],0xff
   1400361e5:	call   QWORD PTR [rip+0x3f1d]        # 0x14003a108
   1400361eb:	mov    rcx,rax
   1400361ee:	call   QWORD PTR [rip+0x3f0c]        # 0x14003a100
   1400361f4:	mov    DWORD PTR [rsp+0x20],eax
   1400361f8:	lea    r9,[rip+0x7b81]        # 0x14003dd80
   1400361ff:	mov    r8d,0x2b
   140036205:	lea    rdx,[rip+0x7c04]        # 0x14003de10
   14003620c:	mov    ecx,0x2
   140036211:	call   0x140031440
   140036216:	lea    r11,[rip+0x7c13]        # 0x14003de30
   14003621d:	mov    QWORD PTR [rsp+0x20],r11
   140036222:	lea    r9,[rip+0x7c27]        # 0x14003de50
   140036229:	mov    r8d,0x2c
   14003622f:	lea    rdx,[rip+0x7c32]        # 0x14003de68
   140036236:	mov    ecx,0x2
   14003623b:	call   0x140031440
   140036240:	lea    rcx,[rip+0x168d9]        # 0x14004cb20
   140036247:	call   0x1400356e0
   14003624c:	mov    rdx,QWORD PTR [rsp+0x1b0]
   140036254:	lea    rcx,[rsp+0xe0]
   14003625c:	call   0x140003a30
   140036261:	xor    r9d,r9d
   140036264:	mov    r8b,0x1
   140036267:	lea    rdx,[rsp+0xe0]
   14003626f:	lea    rcx,[rip+0x168aa]        # 0x14004cb20
   140036276:	call   0x140033a10
   14003627b:	lea    rcx,[rsp+0xe0]
   140036283:	call   0x140003a90
   140036288:	lea    rcx,[rip+0x16d39]        # 0x14004cfc8
   14003628f:	call   0x140032100
   140036294:	movzx  eax,al
   140036297:	test   eax,eax
   140036299:	je     0x140036336
   14003629f:	mov    cl,0x1
   1400362a1:	call   0x140031730
   1400362a6:	test   eax,eax
   1400362a8:	jne    0x140036301
   1400362aa:	lea    rcx,[rip+0x1686f]        # 0x14004cb20
   1400362b1:	call   0x1400320c0
   1400362b6:	movzx  eax,al
   1400362b9:	test   eax,eax
   1400362bb:	je     0x1400362ff
   1400362bd:	mov    DWORD PTR [rsp+0x30],0x0
   1400362c5:	lea    rdx,[rip+0x7bc4]        # 0x14003de90
   1400362cc:	lea    rcx,[rsp+0x108]
   1400362d4:	call   0x140003a30
   1400362d9:	lea    rdx,[rsp+0x108]
   1400362e1:	lea    rcx,[rip+0x16838]        # 0x14004cb20
   1400362e8:	call   0x140034570
   1400362ed:	lea    rcx,[rsp+0x108]
   1400362f5:	call   0x140003a90
   1400362fa:	jmp    0x140036514
   1400362ff:	jmp    0x140036336
   140036301:	lea    rdx,[rip+0x7cc8]        # 0x14003dfd0
   140036308:	lea    rcx,[rsp+0x130]
   140036310:	call   0x140003a30
   140036315:	lea    rdx,[rsp+0x130]
   14003631d:	lea    rcx,[rip+0x167fc]        # 0x14004cb20
   140036324:	call   0x140034570
   140036329:	lea    rcx,[rsp+0x130]
   140036331:	call   0x140003a90
   140036336:	lea    rcx,[rip+0x167e3]        # 0x14004cb20
   14003633d:	call   0x1400351d0
   140036342:	movzx  eax,al
   140036345:	test   eax,eax
   140036347:	je     0x14003650c
   14003634d:	xor    ecx,ecx
   14003634f:	call   QWORD PTR [rip+0x40d3]        # 0x14003a428
   140036355:	lea    rcx,[rsp+0x40]
   14003635a:	call   0x140013f80
   14003635f:	lea    rdx,[rsp+0x40]
   140036364:	lea    rcx,[rip+0x167b5]        # 0x14004cb20
   14003636b:	call   0x140035330
   140036370:	mov    edx,DWORD PTR [rsp+0x40]
   140036374:	lea    rcx,[rsp+0xc8]
   14003637c:	call   0x140031870
   140036381:	lea    rcx,[rsp+0xb0]
   140036389:	call   0x1400311a0
   14003638e:	call   0x1400316e0
   140036393:	lea    r8,[rsp+0xb0]
   14003639b:	lea    rdx,[rsp+0xc8]
   1400363a3:	lea    rcx,[rsp+0x40]
   1400363a8:	call   0x140035ea0
   1400363ad:	mov    DWORD PTR [rsp+0xc0],eax
   1400363b4:	call   0x140031640
   1400363b9:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400363c1:	call   QWORD PTR [rip+0x4019]        # 0x14003a3e0
   1400363c7:	lea    rcx,[rsp+0xb0]
   1400363cf:	call   0x1400310e0
   1400363d4:	mov    DWORD PTR [rsp+0x30],eax
   1400363d8:	cmp    DWORD PTR [rsp+0x30],0xff
   1400363e0:	jne    0x1400364fa
   1400363e6:	mov    eax,DWORD PTR [rsp+0xc0]
   1400363ed:	mov    DWORD PTR [rsp+0x180],eax
   1400363f4:	cmp    DWORD PTR [rsp+0x180],0x80004002
   1400363ff:	je     0x1400364bd
   140036405:	cmp    DWORD PTR [rsp+0x180],0x80040154
   140036410:	je     0x1400364bd
   140036416:	cmp    DWORD PTR [rsp+0x180],0x800704c7
   140036421:	je     0x14003643c
   140036423:	cmp    DWORD PTR [rsp+0x180],0x0
   14003642b:	je     0x140036449
   14003642d:	cmp    DWORD PTR [rsp+0x180],0x1
   140036435:	je     0x140036456
   140036437:	jmp    0x1400364fa
   14003643c:	mov    DWORD PTR [rsp+0x30],0x4
   140036444:	jmp    0x1400364fa
   140036449:	mov    DWORD PTR [rsp+0x30],0x3
   140036451:	jmp    0x1400364fa
   140036456:	lea    rcx,[rsp+0xc8]
   14003645e:	call   0x140031950
   140036463:	movzx  eax,al
   140036466:	test   eax,eax
   140036468:	je     0x140036474
   14003646a:	mov    DWORD PTR [rsp+0x30],0x2
   140036472:	jmp    0x1400364bb
   140036474:	lea    rcx,[rsp+0xc8]
   14003647c:	call   0x1400317d0
   140036481:	movzx  eax,al
   140036484:	test   eax,eax
   140036486:	je     0x140036492
   140036488:	mov    DWORD PTR [rsp+0x30],0x8
   140036490:	jmp    0x1400364bb
   140036492:	mov    eax,DWORD PTR [rsp+0xc0]
   140036499:	mov    DWORD PTR [rsp+0x20],eax
   14003649d:	lea    r9,[rip+0x7c5c]        # 0x14003e100
   1400364a4:	mov    r8d,0x68
   1400364aa:	lea    rdx,[rip+0x7c9f]        # 0x14003e150
   1400364b1:	mov    ecx,0x3
   1400364b6:	call   0x140031440
   1400364bb:	jmp    0x1400364fa
   1400364bd:	mov    DWORD PTR [rsp+0x30],0x5
   1400364c5:	lea    rdx,[rip+0x7ca4]        # 0x14003e170
   1400364cc:	lea    rcx,[rsp+0x158]
   1400364d4:	call   0x140003a30
   1400364d9:	lea    rdx,[rsp+0x158]
   1400364e1:	lea    rcx,[rip+0x16638]        # 0x14004cb20
   1400364e8:	call   0x140034570
   1400364ed:	lea    rcx,[rsp+0x158]
   1400364f5:	call   0x140003a90
   1400364fa:	call   QWORD PTR [rip+0x3f30]        # 0x14003a430
   140036500:	lea    rcx,[rsp+0x40]
   140036505:	call   0x140013fb0
   14003650a:	jmp    0x140036514
   14003650c:	mov    DWORD PTR [rsp+0x30],0x1
   140036514:	mov    eax,DWORD PTR [rsp+0x30]
   140036518:	mov    DWORD PTR [rsp+0x20],eax
   14003651c:	lea    r9,[rip+0x7ccd]        # 0x14003e1f0
   140036523:	mov    r8d,0x7b
   140036529:	lea    rdx,[rip+0x7ce0]        # 0x14003e210
   140036530:	mov    ecx,0x2
   140036535:	call   0x140031440
   14003653a:	mov    eax,DWORD PTR [rsp+0x30]
   14003653e:	mov    rcx,QWORD PTR [rsp+0x188]
   140036546:	xor    rcx,rsp
   140036549:	call   0x14001c500
   14003654e:	add    rsp,0x198
   140036555:	ret    
   140036556:	int3   
   140036557:	int3   
   140036558:	int3   
   140036559:	int3   
   14003655a:	int3   
   14003655b:	int3   
   14003655c:	int3   
   14003655d:	int3   
   14003655e:	int3   
   14003655f:	int3   
   140036560:	int3   
   140036561:	int3   
   140036562:	int3   
   140036563:	int3   
   140036564:	int3   
   140036565:	int3   
   140036566:	data16 nop WORD PTR [rax+rax*1+0x0]
   140036570:	sub    rsp,0x10
   140036574:	mov    QWORD PTR [rsp],r10
   140036578:	mov    QWORD PTR [rsp+0x8],r11
   14003657d:	xor    r11,r11
   140036580:	lea    r10,[rsp+0x18]
   140036585:	sub    r10,rax
   140036588:	cmovb  r10,r11
   14003658c:	mov    r11,QWORD PTR gs:0x10
   140036595:	cmp    r10,r11
   140036598:	jae    0x1400365b0
   14003659a:	and    r10w,0xf000
   1400365a0:	lea    r11,[r11-0x1000]
   1400365a7:	mov    BYTE PTR [r11],0x0
   1400365ab:	cmp    r10,r11
   1400365ae:	jne    0x1400365a0
   1400365b0:	mov    r10,QWORD PTR [rsp]
   1400365b4:	mov    r11,QWORD PTR [rsp+0x8]
   1400365b9:	add    rsp,0x10
   1400365bd:	ret    
   1400365be:	int3   
   1400365bf:	int3   
   1400365c0:	int3   
   1400365c1:	int3   
   1400365c2:	int3   
   1400365c3:	int3   
   1400365c4:	int3   
   1400365c5:	int3   
   1400365c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400365d0:	sub    rsp,0x28
   1400365d4:	mov    QWORD PTR [rsp+0x30],rcx
   1400365d9:	mov    QWORD PTR [rsp+0x38],rdx
   1400365de:	mov    DWORD PTR [rsp+0x40],r8d
   1400365e3:	mov    rdx,QWORD PTR [rdx]
   1400365e6:	mov    rax,rcx
   1400365e9:	call   0x140027230
   1400365ee:	call   rax
   1400365f0:	call   0x140027260
   1400365f5:	mov    rcx,rax
   1400365f8:	mov    rdx,QWORD PTR [rsp+0x38]
   1400365fd:	mov    rdx,QWORD PTR [rdx]
   140036600:	mov    r8d,0x2
   140036606:	call   0x140027230
   14003660b:	add    rsp,0x28
   14003660f:	ret    
   140036610:	rex push rbp
   140036612:	sub    rsp,0x20
   140036616:	mov    rbp,rdx
   140036619:	lea    rcx,[rbp+0x58]
   14003661d:	call   0x1400194ec
   140036622:	add    rsp,0x20
   140036626:	pop    rbp
   140036627:	ret    
   140036628:	rex push rbp
   14003662a:	sub    rsp,0x20
   14003662e:	mov    rbp,rdx
   140036631:	mov    rcx,QWORD PTR [rbp+0x40]
   140036635:	call   0x140001ac0
   14003663a:	add    rsp,0x20
   14003663e:	pop    rbp
   14003663f:	ret    
   140036640:	rex push rbp
   140036642:	sub    rsp,0x20
   140036646:	mov    rbp,rdx
   140036649:	mov    rcx,QWORD PTR [rbp+0x40]
   14003664d:	call   0x140001ac0
   140036652:	add    rsp,0x20
   140036656:	pop    rbp
   140036657:	ret    
   140036658:	int3   
   140036659:	int3   
   14003665a:	int3   
   14003665b:	int3   
   14003665c:	int3   
   14003665d:	int3   
   14003665e:	int3   
   14003665f:	int3   
   140036660:	rex push rbp
   140036662:	sub    rsp,0x20
   140036666:	mov    rbp,rdx
   140036669:	mov    rcx,QWORD PTR [rbp+0x40]
   14003666d:	add    rcx,0x28
   140036671:	call   0x140003220
   140036676:	add    rsp,0x20
   14003667a:	pop    rbp
   14003667b:	ret    
   14003667c:	rex push rbp
   14003667e:	sub    rsp,0x20
   140036682:	mov    rbp,rdx
   140036685:	lea    rcx,[rbp+0x48]
   140036689:	call   0x1400194ec
   14003668e:	add    rsp,0x20
   140036692:	pop    rbp
   140036693:	ret    
   140036694:	int3   
   140036695:	int3   
   140036696:	int3   
   140036697:	int3   
   140036698:	int3   
   140036699:	int3   
   14003669a:	int3   
   14003669b:	int3   
   14003669c:	rex push rbp
   14003669e:	sub    rsp,0x20
   1400366a2:	mov    rbp,rdx
   1400366a5:	mov    rcx,QWORD PTR [rbp+0x40]
   1400366a9:	call   0x14001c4dc
   1400366ae:	add    rsp,0x20
   1400366b2:	pop    rbp
   1400366b3:	ret    
   1400366b4:	rex push rbp
   1400366b6:	sub    rsp,0x20
   1400366ba:	mov    rbp,rdx
   1400366bd:	lea    rcx,[rbp+0x28]
   1400366c1:	call   0x140003220
   1400366c6:	add    rsp,0x20
   1400366ca:	pop    rbp
   1400366cb:	ret    
   1400366cc:	int3   
   1400366cd:	int3   
   1400366ce:	int3   
   1400366cf:	int3   
   1400366d0:	int3   
   1400366d1:	int3   
   1400366d2:	int3   
   1400366d3:	int3   
   1400366d4:	rex push rbp
   1400366d6:	sub    rsp,0x20
   1400366da:	mov    rbp,rdx
   1400366dd:	lea    rcx,[rbp+0x50]
   1400366e1:	call   0x14001c944
   1400366e6:	add    rsp,0x20
   1400366ea:	pop    rbp
   1400366eb:	ret    
   1400366ec:	rex push rbp
   1400366ee:	sub    rsp,0x20
   1400366f2:	mov    rbp,rdx
   1400366f5:	mov    rcx,QWORD PTR [rbp+0x40]
   1400366f9:	call   0x14001c944
   1400366fe:	add    rsp,0x20
   140036702:	pop    rbp
   140036703:	ret    
   140036704:	rex push rbp
   140036706:	sub    rsp,0x20
   14003670a:	mov    rbp,rdx
   14003670d:	lea    rcx,[rbp+0x90]
   140036714:	call   0x140003220
   140036719:	add    rsp,0x20
   14003671d:	pop    rbp
   14003671e:	ret    
   14003671f:	rex push rbp
   140036721:	sub    rsp,0x20
   140036725:	mov    rbp,rdx
   140036728:	lea    rcx,[rbp+0x80]
   14003672f:	call   0x140003220
   140036734:	add    rsp,0x20
   140036738:	pop    rbp
   140036739:	ret    
   14003673a:	rex push rbp
   14003673c:	sub    rsp,0x20
   140036740:	mov    rbp,rdx
   140036743:	mov    rcx,QWORD PTR [rbp+0x130]
   14003674a:	call   0x14001c4dc
   14003674f:	add    rsp,0x20
   140036753:	pop    rbp
   140036754:	ret    
   140036755:	int3   
   140036756:	int3   
   140036757:	int3   
   140036758:	int3   
   140036759:	int3   
   14003675a:	rex push rbp
   14003675c:	sub    rsp,0x20
   140036760:	mov    rbp,rdx
   140036763:	mov    eax,DWORD PTR [rbp+0x120]
   140036769:	and    eax,0x1
   14003676c:	test   eax,eax
   14003676e:	je     0x140036780
   140036770:	and    DWORD PTR [rbp+0x120],0xfffffffe
   140036777:	lea    rcx,[rbp+0x28]
   14003677b:	call   0x140003220
   140036780:	add    rsp,0x20
   140036784:	pop    rbp
   140036785:	ret    
   140036786:	rex push rbp
   140036788:	sub    rsp,0x20
   14003678c:	mov    rbp,rdx
   14003678f:	lea    rcx,[rbp+0xa0]
   140036796:	call   0x140003220
   14003679b:	add    rsp,0x20
   14003679f:	pop    rbp
   1400367a0:	ret    
   1400367a1:	rex push rbp
   1400367a3:	sub    rsp,0x20
   1400367a7:	mov    rbp,rdx
   1400367aa:	lea    rcx,[rbp+0x68]
   1400367ae:	call   0x1400194ec
   1400367b3:	add    rsp,0x20
   1400367b7:	pop    rbp
   1400367b8:	ret    
   1400367b9:	rex push rbp
   1400367bb:	sub    rsp,0x20
   1400367bf:	mov    rbp,rdx
   1400367c2:	mov    rcx,QWORD PTR [rbp+0x40]
   1400367c6:	call   0x1400034e0
   1400367cb:	add    rsp,0x20
   1400367cf:	pop    rbp
   1400367d0:	ret    
   1400367d1:	rex push rbp
   1400367d3:	sub    rsp,0x20
   1400367d7:	mov    rbp,rdx
   1400367da:	mov    eax,DWORD PTR [rbp+0x40]
   1400367dd:	and    eax,0x1
   1400367e0:	test   eax,eax
   1400367e2:	je     0x1400367f8
   1400367e4:	and    DWORD PTR [rbp+0x40],0xfffffffe
   1400367e8:	lea    rcx,[rip+0x128b1]        # 0x1400490a0
   1400367ef:	add    rcx,0x8
   1400367f3:	call   0x1400033d0
   1400367f8:	add    rsp,0x20
   1400367fc:	pop    rbp
   1400367fd:	ret    
   1400367fe:	rex push rbp
   140036800:	sub    rsp,0x20
   140036804:	mov    rbp,rdx
   140036807:	call   0x140024428
   14003680c:	add    rsp,0x20
   140036810:	pop    rbp
   140036811:	ret    
   140036812:	rex push rbp
   140036814:	sub    rsp,0x20
   140036818:	mov    rbp,rdx
   14003681b:	mov    rax,QWORD PTR [rcx]
   14003681e:	mov    rdx,rcx
   140036821:	mov    ecx,DWORD PTR [rax]
   140036823:	call   0x14002675c
   140036828:	add    rsp,0x20
   14003682c:	pop    rbp
   14003682d:	ret    
   14003682e:	rex push rbp
   140036830:	sub    rsp,0x40
   140036834:	mov    rbp,rdx
   140036837:	lea    rax,[rbp+0x40]
   14003683b:	mov    QWORD PTR [rsp+0x30],rax
   140036840:	mov    rax,QWORD PTR [rbp+0x90]
   140036847:	mov    QWORD PTR [rsp+0x28],rax
   14003684c:	mov    rax,QWORD PTR [rbp+0x88]
   140036853:	mov    QWORD PTR [rsp+0x20],rax
   140036858:	mov    r9,QWORD PTR [rbp+0x80]
   14003685f:	mov    r8,QWORD PTR [rbp+0x78]
   140036863:	mov    rdx,QWORD PTR [rbp+0x70]
   140036867:	call   0x14001e1e0
   14003686c:	add    rsp,0x40
   140036870:	pop    rbp
   140036871:	ret    
   140036872:	rex push rbp
   140036874:	sub    rsp,0x20
   140036878:	mov    rbp,rdx
   14003687b:	mov    ecx,0xc
   140036880:	call   0x140028780
   140036885:	add    rsp,0x20
   140036889:	pop    rbp
   14003688a:	ret    
   14003688b:	rex push rbp
   14003688d:	sub    rsp,0x20
   140036891:	mov    rbp,rdx
   140036894:	mov    ecx,0xd
   140036899:	call   0x140028780
   14003689e:	add    rsp,0x20
   1400368a2:	pop    rbp
   1400368a3:	ret    
   1400368a4:	int3   
   1400368a5:	int3   
   1400368a6:	int3   
   1400368a7:	int3   
   1400368a8:	int3   
   1400368a9:	int3   
   1400368aa:	int3   
   1400368ab:	rex push rbp
   1400368ad:	sub    rsp,0x20
   1400368b1:	mov    rbp,rdx
   1400368b4:	mov    ecx,0xc
   1400368b9:	call   0x140028780
   1400368be:	add    rsp,0x20
   1400368c2:	pop    rbp
   1400368c3:	ret    
   1400368c4:	rex push rbp
   1400368c6:	sub    rsp,0x30
   1400368ca:	mov    rbp,rdx
   1400368cd:	mov    ecx,0xc
   1400368d2:	call   0x140028780
   1400368d7:	add    rsp,0x30
   1400368db:	pop    rbp
   1400368dc:	ret    
   1400368dd:	int3   
   1400368de:	int3   
   1400368df:	int3   
   1400368e0:	int3   
   1400368e1:	int3   
   1400368e2:	int3   
   1400368e3:	int3   
   1400368e4:	rex push rbp
   1400368e6:	sub    rsp,0x30
   1400368ea:	mov    rbp,rdx
   1400368ed:	mov    ecx,0xc
   1400368f2:	call   0x140028780
   1400368f7:	add    rsp,0x30
   1400368fb:	pop    rbp
   1400368fc:	ret    
   1400368fd:	int3   
   1400368fe:	int3   
   1400368ff:	int3   
   140036900:	int3   
   140036901:	int3   
   140036902:	int3   
   140036903:	int3   
   140036904:	rex push rbp
   140036906:	sub    rsp,0x30
   14003690a:	mov    rbp,rdx
   14003690d:	mov    rax,QWORD PTR [rbp+0x70]
   140036911:	and    DWORD PTR [rax+0xc8],0xffffffef
   140036918:	add    rsp,0x30
   14003691c:	pop    rbp
   14003691d:	ret    
   14003691e:	rex push rbp
   140036920:	sub    rsp,0x20
   140036924:	mov    rbp,rdx
   140036927:	call   0x140021070
   14003692c:	add    rsp,0x20
   140036930:	pop    rbp
   140036931:	ret    
   140036932:	int3   
   140036933:	int3   
   140036934:	int3   
   140036935:	int3   
   140036936:	int3   
   140036937:	int3   
   140036938:	int3   
   140036939:	int3   
   14003693a:	int3   
   14003693b:	int3   
   14003693c:	int3   
   14003693d:	int3   
   14003693e:	rex push rbp
   140036940:	sub    rsp,0x20
   140036944:	mov    rbp,rdx
   140036947:	call   0x14002412c
   14003694c:	cmp    DWORD PTR [rax+0x100],0x0
   140036953:	jle    0x140036960
   140036955:	call   0x14002412c
   14003695a:	dec    DWORD PTR [rax+0x100]
   140036960:	add    rsp,0x20
   140036964:	pop    rbp
   140036965:	ret    
   140036966:	rex push rbp
   140036968:	sub    rsp,0x20
   14003696c:	mov    rbp,rdx
   14003696f:	xor    eax,eax
   140036971:	cmp    BYTE PTR [rbp+0x38],al
   140036974:	setne  al
   140036977:	add    rsp,0x20
   14003697b:	pop    rbp
   14003697c:	ret    
   14003697d:	rex push rbp
   14003697f:	sub    rsp,0x20
   140036983:	mov    rbp,rdx
   140036986:	mov    QWORD PTR [rbp+0x70],rcx
   14003698a:	mov    QWORD PTR [rbp+0x68],rcx
   14003698e:	mov    rax,QWORD PTR [rbp+0x68]
   140036992:	mov    rcx,QWORD PTR [rax]
   140036995:	mov    QWORD PTR [rbp+0x28],rcx
   140036999:	mov    DWORD PTR [rbp+0x20],0x0
   1400369a0:	mov    rax,QWORD PTR [rbp+0x28]
   1400369a4:	cmp    DWORD PTR [rax],0xe06d7363
   1400369aa:	jne    0x1400369f9
   1400369ac:	mov    rax,QWORD PTR [rbp+0x28]
   1400369b0:	cmp    DWORD PTR [rax+0x18],0x4
   1400369b4:	jne    0x1400369f9
   1400369b6:	mov    rax,QWORD PTR [rbp+0x28]
   1400369ba:	cmp    DWORD PTR [rax+0x20],0x19930520
   1400369c1:	je     0x1400369dd
   1400369c3:	mov    rax,QWORD PTR [rbp+0x28]
   1400369c7:	cmp    DWORD PTR [rax+0x20],0x19930521
   1400369ce:	je     0x1400369dd
   1400369d0:	mov    rax,QWORD PTR [rbp+0x28]
   1400369d4:	cmp    DWORD PTR [rax+0x20],0x19930522
   1400369db:	jne    0x1400369f9
   1400369dd:	mov    rdx,QWORD PTR [rbp+0x28]
   1400369e1:	mov    rax,QWORD PTR [rbp+0xd8]
   1400369e8:	mov    rcx,QWORD PTR [rax+0x28]
   1400369ec:	cmp    QWORD PTR [rdx+0x28],rcx
   1400369f0:	jne    0x1400369f9
   1400369f2:	mov    DWORD PTR [rbp+0x20],0x1
   1400369f9:	mov    rax,QWORD PTR [rbp+0x28]
   1400369fd:	cmp    DWORD PTR [rax],0xe06d7363
   140036a03:	jne    0x140036a60
   140036a05:	mov    rax,QWORD PTR [rbp+0x28]
   140036a09:	cmp    DWORD PTR [rax+0x18],0x4
   140036a0d:	jne    0x140036a60
   140036a0f:	mov    rax,QWORD PTR [rbp+0x28]
   140036a13:	cmp    DWORD PTR [rax+0x20],0x19930520
   140036a1a:	je     0x140036a36
   140036a1c:	mov    rax,QWORD PTR [rbp+0x28]
   140036a20:	cmp    DWORD PTR [rax+0x20],0x19930521
   140036a27:	je     0x140036a36
   140036a29:	mov    rax,QWORD PTR [rbp+0x28]
   140036a2d:	cmp    DWORD PTR [rax+0x20],0x19930522
   140036a34:	jne    0x140036a60
   140036a36:	mov    rax,QWORD PTR [rbp+0x28]
   140036a3a:	cmp    QWORD PTR [rax+0x30],0x0
   140036a3f:	jne    0x140036a60
   140036a41:	call   0x14002412c
   140036a46:	mov    DWORD PTR [rax+0x2c0],0x1
   140036a50:	mov    DWORD PTR [rbp+0x20],0x1
   140036a57:	mov    DWORD PTR [rbp+0x30],0x1
   140036a5e:	jmp    0x140036a67
   140036a60:	mov    DWORD PTR [rbp+0x30],0x0
   140036a67:	mov    eax,DWORD PTR [rbp+0x30]
   140036a6a:	add    rsp,0x20
   140036a6e:	pop    rbp
   140036a6f:	ret    
   140036a70:	int3   
   140036a71:	int3   
   140036a72:	int3   
   140036a73:	int3   
   140036a74:	int3   
   140036a75:	int3   
   140036a76:	int3   
   140036a77:	int3   
   140036a78:	int3   
   140036a79:	int3   
   140036a7a:	int3   
   140036a7b:	int3   
   140036a7c:	int3   
   140036a7d:	rex push rbx
   140036a7f:	push   rbp
   140036a80:	sub    rsp,0x28
   140036a84:	mov    rbp,rdx
   140036a87:	mov    rcx,QWORD PTR [rbp+0x50]
   140036a8b:	call   0x14001e478
   140036a90:	cmp    DWORD PTR [rbp+0x20],0x0
   140036a94:	jne    0x140036add
   140036a96:	mov    rbx,QWORD PTR [rbp+0xd8]
   140036a9d:	cmp    DWORD PTR [rbx],0xe06d7363
   140036aa3:	jne    0x140036add
   140036aa5:	cmp    DWORD PTR [rbx+0x18],0x4
   140036aa9:	jne    0x140036add
   140036aab:	cmp    DWORD PTR [rbx+0x20],0x19930520
   140036ab2:	je     0x140036ac6
   140036ab4:	cmp    DWORD PTR [rbx+0x20],0x19930521
   140036abb:	je     0x140036ac6
   140036abd:	cmp    DWORD PTR [rbx+0x20],0x19930522
   140036ac4:	jne    0x140036add
   140036ac6:	mov    rcx,QWORD PTR [rbx+0x28]
   140036aca:	call   0x14001e444
   140036acf:	test   eax,eax
   140036ad1:	je     0x140036add
   140036ad3:	mov    dl,0x1
   140036ad5:	mov    rcx,rbx
   140036ad8:	call   0x140021250
   140036add:	call   0x14002412c
   140036ae2:	mov    rcx,QWORD PTR [rbp+0xe0]
   140036ae9:	mov    QWORD PTR [rax+0xf0],rcx
   140036af0:	call   0x14002412c
   140036af5:	mov    rcx,QWORD PTR [rbp+0xe8]
   140036afc:	mov    QWORD PTR [rax+0xf8],rcx
   140036b03:	add    rsp,0x28
   140036b07:	pop    rbp
   140036b08:	pop    rbx
   140036b09:	ret    
   140036b0a:	rex push rbp
   140036b0c:	sub    rsp,0x30
   140036b10:	mov    rbp,rdx
   140036b13:	mov    rcx,QWORD PTR [rbp+0x40]
   140036b17:	call   0x140023be8
   140036b1c:	add    rsp,0x30
   140036b20:	pop    rbp
   140036b21:	ret    
   140036b22:	rex push rbp
   140036b24:	sub    rsp,0x30
   140036b28:	mov    rbp,rdx
   140036b2b:	mov    rcx,QWORD PTR [rbp+0x48]
   140036b2f:	call   0x140023be8
   140036b34:	add    rsp,0x30
   140036b38:	pop    rbp
   140036b39:	ret    
   140036b3a:	rex push rbp
   140036b3c:	sub    rsp,0x20
   140036b40:	mov    rbp,rdx
   140036b43:	movsxd rcx,DWORD PTR [rbp+0x20]
   140036b47:	mov    rax,rcx
   140036b4a:	mov    rdx,QWORD PTR [rip+0x169ff]        # 0x14004d550
   140036b51:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140036b55:	call   0x140023c40
   140036b5a:	add    rsp,0x20
   140036b5e:	pop    rbp
   140036b5f:	ret    
   140036b60:	int3   
   140036b61:	int3   
   140036b62:	int3   
   140036b63:	int3   
   140036b64:	int3   
   140036b65:	int3   
   140036b66:	int3   
   140036b67:	int3   
   140036b68:	int3   
   140036b69:	int3   
   140036b6a:	rex push rbp
   140036b6c:	sub    rsp,0x20
   140036b70:	mov    rbp,rdx
   140036b73:	mov    ecx,0x1
   140036b78:	call   0x140028780
   140036b7d:	add    rsp,0x20
   140036b81:	pop    rbp
   140036b82:	ret    
   140036b83:	rex push rbp
   140036b85:	sub    rsp,0x30
   140036b89:	mov    rbp,rdx
   140036b8c:	mov    rcx,QWORD PTR [rbp+0x50]
   140036b90:	call   0x140023be8
   140036b95:	add    rsp,0x30
   140036b99:	pop    rbp
   140036b9a:	ret    
   140036b9b:	rex push rbp
   140036b9d:	sub    rsp,0x30
   140036ba1:	mov    rbp,rdx
   140036ba4:	mov    rcx,QWORD PTR [rbp+0x58]
   140036ba8:	call   0x140023be8
   140036bad:	add    rsp,0x30
   140036bb1:	pop    rbp
   140036bb2:	ret    
   140036bb3:	rex push rbp
   140036bb5:	sub    rsp,0x20
   140036bb9:	mov    rbp,rdx
   140036bbc:	mov    ecx,0xe
   140036bc1:	call   0x140028780
   140036bc6:	add    rsp,0x20
   140036bca:	pop    rbp
   140036bcb:	ret    
   140036bcc:	rex push rbp
   140036bce:	sub    rsp,0x20
   140036bd2:	mov    rbp,rdx
   140036bd5:	cmp    DWORD PTR [rbp+0x80],0x0
   140036bdc:	je     0x140036be8
   140036bde:	mov    ecx,0x8
   140036be3:	call   0x140028780
   140036be8:	add    rsp,0x20
   140036bec:	pop    rbp
   140036bed:	ret    
   140036bee:	rex push rbp
   140036bf0:	sub    rsp,0x20
   140036bf4:	mov    rbp,rdx
   140036bf7:	mov    ecx,0xd
   140036bfc:	call   0x140028780
   140036c01:	add    rsp,0x20
   140036c05:	pop    rbp
   140036c06:	ret    
   140036c07:	int3   
   140036c08:	int3   
   140036c09:	int3   
   140036c0a:	int3   
   140036c0b:	int3   
   140036c0c:	int3   
   140036c0d:	int3   
   140036c0e:	int3   
   140036c0f:	int3   
   140036c10:	rex push rbp
   140036c12:	sub    rsp,0x20
   140036c16:	mov    rbp,rdx
   140036c19:	mov    rax,QWORD PTR [rcx]
   140036c1c:	xor    ecx,ecx
   140036c1e:	cmp    DWORD PTR [rax],0xc0000005
   140036c24:	sete   cl
   140036c27:	mov    eax,ecx
   140036c29:	mov    eax,ecx
   140036c2b:	add    rsp,0x20
   140036c2f:	pop    rbp
   140036c30:	ret    
   140036c31:	rex push rbp
   140036c33:	sub    rsp,0x30
   140036c37:	mov    rbp,rdx
   140036c3a:	cmp    DWORD PTR [rbp+0x70],0x0
   140036c3e:	je     0x140036c47
   140036c40:	xor    ecx,ecx
   140036c42:	call   0x140028780
   140036c47:	add    rsp,0x30
   140036c4b:	pop    rbp
   140036c4c:	ret    
   140036c4d:	rex push rbp
   140036c4f:	sub    rsp,0x20
   140036c53:	mov    rbp,rdx
   140036c56:	mov    rcx,QWORD PTR [rip+0x136f3]        # 0x14004a350
   140036c5d:	call   QWORD PTR [rip+0x344d]        # 0x14003a0b0
   140036c63:	add    rsp,0x20
   140036c67:	pop    rbp
   140036c68:	ret    
   140036c69:	rex push rbp
   140036c6b:	sub    rsp,0x30
   140036c6f:	mov    rbp,rdx
   140036c72:	mov    ecx,DWORD PTR [rbp+0x50]
   140036c75:	call   0x14002fd64
   140036c7a:	add    rsp,0x30
   140036c7e:	pop    rbp
   140036c7f:	ret    
   140036c80:	rex push rbp
   140036c82:	sub    rsp,0x20
   140036c86:	mov    rbp,rdx
   140036c89:	mov    rcx,QWORD PTR [rbp+0x30]
   140036c8d:	call   0x140023be8
   140036c92:	add    rsp,0x20
   140036c96:	pop    rbp
   140036c97:	ret    
   140036c98:	rex push rbp
   140036c9a:	sub    rsp,0x20
   140036c9e:	mov    rbp,rdx
   140036ca1:	mov    ecx,0x1
   140036ca6:	call   0x140028780
   140036cab:	add    rsp,0x20
   140036caf:	pop    rbp
   140036cb0:	ret    
   140036cb1:	rex push rbp
   140036cb3:	sub    rsp,0x20
   140036cb7:	mov    rbp,rdx
   140036cba:	mov    rax,QWORD PTR [rcx]
   140036cbd:	xor    ecx,ecx
   140036cbf:	cmp    DWORD PTR [rax],0xc0000017
   140036cc5:	sete   cl
   140036cc8:	mov    eax,ecx
   140036cca:	mov    eax,ecx
   140036ccc:	add    rsp,0x20
   140036cd0:	pop    rbp
   140036cd1:	ret    
   140036cd2:	rex push rbp
   140036cd4:	sub    rsp,0x30
   140036cd8:	mov    rbp,rdx
   140036cdb:	mov    ecx,DWORD PTR [rbp+0x60]
   140036cde:	call   0x14002fd64
   140036ce3:	add    rsp,0x30
   140036ce7:	pop    rbp
   140036ce8:	ret    
   140036ce9:	rex push rbp
   140036ceb:	sub    rsp,0x20
   140036cef:	mov    rbp,rdx
   140036cf2:	mov    ecx,0xa
   140036cf7:	call   0x140028780
   140036cfc:	add    rsp,0x20
   140036d00:	pop    rbp
   140036d01:	ret    
   140036d02:	int3   
   140036d03:	int3   
   140036d04:	int3   
   140036d05:	int3   
   140036d06:	int3   
   140036d07:	int3   
   140036d08:	int3   
   140036d09:	int3   
   140036d0a:	int3   
   140036d0b:	int3   
   140036d0c:	int3   
   140036d0d:	int3   
   140036d0e:	int3   
   140036d0f:	int3   
   140036d10:	rex push rbp
   140036d12:	sub    rsp,0x20
   140036d16:	mov    rbp,rdx
   140036d19:	mov    QWORD PTR [rbp+0x28],rcx
   140036d1d:	mov    rax,QWORD PTR [rbp+0x28]
   140036d21:	mov    rax,QWORD PTR [rax]
   140036d24:	mov    eax,DWORD PTR [rax]
   140036d26:	mov    DWORD PTR [rbp+0x30],eax
   140036d29:	mov    eax,DWORD PTR [rbp+0x30]
   140036d2c:	cmp    eax,0xc0000017
   140036d31:	jne    0x140036d3c
   140036d33:	mov    DWORD PTR [rbp+0x34],0x1
   140036d3a:	jmp    0x140036d43
   140036d3c:	mov    DWORD PTR [rbp+0x34],0x0
   140036d43:	mov    eax,DWORD PTR [rbp+0x34]
   140036d46:	add    rsp,0x20
   140036d4a:	pop    rbp
   140036d4b:	ret    
   140036d4c:	int3   
   140036d4d:	int3   
   140036d4e:	int3   
   140036d4f:	int3   
   140036d50:	mov    QWORD PTR [rsp+0x10],rdx
   140036d55:	push   rbp
   140036d56:	sub    rsp,0x20
   140036d5a:	mov    rbp,rdx
   140036d5d:	jmp    0x140036d6b
   140036d5f:	mov    rax,QWORD PTR [rbp+0x20]
   140036d63:	add    rax,0x10
   140036d67:	mov    QWORD PTR [rbp+0x20],rax
   140036d6b:	mov    rax,QWORD PTR [rbp+0x40]
   140036d6f:	cmp    QWORD PTR [rbp+0x20],rax
   140036d73:	je     0x140036d84
   140036d75:	mov    rdx,QWORD PTR [rbp+0x20]
   140036d79:	mov    rcx,QWORD PTR [rbp+0x58]
   140036d7d:	call   0x140010670
   140036d82:	jmp    0x140036d5f
   140036d84:	xor    edx,edx
   140036d86:	xor    ecx,ecx
   140036d88:	call   0x14001e5c0
   140036d8d:	nop
   140036d8e:	lea    rax,[rip+0xfffffffffffdcab2]        # 0x140013847
   140036d95:	jmp    0x140036d97
   140036d97:	add    rsp,0x20
   140036d9b:	pop    rbp
   140036d9c:	ret    
   140036d9d:	int3   
   140036d9e:	int3   
   140036d9f:	int3   
   140036da0:	mov    QWORD PTR [rsp+0x10],rdx
   140036da5:	push   rbp
   140036da6:	sub    rsp,0x20
   140036daa:	mov    rbp,rdx
   140036dad:	mov    rcx,QWORD PTR [rbp+0xa0]
   140036db4:	call   0x14000f7a0
   140036db9:	xor    edx,edx
   140036dbb:	xor    ecx,ecx
   140036dbd:	call   0x14001e5c0
   140036dc2:	nop
   140036dc3:	lea    rax,[rip+0xfffffffffffd9ea3]        # 0x140010c6d
   140036dca:	jmp    0x140036dcc
   140036dcc:	add    rsp,0x20
   140036dd0:	pop    rbp
   140036dd1:	ret    
   140036dd2:	int3   
   140036dd3:	int3   
   140036dd4:	int3   
   140036dd5:	int3   
   140036dd6:	int3   
   140036dd7:	int3   
   140036dd8:	int3   
   140036dd9:	int3   
   140036dda:	int3   
   140036ddb:	int3   
   140036ddc:	int3   
   140036ddd:	int3   
   140036dde:	int3   
   140036ddf:	int3   
   140036de0:	rex push rbp
   140036de2:	sub    rsp,0x20
   140036de6:	mov    rbp,rdx
   140036de9:	mov    rcx,QWORD PTR [rbp+0x40]
   140036ded:	call   0x140001ac0
   140036df2:	add    rsp,0x20
   140036df6:	pop    rbp
   140036df7:	ret    
   140036df8:	int3   
   140036df9:	int3   
   140036dfa:	int3   
   140036dfb:	int3   
   140036dfc:	int3   
   140036dfd:	int3   
   140036dfe:	int3   
   140036dff:	int3   
   140036e00:	mov    QWORD PTR [rsp+0x10],rdx
   140036e05:	push   rbp
   140036e06:	sub    rsp,0x20
   140036e0a:	mov    rbp,rdx
   140036e0d:	jmp    0x140036e1b
   140036e0f:	mov    rax,QWORD PTR [rbp+0x20]
   140036e13:	add    rax,0x10
   140036e17:	mov    QWORD PTR [rbp+0x20],rax
   140036e1b:	mov    rax,QWORD PTR [rbp+0x50]
   140036e1f:	cmp    QWORD PTR [rbp+0x20],rax
   140036e23:	je     0x140036e34
   140036e25:	mov    rdx,QWORD PTR [rbp+0x20]
   140036e29:	mov    rcx,QWORD PTR [rbp+0x58]
   140036e2d:	call   0x140010670
   140036e32:	jmp    0x140036e0f
   140036e34:	xor    edx,edx
   140036e36:	xor    ecx,ecx
   140036e38:	call   0x14001e5c0
   140036e3d:	nop
   140036e3e:	lea    rax,[rip+0xfffffffffffdd046]        # 0x140013e8b
   140036e45:	jmp    0x140036e47
   140036e47:	add    rsp,0x20
   140036e4b:	pop    rbp
   140036e4c:	ret    
   140036e4d:	int3   
   140036e4e:	int3   
   140036e4f:	int3   
   140036e50:	rex push rbp
   140036e52:	sub    rsp,0x20
   140036e56:	mov    rbp,rdx
   140036e59:	mov    rcx,QWORD PTR [rbp+0x60]
   140036e5d:	call   0x140001320
   140036e62:	add    rsp,0x20
   140036e66:	pop    rbp
   140036e67:	ret    
   140036e68:	int3   
   140036e69:	int3   
   140036e6a:	int3   
   140036e6b:	int3   
   140036e6c:	int3   
   140036e6d:	int3   
   140036e6e:	int3   
   140036e6f:	int3   
   140036e70:	rex push rbp
   140036e72:	sub    rsp,0x20
   140036e76:	mov    rbp,rdx
   140036e79:	mov    rcx,QWORD PTR [rbp+0x50]
   140036e7d:	add    rcx,0x8
   140036e81:	call   0x14001a20c
   140036e86:	add    rsp,0x20
   140036e8a:	pop    rbp
   140036e8b:	ret    
   140036e8c:	int3   
   140036e8d:	int3   
   140036e8e:	int3   
   140036e8f:	int3   
   140036e90:	rex push rbp
   140036e92:	sub    rsp,0x20
   140036e96:	mov    rbp,rdx
   140036e99:	mov    eax,DWORD PTR [rbp+0x20]
   140036e9c:	and    eax,0x1
   140036e9f:	test   eax,eax
   140036ea1:	je     0x140036eb4
   140036ea3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140036ea7:	mov    rcx,QWORD PTR [rbp+0x50]
   140036eab:	add    rcx,0x8
   140036eaf:	call   0x1400033d0
   140036eb4:	add    rsp,0x20
   140036eb8:	pop    rbp
   140036eb9:	ret    
   140036eba:	int3   
   140036ebb:	int3   
   140036ebc:	int3   
   140036ebd:	int3   
   140036ebe:	int3   
   140036ebf:	int3   
   140036ec0:	rex push rbp
   140036ec2:	sub    rsp,0x20
   140036ec6:	mov    rbp,rdx
   140036ec9:	mov    rcx,QWORD PTR [rbp+0x40]
   140036ecd:	call   0x1400194ec
   140036ed2:	add    rsp,0x20
   140036ed6:	pop    rbp
   140036ed7:	ret    
   140036ed8:	int3   
   140036ed9:	int3   
   140036eda:	int3   
   140036edb:	int3   
   140036edc:	int3   
   140036edd:	int3   
   140036ede:	int3   
   140036edf:	int3   
   140036ee0:	rex push rbp
   140036ee2:	sub    rsp,0x20
   140036ee6:	mov    rbp,rdx
   140036ee9:	mov    rcx,QWORD PTR [rbp+0x40]
   140036eed:	add    rcx,0x8
   140036ef1:	call   0x140003220
   140036ef6:	add    rsp,0x20
   140036efa:	pop    rbp
   140036efb:	ret    
   140036efc:	int3   
   140036efd:	int3   
   140036efe:	int3   
   140036eff:	int3   
   140036f00:	rex push rbp
   140036f02:	sub    rsp,0x20
   140036f06:	mov    rbp,rdx
   140036f09:	mov    rcx,QWORD PTR [rbp+0x40]
   140036f0d:	add    rcx,0x30
   140036f11:	call   0x140003220
   140036f16:	add    rsp,0x20
   140036f1a:	pop    rbp
   140036f1b:	ret    
   140036f1c:	int3   
   140036f1d:	int3   
   140036f1e:	int3   
   140036f1f:	int3   
   140036f20:	rex push rbp
   140036f22:	sub    rsp,0x20
   140036f26:	mov    rbp,rdx
   140036f29:	mov    rcx,QWORD PTR [rbp+0x40]
   140036f2d:	add    rcx,0x58
   140036f31:	call   0x140003220
   140036f36:	add    rsp,0x20
   140036f3a:	pop    rbp
   140036f3b:	ret    
   140036f3c:	int3   
   140036f3d:	int3   
   140036f3e:	int3   
   140036f3f:	int3   
   140036f40:	rex push rbp
   140036f42:	sub    rsp,0x20
   140036f46:	mov    rbp,rdx
   140036f49:	mov    rcx,QWORD PTR [rbp+0x40]
   140036f4d:	add    rcx,0x80
   140036f54:	call   0x140003220
   140036f59:	add    rsp,0x20
   140036f5d:	pop    rbp
   140036f5e:	ret    
   140036f5f:	int3   
   140036f60:	rex push rbp
   140036f62:	sub    rsp,0x20
   140036f66:	mov    rbp,rdx
   140036f69:	lea    rcx,[rbp+0x38]
   140036f6d:	call   0x140016a10
   140036f72:	add    rsp,0x20
   140036f76:	pop    rbp
   140036f77:	ret    
   140036f78:	int3   
   140036f79:	int3   
   140036f7a:	int3   
   140036f7b:	int3   
   140036f7c:	int3   
   140036f7d:	int3   
   140036f7e:	int3   
   140036f7f:	int3   
   140036f80:	mov    QWORD PTR [rsp+0x10],rdx
   140036f85:	push   rbp
   140036f86:	sub    rsp,0x20
   140036f8a:	mov    rbp,rdx
   140036f8d:	lea    rax,[rip+0xfffffffffffde49a]        # 0x14001542e
   140036f94:	jmp    0x140036f96
   140036f96:	add    rsp,0x20
   140036f9a:	pop    rbp
   140036f9b:	ret    
   140036f9c:	int3   
   140036f9d:	int3   
   140036f9e:	int3   
   140036f9f:	int3   
   140036fa0:	rex push rbp
   140036fa2:	sub    rsp,0x20
   140036fa6:	mov    rbp,rdx
   140036fa9:	lea    rcx,[rbp+0x30]
   140036fad:	call   0x140015180
   140036fb2:	add    rsp,0x20
   140036fb6:	pop    rbp
   140036fb7:	ret    
   140036fb8:	int3   
   140036fb9:	int3   
   140036fba:	int3   
   140036fbb:	int3   
   140036fbc:	int3   
   140036fbd:	int3   
   140036fbe:	int3   
   140036fbf:	int3   
   140036fc0:	mov    QWORD PTR [rsp+0x10],rdx
   140036fc5:	push   rbp
   140036fc6:	sub    rsp,0x20
   140036fca:	mov    rbp,rdx
   140036fcd:	lea    rax,[rip+0xfffffffffffde4d3]        # 0x1400154a7
   140036fd4:	jmp    0x140036fd6
   140036fd6:	add    rsp,0x20
   140036fda:	pop    rbp
   140036fdb:	ret    
   140036fdc:	int3   
   140036fdd:	int3   
   140036fde:	int3   
   140036fdf:	int3   
   140036fe0:	rex push rbp
   140036fe2:	sub    rsp,0x20
   140036fe6:	mov    rbp,rdx
   140036fe9:	lea    rcx,[rbp+0x40]
   140036fed:	call   0x140015180
   140036ff2:	add    rsp,0x20
   140036ff6:	pop    rbp
   140036ff7:	ret    
   140036ff8:	int3   
   140036ff9:	int3   
   140036ffa:	int3   
   140036ffb:	int3   
   140036ffc:	int3   
   140036ffd:	int3   
   140036ffe:	int3   
   140036fff:	int3   
   140037000:	rex push rbp
   140037002:	sub    rsp,0x20
   140037006:	mov    rbp,rdx
   140037009:	mov    rcx,QWORD PTR [rbp+0x50]
   14003700d:	call   0x1400034e0
   140037012:	add    rsp,0x20
   140037016:	pop    rbp
   140037017:	ret    
   140037018:	int3   
   140037019:	int3   
   14003701a:	int3   
   14003701b:	int3   
   14003701c:	int3   
   14003701d:	int3   
   14003701e:	int3   
   14003701f:	int3   
   140037020:	rex push rbp
   140037022:	sub    rsp,0x20
   140037026:	mov    rbp,rdx
   140037029:	mov    rcx,QWORD PTR [rbp+0x40]
   14003702d:	call   0x1400034e0
   140037032:	add    rsp,0x20
   140037036:	pop    rbp
   140037037:	ret    
   140037038:	int3   
   140037039:	int3   
   14003703a:	int3   
   14003703b:	int3   
   14003703c:	int3   
   14003703d:	int3   
   14003703e:	int3   
   14003703f:	int3   
   140037040:	mov    QWORD PTR [rsp+0x10],rdx
   140037045:	push   rbp
   140037046:	sub    rsp,0x20
   14003704a:	mov    rbp,rdx
   14003704d:	mov    rax,QWORD PTR [rbp+0x68]
   140037051:	mov    QWORD PTR [rbp+0x28],rax
   140037055:	mov    rdx,QWORD PTR [rbp+0x28]
   140037059:	add    rdx,0x1
   14003705d:	mov    rcx,QWORD PTR [rbp+0x60]
   140037061:	call   0x140008770
   140037066:	mov    QWORD PTR [rbp+0x40],rax
   14003706a:	mov    rax,QWORD PTR [rbp+0x40]
   14003706e:	mov    QWORD PTR [rbp+0x20],rax
   140037072:	lea    rax,[rip+0xfffffffffffd1636]        # 0x1400086af
   140037079:	add    rsp,0x20
   14003707d:	pop    rbp
   14003707e:	ret    
   14003707f:	int3   
   140037080:	mov    QWORD PTR [rsp+0x10],rdx
   140037085:	push   rbp
   140037086:	sub    rsp,0x20
   14003708a:	mov    rbp,rdx
   14003708d:	xor    r8d,r8d
   140037090:	mov    dl,0x1
   140037092:	mov    rcx,QWORD PTR [rbp+0x60]
   140037096:	call   0x1400062d0
   14003709b:	xor    edx,edx
   14003709d:	xor    ecx,ecx
   14003709f:	call   0x14001e5c0
   1400370a4:	nop
   1400370a5:	lea    rax,[rip+0xffffffffffffffc6]        # 0x140037072
   1400370ac:	jmp    0x1400370ae
   1400370ae:	add    rsp,0x20
   1400370b2:	pop    rbp
   1400370b3:	ret    
   1400370b4:	int3   
   1400370b5:	int3   
   1400370b6:	int3   
   1400370b7:	int3   
   1400370b8:	int3   
   1400370b9:	int3   
   1400370ba:	int3   
   1400370bb:	int3   
   1400370bc:	int3   
   1400370bd:	int3   
   1400370be:	int3   
   1400370bf:	int3   
   1400370c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400370c5:	push   rbp
   1400370c6:	sub    rsp,0x20
   1400370ca:	mov    rbp,rdx
   1400370cd:	mov    rax,QWORD PTR [rbp+0x68]
   1400370d1:	mov    QWORD PTR [rbp+0x28],rax
   1400370d5:	mov    rdx,QWORD PTR [rbp+0x28]
   1400370d9:	add    rdx,0x1
   1400370dd:	mov    rcx,QWORD PTR [rbp+0x60]
   1400370e1:	call   0x140009280
   1400370e6:	mov    QWORD PTR [rbp+0x40],rax
   1400370ea:	mov    rax,QWORD PTR [rbp+0x40]
   1400370ee:	mov    QWORD PTR [rbp+0x20],rax
   1400370f2:	lea    rax,[rip+0xfffffffffffd0be6]        # 0x140007cdf
   1400370f9:	add    rsp,0x20
   1400370fd:	pop    rbp
   1400370fe:	ret    
   1400370ff:	int3   
   140037100:	mov    QWORD PTR [rsp+0x10],rdx
   140037105:	push   rbp
   140037106:	sub    rsp,0x20
   14003710a:	mov    rbp,rdx
   14003710d:	xor    r8d,r8d
   140037110:	mov    dl,0x1
   140037112:	mov    rcx,QWORD PTR [rbp+0x60]
   140037116:	call   0x140005550
   14003711b:	xor    edx,edx
   14003711d:	xor    ecx,ecx
   14003711f:	call   0x14001e5c0
   140037124:	nop
   140037125:	lea    rax,[rip+0xffffffffffffffc6]        # 0x1400370f2
   14003712c:	jmp    0x14003712e
   14003712e:	add    rsp,0x20
   140037132:	pop    rbp
   140037133:	ret    
   140037134:	int3   
   140037135:	int3   
   140037136:	int3   
   140037137:	int3   
   140037138:	int3   
   140037139:	int3   
   14003713a:	int3   
   14003713b:	int3   
   14003713c:	int3   
   14003713d:	int3   
   14003713e:	int3   
   14003713f:	int3   
   140037140:	rex push rbp
   140037142:	sub    rsp,0x20
   140037146:	mov    rbp,rdx
   140037149:	mov    rcx,QWORD PTR [rbp+0x40]
   14003714d:	sub    rcx,0x98
   140037154:	add    rcx,0x18
   140037158:	call   0x140006c60
   14003715d:	add    rsp,0x20
   140037161:	pop    rbp
   140037162:	ret    
   140037163:	int3   
   140037164:	int3   
   140037165:	int3   
   140037166:	int3   
   140037167:	int3   
   140037168:	int3   
   140037169:	int3   
   14003716a:	int3   
   14003716b:	int3   
   14003716c:	int3   
   14003716d:	int3   
   14003716e:	int3   
   14003716f:	int3   
   140037170:	rex push rbp
   140037172:	sub    rsp,0x20
   140037176:	mov    rbp,rdx
   140037179:	mov    rcx,QWORD PTR [rbp+0x40]
   14003717d:	call   0x14001c944
   140037182:	add    rsp,0x20
   140037186:	pop    rbp
   140037187:	ret    
   140037188:	int3   
   140037189:	int3   
   14003718a:	int3   
   14003718b:	int3   
   14003718c:	int3   
   14003718d:	int3   
   14003718e:	int3   
   14003718f:	int3   
   140037190:	rex push rbp
   140037192:	sub    rsp,0x20
   140037196:	mov    rbp,rdx
   140037199:	lea    rcx,[rbp+0x2050]
   1400371a0:	call   0x1400168c0
   1400371a5:	add    rsp,0x20
   1400371a9:	pop    rbp
   1400371aa:	ret    
   1400371ab:	int3   
   1400371ac:	int3   
   1400371ad:	int3   
   1400371ae:	int3   
   1400371af:	int3   
   1400371b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400371b5:	push   rbp
   1400371b6:	sub    rsp,0x30
   1400371ba:	mov    rbp,rdx
   1400371bd:	lea    rax,[rip+0xfffffffffffdfcfc]        # 0x140016ec0
   1400371c4:	jmp    0x1400371c6
   1400371c6:	add    rsp,0x30
   1400371ca:	pop    rbp
   1400371cb:	ret    
   1400371cc:	int3   
   1400371cd:	int3   
   1400371ce:	int3   
   1400371cf:	int3   
   1400371d0:	rex push rbp
   1400371d2:	sub    rsp,0x20
   1400371d6:	mov    rbp,rdx
   1400371d9:	lea    rcx,[rbp+0x21c0]
   1400371e0:	call   0x1400168c0
   1400371e5:	add    rsp,0x20
   1400371e9:	pop    rbp
   1400371ea:	ret    
   1400371eb:	int3   
   1400371ec:	int3   
   1400371ed:	int3   
   1400371ee:	int3   
   1400371ef:	int3   
   1400371f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400371f5:	push   rbp
   1400371f6:	sub    rsp,0x30
   1400371fa:	mov    rbp,rdx
   1400371fd:	lea    rax,[rip+0xfffffffffffdff27]        # 0x14001712b
   140037204:	jmp    0x140037206
   140037206:	add    rsp,0x30
   14003720a:	pop    rbp
   14003720b:	ret    
   14003720c:	int3   
   14003720d:	int3   
   14003720e:	int3   
   14003720f:	int3   
   140037210:	rex push rbp
   140037212:	sub    rsp,0x20
   140037216:	mov    rbp,rdx
   140037219:	mov    rcx,QWORD PTR [rbp+0x28]
   14003721d:	call   0x14001c4dc
   140037222:	add    rsp,0x20
   140037226:	pop    rbp
   140037227:	ret    
   140037228:	int3   
   140037229:	int3   
   14003722a:	int3   
   14003722b:	int3   
   14003722c:	int3   
   14003722d:	int3   
   14003722e:	int3   
   14003722f:	int3   
   140037230:	rex push rbp
   140037232:	sub    rsp,0x20
   140037236:	mov    rbp,rdx
   140037239:	mov    eax,DWORD PTR [rbp+0x100]
   14003723f:	and    eax,0x1
   140037242:	test   eax,eax
   140037244:	je     0x140037259
   140037246:	and    DWORD PTR [rbp+0x100],0xfffffffe
   14003724d:	lea    rcx,[rbp+0xd8]
   140037254:	call   0x140003220
   140037259:	add    rsp,0x20
   14003725d:	pop    rbp
   14003725e:	ret    
   14003725f:	int3   
   140037260:	rex push rbp
   140037262:	sub    rsp,0x20
   140037266:	mov    rbp,rdx
   140037269:	mov    eax,DWORD PTR [rbp+0x100]
   14003726f:	and    eax,0x2
   140037272:	test   eax,eax
   140037274:	je     0x140037286
   140037276:	and    DWORD PTR [rbp+0x100],0xfffffffd
   14003727d:	lea    rcx,[rbp+0x30]
   140037281:	call   0x1400017c0
   140037286:	add    rsp,0x20
   14003728a:	pop    rbp
   14003728b:	ret    
   14003728c:	int3   
   14003728d:	int3   
   14003728e:	int3   
   14003728f:	int3   
   140037290:	rex push rbp
   140037292:	sub    rsp,0x20
   140037296:	mov    rbp,rdx
   140037299:	lea    rcx,[rbp+0x30]
   14003729d:	call   0x1400194ec
   1400372a2:	add    rsp,0x20
   1400372a6:	pop    rbp
   1400372a7:	ret    
   1400372a8:	int3   
   1400372a9:	int3   
   1400372aa:	int3   
   1400372ab:	int3   
   1400372ac:	int3   
   1400372ad:	int3   
   1400372ae:	int3   
   1400372af:	int3   
   1400372b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400372b5:	push   rbp
   1400372b6:	sub    rsp,0x20
   1400372ba:	mov    rbp,rdx
   1400372bd:	jmp    0x1400372cb
   1400372bf:	mov    rax,QWORD PTR [rbp+0x20]
   1400372c3:	add    rax,0x28
   1400372c7:	mov    QWORD PTR [rbp+0x20],rax
   1400372cb:	mov    rax,QWORD PTR [rbp+0x40]
   1400372cf:	cmp    QWORD PTR [rbp+0x20],rax
   1400372d3:	je     0x1400372e4
   1400372d5:	mov    rdx,QWORD PTR [rbp+0x20]
   1400372d9:	mov    rcx,QWORD PTR [rbp+0x58]
   1400372dd:	call   0x140010650
   1400372e2:	jmp    0x1400372bf
   1400372e4:	xor    edx,edx
   1400372e6:	xor    ecx,ecx
   1400372e8:	call   0x14001e5c0
   1400372ed:	nop
   1400372ee:	lea    rax,[rip+0xfffffffffffd88b2]        # 0x14000fba7
   1400372f5:	jmp    0x1400372f7
   1400372f7:	add    rsp,0x20
   1400372fb:	pop    rbp
   1400372fc:	ret    
   1400372fd:	int3   
   1400372fe:	int3   
   1400372ff:	int3   
   140037300:	rex push rbp
   140037302:	sub    rsp,0x20
   140037306:	mov    rbp,rdx
   140037309:	lea    rcx,[rbp+0x48]
   14003730d:	call   0x140003220
   140037312:	add    rsp,0x20
   140037316:	pop    rbp
   140037317:	ret    
   140037318:	int3   
   140037319:	int3   
   14003731a:	int3   
   14003731b:	int3   
   14003731c:	int3   
   14003731d:	int3   
   14003731e:	int3   
   14003731f:	int3   
   140037320:	rex push rbp
   140037322:	sub    rsp,0x20
   140037326:	mov    rbp,rdx
   140037329:	lea    rcx,[rbp+0x78]
   14003732d:	call   0x140003220
   140037332:	add    rsp,0x20
   140037336:	pop    rbp
   140037337:	ret    
   140037338:	int3   
   140037339:	int3   
   14003733a:	int3   
   14003733b:	int3   
   14003733c:	int3   
   14003733d:	int3   
   14003733e:	int3   
   14003733f:	int3   
   140037340:	rex push rbp
   140037342:	sub    rsp,0x20
   140037346:	mov    rbp,rdx
   140037349:	lea    rcx,[rbp+0x80]
   140037350:	call   0x140003220
   140037355:	add    rsp,0x20
   140037359:	pop    rbp
   14003735a:	ret    
   14003735b:	int3   
   14003735c:	int3   
   14003735d:	int3   
   14003735e:	int3   
   14003735f:	int3   
   140037360:	rex push rbp
   140037362:	sub    rsp,0x20
   140037366:	mov    rbp,rdx
   140037369:	lea    rcx,[rbp+0x50]
   14003736d:	call   0x140003220
   140037372:	add    rsp,0x20
   140037376:	pop    rbp
   140037377:	ret    
   140037378:	int3   
   140037379:	int3   
   14003737a:	int3   
   14003737b:	int3   
   14003737c:	int3   
   14003737d:	int3   
   14003737e:	int3   
   14003737f:	int3   
   140037380:	rex push rbp
   140037382:	sub    rsp,0x20
   140037386:	mov    rbp,rdx
   140037389:	lea    rcx,[rbp+0x70]
   14003738d:	call   0x140001b80
   140037392:	add    rsp,0x20
   140037396:	pop    rbp
   140037397:	ret    
   140037398:	int3   
   140037399:	int3   
   14003739a:	int3   
   14003739b:	int3   
   14003739c:	int3   
   14003739d:	int3   
   14003739e:	int3   
   14003739f:	int3   
   1400373a0:	rex push rbp
   1400373a2:	sub    rsp,0x20
   1400373a6:	mov    rbp,rdx
   1400373a9:	lea    rcx,[rbp+0x90]
   1400373b0:	call   0x140001b80
   1400373b5:	add    rsp,0x20
   1400373b9:	pop    rbp
   1400373ba:	ret    
   1400373bb:	int3   
   1400373bc:	int3   
   1400373bd:	int3   
   1400373be:	int3   
   1400373bf:	int3   
   1400373c0:	rex push rbp
   1400373c2:	sub    rsp,0x20
   1400373c6:	mov    rbp,rdx
   1400373c9:	lea    rcx,[rbp+0x88]
   1400373d0:	call   0x140001b80
   1400373d5:	add    rsp,0x20
   1400373d9:	pop    rbp
   1400373da:	ret    
   1400373db:	int3   
   1400373dc:	int3   
   1400373dd:	int3   
   1400373de:	int3   
   1400373df:	int3   
   1400373e0:	rex push rbp
   1400373e2:	sub    rsp,0x20
   1400373e6:	mov    rbp,rdx
   1400373e9:	lea    rcx,[rbp+0x68]
   1400373ed:	call   0x140001b80
   1400373f2:	add    rsp,0x20
   1400373f6:	pop    rbp
   1400373f7:	ret    
   1400373f8:	int3   
   1400373f9:	int3   
   1400373fa:	int3   
   1400373fb:	int3   
   1400373fc:	int3   
   1400373fd:	int3   
   1400373fe:	int3   
   1400373ff:	int3   
   140037400:	rex push rbp
   140037402:	sub    rsp,0x20
   140037406:	mov    rbp,rdx
   140037409:	lea    rcx,[rbp+0x78]
   14003740d:	call   0x140001b80
   140037412:	add    rsp,0x20
   140037416:	pop    rbp
   140037417:	ret    
   140037418:	int3   
   140037419:	int3   
   14003741a:	int3   
   14003741b:	int3   
   14003741c:	int3   
   14003741d:	int3   
   14003741e:	int3   
   14003741f:	int3   
   140037420:	rex push rbp
   140037422:	sub    rsp,0x20
   140037426:	mov    rbp,rdx
   140037429:	lea    rcx,[rbp+0x28]
   14003742d:	call   0x140003a90
   140037432:	add    rsp,0x20
   140037436:	pop    rbp
   140037437:	ret    
   140037438:	int3   
   140037439:	int3   
   14003743a:	int3   
   14003743b:	int3   
   14003743c:	int3   
   14003743d:	int3   
   14003743e:	int3   
   14003743f:	int3   
   140037440:	rex push rbp
   140037442:	sub    rsp,0x20
   140037446:	mov    rbp,rdx
   140037449:	lea    rcx,[rbp+0x50]
   14003744d:	call   0x140003a90
   140037452:	add    rsp,0x20
   140037456:	pop    rbp
   140037457:	ret    
   140037458:	int3   
   140037459:	int3   
   14003745a:	int3   
   14003745b:	int3   
   14003745c:	int3   
   14003745d:	int3   
   14003745e:	int3   
   14003745f:	int3   
   140037460:	rex push rbp
   140037462:	sub    rsp,0x20
   140037466:	mov    rbp,rdx
   140037469:	lea    rcx,[rbp+0x78]
   14003746d:	call   0x140003a90
   140037472:	add    rsp,0x20
   140037476:	pop    rbp
   140037477:	ret    
   140037478:	int3   
   140037479:	int3   
   14003747a:	int3   
   14003747b:	int3   
   14003747c:	int3   
   14003747d:	int3   
   14003747e:	int3   
   14003747f:	int3   
   140037480:	rex push rbp
   140037482:	sub    rsp,0x20
   140037486:	mov    rbp,rdx
   140037489:	mov    rcx,QWORD PTR [rbp+0x40]
   14003748d:	call   0x140003a90
   140037492:	add    rsp,0x20
   140037496:	pop    rbp
   140037497:	ret    
   140037498:	int3   
   140037499:	int3   
   14003749a:	int3   
   14003749b:	int3   
   14003749c:	int3   
   14003749d:	int3   
   14003749e:	int3   
   14003749f:	int3   
   1400374a0:	rex push rbp
   1400374a2:	sub    rsp,0x20
   1400374a6:	mov    rbp,rdx
   1400374a9:	lea    rcx,[rbp+0x30]
   1400374ad:	call   0x140003a90
   1400374b2:	add    rsp,0x20
   1400374b6:	pop    rbp
   1400374b7:	ret    
   1400374b8:	int3   
   1400374b9:	int3   
   1400374ba:	int3   
   1400374bb:	int3   
   1400374bc:	int3   
   1400374bd:	int3   
   1400374be:	int3   
   1400374bf:	int3   
   1400374c0:	rex push rbp
   1400374c2:	sub    rsp,0x20
   1400374c6:	mov    rbp,rdx
   1400374c9:	lea    rcx,[rbp+0xa8]
   1400374d0:	call   0x140003a90
   1400374d5:	add    rsp,0x20
   1400374d9:	pop    rbp
   1400374da:	ret    
   1400374db:	int3   
   1400374dc:	int3   
   1400374dd:	int3   
   1400374de:	int3   
   1400374df:	int3   
   1400374e0:	rex push rbp
   1400374e2:	sub    rsp,0x20
   1400374e6:	mov    rbp,rdx
   1400374e9:	lea    rcx,[rbp+0x80]
   1400374f0:	call   0x140003a90
   1400374f5:	add    rsp,0x20
   1400374f9:	pop    rbp
   1400374fa:	ret    
   1400374fb:	int3   
   1400374fc:	int3   
   1400374fd:	int3   
   1400374fe:	int3   
   1400374ff:	int3   
   140037500:	rex push rbp
   140037502:	sub    rsp,0x20
   140037506:	mov    rbp,rdx
   140037509:	lea    rcx,[rbp+0x58]
   14003750d:	call   0x140003a90
   140037512:	add    rsp,0x20
   140037516:	pop    rbp
   140037517:	ret    
   140037518:	int3   
   140037519:	int3   
   14003751a:	int3   
   14003751b:	int3   
   14003751c:	int3   
   14003751d:	int3   
   14003751e:	int3   
   14003751f:	int3   
   140037520:	rex push rbp
   140037522:	sub    rsp,0x20
   140037526:	mov    rbp,rdx
   140037529:	mov    rcx,QWORD PTR [rbp+0x68]
   14003752d:	call   0x140003a90
   140037532:	add    rsp,0x20
   140037536:	pop    rbp
   140037537:	ret    
   140037538:	int3   
   140037539:	int3   
   14003753a:	int3   
   14003753b:	int3   
   14003753c:	int3   
   14003753d:	int3   
   14003753e:	int3   
   14003753f:	int3   
   140037540:	rex push rbp
   140037542:	sub    rsp,0x20
   140037546:	mov    rbp,rdx
   140037549:	lea    rcx,[rbp+0x90]
   140037550:	call   0x1400121a0
   140037555:	add    rsp,0x20
   140037559:	pop    rbp
   14003755a:	ret    
   14003755b:	int3   
   14003755c:	int3   
   14003755d:	int3   
   14003755e:	int3   
   14003755f:	int3   
   140037560:	rex push rbp
   140037562:	sub    rsp,0x20
   140037566:	mov    rbp,rdx
   140037569:	lea    rcx,[rbp+0x88]
   140037570:	call   0x140012210
   140037575:	add    rsp,0x20
   140037579:	pop    rbp
   14003757a:	ret    
   14003757b:	int3   
   14003757c:	int3   
   14003757d:	int3   
   14003757e:	int3   
   14003757f:	int3   
   140037580:	rex push rbp
   140037582:	sub    rsp,0x20
   140037586:	mov    rbp,rdx
   140037589:	lea    rcx,[rbp+0x98]
   140037590:	call   0x140031f10
   140037595:	add    rsp,0x20
   140037599:	pop    rbp
   14003759a:	ret    
   14003759b:	int3   
   14003759c:	int3   
   14003759d:	int3   
   14003759e:	int3   
   14003759f:	int3   
   1400375a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400375a5:	push   rbp
   1400375a6:	sub    rsp,0x40
   1400375aa:	mov    rbp,rdx
   1400375ad:	mov    rcx,QWORD PTR [rbp+0x1b0]
   1400375b4:	add    rcx,0x38
   1400375b8:	lea    rdx,[rip+0x7341]        # 0x14003e900
   1400375bf:	call   0x140011a40
   1400375c4:	mov    rcx,QWORD PTR [rbp+0x1b0]
   1400375cb:	add    rcx,0x38
   1400375cf:	mov    rdx,QWORD PTR [rbp+0x1b8]
   1400375d6:	call   0x140003ab0
   1400375db:	mov    rcx,QWORD PTR [rbp+0x1b0]
   1400375e2:	add    rcx,0x38
   1400375e6:	lea    rdx,[rip+0x7207]        # 0x14003e7f4
   1400375ed:	call   0x140005db0
   1400375f2:	mov    BYTE PTR [rbp+0xdb],0x0
   1400375f9:	lea    rax,[rip+0xffffffffffffb568]        # 0x140032b68
   140037600:	jmp    0x14003760b
   140037602:	lea    rax,[rip+0xffffffffffffb55d]        # 0x140032b66
   140037609:	jmp    0x14003760b
   14003760b:	add    rsp,0x40
   14003760f:	pop    rbp
   140037610:	ret    
   140037611:	int3   
   140037612:	int3   
   140037613:	int3   
   140037614:	int3   
   140037615:	int3   
   140037616:	int3   
   140037617:	int3   
   140037618:	int3   
   140037619:	int3   
   14003761a:	int3   
   14003761b:	int3   
   14003761c:	int3   
   14003761d:	int3   
   14003761e:	int3   
   14003761f:	int3   
   140037620:	rex push rbp
   140037622:	sub    rsp,0x20
   140037626:	mov    rbp,rdx
   140037629:	lea    rcx,[rbp+0x470]
   140037630:	call   0x140003a90
   140037635:	add    rsp,0x20
   140037639:	pop    rbp
   14003763a:	ret    
   14003763b:	int3   
   14003763c:	int3   
   14003763d:	int3   
   14003763e:	int3   
   14003763f:	int3   
   140037640:	rex push rbp
   140037642:	sub    rsp,0x20
   140037646:	mov    rbp,rdx
   140037649:	lea    rcx,[rbp+0x260]
   140037650:	call   0x140031fc0
   140037655:	add    rsp,0x20
   140037659:	pop    rbp
   14003765a:	ret    
   14003765b:	int3   
   14003765c:	int3   
   14003765d:	int3   
   14003765e:	int3   
   14003765f:	int3   
   140037660:	rex push rbp
   140037662:	sub    rsp,0x20
   140037666:	mov    rbp,rdx
   140037669:	lea    rcx,[rbp+0x28]
   14003766d:	call   0x140003a90
   140037672:	add    rsp,0x20
   140037676:	pop    rbp
   140037677:	ret    
   140037678:	int3   
   140037679:	int3   
   14003767a:	int3   
   14003767b:	int3   
   14003767c:	int3   
   14003767d:	int3   
   14003767e:	int3   
   14003767f:	int3   
   140037680:	rex push rbp
   140037682:	sub    rsp,0x20
   140037686:	mov    rbp,rdx
   140037689:	mov    rcx,QWORD PTR [rbp+0x40]
   14003768d:	add    rcx,0x10
   140037691:	call   0x140003bf0
   140037696:	add    rsp,0x20
   14003769a:	pop    rbp
   14003769b:	ret    
   14003769c:	int3   
   14003769d:	int3   
   14003769e:	int3   
   14003769f:	int3   
   1400376a0:	rex push rbp
   1400376a2:	sub    rsp,0x20
   1400376a6:	mov    rbp,rdx
   1400376a9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400376ad:	add    rcx,0x40
   1400376b1:	call   0x140003a90
   1400376b6:	add    rsp,0x20
   1400376ba:	pop    rbp
   1400376bb:	ret    
   1400376bc:	int3   
   1400376bd:	int3   
   1400376be:	int3   
   1400376bf:	int3   
   1400376c0:	int3   
   1400376c1:	int3   
   1400376c2:	int3   
   1400376c3:	int3   
   1400376c4:	int3   
   1400376c5:	int3   
   1400376c6:	int3   
   1400376c7:	int3   
   1400376c8:	int3   
   1400376c9:	int3   
   1400376ca:	int3   
   1400376cb:	int3   
   1400376cc:	int3   
   1400376cd:	int3   
   1400376ce:	int3   
   1400376cf:	int3   
   1400376d0:	rex push rbp
   1400376d2:	sub    rsp,0x20
   1400376d6:	mov    rbp,rdx
   1400376d9:	lea    rcx,[rbp+0x20]
   1400376dd:	call   0x140003a90
   1400376e2:	add    rsp,0x20
   1400376e6:	pop    rbp
   1400376e7:	ret    
   1400376e8:	int3   
   1400376e9:	int3   
   1400376ea:	int3   
   1400376eb:	int3   
   1400376ec:	int3   
   1400376ed:	int3   
   1400376ee:	int3   
   1400376ef:	int3   
   1400376f0:	rex push rbp
   1400376f2:	sub    rsp,0x20
   1400376f6:	mov    rbp,rdx
   1400376f9:	lea    rcx,[rbp+0x48]
   1400376fd:	call   0x140003a90
   140037702:	add    rsp,0x20
   140037706:	pop    rbp
   140037707:	ret    
   140037708:	int3   
   140037709:	int3   
   14003770a:	int3   
   14003770b:	int3   
   14003770c:	int3   
   14003770d:	int3   
   14003770e:	int3   
   14003770f:	int3   
   140037710:	rex push rbp
   140037712:	sub    rsp,0x20
   140037716:	mov    rbp,rdx
   140037719:	lea    rcx,[rbp+0x70]
   14003771d:	call   0x140003a90
   140037722:	add    rsp,0x20
   140037726:	pop    rbp
   140037727:	ret    
   140037728:	int3   
   140037729:	int3   
   14003772a:	int3   
   14003772b:	int3   
   14003772c:	int3   
   14003772d:	int3   
   14003772e:	int3   
   14003772f:	int3   
   140037730:	rex push rbp
   140037732:	sub    rsp,0x20
   140037736:	mov    rbp,rdx
   140037739:	lea    rcx,[rbp+0x98]
   140037740:	call   0x140003a90
   140037745:	add    rsp,0x20
   140037749:	pop    rbp
   14003774a:	ret    
   14003774b:	int3   
   14003774c:	int3   
   14003774d:	int3   
   14003774e:	int3   
   14003774f:	int3   
   140037750:	rex push rbp
   140037752:	sub    rsp,0x20
   140037756:	mov    rbp,rdx
   140037759:	lea    rcx,[rbp+0xc0]
   140037760:	call   0x140003a90
   140037765:	add    rsp,0x20
   140037769:	pop    rbp
   14003776a:	ret    
   14003776b:	int3   
   14003776c:	int3   
   14003776d:	int3   
   14003776e:	int3   
   14003776f:	int3   
   140037770:	rex push rbp
   140037772:	sub    rsp,0x20
   140037776:	mov    rbp,rdx
   140037779:	lea    rcx,[rbp+0xe8]
   140037780:	call   0x140003a90
   140037785:	add    rsp,0x20
   140037789:	pop    rbp
   14003778a:	ret    
   14003778b:	int3   
   14003778c:	int3   
   14003778d:	int3   
   14003778e:	int3   
   14003778f:	int3   
   140037790:	rex push rbp
   140037792:	sub    rsp,0x20
   140037796:	mov    rbp,rdx
   140037799:	lea    rcx,[rbp+0x118]
   1400377a0:	call   0x140003a90
   1400377a5:	add    rsp,0x20
   1400377a9:	pop    rbp
   1400377aa:	ret    
   1400377ab:	int3   
   1400377ac:	int3   
   1400377ad:	int3   
   1400377ae:	int3   
   1400377af:	int3   
   1400377b0:	rex push rbp
   1400377b2:	sub    rsp,0x20
   1400377b6:	mov    rbp,rdx
   1400377b9:	lea    rcx,[rbp+0x140]
   1400377c0:	call   0x140003a90
   1400377c5:	add    rsp,0x20
   1400377c9:	pop    rbp
   1400377ca:	ret    
   1400377cb:	int3   
   1400377cc:	int3   
   1400377cd:	int3   
   1400377ce:	int3   
   1400377cf:	int3   
   1400377d0:	int3   
   1400377d1:	int3   
   1400377d2:	int3   
   1400377d3:	int3   
   1400377d4:	int3   
   1400377d5:	int3   
   1400377d6:	int3   
   1400377d7:	int3   
   1400377d8:	int3   
   1400377d9:	int3   
   1400377da:	int3   
   1400377db:	int3   
   1400377dc:	int3   
   1400377dd:	int3   
   1400377de:	int3   
   1400377df:	int3   
   1400377e0:	rex push rbp
   1400377e2:	sub    rsp,0x20
   1400377e6:	mov    rbp,rdx
   1400377e9:	lea    rcx,[rbp+0x60]
   1400377ed:	call   0x140003a90
   1400377f2:	add    rsp,0x20
   1400377f6:	pop    rbp
   1400377f7:	ret    
   1400377f8:	int3   
   1400377f9:	int3   
   1400377fa:	int3   
   1400377fb:	int3   
   1400377fc:	int3   
   1400377fd:	int3   
   1400377fe:	int3   
   1400377ff:	int3   
   140037800:	rex push rbp
   140037802:	sub    rsp,0x20
   140037806:	mov    rbp,rdx
   140037809:	lea    rcx,[rbp+0x90]
   140037810:	call   0x140003a90
   140037815:	add    rsp,0x20
   140037819:	pop    rbp
   14003781a:	ret    
   14003781b:	int3   
   14003781c:	int3   
   14003781d:	int3   
   14003781e:	int3   
   14003781f:	int3   
   140037820:	rex push rbp
   140037822:	sub    rsp,0x20
   140037826:	mov    rbp,rdx
   140037829:	lea    rcx,[rbp+0xb8]
   140037830:	call   0x140003a90
   140037835:	add    rsp,0x20
   140037839:	pop    rbp
   14003783a:	ret    
   14003783b:	int3   
   14003783c:	int3   
   14003783d:	int3   
   14003783e:	int3   
   14003783f:	int3   
   140037840:	rex push rbp
   140037842:	sub    rsp,0x20
   140037846:	mov    rbp,rdx
   140037849:	lea    rcx,[rbp+0xe0]
   140037850:	call   0x140003a90
   140037855:	add    rsp,0x20
   140037859:	pop    rbp
   14003785a:	ret    
   14003785b:	int3   
   14003785c:	int3   
   14003785d:	int3   
   14003785e:	int3   
   14003785f:	int3   
   140037860:	rex push rbp
   140037862:	sub    rsp,0x20
   140037866:	mov    rbp,rdx
   140037869:	lea    rcx,[rbp+0x118]
   140037870:	call   0x140003a90
   140037875:	add    rsp,0x20
   140037879:	pop    rbp
   14003787a:	ret    
   14003787b:	int3   
   14003787c:	int3   
   14003787d:	int3   
   14003787e:	int3   
   14003787f:	int3   
   140037880:	rex push rbp
   140037882:	sub    rsp,0x20
   140037886:	mov    rbp,rdx
   140037889:	lea    rcx,[rbp+0x140]
   140037890:	call   0x140003a90
   140037895:	add    rsp,0x20
   140037899:	pop    rbp
   14003789a:	ret    
   14003789b:	int3   
   14003789c:	int3   
   14003789d:	int3   
   14003789e:	int3   
   14003789f:	int3   
   1400378a0:	rex push rbp
   1400378a2:	sub    rsp,0x20
   1400378a6:	mov    rbp,rdx
   1400378a9:	lea    rcx,[rbp+0x168]
   1400378b0:	call   0x140003a90
   1400378b5:	add    rsp,0x20
   1400378b9:	pop    rbp
   1400378ba:	ret    
   1400378bb:	int3   
   1400378bc:	int3   
   1400378bd:	int3   
   1400378be:	int3   
   1400378bf:	int3   
   1400378c0:	rex push rbp
   1400378c2:	sub    rsp,0x20
   1400378c6:	mov    rbp,rdx
   1400378c9:	lea    rcx,[rbp+0x190]
   1400378d0:	call   0x140003a90
   1400378d5:	add    rsp,0x20
   1400378d9:	pop    rbp
   1400378da:	ret    
   1400378db:	int3   
   1400378dc:	int3   
   1400378dd:	int3   
   1400378de:	int3   
   1400378df:	int3   
   1400378e0:	rex push rbp
   1400378e2:	sub    rsp,0x20
   1400378e6:	mov    rbp,rdx
   1400378e9:	lea    rcx,[rbp+0x1b8]
   1400378f0:	call   0x140003a90
   1400378f5:	add    rsp,0x20
   1400378f9:	pop    rbp
   1400378fa:	ret    
   1400378fb:	int3   
   1400378fc:	int3   
   1400378fd:	int3   
   1400378fe:	int3   
   1400378ff:	int3   
   140037900:	rex push rbp
   140037902:	sub    rsp,0x20
   140037906:	mov    rbp,rdx
   140037909:	lea    rcx,[rbp+0x1e0]
   140037910:	call   0x140003a90
   140037915:	add    rsp,0x20
   140037919:	pop    rbp
   14003791a:	ret    
   14003791b:	int3   
   14003791c:	int3   
   14003791d:	int3   
   14003791e:	int3   
   14003791f:	int3   
   140037920:	rex push rbp
   140037922:	sub    rsp,0x20
   140037926:	mov    rbp,rdx
   140037929:	lea    rcx,[rbp+0x208]
   140037930:	call   0x140003a90
   140037935:	add    rsp,0x20
   140037939:	pop    rbp
   14003793a:	ret    
   14003793b:	int3   
   14003793c:	int3   
   14003793d:	int3   
   14003793e:	int3   
   14003793f:	int3   
   140037940:	rex push rbp
   140037942:	sub    rsp,0x20
   140037946:	mov    rbp,rdx
   140037949:	lea    rcx,[rbp+0x230]
   140037950:	call   0x140003a90
   140037955:	add    rsp,0x20
   140037959:	pop    rbp
   14003795a:	ret    
   14003795b:	int3   
   14003795c:	int3   
   14003795d:	int3   
   14003795e:	int3   
   14003795f:	int3   
   140037960:	rex push rbp
   140037962:	sub    rsp,0x20
   140037966:	mov    rbp,rdx
   140037969:	lea    rcx,[rbp+0x258]
   140037970:	call   0x140003a90
   140037975:	add    rsp,0x20
   140037979:	pop    rbp
   14003797a:	ret    
   14003797b:	int3   
   14003797c:	int3   
   14003797d:	int3   
   14003797e:	int3   
   14003797f:	int3   
   140037980:	rex push rbp
   140037982:	sub    rsp,0x20
   140037986:	mov    rbp,rdx
   140037989:	lea    rcx,[rbp+0x280]
   140037990:	call   0x140003a90
   140037995:	add    rsp,0x20
   140037999:	pop    rbp
   14003799a:	ret    
   14003799b:	int3   
   14003799c:	int3   
   14003799d:	int3   
   14003799e:	int3   
   14003799f:	int3   
   1400379a0:	rex push rbp
   1400379a2:	sub    rsp,0x20
   1400379a6:	mov    rbp,rdx
   1400379a9:	lea    rcx,[rbp+0x2a8]
   1400379b0:	call   0x140003a90
   1400379b5:	add    rsp,0x20
   1400379b9:	pop    rbp
   1400379ba:	ret    
   1400379bb:	int3   
   1400379bc:	int3   
   1400379bd:	int3   
   1400379be:	int3   
   1400379bf:	int3   
   1400379c0:	rex push rbp
   1400379c2:	sub    rsp,0x20
   1400379c6:	mov    rbp,rdx
   1400379c9:	lea    rcx,[rbp+0x2d0]
   1400379d0:	call   0x140003a90
   1400379d5:	add    rsp,0x20
   1400379d9:	pop    rbp
   1400379da:	ret    
   1400379db:	int3   
   1400379dc:	int3   
   1400379dd:	int3   
   1400379de:	int3   
   1400379df:	int3   
   1400379e0:	rex push rbp
   1400379e2:	sub    rsp,0x20
   1400379e6:	mov    rbp,rdx
   1400379e9:	lea    rcx,[rbp+0x2f8]
   1400379f0:	call   0x140003a90
   1400379f5:	add    rsp,0x20
   1400379f9:	pop    rbp
   1400379fa:	ret    
   1400379fb:	int3   
   1400379fc:	int3   
   1400379fd:	int3   
   1400379fe:	int3   
   1400379ff:	int3   
   140037a00:	rex push rbp
   140037a02:	sub    rsp,0x20
   140037a06:	mov    rbp,rdx
   140037a09:	lea    rcx,[rbp+0x320]
   140037a10:	call   0x140003a90
   140037a15:	add    rsp,0x20
   140037a19:	pop    rbp
   140037a1a:	ret    
   140037a1b:	int3   
   140037a1c:	int3   
   140037a1d:	int3   
   140037a1e:	int3   
   140037a1f:	int3   
   140037a20:	rex push rbp
   140037a22:	sub    rsp,0x20
   140037a26:	mov    rbp,rdx
   140037a29:	lea    rcx,[rbp+0x348]
   140037a30:	call   0x140003a90
   140037a35:	add    rsp,0x20
   140037a39:	pop    rbp
   140037a3a:	ret    
   140037a3b:	int3   
   140037a3c:	int3   
   140037a3d:	int3   
   140037a3e:	int3   
   140037a3f:	int3   
   140037a40:	rex push rbp
   140037a42:	sub    rsp,0x20
   140037a46:	mov    rbp,rdx
   140037a49:	lea    rcx,[rbp+0x370]
   140037a50:	call   0x140003a90
   140037a55:	add    rsp,0x20
   140037a59:	pop    rbp
   140037a5a:	ret    
   140037a5b:	int3   
   140037a5c:	int3   
   140037a5d:	int3   
   140037a5e:	int3   
   140037a5f:	int3   
   140037a60:	rex push rbp
   140037a62:	sub    rsp,0x20
   140037a66:	mov    rbp,rdx
   140037a69:	lea    rcx,[rbp+0x3a8]
   140037a70:	call   0x140003a90
   140037a75:	add    rsp,0x20
   140037a79:	pop    rbp
   140037a7a:	ret    
   140037a7b:	int3   
   140037a7c:	int3   
   140037a7d:	int3   
   140037a7e:	int3   
   140037a7f:	int3   
   140037a80:	rex push rbp
   140037a82:	sub    rsp,0x20
   140037a86:	mov    rbp,rdx
   140037a89:	lea    rcx,[rbp+0x3d0]
   140037a90:	call   0x140003a90
   140037a95:	add    rsp,0x20
   140037a99:	pop    rbp
   140037a9a:	ret    
   140037a9b:	int3   
   140037a9c:	int3   
   140037a9d:	int3   
   140037a9e:	int3   
   140037a9f:	int3   
   140037aa0:	rex push rbp
   140037aa2:	sub    rsp,0x20
   140037aa6:	mov    rbp,rdx
   140037aa9:	lea    rcx,[rbp+0x3f8]
   140037ab0:	call   0x140003a90
   140037ab5:	add    rsp,0x20
   140037ab9:	pop    rbp
   140037aba:	ret    
   140037abb:	int3   
   140037abc:	int3   
   140037abd:	int3   
   140037abe:	int3   
   140037abf:	int3   
   140037ac0:	int3   
   140037ac1:	int3   
   140037ac2:	int3   
   140037ac3:	int3   
   140037ac4:	int3   
   140037ac5:	int3   
   140037ac6:	int3   
   140037ac7:	int3   
   140037ac8:	int3   
   140037ac9:	int3   
   140037aca:	int3   
   140037acb:	int3   
   140037acc:	int3   
   140037acd:	int3   
   140037ace:	int3   
   140037acf:	int3   
   140037ad0:	rex push rbp
   140037ad2:	sub    rsp,0x20
   140037ad6:	mov    rbp,rdx
   140037ad9:	lea    rcx,[rbp+0x58]
   140037add:	call   0x140003bf0
   140037ae2:	add    rsp,0x20
   140037ae6:	pop    rbp
   140037ae7:	ret    
   140037ae8:	int3   
   140037ae9:	int3   
   140037aea:	int3   
   140037aeb:	int3   
   140037aec:	int3   
   140037aed:	int3   
   140037aee:	int3   
   140037aef:	int3   
   140037af0:	rex push rbp
   140037af2:	sub    rsp,0x20
   140037af6:	mov    rbp,rdx
   140037af9:	lea    rcx,[rbp+0x30]
   140037afd:	call   0x140003a90
   140037b02:	add    rsp,0x20
   140037b06:	pop    rbp
   140037b07:	ret    
   140037b08:	int3   
   140037b09:	int3   
   140037b0a:	int3   
   140037b0b:	int3   
   140037b0c:	int3   
   140037b0d:	int3   
   140037b0e:	int3   
   140037b0f:	int3   
   140037b10:	rex push rbp
   140037b12:	sub    rsp,0x20
   140037b16:	mov    rbp,rdx
   140037b19:	lea    rcx,[rbp+0x28]
   140037b1d:	call   0x140003a90
   140037b22:	add    rsp,0x20
   140037b26:	pop    rbp
   140037b27:	ret    
   140037b28:	int3   
   140037b29:	int3   
   140037b2a:	int3   
   140037b2b:	int3   
   140037b2c:	int3   
   140037b2d:	int3   
   140037b2e:	int3   
   140037b2f:	int3   
   140037b30:	rex push rbp
   140037b32:	sub    rsp,0x20
   140037b36:	mov    rbp,rdx
   140037b39:	lea    rcx,[rbp+0x58]
   140037b3d:	call   0x140003a90
   140037b42:	add    rsp,0x20
   140037b46:	pop    rbp
   140037b47:	ret    
   140037b48:	int3   
   140037b49:	int3   
   140037b4a:	int3   
   140037b4b:	int3   
   140037b4c:	int3   
   140037b4d:	int3   
   140037b4e:	int3   
   140037b4f:	int3   
   140037b50:	rex push rbp
   140037b52:	sub    rsp,0x20
   140037b56:	mov    rbp,rdx
   140037b59:	lea    rcx,[rbp+0x80]
   140037b60:	call   0x140003a90
   140037b65:	add    rsp,0x20
   140037b69:	pop    rbp
   140037b6a:	ret    
   140037b6b:	int3   
   140037b6c:	int3   
   140037b6d:	int3   
   140037b6e:	int3   
   140037b6f:	int3   
   140037b70:	rex push rbp
   140037b72:	sub    rsp,0x20
   140037b76:	mov    rbp,rdx
   140037b79:	lea    rcx,[rbp+0xa8]
   140037b80:	call   0x140003a90
   140037b85:	add    rsp,0x20
   140037b89:	pop    rbp
   140037b8a:	ret    
   140037b8b:	int3   
   140037b8c:	int3   
   140037b8d:	int3   
   140037b8e:	int3   
   140037b8f:	int3   
   140037b90:	int3   
   140037b91:	int3   
   140037b92:	int3   
   140037b93:	int3   
   140037b94:	int3   
   140037b95:	int3   
   140037b96:	int3   
   140037b97:	int3   
   140037b98:	int3   
   140037b99:	int3   
   140037b9a:	int3   
   140037b9b:	int3   
   140037b9c:	int3   
   140037b9d:	int3   
   140037b9e:	int3   
   140037b9f:	int3   
   140037ba0:	rex push rbp
   140037ba2:	sub    rsp,0x20
   140037ba6:	mov    rbp,rdx
   140037ba9:	lea    rcx,[rbp+0x28]
   140037bad:	call   0x140003a90
   140037bb2:	add    rsp,0x20
   140037bb6:	pop    rbp
   140037bb7:	ret    
   140037bb8:	int3   
   140037bb9:	int3   
   140037bba:	int3   
   140037bbb:	int3   
   140037bbc:	int3   
   140037bbd:	int3   
   140037bbe:	int3   
   140037bbf:	int3   
   140037bc0:	rex push rbp
   140037bc2:	sub    rsp,0x20
   140037bc6:	mov    rbp,rdx
   140037bc9:	lea    rcx,[rbp+0x58]
   140037bcd:	call   0x140003a90
   140037bd2:	add    rsp,0x20
   140037bd6:	pop    rbp
   140037bd7:	ret    
   140037bd8:	int3   
   140037bd9:	int3   
   140037bda:	int3   
   140037bdb:	int3   
   140037bdc:	int3   
   140037bdd:	int3   
   140037bde:	int3   
   140037bdf:	int3   
   140037be0:	rex push rbp
   140037be2:	sub    rsp,0x20
   140037be6:	mov    rbp,rdx
   140037be9:	lea    rcx,[rbp+0xa0]
   140037bf0:	call   0x140003a90
   140037bf5:	add    rsp,0x20
   140037bf9:	pop    rbp
   140037bfa:	ret    
   140037bfb:	int3   
   140037bfc:	int3   
   140037bfd:	int3   
   140037bfe:	int3   
   140037bff:	int3   
   140037c00:	rex push rbp
   140037c02:	sub    rsp,0x20
   140037c06:	mov    rbp,rdx
   140037c09:	lea    rcx,[rbp+0xc8]
   140037c10:	call   0x140003a90
   140037c15:	add    rsp,0x20
   140037c19:	pop    rbp
   140037c1a:	ret    
   140037c1b:	int3   
   140037c1c:	int3   
   140037c1d:	int3   
   140037c1e:	int3   
   140037c1f:	int3   
   140037c20:	rex push rbp
   140037c22:	sub    rsp,0x20
   140037c26:	mov    rbp,rdx
   140037c29:	lea    rcx,[rbp+0xf0]
   140037c30:	call   0x140003a90
   140037c35:	add    rsp,0x20
   140037c39:	pop    rbp
   140037c3a:	ret    
   140037c3b:	int3   
   140037c3c:	int3   
   140037c3d:	int3   
   140037c3e:	int3   
   140037c3f:	int3   
   140037c40:	int3   
   140037c41:	int3   
   140037c42:	int3   
   140037c43:	int3   
   140037c44:	int3   
   140037c45:	int3   
   140037c46:	int3   
   140037c47:	int3   
   140037c48:	int3   
   140037c49:	int3   
   140037c4a:	int3   
   140037c4b:	int3   
   140037c4c:	int3   
   140037c4d:	int3   
   140037c4e:	int3   
   140037c4f:	int3   
   140037c50:	rex push rbp
   140037c52:	sub    rsp,0x20
   140037c56:	mov    rbp,rdx
   140037c59:	mov    rcx,QWORD PTR [rbp+0x150]
   140037c60:	call   0x1400030d0
   140037c65:	add    rsp,0x20
   140037c69:	pop    rbp
   140037c6a:	ret    
   140037c6b:	int3   
   140037c6c:	int3   
   140037c6d:	int3   
   140037c6e:	int3   
   140037c6f:	int3   
   140037c70:	rex push rbp
   140037c72:	sub    rsp,0x20
   140037c76:	mov    rbp,rdx
   140037c79:	lea    rcx,[rbp+0x20]
   140037c7d:	call   0x140003a90
   140037c82:	add    rsp,0x20
   140037c86:	pop    rbp
   140037c87:	ret    
   140037c88:	int3   
   140037c89:	int3   
   140037c8a:	int3   
   140037c8b:	int3   
   140037c8c:	int3   
   140037c8d:	int3   
   140037c8e:	int3   
   140037c8f:	int3   
   140037c90:	rex push rbp
   140037c92:	sub    rsp,0x20
   140037c96:	mov    rbp,rdx
   140037c99:	lea    rcx,[rbp+0x48]
   140037c9d:	call   0x140003a90
   140037ca2:	add    rsp,0x20
   140037ca6:	pop    rbp
   140037ca7:	ret    
   140037ca8:	int3   
   140037ca9:	int3   
   140037caa:	int3   
   140037cab:	int3   
   140037cac:	int3   
   140037cad:	int3   
   140037cae:	int3   
   140037caf:	int3   
   140037cb0:	rex push rbp
   140037cb2:	sub    rsp,0x20
   140037cb6:	mov    rbp,rdx
   140037cb9:	mov    rcx,QWORD PTR [rbp+0x150]
   140037cc0:	add    rcx,0x68
   140037cc4:	call   0x140003060
   140037cc9:	add    rsp,0x20
   140037ccd:	pop    rbp
   140037cce:	ret    
   140037ccf:	int3   
   140037cd0:	rex push rbp
   140037cd2:	sub    rsp,0x20
   140037cd6:	mov    rbp,rdx
   140037cd9:	lea    rcx,[rbp+0x70]
   140037cdd:	call   0x140003a90
   140037ce2:	add    rsp,0x20
   140037ce6:	pop    rbp
   140037ce7:	ret    
   140037ce8:	int3   
   140037ce9:	int3   
   140037cea:	int3   
   140037ceb:	int3   
   140037cec:	int3   
   140037ced:	int3   
   140037cee:	int3   
   140037cef:	int3   
   140037cf0:	rex push rbp
   140037cf2:	sub    rsp,0x20
   140037cf6:	mov    rbp,rdx
   140037cf9:	lea    rcx,[rbp+0x98]
   140037d00:	call   0x140003a90
   140037d05:	add    rsp,0x20
   140037d09:	pop    rbp
   140037d0a:	ret    
   140037d0b:	int3   
   140037d0c:	int3   
   140037d0d:	int3   
   140037d0e:	int3   
   140037d0f:	int3   
   140037d10:	rex push rbp
   140037d12:	sub    rsp,0x20
   140037d16:	mov    rbp,rdx
   140037d19:	mov    rcx,QWORD PTR [rbp+0x150]
   140037d20:	add    rcx,0xd8
   140037d27:	call   0x140003060
   140037d2c:	add    rsp,0x20
   140037d30:	pop    rbp
   140037d31:	ret    
   140037d32:	int3   
   140037d33:	int3   
   140037d34:	int3   
   140037d35:	int3   
   140037d36:	int3   
   140037d37:	int3   
   140037d38:	int3   
   140037d39:	int3   
   140037d3a:	int3   
   140037d3b:	int3   
   140037d3c:	int3   
   140037d3d:	int3   
   140037d3e:	int3   
   140037d3f:	int3   
   140037d40:	rex push rbp
   140037d42:	sub    rsp,0x20
   140037d46:	mov    rbp,rdx
   140037d49:	lea    rcx,[rbp+0xc0]
   140037d50:	call   0x140003a90
   140037d55:	add    rsp,0x20
   140037d59:	pop    rbp
   140037d5a:	ret    
   140037d5b:	int3   
   140037d5c:	int3   
   140037d5d:	int3   
   140037d5e:	int3   
   140037d5f:	int3   
   140037d60:	rex push rbp
   140037d62:	sub    rsp,0x20
   140037d66:	mov    rbp,rdx
   140037d69:	lea    rcx,[rbp+0xe8]
   140037d70:	call   0x140003a90
   140037d75:	add    rsp,0x20
   140037d79:	pop    rbp
   140037d7a:	ret    
   140037d7b:	int3   
   140037d7c:	int3   
   140037d7d:	int3   
   140037d7e:	int3   
   140037d7f:	int3   
   140037d80:	rex push rbp
   140037d82:	sub    rsp,0x20
   140037d86:	mov    rbp,rdx
   140037d89:	lea    rcx,[rbp+0x110]
   140037d90:	call   0x140003a90
   140037d95:	add    rsp,0x20
   140037d99:	pop    rbp
   140037d9a:	ret    
   140037d9b:	int3   
   140037d9c:	int3   
   140037d9d:	int3   
   140037d9e:	int3   
   140037d9f:	int3   
   140037da0:	int3   
   140037da1:	int3   
   140037da2:	int3   
   140037da3:	int3   
   140037da4:	int3   
   140037da5:	int3   
   140037da6:	int3   
   140037da7:	int3   
   140037da8:	int3   
   140037da9:	int3   
   140037daa:	int3   
   140037dab:	int3   
   140037dac:	int3   
   140037dad:	int3   
   140037dae:	int3   
   140037daf:	int3   
   140037db0:	rex push rbp
   140037db2:	sub    rsp,0x20
   140037db6:	mov    rbp,rdx
   140037db9:	mov    rcx,QWORD PTR [rbp+0x80]
   140037dc0:	call   0x140003a90
   140037dc5:	add    rsp,0x20
   140037dc9:	pop    rbp
   140037dca:	ret    
   140037dcb:	int3   
   140037dcc:	int3   
   140037dcd:	int3   
   140037dce:	int3   
   140037dcf:	int3   
   140037dd0:	rex push rbp
   140037dd2:	sub    rsp,0x20
   140037dd6:	mov    rbp,rdx
   140037dd9:	lea    rcx,[rbp+0x28]
   140037ddd:	call   0x140003a90
   140037de2:	add    rsp,0x20
   140037de6:	pop    rbp
   140037de7:	ret    
   140037de8:	int3   
   140037de9:	int3   
   140037dea:	int3   
   140037deb:	int3   
   140037dec:	int3   
   140037ded:	int3   
   140037dee:	int3   
   140037def:	int3   
   140037df0:	rex push rbp
   140037df2:	sub    rsp,0x20
   140037df6:	mov    rbp,rdx
   140037df9:	mov    rcx,QWORD PTR [rbp+0x90]
   140037e00:	call   0x140003a90
   140037e05:	add    rsp,0x20
   140037e09:	pop    rbp
   140037e0a:	ret    
   140037e0b:	int3   
   140037e0c:	int3   
   140037e0d:	int3   
   140037e0e:	int3   
   140037e0f:	int3   
   140037e10:	rex push rbp
   140037e12:	sub    rsp,0x20
   140037e16:	mov    rbp,rdx
   140037e19:	lea    rcx,[rbp+0x38]
   140037e1d:	call   0x140003a90
   140037e22:	add    rsp,0x20
   140037e26:	pop    rbp
   140037e27:	ret    
   140037e28:	int3   
   140037e29:	int3   
   140037e2a:	int3   
   140037e2b:	int3   
   140037e2c:	int3   
   140037e2d:	int3   
   140037e2e:	int3   
   140037e2f:	int3   
   140037e30:	rex push rbp
   140037e32:	sub    rsp,0x20
   140037e36:	mov    rbp,rdx
   140037e39:	mov    rcx,QWORD PTR [rbp+0x3d0]
   140037e40:	call   0x140002f80
   140037e45:	add    rsp,0x20
   140037e49:	pop    rbp
   140037e4a:	ret    
   140037e4b:	int3   
   140037e4c:	int3   
   140037e4d:	int3   
   140037e4e:	int3   
   140037e4f:	int3   
   140037e50:	rex push rbp
   140037e52:	sub    rsp,0x20
   140037e56:	mov    rbp,rdx
   140037e59:	lea    rcx,[rbp+0x20]
   140037e5d:	call   0x140003a90
   140037e62:	add    rsp,0x20
   140037e66:	pop    rbp
   140037e67:	ret    
   140037e68:	int3   
   140037e69:	int3   
   140037e6a:	int3   
   140037e6b:	int3   
   140037e6c:	int3   
   140037e6d:	int3   
   140037e6e:	int3   
   140037e6f:	int3   
   140037e70:	rex push rbp
   140037e72:	sub    rsp,0x20
   140037e76:	mov    rbp,rdx
   140037e79:	lea    rcx,[rbp+0x48]
   140037e7d:	call   0x140003a90
   140037e82:	add    rsp,0x20
   140037e86:	pop    rbp
   140037e87:	ret    
   140037e88:	int3   
   140037e89:	int3   
   140037e8a:	int3   
   140037e8b:	int3   
   140037e8c:	int3   
   140037e8d:	int3   
   140037e8e:	int3   
   140037e8f:	int3   
   140037e90:	rex push rbp
   140037e92:	sub    rsp,0x20
   140037e96:	mov    rbp,rdx
   140037e99:	lea    rcx,[rbp+0x70]
   140037e9d:	call   0x140003a90
   140037ea2:	add    rsp,0x20
   140037ea6:	pop    rbp
   140037ea7:	ret    
   140037ea8:	int3   
   140037ea9:	int3   
   140037eaa:	int3   
   140037eab:	int3   
   140037eac:	int3   
   140037ead:	int3   
   140037eae:	int3   
   140037eaf:	int3   
   140037eb0:	rex push rbp
   140037eb2:	sub    rsp,0x20
   140037eb6:	mov    rbp,rdx
   140037eb9:	mov    rcx,QWORD PTR [rbp+0x3d0]
   140037ec0:	add    rcx,0x148
   140037ec7:	call   0x140002fc0
   140037ecc:	add    rsp,0x20
   140037ed0:	pop    rbp
   140037ed1:	ret    
   140037ed2:	int3   
   140037ed3:	int3   
   140037ed4:	int3   
   140037ed5:	int3   
   140037ed6:	int3   
   140037ed7:	int3   
   140037ed8:	int3   
   140037ed9:	int3   
   140037eda:	int3   
   140037edb:	int3   
   140037edc:	int3   
   140037edd:	int3   
   140037ede:	int3   
   140037edf:	int3   
   140037ee0:	rex push rbp
   140037ee2:	sub    rsp,0x20
   140037ee6:	mov    rbp,rdx
   140037ee9:	lea    rcx,[rbp+0x98]
   140037ef0:	call   0x140003a90
   140037ef5:	add    rsp,0x20
   140037ef9:	pop    rbp
   140037efa:	ret    
   140037efb:	int3   
   140037efc:	int3   
   140037efd:	int3   
   140037efe:	int3   
   140037eff:	int3   
   140037f00:	rex push rbp
   140037f02:	sub    rsp,0x20
   140037f06:	mov    rbp,rdx
   140037f09:	lea    rcx,[rbp+0xc0]
   140037f10:	call   0x140003a90
   140037f15:	add    rsp,0x20
   140037f19:	pop    rbp
   140037f1a:	ret    
   140037f1b:	int3   
   140037f1c:	int3   
   140037f1d:	int3   
   140037f1e:	int3   
   140037f1f:	int3   
   140037f20:	rex push rbp
   140037f22:	sub    rsp,0x20
   140037f26:	mov    rbp,rdx
   140037f29:	lea    rcx,[rbp+0xe8]
   140037f30:	call   0x140003a90
   140037f35:	add    rsp,0x20
   140037f39:	pop    rbp
   140037f3a:	ret    
   140037f3b:	int3   
   140037f3c:	int3   
   140037f3d:	int3   
   140037f3e:	int3   
   140037f3f:	int3   
   140037f40:	rex push rbp
   140037f42:	sub    rsp,0x20
   140037f46:	mov    rbp,rdx
   140037f49:	mov    rcx,QWORD PTR [rbp+0x3d0]
   140037f50:	add    rcx,0x270
   140037f57:	call   0x140002ff0
   140037f5c:	add    rsp,0x20
   140037f60:	pop    rbp
   140037f61:	ret    
   140037f62:	int3   
   140037f63:	int3   
   140037f64:	int3   
   140037f65:	int3   
   140037f66:	int3   
   140037f67:	int3   
   140037f68:	int3   
   140037f69:	int3   
   140037f6a:	int3   
   140037f6b:	int3   
   140037f6c:	int3   
   140037f6d:	int3   
   140037f6e:	int3   
   140037f6f:	int3   
   140037f70:	rex push rbp
   140037f72:	sub    rsp,0x20
   140037f76:	mov    rbp,rdx
   140037f79:	lea    rcx,[rbp+0x110]
   140037f80:	call   0x140003a90
   140037f85:	add    rsp,0x20
   140037f89:	pop    rbp
   140037f8a:	ret    
   140037f8b:	int3   
   140037f8c:	int3   
   140037f8d:	int3   
   140037f8e:	int3   
   140037f8f:	int3   
   140037f90:	rex push rbp
   140037f92:	sub    rsp,0x20
   140037f96:	mov    rbp,rdx
   140037f99:	lea    rcx,[rbp+0x138]
   140037fa0:	call   0x140003a90
   140037fa5:	add    rsp,0x20
   140037fa9:	pop    rbp
   140037faa:	ret    
   140037fab:	int3   
   140037fac:	int3   
   140037fad:	int3   
   140037fae:	int3   
   140037faf:	int3   
   140037fb0:	rex push rbp
   140037fb2:	sub    rsp,0x20
   140037fb6:	mov    rbp,rdx
   140037fb9:	lea    rcx,[rbp+0x160]
   140037fc0:	call   0x140003a90
   140037fc5:	add    rsp,0x20
   140037fc9:	pop    rbp
   140037fca:	ret    
   140037fcb:	int3   
   140037fcc:	int3   
   140037fcd:	int3   
   140037fce:	int3   
   140037fcf:	int3   
   140037fd0:	rex push rbp
   140037fd2:	sub    rsp,0x20
   140037fd6:	mov    rbp,rdx
   140037fd9:	mov    rcx,QWORD PTR [rbp+0x3d0]
   140037fe0:	add    rcx,0x318
   140037fe7:	call   0x140003020
   140037fec:	add    rsp,0x20
   140037ff0:	pop    rbp
   140037ff1:	ret    
   140037ff2:	int3   
   140037ff3:	int3   
   140037ff4:	int3   
   140037ff5:	int3   
   140037ff6:	int3   
   140037ff7:	int3   
   140037ff8:	int3   
   140037ff9:	int3   
   140037ffa:	int3   
   140037ffb:	int3   
   140037ffc:	int3   
   140037ffd:	int3   
   140037ffe:	int3   
   140037fff:	int3   
   140038000:	rex push rbp
   140038002:	sub    rsp,0x20
   140038006:	mov    rbp,rdx
   140038009:	lea    rcx,[rbp+0x188]
   140038010:	call   0x140003a90
   140038015:	add    rsp,0x20
   140038019:	pop    rbp
   14003801a:	ret    
   14003801b:	int3   
   14003801c:	int3   
   14003801d:	int3   
   14003801e:	int3   
   14003801f:	int3   
   140038020:	rex push rbp
   140038022:	sub    rsp,0x20
   140038026:	mov    rbp,rdx
   140038029:	lea    rcx,[rbp+0x1b0]
   140038030:	call   0x140003a90
   140038035:	add    rsp,0x20
   140038039:	pop    rbp
   14003803a:	ret    
   14003803b:	int3   
   14003803c:	int3   
   14003803d:	int3   
   14003803e:	int3   
   14003803f:	int3   
   140038040:	rex push rbp
   140038042:	sub    rsp,0x20
   140038046:	mov    rbp,rdx
   140038049:	lea    rcx,[rbp+0x1d8]
   140038050:	call   0x140003a90
   140038055:	add    rsp,0x20
   140038059:	pop    rbp
   14003805a:	ret    
   14003805b:	int3   
   14003805c:	int3   
   14003805d:	int3   
   14003805e:	int3   
   14003805f:	int3   
   140038060:	rex push rbp
   140038062:	sub    rsp,0x20
   140038066:	mov    rbp,rdx
   140038069:	mov    rcx,QWORD PTR [rbp+0x3d0]
   140038070:	add    rcx,0x3e0
   140038077:	call   0x140003020
   14003807c:	add    rsp,0x20
   140038080:	pop    rbp
   140038081:	ret    
   140038082:	int3   
   140038083:	int3   
   140038084:	int3   
   140038085:	int3   
   140038086:	int3   
   140038087:	int3   
   140038088:	int3   
   140038089:	int3   
   14003808a:	int3   
   14003808b:	int3   
   14003808c:	int3   
   14003808d:	int3   
   14003808e:	int3   
   14003808f:	int3   
   140038090:	rex push rbp
   140038092:	sub    rsp,0x20
   140038096:	mov    rbp,rdx
   140038099:	lea    rcx,[rbp+0x200]
   1400380a0:	call   0x140003a90
   1400380a5:	add    rsp,0x20
   1400380a9:	pop    rbp
   1400380aa:	ret    
   1400380ab:	int3   
   1400380ac:	int3   
   1400380ad:	int3   
   1400380ae:	int3   
   1400380af:	int3   
   1400380b0:	rex push rbp
   1400380b2:	sub    rsp,0x20
   1400380b6:	mov    rbp,rdx
   1400380b9:	lea    rcx,[rbp+0x228]
   1400380c0:	call   0x140003a90
   1400380c5:	add    rsp,0x20
   1400380c9:	pop    rbp
   1400380ca:	ret    
   1400380cb:	int3   
   1400380cc:	int3   
   1400380cd:	int3   
   1400380ce:	int3   
   1400380cf:	int3   
   1400380d0:	rex push rbp
   1400380d2:	sub    rsp,0x20
   1400380d6:	mov    rbp,rdx
   1400380d9:	mov    rcx,QWORD PTR [rbp+0x3d0]
   1400380e0:	add    rcx,0x4a8
   1400380e7:	call   0x140003060
   1400380ec:	add    rsp,0x20
   1400380f0:	pop    rbp
   1400380f1:	ret    
   1400380f2:	int3   
   1400380f3:	int3   
   1400380f4:	int3   
   1400380f5:	int3   
   1400380f6:	int3   
   1400380f7:	int3   
   1400380f8:	int3   
   1400380f9:	int3   
   1400380fa:	int3   
   1400380fb:	int3   
   1400380fc:	int3   
   1400380fd:	int3   
   1400380fe:	int3   
   1400380ff:	int3   
   140038100:	rex push rbp
   140038102:	sub    rsp,0x20
   140038106:	mov    rbp,rdx
   140038109:	lea    rcx,[rbp+0x250]
   140038110:	call   0x140003a90
   140038115:	add    rsp,0x20
   140038119:	pop    rbp
   14003811a:	ret    
   14003811b:	int3   
   14003811c:	int3   
   14003811d:	int3   
   14003811e:	int3   
   14003811f:	int3   
   140038120:	rex push rbp
   140038122:	sub    rsp,0x20
   140038126:	mov    rbp,rdx
   140038129:	lea    rcx,[rbp+0x278]
   140038130:	call   0x140003a90
   140038135:	add    rsp,0x20
   140038139:	pop    rbp
   14003813a:	ret    
   14003813b:	int3   
   14003813c:	int3   
   14003813d:	int3   
   14003813e:	int3   
   14003813f:	int3   
   140038140:	rex push rbp
   140038142:	sub    rsp,0x20
   140038146:	mov    rbp,rdx
   140038149:	mov    rcx,QWORD PTR [rbp+0x3d0]
   140038150:	add    rcx,0x518
   140038157:	call   0x140003060
   14003815c:	add    rsp,0x20
   140038160:	pop    rbp
   140038161:	ret    
   140038162:	int3   
   140038163:	int3   
   140038164:	int3   
   140038165:	int3   
   140038166:	int3   
   140038167:	int3   
   140038168:	int3   
   140038169:	int3   
   14003816a:	int3   
   14003816b:	int3   
   14003816c:	int3   
   14003816d:	int3   
   14003816e:	int3   
   14003816f:	int3   
   140038170:	rex push rbp
   140038172:	sub    rsp,0x20
   140038176:	mov    rbp,rdx
   140038179:	lea    rcx,[rbp+0x2a0]
   140038180:	call   0x140003a90
   140038185:	add    rsp,0x20
   140038189:	pop    rbp
   14003818a:	ret    
   14003818b:	int3   
   14003818c:	int3   
   14003818d:	int3   
   14003818e:	int3   
   14003818f:	int3   
   140038190:	rex push rbp
   140038192:	sub    rsp,0x20
   140038196:	mov    rbp,rdx
   140038199:	lea    rcx,[rbp+0x2c8]
   1400381a0:	call   0x140003a90
   1400381a5:	add    rsp,0x20
   1400381a9:	pop    rbp
   1400381aa:	ret    
   1400381ab:	int3   
   1400381ac:	int3   
   1400381ad:	int3   
   1400381ae:	int3   
   1400381af:	int3   
   1400381b0:	rex push rbp
   1400381b2:	sub    rsp,0x20
   1400381b6:	mov    rbp,rdx
   1400381b9:	mov    rcx,QWORD PTR [rbp+0x3d0]
   1400381c0:	add    rcx,0x588
   1400381c7:	call   0x140003060
   1400381cc:	add    rsp,0x20
   1400381d0:	pop    rbp
   1400381d1:	ret    
   1400381d2:	int3   
   1400381d3:	int3   
   1400381d4:	int3   
   1400381d5:	int3   
   1400381d6:	int3   
   1400381d7:	int3   
   1400381d8:	int3   
   1400381d9:	int3   
   1400381da:	int3   
   1400381db:	int3   
   1400381dc:	int3   
   1400381dd:	int3   
   1400381de:	int3   
   1400381df:	int3   
   1400381e0:	rex push rbp
   1400381e2:	sub    rsp,0x20
   1400381e6:	mov    rbp,rdx
   1400381e9:	lea    rcx,[rbp+0x2f0]
   1400381f0:	call   0x140003a90
   1400381f5:	add    rsp,0x20
   1400381f9:	pop    rbp
   1400381fa:	ret    
   1400381fb:	int3   
   1400381fc:	int3   
   1400381fd:	int3   
   1400381fe:	int3   
   1400381ff:	int3   
   140038200:	rex push rbp
   140038202:	sub    rsp,0x20
   140038206:	mov    rbp,rdx
   140038209:	lea    rcx,[rbp+0x318]
   140038210:	call   0x140003a90
   140038215:	add    rsp,0x20
   140038219:	pop    rbp
   14003821a:	ret    
   14003821b:	int3   
   14003821c:	int3   
   14003821d:	int3   
   14003821e:	int3   
   14003821f:	int3   
   140038220:	rex push rbp
   140038222:	sub    rsp,0x20
   140038226:	mov    rbp,rdx
   140038229:	mov    rcx,QWORD PTR [rbp+0x3d0]
   140038230:	add    rcx,0x5f8
   140038237:	call   0x140003060
   14003823c:	add    rsp,0x20
   140038240:	pop    rbp
   140038241:	ret    
   140038242:	int3   
   140038243:	int3   
   140038244:	int3   
   140038245:	int3   
   140038246:	int3   
   140038247:	int3   
   140038248:	int3   
   140038249:	int3   
   14003824a:	int3   
   14003824b:	int3   
   14003824c:	int3   
   14003824d:	int3   
   14003824e:	int3   
   14003824f:	int3   
   140038250:	rex push rbp
   140038252:	sub    rsp,0x20
   140038256:	mov    rbp,rdx
   140038259:	lea    rcx,[rbp+0x340]
   140038260:	call   0x140003a90
   140038265:	add    rsp,0x20
   140038269:	pop    rbp
   14003826a:	ret    
   14003826b:	int3   
   14003826c:	int3   
   14003826d:	int3   
   14003826e:	int3   
   14003826f:	int3   
   140038270:	rex push rbp
   140038272:	sub    rsp,0x20
   140038276:	mov    rbp,rdx
   140038279:	lea    rcx,[rbp+0x368]
   140038280:	call   0x140003a90
   140038285:	add    rsp,0x20
   140038289:	pop    rbp
   14003828a:	ret    
   14003828b:	int3   
   14003828c:	int3   
   14003828d:	int3   
   14003828e:	int3   
   14003828f:	int3   
   140038290:	rex push rbp
   140038292:	sub    rsp,0x20
   140038296:	mov    rbp,rdx
   140038299:	lea    rcx,[rbp+0x390]
   1400382a0:	call   0x140003a90
   1400382a5:	add    rsp,0x20
   1400382a9:	pop    rbp
   1400382aa:	ret    
   1400382ab:	int3   
   1400382ac:	int3   
   1400382ad:	int3   
   1400382ae:	int3   
   1400382af:	int3   
   1400382b0:	int3   
   1400382b1:	int3   
   1400382b2:	int3   
   1400382b3:	int3   
   1400382b4:	int3   
   1400382b5:	int3   
   1400382b6:	int3   
   1400382b7:	int3   
   1400382b8:	int3   
   1400382b9:	int3   
   1400382ba:	int3   
   1400382bb:	int3   
   1400382bc:	int3   
   1400382bd:	int3   
   1400382be:	int3   
   1400382bf:	int3   
   1400382c0:	rex push rbp
   1400382c2:	sub    rsp,0x20
   1400382c6:	mov    rbp,rdx
   1400382c9:	lea    rcx,[rbp+0x38]
   1400382cd:	call   0x140030f90
   1400382d2:	add    rsp,0x20
   1400382d6:	pop    rbp
   1400382d7:	ret    
   1400382d8:	int3   
   1400382d9:	int3   
   1400382da:	int3   
   1400382db:	int3   
   1400382dc:	int3   
   1400382dd:	int3   
   1400382de:	int3   
   1400382df:	int3   
   1400382e0:	rex push rbp
   1400382e2:	sub    rsp,0x20
   1400382e6:	mov    rbp,rdx
   1400382e9:	mov    eax,DWORD PTR [rbp+0x340]
   1400382ef:	and    eax,0x1
   1400382f2:	test   eax,eax
   1400382f4:	je     0x140038309
   1400382f6:	and    DWORD PTR [rbp+0x340],0xfffffffe
   1400382fd:	mov    rcx,QWORD PTR [rbp+0x3c8]
   140038304:	call   0x140003a90
   140038309:	add    rsp,0x20
   14003830d:	pop    rbp
   14003830e:	ret    
   14003830f:	int3   
   140038310:	rex push rbp
   140038312:	sub    rsp,0x20
   140038316:	mov    rbp,rdx
   140038319:	lea    rcx,[rbp+0xc0]
   140038320:	call   0x140003a90
   140038325:	add    rsp,0x20
   140038329:	pop    rbp
   14003832a:	ret    
   14003832b:	int3   
   14003832c:	int3   
   14003832d:	int3   
   14003832e:	int3   
   14003832f:	int3   
   140038330:	rex push rbp
   140038332:	sub    rsp,0x20
   140038336:	mov    rbp,rdx
   140038339:	lea    rcx,[rbp+0x90]
   140038340:	call   0x140003a90
   140038345:	add    rsp,0x20
   140038349:	pop    rbp
   14003834a:	ret    
   14003834b:	int3   
   14003834c:	int3   
   14003834d:	int3   
   14003834e:	int3   
   14003834f:	int3   
   140038350:	rex push rbp
   140038352:	sub    rsp,0x20
   140038356:	mov    rbp,rdx
   140038359:	lea    rcx,[rbp+0x60]
   14003835d:	call   0x140003a90
   140038362:	add    rsp,0x20
   140038366:	pop    rbp
   140038367:	ret    
   140038368:	int3   
   140038369:	int3   
   14003836a:	int3   
   14003836b:	int3   
   14003836c:	int3   
   14003836d:	int3   
   14003836e:	int3   
   14003836f:	int3   
   140038370:	rex push rbp
   140038372:	sub    rsp,0x20
   140038376:	mov    rbp,rdx
   140038379:	lea    rcx,[rbp+0xf0]
   140038380:	call   0x140005120
   140038385:	add    rsp,0x20
   140038389:	pop    rbp
   14003838a:	ret    
   14003838b:	int3   
   14003838c:	int3   
   14003838d:	int3   
   14003838e:	int3   
   14003838f:	int3   
   140038390:	rex push rbp
   140038392:	sub    rsp,0x20
   140038396:	mov    rbp,rdx
   140038399:	lea    rcx,[rbp+0x1f0]
   1400383a0:	call   0x140003a90
   1400383a5:	add    rsp,0x20
   1400383a9:	pop    rbp
   1400383aa:	ret    
   1400383ab:	int3   
   1400383ac:	int3   
   1400383ad:	int3   
   1400383ae:	int3   
   1400383af:	int3   
   1400383b0:	rex push rbp
   1400383b2:	sub    rsp,0x20
   1400383b6:	mov    rbp,rdx
   1400383b9:	lea    rcx,[rbp+0x218]
   1400383c0:	call   0x140003a90
   1400383c5:	add    rsp,0x20
   1400383c9:	pop    rbp
   1400383ca:	ret    
   1400383cb:	int3   
   1400383cc:	int3   
   1400383cd:	int3   
   1400383ce:	int3   
   1400383cf:	int3   
   1400383d0:	rex push rbp
   1400383d2:	sub    rsp,0x20
   1400383d6:	mov    rbp,rdx
   1400383d9:	lea    rcx,[rbp+0x270]
   1400383e0:	call   0x140003a90
   1400383e5:	add    rsp,0x20
   1400383e9:	pop    rbp
   1400383ea:	ret    
   1400383eb:	int3   
   1400383ec:	int3   
   1400383ed:	int3   
   1400383ee:	int3   
   1400383ef:	int3   
   1400383f0:	rex push rbp
   1400383f2:	sub    rsp,0x20
   1400383f6:	mov    rbp,rdx
   1400383f9:	lea    rcx,[rbp+0x298]
   140038400:	call   0x140003a90
   140038405:	add    rsp,0x20
   140038409:	pop    rbp
   14003840a:	ret    
   14003840b:	int3   
   14003840c:	int3   
   14003840d:	int3   
   14003840e:	int3   
   14003840f:	int3   
   140038410:	rex push rbp
   140038412:	sub    rsp,0x20
   140038416:	mov    rbp,rdx
   140038419:	lea    rcx,[rbp+0x2c0]
   140038420:	call   0x140003a90
   140038425:	add    rsp,0x20
   140038429:	pop    rbp
   14003842a:	ret    
   14003842b:	int3   
   14003842c:	int3   
   14003842d:	int3   
   14003842e:	int3   
   14003842f:	int3   
   140038430:	rex push rbp
   140038432:	sub    rsp,0x20
   140038436:	mov    rbp,rdx
   140038439:	lea    rcx,[rbp+0x318]
   140038440:	call   0x140003a90
   140038445:	add    rsp,0x20
   140038449:	pop    rbp
   14003844a:	ret    
   14003844b:	int3   
   14003844c:	int3   
   14003844d:	int3   
   14003844e:	int3   
   14003844f:	int3   
   140038450:	int3   
   140038451:	int3   
   140038452:	int3   
   140038453:	int3   
   140038454:	int3   
   140038455:	int3   
   140038456:	int3   
   140038457:	int3   
   140038458:	int3   
   140038459:	int3   
   14003845a:	int3   
   14003845b:	int3   
   14003845c:	int3   
   14003845d:	int3   
   14003845e:	int3   
   14003845f:	int3   
   140038460:	rex push rbp
   140038462:	sub    rsp,0x20
   140038466:	mov    rbp,rdx
   140038469:	lea    rcx,[rbp+0x30]
   14003846d:	call   0x140005120
   140038472:	add    rsp,0x20
   140038476:	pop    rbp
   140038477:	ret    
   140038478:	int3   
   140038479:	int3   
   14003847a:	int3   
   14003847b:	int3   
   14003847c:	int3   
   14003847d:	int3   
   14003847e:	int3   
   14003847f:	int3   
   140038480:	rex push rbp
   140038482:	sub    rsp,0x20
   140038486:	mov    rbp,rdx
   140038489:	lea    rcx,[rbp+0x138]
   140038490:	call   0x140003a90
   140038495:	add    rsp,0x20
   140038499:	pop    rbp
   14003849a:	ret    
   14003849b:	int3   
   14003849c:	int3   
   14003849d:	int3   
   14003849e:	int3   
   14003849f:	int3   
   1400384a0:	rex push rbp
   1400384a2:	sub    rsp,0x20
   1400384a6:	mov    rbp,rdx
   1400384a9:	lea    rcx,[rbp+0x188]
   1400384b0:	call   0x140003a90
   1400384b5:	add    rsp,0x20
   1400384b9:	pop    rbp
   1400384ba:	ret    
   1400384bb:	int3   
   1400384bc:	int3   
   1400384bd:	int3   
   1400384be:	int3   
   1400384bf:	int3   
   1400384c0:	rex push rbp
   1400384c2:	sub    rsp,0x20
   1400384c6:	mov    rbp,rdx
   1400384c9:	lea    rcx,[rbp+0x1b0]
   1400384d0:	call   0x140003a90
   1400384d5:	add    rsp,0x20
   1400384d9:	pop    rbp
   1400384da:	ret    
   1400384db:	int3   
   1400384dc:	int3   
   1400384dd:	int3   
   1400384de:	int3   
   1400384df:	int3   
   1400384e0:	rex push rbp
   1400384e2:	sub    rsp,0x20
   1400384e6:	mov    rbp,rdx
   1400384e9:	lea    rcx,[rbp+0x228]
   1400384f0:	call   0x140003a90
   1400384f5:	add    rsp,0x20
   1400384f9:	pop    rbp
   1400384fa:	ret    
   1400384fb:	int3   
   1400384fc:	int3   
   1400384fd:	int3   
   1400384fe:	int3   
   1400384ff:	int3   
   140038500:	rex push rbp
   140038502:	sub    rsp,0x20
   140038506:	mov    rbp,rdx
   140038509:	lea    rcx,[rbp+0x160]
   140038510:	call   0x140003a90
   140038515:	add    rsp,0x20
   140038519:	pop    rbp
   14003851a:	ret    
   14003851b:	int3   
   14003851c:	int3   
   14003851d:	int3   
   14003851e:	int3   
   14003851f:	int3   
   140038520:	rex push rbp
   140038522:	sub    rsp,0x20
   140038526:	mov    rbp,rdx
   140038529:	mov    eax,DWORD PTR [rbp+0x2a0]
   14003852f:	and    eax,0x1
   140038532:	test   eax,eax
   140038534:	je     0x140038549
   140038536:	and    DWORD PTR [rbp+0x2a0],0xfffffffe
   14003853d:	mov    rcx,QWORD PTR [rbp+0x3a8]
   140038544:	call   0x140003a90
   140038549:	add    rsp,0x20
   14003854d:	pop    rbp
   14003854e:	ret    
   14003854f:	int3   
   140038550:	int3   
   140038551:	int3   
   140038552:	int3   
   140038553:	int3   
   140038554:	int3   
   140038555:	int3   
   140038556:	int3   
   140038557:	int3   
   140038558:	int3   
   140038559:	int3   
   14003855a:	int3   
   14003855b:	int3   
   14003855c:	int3   
   14003855d:	int3   
   14003855e:	int3   
   14003855f:	int3   
   140038560:	rex push rbp
   140038562:	sub    rsp,0x20
   140038566:	mov    rbp,rdx
   140038569:	lea    rcx,[rbp+0x20]
   14003856d:	call   0x140003a90
   140038572:	add    rsp,0x20
   140038576:	pop    rbp
   140038577:	ret    
   140038578:	int3   
   140038579:	int3   
   14003857a:	int3   
   14003857b:	int3   
   14003857c:	int3   
   14003857d:	int3   
   14003857e:	int3   
   14003857f:	int3   
   140038580:	rex push rbp
   140038582:	sub    rsp,0x20
   140038586:	mov    rbp,rdx
   140038589:	lea    rcx,[rbp+0x48]
   14003858d:	call   0x140003a90
   140038592:	add    rsp,0x20
   140038596:	pop    rbp
   140038597:	ret    
   140038598:	int3   
   140038599:	int3   
   14003859a:	int3   
   14003859b:	int3   
   14003859c:	int3   
   14003859d:	int3   
   14003859e:	int3   
   14003859f:	int3   
   1400385a0:	rex push rbp
   1400385a2:	sub    rsp,0x20
   1400385a6:	mov    rbp,rdx
   1400385a9:	lea    rcx,[rbp+0x70]
   1400385ad:	call   0x140003a90
   1400385b2:	add    rsp,0x20
   1400385b6:	pop    rbp
   1400385b7:	ret    
   1400385b8:	int3   
   1400385b9:	int3   
   1400385ba:	int3   
   1400385bb:	int3   
   1400385bc:	int3   
   1400385bd:	int3   
   1400385be:	int3   
   1400385bf:	int3   
   1400385c0:	rex push rbp
   1400385c2:	sub    rsp,0x20
   1400385c6:	mov    rbp,rdx
   1400385c9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400385cd:	call   0x14001c4dc
   1400385d2:	add    rsp,0x20
   1400385d6:	pop    rbp
   1400385d7:	ret    
   1400385d8:	int3   
   1400385d9:	int3   
   1400385da:	int3   
   1400385db:	int3   
   1400385dc:	int3   
   1400385dd:	int3   
   1400385de:	int3   
   1400385df:	int3   
   1400385e0:	rex push rbp
   1400385e2:	sub    rsp,0x20
   1400385e6:	mov    rbp,rdx
   1400385e9:	mov    eax,DWORD PTR [rbp+0x100]
   1400385ef:	and    eax,0x1
   1400385f2:	test   eax,eax
   1400385f4:	je     0x140038609
   1400385f6:	and    DWORD PTR [rbp+0x100],0xfffffffe
   1400385fd:	lea    rcx,[rbp+0xd8]
   140038604:	call   0x140003220
   140038609:	add    rsp,0x20
   14003860d:	pop    rbp
   14003860e:	ret    
   14003860f:	int3   
   140038610:	rex push rbp
   140038612:	sub    rsp,0x20
   140038616:	mov    rbp,rdx
   140038619:	lea    rcx,[rbp+0x48]
   14003861d:	call   0x140017840
   140038622:	add    rsp,0x20
   140038626:	pop    rbp
   140038627:	ret    
   140038628:	int3   
   140038629:	int3   
   14003862a:	int3   
   14003862b:	int3   
   14003862c:	int3   
   14003862d:	int3   
   14003862e:	int3   
   14003862f:	int3   
   140038630:	rex push rbp
   140038632:	sub    rsp,0x20
   140038636:	mov    rbp,rdx
   140038639:	lea    rcx,[rbp+0x22a0]
   140038640:	call   0x140017840
   140038645:	add    rsp,0x20
   140038649:	pop    rbp
   14003864a:	ret    
   14003864b:	int3   
   14003864c:	int3   
   14003864d:	int3   
   14003864e:	int3   
   14003864f:	int3   
   140038650:	rex push rbp
   140038652:	sub    rsp,0x20
   140038656:	mov    rbp,rdx
   140038659:	lea    rcx,[rbp+0x30]
   14003865d:	call   0x140015920
   140038662:	add    rsp,0x20
   140038666:	pop    rbp
   140038667:	ret    
   140038668:	int3   
   140038669:	int3   
   14003866a:	int3   
   14003866b:	int3   
   14003866c:	int3   
   14003866d:	int3   
   14003866e:	int3   
   14003866f:	int3   
   140038670:	rex push rbp
   140038672:	sub    rsp,0x20
   140038676:	mov    rbp,rdx
   140038679:	lea    rcx,[rbp+0x20]
   14003867d:	call   0x140003a90
   140038682:	add    rsp,0x20
   140038686:	pop    rbp
   140038687:	ret    
   140038688:	int3   
   140038689:	int3   
   14003868a:	int3   
   14003868b:	int3   
   14003868c:	int3   
   14003868d:	int3   
   14003868e:	int3   
   14003868f:	int3   
   140038690:	mov    QWORD PTR [rsp+0x10],rdx
   140038695:	push   rbp
   140038696:	sub    rsp,0x20
   14003869a:	mov    rbp,rdx
   14003869d:	cmp    DWORD PTR [rbp+0x38],0x1
   1400386a1:	jle    0x1400386c2
   1400386a3:	mov    rax,QWORD PTR [rbp+0x28]
   1400386a7:	imul   rax,rax,0x10
   1400386ab:	mov    r8,QWORD PTR [rbp+0x30]
   1400386af:	add    r8,rax
   1400386b2:	mov    rdx,QWORD PTR [rbp+0x30]
   1400386b6:	mov    rcx,QWORD PTR [rbp+0xc0]
   1400386bd:	call   0x140008a20
   1400386c2:	cmp    DWORD PTR [rbp+0x38],0x0
   1400386c6:	jle    0x140038700
   1400386c8:	mov    rcx,QWORD PTR [rbp+0xd0]
   1400386cf:	imul   rcx,rcx,0x10
   1400386d3:	mov    rax,QWORD PTR [rbp+0x28]
   1400386d7:	imul   rax,rax,0x10
   1400386db:	mov    r8,QWORD PTR [rbp+0x30]
   1400386df:	add    r8,rax
   1400386e2:	add    r8,rcx
   1400386e5:	mov    rax,QWORD PTR [rbp+0x28]
   1400386e9:	imul   rax,rax,0x10
   1400386ed:	mov    rdx,QWORD PTR [rbp+0x30]
   1400386f1:	add    rdx,rax
   1400386f4:	mov    rcx,QWORD PTR [rbp+0xc0]
   1400386fb:	call   0x140008a20
   140038700:	mov    rcx,QWORD PTR [rbp+0xc0]
   140038707:	add    rcx,0x10
   14003870b:	mov    r8,QWORD PTR [rbp+0x20]
   14003870f:	mov    rdx,QWORD PTR [rbp+0x30]
   140038713:	call   0x1400089f0
   140038718:	xor    edx,edx
   14003871a:	xor    ecx,ecx
   14003871c:	call   0x14001e5c0
   140038721:	nop
   140038722:	lea    rax,[rip+0xfffffffffffda339]        # 0x140012a62
   140038729:	jmp    0x14003872b
   14003872b:	add    rsp,0x20
   14003872f:	pop    rbp
   140038730:	ret    
   140038731:	int3   
   140038732:	int3   
   140038733:	int3   
   140038734:	int3   
   140038735:	int3   
   140038736:	int3   
   140038737:	int3   
   140038738:	int3   
   140038739:	int3   
   14003873a:	int3   
   14003873b:	int3   
   14003873c:	int3   
   14003873d:	int3   
   14003873e:	int3   
   14003873f:	int3   
   140038740:	mov    QWORD PTR [rsp+0x10],rdx
   140038745:	push   rbp
   140038746:	sub    rsp,0x20
   14003874a:	mov    rbp,rdx
   14003874d:	mov    r8,QWORD PTR [rbp+0xd0]
   140038754:	imul   r8,r8,0x10
   140038758:	mov    rax,QWORD PTR [rbp+0xc0]
   14003875f:	add    r8,QWORD PTR [rax+0x20]
   140038763:	mov    rdx,QWORD PTR [rbp+0xd0]
   14003876a:	imul   rdx,rdx,0x10
   14003876e:	mov    rax,QWORD PTR [rbp+0xc8]
   140038775:	add    rdx,QWORD PTR [rax+0x8]
   140038779:	mov    rcx,QWORD PTR [rbp+0xc0]
   140038780:	call   0x140008a20
   140038785:	xor    edx,edx
   140038787:	xor    ecx,ecx
   140038789:	call   0x14001e5c0
   14003878e:	nop
   14003878f:	lea    rax,[rip+0xfffffffffffda48b]        # 0x140012c21
   140038796:	jmp    0x140038798
   140038798:	add    rsp,0x20
   14003879c:	pop    rbp
   14003879d:	ret    
   14003879e:	int3   
   14003879f:	int3   
   1400387a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400387a5:	push   rbp
   1400387a6:	sub    rsp,0x20
   1400387aa:	mov    rbp,rdx
   1400387ad:	mov    rcx,QWORD PTR [rbp+0x40]
   1400387b1:	call   0x140012620
   1400387b6:	xor    edx,edx
   1400387b8:	xor    ecx,ecx
   1400387ba:	call   0x14001e5c0
   1400387bf:	nop
   1400387c0:	lea    rax,[rip+0xfffffffffffd9e34]        # 0x1400125fb
   1400387c7:	jmp    0x1400387c9
   1400387c9:	add    rsp,0x20
   1400387cd:	pop    rbp
   1400387ce:	ret    
   1400387cf:	int3   
   1400387d0:	rex push rbp
   1400387d2:	sub    rsp,0x20
   1400387d6:	mov    rbp,rdx
   1400387d9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400387dd:	call   0x140012270
   1400387e2:	add    rsp,0x20
   1400387e6:	pop    rbp
   1400387e7:	ret    
   1400387e8:	int3   
   1400387e9:	int3   
   1400387ea:	int3   
   1400387eb:	int3   
   1400387ec:	int3   
   1400387ed:	int3   
   1400387ee:	int3   
   1400387ef:	int3   
   1400387f0:	rex push rbp
   1400387f2:	sub    rsp,0x20
   1400387f6:	mov    rbp,rdx
   1400387f9:	lea    rcx,[rbp+0x38]
   1400387fd:	call   0x140011e60
   140038802:	add    rsp,0x20
   140038806:	pop    rbp
   140038807:	ret    
   140038808:	int3   
   140038809:	int3   
   14003880a:	int3   
   14003880b:	int3   
   14003880c:	int3   
   14003880d:	int3   
   14003880e:	int3   
   14003880f:	int3   
   140038810:	rex push rbp
   140038812:	sub    rsp,0x20
   140038816:	mov    rbp,rdx
   140038819:	lea    rcx,[rbp+0x48]
   14003881d:	call   0x140003a90
   140038822:	add    rsp,0x20
   140038826:	pop    rbp
   140038827:	ret    
   140038828:	int3   
   140038829:	int3   
   14003882a:	int3   
   14003882b:	int3   
   14003882c:	int3   
   14003882d:	int3   
   14003882e:	int3   
   14003882f:	int3   
   140038830:	rex push rbp
   140038832:	sub    rsp,0x20
   140038836:	mov    rbp,rdx
   140038839:	mov    rdx,QWORD PTR [rbp+0x20]
   14003883d:	mov    rcx,QWORD PTR [rbp+0x30]
   140038841:	call   0x1400014c0
   140038846:	add    rsp,0x20
   14003884a:	pop    rbp
   14003884b:	ret    
   14003884c:	int3   
   14003884d:	int3   
   14003884e:	int3   
   14003884f:	int3   
   140038850:	rex push rbp
   140038852:	sub    rsp,0x20
   140038856:	mov    rbp,rdx
   140038859:	lea    rcx,[rbp+0x30]
   14003885d:	call   0x140003a90
   140038862:	add    rsp,0x20
   140038866:	pop    rbp
   140038867:	ret    
   140038868:	int3   
   140038869:	int3   
   14003886a:	int3   
   14003886b:	int3   
   14003886c:	int3   
   14003886d:	int3   
   14003886e:	int3   
   14003886f:	int3   
   140038870:	mov    QWORD PTR [rsp+0x10],rdx
   140038875:	push   rbp
   140038876:	sub    rsp,0x20
   14003887a:	mov    rbp,rdx
   14003887d:	jmp    0x14003888b
   14003887f:	mov    rax,QWORD PTR [rbp+0x20]
   140038883:	add    rax,0x28
   140038887:	mov    QWORD PTR [rbp+0x20],rax
   14003888b:	mov    rax,QWORD PTR [rbp+0x90]
   140038892:	cmp    QWORD PTR [rbp+0x20],rax
   140038896:	je     0x1400388aa
   140038898:	mov    rdx,QWORD PTR [rbp+0x20]
   14003889c:	mov    rcx,QWORD PTR [rbp+0x98]
   1400388a3:	call   0x140010650
   1400388a8:	jmp    0x14003887f
   1400388aa:	xor    edx,edx
   1400388ac:	xor    ecx,ecx
   1400388ae:	call   0x14001e5c0
   1400388b3:	nop
   1400388b4:	lea    rax,[rip+0xfffffffffffd858a]        # 0x140010e45
   1400388bb:	jmp    0x1400388bd
   1400388bd:	add    rsp,0x20
   1400388c1:	pop    rbp
   1400388c2:	ret    
   1400388c3:	int3   
   1400388c4:	int3   
   1400388c5:	int3   
   1400388c6:	int3   
   1400388c7:	int3   
   1400388c8:	int3   
   1400388c9:	int3   
   1400388ca:	int3   
   1400388cb:	int3   
   1400388cc:	int3   
   1400388cd:	int3   
   1400388ce:	int3   
   1400388cf:	int3   
   1400388d0:	rex push rbp
   1400388d2:	sub    rsp,0x20
   1400388d6:	mov    rbp,rdx
   1400388d9:	lea    rcx,[rbp+0x30]
   1400388dd:	call   0x140003220
   1400388e2:	add    rsp,0x20
   1400388e6:	pop    rbp
   1400388e7:	ret    
   1400388e8:	int3   
   1400388e9:	int3   
   1400388ea:	int3   
   1400388eb:	int3   
   1400388ec:	int3   
   1400388ed:	int3   
   1400388ee:	int3   
   1400388ef:	int3   
   1400388f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400388f5:	push   rbp
   1400388f6:	sub    rsp,0x20
   1400388fa:	mov    rbp,rdx
   1400388fd:	jmp    0x14003890b
   1400388ff:	mov    rax,QWORD PTR [rbp+0x20]
   140038903:	add    rax,0x50
   140038907:	mov    QWORD PTR [rbp+0x20],rax
   14003890b:	mov    rax,QWORD PTR [rbp+0x40]
   14003890f:	cmp    QWORD PTR [rbp+0x20],rax
   140038913:	je     0x140038924
   140038915:	mov    rdx,QWORD PTR [rbp+0x20]
   140038919:	mov    rcx,QWORD PTR [rbp+0x58]
   14003891d:	call   0x1400106c0
   140038922:	jmp    0x1400388ff
   140038924:	xor    edx,edx
   140038926:	xor    ecx,ecx
   140038928:	call   0x14001e5c0
   14003892d:	nop
   14003892e:	lea    rax,[rip+0xfffffffffffd73a2]        # 0x14000fcd7
   140038935:	jmp    0x140038937
   140038937:	add    rsp,0x20
   14003893b:	pop    rbp
   14003893c:	ret    
   14003893d:	int3   
   14003893e:	int3   
   14003893f:	int3   
   140038940:	rex push rbp
   140038942:	sub    rsp,0x20
   140038946:	mov    rbp,rdx
   140038949:	lea    rcx,[rbp+0xa0]
   140038950:	call   0x140001b80
   140038955:	add    rsp,0x20
   140038959:	pop    rbp
   14003895a:	ret    
   14003895b:	int3   
   14003895c:	int3   
   14003895d:	int3   
   14003895e:	int3   
   14003895f:	int3   
   140038960:	rex push rbp
   140038962:	sub    rsp,0x20
   140038966:	mov    rbp,rdx
   140038969:	lea    rcx,[rbp+0x48]
   14003896d:	call   0x140003a90
   140038972:	add    rsp,0x20
   140038976:	pop    rbp
   140038977:	ret    
   140038978:	int3   
   140038979:	int3   
   14003897a:	int3   
   14003897b:	int3   
   14003897c:	int3   
   14003897d:	int3   
   14003897e:	int3   
   14003897f:	int3   
   140038980:	rex push rbp
   140038982:	sub    rsp,0x20
   140038986:	mov    rbp,rdx
   140038989:	lea    rcx,[rbp+0xa8]
   140038990:	call   0x140003a90
   140038995:	add    rsp,0x20
   140038999:	pop    rbp
   14003899a:	ret    
   14003899b:	int3   
   14003899c:	int3   
   14003899d:	int3   
   14003899e:	int3   
   14003899f:	int3   
   1400389a0:	rex push rbp
   1400389a2:	sub    rsp,0x20
   1400389a6:	mov    rbp,rdx
   1400389a9:	lea    rcx,[rbp+0xd0]
   1400389b0:	call   0x140003a90
   1400389b5:	add    rsp,0x20
   1400389b9:	pop    rbp
   1400389ba:	ret    
   1400389bb:	int3   
   1400389bc:	int3   
   1400389bd:	int3   
   1400389be:	int3   
   1400389bf:	int3   
   1400389c0:	rex push rbp
   1400389c2:	sub    rsp,0x20
   1400389c6:	mov    rbp,rdx
   1400389c9:	lea    rcx,[rbp+0xf8]
   1400389d0:	call   0x140001b80
   1400389d5:	add    rsp,0x20
   1400389d9:	pop    rbp
   1400389da:	ret    
   1400389db:	int3   
   1400389dc:	int3   
   1400389dd:	int3   
   1400389de:	int3   
   1400389df:	int3   
   1400389e0:	rex push rbp
   1400389e2:	sub    rsp,0x20
   1400389e6:	mov    rbp,rdx
   1400389e9:	lea    rcx,[rbp+0x28]
   1400389ed:	call   0x140001b80
   1400389f2:	add    rsp,0x20
   1400389f6:	pop    rbp
   1400389f7:	ret    
   1400389f8:	int3   
   1400389f9:	int3   
   1400389fa:	int3   
   1400389fb:	int3   
   1400389fc:	int3   
   1400389fd:	int3   
   1400389fe:	int3   
   1400389ff:	int3   
   140038a00:	rex push rbp
   140038a02:	sub    rsp,0x20
   140038a06:	mov    rbp,rdx
   140038a09:	lea    rcx,[rbp+0x60]
   140038a0d:	call   0x140003220
   140038a12:	add    rsp,0x20
   140038a16:	pop    rbp
   140038a17:	ret    
   140038a18:	int3   
   140038a19:	int3   
   140038a1a:	int3   
   140038a1b:	int3   
   140038a1c:	int3   
   140038a1d:	int3   
   140038a1e:	int3   
   140038a1f:	int3   
   140038a20:	mov    QWORD PTR [rsp+0x10],rdx
   140038a25:	push   rbp
   140038a26:	sub    rsp,0x20
   140038a2a:	mov    rbp,rdx
   140038a2d:	cmp    DWORD PTR [rbp+0x38],0x1
   140038a31:	jle    0x140038a52
   140038a33:	mov    rax,QWORD PTR [rbp+0x28]
   140038a37:	imul   rax,rax,0x28
   140038a3b:	mov    r8,QWORD PTR [rbp+0x30]
   140038a3f:	add    r8,rax
   140038a42:	mov    rdx,QWORD PTR [rbp+0x30]
   140038a46:	mov    rcx,QWORD PTR [rbp+0xd0]
   140038a4d:	call   0x140008970
   140038a52:	cmp    DWORD PTR [rbp+0x38],0x0
   140038a56:	jle    0x140038a90
   140038a58:	mov    rcx,QWORD PTR [rbp+0xe0]
   140038a5f:	imul   rcx,rcx,0x28
   140038a63:	mov    rax,QWORD PTR [rbp+0x28]
   140038a67:	imul   rax,rax,0x28
   140038a6b:	mov    r8,QWORD PTR [rbp+0x30]
   140038a6f:	add    r8,rax
   140038a72:	add    r8,rcx
   140038a75:	mov    rax,QWORD PTR [rbp+0x28]
   140038a79:	imul   rax,rax,0x28
   140038a7d:	mov    rdx,QWORD PTR [rbp+0x30]
   140038a81:	add    rdx,rax
   140038a84:	mov    rcx,QWORD PTR [rbp+0xd0]
   140038a8b:	call   0x140008970
   140038a90:	mov    rcx,QWORD PTR [rbp+0xd0]
   140038a97:	add    rcx,0x10
   140038a9b:	mov    r8,QWORD PTR [rbp+0x20]
   140038a9f:	mov    rdx,QWORD PTR [rbp+0x30]
   140038aa3:	call   0x1400089f0
   140038aa8:	xor    edx,edx
   140038aaa:	xor    ecx,ecx
   140038aac:	call   0x14001e5c0
   140038ab1:	nop
   140038ab2:	lea    rax,[rip+0xfffffffffffd1500]        # 0x140009fb9
   140038ab9:	jmp    0x140038abb
   140038abb:	add    rsp,0x20
   140038abf:	pop    rbp
   140038ac0:	ret    
   140038ac1:	int3   
   140038ac2:	int3   
   140038ac3:	int3   
   140038ac4:	int3   
   140038ac5:	int3   
   140038ac6:	int3   
   140038ac7:	int3   
   140038ac8:	int3   
   140038ac9:	int3   
   140038aca:	int3   
   140038acb:	int3   
   140038acc:	int3   
   140038acd:	int3   
   140038ace:	int3   
   140038acf:	int3   
   140038ad0:	rex push rbp
   140038ad2:	sub    rsp,0x20
   140038ad6:	mov    rbp,rdx
   140038ad9:	lea    rcx,[rbp+0x48]
   140038add:	call   0x140003a90
   140038ae2:	add    rsp,0x20
   140038ae6:	pop    rbp
   140038ae7:	ret    
   140038ae8:	int3   
   140038ae9:	int3   
   140038aea:	int3   
   140038aeb:	int3   
   140038aec:	int3   
   140038aed:	int3   
   140038aee:	int3   
   140038aef:	int3   
   140038af0:	mov    QWORD PTR [rsp+0x10],rdx
   140038af5:	push   rbp
   140038af6:	sub    rsp,0x20
   140038afa:	mov    rbp,rdx
   140038afd:	mov    r8,QWORD PTR [rbp+0xe0]
   140038b04:	imul   r8,r8,0x28
   140038b08:	mov    rax,QWORD PTR [rbp+0xd0]
   140038b0f:	add    r8,QWORD PTR [rax+0x20]
   140038b13:	mov    rdx,QWORD PTR [rbp+0xe0]
   140038b1a:	imul   rdx,rdx,0x28
   140038b1e:	mov    rax,QWORD PTR [rbp+0xd8]
   140038b25:	add    rdx,QWORD PTR [rax+0x8]
   140038b29:	mov    rcx,QWORD PTR [rbp+0xd0]
   140038b30:	call   0x140008970
   140038b35:	xor    edx,edx
   140038b37:	xor    ecx,ecx
   140038b39:	call   0x14001e5c0
   140038b3e:	nop
   140038b3f:	lea    rax,[rip+0xfffffffffffd1635]        # 0x14000a17b
   140038b46:	jmp    0x140038b48
   140038b48:	add    rsp,0x20
   140038b4c:	pop    rbp
   140038b4d:	ret    
   140038b4e:	int3   
   140038b4f:	int3   
   140038b50:	rex push rbp
   140038b52:	sub    rsp,0x20
   140038b56:	mov    rbp,rdx
   140038b59:	lea    rcx,[rbp+0x78]
   140038b5d:	call   0x140003a90
   140038b62:	add    rsp,0x20
   140038b66:	pop    rbp
   140038b67:	ret    
   140038b68:	int3   
   140038b69:	int3   
   140038b6a:	int3   
   140038b6b:	int3   
   140038b6c:	int3   
   140038b6d:	int3   
   140038b6e:	int3   
   140038b6f:	int3   
   140038b70:	rex push rbp
   140038b72:	sub    rsp,0x20
   140038b76:	mov    rbp,rdx
   140038b79:	lea    rcx,[rbp+0x28]
   140038b7d:	call   0x140003a90
   140038b82:	add    rsp,0x20
   140038b86:	pop    rbp
   140038b87:	ret    
   140038b88:	int3   
   140038b89:	int3   
   140038b8a:	int3   
   140038b8b:	int3   
   140038b8c:	int3   
   140038b8d:	int3   
   140038b8e:	int3   
   140038b8f:	int3   
   140038b90:	rex push rbp
   140038b92:	sub    rsp,0x20
   140038b96:	mov    rbp,rdx
   140038b99:	lea    rcx,[rbp+0x60]
   140038b9d:	call   0x140003220
   140038ba2:	add    rsp,0x20
   140038ba6:	pop    rbp
   140038ba7:	ret    
   140038ba8:	int3   
   140038ba9:	int3   
   140038baa:	int3   
   140038bab:	int3   
   140038bac:	int3   
   140038bad:	int3   
   140038bae:	int3   
   140038baf:	int3   
   140038bb0:	rex push rbp
   140038bb2:	sub    rsp,0x20
   140038bb6:	mov    rbp,rdx
   140038bb9:	lea    rcx,[rbp+0xc8]
   140038bc0:	call   0x140003220
   140038bc5:	add    rsp,0x20
   140038bc9:	pop    rbp
   140038bca:	ret    
   140038bcb:	int3   
   140038bcc:	int3   
   140038bcd:	int3   
   140038bce:	int3   
   140038bcf:	int3   
   140038bd0:	rex push rbp
   140038bd2:	sub    rsp,0x20
   140038bd6:	mov    rbp,rdx
   140038bd9:	lea    rcx,[rbp+0x130]
   140038be0:	call   0x140003220
   140038be5:	add    rsp,0x20
   140038be9:	pop    rbp
   140038bea:	ret    
   140038beb:	int3   
   140038bec:	int3   
   140038bed:	int3   
   140038bee:	int3   
   140038bef:	int3   
   140038bf0:	rex push rbp
   140038bf2:	sub    rsp,0x20
   140038bf6:	mov    rbp,rdx
   140038bf9:	lea    rcx,[rbp+0x30]
   140038bfd:	call   0x140005150
   140038c02:	add    rsp,0x20
   140038c06:	pop    rbp
   140038c07:	ret    
   140038c08:	int3   
   140038c09:	int3   
   140038c0a:	int3   
   140038c0b:	int3   
   140038c0c:	int3   
   140038c0d:	int3   
   140038c0e:	int3   
   140038c0f:	int3   
   140038c10:	mov    QWORD PTR [rsp+0x10],rdx
   140038c15:	push   rbp
   140038c16:	sub    rsp,0x20
   140038c1a:	mov    rbp,rdx
   140038c1d:	jmp    0x140038c2b
   140038c1f:	mov    rax,QWORD PTR [rbp+0x20]
   140038c23:	add    rax,0x50
   140038c27:	mov    QWORD PTR [rbp+0x20],rax
   140038c2b:	mov    rax,QWORD PTR [rbp+0xc0]
   140038c32:	cmp    QWORD PTR [rbp+0x20],rax
   140038c36:	je     0x140038c4a
   140038c38:	mov    rdx,QWORD PTR [rbp+0x20]
   140038c3c:	mov    rcx,QWORD PTR [rbp+0xc8]
   140038c43:	call   0x1400106c0
   140038c48:	jmp    0x140038c1f
   140038c4a:	xor    edx,edx
   140038c4c:	xor    ecx,ecx
   140038c4e:	call   0x14001e5c0
   140038c53:	nop
   140038c54:	lea    rax,[rip+0xfffffffffffd8343]        # 0x140010f9e
   140038c5b:	jmp    0x140038c5d
   140038c5d:	add    rsp,0x20
   140038c61:	pop    rbp
   140038c62:	ret    
   140038c63:	int3   
   140038c64:	int3   
   140038c65:	int3   
   140038c66:	int3   
   140038c67:	int3   
   140038c68:	int3   
   140038c69:	int3   
   140038c6a:	int3   
   140038c6b:	int3   
   140038c6c:	int3   
   140038c6d:	int3   
   140038c6e:	int3   
   140038c6f:	int3   
   140038c70:	mov    QWORD PTR [rsp+0x10],rdx
   140038c75:	push   rbp
   140038c76:	sub    rsp,0x20
   140038c7a:	mov    rbp,rdx
   140038c7d:	cmp    DWORD PTR [rbp+0x38],0x1
   140038c81:	jle    0x140038ca2
   140038c83:	mov    rax,QWORD PTR [rbp+0x28]
   140038c87:	imul   rax,rax,0x50
   140038c8b:	mov    r8,QWORD PTR [rbp+0x30]
   140038c8f:	add    r8,rax
   140038c92:	mov    rdx,QWORD PTR [rbp+0x30]
   140038c96:	mov    rcx,QWORD PTR [rbp+0x130]
   140038c9d:	call   0x140008c60
   140038ca2:	cmp    DWORD PTR [rbp+0x38],0x0
   140038ca6:	jle    0x140038ce0
   140038ca8:	mov    rcx,QWORD PTR [rbp+0x140]
   140038caf:	imul   rcx,rcx,0x50
   140038cb3:	mov    rax,QWORD PTR [rbp+0x28]
   140038cb7:	imul   rax,rax,0x50
   140038cbb:	mov    r8,QWORD PTR [rbp+0x30]
   140038cbf:	add    r8,rax
   140038cc2:	add    r8,rcx
   140038cc5:	mov    rax,QWORD PTR [rbp+0x28]
   140038cc9:	imul   rax,rax,0x50
   140038ccd:	mov    rdx,QWORD PTR [rbp+0x30]
   140038cd1:	add    rdx,rax
   140038cd4:	mov    rcx,QWORD PTR [rbp+0x130]
   140038cdb:	call   0x140008c60
   140038ce0:	mov    rcx,QWORD PTR [rbp+0x130]
   140038ce7:	add    rcx,0x10
   140038ceb:	mov    r8,QWORD PTR [rbp+0x20]
   140038cef:	mov    rdx,QWORD PTR [rbp+0x30]
   140038cf3:	call   0x1400089f0
   140038cf8:	xor    edx,edx
   140038cfa:	xor    ecx,ecx
   140038cfc:	call   0x14001e5c0
   140038d01:	nop
   140038d02:	lea    rax,[rip+0xfffffffffffd1a40]        # 0x14000a749
   140038d09:	jmp    0x140038d0b
   140038d0b:	add    rsp,0x20
   140038d0f:	pop    rbp
   140038d10:	ret    
   140038d11:	int3   
   140038d12:	int3   
   140038d13:	int3   
   140038d14:	int3   
   140038d15:	int3   
   140038d16:	int3   
   140038d17:	int3   
   140038d18:	int3   
   140038d19:	int3   
   140038d1a:	int3   
   140038d1b:	int3   
   140038d1c:	int3   
   140038d1d:	int3   
   140038d1e:	int3   
   140038d1f:	int3   
   140038d20:	rex push rbp
   140038d22:	sub    rsp,0x20
   140038d26:	mov    rbp,rdx
   140038d29:	lea    rcx,[rbp+0x50]
   140038d2d:	call   0x140005150
   140038d32:	add    rsp,0x20
   140038d36:	pop    rbp
   140038d37:	ret    
   140038d38:	int3   
   140038d39:	int3   
   140038d3a:	int3   
   140038d3b:	int3   
   140038d3c:	int3   
   140038d3d:	int3   
   140038d3e:	int3   
   140038d3f:	int3   
   140038d40:	mov    QWORD PTR [rsp+0x10],rdx
   140038d45:	push   rbp
   140038d46:	sub    rsp,0x20
   140038d4a:	mov    rbp,rdx
   140038d4d:	mov    r8,QWORD PTR [rbp+0x140]
   140038d54:	imul   r8,r8,0x50
   140038d58:	mov    rax,QWORD PTR [rbp+0x130]
   140038d5f:	add    r8,QWORD PTR [rax+0x20]
   140038d63:	mov    rdx,QWORD PTR [rbp+0x140]
   140038d6a:	imul   rdx,rdx,0x50
   140038d6e:	mov    rax,QWORD PTR [rbp+0x138]
   140038d75:	add    rdx,QWORD PTR [rax+0x8]
   140038d79:	mov    rcx,QWORD PTR [rbp+0x130]
   140038d80:	call   0x140008c60
   140038d85:	xor    edx,edx
   140038d87:	xor    ecx,ecx
   140038d89:	call   0x14001e5c0
   140038d8e:	nop
   140038d8f:	lea    rax,[rip+0xfffffffffffd1b75]        # 0x14000a90b
   140038d96:	jmp    0x140038d98
   140038d98:	add    rsp,0x20
   140038d9c:	pop    rbp
   140038d9d:	ret    
   140038d9e:	int3   
   140038d9f:	int3   
   140038da0:	rex push rbp
   140038da2:	sub    rsp,0x20
   140038da6:	mov    rbp,rdx
   140038da9:	lea    rcx,[rbp+0xb0]
   140038db0:	call   0x140005150
   140038db5:	add    rsp,0x20
   140038db9:	pop    rbp
   140038dba:	ret    
   140038dbb:	int3   
   140038dbc:	int3   
   140038dbd:	int3   
   140038dbe:	int3   
   140038dbf:	int3   
   140038dc0:	rex push rbp
   140038dc2:	sub    rsp,0x20
   140038dc6:	mov    rbp,rdx
   140038dc9:	mov    rcx,QWORD PTR [rbp+0x40]
   140038dcd:	call   0x1400323c0
   140038dd2:	add    rsp,0x20
   140038dd6:	pop    rbp
   140038dd7:	ret    
   140038dd8:	int3   
   140038dd9:	int3   
   140038dda:	int3   
   140038ddb:	int3   
   140038ddc:	int3   
   140038ddd:	int3   
   140038dde:	int3   
   140038ddf:	int3   
   140038de0:	rex push rbp
   140038de2:	sub    rsp,0x20
   140038de6:	mov    rbp,rdx
   140038de9:	mov    rcx,QWORD PTR [rbp+0x40]
   140038ded:	add    rcx,0x70
   140038df1:	call   0x140003a90
   140038df6:	add    rsp,0x20
   140038dfa:	pop    rbp
   140038dfb:	ret    
   140038dfc:	int3   
   140038dfd:	int3   
   140038dfe:	int3   
   140038dff:	int3   
   140038e00:	rex push rbp
   140038e02:	sub    rsp,0x20
   140038e06:	mov    rbp,rdx
   140038e09:	mov    rcx,QWORD PTR [rbp+0x40]
   140038e0d:	call   0x1400323c0
   140038e12:	add    rsp,0x20
   140038e16:	pop    rbp
   140038e17:	ret    
   140038e18:	int3   
   140038e19:	int3   
   140038e1a:	int3   
   140038e1b:	int3   
   140038e1c:	int3   
   140038e1d:	int3   
   140038e1e:	int3   
   140038e1f:	int3   
   140038e20:	rex push rbp
   140038e22:	sub    rsp,0x20
   140038e26:	mov    rbp,rdx
   140038e29:	lea    rcx,[rbp+0x20]
   140038e2d:	call   0x140005150
   140038e32:	add    rsp,0x20
   140038e36:	pop    rbp
   140038e37:	ret    
   140038e38:	int3   
   140038e39:	int3   
   140038e3a:	int3   
   140038e3b:	int3   
   140038e3c:	int3   
   140038e3d:	int3   
   140038e3e:	int3   
   140038e3f:	int3   
   140038e40:	rex push rbp
   140038e42:	sub    rsp,0x20
   140038e46:	mov    rbp,rdx
   140038e49:	mov    rcx,QWORD PTR [rbp+0x40]
   140038e4d:	call   0x140003080
   140038e52:	add    rsp,0x20
   140038e56:	pop    rbp
   140038e57:	ret    
   140038e58:	int3   
   140038e59:	int3   
   140038e5a:	int3   
   140038e5b:	int3   
   140038e5c:	int3   
   140038e5d:	int3   
   140038e5e:	int3   
   140038e5f:	int3   
   140038e60:	rex push rbp
   140038e62:	sub    rsp,0x20
   140038e66:	mov    rbp,rdx
   140038e69:	lea    rcx,[rbp+0x78]
   140038e6d:	call   0x140016a10
   140038e72:	add    rsp,0x20
   140038e76:	pop    rbp
   140038e77:	ret    
   140038e78:	int3   
   140038e79:	int3   
   140038e7a:	int3   
   140038e7b:	int3   
   140038e7c:	int3   
   140038e7d:	int3   
   140038e7e:	int3   
   140038e7f:	int3   
   140038e80:	rex push rbp
   140038e82:	sub    rsp,0x20
   140038e86:	mov    rbp,rdx
   140038e89:	lea    rcx,[rbp+0x90]
   140038e90:	call   0x1400168c0
   140038e95:	add    rsp,0x20
   140038e99:	pop    rbp
   140038e9a:	ret    
   140038e9b:	int3   
   140038e9c:	int3   
   140038e9d:	int3   
   140038e9e:	int3   
   140038e9f:	int3   
   140038ea0:	mov    QWORD PTR [rsp+0x10],rdx
   140038ea5:	push   rbp
   140038ea6:	sub    rsp,0x30
   140038eaa:	mov    rbp,rdx
   140038ead:	lea    rax,[rip+0xfffffffffffdfcff]        # 0x140018bb3
   140038eb4:	jmp    0x140038eb6
   140038eb6:	add    rsp,0x30
   140038eba:	pop    rbp
   140038ebb:	ret    
   140038ebc:	int3   
   140038ebd:	int3   
   140038ebe:	int3   
   140038ebf:	int3   
   140038ec0:	rex push rbp
   140038ec2:	sub    rsp,0x20
   140038ec6:	mov    rbp,rdx
   140038ec9:	lea    rcx,[rbp+0x60]
   140038ecd:	call   0x140016a10
   140038ed2:	add    rsp,0x20
   140038ed6:	pop    rbp
   140038ed7:	ret    
   140038ed8:	int3   
   140038ed9:	int3   
   140038eda:	int3   
   140038edb:	int3   
   140038edc:	int3   
   140038edd:	int3   
   140038ede:	int3   
   140038edf:	int3   
   140038ee0:	rex push rbp
   140038ee2:	sub    rsp,0x20
   140038ee6:	mov    rbp,rdx
   140038ee9:	lea    rcx,[rbp+0x48]
   140038eed:	call   0x140016a10
   140038ef2:	add    rsp,0x20
   140038ef6:	pop    rbp
   140038ef7:	ret    
   140038ef8:	int3   
   140038ef9:	int3   
   140038efa:	int3   
   140038efb:	int3   
   140038efc:	int3   
   140038efd:	int3   
   140038efe:	int3   
   140038eff:	int3   
   140038f00:	mov    QWORD PTR [rsp+0x10],rdx
   140038f05:	push   rbp
   140038f06:	sub    rsp,0x20
   140038f0a:	mov    rbp,rdx
   140038f0d:	lea    rax,[rip+0xfffffffffffcee89]        # 0x140007d9d
   140038f14:	jmp    0x140038f16
   140038f16:	add    rsp,0x20
   140038f1a:	pop    rbp
   140038f1b:	ret    
   140038f1c:	int3   
   140038f1d:	int3   
   140038f1e:	int3   
   140038f1f:	int3   
   140038f20:	rex push rbp
   140038f22:	sub    rsp,0x20
   140038f26:	mov    rbp,rdx
   140038f29:	mov    rcx,QWORD PTR [rbp+0x40]
   140038f2d:	call   0x140008ce0
   140038f32:	add    rsp,0x20
   140038f36:	pop    rbp
   140038f37:	ret    
   140038f38:	int3   
   140038f39:	int3   
   140038f3a:	int3   
   140038f3b:	int3   
   140038f3c:	int3   
   140038f3d:	int3   
   140038f3e:	int3   
   140038f3f:	int3   
   140038f40:	rex push rbp
   140038f42:	sub    rsp,0x20
   140038f46:	mov    rbp,rdx
   140038f49:	lea    rcx,[rbp+0x30]
   140038f4d:	call   0x140001b80
   140038f52:	add    rsp,0x20
   140038f56:	pop    rbp
   140038f57:	ret    
   140038f58:	int3   
   140038f59:	int3   
   140038f5a:	int3   
   140038f5b:	int3   
   140038f5c:	int3   
   140038f5d:	int3   
   140038f5e:	int3   
   140038f5f:	int3   
   140038f60:	mov    QWORD PTR [rsp+0x10],rdx
   140038f65:	push   rbp
   140038f66:	sub    rsp,0x20
   140038f6a:	mov    rbp,rdx
   140038f6d:	mov    rax,QWORD PTR [rbp+0x70]
   140038f71:	mov    rax,QWORD PTR [rax]
   140038f74:	movsxd rax,DWORD PTR [rax+0x4]
   140038f78:	mov    rcx,QWORD PTR [rbp+0x70]
   140038f7c:	add    rcx,rax
   140038f7f:	mov    r8b,0x1
   140038f82:	mov    edx,0x4
   140038f87:	call   0x140003400
   140038f8c:	nop
   140038f8d:	lea    rax,[rip+0xfffffffffffcc8f4]        # 0x140005888
   140038f94:	jmp    0x140038f96
   140038f96:	add    rsp,0x20
   140038f9a:	pop    rbp
   140038f9b:	ret    
   140038f9c:	int3   
   140038f9d:	int3   
   140038f9e:	int3   
   140038f9f:	int3   
   140038fa0:	rex push rbp
   140038fa2:	sub    rsp,0x20
   140038fa6:	mov    rbp,rdx
   140038fa9:	mov    rcx,QWORD PTR [rbp+0xe0]
   140038fb0:	call   0x140003a90
   140038fb5:	add    rsp,0x20
   140038fb9:	pop    rbp
   140038fba:	ret    
   140038fbb:	int3   
   140038fbc:	int3   
   140038fbd:	int3   
   140038fbe:	int3   
   140038fbf:	int3   
   140038fc0:	rex push rbp
   140038fc2:	sub    rsp,0x20
   140038fc6:	mov    rbp,rdx
   140038fc9:	lea    rcx,[rbp+0x40]
   140038fcd:	call   0x140003a90
   140038fd2:	add    rsp,0x20
   140038fd6:	pop    rbp
   140038fd7:	ret    
   140038fd8:	int3   
   140038fd9:	int3   
   140038fda:	int3   
   140038fdb:	int3   
   140038fdc:	int3   
   140038fdd:	int3   
   140038fde:	int3   
   140038fdf:	int3   
   140038fe0:	rex push rbp
   140038fe2:	sub    rsp,0x20
   140038fe6:	mov    rbp,rdx
   140038fe9:	lea    rcx,[rbp+0x68]
   140038fed:	call   0x140003a90
   140038ff2:	add    rsp,0x20
   140038ff6:	pop    rbp
   140038ff7:	ret    
   140038ff8:	int3   
   140038ff9:	int3   
   140038ffa:	int3   
   140038ffb:	int3   
   140038ffc:	int3   
   140038ffd:	int3   
   140038ffe:	int3   
   140038fff:	int3   
   140039000:	rex push rbp
   140039002:	sub    rsp,0x20
   140039006:	mov    rbp,rdx
   140039009:	mov    rcx,QWORD PTR [rbp+0x60]
   14003900d:	call   0x140003a90
   140039012:	add    rsp,0x20
   140039016:	pop    rbp
   140039017:	ret    
   140039018:	int3   
   140039019:	int3   
   14003901a:	int3   
   14003901b:	int3   
   14003901c:	int3   
   14003901d:	int3   
   14003901e:	int3   
   14003901f:	int3   
   140039020:	rex push rbp
   140039022:	sub    rsp,0x20
   140039026:	mov    rbp,rdx
   140039029:	mov    rcx,QWORD PTR [rbp+0xc0]
   140039030:	call   0x140003a90
   140039035:	add    rsp,0x20
   140039039:	pop    rbp
   14003903a:	ret    
   14003903b:	int3   
   14003903c:	int3   
   14003903d:	int3   
   14003903e:	int3   
   14003903f:	int3   
   140039040:	rex push rbp
   140039042:	sub    rsp,0x20
   140039046:	mov    rbp,rdx
   140039049:	mov    eax,DWORD PTR [rbp+0x70]
   14003904c:	and    eax,0x1
   14003904f:	test   eax,eax
   140039051:	je     0x140039060
   140039053:	and    DWORD PTR [rbp+0x70],0xfffffffe
   140039057:	lea    rcx,[rbp+0x48]
   14003905b:	call   0x140003a90
   140039060:	add    rsp,0x20
   140039064:	pop    rbp
   140039065:	ret    
   140039066:	int3   
   140039067:	int3   
   140039068:	int3   
   140039069:	int3   
   14003906a:	int3   
   14003906b:	int3   
   14003906c:	int3   
   14003906d:	int3   
   14003906e:	int3   
   14003906f:	int3   
   140039070:	rex push rbp
   140039072:	sub    rsp,0x20
   140039076:	mov    rbp,rdx
   140039079:	lea    rcx,[rbp+0x28]
   14003907d:	call   0x1400069b0
   140039082:	add    rsp,0x20
   140039086:	pop    rbp
   140039087:	ret    
   140039088:	int3   
   140039089:	int3   
   14003908a:	int3   
   14003908b:	int3   
   14003908c:	int3   
   14003908d:	int3   
   14003908e:	int3   
   14003908f:	int3   
   140039090:	mov    QWORD PTR [rsp+0x10],rdx
   140039095:	push   rbp
   140039096:	sub    rsp,0x20
   14003909a:	mov    rbp,rdx
   14003909d:	mov    rax,QWORD PTR [rbp+0x70]
   1400390a1:	mov    rax,QWORD PTR [rax]
   1400390a4:	movsxd rax,DWORD PTR [rax+0x4]
   1400390a8:	mov    rcx,QWORD PTR [rbp+0x70]
   1400390ac:	add    rcx,rax
   1400390af:	mov    r8b,0x1
   1400390b2:	mov    edx,0x4
   1400390b7:	call   0x140003400
   1400390bc:	nop
   1400390bd:	lea    rax,[rip+0xfffffffffffd8939]        # 0x1400119fd
   1400390c4:	jmp    0x1400390c6
   1400390c6:	add    rsp,0x20
   1400390ca:	pop    rbp
   1400390cb:	ret    
   1400390cc:	int3   
   1400390cd:	int3   
   1400390ce:	int3   
   1400390cf:	int3   
   1400390d0:	rex push rbp
   1400390d2:	sub    rsp,0x20
   1400390d6:	mov    rbp,rdx
   1400390d9:	lea    rcx,[rbp+0x48]
   1400390dd:	call   0x140002ea0
   1400390e2:	add    rsp,0x20
   1400390e6:	pop    rbp
   1400390e7:	ret    
   1400390e8:	int3   
   1400390e9:	int3   
   1400390ea:	int3   
   1400390eb:	int3   
   1400390ec:	int3   
   1400390ed:	int3   
   1400390ee:	int3   
   1400390ef:	int3   
   1400390f0:	rex push rbp
   1400390f2:	sub    rsp,0x20
   1400390f6:	mov    rbp,rdx
   1400390f9:	lea    rcx,[rbp+0x68]
   1400390fd:	call   0x140001b80
   140039102:	add    rsp,0x20
   140039106:	pop    rbp
   140039107:	ret    
   140039108:	int3   
   140039109:	int3   
   14003910a:	int3   
   14003910b:	int3   
   14003910c:	int3   
   14003910d:	int3   
   14003910e:	int3   
   14003910f:	int3   
   140039110:	mov    QWORD PTR [rsp+0x10],rdx
   140039115:	push   rbp
   140039116:	sub    rsp,0x40
   14003911a:	mov    rbp,rdx
   14003911d:	mov    rax,QWORD PTR [rbp+0x110]
   140039124:	mov    rax,QWORD PTR [rax]
   140039127:	movsxd rax,DWORD PTR [rax+0x4]
   14003912b:	mov    rcx,QWORD PTR [rbp+0x110]
   140039132:	add    rcx,rax
   140039135:	mov    r8b,0x1
   140039138:	mov    edx,0x4
   14003913d:	call   0x140003400
   140039142:	nop
   140039143:	lea    rax,[rip+0xfffffffffffd37b7]        # 0x14000c901
   14003914a:	jmp    0x14003914c
   14003914c:	add    rsp,0x40
   140039150:	pop    rbp
   140039151:	ret    
   140039152:	int3   
   140039153:	int3   
   140039154:	int3   
   140039155:	int3   
   140039156:	int3   
   140039157:	int3   
   140039158:	int3   
   140039159:	int3   
   14003915a:	int3   
   14003915b:	int3   
   14003915c:	int3   
   14003915d:	int3   
   14003915e:	int3   
   14003915f:	int3   
   140039160:	rex push rbp
   140039162:	sub    rsp,0x20
   140039166:	mov    rbp,rdx
   140039169:	lea    rcx,[rbp+0x38]
   14003916d:	call   0x1400069b0
   140039172:	add    rsp,0x20
   140039176:	pop    rbp
   140039177:	ret    
   140039178:	int3   
   140039179:	int3   
   14003917a:	int3   
   14003917b:	int3   
   14003917c:	int3   
   14003917d:	int3   
   14003917e:	int3   
   14003917f:	int3   
   140039180:	mov    QWORD PTR [rsp+0x10],rdx
   140039185:	push   rbp
   140039186:	sub    rsp,0x20
   14003918a:	mov    rbp,rdx
   14003918d:	mov    rax,QWORD PTR [rbp+0x90]
   140039194:	mov    rax,QWORD PTR [rax]
   140039197:	movsxd rax,DWORD PTR [rax+0x4]
   14003919b:	mov    rcx,QWORD PTR [rbp+0x90]
   1400391a2:	add    rcx,rax
   1400391a5:	mov    r8b,0x1
   1400391a8:	mov    edx,0x4
   1400391ad:	call   0x140003400
   1400391b2:	nop
   1400391b3:	lea    rax,[rip+0xfffffffffffd2d3a]        # 0x14000bef4
   1400391ba:	jmp    0x1400391bc
   1400391bc:	add    rsp,0x20
   1400391c0:	pop    rbp
   1400391c1:	ret    
   1400391c2:	int3   
   1400391c3:	int3   
   1400391c4:	int3   
   1400391c5:	int3   
   1400391c6:	int3   
   1400391c7:	int3   
   1400391c8:	int3   
   1400391c9:	int3   
   1400391ca:	int3   
   1400391cb:	int3   
   1400391cc:	int3   
   1400391cd:	int3   
   1400391ce:	int3   
   1400391cf:	int3   
   1400391d0:	rex push rbp
   1400391d2:	sub    rsp,0x20
   1400391d6:	mov    rbp,rdx
   1400391d9:	lea    rcx,[rbp+0x30]
   1400391dd:	call   0x1400069b0
   1400391e2:	add    rsp,0x20
   1400391e6:	pop    rbp
   1400391e7:	ret    
   1400391e8:	int3   
   1400391e9:	int3   
   1400391ea:	int3   
   1400391eb:	int3   
   1400391ec:	int3   
   1400391ed:	int3   
   1400391ee:	int3   
   1400391ef:	int3   
   1400391f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400391f5:	push   rbp
   1400391f6:	sub    rsp,0x20
   1400391fa:	mov    rbp,rdx
   1400391fd:	mov    rax,QWORD PTR [rbp+0x90]
   140039204:	mov    rax,QWORD PTR [rax]
   140039207:	movsxd rax,DWORD PTR [rax+0x4]
   14003920b:	mov    rcx,QWORD PTR [rbp+0x90]
   140039212:	add    rcx,rax
   140039215:	mov    r8b,0x1
   140039218:	mov    edx,0x4
   14003921d:	call   0x140003400
   140039222:	nop
   140039223:	lea    rax,[rip+0xfffffffffffd2987]        # 0x14000bbb1
   14003922a:	jmp    0x14003922c
   14003922c:	add    rsp,0x20
   140039230:	pop    rbp
   140039231:	ret    
   140039232:	int3   
   140039233:	int3   
   140039234:	int3   
   140039235:	int3   
   140039236:	int3   
   140039237:	int3   
   140039238:	int3   
   140039239:	int3   
   14003923a:	int3   
   14003923b:	int3   
   14003923c:	int3   
   14003923d:	int3   
   14003923e:	int3   
   14003923f:	int3   
   140039240:	rex push rbp
   140039242:	sub    rsp,0x20
   140039246:	mov    rbp,rdx
   140039249:	lea    rcx,[rbp+0x28]
   14003924d:	call   0x1400069b0
   140039252:	add    rsp,0x20
   140039256:	pop    rbp
   140039257:	ret    
   140039258:	int3   
   140039259:	int3   
   14003925a:	int3   
   14003925b:	int3   
   14003925c:	int3   
   14003925d:	int3   
   14003925e:	int3   
   14003925f:	int3   
   140039260:	mov    QWORD PTR [rsp+0x10],rdx
   140039265:	push   rbp
   140039266:	sub    rsp,0x20
   14003926a:	mov    rbp,rdx
   14003926d:	mov    rax,QWORD PTR [rbp+0x80]
   140039274:	mov    rax,QWORD PTR [rax]
   140039277:	movsxd rax,DWORD PTR [rax+0x4]
   14003927b:	mov    rcx,QWORD PTR [rbp+0x80]
   140039282:	add    rcx,rax
   140039285:	mov    r8b,0x1
   140039288:	mov    edx,0x4
   14003928d:	call   0x140003400
   140039292:	nop
   140039293:	lea    rax,[rip+0xfffffffffffd2551]        # 0x14000b7eb
   14003929a:	jmp    0x14003929c
   14003929c:	add    rsp,0x20
   1400392a0:	pop    rbp
   1400392a1:	ret    
   1400392a2:	int3   
   1400392a3:	int3   
   1400392a4:	int3   
   1400392a5:	int3   
   1400392a6:	int3   
   1400392a7:	int3   
   1400392a8:	int3   
   1400392a9:	int3   
   1400392aa:	int3   
   1400392ab:	int3   
   1400392ac:	int3   
   1400392ad:	int3   
   1400392ae:	int3   
   1400392af:	int3   
   1400392b0:	rex push rbp
   1400392b2:	sub    rsp,0x20
   1400392b6:	mov    rbp,rdx
   1400392b9:	mov    eax,DWORD PTR [rbp+0x20]
   1400392bc:	and    eax,0x1
   1400392bf:	test   eax,eax
   1400392c1:	je     0x1400392d4
   1400392c3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400392c7:	mov    rcx,QWORD PTR [rbp+0x40]
   1400392cb:	add    rcx,0x10
   1400392cf:	call   0x1400033d0
   1400392d4:	add    rsp,0x20
   1400392d8:	pop    rbp
   1400392d9:	ret    
   1400392da:	int3   
   1400392db:	int3   
   1400392dc:	int3   
   1400392dd:	int3   
   1400392de:	int3   
   1400392df:	int3   
   1400392e0:	rex push rbp
   1400392e2:	sub    rsp,0x20
   1400392e6:	mov    rbp,rdx
   1400392e9:	mov    eax,DWORD PTR [rbp+0x20]
   1400392ec:	and    eax,0x1
   1400392ef:	test   eax,eax
   1400392f1:	je     0x140039304
   1400392f3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400392f7:	mov    rcx,QWORD PTR [rbp+0x40]
   1400392fb:	add    rcx,0x18
   1400392ff:	call   0x1400033d0
   140039304:	add    rsp,0x20
   140039308:	pop    rbp
   140039309:	ret    
   14003930a:	int3   
   14003930b:	int3   
   14003930c:	int3   
   14003930d:	int3   
   14003930e:	int3   
   14003930f:	int3   
   140039310:	rex push rbp
   140039312:	sub    rsp,0x20
   140039316:	mov    rbp,rdx
   140039319:	mov    rcx,QWORD PTR [rbp+0x40]
   14003931d:	add    rcx,0x10
   140039321:	call   0x140003450
   140039326:	add    rsp,0x20
   14003932a:	pop    rbp
   14003932b:	ret    
   14003932c:	int3   
   14003932d:	int3   
   14003932e:	int3   
   14003932f:	int3   
   140039330:	rex push rbp
   140039332:	sub    rsp,0x20
   140039336:	mov    rbp,rdx
   140039339:	mov    rcx,QWORD PTR [rbp+0x290]
   140039340:	call   0x140003a90
   140039345:	add    rsp,0x20
   140039349:	pop    rbp
   14003934a:	ret    
   14003934b:	int3   
   14003934c:	int3   
   14003934d:	int3   
   14003934e:	int3   
   14003934f:	int3   
   140039350:	rex push rbp
   140039352:	sub    rsp,0x20
   140039356:	mov    rbp,rdx
   140039359:	lea    rcx,[rbp+0x28]
   14003935d:	call   0x140003a90
   140039362:	add    rsp,0x20
   140039366:	pop    rbp
   140039367:	ret    
   140039368:	int3   
   140039369:	int3   
   14003936a:	int3   
   14003936b:	int3   
   14003936c:	int3   
   14003936d:	int3   
   14003936e:	int3   
   14003936f:	int3   
   140039370:	rex push rbp
   140039372:	sub    rsp,0x20
   140039376:	mov    rbp,rdx
   140039379:	lea    rcx,[rbp+0x70]
   14003937d:	call   0x140003a90
   140039382:	add    rsp,0x20
   140039386:	pop    rbp
   140039387:	ret    
   140039388:	int3   
   140039389:	int3   
   14003938a:	int3   
   14003938b:	int3   
   14003938c:	int3   
   14003938d:	int3   
   14003938e:	int3   
   14003938f:	int3   
   140039390:	rex push rbp
   140039392:	sub    rsp,0x20
   140039396:	mov    rbp,rdx
   140039399:	lea    rcx,[rbp+0xa0]
   1400393a0:	call   0x140005120
   1400393a5:	add    rsp,0x20
   1400393a9:	pop    rbp
   1400393aa:	ret    
   1400393ab:	int3   
   1400393ac:	int3   
   1400393ad:	int3   
   1400393ae:	int3   
   1400393af:	int3   
   1400393b0:	rex push rbp
   1400393b2:	sub    rsp,0x20
   1400393b6:	mov    rbp,rdx
   1400393b9:	lea    rcx,[rbp+0x1e8]
   1400393c0:	call   0x140003a90
   1400393c5:	add    rsp,0x20
   1400393c9:	pop    rbp
   1400393ca:	ret    
   1400393cb:	int3   
   1400393cc:	int3   
   1400393cd:	int3   
   1400393ce:	int3   
   1400393cf:	int3   
   1400393d0:	rex push rbp
   1400393d2:	sub    rsp,0x20
   1400393d6:	mov    rbp,rdx
   1400393d9:	lea    rcx,[rbp+0x28]
   1400393dd:	call   0x140003a90
   1400393e2:	add    rsp,0x20
   1400393e6:	pop    rbp
   1400393e7:	ret    
   1400393e8:	int3   
   1400393e9:	int3   
   1400393ea:	int3   
   1400393eb:	int3   
   1400393ec:	int3   
   1400393ed:	int3   
   1400393ee:	int3   
   1400393ef:	int3   
   1400393f0:	rex push rbp
   1400393f2:	sub    rsp,0x20
   1400393f6:	mov    rbp,rdx
   1400393f9:	lea    rcx,[rbp+0x90]
   140039400:	call   0x140005120
   140039405:	add    rsp,0x20
   140039409:	pop    rbp
   14003940a:	ret    
   14003940b:	int3   
   14003940c:	int3   
   14003940d:	int3   
   14003940e:	int3   
   14003940f:	int3   
   140039410:	rex push rbp
   140039412:	sub    rsp,0x20
   140039416:	mov    rbp,rdx
   140039419:	lea    rcx,[rbp+0x50]
   14003941d:	call   0x140003a90
   140039422:	add    rsp,0x20
   140039426:	pop    rbp
   140039427:	ret    
   140039428:	int3   
   140039429:	int3   
   14003942a:	int3   
   14003942b:	int3   
   14003942c:	int3   
   14003942d:	int3   
   14003942e:	int3   
   14003942f:	int3   
   140039430:	rex push rbp
   140039432:	sub    rsp,0x20
   140039436:	mov    rbp,rdx
   140039439:	lea    rcx,[rbp+0x1f0]
   140039440:	call   0x140003a90
   140039445:	add    rsp,0x20
   140039449:	pop    rbp
   14003944a:	ret    
   14003944b:	int3   
   14003944c:	int3   
   14003944d:	int3   
   14003944e:	int3   
   14003944f:	int3   
   140039450:	rex push rbp
   140039452:	sub    rsp,0x20
   140039456:	mov    rbp,rdx
   140039459:	mov    eax,DWORD PTR [rbp+0x20]
   14003945c:	and    eax,0x1
   14003945f:	test   eax,eax
   140039461:	je     0x140039477
   140039463:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140039467:	mov    rcx,QWORD PTR [rbp+0x40]
   14003946b:	add    rcx,0x98
   140039472:	call   0x1400033d0
   140039477:	add    rsp,0x20
   14003947b:	pop    rbp
   14003947c:	ret    
   14003947d:	int3   
   14003947e:	int3   
   14003947f:	int3   
   140039480:	rex push rbp
   140039482:	sub    rsp,0x20
   140039486:	mov    rbp,rdx
   140039489:	mov    rcx,QWORD PTR [rbp+0x40]
   14003948d:	add    rcx,0x18
   140039491:	call   0x140006c60
   140039496:	add    rsp,0x20
   14003949a:	pop    rbp
   14003949b:	ret    
   14003949c:	int3   
   14003949d:	int3   
   14003949e:	int3   
   14003949f:	int3   
   1400394a0:	rex push rbp
   1400394a2:	sub    rsp,0x20
   1400394a6:	mov    rbp,rdx
   1400394a9:	lea    rcx,[rbp+0x20]
   1400394ad:	call   0x140005120
   1400394b2:	add    rsp,0x20
   1400394b6:	pop    rbp
   1400394b7:	ret    
   1400394b8:	int3   
   1400394b9:	int3   
   1400394ba:	int3   
   1400394bb:	int3   
   1400394bc:	int3   
   1400394bd:	int3   
   1400394be:	int3   
   1400394bf:	int3   
   1400394c0:	sub    rsp,0x28
   1400394c4:	lea    rcx,[rip+0x13655]        # 0x14004cb20
   1400394cb:	call   0x1400359d0
   1400394d0:	lea    rcx,[rip+0x1f9]        # 0x1400396d0
   1400394d7:	call   0x14001cee4
   1400394dc:	add    rsp,0x28
   1400394e0:	ret    
   1400394e1:	int3   
   1400394e2:	int3   
   1400394e3:	int3   
   1400394e4:	int3   
   1400394e5:	int3   
   1400394e6:	int3   
   1400394e7:	int3   
   1400394e8:	int3   
   1400394e9:	int3   
   1400394ea:	int3   
   1400394eb:	int3   
   1400394ec:	int3   
   1400394ed:	int3   
   1400394ee:	int3   
   1400394ef:	int3   
   1400394f0:	sub    rsp,0x28
   1400394f4:	xor    edx,edx
   1400394f6:	lea    rcx,[rip+0x13e03]        # 0x14004d300
   1400394fd:	call   0x140001300
   140039502:	add    rsp,0x28
   140039506:	ret    
   140039507:	int3   
   140039508:	int3   
   140039509:	int3   
   14003950a:	int3   
   14003950b:	int3   
   14003950c:	int3   
   14003950d:	int3   
   14003950e:	int3   
   14003950f:	int3   
   140039510:	sub    rsp,0x28
   140039514:	xor    edx,edx
   140039516:	lea    rcx,[rip+0x13ddb]        # 0x14004d2f8
   14003951d:	call   0x140001300
   140039522:	add    rsp,0x28
   140039526:	ret    
   140039527:	int3   
   140039528:	int3   
   140039529:	int3   
   14003952a:	int3   
   14003952b:	int3   
   14003952c:	int3   
   14003952d:	int3   
   14003952e:	int3   
   14003952f:	int3   
   140039530:	sub    rsp,0x28
   140039534:	lea    rcx,[rip+0x13d45]        # 0x14004d280
   14003953b:	call   0x140013ef0
   140039540:	lea    rcx,[rip+0x1a9]        # 0x1400396f0
   140039547:	call   0x14001cee4
   14003954c:	add    rsp,0x28
   140039550:	ret    
   140039551:	int3   
   140039552:	int3   
   140039553:	int3   
   140039554:	int3   
   140039555:	int3   
   140039556:	int3   
   140039557:	int3   
   140039558:	int3   
   140039559:	int3   
   14003955a:	int3   
   14003955b:	int3   
   14003955c:	int3   
   14003955d:	int3   
   14003955e:	int3   
   14003955f:	int3   
   140039560:	sub    rsp,0x28
   140039564:	mov    r9,QWORD PTR [rip+0x11c6d]        # 0x14004b1d8
   14003956b:	mov    r8d,0x1
   140039571:	mov    edx,0x1
   140039576:	xor    ecx,ecx
   140039578:	call   QWORD PTR [rip+0xb9a]        # 0x14003a118
   14003957e:	mov    QWORD PTR [rip+0x13d63],rax        # 0x14004d2e8
   140039585:	add    rsp,0x28
   140039589:	ret    
   14003958a:	int3   
   14003958b:	int3   
   14003958c:	int3   
   14003958d:	int3   
   14003958e:	int3   
   14003958f:	int3   
   140039590:	sub    rsp,0x28
   140039594:	mov    r9,QWORD PTR [rip+0x11c45]        # 0x14004b1e0
   14003959b:	mov    r8d,0x400
   1400395a1:	xor    edx,edx
   1400395a3:	xor    ecx,ecx
   1400395a5:	call   QWORD PTR [rip+0xb6d]        # 0x14003a118
   1400395ab:	mov    QWORD PTR [rip+0x13d3e],rax        # 0x14004d2f0
   1400395b2:	add    rsp,0x28
   1400395b6:	ret    
   1400395b7:	int3   
   1400395b8:	sub    rsp,0x28
   1400395bc:	lea    rcx,[rip+0x11ffd]        # 0x14004b5c0
   1400395c3:	call   0x1400193ac
   1400395c8:	lea    rcx,[rip+0x139]        # 0x140039708
   1400395cf:	add    rsp,0x28
   1400395d3:	jmp    0x14001cee4
   1400395d8:	sub    rsp,0x28
   1400395dc:	lea    rcx,[rip+0x120dd]        # 0x14004b6c0
   1400395e3:	call   0x14001942c
   1400395e8:	lea    rcx,[rip+0x125]        # 0x140039714
   1400395ef:	add    rsp,0x28
   1400395f3:	jmp    0x14001cee4
   1400395f8:	lea    rcx,[rip+0x121]        # 0x140039720
   1400395ff:	jmp    0x14001cee4
   140039604:	sub    rsp,0x28
   140039608:	lea    rcx,[rip+0x12382]        # 0x14004b991
   14003960f:	call   0x14001942c
   140039614:	lea    rcx,[rip+0x111]        # 0x14003972c
   14003961b:	add    rsp,0x28
   14003961f:	jmp    0x14001cee4
   140039624:	sub    rsp,0x28
   140039628:	call   0x140023a44
   14003962d:	lea    rcx,[rip+0x1236c]        # 0x14004b9a0
   140039634:	lea    rdx,[rax+0x30]
   140039638:	call   0x14001ab84
   14003963d:	lea    rcx,[rip+0x12c]        # 0x140039770
   140039644:	add    rsp,0x28
   140039648:	jmp    0x14001cee4
   14003964d:	int3   
   14003964e:	int3   
   14003964f:	int3   
   140039650:	sub    rsp,0x38
   140039654:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003965d:	and    DWORD PTR [rsp+0x40],0x0
   140039662:	mov    DWORD PTR [rsp+0x40],0x1
   14003966a:	xor    r8d,r8d
   14003966d:	lea    rdx,[rip+0x1232c]        # 0x14004b9a0
   140039674:	lea    rcx,[rip+0xfa2d]        # 0x1400490a8
   14003967b:	call   0x14000af40
   140039680:	nop
   140039681:	lea    rcx,[rip+0xb0]        # 0x140039738
   140039688:	add    rsp,0x38
   14003968c:	jmp    0x14001cee4
   140039691:	int3   
   140039692:	int3   
   140039693:	int3   
   140039694:	lea    rcx,[rip+0x122f5]        # 0x14004b990
   14003969b:	jmp    0x14001aaa8
   1400396a0:	sub    rsp,0x28
   1400396a4:	lea    rcx,[rip+0x12415]        # 0x14004bac0
   1400396ab:	call   0x14001942c
   1400396b0:	lea    rcx,[rip+0xc5]        # 0x14003977c
   1400396b7:	add    rsp,0x28
   1400396bb:	jmp    0x14001cee4
   1400396c0:	lea    rcx,[rip+0xc1]        # 0x140039788
   1400396c7:	jmp    0x14001cee4
   1400396cc:	int3   
   1400396cd:	int3   
   1400396ce:	int3   
   1400396cf:	int3   
   1400396d0:	sub    rsp,0x28
   1400396d4:	lea    rcx,[rip+0x13445]        # 0x14004cb20
   1400396db:	call   0x140002ec0
   1400396e0:	add    rsp,0x28
   1400396e4:	ret    
   1400396e5:	int3   
   1400396e6:	int3   
   1400396e7:	int3   
   1400396e8:	int3   
   1400396e9:	int3   
   1400396ea:	int3   
   1400396eb:	int3   
   1400396ec:	int3   
   1400396ed:	int3   
   1400396ee:	int3   
   1400396ef:	int3   
   1400396f0:	sub    rsp,0x28
   1400396f4:	lea    rcx,[rip+0x13b85]        # 0x14004d280
   1400396fb:	call   0x140013f20
   140039700:	add    rsp,0x28
   140039704:	ret    
   140039705:	int3   
   140039706:	int3   
   140039707:	int3   
   140039708:	lea    rcx,[rip+0x11eb1]        # 0x14004b5c0
   14003970f:	jmp    0x140019378
   140039714:	lea    rcx,[rip+0x11fa5]        # 0x14004b6c0
   14003971b:	jmp    0x14001947c
   140039720:	lea    rcx,[rip+0x11fd9]        # 0x14004b700
   140039727:	jmp    0x140001b80
   14003972c:	lea    rcx,[rip+0x1225e]        # 0x14004b991
   140039733:	jmp    0x14001947c
   140039738:	mov    rax,QWORD PTR [rip+0xf961]        # 0x1400490a0
   14003973f:	lea    rdx,[rip+0xf95a]        # 0x1400490a0
   140039746:	movsxd rcx,DWORD PTR [rax+0x4]
   14003974a:	lea    rax,[rip+0x11a7]        # 0x14003a8f8
   140039751:	mov    QWORD PTR [rcx+rdx*1],rax
   140039755:	lea    rax,[rip+0x118c]        # 0x14003a8e8
   14003975c:	lea    rcx,[rip+0xf945]        # 0x1400490a8
   140039763:	mov    QWORD PTR [rip+0xf93e],rax        # 0x1400490a8
   14003976a:	jmp    0x14001a194
   14003976f:	int3   
   140039770:	lea    rcx,[rip+0x12229]        # 0x14004b9a0
   140039777:	jmp    0x14001c3b8
   14003977c:	lea    rcx,[rip+0x1233d]        # 0x14004bac0
   140039783:	jmp    0x14001947c
   140039788:	rex push rbx
   14003978a:	sub    rsp,0x20
   14003978e:	mov    rcx,QWORD PTR [rip+0xfa23]        # 0x1400491b8
   140039795:	cmp    rcx,0xa
   140039799:	jae    0x1400397c6
   14003979b:	lea    rbx,[rip+0x122ce]        # 0x14004ba70
   1400397a2:	mov    rax,QWORD PTR [rbx+rcx*8]
   1400397a6:	inc    rcx
   1400397a9:	mov    QWORD PTR [rip+0xfa08],rcx        # 0x1400491b8
   1400397b0:	test   rax,rax
   1400397b3:	je     0x1400397c0
   1400397b5:	call   QWORD PTR [rbx+rcx*8-0x8]
   1400397b9:	mov    rcx,QWORD PTR [rip+0xf9f8]        # 0x1400491b8
   1400397c0:	cmp    rcx,0xa
   1400397c4:	jb     0x1400397a2
   1400397c6:	add    rsp,0x20
   1400397ca:	pop    rbx
   1400397cb:	ret    
   1400397cc:	lea    rax,[rip+0xe85]        # 0x14003a658
   1400397d3:	lea    rcx,[rip+0x122ee]        # 0x14004bac8
   1400397da:	mov    QWORD PTR [rip+0x122e7],rax        # 0x14004bac8
   1400397e1:	jmp    0x14001c944
