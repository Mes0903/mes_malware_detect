
96e1776c94c1177014f4c46d151e179607a130b217dac3a03a38e5d257f5ccca.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001010:	mov    QWORD PTR [rsp+0x20],rbx
   140001015:	push   rbp
   140001016:	push   rsi
   140001017:	push   rdi
   140001018:	push   r12
   14000101a:	push   r14
   14000101c:	lea    rbp,[rsp-0x190]
   140001024:	sub    rsp,0x290
   14000102b:	mov    rax,QWORD PTR [rip+0xbfd6]        # 0x14000d008
   140001032:	xor    rax,rsp
   140001035:	mov    QWORD PTR [rbp+0x180],rax
   14000103c:	mov    eax,DWORD PTR [rip+0x9a1e]        # 0x14000aa60
   140001042:	mov    r14,rdx
   140001045:	mov    DWORD PTR [rsp+0x60],eax
   140001049:	mov    esi,ecx
   14000104b:	movzx  eax,BYTE PTR [rip+0x9a12]        # 0x14000aa64
   140001052:	xor    r12d,r12d
   140001055:	mov    BYTE PTR [rsp+0x64],al
   140001059:	xor    r9d,r9d
   14000105c:	xor    eax,eax
   14000105e:	mov    DWORD PTR [rsp+0x40],ecx
   140001062:	xor    r8d,r8d
   140001065:	mov    DWORD PTR [rsp+0x65],eax
   140001069:	xor    ecx,ecx
   14000106b:	mov    WORD PTR [rsp+0x69],ax
   140001070:	movzx  edi,r12w
   140001074:	mov    BYTE PTR [rsp+0x6b],al
   140001078:	lea    edx,[rax+0x1]
   14000107b:	call   QWORD PTR [rip+0x9097]        # 0x14000a118
   140001081:	test   eax,eax
   140001083:	je     0x1400030a0
   140001089:	mov    DWORD PTR [rip+0x14d21],esi        # 0x140015db0
   14000108f:	mov    QWORD PTR [rip+0x14d22],r14        # 0x140015db8
   140001096:	call   QWORD PTR [rip+0x8fe4]        # 0x14000a080
   14000109c:	mov    ecx,eax
   14000109e:	lea    rdx,[rip+0x1427b]        # 0x140015320
   1400010a5:	mov    ebx,eax
   1400010a7:	call   QWORD PTR [rip+0x90d3]        # 0x14000a180
   1400010ad:	xor    ecx,ecx
   1400010af:	call   QWORD PTR [rip+0x90bb]        # 0x14000a170
   1400010b5:	test   ebx,ebx
   1400010b7:	je     0x1400010d3
   1400010b9:	mov    r9d,ebx
   1400010bc:	lea    r8,[rip+0x947d]        # 0x14000a540
   1400010c3:	mov    edx,0xc
   1400010c8:	lea    rcx,[rsp+0x60]
   1400010cd:	call   QWORD PTR [rip+0x9315]        # 0x14000a3e8
   1400010d3:	lea    rdx,[rsp+0x60]
   1400010d8:	xor    ecx,ecx
   1400010da:	call   QWORD PTR [rip+0x92c0]        # 0x14000a3a0
   1400010e0:	mov    ecx,0xfffffff5
   1400010e5:	call   QWORD PTR [rip+0x90ad]        # 0x14000a198
   1400010eb:	mov    QWORD PTR [rip+0x1424e],rax        # 0x140015340
   1400010f2:	cmp    rax,0xffffffffffffffff
   1400010f6:	je     0x140003107
   1400010fc:	mov    ecx,0xfffffff4
   140001101:	call   QWORD PTR [rip+0x9091]        # 0x14000a198
   140001107:	mov    QWORD PTR [rip+0x141f2],rax        # 0x140015300
   14000110e:	cmp    rax,0xffffffffffffffff
   140001112:	je     0x140003121
   140001118:	call   QWORD PTR [rip+0x9072]        # 0x14000a190
   14000111e:	mov    r8d,0x104
   140001124:	lea    rdx,[rsp+0x70]
   140001129:	xor    ecx,ecx
   14000112b:	mov    rbx,rax
   14000112e:	call   QWORD PTR [rip+0x901c]        # 0x14000a150
   140001134:	cmp    WORD PTR [rbx],r12w
   140001138:	je     0x14000313b
   14000113e:	lea    rax,[rsp+0x58]
   140001143:	mov    DWORD PTR [rsp+0x28],r12d
   140001148:	lea    r9,[rsp+0x40]
   14000114d:	mov    QWORD PTR [rsp+0x20],rax
   140001152:	xor    r8d,r8d
   140001155:	xor    edx,edx
   140001157:	mov    rcx,rbx
   14000115a:	call   0x140001390
   14000115f:	movsxd rax,DWORD PTR [rsp+0x58]
   140001164:	or     rdx,0xffffffffffffffff
   140001168:	mov    r8d,DWORD PTR [rsp+0x40]
   14000116d:	sub    rdx,rax
   140001170:	shr    rdx,0x3
   140001174:	lea    r14d,[rax+r8*8]
   140001178:	cmp    r8,rdx
   14000117b:	jae    0x140003150
   140001181:	mov    rcx,QWORD PTR gs:0x60
   14000118a:	xor    edx,edx
   14000118c:	movsxd r8,r14d
   14000118f:	mov    rcx,QWORD PTR [rcx+0x30]
   140001193:	call   QWORD PTR [rip+0x92b7]        # 0x14000a450
   140001199:	mov    rsi,rax
   14000119c:	test   rax,rax
   14000119f:	je     0x140003145
   1400011a5:	movsxd rax,DWORD PTR [rsp+0x40]
   1400011aa:	lea    r9,[rsp+0x40]
   1400011af:	mov    QWORD PTR [rsp+0x2c8],r13
   1400011b7:	mov    rdx,rsi
   1400011ba:	mov    DWORD PTR [rsp+0x28],r14d
   1400011bf:	mov    rcx,rbx
   1400011c2:	mov    QWORD PTR [rsp+0x2d0],r15
   1400011ca:	lea    r8,[rsi+rax*8]
   1400011ce:	lea    rax,[rsp+0x58]
   1400011d3:	mov    QWORD PTR [rsp+0x20],rax
   1400011d8:	call   0x140001390
   1400011dd:	lea    rax,[rsi+0x8]
   1400011e1:	movzx  r15d,r12w
   1400011e5:	mov    esi,DWORD PTR [rsp+0x40]
   1400011e9:	movzx  ebx,r12w
   1400011ed:	mov    QWORD PTR [rip+0x14144],rax        # 0x140015338
   1400011f4:	sub    esi,0x1
   1400011f7:	je     0x140001246
   1400011f9:	lea    r13,[rip+0xffffffffffffee00]        # 0x140000000
   140001200:	mov    rdx,QWORD PTR [rax]
   140001203:	mov    ecx,0x100
   140001208:	cmp    WORD PTR [rdx],0x2f
   14000120c:	je     0x14000316c
   140001212:	cmp    bx,cx
   140001215:	jge    0x140003270
   14000121b:	movsx  rcx,bx
   14000121f:	inc    bx
   140001222:	mov    QWORD PTR [r13+rcx*8+0x153b0],rdx
   14000122a:	mov    WORD PTR [r13+rcx*2+0x15bb0],di
   140001233:	add    rax,0x8
   140001237:	inc    di
   14000123a:	mov    QWORD PTR [rip+0x140f7],rax        # 0x140015338
   140001241:	sub    esi,0x1
   140001244:	jne    0x140001200
   140001246:	lea    rdx,[rsp+0x48]
   14000124b:	mov    ecx,0x18
   140001250:	call   QWORD PTR [rip+0x91c2]        # 0x14000a418
   140001256:	test   eax,eax
   140001258:	jne    0x140003287
   14000125e:	mov    rax,QWORD PTR [rsp+0x48]
   140001263:	lea    rcx,[rip+0x11096]        # 0x140012300
   14000126a:	mov    QWORD PTR [rax],rcx
   14000126d:	mov    rax,QWORD PTR [rsp+0x48]
   140001272:	mov    rcx,QWORD PTR [rip+0x14127]        # 0x1400153a0
   140001279:	mov    DWORD PTR [rax+0x10],0x2000
   140001280:	mov    rax,QWORD PTR [rsp+0x48]
   140001285:	mov    DWORD PTR [rax+0x14],r12d
   140001289:	mov    rax,QWORD PTR [rsp+0x48]
   14000128e:	mov    QWORD PTR [rax+0x8],r12
   140001292:	test   rcx,rcx
   140001295:	jne    0x14000329b
   14000129b:	mov    rax,QWORD PTR [rsp+0x48]
   1400012a0:	mov    QWORD PTR [rip+0x140f9],rax        # 0x1400153a0
   1400012a7:	lea    rdx,[rsp+0x50]
   1400012ac:	mov    ecx,0x18
   1400012b1:	call   QWORD PTR [rip+0x9161]        # 0x14000a418
   1400012b7:	test   eax,eax
   1400012b9:	jne    0x1400032c0
   1400012bf:	mov    rax,QWORD PTR [rsp+0x50]
   1400012c4:	lea    rcx,[rip+0x13035]        # 0x140014300
   1400012cb:	mov    QWORD PTR [rax],rcx
   1400012ce:	mov    rax,QWORD PTR [rsp+0x50]
   1400012d3:	mov    rcx,QWORD PTR [rip+0x140c6]        # 0x1400153a0
   1400012da:	mov    DWORD PTR [rax+0x10],0x1000
   1400012e1:	mov    rax,QWORD PTR [rsp+0x50]
   1400012e6:	mov    DWORD PTR [rax+0x14],r12d
   1400012ea:	mov    rax,QWORD PTR [rsp+0x50]
   1400012ef:	mov    QWORD PTR [rax+0x8],r12
   1400012f3:	test   rcx,rcx
   1400012f6:	je     0x1400032d4
   1400012fc:	cmp    QWORD PTR [rcx+0x8],r12
   140001300:	lea    rax,[rcx+0x8]
   140001304:	jne    0x1400032e5
   14000130a:	mov    rax,QWORD PTR [rsp+0x50]
   14000130f:	mov    QWORD PTR [rcx+0x8],rax
   140001313:	xor    ecx,ecx
   140001315:	call   0x140002dc8
   14000131a:	mov    rcx,rax
   14000131d:	call   QWORD PTR [rip+0x900d]        # 0x14000a330
   140001323:	mov    ecx,eax
   140001325:	mov    edx,0x4000
   14000132a:	call   QWORD PTR [rip+0x8ff8]        # 0x14000a328
   140001330:	lea    rcx,[rip+0xc8e9]        # 0x14000dc20
   140001337:	mov    QWORD PTR [rip+0xc8c2],rcx        # 0x14000dc00
   14000133e:	mov    QWORD PTR [rip+0xc8b3],rcx        # 0x14000dbf8
   140001345:	call   0x1400018c0
   14000134a:	mov    eax,DWORD PTR [rip+0xc8d8]        # 0x14000dc28
   140001350:	lea    rdx,[rip+0xca09]        # 0x14000dd60
   140001357:	mov    DWORD PTR [rip+0x14a6b],eax        # 0x140015dc8
   14000135d:	xor    r8d,r8d
   140001360:	mov    rax,QWORD PTR [rip+0xc8b9]        # 0x14000dc20
   140001367:	xor    ecx,ecx
   140001369:	mov    QWORD PTR [rip+0x14a60],rax        # 0x140015dd0
   140001370:	call   0x1400015a0
   140001375:	xor    ecx,ecx
   140001377:	call   0x140007858
   14000137c:	int3   
   14000137d:	int3   
   14000137e:	int3   
   14000137f:	int3   
   140001380:	int3   
   140001381:	int3   
   140001382:	int3   
   140001383:	int3   
   140001384:	int3   
   140001385:	int3   
   140001386:	int3   
   140001387:	int3   
   140001388:	int3   
   140001389:	int3   
   14000138a:	int3   
   14000138b:	int3   
   14000138c:	int3   
   14000138d:	int3   
   14000138e:	int3   
   14000138f:	int3   
   140001390:	mov    QWORD PTR [rsp+0x8],rbx
   140001395:	mov    QWORD PTR [rsp+0x10],rbp
   14000139a:	mov    QWORD PTR [rsp+0x18],rsi
   14000139f:	mov    QWORD PTR [rsp+0x20],rdi
   1400013a4:	push   r12
   1400013a6:	push   r14
   1400013a8:	push   r15
   1400013aa:	movsxd rax,DWORD PTR [rsp+0x48]
   1400013af:	lea    rbp,[rdx-0x8]
   1400013b3:	mov    r10,QWORD PTR [rsp+0x40]
   1400013b8:	xor    r14d,r14d
   1400013bb:	shr    rax,0x3
   1400013bf:	mov    rsi,r9
   1400013c2:	mov    DWORD PTR [r9],0x1
   1400013c9:	mov    rdi,rdx
   1400013cc:	mov    DWORD PTR [r10],r14d
   1400013cf:	lea    rbp,[rbp+rax*8+0x0]
   1400013d4:	test   rdx,rdx
   1400013d7:	jne    0x140001517
   1400013dd:	cmp    WORD PTR [rcx],0x22
   1400013e1:	je     0x140001535
   1400013e7:	add    DWORD PTR [r10],0x2
   1400013eb:	mov    r11d,DWORD PTR [r10]
   1400013ee:	test   r8,r8
   1400013f1:	je     0x1400013fe
   1400013f3:	movzx  eax,WORD PTR [rcx]
   1400013f6:	mov    WORD PTR [r8],ax
   1400013fa:	add    r8,0x2
   1400013fe:	movzx  eax,WORD PTR [rcx]
   140001401:	add    rcx,0x2
   140001405:	cmp    ax,0x20
   140001409:	ja     0x1400013e7
   14000140b:	test   ax,ax
   14000140e:	je     0x1400032f8
   140001414:	test   r8,r8
   140001417:	je     0x14000141e
   140001419:	mov    WORD PTR [r8-0x2],r14w
   14000141e:	mov    ebx,r14d
   140001421:	mov    r15d,0xffff
   140001427:	mov    r12d,0x5c
   14000142d:	cmp    WORD PTR [rcx],r14w
   140001431:	je     0x1400014e7
   140001437:	movzx  eax,WORD PTR [rcx]
   14000143a:	cmp    ax,0x20
   14000143e:	je     0x14000152c
   140001444:	cmp    ax,0x9
   140001448:	je     0x14000152c
   14000144e:	cmp    ax,r14w
   140001452:	je     0x1400014e7
   140001458:	test   rdi,rdi
   14000145b:	jne    0x140001502
   140001461:	inc    DWORD PTR [rsi]
   140001463:	nop    DWORD PTR [rax+0x0]
   140001467:	nop    WORD PTR [rax+rax*1+0x0]
   140001470:	mov    r9d,0x1
   140001476:	movzx  eax,r14w
   14000147a:	cmp    WORD PTR [rcx],r12w
   14000147e:	je     0x140003301
   140001484:	cmp    WORD PTR [rcx],0x22
   140001488:	je     0x140003313
   14000148e:	test   ax,ax
   140001491:	jne    0x140003352
   140001497:	movzx  eax,WORD PTR [rcx]
   14000149a:	test   ax,ax
   14000149d:	je     0x1400014ce
   14000149f:	test   ebx,ebx
   1400014a1:	jne    0x1400014af
   1400014a3:	cmp    ax,0x20
   1400014a7:	je     0x1400014ce
   1400014a9:	cmp    ax,0x9
   1400014ad:	je     0x1400014ce
   1400014af:	test   r9d,r9d
   1400014b2:	je     0x1400014c8
   1400014b4:	test   r8,r8
   1400014b7:	je     0x1400014c1
   1400014b9:	mov    WORD PTR [r8],ax
   1400014bd:	add    r8,0x2
   1400014c1:	add    DWORD PTR [r10],0x2
   1400014c5:	mov    r11d,DWORD PTR [r10]
   1400014c8:	add    rcx,0x2
   1400014cc:	jmp    0x140001470
   1400014ce:	test   r8,r8
   1400014d1:	je     0x1400014db
   1400014d3:	mov    WORD PTR [r8],r14w
   1400014d7:	add    r8,0x2
   1400014db:	add    DWORD PTR [r10],0x2
   1400014df:	mov    r11d,DWORD PTR [r10]
   1400014e2:	jmp    0x14000142d
   1400014e7:	mov    rbx,QWORD PTR [rsp+0x20]
   1400014ec:	mov    rbp,QWORD PTR [rsp+0x28]
   1400014f1:	mov    rsi,QWORD PTR [rsp+0x30]
   1400014f6:	mov    rdi,QWORD PTR [rsp+0x38]
   1400014fb:	pop    r15
   1400014fd:	pop    r14
   1400014ff:	pop    r12
   140001501:	ret    
   140001502:	cmp    rdi,rbp
   140001505:	jae    0x140001461
   14000150b:	mov    QWORD PTR [rdi],r8
   14000150e:	add    rdi,0x8
   140001512:	jmp    0x140001461
   140001517:	cmp    rdx,rbp
   14000151a:	jae    0x1400013dd
   140001520:	mov    QWORD PTR [rdx],r8
   140001523:	add    rdi,0x8
   140001527:	jmp    0x1400013dd
   14000152c:	add    rcx,0x2
   140001530:	jmp    0x140001437
   140001535:	movzx  eax,WORD PTR [rcx+0x2]
   140001539:	add    rcx,0x2
   14000153d:	cmp    ax,0x22
   140001541:	je     0x140001567
   140001543:	test   ax,ax
   140001546:	je     0x140001567
   140001548:	add    DWORD PTR [r10],0x2
   14000154c:	test   r8,r8
   14000154f:	je     0x140001559
   140001551:	mov    WORD PTR [r8],ax
   140001555:	add    r8,0x2
   140001559:	movzx  eax,WORD PTR [rcx+0x2]
   14000155d:	add    rcx,0x2
   140001561:	cmp    ax,0x22
   140001565:	jne    0x140001543
   140001567:	add    DWORD PTR [r10],0x2
   14000156b:	mov    r11d,DWORD PTR [r10]
   14000156e:	test   r8,r8
   140001571:	je     0x14000157b
   140001573:	mov    WORD PTR [r8],r14w
   140001577:	add    r8,0x2
   14000157b:	cmp    WORD PTR [rcx],0x22
   14000157f:	jne    0x14000141e
   140001585:	add    rcx,0x2
   140001589:	jmp    0x14000141e
   14000158e:	int3   
   14000158f:	int3   
   140001590:	int3   
   140001591:	int3   
   140001592:	int3   
   140001593:	int3   
   140001594:	int3   
   140001595:	int3   
   140001596:	int3   
   140001597:	int3   
   140001598:	int3   
   140001599:	int3   
   14000159a:	int3   
   14000159b:	int3   
   14000159c:	int3   
   14000159d:	int3   
   14000159e:	int3   
   14000159f:	int3   
   1400015a0:	mov    QWORD PTR [rsp+0x18],rbx
   1400015a5:	push   rbp
   1400015a6:	push   rsi
   1400015a7:	push   rdi
   1400015a8:	sub    rsp,0x30
   1400015ac:	movsxd rbp,r8d
   1400015af:	lea    r10,[rip+0xffffffffffffea4a]        # 0x140000000
   1400015b6:	mov    rbx,rdx
   1400015b9:	mov    QWORD PTR [rsp+0x68],rdx
   1400015be:	mov    esi,ecx
   1400015c0:	mov    QWORD PTR [rsp+0x58],rbp
   1400015c5:	mov    edx,ebp
   1400015c7:	mov    r9,rbp
   1400015ca:	mov    QWORD PTR [r10+rbp*8+0xe1a0],0x1
   1400015d6:	lea    r11,[rip+0xc783]        # 0x14000dd60
   1400015dd:	lea    r8,[rip+0xcba8]        # 0x14000e18c
   1400015e4:	movsxd rcx,esi
   1400015e7:	lea    rdi,[rcx+rcx*1]
   1400015eb:	movzx  eax,WORD PTR [rdi+r10*1+0xab70]
   1400015f4:	cmp    eax,0x1
   1400015f7:	je     0x140001680
   1400015fd:	cmp    eax,0x3
   140001600:	je     0x1400016de
   140001606:	sub    eax,0x2
   140001609:	cmp    eax,0x9
   14000160c:	ja     0x1400016c8
   140001612:	movsxd rcx,eax
   140001615:	mov    eax,DWORD PTR [r10+rcx*4+0x1890]
   14000161d:	add    rax,r10
   140001620:	jmp    rax
   140001622:	movsxd rax,ebp
   140001625:	cmp    rax,0x27
   140001629:	jae    0x140003374
   14000162f:	test   ebp,ebp
   140001631:	js     0x1400016c8
   140001637:	movsx  ecx,WORD PTR [rdi+r10*1+0xaa70]
   140001640:	mov    r8d,ebp
   140001643:	mov    rdx,rbx
   140001646:	call   0x1400015a0
   14000164b:	movsxd rcx,ebp
   14000164e:	lea    r10,[rip+0xffffffffffffe9ab]        # 0x140000000
   140001655:	mov    QWORD PTR [r10+rcx*8+0xe1a0],rax
   14000165d:	test   rax,rax
   140001660:	jne    0x140003399
   140001666:	cmp    rbx,QWORD PTR [rsp+0x68]
   14000166b:	jne    0x140001795
   140001671:	xor    eax,eax
   140001673:	mov    rbx,QWORD PTR [rsp+0x60]
   140001678:	add    rsp,0x30
   14000167c:	pop    rdi
   14000167d:	pop    rsi
   14000167e:	pop    rbp
   14000167f:	ret    
   140001680:	movzx  eax,WORD PTR [r10+rcx*2+0xab72]
   140001689:	add    eax,0xfffffffd
   14000168c:	cmp    eax,0x1
   14000168f:	jbe    0x14000180f
   140001695:	cmp    rbx,r8
   140001698:	jae    0x1400036b0
   14000169e:	movsx  eax,WORD PTR [rdi+r10*1+0xaa70]
   1400016a7:	lea    rcx,[rip+0xc572]        # 0x14000dc20
   1400016ae:	mov    DWORD PTR [rbx],eax
   1400016b0:	mov    rax,QWORD PTR [rip+0xc549]        # 0x14000dc00
   1400016b7:	sub    rax,rcx
   1400016ba:	mov    DWORD PTR [rbx+0x4],ebp
   1400016bd:	sar    rax,0x4
   1400016c1:	mov    DWORD PTR [rbx+0x8],eax
   1400016c4:	add    rbx,0xc
   1400016c8:	mov    r9,QWORD PTR [rsp+0x58]
   1400016cd:	lea    r10,[rip+0xffffffffffffe92c]        # 0x140000000
   1400016d4:	mov    edx,r9d
   1400016d7:	inc    esi
   1400016d9:	jmp    0x1400015d6
   1400016de:	movsxd rcx,ebp
   1400016e1:	cmp    rcx,0x28
   1400016e5:	jae    0x140003680
   1400016eb:	cmp    rcx,0x27
   1400016ef:	jae    0x140001706
   1400016f1:	test   ebp,ebp
   1400016f3:	js     0x140001706
   1400016f5:	mov    rax,QWORD PTR [rip+0x146d4]        # 0x140015dd0
   1400016fc:	inc    ebp
   1400016fe:	mov    QWORD PTR [r10+rcx*8+0xe1a0],rax
   140001706:	movzx  eax,WORD PTR [rip+0x146bb]        # 0x140015dc8
   14000170d:	cmp    WORD PTR [rdi+r10*1+0xaa70],ax
   140001716:	jne    0x140001666
   14000171c:	mov    rdi,QWORD PTR [rip+0xc4dd]        # 0x14000dc00
   140001723:	add    rdi,0x10
   140001727:	mov    QWORD PTR [rip+0xc4d2],rdi        # 0x14000dc00
   14000172e:	cmp    rdi,r11
   140001731:	jae    0x1400033fc
   140001737:	cmp    rdi,QWORD PTR [rip+0xc4ba]        # 0x14000dbf8
   14000173e:	jbe    0x140001750
   140001740:	mov    rcx,rdi
   140001743:	call   0x1400018c0
   140001748:	add    QWORD PTR [rip+0xc4a8],0x10        # 0x14000dbf8
   140001750:	mov    eax,DWORD PTR [rdi+0x8]
   140001753:	mov    DWORD PTR [rip+0x1466f],eax        # 0x140015dc8
   140001759:	mov    rax,QWORD PTR [rdi]
   14000175c:	mov    QWORD PTR [rip+0x1466d],rax        # 0x140015dd0
   140001763:	jmp    0x1400016c8
   140001768:	movsx  eax,WORD PTR [rdi+r10*1+0xaa70]
   140001771:	test   eax,eax
   140001773:	jne    0x1400017f3
   140001775:	lea    rdx,[rip+0xb8d4]        # 0x14000d050
   14000177c:	call   0x140002290
   140001781:	lea    r10,[rip+0xffffffffffffe878]        # 0x140000000
   140001788:	test   eax,eax
   14000178a:	jne    0x1400016c8
   140001790:	jmp    0x140001666
   140001795:	movsxd rcx,DWORD PTR [rbx-0x4]
   140001799:	lea    rax,[rip+0xc480]        # 0x14000dc20
   1400017a0:	mov    ebp,DWORD PTR [rbx-0x8]
   1400017a3:	mov    r9,QWORD PTR [rsp+0x58]
   1400017a8:	mov    esi,DWORD PTR [rbx-0xc]
   1400017ab:	mov    edx,r9d
   1400017ae:	shl    rcx,0x4
   1400017b2:	add    rcx,rax
   1400017b5:	sub    rbx,0xc
   1400017b9:	mov    QWORD PTR [rip+0xc440],rcx        # 0x14000dc00
   1400017c0:	mov    eax,DWORD PTR [rcx+0x8]
   1400017c3:	mov    DWORD PTR [rip+0x145ff],eax        # 0x140015dc8
   1400017c9:	mov    rax,QWORD PTR [rcx]
   1400017cc:	mov    QWORD PTR [rip+0x145fd],rax        # 0x140015dd0
   1400017d3:	jmp    0x1400015d6
   1400017d8:	movsx  eax,WORD PTR [rdi+r10*1+0xaa70]
   1400017e1:	test   eax,eax
   1400017e3:	jne    0x14000187f
   1400017e9:	call   0x140001950
   1400017ee:	jmp    0x1400016c8
   1400017f3:	cmp    eax,0x1
   1400017f6:	jne    0x14000340e
   1400017fc:	cmp    QWORD PTR [rip+0x157fc],0x0        # 0x140017000
   140001804:	je     0x1400016c8
   14000180a:	jmp    0x140001666
   14000180f:	movzx  eax,WORD PTR [rip+0x145b2]        # 0x140015dc8
   140001816:	cmp    WORD PTR [r10+rcx*2+0xaa72],ax
   14000181f:	je     0x140001695
   140001825:	jmp    0x1400036a2
   14000182a:	movsxd rdi,ebp
   14000182d:	cmp    rdi,0x28
   140001831:	jae    0x1400033dd
   140001837:	cmp    rdi,0x27
   14000183b:	jae    0x140001852
   14000183d:	test   ebp,ebp
   14000183f:	js     0x140001852
   140001841:	mov    rax,QWORD PTR [rip+0x14588]        # 0x140015dd0
   140001848:	inc    ebp
   14000184a:	mov    QWORD PTR [r10+rdi*8+0xe1a0],rax
   140001852:	cmp    DWORD PTR [rip+0x1456f],0xffffffff        # 0x140015dc8
   140001859:	je     0x140001666
   14000185f:	mov    rdi,QWORD PTR [rip+0xc39a]        # 0x14000dc00
   140001866:	add    rdi,0x10
   14000186a:	mov    QWORD PTR [rip+0xc38f],rdi        # 0x14000dc00
   140001871:	cmp    rdi,r11
   140001874:	jb     0x140001737
   14000187a:	jmp    0x1400033fc
   14000187f:	cmp    eax,0xd
   140001882:	jne    0x140003558
   140001888:	call   0x140002300
   14000188d:	int3   
   14000188e:	xchg   ax,ax
   140001890:	and    dl,BYTE PTR [rsi]
   140001892:	add    BYTE PTR [rax],al
   140001894:	enter  0x16,0x0
   140001898:	movabs al,ds:0xd800001768000033
   1400018a1:	(bad)  
   1400018a2:	add    BYTE PTR [rax],al
   1400018a4:	pop    rbx
   1400018a5:	add    BYTE PTR ss:[rax],al
   1400018a8:	enter  0x16,0x0
   1400018ac:	enter  0x16,0x0
   1400018b0:	sub    bl,BYTE PTR [rax]
   1400018b2:	add    BYTE PTR [rax],al
   1400018b4:	mov    edx,0xcc000033
   1400018b9:	int3   
   1400018ba:	int3   
   1400018bb:	int3   
   1400018bc:	int3   
   1400018bd:	int3   
   1400018be:	int3   
   1400018bf:	int3   
   1400018c0:	rex push rbx
   1400018c2:	sub    rsp,0x20
   1400018c6:	movsxd rax,DWORD PTR [rip+0x14723]        # 0x140015ff0
   1400018cd:	lea    r8,[rip+0x13adc]        # 0x1400153b0
   1400018d4:	mov    rbx,rcx
   1400018d7:	mov    r8,QWORD PTR [r8+rax*8]
   1400018db:	mov    QWORD PTR [rcx],r8
   1400018de:	test   r8,r8
   1400018e1:	jne    0x1400018f3
   1400018e3:	mov    DWORD PTR [rcx+0x8],0xffffffff
   1400018ea:	or     eax,0xffffffff
   1400018ed:	add    rsp,0x20
   1400018f1:	pop    rbx
   1400018f2:	ret    
   1400018f3:	inc    eax
   1400018f5:	mov    QWORD PTR [rsp+0x30],rdi
   1400018fa:	cmp    QWORD PTR [rip+0xb726],0x0        # 0x14000d028
   140001902:	lea    rdi,[rip+0xb717]        # 0x14000d020
   140001909:	mov    DWORD PTR [rip+0x146e1],eax        # 0x140015ff0
   14000190f:	je     0x14000192d
   140001911:	mov    rdx,QWORD PTR [rbx]
   140001914:	mov    rcx,QWORD PTR [rdi+0x8]
   140001918:	call   QWORD PTR [rip+0x898a]        # 0x14000a2a8
   14000191e:	test   eax,eax
   140001920:	je     0x14000193b
   140001922:	add    rdi,0x10
   140001926:	cmp    QWORD PTR [rdi+0x8],0x0
   14000192b:	jne    0x140001911
   14000192d:	mov    DWORD PTR [rbx+0x8],0xfffffffe
   140001934:	mov    eax,0xfffffffe
   140001939:	jmp    0x140001940
   14000193b:	mov    eax,DWORD PTR [rdi]
   14000193d:	mov    DWORD PTR [rbx+0x8],eax
   140001940:	mov    rdi,QWORD PTR [rsp+0x30]
   140001945:	jmp    0x1400018ed
   140001947:	int3   
   140001948:	int3   
   140001949:	int3   
   14000194a:	int3   
   14000194b:	int3   
   14000194c:	int3   
   14000194d:	int3   
   14000194e:	int3   
   14000194f:	int3   
   140001950:	rex push rbp
   140001952:	push   rsi
   140001953:	push   rdi
   140001954:	push   r14
   140001956:	push   r15
   140001958:	lea    rbp,[rsp-0x270]
   140001960:	sub    rsp,0x370
   140001967:	mov    rax,QWORD PTR [rip+0xb69a]        # 0x14000d008
   14000196e:	xor    rax,rsp
   140001971:	mov    QWORD PTR [rbp+0x260],rax
   140001978:	xor    r14d,r14d
   14000197b:	mov    QWORD PTR [rsp+0x68],r14
   140001980:	call   0x1400020d0
   140001985:	mov    QWORD PTR [rip+0x14434],rax        # 0x140015dc0
   14000198c:	lea    r15,[rip+0x8e81]        # 0x14000a814
   140001993:	test   rax,rax
   140001996:	je     0x140003740
   14000199c:	mov    esi,0x40
   1400019a1:	mov    DWORD PTR [rsp+0x48],r14d
   1400019a6:	lea    rdx,[rsp+0x68]
   1400019ab:	mov    DWORD PTR [rsp+0x70],esi
   1400019af:	mov    ecx,0xc00
   1400019b4:	mov    edi,r14d
   1400019b7:	call   QWORD PTR [rip+0x8a5b]        # 0x14000a418
   1400019bd:	test   eax,eax
   1400019bf:	jne    0x14000374c
   1400019c5:	lea    rdx,[rsp+0x58]
   1400019ca:	mov    DWORD PTR [rsp+0x50],0x1000
   1400019d2:	mov    ecx,0x1000
   1400019d7:	call   QWORD PTR [rip+0x8a3b]        # 0x14000a418
   1400019dd:	xor    edx,edx
   1400019df:	test   eax,eax
   1400019e1:	jne    0x140003760
   1400019e7:	lea    rax,[rsp+0x60]
   1400019ec:	mov    QWORD PTR [rsp+0x3a0],rbx
   1400019f4:	xor    r9d,r9d
   1400019f7:	mov    QWORD PTR [rsp+0x20],rax
   1400019fc:	xor    r8d,r8d
   1400019ff:	lea    ecx,[rsi-0x3f]
   140001a02:	call   QWORD PTR [rip+0x8618]        # 0x14000a020
   140001a08:	mov    ebx,eax
   140001a0a:	test   eax,eax
   140001a0c:	jne    0x140003872
   140001a12:	mov    r8,QWORD PTR [rsp+0x58]
   140001a17:	lea    r9,[rsp+0x50]
   140001a1c:	mov    rcx,QWORD PTR [rsp+0x60]
   140001a21:	lea    rdx,[rsp+0x40]
   140001a26:	mov    DWORD PTR [rsp+0x40],0xffffffff
   140001a2e:	call   QWORD PTR [rip+0x8604]        # 0x14000a038
   140001a34:	mov    ebx,eax
   140001a36:	test   eax,eax
   140001a38:	je     0x140001a45
   140001a3a:	cmp    eax,0x103
   140001a3f:	jne    0x140003872
   140001a45:	mov    ecx,DWORD PTR [rsp+0x40]
   140001a49:	lea    eax,[rcx+rdi*1]
   140001a4c:	cmp    eax,esi
   140001a4e:	jae    0x140003772
   140001a54:	mov    eax,edi
   140001a56:	mov    r8d,r14d
   140001a59:	lea    rdx,[rax+rax*2]
   140001a5d:	shl    rdx,0x4
   140001a61:	add    rdx,QWORD PTR [rsp+0x68]
   140001a66:	test   ecx,ecx
   140001a68:	jne    0x1400037a0
   140001a6e:	test   ebx,ebx
   140001a70:	je     0x14000383c
   140001a76:	mov    rcx,QWORD PTR [rsp+0x60]
   140001a7b:	call   QWORD PTR [rip+0x85bf]        # 0x14000a040
   140001a81:	mov    DWORD PTR [rsp+0x48],edi
   140001a85:	lea    r8,[rsp+0x70]
   140001a8a:	lea    rdx,[rsp+0x68]
   140001a8f:	lea    rcx,[rsp+0x48]
   140001a94:	call   0x1400021a0
   140001a99:	test   eax,eax
   140001a9b:	jne    0x14000388e
   140001aa1:	mov    rbx,QWORD PTR [rsp+0x68]
   140001aa6:	lea    rax,[rsp+0x70]
   140001aab:	mov    QWORD PTR [rsp+0x30],r14
   140001ab0:	lea    r8,[rsp+0x60]
   140001ab5:	mov    QWORD PTR [rsp+0x28],rax
   140001aba:	or     r9d,0xffffffff
   140001abe:	lea    rax,[rsp+0x40]
   140001ac3:	mov    QWORD PTR [rsp+0x3a8],r12
   140001acb:	mov    edx,0x1
   140001ad0:	mov    QWORD PTR [rsp+0x20],rax
   140001ad5:	xor    ecx,ecx
   140001ad7:	call   QWORD PTR [rip+0x89bb]        # 0x14000a498
   140001add:	mov    edi,DWORD PTR [rsp+0x48]
   140001ae1:	test   eax,eax
   140001ae3:	jne    0x140001af0
   140001ae5:	cmp    DWORD PTR [rsp+0x40],r14d
   140001aea:	jne    0x1400038a2
   140001af0:	lea    rax,[rsp+0x60]
   140001af5:	mov    QWORD PTR [rsp+0x60],r14
   140001afa:	mov    r9d,0x1
   140001b00:	mov    QWORD PTR [rsp+0x20],rax
   140001b05:	xor    r8d,r8d
   140001b08:	mov    DWORD PTR [rsp+0x40],0x1
   140001b10:	lea    rdx,[rip+0x8a59]        # 0x14000a570
   140001b17:	mov    DWORD PTR [rsp+0x70],0xe
   140001b1f:	mov    rcx,0xffffffff80000001
   140001b26:	call   QWORD PTR [rip+0x86cc]        # 0x14000a1f8
   140001b2c:	test   eax,eax
   140001b2e:	je     0x14000394a
   140001b34:	mov    ebx,0xe5c
   140001b39:	mov    r15,QWORD PTR [rip+0x13800]        # 0x140015340
   140001b40:	lea    rsi,[rip+0x8a01]        # 0x14000a548
   140001b47:	mov    WORD PTR [rip+0x144b1],r14w        # 0x140016000
   140001b4f:	lea    rdi,[rip+0x8a0a]        # 0x14000a560
   140001b56:	mov    rcx,r14
   140001b59:	nop    DWORD PTR [rax+0x0]
   140001b60:	movzx  edx,WORD PTR [rsi+rcx*2]
   140001b64:	inc    rcx
   140001b67:	movzx  eax,WORD PTR [rdi+rcx*2-0x2]
   140001b6c:	sub    edx,eax
   140001b6e:	jne    0x140001b76
   140001b70:	cmp    rcx,0x7
   140001b74:	jne    0x140001b60
   140001b76:	test   edx,edx
   140001b78:	mov    QWORD PTR [rsp+0x3b0],r13
   140001b80:	mov    rdx,QWORD PTR [rip+0x14461]        # 0x140015fe8
   140001b87:	lea    rdi,[rip+0x14252]        # 0x140015de0
   140001b8e:	mov    r12d,0x2800
   140001b94:	je     0x1400039ba
   140001b9a:	test   rdx,rdx
   140001b9d:	jne    0x1400039c4
   140001ba3:	mov    r8,rsi
   140001ba6:	mov    edx,0x104
   140001bab:	mov    rcx,rdi
   140001bae:	call   QWORD PTR [rip+0x876c]        # 0x14000a320
   140001bb4:	mov    rcx,rsi
   140001bb7:	call   QWORD PTR [rip+0x85a3]        # 0x14000a160
   140001bbd:	mov    QWORD PTR [rip+0x14424],rax        # 0x140015fe8
   140001bc4:	mov    rdx,rax
   140001bc7:	test   rax,rax
   140001bca:	je     0x140003a63
   140001bd0:	mov    ecx,r12d
   140001bd3:	lea    r13,[rip+0x13776]        # 0x140015350
   140001bda:	bts    ecx,0x9
   140001bde:	mov    QWORD PTR [rsp+0x30],r13
   140001be3:	lea    r14,[rip+0x14416]        # 0x140016000
   140001bea:	mov    DWORD PTR [rsp+0x28],0x800
   140001bf2:	xor    r9d,r9d
   140001bf5:	mov    r8d,ebx
   140001bf8:	mov    QWORD PTR [rsp+0x20],r14
   140001bfd:	call   QWORD PTR [rip+0x8575]        # 0x14000a178
   140001c03:	test   eax,eax
   140001c05:	je     0x1400039f7
   140001c0b:	mov    edi,DWORD PTR [rsp+0x48]
   140001c0f:	or     rsi,0xffffffffffffffff
   140001c13:	mov    rax,rsi
   140001c16:	mov    rbx,r14
   140001c19:	nop    DWORD PTR [rax+0x0]
   140001c20:	inc    rax
   140001c23:	cmp    WORD PTR [r14+rax*2],0x0
   140001c29:	jne    0x140001c20
   140001c2b:	mov    rcx,r15
   140001c2e:	mov    DWORD PTR [rsp+0x50],eax
   140001c32:	call   QWORD PTR [rip+0x84c0]        # 0x14000a0f8
   140001c38:	btr    eax,0xf
   140001c3c:	cmp    eax,0x2
   140001c3f:	je     0x140003a7d
   140001c45:	mov    edx,DWORD PTR [rsp+0x50]
   140001c49:	xor    ecx,ecx
   140001c4b:	add    rdx,rdx
   140001c4e:	call   QWORD PTR [rip+0x84dc]        # 0x14000a130
   140001c54:	mov    rdi,rax
   140001c57:	test   rax,rax
   140001c5a:	je     0x140001cb4
   140001c5c:	mov    r9d,DWORD PTR [rsp+0x50]
   140001c61:	xor    eax,eax
   140001c63:	mov    QWORD PTR [rsp+0x38],rax
   140001c68:	mov    r8,r14
   140001c6b:	mov    QWORD PTR [rsp+0x30],rax
   140001c70:	xor    edx,edx
   140001c72:	lea    ecx,[r9+r9*1]
   140001c76:	mov    DWORD PTR [rsp+0x28],ecx
   140001c7a:	lea    ecx,[rax+0x1]
   140001c7d:	mov    QWORD PTR [rsp+0x20],rdi
   140001c82:	call   QWORD PTR [rip+0x85b8]        # 0x14000a240
   140001c88:	mov    DWORD PTR [rsp+0x50],eax
   140001c8c:	test   eax,eax
   140001c8e:	je     0x140001cab
   140001c90:	xor    ecx,ecx
   140001c92:	lea    r9,[rsp+0x50]
   140001c97:	mov    QWORD PTR [rsp+0x20],rcx
   140001c9c:	mov    r8d,eax
   140001c9f:	mov    rcx,r15
   140001ca2:	mov    rdx,rdi
   140001ca5:	call   QWORD PTR [rip+0x843d]        # 0x14000a0e8
   140001cab:	mov    rcx,rdi
   140001cae:	call   QWORD PTR [rip+0x8474]        # 0x14000a128
   140001cb4:	mov    edi,DWORD PTR [rsp+0x48]
   140001cb8:	movzx  eax,WORD PTR [rip+0x14341]        # 0x140016000
   140001cbf:	test   ax,ax
   140001cc2:	je     0x140003ab6
   140001cc8:	cmp    ax,0xa
   140001ccc:	je     0x140001ce0
   140001cce:	movzx  eax,WORD PTR [rbx+0x2]
   140001cd2:	add    rbx,0x2
   140001cd6:	test   ax,ax
   140001cd9:	jne    0x140001cc8
   140001cdb:	jmp    0x140003ab6
   140001ce0:	mov    rcx,r15
   140001ce3:	mov    DWORD PTR [rsp+0x48],0x2
   140001ceb:	call   QWORD PTR [rip+0x8407]        # 0x14000a0f8
   140001cf1:	btr    eax,0xf
   140001cf5:	cmp    eax,0x2
   140001cf8:	je     0x140003ac5
   140001cfe:	mov    edx,DWORD PTR [rsp+0x48]
   140001d02:	xor    ecx,ecx
   140001d04:	add    rdx,rdx
   140001d07:	call   QWORD PTR [rip+0x8423]        # 0x14000a130
   140001d0d:	mov    rbx,rax
   140001d10:	test   rax,rax
   140001d13:	je     0x140001d71
   140001d15:	mov    r9d,DWORD PTR [rsp+0x48]
   140001d1a:	lea    r8,[rip+0x8837]        # 0x14000a558
   140001d21:	xor    eax,eax
   140001d23:	xor    edx,edx
   140001d25:	mov    QWORD PTR [rsp+0x38],rax
   140001d2a:	mov    QWORD PTR [rsp+0x30],rax
   140001d2f:	lea    ecx,[r9+r9*1]
   140001d33:	mov    DWORD PTR [rsp+0x28],ecx
   140001d37:	lea    ecx,[rax+0x1]
   140001d3a:	mov    QWORD PTR [rsp+0x20],rbx
   140001d3f:	call   QWORD PTR [rip+0x84fb]        # 0x14000a240
   140001d45:	mov    DWORD PTR [rsp+0x48],eax
   140001d49:	test   eax,eax
   140001d4b:	je     0x140001d68
   140001d4d:	xor    ecx,ecx
   140001d4f:	lea    r9,[rsp+0x48]
   140001d54:	mov    QWORD PTR [rsp+0x20],rcx
   140001d59:	mov    r8d,eax
   140001d5c:	mov    rcx,r15
   140001d5f:	mov    rdx,rbx
   140001d62:	call   QWORD PTR [rip+0x8380]        # 0x14000a0e8
   140001d68:	mov    rcx,rbx
   140001d6b:	call   QWORD PTR [rip+0x83b7]        # 0x14000a128
   140001d71:	xor    ebx,ebx
   140001d73:	test   edi,edi
   140001d75:	jne    0x140003caf
   140001d7b:	mov    r15,QWORD PTR [rip+0x135be]        # 0x140015340
   140001d82:	lea    rdi,[rip+0x87bf]        # 0x14000a548
   140001d89:	mov    WORD PTR [rip+0x14270],bx        # 0x140016000
   140001d90:	lea    r8,[rip+0x87c9]        # 0x14000a560
   140001d97:	mov    rcx,rbx
   140001d9a:	nop    WORD PTR [rax+rax*1+0x0]
   140001da0:	movzx  edx,WORD PTR [rdi+rcx*2]
   140001da4:	inc    rcx
   140001da7:	movzx  eax,WORD PTR [r8+rcx*2-0x2]
   140001dad:	sub    edx,eax
   140001daf:	jne    0x140001db7
   140001db1:	cmp    rcx,0x7
   140001db5:	jne    0x140001da0
   140001db7:	test   edx,edx
   140001db9:	mov    rdx,QWORD PTR [rip+0x14228]        # 0x140015fe8
   140001dc0:	je     0x140003b02
   140001dc6:	test   rdx,rdx
   140001dc9:	je     0x140003b18
   140001dcf:	mov    r8,rbx
   140001dd2:	lea    rbx,[rip+0x14007]        # 0x140015de0
   140001dd9:	nop    DWORD PTR [rax+0x0]
   140001de0:	movzx  r9d,WORD PTR [rbx+r8*2]
   140001de5:	inc    r8
   140001de8:	movzx  eax,WORD PTR [rdi+r8*2-0x2]
   140001dee:	sub    r9d,eax
   140001df1:	jne    0x140001df9
   140001df3:	cmp    r8,0x7
   140001df7:	jne    0x140001de0
   140001df9:	test   r9d,r9d
   140001dfc:	jne    0x140003b0d
   140001e02:	mov    QWORD PTR [rsp+0x30],r13
   140001e07:	bts    r12d,0x9
   140001e0c:	mov    ecx,r12d
   140001e0f:	mov    DWORD PTR [rsp+0x28],0x800
   140001e17:	xor    r9d,r9d
   140001e1a:	mov    QWORD PTR [rsp+0x20],r14
   140001e1f:	mov    r8d,0xe63
   140001e25:	call   QWORD PTR [rip+0x834d]        # 0x14000a178
   140001e2b:	xor    r12d,r12d
   140001e2e:	test   eax,eax
   140001e30:	je     0x140003b51
   140001e36:	mov    rbx,r14
   140001e39:	nop    DWORD PTR [rax+0x0]
   140001e40:	inc    rsi
   140001e43:	cmp    WORD PTR [r14+rsi*2],0x0
   140001e49:	jne    0x140001e40
   140001e4b:	mov    rcx,r15
   140001e4e:	mov    DWORD PTR [rsp+0x40],esi
   140001e52:	call   QWORD PTR [rip+0x82a0]        # 0x14000a0f8
   140001e58:	btr    eax,0xf
   140001e5c:	cmp    eax,0x2
   140001e5f:	je     0x140003bc9
   140001e65:	mov    edx,DWORD PTR [rsp+0x40]
   140001e69:	xor    ecx,ecx
   140001e6b:	add    rdx,rdx
   140001e6e:	call   QWORD PTR [rip+0x82bc]        # 0x14000a130
   140001e74:	mov    rdi,rax
   140001e77:	test   rax,rax
   140001e7a:	je     0x140001ed0
   140001e7c:	mov    r9d,DWORD PTR [rsp+0x40]
   140001e81:	xor    edx,edx
   140001e83:	mov    QWORD PTR [rsp+0x38],r12
   140001e88:	mov    r8,r14
   140001e8b:	mov    QWORD PTR [rsp+0x30],r12
   140001e90:	lea    ecx,[r9+r9*1]
   140001e94:	mov    DWORD PTR [rsp+0x28],ecx
   140001e98:	lea    ecx,[rdx+0x1]
   140001e9b:	mov    QWORD PTR [rsp+0x20],rax
   140001ea0:	call   QWORD PTR [rip+0x839a]        # 0x14000a240
   140001ea6:	mov    DWORD PTR [rsp+0x40],eax
   140001eaa:	test   eax,eax
   140001eac:	je     0x140001ec7
   140001eae:	lea    r9,[rsp+0x40]
   140001eb3:	mov    QWORD PTR [rsp+0x20],r12
   140001eb8:	mov    r8d,eax
   140001ebb:	mov    rdx,rdi
   140001ebe:	mov    rcx,r15
   140001ec1:	call   QWORD PTR [rip+0x8221]        # 0x14000a0e8
   140001ec7:	mov    rcx,rdi
   140001eca:	call   QWORD PTR [rip+0x8258]        # 0x14000a128
   140001ed0:	lea    rdi,[rip+0x8671]        # 0x14000a548
   140001ed7:	movzx  eax,WORD PTR [rip+0x14122]        # 0x140016000
   140001ede:	test   ax,ax
   140001ee1:	je     0x140003c00
   140001ee7:	cmp    ax,0xa
   140001eeb:	je     0x140001eff
   140001eed:	movzx  eax,WORD PTR [rbx+0x2]
   140001ef1:	add    rbx,0x2
   140001ef5:	test   ax,ax
   140001ef8:	jne    0x140001ee7
   140001efa:	jmp    0x140003c00
   140001eff:	mov    rcx,r15
   140001f02:	mov    DWORD PTR [rsp+0x40],0x2
   140001f0a:	call   QWORD PTR [rip+0x81e8]        # 0x14000a0f8
   140001f10:	btr    eax,0xf
   140001f14:	cmp    eax,0x2
   140001f17:	je     0x140003c0f
   140001f1d:	mov    edx,DWORD PTR [rsp+0x40]
   140001f21:	xor    ecx,ecx
   140001f23:	add    rdx,rdx
   140001f26:	call   QWORD PTR [rip+0x8204]        # 0x14000a130
   140001f2c:	mov    rbx,rax
   140001f2f:	test   rax,rax
   140001f32:	je     0x140001f8c
   140001f34:	mov    r9d,DWORD PTR [rsp+0x40]
   140001f39:	lea    r8,[rip+0x8618]        # 0x14000a558
   140001f40:	mov    QWORD PTR [rsp+0x38],r12
   140001f45:	xor    edx,edx
   140001f47:	mov    QWORD PTR [rsp+0x30],r12
   140001f4c:	lea    ecx,[r9+r9*1]
   140001f50:	mov    DWORD PTR [rsp+0x28],ecx
   140001f54:	lea    ecx,[rdx+0x1]
   140001f57:	mov    QWORD PTR [rsp+0x20],rax
   140001f5c:	call   QWORD PTR [rip+0x82de]        # 0x14000a240
   140001f62:	mov    DWORD PTR [rsp+0x40],eax
   140001f66:	test   eax,eax
   140001f68:	je     0x140001f83
   140001f6a:	lea    r9,[rsp+0x40]
   140001f6f:	mov    QWORD PTR [rsp+0x20],r12
   140001f74:	mov    r8d,eax
   140001f77:	mov    rdx,rbx
   140001f7a:	mov    rcx,r15
   140001f7d:	call   QWORD PTR [rip+0x8165]        # 0x14000a0e8
   140001f83:	mov    rcx,rbx
   140001f86:	call   QWORD PTR [rip+0x819c]        # 0x14000a128
   140001f8c:	mov    ecx,DWORD PTR [rip+0x1586e]        # 0x140017800
   140001f92:	lea    eax,[rcx-0x834]
   140001f98:	cmp    eax,0xed7
   140001f9d:	jbe    0x140003c4a
   140001fa3:	call   0x140001fc0
   140001fa8:	xor    ecx,ecx
   140001faa:	call   QWORD PTR [rip+0x82f0]        # 0x14000a2a0
   140001fb0:	int3   
   140001fb1:	int3   
   140001fb2:	int3   
   140001fb3:	int3   
   140001fb4:	int3   
   140001fb5:	int3   
   140001fb6:	int3   
   140001fb7:	int3   
   140001fb8:	int3   
   140001fb9:	int3   
   140001fba:	int3   
   140001fbb:	int3   
   140001fbc:	int3   
   140001fbd:	int3   
   140001fbe:	int3   
   140001fbf:	int3   
   140001fc0:	mov    QWORD PTR [rsp+0x8],rbx
   140001fc5:	push   rdi
   140001fc6:	sub    rsp,0x20
   140001fca:	mov    rdi,QWORD PTR [rip+0x133cf]        # 0x1400153a0
   140001fd1:	test   rdi,rdi
   140001fd4:	je     0x140002003
   140001fd6:	mov    r8d,DWORD PTR [rdi+0x10]
   140001fda:	xor    edx,edx
   140001fdc:	mov    rcx,QWORD PTR [rdi]
   140001fdf:	call   0x140002fbe
   140001fe4:	cmp    DWORD PTR [rdi+0x14],0x0
   140001fe8:	mov    rbx,QWORD PTR [rdi+0x8]
   140001fec:	jne    0x140004064
   140001ff2:	mov    rcx,rdi
   140001ff5:	call   QWORD PTR [rip+0x843d]        # 0x14000a438
   140001ffb:	mov    rdi,rbx
   140001ffe:	test   rbx,rbx
   140002001:	jne    0x140001fd6
   140002003:	xor    edx,edx
   140002005:	lea    r8,[rip+0x133a4]        # 0x1400153b0
   14000200c:	mov    QWORD PTR [rip+0x1338d],rdx        # 0x1400153a0
   140002013:	or     rbx,0xffffffffffffffff
   140002017:	mov    rdi,QWORD PTR [r8]
   14000201a:	test   rdi,rdi
   14000201d:	je     0x140002047
   14000201f:	mov    rax,rbx
   140002022:	inc    rax
   140002025:	cmp    WORD PTR [rdi+rax*2],0x0
   14000202a:	jne    0x140002022
   14000202c:	test   eax,eax
   14000202e:	je     0x140002039
   140002030:	mov    ecx,eax
   140002032:	add    rcx,rcx
   140002035:	xor    eax,eax
   140002037:	rep stos BYTE PTR es:[rdi],al
   140002039:	inc    edx
   14000203b:	add    r8,0x8
   14000203f:	cmp    edx,0x100
   140002045:	jb     0x140002017
   140002047:	mov    ecx,DWORD PTR [rip+0x13d63]        # 0x140015db0
   14000204d:	cmp    ecx,0x1
   140002050:	jbe    0x14000208d
   140002052:	mov    rdx,QWORD PTR [rip+0x13d5f]        # 0x140015db8
   140002059:	lea    r8d,[rcx-0x1]
   14000205d:	add    rdx,0x8
   140002061:	mov    rdi,QWORD PTR [rdx]
   140002064:	test   rdi,rdi
   140002067:	je     0x140002083
   140002069:	mov    rax,rbx
   14000206c:	nop    DWORD PTR [rax+0x0]
   140002070:	inc    rax
   140002073:	cmp    BYTE PTR [rdi+rax*1],0x0
   140002077:	jne    0x140002070
   140002079:	test   eax,eax
   14000207b:	je     0x140002083
   14000207d:	mov    ecx,eax
   14000207f:	xor    eax,eax
   140002081:	rep stos BYTE PTR es:[rdi],al
   140002083:	add    rdx,0x8
   140002087:	sub    r8,0x1
   14000208b:	jne    0x140002061
   14000208d:	call   QWORD PTR [rip+0x80fd]        # 0x14000a190
   140002093:	test   rax,rax
   140002096:	je     0x1400020ba
   140002098:	nop    DWORD PTR [rax+rax*1+0x0]
   1400020a0:	inc    rbx
   1400020a3:	cmp    WORD PTR [rax+rbx*2],0x0
   1400020a8:	jne    0x1400020a0
   1400020aa:	test   ebx,ebx
   1400020ac:	je     0x1400020ba
   1400020ae:	mov    rdi,rax
   1400020b1:	mov    ecx,ebx
   1400020b3:	add    rcx,rcx
   1400020b6:	xor    eax,eax
   1400020b8:	rep stos BYTE PTR es:[rdi],al
   1400020ba:	mov    rbx,QWORD PTR [rsp+0x30]
   1400020bf:	add    rsp,0x20
   1400020c3:	pop    rdi
   1400020c4:	ret    
   1400020c5:	int3   
   1400020c6:	int3   
   1400020c7:	int3   
   1400020c8:	int3   
   1400020c9:	int3   
   1400020ca:	int3   
   1400020cb:	int3   
   1400020cc:	int3   
   1400020cd:	int3   
   1400020ce:	int3   
   1400020cf:	int3   
   1400020d0:	sub    rsp,0x38
   1400020d4:	lea    rdx,[rsp+0x50]
   1400020d9:	mov    DWORD PTR [rsp+0x40],0x200
   1400020e1:	mov    ecx,0x200
   1400020e6:	mov    DWORD PTR [rsp+0x48],0x1
   1400020ee:	call   QWORD PTR [rip+0x8324]        # 0x14000a418
   1400020f4:	test   eax,eax
   1400020f6:	jne    0x140004074
   1400020fc:	lea    rax,[rsp+0x58]
   140002101:	mov    r9d,0x1
   140002107:	xor    r8d,r8d
   14000210a:	mov    QWORD PTR [rsp+0x20],rax
   14000210f:	lea    rdx,[rip+0x850a]        # 0x14000a620
   140002116:	mov    rcx,0xffffffff80000002
   14000211d:	call   QWORD PTR [rip+0x80d5]        # 0x14000a1f8
   140002123:	test   eax,eax
   140002125:	jne    0x140004088
   14000212b:	mov    rcx,QWORD PTR [rsp+0x58]
   140002130:	lea    rax,[rsp+0x40]
   140002135:	mov    QWORD PTR [rsp+0x28],rax
   14000213a:	lea    r9,[rsp+0x48]
   14000213f:	mov    rax,QWORD PTR [rsp+0x50]
   140002144:	lea    rdx,[rip+0x84bd]        # 0x14000a608
   14000214b:	xor    r8d,r8d
   14000214e:	mov    QWORD PTR [rsp+0x20],rax
   140002153:	mov    QWORD PTR [rsp+0x30],rbx
   140002158:	call   QWORD PTR [rip+0x80a2]        # 0x14000a200
   14000215e:	mov    ebx,eax
   140002160:	cmp    eax,0xea
   140002165:	je     0x14000409a
   14000216b:	mov    rcx,QWORD PTR [rsp+0x58]
   140002170:	call   QWORD PTR [rip+0x809a]        # 0x14000a210
   140002176:	test   ebx,ebx
   140002178:	jne    0x140004103
   14000217e:	mov    rax,QWORD PTR [rsp+0x50]
   140002183:	mov    rbx,QWORD PTR [rsp+0x30]
   140002188:	add    rsp,0x38
   14000218c:	ret    
   14000218d:	int3   
   14000218e:	int3   
   14000218f:	int3   
   140002190:	int3   
   140002191:	int3   
   140002192:	int3   
   140002193:	int3   
   140002194:	int3   
   140002195:	int3   
   140002196:	int3   
   140002197:	int3   
   140002198:	int3   
   140002199:	int3   
   14000219a:	int3   
   14000219b:	int3   
   14000219c:	int3   
   14000219d:	int3   
   14000219e:	int3   
   14000219f:	int3   
   1400021a0:	rex push rsi
   1400021a2:	push   rdi
   1400021a3:	push   r14
   1400021a5:	push   r15
   1400021a7:	sub    rsp,0x68
   1400021ab:	mov    esi,DWORD PTR [rcx]
   1400021ad:	mov    r14,rdx
   1400021b0:	mov    rdi,rcx
   1400021b3:	mov    DWORD PTR [rsp+0x30],0x1000
   1400021bb:	lea    rdx,[rsp+0x38]
   1400021c0:	mov    ecx,0x1000
   1400021c5:	mov    r15,r8
   1400021c8:	call   QWORD PTR [rip+0x824a]        # 0x14000a418
   1400021ce:	xor    edx,edx
   1400021d0:	test   eax,eax
   1400021d2:	jne    0x140004116
   1400021d8:	lea    rax,[rsp+0x40]
   1400021dd:	mov    QWORD PTR [rsp+0x98],rbx
   1400021e5:	xor    r9d,r9d
   1400021e8:	mov    QWORD PTR [rsp+0x20],rax
   1400021ed:	xor    r8d,r8d
   1400021f0:	lea    ecx,[rdx+0x3]
   1400021f3:	call   QWORD PTR [rip+0x7e27]        # 0x14000a020
   1400021f9:	mov    ebx,eax
   1400021fb:	test   eax,eax
   1400021fd:	jne    0x140004128
   140002203:	mov    QWORD PTR [rsp+0x60],rbp
   140002208:	mov    QWORD PTR [rsp+0x58],r12
   14000220d:	mov    QWORD PTR [rsp+0x50],r13
   140002212:	mov    r8,QWORD PTR [rsp+0x38]
   140002217:	lea    r9,[rsp+0x30]
   14000221c:	mov    rcx,QWORD PTR [rsp+0x40]
   140002221:	lea    rdx,[rsp+0x90]
   140002229:	mov    DWORD PTR [rsp+0x90],0xffffffff
   140002234:	call   QWORD PTR [rip+0x7dfe]        # 0x14000a038
   14000223a:	mov    ebx,eax
   14000223c:	test   eax,eax
   14000223e:	je     0x140002247
   140002240:	cmp    eax,0x103
   140002245:	jne    0x140002264
   140002247:	mov    eax,DWORD PTR [rsp+0x90]
   14000224e:	cmp    eax,0xffffffff
   140002251:	jne    0x14000413a
   140002257:	mov    rcx,QWORD PTR [rsp+0x40]
   14000225c:	call   QWORD PTR [rip+0x7dde]        # 0x14000a040
   140002262:	xor    eax,eax
   140002264:	mov    r12,QWORD PTR [rsp+0x58]
   140002269:	mov    rbp,QWORD PTR [rsp+0x60]
   14000226e:	mov    r13,QWORD PTR [rsp+0x50]
   140002273:	mov    rbx,QWORD PTR [rsp+0x98]
   14000227b:	add    rsp,0x68
   14000227f:	pop    r15
   140002281:	pop    r14
   140002283:	pop    rdi
   140002284:	pop    rsi
   140002285:	ret    
   140002286:	int3   
   140002287:	int3   
   140002288:	int3   
   140002289:	int3   
   14000228a:	int3   
   14000228b:	int3   
   14000228c:	int3   
   14000228d:	int3   
   14000228e:	int3   
   14000228f:	int3   
   140002290:	mov    QWORD PTR [rsp+0x8],rbx
   140002295:	mov    QWORD PTR [rsp+0x10],rbp
   14000229a:	mov    QWORD PTR [rsp+0x18],rsi
   14000229f:	push   rdi
   1400022a0:	push   r12
   1400022a2:	push   r13
   1400022a4:	push   r14
   1400022a6:	push   r15
   1400022a8:	sub    rsp,0x20
   1400022ac:	xor    r13d,r13d
   1400022af:	mov    rdi,rdx
   1400022b2:	cmp    QWORD PTR [rip+0x14d47],r13        # 0x140017000
   1400022b9:	movzx  ebx,r13w
   1400022bd:	jne    0x1400042bc
   1400022c3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400022c8:	mov    eax,0x1
   1400022cd:	mov    rbp,QWORD PTR [rsp+0x58]
   1400022d2:	mov    rsi,QWORD PTR [rsp+0x60]
   1400022d7:	add    rsp,0x20
   1400022db:	pop    r15
   1400022dd:	pop    r14
   1400022df:	pop    r13
   1400022e1:	pop    r12
   1400022e3:	pop    rdi
   1400022e4:	ret    
   1400022e5:	int3   
   1400022e6:	int3   
   1400022e7:	int3   
   1400022e8:	int3   
   1400022e9:	int3   
   1400022ea:	int3   
   1400022eb:	int3   
   1400022ec:	int3   
   1400022ed:	int3   
   1400022ee:	int3   
   1400022ef:	int3   
   1400022f0:	int3   
   1400022f1:	int3   
   1400022f2:	int3   
   1400022f3:	int3   
   1400022f4:	int3   
   1400022f5:	int3   
   1400022f6:	int3   
   1400022f7:	int3   
   1400022f8:	int3   
   1400022f9:	int3   
   1400022fa:	int3   
   1400022fb:	int3   
   1400022fc:	int3   
   1400022fd:	int3   
   1400022fe:	int3   
   1400022ff:	int3   
   140002300:	mov    QWORD PTR [rsp+0x18],rbx
   140002305:	push   rbp
   140002306:	push   rsi
   140002307:	push   rdi
   140002308:	sub    rsp,0xe0
   14000230f:	xor    ebp,ebp
   140002311:	lea    rcx,[rsp+0x70]
   140002316:	xor    edx,edx
   140002318:	mov    DWORD PTR [rsp+0x100],ebp
   14000231f:	lea    r8d,[rbp+0x68]
   140002323:	call   0x140002fbe
   140002328:	mov    DWORD PTR [rsp+0x70],0x68
   140002330:	call   QWORD PTR [rip+0x7e5a]        # 0x14000a190
   140002336:	mov    rcx,rax
   140002339:	lea    edx,[rbp+0x20]
   14000233c:	mov    rdi,rax
   14000233f:	call   QWORD PTR [rip+0x7f53]        # 0x14000a298
   140002345:	mov    rsi,rax
   140002348:	or     rbx,0xffffffffffffffff
   14000234c:	nop    DWORD PTR [rax+0x0]
   140002350:	inc    rbx
   140002353:	cmp    WORD PTR [rdi+rbx*2],bp
   140002357:	jne    0x140002350
   140002359:	add    ebx,0x10a
   14000235f:	lea    rdx,[rsp+0x108]
   140002367:	lea    ecx,[rbx+rbx*1]
   14000236a:	call   QWORD PTR [rip+0x80a8]        # 0x14000a418
   140002370:	test   eax,eax
   140002372:	jne    0x140004500
   140002378:	mov    rcx,QWORD PTR [rsp+0x108]
   140002380:	mov    edx,0x104
   140002385:	call   QWORD PTR [rip+0x7ee5]        # 0x14000a270
   14000238b:	mov    ecx,eax
   14000238d:	test   eax,eax
   14000238f:	je     0x140004514
   140002395:	mov    rax,QWORD PTR [rsp+0x108]
   14000239d:	lea    r8,[rip+0x8304]        # 0x14000a6a8
   1400023a4:	mov    edx,ebx
   1400023a6:	sub    edx,ecx
   1400023a8:	lea    rcx,[rax+rcx*2]
   1400023ac:	call   QWORD PTR [rip+0x7f6e]        # 0x14000a320
   1400023b2:	test   rsi,rsi
   1400023b5:	je     0x1400023cb
   1400023b7:	mov    rcx,QWORD PTR [rsp+0x108]
   1400023bf:	mov    r8,rsi
   1400023c2:	movsxd rdx,ebx
   1400023c5:	call   QWORD PTR [rip+0x7eed]        # 0x14000a2b8
   1400023cb:	mov    rdx,QWORD PTR [rsp+0x108]
   1400023d3:	lea    rax,[rsp+0x50]
   1400023d8:	mov    QWORD PTR [rsp+0x48],rax
   1400023dd:	xor    r9d,r9d
   1400023e0:	lea    rax,[rsp+0x70]
   1400023e5:	xor    r8d,r8d
   1400023e8:	mov    QWORD PTR [rsp+0x40],rax
   1400023ed:	xor    ecx,ecx
   1400023ef:	mov    QWORD PTR [rsp+0x38],rbp
   1400023f4:	mov    QWORD PTR [rsp+0x30],rbp
   1400023f9:	mov    DWORD PTR [rsp+0x28],0x20
   140002401:	mov    DWORD PTR [rsp+0x20],0x1
   140002409:	call   QWORD PTR [rip+0x7dc1]        # 0x14000a1d0
   14000240f:	test   eax,eax
   140002411:	je     0x14000452e
   140002417:	mov    rcx,QWORD PTR [rsp+0x58]
   14000241c:	call   QWORD PTR [rip+0x7ce6]        # 0x14000a108
   140002422:	mov    rcx,QWORD PTR [rsp+0x50]
   140002427:	or     edx,0xffffffff
   14000242a:	call   QWORD PTR [rip+0x7e20]        # 0x14000a250
   140002430:	mov    rcx,QWORD PTR [rsp+0x50]
   140002435:	lea    rdx,[rsp+0x100]
   14000243d:	call   QWORD PTR [rip+0x7d65]        # 0x14000a1a8
   140002443:	mov    rcx,QWORD PTR [rsp+0x50]
   140002448:	call   QWORD PTR [rip+0x7cba]        # 0x14000a108
   14000244e:	mov    ebx,DWORD PTR [rsp+0x100]
   140002455:	call   0x140001fc0
   14000245a:	mov    ecx,ebx
   14000245c:	call   QWORD PTR [rip+0x7e3e]        # 0x14000a2a0
   140002462:	int3   
   140002463:	int3   
   140002464:	int3   
   140002465:	int3   
   140002466:	int3   
   140002467:	int3   
   140002468:	int3   
   140002469:	int3   
   14000246a:	int3   
   14000246b:	int3   
   14000246c:	int3   
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	int3   
   140002471:	int3   
   140002472:	int3   
   140002473:	int3   
   140002474:	int3   
   140002475:	int3   
   140002476:	int3   
   140002477:	int3   
   140002478:	int3   
   140002479:	int3   
   14000247a:	int3   
   14000247b:	int3   
   14000247c:	int3   
   14000247d:	int3   
   14000247e:	int3   
   14000247f:	int3   
   140002480:	sub    rsp,0x28
   140002484:	mov    eax,0x5a4d
   140002489:	cmp    WORD PTR [rip+0xffffffffffffdb70],ax        # 0x140000000
   140002490:	je     0x140002496
   140002492:	xor    eax,eax
   140002494:	jmp    0x1400024e5
   140002496:	movsxd rcx,DWORD PTR [rip+0xffffffffffffdb9f]        # 0x14000003c
   14000249d:	lea    rax,[rip+0xffffffffffffdb5c]        # 0x140000000
   1400024a4:	add    rcx,rax
   1400024a7:	cmp    DWORD PTR [rcx],0x4550
   1400024ad:	jne    0x140002492
   1400024af:	movzx  eax,WORD PTR [rcx+0x18]
   1400024b3:	cmp    eax,0x10b
   1400024b8:	je     0x1400024d4
   1400024ba:	cmp    eax,0x20b
   1400024bf:	jne    0x140002492
   1400024c1:	xor    eax,eax
   1400024c3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400024ca:	jbe    0x1400024e5
   1400024cc:	cmp    DWORD PTR [rcx+0xf8],eax
   1400024d2:	jmp    0x1400024e2
   1400024d4:	xor    eax,eax
   1400024d6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400024da:	jbe    0x1400024e5
   1400024dc:	cmp    DWORD PTR [rcx+0xe8],eax
   1400024e2:	setne  al
   1400024e5:	mov    ecx,0x1
   1400024ea:	mov    DWORD PTR [rip+0xb0d0],eax        # 0x14000d5c0
   1400024f0:	call   0x140002b68
   1400024f5:	mov    ecx,eax
   1400024f7:	call   QWORD PTR [rip+0x7eb3]        # 0x14000a3b0
   1400024fd:	mov    rcx,QWORD PTR [rip+0x7e6c]        # 0x14000a370
   140002504:	or     rax,0xffffffffffffffff
   140002508:	mov    QWORD PTR [rip+0xb651],rax        # 0x14000db60
   14000250f:	mov    QWORD PTR [rip+0xb652],rax        # 0x14000db68
   140002516:	mov    eax,DWORD PTR [rip+0xb630]        # 0x14000db4c
   14000251c:	mov    DWORD PTR [rcx],eax
   14000251e:	mov    rcx,QWORD PTR [rip+0x7e43]        # 0x14000a368
   140002525:	mov    eax,DWORD PTR [rip+0xb615]        # 0x14000db40
   14000252b:	mov    DWORD PTR [rcx],eax
   14000252d:	call   0x140002bc0
   140002532:	cmp    DWORD PTR [rip+0xaac7],0x0        # 0x14000d000
   140002539:	jne    0x140002548
   14000253b:	lea    rcx,[rip+0x67e]        # 0x140002bc0
   140002542:	call   QWORD PTR [rip+0x7e40]        # 0x14000a388
   140002548:	xor    eax,eax
   14000254a:	add    rsp,0x28
   14000254e:	ret    
   14000254f:	int3   
   140002550:	int3   
   140002551:	int3   
   140002552:	int3   
   140002553:	int3   
   140002554:	int3   
   140002555:	int3   
   140002556:	int3   
   140002557:	int3   
   140002558:	int3   
   140002559:	int3   
   14000255a:	int3   
   14000255b:	int3   
   14000255c:	int3   
   14000255d:	int3   
   14000255e:	int3   
   14000255f:	int3   
   140002560:	sub    rsp,0x38
   140002564:	mov    eax,DWORD PTR [rip+0xb5de]        # 0x14000db48
   14000256a:	lea    r8,[rip+0xb047]        # 0x14000d5b8
   140002571:	mov    r9d,DWORD PTR [rip+0xb5cc]        # 0x14000db44
   140002578:	lea    rdx,[rip+0xb031]        # 0x14000d5b0
   14000257f:	mov    DWORD PTR [rip+0xb03f],eax        # 0x14000d5c4
   140002585:	lea    rcx,[rip+0xb01c]        # 0x14000d5a8
   14000258c:	lea    rax,[rip+0xb031]        # 0x14000d5c4
   140002593:	mov    QWORD PTR [rsp+0x20],rax
   140002598:	call   QWORD PTR [rip+0x7e52]        # 0x14000a3f0
   14000259e:	mov    DWORD PTR [rip+0xb008],eax        # 0x14000d5ac
   1400025a4:	add    rsp,0x38
   1400025a8:	ret    
   1400025a9:	int3   
   1400025aa:	int3   
   1400025ab:	int3   
   1400025ac:	int3   
   1400025ad:	int3   
   1400025ae:	int3   
   1400025af:	int3   
   1400025b0:	mov    rax,rsp
   1400025b3:	mov    QWORD PTR [rax+0x8],rbx
   1400025b7:	mov    QWORD PTR [rax+0x10],rsi
   1400025bb:	mov    QWORD PTR [rax+0x18],rdi
   1400025bf:	mov    QWORD PTR [rax+0x20],r12
   1400025c3:	push   r14
   1400025c5:	sub    rsp,0x30
   1400025c9:	mov    rax,QWORD PTR gs:0x30
   1400025d2:	mov    rbx,QWORD PTR [rax+0x8]
   1400025d6:	xor    r14d,r14d
   1400025d9:	xor    eax,eax
   1400025db:	lock cmpxchg QWORD PTR [rip+0xb58c],rbx        # 0x14000db70
   1400025e4:	je     0x140002602
   1400025e6:	cmp    rax,rbx
   1400025e9:	jne    0x1400025f5
   1400025eb:	mov    ebx,0x1
   1400025f0:	mov    r14d,ebx
   1400025f3:	jmp    0x140002607
   1400025f5:	mov    ecx,0x3e8
   1400025fa:	call   QWORD PTR [rip+0x7c58]        # 0x14000a258
   140002600:	jmp    0x1400025d9
   140002602:	mov    ebx,0x1
   140002607:	mov    eax,DWORD PTR [rip+0xb56b]        # 0x14000db78
   14000260d:	cmp    eax,ebx
   14000260f:	jne    0x14000261d
   140002611:	mov    ecx,0x1f
   140002616:	call   0x140002bb4
   14000261b:	jmp    0x140002686
   14000261d:	mov    eax,DWORD PTR [rip+0xb555]        # 0x14000db78
   140002623:	test   eax,eax
   140002625:	jne    0x140002680
   140002627:	mov    DWORD PTR [rip+0xb54b],ebx        # 0x14000db78
   14000262d:	lea    r12,[rip+0x7ebc]        # 0x14000a4f0
   140002634:	lea    rdi,[rip+0x7e9d]        # 0x14000a4d8
   14000263b:	mov    QWORD PTR [rsp+0x28],rdi
   140002640:	mov    DWORD PTR [rsp+0x20],eax
   140002644:	cmp    rdi,r12
   140002647:	jae    0x140002672
   140002649:	test   eax,eax
   14000264b:	jne    0x140002676
   14000264d:	mov    rsi,QWORD PTR [rdi]
   140002650:	test   rsi,rsi
   140002653:	je     0x140002667
   140002655:	mov    rcx,rsi
   140002658:	mov    rax,QWORD PTR [rip+0x7e51]        # 0x14000a4b0
   14000265f:	call   rax
   140002661:	call   rsi
   140002663:	mov    DWORD PTR [rsp+0x20],eax
   140002667:	add    rdi,0x8
   14000266b:	mov    QWORD PTR [rsp+0x28],rdi
   140002670:	jmp    0x140002644
   140002672:	test   eax,eax
   140002674:	je     0x140002686
   140002676:	mov    eax,0xff
   14000267b:	jmp    0x140002767
   140002680:	mov    DWORD PTR [rip+0xaf1e],ebx        # 0x14000d5a4
   140002686:	mov    eax,DWORD PTR [rip+0xb4ec]        # 0x14000db78
   14000268c:	cmp    eax,ebx
   14000268e:	jne    0x1400026ad
   140002690:	lea    rdx,[rip+0x7e39]        # 0x14000a4d0
   140002697:	lea    rcx,[rip+0x7e22]        # 0x14000a4c0
   14000269e:	call   0x140002d8a
   1400026a3:	mov    DWORD PTR [rip+0xb4cb],0x2        # 0x14000db78
   1400026ad:	test   r14d,r14d
   1400026b0:	jne    0x1400026bb
   1400026b2:	xor    eax,eax
   1400026b4:	xchg   QWORD PTR [rip+0xb4b5],rax        # 0x14000db70
   1400026bb:	cmp    QWORD PTR [rip+0xb4bd],0x0        # 0x14000db80
   1400026c3:	je     0x1400026f3
   1400026c5:	lea    rcx,[rip+0xb4b4]        # 0x14000db80
   1400026cc:	call   0x140002c20
   1400026d1:	test   eax,eax
   1400026d3:	je     0x1400026f3
   1400026d5:	mov    rbx,QWORD PTR [rip+0xb4a4]        # 0x14000db80
   1400026dc:	mov    rcx,rbx
   1400026df:	mov    rax,QWORD PTR [rip+0x7dca]        # 0x14000a4b0
   1400026e6:	call   rax
   1400026e8:	xor    r8d,r8d
   1400026eb:	lea    edx,[r8+0x2]
   1400026ef:	xor    ecx,ecx
   1400026f1:	call   rbx
   1400026f3:	mov    r8,QWORD PTR [rip+0xaebe]        # 0x14000d5b8
   1400026fa:	mov    rdx,QWORD PTR [rip+0xaeaf]        # 0x14000d5b0
   140002701:	mov    ecx,DWORD PTR [rip+0xaea1]        # 0x14000d5a8
   140002707:	call   0x140001010
   14000270c:	mov    DWORD PTR [rip+0xae8e],eax        # 0x14000d5a0
   140002712:	cmp    DWORD PTR [rip+0xaea7],0x0        # 0x14000d5c0
   140002719:	jne    0x140002723
   14000271b:	mov    ecx,eax
   14000271d:	call   QWORD PTR [rip+0x7b7d]        # 0x14000a2a0
   140002723:	cmp    DWORD PTR [rip+0xae7a],0x0        # 0x14000d5a4
   14000272a:	jne    0x140002738
   14000272c:	call   QWORD PTR [rip+0x7c5e]        # 0x14000a390
   140002732:	mov    eax,DWORD PTR [rip+0xae68]        # 0x14000d5a0
   140002738:	jmp    0x140002767
   14000273a:	mov    DWORD PTR [rip+0xae60],eax        # 0x14000d5a0
   140002740:	cmp    DWORD PTR [rip+0xae79],0x0        # 0x14000d5c0
   140002747:	jne    0x140002752
   140002749:	mov    ecx,eax
   14000274b:	call   QWORD PTR [rip+0x7c57]        # 0x14000a3a8
   140002751:	int3   
   140002752:	cmp    DWORD PTR [rip+0xae4b],0x0        # 0x14000d5a4
   140002759:	jne    0x140002767
   14000275b:	call   QWORD PTR [rip+0x7c2f]        # 0x14000a390
   140002761:	mov    eax,DWORD PTR [rip+0xae39]        # 0x14000d5a0
   140002767:	mov    rbx,QWORD PTR [rsp+0x40]
   14000276c:	mov    rsi,QWORD PTR [rsp+0x48]
   140002771:	mov    rdi,QWORD PTR [rsp+0x50]
   140002776:	mov    r12,QWORD PTR [rsp+0x58]
   14000277b:	add    rsp,0x30
   14000277f:	pop    r14
   140002781:	ret    
   140002782:	int3   
   140002783:	int3   
   140002784:	int3   
   140002785:	int3   
   140002786:	int3   
   140002787:	int3   
   140002788:	int3   
   140002789:	int3   
   14000278a:	int3   
   14000278b:	int3   
   14000278c:	int3   
   14000278d:	int3   
   14000278e:	int3   
   14000278f:	int3   
   140002790:	sub    rsp,0x28
   140002794:	call   0x140002cb4
   140002799:	add    rsp,0x28
   14000279d:	jmp    0x1400025b0
   1400027a2:	int3   
   1400027a3:	int3   
   1400027a4:	int3   
   1400027a5:	int3   
   1400027a6:	int3   
   1400027a7:	int3   
   1400027a8:	int3   
   1400027a9:	int3   
   1400027aa:	int3   
   1400027ab:	int3   
   1400027ac:	int3   
   1400027ad:	int3   
   1400027ae:	int3   
   1400027af:	int3   
   1400027b0:	int3   
   1400027b1:	int3   
   1400027b2:	int3   
   1400027b3:	int3   
   1400027b4:	int3   
   1400027b5:	int3   
   1400027b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400027c0:	cmp    rcx,QWORD PTR [rip+0xa841]        # 0x14000d008
   1400027c7:	jne    0x1400027d9
   1400027c9:	rol    rcx,0x10
   1400027cd:	test   cx,0xffff
   1400027d2:	jne    0x1400027d5
   1400027d4:	ret    
   1400027d5:	ror    rcx,0x10
   1400027d9:	jmp    0x140002820
   1400027de:	int3   
   1400027df:	int3   
   1400027e0:	int3   
   1400027e1:	int3   
   1400027e2:	int3   
   1400027e3:	int3   
   1400027e4:	rex push rbx
   1400027e6:	sub    rsp,0x20
   1400027ea:	mov    rbx,rcx
   1400027ed:	xor    ecx,ecx
   1400027ef:	call   QWORD PTR [rip+0x78d3]        # 0x14000a0c8
   1400027f5:	mov    rcx,rbx
   1400027f8:	call   QWORD PTR [rip+0x78c2]        # 0x14000a0c0
   1400027fe:	call   QWORD PTR [rip+0x79bc]        # 0x14000a1c0
   140002804:	mov    rcx,rax
   140002807:	mov    edx,0xc0000409
   14000280c:	add    rsp,0x20
   140002810:	pop    rbx
   140002811:	rex.W jmp QWORD PTR [rip+0x79b0]        # 0x14000a1c8
   140002818:	int3   
   140002819:	int3   
   14000281a:	int3   
   14000281b:	int3   
   14000281c:	int3   
   14000281d:	int3   
   14000281e:	int3   
   14000281f:	int3   
   140002820:	mov    QWORD PTR [rsp+0x8],rcx
   140002825:	sub    rsp,0x88
   14000282c:	lea    rcx,[rip+0xae3d]        # 0x14000d670
   140002833:	call   QWORD PTR [rip+0x79e7]        # 0x14000a220
   140002839:	mov    rax,QWORD PTR [rip+0xaf28]        # 0x14000d768
   140002840:	mov    QWORD PTR [rsp+0x48],rax
   140002845:	xor    r8d,r8d
   140002848:	lea    rdx,[rsp+0x50]
   14000284d:	mov    rcx,QWORD PTR [rsp+0x48]
   140002852:	call   QWORD PTR [rip+0x79d8]        # 0x14000a230
   140002858:	mov    QWORD PTR [rsp+0x40],rax
   14000285d:	cmp    QWORD PTR [rsp+0x40],0x0
   140002863:	je     0x1400028a7
   140002865:	mov    QWORD PTR [rsp+0x38],0x0
   14000286e:	lea    rax,[rsp+0x58]
   140002873:	mov    QWORD PTR [rsp+0x30],rax
   140002878:	lea    rax,[rsp+0x60]
   14000287d:	mov    QWORD PTR [rsp+0x28],rax
   140002882:	lea    rax,[rip+0xade7]        # 0x14000d670
   140002889:	mov    QWORD PTR [rsp+0x20],rax
   14000288e:	mov    r9,QWORD PTR [rsp+0x40]
   140002893:	mov    r8,QWORD PTR [rsp+0x48]
   140002898:	mov    rdx,QWORD PTR [rsp+0x50]
   14000289d:	xor    ecx,ecx
   14000289f:	call   QWORD PTR [rip+0x7983]        # 0x14000a228
   1400028a5:	jmp    0x1400028ca
   1400028a7:	mov    rax,QWORD PTR [rip+0xae5a]        # 0x14000d708
   1400028ae:	mov    rax,QWORD PTR [rax]
   1400028b1:	mov    QWORD PTR [rip+0xaeb0],rax        # 0x14000d768
   1400028b8:	mov    rax,QWORD PTR [rip+0xae49]        # 0x14000d708
   1400028bf:	add    rax,0x8
   1400028c3:	mov    QWORD PTR [rip+0xae3e],rax        # 0x14000d708
   1400028ca:	mov    rax,QWORD PTR [rip+0xae97]        # 0x14000d768
   1400028d1:	mov    QWORD PTR [rip+0xad08],rax        # 0x14000d5e0
   1400028d8:	mov    rax,QWORD PTR [rsp+0x90]
   1400028e0:	mov    QWORD PTR [rip+0xae09],rax        # 0x14000d6f0
   1400028e7:	mov    DWORD PTR [rip+0xacdf],0xc0000409        # 0x14000d5d0
   1400028f1:	mov    DWORD PTR [rip+0xacd9],0x1        # 0x14000d5d4
   1400028fb:	mov    DWORD PTR [rip+0xace3],0x3        # 0x14000d5e8
   140002905:	mov    eax,0x8
   14000290a:	imul   rax,rax,0x0
   14000290e:	lea    rcx,[rip+0xacdb]        # 0x14000d5f0
   140002915:	mov    QWORD PTR [rcx+rax*1],0x2
   14000291d:	mov    eax,0x8
   140002922:	imul   rax,rax,0x1
   140002926:	lea    rcx,[rip+0xacc3]        # 0x14000d5f0
   14000292d:	mov    rdx,QWORD PTR [rip+0xa6d4]        # 0x14000d008
   140002934:	mov    QWORD PTR [rcx+rax*1],rdx
   140002938:	mov    eax,0x8
   14000293d:	imul   rax,rax,0x2
   140002941:	lea    rcx,[rip+0xaca8]        # 0x14000d5f0
   140002948:	mov    rdx,QWORD PTR [rip+0xa6c1]        # 0x14000d010
   14000294f:	mov    QWORD PTR [rcx+rax*1],rdx
   140002953:	mov    eax,0x8
   140002958:	imul   rax,rax,0x0
   14000295c:	mov    rcx,QWORD PTR [rip+0xa6a5]        # 0x14000d008
   140002963:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140002968:	mov    eax,0x8
   14000296d:	imul   rax,rax,0x1
   140002971:	mov    rcx,QWORD PTR [rip+0xa698]        # 0x14000d010
   140002978:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000297d:	lea    rcx,[rip+0x7d34]        # 0x14000a6b8
   140002984:	call   0x1400027e4
   140002989:	add    rsp,0x88
   140002990:	ret    
   140002991:	int3   
   140002992:	int3   
   140002993:	int3   
   140002994:	int3   
   140002995:	int3   
   140002996:	int3   
   140002997:	int3   
   140002998:	sub    rsp,0x78
   14000299c:	lea    rcx,[rip+0xaccd]        # 0x14000d670
   1400029a3:	call   QWORD PTR [rip+0x7877]        # 0x14000a220
   1400029a9:	mov    rax,QWORD PTR [rip+0xadb8]        # 0x14000d768
   1400029b0:	mov    QWORD PTR [rsp+0x48],rax
   1400029b5:	xor    r8d,r8d
   1400029b8:	lea    rdx,[rsp+0x50]
   1400029bd:	mov    rcx,QWORD PTR [rsp+0x48]
   1400029c2:	call   QWORD PTR [rip+0x7868]        # 0x14000a230
   1400029c8:	mov    QWORD PTR [rsp+0x40],rax
   1400029cd:	cmp    QWORD PTR [rsp+0x40],0x0
   1400029d3:	je     0x140002a17
   1400029d5:	mov    QWORD PTR [rsp+0x38],0x0
   1400029de:	lea    rax,[rsp+0x58]
   1400029e3:	mov    QWORD PTR [rsp+0x30],rax
   1400029e8:	lea    rax,[rsp+0x60]
   1400029ed:	mov    QWORD PTR [rsp+0x28],rax
   1400029f2:	lea    rax,[rip+0xac77]        # 0x14000d670
   1400029f9:	mov    QWORD PTR [rsp+0x20],rax
   1400029fe:	mov    r9,QWORD PTR [rsp+0x40]
   140002a03:	mov    r8,QWORD PTR [rsp+0x48]
   140002a08:	mov    rdx,QWORD PTR [rsp+0x50]
   140002a0d:	xor    ecx,ecx
   140002a0f:	call   QWORD PTR [rip+0x7813]        # 0x14000a228
   140002a15:	jmp    0x140002a3a
   140002a17:	mov    rax,QWORD PTR [rip+0xacea]        # 0x14000d708
   140002a1e:	mov    rax,QWORD PTR [rax]
   140002a21:	mov    QWORD PTR [rip+0xad40],rax        # 0x14000d768
   140002a28:	mov    rax,QWORD PTR [rip+0xacd9]        # 0x14000d708
   140002a2f:	add    rax,0x8
   140002a33:	mov    QWORD PTR [rip+0xacce],rax        # 0x14000d708
   140002a3a:	mov    rax,QWORD PTR [rip+0xad27]        # 0x14000d768
   140002a41:	mov    QWORD PTR [rip+0xab98],rax        # 0x14000d5e0
   140002a48:	mov    DWORD PTR [rip+0xab7e],0xc0000409        # 0x14000d5d0
   140002a52:	mov    DWORD PTR [rip+0xab78],0x1        # 0x14000d5d4
   140002a5c:	mov    DWORD PTR [rip+0xab82],0x1        # 0x14000d5e8
   140002a66:	mov    eax,0x8
   140002a6b:	imul   rax,rax,0x0
   140002a6f:	lea    rcx,[rip+0xab7a]        # 0x14000d5f0
   140002a76:	mov    QWORD PTR [rcx+rax*1],0x8
   140002a7e:	lea    rcx,[rip+0x7c33]        # 0x14000a6b8
   140002a85:	call   0x1400027e4
   140002a8a:	add    rsp,0x78
   140002a8e:	ret    
   140002a8f:	int3   
   140002a90:	int3   
   140002a91:	int3   
   140002a92:	int3   
   140002a93:	int3   
   140002a94:	int3   
   140002a95:	int3   
   140002a96:	int3   
   140002a97:	int3   
   140002a98:	int3   
   140002a99:	int3   
   140002a9a:	int3   
   140002a9b:	int3   
   140002a9c:	int3   
   140002a9d:	int3   
   140002a9e:	int3   
   140002a9f:	int3   
   140002aa0:	sub    rsp,0x28
   140002aa4:	mov    rax,QWORD PTR [rcx]
   140002aa7:	cmp    DWORD PTR [rax],0xe06d7363
   140002aad:	jne    0x140002ad2
   140002aaf:	cmp    DWORD PTR [rax+0x18],0x4
   140002ab3:	jne    0x140002ad2
   140002ab5:	mov    ecx,DWORD PTR [rax+0x20]
   140002ab8:	lea    eax,[rcx-0x19930520]
   140002abe:	cmp    eax,0x2
   140002ac1:	jbe    0x140002acb
   140002ac3:	cmp    ecx,0x1994000
   140002ac9:	jne    0x140002ad2
   140002acb:	call   QWORD PTR [rip+0x788f]        # 0x14000a360
   140002ad1:	int3   
   140002ad2:	xor    eax,eax
   140002ad4:	add    rsp,0x28
   140002ad8:	ret    
   140002ad9:	int3   
   140002ada:	int3   
   140002adb:	int3   
   140002adc:	int3   
   140002add:	int3   
   140002ade:	int3   
   140002adf:	int3   
   140002ae0:	sub    rsp,0x28
   140002ae4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140002aa0
   140002aeb:	call   QWORD PTR [rip+0x75d7]        # 0x14000a0c8
   140002af1:	xor    eax,eax
   140002af3:	add    rsp,0x28
   140002af7:	ret    
   140002af8:	int3   
   140002af9:	int3   
   140002afa:	int3   
   140002afb:	int3   
   140002afc:	int3   
   140002afd:	int3   
   140002afe:	jmp    QWORD PTR [rip+0x7814]        # 0x14000a318
   140002b04:	int3   
   140002b05:	int3   
   140002b06:	int3   
   140002b07:	int3   
   140002b08:	int3   
   140002b09:	int3   
   140002b0a:	int3   
   140002b0b:	int3   
   140002b0c:	sub    rsp,0x18
   140002b10:	xor    edx,edx
   140002b12:	lea    rax,[rcx-0x1]
   140002b16:	cmp    rax,0xfffffffffffffffd
   140002b1a:	ja     0x140002b58
   140002b1c:	mov    eax,0x5a4d
   140002b21:	cmp    WORD PTR [rcx],ax
   140002b24:	jne    0x140002b50
   140002b26:	cmp    DWORD PTR [rcx+0x3c],edx
   140002b29:	jl     0x140002b50
   140002b2b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140002b32:	jae    0x140002b50
   140002b34:	movsxd rax,DWORD PTR [rcx+0x3c]
   140002b38:	add    rax,rcx
   140002b3b:	mov    QWORD PTR [rsp],rax
   140002b3f:	cmp    DWORD PTR [rax],0x4550
   140002b45:	cmovne rax,rdx
   140002b49:	mov    rdx,rax
   140002b4c:	mov    QWORD PTR [rsp],rax
   140002b50:	jmp    0x140002b58
   140002b52:	xor    edx,edx
   140002b54:	mov    QWORD PTR [rsp],rdx
   140002b58:	mov    rax,rdx
   140002b5b:	add    rsp,0x18
   140002b5f:	ret    
   140002b60:	int3   
   140002b61:	int3   
   140002b62:	int3   
   140002b63:	int3   
   140002b64:	int3   
   140002b65:	int3   
   140002b66:	int3   
   140002b67:	int3   
   140002b68:	rex push rbx
   140002b6a:	sub    rsp,0x20
   140002b6e:	mov    ebx,ecx
   140002b70:	xor    ecx,ecx
   140002b72:	call   QWORD PTR [rip+0x75d0]        # 0x14000a148
   140002b78:	test   rax,rax
   140002b7b:	je     0x140002ba5
   140002b7d:	mov    rcx,rax
   140002b80:	call   0x140002b0c
   140002b85:	test   rax,rax
   140002b88:	je     0x140002ba5
   140002b8a:	mov    ecx,0x2
   140002b8f:	cmp    WORD PTR [rax+0x5c],cx
   140002b93:	jne    0x140002b99
   140002b95:	mov    eax,ecx
   140002b97:	jmp    0x140002ba7
   140002b99:	cmp    WORD PTR [rax+0x5c],0x3
   140002b9e:	mov    eax,0x1
   140002ba3:	je     0x140002ba7
   140002ba5:	mov    eax,ebx
   140002ba7:	add    rsp,0x20
   140002bab:	pop    rbx
   140002bac:	ret    
   140002bad:	int3   
   140002bae:	int3   
   140002baf:	int3   
   140002bb0:	int3   
   140002bb1:	int3   
   140002bb2:	int3   
   140002bb3:	int3   
   140002bb4:	jmp    QWORD PTR [rip+0x77de]        # 0x14000a398
   140002bba:	int3   
   140002bbb:	int3   
   140002bbc:	int3   
   140002bbd:	int3   
   140002bbe:	int3   
   140002bbf:	int3   
   140002bc0:	xor    eax,eax
   140002bc2:	ret    
   140002bc3:	int3   
   140002bc4:	int3   
   140002bc5:	int3   
   140002bc6:	int3   
   140002bc7:	int3   
   140002bc8:	int3   
   140002bc9:	int3   
   140002bca:	int3   
   140002bcb:	int3   
   140002bcc:	int3   
   140002bcd:	int3   
   140002bce:	int3   
   140002bcf:	int3   
   140002bd0:	movsxd r8,DWORD PTR [rcx+0x3c]
   140002bd4:	xor    r9d,r9d
   140002bd7:	add    r8,rcx
   140002bda:	mov    r10,rdx
   140002bdd:	movzx  eax,WORD PTR [r8+0x14]
   140002be2:	movzx  r11d,WORD PTR [r8+0x6]
   140002be7:	add    rax,0x18
   140002beb:	add    rax,r8
   140002bee:	test   r11d,r11d
   140002bf1:	je     0x140002c11
   140002bf3:	mov    edx,DWORD PTR [rax+0xc]
   140002bf6:	cmp    r10,rdx
   140002bf9:	jb     0x140002c05
   140002bfb:	mov    ecx,DWORD PTR [rax+0x8]
   140002bfe:	add    ecx,edx
   140002c00:	cmp    r10,rcx
   140002c03:	jb     0x140002c13
   140002c05:	inc    r9d
   140002c08:	add    rax,0x28
   140002c0c:	cmp    r9d,r11d
   140002c0f:	jb     0x140002bf3
   140002c11:	xor    eax,eax
   140002c13:	ret    
   140002c14:	int3   
   140002c15:	int3   
   140002c16:	int3   
   140002c17:	int3   
   140002c18:	int3   
   140002c19:	int3   
   140002c1a:	int3   
   140002c1b:	int3   
   140002c1c:	int3   
   140002c1d:	int3   
   140002c1e:	int3   
   140002c1f:	int3   
   140002c20:	mov    QWORD PTR [rsp+0x8],rbx
   140002c25:	push   rdi
   140002c26:	sub    rsp,0x20
   140002c2a:	mov    rbx,rcx
   140002c2d:	lea    rdi,[rip+0xffffffffffffd3cc]        # 0x140000000
   140002c34:	mov    rcx,rdi
   140002c37:	call   0x140002c80
   140002c3c:	test   eax,eax
   140002c3e:	je     0x140002c62
   140002c40:	sub    rbx,rdi
   140002c43:	mov    rdx,rbx
   140002c46:	mov    rcx,rdi
   140002c49:	call   0x140002bd0
   140002c4e:	test   rax,rax
   140002c51:	je     0x140002c62
   140002c53:	mov    eax,DWORD PTR [rax+0x24]
   140002c56:	shr    eax,0x1f
   140002c59:	not    eax
   140002c5b:	and    eax,0x1
   140002c5e:	jmp    0x140002c62
   140002c60:	xor    eax,eax
   140002c62:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c67:	add    rsp,0x20
   140002c6b:	pop    rdi
   140002c6c:	ret    
   140002c6d:	int3   
   140002c6e:	int3   
   140002c6f:	int3   
   140002c70:	int3   
   140002c71:	int3   
   140002c72:	int3   
   140002c73:	int3   
   140002c74:	int3   
   140002c75:	int3   
   140002c76:	int3   
   140002c77:	int3   
   140002c78:	int3   
   140002c79:	int3   
   140002c7a:	int3   
   140002c7b:	int3   
   140002c7c:	int3   
   140002c7d:	int3   
   140002c7e:	int3   
   140002c7f:	int3   
   140002c80:	mov    rax,rcx
   140002c83:	mov    ecx,0x5a4d
   140002c88:	cmp    WORD PTR [rax],cx
   140002c8b:	je     0x140002c90
   140002c8d:	xor    eax,eax
   140002c8f:	ret    
   140002c90:	movsxd rcx,DWORD PTR [rax+0x3c]
   140002c94:	add    rcx,rax
   140002c97:	xor    eax,eax
   140002c99:	cmp    DWORD PTR [rcx],0x4550
   140002c9f:	jne    0x140002cad
   140002ca1:	mov    edx,0x20b
   140002ca6:	cmp    WORD PTR [rcx+0x18],dx
   140002caa:	sete   al
   140002cad:	ret    
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	int3   
   140002cb1:	int3   
   140002cb2:	int3   
   140002cb3:	int3   
   140002cb4:	mov    QWORD PTR [rsp+0x20],rbx
   140002cb9:	push   rbp
   140002cba:	mov    rbp,rsp
   140002cbd:	sub    rsp,0x20
   140002cc1:	and    QWORD PTR [rbp+0x18],0x0
   140002cc6:	movabs rbx,0x2b992ddfa232
   140002cd0:	mov    rax,QWORD PTR [rip+0xa331]        # 0x14000d008
   140002cd7:	cmp    rax,rbx
   140002cda:	jne    0x140002d6f
   140002ce0:	lea    rcx,[rbp+0x18]
   140002ce4:	call   QWORD PTR [rip+0x757e]        # 0x14000a268
   140002cea:	mov    rax,QWORD PTR [rbp+0x18]
   140002cee:	mov    QWORD PTR [rbp+0x10],rax
   140002cf2:	call   QWORD PTR [rip+0x74c0]        # 0x14000a1b8
   140002cf8:	mov    eax,eax
   140002cfa:	xor    QWORD PTR [rbp+0x10],rax
   140002cfe:	call   QWORD PTR [rip+0x74ac]        # 0x14000a1b0
   140002d04:	mov    eax,eax
   140002d06:	xor    QWORD PTR [rbp+0x10],rax
   140002d0a:	call   QWORD PTR [rip+0x7568]        # 0x14000a278
   140002d10:	mov    eax,eax
   140002d12:	shl    rax,0x18
   140002d16:	xor    QWORD PTR [rbp+0x10],rax
   140002d1a:	call   QWORD PTR [rip+0x7558]        # 0x14000a278
   140002d20:	mov    eax,eax
   140002d22:	lea    rcx,[rbp+0x10]
   140002d26:	xor    rax,QWORD PTR [rbp+0x10]
   140002d2a:	xor    rax,rcx
   140002d2d:	lea    rcx,[rbp+0x20]
   140002d31:	mov    QWORD PTR [rbp+0x10],rax
   140002d35:	call   QWORD PTR [rip+0x74a5]        # 0x14000a1e0
   140002d3b:	mov    eax,DWORD PTR [rbp+0x20]
   140002d3e:	movabs rcx,0xffffffffffff
   140002d48:	shl    rax,0x20
   140002d4c:	xor    rax,QWORD PTR [rbp+0x20]
   140002d50:	xor    rax,QWORD PTR [rbp+0x10]
   140002d54:	and    rax,rcx
   140002d57:	movabs rcx,0x2b992ddfa233
   140002d61:	cmp    rax,rbx
   140002d64:	cmove  rax,rcx
   140002d68:	mov    QWORD PTR [rip+0xa299],rax        # 0x14000d008
   140002d6f:	mov    rbx,QWORD PTR [rsp+0x48]
   140002d74:	not    rax
   140002d77:	mov    QWORD PTR [rip+0xa292],rax        # 0x14000d010
   140002d7e:	add    rsp,0x20
   140002d82:	pop    rbp
   140002d83:	ret    
   140002d84:	int3   
   140002d85:	int3   
   140002d86:	int3   
   140002d87:	int3   
   140002d88:	int3   
   140002d89:	int3   
   140002d8a:	jmp    QWORD PTR [rip+0x75f0]        # 0x14000a380
   140002d90:	int3   
   140002d91:	int3   
   140002d92:	int3   
   140002d93:	int3   
   140002d94:	int3   
   140002d95:	int3   
   140002d96:	jmp    QWORD PTR [rip+0x75dc]        # 0x14000a378
   140002d9c:	int3   
   140002d9d:	int3   
   140002d9e:	int3   
   140002d9f:	int3   
   140002da0:	int3   
   140002da1:	int3   
   140002da2:	int3   
   140002da3:	int3   
   140002da4:	int3   
   140002da5:	int3   
   140002da6:	int3   
   140002da7:	int3   
   140002da8:	int3   
   140002da9:	int3   
   140002daa:	int3   
   140002dab:	int3   
   140002dac:	int3   
   140002dad:	int3   
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	ret    0x0
   140002db3:	int3   
   140002db4:	int3   
   140002db5:	int3   
   140002db6:	int3   
   140002db7:	int3   
   140002db8:	int3   
   140002db9:	int3   
   140002dba:	int3   
   140002dbb:	int3   
   140002dbc:	int3   
   140002dbd:	int3   
   140002dbe:	int3   
   140002dbf:	int3   
   140002dc0:	int3   
   140002dc1:	int3   
   140002dc2:	int3   
   140002dc3:	int3   
   140002dc4:	int3   
   140002dc5:	int3   
   140002dc6:	int3   
   140002dc7:	int3   
   140002dc8:	rex push rbx
   140002dca:	sub    rsp,0x20
   140002dce:	mov    ebx,ecx
   140002dd0:	call   0x140002ee4
   140002dd5:	lea    rdx,[rbx+rbx*2]
   140002dd9:	shl    rdx,0x4
   140002ddd:	add    rax,rdx
   140002de0:	add    rsp,0x20
   140002de4:	pop    rbx
   140002de5:	ret    
   140002de6:	int3   
   140002de7:	int3   
   140002de8:	int3   
   140002de9:	int3   
   140002dea:	int3   
   140002deb:	int3   
   140002dec:	int3   
   140002ded:	int3   
   140002dee:	int3   
   140002def:	int3   
   140002df0:	lea    rax,[rip+0x17209]        # 0x14001a000
   140002df7:	jmp    0x140002e10
   140002dfc:	int3   
   140002dfd:	int3   
   140002dfe:	int3   
   140002dff:	int3   
   140002e00:	int3   
   140002e01:	int3   
   140002e02:	int3   
   140002e03:	int3   
   140002e04:	int3   
   140002e05:	int3   
   140002e06:	int3   
   140002e07:	int3   
   140002e08:	int3   
   140002e09:	int3   
   140002e0a:	int3   
   140002e0b:	int3   
   140002e0c:	int3   
   140002e0d:	int3   
   140002e0e:	int3   
   140002e0f:	int3   
   140002e10:	mov    QWORD PTR [rsp+0x8],rcx
   140002e15:	mov    QWORD PTR [rsp+0x10],rdx
   140002e1a:	mov    QWORD PTR [rsp+0x18],r8
   140002e1f:	mov    QWORD PTR [rsp+0x20],r9
   140002e24:	sub    rsp,0x68
   140002e28:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140002e2e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140002e34:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140002e3a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140002e40:	mov    rdx,rax
   140002e43:	lea    rcx,[rip+0x8c06]        # 0x14000ba50
   140002e4a:	call   0x140009b40
   140002e4f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140002e55:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140002e5b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140002e61:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140002e67:	mov    rcx,QWORD PTR [rsp+0x70]
   140002e6c:	mov    rdx,QWORD PTR [rsp+0x78]
   140002e71:	mov    r8,QWORD PTR [rsp+0x80]
   140002e79:	mov    r9,QWORD PTR [rsp+0x88]
   140002e81:	add    rsp,0x68
   140002e85:	jmp    0x140002e87
   140002e87:	jmp    rax
   140002e89:	int3   
   140002e8a:	int3   
   140002e8b:	int3   
   140002e8c:	int3   
   140002e8d:	int3   
   140002e8e:	int3   
   140002e8f:	int3   
   140002e90:	sub    rsp,0x28
   140002e94:	mov    ecx,DWORD PTR [rip+0xacbe]        # 0x14000db58
   140002e9a:	cmp    ecx,0x1
   140002e9d:	jne    0x140002ea3
   140002e9f:	mov    al,cl
   140002ea1:	jmp    0x140002ed9
   140002ea3:	cmp    ecx,0x2
   140002ea6:	jne    0x140002eac
   140002ea8:	xor    al,al
   140002eaa:	jmp    0x140002ed9
   140002eac:	lea    rdx,[rsp+0x30]
   140002eb1:	mov    BYTE PTR [rsp+0x30],0x0
   140002eb6:	lea    rcx,[rip+0x789b]        # 0x14000a758
   140002ebd:	call   0x140002f00
   140002ec2:	test   eax,eax
   140002ec4:	js     0x140002ea8
   140002ec6:	mov    al,BYTE PTR [rsp+0x30]
   140002eca:	mov    cl,al
   140002ecc:	neg    cl
   140002ece:	sbb    edx,edx
   140002ed0:	add    edx,0x2
   140002ed3:	mov    DWORD PTR [rip+0xac7f],edx        # 0x14000db58
   140002ed9:	add    rsp,0x28
   140002edd:	ret    
   140002ede:	int3   
   140002edf:	int3   
   140002ee0:	int3   
   140002ee1:	int3   
   140002ee2:	int3   
   140002ee3:	int3   
   140002ee4:	jmp    QWORD PTR [rip+0x750e]        # 0x14000a3f8
   140002eea:	int3   
   140002eeb:	int3   
   140002eec:	int3   
   140002eed:	int3   
   140002eee:	int3   
   140002eef:	int3   
   140002ef0:	jmp    QWORD PTR [rip+0x71b2]        # 0x14000a0a8
   140002ef6:	int3   
   140002ef7:	int3   
   140002ef8:	int3   
   140002ef9:	int3   
   140002efa:	int3   
   140002efb:	int3   
   140002efc:	int3   
   140002efd:	int3   
   140002efe:	int3   
   140002eff:	int3   
   140002f00:	jmp    QWORD PTR [rip+0x714a]        # 0x14000a050
   140002f06:	int3   
   140002f07:	int3   
   140002f08:	int3   
   140002f09:	int3   
   140002f0a:	int3   
   140002f0b:	int3   
   140002f0c:	sub    rsp,0x28
   140002f10:	mov    r8,QWORD PTR [r9+0x38]
   140002f14:	mov    rcx,rdx
   140002f17:	mov    rdx,r9
   140002f1a:	call   0x140002f30
   140002f1f:	mov    eax,0x1
   140002f24:	add    rsp,0x28
   140002f28:	ret    
   140002f29:	int3   
   140002f2a:	int3   
   140002f2b:	int3   
   140002f2c:	int3   
   140002f2d:	int3   
   140002f2e:	int3   
   140002f2f:	int3   
   140002f30:	rex push rbx
   140002f32:	sub    rsp,0x20
   140002f36:	mov    r11d,DWORD PTR [r8]
   140002f39:	mov    rbx,rdx
   140002f3c:	and    r11d,0xfffffff8
   140002f40:	mov    r9,rcx
   140002f43:	test   BYTE PTR [r8],0x4
   140002f47:	mov    r10,rcx
   140002f4a:	je     0x140002f5f
   140002f4c:	mov    eax,DWORD PTR [r8+0x8]
   140002f50:	movsxd r10,DWORD PTR [r8+0x4]
   140002f54:	neg    eax
   140002f56:	add    r10,rcx
   140002f59:	movsxd rcx,eax
   140002f5c:	and    r10,rcx
   140002f5f:	movsxd rax,r11d
   140002f62:	mov    rdx,QWORD PTR [rax+r10*1]
   140002f66:	mov    rax,QWORD PTR [rbx+0x10]
   140002f6a:	mov    ecx,DWORD PTR [rax+0x8]
   140002f6d:	add    rcx,QWORD PTR [rbx+0x8]
   140002f71:	test   BYTE PTR [rcx+0x3],0xf
   140002f75:	je     0x140002f83
   140002f77:	movzx  eax,BYTE PTR [rcx+0x3]
   140002f7b:	and    eax,0xfffffff0
   140002f7e:	cdqe   
   140002f80:	add    r9,rax
   140002f83:	xor    r9,rdx
   140002f86:	mov    rcx,r9
   140002f89:	add    rsp,0x20
   140002f8d:	pop    rbx
   140002f8e:	jmp    0x1400027c0
   140002f93:	int3   
   140002f94:	int3   
   140002f95:	int3   
   140002f96:	int3   
   140002f97:	int3   
   140002f98:	int3   
   140002f99:	int3   
   140002f9a:	int3   
   140002f9b:	int3   
   140002f9c:	int3   
   140002f9d:	int3   
   140002f9e:	int3   
   140002f9f:	int3   
   140002fa0:	int3   
   140002fa1:	int3   
   140002fa2:	int3   
   140002fa3:	int3   
   140002fa4:	int3   
   140002fa5:	int3   
   140002fa6:	jmp    QWORD PTR [rip+0x732c]        # 0x14000a2d8
   140002fac:	int3   
   140002fad:	int3   
   140002fae:	int3   
   140002faf:	int3   
   140002fb0:	int3   
   140002fb1:	int3   
   140002fb2:	jmp    QWORD PTR [rip+0x7328]        # 0x14000a2e0
   140002fb8:	int3   
   140002fb9:	int3   
   140002fba:	int3   
   140002fbb:	int3   
   140002fbc:	int3   
   140002fbd:	int3   
   140002fbe:	jmp    QWORD PTR [rip+0x733c]        # 0x14000a300
   140002fc4:	int3   
   140002fc5:	int3   
   140002fc6:	int3   
   140002fc7:	int3   
   140002fc8:	int3   
   140002fc9:	int3   
   140002fca:	jmp    QWORD PTR [rip+0x7438]        # 0x14000a408
   140002fd0:	int3   
   140002fd1:	int3   
   140002fd2:	int3   
   140002fd3:	int3   
   140002fd4:	int3   
   140002fd5:	int3   
   140002fd6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002fe0:	jmp    rax
   140002fe2:	int3   
   140002fe3:	int3   
   140002fe4:	int3   
   140002fe5:	int3   
   140002fe6:	int3   
   140002fe7:	int3   
   140002fe8:	int3   
   140002fe9:	int3   
   140002fea:	int3   
   140002feb:	int3   
   140002fec:	int3   
   140002fed:	int3   
   140002fee:	int3   
   140002fef:	int3   
   140002ff0:	int3   
   140002ff1:	int3   
   140002ff2:	int3   
   140002ff3:	int3   
   140002ff4:	int3   
   140002ff5:	int3   
   140002ff6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003000:	sub    rsp,0x10
   140003004:	mov    QWORD PTR [rsp],r10
   140003008:	mov    QWORD PTR [rsp+0x8],r11
   14000300d:	xor    r11,r11
   140003010:	lea    r10,[rsp+0x18]
   140003015:	sub    r10,rax
   140003018:	cmovb  r10,r11
   14000301c:	mov    r11,QWORD PTR gs:0x10
   140003025:	cmp    r10,r11
   140003028:	jae    0x14000303f
   14000302a:	and    r10w,0xf000
   140003030:	lea    r11,[r11-0x1000]
   140003037:	test   BYTE PTR [r11],r11b
   14000303a:	cmp    r10,r11
   14000303d:	jne    0x140003030
   14000303f:	mov    r10,QWORD PTR [rsp]
   140003043:	mov    r11,QWORD PTR [rsp+0x8]
   140003048:	add    rsp,0x10
   14000304c:	ret    
   14000304d:	int3   
   14000304e:	int3   
   14000304f:	int3   
   140003050:	int3   
   140003051:	int3   
   140003052:	int3   
   140003053:	int3   
   140003054:	int3   
   140003055:	int3   
   140003056:	rex push rbp
   140003058:	sub    rsp,0x20
   14000305c:	mov    rbp,rdx
   14000305f:	mov    rax,QWORD PTR [rcx]
   140003062:	mov    rdx,rcx
   140003065:	mov    ecx,DWORD PTR [rax]
   140003067:	call   0x140002afe
   14000306c:	nop
   14000306d:	add    rsp,0x20
   140003071:	pop    rbp
   140003072:	ret    
   140003073:	int3   
   140003074:	int3   
   140003075:	int3   
   140003076:	int3   
   140003077:	int3   
   140003078:	int3   
   140003079:	int3   
   14000307a:	int3   
   14000307b:	int3   
   14000307c:	int3   
   14000307d:	int3   
   14000307e:	int3   
   14000307f:	int3   
   140003080:	rex push rbp
   140003082:	sub    rsp,0x20
   140003086:	mov    rbp,rdx
   140003089:	mov    rax,QWORD PTR [rcx]
   14000308c:	xor    ecx,ecx
   14000308e:	cmp    DWORD PTR [rax],0xc0000005
   140003094:	sete   cl
   140003097:	mov    eax,ecx
   140003099:	add    rsp,0x20
   14000309d:	pop    rbp
   14000309e:	ret    
   14000309f:	int3   
   1400030a0:	call   QWORD PTR [rip+0x7032]        # 0x14000a0d8
   1400030a6:	mov    rbx,QWORD PTR [rip+0x12293]        # 0x140015340
   1400030ad:	lea    rcx,[rsp+0x5c]
   1400030b2:	mov    QWORD PTR [rsp+0x30],rcx
   1400030b7:	lea    r8,[rip+0x12f42]        # 0x140016000
   1400030be:	lea    rcx,[rip+0x7483]        # 0x14000a548
   1400030c5:	mov    r9d,0x800
   1400030cb:	mov    QWORD PTR [rsp+0x28],rcx
   1400030d0:	xor    edx,edx
   1400030d2:	lea    rcx,[rip+0x12277]        # 0x140015350
   1400030d9:	mov    DWORD PTR [rsp+0x20],eax
   1400030dd:	call   0x140009290
   1400030e2:	test   eax,eax
   1400030e4:	lea    rdx,[rip+0x12f15]        # 0x140016000
   1400030eb:	mov    r8d,0x1
   1400030f1:	cmovne rbx,QWORD PTR [rip+0x12207]        # 0x140015300
   1400030f9:	mov    rcx,rbx
   1400030fc:	call   0x140009468
   140003101:	nop
   140003102:	jmp    0x140001089
   140003107:	call   QWORD PTR [rip+0x6fcb]        # 0x14000a0d8
   14000310d:	mov    ecx,eax
   14000310f:	xor    edx,edx
   140003111:	call   0x1400073fc
   140003116:	mov    ecx,0x2
   14000311b:	call   0x140007858
   140003120:	int3   
   140003121:	call   QWORD PTR [rip+0x6fb1]        # 0x14000a0d8
   140003127:	mov    ecx,eax
   140003129:	xor    edx,edx
   14000312b:	call   0x1400073fc
   140003130:	mov    ecx,0x2
   140003135:	call   0x140007858
   14000313a:	int3   
   14000313b:	lea    rbx,[rsp+0x70]
   140003140:	jmp    0x14000113e
   140003145:	mov    ecx,0x8
   14000314a:	call   QWORD PTR [rip+0x6f80]        # 0x14000a0d0
   140003150:	xor    edx,edx
   140003152:	mov    QWORD PTR [rip+0x121df],r12        # 0x140015338
   140003159:	lea    ecx,[rdx+0x8]
   14000315c:	call   0x1400073fc
   140003161:	mov    ecx,0x2
   140003166:	call   0x140007858
   14000316b:	int3   
   14000316c:	or     rcx,0xffffffffffffffff
   140003170:	inc    rcx
   140003173:	cmp    WORD PTR [rdx+rcx*2],r12w
   140003178:	jne    0x140003170
   14000317a:	cmp    cx,0x1
   14000317e:	jle    0x1400031ff
   140003180:	movsx  r14,cx
   140003184:	lea    rcx,[rip+0xa2bd]        # 0x14000d448
   14000318b:	mov    r8,r14
   14000318e:	call   QWORD PTR [rip+0x71c4]        # 0x14000a358
   140003194:	test   eax,eax
   140003196:	jne    0x1400031bb
   140003198:	cmp    DWORD PTR [rip+0x14871],0x2        # 0x140017a10
   14000319f:	je     0x14000322b
   1400031a5:	mov    rax,QWORD PTR [rip+0x1218c]        # 0x140015338
   1400031ac:	mov    DWORD PTR [rip+0x1485a],0x1        # 0x140017a10
   1400031b6:	jmp    0x140001233
   1400031bb:	mov    rdx,QWORD PTR [rip+0x12176]        # 0x140015338
   1400031c2:	lea    rcx,[rip+0xa277]        # 0x14000d440
   1400031c9:	mov    r8,r14
   1400031cc:	mov    rdx,QWORD PTR [rdx]
   1400031cf:	call   QWORD PTR [rip+0x7183]        # 0x14000a358
   1400031d5:	test   eax,eax
   1400031d7:	jne    0x1400031f8
   1400031d9:	cmp    DWORD PTR [rip+0x14830],0x1        # 0x140017a10
   1400031e0:	je     0x140003242
   1400031e2:	mov    rax,QWORD PTR [rip+0x1214f]        # 0x140015338
   1400031e9:	mov    DWORD PTR [rip+0x1481d],0x2        # 0x140017a10
   1400031f3:	jmp    0x140001233
   1400031f8:	mov    rax,QWORD PTR [rip+0x12139]        # 0x140015338
   1400031ff:	mov    ecx,0x100
   140003204:	cmp    r15w,cx
   140003208:	jge    0x140003259
   14000320a:	mov    rcx,QWORD PTR [rax]
   14000320d:	movsx  rdx,r15w
   140003211:	inc    r15w
   140003215:	mov    QWORD PTR [r13+rdx*8+0x17000],rcx
   14000321d:	mov    WORD PTR [r13+rdx*2+0x17810],di
   140003226:	jmp    0x140001233
   14000322b:	xor    edx,edx
   14000322d:	mov    ecx,0xdb6
   140003232:	call   0x1400073fc
   140003237:	mov    ecx,0x2
   14000323c:	call   0x140007858
   140003241:	int3   
   140003242:	xor    edx,edx
   140003244:	mov    ecx,0xdb6
   140003249:	call   0x1400073fc
   14000324e:	mov    ecx,0x2
   140003253:	call   0x140007858
   140003258:	int3   
   140003259:	xor    edx,edx
   14000325b:	mov    ecx,0xdaf
   140003260:	call   0x1400073fc
   140003265:	mov    ecx,0x2
   14000326a:	call   0x140007858
   14000326f:	int3   
   140003270:	xor    edx,edx
   140003272:	mov    ecx,0xdaf
   140003277:	call   0x1400073fc
   14000327c:	mov    ecx,0x2
   140003281:	call   0x140007858
   140003286:	int3   
   140003287:	xor    edx,edx
   140003289:	mov    ecx,eax
   14000328b:	call   0x1400073fc
   140003290:	mov    ecx,0x2
   140003295:	call   0x140007858
   14000329a:	int3   
   14000329b:	cmp    QWORD PTR [rcx+0x8],r12
   14000329f:	lea    rax,[rcx+0x8]
   1400032a3:	je     0x1400032b2
   1400032a5:	mov    rcx,QWORD PTR [rax]
   1400032a8:	cmp    QWORD PTR [rcx+0x8],r12
   1400032ac:	lea    rax,[rcx+0x8]
   1400032b0:	jne    0x1400032a5
   1400032b2:	mov    rax,QWORD PTR [rsp+0x48]
   1400032b7:	mov    QWORD PTR [rcx+0x8],rax
   1400032bb:	jmp    0x1400012a7
   1400032c0:	xor    edx,edx
   1400032c2:	mov    ecx,eax
   1400032c4:	call   0x1400073fc
   1400032c9:	mov    ecx,0x2
   1400032ce:	call   0x140007858
   1400032d3:	int3   
   1400032d4:	mov    rax,QWORD PTR [rsp+0x50]
   1400032d9:	mov    QWORD PTR [rip+0x120c0],rax        # 0x1400153a0
   1400032e0:	jmp    0x140001313
   1400032e5:	mov    rcx,QWORD PTR [rax]
   1400032e8:	cmp    QWORD PTR [rcx+0x8],r12
   1400032ec:	lea    rax,[rcx+0x8]
   1400032f0:	jne    0x1400032e5
   1400032f2:	jmp    0x14000130a
   1400032f7:	int3   
   1400032f8:	sub    rcx,0x2
   1400032fc:	jmp    0x14000141e
   140003301:	add    rcx,0x2
   140003305:	inc    ax
   140003308:	cmp    WORD PTR [rcx],r12w
   14000330c:	je     0x140003301
   14000330e:	jmp    0x140001484
   140003313:	movzx  edx,ax
   140003316:	and    edx,0x80000001
   14000331c:	jge    0x140003325
   14000331e:	dec    edx
   140003320:	or     edx,0xfffffffe
   140003323:	inc    edx
   140003325:	test   edx,edx
   140003327:	jne    0x14000334a
   140003329:	test   ebx,ebx
   14000332b:	je     0x140003342
   14000332d:	cmp    WORD PTR [rcx+0x2],0x22
   140003332:	jne    0x14000333a
   140003334:	add    rcx,0x2
   140003338:	jmp    0x14000333d
   14000333a:	mov    r9d,r14d
   14000333d:	mov    ebx,r14d
   140003340:	jmp    0x14000334a
   140003342:	mov    r9d,r14d
   140003345:	mov    ebx,0x1
   14000334a:	shr    ax,1
   14000334d:	jmp    0x14000148e
   140003352:	add    ax,r15w
   140003356:	test   r8,r8
   140003359:	je     0x140003363
   14000335b:	mov    WORD PTR [r8],r12w
   14000335f:	add    r8,0x2
   140003363:	add    r11d,0x2
   140003367:	mov    DWORD PTR [r10],r11d
   14000336a:	test   ax,ax
   14000336d:	jne    0x140003352
   14000336f:	jmp    0x140001497
   140003374:	lea    rcx,[rip+0x7575]        # 0x14000a8f0
   14000337b:	call   0x140007b80
   140003380:	movsxd rax,ebp
   140003383:	lea    r10,[rip+0xffffffffffffcc76]        # 0x140000000
   14000338a:	cmp    rax,0x27
   14000338e:	jae    0x1400016c8
   140003394:	jmp    0x14000162f
   140003399:	inc    ebp
   14000339b:	jmp    0x1400016c8
   1400033a0:	movsx  eax,WORD PTR [rdi+r10*1+0xaa70]
   1400033a9:	cmp    DWORD PTR [rip+0x12a19],eax        # 0x140015dc8
   1400033af:	jne    0x140001666
   1400033b5:	jmp    0x1400016c8
   1400033ba:	movsx  rcx,WORD PTR [rdi+r10*1+0xaa70]
   1400033c3:	mov    rcx,QWORD PTR [r10+rcx*8+0xacc0]
   1400033cb:	call   0x140007f9c
   1400033d0:	test   eax,eax
   1400033d2:	je     0x1400034be
   1400033d8:	jmp    0x1400016c8
   1400033dd:	lea    rcx,[rip+0x750c]        # 0x14000a8f0
   1400033e4:	call   0x140007b80
   1400033e9:	lea    r10,[rip+0xffffffffffffcc10]        # 0x140000000
   1400033f0:	lea    r11,[rip+0xa969]        # 0x14000dd60
   1400033f7:	jmp    0x140001837
   1400033fc:	lea    rcx,[rip+0x74ed]        # 0x14000a8f0
   140003403:	call   0x140007b80
   140003408:	nop
   140003409:	jmp    0x140001737
   14000340e:	sub    eax,0x2
   140003411:	cmp    eax,0xd
   140003414:	ja     0x140001666
   14000341a:	cdqe   
   14000341c:	mov    ecx,DWORD PTR [r10+rax*4+0x36d0]
   140003424:	add    rcx,r10
   140003427:	jmp    rcx
   140003429:	lea    rdx,[rip+0x9cd0]        # 0x14000d100
   140003430:	jmp    0x14000177c
   140003435:	call   0x140007ff0
   14000343a:	nop
   14000343b:	jmp    0x140001788
   140003440:	mov    rcx,QWORD PTR [r10+r9*8+0xe1a0]
   140003448:	call   0x140007c2c
   14000344d:	test   eax,eax
   14000344f:	jne    0x1400016c8
   140003455:	mov    rcx,QWORD PTR [rsp+0x58]
   14000345a:	lea    r10,[rip+0xffffffffffffcb9f]        # 0x140000000
   140003461:	mov    rcx,QWORD PTR [r10+rcx*8+0xe1a0]
   140003469:	call   0x140007ee0
   14000346e:	test   eax,eax
   140003470:	je     0x140001666
   140003476:	jmp    0x1400016c8
   14000347b:	mov    rcx,QWORD PTR [r10+r9*8+0xe1a0]
   140003483:	call   0x140007c2c
   140003488:	nop
   140003489:	jmp    0x140001781
   14000348e:	mov    rcx,QWORD PTR [r10+r9*8+0xe1a0]
   140003496:	call   0x140007e38
   14000349b:	nop
   14000349c:	jmp    0x140001781
   1400034a1:	mov    rcx,QWORD PTR [r10+r9*8+0xe1a0]
   1400034a9:	xor    r8d,r8d
   1400034ac:	lea    edx,[r8+0x9]
   1400034b0:	call   QWORD PTR [rip+0x6f6a]        # 0x14000a420
   1400034b6:	test   eax,eax
   1400034b8:	je     0x1400016c8
   1400034be:	lea    r10,[rip+0xffffffffffffcb3b]        # 0x140000000
   1400034c5:	jmp    0x140001666
   1400034ca:	mov    rcx,QWORD PTR [r10+r9*8+0xe1a0]
   1400034d2:	call   0x140007eb4
   1400034d7:	nop
   1400034d8:	jmp    0x140001781
   1400034dd:	mov    rcx,QWORD PTR [r10+r9*8+0xe1a0]
   1400034e5:	call   0x140007d2c
   1400034ea:	nop
   1400034eb:	jmp    0x140001781
   1400034f0:	mov    rcx,QWORD PTR [r10+r9*8+0xe1a0]
   1400034f8:	call   0x140007ce0
   1400034fd:	nop
   1400034fe:	jmp    0x140001781
   140003503:	mov    rcx,QWORD PTR [r10+r9*8+0xe1a0]
   14000350b:	call   0x140007c2c
   140003510:	lea    r10,[rip+0xffffffffffffcae9]        # 0x140000000
   140003517:	test   eax,eax
   140003519:	jne    0x140001666
   14000351f:	mov    rcx,QWORD PTR [rsp+0x58]
   140003524:	mov    rcx,QWORD PTR [r10+rcx*8+0xe1a0]
   14000352c:	call   0x140007ee0
   140003531:	test   eax,eax
   140003533:	jne    0x140001666
   140003539:	jmp    0x1400016c8
   14000353e:	mov    rcx,QWORD PTR [r10+r9*8+0xe1a0]
   140003546:	call   0x140007ee0
   14000354b:	test   eax,eax
   14000354d:	je     0x1400016c8
   140003553:	jmp    0x140001666
   140003558:	dec    eax
   14000355a:	cmp    eax,0xd
   14000355d:	ja     0x1400016c8
   140003563:	cdqe   
   140003565:	mov    ecx,DWORD PTR [r10+rax*4+0x3708]
   14000356d:	add    rcx,r10
   140003570:	jmp    rcx
   140003572:	call   0x140006410
   140003577:	nop
   140003578:	jmp    0x1400016c8
   14000357d:	mov    rcx,QWORD PTR [r10+r9*8+0xe1a8]
   140003585:	call   0x140005dbc
   14000358a:	nop
   14000358b:	jmp    0x1400016c8
   140003590:	mov    rcx,QWORD PTR [r10+r9*8+0xe1a8]
   140003598:	call   0x14000653c
   14000359d:	nop
   14000359e:	jmp    0x1400016c8
   1400035a3:	mov    r8,QWORD PTR [r10+r9*8+0xe1b0]
   1400035ab:	xor    ecx,ecx
   1400035ad:	mov    rdx,QWORD PTR [r10+r9*8+0xe1a8]
   1400035b5:	mov    DWORD PTR [rsp+0x20],0x1
   1400035bd:	call   0x140005350
   1400035c2:	nop
   1400035c3:	jmp    0x1400016c8
   1400035c8:	mov    rcx,QWORD PTR [r10+r9*8+0xe1a8]
   1400035d0:	call   0x140006340
   1400035d5:	nop
   1400035d6:	jmp    0x1400016c8
   1400035db:	mov    rcx,QWORD PTR [r10+r9*8+0xe1a8]
   1400035e3:	xor    edx,edx
   1400035e5:	call   0x140005b28
   1400035ea:	nop
   1400035eb:	jmp    0x1400016c8
   1400035f0:	mov    rdx,QWORD PTR [r10+r9*8+0xe1b0]
   1400035f8:	mov    rcx,QWORD PTR [r10+r9*8+0xe1a8]
   140003600:	call   0x140005b28
   140003605:	nop
   140003606:	jmp    0x1400016c8
   14000360b:	mov    r8,QWORD PTR [r10+r9*8+0xe1b8]
   140003613:	jmp    0x140003618
   140003615:	xor    r8d,r8d
   140003618:	mov    rdx,QWORD PTR [r10+r9*8+0xe1b0]
   140003620:	mov    rcx,QWORD PTR [r10+r9*8+0xe1a8]
   140003628:	mov    DWORD PTR [rsp+0x20],0x1
   140003630:	call   0x140005350
   140003635:	nop
   140003636:	jmp    0x1400016c8
   14000363b:	xor    ecx,ecx
   14000363d:	call   0x1400067bc
   140003642:	nop
   140003643:	jmp    0x1400016c8
   140003648:	mov    rcx,QWORD PTR [r10+r9*8+0xe1a8]
   140003650:	call   0x1400067bc
   140003655:	nop
   140003656:	jmp    0x1400016c8
   14000365b:	movsxd rax,edx
   14000365e:	cmp    rax,0x28
   140003662:	jae    0x1400016c8
   140003668:	test   edx,edx
   14000366a:	js     0x1400016c8
   140003670:	movsxd rax,edx
   140003673:	mov    rax,QWORD PTR [r10+rax*8+0xe1a0]
   14000367b:	jmp    0x140001673
   140003680:	lea    rcx,[rip+0x7269]        # 0x14000a8f0
   140003687:	call   0x140007b80
   14000368c:	movsxd rcx,ebp
   14000368f:	lea    r10,[rip+0xffffffffffffc96a]        # 0x140000000
   140003696:	lea    r11,[rip+0xa6c3]        # 0x14000dd60
   14000369d:	jmp    0x1400016eb
   1400036a2:	movsx  esi,WORD PTR [rdi+r10*1+0xaa70]
   1400036ab:	jmp    0x1400015e4
   1400036b0:	lea    rcx,[rip+0x7239]        # 0x14000a8f0
   1400036b7:	call   0x140007b80
   1400036bc:	lea    r10,[rip+0xffffffffffffc93d]        # 0x140000000
   1400036c3:	jmp    0x14000169e
   1400036c8:	call   0x140002300
   1400036cd:	int3   
   1400036ce:	xchg   ax,ax
   1400036d0:	xor    eax,0x35000034
   1400036d5:	xor    al,0x0
   1400036d7:	add    ah,bh
   1400036d9:	(bad)  
   1400036da:	add    BYTE PTR [rax],al
   1400036dc:	xor    eax,0x29000034
   1400036e1:	xor    al,0x0
   1400036e3:	add    BYTE PTR [rax+0x34],al
   1400036e6:	add    BYTE PTR [rax],al
   1400036e8:	jnp    0x14000371e
   1400036ea:	add    BYTE PTR [rax],al
   1400036ec:	mov    ?,WORD PTR [rax+rax*1]
   1400036ef:	add    BYTE PTR [rcx-0x35ffffcc],ah
   1400036f5:	xor    al,0x0
   1400036f7:	add    ch,bl
   1400036f9:	xor    al,0x0
   1400036fb:	add    al,dh
   1400036fd:	xor    al,0x0
   1400036ff:	add    BYTE PTR [rbx],al
   140003701:	xor    eax,0x353e0000
   140003706:	add    BYTE PTR [rax],al
   140003708:	jb     0x14000373f
   14000370a:	add    BYTE PTR [rax],al
   14000370c:	jge    0x140003743
   14000370e:	add    BYTE PTR [rax],al
   140003710:	nop
   140003711:	xor    eax,0x35a30000
   140003716:	add    BYTE PTR [rax],al
   140003718:	enter  0x35,0x0
   14000371c:	jge    0x140003753
   14000371e:	add    BYTE PTR [rax],al
   140003720:	(bad)  [rip+0x35f00000]        # 0x175f03726
   140003726:	add    BYTE PTR [rax],al
   140003728:	or     esi,DWORD PTR [rsi]
   14000372a:	add    BYTE PTR [rax],al
   14000372c:	adc    eax,0x3b000036
   140003731:	add    BYTE PTR ss:[rax],al
   140003734:	rex.W
   140003735:	add    BYTE PTR ss:[rax],al
   140003738:	enter  0x16,0x0
   14000373c:	enter  0x36,0x0
   140003740:	mov    QWORD PTR [rip+0x12679],r15        # 0x140015dc0
   140003747:	jmp    0x14000199c
   14000374c:	xor    edx,edx
   14000374e:	mov    ecx,eax
   140003750:	call   0x1400073fc
   140003755:	mov    ecx,0x2
   14000375a:	call   0x140007858
   14000375f:	int3   
   140003760:	mov    ecx,eax
   140003762:	call   0x1400073fc
   140003767:	mov    ecx,0x2
   14000376c:	call   0x140007858
   140003771:	int3   
   140003772:	mov    rcx,QWORD PTR [rsp+0x68]
   140003777:	lea    esi,[rax+0x40]
   14000377a:	lea    edx,[rsi+rsi*2]
   14000377d:	mov    DWORD PTR [rsp+0x70],esi
   140003781:	shl    edx,0x4
   140003784:	lea    r8,[rsp+0x68]
   140003789:	call   QWORD PTR [rip+0x6cb1]        # 0x14000a440
   14000378f:	test   eax,eax
   140003791:	jne    0x140003870
   140003797:	mov    ecx,DWORD PTR [rsp+0x40]
   14000379b:	jmp    0x140001a54
   1400037a0:	mov    r9,QWORD PTR [rsp+0x58]
   1400037a5:	add    r9,0x18
   1400037a9:	mov    rax,QWORD PTR [r9-0x8]
   1400037ad:	mov    rcx,r15
   1400037b0:	mov    r11,QWORD PTR [rip+0x12609]        # 0x140015dc0
   1400037b7:	test   rax,rax
   1400037ba:	cmovne rcx,rax
   1400037be:	mov    QWORD PTR [rdx],rcx
   1400037c1:	mov    rcx,r15
   1400037c4:	mov    rax,QWORD PTR [r9]
   1400037c7:	test   rax,rax
   1400037ca:	cmovne rcx,rax
   1400037ce:	mov    QWORD PTR [rdx+0x8],rcx
   1400037d2:	mov    rcx,r15
   1400037d5:	mov    rax,QWORD PTR [r9+0x10]
   1400037d9:	test   rax,rax
   1400037dc:	cmovne rcx,rax
   1400037e0:	mov    QWORD PTR [rdx+0x10],rcx
   1400037e4:	mov    eax,DWORD PTR [r9-0x14]
   1400037e8:	mov    DWORD PTR [rdx+0x18],eax
   1400037eb:	mov    rax,QWORD PTR [r9+0x10]
   1400037ef:	sub    r11,rax
   1400037f2:	movzx  r10d,WORD PTR [rax]
   1400037f6:	movzx  ecx,WORD PTR [rax+r11*1]
   1400037fb:	sub    r10d,ecx
   1400037fe:	jne    0x140003808
   140003800:	add    rax,0x2
   140003804:	test   ecx,ecx
   140003806:	jne    0x1400037f2
   140003808:	test   r10d,r10d
   14000380b:	mov    DWORD PTR [rdx+0x1c],0xffffffff
   140003812:	mov    eax,r14d
   140003815:	mov    QWORD PTR [rdx+0x20],r14
   140003819:	sete   al
   14000381c:	inc    r8d
   14000381f:	mov    DWORD PTR [rdx+0x28],eax
   140003822:	inc    edi
   140003824:	add    rdx,0x30
   140003828:	add    r9,0x30
   14000382c:	cmp    r8d,DWORD PTR [rsp+0x40]
   140003831:	jb     0x1400037a9
   140003837:	jmp    0x140001a6e
   14000383c:	lea    rdx,[rsp+0x58]
   140003841:	mov    DWORD PTR [rsp+0x50],0x1000
   140003849:	mov    ecx,0x1000
   14000384e:	call   QWORD PTR [rip+0x6bc4]        # 0x14000a418
   140003854:	test   eax,eax
   140003856:	je     0x140001a12
   14000385c:	xor    edx,edx
   14000385e:	mov    ecx,eax
   140003860:	call   0x1400073fc
   140003865:	mov    ecx,0x2
   14000386a:	call   0x140007858
   14000386f:	int3   
   140003870:	mov    ebx,eax
   140003872:	test   ebx,ebx
   140003874:	je     0x140001a85
   14000387a:	xor    edx,edx
   14000387c:	mov    ecx,ebx
   14000387e:	call   0x1400073fc
   140003883:	mov    ecx,0x2
   140003888:	call   0x140007858
   14000388d:	int3   
   14000388e:	xor    edx,edx
   140003890:	mov    ecx,eax
   140003892:	call   0x1400073fc
   140003897:	mov    ecx,0x2
   14000389c:	call   0x140007858
   1400038a1:	int3   
   1400038a2:	test   edi,edi
   1400038a4:	je     0x140003939
   1400038aa:	add    rbx,0x8
   1400038ae:	mov    r15,rdi
   1400038b1:	cmp    DWORD PTR [rbx+0x20],0x0
   1400038b5:	je     0x14000392b
   1400038b7:	cmp    DWORD PTR [rsp+0x40],0x0
   1400038bc:	mov    rdi,QWORD PTR [rsp+0x60]
   1400038c1:	jbe    0x140003928
   1400038c3:	mov    rsi,QWORD PTR [rdi]
   1400038c6:	mov    r12,QWORD PTR [rdi+0x8]
   1400038ca:	test   rsi,rsi
   1400038cd:	je     0x1400038ec
   1400038cf:	cmp    WORD PTR [rsi],0x0
   1400038d3:	je     0x1400038ec
   1400038d5:	mov    rcx,QWORD PTR [rbx-0x8]
   1400038d9:	mov    rdx,rsi
   1400038dc:	call   QWORD PTR [rip+0x69c6]        # 0x14000a2a8
   1400038e2:	test   eax,eax
   1400038e4:	je     0x140003916
   1400038e6:	cmp    WORD PTR [rsi],0x0
   1400038ea:	jne    0x140003906
   1400038ec:	mov    rax,QWORD PTR [rbx-0x8]
   1400038f0:	cmp    WORD PTR [rax],0x0
   1400038f4:	jne    0x140003906
   1400038f6:	mov    rcx,QWORD PTR [rbx]
   1400038f9:	mov    rdx,r12
   1400038fc:	call   QWORD PTR [rip+0x69a6]        # 0x14000a2a8
   140003902:	test   eax,eax
   140003904:	je     0x140003916
   140003906:	inc    r14d
   140003909:	add    rdi,0x28
   14000390d:	cmp    r14d,DWORD PTR [rsp+0x40]
   140003912:	jb     0x1400038c3
   140003914:	jmp    0x140003928
   140003916:	mov    eax,DWORD PTR [rdi+0x24]
   140003919:	mov    DWORD PTR [rbx+0x1c],eax
   14000391c:	mov    eax,DWORD PTR [rdi+0x20]
   14000391f:	mov    DWORD PTR [rbx+0x18],eax
   140003922:	mov    eax,DWORD PTR [rdi+0x18]
   140003925:	mov    DWORD PTR [rbx+0x14],eax
   140003928:	xor    r14d,r14d
   14000392b:	add    rbx,0x30
   14000392f:	sub    r15,0x1
   140003933:	jne    0x1400038b1
   140003939:	mov    rcx,QWORD PTR [rsp+0x60]
   14000393e:	call   QWORD PTR [rip+0x6af4]        # 0x14000a438
   140003944:	nop
   140003945:	jmp    0x140001af0
   14000394a:	mov    rcx,QWORD PTR [rsp+0x60]
   14000394f:	lea    rax,[rsp+0x70]
   140003954:	mov    QWORD PTR [rsp+0x28],rax
   140003959:	lea    r9,[rsp+0x40]
   14000395e:	lea    rax,[rsp+0x78]
   140003963:	xor    r8d,r8d
   140003966:	lea    rdx,[rip+0x6eb3]        # 0x14000a820
   14000396d:	mov    QWORD PTR [rsp+0x20],rax
   140003972:	call   QWORD PTR [rip+0x6888]        # 0x14000a200
   140003978:	test   eax,eax
   14000397a:	jne    0x140003998
   14000397c:	lea    rdx,[rip+0x6e95]        # 0x14000a818
   140003983:	lea    rcx,[rsp+0x78]
   140003988:	call   QWORD PTR [rip+0x691a]        # 0x14000a2a8
   14000398e:	test   eax,eax
   140003990:	mov    ebx,r14d
   140003993:	sete   bl
   140003996:	jmp    0x14000399d
   140003998:	mov    ebx,0x1
   14000399d:	mov    rcx,QWORD PTR [rsp+0x60]
   1400039a2:	call   QWORD PTR [rip+0x6868]        # 0x14000a210
   1400039a8:	test   ebx,ebx
   1400039aa:	mov    ebx,0xe5d
   1400039af:	je     0x140001b39
   1400039b5:	jmp    0x140001b34
   1400039ba:	mov    ecx,0x3000
   1400039bf:	jmp    0x140001bd3
   1400039c4:	mov    rcx,r14
   1400039c7:	movzx  r8d,WORD PTR [rdi+rcx*2]
   1400039cc:	inc    rcx
   1400039cf:	movzx  eax,WORD PTR [rsi+rcx*2-0x2]
   1400039d4:	sub    r8d,eax
   1400039d7:	jne    0x1400039df
   1400039d9:	cmp    rcx,0x7
   1400039dd:	jne    0x1400039c7
   1400039df:	test   r8d,r8d
   1400039e2:	je     0x140001bd0
   1400039e8:	mov    rcx,rdx
   1400039eb:	call   QWORD PTR [rip+0x674f]        # 0x14000a140
   1400039f1:	nop
   1400039f2:	jmp    0x140001ba3
   1400039f7:	xor    ecx,ecx
   1400039f9:	mov    WORD PTR [rip+0x12600],cx        # 0x140016000
   140003a00:	call   QWORD PTR [rip+0x66d2]        # 0x14000a0d8
   140003a06:	cmp    eax,0x13d
   140003a0b:	jne    0x140003a59
   140003a0d:	mov    r8d,0x10
   140003a13:	lea    rdx,[rbp-0x40]
   140003a17:	mov    ecx,ebx
   140003a19:	call   QWORD PTR [rip+0x68a9]        # 0x14000a2c8
   140003a1f:	mov    rdx,QWORD PTR [rip+0x125c2]        # 0x140015fe8
   140003a26:	lea    rax,[rbp-0x40]
   140003a2a:	mov    QWORD PTR [rsp+0x30],r13
   140003a2f:	xor    r9d,r9d
   140003a32:	mov    DWORD PTR [rsp+0x28],0x800
   140003a3a:	mov    r8d,0x13d
   140003a40:	mov    ecx,0x3000
   140003a45:	mov    QWORD PTR [rip+0x11904],rax        # 0x140015350
   140003a4c:	mov    QWORD PTR [rsp+0x20],r14
   140003a51:	call   QWORD PTR [rip+0x6721]        # 0x14000a178
   140003a57:	jmp    0x140003a71
   140003a59:	test   eax,eax
   140003a5b:	je     0x140001c0b
   140003a61:	jmp    0x140003a71
   140003a63:	lea    r13,[rip+0x118e6]        # 0x140015350
   140003a6a:	lea    r14,[rip+0x1258f]        # 0x140016000
   140003a71:	mov    r15,QWORD PTR [rip+0x11888]        # 0x140015300
   140003a78:	jmp    0x140001c0b
   140003a7d:	lea    rdx,[rsp+0x58]
   140003a82:	mov    rcx,r15
   140003a85:	call   QWORD PTR [rip+0x65d5]        # 0x14000a060
   140003a8b:	test   eax,eax
   140003a8d:	je     0x140001c45
   140003a93:	mov    r8d,DWORD PTR [rsp+0x50]
   140003a98:	lea    r9,[rsp+0x50]
   140003a9d:	xor    eax,eax
   140003a9f:	mov    rdx,r14
   140003aa2:	mov    rcx,r15
   140003aa5:	mov    QWORD PTR [rsp+0x20],rax
   140003aaa:	call   QWORD PTR [rip+0x65c0]        # 0x14000a070
   140003ab0:	nop
   140003ab1:	jmp    0x140001cb8
   140003ab6:	cmp    WORD PTR [rbx],0xa
   140003aba:	jne    0x140001d71
   140003ac0:	jmp    0x140001ce0
   140003ac5:	lea    rdx,[rsp+0x58]
   140003aca:	mov    rcx,r15
   140003acd:	call   QWORD PTR [rip+0x658d]        # 0x14000a060
   140003ad3:	test   eax,eax
   140003ad5:	je     0x140001cfe
   140003adb:	mov    r8d,DWORD PTR [rsp+0x48]
   140003ae0:	lea    r9,[rsp+0x48]
   140003ae5:	xor    ebx,ebx
   140003ae7:	lea    rdx,[rip+0x6a6a]        # 0x14000a558
   140003aee:	mov    rcx,r15
   140003af1:	mov    QWORD PTR [rsp+0x20],rbx
   140003af6:	call   QWORD PTR [rip+0x6574]        # 0x14000a070
   140003afc:	nop
   140003afd:	jmp    0x140001d73
   140003b02:	mov    r12d,0x3000
   140003b08:	jmp    0x140001e02
   140003b0d:	mov    rcx,rdx
   140003b10:	call   QWORD PTR [rip+0x662a]        # 0x14000a140
   140003b16:	jmp    0x140003b1f
   140003b18:	lea    rbx,[rip+0x122c1]        # 0x140015de0
   140003b1f:	mov    r8,rdi
   140003b22:	mov    edx,0x104
   140003b27:	mov    rcx,rbx
   140003b2a:	call   QWORD PTR [rip+0x67f0]        # 0x14000a320
   140003b30:	mov    rcx,rdi
   140003b33:	call   QWORD PTR [rip+0x6627]        # 0x14000a160
   140003b39:	mov    QWORD PTR [rip+0x124a8],rax        # 0x140015fe8
   140003b40:	mov    rdx,rax
   140003b43:	test   rax,rax
   140003b46:	jne    0x140001e02
   140003b4c:	xor    r12d,r12d
   140003b4f:	jmp    0x140003bbd
   140003b51:	mov    WORD PTR [rip+0x124a7],r12w        # 0x140016000
   140003b59:	call   QWORD PTR [rip+0x6579]        # 0x14000a0d8
   140003b5f:	cmp    eax,0x13d
   140003b64:	jne    0x140003bb5
   140003b66:	mov    r8d,0x10
   140003b6c:	lea    rdx,[rbp-0x40]
   140003b70:	mov    ecx,0xe63
   140003b75:	call   QWORD PTR [rip+0x674d]        # 0x14000a2c8
   140003b7b:	mov    rdx,QWORD PTR [rip+0x12466]        # 0x140015fe8
   140003b82:	lea    rax,[rbp-0x40]
   140003b86:	mov    QWORD PTR [rsp+0x30],r13
   140003b8b:	xor    r9d,r9d
   140003b8e:	mov    DWORD PTR [rsp+0x28],0x800
   140003b96:	mov    r8d,0x13d
   140003b9c:	mov    ecx,0x3000
   140003ba1:	mov    QWORD PTR [rip+0x117a8],rax        # 0x140015350
   140003ba8:	mov    QWORD PTR [rsp+0x20],r14
   140003bad:	call   QWORD PTR [rip+0x65c5]        # 0x14000a178
   140003bb3:	jmp    0x140003bbd
   140003bb5:	test   eax,eax
   140003bb7:	je     0x140001e36
   140003bbd:	mov    r15,QWORD PTR [rip+0x1173c]        # 0x140015300
   140003bc4:	jmp    0x140001e36
   140003bc9:	lea    rdx,[rsp+0x58]
   140003bce:	mov    rcx,r15
   140003bd1:	call   QWORD PTR [rip+0x6489]        # 0x14000a060
   140003bd7:	test   eax,eax
   140003bd9:	je     0x140001e65
   140003bdf:	mov    r8d,DWORD PTR [rsp+0x40]
   140003be4:	lea    r9,[rsp+0x40]
   140003be9:	mov    rdx,r14
   140003bec:	mov    QWORD PTR [rsp+0x20],r12
   140003bf1:	mov    rcx,r15
   140003bf4:	call   QWORD PTR [rip+0x6476]        # 0x14000a070
   140003bfa:	nop
   140003bfb:	jmp    0x140001ed7
   140003c00:	cmp    WORD PTR [rbx],0xa
   140003c04:	jne    0x140001f8c
   140003c0a:	jmp    0x140001eff
   140003c0f:	lea    rdx,[rsp+0x58]
   140003c14:	mov    rcx,r15
   140003c17:	call   QWORD PTR [rip+0x6443]        # 0x14000a060
   140003c1d:	test   eax,eax
   140003c1f:	je     0x140001f1d
   140003c25:	mov    r8d,DWORD PTR [rsp+0x40]
   140003c2a:	lea    r9,[rsp+0x40]
   140003c2f:	lea    rdx,[rip+0x6922]        # 0x14000a558
   140003c36:	mov    QWORD PTR [rsp+0x20],r12
   140003c3b:	mov    rcx,r15
   140003c3e:	call   QWORD PTR [rip+0x642c]        # 0x14000a070
   140003c44:	nop
   140003c45:	jmp    0x140001f8c
   140003c4a:	mov    r8d,0xa
   140003c50:	lea    rdx,[rbp-0x40]
   140003c54:	call   QWORD PTR [rip+0x666e]        # 0x14000a2c8
   140003c5a:	mov    QWORD PTR [rip+0x116ef],rax        # 0x140015350
   140003c61:	mov    r9d,0x800
   140003c67:	lea    rax,[rsp+0x58]
   140003c6c:	mov    r8,r14
   140003c6f:	mov    QWORD PTR [rsp+0x30],rax
   140003c74:	mov    edx,0x1
   140003c79:	mov    QWORD PTR [rsp+0x28],rdi
   140003c7e:	mov    rcx,r13
   140003c81:	mov    DWORD PTR [rsp+0x20],0xdba
   140003c89:	call   0x140009290
   140003c8e:	test   eax,eax
   140003c90:	jne    0x140001fa3
   140003c96:	mov    rcx,QWORD PTR [rip+0x11663]        # 0x140015300
   140003c9d:	lea    r8d,[rax+0x1]
   140003ca1:	mov    rdx,r14
   140003ca4:	call   0x140009468
   140003ca9:	nop
   140003caa:	jmp    0x140001fa3
   140003caf:	mov    r10,QWORD PTR [rsp+0x68]
   140003cb4:	mov    ecx,ebx
   140003cb6:	test   edi,edi
   140003cb8:	je     0x140003cdf
   140003cba:	lea    rax,[r10+0x1c]
   140003cbe:	cmp    DWORD PTR [rax+0xc],0x0
   140003cc2:	je     0x140003cdf
   140003cc4:	cmp    DWORD PTR [rax],0x0
   140003cc7:	jne    0x140003cdf
   140003cc9:	cmp    DWORD PTR [rax+0x8],0x0
   140003ccd:	jne    0x140003cdf
   140003ccf:	cmp    DWORD PTR [rax+0x4],0x0
   140003cd3:	jne    0x140003cdf
   140003cd5:	inc    ecx
   140003cd7:	add    rax,0x30
   140003cdb:	cmp    ecx,edi
   140003cdd:	jb     0x140003cbe
   140003cdf:	cmp    ecx,edi
   140003ce1:	jne    0x140003ce9
   140003ce3:	call   0x140007360
   140003ce8:	int3   
   140003ce9:	mov    r13d,edi
   140003cec:	lea    r9,[rip+0xa5d]        # 0x140004750
   140003cf3:	mov    r8d,0x30
   140003cf9:	mov    edx,edi
   140003cfb:	mov    rcx,r10
   140003cfe:	mov    QWORD PTR [rsp+0x60],r13
   140003d03:	call   QWORD PTR [rip+0x65b7]        # 0x14000a2c0
   140003d09:	mov    ecx,0x7
   140003d0e:	lea    r8,[rsp+0x58]
   140003d13:	lea    rdx,[rip+0x95f6]        # 0x14000d310
   140003d1a:	call   0x140007514
   140003d1f:	xor    edx,edx
   140003d21:	lea    rcx,[rip+0x6830]        # 0x14000a558
   140003d28:	call   0x140007b80
   140003d2d:	mov    rbx,QWORD PTR [rip+0x1160c]        # 0x140015340
   140003d34:	lea    rax,[rsp+0x58]
   140003d39:	mov    QWORD PTR [rsp+0x30],rax
   140003d3e:	lea    r12,[rip+0x6803]        # 0x14000a548
   140003d45:	mov    QWORD PTR [rsp+0x28],r12
   140003d4a:	lea    rcx,[rip+0x115ff]        # 0x140015350
   140003d51:	mov    r9d,0x800
   140003d57:	mov    DWORD PTR [rsp+0x20],0x126a
   140003d5f:	mov    r8,r14
   140003d62:	xor    edx,edx
   140003d64:	call   0x140009290
   140003d69:	test   eax,eax
   140003d6b:	mov    r8d,0x1
   140003d71:	mov    rdx,r14
   140003d74:	cmovne rbx,QWORD PTR [rip+0x11584]        # 0x140015300
   140003d7c:	mov    rcx,rbx
   140003d7f:	call   0x140009468
   140003d84:	xor    edx,edx
   140003d86:	lea    rcx,[rip+0x6ab3]        # 0x14000a840
   140003d8d:	call   0x140007b80
   140003d92:	test   edi,edi
   140003d94:	je     0x140003fb8
   140003d9a:	mov    r15,QWORD PTR [rsp+0x68]
   140003d9f:	lea    rdx,[rip+0xffffffffffffc25a]        # 0x140000000
   140003da6:	add    r15,0x24
   140003daa:	lea    r14,[rip+0x955f]        # 0x14000d310
   140003db1:	mov    eax,DWORD PTR [r15-0x8]
   140003db5:	cmp    eax,0xfffe
   140003dba:	ja     0x140003e1d
   140003dbc:	je     0x140003e0e
   140003dbe:	cmp    eax,0x5
   140003dc1:	ja     0x140003e1d
   140003dc3:	mov    ecx,DWORD PTR [rdx+rax*4+0x404c]
   140003dca:	add    rcx,rdx
   140003dcd:	jmp    rcx
   140003dcf:	cmp    DWORD PTR [r15],0x0
   140003dd3:	jne    0x140003de7
   140003dd5:	cmp    DWORD PTR [r15-0x4],0x0
   140003dda:	jne    0x140003de7
   140003ddc:	cmp    DWORD PTR [r15+0x4],0x0
   140003de1:	jne    0x140003f97
   140003de7:	xor    eax,eax
   140003de9:	jmp    0x140003e13
   140003deb:	mov    eax,0x1
   140003df0:	jmp    0x140003e13
   140003df2:	mov    eax,0x2
   140003df7:	jmp    0x140003e13
   140003df9:	mov    eax,0x3
   140003dfe:	jmp    0x140003e13
   140003e00:	mov    eax,0x4
   140003e05:	jmp    0x140003e13
   140003e07:	mov    eax,0x5
   140003e0c:	jmp    0x140003e13
   140003e0e:	mov    eax,0x6
   140003e13:	add    rax,rax
   140003e16:	mov    r12,QWORD PTR [r14+rax*8+0x8]
   140003e1b:	jmp    0x140003e24
   140003e1d:	lea    r12,[rip+0x69f0]        # 0x14000a814
   140003e24:	mov    rdx,QWORD PTR [r15-0x1c]
   140003e28:	mov    rax,rsi
   140003e2b:	inc    rax
   140003e2e:	cmp    WORD PTR [rdx+rax*2],0x0
   140003e33:	jne    0x140003e2b
   140003e35:	cmp    rax,0x19
   140003e39:	ja     0x140003ea5
   140003e3b:	mov    r9d,0x105
   140003e41:	lea    r8,[rbp+0x50]
   140003e45:	mov    ecx,0x19
   140003e4a:	call   0x140007908
   140003e4f:	mov    rdx,QWORD PTR [r15-0x24]
   140003e53:	lea    r8,[rbp-0x78]
   140003e57:	mov    r9d,0xa
   140003e5d:	mov    rdi,rax
   140003e60:	lea    ecx,[r9-0x1]
   140003e64:	call   0x140007908
   140003e69:	mov    r9d,0xd
   140003e6f:	lea    r8,[rbp-0x60]
   140003e73:	mov    rdx,r12
   140003e76:	mov    rbx,rax
   140003e79:	lea    ecx,[r9-0x1]
   140003e7d:	call   0x140007908
   140003e82:	mov    rcx,QWORD PTR [r15-0x14]
   140003e86:	mov    rdx,rax
   140003e89:	mov    QWORD PTR [rsp+0x20],rcx
   140003e8e:	mov    r9,rdi
   140003e91:	lea    rcx,[rip+0x6e40]        # 0x14000acd8
   140003e98:	mov    r8,rbx
   140003e9b:	call   0x140007b80
   140003ea0:	jmp    0x140003f90
   140003ea5:	mov    r9d,0x19
   140003eab:	lea    r8,[rbp-0x40]
   140003eaf:	mov    rbx,rdx
   140003eb2:	mov    ecx,r9d
   140003eb5:	lea    rdx,[rip+0x6958]        # 0x14000a814
   140003ebc:	call   0x140007908
   140003ec1:	mov    r9d,0xa
   140003ec7:	lea    r8,[rbp+0x10]
   140003ecb:	lea    rdx,[rip+0x6942]        # 0x14000a814
   140003ed2:	mov    r13,rax
   140003ed5:	lea    ecx,[r9-0x1]
   140003ed9:	call   0x140007908
   140003ede:	mov    r9d,0xd
   140003ee4:	mov    QWORD PTR [rsp+0x58],rax
   140003ee9:	lea    r8,[rbp+0x28]
   140003eed:	lea    rdx,[rip+0x6920]        # 0x14000a814
   140003ef4:	lea    ecx,[r9-0x1]
   140003ef8:	call   0x140007908
   140003efd:	mov    QWORD PTR [rsp+0x70],rax
   140003f02:	mov    rcx,rsi
   140003f05:	inc    rcx
   140003f08:	cmp    WORD PTR [rbx+rcx*2],0x0
   140003f0d:	jne    0x140003f05
   140003f0f:	mov    r9d,0x105
   140003f15:	lea    r8,[rbp+0x50]
   140003f19:	mov    rdx,rbx
   140003f1c:	call   0x140007908
   140003f21:	mov    rdx,QWORD PTR [r15-0x24]
   140003f25:	lea    r8,[rbp-0x78]
   140003f29:	mov    r9d,0xa
   140003f2f:	mov    rdi,rax
   140003f32:	lea    ecx,[r9-0x1]
   140003f36:	call   0x140007908
   140003f3b:	mov    r9d,0xd
   140003f41:	lea    r8,[rbp-0x60]
   140003f45:	mov    rdx,r12
   140003f48:	mov    rbx,rax
   140003f4b:	lea    ecx,[r9-0x1]
   140003f4f:	call   0x140007908
   140003f54:	mov    rcx,QWORD PTR [r15-0x14]
   140003f58:	mov    rdx,rax
   140003f5b:	mov    rax,QWORD PTR [rsp+0x58]
   140003f60:	mov    r9,rdi
   140003f63:	mov    QWORD PTR [rsp+0x38],rcx
   140003f68:	mov    r8,rbx
   140003f6b:	mov    QWORD PTR [rsp+0x30],r13
   140003f70:	lea    rcx,[rip+0x6d89]        # 0x14000ad00
   140003f77:	mov    QWORD PTR [rsp+0x28],rax
   140003f7c:	mov    rax,QWORD PTR [rsp+0x70]
   140003f81:	mov    QWORD PTR [rsp+0x20],rax
   140003f86:	call   0x140007b80
   140003f8b:	mov    r13,QWORD PTR [rsp+0x60]
   140003f90:	lea    rdx,[rip+0xffffffffffffc069]        # 0x140000000
   140003f97:	add    r15,0x30
   140003f9b:	sub    r13,0x1
   140003f9f:	mov    QWORD PTR [rsp+0x60],r13
   140003fa4:	jne    0x140003db1
   140003faa:	lea    r14,[rip+0x1204f]        # 0x140016000
   140003fb1:	lea    r12,[rip+0x6590]        # 0x14000a548
   140003fb8:	mov    rcx,QWORD PTR [rsp+0x68]
   140003fbd:	call   QWORD PTR [rip+0x6475]        # 0x14000a438
   140003fc3:	mov    rbx,QWORD PTR [rip+0x11376]        # 0x140015340
   140003fca:	lea    rax,[rsp+0x58]
   140003fcf:	mov    QWORD PTR [rsp+0x30],rax
   140003fd4:	lea    rcx,[rip+0x11375]        # 0x140015350
   140003fdb:	mov    QWORD PTR [rsp+0x28],r12
   140003fe0:	mov    r9d,0x800
   140003fe6:	mov    r8,r14
   140003fe9:	mov    DWORD PTR [rsp+0x20],0xdac
   140003ff1:	xor    edx,edx
   140003ff3:	call   0x140009290
   140003ff8:	test   eax,eax
   140003ffa:	mov    r8d,0x1
   140004000:	mov    rdx,r14
   140004003:	cmovne rbx,QWORD PTR [rip+0x112f5]        # 0x140015300
   14000400b:	mov    rcx,rbx
   14000400e:	call   0x140009468
   140004013:	mov    r13,QWORD PTR [rsp+0x3b0]
   14000401b:	mov    r12,QWORD PTR [rsp+0x3a8]
   140004023:	mov    rbx,QWORD PTR [rsp+0x3a0]
   14000402b:	mov    rcx,QWORD PTR [rbp+0x260]
   140004032:	xor    rcx,rsp
   140004035:	call   0x1400027c0
   14000403a:	add    rsp,0x370
   140004041:	pop    r15
   140004043:	pop    r14
   140004045:	pop    rdi
   140004046:	pop    rsi
   140004047:	pop    rbp
   140004048:	ret    
   140004049:	nop    DWORD PTR [rax]
   14000404c:	iret   
   14000404d:	cmp    eax,0x3deb0000
   140004052:	add    BYTE PTR [rax],al
   140004054:	repnz cmp eax,0x3df90000
   14000405a:	add    BYTE PTR [rax],al
   14000405c:	add    BYTE PTR [rsi],bh
   14000405e:	add    BYTE PTR [rax],al
   140004060:	(bad)  
   140004061:	add    BYTE PTR ds:[rax],al
   140004064:	mov    rcx,QWORD PTR [rdi]
   140004067:	call   QWORD PTR [rip+0x63cb]        # 0x14000a438
   14000406d:	nop
   14000406e:	jmp    0x140001ff2
   140004073:	int3   
   140004074:	xor    edx,edx
   140004076:	mov    ecx,eax
   140004078:	call   0x1400073fc
   14000407d:	mov    ecx,0x2
   140004082:	call   0x140007858
   140004087:	int3   
   140004088:	mov    rcx,QWORD PTR [rsp+0x50]
   14000408d:	call   QWORD PTR [rip+0x63a5]        # 0x14000a438
   140004093:	xor    eax,eax
   140004095:	jmp    0x140002188
   14000409a:	mov    edx,DWORD PTR [rsp+0x40]
   14000409e:	lea    r8,[rsp+0x50]
   1400040a3:	mov    rcx,QWORD PTR [rsp+0x50]
   1400040a8:	call   QWORD PTR [rip+0x6392]        # 0x14000a440
   1400040ae:	mov    rcx,QWORD PTR [rsp+0x58]
   1400040b3:	mov    ebx,eax
   1400040b5:	test   eax,eax
   1400040b7:	je     0x1400040d3
   1400040b9:	call   QWORD PTR [rip+0x6151]        # 0x14000a210
   1400040bf:	xor    edx,edx
   1400040c1:	mov    ecx,ebx
   1400040c3:	call   0x1400073fc
   1400040c8:	mov    ecx,0x2
   1400040cd:	call   0x140007858
   1400040d2:	int3   
   1400040d3:	lea    rax,[rsp+0x40]
   1400040d8:	xor    r8d,r8d
   1400040db:	mov    QWORD PTR [rsp+0x28],rax
   1400040e0:	lea    r9,[rsp+0x48]
   1400040e5:	mov    rax,QWORD PTR [rsp+0x50]
   1400040ea:	lea    rdx,[rip+0x6517]        # 0x14000a608
   1400040f1:	mov    QWORD PTR [rsp+0x20],rax
   1400040f6:	call   QWORD PTR [rip+0x6104]        # 0x14000a200
   1400040fc:	mov    ebx,eax
   1400040fe:	jmp    0x14000216b
   140004103:	mov    rcx,QWORD PTR [rsp+0x50]
   140004108:	call   QWORD PTR [rip+0x632a]        # 0x14000a438
   14000410e:	xor    eax,eax
   140004110:	jmp    0x140002183
   140004115:	int3   
   140004116:	mov    ecx,eax
   140004118:	call   0x1400073fc
   14000411d:	mov    ecx,0x2
   140004122:	call   0x140007858
   140004127:	int3   
   140004128:	mov    rcx,QWORD PTR [rsp+0x38]
   14000412d:	call   QWORD PTR [rip+0x6305]        # 0x14000a438
   140004133:	mov    eax,ebx
   140004135:	jmp    0x140002273
   14000413a:	test   eax,eax
   14000413c:	je     0x140002257
   140004142:	mov    r12,QWORD PTR [rsp+0x38]
   140004147:	add    r12,0x10
   14000414b:	mov    DWORD PTR [rsp+0xa8],0x0
   140004156:	mov    r13,QWORD PTR [r14]
   140004159:	xor    ebp,ebp
   14000415b:	test   esi,esi
   14000415d:	je     0x1400041ab
   14000415f:	mov    rdx,QWORD PTR [r13+0x0]
   140004163:	test   rdx,rdx
   140004166:	je     0x1400042a8
   14000416c:	mov    rax,QWORD PTR [r12]
   140004170:	test   rax,rax
   140004173:	je     0x1400042a8
   140004179:	cmp    WORD PTR [rdx],0x0
   14000417d:	je     0x14000429e
   140004183:	or     r8,0xffffffffffffffff
   140004187:	inc    r8
   14000418a:	cmp    WORD PTR [rdx+r8*2],0x0
   140004190:	jne    0x140004187
   140004192:	mov    rcx,rax
   140004195:	call   QWORD PTR [rip+0x61bd]        # 0x14000a358
   14000419b:	test   eax,eax
   14000419d:	jne    0x1400042a8
   1400041a3:	cmp    ebp,esi
   1400041a5:	jb     0x140004243
   1400041ab:	mov    eax,DWORD PTR [r15]
   1400041ae:	cmp    DWORD PTR [rdi],eax
   1400041b0:	jb     0x1400041d2
   1400041b2:	mov    rcx,QWORD PTR [r14]
   1400041b5:	add    eax,0x40
   1400041b8:	mov    r8,r14
   1400041bb:	mov    DWORD PTR [r15],eax
   1400041be:	lea    edx,[rax+rax*2]
   1400041c1:	shl    edx,0x4
   1400041c4:	call   QWORD PTR [rip+0x6276]        # 0x14000a440
   1400041ca:	test   eax,eax
   1400041cc:	jne    0x140002264
   1400041d2:	mov    eax,DWORD PTR [rdi]
   1400041d4:	lea    rcx,[rip+0x6639]        # 0x14000a814
   1400041db:	lea    rdx,[rip+0x6632]        # 0x14000a814
   1400041e2:	lea    r8,[rax+rax*2]
   1400041e6:	mov    rax,QWORD PTR [r12]
   1400041ea:	shl    r8,0x4
   1400041ee:	add    r8,QWORD PTR [r14]
   1400041f1:	test   rax,rax
   1400041f4:	cmovne rcx,rax
   1400041f8:	mov    QWORD PTR [r8],rcx
   1400041fb:	mov    rax,QWORD PTR [r12+0x8]
   140004200:	test   rax,rax
   140004203:	cmovne rdx,rax
   140004207:	mov    QWORD PTR [r8+0x8],rdx
   14000420b:	lea    rdx,[rip+0x6602]        # 0x14000a814
   140004212:	mov    rax,QWORD PTR [r12+0x18]
   140004217:	test   rax,rax
   14000421a:	cmovne rdx,rax
   14000421e:	mov    QWORD PTR [r8+0x10],rdx
   140004222:	mov    eax,DWORD PTR [r12-0xc]
   140004227:	mov    DWORD PTR [r8+0x18],eax
   14000422b:	mov    QWORD PTR [r8+0x24],0x0
   140004233:	mov    QWORD PTR [r8+0x1c],0xfffe
   14000423b:	call   QWORD PTR [rip+0x60af]        # 0x14000a2f0
   140004241:	inc    DWORD PTR [rdi]
   140004243:	mov    ecx,DWORD PTR [rsp+0xa8]
   14000424a:	add    r12,0x30
   14000424e:	inc    ecx
   140004250:	mov    DWORD PTR [rsp+0xa8],ecx
   140004257:	cmp    ecx,DWORD PTR [rsp+0x90]
   14000425e:	jb     0x140004156
   140004264:	test   ebx,ebx
   140004266:	jne    0x140002257
   14000426c:	lea    rdx,[rsp+0x38]
   140004271:	mov    DWORD PTR [rsp+0x30],0x1000
   140004279:	mov    ecx,0x1000
   14000427e:	call   QWORD PTR [rip+0x6194]        # 0x14000a418
   140004284:	test   eax,eax
   140004286:	je     0x140002212
   14000428c:	xor    edx,edx
   14000428e:	mov    ecx,eax
   140004290:	call   0x1400073fc
   140004295:	lea    ecx,[rbx+0x2]
   140004298:	call   0x140007858
   14000429d:	int3   
   14000429e:	cmp    WORD PTR [rax],0x0
   1400042a2:	je     0x1400041a3
   1400042a8:	inc    ebp
   1400042aa:	add    r13,0x30
   1400042ae:	cmp    ebp,esi
   1400042b0:	jb     0x14000415f
   1400042b6:	jmp    0x1400041ab
   1400042bb:	int3   
   1400042bc:	lea    r15,[rip+0x12d3d]        # 0x140017000
   1400042c3:	mov    rcx,QWORD PTR [r15]
   1400042c6:	mov    ebp,0x3a
   1400042cb:	mov    edx,ebp
   1400042cd:	call   QWORD PTR [rip+0x5fc5]        # 0x14000a298
   1400042d3:	mov    rsi,rax
   1400042d6:	test   rax,rax
   1400042d9:	je     0x1400042df
   1400042db:	mov    WORD PTR [rax],r13w
   1400042df:	mov    rcx,QWORD PTR [r15]
   1400042e2:	call   QWORD PTR [rip+0x6008]        # 0x14000a2f0
   1400042e8:	test   rsi,rsi
   1400042eb:	je     0x1400042f0
   1400042ed:	mov    WORD PTR [rsi],bp
   1400042f0:	movzx  r12d,r13w
   1400042f4:	movzx  ebp,r13w
   1400042f8:	movzx  r14d,r13w
   1400042fc:	cmp    QWORD PTR [rdi],r13
   1400042ff:	je     0x140004477
   140004305:	mov    rax,rdi
   140004308:	mov    rdx,QWORD PTR [r15]
   14000430b:	mov    rcx,QWORD PTR [rax]
   14000430e:	call   0x140008010
   140004313:	mov    r8d,eax
   140004316:	test   eax,eax
   140004318:	je     0x140004377
   14000431a:	cmp    eax,0x1
   14000431d:	jne    0x140004326
   14000431f:	inc    bp
   140004322:	movzx  r12d,r14w
   140004326:	inc    r14w
   14000432a:	movzx  ecx,r14w
   14000432e:	lea    rdx,[rcx+rcx*2]
   140004332:	cmp    QWORD PTR [rdi+rdx*8],r13
   140004336:	lea    rax,[rdi+rdx*8]
   14000433a:	jne    0x140004308
   14000433c:	test   bp,bp
   14000433f:	je     0x140004477
   140004345:	cmp    bp,0x1
   140004349:	jbe    0x14000437b
   14000434b:	lea    rcx,[rip+0x12cae]        # 0x140017000
   140004352:	movzx  eax,bx
   140004355:	mov    edx,0x1
   14000435a:	mov    rax,QWORD PTR [rcx+rax*8]
   14000435e:	mov    ecx,0xdb3
   140004363:	mov    QWORD PTR [rip+0x10fe6],rax        # 0x140015350
   14000436a:	call   0x1400073fc
   14000436f:	xor    edx,edx
   140004371:	call   0x14000844c
   140004376:	int3   
   140004377:	movzx  r12d,r14w
   14000437b:	movzx  eax,r12w
   14000437f:	lea    rcx,[rax+rax*2]
   140004383:	mov    eax,DWORD PTR [rdi+rcx*8+0x10]
   140004387:	test   eax,eax
   140004389:	je     0x1400043a9
   14000438b:	cmp    eax,0x2
   14000438e:	jne    0x1400043c2
   140004390:	test   rsi,rsi
   140004393:	jne    0x1400043c2
   140004395:	xor    edx,edx
   140004397:	mov    ecx,0xdb1
   14000439c:	call   0x1400073fc
   1400043a1:	xor    edx,edx
   1400043a3:	call   0x14000844c
   1400043a8:	int3   
   1400043a9:	test   rsi,rsi
   1400043ac:	je     0x1400043c2
   1400043ae:	xor    edx,edx
   1400043b0:	mov    ecx,0xdb1
   1400043b5:	call   0x1400073fc
   1400043ba:	xor    edx,edx
   1400043bc:	call   0x14000844c
   1400043c1:	int3   
   1400043c2:	test   r8d,r8d
   1400043c5:	jne    0x1400043ce
   1400043c7:	cmp    QWORD PTR [rdi+rcx*8+0x8],r13
   1400043cc:	je     0x140004440
   1400043ce:	mov    rbp,QWORD PTR [rdi+rcx*8+0x8]
   1400043d3:	test   rbp,rbp
   1400043d6:	jne    0x1400043dc
   1400043d8:	mov    rbp,QWORD PTR [rdi+rcx*8]
   1400043dc:	or     rax,0xffffffffffffffff
   1400043e0:	inc    rax
   1400043e3:	cmp    WORD PTR [rbp+rax*2+0x0],r13w
   1400043e9:	jne    0x1400043e0
   1400043eb:	test   rsi,rsi
   1400043ee:	je     0x140004400
   1400043f0:	or     rcx,0xffffffffffffffff
   1400043f4:	inc    rcx
   1400043f7:	cmp    WORD PTR [rsi+rcx*2],r13w
   1400043fc:	jne    0x1400043f4
   1400043fe:	add    eax,ecx
   140004400:	lea    r14d,[rax+0x1]
   140004404:	mov    edx,0x2
   140004409:	movsxd rcx,r14d
   14000440c:	call   QWORD PTR [rip+0x5fa6]        # 0x14000a3b8
   140004412:	mov    QWORD PTR [r15],rax
   140004415:	test   rax,rax
   140004418:	je     0x140004460
   14000441a:	movsxd r14,r14d
   14000441d:	mov    r8,rbp
   140004420:	mov    rdx,r14
   140004423:	mov    rcx,rax
   140004426:	call   QWORD PTR [rip+0x5ef4]        # 0x14000a320
   14000442c:	test   rsi,rsi
   14000442f:	je     0x140004440
   140004431:	mov    rcx,QWORD PTR [r15]
   140004434:	mov    r8,rsi
   140004437:	mov    rdx,r14
   14000443a:	call   QWORD PTR [rip+0x5e78]        # 0x14000a2b8
   140004440:	inc    bx
   140004443:	lea    rcx,[rip+0x12bb6]        # 0x140017000
   14000444a:	movzx  eax,bx
   14000444d:	cmp    QWORD PTR [rcx+rax*8],r13
   140004451:	lea    r15,[rcx+rax*8]
   140004455:	je     0x1400022c3
   14000445b:	jmp    0x1400042c3
   140004460:	xor    edx,edx
   140004462:	mov    ecx,0x85c
   140004467:	call   0x1400073fc
   14000446c:	mov    ecx,0x2
   140004471:	call   0x140007858
   140004476:	int3   
   140004477:	movzx  eax,bx
   14000447a:	lea    rcx,[rip+0x12b7f]        # 0x140017000
   140004481:	mov    r9,QWORD PTR [rcx+rax*8]
   140004485:	lea    rax,[rip+0x8fd4]        # 0x14000d460
   14000448c:	mov    r8,r9
   14000448f:	sub    r8,rax
   140004492:	movzx  ecx,WORD PTR [rax]
   140004495:	movzx  edx,WORD PTR [rax+r8*1]
   14000449a:	sub    ecx,edx
   14000449c:	jne    0x1400044a6
   14000449e:	add    rax,0x2
   1400044a2:	test   edx,edx
   1400044a4:	jne    0x140004492
   1400044a6:	test   ecx,ecx
   1400044a8:	jne    0x1400044b3
   1400044aa:	lea    edx,[rcx+0x1]
   1400044ad:	call   0x14000844c
   1400044b2:	int3   
   1400044b3:	lea    rax,[rip+0x8f9a]        # 0x14000d454
   1400044ba:	mov    rdx,r9
   1400044bd:	sub    rdx,rax
   1400044c0:	movzx  ecx,WORD PTR [rax]
   1400044c3:	movzx  r8d,WORD PTR [rax+rdx*1]
   1400044c8:	sub    ecx,r8d
   1400044cb:	jne    0x1400044d6
   1400044cd:	add    rax,0x2
   1400044d1:	test   r8d,r8d
   1400044d4:	jne    0x1400044c0
   1400044d6:	test   ecx,ecx
   1400044d8:	jne    0x1400044e2
   1400044da:	xor    edx,edx
   1400044dc:	call   0x14000844c
   1400044e1:	int3   
   1400044e2:	mov    edx,0x1
   1400044e7:	mov    QWORD PTR [rip+0x10e62],r9        # 0x140015350
   1400044ee:	mov    ecx,0xdb2
   1400044f3:	call   0x1400073fc
   1400044f8:	xor    edx,edx
   1400044fa:	call   0x14000844c
   1400044ff:	int3   
   140004500:	xor    edx,edx
   140004502:	mov    ecx,eax
   140004504:	call   0x1400073fc
   140004509:	mov    ecx,0x2
   14000450e:	call   0x140007858
   140004513:	int3   
   140004514:	call   QWORD PTR [rip+0x5bbe]        # 0x14000a0d8
   14000451a:	mov    ecx,eax
   14000451c:	xor    edx,edx
   14000451e:	call   0x1400073fc
   140004523:	mov    ecx,0x2
   140004528:	call   0x140007858
   14000452d:	int3   
   14000452e:	call   QWORD PTR [rip+0x5ba4]        # 0x14000a0d8
   140004534:	mov    ecx,eax
   140004536:	xor    edx,edx
   140004538:	call   0x1400073fc
   14000453d:	mov    ecx,0x2
   140004542:	call   0x140007858
   140004547:	int3   
   140004548:	int3   
   140004549:	int3   
   14000454a:	int3   
   14000454b:	int3   
   14000454c:	int3   
   14000454d:	int3   
   14000454e:	int3   
   14000454f:	int3   
   140004550:	mov    QWORD PTR [rsp+0x8],rbx
   140004555:	push   rdi
   140004556:	sub    rsp,0x20
   14000455a:	mov    ebx,edx
   14000455c:	mov    rdi,rcx
   14000455f:	lea    rdx,[rsp+0x48]
   140004564:	mov    ecx,0x18
   140004569:	call   QWORD PTR [rip+0x5ea9]        # 0x14000a418
   14000456f:	xor    edx,edx
   140004571:	test   eax,eax
   140004573:	je     0x140004587
   140004575:	mov    ecx,eax
   140004577:	call   0x1400073fc
   14000457c:	mov    ecx,0x2
   140004581:	call   0x140007858
   140004586:	int3   
   140004587:	mov    rax,QWORD PTR [rsp+0x48]
   14000458c:	mov    rcx,QWORD PTR [rip+0x10e0d]        # 0x1400153a0
   140004593:	mov    QWORD PTR [rax],rdi
   140004596:	mov    rax,QWORD PTR [rsp+0x48]
   14000459b:	mov    DWORD PTR [rax+0x10],ebx
   14000459e:	mov    rax,QWORD PTR [rsp+0x48]
   1400045a3:	mov    DWORD PTR [rax+0x14],edx
   1400045a6:	mov    rax,QWORD PTR [rsp+0x48]
   1400045ab:	mov    QWORD PTR [rax+0x8],rdx
   1400045af:	test   rcx,rcx
   1400045b2:	jne    0x1400045c5
   1400045b4:	mov    rax,QWORD PTR [rsp+0x48]
   1400045b9:	mov    QWORD PTR [rip+0x10de0],rax        # 0x1400153a0
   1400045c0:	jmp    0x1400045d7
   1400045c2:	mov    rcx,QWORD PTR [rax]
   1400045c5:	lea    rax,[rcx+0x8]
   1400045c9:	cmp    QWORD PTR [rax],rdx
   1400045cc:	jne    0x1400045c2
   1400045ce:	mov    rax,QWORD PTR [rsp+0x48]
   1400045d3:	mov    QWORD PTR [rcx+0x8],rax
   1400045d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045dc:	add    rsp,0x20
   1400045e0:	pop    rdi
   1400045e1:	ret    
   1400045e2:	int3   
   1400045e3:	int3   
   1400045e4:	int3   
   1400045e5:	int3   
   1400045e6:	int3   
   1400045e7:	int3   
   1400045e8:	rex push rbx
   1400045ea:	sub    rsp,0x20
   1400045ee:	mov    ebx,ecx
   1400045f0:	call   0x140001fc0
   1400045f5:	mov    ecx,ebx
   1400045f7:	call   QWORD PTR [rip+0x5ca3]        # 0x14000a2a0
   1400045fd:	int3   
   1400045fe:	int3   
   1400045ff:	int3   
   140004600:	int3   
   140004601:	int3   
   140004602:	int3   
   140004603:	int3   
   140004604:	mov    QWORD PTR [rsp+0x18],rbx
   140004609:	push   rdi
   14000460a:	sub    rsp,0x250
   140004611:	mov    rax,QWORD PTR [rip+0x89f0]        # 0x14000d008
   140004618:	xor    rax,rsp
   14000461b:	mov    QWORD PTR [rsp+0x240],rax
   140004623:	mov    DWORD PTR [rsp+0x20],0x104
   14000462b:	mov    rbx,rdx
   14000462e:	mov    rdi,rcx
   140004631:	test   rcx,rcx
   140004634:	jne    0x14000463d
   140004636:	xor    eax,eax
   140004638:	jmp    0x140004723
   14000463d:	lea    r8,[rsp+0x20]
   140004642:	lea    rdx,[rsp+0x30]
   140004647:	call   QWORD PTR [rip+0x59c3]        # 0x14000a010
   14000464d:	test   eax,eax
   14000464f:	jne    0x140004666
   140004651:	xor    edx,edx
   140004653:	lea    ecx,[rax+0x55]
   140004656:	call   0x1400073fc
   14000465b:	mov    ecx,0x2
   140004660:	call   0x140007858
   140004665:	int3   
   140004666:	cmp    eax,0x4b1
   14000466b:	jne    0x14000471e
   140004671:	mov    rdx,rbx
   140004674:	lea    rcx,[rsp+0x30]
   140004679:	call   QWORD PTR [rip+0x5c29]        # 0x14000a2a8
   14000467f:	test   eax,eax
   140004681:	je     0x140004636
   140004683:	mov    eax,DWORD PTR [rip+0x13387]        # 0x140017a10
   140004689:	mov    ebx,0x2
   14000468e:	cmp    eax,ebx
   140004690:	jne    0x1400046b9
   140004692:	lea    rax,[rsp+0x30]
   140004697:	mov    QWORD PTR [rip+0x10cb2],rdi        # 0x140015350
   14000469e:	mov    edx,ebx
   1400046a0:	mov    QWORD PTR [rip+0x10cb1],rax        # 0x140015358
   1400046a7:	mov    ecx,0xe6f
   1400046ac:	call   0x1400073fc
   1400046b1:	mov    ecx,ebx
   1400046b3:	call   0x140007858
   1400046b8:	int3   
   1400046b9:	test   eax,eax
   1400046bb:	jne    0x1400046f6
   1400046bd:	lea    rax,[rsp+0x30]
   1400046c2:	mov    QWORD PTR [rip+0x10c87],rdi        # 0x140015350
   1400046c9:	mov    r9d,0x1
   1400046cf:	mov    QWORD PTR [rip+0x10c82],rax        # 0x140015358
   1400046d6:	mov    r8d,0x14a1
   1400046dc:	lea    rcx,[rip+0x10c6d]        # 0x140015350
   1400046e3:	mov    edx,ebx
   1400046e5:	call   0x140008b40
   1400046ea:	test   eax,eax
   1400046ec:	jne    0x1400046f6
   1400046ee:	mov    ecx,ebx
   1400046f0:	call   0x140007858
   1400046f5:	int3   
   1400046f6:	xor    r8d,r8d
   1400046f9:	mov    rcx,rdi
   1400046fc:	lea    edx,[r8+0x1]
   140004700:	call   QWORD PTR [rip+0x5922]        # 0x14000a028
   140004706:	test   eax,eax
   140004708:	je     0x14000471e
   14000470a:	xor    edx,edx
   14000470c:	mov    ecx,0xe5e
   140004711:	call   0x1400073fc
   140004716:	mov    ecx,ebx
   140004718:	call   0x140007858
   14000471d:	int3   
   14000471e:	mov    eax,0x1
   140004723:	mov    rcx,QWORD PTR [rsp+0x240]
   14000472b:	xor    rcx,rsp
   14000472e:	call   0x1400027c0
   140004733:	mov    rbx,QWORD PTR [rsp+0x270]
   14000473b:	add    rsp,0x250
   140004742:	pop    rdi
   140004743:	ret    
   140004744:	int3   
   140004745:	int3   
   140004746:	int3   
   140004747:	int3   
   140004748:	int3   
   140004749:	int3   
   14000474a:	int3   
   14000474b:	int3   
   14000474c:	int3   
   14000474d:	int3   
   14000474e:	int3   
   14000474f:	int3   
   140004750:	mov    r9,QWORD PTR [rcx]
   140004753:	mov    r8,rcx
   140004756:	mov    r10,QWORD PTR [rdx]
   140004759:	movzx  eax,WORD PTR [r9]
   14000475d:	test   ax,ax
   140004760:	je     0x14000476d
   140004762:	cmp    WORD PTR [r10],0x0
   140004767:	jne    0x140004774
   140004769:	or     eax,0xffffffff
   14000476c:	ret    
   14000476d:	cmp    WORD PTR [r10],0x0
   140004772:	je     0x14000477f
   140004774:	test   ax,ax
   140004777:	jne    0x14000477f
   140004779:	mov    eax,0x1
   14000477e:	ret    
   14000477f:	mov    ecx,DWORD PTR [rdx+0x18]
   140004782:	cmp    DWORD PTR [r8+0x18],ecx
   140004786:	je     0x140004790
   140004788:	sbb    eax,eax
   14000478a:	and    eax,0xfffffffe
   14000478d:	inc    eax
   14000478f:	ret    
   140004790:	test   ax,ax
   140004793:	je     0x14000479d
   140004795:	mov    rdx,r10
   140004798:	mov    rcx,r9
   14000479b:	jmp    0x1400047a5
   14000479d:	mov    rdx,QWORD PTR [rdx+0x8]
   1400047a1:	mov    rcx,QWORD PTR [r8+0x8]
   1400047a5:	rex.W jmp QWORD PTR [rip+0x5afc]        # 0x14000a2a8
   1400047ac:	int3   
   1400047ad:	int3   
   1400047ae:	int3   
   1400047af:	int3   
   1400047b0:	int3   
   1400047b1:	int3   
   1400047b2:	int3   
   1400047b3:	int3   
   1400047b4:	mov    QWORD PTR [rsp+0x10],rbx
   1400047b9:	mov    QWORD PTR [rsp+0x18],rbp
   1400047be:	mov    QWORD PTR [rsp+0x20],rsi
   1400047c3:	push   rdi
   1400047c4:	sub    rsp,0x30
   1400047c8:	mov    r8d,DWORD PTR [rcx+0x1c]
   1400047cc:	mov    edx,0x10e1
   1400047d1:	movzx  r9d,dx
   1400047d5:	mov    rdi,rcx
   1400047d8:	test   r8d,r8d
   1400047db:	je     0x140004807
   1400047dd:	sub    r8d,0x1
   1400047e1:	je     0x1400047ff
   1400047e3:	sub    r8d,0x1
   1400047e7:	je     0x1400047f7
   1400047e9:	cmp    r8d,0x1
   1400047ed:	jne    0x14000480d
   1400047ef:	mov    r9d,0x1269
   1400047f5:	jmp    0x14000480d
   1400047f7:	mov    r9d,0x1268
   1400047fd:	jmp    0x14000480d
   1400047ff:	mov    r9d,0x1267
   140004805:	jmp    0x14000480d
   140004807:	mov    r9d,0x1266
   14000480d:	movzx  eax,r9w
   140004811:	mov    DWORD PTR [rip+0x8aa9],eax        # 0x14000d2c0
   140004817:	mov    ecx,DWORD PTR [rcx+0x18]
   14000481a:	test   ecx,ecx
   14000481c:	je     0x14000485a
   14000481e:	sub    ecx,0x1
   140004821:	je     0x140004853
   140004823:	sub    ecx,0x1
   140004826:	je     0x14000484c
   140004828:	sub    ecx,0x1
   14000482b:	je     0x140004845
   14000482d:	sub    ecx,0x1
   140004830:	je     0x14000483e
   140004832:	cmp    ecx,0x1
   140004835:	jne    0x14000485f
   140004837:	mov    edx,0x1271
   14000483c:	jmp    0x14000485f
   14000483e:	mov    edx,0x1270
   140004843:	jmp    0x14000485f
   140004845:	mov    edx,0x126f
   14000484a:	jmp    0x14000485f
   14000484c:	mov    edx,0x126e
   140004851:	jmp    0x14000485f
   140004853:	mov    edx,0x126d
   140004858:	jmp    0x14000485f
   14000485a:	mov    edx,0x126b
   14000485f:	movzx  eax,dx
   140004862:	lea    r8,[rsp+0x40]
   140004867:	lea    rdx,[rip+0x8a22]        # 0x14000d290
   14000486e:	mov    DWORD PTR [rip+0x8a6c],eax        # 0x14000d2e0
   140004874:	mov    ecx,0x8
   140004879:	call   0x140007514
   14000487e:	mov    ebx,DWORD PTR [rsp+0x40]
   140004882:	lea    rsi,[rip+0xba77]        # 0x140010300
   140004889:	mov    rdx,QWORD PTR [rip+0x8a08]        # 0x14000d298
   140004890:	add    ebx,0x5
   140004893:	mov    ebp,0x1000
   140004898:	mov    ecx,ebx
   14000489a:	mov    r9d,ebp
   14000489d:	mov    r8,rsi
   1400048a0:	call   0x140007908
   1400048a5:	mov    rcx,QWORD PTR [rdi]
   1400048a8:	mov    r9,rax
   1400048ab:	mov    QWORD PTR [rsp+0x20],rcx
   1400048b0:	mov    r8d,ebx
   1400048b3:	lea    rcx,[rip+0x6536]        # 0x14000adf0
   1400048ba:	xor    edx,edx
   1400048bc:	call   0x140007b80
   1400048c1:	mov    rdx,QWORD PTR [rip+0x89e0]        # 0x14000d2a8
   1400048c8:	mov    r9d,ebp
   1400048cb:	mov    r8,rsi
   1400048ce:	mov    ecx,ebx
   1400048d0:	call   0x140007908
   1400048d5:	mov    rdx,QWORD PTR [rdi+0x8]
   1400048d9:	lea    rcx,[rip+0x6510]        # 0x14000adf0
   1400048e0:	mov    QWORD PTR [rsp+0x20],rdx
   1400048e5:	mov    r9,rax
   1400048e8:	xor    edx,edx
   1400048ea:	mov    r8d,ebx
   1400048ed:	call   0x140007b80
   1400048f2:	mov    rdx,QWORD PTR [rip+0x89bf]        # 0x14000d2b8
   1400048f9:	mov    r9d,ebp
   1400048fc:	mov    r8,rsi
   1400048ff:	mov    ecx,ebx
   140004901:	call   0x140007908
   140004906:	mov    rcx,QWORD PTR [rip+0x89bb]        # 0x14000d2c8
   14000490d:	mov    r9,rax
   140004910:	mov    QWORD PTR [rsp+0x20],rcx
   140004915:	mov    r8d,ebx
   140004918:	lea    rcx,[rip+0x64f1]        # 0x14000ae10
   14000491f:	xor    edx,edx
   140004921:	call   0x140007b80
   140004926:	mov    rdx,QWORD PTR [rip+0x89ab]        # 0x14000d2d8
   14000492d:	mov    r9d,ebp
   140004930:	mov    r8,rsi
   140004933:	mov    ecx,ebx
   140004935:	call   0x140007908
   14000493a:	mov    rdx,QWORD PTR [rip+0x89a7]        # 0x14000d2e8
   140004941:	lea    rcx,[rip+0x64c8]        # 0x14000ae10
   140004948:	mov    QWORD PTR [rsp+0x20],rdx
   14000494d:	mov    r9,rax
   140004950:	xor    edx,edx
   140004952:	mov    r8d,ebx
   140004955:	call   0x140007b80
   14000495a:	mov    rdx,QWORD PTR [rip+0x8997]        # 0x14000d2f8
   140004961:	mov    r9d,ebp
   140004964:	mov    r8,rsi
   140004967:	mov    ecx,ebx
   140004969:	call   0x140007908
   14000496e:	mov    ecx,DWORD PTR [rdi+0x20]
   140004971:	mov    r9,rax
   140004974:	mov    DWORD PTR [rsp+0x20],ecx
   140004978:	mov    r8d,ebx
   14000497b:	lea    rcx,[rip+0x64ae]        # 0x14000ae30
   140004982:	xor    edx,edx
   140004984:	call   0x140007b80
   140004989:	mov    rdx,QWORD PTR [rip+0x8978]        # 0x14000d308
   140004990:	mov    r9d,ebp
   140004993:	mov    r8,rsi
   140004996:	mov    ecx,ebx
   140004998:	call   0x140007908
   14000499d:	mov    edx,DWORD PTR [rdi+0x24]
   1400049a0:	lea    rcx,[rip+0x6489]        # 0x14000ae30
   1400049a7:	mov    DWORD PTR [rsp+0x20],edx
   1400049ab:	mov    r9,rax
   1400049ae:	xor    edx,edx
   1400049b0:	mov    r8d,ebx
   1400049b3:	call   0x140007b80
   1400049b8:	mov    rbx,QWORD PTR [rsp+0x48]
   1400049bd:	mov    rbp,QWORD PTR [rsp+0x50]
   1400049c2:	mov    rsi,QWORD PTR [rsp+0x58]
   1400049c7:	add    rsp,0x30
   1400049cb:	pop    rdi
   1400049cc:	ret    
   1400049cd:	int3   
   1400049ce:	int3   
   1400049cf:	int3   
   1400049d0:	int3   
   1400049d1:	int3   
   1400049d2:	int3   
   1400049d3:	int3   
   1400049d4:	mov    r11,rsp
   1400049d7:	push   rbx
   1400049d8:	push   rbp
   1400049d9:	push   rsi
   1400049da:	push   rdi
   1400049db:	push   r12
   1400049dd:	push   r14
   1400049df:	push   r15
   1400049e1:	sub    rsp,0x40
   1400049e5:	lea    rax,[r11+0x18]
   1400049e9:	mov    edi,ecx
   1400049eb:	xor    r12d,r12d
   1400049ee:	lea    r8,[r11+0x20]
   1400049f2:	mov    QWORD PTR [r11-0x48],r12
   1400049f6:	mov    rbx,rdx
   1400049f9:	mov    QWORD PTR [r11-0x50],rax
   1400049fd:	or     r9d,0xffffffff
   140004a01:	lea    rax,[r11+0x10]
   140004a05:	xor    ecx,ecx
   140004a07:	lea    edx,[r12+0x1]
   140004a0c:	mov    QWORD PTR [r11-0x58],rax
   140004a10:	call   QWORD PTR [rip+0x5a82]        # 0x14000a498
   140004a16:	test   eax,eax
   140004a18:	jne    0x140004ad8
   140004a1e:	cmp    DWORD PTR [rsp+0x88],r12d
   140004a26:	je     0x140004ad8
   140004a2c:	test   edi,edi
   140004a2e:	je     0x140004aca
   140004a34:	add    rbx,0x8
   140004a38:	mov    r14d,edi
   140004a3b:	cmp    DWORD PTR [rbx+0x20],r12d
   140004a3f:	je     0x140004abc
   140004a41:	mov    ebp,r12d
   140004a44:	mov    rdi,QWORD PTR [rsp+0x98]
   140004a4c:	cmp    DWORD PTR [rsp+0x88],r12d
   140004a54:	jbe    0x140004abc
   140004a56:	mov    rsi,QWORD PTR [rdi]
   140004a59:	mov    r15,QWORD PTR [rdi+0x8]
   140004a5d:	test   rsi,rsi
   140004a60:	je     0x140004a7f
   140004a62:	cmp    WORD PTR [rsi],r12w
   140004a66:	je     0x140004a7f
   140004a68:	mov    rcx,QWORD PTR [rbx-0x8]
   140004a6c:	mov    rdx,rsi
   140004a6f:	call   QWORD PTR [rip+0x5833]        # 0x14000a2a8
   140004a75:	test   eax,eax
   140004a77:	je     0x140004aaa
   140004a79:	cmp    WORD PTR [rsi],r12w
   140004a7d:	jne    0x140004a99
   140004a7f:	mov    rax,QWORD PTR [rbx-0x8]
   140004a83:	cmp    WORD PTR [rax],r12w
   140004a87:	jne    0x140004a99
   140004a89:	mov    rcx,QWORD PTR [rbx]
   140004a8c:	mov    rdx,r15
   140004a8f:	call   QWORD PTR [rip+0x5813]        # 0x14000a2a8
   140004a95:	test   eax,eax
   140004a97:	je     0x140004aaa
   140004a99:	inc    ebp
   140004a9b:	add    rdi,0x28
   140004a9f:	cmp    ebp,DWORD PTR [rsp+0x88]
   140004aa6:	jb     0x140004a56
   140004aa8:	jmp    0x140004abc
   140004aaa:	mov    eax,DWORD PTR [rdi+0x24]
   140004aad:	mov    DWORD PTR [rbx+0x1c],eax
   140004ab0:	mov    eax,DWORD PTR [rdi+0x20]
   140004ab3:	mov    DWORD PTR [rbx+0x18],eax
   140004ab6:	mov    eax,DWORD PTR [rdi+0x18]
   140004ab9:	mov    DWORD PTR [rbx+0x14],eax
   140004abc:	add    rbx,0x30
   140004ac0:	sub    r14,0x1
   140004ac4:	jne    0x140004a3b
   140004aca:	mov    rcx,QWORD PTR [rsp+0x98]
   140004ad2:	call   QWORD PTR [rip+0x5960]        # 0x14000a438
   140004ad8:	xor    eax,eax
   140004ada:	add    rsp,0x40
   140004ade:	pop    r15
   140004ae0:	pop    r14
   140004ae2:	pop    r12
   140004ae4:	pop    rdi
   140004ae5:	pop    rsi
   140004ae6:	pop    rbp
   140004ae7:	pop    rbx
   140004ae8:	ret    
   140004ae9:	int3   
   140004aea:	int3   
   140004aeb:	int3   
   140004aec:	int3   
   140004aed:	int3   
   140004aee:	int3   
   140004aef:	int3   
   140004af0:	rex push rdi
   140004af2:	sub    rsp,0x90
   140004af9:	mov    rax,QWORD PTR [rip+0x8508]        # 0x14000d008
   140004b00:	xor    rax,rsp
   140004b03:	mov    QWORD PTR [rsp+0x80],rax
   140004b0b:	mov    r9,rdx
   140004b0e:	mov    r10,rcx
   140004b11:	call   0x140007ee0
   140004b16:	xor    edi,edi
   140004b18:	test   eax,eax
   140004b1a:	jne    0x140004b24
   140004b1c:	mov    rax,r10
   140004b1f:	jmp    0x140004bc9
   140004b24:	lea    rcx,[rip+0x13535]        # 0x140018060
   140004b2b:	mov    edx,0x51
   140004b30:	mov    r8,r9
   140004b33:	test   r9,r9
   140004b36:	jne    0x140004b3f
   140004b38:	lea    r8,[rip+0x6259]        # 0x14000ad98
   140004b3f:	call   QWORD PTR [rip+0x57db]        # 0x14000a320
   140004b45:	lea    rcx,[rip+0x13514]        # 0x140018060
   140004b4c:	call   QWORD PTR [rip+0x559e]        # 0x14000a0f0
   140004b52:	cmp    eax,0x1
   140004b55:	jne    0x140004b9b
   140004b57:	lea    r8,[rsp+0x20]
   140004b5c:	mov    DWORD PTR [rsp+0x20],0x28
   140004b64:	lea    rdx,[rsp+0x30]
   140004b69:	mov    WORD PTR [rip+0x134f4],di        # 0x140018064
   140004b70:	lea    rcx,[rip+0x134e9]        # 0x140018060
   140004b77:	call   QWORD PTR [rip+0x5493]        # 0x14000a010
   140004b7d:	cmp    eax,0x4b1
   140004b82:	je     0x140004b8f
   140004b84:	cmp    eax,0xea
   140004b89:	je     0x140004b8f
   140004b8b:	test   eax,eax
   140004b8d:	jne    0x140004bbe
   140004b8f:	mov    eax,0x5c
   140004b94:	mov    WORD PTR [rip+0x134c9],ax        # 0x140018064
   140004b9b:	movzx  ecx,WORD PTR [rip+0x134be]        # 0x140018060
   140004ba2:	mov    edx,0xffdf
   140004ba7:	lea    eax,[rcx-0x41]
   140004baa:	test   dx,ax
   140004bad:	je     0x140004bc7
   140004baf:	lea    eax,[rdx+0x20]
   140004bb2:	add    cx,ax
   140004bb5:	mov    WORD PTR [rip+0x134a4],cx        # 0x140018060
   140004bbc:	jmp    0x140004b45
   140004bbe:	lea    rax,[rip+0x1349b]        # 0x140018060
   140004bc5:	jmp    0x140004bc9
   140004bc7:	xor    eax,eax
   140004bc9:	mov    rcx,QWORD PTR [rsp+0x80]
   140004bd1:	xor    rcx,rsp
   140004bd4:	call   0x1400027c0
   140004bd9:	add    rsp,0x90
   140004be0:	pop    rdi
   140004be1:	ret    
   140004be2:	int3   
   140004be3:	int3   
   140004be4:	int3   
   140004be5:	int3   
   140004be6:	int3   
   140004be7:	int3   
   140004be8:	rex push rbp
   140004bea:	push   rbx
   140004beb:	push   rdi
   140004bec:	mov    rbp,rsp
   140004bef:	sub    rsp,0x30
   140004bf3:	xor    ebx,ebx
   140004bf5:	lea    r8,[rbp+0x28]
   140004bf9:	xor    edx,edx
   140004bfb:	mov    DWORD PTR [rbp+0x28],ebx
   140004bfe:	mov    rdi,rcx
   140004c01:	call   QWORD PTR [rip+0x5409]        # 0x14000a010
   140004c07:	cmp    eax,0xea
   140004c0c:	je     0x140004c20
   140004c0e:	xor    edx,edx
   140004c10:	mov    ecx,eax
   140004c12:	call   0x1400073fc
   140004c17:	lea    ecx,[rbx+0x2]
   140004c1a:	call   0x140007858
   140004c1f:	int3   
   140004c20:	mov    eax,DWORD PTR [rbp+0x28]
   140004c23:	lea    rdx,[rbp+0x38]
   140004c27:	lea    ecx,[rax+rax*1]
   140004c2a:	call   QWORD PTR [rip+0x57e8]        # 0x14000a418
   140004c30:	test   eax,eax
   140004c32:	je     0x140004c48
   140004c34:	xor    edx,edx
   140004c36:	mov    ecx,eax
   140004c38:	call   0x1400073fc
   140004c3d:	mov    ecx,0x2
   140004c42:	call   0x140007858
   140004c47:	int3   
   140004c48:	mov    rdx,QWORD PTR [rbp+0x38]
   140004c4c:	lea    r8,[rbp+0x28]
   140004c50:	mov    rcx,rdi
   140004c53:	call   QWORD PTR [rip+0x53b7]        # 0x14000a010
   140004c59:	test   eax,eax
   140004c5b:	je     0x140004c78
   140004c5d:	cmp    eax,0x4b1
   140004c62:	je     0x140004c78
   140004c64:	xor    edx,edx
   140004c66:	mov    ecx,eax
   140004c68:	call   0x1400073fc
   140004c6d:	mov    ecx,0x2
   140004c72:	call   0x140007858
   140004c77:	int3   
   140004c78:	or     rax,0xffffffffffffffff
   140004c7c:	inc    rax
   140004c7f:	cmp    WORD PTR [rdi+rax*2],bx
   140004c83:	jne    0x140004c7c
   140004c85:	mov    DWORD PTR [rbp+0x28],eax
   140004c88:	cmp    eax,0x2
   140004c8b:	jne    0x140004cb5
   140004c8d:	movzx  ecx,WORD PTR [rdi]
   140004c90:	mov    edx,0x103
   140004c95:	call   QWORD PTR [rip+0x564d]        # 0x14000a2e8
   140004c9b:	test   eax,eax
   140004c9d:	je     0x140004cb2
   140004c9f:	cmp    WORD PTR [rdi+0x2],0x3a
   140004ca4:	jne    0x140004cb2
   140004ca6:	mov    DWORD PTR [rip+0x8610],0x1266        # 0x14000d2c0
   140004cb0:	jmp    0x140004ce8
   140004cb2:	mov    eax,DWORD PTR [rbp+0x28]
   140004cb5:	mov    r8d,0x3
   140004cbb:	cmp    eax,r8d
   140004cbe:	jb     0x140004cde
   140004cc0:	lea    rdx,[rip+0x6079]        # 0x14000ad40
   140004cc7:	mov    rcx,rdi
   140004cca:	call   QWORD PTR [rip+0x5688]        # 0x14000a358
   140004cd0:	mov    DWORD PTR [rip+0x85e6],0x1267        # 0x14000d2c0
   140004cda:	test   eax,eax
   140004cdc:	je     0x140004ce8
   140004cde:	mov    DWORD PTR [rip+0x85d8],0x10e1        # 0x14000d2c0
   140004ce8:	mov    ecx,0x8
   140004ced:	lea    r8,[rbp+0x30]
   140004cf1:	lea    rdx,[rip+0x8598]        # 0x14000d290
   140004cf8:	call   0x140007514
   140004cfd:	mov    ebx,DWORD PTR [rbp+0x30]
   140004d00:	lea    r8,[rip+0xb5f9]        # 0x140010300
   140004d07:	mov    rdx,QWORD PTR [rip+0x858a]        # 0x14000d298
   140004d0e:	add    ebx,0x5
   140004d11:	mov    ecx,ebx
   140004d13:	mov    r9d,0x1000
   140004d19:	call   0x140007908
   140004d1e:	mov    r9,rax
   140004d21:	mov    QWORD PTR [rsp+0x20],rdi
   140004d26:	mov    r8d,ebx
   140004d29:	lea    rcx,[rip+0x60c0]        # 0x14000adf0
   140004d30:	xor    edx,edx
   140004d32:	call   0x140007b80
   140004d37:	mov    rdx,QWORD PTR [rip+0x856a]        # 0x14000d2a8
   140004d3e:	lea    r8,[rip+0xb5bb]        # 0x140010300
   140004d45:	mov    r9d,0x1000
   140004d4b:	mov    ecx,ebx
   140004d4d:	call   0x140007908
   140004d52:	mov    rdx,QWORD PTR [rbp+0x38]
   140004d56:	lea    rcx,[rip+0x6093]        # 0x14000adf0
   140004d5d:	mov    QWORD PTR [rsp+0x20],rdx
   140004d62:	mov    r9,rax
   140004d65:	xor    edx,edx
   140004d67:	mov    r8d,ebx
   140004d6a:	call   0x140007b80
   140004d6f:	mov    rdx,QWORD PTR [rip+0x8542]        # 0x14000d2b8
   140004d76:	lea    r8,[rip+0xb583]        # 0x140010300
   140004d7d:	mov    r9d,0x1000
   140004d83:	mov    ecx,ebx
   140004d85:	call   0x140007908
   140004d8a:	mov    rcx,QWORD PTR [rip+0x8537]        # 0x14000d2c8
   140004d91:	mov    r9,rax
   140004d94:	mov    QWORD PTR [rsp+0x20],rcx
   140004d99:	mov    r8d,ebx
   140004d9c:	lea    rcx,[rip+0x606d]        # 0x14000ae10
   140004da3:	xor    edx,edx
   140004da5:	call   0x140007b80
   140004daa:	mov    rcx,QWORD PTR [rbp+0x38]
   140004dae:	call   QWORD PTR [rip+0x5684]        # 0x14000a438
   140004db4:	add    rsp,0x30
   140004db8:	pop    rdi
   140004db9:	pop    rbx
   140004dba:	pop    rbp
   140004dbb:	ret    
   140004dbc:	int3   
   140004dbd:	int3   
   140004dbe:	int3   
   140004dbf:	int3   
   140004dc0:	int3   
   140004dc1:	int3   
   140004dc2:	int3   
   140004dc3:	int3   
   140004dc4:	mov    QWORD PTR [rsp+0x10],rbx
   140004dc9:	push   rbp
   140004dca:	push   rsi
   140004dcb:	push   rdi
   140004dcc:	push   r14
   140004dce:	push   r15
   140004dd0:	mov    rbp,rsp
   140004dd3:	sub    rsp,0x40
   140004dd7:	mov    r15,rcx
   140004dda:	mov    DWORD PTR [r8],0x40
   140004de1:	xor    ebx,ebx
   140004de3:	mov    r14,r8
   140004de6:	and    DWORD PTR [rcx],ebx
   140004de8:	mov    rsi,rdx
   140004deb:	mov    ecx,0xc00
   140004df0:	call   QWORD PTR [rip+0x5622]        # 0x14000a418
   140004df6:	test   eax,eax
   140004df8:	je     0x140004e0c
   140004dfa:	xor    edx,edx
   140004dfc:	mov    ecx,eax
   140004dfe:	call   0x1400073fc
   140004e03:	lea    ecx,[rbx+0x2]
   140004e06:	call   0x140007858
   140004e0b:	int3   
   140004e0c:	lea    rdx,[rbp+0x48]
   140004e10:	mov    DWORD PTR [rbp+0x40],0x1000
   140004e17:	mov    ecx,0x1000
   140004e1c:	call   QWORD PTR [rip+0x55f6]        # 0x14000a418
   140004e22:	xor    edx,edx
   140004e24:	test   eax,eax
   140004e26:	je     0x140004e3a
   140004e28:	mov    ecx,eax
   140004e2a:	call   0x1400073fc
   140004e2f:	mov    ecx,0x2
   140004e34:	call   0x140007858
   140004e39:	int3   
   140004e3a:	xor    r9d,r9d
   140004e3d:	lea    rax,[rbp-0x10]
   140004e41:	xor    r8d,r8d
   140004e44:	mov    QWORD PTR [rsp+0x20],rax
   140004e49:	lea    ecx,[r9+0x1]
   140004e4d:	call   QWORD PTR [rip+0x51cd]        # 0x14000a020
   140004e53:	test   eax,eax
   140004e55:	jne    0x140004fa5
   140004e5b:	mov    r8,QWORD PTR [rbp+0x48]
   140004e5f:	lea    r9,[rbp+0x40]
   140004e63:	mov    rcx,QWORD PTR [rbp-0x10]
   140004e67:	lea    rdx,[rbp+0x30]
   140004e6b:	or     DWORD PTR [rbp+0x30],0xffffffff
   140004e6f:	call   QWORD PTR [rip+0x51c3]        # 0x14000a038
   140004e75:	mov    edi,eax
   140004e77:	test   eax,eax
   140004e79:	je     0x140004e86
   140004e7b:	cmp    eax,0x103
   140004e80:	jne    0x140004fa5
   140004e86:	mov    edx,DWORD PTR [rbp+0x30]
   140004e89:	lea    ecx,[rdx+rbx*1]
   140004e8c:	cmp    ecx,DWORD PTR [r14]
   140004e8f:	jb     0x140004eb4
   140004e91:	add    ecx,0x40
   140004e94:	mov    r8,rsi
   140004e97:	mov    DWORD PTR [r14],ecx
   140004e9a:	lea    edx,[rcx+rcx*2]
   140004e9d:	mov    rcx,QWORD PTR [rsi]
   140004ea0:	shl    edx,0x4
   140004ea3:	call   QWORD PTR [rip+0x5597]        # 0x14000a440
   140004ea9:	test   eax,eax
   140004eab:	jne    0x140004fa5
   140004eb1:	mov    edx,DWORD PTR [rbp+0x30]
   140004eb4:	lea    rcx,[rbx+rbx*2]
   140004eb8:	xor    r10d,r10d
   140004ebb:	shl    rcx,0x4
   140004ebf:	add    rcx,QWORD PTR [rsi]
   140004ec2:	test   edx,edx
   140004ec4:	je     0x140004f62
   140004eca:	mov    r8,QWORD PTR [rbp+0x48]
   140004ece:	add    r8,0x18
   140004ed2:	cmp    QWORD PTR [r8-0x8],0x0
   140004ed7:	lea    rdx,[rip+0x5936]        # 0x14000a814
   140004ede:	mov    r11,QWORD PTR [rip+0x10edb]        # 0x140015dc0
   140004ee5:	mov    rax,rdx
   140004ee8:	cmovne rax,QWORD PTR [r8-0x8]
   140004eed:	mov    QWORD PTR [rcx],rax
   140004ef0:	mov    rax,rdx
   140004ef3:	cmp    QWORD PTR [r8],0x0
   140004ef7:	cmovne rax,QWORD PTR [r8]
   140004efb:	mov    QWORD PTR [rcx+0x8],rax
   140004eff:	mov    rax,rdx
   140004f02:	cmp    QWORD PTR [r8+0x10],0x0
   140004f07:	cmovne rax,QWORD PTR [r8+0x10]
   140004f0c:	mov    QWORD PTR [rcx+0x10],rax
   140004f10:	mov    eax,DWORD PTR [r8-0x14]
   140004f14:	mov    DWORD PTR [rcx+0x18],eax
   140004f17:	mov    rax,QWORD PTR [r8+0x10]
   140004f1b:	sub    r11,rax
   140004f1e:	movzx  r9d,WORD PTR [rax]
   140004f22:	movzx  edx,WORD PTR [rax+r11*1]
   140004f27:	sub    r9d,edx
   140004f2a:	jne    0x140004f34
   140004f2c:	add    rax,0x2
   140004f30:	test   edx,edx
   140004f32:	jne    0x140004f1e
   140004f34:	xor    eax,eax
   140004f36:	test   r9d,r9d
   140004f39:	sete   al
   140004f3c:	or     DWORD PTR [rcx+0x1c],0xffffffff
   140004f40:	and    DWORD PTR [rcx+0x24],0x0
   140004f44:	inc    r10d
   140004f47:	and    DWORD PTR [rcx+0x20],0x0
   140004f4b:	inc    ebx
   140004f4d:	mov    DWORD PTR [rcx+0x28],eax
   140004f50:	add    r8,0x30
   140004f54:	add    rcx,0x30
   140004f58:	cmp    r10d,DWORD PTR [rbp+0x30]
   140004f5c:	jb     0x140004ed2
   140004f62:	test   edi,edi
   140004f64:	jne    0x140004f96
   140004f66:	lea    rdx,[rbp+0x48]
   140004f6a:	mov    DWORD PTR [rbp+0x40],0x1000
   140004f71:	mov    ecx,0x1000
   140004f76:	call   QWORD PTR [rip+0x549c]        # 0x14000a418
   140004f7c:	test   eax,eax
   140004f7e:	je     0x140004e5b
   140004f84:	xor    edx,edx
   140004f86:	mov    ecx,eax
   140004f88:	call   0x1400073fc
   140004f8d:	lea    ecx,[rdi+0x2]
   140004f90:	call   0x140007858
   140004f95:	int3   
   140004f96:	mov    rcx,QWORD PTR [rbp-0x10]
   140004f9a:	call   QWORD PTR [rip+0x50a0]        # 0x14000a040
   140004fa0:	xor    eax,eax
   140004fa2:	mov    DWORD PTR [r15],ebx
   140004fa5:	mov    rbx,QWORD PTR [rsp+0x78]
   140004faa:	add    rsp,0x40
   140004fae:	pop    r15
   140004fb0:	pop    r14
   140004fb2:	pop    rdi
   140004fb3:	pop    rsi
   140004fb4:	pop    rbp
   140004fb5:	ret    
   140004fb6:	int3   
   140004fb7:	int3   
   140004fb8:	int3   
   140004fb9:	int3   
   140004fba:	int3   
   140004fbb:	int3   
   140004fbc:	mov    r11,rsp
   140004fbf:	mov    QWORD PTR [r11+0x10],rbx
   140004fc3:	push   rdi
   140004fc4:	sub    rsp,0x60
   140004fc8:	mov    rax,QWORD PTR [rip+0x8039]        # 0x14000d008
   140004fcf:	xor    rax,rsp
   140004fd2:	mov    QWORD PTR [rsp+0x58],rax
   140004fd7:	xor    ebx,ebx
   140004fd9:	mov    DWORD PTR [rsp+0x30],0x1
   140004fe1:	mov    rdi,rcx
   140004fe4:	mov    QWORD PTR [r11-0x30],rbx
   140004fe8:	lea    rax,[r11-0x30]
   140004fec:	mov    DWORD PTR [rsp+0x40],0xe
   140004ff4:	xor    r8d,r8d
   140004ff7:	mov    QWORD PTR [r11-0x48],rax
   140004ffb:	lea    r9d,[rbx+0x1]
   140004fff:	mov    rcx,0xffffffff80000001
   140005006:	lea    rdx,[rip+0x5563]        # 0x14000a570
   14000500d:	call   QWORD PTR [rip+0x51e5]        # 0x14000a1f8
   140005013:	test   eax,eax
   140005015:	jne    0x140005077
   140005017:	mov    rcx,QWORD PTR [rsp+0x38]
   14000501c:	lea    rax,[rsp+0x40]
   140005021:	mov    QWORD PTR [rsp+0x28],rax
   140005026:	lea    r9,[rsp+0x30]
   14000502b:	lea    rax,[rsp+0x48]
   140005030:	xor    r8d,r8d
   140005033:	lea    rdx,[rip+0x57e6]        # 0x14000a820
   14000503a:	mov    QWORD PTR [rsp+0x20],rax
   14000503f:	call   QWORD PTR [rip+0x51bb]        # 0x14000a200
   140005045:	test   eax,eax
   140005047:	jne    0x140005064
   140005049:	lea    rdx,[rip+0x57c8]        # 0x14000a818
   140005050:	lea    rcx,[rsp+0x48]
   140005055:	call   QWORD PTR [rip+0x524d]        # 0x14000a2a8
   14000505b:	test   eax,eax
   14000505d:	sete   bl
   140005060:	mov    DWORD PTR [rdi],ebx
   140005062:	jmp    0x14000506a
   140005064:	mov    DWORD PTR [rdi],0x1
   14000506a:	mov    rcx,QWORD PTR [rsp+0x38]
   14000506f:	call   QWORD PTR [rip+0x519b]        # 0x14000a210
   140005075:	jmp    0x14000507d
   140005077:	mov    DWORD PTR [rdi],0x1
   14000507d:	mov    rcx,QWORD PTR [rsp+0x58]
   140005082:	xor    rcx,rsp
   140005085:	call   0x1400027c0
   14000508a:	mov    rbx,QWORD PTR [rsp+0x78]
   14000508f:	add    rsp,0x60
   140005093:	pop    rdi
   140005094:	ret    
   140005095:	int3   
   140005096:	int3   
   140005097:	int3   
   140005098:	int3   
   140005099:	int3   
   14000509a:	int3   
   14000509b:	int3   
   14000509c:	mov    r11,rsp
   14000509f:	push   rbx
   1400050a0:	sub    rsp,0x50
   1400050a4:	lea    rax,[r11+0x10]
   1400050a8:	mov    ebx,ecx
   1400050aa:	mov    QWORD PTR [r11-0x18],rax
   1400050ae:	lea    rdx,[rip+0x54bb]        # 0x14000a570
   1400050b5:	lea    rax,[r11+0x18]
   1400050b9:	xor    r9d,r9d
   1400050bc:	mov    QWORD PTR [r11-0x20],rax
   1400050c0:	xor    r8d,r8d
   1400050c3:	and    QWORD PTR [r11-0x28],0x0
   1400050c8:	mov    rcx,0xffffffff80000001
   1400050cf:	mov    DWORD PTR [rsp+0x28],0xf003f
   1400050d7:	and    DWORD PTR [rsp+0x20],0x0
   1400050dc:	call   QWORD PTR [rip+0x5126]        # 0x14000a208
   1400050e2:	test   eax,eax
   1400050e4:	jne    0x140005137
   1400050e6:	lea    rax,[rip+0x5c93]        # 0x14000ad80
   1400050ed:	test   ebx,ebx
   1400050ef:	lea    rcx,[rip+0x5722]        # 0x14000a818
   1400050f6:	mov    r9d,0x1
   1400050fc:	cmove  rcx,rax
   140005100:	lea    rdx,[rip+0x5719]        # 0x14000a820
   140005107:	neg    ebx
   140005109:	sbb    eax,eax
   14000510b:	xor    r8d,r8d
   14000510e:	and    eax,0x2
   140005111:	add    eax,0x6
   140005114:	mov    DWORD PTR [rsp+0x28],eax
   140005118:	mov    QWORD PTR [rsp+0x20],rcx
   14000511d:	mov    rcx,QWORD PTR [rsp+0x70]
   140005122:	call   QWORD PTR [rip+0x50c8]        # 0x14000a1f0
   140005128:	mov    rcx,QWORD PTR [rsp+0x70]
   14000512d:	mov    ebx,eax
   14000512f:	call   QWORD PTR [rip+0x50db]        # 0x14000a210
   140005135:	mov    eax,ebx
   140005137:	add    rsp,0x50
   14000513b:	pop    rbx
   14000513c:	ret    
   14000513d:	int3   
   14000513e:	int3   
   14000513f:	int3   
   140005140:	int3   
   140005141:	int3   
   140005142:	int3   
   140005143:	int3   
   140005144:	sub    rsp,0x28
   140005148:	call   0x1400020d0
   14000514d:	test   rax,rax
   140005150:	lea    rcx,[rip+0x56bd]        # 0x14000a814
   140005157:	cmovne rcx,rax
   14000515b:	mov    QWORD PTR [rip+0x10c5e],rcx        # 0x140015dc0
   140005162:	add    rsp,0x28
   140005166:	ret    
   140005167:	int3   
   140005168:	int3   
   140005169:	int3   
   14000516a:	int3   
   14000516b:	int3   
   14000516c:	int3   
   14000516d:	int3   
   14000516e:	int3   
   14000516f:	int3   
   140005170:	sub    rsp,0x328
   140005177:	mov    rax,QWORD PTR [rip+0x7e8a]        # 0x14000d008
   14000517e:	xor    rax,rsp
   140005181:	mov    QWORD PTR [rsp+0x310],rax
   140005189:	mov    eax,0x4b4
   14000518e:	mov    edx,ecx
   140005190:	cmp    ecx,eax
   140005192:	ja     0x1400051e4
   140005194:	je     0x1400052be
   14000519a:	mov    eax,ecx
   14000519c:	test   ecx,ecx
   14000519e:	je     0x1400052dc
   1400051a4:	sub    eax,0x1f
   1400051a7:	je     0x1400052be
   1400051ad:	sub    eax,0x38
   1400051b0:	je     0x1400051da
   1400051b2:	sub    eax,0x53
   1400051b5:	je     0x1400052be
   1400051bb:	sub    eax,0x13d
   1400051c0:	je     0x1400051da
   1400051c2:	sub    eax,0x2ca
   1400051c7:	je     0x1400052be
   1400051cd:	cmp    eax,0x2
   1400051d0:	jne    0x14000522e
   1400051d2:	lea    ecx,[rax+0x41]
   1400051d5:	jmp    0x1400052ca
   1400051da:	mov    ecx,0x57
   1400051df:	jmp    0x1400052ca
   1400051e4:	cmp    ecx,0x4b6
   1400051ea:	jbe    0x1400052c5
   1400051f0:	cmp    ecx,0x4b7
   1400051f6:	je     0x1400052be
   1400051fc:	cmp    ecx,0x4b8
   140005202:	je     0x140005249
   140005204:	cmp    ecx,0x4c6
   14000520a:	je     0x14000523f
   14000520c:	cmp    ecx,0x89a
   140005212:	je     0x140005235
   140005214:	mov    ecx,0x8ca
   140005219:	cmp    edx,ecx
   14000521b:	je     0x1400052ca
   140005221:	mov    ecx,0x964
   140005226:	cmp    edx,ecx
   140005228:	je     0x1400052ca
   14000522e:	mov    ecx,edx
   140005230:	jmp    0x1400052ca
   140005235:	mov    ecx,0xebf
   14000523a:	jmp    0x1400052ca
   14000523f:	mov    ecx,0x85a
   140005244:	jmp    0x1400052ca
   140005249:	lea    r9,[rsp+0x90]
   140005251:	mov    DWORD PTR [rsp+0x20],0x40
   140005259:	mov    r8d,0x100
   14000525f:	lea    rdx,[rsp+0x110]
   140005267:	lea    rcx,[rsp+0x30]
   14000526c:	call   QWORD PTR [rip+0x4da6]        # 0x14000a018
   140005272:	test   eax,eax
   140005274:	jne    0x1400052be
   140005276:	mov    ecx,DWORD PTR [rsp+0x30]
   14000527a:	lea    r8d,[rax+0xa]
   14000527e:	lea    rdx,[rsp+0x40]
   140005283:	call   QWORD PTR [rip+0x503f]        # 0x14000a2c8
   140005289:	mov    edx,0x1
   14000528e:	mov    ecx,0xdae
   140005293:	mov    QWORD PTR [rip+0x100b6],rax        # 0x140015350
   14000529a:	call   0x1400073fc
   14000529f:	lea    rdx,[rsp+0x110]
   1400052a7:	lea    rcx,[rip+0x5ada]        # 0x14000ad88
   1400052ae:	call   0x140007b80
   1400052b3:	mov    ecx,0x2
   1400052b8:	call   0x1400045e8
   1400052bd:	int3   
   1400052be:	mov    ecx,0x3b
   1400052c3:	jmp    0x1400052ca
   1400052c5:	mov    ecx,0xe5f
   1400052ca:	xor    edx,edx
   1400052cc:	call   0x1400073fc
   1400052d1:	mov    ecx,0x2
   1400052d6:	call   0x140007858
   1400052db:	int3   
   1400052dc:	mov    rcx,QWORD PTR [rsp+0x310]
   1400052e4:	xor    rcx,rsp
   1400052e7:	call   0x1400027c0
   1400052ec:	add    rsp,0x328
   1400052f3:	ret    
   1400052f4:	int3   
   1400052f5:	int3   
   1400052f6:	int3   
   1400052f7:	int3   
   1400052f8:	int3   
   1400052f9:	int3   
   1400052fa:	int3   
   1400052fb:	int3   
   1400052fc:	rex push rbx
   1400052fe:	sub    rsp,0x20
   140005302:	xor    ebx,ebx
   140005304:	cmp    WORD PTR [rcx],bx
   140005307:	je     0x14000533f
   140005309:	cmp    WORD PTR [rcx+0x2],bx
   14000530d:	je     0x14000533f
   14000530f:	add    rcx,0x4
   140005313:	lea    rdx,[rip+0x5a5e]        # 0x14000ad78
   14000531a:	call   QWORD PTR [rip+0x4fb0]        # 0x14000a2d0
   140005320:	test   rax,rax
   140005323:	je     0x14000533f
   140005325:	lea    rdx,[rax+0x2]
   140005329:	lea    rcx,[rip+0x5ab0]        # 0x14000ade0
   140005330:	call   QWORD PTR [rip+0x4f72]        # 0x14000a2a8
   140005336:	test   eax,eax
   140005338:	sete   bl
   14000533b:	mov    eax,ebx
   14000533d:	jmp    0x140005341
   14000533f:	xor    eax,eax
   140005341:	add    rsp,0x20
   140005345:	pop    rbx
   140005346:	ret    
   140005347:	int3   
   140005348:	int3   
   140005349:	int3   
   14000534a:	int3   
   14000534b:	int3   
   14000534c:	int3   
   14000534d:	int3   
   14000534e:	int3   
   14000534f:	int3   
   140005350:	mov    rax,rsp
   140005353:	mov    QWORD PTR [rax+0x18],rbx
   140005357:	mov    DWORD PTR [rax+0x20],r9d
   14000535b:	mov    QWORD PTR [rax+0x8],rcx
   14000535f:	push   rbp
   140005360:	push   rsi
   140005361:	push   rdi
   140005362:	push   r12
   140005364:	push   r13
   140005366:	push   r14
   140005368:	push   r15
   14000536a:	lea    rbp,[rax-0x57]
   14000536e:	sub    rsp,0xb0
   140005375:	xor    esi,esi
   140005377:	mov    rbx,rcx
   14000537a:	mov    ecx,esi
   14000537c:	mov    DWORD PTR [rbp-0x41],esi
   14000537f:	mov    DWORD PTR [rbp+0x77],ecx
   140005382:	mov    r15,r8
   140005385:	mov    DWORD PTR [rbp+0x67],ecx
   140005388:	mov    r13,rdx
   14000538b:	mov    DWORD PTR [rbp-0x3d],esi
   14000538e:	mov    r12,rbx
   140005391:	mov    QWORD PTR [rbp-0x31],rsi
   140005395:	mov    edi,esi
   140005397:	mov    QWORD PTR [rbp-0x21],rsi
   14000539b:	mov    r14d,esi
   14000539e:	mov    DWORD PTR [rbp-0x39],esi
   1400053a1:	call   0x140005144
   1400053a6:	test   r13,r13
   1400053a9:	je     0x1400053f6
   1400053ab:	lea    eax,[rsi+0x5c]
   1400053ae:	cmp    WORD PTR [r13+0x0],ax
   1400053b3:	jne    0x1400053c0
   1400053b5:	lea    r8,[r13+0x4]
   1400053b9:	cmp    WORD PTR [r13+0x2],ax
   1400053be:	je     0x1400053c3
   1400053c0:	mov    r8,r13
   1400053c3:	mov    r9d,0x104
   1400053c9:	lea    rcx,[rip+0x12650]        # 0x140017a20
   1400053d0:	lea    edx,[r9+0x1]
   1400053d4:	call   QWORD PTR [rip+0x4ed6]        # 0x14000a2b0
   1400053da:	mov    edx,0x5c
   1400053df:	lea    rcx,[rip+0x1263a]        # 0x140017a20
   1400053e6:	call   QWORD PTR [rip+0x4eac]        # 0x14000a298
   1400053ec:	test   rax,rax
   1400053ef:	je     0x1400053fd
   1400053f1:	mov    WORD PTR [rax],si
   1400053f4:	jmp    0x1400053fd
   1400053f6:	mov    WORD PTR [rip+0x12623],si        # 0x140017a20
   1400053fd:	mov    edx,0x202
   140005402:	lea    rcx,[rip+0x12d07]        # 0x140018110
   140005409:	call   0x140004550
   14000540e:	xor    r10d,r10d
   140005411:	mov    esi,0x1
   140005416:	test   rbx,rbx
   140005419:	je     0x14000546a
   14000541b:	movzx  ecx,WORD PTR [rbx]
   14000541e:	movzx  eax,WORD PTR [rip+0x5a67]        # 0x14000ae8c
   140005425:	sub    ecx,eax
   140005427:	jne    0x140005436
   140005429:	movzx  ecx,WORD PTR [rbx+0x2]
   14000542d:	movzx  eax,WORD PTR [rip+0x5a5a]        # 0x14000ae8e
   140005434:	sub    ecx,eax
   140005436:	test   ecx,ecx
   140005438:	mov    rcx,rbx
   14000543b:	cmove  edi,esi
   14000543e:	xor    edx,edx
   140005440:	mov    DWORD PTR [rbp-0x39],edi
   140005443:	call   0x140004af0
   140005448:	xor    r10d,r10d
   14000544b:	mov    r12,rax
   14000544e:	test   rax,rax
   140005451:	jne    0x14000546a
   140005453:	xor    edx,edx
   140005455:	mov    ecx,0xf50
   14000545a:	call   0x1400073fc
   14000545f:	lea    ecx,[r12+0x2]
   140005464:	call   0x140007858
   140005469:	int3   
   14000546a:	mov    QWORD PTR [rbp+0x17],r10
   14000546e:	xorps  xmm0,xmm0
   140005471:	mov    DWORD PTR [rbp-0xd],r10d
   140005475:	mov    edi,0x2
   14000547a:	movdqu XMMWORD PTR [rbp-0x1],xmm0
   14000547f:	test   r12,r12
   140005482:	je     0x1400054ea
   140005484:	xor    r8d,r8d
   140005487:	lea    rdx,[rbp-0x29]
   14000548b:	mov    rcx,r12
   14000548e:	call   QWORD PTR [rip+0x4f9c]        # 0x14000a430
   140005494:	xor    r10d,r10d
   140005497:	test   eax,eax
   140005499:	je     0x1400054af
   14000549b:	xor    edx,edx
   14000549d:	mov    ecx,0xe84
   1400054a2:	call   0x1400073fc
   1400054a7:	mov    ecx,edi
   1400054a9:	call   0x140007858
   1400054ae:	int3   
   1400054af:	mov    eax,DWORD PTR [rbp-0x29]
   1400054b2:	cmp    eax,0x4000
   1400054b7:	jne    0x1400054be
   1400054b9:	mov    DWORD PTR [rbp-0xd],esi
   1400054bc:	jmp    0x1400054cf
   1400054be:	cmp    eax,0x4010
   1400054c3:	je     0x1400054cc
   1400054c5:	cmp    eax,0x4020
   1400054ca:	jne    0x1400054d5
   1400054cc:	mov    DWORD PTR [rbp-0xd],edi
   1400054cf:	mov    QWORD PTR [rbp-0x1],r12
   1400054d3:	jmp    0x1400054f9
   1400054d5:	xor    edx,edx
   1400054d7:	mov    ecx,0xe84
   1400054dc:	call   0x1400073fc
   1400054e1:	mov    rcx,rdi
   1400054e4:	call   0x140007858
   1400054e9:	int3   
   1400054ea:	lea    rax,[rip+0x5323]        # 0x14000a814
   1400054f1:	mov    DWORD PTR [rbp-0xd],r10d
   1400054f5:	mov    QWORD PTR [rbp-0x1],rax
   1400054f9:	mov    rax,QWORD PTR [rbp+0x7]
   1400054fd:	test   r13,r13
   140005500:	movzx  esi,r10w
   140005504:	cmovne rax,r13
   140005508:	cmp    QWORD PTR [rip+0x11af1],r10        # 0x140017000
   14000550f:	mov    QWORD PTR [rbp+0x7],rax
   140005513:	je     0x14000568f
   140005519:	lea    rbx,[rip+0x11ae0]        # 0x140017000
   140005520:	lea    rax,[rip+0x7c71]        # 0x14000d198
   140005527:	or     r8,0xffffffffffffffff
   14000552b:	inc    r8
   14000552e:	cmp    WORD PTR [rax+r8*2],r10w
   140005533:	jne    0x14000552b
   140005535:	mov    rcx,QWORD PTR [rbx]
   140005538:	mov    rdx,rax
   14000553b:	call   QWORD PTR [rip+0x4dc7]        # 0x14000a308
   140005541:	xor    ecx,ecx
   140005543:	test   eax,eax
   140005545:	jne    0x14000558e
   140005547:	mov    rcx,QWORD PTR [rbx]
   14000554a:	mov    DWORD PTR [rbp-0x41],0x1
   140005551:	call   0x140009268
   140005556:	test   rax,rax
   140005559:	je     0x1400056dc
   14000555f:	lea    rdx,[rbp-0x19]
   140005563:	mov    rcx,rax
   140005566:	call   0x140008910
   14000556b:	xor    r10d,r10d
   14000556e:	test   eax,eax
   140005570:	jne    0x1400056c3
   140005576:	mov    ecx,r10d
   140005579:	lea    eax,[r10+0x1]
   14000557d:	cmp    DWORD PTR [rbp-0x19],eax
   140005580:	sete   cl
   140005583:	mov    DWORD PTR [rbp+0x77],ecx
   140005586:	mov    DWORD PTR [rbp+0x67],ecx
   140005589:	jmp    0x14000566f
   14000558e:	or     r8,0xffffffffffffffff
   140005592:	lea    rax,[rip+0x7bdf]        # 0x14000d178
   140005599:	inc    r8
   14000559c:	cmp    WORD PTR [rax+r8*2],cx
   1400055a1:	jne    0x140005599
   1400055a3:	mov    rcx,QWORD PTR [rbx]
   1400055a6:	mov    rdx,rax
   1400055a9:	call   QWORD PTR [rip+0x4d59]        # 0x14000a308
   1400055af:	mov    rcx,QWORD PTR [rbx]
   1400055b2:	xor    r10d,r10d
   1400055b5:	test   eax,eax
   1400055b7:	jne    0x1400055e2
   1400055b9:	call   0x140009268
   1400055be:	xor    r10d,r10d
   1400055c1:	mov    QWORD PTR [rbp-0x31],rax
   1400055c5:	test   rax,rax
   1400055c8:	jne    0x140005667
   1400055ce:	xor    edx,edx
   1400055d0:	mov    ecx,0xdb1
   1400055d5:	call   0x1400073fc
   1400055da:	mov    ecx,edi
   1400055dc:	call   0x140007858
   1400055e1:	int3   
   1400055e2:	lea    r9,[rip+0x7bdf]        # 0x14000d1c8
   1400055e9:	mov    rax,rcx
   1400055ec:	sub    r9,rcx
   1400055ef:	movzx  r8d,WORD PTR [rax]
   1400055f3:	movzx  edx,WORD PTR [rax+r9*1]
   1400055f8:	sub    r8d,edx
   1400055fb:	jne    0x140005604
   1400055fd:	add    rax,rdi
   140005600:	test   edx,edx
   140005602:	jne    0x1400055ef
   140005604:	test   r8d,r8d
   140005607:	jne    0x140005612
   140005609:	mov    DWORD PTR [rbp-0x3d],0x1
   140005610:	jmp    0x140005667
   140005612:	lea    r9,[rip+0x7b97]        # 0x14000d1b0
   140005619:	mov    rax,rcx
   14000561c:	sub    r9,rcx
   14000561f:	movzx  r8d,WORD PTR [rax]
   140005623:	movzx  edx,WORD PTR [rax+r9*1]
   140005628:	sub    r8d,edx
   14000562b:	jne    0x140005634
   14000562d:	add    rax,rdi
   140005630:	test   edx,edx
   140005632:	jne    0x14000561f
   140005634:	test   r8d,r8d
   140005637:	jne    0x140005642
   140005639:	lea    r14d,[r8+0x1]
   14000563d:	mov    eax,r14d
   140005640:	jmp    0x14000566c
   140005642:	lea    r8,[rip+0x7b3f]        # 0x14000d188
   140005649:	sub    r8,rcx
   14000564c:	movzx  edx,WORD PTR [rcx]
   14000564f:	movzx  eax,WORD PTR [rcx+r8*1]
   140005654:	sub    edx,eax
   140005656:	jne    0x14000565f
   140005658:	add    rcx,rdi
   14000565b:	test   eax,eax
   14000565d:	jne    0x14000564c
   14000565f:	test   edx,edx
   140005661:	je     0x1400056f0
   140005667:	mov    eax,0x1
   14000566c:	mov    ecx,DWORD PTR [rbp+0x77]
   14000566f:	add    si,ax
   140005672:	lea    rdx,[rip+0x11987]        # 0x140017000
   140005679:	movzx  eax,si
   14000567c:	lea    rbx,[rdx+rax*8]
   140005680:	cmp    QWORD PTR [rbx],r10
   140005683:	jne    0x140005520
   140005689:	cmp    DWORD PTR [rbp-0x41],r10d
   14000568d:	jne    0x1400056a1
   14000568f:	lea    rcx,[rbp+0x67]
   140005693:	call   0x140004fbc
   140005698:	mov    ecx,DWORD PTR [rbp+0x67]
   14000569b:	xor    r10d,r10d
   14000569e:	mov    DWORD PTR [rbp+0x77],ecx
   1400056a1:	mov    rax,QWORD PTR [rbp-0x31]
   1400056a5:	test   rax,rax
   1400056a8:	je     0x140005704
   1400056aa:	test   r14d,r14d
   1400056ad:	je     0x140005704
   1400056af:	xor    edx,edx
   1400056b1:	mov    ecx,0xdb6
   1400056b6:	call   0x1400073fc
   1400056bb:	mov    ecx,edi
   1400056bd:	call   0x140007858
   1400056c2:	int3   
   1400056c3:	lea    rax,[rip+0x11936]        # 0x140017000
   1400056ca:	movzx  edx,si
   1400056cd:	mov    ecx,0xf70
   1400056d2:	mov    rdx,QWORD PTR [rax+rdx*8]
   1400056d6:	call   0x1400073d4
   1400056db:	int3   
   1400056dc:	xor    edx,edx
   1400056de:	mov    ecx,0xdb1
   1400056e3:	call   0x1400073fc
   1400056e8:	mov    ecx,edi
   1400056ea:	call   0x140007858
   1400056ef:	int3   
   1400056f0:	xor    edx,edx
   1400056f2:	mov    ecx,0xdb6
   1400056f7:	call   0x1400073fc
   1400056fc:	mov    ecx,edi
   1400056fe:	call   0x140007858
   140005703:	int3   
   140005704:	movsxd rbx,DWORD PTR [rbp-0x3d]
   140005708:	test   ebx,ebx
   14000570a:	je     0x14000583e
   140005710:	test   r14d,r14d
   140005713:	je     0x140005729
   140005715:	xor    edx,edx
   140005717:	mov    ecx,0xdb6
   14000571c:	call   0x1400073fc
   140005721:	mov    ecx,edi
   140005723:	call   0x140007858
   140005728:	int3   
   140005729:	lea    rsi,[rip+0x12bf0]        # 0x140018320
   140005730:	test   rax,rax
   140005733:	je     0x140005750
   140005735:	mov    r9d,0x201
   14000573b:	mov    r8,rax
   14000573e:	mov    rcx,rsi
   140005741:	lea    edx,[r9+0x1]
   140005745:	call   QWORD PTR [rip+0x4b65]        # 0x14000a2b0
   14000574b:	xor    r10d,r10d
   14000574e:	jmp    0x140005758
   140005750:	mov    WORD PTR [rip+0x12bc8],r10w        # 0x140018320
   140005758:	test   r15,r15
   14000575b:	je     0x1400057b9
   14000575d:	movzx  ecx,WORD PTR [r15]
   140005761:	movzx  eax,WORD PTR [rip+0x55e0]        # 0x14000ad48
   140005768:	sub    ecx,eax
   14000576a:	jne    0x14000577a
   14000576c:	movzx  ecx,WORD PTR [r15+0x2]
   140005771:	movzx  eax,WORD PTR [rip+0x55d2]        # 0x14000ad4a
   140005778:	sub    ecx,eax
   14000577a:	test   ecx,ecx
   14000577c:	je     0x1400057b9
   14000577e:	mov    rcx,r15
   140005781:	call   0x1400089dc
   140005786:	test   ax,ax
   140005789:	je     0x14000579d
   14000578b:	movzx  ecx,ax
   14000578e:	xor    edx,edx
   140005790:	call   0x1400073fc
   140005795:	mov    ecx,edi
   140005797:	call   0x140007858
   14000579c:	int3   
   14000579d:	mov    r9d,0x100
   1400057a3:	lea    rcx,[rip+0x12966]        # 0x140018110
   1400057aa:	mov    r8,r15
   1400057ad:	lea    edx,[r9+0x1]
   1400057b1:	call   QWORD PTR [rip+0x4af9]        # 0x14000a2b0
   1400057b7:	jmp    0x1400057c1
   1400057b9:	mov    WORD PTR [rip+0x1294f],r10w        # 0x140018110
   1400057c1:	call   0x140002e90
   1400057c6:	xor    r10d,r10d
   1400057c9:	test   al,al
   1400057cb:	je     0x140005810
   1400057cd:	mov    DWORD PTR [rsp+0x40],0x102
   1400057d5:	lea    rax,[rip+0x12934]        # 0x140018110
   1400057dc:	mov    QWORD PTR [rsp+0x38],r10
   1400057e1:	lea    rcx,[rip+0x12238]        # 0x140017a20
   1400057e8:	mov    DWORD PTR [rsp+0x30],0x100
   1400057f0:	mov    r9,rsi
   1400057f3:	mov    QWORD PTR [rsp+0x28],rax
   1400057f8:	xor    r8d,r8d
   1400057fb:	xor    edx,edx
   1400057fd:	mov    DWORD PTR [rsp+0x20],0x201
   140005805:	call   QWORD PTR [rip+0x147f5]        # 0x14001a000
   14000580b:	xor    r10d,r10d
   14000580e:	jmp    0x140005815
   140005810:	mov    eax,0x32
   140005815:	test   eax,eax
   140005817:	je     0x14000582a
   140005819:	xor    edx,edx
   14000581b:	mov    ecx,eax
   14000581d:	call   0x1400073fc
   140005822:	mov    ecx,edi
   140005824:	call   0x140007858
   140005829:	int3   
   14000582a:	lea    rax,[rip+0x128df]        # 0x140018110
   140005831:	mov    QWORD PTR [rbp-0x31],rsi
   140005835:	mov    QWORD PTR [rbp-0x21],rax
   140005839:	jmp    0x1400058df
   14000583e:	test   r15,r15
   140005841:	je     0x1400058e2
   140005847:	test   r14d,r14d
   14000584a:	je     0x140005860
   14000584c:	xor    edx,edx
   14000584e:	mov    ecx,0xdb6
   140005853:	call   0x1400073fc
   140005858:	mov    ecx,edi
   14000585a:	call   0x140007858
   14000585f:	int3   
   140005860:	movzx  edx,WORD PTR [r15]
   140005864:	movzx  eax,WORD PTR [rip+0x54dd]        # 0x14000ad48
   14000586b:	sub    edx,eax
   14000586d:	jne    0x14000587d
   14000586f:	movzx  edx,WORD PTR [r15+0x2]
   140005874:	movzx  eax,WORD PTR [rip+0x54cf]        # 0x14000ad4a
   14000587b:	sub    edx,eax
   14000587d:	test   edx,edx
   14000587f:	jne    0x1400058b9
   140005881:	lea    rsi,[rip+0x12888]        # 0x140018110
   140005888:	mov    QWORD PTR [rip+0xfac1],r13        # 0x140015350
   14000588f:	mov    r15,rsi
   140005892:	call   0x1400079d0
   140005897:	mov    rcx,rsi
   14000589a:	call   0x1400089dc
   14000589f:	xor    r10d,r10d
   1400058a2:	test   ax,ax
   1400058a5:	je     0x1400058db
   1400058a7:	movzx  ecx,ax
   1400058aa:	xor    edx,edx
   1400058ac:	call   0x1400073fc
   1400058b1:	mov    ecx,edi
   1400058b3:	call   0x140007858
   1400058b8:	int3   
   1400058b9:	mov    rcx,r15
   1400058bc:	call   0x1400089dc
   1400058c1:	xor    r10d,r10d
   1400058c4:	test   ax,ax
   1400058c7:	je     0x1400058db
   1400058c9:	movzx  ecx,ax
   1400058cc:	xor    edx,edx
   1400058ce:	call   0x1400073fc
   1400058d3:	mov    ecx,edi
   1400058d5:	call   0x140007858
   1400058da:	int3   
   1400058db:	mov    QWORD PTR [rbp-0x21],r15
   1400058df:	mov    ecx,DWORD PTR [rbp+0x77]
   1400058e2:	mov    rsi,rbx
   1400058e5:	movsxd r14,r14d
   1400058e8:	mov    ebx,r10d
   1400058eb:	test   ecx,ecx
   1400058ed:	je     0x140005904
   1400058ef:	mov    rdx,r13
   1400058f2:	mov    rcx,r12
   1400058f5:	call   0x140004604
   1400058fa:	test   eax,eax
   1400058fc:	mov    eax,0x1
   140005901:	cmovne ebx,eax
   140005904:	test   r15,r15
   140005907:	jne    0x14000591d
   140005909:	test   rsi,rsi
   14000590c:	jne    0x14000591d
   14000590e:	or     ebx,0x808
   140005914:	test   r14,r14
   140005917:	je     0x14000591d
   140005919:	bts    ebx,0xc
   14000591d:	mov    r8,QWORD PTR [rbp-0x31]
   140005921:	lea    rcx,[rbp-0x11]
   140005925:	mov    rdx,QWORD PTR [rbp-0x21]
   140005929:	mov    r9d,ebx
   14000592c:	call   QWORD PTR [rip+0x46fe]        # 0x14000a030
   140005932:	mov    ebx,eax
   140005934:	mov    ecx,eax
   140005936:	test   eax,eax
   140005938:	je     0x1400059f9
   14000593e:	sub    ecx,0x5
   140005941:	je     0x14000595a
   140005943:	sub    ecx,0x3e
   140005946:	je     0x1400059a7
   140005948:	sub    ecx,0x12
   14000594b:	je     0x140005961
   14000594d:	sub    ecx,0x1
   140005950:	je     0x14000595a
   140005952:	cmp    ecx,0x4d8
   140005958:	jne    0x1400059b3
   14000595a:	mov    ecx,ebx
   14000595c:	call   0x140005170
   140005961:	mov    rcx,QWORD PTR [rbp+0x5f]
   140005965:	call   0x140007ee0
   14000596a:	test   eax,eax
   14000596c:	je     0x1400059e7
   14000596e:	mov    eax,0xffff
   140005973:	lea    rcx,[rip+0x53ce]        # 0x14000ad48
   14000597a:	add    WORD PTR [r12],ax
   14000597f:	mov    rdx,r12
   140005982:	call   0x140004af0
   140005987:	xor    r10d,r10d
   14000598a:	mov    r12,rax
   14000598d:	test   rax,rax
   140005990:	je     0x1400059d3
   140005992:	mov    QWORD PTR [rbp-0x1],rax
   140005996:	cmp    ebx,0x55
   140005999:	jne    0x140005b04
   14000599f:	mov    ecx,DWORD PTR [rbp+0x77]
   1400059a2:	jmp    0x1400058e8
   1400059a7:	mov    rcx,r13
   1400059aa:	call   0x1400052fc
   1400059af:	test   eax,eax
   1400059b1:	jne    0x1400059bf
   1400059b3:	mov    ecx,ebx
   1400059b5:	call   0x140005170
   1400059ba:	xor    r10d,r10d
   1400059bd:	jmp    0x140005996
   1400059bf:	xor    edx,edx
   1400059c1:	mov    ecx,0xe9f
   1400059c6:	call   0x1400073fc
   1400059cb:	mov    ecx,edi
   1400059cd:	call   0x140007858
   1400059d2:	int3   
   1400059d3:	xor    edx,edx
   1400059d5:	mov    ecx,0xf50
   1400059da:	call   0x1400073fc
   1400059df:	mov    ecx,edi
   1400059e1:	call   0x140007858
   1400059e6:	int3   
   1400059e7:	xor    edx,edx
   1400059e9:	lea    ecx,[rdx+0x55]
   1400059ec:	call   0x1400073fc
   1400059f1:	mov    ecx,edi
   1400059f3:	call   0x140007858
   1400059f8:	int3   
   1400059f9:	xor    esi,esi
   1400059fb:	cmp    DWORD PTR [rbp-0x41],esi
   1400059fe:	je     0x140005a1d
   140005a00:	mov    ecx,DWORD PTR [rbp+0x77]
   140005a03:	call   0x14000509c
   140005a08:	test   eax,eax
   140005a0a:	je     0x140005a1d
   140005a0c:	xor    edx,edx
   140005a0e:	mov    ecx,eax
   140005a10:	call   0x1400073fc
   140005a15:	mov    ecx,edi
   140005a17:	call   0x140007858
   140005a1c:	int3   
   140005a1d:	cmp    DWORD PTR [rbp+0x7f],esi
   140005a20:	je     0x140005af4
   140005a26:	mov    rcx,QWORD PTR [rbp+0x5f]
   140005a2a:	call   0x140007ee0
   140005a2f:	lea    rcx,[rip+0x4b12]        # 0x14000a548
   140005a36:	mov    r15d,0x800
   140005a3c:	lea    r14,[rip+0x105bd]        # 0x140016000
   140005a43:	test   eax,eax
   140005a45:	je     0x140005aa8
   140005a47:	mov    rbx,QWORD PTR [rip+0xf8f2]        # 0x140015340
   140005a4e:	lea    rax,[rbp+0x77]
   140005a52:	mov    QWORD PTR [rsp+0x30],rax
   140005a57:	mov    r9d,r15d
   140005a5a:	mov    QWORD PTR [rsp+0x28],rcx
   140005a5f:	mov    r8,r14
   140005a62:	lea    rcx,[rip+0xf8e7]        # 0x140015350
   140005a69:	mov    QWORD PTR [rip+0xf8e0],r12        # 0x140015350
   140005a70:	mov    edx,edi
   140005a72:	mov    QWORD PTR [rip+0xf8df],r13        # 0x140015358
   140005a79:	mov    DWORD PTR [rsp+0x20],0xf4f
   140005a81:	call   0x140009290
   140005a86:	test   eax,eax
   140005a88:	mov    r8d,0x1
   140005a8e:	mov    rdx,r14
   140005a91:	cmovne rbx,QWORD PTR [rip+0xf867]        # 0x140015300
   140005a99:	mov    rcx,rbx
   140005a9c:	call   0x140009468
   140005aa1:	lea    rcx,[rip+0x4aa0]        # 0x14000a548
   140005aa8:	mov    rbx,QWORD PTR [rip+0xf891]        # 0x140015340
   140005aaf:	lea    rax,[rbp+0x77]
   140005ab3:	mov    QWORD PTR [rsp+0x30],rax
   140005ab8:	mov    r9d,r15d
   140005abb:	mov    QWORD PTR [rsp+0x28],rcx
   140005ac0:	mov    r8,r14
   140005ac3:	lea    rcx,[rip+0xf886]        # 0x140015350
   140005aca:	mov    DWORD PTR [rsp+0x20],0xdac
   140005ad2:	xor    edx,edx
   140005ad4:	call   0x140009290
   140005ad9:	test   eax,eax
   140005adb:	mov    r8d,0x1
   140005ae1:	mov    rdx,r14
   140005ae4:	cmovne rbx,QWORD PTR [rip+0xf814]        # 0x140015300
   140005aec:	mov    rcx,rbx
   140005aef:	call   0x140009468
   140005af4:	cmp    DWORD PTR [rbp-0x39],esi
   140005af7:	je     0x140005b04
   140005af9:	movzx  ecx,WORD PTR [r12]
   140005afe:	call   0x1400045e8
   140005b03:	int3   
   140005b04:	mov    rbx,QWORD PTR [rsp+0x100]
   140005b0c:	add    rsp,0xb0
   140005b13:	pop    r15
   140005b15:	pop    r14
   140005b17:	pop    r13
   140005b19:	pop    r12
   140005b1b:	pop    rdi
   140005b1c:	pop    rsi
   140005b1d:	pop    rbp
   140005b1e:	ret    
   140005b1f:	int3   
   140005b20:	int3   
   140005b21:	int3   
   140005b22:	int3   
   140005b23:	int3   
   140005b24:	int3   
   140005b25:	int3   
   140005b26:	int3   
   140005b27:	int3   
   140005b28:	mov    QWORD PTR [rsp+0x18],rbx
   140005b2d:	mov    QWORD PTR [rsp+0x20],rsi
   140005b32:	push   rbp
   140005b33:	push   rdi
   140005b34:	push   r15
   140005b36:	lea    rbp,[rsp-0x590]
   140005b3e:	sub    rsp,0x690
   140005b45:	mov    rax,QWORD PTR [rip+0x74bc]        # 0x14000d008
   140005b4c:	xor    rax,rsp
   140005b4f:	mov    QWORD PTR [rbp+0x580],rax
   140005b56:	mov    rsi,rdx
   140005b59:	mov    rdi,rcx
   140005b5c:	call   0x140005144
   140005b61:	lea    rdx,[rsp+0x50]
   140005b66:	call   0x140008e5c
   140005b6b:	xor    r15d,r15d
   140005b6e:	test   eax,eax
   140005b70:	je     0x140005b85
   140005b72:	xor    edx,edx
   140005b74:	mov    ecx,eax
   140005b76:	call   0x1400073fc
   140005b7b:	lea    ecx,[r15+0x2]
   140005b7f:	call   0x140007858
   140005b84:	int3   
   140005b85:	mov    rbx,QWORD PTR [rsp+0x50]
   140005b8a:	lea    rcx,[rbp+0x370]
   140005b91:	mov    edx,0x101
   140005b96:	mov    r8,QWORD PTR [rbx+0x18]
   140005b9a:	call   QWORD PTR [rip+0x4780]        # 0x14000a320
   140005ba0:	lea    r8,[rip+0x51c9]        # 0x14000ad70
   140005ba7:	mov    edx,0x105
   140005bac:	lea    rcx,[rbp+0x160]
   140005bb3:	call   QWORD PTR [rip+0x4767]        # 0x14000a320
   140005bb9:	mov    r8,QWORD PTR [rbx+0x88]
   140005bc0:	lea    rcx,[rbp+0x160]
   140005bc7:	mov    edx,0x105
   140005bcc:	call   QWORD PTR [rip+0x46e6]        # 0x14000a2b8
   140005bd2:	mov    rcx,rbx
   140005bd5:	call   QWORD PTR [rip+0x485d]        # 0x14000a438
   140005bdb:	lea    r9,[rsp+0x48]
   140005be0:	mov    r8d,0xb
   140005be6:	lea    rdx,[rbp+0x370]
   140005bed:	lea    rcx,[rbp+0x160]
   140005bf4:	call   QWORD PTR [rip+0x4866]        # 0x14000a460
   140005bfa:	test   eax,eax
   140005bfc:	je     0x140005c15
   140005bfe:	xor    edx,edx
   140005c00:	mov    ecx,0xf4b
   140005c05:	call   0x1400073fc
   140005c0a:	mov    ecx,0x2
   140005c0f:	call   0x140007858
   140005c14:	int3   
   140005c15:	mov    r8,QWORD PTR [rsp+0x48]
   140005c1a:	lea    rcx,[rsp+0x60]
   140005c1f:	mov    edx,0x100
   140005c24:	mov    r8,QWORD PTR [r8+0x30]
   140005c28:	call   QWORD PTR [rip+0x46f2]        # 0x14000a320
   140005c2e:	mov    rcx,QWORD PTR [rsp+0x48]
   140005c33:	call   QWORD PTR [rip+0x47ff]        # 0x14000a438
   140005c39:	cmp    WORD PTR [rsp+0x60],r15w
   140005c3f:	jne    0x140005c58
   140005c41:	xor    edx,edx
   140005c43:	mov    ecx,0xf4c
   140005c48:	call   0x1400073fc
   140005c4d:	mov    ecx,0x2
   140005c52:	call   0x140007858
   140005c57:	int3   
   140005c58:	xor    r8d,r8d
   140005c5b:	lea    rdx,[rsp+0x40]
   140005c60:	lea    rcx,[rsp+0x60]
   140005c65:	call   QWORD PTR [rip+0x47c5]        # 0x14000a430
   140005c6b:	test   eax,eax
   140005c6d:	jne    0x140005da6
   140005c73:	cmp    DWORD PTR [rsp+0x40],0x1000
   140005c7b:	jne    0x140005da6
   140005c81:	lea    ebx,[rax+0x5c]
   140005c84:	mov    edx,ebx
   140005c86:	lea    rcx,[rsp+0x64]
   140005c8b:	call   QWORD PTR [rip+0x4607]        # 0x14000a298
   140005c91:	test   rax,rax
   140005c94:	je     0x140005cb4
   140005c96:	mov    edx,ebx
   140005c98:	lea    rcx,[rax+0x2]
   140005c9c:	call   QWORD PTR [rip+0x45f6]        # 0x14000a298
   140005ca2:	mov    rbx,rax
   140005ca5:	test   rax,rax
   140005ca8:	je     0x140005cb4
   140005caa:	mov    WORD PTR [rax],r15w
   140005cae:	add    rbx,0x2
   140005cb2:	jmp    0x140005cbb
   140005cb4:	lea    rbx,[rip+0x4b59]        # 0x14000a814
   140005cbb:	test   rdi,rdi
   140005cbe:	je     0x140005ce7
   140005cc0:	xor    edx,edx
   140005cc2:	mov    rcx,rdi
   140005cc5:	call   0x140004af0
   140005cca:	mov    rdi,rax
   140005ccd:	test   rax,rax
   140005cd0:	jne    0x140005ce7
   140005cd2:	xor    edx,edx
   140005cd4:	mov    ecx,0xf50
   140005cd9:	call   0x1400073fc
   140005cde:	lea    ecx,[rdi+0x2]
   140005ce1:	call   0x140007858
   140005ce6:	int3   
   140005ce7:	mov    r8,rsi
   140005cea:	mov    DWORD PTR [rsp+0x20],r15d
   140005cef:	lea    rdx,[rsp+0x60]
   140005cf4:	mov    rcx,rdi
   140005cf7:	call   0x140005350
   140005cfc:	lea    rax,[rsp+0x60]
   140005d01:	mov    QWORD PTR [rip+0xf660],rbx        # 0x140015368
   140005d08:	mov    rbx,QWORD PTR [rip+0xf631]        # 0x140015340
   140005d0f:	lea    r8,[rip+0x102ea]        # 0x140016000
   140005d16:	mov    QWORD PTR [rip+0xf63b],rax        # 0x140015358
   140005d1d:	lea    rcx,[rip+0xf62c]        # 0x140015350
   140005d24:	lea    rax,[rsp+0x50]
   140005d29:	mov    QWORD PTR [rip+0xf620],rdi        # 0x140015350
   140005d30:	mov    QWORD PTR [rsp+0x30],rax
   140005d35:	mov    r9d,0x800
   140005d3b:	lea    rax,[rip+0x4806]        # 0x14000a548
   140005d42:	mov    QWORD PTR [rip+0xf617],rdi        # 0x140015360
   140005d49:	mov    QWORD PTR [rsp+0x28],rax
   140005d4e:	mov    edx,0x4
   140005d53:	mov    DWORD PTR [rsp+0x20],0xf4e
   140005d5b:	call   0x140009290
   140005d60:	test   eax,eax
   140005d62:	lea    rdx,[rip+0x10297]        # 0x140016000
   140005d69:	mov    r8d,0x1
   140005d6f:	cmovne rbx,QWORD PTR [rip+0xf589]        # 0x140015300
   140005d77:	mov    rcx,rbx
   140005d7a:	call   0x140009468
   140005d7f:	mov    rcx,QWORD PTR [rbp+0x580]
   140005d86:	xor    rcx,rsp
   140005d89:	call   0x1400027c0
   140005d8e:	lea    r11,[rsp+0x690]
   140005d96:	mov    rbx,QWORD PTR [r11+0x30]
   140005d9a:	mov    rsi,QWORD PTR [r11+0x38]
   140005d9e:	mov    rsp,r11
   140005da1:	pop    r15
   140005da3:	pop    rdi
   140005da4:	pop    rbp
   140005da5:	ret    
   140005da6:	lea    rdx,[rsp+0x60]
   140005dab:	mov    ecx,0xf4d
   140005db0:	call   0x1400073d4
   140005db5:	int3   
   140005db6:	int3   
   140005db7:	int3   
   140005db8:	int3   
   140005db9:	int3   
   140005dba:	int3   
   140005dbb:	int3   
   140005dbc:	mov    rax,rsp
   140005dbf:	mov    QWORD PTR [rax+0x8],rbx
   140005dc3:	mov    QWORD PTR [rax+0x10],rbp
   140005dc7:	mov    QWORD PTR [rax+0x20],rsi
   140005dcb:	mov    DWORD PTR [rax+0x18],r8d
   140005dcf:	push   rdi
   140005dd0:	push   r13
   140005dd2:	push   r14
   140005dd4:	sub    rsp,0x40
   140005dd8:	mov    rdi,rcx
   140005ddb:	call   0x140005144
   140005de0:	mov    rax,QWORD PTR [rip+0x11219]        # 0x140017000
   140005de7:	xor    esi,esi
   140005de9:	movzx  r9d,si
   140005ded:	lea    ebp,[rsi+0x1]
   140005df0:	jmp    0x140005e27
   140005df2:	lea    r8,[rip+0x739f]        # 0x14000d198
   140005df9:	sub    r8,rax
   140005dfc:	movzx  ecx,WORD PTR [rax]
   140005dff:	movzx  edx,WORD PTR [rax+r8*1]
   140005e04:	sub    ecx,edx
   140005e06:	jne    0x140005e10
   140005e08:	add    rax,0x2
   140005e0c:	test   edx,edx
   140005e0e:	jne    0x140005dfc
   140005e10:	test   ecx,ecx
   140005e12:	je     0x140005e50
   140005e14:	add    r9w,bp
   140005e18:	lea    rcx,[rip+0x111e1]        # 0x140017000
   140005e1f:	movzx  eax,r9w
   140005e23:	mov    rax,QWORD PTR [rcx+rax*8]
   140005e27:	test   rax,rax
   140005e2a:	jne    0x140005df2
   140005e2c:	mov    rcx,rdi
   140005e2f:	call   0x140007ee0
   140005e34:	lea    r13,[rip+0x470d]        # 0x14000a548
   140005e3b:	lea    r14,[rip+0x101be]        # 0x140016000
   140005e42:	test   eax,eax
   140005e44:	je     0x140005e67
   140005e46:	call   0x140005f9c
   140005e4b:	jmp    0x140005f0f
   140005e50:	xor    edx,edx
   140005e52:	mov    ecx,0xdad
   140005e57:	call   0x1400073fc
   140005e5c:	mov    ecx,0x2
   140005e61:	call   0x140007858
   140005e66:	int3   
   140005e67:	xor    r8d,r8d
   140005e6a:	mov    edx,ebp
   140005e6c:	mov    rcx,rdi
   140005e6f:	call   QWORD PTR [rip+0x41b3]        # 0x14000a028
   140005e75:	test   eax,eax
   140005e77:	je     0x140005f0f
   140005e7d:	cmp    eax,0x961
   140005e82:	je     0x140005e8b
   140005e84:	mov    ecx,eax
   140005e86:	call   0x140005170
   140005e8b:	mov    rbx,QWORD PTR [rip+0xf4ae]        # 0x140015340
   140005e92:	lea    rax,[rsp+0x70]
   140005e97:	mov    QWORD PTR [rsp+0x30],rax
   140005e9c:	lea    rcx,[rip+0xf4ad]        # 0x140015350
   140005ea3:	mov    QWORD PTR [rsp+0x28],r13
   140005ea8:	mov    r9d,0x800
   140005eae:	mov    r8,r14
   140005eb1:	mov    DWORD PTR [rsp+0x20],0xe6b
   140005eb9:	mov    edx,ebp
   140005ebb:	mov    QWORD PTR [rip+0xf48e],rdi        # 0x140015350
   140005ec2:	call   0x140009290
   140005ec7:	test   eax,eax
   140005ec9:	mov    r8d,ebp
   140005ecc:	mov    rdx,r14
   140005ecf:	cmovne rbx,QWORD PTR [rip+0xf429]        # 0x140015300
   140005ed7:	mov    rcx,rbx
   140005eda:	call   0x140009468
   140005edf:	mov    ecx,0x14a9
   140005ee4:	call   0x140007be4
   140005ee9:	test   eax,eax
   140005eeb:	jne    0x140005ef6
   140005eed:	lea    ecx,[rax+0x2]
   140005ef0:	call   0x140007858
   140005ef5:	int3   
   140005ef6:	mov    r8d,ebp
   140005ef9:	mov    edx,ebp
   140005efb:	mov    rcx,rdi
   140005efe:	call   QWORD PTR [rip+0x4124]        # 0x14000a028
   140005f04:	test   eax,eax
   140005f06:	je     0x140005f0f
   140005f08:	mov    ecx,eax
   140005f0a:	call   0x140005170
   140005f0f:	mov    rcx,rdi
   140005f12:	call   0x140007ee0
   140005f17:	mov    rbx,QWORD PTR [rip+0xf422]        # 0x140015340
   140005f1e:	lea    rcx,[rip+0xf42b]        # 0x140015350
   140005f25:	test   eax,eax
   140005f27:	mov    r9d,0x800
   140005f2d:	lea    rax,[rsp+0x70]
   140005f32:	mov    r8,r14
   140005f35:	mov    QWORD PTR [rsp+0x30],rax
   140005f3a:	mov    QWORD PTR [rsp+0x28],r13
   140005f3f:	je     0x140005f4d
   140005f41:	mov    DWORD PTR [rsp+0x20],0xdac
   140005f49:	xor    edx,edx
   140005f4b:	jmp    0x140005f5e
   140005f4d:	mov    QWORD PTR [rip+0xf3fc],rdi        # 0x140015350
   140005f54:	mov    edx,ebp
   140005f56:	mov    DWORD PTR [rsp+0x20],0x122a
   140005f5e:	call   0x140009290
   140005f63:	test   eax,eax
   140005f65:	mov    r8d,ebp
   140005f68:	mov    rdx,r14
   140005f6b:	cmovne rbx,QWORD PTR [rip+0xf38d]        # 0x140015300
   140005f73:	mov    rcx,rbx
   140005f76:	mov    rbx,QWORD PTR [rsp+0x60]
   140005f7b:	mov    rbp,QWORD PTR [rsp+0x68]
   140005f80:	mov    rsi,QWORD PTR [rsp+0x78]
   140005f85:	add    rsp,0x40
   140005f89:	pop    r14
   140005f8b:	pop    r13
   140005f8d:	pop    rdi
   140005f8e:	jmp    0x140009468
   140005f93:	int3   
   140005f94:	int3   
   140005f95:	int3   
   140005f96:	int3   
   140005f97:	int3   
   140005f98:	int3   
   140005f99:	int3   
   140005f9a:	int3   
   140005f9b:	int3   
   140005f9c:	mov    QWORD PTR [rsp+0x20],rbx
   140005fa1:	push   rbp
   140005fa2:	push   rsi
   140005fa3:	push   rdi
   140005fa4:	push   r12
   140005fa6:	push   r13
   140005fa8:	push   r14
   140005faa:	push   r15
   140005fac:	mov    rbp,rsp
   140005faf:	sub    rsp,0x40
   140005fb3:	xor    r12d,r12d
   140005fb6:	mov    DWORD PTR [rbp+0x40],r12d
   140005fba:	mov    DWORD PTR [rbp+0x48],r12d
   140005fbe:	mov    QWORD PTR [rbp+0x50],r12
   140005fc2:	call   0x140005144
   140005fc7:	lea    r8,[rbp+0x48]
   140005fcb:	lea    rdx,[rbp+0x50]
   140005fcf:	lea    rcx,[rbp+0x40]
   140005fd3:	call   0x140004dc4
   140005fd8:	test   eax,eax
   140005fda:	je     0x140005ff0
   140005fdc:	xor    edx,edx
   140005fde:	mov    ecx,eax
   140005fe0:	call   0x1400073fc
   140005fe5:	lea    ecx,[r12+0x2]
   140005fea:	call   0x140007858
   140005fef:	int3   
   140005ff0:	lea    r8,[rbp+0x48]
   140005ff4:	lea    rdx,[rbp+0x50]
   140005ff8:	lea    rcx,[rbp+0x40]
   140005ffc:	call   0x1400021a0
   140006001:	test   eax,eax
   140006003:	je     0x140006019
   140006005:	xor    edx,edx
   140006007:	mov    ecx,eax
   140006009:	call   0x1400073fc
   14000600e:	mov    ecx,0x2
   140006013:	call   0x140007858
   140006018:	int3   
   140006019:	mov    edi,DWORD PTR [rbp+0x40]
   14000601c:	mov    rdx,QWORD PTR [rbp+0x50]
   140006020:	mov    ecx,edi
   140006022:	call   0x1400049d4
   140006027:	test   eax,eax
   140006029:	je     0x14000603f
   14000602b:	xor    edx,edx
   14000602d:	mov    ecx,eax
   14000602f:	call   0x1400073fc
   140006034:	mov    ecx,0x2
   140006039:	call   0x140007858
   14000603e:	int3   
   14000603f:	test   edi,edi
   140006041:	jne    0x140006049
   140006043:	call   0x140007360
   140006048:	int3   
   140006049:	mov    rcx,QWORD PTR [rbp+0x50]
   14000604d:	mov    ebx,r12d
   140006050:	mov    r13d,0x1
   140006056:	test   edi,edi
   140006058:	je     0x140006080
   14000605a:	lea    rax,[rcx+0x1c]
   14000605e:	cmp    DWORD PTR [rax+0xc],r12d
   140006062:	je     0x140006080
   140006064:	cmp    DWORD PTR [rax],r12d
   140006067:	jne    0x140006080
   140006069:	cmp    DWORD PTR [rax+0x8],r12d
   14000606d:	jne    0x140006080
   14000606f:	cmp    DWORD PTR [rax+0x4],r12d
   140006073:	jne    0x140006080
   140006075:	add    ebx,r13d
   140006078:	add    rax,0x30
   14000607c:	cmp    ebx,edi
   14000607e:	jb     0x14000605e
   140006080:	lea    r9,[rip+0xffffffffffffe6c9]        # 0x140004750
   140006087:	mov    r8d,0x30
   14000608d:	mov    rdx,rdi
   140006090:	mov    r14,rdi
   140006093:	call   QWORD PTR [rip+0x4227]        # 0x14000a2c0
   140006099:	lea    rcx,[rip+0x44a8]        # 0x14000a548
   1400060a0:	cmp    ebx,edi
   1400060a2:	je     0x1400061b2
   1400060a8:	mov    rbx,QWORD PTR [rip+0xf291]        # 0x140015340
   1400060af:	lea    rax,[rbp+0x40]
   1400060b3:	mov    QWORD PTR [rsp+0x30],rax
   1400060b8:	lea    r8,[rip+0xff41]        # 0x140016000
   1400060bf:	mov    QWORD PTR [rsp+0x28],rcx
   1400060c4:	mov    r9d,0x800
   1400060ca:	lea    rcx,[rip+0xf27f]        # 0x140015350
   1400060d1:	mov    DWORD PTR [rsp+0x20],0xe56
   1400060d9:	xor    edx,edx
   1400060db:	call   0x140009290
   1400060e0:	test   eax,eax
   1400060e2:	lea    rdx,[rip+0xff17]        # 0x140016000
   1400060e9:	mov    r8d,r13d
   1400060ec:	cmovne rbx,QWORD PTR [rip+0xf20c]        # 0x140015300
   1400060f4:	mov    rcx,rbx
   1400060f7:	call   0x140009468
   1400060fc:	mov    rbx,QWORD PTR [rbp+0x50]
   140006100:	test   edi,edi
   140006102:	je     0x140006140
   140006104:	mov    rsi,rdi
   140006107:	mov    r15d,0x1000
   14000610d:	mov    rdx,QWORD PTR [rbx]
   140006110:	lea    r8,[rip+0xa1e9]        # 0x140010300
   140006117:	mov    r9d,r15d
   14000611a:	mov    ecx,0xf
   14000611f:	call   0x140007908
   140006124:	mov    r8,QWORD PTR [rbx+0x8]
   140006128:	lea    rcx,[rip+0x4c21]        # 0x14000ad50
   14000612f:	mov    rdx,rax
   140006132:	call   0x140007b80
   140006137:	add    rbx,0x30
   14000613b:	sub    rsi,r13
   14000613e:	jne    0x14000610d
   140006140:	mov    rbx,QWORD PTR [rip+0xf1f9]        # 0x140015340
   140006147:	lea    rax,[rbp+0x40]
   14000614b:	mov    QWORD PTR [rsp+0x30],rax
   140006150:	lea    r8,[rip+0xfea9]        # 0x140016000
   140006157:	lea    rax,[rip+0x43ea]        # 0x14000a548
   14000615e:	mov    r9d,0x800
   140006164:	mov    QWORD PTR [rsp+0x28],rax
   140006169:	lea    rcx,[rip+0xf1e0]        # 0x140015350
   140006170:	xor    edx,edx
   140006172:	mov    DWORD PTR [rsp+0x20],0xe57
   14000617a:	call   0x140009290
   14000617f:	test   eax,eax
   140006181:	lea    rdx,[rip+0xfe78]        # 0x140016000
   140006188:	mov    r8d,r13d
   14000618b:	cmovne rbx,QWORD PTR [rip+0xf16d]        # 0x140015300
   140006193:	mov    rcx,rbx
   140006196:	call   0x140009468
   14000619b:	mov    ecx,0x14a6
   1400061a0:	call   0x140007be4
   1400061a5:	test   eax,eax
   1400061a7:	jne    0x1400061b2
   1400061a9:	lea    ecx,[rax+0x2]
   1400061ac:	call   0x140007858
   1400061b1:	int3   
   1400061b2:	mov    esi,r12d
   1400061b5:	mov    r15d,r12d
   1400061b8:	test   edi,edi
   1400061ba:	je     0x14000630a
   1400061c0:	mov    rdi,QWORD PTR [rbp+0x50]
   1400061c4:	add    rdi,0x24
   1400061c8:	mov    rcx,QWORD PTR [rdi-0x24]
   1400061cc:	cmp    WORD PTR [rcx],r12w
   1400061d0:	je     0x1400061e2
   1400061d2:	xor    r8d,r8d
   1400061d5:	mov    edx,r13d
   1400061d8:	call   QWORD PTR [rip+0x3e4a]        # 0x14000a028
   1400061de:	mov    esi,eax
   1400061e0:	jmp    0x14000620f
   1400061e2:	cmp    DWORD PTR [rdi],r12d
   1400061e5:	jne    0x1400061ea
   1400061e7:	mov    DWORD PTR [rdi],r13d
   1400061ea:	mov    ebx,r12d
   1400061ed:	cmp    DWORD PTR [rdi],r12d
   1400061f0:	jbe    0x14000620f
   1400061f2:	mov    rcx,QWORD PTR [rdi-0x1c]
   1400061f6:	xor    r8d,r8d
   1400061f9:	mov    edx,r13d
   1400061fc:	call   QWORD PTR [rip+0x3e26]        # 0x14000a028
   140006202:	mov    esi,eax
   140006204:	test   eax,eax
   140006206:	jne    0x140006217
   140006208:	add    ebx,r13d
   14000620b:	cmp    ebx,DWORD PTR [rdi]
   14000620d:	jb     0x1400061f2
   14000620f:	test   esi,esi
   140006211:	je     0x1400062fd
   140006217:	cmp    esi,0x43
   14000621a:	je     0x1400062fd
   140006220:	cmp    esi,0x8ca
   140006226:	je     0x1400062fd
   14000622c:	cmp    esi,0x961
   140006232:	jne    0x1400062fa
   140006238:	mov    rax,QWORD PTR [rdi-0x24]
   14000623c:	cmp    WORD PTR [rax],r12w
   140006240:	jne    0x140006246
   140006242:	mov    rax,QWORD PTR [rdi-0x1c]
   140006246:	mov    rbx,QWORD PTR [rip+0xf0f3]        # 0x140015340
   14000624d:	lea    r8,[rip+0xfdac]        # 0x140016000
   140006254:	mov    QWORD PTR [rip+0xf0f5],rax        # 0x140015350
   14000625b:	lea    rcx,[rip+0xf0ee]        # 0x140015350
   140006262:	lea    rax,[rbp+0x40]
   140006266:	mov    r9d,0x800
   14000626c:	mov    QWORD PTR [rsp+0x30],rax
   140006271:	mov    edx,r13d
   140006274:	lea    rax,[rip+0x42cd]        # 0x14000a548
   14000627b:	mov    QWORD PTR [rsp+0x28],rax
   140006280:	mov    DWORD PTR [rsp+0x20],0xe6b
   140006288:	call   0x140009290
   14000628d:	test   eax,eax
   14000628f:	lea    rdx,[rip+0xfd6a]        # 0x140016000
   140006296:	mov    r8d,r13d
   140006299:	cmovne rbx,QWORD PTR [rip+0xf05f]        # 0x140015300
   1400062a1:	mov    rcx,rbx
   1400062a4:	call   0x140009468
   1400062a9:	mov    ecx,0x14a9
   1400062ae:	call   0x140007be4
   1400062b3:	test   eax,eax
   1400062b5:	je     0x1400062fd
   1400062b7:	mov    rcx,QWORD PTR [rdi-0x24]
   1400062bb:	cmp    WORD PTR [rcx],r12w
   1400062bf:	je     0x1400062d1
   1400062c1:	mov    r8d,r13d
   1400062c4:	mov    edx,r13d
   1400062c7:	call   QWORD PTR [rip+0x3d5b]        # 0x14000a028
   1400062cd:	mov    esi,eax
   1400062cf:	jmp    0x1400062f6
   1400062d1:	mov    ebx,r12d
   1400062d4:	cmp    DWORD PTR [rdi],r12d
   1400062d7:	jbe    0x1400062fa
   1400062d9:	mov    rcx,QWORD PTR [rdi-0x1c]
   1400062dd:	mov    r8d,r13d
   1400062e0:	mov    edx,r13d
   1400062e3:	call   QWORD PTR [rip+0x3d3f]        # 0x14000a028
   1400062e9:	mov    esi,eax
   1400062eb:	test   eax,eax
   1400062ed:	jne    0x1400062fa
   1400062ef:	add    ebx,r13d
   1400062f2:	cmp    ebx,DWORD PTR [rdi]
   1400062f4:	jb     0x1400062d9
   1400062f6:	test   esi,esi
   1400062f8:	je     0x1400062fd
   1400062fa:	mov    r15d,esi
   1400062fd:	add    rdi,0x30
   140006301:	sub    r14,r13
   140006304:	jne    0x1400061c8
   14000630a:	mov    rcx,QWORD PTR [rbp+0x50]
   14000630e:	call   QWORD PTR [rip+0x4124]        # 0x14000a438
   140006314:	test   r15d,r15d
   140006317:	je     0x140006320
   140006319:	mov    ecx,esi
   14000631b:	call   0x140005170
   140006320:	mov    rbx,QWORD PTR [rsp+0x98]
   140006328:	add    rsp,0x40
   14000632c:	pop    r15
   14000632e:	pop    r14
   140006330:	pop    r13
   140006332:	pop    r12
   140006334:	pop    rdi
   140006335:	pop    rsi
   140006336:	pop    rbp
   140006337:	ret    
   140006338:	int3   
   140006339:	int3   
   14000633a:	int3   
   14000633b:	int3   
   14000633c:	int3   
   14000633d:	int3   
   14000633e:	int3   
   14000633f:	int3   
   140006340:	rex push rbx
   140006342:	sub    rsp,0x40
   140006346:	and    QWORD PTR [rsp+0x60],0x0
   14000634c:	mov    rbx,rcx
   14000634f:	call   0x140007ee0
   140006354:	test   eax,eax
   140006356:	je     0x140006360
   140006358:	xor    edx,edx
   14000635a:	call   0x14000844c
   14000635f:	int3   
   140006360:	call   0x140005144
   140006365:	lea    r9,[rsp+0x60]
   14000636a:	mov    r8d,0x1
   140006370:	mov    rdx,rbx
   140006373:	xor    ecx,ecx
   140006375:	call   QWORD PTR [rip+0x4125]        # 0x14000a4a0
   14000637b:	mov    rcx,QWORD PTR [rsp+0x60]
   140006380:	test   eax,eax
   140006382:	je     0x140006394
   140006384:	call   QWORD PTR [rip+0x40ae]        # 0x14000a438
   14000638a:	mov    rcx,rbx
   14000638d:	call   0x140004be8
   140006392:	jmp    0x1400063a4
   140006394:	call   0x1400047b4
   140006399:	mov    rcx,QWORD PTR [rsp+0x60]
   14000639e:	call   QWORD PTR [rip+0x4094]        # 0x14000a438
   1400063a4:	mov    rbx,QWORD PTR [rip+0xef95]        # 0x140015340
   1400063ab:	lea    rax,[rsp+0x58]
   1400063b0:	mov    QWORD PTR [rsp+0x30],rax
   1400063b5:	lea    r8,[rip+0xfc44]        # 0x140016000
   1400063bc:	lea    rax,[rip+0x4185]        # 0x14000a548
   1400063c3:	mov    r9d,0x800
   1400063c9:	mov    QWORD PTR [rsp+0x28],rax
   1400063ce:	lea    rcx,[rip+0xef7b]        # 0x140015350
   1400063d5:	xor    edx,edx
   1400063d7:	mov    DWORD PTR [rsp+0x20],0xdac
   1400063df:	call   0x140009290
   1400063e4:	test   eax,eax
   1400063e6:	lea    rdx,[rip+0xfc13]        # 0x140016000
   1400063ed:	mov    r8d,0x1
   1400063f3:	cmovne rbx,QWORD PTR [rip+0xef05]        # 0x140015300
   1400063fb:	mov    rcx,rbx
   1400063fe:	call   0x140009468
   140006403:	add    rsp,0x40
   140006407:	pop    rbx
   140006408:	ret    
   140006409:	int3   
   14000640a:	int3   
   14000640b:	int3   
   14000640c:	int3   
   14000640d:	int3   
   14000640e:	int3   
   14000640f:	int3   
   140006410:	rex push rbx
   140006412:	sub    rsp,0x40
   140006416:	mov    rcx,QWORD PTR [rip+0x10be3]        # 0x140017000
   14000641d:	call   0x140009268
   140006422:	mov    r9,rax
   140006425:	test   rax,rax
   140006428:	jne    0x140006441
   14000642a:	xor    edx,edx
   14000642c:	mov    ecx,0xdb1
   140006431:	call   0x1400073fc
   140006436:	mov    ecx,0x2
   14000643b:	call   0x140007858
   140006440:	int3   
   140006441:	mov    rax,QWORD PTR [rip+0x10bb8]        # 0x140017000
   140006448:	lea    rdx,[rip+0x6d49]        # 0x14000d198
   14000644f:	sub    rdx,rax
   140006452:	movzx  ecx,WORD PTR [rax]
   140006455:	movzx  r8d,WORD PTR [rax+rdx*1]
   14000645a:	sub    ecx,r8d
   14000645d:	jne    0x140006468
   14000645f:	add    rax,0x2
   140006463:	test   r8d,r8d
   140006466:	jne    0x140006452
   140006468:	test   ecx,ecx
   14000646a:	jne    0x14000651c
   140006470:	lea    rdx,[rsp+0x50]
   140006475:	mov    rcx,r9
   140006478:	call   0x140008910
   14000647d:	test   eax,eax
   14000647f:	je     0x140006493
   140006481:	mov    rdx,QWORD PTR [rip+0x10b78]        # 0x140017000
   140006488:	mov    ecx,0xf70
   14000648d:	call   0x1400073d4
   140006492:	int3   
   140006493:	xor    ecx,ecx
   140006495:	cmp    DWORD PTR [rsp+0x50],0x1
   14000649a:	sete   cl
   14000649d:	call   0x14000509c
   1400064a2:	xor    edx,edx
   1400064a4:	test   eax,eax
   1400064a6:	je     0x1400064ba
   1400064a8:	mov    ecx,eax
   1400064aa:	call   0x1400073fc
   1400064af:	mov    ecx,0x2
   1400064b4:	call   0x140007858
   1400064b9:	int3   
   1400064ba:	mov    rbx,QWORD PTR [rip+0xee7f]        # 0x140015340
   1400064c1:	lea    rax,[rsp+0x50]
   1400064c6:	mov    QWORD PTR [rsp+0x30],rax
   1400064cb:	lea    r8,[rip+0xfb2e]        # 0x140016000
   1400064d2:	lea    rax,[rip+0x406f]        # 0x14000a548
   1400064d9:	mov    r9d,0x800
   1400064df:	mov    QWORD PTR [rsp+0x28],rax
   1400064e4:	lea    rcx,[rip+0xee65]        # 0x140015350
   1400064eb:	mov    DWORD PTR [rsp+0x20],0xdac
   1400064f3:	call   0x140009290
   1400064f8:	test   eax,eax
   1400064fa:	lea    rdx,[rip+0xfaff]        # 0x140016000
   140006501:	mov    r8d,0x1
   140006507:	cmovne rbx,QWORD PTR [rip+0xedf1]        # 0x140015300
   14000650f:	mov    rcx,rbx
   140006512:	add    rsp,0x40
   140006516:	pop    rbx
   140006517:	jmp    0x140009468
   14000651c:	xor    edx,edx
   14000651e:	mov    ecx,0xdad
   140006523:	call   0x1400073fc
   140006528:	mov    ecx,0x2
   14000652d:	call   0x140007858
   140006532:	int3   
   140006533:	int3   
   140006534:	int3   
   140006535:	int3   
   140006536:	int3   
   140006537:	int3   
   140006538:	int3   
   140006539:	int3   
   14000653a:	int3   
   14000653b:	int3   
   14000653c:	rex push rbx
   14000653e:	sub    rsp,0x40
   140006542:	mov    rbx,rcx
   140006545:	call   0x140005144
   14000654a:	lea    r9,[rsp+0x60]
   14000654f:	mov    r8d,0x1
   140006555:	mov    rdx,rbx
   140006558:	xor    ecx,ecx
   14000655a:	call   QWORD PTR [rip+0x3f40]        # 0x14000a4a0
   140006560:	mov    rcx,QWORD PTR [rsp+0x60]
   140006565:	test   eax,eax
   140006567:	je     0x140006589
   140006569:	call   QWORD PTR [rip+0x3ec9]        # 0x14000a438
   14000656f:	xor    r8d,r8d
   140006572:	mov    DWORD PTR [rsp+0x20],0x1
   14000657a:	mov    rdx,rbx
   14000657d:	xor    ecx,ecx
   14000657f:	call   0x140005350
   140006584:	jmp    0x140006618
   140006589:	cmp    DWORD PTR [rcx+0x24],0x0
   14000658d:	jne    0x1400065a9
   14000658f:	cmp    DWORD PTR [rcx+0x20],0x0
   140006593:	jne    0x1400065a9
   140006595:	and    DWORD PTR [rsp+0x20],0x0
   14000659a:	xor    r8d,r8d
   14000659d:	mov    rdx,rbx
   1400065a0:	xor    ecx,ecx
   1400065a2:	call   0x140005350
   1400065a7:	jmp    0x1400065ae
   1400065a9:	call   0x1400047b4
   1400065ae:	mov    rcx,QWORD PTR [rsp+0x60]
   1400065b3:	call   QWORD PTR [rip+0x3e7f]        # 0x14000a438
   1400065b9:	mov    rbx,QWORD PTR [rip+0xed80]        # 0x140015340
   1400065c0:	lea    rax,[rsp+0x58]
   1400065c5:	mov    QWORD PTR [rsp+0x30],rax
   1400065ca:	lea    r8,[rip+0xfa2f]        # 0x140016000
   1400065d1:	lea    rax,[rip+0x3f70]        # 0x14000a548
   1400065d8:	mov    r9d,0x800
   1400065de:	mov    QWORD PTR [rsp+0x28],rax
   1400065e3:	lea    rcx,[rip+0xed66]        # 0x140015350
   1400065ea:	xor    edx,edx
   1400065ec:	mov    DWORD PTR [rsp+0x20],0xdac
   1400065f4:	call   0x140009290
   1400065f9:	test   eax,eax
   1400065fb:	lea    rdx,[rip+0xf9fe]        # 0x140016000
   140006602:	mov    r8d,0x1
   140006608:	cmovne rbx,QWORD PTR [rip+0xecf0]        # 0x140015300
   140006610:	mov    rcx,rbx
   140006613:	call   0x140009468
   140006618:	add    rsp,0x40
   14000661c:	pop    rbx
   14000661d:	ret    
   14000661e:	int3   
   14000661f:	int3   
   140006620:	int3   
   140006621:	int3   
   140006622:	int3   
   140006623:	int3   
   140006624:	int3   
   140006625:	int3   
   140006626:	int3   
   140006627:	int3   
   140006628:	int3   
   140006629:	int3   
   14000662a:	int3   
   14000662b:	int3   
   14000662c:	int3   
   14000662d:	int3   
   14000662e:	int3   
   14000662f:	int3   
   140006630:	mov    rdx,QWORD PTR [rdx]
   140006633:	mov    rcx,QWORD PTR [rcx]
   140006636:	rex.W jmp QWORD PTR [rip+0x3c6b]        # 0x14000a2a8
   14000663d:	int3   
   14000663e:	int3   
   14000663f:	int3   
   140006640:	int3   
   140006641:	int3   
   140006642:	int3   
   140006643:	int3   
   140006644:	mov    r11,rsp
   140006647:	mov    QWORD PTR [r11+0x8],rbx
   14000664b:	mov    DWORD PTR [r11+0x18],r8d
   14000664f:	mov    QWORD PTR [r11+0x10],rdx
   140006653:	push   rbp
   140006654:	push   rsi
   140006655:	push   rdi
   140006656:	push   r12
   140006658:	push   r13
   14000665a:	push   r14
   14000665c:	push   r15
   14000665e:	mov    rbp,rsp
   140006661:	sub    rsp,0x50
   140006665:	xor    r13d,r13d
   140006668:	lea    rax,[rbp+0x48]
   14000666c:	mov    QWORD PTR [r11-0x58],r13
   140006670:	lea    r8,[rbp-0x10]
   140006674:	mov    QWORD PTR [r11-0x60],rax
   140006678:	mov    r12,rcx
   14000667b:	lea    rax,[rbp+0x50]
   14000667f:	mov    QWORD PTR [rbp+0x58],r13
   140006683:	or     r9d,0xffffffff
   140006687:	mov    QWORD PTR [r11-0x68],rax
   14000668b:	xor    edx,edx
   14000668d:	mov    WORD PTR [rip+0xdc6b],r13w        # 0x140014300
   140006695:	xor    ecx,ecx
   140006697:	mov    esi,r13d
   14000669a:	call   QWORD PTR [rip+0x3df8]        # 0x14000a498
   1400066a0:	test   eax,eax
   1400066a2:	jne    0x14000679e
   1400066a8:	mov    edi,r13d
   1400066ab:	mov    r14,QWORD PTR [rbp-0x10]
   1400066af:	cmp    DWORD PTR [rbp+0x50],r13d
   1400066b3:	jbe    0x140006783
   1400066b9:	or     rbx,0xffffffffffffffff
   1400066bd:	mov    r15d,edi
   1400066c0:	mov    rcx,r12
   1400066c3:	add    r15,r15
   1400066c6:	mov    rdx,QWORD PTR [r14+r15*8+0x8]
   1400066cb:	call   QWORD PTR [rip+0x3bd7]        # 0x14000a2a8
   1400066d1:	test   eax,eax
   1400066d3:	je     0x14000674e
   1400066d5:	mov    rcx,QWORD PTR [rbp+0x58]
   1400066d9:	test   rcx,rcx
   1400066dc:	jne    0x14000671b
   1400066de:	mov    rsi,rbx
   1400066e1:	inc    rsi
   1400066e4:	cmp    WORD PTR [r12+rsi*2],r13w
   1400066e9:	jne    0x1400066e1
   1400066eb:	add    esi,0x3
   1400066ee:	lea    rdx,[rbp+0x58]
   1400066f2:	lea    ecx,[rsi+rsi*1]
   1400066f5:	call   QWORD PTR [rip+0x3d1d]        # 0x14000a418
   1400066fb:	test   eax,eax
   1400066fd:	jne    0x14000679e
   140006703:	mov    rax,QWORD PTR [rbp+0x58]
   140006707:	mov    ecx,0x5c
   14000670c:	mov    WORD PTR [rax+0x2],cx
   140006710:	mov    rax,QWORD PTR [rbp+0x58]
   140006714:	mov    WORD PTR [rax],cx
   140006717:	mov    rcx,QWORD PTR [rbp+0x58]
   14000671b:	lea    eax,[rsi-0x2]
   14000671e:	add    rcx,0x4
   140006722:	movsxd rdx,eax
   140006725:	mov    r8,r12
   140006728:	call   QWORD PTR [rip+0x3bf2]        # 0x14000a320
   14000672e:	mov    rdx,QWORD PTR [r14+r15*8+0x8]
   140006733:	mov    rcx,QWORD PTR [rbp+0x58]
   140006737:	call   QWORD PTR [rip+0x3b6b]        # 0x14000a2a8
   14000673d:	test   eax,eax
   14000673f:	je     0x14000674e
   140006741:	inc    edi
   140006743:	cmp    edi,DWORD PTR [rbp+0x50]
   140006746:	jb     0x1400066bd
   14000674c:	jmp    0x140006783
   14000674e:	mov    eax,edi
   140006750:	add    rax,rax
   140006753:	mov    r8,QWORD PTR [r14+rax*8]
   140006757:	inc    rbx
   14000675a:	cmp    WORD PTR [r8+rbx*2],r13w
   14000675f:	jne    0x140006757
   140006761:	lea    rcx,[rip+0xdb98]        # 0x140014300
   140006768:	mov    edx,0x800
   14000676d:	lea    r9d,[rdx-0x1]
   140006771:	test   rbx,rbx
   140006774:	jne    0x14000677d
   140006776:	mov    r8,QWORD PTR [rip+0x6c0b]        # 0x14000d388
   14000677d:	call   QWORD PTR [rip+0x3b2d]        # 0x14000a2b0
   140006783:	mov    rcx,QWORD PTR [rbp-0x10]
   140006787:	call   QWORD PTR [rip+0x3cab]        # 0x14000a438
   14000678d:	mov    rcx,QWORD PTR [rbp+0x58]
   140006791:	test   rcx,rcx
   140006794:	je     0x14000679c
   140006796:	call   QWORD PTR [rip+0x3c9c]        # 0x14000a438
   14000679c:	xor    eax,eax
   14000679e:	mov    rbx,QWORD PTR [rsp+0x90]
   1400067a6:	add    rsp,0x50
   1400067aa:	pop    r15
   1400067ac:	pop    r14
   1400067ae:	pop    r13
   1400067b0:	pop    r12
   1400067b2:	pop    rdi
   1400067b3:	pop    rsi
   1400067b4:	pop    rbp
   1400067b5:	ret    
   1400067b6:	int3   
   1400067b7:	int3   
   1400067b8:	int3   
   1400067b9:	int3   
   1400067ba:	int3   
   1400067bb:	int3   
   1400067bc:	mov    QWORD PTR [rsp+0x8],rcx
   1400067c1:	push   rbp
   1400067c2:	push   rbx
   1400067c3:	push   rsi
   1400067c4:	push   rdi
   1400067c5:	push   r12
   1400067c7:	push   r13
   1400067c9:	push   r14
   1400067cb:	push   r15
   1400067cd:	lea    rbp,[rsp-0x1f]
   1400067d2:	sub    rsp,0x88
   1400067d9:	xor    eax,eax
   1400067db:	mov    BYTE PTR [rbp+0x77],0x1
   1400067df:	lea    r8,[rbp+0x7]
   1400067e3:	mov    QWORD PTR [rbp-0x19],rax
   1400067e7:	lea    rdx,[rip+0x6b92]        # 0x14000d380
   1400067ee:	mov    DWORD PTR [rbp+0x7f],eax
   1400067f1:	mov    edi,eax
   1400067f3:	mov    WORD PTR [rbp+0x3],ax
   1400067f7:	lea    ecx,[rax+0xc]
   1400067fa:	mov    QWORD PTR [rbp-0x29],rax
   1400067fe:	mov    WORD PTR [rbp-0x1],ax
   140006802:	mov    r13d,eax
   140006805:	mov    r12d,eax
   140006808:	mov    BYTE PTR [rbp+0x6f],al
   14000680b:	or     esi,0xffffffff
   14000680e:	mov    DWORD PTR [rbp-0x11],eax
   140006811:	mov    r15b,al
   140006814:	mov    DWORD PTR [rbp-0x21],eax
   140006817:	mov    ebx,eax
   140006819:	mov    DWORD PTR [rbp-0x1d],eax
   14000681c:	mov    DWORD PTR [rbp-0x9],eax
   14000681f:	call   0x140007514
   140006824:	xor    r11d,r11d
   140006827:	lea    ecx,[r12+0x1]
   14000682c:	cmp    QWORD PTR [rip+0x107cd],r11        # 0x140017000
   140006833:	mov    r14d,r11d
   140006836:	je     0x1400069c6
   14000683c:	lea    rax,[rip+0x107bd]        # 0x140017000
   140006843:	cmp    r14d,ecx
   140006846:	ja     0x1400069ad
   14000684c:	mov    ebx,r14d
   14000684f:	mov    rcx,QWORD PTR [rax+rbx*8]
   140006853:	call   0x140009268
   140006858:	mov    rdx,rax
   14000685b:	lea    r10,[rip+0x698e]        # 0x14000d1f0
   140006862:	lea    rax,[rip+0x10797]        # 0x140017000
   140006869:	mov    rax,QWORD PTR [rax+rbx*8]
   14000686d:	mov    ebx,0x2
   140006872:	mov    rcx,rax
   140006875:	sub    r10,rax
   140006878:	movzx  r9d,WORD PTR [rcx]
   14000687c:	movzx  r8d,WORD PTR [rcx+r10*1]
   140006881:	sub    r9d,r8d
   140006884:	jne    0x14000688e
   140006886:	add    rcx,rbx
   140006889:	test   r8d,r8d
   14000688c:	jne    0x140006878
   14000688e:	xor    r11d,r11d
   140006891:	test   r9d,r9d
   140006894:	jne    0x1400068ae
   140006896:	mov    al,BYTE PTR [rbp+0x6f]
   140006899:	lea    ecx,[r11+0x1]
   14000689d:	test   rdx,rdx
   1400068a0:	jne    0x1400068a9
   1400068a2:	mov    esi,0x80000000
   1400068a7:	jmp    0x14000691e
   1400068a9:	mov    r13,rdx
   1400068ac:	jmp    0x14000691e
   1400068ae:	lea    r10,[rip+0x695b]        # 0x14000d210
   1400068b5:	mov    rcx,rax
   1400068b8:	sub    r10,rax
   1400068bb:	movzx  r9d,WORD PTR [rcx]
   1400068bf:	movzx  r8d,WORD PTR [rcx+r10*1]
   1400068c4:	sub    r9d,r8d
   1400068c7:	jne    0x1400068d1
   1400068c9:	add    rcx,rbx
   1400068cc:	test   r8d,r8d
   1400068cf:	jne    0x1400068bb
   1400068d1:	test   r9d,r9d
   1400068d4:	jne    0x1400068ed
   1400068d6:	lea    ecx,[r9+0x1]
   1400068da:	test   rdx,rdx
   1400068dd:	je     0x14000691b
   1400068df:	mov    al,BYTE PTR [rbp+0x6f]
   1400068e2:	cmp    WORD PTR [rdx],r11w
   1400068e6:	je     0x14000691e
   1400068e8:	mov    r12,rdx
   1400068eb:	jmp    0x14000691e
   1400068ed:	lea    r9,[rip+0x690c]        # 0x14000d200
   1400068f4:	mov    rcx,rax
   1400068f7:	sub    r9,rax
   1400068fa:	movzx  r8d,WORD PTR [rcx]
   1400068fe:	movzx  edx,WORD PTR [rcx+r9*1]
   140006903:	sub    r8d,edx
   140006906:	jne    0x14000690f
   140006908:	add    rcx,rbx
   14000690b:	test   edx,edx
   14000690d:	jne    0x1400068fa
   14000690f:	test   r8d,r8d
   140006912:	jne    0x140006958
   140006914:	lea    ecx,[r8+0x1]
   140006918:	mov    r15b,cl
   14000691b:	mov    al,BYTE PTR [rbp+0x6f]
   14000691e:	test   r14d,r14d
   140006921:	je     0x140006927
   140006923:	test   al,al
   140006925:	je     0x140006985
   140006927:	add    r14d,ecx
   14000692a:	lea    rdx,[rip+0x106cf]        # 0x140017000
   140006931:	cmp    QWORD PTR [rdx+r14*8],r11
   140006935:	jne    0x14000683c
   14000693b:	test   r12,r12
   14000693e:	je     0x1400069c4
   140006944:	xor    edx,edx
   140006946:	mov    ecx,0xdad
   14000694b:	call   0x1400073fc
   140006950:	mov    ecx,ebx
   140006952:	call   0x140007858
   140006957:	int3   
   140006958:	lea    r8,[rip+0x6881]        # 0x14000d1e0
   14000695f:	sub    r8,rax
   140006962:	movzx  ecx,WORD PTR [rax]
   140006965:	movzx  edx,WORD PTR [rax+r8*1]
   14000696a:	sub    ecx,edx
   14000696c:	jne    0x140006975
   14000696e:	add    rax,rbx
   140006971:	test   edx,edx
   140006973:	jne    0x140006962
   140006975:	test   ecx,ecx
   140006977:	jne    0x140006999
   140006979:	mov    ecx,0x1
   14000697e:	mov    al,cl
   140006980:	mov    BYTE PTR [rbp+0x6f],cl
   140006983:	jmp    0x14000691e
   140006985:	xor    edx,edx
   140006987:	mov    ecx,0xdb6
   14000698c:	call   0x1400073fc
   140006991:	mov    ecx,ebx
   140006993:	call   0x140007858
   140006998:	int3   
   140006999:	xor    edx,edx
   14000699b:	mov    ecx,0xdad
   1400069a0:	call   0x1400073fc
   1400069a5:	mov    ecx,ebx
   1400069a7:	call   0x140007858
   1400069ac:	int3   
   1400069ad:	xor    edx,edx
   1400069af:	mov    ecx,0xdb6
   1400069b4:	call   0x1400073fc
   1400069b9:	mov    ecx,0x2
   1400069be:	call   0x140007858
   1400069c3:	int3   
   1400069c4:	mov    ebx,edi
   1400069c6:	mov    r12,QWORD PTR [rbp+0x67]
   1400069ca:	test   r12,r12
   1400069cd:	jne    0x140006c6e
   1400069d3:	call   QWORD PTR [rip+0x3627]        # 0x14000a000
   1400069d9:	lea    r14d,[r12+0x1]
   1400069de:	cmp    eax,r14d
   1400069e1:	je     0x140006a45
   1400069e3:	mov    rbx,QWORD PTR [rip+0xe956]        # 0x140015340
   1400069ea:	lea    rax,[rbp+0x6f]
   1400069ee:	mov    QWORD PTR [rsp+0x30],rax
   1400069f3:	lea    r12,[rip+0x3b4e]        # 0x14000a548
   1400069fa:	mov    r15d,0x800
   140006a00:	mov    QWORD PTR [rsp+0x28],r12
   140006a05:	lea    rdi,[rip+0xf5f4]        # 0x140016000
   140006a0c:	mov    DWORD PTR [rsp+0x20],0x125d
   140006a14:	mov    r9d,r15d
   140006a17:	lea    rcx,[rip+0xe932]        # 0x140015350
   140006a1e:	mov    r8,rdi
   140006a21:	xor    edx,edx
   140006a23:	call   0x140009290
   140006a28:	test   eax,eax
   140006a2a:	mov    r8d,r14d
   140006a2d:	mov    rdx,rdi
   140006a30:	cmovne rbx,QWORD PTR [rip+0xe8c8]        # 0x140015300
   140006a38:	mov    rcx,rbx
   140006a3b:	call   0x140009468
   140006a40:	jmp    0x1400072ef
   140006a45:	xor    eax,eax
   140006a47:	mov    QWORD PTR [rsp+0x28],r13
   140006a4c:	mov    edx,eax
   140006a4e:	mov    DWORD PTR [rsp+0x20],esi
   140006a52:	mov    ebx,0x80000000
   140006a57:	lea    r9,[rbp+0x7f]
   140006a5b:	cmp    esi,ebx
   140006a5d:	lea    r8,[rbp-0x19]
   140006a61:	setne  dl
   140006a64:	add    edx,0x64
   140006a67:	call   0x140009740
   140006a6c:	xor    r13d,r13d
   140006a6f:	cmp    eax,0xea
   140006a74:	jne    0x140006a87
   140006a76:	mov    DWORD PTR [rbp-0x1],r14d
   140006a7a:	mov    eax,DWORD PTR [rbp+0x7f]
   140006a7d:	test   eax,eax
   140006a7f:	jne    0x140006a9f
   140006a81:	call   0x140007360
   140006a86:	int3   
   140006a87:	test   eax,eax
   140006a89:	je     0x140006a7a
   140006a8b:	xor    edx,edx
   140006a8d:	mov    ecx,eax
   140006a8f:	call   0x1400073fc
   140006a94:	mov    ecx,0x2
   140006a99:	call   0x140007858
   140006a9e:	int3   
   140006a9f:	mov    rcx,QWORD PTR [rbp-0x19]
   140006aa3:	lea    r9,[rip+0xfffffffffffffb86]        # 0x140006630
   140006aaa:	mov    r8d,0x20
   140006ab0:	cmp    esi,ebx
   140006ab2:	mov    rdx,rax
   140006ab5:	lea    r14d,[r8-0x18]
   140006ab9:	cmove  r8d,r14d
   140006abd:	call   QWORD PTR [rip+0x37fd]        # 0x14000a2c0
   140006ac3:	lea    rax,[rbp+0x6f]
   140006ac7:	xor    edx,edx
   140006ac9:	lea    r12,[rip+0x3a78]        # 0x14000a548
   140006ad0:	mov    QWORD PTR [rsp+0x30],rax
   140006ad5:	mov    r15d,0x800
   140006adb:	mov    QWORD PTR [rsp+0x28],r12
   140006ae0:	lea    rdi,[rip+0xf519]        # 0x140016000
   140006ae7:	cmp    esi,ebx
   140006ae9:	mov    rbx,QWORD PTR [rip+0xe850]        # 0x140015340
   140006af0:	lea    rcx,[rip+0xe859]        # 0x140015350
   140006af7:	mov    r9d,r15d
   140006afa:	mov    r8,rdi
   140006afd:	jne    0x140006b09
   140006aff:	mov    DWORD PTR [rsp+0x20],0x1260
   140006b07:	jmp    0x140006b11
   140006b09:	mov    DWORD PTR [rsp+0x20],0x125c
   140006b11:	call   0x140009290
   140006b16:	test   eax,eax
   140006b18:	mov    r8d,0x1
   140006b1e:	mov    rdx,rdi
   140006b21:	cmovne rbx,QWORD PTR [rip+0xe7d7]        # 0x140015300
   140006b29:	mov    rcx,rbx
   140006b2c:	call   0x140009468
   140006b31:	xor    edx,edx
   140006b33:	lea    rcx,[rip+0x3d06]        # 0x14000a840
   140006b3a:	call   0x140007b80
   140006b3f:	cmp    esi,0x80000000
   140006b45:	jne    0x140006b9b
   140006b47:	mov    ebx,r13d
   140006b4a:	mov    rsi,QWORD PTR [rbp-0x19]
   140006b4e:	cmp    DWORD PTR [rbp+0x7f],r13d
   140006b52:	jbe    0x140006bf8
   140006b58:	mov    rdx,QWORD PTR [rsi]
   140006b5b:	lea    r8,[rip+0x979e]        # 0x140010300
   140006b62:	mov    r9d,0x1000
   140006b68:	mov    ecx,0x14
   140006b6d:	call   0x140007908
   140006b72:	mov    rdx,rax
   140006b75:	lea    rcx,[rip+0x4224]        # 0x14000ada0
   140006b7c:	call   0x140007b80
   140006b81:	xor    edx,edx
   140006b83:	lea    rcx,[rip+0x39ce]        # 0x14000a558
   140006b8a:	call   0x140007b80
   140006b8f:	inc    ebx
   140006b91:	add    rsi,r14
   140006b94:	cmp    ebx,DWORD PTR [rbp+0x7f]
   140006b97:	jb     0x140006b58
   140006b99:	jmp    0x140006bf8
   140006b9b:	mov    esi,r13d
   140006b9e:	mov    rbx,QWORD PTR [rbp-0x19]
   140006ba2:	cmp    DWORD PTR [rbp+0x7f],r13d
   140006ba6:	jbe    0x140006bf8
   140006ba8:	mov    rdx,QWORD PTR [rbx]
   140006bab:	lea    r8,[rip+0x974e]        # 0x140010300
   140006bb2:	mov    r9d,0x1000
   140006bb8:	mov    ecx,0x14
   140006bbd:	call   0x140007908
   140006bc2:	mov    rdx,rax
   140006bc5:	lea    rcx,[rip+0x41e4]        # 0x14000adb0
   140006bcc:	call   0x140007b80
   140006bd1:	mov    rdx,QWORD PTR [rbx+0x18]
   140006bd5:	mov    ecx,0xffffffc8
   140006bda:	call   0x140009680
   140006bdf:	xor    edx,edx
   140006be1:	lea    rcx,[rip+0x3970]        # 0x14000a558
   140006be8:	call   0x140007b80
   140006bed:	inc    esi
   140006bef:	lea    rbx,[rbx+0x20]
   140006bf3:	cmp    esi,DWORD PTR [rbp+0x7f]
   140006bf6:	jb     0x140006ba8
   140006bf8:	mov    rcx,QWORD PTR [rbp-0x19]
   140006bfc:	call   QWORD PTR [rip+0x3836]        # 0x14000a438
   140006c02:	xor    ebx,ebx
   140006c04:	cmp    WORD PTR [rbp-0x1],bx
   140006c08:	je     0x1400072e9
   140006c0e:	mov    rbx,QWORD PTR [rip+0xe72b]        # 0x140015340
   140006c15:	lea    rax,[rbp+0x6f]
   140006c19:	mov    QWORD PTR [rsp+0x30],rax
   140006c1e:	lea    rcx,[rip+0xe72b]        # 0x140015350
   140006c25:	mov    QWORD PTR [rsp+0x28],r12
   140006c2a:	mov    r9d,r15d
   140006c2d:	mov    r8,rdi
   140006c30:	mov    DWORD PTR [rsp+0x20],0xdb9
   140006c38:	xor    edx,edx
   140006c3a:	call   0x140009290
   140006c3f:	mov    r8d,0x1
   140006c45:	test   eax,eax
   140006c47:	mov    rdx,rdi
   140006c4a:	cmovne rbx,QWORD PTR [rip+0xe6ae]        # 0x140015300
   140006c52:	mov    rcx,rbx
   140006c55:	call   0x140009468
   140006c5a:	add    rsp,0x88
   140006c61:	pop    r15
   140006c63:	pop    r14
   140006c65:	pop    r13
   140006c67:	pop    r12
   140006c69:	pop    rdi
   140006c6a:	pop    rsi
   140006c6b:	pop    rbx
   140006c6c:	pop    rbp
   140006c6d:	ret    
   140006c6e:	cmp    r15b,cl
   140006c71:	jne    0x140006ca9
   140006c73:	mov    QWORD PTR [rsp+0x30],r11
   140006c78:	lea    rax,[rbp+0x7]
   140006c7c:	mov    QWORD PTR [rsp+0x28],rax
   140006c81:	lea    r8,[rbp-0x19]
   140006c85:	lea    rax,[rbp+0x7f]
   140006c89:	or     r9d,0xffffffff
   140006c8d:	mov    edx,0x1f5
   140006c92:	mov    QWORD PTR [rsp+0x20],rax
   140006c97:	mov    rcx,r12
   140006c9a:	call   QWORD PTR [rip+0x37d0]        # 0x14000a470
   140006ca0:	xor    r11d,r11d
   140006ca3:	mov    edi,eax
   140006ca5:	lea    ecx,[r11+0x1]
   140006ca9:	test   r15b,r15b
   140006cac:	je     0x140006cb7
   140006cae:	test   edi,edi
   140006cb0:	je     0x140006cef
   140006cb2:	cmp    edi,0x35
   140006cb5:	je     0x140006cef
   140006cb7:	mov    QWORD PTR [rsp+0x30],r11
   140006cbc:	lea    rax,[rbp+0x7]
   140006cc0:	mov    QWORD PTR [rsp+0x28],rax
   140006cc5:	lea    r8,[rbp-0x19]
   140006cc9:	lea    rax,[rbp+0x7f]
   140006ccd:	mov    edx,ecx
   140006ccf:	or     r9d,0xffffffff
   140006cd3:	mov    QWORD PTR [rsp+0x20],rax
   140006cd8:	mov    rcx,r12
   140006cdb:	call   QWORD PTR [rip+0x378f]        # 0x14000a470
   140006ce1:	xor    r11d,r11d
   140006ce4:	mov    edi,eax
   140006ce6:	mov    r15b,r11b
   140006ce9:	mov    BYTE PTR [rbp+0x77],r11b
   140006ced:	jmp    0x140006cf3
   140006cef:	mov    r15b,BYTE PTR [rbp+0x77]
   140006cf3:	cmp    edi,0xea
   140006cf9:	jne    0x140006d11
   140006cfb:	mov    eax,0x1
   140006d00:	mov    WORD PTR [rbp-0x1],ax
   140006d04:	mov    eax,DWORD PTR [rbp+0x7f]
   140006d07:	test   eax,eax
   140006d09:	jne    0x140006d29
   140006d0b:	call   0x140007360
   140006d10:	int3   
   140006d11:	test   edi,edi
   140006d13:	je     0x140006d04
   140006d15:	xor    edx,edx
   140006d17:	mov    ecx,edi
   140006d19:	call   0x1400073fc
   140006d1e:	mov    ecx,0x2
   140006d23:	call   0x140007858
   140006d28:	int3   
   140006d29:	mov    rsi,QWORD PTR [rbp-0x19]
   140006d2d:	mov    r14d,r11d
   140006d30:	test   eax,eax
   140006d32:	je     0x140007351
   140006d38:	cmp    BYTE PTR [rbp+0x6f],r11b
   140006d3c:	jne    0x140006d5f
   140006d3e:	mov    rcx,QWORD PTR [rsi]
   140006d41:	mov    edx,0x24
   140006d46:	call   QWORD PTR [rip+0x35c4]        # 0x14000a310
   140006d4c:	xor    r11d,r11d
   140006d4f:	test   rax,rax
   140006d52:	je     0x140006d5f
   140006d54:	cmp    WORD PTR [rax+0x2],r11w
   140006d59:	je     0x140006ee6
   140006d5f:	mov    rcx,QWORD PTR [rsi]
   140006d62:	call   0x140007aec
   140006d67:	cmp    eax,ebx
   140006d69:	cmovg  ebx,eax
   140006d6c:	mov    eax,DWORD PTR [rsi+0x8]
   140006d6f:	xor    r13d,r13d
   140006d72:	mov    DWORD PTR [rbp-0x11],ebx
   140006d75:	and    eax,0x3fffffff
   140006d7a:	je     0x140006daf
   140006d7c:	sub    eax,0x1
   140006d7f:	je     0x140006da6
   140006d81:	sub    eax,0x1
   140006d84:	je     0x140006d9d
   140006d86:	cmp    eax,0x1
   140006d89:	je     0x140006d94
   140006d8b:	mov    rcx,QWORD PTR [rip+0x6656]        # 0x14000d3e8
   140006d92:	jmp    0x140006db6
   140006d94:	mov    rcx,QWORD PTR [rip+0x663d]        # 0x14000d3d8
   140006d9b:	jmp    0x140006db6
   140006d9d:	mov    rcx,QWORD PTR [rip+0x6614]        # 0x14000d3b8
   140006da4:	jmp    0x140006db6
   140006da6:	mov    rcx,QWORD PTR [rip+0x661b]        # 0x14000d3c8
   140006dad:	jmp    0x140006db6
   140006daf:	mov    rcx,QWORD PTR [rip+0x65f2]        # 0x14000d3a8
   140006db6:	call   0x140007aec
   140006dbb:	mov    edi,eax
   140006dbd:	mov    eax,DWORD PTR [rbp-0x21]
   140006dc0:	cmp    edi,eax
   140006dc2:	cmovg  eax,edi
   140006dc5:	or     rdx,0xffffffffffffffff
   140006dc9:	mov    DWORD PTR [rbp-0x21],eax
   140006dcc:	mov    rcx,rdx
   140006dcf:	mov    rax,QWORD PTR [rsi]
   140006dd2:	inc    rcx
   140006dd5:	cmp    WORD PTR [rax+rcx*2],r13w
   140006dda:	jne    0x140006dd2
   140006ddc:	mov    rax,rdx
   140006ddf:	inc    rax
   140006de2:	cmp    WORD PTR [r12+rax*2],r13w
   140006de7:	jne    0x140006ddf
   140006de9:	lea    ebx,[rax+0x2]
   140006dec:	add    ebx,ecx
   140006dee:	lea    rdx,[rbp-0x29]
   140006df2:	lea    ecx,[rbx+rbx*1]
   140006df5:	call   QWORD PTR [rip+0x361d]        # 0x14000a418
   140006dfb:	test   eax,eax
   140006dfd:	jne    0x14000733d
   140006e03:	mov    rcx,QWORD PTR [rbp-0x29]
   140006e07:	mov    r8,r12
   140006e0a:	movsxd rbx,ebx
   140006e0d:	mov    rdx,rbx
   140006e10:	call   QWORD PTR [rip+0x350a]        # 0x14000a320
   140006e16:	mov    rcx,QWORD PTR [rbp-0x29]
   140006e1a:	lea    r8,[rip+0x3f9f]        # 0x14000adc0
   140006e21:	mov    rdx,rbx
   140006e24:	call   QWORD PTR [rip+0x348e]        # 0x14000a2b8
   140006e2a:	mov    r8,QWORD PTR [rsi]
   140006e2d:	mov    rdx,rbx
   140006e30:	mov    rcx,QWORD PTR [rbp-0x29]
   140006e34:	call   QWORD PTR [rip+0x347e]        # 0x14000a2b8
   140006e3a:	mov    rcx,QWORD PTR [rbp-0x29]
   140006e3e:	call   0x140006644
   140006e43:	test   eax,eax
   140006e45:	jne    0x140006e60
   140006e47:	lea    rcx,[rip+0xd4b2]        # 0x140014300
   140006e4e:	call   0x140007aec
   140006e53:	mov    edi,eax
   140006e55:	mov    eax,DWORD PTR [rbp-0x1d]
   140006e58:	cmp    edi,eax
   140006e5a:	cmovg  eax,edi
   140006e5d:	mov    DWORD PTR [rbp-0x1d],eax
   140006e60:	mov    rcx,QWORD PTR [rbp-0x29]
   140006e64:	call   QWORD PTR [rip+0x35ce]        # 0x14000a438
   140006e6a:	xor    r11d,r11d
   140006e6d:	mov    QWORD PTR [rbp-0x29],r11
   140006e71:	lea    eax,[r11+0x1]
   140006e75:	cmp    r15b,al
   140006e78:	jne    0x140006ec7
   140006e7a:	mov    eax,DWORD PTR [rsi+0x18]
   140006e7d:	and    eax,0x2030
   140006e82:	je     0x140006ebe
   140006e84:	cmp    eax,0x10
   140006e87:	je     0x140006eb5
   140006e89:	cmp    eax,0x20
   140006e8c:	je     0x140006eac
   140006e8e:	cmp    eax,0x30
   140006e91:	je     0x140006ea3
   140006e93:	cmp    eax,0x2000
   140006e98:	jne    0x140006ed5
   140006e9a:	mov    rcx,QWORD PTR [rip+0x6587]        # 0x14000d428
   140006ea1:	jmp    0x140006ecb
   140006ea3:	mov    rcx,QWORD PTR [rip+0x658e]        # 0x14000d438
   140006eaa:	jmp    0x140006ecb
   140006eac:	mov    rcx,QWORD PTR [rip+0x6565]        # 0x14000d418
   140006eb3:	jmp    0x140006ecb
   140006eb5:	mov    rcx,QWORD PTR [rip+0x654c]        # 0x14000d408
   140006ebc:	jmp    0x140006ecb
   140006ebe:	mov    rcx,QWORD PTR [rip+0x6533]        # 0x14000d3f8
   140006ec5:	jmp    0x140006ecb
   140006ec7:	mov    rcx,QWORD PTR [rsi+0x10]
   140006ecb:	call   0x140007aec
   140006ed0:	xor    r11d,r11d
   140006ed3:	mov    edi,eax
   140006ed5:	mov    r13d,DWORD PTR [rbp-0x9]
   140006ed9:	cmp    edi,r13d
   140006edc:	cmovg  r13d,edi
   140006ee0:	mov    DWORD PTR [rbp-0x9],r13d
   140006ee4:	jmp    0x140006eea
   140006ee6:	mov    r13d,DWORD PTR [rbp-0x9]
   140006eea:	inc    r14d
   140006eed:	test   r15b,r15b
   140006ef0:	je     0x140006ef8
   140006ef2:	add    rsi,0x20
   140006ef6:	jmp    0x140006efc
   140006ef8:	add    rsi,0x18
   140006efc:	mov    ebx,DWORD PTR [rbp-0x11]
   140006eff:	cmp    r14d,DWORD PTR [rbp+0x7f]
   140006f03:	jb     0x140006d38
   140006f09:	mov    esi,ebx
   140006f0b:	test   ebx,ebx
   140006f0d:	je     0x140007351
   140006f13:	mov    edx,DWORD PTR [rbp+0x7f]
   140006f16:	lea    r9,[rip+0xfffffffffffff713]        # 0x140006630
   140006f1d:	mov    rcx,QWORD PTR [rbp-0x19]
   140006f21:	mov    al,r15b
   140006f24:	neg    al
   140006f26:	sbb    r8,r8
   140006f29:	and    r8,0x8
   140006f2d:	add    r8,0x18
   140006f31:	call   QWORD PTR [rip+0x3389]        # 0x14000a2c0
   140006f37:	mov    rbx,QWORD PTR [rip+0xe402]        # 0x140015340
   140006f3e:	lea    rax,[rbp-0x9]
   140006f42:	mov    QWORD PTR [rsp+0x30],rax
   140006f47:	lea    rdi,[rip+0xf0b2]        # 0x140016000
   140006f4e:	mov    QWORD PTR [rip+0xe3fb],r12        # 0x140015350
   140006f55:	lea    rcx,[rip+0xe3f4]        # 0x140015350
   140006f5c:	lea    r12,[rip+0x35e5]        # 0x14000a548
   140006f63:	mov    r15d,0x800
   140006f69:	mov    QWORD PTR [rsp+0x28],r12
   140006f6e:	mov    r9d,r15d
   140006f71:	mov    r8,rdi
   140006f74:	mov    DWORD PTR [rsp+0x20],0x1119
   140006f7c:	mov    edx,0x1
   140006f81:	call   0x140009290
   140006f86:	xor    r14d,r14d
   140006f89:	mov    rdx,rdi
   140006f8c:	test   eax,eax
   140006f8e:	cmovne rbx,QWORD PTR [rip+0xe36a]        # 0x140015300
   140006f96:	mov    rcx,rbx
   140006f99:	lea    r8d,[r14+0x1]
   140006f9d:	call   0x140009468
   140006fa2:	mov    rcx,QWORD PTR [rbp+0x67]
   140006fa6:	lea    r8,[rbp-0x9]
   140006faa:	lea    edx,[r14+0x65]
   140006fae:	call   QWORD PTR [rip+0x34c4]        # 0x14000a478
   140006fb4:	test   eax,eax
   140006fb6:	je     0x140006fbe
   140006fb8:	mov    rbx,QWORD PTR [rbp+0x6f]
   140006fbc:	jmp    0x140006fd8
   140006fbe:	mov    rax,QWORD PTR [rbp-0x9]
   140006fc2:	movups xmm0,XMMWORD PTR [rax+0x8]
   140006fc6:	movups XMMWORD PTR [rax],xmm0
   140006fc9:	movups xmm1,XMMWORD PTR [rax+0x18]
   140006fcd:	movups XMMWORD PTR [rax+0x10],xmm1
   140006fd1:	mov    rbx,QWORD PTR [rbp-0x9]
   140006fd5:	mov    eax,r14d
   140006fd8:	test   eax,eax
   140006fda:	je     0x140006fec
   140006fdc:	xor    edx,edx
   140006fde:	lea    rcx,[rip+0x3573]        # 0x14000a558
   140006fe5:	call   0x140007b80
   140006fea:	jmp    0x140007005
   140006fec:	mov    rdx,QWORD PTR [rbx+0x18]
   140006ff0:	lea    rcx,[rip+0x3dd1]        # 0x14000adc8
   140006ff7:	call   0x140007b80
   140006ffc:	mov    rcx,rbx
   140006fff:	call   QWORD PTR [rip+0x3433]        # 0x14000a438
   140007005:	mov    edx,0x1288
   14000700a:	mov    ecx,esi
   14000700c:	call   0x1400094e8
   140007011:	mov    ecx,DWORD PTR [rbp-0x21]
   140007014:	mov    edx,0x1289
   140007019:	mov    r14d,eax
   14000701c:	mov    DWORD PTR [rbp-0x9],eax
   14000701f:	call   0x1400094e8
   140007024:	mov    ecx,DWORD PTR [rbp-0x1d]
   140007027:	mov    edx,0x128a
   14000702c:	mov    esi,eax
   14000702e:	mov    DWORD PTR [rbp-0x21],eax
   140007031:	call   0x1400094e8
   140007036:	mov    edx,0x128b
   14000703b:	mov    DWORD PTR [rbp-0x1d],eax
   14000703e:	mov    ecx,r13d
   140007041:	mov    ebx,eax
   140007043:	call   0x1400094e8
   140007048:	xor    edx,edx
   14000704a:	lea    rcx,[rip+0x3507]        # 0x14000a558
   140007051:	mov    r13d,eax
   140007054:	call   0x140007b80
   140007059:	cmp    r14d,0xffffffff
   14000705d:	je     0x140007328
   140007063:	cmp    esi,0xffffffff
   140007066:	je     0x140007328
   14000706c:	cmp    ebx,0xffffffff
   14000706f:	je     0x140007328
   140007075:	cmp    r13d,0xffffffff
   140007079:	je     0x140007328
   14000707f:	xor    edx,edx
   140007081:	lea    rcx,[rip+0x34d0]        # 0x14000a558
   140007088:	call   0x140007b80
   14000708d:	xor    edx,edx
   14000708f:	lea    rcx,[rip+0x37aa]        # 0x14000a840
   140007096:	call   0x140007b80
   14000709b:	mov    rsi,QWORD PTR [rbp-0x19]
   14000709f:	xor    ebx,ebx
   1400070a1:	mov    r14d,ebx
   1400070a4:	cmp    DWORD PTR [rbp+0x7f],ebx
   1400070a7:	jbe    0x14000726c
   1400070ad:	cmp    BYTE PTR [rbp+0x6f],bl
   1400070b0:	jne    0x1400070cf
   1400070b2:	mov    rcx,QWORD PTR [rsi]
   1400070b5:	mov    edx,0x24
   1400070ba:	call   QWORD PTR [rip+0x3250]        # 0x14000a310
   1400070c0:	test   rax,rax
   1400070c3:	je     0x1400070cf
   1400070c5:	cmp    WORD PTR [rax+0x2],bx
   1400070c9:	je     0x14000724c
   1400070cf:	mov    rdx,QWORD PTR [rsi]
   1400070d2:	mov    ecx,DWORD PTR [rbp-0x9]
   1400070d5:	call   0x140009680
   1400070da:	mov    eax,DWORD PTR [rsi+0x8]
   1400070dd:	and    eax,0x3fffffff
   1400070e2:	je     0x140007117
   1400070e4:	sub    eax,0x1
   1400070e7:	je     0x14000710e
   1400070e9:	sub    eax,0x1
   1400070ec:	je     0x140007105
   1400070ee:	cmp    eax,0x1
   1400070f1:	je     0x1400070fc
   1400070f3:	mov    rdx,QWORD PTR [rip+0x62ee]        # 0x14000d3e8
   1400070fa:	jmp    0x14000711e
   1400070fc:	mov    rdx,QWORD PTR [rip+0x62d5]        # 0x14000d3d8
   140007103:	jmp    0x14000711e
   140007105:	mov    rdx,QWORD PTR [rip+0x62ac]        # 0x14000d3b8
   14000710c:	jmp    0x14000711e
   14000710e:	mov    rdx,QWORD PTR [rip+0x62b3]        # 0x14000d3c8
   140007115:	jmp    0x14000711e
   140007117:	mov    rdx,QWORD PTR [rip+0x628a]        # 0x14000d3a8
   14000711e:	mov    ecx,DWORD PTR [rbp-0x21]
   140007121:	call   0x140009680
   140007126:	mov    rax,QWORD PTR [rsi]
   140007129:	or     rdx,0xffffffffffffffff
   14000712d:	mov    rcx,rdx
   140007130:	inc    rcx
   140007133:	cmp    WORD PTR [rax+rcx*2],bx
   140007137:	jne    0x140007130
   140007139:	mov    rax,rdx
   14000713c:	mov    rdx,QWORD PTR [rbp+0x67]
   140007140:	inc    rax
   140007143:	cmp    WORD PTR [rdx+rax*2],bx
   140007147:	jne    0x140007140
   140007149:	lea    ebx,[rax+0x2]
   14000714c:	add    ebx,ecx
   14000714e:	lea    rdx,[rbp-0x29]
   140007152:	lea    ecx,[rbx+rbx*1]
   140007155:	call   QWORD PTR [rip+0x32bd]        # 0x14000a418
   14000715b:	test   eax,eax
   14000715d:	jne    0x1400072d5
   140007163:	mov    r8,QWORD PTR [rbp+0x67]
   140007167:	mov    rcx,QWORD PTR [rbp-0x29]
   14000716b:	movsxd rbx,ebx
   14000716e:	mov    rdx,rbx
   140007171:	call   QWORD PTR [rip+0x31a9]        # 0x14000a320
   140007177:	mov    rcx,QWORD PTR [rbp-0x29]
   14000717b:	lea    r8,[rip+0x3c3e]        # 0x14000adc0
   140007182:	mov    rdx,rbx
   140007185:	call   QWORD PTR [rip+0x312d]        # 0x14000a2b8
   14000718b:	mov    r8,QWORD PTR [rsi]
   14000718e:	mov    rdx,rbx
   140007191:	mov    rcx,QWORD PTR [rbp-0x29]
   140007195:	call   QWORD PTR [rip+0x311d]        # 0x14000a2b8
   14000719b:	mov    rcx,QWORD PTR [rbp-0x29]
   14000719f:	call   0x140006644
   1400071a4:	xor    ebx,ebx
   1400071a6:	test   eax,eax
   1400071a8:	je     0x1400071b2
   1400071aa:	lea    eax,[rbx+0x1]
   1400071ad:	mov    DWORD PTR [rbp+0x3],eax
   1400071b0:	jmp    0x1400071c1
   1400071b2:	mov    ecx,DWORD PTR [rbp-0x1d]
   1400071b5:	lea    rdx,[rip+0xd144]        # 0x140014300
   1400071bc:	call   0x140009680
   1400071c1:	mov    rcx,QWORD PTR [rbp-0x29]
   1400071c5:	call   QWORD PTR [rip+0x326d]        # 0x14000a438
   1400071cb:	mov    eax,0x1
   1400071d0:	mov    QWORD PTR [rbp-0x29],rbx
   1400071d4:	cmp    BYTE PTR [rbp+0x77],al
   1400071d7:	jne    0x140007232
   1400071d9:	mov    eax,DWORD PTR [rsi+0x18]
   1400071dc:	and    eax,0x2030
   1400071e1:	je     0x14000721d
   1400071e3:	cmp    eax,0x10
   1400071e6:	je     0x140007214
   1400071e8:	cmp    eax,0x20
   1400071eb:	je     0x14000720b
   1400071ed:	cmp    eax,0x30
   1400071f0:	je     0x140007202
   1400071f2:	cmp    eax,0x2000
   1400071f7:	jne    0x140007229
   1400071f9:	mov    rdx,QWORD PTR [rip+0x6228]        # 0x14000d428
   140007200:	jmp    0x140007224
   140007202:	mov    rdx,QWORD PTR [rip+0x622f]        # 0x14000d438
   140007209:	jmp    0x140007224
   14000720b:	mov    rdx,QWORD PTR [rip+0x6206]        # 0x14000d418
   140007212:	jmp    0x140007224
   140007214:	mov    rdx,QWORD PTR [rip+0x61ed]        # 0x14000d408
   14000721b:	jmp    0x140007224
   14000721d:	mov    rdx,QWORD PTR [rip+0x61d4]        # 0x14000d3f8
   140007224:	test   rdx,rdx
   140007227:	jne    0x140007236
   140007229:	lea    rdx,[rip+0x35e4]        # 0x14000a814
   140007230:	jmp    0x140007236
   140007232:	mov    rdx,QWORD PTR [rsi+0x10]
   140007236:	mov    ecx,r13d
   140007239:	call   0x140009680
   14000723e:	xor    edx,edx
   140007240:	lea    rcx,[rip+0x3311]        # 0x14000a558
   140007247:	call   0x140007b80
   14000724c:	inc    r14d
   14000724f:	cmp    BYTE PTR [rbp+0x77],bl
   140007252:	je     0x14000725a
   140007254:	add    rsi,0x20
   140007258:	jmp    0x14000725e
   14000725a:	add    rsi,0x18
   14000725e:	cmp    r14d,DWORD PTR [rbp+0x7f]
   140007262:	jb     0x1400070ad
   140007268:	mov    rsi,QWORD PTR [rbp-0x19]
   14000726c:	mov    rcx,rsi
   14000726f:	call   QWORD PTR [rip+0x31c3]        # 0x14000a438
   140007275:	cmp    WORD PTR [rbp+0x3],bx
   140007279:	je     0x140006c04
   14000727f:	mov    rbx,QWORD PTR [rip+0xe0ba]        # 0x140015340
   140007286:	lea    rax,[rbp+0x6f]
   14000728a:	mov    QWORD PTR [rsp+0x30],rax
   14000728f:	lea    rcx,[rip+0xe0ba]        # 0x140015350
   140007296:	mov    QWORD PTR [rsp+0x28],r12
   14000729b:	mov    r9d,r15d
   14000729e:	mov    r8,rdi
   1400072a1:	mov    DWORD PTR [rsp+0x20],0xdb0
   1400072a9:	xor    edx,edx
   1400072ab:	call   0x140009290
   1400072b0:	test   eax,eax
   1400072b2:	mov    esi,0x1
   1400072b7:	mov    r8d,esi
   1400072ba:	mov    rdx,rdi
   1400072bd:	cmovne rbx,QWORD PTR [rip+0xe03b]        # 0x140015300
   1400072c5:	mov    rcx,rbx
   1400072c8:	call   0x140009468
   1400072cd:	mov    ecx,esi
   1400072cf:	call   0x140007858
   1400072d4:	int3   
   1400072d5:	xor    edx,edx
   1400072d7:	mov    ecx,eax
   1400072d9:	call   0x1400073fc
   1400072de:	mov    ecx,0x2
   1400072e3:	call   0x140007858
   1400072e8:	int3   
   1400072e9:	mov    r14d,0x1
   1400072ef:	mov    rbx,QWORD PTR [rip+0xe04a]        # 0x140015340
   1400072f6:	lea    rax,[rbp+0x6f]
   1400072fa:	mov    QWORD PTR [rsp+0x30],rax
   1400072ff:	lea    rcx,[rip+0xe04a]        # 0x140015350
   140007306:	mov    QWORD PTR [rsp+0x28],r12
   14000730b:	mov    r9d,r15d
   14000730e:	mov    r8,rdi
   140007311:	mov    DWORD PTR [rsp+0x20],0xdac
   140007319:	xor    edx,edx
   14000731b:	call   0x140009290
   140007320:	mov    r8d,r14d
   140007323:	jmp    0x140006c45
   140007328:	xor    edx,edx
   14000732a:	lea    ecx,[rdx+0x57]
   14000732d:	call   0x1400073fc
   140007332:	mov    ecx,0x2
   140007337:	call   0x140007858
   14000733c:	int3   
   14000733d:	xor    edx,edx
   14000733f:	mov    ecx,eax
   140007341:	call   0x1400073fc
   140007346:	mov    ecx,0x2
   14000734b:	call   0x140007858
   140007350:	int3   
   140007351:	call   0x140007360
   140007356:	int3   
   140007357:	int3   
   140007358:	int3   
   140007359:	int3   
   14000735a:	int3   
   14000735b:	int3   
   14000735c:	int3   
   14000735d:	int3   
   14000735e:	int3   
   14000735f:	int3   
   140007360:	rex push rbx
   140007362:	sub    rsp,0x40
   140007366:	mov    rbx,QWORD PTR [rip+0xdfd3]        # 0x140015340
   14000736d:	lea    rax,[rsp+0x50]
   140007372:	mov    QWORD PTR [rsp+0x30],rax
   140007377:	lea    r8,[rip+0xec82]        # 0x140016000
   14000737e:	lea    rax,[rip+0x31c3]        # 0x14000a548
   140007385:	mov    r9d,0x800
   14000738b:	mov    QWORD PTR [rsp+0x28],rax
   140007390:	lea    rcx,[rip+0xdfb9]        # 0x140015350
   140007397:	xor    edx,edx
   140007399:	mov    DWORD PTR [rsp+0x20],0xe63
   1400073a1:	call   0x140009290
   1400073a6:	test   eax,eax
   1400073a8:	lea    rdx,[rip+0xec51]        # 0x140016000
   1400073af:	mov    r8d,0x1
   1400073b5:	cmovne rbx,QWORD PTR [rip+0xdf43]        # 0x140015300
   1400073bd:	mov    rcx,rbx
   1400073c0:	call   0x140009468
   1400073c5:	xor    ecx,ecx
   1400073c7:	call   0x140007858
   1400073cc:	int3   
   1400073cd:	int3   
   1400073ce:	int3   
   1400073cf:	int3   
   1400073d0:	int3   
   1400073d1:	int3   
   1400073d2:	int3   
   1400073d3:	int3   
   1400073d4:	sub    rsp,0x28
   1400073d8:	mov    QWORD PTR [rip+0xdf71],rdx        # 0x140015350
   1400073df:	mov    edx,0x1
   1400073e4:	call   0x1400073fc
   1400073e9:	mov    ecx,0x2
   1400073ee:	call   0x140007858
   1400073f3:	int3   
   1400073f4:	int3   
   1400073f5:	int3   
   1400073f6:	int3   
   1400073f7:	int3   
   1400073f8:	int3   
   1400073f9:	int3   
   1400073fa:	int3   
   1400073fb:	int3   
   1400073fc:	mov    QWORD PTR [rsp+0x10],rbx
   140007401:	push   rdi
   140007402:	sub    rsp,0xb0
   140007409:	mov    rax,QWORD PTR [rip+0x5bf8]        # 0x14000d008
   140007410:	xor    rax,rsp
   140007413:	mov    QWORD PTR [rsp+0xa0],rax
   14000741b:	xor    edi,edi
   14000741d:	mov    DWORD PTR [rip+0x103dd],ecx        # 0x140017800
   140007423:	lea    eax,[rcx-0x834]
   140007429:	mov    ebx,ecx
   14000742b:	cmp    eax,0xed7
   140007430:	jbe    0x140007452
   140007432:	lea    r8d,[rdi+0xa]
   140007436:	lea    rdx,[rsp+0x50]
   14000743b:	call   QWORD PTR [rip+0x2e87]        # 0x14000a2c8
   140007441:	lea    edx,[rdi+0x1]
   140007444:	mov    edi,ebx
   140007446:	mov    ebx,0xdae
   14000744b:	mov    QWORD PTR [rip+0xdefe],rax        # 0x140015350
   140007452:	lea    rax,[rsp+0x40]
   140007457:	mov    r9d,0x800
   14000745d:	mov    QWORD PTR [rsp+0x30],rax
   140007462:	lea    rcx,[rip+0xdee7]        # 0x140015350
   140007469:	lea    rax,[rip+0x30d8]        # 0x14000a548
   140007470:	mov    QWORD PTR [rsp+0x28],rax
   140007475:	mov    DWORD PTR [rsp+0x20],ebx
   140007479:	lea    rbx,[rip+0xeb80]        # 0x140016000
   140007480:	mov    r8,rbx
   140007483:	call   0x140009290
   140007488:	mov    rcx,QWORD PTR [rip+0xde71]        # 0x140015300
   14000748f:	mov    r8d,0x1
   140007495:	mov    rdx,rbx
   140007498:	call   0x140009468
   14000749d:	test   edi,edi
   14000749f:	je     0x1400074ea
   1400074a1:	lea    rax,[rsp+0x40]
   1400074a6:	mov    r9d,0x800
   1400074ac:	mov    QWORD PTR [rsp+0x30],rax
   1400074b1:	lea    rcx,[rip+0x5d88]        # 0x14000d240
   1400074b8:	lea    rax,[rip+0x30a1]        # 0x14000a560
   1400074bf:	mov    r8,rbx
   1400074c2:	mov    QWORD PTR [rsp+0x28],rax
   1400074c7:	mov    edx,0x9
   1400074cc:	mov    DWORD PTR [rsp+0x20],edi
   1400074d0:	call   0x140009290
   1400074d5:	mov    rcx,QWORD PTR [rip+0xde24]        # 0x140015300
   1400074dc:	mov    r8d,0x1
   1400074e2:	mov    rdx,rbx
   1400074e5:	call   0x140009468
   1400074ea:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400074f2:	xor    rcx,rsp
   1400074f5:	call   0x1400027c0
   1400074fa:	mov    rbx,QWORD PTR [rsp+0xc8]
   140007502:	add    rsp,0xb0
   140007509:	pop    rdi
   14000750a:	ret    
   14000750b:	int3   
   14000750c:	int3   
   14000750d:	int3   
   14000750e:	int3   
   14000750f:	int3   
   140007510:	int3   
   140007511:	int3   
   140007512:	int3   
   140007513:	int3   
   140007514:	mov    QWORD PTR [rsp+0x10],rbx
   140007519:	mov    QWORD PTR [rsp+0x18],rsi
   14000751e:	mov    QWORD PTR [rsp+0x20],rdi
   140007523:	push   r14
   140007525:	sub    rsp,0x30
   140007529:	movzx  edi,cx
   14000752c:	xor    esi,esi
   14000752e:	shl    rdi,0x4
   140007532:	mov    r14,r8
   140007535:	add    rdi,rdx
   140007538:	mov    rax,rdx
   14000753b:	cmp    rdx,rdi
   14000753e:	jae    0x1400075c8
   140007544:	and    QWORD PTR [rax+0x8],rsi
   140007548:	add    rax,0x10
   14000754c:	cmp    rax,rdi
   14000754f:	jb     0x140007544
   140007551:	cmp    rdx,rdi
   140007554:	jae    0x1400075c8
   140007556:	lea    rbx,[rdx+0x8]
   14000755a:	mov    ecx,0x100
   14000755f:	call   QWORD PTR [rip+0x2e7b]        # 0x14000a3e0
   140007565:	xor    edx,edx
   140007567:	mov    QWORD PTR [rbx],rax
   14000756a:	test   rax,rax
   14000756d:	je     0x1400075f5
   140007573:	lea    rcx,[rsp+0x40]
   140007578:	mov    r9d,0x80
   14000757e:	mov    QWORD PTR [rsp+0x28],rcx
   140007583:	mov    r8,rax
   140007586:	mov    ecx,DWORD PTR [rbx-0x8]
   140007589:	mov    DWORD PTR [rsp+0x20],ecx
   14000758d:	xor    ecx,ecx
   14000758f:	call   0x140009958
   140007594:	test   eax,eax
   140007596:	jne    0x1400075e1
   140007598:	mov    rcx,QWORD PTR [rbx]
   14000759b:	call   0x140007aec
   1400075a0:	mov    ecx,DWORD PTR [rsp+0x40]
   1400075a4:	cmp    ecx,eax
   1400075a6:	ja     0x1400075b6
   1400075a8:	mov    rcx,QWORD PTR [rbx]
   1400075ab:	call   0x140007aec
   1400075b0:	mov    ecx,eax
   1400075b2:	mov    DWORD PTR [rsp+0x40],eax
   1400075b6:	cmp    ecx,esi
   1400075b8:	cmova  esi,ecx
   1400075bb:	add    rbx,0x10
   1400075bf:	lea    rax,[rbx-0x8]
   1400075c3:	cmp    rax,rdi
   1400075c6:	jb     0x14000755a
   1400075c8:	mov    rbx,QWORD PTR [rsp+0x48]
   1400075cd:	mov    rdi,QWORD PTR [rsp+0x58]
   1400075d2:	mov    DWORD PTR [r14],esi
   1400075d5:	mov    rsi,QWORD PTR [rsp+0x50]
   1400075da:	add    rsp,0x30
   1400075de:	pop    r14
   1400075e0:	ret    
   1400075e1:	xor    edx,edx
   1400075e3:	mov    ecx,eax
   1400075e5:	call   0x1400073fc
   1400075ea:	mov    ecx,0x2
   1400075ef:	call   0x140007858
   1400075f4:	int3   
   1400075f5:	mov    ecx,0x8
   1400075fa:	call   0x1400073fc
   1400075ff:	mov    ecx,0x2
   140007604:	call   0x140007858
   140007609:	int3   
   14000760a:	int3   
   14000760b:	int3   
   14000760c:	int3   
   14000760d:	int3   
   14000760e:	int3   
   14000760f:	int3   
   140007610:	mov    QWORD PTR [rsp+0x20],rbx
   140007615:	mov    DWORD PTR [rsp+0x10],edx
   140007619:	push   rbp
   14000761a:	push   rsi
   14000761b:	push   rdi
   14000761c:	push   r12
   14000761e:	push   r14
   140007620:	sub    rsp,0x30
   140007624:	mov    rbp,rcx
   140007627:	mov    DWORD PTR [rsp+0x60],0x17
   14000762f:	mov    rdi,rcx
   140007632:	xor    r14d,r14d
   140007635:	mov    ecx,0xfffffff6
   14000763a:	mov    DWORD PTR [r8],r14d
   14000763d:	mov    rsi,r8
   140007640:	call   QWORD PTR [rip+0x2b52]        # 0x14000a198
   140007646:	mov    rcx,rax
   140007649:	lea    rdx,[rsp+0x60]
   14000764e:	call   QWORD PTR [rip+0x2a0c]        # 0x14000a060
   140007654:	mov    ebx,DWORD PTR [rsp+0x60]
   140007658:	mov    ecx,0xfffffff6
   14000765d:	and    ebx,0xfffffff9
   140007660:	call   QWORD PTR [rip+0x2b32]        # 0x14000a198
   140007666:	mov    rcx,rax
   140007669:	mov    edx,ebx
   14000766b:	call   QWORD PTR [rip+0x29f7]        # 0x14000a068
   140007671:	mov    ebx,0xffff
   140007676:	mov    r12d,0x100
   14000767c:	mov    ecx,0xfffffff6
   140007681:	call   QWORD PTR [rip+0x2b11]        # 0x14000a198
   140007687:	lea    r9,[rsp+0x70]
   14000768c:	mov    QWORD PTR [rsp+0x20],r14
   140007691:	mov    rcx,rax
   140007694:	lea    rdx,[rsp+0x68]
   140007699:	mov    r8d,0x1
   14000769f:	call   QWORD PTR [rip+0x29d3]        # 0x14000a078
   1400076a5:	test   eax,eax
   1400076a7:	je     0x1400076b7
   1400076a9:	cmp    DWORD PTR [rsp+0x70],0x1
   1400076ae:	jne    0x1400076b7
   1400076b0:	movzx  eax,WORD PTR [rsp+0x68]
   1400076b5:	jmp    0x1400076be
   1400076b7:	mov    eax,ebx
   1400076b9:	mov    WORD PTR [rsp+0x68],bx
   1400076be:	cmp    ax,0xd
   1400076c2:	je     0x1400076f0
   1400076c4:	cmp    ax,bx
   1400076c7:	je     0x1400076f0
   1400076c9:	cmp    ax,0x8
   1400076cd:	jne    0x1400076dc
   1400076cf:	cmp    rdi,rbp
   1400076d2:	je     0x14000767c
   1400076d4:	sub    rdi,0x2
   1400076d8:	dec    DWORD PTR [rsi]
   1400076da:	jmp    0x14000767c
   1400076dc:	mov    WORD PTR [rdi],ax
   1400076df:	mov    eax,DWORD PTR [rsi]
   1400076e1:	cmp    eax,r12d
   1400076e4:	jae    0x1400076ea
   1400076e6:	add    rdi,0x2
   1400076ea:	inc    eax
   1400076ec:	mov    DWORD PTR [rsi],eax
   1400076ee:	jmp    0x14000767c
   1400076f0:	mov    ecx,0xfffffff6
   1400076f5:	call   QWORD PTR [rip+0x2a9d]        # 0x14000a198
   1400076fb:	mov    edx,DWORD PTR [rsp+0x60]
   1400076ff:	mov    rcx,rax
   140007702:	call   QWORD PTR [rip+0x2960]        # 0x14000a068
   140007708:	mov    ecx,0xa
   14000770d:	mov    WORD PTR [rdi],r14w
   140007711:	call   QWORD PTR [rip+0x2cb9]        # 0x14000a3d0
   140007717:	cmp    r12d,DWORD PTR [rsi]
   14000771a:	mov    rbx,QWORD PTR [rsp+0x78]
   14000771f:	sbb    eax,eax
   140007721:	and    eax,0x84b
   140007726:	add    rsp,0x30
   14000772a:	pop    r14
   14000772c:	pop    r12
   14000772e:	pop    rdi
   14000772f:	pop    rsi
   140007730:	pop    rbp
   140007731:	ret    
   140007732:	int3   
   140007733:	int3   
   140007734:	int3   
   140007735:	int3   
   140007736:	int3   
   140007737:	int3   
   140007738:	mov    QWORD PTR [rsp+0x10],rbx
   14000773d:	push   rbp
   14000773e:	push   rsi
   14000773f:	push   rdi
   140007740:	push   r13
   140007742:	push   r15
   140007744:	sub    rsp,0x60
   140007748:	mov    rax,QWORD PTR [rip+0x58b9]        # 0x14000d008
   14000774f:	xor    rax,rsp
   140007752:	mov    QWORD PTR [rsp+0x50],rax
   140007757:	xor    ebp,ebp
   140007759:	mov    rsi,r9
   14000775c:	mov    rdi,r8
   14000775f:	mov    DWORD PTR [r8],ebp
   140007762:	mov    rbx,rcx
   140007765:	mov    r15d,0xffff
   14000776b:	lea    r13d,[rbp+0x3b]
   14000776f:	mov    ecx,0xfffffff6
   140007774:	call   QWORD PTR [rip+0x2a1e]        # 0x14000a198
   14000777a:	lea    r9,[rsp+0x30]
   14000777f:	mov    QWORD PTR [rsp+0x20],rbp
   140007784:	mov    rcx,rax
   140007787:	mov    r8d,0x1
   14000778d:	mov    rdx,rbx
   140007790:	call   QWORD PTR [rip+0x28e2]        # 0x14000a078
   140007796:	test   eax,eax
   140007798:	je     0x1400077a1
   14000779a:	cmp    DWORD PTR [rsp+0x30],0x1
   14000779f:	je     0x1400077a5
   1400077a1:	mov    WORD PTR [rbx],r15w
   1400077a5:	cmp    WORD PTR [rbx],r15w
   1400077a9:	je     0x14000781d
   1400077ab:	cmp    WORD PTR [rbx],0xd
   1400077af:	je     0x1400077ce
   1400077b1:	cmp    WORD PTR [rbx],0xa
   1400077b5:	je     0x1400077ce
   1400077b7:	mov    ecx,DWORD PTR [rdi]
   1400077b9:	mov    eax,ebp
   1400077bb:	cmp    ecx,r13d
   1400077be:	setb   al
   1400077c1:	cdqe   
   1400077c3:	lea    rbx,[rbx+rax*2]
   1400077c7:	lea    eax,[rcx+0x1]
   1400077ca:	mov    DWORD PTR [rdi],eax
   1400077cc:	jmp    0x14000776f
   1400077ce:	mov    ecx,0xfffffff6
   1400077d3:	call   QWORD PTR [rip+0x29bf]        # 0x14000a198
   1400077d9:	lea    r9,[rsp+0x34]
   1400077de:	mov    r8d,0x1
   1400077e4:	mov    rcx,rax
   1400077e7:	lea    rdx,[rsp+0x38]
   1400077ec:	call   QWORD PTR [rip+0x28a6]        # 0x14000a098
   1400077f2:	test   eax,eax
   1400077f4:	je     0x14000781d
   1400077f6:	mov    ecx,0xfffffff6
   1400077fb:	call   QWORD PTR [rip+0x2997]        # 0x14000a198
   140007801:	lea    r9,[rsp+0x30]
   140007806:	mov    QWORD PTR [rsp+0x20],rbp
   14000780b:	mov    rcx,rax
   14000780e:	mov    r8d,0x1
   140007814:	mov    rdx,rbx
   140007817:	call   QWORD PTR [rip+0x285b]        # 0x14000a078
   14000781d:	movzx  eax,WORD PTR [rbx]
   140007820:	mov    WORD PTR [rsi],ax
   140007823:	mov    WORD PTR [rbx],bp
   140007826:	cmp    r13d,DWORD PTR [rdi]
   140007829:	sbb    eax,eax
   14000782b:	and    eax,0x84b
   140007830:	mov    rcx,QWORD PTR [rsp+0x50]
   140007835:	xor    rcx,rsp
   140007838:	call   0x1400027c0
   14000783d:	mov    rbx,QWORD PTR [rsp+0x98]
   140007845:	add    rsp,0x60
   140007849:	pop    r15
   14000784b:	pop    r13
   14000784d:	pop    rdi
   14000784e:	pop    rsi
   14000784f:	pop    rbp
   140007850:	ret    
   140007851:	int3   
   140007852:	int3   
   140007853:	int3   
   140007854:	int3   
   140007855:	int3   
   140007856:	int3   
   140007857:	int3   
   140007858:	rex push rbx
   14000785a:	sub    rsp,0xb0
   140007861:	mov    rax,QWORD PTR [rip+0x57a0]        # 0x14000d008
   140007868:	xor    rax,rsp
   14000786b:	mov    QWORD PTR [rsp+0xa0],rax
   140007873:	mov    ebx,ecx
   140007875:	mov    ecx,DWORD PTR [rip+0xff85]        # 0x140017800
   14000787b:	lea    eax,[rcx-0x834]
   140007881:	cmp    eax,0xed7
   140007886:	ja     0x1400078f7
   140007888:	mov    r8d,0xa
   14000788e:	lea    rdx,[rsp+0x50]
   140007893:	call   QWORD PTR [rip+0x2a2f]        # 0x14000a2c8
   140007899:	mov    QWORD PTR [rip+0xdab0],rax        # 0x140015350
   1400078a0:	mov    r9d,0x800
   1400078a6:	lea    r8,[rip+0xe753]        # 0x140016000
   1400078ad:	mov    edx,0x1
   1400078b2:	lea    rax,[rsp+0x40]
   1400078b7:	mov    QWORD PTR [rsp+0x30],rax
   1400078bc:	lea    rcx,[rip+0xda8d]        # 0x140015350
   1400078c3:	lea    rax,[rip+0x2c7e]        # 0x14000a548
   1400078ca:	mov    QWORD PTR [rsp+0x28],rax
   1400078cf:	mov    DWORD PTR [rsp+0x20],0xdba
   1400078d7:	call   0x140009290
   1400078dc:	test   eax,eax
   1400078de:	jne    0x1400078f7
   1400078e0:	mov    rcx,QWORD PTR [rip+0xda19]        # 0x140015300
   1400078e7:	lea    r8d,[rax+0x1]
   1400078eb:	lea    rdx,[rip+0xe70e]        # 0x140016000
   1400078f2:	call   0x140009468
   1400078f7:	mov    ecx,ebx
   1400078f9:	call   0x1400045e8
   1400078fe:	int3   
   1400078ff:	int3   
   140007900:	int3   
   140007901:	int3   
   140007902:	int3   
   140007903:	int3   
   140007904:	int3   
   140007905:	int3   
   140007906:	int3   
   140007907:	int3   
   140007908:	mov    QWORD PTR [rsp+0x8],rbx
   14000790d:	mov    QWORD PTR [rsp+0x10],rbp
   140007912:	mov    QWORD PTR [rsp+0x18],rsi
   140007917:	push   rdi
   140007918:	push   r14
   14000791a:	push   r15
   14000791c:	sub    rsp,0x40
   140007920:	xor    r15d,r15d
   140007923:	mov    rbx,r8
   140007926:	mov    rax,rdx
   140007929:	mov    edi,ecx
   14000792b:	mov    ebp,r15d
   14000792e:	test   ecx,ecx
   140007930:	jns    0x140007938
   140007932:	lea    ebp,[r15+0x1]
   140007936:	neg    edi
   140007938:	mov    QWORD PTR [rsp+0x30],rax
   14000793d:	or     r8,0xffffffffffffffff
   140007941:	movsxd rdx,r9d
   140007944:	mov    rcx,rbx
   140007947:	mov    DWORD PTR [rsp+0x28],edi
   14000794b:	lea    r9,[rip+0x34fe]        # 0x14000ae50
   140007952:	mov    DWORD PTR [rsp+0x20],edi
   140007956:	call   QWORD PTR [rip+0x2a7c]        # 0x14000a3d8
   14000795c:	movsxd rsi,eax
   14000795f:	test   eax,eax
   140007961:	jne    0x140007967
   140007963:	xor    eax,eax
   140007965:	jmp    0x1400079b1
   140007967:	mov    rcx,rbx
   14000796a:	call   0x140007aec
   14000796f:	cmp    eax,edi
   140007971:	jbe    0x14000798d
   140007973:	lea    r14,[rbx+rsi*2]
   140007977:	lea    r14,[r14-0x2]
   14000797b:	mov    rcx,rbx
   14000797e:	mov    WORD PTR [r14],r15w
   140007982:	dec    esi
   140007984:	call   0x140007aec
   140007989:	cmp    eax,edi
   14000798b:	ja     0x140007977
   14000798d:	test   ebp,ebp
   14000798f:	je     0x1400079ae
   140007991:	movsxd rax,esi
   140007994:	cmp    WORD PTR [rbx+rax*2-0x2],0x20
   14000799a:	je     0x1400079ae
   14000799c:	mov    ecx,0x2e
   1400079a1:	mov    DWORD PTR [rbx+rax*2-0x4],0x2e002e
   1400079a9:	mov    WORD PTR [rbx+rax*2-0x6],cx
   1400079ae:	mov    rax,rbx
   1400079b1:	mov    rbx,QWORD PTR [rsp+0x60]
   1400079b6:	mov    rbp,QWORD PTR [rsp+0x68]
   1400079bb:	mov    rsi,QWORD PTR [rsp+0x70]
   1400079c0:	add    rsp,0x40
   1400079c4:	pop    r15
   1400079c6:	pop    r14
   1400079c8:	pop    rdi
   1400079c9:	ret    
   1400079ca:	int3   
   1400079cb:	int3   
   1400079cc:	int3   
   1400079cd:	int3   
   1400079ce:	int3   
   1400079cf:	int3   
   1400079d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400079d5:	mov    QWORD PTR [rsp+0x10],rdi
   1400079da:	push   r15
   1400079dc:	sub    rsp,0x50
   1400079e0:	mov    edi,0x3
   1400079e5:	lea    r15,[rip+0x2b5c]        # 0x14000a548
   1400079ec:	mov    rbx,QWORD PTR [rip+0xd94d]        # 0x140015340
   1400079f3:	lea    rax,[rsp+0x44]
   1400079f8:	mov    QWORD PTR [rsp+0x30],rax
   1400079fd:	lea    r8,[rip+0xe5fc]        # 0x140016000
   140007a04:	mov    QWORD PTR [rsp+0x28],r15
   140007a09:	lea    rcx,[rip+0xd940]        # 0x140015350
   140007a10:	mov    r9d,0x800
   140007a16:	mov    DWORD PTR [rsp+0x20],0x1105
   140007a1e:	mov    edx,0x1
   140007a23:	call   0x140009290
   140007a28:	test   eax,eax
   140007a2a:	lea    rdx,[rip+0xe5cf]        # 0x140016000
   140007a31:	mov    r8d,0x1
   140007a37:	cmovne rbx,QWORD PTR [rip+0xd8c1]        # 0x140015300
   140007a3f:	mov    rcx,rbx
   140007a42:	call   0x140009468
   140007a47:	lea    r8,[rsp+0x40]
   140007a4c:	lea    rcx,[rip+0x106bd]        # 0x140018110
   140007a53:	call   0x140007610
   140007a58:	test   eax,eax
   140007a5a:	je     0x140007ad2
   140007a5c:	mov    rbx,QWORD PTR [rip+0xd8dd]        # 0x140015340
   140007a63:	lea    rax,[rsp+0x48]
   140007a68:	mov    QWORD PTR [rsp+0x30],rax
   140007a6d:	lea    r8,[rip+0xe58c]        # 0x140016000
   140007a74:	mov    QWORD PTR [rsp+0x28],r15
   140007a79:	lea    rcx,[rip+0xd8d0]        # 0x140015350
   140007a80:	mov    r9d,0x800
   140007a86:	mov    DWORD PTR [rsp+0x20],0xe8f
   140007a8e:	xor    edx,edx
   140007a90:	call   0x140009290
   140007a95:	test   eax,eax
   140007a97:	lea    rdx,[rip+0xe562]        # 0x140016000
   140007a9e:	mov    r8d,0x1
   140007aa4:	cmovne rbx,QWORD PTR [rip+0xd854]        # 0x140015300
   140007aac:	mov    rcx,rbx
   140007aaf:	call   0x140009468
   140007ab4:	sub    edi,0x1
   140007ab7:	jne    0x1400079ec
   140007abd:	xor    edx,edx
   140007abf:	mov    ecx,0xe96
   140007ac4:	call   0x1400073fc
   140007ac9:	lea    ecx,[rdi+0x2]
   140007acc:	call   0x140007858
   140007ad1:	int3   
   140007ad2:	mov    rbx,QWORD PTR [rsp+0x60]
   140007ad7:	mov    rdi,QWORD PTR [rsp+0x68]
   140007adc:	add    rsp,0x50
   140007ae0:	pop    r15
   140007ae2:	ret    
   140007ae3:	int3   
   140007ae4:	int3   
   140007ae5:	int3   
   140007ae6:	int3   
   140007ae7:	int3   
   140007ae8:	int3   
   140007ae9:	int3   
   140007aea:	int3   
   140007aeb:	int3   
   140007aec:	mov    QWORD PTR [rsp+0x8],rbx
   140007af1:	mov    QWORD PTR [rsp+0x10],rsi
   140007af6:	push   rdi
   140007af7:	sub    rsp,0x20
   140007afb:	xor    esi,esi
   140007afd:	mov    rdi,rcx
   140007b00:	mov    ebx,esi
   140007b02:	call   QWORD PTR [rip+0x2578]        # 0x14000a080
   140007b08:	cmp    eax,0x3a4
   140007b0d:	je     0x140007b5d
   140007b0f:	cmp    eax,0x3a8
   140007b14:	je     0x140007b5d
   140007b16:	cmp    eax,0x3b4
   140007b1b:	jbe    0x140007b24
   140007b1d:	cmp    eax,0x3b6
   140007b22:	jbe    0x140007b5d
   140007b24:	or     rax,0xffffffffffffffff
   140007b28:	inc    rax
   140007b2b:	cmp    WORD PTR [rdi+rax*2],si
   140007b2f:	jne    0x140007b28
   140007b31:	jmp    0x140007b67
   140007b33:	mov    edx,0x300
   140007b38:	movzx  eax,cx
   140007b3b:	sub    ax,dx
   140007b3e:	mov    edx,0xfc5f
   140007b43:	cmp    ax,dx
   140007b46:	jbe    0x140007b56
   140007b48:	mov    eax,0xffa0
   140007b4d:	cmp    cx,ax
   140007b50:	jae    0x140007b56
   140007b52:	inc    ebx
   140007b54:	jmp    0x140007b59
   140007b56:	add    ebx,0x2
   140007b59:	add    rdi,0x2
   140007b5d:	movzx  ecx,WORD PTR [rdi]
   140007b60:	test   cx,cx
   140007b63:	jne    0x140007b33
   140007b65:	mov    eax,ebx
   140007b67:	mov    rbx,QWORD PTR [rsp+0x30]
   140007b6c:	mov    rsi,QWORD PTR [rsp+0x38]
   140007b71:	add    rsp,0x20
   140007b75:	pop    rdi
   140007b76:	ret    
   140007b77:	int3   
   140007b78:	int3   
   140007b79:	int3   
   140007b7a:	int3   
   140007b7b:	int3   
   140007b7c:	int3   
   140007b7d:	int3   
   140007b7e:	int3   
   140007b7f:	int3   
   140007b80:	mov    r11,rsp
   140007b83:	mov    QWORD PTR [r11+0x8],rcx
   140007b87:	mov    QWORD PTR [r11+0x10],rdx
   140007b8b:	mov    QWORD PTR [r11+0x18],r8
   140007b8f:	mov    QWORD PTR [r11+0x20],r9
   140007b93:	sub    rsp,0x38
   140007b97:	mov    edx,0x1001
   140007b9c:	lea    rax,[r11+0x10]
   140007ba0:	mov    r9,rcx
   140007ba3:	mov    QWORD PTR [r11-0x18],rax
   140007ba7:	lea    rcx,[rip+0x6732]        # 0x14000e2e0
   140007bae:	lea    r8d,[rdx-0x1]
   140007bb2:	call   QWORD PTR [rip+0x2810]        # 0x14000a3c8
   140007bb8:	mov    rcx,QWORD PTR [rip+0xd781]        # 0x140015340
   140007bbf:	lea    rdx,[rip+0x671a]        # 0x14000e2e0
   140007bc6:	xor    eax,eax
   140007bc8:	xor    r8d,r8d
   140007bcb:	mov    WORD PTR [rip+0x870e],ax        # 0x1400102e0
   140007bd2:	call   0x140009468
   140007bd7:	add    rsp,0x38
   140007bdb:	ret    
   140007bdc:	int3   
   140007bdd:	int3   
   140007bde:	int3   
   140007bdf:	int3   
   140007be0:	int3   
   140007be1:	int3   
   140007be2:	int3   
   140007be3:	int3   
   140007be4:	sub    rsp,0x28
   140007be8:	mov    eax,DWORD PTR [rip+0xfe22]        # 0x140017a10
   140007bee:	test   eax,eax
   140007bf0:	je     0x140007bfa
   140007bf2:	add    eax,0xfffffffe
   140007bf5:	add    rsp,0x28
   140007bf9:	ret    
   140007bfa:	movzx  r8d,cx
   140007bfe:	xor    r9d,r9d
   140007c01:	xor    ecx,ecx
   140007c03:	xor    edx,edx
   140007c05:	call   0x140008b40
   140007c0a:	cmp    eax,0x1
   140007c0d:	jbe    0x140007bf5
   140007c0f:	xor    edx,edx
   140007c11:	mov    ecx,eax
   140007c13:	call   0x1400073fc
   140007c18:	mov    ecx,0x2
   140007c1d:	call   0x140007858
   140007c22:	int3   
   140007c23:	int3   
   140007c24:	int3   
   140007c25:	int3   
   140007c26:	int3   
   140007c27:	int3   
   140007c28:	int3   
   140007c29:	int3   
   140007c2a:	int3   
   140007c2b:	int3   
   140007c2c:	mov    QWORD PTR [rsp+0x8],rbx
   140007c31:	push   rdi
   140007c32:	sub    rsp,0x20
   140007c36:	xor    edi,edi
   140007c38:	lea    rdx,[rsp+0x38]
   140007c3d:	xor    r8d,r8d
   140007c40:	mov    DWORD PTR [rsp+0x38],edi
   140007c44:	mov    rbx,rcx
   140007c47:	call   QWORD PTR [rip+0x27e3]        # 0x14000a430
   140007c4d:	test   eax,eax
   140007c4f:	jne    0x140007c81
   140007c51:	mov    eax,0x4000
   140007c56:	test   DWORD PTR [rsp+0x38],eax
   140007c5a:	je     0x140007c81
   140007c5c:	cmp    DWORD PTR [rsp+0x38],eax
   140007c60:	jne    0x140007c69
   140007c62:	mov    eax,0x1
   140007c67:	jmp    0x140007c83
   140007c69:	mov    edx,0x3a
   140007c6e:	mov    rcx,rbx
   140007c71:	call   QWORD PTR [rip+0x2621]        # 0x14000a298
   140007c77:	test   rax,rax
   140007c7a:	je     0x140007c62
   140007c7c:	mov    WORD PTR [rax],di
   140007c7f:	jmp    0x140007c62
   140007c81:	xor    eax,eax
   140007c83:	mov    rbx,QWORD PTR [rsp+0x30]
   140007c88:	add    rsp,0x20
   140007c8c:	pop    rdi
   140007c8d:	ret    
   140007c8e:	int3   
   140007c8f:	int3   
   140007c90:	int3   
   140007c91:	int3   
   140007c92:	int3   
   140007c93:	int3   
   140007c94:	mov    QWORD PTR [rsp+0x8],rbx
   140007c99:	push   rdi
   140007c9a:	sub    rsp,0x20
   140007c9e:	xor    r8d,r8d
   140007ca1:	mov    rdi,rcx
   140007ca4:	lea    edx,[r8+0x6]
   140007ca8:	call   QWORD PTR [rip+0x2772]        # 0x14000a420
   140007cae:	xor    ebx,ebx
   140007cb0:	test   eax,eax
   140007cb2:	je     0x140007cc7
   140007cb4:	xor    r8d,r8d
   140007cb7:	lea    edx,[rbx+0x4]
   140007cba:	mov    rcx,rdi
   140007cbd:	call   QWORD PTR [rip+0x275d]        # 0x14000a420
   140007cc3:	test   eax,eax
   140007cc5:	jne    0x140007ccc
   140007cc7:	mov    ebx,0x1
   140007ccc:	mov    eax,ebx
   140007cce:	mov    rbx,QWORD PTR [rsp+0x30]
   140007cd3:	add    rsp,0x20
   140007cd7:	pop    rdi
   140007cd8:	ret    
   140007cd9:	int3   
   140007cda:	int3   
   140007cdb:	int3   
   140007cdc:	int3   
   140007cdd:	int3   
   140007cde:	int3   
   140007cdf:	int3   
   140007ce0:	rex push rbx
   140007ce2:	sub    rsp,0x20
   140007ce6:	movzx  edx,WORD PTR [rcx]
   140007ce9:	movzx  eax,WORD PTR [rip+0x3058]        # 0x14000ad48
   140007cf0:	sub    edx,eax
   140007cf2:	jne    0x140007d01
   140007cf4:	movzx  edx,WORD PTR [rcx+0x2]
   140007cf8:	movzx  eax,WORD PTR [rip+0x304b]        # 0x14000ad4a
   140007cff:	sub    edx,eax
   140007d01:	xor    ebx,ebx
   140007d03:	test   edx,edx
   140007d05:	jne    0x140007d0c
   140007d07:	lea    eax,[rbx+0x1]
   140007d0a:	jmp    0x140007d20
   140007d0c:	xor    r8d,r8d
   140007d0f:	lea    edx,[r8+0x2]
   140007d13:	call   QWORD PTR [rip+0x2707]        # 0x14000a420
   140007d19:	test   eax,eax
   140007d1b:	sete   bl
   140007d1e:	mov    eax,ebx
   140007d20:	add    rsp,0x20
   140007d24:	pop    rbx
   140007d25:	ret    
   140007d26:	int3   
   140007d27:	int3   
   140007d28:	int3   
   140007d29:	int3   
   140007d2a:	int3   
   140007d2b:	int3   
   140007d2c:	mov    QWORD PTR [rsp+0x10],rbx
   140007d31:	mov    QWORD PTR [rsp+0x18],rsi
   140007d36:	push   rdi
   140007d37:	sub    rsp,0x260
   140007d3e:	mov    rax,QWORD PTR [rip+0x52c3]        # 0x14000d008
   140007d45:	xor    rax,rsp
   140007d48:	mov    QWORD PTR [rsp+0x250],rax
   140007d50:	or     rax,0xffffffffffffffff
   140007d54:	mov    rsi,rcx
   140007d57:	xor    ebx,ebx
   140007d59:	inc    rax
   140007d5c:	cmp    WORD PTR [rcx+rax*2],bx
   140007d60:	jne    0x140007d59
   140007d62:	mov    edx,0x111
   140007d67:	cmp    rax,rdx
   140007d6a:	jb     0x140007d73
   140007d6c:	xor    eax,eax
   140007d6e:	jmp    0x140007e0b
   140007d73:	mov    r8,rcx
   140007d76:	lea    rcx,[rsp+0x20]
   140007d7b:	call   QWORD PTR [rip+0x259f]        # 0x14000a320
   140007d81:	mov    edx,0x5c
   140007d86:	lea    rcx,[rsp+0x20]
   140007d8b:	call   QWORD PTR [rip+0x2507]        # 0x14000a298
   140007d91:	lea    rcx,[rsp+0x20]
   140007d96:	mov    rdi,rax
   140007d99:	test   rax,rax
   140007d9c:	je     0x140007dd8
   140007d9e:	mov    WORD PTR [rax],bx
   140007da1:	add    rdi,0x2
   140007da5:	call   0x140007c94
   140007daa:	test   eax,eax
   140007dac:	je     0x140007e09
   140007dae:	mov    edx,0x40
   140007db3:	mov    rcx,rdi
   140007db6:	call   QWORD PTR [rip+0x24dc]        # 0x14000a298
   140007dbc:	mov    rcx,rdi
   140007dbf:	test   rax,rax
   140007dc2:	je     0x140007e02
   140007dc4:	xor    r8d,r8d
   140007dc7:	lea    edx,[r8+0x1]
   140007dcb:	call   QWORD PTR [rip+0x264f]        # 0x14000a420
   140007dd1:	test   eax,eax
   140007dd3:	sete   bl
   140007dd6:	jmp    0x140007e09
   140007dd8:	mov    edx,0x40
   140007ddd:	call   QWORD PTR [rip+0x24b5]        # 0x14000a298
   140007de3:	test   rax,rax
   140007de6:	je     0x140007dff
   140007de8:	lea    rcx,[rax+0x2]
   140007dec:	mov    WORD PTR [rax],bx
   140007def:	call   0x140007c94
   140007df4:	test   eax,eax
   140007df6:	je     0x140007e09
   140007df8:	lea    rcx,[rsp+0x20]
   140007dfd:	jmp    0x140007e02
   140007dff:	mov    rcx,rsi
   140007e02:	call   0x140007eb4
   140007e07:	mov    ebx,eax
   140007e09:	mov    eax,ebx
   140007e0b:	mov    rcx,QWORD PTR [rsp+0x250]
   140007e13:	xor    rcx,rsp
   140007e16:	call   0x1400027c0
   140007e1b:	lea    r11,[rsp+0x260]
   140007e23:	mov    rbx,QWORD PTR [r11+0x18]
   140007e27:	mov    rsi,QWORD PTR [r11+0x20]
   140007e2b:	mov    rsp,r11
   140007e2e:	pop    rdi
   140007e2f:	ret    
   140007e30:	int3   
   140007e31:	int3   
   140007e32:	int3   
   140007e33:	int3   
   140007e34:	int3   
   140007e35:	int3   
   140007e36:	int3   
   140007e37:	int3   
   140007e38:	mov    QWORD PTR [rsp+0x8],rbx
   140007e3d:	push   rdi
   140007e3e:	sub    rsp,0x20
   140007e42:	xor    ebx,ebx
   140007e44:	lea    rdx,[rsp+0x38]
   140007e49:	xor    r8d,r8d
   140007e4c:	mov    DWORD PTR [rsp+0x38],ebx
   140007e50:	mov    rdi,rcx
   140007e53:	call   QWORD PTR [rip+0x25d7]        # 0x14000a430
   140007e59:	test   eax,eax
   140007e5b:	je     0x140007e61
   140007e5d:	xor    eax,eax
   140007e5f:	jmp    0x140007ea2
   140007e61:	mov    eax,DWORD PTR [rsp+0x38]
   140007e65:	cmp    eax,0x2006
   140007e6a:	je     0x140007e9b
   140007e6c:	cmp    eax,0x2002
   140007e71:	je     0x140007e9b
   140007e73:	cmp    eax,0x4000
   140007e78:	je     0x140007e9b
   140007e7a:	cmp    eax,0x2b02
   140007e7f:	je     0x140007e9b
   140007e81:	cmp    eax,0x2c02
   140007e86:	je     0x140007e9b
   140007e88:	cmp    eax,0x2d02
   140007e8d:	je     0x140007e9b
   140007e8f:	mov    rcx,rdi
   140007e92:	call   0x140007f3c
   140007e97:	test   eax,eax
   140007e99:	je     0x140007ea0
   140007e9b:	mov    ebx,0x1
   140007ea0:	mov    eax,ebx
   140007ea2:	mov    rbx,QWORD PTR [rsp+0x30]
   140007ea7:	add    rsp,0x20
   140007eab:	pop    rdi
   140007eac:	ret    
   140007ead:	int3   
   140007eae:	int3   
   140007eaf:	int3   
   140007eb0:	int3   
   140007eb1:	int3   
   140007eb2:	int3   
   140007eb3:	int3   
   140007eb4:	sub    rsp,0x28
   140007eb8:	mov    edx,0x1
   140007ebd:	mov    r8d,0x80000000
   140007ec3:	call   QWORD PTR [rip+0x2557]        # 0x14000a420
   140007ec9:	xor    ecx,ecx
   140007ecb:	test   eax,eax
   140007ecd:	sete   cl
   140007ed0:	mov    eax,ecx
   140007ed2:	add    rsp,0x28
   140007ed6:	ret    
   140007ed7:	int3   
   140007ed8:	int3   
   140007ed9:	int3   
   140007eda:	int3   
   140007edb:	int3   
   140007edc:	int3   
   140007edd:	int3   
   140007ede:	int3   
   140007edf:	int3   
   140007ee0:	xor    edx,edx
   140007ee2:	mov    r8,rcx
   140007ee5:	test   rcx,rcx
   140007ee8:	jne    0x140007eed
   140007eea:	xor    eax,eax
   140007eec:	ret    
   140007eed:	movzx  ecx,WORD PTR [rcx]
   140007ef0:	movzx  eax,WORD PTR [rip+0x2e51]        # 0x14000ad48
   140007ef7:	sub    ecx,eax
   140007ef9:	jne    0x140007f09
   140007efb:	movzx  ecx,WORD PTR [r8+0x2]
   140007f00:	movzx  eax,WORD PTR [rip+0x2e43]        # 0x14000ad4a
   140007f07:	sub    ecx,eax
   140007f09:	test   ecx,ecx
   140007f0b:	je     0x140007f2e
   140007f0d:	movzx  ecx,WORD PTR [r8]
   140007f11:	movzx  eax,WORD PTR [rip+0x2f74]        # 0x14000ae8c
   140007f18:	sub    ecx,eax
   140007f1a:	jne    0x140007f2a
   140007f1c:	movzx  ecx,WORD PTR [r8+0x2]
   140007f21:	movzx  eax,WORD PTR [rip+0x2f66]        # 0x14000ae8e
   140007f28:	sub    ecx,eax
   140007f2a:	test   ecx,ecx
   140007f2c:	jne    0x140007f33
   140007f2e:	mov    edx,0x1
   140007f33:	mov    eax,edx
   140007f35:	ret    
   140007f36:	int3   
   140007f37:	int3   
   140007f38:	int3   
   140007f39:	int3   
   140007f3a:	int3   
   140007f3b:	int3   
   140007f3c:	mov    QWORD PTR [rsp+0x8],rbx
   140007f41:	push   rdi
   140007f42:	sub    rsp,0x20
   140007f46:	lea    rdx,[rip+0x2f13]        # 0x14000ae60
   140007f4d:	mov    rdi,rcx
   140007f50:	call   QWORD PTR [rip+0x2352]        # 0x14000a2a8
   140007f56:	xor    ebx,ebx
   140007f58:	test   eax,eax
   140007f5a:	je     0x140007f84
   140007f5c:	lea    rdx,[rip+0x2f0d]        # 0x14000ae70
   140007f63:	mov    rcx,rdi
   140007f66:	call   QWORD PTR [rip+0x233c]        # 0x14000a2a8
   140007f6c:	test   eax,eax
   140007f6e:	je     0x140007f84
   140007f70:	lea    rdx,[rip+0x2f09]        # 0x14000ae80
   140007f77:	mov    rcx,rdi
   140007f7a:	call   QWORD PTR [rip+0x2328]        # 0x14000a2a8
   140007f80:	test   eax,eax
   140007f82:	jne    0x140007f89
   140007f84:	mov    ebx,0x1
   140007f89:	mov    eax,ebx
   140007f8b:	mov    rbx,QWORD PTR [rsp+0x30]
   140007f90:	add    rsp,0x20
   140007f94:	pop    rdi
   140007f95:	ret    
   140007f96:	int3   
   140007f97:	int3   
   140007f98:	int3   
   140007f99:	int3   
   140007f9a:	int3   
   140007f9b:	int3   
   140007f9c:	mov    QWORD PTR [rsp+0x8],rbx
   140007fa1:	push   rdi
   140007fa2:	sub    rsp,0x20
   140007fa6:	cmp    QWORD PTR [rip+0xf052],0x0        # 0x140017000
   140007fae:	lea    rbx,[rip+0xf04b]        # 0x140017000
   140007fb5:	mov    rdi,rcx
   140007fb8:	je     0x140007fd3
   140007fba:	mov    rdx,QWORD PTR [rbx]
   140007fbd:	mov    rcx,rdi
   140007fc0:	call   0x140008010
   140007fc5:	test   eax,eax
   140007fc7:	jns    0x140007fe0
   140007fc9:	add    rbx,0x8
   140007fcd:	cmp    QWORD PTR [rbx],0x0
   140007fd1:	jne    0x140007fba
   140007fd3:	xor    eax,eax
   140007fd5:	mov    rbx,QWORD PTR [rsp+0x30]
   140007fda:	add    rsp,0x20
   140007fde:	pop    rdi
   140007fdf:	ret    
   140007fe0:	mov    eax,0x1
   140007fe5:	jmp    0x140007fd5
   140007fe7:	int3   
   140007fe8:	int3   
   140007fe9:	int3   
   140007fea:	int3   
   140007feb:	int3   
   140007fec:	int3   
   140007fed:	int3   
   140007fee:	int3   
   140007fef:	int3   
   140007ff0:	xor    eax,eax
   140007ff2:	cmp    QWORD PTR [rip+0xf007],rax        # 0x140017000
   140007ff9:	je     0x140008009
   140007ffb:	cmp    QWORD PTR [rip+0xf006],rax        # 0x140017008
   140008002:	jne    0x140008009
   140008004:	mov    eax,0x1
   140008009:	ret    
   14000800a:	int3   
   14000800b:	int3   
   14000800c:	int3   
   14000800d:	int3   
   14000800e:	int3   
   14000800f:	int3   
   140008010:	mov    rax,rsp
   140008013:	mov    QWORD PTR [rax+0x8],rbx
   140008017:	mov    QWORD PTR [rax+0x10],rbp
   14000801b:	mov    QWORD PTR [rax+0x18],rsi
   14000801f:	mov    QWORD PTR [rax+0x20],rdi
   140008023:	push   r14
   140008025:	sub    rsp,0x20
   140008029:	mov    r14,rdx
   14000802c:	mov    rbp,rcx
   14000802f:	mov    rcx,r14
   140008032:	lea    rdx,[rip+0x2e57]        # 0x14000ae90
   140008039:	call   QWORD PTR [rip+0x2311]        # 0x14000a350
   14000803f:	cmp    eax,0x2
   140008042:	jae    0x14000804a
   140008044:	or     rax,0xffffffffffffffff
   140008048:	jmp    0x14000808e
   14000804a:	or     rbx,0xffffffffffffffff
   14000804e:	mov    esi,eax
   140008050:	mov    rax,rbx
   140008053:	xor    edi,edi
   140008055:	inc    rax
   140008058:	cmp    WORD PTR [rbp+rax*2+0x0],di
   14000805d:	jne    0x140008055
   14000805f:	cmp    rsi,rax
   140008062:	jbe    0x140008068
   140008064:	mov    eax,ebx
   140008066:	jmp    0x14000808e
   140008068:	mov    r8,rsi
   14000806b:	mov    rdx,r14
   14000806e:	mov    rcx,rbp
   140008071:	call   QWORD PTR [rip+0x2291]        # 0x14000a308
   140008077:	test   eax,eax
   140008079:	jne    0x140008064
   14000807b:	inc    rbx
   14000807e:	cmp    WORD PTR [rbp+rbx*2+0x0],di
   140008083:	jne    0x14000807b
   140008085:	cmp    rsi,rbx
   140008088:	setne  dil
   14000808c:	mov    eax,edi
   14000808e:	mov    rbx,QWORD PTR [rsp+0x30]
   140008093:	mov    rbp,QWORD PTR [rsp+0x38]
   140008098:	mov    rsi,QWORD PTR [rsp+0x40]
   14000809d:	mov    rdi,QWORD PTR [rsp+0x48]
   1400080a2:	add    rsp,0x20
   1400080a6:	pop    r14
   1400080a8:	ret    
   1400080a9:	int3   
   1400080aa:	int3   
   1400080ab:	int3   
   1400080ac:	int3   
   1400080ad:	int3   
   1400080ae:	int3   
   1400080af:	int3   
   1400080b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400080b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400080ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400080bf:	push   rdi
   1400080c0:	push   r14
   1400080c2:	push   r15
   1400080c4:	sub    rsp,0x20
   1400080c8:	or     rsi,0xffffffffffffffff
   1400080cc:	movzx  r14d,dx
   1400080d0:	xor    r15d,r15d
   1400080d3:	mov    rbp,rcx
   1400080d6:	inc    rsi
   1400080d9:	cmp    WORD PTR [rcx+rsi*2],r15w
   1400080de:	jne    0x1400080d6
   1400080e0:	mov    edi,0xbfc
   1400080e5:	mov    ecx,edi
   1400080e7:	call   0x140008250
   1400080ec:	mov    rbx,rax
   1400080ef:	test   rax,rax
   1400080f2:	je     0x14000819d
   1400080f8:	mov    r8d,esi
   1400080fb:	mov    rdx,rax
   1400080fe:	mov    rcx,rbp
   140008101:	call   QWORD PTR [rip+0x2251]        # 0x14000a358
   140008107:	test   eax,eax
   140008109:	jne    0x140008115
   14000810b:	lea    ecx,[rsi+0x1]
   14000810e:	cmp    WORD PTR [rbx+rcx*2],0xa
   140008113:	je     0x140008130
   140008115:	mov    rcx,rbx
   140008118:	call   QWORD PTR [rip+0x200a]        # 0x14000a128
   14000811e:	add    edi,0x3
   140008121:	cmp    edi,0xc5c
   140008127:	jbe    0x1400080e5
   140008129:	xor    eax,eax
   14000812b:	jmp    0x1400081b1
   140008130:	movsx  ecx,r14w
   140008134:	test   ecx,ecx
   140008136:	je     0x140008190
   140008138:	sub    ecx,0x1
   14000813b:	je     0x14000816a
   14000813d:	cmp    ecx,0x1
   140008140:	jne    0x140008198
   140008142:	mov    rcx,rbx
   140008145:	call   QWORD PTR [rip+0x1fdd]        # 0x14000a128
   14000814b:	lea    ecx,[rdi+0x2]
   14000814e:	call   0x140008250
   140008153:	mov    rbx,rax
   140008156:	test   rax,rax
   140008159:	jne    0x140008165
   14000815b:	lea    ecx,[rdi+0x2]
   14000815e:	call   0x1400081d0
   140008163:	jmp    0x140008198
   140008165:	mov    rcx,rax
   140008168:	jmp    0x140008193
   14000816a:	mov    rcx,rbx
   14000816d:	call   0x140008330
   140008172:	mov    rcx,rbx
   140008175:	call   QWORD PTR [rip+0x1fad]        # 0x14000a128
   14000817b:	lea    ecx,[rdi+0x1]
   14000817e:	call   0x140008250
   140008183:	mov    rbx,rax
   140008186:	test   rax,rax
   140008189:	jne    0x140008165
   14000818b:	lea    ecx,[rdi+0x1]
   14000818e:	jmp    0x14000815e
   140008190:	mov    rcx,rbx
   140008193:	call   0x140008330
   140008198:	mov    rcx,rbx
   14000819b:	jmp    0x1400081a6
   14000819d:	mov    ecx,edi
   14000819f:	call   0x1400081d0
   1400081a4:	xor    ecx,ecx
   1400081a6:	call   QWORD PTR [rip+0x1f7c]        # 0x14000a128
   1400081ac:	mov    eax,0x1
   1400081b1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400081b6:	mov    rbp,QWORD PTR [rsp+0x48]
   1400081bb:	mov    rsi,QWORD PTR [rsp+0x50]
   1400081c0:	add    rsp,0x20
   1400081c4:	pop    r15
   1400081c6:	pop    r14
   1400081c8:	pop    rdi
   1400081c9:	ret    
   1400081ca:	int3   
   1400081cb:	int3   
   1400081cc:	int3   
   1400081cd:	int3   
   1400081ce:	int3   
   1400081cf:	int3   
   1400081d0:	rex push rbx
   1400081d2:	sub    rsp,0x80
   1400081d9:	mov    rax,QWORD PTR [rip+0x4e28]        # 0x14000d008
   1400081e0:	xor    rax,rsp
   1400081e3:	mov    QWORD PTR [rsp+0x70],rax
   1400081e8:	mov    r8d,0x10
   1400081ee:	lea    rdx,[rsp+0x20]
   1400081f3:	call   QWORD PTR [rip+0x20cf]        # 0x14000a2c8
   1400081f9:	mov    ecx,0xbfa
   1400081fe:	call   0x140008250
   140008203:	mov    rbx,rax
   140008206:	test   rax,rax
   140008209:	jne    0x140008220
   14000820b:	xor    edx,edx
   14000820d:	mov    ecx,0x13d
   140008212:	call   0x1400073fc
   140008217:	lea    ecx,[rbx+0x2]
   14000821a:	call   0x140007858
   14000821f:	int3   
   140008220:	mov    rcx,rax
   140008223:	call   0x140008330
   140008228:	mov    rcx,rbx
   14000822b:	call   QWORD PTR [rip+0x1ef7]        # 0x14000a128
   140008231:	mov    rcx,QWORD PTR [rsp+0x70]
   140008236:	xor    rcx,rsp
   140008239:	call   0x1400027c0
   14000823e:	add    rsp,0x80
   140008245:	pop    rbx
   140008246:	ret    
   140008247:	int3   
   140008248:	int3   
   140008249:	int3   
   14000824a:	int3   
   14000824b:	int3   
   14000824c:	int3   
   14000824d:	int3   
   14000824e:	int3   
   14000824f:	int3   
   140008250:	mov    DWORD PTR [rsp+0x8],ecx
   140008254:	mov    r11,rsp
   140008257:	mov    QWORD PTR [r11+0x10],rdx
   14000825b:	mov    QWORD PTR [r11+0x18],r8
   14000825f:	mov    QWORD PTR [r11+0x20],r9
   140008263:	sub    rsp,0x88
   14000826a:	mov    rax,QWORD PTR [rip+0x4d97]        # 0x14000d008
   140008271:	xor    rax,rsp
   140008274:	mov    QWORD PTR [rsp+0x70],rax
   140008279:	and    QWORD PTR [r11-0x48],0x0
   14000827e:	lea    rax,[r11+0x10]
   140008282:	mov    QWORD PTR [r11-0x40],rax
   140008286:	mov    rax,QWORD PTR [rip+0xf9a3]        # 0x140017c30
   14000828d:	test   rax,rax
   140008290:	jne    0x1400082de
   140008292:	lea    r8,[rip+0x2c1f]        # 0x14000aeb8
   140008299:	lea    edx,[rax+0xf]
   14000829c:	lea    rcx,[r11-0x38]
   1400082a0:	call   QWORD PTR [rip+0x207a]        # 0x14000a320
   1400082a6:	lea    rcx,[rsp+0x50]
   1400082ab:	call   QWORD PTR [rip+0x1eaf]        # 0x14000a160
   1400082b1:	mov    QWORD PTR [rip+0xf978],rax        # 0x140017c30
   1400082b8:	test   rax,rax
   1400082bb:	jne    0x1400082d7
   1400082bd:	call   QWORD PTR [rip+0x1e15]        # 0x14000a0d8
   1400082c3:	mov    ecx,eax
   1400082c5:	xor    edx,edx
   1400082c7:	call   0x1400073fc
   1400082cc:	mov    ecx,0x2
   1400082d1:	call   0x140007858
   1400082d6:	int3   
   1400082d7:	mov    ecx,DWORD PTR [rsp+0x90]
   1400082de:	lea    rdx,[rsp+0x48]
   1400082e3:	mov    r8d,ecx
   1400082e6:	mov    QWORD PTR [rsp+0x30],rdx
   1400082eb:	xor    r9d,r9d
   1400082ee:	and    DWORD PTR [rsp+0x28],0x0
   1400082f3:	lea    rdx,[rsp+0x40]
   1400082f8:	mov    QWORD PTR [rsp+0x20],rdx
   1400082fd:	mov    ecx,0x1900
   140008302:	mov    rdx,rax
   140008305:	call   QWORD PTR [rip+0x1e6d]        # 0x14000a178
   14000830b:	neg    eax
   14000830d:	sbb    rax,rax
   140008310:	and    rax,QWORD PTR [rsp+0x40]
   140008315:	mov    rcx,QWORD PTR [rsp+0x70]
   14000831a:	xor    rcx,rsp
   14000831d:	call   0x1400027c0
   140008322:	add    rsp,0x88
   140008329:	ret    
   14000832a:	int3   
   14000832b:	int3   
   14000832c:	int3   
   14000832d:	int3   
   14000832e:	int3   
   14000832f:	int3   
   140008330:	mov    QWORD PTR [rsp+0x8],rbx
   140008335:	mov    QWORD PTR [rsp+0x20],rbp
   14000833a:	push   rsi
   14000833b:	push   rdi
   14000833c:	push   r14
   14000833e:	sub    rsp,0x40
   140008342:	mov    rsi,rcx
   140008345:	mov    rcx,QWORD PTR [rip+0x58a4]        # 0x14000dbf0
   14000834c:	call   QWORD PTR [rip+0x1da6]        # 0x14000a0f8
   140008352:	xor    ebx,ebx
   140008354:	test   al,0x2
   140008356:	je     0x14000839d
   140008358:	mov    rcx,QWORD PTR [rip+0x5891]        # 0x14000dbf0
   14000835f:	lea    rdx,[rsp+0x70]
   140008364:	call   QWORD PTR [rip+0x1cf6]        # 0x14000a060
   14000836a:	test   eax,eax
   14000836c:	je     0x14000839d
   14000836e:	or     rdi,0xffffffffffffffff
   140008372:	inc    rdi
   140008375:	cmp    WORD PTR [rsi+rdi*2],bx
   140008379:	jne    0x140008372
   14000837b:	mov    rcx,QWORD PTR [rip+0x586e]        # 0x14000dbf0
   140008382:	lea    r9,[rsp+0x68]
   140008387:	mov    r8,rdi
   14000838a:	mov    QWORD PTR [rsp+0x20],rbx
   14000838f:	mov    rdx,rsi
   140008392:	call   QWORD PTR [rip+0x1cd8]        # 0x14000a070
   140008398:	jmp    0x140008433
   14000839d:	call   QWORD PTR [rip+0x1cdd]        # 0x14000a080
   1400083a3:	mov    QWORD PTR [rsp+0x38],rbx
   1400083a8:	or     rdi,0xffffffffffffffff
   1400083ac:	mov    QWORD PTR [rsp+0x30],rbx
   1400083b1:	mov    ecx,eax
   1400083b3:	mov    DWORD PTR [rsp+0x28],ebx
   1400083b7:	mov    r9d,edi
   1400083ba:	mov    r8,rsi
   1400083bd:	mov    QWORD PTR [rsp+0x20],rbx
   1400083c2:	xor    edx,edx
   1400083c4:	call   QWORD PTR [rip+0x1e76]        # 0x14000a240
   1400083ca:	movsxd r14,eax
   1400083cd:	mov    rcx,r14
   1400083d0:	call   QWORD PTR [rip+0x200a]        # 0x14000a3e0
   1400083d6:	mov    rbp,rax
   1400083d9:	test   rax,rax
   1400083dc:	je     0x140008431
   1400083de:	call   QWORD PTR [rip+0x1c9c]        # 0x14000a080
   1400083e4:	mov    QWORD PTR [rsp+0x38],rbx
   1400083e9:	mov    r9d,edi
   1400083ec:	mov    QWORD PTR [rsp+0x30],rbx
   1400083f1:	mov    ecx,eax
   1400083f3:	mov    DWORD PTR [rsp+0x28],r14d
   1400083f8:	mov    r8,rsi
   1400083fb:	xor    edx,edx
   1400083fd:	mov    QWORD PTR [rsp+0x20],rbp
   140008402:	call   QWORD PTR [rip+0x1e38]        # 0x14000a240
   140008408:	mov    rcx,QWORD PTR [rip+0x57e1]        # 0x14000dbf0
   14000840f:	lea    r8d,[r14-0x1]
   140008413:	lea    r9,[rsp+0x68]
   140008418:	mov    QWORD PTR [rsp+0x20],rbx
   14000841d:	mov    rdx,rbp
   140008420:	call   QWORD PTR [rip+0x1cc2]        # 0x14000a0e8
   140008426:	mov    rcx,rbp
   140008429:	mov    ebx,eax
   14000842b:	call   QWORD PTR [rip+0x1fcf]        # 0x14000a400
   140008431:	mov    eax,ebx
   140008433:	mov    rbx,QWORD PTR [rsp+0x60]
   140008438:	mov    rbp,QWORD PTR [rsp+0x78]
   14000843d:	add    rsp,0x40
   140008441:	pop    r14
   140008443:	pop    rdi
   140008444:	pop    rsi
   140008445:	ret    
   140008446:	int3   
   140008447:	int3   
   140008448:	int3   
   140008449:	int3   
   14000844a:	int3   
   14000844b:	int3   
   14000844c:	mov    rax,rsp
   14000844f:	mov    QWORD PTR [rax+0x8],rbx
   140008453:	mov    QWORD PTR [rax+0x10],rsi
   140008457:	mov    QWORD PTR [rax+0x18],rdi
   14000845b:	push   rbp
   14000845c:	push   r12
   14000845e:	push   r13
   140008460:	push   r14
   140008462:	push   r15
   140008464:	lea    rbp,[rax-0x428]
   14000846b:	sub    rsp,0x500
   140008472:	mov    rax,QWORD PTR [rip+0x4b8f]        # 0x14000d008
   140008479:	xor    rax,rsp
   14000847c:	mov    QWORD PTR [rbp+0x3f0],rax
   140008483:	movzx  r12d,dx
   140008487:	mov    WORD PTR [rsp+0x40],dx
   14000848c:	xor    r14d,r14d
   14000848f:	lea    rdx,[rip+0x25ca]        # 0x14000aa60
   140008496:	xor    ecx,ecx
   140008498:	movzx  ebx,r14w
   14000849c:	mov    esi,r14d
   14000849f:	call   QWORD PTR [rip+0x1efb]        # 0x14000a3a0
   1400084a5:	xor    ecx,ecx
   1400084a7:	call   QWORD PTR [rip+0x1cc3]        # 0x14000a170
   1400084ad:	lea    rax,[rip+0x29e4]        # 0x14000ae98
   1400084b4:	test   r12w,r12w
   1400084b8:	mov    QWORD PTR [rip+0x56e1],rax        # 0x14000dba0
   1400084bf:	lea    r15d,[r14+0x1]
   1400084c3:	mov    rax,QWORD PTR [rip+0xce76]        # 0x140015340
   1400084ca:	lea    rdx,[rip+0xffffffffffff7b2f]        # 0x140000000
   1400084d1:	cmove  rax,QWORD PTR [rip+0xce27]        # 0x140015300
   1400084d9:	mov    edi,r14d
   1400084dc:	cmp    QWORD PTR [rip+0xcecd],r14        # 0x1400153b0
   1400084e3:	mov    QWORD PTR [rip+0x5706],rax        # 0x14000dbf0
   1400084ea:	je     0x140008512
   1400084ec:	mov    ecx,r14d
   1400084ef:	add    bx,r15w
   1400084f3:	mov    WORD PTR [rbp+rcx*2-0x30],bx
   1400084f8:	cmp    rcx,0x8
   1400084fc:	jge    0x140008504
   1400084fe:	add    edi,r15d
   140008501:	add    rcx,r15
   140008504:	movsx  rax,bx
   140008508:	cmp    QWORD PTR [rdx+rax*8+0x153b0],r14
   140008510:	jne    0x1400084ef
   140008512:	movsxd rax,edi
   140008515:	add    rax,rax
   140008518:	cmp    rax,0x14
   14000851c:	jae    0x140008904
   140008522:	mov    WORD PTR [rbp+rax*1-0x30],r14w
   140008528:	lea    eax,[rdi+0x1]
   14000852b:	movsxd rcx,eax
   14000852e:	add    rcx,rcx
   140008531:	cmp    rcx,0x14
   140008535:	jae    0x1400088fe
   14000853b:	mov    WORD PTR [rbp+rcx*1-0x30],r14w
   140008541:	mov    ebx,0xc5d
   140008546:	mov    ecx,ebx
   140008548:	mov    DWORD PTR [rsp+0x44],edi
   14000854c:	mov    r13d,edi
   14000854f:	call   0x140008250
   140008554:	test   rax,rax
   140008557:	jne    0x140008562
   140008559:	mov    ecx,ebx
   14000855b:	call   0x1400081d0
   140008560:	jmp    0x1400085b2
   140008562:	lea    rdx,[rip+0x2937]        # 0x14000aea0
   140008569:	mov    rcx,rax
   14000856c:	call   QWORD PTR [rip+0x1dce]        # 0x14000a340
   140008572:	mov    QWORD PTR [rsp+0x50],rax
   140008577:	lea    rbx,[rsp+0x50]
   14000857c:	mov    rax,QWORD PTR [rbx]
   14000857f:	add    esi,r15d
   140008582:	lea    rbx,[rbx+0x8]
   140008586:	test   rax,rax
   140008589:	je     0x1400085b2
   14000858b:	movsxd r14,esi
   14000858e:	cmp    r14,0xf
   140008592:	jae    0x1400085aa
   140008594:	lea    rdx,[rip+0x2905]        # 0x14000aea0
   14000859b:	xor    ecx,ecx
   14000859d:	call   QWORD PTR [rip+0x1d9d]        # 0x14000a340
   1400085a3:	mov    QWORD PTR [rbx],rax
   1400085a6:	cmp    r14,0xf
   1400085aa:	mov    r14d,0x0
   1400085b0:	jb     0x14000857c
   1400085b2:	lea    eax,[rsi-0x2]
   1400085b5:	xor    esi,esi
   1400085b7:	movsxd r15,eax
   1400085ba:	test   eax,eax
   1400085bc:	jle    0x14000866c
   1400085c2:	mov    rcx,QWORD PTR [rsp+r14*8+0x50]
   1400085c7:	lea    rdx,[rip+0x28da]        # 0x14000aea8
   1400085ce:	call   QWORD PTR [rip+0x1d6c]        # 0x14000a340
   1400085d4:	mov    rcx,rax
   1400085d7:	lea    rdx,[rip+0x2372]        # 0x14000a950
   1400085de:	mov    rbx,rax
   1400085e1:	call   QWORD PTR [rip+0x1dd9]        # 0x14000a3c0
   1400085e7:	lea    r13,[rbx+rax*2]
   1400085eb:	jmp    0x14000863e
   1400085ed:	test   edi,edi
   1400085ef:	je     0x140008655
   1400085f1:	lea    rdx,[rip+0x2358]        # 0x14000a950
   1400085f8:	mov    rcx,rbx
   1400085fb:	call   QWORD PTR [rip+0x1dbf]        # 0x14000a3c0
   140008601:	lea    r12,[rbx+rax*2]
   140008605:	mov    rbx,rsi
   140008608:	movsxd rsi,edi
   14000860b:	test   edi,edi
   14000860d:	jle    0x14000863c
   14000860f:	movzx  edx,WORD PTR [rbp+rbx*2-0x30]
   140008614:	lea    rax,[rip+0xffffffffffff79e5]        # 0x140000000
   14000861b:	mov    rcx,r12
   14000861e:	mov    rdx,QWORD PTR [rax+rdx*8+0x153a8]
   140008626:	call   QWORD PTR [rip+0x1c7c]        # 0x14000a2a8
   14000862c:	test   eax,eax
   14000862e:	je     0x1400086bc
   140008634:	inc    rbx
   140008637:	cmp    rbx,rsi
   14000863a:	jl     0x14000860f
   14000863c:	xor    esi,esi
   14000863e:	lea    rdx,[rip+0x2863]        # 0x14000aea8
   140008645:	xor    ecx,ecx
   140008647:	call   QWORD PTR [rip+0x1cf3]        # 0x14000a340
   14000864d:	mov    rbx,rax
   140008650:	test   rax,rax
   140008653:	jne    0x1400085ed
   140008655:	inc    r14
   140008658:	cmp    r14,r15
   14000865b:	jl     0x1400085c2
   140008661:	movzx  r12d,WORD PTR [rsp+0x40]
   140008667:	mov    r13d,DWORD PTR [rsp+0x44]
   14000866c:	movsxd r8,edi
   14000866f:	mov    rdx,rsi
   140008672:	test   edi,edi
   140008674:	jle    0x14000869a
   140008676:	lea    r9,[rip+0xffffffffffff7983]        # 0x140000000
   14000867d:	movzx  ecx,WORD PTR [rbp+rdx*2-0x30]
   140008682:	inc    rdx
   140008685:	mov    rax,QWORD PTR [r9+rcx*8+0x153a8]
   14000868d:	mov    QWORD PTR [r9+rcx*8+0xdba0],rax
   140008695:	cmp    rdx,r8
   140008698:	jl     0x14000867d
   14000869a:	mov    edi,0xc5e
   14000869f:	mov    ebx,esi
   1400086a1:	mov    ecx,edi
   1400086a3:	mov    r15d,esi
   1400086a6:	call   0x140008250
   1400086ab:	test   rax,rax
   1400086ae:	jne    0x140008715
   1400086b0:	mov    ecx,edi
   1400086b2:	call   0x1400081d0
   1400086b7:	jmp    0x140008763
   1400086bc:	mov    rcx,r13
   1400086bf:	call   QWORD PTR [rip+0x1c73]        # 0x14000a338
   1400086c5:	movzx  ecx,WORD PTR [rbp+rbx*2-0x30]
   1400086ca:	lea    rdx,[rip+0xffffffffffff792f]        # 0x140000000
   1400086d1:	xor    esi,esi
   1400086d3:	mov    QWORD PTR [rdx+rcx*8+0xdba0],rax
   1400086db:	test   rax,rax
   1400086de:	je     0x1400086fe
   1400086e0:	lea    r8,[rbp+rbx*2-0x2e]
   1400086e5:	mov    WORD PTR [rbp+rbx*2-0x30],si
   1400086ea:	lea    edx,[rsi+0xa]
   1400086ed:	lea    rcx,[rbp-0x30]
   1400086f1:	call   QWORD PTR [rip+0x1bc1]        # 0x14000a2b8
   1400086f7:	dec    edi
   1400086f9:	jmp    0x14000863e
   1400086fe:	xor    edx,edx
   140008700:	mov    ecx,0xe80
   140008705:	call   0x1400073fc
   14000870a:	mov    ecx,0x2
   14000870f:	call   0x140007858
   140008714:	int3   
   140008715:	lea    rdx,[rip+0x2784]        # 0x14000aea0
   14000871c:	mov    rcx,rax
   14000871f:	call   QWORD PTR [rip+0x1c1b]        # 0x14000a340
   140008725:	mov    QWORD PTR [rsp+0x50],rax
   14000872a:	lea    rdi,[rsp+0x50]
   14000872f:	mov    rax,QWORD PTR [rdi]
   140008732:	inc    ebx
   140008734:	lea    rdi,[rdi+0x8]
   140008738:	test   rax,rax
   14000873b:	je     0x140008763
   14000873d:	movsxd rsi,ebx
   140008740:	cmp    rsi,0xf
   140008744:	jae    0x14000875c
   140008746:	lea    rdx,[rip+0x2753]        # 0x14000aea0
   14000874d:	xor    ecx,ecx
   14000874f:	call   QWORD PTR [rip+0x1beb]        # 0x14000a340
   140008755:	mov    QWORD PTR [rdi],rax
   140008758:	cmp    rsi,0xf
   14000875c:	mov    esi,0x0
   140008761:	jb     0x14000872f
   140008763:	cmp    QWORD PTR [rip+0x543e],rsi        # 0x14000dba8
   14000876a:	je     0x1400087b4
   14000876c:	lea    r14d,[rbx-0x2]
   140008770:	test   r14d,r14d
   140008773:	jle    0x1400087b4
   140008775:	lea    rdi,[rsp+0x50]
   14000877a:	mov    rbx,QWORD PTR [rdi]
   14000877d:	lea    rdx,[rip+0x21cc]        # 0x14000a950
   140008784:	mov    rcx,rbx
   140008787:	call   QWORD PTR [rip+0x1c33]        # 0x14000a3c0
   14000878d:	mov    rcx,QWORD PTR [rip+0x5414]        # 0x14000dba8
   140008794:	lea    rdx,[rbx+rax*2]
   140008798:	mov    QWORD PTR [rdi],rdx
   14000879b:	call   QWORD PTR [rip+0x1b07]        # 0x14000a2a8
   1400087a1:	test   eax,eax
   1400087a3:	je     0x140008857
   1400087a9:	inc    esi
   1400087ab:	add    rdi,0x8
   1400087af:	cmp    esi,r14d
   1400087b2:	jl     0x14000877a
   1400087b4:	mov    r14d,0x1
   1400087ba:	mov    rbx,QWORD PTR [rip+0xcb7f]        # 0x140015340
   1400087c1:	lea    rax,[rsp+0x44]
   1400087c6:	mov    QWORD PTR [rsp+0x30],rax
   1400087cb:	lea    r8,[rip+0xd82e]        # 0x140016000
   1400087d2:	lea    rax,[rip+0x1d6f]        # 0x14000a548
   1400087d9:	xor    edx,edx
   1400087db:	cmp    QWORD PTR [rip+0x540e],rbx        # 0x14000dbf0
   1400087e2:	lea    rcx,[rip+0xcb67]        # 0x140015350
   1400087e9:	mov    QWORD PTR [rsp+0x28],rax
   1400087ee:	mov    r9d,0x800
   1400087f4:	mov    DWORD PTR [rsp+0x20],0x111d
   1400087fc:	je     0x140008805
   1400087fe:	mov    rbx,QWORD PTR [rip+0xcafb]        # 0x140015300
   140008805:	call   0x140009290
   14000880a:	test   eax,eax
   14000880c:	lea    rdx,[rip+0xd7ed]        # 0x140016000
   140008813:	mov    r8d,r14d
   140008816:	cmovne rbx,QWORD PTR [rip+0xcae2]        # 0x140015300
   14000881e:	mov    rcx,rbx
   140008821:	call   0x140009468
   140008826:	lea    rcx,[rbp-0x10]
   14000882a:	cmp    r15d,r14d
   14000882d:	jne    0x140008865
   14000882f:	mov    r8,QWORD PTR [rip+0x5372]        # 0x14000dba8
   140008836:	mov    edx,0x200
   14000883b:	call   QWORD PTR [rip+0x1adf]        # 0x14000a320
   140008841:	movzx  edx,r12w
   140008845:	lea    rcx,[rbp-0x10]
   140008849:	call   0x1400080b0
   14000884e:	mov    ecx,r14d
   140008851:	call   0x140007858
   140008856:	int3   
   140008857:	mov    r14d,0x1
   14000885d:	mov    r15d,r14d
   140008860:	jmp    0x1400087ba
   140008865:	mov    r8,QWORD PTR [rip+0x5334]        # 0x14000dba0
   14000886c:	mov    ebx,0x200
   140008871:	mov    edx,ebx
   140008873:	call   QWORD PTR [rip+0x1aa7]        # 0x14000a320
   140008879:	movsxd rsi,r13d
   14000887c:	mov    rdi,r14
   14000887f:	cmp    r14,rsi
   140008882:	jg     0x1400088cc
   140008884:	or     r15,0xffffffffffffffff
   140008888:	lea    r12,[rip+0xffffffffffff7771]        # 0x140000000
   14000888f:	mov    r9,r15
   140008892:	lea    r8,[rip+0x2617]        # 0x14000aeb0
   140008899:	mov    rdx,rbx
   14000889c:	lea    rcx,[rbp-0x10]
   1400088a0:	call   QWORD PTR [rip+0x1aa2]        # 0x14000a348
   1400088a6:	mov    r8,QWORD PTR [r12+rdi*8+0xdba0]
   1400088ae:	lea    rcx,[rbp-0x10]
   1400088b2:	mov    r9,r15
   1400088b5:	mov    rdx,rbx
   1400088b8:	call   QWORD PTR [rip+0x1a8a]        # 0x14000a348
   1400088be:	add    rdi,r14
   1400088c1:	cmp    rdi,rsi
   1400088c4:	jle    0x14000888f
   1400088c6:	movzx  r12d,WORD PTR [rsp+0x40]
   1400088cc:	xor    ebx,ebx
   1400088ce:	movzx  edx,r12w
   1400088d2:	lea    rcx,[rbp-0x10]
   1400088d6:	call   0x1400080b0
   1400088db:	test   eax,eax
   1400088dd:	jne    0x14000884e
   1400088e3:	lea    edx,[rax+0x20]
   1400088e6:	lea    rcx,[rbp-0x10]
   1400088ea:	call   QWORD PTR [rip+0x1a20]        # 0x14000a310
   1400088f0:	test   rax,rax
   1400088f3:	je     0x14000884e
   1400088f9:	mov    WORD PTR [rax],bx
   1400088fc:	jmp    0x1400088ce
   1400088fe:	call   0x140002998
   140008903:	int3   
   140008904:	call   0x140002998
   140008909:	int3   
   14000890a:	int3   
   14000890b:	int3   
   14000890c:	int3   
   14000890d:	int3   
   14000890e:	int3   
   14000890f:	int3   
   140008910:	mov    QWORD PTR [rsp+0x18],rbx
   140008915:	mov    QWORD PTR [rsp+0x20],rsi
   14000891a:	push   rdi
   14000891b:	sub    rsp,0x150
   140008922:	mov    rax,QWORD PTR [rip+0x46df]        # 0x14000d008
   140008929:	xor    rax,rsp
   14000892c:	mov    QWORD PTR [rsp+0x140],rax
   140008934:	xor    esi,esi
   140008936:	mov    rbx,rdx
   140008939:	mov    rdi,rcx
   14000893c:	test   rcx,rcx
   14000893f:	je     0x1400089ac
   140008941:	cmp    WORD PTR [rcx],si
   140008944:	je     0x1400089ac
   140008946:	lea    r9,[rsp+0x30]
   14000894b:	lea    rcx,[rsp+0x40]
   140008950:	call   0x14000981c
   140008955:	test   eax,eax
   140008957:	jne    0x1400089b1
   140008959:	lea    r8,[rsp+0x30]
   14000895e:	mov    rcx,rdi
   140008961:	call   0x1400098f4
   140008966:	test   eax,eax
   140008968:	je     0x1400089a4
   14000896a:	lea    rdx,[rip+0x4ad9]        # 0x14000d44a
   140008971:	mov    rcx,rdi
   140008974:	call   QWORD PTR [rip+0x192e]        # 0x14000a2a8
   14000897a:	test   eax,eax
   14000897c:	jne    0x140008988
   14000897e:	mov    DWORD PTR [rbx],0x1
   140008984:	xor    eax,eax
   140008986:	jmp    0x1400089b1
   140008988:	lea    rdx,[rip+0x4ab3]        # 0x14000d442
   14000898f:	mov    rcx,rdi
   140008992:	call   QWORD PTR [rip+0x1910]        # 0x14000a2a8
   140008998:	test   eax,eax
   14000899a:	jne    0x1400089ac
   14000899c:	mov    DWORD PTR [rbx],0x2
   1400089a2:	jmp    0x140008984
   1400089a4:	mov    eax,DWORD PTR [rsp+0x30]
   1400089a8:	mov    DWORD PTR [rbx],eax
   1400089aa:	jmp    0x140008984
   1400089ac:	mov    eax,0x57
   1400089b1:	mov    rcx,QWORD PTR [rsp+0x140]
   1400089b9:	xor    rcx,rsp
   1400089bc:	call   0x1400027c0
   1400089c1:	lea    r11,[rsp+0x150]
   1400089c9:	mov    rbx,QWORD PTR [r11+0x20]
   1400089cd:	mov    rsi,QWORD PTR [r11+0x28]
   1400089d1:	mov    rsp,r11
   1400089d4:	pop    rdi
   1400089d5:	ret    
   1400089d6:	int3   
   1400089d7:	int3   
   1400089d8:	int3   
   1400089d9:	int3   
   1400089da:	int3   
   1400089db:	int3   
   1400089dc:	sub    rsp,0x28
   1400089e0:	xor    r8d,r8d
   1400089e3:	lea    edx,[r8+0x2]
   1400089e7:	call   QWORD PTR [rip+0x1a33]        # 0x14000a420
   1400089ed:	xor    ecx,ecx
   1400089ef:	test   eax,eax
   1400089f1:	je     0x1400089fa
   1400089f3:	mov    eax,0xe8f
   1400089f8:	jmp    0x1400089fd
   1400089fa:	movzx  eax,cx
   1400089fd:	add    rsp,0x28
   140008a01:	ret    
   140008a02:	int3   
   140008a03:	int3   
   140008a04:	int3   
   140008a05:	int3   
   140008a06:	int3   
   140008a07:	int3   
   140008a08:	rex push rbx
   140008a0a:	push   rbp
   140008a0b:	push   rsi
   140008a0c:	push   rdi
   140008a0d:	push   r12
   140008a0f:	push   r13
   140008a11:	push   r14
   140008a13:	push   r15
   140008a15:	sub    rsp,0x458
   140008a1c:	mov    rax,QWORD PTR [rip+0x45e5]        # 0x14000d008
   140008a23:	xor    rax,rsp
   140008a26:	mov    QWORD PTR [rsp+0x440],rax
   140008a2e:	mov    ebx,DWORD PTR [rsp+0x4c0]
   140008a35:	mov    r10,rcx
   140008a38:	mov    r12,QWORD PTR [rsp+0x4c8]
   140008a40:	test   bl,0xa
   140008a43:	mov    rsi,r9
   140008a46:	setne  cl
   140008a49:	test   bl,0x4
   140008a4c:	setne  al
   140008a4f:	test   al,cl
   140008a51:	je     0x140008a7c
   140008a53:	mov    eax,0x57
   140008a58:	mov    rcx,QWORD PTR [rsp+0x440]
   140008a60:	xor    rcx,rsp
   140008a63:	call   0x1400027c0
   140008a68:	add    rsp,0x458
   140008a6f:	pop    r15
   140008a71:	pop    r14
   140008a73:	pop    r13
   140008a75:	pop    r12
   140008a77:	pop    rdi
   140008a78:	pop    rsi
   140008a79:	pop    rbp
   140008a7a:	pop    rbx
   140008a7b:	ret    
   140008a7c:	lea    rax,[rsp+0x30]
   140008a81:	movzx  r15d,bx
   140008a85:	mov    QWORD PTR [rsp+0x28],rax
   140008a8a:	movzx  r14d,bx
   140008a8e:	mov    DWORD PTR [rsp+0x20],r8d
   140008a93:	mov    r9d,0x200
   140008a99:	lea    r8,[rsp+0x40]
   140008a9e:	mov    rcx,r10
   140008aa1:	and    r15w,0x8
   140008aa6:	and    r14w,0x2
   140008aab:	call   0x140009958
   140008ab0:	mov    ebp,DWORD PTR [rsp+0x30]
   140008ab4:	xor    r13d,r13d
   140008ab7:	mov    edi,eax
   140008ab9:	test   eax,eax
   140008abb:	je     0x140008ac2
   140008abd:	test   bl,0x4
   140008ac0:	jne    0x140008b02
   140008ac2:	mov    r9,rbp
   140008ac5:	lea    r8,[rsp+0x40]
   140008aca:	mov    edx,0x1001
   140008acf:	lea    rcx,[rip+0x580a]        # 0x14000e2e0
   140008ad6:	mov    rbx,rbp
   140008ad9:	call   QWORD PTR [rip+0x17d1]        # 0x14000a2b0
   140008adf:	add    rbx,rbx
   140008ae2:	cmp    rbx,0x2002
   140008ae9:	jae    0x140008b33
   140008aeb:	lea    rdx,[rip+0x57ee]        # 0x14000e2e0
   140008af2:	xor    r8d,r8d
   140008af5:	mov    rcx,r12
   140008af8:	mov    WORD PTR [rbx+rdx*1],r13w
   140008afd:	call   0x140009468
   140008b02:	test   rsi,rsi
   140008b05:	je     0x140008b09
   140008b07:	mov    DWORD PTR [rsi],ebp
   140008b09:	test   r15w,r15w
   140008b0d:	je     0x140008b1c
   140008b0f:	test   edi,edi
   140008b11:	je     0x140008b1c
   140008b13:	mov    ecx,edi
   140008b15:	call   QWORD PTR [rip+0x1785]        # 0x14000a2a0
   140008b1b:	int3   
   140008b1c:	test   r14w,r14w
   140008b20:	je     0x140008b2c
   140008b22:	or     ecx,0xffffffff
   140008b25:	call   QWORD PTR [rip+0x1775]        # 0x14000a2a0
   140008b2b:	int3   
   140008b2c:	mov    eax,edi
   140008b2e:	jmp    0x140008a58
   140008b33:	call   0x140002998
   140008b38:	int3   
   140008b39:	int3   
   140008b3a:	int3   
   140008b3b:	int3   
   140008b3c:	int3   
   140008b3d:	int3   
   140008b3e:	int3   
   140008b3f:	int3   
   140008b40:	mov    QWORD PTR [rsp+0x8],rbx
   140008b45:	push   rbp
   140008b46:	push   rsi
   140008b47:	push   rdi
   140008b48:	push   r12
   140008b4a:	push   r13
   140008b4c:	push   r14
   140008b4e:	push   r15
   140008b50:	lea    rbp,[rsp-0x220]
   140008b58:	sub    rsp,0x320
   140008b5f:	mov    rax,QWORD PTR [rip+0x44a2]        # 0x14000d008
   140008b66:	xor    rax,rsp
   140008b69:	mov    QWORD PTR [rbp+0x210],rax
   140008b70:	xor    r12d,r12d
   140008b73:	movzx  r14d,r9w
   140008b77:	movzx  esi,r8w
   140008b7b:	movzx  ebx,dx
   140008b7e:	cmp    r12w,dx
   140008b82:	jae    0x140008b99
   140008b84:	movzx  r8d,dx
   140008b88:	mov    rdx,rcx
   140008b8b:	shl    r8,0x3
   140008b8f:	lea    rcx,[rsp+0x40]
   140008b94:	call   0x140002fb2
   140008b99:	mov    edi,0x3c
   140008b9e:	mov    QWORD PTR [rsp+0x28],r12
   140008ba3:	mov    r9d,edi
   140008ba6:	mov    DWORD PTR [rsp+0x20],0x10f4
   140008bae:	lea    r8,[rbp+0x110]
   140008bb5:	xor    edx,edx
   140008bb7:	xor    ecx,ecx
   140008bb9:	call   0x140009958
   140008bbe:	lea    r13d,[rdi-0x32]
   140008bc2:	test   eax,eax
   140008bc4:	je     0x140008be6
   140008bc6:	mov    rcx,QWORD PTR [rip+0xc733]        # 0x140015300
   140008bcd:	xor    r9d,r9d
   140008bd0:	mov    QWORD PTR [rsp+0x28],rcx
   140008bd5:	mov    r8d,eax
   140008bd8:	xor    ecx,ecx
   140008bda:	mov    DWORD PTR [rsp+0x20],r13d
   140008bdf:	xor    edx,edx
   140008be1:	call   0x140008a08
   140008be6:	mov    QWORD PTR [rsp+0x28],r12
   140008beb:	lea    r8,[rbp+0x190]
   140008bf2:	mov    r9d,edi
   140008bf5:	mov    DWORD PTR [rsp+0x20],0x10f5
   140008bfd:	xor    edx,edx
   140008bff:	xor    ecx,ecx
   140008c01:	call   0x140009958
   140008c06:	test   eax,eax
   140008c08:	je     0x140008c2a
   140008c0a:	mov    rcx,QWORD PTR [rip+0xc6ef]        # 0x140015300
   140008c11:	xor    r9d,r9d
   140008c14:	mov    QWORD PTR [rsp+0x28],rcx
   140008c19:	mov    r8d,eax
   140008c1c:	xor    ecx,ecx
   140008c1e:	mov    DWORD PTR [rsp+0x20],r13d
   140008c23:	xor    edx,edx
   140008c25:	call   0x140008a08
   140008c2a:	mov    QWORD PTR [rsp+0x28],r12
   140008c2f:	lea    r8,[rbp-0x70]
   140008c33:	mov    r9d,edi
   140008c36:	mov    DWORD PTR [rsp+0x20],0x10f8
   140008c3e:	xor    edx,edx
   140008c40:	xor    ecx,ecx
   140008c42:	call   0x140009958
   140008c47:	test   eax,eax
   140008c49:	je     0x140008c6b
   140008c4b:	mov    rcx,QWORD PTR [rip+0xc6ae]        # 0x140015300
   140008c52:	xor    r9d,r9d
   140008c55:	mov    QWORD PTR [rsp+0x28],rcx
   140008c5a:	mov    r8d,eax
   140008c5d:	xor    ecx,ecx
   140008c5f:	mov    DWORD PTR [rsp+0x20],r13d
   140008c64:	xor    edx,edx
   140008c66:	call   0x140008a08
   140008c6b:	mov    QWORD PTR [rsp+0x28],r12
   140008c70:	lea    r8,[rbp+0x10]
   140008c74:	mov    r9d,edi
   140008c77:	mov    DWORD PTR [rsp+0x20],0x10f9
   140008c7f:	xor    edx,edx
   140008c81:	xor    ecx,ecx
   140008c83:	call   0x140009958
   140008c88:	test   eax,eax
   140008c8a:	je     0x140008cac
   140008c8c:	mov    rcx,QWORD PTR [rip+0xc66d]        # 0x140015300
   140008c93:	xor    r9d,r9d
   140008c96:	mov    QWORD PTR [rsp+0x28],rcx
   140008c9b:	mov    r8d,eax
   140008c9e:	xor    ecx,ecx
   140008ca0:	mov    DWORD PTR [rsp+0x20],r13d
   140008ca5:	xor    edx,edx
   140008ca7:	call   0x140008a08
   140008cac:	movzx  eax,bx
   140008caf:	lea    rcx,[rbp+0x110]
   140008cb6:	test   r14w,r14w
   140008cba:	jne    0x140008cc3
   140008cbc:	lea    rcx,[rbp+0x190]
   140008cc3:	inc    bx
   140008cc6:	mov    QWORD PTR [rsp+rax*8+0x40],rcx
   140008ccb:	movzx  r15d,bx
   140008ccf:	movzx  edi,r12w
   140008cd3:	movzx  esi,si
   140008cd6:	test   di,di
   140008cd9:	je     0x140008d01
   140008cdb:	mov    rax,QWORD PTR [rip+0xc65e]        # 0x140015340
   140008ce2:	xor    r9d,r9d
   140008ce5:	mov    QWORD PTR [rsp+0x28],rax
   140008cea:	xor    edx,edx
   140008cec:	xor    ecx,ecx
   140008cee:	mov    DWORD PTR [rsp+0x20],0x8
   140008cf6:	mov    r8d,0xeac
   140008cfc:	call   0x140008a08
   140008d01:	mov    rax,QWORD PTR [rip+0xc638]        # 0x140015340
   140008d08:	lea    r9,[rsp+0x38]
   140008d0d:	mov    QWORD PTR [rsp+0x28],rax
   140008d12:	lea    rcx,[rsp+0x40]
   140008d17:	mov    r8d,esi
   140008d1a:	mov    DWORD PTR [rsp+0x20],0x8
   140008d22:	mov    edx,r15d
   140008d25:	call   0x140008a08
   140008d2a:	mov    ebx,eax
   140008d2c:	test   eax,eax
   140008d2e:	js     0x140008ddd
   140008d34:	lea    r9,[rsp+0x30]
   140008d39:	lea    r8,[rsp+0x34]
   140008d3e:	lea    rcx,[rbp+0x90]
   140008d45:	call   0x140007738
   140008d4a:	test   eax,eax
   140008d4c:	jne    0x140008dab
   140008d4e:	cmp    DWORD PTR [rsp+0x34],r12d
   140008d53:	je     0x140008e12
   140008d59:	lea    rax,[rbp-0x70]
   140008d5d:	or     r8,0xffffffffffffffff
   140008d61:	inc    r8
   140008d64:	cmp    WORD PTR [rax+r8*2],r12w
   140008d69:	jne    0x140008d61
   140008d6b:	lea    rdx,[rbp+0x90]
   140008d72:	lea    rcx,[rbp-0x70]
   140008d76:	call   QWORD PTR [rip+0x15dc]        # 0x14000a358
   140008d7c:	test   eax,eax
   140008d7e:	je     0x140008e0b
   140008d84:	lea    rax,[rbp+0x10]
   140008d88:	or     r8,0xffffffffffffffff
   140008d8c:	inc    r8
   140008d8f:	cmp    WORD PTR [rax+r8*2],r12w
   140008d94:	jne    0x140008d8c
   140008d96:	lea    rdx,[rbp+0x90]
   140008d9d:	lea    rcx,[rbp+0x10]
   140008da1:	call   QWORD PTR [rip+0x15b1]        # 0x14000a358
   140008da7:	test   eax,eax
   140008da9:	je     0x140008e07
   140008dab:	inc    di
   140008dae:	cmp    di,0x5
   140008db2:	jb     0x140008cd6
   140008db8:	mov    rax,QWORD PTR [rip+0xc541]        # 0x140015300
   140008dbf:	xor    r9d,r9d
   140008dc2:	mov    QWORD PTR [rsp+0x28],rax
   140008dc7:	xor    edx,edx
   140008dc9:	xor    ecx,ecx
   140008dcb:	mov    DWORD PTR [rsp+0x20],r13d
   140008dd0:	mov    r8d,0xead
   140008dd6:	call   0x140008a08
   140008ddb:	mov    eax,ebx
   140008ddd:	mov    rcx,QWORD PTR [rbp+0x210]
   140008de4:	xor    rcx,rsp
   140008de7:	call   0x1400027c0
   140008dec:	mov    rbx,QWORD PTR [rsp+0x360]
   140008df4:	add    rsp,0x320
   140008dfb:	pop    r15
   140008dfd:	pop    r14
   140008dff:	pop    r13
   140008e01:	pop    r12
   140008e03:	pop    rdi
   140008e04:	pop    rsi
   140008e05:	pop    rbp
   140008e06:	ret    
   140008e07:	xor    eax,eax
   140008e09:	jmp    0x140008ddd
   140008e0b:	mov    eax,0x1
   140008e10:	jmp    0x140008ddd
   140008e12:	mov    eax,0xffff
   140008e17:	cmp    WORD PTR [rsp+0x30],ax
   140008e1c:	jne    0x140008e4f
   140008e1e:	xor    edx,edx
   140008e20:	lea    rcx,[rip+0x1731]        # 0x14000a558
   140008e27:	call   0x140007b80
   140008e2c:	mov    rax,QWORD PTR [rip+0xc4cd]        # 0x140015300
   140008e33:	xor    r9d,r9d
   140008e36:	mov    QWORD PTR [rsp+0x28],rax
   140008e3b:	xor    edx,edx
   140008e3d:	xor    ecx,ecx
   140008e3f:	mov    DWORD PTR [rsp+0x20],r13d
   140008e44:	mov    r8d,0xead
   140008e4a:	call   0x140008a08
   140008e4f:	movzx  eax,r14w
   140008e53:	jmp    0x140008ddd
   140008e55:	int3   
   140008e56:	int3   
   140008e57:	int3   
   140008e58:	int3   
   140008e59:	int3   
   140008e5a:	int3   
   140008e5b:	int3   
   140008e5c:	mov    QWORD PTR [rsp+0x8],rbx
   140008e61:	push   rdi
   140008e62:	sub    rsp,0x60
   140008e66:	mov    QWORD PTR [rsp+0x50],rsp
   140008e6b:	mov    rdi,rdx
   140008e6e:	and    QWORD PTR [rsp+0x38],0x0
   140008e74:	lea    r8,[rsp+0x40]
   140008e79:	mov    edx,0x65
   140008e7e:	xor    ecx,ecx
   140008e80:	call   QWORD PTR [rip+0x160a]        # 0x14000a490
   140008e86:	test   eax,eax
   140008e88:	jne    0x140008f58
   140008e8e:	lea    r8,[rsp+0x48]
   140008e93:	lea    edx,[rax+0x1]
   140008e96:	xor    ecx,ecx
   140008e98:	call   QWORD PTR [rip+0x15ea]        # 0x14000a488
   140008e9e:	mov    ebx,eax
   140008ea0:	test   eax,eax
   140008ea2:	je     0x140008eb6
   140008ea4:	mov    rcx,QWORD PTR [rsp+0x40]
   140008ea9:	call   QWORD PTR [rip+0x1589]        # 0x14000a438
   140008eaf:	mov    eax,ebx
   140008eb1:	jmp    0x140008f58
   140008eb6:	lea    r8,[rsp+0x38]
   140008ebb:	mov    edx,0x1f6
   140008ec0:	xor    ecx,ecx
   140008ec2:	call   QWORD PTR [rip+0x15c8]        # 0x14000a490
   140008ec8:	mov    DWORD PTR [rsp+0x30],eax
   140008ecc:	test   eax,eax
   140008ece:	je     0x140008ee9
   140008ed0:	lea    rdx,[rip+0xc]        # 0x140008ee3
   140008ed7:	mov    rcx,QWORD PTR [rsp+0x50]
   140008edc:	call   0x140002fa6
   140008ee1:	nop
   140008ee2:	nop
   140008ee3:	mov    eax,DWORD PTR [rsp+0x30]
   140008ee7:	jmp    0x140008f58
   140008ee9:	lea    rax,[rsp+0x58]
   140008eee:	mov    QWORD PTR [rsp+0x20],rax
   140008ef3:	mov    r9,QWORD PTR [rsp+0x38]
   140008ef8:	mov    r8,QWORD PTR [rsp+0x48]
   140008efd:	mov    rdx,QWORD PTR [rsp+0x40]
   140008f02:	call   0x140008fa0
   140008f07:	mov    DWORD PTR [rsp+0x30],eax
   140008f0b:	test   eax,eax
   140008f0d:	je     0x140008f28
   140008f0f:	lea    rdx,[rip+0xc]        # 0x140008f22
   140008f16:	mov    rcx,QWORD PTR [rsp+0x50]
   140008f1b:	call   0x140002fa6
   140008f20:	nop
   140008f21:	nop
   140008f22:	mov    eax,DWORD PTR [rsp+0x30]
   140008f26:	jmp    0x140008f58
   140008f28:	mov    rax,QWORD PTR [rsp+0x58]
   140008f2d:	mov    QWORD PTR [rdi],rax
   140008f30:	mov    rcx,QWORD PTR [rsp+0x40]
   140008f35:	call   QWORD PTR [rip+0x14fd]        # 0x14000a438
   140008f3b:	mov    rcx,QWORD PTR [rsp+0x48]
   140008f40:	call   QWORD PTR [rip+0x14f2]        # 0x14000a438
   140008f46:	mov    rcx,QWORD PTR [rsp+0x38]
   140008f4b:	test   rcx,rcx
   140008f4e:	je     0x140008f56
   140008f50:	call   QWORD PTR [rip+0x14e2]        # 0x14000a438
   140008f56:	xor    eax,eax
   140008f58:	mov    rbx,QWORD PTR [rsp+0x70]
   140008f5d:	add    rsp,0x60
   140008f61:	pop    rdi
   140008f62:	ret    
   140008f63:	rex push rbp
   140008f65:	sub    rsp,0x30
   140008f69:	mov    rbp,rdx
   140008f6c:	mov    rcx,QWORD PTR [rbp+0x40]
   140008f70:	call   QWORD PTR [rip+0x14c2]        # 0x14000a438
   140008f76:	mov    rcx,QWORD PTR [rbp+0x48]
   140008f7a:	call   QWORD PTR [rip+0x14b8]        # 0x14000a438
   140008f80:	mov    rcx,QWORD PTR [rbp+0x38]
   140008f84:	test   rcx,rcx
   140008f87:	je     0x140008f90
   140008f89:	call   QWORD PTR [rip+0x14a9]        # 0x14000a438
   140008f8f:	nop
   140008f90:	add    rsp,0x30
   140008f94:	pop    rbp
   140008f95:	ret    
   140008f96:	int3   
   140008f97:	int3   
   140008f98:	int3   
   140008f99:	int3   
   140008f9a:	int3   
   140008f9b:	int3   
   140008f9c:	int3   
   140008f9d:	int3   
   140008f9e:	int3   
   140008f9f:	int3   
   140008fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140008fa5:	push   rbp
   140008fa6:	push   rsi
   140008fa7:	push   rdi
   140008fa8:	push   r12
   140008faa:	push   r13
   140008fac:	push   r14
   140008fae:	push   r15
   140008fb0:	mov    rbp,rsp
   140008fb3:	sub    rsp,0x60
   140008fb7:	mov    rax,QWORD PTR [rip+0x404a]        # 0x14000d008
   140008fbe:	xor    rax,rsp
   140008fc1:	mov    QWORD PTR [rbp-0x8],rax
   140008fc5:	mov    rdi,QWORD PTR [rbp+0x60]
   140008fc9:	lea    r10,[rip+0x4590]        # 0x14000d560
   140008fd0:	xor    r12d,r12d
   140008fd3:	xor    eax,eax
   140008fd5:	mov    r15,r9
   140008fd8:	mov    DWORD PTR [rbp-0x18],r12d
   140008fdc:	or     r9,0xffffffffffffffff
   140008fe0:	mov    QWORD PTR [rbp-0x14],rax
   140008fe4:	or     r13d,0xffffffff
   140008fe8:	mov    rsi,r8
   140008feb:	cmp    DWORD PTR [rip+0x456e],r13d        # 0x14000d560
   140008ff2:	mov    r14,rdx
   140008ff5:	mov    ebx,r12d
   140008ff8:	mov    ecx,r12d
   140008ffb:	je     0x140009036
   140008ffd:	cmp    ecx,0x3
   140009000:	jae    0x140009036
   140009002:	mov    edx,ecx
   140009004:	mov    eax,DWORD PTR [r10+rdx*8]
   140009008:	mov    r8,QWORD PTR [rax+r14*1]
   14000900c:	test   r8,r8
   14000900f:	je     0x140009029
   140009011:	mov    rax,r9
   140009014:	inc    rax
   140009017:	cmp    WORD PTR [r8+rax*2],r12w
   14000901c:	jne    0x140009014
   14000901e:	inc    eax
   140009020:	mov    DWORD PTR [rbp+rdx*4-0x18],eax
   140009024:	lea    ebx,[rbx+rax*2]
   140009027:	jmp    0x14000902e
   140009029:	mov    DWORD PTR [rbp+rdx*4-0x18],r12d
   14000902e:	inc    ecx
   140009030:	cmp    DWORD PTR [r10+rcx*8],r13d
   140009034:	jne    0x140008ffd
   140009036:	cmp    DWORD PTR [rip+0x4543],r13d        # 0x14000d580
   14000903d:	lea    r10,[rip+0x453c]        # 0x14000d580
   140009044:	mov    ecx,r12d
   140009047:	je     0x140009082
   140009049:	cmp    ecx,0x2
   14000904c:	jae    0x140009082
   14000904e:	mov    edx,ecx
   140009050:	mov    eax,DWORD PTR [r10+rdx*8]
   140009054:	mov    r8,QWORD PTR [rax+rsi*1]
   140009058:	test   r8,r8
   14000905b:	je     0x140009075
   14000905d:	mov    rax,r9
   140009060:	inc    rax
   140009063:	cmp    WORD PTR [r8+rax*2],r12w
   140009068:	jne    0x140009060
   14000906a:	inc    eax
   14000906c:	mov    DWORD PTR [rbp+rdx*4-0x28],eax
   140009070:	lea    ebx,[rbx+rax*2]
   140009073:	jmp    0x14000907a
   140009075:	mov    DWORD PTR [rbp+rdx*4-0x28],r12d
   14000907a:	inc    ecx
   14000907c:	cmp    DWORD PTR [r10+rcx*8],r13d
   140009080:	jne    0x140009049
   140009082:	cmp    DWORD PTR [rip+0x44b7],r13d        # 0x14000d540
   140009089:	lea    r10,[rip+0x44b0]        # 0x14000d540
   140009090:	mov    ecx,r12d
   140009093:	je     0x1400090ce
   140009095:	cmp    ecx,0x2
   140009098:	jae    0x1400090ce
   14000909a:	mov    edx,ecx
   14000909c:	mov    eax,DWORD PTR [r10+rdx*8]
   1400090a0:	mov    r8,QWORD PTR [rax+rsi*1]
   1400090a4:	test   r8,r8
   1400090a7:	je     0x1400090c1
   1400090a9:	mov    rax,r9
   1400090ac:	inc    rax
   1400090af:	cmp    WORD PTR [r8+rax*2],r12w
   1400090b4:	jne    0x1400090ac
   1400090b6:	inc    eax
   1400090b8:	mov    DWORD PTR [rbp+rdx*4-0x20],eax
   1400090bc:	lea    ebx,[rbx+rax*2]
   1400090bf:	jmp    0x1400090c6
   1400090c1:	mov    DWORD PTR [rbp+rdx*4-0x20],r12d
   1400090c6:	inc    ecx
   1400090c8:	cmp    DWORD PTR [r10+rcx*8],r13d
   1400090cc:	jne    0x140009095
   1400090ce:	lea    ecx,[rbx+0xb8]
   1400090d4:	mov    rdx,rdi
   1400090d7:	call   QWORD PTR [rip+0x134b]        # 0x14000a428
   1400090dd:	test   eax,eax
   1400090df:	je     0x1400090eb
   1400090e1:	mov    eax,0x8
   1400090e6:	jmp    0x14000923c
   1400090eb:	mov    r8,QWORD PTR [rdi]
   1400090ee:	mov    rdx,r14
   1400090f1:	mov    ecx,ebx
   1400090f3:	lea    rax,[r8+0xb8]
   1400090fa:	add    rax,rcx
   1400090fd:	lea    rbx,[rcx+0xb8]
   140009104:	mov    QWORD PTR [rbp-0x30],rax
   140009108:	lea    rcx,[rbp-0x30]
   14000910c:	lea    rax,[rbp-0x18]
   140009110:	mov    r9,rbx
   140009113:	mov    QWORD PTR [rsp+0x28],rax
   140009118:	lea    rax,[rip+0x4441]        # 0x14000d560
   14000911f:	mov    QWORD PTR [rsp+0x20],rax
   140009124:	call   0x140009a84
   140009129:	mov    r8,QWORD PTR [rdi]
   14000912c:	lea    rax,[rbp-0x28]
   140009130:	mov    QWORD PTR [rsp+0x28],rax
   140009135:	lea    rcx,[rbp-0x30]
   140009139:	lea    rax,[rip+0x4440]        # 0x14000d580
   140009140:	mov    r9,rbx
   140009143:	mov    rdx,rsi
   140009146:	mov    QWORD PTR [rsp+0x20],rax
   14000914b:	call   0x140009a84
   140009150:	mov    eax,DWORD PTR [r14+0x18]
   140009154:	mov    rcx,QWORD PTR [rdi]
   140009157:	mov    DWORD PTR [rcx+0x28],eax
   14000915a:	mov    eax,DWORD PTR [r14+0x1c]
   14000915e:	mov    rcx,QWORD PTR [rdi]
   140009161:	mov    DWORD PTR [rcx+0x2c],eax
   140009164:	mov    eax,DWORD PTR [r15]
   140009167:	mov    rcx,QWORD PTR [rdi]
   14000916a:	mov    DWORD PTR [rcx+0x34],eax
   14000916d:	mov    eax,DWORD PTR [r15+0x4]
   140009171:	mov    rcx,QWORD PTR [rdi]
   140009174:	mov    DWORD PTR [rcx+0x38],eax
   140009177:	mov    eax,DWORD PTR [r15+0x8]
   14000917b:	mov    rcx,QWORD PTR [rdi]
   14000917e:	mov    DWORD PTR [rcx+0x3c],eax
   140009181:	mov    rcx,QWORD PTR [rdi]
   140009184:	mov    eax,DWORD PTR [r15+0xc]
   140009188:	mov    DWORD PTR [rcx+0x48],eax
   14000918b:	mov    rax,QWORD PTR [rdi]
   14000918e:	mov    DWORD PTR [rax+0x4c],r13d
   140009192:	mov    eax,DWORD PTR [r15+0x1c]
   140009196:	mov    rcx,QWORD PTR [rdi]
   140009199:	mov    DWORD PTR [rcx+0x50],eax
   14000919c:	mov    rcx,QWORD PTR [rdi]
   14000919f:	mov    eax,DWORD PTR [r15+0x10]
   1400091a3:	mov    DWORD PTR [rcx+0x54],eax
   1400091a6:	mov    rax,QWORD PTR [rdi]
   1400091a9:	mov    DWORD PTR [rax+0x5c],r13d
   1400091ad:	mov    rax,QWORD PTR [rdi]
   1400091b0:	mov    DWORD PTR [rax+0x60],r13d
   1400091b4:	mov    rax,QWORD PTR [rdi]
   1400091b7:	mov    DWORD PTR [rax+0x64],r13d
   1400091bb:	mov    rcx,QWORD PTR [rdi]
   1400091be:	mov    eax,DWORD PTR [r15+0x14]
   1400091c2:	mov    DWORD PTR [rcx+0x68],eax
   1400091c5:	mov    rax,QWORD PTR [rdi]
   1400091c8:	mov    DWORD PTR [rax+0x6c],r13d
   1400091cc:	mov    rax,QWORD PTR [rdi]
   1400091cf:	mov    DWORD PTR [rax+0x70],r13d
   1400091d3:	mov    rax,QWORD PTR [rdi]
   1400091d6:	mov    DWORD PTR [rax+0x74],r13d
   1400091da:	mov    rax,QWORD PTR [rdi]
   1400091dd:	mov    DWORD PTR [rax+0x78],r13d
   1400091e1:	mov    rax,QWORD PTR [rdi]
   1400091e4:	mov    DWORD PTR [rax+0x7c],r13d
   1400091e8:	mov    rax,QWORD PTR [rdi]
   1400091eb:	mov    DWORD PTR [rax+0x80],r13d
   1400091f2:	mov    eax,DWORD PTR [r15+0x18]
   1400091f6:	mov    rcx,QWORD PTR [rdi]
   1400091f9:	mov    DWORD PTR [rcx+0x84],eax
   1400091ff:	mov    rax,QWORD PTR [rdi]
   140009202:	mov    QWORD PTR [rax+0x90],r12
   140009209:	mov    rax,QWORD PTR [rdi]
   14000920c:	mov    DWORD PTR [rax+0x98],r13d
   140009213:	lea    rax,[rbp-0x20]
   140009217:	mov    QWORD PTR [rsp+0x28],rax
   14000921c:	lea    rax,[rip+0x431d]        # 0x14000d540
   140009223:	mov    QWORD PTR [rsp+0x20],rax
   140009228:	mov    r8,QWORD PTR [rdi]
   14000922b:	lea    rcx,[rbp-0x30]
   14000922f:	mov    r9,rbx
   140009232:	mov    rdx,rsi
   140009235:	call   0x140009a84
   14000923a:	xor    eax,eax
   14000923c:	mov    rcx,QWORD PTR [rbp-0x8]
   140009240:	xor    rcx,rsp
   140009243:	call   0x1400027c0
   140009248:	mov    rbx,QWORD PTR [rsp+0xa0]
   140009250:	add    rsp,0x60
   140009254:	pop    r15
   140009256:	pop    r14
   140009258:	pop    r13
   14000925a:	pop    r12
   14000925c:	pop    rdi
   14000925d:	pop    rsi
   14000925e:	pop    rbp
   14000925f:	ret    
   140009260:	int3   
   140009261:	int3   
   140009262:	int3   
   140009263:	int3   
   140009264:	int3   
   140009265:	int3   
   140009266:	int3   
   140009267:	int3   
   140009268:	sub    rsp,0x28
   14000926c:	mov    edx,0x3a
   140009271:	call   QWORD PTR [rip+0x1021]        # 0x14000a298
   140009277:	xor    ecx,ecx
   140009279:	test   rax,rax
   14000927c:	je     0x140009285
   14000927e:	mov    WORD PTR [rax],cx
   140009281:	add    rax,0x2
   140009285:	add    rsp,0x28
   140009289:	ret    
   14000928a:	int3   
   14000928b:	int3   
   14000928c:	int3   
   14000928d:	int3   
   14000928e:	int3   
   14000928f:	int3   
   140009290:	mov    QWORD PTR [rsp+0x10],rbx
   140009295:	push   rbp
   140009296:	push   rsi
   140009297:	push   rdi
   140009298:	push   r12
   14000929a:	push   r13
   14000929c:	push   r14
   14000929e:	push   r15
   1400092a0:	sub    rsp,0xa0
   1400092a7:	mov    rax,QWORD PTR [rip+0x3d5a]        # 0x14000d008
   1400092ae:	xor    rax,rsp
   1400092b1:	mov    QWORD PTR [rsp+0x90],rax
   1400092b9:	mov    rsi,QWORD PTR [rsp+0x108]
   1400092c1:	xor    r13d,r13d
   1400092c4:	mov    r12,QWORD PTR [rsp+0x110]
   1400092cc:	mov    r15d,r9d
   1400092cf:	mov    r14,r8
   1400092d2:	mov    ebp,edx
   1400092d4:	mov    rbx,rcx
   1400092d7:	mov    edi,r13d
   1400092da:	test   r9d,r9d
   1400092dd:	je     0x1400092e3
   1400092df:	mov    WORD PTR [r8],r13w
   1400092e3:	cmp    edx,0x64
   1400092e6:	jbe    0x1400092f2
   1400092e8:	mov    eax,0x57
   1400092ed:	jmp    0x140009437
   1400092f2:	lea    rdx,[rip+0x1267]        # 0x14000a560
   1400092f9:	mov    rcx,rsi
   1400092fc:	call   0x140002fca
   140009301:	test   eax,eax
   140009303:	mov    rax,QWORD PTR [rip+0xccde]        # 0x140015fe8
   14000930a:	jne    0x140009313
   14000930c:	mov    ecx,0x3000
   140009311:	jmp    0x140009383
   140009313:	test   rax,rax
   140009316:	je     0x14000934a
   140009318:	lea    rdx,[rip+0xcac1]        # 0x140015de0
   14000931f:	mov    r10,rsi
   140009322:	sub    r10,rdx
   140009325:	movzx  r8d,WORD PTR [rdx]
   140009329:	movzx  r9d,WORD PTR [rdx+r10*1]
   14000932e:	sub    r8d,r9d
   140009331:	jne    0x14000933c
   140009333:	add    rdx,0x2
   140009337:	test   r9d,r9d
   14000933a:	jne    0x140009325
   14000933c:	test   r8d,r8d
   14000933f:	je     0x14000937e
   140009341:	mov    rcx,rax
   140009344:	call   QWORD PTR [rip+0xdf6]        # 0x14000a140
   14000934a:	mov    r8,rsi
   14000934d:	lea    rcx,[rip+0xca8c]        # 0x140015de0
   140009354:	mov    edx,0x104
   140009359:	call   QWORD PTR [rip+0xfc1]        # 0x14000a320
   14000935f:	mov    rcx,rsi
   140009362:	call   QWORD PTR [rip+0xdf8]        # 0x14000a160
   140009368:	mov    QWORD PTR [rip+0xcc79],rax        # 0x140015fe8
   14000936f:	test   rax,rax
   140009372:	jne    0x14000937e
   140009374:	mov    eax,0x13e
   140009379:	jmp    0x140009437
   14000937e:	mov    ecx,0x2800
   140009383:	test   ebp,ebp
   140009385:	jne    0x14000938b
   140009387:	bts    ecx,0x9
   14000938b:	mov    r8d,DWORD PTR [rsp+0x100]
   140009393:	xor    r9d,r9d
   140009396:	mov    QWORD PTR [rsp+0x30],rbx
   14000939b:	mov    rdx,rax
   14000939e:	mov    DWORD PTR [rsp+0x28],r15d
   1400093a3:	mov    QWORD PTR [rsp+0x20],r14
   1400093a8:	call   QWORD PTR [rip+0xdca]        # 0x14000a178
   1400093ae:	mov    DWORD PTR [r12],eax
   1400093b2:	test   eax,eax
   1400093b4:	jne    0x140009435
   1400093b6:	mov    WORD PTR [r14],r13w
   1400093ba:	call   QWORD PTR [rip+0xd18]        # 0x14000a0d8
   1400093c0:	mov    edi,eax
   1400093c2:	cmp    eax,0x13d
   1400093c7:	jne    0x140009435
   1400093c9:	mov    ecx,DWORD PTR [rsp+0x100]
   1400093d0:	lea    rdx,[rsp+0x40]
   1400093d5:	mov    r8d,0x10
   1400093db:	call   QWORD PTR [rip+0xee7]        # 0x14000a2c8
   1400093e1:	test   rbx,rbx
   1400093e4:	je     0x1400093f7
   1400093e6:	lea    rax,[rsp+0x40]
   1400093eb:	mov    QWORD PTR [rbx],rax
   1400093ee:	cmp    ebp,0x1
   1400093f1:	jbe    0x1400093f7
   1400093f3:	mov    QWORD PTR [rbx+0x8],rsi
   1400093f7:	mov    rdx,QWORD PTR [rip+0xcbea]        # 0x140015fe8
   1400093fe:	mov    edi,0x13d
   140009403:	mov    QWORD PTR [rsp+0x30],rbx
   140009408:	mov    r8d,edi
   14000940b:	mov    DWORD PTR [rsp+0x28],r15d
   140009410:	xor    r9d,r9d
   140009413:	mov    ecx,0x3000
   140009418:	mov    QWORD PTR [rsp+0x20],r14
   14000941d:	call   QWORD PTR [rip+0xd55]        # 0x14000a178
   140009423:	mov    DWORD PTR [r12],eax
   140009427:	cmp    ebp,0x1
   14000942a:	jbe    0x140009435
   14000942c:	test   rbx,rbx
   14000942f:	je     0x140009435
   140009431:	mov    QWORD PTR [rbx+0x8],r13
   140009435:	mov    eax,edi
   140009437:	mov    rcx,QWORD PTR [rsp+0x90]
   14000943f:	xor    rcx,rsp
   140009442:	call   0x1400027c0
   140009447:	mov    rbx,QWORD PTR [rsp+0xe8]
   14000944f:	add    rsp,0xa0
   140009456:	pop    r15
   140009458:	pop    r14
   14000945a:	pop    r13
   14000945c:	pop    r12
   14000945e:	pop    rdi
   14000945f:	pop    rsi
   140009460:	pop    rbp
   140009461:	ret    
   140009462:	int3   
   140009463:	int3   
   140009464:	int3   
   140009465:	int3   
   140009466:	int3   
   140009467:	int3   
   140009468:	mov    QWORD PTR [rsp+0x8],rbx
   14000946d:	mov    QWORD PTR [rsp+0x10],rbp
   140009472:	mov    QWORD PTR [rsp+0x18],rsi
   140009477:	push   rdi
   140009478:	sub    rsp,0x20
   14000947c:	mov    esi,r8d
   14000947f:	mov    rbx,rdx
   140009482:	or     r8,0xffffffffffffffff
   140009486:	mov    rdi,rcx
   140009489:	xor    ebp,ebp
   14000948b:	inc    r8
   14000948e:	cmp    WORD PTR [rdx+r8*2],bp
   140009493:	jne    0x14000948b
   140009495:	call   0x1400095a0
   14000949a:	test   esi,esi
   14000949c:	je     0x1400094cd
   14000949e:	jmp    0x1400094aa
   1400094a0:	cmp    ax,0xa
   1400094a4:	je     0x1400094b8
   1400094a6:	add    rbx,0x2
   1400094aa:	movzx  eax,WORD PTR [rbx]
   1400094ad:	test   ax,ax
   1400094b0:	jne    0x1400094a0
   1400094b2:	cmp    ax,0xa
   1400094b6:	jne    0x1400094cd
   1400094b8:	mov    r8d,0x2
   1400094be:	lea    rdx,[rip+0x1093]        # 0x14000a558
   1400094c5:	mov    rcx,rdi
   1400094c8:	call   0x1400095a0
   1400094cd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400094d2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400094d7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400094dc:	add    rsp,0x20
   1400094e0:	pop    rdi
   1400094e1:	ret    
   1400094e2:	int3   
   1400094e3:	int3   
   1400094e4:	int3   
   1400094e5:	int3   
   1400094e6:	int3   
   1400094e7:	int3   
   1400094e8:	mov    QWORD PTR [rsp+0x10],rbx
   1400094ed:	push   rdi
   1400094ee:	mov    eax,0x1060
   1400094f3:	call   0x140003000
   1400094f8:	sub    rsp,rax
   1400094fb:	mov    rax,QWORD PTR [rip+0x3b06]        # 0x14000d008
   140009502:	xor    rax,rsp
   140009505:	mov    QWORD PTR [rsp+0x1050],rax
   14000950d:	lea    rax,[rsp+0x40]
   140009512:	mov    ebx,ecx
   140009514:	mov    QWORD PTR [rsp+0x30],rax
   140009519:	lea    r8,[rsp+0x50]
   14000951e:	lea    rax,[rip+0x1023]        # 0x14000a548
   140009525:	mov    r9d,0x800
   14000952b:	mov    QWORD PTR [rsp+0x28],rax
   140009530:	lea    rcx,[rip+0xbe19]        # 0x140015350
   140009537:	mov    DWORD PTR [rsp+0x20],edx
   14000953b:	or     edi,0xffffffff
   14000953e:	xor    edx,edx
   140009540:	mov    DWORD PTR [rsp+0x40],r9d
   140009545:	call   0x140009290
   14000954a:	test   eax,eax
   14000954c:	jne    0x140009577
   14000954e:	lea    rcx,[rsp+0x50]
   140009553:	call   0x140007aec
   140009558:	cmp    eax,ebx
   14000955a:	jle    0x140009568
   14000955c:	lea    rcx,[rsp+0x50]
   140009561:	call   0x140007aec
   140009566:	mov    ebx,eax
   140009568:	lea    ecx,[rbx+0x2]
   14000956b:	lea    rdx,[rsp+0x50]
   140009570:	call   0x140009680
   140009575:	mov    edi,eax
   140009577:	mov    eax,edi
   140009579:	mov    rcx,QWORD PTR [rsp+0x1050]
   140009581:	xor    rcx,rsp
   140009584:	call   0x1400027c0
   140009589:	mov    rbx,QWORD PTR [rsp+0x1078]
   140009591:	add    rsp,0x1060
   140009598:	pop    rdi
   140009599:	ret    
   14000959a:	int3   
   14000959b:	int3   
   14000959c:	int3   
   14000959d:	int3   
   14000959e:	int3   
   14000959f:	int3   
   1400095a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400095a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400095aa:	mov    DWORD PTR [rsp+0x18],r8d
   1400095af:	push   rdi
   1400095b0:	sub    rsp,0x40
   1400095b4:	mov    rsi,rdx
   1400095b7:	mov    rdi,rcx
   1400095ba:	call   QWORD PTR [rip+0xb38]        # 0x14000a0f8
   1400095c0:	btr    eax,0xf
   1400095c4:	cmp    eax,0x2
   1400095c7:	jne    0x1400095f9
   1400095c9:	lea    rdx,[rsp+0x68]
   1400095ce:	mov    rcx,rdi
   1400095d1:	call   QWORD PTR [rip+0xa89]        # 0x14000a060
   1400095d7:	test   eax,eax
   1400095d9:	je     0x1400095f9
   1400095db:	and    QWORD PTR [rsp+0x20],0x0
   1400095e1:	lea    r9,[rsp+0x60]
   1400095e6:	mov    r8d,DWORD PTR [rsp+0x60]
   1400095eb:	mov    rdx,rsi
   1400095ee:	mov    rcx,rdi
   1400095f1:	call   QWORD PTR [rip+0xa79]        # 0x14000a070
   1400095f7:	jmp    0x140009667
   1400095f9:	mov    edx,DWORD PTR [rsp+0x60]
   1400095fd:	xor    ecx,ecx
   1400095ff:	add    rdx,rdx
   140009602:	call   QWORD PTR [rip+0xb28]        # 0x14000a130
   140009608:	mov    rbx,rax
   14000960b:	test   rax,rax
   14000960e:	je     0x140009667
   140009610:	and    QWORD PTR [rsp+0x38],0x0
   140009616:	xor    edx,edx
   140009618:	mov    r9d,DWORD PTR [rsp+0x60]
   14000961d:	mov    r8,rsi
   140009620:	and    QWORD PTR [rsp+0x30],0x0
   140009626:	lea    ecx,[r9+r9*1]
   14000962a:	mov    DWORD PTR [rsp+0x28],ecx
   14000962e:	lea    ecx,[rdx+0x1]
   140009631:	mov    QWORD PTR [rsp+0x20],rax
   140009636:	call   QWORD PTR [rip+0xc04]        # 0x14000a240
   14000963c:	mov    DWORD PTR [rsp+0x60],eax
   140009640:	test   eax,eax
   140009642:	je     0x14000965e
   140009644:	and    QWORD PTR [rsp+0x20],0x0
   14000964a:	lea    r9,[rsp+0x60]
   14000964f:	mov    r8d,eax
   140009652:	mov    rdx,rbx
   140009655:	mov    rcx,rdi
   140009658:	call   QWORD PTR [rip+0xa8a]        # 0x14000a0e8
   14000965e:	mov    rcx,rbx
   140009661:	call   QWORD PTR [rip+0xac1]        # 0x14000a128
   140009667:	mov    rbx,QWORD PTR [rsp+0x50]
   14000966c:	mov    rsi,QWORD PTR [rsp+0x58]
   140009671:	add    rsp,0x40
   140009675:	pop    rdi
   140009676:	ret    
   140009677:	int3   
   140009678:	int3   
   140009679:	int3   
   14000967a:	int3   
   14000967b:	int3   
   14000967c:	int3   
   14000967d:	int3   
   14000967e:	int3   
   14000967f:	int3   
   140009680:	mov    QWORD PTR [rsp+0x18],rbx
   140009685:	mov    QWORD PTR [rsp+0x20],rsi
   14000968a:	push   rdi
   14000968b:	sub    rsp,0x40
   14000968f:	mov    rax,QWORD PTR [rip+0x3972]        # 0x14000d008
   140009696:	xor    rax,rsp
   140009699:	mov    QWORD PTR [rsp+0x38],rax
   14000969e:	mov    ebx,ecx
   1400096a0:	mov    rsi,rdx
   1400096a3:	mov    ecx,0xfffffff5
   1400096a8:	call   QWORD PTR [rip+0xaea]        # 0x14000a198
   1400096ae:	cmp    rax,0xffffffffffffffff
   1400096b2:	je     0x140009717
   1400096b4:	lea    rdx,[rsp+0x20]
   1400096b9:	mov    rcx,rax
   1400096bc:	mov    edi,0x7fffffff
   1400096c1:	call   QWORD PTR [rip+0x9c9]        # 0x14000a090
   1400096c7:	movzx  ecx,WORD PTR [rsp+0x24]
   1400096cc:	test   eax,eax
   1400096ce:	je     0x1400096da
   1400096d0:	movsx  edi,WORD PTR [rsp+0x20]
   1400096d5:	movsx  eax,cx
   1400096d8:	sub    edi,eax
   1400096da:	cmp    ebx,edi
   1400096dc:	jle    0x1400096ef
   1400096de:	test   cx,cx
   1400096e1:	je     0x1400096ef
   1400096e3:	lea    rcx,[rip+0x17e6]        # 0x14000aed0
   1400096ea:	call   0x140007b80
   1400096ef:	mov    r9d,0x1000
   1400096f5:	lea    r8,[rip+0x6c04]        # 0x140010300
   1400096fc:	mov    rdx,rsi
   1400096ff:	mov    ecx,ebx
   140009701:	call   0x140007908
   140009706:	mov    rdx,rax
   140009709:	lea    rcx,[rip+0x17c8]        # 0x14000aed8
   140009710:	call   0x140007b80
   140009715:	jmp    0x14000971a
   140009717:	or     ebx,0xffffffff
   14000971a:	mov    eax,ebx
   14000971c:	mov    rcx,QWORD PTR [rsp+0x38]
   140009721:	xor    rcx,rsp
   140009724:	call   0x1400027c0
   140009729:	mov    rbx,QWORD PTR [rsp+0x60]
   14000972e:	mov    rsi,QWORD PTR [rsp+0x68]
   140009733:	add    rsp,0x40
   140009737:	pop    rdi
   140009738:	ret    
   140009739:	int3   
   14000973a:	int3   
   14000973b:	int3   
   14000973c:	int3   
   14000973d:	int3   
   14000973e:	int3   
   14000973f:	int3   
   140009740:	mov    r11,rsp
   140009743:	mov    QWORD PTR [r11+0x10],rbx
   140009747:	mov    QWORD PTR [r11+0x18],rbp
   14000974b:	mov    QWORD PTR [r11+0x8],rcx
   14000974f:	push   rsi
   140009750:	push   rdi
   140009751:	push   r14
   140009753:	sub    rsp,0x50
   140009757:	mov    rax,QWORD PTR [rsp+0x98]
   14000975f:	mov    rsi,r9
   140009762:	xor    ebx,ebx
   140009764:	xor    ecx,ecx
   140009766:	mov    QWORD PTR [r11-0x28],rbx
   14000976a:	mov    rdi,r8
   14000976d:	mov    QWORD PTR [r11-0x30],rax
   140009771:	mov    ebp,edx
   140009773:	mov    eax,DWORD PTR [rsp+0x90]
   14000977a:	mov    DWORD PTR [rsp+0x30],eax
   14000977e:	lea    rax,[r11+0x8]
   140009782:	mov    QWORD PTR [r11-0x40],rax
   140009786:	mov    QWORD PTR [r11-0x48],r9
   14000978a:	or     r9d,0xffffffff
   14000978e:	call   QWORD PTR [rip+0xaf4]        # 0x14000a288
   140009794:	mov    r14d,eax
   140009797:	test   eax,eax
   140009799:	je     0x1400097a2
   14000979b:	cmp    eax,0xea
   1400097a0:	jne    0x1400097fc
   1400097a2:	mov    rdi,QWORD PTR [rdi]
   1400097a5:	cmp    ebp,0x64
   1400097a8:	jne    0x1400097d4
   1400097aa:	cmp    DWORD PTR [rsi],ebx
   1400097ac:	jbe    0x1400097fc
   1400097ae:	lea    rbp,[rdi+0x8]
   1400097b2:	mov    r8d,0x8
   1400097b8:	mov    rdx,rbp
   1400097bb:	mov    rcx,rdi
   1400097be:	call   QWORD PTR [rip+0xb34]        # 0x14000a2f8
   1400097c4:	inc    ebx
   1400097c6:	add    rbp,0x10
   1400097ca:	add    rdi,0x8
   1400097ce:	cmp    ebx,DWORD PTR [rsi]
   1400097d0:	jb     0x1400097b2
   1400097d2:	jmp    0x1400097fc
   1400097d4:	cmp    DWORD PTR [rsi],ebx
   1400097d6:	jbe    0x1400097fc
   1400097d8:	lea    rbp,[rdi+0x8]
   1400097dc:	mov    r8d,0x20
   1400097e2:	mov    rdx,rbp
   1400097e5:	mov    rcx,rdi
   1400097e8:	call   QWORD PTR [rip+0xb0a]        # 0x14000a2f8
   1400097ee:	inc    ebx
   1400097f0:	add    rbp,0x28
   1400097f4:	add    rdi,0x20
   1400097f8:	cmp    ebx,DWORD PTR [rsi]
   1400097fa:	jb     0x1400097dc
   1400097fc:	lea    r11,[rsp+0x50]
   140009801:	mov    eax,r14d
   140009804:	mov    rbx,QWORD PTR [r11+0x28]
   140009808:	mov    rbp,QWORD PTR [r11+0x30]
   14000980c:	mov    rsp,r11
   14000980f:	pop    r14
   140009811:	pop    rdi
   140009812:	pop    rsi
   140009813:	ret    
   140009814:	int3   
   140009815:	int3   
   140009816:	int3   
   140009817:	int3   
   140009818:	int3   
   140009819:	int3   
   14000981a:	int3   
   14000981b:	int3   
   14000981c:	mov    QWORD PTR [rsp+0x8],rbx
   140009821:	mov    QWORD PTR [rsp+0x10],rbp
   140009826:	mov    DWORD PTR [rsp+0x18],r8d
   14000982b:	push   rsi
   14000982c:	push   rdi
   14000982d:	push   r13
   14000982f:	push   r14
   140009831:	push   r15
   140009833:	sub    rsp,0x30
   140009837:	and    DWORD PTR [r9],0x0
   14000983b:	mov    rbx,r9
   14000983e:	cmp    DWORD PTR [rip+0x3c2b],0x0        # 0x14000d470
   140009845:	mov    rdi,rcx
   140009848:	mov    esi,0x80
   14000984d:	je     0x1400098d4
   140009853:	xor    ebp,ebp
   140009855:	lea    r13,[rip+0x3c14]        # 0x14000d470
   14000985c:	mov    rax,r13
   14000985f:	lea    r14d,[rsi-0x7e]
   140009863:	xor    r15d,r15d
   140009866:	mov    eax,DWORD PTR [rax]
   140009868:	lea    rcx,[rsp+0x70]
   14000986d:	mov    QWORD PTR [rsp+0x28],rcx
   140009872:	mov    r9d,esi
   140009875:	xor    ecx,ecx
   140009877:	mov    DWORD PTR [rsp+0x20],eax
   14000987b:	mov    r8,rdi
   14000987e:	xor    edx,edx
   140009880:	call   0x140009958
   140009885:	test   eax,eax
   140009887:	jne    0x1400098d6
   140009889:	mov    eax,DWORD PTR [r15+r13*1+0x4]
   14000988e:	lea    rdx,[rip+0x3c0b]        # 0x14000d4a0
   140009895:	mov    ecx,r14d
   140009898:	inc    rbp
   14000989b:	add    rcx,rcx
   14000989e:	mov    r15,rbp
   1400098a1:	shl    r15,0x3
   1400098a5:	inc    r14d
   1400098a8:	mov    DWORD PTR [rdx+rcx*8+0x8],eax
   1400098ac:	mov    QWORD PTR [rdx+rcx*8],rdi
   1400098b0:	mov    edx,DWORD PTR [rsp+0x70]
   1400098b4:	lea    eax,[rdx+0x1]
   1400098b7:	lea    rdi,[rdi+rax*2]
   1400098bb:	or     eax,0xffffffff
   1400098be:	sub    eax,edx
   1400098c0:	add    esi,eax
   1400098c2:	lea    eax,[rdx*2+0x2]
   1400098c9:	add    DWORD PTR [rbx],eax
   1400098cb:	lea    rax,[r15+r13*1]
   1400098cf:	cmp    DWORD PTR [rax],0x0
   1400098d2:	jne    0x140009866
   1400098d4:	xor    eax,eax
   1400098d6:	mov    rbx,QWORD PTR [rsp+0x60]
   1400098db:	mov    rbp,QWORD PTR [rsp+0x68]
   1400098e0:	add    rsp,0x30
   1400098e4:	pop    r15
   1400098e6:	pop    r14
   1400098e8:	pop    r13
   1400098ea:	pop    rdi
   1400098eb:	pop    rsi
   1400098ec:	ret    
   1400098ed:	int3   
   1400098ee:	int3   
   1400098ef:	int3   
   1400098f0:	int3   
   1400098f1:	int3   
   1400098f2:	int3   
   1400098f3:	int3   
   1400098f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400098f9:	mov    QWORD PTR [rsp+0x10],rsi
   1400098fe:	push   rdi
   1400098ff:	sub    rsp,0x20
   140009903:	cmp    QWORD PTR [rip+0x3b95],0x0        # 0x14000d4a0
   14000990b:	lea    rbx,[rip+0x3b8e]        # 0x14000d4a0
   140009912:	mov    rdi,r8
   140009915:	mov    rsi,rcx
   140009918:	je     0x140009934
   14000991a:	mov    rdx,QWORD PTR [rbx]
   14000991d:	mov    rcx,rsi
   140009920:	call   QWORD PTR [rip+0x982]        # 0x14000a2a8
   140009926:	test   eax,eax
   140009928:	je     0x140009947
   14000992a:	add    rbx,0x10
   14000992e:	cmp    QWORD PTR [rbx],0x0
   140009932:	jne    0x14000991a
   140009934:	or     eax,0xffffffff
   140009937:	mov    rbx,QWORD PTR [rsp+0x30]
   14000993c:	mov    rsi,QWORD PTR [rsp+0x38]
   140009941:	add    rsp,0x20
   140009945:	pop    rdi
   140009946:	ret    
   140009947:	mov    eax,DWORD PTR [rbx+0x8]
   14000994a:	mov    DWORD PTR [rdi],eax
   14000994c:	xor    eax,eax
   14000994e:	jmp    0x140009937
   140009950:	int3   
   140009951:	int3   
   140009952:	int3   
   140009953:	int3   
   140009954:	int3   
   140009955:	int3   
   140009956:	int3   
   140009957:	int3   
   140009958:	mov    rax,rsp
   14000995b:	mov    QWORD PTR [rax+0x8],rbx
   14000995f:	mov    QWORD PTR [rax+0x10],rbp
   140009963:	mov    QWORD PTR [rax+0x18],rsi
   140009967:	push   rdi
   140009968:	push   r12
   14000996a:	push   r13
   14000996c:	push   r14
   14000996e:	push   r15
   140009970:	sub    rsp,0x40
   140009974:	xor    r15d,r15d
   140009977:	lea    r13,[rip+0xe2c2]        # 0x140017c40
   14000997e:	mov    WORD PTR [r8],r15w
   140009982:	mov    ebx,r9d
   140009985:	cmp    WORD PTR [rip+0xe2b3],r15w        # 0x140017c40
   14000998d:	mov    rdi,r8
   140009990:	mov    esi,edx
   140009992:	mov    DWORD PTR [rax+0x20],r15d
   140009996:	mov    rbp,rcx
   140009999:	mov    r14d,0x101
   14000999f:	jne    0x1400099b4
   1400099a1:	lea    r8,[rip+0xba0]        # 0x14000a548
   1400099a8:	mov    edx,r14d
   1400099ab:	mov    rcx,r13
   1400099ae:	call   QWORD PTR [rip+0x96c]        # 0x14000a320
   1400099b4:	cmp    WORD PTR [rip+0xe494],r15w        # 0x140017e50
   1400099bc:	lea    r12,[rip+0xe48d]        # 0x140017e50
   1400099c3:	jne    0x1400099d8
   1400099c5:	lea    r8,[rip+0xb94]        # 0x14000a560
   1400099cc:	mov    rdx,r14
   1400099cf:	mov    rcx,r12
   1400099d2:	call   QWORD PTR [rip+0x948]        # 0x14000a320
   1400099d8:	mov    r14d,DWORD PTR [rsp+0x90]
   1400099e0:	lea    rax,[rsp+0x88]
   1400099e8:	mov    QWORD PTR [rsp+0x30],rax
   1400099ed:	dec    ebx
   1400099ef:	mov    QWORD PTR [rsp+0x28],r13
   1400099f4:	mov    r9d,ebx
   1400099f7:	mov    r8,rdi
   1400099fa:	mov    DWORD PTR [rsp+0x20],r14d
   1400099ff:	mov    edx,esi
   140009a01:	mov    rcx,rbp
   140009a04:	call   0x140009290
   140009a09:	mov    edx,eax
   140009a0b:	cmp    eax,0x13d
   140009a10:	jne    0x140009a3b
   140009a12:	lea    rax,[rsp+0x88]
   140009a1a:	mov    r9d,ebx
   140009a1d:	mov    QWORD PTR [rsp+0x30],rax
   140009a22:	mov    r8,rdi
   140009a25:	mov    QWORD PTR [rsp+0x28],r12
   140009a2a:	mov    edx,esi
   140009a2c:	mov    rcx,rbp
   140009a2f:	mov    DWORD PTR [rsp+0x20],r14d
   140009a34:	call   0x140009290
   140009a39:	mov    edx,eax
   140009a3b:	mov    ecx,DWORD PTR [rsp+0x88]
   140009a42:	cmp    ecx,ebx
   140009a44:	mov    rax,QWORD PTR [rsp+0x98]
   140009a4c:	cmovb  ebx,ecx
   140009a4f:	mov    WORD PTR [rdi+rbx*2],r15w
   140009a54:	test   rax,rax
   140009a57:	je     0x140009a5b
   140009a59:	mov    DWORD PTR [rax],ecx
   140009a5b:	lea    r11,[rsp+0x40]
   140009a60:	mov    eax,edx
   140009a62:	mov    rbx,QWORD PTR [r11+0x30]
   140009a66:	mov    rbp,QWORD PTR [r11+0x38]
   140009a6a:	mov    rsi,QWORD PTR [r11+0x40]
   140009a6e:	mov    rsp,r11
   140009a71:	pop    r15
   140009a73:	pop    r14
   140009a75:	pop    r13
   140009a77:	pop    r12
   140009a79:	pop    rdi
   140009a7a:	ret    
   140009a7b:	int3   
   140009a7c:	int3   
   140009a7d:	int3   
   140009a7e:	int3   
   140009a7f:	int3   
   140009a80:	int3   
   140009a81:	int3   
   140009a82:	int3   
   140009a83:	int3   
   140009a84:	mov    QWORD PTR [rsp+0x8],rbx
   140009a89:	mov    QWORD PTR [rsp+0x10],rbp
   140009a8e:	mov    QWORD PTR [rsp+0x18],rsi
   140009a93:	push   rdi
   140009a94:	push   r14
   140009a96:	push   r15
   140009a98:	sub    rsp,0x20
   140009a9c:	mov    rbx,QWORD PTR [rsp+0x60]
   140009aa1:	mov    rbp,r9
   140009aa4:	mov    rsi,r8
   140009aa7:	mov    r15,rdx
   140009aaa:	mov    r14,rcx
   140009aad:	cmp    DWORD PTR [rbx],0xffffffff
   140009ab0:	je     0x140009b13
   140009ab2:	mov    rdi,QWORD PTR [rsp+0x68]
   140009ab7:	add    rbx,0x4
   140009abb:	mov    r8d,DWORD PTR [rbx]
   140009abe:	cmp    r8,rbp
   140009ac1:	ja     0x140009b31
   140009ac3:	mov    ecx,DWORD PTR [rdi]
   140009ac5:	mov    r9,QWORD PTR [r14]
   140009ac8:	imul   rax,rcx,0xfffffffffffffffe
   140009acc:	add    rax,r9
   140009acf:	cmp    rax,rsi
   140009ad2:	jb     0x140009b31
   140009ad4:	test   ecx,ecx
   140009ad6:	jne    0x140009adf
   140009ad8:	and    QWORD PTR [r8+rsi*1],0x0
   140009add:	jmp    0x140009b05
   140009adf:	lea    rax,[rcx+rcx*1]
   140009ae3:	sub    r9,rax
   140009ae6:	mov    QWORD PTR [r14],r9
   140009ae9:	mov    rcx,r9
   140009aec:	mov    r8d,DWORD PTR [rbx-0x4]
   140009af0:	mov    edx,DWORD PTR [rdi]
   140009af2:	mov    r8,QWORD PTR [r8+r15*1]
   140009af6:	call   QWORD PTR [rip+0x824]        # 0x14000a320
   140009afc:	mov    ecx,DWORD PTR [rbx]
   140009afe:	mov    rax,QWORD PTR [r14]
   140009b01:	mov    QWORD PTR [rcx+rsi*1],rax
   140009b05:	add    rbx,0x8
   140009b09:	add    rdi,0x4
   140009b0d:	cmp    DWORD PTR [rbx-0x4],0xffffffff
   140009b11:	jne    0x140009abb
   140009b13:	mov    eax,0x1
   140009b18:	mov    rbx,QWORD PTR [rsp+0x40]
   140009b1d:	mov    rbp,QWORD PTR [rsp+0x48]
   140009b22:	mov    rsi,QWORD PTR [rsp+0x50]
   140009b27:	add    rsp,0x20
   140009b2b:	pop    r15
   140009b2d:	pop    r14
   140009b2f:	pop    rdi
   140009b30:	ret    
   140009b31:	xor    eax,eax
   140009b33:	jmp    0x140009b18
   140009b35:	int3   
   140009b36:	int3   
   140009b37:	int3   
   140009b38:	int3   
   140009b39:	int3   
   140009b3a:	int3   
   140009b3b:	int3   
   140009b3c:	int3   
   140009b3d:	int3   
   140009b3e:	int3   
   140009b3f:	int3   
   140009b40:	sub    rsp,0x38
   140009b44:	and    DWORD PTR [rsp+0x28],0x0
   140009b49:	mov    r9,QWORD PTR [rip+0x558]        # 0x14000a0a8
   140009b50:	mov    r8,QWORD PTR [rip+0x1391]        # 0x14000aee8
   140009b57:	mov    QWORD PTR [rsp+0x20],rdx
   140009b5c:	mov    rdx,rcx
   140009b5f:	lea    rcx,[rip+0xffffffffffff649a]        # 0x140000000
   140009b66:	call   QWORD PTR [rip+0x544]        # 0x14000a0b0
   140009b6c:	add    rsp,0x38
   140009b70:	ret    

Disassembly of section .rdata:

000000014000a000 <.rdata>:
   14000a000:	mov    al,ch
	...
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	(bad)
   14000a014:	add    BYTE PTR [rax],al
   14000a016:	add    BYTE PTR [rax],al
   14000a018:	push   rdx
   14000a019:	(bad)  
   14000a01a:	add    BYTE PTR [rax],al
   14000a01c:	add    BYTE PTR [rax],al
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	jbe    0x140009fe6
   14000a022:	add    BYTE PTR [rax],al
   14000a024:	add    BYTE PTR [rax],al
   14000a026:	add    BYTE PTR [rax],al
   14000a028:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a029:	(bad)  
   14000a02a:	add    BYTE PTR [rax],al
   14000a02c:	add    BYTE PTR [rax],al
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	(bad)  
   14000a031:	(bad)  
   14000a032:	add    BYTE PTR [rax],al
   14000a034:	add    BYTE PTR [rax],al
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	xor    ch,al
   14000a03a:	add    BYTE PTR [rax],al
   14000a03c:	add    BYTE PTR [rax],al
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	rex.X (bad) 
	...
   14000a04e:	add    BYTE PTR [rax],al
   14000a050:	movabs al,ds:0xcc
   14000a059:	add    BYTE PTR [rax],al
   14000a05b:	add    BYTE PTR [rax],al
   14000a05d:	add    BYTE PTR [rax],al
   14000a05f:	add    dl,ch
   14000a061:	mov    BYTE PTR [rax],0x0
   14000a064:	add    BYTE PTR [rax],al
   14000a066:	add    BYTE PTR [rax],al
   14000a068:	cld    
   14000a069:	mov    BYTE PTR [rax],0x0
   14000a06c:	add    BYTE PTR [rax],al
   14000a06e:	add    BYTE PTR [rax],al
   14000a070:	mov    esi,0xc7
   14000a075:	add    BYTE PTR [rax],al
   14000a077:	add    dl,bl
   14000a079:	mov    BYTE PTR [rax],0x0
   14000a07c:	add    BYTE PTR [rax],al
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	call   0x14000a148
	...
   14000a08d:	add    BYTE PTR [rax],al
   14000a08f:	add    BYTE PTR [rsi],bl
   14000a091:	enter  0x0,0x0
   14000a095:	add    BYTE PTR [rax],al
   14000a097:	add    BYTE PTR [rsi],cl
   14000a099:	mov    DWORD PTR [rax],0x0
	...
   14000a0a7:	add    BYTE PTR [rdx-0x34],ah
   14000a0aa:	add    BYTE PTR [rax],al
   14000a0ac:	add    BYTE PTR [rax],al
   14000a0ae:	add    BYTE PTR [rax],al
   14000a0b0:	rex.WX int3 
	...
   14000a0be:	add    BYTE PTR [rax],al
   14000a0c0:	hlt    
   14000a0c1:	(bad)
   14000a0c4:	add    BYTE PTR [rax],al
   14000a0c6:	add    BYTE PTR [rax],al
   14000a0c8:	adc    dh,al
   14000a0ca:	add    BYTE PTR [rax],al
   14000a0cc:	add    BYTE PTR [rax],al
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	push   0xffffffffffffffc7
   14000a0d2:	add    BYTE PTR [rax],al
   14000a0d4:	add    BYTE PTR [rax],al
   14000a0d6:	add    BYTE PTR [rax],al
   14000a0d8:	(bad)  
   14000a0d9:	(bad)  
	...
   14000a0e6:	add    BYTE PTR [rax],al
   14000a0e8:	jp     0x14000a0b1
   14000a0ea:	add    BYTE PTR [rax],al
   14000a0ec:	add    BYTE PTR [rax],al
   14000a0ee:	add    BYTE PTR [rax],al
   14000a0f0:	data16 (bad) 
   14000a0f2:	add    BYTE PTR [rax],al
   14000a0f4:	add    BYTE PTR [rax],al
   14000a0f6:	add    BYTE PTR [rax],al
   14000a0f8:	(bad)  
   14000a0f9:	mov    DWORD PTR [rax],0x0
	...
   14000a107:	add    BYTE PTR [rsp+rax*8],dh
	...
   14000a116:	add    BYTE PTR [rax],al
   14000a118:	(bad)  
   14000a119:	(bad)  
	...
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	fadd   st(7),st
   14000a12a:	add    BYTE PTR [rax],al
   14000a12c:	add    BYTE PTR [rax],al
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	cmp    al,0xc8
	...
   14000a13e:	add    BYTE PTR [rax],al
   14000a140:	adc    al,cl
   14000a142:	add    BYTE PTR [rax],al
   14000a144:	add    BYTE PTR [rax],al
   14000a146:	add    BYTE PTR [rax],al
   14000a148:	push   rsi
   14000a149:	mov    BYTE PTR [rax],0x0
   14000a14c:	add    BYTE PTR [rax],al
   14000a14e:	add    BYTE PTR [rax],al
   14000a150:	push   rsp
   14000a151:	mov    DWORD PTR [rax],0x0
	...
   14000a15f:	add    BYTE PTR [rdi+rax*8+0x0],bl
	...
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a171:	ret    
   14000a172:	add    BYTE PTR [rax],al
   14000a174:	add    BYTE PTR [rax],al
   14000a176:	add    BYTE PTR [rax],al
   14000a178:	lods   al,BYTE PTR ds:[rsi]
   14000a179:	mov    DWORD PTR [rax],0x0
   14000a17f:	add    BYTE PTR [rdx-0x3d],dh
	...
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	(bad)  
   14000a191:	ret    
   14000a192:	add    BYTE PTR [rax],al
   14000a194:	add    BYTE PTR [rax],al
   14000a196:	add    BYTE PTR [rax],al
   14000a198:	inc    bl
	...
   14000a1a6:	add    BYTE PTR [rax],al
   14000a1a8:	rol    bl,cl
   14000a1aa:	add    BYTE PTR [rax],al
   14000a1ac:	add    BYTE PTR [rax],al
   14000a1ae:	add    BYTE PTR [rax],al
   14000a1b0:	(bad)  
   14000a1b1:	mov    BYTE PTR [rax],0x0
   14000a1b4:	add    BYTE PTR [rax],al
   14000a1b6:	add    BYTE PTR [rax],al
   14000a1b8:	test   dh,al
   14000a1ba:	add    BYTE PTR [rax],al
   14000a1bc:	add    BYTE PTR [rax],al
   14000a1be:	add    BYTE PTR [rax],al
   14000a1c0:	mov    BYTE PTR cs:[rax],0x0
   14000a1c4:	add    BYTE PTR [rax],al
   14000a1c6:	add    BYTE PTR [rax],al
   14000a1c8:	rex.X mov BYTE PTR [rax],0x0
   14000a1cc:	add    BYTE PTR [rax],al
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	jle    0x14000a195
	...
   14000a1de:	add    BYTE PTR [rax],al
   14000a1e0:	push   0xffffffffffffffc6
	...
   14000a1ee:	add    BYTE PTR [rax],al
   14000a1f0:	push   0xc5
   14000a1f5:	add    BYTE PTR [rax],al
   14000a1f7:	add    BYTE PTR [rax],ah
   14000a1f9:	(bad)
   14000a1fc:	add    BYTE PTR [rax],al
   14000a1fe:	add    BYTE PTR [rax],al
   14000a200:	rol    ah,0x0
   14000a203:	add    BYTE PTR [rax],al
   14000a205:	add    BYTE PTR [rax],al
   14000a207:	add    BYTE PTR [rsp+rax*8+0x0],dl
   14000a20e:	add    BYTE PTR [rax],al
   14000a210:	pop    rdx
   14000a211:	(bad)
	...
   14000a220:	mov    dl,0xc5
   14000a222:	add    BYTE PTR [rax],al
   14000a224:	add    BYTE PTR [rax],al
   14000a226:	add    BYTE PTR [rax],al
   14000a228:	loopne 0x14000a1ef
   14000a22a:	add    BYTE PTR [rax],al
   14000a22c:	add    BYTE PTR [rax],al
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	mov    ch,0x0
	...
   14000a23f:	add    BYTE PTR [rsi+0xc7],al
	...
   14000a24d:	add    BYTE PTR [rax],al
   14000a24f:	add    BYTE PTR [rax+0xc3],dl
   14000a255:	add    BYTE PTR [rax],al
   14000a257:	add    BYTE PTR [rdx+0xc5],ch
	...
   14000a265:	add    BYTE PTR [rax],al
   14000a267:	add    BYTE PTR [rax+0xc6],dh
   14000a26d:	add    BYTE PTR [rax],al
   14000a26f:	add    BYTE PTR [rbx+rax*8+0x0],bh
   14000a276:	add    BYTE PTR [rax],al
   14000a278:	retf   0xc6
	...
   14000a287:	add    BYTE PTR [rbx+rcx*8+0x0],al
	...
   14000a297:	add    al,ah
   14000a299:	rol    DWORD PTR [rax],0x0
   14000a29c:	add    BYTE PTR [rax],al
   14000a29e:	add    BYTE PTR [rax],al
   14000a2a0:	cmp    al,0xc2
   14000a2a2:	add    BYTE PTR [rax],al
   14000a2a4:	add    BYTE PTR [rax],al
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	rex.R ret 0x0
   14000a2ac:	add    BYTE PTR [rax],al
   14000a2ae:	add    BYTE PTR [rax],al
   14000a2b0:	push   rax
   14000a2b1:	ret    0x0
   14000a2b4:	add    BYTE PTR [rax],al
   14000a2b6:	add    BYTE PTR [rax],al
   14000a2b8:	sbb    dl,al
   14000a2ba:	add    BYTE PTR [rax],al
   14000a2bc:	add    BYTE PTR [rax],al
   14000a2be:	add    BYTE PTR [rax],al
   14000a2c0:	pop    rsp
   14000a2c1:	ret    0x0
   14000a2c4:	add    BYTE PTR [rax],al
   14000a2c6:	add    BYTE PTR [rax],al
   14000a2c8:	fs ret 0x0
   14000a2cc:	add    BYTE PTR [rax],al
   14000a2ce:	add    BYTE PTR [rax],al
   14000a2d0:	outs   dx,BYTE PTR ds:[rsi]
   14000a2d1:	ret    0x0
   14000a2d4:	add    BYTE PTR [rax],al
   14000a2d6:	add    BYTE PTR [rax],al
   14000a2d8:	loopne 0x14000a2a6
   14000a2da:	add    BYTE PTR [rax],al
   14000a2dc:	add    BYTE PTR [rax],al
   14000a2de:	add    BYTE PTR [rax],al
   14000a2e0:	lock int3 
   14000a2e2:	add    BYTE PTR [rax],al
   14000a2e4:	add    BYTE PTR [rax],al
   14000a2e6:	add    BYTE PTR [rax],al
   14000a2e8:	js     0x14000a2ac
   14000a2ea:	add    BYTE PTR [rax],al
   14000a2ec:	add    BYTE PTR [rax],al
   14000a2ee:	add    BYTE PTR [rax],al
   14000a2f0:	test   dl,al
   14000a2f2:	add    BYTE PTR [rax],al
   14000a2f4:	add    BYTE PTR [rax],al
   14000a2f6:	add    BYTE PTR [rax],al
   14000a2f8:	rex int3 
   14000a2fa:	add    BYTE PTR [rax],al
   14000a2fc:	add    BYTE PTR [rax],al
   14000a2fe:	add    BYTE PTR [rax],al
   14000a300:	cli    
   14000a301:	int3   
   14000a302:	add    BYTE PTR [rax],al
   14000a304:	add    BYTE PTR [rax],al
   14000a306:	add    BYTE PTR [rax],al
   14000a308:	mov    es,edx
   14000a30a:	add    BYTE PTR [rax],al
   14000a30c:	add    BYTE PTR [rax],al
   14000a30e:	add    BYTE PTR [rax],al
   14000a310:	cwde   
   14000a311:	ret    0x0
   14000a314:	add    BYTE PTR [rax],al
   14000a316:	add    BYTE PTR [rax],al
   14000a318:	movabs ds:0x30000000000000c2,al
   14000a321:	ret    0x0
   14000a324:	add    BYTE PTR [rax],al
   14000a326:	add    BYTE PTR [rax],al
   14000a328:	or     al,0xc2
   14000a32a:	add    BYTE PTR [rax],al
   14000a32c:	add    BYTE PTR [rax],al
   14000a32e:	add    BYTE PTR [rax],al
   14000a330:	add    al,dl
   14000a332:	add    BYTE PTR [rax],al
   14000a334:	add    BYTE PTR [rax],al
   14000a336:	add    BYTE PTR [rax],al
   14000a338:	ss int3 
   14000a33a:	add    BYTE PTR [rax],al
   14000a33c:	add    BYTE PTR [rax],al
   14000a33e:	add    BYTE PTR [rax],al
   14000a340:	sub    al,0xcc
   14000a342:	add    BYTE PTR [rax],al
   14000a344:	add    BYTE PTR [rax],al
   14000a346:	add    BYTE PTR [rax],al
   14000a348:	and    ah,cl
   14000a34a:	add    BYTE PTR [rax],al
   14000a34c:	add    BYTE PTR [rax],al
   14000a34e:	add    BYTE PTR [rax],al
   14000a350:	(bad)  
   14000a351:	int3   
   14000a352:	add    BYTE PTR [rax],al
   14000a354:	add    BYTE PTR [rax],al
   14000a356:	add    BYTE PTR [rax],al
   14000a358:	test   cl,0x0
   14000a35b:	add    BYTE PTR [rax],al
   14000a35d:	add    BYTE PTR [rax],al
   14000a35f:	add    BYTE PTR [rbx+rax*8+0x0],cl
   14000a363:	add    BYTE PTR [rax],al
   14000a365:	add    BYTE PTR [rax],al
   14000a367:	add    BYTE PTR [rbx+rax*8],dh
   14000a36a:	add    BYTE PTR [rax],al
   14000a36c:	add    BYTE PTR [rax],al
   14000a36e:	add    BYTE PTR [rax],al
   14000a370:	sub    al,bl
   14000a372:	add    BYTE PTR [rax],al
   14000a374:	add    BYTE PTR [rax],al
   14000a376:	add    BYTE PTR [rax],al
   14000a378:	adc    al,bl
   14000a37a:	add    BYTE PTR [rax],al
   14000a37c:	add    BYTE PTR [rax],al
   14000a37e:	add    BYTE PTR [rax],al
   14000a380:	(bad)  
   14000a381:	ret    
   14000a382:	add    BYTE PTR [rax],al
   14000a384:	add    BYTE PTR [rax],al
   14000a386:	add    BYTE PTR [rax],al
   14000a388:	bnd ret 0x0
   14000a38c:	add    BYTE PTR [rax],al
   14000a38e:	add    BYTE PTR [rax],al
   14000a390:	call   0x14000a457
   14000a395:	add    BYTE PTR [rax],al
   14000a397:	add    BYTE PTR [rax+0xc2],dh
   14000a39d:	add    BYTE PTR [rax],al
   14000a39f:	add    BYTE PTR [rdx+rax*8],ah
   14000a3a2:	add    BYTE PTR [rax],al
   14000a3a4:	add    BYTE PTR [rax],al
   14000a3a6:	add    BYTE PTR [rax],al
   14000a3a8:	loopne 0x14000a36c
   14000a3aa:	add    BYTE PTR [rax],al
   14000a3ac:	add    BYTE PTR [rax],al
   14000a3ae:	add    BYTE PTR [rax],al
   14000a3b0:	(bad)  
   14000a3b1:	ret    0x0
   14000a3b4:	add    BYTE PTR [rax],al
   14000a3b6:	add    BYTE PTR [rax],al
   14000a3b8:	or     al,0xcc
   14000a3ba:	add    BYTE PTR [rax],al
   14000a3bc:	add    BYTE PTR [rax],al
   14000a3be:	add    BYTE PTR [rax],al
   14000a3c0:	add    cl,ah
   14000a3c2:	add    BYTE PTR [rax],al
   14000a3c4:	add    BYTE PTR [rax],al
   14000a3c6:	add    BYTE PTR [rax],al
   14000a3c8:	repnz retf 
   14000a3ca:	add    BYTE PTR [rax],al
   14000a3cc:	add    BYTE PTR [rax],al
   14000a3ce:	add    BYTE PTR [rax],al
   14000a3d0:	call   0x14000a4a0
   14000a3d5:	add    BYTE PTR [rax],al
   14000a3d7:	add    al,bl
   14000a3d9:	retf   
   14000a3da:	add    BYTE PTR [rax],al
   14000a3dc:	add    BYTE PTR [rax],al
   14000a3de:	add    BYTE PTR [rax],al
   14000a3e0:	(bad)  
   14000a3e1:	retf   
   14000a3e2:	add    BYTE PTR [rax],al
   14000a3e4:	add    BYTE PTR [rax],al
   14000a3e6:	add    BYTE PTR [rax],al
   14000a3e8:	(bad)  
   14000a3e9:	rol    DWORD PTR [rax],0x0
   14000a3ec:	add    BYTE PTR [rax],al
   14000a3ee:	add    BYTE PTR [rax],al
   14000a3f0:	mov    esi,0xc2
   14000a3f5:	add    BYTE PTR [rax],al
   14000a3f7:	add    BYTE PTR [rax+0xcb],bh
   14000a3fd:	add    BYTE PTR [rax],al
   14000a3ff:	add    dh,al
   14000a401:	retf   
   14000a402:	add    BYTE PTR [rax],al
   14000a404:	add    BYTE PTR [rax],al
   14000a406:	add    BYTE PTR [rax],al
   14000a408:	add    al,0xcd
	...
   14000a416:	add    BYTE PTR [rax],al
   14000a418:	and    al,bh
   14000a41a:	add    BYTE PTR [rax],al
   14000a41c:	add    BYTE PTR [rax],al
   14000a41e:	add    BYTE PTR [rax],al
   14000a420:	mov    bl,cl
   14000a422:	add    BYTE PTR [rax],al
   14000a424:	add    BYTE PTR [rax],al
   14000a426:	add    BYTE PTR [rax],al
   14000a428:	jo     0x14000a3f5
   14000a42a:	add    BYTE PTR [rax],al
   14000a42c:	add    BYTE PTR [rax],al
   14000a42e:	add    BYTE PTR [rax],al
   14000a430:	(bad)  
   14000a431:	retf   
   14000a432:	add    BYTE PTR [rax],al
   14000a434:	add    BYTE PTR [rax],al
   14000a436:	add    BYTE PTR [rax],al
   14000a438:	cld    
   14000a439:	(bad)  
   14000a43a:	add    BYTE PTR [rax],al
   14000a43c:	add    BYTE PTR [rax],al
   14000a43e:	add    BYTE PTR [rax],al
   14000a440:	cmp    al,bh
	...
   14000a44e:	add    BYTE PTR [rax],al
   14000a450:	pushf  
   14000a451:	retf   
	...
   14000a45e:	add    BYTE PTR [rax],al
   14000a460:	(bad)  
   14000a461:	(bad)  
	...
   14000a46e:	add    BYTE PTR [rax],al
   14000a470:	jp     0x14000a437
   14000a472:	add    BYTE PTR [rax],al
   14000a474:	add    BYTE PTR [rax],al
   14000a476:	add    BYTE PTR [rax],al
   14000a478:	rex.WX enter 0x0,0x0
	...
   14000a485:	add    BYTE PTR [rax],al
   14000a487:	add    al,ch
   14000a489:	mov    DWORD PTR [rax],0x0
   14000a48f:	add    dh,bh
   14000a491:	mov    DWORD PTR [rax],0x0
   14000a497:	add    BYTE PTR [rsi+0xc4],al
   14000a49d:	add    BYTE PTR [rax],al
   14000a49f:	add    BYTE PTR [rax],dl
   14000a4a1:	(bad)
	...
   14000a4b0:	mov    al,0x2d
   14000a4b2:	add    BYTE PTR [rax+0x1],al
   14000a4b5:	add    BYTE PTR [rax],al
   14000a4b7:	add    al,ah
   14000a4b9:	(bad)  
   14000a4ba:	add    BYTE PTR [rax+0x1],al
	...
   14000a4c5:	add    BYTE PTR [rax],al
   14000a4c7:	add    BYTE PTR [rax+0x25],ah
   14000a4ca:	add    BYTE PTR [rax+0x1],al
	...
   14000a4dd:	add    BYTE PTR [rax],al
   14000a4df:	add    BYTE PTR [rax+0x1400024],al
   14000a4e5:	add    BYTE PTR [rax],al
   14000a4e7:	add    al,ah
   14000a4e9:	sub    al,BYTE PTR [rax]
   14000a4eb:	rex add DWORD PTR [rax],eax
	...
   14000a4f6:	add    BYTE PTR [rax],al
   14000a4f8:	and    BYTE PTR [rax+rax*1],0x0
   14000a4fc:	(bad)  
   14000a4fd:	and    eax,0x27900000
   14000a502:	add    BYTE PTR [rax],al
   14000a504:	and    BYTE PTR [rax],ch
   14000a506:	add    BYTE PTR [rax],al
   14000a508:	movabs al,ds:0xc000002ae000002a
   14000a511:	sub    eax,DWORD PTR [rax]
   14000a513:	add    BYTE PTR [rax-0xfffffd3],dh
   14000a519:	sub    eax,0x2e100000
   14000a51e:	add    BYTE PTR [rax],al
   14000a520:	lock add BYTE PTR cs:[rax],al
   14000a524:	add    BYTE PTR [rdi],ch
   14000a526:	add    BYTE PTR [rax],al
   14000a528:	push   rax
   14000a529:	rex.RXB add BYTE PTR [r8],r8b
   14000a52c:	xor    BYTE PTR [rsi+0x0],ah
   14000a52f:	add    BYTE PTR [rax-0x65],al
	...
   14000a53e:	add    BYTE PTR [rax],al
   14000a540:	cs and eax,0x75
   14000a546:	add    BYTE PTR [rax],al
   14000a548:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14000a54c:	push   rsp
   14000a54d:	add    BYTE PTR [rbp+0x0],cl
   14000a550:	push   rbx
   14000a551:	add    BYTE PTR [rdi+0x0],al
   14000a554:	add    BYTE PTR [rax],al
   14000a556:	add    BYTE PTR [rax],al
   14000a558:	or     eax,0xa00
   14000a55d:	add    BYTE PTR [rax],al
   14000a55f:	add    BYTE PTR [rdx+0x0],al
   14000a562:	add    BYTE PTR [r11+0x0],dl
   14000a566:	add    BYTE PTR [r8],r8b
   14000a569:	add    BYTE PTR [rax],al
   14000a56b:	add    BYTE PTR [rax],al
   14000a56d:	add    BYTE PTR [rax],al
   14000a56f:	add    BYTE PTR [rbx+0x0],dl
   14000a572:	outs   dx,DWORD PTR ds:[rsi]
   14000a573:	add    BYTE PTR [rsi+0x0],ah
   14000a576:	je     0x14000a578
   14000a578:	ja     0x14000a57a
   14000a57a:	(bad)  
   14000a57b:	add    BYTE PTR [rdx+0x0],dh
   14000a57e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000a583:	add    BYTE PTR [rcx+0x0],ch
   14000a586:	movsxd eax,DWORD PTR [rax]
   14000a588:	jb     0x14000a58a
   14000a58a:	outs   dx,DWORD PTR ds:[rsi]
   14000a58b:	add    BYTE PTR [rbx+0x0],dh
   14000a58e:	outs   dx,DWORD PTR ds:[rsi]
   14000a58f:	add    BYTE PTR [rsi+0x0],ah
   14000a592:	je     0x14000a594
   14000a594:	pop    rsp
   14000a595:	add    BYTE PTR [rdi+0x0],dl
   14000a598:	imul   eax,DWORD PTR [rax],0x64006e
   14000a59e:	outs   dx,DWORD PTR ds:[rsi]
   14000a59f:	add    BYTE PTR [rdi+0x0],dh
   14000a5a2:	jae    0x14000a5a4
   14000a5a4:	and    BYTE PTR [rax],al
   14000a5a6:	rex.WRX add BYTE PTR [rax+r8*1+0x5c],r10b
   14000a5ab:	add    BYTE PTR [rbx+0x0],al
   14000a5ae:	jne    0x14000a5b0
   14000a5b0:	jb     0x14000a5b2
   14000a5b2:	jb     0x14000a5b4
   14000a5b4:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a5b8:	je     0x14000a5ba
   14000a5ba:	push   rsi
   14000a5bb:	add    BYTE PTR [rbp+0x0],ah
   14000a5be:	jb     0x14000a5c0
   14000a5c0:	jae    0x14000a5c2
   14000a5c2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a5c8:	pop    rsp
   14000a5c9:	add    BYTE PTR [rsi+0x0],cl
   14000a5cc:	add    BYTE PTR gs:[rax+rax*1+0x77],dh
   14000a5d1:	add    BYTE PTR [rdi+0x0],ch
   14000a5d4:	jb     0x14000a5d6
   14000a5d6:	imul   eax,DWORD PTR [rax],0x5c
   14000a5d9:	add    BYTE PTR [rax+0x0],dl
   14000a5dc:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a5e0:	jae    0x14000a5e2
   14000a5e2:	imul   eax,DWORD PTR [rax],0x740073
   14000a5e8:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a5ec:	je     0x14000a5ee
   14000a5ee:	and    BYTE PTR [rax],al
   14000a5f0:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000a5f4:	outs   dx,BYTE PTR ds:[rsi]
   14000a5f5:	add    BYTE PTR [rsi+0x0],ch
   14000a5f8:	add    BYTE PTR gs:[rbx+0x0],ah
   14000a5fc:	je     0x14000a5fe
   14000a5fe:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a604:	jae    0x14000a606
   14000a606:	add    BYTE PTR [rax],al
   14000a608:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000a60c:	ins    DWORD PTR es:[rdi],dx
   14000a60d:	add    BYTE PTR [rbp+0x0],ah
	...
   14000a620:	push   rbx
   14000a621:	add    BYTE PTR [rcx+0x0],bh
   14000a624:	jae    0x14000a626
   14000a626:	je     0x14000a628
   14000a628:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a62c:	pop    rsp
   14000a62d:	add    BYTE PTR [rbx+0x0],al
   14000a630:	jne    0x14000a632
   14000a632:	jb     0x14000a634
   14000a634:	jb     0x14000a636
   14000a636:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a63a:	je     0x14000a63c
   14000a63c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000a640:	outs   dx,BYTE PTR ds:[rsi]
   14000a641:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000a645:	add    BYTE PTR [rdi+0x0],ch
   14000a648:	ins    BYTE PTR es:[rdi],dx
   14000a649:	add    BYTE PTR [rbx+0x0],dl
   14000a64c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   14000a651:	add    BYTE PTR [rbx+0x0],dl
   14000a654:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a658:	jbe    0x14000a65a
   14000a65a:	imul   eax,DWORD PTR [rax],0x650063
   14000a660:	jae    0x14000a662
   14000a662:	pop    rsp
   14000a663:	add    BYTE PTR [rax+rax*1+0x61],cl
   14000a667:	add    BYTE PTR [rsi+0x0],ch
   14000a66a:	ins    DWORD PTR es:[rdi],dx
   14000a66b:	add    BYTE PTR [rcx+0x0],ah
   14000a66e:	outs   dx,BYTE PTR ds:[rsi]
   14000a66f:	add    BYTE PTR [rdi+0x0],dl
   14000a672:	outs   dx,DWORD PTR ds:[rsi]
   14000a673:	add    BYTE PTR [rdx+0x0],dh
   14000a676:	imul   eax,DWORD PTR [rax],0x73
   14000a679:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000a67d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000a681:	add    BYTE PTR [rdi+0x0],ch
   14000a684:	outs   dx,BYTE PTR ds:[rsi]
   14000a685:	add    BYTE PTR [rax+rax*1+0x4e],bl
   14000a689:	add    BYTE PTR [rbp+0x0],ah
   14000a68c:	je     0x14000a68e
   14000a68e:	ja     0x14000a690
   14000a690:	outs   dx,DWORD PTR ds:[rsi]
   14000a691:	add    BYTE PTR [rdx+0x0],dh
   14000a694:	imul   eax,DWORD PTR [rax],0x50
   14000a697:	add    BYTE PTR [rdx+0x0],dh
   14000a69a:	outs   dx,DWORD PTR ds:[rsi]
   14000a69b:	add    BYTE PTR [rsi+0x0],dh
   14000a69e:	imul   eax,DWORD PTR [rax],0x650064
   14000a6a4:	jb     0x14000a6a6
   14000a6a6:	add    BYTE PTR [rax],al
   14000a6a8:	pop    rsp
   14000a6a9:	add    BYTE PTR [rsi+0x0],ch
   14000a6ac:	add    BYTE PTR gs:[rax+rax*1+0x31],dh
   14000a6b1:	add    BYTE PTR [rax],al
   14000a6b3:	add    BYTE PTR [rax],al
   14000a6b5:	add    BYTE PTR [rax],al
   14000a6b7:	add    al,dl
   14000a6b9:	(bad)  
   14000a6ba:	add    BYTE PTR [rax+0x1],al
   14000a6bd:	add    BYTE PTR [rax],al
   14000a6bf:	add    BYTE PTR [rax-0x2a],dh
   14000a6c2:	add    BYTE PTR [rax+0x1],al
	...
   14000a6cd:	add    BYTE PTR [rax],al
   14000a6cf:	add    BYTE PTR [rbp+0x78],ah
   14000a6d2:	je     0x14000a701
   14000a6d4:	ins    DWORD PTR es:[rdi],dx
   14000a6d5:	jae    0x14000a704
   14000a6d7:	ja     0x14000a742
   14000a6d9:	outs   dx,BYTE PTR ds:[rsi]
   14000a6da:	sub    eax,0x75636573
   14000a6df:	jb     0x14000a74a
   14000a6e1:	je     0x14000a75c
   14000a6e3:	sub    eax,0x64657263
   14000a6e8:	jne    0x14000a753
   14000a6ea:	sub    eax,0x312d316c
   14000a6ef:	sub    eax,0x6c642e30
   14000a6f4:	ins    BYTE PTR es:[rdi],dx
   14000a6f5:	add    BYTE PTR [rax],al
   14000a6f7:	add    BYTE PTR [rdi],ch
   14000a6f9:	ret    
   14000a6fa:	mov    edi,0x3810f628
   14000a6ff:	rex.RXB cwde 
   14000a701:	rcr    DWORD PTR [rdx],1
   14000a703:	shl    BYTE PTR [rcx-0x21],0x71
   14000a707:	push   0xffffffffffffffad
   14000a709:	imul   ebx,DWORD PTR [rdi+0x23],0x4dbc73fb
   14000a710:	(bad)  
   14000a711:	add    eax,DWORD PTR [rsi]
   14000a713:	sub    edi,esp
   14000a715:	cmp    DWORD PTR [rbx],esi
   14000a717:	fwait
   14000a718:	jns    0x14000a792
   14000a71a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a71b:	adc    BYTE PTR [rdi-0x42b47aa2],bh
   14000a721:	(bad)  
   14000a722:	ret    0xb41b
   14000a725:	hlt    
   14000a726:	pushf  
   14000a727:	mov    bh,BYTE PTR [rcx-0x68]
   14000a72a:	std    
   14000a72b:	push   0x4dfe079c
   14000a730:	(bad)  
   14000a731:	adc    DWORD PTR [rdi-0x76],0xc1c1ad
   14000a738:	fst    DWORD PTR [rbx-0x2694c3c2]
   14000a73e:	mov    ch,0x49
   14000a740:	xchg   esp,eax
   14000a741:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a742:	test   DWORD PTR [r10+0x6f378308],r10d
   14000a749:	(bad)  
   14000a74a:	inc    edx
   14000a74c:	cmp    eax,0xa94c3d50
   14000a751:	pop    rsi
   14000a752:	mov    esp,0x3d2121e8
   14000a757:	rex.R
   14000a758:	add    BYTE PTR [rax+r8*1+0x0],al
   14000a75d:	add    BYTE PTR [rax],al
   14000a75f:	add    BYTE PTR [rax+0x14000a7],al
   14000a765:	add    BYTE PTR [rax],al
   14000a767:	add    BYTE PTR [rdx+0x0],al
   14000a76a:	add    BYTE PTR [rax],r8b
   14000a76d:	add    BYTE PTR [rax],al
   14000a76f:	add    al,dl
   14000a771:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a772:	add    BYTE PTR [rax+0x1],al
	...
   14000a77d:	add    BYTE PTR [rax],al
   14000a77f:	add    BYTE PTR [rbp+0x0],ah
   14000a782:	js     0x14000a784
   14000a784:	je     0x14000a786
   14000a786:	sub    eax,0x73006d00
   14000a78b:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a9011e91
   14000a791:	add    BYTE PTR [rsi+0x0],ch
   14000a794:	sub    eax,0x65007300
   14000a799:	add    BYTE PTR [rbx+0x0],ah
   14000a79c:	jne    0x14000a79e
   14000a79e:	jb     0x14000a7a0
   14000a7a0:	imul   eax,DWORD PTR [rax],0x790074
   14000a7a6:	sub    eax,0x72006300
   14000a7ab:	add    BYTE PTR [rbp+0x0],ah
   14000a7ae:	add    BYTE PTR fs:[rbp+0x0],dh
   14000a7b2:	imul   eax,DWORD PTR [rax],0x6c002d
   14000a7b8:	xor    DWORD PTR [rax],eax
   14000a7ba:	sub    eax,0x2d003100
   14000a7bf:	add    BYTE PTR [rax],dh
	...
   14000a7cd:	add    BYTE PTR [rax],al
   14000a7cf:	add    BYTE PTR [rbp+0x0],ah
   14000a7d2:	js     0x14000a7d4
   14000a7d4:	je     0x14000a7d6
   14000a7d6:	sub    eax,0x73006d00
   14000a7db:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a9011ee1
   14000a7e1:	add    BYTE PTR [rsi+0x0],ch
   14000a7e4:	sub    eax,0x65007300
   14000a7e9:	add    BYTE PTR [rbx+0x0],ah
   14000a7ec:	jne    0x14000a7ee
   14000a7ee:	jb     0x14000a7f0
   14000a7f0:	imul   eax,DWORD PTR [rax],0x790074
   14000a7f6:	sub    eax,0x72006300
   14000a7fb:	add    BYTE PTR [rbp+0x0],ah
   14000a7fe:	add    BYTE PTR fs:[rbp+0x0],dh
   14000a802:	imul   eax,DWORD PTR [rax],0x6c002d
   14000a808:	xor    DWORD PTR [rax],eax
   14000a80a:	sub    eax,0x2d003100
   14000a80f:	add    BYTE PTR [rcx],dh
   14000a811:	add    BYTE PTR [rax],al
   14000a813:	add    BYTE PTR [rax],al
   14000a815:	add    BYTE PTR [rax],al
   14000a817:	add    BYTE PTR [rcx+0x0],bh
   14000a81a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a81e:	add    BYTE PTR [rax],al
   14000a820:	push   rbx
   14000a821:	add    BYTE PTR [rcx+0x0],ah
   14000a824:	jbe    0x14000a826
   14000a826:	add    BYTE PTR gs:[rbx+0x0],al
   14000a82a:	outs   dx,DWORD PTR ds:[rsi]
   14000a82b:	add    BYTE PTR [rsi+0x0],ch
   14000a82e:	outs   dx,BYTE PTR ds:[rsi]
   14000a82f:	add    BYTE PTR [rbp+0x0],ah
   14000a832:	movsxd eax,DWORD PTR [rax]
   14000a834:	je     0x14000a836
   14000a836:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a83c:	jae    0x14000a83e
   14000a83e:	add    BYTE PTR [rax],al
   14000a840:	sub    eax,0x2d002d00
   14000a845:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d54b
   14000a84b:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d551
   14000a851:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d557
   14000a857:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d55d
   14000a85d:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d563
   14000a863:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d569
   14000a869:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d56f
   14000a86f:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d575
   14000a875:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d57b
   14000a87b:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d581
   14000a881:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d587
   14000a887:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d58d
   14000a88d:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d593
   14000a893:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d599
   14000a899:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d59f
   14000a89f:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d5a5
   14000a8a5:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d5ab
   14000a8ab:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d5b1
   14000a8b1:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d5b7
   14000a8b7:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d5bd
   14000a8bd:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d5c3
   14000a8c3:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d5c9
   14000a8c9:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d5cf
   14000a8cf:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d5d5
   14000a8d5:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00d5db
   14000a8db:	add    BYTE PTR [rip+0xa000d00],ch        # 0x14a00b5e1
	...
   14000a8ed:	add    BYTE PTR [rax],al
   14000a8ef:	add    BYTE PTR [rax+0x0],dl
   14000a8f2:	add    BYTE PTR [r14+0x0],cl
   14000a8f6:	rex.WB add BYTE PTR [r11+0x0],al
   14000a8fa:	cmp    al,BYTE PTR [rax]
   14000a8fc:	and    BYTE PTR [rax],al
   14000a8fe:	add    BYTE PTR gs:[rax+0x0],bh
   14000a902:	jo     0x14000a904
   14000a904:	jb     0x14000a906
   14000a906:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a90a:	jae    0x14000a90c
   14000a90c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a912:	and    BYTE PTR [rax],al
   14000a914:	je     0x14000a916
   14000a916:	outs   dx,DWORD PTR ds:[rsi]
   14000a917:	add    BYTE PTR [rdi+0x0],ch
   14000a91a:	and    BYTE PTR [rax],al
   14000a91c:	movsxd eax,DWORD PTR [rax]
   14000a91e:	outs   dx,DWORD PTR ds:[rsi]
   14000a91f:	add    BYTE PTR [rbp+0x0],ch
   14000a922:	jo     0x14000a924
   14000a924:	ins    BYTE PTR es:[rdi],dx
   14000a925:	add    BYTE PTR [rbp+0x0],ah
   14000a928:	js     0x14000a92a
   14000a92a:	sub    al,0x0
   14000a92c:	and    BYTE PTR [rax],al
   14000a92e:	jo     0x14000a930
   14000a930:	ins    BYTE PTR es:[rdi],dx
   14000a931:	add    BYTE PTR [rbp+0x0],ah
   14000a934:	(bad)  
   14000a935:	add    BYTE PTR [rbx+0x0],dh
   14000a938:	add    BYTE PTR gs:[rax],ah
   14000a93b:	add    BYTE PTR [rbx+0x0],dh
   14000a93e:	imul   eax,DWORD PTR [rax],0x70006d
   14000a944:	ins    BYTE PTR es:[rdi],dx
   14000a945:	add    BYTE PTR [rcx+0x0],ch
   14000a948:	data16 add BYTE PTR [rcx+0x0],bh
   14000a94c:	cmp    eax,DWORD PTR [rax]
   14000a94e:	add    BYTE PTR [rax],al
   14000a950:	or     DWORD PTR [rax],eax
   14000a952:	or     al,BYTE PTR [rax]
   14000a954:	or     eax,DWORD PTR [rax]
   14000a956:	or     al,0x0
   14000a958:	or     eax,0x2000
   14000a95d:	add    BYTE PTR [rax],al
   14000a95f:	add    BYTE PTR [rax],al
   14000a961:	add    BYTE PTR [rax],al
   14000a963:	add    BYTE PTR [rbp+0x559f39],cl
   14000a969:	add    BYTE PTR [rax],al
   14000a96b:	add    BYTE PTR [rdx],al
   14000a96d:	add    BYTE PTR [rax],al
   14000a96f:	add    BYTE PTR [rax],ah
   14000a971:	add    BYTE PTR [rax],al
   14000a973:	add    al,dh
   14000a975:	scas   al,BYTE PTR es:[rdi]
   14000a976:	add    BYTE PTR [rax],al
   14000a978:	lock sahf 
   14000a97a:	add    BYTE PTR [rax],al
   14000a97c:	add    BYTE PTR [rax],al
   14000a97e:	add    BYTE PTR [rax],al
   14000a980:	lea    edi,[rcx]
   14000a982:	lahf   
   14000a983:	push   rbp
   14000a984:	add    BYTE PTR [rax],al
   14000a986:	add    BYTE PTR [rax],al
   14000a988:	or     eax,0x74000000
   14000a98d:	add    eax,DWORD PTR [rax]
   14000a98f:	add    BYTE PTR [rdi+rbp*4],ah
   14000a992:	add    BYTE PTR [rax],al
   14000a994:	and    al,0x9f
	...
   14000a9be:	add    BYTE PTR [rax],al
   14000a9c0:	movabs al,ds:0x0
	...
   14000aa15:	add    BYTE PTR [rax],al
   14000aa17:	add    BYTE PTR [rax],cl
   14000aa19:	rol    BYTE PTR [rax],1
   14000aa1b:	rex add DWORD PTR [rax],eax
	...
   14000aa2e:	add    BYTE PTR [rax],al
   14000aa30:	mov    al,0xa4
   14000aa32:	add    BYTE PTR [rax+0x1],al
   14000aa35:	add    BYTE PTR [rax],al
   14000aa37:	add    BYTE PTR [rax+0x14000a4],bh
   14000aa3d:	add    BYTE PTR [rax],al
   14000aa3f:	add    al,bh
   14000aa41:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000aa42:	add    BYTE PTR [rax+0x1],al
   14000aa45:	add    BYTE PTR [rax],al
   14000aa47:	add    BYTE PTR [rdi],cl
	...
   14000aa51:	xor    eax,0x0
	...
   14000aa5e:	add    BYTE PTR [rax],al
   14000aa60:	cs rex.WRXB
   14000aa62:	rex.XB push r8
	...
   14000aa70:	add    eax,DWORD PTR [rax]
   14000aa72:	pop    rsp
   14000aa73:	add    BYTE PTR [rbx+0x0],bh
   14000aa76:	(bad)  
   14000aa77:	add    BYTE PTR [rbx],cl
   14000aa79:	add    BYTE PTR [rax+rax*1+0x9],bh
   14000aa7d:	add    BYTE PTR [rsi+0x0],cl
   14000aa80:	jge    0x14000aa82
   14000aa82:	pop    rcx
   14000aa83:	add    BYTE PTR [rdi+0x0],bh
   14000aa86:	pop    rax
   14000aa87:	add    al,BYTE PTR [rax]
   14000aa89:	add    BYTE PTR [rax],bl
   14000aa8b:	add    bh,bh
   14000aa8d:	call   QWORD PTR [rbx]
   14000aa8f:	add    BYTE PTR [rcx],al
   14000aa91:	add    BYTE PTR [rax],al
   14000aa93:	add    BYTE PTR [rcx+0x2000000],cl
   14000aa99:	add    BYTE PTR [rcx],al
   14000aa9b:	add    BYTE PTR [rax+rax*1+0x29008d],cl
   14000aaa2:	je     0x14000aaa4
   14000aaa4:	and    al,0x0
   14000aaa6:	(bad)  
   14000aaa7:	jmp    QWORD PTR [rcx]
   14000aaa9:	add    BYTE PTR [rcx],al
   14000aaab:	add    BYTE PTR [rbx],al
   14000aaad:	add    BYTE PTR [rdx],al
   14000aaaf:	add    BYTE PTR [rax+rax*1+0x980003],dl
   14000aab6:	cdq    
   14000aab7:	add    BYTE PTR [rcx+0x0],dh
   14000aaba:	(bad)  
   14000aabb:	inc    DWORD PTR [rax+rax*1]
   14000aabe:	pushf  
   14000aabf:	add    BYTE PTR [rbp+0x39005f00],bl
   14000aac5:	add    bh,bh
   14000aac7:	push   QWORD PTR [rax]
   14000aac9:	add    BYTE PTR [rax+rax*1],al
   14000aacc:	add    eax,0x3500a400
   14000aad1:	add    BYTE PTR [rcx],al
   14000aad3:	add    BYTE PTR [rip+0xffffffffa7000600],al        # 0xe700b0d9
   14000aad9:	add    BYTE PTR [rdx],al
   14000aadb:	add    BYTE PTR [rdi],al
   14000aadd:	add    BYTE PTR [rdx+0x4000ab00],ch
   14000aae3:	add    BYTE PTR [rcx+0x0],dh
   14000aae6:	(bad)  
   14000aae7:	inc    DWORD PTR [rdx]
   14000aae9:	add    BYTE PTR [rax],cl
   14000aaeb:	add    BYTE PTR [rax+0x7400b100],dh
   14000aaf1:	add    BYTE PTR [rdi+0x0],al
   14000aaf4:	jno    0x14000aaf6
   14000aaf6:	(bad)  
   14000aaf7:	dec    DWORD PTR [rcx]
   14000aaf9:	add    al,al
   14000aafb:	add    cl,al
   14000aafd:	add    bh,bh
   14000aaff:	dec    DWORD PTR [rdx]
   14000ab01:	add    dh,cl
   14000ab03:	add    bh,cl
   14000ab05:	add    al,dl
   14000ab07:	add    cl,dl
   14000ab09:	add    cl,dl
   14000ab0b:	add    BYTE PTR [rcx+0x2],bl
   14000ab0e:	(bad)  
   14000ab0f:	add    BYTE PTR [rax+rax*1-0x1],dl
   14000ab13:	dec    DWORD PTR [rbx]
   14000ab15:	add    al,bl
   14000ab17:	add    BYTE PTR [rdi+0x0],dh
   14000ab1a:	(bad)  
   14000ab1b:	dec    DWORD PTR [rax+rax*1]
   14000ab1e:	fild   DWORD PTR [rax]
   14000ab20:	fild   DWORD PTR [rax]
   14000ab22:	add    BYTE PTR [rax],al
   14000ab24:	or     eax,0xff00e400
   14000ab29:	dec    DWORD PTR [rsi]
   14000ab2b:	add    al,ch
   14000ab2d:	add    BYTE PTR [rax],al
   14000ab2f:	add    BYTE PTR [rdi],al
   14000ab31:	add    bh,ch
   14000ab33:	add    BYTE PTR [rax],al
   14000ab35:	add    BYTE PTR [rax],cl
   14000ab37:	add    cl,dh
   14000ab39:	add    BYTE PTR [rax],al
   14000ab3b:	add    BYTE PTR [rcx],cl
   14000ab3d:	add    bl,dh
   14000ab3f:	add    BYTE PTR [rax],al
   14000ab41:	add    BYTE PTR [rdx],cl
   14000ab43:	add    ch,dh
   14000ab45:	add    BYTE PTR [rax],al
   14000ab47:	add    BYTE PTR [rbx],cl
   14000ab49:	add    bh,dh
   14000ab4b:	add    BYTE PTR [rax],al
   14000ab4d:	add    BYTE PTR [rax+rax*1],cl
   14000ab50:	stc    
   14000ab51:	add    BYTE PTR [rax],al
   14000ab53:	add    BYTE PTR [rip+0xfb00],cl        # 0x14001a659
   14000ab59:	add    BYTE PTR [rsi],cl
   14000ab5b:	add    ch,bh
   14000ab5d:	add    BYTE PTR [rax],al
   14000ab5f:	add    BYTE PTR [rdi],cl
   14000ab61:	add    bh,bh
	...
   14000ab6f:	add    BYTE PTR [rcx],al
   14000ab71:	add    BYTE PTR [rdx],al
   14000ab73:	add    BYTE PTR [rdi],al
   14000ab75:	add    BYTE PTR [rcx],al
   14000ab77:	add    BYTE PTR [rdx],al
   14000ab79:	add    BYTE PTR [rdi],al
   14000ab7b:	add    BYTE PTR [rcx],al
   14000ab7d:	add    BYTE PTR [rdx],al
   14000ab7f:	add    BYTE PTR [rdi],al
   14000ab81:	add    BYTE PTR [rdx],al
   14000ab83:	add    BYTE PTR [rdi],al
   14000ab85:	add    BYTE PTR [rbx],al
   14000ab87:	add    BYTE PTR [rip+0x3000100],al        # 0x14300ac8d
   14000ab8d:	add    BYTE PTR [rcx],al
   14000ab8f:	add    BYTE PTR [rip+0x7000600],al        # 0x14700b195
   14000ab95:	add    BYTE PTR [rbx],cl
   14000ab97:	add    BYTE PTR [rip+0x7000600],al        # 0x14700b19d
   14000ab9d:	add    BYTE PTR [rdi],al
   14000ab9f:	add    BYTE PTR [rcx],al
   14000aba1:	add    BYTE PTR [rdx],al
   14000aba3:	add    BYTE PTR [rcx],al
   14000aba5:	add    BYTE PTR [rbx],al
   14000aba7:	add    BYTE PTR [rcx],al
   14000aba9:	add    BYTE PTR [rbx],cl
   14000abab:	add    BYTE PTR [rip+0x7000600],al        # 0x14700b1b1
   14000abb1:	add    BYTE PTR [rsi],al
   14000abb3:	add    BYTE PTR [rdi],al
   14000abb5:	add    BYTE PTR [rdi],al
   14000abb7:	add    BYTE PTR [rdx],al
   14000abb9:	add    BYTE PTR [rbx],al
   14000abbb:	add    BYTE PTR [rsi],al
   14000abbd:	add    BYTE PTR [rdi],al
   14000abbf:	add    BYTE PTR [rdi],al
   14000abc1:	add    BYTE PTR [rdx],al
   14000abc3:	add    BYTE PTR [rcx],al
   14000abc5:	add    BYTE PTR [rbx],al
   14000abc7:	add    BYTE PTR [rcx],al
   14000abc9:	add    BYTE PTR [rip+0x7000600],al        # 0x14700b1cf
   14000abcf:	add    BYTE PTR [rcx],al
   14000abd1:	add    BYTE PTR [rbx],cl
   14000abd3:	add    BYTE PTR [rip+0x7000600],al        # 0x14700b1d9
   14000abd9:	add    BYTE PTR [rbx],cl
   14000abdb:	add    BYTE PTR [rsi],al
   14000abdd:	add    BYTE PTR [rdi],al
   14000abdf:	add    BYTE PTR [rdi],al
   14000abe1:	add    BYTE PTR [rcx],al
   14000abe3:	add    BYTE PTR [rdx],al
   14000abe5:	add    BYTE PTR [rbx],al
   14000abe7:	add    BYTE PTR [rbx],cl
   14000abe9:	add    BYTE PTR [rsi],al
   14000abeb:	add    BYTE PTR [rdi],al
   14000abed:	add    BYTE PTR [rdi],al
   14000abef:	add    BYTE PTR [rdx],al
   14000abf1:	add    BYTE PTR [rcx],al
   14000abf3:	add    BYTE PTR [rdx],al
   14000abf5:	add    BYTE PTR [rbx],al
   14000abf7:	add    BYTE PTR [rsi],al
   14000abf9:	add    BYTE PTR [rdi],al
   14000abfb:	add    BYTE PTR [rdi],al
   14000abfd:	add    BYTE PTR [rbx],al
   14000abff:	add    BYTE PTR [rsi],al
   14000ac01:	add    BYTE PTR [rdi],al
   14000ac03:	add    BYTE PTR [rdi],al
   14000ac05:	add    BYTE PTR [rdi],al
   14000ac07:	add    BYTE PTR [rdi],al
   14000ac09:	add    BYTE PTR [rdi],al
   14000ac0b:	add    BYTE PTR [rbx],al
   14000ac0d:	add    BYTE PTR [rip+0x3000100],al        # 0x14300ad13
   14000ac13:	add    BYTE PTR [rsi],al
   14000ac15:	add    BYTE PTR [rdi],al
   14000ac17:	add    BYTE PTR [rdx],al
   14000ac19:	add    BYTE PTR [rbx],al
   14000ac1b:	add    BYTE PTR [rsi],al
   14000ac1d:	add    BYTE PTR [rdi],al
   14000ac1f:	add    BYTE PTR [rdi],al
   14000ac21:	add    BYTE PTR [rdx],cl
   14000ac23:	add    BYTE PTR [rsi],al
   14000ac25:	add    BYTE PTR [rdi],al
   14000ac27:	add    BYTE PTR [rbx],al
   14000ac29:	add    BYTE PTR [rsi],al
   14000ac2b:	add    BYTE PTR [rdi],al
   14000ac2d:	add    BYTE PTR [rdx],cl
   14000ac2f:	add    BYTE PTR [rip+0xa000700],al        # 0x14a00b335
   14000ac35:	add    BYTE PTR [rip+0xa000700],al        # 0x14a00b33b
   14000ac3b:	add    BYTE PTR [rip+0xa000700],al        # 0x14a00b341
   14000ac41:	add    BYTE PTR [rip+0xa000700],al        # 0x14a00b347
   14000ac47:	add    BYTE PTR [rip+0xa000700],al        # 0x14a00b34d
   14000ac4d:	add    BYTE PTR [rip+0xa000700],al        # 0x14a00b353
   14000ac53:	add    BYTE PTR [rip+0xa000700],al        # 0x14a00b359
   14000ac59:	add    BYTE PTR [rip+0xa000700],al        # 0x14a00b35f
   14000ac5f:	add    BYTE PTR [rip+0x700],al        # 0x14000b365
   14000ac65:	add    BYTE PTR [rax],al
   14000ac67:	add    BYTE PTR [rbp+0x0],dh
   14000ac6a:	jae    0x14000ac6c
   14000ac6c:	add    BYTE PTR gs:[rax],al
   14000ac6f:	add    BYTE PTR [rsi+0x0],dh
   14000ac72:	imul   eax,DWORD PTR [rax],0x770065
	...
   14000ac80:	sub    al,BYTE PTR [rax]
   14000ac82:	sub    al,BYTE PTR [rax]
   14000ac84:	sub    al,BYTE PTR [rax]
   14000ac86:	add    BYTE PTR [rax],al
   14000ac88:	(bad)  
   14000ac89:	add    BYTE PTR [rax+0x0],dl
   14000ac8c:	add    BYTE PTR [r10+0x0],r10b
   14000ac90:	push   rbx
   14000ac91:	add    BYTE PTR [rcx+0x0],cl
   14000ac94:	push   rbx
   14000ac95:	add    BYTE PTR [rax+rax*1+0x45],dl
   14000ac99:	add    BYTE PTR [rsi+0x0],cl
   14000ac9c:	push   rsp
   14000ac9d:	add    BYTE PTR [rax],al
   14000ac9f:	add    BYTE PTR [rdi],ch
   14000aca1:	add    BYTE PTR [rax+rax*1+0x45],al
   14000aca5:	add    BYTE PTR [rax+rax*1+0x45],cl
   14000aca9:	add    BYTE PTR [rax+rax*1+0x45],dl
   14000acad:	add    BYTE PTR [rax],al
   14000acaf:	add    BYTE PTR [rdi],ch
   14000acb1:	add    BYTE PTR [rax+0x0],cl
   14000acb4:	rex.WRXB add BYTE PTR [r13+0x0],r9b
   14000acb8:	add    BYTE PTR [r8],r8b
   14000acbb:	add    BYTE PTR [rax],al
   14000acbd:	add    BYTE PTR [rax],al
   14000acbf:	add    BYTE PTR [rax+0x14000ac],cl
   14000acc5:	add    BYTE PTR [rax],al
   14000acc7:	add    BYTE PTR [rax+0x14000ac],ah
   14000accd:	add    BYTE PTR [rax],al
   14000accf:	add    BYTE PTR [rax+0x14000ac],dh
   14000acd5:	add    BYTE PTR [rax],al
   14000acd7:	add    BYTE PTR [rip+0x73004600],ah        # 0x1b300f2dd
   14000acdd:	add    BYTE PTR [rax],ah
   14000acdf:	add    BYTE PTR [rip+0x73004600],ah        # 0x1b300f2e5
   14000ace5:	add    BYTE PTR [rax],ah
   14000ace7:	add    BYTE PTR [rip+0x73004600],ah        # 0x1b300f2ed
   14000aced:	add    BYTE PTR [rax],ah
   14000acef:	add    BYTE PTR [rip+0x73004600],ah        # 0x1b300f2f5
   14000acf5:	add    BYTE PTR [rip+0xa00],cl        # 0x14000b6fb
   14000acfb:	add    BYTE PTR [rax],al
   14000acfd:	add    BYTE PTR [rax],al
   14000acff:	add    BYTE PTR [rip+0x73004600],ah        # 0x1b300f305
   14000ad05:	add    BYTE PTR [rax],ah
   14000ad07:	add    BYTE PTR [rip+0x73004600],ah        # 0x1b300f30d
   14000ad0d:	add    BYTE PTR [rax],ah
   14000ad0f:	add    BYTE PTR [rip+0x73004600],ah        # 0x1b300f315
   14000ad15:	add    BYTE PTR [rax],ah
   14000ad17:	add    BYTE PTR [rip+0x25000a00],cl        # 0x16500b71d
   14000ad1d:	add    BYTE PTR [rsi+0x0],al
   14000ad20:	jae    0x14000ad22
   14000ad22:	and    BYTE PTR [rax],al
   14000ad24:	and    eax,0x73004600
   14000ad29:	add    BYTE PTR [rax],ah
   14000ad2b:	add    BYTE PTR [rip+0x73004600],ah        # 0x1b300f331
   14000ad31:	add    BYTE PTR [rax],ah
   14000ad33:	add    BYTE PTR [rip+0x73004600],ah        # 0x1b300f339
   14000ad39:	add    BYTE PTR [rip+0xa00],cl        # 0x14000b73f
   14000ad3f:	add    BYTE PTR [rax+rax*1+0x50],cl
   14000ad43:	add    BYTE PTR [rax+rax*1+0x0],dl
   14000ad47:	add    BYTE PTR [rdx],ch
   14000ad49:	add    BYTE PTR [rax],al
   14000ad4b:	add    BYTE PTR [rax],al
   14000ad4d:	add    BYTE PTR [rax],al
   14000ad4f:	add    BYTE PTR [rax],ah
   14000ad51:	add    BYTE PTR [rax],ah
   14000ad53:	add    BYTE PTR [rax],ah
   14000ad55:	add    BYTE PTR [rax],ah
   14000ad57:	add    BYTE PTR [rip+0x77004600],ah        # 0x1b700f35d
   14000ad5d:	add    BYTE PTR [rbx+0x0],dh
   14000ad60:	and    BYTE PTR [rax],al
   14000ad62:	and    eax,0x77004600
   14000ad67:	add    BYTE PTR [rbx+0x0],dh
   14000ad6a:	or     eax,0xa00
   14000ad6f:	add    BYTE PTR [rax+rax*1+0x5c],bl
   14000ad73:	add    BYTE PTR [rax],al
   14000ad75:	add    BYTE PTR [rax],al
   14000ad77:	add    BYTE PTR [rax+rax*1+0x2f],bl
   14000ad7b:	add    BYTE PTR [rax],al
   14000ad7d:	add    BYTE PTR [rax],al
   14000ad7f:	add    BYTE PTR [rsi+0x0],ch
   14000ad82:	outs   dx,DWORD PTR ds:[rsi]
   14000ad83:	add    BYTE PTR [rax],al
   14000ad85:	add    BYTE PTR [rax],al
   14000ad87:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b301248d
   14000ad8d:	add    BYTE PTR [rip+0xa00],cl        # 0x14000b793
   14000ad93:	add    BYTE PTR [rax],al
   14000ad95:	add    BYTE PTR [rax],al
   14000ad97:	add    BYTE PTR [rdx+0x0],bl
   14000ad9a:	cmp    al,BYTE PTR [rax]
   14000ad9c:	pop    rsp
   14000ad9d:	add    BYTE PTR [rax],al
   14000ad9f:	add    BYTE PTR [rip+0x77004600],ah        # 0x1b700f3a5
   14000ada5:	add    BYTE PTR [rbx+0x0],dh
   14000ada8:	and    BYTE PTR [rax],al
   14000adaa:	add    BYTE PTR [rax],al
   14000adac:	add    BYTE PTR [rax],al
   14000adae:	add    BYTE PTR [rax],al
   14000adb0:	pop    rsp
   14000adb1:	add    BYTE PTR [rax+rax*1+0x25],bl
   14000adb5:	add    BYTE PTR [rsi+0x0],al
   14000adb8:	ja     0x14000adba
   14000adba:	jae    0x14000adbc
   14000adbc:	and    BYTE PTR [rax],al
   14000adbe:	add    BYTE PTR [rax],al
   14000adc0:	pop    rsp
   14000adc1:	add    BYTE PTR [rax],al
   14000adc3:	add    BYTE PTR [rax],al
   14000adc5:	add    BYTE PTR [rax],al
   14000adc7:	add    BYTE PTR [rip+0x77004600],ah        # 0x1b700f3cd
   14000adcd:	add    BYTE PTR [rbx+0x0],dh
   14000add0:	or     eax,0xd000a00
   14000add5:	add    BYTE PTR [rdx],cl
	...
   14000addf:	add    BYTE PTR [rcx+0x0],al
   14000ade2:	add    BYTE PTR [rbp+0x0],r9b
   14000ade6:	rex.WB add BYTE PTR [r14+0x0],cl
   14000adea:	and    al,0x0
   14000adec:	add    BYTE PTR [rax],al
   14000adee:	add    BYTE PTR [rax],al
   14000adf0:	and    eax,0x2a002d00
   14000adf5:	add    BYTE PTR [rsi],ch
   14000adf7:	add    BYTE PTR [rdx],ch
   14000adf9:	add    BYTE PTR [rdi+0x0],dh
   14000adfc:	jae    0x14000adfe
   14000adfe:	and    eax,0x77004600
   14000ae03:	add    BYTE PTR [rbx+0x0],dh
   14000ae06:	or     eax,0xa00
   14000ae0b:	add    BYTE PTR [rax],al
   14000ae0d:	add    BYTE PTR [rax],al
   14000ae0f:	add    BYTE PTR [rip+0x2a002d00],ah        # 0x16a00db15
   14000ae15:	add    BYTE PTR [rsi],ch
   14000ae17:	add    BYTE PTR [rdx],ch
   14000ae19:	add    BYTE PTR [rdi+0x0],dh
   14000ae1c:	jae    0x14000ae1e
   14000ae1e:	and    eax,0x73007700
   14000ae23:	add    BYTE PTR [rip+0xa00],cl        # 0x14000b829
   14000ae29:	add    BYTE PTR [rax],al
   14000ae2b:	add    BYTE PTR [rax],al
   14000ae2d:	add    BYTE PTR [rax],al
   14000ae2f:	add    BYTE PTR [rip+0x2a002d00],ah        # 0x16a00db35
   14000ae35:	add    BYTE PTR [rsi],ch
   14000ae37:	add    BYTE PTR [rdx],ch
   14000ae39:	add    BYTE PTR [rdi+0x0],dh
   14000ae3c:	jae    0x14000ae3e
   14000ae3e:	and    eax,0x75006800
   14000ae43:	add    BYTE PTR [rip+0xa00],cl        # 0x14000b849
   14000ae49:	add    BYTE PTR [rax],al
   14000ae4b:	add    BYTE PTR [rax],al
   14000ae4d:	add    BYTE PTR [rax],al
   14000ae4f:	add    BYTE PTR [rip+0x2a002d00],ah        # 0x16a00db55
   14000ae55:	add    BYTE PTR [rsi],ch
   14000ae57:	add    BYTE PTR [rdx],ch
   14000ae59:	add    BYTE PTR [rdi+0x0],dh
   14000ae5c:	jae    0x14000ae5e
   14000ae5e:	add    BYTE PTR [rax],al
   14000ae60:	pop    rsp
   14000ae61:	add    BYTE PTR [rax+0x0],dl
   14000ae64:	rex.WB add BYTE PTR [r8+0x0],dl
   14000ae68:	add    BYTE PTR [r8],r8b
   14000ae6b:	add    BYTE PTR [rax],al
   14000ae6d:	add    BYTE PTR [rax],al
   14000ae6f:	add    BYTE PTR [rax+rax*1+0x50],bl
   14000ae73:	add    BYTE PTR [rdx+0x0],dl
   14000ae76:	rex.WB add BYTE PTR [r14+0x0],cl
   14000ae7a:	push   rsp
   14000ae7b:	add    BYTE PTR [rax],al
   14000ae7d:	add    BYTE PTR [rax],al
   14000ae7f:	add    BYTE PTR [rax+rax*1+0x43],bl
   14000ae83:	add    BYTE PTR [rdi+0x0],cl
   14000ae86:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14000ae8a:	add    BYTE PTR [rax],al
   14000ae8c:	(bad)  
   14000ae8d:	add    BYTE PTR [rax],al
   14000ae8f:	add    BYTE PTR [rdx],bh
   14000ae91:	add    BYTE PTR [rax],al
   14000ae93:	add    BYTE PTR [rax],al
   14000ae95:	add    BYTE PTR [rax],al
   14000ae97:	add    BYTE PTR [rsi+0x0],cl
   14000ae9a:	add    BYTE PTR [r8+rax*1+0x0],r10b
   14000ae9f:	add    BYTE PTR [rax+rax*1],ah
   14000aea2:	add    BYTE PTR [rax],al
   14000aea4:	add    BYTE PTR [rax],al
   14000aea6:	add    BYTE PTR [rax],al
   14000aea8:	cmp    al,BYTE PTR [rax]
   14000aeaa:	sub    al,0x0
   14000aeac:	and    al,0x0
   14000aeae:	add    BYTE PTR [rax],al
   14000aeb0:	and    BYTE PTR [rax],al
   14000aeb2:	add    BYTE PTR [rax],al
   14000aeb4:	add    BYTE PTR [rax],al
   14000aeb6:	add    BYTE PTR [rax],al
   14000aeb8:	outs   dx,BYTE PTR ds:[rsi]
   14000aeb9:	add    BYTE PTR [rbp+0x0],ah
   14000aebc:	je     0x14000aebe
   14000aebe:	push   0x64002e00
   14000aec3:	add    BYTE PTR [rax+rax*1+0x6c],ch
	...
   14000aecf:	add    BYTE PTR [rdx],cl
   14000aed1:	add    BYTE PTR [rcx],cl
   14000aed3:	add    BYTE PTR [rcx],cl
   14000aed5:	add    BYTE PTR [rax],al
   14000aed7:	add    BYTE PTR [rip+0x77004600],ah        # 0x1b700f4dd
   14000aedd:	add    BYTE PTR [rbx+0x0],dh
	...
   14000aef0:	push   rdx
   14000aef1:	push   rbx
   14000aef2:	rex.R push rbx
   14000aef4:	test   edi,eax
   14000aef6:	fist   WORD PTR [rax]
   14000aef8:	ins    DWORD PTR es:[rdi],dx
   14000aef9:	mov    bh,0xec
   14000aefb:	rex.WR xchg rsp,rax
   14000aefd:	(bad)  
   14000aefe:	or     BYTE PTR [rbx],dl
   14000af00:	mov    ebx,0x131943f
   14000af05:	add    BYTE PTR [rax],al
   14000af07:	add    BYTE PTR [rsi+0x65],ch
   14000af0a:	je     0x14000af3a
   14000af0c:	jo     0x14000af72
   14000af0e:	(bad)  
	...
   14000af23:	add    BYTE PTR [rax],al
   14000af25:	push   rbp
   14000af26:	rex.RXB push r8
   14000af28:	add    BYTE PTR [rax],dl
   14000af2a:	add    BYTE PTR [rax],al
   14000af2c:	in     eax,0x12
   14000af2e:	add    BYTE PTR [rax],al
   14000af30:	cs je  0x14000af98
   14000af33:	js     0x14000afa9
   14000af35:	and    al,0x6c
   14000af37:	jo     0x14000af69
   14000af39:	xor    DWORD PTR [rsi+0x65],ebp
   14000af3c:	je     0x14000af6c
   14000af3e:	gs js  0x14000afa6
   14000af41:	and    DWORD PTR [rdx],esi
   14000af43:	xor    BYTE PTR [rdi+0x70],bl
   14000af46:	jb     0x14000afb1
   14000af48:	(bad)  
   14000af49:	add    BYTE PTR [rax],al
   14000af4b:	add    al,dh
   14000af4d:	and    al,BYTE PTR [rax]
   14000af4f:	add    BYTE PTR [rbx+0x1],dh
   14000af52:	add    BYTE PTR [rax],al
   14000af54:	cs je  0x14000afbc
   14000af57:	js     0x14000afcd
   14000af59:	and    al,0x6c
   14000af5b:	jo     0x14000af8d
   14000af5d:	xor    ebp,DWORD PTR [rsi+0x65]
   14000af60:	je     0x14000af90
   14000af62:	gs js  0x14000afca
   14000af65:	and    DWORD PTR [rbx],esi
   14000af67:	xor    eax,0x6279685f
   14000af6c:	jb     0x14000afd7
   14000af6e:	fs (bad) 
   14000af70:	outs   dx,DWORD PTR ds:[rsi]
   14000af71:	outs   dx,DWORD PTR ds:[rsi]
   14000af72:	je     0x14000af74
   14000af74:	jo     0x14000af9a
   14000af76:	add    BYTE PTR [rax],al
   14000af78:	(bad)  
   14000af79:	or     eax,DWORD PTR [rax]
   14000af7b:	add    BYTE PTR [rsi],ch
   14000af7d:	je     0x14000afe4
   14000af7f:	js     0x14000aff5
   14000af81:	and    al,0x6d
   14000af83:	outs   dx,BYTE PTR ds:[rsi]
   14000af84:	add    BYTE PTR [rax],al
   14000af86:	add    BYTE PTR [rax],al
   14000af88:	shr    BYTE PTR [rdi],1
   14000af8a:	add    BYTE PTR [rax],al
   14000af8c:	jge    0x14000af8e
   14000af8e:	add    BYTE PTR [rax],al
   14000af90:	cs je  0x14000aff8
   14000af93:	js     0x14000b009
   14000af95:	and    al,0x6d
   14000af97:	outs   dx,BYTE PTR ds:[rsi]
   14000af98:	and    al,0x30
   14000af9a:	xor    BYTE PTR [rax],al
   14000af9c:	push   rax
   14000af9d:	xor    BYTE PTR [rax],al
   14000af9f:	add    BYTE PTR [rax+0x0],dl
   14000afa2:	add    BYTE PTR [rax],al
   14000afa4:	cs je  0x14000b00c
   14000afa7:	js     0x14000b01d
   14000afa9:	and    al,0x78
   14000afab:	add    BYTE PTR [rax-0x57ffffd0],ah
   14000afb1:	adc    al,0x0
   14000afb3:	add    BYTE PTR [rsi],ch
   14000afb5:	je     0x14000b01c
   14000afb7:	js     0x14000b02d
   14000afb9:	and    al,0x7a
   14000afbb:	jns    0x14000afbd
   14000afbd:	add    BYTE PTR [rax],al
   14000afbf:	add    BYTE PTR [rax+0x45],cl
   14000afc2:	add    BYTE PTR [rax],al
   14000afc4:	sub    DWORD PTR [rsi+0x0],edx
   14000afc7:	add    BYTE PTR [rsi],ch
   14000afc9:	je     0x14000b030
   14000afcb:	js     0x14000b041
   14000afcd:	and    al,0x7a
   14000afcf:	jp     0x14000afd1
   14000afd1:	add    BYTE PTR [rax],al
   14000afd3:	add    BYTE PTR [rax],al
   14000afd5:	movabs al,ds:0x692e000004b00000
   14000afde:	fs (bad) 
   14000afe0:	je     0x14000b043
   14000afe2:	and    al,0x35
   14000afe4:	add    BYTE PTR [rax],al
   14000afe6:	add    BYTE PTR [rax],al
   14000afe8:	mov    al,0xa4
   14000afea:	add    BYTE PTR [rax],al
   14000afec:	adc    BYTE PTR [rax],al
   14000afee:	add    BYTE PTR [rax],al
   14000aff0:	xor    BYTE PTR cs:[rax],dh
   14000aff3:	movsxd esp,DWORD PTR [rsi+0x67]
   14000aff6:	add    BYTE PTR [rax],al
   14000aff8:	shl    BYTE PTR [rax+rax*1+0x800],0x0
   14000b000:	cs rex.XB push r10
   14000b003:	push   rsp
   14000b004:	and    al,0x58
   14000b006:	rex.XB
   14000b007:	add    BYTE PTR [r8],al
   14000b00a:	add    BYTE PTR [rax],al
   14000b00c:	enter  0xa4,0x0
   14000b010:	or     BYTE PTR [rax],al
   14000b012:	add    BYTE PTR [rax],al
   14000b014:	cs rex.XB push r10
   14000b017:	push   rsp
   14000b018:	and    al,0x58
   14000b01a:	rex.XB
   14000b01b:	rex.B
   14000b01c:	add    BYTE PTR [r8],al
   14000b01f:	add    al,dl
   14000b021:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b022:	add    BYTE PTR [rax],al
   14000b024:	or     BYTE PTR [rax],al
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	cs rex.XB push r10
   14000b02b:	push   rsp
   14000b02c:	and    al,0x58
   14000b02e:	rex.XB pop r10
   14000b030:	add    BYTE PTR [rax],al
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	fsub   DWORD PTR [rax+rax*1+0x800]
   14000b03b:	add    BYTE PTR [rsi],ch
   14000b03d:	rex.XB push r10
   14000b03f:	push   rsp
   14000b040:	and    al,0x58
   14000b042:	rex.WB
   14000b043:	add    BYTE PTR [r8],al
   14000b046:	add    BYTE PTR [rax],al
   14000b048:	loopne 0x14000afee
   14000b04a:	add    BYTE PTR [rax],al
   14000b04c:	or     BYTE PTR [rax],al
   14000b04e:	add    BYTE PTR [rax],al
   14000b050:	cs rex.XB push r10
   14000b053:	push   rsp
   14000b054:	and    al,0x58
   14000b056:	rex.WB
   14000b057:	rex.B
   14000b058:	add    BYTE PTR [r8],al
   14000b05b:	add    al,ch
   14000b05d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b05e:	add    BYTE PTR [rax],al
   14000b060:	or     BYTE PTR [rax],al
   14000b062:	add    BYTE PTR [rax],al
   14000b064:	cs rex.XB push r10
   14000b067:	push   rsp
   14000b068:	and    al,0x58
   14000b06a:	rex.WB pop r9
   14000b06c:	add    BYTE PTR [rax],al
   14000b06e:	add    BYTE PTR [rax],al
   14000b070:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b072:	add    BYTE PTR [rax],al
   14000b074:	or     BYTE PTR [rax],al
   14000b076:	add    BYTE PTR [rax],al
   14000b078:	cs rex.XB push r10
   14000b07b:	push   rsp
   14000b07c:	and    al,0x58
   14000b07e:	rex.WB pop r10
   14000b080:	add    BYTE PTR [rax],al
   14000b082:	add    BYTE PTR [rax],al
   14000b084:	clc    
   14000b085:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b086:	add    BYTE PTR [rax],al
   14000b088:	cmp    al,0x0
   14000b08a:	add    BYTE PTR [rax],al
   14000b08c:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   14000b095:	add    BYTE PTR [rax],al
   14000b097:	add    BYTE PTR [rax-0x5b],al
   14000b09a:	add    BYTE PTR [rax],al
   14000b09c:	and    BYTE PTR [rip+0x722e0000],al        # 0x1b22eb0a2
   14000b0a2:	fs (bad) 
   14000b0a4:	je     0x14000b107
   14000b0a6:	add    BYTE PTR [rax],al
   14000b0a8:	(bad)  
   14000b0a9:	stos   BYTE PTR es:[rdi],al
   14000b0aa:	add    BYTE PTR [rax],al
   14000b0ac:	sbb    al,BYTE PTR [rdx]
   14000b0ae:	add    BYTE PTR [rax],al
   14000b0b0:	cs jb  0x14000b117
   14000b0b3:	(bad)  
   14000b0b4:	je     0x14000b117
   14000b0b6:	and    al,0x30
   14000b0b8:	xor    BYTE PTR [rax],al
   14000b0ba:	add    BYTE PTR [rax],al
   14000b0bc:	sub    BYTE PTR [rax+rax*1+0x27000],0x0
   14000b0c4:	cs jb  0x14000b12b
   14000b0c7:	(bad)  
   14000b0c8:	je     0x14000b12b
   14000b0ca:	and    al,0x7a
   14000b0cc:	jp     0x14000b0ce
   14000b0ce:	add    BYTE PTR [rax],al
   14000b0d0:	lock scas al,BYTE PTR es:[rdi]
   14000b0d2:	add    BYTE PTR [rax],al
   14000b0d4:	test   al,0x3
   14000b0d6:	add    BYTE PTR [rax],al
   14000b0d8:	cs jb  0x14000b13f
   14000b0db:	(bad)  
   14000b0dc:	je     0x14000b13f
   14000b0de:	and    al,0x7a
   14000b0e0:	jp     0x14000b15c
   14000b0e2:	fs (bad) 
   14000b0e4:	add    BYTE PTR [eax],al
   14000b0e7:	add    BYTE PTR [rax-0x47ffff4e],bl
   14000b0ed:	(bad)  
   14000b0ee:	add    BYTE PTR [rax],al
   14000b0f0:	cs js  0x14000b157
   14000b0f3:	(bad)  
   14000b0f4:	je     0x14000b157
   14000b0f6:	add    BYTE PTR [rax],al
   14000b0f8:	push   rax
   14000b0f9:	mov    edx,0x200000
   14000b0fe:	add    BYTE PTR [rax],al
   14000b100:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   14000b10a:	add    BYTE PTR [rax],al
   14000b10c:	jo     0x14000b0c8
   14000b10e:	add    BYTE PTR [rax],al
   14000b110:	and    BYTE PTR [rax],al
   14000b112:	add    BYTE PTR [rax],al
   14000b114:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   14000b11e:	add    BYTE PTR [rax],al
   14000b120:	nop
   14000b121:	mov    edx,0x100000
   14000b126:	add    BYTE PTR [rax],al
   14000b128:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   14000b132:	add    BYTE PTR [rax],al
   14000b134:	movabs al,ds:0x2e000000260000ba
   14000b13d:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   14000b146:	add    BYTE PTR [rax],al
   14000b148:	enter  0xba,0x0
   14000b14c:	adc    BYTE PTR [rax],al
   14000b14e:	add    BYTE PTR [rax],al
   14000b150:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   14000b15a:	add    BYTE PTR [rax],al
   14000b15c:	fdivr  DWORD PTR [rdx+0x2440000]
   14000b162:	add    BYTE PTR [rax],al
   14000b164:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   14000b16d:	add    BYTE PTR [rax],al
   14000b16f:	add    BYTE PTR [rdi*4+0x140000],bl
   14000b176:	add    BYTE PTR [rax],al
   14000b178:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000b181:	add    BYTE PTR [rax],al
   14000b183:	add    BYTE PTR [rax],dh
   14000b185:	mov    ebp,0x4b00000
   14000b18a:	add    BYTE PTR [rax],al
   14000b18c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   14000b195:	add    BYTE PTR [rax],al
   14000b197:	add    al,ah
   14000b199:	rol    DWORD PTR [rax],0x0
   14000b19c:	or     eax,DWORD PTR cs:[rax]
   14000b19f:	add    BYTE PTR [rsi],ch
   14000b1a1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   14000b1a9:	add    BYTE PTR [rax],al
   14000b1ab:	add    BYTE PTR [rax],al
   14000b1ad:	rol    BYTE PTR [rax],1
   14000b1af:	add    BYTE PTR [rax],ah
   14000b1b1:	add    BYTE PTR [rax],al
   14000b1b3:	add    BYTE PTR [rsi],ch
   14000b1b5:	fs (bad) 
   14000b1b7:	je     0x14000b21a
   14000b1b9:	add    BYTE PTR [rax],al
   14000b1bb:	add    BYTE PTR [rax],ah
   14000b1bd:	rol    BYTE PTR [rax],1
   14000b1bf:	add    BYTE PTR [rax+0x1],bl
   14000b1c2:	add    BYTE PTR [rax],al
   14000b1c4:	cs fs (bad) 
   14000b1c7:	je     0x14000b22a
   14000b1c9:	and    al,0x64
   14000b1cb:	imul   esi,DWORD PTR [rax],0x30
   14000b1ce:	add    BYTE PTR [rax],al
   14000b1d0:	js     0x14000b1a3
   14000b1d2:	add    BYTE PTR [rax],al
   14000b1d4:	mov    esp,0x2e000000
   14000b1d9:	fs (bad) 
   14000b1db:	je     0x14000b23e
   14000b1dd:	and    al,0x70
   14000b1df:	jb     0x14000b211
   14000b1e1:	xor    BYTE PTR [rax],al
   14000b1e3:	add    BYTE PTR [rax-0x2e],al
   14000b1e6:	add    BYTE PTR [rax],al
   14000b1e8:	pop    rax
   14000b1e9:	add    eax,DWORD PTR [rax]
   14000b1eb:	add    BYTE PTR [rsi],ch
   14000b1ed:	fs (bad) 
   14000b1ef:	je     0x14000b252
   14000b1f1:	and    al,0x7a
   14000b1f3:	jp     0x14000b1f5
   14000b1f5:	add    BYTE PTR [rax],al
   14000b1f7:	add    BYTE PTR [rax-0x57ffff2b],ah
   14000b1fd:	jge    0x14000b1ff
   14000b1ff:	add    BYTE PTR [rsi],ch
   14000b201:	(bad)  
   14000b203:	jae    0x14000b205
   14000b205:	add    BYTE PTR [rax],al
   14000b207:	add    BYTE PTR [rax+0x53],dl
   14000b20a:	add    DWORD PTR [rax],eax
   14000b20c:	pop    rax
   14000b20d:	add    BYTE PTR [rax],al
   14000b20f:	add    BYTE PTR [rsi],ch
   14000b211:	(bad)  
   14000b213:	jae    0x14000b239
   14000b215:	xor    BYTE PTR [rax],dh
   14000b217:	add    BYTE PTR [rax+0x50000153],dh
   14000b21d:	sbb    al,0x0
   14000b21f:	add    BYTE PTR [rsi],ch
   14000b221:	(bad)  
   14000b223:	jae    0x14000b249
   14000b225:	xor    BYTE PTR [rcx],dh
   14000b227:	add    BYTE PTR [rax],al
   14000b229:	jo     0x14000b22c
   14000b22b:	add    BYTE PTR [rax+rcx*1],al
   14000b22e:	add    BYTE PTR [rax],al
   14000b230:	cs (bad) 
   14000b233:	jae    0x14000b259
   14000b235:	jo     0x14000b2a9
   14000b237:	xor    BYTE PTR [rax],dh
   14000b239:	add    BYTE PTR [rax],al
   14000b23b:	add    BYTE PTR [rax],dl
   14000b23d:	js     0x14000b240
   14000b23f:	add    BYTE PTR [rdi+rcx*1],dl
   14000b242:	add    BYTE PTR [rax],al
   14000b244:	cs (bad) 
   14000b247:	jae    0x14000b26d
   14000b249:	jp     0x14000b2c5
   14000b24b:	add    BYTE PTR [rax],al
   14000b24d:	nop
   14000b24e:	add    DWORD PTR [rax],eax
   14000b250:	fadd   QWORD PTR [rip+0x702e0000]        # 0x1b02eb256
   14000b256:	fs (bad) 
   14000b258:	je     0x14000b2bb
   14000b25a:	add    BYTE PTR [rax],al
   14000b25c:	add    BYTE PTR [rax+0x100001],ah
   14000b262:	add    BYTE PTR [rax],al
   14000b264:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   14000b26e:	add    BYTE PTR [rax],al
   14000b270:	add    BYTE PTR [rax+0xa00001],dh
   14000b276:	add    BYTE PTR [rax],al
   14000b278:	cs jb  0x14000b2ee
   14000b27b:	jb     0x14000b2e0
   14000b27d:	and    al,0x30
   14000b27f:	xor    DWORD PTR [rax],eax
   14000b281:	add    BYTE PTR [rax],al
   14000b283:	add    BYTE PTR [rax+0x80001b0],ah
   14000b289:	(bad)  
   14000b28a:	add    BYTE PTR [rax],al
   14000b28c:	cs jb  0x14000b302
   14000b28f:	jb     0x14000b2f4
   14000b291:	and    al,0x30
   14000b293:	xor    al,BYTE PTR [rax]
   14000b295:	add    BYTE PTR [rax],al
   14000b297:	add    BYTE PTR [rcx],bl
   14000b299:	sub    al,0x9
   14000b29b:	add    BYTE PTR [rbx],bl
   14000b29d:	xor    al,0x5b
   14000b29f:	add    BYTE PTR [rbx],bl
   14000b2a1:	add    DWORD PTR [rdx+0x0],edx
   14000b2a4:	or     al,0xe0
   14000b2a6:	or     al,al
   14000b2a8:	or     BYTE PTR [rax+0x7],dh
   14000b2ab:	(bad)  
   14000b2ac:	(bad)  
   14000b2ad:	push   rax
   14000b2ae:	add    BYTE PTR [rax],al
   14000b2b0:	or     al,0x2f
   14000b2b2:	add    BYTE PTR [rax],al
   14000b2b4:	add    BYTE PTR [rdx],0x0
   14000b2b7:	add    BYTE PTR [rcx],ah
   14000b2b9:	sbb    eax,DWORD PTR [rax+rax*1]
   14000b2bc:	sbb    esi,esp
   14000b2be:	pop    rdx
   14000b2bf:	add    BYTE PTR [rax],cl
   14000b2c1:	(bad)  
   14000b2c2:	pop    rcx
   14000b2c3:	add    BYTE PTR [rax],dl
   14000b2c5:	adc    BYTE PTR [rax],al
   14000b2c7:	add    BYTE PTR [rdi-0x67ffffef],ch
   14000b2cd:	mov    dl,0x0
   14000b2cf:	add    BYTE PTR [rcx],ah
   14000b2d1:	add    BYTE PTR [rax],al
   14000b2d3:	add    BYTE PTR [rax],dl
   14000b2d5:	adc    BYTE PTR [rax],al
   14000b2d7:	add    BYTE PTR [rdi-0x67ffffef],ch
   14000b2dd:	mov    dl,0x0
   14000b2df:	add    BYTE PTR [rcx],ah
   14000b2e1:	add    BYTE PTR [rax+rax*1],al
   14000b2e4:	add    ah,dh
   14000b2e6:	pop    rdx
   14000b2e7:	add    BYTE PTR [rax],al
   14000b2e9:	(bad)  
   14000b2ea:	pop    rcx
   14000b2eb:	add    BYTE PTR [rax+0x6c000030],ah
   14000b2f1:	xor    DWORD PTR [rax],eax
   14000b2f3:	add    al,dl
   14000b2f5:	mov    dl,0x0
   14000b2f7:	add    BYTE PTR [rcx],al
   14000b2f9:	sbb    cl,BYTE PTR [rbx]
   14000b2fb:	add    BYTE PTR [rdx],bl
   14000b2fd:	je     0x14000b306
   14000b2ff:	add    BYTE PTR [rdx],bl
   14000b301:	fs (bad) 
   14000b303:	add    BYTE PTR [rdx],bl
   14000b305:	push   rsp
   14000b306:	add    eax,0x4341a00
   14000b30b:	add    BYTE PTR [rdx],bl
   14000b30d:	lock sbb al,ah
   14000b310:	(bad)  
   14000b311:	rol    BYTE PTR [rax],0x0
   14000b314:	and    DWORD PTR [rax],eax
   14000b316:	add    BYTE PTR [rax],al
   14000b318:	nop
   14000b319:	adc    eax,DWORD PTR [rax]
   14000b31b:	add    BYTE PTR [rsi-0x7ffffeb],cl
   14000b321:	mov    dl,0x0
   14000b323:	add    BYTE PTR [rcx],al
   14000b325:	or     al,0x6
   14000b327:	add    BYTE PTR [rsp+rsi*1],cl
   14000b32a:	or     al,0x0
   14000b32c:	or     al,0x52
   14000b32e:	or     BYTE PTR [rax+0x7],dh
   14000b331:	(bad)  
   14000b332:	(bad)  
   14000b333:	push   rax
   14000b334:	and    DWORD PTR [rax],eax
   14000b336:	add    BYTE PTR [rax],al
   14000b338:	movabs al,ds:0x24000018b8000015
   14000b341:	mov    bl,0x0
   14000b343:	add    BYTE PTR [rcx],al
   14000b345:	cmp    al,BYTE PTR [rax+rax*1]
   14000b348:	cmp    dh,BYTE PTR [rsi+rax*1+0x0]
   14000b34c:	(bad)  
   14000b34d:	xor    al,BYTE PTR [rdx]
   14000b34f:	xor    BYTE PTR [rcx],bl
   14000b351:	sub    BYTE PTR [rdi],al
   14000b353:	add    BYTE PTR [rdi],dl
   14000b355:	add    DWORD PTR [rsi+0x0],ebp
   14000b358:	or     al,dh
   14000b35a:	(bad)  
   14000b35b:	loopne 0x14000b361
   14000b35d:	jo     0x14000b362
   14000b35f:	(bad)  
   14000b360:	add    dl,BYTE PTR [rax+0x0]
   14000b363:	add    BYTE PTR [rdi+rbp*1],cl
   14000b366:	add    BYTE PTR [rax],al
   14000b368:	(bad)  
   14000b369:	add    eax,DWORD PTR [rax]
   14000b36b:	add    BYTE PTR [rcx],ah
   14000b36d:	fild   WORD PTR [rax+rax*1]
   14000b370:	ffreep st(4)
   14000b372:	jne    0x14000b374
   14000b374:	or     BYTE PTR [rsp+rsi*2],dh
   14000b377:	add    BYTE PTR [rax+0x19],dl
   14000b37a:	add    BYTE PTR [rax],al
   14000b37c:	in     al,dx
   14000b37d:	sbb    DWORD PTR [rax],eax
   14000b37f:	add    BYTE PTR [rax-0x4d],dl
   14000b382:	add    BYTE PTR [rax],al
   14000b384:	and    DWORD PTR [rax],ecx
   14000b386:	add    al,BYTE PTR [rax]
   14000b388:	or     ah,dl
   14000b38a:	jbe    0x14000b38c
   14000b38c:	in     al,dx
   14000b38d:	sbb    DWORD PTR [rax],eax
   14000b38f:	add    BYTE PTR [rax+0x1b],bh
   14000b392:	add    BYTE PTR [rax],al
   14000b394:	ins    BYTE PTR es:[rdi],dx
   14000b395:	mov    bl,0x0
   14000b397:	add    BYTE PTR [rcx],ah
   14000b399:	add    BYTE PTR [rax],al
   14000b39b:	add    BYTE PTR [rax+0x19],dl
   14000b39e:	add    BYTE PTR [rax],al
   14000b3a0:	in     al,dx
   14000b3a1:	sbb    DWORD PTR [rax],eax
   14000b3a3:	add    BYTE PTR [rax-0x4d],dl
   14000b3a6:	add    BYTE PTR [rax],al
   14000b3a8:	and    DWORD PTR [rax],eax
   14000b3aa:	add    al,BYTE PTR [rax]
   14000b3ac:	add    BYTE PTR [rsp+rsi*2],dh
   14000b3af:	add    BYTE PTR [rax+0x37],al
   14000b3b2:	add    BYTE PTR [rax],al
   14000b3b4:	jb     0x14000b3ed
   14000b3b6:	add    BYTE PTR [rax],al
   14000b3b8:	cwde   
   14000b3b9:	mov    bl,0x0
   14000b3bb:	add    BYTE PTR [rcx],ah
   14000b3bd:	add    BYTE PTR [rax+rax*1],al
   14000b3c0:	add    ah,al
   14000b3c2:	jne    0x14000b3c4
   14000b3c4:	add    BYTE PTR [rsp+rsi*2],dh
   14000b3c7:	add    BYTE PTR [rax+0x37],al
   14000b3ca:	add    BYTE PTR [rax],al
   14000b3cc:	jb     0x14000b405
   14000b3ce:	add    BYTE PTR [rax],al
   14000b3d0:	cwde   
   14000b3d1:	mov    bl,0x0
   14000b3d3:	add    BYTE PTR [rcx],ah
   14000b3d5:	add    BYTE PTR [rsi],al
   14000b3d7:	add    BYTE PTR [rax],al
   14000b3d9:	(bad)  
   14000b3da:	jbe    0x14000b3dc
   14000b3dc:	add    ah,al
   14000b3de:	jne    0x14000b3e0
   14000b3e0:	add    BYTE PTR [rsp+rsi*2],dh
   14000b3e3:	add    BYTE PTR [rax+0x37],al
   14000b3e6:	add    BYTE PTR [rax],al
   14000b3e8:	jb     0x14000b421
   14000b3ea:	add    BYTE PTR [rax],al
   14000b3ec:	cwde   
   14000b3ed:	mov    bl,0x0
   14000b3ef:	add    BYTE PTR [rcx],ah
   14000b3f1:	add    BYTE PTR [rax],al
   14000b3f3:	add    BYTE PTR [rax+0x37],al
   14000b3f6:	add    BYTE PTR [rax],al
   14000b3f8:	jb     0x14000b431
   14000b3fa:	add    BYTE PTR [rax],al
   14000b3fc:	cwde   
   14000b3fd:	mov    bl,0x0
   14000b3ff:	add    BYTE PTR [rcx],al
   14000b401:	or     al,BYTE PTR [rax+rax*1]
   14000b404:	or     dh,BYTE PTR [rsi+rax*1]
   14000b407:	add    BYTE PTR [rdx],cl
   14000b409:	xor    al,BYTE PTR [rsi]
   14000b40b:	jo     0x14000b42e
   14000b40d:	add    BYTE PTR [rax],al
   14000b40f:	add    al,al
   14000b411:	(bad)  
   14000b412:	add    BYTE PTR [rax],al
   14000b414:	(bad)
   14000b417:	add    BYTE PTR [rax],al
   14000b419:	mov    ah,0x0
   14000b41b:	add    BYTE PTR [rcx],al
   14000b41d:	add    al,0x1
   14000b41f:	add    BYTE PTR [rdx+riz*2],al
   14000b422:	add    BYTE PTR [rax],al
   14000b424:	and    DWORD PTR [rip+0x34050002],eax        # 0x17405b42c
   14000b42a:	(bad)  
   14000b42b:	add    al,dl
   14000b42d:	and    BYTE PTR [rax],al
   14000b42f:	add    BYTE PTR [rbx+0x21],dl
   14000b432:	add    BYTE PTR [rax],al
   14000b434:	sbb    al,0xb4
   14000b436:	add    BYTE PTR [rax],al
   14000b438:	and    DWORD PTR [rax],eax
   14000b43a:	add    BYTE PTR [rax],al
   14000b43c:	shl    BYTE PTR [rax],1
   14000b43e:	add    BYTE PTR [rax],al
   14000b440:	push   rbx
   14000b441:	and    DWORD PTR [rax],eax
   14000b443:	add    BYTE PTR [rsp+rsi*4],bl
   14000b446:	add    BYTE PTR [rax],al
   14000b448:	and    DWORD PTR [rax],eax
   14000b44a:	add    BYTE PTR [rax],al
   14000b44c:	shl    BYTE PTR [rax],1
   14000b44e:	add    BYTE PTR [rax],al
   14000b450:	push   rbx
   14000b451:	and    DWORD PTR [rax],eax
   14000b453:	add    BYTE PTR [rsp+rsi*4],bl
   14000b456:	add    BYTE PTR [rax],al
   14000b458:	and    DWORD PTR [rax],eax
   14000b45a:	add    al,BYTE PTR [rax]
   14000b45c:	add    BYTE PTR [rsi+rax*1],dh
   14000b45f:	add    BYTE PTR [rax+rax*2+0x0],dh
   14000b463:	add    BYTE PTR [rdx+0x48000040],bl
   14000b469:	mov    ah,0x0
   14000b46b:	add    BYTE PTR [rcx],al
   14000b46d:	or     eax,DWORD PTR [rip+0x7c20b00]        # 0x147c2bf73
   14000b473:	lock add eax,0x27003e0
   14000b479:	(bad)  
   14000b47a:	add    BYTE PTR [rax],al
   14000b47c:	and    DWORD PTR [rax],ecx
   14000b47e:	add    al,BYTE PTR [rax]
   14000b480:	or     BYTE PTR [rbx+rdx*1],dh
   14000b483:	add    BYTE PTR [rax-0x22ffffdf],ah
   14000b489:	and    DWORD PTR [rax],eax
   14000b48b:	add    BYTE PTR [rsp+rsi*4+0x0],ch
   14000b48f:	add    BYTE PTR [rcx],ah
   14000b491:	clts   
   14000b493:	add    BYTE PTR [rdi],cl
   14000b495:	(bad)  
   14000b496:	or     al,BYTE PTR [rax]
   14000b498:	or     al,ah
   14000b49a:	or     eax,DWORD PTR [rax]
   14000b49c:	add    eax,0xdd000c54
   14000b4a1:	and    DWORD PTR [rax],eax
   14000b4a3:	add    BYTE PTR [rbx],al
   14000b4a5:	and    al,BYTE PTR [rax]
   14000b4a7:	add    BYTE PTR [rsp+rsi*4+0x0],bh
   14000b4ab:	add    BYTE PTR [rcx],ah
   14000b4ad:	add    BYTE PTR [rax],al
   14000b4af:	add    ch,bl
   14000b4b1:	and    DWORD PTR [rax],eax
   14000b4b3:	add    BYTE PTR [rbx],al
   14000b4b5:	and    al,BYTE PTR [rax]
   14000b4b7:	add    BYTE PTR [rsp+rsi*4+0x0],bh
   14000b4bb:	add    BYTE PTR [rcx],ah
   14000b4bd:	add    BYTE PTR [rax],al
   14000b4bf:	add    BYTE PTR [rax-0x22ffffdf],ah
   14000b4c5:	and    DWORD PTR [rax],eax
   14000b4c7:	add    BYTE PTR [rsp+rsi*4+0x0],ch
   14000b4cb:	add    BYTE PTR [rcx],ah
   14000b4cd:	add    BYTE PTR [rdx],al
   14000b4cf:	add    BYTE PTR [rax],al
   14000b4d1:	xor    al,0x13
   14000b4d3:	add    BYTE PTR [rsi],dl
   14000b4d5:	add    BYTE PTR [r8],al
   14000b4d8:	sub    BYTE PTR [rcx+0x0],al
   14000b4db:	add    BYTE PTR [rsp+rsi*4+0x210000],bh
   14000b4e2:	or     BYTE PTR [rax],al
   14000b4e4:	add    ah,dl
   14000b4e6:	or     al,BYTE PTR [rax]
   14000b4e8:	add    ah,al
   14000b4ea:	or     eax,DWORD PTR [rax]
   14000b4ec:	add    BYTE PTR [rsp+rcx*1+0x0],dl
   14000b4f0:	add    BYTE PTR [rbx+rdx*1],dh
   14000b4f3:	add    BYTE PTR [rsi],dl
   14000b4f5:	add    BYTE PTR [r8],al
   14000b4f8:	sub    BYTE PTR [rcx+0x0],al
   14000b4fb:	add    BYTE PTR [rsp+rsi*4+0x1c010000],bh
   14000b502:	or     al,0x0
   14000b504:	sbb    al,0x64
   14000b506:	or     al,0x0
   14000b508:	sbb    al,0x54
   14000b50a:	or     eax,DWORD PTR [rax]
   14000b50c:	sbb    al,0x34
   14000b50e:	or     al,BYTE PTR [rax]
   14000b510:	sbb    al,0x32
   14000b512:	sbb    al,dh
   14000b514:	(bad)  
   14000b515:	loopne 0x14000b52b
   14000b517:	rcl    BYTE PTR [rdx],1
   14000b519:	rcl    BYTE PTR [rax],0x70
   14000b51c:	and    DWORD PTR [rax],eax
   14000b51e:	add    BYTE PTR [rax],al
   14000b520:	nop
   14000b521:	and    al,BYTE PTR [rax]
   14000b523:	add    ch,ah
   14000b525:	and    al,BYTE PTR [rax]
   14000b527:	add    BYTE PTR [rax],al
   14000b529:	mov    ch,0x0
   14000b52b:	add    BYTE PTR [rcx],al
   14000b52d:	sysret 
   14000b52f:	add    BYTE PTR [rdi],cl
   14000b531:	xor    al,0x22
   14000b533:	add    BYTE PTR [rdi],cl
   14000b535:	add    DWORD PTR [rax+rax*1],ebx
   14000b538:	or     BYTE PTR [rax+0x7],dh
   14000b53b:	(bad)  
   14000b53c:	(bad)  
   14000b53d:	push   rax
   14000b53e:	add    BYTE PTR [rax],al
   14000b540:	and    DWORD PTR [rax],eax
   14000b542:	add    BYTE PTR [rax],al
   14000b544:	add    BYTE PTR [rbx],ah
   14000b546:	add    BYTE PTR [rax],al
   14000b548:	movsxd esp,DWORD PTR [rax+rax*1]
   14000b54b:	add    BYTE PTR [rsi*4+0x19090000],ch
   14000b552:	or     al,BYTE PTR [rax]
   14000b554:	sbb    esp,eax
   14000b556:	or     eax,DWORD PTR [rax]
   14000b558:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   14000b55c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14000b560:	sbb    DWORD PTR [rax+rcx*1],esi
   14000b563:	add    BYTE PTR [rcx],bl
   14000b565:	push   rdx
   14000b566:	adc    eax,0x2d96e0
   14000b56b:	add    BYTE PTR [rcx],al
   14000b56d:	add    BYTE PTR [rax],al
   14000b56f:	add    cl,cl
   14000b571:	and    eax,0x273a0000
   14000b576:	add    BYTE PTR [rax],al
   14000b578:	push   rsi
   14000b579:	xor    BYTE PTR [rax],al
   14000b57b:	add    BYTE PTR [rdx],bh
   14000b57d:	(bad)  
   14000b57e:	add    BYTE PTR [rax],al
   14000b580:	add    DWORD PTR [rsi],eax
   14000b582:	add    al,BYTE PTR [rax]
   14000b584:	(bad)  
   14000b585:	xor    al,BYTE PTR [rdx]
   14000b587:	push   rax
   14000b588:	add    DWORD PTR [rax],eax
   14000b58a:	add    BYTE PTR [rax],al
   14000b58c:	add    DWORD PTR [rcx+rax*1],eax
   14000b58f:	add    BYTE PTR [rdx+riz*8],al
   14000b592:	add    BYTE PTR [rax],al
   14000b594:	add    DWORD PTR [rdx+rax*1],ecx
   14000b597:	add    BYTE PTR [rcx+rax*1],cl
   14000b59a:	adc    DWORD PTR [rax],eax
   14000b59c:	or     DWORD PTR [rcx+rax*1],eax
   14000b59f:	add    BYTE PTR [rdx+riz*1],al
   14000b5a2:	add    BYTE PTR [rax],al
   14000b5a4:	xchg   esi,eax
   14000b5a5:	sub    eax,0x10000
   14000b5aa:	add    BYTE PTR [rax],al
   14000b5ac:	sbb    al,0x2b
   14000b5ae:	add    BYTE PTR [rax],al
   14000b5b0:	push   rdx
   14000b5b1:	sub    eax,DWORD PTR [rax]
   14000b5b3:	add    BYTE PTR [rcx],al
   14000b5b5:	add    BYTE PTR [rax],al
   14000b5b7:	add    BYTE PTR [rdx+0x2b],dl
   14000b5ba:	add    BYTE PTR [rax],al
   14000b5bc:	or     DWORD PTR [rdx],ecx
   14000b5be:	add    al,0x0
   14000b5c0:	or     dh,BYTE PTR [rsi+rax*1]
   14000b5c3:	add    BYTE PTR [rdx],cl
   14000b5c5:	xor    al,BYTE PTR [rsi]
   14000b5c7:	jo     0x14000b55f
   14000b5c9:	sub    eax,0x10000
   14000b5ce:	add    BYTE PTR [rax],al
   14000b5d0:	sub    eax,0x6000002c
   14000b5d5:	sub    al,0x0
   14000b5d7:	add    BYTE PTR [rax+0x60000030],al
   14000b5dd:	sub    al,0x0
   14000b5df:	add    BYTE PTR [rcx],al
   14000b5e1:	or     eax,0x340d0004
   14000b5e6:	or     DWORD PTR [rax],eax
   14000b5e8:	or     eax,0x500632
   14000b5ed:	add    BYTE PTR [rax],al
   14000b5ef:	add    BYTE PTR [rcx],al
   14000b5f1:	add    BYTE PTR [rax],al
   14000b5f3:	add    BYTE PTR [rcx],al
   14000b5f5:	sbb    BYTE PTR [rcx],al
   14000b5f7:	add    BYTE PTR [rax],bl
   14000b5f9:	ret    0x0
   14000b5fc:	add    DWORD PTR [rdx],ecx
   14000b5fe:	add    al,0x0
   14000b600:	or     dh,BYTE PTR [rsi+rax*1]
   14000b603:	add    BYTE PTR [rdx],cl
   14000b605:	xor    al,BYTE PTR [rsi]
   14000b607:	jo     0x14000b60a
   14000b609:	(bad)  
   14000b60a:	add    al,BYTE PTR [rax]
   14000b60c:	(bad)  
   14000b60d:	xor    al,BYTE PTR [rdx]
   14000b60f:	xor    BYTE PTR [rcx],al
   14000b611:	or     BYTE PTR [rdx],al
   14000b613:	add    BYTE PTR [rax],cl
   14000b615:	xchg   edx,eax
   14000b616:	add    al,0x30
   14000b618:	sbb    DWORD PTR [rbx],ebx
   14000b61a:	add    al,0x0
   14000b61c:	or     al,0x34
   14000b61e:	str    WORD PTR [rdx+rsi*4]
   14000b622:	or     BYTE PTR [rax+0xc],dh
   14000b625:	(bad)  
   14000b626:	add    BYTE PTR [rax],al
   14000b628:	pop    rax
   14000b629:	add    BYTE PTR [rax],al
   14000b62b:	add    BYTE PTR [rcx],bl
   14000b62d:	sbb    eax,DWORD PTR [rbx]
   14000b62f:	add    BYTE PTR [rcx],cl
   14000b631:	add    DWORD PTR [rdx],edx
   14000b633:	add    BYTE PTR [rdx],al
   14000b635:	jo     0x14000b637
   14000b637:	add    BYTE PTR [rdi+rbp*1],cl
   14000b63a:	add    BYTE PTR [rax],al
   14000b63c:	add    BYTE PTR [rax],0x0
   14000b63f:	add    BYTE PTR [rcx],bl
   14000b641:	(bad)  
   14000b642:	add    eax,0x4e340d00
   14000b647:	add    BYTE PTR [rip+0x6004a01],cl        # 0x14601004e
   14000b64d:	jo     0x14000b64f
   14000b64f:	add    BYTE PTR [rdi+rbp*1],cl
   14000b652:	add    BYTE PTR [rax],al
   14000b654:	add    al,BYTE PTR [rax]
   14000b657:	add    BYTE PTR [rcx],bl
   14000b659:	sbb    DWORD PTR [rdx],eax
   14000b65b:	add    BYTE PTR [rdi],al
   14000b65d:	add    DWORD PTR [rbp+0x0],esp
   14000b660:	or     al,0x2f
   14000b662:	add    BYTE PTR [rax],al
   14000b664:	adc    BYTE PTR [rbx],al
   14000b666:	add    BYTE PTR [rax],al
   14000b668:	add    DWORD PTR [rax+rcx*1],edx
   14000b66b:	add    BYTE PTR [rsp+riz*2],dl
   14000b66e:	or     eax,DWORD PTR [rax]
   14000b670:	adc    al,0x54
   14000b672:	or     al,BYTE PTR [rax]
   14000b674:	adc    al,0x34
   14000b676:	or     DWORD PTR [rax],eax
   14000b678:	adc    al,0x52
   14000b67a:	adc    BYTE PTR [rax+0x1],dh
   14000b67d:	(bad)  
   14000b67e:	or     al,BYTE PTR [rax]
   14000b680:	(bad)  
   14000b681:	xor    al,0x13
   14000b683:	add    BYTE PTR [rdi],dl
   14000b685:	jb     0x14000b697
   14000b687:	lock (bad) 
   14000b689:	loopne 0x14000b697
   14000b68b:	ror    BYTE PTR [rdx],1
   14000b68d:	ror    BYTE PTR [rax],0x70
   14000b690:	(bad)  
   14000b691:	(bad)  
   14000b692:	(bad)  
   14000b693:	push   rax
   14000b694:	add    DWORD PTR [rbx],ecx
   14000b696:	add    al,0x0
   14000b698:	or     edx,DWORD PTR [rdx+0x4]
   14000b69b:	jo     0x14000b6a0
   14000b69d:	xor    BYTE PTR [rdx],al
   14000b69f:	push   rax
   14000b6a0:	add    DWORD PTR [rbx],edx
   14000b6a2:	or     BYTE PTR [rax],al
   14000b6a4:	adc    esi,DWORD PTR [rdi+rcx*1]
   14000b6a7:	add    BYTE PTR [rbx],dl
   14000b6a9:	jb     0x14000b6b7
   14000b6ab:	lock or ah,al
   14000b6ae:	or     BYTE PTR [rax+0x7],dh
   14000b6b1:	(bad)  
   14000b6b2:	(bad)  
   14000b6b3:	push   rax
   14000b6b4:	add    DWORD PTR [rcx],edx
   14000b6b6:	or     BYTE PTR [rax],al
   14000b6b8:	adc    DWORD PTR [rdx+0xd],esi
   14000b6bb:	lock or esp,eax
   14000b6be:	or     eax,eax
   14000b6c0:	(bad)  
   14000b6c1:	jo     0x14000b6c9
   14000b6c3:	(bad)  
   14000b6c4:	add    eax,0x19300450
   14000b6c9:	or     DWORD PTR cs:[rax],eax
   14000b6cc:	sbb    eax,0x1d00d964
   14000b6d1:	xor    al,0xd8
   14000b6d3:	add    BYTE PTR [rip+0xe00d201],bl        # 0x14e0188da
   14000b6d9:	lock or al,0x70
   14000b6dc:	or     edx,DWORD PTR [rax+0x0]
   14000b6df:	add    BYTE PTR [rdi+rbp*1],cl
   14000b6e2:	add    BYTE PTR [rax],al
   14000b6e4:	add    BYTE PTR [rsi],0x0
   14000b6e7:	add    BYTE PTR [rcx],al
   14000b6e9:	(bad)  
   14000b6ea:	add    al,BYTE PTR [rax]
   14000b6ec:	(bad)  
   14000b6ed:	jb     0x14000b6f1
   14000b6ef:	xor    BYTE PTR [rcx],al
   14000b6f1:	and    eax,0x3425000b
   14000b6f6:	and    BYTE PTR [rax],al
   14000b6f8:	and    eax,0x1a001601
   14000b6fd:	lock sbb al,ah
   14000b700:	(bad)  
   14000b701:	rcl    BYTE PTR [rax+rax*8],1
   14000b704:	adc    dh,BYTE PTR [rax+0x11]
   14000b707:	(bad)  
   14000b708:	adc    BYTE PTR [rax+0x0],dl
   14000b70b:	add    BYTE PTR [rcx],al
   14000b70d:	sbb    al,0xa
   14000b70f:	add    BYTE PTR [rsp+riz*2],bl
   14000b712:	ltr    WORD PTR [rsp+rdx*2]
   14000b716:	or     eax,0xc341c00
   14000b71b:	add    BYTE PTR [rdx+rsi*2],bl
   14000b71e:	sbb    al,ah
   14000b720:	(bad)  
   14000b721:	rcl    BYTE PTR [rax+rsi*2],1
   14000b724:	add    DWORD PTR [rcx],esp
   14000b726:	or     al,BYTE PTR [rax]
   14000b728:	and    DWORD PTR [rdx+rdx*1],esi
   14000b72b:	add    BYTE PTR [rcx],ah
   14000b72d:	xchg   edx,eax
   14000b72e:	sbb    dh,al
   14000b730:	sbb    al,ah
   14000b732:	(bad)  
   14000b733:	rcl    BYTE PTR [rax+rax*8],1
   14000b736:	adc    dh,BYTE PTR [rax+0x11]
   14000b739:	(bad)  
   14000b73a:	adc    BYTE PTR [rax+0x1],dl
   14000b73d:	sbb    eax,0x11d000a
   14000b742:	adc    DWORD PTR [rax],eax
   14000b744:	adc    eax,esi
   14000b746:	pavgb  mm1,QWORD PTR [rip+0x9c00bd0]        # 0x149c0c31d
   14000b74d:	jo     0x14000b757
   14000b74f:	(bad)  
   14000b750:	(bad)  
   14000b751:	xor    BYTE PTR [rsi],al
   14000b753:	push   rax
   14000b754:	sbb    DWORD PTR [rdi],ebx
   14000b756:	or     BYTE PTR [rax],al
   14000b758:	adc    BYTE PTR [rbx+rdx*1],dh
   14000b75b:	add    BYTE PTR [rax],dl
   14000b75d:	mov    dl,0xc
   14000b75f:	lock or dl,al
   14000b762:	or     BYTE PTR [rax+0x7],dh
   14000b765:	(bad)  
   14000b766:	(bad)  
   14000b767:	push   rax
   14000b768:	or     al,0x2f
   14000b76a:	add    BYTE PTR [rax],al
   14000b76c:	push   rax
   14000b76d:	add    BYTE PTR [rax],al
   14000b76f:	add    BYTE PTR [rcx],al
   14000b771:	adc    al,0x8
   14000b773:	add    BYTE PTR [rsp+rsi*1],dl
   14000b776:	lldt   WORD PTR [rdx+rdx*2]
   14000b77a:	adc    al,ah
   14000b77c:	(bad)  
   14000b77d:	ror    BYTE PTR [rax+rsi*2],0xb
   14000b781:	(bad)  
   14000b782:	or     dl,BYTE PTR [rax+0x19]
   14000b785:	(bad)  
   14000b786:	add    eax,0x19340d00
   14000b78b:	add    BYTE PTR [rip+0x6001601],cl        # 0x14600cd92
   14000b791:	jo     0x14000b793
   14000b793:	add    BYTE PTR [rdi+rbp*1],cl
   14000b796:	add    BYTE PTR [rax],al
   14000b798:	movabs al,ds:0x18000a1801000000
   14000b7a1:	fs (bad) 
   14000b7a3:	add    BYTE PTR [rax],bl
   14000b7a5:	push   rsp
   14000b7a6:	or     eax,0xc341800
   14000b7ab:	add    BYTE PTR [rax],bl
   14000b7ad:	jb     0x14000b7c3
   14000b7af:	lock adc ah,al
   14000b7b2:	adc    BYTE PTR [rax+0x1],dh
   14000b7b5:	(bad)  
   14000b7b6:	add    DWORD PTR [rax],eax
   14000b7b8:	(bad)  
   14000b7b9:	(bad)  
   14000b7ba:	add    BYTE PTR [rax],al
   14000b7bc:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415b7ca
   14000b7c2:	or     eax,DWORD PTR [rax]
   14000b7c4:	adc    eax,0x15000a64
   14000b7c9:	xor    al,0x9
   14000b7cb:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e0c923
   14000b7d1:	adc    BYTE PTR [rsi],al
   14000b7d3:	add    BYTE PTR [rax],dl
   14000b7d5:	je     0x14000b7e4
   14000b7d7:	add    BYTE PTR [rax],dl
   14000b7d9:	xor    al,0xc
   14000b7db:	add    BYTE PTR [rax],dl
   14000b7dd:	xchg   edx,eax
   14000b7de:	or     al,0xf0
   14000b7e0:	sbb    DWORD PTR [rbx],ebx
   14000b7e2:	add    eax,DWORD PTR [rax]
   14000b7e4:	or     DWORD PTR [rcx],eax
   14000b7e6:	(bad)  
   14000b7e7:	add    BYTE PTR [rdx],al
   14000b7e9:	xor    BYTE PTR [rax],al
   14000b7eb:	add    BYTE PTR [rdi+rbp*1],cl
   14000b7ee:	add    BYTE PTR [rax],al
   14000b7f0:	movabs al,ds:0x1200072419000000
   14000b7f9:	fs push rax
   14000b7fb:	add    BYTE PTR [rdx],dl
   14000b7fd:	xor    al,0x4f
   14000b7ff:	add    BYTE PTR [rdx],dl
   14000b801:	add    DWORD PTR [rax+rax*1+0xb],ecx
   14000b805:	jo     0x14000b807
   14000b807:	add    BYTE PTR [rdi+rbp*1],cl
   14000b80a:	add    BYTE PTR [rax],al
   14000b80c:	push   rax
   14000b80d:	add    al,BYTE PTR [rax]
   14000b80f:	add    BYTE PTR [rcx],al
   14000b811:	sbb    DWORD PTR [rdx],ecx
   14000b813:	add    BYTE PTR [rcx],bl
   14000b815:	je     0x14000b820
   14000b817:	add    BYTE PTR [rcx],bl
   14000b819:	or     BYTE PTR fs:[rax],al
   14000b81c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000b820:	sbb    DWORD PTR [rsi+rax*1],esi
   14000b823:	add    BYTE PTR [rcx],bl
   14000b825:	xor    dl,BYTE PTR [rip+0x21819e0]        # 0x14218d20b
   14000b82b:	add    BYTE PTR [rcx],cl
   14000b82d:	repnz add dh,BYTE PTR [rax]
   14000b830:	or     al,0x2f
   14000b832:	add    BYTE PTR [rax],al
   14000b834:	jo     0x14000b836
   14000b836:	add    BYTE PTR [rax],al
   14000b838:	sbb    DWORD PTR [rcx],ebp
   14000b83a:	add    al,BYTE PTR [rax]
   14000b83c:	sbb    al,BYTE PTR [rcx]
   14000b83e:	adc    DWORD PTR [rax],eax
   14000b840:	or     al,0x2f
   14000b842:	add    BYTE PTR [rax],al
   14000b844:	jo     0x14000b846
   14000b846:	add    BYTE PTR [rax],al
   14000b848:	add    DWORD PTR [rdx],edx
   14000b84a:	or     BYTE PTR [rax],al
   14000b84c:	adc    dl,BYTE PTR [rdi+rcx*1+0x0]
   14000b850:	adc    dh,BYTE PTR [rsp+rcx*1]
   14000b853:	add    BYTE PTR [rdx],dl
   14000b855:	jb     0x14000b865
   14000b857:	loopne 0x14000b865
   14000b859:	jo     0x14000b866
   14000b85b:	(bad)  
   14000b85c:	sbb    DWORD PTR [rdi],esi
   14000b85e:	or     eax,0xa8742600
   14000b863:	add    BYTE PTR [rsi],ah
   14000b865:	cmps   DWORD PTR fs:[rsi],DWORD PTR es:[rdi]
   14000b867:	add    BYTE PTR [rsi],ah
   14000b869:	xor    al,0xa6
   14000b86b:	add    BYTE PTR [rsi],ah
   14000b86d:	add    DWORD PTR [rax+0x16f01800],esp
   14000b873:	loopne 0x14000b889
   14000b875:	rcl    BYTE PTR [rdx],1
   14000b877:	rcl    BYTE PTR [rax],0x50
   14000b87a:	add    BYTE PTR [rax],al
   14000b87c:	or     al,0x2f
   14000b87e:	add    BYTE PTR [rax],al
   14000b880:	lock add al,0x0
   14000b883:	add    BYTE PTR [rcx],bl
   14000b885:	and    al,0x7
   14000b887:	add    BYTE PTR [rdx],dl
   14000b889:	fs (bad) 
   14000b88b:	add    BYTE PTR [rdx],dl
   14000b88d:	xor    al,0x2e
   14000b88f:	add    BYTE PTR [rdx],dl
   14000b891:	add    DWORD PTR [rdx],ebp
   14000b893:	add    BYTE PTR [rbx],cl
   14000b895:	jo     0x14000b897
   14000b897:	add    BYTE PTR [rdi+rbp*1],cl
   14000b89a:	add    BYTE PTR [rax],al
   14000b89c:	rex add DWORD PTR [rax],eax
   14000b89f:	add    BYTE PTR [rcx],bl
   14000b8a1:	or     al,BYTE PTR es:[rax]
   14000b8a4:	adc    al,0x1
   14000b8a6:	mov    eax,DWORD PTR [rax]
   14000b8a8:	or     eax,0x9e00bf0
   14000b8ad:	rol    BYTE PTR [rdi],1
   14000b8af:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14360bd26
   14000b8b6:	add    dh,BYTE PTR [rax]
   14000b8b8:	or     al,0x2f
   14000b8ba:	add    BYTE PTR [rax],al
   14000b8bc:	add    al,0x0
   14000b8bf:	add    BYTE PTR [rcx],bl
   14000b8c1:	xor    BYTE PTR [rbx],cl
   14000b8c3:	add    BYTE PTR [rdi],bl
   14000b8c5:	xor    al,0x6c
   14000b8c7:	add    BYTE PTR [rdi],bl
   14000b8c9:	add    DWORD PTR [rax+rax*1+0x10],esp
   14000b8cd:	lock (bad) 
   14000b8cf:	loopne 0x14000b8dd
   14000b8d1:	ror    BYTE PTR [rdx],1
   14000b8d3:	ror    BYTE PTR [rax],0x70
   14000b8d6:	(bad)  
   14000b8d7:	(bad)  
   14000b8d8:	(bad)  
   14000b8d9:	push   rax
   14000b8da:	add    BYTE PTR [rax],al
   14000b8dc:	or     al,0x2f
   14000b8de:	add    BYTE PTR [rax],al
   14000b8e0:	adc    BYTE PTR [rbx],al
   14000b8e2:	add    BYTE PTR [rax],al
   14000b8e4:	sbb    DWORD PTR [rip+0x3417000a],esp        # 0x17417b8f4
   14000b8ea:	adc    al,0x0
   14000b8ec:	(bad)  
   14000b8ed:	mov    dl,0x10
   14000b8ef:	lock (bad) 
   14000b8f1:	loopne 0x14000b8ff
   14000b8f3:	ror    BYTE PTR [rdx],1
   14000b8f5:	ror    BYTE PTR [rax],0x70
   14000b8f8:	(bad)  
   14000b8f9:	(bad)  
   14000b8fa:	(bad)  
   14000b8fb:	push   rax
   14000b8fc:	or     al,0x2f
   14000b8fe:	add    BYTE PTR [rax],al
   14000b900:	pop    rax
   14000b901:	add    BYTE PTR [rax],al
   14000b903:	add    BYTE PTR [rcx],dl
   14000b905:	or     al,BYTE PTR [rax+rax*1]
   14000b908:	or     dh,BYTE PTR [rsi+rcx*1]
   14000b90b:	add    BYTE PTR [rdx],cl
   14000b90d:	mov    dl,0x6
   14000b90f:	jo     0x14000b8a7
   14000b911:	sub    eax,0x30000
   14000b916:	add    BYTE PTR [rax],al
   14000b918:	mov    dh,0x8e
   14000b91a:	add    BYTE PTR [rax],al
   14000b91c:	loop   0x14000b8ac
   14000b91e:	add    BYTE PTR [rax],al
   14000b920:	movsxd ecx,DWORD PTR [rdi+0x0]
   14000b926:	add    BYTE PTR [rax],al
   14000b928:	jmp    0x16100b9bb
   14000b92d:	pop    QWORD PTR [rax]
   14000b92f:	add    BYTE PTR [rbx-0x71],ah
   14000b932:	add    BYTE PTR [rax],al
   14000b934:	add    BYTE PTR [rax],al
   14000b936:	add    BYTE PTR [rax],al
   14000b938:	sub    BYTE PTR [rdi-0x70d00000],cl
   14000b93e:	add    BYTE PTR [rax],al
   14000b940:	movsxd ecx,DWORD PTR [rdi+0x0]
   14000b946:	add    BYTE PTR [rax],al
   14000b948:	add    DWORD PTR [rsi],eax
   14000b94a:	add    al,BYTE PTR [rax]
   14000b94c:	(bad)  
   14000b94d:	push   rdx
   14000b94e:	add    dl,BYTE PTR [rax+0x1]
   14000b951:	adc    al,0x6
   14000b953:	add    BYTE PTR [rsp+riz*2],dl
   14000b956:	or     eax,DWORD PTR [rax]
   14000b958:	adc    al,0x34
   14000b95a:	or     al,BYTE PTR [rax]
   14000b95c:	adc    al,0x72
   14000b95e:	adc    BYTE PTR [rax+0x19],dh
   14000b961:	sub    DWORD PTR [rbx],ecx
   14000b963:	add    BYTE PTR [rdi],dl
   14000b965:	xor    al,0x1d
   14000b967:	add    BYTE PTR [rdi],dl
   14000b969:	add    DWORD PTR [rax+rax*1],edx
   14000b96c:	adc    al,dh
   14000b96e:	(bad)  
   14000b96f:	loopne 0x14000b97d
   14000b971:	ror    BYTE PTR [rdx],1
   14000b973:	ror    BYTE PTR [rax],0x70
   14000b976:	(bad)  
   14000b977:	(bad)  
   14000b978:	(bad)  
   14000b979:	push   rax
   14000b97a:	add    BYTE PTR [rax],al
   14000b97c:	or     al,0x2f
   14000b97e:	add    BYTE PTR [rax],al
   14000b980:	nop
   14000b981:	add    BYTE PTR [rax],al
   14000b983:	add    BYTE PTR [rcx],al
   14000b985:	adc    al,0x8
   14000b987:	add    BYTE PTR [rsp+riz*2],dl
   14000b98a:	or     BYTE PTR [rax],al
   14000b98c:	adc    al,0x54
   14000b98e:	(bad)  
   14000b98f:	add    BYTE PTR [rsp+rsi*1],dl
   14000b992:	(bad)  
   14000b993:	add    BYTE PTR [rdx+rsi*1],dl
   14000b996:	adc    BYTE PTR [rax+0x19],dh
   14000b999:	and    eax,0x34130005
   14000b99e:	lar    edx,WORD PTR [rbx]
   14000b9a1:	add    DWORD PTR [rdx+rax*1],ecx
   14000b9a4:	(bad)  
   14000b9a5:	jo     0x14000b9a7
   14000b9a7:	add    BYTE PTR [rdi+rbp*1],cl
   14000b9aa:	add    BYTE PTR [rax],al
   14000b9ac:	push   rax
   14000b9ad:	adc    BYTE PTR [rax],al
   14000b9af:	add    BYTE PTR [rcx],bl
   14000b9b1:	(bad)  
   14000b9b2:	(bad)  
   14000b9b3:	add    BYTE PTR [rdi],cl
   14000b9b5:	fs or  eax,0xc340f00
   14000b9bb:	add    BYTE PTR [rdi],cl
   14000b9bd:	jb     0x14000b9ca
   14000b9bf:	jo     0x14000b9cd
   14000b9c1:	(bad)  
   14000b9c2:	add    BYTE PTR [rax],al
   14000b9c4:	cmp    BYTE PTR [rax],al
   14000b9c6:	add    BYTE PTR [rax],al
   14000b9c8:	add    DWORD PTR [rdi],edx
   14000b9ca:	or     BYTE PTR [rax],al
   14000b9cc:	(bad)  
   14000b9cd:	push   rsp
   14000b9ce:	adc    BYTE PTR [rax],al
   14000b9d0:	(bad)  
   14000b9d1:	xor    al,0xf
   14000b9d3:	add    BYTE PTR [rdi],dl
   14000b9d5:	xchg   edx,eax
   14000b9d6:	adc    esp,eax
   14000b9d8:	adc    DWORD PTR [rax+0x10],esi
   14000b9db:	(bad)  
   14000b9dc:	add    DWORD PTR [rbx],ebx
   14000b9de:	or     al,BYTE PTR [rax]
   14000b9e0:	sbb    edx,DWORD PTR [rbp+rcx*1+0x0]
   14000b9e4:	sbb    esi,DWORD PTR [rsp+rcx*1]
   14000b9e7:	add    BYTE PTR [rbx],bl
   14000b9e9:	push   rdx
   14000b9ea:	(bad)  
   14000b9eb:	lock adc eax,0x11d013e0
   14000b9f1:	jo     0x14000ba03
   14000b9f3:	(bad)  
   14000b9f4:	add    DWORD PTR [rdi],ecx
   14000b9f6:	(bad)  
   14000b9f7:	add    BYTE PTR [rdi],cl
   14000b9f9:	fs (bad) 
   14000b9fb:	add    BYTE PTR [rdi],cl
   14000b9fd:	xor    al,0x6
   14000b9ff:	add    BYTE PTR [rdi],cl
   14000ba01:	xor    cl,BYTE PTR [rbx]
   14000ba03:	jo     0x14000ba06
   14000ba05:	sbb    al,0xc
   14000ba07:	add    BYTE PTR [rsp+riz*2],bl
   14000ba0a:	adc    BYTE PTR [rax],al
   14000ba0c:	sbb    al,0x54
   14000ba0e:	ltr    WORD PTR [rsp+rsi*1]
   14000ba12:	(bad)  
   14000ba13:	add    BYTE PTR [rdx+rsi*2],bl
   14000ba16:	sbb    al,dh
   14000ba18:	(bad)  
   14000ba19:	loopne 0x14000ba2f
   14000ba1b:	rcl    BYTE PTR [rdx],1
   14000ba1d:	rcl    BYTE PTR [rax],0x70
   14000ba20:	add    DWORD PTR [rax],ebx
   14000ba22:	or     al,BYTE PTR [rax]
   14000ba24:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   14000ba28:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14000ba2c:	sbb    BYTE PTR [rax+rcx*1],dh
   14000ba2f:	add    BYTE PTR [rax],bl
   14000ba31:	xor    dl,BYTE PTR [rax+rsi*8]
   14000ba34:	adc    ah,al
   14000ba36:	adc    BYTE PTR [rax+0x1],dh
   14000ba39:	add    al,0x1
   14000ba3b:	add    BYTE PTR [rdx+riz*2],al
   14000ba3e:	add    BYTE PTR [rax],al
   14000ba40:	add    DWORD PTR [rcx+rax*1],eax
   14000ba43:	add    BYTE PTR [rdx+rax*2],al
   14000ba46:	add    BYTE PTR [rax],al
   14000ba48:	add    DWORD PTR [rcx+rax*1],eax
   14000ba4b:	add    BYTE PTR [rdx+rdx*1],al
   14000ba4e:	add    BYTE PTR [rax],al
   14000ba50:	add    DWORD PTR [rax],eax
   14000ba52:	add    BYTE PTR [rax],al
   14000ba54:	shl    BYTE PTR [rsi-0x24b00000],1
   14000ba5a:	add    BYTE PTR [rax],al
   14000ba5c:	add    BYTE PTR [rax-0x456fffff],ah
   14000ba62:	add    BYTE PTR [rax],al
   14000ba64:	enter  0xba,0x0
	...
   14000ba90:	movabs al,ds:0xba
	...
   14000baa1:	add    BYTE PTR [rbx+0x72],al
   14000baa4:	gs fs push rbp
   14000baa7:	rex.WB
   14000baa8:	rex.XB ins DWORD PTR es:[rdi],dx
   14000baaa:	imul   r13,QWORD PTR fs:[rsi+0x65],0x6d6f7250
   14000bab3:	jo     0x14000bb29
   14000bab5:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000bab7:	jb     0x14000bafc
   14000bab9:	jb     0x14000bb20
   14000babb:	fs outs dx,BYTE PTR gs:[rsi]
   14000babe:	je     0x14000bb29
   14000bac0:	(bad)  
   14000bac1:	ins    BYTE PTR es:[rdi],dx
   14000bac2:	jae    0x14000bb1b
	...
   14000bad8:	enter  0xbf,0x0
	...
   14000bae4:	rex ret 
   14000bae6:	add    BYTE PTR [rax],al
   14000bae8:	cwde   
   14000bae9:	movabs ds:0xbec00000,al
   14000baf2:	add    BYTE PTR [rax],al
   14000baf4:	add    BYTE PTR [rax],al
   14000baf6:	add    BYTE PTR [rax],al
   14000baf8:	pop    rsi
   14000baf9:	enter  0x0,0x90
   14000bafd:	movabs eax,ds:0xbea00000
   14000bb06:	add    BYTE PTR [rax],al
   14000bb08:	add    BYTE PTR [rax],al
   14000bb0a:	add    BYTE PTR [rax],al
   14000bb0c:	mov    eax,cs
   14000bb0e:	add    BYTE PTR [rax],al
   14000bb10:	jo     0x14000bab3
   14000bb12:	add    BYTE PTR [rax],al
   14000bb14:	fdivr  DWORD PTR [rsi+0x0]
   14000bb1a:	add    BYTE PTR [rax],al
   14000bb1c:	add    BYTE PTR [rax],al
   14000bb1e:	add    BYTE PTR [rax],al
   14000bb20:	mov    ah,0xc8
   14000bb22:	add    BYTE PTR [rax],al
   14000bb24:	test   al,0xa1
   14000bb26:	add    BYTE PTR [rax],al
   14000bb28:	cmp    BYTE PTR [rdi+0x0],0x0
   14000bb2f:	add    BYTE PTR [rax],al
   14000bb31:	add    BYTE PTR [rax],al
   14000bb33:	add    dh,bl
   14000bb35:	enter  0x0,0x50
   14000bb39:	movabs ds:0xbf980000,al
   14000bb42:	add    BYTE PTR [rax],al
   14000bb44:	add    BYTE PTR [rax],al
   14000bb46:	add    BYTE PTR [rax],al
   14000bb48:	add    cl,cl
   14000bb4a:	add    BYTE PTR [rax],al
   14000bb4c:	push   0xffffffff900000a2
   14000bb51:	mov    ebp,0x0
   14000bb56:	add    BYTE PTR [rax],al
   14000bb58:	add    BYTE PTR [rax],al
   14000bb5a:	add    BYTE PTR [rax],al
   14000bb5c:	and    al,0xc9
   14000bb5e:	add    BYTE PTR [rax],al
   14000bb60:	(bad)  
   14000bb61:	movabs al,ds:0xbdf00000
   14000bb6a:	add    BYTE PTR [rax],al
   14000bb6c:	add    BYTE PTR [rax],al
   14000bb6e:	add    BYTE PTR [rax],al
   14000bb70:	rex.W leave 
   14000bb72:	add    BYTE PTR [rax],al
   14000bb74:	shl    BYTE PTR [rax-0x41b80000],0x0
	...
   14000bb83:	add    BYTE PTR [rdx-0x37],dh
   14000bb86:	add    BYTE PTR [rax],al
   14000bb88:	sbb    BYTE PTR [rcx-0x41c80000],ah
	...
   14000bb96:	add    BYTE PTR [rax],al
   14000bb98:	xchg   edx,eax
   14000bb99:	leave  
   14000bb9a:	add    BYTE PTR [rax],al
   14000bb9c:	or     BYTE PTR [rcx-0x42c00000],ah
	...
   14000bbaa:	add    BYTE PTR [rax],al
   14000bbac:	mov    ah,0xc9
   14000bbae:	add    BYTE PTR [rax],al
   14000bbb0:	adc    BYTE PTR [rax-0x41e80000],ah
	...
   14000bbbe:	add    BYTE PTR [rax],al
   14000bbc0:	mov    esp,0xe80000c9
   14000bbc5:	movabs al,ds:0xc1b80000
   14000bbce:	add    BYTE PTR [rax],al
   14000bbd0:	add    BYTE PTR [rax],al
   14000bbd2:	add    BYTE PTR [rax],al
   14000bbd4:	fmul   st(1),st
   14000bbd6:	add    BYTE PTR [rax],al
   14000bbd8:	mov    BYTE PTR [rax+rax*1+0xbf2000],ah
	...
   14000bbe7:	add    al,ch
   14000bbe9:	leave  
   14000bbea:	add    BYTE PTR [rax],al
   14000bbec:	lock movabs eax,ds:0xc1900000
   14000bbf6:	add    BYTE PTR [rax],al
   14000bbf8:	add    BYTE PTR [rax],al
   14000bbfa:	add    BYTE PTR [rax],al
   14000bbfc:	or     al,0xca
   14000bbfe:	add    BYTE PTR [rax],al
   14000bc00:	(bad)  
   14000bc01:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bc02:	add    BYTE PTR [rax],al
   14000bc04:	rol    QWORD PTR [rax],0x0
	...
   14000bc10:	sbb    dl,cl
   14000bc12:	add    BYTE PTR [rax],al
   14000bc14:	sbb    BYTE PTR [rax+rax*1+0xc1a000],ah
	...
   14000bc23:	add    BYTE PTR [rsi],ah
   14000bc25:	retf   0x0
   14000bc28:	jo     0x14000bbce
   14000bc2a:	add    BYTE PTR [rax],al
   14000bc2c:	xor    BYTE PTR [rbp+0x0],bh
   14000bc32:	add    BYTE PTR [rax],al
   14000bc34:	add    BYTE PTR [rax],al
   14000bc36:	add    BYTE PTR [rax],al
   14000bc38:	xor    cl,dl
   14000bc3a:	add    BYTE PTR [rax],al
   14000bc3c:	add    BYTE PTR [rax-0x40b00000],ah
	...
   14000bc4a:	add    BYTE PTR [rax],al
   14000bc4c:	rex retf 0x0
   14000bc50:	and    BYTE PTR [rdx-0x41900000],ah
	...
   14000bc5e:	add    BYTE PTR [rax],al
   14000bc60:	retfw  0x0
   14000bc64:	rex movabs eax,ds:0xbf100000
   14000bc6e:	add    BYTE PTR [rax],al
   14000bc70:	add    BYTE PTR [rax],al
   14000bc72:	add    BYTE PTR [rax],al
   14000bc74:	nop
   14000bc75:	retf   0x0
   14000bc78:	loopne 0x14000bc1b
   14000bc7a:	add    BYTE PTR [rax],al
   14000bc7c:	sar    BYTE PTR [rbp+0x0],0x0
   14000bc83:	add    BYTE PTR [rax],al
   14000bc85:	add    BYTE PTR [rax],al
   14000bc87:	add    BYTE PTR [rdx+rcx*8-0x5f700000],dh
   14000bc8e:	add    BYTE PTR [rax],al
   14000bc90:	jo     0x14000bc51
	...
   14000bc9a:	add    BYTE PTR [rax],al
   14000bc9c:	fmul   st,st(2)
   14000bc9e:	add    BYTE PTR [rax],al
   14000bca0:	movabs ds:0xbe900000,al
   14000bcaa:	add    BYTE PTR [rax],al
   14000bcac:	add    BYTE PTR [rax],al
   14000bcae:	add    BYTE PTR [rax],al
   14000bcb0:	cli    
   14000bcb1:	retf   0x0
   14000bcb4:	(bad)  
   14000bcb5:	movabs eax,ds:0xbe580000
   14000bcbe:	add    BYTE PTR [rax],al
   14000bcc0:	add    BYTE PTR [rax],al
   14000bcc2:	add    BYTE PTR [rax],al
   14000bcc4:	and    al,0xcb
   14000bcc6:	add    BYTE PTR [rax],al
   14000bcc8:	sub    BYTE PTR [rcx-0x40480000],ah
	...
   14000bcd6:	add    BYTE PTR [rax],al
   14000bcd8:	push   rsp
   14000bcd9:	retf   
   14000bcda:	add    BYTE PTR [rax],al
   14000bcdc:	mov    BYTE PTR [rdx-0x3e800000],ah
	...
   14000bcea:	add    BYTE PTR [rax],al
   14000bcec:	scas   al,BYTE PTR es:[rdi]
   14000bced:	retf   
   14000bcee:	add    BYTE PTR [rax],al
   14000bcf0:	push   rax
   14000bcf1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bcf2:	add    BYTE PTR [rax],al
   14000bcf4:	fdivr  DWORD PTR [rbp+0x0]
   14000bcfa:	add    BYTE PTR [rax],al
   14000bcfc:	add    BYTE PTR [rax],al
   14000bcfe:	add    BYTE PTR [rax],al
   14000bd00:	jp     0x14000bcce
   14000bd02:	add    BYTE PTR [rax],al
   14000bd04:	test   al,0xa0
   14000bd06:	add    BYTE PTR [rax],al
   14000bd08:	cmp    BYTE PTR [rbp+0x0],0x0
   14000bd0f:	add    BYTE PTR [rax],al
   14000bd11:	add    BYTE PTR [rax],al
   14000bd13:	add    BYTE PTR [rsp+rcx*8-0x5fb00000],bh
	...
   14000bd2e:	add    BYTE PTR [rax],al
   14000bd30:	mov    al,ch
	...
   14000bd3e:	add    BYTE PTR [rax],al
   14000bd40:	(bad)
   14000bd44:	add    BYTE PTR [rax],al
   14000bd46:	add    BYTE PTR [rax],al
   14000bd48:	push   rdx
   14000bd49:	(bad)  
   14000bd4a:	add    BYTE PTR [rax],al
   14000bd4c:	add    BYTE PTR [rax],al
   14000bd4e:	add    BYTE PTR [rax],al
   14000bd50:	jbe    0x14000bd16
   14000bd52:	add    BYTE PTR [rax],al
   14000bd54:	add    BYTE PTR [rax],al
   14000bd56:	add    BYTE PTR [rax],al
   14000bd58:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bd59:	(bad)  
   14000bd5a:	add    BYTE PTR [rax],al
   14000bd5c:	add    BYTE PTR [rax],al
   14000bd5e:	add    BYTE PTR [rax],al
   14000bd60:	(bad)  
   14000bd61:	(bad)  
   14000bd62:	add    BYTE PTR [rax],al
   14000bd64:	add    BYTE PTR [rax],al
   14000bd66:	add    BYTE PTR [rax],al
   14000bd68:	xor    ch,al
   14000bd6a:	add    BYTE PTR [rax],al
   14000bd6c:	add    BYTE PTR [rax],al
   14000bd6e:	add    BYTE PTR [rax],al
   14000bd70:	rex.X (bad) 
	...
   14000bd7e:	add    BYTE PTR [rax],al
   14000bd80:	movabs al,ds:0xcc
   14000bd89:	add    BYTE PTR [rax],al
   14000bd8b:	add    BYTE PTR [rax],al
   14000bd8d:	add    BYTE PTR [rax],al
   14000bd8f:	add    dl,ch
   14000bd91:	mov    BYTE PTR [rax],0x0
   14000bd94:	add    BYTE PTR [rax],al
   14000bd96:	add    BYTE PTR [rax],al
   14000bd98:	cld    
   14000bd99:	mov    BYTE PTR [rax],0x0
   14000bd9c:	add    BYTE PTR [rax],al
   14000bd9e:	add    BYTE PTR [rax],al
   14000bda0:	mov    esi,0xc7
   14000bda5:	add    BYTE PTR [rax],al
   14000bda7:	add    dl,bl
   14000bda9:	mov    BYTE PTR [rax],0x0
   14000bdac:	add    BYTE PTR [rax],al
   14000bdae:	add    BYTE PTR [rax],al
   14000bdb0:	call   0x14000be78
	...
   14000bdbd:	add    BYTE PTR [rax],al
   14000bdbf:	add    BYTE PTR [rsi],bl
   14000bdc1:	enter  0x0,0x0
   14000bdc5:	add    BYTE PTR [rax],al
   14000bdc7:	add    BYTE PTR [rsi],cl
   14000bdc9:	mov    DWORD PTR [rax],0x0
	...
   14000bdd7:	add    BYTE PTR [rdx-0x34],ah
   14000bdda:	add    BYTE PTR [rax],al
   14000bddc:	add    BYTE PTR [rax],al
   14000bdde:	add    BYTE PTR [rax],al
   14000bde0:	rex.WX int3 
	...
   14000bdee:	add    BYTE PTR [rax],al
   14000bdf0:	hlt    
   14000bdf1:	(bad)
   14000bdf4:	add    BYTE PTR [rax],al
   14000bdf6:	add    BYTE PTR [rax],al
   14000bdf8:	adc    dh,al
   14000bdfa:	add    BYTE PTR [rax],al
   14000bdfc:	add    BYTE PTR [rax],al
   14000bdfe:	add    BYTE PTR [rax],al
   14000be00:	push   0xffffffffffffffc7
   14000be02:	add    BYTE PTR [rax],al
   14000be04:	add    BYTE PTR [rax],al
   14000be06:	add    BYTE PTR [rax],al
   14000be08:	(bad)  
   14000be09:	(bad)  
	...
   14000be16:	add    BYTE PTR [rax],al
   14000be18:	jp     0x14000bde1
   14000be1a:	add    BYTE PTR [rax],al
   14000be1c:	add    BYTE PTR [rax],al
   14000be1e:	add    BYTE PTR [rax],al
   14000be20:	data16 (bad) 
   14000be22:	add    BYTE PTR [rax],al
   14000be24:	add    BYTE PTR [rax],al
   14000be26:	add    BYTE PTR [rax],al
   14000be28:	(bad)  
   14000be29:	mov    DWORD PTR [rax],0x0
	...
   14000be37:	add    BYTE PTR [rsp+rax*8],dh
	...
   14000be46:	add    BYTE PTR [rax],al
   14000be48:	(bad)  
   14000be49:	(bad)  
	...
   14000be56:	add    BYTE PTR [rax],al
   14000be58:	fadd   st(7),st
   14000be5a:	add    BYTE PTR [rax],al
   14000be5c:	add    BYTE PTR [rax],al
   14000be5e:	add    BYTE PTR [rax],al
   14000be60:	cmp    al,0xc8
	...
   14000be6e:	add    BYTE PTR [rax],al
   14000be70:	adc    al,cl
   14000be72:	add    BYTE PTR [rax],al
   14000be74:	add    BYTE PTR [rax],al
   14000be76:	add    BYTE PTR [rax],al
   14000be78:	push   rsi
   14000be79:	mov    BYTE PTR [rax],0x0
   14000be7c:	add    BYTE PTR [rax],al
   14000be7e:	add    BYTE PTR [rax],al
   14000be80:	push   rsp
   14000be81:	mov    DWORD PTR [rax],0x0
	...
   14000be8f:	add    BYTE PTR [rdi+rax*8+0x0],bl
	...
   14000be9e:	add    BYTE PTR [rax],al
   14000bea0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bea1:	ret    
   14000bea2:	add    BYTE PTR [rax],al
   14000bea4:	add    BYTE PTR [rax],al
   14000bea6:	add    BYTE PTR [rax],al
   14000bea8:	lods   al,BYTE PTR ds:[rsi]
   14000bea9:	mov    DWORD PTR [rax],0x0
   14000beaf:	add    BYTE PTR [rdx-0x3d],dh
	...
   14000bebe:	add    BYTE PTR [rax],al
   14000bec0:	(bad)  
   14000bec1:	ret    
   14000bec2:	add    BYTE PTR [rax],al
   14000bec4:	add    BYTE PTR [rax],al
   14000bec6:	add    BYTE PTR [rax],al
   14000bec8:	inc    bl
	...
   14000bed6:	add    BYTE PTR [rax],al
   14000bed8:	rol    bl,cl
   14000beda:	add    BYTE PTR [rax],al
   14000bedc:	add    BYTE PTR [rax],al
   14000bede:	add    BYTE PTR [rax],al
   14000bee0:	(bad)  
   14000bee1:	mov    BYTE PTR [rax],0x0
   14000bee4:	add    BYTE PTR [rax],al
   14000bee6:	add    BYTE PTR [rax],al
   14000bee8:	test   dh,al
   14000beea:	add    BYTE PTR [rax],al
   14000beec:	add    BYTE PTR [rax],al
   14000beee:	add    BYTE PTR [rax],al
   14000bef0:	mov    BYTE PTR cs:[rax],0x0
   14000bef4:	add    BYTE PTR [rax],al
   14000bef6:	add    BYTE PTR [rax],al
   14000bef8:	rex.X mov BYTE PTR [rax],0x0
   14000befc:	add    BYTE PTR [rax],al
   14000befe:	add    BYTE PTR [rax],al
   14000bf00:	jle    0x14000bec5
	...
   14000bf0e:	add    BYTE PTR [rax],al
   14000bf10:	push   0xffffffffffffffc6
	...
   14000bf1e:	add    BYTE PTR [rax],al
   14000bf20:	push   0xc5
   14000bf25:	add    BYTE PTR [rax],al
   14000bf27:	add    BYTE PTR [rax],ah
   14000bf29:	(bad)
   14000bf2c:	add    BYTE PTR [rax],al
   14000bf2e:	add    BYTE PTR [rax],al
   14000bf30:	rol    ah,0x0
   14000bf33:	add    BYTE PTR [rax],al
   14000bf35:	add    BYTE PTR [rax],al
   14000bf37:	add    BYTE PTR [rsp+rax*8+0x0],dl
   14000bf3e:	add    BYTE PTR [rax],al
   14000bf40:	pop    rdx
   14000bf41:	(bad)
	...
   14000bf50:	mov    dl,0xc5
   14000bf52:	add    BYTE PTR [rax],al
   14000bf54:	add    BYTE PTR [rax],al
   14000bf56:	add    BYTE PTR [rax],al
   14000bf58:	loopne 0x14000bf1f
   14000bf5a:	add    BYTE PTR [rax],al
   14000bf5c:	add    BYTE PTR [rax],al
   14000bf5e:	add    BYTE PTR [rax],al
   14000bf60:	mov    ch,0x0
	...
   14000bf6f:	add    BYTE PTR [rsi+0xc7],al
	...
   14000bf7d:	add    BYTE PTR [rax],al
   14000bf7f:	add    BYTE PTR [rax+0xc3],dl
   14000bf85:	add    BYTE PTR [rax],al
   14000bf87:	add    BYTE PTR [rdx+0xc5],ch
	...
   14000bf95:	add    BYTE PTR [rax],al
   14000bf97:	add    BYTE PTR [rax+0xc6],dh
   14000bf9d:	add    BYTE PTR [rax],al
   14000bf9f:	add    BYTE PTR [rbx+rax*8+0x0],bh
   14000bfa6:	add    BYTE PTR [rax],al
   14000bfa8:	retf   0xc6
	...
   14000bfb7:	add    BYTE PTR [rbx+rcx*8+0x0],al
	...
   14000bfc7:	add    al,ah
   14000bfc9:	rol    DWORD PTR [rax],0x0
   14000bfcc:	add    BYTE PTR [rax],al
   14000bfce:	add    BYTE PTR [rax],al
   14000bfd0:	cmp    al,0xc2
   14000bfd2:	add    BYTE PTR [rax],al
   14000bfd4:	add    BYTE PTR [rax],al
   14000bfd6:	add    BYTE PTR [rax],al
   14000bfd8:	rex.R ret 0x0
   14000bfdc:	add    BYTE PTR [rax],al
   14000bfde:	add    BYTE PTR [rax],al
   14000bfe0:	push   rax
   14000bfe1:	ret    0x0
   14000bfe4:	add    BYTE PTR [rax],al
   14000bfe6:	add    BYTE PTR [rax],al
   14000bfe8:	sbb    dl,al
   14000bfea:	add    BYTE PTR [rax],al
   14000bfec:	add    BYTE PTR [rax],al
   14000bfee:	add    BYTE PTR [rax],al
   14000bff0:	pop    rsp
   14000bff1:	ret    0x0
   14000bff4:	add    BYTE PTR [rax],al
   14000bff6:	add    BYTE PTR [rax],al
   14000bff8:	fs ret 0x0
   14000bffc:	add    BYTE PTR [rax],al
   14000bffe:	add    BYTE PTR [rax],al
   14000c000:	outs   dx,BYTE PTR ds:[rsi]
   14000c001:	ret    0x0
   14000c004:	add    BYTE PTR [rax],al
   14000c006:	add    BYTE PTR [rax],al
   14000c008:	loopne 0x14000bfd6
   14000c00a:	add    BYTE PTR [rax],al
   14000c00c:	add    BYTE PTR [rax],al
   14000c00e:	add    BYTE PTR [rax],al
   14000c010:	lock int3 
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	add    BYTE PTR [rax],al
   14000c016:	add    BYTE PTR [rax],al
   14000c018:	js     0x14000bfdc
   14000c01a:	add    BYTE PTR [rax],al
   14000c01c:	add    BYTE PTR [rax],al
   14000c01e:	add    BYTE PTR [rax],al
   14000c020:	test   dl,al
   14000c022:	add    BYTE PTR [rax],al
   14000c024:	add    BYTE PTR [rax],al
   14000c026:	add    BYTE PTR [rax],al
   14000c028:	rex int3 
   14000c02a:	add    BYTE PTR [rax],al
   14000c02c:	add    BYTE PTR [rax],al
   14000c02e:	add    BYTE PTR [rax],al
   14000c030:	cli    
   14000c031:	int3   
   14000c032:	add    BYTE PTR [rax],al
   14000c034:	add    BYTE PTR [rax],al
   14000c036:	add    BYTE PTR [rax],al
   14000c038:	mov    es,edx
   14000c03a:	add    BYTE PTR [rax],al
   14000c03c:	add    BYTE PTR [rax],al
   14000c03e:	add    BYTE PTR [rax],al
   14000c040:	cwde   
   14000c041:	ret    0x0
   14000c044:	add    BYTE PTR [rax],al
   14000c046:	add    BYTE PTR [rax],al
   14000c048:	movabs ds:0x30000000000000c2,al
   14000c051:	ret    0x0
   14000c054:	add    BYTE PTR [rax],al
   14000c056:	add    BYTE PTR [rax],al
   14000c058:	or     al,0xc2
   14000c05a:	add    BYTE PTR [rax],al
   14000c05c:	add    BYTE PTR [rax],al
   14000c05e:	add    BYTE PTR [rax],al
   14000c060:	add    al,dl
   14000c062:	add    BYTE PTR [rax],al
   14000c064:	add    BYTE PTR [rax],al
   14000c066:	add    BYTE PTR [rax],al
   14000c068:	ss int3 
   14000c06a:	add    BYTE PTR [rax],al
   14000c06c:	add    BYTE PTR [rax],al
   14000c06e:	add    BYTE PTR [rax],al
   14000c070:	sub    al,0xcc
   14000c072:	add    BYTE PTR [rax],al
   14000c074:	add    BYTE PTR [rax],al
   14000c076:	add    BYTE PTR [rax],al
   14000c078:	and    ah,cl
   14000c07a:	add    BYTE PTR [rax],al
   14000c07c:	add    BYTE PTR [rax],al
   14000c07e:	add    BYTE PTR [rax],al
   14000c080:	(bad)  
   14000c081:	int3   
   14000c082:	add    BYTE PTR [rax],al
   14000c084:	add    BYTE PTR [rax],al
   14000c086:	add    BYTE PTR [rax],al
   14000c088:	test   cl,0x0
   14000c08b:	add    BYTE PTR [rax],al
   14000c08d:	add    BYTE PTR [rax],al
   14000c08f:	add    BYTE PTR [rbx+rax*8+0x0],cl
   14000c093:	add    BYTE PTR [rax],al
   14000c095:	add    BYTE PTR [rax],al
   14000c097:	add    BYTE PTR [rbx+rax*8],dh
   14000c09a:	add    BYTE PTR [rax],al
   14000c09c:	add    BYTE PTR [rax],al
   14000c09e:	add    BYTE PTR [rax],al
   14000c0a0:	sub    al,bl
   14000c0a2:	add    BYTE PTR [rax],al
   14000c0a4:	add    BYTE PTR [rax],al
   14000c0a6:	add    BYTE PTR [rax],al
   14000c0a8:	adc    al,bl
   14000c0aa:	add    BYTE PTR [rax],al
   14000c0ac:	add    BYTE PTR [rax],al
   14000c0ae:	add    BYTE PTR [rax],al
   14000c0b0:	(bad)  
   14000c0b1:	ret    
   14000c0b2:	add    BYTE PTR [rax],al
   14000c0b4:	add    BYTE PTR [rax],al
   14000c0b6:	add    BYTE PTR [rax],al
   14000c0b8:	bnd ret 0x0
   14000c0bc:	add    BYTE PTR [rax],al
   14000c0be:	add    BYTE PTR [rax],al
   14000c0c0:	call   0x14000c187
   14000c0c5:	add    BYTE PTR [rax],al
   14000c0c7:	add    BYTE PTR [rax+0xc2],dh
   14000c0cd:	add    BYTE PTR [rax],al
   14000c0cf:	add    BYTE PTR [rdx+rax*8],ah
   14000c0d2:	add    BYTE PTR [rax],al
   14000c0d4:	add    BYTE PTR [rax],al
   14000c0d6:	add    BYTE PTR [rax],al
   14000c0d8:	loopne 0x14000c09c
   14000c0da:	add    BYTE PTR [rax],al
   14000c0dc:	add    BYTE PTR [rax],al
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	(bad)  
   14000c0e1:	ret    0x0
   14000c0e4:	add    BYTE PTR [rax],al
   14000c0e6:	add    BYTE PTR [rax],al
   14000c0e8:	or     al,0xcc
   14000c0ea:	add    BYTE PTR [rax],al
   14000c0ec:	add    BYTE PTR [rax],al
   14000c0ee:	add    BYTE PTR [rax],al
   14000c0f0:	add    cl,ah
   14000c0f2:	add    BYTE PTR [rax],al
   14000c0f4:	add    BYTE PTR [rax],al
   14000c0f6:	add    BYTE PTR [rax],al
   14000c0f8:	repnz retf 
   14000c0fa:	add    BYTE PTR [rax],al
   14000c0fc:	add    BYTE PTR [rax],al
   14000c0fe:	add    BYTE PTR [rax],al
   14000c100:	call   0x14000c1d0
   14000c105:	add    BYTE PTR [rax],al
   14000c107:	add    al,bl
   14000c109:	retf   
   14000c10a:	add    BYTE PTR [rax],al
   14000c10c:	add    BYTE PTR [rax],al
   14000c10e:	add    BYTE PTR [rax],al
   14000c110:	(bad)  
   14000c111:	retf   
   14000c112:	add    BYTE PTR [rax],al
   14000c114:	add    BYTE PTR [rax],al
   14000c116:	add    BYTE PTR [rax],al
   14000c118:	(bad)  
   14000c119:	rol    DWORD PTR [rax],0x0
   14000c11c:	add    BYTE PTR [rax],al
   14000c11e:	add    BYTE PTR [rax],al
   14000c120:	mov    esi,0xc2
   14000c125:	add    BYTE PTR [rax],al
   14000c127:	add    BYTE PTR [rax+0xcb],bh
   14000c12d:	add    BYTE PTR [rax],al
   14000c12f:	add    dh,al
   14000c131:	retf   
   14000c132:	add    BYTE PTR [rax],al
   14000c134:	add    BYTE PTR [rax],al
   14000c136:	add    BYTE PTR [rax],al
   14000c138:	add    al,0xcd
	...
   14000c146:	add    BYTE PTR [rax],al
   14000c148:	and    al,bh
   14000c14a:	add    BYTE PTR [rax],al
   14000c14c:	add    BYTE PTR [rax],al
   14000c14e:	add    BYTE PTR [rax],al
   14000c150:	mov    bl,cl
   14000c152:	add    BYTE PTR [rax],al
   14000c154:	add    BYTE PTR [rax],al
   14000c156:	add    BYTE PTR [rax],al
   14000c158:	jo     0x14000c125
   14000c15a:	add    BYTE PTR [rax],al
   14000c15c:	add    BYTE PTR [rax],al
   14000c15e:	add    BYTE PTR [rax],al
   14000c160:	(bad)  
   14000c161:	retf   
   14000c162:	add    BYTE PTR [rax],al
   14000c164:	add    BYTE PTR [rax],al
   14000c166:	add    BYTE PTR [rax],al
   14000c168:	cld    
   14000c169:	(bad)  
   14000c16a:	add    BYTE PTR [rax],al
   14000c16c:	add    BYTE PTR [rax],al
   14000c16e:	add    BYTE PTR [rax],al
   14000c170:	cmp    al,bh
	...
   14000c17e:	add    BYTE PTR [rax],al
   14000c180:	pushf  
   14000c181:	retf   
	...
   14000c18e:	add    BYTE PTR [rax],al
   14000c190:	(bad)  
   14000c191:	(bad)  
	...
   14000c19e:	add    BYTE PTR [rax],al
   14000c1a0:	jp     0x14000c167
   14000c1a2:	add    BYTE PTR [rax],al
   14000c1a4:	add    BYTE PTR [rax],al
   14000c1a6:	add    BYTE PTR [rax],al
   14000c1a8:	rex.WX enter 0x0,0x0
	...
   14000c1b5:	add    BYTE PTR [rax],al
   14000c1b7:	add    al,ch
   14000c1b9:	mov    DWORD PTR [rax],0x0
   14000c1bf:	add    dh,bh
   14000c1c1:	mov    DWORD PTR [rax],0x0
   14000c1c7:	add    BYTE PTR [rsi+0xc4],al
   14000c1cd:	add    BYTE PTR [rax],al
   14000c1cf:	add    BYTE PTR [rax],dl
   14000c1d1:	(bad)
	...
   14000c1e0:	add    DWORD PTR [rip+0x63736377],eax        # 0x1a374255d
   14000c1e6:	push   0xffffffffb9000072
   14000c1eb:	add    al,0x73
   14000c1ed:	jo     0x14000c261
   14000c1ef:	imul   ebp,DWORD PTR [rsi+0x74],0x735f66
   14000c1f6:	xchg   esp,eax
   14000c1f7:	add    ebx,DWORD PTR [rdi+0x77]
   14000c1fa:	movsxd esi,DWORD PTR [rbx+0x6e]
   14000c1fd:	imul   esp,DWORD PTR [rbx+0x6d],0x11b0070
   14000c204:	pop    rdi
   14000c205:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
   14000c20c:	enter  0x5f02,0x73
   14000c210:	gs je  0x14000c280
   14000c213:	outs   dx,DWORD PTR ds:[rsi]
   14000c214:	fs add BYTE PTR gs:[rax],al
   14000c218:	add    BYTE PTR [rip+0x63736377],al        # 0x1a3742595
   14000c21e:	(bad)  
   14000c21f:	je     0x14000c280
   14000c221:	jae    0x14000c223
   14000c223:	add    BYTE PTR [rcx+0x74657304],dh
   14000c229:	ins    BYTE PTR es:[rdi],dx
   14000c22a:	outs   dx,DWORD PTR ds:[rsi]
   14000c22b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000c22e:	add    BYTE PTR gs:[rip+0x73637705],al        # 0x1b364393a
   14000c235:	movsxd esi,DWORD PTR [rax+0x79]
   14000c238:	pop    rdi
   14000c239:	jae    0x14000c23b
   14000c23b:	add    BYTE PTR [rdx],dh
   14000c23d:	add    al,0x65
   14000c23f:	js     0x14000c2aa
   14000c241:	je     0x14000c243
   14000c243:	add    BYTE PTR [rdx+0x63775f03],cl
   14000c249:	jae    0x14000c2b4
   14000c24b:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000c24e:	add    BYTE PTR [rax],al
   14000c250:	or     eax,0x73637705
   14000c255:	outs   dx,BYTE PTR ds:[rsi]
   14000c256:	movsxd esi,DWORD PTR [rax+0x79]
   14000c259:	pop    rdi
   14000c25a:	jae    0x14000c25c
   14000c25c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c25d:	add    al,0x71
   14000c25f:	jae    0x14000c2d0
   14000c261:	jb     0x14000c2d7
   14000c263:	add    BYTE PTR [rdx],bh
   14000c265:	add    ebx,DWORD PTR [rdi+0x75]
   14000c268:	ins    BYTE PTR es:[rdi],dx
   14000c269:	je     0x14000c2da
   14000c26b:	ja     0x14000c26d
   14000c26d:	add    BYTE PTR [rdi],cl
   14000c26f:	add    eax,0x70736377
   14000c274:	(bad)  
   14000c276:	imul   eax,DWORD PTR [rax],0x72
   14000c279:	add    al,0x69
   14000c27b:	jae    0x14000c2f4
   14000c27d:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
   14000c281:	add    BYTE PTR gs:[rax],al
   14000c284:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c285:	add    ebx,DWORD PTR [rdi+0x77]
   14000c288:	movsxd esi,DWORD PTR [rbx+0x75]
   14000c28b:	jo     0x14000c2ff
   14000c28d:	add    BYTE PTR [rbx],cl
   14000c28f:	add    eax,0x6e736377
   14000c294:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000c297:	add    BYTE PTR [rax],dl
   14000c299:	add    eax,0x72736377
   14000c29e:	movsxd ebp,DWORD PTR [rax+0x72]
   14000c2a1:	add    BYTE PTR [rbp+0x0],dl
   14000c2a4:	pop    rdi
   14000c2a5:	pop    rax
   14000c2a6:	movsxd esi,DWORD PTR [rax+0x74]
   14000c2a9:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000c2b2:	pop    rdi
   14000c2b3:	(bad)  
   14000c2b4:	ins    DWORD PTR es:[rdi],dx
   14000c2b5:	jae    0x14000c31e
   14000c2b7:	pop    rdi
   14000c2b8:	gs js  0x14000c324
   14000c2bb:	je     0x14000c2bd
   14000c2bd:	add    BYTE PTR [rdi+0x0],bh
   14000c2c0:	pop    rdi
   14000c2c1:	pop    rdi
   14000c2c2:	addr32 gs je 0x14000c333
   14000c2c6:	(bad)  
   14000c2c7:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000c2ce:	mov    es,WORD PTR [rax]
   14000c2d0:	pop    rdi
   14000c2d1:	pop    rdi
   14000c2d2:	jae    0x14000c339
   14000c2d4:	je     0x14000c335
   14000c2d6:	(bad)  
   14000c2d7:	jo     0x14000c349
   14000c2d9:	pop    rdi
   14000c2da:	je     0x14000c355
   14000c2dc:	jo     0x14000c343
   14000c2de:	add    BYTE PTR [rax],al
   14000c2e0:	(bad)  
   14000c2e1:	add    DWORD PTR [rdi+0x65],ebx
   14000c2e4:	js     0x14000c34f
   14000c2e6:	je     0x14000c2e8
   14000c2e8:	rol    DWORD PTR [rax],0x5f
   14000c2eb:	movsxd esp,DWORD PTR [rbp+0x78]
   14000c2ee:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000c2f6:	jae    0x14000c35d
   14000c2f8:	je     0x14000c36f
   14000c2fa:	jae    0x14000c361
   14000c2fc:	jb     0x14000c36b
   14000c2fe:	(bad)  
   14000c2ff:	je     0x14000c369
   14000c301:	gs jb  0x14000c376
   14000c304:	add    BYTE PTR [rax],al
   14000c306:	jge    0x14000c309
   14000c308:	pop    rdi
   14000c309:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000c310:	ins    DWORD PTR es:[rdi],dx
   14000c311:	add    BYTE PTR [rdi+0x0],dl
   14000c314:	pop    rdi
   14000c315:	pop    rdi
   14000c316:	rex.XB pop r15
   14000c318:	jae    0x14000c38a
   14000c31a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000c31e:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000c325:	ins    BYTE PTR es:[rdi],dx
   14000c326:	gs jb  0x14000c329
   14000c329:	add    BYTE PTR [rdi],ah
   14000c32b:	add    DWORD PTR [rdi+0x66],ebx
   14000c32e:	ins    DWORD PTR es:[rdi],dx
   14000c32f:	outs   dx,DWORD PTR ds:[rsi]
   14000c330:	fs add BYTE PTR gs:[rax],al
   14000c334:	rol    BYTE PTR [rax],cl
   14000c336:	pop    rdi
   14000c337:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c33a:	ins    DWORD PTR es:[rdi],dx
   14000c33b:	outs   dx,DWORD PTR ds:[rsi]
   14000c33c:	fs add BYTE PTR gs:[rax],al
   14000c340:	ins    DWORD PTR es:[rdi],dx
   14000c341:	jae    0x14000c3b9
   14000c343:	movsxd esi,DWORD PTR [rdx+0x74]
   14000c346:	cs fs ins BYTE PTR es:[rdi],dx
   14000c349:	ins    BYTE PTR es:[rdi],dx
   14000c34a:	add    BYTE PTR [rax],al
   14000c34c:	(bad)  
   14000c34d:	add    BYTE PTR [rdi],bh
   14000c34f:	je     0x14000c3b6
   14000c351:	jb     0x14000c3c0
   14000c353:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000c35a:	pop    rcx
   14000c35b:	pop    r8
   14000c35d:	pop    rax
   14000c35e:	pop    rdx
   14000c35f:	add    BYTE PTR [rip+0x74654700],al        # 0x1b4660a65
   14000c365:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c367:	ins    DWORD PTR es:[rdi],dx
   14000c368:	ins    DWORD PTR es:[rdi],dx
   14000c369:	(bad)  
   14000c36a:	outs   dx,BYTE PTR ds:[rsi]
   14000c36b:	imul   r13,QWORD PTR fs:[rsi+0x65],0xa0057
   14000c374:	rex.RXB
   14000c375:	gs je  0x14000c3bb
   14000c378:	push   rax
   14000c379:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c37b:	outs   dx,WORD PTR ds:[rsi]
   14000c37d:	add    BYTE PTR [rbx],al
   14000c37f:	add    BYTE PTR [rbx+0x72],al
   14000c382:	gs (bad) 
   14000c384:	je     0x14000c3eb
   14000c386:	push   rax
   14000c387:	jb     0x14000c3f8
   14000c389:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c38c:	jae    0x14000c3e5
   14000c38e:	add    BYTE PTR [rax],al
   14000c390:	add    BYTE PTR ss:[rdi+0x61],dl
   14000c394:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14000c39c:	ins    BYTE PTR es:[edi],dx
   14000c39e:	gs rex.WRXB (bad) 
   14000c3a1:	push   0x65
   14000c3a3:	movsxd esi,DWORD PTR [rax+rax*1+0x3a]
   14000c3a7:	add    BYTE PTR [rbx+0x65],dl
   14000c3aa:	je     0x14000c400
   14000c3ac:	push   0x64616572
   14000c3b1:	push   rbp
   14000c3b2:	rex.WB
   14000c3b3:	rex.WR (bad) 
   14000c3b5:	outs   dx,BYTE PTR ds:[rsi]
   14000c3b6:	addr32 jne 0x14000c41a
   14000c3b9:	add    BYTE PTR gs:[edi],cl
   14000c3bd:	add    BYTE PTR [rdi+0x65],al
   14000c3c0:	je     0x14000c415
   14000c3c2:	jns    0x14000c437
   14000c3c4:	je     0x14000c42b
   14000c3c6:	ins    DWORD PTR es:[rdi],dx
   14000c3c7:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14000c3cf:	jns    0x14000c428
   14000c3d1:	add    BYTE PTR [rbx],dl
   14000c3d3:	add    BYTE PTR [rdi+0x65],al
   14000c3d6:	je     0x14000c41d
   14000c3d8:	js     0x14000c443
   14000c3da:	je     0x14000c41f
   14000c3dc:	outs   dx,DWORD PTR ds:[rsi]
   14000c3dd:	fs gs push rax
   14000c3e0:	jb     0x14000c451
   14000c3e2:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c3e5:	jae    0x14000c3e7
   14000c3e7:	add    BYTE PTR [rbx],al
   14000c3e9:	add    BYTE PTR [rdi+0x65],al
   14000c3ec:	je     0x14000c431
   14000c3ee:	outs   dx,DWORD PTR ds:[rsi]
   14000c3ef:	outs   dx,BYTE PTR ds:[rsi]
   14000c3f0:	jae    0x14000c461
   14000c3f2:	ins    BYTE PTR es:[rdi],dx
   14000c3f3:	gs rex.WRXB jne 0x14000c46b
   14000c3f7:	jo     0x14000c46e
   14000c3f9:	je     0x14000c43e
   14000c3fb:	push   rax
   14000c3fc:	add    BYTE PTR [rax],al
   14000c3fe:	or     al,0x0
   14000c400:	rex.RXB
   14000c401:	gs je  0x14000c457
   14000c404:	je     0x14000c46a
   14000c406:	rex.W (bad) 
   14000c408:	outs   dx,BYTE PTR ds:[rsi]
   14000c409:	fs ins BYTE PTR es:[rdi],dx
   14000c40b:	add    BYTE PTR gs:[rax],al
   14000c40e:	add    eax,0x74654700
   14000c413:	rex.WR (bad) 
   14000c415:	jae    0x14000c48b
   14000c417:	rex.RB jb 0x14000c48c
   14000c41a:	outs   dx,DWORD PTR ds:[rsi]
   14000c41b:	jb     0x14000c41d
   14000c41d:	add    BYTE PTR [rdx],cl
   14000c41f:	add    BYTE PTR [rax+0x65],cl
   14000c422:	(bad)  
   14000c423:	jo     0x14000c478
   14000c425:	gs je  0x14000c471
   14000c428:	outs   dx,BYTE PTR ds:[rsi]
   14000c429:	outs   dx,WORD PTR ds:[rsi]
   14000c42b:	jb     0x14000c49a
   14000c42d:	(bad)  
   14000c42e:	je     0x14000c499
   14000c430:	outs   dx,DWORD PTR ds:[rsi]
   14000c431:	outs   dx,BYTE PTR ds:[rsi]
   14000c432:	add    BYTE PTR [rax],al
   14000c434:	add    BYTE PTR [rax],al
   14000c436:	rex.XB ins BYTE PTR es:[rdi],dx
   14000c438:	outs   dx,DWORD PTR ds:[rsi]
   14000c439:	jae    0x14000c4a0
   14000c43b:	rex.W (bad) 
   14000c43d:	outs   dx,BYTE PTR ds:[rsi]
   14000c43e:	fs ins BYTE PTR es:[rdi],dx
   14000c440:	add    BYTE PTR gs:[rdi],dl
   14000c443:	add    BYTE PTR [rdi+0x4e],dl
   14000c446:	gs je  0x14000c48c
   14000c449:	ins    BYTE PTR es:[rdi],dx
   14000c44a:	outs   dx,DWORD PTR ds:[rsi]
   14000c44b:	jae    0x14000c4b2
   14000c44d:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000c44f:	jne    0x14000c4be
   14000c451:	add    BYTE PTR [rax],dh
   14000c453:	add    BYTE PTR [rdi+0x4e],dl
   14000c456:	gs je  0x14000c4a0
   14000c459:	gs je  0x14000c4a8
   14000c45c:	(bad)  
   14000c45d:	jae    0x14000c4d3
   14000c45f:	rex.RB jb 0x14000c4d4
   14000c462:	outs   dx,DWORD PTR ds:[rsi]
   14000c463:	jb     0x14000c4bc
   14000c465:	add    BYTE PTR [rsi],ah
   14000c467:	add    BYTE PTR [rdi+0x65],al
   14000c46a:	je     0x14000c4b0
   14000c46c:	jb     0x14000c4d7
   14000c46e:	jbe    0x14000c4d5
   14000c470:	push   rsp
   14000c471:	jns    0x14000c4e3
   14000c473:	gs push rdi
   14000c475:	add    BYTE PTR [rax+rax*1+0x57],al
   14000c479:	rex.WRX
   14000c47a:	gs je  0x14000c4cc
   14000c47d:	jo     0x14000c4e4
   14000c47f:	outs   dx,BYTE PTR ds:[rsi]
   14000c480:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000c482:	jne    0x14000c4f1
   14000c484:	push   rdi
   14000c485:	add    BYTE PTR [rbx],cl
   14000c487:	add    BYTE PTR [rsi+0x65],cl
   14000c48a:	je     0x14000c4e1
   14000c48c:	jae    0x14000c4f3
   14000c48e:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000c490:	jne    0x14000c4ff
   14000c492:	add    BYTE PTR [rax],al
   14000c494:	add    eax,DWORD PTR [rax]
   14000c496:	push   rdx
   14000c497:	gs addr32 rex.XB jb 0x14000c501
   14000c49c:	(bad)  
   14000c49d:	je     0x14000c504
   14000c49f:	rex.WXB
   14000c4a0:	gs jns 0x14000c4e8
   14000c4a3:	js     0x14000c4fc
   14000c4a5:	add    BYTE PTR [rbx],dl
   14000c4a7:	add    BYTE PTR [rdi+0x4e],dl
   14000c4aa:	gs je  0x14000c4f0
   14000c4ad:	(bad)  
   14000c4ae:	outs   dx,BYTE PTR ds:[rsi]
   14000c4af:	movsxd esp,DWORD PTR [rbp+0x6c]
   14000c4b2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c4b4:	outs   dx,BYTE PTR ds:[rsi]
   14000c4b5:	outs   dx,BYTE PTR ds:[rsi]
   14000c4b6:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000c4bb:	outs   dx,BYTE PTR ds:[rsi]
   14000c4bc:	xor    dl,BYTE PTR [rdi+0x0]
   14000c4bf:	add    BYTE PTR [rbx],ah
   14000c4c1:	add    BYTE PTR [rdx+0x65],dl
   14000c4c4:	addr32 push rcx
   14000c4c6:	jne    0x14000c52d
   14000c4c8:	jb     0x14000c543
   14000c4ca:	push   rsi
   14000c4cb:	(bad)  
   14000c4cc:	ins    BYTE PTR es:[rdi],dx
   14000c4cd:	jne    0x14000c534
   14000c4cf:	rex.RB js 0x14000c529
   14000c4d2:	add    BYTE PTR [rax],al
   14000c4d4:	or     eax,0x654e5700
   14000c4d9:	je     0x14000c51c
   14000c4db:	fs rex.XB outs dx,DWORD PTR fs:[rsi]
   14000c4df:	outs   dx,BYTE PTR ds:[rsi]
   14000c4e0:	outs   dx,BYTE PTR ds:[rsi]
   14000c4e1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000c4e6:	outs   dx,BYTE PTR ds:[rsi]
   14000c4e7:	xor    dl,BYTE PTR [rdi+0x0]
   14000c4ea:	sbb    eax,DWORD PTR [rax]
   14000c4ec:	rex.WRX
   14000c4ed:	gs je  0x14000c545
   14000c4f0:	jae    0x14000c557
   14000c4f2:	jb     0x14000c53b
   14000c4f4:	gs je  0x14000c540
   14000c4f7:	outs   dx,BYTE PTR ds:[rsi]
   14000c4f8:	outs   dx,WORD PTR ds:[rsi]
   14000c4fa:	add    BYTE PTR [rax],al
   14000c4fc:	add    DWORD PTR [rax],eax
   14000c4fe:	rex.WRX
   14000c4ff:	gs je  0x14000c543
   14000c502:	jo     0x14000c56d
   14000c504:	rex.X jne 0x14000c56d
   14000c507:	data16 gs jb 0x14000c551
   14000c50b:	jb     0x14000c572
   14000c50d:	add    BYTE PTR gs:[rax],al
   14000c510:	or     al,0x0
   14000c512:	rex.WRX
   14000c513:	gs je  0x14000c56b
   14000c516:	jae    0x14000c57d
   14000c518:	rex.RXB
   14000c519:	gs je  0x14000c565
   14000c51c:	outs   dx,BYTE PTR ds:[rsi]
   14000c51d:	outs   dx,WORD PTR ds:[rsi]
   14000c51f:	add    BYTE PTR [rsi],bl
   14000c521:	add    BYTE PTR [rdx+0x65],dl
   14000c524:	addr32 rex.WRXB jo 0x14000c58d
   14000c528:	outs   dx,BYTE PTR ds:[rsi]
   14000c529:	rex.WXB
   14000c52a:	gs jns 0x14000c572
   14000c52d:	js     0x14000c586
   14000c52f:	add    BYTE PTR [rbx],ah
   14000c531:	add    BYTE PTR [rdi+0x4e],dl
   14000c534:	gs je  0x14000c57c
   14000c537:	outs   dx,BYTE PTR ds:[rsi]
   14000c538:	jne    0x14000c5a7
   14000c53a:	push   rdx
   14000c53b:	gs jae 0x14000c5ad
   14000c53e:	jne    0x14000c5b2
   14000c540:	movsxd esp,DWORD PTR [rbp+0x57]
   14000c543:	add    BYTE PTR [rbx],ch
   14000c545:	add    BYTE PTR [rdi+0x4e],dl
   14000c548:	gs je  0x14000c592
   14000c54b:	gs je  0x14000c591
   14000c54e:	outs   dx,DWORD PTR ds:[rsi]
   14000c54f:	outs   dx,BYTE PTR ds:[rsi]
   14000c550:	outs   dx,BYTE PTR ds:[rsi]
   14000c551:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000c556:	outs   dx,BYTE PTR ds:[rsi]
   14000c557:	push   rdi
   14000c558:	add    BYTE PTR [rax],al
   14000c55a:	add    BYTE PTR [rax],al
   14000c55c:	push   rdx
   14000c55d:	gs rex.XB ins BYTE PTR es:[edi],dx
   14000c561:	outs   dx,DWORD PTR ds:[rsi]
   14000c562:	jae    0x14000c5c9
   14000c564:	rex.WXB
   14000c565:	gs jns 0x14000c568
   14000c568:	sub    al,0x0
   14000c56a:	push   rdx
   14000c56b:	gs addr32 push rbx
   14000c56e:	gs je  0x14000c5c7
   14000c571:	(bad)  
   14000c572:	ins    BYTE PTR es:[rdi],dx
   14000c573:	jne    0x14000c5da
   14000c575:	rex.RB js 0x14000c5cf
   14000c578:	add    BYTE PTR [rax],al
   14000c57a:	(bad)  
   14000c57b:	add    BYTE PTR [rsi+0x65],cl
   14000c57e:	je     0x14000c5d3
   14000c580:	push   0x45657261
   14000c585:	outs   dx,BYTE PTR ds:[rsi]
   14000c586:	jne    0x14000c5f5
   14000c588:	add    BYTE PTR [rax],al
   14000c58a:	rex.RXB add BYTE PTR [r15+0x65],r8b
   14000c58e:	je     0x14000c5d3
   14000c590:	jne    0x14000c604
   14000c592:	jb     0x14000c5f9
   14000c594:	outs   dx,BYTE PTR ds:[rsi]
   14000c595:	je     0x14000c5eb
   14000c597:	push   0x64616572
   14000c59c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c59e:	ins    DWORD PTR es:[rdi],dx
   14000c59f:	jo     0x14000c602
   14000c5a1:	jb     0x14000c617
   14000c5a3:	ins    DWORD PTR es:[rdi],dx
   14000c5a4:	outs   dx,BYTE PTR gs:[rsi]
   14000c5a6:	je     0x14000c5f1
   14000c5a8:	add    BYTE PTR fs:[rip+0x656c5300],ch        # 0x1a56d18af
   14000c5af:	gs jo  0x14000c5b2
   14000c5b2:	add    al,BYTE PTR [rax]
   14000c5b4:	push   rdx
   14000c5b5:	je     0x14000c623
   14000c5b7:	rex.XB (bad) 
   14000c5b9:	jo     0x14000c62f
   14000c5bb:	jne    0x14000c62f
   14000c5bd:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000c5c0:	outs   dx,BYTE PTR ds:[rsi]
   14000c5c1:	je     0x14000c628
   14000c5c3:	js     0x14000c639
   14000c5c5:	add    BYTE PTR [rcx],cl
   14000c5c7:	add    BYTE PTR [rdx+0x74],dl
   14000c5ca:	ins    BYTE PTR es:[rdi],dx
   14000c5cb:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000c5cd:	outs   dx,DWORD PTR ds:[rsi]
   14000c5ce:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000c5d2:	jne    0x14000c642
   14000c5d4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000c5d8:	outs   dx,BYTE PTR ds:[rsi]
   14000c5d9:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000c5db:	je     0x14000c64f
   14000c5dd:	jns    0x14000c5df
   14000c5df:	add    BYTE PTR [rdi],cl
   14000c5e1:	add    BYTE PTR [rdx+0x74],dl
   14000c5e4:	ins    BYTE PTR es:[rdi],dx
   14000c5e5:	push   rsi
   14000c5e6:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000c5ed:	outs   dx,BYTE PTR ds:[rsi]
   14000c5ee:	ja     0x14000c659
   14000c5f0:	outs   dx,BYTE PTR ds:[rsi]
   14000c5f1:	add    BYTE PTR fs:[rax],al
   14000c5f4:	adc    DWORD PTR [rax],eax
   14000c5f6:	push   rbp
   14000c5f7:	outs   dx,BYTE PTR ds:[rsi]
   14000c5f8:	push   0x6c646e61
   14000c5fd:	gs fs rex.RB js 0x14000c665
   14000c602:	gs jo  0x14000c679
   14000c605:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000c60c:	gs jb  0x14000c60f
   14000c60f:	add    BYTE PTR [rdi],cl
   14000c611:	add    BYTE PTR [rbx+0x65],dl
   14000c614:	je     0x14000c66b
   14000c616:	outs   dx,BYTE PTR ds:[rsi]
   14000c617:	push   0x6c646e61
   14000c61c:	gs fs rex.RB js 0x14000c684
   14000c621:	gs jo  0x14000c698
   14000c624:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000c62b:	gs jb  0x14000c62e
   14000c62e:	or     al,0x0
   14000c630:	rex.RXB
   14000c631:	gs je  0x14000c677
   14000c634:	jne    0x14000c6a8
   14000c636:	jb     0x14000c69d
   14000c638:	outs   dx,BYTE PTR ds:[rsi]
   14000c639:	je     0x14000c68b
   14000c63b:	jb     0x14000c6ac
   14000c63d:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c640:	jae    0x14000c642
   14000c642:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14000c647:	ins    DWORD PTR es:[rdi],dx
   14000c648:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000c64f:	outs   dx,DWORD PTR ds:[rsi]
   14000c650:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c653:	jae    0x14000c655
   14000c655:	add    BYTE PTR [rbx],dl
   14000c657:	add    BYTE PTR [rdi+0x65],al
   14000c65a:	je     0x14000c6a9
   14000c65c:	outs   dx,DWORD PTR ds:[rsi]
   14000c65d:	fs jne 0x14000c6cc
   14000c660:	gs rex.W (bad) 
   14000c663:	outs   dx,BYTE PTR ds:[rsi]
   14000c664:	fs ins BYTE PTR es:[rdi],dx
   14000c666:	gs push rdi
   14000c668:	add    BYTE PTR [rax],al
   14000c66a:	add    BYTE PTR [rax],al
   14000c66c:	push   rcx
   14000c66d:	jne    0x14000c6d4
   14000c66f:	jb     0x14000c6ea
   14000c671:	push   rax
   14000c672:	gs jb  0x14000c6db
   14000c675:	outs   dx,DWORD PTR ds:[rsi]
   14000c676:	jb     0x14000c6e5
   14000c678:	(bad)  
   14000c679:	outs   dx,BYTE PTR ds:[rsi]
   14000c67a:	movsxd esp,DWORD PTR [rbp+0x43]
   14000c67d:	outs   dx,DWORD PTR ds:[rsi]
   14000c67e:	jne    0x14000c6ee
   14000c680:	je     0x14000c6e7
   14000c682:	jb     0x14000c684
   14000c684:	or     eax,0x74654700
   14000c689:	rex.XB jne 0x14000c6fe
   14000c68c:	jb     0x14000c6f3
   14000c68e:	outs   dx,BYTE PTR ds:[rsi]
   14000c68f:	je     0x14000c6e1
   14000c691:	jb     0x14000c702
   14000c693:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c696:	jae    0x14000c6e1
   14000c698:	add    BYTE PTR fs:[rcx],dl
   14000c69b:	add    BYTE PTR [rdi+0x65],al
   14000c69e:	je     0x14000c6e3
   14000c6a0:	jne    0x14000c714
   14000c6a2:	jb     0x14000c709
   14000c6a4:	outs   dx,BYTE PTR ds:[rsi]
   14000c6a5:	je     0x14000c6fb
   14000c6a7:	push   0x64616572
   14000c6ac:	rex.WB
   14000c6ad:	add    BYTE PTR fs:[rax],al
   14000c6b0:	adc    al,0x0
   14000c6b2:	rex.RXB
   14000c6b3:	gs je  0x14000c709
   14000c6b6:	jns    0x14000c72b
   14000c6b8:	je     0x14000c71f
   14000c6ba:	ins    DWORD PTR es:[rdi],dx
   14000c6bb:	push   rsp
   14000c6bc:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000c6c3:	ins    BYTE PTR es:[rdi],dx
   14000c6c4:	gs push rsp
   14000c6c6:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14000c6cd:	gs je  0x14000c724
   14000c6d0:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000c6d7:	je     0x14000c6d9
   14000c6d9:	add    BYTE PTR [rcx],cl
   14000c6db:	add    BYTE PTR [rdx+0x65],dl
   14000c6de:	(bad)  
   14000c6df:	rex.XB outs dx,DWORD PTR fs:[rsi]
   14000c6e2:	outs   dx,BYTE PTR ds:[rsi]
   14000c6e3:	jae    0x14000c754
   14000c6e5:	ins    BYTE PTR es:[rdi],dx
   14000c6e6:	gs push rdi
   14000c6e8:	add    BYTE PTR [rax],al
   14000c6ea:	add    al,BYTE PTR [rax]
   14000c6ec:	rex.RXB
   14000c6ed:	gs je  0x14000c733
   14000c6f0:	outs   dx,DWORD PTR ds:[rsi]
   14000c6f1:	outs   dx,BYTE PTR ds:[rsi]
   14000c6f2:	jae    0x14000c763
   14000c6f4:	ins    BYTE PTR es:[rdi],dx
   14000c6f5:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14000c6f8:	fs add BYTE PTR gs:[rax],al
   14000c6fc:	or     eax,DWORD PTR [rax]
   14000c6fe:	push   rbx
   14000c6ff:	gs je  0x14000c745
   14000c702:	outs   dx,DWORD PTR ds:[rsi]
   14000c703:	outs   dx,BYTE PTR ds:[rsi]
   14000c704:	jae    0x14000c775
   14000c706:	ins    BYTE PTR es:[rdi],dx
   14000c707:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14000c70a:	fs add BYTE PTR gs:[rax],al
   14000c70e:	or     eax,0x65655000
   14000c713:	imul   eax,DWORD PTR [rbx+0x6f],0x6e
   14000c717:	jae    0x14000c788
   14000c719:	ins    BYTE PTR es:[rdi],dx
   14000c71a:	rex.WB outs dx,BYTE PTR gs:[rsi]
   14000c71d:	jo     0x14000c794
   14000c71f:	je     0x14000c778
   14000c721:	add    BYTE PTR [rax],al
   14000c723:	add    BYTE PTR [rsi+0x65],cl
   14000c726:	je     0x14000c769
   14000c728:	jo     0x14000c793
   14000c72a:	rex.X jne 0x14000c793
   14000c72d:	data16 gs jb 0x14000c772
   14000c731:	ins    BYTE PTR es:[rdi],dx
   14000c732:	ins    BYTE PTR es:[rdi],dx
   14000c733:	outs   dx,DWORD PTR ds:[rsi]
   14000c734:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c737:	add    BYTE PTR gs:[rax],al
   14000c73a:	add    al,BYTE PTR [rax]
   14000c73c:	rex.WRX
   14000c73d:	gs je  0x14000c781
   14000c740:	jo     0x14000c7ab
   14000c742:	rex.X jne 0x14000c7ab
   14000c745:	data16 gs jb 0x14000c79b
   14000c749:	gs (bad) 
   14000c74b:	ins    BYTE PTR es:[rdi],dx
   14000c74c:	ins    BYTE PTR es:[rdi],dx
   14000c74d:	outs   dx,DWORD PTR ds:[rsi]
   14000c74e:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c751:	add    BYTE PTR gs:[rax],al
   14000c754:	sldt   WORD PTR [rdi+0x65]
   14000c758:	je     0x14000c7a7
   14000c75a:	outs   dx,DWORD PTR ds:[rsi]
   14000c75b:	fs jne 0x14000c7ca
   14000c75e:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14000c768:	add    BYTE PTR [rax],al
   14000c76a:	or     eax,0x74655300
   14000c76f:	rex.WR (bad) 
   14000c771:	jae    0x14000c7e7
   14000c773:	rex.RB jb 0x14000c7e8
   14000c776:	outs   dx,DWORD PTR ds:[rsi]
   14000c777:	jb     0x14000c779
   14000c779:	add    BYTE PTR [rcx+0x0],bl
   14000c77c:	push   rdi
   14000c77d:	jb     0x14000c7e8
   14000c77f:	je     0x14000c7e6
   14000c781:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x69570007
   14000c78a:	fs gs rex.XB push 0x6f547261
   14000c792:	rex.WRB jne 0x14000c801
   14000c795:	je     0x14000c800
   14000c797:	rex.X jns 0x14000c80e
   14000c79a:	add    BYTE PTR gs:[rax],bl
   14000c79d:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000c7a1:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   14000c7aa:	add    BYTE PTR [rax],al
   14000c7ac:	or     BYTE PTR [rax],al
   14000c7ae:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000c7b0:	jb     0x14000c81f
   14000c7b2:	(bad)  
   14000c7b3:	je     0x14000c802
   14000c7b5:	gs jae 0x14000c82b
   14000c7b8:	(bad)  
   14000c7b9:	addr32 gs push rdi
   14000c7bc:	add    BYTE PTR [rax],al
   14000c7be:	or     eax,0x69725700
   14000c7c3:	je     0x14000c82a
   14000c7c5:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c7c7:	outs   dx,BYTE PTR ds:[rsi]
   14000c7c8:	jae    0x14000c839
   14000c7ca:	ins    BYTE PTR es:[rdi],dx
   14000c7cb:	gs push rdi
   14000c7cd:	add    BYTE PTR [rdi],ch
   14000c7cf:	add    BYTE PTR [rdi+0x65],al
   14000c7d2:	je     0x14000c81a
   14000c7d4:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   14000c7dc:	add    eax,DWORD PTR [rax]
   14000c7de:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000c7e0:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000c7e3:	rex.RX jb 0x14000c84b
   14000c7e6:	add    BYTE PTR gs:[rip+0x74654e00],dl        # 0x1b46615ed
   14000c7ed:	push   rdi
   14000c7ee:	imul   esi,DWORD PTR [rbx+0x74],0x61
   14000c7f2:	push   rbp
   14000c7f3:	jae    0x14000c85a
   14000c7f5:	jb     0x14000c83e
   14000c7f7:	gs je  0x14000c843
   14000c7fa:	outs   dx,BYTE PTR ds:[rsi]
   14000c7fb:	outs   dx,WORD PTR ds:[rsi]
   14000c7fd:	add    BYTE PTR [rsi],cl
   14000c7ff:	add    BYTE PTR [rsi+0x65],cl
   14000c802:	je     0x14000c85b
   14000c804:	imul   esi,DWORD PTR [rbx+0x74],0x61
   14000c808:	rex.RXB
   14000c809:	gs je  0x14000c855
   14000c80c:	outs   dx,BYTE PTR ds:[rsi]
   14000c80d:	outs   dx,WORD PTR ds:[rsi]
   14000c80f:	add    BYTE PTR [rbx],cl
   14000c811:	add    BYTE PTR [rsi+0x72],al
   14000c814:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   14000c81e:	or     DWORD PTR [rax],eax
   14000c820:	rex.RXB
   14000c821:	gs je  0x14000c867
   14000c824:	outs   dx,DWORD PTR ds:[rsi]
   14000c825:	outs   dx,BYTE PTR ds:[rsi]
   14000c826:	jae    0x14000c897
   14000c828:	ins    BYTE PTR es:[rdi],dx
   14000c829:	gs push rbx
   14000c82b:	movsxd esi,DWORD PTR [rdx+0x65]
   14000c82e:	outs   dx,BYTE PTR gs:[rsi]
   14000c830:	rex.X jne 0x14000c899
   14000c833:	data16 gs jb 0x14000c880
   14000c837:	outs   dx,BYTE PTR ds:[rsi]
   14000c838:	outs   dx,WORD PTR ds:[rsi]
   14000c83a:	add    BYTE PTR [rax],al
   14000c83c:	add    al,BYTE PTR [rax]
   14000c83e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000c840:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000c843:	rex.B ins BYTE PTR es:[rdi],dx
   14000c845:	ins    BYTE PTR es:[rdi],dx
   14000c846:	outs   dx,DWORD PTR ds:[rsi]
   14000c847:	movsxd eax,DWORD PTR [rax]
   14000c849:	add    BYTE PTR [rax],ah
   14000c84b:	add    BYTE PTR [rsi+0x65],cl
   14000c84e:	je     0x14000c8a3
   14000c850:	gs jb  0x14000c8c9
   14000c853:	gs jb  0x14000c89d
   14000c856:	gs je  0x14000c8a2
   14000c859:	outs   dx,BYTE PTR ds:[rsi]
   14000c85a:	outs   dx,WORD PTR ds:[rsi]
   14000c85c:	add    BYTE PTR [rax],al
   14000c85e:	(bad)  
   14000c85f:	jo     0x14000c8ca
   14000c861:	sub    eax,0x772d736d
   14000c866:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000c86d:	sub    eax,0x636f7270
   14000c872:	gs jae 0x14000c8e8
   14000c875:	outs   dx,BYTE PTR gs:[rsi]
   14000c877:	jbe    0x14000c8e2
   14000c879:	jb     0x14000c8ea
   14000c87b:	outs   dx,BYTE PTR ds:[rsi]
   14000c87c:	ins    DWORD PTR es:[rdi],dx
   14000c87d:	outs   dx,BYTE PTR gs:[rsi]
   14000c87f:	je     0x14000c8ae
   14000c881:	ins    BYTE PTR es:[rdi],dx
   14000c882:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30f5ba
   14000c888:	fs ins BYTE PTR es:[rdi],dx
   14000c88a:	ins    BYTE PTR es:[rdi],dx
   14000c88b:	add    BYTE PTR [rcx+0x70],ah
   14000c88e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e3c05
   14000c898:	outs   dx,DWORD PTR ds:[rsi]
   14000c899:	jb     0x14000c900
   14000c89b:	sub    eax,0x61636f6c
   14000c8a0:	ins    BYTE PTR es:[rdi],dx
   14000c8a1:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   14000c8a8:	sub    eax,0x322d316c
   14000c8ad:	sub    eax,0x6c642e31
   14000c8b2:	ins    BYTE PTR es:[rdi],dx
   14000c8b3:	add    BYTE PTR [rcx+0x70],ah
   14000c8b6:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e3c2d
   14000c8c0:	outs   dx,DWORD PTR ds:[rsi]
   14000c8c1:	jb     0x14000c928
   14000c8c3:	sub    eax,0x636f7270
   14000c8c8:	gs jae 0x14000c93e
   14000c8cb:	je     0x14000c935
   14000c8cd:	jb     0x14000c934
   14000c8cf:	(bad)  
   14000c8d0:	fs jae 0x14000c900
   14000c8d3:	ins    BYTE PTR es:[rdi],dx
   14000c8d4:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32f60b
   14000c8da:	fs ins BYTE PTR es:[rdi],dx
   14000c8dc:	ins    BYTE PTR es:[rdi],dx
   14000c8dd:	add    BYTE PTR [rcx+0x70],ah
   14000c8e0:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e3c57
   14000c8ea:	outs   dx,DWORD PTR ds:[rsi]
   14000c8eb:	jb     0x14000c952
   14000c8ed:	sub    eax,0x636e7973
   14000c8f2:	push   0x2d316c2d
   14000c8f7:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64f72d
   14000c8fd:	ins    BYTE PTR es:[rdi],dx
   14000c8fe:	add    BYTE PTR [rax],al
   14000c900:	(bad)  
   14000c901:	jo     0x14000c96c
   14000c903:	sub    eax,0x772d736d
   14000c908:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000c90f:	sub    eax,0x69737973
   14000c914:	outs   dx,BYTE PTR ds:[rsi]
   14000c915:	outs   dx,WORD PTR ds:[rsi]
   14000c917:	sub    eax,0x322d316c
   14000c91c:	sub    eax,0x6c642e31
   14000c921:	ins    BYTE PTR es:[rdi],dx
   14000c922:	add    BYTE PTR [rax],al
   14000c924:	(bad)  
   14000c925:	jo     0x14000c990
   14000c927:	sub    eax,0x772d736d
   14000c92c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000c933:	sub    eax,0x736e6f63
   14000c938:	outs   dx,DWORD PTR ds:[rsi]
   14000c939:	ins    BYTE PTR es:[rdi],dx
   14000c93a:	gs sub eax,0x312d316c
   14000c940:	sub    eax,0x6c642e30
   14000c945:	ins    BYTE PTR es:[rdi],dx
   14000c946:	add    BYTE PTR [rax],al
   14000c948:	(bad)  
   14000c949:	jo     0x14000c9b4
   14000c94b:	sub    eax,0x772d736d
   14000c950:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000c957:	sub    eax,0x6f727265
   14000c95c:	jb     0x14000c9c6
   14000c95e:	(bad)  
   14000c95f:	outs   dx,BYTE PTR ds:[rsi]
   14000c960:	fs ins BYTE PTR es:[rdi],dx
   14000c962:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000c969:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64f7a0
   14000c96f:	ins    BYTE PTR es:[rdi],dx
   14000c970:	add    BYTE PTR [rax],al
   14000c972:	(bad)  
   14000c973:	jo     0x14000c9de
   14000c975:	sub    eax,0x772d736d
   14000c97a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000c981:	sub    eax,0x70616568
   14000c986:	sub    eax,0x322d316c
   14000c98b:	sub    eax,0x6c642e30
   14000c990:	ins    BYTE PTR es:[rdi],dx
   14000c991:	add    BYTE PTR [rcx+0x70],ah
   14000c994:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e3d0b
   14000c99e:	outs   dx,DWORD PTR ds:[rsi]
   14000c99f:	jb     0x14000ca06
   14000c9a1:	sub    eax,0x646e6168
   14000c9a6:	ins    BYTE PTR es:[rdi],dx
   14000c9a7:	gs sub eax,0x312d316c
   14000c9ad:	sub    eax,0x6c642e30
   14000c9b2:	ins    BYTE PTR es:[rdi],dx
   14000c9b3:	add    BYTE PTR [rbp+0x50],cl
   14000c9b6:	push   rdx
   14000c9b7:	cs fs ins BYTE PTR es:[rdi],dx
   14000c9ba:	ins    BYTE PTR es:[rdi],dx
   14000c9bb:	add    BYTE PTR [rcx+0x70],ah
   14000c9be:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e3d35
   14000c9c8:	outs   dx,DWORD PTR ds:[rsi]
   14000c9c9:	jb     0x14000ca30
   14000c9cb:	sub    eax,0x656c6966
   14000c9d0:	sub    eax,0x322d316c
   14000c9d5:	sub    eax,0x6c642e31
   14000c9da:	ins    BYTE PTR es:[rdi],dx
   14000c9db:	add    BYTE PTR [rdi+0x6b],dh
   14000c9de:	jae    0x14000ca43
   14000c9e0:	ins    BYTE PTR es:[rdi],dx
   14000c9e1:	imul   ebp,DWORD PTR [rsi],0x6c6c64
   14000c9e7:	add    BYTE PTR [rcx+0x70],ah
   14000c9ea:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e3d61
   14000c9f4:	outs   dx,DWORD PTR ds:[rsi]
   14000c9f5:	jb     0x14000ca5c
   14000c9f7:	sub    eax,0x69676572
   14000c9fc:	jae    0x14000ca72
   14000c9fe:	jb     0x14000ca79
   14000ca00:	sub    eax,0x312d316c
   14000ca05:	sub    eax,0x6c642e30
   14000ca0a:	ins    BYTE PTR es:[rdi],dx
   14000ca0b:	add    BYTE PTR [rbx+0x61],dh
   14000ca0e:	ins    DWORD PTR es:[rdi],dx
   14000ca0f:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x2e]
   14000ca13:	fs ins BYTE PTR es:[rdi],dx
   14000ca15:	ins    BYTE PTR es:[rdi],dx
   14000ca16:	add    BYTE PTR [rax],al
   14000ca18:	outs   dx,BYTE PTR ds:[rsi]
   14000ca19:	gs je  0x14000ca91
   14000ca1c:	je     0x14000ca87
   14000ca1e:	ins    BYTE PTR es:[rdi],dx
   14000ca1f:	jae    0x14000ca4f
   14000ca21:	fs ins BYTE PTR es:[rdi],dx
   14000ca23:	ins    BYTE PTR es:[rdi],dx
   14000ca24:	add    BYTE PTR [rax],al
   14000ca26:	jae    0x14000ca9a
   14000ca28:	jbe    0x14000ca8d
   14000ca2a:	ins    BYTE PTR es:[rdi],dx
   14000ca2b:	imul   ebp,DWORD PTR [rsi],0x6c6c64
   14000ca31:	add    BYTE PTR [rcx+0x50],cl
   14000ca34:	rex.W
   14000ca35:	rex.WR push rax
   14000ca37:	push   r8
   14000ca39:	rex.WB
   14000ca3a:	cs rex.R
   14000ca3c:	rex.WR
   14000ca3d:	rex.WR add BYTE PTR [rax],r8b
   14000ca40:	(bad)  
   14000ca41:	jo     0x14000caac
   14000ca43:	sub    eax,0x772d736d
   14000ca48:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ca4f:	sub    eax,0x736c7472
   14000ca54:	jne    0x14000cac6
   14000ca56:	jo     0x14000cac7
   14000ca58:	jb     0x14000cace
   14000ca5a:	sub    eax,0x322d316c
   14000ca5f:	sub    eax,0x6c642e30
   14000ca64:	ins    BYTE PTR es:[rdi],dx
   14000ca65:	add    BYTE PTR [rcx+0x70],ah
   14000ca68:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e3ddf
   14000ca72:	outs   dx,DWORD PTR ds:[rsi]
   14000ca73:	jb     0x14000cada
   14000ca75:	sub    eax,0x7262696c
   14000ca7a:	(bad)  
   14000ca7b:	jb     0x14000caf6
   14000ca7d:	ins    BYTE PTR es:[rdi],dx
   14000ca7e:	outs   dx,DWORD PTR ds:[rsi]
   14000ca7f:	(bad)  
   14000ca80:	fs gs jb 0x14000cab1
   14000ca84:	ins    BYTE PTR es:[rdi],dx
   14000ca85:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30f7bd
   14000ca8b:	fs ins BYTE PTR es:[rdi],dx
   14000ca8d:	ins    BYTE PTR es:[rdi],dx
   14000ca8e:	add    BYTE PTR [rax],al
   14000ca90:	(bad)  
   14000ca91:	jo     0x14000cafc
   14000ca93:	sub    eax,0x772d736d
   14000ca98:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ca9f:	sub    eax,0x666f7270
   14000caa4:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000caac:	sub    eax,0x6c642e30
   14000cab1:	ins    BYTE PTR es:[rdi],dx
   14000cab2:	add    BYTE PTR [rax],al
   14000cab4:	(bad)  
   14000cab5:	jo     0x14000cb20
   14000cab7:	sub    eax,0x772d736d
   14000cabc:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000cac3:	sub    eax,0x736e6f63
   14000cac8:	outs   dx,DWORD PTR ds:[rsi]
   14000cac9:	ins    BYTE PTR es:[rdi],dx
   14000caca:	gs sub eax,0x312d326c
   14000cad0:	sub    eax,0x6c642e30
   14000cad5:	ins    BYTE PTR es:[rdi],dx
   14000cad6:	add    BYTE PTR [rax],al
   14000cad8:	(bad)  
   14000cad9:	jo     0x14000cb44
   14000cadb:	sub    eax,0x772d736d
   14000cae0:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000cae7:	sub    eax,0x69727473
   14000caec:	outs   dx,BYTE PTR ds:[rsi]
   14000caed:	addr32 sub eax,0x312d316c
   14000caf3:	sub    eax,0x6c642e30
   14000caf8:	ins    BYTE PTR es:[rdi],dx
   14000caf9:	add    BYTE PTR [rcx+0x70],ah
   14000cafc:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e3e73
   14000cb06:	outs   dx,DWORD PTR ds:[rsi]
   14000cb07:	jb     0x14000cb6e
   14000cb09:	sub    eax,0x7262696c
   14000cb0e:	(bad)  
   14000cb0f:	jb     0x14000cb8a
   14000cb11:	ins    BYTE PTR es:[rdi],dx
   14000cb12:	outs   dx,DWORD PTR ds:[rsi]
   14000cb13:	(bad)  
   14000cb14:	fs gs jb 0x14000cb45
   14000cb18:	ins    BYTE PTR es:[rdi],dx
   14000cb19:	xor    DWORD PTR [rip+0x2e312d32],ebp        # 0x16e31f851
   14000cb1f:	fs ins BYTE PTR es:[rdi],dx
   14000cb21:	ins    BYTE PTR es:[rdi],dx
   14000cb22:	add    BYTE PTR [rax],al
   14000cb24:	(bad)  
   14000cb25:	jo     0x14000cb90
   14000cb27:	sub    eax,0x772d736d
   14000cb2c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000cb33:	sub    eax,0x70616568
   14000cb38:	sub    eax,0x312d326c
   14000cb3d:	sub    eax,0x6c642e30
   14000cb42:	ins    BYTE PTR es:[rdi],dx
   14000cb43:	add    BYTE PTR [rdx],cl
   14000cb45:	add    BYTE PTR [rsi+0x65],cl
   14000cb48:	je     0x14000cb9d
   14000cb4a:	gs jb  0x14000cbc3
   14000cb4d:	gs jb  0x14000cb95
   14000cb50:	outs   dx,BYTE PTR ds:[rsi]
   14000cb51:	jne    0x14000cbc0
   14000cb53:	add    BYTE PTR [rdx+0x72],ah
   14000cb56:	outs   dx,DWORD PTR ds:[rsi]
   14000cb57:	ja     0x14000cbbc
   14000cb59:	ins    BYTE PTR es:[rdi],dx
   14000cb5a:	imul   ebp,DWORD PTR [rsi],0x6c6c64
   14000cb60:	adc    eax,0x74654e00
   14000cb65:	jo     0x14000cbde
   14000cb67:	push   rax
   14000cb68:	(bad)  
   14000cb69:	je     0x14000cbd3
   14000cb6b:	push   rsp
   14000cb6c:	jns    0x14000cbde
   14000cb6e:	add    BYTE PTR gs:[rip+0x74654e00],al        # 0x1b4661975
   14000cb75:	(bad)  
   14000cb76:	jo     0x14000cbe1
   14000cb78:	jo     0x14000cbbc
   14000cb7a:	jne    0x14000cbe2
   14000cb7c:	data16 gs jb 0x14000cbc1
   14000cb80:	ins    BYTE PTR es:[rdi],dx
   14000cb81:	ins    BYTE PTR es:[rdi],dx
   14000cb82:	outs   dx,DWORD PTR ds:[rsi]
   14000cb83:	movsxd esp,DWORD PTR [rcx+0x74]
   14000cb86:	add    BYTE PTR gs:[rdx],dl
   14000cb89:	add    BYTE PTR [rsi+0x65],cl
   14000cb8c:	je     0x14000cbfe
   14000cb8e:	ja     0x14000cbde
   14000cb90:	(bad)  
   14000cb91:	ins    DWORD PTR es:[rdi],dx
   14000cb92:	gs push rsi
   14000cb94:	(bad)  
   14000cb95:	ins    BYTE PTR es:[rdi],dx
   14000cb96:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x2aa0065
   14000cb9e:	push   rdx
   14000cb9f:	je     0x14000cc0d
   14000cba1:	rex.B ins BYTE PTR es:[rdi],dx
   14000cba3:	ins    BYTE PTR es:[rdi],dx
   14000cba4:	outs   dx,DWORD PTR ds:[rsi]
   14000cba5:	movsxd esp,DWORD PTR [rcx+0x74]
   14000cba8:	gs rex.W
   14000cbaa:	gs (bad) 
   14000cbac:	jo     0x14000cbae
   14000cbae:	outs   dx,BYTE PTR ds:[rsi]
   14000cbaf:	je     0x14000cc15
   14000cbb1:	ins    BYTE PTR es:[rdi],dx
   14000cbb2:	ins    BYTE PTR es:[rdi],dx
   14000cbb3:	cs fs ins BYTE PTR es:[rdi],dx
   14000cbb6:	ins    BYTE PTR es:[rdi],dx
   14000cbb7:	add    BYTE PTR [rcx+0x695f5f00],al
   14000cbbd:	outs   dx,DWORD PTR ds:[rsi]
   14000cbbe:	(bad)  
   14000cbbf:	pop    rdi
   14000cbc0:	data16 jne 0x14000cc31
   14000cbc3:	movsxd eax,DWORD PTR [rax]
   14000cbc5:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000cbc9:	jb     0x14000cc30
   14000cbcb:	add    BYTE PTR gs:[rax],al
   14000cbce:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000cbd5:	movsxd eax,DWORD PTR [rax]
   14000cbd7:	add    bh,dl
   14000cbd9:	add    bl,BYTE PTR [rdi+0x73]
   14000cbdc:	outs   dx,BYTE PTR ds:[rsi]
   14000cbdd:	ja     0x14000cc4f
   14000cbdf:	jb     0x14000cc4a
   14000cbe1:	outs   dx,BYTE PTR ds:[rsi]
   14000cbe2:	je     0x14000cc4a
   14000cbe4:	pop    rdi
   14000cbe5:	jae    0x14000cbe7
   14000cbe7:	add    BYTE PTR [rax+0x74757004],ah
   14000cbed:	movsxd ebp,DWORD PTR [rax+0x61]
   14000cbf0:	jb     0x14000cbf2
   14000cbf2:	imul   eax,DWORD PTR [rbx],0x5f
   14000cbf5:	jbe    0x14000cc6a
   14000cbf7:	outs   dx,BYTE PTR ds:[rsi]
   14000cbf8:	ja     0x14000cc6a
   14000cbfa:	jb     0x14000cc65
   14000cbfc:	outs   dx,BYTE PTR ds:[rsi]
   14000cbfd:	je     0x14000cc65
   14000cbff:	pop    rdi
   14000cc00:	jae    0x14000cc02
   14000cc02:	adc    eax,DWORD PTR [rip+0x73736377]        # 0x1b3742f7f
   14000cc08:	jo     0x14000cc78
   14000cc0a:	add    BYTE PTR [rax],al
   14000cc0c:	and    eax,0x6c616304
   14000cc11:	ins    BYTE PTR es:[rdi],dx
   14000cc12:	outs   dx,DWORD PTR ds:[rsi]
   14000cc13:	movsxd eax,DWORD PTR [rax]
   14000cc15:	add    BYTE PTR [rsi],al
   14000cc17:	add    eax,0x63736377
   14000cc1c:	jae    0x14000cc8e
   14000cc1e:	outs   dx,BYTE PTR ds:[rsi]
   14000cc1f:	add    BYTE PTR [rdx],cl
   14000cc21:	add    eax,0x6e736377
   14000cc26:	movsxd esp,DWORD PTR [rcx+0x74]
   14000cc29:	pop    rdi
   14000cc2a:	jae    0x14000cc2c
   14000cc2c:	(bad)  
   14000cc2d:	add    eax,0x74736377
   14000cc32:	outs   dx,DWORD PTR ds:[rsi]
   14000cc33:	imul   eax,DWORD PTR [rax],0x0
   14000cc36:	test   DWORD PTR [rbx],eax
   14000cc38:	pop    rdi
   14000cc39:	ja     0x14000cc9e
   14000cc3b:	jae    0x14000cca1
   14000cc3d:	jne    0x14000ccaf
   14000cc3f:	add    BYTE PTR [rsp+rax*1+0x6d6d656d],dl
   14000cc46:	outs   dx,DWORD PTR ds:[rsi]
   14000cc47:	jbe    0x14000ccae
   14000cc49:	add    BYTE PTR [rcx],al
   14000cc4b:	add    BYTE PTR [rdx+0x65],dl
   14000cc4e:	jae    0x14000ccbf
   14000cc50:	ins    BYTE PTR es:[rdi],dx
   14000cc51:	jbe    0x14000ccb8
   14000cc53:	rex.R
   14000cc54:	gs ins BYTE PTR es:[rdi],dx
   14000cc56:	(bad)  
   14000cc57:	jns    0x14000cca5
   14000cc59:	outs   dx,DWORD PTR ds:[rsi]
   14000cc5a:	(bad)  
   14000cc5b:	fs gs fs push r8
   14000cc60:	rex.WB add BYTE PTR [r8],al
   14000cc63:	add    BYTE PTR [rbp+riz*2+0x6c],al
   14000cc67:	(bad)  
   14000cc68:	jns    0x14000ccb6
   14000cc6a:	outs   dx,DWORD PTR ds:[rsi]
   14000cc6b:	(bad)  
   14000cc6c:	fs rex.RX (bad) 
   14000cc6f:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f6f4865
   14000cc77:	imul   eax,DWORD PTR [rax],0x0
   14000cc7a:	(bad)  
   14000cc7b:	jo     0x14000cce6
   14000cc7d:	sub    eax,0x772d736d
   14000cc82:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000cc89:	sub    eax,0x616c6564
   14000cc8e:	jns    0x14000ccfc
   14000cc90:	outs   dx,DWORD PTR ds:[rsi]
   14000cc91:	(bad)  
   14000cc92:	fs sub eax,0x312d316c
   14000cc98:	sub    eax,0x6c642e31
   14000cc9d:	ins    BYTE PTR es:[rdi],dx
   14000cc9e:	add    BYTE PTR [rax],al
   14000cca0:	add    BYTE PTR [rax],al
   14000cca2:	rex.B jo 0x14000cd0e
   14000cca5:	push   rbx
   14000cca6:	gs je  0x14000ccfa
   14000cca9:	jne    0x14000cd10
   14000ccab:	jb     0x14000cd26
   14000ccad:	rex.B jo 0x14000cd19
   14000ccb0:	push   rbx
   14000ccb1:	gs je  0x14000cd04
   14000ccb4:	jb     0x14000cd1b
   14000ccb6:	jae    0x14000cd1d
   14000ccb8:	outs   dx,BYTE PTR ds:[rsi]
   14000ccb9:	movsxd esp,DWORD PTR [rbp+0x0]
   14000ccbc:	(bad)  
   14000ccbd:	jo     0x14000cd28
   14000ccbf:	sub    eax,0x772d736d
   14000ccc4:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000cccb:	sub    eax,0x71697061
   14000ccd0:	jne    0x14000cd37
   14000ccd2:	jb     0x14000cd4d
   14000ccd4:	sub    eax,0x312d316c
   14000ccd9:	sub    eax,0x6c642e30
   14000ccde:	ins    BYTE PTR es:[rdi],dx
   14000ccdf:	add    cl,ah
   14000cce1:	add    DWORD PTR [rdi+0x6c],ebx
   14000cce4:	outs   dx,DWORD PTR ds:[rsi]
   14000cce5:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000cce8:	pop    rdi
   14000cce9:	jne    0x14000cd59
   14000cceb:	ja     0x14000cd56
   14000cced:	outs   dx,BYTE PTR ds:[rsi]
   14000ccee:	add    BYTE PTR fs:[rdx+0x6d656d04],dl
   14000ccf5:	movsxd esi,DWORD PTR [rax+0x79]
   14000ccf8:	add    BYTE PTR [rax],al
   14000ccfa:	xchg   esi,eax
   14000ccfb:	add    al,0x6d
   14000ccfd:	gs ins DWORD PTR es:[rdi],dx
   14000ccff:	jae    0x14000cd66
   14000cd01:	je     0x14000cd03
   14000cd03:	add    BYTE PTR [rdx],al
   14000cd05:	add    eax,0x63736377
   14000cd0a:	ins    DWORD PTR es:[rdi],dx
   14000cd0b:	jo     0x14000cd0d
	...

Disassembly of section .data:

000000014000d000 <.data>:
   14000d000:	add    DWORD PTR [rax],eax
   14000d002:	add    BYTE PTR [rax],al
   14000d004:	add    BYTE PTR [rax],al
   14000d006:	add    BYTE PTR [rax],al
   14000d008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000d00e:	add    BYTE PTR [rax],al
   14000d010:	int    0x5d
   14000d012:	and    dl,dl
   14000d014:	data16 (bad) 
   14000d016:	(bad)  
   14000d017:	inc    DWORD PTR [rax]
   14000d019:	add    BYTE PTR [rax],al
   14000d01b:	add    BYTE PTR [rax],al
   14000d01d:	add    BYTE PTR [rax],al
   14000d01f:	add    BYTE PTR [rax+0x2],bl
   14000d022:	add    BYTE PTR [rax],al
   14000d024:	add    BYTE PTR [rax],al
   14000d026:	add    BYTE PTR [rax],al
   14000d028:	push   0x14000ac
   14000d02d:	add    BYTE PTR [rax],al
   14000d02f:	add    BYTE PTR [rcx+0x2],bl
   14000d032:	add    BYTE PTR [rax],al
   14000d034:	add    BYTE PTR [rax],al
   14000d036:	add    BYTE PTR [rax],al
   14000d038:	jo     0x14000cfe6
   14000d03a:	add    BYTE PTR [rax+0x1],al
	...
   14000d04d:	add    BYTE PTR [rax],al
   14000d04f:	add    BYTE PTR [rax-0x2f],bh
   14000d052:	add    BYTE PTR [rax+0x1],al
	...
   14000d05d:	add    BYTE PTR [rax],al
   14000d05f:	add    BYTE PTR [rdx],al
   14000d061:	add    BYTE PTR [rax],al
   14000d063:	add    BYTE PTR [rax],al
   14000d065:	add    BYTE PTR [rax],al
   14000d067:	add    BYTE PTR [rax+0x14000d1],bl
	...
   14000d075:	add    BYTE PTR [rax],al
   14000d077:	add    BYTE PTR [rdx],al
   14000d079:	add    BYTE PTR [rax],al
   14000d07b:	add    BYTE PTR [rax],al
   14000d07d:	add    BYTE PTR [rax],al
   14000d07f:	add    BYTE PTR [rax],ch
   14000d081:	rol    BYTE PTR [rax],cl
   14000d083:	rex add DWORD PTR [rax],eax
	...
   14000d096:	add    BYTE PTR [rax],al
   14000d098:	enter  0xd1,0x40
   14000d09c:	add    DWORD PTR [rax],eax
	...
   14000d0ae:	add    BYTE PTR [rax],al
   14000d0b0:	mov    al,0xd1
   14000d0b2:	add    BYTE PTR [rax+0x1],al
	...
   14000d0c5:	add    BYTE PTR [rax],al
   14000d0c7:	add    BYTE PTR [rax+0x14000d1],cl
	...
   14000d0fd:	add    BYTE PTR [rax],al
   14000d0ff:	add    al,dh
   14000d101:	rol    DWORD PTR [rax],1
   14000d103:	rex add DWORD PTR [rax],eax
	...
   14000d10e:	add    BYTE PTR [rax],al
   14000d110:	add    DWORD PTR [rax],eax
   14000d112:	add    BYTE PTR [rax],al
   14000d114:	add    BYTE PTR [rax],al
   14000d116:	add    BYTE PTR [rax],al
   14000d118:	adc    dl,dl
   14000d11a:	add    BYTE PTR [rax+0x1],al
	...
   14000d125:	add    BYTE PTR [rax],al
   14000d127:	add    BYTE PTR [rcx],al
	...
   14000d131:	rol    BYTE PTR [rax],cl
   14000d133:	rex add DWORD PTR [rax],eax
	...
   14000d146:	add    BYTE PTR [rax],al
   14000d148:	loopne 0x14000d11b
   14000d14a:	add    BYTE PTR [rax+0x1],al
	...
   14000d175:	add    BYTE PTR [rax],al
   14000d177:	add    BYTE PTR [rdi],ch
   14000d179:	add    BYTE PTR [rbp+0x0],dl
   14000d17c:	push   rbx
   14000d17d:	add    BYTE PTR [rbp+0x0],al
   14000d180:	push   rdx
   14000d181:	add    BYTE PTR [rax],al
   14000d183:	add    BYTE PTR [rax],al
   14000d185:	add    BYTE PTR [rax],al
   14000d187:	add    BYTE PTR [rdi],ch
   14000d189:	add    BYTE PTR [rax+rax*1+0x45],al
   14000d18d:	add    BYTE PTR [rax+rax*1+0x45],cl
   14000d191:	add    BYTE PTR [rax+rax*1+0x45],dl
   14000d195:	add    BYTE PTR [rax],al
   14000d197:	add    BYTE PTR [rdi],ch
   14000d199:	add    BYTE PTR [rax+0x0],dl
   14000d19c:	add    BYTE PTR [r10+0x0],r10b
   14000d1a0:	push   rbx
   14000d1a1:	add    BYTE PTR [rcx+0x0],cl
   14000d1a4:	push   rbx
   14000d1a5:	add    BYTE PTR [rax+rax*1+0x45],dl
   14000d1a9:	add    BYTE PTR [rsi+0x0],cl
   14000d1ac:	push   rsp
   14000d1ad:	add    BYTE PTR [rax],al
   14000d1af:	add    BYTE PTR [rdi],ch
   14000d1b1:	add    BYTE PTR [rbx+0x0],dl
   14000d1b4:	add    BYTE PTR [r14+0x0],dl
   14000d1b8:	add    BYTE PTR [r11+0x0],r8b
   14000d1bc:	push   rdx
   14000d1bd:	add    BYTE PTR [rbp+0x0],al
   14000d1c0:	add    BYTE PTR [rax],r8b
   14000d1c3:	add    BYTE PTR [rax],al
   14000d1c5:	add    BYTE PTR [rax],al
   14000d1c7:	add    BYTE PTR [rdi],ch
   14000d1c9:	add    BYTE PTR [rbx+0x0],dl
   14000d1cc:	rex.WRB add BYTE PTR [r9+0x0],r8b
   14000d1d0:	push   rdx
   14000d1d1:	add    BYTE PTR [rax+rax*1+0x43],dl
   14000d1d5:	add    BYTE PTR [rcx+0x0],al
   14000d1d8:	push   rdx
   14000d1d9:	add    BYTE PTR [rax+rax*1+0x0],al
   14000d1dd:	add    BYTE PTR [rax],al
   14000d1df:	add    BYTE PTR [rdi],ch
   14000d1e1:	add    BYTE PTR [rcx+0x0],al
   14000d1e4:	rex.WR add BYTE PTR [rax+rax*1+0x0],r9b
   14000d1e9:	add    BYTE PTR [rax],al
   14000d1eb:	add    BYTE PTR [rax],al
   14000d1ed:	add    BYTE PTR [rax],al
   14000d1ef:	add    BYTE PTR [rdi],ch
   14000d1f1:	add    BYTE PTR [rax+rax*1+0x4f],al
   14000d1f5:	add    BYTE PTR [rbp+0x0],cl
   14000d1f8:	add    BYTE PTR [r9+0x0],cl
   14000d1fc:	rex.WRX add BYTE PTR [rax],r8b
   14000d1ff:	add    BYTE PTR [rdi],ch
   14000d201:	add    BYTE PTR [rbx+0x0],al
   14000d204:	add    BYTE PTR [r11+0x0],al
   14000d208:	rex.W add BYTE PTR [rbp+0x0],al
   14000d20c:	add    BYTE PTR [rax],al
   14000d20e:	add    BYTE PTR [rax],al
   14000d210:	(bad)  
   14000d211:	add    BYTE PTR [rsi+0x0],cl
   14000d214:	add    BYTE PTR [r8+rax*1+0x57],r10b
   14000d219:	add    BYTE PTR [rdi+0x0],cl
   14000d21c:	push   rdx
   14000d21d:	add    BYTE PTR [rbx+0x0],cl
	...
   14000d228:	(bad)  
   14000d229:	add    BYTE PTR [rax+0x0],cl
   14000d22c:	rex.WRXB add BYTE PTR [r13+0x0],r9b
   14000d230:	add    BYTE PTR [r8],r8b
	...
   14000d23f:	add    BYTE PTR [rax+0x14000ac],al
   14000d245:	add    BYTE PTR [rax],al
   14000d247:	add    BYTE PTR [rax+0x14000ac],al
   14000d24d:	add    BYTE PTR [rax],al
   14000d24f:	add    BYTE PTR [rax+0x14000ac],al
   14000d255:	add    BYTE PTR [rax],al
   14000d257:	add    BYTE PTR [rax+0x14000ac],al
   14000d25d:	add    BYTE PTR [rax],al
   14000d25f:	add    BYTE PTR [rax+0x14000ac],al
   14000d265:	add    BYTE PTR [rax],al
   14000d267:	add    BYTE PTR [rax+0x14000ac],al
   14000d26d:	add    BYTE PTR [rax],al
   14000d26f:	add    BYTE PTR [rax+0x14000ac],al
   14000d275:	add    BYTE PTR [rax],al
   14000d277:	add    BYTE PTR [rax+0x14000ac],al
   14000d27d:	add    BYTE PTR [rax],al
   14000d27f:	add    BYTE PTR [rax+0x14000ac],al
	...
   14000d28d:	add    BYTE PTR [rax],al
   14000d28f:	add    BYTE PTR [rbx+0x12],dh
	...
   14000d29e:	add    BYTE PTR [rax],al
   14000d2a0:	je     0x14000d2b4
	...
   14000d2ae:	add    BYTE PTR [rax],al
   14000d2b0:	jne    0x14000d2c4
	...
   14000d2be:	add    BYTE PTR [rax],al
   14000d2c0:	loope  0x14000d2d2
	...
   14000d2ce:	add    BYTE PTR [rax],al
   14000d2d0:	jb     0x14000d2e4
	...
   14000d2de:	add    BYTE PTR [rax],al
   14000d2e0:	loope  0x14000d2f2
	...
   14000d2ee:	add    BYTE PTR [rax],al
   14000d2f0:	jbe    0x14000d304
	...
   14000d2fe:	add    BYTE PTR [rax],al
   14000d300:	ja     0x14000d314
	...
   14000d30e:	add    BYTE PTR [rax],al
   14000d310:	imul   edx,DWORD PTR [rdx],0x0
	...
   14000d31f:	add    BYTE PTR [rbp+0x12],ch
	...
   14000d32e:	add    BYTE PTR [rax],al
   14000d330:	outs   dx,BYTE PTR ds:[rsi]
   14000d331:	adc    al,BYTE PTR [rax]
	...
   14000d33f:	add    BYTE PTR [rdi+0x12],ch
	...
   14000d34e:	add    BYTE PTR [rax],al
   14000d350:	jo     0x14000d364
	...
   14000d35e:	add    BYTE PTR [rax],al
   14000d360:	jno    0x14000d374
	...
   14000d36e:	add    BYTE PTR [rax],al
   14000d370:	js     0x14000d384
	...
   14000d37e:	add    BYTE PTR [rax],al
   14000d380:	pop    rsi
   14000d381:	adc    al,BYTE PTR [rax]
	...
   14000d38f:	add    BYTE PTR [rdi+0x12],bl
	...
   14000d39e:	add    BYTE PTR [rax],al
   14000d3a0:	data16 adc al,BYTE PTR [rax]
	...
   14000d3af:	add    BYTE PTR [rax+0x12],ch
	...
   14000d3be:	add    BYTE PTR [rax],al
   14000d3c0:	adc    al,BYTE PTR [eax]
	...
   14000d3cf:	add    BYTE PTR [rcx+0x12],ch
	...
   14000d3de:	add    BYTE PTR [rax],al
   14000d3e0:	loope  0x14000d3f2
	...
   14000d3ee:	add    BYTE PTR [rax],al
   14000d3f0:	movabs ds:0x12,al
   14000d3f9:	add    BYTE PTR [rax],al
   14000d3fb:	add    BYTE PTR [rax],al
   14000d3fd:	add    BYTE PTR [rax],al
   14000d3ff:	add    BYTE PTR [rbx+0x12],ah
	...
   14000d40d:	add    BYTE PTR [rax],al
   14000d40f:	add    BYTE PTR [rdx+rdx*1+0x0],ah
	...
   14000d41e:	add    BYTE PTR [rax],al
   14000d420:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d421:	adc    al,BYTE PTR [rax]
	...
   14000d42f:	add    BYTE PTR [rsi+0x12],ah
	...
   14000d43d:	add    BYTE PTR [rax],al
   14000d43f:	add    BYTE PTR [rdi],ch
   14000d441:	add    BYTE PTR [rsi+0x0],cl
   14000d444:	rex.WRXB add BYTE PTR [r8],r8b
   14000d447:	add    BYTE PTR [rdi],ch
   14000d449:	add    BYTE PTR [rcx+0x0],bl
   14000d44c:	add    BYTE PTR [r11+0x0],r10b
   14000d450:	add    BYTE PTR [rax],al
   14000d452:	add    BYTE PTR [rax],al
   14000d454:	(bad)  
   14000d455:	add    BYTE PTR [rdi],bh
	...
   14000d45f:	add    BYTE PTR [rdi],ch
   14000d461:	add    BYTE PTR [rax+0x0],cl
   14000d464:	add    BYTE PTR [r8+rax*1+0x50],r9b
   14000d469:	add    BYTE PTR [rax],al
   14000d46b:	add    BYTE PTR [rax],al
   14000d46d:	add    BYTE PTR [rax],al
   14000d46f:	add    ah,cl
   14000d471:	adc    BYTE PTR [rax],al
   14000d473:	add    BYTE PTR [rcx],al
   14000d475:	add    BYTE PTR [rax],al
   14000d477:	add    ch,cl
   14000d479:	adc    BYTE PTR [rax],al
   14000d47b:	add    BYTE PTR [rdx],al
   14000d47d:	add    BYTE PTR [rax],al
   14000d47f:	add    al,bh
   14000d481:	adc    BYTE PTR [rax],al
   14000d483:	add    BYTE PTR [rcx],al
   14000d485:	add    BYTE PTR [rax],al
   14000d487:	add    cl,bh
   14000d489:	adc    BYTE PTR [rax],al
   14000d48b:	add    BYTE PTR [rdx],al
	...
   14000d49d:	add    BYTE PTR [rax],al
   14000d49f:	add    BYTE PTR [rax],dh
   14000d4a1:	(bad)  
   14000d4a2:	add    BYTE PTR [rax+0x1],al
   14000d4a5:	add    BYTE PTR [rax],al
   14000d4a7:	add    BYTE PTR [rcx],al
   14000d4a9:	add    BYTE PTR [rax],al
   14000d4ab:	add    BYTE PTR [rax],al
   14000d4ad:	add    BYTE PTR [rax],al
   14000d4af:	add    BYTE PTR [rdx*8+0x14000],dh
   14000d4b6:	add    BYTE PTR [rax],al
   14000d4b8:	add    al,BYTE PTR [rax]
	...
   14000d52e:	add    BYTE PTR [rax],al
   14000d530:	pop    rcx
   14000d531:	gs jae 0x14000d534
   14000d534:	rex.WRX outs dx,DWORD PTR ds:[rsi]
	...
   14000d53e:	add    BYTE PTR [rax],al
   14000d540:	or     BYTE PTR [rax],al
   14000d542:	add    BYTE PTR [rax],al
   14000d544:	movabs al,ds:0xa800000010000000
   14000d54d:	add    BYTE PTR [rax],al
   14000d54f:	add    bh,bh
   14000d551:	(bad)  
   14000d552:	(bad)  
   14000d553:	(bad)  
   14000d554:	(bad)  
   14000d555:	(bad)  
   14000d556:	(bad)  
   14000d557:	inc    DWORD PTR [rax]
   14000d559:	add    BYTE PTR [rax],al
   14000d55b:	add    BYTE PTR [rax],al
   14000d55d:	add    BYTE PTR [rax],al
   14000d55f:	add    BYTE PTR [rax],ah
   14000d561:	add    BYTE PTR [rax],al
   14000d563:	add    BYTE PTR [rax],cl
   14000d565:	add    BYTE PTR [rax],al
   14000d567:	add    BYTE PTR [rax],cl
   14000d569:	add    BYTE PTR [rax],al
   14000d56b:	add    BYTE PTR [rax],dl
   14000d56d:	add    BYTE PTR [rax],al
   14000d56f:	add    BYTE PTR [rax],dl
   14000d571:	add    BYTE PTR [rax],al
   14000d573:	add    BYTE PTR [rax],ah
   14000d575:	add    BYTE PTR [rax],al
   14000d577:	add    bh,bh
   14000d579:	(bad)  
   14000d57a:	(bad)  
   14000d57b:	(bad)  
   14000d57c:	(bad)  
   14000d57d:	(bad)  
   14000d57e:	(bad)  
   14000d57f:	inc    DWORD PTR [rax]
   14000d581:	add    BYTE PTR [rax],al
   14000d583:	add    BYTE PTR [rax],bl
   14000d585:	add    BYTE PTR [rax],al
   14000d587:	add    BYTE PTR [rax],bl
   14000d589:	add    BYTE PTR [rax],al
   14000d58b:	add    BYTE PTR [rax-0x1000000],cl
   14000d591:	(bad)  
   14000d592:	(bad)  
   14000d593:	(bad)  
   14000d594:	(bad)  
   14000d595:	(bad)  
   14000d596:	(bad)  
   14000d597:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140019000 <.pdata>:
   140019000:	adc    BYTE PTR [rax],dl
   140019002:	add    BYTE PTR [rax],al
   140019004:	scas   eax,DWORD PTR es:[rdi]
   140019005:	adc    DWORD PTR [rax],eax
   140019007:	add    BYTE PTR [rax-0x50ffff4e],bl
   14001900d:	adc    DWORD PTR [rax],eax
   14001900f:	add    BYTE PTR [rbp+0x13],bh
   140019012:	add    BYTE PTR [rax],al
   140019014:	mov    eax,0x900000b2
   140019019:	adc    eax,DWORD PTR [rax]
   14001901b:	add    BYTE PTR [rsi-0x7ffffeb],cl
   140019021:	mov    dl,0x0
   140019023:	add    BYTE PTR [rax-0x47ffffeb],ah
   140019029:	sbb    BYTE PTR [rax],al
   14001902b:	add    BYTE PTR [rbx+rsi*4],ah
   14001902e:	add    BYTE PTR [rax],al
   140019030:	rcr    BYTE PTR [rax],0x0
   140019033:	add    BYTE PTR [rdi+0x19],al
   140019036:	add    BYTE PTR [rax],al
   140019038:	rex.R mov bl,0x0
   14001903b:	add    BYTE PTR [rax+0x19],dl
   14001903e:	add    BYTE PTR [rax],al
   140019040:	in     al,dx
   140019041:	sbb    DWORD PTR [rax],eax
   140019043:	add    BYTE PTR [rax-0x4d],dl
   140019046:	add    BYTE PTR [rax],al
   140019048:	in     al,dx
   140019049:	sbb    DWORD PTR [rax],eax
   14001904b:	add    BYTE PTR [rax+0x1b],bh
   14001904e:	add    BYTE PTR [rax],al
   140019050:	ins    BYTE PTR es:[rdi],dx
   140019051:	mov    bl,0x0
   140019053:	add    BYTE PTR [rax+0x1b],bh
   140019056:	add    BYTE PTR [rax],al
   140019058:	mov    cl,0x1f
   14001905a:	add    BYTE PTR [rax],al
   14001905c:	test   BYTE PTR [rbx+0x1fc00000],dh
   140019062:	add    BYTE PTR [rax],al
   140019064:	(bad)
   140019067:	add    BYTE PTR [rax],al
   140019069:	mov    ah,0x0
   14001906b:	add    al,dl
   14001906d:	and    BYTE PTR [rax],al
   14001906f:	add    BYTE PTR [rbx+0x21],dl
   140019072:	add    BYTE PTR [rax],al
   140019074:	sbb    al,0xb4
   140019076:	add    BYTE PTR [rax],al
   140019078:	push   rbx
   140019079:	and    DWORD PTR [rax],eax
   14001907b:	add    BYTE PTR [rax+0x24000021],cl
   140019081:	mov    ah,0x0
   140019083:	add    BYTE PTR [rax-0x72ffffdf],cl
   140019089:	and    DWORD PTR [rax],eax
   14001908b:	add    BYTE PTR [rax],bh
   14001908d:	mov    ah,0x0
   14001908f:	add    BYTE PTR [rax-0x22ffffdf],ah
   140019095:	and    DWORD PTR [rax],eax
   140019097:	add    BYTE PTR [rsp+rsi*4+0x0],ch
   14001909b:	add    ch,bl
   14001909d:	and    DWORD PTR [rax],eax
   14001909f:	add    BYTE PTR [rbx],al
   1400190a1:	and    al,BYTE PTR [rax]
   1400190a3:	add    BYTE PTR [rsp+rsi*4+0x0],bh
   1400190a7:	add    BYTE PTR [rbx],al
   1400190a9:	and    al,BYTE PTR [rax]
   1400190ab:	add    BYTE PTR [rbx+0x22],dh
   1400190ae:	add    BYTE PTR [rax],al
   1400190b0:	nop
   1400190b1:	mov    ah,0x0
   1400190b3:	add    BYTE PTR [rbx+0x22],dh
   1400190b6:	add    BYTE PTR [rax],al
   1400190b8:	xchg   BYTE PTR [rdx],ah
   1400190ba:	add    BYTE PTR [rax],al
   1400190bc:	lods   al,BYTE PTR ds:[rsi]
   1400190bd:	mov    ah,0x0
   1400190bf:	add    BYTE PTR [rax-0x1affffde],dl
   1400190c5:	and    al,BYTE PTR [rax]
   1400190c7:	add    BYTE PTR [rax],al
   1400190c9:	mov    ch,0x0
   1400190cb:	add    BYTE PTR [rax],al
   1400190cd:	and    eax,DWORD PTR [rax]
   1400190cf:	add    BYTE PTR [rbx+0x24],ah
   1400190d2:	add    BYTE PTR [rax],al
   1400190d4:	sub    al,0xb5
   1400190d6:	add    BYTE PTR [rax],al
   1400190d8:	and    BYTE PTR [rax+rax*1],0x0
   1400190dc:	rex.WRXB and rax,0xffffffffba400000
   1400190e2:	add    BYTE PTR [rax],al
   1400190e4:	(bad)  
   1400190e5:	and    eax,0x25a90000
   1400190ea:	add    BYTE PTR [rax],al
   1400190ec:	cmp    BYTE PTR [rdx+0x25b00000],bh
   1400190f2:	add    BYTE PTR [rax],al
   1400190f4:	(bad)  
   1400190f5:	(bad)  
   1400190f6:	add    BYTE PTR [rax],al
   1400190f8:	push   rax
   1400190f9:	mov    ch,0x0
   1400190fb:	add    BYTE PTR [rax-0x5dffffd9],dl
   140019101:	(bad)  
   140019102:	add    BYTE PTR [rax],al
   140019104:	rex mov edx,0x27c00000
   14001910a:	add    BYTE PTR [rax],al
   14001910c:	fisub  WORD PTR [rdi]
   14001910e:	add    BYTE PTR [rax],al
   140019110:	mov    BYTE PTR [rbp+0x27e40000],dh
   140019116:	add    BYTE PTR [rax],al
   140019118:	sbb    BYTE PTR [rax],ch
   14001911a:	add    BYTE PTR [rax],al
   14001911c:	or     BYTE PTR [rsi+0x28200000],dh
   140019122:	add    BYTE PTR [rax],al
   140019124:	xchg   ecx,eax
   140019125:	sub    DWORD PTR [rax],eax
   140019127:	add    BYTE PTR [rbp+rsi*4+0x29980000],dl
   14001912e:	add    BYTE PTR [rax],al
   140019130:	(bad)
   140019134:	mov    WORD PTR [rbp+0x2aa00000],?
   14001913a:	add    BYTE PTR [rax],al
   14001913c:	fldcw  WORD PTR [rdx]
   14001913e:	add    BYTE PTR [rax],al
   140019140:	rex mov edx,0x2ae00000
   140019146:	add    BYTE PTR [rax],al
   140019148:	clc    
   140019149:	sub    al,BYTE PTR [rax]
   14001914b:	add    BYTE PTR [rax-0x46],al
   14001914e:	add    BYTE PTR [rax],al
   140019150:	or     al,0x2b
   140019152:	add    BYTE PTR [rax],al
   140019154:	(bad)  
   140019155:	sub    eax,DWORD PTR [rax]
   140019157:	add    BYTE PTR [rbp+rsi*4+0x2b680000],bl
   14001915e:	add    BYTE PTR [rax],al
   140019160:	lods   eax,DWORD PTR ds:[rsi]
   140019161:	sub    eax,DWORD PTR [rax]
   140019163:	add    BYTE PTR [rax],cl
   140019165:	mov    dh,0x0
   140019167:	add    BYTE PTR [rax],ah
   140019169:	sub    al,0x0
   14001916b:	add    BYTE PTR [rbp+0x2c],ch
   14001916e:	add    BYTE PTR [rax],al
   140019170:	mov    esp,0xb40000b5
   140019175:	sub    al,0x0
   140019177:	add    BYTE PTR [rbp+rbp*1-0x4a200000],al
   14001917e:	add    BYTE PTR [rax],al
   140019180:	enter  0x2d,0x0
   140019184:	out    0x2d,al
   140019186:	add    BYTE PTR [rax],al
   140019188:	or     BYTE PTR [rsi+0x2e100000],dh
   14001918e:	add    BYTE PTR [rax],al
   140019190:	xchg   DWORD PTR [rsi],ebp
   140019192:	add    BYTE PTR [rax],al
   140019194:	hlt    
   140019195:	mov    ch,0x0
   140019197:	add    BYTE PTR [rax-0x21ffffd2],dl
   14001919d:	add    BYTE PTR cs:[rax],al
   1400191a0:	rex mov edx,0x2f0c0000
   1400191a6:	add    BYTE PTR [rax],al
   1400191a8:	sub    DWORD PTR [rdi],ebp
   1400191aa:	add    BYTE PTR [rax],al
   1400191ac:	rex mov edx,0x2f300000
   1400191b2:	add    BYTE PTR [rax],al
   1400191b4:	xchg   ebx,eax
   1400191b5:	(bad)  
   1400191b6:	add    BYTE PTR [rax],al
   1400191b8:	or     BYTE PTR [rsi+0x2fe00000],dh
   1400191be:	add    BYTE PTR [rax],al
   1400191c0:	loop   0x1400191f1
   1400191c2:	add    BYTE PTR [rax],al
   1400191c4:	lock mov ch,0x0
   1400191c7:	add    BYTE PTR [rax],al
   1400191c9:	xor    BYTE PTR [rax],al
   1400191cb:	add    BYTE PTR [rbp+0x30],cl
   1400191ce:	add    BYTE PTR [rax],al
   1400191d0:	movabs rdx,0x3074000030560000
   1400191da:	add    BYTE PTR [rax],al
   1400191dc:	xor    BYTE PTR [rbp+0x30800000],0x0
   1400191e3:	add    BYTE PTR [rax-0x7fffffd0],ah
   1400191e9:	mov    ch,0x0
   1400191eb:	add    BYTE PTR [rax+0x6c000030],ah
   1400191f1:	xor    DWORD PTR [rax],eax
   1400191f3:	add    al,dl
   1400191f5:	mov    dl,0x0
   1400191f7:	add    BYTE PTR [rcx+rsi*1+0x0],ch
   1400191fb:	add    bh,dh
   1400191fd:	xor    al,BYTE PTR [rax]
   1400191ff:	add    al,ah
   140019201:	mov    dl,0x0
   140019203:	add    al,bh
   140019205:	xor    al,BYTE PTR [rax]
   140019207:	add    BYTE PTR [rbx+rsi*1+0x0],dh
   14001920b:	add    BYTE PTR [rbx+rsi*4],dl
   14001920e:	add    BYTE PTR [rax],al
   140019210:	je     0x140019245
   140019212:	add    BYTE PTR [rax],al
   140019214:	rex (bad) 
   140019216:	add    BYTE PTR [rax],al
   140019218:	xor    al,0xb3
   14001921a:	add    BYTE PTR [rax],al
   14001921c:	rex (bad) 
   14001921e:	add    BYTE PTR [rax],al
   140019220:	jb     0x140019259
   140019222:	add    BYTE PTR [rax],al
   140019224:	cwde   
   140019225:	mov    bl,0x0
   140019227:	add    BYTE PTR [rdx+0x37],dh
   14001922a:	add    BYTE PTR [rax],al
   14001922c:	movabs ds:0xa20000b3a8000038,al
   140019235:	cmp    BYTE PTR [rax],al
   140019237:	add    BYTE PTR [rdx-0x43ffffc7],bh
   14001923d:	mov    bl,0x0
   14001923f:	add    BYTE PTR [rdx+0x4c000039],bh
   140019245:	add    BYTE PTR [rax],al
   140019248:	(bad)  
   140019249:	mov    bl,0x0
   14001924b:	add    BYTE PTR [rax+rax*2+0x0],cl
   14001924f:	add    BYTE PTR [rax+rax*2+0x0],ah
   140019253:	add    al,dh
   140019255:	mov    bl,0x0
   140019257:	add    BYTE PTR [rax+rax*2+0x0],ah
   14001925b:	add    BYTE PTR [rbx+0x40],dh
   14001925e:	add    BYTE PTR [rax],al
   140019260:	or     al,0xb4
   140019262:	add    BYTE PTR [rax],al
   140019264:	je     0x1400192a6
   140019266:	add    BYTE PTR [rax],al
   140019268:	(bad)  
   140019269:	add    BYTE PTR [rax],al
   14001926c:	rex.W mov spl,0x0
   14001926f:	add    BYTE PTR [rdx+0x15000040],bl
   140019275:	add    BYTE PTR [r8],al
   140019278:	pop    rax
   140019279:	mov    ah,0x0
   14001927b:	add    BYTE PTR [rsi],dl
   14001927d:	add    BYTE PTR [r8],al
   140019280:	sub    BYTE PTR [rcx+0x0],al
   140019283:	add    BYTE PTR [rsp+rsi*4+0x41280000],bh
   14001928a:	add    BYTE PTR [rax],al
   14001928c:	cmp    al,BYTE PTR [rcx+0x0]
   14001928f:	add    ah,cl
   140019291:	mov    ah,0x0
   140019293:	add    BYTE PTR [rdx],bh
   140019295:	add    BYTE PTR [r8],al
   140019298:	mov    ebx,0xe0000042
   14001929d:	mov    ah,0x0
   14001929f:	add    BYTE PTR [rdx+rax*2+0x45000000],bh
   1400192a6:	add    BYTE PTR [rax],al
   1400192a8:	sbb    al,0xb5
   1400192aa:	add    BYTE PTR [rax],al
   1400192ac:	add    BYTE PTR [rbp+0x0],al
   1400192af:	add    BYTE PTR [rax+0x45],cl
   1400192b2:	add    BYTE PTR [rax],al
   1400192b4:	mov    bpl,0x0
   1400192b7:	add    BYTE PTR [rax+0x45],dl
   1400192ba:	add    BYTE PTR [rax],al
   1400192bc:	loop   0x140019303
   1400192be:	add    BYTE PTR [rax],al
   1400192c0:	cld    
   1400192c1:	mov    ch,0x0
   1400192c3:	add    al,ch
   1400192c5:	add    BYTE PTR [r8],r8b
   1400192c8:	inc    BYTE PTR [rbp+0x0]
   1400192cb:	add    BYTE PTR [rax],cl
   1400192cd:	mov    dh,0x0
   1400192cf:	add    BYTE PTR [rsi+rax*2],al
   1400192d2:	add    BYTE PTR [rax],al
   1400192d4:	rex.R
   1400192d5:	rex.RXB add BYTE PTR [r8],r8b
   1400192d8:	mov    sil,0x0
   1400192db:	add    BYTE PTR [rdi+rax*2+0x49cd0000],dh
   1400192e2:	add    BYTE PTR [rax],al
   1400192e4:	push   0xffffffffd40000b6
   1400192e9:	rex.WB add BYTE PTR [r8],al
   1400192ec:	jmp    0xf401933b
   1400192f1:	mov    dh,0x0
   1400192f3:	add    al,dh
   1400192f5:	rex.WX add BYTE PTR [rax],al
   1400192f8:	loop   0x140019345
   1400192fa:	add    BYTE PTR [rax],al
   1400192fc:	sub    al,0xb6
   1400192fe:	add    BYTE PTR [rax],al
   140019300:	call   0xfc019350
   140019305:	rex.WRB add BYTE PTR [r8],r8b
   140019308:	xchg   esp,eax
   140019309:	mov    dh,0x0
   14001930b:	add    ah,al
   14001930d:	rex.WRB add BYTE PTR [r8],r8b
   140019310:	mov    dh,0x4f
   140019312:	add    BYTE PTR [rax],al
   140019314:	movabs al,ds:0x9500004fbc0000b6
   14001931d:	push   rax
   14001931e:	add    BYTE PTR [rax],al
   140019320:	sbb    BYTE PTR [rsi+0x509c0000],dh
   140019326:	add    BYTE PTR [rax],al
   140019328:	cmp    eax,0x10000051
   14001932d:	mov    dh,0x0
   14001932f:	add    BYTE PTR [rcx+rdx*2+0x0],al
   140019333:	add    BYTE PTR [rdi+0x51],ah
   140019336:	add    BYTE PTR [rax],al
   140019338:	rex mov edx,0x51700000
   14001933e:	add    BYTE PTR [rax],al
   140019340:	hlt    
   140019341:	push   rdx
   140019342:	add    BYTE PTR [rax],al
   140019344:	pop    rax
   140019345:	mov    dh,0x0
   140019347:	add    ah,bh
   140019349:	push   rdx
   14001934a:	add    BYTE PTR [rax],al
   14001934c:	rex.RXB push r11
   14001934e:	add    BYTE PTR [rax],al
   140019350:	or     BYTE PTR [rsi+0x53500000],dh
   140019356:	add    BYTE PTR [rax],al
   140019358:	(bad)  
   140019359:	pop    rbx
   14001935a:	add    BYTE PTR [rax],al
   14001935c:	lock mov dh,0x0
   14001935f:	add    BYTE PTR [rax],ch
   140019361:	pop    rbx
   140019362:	add    BYTE PTR [rax],al
   140019364:	mov    dh,0x5d
   140019366:	add    BYTE PTR [rax],al
   140019368:	enter  0xb6,0x0
   14001936c:	mov    esp,0x9300005d
   140019371:	pop    rdi
   140019372:	add    BYTE PTR [rax],al
   140019374:	or     al,0xb7
   140019376:	add    BYTE PTR [rax],al
   140019378:	pushf  
   140019379:	pop    rdi
   14001937a:	add    BYTE PTR [rax],al
   14001937c:	cmp    BYTE PTR [rbx+0x0],ah
   14001937f:	add    BYTE PTR [rsi+rsi*4+0x0],bh
   140019383:	add    BYTE PTR [rax+0x63],al
   140019386:	add    BYTE PTR [rax],al
   140019388:	or     DWORD PTR [rax+rax*1+0x0],esp
   14001938c:	call   0x150019447
   140019391:	add    BYTE PTR fs:[rax],al
   140019394:	xor    esp,DWORD PTR [rbp+0x0]
   140019397:	add    al,ch
   140019399:	mov    dh,0x0
   14001939b:	add    BYTE PTR [riz*2+0x661e0000],bh
   1400193a2:	add    BYTE PTR [rax],al
   1400193a4:	call   0x18401945f
   1400193a9:	data16 add BYTE PTR [rax],al
   1400193ac:	mov    dh,0x67
   1400193ae:	add    BYTE PTR [rax],al
   1400193b0:	and    al,0xb7
   1400193b2:	add    BYTE PTR [rax],al
   1400193b4:	mov    esp,0x57000067
   1400193b9:	jae    0x1400193bb
   1400193bb:	add    BYTE PTR [rdi+rsi*4],bh
   1400193be:	add    BYTE PTR [rax],al
   1400193c0:	(bad)  
   1400193c1:	jae    0x1400193c3
   1400193c3:	add    ch,cl
   1400193c5:	jae    0x1400193c7
   1400193c7:	add    al,ch
   1400193c9:	mov    dh,0x0
   1400193cb:	add    ah,dl
   1400193cd:	jae    0x1400193cf
   1400193cf:	add    ah,dh
   1400193d1:	jae    0x1400193d3
   1400193d3:	add    BYTE PTR [rax-0x46],al
   1400193d6:	add    BYTE PTR [rax],al
   1400193d8:	cld    
   1400193d9:	jae    0x1400193db
   1400193db:	add    BYTE PTR [rbx],cl
   1400193dd:	jne    0x1400193df
   1400193df:	add    BYTE PTR [rdi+rsi*4+0x75140000],al
   1400193e6:	add    BYTE PTR [rax],al
   1400193e8:	or     dh,BYTE PTR [rsi+0x0]
   1400193eb:	add    BYTE PTR [rdi+rsi*4+0x76100000],bh
   1400193f2:	add    BYTE PTR [rax],al
   1400193f4:	xor    dh,BYTE PTR [rdi+0x0]
   1400193f7:	add    BYTE PTR [rax-0x49],dh
   1400193fa:	add    BYTE PTR [rax],al
   1400193fc:	cmp    BYTE PTR [rdi+0x0],dh
   1400193ff:	add    BYTE PTR [rcx+0x78],dl
   140019402:	add    BYTE PTR [rax],al
   140019404:	push   rsp
   140019405:	mov    bh,0x0
   140019407:	add    BYTE PTR [rax+0x78],bl
   14001940a:	add    BYTE PTR [rax],al
   14001940c:	(bad)  
   14001940d:	js     0x14001940f
   14001940f:	add    al,ah
   140019411:	mov    bh,0x0
   140019413:	add    BYTE PTR [rax],cl
   140019415:	jns    0x140019417
   140019417:	add    dl,cl
   140019419:	jns    0x14001941b
   14001941b:	add    BYTE PTR [rdi+rsi*4+0x79d00000],bl
   140019422:	add    BYTE PTR [rax],al
   140019424:	jrcxz  0x1400194a0
   140019426:	add    BYTE PTR [rax],al
   140019428:	shl    BYTE PTR [rdi+0x7aec0000],1
   14001942e:	add    BYTE PTR [rax],al
   140019430:	ja     0x1400194ad
   140019432:	add    BYTE PTR [rax],al
   140019434:	hlt    
   140019435:	mov    ecx,0x7b800000
   14001943a:	add    BYTE PTR [rax],al
   14001943c:	fdivr  QWORD PTR [rbx+0x0]
   14001943f:	add    BYTE PTR [rdi+rsi*4+0x7be40000],dh
   140019446:	add    BYTE PTR [rax],al
   140019448:	and    edi,DWORD PTR [rax+rax*1+0x0]
   14001944c:	rex mov edx,0x7c2c0000
   140019452:	add    BYTE PTR [rax],al
   140019454:	mov    ?,WORD PTR [rax+rax*1+0x0]
   140019458:	cld    
   140019459:	mov    ch,0x0
   14001945b:	add    BYTE PTR [rsp+rdi*2+0x7cd90000],dl
   140019462:	add    BYTE PTR [rax],al
   140019464:	cld    
   140019465:	mov    ch,0x0
   140019467:	add    al,ah
   140019469:	jl     0x14001946b
   14001946b:	add    BYTE PTR [rsi],ah
   14001946d:	jge    0x14001946f
   14001946f:	add    BYTE PTR [rax],cl
   140019471:	mov    dh,0x0
   140019473:	add    BYTE PTR [rdi*2+0x7e300000],ch
   14001947a:	add    BYTE PTR [rax],al
   14001947c:	hlt    
   14001947d:	mov    bh,0x0
   14001947f:	add    BYTE PTR [rax],bh
   140019481:	jle    0x140019483
   140019483:	add    BYTE PTR [rbp-0x3ffff82],ch
   140019489:	mov    ch,0x0
   14001948b:	add    BYTE PTR [rsi+rdi*2+0x7ed70000],dh
   140019492:	add    BYTE PTR [rax],al
   140019494:	rex mov edx,0x7f3c0000
   14001949a:	add    BYTE PTR [rax],al
   14001949c:	xchg   esi,eax
   14001949d:	jg     0x14001949f
   14001949f:	add    ah,bh
   1400194a1:	mov    ch,0x0
   1400194a3:	add    BYTE PTR [rdi+rdi*2+0x7fe70000],bl
   1400194aa:	add    BYTE PTR [rax],al
   1400194ac:	cld    
   1400194ad:	mov    ch,0x0
   1400194af:	add    BYTE PTR [rax],dl
   1400194b1:	add    BYTE PTR [rax],0x0
   1400194b4:	test   eax,0x10000080
   1400194b9:	mov    eax,0x80b00000
   1400194be:	add    BYTE PTR [rax],al
   1400194c0:	retf   0x81
   1400194c3:	add    BYTE PTR [rax],ah
   1400194c5:	mov    edx,0x81d00000
   1400194ca:	add    BYTE PTR [rax],al
   1400194cc:	rex.RXB (bad) 
   1400194ce:	add    BYTE PTR [rax],al
   1400194d0:	sub    BYTE PTR [rax-0x7db00000],bh
   1400194d6:	add    BYTE PTR [rax],al
   1400194d8:	sub    al,BYTE PTR [rbx-0x47c80000]
   1400194de:	add    BYTE PTR [rax],al
   1400194e0:	xor    BYTE PTR [rbx-0x7bba0000],al
   1400194e6:	add    BYTE PTR [rax],al
   1400194e8:	movabs rax,0x890a0000844c0000
   1400194f2:	add    BYTE PTR [rax],al
   1400194f4:	pop    rsp
   1400194f5:	mov    eax,0x89100000
   1400194fa:	add    BYTE PTR [rax],al
   1400194fc:	(bad)  
   1400194fd:	mov    DWORD PTR [rax],eax
   1400194ff:	add    BYTE PTR [rax+rdi*4-0x76240000],al
   140019506:	add    BYTE PTR [rax],al
   140019508:	add    cl,BYTE PTR [rdx-0x45c00000]
   14001950e:	add    BYTE PTR [rax],al
   140019510:	or     BYTE PTR [rdx-0x74c70000],cl
   140019516:	add    BYTE PTR [rax],al
   140019518:	movabs al,ds:0x5500008b400000b8
   140019521:	mov    es,WORD PTR [rax]
   140019523:	add    al,al
   140019525:	mov    eax,0x8e5c0000
   14001952a:	add    BYTE PTR [rax],al
   14001952c:	movsxd ecx,DWORD PTR [rdi-0x46fc0000]
   140019532:	add    BYTE PTR [rax],al
   140019534:	movsxd ecx,DWORD PTR [rdi-0x70690000]
   14001953a:	add    BYTE PTR [rax],al
   14001953c:	movabs rcx,0x926000008fa00000
   140019546:	add    BYTE PTR [rax],al
   140019548:	in     al,0xb8
   14001954a:	add    BYTE PTR [rax],al
   14001954c:	push   0xffffffff8a000092
   140019551:	xchg   edx,eax
   140019552:	add    BYTE PTR [rax],al
   140019554:	rex mov edx,0x92900000
   14001955a:	add    BYTE PTR [rax],al
   14001955c:	(bad)  
   14001955d:	xchg   esp,eax
   14001955e:	add    BYTE PTR [rax],al
   140019560:	(bad)  
   140019561:	mov    ecx,0x94680000
   140019566:	add    BYTE PTR [rax],al
   140019568:	loop   0x1400194fe
   14001956a:	add    BYTE PTR [rax],al
   14001956c:	test   BYTE PTR [rcx-0x6b180000],bh
   140019572:	add    BYTE PTR [rax],al
   140019574:	(bad)  
   140019575:	xchg   ebp,eax
   140019576:	add    BYTE PTR [rax],al
   140019578:	cwde   
   140019579:	mov    ecx,0x95a00000
   14001957e:	add    BYTE PTR [rax],al
   140019580:	ja     0x140019518
   140019582:	add    BYTE PTR [rax],al
   140019584:	push   rax
   140019585:	mov    ecx,0x96800000
   14001958a:	add    BYTE PTR [rax],al
   14001958c:	cmp    DWORD PTR [rdi-0x46500000],edx
   140019592:	add    BYTE PTR [rax],al
   140019594:	rex xchg edi,eax
   140019596:	add    BYTE PTR [rax],al
   140019598:	adc    al,0x98
   14001959a:	add    BYTE PTR [rax],al
   14001959c:	enter  0xb9,0x0
   1400195a0:	sbb    al,0x98
   1400195a2:	add    BYTE PTR [rax],al
   1400195a4:	in     eax,dx
   1400195a5:	cwde   
   1400195a6:	add    BYTE PTR [rax],al
   1400195a8:	fdivr  QWORD PTR [rcx-0x670c0000]
   1400195ae:	add    BYTE PTR [rax],al
   1400195b0:	push   rax
   1400195b1:	cdq    
   1400195b2:	add    BYTE PTR [rax],al
   1400195b4:	hlt    
   1400195b5:	mov    ecx,0x99580000
   1400195ba:	add    BYTE PTR [rax],al
   1400195bc:	jnp    0x140019558
   1400195be:	add    BYTE PTR [rax],al
   1400195c0:	add    al,0xba
   1400195c2:	add    BYTE PTR [rax],al
   1400195c4:	test   BYTE PTR [rdx-0x64cb0000],bl
   1400195ca:	add    BYTE PTR [rax],al
   1400195cc:	and    BYTE PTR [rdx-0x64c00000],bh
   1400195d2:	add    BYTE PTR [rax],al
   1400195d4:	jno    0x140019571
   1400195d6:	add    BYTE PTR [rax],al
   1400195d8:	.byte 0x38
   1400195d9:	.byte 0xba
	...

Disassembly of section .didat:

000000014001a000 <.didat>:
   14001a000:	lock sub eax,0x14000
	...

Disassembly of section .rsrc:

000000014001b000 <.rsrc>:
	...
   14001b00c:	add    BYTE PTR [rax],al
   14001b00e:	add    al,BYTE PTR [rax]
   14001b010:	adc    BYTE PTR [rax],al
   14001b012:	add    BYTE PTR [rax],al
   14001b014:	and    BYTE PTR [rax],al
   14001b016:	add    BYTE PTR [rax+0x18],al
   14001b01c:	cmp    BYTE PTR [rax],al
   14001b01e:	add    BYTE PTR [rax+0x0],al
	...
   14001b02c:	add    BYTE PTR [rax],al
   14001b02e:	add    DWORD PTR [rax],eax
   14001b030:	add    DWORD PTR [rax],eax
   14001b032:	add    BYTE PTR [rax],al
   14001b034:	push   rax
   14001b035:	add    BYTE PTR [rax],al
   14001b037:	add    BYTE PTR [rax],0x0
	...
   14001b046:	add    DWORD PTR [rax],eax
   14001b048:	add    DWORD PTR [rax],eax
   14001b04a:	add    BYTE PTR [rax],al
   14001b04c:	push   0x800000
	...
   14001b05d:	add    BYTE PTR [rcx],al
   14001b05f:	add    BYTE PTR [rcx],cl
   14001b061:	add    al,0x0
   14001b063:	add    BYTE PTR [rax+0x0],al
	...
   14001b075:	add    BYTE PTR [rcx],al
   14001b077:	add    BYTE PTR [rcx],cl
   14001b079:	add    al,0x0
   14001b07b:	add    BYTE PTR [rax+0x38000000],dl
   14001b081:	mov    bl,0x1
   14001b083:	add    BYTE PTR [rbx+rax*1+0x0],ch
	...
   14001b08f:	add    BYTE PTR [rax-0x6dfffe50],ah
   14001b095:	add    al,BYTE PTR [rax]
	...
   14001b09f:	add    BYTE PTR [rdi+rdi*1],bh
   14001b0a2:	js     0x14001b111
   14001b0a4:	ins    BYTE PTR es:[rdi],dx
   14001b0a5:	and    BYTE PTR [rsi+0x65],dh
   14001b0a8:	jb     0x14001b11d
   14001b0aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001b0b1:	xor    BYTE PTR [rdx],ah
   14001b0b3:	and    BYTE PTR [rbp+0x6e],ah
   14001b0b6:	movsxd ebp,DWORD PTR [rdi+0x64]
   14001b0b9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14001b0c0:	rex.RX sub eax,0x73202238
   14001b0c6:	je     0x14001b129
   14001b0c8:	outs   dx,BYTE PTR ds:[rsi]
   14001b0c9:	fs (bad) 
   14001b0cb:	ins    BYTE PTR es:[rdi],dx
   14001b0cc:	outs   dx,DWORD PTR ds:[rsi]
   14001b0cd:	outs   dx,BYTE PTR ds:[rsi]
   14001b0ce:	gs cmp eax,0x73657922
   14001b0d4:	and    bh,BYTE PTR [rdi]
   14001b0d6:	ds or  eax,0x2d213c0a
   14001b0dc:	sub    eax,0x706f4320
   14001b0e1:	jns    0x14001b155
   14001b0e3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14001b0ea:	sub    DWORD PTR [rax],esp
   14001b0ec:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14001b0f4:	je     0x14001b116
   14001b0f6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b0f8:	jb     0x14001b16a
   14001b0fa:	outs   dx,DWORD PTR ds:[rsi]
   14001b0fb:	jb     0x14001b15e
   14001b0fd:	je     0x14001b168
   14001b0ff:	outs   dx,DWORD PTR ds:[rsi]
   14001b100:	outs   dx,BYTE PTR ds:[rsi]
   14001b101:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0eef34
   14001b107:	cmp    al,0x61
   14001b109:	jae    0x14001b17e
   14001b10b:	gs ins DWORD PTR es:[rdi],dx
   14001b10d:	(bad)  
   14001b10e:	ins    BYTE PTR es:[rdi],dx
   14001b10f:	jns    0x14001b131
   14001b111:	js     0x14001b180
   14001b113:	ins    BYTE PTR es:[rdi],dx
   14001b114:	outs   dx,BYTE PTR ds:[rsi]
   14001b115:	jae    0x14001b154
   14001b117:	and    dh,BYTE PTR [rbp+0x72]
   14001b11a:	outs   dx,BYTE PTR ds:[rsi]
   14001b11b:	cmp    dh,BYTE PTR [rbx+0x63]
   14001b11e:	push   0x73616d65
   14001b123:	sub    eax,0x7263696d
   14001b128:	outs   dx,DWORD PTR ds:[rsi]
   14001b129:	jae    0x14001b19a
   14001b12b:	data16 je 0x14001b15b
   14001b12e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001b131:	cmp    ah,BYTE PTR [rcx+0x73]
   14001b134:	ins    DWORD PTR es:[rdi],dx
   14001b135:	cs jbe 0x14001b169
   14001b138:	and    ah,BYTE PTR [rax]
   14001b13a:	ins    DWORD PTR es:[rdi],dx
   14001b13b:	(bad)  
   14001b13c:	outs   dx,BYTE PTR ds:[rsi]
   14001b13d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14001b144:	jb     0x14001b1b9
   14001b146:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001b14d:	xor    BYTE PTR [rdx],ah
   14001b14f:	ds or  eax,0x73613c0a
   14001b155:	jae    0x14001b1bc
   14001b157:	ins    DWORD PTR es:[rdi],dx
   14001b158:	(bad)  
   14001b159:	ins    BYTE PTR es:[rdi],dx
   14001b15a:	jns    0x14001b1a5
   14001b15c:	fs outs dx,BYTE PTR gs:[rsi]
   14001b15f:	je     0x14001b1ca
   14001b161:	je     0x14001b1dc
   14001b163:	or     eax,0x2020200a
   14001b168:	and    BYTE PTR [rsi+0x65],dh
   14001b16b:	jb     0x14001b1e0
   14001b16d:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14001b174:	xor    DWORD PTR [rsi],ebp
   14001b176:	xor    BYTE PTR [rsi],ch
   14001b178:	xor    BYTE PTR [rdx],ah
   14001b17a:	or     eax,0x2020200a
   14001b17f:	and    BYTE PTR [rax+0x72],dh
   14001b182:	outs   dx,DWORD PTR ds:[rsi]
   14001b183:	movsxd esp,DWORD PTR [rbp+0x73]
   14001b186:	jae    0x14001b1f7
   14001b188:	jb     0x14001b1cb
   14001b18a:	jb     0x14001b1ef
   14001b18c:	push   0x63657469
   14001b191:	je     0x14001b208
   14001b193:	jb     0x14001b1fa
   14001b195:	cmp    eax,0x646d6122
   14001b19a:	ss xor al,0x22
   14001b19d:	or     eax,0x2020200a
   14001b1a2:	and    BYTE PTR [rsi+0x61],ch
   14001b1a5:	ins    DWORD PTR es:[rdi],dx
   14001b1a6:	gs cmp eax,0x63694d22
   14001b1ac:	jb     0x14001b21d
   14001b1ae:	jae    0x14001b21f
   14001b1b0:	data16 je 0x14001b1e1
   14001b1b3:	push   rdi
   14001b1b4:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14001b1bb:	rex.R push rbx
   14001b1bd:	cs rex.WRX
   14001b1bf:	gs je  0x14001b1e4
   14001b1c2:	or     eax,0x2020200a
   14001b1c7:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001b1cb:	gs cmp eax,0x6e697722
   14001b1d1:	xor    esi,DWORD PTR [rdx]
   14001b1d3:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3fe0e3
   14001b1d9:	or     bh,BYTE PTR [rsp+riz*2]
   14001b1dc:	gs jae 0x14001b242
   14001b1df:	jb     0x14001b24a
   14001b1e1:	jo     0x14001b257
   14001b1e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x74654e3e
   14001b1ea:	and    BYTE PTR [rbx+0x6f],al
   14001b1ed:	ins    DWORD PTR es:[rdi],dx
   14001b1ee:	ins    DWORD PTR es:[rdi],dx
   14001b1ef:	(bad)  
   14001b1f0:	outs   dx,BYTE PTR ds:[rsi]
   14001b1f1:	fs cmp al,0x2f
   14001b1f4:	fs gs jae 0x14001b25b
   14001b1f8:	jb     0x14001b263
   14001b1fa:	jo     0x14001b270
   14001b1fc:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14001b203:	or     bh,BYTE PTR [rsp+rsi*2]
   14001b206:	jb     0x14001b27d
   14001b208:	jae    0x14001b27e
   14001b20a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001b20c:	outs   dx,WORD PTR ds:[rsi]
   14001b20e:	and    BYTE PTR [rax+0x6d],bh
   14001b211:	ins    BYTE PTR es:[rdi],dx
   14001b212:	outs   dx,BYTE PTR ds:[rsi]
   14001b213:	jae    0x14001b252
   14001b215:	and    dh,BYTE PTR [rbp+0x72]
   14001b218:	outs   dx,BYTE PTR ds:[rsi]
   14001b219:	cmp    dh,BYTE PTR [rbx+0x63]
   14001b21c:	push   0x73616d65
   14001b221:	sub    eax,0x7263696d
   14001b226:	outs   dx,DWORD PTR ds:[rsi]
   14001b227:	jae    0x14001b298
   14001b229:	data16 je 0x14001b259
   14001b22c:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001b22f:	cmp    ah,BYTE PTR [rcx+0x73]
   14001b232:	ins    DWORD PTR es:[rdi],dx
   14001b233:	cs jbe 0x14001b269
   14001b236:	and    bh,BYTE PTR [rsi]
   14001b238:	or     eax,0x2020200a
   14001b23d:	and    BYTE PTR [rbx+rsi*2],bh
   14001b240:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001b244:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001b24c:	and    BYTE PTR [rax],ah
   14001b24e:	and    BYTE PTR [rax],ah
   14001b250:	and    BYTE PTR [rax],ah
   14001b252:	cmp    al,0x72
   14001b254:	gs jno 0x14001b2cc
   14001b257:	gs jae 0x14001b2ce
   14001b25a:	gs fs push rax
   14001b25d:	jb     0x14001b2c8
   14001b25f:	jbe    0x14001b2ca
   14001b261:	ins    BYTE PTR es:[rdi],dx
   14001b262:	gs addr32 gs jae 0x14001b2a5
   14001b267:	or     eax,0x2020200a
   14001b26c:	and    BYTE PTR [rax],ah
   14001b26e:	and    BYTE PTR [rax],ah
   14001b270:	and    BYTE PTR [rax],ah
   14001b272:	and    BYTE PTR [rax],ah
   14001b274:	and    BYTE PTR [rdx+rsi*2],bh
   14001b277:	gs jno 0x14001b2ef
   14001b27a:	gs jae 0x14001b2f1
   14001b27d:	gs fs rex.RB js 0x14001b2e7
   14001b282:	movsxd esi,DWORD PTR [rbp+0x74]
   14001b285:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001b28c:	ins    BYTE PTR es:[rdi],dx
   14001b28d:	or     eax,0x2020200a
   14001b292:	and    BYTE PTR [rax],ah
   14001b294:	and    BYTE PTR [rax],ah
   14001b296:	and    BYTE PTR [rax],ah
   14001b298:	and    BYTE PTR [rax],ah
   14001b29a:	and    BYTE PTR [rax],ah
   14001b29c:	and    BYTE PTR [rax],ah
   14001b29e:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14001b2a2:	gs ins BYTE PTR es:[rdi],dx
   14001b2a4:	cmp    eax,0x49736122
   14001b2a9:	outs   dx,BYTE PTR ds:[rsi]
   14001b2aa:	jbe    0x14001b31b
   14001b2ac:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14001b2b0:	or     eax,0x2020200a
   14001b2b5:	and    BYTE PTR [rax],ah
   14001b2b7:	and    BYTE PTR [rax],ah
   14001b2b9:	and    BYTE PTR [rax],ah
   14001b2bb:	and    BYTE PTR [rax],ah
   14001b2bd:	and    BYTE PTR [rax],ah
   14001b2bf:	and    BYTE PTR [rax],ah
   14001b2c1:	and    BYTE PTR [rbp+0x69],dh
   14001b2c4:	movsxd esp,DWORD PTR [r11+0x65]
   14001b2c8:	jae    0x14001b33d
   14001b2ca:	cmp    eax,0x6c616622
   14001b2cf:	jae    0x14001b336
   14001b2d1:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021d2e1
   14001b2d7:	and    BYTE PTR [rax],ah
   14001b2d9:	and    BYTE PTR [rax],ah
   14001b2db:	and    BYTE PTR [rax],ah
   14001b2dd:	and    BYTE PTR [rax],ah
   14001b2df:	and    BYTE PTR [rdi],ch
   14001b2e1:	ds or  eax,0x2020200a
   14001b2e7:	and    BYTE PTR [rax],ah
   14001b2e9:	and    BYTE PTR [rax],ah
   14001b2eb:	and    BYTE PTR [rdi+rbp*1],bh
   14001b2ee:	jb     0x14001b355
   14001b2f0:	jno    0x14001b367
   14001b2f2:	gs jae 0x14001b369
   14001b2f5:	gs fs push rax
   14001b2f8:	jb     0x14001b363
   14001b2fa:	jbe    0x14001b365
   14001b2fc:	ins    BYTE PTR es:[rdi],dx
   14001b2fd:	gs addr32 gs jae 0x14001b340
   14001b302:	or     eax,0x2020200a
   14001b307:	and    BYTE PTR [rdi+rbp*1],bh
   14001b30a:	jae    0x14001b371
   14001b30c:	movsxd esi,DWORD PTR [rbp+0x72]
   14001b30f:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14001b317:	je     0x14001b38b
   14001b319:	jne    0x14001b38e
   14001b31b:	je     0x14001b366
   14001b31d:	outs   dx,BYTE PTR ds:[rsi]
   14001b31e:	outs   dx,WORD PTR ds:[rsi]
   14001b320:	ds or  eax,0x612f3c0a
   14001b326:	jae    0x14001b39b
   14001b328:	gs ins DWORD PTR es:[rdi],dx
   14001b32a:	(bad)  
   14001b32b:	ins    BYTE PTR es:[rdi],dx
   14001b32c:	jns    0x14001b36c
   14001b32e:	or     eax,0xa0d0a
   14001b333:	add    BYTE PTR [rax],al
   14001b335:	add    BYTE PTR [rax],al
   14001b337:	add    BYTE PTR [rbx+rax*1+0x34],ch
   14001b33b:	add    BYTE PTR [rax],al
   14001b33d:	add    BYTE PTR [rsi+0x0],dl
   14001b340:	push   rbx
   14001b341:	add    BYTE PTR [rdi+0x0],bl
   14001b344:	push   rsi
   14001b345:	add    BYTE PTR [rbp+0x0],al
   14001b348:	push   rdx
   14001b349:	add    BYTE PTR [rbx+0x0],dl
   14001b34c:	rex.WB add BYTE PTR [r15+0x0],cl
   14001b350:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14001b354:	rex.WB add BYTE PTR [r14+0x0],cl
   14001b358:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14001b35c:	add    BYTE PTR [rax],al
   14001b35e:	add    BYTE PTR [rax],al
   14001b360:	mov    ebp,0xfeef04
   14001b365:	add    BYTE PTR [rcx],al
   14001b367:	add    BYTE PTR [rax],al
   14001b369:	add    BYTE PTR [rdx],cl
   14001b36b:	add    BYTE PTR [rax],al
   14001b36d:	add    BYTE PTR [rax],bpl
   14001b370:	add    BYTE PTR [rax],al
   14001b372:	or     al,BYTE PTR [rax]
   14001b374:	add    BYTE PTR [rax+0x0],al
   14001b377:	sub    BYTE PTR [rdi],bh
   14001b379:	add    BYTE PTR [rax],al
   14001b37b:	add    BYTE PTR [rax],al
   14001b37d:	add    BYTE PTR [rax],al
   14001b37f:	add    BYTE PTR [rax+rax*1],al
   14001b382:	add    al,0x0
   14001b384:	add    DWORD PTR [rax],eax
	...
   14001b392:	add    BYTE PTR [rax],al
   14001b394:	retf   0x2
   14001b397:	add    BYTE PTR [rcx],al
   14001b399:	add    BYTE PTR [rbx+0x0],dl
   14001b39c:	je     0x14001b39e
   14001b39e:	jb     0x14001b3a0
   14001b3a0:	imul   eax,DWORD PTR [rax],0x67006e
   14001b3a6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001b3aa:	ins    BYTE PTR es:[rdi],dx
   14001b3ab:	add    BYTE PTR [rbp+0x0],ah
   14001b3ae:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001b3b2:	data16 add BYTE PTR [rdi+0x0],ch
   14001b3b6:	add    BYTE PTR [rax],al
   14001b3b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b3b9:	add    al,BYTE PTR [rax]
   14001b3bb:	add    BYTE PTR [rcx],al
   14001b3bd:	add    BYTE PTR [rax],dh
   14001b3bf:	add    BYTE PTR [rax+rax*1],dh
   14001b3c2:	xor    BYTE PTR [rax],al
   14001b3c4:	cmp    DWORD PTR [rax],eax
   14001b3c6:	xor    BYTE PTR [rax],al
   14001b3c8:	xor    al,0x0
   14001b3ca:	rex.X add BYTE PTR [rax],sil
   14001b3cd:	add    BYTE PTR [rax],al
   14001b3cf:	add    BYTE PTR [rax+rax*1+0x16],cl
   14001b3d3:	add    BYTE PTR [rcx],al
   14001b3d5:	add    BYTE PTR [rbx+0x0],al
   14001b3d8:	outs   dx,DWORD PTR ds:[rsi]
   14001b3d9:	add    BYTE PTR [rbp+0x0],ch
   14001b3dc:	jo     0x14001b3de
   14001b3de:	(bad)  
   14001b3df:	add    BYTE PTR [rsi+0x0],ch
   14001b3e2:	jns    0x14001b3e4
   14001b3e4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14001b3e8:	ins    DWORD PTR es:[rdi],dx
   14001b3e9:	add    BYTE PTR [rbp+0x0],ah
   14001b3ec:	add    BYTE PTR [rax],al
   14001b3ee:	add    BYTE PTR [rax],al
   14001b3f0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001b3f4:	movsxd eax,DWORD PTR [rax]
   14001b3f6:	jb     0x14001b3f8
   14001b3f8:	outs   dx,DWORD PTR ds:[rsi]
   14001b3f9:	add    BYTE PTR [rbx+0x0],dh
   14001b3fc:	outs   dx,DWORD PTR ds:[rsi]
   14001b3fd:	add    BYTE PTR [rsi+0x0],ah
   14001b400:	je     0x14001b402
   14001b402:	and    BYTE PTR [rax],al
   14001b404:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001b408:	jb     0x14001b40a
   14001b40a:	jo     0x14001b40c
   14001b40c:	outs   dx,DWORD PTR ds:[rsi]
   14001b40d:	add    BYTE PTR [rdx+0x0],dh
   14001b410:	(bad)  
   14001b411:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001b415:	add    BYTE PTR [rdi+0x0],ch
   14001b418:	outs   dx,BYTE PTR ds:[rsi]
   14001b419:	add    BYTE PTR [rax],al
   14001b41b:	add    BYTE PTR [rax+0x0],al
   14001b41e:	or     al,0x0
   14001b420:	add    DWORD PTR [rax],eax
   14001b422:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001b426:	ins    BYTE PTR es:[rdi],dx
   14001b427:	add    BYTE PTR [rbp+0x0],ah
   14001b42a:	add    BYTE PTR [rbp+0x0],r12b
   14001b42e:	jae    0x14001b430
   14001b430:	movsxd eax,DWORD PTR [rax]
   14001b432:	jb     0x14001b434
   14001b434:	imul   eax,DWORD PTR [rax],0x740070
   14001b43a:	imul   eax,DWORD PTR [rax],0x6e006f
   14001b440:	add    BYTE PTR [rax],al
   14001b442:	add    BYTE PTR [rax],al
   14001b444:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   14001b448:	je     0x14001b44a
   14001b44a:	and    BYTE PTR [rax],al
   14001b44c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001b450:	ins    DWORD PTR es:[rdi],dx
   14001b451:	add    BYTE PTR [rbp+0x0],ch
   14001b454:	(bad)  
   14001b455:	add    BYTE PTR [rsi+0x0],ch
   14001b458:	add    BYTE PTR fs:[rax],al
   14001b45b:	add    BYTE PTR [rsi+0x0],ah
   14001b45e:	and    eax,DWORD PTR [rax]
   14001b460:	add    DWORD PTR [rax],eax
   14001b462:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001b466:	ins    BYTE PTR es:[rdi],dx
   14001b467:	add    BYTE PTR [rbp+0x0],ah
   14001b46a:	push   rsi
   14001b46b:	add    BYTE PTR [rbp+0x0],ah
   14001b46e:	jb     0x14001b470
   14001b470:	jae    0x14001b472
   14001b472:	imul   eax,DWORD PTR [rax],0x6e006f
   14001b478:	add    BYTE PTR [rax],al
   14001b47a:	add    BYTE PTR [rax],al
   14001b47c:	xor    DWORD PTR [rax],eax
   14001b47e:	xor    BYTE PTR [rax],al
   14001b480:	add    BYTE PTR cs:[rax],dh
   14001b483:	add    BYTE PTR [rsi],ch
   14001b485:	add    BYTE PTR [rcx],dh
   14001b487:	add    BYTE PTR [rax],dh
   14001b489:	add    BYTE PTR [rdx],dh
   14001b48b:	add    BYTE PTR [rax+rax*1],dh
   14001b48e:	xor    BYTE PTR [rax],al
   14001b490:	add    BYTE PTR cs:[rcx],dh
   14001b493:	add    BYTE PTR [rsi],dh
   14001b495:	add    BYTE PTR [rbx],dh
   14001b497:	add    BYTE PTR [rax],bh
   14001b499:	add    BYTE PTR [rax+rax*1],dh
   14001b49c:	and    BYTE PTR [rax],al
   14001b49e:	sub    BYTE PTR [rax],al
   14001b4a0:	je     0x14001b4a2
   14001b4a2:	push   0x2e003100
   14001b4a7:	add    BYTE PTR [rcx],dh
   14001b4a9:	add    BYTE PTR [rip+0x37003000],dh        # 0x17701e4af
   14001b4af:	add    BYTE PTR [rax],dh
   14001b4b1:	add    BYTE PTR [rcx],bh
   14001b4b3:	add    BYTE PTR [rip+0x37003100],ch        # 0x17701e5b9
   14001b4b9:	add    BYTE PTR [rax],dh
   14001b4bb:	add    BYTE PTR [rax],dh
   14001b4bd:	add    BYTE PTR [rcx],ch
   14001b4bf:	add    BYTE PTR [rax],al
   14001b4c1:	add    BYTE PTR [rax],al
   14001b4c3:	add    BYTE PTR [rax],dh
   14001b4c5:	add    BYTE PTR [rax],cl
   14001b4c7:	add    BYTE PTR [rcx],al
   14001b4c9:	add    BYTE PTR [rcx+0x0],cl
   14001b4cc:	outs   dx,BYTE PTR ds:[rsi]
   14001b4cd:	add    BYTE PTR [rax+rax*1+0x65],dh
   14001b4d1:	add    BYTE PTR [rdx+0x0],dh
   14001b4d4:	outs   dx,BYTE PTR ds:[rsi]
   14001b4d5:	add    BYTE PTR [rcx+0x0],ah
   14001b4d8:	ins    BYTE PTR es:[rdi],dx
   14001b4d9:	add    BYTE PTR [rsi+0x0],cl
   14001b4dc:	(bad)  
   14001b4dd:	add    BYTE PTR [rbp+0x0],ch
   14001b4e0:	add    BYTE PTR gs:[rax],al
   14001b4e3:	add    BYTE PTR [rsi+0x0],ch
   14001b4e6:	add    BYTE PTR gs:[rax+rax*1+0x2e],dh
   14001b4eb:	add    BYTE PTR [rbp+0x0],ah
   14001b4ee:	js     0x14001b4f0
   14001b4f0:	add    BYTE PTR gs:[rax],al
   14001b4f3:	add    BYTE PTR [rax+0x1002e00],al
   14001b4f9:	add    BYTE PTR [rax+rax*1+0x65],cl
   14001b4fd:	add    BYTE PTR [rdi+0x0],ah
   14001b500:	(bad)  
   14001b501:	add    BYTE PTR [rax+rax*1+0x43],ch
   14001b505:	add    BYTE PTR [rdi+0x0],ch
   14001b508:	jo     0x14001b50a
   14001b50a:	jns    0x14001b50c
   14001b50c:	jb     0x14001b50e
   14001b50e:	imul   eax,DWORD PTR [rax],0x680067
   14001b514:	je     0x14001b516
   14001b516:	add    BYTE PTR [rax],al
   14001b518:	test   eax,0x4d002000
   14001b51d:	add    BYTE PTR [rcx+0x0],ch
   14001b520:	movsxd eax,DWORD PTR [rax]
   14001b522:	jb     0x14001b524
   14001b524:	outs   dx,DWORD PTR ds:[rsi]
   14001b525:	add    BYTE PTR [rbx+0x0],dh
   14001b528:	outs   dx,DWORD PTR ds:[rsi]
   14001b529:	add    BYTE PTR [rsi+0x0],ah
   14001b52c:	je     0x14001b52e
   14001b52e:	and    BYTE PTR [rax],al
   14001b530:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001b534:	jb     0x14001b536
   14001b536:	jo     0x14001b538
   14001b538:	outs   dx,DWORD PTR ds:[rsi]
   14001b539:	add    BYTE PTR [rdx+0x0],dh
   14001b53c:	(bad)  
   14001b53d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001b541:	add    BYTE PTR [rdi+0x0],ch
   14001b544:	outs   dx,BYTE PTR ds:[rsi]
   14001b545:	add    BYTE PTR [rsi],ch
   14001b547:	add    BYTE PTR [rax],ah
   14001b549:	add    BYTE PTR [rcx+0x0],al
   14001b54c:	ins    BYTE PTR es:[rdi],dx
   14001b54d:	add    BYTE PTR [rax+rax*1+0x20],ch
   14001b551:	add    BYTE PTR [rdx+0x0],dh
   14001b554:	imul   eax,DWORD PTR [rax],0x680067
   14001b55a:	je     0x14001b55c
   14001b55c:	jae    0x14001b55e
   14001b55e:	and    BYTE PTR [rax],al
   14001b560:	jb     0x14001b562
   14001b562:	add    BYTE PTR gs:[rbx+0x0],dh
   14001b566:	add    BYTE PTR gs:[rdx+0x0],dh
   14001b56a:	jbe    0x14001b56c
   14001b56c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14001b571:	add    BYTE PTR [rax],al
   14001b573:	add    BYTE PTR [rax],bh
   14001b575:	add    BYTE PTR [rax],cl
   14001b577:	add    BYTE PTR [rcx],al
   14001b579:	add    BYTE PTR [rdi+0x0],cl
   14001b57c:	jb     0x14001b57e
   14001b57e:	imul   eax,DWORD PTR [rax],0x690067
   14001b584:	outs   dx,BYTE PTR ds:[rsi]
   14001b585:	add    BYTE PTR [rcx+0x0],ah
   14001b588:	ins    BYTE PTR es:[rdi],dx
   14001b589:	add    BYTE PTR [rsi+0x0],al
   14001b58c:	imul   eax,DWORD PTR [rax],0x65006c
   14001b592:	outs   dx,BYTE PTR ds:[rsi]
   14001b593:	add    BYTE PTR [rcx+0x0],ah
   14001b596:	ins    DWORD PTR es:[rdi],dx
   14001b597:	add    BYTE PTR [rbp+0x0],ah
   14001b59a:	add    BYTE PTR [rax],al
   14001b59c:	outs   dx,BYTE PTR ds:[rsi]
   14001b59d:	add    BYTE PTR [rbp+0x0],ah
   14001b5a0:	je     0x14001b5a2
   14001b5a2:	add    BYTE PTR cs:[rbp+0x0],ah
   14001b5a6:	js     0x14001b5a8
   14001b5a8:	add    BYTE PTR gs:[rax],al
   14001b5ab:	add    BYTE PTR [rdx+0x0],ch
   14001b5ae:	and    eax,0x50000100
   14001b5b3:	add    BYTE PTR [rdx+0x0],dh
   14001b5b6:	outs   dx,DWORD PTR ds:[rsi]
   14001b5b7:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001b5bb:	add    BYTE PTR [rbx+0x0],ah
   14001b5be:	je     0x14001b5c0
   14001b5c0:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14001b5c4:	ins    DWORD PTR es:[rdi],dx
   14001b5c5:	add    BYTE PTR [rbp+0x0],ah
   14001b5c8:	add    BYTE PTR [rax],al
   14001b5ca:	add    BYTE PTR [rax],al
   14001b5cc:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001b5d0:	movsxd eax,DWORD PTR [rax]
   14001b5d2:	jb     0x14001b5d4
   14001b5d4:	outs   dx,DWORD PTR ds:[rsi]
   14001b5d5:	add    BYTE PTR [rbx+0x0],dh
   14001b5d8:	outs   dx,DWORD PTR ds:[rsi]
   14001b5d9:	add    BYTE PTR [rsi+0x0],ah
   14001b5dc:	je     0x14001b5de
   14001b5de:	scas   al,BYTE PTR es:[rdi]
   14001b5df:	add    BYTE PTR [rax],ah
   14001b5e1:	add    BYTE PTR [rdi+0x0],dl
   14001b5e4:	imul   eax,DWORD PTR [rax],0x64006e
   14001b5ea:	outs   dx,DWORD PTR ds:[rsi]
   14001b5eb:	add    BYTE PTR [rdi+0x0],dh
   14001b5ee:	jae    0x14001b5f0
   14001b5f0:	scas   al,BYTE PTR es:[rdi]
   14001b5f1:	add    BYTE PTR [rax],ah
   14001b5f3:	add    BYTE PTR [rdi+0x0],cl
   14001b5f6:	jo     0x14001b5f8
   14001b5f8:	add    BYTE PTR gs:[rdx+0x0],dh
   14001b5fc:	(bad)  
   14001b5fd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001b601:	add    BYTE PTR [rsi+0x0],ch
   14001b604:	add    BYTE PTR [eax],ah
   14001b607:	add    BYTE PTR [rbx+0x0],dl
   14001b60a:	jns    0x14001b60c
   14001b60c:	jae    0x14001b60e
   14001b60e:	je     0x14001b610
   14001b610:	add    BYTE PTR gs:[rbp+0x0],ch
   14001b614:	add    BYTE PTR [rax],al
   14001b616:	add    BYTE PTR [rax],al
   14001b618:	rex.RX add BYTE PTR [rcx],r10b
   14001b61b:	add    BYTE PTR [rcx],al
   14001b61d:	add    BYTE PTR [rax+0x0],dl
   14001b620:	jb     0x14001b622
   14001b622:	outs   dx,DWORD PTR ds:[rsi]
   14001b623:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001b627:	add    BYTE PTR [rbx+0x0],ah
   14001b62a:	je     0x14001b62c
   14001b62c:	push   rsi
   14001b62d:	add    BYTE PTR [rbp+0x0],ah
   14001b630:	jb     0x14001b632
   14001b632:	jae    0x14001b634
   14001b634:	imul   eax,DWORD PTR [rax],0x6e006f
   14001b63a:	add    BYTE PTR [rax],al
   14001b63c:	xor    DWORD PTR [rax],eax
   14001b63e:	xor    BYTE PTR [rax],al
   14001b640:	add    BYTE PTR cs:[rax],dh
   14001b643:	add    BYTE PTR [rsi],ch
   14001b645:	add    BYTE PTR [rcx],dh
   14001b647:	add    BYTE PTR [rax],dh
   14001b649:	add    BYTE PTR [rdx],dh
   14001b64b:	add    BYTE PTR [rax+rax*1],dh
   14001b64e:	xor    BYTE PTR [rax],al
   14001b650:	add    BYTE PTR cs:[rcx],dh
   14001b653:	add    BYTE PTR [rsi],dh
   14001b655:	add    BYTE PTR [rbx],dh
   14001b657:	add    BYTE PTR [rax],bh
   14001b659:	add    BYTE PTR [rax+rax*1],dh
   14001b65c:	add    BYTE PTR [rax],al
   14001b65e:	add    BYTE PTR [rax],al
   14001b660:	add    BYTE PTR [rax],r8b
   14001b663:	add    BYTE PTR [rcx],al
   14001b665:	add    BYTE PTR [rsi+0x0],dl
   14001b668:	(bad)  
   14001b669:	add    BYTE PTR [rdx+0x0],dh
   14001b66c:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001b670:	ins    BYTE PTR es:[rdi],dx
   14001b671:	add    BYTE PTR [rbp+0x0],ah
   14001b674:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001b678:	data16 add BYTE PTR [rdi+0x0],ch
   14001b67c:	add    BYTE PTR [rax],al
   14001b67e:	add    BYTE PTR [rax],al
   14001b680:	and    al,0x0
   14001b682:	add    al,0x0
   14001b684:	add    BYTE PTR [rax],al
   14001b686:	push   rsp
   14001b687:	add    BYTE PTR [rdx+0x0],dh
   14001b68a:	(bad)  
   14001b68b:	add    BYTE PTR [rsi+0x0],ch
   14001b68e:	jae    0x14001b690
   14001b690:	ins    BYTE PTR es:[rdi],dx
   14001b691:	add    BYTE PTR [rcx+0x0],ah
   14001b694:	je     0x14001b696
   14001b696:	imul   eax,DWORD PTR [rax],0x6e006f
   14001b69c:	add    BYTE PTR [rax],al
   14001b69e:	add    BYTE PTR [rax],al
   14001b6a0:	or     DWORD PTR [rax+rsi*4],eax
   14001b6a3:	add    al,0x0
   14001b6a5:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014001c000 <.reloc>:
   14001c000:	add    BYTE PTR [rax+0x280000],ah
   14001c006:	add    BYTE PTR [rax],al
   14001c008:	mov    al,0xa4
   14001c00a:	mov    eax,0xe0a4c8a4
   14001c00f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c010:	call   0x100a878b9
   14001c015:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c016:	(bad)  
   14001c017:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c018:	jo     0x14001bfc1
   14001c01a:	sbb    BYTE PTR [rdx-0x55c755d0],ch
   14001c020:	stos   BYTE PTR es:[rdi],al
   14001c022:	shr    BYTE PTR [rax+rcx*8+0xacd0ac],0xd0
   14001c02a:	add    BYTE PTR [rax],al
   14001c02c:	cmp    BYTE PTR [rax],al
   14001c02e:	add    BYTE PTR [rax],al
   14001c030:	sub    BYTE PTR [rax-0x5faf5fc8],ah
   14001c036:	push   0xffffffff98a080a0
   14001c03b:	movabs al,ds:0xa118a100a0c8a0b0
   14001c044:	xor    BYTE PTR [rcx-0x5dbf5eb8],ah
   14001c04a:	rex.W movabs ds:0xa268a260a258a250,al
   14001c054:	jo     0x14001bff8
   14001c056:	js     0x14001bffa
   14001c058:	and    BYTE PTR [rdx-0x5b4f5b60],0x0
   14001c05f:	add    BYTE PTR [rax],al
   14001c061:	movabs al,ds:0xa0000000000c0001
	...
