
22ddabf71254d873f6aef02b12e5c4923bbafe67a9c7e2f394fcf863813230be.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	rex push rbp
   14000100a:	push   r14
   14000100c:	push   r15
   14000100e:	sub    rsp,0x1c0
   140001015:	lea    rbp,[rsp+0x20]
   14000101a:	mov    QWORD PTR [rbp+0x1c0],rbx
   140001021:	mov    QWORD PTR [rbp+0x1c8],rsi
   140001028:	mov    QWORD PTR [rbp+0x1d0],rdi
   14000102f:	mov    rax,QWORD PTR [rip+0x7fd2]        # 0x140009008
   140001036:	xor    rax,rbp
   140001039:	mov    QWORD PTR [rbp+0x190],rax
   140001040:	mov    eax,DWORD PTR [rip+0x8652]        # 0x140009698
   140001046:	mov    r15d,0x1
   14000104c:	test   r15b,al
   14000104f:	jne    0x14000108d
   140001051:	or     eax,r15d
   140001054:	lea    rcx,[rbp+0x70]
   140001058:	mov    ebx,0x114
   14000105d:	mov    DWORD PTR [rip+0x8635],eax        # 0x140009698
   140001063:	mov    r8d,ebx
   140001066:	xor    edx,edx
   140001068:	call   0x140005bce
   14000106d:	lea    rcx,[rbp+0x70]
   140001071:	mov    DWORD PTR [rbp+0x70],ebx
   140001074:	call   QWORD PTR [rip+0x5216]        # 0x140006290
   14000107a:	mov    eax,DWORD PTR [rbp+0x80]
   140001080:	mov    DWORD PTR [rip+0x8772],eax        # 0x1400097f8
   140001086:	mov    DWORD PTR [rip+0x8607],r15d        # 0x140009694
   14000108d:	mov    eax,DWORD PTR [rsp]
   140001090:	sub    rsp,0x10
   140001094:	lea    rsi,[rsp+0x20]
   140001099:	mov    eax,DWORD PTR [rsi]
   14000109b:	mov    r8d,0x30
   1400010a1:	lea    rdx,[rbp+0x8]
   1400010a5:	mov    rcx,rsi
   1400010a8:	call   QWORD PTR [rip+0x508a]        # 0x140006138
   1400010ae:	test   rax,rax
   1400010b1:	jne    0x1400010ba
   1400010b3:	xor    eax,eax
   1400010b5:	jmp    0x140001184
   1400010ba:	mov    rbx,QWORD PTR [rbp+0x10]
   1400010be:	lea    rcx,[rbp+0x38]
   1400010c2:	call   QWORD PTR [rip+0x51d8]        # 0x1400062a0
   1400010c8:	mov    eax,DWORD PTR [rbp+0x3c]
   1400010cb:	mov    ecx,0x11000
   1400010d0:	mov    r14d,eax
   1400010d3:	lea    edi,[rax-0x1]
   1400010d6:	not    rdi
   1400010d9:	and    rdi,rsi
   1400010dc:	mov    esi,0x2000
   1400010e1:	sub    rdi,rax
   1400010e4:	mov    eax,DWORD PTR [rip+0x870e]        # 0x1400097f8
   1400010ea:	cmp    eax,r15d
   1400010ed:	cmove  esi,ecx
   1400010f0:	add    rsi,rbx
   1400010f3:	cmp    rdi,rsi
   1400010f6:	jb     0x1400010b3
   1400010f8:	cmp    eax,r15d
   1400010fb:	je     0x140001164
   1400010fd:	mov    r8d,0x30
   140001103:	lea    rdx,[rbp+0x8]
   140001107:	mov    rcx,rbx
   14000110a:	call   QWORD PTR [rip+0x5028]        # 0x140006138
   140001110:	test   rax,rax
   140001113:	je     0x1400010b3
   140001115:	add    rbx,QWORD PTR [rbp+0x20]
   140001119:	test   DWORD PTR [rbp+0x28],0x1000
   140001120:	je     0x1400010fd
   140001122:	test   DWORD PTR [rbp+0x2c],0x100
   140001129:	mov    rbx,QWORD PTR [rbp+0x8]
   14000112d:	je     0x140001134
   14000112f:	mov    eax,r15d
   140001132:	jmp    0x140001184
   140001134:	cmp    rdi,rbx
   140001137:	jb     0x1400010b3
   14000113d:	cmp    rbx,rsi
   140001140:	mov    r9d,0x4
   140001146:	mov    r8d,0x1000
   14000114c:	mov    rdx,r14
   14000114f:	cmovb  rbx,rsi
   140001153:	mov    rcx,rbx
   140001156:	call   QWORD PTR [rip+0x4fe4]        # 0x140006140
   14000115c:	mov    eax,DWORD PTR [rip+0x8696]        # 0x1400097f8
   140001162:	jmp    0x140001167
   140001164:	mov    rbx,rdi
   140001167:	cmp    eax,r15d
   14000116a:	lea    r9,[rbp+0x0]
   14000116e:	mov    r8d,0x104
   140001174:	mov    rdx,r14
   140001177:	cmove  r8d,r15d
   14000117b:	mov    rcx,rbx
   14000117e:	call   QWORD PTR [rip+0x4fac]        # 0x140006130
   140001184:	mov    rcx,QWORD PTR [rbp+0x190]
   14000118b:	xor    rcx,rbp
   14000118e:	call   0x140005220
   140001193:	mov    rbx,QWORD PTR [rbp+0x1c0]
   14000119a:	mov    rsi,QWORD PTR [rbp+0x1c8]
   1400011a1:	mov    rdi,QWORD PTR [rbp+0x1d0]
   1400011a8:	lea    rsp,[rbp+0x1a0]
   1400011af:	pop    r15
   1400011b1:	pop    r14
   1400011b3:	pop    rbp
   1400011b4:	ret    
   1400011b5:	int3   
   1400011b6:	int3   
   1400011b7:	int3   
   1400011b8:	int3   
   1400011b9:	int3   
   1400011ba:	int3   
   1400011bb:	int3   
   1400011bc:	rex push rbp
   1400011be:	sub    rsp,0x30
   1400011c2:	lea    rbp,[rsp+0x20]
   1400011c7:	mov    QWORD PTR [rbp+0x20],rbx
   1400011cb:	mov    rax,QWORD PTR [rip+0x7e36]        # 0x140009008
   1400011d2:	xor    rax,rbp
   1400011d5:	mov    QWORD PTR [rbp+0x0],rax
   1400011d9:	mov    bl,0x1
   1400011db:	lea    rdx,[rcx+0x2000]
   1400011e2:	cmp    rdx,rcx
   1400011e5:	jae    0x1400011eb
   1400011e7:	xor    al,al
   1400011e9:	jmp    0x140001216
   1400011eb:	lea    rax,[rdx+0xf]
   1400011ef:	cmp    rax,rdx
   1400011f2:	ja     0x1400011fe
   1400011f4:	movabs rax,0xffffffffffffff0
   1400011fe:	and    rax,0xfffffffffffffff0
   140001202:	call   0x140005c10
   140001207:	sub    rsp,rax
   14000120a:	jmp    0x140001214
   14000120c:	xor    bl,bl
   14000120e:	call   0x140001008
   140001213:	nop
   140001214:	mov    al,bl
   140001216:	mov    rcx,QWORD PTR [rbp+0x0]
   14000121a:	xor    rcx,rbp
   14000121d:	call   0x140005220
   140001222:	mov    rbx,QWORD PTR [rbp+0x20]
   140001226:	lea    rsp,[rbp+0x10]
   14000122a:	pop    rbp
   14000122b:	ret    
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	int3   
   140001231:	int3   
   140001232:	int3   
   140001233:	int3   
   140001234:	rex push rbx
   140001236:	sub    rsp,0x20
   14000123a:	xor    ebx,ebx
   14000123c:	call   QWORD PTR [rip+0x503e]        # 0x140006280
   140001242:	jmp    0x140001256
   140001244:	mov    ebx,0x80004005
   140001249:	mov    ecx,0x8007000e
   14000124e:	cmp    eax,0xc0000017
   140001253:	cmove  ebx,ecx
   140001256:	mov    eax,ebx
   140001258:	add    rsp,0x20
   14000125c:	pop    rbx
   14000125d:	ret    
   14000125e:	int3   
   14000125f:	int3   
   140001260:	int3   
   140001261:	int3   
   140001262:	int3   
   140001263:	int3   
   140001264:	mov    QWORD PTR [rsp+0x10],rbx
   140001269:	mov    QWORD PTR [rsp+0x18],rbp
   14000126e:	mov    QWORD PTR [rsp+0x8],rcx
   140001273:	push   rsi
   140001274:	push   rdi
   140001275:	push   r14
   140001277:	sub    rsp,0x30
   14000127b:	mov    rsi,QWORD PTR [rip+0x843e]        # 0x1400096c0
   140001282:	xor    edi,edi
   140001284:	test   rsi,rsi
   140001287:	je     0x140001331
   14000128d:	mov    ebp,edi
   14000128f:	jmp    0x140001326
   140001294:	test   ebp,ebp
   140001296:	jne    0x14000132f
   14000129c:	mov    rbx,QWORD PTR [rsi+0x10]
   1400012a0:	mov    QWORD PTR [rsp+0x50],rdi
   1400012a5:	test   rbx,rbx
   1400012a8:	jne    0x1400012ae
   1400012aa:	mov    ebp,edi
   1400012ac:	jmp    0x140001310
   1400012ae:	mov    rcx,rbx
   1400012b1:	call   QWORD PTR [rip+0x50f9]        # 0x1400063b0
   1400012b7:	mov    rcx,QWORD PTR [rsi+0x18]
   1400012bb:	lea    r8,[rsp+0x50]
   1400012c0:	lea    rdx,[rip+0x57d9]        # 0x140006aa0
   1400012c7:	call   rbx
   1400012c9:	mov    ebp,eax
   1400012cb:	test   eax,eax
   1400012cd:	js     0x1400012f1
   1400012cf:	mov    rdx,QWORD PTR [rsp+0x50]
   1400012d4:	lea    rax,[rsi+0x28]
   1400012d8:	mov    rcx,QWORD PTR [rsi]
   1400012db:	mov    r9d,0x4
   1400012e1:	mov    r8d,r9d
   1400012e4:	mov    QWORD PTR [rsp+0x20],rax
   1400012e9:	call   QWORD PTR [rip+0x4d59]        # 0x140006048
   1400012ef:	mov    ebp,eax
   1400012f1:	mov    r14,QWORD PTR [rsp+0x50]
   1400012f6:	test   r14,r14
   1400012f9:	je     0x140001310
   1400012fb:	mov    rax,QWORD PTR [r14]
   1400012fe:	mov    rbx,QWORD PTR [rax+0x10]
   140001302:	mov    rcx,rbx
   140001305:	call   QWORD PTR [rip+0x50a5]        # 0x1400063b0
   14000130b:	mov    rcx,r14
   14000130e:	call   rbx
   140001310:	cmp    DWORD PTR [rip+0x8386],0xb0        # 0x1400096a0
   14000131a:	jne    0x140001322
   14000131c:	add    rsi,0x38
   140001320:	jmp    0x140001326
   140001322:	add    rsi,0x48
   140001326:	cmp    QWORD PTR [rsi],rdi
   140001329:	jne    0x140001294
   14000132f:	mov    edi,ebp
   140001331:	mov    rbx,QWORD PTR [rsp+0x58]
   140001336:	mov    eax,edi
   140001338:	mov    rbp,QWORD PTR [rsp+0x60]
   14000133d:	add    rsp,0x30
   140001341:	pop    r14
   140001343:	pop    rdi
   140001344:	pop    rsi
   140001345:	ret    
   140001346:	int3   
   140001347:	int3   
   140001348:	int3   
   140001349:	int3   
   14000134a:	int3   
   14000134b:	int3   
   14000134c:	mov    QWORD PTR [rsp+0x8],rbx
   140001351:	mov    QWORD PTR [rsp+0x10],rsi
   140001356:	push   rdi
   140001357:	sub    rsp,0x20
   14000135b:	cmp    QWORD PTR [rcx+0x8],0x0
   140001360:	mov    rsi,rdx
   140001363:	mov    rbx,rcx
   140001366:	jne    0x1400013c2
   140001368:	cmp    QWORD PTR [rcx+0x10],0x0
   14000136d:	jne    0x1400013c2
   14000136f:	lea    rcx,[rip+0x517a]        # 0x1400064f0
   140001376:	call   QWORD PTR [rip+0x4da4]        # 0x140006120
   14000137c:	test   rax,rax
   14000137f:	je     0x140001397
   140001381:	lea    rdx,[rip+0x51c0]        # 0x140006548
   140001388:	mov    rcx,rax
   14000138b:	call   QWORD PTR [rip+0x4d7f]        # 0x140006110
   140001391:	mov    QWORD PTR [rbx+0x8],rax
   140001395:	jmp    0x1400013c2
   140001397:	xor    r8d,r8d
   14000139a:	lea    rcx,[rip+0x51b7]        # 0x140006558
   1400013a1:	xor    edx,edx
   1400013a3:	call   QWORD PTR [rip+0x4d3f]        # 0x1400060e8
   1400013a9:	test   rax,rax
   1400013ac:	je     0x1400013c2
   1400013ae:	lea    rdx,[rip+0x51c3]        # 0x140006578
   1400013b5:	mov    rcx,rax
   1400013b8:	call   QWORD PTR [rip+0x4d52]        # 0x140006110
   1400013be:	mov    QWORD PTR [rbx+0x10],rax
   1400013c2:	mov    rdi,QWORD PTR [rbx+0x8]
   1400013c6:	test   rdi,rdi
   1400013c9:	je     0x1400013e4
   1400013cb:	mov    rcx,rdi
   1400013ce:	call   QWORD PTR [rip+0x4fdc]        # 0x1400063b0
   1400013d4:	mov    rcx,QWORD PTR [rbx]
   1400013d7:	xor    r9d,r9d
   1400013da:	xor    r8d,r8d
   1400013dd:	mov    rdx,rsi
   1400013e0:	call   rdi
   1400013e2:	jmp    0x140001406
   1400013e4:	mov    rdi,QWORD PTR [rbx+0x10]
   1400013e8:	test   rdi,rdi
   1400013eb:	je     0x140001400
   1400013ed:	mov    rcx,rdi
   1400013f0:	call   QWORD PTR [rip+0x4fba]        # 0x1400063b0
   1400013f6:	mov    rcx,QWORD PTR [rbx]
   1400013f9:	mov    rdx,rsi
   1400013fc:	call   rdi
   1400013fe:	jmp    0x140001406
   140001400:	call   QWORD PTR [rip+0x4c72]        # 0x140006078
   140001406:	mov    rbx,QWORD PTR [rsp+0x30]
   14000140b:	mov    rsi,QWORD PTR [rsp+0x38]
   140001410:	add    rsp,0x20
   140001414:	pop    rdi
   140001415:	ret    
   140001416:	int3   
   140001417:	int3   
   140001418:	int3   
   140001419:	int3   
   14000141a:	int3   
   14000141b:	int3   
   14000141c:	mov    QWORD PTR [rsp+0x18],rbx
   140001421:	push   rbp
   140001422:	push   rsi
   140001423:	push   rdi
   140001424:	lea    rbp,[rsp-0x180]
   14000142c:	sub    rsp,0x280
   140001433:	mov    rax,QWORD PTR [rip+0x7bce]        # 0x140009008
   14000143a:	xor    rax,rsp
   14000143d:	mov    QWORD PTR [rbp+0x170],rax
   140001444:	xor    eax,eax
   140001446:	mov    rdi,rcx
   140001449:	mov    rcx,QWORD PTR [rcx]
   14000144c:	mov    r9d,0x2001f
   140001452:	mov    QWORD PTR [rsp+0x48],rax
   140001457:	xor    r8d,r8d
   14000145a:	mov    QWORD PTR [rsp+0x50],rax
   14000145f:	mov    rsi,rdx
   140001462:	mov    QWORD PTR [rsp+0x58],rax
   140001467:	mov    QWORD PTR [rsp+0x60],rax
   14000146c:	lea    rax,[rsp+0x60]
   140001471:	mov    QWORD PTR [rsp+0x20],rax
   140001476:	call   QWORD PTR [rip+0x4d6c]        # 0x1400061e8
   14000147c:	mov    ebx,eax
   14000147e:	test   eax,eax
   140001480:	jne    0x14000151f
   140001486:	mov    rcx,QWORD PTR [rsp+0x48]
   14000148b:	test   rcx,rcx
   14000148e:	je     0x140001498
   140001490:	call   QWORD PTR [rip+0x4d42]        # 0x1400061d8
   140001496:	mov    ebx,eax
   140001498:	mov    rcx,QWORD PTR [rsp+0x60]
   14000149d:	mov    QWORD PTR [rsp+0x48],rcx
   1400014a2:	test   ebx,ebx
   1400014a4:	jne    0x14000151f
   1400014a6:	jmp    0x1400014c2
   1400014a8:	lea    rdx,[rsp+0x70]
   1400014ad:	lea    rcx,[rsp+0x48]
   1400014b2:	call   0x14000141c
   1400014b7:	mov    ebx,eax
   1400014b9:	test   eax,eax
   1400014bb:	jne    0x14000151f
   1400014bd:	mov    rcx,QWORD PTR [rsp+0x48]
   1400014c2:	lea    rax,[rsp+0x68]
   1400014c7:	mov    DWORD PTR [rsp+0x40],0x100
   1400014cf:	mov    QWORD PTR [rsp+0x38],rax
   1400014d4:	lea    r9,[rsp+0x40]
   1400014d9:	and    QWORD PTR [rsp+0x30],0x0
   1400014df:	lea    r8,[rsp+0x70]
   1400014e4:	and    QWORD PTR [rsp+0x28],0x0
   1400014ea:	xor    edx,edx
   1400014ec:	and    QWORD PTR [rsp+0x20],0x0
   1400014f2:	call   QWORD PTR [rip+0x4cf8]        # 0x1400061f0
   1400014f8:	test   eax,eax
   1400014fa:	je     0x1400014a8
   1400014fc:	mov    rcx,QWORD PTR [rsp+0x48]
   140001501:	test   rcx,rcx
   140001504:	je     0x140001512
   140001506:	call   QWORD PTR [rip+0x4ccc]        # 0x1400061d8
   14000150c:	and    QWORD PTR [rsp+0x48],0x0
   140001512:	mov    rdx,rsi
   140001515:	mov    rcx,rdi
   140001518:	call   0x14000134c
   14000151d:	mov    ebx,eax
   14000151f:	mov    rcx,QWORD PTR [rsp+0x48]
   140001524:	test   rcx,rcx
   140001527:	je     0x14000152f
   140001529:	call   QWORD PTR [rip+0x4ca9]        # 0x1400061d8
   14000152f:	mov    eax,ebx
   140001531:	mov    rcx,QWORD PTR [rbp+0x170]
   140001538:	xor    rcx,rsp
   14000153b:	call   0x140005220
   140001540:	mov    rbx,QWORD PTR [rsp+0x2b0]
   140001548:	add    rsp,0x280
   14000154f:	pop    rdi
   140001550:	pop    rsi
   140001551:	pop    rbp
   140001552:	ret    
   140001553:	int3   
   140001554:	int3   
   140001555:	int3   
   140001556:	int3   
   140001557:	int3   
   140001558:	int3   
   140001559:	int3   
   14000155a:	int3   
   14000155b:	int3   
   14000155c:	mov    QWORD PTR [rsp+0x8],rbx
   140001561:	mov    QWORD PTR [rsp+0x10],rbp
   140001566:	mov    QWORD PTR [rsp+0x18],rsi
   14000156b:	push   rdi
   14000156c:	push   r12
   14000156e:	push   r13
   140001570:	push   r14
   140001572:	push   r15
   140001574:	sub    rsp,0x20
   140001578:	mov    rsi,rcx
   14000157b:	mov    r15,r8
   14000157e:	add    rcx,0x10
   140001582:	mov    rbp,rdx
   140001585:	call   QWORD PTR [rip+0x4ced]        # 0x140006278
   14000158b:	xor    edi,edi
   14000158d:	lea    ecx,[rdi+0x10]
   140001590:	call   0x140004df4
   140001595:	mov    r14,rax
   140001598:	test   rax,rax
   14000159b:	je     0x140001695
   1400015a1:	or     rcx,0xffffffffffffffff
   1400015a5:	test   rbp,rbp
   1400015a8:	jne    0x1400015ae
   1400015aa:	mov    eax,edi
   1400015ac:	jmp    0x1400015bb
   1400015ae:	mov    rax,rcx
   1400015b1:	inc    rax
   1400015b4:	cmp    WORD PTR [rbp+rax*2+0x0],di
   1400015b9:	jne    0x1400015b1
   1400015bb:	lea    edx,[rax*2+0x2]
   1400015c2:	test   r15,r15
   1400015c5:	jne    0x1400015cb
   1400015c7:	mov    ecx,edi
   1400015c9:	jmp    0x1400015d5
   1400015cb:	inc    rcx
   1400015ce:	cmp    WORD PTR [r15+rcx*2],di
   1400015d3:	jne    0x1400015cb
   1400015d5:	lea    ebx,[rcx*2+0x2]
   1400015dc:	mov    r13d,edx
   1400015df:	mov    ecx,edx
   1400015e1:	call   QWORD PTR [rip+0x4a49]        # 0x140006030
   1400015e7:	mov    ecx,ebx
   1400015e9:	mov    QWORD PTR [r14],rax
   1400015ec:	call   QWORD PTR [rip+0x4a3e]        # 0x140006030
   1400015f2:	mov    QWORD PTR [r14+0x8],rax
   1400015f6:	cmp    QWORD PTR [r14],rdi
   1400015f9:	je     0x14000167a
   1400015fb:	test   rax,rax
   1400015fe:	je     0x14000167a
   140001600:	mov    rcx,QWORD PTR [r14]
   140001603:	mov    r8d,r13d
   140001606:	mov    rdx,rbp
   140001609:	call   0x140005bc2
   14000160e:	mov    rcx,QWORD PTR [r14+0x8]
   140001612:	mov    r8d,ebx
   140001615:	mov    rdx,r15
   140001618:	call   0x140005bc2
   14000161d:	mov    eax,DWORD PTR [rsi+0xc]
   140001620:	cmp    DWORD PTR [rsi+0x8],eax
   140001623:	jne    0x14000166a
   140001625:	mov    rcx,QWORD PTR [rsi]
   140001628:	add    eax,eax
   14000162a:	movsxd rdx,eax
   14000162d:	shl    rdx,0x3
   140001631:	mov    DWORD PTR [rsi+0xc],eax
   140001634:	call   QWORD PTR [rip+0x4d0e]        # 0x140006348
   14000163a:	test   rax,rax
   14000163d:	jne    0x140001667
   14000163f:	mov    rcx,QWORD PTR [r14]
   140001642:	call   QWORD PTR [rip+0x49b8]        # 0x140006000
   140001648:	mov    rcx,QWORD PTR [r14+0x8]
   14000164c:	call   QWORD PTR [rip+0x49ae]        # 0x140006000
   140001652:	mov    rcx,r14
   140001655:	call   0x140004de8
   14000165a:	mov    eax,DWORD PTR [rsi+0xc]
   14000165d:	cdq    
   14000165e:	sub    eax,edx
   140001660:	sar    eax,1
   140001662:	mov    DWORD PTR [rsi+0xc],eax
   140001665:	jmp    0x140001695
   140001667:	mov    QWORD PTR [rsi],rax
   14000166a:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000166e:	mov    rax,QWORD PTR [rsi]
   140001671:	mov    QWORD PTR [rax+rcx*8],r14
   140001675:	inc    DWORD PTR [rsi+0x8]
   140001678:	jmp    0x14000169a
   14000167a:	mov    rcx,QWORD PTR [r14]
   14000167d:	call   QWORD PTR [rip+0x497d]        # 0x140006000
   140001683:	mov    rcx,QWORD PTR [r14+0x8]
   140001687:	call   QWORD PTR [rip+0x4973]        # 0x140006000
   14000168d:	mov    rcx,r14
   140001690:	call   0x140004de8
   140001695:	mov    edi,0x8007000e
   14000169a:	lea    rcx,[rsi+0x10]
   14000169e:	call   QWORD PTR [rip+0x4bb4]        # 0x140006258
   1400016a4:	mov    rbx,QWORD PTR [rsp+0x50]
   1400016a9:	mov    eax,edi
   1400016ab:	mov    rbp,QWORD PTR [rsp+0x58]
   1400016b0:	mov    rsi,QWORD PTR [rsp+0x60]
   1400016b5:	add    rsp,0x20
   1400016b9:	pop    r15
   1400016bb:	pop    r14
   1400016bd:	pop    r13
   1400016bf:	pop    r12
   1400016c1:	pop    rdi
   1400016c2:	ret    
   1400016c3:	int3   
   1400016c4:	int3   
   1400016c5:	int3   
   1400016c6:	int3   
   1400016c7:	int3   
   1400016c8:	int3   
   1400016c9:	int3   
   1400016ca:	int3   
   1400016cb:	int3   
   1400016cc:	rex push rbp
   1400016ce:	push   r12
   1400016d0:	push   r13
   1400016d2:	push   r14
   1400016d4:	push   r15
   1400016d6:	sub    rsp,0x50
   1400016da:	lea    rbp,[rsp+0x30]
   1400016df:	mov    QWORD PTR [rbp+0x50],rbx
   1400016e3:	mov    QWORD PTR [rbp+0x58],rsi
   1400016e7:	mov    QWORD PTR [rbp+0x60],rdi
   1400016eb:	mov    rax,QWORD PTR [rip+0x7916]        # 0x140009008
   1400016f2:	xor    rax,rbp
   1400016f5:	mov    QWORD PTR [rbp+0x10],rax
   1400016f9:	xor    r13d,r13d
   1400016fc:	mov    QWORD PTR [rbp+0x8],rcx
   140001700:	mov    rax,rdx
   140001703:	mov    QWORD PTR [rbp+0x0],r13
   140001707:	mov    rsi,r8
   14000170a:	xor    edx,edx
   14000170c:	mov    rcx,rax
   14000170f:	mov    rdi,r9
   140001712:	lea    r8d,[r13+0x2]
   140001716:	mov    ebx,r13d
   140001719:	call   QWORD PTR [rip+0x49c9]        # 0x1400060e8
   14000171f:	mov    r12,rax
   140001722:	test   rax,rax
   140001725:	jne    0x140001740
   140001727:	call   QWORD PTR [rip+0x494b]        # 0x140006078
   14000172d:	movzx  edi,ax
   140001730:	or     edi,0x80070000
   140001736:	test   eax,eax
   140001738:	cmovle edi,eax
   14000173b:	jmp    0x140001915
   140001740:	xor    r9d,r9d
   140001743:	mov    r8,rsi
   140001746:	mov    rdx,rdi
   140001749:	mov    rcx,rax
   14000174c:	call   QWORD PTR [rip+0x49a6]        # 0x1400060f8
   140001752:	mov    rdi,rax
   140001755:	test   rax,rax
   140001758:	jne    0x140001773
   14000175a:	call   QWORD PTR [rip+0x4918]        # 0x140006078
   140001760:	movzx  edi,ax
   140001763:	or     edi,0x80070000
   140001769:	test   eax,eax
   14000176b:	cmovle edi,eax
   14000176e:	jmp    0x1400018f9
   140001773:	mov    rdx,rax
   140001776:	mov    rcx,r12
   140001779:	call   QWORD PTR [rip+0x4989]        # 0x140006108
   14000177f:	mov    r14,rax
   140001782:	test   rax,rax
   140001785:	je     0x14000175a
   140001787:	mov    rdx,rdi
   14000178a:	mov    rcx,r12
   14000178d:	call   QWORD PTR [rip+0x4985]        # 0x140006118
   140001793:	mov    r15d,eax
   140001796:	mov    rsi,r14
   140001799:	cmp    BYTE PTR [r15+r14*1],r13b
   14000179d:	je     0x140001827
   1400017a3:	lea    esi,[rax+0x1]
   1400017a6:	cmp    esi,0x400
   1400017ac:	ja     0x1400017e1
   1400017ae:	mov    ecx,esi
   1400017b0:	mov    edi,esi
   1400017b2:	call   0x1400011bc
   1400017b7:	test   al,al
   1400017b9:	je     0x1400017e1
   1400017bb:	lea    rax,[rsi+0xf]
   1400017bf:	cmp    rax,rdi
   1400017c2:	ja     0x1400017ce
   1400017c4:	movabs rax,0xffffffffffffff0
   1400017ce:	and    rax,0xfffffffffffffff0
   1400017d2:	call   0x140005c10
   1400017d7:	sub    rsp,rax
   1400017da:	lea    rsi,[rsp+0x30]
   1400017df:	jmp    0x140001806
   1400017e1:	mov    edi,esi
   1400017e3:	lea    rcx,[rsi+0x10]
   1400017e7:	cmp    rcx,rdi
   1400017ea:	jae    0x1400017f1
   1400017ec:	mov    rsi,r13
   1400017ef:	jmp    0x140001806
   1400017f1:	call   QWORD PTR [rip+0x4b69]        # 0x140006360
   1400017f7:	test   rax,rax
   1400017fa:	je     0x1400017ec
   1400017fc:	mov    QWORD PTR [rax],r13
   1400017ff:	lea    rsi,[rax+0x10]
   140001803:	mov    rbx,rax
   140001806:	test   rsi,rsi
   140001809:	jne    0x140001815
   14000180b:	mov    edi,0x8007000e
   140001810:	jmp    0x1400018f9
   140001815:	mov    r8,rdi
   140001818:	mov    rdx,r14
   14000181b:	mov    rcx,rsi
   14000181e:	call   0x140005bc2
   140001823:	mov    BYTE PTR [r15+rsi*1],r13b
   140001827:	test   rsi,rsi
   14000182a:	je     0x1400018cd
   140001830:	or     r15,0xffffffffffffffff
   140001834:	inc    r15
   140001837:	cmp    BYTE PTR [rsi+r15*1],r13b
   14000183b:	jne    0x140001834
   14000183d:	inc    r15d
   140001840:	movsxd rdi,r15d
   140001843:	add    rdi,rdi
   140001846:	cmp    rdi,0x400
   14000184d:	ja     0x140001881
   14000184f:	mov    rcx,rdi
   140001852:	call   0x1400011bc
   140001857:	test   al,al
   140001859:	je     0x140001881
   14000185b:	lea    rax,[rdi+0xf]
   14000185f:	cmp    rax,rdi
   140001862:	ja     0x14000186e
   140001864:	movabs rax,0xffffffffffffff0
   14000186e:	and    rax,0xfffffffffffffff0
   140001872:	call   0x140005c10
   140001877:	sub    rsp,rax
   14000187a:	lea    r14,[rsp+0x30]
   14000187f:	jmp    0x14000189f
   140001881:	lea    rcx,[rdi+0x10]
   140001885:	cmp    rcx,rdi
   140001888:	jb     0x1400018cd
   14000188a:	call   QWORD PTR [rip+0x4ad0]        # 0x140006360
   140001890:	test   rax,rax
   140001893:	je     0x1400018cd
   140001895:	mov    QWORD PTR [rax],rbx
   140001898:	lea    r14,[rax+0x10]
   14000189c:	mov    rbx,rax
   14000189f:	test   r14,r14
   1400018a2:	je     0x1400018cd
   1400018a4:	mov    DWORD PTR [rsp+0x28],r15d
   1400018a9:	or     r9d,0xffffffff
   1400018ad:	mov    r8,rsi
   1400018b0:	mov    QWORD PTR [rsp+0x20],r14
   1400018b5:	xor    edx,edx
   1400018b7:	mov    WORD PTR [r14],r13w
   1400018bb:	xor    ecx,ecx
   1400018bd:	call   QWORD PTR [rip+0x493d]        # 0x140006200
   1400018c3:	neg    eax
   1400018c5:	sbb    rdi,rdi
   1400018c8:	and    rdi,r14
   1400018cb:	jmp    0x1400018d0
   1400018cd:	mov    rdi,r13
   1400018d0:	mov    ecx,0x2000
   1400018d5:	call   QWORD PTR [rip+0x4a85]        # 0x140006360
   1400018db:	test   rax,rax
   1400018de:	je     0x14000180b
   1400018e4:	mov    r8d,DWORD PTR [rbp+0x70]
   1400018e8:	lea    rcx,[rbp+0x0]
   1400018ec:	mov    r9,rax
   1400018ef:	mov    rdx,rdi
   1400018f2:	call   0x1400024bc
   1400018f7:	mov    edi,eax
   1400018f9:	mov    rcx,r12
   1400018fc:	call   QWORD PTR [rip+0x47fe]        # 0x140006100
   140001902:	jmp    0x140001910
   140001904:	mov    rcx,rbx
   140001907:	mov    rbx,QWORD PTR [rbx]
   14000190a:	call   QWORD PTR [rip+0x4a58]        # 0x140006368
   140001910:	test   rbx,rbx
   140001913:	jne    0x140001904
   140001915:	mov    eax,edi
   140001917:	mov    rcx,QWORD PTR [rbp+0x10]
   14000191b:	xor    rcx,rbp
   14000191e:	call   0x140005220
   140001923:	mov    rbx,QWORD PTR [rbp+0x50]
   140001927:	mov    rsi,QWORD PTR [rbp+0x58]
   14000192b:	mov    rdi,QWORD PTR [rbp+0x60]
   14000192f:	lea    rsp,[rbp+0x20]
   140001933:	pop    r15
   140001935:	pop    r14
   140001937:	pop    r13
   140001939:	pop    r12
   14000193b:	pop    rbp
   14000193c:	ret    
   14000193d:	int3   
   14000193e:	int3   
   14000193f:	int3   
   140001940:	int3   
   140001941:	int3   
   140001942:	int3   
   140001943:	int3   
   140001944:	mov    rax,rsp
   140001947:	mov    QWORD PTR [rax+0x8],rbx
   14000194b:	mov    QWORD PTR [rax+0x10],rbp
   14000194f:	mov    QWORD PTR [rax+0x18],rsi
   140001953:	mov    QWORD PTR [rax+0x20],rdi
   140001957:	push   r12
   140001959:	push   r14
   14000195b:	push   r15
   14000195d:	sub    rsp,0x20
   140001961:	mov    rdi,rdx
   140001964:	mov    rbx,rcx
   140001967:	movabs r12,0x100002600
   140001971:	mov    rcx,QWORD PTR [rbx]
   140001974:	movzx  eax,WORD PTR [rcx]
   140001977:	cmp    eax,0x20
   14000197a:	ja     0x14000198d
   14000197c:	bt     r12,rax
   140001980:	jae    0x14000198d
   140001982:	call   QWORD PTR [rip+0x4888]        # 0x140006210
   140001988:	mov    QWORD PTR [rbx],rax
   14000198b:	jmp    0x140001971
   14000198d:	xor    r14d,r14d
   140001990:	cmp    r14w,WORD PTR [rcx]
   140001994:	je     0x140001aa4
   14000199a:	lea    r15d,[r14+0x27]
   14000199e:	mov    rbp,rdi
   1400019a1:	cmp    r15w,WORD PTR [rcx]
   1400019a5:	jne    0x140001a45
   1400019ab:	call   QWORD PTR [rip+0x485f]        # 0x140006210
   1400019b1:	mov    QWORD PTR [rbx],rax
   1400019b4:	cmp    r14w,WORD PTR [rax]
   1400019b8:	je     0x140001a2a
   1400019ba:	mov    rcx,QWORD PTR [rbx]
   1400019bd:	cmp    r15w,WORD PTR [rcx]
   1400019c1:	jne    0x1400019cf
   1400019c3:	call   QWORD PTR [rip+0x4847]        # 0x140006210
   1400019c9:	cmp    r15w,WORD PTR [rax]
   1400019cd:	jne    0x140001a2a
   1400019cf:	mov    rcx,QWORD PTR [rbx]
   1400019d2:	cmp    r15w,WORD PTR [rcx]
   1400019d6:	jne    0x1400019e1
   1400019d8:	call   QWORD PTR [rip+0x4832]        # 0x140006210
   1400019de:	mov    QWORD PTR [rbx],rax
   1400019e1:	mov    rsi,QWORD PTR [rbx]
   1400019e4:	mov    rcx,rsi
   1400019e7:	call   QWORD PTR [rip+0x4823]        # 0x140006210
   1400019ed:	mov    rcx,rax
   1400019f0:	mov    QWORD PTR [rbx],rax
   1400019f3:	sub    rcx,rsi
   1400019f6:	sar    rcx,1
   1400019f9:	lea    rdx,[rdi+rcx*2]
   1400019fd:	lea    rcx,[rbp+0x2000]
   140001a04:	cmp    rdx,rcx
   140001a07:	jae    0x140001aa4
   140001a0d:	cmp    rsi,rax
   140001a10:	jae    0x140001a25
   140001a12:	movzx  eax,WORD PTR [rsi]
   140001a15:	add    rsi,0x2
   140001a19:	mov    WORD PTR [rdi],ax
   140001a1c:	add    rdi,0x2
   140001a20:	cmp    rsi,QWORD PTR [rbx]
   140001a23:	jb     0x140001a12
   140001a25:	mov    rax,QWORD PTR [rbx]
   140001a28:	jmp    0x1400019b4
   140001a2a:	mov    rax,QWORD PTR [rbx]
   140001a2d:	cmp    r14w,WORD PTR [rax]
   140001a31:	je     0x140001aa4
   140001a33:	mov    WORD PTR [rdi],r14w
   140001a37:	mov    rcx,QWORD PTR [rbx]
   140001a3a:	call   QWORD PTR [rip+0x47d0]        # 0x140006210
   140001a40:	mov    QWORD PTR [rbx],rax
   140001a43:	jmp    0x140001aa0
   140001a45:	mov    rsi,QWORD PTR [rbx]
   140001a48:	movzx  eax,WORD PTR [rsi]
   140001a4b:	cmp    eax,0x20
   140001a4e:	ja     0x140001a56
   140001a50:	bt     r12,rax
   140001a54:	jb     0x140001a9c
   140001a56:	mov    rcx,rsi
   140001a59:	call   QWORD PTR [rip+0x47b1]        # 0x140006210
   140001a5f:	mov    rcx,rax
   140001a62:	mov    QWORD PTR [rbx],rax
   140001a65:	sub    rcx,rsi
   140001a68:	sar    rcx,1
   140001a6b:	lea    rdx,[rdi+rcx*2]
   140001a6f:	lea    rcx,[rbp+0x2000]
   140001a76:	cmp    rdx,rcx
   140001a79:	jae    0x140001aa4
   140001a7b:	cmp    rsi,rax
   140001a7e:	jae    0x140001a93
   140001a80:	movzx  eax,WORD PTR [rsi]
   140001a83:	add    rsi,0x2
   140001a87:	mov    WORD PTR [rdi],ax
   140001a8a:	add    rdi,0x2
   140001a8e:	cmp    rsi,QWORD PTR [rbx]
   140001a91:	jb     0x140001a80
   140001a93:	mov    rax,QWORD PTR [rbx]
   140001a96:	cmp    r14w,WORD PTR [rax]
   140001a9a:	jne    0x140001a45
   140001a9c:	mov    WORD PTR [rdi],r14w
   140001aa0:	xor    eax,eax
   140001aa2:	jmp    0x140001aa9
   140001aa4:	mov    eax,0x80020009
   140001aa9:	mov    rbx,QWORD PTR [rsp+0x40]
   140001aae:	mov    rbp,QWORD PTR [rsp+0x48]
   140001ab3:	mov    rsi,QWORD PTR [rsp+0x50]
   140001ab8:	mov    rdi,QWORD PTR [rsp+0x58]
   140001abd:	add    rsp,0x20
   140001ac1:	pop    r15
   140001ac3:	pop    r14
   140001ac5:	pop    r12
   140001ac7:	ret    
   140001ac8:	int3   
   140001ac9:	int3   
   140001aca:	int3   
   140001acb:	int3   
   140001acc:	int3   
   140001acd:	int3   
   140001ace:	int3   
   140001acf:	int3   
   140001ad0:	rex push rbp
   140001ad2:	push   r12
   140001ad4:	push   r13
   140001ad6:	push   r14
   140001ad8:	push   r15
   140001ada:	sub    rsp,0x80
   140001ae1:	lea    rbp,[rsp+0x30]
   140001ae6:	mov    QWORD PTR [rbp+0x80],rbx
   140001aed:	mov    QWORD PTR [rbp+0x88],rsi
   140001af4:	mov    QWORD PTR [rbp+0x90],rdi
   140001afb:	mov    rax,QWORD PTR [rip+0x7506]        # 0x140009008
   140001b02:	xor    rax,rbp
   140001b05:	mov    QWORD PTR [rbp+0x40],rax
   140001b09:	mov    r12,rcx
   140001b0c:	mov    QWORD PTR [rbp+0x38],rcx
   140001b10:	xor    r15d,r15d
   140001b13:	mov    QWORD PTR [rbp+0x28],r9
   140001b17:	mov    ecx,0x2000
   140001b1c:	mov    QWORD PTR [rbp+0x30],r8
   140001b20:	mov    ebx,r15d
   140001b23:	mov    QWORD PTR [rbp+0x10],rdx
   140001b27:	mov    r13,r8
   140001b2a:	call   QWORD PTR [rip+0x4830]        # 0x140006360
   140001b30:	mov    QWORD PTR [rbp+0x8],rax
   140001b34:	mov    r14,rax
   140001b37:	test   rax,rax
   140001b3a:	je     0x140001e8b
   140001b40:	mov    rdx,rax
   140001b43:	mov    rcx,r12
   140001b46:	call   0x140001944
   140001b4b:	mov    edi,eax
   140001b4d:	test   eax,eax
   140001b4f:	js     0x140001c5e
   140001b55:	mov    eax,DWORD PTR [rip+0x7b35]        # 0x140009690
   140001b5b:	lea    ecx,[r15+0x13]
   140001b5f:	lea    edx,[rcx-0x2]
   140001b62:	lea    r8d,[r15+0x8]
   140001b66:	test   al,0x1
   140001b68:	jne    0x140001bb3
   140001b6a:	or     eax,0x1
   140001b6d:	mov    WORD PTR [rip+0x7c5b],r8w        # 0x1400097d0
   140001b75:	mov    DWORD PTR [rip+0x7b15],eax        # 0x140009690
   140001b7b:	lea    rax,[rip+0x4a12]        # 0x140006594
   140001b82:	mov    QWORD PTR [rip+0x7c3f],rax        # 0x1400097c8
   140001b89:	lea    rax,[rip+0x4a08]        # 0x140006598
   140001b90:	mov    QWORD PTR [rip+0x7c41],rax        # 0x1400097d8
   140001b97:	lea    rax,[rip+0x49fe]        # 0x14000659c
   140001b9e:	mov    QWORD PTR [rip+0x7c43],rax        # 0x1400097e8
   140001ba5:	mov    WORD PTR [rip+0x7c34],cx        # 0x1400097e0
   140001bac:	mov    WORD PTR [rip+0x7c3d],dx        # 0x1400097f0
   140001bb3:	mov    edi,r15d
   140001bb6:	lea    rsi,[rip+0x7c0b]        # 0x1400097c8
   140001bbd:	mov    rdx,QWORD PTR [rsi]
   140001bc0:	mov    rcx,r14
   140001bc3:	call   QWORD PTR [rip+0x4667]        # 0x140006230
   140001bc9:	test   eax,eax
   140001bcb:	je     0x140001bef
   140001bcd:	inc    edi
   140001bcf:	add    rsi,0x10
   140001bd3:	movsxd rax,edi
   140001bd6:	cmp    rax,0x3
   140001bda:	jb     0x140001bbd
   140001bdc:	mov    rcx,r14
   140001bdf:	call   QWORD PTR [rip+0x4783]        # 0x140006368
   140001be5:	mov    edi,0x80020009
   140001bea:	jmp    0x140002116
   140001bef:	lea    rcx,[rip+0x7bd2]        # 0x1400097c8
   140001bf6:	movsxd rax,edi
   140001bf9:	add    rax,rax
   140001bfc:	movzx  r15d,WORD PTR [rcx+rax*8+0x8]
   140001c02:	mov    ecx,0x2000
   140001c07:	call   QWORD PTR [rip+0x4753]        # 0x140006360
   140001c0d:	mov    rsi,rax
   140001c10:	test   rax,rax
   140001c13:	je     0x140001e82
   140001c19:	mov    rcx,QWORD PTR [r12]
   140001c1d:	movzx  eax,WORD PTR [rcx]
   140001c20:	cmp    eax,0x20
   140001c23:	ja     0x140001c41
   140001c25:	movabs rdx,0x100002600
   140001c2f:	bt     rdx,rax
   140001c33:	jae    0x140001c41
   140001c35:	call   QWORD PTR [rip+0x45d5]        # 0x140006210
   140001c3b:	mov    QWORD PTR [r12],rax
   140001c3f:	jmp    0x140001c19
   140001c41:	mov    rdx,rsi
   140001c44:	mov    rcx,r12
   140001c47:	call   0x140001944
   140001c4c:	xor    r10d,r10d
   140001c4f:	mov    edi,eax
   140001c51:	test   eax,eax
   140001c53:	jns    0x140001c6c
   140001c55:	mov    rcx,rsi
   140001c58:	call   QWORD PTR [rip+0x470a]        # 0x140006368
   140001c5e:	mov    rcx,r14
   140001c61:	call   QWORD PTR [rip+0x4701]        # 0x140006368
   140001c67:	jmp    0x140002116
   140001c6c:	movzx  eax,r15w
   140001c70:	cmp    eax,0x8
   140001c73:	je     0x140001e1e
   140001c79:	cmp    eax,0x11
   140001c7c:	je     0x140001cbe
   140001c7e:	cmp    eax,0x13
   140001c81:	jne    0x1400020cd
   140001c87:	lea    r9,[rbp+0x20]
   140001c8b:	xor    r8d,r8d
   140001c8e:	xor    edx,edx
   140001c90:	mov    rcx,rsi
   140001c93:	call   QWORD PTR [rip+0x937f]        # 0x14000b018
   140001c99:	mov    eax,DWORD PTR [rbp+0x20]
   140001c9c:	mov    r9d,0x4
   140001ca2:	mov    DWORD PTR [rbp+0x0],eax
   140001ca5:	mov    rdx,r13
   140001ca8:	lea    rax,[rbp+0x0]
   140001cac:	mov    DWORD PTR [rsp+0x28],0x4
   140001cb4:	mov    QWORD PTR [rsp+0x20],rax
   140001cb9:	jmp    0x140001e09
   140001cbe:	or     r15,0xffffffffffffffff
   140001cc2:	inc    r15
   140001cc5:	cmp    WORD PTR [rsi+r15*2],r10w
   140001cca:	jne    0x140001cc2
   140001ccc:	test   r15b,0x1
   140001cd0:	jne    0x140001d46
   140001cd2:	mov    eax,r15d
   140001cd5:	cdq    
   140001cd6:	sub    eax,edx
   140001cd8:	sar    eax,1
   140001cda:	movsxd r13,eax
   140001cdd:	cmp    r13,0x400
   140001ce4:	ja     0x140001d1b
   140001ce6:	mov    rcx,r13
   140001ce9:	call   0x1400011bc
   140001cee:	xor    r10d,r10d
   140001cf1:	test   al,al
   140001cf3:	je     0x140001d1b
   140001cf5:	lea    rax,[r13+0xf]
   140001cf9:	cmp    rax,r13
   140001cfc:	ja     0x140001d08
   140001cfe:	movabs rax,0xffffffffffffff0
   140001d08:	and    rax,0xfffffffffffffff0
   140001d0c:	call   0x140005c10
   140001d11:	sub    rsp,rax
   140001d14:	lea    r12,[rsp+0x30]
   140001d19:	jmp    0x140001d41
   140001d1b:	lea    rcx,[r13+0x10]
   140001d1f:	cmp    rcx,r13
   140001d22:	jae    0x140001d29
   140001d24:	mov    r12,r10
   140001d27:	jmp    0x140001d41
   140001d29:	call   QWORD PTR [rip+0x4631]        # 0x140006360
   140001d2f:	xor    r10d,r10d
   140001d32:	test   rax,rax
   140001d35:	je     0x140001d24
   140001d37:	mov    QWORD PTR [rax],r10
   140001d3a:	lea    r12,[rax+0x10]
   140001d3e:	mov    rbx,rax
   140001d41:	test   r12,r12
   140001d44:	jne    0x140001d62
   140001d46:	mov    rcx,rsi
   140001d49:	call   QWORD PTR [rip+0x4619]        # 0x140006368
   140001d4f:	mov    rcx,r14
   140001d52:	call   QWORD PTR [rip+0x4610]        # 0x140006368
   140001d58:	mov    edi,0x80004005
   140001d5d:	jmp    0x140002111
   140001d62:	mov    r8,r13
   140001d65:	xor    edx,edx
   140001d67:	mov    rcx,r12
   140001d6a:	call   0x140005bce
   140001d6f:	xor    eax,eax
   140001d71:	movsxd r11,r15d
   140001d74:	mov    r9d,eax
   140001d77:	mov    r10d,eax
   140001d7a:	test   r15d,r15d
   140001d7d:	jle    0x140001df5
   140001d7f:	xor    r14d,r14d
   140001d82:	movzx  r8d,WORD PTR [rsi+r10*2]
   140001d87:	mov    eax,r8d
   140001d8a:	cmp    r8d,0x30
   140001d8e:	jl     0x140001db9
   140001d90:	cmp    eax,0x39
   140001d93:	jle    0x140001db3
   140001d95:	cmp    eax,0x40
   140001d98:	jle    0x140001db9
   140001d9a:	cmp    eax,0x46
   140001d9d:	jle    0x140001dad
   140001d9f:	add    eax,0xffffff9f
   140001da2:	cmp    eax,0x5
   140001da5:	ja     0x140001db9
   140001da7:	sub    r8b,0x57
   140001dab:	jmp    0x140001dbc
   140001dad:	sub    r8b,0x37
   140001db1:	jmp    0x140001dbc
   140001db3:	sub    r8b,0x30
   140001db7:	jmp    0x140001dbc
   140001db9:	mov    r8b,r14b
   140001dbc:	mov    eax,r9d
   140001dbf:	test   r9d,r9d
   140001dc2:	jns    0x140001dc8
   140001dc4:	lea    eax,[r9+0x1]
   140001dc8:	sar    eax,1
   140001dca:	mov    ecx,r9d
   140001dcd:	and    ecx,0x1
   140001dd0:	movsxd rdx,eax
   140001dd3:	shl    ecx,0x2
   140001dd6:	mov    eax,0x4
   140001ddb:	sub    eax,ecx
   140001ddd:	inc    r9d
   140001de0:	mov    cl,al
   140001de2:	inc    r10
   140001de5:	shl    r8b,cl
   140001de8:	or     BYTE PTR [rdx+r12*1],r8b
   140001dec:	cmp    r10,r11
   140001def:	jl     0x140001d82
   140001df1:	mov    r14,QWORD PTR [rbp+0x8]
   140001df5:	mov    rdx,QWORD PTR [rbp+0x30]
   140001df9:	mov    r9d,0x3
   140001dff:	mov    DWORD PTR [rsp+0x28],r13d
   140001e04:	mov    QWORD PTR [rsp+0x20],r12
   140001e09:	mov    rcx,QWORD PTR [rbp+0x10]
   140001e0d:	xor    r8d,r8d
   140001e10:	mov    rcx,QWORD PTR [rcx]
   140001e13:	call   QWORD PTR [rip+0x43b7]        # 0x1400061d0
   140001e19:	jmp    0x1400020cd
   140001e1e:	or     r15,0xffffffffffffffff
   140001e22:	mov    rcx,rsi
   140001e25:	mov    r13,r10
   140001e28:	cmp    BYTE PTR [rbp+0xa0],r10b
   140001e2f:	je     0x14000208a
   140001e35:	mov    rax,r15
   140001e38:	inc    rax
   140001e3b:	cmp    WORD PTR [rsi+rax*2],r10w
   140001e40:	jne    0x140001e38
   140001e42:	cmp    eax,0xffe
   140001e47:	jle    0x140001e62
   140001e49:	call   QWORD PTR [rip+0x4519]        # 0x140006368
   140001e4f:	mov    rcx,r14
   140001e52:	call   QWORD PTR [rip+0x4510]        # 0x140006368
   140001e58:	mov    edi,0x80004005
   140001e5d:	jmp    0x140002116
   140001e62:	mov    ecx,0x2000
   140001e67:	call   QWORD PTR [rip+0x44f3]        # 0x140006360
   140001e6d:	mov    QWORD PTR [rbp+0x8],rax
   140001e71:	mov    r13,rax
   140001e74:	test   rax,rax
   140001e77:	jne    0x140001e95
   140001e79:	mov    rcx,rsi
   140001e7c:	call   QWORD PTR [rip+0x44e6]        # 0x140006368
   140001e82:	mov    rcx,r14
   140001e85:	call   QWORD PTR [rip+0x44dd]        # 0x140006368
   140001e8b:	mov    edi,0x8007000e
   140001e90:	jmp    0x140002116
   140001e95:	mov    rdi,QWORD PTR [r12+0x8]
   140001e9a:	lea    rax,[rdi+0x10]
   140001e9e:	mov    rcx,rax
   140001ea1:	mov    QWORD PTR [rbp+0x18],rax
   140001ea5:	call   QWORD PTR [rip+0x43cd]        # 0x140006278
   140001eab:	xor    eax,eax
   140001ead:	mov    r12d,eax
   140001eb0:	cmp    DWORD PTR [rdi+0x8],eax
   140001eb3:	jle    0x140001ef1
   140001eb5:	mov    ecx,eax
   140001eb7:	mov    QWORD PTR [rbp+0x0],rax
   140001ebb:	mov    rax,QWORD PTR [rdi]
   140001ebe:	lea    rdx,[rip+0x48a3]        # 0x140006768
   140001ec5:	mov    rcx,QWORD PTR [rcx+rax*1]
   140001ec9:	mov    rcx,QWORD PTR [rcx]
   140001ecc:	call   QWORD PTR [rip+0x435e]        # 0x140006230
   140001ed2:	test   eax,eax
   140001ed4:	je     0x140002042
   140001eda:	mov    rcx,QWORD PTR [rbp+0x0]
   140001ede:	inc    r12d
   140001ee1:	add    rcx,0x8
   140001ee5:	mov    QWORD PTR [rbp+0x0],rcx
   140001ee9:	cmp    r12d,DWORD PTR [rdi+0x8]
   140001eed:	jl     0x140001ebb
   140001eef:	xor    eax,eax
   140001ef1:	mov    r12,rax
   140001ef4:	mov    rcx,QWORD PTR [rbp+0x18]
   140001ef8:	mov    QWORD PTR [rbp+0x0],r12
   140001efc:	call   QWORD PTR [rip+0x4356]        # 0x140006258
   140001f02:	xor    r10d,r10d
   140001f05:	test   r12,r12
   140001f08:	je     0x140002087
   140001f0e:	mov    rdi,rsi
   140001f11:	cmp    WORD PTR [r12],r10w
   140001f16:	je     0x140001f94
   140001f18:	cmp    WORD PTR [rsi],r10w
   140001f1c:	je     0x140001f91
   140001f1e:	mov    r12,rdi
   140001f21:	mov    r13,QWORD PTR [rbp+0x0]
   140001f25:	cmp    WORD PTR [rdi],r10w
   140001f29:	je     0x140001f75
   140001f2b:	cmp    WORD PTR [r13+0x0],r10w
   140001f30:	je     0x140001f94
   140001f32:	movzx  ecx,WORD PTR [r13+0x0]
   140001f37:	movzx  eax,WORD PTR [r12]
   140001f3c:	cmp    eax,ecx
   140001f3e:	jne    0x140001f75
   140001f40:	mov    rcx,r12
   140001f43:	call   QWORD PTR [rip+0x42c7]        # 0x140006210
   140001f49:	mov    rcx,r13
   140001f4c:	mov    QWORD PTR [rbp+0x18],rax
   140001f50:	call   QWORD PTR [rip+0x42ba]        # 0x140006210
   140001f56:	mov    rdx,QWORD PTR [rbp+0x18]
   140001f5a:	sub    rax,r13
   140001f5d:	mov    rcx,rdx
   140001f60:	sub    rcx,r12
   140001f63:	xor    rax,rcx
   140001f66:	test   rax,0xfffffffffffffffe
   140001f6c:	je     0x14000206b
   140001f72:	xor    r10d,r10d
   140001f75:	cmp    WORD PTR [r13+0x0],r10w
   140001f7a:	je     0x140001f94
   140001f7c:	mov    rcx,rdi
   140001f7f:	call   QWORD PTR [rip+0x428b]        # 0x140006210
   140001f85:	xor    r10d,r10d
   140001f88:	mov    rdi,rax
   140001f8b:	cmp    WORD PTR [rax],r10w
   140001f8f:	jne    0x140001f1e
   140001f91:	mov    rdi,r10
   140001f94:	test   rdi,rdi
   140001f97:	je     0x140002083
   140001f9d:	cmp    rdi,QWORD PTR [rbp+0x28]
   140001fa1:	je     0x140001fbc
   140001fa3:	mov    rdx,rdi
   140001fa6:	mov    rcx,rsi
   140001fa9:	call   QWORD PTR [rip+0x4269]        # 0x140006218
   140001faf:	xor    r10d,r10d
   140001fb2:	cmp    WORD PTR [rax],0x22
   140001fb6:	je     0x140002083
   140001fbc:	mov    r13,QWORD PTR [rbp+0x8]
   140001fc0:	mov    r8,rdi
   140001fc3:	sub    r8,rsi
   140001fc6:	mov    rdx,rsi
   140001fc9:	sar    r8,1
   140001fcc:	mov    rcx,r13
   140001fcf:	mov    WORD PTR [r13+0x0],r10w
   140001fd4:	call   QWORD PTR [rip+0x425e]        # 0x140006238
   140001fda:	lea    r8,[rip+0x4797]        # 0x140006778
   140001fe1:	mov    edx,0x1000
   140001fe6:	mov    rcx,r13
   140001fe9:	call   QWORD PTR [rip+0x4361]        # 0x140006350
   140001fef:	mov    r12,QWORD PTR [rbp+0x0]
   140001ff3:	mov    edx,0x1000
   140001ff8:	mov    r8,r12
   140001ffb:	mov    rcx,r13
   140001ffe:	call   QWORD PTR [rip+0x434c]        # 0x140006350
   140002004:	lea    r8,[rip+0x476d]        # 0x140006778
   14000200b:	mov    edx,0x1000
   140002010:	mov    rcx,r13
   140002013:	call   QWORD PTR [rip+0x4337]        # 0x140006350
   140002019:	mov    rax,r15
   14000201c:	xor    ecx,ecx
   14000201e:	inc    rax
   140002021:	cmp    WORD PTR [r12+rax*2],cx
   140002026:	jne    0x14000201e
   140002028:	lea    r8,[rdi+rax*2]
   14000202c:	mov    edx,0x1000
   140002031:	mov    rcx,r13
   140002034:	call   QWORD PTR [rip+0x4316]        # 0x140006350
   14000203a:	mov    rcx,r13
   14000203d:	xor    r10d,r10d
   140002040:	jmp    0x14000208a
   140002042:	mov    rax,QWORD PTR [rdi]
   140002045:	movsxd rcx,r12d
   140002048:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000204c:	mov    r12,QWORD PTR [rcx+0x8]
   140002050:	jmp    0x140001ef4
   140002055:	add    r12,0x2
   140002059:	add    r13,0x2
   14000205d:	movzx  ecx,WORD PTR [r13+0x0]
   140002062:	movzx  eax,WORD PTR [r12]
   140002067:	cmp    eax,ecx
   140002069:	je     0x140002070
   14000206b:	cmp    r12,rdx
   14000206e:	jb     0x140002055
   140002070:	xor    r10d,r10d
   140002073:	cmp    WORD PTR [r12],r10w
   140002078:	jne    0x140001f2b
   14000207e:	jmp    0x140001f75
   140002083:	mov    r13,QWORD PTR [rbp+0x8]
   140002087:	mov    rcx,rsi
   14000208a:	inc    r15
   14000208d:	cmp    WORD PTR [rcx+r15*2],r10w
   140002092:	jne    0x14000208a
   140002094:	mov    rdx,QWORD PTR [rbp+0x30]
   140002098:	lea    eax,[r15*2+0x2]
   1400020a0:	mov    DWORD PTR [rsp+0x28],eax
   1400020a4:	mov    r9d,0x1
   1400020aa:	mov    QWORD PTR [rsp+0x20],rcx
   1400020af:	xor    r8d,r8d
   1400020b2:	mov    rcx,QWORD PTR [rbp+0x10]
   1400020b6:	mov    rcx,QWORD PTR [rcx]
   1400020b9:	call   QWORD PTR [rip+0x4111]        # 0x1400061d0
   1400020bf:	test   r13,r13
   1400020c2:	je     0x1400020cd
   1400020c4:	mov    rcx,r13
   1400020c7:	call   QWORD PTR [rip+0x429b]        # 0x140006368
   1400020cd:	mov    rdx,QWORD PTR [rbp+0x28]
   1400020d1:	mov    rcx,QWORD PTR [rbp+0x38]
   1400020d5:	call   0x140001944
   1400020da:	xor    r13d,r13d
   1400020dd:	mov    edi,eax
   1400020df:	mov    rcx,rsi
   1400020e2:	test   eax,eax
   1400020e4:	jns    0x1400020f1
   1400020e6:	call   QWORD PTR [rip+0x427c]        # 0x140006368
   1400020ec:	mov    rcx,r14
   1400020ef:	jmp    0x14000210b
   1400020f1:	call   QWORD PTR [rip+0x4271]        # 0x140006368
   1400020f7:	mov    rcx,r14
   1400020fa:	call   QWORD PTR [rip+0x4268]        # 0x140006368
   140002100:	mov    edi,r13d
   140002103:	jmp    0x140002111
   140002105:	mov    rcx,rbx
   140002108:	mov    rbx,QWORD PTR [rbx]
   14000210b:	call   QWORD PTR [rip+0x4257]        # 0x140006368
   140002111:	test   rbx,rbx
   140002114:	jne    0x140002105
   140002116:	mov    eax,edi
   140002118:	mov    rcx,QWORD PTR [rbp+0x40]
   14000211c:	xor    rcx,rbp
   14000211f:	call   0x140005220
   140002124:	mov    rbx,QWORD PTR [rbp+0x80]
   14000212b:	mov    rsi,QWORD PTR [rbp+0x88]
   140002132:	mov    rdi,QWORD PTR [rbp+0x90]
   140002139:	lea    rsp,[rbp+0x50]
   14000213d:	pop    r15
   14000213f:	pop    r14
   140002141:	pop    r13
   140002143:	pop    r12
   140002145:	pop    rbp
   140002146:	ret    
   140002147:	int3   
   140002148:	int3   
   140002149:	int3   
   14000214a:	int3   
   14000214b:	int3   
   14000214c:	int3   
   14000214d:	int3   
   14000214e:	int3   
   14000214f:	int3   
   140002150:	mov    QWORD PTR [rsp+0x8],rbx
   140002155:	mov    QWORD PTR [rsp+0x10],rbp
   14000215a:	mov    QWORD PTR [rsp+0x18],rsi
   14000215f:	push   rdi
   140002160:	sub    rsp,0x20
   140002164:	mov    rdi,rcx
   140002167:	mov    rsi,rdx
   14000216a:	mov    ecx,0x2000
   14000216f:	call   QWORD PTR [rip+0x41eb]        # 0x140006360
   140002175:	mov    rbp,rax
   140002178:	test   rax,rax
   14000217b:	jne    0x140002184
   14000217d:	mov    eax,0x8007000e
   140002182:	jmp    0x1400021f0
   140002184:	cmp    WORD PTR [rsi],0x3d
   140002188:	jne    0x1400021e3
   14000218a:	mov    rdx,rsi
   14000218d:	mov    rcx,rdi
   140002190:	call   0x140001944
   140002195:	mov    ebx,eax
   140002197:	test   eax,eax
   140002199:	js     0x1400021e5
   14000219b:	mov    rcx,QWORD PTR [rdi]
   14000219e:	movzx  eax,WORD PTR [rcx]
   1400021a1:	cmp    eax,0x20
   1400021a4:	ja     0x1400021c1
   1400021a6:	movabs rdx,0x100002600
   1400021b0:	bt     rdx,rax
   1400021b4:	jae    0x1400021c1
   1400021b6:	call   QWORD PTR [rip+0x4054]        # 0x140006210
   1400021bc:	mov    QWORD PTR [rdi],rax
   1400021bf:	jmp    0x14000219b
   1400021c1:	mov    rdx,rbp
   1400021c4:	mov    rcx,rdi
   1400021c7:	call   0x140001944
   1400021cc:	mov    ebx,eax
   1400021ce:	test   eax,eax
   1400021d0:	js     0x1400021e5
   1400021d2:	mov    rdx,rsi
   1400021d5:	mov    rcx,rdi
   1400021d8:	call   0x140001944
   1400021dd:	mov    ebx,eax
   1400021df:	test   eax,eax
   1400021e1:	js     0x1400021e5
   1400021e3:	xor    ebx,ebx
   1400021e5:	mov    rcx,rbp
   1400021e8:	call   QWORD PTR [rip+0x417a]        # 0x140006368
   1400021ee:	mov    eax,ebx
   1400021f0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400021f5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400021fa:	mov    rsi,QWORD PTR [rsp+0x40]
   1400021ff:	add    rsp,0x20
   140002203:	pop    rdi
   140002204:	ret    
   140002205:	int3   
   140002206:	int3   
   140002207:	int3   
   140002208:	int3   
   140002209:	int3   
   14000220a:	int3   
   14000220b:	int3   
   14000220c:	mov    QWORD PTR [rsp+0x10],rbx
   140002211:	push   rbp
   140002212:	push   rsi
   140002213:	push   rdi
   140002214:	push   r12
   140002216:	push   r13
   140002218:	push   r14
   14000221a:	push   r15
   14000221c:	sub    rsp,0x90
   140002223:	mov    rax,QWORD PTR [rip+0x6dde]        # 0x140009008
   14000222a:	xor    rax,rsp
   14000222d:	mov    QWORD PTR [rsp+0x80],rax
   140002235:	xor    ebx,ebx
   140002237:	mov    QWORD PTR [rsp+0x30],r8
   14000223c:	mov    r12,r8
   14000223f:	mov    rsi,rdx
   140002242:	mov    r15,rcx
   140002245:	test   rdx,rdx
   140002248:	je     0x140002484
   14000224e:	test   r8,r8
   140002251:	je     0x140002484
   140002257:	mov    QWORD PTR [r8],rbx
   14000225a:	mov    ebp,ebx
   14000225c:	or     rax,0xffffffffffffffff
   140002260:	inc    rax
   140002263:	cmp    WORD PTR [rdx+rax*2],bx
   140002267:	jne    0x140002260
   140002269:	lea    r14d,[rax*2+0x2]
   140002271:	movsxd rcx,r14d
   140002274:	add    rcx,rcx
   140002277:	call   QWORD PTR [rip+0x3db3]        # 0x140006030
   14000227d:	mov    rdi,rax
   140002280:	test   rax,rax
   140002283:	je     0x140002472
   140002289:	mov    QWORD PTR [r15],rsi
   14000228c:	cmp    WORD PTR [rsi],bx
   14000228f:	je     0x14000242f
   140002295:	mov    rsi,QWORD PTR [r15]
   140002298:	cmp    WORD PTR [rsi],0x25
   14000229c:	jne    0x1400023e5
   1400022a2:	mov    rcx,rsi
   1400022a5:	call   QWORD PTR [rip+0x3f65]        # 0x140006210
   1400022ab:	mov    QWORD PTR [r15],rax
   1400022ae:	mov    rsi,rax
   1400022b1:	cmp    WORD PTR [rax],0x25
   1400022b5:	je     0x1400023e5
   1400022bb:	test   rax,rax
   1400022be:	je     0x140002374
   1400022c4:	movzx  eax,WORD PTR [rax]
   1400022c7:	test   ax,ax
   1400022ca:	je     0x140002374
   1400022d0:	cmp    ax,0x25
   1400022d4:	je     0x1400022e4
   1400022d6:	mov    rcx,rsi
   1400022d9:	call   QWORD PTR [rip+0x3f31]        # 0x140006210
   1400022df:	mov    rsi,rax
   1400022e2:	jmp    0x1400022c4
   1400022e4:	test   rsi,rsi
   1400022e7:	je     0x140002374
   1400022ed:	mov    rax,rsi
   1400022f0:	sub    rax,QWORD PTR [r15]
   1400022f3:	sar    rax,1
   1400022f6:	cmp    eax,0x1f
   1400022f9:	jg     0x14000246b
   1400022ff:	mov    rdx,QWORD PTR [r15]
   140002302:	lea    r8d,[rax+0x1]
   140002306:	lea    rcx,[rsp+0x40]
   14000230b:	call   QWORD PTR [rip+0x3f27]        # 0x140006238
   140002311:	mov    r13,QWORD PTR [r15+0x8]
   140002315:	lea    rax,[r13+0x10]
   140002319:	mov    rcx,rax
   14000231c:	mov    QWORD PTR [rsp+0x28],rax
   140002321:	call   QWORD PTR [rip+0x3f51]        # 0x140006278
   140002327:	mov    r12,rbx
   14000232a:	mov    DWORD PTR [rsp+0x20],ebx
   14000232e:	cmp    DWORD PTR [r13+0x8],ebx
   140002332:	jle    0x140002361
   140002334:	mov    rax,QWORD PTR [r13+0x0]
   140002338:	lea    rdx,[rsp+0x40]
   14000233d:	mov    rcx,QWORD PTR [rax+r12*8]
   140002341:	mov    rcx,QWORD PTR [rcx]
   140002344:	call   QWORD PTR [rip+0x3ee6]        # 0x140006230
   14000234a:	test   eax,eax
   14000234c:	je     0x14000237e
   14000234e:	mov    eax,DWORD PTR [rsp+0x20]
   140002352:	inc    r12
   140002355:	inc    eax
   140002357:	mov    DWORD PTR [rsp+0x20],eax
   14000235b:	cmp    eax,DWORD PTR [r13+0x8]
   14000235f:	jl     0x140002334
   140002361:	mov    r12,rbx
   140002364:	mov    rcx,QWORD PTR [rsp+0x28]
   140002369:	call   QWORD PTR [rip+0x3ee9]        # 0x140006258
   14000236f:	test   r12,r12
   140002372:	jne    0x1400023c6
   140002374:	mov    eax,0x80020009
   140002379:	jmp    0x140002477
   14000237e:	mov    rax,QWORD PTR [r13+0x0]
   140002382:	mov    rcx,QWORD PTR [rax+r12*8]
   140002386:	mov    r12,QWORD PTR [rcx+0x8]
   14000238a:	jmp    0x140002364
   14000238c:	lea    r13d,[rbp+0x1]
   140002390:	cmp    r13d,r14d
   140002393:	jle    0x1400023b3
   140002395:	add    r14d,r14d
   140002398:	mov    rcx,rdi
   14000239b:	movsxd rdx,r14d
   14000239e:	add    rdx,rdx
   1400023a1:	call   QWORD PTR [rip+0x3c71]        # 0x140006018
   1400023a7:	test   rax,rax
   1400023aa:	je     0x140002472
   1400023b0:	mov    rdi,rax
   1400023b3:	movzx  eax,WORD PTR [r12]
   1400023b8:	add    r12,0x2
   1400023bc:	movsxd rcx,ebp
   1400023bf:	mov    ebp,r13d
   1400023c2:	mov    WORD PTR [rdi+rcx*2],ax
   1400023c6:	cmp    WORD PTR [r12],bx
   1400023cb:	jne    0x14000238c
   1400023cd:	cmp    QWORD PTR [r15],rsi
   1400023d0:	je     0x140002415
   1400023d2:	mov    rcx,QWORD PTR [r15]
   1400023d5:	call   QWORD PTR [rip+0x3e35]        # 0x140006210
   1400023db:	mov    QWORD PTR [r15],rax
   1400023de:	cmp    rax,rsi
   1400023e1:	jne    0x1400023d2
   1400023e3:	jmp    0x140002415
   1400023e5:	lea    r12d,[rbp+0x1]
   1400023e9:	cmp    r12d,r14d
   1400023ec:	jle    0x140002408
   1400023ee:	add    r14d,r14d
   1400023f1:	mov    rcx,rdi
   1400023f4:	movsxd rdx,r14d
   1400023f7:	add    rdx,rdx
   1400023fa:	call   QWORD PTR [rip+0x3c18]        # 0x140006018
   140002400:	test   rax,rax
   140002403:	je     0x140002472
   140002405:	mov    rdi,rax
   140002408:	movzx  eax,WORD PTR [rsi]
   14000240b:	movsxd rcx,ebp
   14000240e:	mov    ebp,r12d
   140002411:	mov    WORD PTR [rdi+rcx*2],ax
   140002415:	mov    rcx,QWORD PTR [r15]
   140002418:	call   QWORD PTR [rip+0x3df2]        # 0x140006210
   14000241e:	mov    QWORD PTR [r15],rax
   140002421:	cmp    WORD PTR [rax],bx
   140002424:	jne    0x140002295
   14000242a:	mov    r12,QWORD PTR [rsp+0x30]
   14000242f:	mov    rsi,QWORD PTR [r15]
   140002432:	lea    eax,[rbp+0x1]
   140002435:	cmp    eax,r14d
   140002438:	jle    0x140002455
   14000243a:	lea    eax,[r14+r14*1]
   14000243e:	mov    rcx,rdi
   140002441:	movsxd rdx,eax
   140002444:	add    rdx,rdx
   140002447:	call   QWORD PTR [rip+0x3bcb]        # 0x140006018
   14000244d:	test   rax,rax
   140002450:	je     0x140002472
   140002452:	mov    rdi,rax
   140002455:	movzx  eax,WORD PTR [rsi]
   140002458:	movsxd rcx,ebp
   14000245b:	mov    WORD PTR [rdi+rcx*2],ax
   14000245f:	mov    rax,rdi
   140002462:	mov    QWORD PTR [r12],rax
   140002466:	mov    rdi,rbx
   140002469:	jmp    0x140002479
   14000246b:	mov    eax,0x80004005
   140002470:	jmp    0x140002477
   140002472:	mov    eax,0x8007000e
   140002477:	mov    ebx,eax
   140002479:	mov    rcx,rdi
   14000247c:	call   QWORD PTR [rip+0x3b7e]        # 0x140006000
   140002482:	jmp    0x140002489
   140002484:	mov    ebx,0x80004003
   140002489:	mov    eax,ebx
   14000248b:	mov    rcx,QWORD PTR [rsp+0x80]
   140002493:	xor    rcx,rsp
   140002496:	call   0x140005220
   14000249b:	mov    rbx,QWORD PTR [rsp+0xd8]
   1400024a3:	add    rsp,0x90
   1400024aa:	pop    r15
   1400024ac:	pop    r14
   1400024ae:	pop    r13
   1400024b0:	pop    r12
   1400024b2:	pop    rdi
   1400024b3:	pop    rsi
   1400024b4:	pop    rbp
   1400024b5:	ret    
   1400024b6:	int3   
   1400024b7:	int3   
   1400024b8:	int3   
   1400024b9:	int3   
   1400024ba:	int3   
   1400024bb:	int3   
   1400024bc:	mov    rax,rsp
   1400024bf:	mov    QWORD PTR [rax+0x8],rbx
   1400024c3:	mov    QWORD PTR [rax+0x10],rbp
   1400024c7:	mov    QWORD PTR [rax+0x18],rsi
   1400024cb:	push   rdi
   1400024cc:	push   r12
   1400024ce:	push   r13
   1400024d0:	push   r14
   1400024d2:	push   r15
   1400024d4:	sub    rsp,0x40
   1400024d8:	mov    r12d,r8d
   1400024db:	xor    r13d,r13d
   1400024de:	lea    r8,[rax-0x38]
   1400024e2:	mov    QWORD PTR [rax-0x38],r13
   1400024e6:	mov    rsi,r9
   1400024e9:	mov    rdi,rcx
   1400024ec:	call   0x14000220c
   1400024f1:	mov    ebx,eax
   1400024f3:	test   eax,eax
   1400024f5:	js     0x140002617
   1400024fb:	mov    r15,QWORD PTR [rsp+0x30]
   140002500:	mov    QWORD PTR [rdi],r15
   140002503:	cmp    r13w,WORD PTR [r15]
   140002507:	je     0x14000260e
   14000250d:	mov    rdx,rsi
   140002510:	lea    r14,[rip+0x4499]        # 0x1400069b0
   140002517:	mov    rcx,rdi
   14000251a:	call   0x140001944
   14000251f:	mov    ebx,eax
   140002521:	test   eax,eax
   140002523:	js     0x14000260e
   140002529:	mov    ebp,r13d
   14000252c:	mov    rbx,r13
   14000252f:	mov    rdx,QWORD PTR [r14]
   140002532:	mov    rcx,rsi
   140002535:	call   QWORD PTR [rip+0x3cf5]        # 0x140006230
   14000253b:	test   eax,eax
   14000253d:	je     0x140002556
   14000253f:	inc    ebp
   140002541:	inc    rbx
   140002544:	movsxd rax,ebp
   140002547:	add    r14,0x10
   14000254b:	cmp    rax,0xe
   14000254f:	jb     0x14000252f
   140002551:	mov    rbp,r13
   140002554:	jmp    0x140002565
   140002556:	add    rbx,rbx
   140002559:	lea    rbp,[rip+0x4450]        # 0x1400069b0
   140002560:	mov    rbp,QWORD PTR [rbp+rbx*8+0x8]
   140002565:	test   rbp,rbp
   140002568:	je     0x140002609
   14000256e:	mov    rdx,rsi
   140002571:	mov    rcx,rdi
   140002574:	call   0x140001944
   140002579:	mov    ebx,eax
   14000257b:	test   eax,eax
   14000257d:	js     0x14000260e
   140002583:	mov    eax,0x7b
   140002588:	cmp    ax,WORD PTR [rsi]
   14000258b:	jne    0x140002609
   14000258d:	mov    DWORD PTR [rsp+0x20],r13d
   140002592:	mov    r8,rbp
   140002595:	mov    rdx,rsi
   140002598:	mov    rcx,rdi
   14000259b:	test   r12d,r12d
   14000259e:	je     0x1400025cc
   1400025a0:	mov    r14,QWORD PTR [rdi]
   1400025a3:	mov    r9d,r12d
   1400025a6:	call   0x140002648
   1400025ab:	mov    ebx,eax
   1400025ad:	test   eax,eax
   1400025af:	jns    0x1400025da
   1400025b1:	xor    r9d,r9d
   1400025b4:	mov    QWORD PTR [rdi],r14
   1400025b7:	mov    r8,rbp
   1400025ba:	mov    DWORD PTR [rsp+0x20],r13d
   1400025bf:	mov    rdx,rsi
   1400025c2:	mov    rcx,rdi
   1400025c5:	call   0x140002648
   1400025ca:	jmp    0x14000260e
   1400025cc:	xor    r9d,r9d
   1400025cf:	call   0x140002648
   1400025d4:	mov    ebx,eax
   1400025d6:	test   eax,eax
   1400025d8:	js     0x14000260e
   1400025da:	mov    rcx,QWORD PTR [rdi]
   1400025dd:	movzx  eax,WORD PTR [rcx]
   1400025e0:	cmp    eax,0x20
   1400025e3:	ja     0x140002600
   1400025e5:	movabs rdx,0x100002600
   1400025ef:	bt     rdx,rax
   1400025f3:	jae    0x140002600
   1400025f5:	call   QWORD PTR [rip+0x3c15]        # 0x140006210
   1400025fb:	mov    QWORD PTR [rdi],rax
   1400025fe:	jmp    0x1400025da
   140002600:	cmp    r13w,WORD PTR [rcx]
   140002604:	jmp    0x140002507
   140002609:	mov    ebx,0x80020009
   14000260e:	mov    rcx,r15
   140002611:	call   QWORD PTR [rip+0x39e9]        # 0x140006000
   140002617:	mov    rcx,rsi
   14000261a:	call   QWORD PTR [rip+0x3d48]        # 0x140006368
   140002620:	lea    r11,[rsp+0x40]
   140002625:	mov    eax,ebx
   140002627:	mov    rbx,QWORD PTR [r11+0x30]
   14000262b:	mov    rbp,QWORD PTR [r11+0x38]
   14000262f:	mov    rsi,QWORD PTR [r11+0x40]
   140002633:	mov    rsp,r11
   140002636:	pop    r15
   140002638:	pop    r14
   14000263a:	pop    r13
   14000263c:	pop    r12
   14000263e:	pop    rdi
   14000263f:	ret    
   140002640:	int3   
   140002641:	int3   
   140002642:	int3   
   140002643:	int3   
   140002644:	int3   
   140002645:	int3   
   140002646:	int3   
   140002647:	int3   
   140002648:	rex push rbp
   14000264a:	push   rbx
   14000264b:	push   rsi
   14000264c:	push   rdi
   14000264d:	sub    rsp,0x2f8
   140002654:	lea    rbp,[rsp+0x60]
   140002659:	mov    rax,QWORD PTR [rip+0x69a8]        # 0x140009008
   140002660:	xor    rax,rbp
   140002663:	mov    QWORD PTR [rbp+0x280],rax
   14000266a:	mov    rax,rcx
   14000266d:	mov    QWORD PTR [rbp+0x8],rcx
   140002671:	xor    ecx,ecx
   140002673:	mov    DWORD PTR [rbp+0x0],r9d
   140002677:	mov    ebx,ecx
   140002679:	mov    QWORD PTR [rbp+0x30],rcx
   14000267d:	mov    QWORD PTR [rbp+0x38],rcx
   140002681:	mov    rsi,rdx
   140002684:	mov    QWORD PTR [rbp+0x40],rcx
   140002688:	mov    QWORD PTR [rbp+0x28],rcx
   14000268c:	mov    ecx,DWORD PTR [rbp+0x2e0]
   140002692:	mov    DWORD PTR [rbp+0x68],ecx
   140002695:	mov    rcx,rax
   140002698:	mov    QWORD PTR [rbp+0x20],r8
   14000269c:	mov    DWORD PTR [rbp+0x48],0x1
   1400026a3:	call   0x140001944
   1400026a8:	mov    edi,eax
   1400026aa:	test   eax,eax
   1400026ac:	js     0x140002ec8
   1400026b2:	cmp    WORD PTR [rsi],0x7d
   1400026b6:	je     0x140002e9a
   1400026bc:	lea    rdx,[rip+0x3f15]        # 0x1400065d8
   1400026c3:	mov    rcx,rsi
   1400026c6:	call   QWORD PTR [rip+0x3b64]        # 0x140006230
   1400026cc:	xor    ecx,ecx
   1400026ce:	lea    rdx,[rip+0x3ed3]        # 0x1400065a8
   1400026d5:	mov    edi,ecx
   1400026d7:	test   eax,eax
   1400026d9:	mov    rcx,rsi
   1400026dc:	sete   dil
   1400026e0:	mov    DWORD PTR [rbp+0x18],edi
   1400026e3:	call   QWORD PTR [rip+0x3b47]        # 0x140006230
   1400026e9:	test   eax,eax
   1400026eb:	je     0x1400026f5
   1400026ed:	test   edi,edi
   1400026ef:	je     0x14000278e
   1400026f5:	mov    rcx,QWORD PTR [rbp+0x8]
   1400026f9:	mov    rdx,rsi
   1400026fc:	call   0x140001944
   140002701:	xor    edx,edx
   140002703:	mov    edi,eax
   140002705:	test   eax,eax
   140002707:	js     0x140002e9a
   14000270d:	cmp    DWORD PTR [rbp+0x0],edx
   140002710:	je     0x14000278e
   140002712:	movzx  eax,WORD PTR [rsi]
   140002715:	mov    rcx,rsi
   140002718:	mov    QWORD PTR [rbp+0x50],rdx
   14000271c:	mov    QWORD PTR [rbp+0x58],rdx
   140002720:	mov    QWORD PTR [rbp+0x60],rdx
   140002724:	jmp    0x140002738
   140002726:	cmp    ax,0x5c
   14000272a:	je     0x14000273f
   14000272c:	call   QWORD PTR [rip+0x3ade]        # 0x140006210
   140002732:	mov    rcx,rax
   140002735:	movzx  eax,WORD PTR [rax]
   140002738:	test   ax,ax
   14000273b:	jne    0x140002726
   14000273d:	jmp    0x140002748
   14000273f:	test   rcx,rcx
   140002742:	jne    0x140002e95
   140002748:	lea    rdi,[rip+0x4239]        # 0x140006988
   14000274f:	mov    rdx,QWORD PTR [rdi]
   140002752:	mov    rcx,rsi
   140002755:	call   QWORD PTR [rip+0x3ad5]        # 0x140006230
   14000275b:	test   eax,eax
   14000275d:	je     0x140002783
   14000275f:	add    rdi,0x8
   140002763:	lea    rax,[rip+0x422e]        # 0x140006998
   14000276a:	cmp    rdi,rax
   14000276d:	jl     0x14000274f
   14000276f:	mov    rax,QWORD PTR [rbp+0x20]
   140002773:	lea    rcx,[rbp+0x50]
   140002777:	mov    rdx,rsi
   14000277a:	mov    QWORD PTR [rbp+0x50],rax
   14000277e:	call   0x14000141c
   140002783:	xor    eax,eax
   140002785:	cmp    DWORD PTR [rbp+0x18],eax
   140002788:	jne    0x140002ddc
   14000278e:	lea    rdx,[rip+0x3e2b]        # 0x1400065c0
   140002795:	mov    rcx,rsi
   140002798:	call   QWORD PTR [rip+0x3a92]        # 0x140006230
   14000279e:	xor    ecx,ecx
   1400027a0:	test   eax,eax
   1400027a2:	jne    0x1400027bd
   1400027a4:	mov    DWORD PTR [rbp+0x48],ecx
   1400027a7:	mov    rdx,rsi
   1400027aa:	mov    rcx,QWORD PTR [rbp+0x8]
   1400027ae:	call   0x140001944
   1400027b3:	mov    edi,eax
   1400027b5:	test   eax,eax
   1400027b7:	js     0x140002e9a
   1400027bd:	lea    rdx,[rip+0x3ddc]        # 0x1400065a0
   1400027c4:	mov    rcx,rsi
   1400027c7:	call   QWORD PTR [rip+0x3a63]        # 0x140006230
   1400027cd:	xor    edx,edx
   1400027cf:	test   eax,eax
   1400027d1:	jne    0x1400028b8
   1400027d7:	mov    rcx,QWORD PTR [rbp+0x8]
   1400027db:	lea    rdx,[rbp+0x70]
   1400027df:	call   0x140001944
   1400027e4:	mov    edi,eax
   1400027e6:	test   eax,eax
   1400027e8:	js     0x140002e9a
   1400027ee:	mov    rcx,QWORD PTR [rbp+0x8]
   1400027f2:	mov    rdx,rsi
   1400027f5:	call   0x140001944
   1400027fa:	xor    edx,edx
   1400027fc:	mov    edi,eax
   1400027fe:	test   eax,eax
   140002800:	js     0x140002e9a
   140002806:	cmp    WORD PTR [rsi],0x3d
   14000280a:	jne    0x140002e95
   140002810:	cmp    DWORD PTR [rbp+0x0],edx
   140002813:	je     0x140002836
   140002815:	mov    rax,QWORD PTR [rbp+0x20]
   140002819:	lea    r8,[rbp+0x70]
   14000281d:	mov    QWORD PTR [rbp+0x58],rdx
   140002821:	mov    QWORD PTR [rbp+0x60],rdx
   140002825:	mov    BYTE PTR [rsp+0x20],dl
   140002829:	lea    rdx,[rbp+0x50]
   14000282d:	mov    QWORD PTR [rbp+0x50],rax
   140002831:	jmp    0x140002a5b
   140002836:	cmp    DWORD PTR [rbp+0x2e0],edx
   14000283c:	jne    0x1400028a7
   14000283e:	mov    rcx,QWORD PTR [rbp+0x20]
   140002842:	lea    rax,[rbp+0x18]
   140002846:	mov    r9d,0x20006
   14000284c:	mov    QWORD PTR [rsp+0x20],rax
   140002851:	xor    r8d,r8d
   140002854:	mov    QWORD PTR [rbp+0x10],rdx
   140002858:	mov    rdi,rdx
   14000285b:	mov    QWORD PTR [rbp+0x18],rdx
   14000285f:	call   QWORD PTR [rip+0x3983]        # 0x1400061e8
   140002865:	xor    edx,edx
   140002867:	test   eax,eax
   140002869:	jne    0x140002e6f
   14000286f:	mov    rdi,QWORD PTR [rbp+0x18]
   140002873:	mov    eax,edx
   140002875:	mov    QWORD PTR [rbp+0x10],rdi
   140002879:	test   eax,eax
   14000287b:	jne    0x140002e6f
   140002881:	lea    rdx,[rbp+0x70]
   140002885:	mov    rcx,rdi
   140002888:	call   QWORD PTR [rip+0x392a]        # 0x1400061b8
   14000288e:	test   eax,0xfffffffd
   140002893:	jne    0x140002e6f
   140002899:	test   rdi,rdi
   14000289c:	je     0x1400028a7
   14000289e:	mov    rcx,rdi
   1400028a1:	call   QWORD PTR [rip+0x3931]        # 0x1400061d8
   1400028a7:	mov    rcx,QWORD PTR [rbp+0x8]
   1400028ab:	mov    rdx,rsi
   1400028ae:	call   0x140002150
   1400028b3:	jmp    0x140002e64
   1400028b8:	movzx  eax,WORD PTR [rsi]
   1400028bb:	mov    rcx,rsi
   1400028be:	jmp    0x1400028d4
   1400028c0:	cmp    ax,0x5c
   1400028c4:	je     0x1400028db
   1400028c6:	call   QWORD PTR [rip+0x3944]        # 0x140006210
   1400028cc:	mov    rcx,rax
   1400028cf:	xor    edx,edx
   1400028d1:	movzx  eax,WORD PTR [rax]
   1400028d4:	test   ax,ax
   1400028d7:	jne    0x1400028c0
   1400028d9:	jmp    0x1400028e4
   1400028db:	test   rcx,rcx
   1400028de:	jne    0x140002e95
   1400028e4:	cmp    DWORD PTR [rbp+0x0],edx
   1400028e7:	je     0x140002a6c
   1400028ed:	mov    rcx,QWORD PTR [rbp+0x20]
   1400028f1:	lea    rax,[rbp+0x10]
   1400028f5:	mov    QWORD PTR [rbp+0x10],rdx
   1400028f9:	mov    r9d,0xf003f
   1400028ff:	mov    rdx,rsi
   140002902:	mov    QWORD PTR [rsp+0x20],rax
   140002907:	xor    r8d,r8d
   14000290a:	call   QWORD PTR [rip+0x38d8]        # 0x1400061e8
   140002910:	xor    edx,edx
   140002912:	test   eax,eax
   140002914:	jne    0x140002940
   140002916:	mov    rax,QWORD PTR [rbp+0x30]
   14000291a:	mov    ecx,edx
   14000291c:	test   rax,rax
   14000291f:	je     0x14000292e
   140002921:	mov    rcx,rax
   140002924:	call   QWORD PTR [rip+0x38ae]        # 0x1400061d8
   14000292a:	mov    ecx,eax
   14000292c:	xor    edx,edx
   14000292e:	mov    rdi,QWORD PTR [rbp+0x10]
   140002932:	mov    QWORD PTR [rbp+0x30],rdi
   140002936:	test   ecx,ecx
   140002938:	je     0x1400029f3
   14000293e:	jmp    0x140002944
   140002940:	mov    rdi,QWORD PTR [rbp+0x30]
   140002944:	mov    rcx,QWORD PTR [rbp+0x20]
   140002948:	lea    rax,[rbp+0x10]
   14000294c:	mov    QWORD PTR [rbp+0x10],rdx
   140002950:	mov    r9d,0x20019
   140002956:	mov    rdx,rsi
   140002959:	mov    QWORD PTR [rsp+0x20],rax
   14000295e:	xor    r8d,r8d
   140002961:	call   QWORD PTR [rip+0x3881]        # 0x1400061e8
   140002967:	xor    edx,edx
   140002969:	test   eax,eax
   14000296b:	jne    0x14000298b
   14000296d:	mov    eax,edx
   14000296f:	test   rdi,rdi
   140002972:	je     0x14000297f
   140002974:	mov    rcx,rdi
   140002977:	call   QWORD PTR [rip+0x385b]        # 0x1400061d8
   14000297d:	xor    edx,edx
   14000297f:	mov    rdi,QWORD PTR [rbp+0x10]
   140002983:	mov    QWORD PTR [rbp+0x30],rdi
   140002987:	test   eax,eax
   140002989:	je     0x1400029f3
   14000298b:	mov    rcx,QWORD PTR [rbp+0x20]
   14000298f:	lea    rax,[rbp+0x6c]
   140002993:	mov    QWORD PTR [rsp+0x40],rax
   140002998:	xor    r9d,r9d
   14000299b:	lea    rax,[rbp+0x10]
   14000299f:	mov    QWORD PTR [rbp+0x10],rdx
   1400029a3:	mov    QWORD PTR [rsp+0x38],rax
   1400029a8:	xor    r8d,r8d
   1400029ab:	mov    QWORD PTR [rsp+0x30],rdx
   1400029b0:	mov    DWORD PTR [rsp+0x28],0x2001f
   1400029b8:	mov    DWORD PTR [rsp+0x20],edx
   1400029bc:	mov    rdx,rsi
   1400029bf:	call   QWORD PTR [rip+0x3803]        # 0x1400061c8
   1400029c5:	xor    edx,edx
   1400029c7:	test   eax,eax
   1400029c9:	jne    0x140002e95
   1400029cf:	mov    ecx,edx
   1400029d1:	test   rdi,rdi
   1400029d4:	je     0x1400029e3
   1400029d6:	mov    rcx,rdi
   1400029d9:	call   QWORD PTR [rip+0x37f9]        # 0x1400061d8
   1400029df:	mov    ecx,eax
   1400029e1:	xor    edx,edx
   1400029e3:	mov    rax,QWORD PTR [rbp+0x10]
   1400029e7:	mov    QWORD PTR [rbp+0x30],rax
   1400029eb:	test   ecx,ecx
   1400029ed:	jne    0x140002e95
   1400029f3:	movzx  eax,WORD PTR [rsi]
   1400029f6:	mov    ecx,0xffdf
   1400029fb:	sub    ax,0x4c
   1400029ff:	mov    dil,dl
   140002a02:	mov    DWORD PTR [rbp+0x18],edi
   140002a05:	test   cx,ax
   140002a08:	jne    0x140002a2b
   140002a0a:	lea    rdx,[rip+0x3d6f]        # 0x140006780
   140002a11:	mov    rcx,rsi
   140002a14:	call   QWORD PTR [rip+0x3816]        # 0x140006230
   140002a1a:	test   eax,eax
   140002a1c:	movzx  edi,dil
   140002a20:	mov    eax,0x1
   140002a25:	cmove  edi,eax
   140002a28:	mov    DWORD PTR [rbp+0x18],edi
   140002a2b:	mov    rcx,QWORD PTR [rbp+0x8]
   140002a2f:	mov    rdx,rsi
   140002a32:	call   0x140001944
   140002a37:	xor    edx,edx
   140002a39:	mov    edi,eax
   140002a3b:	test   eax,eax
   140002a3d:	js     0x140002e9a
   140002a43:	cmp    WORD PTR [rsi],0x3d
   140002a47:	jne    0x140002e0a
   140002a4d:	mov    eax,DWORD PTR [rbp+0x18]
   140002a50:	lea    rdx,[rbp+0x30]
   140002a54:	mov    BYTE PTR [rsp+0x20],al
   140002a58:	xor    r8d,r8d
   140002a5b:	mov    rcx,QWORD PTR [rbp+0x8]
   140002a5f:	mov    r9,rsi
   140002a62:	call   0x140001ad0
   140002a67:	jmp    0x140002dfe
   140002a6c:	mov    edi,DWORD PTR [rbp+0x2e0]
   140002a72:	test   edi,edi
   140002a74:	jne    0x140002ace
   140002a76:	mov    rcx,QWORD PTR [rbp+0x20]
   140002a7a:	lea    rax,[rbp+0x10]
   140002a7e:	mov    QWORD PTR [rbp+0x10],rdx
   140002a82:	mov    r9d,0x20019
   140002a88:	mov    rdx,rsi
   140002a8b:	mov    QWORD PTR [rsp+0x20],rax
   140002a90:	xor    r8d,r8d
   140002a93:	call   QWORD PTR [rip+0x374f]        # 0x1400061e8
   140002a99:	xor    edx,edx
   140002a9b:	test   eax,eax
   140002a9d:	jne    0x140002ac1
   140002a9f:	mov    rax,QWORD PTR [rbp+0x30]
   140002aa3:	mov    ecx,edx
   140002aa5:	test   rax,rax
   140002aa8:	je     0x140002ab5
   140002aaa:	mov    rcx,rax
   140002aad:	call   QWORD PTR [rip+0x3725]        # 0x1400061d8
   140002ab3:	mov    ecx,eax
   140002ab5:	mov    rax,QWORD PTR [rbp+0x10]
   140002ab9:	mov    QWORD PTR [rbp+0x30],rax
   140002abd:	test   ecx,ecx
   140002abf:	je     0x140002ace
   140002ac1:	mov    eax,0x1
   140002ac6:	mov    edi,eax
   140002ac8:	mov    DWORD PTR [rbp+0x2e0],eax
   140002ace:	mov    rcx,QWORD PTR [rbp+0x28]
   140002ad2:	test   rcx,rcx
   140002ad5:	jne    0x140002b2a
   140002ad7:	mov    ecx,0x208
   140002adc:	call   0x1400011bc
   140002ae1:	test   al,al
   140002ae3:	je     0x140002af9
   140002ae5:	mov    eax,DWORD PTR [rsp]
   140002ae8:	mov    eax,0x210
   140002aed:	sub    rsp,rax
   140002af0:	lea    rcx,[rsp+0x60]
   140002af5:	mov    eax,DWORD PTR [rcx]
   140002af7:	jmp    0x140002b1d
   140002af9:	mov    ecx,0x218
   140002afe:	call   QWORD PTR [rip+0x385c]        # 0x140006360
   140002b04:	xor    edx,edx
   140002b06:	test   rax,rax
   140002b09:	jne    0x140002b13
   140002b0b:	mov    ecx,edx
   140002b0d:	mov    QWORD PTR [rbp+0x28],rdx
   140002b11:	jmp    0x140002b21
   140002b13:	mov    QWORD PTR [rax],rbx
   140002b16:	lea    rcx,[rax+0x10]
   140002b1a:	mov    rbx,rax
   140002b1d:	mov    QWORD PTR [rbp+0x28],rcx
   140002b21:	test   rcx,rcx
   140002b24:	je     0x140002e8e
   140002b2a:	mov    r8d,0x104
   140002b30:	mov    rdx,rsi
   140002b33:	call   QWORD PTR [rip+0x36ff]        # 0x140006238
   140002b39:	xor    eax,eax
   140002b3b:	test   edi,edi
   140002b3d:	jne    0x140002c6b
   140002b43:	mov    rdi,QWORD PTR [rbp+0x30]
   140002b47:	xor    r9d,r9d
   140002b4a:	mov    QWORD PTR [rsp+0x58],rax
   140002b4f:	xor    r8d,r8d
   140002b52:	mov    QWORD PTR [rsp+0x50],rax
   140002b57:	xor    edx,edx
   140002b59:	mov    QWORD PTR [rsp+0x48],rax
   140002b5e:	mov    rcx,rdi
   140002b61:	mov    QWORD PTR [rsp+0x40],rax
   140002b66:	mov    QWORD PTR [rsp+0x38],rax
   140002b6b:	mov    QWORD PTR [rsp+0x30],rax
   140002b70:	mov    QWORD PTR [rsp+0x28],rax
   140002b75:	mov    DWORD PTR [rbp+0x18],eax
   140002b78:	lea    rax,[rbp+0x18]
   140002b7c:	mov    QWORD PTR [rsp+0x20],rax
   140002b81:	call   QWORD PTR [rip+0x3639]        # 0x1400061c0
   140002b87:	xor    ecx,ecx
   140002b89:	test   eax,eax
   140002b8b:	js     0x140002b9d
   140002b8d:	cmp    DWORD PTR [rbp+0x18],ecx
   140002b90:	mov    eax,ecx
   140002b92:	seta   al
   140002b95:	test   eax,eax
   140002b97:	jne    0x140002c6b
   140002b9d:	mov    QWORD PTR [rsp+0x58],rcx
   140002ba2:	lea    rax,[rbp+0x18]
   140002ba6:	mov    QWORD PTR [rsp+0x50],rcx
   140002bab:	xor    r9d,r9d
   140002bae:	mov    QWORD PTR [rsp+0x48],rcx
   140002bb3:	xor    r8d,r8d
   140002bb6:	mov    QWORD PTR [rsp+0x40],rcx
   140002bbb:	xor    edx,edx
   140002bbd:	mov    QWORD PTR [rsp+0x38],rax
   140002bc2:	mov    QWORD PTR [rsp+0x30],rcx
   140002bc7:	mov    QWORD PTR [rsp+0x28],rcx
   140002bcc:	mov    QWORD PTR [rsp+0x20],rcx
   140002bd1:	mov    DWORD PTR [rbp+0x18],ecx
   140002bd4:	mov    rcx,rdi
   140002bd7:	call   QWORD PTR [rip+0x35e3]        # 0x1400061c0
   140002bdd:	xor    edx,edx
   140002bdf:	test   eax,eax
   140002be1:	jne    0x140002d9d
   140002be7:	mov    ecx,DWORD PTR [rbp+0x18]
   140002bea:	lea    eax,[rdx+0x1]
   140002bed:	cmp    ecx,eax
   140002bef:	jne    0x140002c5c
   140002bf1:	mov    ecx,0x2000
   140002bf6:	mov    DWORD PTR [rbp+0x10],0x1000
   140002bfd:	call   QWORD PTR [rip+0x375d]        # 0x140006360
   140002c03:	xor    edx,edx
   140002c05:	mov    rdi,rax
   140002c08:	test   rax,rax
   140002c0b:	je     0x140002d9d
   140002c11:	mov    rcx,QWORD PTR [rbp+0x30]
   140002c15:	lea    r9,[rbp+0x10]
   140002c19:	mov    QWORD PTR [rsp+0x38],rdx
   140002c1e:	mov    r8,rax
   140002c21:	mov    QWORD PTR [rsp+0x30],rdx
   140002c26:	mov    QWORD PTR [rsp+0x28],rdx
   140002c2b:	mov    QWORD PTR [rsp+0x20],rdx
   140002c30:	call   QWORD PTR [rip+0x35aa]        # 0x1400061e0
   140002c36:	xor    ecx,ecx
   140002c38:	test   eax,eax
   140002c3a:	jne    0x140002c4c
   140002c3c:	cmp    WORD PTR [rdi],cx
   140002c3f:	je     0x140002c4c
   140002c41:	mov    rcx,rdi
   140002c44:	call   QWORD PTR [rip+0x371e]        # 0x140006368
   140002c4a:	jmp    0x140002c6b
   140002c4c:	mov    rcx,rdi
   140002c4f:	call   QWORD PTR [rip+0x3713]        # 0x140006368
   140002c55:	xor    edx,edx
   140002c57:	jmp    0x140002d9d
   140002c5c:	test   ecx,ecx
   140002c5e:	mov    eax,edx
   140002c60:	setne  al
   140002c63:	test   eax,eax
   140002c65:	je     0x140002d9d
   140002c6b:	mov    rcx,QWORD PTR [rbp+0x8]
   140002c6f:	mov    rdx,rsi
   140002c72:	call   0x140001944
   140002c77:	mov    edi,eax
   140002c79:	test   eax,eax
   140002c7b:	js     0x140002e9a
   140002c81:	mov    rcx,QWORD PTR [rbp+0x8]
   140002c85:	mov    rdx,rsi
   140002c88:	call   0x140002150
   140002c8d:	xor    edx,edx
   140002c8f:	mov    edi,eax
   140002c91:	test   eax,eax
   140002c93:	js     0x140002e9a
   140002c99:	cmp    WORD PTR [rsi],0x7b
   140002c9d:	jne    0x140002cf4
   140002c9f:	mov    eax,DWORD PTR [rbp+0x2e0]
   140002ca5:	xor    r9d,r9d
   140002ca8:	mov    r8,QWORD PTR [rbp+0x30]
   140002cac:	mov    rdx,rsi
   140002caf:	mov    rcx,QWORD PTR [rbp+0x8]
   140002cb3:	mov    DWORD PTR [rsp+0x20],eax
   140002cb7:	call   0x140002648
   140002cbc:	xor    edx,edx
   140002cbe:	mov    edi,eax
   140002cc0:	test   eax,eax
   140002cc2:	js     0x140002e9a
   140002cc8:	cmp    DWORD PTR [rbp+0x2e0],edx
   140002cce:	je     0x140002d00
   140002cd0:	mov    eax,DWORD PTR [rbp+0x68]
   140002cd3:	mov    rdx,rsi
   140002cd6:	mov    rcx,QWORD PTR [rbp+0x8]
   140002cda:	mov    DWORD PTR [rbp+0x2e0],eax
   140002ce0:	call   0x140001944
   140002ce5:	mov    edi,eax
   140002ce7:	test   eax,eax
   140002ce9:	js     0x140002e9a
   140002cef:	jmp    0x1400028a7
   140002cf4:	cmp    DWORD PTR [rbp+0x2e0],edx
   140002cfa:	jne    0x1400026b2
   140002d00:	mov    rcx,QWORD PTR [rbp+0x30]
   140002d04:	lea    rax,[rbp+0x18]
   140002d08:	mov    QWORD PTR [rsp+0x58],rdx
   140002d0d:	xor    r9d,r9d
   140002d10:	mov    QWORD PTR [rsp+0x50],rdx
   140002d15:	xor    r8d,r8d
   140002d18:	mov    QWORD PTR [rsp+0x48],rdx
   140002d1d:	mov    QWORD PTR [rsp+0x40],rdx
   140002d22:	mov    QWORD PTR [rsp+0x38],rdx
   140002d27:	mov    QWORD PTR [rsp+0x30],rdx
   140002d2c:	mov    QWORD PTR [rsp+0x28],rdx
   140002d31:	mov    DWORD PTR [rbp+0x18],edx
   140002d34:	xor    edx,edx
   140002d36:	mov    QWORD PTR [rsp+0x20],rax
   140002d3b:	call   QWORD PTR [rip+0x347f]        # 0x1400061c0
   140002d41:	xor    edx,edx
   140002d43:	test   eax,eax
   140002d45:	js     0x140002d91
   140002d47:	cmp    DWORD PTR [rbp+0x18],edx
   140002d4a:	mov    eax,edx
   140002d4c:	seta   al
   140002d4f:	test   eax,eax
   140002d51:	je     0x140002d91
   140002d53:	lea    rdi,[rip+0x3c2e]        # 0x140006988
   140002d5a:	mov    rdx,QWORD PTR [rdi]
   140002d5d:	mov    rcx,QWORD PTR [rbp+0x28]
   140002d61:	call   QWORD PTR [rip+0x34c9]        # 0x140006230
   140002d67:	test   eax,eax
   140002d69:	je     0x140002e58
   140002d6f:	add    rdi,0x8
   140002d73:	lea    rax,[rip+0x3c1e]        # 0x140006998
   140002d7a:	cmp    rdi,rax
   140002d7d:	jl     0x140002d5a
   140002d7f:	mov    rdx,QWORD PTR [rbp+0x28]
   140002d83:	lea    rcx,[rbp+0x30]
   140002d87:	call   0x14000141c
   140002d8c:	jmp    0x140002e58
   140002d91:	cmp    DWORD PTR [rbp+0x2e0],edx
   140002d97:	jne    0x1400026b2
   140002d9d:	mov    rcx,QWORD PTR [rbp+0x30]
   140002da1:	test   rcx,rcx
   140002da4:	je     0x140002dba
   140002da6:	call   QWORD PTR [rip+0x342c]        # 0x1400061d8
   140002dac:	xor    edx,edx
   140002dae:	mov    QWORD PTR [rbp+0x30],rdx
   140002db2:	test   eax,eax
   140002db4:	jne    0x140002e95
   140002dba:	cmp    DWORD PTR [rbp+0x48],edx
   140002dbd:	je     0x140002ddc
   140002dbf:	mov    rax,QWORD PTR [rbp+0x20]
   140002dc3:	lea    rcx,[rbp+0x50]
   140002dc7:	mov    QWORD PTR [rbp+0x58],rdx
   140002dcb:	mov    QWORD PTR [rbp+0x60],rdx
   140002dcf:	mov    rdx,QWORD PTR [rbp+0x28]
   140002dd3:	mov    QWORD PTR [rbp+0x50],rax
   140002dd7:	call   0x14000134c
   140002ddc:	mov    rcx,QWORD PTR [rbp+0x8]
   140002de0:	mov    rdx,rsi
   140002de3:	call   0x140001944
   140002de8:	mov    edi,eax
   140002dea:	test   eax,eax
   140002dec:	js     0x140002e9a
   140002df2:	mov    rcx,QWORD PTR [rbp+0x8]
   140002df6:	mov    rdx,rsi
   140002df9:	call   0x140002150
   140002dfe:	xor    edx,edx
   140002e00:	mov    edi,eax
   140002e02:	test   eax,eax
   140002e04:	js     0x140002e9a
   140002e0a:	mov    ecx,DWORD PTR [rbp+0x0]
   140002e0d:	test   ecx,ecx
   140002e0f:	je     0x1400026b2
   140002e15:	cmp    WORD PTR [rsi],0x7b
   140002e19:	jne    0x1400026b2
   140002e1f:	or     rax,0xffffffffffffffff
   140002e23:	inc    rax
   140002e26:	cmp    WORD PTR [rsi+rax*2],dx
   140002e2a:	jne    0x140002e23
   140002e2c:	mov    r8d,0x1
   140002e32:	cmp    rax,r8
   140002e35:	jne    0x1400026b2
   140002e3b:	mov    r8,QWORD PTR [rbp+0x30]
   140002e3f:	mov    r9d,ecx
   140002e42:	mov    rcx,QWORD PTR [rbp+0x8]
   140002e46:	mov    DWORD PTR [rsp+0x20],edx
   140002e4a:	mov    rdx,rsi
   140002e4d:	call   0x140002648
   140002e52:	mov    edi,eax
   140002e54:	test   eax,eax
   140002e56:	js     0x140002e9a
   140002e58:	mov    rcx,QWORD PTR [rbp+0x8]
   140002e5c:	mov    rdx,rsi
   140002e5f:	call   0x140001944
   140002e64:	mov    edi,eax
   140002e66:	test   eax,eax
   140002e68:	js     0x140002e9a
   140002e6a:	jmp    0x1400026b2
   140002e6f:	mov    rcx,QWORD PTR [rbp+0x10]
   140002e73:	movzx  edi,ax
   140002e76:	or     edi,0x80070000
   140002e7c:	test   eax,eax
   140002e7e:	cmovle edi,eax
   140002e81:	test   rcx,rcx
   140002e84:	je     0x140002e9a
   140002e86:	call   QWORD PTR [rip+0x334c]        # 0x1400061d8
   140002e8c:	jmp    0x140002e9a
   140002e8e:	mov    edi,0x8007000e
   140002e93:	jmp    0x140002e9a
   140002e95:	mov    edi,0x80020009
   140002e9a:	mov    rax,QWORD PTR [rbp+0x30]
   140002e9e:	mov    DWORD PTR [rbp+0x0],edi
   140002ea1:	test   rax,rax
   140002ea4:	je     0x140002eaf
   140002ea6:	mov    rcx,rax
   140002ea9:	call   QWORD PTR [rip+0x3329]        # 0x1400061d8
   140002eaf:	test   rbx,rbx
   140002eb2:	je     0x140002ec8
   140002eb4:	mov    rcx,rbx
   140002eb7:	mov    rbx,QWORD PTR [rbx]
   140002eba:	call   QWORD PTR [rip+0x34a8]        # 0x140006368
   140002ec0:	test   rbx,rbx
   140002ec3:	jne    0x140002eb4
   140002ec5:	mov    edi,DWORD PTR [rbp+0x0]
   140002ec8:	mov    eax,edi
   140002eca:	mov    rcx,QWORD PTR [rbp+0x280]
   140002ed1:	xor    rcx,rbp
   140002ed4:	call   0x140005220
   140002ed9:	lea    rsp,[rbp+0x298]
   140002ee0:	pop    rdi
   140002ee1:	pop    rsi
   140002ee2:	pop    rbx
   140002ee3:	pop    rbp
   140002ee4:	ret    
   140002ee5:	int3   
   140002ee6:	int3   
   140002ee7:	int3   
   140002ee8:	int3   
   140002ee9:	int3   
   140002eea:	int3   
   140002eeb:	int3   
   140002eec:	mov    rax,rsp
   140002eef:	mov    QWORD PTR [rax+0x8],rbx
   140002ef3:	mov    QWORD PTR [rax+0x10],rsi
   140002ef7:	mov    QWORD PTR [rax+0x18],rdi
   140002efb:	push   rbp
   140002efc:	push   r14
   140002efe:	push   r15
   140002f00:	lea    rbp,[rax-0x5c8]
   140002f07:	sub    rsp,0x6b0
   140002f0e:	mov    rax,QWORD PTR [rip+0x60f3]        # 0x140009008
   140002f15:	xor    rax,rsp
   140002f18:	mov    QWORD PTR [rbp+0x5a0],rax
   140002f1f:	xor    r15d,r15d
   140002f22:	mov    DWORD PTR [rsp+0x3c],0xa
   140002f2a:	mov    ebx,r8d
   140002f2d:	mov    DWORD PTR [rsp+0x38],r15d
   140002f32:	lea    ecx,[r15+0x50]
   140002f36:	call   QWORD PTR [rip+0x3424]        # 0x140006360
   140002f3c:	xor    edx,edx
   140002f3e:	lea    r8d,[r15+0x28]
   140002f42:	lea    rcx,[rsp+0x40]
   140002f47:	mov    QWORD PTR [rsp+0x30],rax
   140002f4c:	call   0x140005bce
   140002f51:	lea    rcx,[rsp+0x40]
   140002f56:	mov    BYTE PTR [rsp+0x68],r15b
   140002f5b:	call   0x140001234
   140002f60:	mov    edi,eax
   140002f62:	test   eax,eax
   140002f64:	js     0x140003060
   140002f6a:	xor    edx,edx
   140002f6c:	mov    BYTE PTR [rsp+0x68],0x1
   140002f71:	mov    r8d,0x208
   140002f77:	mov    WORD PTR [rsp+0x70],r15w
   140002f7d:	lea    rcx,[rsp+0x72]
   140002f82:	call   0x140005bce
   140002f87:	mov    rax,QWORD PTR [rip+0x6872]        # 0x140009800
   140002f8e:	lea    rdx,[rsp+0x70]
   140002f93:	mov    edi,0x104
   140002f98:	mov    r8d,edi
   140002f9b:	mov    rcx,QWORD PTR [rax+0x8]
   140002f9f:	call   QWORD PTR [rip+0x314b]        # 0x1400060f0
   140002fa5:	cmp    eax,edi
   140002fa7:	jne    0x140002fb3
   140002fa9:	mov    edi,0x8007006f
   140002fae:	jmp    0x140003060
   140002fb3:	test   eax,eax
   140002fb5:	jne    0x140002fd0
   140002fb7:	call   QWORD PTR [rip+0x30bb]        # 0x140006078
   140002fbd:	movzx  edi,ax
   140002fc0:	or     edi,0x80070000
   140002fc6:	test   eax,eax
   140002fc8:	cmovle edi,eax
   140002fcb:	jmp    0x140003060
   140002fd0:	movzx  ecx,WORD PTR [rsp+0x70]
   140002fd5:	lea    rdx,[rsp+0x70]
   140002fda:	lea    rax,[rbp+0x180]
   140002fe1:	test   cx,cx
   140002fe4:	je     0x14000300d
   140002fe6:	mov    r8d,0x27
   140002fec:	mov    WORD PTR [rax],cx
   140002fef:	add    rax,0x2
   140002ff3:	cmp    cx,r8w
   140002ff7:	jne    0x140003001
   140002ff9:	mov    WORD PTR [rax],r8w
   140002ffd:	add    rax,0x2
   140003001:	add    rdx,0x2
   140003005:	movzx  ecx,WORD PTR [rdx]
   140003008:	test   cx,cx
   14000300b:	jne    0x140002fec
   14000300d:	lea    r8,[rbp+0x180]
   140003014:	mov    WORD PTR [rax],r15w
   140003018:	lea    rdx,[rip+0x3749]        # 0x140006768
   14000301f:	lea    rcx,[rsp+0x30]
   140003024:	call   0x14000155c
   140003029:	mov    edi,eax
   14000302b:	test   eax,eax
   14000302d:	js     0x140003060
   14000302f:	lea    r9,[rip+0x376a]        # 0x1400067a0
   140003036:	mov    r8d,0x64
   14000303c:	lea    rdx,[rsp+0x70]
   140003041:	lea    rcx,[rsp+0x30]
   140003046:	test   ebx,ebx
   140003048:	je     0x140003054
   14000304a:	mov    DWORD PTR [rsp+0x20],0x1
   140003052:	jmp    0x140003059
   140003054:	mov    DWORD PTR [rsp+0x20],r15d
   140003059:	call   0x1400016cc
   14000305e:	mov    edi,eax
   140003060:	lea    rcx,[rsp+0x40]
   140003065:	call   QWORD PTR [rip+0x320d]        # 0x140006278
   14000306b:	mov    r14d,r15d
   14000306e:	cmp    DWORD PTR [rsp+0x38],r15d
   140003073:	jle    0x1400030aa
   140003075:	mov    rsi,r15
   140003078:	mov    rax,QWORD PTR [rsp+0x30]
   14000307d:	mov    rbx,QWORD PTR [rsi+rax*1]
   140003081:	mov    rcx,QWORD PTR [rbx+0x8]
   140003085:	call   QWORD PTR [rip+0x2f75]        # 0x140006000
   14000308b:	mov    rcx,QWORD PTR [rbx]
   14000308e:	call   QWORD PTR [rip+0x2f6c]        # 0x140006000
   140003094:	mov    rcx,rbx
   140003097:	call   0x140004de8
   14000309c:	inc    r14d
   14000309f:	lea    rsi,[rsi+0x8]
   1400030a3:	cmp    r14d,DWORD PTR [rsp+0x38]
   1400030a8:	jl     0x140003078
   1400030aa:	lea    rcx,[rsp+0x40]
   1400030af:	mov    DWORD PTR [rsp+0x38],r15d
   1400030b4:	call   QWORD PTR [rip+0x319e]        # 0x140006258
   1400030ba:	cmp    BYTE PTR [rsp+0x68],r15b
   1400030bf:	je     0x1400030d1
   1400030c1:	lea    rcx,[rsp+0x40]
   1400030c6:	mov    BYTE PTR [rsp+0x68],r15b
   1400030cb:	call   QWORD PTR [rip+0x3197]        # 0x140006268
   1400030d1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400030d6:	call   QWORD PTR [rip+0x328c]        # 0x140006368
   1400030dc:	mov    eax,edi
   1400030de:	mov    rcx,QWORD PTR [rbp+0x5a0]
   1400030e5:	xor    rcx,rsp
   1400030e8:	call   0x140005220
   1400030ed:	lea    r11,[rsp+0x6b0]
   1400030f5:	mov    rbx,QWORD PTR [r11+0x20]
   1400030f9:	mov    rsi,QWORD PTR [r11+0x28]
   1400030fd:	mov    rdi,QWORD PTR [r11+0x30]
   140003101:	mov    rsp,r11
   140003104:	pop    r15
   140003106:	pop    r14
   140003108:	pop    rbp
   140003109:	ret    
   14000310a:	int3   
   14000310b:	int3   
   14000310c:	int3   
   14000310d:	int3   
   14000310e:	int3   
   14000310f:	int3   
   140003110:	mov    QWORD PTR [rsp+0x8],rbx
   140003115:	push   rdi
   140003116:	sub    rsp,0x20
   14000311a:	lea    rax,[rip+0x5eff]        # 0x140009020
   140003121:	mov    QWORD PTR [rip+0x6598],rax        # 0x1400096c0
   140003128:	mov    QWORD PTR [rip+0x6581],r8        # 0x1400096b0
   14000312f:	mov    QWORD PTR [rip+0x6582],r8        # 0x1400096b8
   140003136:	mov    QWORD PTR [rip+0x656b],r8        # 0x1400096a8
   14000313d:	and    DWORD PTR [rip+0x6584],0x0        # 0x1400096c8
   140003144:	and    QWORD PTR [rip+0x6584],0x0        # 0x1400096d0
   14000314c:	lea    rcx,[rip+0x6585]        # 0x1400096d8
   140003153:	call   QWORD PTR [rip+0x3127]        # 0x140006280
   140003159:	nop
   14000315a:	lea    rcx,[rip+0x659f]        # 0x140009700
   140003161:	call   QWORD PTR [rip+0x3119]        # 0x140006280
   140003167:	nop
   140003168:	lea    rcx,[rip+0x65b9]        # 0x140009728
   14000316f:	call   QWORD PTR [rip+0x310b]        # 0x140006280
   140003175:	nop
   140003176:	and    QWORD PTR [rip+0x65da],0x0        # 0x140009758
   14000317e:	mov    BYTE PTR [rip+0x65db],0x1        # 0x140009760
   140003185:	and    DWORD PTR [rip+0x65e4],0x0        # 0x140009770
   14000318c:	and    DWORD PTR [rip+0x65ed],0x0        # 0x140009780
   140003193:	and    QWORD PTR [rip+0x65dd],0x0        # 0x140009778
   14000319b:	and    QWORD PTR [rip+0x65e5],0x0        # 0x140009788
   1400031a3:	mov    rdi,QWORD PTR [rip+0x6516]        # 0x1400096c0
   1400031aa:	test   rdi,rdi
   1400031ad:	je     0x1400031de
   1400031af:	jmp    0x1400031d8
   1400031b1:	mov    rbx,QWORD PTR [rdi+0x40]
   1400031b5:	mov    rcx,rbx
   1400031b8:	call   QWORD PTR [rip+0x31f2]        # 0x1400063b0
   1400031be:	mov    cl,0x1
   1400031c0:	call   rbx
   1400031c2:	cmp    DWORD PTR [rip+0x64d4],0xb0        # 0x1400096a0
   1400031cc:	jne    0x1400031d4
   1400031ce:	add    rdi,0x38
   1400031d2:	jmp    0x1400031d8
   1400031d4:	add    rdi,0x48
   1400031d8:	cmp    QWORD PTR [rdi],0x0
   1400031dc:	jne    0x1400031b1
   1400031de:	mov    DWORD PTR [rip+0x65a8],0x1        # 0x140009790
   1400031e8:	xor    eax,eax
   1400031ea:	jmp    0x140003295
   1400031ef:	lea    rcx,[rip+0x650a]        # 0x140009700
   1400031f6:	call   QWORD PTR [rip+0x306c]        # 0x140006268
   1400031fc:	lea    rcx,[rip+0x64d5]        # 0x1400096d8
   140003203:	call   QWORD PTR [rip+0x305f]        # 0x140006268
   140003209:	xor    edx,edx
   14000320b:	lea    r8d,[rdx+0x28]
   14000320f:	lea    rcx,[rip+0x6512]        # 0x140009728
   140003216:	call   0x140005bce
   14000321b:	xor    edx,edx
   14000321d:	lea    r8d,[rdx+0x28]
   140003221:	lea    rcx,[rip+0x64d8]        # 0x140009700
   140003228:	call   0x140005bce
   14000322d:	xor    edx,edx
   14000322f:	lea    r8d,[rdx+0x28]
   140003233:	lea    rcx,[rip+0x649e]        # 0x1400096d8
   14000323a:	call   0x140005bce
   14000323f:	mov    eax,0xc0000017
   140003244:	jmp    0x140003295
   140003246:	lea    rcx,[rip+0x648b]        # 0x1400096d8
   14000324d:	call   QWORD PTR [rip+0x3015]        # 0x140006268
   140003253:	xor    edx,edx
   140003255:	lea    r8d,[rdx+0x28]
   140003259:	lea    rcx,[rip+0x64a0]        # 0x140009700
   140003260:	call   0x140005bce
   140003265:	xor    edx,edx
   140003267:	lea    r8d,[rdx+0x28]
   14000326b:	lea    rcx,[rip+0x6466]        # 0x1400096d8
   140003272:	call   0x140005bce
   140003277:	mov    eax,0xc0000017
   14000327c:	jmp    0x140003295
   14000327e:	xor    edx,edx
   140003280:	lea    r8d,[rdx+0x28]
   140003284:	lea    rcx,[rip+0x644d]        # 0x1400096d8
   14000328b:	call   0x140005bce
   140003290:	mov    eax,0xc0000017
   140003295:	mov    rbx,QWORD PTR [rsp+0x30]
   14000329a:	add    rsp,0x20
   14000329e:	pop    rdi
   14000329f:	ret    
   1400032a0:	int3   
   1400032a1:	int3   
   1400032a2:	int3   
   1400032a3:	int3   
   1400032a4:	int3   
   1400032a5:	int3   
   1400032a6:	int3   
   1400032a7:	int3   
   1400032a8:	mov    QWORD PTR [rsp+0x18],rbx
   1400032ad:	push   rbp
   1400032ae:	push   rsi
   1400032af:	push   rdi
   1400032b0:	push   r12
   1400032b2:	push   r13
   1400032b4:	push   r14
   1400032b6:	push   r15
   1400032b8:	mov    rbp,rsp
   1400032bb:	sub    rsp,0x50
   1400032bf:	mov    rax,QWORD PTR [rip+0x5d42]        # 0x140009008
   1400032c6:	xor    rax,rsp
   1400032c9:	mov    QWORD PTR [rbp-0x8],rax
   1400032cd:	xor    ebx,ebx
   1400032cf:	mov    r12d,r8d
   1400032d2:	mov    QWORD PTR [rbp-0x20],rbx
   1400032d6:	mov    rsi,rdx
   1400032d9:	mov    r15,rcx
   1400032dc:	test   rdx,rdx
   1400032df:	je     0x140003397
   1400032e5:	lea    rax,[rbp-0x20]
   1400032e9:	xor    edx,edx
   1400032eb:	lea    r13d,[rbx+0x1]
   1400032ef:	mov    QWORD PTR [rsp+0x20],rax
   1400032f4:	mov    r8d,r13d
   1400032f7:	lea    r9,[rip+0x3792]        # 0x140006a90
   1400032fe:	lea    rcx,[rip+0x37ab]        # 0x140006ab0
   140003305:	call   QWORD PTR [rip+0x2cfd]        # 0x140006008
   14000330b:	test   eax,eax
   14000330d:	js     0x140003393
   140003313:	cmp    DWORD PTR [rsi],ebx
   140003315:	je     0x140003393
   140003317:	mov    rax,QWORD PTR [rsi+0x8]
   14000331b:	mov    rbx,QWORD PTR [rbp-0x20]
   14000331f:	movups xmm0,XMMWORD PTR [rax]
   140003322:	movdqu XMMWORD PTR [rbp-0x18],xmm0
   140003327:	mov    rax,QWORD PTR [rbx]
   14000332a:	test   r12d,r12d
   14000332d:	je     0x140003363
   14000332f:	cmp    DWORD PTR [rsi],r13d
   140003332:	jne    0x14000333a
   140003334:	mov    rdi,QWORD PTR [rax+0x28]
   140003338:	jmp    0x14000333e
   14000333a:	mov    rdi,QWORD PTR [rax+0x38]
   14000333e:	mov    rcx,rdi
   140003341:	call   QWORD PTR [rip+0x3069]        # 0x1400063b0
   140003347:	lea    r9,[rbp-0x18]
   14000334b:	mov    r8d,r13d
   14000334e:	mov    rdx,r15
   140003351:	mov    rcx,rbx
   140003354:	call   rdi
   140003356:	mov    r14d,eax
   140003359:	test   eax,eax
   14000335b:	jns    0x14000338a
   14000335d:	mov    rbx,QWORD PTR [rbp-0x20]
   140003361:	jmp    0x14000339a
   140003363:	cmp    DWORD PTR [rsi],r13d
   140003366:	jne    0x14000336e
   140003368:	mov    rdi,QWORD PTR [rax+0x30]
   14000336c:	jmp    0x140003372
   14000336e:	mov    rdi,QWORD PTR [rax+0x40]
   140003372:	mov    rcx,rdi
   140003375:	call   QWORD PTR [rip+0x3035]        # 0x1400063b0
   14000337b:	lea    r9,[rbp-0x18]
   14000337f:	mov    r8d,r13d
   140003382:	mov    rdx,r15
   140003385:	mov    rcx,rbx
   140003388:	call   rdi
   14000338a:	add    rsi,0x10
   14000338e:	cmp    DWORD PTR [rsi],0x0
   140003391:	jmp    0x140003315
   140003393:	mov    rbx,QWORD PTR [rbp-0x20]
   140003397:	xor    r14d,r14d
   14000339a:	test   rbx,rbx
   14000339d:	je     0x1400033b4
   14000339f:	mov    rcx,QWORD PTR [rbx]
   1400033a2:	mov    rdi,QWORD PTR [rcx+0x10]
   1400033a6:	mov    rcx,rdi
   1400033a9:	call   QWORD PTR [rip+0x3001]        # 0x1400063b0
   1400033af:	mov    rcx,rbx
   1400033b2:	call   rdi
   1400033b4:	mov    eax,r14d
   1400033b7:	mov    rcx,QWORD PTR [rbp-0x8]
   1400033bb:	xor    rcx,rsp
   1400033be:	call   0x140005220
   1400033c3:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400033cb:	add    rsp,0x50
   1400033cf:	pop    r15
   1400033d1:	pop    r14
   1400033d3:	pop    r13
   1400033d5:	pop    r12
   1400033d7:	pop    rdi
   1400033d8:	pop    rsi
   1400033d9:	pop    rbp
   1400033da:	ret    
   1400033db:	int3   
   1400033dc:	int3   
   1400033dd:	int3   
   1400033de:	int3   
   1400033df:	int3   
   1400033e0:	int3   
   1400033e1:	int3   
   1400033e2:	int3   
   1400033e3:	int3   
   1400033e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400033e9:	push   rbp
   1400033ea:	push   rsi
   1400033eb:	push   rdi
   1400033ec:	sub    rsp,0x260
   1400033f3:	mov    rax,QWORD PTR [rip+0x5c0e]        # 0x140009008
   1400033fa:	xor    rax,rsp
   1400033fd:	mov    QWORD PTR [rsp+0x250],rax
   140003405:	xor    ebp,ebp
   140003407:	mov    rdi,r9
   14000340a:	mov    rsi,r8
   14000340d:	test   r8,r8
   140003410:	jne    0x14000341c
   140003412:	mov    eax,0x80004003
   140003417:	jmp    0x14000353f
   14000341c:	mov    QWORD PTR [r8],rbp
   14000341f:	test   r9,r9
   140003422:	je     0x140003412
   140003424:	mov    QWORD PTR [r9],rbp
   140003427:	lea    rdx,[rsp+0x30]
   14000342c:	mov    rcx,QWORD PTR [rip+0x6285]        # 0x1400096b8
   140003433:	mov    r8d,0x104
   140003439:	call   QWORD PTR [rip+0x2cb1]        # 0x1400060f0
   14000343f:	cmp    eax,0x104
   140003444:	jne    0x140003450
   140003446:	mov    ebx,0x8007006f
   14000344b:	jmp    0x14000353d
   140003450:	test   eax,eax
   140003452:	jne    0x14000346d
   140003454:	call   QWORD PTR [rip+0x2c1e]        # 0x140006078
   14000345a:	movzx  ebx,ax
   14000345d:	or     ebx,0x80070000
   140003463:	test   eax,eax
   140003465:	cmovle ebx,eax
   140003468:	jmp    0x14000353d
   14000346d:	mov    rdx,rdi
   140003470:	lea    rcx,[rsp+0x30]
   140003475:	call   QWORD PTR [rip+0x7b95]        # 0x14000b010
   14000347b:	mov    ebx,eax
   14000347d:	test   eax,eax
   14000347f:	jns    0x14000352f
   140003485:	movzx  eax,WORD PTR [rsp+0x30]
   14000348a:	lea    rcx,[rsp+0x30]
   14000348f:	mov    rbx,rbp
   140003492:	test   ax,ax
   140003495:	je     0x1400034c7
   140003497:	cmp    ax,0x5c
   14000349b:	je     0x1400034ae
   14000349d:	cmp    ax,0x2f
   1400034a1:	je     0x1400034ae
   1400034a3:	cmp    ax,0x2e
   1400034a7:	jne    0x1400034b1
   1400034a9:	mov    rbx,rcx
   1400034ac:	jmp    0x1400034b1
   1400034ae:	mov    rbx,rbp
   1400034b1:	call   QWORD PTR [rip+0x2d59]        # 0x140006210
   1400034b7:	mov    rcx,rax
   1400034ba:	movzx  eax,WORD PTR [rax]
   1400034bd:	test   ax,ax
   1400034c0:	jne    0x140003497
   1400034c2:	test   rbx,rbx
   1400034c5:	jne    0x1400034ca
   1400034c7:	mov    rbx,rcx
   1400034ca:	movzx  eax,WORD PTR [rip+0x32ef]        # 0x1400067c0
   1400034d1:	mov    rcx,rbx
   1400034d4:	movsd  xmm0,QWORD PTR [rip+0x32dc]        # 0x1400067b8
   1400034dc:	mov    WORD PTR [rsp+0x28],ax
   1400034e1:	lea    rax,[rsp+0x30]
   1400034e6:	sub    rcx,rax
   1400034e9:	movsd  QWORD PTR [rsp+0x20],xmm0
   1400034ef:	sar    rcx,1
   1400034f2:	lea    rax,[rcx+0x5]
   1400034f6:	cmp    rax,0x104
   1400034fc:	jbe    0x140003505
   1400034fe:	mov    ebx,0x80004005
   140003503:	jmp    0x14000353d
   140003505:	mov    edx,0x10e
   14000350a:	lea    r8,[rsp+0x20]
   14000350f:	sub    rdx,rcx
   140003512:	mov    rcx,rbx
   140003515:	call   QWORD PTR [rip+0x2df5]        # 0x140006310
   14000351b:	mov    rdx,rdi
   14000351e:	lea    rcx,[rsp+0x30]
   140003523:	call   QWORD PTR [rip+0x7ae7]        # 0x14000b010
   140003529:	mov    ebx,eax
   14000352b:	test   eax,eax
   14000352d:	js     0x14000353d
   14000352f:	lea    rcx,[rsp+0x30]
   140003534:	call   QWORD PTR [rip+0x7ac6]        # 0x14000b000
   14000353a:	mov    QWORD PTR [rsi],rax
   14000353d:	mov    eax,ebx
   14000353f:	mov    rcx,QWORD PTR [rsp+0x250]
   140003547:	xor    rcx,rsp
   14000354a:	call   0x140005220
   14000354f:	mov    rbx,QWORD PTR [rsp+0x280]
   140003557:	add    rsp,0x260
   14000355e:	pop    rdi
   14000355f:	pop    rsi
   140003560:	pop    rbp
   140003561:	ret    
   140003562:	int3   
   140003563:	int3   
   140003564:	int3   
   140003565:	int3   
   140003566:	int3   
   140003567:	int3   
   140003568:	mov    rax,rsp
   14000356b:	mov    QWORD PTR [rax+0x10],rdx
   14000356f:	mov    QWORD PTR [rax+0x8],rcx
   140003573:	push   rbx
   140003574:	push   rsi
   140003575:	push   rdi
   140003576:	sub    rsp,0x30
   14000357a:	and    QWORD PTR [rax+0x18],0x0
   14000357f:	lea    r9,[rax+0x10]
   140003583:	and    QWORD PTR [rax+0x10],0x0
   140003588:	lea    r8,[rax+0x18]
   14000358c:	call   0x1400033e4
   140003591:	mov    esi,eax
   140003593:	test   eax,eax
   140003595:	js     0x140003644
   14000359b:	mov    rbx,QWORD PTR [rsp+0x58]
   1400035a0:	mov    rax,QWORD PTR [rbx]
   1400035a3:	mov    rdi,QWORD PTR [rax+0x38]
   1400035a7:	mov    rcx,rdi
   1400035aa:	call   QWORD PTR [rip+0x2e00]        # 0x1400063b0
   1400035b0:	lea    rdx,[rsp+0x50]
   1400035b5:	mov    rcx,rbx
   1400035b8:	call   rdi
   1400035ba:	mov    esi,eax
   1400035bc:	test   eax,eax
   1400035be:	js     0x140003644
   1400035c4:	xor    r8d,r8d
   1400035c7:	lea    rcx,[rip+0x31fa]        # 0x1400067c8
   1400035ce:	xor    edx,edx
   1400035d0:	call   QWORD PTR [rip+0x2b12]        # 0x1400060e8
   1400035d6:	mov    rbx,rax
   1400035d9:	test   rax,rax
   1400035dc:	je     0x140003625
   1400035de:	lea    rdx,[rip+0x3203]        # 0x1400067e8
   1400035e5:	mov    rcx,rax
   1400035e8:	call   QWORD PTR [rip+0x2b22]        # 0x140006110
   1400035ee:	mov    rdi,rax
   1400035f1:	test   rax,rax
   1400035f4:	je     0x14000361c
   1400035f6:	mov    rcx,rax
   1400035f9:	call   QWORD PTR [rip+0x2db1]        # 0x1400063b0
   1400035ff:	mov    rcx,QWORD PTR [rsp+0x50]
   140003604:	mov    edx,DWORD PTR [rcx+0x14]
   140003607:	mov    r9d,DWORD PTR [rcx+0x10]
   14000360b:	movzx  r8d,WORD PTR [rcx+0x1a]
   140003610:	mov    DWORD PTR [rsp+0x20],edx
   140003614:	movzx  edx,WORD PTR [rcx+0x18]
   140003618:	call   rdi
   14000361a:	mov    esi,eax
   14000361c:	mov    rcx,rbx
   14000361f:	call   QWORD PTR [rip+0x2adb]        # 0x140006100
   140003625:	mov    rbx,QWORD PTR [rsp+0x58]
   14000362a:	mov    rax,QWORD PTR [rbx]
   14000362d:	mov    rdi,QWORD PTR [rax+0x60]
   140003631:	mov    rcx,rdi
   140003634:	call   QWORD PTR [rip+0x2d76]        # 0x1400063b0
   14000363a:	mov    rdx,QWORD PTR [rsp+0x50]
   14000363f:	mov    rcx,rbx
   140003642:	call   rdi
   140003644:	mov    rbx,QWORD PTR [rsp+0x58]
   140003649:	test   rbx,rbx
   14000364c:	je     0x140003663
   14000364e:	mov    rax,QWORD PTR [rbx]
   140003651:	mov    rdi,QWORD PTR [rax+0x10]
   140003655:	mov    rcx,rdi
   140003658:	call   QWORD PTR [rip+0x2d52]        # 0x1400063b0
   14000365e:	mov    rcx,rbx
   140003661:	call   rdi
   140003663:	mov    rcx,QWORD PTR [rsp+0x60]
   140003668:	call   QWORD PTR [rip+0x79ba]        # 0x14000b028
   14000366e:	mov    eax,esi
   140003670:	add    rsp,0x30
   140003674:	pop    rdi
   140003675:	pop    rsi
   140003676:	pop    rbx
   140003677:	ret    
   140003678:	int3   
   140003679:	int3   
   14000367a:	int3   
   14000367b:	int3   
   14000367c:	int3   
   14000367d:	int3   
   14000367e:	int3   
   14000367f:	int3   
   140003680:	mov    rax,rsp
   140003683:	mov    QWORD PTR [rax+0x8],rbx
   140003687:	mov    QWORD PTR [rax+0x10],rsi
   14000368b:	mov    QWORD PTR [rax+0x18],r14
   14000368f:	mov    QWORD PTR [rax+0x20],r15
   140003693:	push   rbp
   140003694:	lea    rbp,[rax-0x178]
   14000369b:	sub    rsp,0x270
   1400036a2:	mov    rax,QWORD PTR [rip+0x595f]        # 0x140009008
   1400036a9:	xor    rax,rsp
   1400036ac:	mov    QWORD PTR [rbp+0x160],rax
   1400036b3:	xor    r15d,r15d
   1400036b6:	lea    r9,[rsp+0x38]
   1400036bb:	lea    r8,[rsp+0x30]
   1400036c0:	mov    QWORD PTR [rsp+0x30],r15
   1400036c5:	mov    QWORD PTR [rsp+0x38],r15
   1400036ca:	call   0x1400033e4
   1400036cf:	mov    r14d,eax
   1400036d2:	test   eax,eax
   1400036d4:	js     0x14000381b
   1400036da:	mov    rbx,QWORD PTR [rsp+0x38]
   1400036df:	mov    QWORD PTR [rsp+0x40],r15
   1400036e4:	mov    rax,QWORD PTR [rbx]
   1400036e7:	mov    rsi,QWORD PTR [rax+0x48]
   1400036eb:	mov    rcx,rsi
   1400036ee:	call   QWORD PTR [rip+0x2cbc]        # 0x1400063b0
   1400036f4:	lea    rax,[rsp+0x40]
   1400036f9:	xor    r9d,r9d
   1400036fc:	mov    QWORD PTR [rsp+0x28],rax
   140003701:	xor    r8d,r8d
   140003704:	or     edx,0xffffffff
   140003707:	mov    QWORD PTR [rsp+0x20],r15
   14000370c:	mov    rcx,rbx
   14000370f:	call   rsi
   140003711:	test   eax,eax
   140003713:	js     0x1400037fa
   140003719:	cmp    QWORD PTR [rsp+0x40],r15
   14000371e:	je     0x1400037fa
   140003724:	mov    rcx,QWORD PTR [rsp+0x30]
   140003729:	call   QWORD PTR [rip+0x78d9]        # 0x14000b008
   14000372f:	cmp    eax,0x104
   140003734:	jbe    0x140003775
   140003736:	mov    rcx,QWORD PTR [rsp+0x40]
   14000373b:	call   QWORD PTR [rip+0x78e7]        # 0x14000b028
   140003741:	mov    rbx,QWORD PTR [rsp+0x38]
   140003746:	test   rbx,rbx
   140003749:	je     0x140003760
   14000374b:	mov    rax,QWORD PTR [rbx]
   14000374e:	mov    rsi,QWORD PTR [rax+0x10]
   140003752:	mov    rcx,rsi
   140003755:	call   QWORD PTR [rip+0x2c55]        # 0x1400063b0
   14000375b:	mov    rcx,rbx
   14000375e:	call   rsi
   140003760:	mov    rcx,QWORD PTR [rsp+0x30]
   140003765:	call   QWORD PTR [rip+0x78bd]        # 0x14000b028
   14000376b:	mov    eax,0x80010135
   140003770:	jmp    0x140003848
   140003775:	mov    rdx,QWORD PTR [rsp+0x30]
   14000377a:	lea    rcx,[rsp+0x50]
   14000377f:	call   QWORD PTR [rip+0x2aa3]        # 0x140006228
   140003785:	lea    rbx,[rsp+0x50]
   14000378a:	lea    rsi,[rsp+0x50]
   14000378f:	cmp    WORD PTR [rsp+0x50],r15w
   140003795:	je     0x1400037c9
   140003797:	mov    rcx,rsi
   14000379a:	call   QWORD PTR [rip+0x2a70]        # 0x140006210
   1400037a0:	movzx  ecx,WORD PTR [rsi]
   1400037a3:	sub    cx,0x2f
   1400037a7:	cmp    cx,0x2d
   1400037ab:	ja     0x1400037c0
   1400037ad:	movabs rdx,0x200000000801
   1400037b7:	bt     rdx,rcx
   1400037bb:	jae    0x1400037c0
   1400037bd:	mov    rbx,rax
   1400037c0:	mov    rsi,rax
   1400037c3:	cmp    WORD PTR [rax],r15w
   1400037c7:	jne    0x140003797
   1400037c9:	lea    rax,[rsp+0x50]
   1400037ce:	sub    rbx,rax
   1400037d1:	sar    rbx,1
   1400037d4:	cmp    ebx,0x105
   1400037da:	jae    0x1400037f3
   1400037dc:	mov    eax,ebx
   1400037de:	add    rax,rax
   1400037e1:	cmp    rax,0x20a
   1400037e7:	jae    0x140003874
   1400037ed:	mov    WORD PTR [rsp+rax*1+0x50],r15w
   1400037f3:	lea    r8,[rsp+0x50]
   1400037f8:	jmp    0x1400037fd
   1400037fa:	xor    r8d,r8d
   1400037fd:	mov    rdx,QWORD PTR [rsp+0x30]
   140003802:	mov    rcx,QWORD PTR [rsp+0x38]
   140003807:	call   QWORD PTR [rip+0x7813]        # 0x14000b020
   14000380d:	mov    rcx,QWORD PTR [rsp+0x40]
   140003812:	mov    r14d,eax
   140003815:	call   QWORD PTR [rip+0x780d]        # 0x14000b028
   14000381b:	mov    rbx,QWORD PTR [rsp+0x38]
   140003820:	test   rbx,rbx
   140003823:	je     0x14000383a
   140003825:	mov    rax,QWORD PTR [rbx]
   140003828:	mov    rsi,QWORD PTR [rax+0x10]
   14000382c:	mov    rcx,rsi
   14000382f:	call   QWORD PTR [rip+0x2b7b]        # 0x1400063b0
   140003835:	mov    rcx,rbx
   140003838:	call   rsi
   14000383a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000383f:	call   QWORD PTR [rip+0x77e3]        # 0x14000b028
   140003845:	mov    eax,r14d
   140003848:	mov    rcx,QWORD PTR [rbp+0x160]
   14000384f:	xor    rcx,rsp
   140003852:	call   0x140005220
   140003857:	lea    r11,[rsp+0x270]
   14000385f:	mov    rbx,QWORD PTR [r11+0x10]
   140003863:	mov    rsi,QWORD PTR [r11+0x18]
   140003867:	mov    r14,QWORD PTR [r11+0x20]
   14000386b:	mov    r15,QWORD PTR [r11+0x28]
   14000386f:	mov    rsp,r11
   140003872:	pop    rbp
   140003873:	ret    
   140003874:	call   0x140005418
   140003879:	int3   
   14000387a:	int3   
   14000387b:	int3   
   14000387c:	int3   
   14000387d:	int3   
   14000387e:	int3   
   14000387f:	int3   
   140003880:	mov    QWORD PTR [rsp+0x8],rbx
   140003885:	mov    QWORD PTR [rsp+0x10],rbp
   14000388a:	mov    QWORD PTR [rsp+0x18],rsi
   14000388f:	push   rdi
   140003890:	sub    rsp,0x50
   140003894:	mov    rcx,QWORD PTR [rip+0x5f65]        # 0x140009800
   14000389b:	add    rcx,0x38
   14000389f:	call   QWORD PTR [rip+0x29d3]        # 0x140006278
   1400038a5:	mov    rbx,QWORD PTR [rip+0x5efc]        # 0x1400097a8
   1400038ac:	xor    ebp,ebp
   1400038ae:	test   rbx,rbx
   1400038b1:	je     0x1400038ed
   1400038b3:	cmp    DWORD PTR [rbx+0x8],ebp
   1400038b6:	jle    0x1400038cb
   1400038b8:	mov    rcx,QWORD PTR [rbx]
   1400038bb:	mov    rcx,QWORD PTR [rcx]
   1400038be:	call   QWORD PTR [rip+0x7784]        # 0x14000b048
   1400038c4:	mov    rbx,QWORD PTR [rip+0x5edd]        # 0x1400097a8
   1400038cb:	test   rbx,rbx
   1400038ce:	je     0x1400038ed
   1400038d0:	mov    rcx,QWORD PTR [rbx]
   1400038d3:	test   rcx,rcx
   1400038d6:	je     0x1400038e1
   1400038d8:	call   QWORD PTR [rip+0x2a8a]        # 0x140006368
   1400038de:	mov    QWORD PTR [rbx],rbp
   1400038e1:	mov    rcx,rbx
   1400038e4:	mov    QWORD PTR [rbx+0x8],rbp
   1400038e8:	call   0x140004de8
   1400038ed:	mov    rcx,QWORD PTR [rip+0x5f0c]        # 0x140009800
   1400038f4:	add    rcx,0x38
   1400038f8:	mov    QWORD PTR [rip+0x5ea9],rbp        # 0x1400097a8
   1400038ff:	call   QWORD PTR [rip+0x2953]        # 0x140006258
   140003905:	mov    rbx,QWORD PTR [rip+0x5e94]        # 0x1400097a0
   14000390c:	test   rbx,rbx
   14000390f:	je     0x140003940
   140003911:	mov    rcx,QWORD PTR [rbx]
   140003914:	test   rcx,rcx
   140003917:	je     0x140003922
   140003919:	call   QWORD PTR [rip+0x2a49]        # 0x140006368
   14000391f:	mov    QWORD PTR [rbx],rbp
   140003922:	mov    rcx,QWORD PTR [rbx+0x8]
   140003926:	test   rcx,rcx
   140003929:	je     0x140003935
   14000392b:	call   QWORD PTR [rip+0x2a37]        # 0x140006368
   140003931:	mov    QWORD PTR [rbx+0x8],rbp
   140003935:	mov    rcx,rbx
   140003938:	mov    DWORD PTR [rbx+0x10],ebp
   14000393b:	call   0x140004de8
   140003940:	mov    rdi,QWORD PTR [rip+0x5d79]        # 0x1400096c0
   140003947:	test   rdi,rdi
   14000394a:	je     0x14000399c
   14000394c:	jmp    0x140003997
   14000394e:	mov    rsi,QWORD PTR [rdi+0x20]
   140003952:	test   rsi,rsi
   140003955:	je     0x14000396c
   140003957:	mov    rax,QWORD PTR [rsi]
   14000395a:	mov    rbx,QWORD PTR [rax+0x10]
   14000395e:	mov    rcx,rbx
   140003961:	call   QWORD PTR [rip+0x2a49]        # 0x1400063b0
   140003967:	mov    rcx,rsi
   14000396a:	call   rbx
   14000396c:	mov    rbx,QWORD PTR [rdi+0x40]
   140003970:	mov    rcx,rbx
   140003973:	mov    QWORD PTR [rdi+0x20],rbp
   140003977:	call   QWORD PTR [rip+0x2a33]        # 0x1400063b0
   14000397d:	xor    ecx,ecx
   14000397f:	call   rbx
   140003981:	cmp    DWORD PTR [rip+0x5d15],0xb0        # 0x1400096a0
   14000398b:	jne    0x140003993
   14000398d:	add    rdi,0x38
   140003991:	jmp    0x140003997
   140003993:	add    rdi,0x48
   140003997:	cmp    QWORD PTR [rdi],rbp
   14000399a:	jne    0x14000394e
   14000399c:	xor    edx,edx
   14000399e:	mov    QWORD PTR [rsp+0x20],rbp
   1400039a3:	lea    rcx,[rsp+0x28]
   1400039a8:	lea    r8d,[rdx+0x20]
   1400039ac:	call   0x140005bce
   1400039b1:	mov    ebx,0x28
   1400039b6:	lea    rdx,[rsp+0x20]
   1400039bb:	mov    r8d,ebx
   1400039be:	lea    rcx,[rip+0x5d13]        # 0x1400096d8
   1400039c5:	call   0x140005bb6
   1400039ca:	test   eax,eax
   1400039cc:	je     0x1400039db
   1400039ce:	lea    rcx,[rip+0x5d03]        # 0x1400096d8
   1400039d5:	call   QWORD PTR [rip+0x288d]        # 0x140006268
   1400039db:	mov    r8,rbx
   1400039de:	lea    rdx,[rsp+0x20]
   1400039e3:	lea    rcx,[rip+0x5d16]        # 0x140009700
   1400039ea:	call   0x140005bb6
   1400039ef:	test   eax,eax
   1400039f1:	je     0x140003a00
   1400039f3:	lea    rcx,[rip+0x5d06]        # 0x140009700
   1400039fa:	call   QWORD PTR [rip+0x2868]        # 0x140006268
   140003a00:	mov    r8,rbx
   140003a03:	lea    rdx,[rsp+0x20]
   140003a08:	lea    rcx,[rip+0x5d19]        # 0x140009728
   140003a0f:	call   0x140005bb6
   140003a14:	test   eax,eax
   140003a16:	je     0x140003a25
   140003a18:	lea    rcx,[rip+0x5d09]        # 0x140009728
   140003a1f:	call   QWORD PTR [rip+0x2843]        # 0x140006268
   140003a25:	mov    rdi,QWORD PTR [rip+0x5d5c]        # 0x140009788
   140003a2c:	test   rdi,rdi
   140003a2f:	je     0x140003a57
   140003a31:	mov    rbx,QWORD PTR [rdi]
   140003a34:	mov    rcx,rbx
   140003a37:	call   QWORD PTR [rip+0x2973]        # 0x1400063b0
   140003a3d:	mov    rcx,QWORD PTR [rdi+0x8]
   140003a41:	call   rbx
   140003a43:	mov    rbx,QWORD PTR [rdi+0x10]
   140003a47:	mov    rcx,rdi
   140003a4a:	call   0x140004de8
   140003a4f:	mov    rdi,rbx
   140003a52:	test   rbx,rbx
   140003a55:	jne    0x140003a31
   140003a57:	mov    rcx,QWORD PTR [rip+0x5c72]        # 0x1400096d0
   140003a5e:	test   rcx,rcx
   140003a61:	je     0x140003aa9
   140003a63:	cmp    BYTE PTR [rip+0x5cf6],bpl        # 0x140009760
   140003a6a:	je     0x140003aa9
   140003a6c:	mov    rdx,QWORD PTR [rip+0x5d05]        # 0x140009778
   140003a73:	test   rdx,rdx
   140003a76:	je     0x140003aa3
   140003a78:	mov    ebx,ebp
   140003a7a:	mov    eax,ebx
   140003a7c:	mov    rcx,QWORD PTR [rdx+rax*8]
   140003a80:	test   rcx,rcx
   140003a83:	je     0x140003a92
   140003a85:	call   QWORD PTR [rip+0x2635]        # 0x1400060c0
   140003a8b:	mov    rdx,QWORD PTR [rip+0x5ce6]        # 0x140009778
   140003a92:	inc    ebx
   140003a94:	cmp    ebx,DWORD PTR [rip+0x5cd6]        # 0x140009770
   140003a9a:	jbe    0x140003a7a
   140003a9c:	mov    rcx,QWORD PTR [rip+0x5c2d]        # 0x1400096d0
   140003aa3:	call   QWORD PTR [rip+0x2617]        # 0x1400060c0
   140003aa9:	mov    rbx,QWORD PTR [rsp+0x60]
   140003aae:	mov    rbp,QWORD PTR [rsp+0x68]
   140003ab3:	mov    rsi,QWORD PTR [rsp+0x70]
   140003ab8:	add    rsp,0x50
   140003abc:	pop    rdi
   140003abd:	ret    
   140003abe:	int3   
   140003abf:	int3   
   140003ac0:	int3   
   140003ac1:	int3   
   140003ac2:	int3   
   140003ac3:	int3   
   140003ac4:	int3   
   140003ac5:	int3   
   140003ac6:	int3   
   140003ac7:	int3   
   140003ac8:	int3   
   140003ac9:	int3   
   140003aca:	int3   
   140003acb:	int3   
   140003acc:	int3   
   140003acd:	int3   
   140003ace:	int3   
   140003acf:	int3   
   140003ad0:	rex push rbx
   140003ad2:	sub    rsp,0x20
   140003ad6:	mov    rbx,rcx
   140003ad9:	mov    rcx,QWORD PTR [rbx+0x110]
   140003ae0:	or     edx,0xffffffff
   140003ae3:	call   QWORD PTR [rip+0x2787]        # 0x140006270
   140003ae9:	mov    edx,DWORD PTR [rbx+0x11c]
   140003aef:	mov    rcx,QWORD PTR [rbx+0x110]
   140003af6:	mov    BYTE PTR [rbx+0x118],0x0
   140003afd:	call   QWORD PTR [rip+0x276d]        # 0x140006270
   140003b03:	test   eax,eax
   140003b05:	je     0x140003ae9
   140003b07:	cmp    BYTE PTR [rbx+0x118],0x0
   140003b0e:	jne    0x140003ad9
   140003b10:	cmp    DWORD PTR [rbx+0x28],0x0
   140003b14:	jne    0x140003ad9
   140003b16:	call   QWORD PTR [rip+0x2504]        # 0x140006020
   140003b1c:	cmp    BYTE PTR [rbx+0x118],0x0
   140003b23:	jne    0x140003ad9
   140003b25:	cmp    DWORD PTR [rbx+0x28],0x0
   140003b29:	jne    0x140003ad9
   140003b2b:	mov    rcx,QWORD PTR [rbx+0x110]
   140003b32:	call   QWORD PTR [rip+0x2570]        # 0x1400060a8
   140003b38:	test   eax,eax
   140003b3a:	je     0x140003b44
   140003b3c:	and    QWORD PTR [rbx+0x110],0x0
   140003b44:	mov    ecx,DWORD PTR [rbx+0xf8]
   140003b4a:	xor    r9d,r9d
   140003b4d:	xor    r8d,r8d
   140003b50:	lea    edx,[r9+0x12]
   140003b54:	call   QWORD PTR [rip+0x74de]        # 0x14000b038
   140003b5a:	xor    eax,eax
   140003b5c:	add    rsp,0x20
   140003b60:	pop    rbx
   140003b61:	ret    
   140003b62:	int3   
   140003b63:	int3   
   140003b64:	int3   
   140003b65:	int3   
   140003b66:	int3   
   140003b67:	int3   
   140003b68:	int3   
   140003b69:	int3   
   140003b6a:	int3   
   140003b6b:	int3   
   140003b6c:	int3   
   140003b6d:	int3   
   140003b6e:	int3   
   140003b6f:	int3   
   140003b70:	ret    0x0
   140003b73:	int3   
   140003b74:	int3   
   140003b75:	int3   
   140003b76:	int3   
   140003b77:	int3   
   140003b78:	int3   
   140003b79:	int3   
   140003b7a:	int3   
   140003b7b:	int3   
   140003b7c:	mov    rax,rsp
   140003b7f:	mov    QWORD PTR [rax+0x8],rbx
   140003b83:	mov    QWORD PTR [rax+0x10],rbp
   140003b87:	mov    QWORD PTR [rax+0x18],rsi
   140003b8b:	mov    QWORD PTR [rax+0x20],rdi
   140003b8f:	push   r12
   140003b91:	push   r14
   140003b93:	push   r15
   140003b95:	sub    rsp,0x20
   140003b99:	xor    esi,esi
   140003b9b:	mov    r14,r9
   140003b9e:	mov    rdi,r8
   140003ba1:	mov    rbx,rdx
   140003ba4:	mov    r12,rcx
   140003ba7:	test   rcx,rcx
   140003baa:	je     0x140003c92
   140003bb0:	test   rdx,rdx
   140003bb3:	je     0x140003c92
   140003bb9:	test   r9,r9
   140003bbc:	jne    0x140003bc8
   140003bbe:	mov    esi,0x80004003
   140003bc3:	jmp    0x140003c97
   140003bc8:	mov    QWORD PTR [r9],rsi
   140003bcb:	cmp    DWORD PTR [r8],esi
   140003bce:	jne    0x140003c0e
   140003bd0:	cmp    DWORD PTR [r8+0x4],esi
   140003bd4:	jne    0x140003c0e
   140003bd6:	cmp    DWORD PTR [r8+0x8],0xc0
   140003bde:	jne    0x140003c0e
   140003be0:	cmp    DWORD PTR [r8+0xc],0x46000000
   140003be8:	jne    0x140003c0e
   140003bea:	mov    rdi,QWORD PTR [rdx+0x8]
   140003bee:	add    rdi,rcx
   140003bf1:	mov    rax,QWORD PTR [rdi]
   140003bf4:	mov    rbx,QWORD PTR [rax+0x8]
   140003bf8:	mov    rcx,rbx
   140003bfb:	call   QWORD PTR [rip+0x27af]        # 0x1400063b0
   140003c01:	mov    rcx,rdi
   140003c04:	call   rbx
   140003c06:	mov    QWORD PTR [r14],rdi
   140003c09:	jmp    0x140003c97
   140003c0e:	cmp    QWORD PTR [rdx+0x10],rsi
   140003c12:	je     0x140003c7b
   140003c14:	mov    rcx,QWORD PTR [rbx]
   140003c17:	mov    ebp,esi
   140003c19:	test   rcx,rcx
   140003c1c:	sete   bpl
   140003c20:	test   ebp,ebp
   140003c22:	jne    0x140003c42
   140003c24:	mov    eax,DWORD PTR [rdi]
   140003c26:	cmp    DWORD PTR [rcx],eax
   140003c28:	jne    0x140003c71
   140003c2a:	mov    eax,DWORD PTR [rdi+0x4]
   140003c2d:	cmp    DWORD PTR [rcx+0x4],eax
   140003c30:	jne    0x140003c71
   140003c32:	mov    eax,DWORD PTR [rdi+0x8]
   140003c35:	cmp    DWORD PTR [rcx+0x8],eax
   140003c38:	jne    0x140003c71
   140003c3a:	mov    eax,DWORD PTR [rdi+0xc]
   140003c3d:	cmp    DWORD PTR [rcx+0xc],eax
   140003c40:	jne    0x140003c71
   140003c42:	mov    r15,QWORD PTR [rbx+0x10]
   140003c46:	cmp    r15,0x1
   140003c4a:	je     0x140003c86
   140003c4c:	mov    rcx,r15
   140003c4f:	call   QWORD PTR [rip+0x275b]        # 0x1400063b0
   140003c55:	mov    r9,QWORD PTR [rbx+0x8]
   140003c59:	mov    r8,r14
   140003c5c:	mov    rdx,rdi
   140003c5f:	mov    rcx,r12
   140003c62:	call   r15
   140003c65:	test   eax,eax
   140003c67:	je     0x140003c82
   140003c69:	test   ebp,ebp
   140003c6b:	jne    0x140003c71
   140003c6d:	test   eax,eax
   140003c6f:	js     0x140003c82
   140003c71:	add    rbx,0x18
   140003c75:	cmp    QWORD PTR [rbx+0x10],rsi
   140003c79:	jne    0x140003c14
   140003c7b:	mov    esi,0x80004002
   140003c80:	jmp    0x140003c97
   140003c82:	mov    esi,eax
   140003c84:	jmp    0x140003c97
   140003c86:	mov    rdi,QWORD PTR [rbx+0x8]
   140003c8a:	add    rdi,r12
   140003c8d:	jmp    0x140003bf1
   140003c92:	mov    esi,0x80070057
   140003c97:	mov    rbx,QWORD PTR [rsp+0x40]
   140003c9c:	mov    eax,esi
   140003c9e:	mov    rsi,QWORD PTR [rsp+0x50]
   140003ca3:	mov    rbp,QWORD PTR [rsp+0x48]
   140003ca8:	mov    rdi,QWORD PTR [rsp+0x58]
   140003cad:	add    rsp,0x20
   140003cb1:	pop    r15
   140003cb3:	pop    r14
   140003cb5:	pop    r12
   140003cb7:	ret    
   140003cb8:	int3   
   140003cb9:	int3   
   140003cba:	int3   
   140003cbb:	int3   
   140003cbc:	int3   
   140003cbd:	int3   
   140003cbe:	int3   
   140003cbf:	int3   
   140003cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140003cc5:	mov    QWORD PTR [rsp+0x10],rbp
   140003cca:	mov    QWORD PTR [rsp+0x18],rsi
   140003ccf:	push   rdi
   140003cd0:	sub    rsp,0x20
   140003cd4:	mov    rbp,rdx
   140003cd7:	mov    rsi,r9
   140003cda:	xor    edx,edx
   140003cdc:	mov    rdi,r8
   140003cdf:	mov    eax,0x80004003
   140003ce4:	test   r9,r9
   140003ce7:	je     0x140003d2f
   140003ce9:	mov    QWORD PTR [r9],rdx
   140003cec:	test   rbp,rbp
   140003cef:	je     0x140003d17
   140003cf1:	cmp    DWORD PTR [r8],edx
   140003cf4:	jne    0x140003d10
   140003cf6:	cmp    DWORD PTR [r8+0x4],edx
   140003cfa:	jne    0x140003d10
   140003cfc:	cmp    DWORD PTR [r8+0x8],0xc0
   140003d04:	jne    0x140003d10
   140003d06:	cmp    DWORD PTR [r8+0xc],0x46000000
   140003d0e:	je     0x140003d17
   140003d10:	mov    eax,0x80040110
   140003d15:	jmp    0x140003d2f
   140003d17:	mov    rbx,QWORD PTR [rcx+0x40]
   140003d1b:	mov    rcx,rbx
   140003d1e:	call   QWORD PTR [rip+0x268c]        # 0x1400063b0
   140003d24:	mov    r8,rsi
   140003d27:	mov    rdx,rdi
   140003d2a:	mov    rcx,rbp
   140003d2d:	call   rbx
   140003d2f:	mov    rbx,QWORD PTR [rsp+0x30]
   140003d34:	mov    rbp,QWORD PTR [rsp+0x38]
   140003d39:	mov    rsi,QWORD PTR [rsp+0x40]
   140003d3e:	add    rsp,0x20
   140003d42:	pop    rdi
   140003d43:	ret    
   140003d44:	int3   
   140003d45:	int3   
   140003d46:	int3   
   140003d47:	int3   
   140003d48:	int3   
   140003d49:	int3   
   140003d4a:	int3   
   140003d4b:	int3   
   140003d4c:	int3   
   140003d4d:	int3   
   140003d4e:	int3   
   140003d4f:	int3   
   140003d50:	sub    rsp,0x28
   140003d54:	test   edx,edx
   140003d56:	je     0x140003d61
   140003d58:	lock inc DWORD PTR [rip+0x5969]        # 0x1400096c8
   140003d5f:	jmp    0x140003d84
   140003d61:	or     eax,0xffffffff
   140003d64:	lock xadd DWORD PTR [rip+0x595c],eax        # 0x1400096c8
   140003d6c:	cmp    eax,0x1
   140003d6f:	jne    0x140003d84
   140003d71:	mov    rcx,QWORD PTR [rip+0x5a38]        # 0x1400097b0
   140003d78:	mov    BYTE PTR [rip+0x5a3a],al        # 0x1400097b8
   140003d7e:	call   QWORD PTR [rip+0x24c4]        # 0x140006248
   140003d84:	xor    eax,eax
   140003d86:	add    rsp,0x28
   140003d8a:	ret    
   140003d8b:	int3   
   140003d8c:	int3   
   140003d8d:	int3   
   140003d8e:	int3   
   140003d8f:	int3   
   140003d90:	int3   
   140003d91:	int3   
   140003d92:	int3   
   140003d93:	int3   
   140003d94:	int3   
   140003d95:	int3   
   140003d96:	int3   
   140003d97:	int3   
   140003d98:	int3   
   140003d99:	int3   
   140003d9a:	int3   
   140003d9b:	int3   
   140003d9c:	int3   
   140003d9d:	int3   
   140003d9e:	int3   
   140003d9f:	int3   
   140003da0:	mov    r8d,ecx
   140003da3:	jmp    0x140002eec
   140003da8:	int3   
   140003da9:	int3   
   140003daa:	int3   
   140003dab:	int3   
   140003dac:	int3   
   140003dad:	int3   
   140003dae:	int3   
   140003daf:	int3   
   140003db0:	mov    r11,rsp
   140003db3:	mov    DWORD PTR [r11+0x20],r9d
   140003db7:	sub    rsp,0x48
   140003dbb:	and    QWORD PTR [r11-0x18],0x0
   140003dc0:	lea    rax,[r11+0x20]
   140003dc4:	movzx  r9d,dx
   140003dc8:	mov    edx,0x2b
   140003dcd:	mov    QWORD PTR [r11-0x20],0x4
   140003dd5:	mov    QWORD PTR [r11-0x28],rax
   140003dd9:	call   QWORD PTR [rip+0x25b9]        # 0x140006398
   140003ddf:	add    rsp,0x48
   140003de3:	ret    
   140003de4:	int3   
   140003de5:	int3   
   140003de6:	int3   
   140003de7:	int3   
   140003de8:	int3   
   140003de9:	int3   
   140003dea:	int3   
   140003deb:	int3   
   140003dec:	mov    QWORD PTR [rsp+0x8],rbx
   140003df1:	mov    QWORD PTR [rsp+0x10],rsi
   140003df6:	push   rdi
   140003df7:	sub    rsp,0x20
   140003dfb:	xor    esi,esi
   140003dfd:	mov    rdi,rdx
   140003e00:	test   rcx,rcx
   140003e03:	mov    rbx,rcx
   140003e06:	je     0x140003e4c
   140003e08:	cmp    WORD PTR [rbx],si
   140003e0b:	je     0x140003e4c
   140003e0d:	mov    rax,rdi
   140003e10:	test   rdi,rdi
   140003e13:	je     0x140003e30
   140003e15:	movzx  ecx,WORD PTR [rax]
   140003e18:	test   cx,cx
   140003e1b:	je     0x140003e30
   140003e1d:	cmp    WORD PTR [rbx],cx
   140003e20:	je     0x140003e41
   140003e22:	mov    rcx,rax
   140003e25:	call   QWORD PTR [rip+0x23e5]        # 0x140006210
   140003e2b:	test   rax,rax
   140003e2e:	jne    0x140003e15
   140003e30:	mov    rcx,rbx
   140003e33:	call   QWORD PTR [rip+0x23d7]        # 0x140006210
   140003e39:	mov    rbx,rax
   140003e3c:	test   rax,rax
   140003e3f:	jmp    0x140003e06
   140003e41:	mov    rcx,rbx
   140003e44:	call   QWORD PTR [rip+0x23c6]        # 0x140006210
   140003e4a:	jmp    0x140003e4e
   140003e4c:	xor    eax,eax
   140003e4e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e53:	mov    rsi,QWORD PTR [rsp+0x38]
   140003e58:	add    rsp,0x20
   140003e5c:	pop    rdi
   140003e5d:	ret    
   140003e5e:	int3   
   140003e5f:	int3   
   140003e60:	int3   
   140003e61:	int3   
   140003e62:	int3   
   140003e63:	int3   
   140003e64:	mov    rax,rsp
   140003e67:	mov    QWORD PTR [rax+0x8],rbx
   140003e6b:	mov    QWORD PTR [rax+0x10],rsi
   140003e6f:	mov    QWORD PTR [rax+0x18],rdi
   140003e73:	mov    QWORD PTR [rax+0x20],r14
   140003e77:	push   rbp
   140003e78:	lea    rbp,[rax-0x3b8]
   140003e7f:	sub    rsp,0x4b0
   140003e86:	mov    rax,QWORD PTR [rip+0x517b]        # 0x140009008
   140003e8d:	xor    rax,rsp
   140003e90:	mov    QWORD PTR [rbp+0x3a0],rax
   140003e97:	lea    rax,[rsp+0x58]
   140003e9c:	xor    esi,esi
   140003e9e:	mov    r9d,0x20019
   140003ea4:	mov    QWORD PTR [rsp+0x58],rsi
   140003ea9:	xor    r8d,r8d
   140003eac:	mov    QWORD PTR [rsp+0x20],rax
   140003eb1:	lea    rdx,[rip+0x2948]        # 0x140006800
   140003eb8:	mov    rcx,0xffffffff80000000
   140003ebf:	call   QWORD PTR [rip+0x2323]        # 0x1400061e8
   140003ec5:	test   eax,eax
   140003ec7:	jne    0x140004058
   140003ecd:	mov    rdi,QWORD PTR [rsp+0x58]
   140003ed2:	lea    rcx,[rbp-0x7e]
   140003ed6:	xor    edx,edx
   140003ed8:	mov    WORD PTR [rbp-0x80],si
   140003edc:	mov    r8d,0x208
   140003ee2:	call   0x140005bce
   140003ee7:	mov    rcx,QWORD PTR [rip+0x57ba]        # 0x1400096a8
   140003eee:	lea    rax,[rip+0x25eb]        # 0x1400064e0
   140003ef5:	mov    ebx,0x104
   140003efa:	mov    QWORD PTR [rsp+0x50],rax
   140003eff:	mov    r8d,ebx
   140003f02:	lea    rdx,[rbp-0x80]
   140003f06:	call   QWORD PTR [rip+0x21e4]        # 0x1400060f0
   140003f0c:	test   eax,eax
   140003f0e:	je     0x14000404a
   140003f14:	lea    r9,[rsp+0x50]
   140003f19:	mov    edx,ebx
   140003f1b:	lea    r8,[rbp+0x190]
   140003f22:	lea    rcx,[rbp-0x80]
   140003f26:	call   QWORD PTR [rip+0x216c]        # 0x140006098
   140003f2c:	dec    eax
   140003f2e:	cmp    eax,0x103
   140003f33:	ja     0x14000404a
   140003f39:	mov    rdx,QWORD PTR [rsp+0x50]
   140003f3e:	lea    rax,[rsp+0x70]
   140003f43:	mov    QWORD PTR [rsp+0x40],rax
   140003f48:	xor    r9d,r9d
   140003f4b:	lea    rax,[rsp+0x60]
   140003f50:	mov    QWORD PTR [rsp+0x60],rsi
   140003f55:	mov    QWORD PTR [rsp+0x38],rax
   140003f5a:	xor    r8d,r8d
   140003f5d:	mov    QWORD PTR [rsp+0x30],rsi
   140003f62:	mov    rcx,rdi
   140003f65:	mov    DWORD PTR [rsp+0x28],0x2001f
   140003f6d:	mov    ebx,esi
   140003f6f:	mov    DWORD PTR [rsp+0x20],esi
   140003f73:	call   QWORD PTR [rip+0x224f]        # 0x1400061c8
   140003f79:	lea    r14,[rip+0x28d0]        # 0x140006850
   140003f80:	test   eax,eax
   140003f82:	jne    0x140003fad
   140003f84:	mov    rbx,QWORD PTR [rsp+0x60]
   140003f89:	lea    r9d,[rsi+0x1]
   140003f8d:	mov    rcx,rbx
   140003f90:	mov    DWORD PTR [rsp+0x28],0x4e
   140003f98:	xor    r8d,r8d
   140003f9b:	mov    QWORD PTR [rsp+0x20],r14
   140003fa0:	lea    rdx,[rip+0x2859]        # 0x140006800
   140003fa7:	call   QWORD PTR [rip+0x2223]        # 0x1400061d0
   140003fad:	lea    rax,[rsp+0x74]
   140003fb2:	mov    QWORD PTR [rsp+0x68],rsi
   140003fb7:	mov    QWORD PTR [rsp+0x40],rax
   140003fbc:	xor    r9d,r9d
   140003fbf:	lea    rax,[rsp+0x68]
   140003fc4:	xor    r8d,r8d
   140003fc7:	mov    QWORD PTR [rsp+0x38],rax
   140003fcc:	mov    rdx,r14
   140003fcf:	mov    QWORD PTR [rsp+0x30],rsi
   140003fd4:	mov    rcx,rdi
   140003fd7:	mov    DWORD PTR [rsp+0x28],0x2001f
   140003fdf:	mov    DWORD PTR [rsp+0x20],esi
   140003fe3:	call   QWORD PTR [rip+0x21df]        # 0x1400061c8
   140003fe9:	test   eax,eax
   140003feb:	jne    0x14000403c
   140003fed:	mov    eax,esi
   140003fef:	test   rbx,rbx
   140003ff2:	je     0x140003ffd
   140003ff4:	mov    rcx,rbx
   140003ff7:	call   QWORD PTR [rip+0x21db]        # 0x1400061d8
   140003ffd:	mov    rbx,QWORD PTR [rsp+0x68]
   140004002:	test   eax,eax
   140004004:	jne    0x14000403c
   140004006:	mov    rcx,QWORD PTR [rsp+0x50]
   14000400b:	or     rax,0xffffffffffffffff
   14000400f:	inc    rax
   140004012:	cmp    WORD PTR [rcx+rax*2],si
   140004016:	jne    0x14000400f
   140004018:	lea    eax,[rax*2+0x2]
   14000401f:	mov    r9d,0x1
   140004025:	mov    DWORD PTR [rsp+0x28],eax
   140004029:	xor    r8d,r8d
   14000402c:	mov    QWORD PTR [rsp+0x20],rcx
   140004031:	xor    edx,edx
   140004033:	mov    rcx,rbx
   140004036:	call   QWORD PTR [rip+0x2194]        # 0x1400061d0
   14000403c:	test   rbx,rbx
   14000403f:	je     0x14000404a
   140004041:	mov    rcx,rbx
   140004044:	call   QWORD PTR [rip+0x218e]        # 0x1400061d8
   14000404a:	test   rdi,rdi
   14000404d:	je     0x140004058
   14000404f:	mov    rcx,rdi
   140004052:	call   QWORD PTR [rip+0x2180]        # 0x1400061d8
   140004058:	xor    eax,eax
   14000405a:	mov    rcx,QWORD PTR [rbp+0x3a0]
   140004061:	xor    rcx,rsp
   140004064:	call   0x140005220
   140004069:	lea    r11,[rsp+0x4b0]
   140004071:	mov    rbx,QWORD PTR [r11+0x10]
   140004075:	mov    rsi,QWORD PTR [r11+0x18]
   140004079:	mov    rdi,QWORD PTR [r11+0x20]
   14000407d:	mov    r14,QWORD PTR [r11+0x28]
   140004081:	mov    rsp,r11
   140004084:	pop    rbp
   140004085:	ret    
   140004086:	int3   
   140004087:	int3   
   140004088:	int3   
   140004089:	int3   
   14000408a:	int3   
   14000408b:	int3   
   14000408c:	mov    QWORD PTR [rsp+0x8],rbx
   140004091:	mov    QWORD PTR [rsp+0x10],rdi
   140004096:	push   rbp
   140004097:	lea    rbp,[rsp-0x380]
   14000409f:	sub    rsp,0x480
   1400040a6:	mov    rax,QWORD PTR [rip+0x4f5b]        # 0x140009008
   1400040ad:	xor    rax,rsp
   1400040b0:	mov    QWORD PTR [rbp+0x370],rax
   1400040b7:	xor    edi,edi
   1400040b9:	lea    rax,[rsp+0x30]
   1400040be:	mov    r9d,0x20019
   1400040c4:	mov    QWORD PTR [rsp+0x38],rdi
   1400040c9:	xor    r8d,r8d
   1400040cc:	mov    QWORD PTR [rsp+0x40],rdi
   1400040d1:	lea    rdx,[rip+0x2728]        # 0x140006800
   1400040d8:	mov    QWORD PTR [rsp+0x48],rdi
   1400040dd:	mov    rcx,0xffffffff80000000
   1400040e4:	mov    QWORD PTR [rsp+0x30],rdi
   1400040e9:	mov    QWORD PTR [rsp+0x20],rax
   1400040ee:	call   QWORD PTR [rip+0x20f4]        # 0x1400061e8
   1400040f4:	test   eax,eax
   1400040f6:	jne    0x14000419d
   1400040fc:	mov    rbx,QWORD PTR [rsp+0x30]
   140004101:	lea    rcx,[rsp+0x52]
   140004106:	xor    edx,edx
   140004108:	mov    QWORD PTR [rsp+0x38],rbx
   14000410d:	mov    r8d,0x208
   140004113:	mov    WORD PTR [rsp+0x50],di
   140004118:	call   0x140005bce
   14000411d:	mov    rcx,QWORD PTR [rip+0x5584]        # 0x1400096a8
   140004124:	lea    rax,[rip+0x23b5]        # 0x1400064e0
   14000412b:	mov    r8d,0x104
   140004131:	mov    QWORD PTR [rsp+0x30],rax
   140004136:	lea    rdx,[rsp+0x50]
   14000413b:	call   QWORD PTR [rip+0x1faf]        # 0x1400060f0
   140004141:	test   eax,eax
   140004143:	je     0x14000418f
   140004145:	lea    r9,[rsp+0x30]
   14000414a:	mov    edx,0x104
   14000414f:	lea    r8,[rbp+0x160]
   140004156:	lea    rcx,[rsp+0x50]
   14000415b:	call   QWORD PTR [rip+0x1f37]        # 0x140006098
   140004161:	dec    eax
   140004163:	cmp    eax,0x103
   140004168:	ja     0x14000418f
   14000416a:	mov    rdx,QWORD PTR [rsp+0x30]
   14000416f:	lea    rcx,[rsp+0x38]
   140004174:	call   0x14000141c
   140004179:	lea    rdx,[rip+0x26d0]        # 0x140006850
   140004180:	lea    rcx,[rsp+0x38]
   140004185:	call   0x14000141c
   14000418a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000418f:	test   rbx,rbx
   140004192:	je     0x14000419d
   140004194:	mov    rcx,rbx
   140004197:	call   QWORD PTR [rip+0x203b]        # 0x1400061d8
   14000419d:	xor    eax,eax
   14000419f:	mov    rcx,QWORD PTR [rbp+0x370]
   1400041a6:	xor    rcx,rsp
   1400041a9:	call   0x140005220
   1400041ae:	lea    r11,[rsp+0x480]
   1400041b6:	mov    rbx,QWORD PTR [r11+0x10]
   1400041ba:	mov    rdi,QWORD PTR [r11+0x18]
   1400041be:	mov    rsp,r11
   1400041c1:	pop    rbp
   1400041c2:	ret    
   1400041c3:	int3   
   1400041c4:	int3   
   1400041c5:	int3   
   1400041c6:	int3   
   1400041c7:	int3   
   1400041c8:	int3   
   1400041c9:	int3   
   1400041ca:	int3   
   1400041cb:	int3   
   1400041cc:	mov    QWORD PTR [rsp+0x10],rbx
   1400041d1:	mov    QWORD PTR [rsp+0x20],rbp
   1400041d6:	push   rsi
   1400041d7:	push   rdi
   1400041d8:	push   r14
   1400041da:	sub    rsp,0x30
   1400041de:	mov    rax,QWORD PTR [rip+0x4e23]        # 0x140009008
   1400041e5:	xor    rax,rsp
   1400041e8:	mov    QWORD PTR [rsp+0x28],rax
   1400041ed:	mov    eax,DWORD PTR [rip+0x2619]        # 0x14000680c
   1400041f3:	xor    edi,edi
   1400041f5:	mov    DWORD PTR [rsp+0x20],eax
   1400041f9:	mov    r14,r8
   1400041fc:	movzx  eax,WORD PTR [rip+0x260d]        # 0x140006810
   140004203:	mov    WORD PTR [rsp+0x24],ax
   140004208:	mov    DWORD PTR [r8],edi
   14000420b:	jmp    0x14000423c
   14000420d:	lea    rdx,[rip+0x2604]        # 0x140006818
   140004214:	mov    rcx,rbx
   140004217:	call   QWORD PTR [rip+0x20eb]        # 0x140006308
   14000421d:	test   eax,eax
   14000421f:	je     0x140004333
   140004225:	lea    rdx,[rip+0x2604]        # 0x140006830
   14000422c:	mov    rcx,rbx
   14000422f:	call   QWORD PTR [rip+0x20d3]        # 0x140006308
   140004235:	test   eax,eax
   140004237:	je     0x140004270
   140004239:	mov    rcx,rbx
   14000423c:	lea    rdx,[rsp+0x20]
   140004241:	call   0x140003dec
   140004246:	mov    rbx,rax
   140004249:	test   rax,rax
   14000424c:	jne    0x14000420d
   14000424e:	mov    al,0x1
   140004250:	mov    rcx,QWORD PTR [rsp+0x28]
   140004255:	xor    rcx,rsp
   140004258:	call   0x140005220
   14000425d:	mov    rbx,QWORD PTR [rsp+0x58]
   140004262:	mov    rbp,QWORD PTR [rsp+0x68]
   140004267:	add    rsp,0x30
   14000426b:	pop    r14
   14000426d:	pop    rdi
   14000426e:	pop    rsi
   14000426f:	ret    
   140004270:	call   0x140003e64
   140004275:	mov    DWORD PTR [r14],eax
   140004278:	test   eax,eax
   14000427a:	js     0x14000433f
   140004280:	mov    rsi,QWORD PTR [rip+0x5439]        # 0x1400096c0
   140004287:	test   rsi,rsi
   14000428a:	je     0x1400043cc
   140004290:	mov    ebx,edi
   140004292:	cmp    QWORD PTR [rsi],rdi
   140004295:	je     0x140004325
   14000429b:	mov    rbp,QWORD PTR [rsi+0x30]
   14000429f:	test   rbp,rbp
   1400042a2:	je     0x1400042b4
   1400042a4:	mov    rcx,rbp
   1400042a7:	call   QWORD PTR [rip+0x2103]        # 0x1400063b0
   1400042ad:	call   rbp
   1400042af:	test   rax,rax
   1400042b2:	jne    0x140004301
   1400042b4:	mov    rbx,QWORD PTR [rsi+0x8]
   1400042b8:	mov    rcx,rbx
   1400042bb:	call   QWORD PTR [rip+0x20ef]        # 0x1400063b0
   1400042c1:	mov    ecx,0x1
   1400042c6:	call   rbx
   1400042c8:	mov    ebx,eax
   1400042ca:	test   eax,eax
   1400042cc:	js     0x14000432c
   1400042ce:	mov    eax,DWORD PTR [rip+0x53cc]        # 0x1400096a0
   1400042d4:	cmp    eax,0xf8
   1400042d9:	jne    0x140004307
   1400042db:	mov    rbx,QWORD PTR [rsi+0x38]
   1400042df:	mov    rcx,rbx
   1400042e2:	call   QWORD PTR [rip+0x20c8]        # 0x1400063b0
   1400042e8:	call   rbx
   1400042ea:	mov    rcx,QWORD PTR [rsi]
   1400042ed:	mov    rdx,rax
   1400042f0:	mov    r8d,0x1
   1400042f6:	call   0x1400032a8
   1400042fb:	mov    ebx,eax
   1400042fd:	test   eax,eax
   1400042ff:	js     0x14000432c
   140004301:	mov    eax,DWORD PTR [rip+0x5399]        # 0x1400096a0
   140004307:	cmp    eax,0xb0
   14000430c:	jne    0x140004314
   14000430e:	add    rsi,0x38
   140004312:	jmp    0x140004318
   140004314:	add    rsi,0x48
   140004318:	cmp    QWORD PTR [rsi],rdi
   14000431b:	jne    0x14000429b
   140004321:	test   ebx,ebx
   140004323:	js     0x14000432c
   140004325:	call   0x140003680
   14000432a:	mov    ebx,eax
   14000432c:	mov    edi,ebx
   14000432e:	jmp    0x1400043cc
   140004333:	call   0x14000408c
   140004338:	mov    DWORD PTR [r14],eax
   14000433b:	test   eax,eax
   14000433d:	jns    0x140004346
   14000433f:	xor    al,al
   140004341:	jmp    0x140004250
   140004346:	mov    rsi,QWORD PTR [rip+0x5373]        # 0x1400096c0
   14000434d:	test   rsi,rsi
   140004350:	je     0x1400043cc
   140004352:	jmp    0x1400043c2
   140004354:	mov    rbx,QWORD PTR [rsi+0x30]
   140004358:	test   rbx,rbx
   14000435b:	je     0x14000436d
   14000435d:	mov    rcx,rbx
   140004360:	call   QWORD PTR [rip+0x204a]        # 0x1400063b0
   140004366:	call   rbx
   140004368:	test   rax,rax
   14000436b:	jne    0x1400043ac
   14000436d:	mov    rbx,QWORD PTR [rsi+0x8]
   140004371:	mov    rcx,rbx
   140004374:	call   QWORD PTR [rip+0x2036]        # 0x1400063b0
   14000437a:	xor    ecx,ecx
   14000437c:	call   rbx
   14000437e:	cmp    DWORD PTR [rip+0x5318],0xf8        # 0x1400096a0
   140004388:	jne    0x1400043ac
   14000438a:	mov    rbx,QWORD PTR [rsi+0x38]
   14000438e:	test   rbx,rbx
   140004391:	je     0x1400043be
   140004393:	mov    rcx,rbx
   140004396:	call   QWORD PTR [rip+0x2014]        # 0x1400063b0
   14000439c:	call   rbx
   14000439e:	mov    rcx,QWORD PTR [rsi]
   1400043a1:	mov    rdx,rax
   1400043a4:	xor    r8d,r8d
   1400043a7:	call   0x1400032a8
   1400043ac:	cmp    DWORD PTR [rip+0x52ea],0xb0        # 0x1400096a0
   1400043b6:	jne    0x1400043be
   1400043b8:	add    rsi,0x38
   1400043bc:	jmp    0x1400043c2
   1400043be:	add    rsi,0x48
   1400043c2:	cmp    QWORD PTR [rsi],rdi
   1400043c5:	jne    0x140004354
   1400043c7:	call   0x140003568
   1400043cc:	mov    DWORD PTR [r14],edi
   1400043cf:	jmp    0x14000433f
   1400043d4:	int3   
   1400043d5:	int3   
   1400043d6:	int3   
   1400043d7:	int3   
   1400043d8:	int3   
   1400043d9:	int3   
   1400043da:	int3   
   1400043db:	int3   
   1400043dc:	mov    rax,rsp
   1400043df:	mov    QWORD PTR [rax+0x8],rbx
   1400043e3:	mov    QWORD PTR [rax+0x10],rbp
   1400043e7:	mov    QWORD PTR [rax+0x18],rsi
   1400043eb:	mov    QWORD PTR [rax+0x20],rdi
   1400043ef:	push   r15
   1400043f1:	sub    rsp,0x90
   1400043f8:	xor    r9d,r9d
   1400043fb:	mov    rdi,rcx
   1400043fe:	xor    r8d,r8d
   140004401:	xor    ecx,ecx
   140004403:	lea    edx,[r9+0x1]
   140004407:	call   QWORD PTR [rip+0x1cab]        # 0x1400060b8
   14000440d:	call   QWORD PTR [rip+0x1d3d]        # 0x140006150
   140004413:	xor    edx,edx
   140004415:	xor    ecx,ecx
   140004417:	mov    rsi,rax
   14000441a:	call   QWORD PTR [rip+0x1c18]        # 0x140006038
   140004420:	xor    ebp,ebp
   140004422:	mov    DWORD PTR [rsp+0x50],eax
   140004426:	lea    r15,[rip+0x4c83]        # 0x1400090b0
   14000442d:	mov    ebx,eax
   14000442f:	test   eax,eax
   140004431:	je     0x14000445b
   140004433:	mov    rcx,QWORD PTR [rip+0x4c76]        # 0x1400090b0
   14000443a:	cmp    rcx,r15
   14000443d:	je     0x14000445b
   14000443f:	test   BYTE PTR [rcx+0x1c],0x1
   140004443:	je     0x14000445b
   140004445:	mov    rcx,QWORD PTR [rcx+0x10]
   140004449:	lea    edx,[rbp+0xa]
   14000444c:	mov    r9d,eax
   14000444f:	lea    r8,[rip+0x2542]        # 0x140006998
   140004456:	call   0x140003db0
   14000445b:	test   ebx,ebx
   14000445d:	js     0x140004492
   14000445f:	mov    QWORD PTR [rsp+0x40],rbp
   140004464:	xor    r9d,r9d
   140004467:	mov    DWORD PTR [rsp+0x38],ebp
   14000446b:	xor    r8d,r8d
   14000446e:	mov    QWORD PTR [rsp+0x30],rbp
   140004473:	or     edx,0xffffffff
   140004476:	mov    DWORD PTR [rsp+0x28],0x3
   14000447e:	xor    ecx,ecx
   140004480:	mov    DWORD PTR [rsp+0x20],0x2
   140004488:	call   QWORD PTR [rip+0x1b9a]        # 0x140006028
   14000448e:	mov    DWORD PTR [rsp+0x50],eax
   140004492:	lea    rax,[rip+0x4c1f]        # 0x1400090b8
   140004499:	mov    DWORD PTR [rip+0x5319],0x1388        # 0x1400097bc
   1400044a3:	lea    rbx,[rip+0x51f6]        # 0x1400096a0
   1400044aa:	mov    QWORD PTR [rip+0x52b7],rax        # 0x140009768
   1400044b1:	mov    r8,rdi
   1400044b4:	mov    QWORD PTR [rip+0x5345],rbx        # 0x140009800
   1400044bb:	mov    DWORD PTR [rip+0x52fb],0x3e8        # 0x1400097c0
   1400044c5:	mov    DWORD PTR [rip+0x51d1],0xf8        # 0x1400096a0
   1400044cf:	mov    DWORD PTR [rip+0x5277],0x301        # 0x140009750
   1400044d9:	call   0x140003110
   1400044de:	test   eax,eax
   1400044e0:	js     0x140004549
   1400044e2:	mov    eax,ebp
   1400044e4:	mov    DWORD PTR [rip+0x52a2],0x1        # 0x140009790
   1400044ee:	test   eax,eax
   1400044f0:	js     0x140004549
   1400044f2:	call   QWORD PTR [rip+0x1c68]        # 0x140006160
   1400044f8:	mov    ecx,0x18
   1400044fd:	mov    QWORD PTR [rip+0x529c],rbp        # 0x1400097a0
   140004504:	mov    DWORD PTR [rip+0x528e],eax        # 0x140009798
   14000450a:	call   0x140004df4
   14000450f:	mov    rcx,rax
   140004512:	test   rax,rax
   140004515:	je     0x14000452a
   140004517:	mov    QWORD PTR [rax],rbp
   14000451a:	mov    QWORD PTR [rax+0x8],rbp
   14000451e:	mov    DWORD PTR [rax+0x10],ebp
   140004521:	mov    QWORD PTR [rip+0x5278],rax        # 0x1400097a0
   140004528:	jmp    0x140004534
   14000452a:	mov    rcx,rbp
   14000452d:	mov    QWORD PTR [rip+0x526c],rcx        # 0x1400097a0
   140004534:	mov    rax,QWORD PTR [rip+0x526d]        # 0x1400097a8
   14000453b:	test   rcx,rcx
   14000453e:	cmovne rax,rbp
   140004542:	mov    QWORD PTR [rip+0x525f],rax        # 0x1400097a8
   140004549:	lea    r8,[rsp+0x50]
   14000454e:	mov    rcx,rsi
   140004551:	call   0x1400041cc
   140004556:	test   al,al
   140004558:	je     0x1400046a8
   14000455e:	xor    r9d,r9d
   140004561:	xor    r8d,r8d
   140004564:	xor    edx,edx
   140004566:	xor    ecx,ecx
   140004568:	call   QWORD PTR [rip+0x1ce2]        # 0x140006250
   14000456e:	mov    QWORD PTR [rip+0x523b],rax        # 0x1400097b0
   140004575:	test   rax,rax
   140004578:	je     0x1400045ae
   14000457a:	lea    rax,[rsp+0x50]
   14000457f:	mov    DWORD PTR [rsp+0x50],ebp
   140004583:	mov    QWORD PTR [rsp+0x28],rax
   140004588:	lea    r8,[rip+0xfffffffffffff541]        # 0x140003ad0
   14000458f:	mov    r9,rbx
   140004592:	mov    DWORD PTR [rsp+0x20],ebp
   140004596:	xor    edx,edx
   140004598:	xor    ecx,ecx
   14000459a:	call   QWORD PTR [rip+0x1db8]        # 0x140006358
   1400045a0:	test   rax,rax
   1400045a3:	je     0x1400045ae
   1400045a5:	mov    rcx,rax
   1400045a8:	call   QWORD PTR [rip+0x1afa]        # 0x1400060a8
   1400045ae:	call   0x140001264
   1400045b3:	test   eax,eax
   1400045b5:	je     0x1400045e1
   1400045b7:	mov    rcx,QWORD PTR [rip+0x4af2]        # 0x1400090b0
   1400045be:	cmp    rcx,r15
   1400045c1:	je     0x1400045e1
   1400045c3:	test   BYTE PTR [rcx+0x1c],0x1
   1400045c7:	je     0x1400045e1
   1400045c9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400045cd:	lea    r8,[rip+0x23c4]        # 0x140006998
   1400045d4:	mov    edx,0xb
   1400045d9:	mov    r9d,eax
   1400045dc:	call   0x140003db0
   1400045e1:	call   QWORD PTR [rip+0x1a69]        # 0x140006050
   1400045e7:	mov    edi,eax
   1400045e9:	test   eax,eax
   1400045eb:	je     0x140004624
   1400045ed:	mov    rcx,QWORD PTR [rip+0x4abc]        # 0x1400090b0
   1400045f4:	cmp    rcx,r15
   1400045f7:	je     0x140004624
   1400045f9:	test   BYTE PTR [rcx+0x1c],0x1
   1400045fd:	je     0x140004624
   1400045ff:	mov    rcx,QWORD PTR [rcx+0x10]
   140004603:	lea    r8,[rip+0x238e]        # 0x140006998
   14000460a:	mov    edx,0xc
   14000460f:	mov    r9d,eax
   140004612:	call   0x140003db0
   140004617:	jmp    0x140004624
   140004619:	lea    rcx,[rsp+0x58]
   14000461e:	call   QWORD PTR [rip+0x6a2c]        # 0x14000b050
   140004624:	xor    r9d,r9d
   140004627:	lea    rcx,[rsp+0x58]
   14000462c:	xor    r8d,r8d
   14000462f:	xor    edx,edx
   140004631:	call   QWORD PTR [rip+0x6a09]        # 0x14000b040
   140004637:	test   eax,eax
   140004639:	jne    0x140004619
   14000463b:	mov    rbx,QWORD PTR [rip+0x507e]        # 0x1400096c0
   140004642:	test   rbx,rbx
   140004645:	je     0x140004673
   140004647:	mov    eax,ebp
   140004649:	jmp    0x14000466e
   14000464b:	test   eax,eax
   14000464d:	jne    0x140004673
   14000464f:	mov    ecx,DWORD PTR [rbx+0x28]
   140004652:	call   QWORD PTR [rip+0x19e8]        # 0x140006040
   140004658:	cmp    DWORD PTR [rip+0x503e],0xb0        # 0x1400096a0
   140004662:	jne    0x14000466a
   140004664:	add    rbx,0x38
   140004668:	jmp    0x14000466e
   14000466a:	add    rbx,0x48
   14000466e:	cmp    QWORD PTR [rbx],rbp
   140004671:	jne    0x14000464b
   140004673:	mov    rcx,QWORD PTR [rip+0x5196]        # 0x140009810
   14000467a:	call   QWORD PTR [rip+0x1bc8]        # 0x140006248
   140004680:	mov    rcx,QWORD PTR [rip+0x5191]        # 0x140009818
   140004687:	mov    edx,0x1f4
   14000468c:	call   QWORD PTR [rip+0x1bde]        # 0x140006270
   140004692:	mov    rcx,QWORD PTR [rip+0x517f]        # 0x140009818
   140004699:	call   QWORD PTR [rip+0x1a09]        # 0x1400060a8
   14000469f:	mov    QWORD PTR [rip+0x5172],rbp        # 0x140009818
   1400046a6:	jmp    0x1400046ac
   1400046a8:	mov    edi,DWORD PTR [rsp+0x50]
   1400046ac:	mov    rcx,QWORD PTR [rip+0x50fd]        # 0x1400097b0
   1400046b3:	test   rcx,rcx
   1400046b6:	je     0x1400046d2
   1400046b8:	call   QWORD PTR [rip+0x19ea]        # 0x1400060a8
   1400046be:	mov    rcx,QWORD PTR [rip+0x50eb]        # 0x1400097b0
   1400046c5:	test   eax,eax
   1400046c7:	cmovne rcx,rbp
   1400046cb:	mov    QWORD PTR [rip+0x50de],rcx        # 0x1400097b0
   1400046d2:	call   0x140003880
   1400046d7:	call   QWORD PTR [rip+0x1933]        # 0x140006010
   1400046dd:	lea    r11,[rsp+0x90]
   1400046e5:	mov    eax,edi
   1400046e7:	mov    rbx,QWORD PTR [r11+0x10]
   1400046eb:	mov    rbp,QWORD PTR [r11+0x18]
   1400046ef:	mov    rsi,QWORD PTR [r11+0x20]
   1400046f3:	mov    rdi,QWORD PTR [r11+0x28]
   1400046f7:	mov    rsp,r11
   1400046fa:	pop    r15
   1400046fc:	ret    
   1400046fd:	int3   
   1400046fe:	int3   
   1400046ff:	int3   
   140004700:	int3   
   140004701:	int3   
   140004702:	int3   
   140004703:	int3   
   140004704:	int3   
   140004705:	int3   
   140004706:	int3   
   140004707:	int3   
   140004708:	int3   
   140004709:	int3   
   14000470a:	int3   
   14000470b:	int3   
   14000470c:	int3   
   14000470d:	int3   
   14000470e:	int3   
   14000470f:	int3   
   140004710:	xor    eax,eax
   140004712:	ret    
   140004713:	int3   
   140004714:	int3   
   140004715:	int3   
   140004716:	int3   
   140004717:	int3   
   140004718:	int3   
   140004719:	int3   
   14000471a:	int3   
   14000471b:	int3   
   14000471c:	int3   
   14000471d:	int3   
   14000471e:	int3   
   14000471f:	int3   
   140004720:	mov    QWORD PTR [rsp+0x8],rbx
   140004725:	mov    QWORD PTR [rsp+0x10],rbp
   14000472a:	mov    QWORD PTR [rsp+0x18],rsi
   14000472f:	push   rdi
   140004730:	push   r12
   140004732:	push   r13
   140004734:	push   r14
   140004736:	push   r15
   140004738:	sub    rsp,0x20
   14000473c:	xor    r12d,r12d
   14000473f:	mov    r14,r8
   140004742:	mov    r15,rdx
   140004745:	mov    rbp,rcx
   140004748:	test   r8,r8
   14000474b:	jne    0x140004757
   14000474d:	mov    eax,0x80004003
   140004752:	jmp    0x140004803
   140004757:	mov    ecx,0x48
   14000475c:	mov    QWORD PTR [r8],r12
   14000475f:	mov    esi,0x8007000e
   140004764:	call   0x140004df4
   140004769:	lea    r13,[rip+0x2190]        # 0x140006900
   140004770:	mov    rdi,rax
   140004773:	test   rax,rax
   140004776:	je     0x140004794
   140004778:	xor    edx,edx
   14000477a:	mov    DWORD PTR [rax+0x8],r12d
   14000477e:	lea    rcx,[rax+0x10]
   140004782:	lea    r8d,[rdx+0x28]
   140004786:	call   0x140005bce
   14000478b:	mov    BYTE PTR [rdi+0x38],r12b
   14000478f:	mov    QWORD PTR [rdi],r13
   140004792:	jmp    0x140004797
   140004794:	mov    rdi,r12
   140004797:	test   rdi,rdi
   14000479a:	je     0x140004801
   14000479c:	lea    rcx,[rdi+0x10]
   1400047a0:	mov    QWORD PTR [rdi+0x40],rbp
   1400047a4:	call   0x140001234
   1400047a9:	mov    esi,eax
   1400047ab:	test   eax,eax
   1400047ad:	js     0x1400047b3
   1400047af:	mov    BYTE PTR [rdi+0x38],0x1
   1400047b3:	cmovns esi,r12d
   1400047b7:	test   esi,esi
   1400047b9:	jne    0x1400047db
   1400047bb:	mov    rax,QWORD PTR [rdi]
   1400047be:	mov    rbx,QWORD PTR [rax]
   1400047c1:	mov    rcx,rbx
   1400047c4:	call   QWORD PTR [rip+0x1be6]        # 0x1400063b0
   1400047ca:	mov    r8,r14
   1400047cd:	mov    rdx,r15
   1400047d0:	mov    rcx,rdi
   1400047d3:	call   rbx
   1400047d5:	mov    esi,eax
   1400047d7:	test   eax,eax
   1400047d9:	je     0x140004801
   1400047db:	mov    QWORD PTR [rdi],r13
   1400047de:	mov    DWORD PTR [rdi+0x8],0x1
   1400047e5:	cmp    BYTE PTR [rdi+0x38],r12b
   1400047e9:	je     0x1400047f9
   1400047eb:	lea    rcx,[rdi+0x10]
   1400047ef:	mov    BYTE PTR [rdi+0x38],r12b
   1400047f3:	call   QWORD PTR [rip+0x1a6f]        # 0x140006268
   1400047f9:	mov    rcx,rdi
   1400047fc:	call   0x140004de8
   140004801:	mov    eax,esi
   140004803:	mov    rbx,QWORD PTR [rsp+0x50]
   140004808:	mov    rbp,QWORD PTR [rsp+0x58]
   14000480d:	mov    rsi,QWORD PTR [rsp+0x60]
   140004812:	add    rsp,0x20
   140004816:	pop    r15
   140004818:	pop    r14
   14000481a:	pop    r13
   14000481c:	pop    r12
   14000481e:	pop    rdi
   14000481f:	ret    
   140004820:	int3   
   140004821:	int3   
   140004822:	int3   
   140004823:	int3   
   140004824:	int3   
   140004825:	int3   
   140004826:	int3   
   140004827:	int3   
   140004828:	int3   
   140004829:	int3   
   14000482a:	int3   
   14000482b:	int3   
   14000482c:	int3   
   14000482d:	int3   
   14000482e:	int3   
   14000482f:	int3   
   140004830:	test   rcx,rcx
   140004833:	je     0x1400048f8
   140004839:	test   r8,r8
   14000483c:	jne    0x140004845
   14000483e:	mov    eax,0x80004003
   140004843:	jmp    0x14000484e
   140004845:	and    QWORD PTR [r8],0x0
   140004849:	mov    eax,0x80040110
   14000484e:	ret    
   14000484f:	int3   
   140004850:	int3   
   140004851:	int3   
   140004852:	int3   
   140004853:	int3   
   140004854:	int3   
   140004855:	int3   
   140004856:	int3   
   140004857:	int3   
   140004858:	int3   
   140004859:	int3   
   14000485a:	int3   
   14000485b:	int3   
   14000485c:	int3   
   14000485d:	int3   
   14000485e:	int3   
   14000485f:	int3   
   140004860:	mov    eax,0x1
   140004865:	lock xadd DWORD PTR [rcx+0x8],eax
   14000486a:	inc    eax
   14000486c:	ret    
   14000486d:	int3   
   14000486e:	int3   
   14000486f:	int3   
   140004870:	int3   
   140004871:	int3   
   140004872:	int3   
   140004873:	int3   
   140004874:	int3   
   140004875:	int3   
   140004876:	int3   
   140004877:	int3   
   140004878:	int3   
   140004879:	int3   
   14000487a:	int3   
   14000487b:	int3   
   14000487c:	int3   
   14000487d:	int3   
   14000487e:	int3   
   14000487f:	int3   
   140004880:	mov    QWORD PTR [rsp+0x8],rbx
   140004885:	push   rdi
   140004886:	sub    rsp,0x20
   14000488a:	mov    rbx,rcx
   14000488d:	or     edi,0xffffffff
   140004890:	lock xadd DWORD PTR [rcx+0x8],edi
   140004895:	sub    edi,0x1
   140004898:	jne    0x1400048cc
   14000489a:	test   rcx,rcx
   14000489d:	je     0x1400048cc
   14000489f:	mov    DWORD PTR [rcx+0x8],0x1
   1400048a6:	lea    rax,[rip+0x2053]        # 0x140006900
   1400048ad:	mov    QWORD PTR [rcx],rax
   1400048b0:	add    rcx,0x10
   1400048b4:	cmp    BYTE PTR [rcx+0x28],dil
   1400048b8:	je     0x1400048c4
   1400048ba:	mov    BYTE PTR [rcx+0x28],dil
   1400048be:	call   QWORD PTR [rip+0x19a4]        # 0x140006268
   1400048c4:	mov    rcx,rbx
   1400048c7:	call   0x140004de8
   1400048cc:	mov    eax,edi
   1400048ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400048d3:	add    rsp,0x20
   1400048d7:	pop    rdi
   1400048d8:	ret    
   1400048d9:	int3   
   1400048da:	int3   
   1400048db:	int3   
   1400048dc:	int3   
   1400048dd:	int3   
   1400048de:	int3   
   1400048df:	int3   
   1400048e0:	mov    r9,r8
   1400048e3:	mov    r8,rdx
   1400048e6:	lea    rdx,[rip+0x203b]        # 0x140006928
   1400048ed:	jmp    0x140003b7c
   1400048f2:	int3   
   1400048f3:	int3   
   1400048f4:	int3   
   1400048f5:	int3   
   1400048f6:	int3   
   1400048f7:	int3   
   1400048f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400048fd:	mov    QWORD PTR [rsp+0x18],rbp
   140004902:	mov    QWORD PTR [rsp+0x20],rsi
   140004907:	push   rdi
   140004908:	push   r12
   14000490a:	push   r13
   14000490c:	push   r14
   14000490e:	push   r15
   140004910:	sub    rsp,0x20
   140004914:	xor    r12d,r12d
   140004917:	mov    r14,r8
   14000491a:	mov    r15,rdx
   14000491d:	test   r8,r8
   140004920:	jne    0x14000492c
   140004922:	mov    eax,0x80004003
   140004927:	jmp    0x140004a02
   14000492c:	mov    ecx,0x40
   140004931:	mov    QWORD PTR [r8],r12
   140004934:	mov    esi,0x8007000e
   140004939:	call   0x140004df4
   14000493e:	lea    r13,[rip+0x1f5b]        # 0x1400068a0
   140004945:	mov    rdi,rax
   140004948:	test   rax,rax
   14000494b:	je     0x140004970
   14000494d:	xor    edx,edx
   14000494f:	mov    DWORD PTR [rax+0x8],r12d
   140004953:	lea    rcx,[rax+0x10]
   140004957:	lea    r8d,[rdx+0x28]
   14000495b:	call   0x140005bce
   140004960:	mov    BYTE PTR [rdi+0x38],r12b
   140004964:	mov    QWORD PTR [rdi],r13
   140004967:	lock inc DWORD PTR [rip+0x4d5a]        # 0x1400096c8
   14000496e:	jmp    0x140004973
   140004970:	mov    rdi,r12
   140004973:	test   rdi,rdi
   140004976:	je     0x140004a00
   14000497c:	lea    rcx,[rdi+0x10]
   140004980:	call   0x140001234
   140004985:	mov    esi,eax
   140004987:	test   eax,eax
   140004989:	js     0x14000498f
   14000498b:	mov    BYTE PTR [rdi+0x38],0x1
   14000498f:	cmovns esi,r12d
   140004993:	test   esi,esi
   140004995:	jne    0x1400049b7
   140004997:	mov    rax,QWORD PTR [rdi]
   14000499a:	mov    rbx,QWORD PTR [rax]
   14000499d:	mov    rcx,rbx
   1400049a0:	call   QWORD PTR [rip+0x1a0a]        # 0x1400063b0
   1400049a6:	mov    r8,r14
   1400049a9:	mov    rdx,r15
   1400049ac:	mov    rcx,rdi
   1400049af:	call   rbx
   1400049b1:	mov    esi,eax
   1400049b3:	test   eax,eax
   1400049b5:	je     0x140004a00
   1400049b7:	mov    QWORD PTR [rdi],r13
   1400049ba:	or     ecx,0xffffffff
   1400049bd:	mov    DWORD PTR [rdi+0x8],0x1
   1400049c4:	lock xadd DWORD PTR [rip+0x4cfc],ecx        # 0x1400096c8
   1400049cc:	cmp    ecx,0x1
   1400049cf:	jne    0x1400049e4
   1400049d1:	mov    BYTE PTR [rip+0x4de1],cl        # 0x1400097b8
   1400049d7:	mov    rcx,QWORD PTR [rip+0x4dd2]        # 0x1400097b0
   1400049de:	call   QWORD PTR [rip+0x1864]        # 0x140006248
   1400049e4:	cmp    BYTE PTR [rdi+0x38],r12b
   1400049e8:	je     0x1400049f8
   1400049ea:	lea    rcx,[rdi+0x10]
   1400049ee:	mov    BYTE PTR [rdi+0x38],r12b
   1400049f2:	call   QWORD PTR [rip+0x1870]        # 0x140006268
   1400049f8:	mov    rcx,rdi
   1400049fb:	call   0x140004de8
   140004a00:	mov    eax,esi
   140004a02:	mov    rbx,QWORD PTR [rsp+0x58]
   140004a07:	mov    rbp,QWORD PTR [rsp+0x60]
   140004a0c:	mov    rsi,QWORD PTR [rsp+0x68]
   140004a11:	add    rsp,0x20
   140004a15:	pop    r15
   140004a17:	pop    r14
   140004a19:	pop    r13
   140004a1b:	pop    r12
   140004a1d:	pop    rdi
   140004a1e:	ret    
   140004a1f:	int3   
   140004a20:	int3   
   140004a21:	int3   
   140004a22:	int3   
   140004a23:	int3   
   140004a24:	int3   
   140004a25:	int3   
   140004a26:	int3   
   140004a27:	int3   
   140004a28:	int3   
   140004a29:	int3   
   140004a2a:	int3   
   140004a2b:	int3   
   140004a2c:	int3   
   140004a2d:	int3   
   140004a2e:	int3   
   140004a2f:	int3   
   140004a30:	mov    QWORD PTR [rsp+0x10],rbx
   140004a35:	push   rdi
   140004a36:	sub    rsp,0x20
   140004a3a:	mov    rbx,rcx
   140004a3d:	or     edi,0xffffffff
   140004a40:	lock xadd DWORD PTR [rcx+0x8],edi
   140004a45:	sub    edi,0x1
   140004a48:	jne    0x140004ac9
   140004a4a:	lock inc DWORD PTR [rip+0x4c77]        # 0x1400096c8
   140004a51:	test   rcx,rcx
   140004a54:	je     0x140004aa6
   140004a56:	lea    rax,[rip+0x1e43]        # 0x1400068a0
   140004a5d:	mov    DWORD PTR [rcx+0x8],0x1
   140004a64:	mov    QWORD PTR [rcx],rax
   140004a67:	or     eax,0xffffffff
   140004a6a:	lock xadd DWORD PTR [rip+0x4c56],eax        # 0x1400096c8
   140004a72:	cmp    eax,0x1
   140004a75:	jne    0x140004a8a
   140004a77:	mov    rcx,QWORD PTR [rip+0x4d32]        # 0x1400097b0
   140004a7e:	mov    BYTE PTR [rip+0x4d34],al        # 0x1400097b8
   140004a84:	call   QWORD PTR [rip+0x17be]        # 0x140006248
   140004a8a:	lea    rcx,[rbx+0x10]
   140004a8e:	cmp    BYTE PTR [rcx+0x28],0x0
   140004a92:	je     0x140004a9e
   140004a94:	mov    BYTE PTR [rcx+0x28],0x0
   140004a98:	call   QWORD PTR [rip+0x17ca]        # 0x140006268
   140004a9e:	mov    rcx,rbx
   140004aa1:	call   0x140004de8
   140004aa6:	or     ecx,0xffffffff
   140004aa9:	lock xadd DWORD PTR [rip+0x4c17],ecx        # 0x1400096c8
   140004ab1:	cmp    ecx,0x1
   140004ab4:	jne    0x140004ac9
   140004ab6:	mov    BYTE PTR [rip+0x4cfc],cl        # 0x1400097b8
   140004abc:	mov    rcx,QWORD PTR [rip+0x4ced]        # 0x1400097b0
   140004ac3:	call   QWORD PTR [rip+0x177f]        # 0x140006248
   140004ac9:	mov    eax,edi
   140004acb:	mov    rbx,QWORD PTR [rsp+0x38]
   140004ad0:	add    rsp,0x20
   140004ad4:	pop    rdi
   140004ad5:	ret    
   140004ad6:	int3   
   140004ad7:	int3   
   140004ad8:	int3   
   140004ad9:	int3   
   140004ada:	int3   
   140004adb:	int3   
   140004adc:	int3   
   140004add:	int3   
   140004ade:	int3   
   140004adf:	int3   
   140004ae0:	mov    r9,r8
   140004ae3:	mov    r8,rdx
   140004ae6:	lea    rdx,[rip+0x1e6b]        # 0x140006958
   140004aed:	jmp    0x140003b7c
   140004af2:	int3   
   140004af3:	int3   
   140004af4:	int3   
   140004af5:	int3   
   140004af6:	int3   
   140004af7:	int3   
   140004af8:	int3   
   140004af9:	int3   
   140004afa:	int3   
   140004afb:	int3   
   140004afc:	int3   
   140004afd:	int3   
   140004afe:	int3   
   140004aff:	int3   
   140004b00:	rex push rbx
   140004b02:	sub    rsp,0x30
   140004b06:	mov    rax,rdx
   140004b09:	test   r9,r9
   140004b0c:	jne    0x140004b15
   140004b0e:	mov    eax,0x80004003
   140004b13:	jmp    0x140004b65
   140004b15:	xor    edx,edx
   140004b17:	mov    QWORD PTR [rsp+0x20],r9
   140004b1c:	mov    r9,r8
   140004b1f:	mov    rcx,rax
   140004b22:	lea    r8d,[rdx+0x1]
   140004b26:	call   QWORD PTR [rip+0x14dc]        # 0x140006008
   140004b2c:	mov    ebx,eax
   140004b2e:	test   eax,eax
   140004b30:	je     0x140004b63
   140004b32:	mov    rcx,QWORD PTR [rip+0x4577]        # 0x1400090b0
   140004b39:	lea    rax,[rip+0x4570]        # 0x1400090b0
   140004b40:	cmp    rcx,rax
   140004b43:	je     0x140004b63
   140004b45:	test   BYTE PTR [rcx+0x1c],0x1
   140004b49:	je     0x140004b63
   140004b4b:	mov    rcx,QWORD PTR [rcx+0x10]
   140004b4f:	lea    r8,[rip+0x1f6a]        # 0x140006ac0
   140004b56:	mov    edx,0xa
   140004b5b:	mov    r9d,ebx
   140004b5e:	call   0x140003db0
   140004b63:	mov    eax,ebx
   140004b65:	add    rsp,0x30
   140004b69:	pop    rbx
   140004b6a:	ret    
   140004b6b:	int3   
   140004b6c:	int3   
   140004b6d:	int3   
   140004b6e:	int3   
   140004b6f:	int3   
   140004b70:	int3   
   140004b71:	int3   
   140004b72:	int3   
   140004b73:	int3   
   140004b74:	int3   
   140004b75:	int3   
   140004b76:	int3   
   140004b77:	int3   
   140004b78:	int3   
   140004b79:	int3   
   140004b7a:	int3   
   140004b7b:	int3   
   140004b7c:	int3   
   140004b7d:	int3   
   140004b7e:	int3   
   140004b7f:	int3   
   140004b80:	rex push rbx
   140004b82:	sub    rsp,0x30
   140004b86:	xor    ebx,ebx
   140004b88:	xor    r9d,r9d
   140004b8b:	xor    r8d,r8d
   140004b8e:	xor    ecx,ecx
   140004b90:	lea    edx,[rbx+0x1]
   140004b93:	call   QWORD PTR [rip+0x16b7]        # 0x140006250
   140004b99:	mov    QWORD PTR [rip+0x4c70],rax        # 0x140009810
   140004ba0:	test   rax,rax
   140004ba3:	jne    0x140004bb0
   140004ba5:	call   0x140004dac
   140004baa:	mov    ebx,eax
   140004bac:	test   eax,eax
   140004bae:	js     0x140004be2
   140004bb0:	and    QWORD PTR [rsp+0x28],0x0
   140004bb6:	lea    r8,[rip+0x113]        # 0x140004cd0
   140004bbd:	and    DWORD PTR [rsp+0x20],0x0
   140004bc2:	xor    r9d,r9d
   140004bc5:	xor    edx,edx
   140004bc7:	xor    ecx,ecx
   140004bc9:	call   QWORD PTR [rip+0x1599]        # 0x140006168
   140004bcf:	mov    QWORD PTR [rip+0x4c42],rax        # 0x140009818
   140004bd6:	test   rax,rax
   140004bd9:	jne    0x140004be2
   140004bdb:	call   0x140004dac
   140004be0:	mov    ebx,eax
   140004be2:	test   ebx,ebx
   140004be4:	je     0x140004c17
   140004be6:	mov    rcx,QWORD PTR [rip+0x44c3]        # 0x1400090b0
   140004bed:	lea    rax,[rip+0x44bc]        # 0x1400090b0
   140004bf4:	cmp    rcx,rax
   140004bf7:	je     0x140004c17
   140004bf9:	test   BYTE PTR [rcx+0x1c],0x1
   140004bfd:	je     0x140004c17
   140004bff:	mov    rcx,QWORD PTR [rcx+0x10]
   140004c03:	lea    r8,[rip+0x1eb6]        # 0x140006ac0
   140004c0a:	mov    edx,0xb
   140004c0f:	mov    r9d,ebx
   140004c12:	call   0x140003db0
   140004c17:	mov    eax,ebx
   140004c19:	add    rsp,0x30
   140004c1d:	pop    rbx
   140004c1e:	ret    
   140004c1f:	int3   
   140004c20:	int3   
   140004c21:	int3   
   140004c22:	int3   
   140004c23:	int3   
   140004c24:	int3   
   140004c25:	int3   
   140004c26:	int3   
   140004c27:	int3   
   140004c28:	int3   
   140004c29:	int3   
   140004c2a:	int3   
   140004c2b:	int3   
   140004c2c:	int3   
   140004c2d:	int3   
   140004c2e:	int3   
   140004c2f:	int3   
   140004c30:	mov    QWORD PTR [rsp+0x8],rbx
   140004c35:	push   rdi
   140004c36:	sub    rsp,0x30
   140004c3a:	mov    r8d,edx
   140004c3d:	mov    ecx,0x100000
   140004c42:	xor    edx,edx
   140004c44:	xor    edi,edi
   140004c46:	call   QWORD PTR [rip+0x1524]        # 0x140006170
   140004c4c:	mov    rbx,rax
   140004c4f:	test   rax,rax
   140004c52:	je     0x140004cac
   140004c54:	xor    eax,eax
   140004c56:	lock cmpxchg QWORD PTR [rip+0x4ba9],rbx        # 0x140009808
   140004c5f:	jne    0x140004ca1
   140004c61:	mov    DWORD PTR [rsp+0x28],0x8
   140004c69:	lea    r8,[rip+0xe0]        # 0x140004d50
   140004c70:	or     DWORD PTR [rsp+0x20],0xffffffff
   140004c75:	lea    rcx,[rip+0x4ba4]        # 0x140009820
   140004c7c:	xor    r9d,r9d
   140004c7f:	mov    rdx,rbx
   140004c82:	call   QWORD PTR [rip+0x1448]        # 0x1400060d0
   140004c88:	test   eax,eax
   140004c8a:	jne    0x140004cb3
   140004c8c:	and    QWORD PTR [rip+0x4b8c],0x0        # 0x140009820
   140004c94:	mov    edi,0x80004005
   140004c99:	and    QWORD PTR [rip+0x4b67],0x0        # 0x140009808
   140004ca1:	mov    rcx,rbx
   140004ca4:	call   QWORD PTR [rip+0x13fe]        # 0x1400060a8
   140004caa:	jmp    0x140004cb3
   140004cac:	call   0x140004dac
   140004cb1:	mov    edi,eax
   140004cb3:	mov    eax,edi
   140004cb5:	mov    rbx,QWORD PTR [rsp+0x40]
   140004cba:	add    rsp,0x30
   140004cbe:	pop    rdi
   140004cbf:	ret    
   140004cc0:	int3   
   140004cc1:	int3   
   140004cc2:	int3   
   140004cc3:	int3   
   140004cc4:	int3   
   140004cc5:	int3   
   140004cc6:	int3   
   140004cc7:	int3   
   140004cc8:	int3   
   140004cc9:	int3   
   140004cca:	int3   
   140004ccb:	int3   
   140004ccc:	int3   
   140004ccd:	int3   
   140004cce:	int3   
   140004ccf:	int3   
   140004cd0:	rex push rbx
   140004cd2:	sub    rsp,0x20
   140004cd6:	mov    rcx,QWORD PTR [rip+0x4b33]        # 0x140009810
   140004cdd:	mov    edx,0x7d0
   140004ce2:	call   QWORD PTR [rip+0x1588]        # 0x140006270
   140004ce8:	mov    rcx,QWORD PTR [rip+0x4b31]        # 0x140009820
   140004cef:	mov    ebx,eax
   140004cf1:	test   rcx,rcx
   140004cf4:	je     0x140004cfc
   140004cf6:	call   QWORD PTR [rip+0x13dc]        # 0x1400060d8
   140004cfc:	mov    rcx,QWORD PTR [rip+0x4b0d]        # 0x140009810
   140004d03:	call   QWORD PTR [rip+0x139f]        # 0x1400060a8
   140004d09:	and    QWORD PTR [rip+0x4aff],0x0        # 0x140009810
   140004d11:	test   ebx,ebx
   140004d13:	jne    0x140004d1d
   140004d15:	xor    eax,eax
   140004d17:	add    rsp,0x20
   140004d1b:	pop    rbx
   140004d1c:	ret    
   140004d1d:	mov    rcx,QWORD PTR [rip+0x4af4]        # 0x140009818
   140004d24:	call   QWORD PTR [rip+0x137e]        # 0x1400060a8
   140004d2a:	and    QWORD PTR [rip+0x4ae6],0x0        # 0x140009818
   140004d32:	or     ecx,0xffffffff
   140004d35:	call   QWORD PTR [rip+0x143d]        # 0x140006178
   140004d3b:	int3   
   140004d3c:	int3   
   140004d3d:	int3   
   140004d3e:	int3   
   140004d3f:	int3   
   140004d40:	int3   
   140004d41:	int3   
   140004d42:	int3   
   140004d43:	int3   
   140004d44:	int3   
   140004d45:	int3   
   140004d46:	int3   
   140004d47:	int3   
   140004d48:	int3   
   140004d49:	int3   
   140004d4a:	int3   
   140004d4b:	int3   
   140004d4c:	int3   
   140004d4d:	int3   
   140004d4e:	int3   
   140004d4f:	int3   
   140004d50:	sub    rsp,0x28
   140004d54:	or     ecx,0xffffffff
   140004d57:	call   QWORD PTR [rip+0x141b]        # 0x140006178
   140004d5d:	int3   
   140004d5e:	int3   
   140004d5f:	int3   
   140004d60:	int3   
   140004d61:	int3   
   140004d62:	int3   
   140004d63:	int3   
   140004d64:	int3   
   140004d65:	int3   
   140004d66:	int3   
   140004d67:	int3   
   140004d68:	int3   
   140004d69:	int3   
   140004d6a:	int3   
   140004d6b:	int3   
   140004d6c:	int3   
   140004d6d:	int3   
   140004d6e:	int3   
   140004d6f:	int3   
   140004d70:	sub    rsp,0x38
   140004d74:	mov    eax,DWORD PTR [rip+0x1d5e]        # 0x140006ad8
   140004d7a:	mov    r9,QWORD PTR [rip+0x12df]        # 0x140006060
   140004d81:	mov    r8,QWORD PTR [rip+0x1d48]        # 0x140006ad0
   140004d88:	mov    DWORD PTR [rsp+0x28],eax
   140004d8c:	mov    QWORD PTR [rsp+0x20],rdx
   140004d91:	mov    rdx,rcx
   140004d94:	lea    rcx,[rip+0xffffffffffffb265]        # 0x140000000
   140004d9b:	call   QWORD PTR [rip+0x12c7]        # 0x140006068
   140004da1:	add    rsp,0x38
   140004da5:	ret    
   140004da6:	int3   
   140004da7:	int3   
   140004da8:	int3   
   140004da9:	int3   
   140004daa:	int3   
   140004dab:	int3   
   140004dac:	sub    rsp,0x28
   140004db0:	call   QWORD PTR [rip+0x12c2]        # 0x140006078
   140004db6:	mov    edx,0xe0000000
   140004dbb:	mov    ecx,eax
   140004dbd:	and    eax,edx
   140004dbf:	je     0x140004dcf
   140004dc1:	cmp    eax,edx
   140004dc3:	movzx  eax,cx
   140004dc6:	jne    0x140004dd2
   140004dc8:	or     eax,0x800f0000
   140004dcd:	jmp    0x140004ddc
   140004dcf:	movzx  eax,cx
   140004dd2:	or     eax,0x80070000
   140004dd7:	test   ecx,ecx
   140004dd9:	cmovle eax,ecx
   140004ddc:	add    rsp,0x28
   140004de0:	ret    
   140004de1:	int3   
   140004de2:	int3   
   140004de3:	int3   
   140004de4:	int3   
   140004de5:	int3   
   140004de6:	int3   
   140004de7:	int3   
   140004de8:	jmp    0x140005244
   140004ded:	int3   
   140004dee:	int3   
   140004def:	int3   
   140004df0:	int3   
   140004df1:	int3   
   140004df2:	int3   
   140004df3:	int3   
   140004df4:	mov    QWORD PTR [rsp+0x8],rbx
   140004df9:	push   rdi
   140004dfa:	sub    rsp,0x20
   140004dfe:	mov    rdi,rcx
   140004e01:	jmp    0x140004e12
   140004e03:	mov    rcx,rdi
   140004e06:	call   0x140005516
   140004e0b:	test   eax,eax
   140004e0d:	je     0x140004e1f
   140004e0f:	mov    rcx,rdi
   140004e12:	call   0x140005250
   140004e17:	mov    rbx,rax
   140004e1a:	test   rax,rax
   140004e1d:	je     0x140004e03
   140004e1f:	mov    rax,rbx
   140004e22:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e27:	add    rsp,0x20
   140004e2b:	pop    rdi
   140004e2c:	ret    
   140004e2d:	int3   
   140004e2e:	int3   
   140004e2f:	int3   
   140004e30:	int3   
   140004e31:	int3   
   140004e32:	int3   
   140004e33:	int3   
   140004e34:	int3   
   140004e35:	int3   
   140004e36:	int3   
   140004e37:	int3   
   140004e38:	int3   
   140004e39:	int3   
   140004e3a:	int3   
   140004e3b:	int3   
   140004e3c:	int3   
   140004e3d:	int3   
   140004e3e:	int3   
   140004e3f:	int3   
   140004e40:	sub    rsp,0x28
   140004e44:	mov    eax,0x5a4d
   140004e49:	cmp    WORD PTR [rip+0xffffffffffffb1b0],ax        # 0x140000000
   140004e50:	je     0x140004e56
   140004e52:	xor    eax,eax
   140004e54:	jmp    0x140004ea5
   140004e56:	movsxd rcx,DWORD PTR [rip+0xffffffffffffb1df]        # 0x14000003c
   140004e5d:	lea    rax,[rip+0xffffffffffffb19c]        # 0x140000000
   140004e64:	add    rcx,rax
   140004e67:	cmp    DWORD PTR [rcx],0x4550
   140004e6d:	jne    0x140004e52
   140004e6f:	movzx  eax,WORD PTR [rcx+0x18]
   140004e73:	cmp    eax,0x10b
   140004e78:	je     0x140004e94
   140004e7a:	cmp    eax,0x20b
   140004e7f:	jne    0x140004e52
   140004e81:	xor    eax,eax
   140004e83:	cmp    DWORD PTR [rcx+0x84],0xe
   140004e8a:	jbe    0x140004ea5
   140004e8c:	cmp    DWORD PTR [rcx+0xf8],eax
   140004e92:	jmp    0x140004ea2
   140004e94:	xor    eax,eax
   140004e96:	cmp    DWORD PTR [rcx+0x74],0xe
   140004e9a:	jbe    0x140004ea5
   140004e9c:	cmp    DWORD PTR [rcx+0xe8],eax
   140004ea2:	setne  al
   140004ea5:	mov    ecx,0x2
   140004eaa:	mov    DWORD PTR [rip+0x4240],eax        # 0x1400090f0
   140004eb0:	call   0x1400055f8
   140004eb5:	mov    ecx,eax
   140004eb7:	call   QWORD PTR [rip+0x1433]        # 0x1400062f0
   140004ebd:	mov    rcx,QWORD PTR [rip+0x147c]        # 0x140006340
   140004ec4:	or     rax,0xffffffffffffffff
   140004ec8:	mov    QWORD PTR [rip+0x4961],rax        # 0x140009830
   140004ecf:	mov    QWORD PTR [rip+0x4962],rax        # 0x140009838
   140004ed6:	mov    eax,DWORD PTR [rip+0x47a0]        # 0x14000967c
   140004edc:	mov    DWORD PTR [rcx],eax
   140004ede:	mov    rcx,QWORD PTR [rip+0x13fb]        # 0x1400062e0
   140004ee5:	mov    eax,DWORD PTR [rip+0x4785]        # 0x140009670
   140004eeb:	mov    DWORD PTR [rcx],eax
   140004eed:	call   0x140004710
   140004ef2:	cmp    DWORD PTR [rip+0x4107],0x0        # 0x140009000
   140004ef9:	jne    0x140004f08
   140004efb:	lea    rcx,[rip+0xfffffffffffff80e]        # 0x140004710
   140004f02:	call   QWORD PTR [rip+0x1418]        # 0x140006320
   140004f08:	xor    eax,eax
   140004f0a:	add    rsp,0x28
   140004f0e:	ret    
   140004f0f:	int3   
   140004f10:	int3   
   140004f11:	int3   
   140004f12:	int3   
   140004f13:	int3   
   140004f14:	int3   
   140004f15:	int3   
   140004f16:	int3   
   140004f17:	int3   
   140004f18:	int3   
   140004f19:	int3   
   140004f1a:	int3   
   140004f1b:	int3   
   140004f1c:	int3   
   140004f1d:	int3   
   140004f1e:	int3   
   140004f1f:	int3   
   140004f20:	sub    rsp,0x38
   140004f24:	mov    eax,DWORD PTR [rip+0x474e]        # 0x140009678
   140004f2a:	lea    r8,[rip+0x41b7]        # 0x1400090e8
   140004f31:	mov    r9d,DWORD PTR [rip+0x473c]        # 0x140009674
   140004f38:	lea    rdx,[rip+0x41a1]        # 0x1400090e0
   140004f3f:	mov    DWORD PTR [rip+0x41af],eax        # 0x1400090f4
   140004f45:	lea    rcx,[rip+0x418c]        # 0x1400090d8
   140004f4c:	lea    rax,[rip+0x41a1]        # 0x1400090f4
   140004f53:	mov    QWORD PTR [rsp+0x20],rax
   140004f58:	call   QWORD PTR [rip+0x135a]        # 0x1400062b8
   140004f5e:	mov    DWORD PTR [rip+0x4178],eax        # 0x1400090dc
   140004f64:	add    rsp,0x38
   140004f68:	ret    
   140004f69:	int3   
   140004f6a:	int3   
   140004f6b:	int3   
   140004f6c:	int3   
   140004f6d:	int3   
   140004f6e:	int3   
   140004f6f:	int3   
   140004f70:	mov    QWORD PTR [rsp+0x8],rbx
   140004f75:	mov    QWORD PTR [rsp+0x10],rsi
   140004f7a:	mov    QWORD PTR [rsp+0x18],rdi
   140004f7f:	push   r12
   140004f81:	push   r14
   140004f83:	push   r15
   140004f85:	sub    rsp,0xb0
   140004f8c:	xor    r15d,r15d
   140004f8f:	mov    DWORD PTR [rsp+0x20],r15d
   140004f94:	lea    rcx,[rsp+0x40]
   140004f99:	call   QWORD PTR [rip+0x11f9]        # 0x140006198
   140004f9f:	nop
   140004fa0:	mov    rax,QWORD PTR gs:0x30
   140004fa9:	mov    rbx,QWORD PTR [rax+0x8]
   140004fad:	mov    r14d,r15d
   140004fb0:	xor    eax,eax
   140004fb2:	lock cmpxchg QWORD PTR [rip+0x4885],rbx        # 0x140009840
   140004fbb:	je     0x140004fd9
   140004fbd:	cmp    rax,rbx
   140004fc0:	jne    0x140004fcc
   140004fc2:	mov    edi,0x1
   140004fc7:	mov    r14d,edi
   140004fca:	jmp    0x140004fde
   140004fcc:	mov    ecx,0x3e8
   140004fd1:	call   QWORD PTR [rip+0x1289]        # 0x140006260
   140004fd7:	jmp    0x140004fb0
   140004fd9:	mov    edi,0x1
   140004fde:	mov    eax,DWORD PTR [rip+0x4864]        # 0x140009848
   140004fe4:	cmp    eax,edi
   140004fe6:	jne    0x140004ff6
   140004fe8:	mov    esi,0x1f
   140004fed:	mov    ecx,esi
   140004fef:	call   0x140005644
   140004ff4:	jmp    0x140005067
   140004ff6:	mov    eax,DWORD PTR [rip+0x484c]        # 0x140009848
   140004ffc:	test   eax,eax
   140004ffe:	jne    0x14000505c
   140005000:	mov    DWORD PTR [rip+0x4842],edi        # 0x140009848
   140005006:	lea    r12,[rip+0x13e3]        # 0x1400063f0
   14000500d:	lea    rbx,[rip+0x13c4]        # 0x1400063d8
   140005014:	mov    QWORD PTR [rsp+0x30],rbx
   140005019:	mov    eax,r15d
   14000501c:	mov    DWORD PTR [rsp+0x24],eax
   140005020:	cmp    rbx,r12
   140005023:	jae    0x14000504e
   140005025:	test   eax,eax
   140005027:	jne    0x140005052
   140005029:	mov    rsi,QWORD PTR [rbx]
   14000502c:	test   rsi,rsi
   14000502f:	je     0x140005043
   140005031:	mov    rcx,rsi
   140005034:	mov    rax,QWORD PTR [rip+0x1375]        # 0x1400063b0
   14000503b:	call   rax
   14000503d:	call   rsi
   14000503f:	mov    DWORD PTR [rsp+0x24],eax
   140005043:	add    rbx,0x8
   140005047:	mov    QWORD PTR [rsp+0x30],rbx
   14000504c:	jmp    0x140005020
   14000504e:	test   eax,eax
   140005050:	je     0x140005062
   140005052:	mov    eax,0xff
   140005057:	jmp    0x1400051c3
   14000505c:	mov    DWORD PTR [rip+0x4072],edi        # 0x1400090d4
   140005062:	mov    esi,0x1f
   140005067:	mov    eax,DWORD PTR [rip+0x47db]        # 0x140009848
   14000506d:	cmp    eax,edi
   14000506f:	jne    0x14000508e
   140005071:	lea    rdx,[rip+0x1358]        # 0x1400063d0
   140005078:	lea    rcx,[rip+0x1341]        # 0x1400063c0
   14000507f:	call   0x14000580a
   140005084:	mov    DWORD PTR [rip+0x47ba],0x2        # 0x140009848
   14000508e:	test   r14d,r14d
   140005091:	jne    0x14000509d
   140005093:	mov    rax,r15
   140005096:	xchg   QWORD PTR [rip+0x47a3],rax        # 0x140009840
   14000509d:	cmp    QWORD PTR [rip+0x47ac],r15        # 0x140009850
   1400050a4:	je     0x1400050d4
   1400050a6:	lea    rcx,[rip+0x47a3]        # 0x140009850
   1400050ad:	call   0x1400056a0
   1400050b2:	test   eax,eax
   1400050b4:	je     0x1400050d4
   1400050b6:	mov    rbx,QWORD PTR [rip+0x4793]        # 0x140009850
   1400050bd:	mov    rcx,rbx
   1400050c0:	mov    rax,QWORD PTR [rip+0x12e9]        # 0x1400063b0
   1400050c7:	call   rax
   1400050c9:	xor    r8d,r8d
   1400050cc:	lea    edx,[r8+0x2]
   1400050d0:	xor    ecx,ecx
   1400050d2:	call   rbx
   1400050d4:	mov    rax,QWORD PTR [rip+0x125d]        # 0x140006338
   1400050db:	mov    rdx,QWORD PTR [rax]
   1400050de:	test   rdx,rdx
   1400050e1:	jne    0x1400050ed
   1400050e3:	mov    eax,0xff
   1400050e8:	jmp    0x1400051c3
   1400050ed:	mov    QWORD PTR [rsp+0x28],rdx
   1400050f2:	mov    ecx,DWORD PTR [rsp+0x20]
   1400050f6:	cmp    WORD PTR [rdx],0x20
   1400050fa:	ja     0x140005174
   1400050fc:	cmp    WORD PTR [rdx],r15w
   140005100:	je     0x140005106
   140005102:	test   ecx,ecx
   140005104:	jne    0x140005174
   140005106:	movzx  eax,WORD PTR [rdx]
   140005109:	sub    ax,di
   14000510c:	cmp    ax,si
   14000510f:	ja     0x14000511c
   140005111:	add    rdx,0x2
   140005115:	mov    QWORD PTR [rsp+0x28],rdx
   14000511a:	jmp    0x140005106
   14000511c:	mov    ecx,DWORD PTR [rsp+0x7c]
   140005120:	movzx  eax,WORD PTR [rsp+0x80]
   140005128:	mov    r9d,0xa
   14000512e:	and    cl,dil
   140005131:	cmovne r9d,eax
   140005135:	mov    r8,rdx
   140005138:	xor    edx,edx
   14000513a:	lea    rcx,[rip+0xffffffffffffaebf]        # 0x140000000
   140005141:	call   0x1400043dc
   140005146:	mov    DWORD PTR [rip+0x3f84],eax        # 0x1400090d0
   14000514c:	cmp    DWORD PTR [rip+0x3f9d],r15d        # 0x1400090f0
   140005153:	jne    0x14000515d
   140005155:	mov    ecx,eax
   140005157:	call   QWORD PTR [rip+0x1213]        # 0x140006370
   14000515d:	cmp    DWORD PTR [rip+0x3f70],r15d        # 0x1400090d4
   140005164:	jne    0x140005172
   140005166:	call   QWORD PTR [rip+0x11ac]        # 0x140006318
   14000516c:	mov    eax,DWORD PTR [rip+0x3f5e]        # 0x1400090d0
   140005172:	jmp    0x1400051c3
   140005174:	cmp    WORD PTR [rdx],0x22
   140005178:	jne    0x140005188
   14000517a:	mov    eax,r15d
   14000517d:	test   ecx,ecx
   14000517f:	sete   al
   140005182:	mov    ecx,eax
   140005184:	mov    DWORD PTR [rsp+0x20],eax
   140005188:	add    rdx,0x2
   14000518c:	mov    QWORD PTR [rsp+0x28],rdx
   140005191:	jmp    0x1400050f6
   140005196:	mov    DWORD PTR [rip+0x3f34],eax        # 0x1400090d0
   14000519c:	cmp    DWORD PTR [rip+0x3f4d],0x0        # 0x1400090f0
   1400051a3:	jne    0x1400051ae
   1400051a5:	mov    ecx,eax
   1400051a7:	call   QWORD PTR [rip+0x1153]        # 0x140006300
   1400051ad:	int3   
   1400051ae:	cmp    DWORD PTR [rip+0x3f1f],0x0        # 0x1400090d4
   1400051b5:	jne    0x1400051c3
   1400051b7:	call   QWORD PTR [rip+0x115b]        # 0x140006318
   1400051bd:	mov    eax,DWORD PTR [rip+0x3f0d]        # 0x1400090d0
   1400051c3:	lea    r11,[rsp+0xb0]
   1400051cb:	mov    rbx,QWORD PTR [r11+0x20]
   1400051cf:	mov    rsi,QWORD PTR [r11+0x28]
   1400051d3:	mov    rdi,QWORD PTR [r11+0x30]
   1400051d7:	mov    rsp,r11
   1400051da:	pop    r15
   1400051dc:	pop    r14
   1400051de:	pop    r12
   1400051e0:	ret    
   1400051e1:	int3   
   1400051e2:	int3   
   1400051e3:	int3   
   1400051e4:	int3   
   1400051e5:	int3   
   1400051e6:	int3   
   1400051e7:	int3   
   1400051e8:	int3   
   1400051e9:	int3   
   1400051ea:	int3   
   1400051eb:	int3   
   1400051ec:	int3   
   1400051ed:	int3   
   1400051ee:	int3   
   1400051ef:	int3   
   1400051f0:	sub    rsp,0x28
   1400051f4:	call   0x140005734
   1400051f9:	add    rsp,0x28
   1400051fd:	jmp    0x140004f70
   140005202:	int3   
   140005203:	int3   
   140005204:	int3   
   140005205:	int3   
   140005206:	int3   
   140005207:	int3   
   140005208:	int3   
   140005209:	int3   
   14000520a:	int3   
   14000520b:	int3   
   14000520c:	int3   
   14000520d:	int3   
   14000520e:	int3   
   14000520f:	int3   
   140005210:	int3   
   140005211:	int3   
   140005212:	int3   
   140005213:	int3   
   140005214:	int3   
   140005215:	int3   
   140005216:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005220:	cmp    rcx,QWORD PTR [rip+0x3de1]        # 0x140009008
   140005227:	jne    0x140005239
   140005229:	rol    rcx,0x10
   14000522d:	test   cx,0xffff
   140005232:	jne    0x140005235
   140005234:	ret    
   140005235:	ror    rcx,0x10
   140005239:	jmp    0x1400052a0
   14000523e:	int3   
   14000523f:	int3   
   140005240:	int3   
   140005241:	int3   
   140005242:	int3   
   140005243:	int3   
   140005244:	jmp    QWORD PTR [rip+0x111e]        # 0x140006368
   14000524a:	int3   
   14000524b:	int3   
   14000524c:	int3   
   14000524d:	int3   
   14000524e:	int3   
   14000524f:	int3   
   140005250:	jmp    QWORD PTR [rip+0x110a]        # 0x140006360
   140005256:	int3   
   140005257:	int3   
   140005258:	int3   
   140005259:	int3   
   14000525a:	int3   
   14000525b:	int3   
   14000525c:	rex push rbx
   14000525e:	sub    rsp,0x20
   140005262:	mov    rbx,rcx
   140005265:	xor    ecx,ecx
   140005267:	call   QWORD PTR [rip+0xe13]        # 0x140006080
   14000526d:	mov    rcx,rbx
   140005270:	call   QWORD PTR [rip+0xe12]        # 0x140006088
   140005276:	call   QWORD PTR [rip+0xf04]        # 0x140006180
   14000527c:	mov    rcx,rax
   14000527f:	mov    edx,0xc0000409
   140005284:	add    rsp,0x20
   140005288:	pop    rbx
   140005289:	rex.W jmp QWORD PTR [rip+0xef8]        # 0x140006188
   140005290:	int3   
   140005291:	int3   
   140005292:	int3   
   140005293:	int3   
   140005294:	int3   
   140005295:	int3   
   140005296:	int3   
   140005297:	int3   
   140005298:	int3   
   140005299:	int3   
   14000529a:	int3   
   14000529b:	int3   
   14000529c:	int3   
   14000529d:	int3   
   14000529e:	int3   
   14000529f:	int3   
   1400052a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400052a5:	sub    rsp,0x88
   1400052ac:	lea    rcx,[rip+0x3eed]        # 0x1400091a0
   1400052b3:	call   QWORD PTR [rip+0x10d7]        # 0x140006390
   1400052b9:	mov    rax,QWORD PTR [rip+0x3fd8]        # 0x140009298
   1400052c0:	mov    QWORD PTR [rsp+0x48],rax
   1400052c5:	xor    r8d,r8d
   1400052c8:	lea    rdx,[rsp+0x50]
   1400052cd:	mov    rcx,QWORD PTR [rsp+0x48]
   1400052d2:	call   QWORD PTR [rip+0x10b0]        # 0x140006388
   1400052d8:	mov    QWORD PTR [rsp+0x40],rax
   1400052dd:	cmp    QWORD PTR [rsp+0x40],0x0
   1400052e3:	je     0x140005327
   1400052e5:	mov    QWORD PTR [rsp+0x38],0x0
   1400052ee:	lea    rax,[rsp+0x58]
   1400052f3:	mov    QWORD PTR [rsp+0x30],rax
   1400052f8:	lea    rax,[rsp+0x60]
   1400052fd:	mov    QWORD PTR [rsp+0x28],rax
   140005302:	lea    rax,[rip+0x3e97]        # 0x1400091a0
   140005309:	mov    QWORD PTR [rsp+0x20],rax
   14000530e:	mov    r9,QWORD PTR [rsp+0x40]
   140005313:	mov    r8,QWORD PTR [rsp+0x48]
   140005318:	mov    rdx,QWORD PTR [rsp+0x50]
   14000531d:	xor    ecx,ecx
   14000531f:	call   QWORD PTR [rip+0x107b]        # 0x1400063a0
   140005325:	jmp    0x14000534a
   140005327:	mov    rax,QWORD PTR [rip+0x3f0a]        # 0x140009238
   14000532e:	mov    rax,QWORD PTR [rax]
   140005331:	mov    QWORD PTR [rip+0x3f60],rax        # 0x140009298
   140005338:	mov    rax,QWORD PTR [rip+0x3ef9]        # 0x140009238
   14000533f:	add    rax,0x8
   140005343:	mov    QWORD PTR [rip+0x3eee],rax        # 0x140009238
   14000534a:	mov    rax,QWORD PTR [rip+0x3f47]        # 0x140009298
   140005351:	mov    QWORD PTR [rip+0x3db8],rax        # 0x140009110
   140005358:	mov    rax,QWORD PTR [rsp+0x90]
   140005360:	mov    QWORD PTR [rip+0x3eb9],rax        # 0x140009220
   140005367:	mov    DWORD PTR [rip+0x3d8f],0xc0000409        # 0x140009100
   140005371:	mov    DWORD PTR [rip+0x3d89],0x1        # 0x140009104
   14000537b:	mov    DWORD PTR [rip+0x3d93],0x3        # 0x140009118
   140005385:	mov    eax,0x8
   14000538a:	imul   rax,rax,0x0
   14000538e:	lea    rcx,[rip+0x3d8b]        # 0x140009120
   140005395:	mov    QWORD PTR [rcx+rax*1],0x2
   14000539d:	mov    eax,0x8
   1400053a2:	imul   rax,rax,0x1
   1400053a6:	lea    rcx,[rip+0x3d73]        # 0x140009120
   1400053ad:	mov    rdx,QWORD PTR [rip+0x3c54]        # 0x140009008
   1400053b4:	mov    QWORD PTR [rcx+rax*1],rdx
   1400053b8:	mov    eax,0x8
   1400053bd:	imul   rax,rax,0x2
   1400053c1:	lea    rcx,[rip+0x3d58]        # 0x140009120
   1400053c8:	mov    rdx,QWORD PTR [rip+0x3c41]        # 0x140009010
   1400053cf:	mov    QWORD PTR [rcx+rax*1],rdx
   1400053d3:	mov    eax,0x8
   1400053d8:	imul   rax,rax,0x0
   1400053dc:	mov    rcx,QWORD PTR [rip+0x3c25]        # 0x140009008
   1400053e3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400053e8:	mov    eax,0x8
   1400053ed:	imul   rax,rax,0x1
   1400053f1:	mov    rcx,QWORD PTR [rip+0x3c18]        # 0x140009010
   1400053f8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400053fd:	lea    rcx,[rip+0x108c]        # 0x140006490
   140005404:	call   0x14000525c
   140005409:	add    rsp,0x88
   140005410:	ret    
   140005411:	int3   
   140005412:	int3   
   140005413:	int3   
   140005414:	int3   
   140005415:	int3   
   140005416:	int3   
   140005417:	int3   
   140005418:	sub    rsp,0x78
   14000541c:	lea    rcx,[rip+0x3d7d]        # 0x1400091a0
   140005423:	call   QWORD PTR [rip+0xf67]        # 0x140006390
   140005429:	mov    rax,QWORD PTR [rip+0x3e68]        # 0x140009298
   140005430:	mov    QWORD PTR [rsp+0x48],rax
   140005435:	xor    r8d,r8d
   140005438:	lea    rdx,[rsp+0x50]
   14000543d:	mov    rcx,QWORD PTR [rsp+0x48]
   140005442:	call   QWORD PTR [rip+0xf40]        # 0x140006388
   140005448:	mov    QWORD PTR [rsp+0x40],rax
   14000544d:	cmp    QWORD PTR [rsp+0x40],0x0
   140005453:	je     0x140005497
   140005455:	mov    QWORD PTR [rsp+0x38],0x0
   14000545e:	lea    rax,[rsp+0x58]
   140005463:	mov    QWORD PTR [rsp+0x30],rax
   140005468:	lea    rax,[rsp+0x60]
   14000546d:	mov    QWORD PTR [rsp+0x28],rax
   140005472:	lea    rax,[rip+0x3d27]        # 0x1400091a0
   140005479:	mov    QWORD PTR [rsp+0x20],rax
   14000547e:	mov    r9,QWORD PTR [rsp+0x40]
   140005483:	mov    r8,QWORD PTR [rsp+0x48]
   140005488:	mov    rdx,QWORD PTR [rsp+0x50]
   14000548d:	xor    ecx,ecx
   14000548f:	call   QWORD PTR [rip+0xf0b]        # 0x1400063a0
   140005495:	jmp    0x1400054ba
   140005497:	mov    rax,QWORD PTR [rip+0x3d9a]        # 0x140009238
   14000549e:	mov    rax,QWORD PTR [rax]
   1400054a1:	mov    QWORD PTR [rip+0x3df0],rax        # 0x140009298
   1400054a8:	mov    rax,QWORD PTR [rip+0x3d89]        # 0x140009238
   1400054af:	add    rax,0x8
   1400054b3:	mov    QWORD PTR [rip+0x3d7e],rax        # 0x140009238
   1400054ba:	mov    rax,QWORD PTR [rip+0x3dd7]        # 0x140009298
   1400054c1:	mov    QWORD PTR [rip+0x3c48],rax        # 0x140009110
   1400054c8:	mov    DWORD PTR [rip+0x3c2e],0xc0000409        # 0x140009100
   1400054d2:	mov    DWORD PTR [rip+0x3c28],0x1        # 0x140009104
   1400054dc:	mov    DWORD PTR [rip+0x3c32],0x1        # 0x140009118
   1400054e6:	mov    eax,0x8
   1400054eb:	imul   rax,rax,0x0
   1400054ef:	lea    rcx,[rip+0x3c2a]        # 0x140009120
   1400054f6:	mov    QWORD PTR [rcx+rax*1],0x8
   1400054fe:	lea    rcx,[rip+0xf8b]        # 0x140006490
   140005505:	call   0x14000525c
   14000550a:	add    rsp,0x78
   14000550e:	ret    
   14000550f:	int3   
   140005510:	int3   
   140005511:	int3   
   140005512:	int3   
   140005513:	int3   
   140005514:	int3   
   140005515:	int3   
   140005516:	jmp    QWORD PTR [rip+0xddc]        # 0x1400062f8
   14000551c:	int3   
   14000551d:	int3   
   14000551e:	int3   
   14000551f:	int3   
   140005520:	int3   
   140005521:	int3   
   140005522:	int3   
   140005523:	int3   
   140005524:	int3   
   140005525:	int3   
   140005526:	int3   
   140005527:	int3   
   140005528:	int3   
   140005529:	int3   
   14000552a:	int3   
   14000552b:	int3   
   14000552c:	int3   
   14000552d:	int3   
   14000552e:	int3   
   14000552f:	int3   
   140005530:	sub    rsp,0x28
   140005534:	mov    rax,QWORD PTR [rcx]
   140005537:	cmp    DWORD PTR [rax],0xe06d7363
   14000553d:	jne    0x140005562
   14000553f:	cmp    DWORD PTR [rax+0x18],0x4
   140005543:	jne    0x140005562
   140005545:	mov    ecx,DWORD PTR [rax+0x20]
   140005548:	lea    eax,[rcx-0x19930520]
   14000554e:	cmp    eax,0x2
   140005551:	jbe    0x14000555b
   140005553:	cmp    ecx,0x1994000
   140005559:	jne    0x140005562
   14000555b:	call   QWORD PTR [rip+0xd77]        # 0x1400062d8
   140005561:	int3   
   140005562:	xor    eax,eax
   140005564:	add    rsp,0x28
   140005568:	ret    
   140005569:	int3   
   14000556a:	int3   
   14000556b:	int3   
   14000556c:	int3   
   14000556d:	int3   
   14000556e:	int3   
   14000556f:	int3   
   140005570:	sub    rsp,0x28
   140005574:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140005530
   14000557b:	call   QWORD PTR [rip+0xaff]        # 0x140006080
   140005581:	xor    eax,eax
   140005583:	add    rsp,0x28
   140005587:	ret    
   140005588:	int3   
   140005589:	int3   
   14000558a:	int3   
   14000558b:	int3   
   14000558c:	int3   
   14000558d:	int3   
   14000558e:	jmp    QWORD PTR [rip+0xd54]        # 0x1400062e8
   140005594:	int3   
   140005595:	int3   
   140005596:	int3   
   140005597:	int3   
   140005598:	int3   
   140005599:	int3   
   14000559a:	int3   
   14000559b:	int3   
   14000559c:	sub    rsp,0x18
   1400055a0:	xor    edx,edx
   1400055a2:	lea    rax,[rcx-0x1]
   1400055a6:	cmp    rax,0xfffffffffffffffd
   1400055aa:	ja     0x1400055e8
   1400055ac:	mov    eax,0x5a4d
   1400055b1:	cmp    WORD PTR [rcx],ax
   1400055b4:	jne    0x1400055e0
   1400055b6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400055b9:	jl     0x1400055e0
   1400055bb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   1400055c2:	jae    0x1400055e0
   1400055c4:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400055c8:	add    rax,rcx
   1400055cb:	mov    QWORD PTR [rsp],rax
   1400055cf:	cmp    DWORD PTR [rax],0x4550
   1400055d5:	cmovne rax,rdx
   1400055d9:	mov    rdx,rax
   1400055dc:	mov    QWORD PTR [rsp],rax
   1400055e0:	jmp    0x1400055e8
   1400055e2:	xor    edx,edx
   1400055e4:	mov    QWORD PTR [rsp],rdx
   1400055e8:	mov    rax,rdx
   1400055eb:	add    rsp,0x18
   1400055ef:	ret    
   1400055f0:	int3   
   1400055f1:	int3   
   1400055f2:	int3   
   1400055f3:	int3   
   1400055f4:	int3   
   1400055f5:	int3   
   1400055f6:	int3   
   1400055f7:	int3   
   1400055f8:	rex push rbx
   1400055fa:	sub    rsp,0x20
   1400055fe:	mov    ebx,ecx
   140005600:	xor    ecx,ecx
   140005602:	call   QWORD PTR [rip+0xb18]        # 0x140006120
   140005608:	test   rax,rax
   14000560b:	je     0x140005635
   14000560d:	mov    rcx,rax
   140005610:	call   0x14000559c
   140005615:	test   rax,rax
   140005618:	je     0x140005635
   14000561a:	mov    ecx,0x2
   14000561f:	cmp    WORD PTR [rax+0x5c],cx
   140005623:	jne    0x140005629
   140005625:	mov    eax,ecx
   140005627:	jmp    0x140005637
   140005629:	cmp    WORD PTR [rax+0x5c],0x3
   14000562e:	mov    eax,0x1
   140005633:	je     0x140005637
   140005635:	mov    eax,ebx
   140005637:	add    rsp,0x20
   14000563b:	pop    rbx
   14000563c:	ret    
   14000563d:	int3   
   14000563e:	int3   
   14000563f:	int3   
   140005640:	int3   
   140005641:	int3   
   140005642:	int3   
   140005643:	int3   
   140005644:	jmp    QWORD PTR [rip+0xc76]        # 0x1400062c0
   14000564a:	int3   
   14000564b:	int3   
   14000564c:	int3   
   14000564d:	int3   
   14000564e:	int3   
   14000564f:	int3   
   140005650:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005654:	xor    r9d,r9d
   140005657:	add    r8,rcx
   14000565a:	mov    r10,rdx
   14000565d:	movzx  eax,WORD PTR [r8+0x14]
   140005662:	movzx  r11d,WORD PTR [r8+0x6]
   140005667:	add    rax,0x18
   14000566b:	add    rax,r8
   14000566e:	test   r11d,r11d
   140005671:	je     0x140005691
   140005673:	mov    edx,DWORD PTR [rax+0xc]
   140005676:	cmp    r10,rdx
   140005679:	jb     0x140005685
   14000567b:	mov    ecx,DWORD PTR [rax+0x8]
   14000567e:	add    ecx,edx
   140005680:	cmp    r10,rcx
   140005683:	jb     0x140005693
   140005685:	inc    r9d
   140005688:	add    rax,0x28
   14000568c:	cmp    r9d,r11d
   14000568f:	jb     0x140005673
   140005691:	xor    eax,eax
   140005693:	ret    
   140005694:	int3   
   140005695:	int3   
   140005696:	int3   
   140005697:	int3   
   140005698:	int3   
   140005699:	int3   
   14000569a:	int3   
   14000569b:	int3   
   14000569c:	int3   
   14000569d:	int3   
   14000569e:	int3   
   14000569f:	int3   
   1400056a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400056a5:	push   rdi
   1400056a6:	sub    rsp,0x20
   1400056aa:	mov    rbx,rcx
   1400056ad:	lea    rdi,[rip+0xffffffffffffa94c]        # 0x140000000
   1400056b4:	mov    rcx,rdi
   1400056b7:	call   0x140005700
   1400056bc:	test   eax,eax
   1400056be:	je     0x1400056e2
   1400056c0:	sub    rbx,rdi
   1400056c3:	mov    rdx,rbx
   1400056c6:	mov    rcx,rdi
   1400056c9:	call   0x140005650
   1400056ce:	test   rax,rax
   1400056d1:	je     0x1400056e2
   1400056d3:	mov    eax,DWORD PTR [rax+0x24]
   1400056d6:	shr    eax,0x1f
   1400056d9:	not    eax
   1400056db:	and    eax,0x1
   1400056de:	jmp    0x1400056e2
   1400056e0:	xor    eax,eax
   1400056e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400056e7:	add    rsp,0x20
   1400056eb:	pop    rdi
   1400056ec:	ret    
   1400056ed:	int3   
   1400056ee:	int3   
   1400056ef:	int3   
   1400056f0:	int3   
   1400056f1:	int3   
   1400056f2:	int3   
   1400056f3:	int3   
   1400056f4:	int3   
   1400056f5:	int3   
   1400056f6:	int3   
   1400056f7:	int3   
   1400056f8:	int3   
   1400056f9:	int3   
   1400056fa:	int3   
   1400056fb:	int3   
   1400056fc:	int3   
   1400056fd:	int3   
   1400056fe:	int3   
   1400056ff:	int3   
   140005700:	mov    rax,rcx
   140005703:	mov    ecx,0x5a4d
   140005708:	cmp    WORD PTR [rax],cx
   14000570b:	je     0x140005710
   14000570d:	xor    eax,eax
   14000570f:	ret    
   140005710:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005714:	add    rcx,rax
   140005717:	xor    eax,eax
   140005719:	cmp    DWORD PTR [rcx],0x4550
   14000571f:	jne    0x14000572d
   140005721:	mov    edx,0x20b
   140005726:	cmp    WORD PTR [rcx+0x18],dx
   14000572a:	sete   al
   14000572d:	ret    
   14000572e:	int3   
   14000572f:	int3   
   140005730:	int3   
   140005731:	int3   
   140005732:	int3   
   140005733:	int3   
   140005734:	mov    QWORD PTR [rsp+0x20],rbx
   140005739:	push   rbp
   14000573a:	mov    rbp,rsp
   14000573d:	sub    rsp,0x20
   140005741:	and    QWORD PTR [rbp+0x18],0x0
   140005746:	movabs rbx,0x2b992ddfa232
   140005750:	mov    rax,QWORD PTR [rip+0x38b1]        # 0x140009008
   140005757:	cmp    rax,rbx
   14000575a:	jne    0x1400057ef
   140005760:	lea    rcx,[rbp+0x18]
   140005764:	call   QWORD PTR [rip+0xb3e]        # 0x1400062a8
   14000576a:	mov    rax,QWORD PTR [rbp+0x18]
   14000576e:	mov    QWORD PTR [rbp+0x10],rax
   140005772:	call   QWORD PTR [rip+0xa18]        # 0x140006190
   140005778:	mov    eax,eax
   14000577a:	xor    QWORD PTR [rbp+0x10],rax
   14000577e:	call   QWORD PTR [rip+0x9dc]        # 0x140006160
   140005784:	mov    eax,eax
   140005786:	xor    QWORD PTR [rbp+0x10],rax
   14000578a:	call   QWORD PTR [rip+0xb08]        # 0x140006298
   140005790:	mov    eax,eax
   140005792:	shl    rax,0x18
   140005796:	xor    QWORD PTR [rbp+0x10],rax
   14000579a:	call   QWORD PTR [rip+0xaf8]        # 0x140006298
   1400057a0:	mov    eax,eax
   1400057a2:	lea    rcx,[rbp+0x10]
   1400057a6:	xor    rax,QWORD PTR [rbp+0x10]
   1400057aa:	xor    rax,rcx
   1400057ad:	lea    rcx,[rbp+0x20]
   1400057b1:	mov    QWORD PTR [rbp+0x10],rax
   1400057b5:	call   QWORD PTR [rip+0x9ed]        # 0x1400061a8
   1400057bb:	mov    eax,DWORD PTR [rbp+0x20]
   1400057be:	movabs rcx,0xffffffffffff
   1400057c8:	shl    rax,0x20
   1400057cc:	xor    rax,QWORD PTR [rbp+0x20]
   1400057d0:	xor    rax,QWORD PTR [rbp+0x10]
   1400057d4:	and    rax,rcx
   1400057d7:	movabs rcx,0x2b992ddfa233
   1400057e1:	cmp    rax,rbx
   1400057e4:	cmove  rax,rcx
   1400057e8:	mov    QWORD PTR [rip+0x3819],rax        # 0x140009008
   1400057ef:	mov    rbx,QWORD PTR [rsp+0x48]
   1400057f4:	not    rax
   1400057f7:	mov    QWORD PTR [rip+0x3812],rax        # 0x140009010
   1400057fe:	add    rsp,0x20
   140005802:	pop    rbp
   140005803:	ret    
   140005804:	int3   
   140005805:	int3   
   140005806:	int3   
   140005807:	int3   
   140005808:	int3   
   140005809:	int3   
   14000580a:	jmp    QWORD PTR [rip+0xb18]        # 0x140006328
   140005810:	int3   
   140005811:	int3   
   140005812:	int3   
   140005813:	int3   
   140005814:	int3   
   140005815:	int3   
   140005816:	jmp    QWORD PTR [rip+0xb14]        # 0x140006330
   14000581c:	int3   
   14000581d:	int3   
   14000581e:	int3   
   14000581f:	int3   
   140005820:	int3   
   140005821:	int3   
   140005822:	int3   
   140005823:	int3   
   140005824:	int3   
   140005825:	int3   
   140005826:	int3   
   140005827:	int3   
   140005828:	int3   
   140005829:	int3   
   14000582a:	int3   
   14000582b:	int3   
   14000582c:	int3   
   14000582d:	int3   
   14000582e:	int3   
   14000582f:	int3   
   140005830:	lea    rax,[rip+0x57c9]        # 0x14000b000
   140005837:	jmp    0x140005850
   14000583c:	int3   
   14000583d:	int3   
   14000583e:	int3   
   14000583f:	int3   
   140005840:	int3   
   140005841:	int3   
   140005842:	int3   
   140005843:	int3   
   140005844:	int3   
   140005845:	int3   
   140005846:	int3   
   140005847:	int3   
   140005848:	int3   
   140005849:	int3   
   14000584a:	int3   
   14000584b:	int3   
   14000584c:	int3   
   14000584d:	int3   
   14000584e:	int3   
   14000584f:	int3   
   140005850:	mov    QWORD PTR [rsp+0x8],rcx
   140005855:	mov    QWORD PTR [rsp+0x10],rdx
   14000585a:	mov    QWORD PTR [rsp+0x18],r8
   14000585f:	mov    QWORD PTR [rsp+0x20],r9
   140005864:	sub    rsp,0x68
   140005868:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000586e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140005874:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000587a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140005880:	mov    rdx,rax
   140005883:	lea    rcx,[rip+0x1a3e]        # 0x1400072c8
   14000588a:	call   0x140004d70
   14000588f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140005895:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000589b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   1400058a1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   1400058a7:	mov    rcx,QWORD PTR [rsp+0x70]
   1400058ac:	mov    rdx,QWORD PTR [rsp+0x78]
   1400058b1:	mov    r8,QWORD PTR [rsp+0x80]
   1400058b9:	mov    r9,QWORD PTR [rsp+0x88]
   1400058c1:	add    rsp,0x68
   1400058c5:	jmp    0x1400058c7
   1400058c7:	jmp    rax
   1400058c9:	int3   
   1400058ca:	int3   
   1400058cb:	int3   
   1400058cc:	int3   
   1400058cd:	int3   
   1400058ce:	int3   
   1400058cf:	int3   
   1400058d0:	lea    rax,[rip+0x5731]        # 0x14000b008
   1400058d7:	jmp    0x140005850
   1400058dc:	int3   
   1400058dd:	int3   
   1400058de:	int3   
   1400058df:	int3   
   1400058e0:	int3   
   1400058e1:	int3   
   1400058e2:	int3   
   1400058e3:	int3   
   1400058e4:	int3   
   1400058e5:	int3   
   1400058e6:	int3   
   1400058e7:	int3   
   1400058e8:	int3   
   1400058e9:	int3   
   1400058ea:	int3   
   1400058eb:	int3   
   1400058ec:	int3   
   1400058ed:	int3   
   1400058ee:	int3   
   1400058ef:	int3   
   1400058f0:	lea    rax,[rip+0x5719]        # 0x14000b010
   1400058f7:	jmp    0x140005850
   1400058fc:	int3   
   1400058fd:	int3   
   1400058fe:	int3   
   1400058ff:	int3   
   140005900:	int3   
   140005901:	int3   
   140005902:	int3   
   140005903:	int3   
   140005904:	int3   
   140005905:	int3   
   140005906:	int3   
   140005907:	int3   
   140005908:	int3   
   140005909:	int3   
   14000590a:	int3   
   14000590b:	int3   
   14000590c:	int3   
   14000590d:	int3   
   14000590e:	int3   
   14000590f:	int3   
   140005910:	lea    rax,[rip+0x5701]        # 0x14000b018
   140005917:	jmp    0x140005850
   14000591c:	int3   
   14000591d:	int3   
   14000591e:	int3   
   14000591f:	int3   
   140005920:	int3   
   140005921:	int3   
   140005922:	int3   
   140005923:	int3   
   140005924:	int3   
   140005925:	int3   
   140005926:	int3   
   140005927:	int3   
   140005928:	int3   
   140005929:	int3   
   14000592a:	int3   
   14000592b:	int3   
   14000592c:	int3   
   14000592d:	int3   
   14000592e:	int3   
   14000592f:	int3   
   140005930:	lea    rax,[rip+0x56e9]        # 0x14000b020
   140005937:	jmp    0x140005850
   14000593c:	int3   
   14000593d:	int3   
   14000593e:	int3   
   14000593f:	int3   
   140005940:	int3   
   140005941:	int3   
   140005942:	int3   
   140005943:	int3   
   140005944:	int3   
   140005945:	int3   
   140005946:	int3   
   140005947:	int3   
   140005948:	int3   
   140005949:	int3   
   14000594a:	int3   
   14000594b:	int3   
   14000594c:	int3   
   14000594d:	int3   
   14000594e:	int3   
   14000594f:	int3   
   140005950:	lea    rax,[rip+0x56d1]        # 0x14000b028
   140005957:	jmp    0x140005850
   14000595c:	int3   
   14000595d:	int3   
   14000595e:	int3   
   14000595f:	int3   
   140005960:	int3   
   140005961:	int3   
   140005962:	int3   
   140005963:	int3   
   140005964:	int3   
   140005965:	int3   
   140005966:	int3   
   140005967:	int3   
   140005968:	int3   
   140005969:	int3   
   14000596a:	int3   
   14000596b:	int3   
   14000596c:	int3   
   14000596d:	int3   
   14000596e:	int3   
   14000596f:	int3   
   140005970:	lea    rax,[rip+0x56d9]        # 0x14000b050
   140005977:	jmp    0x140005990
   14000597c:	int3   
   14000597d:	int3   
   14000597e:	int3   
   14000597f:	int3   
   140005980:	int3   
   140005981:	int3   
   140005982:	int3   
   140005983:	int3   
   140005984:	int3   
   140005985:	int3   
   140005986:	int3   
   140005987:	int3   
   140005988:	int3   
   140005989:	int3   
   14000598a:	int3   
   14000598b:	int3   
   14000598c:	int3   
   14000598d:	int3   
   14000598e:	int3   
   14000598f:	int3   
   140005990:	mov    QWORD PTR [rsp+0x8],rcx
   140005995:	mov    QWORD PTR [rsp+0x10],rdx
   14000599a:	mov    QWORD PTR [rsp+0x18],r8
   14000599f:	mov    QWORD PTR [rsp+0x20],r9
   1400059a4:	sub    rsp,0x68
   1400059a8:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400059ae:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   1400059b4:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   1400059ba:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   1400059c0:	mov    rdx,rax
   1400059c3:	lea    rcx,[rip+0x191e]        # 0x1400072e8
   1400059ca:	call   0x140004d70
   1400059cf:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   1400059d5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   1400059db:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   1400059e1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   1400059e7:	mov    rcx,QWORD PTR [rsp+0x70]
   1400059ec:	mov    rdx,QWORD PTR [rsp+0x78]
   1400059f1:	mov    r8,QWORD PTR [rsp+0x80]
   1400059f9:	mov    r9,QWORD PTR [rsp+0x88]
   140005a01:	add    rsp,0x68
   140005a05:	jmp    0x140005a07
   140005a07:	jmp    rax
   140005a09:	int3   
   140005a0a:	int3   
   140005a0b:	int3   
   140005a0c:	int3   
   140005a0d:	int3   
   140005a0e:	int3   
   140005a0f:	int3   
   140005a10:	lea    rax,[rip+0x5621]        # 0x14000b038
   140005a17:	jmp    0x140005990
   140005a1c:	int3   
   140005a1d:	int3   
   140005a1e:	int3   
   140005a1f:	int3   
   140005a20:	int3   
   140005a21:	int3   
   140005a22:	int3   
   140005a23:	int3   
   140005a24:	int3   
   140005a25:	int3   
   140005a26:	int3   
   140005a27:	int3   
   140005a28:	int3   
   140005a29:	int3   
   140005a2a:	int3   
   140005a2b:	int3   
   140005a2c:	int3   
   140005a2d:	int3   
   140005a2e:	int3   
   140005a2f:	int3   
   140005a30:	lea    rax,[rip+0x5609]        # 0x14000b040
   140005a37:	jmp    0x140005990
   140005a3c:	int3   
   140005a3d:	int3   
   140005a3e:	int3   
   140005a3f:	int3   
   140005a40:	int3   
   140005a41:	int3   
   140005a42:	int3   
   140005a43:	int3   
   140005a44:	int3   
   140005a45:	int3   
   140005a46:	int3   
   140005a47:	int3   
   140005a48:	int3   
   140005a49:	int3   
   140005a4a:	int3   
   140005a4b:	int3   
   140005a4c:	int3   
   140005a4d:	int3   
   140005a4e:	int3   
   140005a4f:	int3   
   140005a50:	lea    rax,[rip+0x55f1]        # 0x14000b048
   140005a57:	jmp    0x140005990
   140005a5c:	int3   
   140005a5d:	int3   
   140005a5e:	int3   
   140005a5f:	int3   
   140005a60:	int3   
   140005a61:	int3   
   140005a62:	int3   
   140005a63:	int3   
   140005a64:	int3   
   140005a65:	int3   
   140005a66:	int3   
   140005a67:	int3   
   140005a68:	int3   
   140005a69:	int3   
   140005a6a:	int3   
   140005a6b:	int3   
   140005a6c:	int3   
   140005a6d:	int3   
   140005a6e:	int3   
   140005a6f:	int3   
   140005a70:	jmp    QWORD PTR [rip+0x5ea]        # 0x140006060
   140005a76:	int3   
   140005a77:	int3   
   140005a78:	int3   
   140005a79:	int3   
   140005a7a:	int3   
   140005a7b:	int3   
   140005a7c:	sub    rsp,0x28
   140005a80:	mov    r8,QWORD PTR [r9+0x38]
   140005a84:	mov    rcx,rdx
   140005a87:	mov    rdx,r9
   140005a8a:	call   0x140005aa0
   140005a8f:	mov    eax,0x1
   140005a94:	add    rsp,0x28
   140005a98:	ret    
   140005a99:	int3   
   140005a9a:	int3   
   140005a9b:	int3   
   140005a9c:	int3   
   140005a9d:	int3   
   140005a9e:	int3   
   140005a9f:	int3   
   140005aa0:	rex push rbx
   140005aa2:	sub    rsp,0x20
   140005aa6:	mov    r11d,DWORD PTR [r8]
   140005aa9:	mov    rbx,rdx
   140005aac:	and    r11d,0xfffffff8
   140005ab0:	mov    r9,rcx
   140005ab3:	test   BYTE PTR [r8],0x4
   140005ab7:	mov    r10,rcx
   140005aba:	je     0x140005acf
   140005abc:	mov    eax,DWORD PTR [r8+0x8]
   140005ac0:	movsxd r10,DWORD PTR [r8+0x4]
   140005ac4:	neg    eax
   140005ac6:	add    r10,rcx
   140005ac9:	movsxd rcx,eax
   140005acc:	and    r10,rcx
   140005acf:	movsxd rax,r11d
   140005ad2:	mov    rdx,QWORD PTR [rax+r10*1]
   140005ad6:	mov    rax,QWORD PTR [rbx+0x10]
   140005ada:	mov    ecx,DWORD PTR [rax+0x8]
   140005add:	add    rcx,QWORD PTR [rbx+0x8]
   140005ae1:	test   BYTE PTR [rcx+0x3],0xf
   140005ae5:	je     0x140005af3
   140005ae7:	movzx  eax,BYTE PTR [rcx+0x3]
   140005aeb:	and    eax,0xfffffff0
   140005aee:	cdqe   
   140005af0:	add    r9,rax
   140005af3:	xor    r9,rdx
   140005af6:	mov    rcx,r9
   140005af9:	add    rsp,0x20
   140005afd:	pop    rbx
   140005afe:	jmp    0x140005220
   140005b03:	int3   
   140005b04:	int3   
   140005b05:	int3   
   140005b06:	int3   
   140005b07:	int3   
   140005b08:	int3   
   140005b09:	int3   
   140005b0a:	int3   
   140005b0b:	int3   
   140005b0c:	mov    rax,rsp
   140005b0f:	mov    QWORD PTR [rax+0x8],rbx
   140005b13:	mov    QWORD PTR [rax+0x10],rbp
   140005b17:	mov    QWORD PTR [rax+0x18],rsi
   140005b1b:	mov    QWORD PTR [rax+0x20],rdi
   140005b1f:	push   r14
   140005b21:	sub    rsp,0x20
   140005b25:	mov    r10,QWORD PTR [r9+0x38]
   140005b29:	mov    rsi,rdx
   140005b2c:	mov    r14,r8
   140005b2f:	mov    rbp,rcx
   140005b32:	mov    rdx,r9
   140005b35:	mov    rcx,rsi
   140005b38:	mov    rdi,r9
   140005b3b:	mov    ebx,DWORD PTR [r10]
   140005b3e:	shl    rbx,0x4
   140005b42:	add    rbx,r10
   140005b45:	lea    r8,[rbx+0x4]
   140005b49:	call   0x140005aa0
   140005b4e:	mov    r11d,DWORD PTR [rbx+0x4]
   140005b52:	mov    edx,0x1
   140005b57:	mov    r10d,DWORD PTR [rbp+0x4]
   140005b5b:	mov    eax,r11d
   140005b5e:	and    eax,edx
   140005b60:	and    r11d,0x2
   140005b64:	and    r10b,0x66
   140005b68:	cmove  r11d,eax
   140005b6c:	test   r11d,r11d
   140005b6f:	je     0x140005b85
   140005b71:	mov    r9,rdi
   140005b74:	mov    r8,r14
   140005b77:	mov    rdx,rsi
   140005b7a:	mov    rcx,rbp
   140005b7d:	call   QWORD PTR [rip+0x7ad]        # 0x140006330
   140005b83:	mov    edx,eax
   140005b85:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b8a:	mov    eax,edx
   140005b8c:	mov    rbp,QWORD PTR [rsp+0x38]
   140005b91:	mov    rsi,QWORD PTR [rsp+0x40]
   140005b96:	mov    rdi,QWORD PTR [rsp+0x48]
   140005b9b:	add    rsp,0x20
   140005b9f:	pop    r14
   140005ba1:	ret    
   140005ba2:	int3   
   140005ba3:	int3   
   140005ba4:	int3   
   140005ba5:	int3   
   140005ba6:	int3   
   140005ba7:	int3   
   140005ba8:	int3   
   140005ba9:	int3   
   140005baa:	int3   
   140005bab:	int3   
   140005bac:	int3   
   140005bad:	int3   
   140005bae:	int3   
   140005baf:	int3   
   140005bb0:	int3   
   140005bb1:	int3   
   140005bb2:	int3   
   140005bb3:	int3   
   140005bb4:	int3   
   140005bb5:	int3   
   140005bb6:	jmp    QWORD PTR [rip+0x714]        # 0x1400062d0
   140005bbc:	int3   
   140005bbd:	int3   
   140005bbe:	int3   
   140005bbf:	int3   
   140005bc0:	int3   
   140005bc1:	int3   
   140005bc2:	jmp    QWORD PTR [rip+0x700]        # 0x1400062c8
   140005bc8:	int3   
   140005bc9:	int3   
   140005bca:	int3   
   140005bcb:	int3   
   140005bcc:	int3   
   140005bcd:	int3   
   140005bce:	jmp    QWORD PTR [rip+0x7a4]        # 0x140006378
   140005bd4:	int3   
   140005bd5:	int3   
   140005bd6:	int3   
   140005bd7:	int3   
   140005bd8:	int3   
   140005bd9:	int3   
   140005bda:	int3   
   140005bdb:	int3   
   140005bdc:	int3   
   140005bdd:	int3   
   140005bde:	int3   
   140005bdf:	int3   
   140005be0:	int3   
   140005be1:	int3   
   140005be2:	int3   
   140005be3:	int3   
   140005be4:	int3   
   140005be5:	int3   
   140005be6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005bf0:	jmp    rax
   140005bf2:	int3   
   140005bf3:	int3   
   140005bf4:	int3   
   140005bf5:	int3   
   140005bf6:	int3   
   140005bf7:	int3   
   140005bf8:	int3   
   140005bf9:	int3   
   140005bfa:	int3   
   140005bfb:	int3   
   140005bfc:	int3   
   140005bfd:	int3   
   140005bfe:	int3   
   140005bff:	int3   
   140005c00:	int3   
   140005c01:	int3   
   140005c02:	int3   
   140005c03:	int3   
   140005c04:	int3   
   140005c05:	int3   
   140005c06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005c10:	sub    rsp,0x10
   140005c14:	mov    QWORD PTR [rsp],r10
   140005c18:	mov    QWORD PTR [rsp+0x8],r11
   140005c1d:	xor    r11,r11
   140005c20:	lea    r10,[rsp+0x18]
   140005c25:	sub    r10,rax
   140005c28:	cmovb  r10,r11
   140005c2c:	mov    r11,QWORD PTR gs:0x10
   140005c35:	cmp    r10,r11
   140005c38:	jae    0x140005c4f
   140005c3a:	and    r10w,0xf000
   140005c40:	lea    r11,[r11-0x1000]
   140005c47:	test   BYTE PTR [r11],r11b
   140005c4a:	cmp    r10,r11
   140005c4d:	jne    0x140005c40
   140005c4f:	mov    r10,QWORD PTR [rsp]
   140005c53:	mov    r11,QWORD PTR [rsp+0x8]
   140005c58:	add    rsp,0x10
   140005c5c:	ret    
   140005c5d:	int3   
   140005c5e:	int3   
   140005c5f:	int3   
   140005c60:	int3   
   140005c61:	int3   
   140005c62:	int3   
   140005c63:	int3   
   140005c64:	int3   
   140005c65:	int3   
   140005c66:	rex push rbp
   140005c68:	sub    rsp,0x20
   140005c6c:	lea    rbp,[rdx+0x20]
   140005c70:	mov    rax,QWORD PTR [rcx]
   140005c73:	xor    ecx,ecx
   140005c75:	cmp    DWORD PTR [rax],0xc00000fd
   140005c7b:	sete   cl
   140005c7e:	mov    eax,ecx
   140005c80:	add    rsp,0x20
   140005c84:	pop    rbp
   140005c85:	ret    
   140005c86:	int3   
   140005c87:	int3   
   140005c88:	int3   
   140005c89:	int3   
   140005c8a:	int3   
   140005c8b:	int3   
   140005c8c:	int3   
   140005c8d:	rex push rbp
   140005c8f:	sub    rsp,0x20
   140005c93:	mov    rbp,rdx
   140005c96:	mov    rax,QWORD PTR [rcx]
   140005c99:	xor    ecx,ecx
   140005c9b:	cmp    DWORD PTR [rax],0xc0000017
   140005ca1:	sete   cl
   140005ca4:	mov    eax,ecx
   140005ca6:	add    rsp,0x20
   140005caa:	pop    rbp
   140005cab:	ret    
   140005cac:	int3   
   140005cad:	rex push rbp
   140005caf:	sub    rsp,0x20
   140005cb3:	mov    rbp,rdx
   140005cb6:	mov    rax,QWORD PTR [rcx]
   140005cb9:	xor    ecx,ecx
   140005cbb:	cmp    DWORD PTR [rax],0xc0000017
   140005cc1:	sete   cl
   140005cc4:	mov    eax,ecx
   140005cc6:	add    rsp,0x20
   140005cca:	pop    rbp
   140005ccb:	ret    
   140005ccc:	int3   
   140005ccd:	rex push rbp
   140005ccf:	sub    rsp,0x20
   140005cd3:	mov    rbp,rdx
   140005cd6:	mov    rax,QWORD PTR [rcx]
   140005cd9:	xor    ecx,ecx
   140005cdb:	cmp    DWORD PTR [rax],0xc0000017
   140005ce1:	sete   cl
   140005ce4:	mov    eax,ecx
   140005ce6:	add    rsp,0x20
   140005cea:	pop    rbp
   140005ceb:	ret    
   140005cec:	int3   
   140005ced:	int3   
   140005cee:	int3   
   140005cef:	int3   
   140005cf0:	int3   
   140005cf1:	int3   
   140005cf2:	int3   
   140005cf3:	rex push rbp
   140005cf5:	sub    rsp,0x20
   140005cf9:	mov    rbp,rdx
   140005cfc:	mov    rax,QWORD PTR [rcx]
   140005cff:	mov    rdx,rcx
   140005d02:	mov    ecx,DWORD PTR [rax]
   140005d04:	call   0x14000558e
   140005d09:	nop
   140005d0a:	add    rsp,0x20
   140005d0e:	pop    rbp
   140005d0f:	ret    
   140005d10:	int3   
   140005d11:	int3   
   140005d12:	int3   
   140005d13:	int3   
   140005d14:	int3   
   140005d15:	int3   
   140005d16:	int3   
   140005d17:	int3   
   140005d18:	int3   
   140005d19:	int3   
   140005d1a:	int3   
   140005d1b:	int3   
   140005d1c:	int3   
   140005d1d:	int3   
   140005d1e:	int3   
   140005d1f:	int3   
   140005d20:	rex push rbp
   140005d22:	sub    rsp,0x20
   140005d26:	mov    rbp,rdx
   140005d29:	mov    rax,QWORD PTR [rcx]
   140005d2c:	xor    ecx,ecx
   140005d2e:	cmp    DWORD PTR [rax],0xc0000005
   140005d34:	sete   cl
   140005d37:	mov    eax,ecx
   140005d39:	add    rsp,0x20
   140005d3d:	pop    rbp
   140005d3e:	ret    
   140005d3f:	int3   

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	rex.WR jge 0x140006003
   140006003:	add    BYTE PTR [rax],al
   140006005:	add    BYTE PTR [rax],al
   140006007:	add    BYTE PTR [rbx+rdi*2],bh
   14000600a:	add    BYTE PTR [rax],al
   14000600c:	add    BYTE PTR [rax],al
   14000600e:	add    BYTE PTR [rax],al
   140006010:	nop
   140006011:	jnp    0x140006013
   140006013:	add    BYTE PTR [rax],al
   140006015:	add    BYTE PTR [rax],al
   140006017:	add    BYTE PTR [rbx+rdi*2+0x0],dh
   14000601e:	add    BYTE PTR [rax],al
   140006020:	adc    BYTE PTR [rax+rax*1+0x0],bh
   140006024:	add    BYTE PTR [rax],al
   140006026:	add    BYTE PTR [rax],al
   140006028:	pop    rax
   140006029:	jl     0x14000602b
   14000602b:	add    BYTE PTR [rax],al
   14000602d:	add    BYTE PTR [rax],al
   14000602f:	add    BYTE PTR [rbp+rdi*2+0x0],bl
   140006036:	add    BYTE PTR [rax],al
   140006038:	(bad)  
   140006039:	jge    0x14000603b
   14000603b:	add    BYTE PTR [rax],al
   14000603d:	add    BYTE PTR [rax],al
   14000603f:	add    ah,dh
   140006041:	jge    0x140006043
   140006043:	add    BYTE PTR [rax],al
   140006045:	add    BYTE PTR [rax],al
   140006047:	add    BYTE PTR [rdx],cl
   140006049:	jle    0x14000604b
   14000604b:	add    BYTE PTR [rax],al
   14000604d:	add    BYTE PTR [rax],al
   14000604f:	add    BYTE PTR [rsi+0x7e],cl
	...
   14000605d:	add    BYTE PTR [rax],al
   14000605f:	add    BYTE PTR [rdx],dh
   140006061:	(bad)  
   140006062:	add    BYTE PTR [rax],al
   140006064:	add    BYTE PTR [rax],al
   140006066:	add    BYTE PTR [rax],al
   140006068:	sbb    al,BYTE PTR [rdx+0x0]
	...
   140006076:	add    BYTE PTR [rax],al
   140006078:	in     al,0x7c
   14000607a:	add    BYTE PTR [rax],al
   14000607c:	add    BYTE PTR [rax],al
   14000607e:	add    BYTE PTR [rax],al
   140006080:	fdivr  QWORD PTR [rsi+0x0]
   140006083:	add    BYTE PTR [rax],al
   140006085:	add    BYTE PTR [rax],al
   140006087:	add    al,al
   140006089:	jle    0x14000608b
	...
   140006097:	add    BYTE PTR [rsi],dl
   140006099:	jnp    0x14000609b
	...
   1400060a7:	add    BYTE PTR [rax+0x7e],ah
	...
   1400060b6:	add    BYTE PTR [rax],al
   1400060b8:	scas   al,BYTE PTR es:[rdi]
   1400060b9:	jge    0x1400060bb
   1400060bb:	add    BYTE PTR [rax],al
   1400060bd:	add    BYTE PTR [rax],al
   1400060bf:	add    BYTE PTR [rdx+0x7c],dl
	...
   1400060cd:	add    BYTE PTR [rax],al
   1400060cf:	add    BYTE PTR [rdx+0x82],al
   1400060d5:	add    BYTE PTR [rax],al
   1400060d7:	add    BYTE PTR [rax-0x7e],dh
	...
   1400060e6:	add    BYTE PTR [rax],al
   1400060e8:	movabs ds:0xb80000000000007b,al
   1400060f1:	jl     0x1400060f3
   1400060f3:	add    BYTE PTR [rax],al
   1400060f5:	add    BYTE PTR [rax],al
   1400060f7:	add    BYTE PTR [rax+0x7b],ah
   1400060fa:	add    BYTE PTR [rax],al
   1400060fc:	add    BYTE PTR [rax],al
   1400060fe:	add    BYTE PTR [rax],al
   140006100:	jb     0x14000617d
   140006102:	add    BYTE PTR [rax],al
   140006104:	add    BYTE PTR [rax],al
   140006106:	add    BYTE PTR [rax],al
   140006108:	cmp    BYTE PTR [rbx+0x0],0x0
   14000610c:	add    BYTE PTR [rax],al
   14000610e:	add    BYTE PTR [rax],al
   140006110:	hlt    
   140006111:	jl     0x140006113
   140006113:	add    BYTE PTR [rax],al
   140006115:	add    BYTE PTR [rax],al
   140006117:	add    BYTE PTR [rax+0x7c],dh
   14000611a:	add    BYTE PTR [rax],al
   14000611c:	add    BYTE PTR [rax],al
   14000611e:	add    BYTE PTR [rax],al
   140006120:	(bad)  
   140006121:	jnp    0x140006123
	...
   14000612f:	add    dl,ah
   140006131:	jge    0x140006133
   140006133:	add    BYTE PTR [rax],al
   140006135:	add    BYTE PTR [rax],al
   140006137:	add    BYTE PTR [rax+0x7b],dl
   14000613a:	add    BYTE PTR [rax],al
   14000613c:	add    BYTE PTR [rax],al
   14000613e:	add    BYTE PTR [rax],al
   140006140:	sbb    BYTE PTR [rbp+0x0],bh
	...
   14000614f:	add    BYTE PTR [rdx],ch
   140006151:	jnp    0x140006153
	...
   14000615f:	add    BYTE PTR [rdx+0x7e],cl
   140006162:	add    BYTE PTR [rax],al
   140006164:	add    BYTE PTR [rax],al
   140006166:	add    BYTE PTR [rax],al
   140006168:	or     al,BYTE PTR [rdx+0x0]
   14000616e:	add    BYTE PTR [rax],al
   140006170:	cld    
   140006171:	add    DWORD PTR [rax],0x0
   140006177:	add    dh,ch
   140006179:	add    DWORD PTR [rax],0x0
   14000617f:	add    dl,bh
   140006181:	jle    0x140006183
   140006183:	add    BYTE PTR [rax],al
   140006185:	add    BYTE PTR [rax],al
   140006187:	add    BYTE PTR [rsi],cl
   140006189:	jg     0x14000618b
   14000618b:	add    BYTE PTR [rax],al
   14000618d:	add    BYTE PTR [rax],al
   14000618f:	add    BYTE PTR [rdi+rdi*2],bh
   140006192:	add    BYTE PTR [rax],al
   140006194:	add    BYTE PTR [rax],al
   140006196:	add    BYTE PTR [rax],al
   140006198:	scas   al,BYTE PTR es:[rdi]
   140006199:	jle    0x14000619b
	...
   1400061a7:	add    BYTE PTR [rdx],ah
   1400061a9:	jg     0x1400061ab
	...
   1400061b7:	add    BYTE PTR [rsi],al
   1400061b9:	jge    0x1400061bb
   1400061bb:	add    BYTE PTR [rax],al
   1400061bd:	add    BYTE PTR [rax],al
   1400061bf:	add    BYTE PTR [rsp+rdi*2+0x0],al
   1400061c3:	add    BYTE PTR [rax],al
   1400061c5:	add    BYTE PTR [rax],al
   1400061c7:	add    dh,bh
   1400061c9:	jnp    0x1400061cb
   1400061cb:	add    BYTE PTR [rax],al
   1400061cd:	add    BYTE PTR [rax],al
   1400061cf:	add    BYTE PTR [rsi+rdi*2+0x0],bh
   1400061d3:	add    BYTE PTR [rax],al
   1400061d5:	add    BYTE PTR [rax],al
   1400061d7:	add    BYTE PTR [rsi+0x7e],ch
   1400061da:	add    BYTE PTR [rax],al
   1400061dc:	add    BYTE PTR [rax],al
   1400061de:	add    BYTE PTR [rax],al
   1400061e0:	ins    BYTE PTR es:[rdi],dx
   1400061e1:	jge    0x1400061e3
   1400061e3:	add    BYTE PTR [rax],al
   1400061e5:	add    BYTE PTR [rax],al
   1400061e7:	add    BYTE PTR [rbp+rdi*2+0x0],bh
   1400061eb:	add    BYTE PTR [rax],al
   1400061ed:	add    BYTE PTR [rax],al
   1400061ef:	add    BYTE PTR [rdx],ah
   1400061f1:	jle    0x1400061f3
	...
   1400061ff:	add    dh,cl
   140006201:	jl     0x140006203
	...
   14000620f:	add    dh,dl
   140006211:	jge    0x140006213
   140006213:	add    BYTE PTR [rax],al
   140006215:	add    BYTE PTR [rax],al
   140006217:	add    BYTE PTR [rax+0x7d],al
	...
   140006226:	add    BYTE PTR [rax],al
   140006228:	mov    dh,0x81
   14000622a:	add    BYTE PTR [rax],al
   14000622c:	add    BYTE PTR [rax],al
   14000622e:	add    BYTE PTR [rax],al
   140006230:	stos   BYTE PTR es:[rdi],al
   140006231:	add    DWORD PTR [rax],0x0
   140006237:	add    BYTE PTR [rsi+0x81],bl
	...
   140006245:	add    BYTE PTR [rax],al
   140006247:	add    dh,bl
   140006249:	jnp    0x14000624b
   14000624b:	add    BYTE PTR [rax],al
   14000624d:	add    BYTE PTR [rax],al
   14000624f:	add    BYTE PTR [rbp+rdi*2+0x0],bl
   140006253:	add    BYTE PTR [rax],al
   140006255:	add    BYTE PTR [rax],al
   140006257:	add    BYTE PTR [rax+0x7c],ah
   14000625d:	add    BYTE PTR [rax],al
   14000625f:	add    BYTE PTR [rsi+0x7e],ah
   140006265:	add    BYTE PTR [rax],al
   140006267:	add    BYTE PTR [rdx],dh
   140006269:	jle    0x14000626b
   14000626b:	add    BYTE PTR [rax],al
   14000626d:	add    BYTE PTR [rax],al
   14000626f:	add    al,cl
   140006271:	jnp    0x140006273
   140006273:	add    BYTE PTR [rax],al
   140006275:	add    BYTE PTR [rax],al
   140006277:	add    BYTE PTR [rax],ch
   140006279:	jge    0x14000627b
   14000627b:	add    BYTE PTR [rax],al
   14000627d:	add    BYTE PTR [rax],al
   14000627f:	add    BYTE PTR [rax],ch
   140006281:	jl     0x140006283
	...
   14000628f:	add    BYTE PTR [rdx+0x7c],al
   140006295:	add    BYTE PTR [rax],al
   140006297:	add    BYTE PTR [rdi+rdi*2+0x0],ch
   14000629b:	add    BYTE PTR [rax],al
   14000629d:	add    BYTE PTR [rax],al
   14000629f:	add    BYTE PTR [rbp+rdi*2+0x0],cl
   1400062a6:	add    BYTE PTR [rax],al
   1400062a8:	push   rdx
   1400062a9:	jg     0x1400062ab
	...
   1400062b7:	add    BYTE PTR [rdx],al
   1400062b9:	jp     0x1400062bb
   1400062bb:	add    BYTE PTR [rax],al
   1400062bd:	add    BYTE PTR [rax],al
   1400062bf:	add    ah,dh
   1400062c1:	jns    0x1400062c3
   1400062c3:	add    BYTE PTR [rax],al
   1400062c5:	add    BYTE PTR [rax],al
   1400062c7:	add    dh,dl
   1400062c9:	(bad)  
   1400062ca:	add    BYTE PTR [rax],al
   1400062cc:	add    BYTE PTR [rax],al
   1400062ce:	add    BYTE PTR [rax],al
   1400062d0:	int3   
   1400062d1:	(bad)  
   1400062d2:	add    BYTE PTR [rax],al
   1400062d4:	add    BYTE PTR [rax],al
   1400062d6:	add    BYTE PTR [rax],al
   1400062d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400062d9:	jp     0x1400062db
   1400062db:	add    BYTE PTR [rax],al
   1400062dd:	add    BYTE PTR [rax],al
   1400062df:	add    BYTE PTR [rdx+rdi*2+0x0],cl
   1400062e6:	add    BYTE PTR [rax],al
   1400062e8:	out    0x79,al
   1400062ea:	add    BYTE PTR [rax],al
   1400062ec:	add    BYTE PTR [rax],al
   1400062ee:	add    BYTE PTR [rax],al
   1400062f0:	adc    al,0x7a
   1400062f2:	add    BYTE PTR [rax],al
   1400062f4:	add    BYTE PTR [rax],al
   1400062f6:	add    BYTE PTR [rax],al
   1400062f8:	fidivr DWORD PTR [rcx+0x0]
   1400062fb:	add    BYTE PTR [rax],al
   1400062fd:	add    BYTE PTR [rax],al
   1400062ff:	add    BYTE PTR [rsi],ch
   140006301:	jp     0x140006303
   140006303:	add    BYTE PTR [rax],al
   140006305:	add    BYTE PTR [rax],al
   140006307:	add    BYTE PTR [rax+0x79],cl
   14000630d:	add    BYTE PTR [rax],al
   14000630f:	add    dh,cl
   140006311:	jns    0x140006313
   140006313:	add    BYTE PTR [rax],al
   140006315:	add    BYTE PTR [rax],al
   140006317:	add    BYTE PTR [rsi],dh
   140006319:	jp     0x14000631b
   14000631b:	add    BYTE PTR [rax],al
   14000631d:	add    BYTE PTR [rax],al
   14000631f:	add    BYTE PTR [rax+0x7a],al
   140006322:	add    BYTE PTR [rax],al
   140006324:	add    BYTE PTR [rax],al
   140006326:	add    BYTE PTR [rax],al
   140006328:	push   rsp
   140006329:	jp     0x14000632b
   14000632b:	add    BYTE PTR [rax],al
   14000632d:	add    BYTE PTR [rax],al
   14000632f:	add    BYTE PTR [rax+0x7a],ah
   140006332:	add    BYTE PTR [rax],al
   140006334:	add    BYTE PTR [rax],al
   140006336:	add    BYTE PTR [rax],al
   140006338:	js     0x1400063b4
   14000633a:	add    BYTE PTR [rax],al
   14000633c:	add    BYTE PTR [rax],al
   14000633e:	add    BYTE PTR [rax],al
   140006340:	(bad)  
   140006341:	jp     0x140006343
   140006343:	add    BYTE PTR [rax],al
   140006345:	add    BYTE PTR [rax],al
   140006347:	add    ah,al
   140006349:	jns    0x14000634b
   14000634b:	add    BYTE PTR [rax],al
   14000634d:	add    BYTE PTR [rax],al
   14000634f:	add    BYTE PTR [rax+0x79],bh
   140006355:	add    BYTE PTR [rax],al
   140006357:	add    BYTE PTR [rsi+0x79],ah
   14000635d:	add    BYTE PTR [rax],al
   14000635f:	add    BYTE PTR [rcx+rdi*2+0x0],bl
   140006366:	add    BYTE PTR [rax],al
   140006368:	xchg   esp,eax
   140006369:	jns    0x14000636b
   14000636b:	add    BYTE PTR [rax],al
   14000636d:	add    BYTE PTR [rax],al
   14000636f:	add    BYTE PTR [rsi],ah
   140006371:	jp     0x140006373
   140006373:	add    BYTE PTR [rax],al
   140006375:	add    BYTE PTR [rax],al
   140006377:	add    al,ah
   140006379:	(bad)  
	...
   140006386:	add    BYTE PTR [rax],al
   140006388:	fidivr WORD PTR [rdx+0x0]
   14000638b:	add    BYTE PTR [rax],al
   14000638d:	add    BYTE PTR [rax],al
   14000638f:	add    dl,cl
   140006391:	jp     0x140006393
   140006393:	add    BYTE PTR [rax],al
   140006395:	add    BYTE PTR [rax],al
   140006397:	add    BYTE PTR [rax+0x7a],bh
   14000639d:	add    BYTE PTR [rax],al
   14000639f:	add    al,bh
   1400063a1:	jp     0x1400063a3
	...
   1400063af:	add    BYTE PTR [rax+0x3b],dh
   1400063b2:	add    BYTE PTR [rax+0x1],al
   1400063b5:	add    BYTE PTR [rax],al
   1400063b7:	add    al,dh
   1400063b9:	pop    rbx
   1400063ba:	add    BYTE PTR [rax+0x1],al
	...
   1400063c5:	add    BYTE PTR [rax],al
   1400063c7:	add    BYTE PTR [rax],ah
   1400063c9:	rex.WRXB add BYTE PTR [r8+0x1],r8b
	...
   1400063dd:	add    BYTE PTR [rax],al
   1400063df:	add    BYTE PTR [rax+0x4e],al
   1400063e2:	add    BYTE PTR [rax+0x1],al
   1400063e5:	add    BYTE PTR [rax],al
   1400063e7:	add    BYTE PTR [rax+0x55],dh
   1400063ea:	add    BYTE PTR [rax+0x1],al
	...
   1400063f5:	add    BYTE PTR [rax],al
   1400063f7:	add    al,dl
   1400063f9:	cmp    al,BYTE PTR [rax]
   1400063fb:	add    BYTE PTR [rax+0x3b],dh
   1400063fe:	add    BYTE PTR [rax],al
   140006400:	sar    BYTE PTR [rax+rax*1],0x0
   140006404:	push   rax
   140006405:	cmp    eax,0x3da00000
   14000640a:	add    BYTE PTR [rax],al
   14000640c:	adc    BYTE PTR [rdi+0x0],al
   14000640f:	add    BYTE PTR [rax],ah
   140006411:	rex.RXB add BYTE PTR [r8],r8b
   140006414:	xor    BYTE PTR [rax+0x0],cl
   140006417:	add    BYTE PTR [rax+0x48],ah
   14000641a:	add    BYTE PTR [rax],al
   14000641c:	or     BYTE PTR [rax+0x0],0x0
   140006420:	loopne 0x14000646a
   140006422:	add    BYTE PTR [rax],al
   140006424:	xor    BYTE PTR [rdx+0x0],cl
   140006427:	add    al,ah
   140006429:	rex.WX add BYTE PTR [rax],al
   14000642c:	add    BYTE PTR [rbx+0x0],cl
   14000642f:	add    BYTE PTR [rax+0x3000004b],al
   140006435:	rex.WR add BYTE PTR [rax],r8b
   140006438:	ror    BYTE PTR [rax+rax*1+0x0],1
   14000643c:	push   rax
   14000643d:	rex.WRB add BYTE PTR [r8],r8b
   140006440:	jo     0x14000648f
   140006442:	add    BYTE PTR [rax],al
   140006444:	rex
   140006445:	rex.WRX add BYTE PTR [rax],r8b
   140006448:	and    BYTE PTR [rdi+0x0],cl
   14000644b:	add    al,dh
   14000644d:	push   rcx
   14000644e:	add    BYTE PTR [rax],al
   140006450:	movabs al,ds:0x7000005530000052
   140006459:	push   rbp
   14000645a:	add    BYTE PTR [rax],al
   14000645c:	xor    BYTE PTR [rax+0x0],bl
   14000645f:	add    BYTE PTR [rax+0x58],dl
   140006462:	add    BYTE PTR [rax],al
   140006464:	rcr    BYTE PTR [rax+0x0],1
   140006467:	add    al,dh
   140006469:	pop    rax
   14000646a:	add    BYTE PTR [rax],al
   14000646c:	adc    BYTE PTR [rcx+0x0],bl
   14000646f:	add    BYTE PTR [rax],dh
   140006471:	pop    rcx
   140006472:	add    BYTE PTR [rax],al
   140006474:	push   rax
   140006475:	pop    rcx
   140006476:	add    BYTE PTR [rax],al
   140006478:	jo     0x1400064d3
   14000647a:	add    BYTE PTR [rax],al
   14000647c:	nop
   14000647d:	pop    rcx
   14000647e:	add    BYTE PTR [rax],al
   140006480:	adc    BYTE PTR [rdx+0x0],bl
   140006483:	add    BYTE PTR [rax],dh
   140006485:	pop    rdx
   140006486:	add    BYTE PTR [rax],al
   140006488:	push   rax
   140006489:	pop    rdx
   14000648a:	add    BYTE PTR [rax],al
   14000648c:	jo     0x1400064e8
   14000648e:	add    BYTE PTR [rax],al
   140006490:	add    BYTE PTR [rcx+0x14000],dl
   140006496:	add    BYTE PTR [rax],al
   140006498:	movabs al,ds:0x4f00000001400091
   1400064a1:	rex.WR
   1400064a2:	rex.RB
   1400064a3:	push   r13
   1400064a5:	push   rsp
   1400064a6:	xor    esi,DWORD PTR [rdx]
   1400064a8:	cs fs ins BYTE PTR es:[rdi],dx
   1400064ab:	ins    BYTE PTR es:[rdi],dx
   1400064ac:	add    BYTE PTR [rax],al
   1400064ae:	add    BYTE PTR [rax],al
   1400064b0:	gs js  0x140006527
   1400064b3:	sub    eax,0x772d736d
   1400064b8:	imul   ebp,DWORD PTR [rsi+0x2d],0x6f637472
   1400064bf:	jb     0x140006526
   1400064c1:	sub    eax,0x7375746e
   1400064c6:	gs jb  0x1400064f6
   1400064c9:	ja     0x140006534
   1400064cb:	outs   dx,BYTE PTR ds:[rsi]
   1400064cc:	outs   dx,DWORD PTR fs:[rsi]
   1400064ce:	ja     0x1400064fd
   1400064d0:	gs js  0x140006547
   1400064d3:	sub    eax,0x312d316c
   1400064d8:	sub    eax,0x6c642e30
   1400064dd:	ins    BYTE PTR es:[rdi],dx
	...
   1400064ee:	add    BYTE PTR [rax],al
   1400064f0:	add    BYTE PTR [r8+0x0],dl
   1400064f4:	rex.WB add BYTE PTR [rip+0x53004d00],bpl        # 0x19300b1fb
   1400064fb:	add    BYTE PTR [rip+0x69005700],ch        # 0x1a900bc01
   140006501:	add    BYTE PTR [rsi+0x0],ch
   140006504:	sub    eax,0x6f004300
   140006509:	add    BYTE PTR [rdx+0x0],dh
   14000650c:	add    BYTE PTR gs:[rip+0x6f004c00],ch        # 0x1af00b113
   140006513:	add    BYTE PTR [rbx+0x0],ah
   140006516:	(bad)  
   140006517:	add    BYTE PTR [rax+rax*1+0x52],ch
   14000651b:	add    BYTE PTR [rbp+0x0],ah
   14000651e:	add    BYTE PTR [ecx+0x0],ch
   140006522:	jae    0x140006524
   140006524:	je     0x140006526
   140006526:	jb     0x140006528
   140006528:	jns    0x14000652a
   14000652a:	sub    eax,0x31004c00
   14000652f:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d009635
   140006535:	add    BYTE PTR [rax],dh
   140006537:	add    BYTE PTR [rsi],ch
   140006539:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000653d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006541:	add    BYTE PTR [rax],al
   140006543:	add    BYTE PTR [rax],al
   140006545:	add    BYTE PTR [rax],al
   140006547:	add    BYTE PTR [rdx+0x65],dl
   14000654a:	addr32 rex.R
   14000654c:	gs ins BYTE PTR es:[rdi],dx
   14000654e:	gs je  0x1400065b6
   140006551:	rex.WXB
   140006552:	gs jns 0x14000659a
   140006555:	js     0x1400065ae
   140006557:	add    BYTE PTR [rcx+0x0],ah
   14000655a:	add    BYTE PTR fs:[rsi+0x0],dh
   14000655e:	(bad)  
   14000655f:	add    BYTE PTR [rax+0x0],dh
   140006562:	imul   eax,DWORD PTR [rax],0x320033
   140006568:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000656d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006571:	add    BYTE PTR [rax],al
   140006573:	add    BYTE PTR [rax],al
   140006575:	add    BYTE PTR [rax],al
   140006577:	add    BYTE PTR [rdx+0x65],dl
   14000657a:	addr32 rex.R
   14000657c:	gs ins BYTE PTR es:[rdi],dx
   14000657e:	gs je  0x1400065e6
   140006581:	rex.WXB
   140006582:	gs jns 0x1400065dc
   140006585:	add    BYTE PTR [rax],al
   140006587:	add    BYTE PTR [rbx+0x0],al
   14000658a:	rex.WR add BYTE PTR [rbx+0x0],r10b
   14000658e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140006593:	add    BYTE PTR [rbx+0x0],dl
   140006596:	add    BYTE PTR [rax],al
   140006598:	add    BYTE PTR [rax],r8b
   14000659b:	add    BYTE PTR [rdx+0x0],al
   14000659e:	add    BYTE PTR [rax],al
   1400065a0:	push   rsi
   1400065a1:	add    BYTE PTR [rcx+0x0],ah
   1400065a4:	ins    BYTE PTR es:[rdi],dx
   1400065a5:	add    BYTE PTR [rax],al
   1400065a7:	add    BYTE PTR [rsi+0x0],al
   1400065aa:	outs   dx,DWORD PTR ds:[rsi]
   1400065ab:	add    BYTE PTR [rdx+0x0],dh
   1400065ae:	movsxd eax,DWORD PTR [rax]
   1400065b0:	add    BYTE PTR gs:[rdx+0x0],dl
   1400065b4:	add    BYTE PTR gs:[rbp+0x0],ch
   1400065b8:	outs   dx,DWORD PTR ds:[rsi]
   1400065b9:	add    BYTE PTR [rsi+0x0],dh
   1400065bc:	add    BYTE PTR gs:[rax],al
   1400065bf:	add    BYTE PTR [rsi+0x0],cl
   1400065c2:	outs   dx,DWORD PTR ds:[rsi]
   1400065c3:	add    BYTE PTR [rdx+0x0],dl
   1400065c6:	add    BYTE PTR gs:[rbp+0x0],ch
   1400065ca:	outs   dx,DWORD PTR ds:[rsi]
   1400065cb:	add    BYTE PTR [rsi+0x0],dh
   1400065ce:	add    BYTE PTR gs:[rax],al
   1400065d1:	add    BYTE PTR [rax],al
   1400065d3:	add    BYTE PTR [rax],al
   1400065d5:	add    BYTE PTR [rax],al
   1400065d7:	add    BYTE PTR [rax+rax*1+0x65],al
   1400065db:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400065df:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400065e3:	add    BYTE PTR [rax],al
   1400065e5:	add    BYTE PTR [rax],al
   1400065e7:	add    BYTE PTR [rax+rax*1+0x59],dl
   1400065eb:	add    BYTE PTR [rax+0x0],dl
   1400065ee:	add    BYTE PTR [r8+rax*1+0x49],r9b
   1400065f3:	add    BYTE PTR [rdx+0x0],al
   1400065f6:	add    BYTE PTR [rax],al
   1400065f8:	rex.W add BYTE PTR [rbx+0x0],cl
   1400065fc:	rex.XB add BYTE PTR [r10+0x0],dl
	...
   140006608:	rex.W add BYTE PTR [rbx+0x0],cl
   14000660c:	rex.XB add BYTE PTR [r13+0x0],dl
	...
   140006618:	rex.W add BYTE PTR [rbx+0x0],cl
   14000661c:	rex.WR add BYTE PTR [rbp+0x0],r9b
	...
   140006628:	rex.W add BYTE PTR [rbx+0x0],cl
   14000662c:	push   rbp
   14000662d:	add    BYTE PTR [rax],al
   14000662f:	add    BYTE PTR [rax+0x0],cl
   140006632:	rex.WXB add BYTE PTR [r8+0x0],dl
   140006636:	add    BYTE PTR [rax],r8b
   140006639:	add    BYTE PTR [rax],al
   14000663b:	add    BYTE PTR [rax],al
   14000663d:	add    BYTE PTR [rax],al
   14000663f:	add    BYTE PTR [rax+0x0],cl
   140006642:	rex.WXB add BYTE PTR [r8+r8*1+0x44],al
	...
   14000664f:	add    BYTE PTR [rax+0x0],cl
   140006652:	rex.WXB add BYTE PTR [r11+0x0],al
   140006656:	rex.XB add BYTE PTR [r8],al
   140006659:	add    BYTE PTR [rax],al
   14000665b:	add    BYTE PTR [rax],al
   14000665d:	add    BYTE PTR [rax],al
   14000665f:	add    BYTE PTR [rax+0x0],cl
   140006662:	rex.WXB add BYTE PTR [r13+0x0],al
   140006666:	pop    rcx
   140006667:	add    BYTE PTR [rdi+0x0],bl
   14000666a:	add    BYTE PTR [r8+r8*1+0x41],cl
   14000666f:	add    BYTE PTR [rbx+0x0],dl
   140006672:	push   rbx
   140006673:	add    BYTE PTR [rbp+0x0],al
   140006676:	push   rbx
   140006677:	add    BYTE PTR [rdi+0x0],bl
   14000667a:	push   rdx
   14000667b:	add    BYTE PTR [rdi+0x0],cl
   14000667e:	rex.WRXB add BYTE PTR [r8+r8*1+0x0],r10b
   140006683:	add    BYTE PTR [rax],al
   140006685:	add    BYTE PTR [rax],al
   140006687:	add    BYTE PTR [rax+0x0],cl
   14000668a:	rex.WXB add BYTE PTR [r13+0x0],al
   14000668e:	pop    rcx
   14000668f:	add    BYTE PTR [rdi+0x0],bl
   140006692:	rex.XB add BYTE PTR [r13+0x0],dl
   140006696:	push   rdx
   140006697:	add    BYTE PTR [rdx+0x0],dl
   14000669a:	add    BYTE PTR [r14+0x0],r9b
   14000669e:	push   rsp
   14000669f:	add    BYTE PTR [rdi+0x0],bl
   1400066a2:	push   rbp
   1400066a3:	add    BYTE PTR [rbx+0x0],dl
   1400066a6:	add    BYTE PTR [r10+0x0],r10b
   1400066aa:	add    BYTE PTR [rax],al
   1400066ac:	add    BYTE PTR [rax],al
   1400066ae:	add    BYTE PTR [rax],al
   1400066b0:	rex.W add BYTE PTR [rbx+0x0],cl
   1400066b4:	add    BYTE PTR [r9+0x0],r11b
   1400066b8:	pop    rdi
   1400066b9:	add    BYTE PTR [rax+rax*1+0x4f],cl
   1400066bd:	add    BYTE PTR [rbx+0x0],al
   1400066c0:	add    BYTE PTR [r8+rax*1+0x5f],cl
   1400066c5:	add    BYTE PTR [rbp+0x0],cl
   1400066c8:	add    BYTE PTR [r11+0x0],al
   1400066cc:	rex.W add BYTE PTR [rcx+0x0],cl
   1400066d0:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   1400066d4:	add    BYTE PTR [rax],al
   1400066d6:	add    BYTE PTR [rax],al
   1400066d8:	rex.W add BYTE PTR [rbx+0x0],cl
   1400066dc:	add    BYTE PTR [r9+0x0],r11b
   1400066e0:	pop    rdi
   1400066e1:	add    BYTE PTR [rbp+0x0],dl
   1400066e4:	push   rbx
   1400066e5:	add    BYTE PTR [rbp+0x0],al
   1400066e8:	push   rdx
   1400066e9:	add    BYTE PTR [rbx+0x0],dl
   1400066ec:	add    BYTE PTR [rax],al
   1400066ee:	add    BYTE PTR [rax],al
   1400066f0:	rex.W add BYTE PTR [rbx+0x0],cl
   1400066f4:	add    BYTE PTR [r9+0x0],r11b
   1400066f8:	pop    rdi
   1400066f9:	add    BYTE PTR [rax+0x0],dl
   1400066fc:	add    BYTE PTR [r10+0x0],r10b
   140006700:	rex.RX add BYTE PTR [rdi+0x0],r9b
   140006704:	push   rdx
   140006705:	add    BYTE PTR [rbp+0x0],cl
   140006708:	add    BYTE PTR [r14+0x0],cl
   14000670c:	rex.XB add BYTE PTR [r13+0x0],al
   140006710:	pop    rdi
   140006711:	add    BYTE PTR [rax+rax*1+0x41],al
   140006715:	add    BYTE PTR [rax+rax*1+0x41],dl
   140006719:	add    BYTE PTR [rax],al
   14000671b:	add    BYTE PTR [rax],al
   14000671d:	add    BYTE PTR [rax],al
   14000671f:	add    BYTE PTR [rax+0x0],cl
   140006722:	rex.WXB add BYTE PTR [r13+0x0],al
   140006726:	pop    rcx
   140006727:	add    BYTE PTR [rdi+0x0],bl
   14000672a:	add    BYTE PTR [rcx+0x0],r11b
   14000672e:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   140006732:	add    BYTE PTR [rcx+0x0],r8b
   140006736:	push   rsp
   140006737:	add    BYTE PTR [rcx+0x0],al
   14000673a:	add    BYTE PTR [rax],al
   14000673c:	add    BYTE PTR [rax],al
   14000673e:	add    BYTE PTR [rax],al
   140006740:	rex.W add BYTE PTR [rbx+0x0],cl
   140006744:	add    BYTE PTR [r9+0x0],r11b
   140006748:	pop    rdi
   140006749:	add    BYTE PTR [rbx+0x0],al
   14000674c:	push   rbp
   14000674d:	add    BYTE PTR [rdx+0x0],dl
   140006750:	push   rdx
   140006751:	add    BYTE PTR [rbp+0x0],al
   140006754:	rex.WRX add BYTE PTR [rax+r8*1+0x5f],r10b
   140006759:	add    BYTE PTR [rbx+0x0],al
   14000675c:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140006760:	rex.RX add BYTE PTR [rcx+0x0],r9b
   140006764:	rex.RXB add BYTE PTR [r8],r8b
   140006767:	add    BYTE PTR [rbp+0x0],cl
   14000676a:	outs   dx,DWORD PTR ds:[rsi]
   14000676b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000676f:	add    BYTE PTR [rax+rax*1+0x65],ch
   140006773:	add    BYTE PTR [rax],al
   140006775:	add    BYTE PTR [rax],al
   140006777:	add    BYTE PTR [rdx],ah
   140006779:	add    BYTE PTR [rax],al
   14000677b:	add    BYTE PTR [rax],al
   14000677d:	add    BYTE PTR [rax],al
   14000677f:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140006783:	add    BYTE PTR [rbx+0x0],ah
   140006786:	(bad)  
   140006787:	add    BYTE PTR [rax+rax*1+0x53],ch
   14000678b:	add    BYTE PTR [rbp+0x0],ah
   14000678e:	jb     0x140006790
   140006790:	jbe    0x140006792
   140006792:	add    BYTE PTR gs:[rdx+0x0],dh
   140006796:	xor    eax,DWORD PTR [rax]
   140006798:	xor    al,BYTE PTR [rax]
   14000679a:	add    BYTE PTR [rax],al
   14000679c:	add    BYTE PTR [rax],al
   14000679e:	add    BYTE PTR [rax],al
   1400067a0:	push   rdx
   1400067a1:	add    BYTE PTR [rbp+0x0],al
   1400067a4:	rex.RXB add BYTE PTR [r9+0x0],r9b
   1400067a8:	push   rbx
   1400067a9:	add    BYTE PTR [rax+rax*1+0x52],dl
   1400067ad:	add    BYTE PTR [rcx+0x0],bl
	...
   1400067b8:	add    BYTE PTR cs:[rax+rax*1+0x6c],dh
   1400067bd:	add    BYTE PTR [rdx+0x0],ah
	...
   1400067c8:	outs   dx,DWORD PTR ds:[rsi]
   1400067c9:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400067cd:	add    BYTE PTR [rcx+0x0],ah
   1400067d0:	jne    0x1400067d2
   1400067d2:	je     0x1400067d4
   1400067d4:	xor    eax,DWORD PTR [rax]
   1400067d6:	xor    al,BYTE PTR [rax]
   1400067d8:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   1400067dd:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400067e1:	add    BYTE PTR [rax],al
   1400067e3:	add    BYTE PTR [rax],al
   1400067e5:	add    BYTE PTR [rax],al
   1400067e7:	add    BYTE PTR [rbp+0x6e],dl
   1400067ea:	push   rdx
   1400067eb:	imul   esi,DWORD PTR gs:[ebx+0x74],0x79547265
   1400067f4:	jo     0x14000685b
   1400067f6:	imul   r12,QWORD PTR [rdx+0x0],0x0
   1400067fe:	add    BYTE PTR [rax],al
   140006800:	add    BYTE PTR [r8+0x0],sil
   140006804:	jo     0x140006806
   140006806:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000680b:	add    BYTE PTR [rip+0x2f00],ch        # 0x140009711
   140006811:	add    BYTE PTR [rax],al
   140006813:	add    BYTE PTR [rax],al
   140006815:	add    BYTE PTR [rax],al
   140006817:	add    BYTE PTR [rbp+0x0],dl
   14000681a:	outs   dx,BYTE PTR ds:[rsi]
   14000681b:	add    BYTE PTR [rdx+0x0],dh
   14000681e:	add    BYTE PTR gs:[rdi+0x0],ah
   140006822:	push   rbx
   140006823:	add    BYTE PTR [rbp+0x0],ah
   140006826:	jb     0x140006828
   140006828:	jbe    0x14000682a
   14000682a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000682e:	add    BYTE PTR [rax],al
   140006830:	push   rdx
   140006831:	add    BYTE PTR [rbp+0x0],ah
   140006834:	add    BYTE PTR [ebx+0x0],dl
   140006838:	add    BYTE PTR gs:[rdx+0x0],dh
   14000683c:	jbe    0x14000683e
   14000683e:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   14000684e:	add    BYTE PTR [rax],al
   140006850:	jnp    0x140006852
   140006852:	xor    al,0x0
   140006854:	rex.RX add BYTE PTR [rax],r14b
   140006857:	add    BYTE PTR [rcx+0x0],al
   14000685a:	rex.XB add BYTE PTR [r9],sil
   14000685d:	add    BYTE PTR [rip+0x2d003900],dh        # 0x16d00a163
   140006863:	add    BYTE PTR [rip+0x30003800],dh        # 0x17000a069
   140006869:	add    BYTE PTR [rax+rax*1],dh
   14000686c:	sub    eax,0x61003400
   140006871:	add    BYTE PTR [rcx+0x0],ah
   140006874:	(bad)  
   140006875:	add    BYTE PTR [rip+0x45004100],ch        # 0x18500a97b
   14000687b:	add    BYTE PTR [rcx],bh
   14000687d:	add    BYTE PTR [rcx],dh
   14000687f:	add    BYTE PTR [rip+0x31003100],ch        # 0x171009985
   140006885:	add    BYTE PTR [rdi],dh
   140006887:	add    BYTE PTR [rax+rax*1+0x36],al
   14000688b:	add    BYTE PTR [rbp+0x0],al
   14000688e:	add    BYTE PTR ss:[rdi],dh
   140006891:	add    BYTE PTR [rdx+0x0],al
   140006894:	rex.X add BYTE PTR [rcx],dil
   140006897:	add    BYTE PTR [rdx+0x0],al
   14000689a:	jge    0x14000689c
   14000689c:	add    BYTE PTR [rax],al
   14000689e:	add    BYTE PTR [rax],al
   1400068a0:	loopne 0x1400068ec
   1400068a2:	add    BYTE PTR [rax+0x1],al
   1400068a5:	add    BYTE PTR [rax],al
   1400068a7:	add    BYTE PTR [rax+0x48],ah
   1400068aa:	add    BYTE PTR [rax+0x1],al
   1400068ad:	add    BYTE PTR [rax],al
   1400068af:	add    BYTE PTR [rax],dh
   1400068b1:	rex.WX add BYTE PTR [rax+0x1],al
   1400068b5:	add    BYTE PTR [rax],al
   1400068b7:	add    BYTE PTR [rax],al
   1400068b9:	rex.WXB add BYTE PTR [r8+0x1],al
   1400068bd:	add    BYTE PTR [rax],al
   1400068bf:	add    BYTE PTR [rax+0x140004b],al
   1400068c5:	add    BYTE PTR [rax],al
   1400068c7:	add    BYTE PTR [rax],dh
   1400068c9:	rex.WR add BYTE PTR [rax+0x1],r8b
   1400068cd:	add    BYTE PTR [rax],al
   1400068cf:	add    bl,dl
   1400068d1:	clc    
   1400068d2:	(bad)  
   1400068d3:	ins    DWORD PTR es:[rdi],dx
   1400068d4:	or     eax,0xbf11d473
   1400068d9:	rex.X add BYTE PTR [rax+0x568b11d0],sil
   1400068e0:	call   0x14d6df8dd
   1400068e5:	jae    0x1400068bb
   1400068e7:	adc    DWORD PTR [rdi-0x2f4fffbe],edi
   1400068ed:	adc    DWORD PTR [rbx+0x156],ecx
   1400068f3:	add    BYTE PTR [rax],al
   1400068f5:	add    BYTE PTR [rax],al
   1400068f7:	add    al,al
   1400068f9:	add    BYTE PTR [rax],al
   1400068fb:	add    BYTE PTR [rax],al
   1400068fd:	add    BYTE PTR [rax],al
   1400068ff:	rex.RX loopne 0x14000694a
   140006902:	add    BYTE PTR [rax+0x1],al
   140006905:	add    BYTE PTR [rax],al
   140006907:	add    BYTE PTR [rax+0x48],ah
   14000690a:	add    BYTE PTR [rax+0x1],al
   14000690d:	add    BYTE PTR [rax],al
   14000690f:	add    BYTE PTR [rax+0x1400048],al
   140006915:	add    BYTE PTR [rax],al
   140006917:	add    al,al
   140006919:	cmp    al,0x0
   14000691b:	rex add DWORD PTR [rax],eax
   14000691e:	add    BYTE PTR [rax],al
   140006920:	push   rax
   140006921:	cmp    eax,0x14000
   140006926:	add    BYTE PTR [rax],al
   140006928:	lock push 0x14000
	...
   140006936:	add    BYTE PTR [rax],al
   140006938:	add    DWORD PTR [rax],eax
	...
   140006956:	add    BYTE PTR [rax],al
   140006958:	shr    BYTE PTR [rax+0x0],1
   14000695b:	rex add DWORD PTR [rax],eax
	...
   140006966:	add    BYTE PTR [rax],al
   140006968:	add    DWORD PTR [rax],eax
	...
   140006986:	add    BYTE PTR [rax],al
   140006988:	mov    BYTE PTR [rbp+0x0],ah
   14000698b:	rex add DWORD PTR [rax],eax
   14000698e:	add    BYTE PTR [rax],al
   140006990:	call   0x1414069fa
   140006995:	add    BYTE PTR [rax],al
   140006997:	add    dh,dh
   140006999:	loopne 0x1400069e3
   14000699b:	(bad)  
   14000699c:	mov    bh,0x72
   14000699e:	xlat   BYTE PTR ds:[rbx]
   14000699f:	(bad)  
   1400069a0:	ja     0x14000693b
   1400069a2:	out    0x2a,eax
   1400069a4:	mov    ch,dh
   1400069a6:	mov    ch,ah
	...
   1400069b0:	clc    
   1400069b1:	add    BYTE PTR gs:[rax+0x1],al
   1400069b5:	add    BYTE PTR [rax],al
   1400069b7:	add    BYTE PTR [rax],al
   1400069b9:	add    BYTE PTR [rax],al
   1400069bb:	cmp    bh,0xff
   1400069be:	(bad)  
   1400069bf:	dec    DWORD PTR [rax]
   1400069c1:	data16 add BYTE PTR [rax+0x1],al
   1400069c5:	add    BYTE PTR [rax],al
   1400069c7:	add    BYTE PTR [rcx],al
   1400069c9:	add    BYTE PTR [rax],al
   1400069cb:	cmp    bh,0xff
   1400069ce:	(bad)  
   1400069cf:	call   FWORD PTR [rax]
   1400069d1:	data16 add BYTE PTR [rax+0x1],al
   1400069d5:	add    BYTE PTR [rax],al
   1400069d7:	add    BYTE PTR [rdx],al
   1400069d9:	add    BYTE PTR [rax],al
   1400069db:	cmp    bh,0xff
   1400069de:	(bad)  
   1400069df:	jmp    FWORD PTR [rax]
   1400069e1:	data16 add BYTE PTR [rax+0x1],al
   1400069e5:	add    BYTE PTR [rax],al
   1400069e7:	add    BYTE PTR [rbx],al
   1400069e9:	add    BYTE PTR [rax],al
   1400069eb:	cmp    bh,0xff
   1400069ee:	(bad)  
   1400069ef:	push   QWORD PTR [rax]
   1400069f1:	data16 add BYTE PTR [rax+0x1],al
   1400069f5:	add    BYTE PTR [rax],al
   1400069f7:	add    BYTE PTR [rax+rax*1],al
   1400069fa:	add    BYTE PTR [rax-0x1],al
   140006a00:	rex
   140006a01:	data16 add BYTE PTR [rax+0x1],al
   140006a05:	add    BYTE PTR [rax],al
   140006a07:	add    BYTE PTR [rsi],al
   140006a09:	add    BYTE PTR [rax],al
   140006a0b:	cmp    bh,0xff
   140006a0e:	(bad)  
   140006a0f:	call   QWORD PTR [rax+0x66]
   140006a12:	add    BYTE PTR [rax+0x1],al
   140006a15:	add    BYTE PTR [rax],al
   140006a17:	add    BYTE PTR [rip+0xffffffffff800000],al        # 0x13f806a1d
   140006a1d:	(bad)  
   140006a1e:	(bad)  
   140006a1f:	jmp    QWORD PTR [rax+0x66]
   140006a22:	add    BYTE PTR [rax+0x1],al
   140006a25:	add    BYTE PTR [rax],al
   140006a27:	add    BYTE PTR [rax],al
   140006a29:	add    BYTE PTR [rax],al
   140006a2b:	cmp    bh,0xff
   140006a2e:	(bad)  
   140006a2f:	dec    DWORD PTR [rax+0x1400066]
   140006a35:	add    BYTE PTR [rax],al
   140006a37:	add    BYTE PTR [rcx],al
   140006a39:	add    BYTE PTR [rax],al
   140006a3b:	cmp    bh,0xff
   140006a3e:	(bad)  
   140006a3f:	push   QWORD PTR [rax+0x1400066]
   140006a45:	add    BYTE PTR [rax],al
   140006a47:	add    BYTE PTR [rdx],al
   140006a49:	add    BYTE PTR [rax],al
   140006a4b:	cmp    bh,0xff
   140006a4e:	(bad)  
   140006a4f:	(bad)  
   140006a50:	fsub   DWORD PTR [rsi+0x0]
   140006a53:	rex add DWORD PTR [rax],eax
   140006a56:	add    BYTE PTR [rax],al
   140006a58:	add    eax,DWORD PTR [rax]
   140006a5a:	add    BYTE PTR [rax-0x1],al
   140006a60:	lock data16 add BYTE PTR [rax+0x1],al
   140006a65:	add    BYTE PTR [rax],al
   140006a67:	add    BYTE PTR [rax+rax*1],al
   140006a6a:	add    BYTE PTR [rax-0x1],al
   140006a70:	and    BYTE PTR [rdi+0x0],ah
   140006a73:	rex add DWORD PTR [rax],eax
   140006a76:	add    BYTE PTR [rax],al
   140006a78:	(bad)  
   140006a79:	add    BYTE PTR [rax],al
   140006a7b:	cmp    bh,0xff
   140006a7e:	(bad)  
   140006a7f:	inc    DWORD PTR [rax+0x67]
   140006a82:	add    BYTE PTR [rax+0x1],al
   140006a85:	add    BYTE PTR [rax],al
   140006a87:	add    BYTE PTR [rip+0xffffffffff800000],al        # 0x13f806a8d
   140006a8d:	(bad)  
   140006a8e:	(bad)  
   140006a8f:	call   QWORD PTR [rdx]
   140006a91:	loopne 0x140006a95
   140006a93:	add    BYTE PTR [rax],al
   140006a95:	add    BYTE PTR [rax],al
   140006a97:	add    al,al
   140006a99:	add    BYTE PTR [rax],al
   140006a9b:	add    BYTE PTR [rax],al
   140006a9d:	add    BYTE PTR [rax],al
   140006a9f:	rex.RX add BYTE PTR [rax],r8b
   140006aa2:	add    BYTE PTR [rax],al
   140006aa4:	add    BYTE PTR [rax],al
   140006aa6:	add    BYTE PTR [rax],al
   140006aa8:	rol    BYTE PTR [rax],0x0
   140006aab:	add    BYTE PTR [rax],al
   140006aad:	add    BYTE PTR [rax],al
   140006aaf:	rex.RX add eax,0x2e0
   140006ab5:	add    BYTE PTR [rax],al
   140006ab7:	add    al,al
   140006ab9:	add    BYTE PTR [rax],al
   140006abb:	add    BYTE PTR [rax],al
   140006abd:	add    BYTE PTR [rax],al
   140006abf:	rex.RX cmp r9d,DWORD PTR [rdx+0x67406726]
   140006ac6:	mul    BYTE PTR [rcx]
   140006ac8:	fst    DWORD PTR [rdx+rsi*4+0x7c]
   140006acc:	ins    DWORD PTR es:[rdi],dx
   140006acd:	pop    rdi
   140006ace:	enter  0x34,0x0
	...
   140006ae2:	add    BYTE PTR [rax],al
   140006ae4:	(bad)  
   140006ae5:	xchg   esi,eax
   140006ae6:	iret   
   140006ae7:	push   rdi
   140006ae8:	add    BYTE PTR [rax],al
   140006aea:	add    BYTE PTR [rax],al
   140006aec:	add    al,BYTE PTR [rax]
   140006aee:	add    BYTE PTR [rax],al
   140006af0:	and    eax,0xe0000000
   140006af5:	imul   eax,DWORD PTR [rax],0x0
   140006af8:	loopne 0x140006b57
   140006afa:	add    BYTE PTR [rax],al
   140006afc:	add    BYTE PTR [rax],al
   140006afe:	add    BYTE PTR [rax],al
   140006b00:	(bad)  
   140006b01:	xchg   esi,eax
   140006b02:	iret   
   140006b03:	push   rdi
   140006b04:	add    BYTE PTR [rax],al
   140006b06:	add    BYTE PTR [rax],al
   140006b08:	or     eax,0x58000000
   140006b0d:	add    al,BYTE PTR [rax]
   140006b0f:	add    BYTE PTR [rsp+rbp*2],bl
   140006b12:	add    BYTE PTR [rax],al
   140006b14:	sbb    al,0x5e
	...
   140006b3e:	add    BYTE PTR [rax],al
   140006b40:	movabs al,ds:0x0
	...
   140006b95:	add    BYTE PTR [rax],al
   140006b97:	add    BYTE PTR [rax],cl
   140006b99:	nop
   140006b9a:	add    BYTE PTR [rax+0x1],al
	...
   140006bad:	add    BYTE PTR [rax],al
   140006baf:	add    BYTE PTR [rax+0x1400063],dh
   140006bb5:	add    BYTE PTR [rax],al
   140006bb7:	add    BYTE PTR [rax+0x1400063],bh
   140006bbd:	add    BYTE PTR [rax],al
   140006bbf:	add    al,bh
   140006bc1:	movsxd eax,DWORD PTR [rax]
   140006bc3:	rex add DWORD PTR [rax],eax
   140006bc6:	add    BYTE PTR [rax],al
   140006bc8:	add    BYTE PTR es:[rax],al
   140006bcb:	add    BYTE PTR [rax],al
   140006bcd:	add    BYTE PTR [rax],al
   140006bcf:	add    BYTE PTR [rax],al
   140006bd1:	xor    eax,0x0
	...
   140006bde:	add    BYTE PTR [rax],al
   140006be0:	push   rdx
   140006be1:	push   rbx
   140006be2:	rex.R push rbx
   140006be4:	fwait
   140006be5:	add    al,0xe7
   140006be7:	scas   al,BYTE PTR es:[rdi]
   140006be8:	(bad)  
   140006be9:	jp     0x140006bc1
   140006beb:	rex.RXB lods eax,DWORD PTR ds:[rsi]
   140006bed:	rex.WX and rsp,0xffffffffffffffd8
   140006bf1:	mov    ch,BYTE PTR [rax]
   140006bf3:	jnp    0x140006bf6
   140006bf5:	add    BYTE PTR [rax],al
   140006bf7:	add    BYTE PTR [rbp+0x70],dh
   140006bfa:	outs   dx,BYTE PTR ds:[rsi]
   140006bfb:	jo     0x140006c60
   140006bfd:	outs   dx,DWORD PTR ds:[rsi]
   140006bfe:	outs   dx,BYTE PTR ds:[rsi]
   140006bff:	je     0x140006c2f
   140006c01:	jo     0x140006c67
   140006c03:	(bad)  
	...
   140006c1c:	rex.RXB
   140006c1d:	rex.XB push r12
   140006c1f:	rex.WR add BYTE PTR [rax],r10b
   140006c22:	add    BYTE PTR [rax],al
   140006c24:	(bad)  
   140006c25:	rex.WXB add BYTE PTR [r8],al
   140006c28:	cs je  0x140006c90
   140006c2b:	js     0x140006ca1
   140006c2d:	and    al,0x6d
   140006c2f:	outs   dx,BYTE PTR ds:[rsi]
   140006c30:	add    BYTE PTR [rax],al
   140006c32:	add    BYTE PTR [rax],al
   140006c34:	loopne 0x140006c91
   140006c36:	add    BYTE PTR [rax],al
   140006c38:	jge    0x140006c3a
   140006c3a:	add    BYTE PTR [rax],al
   140006c3c:	cs je  0x140006ca4
   140006c3f:	js     0x140006cb5
   140006c41:	and    al,0x6d
   140006c43:	outs   dx,BYTE PTR ds:[rsi]
   140006c44:	and    al,0x30
   140006c46:	xor    BYTE PTR [rax],al
   140006c48:	(bad)  
   140006c49:	pop    rsp
   140006c4a:	add    BYTE PTR [rax],al
   140006c4c:	loopne 0x140006c4e
   140006c4e:	add    BYTE PTR [rax],al
   140006c50:	cs je  0x140006cb8
   140006c53:	js     0x140006cc9
   140006c55:	and    al,0x78
   140006c57:	add    BYTE PTR [rax],al
   140006c59:	(bad)  
   140006c5a:	add    BYTE PTR [rax],al
   140006c5c:	mov    al,0x3
   140006c5e:	add    BYTE PTR [rax],al
   140006c60:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140006c69:	add    BYTE PTR [rax],al
   140006c6b:	add    BYTE PTR [rax+0x10000063],dh
   140006c71:	add    BYTE PTR [rax],al
   140006c73:	add    BYTE PTR [rsi],ch
   140006c75:	xor    BYTE PTR [rax],dh
   140006c77:	movsxd esp,DWORD PTR [rsi+0x67]
   140006c7a:	add    BYTE PTR [rax],al
   140006c7c:	shl    BYTE PTR [rbx+0x0],0x0
   140006c80:	or     BYTE PTR [rax],al
   140006c82:	add    BYTE PTR [rax],al
   140006c84:	cs rex.XB push r10
   140006c87:	push   rsp
   140006c88:	and    al,0x58
   140006c8a:	rex.XB
   140006c8b:	add    BYTE PTR [r8],al
   140006c8e:	add    BYTE PTR [rax],al
   140006c90:	enter  0x63,0x0
   140006c94:	or     BYTE PTR [rax],al
   140006c96:	add    BYTE PTR [rax],al
   140006c98:	cs rex.XB push r10
   140006c9b:	push   rsp
   140006c9c:	and    al,0x58
   140006c9e:	rex.XB
   140006c9f:	rex.B
   140006ca0:	add    BYTE PTR [r8],al
   140006ca3:	add    al,dl
   140006ca5:	movsxd eax,DWORD PTR [rax]
   140006ca7:	add    BYTE PTR [rax],cl
   140006ca9:	add    BYTE PTR [rax],al
   140006cab:	add    BYTE PTR [rsi],ch
   140006cad:	rex.XB push r10
   140006caf:	push   rsp
   140006cb0:	and    al,0x58
   140006cb2:	rex.XB pop r10
   140006cb4:	add    BYTE PTR [rax],al
   140006cb6:	add    BYTE PTR [rax],al
   140006cb8:	fsub   DWORD PTR [rbx+0x0]
   140006cbb:	add    BYTE PTR [rax],cl
   140006cbd:	add    BYTE PTR [rax],al
   140006cbf:	add    BYTE PTR [rsi],ch
   140006cc1:	rex.XB push r10
   140006cc3:	push   rsp
   140006cc4:	and    al,0x58
   140006cc6:	rex.WB
   140006cc7:	add    BYTE PTR [r8],al
   140006cca:	add    BYTE PTR [rax],al
   140006ccc:	loopne 0x140006d31
   140006cce:	add    BYTE PTR [rax],al
   140006cd0:	or     BYTE PTR [rax],al
   140006cd2:	add    BYTE PTR [rax],al
   140006cd4:	cs rex.XB push r10
   140006cd7:	push   rsp
   140006cd8:	and    al,0x58
   140006cda:	rex.WB
   140006cdb:	rex.B
   140006cdc:	add    BYTE PTR [r8],al
   140006cdf:	add    al,ch
   140006ce1:	movsxd eax,DWORD PTR [rax]
   140006ce3:	add    BYTE PTR [rax],cl
   140006ce5:	add    BYTE PTR [rax],al
   140006ce7:	add    BYTE PTR [rsi],ch
   140006ce9:	rex.XB push r10
   140006ceb:	push   rsp
   140006cec:	and    al,0x58
   140006cee:	rex.WB pop r9
   140006cf0:	add    BYTE PTR [rax],al
   140006cf2:	add    BYTE PTR [rax],al
   140006cf4:	lock movsxd eax,DWORD PTR [rax]
   140006cf7:	add    BYTE PTR [rax],cl
   140006cf9:	add    BYTE PTR [rax],al
   140006cfb:	add    BYTE PTR [rsi],ch
   140006cfd:	rex.XB push r10
   140006cff:	push   rsp
   140006d00:	and    al,0x58
   140006d02:	rex.WB pop r10
   140006d04:	add    BYTE PTR [rax],al
   140006d06:	add    BYTE PTR [rax],al
   140006d08:	clc    
   140006d09:	movsxd eax,DWORD PTR [rax]
   140006d0b:	add    BYTE PTR [rax+0x2e000000],bl
   140006d11:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140006d19:	add    BYTE PTR [rax],al
   140006d1b:	add    BYTE PTR [rax+0x50000064],dl
   140006d21:	(bad)  
   140006d22:	add    BYTE PTR [rax],al
   140006d24:	cs jb  0x140006d8b
   140006d27:	(bad)  
   140006d28:	je     0x140006d8b
   140006d2a:	add    BYTE PTR [rax],al
   140006d2c:	loopne 0x140006d99
   140006d2e:	add    BYTE PTR [rax],al
   140006d30:	xchg   esp,eax
   140006d31:	add    al,BYTE PTR [rax]
   140006d33:	add    BYTE PTR [rsi],ch
   140006d35:	jb     0x140006d9b
   140006d37:	(bad)  
   140006d38:	je     0x140006d9b
   140006d3a:	and    al,0x7a
   140006d3c:	jp     0x140006db8
   140006d3e:	fs (bad) 
   140006d40:	add    BYTE PTR [eax],al
   140006d43:	add    BYTE PTR [rax+0x6e],bh
   140006d46:	add    BYTE PTR [rax],al
   140006d48:	push   rax
   140006d49:	add    al,0x0
   140006d4b:	add    BYTE PTR [rsi],ch
   140006d4d:	js     0x140006db3
   140006d4f:	(bad)  
   140006d50:	je     0x140006db3
   140006d52:	add    BYTE PTR [rax],al
   140006d54:	enter  0x72,0x0
   140006d58:	add    BYTE PTR [rax],al
   140006d5b:	add    BYTE PTR [rsi],ch
   140006d5d:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   140006d66:	add    BYTE PTR [rax],al
   140006d68:	or     BYTE PTR [rbx+0x0],dh
   140006d6b:	add    BYTE PTR [rax],ah
   140006d6d:	add    BYTE PTR [rax],al
   140006d6f:	add    BYTE PTR [rsi],ch
   140006d71:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   140006d7a:	add    BYTE PTR [rax],al
   140006d7c:	sub    BYTE PTR [rbx+0x0],dh
   140006d7f:	add    BYTE PTR [rax+0x0],ah
   140006d82:	add    BYTE PTR [rax],al
   140006d84:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   140006d8e:	add    BYTE PTR [rax],al
   140006d90:	mov    BYTE PTR [rbx+0x0],dh
   140006d93:	add    BYTE PTR [rax+0x0],cl
   140006d96:	add    BYTE PTR [rax],al
   140006d98:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   140006da2:	add    BYTE PTR [rax],al
   140006da4:	shl    BYTE PTR [rbx+0x0],1
   140006da7:	add    BYTE PTR [rax+0x0],ah
   140006daa:	add    BYTE PTR [rax],al
   140006dac:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   140006db6:	add    BYTE PTR [rax],al
   140006db8:	xor    BYTE PTR [rax+rax*1+0x0],dh
   140006dbc:	nop
   140006dbd:	add    DWORD PTR [rax],eax
   140006dbf:	add    BYTE PTR [rsi],ch
   140006dc1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140006dc9:	add    BYTE PTR [rax],al
   140006dcb:	add    al,al
   140006dcd:	jne    0x140006dcf
   140006dcf:	add    BYTE PTR [rax+rax*1],dl
   140006dd2:	add    BYTE PTR [rax],al
   140006dd4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140006ddd:	add    BYTE PTR [rax],al
   140006ddf:	add    al,bl
   140006de1:	jne    0x140006de3
   140006de3:	add    BYTE PTR [rax+0x2e000003],dh
   140006de9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   140006df1:	add    BYTE PTR [rax],al
   140006df3:	add    BYTE PTR [rax+0x62000079],cl
   140006df9:	or     DWORD PTR [rax],eax
   140006dfb:	add    BYTE PTR [rsi],ch
   140006dfd:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   140006e05:	add    BYTE PTR [rax],al
   140006e07:	add    BYTE PTR [rax],al
   140006e09:	nop
   140006e0a:	add    BYTE PTR [rax],al
   140006e0c:	rol    BYTE PTR [rax],1
   140006e0e:	add    BYTE PTR [rax],al
   140006e10:	cs fs (bad) 
   140006e13:	je     0x140006e76
   140006e15:	add    BYTE PTR [rax],al
   140006e17:	add    al,dl
   140006e19:	nop
   140006e1a:	add    BYTE PTR [rax],al
   140006e1c:	mov    BYTE PTR [rdi],al
   140006e1e:	add    BYTE PTR [rax],al
   140006e20:	cs (bad) 
   140006e23:	jae    0x140006e25
   140006e25:	add    BYTE PTR [rax],al
   140006e27:	add    BYTE PTR [rax],al
   140006e29:	movabs al,ds:0x702e000003480000
   140006e32:	fs (bad) 
   140006e34:	je     0x140006e97
   140006e36:	add    BYTE PTR [rax],al
   140006e38:	add    BYTE PTR [rax+0x600000],dh
   140006e3e:	add    BYTE PTR [rax],al
   140006e40:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   140006e4a:	add    BYTE PTR [rax],al
   140006e4c:	add    al,al
   140006e4e:	add    BYTE PTR [rax],al
   140006e50:	in     al,0x1
   140006e52:	add    BYTE PTR [rax],al
   140006e54:	cs jb  0x140006eca
   140006e57:	jb     0x140006ebc
   140006e59:	and    al,0x30
   140006e5b:	xor    DWORD PTR [rax],eax
   140006e5d:	add    BYTE PTR [rax],al
   140006e5f:	add    al,dh
   140006e61:	rol    DWORD PTR [rax],0x0
   140006e64:	push   rax
   140006e65:	(bad)  
   140006e66:	add    BYTE PTR [rax],al
   140006e68:	cs jb  0x140006ede
   140006e6b:	jb     0x140006ed0
   140006e6d:	and    al,0x30
   140006e6f:	xor    al,BYTE PTR [rax]
   140006e71:	add    BYTE PTR [rax],al
   140006e73:	add    BYTE PTR [rax],al
   140006e75:	add    BYTE PTR [rax],al
   140006e77:	add    BYTE PTR [rcx],bl
   140006e79:	cmp    BYTE PTR ds:0x3e7427,cl
   140006e80:	and    BYTE PTR [rbp+rdi*1+0x0],ah
   140006e84:	sbb    DWORD PTR [rsp+rdi*1],esi
   140006e87:	add    BYTE PTR [rdx],dl
   140006e89:	and    ecx,DWORD PTR [rip+0x6003801]        # 0x14600a690
   140006e8f:	lock add al,0xe0
   140006e92:	add    dl,BYTE PTR [rax+0x7c]
   140006e95:	pop    rdx
   140006e96:	add    BYTE PTR [rax],al
   140006e98:	mov    al,0x1
   140006e9a:	add    BYTE PTR [rax],al
   140006e9c:	sbb    DWORD PTR [rip+0x340f2505],ebx        # 0x1740f93a7
   140006ea2:	or     BYTE PTR [rax],al
   140006ea4:	or     esp,DWORD PTR [rbx]
   140006ea6:	(bad)  
   140006ea7:	push   rdx
   140006ea8:	add    dl,BYTE PTR [rax+0x0]
   140006eab:	add    BYTE PTR [rbx+rbx*2],cl
   140006eae:	add    BYTE PTR [rax],al
   140006eb0:	add    DWORD PTR [rax],eax
   140006eb2:	add    BYTE PTR [rax],al
   140006eb4:	jmp    0x140006ec7
   140006eb6:	add    BYTE PTR [rax],al
   140006eb8:	or     al,0x12
   140006eba:	add    BYTE PTR [rax],al
   140006ebc:	pop    sp
   140006ebe:	add    BYTE PTR [rax],al
   140006ec0:	or     al,0x12
   140006ec2:	add    BYTE PTR [rax],al
   140006ec4:	and    DWORD PTR [rax],eax
   140006ec6:	add    BYTE PTR [rax],al
   140006ec8:	add    DWORD PTR [rsi],eax
   140006eca:	add    al,BYTE PTR [rax]
   140006ecc:	(bad)  
   140006ecd:	xor    al,BYTE PTR [rdx]
   140006ecf:	push   rax
   140006ed0:	or     DWORD PTR [rsi],eax
   140006ed2:	add    al,BYTE PTR [rax]
   140006ed4:	(bad)  
   140006ed5:	xor    al,BYTE PTR [rdx]
   140006ed7:	xor    BYTE PTR [rsi],dl
   140006ed9:	pop    rax
   140006eda:	add    BYTE PTR [rax],al
   140006edc:	add    DWORD PTR [rax],eax
   140006ede:	add    BYTE PTR [rax],al
   140006ee0:	cmp    al,0x12
   140006ee2:	add    BYTE PTR [rax],al
   140006ee4:	adc    r8b,BYTE PTR [rax]
   140006ee7:	add    BYTE PTR [rcx],al
   140006ee9:	add    BYTE PTR [rax],al
   140006eeb:	add    BYTE PTR [rdx+rdx*1+0x0],al
   140006eef:	add    BYTE PTR [rcx],al
   140006ef1:	(bad)  
   140006ef2:	or     BYTE PTR [rax],al
   140006ef4:	(bad)  
   140006ef5:	push   rsp
   140006ef6:	or     al,0x0
   140006ef8:	(bad)  
   140006ef9:	xor    al,0xb
   140006efb:	add    BYTE PTR [rdi],dl
   140006efd:	push   rdx
   140006efe:	adc    esp,eax
   140006f00:	adc    DWORD PTR [rax+0x10],esi
   140006f03:	(bad)  
   140006f04:	add    DWORD PTR [rdi],ecx
   140006f06:	(bad)  
   140006f07:	add    BYTE PTR [rdi],cl
   140006f09:	fs (bad) 
   140006f0b:	add    BYTE PTR [rdi],cl
   140006f0d:	xor    al,0x6
   140006f0f:	add    BYTE PTR [rdi],cl
   140006f11:	xor    cl,BYTE PTR [rbx]
   140006f13:	jo     0x140006f2e
   140006f15:	sub    BYTE PTR [rdi],al
   140006f17:	add    BYTE PTR [rdi],dl
   140006f19:	xor    al,0x56
   140006f1b:	add    BYTE PTR [rdi],dl
   140006f1d:	add    DWORD PTR [rax+0x0],edx
   140006f20:	or     BYTE PTR [rax+0x7],dh
   140006f23:	(bad)  
   140006f24:	(bad)  
   140006f25:	push   rax
   140006f26:	add    BYTE PTR [rax],al
   140006f28:	jl     0x140006f84
   140006f2a:	add    BYTE PTR [rax],al
   140006f2c:	jo     0x140006f30
   140006f2e:	add    BYTE PTR [rax],al
   140006f30:	add    DWORD PTR [rsp+rcx*1],ebx
   140006f33:	add    BYTE PTR [rsp+riz*2],bl
   140006f36:	or     al,0x0
   140006f38:	sbb    al,0x54
   140006f3a:	or     eax,DWORD PTR [rax]
   140006f3c:	sbb    al,0x34
   140006f3e:	or     al,BYTE PTR [rax]
   140006f40:	sbb    al,0x32
   140006f42:	sbb    al,dh
   140006f44:	(bad)  
   140006f45:	loopne 0x140006f5b
   140006f47:	rcl    BYTE PTR [rdx],1
   140006f49:	rcl    BYTE PTR [rax],0x70
   140006f4c:	sbb    DWORD PTR [rip+0x741f350d],ebp        # 0x1b41fa45f
   140006f52:	adc    al,BYTE PTR [rax]
   140006f54:	sbb    esp,DWORD PTR [rcx+rdx*1+0x0]
   140006f58:	(bad)  
   140006f59:	xor    al,0x10
   140006f5b:	add    BYTE PTR [rbx],dl
   140006f5d:	xor    ecx,DWORD PTR [rsi]
   140006f5f:	xchg   edx,eax
   140006f60:	or     dh,al
   140006f62:	or     al,ah
   140006f64:	(bad)  
   140006f65:	rol    BYTE PTR [rax+rax*8],1
   140006f68:	add    dl,BYTE PTR [rax+0x0]
   140006f6b:	add    BYTE PTR [rdx+rbx*2+0x0],bh
   140006f6f:	add    BYTE PTR [rax+0x0],al
   140006f72:	add    BYTE PTR [rax],al
   140006f74:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41d6f86
   140006f7a:	or     eax,DWORD PTR [rax]
   140006f7c:	sbb    eax,0x1d000a64
   140006f81:	push   rsp
   140006f82:	or     DWORD PTR [rax],eax
   140006f84:	sbb    eax,0x1d000834
   140006f89:	xor    bl,BYTE PTR [rcx]
   140006f8b:	lock (bad) 
   140006f8d:	loopne 0x140006fa4
   140006f8f:	rcr    BYTE PTR [rcx],0x39
   140006f92:	or     eax,0x18742b35
   140006f97:	add    BYTE PTR [rsp+riz*2],ah
   140006f9a:	(bad)  
   140006f9b:	add    BYTE PTR [rip+0x16001634],bl        # 0x1560085d5
   140006fa1:	xor    edx,DWORD PTR [rcx]
   140006fa3:	repnz or dh,al
   140006fa6:	or     al,ah
   140006fa8:	(bad)  
   140006fa9:	rol    BYTE PTR [rax+rax*8],1
   140006fac:	add    dl,BYTE PTR [rax+0x0]
   140006faf:	add    BYTE PTR [rdx+rbx*2+0x0],bh
   140006fb3:	add    BYTE PTR [rax+0x0],dh
   140006fb6:	add    BYTE PTR [rax],al
   140006fb8:	add    DWORD PTR [rax+rcx*1],edx
   140006fbb:	add    BYTE PTR [rsp+riz*2],dl
   140006fbe:	or     BYTE PTR [rax],al
   140006fc0:	adc    al,0x54
   140006fc2:	(bad)  
   140006fc3:	add    BYTE PTR [rsp+rsi*1],dl
   140006fc6:	(bad)  
   140006fc7:	add    BYTE PTR [rdx+rsi*1],dl
   140006fca:	adc    BYTE PTR [rax+0x19],dh
   140006fcd:	sub    DWORD PTR [rbx],ecx
   140006fcf:	add    BYTE PTR [rdi],dl
   140006fd1:	xor    al,0x1b
   140006fd3:	add    BYTE PTR [rdi],dl
   140006fd5:	add    DWORD PTR [rdx],edx
   140006fd7:	add    BYTE PTR [rax],dl
   140006fd9:	lock (bad) 
   140006fdb:	loopne 0x140006fe9
   140006fdd:	ror    BYTE PTR [rdx],1
   140006fdf:	ror    BYTE PTR [rax],0x70
   140006fe2:	(bad)  
   140006fe3:	(bad)  
   140006fe4:	(bad)  
   140006fe5:	push   rax
   140006fe6:	add    BYTE PTR [rax],al
   140006fe8:	jl     0x140007044
   140006fea:	add    BYTE PTR [rax],al
   140006fec:	add    BYTE PTR [rax],0x0
   140006fef:	add    BYTE PTR [rcx],al
   140006ff1:	sbb    al,0xc
   140006ff3:	add    BYTE PTR [rsp+riz*2],bl
   140006ff6:	adc    BYTE PTR [rax],al
   140006ff8:	sbb    al,0x54
   140006ffa:	ltr    WORD PTR [rsp+rsi*1]
   140006ffe:	(bad)  
   140006fff:	add    BYTE PTR [rdx+rsi*2],bl
   140007002:	sbb    al,dh
   140007004:	(bad)  
   140007005:	loopne 0x14000701b
   140007007:	rcl    BYTE PTR [rdx],1
   140007009:	rcl    BYTE PTR [rax],0x70
   14000700c:	sbb    DWORD PTR [rdx],esp
   14000700e:	(bad)  
   14000700f:	adc    DWORD PTR gs:[rbx+0xc],esp
   140007013:	add    DWORD PTR [rdi+0x0],ebx
   140007016:	add    eax,0x3600470
   14000701b:	xor    BYTE PTR [rdx],al
   14000701d:	push   rax
   14000701e:	add    BYTE PTR [rax],al
   140007020:	jl     0x14000707c
   140007022:	add    BYTE PTR [rax],al
   140007024:	loopne 0x140007028
   140007026:	add    BYTE PTR [rax],al
   140007028:	sbb    DWORD PTR [rbx],esi
   14000702a:	or     eax,DWORD PTR [rax]
   14000702c:	and    dh,BYTE PTR [rsp+rbx*8+0x0]
   140007030:	and    ah,BYTE PTR [rbx+rbx*8+0x0]
   140007034:	and    dh,BYTE PTR [rdx+rbx*8]
   140007037:	add    BYTE PTR [rdx],ah
   140007039:	add    esi,edx
   14000703b:	add    BYTE PTR [rax+rsi*8],dl
   14000703e:	adc    ah,al
   140007040:	adc    BYTE PTR [rax+0x0],dl
   140007043:	add    BYTE PTR [rdx+rbx*2+0x0],bh
   140007047:	add    BYTE PTR [rax+0x9000006],ah
   14000704d:	or     al,BYTE PTR [rax+rax*1]
   140007050:	or     dh,BYTE PTR [rsi+rax*1]
   140007053:	add    BYTE PTR [rdx],cl
   140007055:	xor    al,BYTE PTR [rsi]
   140007057:	jo     0x14000706f
   140007059:	pop    rax
   14000705a:	add    BYTE PTR [rax],al
   14000705c:	add    eax,DWORD PTR [rax]
   14000705e:	add    BYTE PTR [rax],al
   140007060:	xor    QWORD PTR [rax],r8
   140007063:	add    BYTE PTR [rdx+0x31],bl
   140007066:	add    BYTE PTR [rax],al
   140007068:	lea    ebx,[rax+rax*1+0x0]
   14000706c:	jle    0x1400070a0
   14000706e:	add    BYTE PTR [rax],al
   140007070:	pop    rdx
   140007071:	xor    DWORD PTR [rax],eax
   140007073:	add    BYTE PTR [rax+0x31],ch
   140007076:	add    BYTE PTR [rax],al
   140007078:	lods   eax,DWORD PTR ds:[rsi]
   140007079:	pop    rsp
   14000707a:	add    BYTE PTR [rax],al
   14000707c:	rex.RX xor r8b,BYTE PTR [rax]
   14000707f:	add    BYTE PTR [rax+0x31],ch
   140007082:	add    BYTE PTR [rax],al
   140007084:	jbe    0x1400070b7
   140007086:	add    BYTE PTR [rax],al
   140007088:	int    0x5c
   14000708a:	add    BYTE PTR [rax],al
   14000708c:	out    dx,eax
   14000708d:	xor    DWORD PTR [rax],eax
   14000708f:	add    BYTE PTR [rcx],bl
   140007091:	and    eax,0x3417000a
   140007096:	adc    al,0x0
   140007098:	(bad)  
   140007099:	xchg   edx,eax
   14000709a:	adc    al,dh
   14000709c:	(bad)  
   14000709d:	loopne 0x1400070ab
   14000709f:	ror    BYTE PTR [rdx],1
   1400070a1:	ror    BYTE PTR [rax],0x70
   1400070a4:	(bad)  
   1400070a5:	(bad)  
   1400070a6:	(bad)  
   1400070a7:	push   rax
   1400070a8:	jl     0x140007104
   1400070aa:	add    BYTE PTR [rax],al
   1400070ac:	rex.W add BYTE PTR [rax],al
   1400070af:	add    BYTE PTR [rcx],bl
   1400070b1:	and    DWORD PTR [rdi],eax
   1400070b3:	add    BYTE PTR [rdi],cl
   1400070b5:	xor    al,0x50
   1400070b7:	add    BYTE PTR [rdi],cl
   1400070b9:	add    DWORD PTR [rax+rax*1+0x8],ecx
   1400070bd:	jo     0x1400070c6
   1400070bf:	(bad)  
   1400070c0:	(bad)  
   1400070c1:	push   rax
   1400070c2:	add    BYTE PTR [rax],al
   1400070c4:	jl     0x140007120
   1400070c6:	add    BYTE PTR [rax],al
   1400070c8:	push   rax
   1400070c9:	add    al,BYTE PTR [rax]
   1400070cb:	add    BYTE PTR [rcx],al
   1400070cd:	adc    al,BYTE PTR [rax+rax*1]
   1400070d0:	adc    dl,BYTE PTR [rdx+0xe]
   1400070d3:	jo     0x1400070e2
   1400070d5:	(bad)  
   1400070d6:	or     al,0x30
   1400070d8:	sbb    DWORD PTR [rbx],esi
   1400070da:	or     eax,DWORD PTR [rax]
   1400070dc:	and    dh,ah
   1400070de:	push   rbx
   1400070df:	add    BYTE PTR [rdx],ah
   1400070e1:	in     al,0x52
   1400070e3:	add    BYTE PTR [rdx],ah
   1400070e5:	fs push rcx
   1400070e7:	add    BYTE PTR [rdx],ah
   1400070e9:	xor    al,0x50
   1400070eb:	add    BYTE PTR [rdx],ah
   1400070ed:	add    DWORD PTR [rsi+0x0],ecx
   1400070f0:	adc    al,0x50
   1400070f2:	add    BYTE PTR [rax],al
   1400070f4:	jl     0x140007150
   1400070f6:	add    BYTE PTR [rax],al
   1400070f8:	(bad)  
   1400070f9:	add    al,BYTE PTR [rax]
   1400070fb:	add    BYTE PTR [rcx],al
   1400070fd:	adc    al,0x8
   1400070ff:	add    BYTE PTR [rsp+riz*2],dl
   140007102:	(bad)  
   140007103:	add    BYTE PTR [rsp+rdx*2],dl
   140007106:	or     eax,0xc341400
   14000710b:	add    BYTE PTR [rdx+rdx*4],dl
   14000710e:	adc    BYTE PTR [rax+0x1],dh
   140007111:	(bad)  
   140007112:	add    al,BYTE PTR [rax]
   140007114:	(bad)  
   140007115:	xor    al,BYTE PTR [rdx]
   140007117:	xor    BYTE PTR [rcx],al
   140007119:	add    al,0x1
   14000711b:	add    BYTE PTR [rdx+rax*2],al
   14000711e:	add    BYTE PTR [rax],al
   140007120:	add    DWORD PTR [rbx],ecx
   140007122:	add    DWORD PTR [rax],eax
   140007124:	or     eax,DWORD PTR [rdx+0x33190000]
   14000712a:	or     eax,DWORD PTR [rax]
   14000712c:	and    ah,ah
   14000712e:	fwait
   14000712f:	add    BYTE PTR [rdx],ah
   140007131:	je     0x1400070cd
   140007133:	add    BYTE PTR [rdx],ah
   140007135:	fs cdq 
   140007137:	add    BYTE PTR [rdx],ah
   140007139:	xor    al,0x98
   14000713b:	add    BYTE PTR [rdx],ah
   14000713d:	add    DWORD PTR [rsi+0x501400],edx
   140007143:	add    BYTE PTR [rdx+rbx*2+0x0],bh
   140007147:	add    BYTE PTR [rax+0x19000004],ah
   14000714d:	sub    eax,DWORD PTR [rdi]
   14000714f:	add    BYTE PTR [rdx],bl
   140007151:	je     0x1400070e6
   140007153:	add    BYTE PTR [rdx],bl
   140007155:	xor    al,0x92
   140007157:	add    BYTE PTR [rdx],bl
   140007159:	add    DWORD PTR [rax+0x500b00],edx
   14000715f:	add    BYTE PTR [rdx+rbx*2+0x0],bh
   140007163:	add    BYTE PTR [rax+0x4],dh
   140007166:	add    BYTE PTR [rax],al
   140007168:	sbb    DWORD PTR [rcx],esp
   14000716a:	or     BYTE PTR [rax],al
   14000716c:	adc    dl,BYTE PTR [rbp+rcx*1+0x0]
   140007170:	adc    dh,BYTE PTR [rbx+rcx*1]
   140007173:	add    BYTE PTR [rdx],dl
   140007175:	push   rdx
   140007176:	(bad)  
   140007177:	loopne 0x140007185
   140007179:	jo     0x140007186
   14000717b:	(bad)  
   14000717c:	jl     0x1400071d8
   14000717e:	add    BYTE PTR [rax],al
   140007180:	sub    BYTE PTR [rax],al
   140007182:	add    BYTE PTR [rax],al
   140007184:	add    DWORD PTR [rbx+rcx*1],ebx
   140007187:	add    BYTE PTR [rsp+rsi*2],bl
   14000718a:	(bad)  
   14000718b:	add    BYTE PTR [rsp+riz*2],bl
   14000718e:	(bad)  
   14000718f:	add    BYTE PTR [rsp+rdx*2],bl
   140007192:	adc    eax,0x14341c00
   140007197:	add    BYTE PTR [rcx+rax*1],bl
   14000719a:	adc    al,BYTE PTR [rax]
   14000719c:	adc    eax,0x10000f0
   1400071a1:	or     al,BYTE PTR [rax+rax*1]
   1400071a4:	or     dh,BYTE PTR [rsi+rax*1]
   1400071a7:	add    BYTE PTR [rdx],cl
   1400071a9:	xor    al,BYTE PTR [rsi]
   1400071ab:	jo     0x1400071ae
   1400071ad:	sbb    al,0xc
   1400071af:	add    BYTE PTR [rsp+riz*2],bl
   1400071b2:	or     eax,0xc541c00
   1400071b7:	add    BYTE PTR [rsp+rsi*1],bl
   1400071ba:	or     eax,DWORD PTR [rax]
   1400071bc:	sbb    al,0x32
   1400071be:	sbb    al,dh
   1400071c0:	(bad)  
   1400071c1:	loopne 0x1400071d7
   1400071c3:	rcl    BYTE PTR [rdx],1
   1400071c5:	rcl    BYTE PTR [rax],0x70
   1400071c8:	add    DWORD PTR [rdx],ecx
   1400071ca:	add    al,0x0
   1400071cc:	or     dh,BYTE PTR [rdi+rax*1]
   1400071cf:	add    BYTE PTR [rdx],cl
   1400071d1:	xor    al,BYTE PTR [rsi]
   1400071d3:	jo     0x1400071d6
   1400071d5:	(bad)  
   1400071d6:	add    al,BYTE PTR [rax]
   1400071d8:	(bad)  
   1400071d9:	push   rdx
   1400071da:	add    dh,BYTE PTR [rax]
   1400071dc:	add    DWORD PTR [rdx],ecx
   1400071de:	add    al,0x0
   1400071e0:	or     dh,BYTE PTR [rax+rcx*1]
   1400071e3:	add    BYTE PTR [rdx],cl
   1400071e5:	push   rdx
   1400071e6:	(bad)  
   1400071e7:	jo     0x1400071ea
   1400071e9:	add    al,0x1
   1400071eb:	add    BYTE PTR [rdx+riz*2],al
   1400071ee:	add    BYTE PTR [rax],al
   1400071f0:	or     DWORD PTR [rbx+rcx*1],ebx
   1400071f3:	add    BYTE PTR [rsp+rsi*2],bl
   1400071f6:	sbb    al,0x0
   1400071f8:	sbb    al,0x64
   1400071fa:	sbb    eax,DWORD PTR [rax]
   1400071fc:	sbb    al,0x34
   1400071fe:	sbb    al,BYTE PTR [rax]
   140007200:	sbb    al,0x1
   140007202:	(bad)  
   140007203:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e085f9
   140007209:	rol    BYTE PTR [rax],0x0
   14000720c:	(bad)  
   14000720d:	pop    rax
   14000720e:	add    BYTE PTR [rax],al
   140007210:	add    DWORD PTR [rax],eax
   140007212:	add    BYTE PTR [rax],al
   140007214:	movabs al,ds:0xf30000519600004f
   14000721d:	pop    rsp
   14000721e:	add    BYTE PTR [rax],al
   140007220:	xchg   esi,eax
   140007221:	push   rcx
   140007222:	add    BYTE PTR [rax],al
   140007224:	add    BYTE PTR [rax],al
   140007226:	add    BYTE PTR [rax],al
   140007228:	add    DWORD PTR [rax],eax
   14000722a:	add    BYTE PTR [rax],al
   14000722c:	add    DWORD PTR [rcx+rax*1],eax
   14000722f:	add    BYTE PTR [rdx+riz*8],al
   140007232:	add    BYTE PTR [rax],al
   140007234:	add    DWORD PTR [rdx+rax*1],ecx
   140007237:	add    BYTE PTR [rcx+rax*1],cl
   14000723a:	adc    DWORD PTR [rax],eax
   14000723c:	or     DWORD PTR [rcx+rax*1],eax
   14000723f:	add    BYTE PTR [rdx+riz*1],al
   140007242:	add    BYTE PTR [rax],al
   140007244:	(bad)  
   140007245:	pop    rax
   140007246:	add    BYTE PTR [rax],al
   140007248:	add    DWORD PTR [rax],eax
   14000724a:	add    BYTE PTR [rax],al
   14000724c:	lods   al,BYTE PTR ds:[rsi]
   14000724d:	push   rbp
   14000724e:	add    BYTE PTR [rax],al
   140007250:	loop   0x1400072a7
   140007252:	add    BYTE PTR [rax],al
   140007254:	add    DWORD PTR [rax],eax
   140007256:	add    BYTE PTR [rax],al
   140007258:	loop   0x1400072af
   14000725a:	add    BYTE PTR [rax],al
   14000725c:	or     DWORD PTR [rdx],ecx
   14000725e:	add    al,0x0
   140007260:	or     dh,BYTE PTR [rsi+rax*1]
   140007263:	add    BYTE PTR [rdx],cl
   140007265:	xor    al,BYTE PTR [rsi]
   140007267:	jo     0x14000727f
   140007269:	pop    rax
   14000726a:	add    BYTE PTR [rax],al
   14000726c:	add    DWORD PTR [rax],eax
   14000726e:	add    BYTE PTR [rax],al
   140007270:	lods   eax,DWORD PTR ds:[rsi]
   140007271:	push   rsi
   140007272:	add    BYTE PTR [rax],al
   140007274:	loopne 0x1400072cc
   140007276:	add    BYTE PTR [rax],al
   140007278:	and    BYTE PTR [rbp+0x0],bl
   14000727b:	add    al,ah
   14000727d:	push   rsi
   14000727e:	add    BYTE PTR [rax],al
   140007280:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d728a
   140007286:	or     DWORD PTR [rax],eax
   140007288:	or     eax,0x500632
   14000728d:	add    BYTE PTR [rax],al
   14000728f:	add    BYTE PTR [rcx],al
   140007291:	add    BYTE PTR [rax],al
   140007293:	add    BYTE PTR [rcx],al
   140007295:	sbb    BYTE PTR [rcx],al
   140007297:	add    BYTE PTR [rax],bl
   140007299:	ret    0x0
   14000729c:	add    DWORD PTR [rax],ebx
   14000729e:	add    DWORD PTR [rax],eax
   1400072a0:	sbb    dl,al
   1400072a2:	add    BYTE PTR [rax],al
   1400072a4:	add    DWORD PTR [rcx],ebx
   1400072a6:	or     al,BYTE PTR [rax]
   1400072a8:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   1400072ac:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   1400072b0:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400072b4:	sbb    DWORD PTR [rsi+rax*1],esi
   1400072b7:	add    BYTE PTR [rcx],bl
   1400072b9:	xor    dl,BYTE PTR [rip+0xe0]        # 0x14000739f
   1400072bf:	add    BYTE PTR [rcx],al
   1400072c1:	add    al,0x1
   1400072c3:	add    BYTE PTR [rdx+rdx*1],al
   1400072c6:	add    BYTE PTR [rax],al
   1400072c8:	add    DWORD PTR [rax],eax
   1400072ca:	add    BYTE PTR [rax],al
   1400072cc:	movabs al,ds:0x9680000064
   1400072d5:	mov    al,0x0
   1400072d7:	add    BYTE PTR [rax],ch
   1400072d9:	jae    0x1400072db
   1400072db:	add    al,dl
   1400072dd:	jae    0x1400072df
	...
   1400072e7:	add    BYTE PTR [rcx],al
   1400072e9:	add    BYTE PTR [rax],al
   1400072eb:	add    BYTE PTR [rax-0x77ffff9c],dh
   1400072f1:	xchg   esi,eax
   1400072f2:	add    BYTE PTR [rax],al
   1400072f4:	cmp    BYTE PTR [rax+0x73600000],dh
   1400072fa:	add    BYTE PTR [rax],al
   1400072fc:	or     BYTE PTR [rax+rax*1+0x0],dh
	...
   140007328:	add    al,BYTE PTR [rax]
   14000732a:	add    BYTE PTR [rax],al
   14000732c:	add    BYTE PTR [rax],al
   14000732e:	add    BYTE PTR [rax+0x7],al
   140007334:	add    BYTE PTR [rax],al
   140007336:	add    BYTE PTR [rax+0xa1],al
   14000733c:	add    BYTE PTR [rax],al
   14000733e:	add    BYTE PTR [rax+0x115],al
   140007344:	add    BYTE PTR [rax],al
   140007346:	add    BYTE PTR [rax+0xa3],al
   14000734c:	add    BYTE PTR [rax],al
   14000734e:	add    BYTE PTR [rax+0x6],al
   140007354:	add    BYTE PTR [rax],al
   140007356:	add    BYTE PTR [rax+0x0],al
   14000735c:	add    BYTE PTR [rax],al
   14000735e:	add    BYTE PTR [rax],al
   140007360:	pushf  
   140007361:	jae    0x140007363
   140007363:	add    BYTE PTR [rax],al
   140007365:	add    BYTE PTR [rax],al
   140007367:	add    BYTE PTR [rdx+0x73],dh
   14000736d:	add    BYTE PTR [rax],al
   14000736f:	add    al,al
   140007371:	jae    0x140007373
   140007373:	add    BYTE PTR [rax],al
   140007375:	add    BYTE PTR [rax],al
   140007377:	add    BYTE PTR [rax+0x73],cl
	...
   140007389:	add    BYTE PTR [rcx+rbp*2+0x73],al
   14000738d:	jo     0x1400073f0
   14000738f:	je     0x1400073f4
   140007391:	push   0x7373654d
   140007396:	(bad)  
   140007397:	addr32 gs push rdi
   14000739a:	add    BYTE PTR [rax],al
   14000739c:	add    BYTE PTR [rax],al
   14000739e:	push   rax
   14000739f:	outs   dx,DWORD PTR ds:[rsi]
   1400073a0:	jae    0x140007416
   1400073a2:	push   rsp
   1400073a3:	push   0x64616572
   1400073a8:	rex.WRB
   1400073a9:	gs jae 0x14000741f
   1400073ac:	(bad)  
   1400073ad:	addr32 gs push rdi
   1400073b0:	add    BYTE PTR [rax],al
   1400073b2:	add    BYTE PTR [rax],al
   1400073b4:	rex.RXB
   1400073b5:	gs je  0x140007405
   1400073b8:	gs jae 0x14000742e
   1400073bb:	(bad)  
   1400073bc:	addr32 gs push rdi
   1400073bf:	add    BYTE PTR [rax],al
   1400073c1:	add    BYTE PTR [rbp+riz*2+0x73],al
   1400073c5:	je     0x140007439
   1400073c7:	outs   dx,DWORD PTR ds:[rsi]
   1400073c8:	jns    0x140007421
   1400073ca:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
	...
   14000742d:	add    BYTE PTR [rax],al
   14000742f:	add    BYTE PTR [rax+0x78],dl
   140007435:	add    BYTE PTR [rax],al
   140007437:	add    BYTE PTR [rax],al
   140007439:	add    BYTE PTR [rax],al
   14000743b:	add    BYTE PTR [rax-0x47ffff86],bl
   140007441:	(bad)  
   140007442:	add    BYTE PTR [rax],al
   140007444:	(bad)  
   140007445:	jns    0x140007447
	...
   14000744f:	add    BYTE PTR [rbx+rdi*2],cl
   140007452:	add    BYTE PTR [rax],al
   140007454:	mov    BYTE PTR [rbx+0x0],ah
   140007457:	add    BYTE PTR [rax+0x76],dh
	...
   140007462:	add    BYTE PTR [rax],al
   140007464:	jl     0x1400074e5
   140007466:	add    BYTE PTR [rax],al
   140007468:	cwde   
   140007469:	(bad)  
   14000746a:	add    BYTE PTR [rax],al
   14000746c:	sub    BYTE PTR [rdi+0x0],dh
	...
   140007477:	add    BYTE PTR [rdi+rdi*2+0x61500000],bl
   14000747e:	add    BYTE PTR [rax],al
   140007480:	fdiv   DWORD PTR [rbp+0x0]
	...
   14000748b:	add    dl,cl
   14000748d:	jg     0x14000748f
   14000748f:	add    BYTE PTR [rax],al
   140007491:	(bad)  
   140007492:	add    BYTE PTR [rax],al
   140007494:	or     BYTE PTR [rdi+0x0],dh
	...
   14000749f:	add    dl,ch
   1400074a1:	jg     0x1400074a3
   1400074a3:	add    BYTE PTR [rax],dh
   1400074a5:	(bad)  
   1400074a6:	add    BYTE PTR [rax],al
   1400074a8:	shl    BYTE PTR [rsi+0x0],0x0
	...
   1400074b4:	or     al,0x80
   1400074b6:	add    BYTE PTR [rax],al
   1400074b8:	call   0x16000751d
   1400074bd:	js     0x1400074bf
	...
   1400074c7:	add    BYTE PTR [rsi],dh
   1400074c9:	add    BYTE PTR [rax],0x0
   1400074cc:	rex.W (bad) 
   1400074ce:	add    BYTE PTR [rax],al
   1400074d0:	nop
   1400074d1:	ja     0x1400074d3
	...
   1400074db:	add    BYTE PTR [rax-0x80],bl
   1400074de:	add    BYTE PTR [rax],al
   1400074e0:	mov    eax,0x68000061
   1400074e5:	js     0x1400074e7
	...
   1400074ef:	add    BYTE PTR [rax+rax*4+0x0],bh
   1400074f3:	add    BYTE PTR [rax-0x6fffff9e],dl
   1400074f9:	jbe    0x1400074fb
	...
   140007503:	add    BYTE PTR [rax-0x47ffff80],ah
   140007509:	(bad)  
   14000750a:	add    BYTE PTR [rax],al
   14000750c:	fdiv   DWORD PTR [rdi+0x0]
	...
   140007517:	add    al,al
   140007519:	add    BYTE PTR [rax],0x0
   14000751c:	add    BYTE PTR [rdx+0x0],ah
   14000751f:	add    BYTE PTR [rax+0x76],dl
	...
   14000752a:	add    BYTE PTR [rax],al
   14000752c:	loop   0x1400074ae
   14000752e:	add    BYTE PTR [rax],al
   140007530:	js     0x140007592
   140007532:	add    BYTE PTR [rax],al
   140007534:	call   0x1400075b0
   140007539:	add    BYTE PTR [rax],al
   14000753b:	add    BYTE PTR [rax],al
   14000753d:	add    BYTE PTR [rax],al
   14000753f:	add    BYTE PTR [rcx+rax*4],cl
   140007542:	add    BYTE PTR [rax],al
   140007544:	adc    BYTE PTR [rdx+0x0],ah
   140007547:	add    BYTE PTR [rax],bh
   140007549:	ja     0x14000754b
	...
   140007553:	add    BYTE PTR [rsi],ch
   140007555:	add    DWORD PTR [rax],0x616000
   14000755b:	add    BYTE PTR [rax+0x76],al
   140007561:	add    BYTE PTR [rax],al
   140007563:	add    BYTE PTR [rax],al
   140007565:	add    BYTE PTR [rax],al
   140007567:	add    BYTE PTR [rax-0x7f],bl
   14000756a:	add    BYTE PTR [rax],al
   14000756c:	test   al,0x60
   14000756e:	add    BYTE PTR [rax],al
   140007570:	xor    BYTE PTR [rdi+0x0],0x0
	...
   14000757c:	jp     0x1400074ff
   14000757e:	add    BYTE PTR [rax],al
   140007580:	test   al,0x61
   140007582:	add    BYTE PTR [rax],al
   140007584:	add    BYTE PTR [rax+0x0],bh
	...
   14000758f:	add    dl,al
   140007591:	add    DWORD PTR [rax],0x622800
   140007597:	add    BYTE PTR [rax],bh
   140007599:	jbe    0x14000759b
	...
   1400075a3:	add    BYTE PTR [rdx-0x7e],cl
   1400075a6:	add    BYTE PTR [rax],al
   1400075a8:	(bad)  
   1400075a9:	(bad)  
   1400075aa:	add    BYTE PTR [rax],al
   1400075ac:	test   al,0x76
	...
   1400075b6:	add    BYTE PTR [rax],al
   1400075b8:	movabs al,ds:0x60d0000082
	...
   1400075d5:	add    BYTE PTR [rax],al
   1400075d7:	add    BYTE PTR [rbp+rdi*2+0x0],cl
   1400075db:	add    BYTE PTR [rax],al
   1400075dd:	add    BYTE PTR [rax],al
   1400075df:	add    BYTE PTR [rbx+rdi*2],bh
   1400075e2:	add    BYTE PTR [rax],al
   1400075e4:	add    BYTE PTR [rax],al
   1400075e6:	add    BYTE PTR [rax],al
   1400075e8:	nop
   1400075e9:	jnp    0x1400075eb
   1400075eb:	add    BYTE PTR [rax],al
   1400075ed:	add    BYTE PTR [rax],al
   1400075ef:	add    BYTE PTR [rbx+rdi*2+0x0],dh
   1400075f6:	add    BYTE PTR [rax],al
   1400075f8:	adc    BYTE PTR [rax+rax*1+0x0],bh
   1400075fc:	add    BYTE PTR [rax],al
   1400075fe:	add    BYTE PTR [rax],al
   140007600:	pop    rax
   140007601:	jl     0x140007603
   140007603:	add    BYTE PTR [rax],al
   140007605:	add    BYTE PTR [rax],al
   140007607:	add    BYTE PTR [rbp+rdi*2+0x0],bl
   14000760e:	add    BYTE PTR [rax],al
   140007610:	(bad)  
   140007611:	jge    0x140007613
   140007613:	add    BYTE PTR [rax],al
   140007615:	add    BYTE PTR [rax],al
   140007617:	add    ah,dh
   140007619:	jge    0x14000761b
   14000761b:	add    BYTE PTR [rax],al
   14000761d:	add    BYTE PTR [rax],al
   14000761f:	add    BYTE PTR [rdx],cl
   140007621:	jle    0x140007623
   140007623:	add    BYTE PTR [rax],al
   140007625:	add    BYTE PTR [rax],al
   140007627:	add    BYTE PTR [rsi+0x7e],cl
	...
   140007635:	add    BYTE PTR [rax],al
   140007637:	add    BYTE PTR [rdx],dh
   140007639:	(bad)  
   14000763a:	add    BYTE PTR [rax],al
   14000763c:	add    BYTE PTR [rax],al
   14000763e:	add    BYTE PTR [rax],al
   140007640:	sbb    al,BYTE PTR [rdx+0x0]
	...
   14000764e:	add    BYTE PTR [rax],al
   140007650:	in     al,0x7c
   140007652:	add    BYTE PTR [rax],al
   140007654:	add    BYTE PTR [rax],al
   140007656:	add    BYTE PTR [rax],al
   140007658:	fdivr  QWORD PTR [rsi+0x0]
   14000765b:	add    BYTE PTR [rax],al
   14000765d:	add    BYTE PTR [rax],al
   14000765f:	add    al,al
   140007661:	jle    0x140007663
	...
   14000766f:	add    BYTE PTR [rsi],dl
   140007671:	jnp    0x140007673
	...
   14000767f:	add    BYTE PTR [rax+0x7e],ah
	...
   14000768e:	add    BYTE PTR [rax],al
   140007690:	scas   al,BYTE PTR es:[rdi]
   140007691:	jge    0x140007693
   140007693:	add    BYTE PTR [rax],al
   140007695:	add    BYTE PTR [rax],al
   140007697:	add    BYTE PTR [rdx+0x7c],dl
	...
   1400076a5:	add    BYTE PTR [rax],al
   1400076a7:	add    BYTE PTR [rdx+0x82],al
   1400076ad:	add    BYTE PTR [rax],al
   1400076af:	add    BYTE PTR [rax-0x7e],dh
	...
   1400076be:	add    BYTE PTR [rax],al
   1400076c0:	movabs ds:0xb80000000000007b,al
   1400076c9:	jl     0x1400076cb
   1400076cb:	add    BYTE PTR [rax],al
   1400076cd:	add    BYTE PTR [rax],al
   1400076cf:	add    BYTE PTR [rax+0x7b],ah
   1400076d2:	add    BYTE PTR [rax],al
   1400076d4:	add    BYTE PTR [rax],al
   1400076d6:	add    BYTE PTR [rax],al
   1400076d8:	jb     0x140007755
   1400076da:	add    BYTE PTR [rax],al
   1400076dc:	add    BYTE PTR [rax],al
   1400076de:	add    BYTE PTR [rax],al
   1400076e0:	cmp    BYTE PTR [rbx+0x0],0x0
   1400076e4:	add    BYTE PTR [rax],al
   1400076e6:	add    BYTE PTR [rax],al
   1400076e8:	hlt    
   1400076e9:	jl     0x1400076eb
   1400076eb:	add    BYTE PTR [rax],al
   1400076ed:	add    BYTE PTR [rax],al
   1400076ef:	add    BYTE PTR [rax+0x7c],dh
   1400076f2:	add    BYTE PTR [rax],al
   1400076f4:	add    BYTE PTR [rax],al
   1400076f6:	add    BYTE PTR [rax],al
   1400076f8:	(bad)  
   1400076f9:	jnp    0x1400076fb
	...
   140007707:	add    dl,ah
   140007709:	jge    0x14000770b
   14000770b:	add    BYTE PTR [rax],al
   14000770d:	add    BYTE PTR [rax],al
   14000770f:	add    BYTE PTR [rax+0x7b],dl
   140007712:	add    BYTE PTR [rax],al
   140007714:	add    BYTE PTR [rax],al
   140007716:	add    BYTE PTR [rax],al
   140007718:	sbb    BYTE PTR [rbp+0x0],bh
	...
   140007727:	add    BYTE PTR [rdx],ch
   140007729:	jnp    0x14000772b
	...
   140007737:	add    BYTE PTR [rdx+0x7e],cl
   14000773a:	add    BYTE PTR [rax],al
   14000773c:	add    BYTE PTR [rax],al
   14000773e:	add    BYTE PTR [rax],al
   140007740:	or     al,BYTE PTR [rdx+0x0]
   140007746:	add    BYTE PTR [rax],al
   140007748:	cld    
   140007749:	add    DWORD PTR [rax],0x0
   14000774f:	add    dh,ch
   140007751:	add    DWORD PTR [rax],0x0
   140007757:	add    dl,bh
   140007759:	jle    0x14000775b
   14000775b:	add    BYTE PTR [rax],al
   14000775d:	add    BYTE PTR [rax],al
   14000775f:	add    BYTE PTR [rsi],cl
   140007761:	jg     0x140007763
   140007763:	add    BYTE PTR [rax],al
   140007765:	add    BYTE PTR [rax],al
   140007767:	add    BYTE PTR [rdi+rdi*2],bh
   14000776a:	add    BYTE PTR [rax],al
   14000776c:	add    BYTE PTR [rax],al
   14000776e:	add    BYTE PTR [rax],al
   140007770:	scas   al,BYTE PTR es:[rdi]
   140007771:	jle    0x140007773
	...
   14000777f:	add    BYTE PTR [rdx],ah
   140007781:	jg     0x140007783
	...
   14000778f:	add    BYTE PTR [rsi],al
   140007791:	jge    0x140007793
   140007793:	add    BYTE PTR [rax],al
   140007795:	add    BYTE PTR [rax],al
   140007797:	add    BYTE PTR [rsp+rdi*2+0x0],al
   14000779b:	add    BYTE PTR [rax],al
   14000779d:	add    BYTE PTR [rax],al
   14000779f:	add    dh,bh
   1400077a1:	jnp    0x1400077a3
   1400077a3:	add    BYTE PTR [rax],al
   1400077a5:	add    BYTE PTR [rax],al
   1400077a7:	add    BYTE PTR [rsi+rdi*2+0x0],bh
   1400077ab:	add    BYTE PTR [rax],al
   1400077ad:	add    BYTE PTR [rax],al
   1400077af:	add    BYTE PTR [rsi+0x7e],ch
   1400077b2:	add    BYTE PTR [rax],al
   1400077b4:	add    BYTE PTR [rax],al
   1400077b6:	add    BYTE PTR [rax],al
   1400077b8:	ins    BYTE PTR es:[rdi],dx
   1400077b9:	jge    0x1400077bb
   1400077bb:	add    BYTE PTR [rax],al
   1400077bd:	add    BYTE PTR [rax],al
   1400077bf:	add    BYTE PTR [rbp+rdi*2+0x0],bh
   1400077c3:	add    BYTE PTR [rax],al
   1400077c5:	add    BYTE PTR [rax],al
   1400077c7:	add    BYTE PTR [rdx],ah
   1400077c9:	jle    0x1400077cb
	...
   1400077d7:	add    dh,cl
   1400077d9:	jl     0x1400077db
	...
   1400077e7:	add    dh,dl
   1400077e9:	jge    0x1400077eb
   1400077eb:	add    BYTE PTR [rax],al
   1400077ed:	add    BYTE PTR [rax],al
   1400077ef:	add    BYTE PTR [rax+0x7d],al
	...
   1400077fe:	add    BYTE PTR [rax],al
   140007800:	mov    dh,0x81
   140007802:	add    BYTE PTR [rax],al
   140007804:	add    BYTE PTR [rax],al
   140007806:	add    BYTE PTR [rax],al
   140007808:	stos   BYTE PTR es:[rdi],al
   140007809:	add    DWORD PTR [rax],0x0
   14000780f:	add    BYTE PTR [rsi+0x81],bl
	...
   14000781d:	add    BYTE PTR [rax],al
   14000781f:	add    dh,bl
   140007821:	jnp    0x140007823
   140007823:	add    BYTE PTR [rax],al
   140007825:	add    BYTE PTR [rax],al
   140007827:	add    BYTE PTR [rbp+rdi*2+0x0],bl
   14000782b:	add    BYTE PTR [rax],al
   14000782d:	add    BYTE PTR [rax],al
   14000782f:	add    BYTE PTR [rax+0x7c],ah
   140007835:	add    BYTE PTR [rax],al
   140007837:	add    BYTE PTR [rsi+0x7e],ah
   14000783d:	add    BYTE PTR [rax],al
   14000783f:	add    BYTE PTR [rdx],dh
   140007841:	jle    0x140007843
   140007843:	add    BYTE PTR [rax],al
   140007845:	add    BYTE PTR [rax],al
   140007847:	add    al,cl
   140007849:	jnp    0x14000784b
   14000784b:	add    BYTE PTR [rax],al
   14000784d:	add    BYTE PTR [rax],al
   14000784f:	add    BYTE PTR [rax],ch
   140007851:	jge    0x140007853
   140007853:	add    BYTE PTR [rax],al
   140007855:	add    BYTE PTR [rax],al
   140007857:	add    BYTE PTR [rax],ch
   140007859:	jl     0x14000785b
	...
   140007867:	add    BYTE PTR [rdx+0x7c],al
   14000786d:	add    BYTE PTR [rax],al
   14000786f:	add    BYTE PTR [rdi+rdi*2+0x0],ch
   140007873:	add    BYTE PTR [rax],al
   140007875:	add    BYTE PTR [rax],al
   140007877:	add    BYTE PTR [rbp+rdi*2+0x0],cl
   14000787e:	add    BYTE PTR [rax],al
   140007880:	push   rdx
   140007881:	jg     0x140007883
	...
   14000788f:	add    BYTE PTR [rdx],al
   140007891:	jp     0x140007893
   140007893:	add    BYTE PTR [rax],al
   140007895:	add    BYTE PTR [rax],al
   140007897:	add    ah,dh
   140007899:	jns    0x14000789b
   14000789b:	add    BYTE PTR [rax],al
   14000789d:	add    BYTE PTR [rax],al
   14000789f:	add    dh,dl
   1400078a1:	(bad)  
   1400078a2:	add    BYTE PTR [rax],al
   1400078a4:	add    BYTE PTR [rax],al
   1400078a6:	add    BYTE PTR [rax],al
   1400078a8:	int3   
   1400078a9:	(bad)  
   1400078aa:	add    BYTE PTR [rax],al
   1400078ac:	add    BYTE PTR [rax],al
   1400078ae:	add    BYTE PTR [rax],al
   1400078b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400078b1:	jp     0x1400078b3
   1400078b3:	add    BYTE PTR [rax],al
   1400078b5:	add    BYTE PTR [rax],al
   1400078b7:	add    BYTE PTR [rdx+rdi*2+0x0],cl
   1400078be:	add    BYTE PTR [rax],al
   1400078c0:	out    0x79,al
   1400078c2:	add    BYTE PTR [rax],al
   1400078c4:	add    BYTE PTR [rax],al
   1400078c6:	add    BYTE PTR [rax],al
   1400078c8:	adc    al,0x7a
   1400078ca:	add    BYTE PTR [rax],al
   1400078cc:	add    BYTE PTR [rax],al
   1400078ce:	add    BYTE PTR [rax],al
   1400078d0:	fidivr DWORD PTR [rcx+0x0]
   1400078d3:	add    BYTE PTR [rax],al
   1400078d5:	add    BYTE PTR [rax],al
   1400078d7:	add    BYTE PTR [rsi],ch
   1400078d9:	jp     0x1400078db
   1400078db:	add    BYTE PTR [rax],al
   1400078dd:	add    BYTE PTR [rax],al
   1400078df:	add    BYTE PTR [rax+0x79],cl
   1400078e5:	add    BYTE PTR [rax],al
   1400078e7:	add    dh,cl
   1400078e9:	jns    0x1400078eb
   1400078eb:	add    BYTE PTR [rax],al
   1400078ed:	add    BYTE PTR [rax],al
   1400078ef:	add    BYTE PTR [rsi],dh
   1400078f1:	jp     0x1400078f3
   1400078f3:	add    BYTE PTR [rax],al
   1400078f5:	add    BYTE PTR [rax],al
   1400078f7:	add    BYTE PTR [rax+0x7a],al
   1400078fa:	add    BYTE PTR [rax],al
   1400078fc:	add    BYTE PTR [rax],al
   1400078fe:	add    BYTE PTR [rax],al
   140007900:	push   rsp
   140007901:	jp     0x140007903
   140007903:	add    BYTE PTR [rax],al
   140007905:	add    BYTE PTR [rax],al
   140007907:	add    BYTE PTR [rax+0x7a],ah
   14000790a:	add    BYTE PTR [rax],al
   14000790c:	add    BYTE PTR [rax],al
   14000790e:	add    BYTE PTR [rax],al
   140007910:	js     0x14000798c
   140007912:	add    BYTE PTR [rax],al
   140007914:	add    BYTE PTR [rax],al
   140007916:	add    BYTE PTR [rax],al
   140007918:	(bad)  
   140007919:	jp     0x14000791b
   14000791b:	add    BYTE PTR [rax],al
   14000791d:	add    BYTE PTR [rax],al
   14000791f:	add    ah,al
   140007921:	jns    0x140007923
   140007923:	add    BYTE PTR [rax],al
   140007925:	add    BYTE PTR [rax],al
   140007927:	add    BYTE PTR [rax+0x79],bh
   14000792d:	add    BYTE PTR [rax],al
   14000792f:	add    BYTE PTR [rsi+0x79],ah
   140007935:	add    BYTE PTR [rax],al
   140007937:	add    BYTE PTR [rcx+rdi*2+0x0],bl
   14000793e:	add    BYTE PTR [rax],al
   140007940:	xchg   esp,eax
   140007941:	jns    0x140007943
   140007943:	add    BYTE PTR [rax],al
   140007945:	add    BYTE PTR [rax],al
   140007947:	add    BYTE PTR [rsi],ah
   140007949:	jp     0x14000794b
   14000794b:	add    BYTE PTR [rax],al
   14000794d:	add    BYTE PTR [rax],al
   14000794f:	add    al,ah
   140007951:	(bad)  
	...
   14000795e:	add    BYTE PTR [rax],al
   140007960:	fidivr WORD PTR [rdx+0x0]
   140007963:	add    BYTE PTR [rax],al
   140007965:	add    BYTE PTR [rax],al
   140007967:	add    dl,cl
   140007969:	jp     0x14000796b
   14000796b:	add    BYTE PTR [rax],al
   14000796d:	add    BYTE PTR [rax],al
   14000796f:	add    BYTE PTR [rax+0x7a],bh
   140007975:	add    BYTE PTR [rax],al
   140007977:	add    al,bh
   140007979:	jp     0x14000797b
	...
   140007987:	add    BYTE PTR [rdx+0x63775f03],cl
   14000798d:	jae    0x1400079f8
   14000798f:	movsxd ebp,DWORD PTR [rbp+0x70]
   140007992:	add    BYTE PTR [rax],al
   140007994:	rex.WR add al,0x66
   140007997:	jb     0x1400079fe
   140007999:	add    BYTE PTR gs:[rax],al
   14000799c:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   1400079a3:	movsxd eax,DWORD PTR [rax]
   1400079a5:	add    BYTE PTR [rax+rax*1+0x6765625f],bh
   1400079ac:	imul   ebp,DWORD PTR [rsi+0x74],0x61657268
   1400079b3:	fs gs js 0x1400079b7
   1400079b7:	add    BYTE PTR [rax],al
   1400079b9:	add    eax,0x63736377
   1400079be:	(bad)  
   1400079bf:	je     0x140007a20
   1400079c1:	jae    0x1400079c3
   1400079c3:	add    BYTE PTR [rcx+0x61657204],ch
   1400079c9:	ins    BYTE PTR es:[rdi],dx
   1400079ca:	ins    BYTE PTR es:[rdi],dx
   1400079cb:	outs   dx,DWORD PTR ds:[rsi]
   1400079cc:	movsxd eax,DWORD PTR [rax]
   1400079ce:	add    eax,0x73637705
   1400079d3:	movsxd esi,DWORD PTR [rax+0x79]
   1400079d6:	pop    rdi
   1400079d7:	jae    0x1400079d9
   1400079d9:	add    BYTE PTR [rdi+0x61635f00],bh
   1400079df:	ins    BYTE PTR es:[rdi],dx
   1400079e0:	ins    BYTE PTR es:[rdi],dx
   1400079e1:	outs   dx,BYTE PTR ds:[rsi]
   1400079e2:	gs ja  0x140007a4d
   1400079e5:	add    BYTE PTR [rbp+0x0],dl
   1400079e8:	pop    rdi
   1400079e9:	pop    rax
   1400079ea:	movsxd esi,DWORD PTR [rax+0x74]
   1400079ed:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   1400079f6:	pop    rdi
   1400079f7:	(bad)  
   1400079f8:	ins    DWORD PTR es:[rdi],dx
   1400079f9:	jae    0x140007a62
   1400079fb:	pop    rdi
   1400079fc:	gs js  0x140007a68
   1400079ff:	je     0x140007a01
   140007a01:	add    BYTE PTR [rbp+0x775f5f00],bl
   140007a07:	addr32 gs je 0x140007a78
   140007a0b:	(bad)  
   140007a0c:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140007a13:	add    BYTE PTR [rsi+0x735f5f00],cl
   140007a19:	gs je  0x140007a7b
   140007a1c:	(bad)  
   140007a1d:	jo     0x140007a8f
   140007a1f:	pop    rdi
   140007a20:	je     0x140007a9b
   140007a22:	jo     0x140007a89
   140007a24:	add    BYTE PTR [rax],al
   140007a26:	xor    al,BYTE PTR [riz*2+0x746978]
   140007a2d:	add    BYTE PTR [rsi],cl
   140007a2f:	add    DWORD PTR [rdi+0x65],ebx
   140007a32:	js     0x140007a9d
   140007a34:	je     0x140007a36
   140007a36:	rol    DWORD PTR [rax],0x5f
   140007a39:	movsxd esp,DWORD PTR [rbp+0x78]
   140007a3c:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140007a44:	jae    0x140007aab
   140007a46:	je     0x140007abd
   140007a48:	jae    0x140007aaf
   140007a4a:	jb     0x140007ab9
   140007a4c:	(bad)  
   140007a4d:	je     0x140007ab7
   140007a4f:	gs jb  0x140007ac4
   140007a52:	add    BYTE PTR [rax],al
   140007a54:	jge    0x140007a57
   140007a56:	pop    rdi
   140007a57:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140007a5e:	ins    DWORD PTR es:[rdi],dx
   140007a5f:	add    BYTE PTR [rdi+0x0],dl
   140007a62:	pop    rdi
   140007a63:	pop    rdi
   140007a64:	rex.XB pop r15
   140007a66:	jae    0x140007ad8
   140007a68:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140007a6c:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140007a73:	ins    BYTE PTR es:[rdi],dx
   140007a74:	gs jb  0x140007a77
   140007a77:	add    BYTE PTR [rdx+0x63775f03],al
   140007a7d:	ins    DWORD PTR es:[rdi],dx
   140007a7e:	fs ins BYTE PTR es:[rdi],dx
   140007a80:	outs   dx,BYTE PTR ds:[rsi]
   140007a81:	add    BYTE PTR [rdi],ah
   140007a83:	add    DWORD PTR [rdi+0x66],ebx
   140007a86:	ins    DWORD PTR es:[rdi],dx
   140007a87:	outs   dx,DWORD PTR ds:[rsi]
   140007a88:	fs add BYTE PTR gs:[rax],al
   140007a8c:	rol    BYTE PTR [rax],cl
   140007a8e:	pop    rdi
   140007a8f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140007a92:	ins    DWORD PTR es:[rdi],dx
   140007a93:	outs   dx,DWORD PTR ds:[rsi]
   140007a94:	fs add BYTE PTR gs:[rax],al
   140007a98:	ins    DWORD PTR es:[rdi],dx
   140007a99:	jae    0x140007b11
   140007a9b:	movsxd esi,DWORD PTR [rdx+0x74]
   140007a9e:	cs fs ins BYTE PTR es:[rdi],dx
   140007aa1:	ins    BYTE PTR es:[rdi],dx
   140007aa2:	add    BYTE PTR [rax],al
   140007aa4:	(bad)  
   140007aa5:	add    BYTE PTR [rdi],bh
   140007aa7:	je     0x140007b0e
   140007aa9:	jb     0x140007b18
   140007aab:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140007ab2:	pop    rcx
   140007ab3:	pop    r8
   140007ab5:	pop    rax
   140007ab6:	pop    rdx
   140007ab7:	add    BYTE PTR [rdx+0x0],dl
   140007aba:	rex.RB je 0x140007b34
   140007abd:	push   rsp
   140007abe:	jb     0x140007b21
   140007ac0:	movsxd esp,DWORD PTR [rbp+0x4d]
   140007ac3:	gs jae 0x140007b39
   140007ac6:	(bad)  
   140007ac7:	addr32 gs add dh,al
   140007acb:	add    dl,BYTE PTR [rdx+0x74]
   140007ace:	ins    BYTE PTR es:[rdi],dx
   140007acf:	rex.XB (bad) 
   140007ad1:	jo     0x140007b47
   140007ad3:	jne    0x140007b47
   140007ad5:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140007ad8:	outs   dx,BYTE PTR ds:[rsi]
   140007ad9:	je     0x140007b40
   140007adb:	js     0x140007b51
   140007add:	add    BYTE PTR [rdi+0x4],dh
   140007ae0:	push   rdx
   140007ae1:	je     0x140007b4f
   140007ae3:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140007ae5:	outs   dx,DWORD PTR ds:[rsi]
   140007ae6:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140007aea:	jne    0x140007b5a
   140007aec:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140007af0:	outs   dx,BYTE PTR ds:[rsi]
   140007af1:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140007af3:	je     0x140007b67
   140007af5:	jns    0x140007af7
   140007af7:	add    BYTE PTR [rbx+0x6c745205],cl
   140007afd:	push   rsi
   140007afe:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140007b05:	outs   dx,BYTE PTR ds:[rsi]
   140007b06:	ja     0x140007b71
   140007b08:	outs   dx,BYTE PTR ds:[rsi]
   140007b09:	add    BYTE PTR fs:[rax],al
   140007b0c:	outs   dx,BYTE PTR ds:[rsi]
   140007b0d:	je     0x140007b73
   140007b0f:	ins    BYTE PTR es:[rdi],dx
   140007b10:	ins    BYTE PTR es:[rdi],dx
   140007b11:	cs fs ins BYTE PTR es:[rdi],dx
   140007b14:	ins    BYTE PTR es:[rdi],dx
   140007b15:	add    BYTE PTR [rbx],dh
   140007b17:	add    BYTE PTR [rdi+0x65],al
   140007b1a:	je     0x140007b62
   140007b1c:	jne    0x140007b8a
   140007b1e:	ins    BYTE PTR es:[rdi],dx
   140007b1f:	push   rax
   140007b20:	(bad)  
   140007b21:	je     0x140007b8b
   140007b23:	rex.WRX (bad) 
   140007b25:	ins    DWORD PTR es:[rdi],dx
   140007b26:	gs push rdi
   140007b28:	add    BYTE PTR [rax],al
   140007b2a:	add    eax,0x74654700
   140007b2f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007b31:	ins    DWORD PTR es:[rdi],dx
   140007b32:	ins    DWORD PTR es:[rdi],dx
   140007b33:	(bad)  
   140007b34:	outs   dx,BYTE PTR ds:[rsi]
   140007b35:	imul   r13,QWORD PTR fs:[rsi+0x65],0x80057
   140007b3e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007b40:	rex.XB jb 0x140007ba8
   140007b43:	(bad)  
   140007b44:	je     0x140007bab
   140007b46:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007b48:	jae    0x140007bbe
   140007b4a:	(bad)  
   140007b4b:	outs   dx,BYTE PTR ds:[rsi]
   140007b4c:	movsxd esp,DWORD PTR [rbp+0x0]
   140007b4f:	add    BYTE PTR [rbx],ch
   140007b51:	add    BYTE PTR [rsi+0x69],dl
   140007b54:	jb     0x140007bca
   140007b56:	jne    0x140007bb9
   140007b58:	ins    BYTE PTR es:[rdi],dx
   140007b59:	push   rcx
   140007b5a:	jne    0x140007bc1
   140007b5c:	jb     0x140007bd7
   140007b5e:	add    BYTE PTR [rax],al
   140007b60:	or     BYTE PTR [rax],al
   140007b62:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x6f736552
   140007b6a:	jne    0x140007bde
   140007b6c:	movsxd esp,DWORD PTR [rbp+0x45]
   140007b6f:	js     0x140007bc8
   140007b71:	add    BYTE PTR [rbx],cl
   140007b73:	add    BYTE PTR [rsi+0x72],al
   140007b76:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   140007b80:	sbb    DWORD PTR [rax],eax
   140007b82:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140007b84:	(bad)  
   140007b85:	fs push rdx
   140007b87:	gs jae 0x140007bf9
   140007b8a:	jne    0x140007bfe
   140007b8c:	movsxd esp,DWORD PTR [rbp+0x0]
   140007b8f:	add    BYTE PTR [rdx+0x0],al
   140007b92:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007b94:	push   rbp
   140007b95:	outs   dx,BYTE PTR ds:[rsi]
   140007b96:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140007b9d:	imul   edi,DWORD PTR [rdx+0x65],0x170000
   140007ba4:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140007ba6:	(bad)  
   140007ba7:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140007bb0:	js     0x140007c09
   140007bb2:	add    BYTE PTR [rax],al
   140007bb4:	add    BYTE PTR [rbx+0x6f],al
   140007bb8:	push   rsp
   140007bb9:	(bad)  
   140007bba:	jae    0x140007c27
   140007bbc:	rex.WRB
   140007bbd:	gs ins DWORD PTR es:[rdi],dx
   140007bbf:	push   rdx
   140007bc0:	gs (bad) 
   140007bc2:	ins    BYTE PTR es:[rdi],dx
   140007bc3:	ins    BYTE PTR es:[rdi],dx
   140007bc4:	outs   dx,DWORD PTR ds:[rsi]
   140007bc5:	movsxd eax,DWORD PTR [rax]
   140007bc7:	add    BYTE PTR [rsi],dh
   140007bc9:	add    BYTE PTR [rdi+0x61],dl
   140007bcc:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   140007bd4:	ins    BYTE PTR es:[edi],dx
   140007bd6:	gs rex.WRXB (bad) 
   140007bd9:	push   0x65
   140007bdb:	movsxd esi,DWORD PTR [rax+rax*1+0x29]
   140007bdf:	add    BYTE PTR [rbx+0x65],dl
   140007be2:	je     0x140007c29
   140007be4:	jbe    0x140007c4b
   140007be6:	outs   dx,BYTE PTR ds:[rsi]
   140007be7:	je     0x140007be9
   140007be9:	add    BYTE PTR [rbx],dl
   140007beb:	add    BYTE PTR [rdi+0x65],al
   140007bee:	je     0x140007c3d
   140007bf0:	outs   dx,DWORD PTR ds:[rsi]
   140007bf1:	fs jne 0x140007c60
   140007bf4:	gs rex.W (bad) 
   140007bf7:	outs   dx,BYTE PTR ds:[rsi]
   140007bf8:	fs ins BYTE PTR es:[rdi],dx
   140007bfa:	gs push rdi
   140007bfc:	add    BYTE PTR [rax],al
   140007bfe:	add    eax,DWORD PTR [rax]
   140007c00:	push   rdx
   140007c01:	gs addr32 rex.XB jb 0x140007c6b
   140007c06:	(bad)  
   140007c07:	je     0x140007c6e
   140007c09:	rex.WXB
   140007c0a:	gs jns 0x140007c52
   140007c0d:	js     0x140007c66
   140007c0f:	add    BYTE PTR [rax+rax*1],bh
   140007c12:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007c14:	push   rbx
   140007c15:	jne    0x140007c8a
   140007c17:	jo     0x140007c7e
   140007c19:	outs   dx,BYTE PTR ds:[rsi]
   140007c1a:	fs rex.XB ins BYTE PTR es:[rdi],dx
   140007c1d:	(bad)  
   140007c1e:	jae    0x140007c93
   140007c20:	rex.WRXB (bad) 
   140007c22:	push   0x65
   140007c24:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   140007c28:	sbb    BYTE PTR [rax],al
   140007c2a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007c2c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140007c34:	rex.XB jb 0x140007ca0
   140007c37:	je     0x140007ca2
   140007c39:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007c3c:	push   rbx
   140007c3d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007c42:	outs   dx,BYTE PTR ds:[rsi]
   140007c43:	add    BYTE PTR [rcx],ah
   140007c45:	add    BYTE PTR [rdx+0x65],dl
   140007c48:	addr32 push rcx
   140007c4a:	jne    0x140007cb1
   140007c4c:	jb     0x140007cc7
   140007c4e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007c50:	outs   dx,WORD PTR ds:[rsi]
   140007c52:	rex.WXB
   140007c53:	gs jns 0x140007cad
   140007c56:	add    BYTE PTR [rax],al
   140007c58:	(bad)  
   140007c59:	add    BYTE PTR [rbx+0x6f],al
   140007c5c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007c5e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140007c66:	push   rbx
   140007c67:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140007c6b:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x53001f00
   140007c73:	imul   edi,DWORD PTR [rdx+0x65],0x6552666f
   140007c7a:	jae    0x140007ceb
   140007c7c:	jne    0x140007cf0
   140007c7e:	movsxd esp,DWORD PTR [rbp+0x0]
   140007c81:	add    BYTE PTR [rax+rax*1],bl
   140007c84:	rex.RXB
   140007c85:	gs je  0x140007cde
   140007c88:	gs jb  0x140007cfe
   140007c8b:	imul   ebp,DWORD PTR [rdi+0x6e],0x577845
   140007c92:	add    eax,0x61654800
   140007c97:	jo     0x140007cdd
   140007c99:	gs jae 0x140007d10
   140007c9c:	jb     0x140007d0d
   140007c9e:	jns    0x140007ca0
   140007ca0:	sbb    eax,0x61654c00
   140007ca5:	jbe    0x140007d0c
   140007ca7:	rex.XB jb 0x140007d13
   140007caa:	je     0x140007d15
   140007cac:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007caf:	push   rbx
   140007cb0:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007cb5:	outs   dx,BYTE PTR ds:[rsi]
   140007cb6:	add    BYTE PTR [rax],al
   140007cb8:	sldt   WORD PTR [rdi+0x65]
   140007cbc:	je     0x140007d0b
   140007cbe:	outs   dx,DWORD PTR ds:[rsi]
   140007cbf:	fs jne 0x140007d2e
   140007cc2:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   140007ccc:	add    BYTE PTR [rax],al
   140007cce:	(bad)  
   140007ccf:	add    BYTE PTR [rbp+0x75],cl
   140007cd2:	ins    BYTE PTR es:[rdi],dx
   140007cd3:	je     0x140007d3e
   140007cd5:	rex.X jns 0x140007d4c
   140007cd8:	gs push rsp
   140007cda:	outs   dx,DWORD PTR ds:[rsi]
   140007cdb:	push   rdi
   140007cdc:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   140007ce4:	add    eax,0x74654700
   140007ce9:	rex.WR (bad) 
   140007ceb:	jae    0x140007d61
   140007ced:	rex.RB jb 0x140007d62
   140007cf0:	outs   dx,DWORD PTR ds:[rsi]
   140007cf1:	jb     0x140007cf3
   140007cf3:	add    BYTE PTR [rax+rax*1],dl
   140007cf6:	rex.RXB
   140007cf7:	gs je  0x140007d4a
   140007cfa:	jb     0x140007d6b
   140007cfc:	movsxd eax,DWORD PTR [rcx+0x64]
   140007cff:	fs jb  0x140007d67
   140007d02:	jae    0x140007d77
   140007d04:	add    BYTE PTR [rax],al
   140007d06:	or     eax,DWORD PTR [rax]
   140007d08:	push   rdx
   140007d09:	gs addr32 rex.R
   140007d0c:	gs ins BYTE PTR es:[rdi],dx
   140007d0e:	gs je  0x140007d76
   140007d11:	push   rsi
   140007d12:	(bad)  
   140007d13:	ins    BYTE PTR es:[rdi],dx
   140007d14:	jne    0x140007d7b
   140007d16:	push   rdi
   140007d17:	add    BYTE PTR [rcx],ah
   140007d19:	add    BYTE PTR [rsi+0x69],dl
   140007d1c:	jb     0x140007d92
   140007d1e:	jne    0x140007d81
   140007d20:	ins    BYTE PTR es:[rdi],dx
   140007d21:	rex.B ins BYTE PTR es:[rdi],dx
   140007d23:	ins    BYTE PTR es:[rdi],dx
   140007d24:	outs   dx,DWORD PTR ds:[rsi]
   140007d25:	movsxd eax,DWORD PTR [rax]
   140007d27:	add    BYTE PTR [rcx],dl
   140007d29:	add    BYTE PTR [rbp+0x6e],al
   140007d2c:	je     0x140007d93
   140007d2e:	jb     0x140007d73
   140007d30:	jb     0x140007d9b
   140007d32:	je     0x140007d9d
   140007d34:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007d37:	push   rbx
   140007d38:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007d3d:	outs   dx,BYTE PTR ds:[rsi]
   140007d3e:	add    BYTE PTR [rax],al
   140007d40:	add    eax,DWORD PTR [rax]
   140007d42:	rex.XB push 0x72507261
   140007d48:	gs jbe 0x140007da2
   140007d4b:	add    BYTE PTR [rdi],bh
   140007d4d:	add    BYTE PTR [rbx+0x6f],al
   140007d50:	push   rsp
   140007d51:	(bad)  
   140007d52:	jae    0x140007dbf
   140007d54:	rex.WRB
   140007d55:	gs ins DWORD PTR es:[rdi],dx
   140007d57:	rex.RX jb 0x140007dbf
   140007d5a:	add    BYTE PTR gs:[rsi],al
   140007d5d:	add    BYTE PTR [rbx+0x72],al
   140007d60:	gs (bad) 
   140007d62:	je     0x140007dc9
   140007d64:	rex.RB jbe 0x140007dcc
   140007d67:	outs   dx,BYTE PTR ds:[rsi]
   140007d68:	je     0x140007dc1
   140007d6a:	add    BYTE PTR [rax],al
   140007d6c:	adc    BYTE PTR [rax],al
   140007d6e:	push   rdx
   140007d6f:	rex.RB outs dx,BYTE PTR gs:[esi]
   140007d73:	jne    0x140007de2
   140007d75:	push   rsi
   140007d76:	(bad)  
   140007d77:	ins    BYTE PTR es:[rdi],dx
   140007d78:	jne    0x140007ddf
   140007d7a:	push   rdi
   140007d7b:	add    BYTE PTR [rsi],bl
   140007d7d:	add    BYTE PTR [rdx+0x65],dl
   140007d80:	addr32 rex.WRXB jo 0x140007de9
   140007d84:	outs   dx,BYTE PTR ds:[rsi]
   140007d85:	rex.WXB
   140007d86:	gs jns 0x140007dce
   140007d89:	js     0x140007de2
   140007d8b:	add    BYTE PTR [rcx],dl
   140007d8d:	add    BYTE PTR [rdi+0x65],al
   140007d90:	je     0x140007de5
   140007d92:	jns    0x140007e07
   140007d94:	je     0x140007dfb
   140007d96:	ins    DWORD PTR es:[rdi],dx
   140007d97:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007d99:	outs   dx,WORD PTR ds:[rsi]
   140007d9b:	add    BYTE PTR [rsi],bh
   140007d9d:	add    BYTE PTR [rbx+0x6f],al
   140007da0:	push   rsp
   140007da1:	(bad)  
   140007da2:	jae    0x140007e0f
   140007da4:	rex.WRB
   140007da5:	gs ins DWORD PTR es:[rdi],dx
   140007da7:	rex.B ins BYTE PTR es:[rdi],dx
   140007da9:	ins    BYTE PTR es:[rdi],dx
   140007daa:	outs   dx,DWORD PTR ds:[rsi]
   140007dab:	movsxd eax,DWORD PTR [rax]
   140007dad:	add    BYTE PTR [rdx],cl
   140007daf:	add    BYTE PTR [rax+0x65],cl
   140007db2:	(bad)  
   140007db3:	jo     0x140007e08
   140007db5:	gs je  0x140007e01
   140007db8:	outs   dx,BYTE PTR ds:[rsi]
   140007db9:	outs   dx,WORD PTR ds:[rsi]
   140007dbb:	jb     0x140007e2a
   140007dbd:	(bad)  
   140007dbe:	je     0x140007e29
   140007dc0:	outs   dx,DWORD PTR ds:[rsi]
   140007dc1:	outs   dx,BYTE PTR ds:[rsi]
   140007dc2:	add    BYTE PTR [rax],al
   140007dc4:	add    BYTE PTR es:[rbx+0x6f],al
   140007dc8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007dca:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140007dd2:	rex.RB js 0x140007dd5
   140007dd5:	add    BYTE PTR [rdx],al
   140007dd7:	add    BYTE PTR [rbx+0x68],al
   140007dda:	(bad)  
   140007ddb:	jb     0x140007e2b
   140007ddd:	gs js  0x140007e54
   140007de0:	push   rdi
   140007de1:	add    BYTE PTR [rax],ch
   140007de3:	add    BYTE PTR [rsi+0x69],dl
   140007de6:	jb     0x140007e5c
   140007de8:	jne    0x140007e4b
   140007dea:	ins    BYTE PTR es:[rdi],dx
   140007deb:	push   rax
   140007dec:	jb     0x140007e5d
   140007dee:	je     0x140007e55
   140007df0:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140007df4:	cmp    DWORD PTR [rax],eax
   140007df6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007df8:	push   rdx
   140007df9:	gs jbe 0x140007e6b
   140007dfc:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   140007e00:	(bad)  
   140007e01:	jae    0x140007e76
   140007e03:	rex.WRXB (bad) 
   140007e05:	push   0x65
   140007e07:	movsxd esi,DWORD PTR [rax+rax*1+0x32]
   140007e0b:	add    BYTE PTR [rbx+0x6f],al
   140007e0e:	push   rdx
   140007e0f:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   140007e18:	(bad)  
   140007e19:	jae    0x140007e8e
   140007e1b:	rex.WRXB (bad) 
   140007e1d:	push   0x65
   140007e1f:	movsxd esi,DWORD PTR [rax+rax*1+0xe]
   140007e23:	add    BYTE PTR [rdx+0x65],dl
   140007e26:	rex.RB outs dx,BYTE PTR ds:[esi]
   140007e29:	jne    0x140007e98
   140007e2b:	rex.WXB
   140007e2c:	gs jns 0x140007e74
   140007e2f:	js     0x140007e88
   140007e31:	add    BYTE PTR [rdi],cl
   140007e33:	add    BYTE PTR [rbp+riz*2+0x6c],al
   140007e37:	gs je  0x140007e9f
   140007e3a:	rex.XB jb 0x140007ea6
   140007e3d:	je     0x140007ea8
   140007e3f:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007e42:	push   rbx
   140007e43:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007e48:	outs   dx,BYTE PTR ds:[rsi]
   140007e49:	add    BYTE PTR [rcx],dl
   140007e4b:	add    BYTE PTR [rdi+0x65],al
   140007e4e:	je     0x140007e93
   140007e50:	jne    0x140007ec4
   140007e52:	jb     0x140007eb9
   140007e54:	outs   dx,BYTE PTR ds:[rsi]
   140007e55:	je     0x140007eab
   140007e57:	push   0x64616572
   140007e5c:	rex.WB
   140007e5d:	add    BYTE PTR fs:[rax],al
   140007e60:	add    BYTE PTR [rax],al
   140007e62:	rex.XB ins BYTE PTR es:[rdi],dx
   140007e64:	outs   dx,DWORD PTR ds:[rsi]
   140007e65:	jae    0x140007ecc
   140007e67:	rex.W (bad) 
   140007e69:	outs   dx,BYTE PTR ds:[rsi]
   140007e6a:	fs ins BYTE PTR es:[rdi],dx
   140007e6c:	add    BYTE PTR gs:[rax],al
   140007e6f:	add    BYTE PTR [rdx+0x65],dl
   140007e72:	rex.XB ins BYTE PTR es:[edi],dx
   140007e75:	outs   dx,DWORD PTR ds:[rsi]
   140007e76:	jae    0x140007edd
   140007e78:	rex.WXB
   140007e79:	gs jns 0x140007e7c
   140007e7c:	sub    al,0x0
   140007e7e:	push   rdx
   140007e7f:	gs addr32 push rbx
   140007e82:	gs je  0x140007edb
   140007e85:	(bad)  
   140007e86:	ins    BYTE PTR es:[rdi],dx
   140007e87:	jne    0x140007eee
   140007e89:	rex.RB js 0x140007ee3
   140007e8c:	add    BYTE PTR [rax],al
   140007e8e:	(bad)  
   140007e8f:	add    BYTE PTR [rbx+0x6f],al
   140007e92:	push   rdx
   140007e93:	gs jae 0x140007f0b
   140007e96:	ins    DWORD PTR es:[rdi],dx
   140007e97:	gs rex.XB ins BYTE PTR es:[rdi],dx
   140007e9a:	(bad)  
   140007e9b:	jae    0x140007f10
   140007e9d:	rex.WRXB (bad) 
   140007e9f:	push   0x65
   140007ea1:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   140007ea5:	add    BYTE PTR [rip+0x656c5300],ch        # 0x1a56cd1ab
   140007eab:	gs jo  0x140007eae
   140007eae:	and    BYTE PTR [rax],al
   140007eb0:	rex.RXB
   140007eb1:	gs je  0x140007f07
   140007eb4:	je     0x140007f17
   140007eb6:	jb     0x140007f2c
   140007eb8:	jne    0x140007f2a
   140007eba:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007ebc:	outs   dx,WORD PTR ds:[rsi]
   140007ebe:	push   rdi
   140007ebf:	add    BYTE PTR [rcx],dl
   140007ec1:	add    BYTE PTR [rbp+0x6e],dl
   140007ec4:	push   0x6c646e61
   140007ec9:	gs fs rex.RB js 0x140007f31
   140007ece:	gs jo  0x140007f45
   140007ed1:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140007ed8:	gs jb  0x140007edb
   140007edb:	add    BYTE PTR [rdi],cl
   140007edd:	add    BYTE PTR [rbx+0x65],dl
   140007ee0:	je     0x140007f37
   140007ee2:	outs   dx,BYTE PTR ds:[rsi]
   140007ee3:	push   0x6c646e61
   140007ee8:	gs fs rex.RB js 0x140007f50
   140007eed:	gs jo  0x140007f64
   140007ef0:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140007ef7:	gs jb  0x140007efa
   140007efa:	or     al,0x0
   140007efc:	rex.RXB
   140007efd:	gs je  0x140007f43
   140007f00:	jne    0x140007f74
   140007f02:	jb     0x140007f69
   140007f04:	outs   dx,BYTE PTR ds:[rsi]
   140007f05:	je     0x140007f57
   140007f07:	jb     0x140007f78
   140007f09:	movsxd esp,DWORD PTR [rbp+0x73]
   140007f0c:	jae    0x140007f0e
   140007f0e:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   140007f13:	ins    DWORD PTR es:[rdi],dx
   140007f14:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140007f1b:	outs   dx,DWORD PTR ds:[rsi]
   140007f1c:	movsxd esp,DWORD PTR [rbp+0x73]
   140007f1f:	jae    0x140007f21
   140007f21:	add    BYTE PTR [rax],al
   140007f23:	add    BYTE PTR [rcx+0x75],dl
   140007f26:	gs jb  0x140007fa2
   140007f29:	push   rax
   140007f2a:	gs jb  0x140007f93
   140007f2d:	outs   dx,DWORD PTR ds:[rsi]
   140007f2e:	jb     0x140007f9d
   140007f30:	(bad)  
   140007f31:	outs   dx,BYTE PTR ds:[rsi]
   140007f32:	movsxd esp,DWORD PTR [rbp+0x43]
   140007f35:	outs   dx,DWORD PTR ds:[rsi]
   140007f36:	jne    0x140007fa6
   140007f38:	je     0x140007f9f
   140007f3a:	jb     0x140007f3c
   140007f3c:	or     eax,0x74654700
   140007f41:	rex.XB jne 0x140007fb6
   140007f44:	jb     0x140007fab
   140007f46:	outs   dx,BYTE PTR ds:[rsi]
   140007f47:	je     0x140007f99
   140007f49:	jb     0x140007fba
   140007f4b:	movsxd esp,DWORD PTR [rbp+0x73]
   140007f4e:	jae    0x140007f99
   140007f50:	add    BYTE PTR fs:[rax+rax*1],dl
   140007f54:	rex.RXB
   140007f55:	gs je  0x140007fab
   140007f58:	jns    0x140007fcd
   140007f5a:	je     0x140007fc1
   140007f5c:	ins    DWORD PTR es:[rdi],dx
   140007f5d:	push   rsp
   140007f5e:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140007f65:	ins    BYTE PTR es:[rdi],dx
   140007f66:	gs push rsp
   140007f68:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   140007f6f:	gs je  0x140007fc6
   140007f72:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140007f79:	je     0x140007f7b
   140007f7b:	add    BYTE PTR [rcx+0x70],ah
   140007f7e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df2f5
   140007f88:	outs   dx,DWORD PTR ds:[rsi]
   140007f89:	jb     0x140007ff0
   140007f8b:	sub    eax,0x656c6966
   140007f90:	sub    eax,0x322d316c
   140007f95:	sub    eax,0x6c642e31
   140007f9a:	ins    BYTE PTR es:[rdi],dx
   140007f9b:	add    BYTE PTR [rcx+0x70],ah
   140007f9e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df315
   140007fa8:	outs   dx,DWORD PTR ds:[rsi]
   140007fa9:	jb     0x140008010
   140007fab:	sub    eax,0x636f7270
   140007fb0:	gs jae 0x140008026
   140007fb3:	outs   dx,BYTE PTR gs:[rsi]
   140007fb5:	jbe    0x140008020
   140007fb7:	jb     0x140008028
   140007fb9:	outs   dx,BYTE PTR ds:[rsi]
   140007fba:	ins    DWORD PTR es:[rdi],dx
   140007fbb:	outs   dx,BYTE PTR gs:[rsi]
   140007fbd:	je     0x140007fec
   140007fbf:	ins    BYTE PTR es:[rdi],dx
   140007fc0:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30acf8
   140007fc6:	fs ins BYTE PTR es:[rdi],dx
   140007fc8:	ins    BYTE PTR es:[rdi],dx
   140007fc9:	add    BYTE PTR [rcx+0x70],ah
   140007fcc:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df343
   140007fd6:	outs   dx,DWORD PTR ds:[rsi]
   140007fd7:	jb     0x14000803e
   140007fd9:	sub    eax,0x2d6d6f63
   140007fde:	ins    BYTE PTR es:[rdi],dx
   140007fdf:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31ad16
   140007fe5:	fs ins BYTE PTR es:[rdi],dx
   140007fe7:	ins    BYTE PTR es:[rdi],dx
   140007fe8:	add    BYTE PTR [rax],al
   140007fea:	(bad)  
   140007feb:	jo     0x140008056
   140007fed:	sub    eax,0x772d736d
   140007ff2:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140007ff9:	sub    eax,0x6f6d656d
   140007ffe:	jb     0x140008079
   140008000:	sub    eax,0x312d316c
   140008005:	sub    eax,0x6c642e32
   14000800a:	ins    BYTE PTR es:[rdi],dx
   14000800b:	add    BYTE PTR [rcx+0x70],ah
   14000800e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df385
   140008018:	outs   dx,DWORD PTR ds:[rsi]
   140008019:	jb     0x140008080
   14000801b:	sub    eax,0x7262696c
   140008020:	(bad)  
   140008021:	jb     0x14000809c
   140008023:	ins    BYTE PTR es:[rdi],dx
   140008024:	outs   dx,DWORD PTR ds:[rsi]
   140008025:	(bad)  
   140008026:	fs gs jb 0x140008057
   14000802a:	ins    BYTE PTR es:[rdi],dx
   14000802b:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30ad63
   140008031:	fs ins BYTE PTR es:[rdi],dx
   140008033:	ins    BYTE PTR es:[rdi],dx
   140008034:	add    BYTE PTR [rax],al
   140008036:	(bad)  
   140008037:	jo     0x1400080a2
   140008039:	sub    eax,0x772d736d
   14000803e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008045:	sub    eax,0x636e7973
   14000804a:	push   0x2d316c2d
   14000804f:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64ae85
   140008055:	ins    BYTE PTR es:[rdi],dx
   140008056:	add    BYTE PTR [rax],al
   140008058:	(bad)  
   140008059:	jo     0x1400080c4
   14000805b:	sub    eax,0x772d736d
   140008060:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008067:	sub    eax,0x69676572
   14000806c:	jae    0x1400080e2
   14000806e:	jb     0x1400080e9
   140008070:	sub    eax,0x312d316c
   140008075:	sub    eax,0x6c642e30
   14000807a:	ins    BYTE PTR es:[rdi],dx
   14000807b:	add    BYTE PTR [rcx+0x70],ah
   14000807e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df3f5
   140008088:	outs   dx,DWORD PTR ds:[rsi]
   140008089:	jb     0x1400080f0
   14000808b:	sub    eax,0x69737973
   140008090:	outs   dx,BYTE PTR ds:[rsi]
   140008091:	outs   dx,WORD PTR ds:[rsi]
   140008093:	sub    eax,0x322d316c
   140008098:	sub    eax,0x6c642e31
   14000809d:	ins    BYTE PTR es:[rdi],dx
   14000809e:	add    BYTE PTR [rax],al
   1400080a0:	(bad)  
   1400080a1:	jo     0x14000810c
   1400080a3:	sub    eax,0x772d736d
   1400080a8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400080af:	sub    eax,0x70616568
   1400080b4:	sub    eax,0x322d316c
   1400080b9:	sub    eax,0x6c642e30
   1400080be:	ins    BYTE PTR es:[rdi],dx
   1400080bf:	add    BYTE PTR [rcx+0x70],ah
   1400080c2:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df439
   1400080cc:	outs   dx,DWORD PTR ds:[rsi]
   1400080cd:	jb     0x140008134
   1400080cf:	sub    eax,0x69727473
   1400080d4:	outs   dx,BYTE PTR ds:[rsi]
   1400080d5:	addr32 sub eax,0x312d316c
   1400080db:	sub    eax,0x6c642e30
   1400080e0:	ins    BYTE PTR es:[rdi],dx
   1400080e1:	add    BYTE PTR [rcx+0x70],ah
   1400080e4:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df45b
   1400080ee:	outs   dx,DWORD PTR ds:[rsi]
   1400080ef:	jb     0x140008156
   1400080f1:	sub    eax,0x6f727265
   1400080f6:	jb     0x140008160
   1400080f8:	(bad)  
   1400080f9:	outs   dx,BYTE PTR ds:[rsi]
   1400080fa:	fs ins BYTE PTR es:[rdi],dx
   1400080fc:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140008103:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64af3a
   140008109:	ins    BYTE PTR es:[rdi],dx
   14000810a:	add    BYTE PTR [rax],al
   14000810c:	(bad)  
   14000810d:	jo     0x140008178
   14000810f:	sub    eax,0x772d736d
   140008114:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000811b:	sub    eax,0x69727473
   140008120:	outs   dx,BYTE PTR ds:[rsi]
   140008121:	addr32 sub eax,0x312d326c
   140008127:	sub    eax,0x6c642e30
   14000812c:	ins    BYTE PTR es:[rdi],dx
   14000812d:	add    BYTE PTR [rcx+0x70],ah
   140008130:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df4a7
   14000813a:	outs   dx,DWORD PTR ds:[rsi]
   14000813b:	jb     0x1400081a2
   14000813d:	sub    eax,0x636f7270
   140008142:	gs jae 0x1400081b8
   140008145:	je     0x1400081af
   140008147:	jb     0x1400081ae
   140008149:	(bad)  
   14000814a:	fs jae 0x14000817a
   14000814d:	ins    BYTE PTR es:[rdi],dx
   14000814e:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32ae85
   140008154:	fs ins BYTE PTR es:[rdi],dx
   140008156:	ins    BYTE PTR es:[rdi],dx
   140008157:	add    BYTE PTR [rcx+0x70],ah
   14000815a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df4d1
   140008164:	outs   dx,DWORD PTR ds:[rsi]
   140008165:	jb     0x1400081cc
   140008167:	sub    eax,0x646e6168
   14000816c:	ins    BYTE PTR es:[rdi],dx
   14000816d:	gs sub eax,0x312d316c
   140008173:	sub    eax,0x6c642e30
   140008178:	ins    BYTE PTR es:[rdi],dx
   140008179:	add    BYTE PTR [rcx+0x70],ah
   14000817c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df4f3
   140008186:	outs   dx,DWORD PTR ds:[rsi]
   140008187:	jb     0x1400081ee
   140008189:	sub    eax,0x666f7270
   14000818e:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   140008196:	sub    eax,0x6c642e30
   14000819b:	ins    BYTE PTR es:[rdi],dx
   14000819c:	add    BYTE PTR [rax],al
   14000819e:	or     DWORD PTR [rax],eax
   1400081a0:	ins    BYTE PTR es:[rdi],dx
   1400081a1:	jae    0x140008217
   1400081a3:	jb     0x140008208
   1400081a5:	jo     0x140008220
   1400081a7:	outs   dx,BYTE PTR ds:[rsi]
   1400081a8:	push   rdi
   1400081a9:	add    BYTE PTR [rip+0x74736c00],al        # 0x1b473edaf
   1400081af:	jb     0x140008214
   1400081b1:	ins    DWORD PTR es:[rdi],dx
   1400081b2:	jo     0x14000821d
   1400081b4:	push   rdi
   1400081b5:	add    BYTE PTR [rdi],al
   1400081b7:	add    BYTE PTR [rbx+rsi*2+0x74],ch
   1400081bb:	jb     0x140008220
   1400081bd:	jo     0x140008238
   1400081bf:	push   rdi
   1400081c0:	add    BYTE PTR [rax],al
   1400081c2:	(bad)  
   1400081c3:	jo     0x14000822e
   1400081c5:	sub    eax,0x772d736d
   1400081ca:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400081d1:	sub    eax,0x69727473
   1400081d6:	outs   dx,BYTE PTR ds:[rsi]
   1400081d7:	addr32 sub eax,0x6f73626f
   1400081dd:	ins    BYTE PTR es:[rdi],dx
   1400081de:	gs je  0x140008246
   1400081e1:	sub    eax,0x312d316c
   1400081e6:	sub    eax,0x6c642e30
   1400081eb:	ins    BYTE PTR es:[rdi],dx
   1400081ec:	add    BYTE PTR [rax],al
   1400081ee:	or     BYTE PTR [rax],al
   1400081f0:	rex.RB js 0x14000825c
   1400081f3:	je     0x140008245
   1400081f5:	jb     0x140008266
   1400081f7:	movsxd esp,DWORD PTR [rbp+0x73]
   1400081fa:	jae    0x1400081fc
   1400081fc:	(bad)  
   1400081fd:	add    BYTE PTR [rdi+0x70],cl
   140008200:	outs   dx,BYTE PTR gs:[rsi]
   140008202:	push   rax
   140008203:	jb     0x140008274
   140008205:	movsxd esp,DWORD PTR [rbp+0x73]
   140008208:	jae    0x14000820a
   14000820a:	(bad)  
   14000820b:	add    BYTE PTR [rbx+0x72],al
   14000820e:	gs (bad) 
   140008210:	je     0x140008277
   140008212:	push   rsp
   140008213:	push   0x64616572
   140008218:	add    BYTE PTR [rax],al
   14000821a:	add    DWORD PTR [rax],eax
   14000821c:	push   rdx
   14000821d:	gs jae 0x14000828f
   140008220:	ins    BYTE PTR es:[rdi],dx
   140008221:	jbe    0x140008288
   140008223:	rex.R
   140008224:	gs ins BYTE PTR es:[rdi],dx
   140008226:	(bad)  
   140008227:	jns    0x140008275
   140008229:	outs   dx,DWORD PTR ds:[rsi]
   14000822a:	(bad)  
   14000822b:	fs gs fs push r8
   140008230:	rex.WB add BYTE PTR [r8],al
   140008233:	add    BYTE PTR [rbp+riz*2+0x6c],al
   140008237:	(bad)  
   140008238:	jns    0x140008286
   14000823a:	outs   dx,DWORD PTR ds:[rsi]
   14000823b:	(bad)  
   14000823c:	fs rex.RX (bad) 
   14000823f:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f6f4865
   140008247:	imul   eax,DWORD PTR [rax],0x0
   14000824a:	(bad)  
   14000824b:	jo     0x1400082b6
   14000824d:	sub    eax,0x772d736d
   140008252:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008259:	sub    eax,0x616c6564
   14000825e:	jns    0x1400082cc
   140008260:	outs   dx,DWORD PTR ds:[rsi]
   140008261:	(bad)  
   140008262:	fs sub eax,0x312d316c
   140008268:	sub    eax,0x6c642e31
   14000826d:	ins    BYTE PTR es:[rdi],dx
   14000826e:	add    BYTE PTR [rax],al
   140008270:	rex.WR add BYTE PTR [rbp+0x6e],r10b
   140008274:	jb     0x1400082db
   140008276:	imul   esi,DWORD PTR [ebx+0x74],0x61577265
   14000827e:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x65520042
   140008286:	imul   esi,DWORD PTR [ebx+0x74],0x61577265
   14000828e:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   140008296:	ins    BYTE PTR es:[edi],dx
   140008298:	gs rex.WRXB (bad) 
   14000829b:	push   0x65
   14000829d:	movsxd esi,DWORD PTR [rax+rax*1+0x61]
   1400082a1:	jo     0x14000830c
   1400082a3:	sub    eax,0x772d736d
   1400082a8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400082af:	sub    eax,0x6e72656b
   1400082b4:	gs ins BYTE PTR es:[rdi],dx
   1400082b6:	xor    esi,DWORD PTR [rdx]
   1400082b8:	sub    eax,0x6167656c
   1400082bd:	movsxd edi,DWORD PTR [rcx+0x2d]
   1400082c0:	ins    BYTE PTR es:[rdi],dx
   1400082c1:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31aff8
   1400082c7:	fs ins BYTE PTR es:[rdi],dx
   1400082c9:	ins    BYTE PTR es:[rdi],dx
   1400082ca:	add    BYTE PTR [rax],al
   1400082cc:	xchg   ecx,eax
   1400082cd:	add    al,0x6d
   1400082cf:	gs ins DWORD PTR es:[rdi],dx
   1400082d1:	movsxd ebp,DWORD PTR [rbp+0x70]
   1400082d4:	add    BYTE PTR [rax],al
   1400082d6:	xchg   edx,eax
   1400082d7:	add    al,0x6d
   1400082d9:	gs ins DWORD PTR es:[rdi],dx
   1400082db:	movsxd esi,DWORD PTR [rax+0x79]
   1400082de:	add    BYTE PTR [rax],al
   1400082e0:	xchg   esi,eax
   1400082e1:	add    al,0x6d
   1400082e3:	gs ins DWORD PTR es:[rdi],dx
   1400082e5:	jae    0x14000834c
   1400082e7:	je     0x1400082e9
	...

Disassembly of section .data:

0000000140009000 <.data>:
   140009000:	add    DWORD PTR [rax],eax
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000900e:	add    BYTE PTR [rax],al
   140009010:	int    0x5d
   140009012:	and    dl,dl
   140009014:	data16 (bad) 
   140009016:	(bad)  
   140009017:	inc    DWORD PTR [rax]
   140009019:	add    BYTE PTR [rax],al
   14000901b:	add    BYTE PTR [rax],al
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	add    al,ah
   140009021:	push   0x14000
   140009026:	add    BYTE PTR [rax],al
   140009028:	movabs al,ds:0x200000000140003d
   140009031:	rex.RXB add BYTE PTR [r8+0x1],r8b
   140009035:	add    BYTE PTR [rax],al
   140009037:	add    BYTE PTR [rax],dh
   140009039:	rex.W add BYTE PTR [rax+0x1],al
	...
   14000904d:	add    BYTE PTR [rax],al
   14000904f:	add    BYTE PTR [rax],dl
   140009051:	rex.RXB add BYTE PTR [r8+0x1],r8b
   140009055:	add    BYTE PTR [rax],al
   140009057:	add    BYTE PTR [rax],dl
   140009059:	rex.RXB add BYTE PTR [r8+0x1],r8b
   14000905d:	add    BYTE PTR [rax],al
   14000905f:	add    BYTE PTR [rax+0x3b],dh
   140009062:	add    BYTE PTR [rax+0x1],al
	...
   1400090ad:	add    BYTE PTR [rax],al
   1400090af:	add    BYTE PTR [rax+0x1400090],dh
   1400090b5:	add    BYTE PTR [rax],al
   1400090b7:	add    BYTE PTR [rax],dl
   1400090b9:	pop    rcx
   1400090ba:	(bad)  
   1400090bb:	mov    dh,0x28
   1400090bd:	rcl    DWORD PTR gs:[rcx],1
   1400090c0:	xchg   esi,eax
   1400090c1:	adc    DWORD PTR [rax],eax
   1400090c3:	add    al,bh
   1400090c5:	(bad)  
   1400090c6:	or     eax,0xd
	...

Disassembly of section .pdata:

000000014000a000 <.pdata>:
   14000a000:	or     BYTE PTR [rax],dl
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	mov    ch,0x11
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	js     0x14000a078
   14000a00a:	add    BYTE PTR [rax],al
   14000a00c:	mov    esp,0x2c000011
   14000a011:	adc    al,BYTE PTR [rax]
   14000a013:	add    BYTE PTR [rsi+rbp*2+0x12340000],bl
   14000a01a:	add    BYTE PTR [rax],al
   14000a01c:	pop    rsi
   14000a01d:	adc    al,BYTE PTR [rax]
   14000a01f:	add    al,dl
   14000a021:	outs   dx,BYTE PTR ds:[rsi]
   14000a022:	add    BYTE PTR [rax],al
   14000a024:	adc    al,BYTE PTR fs:[rax]
   14000a027:	add    BYTE PTR [rsi+0x13],al
   14000a02a:	add    BYTE PTR [rax],al
   14000a02c:	lock outs dx,BYTE PTR ds:[rsi]
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	adc    r8,QWORD PTR [rax]
   14000a033:	add    BYTE PTR [rsi],dl
   14000a035:	adc    al,0x0
   14000a037:	add    BYTE PTR [rdi+rbp*2],al
   14000a03a:	add    BYTE PTR [rax],al
   14000a03c:	sbb    al,0x14
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	push   rbx
   14000a041:	adc    eax,0x6f140000
   14000a046:	add    BYTE PTR [rax],al
   14000a048:	pop    rsp
   14000a049:	adc    eax,0x16c30000
   14000a04e:	add    BYTE PTR [rax],al
   14000a050:	xor    BYTE PTR [rdi+0x0],ch
   14000a053:	add    ah,cl
   14000a055:	(bad)  
   14000a056:	add    BYTE PTR [rax],al
   14000a058:	cmp    eax,0x4c000019
   14000a05d:	outs   dx,DWORD PTR ds:[rsi]
   14000a05e:	add    BYTE PTR [rax],al
   14000a060:	sbb    DWORD PTR [rax],r8d
   14000a063:	add    al,cl
   14000a065:	sbb    al,BYTE PTR [rax]
   14000a067:	add    BYTE PTR [rdi+rbp*2+0x0],dh
   14000a06b:	add    al,dl
   14000a06d:	sbb    al,BYTE PTR [rax]
   14000a06f:	add    BYTE PTR [rdi+0x21],al
   14000a072:	add    BYTE PTR [rax],al
   14000a074:	nop
   14000a075:	outs   dx,DWORD PTR ds:[rsi]
   14000a076:	add    BYTE PTR [rax],al
   14000a078:	push   rax
   14000a079:	and    DWORD PTR [rax],eax
   14000a07b:	add    BYTE PTR [rip+0xffffffffb8000022],al        # 0xf800a0a3
   14000a081:	outs   dx,DWORD PTR ds:[rsi]
   14000a082:	add    BYTE PTR [rax],al
   14000a084:	or     al,0x22
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	mov    dh,0x24
   14000a08a:	add    BYTE PTR [rax],al
   14000a08c:	int3   
   14000a08d:	outs   dx,DWORD PTR ds:[rsi]
   14000a08e:	add    BYTE PTR [rax],al
   14000a090:	mov    esp,0x40000024
   14000a095:	add    BYTE PTR es:[rax],al
   14000a098:	lock outs dx,DWORD PTR ds:[rsi]
   14000a09a:	add    BYTE PTR [rax],al
   14000a09c:	rex.W
   14000a09d:	add    BYTE PTR es:[rax],al
   14000a0a0:	in     eax,0x2e
   14000a0a2:	add    BYTE PTR [rax],al
   14000a0a4:	or     al,0x70
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	in     al,dx
   14000a0a9:	add    BYTE PTR cs:[rax],al
   14000a0ac:	or     dh,BYTE PTR [rcx]
   14000a0ae:	add    BYTE PTR [rax],al
   14000a0b0:	sub    BYTE PTR [rax+0x0],dh
   14000a0b3:	add    BYTE PTR [rax],dl
   14000a0b5:	xor    DWORD PTR [rax],eax
   14000a0b7:	add    BYTE PTR [rax+0x4c000032],ah
   14000a0bd:	jo     0x14000a0bf
   14000a0bf:	add    BYTE PTR [rax-0x24ffffce],ch
   14000a0c5:	xor    eax,DWORD PTR [rax]
   14000a0c7:	add    BYTE PTR [rax-0x1bffff90],dl
   14000a0cd:	xor    eax,DWORD PTR [rax]
   14000a0cf:	add    BYTE PTR [rdx+0x35],ah
   14000a0d2:	add    BYTE PTR [rax],al
   14000a0d4:	mov    al,0x70
   14000a0d6:	add    BYTE PTR [rax],al
   14000a0d8:	push   0x78000035
   14000a0dd:	add    BYTE PTR ss:[rax],al
   14000a0e0:	int3   
   14000a0e1:	jo     0x14000a0e3
   14000a0e3:	add    BYTE PTR [rax+0x7a000036],al
   14000a0e9:	cmp    BYTE PTR [rax],al
   14000a0eb:	add    al,bl
   14000a0ed:	jo     0x14000a0ef
   14000a0ef:	add    BYTE PTR [rax-0x41ffffc8],al
   14000a0f5:	cmp    al,BYTE PTR [rax]
   14000a0f7:	add    ah,bh
   14000a0f9:	jo     0x14000a0fb
   14000a0fb:	add    al,dl
   14000a0fd:	cmp    al,BYTE PTR [rax]
   14000a0ff:	add    BYTE PTR [rdx+0x3b],ah
   14000a102:	add    BYTE PTR [rax],al
   14000a104:	adc    BYTE PTR [rcx+0x0],dh
   14000a107:	add    BYTE PTR [rbx+rdi*1+0x0],bh
   14000a10b:	add    BYTE PTR [rax+0x7400003c],bh
   14000a111:	outs   dx,DWORD PTR ds:[rsi]
   14000a112:	add    BYTE PTR [rax],al
   14000a114:	sar    BYTE PTR [rax+rax*1],0x0
   14000a118:	rex.R cmp eax,0x6fb80000
   14000a11e:	add    BYTE PTR [rax],al
   14000a120:	push   rax
   14000a121:	cmp    eax,0x3d8b0000
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	sbb    BYTE PTR [rcx+0x0],dh
   14000a12b:	add    BYTE PTR [rax-0x1bffffc3],dh
   14000a131:	cmp    eax,0x71200000
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	in     al,dx
   14000a139:	cmp    eax,0x3e5e0000
   14000a13e:	add    BYTE PTR [rax],al
   14000a140:	add    al,0x6f
   14000a142:	add    BYTE PTR [rax],al
   14000a144:	fs add BYTE PTR ds:[rax],al
   14000a148:	xchg   BYTE PTR [rax+0x0],al
   14000a14b:	add    BYTE PTR [rax],ch
   14000a14d:	jno    0x14000a14f
   14000a14f:	add    BYTE PTR [rax+rax*2+0x41c30000],cl
   14000a156:	add    BYTE PTR [rax],al
   14000a158:	rex.WR jno 0x14000a15b
   14000a15b:	add    ah,cl
   14000a15d:	add    BYTE PTR [r8],al
   14000a160:	(bad)  
   14000a161:	rex.XB add BYTE PTR [r8],al
   14000a164:	push   0xffffffffdc000071
   14000a169:	rex.XB add BYTE PTR [r8],al
   14000a16c:	std    
   14000a16d:	rex.RX add BYTE PTR [rax],r8b
   14000a170:	test   BYTE PTR [rcx+0x0],dh
   14000a173:	add    BYTE PTR [rax],ah
   14000a175:	rex.RXB add BYTE PTR [r8],r8b
   14000a178:	and    BYTE PTR [rax+0x0],cl
   14000a17b:	add    BYTE PTR [rax],dh
   14000a17d:	outs   dx,DWORD PTR ds:[rsi]
   14000a17e:	add    BYTE PTR [rax],al
   14000a180:	or     BYTE PTR [rax+0x0],0x0
   14000a184:	(bad)  [rax+0x0]
   14000a187:	add    BYTE PTR [rax-0x7ffff8f],ah
   14000a18d:	rex.W add BYTE PTR [rax],al
   14000a190:	(bad)  
   14000a191:	rex.WX add BYTE PTR [rax],al
   14000a194:	lods   al,BYTE PTR ds:[rsi]
   14000a195:	jno    0x14000a197
   14000a197:	add    BYTE PTR [rax],dh
   14000a199:	rex.WX add BYTE PTR [rax],al
   14000a19c:	(bad)  
   14000a19d:	rex.WX add BYTE PTR [rax],al
   14000a1a0:	enter  0x71,0x0
   14000a1a4:	add    BYTE PTR [rbx+0x0],cl
   14000a1a7:	add    BYTE PTR [rbx+0x4b],ch
   14000a1aa:	add    BYTE PTR [rax],al
   14000a1ac:	(bad)  
   14000a1ad:	jno    0x14000a1af
   14000a1af:	add    BYTE PTR [rax+0x1f00004b],al
   14000a1b5:	rex.WR add BYTE PTR [rax],r8b
   14000a1b8:	(bad)  
   14000a1b9:	jno    0x14000a1bb
   14000a1bb:	add    BYTE PTR [rax],dh
   14000a1bd:	rex.WR add BYTE PTR [rax],r8b
   14000a1c0:	ror    BYTE PTR [rax+rax*1+0x0],0xdc
   14000a1c5:	jno    0x14000a1c7
   14000a1c7:	add    al,dl
   14000a1c9:	rex.WR add BYTE PTR [rax],r8b
   14000a1cc:	cmp    al,0x4d
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	adc    BYTE PTR [rcx+0x0],dh
   14000a1d3:	add    BYTE PTR [rax+0x4d],dl
   14000a1d6:	add    BYTE PTR [rax],al
   14000a1d8:	pop    rsi
   14000a1d9:	rex.WRB add BYTE PTR [r8],r8b
   14000a1dc:	sbb    BYTE PTR [rcx+0x0],dh
   14000a1df:	add    BYTE PTR [rax+0x4d],dh
   14000a1e2:	add    BYTE PTR [rax],al
   14000a1e4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a1e5:	rex.WRB add BYTE PTR [r8],r8b
   14000a1e8:	call   0xec00a25e
   14000a1ed:	rex.WRB add BYTE PTR [r8],r8b
   14000a1f0:	loope  0x14000a23f
   14000a1f2:	add    BYTE PTR [rax],al
   14000a1f4:	sbb    BYTE PTR [rcx+0x0],dh
   14000a1f7:	add    ah,dh
   14000a1f9:	rex.WRB add BYTE PTR [r8],r8b
   14000a1fc:	sub    eax,0xa000004e
   14000a201:	jno    0x14000a203
   14000a203:	add    BYTE PTR [rax+0x4e],al
   14000a206:	add    BYTE PTR [rax],al
   14000a208:	cmovg  eax,DWORD PTR [rax]
   14000a20b:	add    BYTE PTR [rax],bl
   14000a20d:	jno    0x14000a20f
   14000a20f:	add    BYTE PTR [rax],ah
   14000a211:	rex.WRXB add BYTE PTR [r8],r8b
   14000a214:	imul   ecx,DWORD PTR [rdi+0x0],0x71e800
   14000a21b:	add    BYTE PTR [rax+0x4f],dh
   14000a21e:	add    BYTE PTR [rax],al
   14000a220:	loope  0x14000a273
   14000a222:	add    BYTE PTR [rax],al
   14000a224:	lock jno 0x14000a227
   14000a227:	add    al,dh
   14000a229:	push   rcx
   14000a22a:	add    BYTE PTR [rax],al
   14000a22c:	add    dl,BYTE PTR [rdx+0x0]
   14000a22f:	add    BYTE PTR [rax],bl
   14000a231:	jno    0x14000a233
   14000a233:	add    BYTE PTR [rax],ah
   14000a235:	push   rdx
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	ds push rdx
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	sub    BYTE PTR [rdx+0x0],dh
   14000a23f:	add    BYTE PTR [rdx+rdx*2+0x0],bl
   14000a243:	add    BYTE PTR [rax+0x10000052],dl
   14000a249:	jno    0x14000a24b
   14000a24b:	add    BYTE PTR [rax+0x11000052],ah
   14000a251:	push   rsp
   14000a252:	add    BYTE PTR [rax],al
   14000a254:	xor    al,0x72
   14000a256:	add    BYTE PTR [rax],al
   14000a258:	sbb    BYTE PTR [rax+rax*1+0x0],dl
   14000a25c:	andnps xmm0,XMMWORD PTR [rax]
   14000a25f:	add    BYTE PTR [rdx+rsi*2],ch
   14000a262:	add    BYTE PTR [rax],al
   14000a264:	xor    BYTE PTR [rbp+0x0],dl
   14000a267:	add    BYTE PTR [rcx+0x55],ch
   14000a26a:	add    BYTE PTR [rax],al
   14000a26c:	sbb    BYTE PTR [rcx+0x0],dh
   14000a26f:	add    BYTE PTR [rax+0x55],dh
   14000a272:	add    BYTE PTR [rax],al
   14000a274:	mov    BYTE PTR [rbp+0x0],dl
   14000a277:	add    BYTE PTR [rax],bl
   14000a279:	jno    0x14000a27b
   14000a27b:	add    BYTE PTR [rbp+rdx*2+0x55f00000],bl
   14000a282:	add    BYTE PTR [rax],al
   14000a284:	cmp    al,0x72
   14000a286:	add    BYTE PTR [rax],al
   14000a288:	clc    
   14000a289:	push   rbp
   14000a28a:	add    BYTE PTR [rax],al
   14000a28c:	cmp    eax,0x10000056
   14000a291:	jno    0x14000a293
   14000a293:	add    BYTE PTR [rax-0x12ffffaa],ah
   14000a299:	push   rsi
   14000a29a:	add    BYTE PTR [rax],al
   14000a29c:	pop    rsp
   14000a29d:	jb     0x14000a29f
   14000a29f:	add    BYTE PTR [rdi+rdx*2],dh
   14000a2a2:	add    BYTE PTR [rax],al
   14000a2a4:	add    al,0x58
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	xor    BYTE PTR [rdx+0x0],0x0
   14000a2ac:	push   rax
   14000a2ad:	pop    rax
   14000a2ae:	add    BYTE PTR [rax],al
   14000a2b0:	(bad)  
   14000a2b1:	pop    rax
   14000a2b2:	add    BYTE PTR [rax],al
   14000a2b4:	xchg   esp,eax
   14000a2b5:	jb     0x14000a2b7
   14000a2b7:	add    BYTE PTR [rax+0x7000059],dl
   14000a2bd:	pop    rdx
   14000a2be:	add    BYTE PTR [rax],al
   14000a2c0:	pushf  
   14000a2c1:	jb     0x14000a2c3
   14000a2c3:	add    BYTE PTR [rdx+rbx*2+0x0],bh
   14000a2c7:	add    BYTE PTR [rcx+0x1800005a],bl
   14000a2cd:	jno    0x14000a2cf
   14000a2cf:	add    BYTE PTR [rax+0x300005a],ah
   14000a2d5:	pop    rbx
   14000a2d6:	add    BYTE PTR [rax],al
   14000a2d8:	adc    BYTE PTR [rcx+0x0],dh
   14000a2db:	add    BYTE PTR [rbx+rbx*2],cl
   14000a2de:	add    BYTE PTR [rax],al
   14000a2e0:	movabs ds:0xf0000072a400005b,al
   14000a2e9:	pop    rbx
   14000a2ea:	add    BYTE PTR [rax],al
   14000a2ec:	repnz pop rbx
   14000a2ee:	add    BYTE PTR [rax],al
   14000a2f0:	nop
   14000a2f1:	jb     0x14000a2f3
   14000a2f3:	add    BYTE PTR [rax],dl
   14000a2f5:	pop    rsp
   14000a2f6:	add    BYTE PTR [rax],al
   14000a2f8:	pop    rbp
   14000a2f9:	pop    rsp
   14000a2fa:	add    BYTE PTR [rax],al
   14000a2fc:	shl    BYTE PTR [rdx+0x0],0x0
   14000a300:	pop    sp
   14000a302:	add    BYTE PTR [rax],al
   14000a304:	xchg   DWORD PTR [rax+rax*1+0x0],ebx
   14000a308:	enter  0x6e,0x0
   14000a30c:	lea    ebx,[rax+rax*1+0x0]
   14000a310:	lods   eax,DWORD PTR ds:[rsi]
   14000a311:	pop    rsp
   14000a312:	add    BYTE PTR [rax],al
   14000a314:	enter  0x6e,0x0
   14000a318:	lods   eax,DWORD PTR ds:[rsi]
   14000a319:	pop    rsp
   14000a31a:	add    BYTE PTR [rax],al
   14000a31c:	int    0x5c
   14000a31e:	add    BYTE PTR [rax],al
   14000a320:	enter  0x6e,0x0
   14000a324:	int    0x5c
   14000a326:	add    BYTE PTR [rax],al
   14000a328:	in     eax,dx
   14000a329:	pop    rsp
   14000a32a:	add    BYTE PTR [rax],al
   14000a32c:	enter  0x6e,0x0
   14000a330:	repz pop rsp
   14000a332:	add    BYTE PTR [rax],al
   14000a334:	adc    DWORD PTR [rbp+0x0],ebx
   14000a337:	add    al,cl
   14000a339:	outs   dx,BYTE PTR ds:[rsi]
   14000a33a:	add    BYTE PTR [rax],al
   14000a33c:	and    BYTE PTR [rbp+0x0],bl
   14000a33f:	add    BYTE PTR [rax+0x5d],al
   14000a342:	add    BYTE PTR [rax],al
   14000a344:	enter  0x6e,0x0

Disassembly of section .didat:

000000014000b000 <.didat>:
   14000b000:	xor    BYTE PTR [rax+0x0],bl
   14000b003:	rex add DWORD PTR [rax],eax
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	rcr    BYTE PTR [rax+0x0],1
   14000b00b:	rex add DWORD PTR [rax],eax
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	lock pop rax
   14000b012:	add    BYTE PTR [rax+0x1],al
   14000b015:	add    BYTE PTR [rax],al
   14000b017:	add    BYTE PTR [rax],dl
   14000b019:	pop    rcx
   14000b01a:	add    BYTE PTR [rax+0x1],al
   14000b01d:	add    BYTE PTR [rax],al
   14000b01f:	add    BYTE PTR [rax],dh
   14000b021:	pop    rcx
   14000b022:	add    BYTE PTR [rax+0x1],al
   14000b025:	add    BYTE PTR [rax],al
   14000b027:	add    BYTE PTR [rax+0x59],dl
   14000b02a:	add    BYTE PTR [rax+0x1],al
	...
   14000b035:	add    BYTE PTR [rax],al
   14000b037:	add    BYTE PTR [rax],dl
   14000b039:	pop    rdx
   14000b03a:	add    BYTE PTR [rax+0x1],al
   14000b03d:	add    BYTE PTR [rax],al
   14000b03f:	add    BYTE PTR [rax],dh
   14000b041:	pop    rdx
   14000b042:	add    BYTE PTR [rax+0x1],al
   14000b045:	add    BYTE PTR [rax],al
   14000b047:	add    BYTE PTR [rax+0x5a],dl
   14000b04a:	add    BYTE PTR [rax+0x1],al
   14000b04d:	add    BYTE PTR [rax],al
   14000b04f:	add    BYTE PTR [rax+0x59],dh
   14000b052:	add    BYTE PTR [rax+0x1],al
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c00c:	add    eax,DWORD PTR [rax]
   14000c00e:	add    al,BYTE PTR [rax]
   14000c010:	rol    BYTE PTR [rcx],1
   14000c012:	add    BYTE PTR [rax-0x7fffffc8],al
   14000c018:	test   al,0x1
   14000c01a:	add    BYTE PTR [rax-0x7fffffa8],al
   14000c020:	rol    BYTE PTR [rcx],0x0
   14000c023:	xor    BYTE PTR [rax+0x0],0x0
   14000c027:	adc    BYTE PTR [rax],0x0
   14000c02a:	add    BYTE PTR [rax],al
   14000c02c:	mov    BYTE PTR [rax],al
   14000c02e:	add    BYTE PTR [rax+0x18],al
   14000c034:	movabs al,ds:0x800000
	...
   14000c045:	add    BYTE PTR [rdx],al
   14000c047:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000c04b:	add    BYTE PTR [rax+0x65800000],bh
   14000c051:	add    BYTE PTR [rax],al
   14000c053:	add    al,dl
   14000c055:	add    BYTE PTR [rax],al
   14000c057:	add    BYTE PTR [rax],0x0
	...
   14000c066:	add    DWORD PTR [rax],eax
   14000c068:	add    DWORD PTR [rax],eax
   14000c06a:	add    BYTE PTR [rax],al
   14000c06c:	call   0x14080c071
	...
   14000c07d:	add    BYTE PTR [rcx],al
   14000c07f:	add    BYTE PTR [rcx],al
   14000c081:	add    BYTE PTR [rax],al
   14000c083:	add    BYTE PTR [rax],al
   14000c085:	add    DWORD PTR [rax],eax
   14000c087:	add    BYTE PTR [rax],0x0
	...
   14000c096:	add    DWORD PTR [rax],eax
   14000c098:	add    DWORD PTR [rax],eax
   14000c09a:	add    BYTE PTR [rax],al
   14000c09c:	sbb    BYTE PTR [rcx],al
   14000c09e:	add    BYTE PTR [rax+0x0],al
	...
   14000c0ac:	add    BYTE PTR [rax],al
   14000c0ae:	add    DWORD PTR [rax],eax
   14000c0b0:	add    DWORD PTR [rax],eax
   14000c0b2:	add    BYTE PTR [rax],al
   14000c0b4:	xor    BYTE PTR [rcx],al
   14000c0b6:	add    BYTE PTR [rax+0x0],al
	...
   14000c0c4:	add    BYTE PTR [rax],al
   14000c0c6:	add    DWORD PTR [rax],eax
   14000c0c8:	or     DWORD PTR [rax+rax*1],eax
   14000c0cb:	add    BYTE PTR [rax+0x1],cl
	...
   14000c0de:	add    DWORD PTR [rax],eax
   14000c0e0:	or     DWORD PTR [rax+rax*1],eax
   14000c0e3:	add    BYTE PTR [rax+0x1],bl
	...
   14000c0f6:	add    DWORD PTR [rax],eax
   14000c0f8:	or     DWORD PTR [rax+rax*1],eax
   14000c0fb:	add    BYTE PTR [rax+0x1],ch
	...
   14000c10e:	add    DWORD PTR [rax],eax
   14000c110:	or     DWORD PTR [rax+rax*1],eax
   14000c113:	add    BYTE PTR [rax+0x1],bh
	...
   14000c126:	add    DWORD PTR [rax],eax
   14000c128:	or     DWORD PTR [rax+rax*1],eax
   14000c12b:	add    BYTE PTR [rax+0x1],cl
	...
   14000c13d:	add    BYTE PTR [rcx],al
   14000c13f:	add    BYTE PTR [rcx],cl
   14000c141:	add    al,0x0
   14000c143:	add    BYTE PTR [rax+0x70000001],bl
   14000c149:	fiadd  WORD PTR [rax]
   14000c14b:	add    BYTE PTR [rbp+0x1],dh
   14000c151:	add    BYTE PTR [rax],al
   14000c153:	add    BYTE PTR [rax],al
   14000c155:	add    BYTE PTR [rax],al
   14000c157:	add    BYTE PTR [rax],ch
   14000c159:	loopne 0x14000c15b
   14000c15b:	add    BYTE PTR [rip+0x1],dl        # 0x14000c162
   14000c161:	add    BYTE PTR [rax],al
   14000c163:	add    BYTE PTR [rax],al
   14000c165:	add    BYTE PTR [rax],al
   14000c167:	add    BYTE PTR [rax],ch
   14000c169:	enter  0x0,0x1b
	...
   14000c175:	add    BYTE PTR [rax],al
   14000c177:	add    BYTE PTR [rax-0x38],cl
   14000c17a:	add    BYTE PTR [rax],al
   14000c17c:	sub    BYTE PTR [rsi],dl
	...
   14000c186:	add    BYTE PTR [rax],al
   14000c188:	add    ah,0x0
   14000c18b:	add    BYTE PTR [rbx+rax*1+0x0],ah
   14000c192:	add    BYTE PTR [rax],al
   14000c194:	add    BYTE PTR [rax],al
   14000c196:	add    BYTE PTR [rax],al
   14000c198:	lock rol DWORD PTR [rax],0x0
   14000c19c:	nop
   14000c19d:	add    al,BYTE PTR [rax]
	...
   14000c1a7:	add    BYTE PTR [rbx],cl
   14000c1a9:	add    BYTE PTR [rax+rax*1+0x45],dl
   14000c1ad:	add    BYTE PTR [rax+0x0],bl
   14000c1b0:	push   rsp
   14000c1b1:	add    BYTE PTR [rcx+0x0],cl
   14000c1b4:	rex.WRX add BYTE PTR [rbx+0x0],r8b
   14000c1b8:	rex.WR add BYTE PTR [rbp+0x0],r10b
   14000c1bc:	add    BYTE PTR [rbp+0x0],r8b
   14000c1c0:	(bad)  
   14000c1c1:	add    BYTE PTR [rax+rax*1+0x59],dl
   14000c1c5:	add    BYTE PTR [rax+0x0],dl
   14000c1c8:	add    BYTE PTR [r8+rax*1+0x49],r9b
   14000c1cd:	add    BYTE PTR [rdx+0x0],al
   14000c1d0:	or     BYTE PTR [rax],al
   14000c1d2:	push   rdx
   14000c1d3:	add    BYTE PTR [rbp+0x0],al
   14000c1d6:	rex.RXB add BYTE PTR [r9+0x0],r9b
   14000c1da:	push   rbx
   14000c1db:	add    BYTE PTR [rax+rax*1+0x52],dl
   14000c1df:	add    BYTE PTR [rcx+0x0],bl
	...
   14000c1ee:	add    BYTE PTR [rax],al
   14000c1f0:	cmp    al,0x3f
   14000c1f2:	js     0x14000c261
   14000c1f4:	ins    BYTE PTR es:[rdi],dx
   14000c1f5:	and    BYTE PTR [rsi+0x65],dh
   14000c1f8:	jb     0x14000c26d
   14000c1fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c201:	xor    BYTE PTR [rdx],ah
   14000c203:	and    BYTE PTR [rbp+0x6e],ah
   14000c206:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000c209:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000c210:	rex.RX sub eax,0x73202238
   14000c216:	je     0x14000c279
   14000c218:	outs   dx,BYTE PTR ds:[rsi]
   14000c219:	fs (bad) 
   14000c21b:	ins    BYTE PTR es:[rdi],dx
   14000c21c:	outs   dx,DWORD PTR ds:[rsi]
   14000c21d:	outs   dx,BYTE PTR ds:[rsi]
   14000c21e:	gs cmp eax,0x73657922
   14000c224:	and    bh,BYTE PTR [rdi]
   14000c226:	ds or  eax,0x2d213c0a
   14000c22c:	sub    eax,0x706f4320
   14000c231:	jns    0x14000c2a5
   14000c233:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000c23a:	sub    DWORD PTR [rax],esp
   14000c23c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c244:	je     0x14000c266
   14000c246:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c248:	jb     0x14000c2ba
   14000c24a:	outs   dx,DWORD PTR ds:[rsi]
   14000c24b:	jb     0x14000c2ae
   14000c24d:	je     0x14000c2b8
   14000c24f:	outs   dx,DWORD PTR ds:[rsi]
   14000c250:	outs   dx,BYTE PTR ds:[rsi]
   14000c251:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e0084
   14000c257:	cmp    al,0x61
   14000c259:	jae    0x14000c2ce
   14000c25b:	gs ins DWORD PTR es:[rdi],dx
   14000c25d:	(bad)  
   14000c25e:	ins    BYTE PTR es:[rdi],dx
   14000c25f:	jns    0x14000c281
   14000c261:	js     0x14000c2d0
   14000c263:	ins    BYTE PTR es:[rdi],dx
   14000c264:	outs   dx,BYTE PTR ds:[rsi]
   14000c265:	jae    0x14000c2a4
   14000c267:	and    dh,BYTE PTR [rbp+0x72]
   14000c26a:	outs   dx,BYTE PTR ds:[rsi]
   14000c26b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c26e:	push   0x73616d65
   14000c273:	sub    eax,0x7263696d
   14000c278:	outs   dx,DWORD PTR ds:[rsi]
   14000c279:	jae    0x14000c2ea
   14000c27b:	data16 je 0x14000c2ab
   14000c27e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c281:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c284:	ins    DWORD PTR es:[rdi],dx
   14000c285:	cs jbe 0x14000c2b9
   14000c288:	and    ah,BYTE PTR [rax]
   14000c28a:	ins    DWORD PTR es:[rdi],dx
   14000c28b:	(bad)  
   14000c28c:	outs   dx,BYTE PTR ds:[rsi]
   14000c28d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000c294:	jb     0x14000c309
   14000c296:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c29d:	xor    BYTE PTR [rdx],ah
   14000c29f:	and    BYTE PTR ds:[rip+0x3c20200a],cl        # 0x17c20e2b0
   14000c2a6:	(bad)  
   14000c2a7:	jae    0x14000c31c
   14000c2a9:	gs ins DWORD PTR es:[rdi],dx
   14000c2ab:	(bad)  
   14000c2ac:	ins    BYTE PTR es:[rdi],dx
   14000c2ad:	jns    0x14000c2f8
   14000c2af:	fs outs dx,BYTE PTR gs:[rsi]
   14000c2b2:	je     0x14000c31d
   14000c2b4:	je     0x14000c32f
   14000c2b6:	and    BYTE PTR [rsi+0x65],dh
   14000c2b9:	jb     0x14000c32e
   14000c2bb:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c2c2:	xor    BYTE PTR [rsi],ch
   14000c2c4:	xor    BYTE PTR [rsi],ch
   14000c2c6:	xor    BYTE PTR [rdx],ah
   14000c2c8:	and    BYTE PTR [rax+0x72],dh
   14000c2cb:	outs   dx,DWORD PTR ds:[rsi]
   14000c2cc:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c2cf:	jae    0x14000c340
   14000c2d1:	jb     0x14000c314
   14000c2d3:	jb     0x14000c338
   14000c2d5:	push   0x63657469
   14000c2da:	je     0x14000c351
   14000c2dc:	jb     0x14000c343
   14000c2de:	cmp    eax,0x646d6122
   14000c2e3:	ss xor al,0x22
   14000c2e6:	and    BYTE PTR [rsi+0x61],ch
   14000c2e9:	ins    DWORD PTR es:[rdi],dx
   14000c2ea:	gs cmp eax,0x63694d22
   14000c2f0:	jb     0x14000c361
   14000c2f2:	jae    0x14000c363
   14000c2f4:	data16 je 0x14000c324
   14000c2f7:	push   rdi
   14000c2f8:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14000c2ff:	push   rbp
   14000c300:	push   rax
   14000c301:	outs   dx,BYTE PTR ds:[rsi]
   14000c302:	push   rax
   14000c303:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c305:	outs   dx,BYTE PTR ds:[rsi]
   14000c306:	je     0x14000c32a
   14000c308:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000c30c:	gs cmp eax,0x6e697722
   14000c312:	xor    esi,DWORD PTR [rdx]
   14000c314:	and    ch,BYTE PTR [rdi]
   14000c316:	and    BYTE PTR ds:[rip+0x3c20200a],cl        # 0x17c20e327
   14000c31d:	fs gs jae 0x14000c384
   14000c321:	jb     0x14000c38c
   14000c323:	jo     0x14000c399
   14000c325:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e50553e
   14000c32c:	push   rax
   14000c32d:	and    BYTE PTR [rbx+0x6f],ah
   14000c330:	outs   dx,BYTE PTR ds:[rsi]
   14000c331:	je     0x14000c394
   14000c333:	imul   ebp,DWORD PTR [rsi+0x65],0x642f3c72
   14000c33a:	gs jae 0x14000c3a0
   14000c33d:	jb     0x14000c3a8
   14000c33f:	jo     0x14000c3b5
   14000c341:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0d203e
   14000c348:	or     eax,0x3c20200a
   14000c34d:	and    DWORD PTR [rip+0x6449202d],ebp        # 0x1a449e380
   14000c353:	outs   dx,BYTE PTR gs:[rsi]
   14000c355:	je     0x14000c3c0
   14000c357:	data16 jns 0x14000c37a
   14000c35a:	je     0x14000c3c4
   14000c35c:	and    BYTE PTR gs:[rcx+0x70],ah
   14000c360:	jo     0x14000c3ce
   14000c362:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000c369:	and    BYTE PTR [rbx+0x65],dh
   14000c36c:	movsxd esi,DWORD PTR [rbp+0x72]
   14000c36f:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x75716572
   14000c377:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
   14000c37e:	jae    0x14000c3ae
   14000c380:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e01b3
   14000c386:	or     eax,0x3c20200a
   14000c38b:	je     0x14000c3ff
   14000c38d:	jne    0x14000c402
   14000c38f:	je     0x14000c3da
   14000c391:	outs   dx,BYTE PTR ds:[rsi]
   14000c392:	outs   dx,WORD PTR ds:[rsi]
   14000c394:	and    BYTE PTR [rax+0x6d],bh
   14000c397:	ins    BYTE PTR es:[rdi],dx
   14000c398:	outs   dx,BYTE PTR ds:[rsi]
   14000c399:	jae    0x14000c3d8
   14000c39b:	and    dh,BYTE PTR [rbp+0x72]
   14000c39e:	outs   dx,BYTE PTR ds:[rsi]
   14000c39f:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c3a2:	push   0x73616d65
   14000c3a7:	sub    eax,0x7263696d
   14000c3ac:	outs   dx,DWORD PTR ds:[rsi]
   14000c3ad:	jae    0x14000c41e
   14000c3af:	data16 je 0x14000c3df
   14000c3b2:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c3b5:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c3b8:	ins    DWORD PTR es:[rdi],dx
   14000c3b9:	cs jbe 0x14000c3ef
   14000c3bc:	and    bh,BYTE PTR [rsi]
   14000c3be:	or     eax,0x2020200a
   14000c3c3:	and    BYTE PTR [rbx+rsi*2],bh
   14000c3c6:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000c3ca:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000c3d2:	and    BYTE PTR [rax],ah
   14000c3d4:	and    BYTE PTR [rax],ah
   14000c3d6:	cmp    al,0x72
   14000c3d8:	gs jno 0x14000c450
   14000c3db:	gs jae 0x14000c452
   14000c3de:	gs fs push rax
   14000c3e1:	jb     0x14000c44c
   14000c3e3:	jbe    0x14000c44e
   14000c3e5:	ins    BYTE PTR es:[rdi],dx
   14000c3e6:	gs addr32 gs jae 0x14000c429
   14000c3eb:	or     eax,0x2020200a
   14000c3f0:	and    BYTE PTR [rax],ah
   14000c3f2:	and    BYTE PTR [rax],ah
   14000c3f4:	and    BYTE PTR [rdx+rsi*2],bh
   14000c3f7:	gs jno 0x14000c46f
   14000c3fa:	gs jae 0x14000c471
   14000c3fd:	gs fs rex.RB js 0x14000c467
   14000c402:	movsxd esi,DWORD PTR [rbp+0x74]
   14000c405:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000c40c:	ins    BYTE PTR es:[rdi],dx
   14000c40d:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000c411:	gs ins BYTE PTR es:[rdi],dx
   14000c413:	cmp    eax,0x49736122
   14000c418:	outs   dx,BYTE PTR ds:[rsi]
   14000c419:	jbe    0x14000c48a
   14000c41b:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000c41f:	and    BYTE PTR [rbp+0x69],dh
   14000c422:	movsxd esp,DWORD PTR [r11+0x65]
   14000c426:	jae    0x14000c49b
   14000c428:	cmp    eax,0x6c616622
   14000c42d:	jae    0x14000c494
   14000c42f:	and    ch,BYTE PTR [rdi]
   14000c431:	ds or  eax,0x2020200a
   14000c437:	and    BYTE PTR [rax],ah
   14000c439:	and    BYTE PTR [rdi+rbp*1],bh
   14000c43c:	jb     0x14000c4a3
   14000c43e:	jno    0x14000c4b5
   14000c440:	gs jae 0x14000c4b7
   14000c443:	gs fs push rax
   14000c446:	jb     0x14000c4b1
   14000c448:	jbe    0x14000c4b3
   14000c44a:	ins    BYTE PTR es:[rdi],dx
   14000c44b:	gs addr32 gs jae 0x14000c48e
   14000c450:	or     eax,0x2020200a
   14000c455:	and    BYTE PTR [rdi+rbp*1],bh
   14000c458:	jae    0x14000c4bf
   14000c45a:	movsxd esi,DWORD PTR [rbp+0x72]
   14000c45d:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000c465:	cmp    al,0x2f
   14000c467:	je     0x14000c4db
   14000c469:	jne    0x14000c4de
   14000c46b:	je     0x14000c4b6
   14000c46d:	outs   dx,BYTE PTR ds:[rsi]
   14000c46e:	outs   dx,WORD PTR ds:[rsi]
   14000c470:	ds or  eax,0x612f3c0a
   14000c476:	jae    0x14000c4eb
   14000c478:	gs ins DWORD PTR es:[rdi],dx
   14000c47a:	(bad)  
   14000c47b:	ins    BYTE PTR es:[rdi],dx
   14000c47c:	jns    0x14000c4bc
   14000c47e:	or     eax,0x3403a40a
   14000c483:	add    BYTE PTR [rax],al
   14000c485:	add    BYTE PTR [rsi+0x0],dl
   14000c488:	push   rbx
   14000c489:	add    BYTE PTR [rdi+0x0],bl
   14000c48c:	push   rsi
   14000c48d:	add    BYTE PTR [rbp+0x0],al
   14000c490:	push   rdx
   14000c491:	add    BYTE PTR [rbx+0x0],dl
   14000c494:	rex.WB add BYTE PTR [r15+0x0],cl
   14000c498:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14000c49c:	rex.WB add BYTE PTR [r14+0x0],cl
   14000c4a0:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14000c4a4:	add    BYTE PTR [rax],al
   14000c4a6:	add    BYTE PTR [rax],al
   14000c4a8:	mov    ebp,0xfeef04
   14000c4ad:	add    BYTE PTR [rcx],al
   14000c4af:	add    BYTE PTR [rax],al
   14000c4b1:	add    BYTE PTR [rdx],cl
   14000c4b3:	add    cl,bl
   14000c4b5:	rex.X add BYTE PTR [rax],bpl
   14000c4b8:	add    BYTE PTR [rax],al
   14000c4ba:	or     al,BYTE PTR [rax]
   14000c4bc:	fld    DWORD PTR [rdx+0x0]
   14000c4bf:	sub    BYTE PTR [rdi],bh
   14000c4c1:	add    BYTE PTR [rax],al
   14000c4c3:	add    BYTE PTR [rax],al
   14000c4c5:	add    BYTE PTR [rax],al
   14000c4c7:	add    BYTE PTR [rax+rax*1],al
   14000c4ca:	add    al,0x0
   14000c4cc:	add    DWORD PTR [rax],eax
	...
   14000c4da:	add    BYTE PTR [rax],al
   14000c4dc:	add    al,BYTE PTR [rbx]
   14000c4de:	add    BYTE PTR [rax],al
   14000c4e0:	add    DWORD PTR [rax],eax
   14000c4e2:	push   rbx
   14000c4e3:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000c4e7:	add    BYTE PTR [rcx+0x0],ch
   14000c4ea:	outs   dx,BYTE PTR ds:[rsi]
   14000c4eb:	add    BYTE PTR [rdi+0x0],ah
   14000c4ee:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c4f2:	ins    BYTE PTR es:[rdi],dx
   14000c4f3:	add    BYTE PTR [rbp+0x0],ah
   14000c4f6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c4fa:	data16 add BYTE PTR [rdi+0x0],ch
   14000c4fe:	add    BYTE PTR [rax],al
   14000c500:	fiadd  WORD PTR [rdx]
   14000c502:	add    BYTE PTR [rax],al
   14000c504:	add    DWORD PTR [rax],eax
   14000c506:	xor    BYTE PTR [rax],al
   14000c508:	xor    al,0x0
   14000c50a:	xor    BYTE PTR [rax],al
   14000c50c:	cmp    DWORD PTR [rax],eax
   14000c50e:	xor    BYTE PTR [rax],al
   14000c510:	xor    al,0x0
   14000c512:	rex.X add BYTE PTR [rax],sil
   14000c515:	add    BYTE PTR [rax],al
   14000c517:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c51b:	add    BYTE PTR [rcx],al
   14000c51d:	add    BYTE PTR [rbx+0x0],al
   14000c520:	outs   dx,DWORD PTR ds:[rsi]
   14000c521:	add    BYTE PTR [rbp+0x0],ch
   14000c524:	jo     0x14000c526
   14000c526:	(bad)  
   14000c527:	add    BYTE PTR [rsi+0x0],ch
   14000c52a:	jns    0x14000c52c
   14000c52c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c530:	ins    DWORD PTR es:[rdi],dx
   14000c531:	add    BYTE PTR [rbp+0x0],ah
   14000c534:	add    BYTE PTR [rax],al
   14000c536:	add    BYTE PTR [rax],al
   14000c538:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c53c:	movsxd eax,DWORD PTR [rax]
   14000c53e:	jb     0x14000c540
   14000c540:	outs   dx,DWORD PTR ds:[rsi]
   14000c541:	add    BYTE PTR [rbx+0x0],dh
   14000c544:	outs   dx,DWORD PTR ds:[rsi]
   14000c545:	add    BYTE PTR [rsi+0x0],ah
   14000c548:	je     0x14000c54a
   14000c54a:	and    BYTE PTR [rax],al
   14000c54c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c550:	jb     0x14000c552
   14000c552:	jo     0x14000c554
   14000c554:	outs   dx,DWORD PTR ds:[rsi]
   14000c555:	add    BYTE PTR [rdx+0x0],dh
   14000c558:	(bad)  
   14000c559:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c55d:	add    BYTE PTR [rdi+0x0],ch
   14000c560:	outs   dx,BYTE PTR ds:[rsi]
   14000c561:	add    BYTE PTR [rax],al
   14000c563:	add    BYTE PTR [rsi+0x0],bl
   14000c566:	sbb    eax,DWORD PTR [rax]
   14000c568:	add    DWORD PTR [rax],eax
   14000c56a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c56e:	ins    BYTE PTR es:[rdi],dx
   14000c56f:	add    BYTE PTR [rbp+0x0],ah
   14000c572:	add    BYTE PTR [rbp+0x0],r12b
   14000c576:	jae    0x14000c578
   14000c578:	movsxd eax,DWORD PTR [rax]
   14000c57a:	jb     0x14000c57c
   14000c57c:	imul   eax,DWORD PTR [rax],0x740070
   14000c582:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c588:	add    BYTE PTR [rax],al
   14000c58a:	add    BYTE PTR [rax],al
   14000c58c:	push   rbp
   14000c58d:	add    BYTE PTR [rax+0x0],dl
   14000c590:	outs   dx,BYTE PTR ds:[rsi]
   14000c591:	add    BYTE PTR [rax+0x0],dl
   14000c594:	and    BYTE PTR [rax],al
   14000c596:	add    BYTE PTR [rbp+0x0],r12b
   14000c59a:	jbe    0x14000c59c
   14000c59c:	imul   eax,DWORD PTR [rax],0x650063
   14000c5a2:	and    BYTE PTR [rax],al
   14000c5a4:	rex.W add BYTE PTR [rdi+0x0],bpl
   14000c5a8:	jae    0x14000c5aa
   14000c5aa:	je     0x14000c5ac
   14000c5ac:	and    BYTE PTR [rax],al
   14000c5ae:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c5b2:	outs   dx,BYTE PTR ds:[rsi]
   14000c5b3:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000c5b7:	add    BYTE PTR [rcx+0x0],ch
   14000c5ba:	outs   dx,BYTE PTR ds:[rsi]
   14000c5bb:	add    BYTE PTR [rbp+0x0],ah
   14000c5be:	jb     0x14000c5c0
   14000c5c0:	add    BYTE PTR [rax],al
   14000c5c2:	add    BYTE PTR [rax],al
   14000c5c4:	data16 add BYTE PTR [rbx],ah
   14000c5c7:	add    BYTE PTR [rcx],al
   14000c5c9:	add    BYTE PTR [rsi+0x0],al
   14000c5cc:	imul   eax,DWORD PTR [rax],0x65006c
   14000c5d2:	push   rsi
   14000c5d3:	add    BYTE PTR [rbp+0x0],ah
   14000c5d6:	jb     0x14000c5d8
   14000c5d8:	jae    0x14000c5da
   14000c5da:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c5e0:	add    BYTE PTR [rax],al
   14000c5e2:	add    BYTE PTR [rax],al
   14000c5e4:	xor    DWORD PTR [rax],eax
   14000c5e6:	xor    BYTE PTR [rax],al
   14000c5e8:	add    BYTE PTR cs:[rax],dh
   14000c5eb:	add    BYTE PTR [rsi],ch
   14000c5ed:	add    BYTE PTR [rcx],dh
   14000c5ef:	add    BYTE PTR [rax],dh
   14000c5f1:	add    BYTE PTR [rdx],dh
   14000c5f3:	add    BYTE PTR [rax+rax*1],dh
   14000c5f6:	xor    BYTE PTR [rax],al
   14000c5f8:	add    BYTE PTR cs:[rcx],dh
   14000c5fb:	add    BYTE PTR [rdi],dh
   14000c5fd:	add    BYTE PTR [rcx],dh
   14000c5ff:	add    BYTE PTR [rcx],dh
   14000c601:	add    BYTE PTR [rbx],dh
   14000c603:	add    BYTE PTR [rax],ah
   14000c605:	add    BYTE PTR [rax],ch
   14000c607:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000c60b:	add    BYTE PTR [rcx],dh
   14000c60d:	add    BYTE PTR [rsi],ch
   14000c60f:	add    BYTE PTR [rcx],dh
   14000c611:	add    BYTE PTR [rsi],dh
   14000c613:	add    BYTE PTR [rax],dh
   14000c615:	add    BYTE PTR [rcx],bh
   14000c617:	add    BYTE PTR [rax],dh
   14000c619:	add    BYTE PTR [rsi],dh
   14000c61b:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700f721
   14000c621:	add    BYTE PTR [rip+0x29003500],dh        # 0x16900fb27
   14000c627:	add    BYTE PTR [rax],al
   14000c629:	add    BYTE PTR [rax],al
   14000c62b:	add    BYTE PTR [rdx],bh
   14000c62d:	add    BYTE PTR [rip+0x49000100],cl        # 0x18900c733
   14000c633:	add    BYTE PTR [rsi+0x0],ch
   14000c636:	je     0x14000c638
   14000c638:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c63c:	outs   dx,BYTE PTR ds:[rsi]
   14000c63d:	add    BYTE PTR [rcx+0x0],ah
   14000c640:	ins    BYTE PTR es:[rdi],dx
   14000c641:	add    BYTE PTR [rsi+0x0],cl
   14000c644:	(bad)  
   14000c645:	add    BYTE PTR [rbp+0x0],ch
   14000c648:	add    BYTE PTR gs:[rax],al
   14000c64b:	add    BYTE PTR [rbp+0x0],dh
   14000c64e:	jo     0x14000c650
   14000c650:	outs   dx,BYTE PTR ds:[rsi]
   14000c651:	add    BYTE PTR [rax+0x0],dh
   14000c654:	movsxd eax,DWORD PTR [rax]
   14000c656:	outs   dx,DWORD PTR ds:[rsi]
   14000c657:	add    BYTE PTR [rsi+0x0],ch
   14000c65a:	je     0x14000c65c
   14000c65c:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000c661:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000c665:	add    BYTE PTR [rax],al
   14000c667:	add    BYTE PTR [rax+0x1002e00],al
   14000c66d:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c671:	add    BYTE PTR [rdi+0x0],ah
   14000c674:	(bad)  
   14000c675:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c679:	add    BYTE PTR [rdi+0x0],ch
   14000c67c:	jo     0x14000c67e
   14000c67e:	jns    0x14000c680
   14000c680:	jb     0x14000c682
   14000c682:	imul   eax,DWORD PTR [rax],0x680067
   14000c688:	je     0x14000c68a
   14000c68a:	add    BYTE PTR [rax],al
   14000c68c:	test   eax,0x4d002000
   14000c691:	add    BYTE PTR [rcx+0x0],ch
   14000c694:	movsxd eax,DWORD PTR [rax]
   14000c696:	jb     0x14000c698
   14000c698:	outs   dx,DWORD PTR ds:[rsi]
   14000c699:	add    BYTE PTR [rbx+0x0],dh
   14000c69c:	outs   dx,DWORD PTR ds:[rsi]
   14000c69d:	add    BYTE PTR [rsi+0x0],ah
   14000c6a0:	je     0x14000c6a2
   14000c6a2:	and    BYTE PTR [rax],al
   14000c6a4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c6a8:	jb     0x14000c6aa
   14000c6aa:	jo     0x14000c6ac
   14000c6ac:	outs   dx,DWORD PTR ds:[rsi]
   14000c6ad:	add    BYTE PTR [rdx+0x0],dh
   14000c6b0:	(bad)  
   14000c6b1:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c6b5:	add    BYTE PTR [rdi+0x0],ch
   14000c6b8:	outs   dx,BYTE PTR ds:[rsi]
   14000c6b9:	add    BYTE PTR [rsi],ch
   14000c6bb:	add    BYTE PTR [rax],ah
   14000c6bd:	add    BYTE PTR [rcx+0x0],al
   14000c6c0:	ins    BYTE PTR es:[rdi],dx
   14000c6c1:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c6c5:	add    BYTE PTR [rdx+0x0],dh
   14000c6c8:	imul   eax,DWORD PTR [rax],0x680067
   14000c6ce:	je     0x14000c6d0
   14000c6d0:	jae    0x14000c6d2
   14000c6d2:	and    BYTE PTR [rax],al
   14000c6d4:	jb     0x14000c6d6
   14000c6d6:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c6da:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c6de:	jbe    0x14000c6e0
   14000c6e0:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000c6e5:	add    BYTE PTR [rax],al
   14000c6e7:	add    BYTE PTR [rdx+0x0],al
   14000c6ea:	or     eax,0x4f000100
   14000c6ef:	add    BYTE PTR [rdx+0x0],dh
   14000c6f2:	imul   eax,DWORD PTR [rax],0x690067
   14000c6f8:	outs   dx,BYTE PTR ds:[rsi]
   14000c6f9:	add    BYTE PTR [rcx+0x0],ah
   14000c6fc:	ins    BYTE PTR es:[rdi],dx
   14000c6fd:	add    BYTE PTR [rsi+0x0],al
   14000c700:	imul   eax,DWORD PTR [rax],0x65006c
   14000c706:	outs   dx,BYTE PTR ds:[rsi]
   14000c707:	add    BYTE PTR [rcx+0x0],ah
   14000c70a:	ins    DWORD PTR es:[rdi],dx
   14000c70b:	add    BYTE PTR [rbp+0x0],ah
   14000c70e:	add    BYTE PTR [rax],al
   14000c710:	jne    0x14000c712
   14000c712:	jo     0x14000c714
   14000c714:	outs   dx,BYTE PTR ds:[rsi]
   14000c715:	add    BYTE PTR [rax+0x0],dh
   14000c718:	movsxd eax,DWORD PTR [rax]
   14000c71a:	outs   dx,DWORD PTR ds:[rsi]
   14000c71b:	add    BYTE PTR [rsi+0x0],ch
   14000c71e:	je     0x14000c720
   14000c720:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000c725:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000c729:	add    BYTE PTR [rax],al
   14000c72b:	add    BYTE PTR [rdx+0x0],ch
   14000c72e:	and    eax,0x50000100
   14000c733:	add    BYTE PTR [rdx+0x0],dh
   14000c736:	outs   dx,DWORD PTR ds:[rsi]
   14000c737:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c73b:	add    BYTE PTR [rbx+0x0],ah
   14000c73e:	je     0x14000c740
   14000c740:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c744:	ins    DWORD PTR es:[rdi],dx
   14000c745:	add    BYTE PTR [rbp+0x0],ah
   14000c748:	add    BYTE PTR [rax],al
   14000c74a:	add    BYTE PTR [rax],al
   14000c74c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c750:	movsxd eax,DWORD PTR [rax]
   14000c752:	jb     0x14000c754
   14000c754:	outs   dx,DWORD PTR ds:[rsi]
   14000c755:	add    BYTE PTR [rbx+0x0],dh
   14000c758:	outs   dx,DWORD PTR ds:[rsi]
   14000c759:	add    BYTE PTR [rsi+0x0],ah
   14000c75c:	je     0x14000c75e
   14000c75e:	scas   al,BYTE PTR es:[rdi]
   14000c75f:	add    BYTE PTR [rax],ah
   14000c761:	add    BYTE PTR [rdi+0x0],dl
   14000c764:	imul   eax,DWORD PTR [rax],0x64006e
   14000c76a:	outs   dx,DWORD PTR ds:[rsi]
   14000c76b:	add    BYTE PTR [rdi+0x0],dh
   14000c76e:	jae    0x14000c770
   14000c770:	scas   al,BYTE PTR es:[rdi]
   14000c771:	add    BYTE PTR [rax],ah
   14000c773:	add    BYTE PTR [rdi+0x0],cl
   14000c776:	jo     0x14000c778
   14000c778:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c77c:	(bad)  
   14000c77d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c781:	add    BYTE PTR [rsi+0x0],ch
   14000c784:	add    BYTE PTR [eax],ah
   14000c787:	add    BYTE PTR [rbx+0x0],dl
   14000c78a:	jns    0x14000c78c
   14000c78c:	jae    0x14000c78e
   14000c78e:	je     0x14000c790
   14000c790:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c794:	add    BYTE PTR [rax],al
   14000c796:	add    BYTE PTR [rax],al
   14000c798:	rex.RX add BYTE PTR [rcx],r10b
   14000c79b:	add    BYTE PTR [rcx],al
   14000c79d:	add    BYTE PTR [rax+0x0],dl
   14000c7a0:	jb     0x14000c7a2
   14000c7a2:	outs   dx,DWORD PTR ds:[rsi]
   14000c7a3:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c7a7:	add    BYTE PTR [rbx+0x0],ah
   14000c7aa:	je     0x14000c7ac
   14000c7ac:	push   rsi
   14000c7ad:	add    BYTE PTR [rbp+0x0],ah
   14000c7b0:	jb     0x14000c7b2
   14000c7b2:	jae    0x14000c7b4
   14000c7b4:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c7ba:	add    BYTE PTR [rax],al
   14000c7bc:	xor    DWORD PTR [rax],eax
   14000c7be:	xor    BYTE PTR [rax],al
   14000c7c0:	add    BYTE PTR cs:[rax],dh
   14000c7c3:	add    BYTE PTR [rsi],ch
   14000c7c5:	add    BYTE PTR [rcx],dh
   14000c7c7:	add    BYTE PTR [rax],dh
   14000c7c9:	add    BYTE PTR [rdx],dh
   14000c7cb:	add    BYTE PTR [rax+rax*1],dh
   14000c7ce:	xor    BYTE PTR [rax],al
   14000c7d0:	add    BYTE PTR cs:[rcx],dh
   14000c7d3:	add    BYTE PTR [rdi],dh
   14000c7d5:	add    BYTE PTR [rcx],dh
   14000c7d7:	add    BYTE PTR [rcx],dh
   14000c7d9:	add    BYTE PTR [rbx],dh
   14000c7db:	add    BYTE PTR [rax],al
   14000c7dd:	add    BYTE PTR [rax],al
   14000c7df:	add    BYTE PTR [rax+rax*1+0x0],al
   14000c7e3:	add    BYTE PTR [rcx],al
   14000c7e5:	add    BYTE PTR [rsi+0x0],dl
   14000c7e8:	(bad)  
   14000c7e9:	add    BYTE PTR [rdx+0x0],dh
   14000c7ec:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c7f0:	ins    BYTE PTR es:[rdi],dx
   14000c7f1:	add    BYTE PTR [rbp+0x0],ah
   14000c7f4:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c7f8:	data16 add BYTE PTR [rdi+0x0],ch
   14000c7fc:	add    BYTE PTR [rax],al
   14000c7fe:	add    BYTE PTR [rax],al
   14000c800:	and    al,0x0
   14000c802:	add    al,0x0
   14000c804:	add    BYTE PTR [rax],al
   14000c806:	push   rsp
   14000c807:	add    BYTE PTR [rdx+0x0],dh
   14000c80a:	(bad)  
   14000c80b:	add    BYTE PTR [rsi+0x0],ch
   14000c80e:	jae    0x14000c810
   14000c810:	ins    BYTE PTR es:[rdi],dx
   14000c811:	add    BYTE PTR [rcx+0x0],ah
   14000c814:	je     0x14000c816
   14000c816:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c81c:	add    BYTE PTR [rax],al
   14000c81e:	add    BYTE PTR [rax],al
   14000c820:	or     DWORD PTR [rax+rsi*4],eax
   14000c823:	add    al,0x0
   14000c825:	add    BYTE PTR [rax],al
   14000c827:	add    BYTE PTR [rcx],dh
   14000c829:	and    BYTE PTR [rcx+rbx*2+0x50],dl
   14000c82d:	rex.RB
   14000c82e:	rex.WR
   14000c82f:	rex.WB
   14000c830:	rex.X and BYTE PTR [rdx],spl
   14000c833:	jne    0x14000c8a5
   14000c835:	outs   dx,BYTE PTR ds:[rsi]
   14000c836:	jo     0x14000c8a0
   14000c838:	outs   dx,DWORD PTR ds:[rsi]
   14000c839:	jae    0x14000c8af
   14000c83b:	cs je  0x14000c8aa
   14000c83e:	vpshufb xmm24{k2},xmm14,XMMWORD PTR [rax]
   14000c844:	add    BYTE PTR [rax],al
   14000c846:	add    BYTE PTR [rax],al
   14000c848:	rex.WRB push r11
   14000c84a:	rex.RX push rsp
   14000c84c:	add    al,BYTE PTR [rax]
   14000c84e:	add    DWORD PTR [rax],eax
   14000c850:	add    BYTE PTR [rax],al
   14000c852:	add    BYTE PTR [rax],al
   14000c854:	or     DWORD PTR [rax+rax*1],eax
   14000c857:	add    BYTE PTR [rax],al
   14000c859:	add    BYTE PTR [rax],al
   14000c85b:	add    BYTE PTR [rbx+0x0],al
   14000c85e:	add    BYTE PTR [rax],al
   14000c860:	add    DWORD PTR [rax],eax
   14000c862:	add    BYTE PTR [rax],al
   14000c864:	add    BYTE PTR [rax],al
   14000c866:	add    BYTE PTR [rax],al
   14000c868:	or     al,BYTE PTR [rax]
	...
   14000c876:	add    BYTE PTR [rax],al
   14000c878:	cmp    DWORD PTR [rax],eax
   14000c87a:	add    BYTE PTR [rax],al
   14000c87c:	push   0x3
   14000c881:	add    BYTE PTR [rax],al
   14000c883:	add    bh,bh
   14000c885:	(bad)  
   14000c886:	(bad)  
   14000c887:	(bad)  
   14000c888:	(bad)  
   14000c889:	(bad)  
   14000c88a:	(bad)  
   14000c88b:	jmp    QWORD PTR [rax]
   14000c88d:	add    BYTE PTR [rax],al
   14000c88f:	add    BYTE PTR [rax-0x1000000],al
   14000c895:	(bad)  
   14000c896:	(bad)  
   14000c897:	inc    DWORD PTR [rdx]
   14000c899:	add    BYTE PTR [rax],al
   14000c89b:	add    BYTE PTR [rax],al
   14000c89d:	add    BYTE PTR [rax],al
   14000c89f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000c8a3:	add    al,cl
   14000c8a5:	add    BYTE PTR [rax],al
   14000c8a7:	add    BYTE PTR [rcx+rax*1],ch
   14000c8aa:	add    BYTE PTR [rax],al
   14000c8ac:	nop
   14000c8ad:	add    DWORD PTR [rax],eax
   14000c8af:	add    ah,dh
   14000c8b1:	add    DWORD PTR [rax],eax
   14000c8b3:	add    BYTE PTR [rax+0x2],bl
   14000c8b6:	add    BYTE PTR [rax],al
   14000c8b8:	mov    esp,0x20000002
   14000c8bd:	add    eax,DWORD PTR [rax]
   14000c8bf:	add    BYTE PTR [rbx+rax*1+0x16c0000],al
   14000c8c6:	add    BYTE PTR [rax],al
   14000c8c8:	call   0x13f00c8d0
   14000c8cd:	(bad)  
   14000c8ce:	(bad)  
   14000c8cf:	dec    DWORD PTR [rdi]
   14000c8d1:	add    BYTE PTR [rax],al
   14000c8d3:	add    BYTE PTR [rdi+rax*1],ch
   14000c8d6:	add    BYTE PTR [rax],al
   14000c8d8:	sbb    BYTE PTR [rax],al
   14000c8da:	add    BYTE PTR [rax],al
   14000c8dc:	(bad)  
   14000c8dd:	(bad)  
   14000c8de:	(bad)  
   14000c8df:	dec    DWORD PTR [rdi]
   14000c8e1:	add    BYTE PTR [rax],al
   14000c8e3:	add    BYTE PTR [rdi+rax*1+0x0],al
   14000c8e7:	add    BYTE PTR [rax+rax*1],bl
   14000c8ea:	add    BYTE PTR [rax],al
   14000c8ec:	(bad)  
   14000c8ed:	(bad)  
   14000c8ee:	(bad)  
   14000c8ef:	dec    DWORD PTR [rdi]
   14000c8f1:	add    BYTE PTR [rax],al
   14000c8f3:	add    BYTE PTR [rdi+rax*1],cl
   14000c8f6:	add    BYTE PTR [rax],al
   14000c8f8:	and    BYTE PTR [rax],al
   14000c8fa:	add    BYTE PTR [rax],al
   14000c8fc:	(bad)  
   14000c8fd:	(bad)  
   14000c8fe:	(bad)  
   14000c8ff:	dec    DWORD PTR [rdi]
   14000c901:	add    BYTE PTR [rax],al
   14000c903:	add    BYTE PTR [rbp+rax*1+0x0],dl
   14000c907:	add    BYTE PTR [rax-0x1000000],al
   14000c90d:	(bad)  
   14000c90e:	(bad)  
   14000c90f:	dec    DWORD PTR [rdi]
   14000c911:	add    BYTE PTR [rax],al
   14000c913:	add    ah,dl
   14000c915:	add    eax,0x1380000
   14000c91a:	add    BYTE PTR [rax],al
   14000c91c:	(bad)  
   14000c91d:	(bad)  
   14000c91e:	(bad)  
   14000c91f:	dec    DWORD PTR [rdi]
   14000c921:	add    BYTE PTR [rax],al
   14000c923:	add    BYTE PTR [rax+0x7],ah
   14000c926:	add    BYTE PTR [rax],al
   14000c928:	add    BYTE PTR [rdx],al
   14000c92a:	add    BYTE PTR [rax],al
   14000c92c:	(bad)  
   14000c92d:	(bad)  
   14000c92e:	(bad)  
   14000c92f:	dec    DWORD PTR [rdi]
   14000c931:	add    BYTE PTR [rax],al
   14000c933:	add    BYTE PTR [rax+0x9],ah
   14000c936:	add    BYTE PTR [rax],al
   14000c938:	fs (bad) 
   14000c93a:	add    BYTE PTR [rax],al
   14000c93c:	(bad)  
   14000c93d:	(bad)  
   14000c93e:	(bad)  
   14000c93f:	dec    DWORD PTR [rdi]
   14000c941:	add    BYTE PTR [rax],al
   14000c943:	add    ah,al
   14000c945:	sldt   WORD PTR [rax]
   14000c948:	add    BYTE PTR [rax],0x0
   14000c94b:	add    bh,bh
   14000c94d:	(bad)  
   14000c94e:	(bad)  
   14000c94f:	dec    DWORD PTR [rdi]
   14000c951:	add    BYTE PTR [rax],al
   14000c953:	add    BYTE PTR [rax+rdx*1+0x0],al
   14000c957:	add    BYTE PTR [rax+0x0],al
   14000c95a:	add    BYTE PTR [rax],al
   14000c95c:	(bad)  
   14000c95d:	(bad)  
   14000c95e:	(bad)  
   14000c95f:	dec    DWORD PTR [rdi]
   14000c961:	add    BYTE PTR [rax],al
   14000c963:	add    bh,bh
   14000c965:	(bad)  
   14000c966:	(bad)  
   14000c967:	inc    DWORD PTR [rax]
   14000c969:	add    BYTE PTR [rax],al
   14000c96b:	add    bh,bh
   14000c96d:	(bad)  
   14000c96e:	(bad)  
   14000c96f:	dec    DWORD PTR [rdi]
   14000c971:	add    BYTE PTR [rax],al
   14000c973:	add    bh,bh
   14000c975:	(bad)  
   14000c976:	(bad)  
   14000c977:	inc    DWORD PTR [rax]
   14000c979:	add    BYTE PTR [rax],al
   14000c97b:	add    bh,bh
   14000c97d:	(bad)  
   14000c97e:	(bad)  
   14000c97f:	dec    DWORD PTR [rdi]
   14000c981:	add    BYTE PTR [rax],al
   14000c983:	add    bh,bh
   14000c985:	(bad)  
   14000c986:	(bad)  
   14000c987:	inc    DWORD PTR [rax]
   14000c989:	add    BYTE PTR [rax],al
   14000c98b:	add    bh,bh
   14000c98d:	(bad)  
   14000c98e:	(bad)  
   14000c98f:	dec    DWORD PTR [rdi]
   14000c991:	add    BYTE PTR [rax],al
   14000c993:	add    bh,bh
   14000c995:	(bad)  
   14000c996:	(bad)  
   14000c997:	inc    DWORD PTR [rax]
   14000c999:	add    BYTE PTR [rax],al
   14000c99b:	add    bh,bh
   14000c99d:	(bad)  
   14000c99e:	(bad)  
   14000c99f:	dec    DWORD PTR [rdi]
   14000c9a1:	add    BYTE PTR [rax],al
   14000c9a3:	add    bh,bh
   14000c9a5:	(bad)  
   14000c9a6:	(bad)  
   14000c9a7:	inc    DWORD PTR [rax]
   14000c9a9:	add    BYTE PTR [rax],al
   14000c9ab:	add    bh,bh
   14000c9ad:	(bad)  
   14000c9ae:	(bad)  
   14000c9af:	dec    DWORD PTR [rdi]
   14000c9b1:	add    BYTE PTR [rax],al
   14000c9b3:	add    BYTE PTR [rbx],ah
   14000c9b5:	rex.X add BYTE PTR [rax],al
   14000c9b8:	test   BYTE PTR [rax],dl
	...
   14000c9c2:	add    BYTE PTR [rax],al
   14000c9c4:	add    eax,DWORD PTR [rax]
   14000c9c6:	add    BYTE PTR [rax],al
   14000c9c8:	add    BYTE PTR [rax],al
   14000c9ca:	add    BYTE PTR [rax],al
   14000c9cc:	add    al,BYTE PTR [rax]
	...
   14000c9de:	add    BYTE PTR [rax],al
   14000c9e0:	sbb    BYTE PTR [rax],al
   14000c9e2:	add    BYTE PTR [rax],al
   14000c9e4:	add    BYTE PTR [rax],al
   14000c9e6:	add    BYTE PTR [rax],al
   14000c9e8:	sbb    BYTE PTR [rax],al
   14000c9ea:	add    BYTE PTR [rax],al
   14000c9ec:	add    BYTE PTR [rax],al
   14000c9ee:	add    BYTE PTR [rax],al
   14000c9f0:	(bad)  
   14000c9f1:	(bad)  
   14000c9f2:	(bad)  
   14000c9f3:	inc    DWORD PTR [rax]
   14000c9f5:	add    BYTE PTR [rax],al
   14000c9f7:	add    BYTE PTR [rax],al
   14000c9f9:	add    BYTE PTR [rax],al
   14000c9fb:	add    bh,bh
   14000c9fd:	(bad)  
   14000c9fe:	(bad)  
   14000c9ff:	inc    DWORD PTR [rcx]
   14000ca01:	add    BYTE PTR [rax],ch
   14000ca03:	add    BYTE PTR [rax],cl
   14000ca05:	add    BYTE PTR [rax],al
   14000ca07:	add    BYTE PTR [rcx],al
   14000ca09:	add    BYTE PTR [rax],al
   14000ca0b:	add    BYTE PTR [rcx],al
   14000ca0d:	add    BYTE PTR [rbx],al
   14000ca0f:	add    BYTE PTR [rax],al
   14000ca11:	add    BYTE PTR [rax],al
   14000ca13:	add    bh,bh
   14000ca15:	(bad)  
   14000ca16:	(bad)  
   14000ca17:	jmp    QWORD PTR [rbx]
   14000ca19:	rex.X add DWORD PTR [rax],eax
   14000ca1c:	add    al,0x11
	...
   14000ca26:	add    BYTE PTR [rax],al
   14000ca28:	add    eax,DWORD PTR [rax]
   14000ca2a:	add    BYTE PTR [rax],al
   14000ca2c:	add    BYTE PTR [rax],al
   14000ca2e:	add    BYTE PTR [rax],al
   14000ca30:	add    al,BYTE PTR [rax]
	...
   14000ca42:	add    BYTE PTR [rax],al
   14000ca44:	(bad)  
   14000ca45:	add    BYTE PTR [rax],al
   14000ca47:	add    BYTE PTR [rax],al
   14000ca49:	add    BYTE PTR [rax],al
   14000ca4b:	add    al,al
   14000ca4d:	add    BYTE PTR [rax],al
   14000ca4f:	add    BYTE PTR [rax],al
   14000ca51:	add    BYTE PTR [rax],al
   14000ca53:	add    bh,bh
   14000ca55:	(bad)  
   14000ca56:	(bad)  
   14000ca57:	inc    DWORD PTR [rax]
   14000ca59:	add    BYTE PTR [rax],al
   14000ca5b:	add    BYTE PTR [rax],al
   14000ca5d:	add    BYTE PTR [rax],al
   14000ca5f:	add    bh,bh
   14000ca61:	(bad)  
   14000ca62:	(bad)  
   14000ca63:	inc    DWORD PTR [rcx]
   14000ca65:	add    BYTE PTR [rax],ch
   14000ca67:	add    BYTE PTR [rax],cl
   14000ca69:	add    BYTE PTR [rax],al
   14000ca6b:	add    BYTE PTR [rcx],al
   14000ca6d:	add    BYTE PTR [rax],al
   14000ca6f:	add    BYTE PTR [rcx],al
   14000ca71:	add    BYTE PTR [rbx],al
   14000ca73:	add    BYTE PTR [rax],al
   14000ca75:	add    BYTE PTR [rax],al
   14000ca77:	add    bh,bh
   14000ca79:	(bad)  
   14000ca7a:	(bad)  
   14000ca7b:	jmp    QWORD PTR [rbx]
   14000ca7d:	rex.X add al,BYTE PTR [rax]
   14000ca80:	js     0x14000ca93
	...
   14000ca8a:	add    BYTE PTR [rax],al
   14000ca8c:	add    eax,DWORD PTR [rax]
   14000ca8e:	add    BYTE PTR [rax],al
   14000ca90:	add    BYTE PTR [rax],al
   14000ca92:	add    BYTE PTR [rax],al
   14000ca94:	(bad)  
	...
   14000caa5:	add    BYTE PTR [rax],al
   14000caa7:	add    BYTE PTR [rax+0x0],bh
   14000caaa:	add    BYTE PTR [rax],al
   14000caac:	add    BYTE PTR [rax],al
   14000caae:	add    BYTE PTR [rax],al
   14000cab0:	and    BYTE PTR [rcx],al
   14000cab2:	add    BYTE PTR [rax],al
   14000cab4:	add    BYTE PTR [rax],al
   14000cab6:	add    BYTE PTR [rax],al
   14000cab8:	(bad)  
   14000cab9:	(bad)  
   14000caba:	(bad)  
   14000cabb:	inc    DWORD PTR [rax]
   14000cabd:	add    BYTE PTR [rax],al
   14000cabf:	add    BYTE PTR [rax],al
   14000cac1:	add    BYTE PTR [rax],al
   14000cac3:	add    bh,bh
   14000cac5:	(bad)  
   14000cac6:	(bad)  
   14000cac7:	inc    DWORD PTR [rcx]
   14000cac9:	add    BYTE PTR [rax+0x0],cl
   14000cacc:	or     BYTE PTR [rax],al
   14000cace:	add    BYTE PTR [rax],al
   14000cad0:	add    DWORD PTR [rax],eax
   14000cad2:	add    BYTE PTR [rax],al
   14000cad4:	add    DWORD PTR [rax],eax
   14000cad6:	add    eax,DWORD PTR [rax]
   14000cad8:	add    BYTE PTR [rax],al
   14000cada:	add    BYTE PTR [rax],al
   14000cadc:	(bad)  
   14000cadd:	(bad)  
   14000cade:	(bad)  
   14000cadf:	jmp    QWORD PTR [rbx]
   14000cae1:	rex.X add eax,DWORD PTR [rax]
   14000cae4:	push   0x13
   14000cae9:	add    BYTE PTR [rax],al
   14000caeb:	add    BYTE PTR [rax],al
   14000caed:	add    BYTE PTR [rax],al
   14000caef:	add    BYTE PTR [rbx],al
   14000caf1:	add    BYTE PTR [rax],al
   14000caf3:	add    BYTE PTR [rax],al
   14000caf5:	add    BYTE PTR [rax],al
   14000caf7:	add    BYTE PTR [rdx],al
	...
   14000cb09:	add    BYTE PTR [rax],al
   14000cb0b:	add    BYTE PTR [rax+0x0],dl
   14000cb11:	add    BYTE PTR [rax],al
   14000cb13:	add    BYTE PTR [rax+0x3],bl
   14000cb19:	add    BYTE PTR [rax],al
   14000cb1b:	add    bh,bh
   14000cb1d:	(bad)  
   14000cb1e:	(bad)  
   14000cb1f:	inc    DWORD PTR [rax]
   14000cb21:	add    BYTE PTR [rax],al
   14000cb23:	add    BYTE PTR [rax],al
   14000cb25:	add    BYTE PTR [rax],al
   14000cb27:	add    bh,bh
   14000cb29:	(bad)  
   14000cb2a:	(bad)  
   14000cb2b:	inc    DWORD PTR [rcx]
   14000cb2d:	add    BYTE PTR [rax],ch
   14000cb2f:	add    BYTE PTR [rax],cl
   14000cb31:	add    BYTE PTR [rax],al
   14000cb33:	add    BYTE PTR [rcx],al
   14000cb35:	add    BYTE PTR [rax],al
   14000cb37:	add    BYTE PTR [rcx],al
   14000cb39:	add    BYTE PTR [rbx],al
   14000cb3b:	add    BYTE PTR [rax],al
   14000cb3d:	add    BYTE PTR [rax],al
   14000cb3f:	add    bh,bh
   14000cb41:	(bad)  
   14000cb42:	(bad)  
   14000cb43:	jmp    QWORD PTR [rbx]
   14000cb45:	rex.X add al,0x0
   14000cb48:	push   rax
   14000cb49:	adc    al,0x0
	...
   14000cb53:	add    BYTE PTR [rbx],al
   14000cb55:	add    BYTE PTR [rax],al
   14000cb57:	add    BYTE PTR [rax],al
   14000cb59:	add    BYTE PTR [rax],al
   14000cb5b:	add    BYTE PTR [rdx],al
	...
   14000cb6d:	add    BYTE PTR [rax],al
   14000cb6f:	add    BYTE PTR [rax+0x0],ch
   14000cb75:	add    BYTE PTR [rax],al
   14000cb77:	add    ah,dh
   14000cb79:	add    eax,DWORD PTR [rax]
   14000cb7b:	add    BYTE PTR [rax],al
   14000cb7d:	add    BYTE PTR [rax],al
   14000cb7f:	add    bh,bh
   14000cb81:	(bad)  
   14000cb82:	(bad)  
   14000cb83:	inc    DWORD PTR [rax]
   14000cb85:	add    BYTE PTR [rax],al
   14000cb87:	add    BYTE PTR [rax],al
   14000cb89:	add    BYTE PTR [rax],al
   14000cb8b:	add    bh,bh
   14000cb8d:	(bad)  
   14000cb8e:	(bad)  
   14000cb8f:	inc    DWORD PTR [rcx]
   14000cb91:	add    BYTE PTR [rax],ch
   14000cb93:	add    BYTE PTR [rax],cl
   14000cb95:	add    BYTE PTR [rax],al
   14000cb97:	add    BYTE PTR [rcx],al
   14000cb99:	add    BYTE PTR [rax],al
   14000cb9b:	add    BYTE PTR [rcx],al
   14000cb9d:	add    BYTE PTR [rbx],al
   14000cb9f:	add    BYTE PTR [rax],al
   14000cba1:	add    BYTE PTR [rax],al
   14000cba3:	add    bh,bh
   14000cba5:	(bad)  
   14000cba6:	(bad)  
   14000cba7:	jmp    QWORD PTR [rbx]
   14000cba9:	rex.X add eax,0x14e400
	...
   14000cbb7:	add    BYTE PTR [rbx],al
   14000cbb9:	add    BYTE PTR [rax],al
   14000cbbb:	add    BYTE PTR [rax],al
   14000cbbd:	add    BYTE PTR [rax],al
   14000cbbf:	add    BYTE PTR [rcx],al
	...
   14000cbd1:	add    BYTE PTR [rax],al
   14000cbd3:	add    al,al
   14000cbd5:	add    BYTE PTR [rax],al
   14000cbd7:	add    BYTE PTR [rax],al
   14000cbd9:	add    BYTE PTR [rax],al
   14000cbdb:	add    BYTE PTR [rsp+rax*1+0x0],dl
   14000cbe2:	add    BYTE PTR [rax],al
   14000cbe4:	(bad)  
   14000cbe5:	(bad)  
   14000cbe6:	(bad)  
   14000cbe7:	inc    DWORD PTR [rax]
   14000cbe9:	add    BYTE PTR [rax],al
   14000cbeb:	add    BYTE PTR [rax],al
   14000cbed:	add    BYTE PTR [rax],al
   14000cbef:	add    bh,bh
   14000cbf1:	(bad)  
   14000cbf2:	(bad)  
   14000cbf3:	inc    DWORD PTR [rcx]
   14000cbf5:	add    BYTE PTR [rax],ah
   14000cbf7:	add    BYTE PTR [rax],cl
   14000cbf9:	add    BYTE PTR [rax],al
   14000cbfb:	add    BYTE PTR [rcx],al
   14000cbfd:	add    BYTE PTR [rax],al
   14000cbff:	add    BYTE PTR [rcx],al
   14000cc01:	add    BYTE PTR [rbx],al
   14000cc03:	add    BYTE PTR [rax],al
   14000cc05:	add    BYTE PTR [rax],al
   14000cc07:	add    bh,bh
   14000cc09:	(bad)  
   14000cc0a:	(bad)  
   14000cc0b:	jmp    QWORD PTR [rbx]
   14000cc0d:	rex.X (bad) 
   14000cc0f:	add    BYTE PTR [rax],bl
   14000cc11:	adc    eax,0x0
   14000cc16:	add    BYTE PTR [rax],al
   14000cc18:	add    BYTE PTR [rax],al
   14000cc1a:	add    BYTE PTR [rax],al
   14000cc1c:	add    eax,DWORD PTR [rax]
   14000cc1e:	add    BYTE PTR [rax],al
   14000cc20:	add    BYTE PTR [rax],al
   14000cc22:	add    BYTE PTR [rax],al
   14000cc24:	add    al,BYTE PTR [rax]
	...
   14000cc36:	add    BYTE PTR [rax],al
   14000cc38:	fadd   DWORD PTR [rax]
   14000cc3a:	add    BYTE PTR [rax],al
   14000cc3c:	add    BYTE PTR [rax],al
   14000cc3e:	add    BYTE PTR [rax],al
   14000cc40:	or     al,0x5
   14000cc42:	add    BYTE PTR [rax],al
   14000cc44:	add    BYTE PTR [rax],al
   14000cc46:	add    BYTE PTR [rax],al
   14000cc48:	(bad)  
   14000cc49:	(bad)  
   14000cc4a:	(bad)  
   14000cc4b:	inc    DWORD PTR [rax]
   14000cc4d:	add    BYTE PTR [rax],al
   14000cc4f:	add    BYTE PTR [rax],al
   14000cc51:	add    BYTE PTR [rax],al
   14000cc53:	add    bh,bh
   14000cc55:	(bad)  
   14000cc56:	(bad)  
   14000cc57:	inc    DWORD PTR [rcx]
   14000cc59:	add    BYTE PTR [rax],ch
   14000cc5b:	add    BYTE PTR [rax],cl
   14000cc5d:	add    BYTE PTR [rax],al
   14000cc5f:	add    BYTE PTR [rcx],al
   14000cc61:	add    BYTE PTR [rax],al
   14000cc63:	add    BYTE PTR [rcx],al
   14000cc65:	add    BYTE PTR [rbx],al
   14000cc67:	add    BYTE PTR [rax],al
   14000cc69:	add    BYTE PTR [rax],al
   14000cc6b:	add    bh,bh
   14000cc6d:	(bad)  
   14000cc6e:	(bad)  
   14000cc6f:	jmp    QWORD PTR [rbx]
   14000cc71:	rex.X (bad) 
   14000cc73:	add    BYTE PTR [rax+0x15],dh
	...
   14000cc7e:	add    BYTE PTR [rax],al
   14000cc80:	add    eax,DWORD PTR [rax]
   14000cc82:	add    BYTE PTR [rax],al
   14000cc84:	add    BYTE PTR [rax],al
   14000cc86:	add    BYTE PTR [rax],al
   14000cc88:	add    eax,DWORD PTR [rax]
	...
   14000cc9a:	add    BYTE PTR [rax],al
   14000cc9c:	lock add BYTE PTR [rax],al
   14000cc9f:	add    BYTE PTR [rax],al
   14000cca1:	add    BYTE PTR [rax],al
   14000cca3:	add    BYTE PTR [rax+0x5],dl
   14000cca6:	add    BYTE PTR [rax],al
   14000cca8:	add    BYTE PTR [rax],al
   14000ccaa:	add    BYTE PTR [rax],al
   14000ccac:	(bad)  
   14000ccad:	(bad)  
   14000ccae:	(bad)  
   14000ccaf:	inc    DWORD PTR [rax]
   14000ccb1:	add    BYTE PTR [rax],al
   14000ccb3:	add    BYTE PTR [rax],al
   14000ccb5:	add    BYTE PTR [rax],al
   14000ccb7:	add    bh,bh
   14000ccb9:	(bad)  
   14000ccba:	(bad)  
   14000ccbb:	inc    DWORD PTR [rcx]
   14000ccbd:	add    BYTE PTR [rax],dh
   14000ccbf:	add    BYTE PTR [rax],cl
   14000ccc1:	add    BYTE PTR [rax],al
   14000ccc3:	add    BYTE PTR [rcx],al
   14000ccc5:	add    BYTE PTR [rax],al
   14000ccc7:	add    BYTE PTR [rcx],al
   14000ccc9:	add    BYTE PTR [rbx],al
   14000cccb:	add    BYTE PTR [rax],al
   14000cccd:	add    BYTE PTR [rax],al
   14000cccf:	add    bh,bh
   14000ccd1:	(bad)  
   14000ccd2:	(bad)  
   14000ccd3:	jmp    QWORD PTR [rip+0x28000842]        # 0x16800d51b
   14000ccd9:	(bad)  
	...
   14000cce2:	add    BYTE PTR [rax],al
   14000cce4:	add    eax,DWORD PTR [rax]
	...
   14000ccfe:	add    BYTE PTR [rax],al
   14000cd00:	or     BYTE PTR [rcx],al
   14000cd02:	add    BYTE PTR [rax],al
   14000cd04:	add    al,BYTE PTR [rax]
   14000cd06:	add    BYTE PTR [rax],al
   14000cd08:	and    al,0x6
   14000cd0a:	add    BYTE PTR [rax],al
   14000cd0c:	add    BYTE PTR [rax],al
   14000cd0e:	add    BYTE PTR [rax],al
   14000cd10:	(bad)  
   14000cd11:	(bad)  
   14000cd12:	(bad)  
   14000cd13:	inc    DWORD PTR [rax]
   14000cd15:	add    BYTE PTR [rax],al
   14000cd17:	add    BYTE PTR [rax],al
   14000cd19:	add    BYTE PTR [rax],al
   14000cd1b:	add    bh,bh
   14000cd1d:	(bad)  
   14000cd1e:	(bad)  
   14000cd1f:	inc    DWORD PTR [rcx]
   14000cd21:	add    BYTE PTR [rax],al
   14000cd23:	add    BYTE PTR [rax],cl
	...
   14000cd31:	add    BYTE PTR [rax],al
   14000cd33:	add    bh,bh
   14000cd35:	(bad)  
   14000cd36:	(bad)  
   14000cd37:	jmp    QWORD PTR [rip+0x28000942]        # 0x16800d67f
   14000cd3d:	(bad)  
	...
   14000cd46:	add    BYTE PTR [rax],al
   14000cd48:	add    eax,DWORD PTR [rax]
	...
   14000cd62:	add    BYTE PTR [rax],al
   14000cd64:	and    BYTE PTR [rcx],al
   14000cd66:	add    BYTE PTR [rax],al
   14000cd68:	add    al,BYTE PTR [rax]
   14000cd6a:	add    BYTE PTR [rax],al
   14000cd6c:	rex (bad) 
   14000cd6e:	add    BYTE PTR [rax],al
   14000cd70:	add    BYTE PTR [rax],al
   14000cd72:	add    BYTE PTR [rax],al
   14000cd74:	(bad)  
   14000cd75:	(bad)  
   14000cd76:	(bad)  
   14000cd77:	inc    DWORD PTR [rax]
   14000cd79:	add    BYTE PTR [rax],al
   14000cd7b:	add    BYTE PTR [rax],al
   14000cd7d:	add    BYTE PTR [rax],al
   14000cd7f:	add    bh,bh
   14000cd81:	(bad)  
   14000cd82:	(bad)  
   14000cd83:	inc    DWORD PTR [rcx]
   14000cd85:	add    BYTE PTR [rax],al
   14000cd87:	add    BYTE PTR [rax],cl
   14000cd89:	add    BYTE PTR [rax],al
   14000cd8b:	add    BYTE PTR [rax],dl
	...
   14000cd95:	add    BYTE PTR [rax],al
   14000cd97:	add    bh,bh
   14000cd99:	(bad)  
   14000cd9a:	(bad)  
   14000cd9b:	push   rax
   14000cd9d:	add    BYTE PTR [rax],al
   14000cd9f:	add    bh,bh
   14000cda1:	(bad)  
   14000cda2:	(bad)  
   14000cda3:	(bad)  
   14000cda4:	(bad)  
   14000cda5:	(bad)  
   14000cda6:	(bad)  
   14000cda7:	(bad)  
   14000cda8:	(bad)  
   14000cda9:	(bad)  
   14000cdaa:	(bad)  
   14000cdab:	(bad)  
   14000cdac:	(bad)  
   14000cdad:	(bad)  
   14000cdae:	(bad)  
   14000cdaf:	(bad)  
   14000cdb0:	(bad)  
   14000cdb1:	(bad)  
   14000cdb2:	(bad)  
   14000cdb3:	(bad)  
   14000cdb4:	(bad)  
   14000cdb5:	(bad)  
   14000cdb6:	(bad)  
   14000cdb7:	(bad)  
   14000cdb8:	(bad)  
   14000cdb9:	(bad)  
   14000cdba:	(bad)  
   14000cdbb:	(bad)  
   14000cdbc:	(bad)  
   14000cdbd:	(bad)  
   14000cdbe:	(bad)  
   14000cdbf:	(bad)  
   14000cdc0:	(bad)  
   14000cdc1:	(bad)  
   14000cdc2:	(bad)  
   14000cdc3:	(bad)  
   14000cdc4:	(bad)  
   14000cdc5:	(bad)  
   14000cdc6:	(bad)  
   14000cdc7:	(bad)  
   14000cdc8:	(bad)  
   14000cdc9:	(bad)  
   14000cdca:	(bad)  
   14000cdcb:	(bad)  
   14000cdcc:	(bad)  
   14000cdcd:	(bad)  
   14000cdce:	(bad)  
   14000cdcf:	(bad)  
   14000cdd0:	(bad)  
   14000cdd1:	(bad)  
   14000cdd2:	(bad)  
   14000cdd3:	(bad)  
   14000cdd4:	(bad)  
   14000cdd5:	(bad)  
   14000cdd6:	(bad)  
   14000cdd7:	(bad)  
   14000cdd8:	(bad)  
   14000cdd9:	(bad)  
   14000cdda:	(bad)  
   14000cddb:	jmp    FWORD PTR [rax-0x40000000]
   14000cde1:	add    BYTE PTR [rax],al
   14000cde3:	add    al,bl
   14000cde5:	add    BYTE PTR [rax],al
   14000cde7:	add    BYTE PTR [rax],cl
   14000cde9:	add    DWORD PTR [rax],eax
   14000cdeb:	add    bh,bh
   14000cded:	(bad)  
   14000cdee:	(bad)  
   14000cdef:	jmp    QWORD PTR [rax]
   14000cdf1:	add    DWORD PTR [rax],eax
   14000cdf3:	add    bh,bh
   14000cdf5:	(bad)  
   14000cdf6:	(bad)  
   14000cdf7:	(bad)  
   14000cdf8:	(bad)  
   14000cdf9:	(bad)  
   14000cdfa:	(bad)  
   14000cdfb:	(bad)  
   14000cdfc:	(bad)  
   14000cdfd:	(bad)  
   14000cdfe:	(bad)  
   14000cdff:	inc    DWORD PTR [rax]
   14000ce01:	add    BYTE PTR [rax],al
   14000ce03:	add    bh,bh
   14000ce05:	(bad)  
   14000ce06:	(bad)  
   14000ce07:	(bad)  
   14000ce08:	(bad)  
   14000ce09:	(bad)  
   14000ce0a:	(bad)  
   14000ce0b:	(bad)  
   14000ce0c:	js     0x14000ce0e
   14000ce0e:	add    BYTE PTR [rax],al
   14000ce10:	nop
   14000ce11:	add    BYTE PTR [rax],al
   14000ce13:	add    BYTE PTR [rax],bl
   14000ce15:	add    BYTE PTR [rax],al
   14000ce17:	add    BYTE PTR [rax+0x0],ah
   14000ce1a:	add    BYTE PTR [rax],al
   14000ce1c:	mov    bl,0x10
   14000ce1e:	rex.W and BYTE PTR [rdx-0x40ee2b8d],sil
   14000ce25:	rex.X add BYTE PTR [rax+0x568b11d0],sil
   14000ce2c:	(bad)  
   14000ce2d:	(bad)  
   14000ce2e:	(bad)  
   14000ce2f:	(bad)  
   14000ce30:	(bad)  
   14000ce31:	(bad)  
   14000ce32:	(bad)  
   14000ce33:	push   QWORD PTR [rax+rdx*1+0x73b22048]
   14000ce3a:	(bad)  
   14000ce3b:	adc    DWORD PTR [rdi-0x2f4fffbe],edi
   14000ce41:	adc    DWORD PTR [rbx+0x56],ecx
   14000ce47:	add    bh,bh
   14000ce49:	(bad)  
   14000ce4a:	(bad)  
   14000ce4b:	push   QWORD PTR [rax]
   14000ce4d:	add    al,0x2
   14000ce4f:	add    BYTE PTR [rax],al
   14000ce51:	add    BYTE PTR [rax],al
   14000ce53:	add    al,al
   14000ce55:	add    BYTE PTR [rax],al
   14000ce57:	add    BYTE PTR [rax],al
   14000ce59:	add    BYTE PTR [rax],al
   14000ce5b:	rex.RX add r8b,BYTE PTR [rax]
   14000ce5e:	add    BYTE PTR [rax],al
   14000ce60:	(bad)  
   14000ce61:	(bad)  
   14000ce62:	(bad)  
   14000ce63:	inc    DWORD PTR [rax]
   14000ce65:	add    BYTE PTR [rax],al
   14000ce67:	add    BYTE PTR [rax],al
   14000ce69:	add    BYTE PTR [rax],al
   14000ce6b:	add    al,al
   14000ce6d:	add    BYTE PTR [rax],al
   14000ce6f:	add    BYTE PTR [rax],al
   14000ce71:	add    BYTE PTR [rax],al
   14000ce73:	rex.RX add DWORD PTR [rax],r8d
   14000ce76:	add    BYTE PTR [rax],al
   14000ce78:	(bad)  
   14000ce79:	(bad)  
   14000ce7a:	(bad)  
   14000ce7b:	push   QWORD PTR [rbp-0x4ddfb7f0]
   14000ce81:	jae    0x14000ce57
   14000ce83:	adc    DWORD PTR [rdi-0x2f4fffbe],edi
   14000ce89:	adc    DWORD PTR [rbx+0x6456],ecx
   14000ce8f:	add    bh,bh
   14000ce91:	(bad)  
   14000ce92:	(bad)  
   14000ce93:	push   QWORD PTR [rsi-0x4ddfb7f0]
   14000ce99:	jae    0x14000ce6f
   14000ce9b:	adc    DWORD PTR [rdi-0x2f4fffbe],edi
   14000cea1:	adc    DWORD PTR [rbx+0xc856],ecx
   14000cea7:	add    bh,bh
   14000cea9:	(bad)  
   14000ceaa:	(bad)  
   14000ceab:	push   QWORD PTR [rdi-0x4ddfb7f0]
   14000ceb1:	jae    0x14000ce87
   14000ceb3:	adc    DWORD PTR [rdi-0x2f4fffbe],edi
   14000ceb9:	adc    DWORD PTR [rbx+0x12c56],ecx
   14000cebf:	add    bh,bh
   14000cec1:	(bad)  
   14000cec2:	(bad)  
   14000cec3:	(bad)  
   14000cec4:	mov    edx,0xb2204810
   14000cec9:	jae    0x14000ce9f
   14000cecb:	adc    DWORD PTR [rdi-0x2f4fffbe],edi
   14000ced1:	adc    DWORD PTR [rbx+0x19056],ecx
   14000ced7:	add    bh,bh
   14000ced9:	(bad)  
   14000ceda:	(bad)  
   14000cedb:	(bad)  
   14000cedc:	mov    ebx,0xb2204810
   14000cee1:	jae    0x14000ceb7
   14000cee3:	adc    DWORD PTR [rdi-0x2f4fffbe],edi
   14000cee9:	adc    DWORD PTR [rbx+0x1f456],ecx
   14000ceef:	add    bh,bh
   14000cef1:	(bad)  
   14000cef2:	(bad)  
   14000cef3:	(bad)  
   14000cef4:	mov    eax,0xb2204810
   14000cef9:	jae    0x14000cecf
   14000cefb:	adc    DWORD PTR [rdi-0x2f4fffbe],edi
   14000cf01:	adc    DWORD PTR [rbx+0x25856],ecx
   14000cf07:	add    BYTE PTR [rax],dh
   14000cf09:	add    BYTE PTR [rax],al
   14000cf0b:	add    BYTE PTR [rbx-0x48],ah
   14000cf0e:	cs leave 
   14000cf10:	imul   eax,DWORD PTR [rdx],0x729c4aff
   14000cf16:	jne    0x14000cf4a
   14000cf18:	sbb    edi,DWORD PTR [rdx+0x2bc5229]
   14000cf1e:	add    BYTE PTR [rax],al
   14000cf20:	rex.W add BYTE PTR [rax],al
   14000cf23:	add    BYTE PTR [rcx-0x4ddfb7f0],bh
   14000cf29:	jae    0x14000ceff
   14000cf2b:	adc    DWORD PTR [rdi-0x2f4fffbe],edi
   14000cf31:	adc    DWORD PTR [rbx+0x32056],ecx
   14000cf37:	add    bh,bh
   14000cf39:	(bad)  
   14000cf3a:	(bad)  
   14000cf3b:	(bad)  
   14000cf3c:	jmp    0x1892f2dc5
   14000cf41:	rex
   14000cf42:	rex.R
   14000cf43:	rex.X mov dil,0x28
   14000cf46:	sub    eax,0x57712224
   14000cf4b:	mov    DWORD PTR [rbx+rax*1-0x10000],0x1ffff
   14000cf56:	add    BYTE PTR [rax],al
   14000cf58:	add    DWORD PTR [rax],eax
   14000cf5a:	add    BYTE PTR [rax],al
   14000cf5c:	(bad)  
   14000cf5d:	(bad)  
   14000cf5e:	(bad)  
   14000cf5f:	(bad)  
   14000cf60:	(bad)  
   14000cf61:	(bad)  
   14000cf62:	(bad)  
   14000cf63:	inc    DWORD PTR [rcx]
   14000cf65:	add    BYTE PTR [rax],al
   14000cf67:	add    BYTE PTR [rcx],al
   14000cf69:	add    BYTE PTR [rax],al
   14000cf6b:	add    bh,bh
   14000cf6d:	(bad)  
   14000cf6e:	(bad)  
   14000cf6f:	(bad)  
   14000cf70:	(bad)  
   14000cf71:	(bad)  
   14000cf72:	(bad)  
   14000cf73:	inc    DWORD PTR [rax]
   14000cf75:	add    BYTE PTR [rcx],al
   14000cf77:	add    eax,DWORD PTR [rax]
   14000cf79:	add    BYTE PTR [rax],al
   14000cf7b:	add    BYTE PTR [rax+0x0],cl
   14000cf7e:	add    BYTE PTR [rax],al
   14000cf80:	add    DWORD PTR [rax],eax
   14000cf82:	add    BYTE PTR [rcx],al
	...
   14000cf8c:	xor    BYTE PTR [rax],al
   14000cf8e:	add    BYTE PTR [rax],al
   14000cf90:	add    BYTE PTR [rax],al
   14000cf92:	add    BYTE PTR [rax],al
   14000cf94:	add    al,BYTE PTR [rax]
   14000cf96:	add    BYTE PTR [rax],al
   14000cf98:	(bad)  
   14000cf99:	add    BYTE PTR [rbx+0x74],dh
   14000cf9c:	outs   dx,DWORD PTR fs:[rsi]
   14000cf9e:	ins    BYTE PTR es:[rdi],dx
   14000cf9f:	xor    ch,BYTE PTR gs:[rsi]
   14000cfa2:	je     0x14000d010
   14000cfa4:	(bad)  
   14000cfa5:	push   rdi
   14000cfa6:	push   rdi
   14000cfa7:	push   rdi
   14000cfa8:	(bad)  
   14000cfa9:	(bad)  
   14000cfaa:	(bad)  
   14000cfab:	(bad)  
   14000cfac:	(bad)  
   14000cfad:	(bad)  
   14000cfae:	(bad)  
   14000cfaf:	(bad)  
   14000cfb0:	(bad)  
   14000cfb1:	(bad)  
   14000cfb2:	(bad)  
   14000cfb3:	call   QWORD PTR [rax-0x6ffffffe]
   14000cfb9:	add    eax,0xffff0000
   14000cfbe:	(bad)  
   14000cfbf:	push   QWORD PTR [rax+rax*1]
   14000cfc2:	add    BYTE PTR [rax],al
   14000cfc4:	(bad)  
   14000cfc5:	(bad)  
   14000cfc6:	(bad)  
   14000cfc7:	(bad)  
   14000cfc8:	(bad)  
   14000cfc9:	(bad)  
   14000cfca:	(bad)  
   14000cfcb:	(bad)  
   14000cfcc:	(bad)  
   14000cfcd:	(bad)  
   14000cfce:	(bad)  
   14000cfcf:	(bad)  
   14000cfd0:	(bad)  
   14000cfd1:	(bad)  
   14000cfd2:	(bad)  
   14000cfd3:	call   FWORD PTR [rax-0xfffffd]
   14000cfd9:	(bad)  
   14000cfda:	(bad)  
   14000cfdb:	(bad)  
   14000cfdc:	(bad)  
   14000cfdd:	(bad)  
   14000cfde:	(bad)  
   14000cfdf:	call   rax
   14000cfe1:	add    al,BYTE PTR [rax]
   14000cfe3:	add    bh,bh
   14000cfe5:	(bad)  
   14000cfe6:	(bad)  
   14000cfe7:	(bad)  
   14000cfe8:	(bad)  
   14000cfe9:	(bad)  
   14000cfea:	(bad)  
   14000cfeb:	call   QWORD PTR [rax]
   14000cfed:	add    eax,DWORD PTR [rax]
   14000cfef:	add    bh,bh
   14000cff1:	(bad)  
   14000cff2:	(bad)  
   14000cff3:	(bad)  
   14000cff4:	(bad)  
   14000cff5:	(bad)  
   14000cff6:	(bad)  
   14000cff7:	call   FWORD PTR [rax-0xffffff]
   14000cffd:	(bad)  
   14000cffe:	(bad)  
   14000cfff:	(bad)  
   14000d000:	(bad)  
   14000d001:	(bad)  
   14000d002:	(bad)  
   14000d003:	(bad)  
   14000d004:	(bad)  
   14000d005:	(bad)  
   14000d006:	(bad)  
   14000d007:	call   FWORD PTR [rax]
   14000d009:	add    BYTE PTR [rax],al
   14000d00b:	add    ah,bl
   14000d00d:	add    eax,0xffff0000
   14000d012:	(bad)  
   14000d013:	(bad)  
   14000d014:	js     0x14000d01a
   14000d016:	add    BYTE PTR [rax],al
   14000d018:	sub    BYTE PTR [rdx],al
   14000d01a:	add    BYTE PTR [rax],al
   14000d01c:	(bad)  
   14000d01d:	(bad)  
   14000d01e:	(bad)  
   14000d01f:	(bad)  
   14000d020:	(bad)  
   14000d021:	(bad)  
   14000d022:	(bad)  
   14000d023:	(bad)  
   14000d024:	(bad)  
   14000d025:	(bad)  
   14000d026:	(bad)  
   14000d027:	(bad)  
   14000d028:	(bad)  
   14000d029:	(bad)  
   14000d02a:	(bad)  
   14000d02b:	call   rax
   14000d02d:	add    eax,DWORD PTR [rax]
   14000d02f:	add    bh,bh
   14000d031:	(bad)  
   14000d032:	(bad)  
   14000d033:	(bad)  
   14000d034:	(bad)  
   14000d035:	(bad)  
   14000d036:	(bad)  
   14000d037:	(bad)  
   14000d038:	(bad)  
   14000d039:	(bad)  
   14000d03a:	(bad)  
   14000d03b:	(bad)  
   14000d03c:	(bad)  
   14000d03d:	(bad)  
   14000d03e:	(bad)  
   14000d03f:	(bad)  
   14000d040:	(bad)  
   14000d041:	(bad)  
   14000d042:	(bad)  
   14000d043:	(bad)  
   14000d044:	(bad)  
   14000d045:	(bad)  
   14000d046:	(bad)  
   14000d047:	push   rsp
   14000d049:	add    eax,DWORD PTR [rax]
   14000d04b:	add    ah,ch
   14000d04d:	add    DWORD PTR [rax],eax
   14000d04f:	add    bh,bh
   14000d051:	(bad)  
   14000d052:	(bad)  
   14000d053:	push   QWORD PTR [rbp+rax*1+0x0]
   14000d057:	add    al,al
   14000d059:	add    al,0x0
   14000d05b:	add    bh,bh
   14000d05d:	(bad)  
   14000d05e:	(bad)  
   14000d05f:	(bad)  
   14000d060:	(bad)  
   14000d061:	(bad)  
   14000d062:	(bad)  
   14000d063:	call   FWORD PTR [rsp+rax*1+0x0]
   14000d067:	add    bh,bh
   14000d069:	(bad)  
   14000d06a:	(bad)  
   14000d06b:	(bad)  
   14000d06c:	fadd   QWORD PTR [rax]
   14000d06e:	add    BYTE PTR [rax],al
   14000d070:	sub    al,0x3
   14000d072:	add    BYTE PTR [rax],al
   14000d074:	(bad)  
   14000d075:	(bad)  
   14000d076:	(bad)  
   14000d077:	call   rax
   14000d079:	add    DWORD PTR [rax],eax
   14000d07b:	add    bh,bh
   14000d07d:	(bad)  
   14000d07e:	(bad)  
   14000d07f:	(bad)  
   14000d080:	(bad)  
   14000d081:	(bad)  
   14000d082:	(bad)  
   14000d083:	jmp    FWORD PTR [rdx+rax*1-0x10000]
   14000d08a:	(bad)  
   14000d08b:	call   QWORD PTR [rax+0x5]
   14000d08e:	add    BYTE PTR [rax],al
   14000d090:	add    BYTE PTR [rax],0x0
   14000d093:	add    bh,bh
   14000d095:	(bad)  
   14000d096:	(bad)  
   14000d097:	inc    DWORD PTR [rax+0x6]
   14000d09a:	add    BYTE PTR [rax],al
   14000d09c:	(bad)  
   14000d09d:	(bad)  
   14000d09e:	(bad)  
   14000d09f:	jmp    FWORD PTR [rax*1-0x10000]
   14000d0a6:	(bad)  
   14000d0a7:	(bad)  
   14000d0a8:	(bad)  
   14000d0a9:	(bad)  
   14000d0aa:	(bad)  
   14000d0ab:	(bad)  
   14000d0ac:	(bad)  
   14000d0ad:	(bad)  
   14000d0ae:	(bad)  
   14000d0af:	(bad)  
   14000d0b0:	(bad)  
   14000d0b1:	(bad)  
   14000d0b2:	(bad)  
   14000d0b3:	(bad)  
   14000d0b4:	(bad)  
   14000d0b5:	(bad)  
   14000d0b6:	(bad)  
   14000d0b7:	(bad)  
   14000d0b8:	(bad)  
   14000d0b9:	(bad)  
   14000d0ba:	(bad)  
   14000d0bb:	(bad)  
   14000d0bc:	(bad)  
   14000d0bd:	(bad)  
   14000d0be:	(bad)  
   14000d0bf:	push   rax
   14000d0c1:	add    al,BYTE PTR [rax]
   14000d0c3:	add    BYTE PTR [rdx+rax*1+0x0],cl
   14000d0c7:	add    bh,bh
   14000d0c9:	(bad)  
   14000d0ca:	(bad)  
   14000d0cb:	jmp    FWORD PTR [rsp+rax*1]
   14000d0ce:	add    BYTE PTR [rax],al
   14000d0d0:	(bad)  
   14000d0d1:	(bad)  
   14000d0d2:	(bad)  
   14000d0d3:	(bad)  
   14000d0d4:	(bad)  
   14000d0d5:	(bad)  
   14000d0d6:	(bad)  
   14000d0d7:	(bad)  
   14000d0d8:	(bad)  
   14000d0d9:	(bad)  
   14000d0da:	(bad)  
   14000d0db:	push   rax
   14000d0dd:	add    BYTE PTR [rax],al
   14000d0df:	add    bh,bh
   14000d0e1:	(bad)  
   14000d0e2:	(bad)  
   14000d0e3:	inc    DWORD PTR [rdx+rax*1]
   14000d0e6:	add    BYTE PTR [rax],al
   14000d0e8:	(bad)  
   14000d0e9:	(bad)  
   14000d0ea:	(bad)  
   14000d0eb:	dec    DWORD PTR [rsi+rax*1]
   14000d0ee:	add    BYTE PTR [rax],al
   14000d0f0:	(bad)  
   14000d0f1:	(bad)  
   14000d0f2:	(bad)  
   14000d0f3:	call   QWORD PTR [rsp+rax*1]
   14000d0f6:	add    BYTE PTR [rax],al
   14000d0f8:	add    BYTE PTR [rax],al
   14000d0fa:	add    BYTE PTR [rax],al
   14000d0fc:	(bad)  
   14000d0fd:	(bad)  
   14000d0fe:	(bad)  
   14000d0ff:	(bad)  
   14000d100:	(bad)  
   14000d101:	(bad)  
   14000d102:	(bad)  
   14000d103:	(bad)  
   14000d104:	(bad)  
   14000d105:	(bad)  
   14000d106:	(bad)  
   14000d107:	(bad)  
   14000d108:	(bad)  
   14000d109:	(bad)  
   14000d10a:	(bad)  
   14000d10b:	(bad)  
   14000d10c:	(bad)  
   14000d10d:	(bad)  
   14000d10e:	(bad)  
   14000d10f:	jmp    QWORD PTR [rsi+rax*1]
   14000d112:	add    BYTE PTR [rax],al
   14000d114:	(bad)  
   14000d115:	(bad)  
   14000d116:	(bad)  
   14000d117:	dec    DWORD PTR [rax+0x4]
   14000d11a:	add    BYTE PTR [rax],al
   14000d11c:	(bad)  
   14000d11d:	(bad)  
   14000d11e:	(bad)  
   14000d11f:	(bad)  
   14000d120:	(bad)  
   14000d121:	(bad)  
   14000d122:	(bad)  
   14000d123:	dec    DWORD PTR [rax*1-0x10000]
   14000d12a:	(bad)  
   14000d12b:	jmp    FWORD PTR [rbp+rax*1-0x10000]
   14000d132:	(bad)  
   14000d133:	(bad)  
   14000d134:	(bad)  
   14000d135:	(bad)  
   14000d136:	(bad)  
   14000d137:	push   rsp
   14000d139:	add    eax,0xffff0000
   14000d13e:	(bad)  
   14000d13f:	(bad)  
   14000d140:	(bad)  
   14000d141:	(bad)  
   14000d142:	(bad)  
   14000d143:	(bad)  
   14000d144:	(bad)  
   14000d145:	(bad)  
   14000d146:	(bad)  
   14000d147:	(bad)  
   14000d148:	(bad)  
   14000d149:	(bad)  
   14000d14a:	(bad)  
   14000d14b:	(bad)  
   14000d14c:	(bad)  
   14000d14d:	(bad)  
   14000d14e:	(bad)  
   14000d14f:	(bad)  
   14000d150:	(bad)  
   14000d151:	(bad)  
   14000d152:	(bad)  
   14000d153:	(bad)  
   14000d154:	cmp    al,0x1
   14000d156:	add    BYTE PTR [rax],al
   14000d158:	(bad)  
   14000d159:	(bad)  
   14000d15a:	(bad)  
   14000d15b:	(bad)  
   14000d15c:	(bad)  
   14000d15d:	(bad)  
   14000d15e:	(bad)  
   14000d15f:	(bad)  
   14000d160:	(bad)  
   14000d161:	(bad)  
   14000d162:	(bad)  
   14000d163:	(bad)  
   14000d164:	call   0x13f00d16d
   14000d169:	(bad)  
   14000d16a:	(bad)  
   14000d16b:	(bad)  
   14000d16c:	(bad)  
   14000d16d:	(bad)  
   14000d16e:	(bad)  
   14000d16f:	(bad)  
   14000d170:	(bad)  
   14000d171:	(bad)  
   14000d172:	(bad)  
   14000d173:	(bad)  
   14000d174:	(bad)  
   14000d175:	(bad)  
   14000d176:	(bad)  
   14000d177:	(bad)  
   14000d178:	(bad)  
   14000d179:	(bad)  
   14000d17a:	(bad)  
   14000d17b:	(bad)  
   14000d17c:	(bad)  
   14000d17d:	(bad)  
   14000d17e:	(bad)  
   14000d17f:	inc    DWORD PTR [rax+0x5]
   14000d182:	add    BYTE PTR [rax],al
   14000d184:	rol    BYTE PTR [rip+0xffffffffffff0000],0xff        # 0x13fffd18b
   14000d18b:	(bad)  
   14000d18c:	(bad)  
   14000d18d:	(bad)  
   14000d18e:	(bad)  
   14000d18f:	push   QWORD PTR [rbx+rax*1+0x0]
   14000d193:	add    BYTE PTR [rax+0x0],dl
   14000d196:	add    BYTE PTR [rax],al
   14000d198:	mov    ah,0x3
   14000d19a:	add    BYTE PTR [rax],al
   14000d19c:	(bad)  
   14000d19d:	(bad)  
   14000d19e:	(bad)  
   14000d19f:	(bad)  
   14000d1a0:	(bad)  
   14000d1a1:	(bad)  
   14000d1a2:	(bad)  
   14000d1a3:	(bad)  
   14000d1a4:	(bad)  
   14000d1a5:	(bad)  
   14000d1a6:	(bad)  
   14000d1a7:	(bad)  
   14000d1a8:	(bad)  
   14000d1a9:	(bad)  
   14000d1aa:	(bad)  
   14000d1ab:	(bad)  
   14000d1ac:	(bad)  
   14000d1ad:	(bad)  
   14000d1ae:	(bad)  
   14000d1af:	dec    DWORD PTR [rbx]
   14000d1b1:	add    ah,dl
   14000d1b3:	test   eax,0x506e5055
   14000d1b8:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000d1ba:	jae    0x14000d230
   14000d1bc:	imul   r12,QWORD PTR [rdx+0x57],0x0
   14000d1c4:	(bad)  
   14000d1c5:	(bad)  
   14000d1c6:	(bad)  
   14000d1c7:	dec    DWORD PTR [rsi]
   14000d1c9:	cmp    BYTE PTR [rax+0x505549dc],bl
   14000d1cf:	outs   dx,BYTE PTR ds:[rsi]
   14000d1d0:	push   rax
   14000d1d1:	rex.RB jbe 0x14000d239
   14000d1d4:	outs   dx,BYTE PTR ds:[rsi]
   14000d1d5:	je     0x14000d22a
   14000d1d7:	imul   ebp,DWORD PTR [rsi+0x6b],0x5757
   14000d1de:	add    BYTE PTR [rax],al
   14000d1e0:	(bad)  
   14000d1e1:	(bad)  
   14000d1e2:	(bad)  
   14000d1e3:	dec    DWORD PTR [rsi]
   14000d1e5:	add    BYTE PTR [rsi+0x536e4fd6],al
   14000d1eb:	je     0x14000d24e
   14000d1ed:	je     0x14000d254
   14000d1ef:	rex.XB push 0x65676e61
   14000d1f5:	fs push rdi
   14000d1f7:	push   rdi
   14000d1f8:	(bad)  
   14000d1f9:	(bad)  
   14000d1fa:	(bad)  
   14000d1fb:	(bad)  
   14000d1fc:	(bad)  
   14000d1fd:	(bad)  
   14000d1fe:	(bad)  
   14000d1ff:	dec    DWORD PTR [rax]
   14000d201:	add    BYTE PTR [rbx-0x41],bh
   14000d204:	movsxd eax,DWORD PTR [rbx+0x68]
   14000d207:	(bad)  
   14000d208:	outs   dx,BYTE PTR ds:[rsi]
   14000d209:	addr32 gs jae 0x14000d20c
   14000d20d:	(bad)  
   14000d20e:	(bad)  
   14000d20f:	(bad)  
   14000d210:	(bad)  
   14000d211:	(bad)  
   14000d212:	(bad)  
   14000d213:	dec    DWORD PTR [rdi]
   14000d215:	add    BYTE PTR [rcx+0x64677209],dl
   14000d21b:	imul   esi,DWORD PTR [rbx+0x70],0x68436469
   14000d222:	(bad)  
   14000d223:	outs   dx,BYTE PTR ds:[rsi]
   14000d224:	addr32 gs jae 0x14000d27f
   14000d228:	add    BYTE PTR [rax],al
   14000d22a:	add    BYTE PTR [rax],al
   14000d22c:	(bad)  
   14000d22d:	(bad)  
   14000d22e:	(bad)  
   14000d22f:	call   QWORD PTR [rdx]
   14000d231:	add    BYTE PTR [rdx],bh
   14000d233:	mov    ebx,0x74536e4f
   14000d238:	(bad)  
   14000d239:	je     0x14000d2a0
   14000d23b:	rex.XB push 0x65676e61
   14000d241:	fs push rbx
   14000d243:	(bad)  
   14000d244:	gs push di
   14000d247:	push   rdi
   14000d248:	(bad)  
   14000d249:	(bad)  
   14000d24a:	(bad)  
   14000d24b:	(bad)  
   14000d24c:	(bad)  
   14000d24d:	(bad)  
   14000d24e:	(bad)  
   14000d24f:	call   QWORD PTR [rdx]
   14000d251:	add    BYTE PTR [rax+rbp*2+0x76],bh
   14000d255:	(bad)  
   14000d256:	jb     0x14000d2cb
   14000d258:	(bad)  
   14000d259:	imul   esi,DWORD PTR fs:[rbx+0x70],0x68436469
   14000d261:	(bad)  
   14000d262:	outs   dx,BYTE PTR ds:[rsi]
   14000d263:	addr32 gs jae 0x14000d2be
   14000d267:	push   rdi
   14000d268:	add    BYTE PTR fs:[rax],al
   14000d26b:	add    bh,bh
   14000d26d:	(bad)  
   14000d26e:	(bad)  
   14000d26f:	call   QWORD PTR [rax]
   14000d271:	cmp    BYTE PTR [rax+0x505549e2],ch
   14000d277:	outs   dx,BYTE PTR ds:[rsi]
   14000d278:	push   rax
   14000d279:	rex.RB jbe 0x14000d2e1
   14000d27c:	outs   dx,BYTE PTR ds:[rsi]
   14000d27d:	je     0x14000d2d2
   14000d27f:	outs   dx,DWORD PTR ds:[rsi]
   14000d280:	jne    0x14000d2f4
   14000d282:	movsxd esp,DWORD PTR [rbp+0x64]
   14000d285:	add    BYTE PTR [rax],al
   14000d287:	add    bh,bh
   14000d289:	(bad)  
   14000d28a:	(bad)  
   14000d28b:	inc    DWORD PTR [rsi]
   14000d28d:	add    BYTE PTR [rcx+0x76644170],dh
   14000d293:	imul   esi,DWORD PTR [rbx+0x65],0xffff5757
   14000d29a:	(bad)  
   14000d29b:	(bad)  
   14000d29c:	(bad)  
   14000d29d:	(bad)  
   14000d29e:	(bad)  
   14000d29f:	dec    DWORD PTR [rip+0x704f4d00]        # 0x1b0501fa5
   14000d2a5:	gs jae 0x14000d2fb
   14000d2a8:	jne    0x14000d30c
   14000d2aa:	jae    0x14000d30f
   14000d2ac:	jb     0x14000d317
   14000d2ae:	(bad)  
   14000d2af:	gs jb  0x14000d309
   14000d2b2:	push   rdi
   14000d2b3:	push   rdi
   14000d2b4:	add    BYTE PTR fs:[rax],al
   14000d2b7:	add    bh,bh
   14000d2b9:	(bad)  
   14000d2ba:	(bad)  
   14000d2bb:	dec    DWORD PTR [rax]
   14000d2bd:	add    bh,al
   14000d2bf:	mov    dl,0x55
   14000d2c1:	outs   dx,BYTE PTR ds:[rsi]
   14000d2c2:	(bad)  
   14000d2c3:	fs jbe 0x14000d32f
   14000d2c6:	jae    0x14000d32d
   14000d2c8:	enter  0x0,0x0
   14000d2cc:	(bad)  
   14000d2cd:	(bad)  
   14000d2ce:	(bad)  
   14000d2cf:	dec    DWORD PTR [rsi]
   14000d2d1:	cmp    BYTE PTR [rcx-0x6b],dl
   14000d2d4:	rex.WB push r13
   14000d2d6:	push   rax
   14000d2d7:	outs   dx,BYTE PTR ds:[rsi]
   14000d2d8:	push   rax
   14000d2d9:	push   rdx
   14000d2da:	imul   esi,DWORD PTR gs:[ebx+0x74],0x57726172
   14000d2e3:	push   rdi
   14000d2e4:	enter  0x0,0x0
   14000d2e8:	(bad)  
   14000d2e9:	(bad)  
   14000d2ea:	(bad)  
   14000d2eb:	dec    DWORD PTR [rsi]
   14000d2ed:	add    bl,ch
   14000d2ef:	(bad)  
   14000d2f0:	push   rdx
   14000d2f1:	imul   esi,DWORD PTR gs:[ebx+0x74],0x65447265
   14000d2fa:	jbe    0x14000d365
   14000d2fc:	movsxd esp,DWORD PTR [rbp+0x57]
   14000d2ff:	push   rdi
   14000d300:	(bad)  
   14000d301:	(bad)  
   14000d302:	(bad)  
   14000d303:	(bad)  
   14000d304:	(bad)  
   14000d305:	(bad)  
   14000d306:	(bad)  
   14000d307:	dec    DWORD PTR [rbx]
   14000d309:	add    BYTE PTR [rsi+rax*8+0x72747362],al
   14000d310:	pop    rax
   14000d311:	rex.WRB
   14000d312:	rex.WR
   14000d313:	rex.R
   14000d314:	gs jae 0x14000d37a
   14000d317:	push   rdi
   14000d318:	(bad)  
   14000d319:	(bad)  
   14000d31a:	(bad)  
   14000d31b:	dec    DWORD PTR [rcx+rax*1]
   14000d31e:	add    BYTE PTR [rax],al
   14000d320:	sbb    al,0x0
   14000d322:	(bad)  
   14000d323:	movsxd esp,DWORD PTR [rdx+0x73]
   14000d326:	je     0x14000d39a
   14000d328:	push   rax
   14000d329:	jb     0x14000d39a
   14000d32b:	addr32 rex.WB
   14000d32d:	rex.R
   14000d32e:	rex.R
   14000d32f:	gs jbe 0x14000d39b
   14000d332:	movsxd esp,DWORD PTR [rbp+0x43]
   14000d335:	outs   dx,DWORD PTR ds:[rsi]
   14000d336:	outs   dx,BYTE PTR ds:[rsi]
   14000d337:	je     0x14000d3ab
   14000d339:	outs   dx,DWORD PTR ds:[rsi]
   14000d33a:	ins    BYTE PTR es:[rdi],dx
   14000d33b:	rex.XB ins BYTE PTR es:[rdi],dx
   14000d33d:	(bad)  
   14000d33e:	jae    0x14000d3b3
   14000d340:	(bad)  
   14000d341:	(bad)  
   14000d342:	(bad)  
   14000d343:	(bad)  
   14000d344:	(bad)  
   14000d345:	(bad)  
   14000d346:	(bad)  
   14000d347:	dec    DWORD PTR [rsi]
   14000d349:	add    BYTE PTR [rsi+rax*8],dl
   14000d34c:	(bad)
   14000d351:	outs   dx,BYTE PTR ds:[rsi]
   14000d352:	imul   esi,DWORD PTR [rbx+rdx*2+0x74],0x676e6972
   14000d35a:	push   rdi
   14000d35b:	push   rdi
   14000d35c:	(bad)  
   14000d35d:	(bad)  
   14000d35e:	(bad)  
   14000d35f:	(bad)  
   14000d360:	(bad)  
   14000d361:	(bad)  
   14000d362:	(bad)  
   14000d363:	dec    DWORD PTR [rdi]
   14000d365:	add    bh,cl
   14000d367:	mov    edi,0x72747362
   14000d36c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d36e:	outs   dx,BYTE PTR ds:[rsi]
   14000d36f:	je     0x14000d3d2
   14000d371:	imul   ebp,DWORD PTR [rsi+0x65],0x57644972
   14000d378:	(bad)  
   14000d379:	(bad)  
   14000d37a:	(bad)  
   14000d37b:	(bad)  
   14000d37c:	(bad)  
   14000d37d:	(bad)  
   14000d37e:	(bad)  
   14000d37f:	call   QWORD PTR [rax]
   14000d381:	add    BYTE PTR [rsp+riz*2+0x72747362],dh
   14000d388:	push   rdx
   14000d389:	gs jae 0x14000d3fb
   14000d38c:	jne    0x14000d400
   14000d38e:	movsxd esp,DWORD PTR [rbp+0x50]
   14000d391:	(bad)  
   14000d392:	je     0x14000d3fc
   14000d394:	(bad)  
   14000d395:	(bad)  
   14000d396:	(bad)  
   14000d397:	(bad)  
   14000d398:	(bad)  
   14000d399:	(bad)  
   14000d39a:	(bad)  
   14000d39b:	dec    DWORD PTR [rcx]
   14000d39d:	add    BYTE PTR [rcx],ch
   14000d39f:	shr    DWORD PTR [rsi+0x4c],cl
   14000d3a2:	imul   esp,DWORD PTR [rsi+0x65],0x656d6954
   14000d3a9:	push   rdi
   14000d3aa:	push   rdi
   14000d3ab:	push   rdi
   14000d3ac:	(bad)  
   14000d3ad:	(bad)  
   14000d3ae:	(bad)  
   14000d3af:	push   QWORD PTR [rcx+rax*1+0x150000]
   14000d3b6:	rex.WRXB div QWORD PTR [r8+0x62]
   14000d3ba:	jae    0x14000d430
   14000d3bc:	jb     0x14000d402
   14000d3be:	gs jbe 0x14000d42a
   14000d3c1:	movsxd esp,DWORD PTR [rbp+0x49]
   14000d3c4:	fs outs dx,BYTE PTR gs:[rsi]
   14000d3c7:	je     0x14000d432
   14000d3c9:	imul   sp,WORD PTR [rbp+0x72],0x5757
   14000d3cf:	push   rdi
   14000d3d0:	enter  0x0,0x0
   14000d3d4:	(bad)  
   14000d3d5:	(bad)  
   14000d3d6:	(bad)  
   14000d3d7:	call   QWORD PTR [rip+0x526d1c00]        # 0x1926defdd
   14000d3dd:	imul   esi,DWORD PTR gs:[ebx+0x74],0x75527265
   14000d3e6:	outs   dx,BYTE PTR ds:[rsi]
   14000d3e7:	outs   dx,BYTE PTR ds:[rsi]
   14000d3e8:	imul   ebp,DWORD PTR [rsi+0x67],0x69766544
   14000d3ef:	movsxd esp,DWORD PTR [rbp+0x57]
   14000d3f2:	push   rdi
   14000d3f3:	push   rdi
   14000d3f4:	(bad)  
   14000d3f5:	(bad)  
   14000d3f6:	(bad)  
   14000d3f7:	push   QWORD PTR [rax+0x1]
   14000d3fa:	add    BYTE PTR [rax],al
   14000d3fc:	adc    DWORD PTR [rax],eax
   14000d3fe:	rex.RXB test BYTE PTR [r8+0x75],r14b
   14000d402:	outs   dx,BYTE PTR ds:[rsi]
   14000d403:	imul   eax,DWORD PTR [rbp+riz*2+0x76],0x69
   14000d408:	movsxd esp,DWORD PTR [rbp+0x43]
   14000d40b:	outs   dx,DWORD PTR ds:[rsi]
   14000d40c:	outs   dx,BYTE PTR ds:[rsi]
   14000d40d:	je     0x14000d481
   14000d40f:	outs   dx,DWORD PTR ds:[rsi]
   14000d410:	ins    BYTE PTR es:[rdi],dx
   14000d411:	push   rdi
   14000d412:	push   rdi
   14000d413:	push   rdi
   14000d414:	enter  0x0,0x0
   14000d418:	(bad)  
   14000d419:	(bad)  
   14000d41a:	(bad)  
   14000d41b:	call   QWORD PTR [rsi]
   14000d41d:	add    dh,dh
   14000d41f:	popf   
   14000d420:	push   rdx
   14000d421:	imul   esi,DWORD PTR gs:[ebx+0x74],0x65447265
   14000d42a:	jbe    0x14000d495
   14000d42c:	movsxd esp,DWORD PTR [rbp+0x50]
   14000d42f:	jb     0x14000d4a0
   14000d431:	jbe    0x14000d49c
   14000d433:	fs gs jb 0x14000d48e
   14000d437:	push   rdi
   14000d438:	(bad)  
   14000d439:	(bad)  
   14000d43a:	(bad)  
   14000d43b:	(bad)  
   14000d43c:	(bad)  
   14000d43d:	(bad)  
   14000d43e:	(bad)  
   14000d43f:	call   QWORD PTR [rax]
   14000d441:	add    BYTE PTR [rbx+0x74736201],al
   14000d447:	jb     0x14000d499
   14000d449:	jb     0x14000d4ba
   14000d44b:	jbe    0x14000d4b6
   14000d44d:	fs gs jb 0x14000d49f
   14000d451:	(bad)  
   14000d452:	ins    DWORD PTR es:[rdi],dx
   14000d453:	gs (bad) 
   14000d455:	(bad)  
   14000d456:	(bad)  
   14000d457:	(bad)  
   14000d458:	(bad)  
   14000d459:	(bad)  
   14000d45a:	(bad)  
   14000d45b:	call   QWORD PTR [rdi]
   14000d45d:	add    BYTE PTR [rdi+0x74736268],dh
   14000d463:	jb     0x14000d4b5
   14000d465:	jb     0x14000d4d6
   14000d467:	addr32 rex.WB
   14000d469:	rex.R push rax
   14000d46b:	jb     0x14000d4dc
   14000d46d:	jbe    0x14000d4d8
   14000d46f:	fs gs jb 0x14000d4b6
   14000d473:	ins    BYTE PTR es:[rdi],dx
   14000d474:	(bad)  
   14000d475:	jae    0x14000d4ea
   14000d477:	push   rdi
   14000d478:	enter  0x0,0x0
   14000d47c:	(bad)  
   14000d47d:	(bad)  
   14000d47e:	(bad)  
   14000d47f:	call   QWORD PTR [rbx]
   14000d481:	add    BYTE PTR [rsi],cl
   14000d483:	adc    DWORD PTR [rdi+0x65],eax
   14000d486:	je     0x14000d4dd
   14000d488:	outs   dx,BYTE PTR ds:[rsi]
   14000d489:	imul   esi,DWORD PTR [rcx+0x75],0x76654465
   14000d490:	imul   esp,DWORD PTR [rbx+0x65],0x656d614e
   14000d497:	push   rdi
   14000d498:	(bad)  
   14000d499:	(bad)  
   14000d49a:	(bad)  
   14000d49b:	(bad)  
   14000d49c:	(bad)  
   14000d49d:	(bad)  
   14000d49e:	(bad)  
   14000d49f:	call   QWORD PTR [rax+rax*1]
   14000d4a2:	rex.RX mov fs,WORD PTR [rdx+0x73]
   14000d4a6:	je     0x14000d51a
   14000d4a8:	rex.R
   14000d4a9:	gs jbe 0x14000d515
   14000d4ac:	movsxd esp,DWORD PTR [rbp+0x49]
   14000d4af:	fs outs dx,BYTE PTR gs:[rsi]
   14000d4b2:	je     0x14000d51d
   14000d4b4:	imul   sp,WORD PTR [rbp+0x72],0xffff
   14000d4ba:	(bad)  
   14000d4bb:	jmp    QWORD PTR [rax+rax*1+0x0]
   14000d4bf:	add    BYTE PTR [rdi],cl
   14000d4c1:	add    BYTE PTR [rcx],dl
   14000d4c3:	(bad)  
   14000d4c4:	(bad)
   14000d4c9:	gs ins DWORD PTR es:[rdi],dx
   14000d4cb:	jo     0x14000d539
   14000d4cd:	(bad)  
   14000d4ce:	je     0x14000d535
   14000d4d0:	push   rbp
   14000d4d1:	rex.R
   14000d4d2:	rex.WRX push rdi
   14000d4d4:	(bad)  
   14000d4d5:	(bad)  
   14000d4d6:	(bad)  
   14000d4d7:	(bad)  
   14000d4d8:	(bad)  
   14000d4d9:	(bad)  
   14000d4da:	(bad)  
   14000d4db:	dec    DWORD PTR [rax]
   14000d4dd:	add    BYTE PTR [rdx+0x736270af],dh
   14000d4e3:	je     0x14000d557
   14000d4e5:	push   rbp
   14000d4e6:	rex.R
   14000d4e7:	rex.WRX enter 0x0,0x0
   14000d4ec:	movabs al,ds:0x55707c0010000000
   14000d4f5:	outs   dx,BYTE PTR ds:[rsi]
   14000d4f6:	jb     0x14000d55d
   14000d4f8:	imul   esi,DWORD PTR [ebx+0x74],0x65447265
   14000d500:	jbe    0x14000d56b
   14000d502:	movsxd esp,DWORD PTR [rbp-0x1]
   14000d505:	(bad)  
   14000d506:	(bad)  
   14000d507:	(bad)  
   14000d508:	(bad)  
   14000d509:	(bad)  
   14000d50a:	(bad)  
   14000d50b:	dec    DWORD PTR [rdx]
   14000d50d:	add    BYTE PTR [rbx],bl
   14000d50f:	jae    0x14000d577
   14000d511:	push   rax
   14000d512:	gs jb  0x14000d582
   14000d515:	(bad)  
   14000d516:	outs   dx,BYTE PTR ds:[rsi]
   14000d517:	outs   dx,BYTE PTR gs:[rsi]
   14000d519:	je     0x14000d572
   14000d51b:	push   rdi
   14000d51c:	enter  0x0,0x0
   14000d520:	(bad)  
   14000d521:	(bad)  
   14000d522:	(bad)  
   14000d523:	call   FWORD PTR [rax]
   14000d525:	add    BYTE PTR [rdx+0x4c],bh
   14000d528:	push   rbp
   14000d529:	outs   dx,BYTE PTR ds:[rsi]
   14000d52a:	jb     0x14000d591
   14000d52c:	imul   esi,DWORD PTR [ebx+0x74],0x65447265
   14000d534:	jbe    0x14000d59f
   14000d536:	movsxd esp,DWORD PTR [rbp+0x50]
   14000d539:	jb     0x14000d5aa
   14000d53b:	jbe    0x14000d5a6
   14000d53d:	fs gs jb 0x14000d56d
   14000d541:	add    DWORD PTR [rax],eax
   14000d543:	add    bh,bh
   14000d545:	(bad)  
   14000d546:	(bad)  
   14000d547:	call   QWORD PTR [rax]
   14000d549:	cmp    BYTE PTR [rbx],cl
   14000d54b:	fisttp WORD PTR [rcx+0x55]
   14000d54e:	push   rax
   14000d54f:	outs   dx,BYTE PTR ds:[rsi]
   14000d550:	push   rax
   14000d551:	push   rdx
   14000d552:	gs jb  0x14000d5ba
   14000d555:	imul   esi,DWORD PTR [ebx+0x74],0x2c726172
   14000d55d:	add    DWORD PTR [rax],eax
   14000d55f:	add    BYTE PTR [rax+0x3],al
   14000d562:	add    BYTE PTR [rax],al
   14000d564:	adc    BYTE PTR [rax],al
   14000d566:	cld    
   14000d567:	jb     0x14000d5bb
   14000d569:	gs jb  0x14000d5d1
   14000d56c:	imul   esi,DWORD PTR [ebx+0x74],0x65447265
   14000d574:	jbe    0x14000d5df
   14000d576:	movsxd esp,DWORD PTR [rbp+0x2c]
   14000d579:	add    DWORD PTR [rax],eax
   14000d57b:	add    bh,bh
   14000d57d:	(bad)  
   14000d57e:	(bad)  
   14000d57f:	call   QWORD PTR [rdi]
   14000d581:	add    BYTE PTR [rcx],ah
   14000d583:	cmp    DWORD PTR [rdx+0x65],edx
   14000d586:	jb     0x14000d5ed
   14000d588:	imul   esi,DWORD PTR [ebx+0x74],0x75527265
   14000d590:	outs   dx,BYTE PTR ds:[rsi]
   14000d591:	outs   dx,BYTE PTR ds:[rsi]
   14000d592:	imul   ebp,DWORD PTR [rsi+0x67],0x69766544
   14000d599:	movsxd esp,DWORD PTR [rbp+0x57]
   14000d59c:	nop
   14000d59d:	add    DWORD PTR [rax],eax
   14000d59f:	add    al,al
   14000d5a1:	add    BYTE PTR [rax],al
   14000d5a3:	add    BYTE PTR [rdx],dl
   14000d5a5:	cmp    BYTE PTR [rax],ch
   14000d5a7:	(bad)  
   14000d5a8:	rex.WB push r13
   14000d5aa:	push   rax
   14000d5ab:	outs   dx,BYTE PTR ds:[rsi]
   14000d5ac:	push   rax
   14000d5ad:	rex.R
   14000d5ae:	gs jbe 0x14000d61a
   14000d5b1:	movsxd esp,DWORD PTR [rbp+0x43]
   14000d5b4:	outs   dx,DWORD PTR ds:[rsi]
   14000d5b5:	outs   dx,BYTE PTR ds:[rsi]
   14000d5b6:	je     0x14000d62a
   14000d5b8:	outs   dx,DWORD PTR ds:[rsi]
   14000d5b9:	ins    BYTE PTR es:[rdi],dx
   14000d5ba:	push   rdi
   14000d5bb:	push   rdi
   14000d5bc:	nop
   14000d5bd:	add    DWORD PTR [rax],eax
   14000d5bf:	add    bh,bh
   14000d5c1:	(bad)  
   14000d5c2:	(bad)  
   14000d5c3:	dec    DWORD PTR [rdx]
   14000d5c5:	add    bl,dl
   14000d5c7:	rex.WRX
   14000d5c8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d5ca:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000d5d2:	push   rdi
   14000d5d3:	push   rdi
   14000d5d4:	nop
   14000d5d5:	add    DWORD PTR [rax],eax
   14000d5d7:	add    bh,bh
   14000d5d9:	(bad)  
   14000d5da:	(bad)  
   14000d5db:	call   QWORD PTR [rax]
   14000d5dd:	add    cl,cl
   14000d5df:	jle    0x14000d628
   14000d5e1:	gs je  0x14000d637
   14000d5e4:	gs jb  0x14000d65d
   14000d5e7:	imul   esp,DWORD PTR [rbx+0x65],0x656a624f
   14000d5ee:	movsxd esi,DWORD PTR [rdi+rdi*8-0x1]
   14000d5f2:	(bad)  
   14000d5f3:	(bad)  
   14000d5f4:	(bad)  
   14000d5f5:	(bad)  
   14000d5f6:	(bad)  
   14000d5f7:	inc    DWORD PTR [rdi]
   14000d5f9:	add    ah,bl
   14000d5fb:	ret    
   14000d5fc:	(bad)
   14000d601:	rex.R
   14000d602:	rex.WRX push rdi
   14000d604:	(bad)  
   14000d605:	(bad)  
   14000d606:	(bad)  
   14000d607:	(bad)  
   14000d608:	(bad)  
   14000d609:	(bad)  
   14000d60a:	(bad)  
   14000d60b:	dec    DWORD PTR [rip+0x62eb2f00]        # 0x1a2ec0511
   14000d611:	jae    0x14000d687
   14000d613:	jb     0x14000d668
   14000d615:	gs jb  0x14000d68e
   14000d618:	imul   esp,DWORD PTR [rbx+0x65],0x57576449
   14000d61f:	push   rdi
   14000d620:	(bad)  
   14000d621:	(bad)  
   14000d622:	(bad)  
   14000d623:	call   FWORD PTR [rbx+rax*1+0x0]
   14000d627:	add    BYTE PTR [rip+0x70e41b00],cl        # 0x1b0e4f12d
   14000d62d:	jo     0x14000d693
   14000d62f:	imul   esi,DWORD PTR [rbx+0x70],0x76726553
   14000d636:	imul   esp,DWORD PTR [rbx+0x65],0xf4575757
   14000d63d:	add    DWORD PTR [rax],eax
   14000d63f:	add    bh,bh
   14000d641:	(bad)  
   14000d642:	(bad)  
   14000d643:	call   FWORD PTR [rip+0x496bb938]        # 0x1896c8f81
   14000d649:	push   rbp
   14000d64a:	push   rax
   14000d64b:	outs   dx,BYTE PTR ds:[rsi]
   14000d64c:	push   rax
   14000d64d:	rex.R
   14000d64e:	gs jbe 0x14000d6ba
   14000d651:	movsxd esp,DWORD PTR [rbp+0x43]
   14000d654:	outs   dx,DWORD PTR ds:[rsi]
   14000d655:	outs   dx,BYTE PTR ds:[rsi]
   14000d656:	je     0x14000d6ca
   14000d658:	outs   dx,DWORD PTR ds:[rsi]
   14000d659:	ins    BYTE PTR es:[rdi],dx
   14000d65a:	rex.W je 0x14000d6d1
   14000d65d:	jo     0x14000d6a7
   14000d65f:	gs (bad) 
   14000d661:	fs gs jb 0x14000d6d8
   14000d665:	push   rdi
   14000d666:	push   rdi
   14000d667:	push   rdi
   14000d668:	hlt    
   14000d669:	add    DWORD PTR [rax],eax
   14000d66b:	add    bh,bh
   14000d66d:	(bad)  
   14000d66e:	(bad)  
   14000d66f:	call   FWORD PTR [rax+rax*1]
   14000d672:	lods   al,BYTE PTR ds:[rsi]
   14000d673:	sub    eax,DWORD PTR [rdi+0x65]
   14000d676:	je     0x14000d6b9
   14000d678:	fs imul esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x526c616e
   14000d682:	gs jae 0x14000d6f5
   14000d685:	outs   dx,DWORD PTR ds:[rsi]
   14000d686:	outs   dx,BYTE PTR ds:[rsi]
   14000d687:	jae    0x14000d6ee
   14000d689:	rex.W
   14000d68a:	gs (bad) 
   14000d68c:	fs gs jb 0x14000d703
   14000d690:	(bad)  
   14000d691:	(bad)  
   14000d692:	(bad)  
   14000d693:	(bad)  
   14000d694:	(bad)  
   14000d695:	(bad)  
   14000d696:	(bad)  
   14000d697:	call   QWORD PTR [rdi]
   14000d699:	add    bh,ch
   14000d69b:	in     al,dx
   14000d69c:	(bad)
   14000d6a1:	je     0x14000d717
   14000d6a3:	jo     0x14000d6f7
   14000d6a5:	gs jae 0x14000d718
   14000d6a8:	outs   dx,DWORD PTR ds:[rsi]
   14000d6a9:	outs   dx,BYTE PTR ds:[rsi]
   14000d6aa:	jae    0x14000d711
   14000d6ac:	rex.W
   14000d6ad:	gs (bad) 
   14000d6af:	fs gs jb 0x14000d726
   14000d6b3:	push   rdi
   14000d6b4:	pop    rax
   14000d6b5:	add    al,BYTE PTR [rax]
   14000d6b7:	add    bh,bh
   14000d6b9:	(bad)  
   14000d6ba:	(bad)  
   14000d6bb:	call   QWORD PTR [rbx]
   14000d6bd:	cmp    BYTE PTR [rdi+0x74],bl
   14000d6c0:	rex.WB push r13
   14000d6c2:	push   rax
   14000d6c3:	outs   dx,BYTE PTR ds:[rsi]
   14000d6c4:	push   rax
   14000d6c5:	rex.R
   14000d6c6:	gs jbe 0x14000d732
   14000d6c9:	movsxd esp,DWORD PTR [rbp+0x50]
   14000d6cc:	jb     0x14000d73d
   14000d6ce:	jbe    0x14000d739
   14000d6d0:	fs gs jb 0x14000d72b
   14000d6d4:	pop    rax
   14000d6d5:	add    al,BYTE PTR [rax]
   14000d6d7:	add    bh,bh
   14000d6d9:	(bad)  
   14000d6da:	(bad)  
   14000d6db:	inc    DWORD PTR [rip+0x5306be00]        # 0x1930794e1
   14000d6e1:	je     0x14000d744
   14000d6e3:	jb     0x14000d759
   14000d6e5:	push   rdi
   14000d6e6:	push   rdi
   14000d6e7:	push   rdi
   14000d6e8:	pop    rax
   14000d6e9:	add    al,BYTE PTR [rax]
   14000d6eb:	add    BYTE PTR [rdx+rax*1+0x0],ch
   14000d6ef:	add    BYTE PTR [rax+rax*1],al
   14000d6f2:	div    BYTE PTR [rbx+rdx*2]
   14000d6f5:	je     0x14000d766
   14000d6f7:	jo     0x14000d6b5
   14000d6f9:	add    al,BYTE PTR [rax]
   14000d6fb:	add    BYTE PTR [rsp+rax*1+0x38170000],dl
   14000d702:	mov    ecx,0x50554943
   14000d707:	outs   dx,BYTE PTR ds:[rsi]
   14000d708:	push   rax
   14000d709:	push   rdx
   14000d70a:	gs ins DWORD PTR es:[rdi],dx
   14000d70c:	outs   dx,DWORD PTR ds:[rsi]
   14000d70d:	je     0x14000d774
   14000d70f:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000d711:	fs jo  0x14000d783
   14000d714:	imul   ebp,DWORD PTR [rsi+0x74],0x6f666e49
   14000d71b:	push   rdi
   14000d71c:	mov    esp,0xff000002
   14000d721:	(bad)  
   14000d722:	(bad)  
   14000d723:	dec    DWORD PTR [rip+0x47dd2b00]        # 0x187de0229
   14000d729:	gs je  0x14000d770
   14000d72c:	ja     0x14000d79d
   14000d72e:	jb     0x14000d794
   14000d730:	push   rsi
   14000d731:	(bad)  
   14000d732:	ins    BYTE PTR es:[rdi],dx
   14000d733:	jne    0x14000d79a
   14000d735:	push   rdi
   14000d736:	push   rdi
   14000d737:	push   rdi
   14000d738:	(bad)  
   14000d739:	(bad)  
   14000d73a:	(bad)  
   14000d73b:	call   FWORD PTR [rax+0x1]
   14000d73e:	add    BYTE PTR [rax],al
   14000d740:	or     eax,0x62138400
   14000d745:	jae    0x14000d7bb
   14000d747:	jb     0x14000d79f
   14000d749:	(bad)  
   14000d74a:	ins    BYTE PTR es:[rdi],dx
   14000d74b:	jne    0x14000d7b2
   14000d74d:	rex.WRX (bad) 
   14000d74f:	ins    DWORD PTR es:[rdi],dx
   14000d750:	gs push rdi
   14000d752:	push   rdi
   14000d753:	push   rdi
   14000d754:	(bad)  
   14000d755:	(bad)  
   14000d756:	(bad)  
   14000d757:	(bad)  
   14000d758:	(bad)  
   14000d759:	(bad)  
   14000d75a:	(bad)  
   14000d75b:	dec    DWORD PTR [rax]
   14000d75d:	add    BYTE PTR [rcx+0x39],ah
   14000d760:	jo     0x14000d7c6
   14000d762:	ja     0x14000d7ba
   14000d764:	(bad)  
   14000d765:	ins    BYTE PTR es:[rdi],dx
   14000d766:	jne    0x14000d7cd
   14000d768:	mov    esp,0xff000002
   14000d76d:	(bad)  
   14000d76e:	(bad)  
   14000d76f:	dec    DWORD PTR [rsi]
   14000d771:	add    BYTE PTR [rdi+0x65],dh
   14000d774:	rex.RXB
   14000d775:	gs je  0x14000d7cb
   14000d778:	je     0x14000d7ec
   14000d77a:	imul   ebp,DWORD PTR [rsi+0x67],0x756c6156
   14000d781:	gs push rdi
   14000d783:	push   rdi
   14000d784:	(bad)  
   14000d785:	(bad)  
   14000d786:	(bad)  
   14000d787:	(bad)  
   14000d788:	(bad)  
   14000d789:	(bad)  
   14000d78a:	(bad)  
   14000d78b:	dec    DWORD PTR [rdx]
   14000d78d:	add    BYTE PTR [rcx],bl
   14000d78f:	add    al,0x70
   14000d791:	(bad)
   14000d796:	(bad)  
   14000d797:	ins    BYTE PTR es:[rdi],dx
   14000d798:	jne    0x14000d7ff
   14000d79a:	push   rdi
   14000d79b:	push   rdi
   14000d79c:	mov    esp,0xff000002
   14000d7a1:	(bad)  
   14000d7a2:	(bad)  
   14000d7a3:	dec    DWORD PTR [rax+rax*1]
   14000d7a6:	in     al,0x12
   14000d7a8:	rex.RXB
   14000d7a9:	gs je  0x14000d7f3
   14000d7ac:	jne    0x14000d817
   14000d7ae:	fs push rsi
   14000d7b0:	(bad)  
   14000d7b1:	ins    BYTE PTR es:[rdi],dx
   14000d7b2:	jne    0x14000d819
   14000d7b4:	(bad)  
   14000d7b5:	(bad)  
   14000d7b6:	(bad)  
   14000d7b7:	jmp    QWORD PTR [rax]
   14000d7b9:	add    DWORD PTR [rax],eax
   14000d7bb:	add    BYTE PTR [rdx],cl
   14000d7bd:	add    cl,dl
   14000d7bf:	je     0x14000d831
   14000d7c1:	addr32 jne 0x14000d82d
   14000d7c4:	fs push rsi
   14000d7c6:	(bad)  
   14000d7c7:	ins    BYTE PTR es:[rdi],dx
   14000d7c8:	jne    0x14000d82f
   14000d7ca:	push   rdi
   14000d7cb:	push   rdi
   14000d7cc:	and    BYTE PTR [rbx],al
   14000d7ce:	add    BYTE PTR [rax],al
   14000d7d0:	(bad)  
   14000d7d1:	(bad)  
   14000d7d2:	(bad)  
   14000d7d3:	dec    DWORD PTR [rip+0x55c15a38]        # 0x195c23211
   14000d7d9:	push   rax
   14000d7da:	outs   dx,BYTE PTR ds:[rsi]
   14000d7db:	push   rax
   14000d7dc:	push   rdx
   14000d7dd:	imul   esi,DWORD PTR gs:[ebx+0x74],0x57726172
   14000d7e6:	push   rdi
   14000d7e7:	push   rdi
   14000d7e8:	test   BYTE PTR [rbx],al
   14000d7ea:	add    BYTE PTR [rax],al
   14000d7ec:	(bad)  
   14000d7ed:	(bad)  
   14000d7ee:	(bad)  
   14000d7ef:	call   QWORD PTR [rsi]
   14000d7f1:	cmp    BYTE PTR [rsp+riz*4],bh
   14000d7f4:	push   rbp
   14000d7f5:	push   rax
   14000d7f6:	outs   dx,BYTE PTR ds:[rsi]
   14000d7f7:	push   rax
   14000d7f8:	push   rdx
   14000d7f9:	gs ins DWORD PTR es:[rdi],dx
   14000d7fb:	outs   dx,DWORD PTR ds:[rsi]
   14000d7fc:	je     0x14000d863
   14000d7fe:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000d800:	fs jo  0x14000d872
   14000d803:	imul   ebp,DWORD PTR [rsi+0x74],0x6f666e49
   14000d80a:	push   rdi
   14000d80b:	push   rdi
   14000d80c:	and    eax,DWORD PTR [rax]
   14000d80e:	push   rbp
   14000d80f:	push   rax
   14000d810:	outs   dx,BYTE PTR ds:[rsi]
   14000d811:	push   rax
   14000d812:	and    BYTE PTR [rcx],dh
   14000d814:	xor    BYTE PTR cs:[rax],ah
   14000d817:	push   rsp
   14000d818:	jns    0x14000d88a
   14000d81a:	and    BYTE PTR gs:[rcx+rbp*2+0x62],cl
   14000d81f:	jb     0x14000d882
   14000d821:	jb     0x14000d89c
   14000d823:	and    BYTE PTR [rax],ch
   14000d825:	rex.R
   14000d826:	gs jbe 0x14000d892
   14000d829:	movsxd esp,DWORD PTR [rbp+0x20]
   14000d82c:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000d82e:	jae    0x14000d8a4
   14000d830:	sub    DWORD PTR [rdi+0x57],edx
   14000d833:	push   rdi
   14000d834:	adc    eax,0x74656d00
   14000d839:	push   0x4f20646f
   14000d83e:	outs   dx,BYTE PTR ds:[rsi]
   14000d83f:	push   rbx
   14000d840:	je     0x14000d8a3
   14000d842:	je     0x14000d8a9
   14000d844:	rex.XB push 0x65676e61
   14000d84a:	fs push rdi
   14000d84c:	sbb    DWORD PTR [rax],eax
   14000d84e:	ins    DWORD PTR es:[rdi],dx
   14000d84f:	gs je  0x14000d8ba
   14000d852:	outs   dx,DWORD PTR ds:[rsi]
   14000d853:	and    BYTE PTR fs:[rdi+0x6e],cl
   14000d857:	push   rbx
   14000d858:	je     0x14000d8bb
   14000d85a:	je     0x14000d8c1
   14000d85c:	rex.XB push 0x65676e61
   14000d862:	fs push rbx
   14000d864:	(bad)  
   14000d865:	gs push di
   14000d868:	or     eax,0x74656d00
   14000d86d:	push   0x4120646f
   14000d872:	fs jbe 0x14000d8de
   14000d875:	jae    0x14000d8dc
   14000d877:	push   rdi
   14000d878:	verw   WORD PTR [rbp+0x65]
   14000d87c:	je     0x14000d8e6
   14000d87e:	outs   dx,DWORD PTR ds:[rsi]
   14000d87f:	and    BYTE PTR fs:[rbp+0x6e],dl
   14000d883:	(bad)  
   14000d884:	fs jbe 0x14000d8f0
   14000d887:	jae    0x14000d8ee
   14000d889:	push   rdi
   14000d88a:	push   rdi
   14000d88b:	push   rdi
   14000d88c:	sbb    al,BYTE PTR [rax]
   14000d88e:	add    eax,DWORD PTR [rax+0x3]
   14000d891:	add    BYTE PTR [rbx],al
   14000d893:	sbb    BYTE PTR [rip+0x7fff00],0x0        # 0x14080d79a
   14000d89a:	add    BYTE PTR [rax],al
   14000d89c:	sbb    al,BYTE PTR [rax]
   14000d89e:	(bad)  
   14000d89f:	jg     0x14000d8a9
   14000d8a1:	add    BYTE PTR [rax],al
   14000d8a3:	add    BYTE PTR [rdx],bl
   14000d8a5:	add    BYTE PTR [rax],cl
   14000d8a7:	or     BYTE PTR [rax],al
   14000d8aa:	or     BYTE PTR [rax+0x4009001a],al
   14000d8b0:	or     DWORD PTR [rax],eax
   14000d8b2:	or     DWORD PTR [rax+0x4013001a],eax
   14000d8b8:	adc    eax,DWORD PTR [rax]
   14000d8ba:	adc    eax,DWORD PTR [rax+0x7fff001d]
   14000d8c0:	or     eax,0x1a000000
   14000d8c5:	add    bh,bh
   14000d8c7:	jg     0x14000d8f9
   14000d8c9:	add    BYTE PTR [rax],al
   14000d8cb:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000d8cf:	add    BYTE PTR [rax],bh
   14000d8d1:	add    BYTE PTR [rax],al
   14000d8d3:	add    BYTE PTR [rcx],bl
   14000d8d5:	add    BYTE PTR [rcx],bl
   14000d8d7:	add    BYTE PTR [rax+0x0],0x0
   14000d8db:	add    BYTE PTR [rax],bl
   14000d8dd:	add    BYTE PTR [rax+rax*1+0x9],bl
   14000d8e1:	add    al,0x0
   14000d8e3:	add    BYTE PTR [rdx],al
   14000d8e5:	add    BYTE PTR [rax],al
   14000d8e7:	add    BYTE PTR [rax],al
   14000d8e9:	add    BYTE PTR [rax],al
   14000d8eb:	add    BYTE PTR [rax],ch
   14000d8ed:	add    BYTE PTR [rax],al
   14000d8ef:	add    BYTE PTR [rbx],dl
   14000d8f1:	add    BYTE PTR [rbx],dl
   14000d8f3:	adc    BYTE PTR [rax+0x0],0x0
   14000d8f7:	add    BYTE PTR [rcx],al
   14000d8f9:	add    BYTE PTR [rax],al
   14000d8fb:	add    BYTE PTR [rax],al
   14000d8fd:	add    BYTE PTR [rax],al
   14000d8ff:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000d903:	add    BYTE PTR [rcx],al
   14000d905:	add    BYTE PTR [rax],al
   14000d907:	add    BYTE PTR [rax+rax*1],ch
   14000d90a:	add    DWORD PTR [rax],eax
   14000d90c:	sbb    DWORD PTR [rax],eax
   14000d90e:	sbb    DWORD PTR [rax+0x0],eax
   14000d914:	and    BYTE PTR [rax],al
   14000d916:	add    BYTE PTR [rcx],r9b
   14000d919:	add    al,0x1
   14000d91b:	add    BYTE PTR [rcx],al
   14000d91d:	add    BYTE PTR [rax],al
   14000d91f:	add    BYTE PTR [rax],al
   14000d921:	add    BYTE PTR [rax],al
   14000d923:	add    BYTE PTR [rax+0x0],al
   14000d926:	add    BYTE PTR [rax],al
   14000d928:	or     al,0x0
   14000d92a:	or     al,0x80
   14000d92c:	movabs al,ds:0x1000000
   14000d935:	add    BYTE PTR [rcx],al
   14000d937:	(bad)  
   14000d938:	add    DWORD PTR [rax],eax
   14000d93a:	add    DWORD PTR [rax+0x34],esp
   14000d93d:	add    BYTE PTR [rax],al
   14000d93f:	add    BYTE PTR [rax+0x0],al
   14000d945:	add    BYTE PTR [rax],al
   14000d947:	add    BYTE PTR [rax],bh
   14000d949:	add    BYTE PTR [rax],al
   14000d94b:	add    BYTE PTR [rax+0x0],bl
   14000d94e:	add    BYTE PTR [rax],al
   14000d950:	sub    al,0x0
   14000d952:	add    BYTE PTR [rax],al
   14000d954:	sbb    DWORD PTR [rax],eax
   14000d956:	sbb    DWORD PTR [rax+0x0],eax
   14000d95c:	sbb    BYTE PTR [rax],al
   14000d95e:	rex.WR add BYTE PTR [rcx],r9b
   14000d961:	add    al,0x0
   14000d963:	add    BYTE PTR [rcx],al
   14000d965:	add    BYTE PTR [rax],al
   14000d967:	add    BYTE PTR [rax],al
   14000d969:	add    BYTE PTR [rax],al
   14000d96b:	add    BYTE PTR [rax+rax*1+0x0],bl
   14000d96f:	add    BYTE PTR [rax],dl
   14000d971:	add    BYTE PTR [rax],al
   14000d973:	add    al,dh
   14000d975:	add    BYTE PTR [rax],al
   14000d977:	add    BYTE PTR [rcx],al
   14000d979:	add    BYTE PTR [rax],al
   14000d97b:	add    BYTE PTR [rax+rax*1],ch
   14000d97e:	add    DWORD PTR [rax],eax
   14000d980:	sbb    DWORD PTR [rax],eax
   14000d982:	sbb    DWORD PTR [rax+0x0],eax
   14000d988:	and    BYTE PTR [rax],al
   14000d98a:	rex.WR add BYTE PTR [rcx],r9b
   14000d98d:	add    al,0x1
   14000d98f:	add    BYTE PTR [rcx],al
   14000d991:	add    BYTE PTR [rax],al
   14000d993:	add    BYTE PTR [rax],al
   14000d995:	add    BYTE PTR [rax],al
   14000d997:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000d99b:	add    BYTE PTR [rax],dl
   14000d99d:	add    BYTE PTR [rax],al
   14000d99f:	add    al,dh
   14000d9a1:	add    BYTE PTR [rax],al
   14000d9a3:	add    BYTE PTR [rcx],al
   14000d9a5:	add    BYTE PTR [rax],al
   14000d9a7:	add    BYTE PTR [rax],al
   14000d9a9:	add    BYTE PTR [rcx],al
   14000d9ab:	(bad)  
   14000d9ac:	add    DWORD PTR [rax],eax
   14000d9ae:	add    DWORD PTR [rax-0x24],esp
   14000d9b1:	add    BYTE PTR [rax],al
   14000d9b3:	add    BYTE PTR [rcx+rax*1],cl
   14000d9b6:	add    BYTE PTR [rax],al
   14000d9b8:	add    BYTE PTR [rax],al
   14000d9ba:	add    BYTE PTR [rax],al
   14000d9bc:	sub    al,0x0
   14000d9be:	add    BYTE PTR [rax],al
   14000d9c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d9c1:	add    DWORD PTR [rax],eax
   14000d9c3:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000d9c7:	add    BYTE PTR [rcx],bl
   14000d9c9:	add    BYTE PTR [rcx],bl
   14000d9cb:	add    BYTE PTR [rax],0x0
   14000d9ce:	add    BYTE PTR [rax],al
   14000d9d0:	sbb    BYTE PTR [rax],al
   14000d9d2:	lods   al,BYTE PTR ds:[rsi]
   14000d9d3:	add    BYTE PTR [rcx],cl
   14000d9d5:	add    BYTE PTR [rax],r8b
   14000d9d8:	(bad)  
   14000d9d9:	add    BYTE PTR [rax],al
   14000d9db:	add    BYTE PTR [rax],cl
   14000d9dd:	add    BYTE PTR [rax],cl
   14000d9df:	sbb    BYTE PTR [rax+0x1],0x0
   14000d9e3:	add    BYTE PTR [rcx],al
   14000d9e5:	add    BYTE PTR [rax],al
   14000d9e7:	add    BYTE PTR [rax],cl
   14000d9e9:	add    BYTE PTR [rax],cl
   14000d9eb:	xor    BYTE PTR [rax+0x1],0x0
   14000d9ef:	add    BYTE PTR [rcx],al
   14000d9f1:	add    BYTE PTR [rax],al
   14000d9f3:	add    BYTE PTR [rax],cl
   14000d9f5:	add    BYTE PTR [rax],cl
   14000d9f7:	sbb    BYTE PTR [rax+0x1000001],0x0
   14000d9fe:	add    BYTE PTR [rax],al
   14000da00:	or     BYTE PTR [rax],al
   14000da02:	or     BYTE PTR [rax+0x1b4],al
   14000da08:	add    DWORD PTR [rax],eax
   14000da0a:	add    BYTE PTR [rax],al
   14000da0c:	or     BYTE PTR [rax],al
   14000da0e:	or     BYTE PTR [rax+0x1d0],al
   14000da14:	add    DWORD PTR [rax],eax
   14000da16:	add    BYTE PTR [rax],al
   14000da18:	add    eax,DWORD PTR [rax]
   14000da1a:	add    eax,DWORD PTR [rax+0x1ec]
   14000da20:	add    DWORD PTR [rax],eax
   14000da22:	add    BYTE PTR [rax],al
   14000da24:	sbb    BYTE PTR [rax],al
   14000da26:	add    BYTE PTR [rax],al
   14000da28:	add    al,0x2
   14000da2a:	add    BYTE PTR [rax],al
   14000da2c:	or     al,BYTE PTR [rax]
   14000da2e:	add    BYTE PTR [rax],al
   14000da30:	(bad)  
   14000da31:	add    BYTE PTR [rcx],al
   14000da33:	add    BYTE PTR [rcx],bl
   14000da35:	add    BYTE PTR [rcx],bl
   14000da37:	add    BYTE PTR [rax],0x0
   14000da3a:	add    BYTE PTR [rax],al
   14000da3c:	and    BYTE PTR [rax],al
   14000da3e:	pushf  
   14000da3f:	add    BYTE PTR [rcx],cl
   14000da41:	add    DWORD PTR [rax],r8d
   14000da44:	(bad)  
   14000da45:	add    BYTE PTR [rax],al
   14000da47:	add    BYTE PTR [rax],cl
   14000da49:	add    BYTE PTR [rax],cl
   14000da4b:	sbb    BYTE PTR [rax+0x1],0x0
   14000da4f:	add    BYTE PTR [rcx],al
   14000da51:	add    BYTE PTR [rax],al
   14000da53:	add    BYTE PTR [rip+0x4c800d00],cl        # 0x18c80e759
   14000da59:	add    al,BYTE PTR [rax]
   14000da5b:	add    BYTE PTR [rcx],al
   14000da5d:	add    BYTE PTR [rax],al
   14000da5f:	add    BYTE PTR [rax],cl
   14000da61:	add    BYTE PTR [rax],cl
   14000da63:	sbb    BYTE PTR [rax+0x1000001],0x0
   14000da6a:	add    BYTE PTR [rax],al
   14000da6c:	or     BYTE PTR [rax],al
   14000da6e:	or     BYTE PTR [rax+0x1d0],al
   14000da74:	add    DWORD PTR [rax],eax
   14000da76:	add    BYTE PTR [rax],al
   14000da78:	add    eax,DWORD PTR [rax]
   14000da7a:	add    eax,DWORD PTR [rax+0x1ec]
   14000da80:	add    DWORD PTR [rax],eax
   14000da82:	add    BYTE PTR [rax],al
   14000da84:	sbb    BYTE PTR [rax],al
   14000da86:	add    BYTE PTR [rax],al
   14000da88:	add    al,0x2
   14000da8a:	add    BYTE PTR [rax],al
   14000da8c:	or     al,BYTE PTR [rax]
   14000da8e:	add    BYTE PTR [rax],al
   14000da90:	rex.W add BYTE PTR [rdx],al
   14000da93:	add    BYTE PTR [rcx],bl
   14000da95:	add    BYTE PTR [rcx],bl
   14000da97:	add    BYTE PTR [rax],0x0
   14000da9a:	add    BYTE PTR [rax],al
   14000da9c:	sub    BYTE PTR [rax],al
   14000da9e:	je     0x14000daa0
   14000daa0:	or     DWORD PTR [rdx+rax*1],eax
   14000daa3:	add    BYTE PTR [rax+rax*1],al
   14000daa6:	add    BYTE PTR [rax],al
   14000daa8:	or     BYTE PTR [rax],al
   14000daaa:	or     BYTE PTR [rax+0x290],al
   14000dab0:	add    DWORD PTR [rax],eax
   14000dab2:	add    BYTE PTR [rax],al
   14000dab4:	or     BYTE PTR [rax],al
   14000dab6:	or     BYTE PTR [rax+0x2ac],al
   14000dabc:	add    DWORD PTR [rax],eax
   14000dabe:	add    BYTE PTR [rax],al
   14000dac0:	or     BYTE PTR [rax],al
   14000dac2:	or     BYTE PTR [rax+0x198],al
   14000dac8:	add    DWORD PTR [rax],eax
   14000daca:	add    BYTE PTR [rax],al
   14000dacc:	or     BYTE PTR [rax],al
   14000dace:	or     BYTE PTR [rax+0x1b4],al
   14000dad4:	add    DWORD PTR [rax],eax
   14000dad6:	add    BYTE PTR [rax],al
   14000dad8:	cmp    al,0x0
   14000dada:	add    eax,DWORD PTR [rax]
   14000dadc:	sbb    DWORD PTR [rax],eax
   14000dade:	sbb    DWORD PTR [rax+0x0],eax
   14000dae4:	xor    BYTE PTR [rax],al
   14000dae6:	ins    BYTE PTR es:[rdi],dx
   14000dae7:	add    BYTE PTR [rcx],cl
   14000dae9:	add    r8d,DWORD PTR [rax]
   14000daec:	add    eax,DWORD PTR [rax]
   14000daee:	add    BYTE PTR [rax],al
   14000daf0:	or     BYTE PTR [rax],al
   14000daf2:	or     BYTE PTR [rax+0x2f0],al
   14000daf8:	add    DWORD PTR [rax],eax
   14000dafa:	add    BYTE PTR [rax],al
   14000dafc:	or     BYTE PTR [rax],al
   14000dafe:	or     BYTE PTR [rax+0x310],al
   14000db04:	add    DWORD PTR [rax],eax
   14000db06:	add    BYTE PTR [rax],al
   14000db08:	sbb    BYTE PTR [rax],al
   14000db0a:	add    BYTE PTR [rax],al
   14000db0c:	sub    al,0x3
   14000db0e:	add    BYTE PTR [rax],al
   14000db10:	or     al,BYTE PTR [rax]
   14000db12:	add    BYTE PTR [rax],al
   14000db14:	xor    BYTE PTR [rax],al
   14000db16:	add    al,0x0
   14000db18:	sbb    DWORD PTR [rax],eax
   14000db1a:	sbb    DWORD PTR [rax+0x0],eax
   14000db20:	cmp    BYTE PTR [rax],al
   14000db22:	push   rsp
   14000db23:	add    BYTE PTR [rcx],cl
   14000db25:	add    al,0x4
   14000db27:	add    BYTE PTR [rdx],al
   14000db29:	add    BYTE PTR [rax],al
   14000db2b:	add    BYTE PTR [rax],cl
   14000db2d:	add    BYTE PTR [rax],cl
   14000db2f:	xor    al,0x2
   14000db32:	add    BYTE PTR [rax],al
   14000db34:	add    DWORD PTR [rax],eax
   14000db36:	add    BYTE PTR [rax],al
   14000db38:	add    eax,DWORD PTR [rax]
   14000db3a:	add    eax,DWORD PTR [rax+0x35c]
   14000db40:	add    DWORD PTR [rax],eax
   14000db42:	add    BYTE PTR [rax],al
   14000db44:	and    al,0x0
   14000db46:	add    eax,0x19001900
   14000db4b:	add    BYTE PTR [rax],0x0
   14000db4e:	add    BYTE PTR [rax],al
   14000db50:	add    BYTE PTR [rax+rax*1+0x9],al
   14000db55:	add    al,0x5
   14000db57:	add    BYTE PTR [rcx],al
   14000db59:	add    BYTE PTR [rax],al
   14000db5b:	add    BYTE PTR [rax],cl
   14000db5d:	add    BYTE PTR [rax],cl
   14000db5f:	adc    BYTE PTR [rax+0x1000002],0x0
   14000db66:	add    BYTE PTR [rax],al
   14000db68:	add    BYTE PTR [rax],al
   14000db6a:	add    DWORD PTR [rax+0x1],esp
   14000db6d:	add    BYTE PTR [rcx],al
   14000db6f:	(bad)  
   14000db70:	add    al,BYTE PTR [rax]
   14000db72:	add    DWORD PTR [rax+0x3],esp
   14000db75:	add    BYTE PTR [rcx],al
   14000db77:	(bad)  
   14000db78:	add    al,0x0
   14000db7a:	add    DWORD PTR [rax+0x5],esp
   14000db7d:	add    BYTE PTR [rcx],al
   14000db7f:	(bad)  
   14000db80:	cmp    al,0x1
   14000db82:	add    BYTE PTR [rax],al
   14000db84:	sub    BYTE PTR [rdx],al
   14000db86:	add    BYTE PTR [rax],al
   14000db88:	ins    BYTE PTR es:[rdi],dx
   14000db89:	add    al,BYTE PTR [rax]
   14000db8b:	add    al,dl
   14000db8d:	add    al,BYTE PTR [rax]
   14000db8f:	add    BYTE PTR [rax+0x3],al
   14000db92:	add    BYTE PTR [rax],al
   14000db94:	je     0x14000db99
   14000db96:	add    BYTE PTR [rax],al
   14000db98:	add    BYTE PTR [rax],al
   14000db9a:	add    BYTE PTR [rax],al
   14000db9c:	ins    BYTE PTR es:[rdi],dx
   14000db9d:	add    BYTE PTR [rax],al
   14000db9f:	add    ah,cl
   14000dba1:	add    BYTE PTR [rax],al
   14000dba3:	add    BYTE PTR [rcx+rax*1],dl
   14000dba6:	add    BYTE PTR [rax],al
   14000dba8:	push   rax
   14000dba9:	add    DWORD PTR [rax],eax
   14000dbab:	add    BYTE PTR [rax-0x33ffffff],al
   14000dbb1:	add    BYTE PTR [rax],al
   14000dbb3:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000dbb7:	add    BYTE PTR [rcx],bl
   14000dbb9:	add    BYTE PTR [rcx],bl
   14000dbbb:	add    BYTE PTR [rax],0x0
   14000dbbe:	add    BYTE PTR [rax],al
   14000dbc0:	sbb    BYTE PTR [rax],al
   14000dbc2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dbc3:	add    BYTE PTR [rcx],cl
   14000dbc5:	add    al,0x0
   14000dbc7:	add    BYTE PTR [rdi],al
   14000dbc9:	add    BYTE PTR [rax],al
   14000dbcb:	add    BYTE PTR [rax],cl
   14000dbcd:	add    BYTE PTR [rax],cl
   14000dbcf:	xor    al,0x2
   14000dbd2:	add    BYTE PTR [rax],al
   14000dbd4:	add    DWORD PTR [rax],eax
   14000dbd6:	add    BYTE PTR [rax],al
   14000dbd8:	or     BYTE PTR [rax],al
   14000dbda:	or     BYTE PTR [rax+0x158],al
   14000dbe0:	add    DWORD PTR [rax],eax
   14000dbe2:	add    BYTE PTR [rax],al
   14000dbe4:	or     BYTE PTR [rax],al
   14000dbe6:	or     BYTE PTR [rax+0x170],al
   14000dbec:	add    DWORD PTR [rax],eax
   14000dbee:	add    BYTE PTR [rax],al
   14000dbf0:	or     BYTE PTR [rax],al
   14000dbf2:	or     BYTE PTR [rax+0x198],al
   14000dbf8:	add    DWORD PTR [rax],eax
   14000dbfa:	add    BYTE PTR [rax],al
   14000dbfc:	or     BYTE PTR [rax],al
   14000dbfe:	or     BYTE PTR [rax+0x1b4],al
   14000dc04:	add    DWORD PTR [rax],eax
   14000dc06:	add    BYTE PTR [rax],al
   14000dc08:	or     BYTE PTR [rax],al
   14000dc0a:	or     BYTE PTR [rax+0x1d0],al
   14000dc10:	add    DWORD PTR [rax],eax
   14000dc12:	add    BYTE PTR [rax],al
   14000dc14:	add    eax,DWORD PTR [rax]
   14000dc16:	add    eax,DWORD PTR [rax+0x1ec]
   14000dc1c:	add    DWORD PTR [rax],eax
   14000dc1e:	add    BYTE PTR [rax],al
   14000dc20:	(bad)  
   14000dc21:	add    BYTE PTR [rcx],al
   14000dc23:	add    BYTE PTR [rcx],bl
   14000dc25:	add    BYTE PTR [rcx],bl
   14000dc27:	add    BYTE PTR [rax],0x0
   14000dc2a:	add    BYTE PTR [rax],al
   14000dc2c:	and    BYTE PTR [rax],al
   14000dc2e:	xchg   esp,eax
   14000dc2f:	add    BYTE PTR [rcx],cl
   14000dc31:	add    al,0x1
   14000dc33:	add    BYTE PTR [rsi],al
   14000dc35:	add    BYTE PTR [rax],al
   14000dc37:	add    BYTE PTR [rax],cl
   14000dc39:	add    BYTE PTR [rax],cl
   14000dc3b:	xor    al,0x2
   14000dc3e:	add    BYTE PTR [rax],al
   14000dc40:	add    DWORD PTR [rax],eax
   14000dc42:	add    BYTE PTR [rax],al
   14000dc44:	or     BYTE PTR [rax],al
   14000dc46:	or     BYTE PTR [rax+0x158],al
   14000dc4c:	add    DWORD PTR [rax],eax
   14000dc4e:	add    BYTE PTR [rax],al
   14000dc50:	or     eax,0x4c800d00
   14000dc55:	add    al,BYTE PTR [rax]
   14000dc57:	add    BYTE PTR [rcx],al
   14000dc59:	add    BYTE PTR [rax],al
   14000dc5b:	add    BYTE PTR [rax],cl
   14000dc5d:	add    BYTE PTR [rax],cl
   14000dc5f:	sbb    BYTE PTR [rax+0x1000001],0x0
   14000dc66:	add    BYTE PTR [rax],al
   14000dc68:	or     BYTE PTR [rax],al
   14000dc6a:	or     BYTE PTR [rax+0x1d0],al
   14000dc70:	add    DWORD PTR [rax],eax
   14000dc72:	add    BYTE PTR [rax],al
   14000dc74:	add    eax,DWORD PTR [rax]
   14000dc76:	add    eax,DWORD PTR [rax+0x1ec]
   14000dc7c:	add    DWORD PTR [rax],eax
   14000dc7e:	add    BYTE PTR [rax],al
   14000dc80:	add    BYTE PTR [rax],al
   14000dc82:	add    DWORD PTR [rax+0x1],esp
   14000dc85:	add    BYTE PTR [rcx],al
   14000dc87:	(bad)  
   14000dc88:	mov    ah,0x3
   14000dc8a:	add    BYTE PTR [rax],al
   14000dc8c:	rol    BYTE PTR [rbx],1
   14000dc8e:	add    BYTE PTR [rax],al
   14000dc90:	add    BYTE PTR [rax],al
   14000dc92:	add    BYTE PTR [rax],al
   14000dc94:	ins    BYTE PTR es:[rdi],dx
   14000dc95:	add    BYTE PTR [rax],al
   14000dc97:	add    BYTE PTR [rax+0x0],bh
   14000dc9a:	add    BYTE PTR [rax],al
   14000dc9c:	cmp    al,0x0
   14000dc9e:	add    BYTE PTR [rax],al
   14000dca0:	sbb    DWORD PTR [rax],eax
   14000dca2:	sbb    DWORD PTR [rax+0x0],eax
   14000dca8:	sbb    BYTE PTR [rax],al
   14000dcaa:	add    BYTE PTR fs:[rcx],cl
   14000dcad:	add    al,0x0
   14000dcaf:	add    BYTE PTR [rbx],al
   14000dcb1:	add    BYTE PTR [rax],al
   14000dcb3:	add    BYTE PTR [rax],cl
   14000dcb5:	add    BYTE PTR [rax],cl
   14000dcb7:	sbb    BYTE PTR [rax+0x1],0x0
   14000dcbb:	add    BYTE PTR [rcx],al
   14000dcbd:	add    BYTE PTR [rax],al
   14000dcbf:	add    BYTE PTR [rax],cl
   14000dcc1:	add    BYTE PTR [rax],cl
   14000dcc3:	xor    al,0x2
   14000dcc6:	add    BYTE PTR [rax],al
   14000dcc8:	add    DWORD PTR [rax],eax
   14000dcca:	add    BYTE PTR [rax],al
   14000dccc:	or     BYTE PTR [rax],al
   14000dcce:	or     BYTE PTR [rax+0x198],al
   14000dcd4:	add    DWORD PTR [rax],eax
   14000dcd6:	add    BYTE PTR [rax],al
   14000dcd8:	cmp    al,0x0
   14000dcda:	add    DWORD PTR [rax],eax
   14000dcdc:	sbb    DWORD PTR [rax],eax
   14000dcde:	sbb    DWORD PTR [rax+0x0],eax
   14000dce4:	and    BYTE PTR [rax],al
   14000dce6:	ins    BYTE PTR es:[rdi],dx
   14000dce7:	add    BYTE PTR [rcx],cl
   14000dce9:	add    DWORD PTR [rax],r8d
   14000dcec:	add    eax,DWORD PTR [rax]
   14000dcee:	add    BYTE PTR [rax],al
   14000dcf0:	or     BYTE PTR [rax],al
   14000dcf2:	or     BYTE PTR [rax+0x448],al
   14000dcf8:	add    DWORD PTR [rax],eax
   14000dcfa:	add    BYTE PTR [rax],al
   14000dcfc:	or     BYTE PTR [rax],al
   14000dcfe:	or     BYTE PTR [rax+0x45c],al
   14000dd04:	add    DWORD PTR [rax],eax
   14000dd06:	add    BYTE PTR [rax],al
   14000dd08:	and    BYTE PTR [rax],al
   14000dd0a:	add    BYTE PTR [rax],al
   14000dd0c:	js     0x14000dd12
   14000dd0e:	add    BYTE PTR [rax],al
   14000dd10:	or     al,BYTE PTR [rax]
   14000dd12:	add    BYTE PTR [rax],al
   14000dd14:	add    BYTE PTR [rax],al
   14000dd16:	add    DWORD PTR [rax+0x1],esp
   14000dd19:	add    BYTE PTR [rcx],al
   14000dd1b:	(bad)  
   14000dd1c:	adc    al,0x4
   14000dd1e:	add    BYTE PTR [rax],al
   14000dd20:	sub    al,0x4
   14000dd22:	add    BYTE PTR [rax],al
   14000dd24:	add    BYTE PTR [rax],al
   14000dd26:	add    BYTE PTR [rax],al
   14000dd28:	cmp    al,0x0
   14000dd2a:	add    BYTE PTR [rax],al
   14000dd2c:	and    al,0x0
   14000dd2e:	add    BYTE PTR [rax],al
   14000dd30:	and    al,0x0
   14000dd32:	add    BYTE PTR [rax],al
   14000dd34:	sbb    DWORD PTR [rax],eax
   14000dd36:	sbb    DWORD PTR [rax+0x0],eax
   14000dd3c:	sbb    BYTE PTR [rax],al
   14000dd3e:	rex.WR add BYTE PTR [rcx],r9b
   14000dd41:	add    BYTE PTR [rax],r8b
   14000dd44:	add    DWORD PTR [rax],eax
   14000dd46:	add    BYTE PTR [rax],al
   14000dd48:	sbb    BYTE PTR [rax],al
   14000dd4a:	add    BYTE PTR [rax],al
   14000dd4c:	call   0x14a00dd55
   14000dd51:	add    BYTE PTR [rax],al
   14000dd53:	add    BYTE PTR [rax],al
   14000dd55:	add    BYTE PTR [rcx],al
   14000dd57:	(bad)  
   14000dd58:	rol    BYTE PTR [rax+rax*1],0x0
   14000dd5c:	add    BYTE PTR [rax],al
   14000dd5e:	add    BYTE PTR [rax],al
   14000dd60:	cmp    al,0x0
   14000dd62:	add    BYTE PTR [rax],al
   14000dd64:	and    al,0x0
   14000dd66:	add    BYTE PTR [rax],al
   14000dd68:	sbb    DWORD PTR [rax],eax
   14000dd6a:	sbb    DWORD PTR [rax+0x0],eax
   14000dd70:	sbb    BYTE PTR [rax],al
   14000dd72:	add    BYTE PTR [rcx],r9b
   14000dd75:	add    al,0x0
   14000dd77:	add    BYTE PTR [rcx],al
   14000dd79:	add    BYTE PTR [rax],al
   14000dd7b:	add    BYTE PTR [rax],cl
   14000dd7d:	add    BYTE PTR [rax],cl
   14000dd7f:	sbb    BYTE PTR [rax+0x1000001],0x0
   14000dd86:	add    BYTE PTR [rax],al
   14000dd88:	sbb    BYTE PTR [rax],al
   14000dd8a:	add    DWORD PTR [rax],eax
   14000dd8c:	sbb    DWORD PTR [rax],eax
   14000dd8e:	sbb    DWORD PTR [rax+0x0],eax
   14000dd94:	and    BYTE PTR [rax],al
   14000dd96:	xor    al,0x0
   14000dd98:	or     DWORD PTR [rcx+rax*1],eax
   14000dd9b:	add    BYTE PTR [rax],al
   14000dd9d:	add    BYTE PTR [rax],al
   14000dd9f:	add    BYTE PTR [rax],al
   14000dda1:	add    BYTE PTR [rcx],al
   14000dda3:	(bad)  
   14000dda4:	add    DWORD PTR [rax],eax
   14000dda6:	add    DWORD PTR [rax+0x2c],esp
   14000dda9:	add    eax,0x5400000
   14000ddae:	add    BYTE PTR [rax],al
   14000ddb0:	add    BYTE PTR [rax],al
   14000ddb2:	add    BYTE PTR [rax],al
   14000ddb4:	and    al,0x0
   14000ddb6:	add    BYTE PTR [rax],al
   14000ddb8:	nop
   14000ddb9:	add    BYTE PTR [rax],al
   14000ddbb:	add    BYTE PTR [rax],dh
   14000ddbd:	add    BYTE PTR [rax],al
   14000ddbf:	add    BYTE PTR [rcx],bl
   14000ddc1:	add    BYTE PTR [rcx],bl
   14000ddc3:	add    BYTE PTR [rax],0x0
   14000ddc6:	add    BYTE PTR [rax],al
   14000ddc8:	sbb    BYTE PTR [rax],al
   14000ddca:	pop    rsp
   14000ddcb:	add    BYTE PTR [rcx],cl
   14000ddcd:	add    al,0x0
   14000ddcf:	add    BYTE PTR [rdx],al
   14000ddd1:	add    BYTE PTR [rax],al
   14000ddd3:	add    BYTE PTR [rax],cl
   14000ddd5:	add    BYTE PTR [rax],cl
   14000ddd7:	adc    BYTE PTR [rax+0x1000005],0x0
   14000ddde:	add    BYTE PTR [rax],al
   14000dde0:	sub    BYTE PTR [rax],al
   14000dde2:	add    BYTE PTR [rax],al
   14000dde4:	lods   al,BYTE PTR ds:[rsi]
   14000dde5:	add    eax,0x20000
   14000ddea:	add    BYTE PTR [rax],al
   14000ddec:	xor    BYTE PTR [rax],al
   14000ddee:	add    DWORD PTR [rax],eax
   14000ddf0:	sbb    DWORD PTR [rax],eax
   14000ddf2:	sbb    DWORD PTR [rax+0x0],eax
   14000ddf8:	and    BYTE PTR [rax],al
   14000ddfa:	pop    rsp
   14000ddfb:	add    BYTE PTR [rcx],cl
   14000ddfd:	add    al,0x1
   14000ddff:	add    BYTE PTR [rdx],al
   14000de01:	add    BYTE PTR [rax],al
   14000de03:	add    BYTE PTR [rax],cl
   14000de05:	add    BYTE PTR [rax],cl
   14000de07:	adc    BYTE PTR [rax+0x1000005],0x0
   14000de0e:	add    BYTE PTR [rax],al
   14000de10:	sbb    BYTE PTR [rax],al
   14000de12:	add    BYTE PTR [rax],al
   14000de14:	fadd   QWORD PTR [rip+0x20000]        # 0x14002de1a
   14000de1a:	add    BYTE PTR [rax],al
   14000de1c:	xor    BYTE PTR [rax],al
   14000de1e:	add    al,BYTE PTR [rax]
   14000de20:	sbb    DWORD PTR [rax],eax
   14000de22:	sbb    DWORD PTR [rax+0x0],eax
   14000de28:	sub    BYTE PTR [rax],al
   14000de2a:	pop    rsp
   14000de2b:	add    BYTE PTR [rcx],cl
   14000de2d:	add    al,0x2
   14000de2f:	add    BYTE PTR [rdx],al
   14000de31:	add    BYTE PTR [rax],al
   14000de33:	add    BYTE PTR [rax],cl
   14000de35:	add    BYTE PTR [rax],cl
   14000de37:	adc    BYTE PTR [rax+0x1000005],0x0
   14000de3e:	add    BYTE PTR [rax],al
   14000de40:	cmp    BYTE PTR [rax],al
   14000de42:	add    BYTE PTR [rax],al
   14000de44:	or     al,0x6
   14000de46:	add    BYTE PTR [rax],al
   14000de48:	add    al,BYTE PTR [rax]
   14000de4a:	add    BYTE PTR [rax],al
   14000de4c:	add    BYTE PTR [rax],al
   14000de4e:	add    DWORD PTR [rax+0x1],esp
   14000de51:	add    BYTE PTR [rcx],al
   14000de53:	(bad)  
   14000de54:	add    al,BYTE PTR [rax]
   14000de56:	add    DWORD PTR [rax+0x74],esp
   14000de59:	add    eax,0x5c00000
   14000de5e:	add    BYTE PTR [rax],al
   14000de60:	hlt    
   14000de61:	add    eax,0x0
   14000de66:	add    BYTE PTR [rax],al
   14000de68:	xor    BYTE PTR [rax],al
   14000de6a:	add    BYTE PTR [rax],al
   14000de6c:	(bad)  
   14000de6d:	add    BYTE PTR [rax],al
   14000de6f:	add    BYTE PTR [rax+0x4b],cl
   14000de72:	rex.XB push r10
   14000de74:	or     eax,0xa0d7b0a
   14000de79:	and    BYTE PTR [rax],ah
   14000de7b:	and    BYTE PTR [rax],ah
   14000de7d:	and    BYTE PTR [rax],ah
   14000de7f:	and    BYTE PTR [rax],ah
   14000de81:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000de83:	push   rdx
   14000de84:	gs ins DWORD PTR es:[rdi],dx
   14000de86:	outs   dx,DWORD PTR ds:[rsi]
   14000de87:	jbe    0x14000deee
   14000de89:	and    BYTE PTR [rbx+0x4c],al
   14000de8c:	push   rbx
   14000de8d:	rex.WB
   14000de8e:	rex.R or eax,0x2020200a
   14000de94:	and    BYTE PTR [rax],ah
   14000de96:	and    BYTE PTR [rax],ah
   14000de98:	and    BYTE PTR [rbx+0xd],bh
   14000de9b:	or     ah,BYTE PTR [rax]
   14000de9d:	and    BYTE PTR [rax],ah
   14000de9f:	and    BYTE PTR [rax],ah
   14000dea1:	and    BYTE PTR [rax],ah
   14000dea3:	and    BYTE PTR [rax],ah
   14000dea5:	and    BYTE PTR [rax],ah
   14000dea7:	and    BYTE PTR [rax],ah
   14000dea9:	and    BYTE PTR [rax],ah
   14000deab:	and    BYTE PTR [rsi+0x6f],al
   14000deae:	jb     0x14000df13
   14000deb0:	gs push rdx
   14000deb2:	gs ins DWORD PTR es:[rdi],dx
   14000deb4:	outs   dx,DWORD PTR ds:[rsi]
   14000deb5:	jbe    0x14000df1c
   14000deb7:	and    BYTE PTR [rbx+0x36],bh
   14000deba:	cmp    BYTE PTR fs:[rsi+0x66],ah
   14000debe:	cmp    BYTE PTR [rbp+0x38],ah
   14000dec1:	sub    eax,0x64303337
   14000dec6:	sub    eax,0x34643131
   14000decb:	sub    eax,0x32346662
   14000ded0:	sub    eax,0x30623030
   14000ded5:	xor    BYTE PTR fs:[rcx],dh
   14000ded8:	xor    DWORD PTR [rax],edi
   14000deda:	(bad)  
   14000dedb:	xor    eax,0x3d207d36
   14000dee0:	and    BYTE PTR [rbx+0x20],dh
   14000dee3:	(bad)  
   14000dee4:	push   rbp
   14000dee5:	push   rax
   14000dee6:	outs   dx,BYTE PTR ds:[rsi]
   14000dee7:	push   rax
   14000dee8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000deea:	outs   dx,BYTE PTR ds:[rsi]
   14000deeb:	je     0x14000df4e
   14000deed:	imul   ebp,DWORD PTR [rsi+0x65],0x27343672
   14000def4:	or     eax,0x2020200a
   14000def9:	and    BYTE PTR [rax],ah
   14000defb:	and    BYTE PTR [rax],ah
   14000defd:	and    BYTE PTR [rax],ah
   14000deff:	and    BYTE PTR [rax],ah
   14000df01:	and    BYTE PTR [rax],ah
   14000df03:	and    BYTE PTR [rax],ah
   14000df05:	and    BYTE PTR [rbx+0xd],bh
   14000df08:	or     ah,BYTE PTR [rax]
   14000df0a:	and    BYTE PTR [rax],ah
   14000df0c:	and    BYTE PTR [rax],ah
   14000df0e:	and    BYTE PTR [rax],ah
   14000df10:	and    BYTE PTR [rax],ah
   14000df12:	and    BYTE PTR [rax],ah
   14000df14:	and    BYTE PTR [rax],ah
   14000df16:	and    BYTE PTR [rax],ah
   14000df18:	and    BYTE PTR [rax],ah
   14000df1a:	and    BYTE PTR [rax],ah
   14000df1c:	and    BYTE PTR [rax],ah
   14000df1e:	and    BYTE PTR [rax],ah
   14000df20:	and    BYTE PTR [rdi+rbp*2+0x63],cl
   14000df24:	(bad)  
   14000df25:	ins    BYTE PTR es:[rdi],dx
   14000df26:	push   rbx
   14000df27:	gs jb  0x14000dfa0
   14000df2a:	gs jb  0x14000df60
   14000df2d:	xor    ah,BYTE PTR [rax]
   14000df2f:	cmp    eax,0x27207320
   14000df34:	and    eax,0x55444f4d
   14000df39:	rex.WR
   14000df3a:	rex.RB and eax,0x200a0d27
   14000df40:	and    BYTE PTR [rax],ah
   14000df42:	and    BYTE PTR [rax],ah
   14000df44:	and    BYTE PTR [rax],ah
   14000df46:	and    BYTE PTR [rax],ah
   14000df48:	and    BYTE PTR [rax],ah
   14000df4a:	and    BYTE PTR [rax],ah
   14000df4c:	and    BYTE PTR [rax],ah
   14000df4e:	and    BYTE PTR [rax],ah
   14000df50:	and    BYTE PTR [rax],ah
   14000df52:	and    BYTE PTR [rax],ah
   14000df54:	and    BYTE PTR [rax],ah
   14000df56:	and    BYTE PTR [rbx+0xd],bh
   14000df59:	or     ah,BYTE PTR [rax]
   14000df5b:	and    BYTE PTR [rax],ah
   14000df5d:	and    BYTE PTR [rax],ah
   14000df5f:	and    BYTE PTR [rax],ah
   14000df61:	and    BYTE PTR [rax],ah
   14000df63:	and    BYTE PTR [rax],ah
   14000df65:	and    BYTE PTR [rax],ah
   14000df67:	and    BYTE PTR [rax],ah
   14000df69:	and    BYTE PTR [rax],ah
   14000df6b:	and    BYTE PTR [rax],ah
   14000df6d:	and    BYTE PTR [rax],ah
   14000df6f:	and    BYTE PTR [rax],ah
   14000df71:	and    BYTE PTR [rax],ah
   14000df73:	and    BYTE PTR [rax],ah
   14000df75:	and    BYTE PTR [rax],ah
   14000df77:	and    BYTE PTR [rax],ah
   14000df79:	and    BYTE PTR [rsi+0x61],dh
   14000df7c:	ins    BYTE PTR es:[rdi],dx
   14000df7d:	and    BYTE PTR [rax+rbp*2+0x72],dl
   14000df81:	gs (bad) 
   14000df83:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65646f4d
   14000df8b:	ins    BYTE PTR es:[rdi],dx
   14000df8c:	and    BYTE PTR [rip+0x27207320],bh        # 0x1672152b2
   14000df92:	rex.RX jb 0x14000dffa
   14000df95:	gs (bad) 
   14000df97:	or     eax,0x2020200a
   14000df9c:	and    BYTE PTR [rax],ah
   14000df9e:	and    BYTE PTR [rax],ah
   14000dfa0:	and    BYTE PTR [rax],ah
   14000dfa2:	and    BYTE PTR [rax],ah
   14000dfa4:	and    BYTE PTR [rax],ah
   14000dfa6:	and    BYTE PTR [rax],ah
   14000dfa8:	and    BYTE PTR [rax],ah
   14000dfaa:	and    BYTE PTR [rax],ah
   14000dfac:	and    BYTE PTR [rax],ah
   14000dfae:	and    BYTE PTR [rax],ah
   14000dfb0:	and    BYTE PTR [rbp+0xd],bh
   14000dfb3:	or     ah,BYTE PTR [rax]
   14000dfb5:	and    BYTE PTR [rax],ah
   14000dfb7:	and    BYTE PTR [rax],ah
   14000dfb9:	and    BYTE PTR [rax],ah
   14000dfbb:	and    BYTE PTR [rax],ah
   14000dfbd:	and    BYTE PTR [rax],ah
   14000dfbf:	and    BYTE PTR [rax],ah
   14000dfc1:	and    BYTE PTR [rax],ah
   14000dfc3:	and    BYTE PTR [rax],ah
   14000dfc5:	and    BYTE PTR [rax],ah
   14000dfc7:	and    BYTE PTR [rax],ah
   14000dfc9:	and    BYTE PTR [rax],ah
   14000dfcb:	and    BYTE PTR [rsi+0x61],dh
   14000dfce:	ins    BYTE PTR es:[rdi],dx
   14000dfcf:	and    BYTE PTR [rcx+0x70],al
   14000dfd2:	jo     0x14000e01d
   14000dfd4:	and    BYTE PTR [rip+0x27207320],r15b        # 0x1672152fb
   14000dfdb:	jnp    0x14000e013
   14000dfdd:	cmp    BYTE PTR fs:[rsi+0x66],ah
   14000dfe1:	cmp    BYTE PTR [rbp+0x38],ah
   14000dfe4:	sub    eax,0x64303337
   14000dfe9:	sub    eax,0x34643131
   14000dfee:	sub    eax,0x32346662
   14000dff3:	sub    eax,0x30623030
   14000dff8:	xor    BYTE PTR fs:[rcx],dh
   14000dffb:	xor    DWORD PTR [rax],edi
   14000dffd:	(bad)  
   14000dffe:	xor    eax,0xd277d36
   14000e003:	or     ah,BYTE PTR [rax]
   14000e005:	and    BYTE PTR [rax],ah
   14000e007:	and    BYTE PTR [rax],ah
   14000e009:	and    BYTE PTR [rax],ah
   14000e00b:	and    BYTE PTR [rax],ah
   14000e00d:	and    BYTE PTR [rax],ah
   14000e00f:	and    BYTE PTR [rax],ah
   14000e011:	and    BYTE PTR [rax],ah
   14000e013:	and    BYTE PTR [rbp+0xd],bh
   14000e016:	or     ah,BYTE PTR [rax]
   14000e018:	and    BYTE PTR [rax],ah
   14000e01a:	and    BYTE PTR [rax],ah
   14000e01c:	and    BYTE PTR [rax],ah
   14000e01e:	and    BYTE PTR [rbp+0xd],bh
   14000e021:	or     bh,BYTE PTR [rbp+0xd]
   14000e024:	or     al,BYTE PTR [rax]
   14000e026:	add    BYTE PTR [rax],al
   14000e028:	rex.W
   14000e029:	rex.WXB
   14000e02a:	rex.XB push r10
   14000e02c:	or     eax,0xa0d7b0a
   14000e031:	and    BYTE PTR [rax],ah
   14000e033:	and    BYTE PTR [rax],ah
   14000e035:	and    BYTE PTR [rax],ah
   14000e037:	and    BYTE PTR [rax],ah
   14000e039:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000e03b:	push   rdx
   14000e03c:	gs ins DWORD PTR es:[rdi],dx
   14000e03e:	outs   dx,DWORD PTR ds:[rsi]
   14000e03f:	jbe    0x14000e0a6
   14000e041:	and    BYTE PTR [rcx+0x70],al
   14000e044:	jo     0x14000e08f
   14000e046:	rex.R or eax,0x2020200a
   14000e04c:	and    BYTE PTR [rax],ah
   14000e04e:	and    BYTE PTR [rax],ah
   14000e050:	and    BYTE PTR [rbx+0xd],bh
   14000e053:	or     ah,BYTE PTR [rax]
   14000e055:	and    BYTE PTR [rax],ah
   14000e057:	and    BYTE PTR [rax],ah
   14000e059:	and    BYTE PTR [rax],ah
   14000e05b:	and    BYTE PTR [rax],ah
   14000e05d:	and    BYTE PTR [rax],ah
   14000e05f:	and    BYTE PTR [rax],ah
   14000e061:	and    BYTE PTR [rax],ah
   14000e063:	and    BYTE PTR [rbx+0x34],bh
   14000e066:	rex.RX xor BYTE PTR [rcx+0x43],r8b
   14000e06a:	xor    DWORD PTR [rip+0x38352d39],esi        # 0x178360da9
   14000e070:	xor    BYTE PTR [rbp*1+0x37616134],dh
   14000e077:	sub    eax,0x31394541
   14000e07c:	sub    eax,0x44373131
   14000e081:	ss rex.RB
   14000e083:	ss (bad) 
   14000e085:	rex.X
   14000e086:	rex.X cmp DWORD PTR [rdx+0x7d],eax
   14000e08a:	and    BYTE PTR [rip+0x27207320],bh        # 0x1672153b0
   14000e090:	jne    0x14000e102
   14000e092:	outs   dx,BYTE PTR ds:[rsi]
   14000e093:	jo     0x14000e0f8
   14000e095:	outs   dx,DWORD PTR ds:[rsi]
   14000e096:	outs   dx,BYTE PTR ds:[rsi]
   14000e097:	je     0x14000e0c0
   14000e099:	or     eax,0x2020200a
   14000e09e:	and    BYTE PTR [rax],ah
   14000e0a0:	and    BYTE PTR [rax],ah
   14000e0a2:	and    BYTE PTR [rax],ah
   14000e0a4:	and    BYTE PTR [rax],ah
   14000e0a6:	and    BYTE PTR [rax],ah
   14000e0a8:	and    BYTE PTR [rax],ah
   14000e0aa:	and    BYTE PTR [rdi],ah
   14000e0ac:	jne    0x14000e11e
   14000e0ae:	outs   dx,BYTE PTR ds:[rsi]
   14000e0af:	jo     0x14000e114
   14000e0b1:	outs   dx,DWORD PTR ds:[rsi]
   14000e0b2:	outs   dx,BYTE PTR ds:[rsi]
   14000e0b3:	je     0x14000e0e3
   14000e0b5:	gs js  0x14000e11d
   14000e0b8:	(bad)  
   14000e0b9:	or     eax,0x2020200a
   14000e0be:	and    BYTE PTR [rax],ah
   14000e0c0:	and    BYTE PTR [rax],ah
   14000e0c2:	and    BYTE PTR [rax],ah
   14000e0c4:	and    BYTE PTR [rax],ah
   14000e0c6:	and    BYTE PTR [rax],ah
   14000e0c8:	and    BYTE PTR [rax],ah
   14000e0ca:	and    BYTE PTR [rbx+0xd],bh
   14000e0cd:	or     ah,BYTE PTR [rax]
   14000e0cf:	and    BYTE PTR [rax],ah
   14000e0d1:	and    BYTE PTR [rax],ah
   14000e0d3:	and    BYTE PTR [rax],ah
   14000e0d5:	and    BYTE PTR [rax],ah
   14000e0d7:	and    BYTE PTR [rax],ah
   14000e0d9:	and    BYTE PTR [rax],ah
   14000e0db:	and    BYTE PTR [rax],ah
   14000e0dd:	and    BYTE PTR [rax],ah
   14000e0df:	and    BYTE PTR [rax],ah
   14000e0e1:	and    BYTE PTR [rax],ah
   14000e0e3:	and    BYTE PTR [rax],ah
   14000e0e5:	and    BYTE PTR [rsi+0x61],dh
   14000e0e8:	ins    BYTE PTR es:[rdi],dx
   14000e0e9:	and    BYTE PTR [rcx+0x70],al
   14000e0ec:	jo     0x14000e137
   14000e0ee:	and    BYTE PTR [rip+0x7b207320],r15b        # 0x1bb215415
   14000e0f5:	xor    al,0x46
   14000e0f7:	xor    BYTE PTR [rcx+0x43],al
   14000e0fa:	xor    DWORD PTR [rip+0x38352d39],esi        # 0x178360e39
   14000e100:	xor    BYTE PTR [rbp*1+0x37616134],dh
   14000e107:	sub    eax,0x31394541
   14000e10c:	sub    eax,0x44373131
   14000e111:	ss rex.RB
   14000e113:	ss (bad) 
   14000e115:	rex.X
   14000e116:	rex.X cmp DWORD PTR [rdx+0x7d],eax
   14000e11a:	or     eax,0x2020200a
   14000e11f:	and    BYTE PTR [rax],ah
   14000e121:	and    BYTE PTR [rax],ah
   14000e123:	and    BYTE PTR [rax],ah
   14000e125:	and    BYTE PTR [rax],ah
   14000e127:	and    BYTE PTR [rax],ah
   14000e129:	and    BYTE PTR [rax],ah
   14000e12b:	and    BYTE PTR [rbp+0xd],bh
   14000e12e:	or     ah,BYTE PTR [rax]
   14000e130:	and    BYTE PTR [rax],ah
   14000e132:	and    BYTE PTR [rax],ah
   14000e134:	and    BYTE PTR [rax],ah
   14000e136:	and    BYTE PTR [rbp+0xd],bh
   14000e139:	or     bh,BYTE PTR [rbp+0xd]
   14000e13c:	or     al,BYTE PTR [rax]
	...

Disassembly of section .reloc:

000000014000f000 <.reloc>:
   14000f000:	add    BYTE PTR [rax+0x0],ah
   14000f003:	add    BYTE PTR [rax+0x0],bl
   14000f006:	add    BYTE PTR [rax],al
   14000f008:	mov    al,0xa3
   14000f00a:	mov    eax,0xe0a3c8a3
   14000f00f:	movabs ds:0xa8a0a498a490a3e8,eax
   14000f018:	test   al,0xa8
   14000f01a:	mov    al,0xa8
   14000f01c:	mov    eax,0xc8a8c0a8
   14000f021:	test   al,0x0
   14000f023:	test   eax,0xa910a908
   14000f028:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14000f02e:	pop    rax
   14000f02f:	test   eax,0xa990a988
   14000f034:	mov    al,0xa9
   14000f036:	shr    BYTE PTR [rcx-0x561f5630],0xf0
   14000f03d:	test   eax,0xaa10aa00
   14000f042:	and    BYTE PTR [rdx-0x55bf55d0],ch
   14000f048:	push   rax
   14000f049:	stos   BYTE PTR es:[rdi],al
   14000f04a:	(bad)  
   14000f04b:	stos   BYTE PTR es:[rdi],al
   14000f04c:	jo     0x14000eff8
   14000f04e:	sub    BYTE PTR [rdx-0x544f5468],0xb8
   14000f055:	stos   DWORD PTR es:[rdi],eax
   14000f056:	shr    BYTE PTR [rbx+0x9000],0x18
   14000f05d:	add    BYTE PTR [rax],al
   14000f05f:	add    BYTE PTR [rax],ah
   14000f061:	movabs al,ds:0xa050a038a030a028
   14000f06a:	pop    rax
   14000f06b:	movabs al,ds:0xb000a0b0a060
   14000f074:	sbb    al,0x0
   14000f076:	add    BYTE PTR [rax],al
   14000f078:	add    BYTE PTR [rax-0x5fef5ff8],ah
   14000f07e:	sbb    BYTE PTR [rax-0x5fd75fe0],ah
   14000f084:	cmp    BYTE PTR [rax-0x5fb75fc0],ah
   14000f08a:	push   rax
   14000f08b:	.byte 0xa0
