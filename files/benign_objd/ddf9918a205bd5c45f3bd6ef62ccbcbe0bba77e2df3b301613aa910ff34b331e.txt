
ddf9918a205bd5c45f3bd6ef62ccbcbe0bba77e2df3b301613aa910ff34b331e.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x6dc9]        # 0x140007dd0
   140001007:	jmp    0x140007448
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	int3   
   140001011:	int3   
   140001012:	int3   
   140001013:	int3   
   140001014:	int3   
   140001015:	int3   
   140001016:	int3   
   140001017:	int3   
   140001018:	sub    rsp,0x38
   14000101c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001025:	and    QWORD PTR [rsp+0x48],0x0
   14000102b:	mov    edx,ecx
   14000102d:	lea    rcx,[rsp+0x48]
   140001032:	call   0x1400041a0
   140001037:	test   eax,eax
   140001039:	js     0x14000106f
   14000103b:	lea    rdx,[rip+0x76b2]        # 0x1400086f4
   140001042:	cmp    QWORD PTR [rsp+0x48],0x0
   140001048:	cmovne rdx,QWORD PTR [rsp+0x48]
   14000104e:	lea    rcx,[rip+0x7613]        # 0x140008668
   140001055:	call   QWORD PTR [rip+0x74c5]        # 0x140008520
   14000105b:	mov    ecx,0x1
   140001060:	call   0x140007aa8
   140001065:	mov    rcx,rax
   140001068:	call   QWORD PTR [rip+0x74aa]        # 0x140008518
   14000106e:	nop
   14000106f:	cmp    QWORD PTR [rsp+0x48],0x0
   140001075:	je     0x14000108d
   140001077:	call   QWORD PTR [rip+0x72a3]        # 0x140008320
   14000107d:	mov    rcx,rax
   140001080:	mov    r8,QWORD PTR [rsp+0x48]
   140001085:	xor    edx,edx
   140001087:	call   QWORD PTR [rip+0x728b]        # 0x140008318
   14000108d:	add    rsp,0x38
   140001091:	ret    
   140001092:	int3   
   140001093:	int3   
   140001094:	int3   
   140001095:	int3   
   140001096:	int3   
   140001097:	int3   
   140001098:	int3   
   140001099:	int3   
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	rex.W jmp QWORD PTR [rip+0x72d9]        # 0x140008380
   1400010a7:	int3   
   1400010a8:	int3   
   1400010a9:	int3   
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	mov    rax,rsp
   1400010b3:	mov    QWORD PTR [rax+0x8],rbx
   1400010b7:	mov    QWORD PTR [rax+0x10],rsi
   1400010bb:	mov    QWORD PTR [rax+0x18],rdi
   1400010bf:	push   rbp
   1400010c0:	lea    rbp,[rax-0x5f]
   1400010c4:	sub    rsp,0x100
   1400010cb:	mov    rax,QWORD PTR [rip+0xa2a6]        # 0x14000b378
   1400010d2:	xor    rax,rsp
   1400010d5:	mov    QWORD PTR [rbp+0x4f],rax
   1400010d9:	xor    ecx,ecx
   1400010db:	call   QWORD PTR [rip+0x7207]        # 0x1400082e8
   1400010e1:	mov    ecx,DWORD PTR [rip+0x7599]        # 0x140008680
   1400010e7:	xor    esi,esi
   1400010e9:	mov    DWORD PTR [rbp+0x47],ecx
   1400010ec:	mov    rbx,rax
   1400010ef:	movzx  ecx,WORD PTR [rip+0x758e]        # 0x140008684
   1400010f6:	mov    WORD PTR [rbp+0x4b],cx
   1400010fa:	movups xmm0,XMMWORD PTR [rip+0x756f]        # 0x140008670
   140001101:	movups XMMWORD PTR [rbp+0x37],xmm0
   140001105:	test   rax,rax
   140001108:	jne    0x140001115
   14000110a:	call   QWORD PTR [rip+0x71d0]        # 0x1400082e0
   140001110:	jmp    0x140001213
   140001115:	lea    rax,[rip+0xffffffffffffff84]        # 0x1400010a0
   14000111c:	mov    QWORD PTR [rbp-0x49],0x50
   140001124:	mov    edi,0x7f00
   140001129:	mov    QWORD PTR [rbp-0x41],rax
   14000112d:	mov    edx,edi
   14000112f:	mov    QWORD PTR [rbp-0x39],rsi
   140001133:	xor    ecx,ecx
   140001135:	mov    QWORD PTR [rbp-0x31],rbx
   140001139:	call   QWORD PTR [rip+0x7271]        # 0x1400083b0
   14000113f:	mov    edx,edi
   140001141:	xor    ecx,ecx
   140001143:	mov    QWORD PTR [rbp-0x29],rax
   140001147:	call   QWORD PTR [rip+0x722b]        # 0x140008378
   14000114d:	movdqa xmm0,XMMWORD PTR [rip+0x811b]        # 0x140009270
   140001155:	mov    edx,edi
   140001157:	mov    QWORD PTR [rbp-0x21],rax
   14000115b:	xor    ecx,ecx
   14000115d:	lea    rax,[rbp+0x37]
   140001161:	movdqa XMMWORD PTR [rbp-0x19],xmm0
   140001166:	mov    QWORD PTR [rbp-0x9],rax
   14000116a:	call   QWORD PTR [rip+0x7240]        # 0x1400083b0
   140001170:	lea    rcx,[rbp-0x49]
   140001174:	mov    QWORD PTR [rbp-0x1],rax
   140001178:	call   QWORD PTR [rip+0x723a]        # 0x1400083b8
   14000117e:	test   ax,ax
   140001181:	je     0x14000110a
   140001183:	mov    QWORD PTR [rsp+0x58],rsi
   140001188:	lea    r8,[rip+0x74e1]        # 0x140008670
   14000118f:	mov    QWORD PTR [rsp+0x50],rbx
   140001194:	lea    rdx,[rbp+0x37]
   140001198:	mov    QWORD PTR [rsp+0x48],rsi
   14000119d:	mov    eax,0xc8
   1400011a2:	mov    QWORD PTR [rsp+0x40],rsi
   1400011a7:	mov    r9d,0xcf0000
   1400011ad:	mov    DWORD PTR [rsp+0x38],eax
   1400011b1:	mov    ecx,0x200
   1400011b6:	mov    DWORD PTR [rsp+0x30],eax
   1400011ba:	mov    eax,0x80000000
   1400011bf:	mov    DWORD PTR [rsp+0x28],eax
   1400011c3:	mov    DWORD PTR [rsp+0x20],eax
   1400011c7:	call   QWORD PTR [rip+0x71db]        # 0x1400083a8
   1400011cd:	test   rax,rax
   1400011d0:	jne    0x1400011f8
   1400011d2:	jmp    0x14000110a
   1400011d7:	mov    eax,DWORD PTR [rbp+0xf]
   1400011da:	add    eax,0xfffffff0
   1400011dd:	test   eax,0xfffffffd
   1400011e2:	je     0x14000120e
   1400011e4:	lea    rcx,[rbp+0x7]
   1400011e8:	call   QWORD PTR [rip+0x71aa]        # 0x140008398
   1400011ee:	lea    rcx,[rbp+0x7]
   1400011f2:	call   QWORD PTR [rip+0x7198]        # 0x140008390
   1400011f8:	xor    r9d,r9d
   1400011fb:	lea    rcx,[rbp+0x7]
   1400011ff:	xor    r8d,r8d
   140001202:	xor    edx,edx
   140001204:	call   QWORD PTR [rip+0x7196]        # 0x1400083a0
   14000120a:	test   eax,eax
   14000120c:	jg     0x1400011d7
   14000120e:	mov    eax,0x1
   140001213:	mov    rcx,QWORD PTR [rbp+0x4f]
   140001217:	xor    rcx,rsp
   14000121a:	call   0x140007390
   14000121f:	lea    r11,[rsp+0x100]
   140001227:	mov    rbx,QWORD PTR [r11+0x10]
   14000122b:	mov    rsi,QWORD PTR [r11+0x18]
   14000122f:	mov    rdi,QWORD PTR [r11+0x20]
   140001233:	mov    rsp,r11
   140001236:	pop    rbp
   140001237:	ret    
   140001238:	int3   
   140001239:	int3   
   14000123a:	int3   
   14000123b:	int3   
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	sub    rsp,0x28
   140001244:	call   QWORD PTR [rip+0x708e]        # 0x1400082d8
   14000124a:	test   rax,rax
   14000124d:	jne    0x140001258
   14000124f:	or     ecx,0xffffffff
   140001252:	call   QWORD PTR [rip+0x7078]        # 0x1400082d0
   140001258:	mov    ecx,0x1
   14000125d:	call   0x140007aa8
   140001262:	mov    rcx,rax
   140001265:	call   QWORD PTR [rip+0x72ad]        # 0x140008518
   14000126b:	mov    ecx,0x272c
   140001270:	call   0x140001018
   140001275:	mov    ecx,0x1
   14000127a:	call   0x140007aa8
   14000127f:	mov    rcx,rax
   140001282:	call   QWORD PTR [rip+0x7290]        # 0x140008518
   140001288:	call   QWORD PTR [rip+0x7282]        # 0x140008510
   14000128e:	movzx  ecx,ax
   140001291:	call   QWORD PTR [rip+0x7271]        # 0x140008508
   140001297:	cmp    ax,0x51
   14000129b:	jne    0x140001258
   14000129d:	mov    eax,0x1
   1400012a2:	add    rsp,0x28
   1400012a6:	ret    
   1400012a7:	int3   
   1400012a8:	int3   
   1400012a9:	int3   
   1400012aa:	int3   
   1400012ab:	int3   
   1400012ac:	int3   
   1400012ad:	int3   
   1400012ae:	int3   
   1400012af:	int3   
   1400012b0:	mov    rax,rsp
   1400012b3:	push   rbp
   1400012b4:	push   r14
   1400012b6:	push   r15
   1400012b8:	lea    rbp,[rax-0x228]
   1400012bf:	sub    rsp,0x310
   1400012c6:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   1400012cf:	mov    QWORD PTR [rax+0x8],rbx
   1400012d3:	mov    QWORD PTR [rax+0x18],rsi
   1400012d7:	mov    QWORD PTR [rax+0x20],rdi
   1400012db:	mov    rax,QWORD PTR [rip+0xa096]        # 0x14000b378
   1400012e2:	xor    rax,rsp
   1400012e5:	mov    QWORD PTR [rbp+0x200],rax
   1400012ec:	mov    r14,rdx
   1400012ef:	movsxd rsi,ecx
   1400012f2:	and    QWORD PTR [rsp+0x50],0x0
   1400012f8:	call   QWORD PTR [rip+0x6f3a]        # 0x140008238
   1400012fe:	mov    r15,QWORD PTR [rip+0x9f1b]        # 0x14000b220
   140001305:	mov    rdx,r15
   140001308:	mov    rcx,rax
   14000130b:	call   QWORD PTR [rip+0x71ef]        # 0x140008500
   140001311:	test   rax,rax
   140001314:	jne    0x14000131b
   140001316:	jmp    0x14000146a
   14000131b:	mov    ebx,0x1
   140001320:	cmp    rbx,rsi
   140001323:	jge    0x140001376
   140001325:	mov    rdx,r15
   140001328:	mov    rcx,QWORD PTR [r14+rbx*8]
   14000132c:	call   QWORD PTR [rip+0x71ce]        # 0x140008500
   140001332:	test   rax,rax
   140001335:	je     0x140001345
   140001337:	cmp    esi,0x2
   14000133a:	jne    0x140001364
   14000133c:	lea    rdx,[rip+0x7345]        # 0x140008688
   140001343:	jmp    0x14000135a
   140001345:	mov    rdx,QWORD PTR [r14+rbx*8]
   140001349:	lea    rcx,[rsp+0x50]
   14000134e:	call   0x140001ba0
   140001353:	lea    rdx,[rip+0x733e]        # 0x140008698
   14000135a:	lea    rcx,[rsp+0x50]
   14000135f:	call   0x140001ba0
   140001364:	inc    rbx
   140001367:	cmp    rbx,rsi
   14000136a:	jl     0x140001325
   14000136c:	mov    r8,QWORD PTR [rsp+0x50]
   140001371:	test   r8,r8
   140001374:	jne    0x14000137d
   140001376:	lea    r8,[rip+0x7377]        # 0x1400086f4
   14000137d:	lea    rdx,[rip+0x7318]        # 0x14000869c
   140001384:	lea    rcx,[rbp-0x10]
   140001388:	call   0x140001ab4
   14000138d:	and    QWORD PTR [rsp+0x60],0x0
   140001393:	xor    eax,eax
   140001395:	mov    QWORD PTR [rsp+0x68],rax
   14000139a:	mov    QWORD PTR [rsp+0x70],rax
   14000139f:	xor    edx,edx
   1400013a1:	lea    r8d,[rax+0x60]
   1400013a5:	lea    rcx,[rbp-0x78]
   1400013a9:	call   0x140007c0e
   1400013ae:	mov    DWORD PTR [rbp-0x80],0x68
   1400013b5:	lea    rax,[rsp+0x60]
   1400013ba:	mov    QWORD PTR [rsp+0x48],rax
   1400013bf:	lea    rax,[rbp-0x80]
   1400013c3:	mov    QWORD PTR [rsp+0x40],rax
   1400013c8:	and    QWORD PTR [rsp+0x38],0x0
   1400013ce:	and    QWORD PTR [rsp+0x30],0x0
   1400013d4:	mov    DWORD PTR [rsp+0x28],0x8
   1400013dc:	mov    DWORD PTR [rsp+0x20],0x1
   1400013e4:	xor    r9d,r9d
   1400013e7:	xor    r8d,r8d
   1400013ea:	lea    rdx,[rbp-0x10]
   1400013ee:	lea    rcx,[rip+0x72b3]        # 0x1400086a8
   1400013f5:	call   QWORD PTR [rip+0x6f05]        # 0x140008300
   1400013fb:	test   eax,eax
   1400013fd:	jne    0x140001461
   1400013ff:	call   QWORD PTR [rip+0x6edb]        # 0x1400082e0
   140001405:	and    QWORD PTR [rsp+0x58],0x0
   14000140b:	and    QWORD PTR [rsp+0x30],0x0
   140001411:	and    DWORD PTR [rsp+0x28],0x0
   140001416:	lea    rdx,[rsp+0x58]
   14000141b:	mov    QWORD PTR [rsp+0x20],rdx
   140001420:	mov    r9d,0x400
   140001426:	mov    r8d,eax
   140001429:	xor    edx,edx
   14000142b:	mov    ecx,0x1300
   140001430:	call   QWORD PTR [rip+0x6ec2]        # 0x1400082f8
   140001436:	test   eax,eax
   140001438:	je     0x140001457
   14000143a:	mov    rdx,QWORD PTR [rsp+0x58]
   14000143f:	lea    rcx,[rip+0x7256]        # 0x14000869c
   140001446:	call   QWORD PTR [rip+0x70d4]        # 0x140008520
   14000144c:	mov    rcx,QWORD PTR [rsp+0x58]
   140001451:	call   QWORD PTR [rip+0x6e99]        # 0x1400082f0
   140001457:	mov    ecx,0x272d
   14000145c:	call   0x140001018
   140001461:	xor    ecx,ecx
   140001463:	call   QWORD PTR [rip+0x708f]        # 0x1400084f8
   140001469:	nop
   14000146a:	mov    rcx,QWORD PTR [rbp+0x200]
   140001471:	xor    rcx,rsp
   140001474:	call   0x140007390
   140001479:	lea    r11,[rsp+0x310]
   140001481:	mov    rbx,QWORD PTR [r11+0x20]
   140001485:	mov    rsi,QWORD PTR [r11+0x30]
   140001489:	mov    rdi,QWORD PTR [r11+0x38]
   14000148d:	mov    rsp,r11
   140001490:	pop    r15
   140001492:	pop    r14
   140001494:	pop    rbp
   140001495:	ret    
   140001496:	int3   
   140001497:	int3   
   140001498:	int3   
   140001499:	int3   
   14000149a:	int3   
   14000149b:	int3   
   14000149c:	mov    QWORD PTR [rsp+0x8],rbx
   1400014a1:	push   rbp
   1400014a2:	push   rsi
   1400014a3:	push   rdi
   1400014a4:	push   r12
   1400014a6:	push   r13
   1400014a8:	push   r14
   1400014aa:	push   r15
   1400014ac:	lea    rbp,[rsp-0x27]
   1400014b1:	sub    rsp,0xa0
   1400014b8:	xor    r13d,r13d
   1400014bb:	xorps  xmm0,xmm0
   1400014be:	cmp    DWORD PTR [rip+0xa4bb],r13d        # 0x14000b980
   1400014c5:	xorps  xmm1,xmm1
   1400014c8:	mov    rsi,rdx
   1400014cb:	mov    QWORD PTR [rbp+0x77],r13
   1400014cf:	mov    r14d,ecx
   1400014d2:	mov    QWORD PTR [rbp+0x7f],r13
   1400014d6:	lea    r15d,[r13+0x1]
   1400014da:	mov    QWORD PTR [rbp-0x31],r13
   1400014de:	mov    DWORD PTR [rbp+0x1f],r15d
   1400014e2:	mov    edi,r13d
   1400014e5:	mov    DWORD PTR [rbp+0x23],r15d
   1400014e9:	mov    r12d,r13d
   1400014ec:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   1400014f1:	movdqa XMMWORD PTR [rbp-0x19],xmm1
   1400014f6:	movdqa XMMWORD PTR [rbp-0x9],xmm0
   1400014fb:	movdqa XMMWORD PTR [rbp+0x7],xmm1
   140001500:	mov    WORD PTR [rbp+0x17],r13w
   140001505:	mov    DWORD PTR [rbp+0x1b],r13d
   140001509:	jne    0x14000152e
   14000150b:	lea    edx,[r13+0x14]
   14000150f:	lea    rcx,[rip+0xa442]        # 0x14000b958
   140001516:	call   QWORD PTR [rip+0x6d5c]        # 0x140008278
   14000151c:	mov    ecx,DWORD PTR [rip+0xa45e]        # 0x14000b980
   140001522:	test   eax,eax
   140001524:	cmovne ecx,r15d
   140001528:	mov    DWORD PTR [rip+0xa452],ecx        # 0x14000b980
   14000152e:	mov    edx,0x2a0
   140001533:	mov    ecx,0x40
   140001538:	call   QWORD PTR [rip+0x6d32]        # 0x140008270
   14000153e:	mov    rbx,rax
   140001541:	test   rax,rax
   140001544:	je     0x1400015d2
   14000154a:	lea    r8,[rip+0x7197]        # 0x1400086e8
   140001551:	mov    edx,0x64
   140001556:	mov    rcx,rax
   140001559:	call   QWORD PTR [rip+0x6fd9]        # 0x140008538
   14000155f:	lea    rcx,[rbx+0x64]
   140001563:	xor    edx,edx
   140001565:	mov    r8d,0x208
   14000156b:	call   0x140007c0e
   140001570:	or     r15,0xffffffffffffffff
   140001574:	mov    DWORD PTR [rbx+0x290],0x1
   14000157e:	mov    ecx,0xfffffff4
   140001583:	mov    QWORD PTR [rbx+0x270],r15
   14000158a:	call   QWORD PTR [rip+0x6c80]        # 0x140008210
   140001590:	test   rax,rax
   140001593:	mov    ecx,0xfffffff5
   140001598:	cmove  rax,r15
   14000159c:	mov    QWORD PTR [rbx+0x278],rax
   1400015a3:	call   QWORD PTR [rip+0x6c67]        # 0x140008210
   1400015a9:	test   rax,rax
   1400015ac:	mov    QWORD PTR [rbx+0x298],r13
   1400015b3:	cmove  rax,r15
   1400015b7:	mov    r15d,0x1
   1400015bd:	mov    DWORD PTR [rbx+0x288],r15d
   1400015c4:	mov    DWORD PTR [rbx+0x28c],r15d
   1400015cb:	mov    QWORD PTR [rbx+0x280],rax
   1400015d2:	mov    QWORD PTR [rip+0xa36f],rbx        # 0x14000b948
   1400015d9:	test   rbx,rbx
   1400015dc:	jne    0x1400015eb
   1400015de:	lea    rcx,[rip+0x705b]        # 0x140008640
   1400015e5:	call   QWORD PTR [rip+0x6d3d]        # 0x140008328
   1400015eb:	xor    r9d,r9d
   1400015ee:	xor    r8d,r8d
   1400015f1:	mov    edx,r15d
   1400015f4:	xor    ecx,ecx
   1400015f6:	call   QWORD PTR [rip+0x6b84]        # 0x140008180
   1400015fc:	mov    ecx,0x8001
   140001601:	call   QWORD PTR [rip+0x6b81]        # 0x140008188
   140001607:	mov    rdx,rsi
   14000160a:	mov    ecx,r14d
   14000160d:	call   0x1400012b0
   140001612:	xor    edx,edx
   140001614:	xor    ecx,ecx
   140001616:	call   QWORD PTR [rip+0x6f5c]        # 0x140008578
   14000161c:	test   eax,eax
   14000161e:	js     0x14000185c
   140001624:	call   QWORD PTR [rip+0x6f5e]        # 0x140008588
   14000162a:	test   eax,eax
   14000162c:	js     0x14000185c
   140001632:	lea    r8,[rbp+0x77]
   140001636:	mov    rdx,rsi
   140001639:	mov    ecx,r14d
   14000163c:	call   0x140001e60
   140001641:	test   eax,eax
   140001643:	jne    0x140001670
   140001645:	mov    edx,0x272e
   14000164a:	lea    rcx,[rbp+0x7f]
   14000164e:	call   0x1400041a0
   140001653:	mov    rdi,QWORD PTR [rbp+0x7f]
   140001657:	lea    rdx,[rip+0x7096]        # 0x1400086f4
   14000165e:	test   rdi,rdi
   140001661:	lea    rcx,[rbp+0x77]
   140001665:	cmovne rdx,rdi
   140001669:	call   0x140001ba0
   14000166e:	jmp    0x1400016c3
   140001670:	cmp    DWORD PTR [rip+0x9a79],r13d        # 0x14000b0f0
   140001677:	je     0x140001685
   140001679:	mov    ecx,0x2720
   14000167e:	call   0x140001018
   140001683:	jmp    0x1400016c3
   140001685:	lea    rdx,[rbp+0x77]
   140001689:	lea    rcx,[rbp-0x39]
   14000168d:	call   0x1400059f8
   140001692:	test   eax,eax
   140001694:	js     0x1400016bf
   140001696:	mov    ecx,DWORD PTR [rbp-0x39]
   140001699:	test   ecx,ecx
   14000169b:	je     0x140001879
   1400016a1:	cmp    ecx,0x1
   1400016a4:	jne    0x14000188e
   1400016aa:	lea    rdx,[rbp+0x77]
   1400016ae:	lea    rcx,[rbp-0x39]
   1400016b2:	call   0x140006488
   1400016b7:	test   eax,eax
   1400016b9:	jns    0x140001886
   1400016bf:	mov    r12,QWORD PTR [rbp-0x31]
   1400016c3:	mov    r15,QWORD PTR [rbp+0x7]
   1400016c7:	mov    rbx,QWORD PTR [rbp+0x77]
   1400016cb:	test   rbx,rbx
   1400016ce:	je     0x14000172d
   1400016d0:	cmp    WORD PTR [rbx],r13w
   1400016d4:	je     0x14000172d
   1400016d6:	mov    ecx,0xfffffff5
   1400016db:	call   QWORD PTR [rip+0x6b2f]        # 0x140008210
   1400016e1:	mov    rsi,rax
   1400016e4:	lea    rdx,[rax-0x1]
   1400016e8:	cmp    rdx,0xfffffffffffffffd
   1400016ec:	ja     0x14000172d
   1400016ee:	mov    edx,0x4
   1400016f3:	mov    rcx,rax
   1400016f6:	call   QWORD PTR [rip+0x6b1c]        # 0x140008218
   1400016fc:	mov    rdx,rbx
   1400016ff:	lea    rcx,[rip+0x7862]        # 0x140008f68
   140001706:	call   QWORD PTR [rip+0x6e14]        # 0x140008520
   14000170c:	mov    ecx,0x1
   140001711:	call   0x140007aa8
   140001716:	mov    rcx,rax
   140001719:	call   QWORD PTR [rip+0x6df9]        # 0x140008518
   14000171f:	mov    edx,0x7
   140001724:	mov    rcx,rsi
   140001727:	call   QWORD PTR [rip+0x6aeb]        # 0x140008218
   14000172d:	mov    rsi,QWORD PTR [rbp+0xf]
   140001731:	test   rsi,rsi
   140001734:	je     0x14000174a
   140001736:	call   QWORD PTR [rip+0x6be4]        # 0x140008320
   14000173c:	mov    r8,rsi
   14000173f:	xor    edx,edx
   140001741:	mov    rcx,rax
   140001744:	call   QWORD PTR [rip+0x6bce]        # 0x140008318
   14000174a:	test   r15,r15
   14000174d:	je     0x140001763
   14000174f:	call   QWORD PTR [rip+0x6bcb]        # 0x140008320
   140001755:	mov    r8,r15
   140001758:	xor    edx,edx
   14000175a:	mov    rcx,rax
   14000175d:	call   QWORD PTR [rip+0x6bb5]        # 0x140008318
   140001763:	mov    rsi,QWORD PTR [rbp-0x1]
   140001767:	test   rsi,rsi
   14000176a:	je     0x140001780
   14000176c:	call   QWORD PTR [rip+0x6bae]        # 0x140008320
   140001772:	mov    r8,rsi
   140001775:	xor    edx,edx
   140001777:	mov    rcx,rax
   14000177a:	call   QWORD PTR [rip+0x6b98]        # 0x140008318
   140001780:	mov    rsi,QWORD PTR [rbp-0x9]
   140001784:	test   rsi,rsi
   140001787:	je     0x14000179d
   140001789:	call   QWORD PTR [rip+0x6b91]        # 0x140008320
   14000178f:	mov    r8,rsi
   140001792:	xor    edx,edx
   140001794:	mov    rcx,rax
   140001797:	call   QWORD PTR [rip+0x6b7b]        # 0x140008318
   14000179d:	mov    rsi,QWORD PTR [rbp-0x11]
   1400017a1:	test   rsi,rsi
   1400017a4:	je     0x1400017ba
   1400017a6:	call   QWORD PTR [rip+0x6b74]        # 0x140008320
   1400017ac:	mov    r8,rsi
   1400017af:	xor    edx,edx
   1400017b1:	mov    rcx,rax
   1400017b4:	call   QWORD PTR [rip+0x6b5e]        # 0x140008318
   1400017ba:	mov    rsi,QWORD PTR [rbp-0x19]
   1400017be:	test   rsi,rsi
   1400017c1:	je     0x1400017d7
   1400017c3:	call   QWORD PTR [rip+0x6b57]        # 0x140008320
   1400017c9:	mov    r8,rsi
   1400017cc:	xor    edx,edx
   1400017ce:	mov    rcx,rax
   1400017d1:	call   QWORD PTR [rip+0x6b41]        # 0x140008318
   1400017d7:	mov    rsi,QWORD PTR [rbp-0x21]
   1400017db:	test   rsi,rsi
   1400017de:	je     0x1400017f4
   1400017e0:	call   QWORD PTR [rip+0x6b3a]        # 0x140008320
   1400017e6:	mov    r8,rsi
   1400017e9:	xor    edx,edx
   1400017eb:	mov    rcx,rax
   1400017ee:	call   QWORD PTR [rip+0x6b24]        # 0x140008318
   1400017f4:	mov    r15,QWORD PTR [rbp-0x29]
   1400017f8:	test   r15,r15
   1400017fb:	je     0x140001811
   1400017fd:	call   QWORD PTR [rip+0x6b1d]        # 0x140008320
   140001803:	mov    r8,r15
   140001806:	xor    edx,edx
   140001808:	mov    rcx,rax
   14000180b:	call   QWORD PTR [rip+0x6b07]        # 0x140008318
   140001811:	test   r12,r12
   140001814:	je     0x14000182a
   140001816:	call   QWORD PTR [rip+0x6b04]        # 0x140008320
   14000181c:	mov    r8,r12
   14000181f:	xor    edx,edx
   140001821:	mov    rcx,rax
   140001824:	call   QWORD PTR [rip+0x6aee]        # 0x140008318
   14000182a:	test   rdi,rdi
   14000182d:	je     0x140001843
   14000182f:	call   QWORD PTR [rip+0x6aeb]        # 0x140008320
   140001835:	mov    r8,rdi
   140001838:	xor    edx,edx
   14000183a:	mov    rcx,rax
   14000183d:	call   QWORD PTR [rip+0x6ad5]        # 0x140008318
   140001843:	test   rbx,rbx
   140001846:	je     0x14000185c
   140001848:	call   QWORD PTR [rip+0x6ad2]        # 0x140008320
   14000184e:	mov    r8,rbx
   140001851:	xor    edx,edx
   140001853:	mov    rcx,rax
   140001856:	call   QWORD PTR [rip+0x6abc]        # 0x140008318
   14000185c:	xor    eax,eax
   14000185e:	mov    rbx,QWORD PTR [rsp+0xe0]
   140001866:	add    rsp,0xa0
   14000186d:	pop    r15
   14000186f:	pop    r14
   140001871:	pop    r13
   140001873:	pop    r12
   140001875:	pop    rdi
   140001876:	pop    rsi
   140001877:	pop    rbp
   140001878:	ret    
   140001879:	lea    rdx,[rbp+0x77]
   14000187d:	lea    rcx,[rbp-0x39]
   140001881:	call   0x1400065f4
   140001886:	test   eax,eax
   140001888:	js     0x1400016bf
   14000188e:	mov    ecx,0x28
   140001893:	call   0x140006ffc
   140001898:	mov    rsi,rax
   14000189b:	test   rax,rax
   14000189e:	je     0x1400018bc
   1400018a0:	lea    rax,[rip+0x67a1]        # 0x140008048
   1400018a7:	mov    QWORD PTR [rsi],rax
   1400018aa:	mov    QWORD PTR [rsi+0x8],r13
   1400018ae:	mov    QWORD PTR [rsi+0x10],r13
   1400018b2:	mov    QWORD PTR [rsi+0x18],r13
   1400018b6:	mov    QWORD PTR [rsi+0x20],r13
   1400018ba:	jmp    0x1400018bf
   1400018bc:	mov    rsi,r13
   1400018bf:	test   rsi,rsi
   1400018c2:	jne    0x1400018d7
   1400018c4:	lea    rdx,[rbp+0x77]
   1400018c8:	mov    ecx,0x8007000e
   1400018cd:	call   0x1400043e8
   1400018d2:	jmp    0x1400016bf
   1400018d7:	mov    r15,QWORD PTR [rbp-0x29]
   1400018db:	lea    r14,[rip+0x6e12]        # 0x1400086f4
   1400018e2:	test   r15,r15
   1400018e5:	mov    QWORD PTR [rsi+0x20],r13
   1400018e9:	mov    rdx,r14
   1400018ec:	lea    rcx,[rsi+0x8]
   1400018f0:	cmovne rdx,r15
   1400018f4:	call   0x140001ae4
   1400018f9:	mov    r15,QWORD PTR [rbp+0x7]
   1400018fd:	mov    r12,QWORD PTR [rbp-0x31]
   140001901:	test   eax,eax
   140001903:	js     0x140001a8d
   140001909:	test   r12,r12
   14000190c:	lea    rcx,[rsi+0x10]
   140001910:	mov    rdx,r14
   140001913:	cmovne rdx,r12
   140001917:	call   0x140001ae4
   14000191c:	test   eax,eax
   14000191e:	js     0x140001a8d
   140001924:	test   r15,r15
   140001927:	lea    rcx,[rsi+0x18]
   14000192b:	mov    rdx,r14
   14000192e:	cmovne rdx,r15
   140001932:	call   0x140001ae4
   140001937:	test   eax,eax
   140001939:	js     0x140001a8d
   14000193f:	mov    ecx,0x2727
   140001944:	call   0x140001018
   140001949:	mov    rcx,rsi
   14000194c:	call   0x140005654
   140001951:	test   eax,eax
   140001953:	jns    0x14000197d
   140001955:	lea    rdx,[rbp+0x77]
   140001959:	mov    ecx,eax
   14000195b:	call   0x1400043e8
   140001960:	mov    ecx,0x2728
   140001965:	call   0x140001018
   14000196a:	mov    r8d,DWORD PTR [rbp+0x23]
   14000196e:	xor    ecx,ecx
   140001970:	mov    edx,DWORD PTR [rbp+0x1f]
   140001973:	call   0x1400042a8
   140001978:	jmp    0x1400016c7
   14000197d:	mov    ecx,0x2729
   140001982:	call   0x140001018
   140001987:	test   r15,r15
   14000198a:	mov    QWORD PTR [rbp+0x7f],r13
   14000198e:	mov    rbx,r14
   140001991:	lea    rdx,[rip+0x6d30]        # 0x1400086c8
   140001998:	lea    rcx,[rbp+0x7f]
   14000199c:	cmovne rbx,r15
   1400019a0:	call   0x140001ae4
   1400019a5:	test   eax,eax
   1400019a7:	js     0x1400019e3
   1400019a9:	lea    rdx,[rip+0x6d30]        # 0x1400086e0
   1400019b0:	lea    rcx,[rbp+0x7f]
   1400019b4:	call   0x140001ba0
   1400019b9:	test   eax,eax
   1400019bb:	js     0x1400019e3
   1400019bd:	mov    rdx,rbx
   1400019c0:	lea    rcx,[rbp+0x7f]
   1400019c4:	call   0x140001ba0
   1400019c9:	test   eax,eax
   1400019cb:	js     0x1400019e3
   1400019cd:	mov    rbx,QWORD PTR [rbp+0x7f]
   1400019d1:	test   rbx,rbx
   1400019d4:	cmovne r14,rbx
   1400019d8:	mov    rcx,r14
   1400019db:	call   QWORD PTR [rip+0x686f]        # 0x140008250
   1400019e1:	jmp    0x1400019e7
   1400019e3:	mov    rbx,QWORD PTR [rbp+0x7f]
   1400019e7:	test   rbx,rbx
   1400019ea:	je     0x140001a00
   1400019ec:	call   QWORD PTR [rip+0x692e]        # 0x140008320
   1400019f2:	mov    r8,rbx
   1400019f5:	xor    edx,edx
   1400019f7:	mov    rcx,rax
   1400019fa:	call   QWORD PTR [rip+0x6918]        # 0x140008318
   140001a00:	mov    r8d,DWORD PTR [rbp+0x23]
   140001a04:	mov    ecx,0x1
   140001a09:	mov    edx,DWORD PTR [rbp+0x1f]
   140001a0c:	call   0x1400042a8
   140001a11:	xor    r9d,r9d
   140001a14:	mov    QWORD PTR [rsp+0x28],r13
   140001a19:	lea    r8,[rip+0xfffffffffffff820]        # 0x140001240
   140001a20:	mov    DWORD PTR [rsp+0x20],r13d
   140001a25:	xor    edx,edx
   140001a27:	xor    ecx,ecx
   140001a29:	call   QWORD PTR [rip+0x6761]        # 0x140008190
   140001a2f:	xor    r9d,r9d
   140001a32:	mov    QWORD PTR [rsp+0x28],r13
   140001a37:	lea    r8,[rip+0xfffffffffffff672]        # 0x1400010b0
   140001a3e:	mov    QWORD PTR [rbp-0x49],rax
   140001a42:	xor    edx,edx
   140001a44:	mov    DWORD PTR [rsp+0x20],r13d
   140001a49:	xor    ecx,ecx
   140001a4b:	call   QWORD PTR [rip+0x673f]        # 0x140008190
   140001a51:	xor    r8d,r8d
   140001a54:	lea    rdx,[rbp-0x49]
   140001a58:	or     r9d,0xffffffff
   140001a5c:	mov    QWORD PTR [rbp-0x41],rax
   140001a60:	lea    ecx,[r8+0x2]
   140001a64:	call   QWORD PTR [rip+0x672e]        # 0x140008198
   140001a6a:	mov    ecx,0x272a
   140001a6f:	call   0x140001018
   140001a74:	mov    rax,QWORD PTR [rsi+0x20]
   140001a78:	mov    rax,QWORD PTR [rax+0x18]
   140001a7c:	test   rax,rax
   140001a7f:	je     0x140001a9d
   140001a81:	xor    ecx,ecx
   140001a83:	call   QWORD PTR [rip+0x6b17]        # 0x1400085a0
   140001a89:	test   eax,eax
   140001a8b:	jns    0x140001a9d
   140001a8d:	lea    rdx,[rbp+0x77]
   140001a91:	mov    ecx,eax
   140001a93:	call   0x1400043e8
   140001a98:	jmp    0x1400016c7
   140001a9d:	mov    ecx,0x272b
   140001aa2:	call   0x140001018
   140001aa7:	jmp    0x1400016c7
   140001aac:	int3   
   140001aad:	int3   
   140001aae:	int3   
   140001aaf:	int3   
   140001ab0:	int3   
   140001ab1:	int3   
   140001ab2:	int3   
   140001ab3:	int3   
   140001ab4:	mov    rax,rsp
   140001ab7:	mov    QWORD PTR [rax+0x10],rdx
   140001abb:	mov    QWORD PTR [rax+0x18],r8
   140001abf:	mov    QWORD PTR [rax+0x20],r9
   140001ac3:	sub    rsp,0x28
   140001ac7:	mov    r8,rdx
   140001aca:	lea    r9,[rax+0x18]
   140001ace:	mov    edx,0x104
   140001ad3:	call   QWORD PTR [rip+0x6a17]        # 0x1400084f0
   140001ad9:	add    rsp,0x28
   140001add:	ret    
   140001ade:	int3   
   140001adf:	int3   
   140001ae0:	int3   
   140001ae1:	int3   
   140001ae2:	int3   
   140001ae3:	int3   
   140001ae4:	mov    rax,rsp
   140001ae7:	mov    QWORD PTR [rax+0x8],rbx
   140001aeb:	mov    QWORD PTR [rax+0x10],rbp
   140001aef:	mov    QWORD PTR [rax+0x18],rsi
   140001af3:	mov    QWORD PTR [rax+0x20],rdi
   140001af7:	push   r14
   140001af9:	sub    rsp,0x20
   140001afd:	xor    r14d,r14d
   140001b00:	mov    rbx,rdx
   140001b03:	mov    rdi,rcx
   140001b06:	test   rdx,rdx
   140001b09:	jne    0x140001b12
   140001b0b:	mov    eax,0x80070057
   140001b10:	jmp    0x140001b7d
   140001b12:	or     rax,0xffffffffffffffff
   140001b16:	inc    rax
   140001b19:	cmp    WORD PTR [rdx+rax*2],r14w
   140001b1e:	jne    0x140001b16
   140001b20:	mov    rsi,QWORD PTR [rcx]
   140001b23:	lea    rbp,[rax*2+0x2]
   140001b2b:	test   rsi,rsi
   140001b2e:	je     0x140001b47
   140001b30:	call   QWORD PTR [rip+0x67ea]        # 0x140008320
   140001b36:	mov    r8,rsi
   140001b39:	xor    edx,edx
   140001b3b:	mov    rcx,rax
   140001b3e:	call   QWORD PTR [rip+0x67d4]        # 0x140008318
   140001b44:	mov    QWORD PTR [rdi],r14
   140001b47:	call   QWORD PTR [rip+0x67d3]        # 0x140008320
   140001b4d:	mov    r8,rbp
   140001b50:	mov    edx,0x8
   140001b55:	mov    rcx,rax
   140001b58:	call   QWORD PTR [rip+0x67b2]        # 0x140008310
   140001b5e:	mov    QWORD PTR [rdi],rax
   140001b61:	test   rax,rax
   140001b64:	jne    0x140001b6d
   140001b66:	mov    eax,0x80070008
   140001b6b:	jmp    0x140001b7d
   140001b6d:	mov    r8,rbp
   140001b70:	mov    rdx,rbx
   140001b73:	mov    rcx,rax
   140001b76:	call   0x140007c02
   140001b7b:	xor    eax,eax
   140001b7d:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b82:	mov    rbp,QWORD PTR [rsp+0x38]
   140001b87:	mov    rsi,QWORD PTR [rsp+0x40]
   140001b8c:	mov    rdi,QWORD PTR [rsp+0x48]
   140001b91:	add    rsp,0x20
   140001b95:	pop    r14
   140001b97:	ret    
   140001b98:	int3   
   140001b99:	int3   
   140001b9a:	int3   
   140001b9b:	int3   
   140001b9c:	int3   
   140001b9d:	int3   
   140001b9e:	int3   
   140001b9f:	int3   
   140001ba0:	mov    rax,rsp
   140001ba3:	mov    QWORD PTR [rax+0x8],rbx
   140001ba7:	mov    QWORD PTR [rax+0x10],rbp
   140001bab:	mov    QWORD PTR [rax+0x18],rsi
   140001baf:	mov    QWORD PTR [rax+0x20],rdi
   140001bb3:	push   r12
   140001bb5:	push   r14
   140001bb7:	push   r15
   140001bb9:	sub    rsp,0x20
   140001bbd:	xor    r12d,r12d
   140001bc0:	mov    rbp,rdx
   140001bc3:	mov    rdi,rcx
   140001bc6:	mov    ebx,r12d
   140001bc9:	test   rdx,rdx
   140001bcc:	jne    0x140001bd8
   140001bce:	mov    eax,0x80070057
   140001bd3:	jmp    0x140001c60
   140001bd8:	mov    rsi,QWORD PTR [rcx]
   140001bdb:	or     rax,0xffffffffffffffff
   140001bdf:	test   rsi,rsi
   140001be2:	je     0x140001bf4
   140001be4:	mov    rbx,rax
   140001be7:	inc    rbx
   140001bea:	cmp    WORD PTR [rsi+rbx*2],r12w
   140001bef:	jne    0x140001be7
   140001bf1:	add    rbx,rbx
   140001bf4:	inc    rax
   140001bf7:	cmp    WORD PTR [rdx+rax*2],r12w
   140001bfc:	jne    0x140001bf4
   140001bfe:	lea    r14,[rax*2+0x2]
   140001c06:	lea    r15,[rbx+r14*1]
   140001c0a:	call   QWORD PTR [rip+0x6710]        # 0x140008320
   140001c10:	mov    rcx,rax
   140001c13:	test   rsi,rsi
   140001c16:	je     0x140001c37
   140001c18:	mov    r9,r15
   140001c1b:	mov    r8,rsi
   140001c1e:	xor    edx,edx
   140001c20:	call   QWORD PTR [rip+0x66e2]        # 0x140008308
   140001c26:	test   rax,rax
   140001c29:	jne    0x140001c32
   140001c2b:	mov    eax,0x80070008
   140001c30:	jmp    0x140001c60
   140001c32:	mov    QWORD PTR [rdi],rax
   140001c35:	jmp    0x140001c4d
   140001c37:	mov    r8,r15
   140001c3a:	mov    edx,0x8
   140001c3f:	call   QWORD PTR [rip+0x66cb]        # 0x140008310
   140001c45:	mov    QWORD PTR [rdi],rax
   140001c48:	test   rax,rax
   140001c4b:	je     0x140001c2b
   140001c4d:	mov    rcx,QWORD PTR [rdi]
   140001c50:	mov    r8,r14
   140001c53:	add    rcx,rbx
   140001c56:	mov    rdx,rbp
   140001c59:	call   0x140007c02
   140001c5e:	xor    eax,eax
   140001c60:	mov    rbx,QWORD PTR [rsp+0x40]
   140001c65:	mov    rbp,QWORD PTR [rsp+0x48]
   140001c6a:	mov    rsi,QWORD PTR [rsp+0x50]
   140001c6f:	mov    rdi,QWORD PTR [rsp+0x58]
   140001c74:	add    rsp,0x20
   140001c78:	pop    r15
   140001c7a:	pop    r14
   140001c7c:	pop    r12
   140001c7e:	ret    
   140001c7f:	int3   
   140001c80:	int3   
   140001c81:	int3   
   140001c82:	int3   
   140001c83:	int3   
   140001c84:	int3   
   140001c85:	int3   
   140001c86:	int3   
   140001c87:	int3   
   140001c88:	mov    QWORD PTR [rsp+0x8],rbx
   140001c8d:	push   rdi
   140001c8e:	sub    rsp,0x20
   140001c92:	mov    rdi,QWORD PTR [rcx]
   140001c95:	mov    rbx,rcx
   140001c98:	test   rdi,rdi
   140001c9b:	je     0x140001cb5
   140001c9d:	call   QWORD PTR [rip+0x667d]        # 0x140008320
   140001ca3:	mov    r8,rdi
   140001ca6:	xor    edx,edx
   140001ca8:	mov    rcx,rax
   140001cab:	call   QWORD PTR [rip+0x6667]        # 0x140008318
   140001cb1:	and    QWORD PTR [rbx],0x0
   140001cb5:	mov    rbx,QWORD PTR [rsp+0x30]
   140001cba:	add    rsp,0x20
   140001cbe:	pop    rdi
   140001cbf:	ret    
   140001cc0:	int3   
   140001cc1:	int3   
   140001cc2:	int3   
   140001cc3:	int3   
   140001cc4:	int3   
   140001cc5:	int3   
   140001cc6:	int3   
   140001cc7:	int3   
   140001cc8:	mov    QWORD PTR [rsp+0x10],rbx
   140001ccd:	mov    QWORD PTR [rsp+0x18],rsi
   140001cd2:	push   rdi
   140001cd3:	sub    rsp,0x250
   140001cda:	mov    rax,QWORD PTR [rip+0x9697]        # 0x14000b378
   140001ce1:	xor    rax,rsp
   140001ce4:	mov    QWORD PTR [rsp+0x240],rax
   140001cec:	and    QWORD PTR [rsp+0x20],0x0
   140001cf2:	mov    rdi,rcx
   140001cf5:	lea    rcx,[rsp+0x20]
   140001cfa:	call   0x14000538c
   140001cff:	mov    ebx,eax
   140001d01:	test   eax,eax
   140001d03:	js     0x140001df1
   140001d09:	mov    rcx,QWORD PTR [rsp+0x20]
   140001d0e:	lea    rdx,[rsp+0x30]
   140001d13:	mov    r8d,0x104
   140001d19:	call   QWORD PTR [rip+0x6481]        # 0x1400081a0
   140001d1f:	dec    eax
   140001d21:	cmp    eax,0x103
   140001d26:	ja     0x140001ddd
   140001d2c:	lea    rsi,[rdi+0x8]
   140001d30:	mov    rcx,rsi
   140001d33:	lea    rdx,[rsp+0x30]
   140001d38:	call   0x140001ae4
   140001d3d:	mov    ebx,eax
   140001d3f:	test   eax,eax
   140001d41:	js     0x140001df1
   140001d47:	lea    rdx,[rip+0x69aa]        # 0x1400086f8
   140001d4e:	mov    rcx,rsi
   140001d51:	call   0x140001ba0
   140001d56:	mov    ebx,eax
   140001d58:	test   eax,eax
   140001d5a:	js     0x140001df1
   140001d60:	lea    rdx,[rip+0x6999]        # 0x140008700
   140001d67:	mov    rcx,rsi
   140001d6a:	call   0x140001ba0
   140001d6f:	mov    ebx,eax
   140001d71:	test   eax,eax
   140001d73:	js     0x140001df1
   140001d75:	cmp    QWORD PTR [rsi],0x0
   140001d79:	lea    rcx,[rip+0x6974]        # 0x1400086f4
   140001d80:	cmovne rcx,QWORD PTR [rsi]
   140001d84:	call   QWORD PTR [rip+0x641e]        # 0x1400081a8
   140001d8a:	mov    QWORD PTR [rdi],rax
   140001d8d:	test   rax,rax
   140001d90:	je     0x140001ddd
   140001d92:	lea    rdx,[rip+0x6987]        # 0x140008720
   140001d99:	mov    rcx,rax
   140001d9c:	call   QWORD PTR [rip+0x640e]        # 0x1400081b0
   140001da2:	mov    QWORD PTR [rdi+0x10],rax
   140001da6:	test   rax,rax
   140001da9:	je     0x140001ddd
   140001dab:	mov    rcx,QWORD PTR [rdi]
   140001dae:	lea    rdx,[rip+0x697b]        # 0x140008730
   140001db5:	call   QWORD PTR [rip+0x63f5]        # 0x1400081b0
   140001dbb:	mov    QWORD PTR [rdi+0x18],rax
   140001dbf:	test   rax,rax
   140001dc2:	je     0x140001ddd
   140001dc4:	mov    rcx,QWORD PTR [rdi]
   140001dc7:	lea    rdx,[rip+0x6972]        # 0x140008740
   140001dce:	call   QWORD PTR [rip+0x63dc]        # 0x1400081b0
   140001dd4:	mov    QWORD PTR [rdi+0x20],rax
   140001dd8:	test   rax,rax
   140001ddb:	jne    0x140001df1
   140001ddd:	call   QWORD PTR [rip+0x64fd]        # 0x1400082e0
   140001de3:	movzx  ebx,ax
   140001de6:	or     ebx,0x80070000
   140001dec:	test   eax,eax
   140001dee:	cmovle ebx,eax
   140001df1:	mov    eax,ebx
   140001df3:	mov    rcx,QWORD PTR [rsp+0x240]
   140001dfb:	xor    rcx,rsp
   140001dfe:	call   0x140007390
   140001e03:	lea    r11,[rsp+0x250]
   140001e0b:	mov    rbx,QWORD PTR [r11+0x18]
   140001e0f:	mov    rsi,QWORD PTR [r11+0x20]
   140001e13:	mov    rsp,r11
   140001e16:	pop    rdi
   140001e17:	ret    
   140001e18:	int3   
   140001e19:	int3   
   140001e1a:	int3   
   140001e1b:	int3   
   140001e1c:	int3   
   140001e1d:	int3   
   140001e1e:	int3   
   140001e1f:	int3   
   140001e20:	mov    QWORD PTR [rsp+0x8],rbx
   140001e25:	push   rdi
   140001e26:	sub    rsp,0x20
   140001e2a:	mov    rdi,QWORD PTR [rcx+0x18]
   140001e2e:	mov    rbx,rcx
   140001e31:	test   rdi,rdi
   140001e34:	je     0x140001e4f
   140001e36:	call   QWORD PTR [rip+0x64e4]        # 0x140008320
   140001e3c:	mov    r8,rdi
   140001e3f:	xor    edx,edx
   140001e41:	mov    rcx,rax
   140001e44:	call   QWORD PTR [rip+0x64ce]        # 0x140008318
   140001e4a:	and    QWORD PTR [rbx+0x18],0x0
   140001e4f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e54:	add    rsp,0x20
   140001e58:	pop    rdi
   140001e59:	ret    
   140001e5a:	int3   
   140001e5b:	int3   
   140001e5c:	int3   
   140001e5d:	int3   
   140001e5e:	int3   
   140001e5f:	int3   
   140001e60:	mov    QWORD PTR [rsp+0x18],r8
   140001e65:	mov    QWORD PTR [rsp+0x10],rdx
   140001e6a:	mov    DWORD PTR [rsp+0x8],ecx
   140001e6e:	push   rbp
   140001e6f:	push   rbx
   140001e70:	push   rsi
   140001e71:	push   rdi
   140001e72:	push   r12
   140001e74:	push   r13
   140001e76:	push   r14
   140001e78:	push   r15
   140001e7a:	mov    rbp,rsp
   140001e7d:	sub    rsp,0x48
   140001e81:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   140001e89:	mov    esi,0x1
   140001e8e:	xor    r12d,r12d
   140001e91:	mov    ebx,r12d
   140001e94:	mov    QWORD PTR [rbp-0x28],rbx
   140001e98:	mov    DWORD PTR [rbp+0x60],esi
   140001e9b:	cmp    ecx,esi
   140001e9d:	jbe    0x14000217e
   140001ea3:	lea    rax,[rdx+0x8]
   140001ea7:	mov    QWORD PTR [rbp-0x20],rax
   140001eab:	lea    r14,[rip+0x6842]        # 0x1400086f4
   140001eb2:	mov    rdi,QWORD PTR [rax]
   140001eb5:	movzx  eax,WORD PTR [rdi]
   140001eb8:	sub    ax,0x2d
   140001ebc:	mov    ecx,0xfffd
   140001ec1:	test   cx,ax
   140001ec4:	jne    0x14000216c
   140001eca:	add    rdi,0x2
   140001ece:	or     rax,0xffffffffffffffff
   140001ed2:	inc    rax
   140001ed5:	cmp    WORD PTR [rdi+rax*2],r12w
   140001eda:	jne    0x140001ed2
   140001edc:	cmp    rax,rsi
   140001edf:	ja     0x140001f0c
   140001ee1:	movzx  eax,WORD PTR [rdi]
   140001ee4:	sub    ax,0x3f
   140001ee8:	cmp    ax,0x29
   140001eec:	ja     0x140001f02
   140001eee:	movabs rcx,0x20000000201
   140001ef8:	bt     rcx,rax
   140001efc:	jb     0x140002062
   140001f02:	cmp    WORD PTR [rdi],r12w
   140001f06:	je     0x140002062
   140001f0c:	mov    rdx,QWORD PTR [rip+0x91cd]        # 0x14000b0e0
   140001f13:	mov    rcx,rdi
   140001f16:	call   QWORD PTR [rip+0x65cc]        # 0x1400084e8
   140001f1c:	test   eax,eax
   140001f1e:	je     0x140002062
   140001f24:	xor    ecx,ecx
   140001f26:	mov    r15d,ecx
   140001f29:	lea    r13,[rip+0x90e8]        # 0x14000b018
   140001f30:	mov    rdx,QWORD PTR [r13-0x18]
   140001f34:	or     rax,0xffffffffffffffff
   140001f38:	inc    rax
   140001f3b:	cmp    WORD PTR [rdx+rax*2],cx
   140001f3f:	jne    0x140001f38
   140001f41:	mov    r8d,eax
   140001f44:	mov    QWORD PTR [rbp-0x18],r8
   140001f48:	mov    rcx,rdi
   140001f4b:	call   QWORD PTR [rip+0x658f]        # 0x1400084e0
   140001f51:	xor    ecx,ecx
   140001f53:	test   eax,eax
   140001f55:	jne    0x140001ffe
   140001f5b:	mov    ecx,0xffdf
   140001f60:	mov    rax,QWORD PTR [rbp-0x18]
   140001f64:	test   WORD PTR [rdi+rax*2],cx
   140001f68:	je     0x140002010
   140001f6e:	cmp    WORD PTR [rdi+rax*2],0x3a
   140001f73:	jne    0x140001ffc
   140001f79:	inc    rax
   140001f7c:	lea    rdx,[rdi+rax*2]
   140001f80:	mov    ecx,r15d
   140001f83:	shl    rcx,0x5
   140001f87:	lea    rax,[rip+0x908a]        # 0x14000b018
   140001f8e:	add    rcx,rax
   140001f91:	call   0x140001ae4
   140001f96:	xor    r12d,r12d
   140001f99:	test   eax,eax
   140001f9b:	js     0x1400020b4
   140001fa1:	mov    rax,r14
   140001fa4:	cmp    QWORD PTR [r13+0x0],r12
   140001fa8:	cmovne rax,QWORD PTR [r13+0x0]
   140001fad:	mov    edx,r12d
   140001fb0:	or     rcx,0xffffffffffffffff
   140001fb4:	inc    rcx
   140001fb7:	cmp    WORD PTR [rax+rcx*2],r12w
   140001fbc:	jne    0x140001fb4
   140001fbe:	test   rcx,rcx
   140001fc1:	je     0x14000206d
   140001fc7:	movzx  ecx,WORD PTR [rax]
   140001fca:	test   cx,cx
   140001fcd:	je     0x14000206d
   140001fd3:	mov    r8d,0x20
   140001fd9:	cmp    cx,r8w
   140001fdd:	je     0x140001fe1
   140001fdf:	add    edx,esi
   140001fe1:	cmp    edx,esi
   140001fe3:	ja     0x140001ff1
   140001fe5:	add    rax,0x2
   140001fe9:	movzx  ecx,WORD PTR [rax]
   140001fec:	test   cx,cx
   140001fef:	jne    0x140001fd9
   140001ff1:	test   edx,edx
   140001ff3:	je     0x14000206d
   140001ff5:	mov    DWORD PTR [r13-0x8],esi
   140001ff9:	mov    r12d,esi
   140001ffc:	xor    ecx,ecx
   140001ffe:	add    r15d,esi
   140002001:	add    r13,0x20
   140002005:	cmp    r15d,0x16
   140002009:	jae    0x140002034
   14000200b:	jmp    0x140001f30
   140002010:	mov    eax,r15d
   140002013:	shl    rax,0x5
   140002017:	xor    r12d,r12d
   14000201a:	lea    r13,[rip+0x8fdf]        # 0x14000b000
   140002021:	cmp    DWORD PTR [rax+r13*1+0x14],r12d
   140002026:	je     0x1400020be
   14000202c:	mov    DWORD PTR [rax+r13*1+0x10],esi
   140002031:	mov    r12d,esi
   140002034:	test   r12d,r12d
   140002037:	je     0x140002127
   14000203d:	mov    ecx,DWORD PTR [rbp+0x60]
   140002040:	add    ecx,esi
   140002042:	mov    DWORD PTR [rbp+0x60],ecx
   140002045:	mov    rax,QWORD PTR [rbp-0x20]
   140002049:	add    rax,0x8
   14000204d:	mov    QWORD PTR [rbp-0x20],rax
   140002051:	cmp    ecx,DWORD PTR [rbp+0x48]
   140002054:	jae    0x14000217e
   14000205a:	xor    r12d,r12d
   14000205d:	jmp    0x140001eb2
   140002062:	mov    DWORD PTR [rip+0x9088],esi        # 0x14000b0f0
   140002068:	jmp    0x14000217e
   14000206d:	mov    esi,r12d
   140002070:	mov    edx,0x271b
   140002075:	lea    rcx,[rbp-0x28]
   140002079:	call   0x1400041a0
   14000207e:	mov    rbx,QWORD PTR [rbp-0x28]
   140002082:	test   eax,eax
   140002084:	js     0x14000217e
   14000208a:	test   rbx,rbx
   14000208d:	cmovne r14,rbx
   140002091:	mov    r8d,r15d
   140002094:	shl    r8,0x5
   140002098:	lea    rax,[rip+0x8f61]        # 0x14000b000
   14000209f:	mov    r8,QWORD PTR [r8+rax*1]
   1400020a3:	mov    rdx,r14
   1400020a6:	mov    rcx,QWORD PTR [rbp+0x58]
   1400020aa:	call   0x1400053ec
   1400020af:	jmp    0x14000217e
   1400020b4:	mov    edx,0x2719
   1400020b9:	jmp    0x140002171
   1400020be:	mov    esi,r12d
   1400020c1:	mov    edx,0x271b
   1400020c6:	lea    rcx,[rbp-0x28]
   1400020ca:	call   0x1400041a0
   1400020cf:	mov    QWORD PTR [rbp+0x60],r12
   1400020d3:	mov    rdx,r14
   1400020d6:	mov    rbx,QWORD PTR [rbp-0x28]
   1400020da:	test   rbx,rbx
   1400020dd:	cmovne rdx,rbx
   1400020e1:	mov    r8d,r15d
   1400020e4:	shl    r8,0x5
   1400020e8:	mov    r8,QWORD PTR [r8+r13*1]
   1400020ec:	lea    rcx,[rbp+0x60]
   1400020f0:	call   0x1400053ec
   1400020f5:	mov    rdi,QWORD PTR [rbp+0x60]
   1400020f9:	test   rdi,rdi
   1400020fc:	cmovne r14,rdi
   140002100:	mov    rdx,r14
   140002103:	mov    rcx,QWORD PTR [rbp+0x58]
   140002107:	call   0x140001ae4
   14000210c:	test   rdi,rdi
   14000210f:	je     0x14000217e
   140002111:	call   QWORD PTR [rip+0x6209]        # 0x140008320
   140002117:	mov    rcx,rax
   14000211a:	mov    r8,rdi
   14000211d:	xor    edx,edx
   14000211f:	call   QWORD PTR [rip+0x61f3]        # 0x140008318
   140002125:	jmp    0x14000217e
   140002127:	xor    r12d,r12d
   14000212a:	mov    esi,r12d
   14000212d:	mov    edx,0x271c
   140002132:	lea    rcx,[rbp-0x28]
   140002136:	call   0x1400041a0
   14000213b:	mov    QWORD PTR [rbp-0x20],r12
   14000213f:	mov    rdx,r14
   140002142:	mov    rbx,QWORD PTR [rbp-0x28]
   140002146:	test   rbx,rbx
   140002149:	cmovne rdx,rbx
   14000214d:	mov    r8d,DWORD PTR [rbp+0x60]
   140002151:	mov    rax,QWORD PTR [rbp+0x50]
   140002155:	mov    r8,QWORD PTR [rax+r8*8]
   140002159:	lea    rcx,[rbp-0x20]
   14000215d:	call   0x1400053ec
   140002162:	mov    rdi,QWORD PTR [rbp-0x20]
   140002166:	test   eax,eax
   140002168:	jns    0x1400020f9
   14000216a:	jmp    0x14000210c
   14000216c:	mov    edx,0x271a
   140002171:	mov    esi,r12d
   140002174:	mov    rcx,QWORD PTR [rbp+0x58]
   140002178:	call   0x1400041a0
   14000217d:	nop
   14000217e:	test   rbx,rbx
   140002181:	je     0x140002197
   140002183:	call   QWORD PTR [rip+0x6197]        # 0x140008320
   140002189:	mov    rcx,rax
   14000218c:	mov    r8,rbx
   14000218f:	xor    edx,edx
   140002191:	call   QWORD PTR [rip+0x6181]        # 0x140008318
   140002197:	mov    eax,esi
   140002199:	add    rsp,0x48
   14000219d:	pop    r15
   14000219f:	pop    r14
   1400021a1:	pop    r13
   1400021a3:	pop    r12
   1400021a5:	pop    rdi
   1400021a6:	pop    rsi
   1400021a7:	pop    rbx
   1400021a8:	pop    rbp
   1400021a9:	ret    
   1400021aa:	int3   
   1400021ab:	int3   
   1400021ac:	int3   
   1400021ad:	int3   
   1400021ae:	int3   
   1400021af:	int3   
   1400021b0:	mov    eax,0x1
   1400021b5:	lock xadd DWORD PTR [rcx+0x8],eax
   1400021ba:	inc    eax
   1400021bc:	ret    
   1400021bd:	int3   
   1400021be:	int3   
   1400021bf:	int3   
   1400021c0:	int3   
   1400021c1:	int3   
   1400021c2:	int3   
   1400021c3:	int3   
   1400021c4:	int3   
   1400021c5:	int3   
   1400021c6:	int3   
   1400021c7:	int3   
   1400021c8:	int3   
   1400021c9:	int3   
   1400021ca:	int3   
   1400021cb:	int3   
   1400021cc:	int3   
   1400021cd:	int3   
   1400021ce:	int3   
   1400021cf:	int3   
   1400021d0:	rex push rbx
   1400021d2:	sub    rsp,0x20
   1400021d6:	or     ebx,0xffffffff
   1400021d9:	lock xadd DWORD PTR [rcx+0x8],ebx
   1400021de:	sub    ebx,0x1
   1400021e1:	jne    0x1400021f7
   1400021e3:	test   rcx,rcx
   1400021e6:	je     0x1400021f7
   1400021e8:	lea    rax,[rip+0x5e31]        # 0x140008020
   1400021ef:	mov    QWORD PTR [rcx],rax
   1400021f2:	call   0x140007048
   1400021f7:	mov    eax,ebx
   1400021f9:	add    rsp,0x20
   1400021fd:	pop    rbx
   1400021fe:	ret    
   1400021ff:	int3   
   140002200:	int3   
   140002201:	int3   
   140002202:	int3   
   140002203:	int3   
   140002204:	int3   
   140002205:	int3   
   140002206:	int3   
   140002207:	int3   
   140002208:	int3   
   140002209:	int3   
   14000220a:	int3   
   14000220b:	int3   
   14000220c:	int3   
   14000220d:	int3   
   14000220e:	int3   
   14000220f:	int3   
   140002210:	mov    QWORD PTR [rsp+0x8],rbx
   140002215:	mov    QWORD PTR [rsp+0x10],rsi
   14000221a:	push   rdi
   14000221b:	sub    rsp,0x20
   14000221f:	mov    rax,QWORD PTR [rdx]
   140002222:	xor    edi,edi
   140002224:	cmp    rax,QWORD PTR [rip+0x6d65]        # 0x140008f90
   14000222b:	mov    rsi,r8
   14000222e:	mov    rbx,rcx
   140002231:	jne    0x140002252
   140002233:	mov    rax,QWORD PTR [rdx+0x8]
   140002237:	cmp    rax,QWORD PTR [rip+0x6d5a]        # 0x140008f98
   14000223e:	jne    0x140002252
   140002240:	mov    rax,QWORD PTR [rcx]
   140002243:	mov    rax,QWORD PTR [rax+0x8]
   140002247:	call   QWORD PTR [rip+0x6353]        # 0x1400085a0
   14000224d:	mov    QWORD PTR [rsi],rbx
   140002250:	jmp    0x140002285
   140002252:	mov    rax,QWORD PTR [rdx]
   140002255:	cmp    rax,QWORD PTR [rip+0x6fc4]        # 0x140009220
   14000225c:	jne    0x14000227d
   14000225e:	mov    rax,QWORD PTR [rdx+0x8]
   140002262:	cmp    rax,QWORD PTR [rip+0x6fbf]        # 0x140009228
   140002269:	jne    0x14000227d
   14000226b:	mov    QWORD PTR [r8],rcx
   14000226e:	mov    rax,QWORD PTR [rcx]
   140002271:	mov    rax,QWORD PTR [rax+0x8]
   140002275:	call   QWORD PTR [rip+0x6325]        # 0x1400085a0
   14000227b:	jmp    0x140002285
   14000227d:	mov    QWORD PTR [r8],rdi
   140002280:	mov    edi,0x80004002
   140002285:	mov    rbx,QWORD PTR [rsp+0x30]
   14000228a:	mov    eax,edi
   14000228c:	mov    rsi,QWORD PTR [rsp+0x38]
   140002291:	add    rsp,0x20
   140002295:	pop    rdi
   140002296:	ret    
   140002297:	int3   
   140002298:	int3   
   140002299:	int3   
   14000229a:	int3   
   14000229b:	int3   
   14000229c:	int3   
   14000229d:	int3   
   14000229e:	int3   
   14000229f:	int3   
   1400022a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400022a5:	push   rdi
   1400022a6:	sub    rsp,0x20
   1400022aa:	xor    ebx,ebx
   1400022ac:	mov    rdi,r9
   1400022af:	or     rax,0xffffffffffffffff
   1400022b3:	inc    rax
   1400022b6:	cmp    WORD PTR [rdx+rax*2],bx
   1400022ba:	jne    0x1400022b3
   1400022bc:	cmp    eax,0x17
   1400022bf:	je     0x1400022c6
   1400022c1:	mov    rcx,r8
   1400022c4:	jmp    0x1400022ca
   1400022c6:	add    rcx,0xc
   1400022ca:	call   QWORD PTR [rip+0x6088]        # 0x140008358
   1400022d0:	test   rax,rax
   1400022d3:	jne    0x1400022dc
   1400022d5:	mov    ebx,0x80070008
   1400022da:	jmp    0x1400022df
   1400022dc:	mov    QWORD PTR [rdi],rax
   1400022df:	mov    eax,ebx
   1400022e1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400022e6:	add    rsp,0x20
   1400022ea:	pop    rdi
   1400022eb:	ret    
   1400022ec:	int3   
   1400022ed:	int3   
   1400022ee:	int3   
   1400022ef:	int3   
   1400022f0:	int3   
   1400022f1:	int3   
   1400022f2:	int3   
   1400022f3:	int3   
   1400022f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400022f9:	mov    QWORD PTR [rsp+0x10],rdi
   1400022fe:	xor    edi,edi
   140002300:	lea    rax,[rdx-0x1]
   140002304:	cmp    rax,0x7ffffffe
   14000230a:	mov    r10,rdx
   14000230d:	mov    r9d,edi
   140002310:	mov    edx,0x80070057
   140002315:	cmova  r9d,edx
   140002319:	mov    rbx,r8
   14000231c:	mov    r11,rcx
   14000231f:	test   r9d,r9d
   140002322:	js     0x14000234e
   140002324:	mov    rax,r10
   140002327:	mov    r9d,edi
   14000232a:	test   r10,r10
   14000232d:	je     0x14000234b
   14000232f:	cmp    WORD PTR [rcx],di
   140002332:	je     0x14000233e
   140002334:	add    rcx,0x2
   140002338:	sub    rax,0x1
   14000233c:	jne    0x14000232f
   14000233e:	test   rax,rax
   140002341:	je     0x14000234b
   140002343:	mov    r8,r10
   140002346:	sub    r8,rax
   140002349:	jmp    0x140002351
   14000234b:	mov    r9d,edx
   14000234e:	mov    r8,rdi
   140002351:	test   r9d,r9d
   140002354:	js     0x1400023a8
   140002356:	mov    rdx,r10
   140002359:	lea    rcx,[r11+r8*2]
   14000235d:	mov    r9d,edi
   140002360:	sub    rdx,r8
   140002363:	je     0x14000239b
   140002365:	mov    rax,rdx
   140002368:	sub    rax,r10
   14000236b:	lea    r10,[r8+0x7ffffffe]
   140002372:	add    r10,rax
   140002375:	sub    rbx,rcx
   140002378:	test   r10,r10
   14000237b:	je     0x140002396
   14000237d:	movzx  eax,WORD PTR [rbx+rcx*1]
   140002381:	test   ax,ax
   140002384:	je     0x140002396
   140002386:	mov    WORD PTR [rcx],ax
   140002389:	dec    r10
   14000238c:	add    rcx,0x2
   140002390:	sub    rdx,0x1
   140002394:	jne    0x140002378
   140002396:	test   rdx,rdx
   140002399:	jne    0x1400023a5
   14000239b:	sub    rcx,0x2
   14000239f:	mov    r9d,0x8007007a
   1400023a5:	mov    WORD PTR [rcx],di
   1400023a8:	mov    rbx,QWORD PTR [rsp+0x8]
   1400023ad:	mov    eax,r9d
   1400023b0:	mov    rdi,QWORD PTR [rsp+0x10]
   1400023b5:	ret    
   1400023b6:	int3   
   1400023b7:	int3   
   1400023b8:	int3   
   1400023b9:	int3   
   1400023ba:	int3   
   1400023bb:	int3   
   1400023bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400023c1:	mov    QWORD PTR [rsp+0x10],rsi
   1400023c6:	push   rdi
   1400023c7:	sub    rsp,0x20
   1400023cb:	and    QWORD PTR [rsp+0x48],0x0
   1400023d1:	mov    rbx,rcx
   1400023d4:	mov    rcx,rdx
   1400023d7:	mov    rsi,r8
   1400023da:	call   QWORD PTR [rip+0x5f78]        # 0x140008358
   1400023e0:	mov    rdi,rax
   1400023e3:	test   rax,rax
   1400023e6:	jne    0x1400023ef
   1400023e8:	mov    ebx,0x80070008
   1400023ed:	jmp    0x14000242d
   1400023ef:	mov    rax,QWORD PTR [rbx]
   1400023f2:	lea    r8,[rsp+0x48]
   1400023f7:	mov    rdx,rdi
   1400023fa:	mov    rcx,rbx
   1400023fd:	mov    rax,QWORD PTR [rax+0x58]
   140002401:	call   QWORD PTR [rip+0x6199]        # 0x1400085a0
   140002407:	mov    ebx,eax
   140002409:	test   eax,eax
   14000240b:	js     0x140002424
   14000240d:	mov    rcx,QWORD PTR [rsp+0x48]
   140002412:	mov    rdx,rsi
   140002415:	mov    rax,QWORD PTR [rcx]
   140002418:	mov    rax,QWORD PTR [rax+0x38]
   14000241c:	call   QWORD PTR [rip+0x617e]        # 0x1400085a0
   140002422:	mov    ebx,eax
   140002424:	mov    rcx,rdi
   140002427:	call   QWORD PTR [rip+0x5f23]        # 0x140008350
   14000242d:	mov    rcx,QWORD PTR [rsp+0x48]
   140002432:	test   rcx,rcx
   140002435:	je     0x140002444
   140002437:	mov    rax,QWORD PTR [rcx]
   14000243a:	mov    rax,QWORD PTR [rax+0x10]
   14000243e:	call   QWORD PTR [rip+0x615c]        # 0x1400085a0
   140002444:	mov    rsi,QWORD PTR [rsp+0x38]
   140002449:	mov    eax,ebx
   14000244b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002450:	add    rsp,0x20
   140002454:	pop    rdi
   140002455:	ret    
   140002456:	int3   
   140002457:	int3   
   140002458:	int3   
   140002459:	int3   
   14000245a:	int3   
   14000245b:	int3   
   14000245c:	mov    QWORD PTR [rsp+0x8],rbx
   140002461:	mov    QWORD PTR [rsp+0x10],rsi
   140002466:	push   rbp
   140002467:	push   rdi
   140002468:	push   r14
   14000246a:	mov    rbp,rsp
   14000246d:	sub    rsp,0x60
   140002471:	and    QWORD PTR [rbp+0x38],0x0
   140002476:	mov    r14,rcx
   140002479:	lea    rcx,[rbp-0x40]
   14000247d:	mov    rsi,r8
   140002480:	mov    rbx,rdx
   140002483:	call   QWORD PTR [rip+0x5ebf]        # 0x140008348
   140002489:	mov    rcx,rbx
   14000248c:	call   QWORD PTR [rip+0x5ec6]        # 0x140008358
   140002492:	mov    rdi,rax
   140002495:	test   rax,rax
   140002498:	jne    0x1400024a1
   14000249a:	mov    ebx,0x80070008
   14000249f:	jmp    0x140002502
   1400024a1:	mov    rax,QWORD PTR [r14]
   1400024a4:	lea    r8,[rbp+0x38]
   1400024a8:	mov    rdx,rdi
   1400024ab:	mov    rcx,r14
   1400024ae:	mov    rax,QWORD PTR [rax+0x58]
   1400024b2:	call   QWORD PTR [rip+0x60e8]        # 0x1400085a0
   1400024b8:	mov    ebx,eax
   1400024ba:	test   eax,eax
   1400024bc:	js     0x140002502
   1400024be:	mov    rcx,rsi
   1400024c1:	call   QWORD PTR [rip+0x5e91]        # 0x140008358
   1400024c7:	mov    QWORD PTR [rbp-0x38],rax
   1400024cb:	test   rax,rax
   1400024ce:	je     0x14000249a
   1400024d0:	mov    rcx,QWORD PTR [rbp+0x38]
   1400024d4:	lea    rdx,[rbp-0x20]
   1400024d8:	movsd  xmm1,QWORD PTR [rbp-0x30]
   1400024dd:	mov    eax,0x8
   1400024e2:	mov    WORD PTR [rbp-0x40],ax
   1400024e6:	movups xmm0,XMMWORD PTR [rbp-0x40]
   1400024ea:	mov    rax,QWORD PTR [rcx]
   1400024ed:	movsd  QWORD PTR [rbp-0x10],xmm1
   1400024f2:	movaps XMMWORD PTR [rbp-0x20],xmm0
   1400024f6:	mov    rax,QWORD PTR [rax+0x28]
   1400024fa:	call   QWORD PTR [rip+0x60a0]        # 0x1400085a0
   140002500:	mov    ebx,eax
   140002502:	lea    rcx,[rbp-0x40]
   140002506:	call   QWORD PTR [rip+0x5e34]        # 0x140008340
   14000250c:	test   rdi,rdi
   14000250f:	je     0x14000251a
   140002511:	mov    rcx,rdi
   140002514:	call   QWORD PTR [rip+0x5e36]        # 0x140008350
   14000251a:	mov    rcx,QWORD PTR [rbp+0x38]
   14000251e:	test   rcx,rcx
   140002521:	je     0x140002530
   140002523:	mov    rax,QWORD PTR [rcx]
   140002526:	mov    rax,QWORD PTR [rax+0x10]
   14000252a:	call   QWORD PTR [rip+0x6070]        # 0x1400085a0
   140002530:	lea    r11,[rsp+0x60]
   140002535:	mov    eax,ebx
   140002537:	mov    rbx,QWORD PTR [r11+0x20]
   14000253b:	mov    rsi,QWORD PTR [r11+0x28]
   14000253f:	mov    rsp,r11
   140002542:	pop    r14
   140002544:	pop    rdi
   140002545:	pop    rbp
   140002546:	ret    
   140002547:	int3   
   140002548:	int3   
   140002549:	int3   
   14000254a:	int3   
   14000254b:	int3   
   14000254c:	int3   
   14000254d:	int3   
   14000254e:	int3   
   14000254f:	int3   
   140002550:	mov    rax,rsp
   140002553:	mov    QWORD PTR [rax+0x8],rbx
   140002557:	mov    QWORD PTR [rax+0x10],rsi
   14000255b:	mov    QWORD PTR [rax+0x18],rdi
   14000255f:	mov    QWORD PTR [rax+0x20],r14
   140002563:	push   rbp
   140002564:	mov    rbp,rsp
   140002567:	sub    rsp,0x60
   14000256b:	mov    rsi,rcx
   14000256e:	mov    rdi,rdx
   140002571:	lea    rcx,[rbp-0x40]
   140002575:	call   QWORD PTR [rip+0x5dcd]        # 0x140008348
   14000257b:	lea    rcx,[rip+0x63b6]        # 0x140008938
   140002582:	call   QWORD PTR [rip+0x5dd0]        # 0x140008358
   140002588:	xor    r14d,r14d
   14000258b:	mov    rbx,rax
   14000258e:	test   rax,rax
   140002591:	jne    0x14000259a
   140002593:	mov    edi,0x80070008
   140002598:	jmp    0x1400025ee
   14000259a:	test   rdi,rdi
   14000259d:	je     0x1400025be
   14000259f:	mov    eax,0xd
   1400025a4:	mov    rcx,rdi
   1400025a7:	mov    WORD PTR [rbp-0x40],ax
   1400025ab:	mov    rax,QWORD PTR [rdi]
   1400025ae:	mov    rax,QWORD PTR [rax+0x8]
   1400025b2:	call   QWORD PTR [rip+0x5fe8]        # 0x1400085a0
   1400025b8:	mov    QWORD PTR [rbp-0x38],rdi
   1400025bc:	jmp    0x1400025c3
   1400025be:	mov    WORD PTR [rbp-0x40],r14w
   1400025c3:	mov    rax,QWORD PTR [rsi]
   1400025c6:	lea    r8,[rbp-0x20]
   1400025ca:	movups xmm0,XMMWORD PTR [rbp-0x40]
   1400025ce:	mov    rdx,rbx
   1400025d1:	mov    rcx,rsi
   1400025d4:	movsd  xmm1,QWORD PTR [rbp-0x30]
   1400025d9:	mov    rax,QWORD PTR [rax+0x28]
   1400025dd:	movaps XMMWORD PTR [rbp-0x20],xmm0
   1400025e1:	movsd  QWORD PTR [rbp-0x10],xmm1
   1400025e6:	call   QWORD PTR [rip+0x5fb4]        # 0x1400085a0
   1400025ec:	mov    edi,eax
   1400025ee:	lea    rcx,[rbp-0x40]
   1400025f2:	call   QWORD PTR [rip+0x5d48]        # 0x140008340
   1400025f8:	test   rbx,rbx
   1400025fb:	je     0x140002606
   1400025fd:	mov    rcx,rbx
   140002600:	call   QWORD PTR [rip+0x5d4a]        # 0x140008350
   140002606:	lea    r11,[rsp+0x60]
   14000260b:	mov    eax,edi
   14000260d:	mov    rbx,QWORD PTR [r11+0x10]
   140002611:	mov    rsi,QWORD PTR [r11+0x18]
   140002615:	mov    rdi,QWORD PTR [r11+0x20]
   140002619:	mov    r14,QWORD PTR [r11+0x28]
   14000261d:	mov    rsp,r11
   140002620:	pop    rbp
   140002621:	ret    
   140002622:	int3   
   140002623:	int3   
   140002624:	int3   
   140002625:	int3   
   140002626:	int3   
   140002627:	int3   
   140002628:	mov    rax,rsp
   14000262b:	push   rbp
   14000262c:	push   r12
   14000262e:	push   r13
   140002630:	push   r14
   140002632:	push   r15
   140002634:	lea    rbp,[rax-0x198]
   14000263b:	sub    rsp,0x270
   140002642:	mov    QWORD PTR [rbp+0x48],0xfffffffffffffffe
   14000264a:	mov    QWORD PTR [rax+0x10],rbx
   14000264e:	mov    QWORD PTR [rax+0x18],rsi
   140002652:	mov    QWORD PTR [rax+0x20],rdi
   140002656:	mov    rax,QWORD PTR [rip+0x8d1b]        # 0x14000b378
   14000265d:	xor    rax,rsp
   140002660:	mov    QWORD PTR [rbp+0x160],rax
   140002667:	mov    r13,rcx
   14000266a:	xor    edi,edi
   14000266c:	mov    QWORD PTR [rsp+0x68],rdi
   140002671:	mov    QWORD PTR [rbp-0x30],rdi
   140002675:	mov    QWORD PTR [rbp-0x48],rdi
   140002679:	mov    QWORD PTR [rbp+0x20],rdi
   14000267d:	mov    QWORD PTR [rbp+0x30],rdi
   140002681:	mov    QWORD PTR [rbp-0x38],rdi
   140002685:	mov    QWORD PTR [rbp-0x78],rdi
   140002689:	mov    QWORD PTR [rbp+0x0],rdi
   14000268d:	mov    QWORD PTR [rbp-0x28],rdi
   140002691:	mov    QWORD PTR [rbp+0x18],rdi
   140002695:	mov    QWORD PTR [rbp-0x10],rdi
   140002699:	mov    QWORD PTR [rbp-0x8],rdi
   14000269d:	mov    QWORD PTR [rbp+0x28],rdi
   1400026a1:	mov    QWORD PTR [rbp+0x8],rdi
   1400026a5:	mov    QWORD PTR [rbp-0x50],rdi
   1400026a9:	mov    ebx,edi
   1400026ab:	mov    QWORD PTR [rsp+0x60],rbx
   1400026b0:	mov    esi,edi
   1400026b2:	mov    QWORD PTR [rbp-0x20],rdi
   1400026b6:	mov    r12d,edi
   1400026b9:	mov    QWORD PTR [rsp+0x58],rdi
   1400026be:	mov    QWORD PTR [rbp-0x18],rdi
   1400026c2:	mov    r15d,edi
   1400026c5:	mov    r14d,edi
   1400026c8:	mov    QWORD PTR [rbp+0x40],rdi
   1400026cc:	lea    rcx,[rbp-0x70]
   1400026d0:	call   QWORD PTR [rip+0x5c72]        # 0x140008348
   1400026d6:	lea    rcx,[rip+0x6273]        # 0x140008950
   1400026dd:	call   QWORD PTR [rip+0x5c75]        # 0x140008358
   1400026e3:	mov    QWORD PTR [rbp+0x38],rax
   1400026e7:	test   rax,rax
   1400026ea:	jne    0x1400026f6
   1400026ec:	mov    edi,0x80070008
   1400026f1:	jmp    0x140003395
   1400026f6:	lea    rcx,[rip+0x6293]        # 0x140008990
   1400026fd:	call   QWORD PTR [rip+0x5c55]        # 0x140008358
   140002703:	mov    QWORD PTR [rbp+0x10],rax
   140002707:	test   rax,rax
   14000270a:	jne    0x140002716
   14000270c:	mov    edi,0x80070008
   140002711:	jmp    0x140003379
   140002716:	mov    ecx,0x104
   14000271b:	mov    eax,0x2
   140002720:	mul    rcx
   140002723:	mov    rcx,0xffffffffffffffff
   14000272a:	cmovo  rax,rcx
   14000272e:	mov    rcx,rax
   140002731:	call   0x14000703c
   140002736:	mov    r14,rax
   140002739:	mov    QWORD PTR [rsp+0x50],rax
   14000273e:	test   rax,rax
   140002741:	je     0x14000270c
   140002743:	mov    rdx,rax
   140002746:	mov    ecx,0x104
   14000274b:	call   QWORD PTR [rip+0x5a67]        # 0x1400081b8
   140002751:	dec    eax
   140002753:	cmp    eax,0x103
   140002758:	ja     0x140003333
   14000275e:	lea    rcx,[rbp+0xd0]
   140002765:	call   QWORD PTR [rip+0x5a55]        # 0x1400081c0
   14000276b:	movzx  eax,WORD PTR [rbp+0xde]
   140002772:	movzx  ecx,WORD PTR [rbp+0xdc]
   140002779:	movzx  edx,WORD PTR [rbp+0xda]
   140002780:	movzx  r8d,WORD PTR [rbp+0xd8]
   140002788:	movzx  r10d,WORD PTR [rbp+0xd6]
   140002790:	movzx  r11d,WORD PTR [rbp+0xd2]
   140002798:	movzx  r9d,WORD PTR [rbp+0xd0]
   1400027a0:	mov    DWORD PTR [rsp+0x48],eax
   1400027a4:	mov    DWORD PTR [rsp+0x40],ecx
   1400027a8:	mov    DWORD PTR [rsp+0x38],edx
   1400027ac:	mov    DWORD PTR [rsp+0x30],r8d
   1400027b1:	mov    DWORD PTR [rsp+0x28],r10d
   1400027b6:	mov    DWORD PTR [rsp+0x20],r11d
   1400027bb:	lea    r8,[rip+0x61fe]        # 0x1400089c0
   1400027c2:	mov    edx,0x32
   1400027c7:	lea    rcx,[rbp+0xf0]
   1400027ce:	call   QWORD PTR [rip+0x5cfc]        # 0x1400084d0
   1400027d4:	lea    r8,[rip+0x6235]        # 0x140008a10
   1400027db:	mov    edx,0x104
   1400027e0:	mov    rcx,r14
   1400027e3:	call   QWORD PTR [rip+0x5cdf]        # 0x1400084c8
   1400027e9:	xor    edx,edx
   1400027eb:	mov    rcx,r14
   1400027ee:	call   QWORD PTR [rip+0x59d4]        # 0x1400081c8
   1400027f4:	test   eax,eax
   1400027f6:	jne    0x140002818
   1400027f8:	call   QWORD PTR [rip+0x5ae2]        # 0x1400082e0
   1400027fe:	cmp    eax,0xb7
   140002803:	je     0x140002818
   140002805:	movzx  edi,ax
   140002808:	or     edi,0x80070000
   14000280e:	test   eax,eax
   140002810:	cmovle edi,eax
   140002813:	jmp    0x140003379
   140002818:	mov    rdx,r14
   14000281b:	lea    rcx,[rsp+0x60]
   140002820:	call   0x140001ae4
   140002825:	mov    edi,eax
   140002827:	test   eax,eax
   140002829:	js     0x140002874
   14000282b:	lea    rdx,[rbp+0xf0]
   140002832:	lea    rcx,[rsp+0x60]
   140002837:	call   0x140001ba0
   14000283c:	mov    edi,eax
   14000283e:	test   eax,eax
   140002840:	js     0x140002874
   140002842:	mov    eax,0x2
   140002847:	mov    ebx,0x104
   14000284c:	mul    rbx
   14000284f:	mov    rcx,0xffffffffffffffff
   140002856:	cmovo  rax,rcx
   14000285a:	mov    rcx,rax
   14000285d:	call   0x14000703c
   140002862:	mov    r12,rax
   140002865:	mov    QWORD PTR [rsp+0x58],rax
   14000286a:	test   rax,rax
   14000286d:	jne    0x14000287e
   14000286f:	mov    edi,0x80070008
   140002874:	mov    rbx,QWORD PTR [rsp+0x60]
   140002879:	jmp    0x140003379
   14000287e:	lea    r14,[rip+0x5e6f]        # 0x1400086f4
   140002885:	mov    rdx,r14
   140002888:	cmp    QWORD PTR [r13+0x28],r15
   14000288c:	cmovne rdx,QWORD PTR [r13+0x28]
   140002891:	lea    rcx,[rbp-0x20]
   140002895:	call   0x140001ae4
   14000289a:	mov    edi,eax
   14000289c:	test   eax,eax
   14000289e:	js     0x140003328
   1400028a4:	lea    rdx,[rip+0x617d]        # 0x140008a28
   1400028ab:	lea    rcx,[rbp-0x20]
   1400028af:	call   0x140001ba0
   1400028b4:	mov    edi,eax
   1400028b6:	test   eax,eax
   1400028b8:	js     0x140003328
   1400028be:	mov    rcx,r14
   1400028c1:	mov    rsi,QWORD PTR [rbp-0x20]
   1400028c5:	test   rsi,rsi
   1400028c8:	cmovne rcx,rsi
   1400028cc:	mov    r8d,ebx
   1400028cf:	mov    rdx,r12
   1400028d2:	call   QWORD PTR [rip+0x58c8]        # 0x1400081a0
   1400028d8:	dec    eax
   1400028da:	cmp    eax,0x103
   1400028df:	ja     0x14000330f
   1400028e5:	mov    rcx,r12
   1400028e8:	call   0x140004138
   1400028ed:	test   eax,eax
   1400028ef:	je     0x14000298f
   1400028f5:	mov    rdx,r14
   1400028f8:	mov    rbx,QWORD PTR [rsp+0x60]
   1400028fd:	test   rbx,rbx
   140002900:	cmovne rdx,rbx
   140002904:	xor    r8d,r8d
   140002907:	mov    rcx,r12
   14000290a:	call   QWORD PTR [rip+0x58c0]        # 0x1400081d0
   140002910:	test   eax,eax
   140002912:	jne    0x14000292d
   140002914:	call   QWORD PTR [rip+0x59c6]        # 0x1400082e0
   14000291a:	movzx  edi,ax
   14000291d:	or     edi,0x80070000
   140002923:	test   eax,eax
   140002925:	cmovle edi,eax
   140002928:	jmp    0x140003374
   14000292d:	mov    rcx,r14
   140002930:	test   rbx,rbx
   140002933:	cmovne rcx,rbx
   140002937:	mov    edx,0x80
   14000293c:	call   QWORD PTR [rip+0x5896]        # 0x1400081d8
   140002942:	test   eax,eax
   140002944:	je     0x140002914
   140002946:	mov    rdx,r14
   140002949:	test   rbx,rbx
   14000294c:	cmovne rdx,rbx
   140002950:	lea    rcx,[r13+0x10]
   140002954:	call   0x140001ae4
   140002959:	mov    edi,eax
   14000295b:	test   eax,eax
   14000295d:	js     0x140003374
   140002963:	test   BYTE PTR [rip+0x8fda],0x3        # 0x14000b944
   14000296a:	je     0x140002ab7
   140002970:	mov    rax,r14
   140002973:	test   rbx,rbx
   140002976:	cmovne rax,rbx
   14000297a:	mov    QWORD PTR [rsp+0x30],rax
   14000297f:	mov    QWORD PTR [rsp+0x28],r12
   140002984:	mov    r8d,0x1a8
   14000298a:	jmp    0x140002a91
   14000298f:	mov    eax,0x2
   140002994:	mul    rbx
   140002997:	mov    rcx,0xffffffffffffffff
   14000299e:	cmovo  rax,rcx
   1400029a2:	mov    rcx,rax
   1400029a5:	call   0x14000703c
   1400029aa:	mov    rbx,rax
   1400029ad:	mov    QWORD PTR [rbp-0x18],rax
   1400029b1:	test   rax,rax
   1400029b4:	jne    0x1400029c5
   1400029b6:	mov    edi,0x80070008
   1400029bb:	mov    rbx,QWORD PTR [rsp+0x60]
   1400029c0:	jmp    0x140003374
   1400029c5:	and    QWORD PTR [rbp-0x58],r15
   1400029c9:	lea    rcx,[rbp-0x58]
   1400029cd:	call   0x14000538c
   1400029d2:	mov    edi,eax
   1400029d4:	test   eax,eax
   1400029d6:	js     0x1400029bb
   1400029d8:	mov    edi,0x104
   1400029dd:	mov    r8d,edi
   1400029e0:	mov    rdx,rbx
   1400029e3:	mov    rcx,QWORD PTR [rbp-0x58]
   1400029e7:	call   QWORD PTR [rip+0x57b3]        # 0x1400081a0
   1400029ed:	dec    eax
   1400029ef:	cmp    eax,0x103
   1400029f4:	ja     0x14000330f
   1400029fa:	lea    r8,[rip+0x60ef]        # 0x140008af0
   140002a01:	mov    edx,edi
   140002a03:	mov    rcx,rbx
   140002a06:	call   QWORD PTR [rip+0x5abc]        # 0x1400084c8
   140002a0c:	mov    rdx,r14
   140002a0f:	mov    rbx,QWORD PTR [rsp+0x60]
   140002a14:	test   rbx,rbx
   140002a17:	cmovne rdx,rbx
   140002a1b:	xor    r8d,r8d
   140002a1e:	mov    rcx,QWORD PTR [rbp-0x18]
   140002a22:	call   QWORD PTR [rip+0x57a8]        # 0x1400081d0
   140002a28:	test   eax,eax
   140002a2a:	je     0x140002914
   140002a30:	mov    rcx,r14
   140002a33:	test   rbx,rbx
   140002a36:	cmovne rcx,rbx
   140002a3a:	mov    edx,0x80
   140002a3f:	call   QWORD PTR [rip+0x5793]        # 0x1400081d8
   140002a45:	test   eax,eax
   140002a47:	je     0x140002914
   140002a4d:	mov    rdx,r14
   140002a50:	test   rbx,rbx
   140002a53:	cmovne rdx,rbx
   140002a57:	lea    rcx,[r13+0x10]
   140002a5b:	call   0x140001ae4
   140002a60:	mov    edi,eax
   140002a62:	test   eax,eax
   140002a64:	js     0x140003374
   140002a6a:	test   BYTE PTR [rip+0x8ed3],0x3        # 0x14000b944
   140002a71:	je     0x140002ab7
   140002a73:	mov    rax,r14
   140002a76:	test   rbx,rbx
   140002a79:	cmovne rax,rbx
   140002a7d:	mov    QWORD PTR [rsp+0x30],rax
   140002a82:	mov    rax,QWORD PTR [rbp-0x18]
   140002a86:	mov    QWORD PTR [rsp+0x28],rax
   140002a8b:	mov    r8d,0x1ee
   140002a91:	lea    rax,[rip+0x5fc0]        # 0x140008a58
   140002a98:	mov    QWORD PTR [rsp+0x20],rax
   140002a9d:	lea    r9,[rip+0x5fe4]        # 0x140008a88
   140002aa4:	lea    rdx,[rip+0x6005]        # 0x140008ab0
   140002aab:	mov    rcx,QWORD PTR [rip+0x8e96]        # 0x14000b948
   140002ab2:	call   0x140006c34
   140002ab7:	call   QWORD PTR [rip+0x5a9b]        # 0x140008558
   140002abd:	mov    edi,eax
   140002abf:	test   eax,eax
   140002ac1:	js     0x140003374
   140002ac7:	lea    rdx,[rbp+0xe0]
   140002ace:	lea    rcx,[rip+0x606b]        # 0x140008b40
   140002ad5:	call   QWORD PTR [rip+0x5a8d]        # 0x140008568
   140002adb:	mov    edi,eax
   140002add:	test   eax,eax
   140002adf:	js     0x140003374
   140002ae5:	lea    rax,[rsp+0x68]
   140002aea:	mov    QWORD PTR [rsp+0x20],rax
   140002aef:	lea    r9,[rip+0x648a]        # 0x140008f80
   140002af6:	xor    edx,edx
   140002af8:	lea    r8d,[rdx+0x1]
   140002afc:	lea    rcx,[rbp+0xe0]
   140002b03:	call   QWORD PTR [rip+0x5a67]        # 0x140008570
   140002b09:	mov    edi,eax
   140002b0b:	test   eax,eax
   140002b0d:	js     0x140003374
   140002b13:	mov    ecx,0x218
   140002b18:	call   0x140006ffc
   140002b1d:	mov    r15,rax
   140002b20:	mov    QWORD PTR [rbp-0x58],rax
   140002b24:	test   rax,rax
   140002b27:	je     0x140002b56
   140002b29:	mov    r8,r14
   140002b2c:	test   rbx,rbx
   140002b2f:	cmovne r8,rbx
   140002b33:	lea    rax,[rip+0x54e6]        # 0x140008020
   140002b3a:	mov    QWORD PTR [r15],rax
   140002b3d:	mov    DWORD PTR [r15+0x8],0x1
   140002b45:	lea    rcx,[r15+0xc]
   140002b49:	mov    edx,0x104
   140002b4e:	call   QWORD PTR [rip+0x5984]        # 0x1400084d8
   140002b54:	jmp    0x140002b59
   140002b56:	xor    r15d,r15d
   140002b59:	test   r15,r15
   140002b5c:	jne    0x140002b68
   140002b5e:	mov    edi,0x80070008
   140002b63:	jmp    0x140003374
   140002b68:	mov    rdx,r15
   140002b6b:	mov    rcx,QWORD PTR [rsp+0x68]
   140002b70:	call   0x140002550
   140002b75:	mov    edi,eax
   140002b77:	test   eax,eax
   140002b79:	jns    0x140002baa
   140002b7b:	mov    rax,QWORD PTR [r15]
   140002b7e:	mov    rcx,r15
   140002b81:	mov    rax,QWORD PTR [rax+0x10]
   140002b85:	call   QWORD PTR [rip+0x5a15]        # 0x1400085a0
   140002b8b:	xor    r15d,r15d
   140002b8e:	mov    rcx,QWORD PTR [rsp+0x68]
   140002b93:	mov    rax,QWORD PTR [rcx]
   140002b96:	mov    rax,QWORD PTR [rax+0x10]
   140002b9a:	call   QWORD PTR [rip+0x5a00]        # 0x1400085a0
   140002ba0:	and    QWORD PTR [rsp+0x68],r15
   140002ba5:	jmp    0x140003374
   140002baa:	mov    rcx,QWORD PTR [rsp+0x68]
   140002baf:	mov    rax,QWORD PTR [rcx]
   140002bb2:	mov    rdx,QWORD PTR [rbp+0x10]
   140002bb6:	mov    rax,QWORD PTR [rax+0x48]
   140002bba:	call   QWORD PTR [rip+0x59e0]        # 0x1400085a0
   140002bc0:	mov    edi,eax
   140002bc2:	test   eax,eax
   140002bc4:	js     0x140003374
   140002bca:	lea    rcx,[rbp-0x70]
   140002bce:	call   QWORD PTR [rip+0x576c]        # 0x140008340
   140002bd4:	mov    rcx,QWORD PTR [rsp+0x68]
   140002bd9:	mov    rax,QWORD PTR [rcx]
   140002bdc:	lea    r9,[rbp+0x20]
   140002be0:	mov    r8,QWORD PTR [rbp+0x10]
   140002be4:	mov    rdx,QWORD PTR [rbp+0x38]
   140002be8:	mov    rax,QWORD PTR [rax+0x18]
   140002bec:	call   QWORD PTR [rip+0x59ae]        # 0x1400085a0
   140002bf2:	mov    edi,eax
   140002bf4:	test   eax,eax
   140002bf6:	jns    0x140002c1b
   140002bf8:	lea    rdx,[rbp+0x40]
   140002bfc:	xor    ecx,ecx
   140002bfe:	call   QWORD PTR [rip+0x5734]        # 0x140008338
   140002c04:	mov    r14,QWORD PTR [rsp+0x50]
   140002c09:	test   eax,eax
   140002c0b:	jns    0x140003379
   140002c11:	and    QWORD PTR [rbp+0x40],0x0
   140002c16:	jmp    0x140003379
   140002c1b:	mov    rcx,QWORD PTR [rbp+0x20]
   140002c1f:	mov    rax,QWORD PTR [rcx]
   140002c22:	lea    rdx,[rbp-0x30]
   140002c26:	mov    rax,QWORD PTR [rax+0x20]
   140002c2a:	call   QWORD PTR [rip+0x5970]        # 0x1400085a0
   140002c30:	mov    edi,eax
   140002c32:	test   eax,eax
   140002c34:	js     0x140003374
   140002c3a:	mov    rcx,QWORD PTR [rbp-0x30]
   140002c3e:	mov    rax,QWORD PTR [rcx]
   140002c41:	lea    rdx,[rbp-0x40]
   140002c45:	mov    rax,QWORD PTR [rax+0x18]
   140002c49:	call   QWORD PTR [rip+0x5951]        # 0x1400085a0
   140002c4f:	mov    edi,eax
   140002c51:	test   eax,eax
   140002c53:	js     0x140003374
   140002c59:	xor    r12d,r12d
   140002c5c:	mov    edi,r12d
   140002c5f:	mov    DWORD PTR [rbp-0x58],r12d
   140002c63:	cmp    DWORD PTR [rbp-0x40],r12d
   140002c67:	jbe    0x1400031f1
   140002c6d:	lea    rcx,[rbp-0x70]
   140002c71:	call   QWORD PTR [rip+0x56c9]        # 0x140008340
   140002c77:	mov    eax,0x13
   140002c7c:	mov    WORD PTR [rbp-0x70],ax
   140002c80:	mov    DWORD PTR [rbp-0x68],edi
   140002c83:	movups xmm0,XMMWORD PTR [rbp-0x70]
   140002c87:	movaps XMMWORD PTR [rbp+0x50],xmm0
   140002c8b:	movsd  xmm1,QWORD PTR [rbp-0x60]
   140002c90:	movsd  QWORD PTR [rbp+0x60],xmm1
   140002c95:	mov    rcx,QWORD PTR [rbp-0x30]
   140002c99:	mov    rax,QWORD PTR [rcx]
   140002c9c:	lea    r8,[rbp-0x48]
   140002ca0:	lea    rdx,[rbp+0x50]
   140002ca4:	mov    rax,QWORD PTR [rax+0x20]
   140002ca8:	call   QWORD PTR [rip+0x58f2]        # 0x1400085a0
   140002cae:	mov    edi,eax
   140002cb0:	test   eax,eax
   140002cb2:	js     0x14000336f
   140002cb8:	lea    r8,[rip+0x5ee1]        # 0x140008ba0
   140002cbf:	lea    rdx,[rip+0x5f0a]        # 0x140008bd0
   140002cc6:	mov    rcx,QWORD PTR [rbp-0x48]
   140002cca:	call   0x14000245c
   140002ccf:	mov    edi,eax
   140002cd1:	test   eax,eax
   140002cd3:	js     0x14000336f
   140002cd9:	mov    rcx,QWORD PTR [rbp-0x48]
   140002cdd:	mov    rax,QWORD PTR [rcx]
   140002ce0:	lea    rdx,[rbp-0x38]
   140002ce4:	mov    rax,QWORD PTR [rax+0x20]
   140002ce8:	call   QWORD PTR [rip+0x58b2]        # 0x1400085a0
   140002cee:	mov    edi,eax
   140002cf0:	test   eax,eax
   140002cf2:	js     0x14000336f
   140002cf8:	mov    rcx,r14
   140002cfb:	cmp    QWORD PTR [r13+0x30],r12
   140002cff:	cmovne rcx,QWORD PTR [r13+0x30]
   140002d04:	movzx  eax,WORD PTR [rcx]
   140002d07:	cmp    ax,WORD PTR [rip+0x5ece]        # 0x140008bdc
   140002d0e:	jne    0x140002f18
   140002d14:	movzx  eax,WORD PTR [rcx+0x2]
   140002d18:	cmp    ax,WORD PTR [rip+0x5ebf]        # 0x140008bde
   140002d1f:	jne    0x140002f18
   140002d25:	mov    DWORD PTR [rsp+0x7c],r12d
   140002d2a:	mov    rcx,QWORD PTR [rbp-0x38]
   140002d2e:	mov    rax,QWORD PTR [rcx]
   140002d31:	lea    rdx,[rsp+0x7c]
   140002d36:	mov    rax,QWORD PTR [rax+0x18]
   140002d3a:	call   QWORD PTR [rip+0x5860]        # 0x1400085a0
   140002d40:	mov    edi,eax
   140002d42:	test   eax,eax
   140002d44:	js     0x14000336f
   140002d4a:	mov    edi,r12d
   140002d4d:	mov    DWORD PTR [rsp+0x70],r12d
   140002d52:	cmp    DWORD PTR [rsp+0x7c],r12d
   140002d57:	jbe    0x140003078
   140002d5d:	lea    rcx,[rbp-0x70]
   140002d61:	call   QWORD PTR [rip+0x55d9]        # 0x140008340
   140002d67:	mov    eax,0x13
   140002d6c:	mov    WORD PTR [rbp-0x70],ax
   140002d70:	mov    DWORD PTR [rbp-0x68],edi
   140002d73:	movups xmm0,XMMWORD PTR [rbp-0x70]
   140002d77:	movaps XMMWORD PTR [rbp+0x70],xmm0
   140002d7b:	movsd  xmm1,QWORD PTR [rbp-0x60]
   140002d80:	movsd  QWORD PTR [rbp+0x80],xmm1
   140002d88:	mov    rcx,QWORD PTR [rbp-0x38]
   140002d8c:	mov    rax,QWORD PTR [rcx]
   140002d8f:	lea    r8,[rbp+0x18]
   140002d93:	lea    rdx,[rbp+0x70]
   140002d97:	mov    rax,QWORD PTR [rax+0x20]
   140002d9b:	call   QWORD PTR [rip+0x57ff]        # 0x1400085a0
   140002da1:	mov    edi,eax
   140002da3:	test   eax,eax
   140002da5:	js     0x14000336f
   140002dab:	cmp    DWORD PTR [rip+0x82de],r12d        # 0x14000b090
   140002db2:	jne    0x140002dd8
   140002db4:	cmp    DWORD PTR [rip+0x82f5],r12d        # 0x14000b0b0
   140002dbb:	jne    0x140002dd8
   140002dbd:	cmp    DWORD PTR [rip+0x83cc],r12d        # 0x14000b190
   140002dc4:	je     0x140002df9
   140002dc6:	mov    r8,r14
   140002dc9:	cmp    QWORD PTR [r13+0x8],r12
   140002dcd:	cmovne r8,QWORD PTR [r13+0x8]
   140002dd2:	mov    rcx,QWORD PTR [rbp-0x78]
   140002dd6:	jmp    0x140002de3
   140002dd8:	lea    r8,[rip+0x5e01]        # 0x140008be0
   140002ddf:	mov    rcx,QWORD PTR [rbp+0x18]
   140002de3:	lea    rdx,[rip+0x596e]        # 0x140008758
   140002dea:	call   0x14000245c
   140002def:	test   eax,eax
   140002df1:	mov    edi,eax
   140002df3:	js     0x14000336f
   140002df9:	mov    rcx,QWORD PTR [rbp+0x18]
   140002dfd:	mov    rax,QWORD PTR [rcx]
   140002e00:	lea    rdx,[rbp-0x10]
   140002e04:	mov    rax,QWORD PTR [rax+0x20]
   140002e08:	call   QWORD PTR [rip+0x5792]        # 0x1400085a0
   140002e0e:	mov    edi,eax
   140002e10:	test   eax,eax
   140002e12:	js     0x14000336f
   140002e18:	mov    DWORD PTR [rsp+0x78],r12d
   140002e1d:	mov    rcx,QWORD PTR [rbp-0x10]
   140002e21:	mov    rax,QWORD PTR [rcx]
   140002e24:	lea    rdx,[rsp+0x78]
   140002e29:	mov    rax,QWORD PTR [rax+0x18]
   140002e2d:	call   QWORD PTR [rip+0x576d]        # 0x1400085a0
   140002e33:	mov    edi,eax
   140002e35:	test   eax,eax
   140002e37:	js     0x14000336f
   140002e3d:	cmp    DWORD PTR [rsp+0x78],0x0
   140002e42:	jbe    0x140002ef9
   140002e48:	lea    rcx,[rbp-0x70]
   140002e4c:	call   QWORD PTR [rip+0x54ee]        # 0x140008340
   140002e52:	mov    eax,0x13
   140002e57:	mov    WORD PTR [rbp-0x70],ax
   140002e5b:	mov    DWORD PTR [rbp-0x68],r12d
   140002e5f:	movups xmm0,XMMWORD PTR [rbp-0x70]
   140002e63:	movaps XMMWORD PTR [rbp+0x90],xmm0
   140002e6a:	movsd  xmm1,QWORD PTR [rbp-0x60]
   140002e6f:	movsd  QWORD PTR [rbp+0xa0],xmm1
   140002e77:	mov    rcx,QWORD PTR [rbp-0x10]
   140002e7b:	mov    rax,QWORD PTR [rcx]
   140002e7e:	lea    r8,[rbp-0x8]
   140002e82:	lea    rdx,[rbp+0x90]
   140002e89:	mov    rax,QWORD PTR [rax+0x20]
   140002e8d:	call   QWORD PTR [rip+0x570d]        # 0x1400085a0
   140002e93:	mov    edi,eax
   140002e95:	test   eax,eax
   140002e97:	js     0x14000336f
   140002e9d:	mov    r8,r14
   140002ea0:	cmp    QWORD PTR [r13+0x28],0x0
   140002ea5:	cmovne r8,QWORD PTR [r13+0x28]
   140002eaa:	lea    rdx,[rip+0x5d57]        # 0x140008c08
   140002eb1:	mov    rcx,QWORD PTR [rbp-0x8]
   140002eb5:	call   0x14000245c
   140002eba:	mov    edi,eax
   140002ebc:	test   eax,eax
   140002ebe:	js     0x14000336f
   140002ec4:	mov    r8,r14
   140002ec7:	cmp    QWORD PTR [r13+0x30],0x0
   140002ecc:	cmovne r8,QWORD PTR [r13+0x30]
   140002ed1:	lea    rdx,[rip+0x58e0]        # 0x1400087b8
   140002ed8:	mov    rcx,QWORD PTR [rbp-0x8]
   140002edc:	call   0x14000245c
   140002ee1:	mov    edi,eax
   140002ee3:	test   eax,eax
   140002ee5:	js     0x14000336f
   140002eeb:	inc    r12d
   140002eee:	cmp    r12d,DWORD PTR [rsp+0x78]
   140002ef3:	jb     0x140002e48
   140002ef9:	mov    edi,DWORD PTR [rsp+0x70]
   140002efd:	inc    edi
   140002eff:	mov    DWORD PTR [rsp+0x70],edi
   140002f03:	cmp    edi,DWORD PTR [rsp+0x7c]
   140002f07:	mov    r12d,0x0
   140002f0d:	jb     0x140002d5d
   140002f13:	jmp    0x140003078
   140002f18:	mov    rcx,QWORD PTR [rbp-0x38]
   140002f1c:	mov    rax,QWORD PTR [rcx]
   140002f1f:	lea    r8,[rbp-0x78]
   140002f23:	mov    rdx,r14
   140002f26:	mov    rax,QWORD PTR [rax+0x40]
   140002f2a:	call   QWORD PTR [rip+0x5670]        # 0x1400085a0
   140002f30:	mov    edi,eax
   140002f32:	test   eax,eax
   140002f34:	js     0x14000336f
   140002f3a:	mov    r8,r14
   140002f3d:	cmp    QWORD PTR [r13+0x30],r12
   140002f41:	cmovne r8,QWORD PTR [r13+0x30]
   140002f46:	lea    rdx,[rip+0x586b]        # 0x1400087b8
   140002f4d:	mov    rcx,QWORD PTR [rbp-0x78]
   140002f51:	call   0x14000245c
   140002f56:	mov    edi,eax
   140002f58:	test   eax,eax
   140002f5a:	js     0x14000336f
   140002f60:	cmp    DWORD PTR [rip+0x8129],r12d        # 0x14000b090
   140002f67:	jne    0x140002f89
   140002f69:	cmp    DWORD PTR [rip+0x8140],r12d        # 0x14000b0b0
   140002f70:	jne    0x140002f89
   140002f72:	cmp    DWORD PTR [rip+0x8217],r12d        # 0x14000b190
   140002f79:	je     0x140002faa
   140002f7b:	mov    r8,r14
   140002f7e:	cmp    QWORD PTR [r13+0x8],r12
   140002f82:	cmovne r8,QWORD PTR [r13+0x8]
   140002f87:	jmp    0x140002f90
   140002f89:	lea    r8,[rip+0x5c50]        # 0x140008be0
   140002f90:	lea    rdx,[rip+0x57c1]        # 0x140008758
   140002f97:	mov    rcx,QWORD PTR [rbp-0x78]
   140002f9b:	call   0x14000245c
   140002fa0:	test   eax,eax
   140002fa2:	mov    edi,eax
   140002fa4:	js     0x14000336f
   140002faa:	mov    rcx,QWORD PTR [rbp-0x78]
   140002fae:	mov    rax,QWORD PTR [rcx]
   140002fb1:	lea    rdx,[rbp+0x0]
   140002fb5:	mov    rax,QWORD PTR [rax+0x20]
   140002fb9:	call   QWORD PTR [rip+0x55e1]        # 0x1400085a0
   140002fbf:	mov    edi,eax
   140002fc1:	test   eax,eax
   140002fc3:	js     0x14000336f
   140002fc9:	mov    rcx,QWORD PTR [rbp+0x0]
   140002fcd:	mov    rax,QWORD PTR [rcx]
   140002fd0:	lea    r8,[rbp-0x28]
   140002fd4:	mov    rdx,r14
   140002fd7:	mov    rax,QWORD PTR [rax+0x40]
   140002fdb:	call   QWORD PTR [rip+0x55bf]        # 0x1400085a0
   140002fe1:	mov    edi,eax
   140002fe3:	test   eax,eax
   140002fe5:	js     0x14000336f
   140002feb:	lea    r8,[rip+0x5bea]        # 0x140008bdc
   140002ff2:	lea    rdx,[rip+0x57bf]        # 0x1400087b8
   140002ff9:	mov    rcx,QWORD PTR [rbp-0x28]
   140002ffd:	call   0x14000245c
   140003002:	mov    edi,eax
   140003004:	test   eax,eax
   140003006:	js     0x14000336f
   14000300c:	mov    r8,r14
   14000300f:	cmp    QWORD PTR [r13+0x28],r12
   140003013:	cmovne r8,QWORD PTR [r13+0x28]
   140003018:	lea    rdx,[rip+0x5be9]        # 0x140008c08
   14000301f:	mov    rcx,QWORD PTR [rbp-0x28]
   140003023:	call   0x14000245c
   140003028:	mov    edi,eax
   14000302a:	test   eax,eax
   14000302c:	js     0x14000336f
   140003032:	mov    rcx,QWORD PTR [rbp+0x0]
   140003036:	mov    rax,QWORD PTR [rcx]
   140003039:	or     r8d,0xffffffff
   14000303d:	mov    rdx,QWORD PTR [rbp-0x28]
   140003041:	mov    rax,QWORD PTR [rax+0x28]
   140003045:	call   QWORD PTR [rip+0x5555]        # 0x1400085a0
   14000304b:	mov    edi,eax
   14000304d:	test   eax,eax
   14000304f:	js     0x14000336f
   140003055:	mov    rcx,QWORD PTR [rbp-0x38]
   140003059:	mov    rax,QWORD PTR [rcx]
   14000305c:	or     r8d,0xffffffff
   140003060:	mov    rdx,QWORD PTR [rbp-0x78]
   140003064:	mov    rax,QWORD PTR [rax+0x28]
   140003068:	call   QWORD PTR [rip+0x5532]        # 0x1400085a0
   14000306e:	mov    edi,eax
   140003070:	test   eax,eax
   140003072:	js     0x14000336f
   140003078:	mov    rcx,QWORD PTR [rbp-0x48]
   14000307c:	mov    rax,QWORD PTR [rcx]
   14000307f:	lea    r8,[rbp+0x28]
   140003083:	lea    rdx,[rip+0x5b9e]        # 0x140008c28
   14000308a:	mov    rax,QWORD PTR [rax+0x50]
   14000308e:	call   QWORD PTR [rip+0x550c]        # 0x1400085a0
   140003094:	mov    edi,eax
   140003096:	test   eax,eax
   140003098:	js     0x14000336f
   14000309e:	mov    rcx,QWORD PTR [rbp+0x28]
   1400030a2:	mov    rax,QWORD PTR [rcx]
   1400030a5:	lea    rdx,[rbp+0x8]
   1400030a9:	mov    rax,QWORD PTR [rax+0x20]
   1400030ad:	call   QWORD PTR [rip+0x54ed]        # 0x1400085a0
   1400030b3:	mov    edi,eax
   1400030b5:	test   eax,eax
   1400030b7:	js     0x14000336f
   1400030bd:	mov    DWORD PTR [rbp-0x80],r12d
   1400030c1:	mov    rcx,QWORD PTR [rbp+0x8]
   1400030c5:	mov    rax,QWORD PTR [rcx]
   1400030c8:	lea    rdx,[rbp-0x80]
   1400030cc:	mov    rax,QWORD PTR [rax+0x18]
   1400030d0:	call   QWORD PTR [rip+0x54ca]        # 0x1400085a0
   1400030d6:	mov    edi,eax
   1400030d8:	test   eax,eax
   1400030da:	js     0x14000336f
   1400030e0:	cmp    DWORD PTR [rbp-0x80],0x0
   1400030e4:	jbe    0x1400031da
   1400030ea:	lea    rcx,[rbp-0x70]
   1400030ee:	call   QWORD PTR [rip+0x524c]        # 0x140008340
   1400030f4:	mov    eax,0x13
   1400030f9:	mov    WORD PTR [rbp-0x70],ax
   1400030fd:	mov    DWORD PTR [rbp-0x68],r12d
   140003101:	movups xmm0,XMMWORD PTR [rbp-0x70]
   140003105:	movaps XMMWORD PTR [rbp+0xb0],xmm0
   14000310c:	movsd  xmm1,QWORD PTR [rbp-0x60]
   140003111:	movsd  QWORD PTR [rbp+0xc0],xmm1
   140003119:	mov    rcx,QWORD PTR [rbp+0x8]
   14000311d:	mov    rax,QWORD PTR [rcx]
   140003120:	lea    r8,[rbp+0x30]
   140003124:	lea    rdx,[rbp+0xb0]
   14000312b:	mov    rax,QWORD PTR [rax+0x20]
   14000312f:	call   QWORD PTR [rip+0x546b]        # 0x1400085a0
   140003135:	mov    edi,eax
   140003137:	test   eax,eax
   140003139:	js     0x14000336f
   14000313f:	xor    edi,edi
   140003141:	mov    QWORD PTR [rsp+0x70],rdi
   140003146:	lea    rdx,[rip+0x5aef]        # 0x140008c3c
   14000314d:	lea    rcx,[rsp+0x70]
   140003152:	call   0x140001ae4
   140003157:	mov    rdx,r14
   14000315a:	cmp    QWORD PTR [r13+0x48],rdi
   14000315e:	cmovne rdx,QWORD PTR [r13+0x48]
   140003163:	lea    rcx,[rsp+0x70]
   140003168:	call   0x140001ba0
   14000316d:	lea    rdx,[rip+0x5ac8]        # 0x140008c3c
   140003174:	lea    rcx,[rsp+0x70]
   140003179:	call   0x140001ba0
   14000317e:	mov    rdx,r14
   140003181:	cmp    QWORD PTR [r13+0x38],rdi
   140003185:	cmovne rdx,QWORD PTR [r13+0x38]
   14000318a:	lea    rcx,[rsp+0x70]
   14000318f:	call   0x140001ba0
   140003194:	mov    r8,r14
   140003197:	mov    rdi,QWORD PTR [rsp+0x70]
   14000319c:	test   rdi,rdi
   14000319f:	cmovne r8,rdi
   1400031a3:	lea    rdx,[rip+0x5a96]        # 0x140008c40
   1400031aa:	mov    rcx,QWORD PTR [rbp+0x30]
   1400031ae:	call   0x14000245c
   1400031b3:	nop
   1400031b4:	test   rdi,rdi
   1400031b7:	je     0x1400031cd
   1400031b9:	call   QWORD PTR [rip+0x5161]        # 0x140008320
   1400031bf:	mov    rcx,rax
   1400031c2:	mov    r8,rdi
   1400031c5:	xor    edx,edx
   1400031c7:	call   QWORD PTR [rip+0x514b]        # 0x140008318
   1400031cd:	inc    r12d
   1400031d0:	cmp    r12d,DWORD PTR [rbp-0x80]
   1400031d4:	jb     0x1400030ea
   1400031da:	mov    edi,DWORD PTR [rbp-0x58]
   1400031dd:	inc    edi
   1400031df:	mov    DWORD PTR [rbp-0x58],edi
   1400031e2:	cmp    edi,DWORD PTR [rbp-0x40]
   1400031e5:	mov    r12d,0x0
   1400031eb:	jb     0x140002c6d
   1400031f1:	cmp    DWORD PTR [rip+0x7e98],r12d        # 0x14000b090
   1400031f8:	jne    0x140003207
   1400031fa:	cmp    DWORD PTR [rip+0x7eaf],r12d        # 0x14000b0b0
   140003201:	je     0x140003288
   140003207:	lea    rdx,[rbp-0x50]
   14000320b:	mov    rcx,QWORD PTR [rsp+0x68]
   140003210:	call   0x1400038b8
   140003215:	mov    edi,eax
   140003217:	test   eax,eax
   140003219:	js     0x140003309
   14000321f:	cmp    DWORD PTR [rip+0x7e6a],r12d        # 0x14000b090
   140003226:	je     0x140003253
   140003228:	mov    r8,r14
   14000322b:	cmp    QWORD PTR [r13+0x18],r12
   14000322f:	cmovne r8,QWORD PTR [r13+0x18]
   140003234:	lea    rdx,[rip+0x5a2d]        # 0x140008c68
   14000323b:	mov    r12,QWORD PTR [rbp-0x50]
   14000323f:	mov    rcx,r12
   140003242:	call   0x14000245c
   140003247:	mov    edi,eax
   140003249:	test   eax,eax
   14000324b:	js     0x14000334d
   140003251:	jmp    0x140003257
   140003253:	mov    r12,QWORD PTR [rbp-0x50]
   140003257:	cmp    DWORD PTR [rip+0x7e52],0x0        # 0x14000b0b0
   14000325e:	je     0x14000328c
   140003260:	mov    r8,r14
   140003263:	cmp    QWORD PTR [r13+0x20],0x0
   140003268:	cmovne r8,QWORD PTR [r13+0x20]
   14000326d:	lea    rdx,[rip+0x5a24]        # 0x140008c98
   140003274:	mov    rcx,r12
   140003277:	call   0x14000245c
   14000327c:	mov    edi,eax
   14000327e:	test   eax,eax
   140003280:	js     0x14000334d
   140003286:	jmp    0x14000328c
   140003288:	mov    r12,QWORD PTR [rbp-0x50]
   14000328c:	mov    rcx,QWORD PTR [rsp+0x68]
   140003291:	mov    rax,QWORD PTR [rcx]
   140003294:	mov    rax,QWORD PTR [rax+0x38]
   140003298:	call   QWORD PTR [rip+0x5302]        # 0x1400085a0
   14000329e:	mov    edi,eax
   1400032a0:	test   eax,eax
   1400032a2:	js     0x14000334d
   1400032a8:	test   BYTE PTR [rip+0x8695],0x3        # 0x14000b944
   1400032af:	je     0x1400032ec
   1400032b1:	mov    rax,r14
   1400032b4:	test   rbx,rbx
   1400032b7:	cmovne rax,rbx
   1400032bb:	mov    QWORD PTR [rsp+0x28],rax
   1400032c0:	lea    rax,[rip+0x59f9]        # 0x140008cc0
   1400032c7:	mov    QWORD PTR [rsp+0x20],rax
   1400032cc:	lea    r9,[rip+0x57b5]        # 0x140008a88
   1400032d3:	mov    r8d,0x3a3
   1400032d9:	lea    rdx,[rip+0x57d0]        # 0x140008ab0
   1400032e0:	mov    rcx,QWORD PTR [rip+0x8661]        # 0x14000b948
   1400032e7:	call   0x140006c34
   1400032ec:	cmp    DWORD PTR [r13+0x54],0x0
   1400032f1:	je     0x14000334d
   1400032f3:	cmp    QWORD PTR [r13+0x10],0x0
   1400032f8:	cmovne r14,QWORD PTR [r13+0x10]
   1400032fd:	mov    rcx,r14
   140003300:	call   0x140003de0
   140003305:	mov    edi,eax
   140003307:	jmp    0x14000334d
   140003309:	mov    r12,QWORD PTR [rbp-0x50]
   14000330d:	jmp    0x14000334d
   14000330f:	call   QWORD PTR [rip+0x4fcb]        # 0x1400082e0
   140003315:	movzx  edi,ax
   140003318:	or     edi,0x80070000
   14000331e:	test   eax,eax
   140003320:	cmovle edi,eax
   140003323:	jmp    0x1400029bb
   140003328:	mov    rbx,QWORD PTR [rsp+0x60]
   14000332d:	mov    rsi,QWORD PTR [rbp-0x20]
   140003331:	jmp    0x140003374
   140003333:	call   QWORD PTR [rip+0x4fa7]        # 0x1400082e0
   140003339:	movzx  edi,ax
   14000333c:	or     edi,0x80070000
   140003342:	test   eax,eax
   140003344:	cmovle edi,eax
   140003347:	mov    r12,QWORD PTR [rbp-0x50]
   14000334b:	jmp    0x140003352
   14000334d:	mov    r14,QWORD PTR [rsp+0x50]
   140003352:	test   r12,r12
   140003355:	je     0x140003368
   140003357:	mov    rax,QWORD PTR [r12]
   14000335b:	mov    rcx,r12
   14000335e:	mov    rax,QWORD PTR [rax+0x10]
   140003362:	call   QWORD PTR [rip+0x5238]        # 0x1400085a0
   140003368:	mov    r12,QWORD PTR [rsp+0x58]
   14000336d:	jmp    0x140003379
   14000336f:	mov    r12,QWORD PTR [rsp+0x58]
   140003374:	mov    r14,QWORD PTR [rsp+0x50]
   140003379:	mov    rcx,QWORD PTR [rbp+0x38]
   14000337d:	call   QWORD PTR [rip+0x4fcd]        # 0x140008350
   140003383:	mov    rax,QWORD PTR [rbp+0x10]
   140003387:	test   rax,rax
   14000338a:	je     0x140003395
   14000338c:	mov    rcx,rax
   14000338f:	call   QWORD PTR [rip+0x4fbb]        # 0x140008350
   140003395:	mov    rcx,QWORD PTR [rbp-0x30]
   140003399:	test   rcx,rcx
   14000339c:	je     0x1400033b0
   14000339e:	mov    rax,QWORD PTR [rcx]
   1400033a1:	mov    rax,QWORD PTR [rax+0x10]
   1400033a5:	call   QWORD PTR [rip+0x51f5]        # 0x1400085a0
   1400033ab:	and    QWORD PTR [rbp-0x30],0x0
   1400033b0:	mov    rcx,QWORD PTR [rbp-0x48]
   1400033b4:	test   rcx,rcx
   1400033b7:	je     0x1400033cb
   1400033b9:	mov    rax,QWORD PTR [rcx]
   1400033bc:	mov    rax,QWORD PTR [rax+0x10]
   1400033c0:	call   QWORD PTR [rip+0x51da]        # 0x1400085a0
   1400033c6:	and    QWORD PTR [rbp-0x48],0x0
   1400033cb:	test   r15,r15
   1400033ce:	je     0x1400033e0
   1400033d0:	mov    rax,QWORD PTR [r15]
   1400033d3:	mov    rcx,r15
   1400033d6:	mov    rax,QWORD PTR [rax+0x10]
   1400033da:	call   QWORD PTR [rip+0x51c0]        # 0x1400085a0
   1400033e0:	mov    rcx,QWORD PTR [rsp+0x68]
   1400033e5:	test   rcx,rcx
   1400033e8:	je     0x1400033fd
   1400033ea:	mov    rax,QWORD PTR [rcx]
   1400033ed:	mov    rax,QWORD PTR [rax+0x10]
   1400033f1:	call   QWORD PTR [rip+0x51a9]        # 0x1400085a0
   1400033f7:	and    QWORD PTR [rsp+0x68],0x0
   1400033fd:	test   r12,r12
   140003400:	je     0x14000340a
   140003402:	mov    rcx,r12
   140003405:	call   0x140007048
   14000340a:	mov    rax,QWORD PTR [rbp-0x18]
   14000340e:	test   rax,rax
   140003411:	je     0x14000341b
   140003413:	mov    rcx,rax
   140003416:	call   0x140007048
   14000341b:	test   r14,r14
   14000341e:	je     0x140003429
   140003420:	mov    rcx,r14
   140003423:	call   0x140007048
   140003428:	nop
   140003429:	test   rsi,rsi
   14000342c:	je     0x140003443
   14000342e:	call   QWORD PTR [rip+0x4eec]        # 0x140008320
   140003434:	mov    rcx,rax
   140003437:	mov    r8,rsi
   14000343a:	xor    edx,edx
   14000343c:	call   QWORD PTR [rip+0x4ed6]        # 0x140008318
   140003442:	nop
   140003443:	test   rbx,rbx
   140003446:	je     0x14000345c
   140003448:	call   QWORD PTR [rip+0x4ed2]        # 0x140008320
   14000344e:	mov    rcx,rax
   140003451:	mov    r8,rbx
   140003454:	xor    edx,edx
   140003456:	call   QWORD PTR [rip+0x4ebc]        # 0x140008318
   14000345c:	mov    eax,edi
   14000345e:	mov    rcx,QWORD PTR [rbp+0x160]
   140003465:	xor    rcx,rsp
   140003468:	call   0x140007390
   14000346d:	lea    r11,[rsp+0x270]
   140003475:	mov    rbx,QWORD PTR [r11+0x38]
   140003479:	mov    rsi,QWORD PTR [r11+0x40]
   14000347d:	mov    rdi,QWORD PTR [r11+0x48]
   140003481:	mov    rsp,r11
   140003484:	pop    r15
   140003486:	pop    r14
   140003488:	pop    r13
   14000348a:	pop    r12
   14000348c:	pop    rbp
   14000348d:	ret    
   14000348e:	int3   
   14000348f:	int3   
   140003490:	int3   
   140003491:	int3   
   140003492:	int3   
   140003493:	int3   
   140003494:	mov    QWORD PTR [rsp+0x18],rbx
   140003499:	mov    QWORD PTR [rsp+0x20],rbp
   14000349e:	push   rsi
   14000349f:	push   rdi
   1400034a0:	push   r14
   1400034a2:	sub    rsp,0x60
   1400034a6:	mov    rax,QWORD PTR [rip+0x7ecb]        # 0x14000b378
   1400034ad:	xor    rax,rsp
   1400034b0:	mov    QWORD PTR [rsp+0x50],rax
   1400034b5:	and    QWORD PTR [rsp+0x30],0x0
   1400034bb:	mov    rbp,rcx
   1400034be:	lea    rcx,[rip+0x54cb]        # 0x140008990
   1400034c5:	mov    r14,rdx
   1400034c8:	call   QWORD PTR [rip+0x4e8a]        # 0x140008358
   1400034ce:	mov    rsi,rax
   1400034d1:	test   rax,rax
   1400034d4:	jne    0x1400034e0
   1400034d6:	mov    ebx,0x80070008
   1400034db:	jmp    0x1400035bb
   1400034e0:	lea    rdx,[rsp+0x40]
   1400034e5:	lea    rcx,[rip+0x5654]        # 0x140008b40
   1400034ec:	call   QWORD PTR [rip+0x5076]        # 0x140008568
   1400034f2:	mov    ebx,eax
   1400034f4:	test   eax,eax
   1400034f6:	js     0x1400035bb
   1400034fc:	xor    edx,edx
   1400034fe:	lea    rax,[rsp+0x30]
   140003503:	lea    r9,[rip+0x5a76]        # 0x140008f80
   14000350a:	mov    QWORD PTR [rsp+0x20],rax
   14000350f:	lea    rcx,[rsp+0x40]
   140003514:	lea    r8d,[rdx+0x1]
   140003518:	call   QWORD PTR [rip+0x5052]        # 0x140008570
   14000351e:	mov    ebx,eax
   140003520:	test   eax,eax
   140003522:	js     0x1400035bb
   140003528:	mov    ecx,0x218
   14000352d:	call   0x140006ffc
   140003532:	mov    QWORD PTR [rsp+0x38],rax
   140003537:	mov    rdi,rax
   14000353a:	test   rax,rax
   14000353d:	je     0x140003564
   14000353f:	lea    rax,[rip+0x4ada]        # 0x140008020
   140003546:	mov    DWORD PTR [rdi+0x8],0x1
   14000354d:	lea    rcx,[rdi+0xc]
   140003551:	mov    QWORD PTR [rdi],rax
   140003554:	mov    r8,rbp
   140003557:	mov    edx,0x104
   14000355c:	call   QWORD PTR [rip+0x4f76]        # 0x1400084d8
   140003562:	jmp    0x140003566
   140003564:	xor    edi,edi
   140003566:	test   rdi,rdi
   140003569:	je     0x1400034d6
   14000356f:	mov    rcx,QWORD PTR [rsp+0x30]
   140003574:	mov    rdx,rdi
   140003577:	call   0x140002550
   14000357c:	mov    ebx,eax
   14000357e:	test   eax,eax
   140003580:	js     0x1400035ab
   140003582:	mov    rcx,QWORD PTR [rsp+0x30]
   140003587:	mov    rdx,rsi
   14000358a:	mov    rax,QWORD PTR [rcx]
   14000358d:	mov    rax,QWORD PTR [rax+0x48]
   140003591:	call   QWORD PTR [rip+0x5009]        # 0x1400085a0
   140003597:	mov    ebx,eax
   140003599:	test   eax,eax
   14000359b:	js     0x1400035ab
   14000359d:	mov    rax,QWORD PTR [rsp+0x30]
   1400035a2:	and    QWORD PTR [rsp+0x30],0x0
   1400035a8:	mov    QWORD PTR [r14],rax
   1400035ab:	mov    rax,QWORD PTR [rdi]
   1400035ae:	mov    rcx,rdi
   1400035b1:	mov    rax,QWORD PTR [rax+0x10]
   1400035b5:	call   QWORD PTR [rip+0x4fe5]        # 0x1400085a0
   1400035bb:	mov    rcx,QWORD PTR [rsp+0x30]
   1400035c0:	test   rcx,rcx
   1400035c3:	je     0x1400035d8
   1400035c5:	mov    rax,QWORD PTR [rcx]
   1400035c8:	mov    rax,QWORD PTR [rax+0x10]
   1400035cc:	call   QWORD PTR [rip+0x4fce]        # 0x1400085a0
   1400035d2:	and    QWORD PTR [rsp+0x30],0x0
   1400035d8:	test   rsi,rsi
   1400035db:	je     0x1400035e6
   1400035dd:	mov    rcx,rsi
   1400035e0:	call   QWORD PTR [rip+0x4d6a]        # 0x140008350
   1400035e6:	mov    eax,ebx
   1400035e8:	mov    rcx,QWORD PTR [rsp+0x50]
   1400035ed:	xor    rcx,rsp
   1400035f0:	call   0x140007390
   1400035f5:	lea    r11,[rsp+0x60]
   1400035fa:	mov    rbx,QWORD PTR [r11+0x30]
   1400035fe:	mov    rbp,QWORD PTR [r11+0x38]
   140003602:	mov    rsp,r11
   140003605:	pop    r14
   140003607:	pop    rdi
   140003608:	pop    rsi
   140003609:	ret    
   14000360a:	int3   
   14000360b:	int3   
   14000360c:	int3   
   14000360d:	int3   
   14000360e:	int3   
   14000360f:	int3   
   140003610:	mov    QWORD PTR [rsp+0x8],rbx
   140003615:	push   rbp
   140003616:	push   rsi
   140003617:	push   rdi
   140003618:	push   r12
   14000361a:	push   r13
   14000361c:	push   r14
   14000361e:	push   r15
   140003620:	lea    rbp,[rsp-0x27]
   140003625:	sub    rsp,0x90
   14000362c:	xor    r14d,r14d
   14000362f:	mov    rbx,rcx
   140003632:	lea    rcx,[rbp-0x19]
   140003636:	mov    QWORD PTR [rbp-0x29],r14
   14000363a:	mov    esi,r14d
   14000363d:	mov    QWORD PTR [rbp-0x31],r14
   140003641:	mov    edi,r14d
   140003644:	mov    QWORD PTR [rbp-0x21],r14
   140003648:	mov    DWORD PTR [rbp+0x77],r14d
   14000364c:	mov    r12,r8
   14000364f:	mov    QWORD PTR [rbp-0x39],r14
   140003653:	mov    r13,rdx
   140003656:	mov    QWORD PTR [rbp+0x7f],r14
   14000365a:	call   QWORD PTR [rip+0x4ce8]        # 0x140008348
   140003660:	lea    rcx,[rip+0x5699]        # 0x140008d00
   140003667:	mov    DWORD PTR [r12],r14d
   14000366b:	call   QWORD PTR [rip+0x4ce7]        # 0x140008358
   140003671:	mov    r15,rax
   140003674:	test   rax,rax
   140003677:	jne    0x140003683
   140003679:	mov    ebx,0x80070008
   14000367e:	jmp    0x140003800
   140003683:	lea    rcx,[rip+0x5306]        # 0x140008990
   14000368a:	call   QWORD PTR [rip+0x4cc8]        # 0x140008358
   140003690:	mov    rsi,rax
   140003693:	test   rax,rax
   140003696:	je     0x140003679
   140003698:	test   rbx,rbx
   14000369b:	jne    0x1400036a7
   14000369d:	mov    ebx,0x80070057
   1400036a2:	jmp    0x140003800
   1400036a7:	lea    rcx,[rbp-0x19]
   1400036ab:	call   QWORD PTR [rip+0x4c97]        # 0x140008348
   1400036b1:	lea    rcx,[rip+0x52d8]        # 0x140008990
   1400036b8:	call   QWORD PTR [rip+0x4c9a]        # 0x140008358
   1400036be:	mov    rsi,rax
   1400036c1:	test   rax,rax
   1400036c4:	je     0x140003679
   1400036c6:	lea    rdx,[rbp-0x21]
   1400036ca:	mov    rcx,rbx
   1400036cd:	call   0x140003494
   1400036d2:	mov    rdi,QWORD PTR [rbp-0x21]
   1400036d6:	mov    ebx,eax
   1400036d8:	test   eax,eax
   1400036da:	js     0x140003800
   1400036e0:	mov    rax,QWORD PTR [rdi]
   1400036e3:	lea    r9,[rbp-0x29]
   1400036e7:	mov    r8,rsi
   1400036ea:	mov    rdx,r15
   1400036ed:	mov    rcx,rdi
   1400036f0:	mov    rax,QWORD PTR [rax+0x18]
   1400036f4:	call   QWORD PTR [rip+0x4ea6]        # 0x1400085a0
   1400036fa:	mov    ebx,eax
   1400036fc:	test   eax,eax
   1400036fe:	js     0x140003800
   140003704:	mov    rcx,QWORD PTR [rbp-0x29]
   140003708:	lea    rdx,[rbp-0x31]
   14000370c:	mov    rax,QWORD PTR [rcx]
   14000370f:	mov    rax,QWORD PTR [rax+0x20]
   140003713:	call   QWORD PTR [rip+0x4e87]        # 0x1400085a0
   140003719:	mov    ebx,eax
   14000371b:	test   eax,eax
   14000371d:	js     0x140003800
   140003723:	mov    rcx,QWORD PTR [rbp-0x31]
   140003727:	lea    rdx,[rbp+0x77]
   14000372b:	mov    rax,QWORD PTR [rcx]
   14000372e:	mov    rax,QWORD PTR [rax+0x18]
   140003732:	call   QWORD PTR [rip+0x4e68]        # 0x1400085a0
   140003738:	mov    ebx,eax
   14000373a:	test   eax,eax
   14000373c:	js     0x140003800
   140003742:	cmp    DWORD PTR [rbp+0x77],r14d
   140003746:	jbe    0x140003800
   14000374c:	lea    rcx,[rbp-0x19]
   140003750:	call   QWORD PTR [rip+0x4bea]        # 0x140008340
   140003756:	mov    rcx,QWORD PTR [rbp-0x31]
   14000375a:	lea    r8,[rbp-0x39]
   14000375e:	movsd  xmm1,QWORD PTR [rbp-0x9]
   140003763:	lea    rdx,[rbp+0x7]
   140003767:	mov    DWORD PTR [rbp-0x11],r14d
   14000376b:	mov    eax,0x13
   140003770:	mov    WORD PTR [rbp-0x19],ax
   140003774:	mov    rax,QWORD PTR [rcx]
   140003777:	movups xmm0,XMMWORD PTR [rbp-0x19]
   14000377b:	movsd  QWORD PTR [rbp+0x17],xmm1
   140003780:	mov    rax,QWORD PTR [rax+0x20]
   140003784:	movaps XMMWORD PTR [rbp+0x7],xmm0
   140003788:	call   QWORD PTR [rip+0x4e12]        # 0x1400085a0
   14000378e:	mov    ebx,eax
   140003790:	test   eax,eax
   140003792:	js     0x140003800
   140003794:	mov    rcx,QWORD PTR [rbp-0x39]
   140003798:	lea    r8,[rbp+0x7f]
   14000379c:	lea    rdx,[rip+0x542d]        # 0x140008bd0
   1400037a3:	call   0x1400023bc
   1400037a8:	mov    ebx,eax
   1400037aa:	test   eax,eax
   1400037ac:	js     0x140003800
   1400037ae:	mov    rcx,QWORD PTR [rbp+0x7f]
   1400037b2:	mov    rdx,r13
   1400037b5:	call   QWORD PTR [rip+0x4d2d]        # 0x1400084e8
   1400037bb:	test   eax,eax
   1400037bd:	je     0x1400037f8
   1400037bf:	mov    rcx,QWORD PTR [rbp+0x7f]
   1400037c3:	test   rcx,rcx
   1400037c6:	je     0x1400037d3
   1400037c8:	call   QWORD PTR [rip+0x4b82]        # 0x140008350
   1400037ce:	and    QWORD PTR [rbp+0x7f],0x0
   1400037d3:	mov    rcx,QWORD PTR [rbp-0x39]
   1400037d7:	mov    rax,QWORD PTR [rcx]
   1400037da:	mov    rax,QWORD PTR [rax+0x10]
   1400037de:	call   QWORD PTR [rip+0x4dbc]        # 0x1400085a0
   1400037e4:	and    QWORD PTR [rbp-0x39],0x0
   1400037e9:	inc    r14d
   1400037ec:	cmp    r14d,DWORD PTR [rbp+0x77]
   1400037f0:	jb     0x14000374c
   1400037f6:	jmp    0x140003800
   1400037f8:	mov    DWORD PTR [r12],0x1
   140003800:	mov    rcx,QWORD PTR [rbp+0x7f]
   140003804:	xor    r14d,r14d
   140003807:	test   rcx,rcx
   14000380a:	je     0x140003816
   14000380c:	call   QWORD PTR [rip+0x4b3e]        # 0x140008350
   140003812:	mov    QWORD PTR [rbp+0x7f],r14
   140003816:	mov    rcx,QWORD PTR [rbp-0x39]
   14000381a:	test   rcx,rcx
   14000381d:	je     0x140003830
   14000381f:	mov    rax,QWORD PTR [rcx]
   140003822:	mov    rax,QWORD PTR [rax+0x10]
   140003826:	call   QWORD PTR [rip+0x4d74]        # 0x1400085a0
   14000382c:	mov    QWORD PTR [rbp-0x39],r14
   140003830:	mov    rcx,QWORD PTR [rbp-0x31]
   140003834:	test   rcx,rcx
   140003837:	je     0x14000384a
   140003839:	mov    rax,QWORD PTR [rcx]
   14000383c:	mov    rax,QWORD PTR [rax+0x10]
   140003840:	call   QWORD PTR [rip+0x4d5a]        # 0x1400085a0
   140003846:	mov    QWORD PTR [rbp-0x31],r14
   14000384a:	mov    rcx,QWORD PTR [rbp-0x29]
   14000384e:	test   rcx,rcx
   140003851:	je     0x140003864
   140003853:	mov    rax,QWORD PTR [rcx]
   140003856:	mov    rax,QWORD PTR [rax+0x10]
   14000385a:	call   QWORD PTR [rip+0x4d40]        # 0x1400085a0
   140003860:	mov    QWORD PTR [rbp-0x29],r14
   140003864:	test   rsi,rsi
   140003867:	je     0x140003872
   140003869:	mov    rcx,rsi
   14000386c:	call   QWORD PTR [rip+0x4ade]        # 0x140008350
   140003872:	test   r15,r15
   140003875:	je     0x140003880
   140003877:	mov    rcx,r15
   14000387a:	call   QWORD PTR [rip+0x4ad0]        # 0x140008350
   140003880:	test   rdi,rdi
   140003883:	je     0x140003895
   140003885:	mov    rax,QWORD PTR [rdi]
   140003888:	mov    rcx,rdi
   14000388b:	mov    rax,QWORD PTR [rax+0x10]
   14000388f:	call   QWORD PTR [rip+0x4d0b]        # 0x1400085a0
   140003895:	mov    eax,ebx
   140003897:	mov    rbx,QWORD PTR [rsp+0xd0]
   14000389f:	add    rsp,0x90
   1400038a6:	pop    r15
   1400038a8:	pop    r14
   1400038aa:	pop    r13
   1400038ac:	pop    r12
   1400038ae:	pop    rdi
   1400038af:	pop    rsi
   1400038b0:	pop    rbp
   1400038b1:	ret    
   1400038b2:	int3   
   1400038b3:	int3   
   1400038b4:	int3   
   1400038b5:	int3   
   1400038b6:	int3   
   1400038b7:	int3   
   1400038b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400038bd:	mov    QWORD PTR [rsp+0x10],rsi
   1400038c2:	push   rbp
   1400038c3:	push   rdi
   1400038c4:	push   r12
   1400038c6:	push   r14
   1400038c8:	push   r15
   1400038ca:	mov    rbp,rsp
   1400038cd:	sub    rsp,0x80
   1400038d4:	xor    r12d,r12d
   1400038d7:	mov    rbx,rcx
   1400038da:	lea    rcx,[rbp-0x38]
   1400038de:	mov    QWORD PTR [rbp-0x40],r12
   1400038e2:	mov    edi,r12d
   1400038e5:	mov    QWORD PTR [rbp-0x50],r12
   1400038e9:	mov    DWORD PTR [rbp+0x40],r12d
   1400038ed:	mov    r15,rdx
   1400038f0:	mov    QWORD PTR [rbp+0x48],r12
   1400038f4:	mov    QWORD PTR [rbp-0x48],r12
   1400038f8:	call   QWORD PTR [rip+0x4a4a]        # 0x140008348
   1400038fe:	lea    rcx,[rip+0x53fb]        # 0x140008d00
   140003905:	call   QWORD PTR [rip+0x4a4d]        # 0x140008358
   14000390b:	mov    r14,rax
   14000390e:	test   rax,rax
   140003911:	jne    0x14000391d
   140003913:	mov    ebx,0x80070008
   140003918:	jmp    0x140003aa3
   14000391d:	lea    rcx,[rip+0x506c]        # 0x140008990
   140003924:	call   QWORD PTR [rip+0x4a2e]        # 0x140008358
   14000392a:	mov    rdi,rax
   14000392d:	test   rax,rax
   140003930:	je     0x140003913
   140003932:	mov    rax,QWORD PTR [rbx]
   140003935:	lea    r9,[rbp-0x40]
   140003939:	mov    r8,rdi
   14000393c:	mov    rdx,r14
   14000393f:	mov    rcx,rbx
   140003942:	mov    rax,QWORD PTR [rax+0x18]
   140003946:	call   QWORD PTR [rip+0x4c54]        # 0x1400085a0
   14000394c:	mov    ebx,eax
   14000394e:	test   eax,eax
   140003950:	js     0x140003aa3
   140003956:	mov    rcx,QWORD PTR [rbp-0x40]
   14000395a:	lea    rdx,[rbp-0x50]
   14000395e:	mov    rax,QWORD PTR [rcx]
   140003961:	mov    rax,QWORD PTR [rax+0x20]
   140003965:	call   QWORD PTR [rip+0x4c35]        # 0x1400085a0
   14000396b:	mov    ebx,eax
   14000396d:	test   eax,eax
   14000396f:	js     0x140003aa3
   140003975:	mov    rcx,QWORD PTR [rbp-0x50]
   140003979:	lea    rdx,[rbp+0x40]
   14000397d:	mov    rax,QWORD PTR [rcx]
   140003980:	mov    rax,QWORD PTR [rax+0x18]
   140003984:	call   QWORD PTR [rip+0x4c16]        # 0x1400085a0
   14000398a:	mov    ebx,eax
   14000398c:	test   eax,eax
   14000398e:	js     0x140003aa3
   140003994:	mov    esi,r12d
   140003997:	cmp    DWORD PTR [rbp+0x40],r12d
   14000399b:	jbe    0x140003a54
   1400039a1:	lea    rcx,[rbp-0x38]
   1400039a5:	call   QWORD PTR [rip+0x4995]        # 0x140008340
   1400039ab:	mov    rcx,QWORD PTR [rbp-0x50]
   1400039af:	lea    r8,[rbp+0x48]
   1400039b3:	movsd  xmm1,QWORD PTR [rbp-0x28]
   1400039b8:	lea    rdx,[rbp-0x20]
   1400039bc:	mov    DWORD PTR [rbp-0x30],esi
   1400039bf:	mov    eax,0x13
   1400039c4:	mov    WORD PTR [rbp-0x38],ax
   1400039c8:	mov    rax,QWORD PTR [rcx]
   1400039cb:	movups xmm0,XMMWORD PTR [rbp-0x38]
   1400039cf:	movsd  QWORD PTR [rbp-0x10],xmm1
   1400039d4:	mov    rax,QWORD PTR [rax+0x20]
   1400039d8:	movaps XMMWORD PTR [rbp-0x20],xmm0
   1400039dc:	call   QWORD PTR [rip+0x4bbe]        # 0x1400085a0
   1400039e2:	mov    ebx,eax
   1400039e4:	test   eax,eax
   1400039e6:	js     0x140003aa3
   1400039ec:	mov    rcx,QWORD PTR [rbp+0x48]
   1400039f0:	lea    r8,[rbp-0x48]
   1400039f4:	lea    rdx,[rip+0x51d5]        # 0x140008bd0
   1400039fb:	call   0x1400023bc
   140003a00:	mov    ebx,eax
   140003a02:	test   eax,eax
   140003a04:	js     0x140003aa3
   140003a0a:	mov    rcx,QWORD PTR [rbp-0x48]
   140003a0e:	lea    rdx,[rip+0x51cb]        # 0x140008be0
   140003a15:	call   QWORD PTR [rip+0x4acd]        # 0x1400084e8
   140003a1b:	test   eax,eax
   140003a1d:	je     0x140003a54
   140003a1f:	mov    rcx,QWORD PTR [rbp-0x48]
   140003a23:	test   rcx,rcx
   140003a26:	je     0x140003a32
   140003a28:	call   QWORD PTR [rip+0x4922]        # 0x140008350
   140003a2e:	mov    QWORD PTR [rbp-0x48],r12
   140003a32:	mov    rcx,QWORD PTR [rbp+0x48]
   140003a36:	mov    rax,QWORD PTR [rcx]
   140003a39:	mov    rax,QWORD PTR [rax+0x10]
   140003a3d:	call   QWORD PTR [rip+0x4b5d]        # 0x1400085a0
   140003a43:	inc    esi
   140003a45:	mov    QWORD PTR [rbp+0x48],r12
   140003a49:	cmp    esi,DWORD PTR [rbp+0x40]
   140003a4c:	jb     0x1400039a1
   140003a52:	jmp    0x140003a5d
   140003a54:	mov    rax,QWORD PTR [rbp+0x48]
   140003a58:	test   rax,rax
   140003a5b:	jne    0x140003a9c
   140003a5d:	mov    rcx,QWORD PTR [rbp-0x50]
   140003a61:	lea    r8,[rbp+0x48]
   140003a65:	lea    rdx,[rip+0x5174]        # 0x140008be0
   140003a6c:	mov    rax,QWORD PTR [rcx]
   140003a6f:	mov    rax,QWORD PTR [rax+0x40]
   140003a73:	call   QWORD PTR [rip+0x4b27]        # 0x1400085a0
   140003a79:	mov    ebx,eax
   140003a7b:	test   eax,eax
   140003a7d:	js     0x140003aa3
   140003a7f:	mov    rcx,QWORD PTR [rbp-0x50]
   140003a83:	or     r8d,0xffffffff
   140003a87:	mov    rdx,QWORD PTR [rbp+0x48]
   140003a8b:	mov    rax,QWORD PTR [rcx]
   140003a8e:	mov    rax,QWORD PTR [rax+0x28]
   140003a92:	call   QWORD PTR [rip+0x4b08]        # 0x1400085a0
   140003a98:	mov    rax,QWORD PTR [rbp+0x48]
   140003a9c:	mov    QWORD PTR [rbp+0x48],r12
   140003aa0:	mov    QWORD PTR [r15],rax
   140003aa3:	mov    rcx,QWORD PTR [rbp-0x48]
   140003aa7:	test   rcx,rcx
   140003aaa:	je     0x140003ab6
   140003aac:	call   QWORD PTR [rip+0x489e]        # 0x140008350
   140003ab2:	mov    QWORD PTR [rbp-0x48],r12
   140003ab6:	mov    rcx,QWORD PTR [rbp+0x48]
   140003aba:	test   rcx,rcx
   140003abd:	je     0x140003ad0
   140003abf:	mov    rax,QWORD PTR [rcx]
   140003ac2:	mov    rax,QWORD PTR [rax+0x10]
   140003ac6:	call   QWORD PTR [rip+0x4ad4]        # 0x1400085a0
   140003acc:	mov    QWORD PTR [rbp+0x48],r12
   140003ad0:	mov    rcx,QWORD PTR [rbp-0x50]
   140003ad4:	test   rcx,rcx
   140003ad7:	je     0x140003aea
   140003ad9:	mov    rax,QWORD PTR [rcx]
   140003adc:	mov    rax,QWORD PTR [rax+0x10]
   140003ae0:	call   QWORD PTR [rip+0x4aba]        # 0x1400085a0
   140003ae6:	mov    QWORD PTR [rbp-0x50],r12
   140003aea:	mov    rcx,QWORD PTR [rbp-0x40]
   140003aee:	test   rcx,rcx
   140003af1:	je     0x140003b04
   140003af3:	mov    rax,QWORD PTR [rcx]
   140003af6:	mov    rax,QWORD PTR [rax+0x10]
   140003afa:	call   QWORD PTR [rip+0x4aa0]        # 0x1400085a0
   140003b00:	mov    QWORD PTR [rbp-0x40],r12
   140003b04:	test   rdi,rdi
   140003b07:	je     0x140003b12
   140003b09:	mov    rcx,rdi
   140003b0c:	call   QWORD PTR [rip+0x483e]        # 0x140008350
   140003b12:	test   r14,r14
   140003b15:	je     0x140003b20
   140003b17:	mov    rcx,r14
   140003b1a:	call   QWORD PTR [rip+0x4830]        # 0x140008350
   140003b20:	lea    r11,[rsp+0x80]
   140003b28:	mov    eax,ebx
   140003b2a:	mov    rbx,QWORD PTR [r11+0x30]
   140003b2e:	mov    rsi,QWORD PTR [r11+0x38]
   140003b32:	mov    rsp,r11
   140003b35:	pop    r15
   140003b37:	pop    r14
   140003b39:	pop    r12
   140003b3b:	pop    rdi
   140003b3c:	pop    rbp
   140003b3d:	ret    
   140003b3e:	int3   
   140003b3f:	int3   
   140003b40:	int3   
   140003b41:	int3   
   140003b42:	int3   
   140003b43:	int3   
   140003b44:	mov    rax,rsp
   140003b47:	mov    QWORD PTR [rax+0x10],rbx
   140003b4b:	mov    QWORD PTR [rax+0x18],rsi
   140003b4f:	mov    QWORD PTR [rax+0x20],rdi
   140003b53:	push   rbp
   140003b54:	push   r12
   140003b56:	push   r13
   140003b58:	push   r14
   140003b5a:	push   r15
   140003b5c:	lea    rbp,[rax-0x198]
   140003b63:	sub    rsp,0x270
   140003b6a:	mov    rax,QWORD PTR [rip+0x7807]        # 0x14000b378
   140003b71:	xor    rax,rsp
   140003b74:	mov    QWORD PTR [rbp+0x160],rax
   140003b7b:	xor    r13d,r13d
   140003b7e:	mov    ebx,0x100
   140003b83:	mov    r14d,r13d
   140003b86:	mov    DWORD PTR [rsp+0x44],r13d
   140003b8b:	mov    DWORD PTR [rsp+0x50],ebx
   140003b8f:	mov    r15d,r13d
   140003b92:	mov    QWORD PTR [rsp+0x48],r13
   140003b97:	mov    edi,r13d
   140003b9a:	mov    DWORD PTR [rsp+0x40],r13d
   140003b9f:	mov    r12,rcx
   140003ba2:	call   QWORD PTR [rip+0x4638]        # 0x1400081e0
   140003ba8:	mov    rcx,rax
   140003bab:	lea    r8,[rsp+0x48]
   140003bb0:	lea    edx,[r13+0x8]
   140003bb4:	call   QWORD PTR [rip+0x4566]        # 0x140008120
   140003bba:	test   eax,eax
   140003bbc:	jne    0x140003bd7
   140003bbe:	call   QWORD PTR [rip+0x471c]        # 0x1400082e0
   140003bc4:	movzx  ebx,ax
   140003bc7:	or     ebx,0x80070000
   140003bcd:	test   eax,eax
   140003bcf:	cmovle ebx,eax
   140003bd2:	jmp    0x140003d69
   140003bd7:	mov    ecx,0x400
   140003bdc:	mov    DWORD PTR [rsp+0x40],ecx
   140003be0:	call   0x14000703c
   140003be5:	mov    r15,rax
   140003be8:	test   rax,rax
   140003beb:	jne    0x140003bf7
   140003bed:	mov    ebx,0x80070008
   140003bf2:	jmp    0x140003d69
   140003bf7:	mov    r9d,DWORD PTR [rsp+0x40]
   140003bfc:	lea    rax,[rsp+0x40]
   140003c01:	mov    rcx,QWORD PTR [rsp+0x48]
   140003c06:	mov    r8,r15
   140003c09:	mov    edx,0x1
   140003c0e:	mov    QWORD PTR [rsp+0x20],rax
   140003c13:	call   QWORD PTR [rip+0x450f]        # 0x140008128
   140003c19:	test   eax,eax
   140003c1b:	je     0x140003bbe
   140003c1d:	mov    DWORD PTR [rsp+0x44],ebx
   140003c21:	mov    eax,0x2
   140003c26:	mul    rbx
   140003c29:	mov    rbx,0xffffffffffffffff
   140003c30:	cmovo  rax,rbx
   140003c34:	mov    rcx,rax
   140003c37:	call   0x14000703c
   140003c3c:	mov    r14,rax
   140003c3f:	test   rax,rax
   140003c42:	je     0x140003bed
   140003c44:	mov    rdx,QWORD PTR [r15]
   140003c47:	lea    rax,[rsp+0x54]
   140003c4c:	mov    QWORD PTR [rsp+0x30],rax
   140003c51:	lea    r9,[rsp+0x44]
   140003c56:	lea    rax,[rsp+0x50]
   140003c5b:	mov    r8,r14
   140003c5e:	mov    QWORD PTR [rsp+0x28],rax
   140003c63:	xor    ecx,ecx
   140003c65:	lea    rax,[rsp+0x60]
   140003c6a:	mov    QWORD PTR [rsp+0x20],rax
   140003c6f:	call   QWORD PTR [rip+0x44bb]        # 0x140008130
   140003c75:	test   eax,eax
   140003c77:	je     0x140003bbe
   140003c7d:	mov    rax,rbx
   140003c80:	inc    rax
   140003c83:	cmp    WORD PTR [r14+rax*2],r13w
   140003c88:	jne    0x140003c80
   140003c8a:	lea    rdx,[rsp+0x60]
   140003c8f:	mov    rcx,rbx
   140003c92:	inc    rcx
   140003c95:	cmp    WORD PTR [rdx+rcx*2],r13w
   140003c9a:	jne    0x140003c92
   140003c9c:	lea    esi,[rcx+0x2]
   140003c9f:	add    esi,eax
   140003ca1:	mov    eax,0x2
   140003ca6:	mul    rsi
   140003ca9:	cmovo  rax,rbx
   140003cad:	mov    rcx,rax
   140003cb0:	call   0x14000703c
   140003cb5:	mov    rdi,rax
   140003cb8:	test   rax,rax
   140003cbb:	je     0x140003bed
   140003cc1:	lea    rax,[rsi-0x1]
   140003cc5:	mov    r8d,0x7ffffffe
   140003ccb:	cmp    rax,r8
   140003cce:	mov    ebx,r13d
   140003cd1:	mov    ecx,0x80070057
   140003cd6:	cmova  ebx,ecx
   140003cd9:	test   ebx,ebx
   140003cdb:	js     0x140003d29
   140003cdd:	mov    edx,esi
   140003cdf:	mov    rcx,rdi
   140003ce2:	mov    ebx,r13d
   140003ce5:	test   rsi,rsi
   140003ce8:	je     0x140003d1a
   140003cea:	sub    r8,rsi
   140003ced:	lea    r9,[rsp+0x60]
   140003cf2:	sub    r9,rdi
   140003cf5:	lea    rax,[r8+rdx*1]
   140003cf9:	test   rax,rax
   140003cfc:	je     0x140003d15
   140003cfe:	movzx  eax,WORD PTR [r9+rcx*1]
   140003d03:	test   ax,ax
   140003d06:	je     0x140003d15
   140003d08:	mov    WORD PTR [rcx],ax
   140003d0b:	add    rcx,0x2
   140003d0f:	sub    rdx,0x1
   140003d13:	jne    0x140003cf5
   140003d15:	test   rdx,rdx
   140003d18:	jne    0x140003d23
   140003d1a:	sub    rcx,0x2
   140003d1e:	mov    ebx,0x8007007a
   140003d23:	mov    WORD PTR [rcx],r13w
   140003d27:	jmp    0x140003d32
   140003d29:	test   rsi,rsi
   140003d2c:	je     0x140003d32
   140003d2e:	mov    WORD PTR [rdi],r13w
   140003d32:	test   ebx,ebx
   140003d34:	js     0x140003d69
   140003d36:	lea    r8,[rip+0x49bb]        # 0x1400086f8
   140003d3d:	mov    rdx,rsi
   140003d40:	mov    rcx,rdi
   140003d43:	call   0x1400022f4
   140003d48:	mov    ebx,eax
   140003d4a:	test   eax,eax
   140003d4c:	js     0x140003d69
   140003d4e:	mov    r8,r14
   140003d51:	mov    rdx,rsi
   140003d54:	mov    rcx,rdi
   140003d57:	call   0x1400022f4
   140003d5c:	mov    ebx,eax
   140003d5e:	test   eax,eax
   140003d60:	js     0x140003d69
   140003d62:	mov    QWORD PTR [r12],rdi
   140003d66:	mov    rdi,r13
   140003d69:	mov    rcx,QWORD PTR [rsp+0x48]
   140003d6e:	test   rcx,rcx
   140003d71:	je     0x140003d7e
   140003d73:	call   QWORD PTR [rip+0x446f]        # 0x1400081e8
   140003d79:	mov    QWORD PTR [rsp+0x48],r13
   140003d7e:	test   r15,r15
   140003d81:	je     0x140003d8b
   140003d83:	mov    rcx,r15
   140003d86:	call   0x140007048
   140003d8b:	test   r14,r14
   140003d8e:	je     0x140003d98
   140003d90:	mov    rcx,r14
   140003d93:	call   0x140007048
   140003d98:	test   rdi,rdi
   140003d9b:	je     0x140003da5
   140003d9d:	mov    rcx,rdi
   140003da0:	call   0x140007048
   140003da5:	mov    eax,ebx
   140003da7:	mov    rcx,QWORD PTR [rbp+0x160]
   140003dae:	xor    rcx,rsp
   140003db1:	call   0x140007390
   140003db6:	lea    r11,[rsp+0x270]
   140003dbe:	mov    rbx,QWORD PTR [r11+0x38]
   140003dc2:	mov    rsi,QWORD PTR [r11+0x40]
   140003dc6:	mov    rdi,QWORD PTR [r11+0x48]
   140003dca:	mov    rsp,r11
   140003dcd:	pop    r15
   140003dcf:	pop    r14
   140003dd1:	pop    r13
   140003dd3:	pop    r12
   140003dd5:	pop    rbp
   140003dd6:	ret    
   140003dd7:	int3   
   140003dd8:	int3   
   140003dd9:	int3   
   140003dda:	int3   
   140003ddb:	int3   
   140003ddc:	int3   
   140003ddd:	int3   
   140003dde:	int3   
   140003ddf:	int3   
   140003de0:	rex push rbp
   140003de2:	push   rbx
   140003de3:	push   rsi
   140003de4:	push   rdi
   140003de5:	push   r14
   140003de7:	mov    rbp,rsp
   140003dea:	sub    rsp,0x40
   140003dee:	xor    esi,esi
   140003df0:	mov    rbx,rcx
   140003df3:	and    QWORD PTR [rbp+0x38],rsi
   140003df7:	lea    rcx,[rip+0x4b92]        # 0x140008990
   140003dfe:	and    QWORD PTR [rbp+0x48],rsi
   140003e02:	xor    edi,edi
   140003e04:	and    QWORD PTR [rbp+0x40],rsi
   140003e08:	and    QWORD PTR [rbp-0x10],rsi
   140003e0c:	mov    QWORD PTR [rbp-0x8],rsi
   140003e10:	call   QWORD PTR [rip+0x4542]        # 0x140008358
   140003e16:	mov    r14,rax
   140003e19:	test   rax,rax
   140003e1c:	jne    0x140003e28
   140003e1e:	mov    ebx,0x80070008
   140003e23:	jmp    0x1400040bc
   140003e28:	lea    rdx,[rbp-0x8]
   140003e2c:	mov    rcx,rbx
   140003e2f:	call   0x140003494
   140003e34:	mov    rsi,QWORD PTR [rbp-0x8]
   140003e38:	mov    ebx,eax
   140003e3a:	test   eax,eax
   140003e3c:	js     0x1400040a5
   140003e42:	lea    rcx,[rip+0x4f07]        # 0x140008d50
   140003e49:	call   QWORD PTR [rip+0x4509]        # 0x140008358
   140003e4f:	mov    rdi,rax
   140003e52:	test   rax,rax
   140003e55:	jne    0x140003e61
   140003e57:	mov    ebx,0x80070008
   140003e5c:	jmp    0x1400040a5
   140003e61:	mov    rax,QWORD PTR [rsi]
   140003e64:	lea    r9,[rbp+0x38]
   140003e68:	mov    r8,r14
   140003e6b:	mov    rdx,rdi
   140003e6e:	mov    rcx,rsi
   140003e71:	mov    rax,QWORD PTR [rax+0x18]
   140003e75:	call   QWORD PTR [rip+0x4725]        # 0x1400085a0
   140003e7b:	mov    ebx,eax
   140003e7d:	test   eax,eax
   140003e7f:	js     0x1400040a5
   140003e85:	mov    rcx,QWORD PTR [rbp+0x38]
   140003e89:	lea    r8,[rip+0x4a18]        # 0x1400088a8
   140003e90:	lea    rdx,[rip+0x4f41]        # 0x140008dd8
   140003e97:	call   0x14000245c
   140003e9c:	mov    ebx,eax
   140003e9e:	test   eax,eax
   140003ea0:	js     0x1400040a5
   140003ea6:	mov    rcx,QWORD PTR [rbp+0x38]
   140003eaa:	mov    rax,QWORD PTR [rcx]
   140003ead:	mov    rax,QWORD PTR [rax+0x10]
   140003eb1:	call   QWORD PTR [rip+0x46e9]        # 0x1400085a0
   140003eb7:	and    QWORD PTR [rbp+0x38],0x0
   140003ebc:	mov    rcx,rdi
   140003ebf:	call   QWORD PTR [rip+0x448b]        # 0x140008350
   140003ec5:	lea    rcx,[rip+0x4f24]        # 0x140008df0
   140003ecc:	call   QWORD PTR [rip+0x4486]        # 0x140008358
   140003ed2:	mov    rdi,rax
   140003ed5:	test   rax,rax
   140003ed8:	je     0x140003e57
   140003ede:	mov    rax,QWORD PTR [rsi]
   140003ee1:	lea    r9,[rbp+0x38]
   140003ee5:	mov    r8,r14
   140003ee8:	mov    rdx,rdi
   140003eeb:	mov    rcx,rsi
   140003eee:	mov    rax,QWORD PTR [rax+0x18]
   140003ef2:	call   QWORD PTR [rip+0x46a8]        # 0x1400085a0
   140003ef8:	mov    ebx,eax
   140003efa:	test   eax,eax
   140003efc:	js     0x1400040a5
   140003f02:	mov    rcx,QWORD PTR [rbp+0x38]
   140003f06:	lea    r8,[rip+0x4923]        # 0x140008830
   140003f0d:	lea    rdx,[rip+0x4ec4]        # 0x140008dd8
   140003f14:	call   0x14000245c
   140003f19:	mov    ebx,eax
   140003f1b:	test   eax,eax
   140003f1d:	js     0x1400040a5
   140003f23:	mov    rcx,QWORD PTR [rbp+0x38]
   140003f27:	mov    rax,QWORD PTR [rcx]
   140003f2a:	mov    rax,QWORD PTR [rax+0x10]
   140003f2e:	call   QWORD PTR [rip+0x466c]        # 0x1400085a0
   140003f34:	and    QWORD PTR [rbp+0x38],0x0
   140003f39:	mov    rcx,rdi
   140003f3c:	call   QWORD PTR [rip+0x440e]        # 0x140008350
   140003f42:	lea    rcx,[rip+0x4f27]        # 0x140008e70
   140003f49:	call   QWORD PTR [rip+0x4409]        # 0x140008358
   140003f4f:	mov    rdi,rax
   140003f52:	test   rax,rax
   140003f55:	je     0x140003e57
   140003f5b:	mov    rax,QWORD PTR [rsi]
   140003f5e:	lea    r9,[rbp+0x38]
   140003f62:	mov    r8,r14
   140003f65:	mov    rdx,rdi
   140003f68:	mov    rcx,rsi
   140003f6b:	mov    rax,QWORD PTR [rax+0x18]
   140003f6f:	call   QWORD PTR [rip+0x462b]        # 0x1400085a0
   140003f75:	mov    ebx,eax
   140003f77:	test   eax,eax
   140003f79:	js     0x1400040a5
   140003f7f:	mov    rcx,QWORD PTR [rbp+0x38]
   140003f83:	lea    rdx,[rbp+0x48]
   140003f87:	mov    rax,QWORD PTR [rcx]
   140003f8a:	mov    rax,QWORD PTR [rax+0x20]
   140003f8e:	call   QWORD PTR [rip+0x460c]        # 0x1400085a0
   140003f94:	mov    ebx,eax
   140003f96:	test   eax,eax
   140003f98:	js     0x1400040a5
   140003f9e:	mov    rcx,QWORD PTR [rbp+0x48]
   140003fa2:	mov    rax,QWORD PTR [rcx]
   140003fa5:	mov    rax,QWORD PTR [rax+0x38]
   140003fa9:	call   QWORD PTR [rip+0x45f1]        # 0x1400085a0
   140003faf:	mov    ebx,eax
   140003fb1:	test   eax,eax
   140003fb3:	js     0x1400040a5
   140003fb9:	mov    rcx,QWORD PTR [rbp+0x48]
   140003fbd:	lea    r8,[rbp+0x40]
   140003fc1:	lea    rdx,[rip+0x4ef8]        # 0x140008ec0
   140003fc8:	mov    rax,QWORD PTR [rcx]
   140003fcb:	mov    rax,QWORD PTR [rax+0x40]
   140003fcf:	call   QWORD PTR [rip+0x45cb]        # 0x1400085a0
   140003fd5:	mov    ebx,eax
   140003fd7:	test   eax,eax
   140003fd9:	js     0x1400040a5
   140003fdf:	mov    rcx,QWORD PTR [rbp+0x40]
   140003fe3:	lea    r8,[rip+0x4ede]        # 0x140008ec8
   140003fea:	lea    rdx,[rip+0x4ee7]        # 0x140008ed8
   140003ff1:	call   0x14000245c
   140003ff6:	mov    ebx,eax
   140003ff8:	test   eax,eax
   140003ffa:	js     0x1400040a5
   140004000:	lea    rcx,[rbp-0x10]
   140004004:	call   0x140003b44
   140004009:	mov    ebx,eax
   14000400b:	test   eax,eax
   14000400d:	js     0x140004095
   140004013:	mov    r8,QWORD PTR [rbp-0x10]
   140004017:	lea    rdx,[rip+0x4ed2]        # 0x140008ef0
   14000401e:	mov    rcx,QWORD PTR [rbp+0x40]
   140004022:	call   0x14000245c
   140004027:	mov    ebx,eax
   140004029:	test   eax,eax
   14000402b:	js     0x140004095
   14000402d:	mov    rcx,QWORD PTR [rbp+0x48]
   140004031:	or     r8d,0xffffffff
   140004035:	mov    rdx,QWORD PTR [rbp+0x40]
   140004039:	mov    rax,QWORD PTR [rcx]
   14000403c:	mov    rax,QWORD PTR [rax+0x28]
   140004040:	call   QWORD PTR [rip+0x455a]        # 0x1400085a0
   140004046:	mov    ebx,eax
   140004048:	test   eax,eax
   14000404a:	js     0x140004095
   14000404c:	mov    rcx,QWORD PTR [rbp+0x40]
   140004050:	mov    rax,QWORD PTR [rcx]
   140004053:	mov    rax,QWORD PTR [rax+0x10]
   140004057:	call   QWORD PTR [rip+0x4543]        # 0x1400085a0
   14000405d:	mov    rcx,QWORD PTR [rbp+0x38]
   140004061:	and    QWORD PTR [rbp+0x40],0x0
   140004066:	mov    rax,QWORD PTR [rcx]
   140004069:	mov    rax,QWORD PTR [rax+0x10]
   14000406d:	call   QWORD PTR [rip+0x452d]        # 0x1400085a0
   140004073:	and    QWORD PTR [rbp+0x38],0x0
   140004078:	mov    rcx,rdi
   14000407b:	call   QWORD PTR [rip+0x42cf]        # 0x140008350
   140004081:	mov    rax,QWORD PTR [rsi]
   140004084:	xor    edi,edi
   140004086:	mov    rcx,rsi
   140004089:	mov    rax,QWORD PTR [rax+0x38]
   14000408d:	call   QWORD PTR [rip+0x450d]        # 0x1400085a0
   140004093:	mov    ebx,eax
   140004095:	cmp    QWORD PTR [rbp-0x10],0x0
   14000409a:	je     0x1400040a5
   14000409c:	mov    rcx,QWORD PTR [rbp-0x10]
   1400040a0:	call   0x140007048
   1400040a5:	mov    rcx,r14
   1400040a8:	call   QWORD PTR [rip+0x42a2]        # 0x140008350
   1400040ae:	test   rdi,rdi
   1400040b1:	je     0x1400040bc
   1400040b3:	mov    rcx,rdi
   1400040b6:	call   QWORD PTR [rip+0x4294]        # 0x140008350
   1400040bc:	mov    rcx,QWORD PTR [rbp+0x40]
   1400040c0:	test   rcx,rcx
   1400040c3:	je     0x1400040d7
   1400040c5:	mov    rax,QWORD PTR [rcx]
   1400040c8:	mov    rax,QWORD PTR [rax+0x10]
   1400040cc:	call   QWORD PTR [rip+0x44ce]        # 0x1400085a0
   1400040d2:	and    QWORD PTR [rbp+0x40],0x0
   1400040d7:	mov    rcx,QWORD PTR [rbp+0x38]
   1400040db:	test   rcx,rcx
   1400040de:	je     0x1400040f2
   1400040e0:	mov    rax,QWORD PTR [rcx]
   1400040e3:	mov    rax,QWORD PTR [rax+0x10]
   1400040e7:	call   QWORD PTR [rip+0x44b3]        # 0x1400085a0
   1400040ed:	and    QWORD PTR [rbp+0x38],0x0
   1400040f2:	mov    rcx,QWORD PTR [rbp+0x48]
   1400040f6:	test   rcx,rcx
   1400040f9:	je     0x14000410d
   1400040fb:	mov    rax,QWORD PTR [rcx]
   1400040fe:	mov    rax,QWORD PTR [rax+0x10]
   140004102:	call   QWORD PTR [rip+0x4498]        # 0x1400085a0
   140004108:	and    QWORD PTR [rbp+0x48],0x0
   14000410d:	test   rsi,rsi
   140004110:	je     0x140004122
   140004112:	mov    rax,QWORD PTR [rsi]
   140004115:	mov    rcx,rsi
   140004118:	mov    rax,QWORD PTR [rax+0x10]
   14000411c:	call   QWORD PTR [rip+0x447e]        # 0x1400085a0
   140004122:	mov    eax,ebx
   140004124:	add    rsp,0x40
   140004128:	pop    r14
   14000412a:	pop    rdi
   14000412b:	pop    rsi
   14000412c:	pop    rbx
   14000412d:	pop    rbp
   14000412e:	ret    
   14000412f:	int3   
   140004130:	int3   
   140004131:	int3   
   140004132:	int3   
   140004133:	int3   
   140004134:	int3   
   140004135:	int3   
   140004136:	int3   
   140004137:	int3   
   140004138:	rex push rbx
   14000413a:	sub    rsp,0x50
   14000413e:	mov    rax,QWORD PTR [rip+0x7233]        # 0x14000b378
   140004145:	xor    rax,rsp
   140004148:	mov    QWORD PTR [rsp+0x48],rax
   14000414d:	xor    edx,edx
   14000414f:	mov    rbx,rcx
   140004152:	lea    rcx,[rsp+0x20]
   140004157:	lea    r8d,[rdx+0x24]
   14000415b:	call   0x140007c0e
   140004160:	lea    r8,[rsp+0x20]
   140004165:	xor    edx,edx
   140004167:	mov    rcx,rbx
   14000416a:	call   QWORD PTR [rip+0x4088]        # 0x1400081f8
   140004170:	test   eax,eax
   140004172:	je     0x140004182
   140004174:	test   BYTE PTR [rsp+0x20],0x10
   140004179:	jne    0x140004182
   14000417b:	mov    eax,0x1
   140004180:	jmp    0x140004184
   140004182:	xor    eax,eax
   140004184:	mov    rcx,QWORD PTR [rsp+0x48]
   140004189:	xor    rcx,rsp
   14000418c:	call   0x140007390
   140004191:	add    rsp,0x50
   140004195:	pop    rbx
   140004196:	ret    
   140004197:	int3   
   140004198:	int3   
   140004199:	int3   
   14000419a:	int3   
   14000419b:	int3   
   14000419c:	int3   
   14000419d:	int3   
   14000419e:	int3   
   14000419f:	int3   
   1400041a0:	mov    rax,rsp
   1400041a3:	mov    QWORD PTR [rax+0x8],rbx
   1400041a7:	mov    QWORD PTR [rax+0x10],rbp
   1400041ab:	mov    QWORD PTR [rax+0x18],rsi
   1400041af:	mov    QWORD PTR [rax+0x20],rdi
   1400041b3:	push   r12
   1400041b5:	push   r14
   1400041b7:	push   r15
   1400041b9:	sub    rsp,0x20
   1400041bd:	xor    ebp,ebp
   1400041bf:	mov    r12d,edx
   1400041c2:	xor    edi,edi
   1400041c4:	mov    r15,rcx
   1400041c7:	mov    esi,0x40
   1400041cc:	mov    r8d,esi
   1400041cf:	mov    rcx,0xffffffffffffffff
   1400041d6:	mov    eax,0x2
   1400041db:	mul    r8
   1400041de:	cmovo  rax,rcx
   1400041e2:	mov    rcx,rax
   1400041e5:	call   0x14000703c
   1400041ea:	mov    rbx,rax
   1400041ed:	test   rax,rax
   1400041f0:	je     0x14000427b
   1400041f6:	xor    ecx,ecx
   1400041f8:	call   QWORD PTR [rip+0x40ea]        # 0x1400082e8
   1400041fe:	mov    r9d,esi
   140004201:	mov    r8,rbx
   140004204:	mov    rcx,rax
   140004207:	mov    edx,r12d
   14000420a:	call   QWORD PTR [rip+0x4178]        # 0x140008388
   140004210:	mov    r14d,eax
   140004213:	test   eax,eax
   140004215:	jne    0x14000422f
   140004217:	call   QWORD PTR [rip+0x40c3]        # 0x1400082e0
   14000421d:	movzx  edi,ax
   140004220:	or     edi,0x80070000
   140004226:	test   eax,eax
   140004228:	cmovle edi,eax
   14000422b:	test   edi,edi
   14000422d:	js     0x14000426c
   14000422f:	lea    eax,[r14+0x1]
   140004233:	cmp    eax,esi
   140004235:	jne    0x140004252
   140004237:	mov    rcx,rbx
   14000423a:	call   0x140007048
   14000423f:	xor    ebx,ebx
   140004241:	add    esi,esi
   140004243:	cmp    esi,0x10000
   140004249:	jbe    0x140004257
   14000424b:	mov    edi,0x80070057
   140004250:	jmp    0x140004280
   140004252:	mov    ebp,0x1
   140004257:	test   ebp,ebp
   140004259:	je     0x1400041cc
   14000425f:	mov    rdx,rbx
   140004262:	mov    rcx,r15
   140004265:	call   0x140001ae4
   14000426a:	xor    ebx,ebx
   14000426c:	test   rbx,rbx
   14000426f:	je     0x140004280
   140004271:	mov    rcx,rbx
   140004274:	call   0x140007048
   140004279:	jmp    0x140004280
   14000427b:	mov    edi,0x80070008
   140004280:	mov    rbx,QWORD PTR [rsp+0x40]
   140004285:	mov    eax,edi
   140004287:	mov    rdi,QWORD PTR [rsp+0x58]
   14000428c:	mov    rbp,QWORD PTR [rsp+0x48]
   140004291:	mov    rsi,QWORD PTR [rsp+0x50]
   140004296:	add    rsp,0x20
   14000429a:	pop    r15
   14000429c:	pop    r14
   14000429e:	pop    r12
   1400042a0:	ret    
   1400042a1:	int3   
   1400042a2:	int3   
   1400042a3:	int3   
   1400042a4:	int3   
   1400042a5:	int3   
   1400042a6:	int3   
   1400042a7:	int3   
   1400042a8:	test   edx,edx
   1400042aa:	je     0x1400043e0
   1400042b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400042b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400042ba:	push   rdi
   1400042bb:	sub    rsp,0x2a0
   1400042c2:	mov    rax,QWORD PTR [rip+0x70af]        # 0x14000b378
   1400042c9:	xor    rax,rsp
   1400042cc:	mov    QWORD PTR [rsp+0x290],rax
   1400042d4:	xor    esi,esi
   1400042d6:	mov    ebx,ecx
   1400042d8:	test   ecx,ecx
   1400042da:	jne    0x1400042e5
   1400042dc:	test   r8d,r8d
   1400042df:	je     0x1400043bc
   1400042e5:	call   QWORD PTR [rip+0x3f15]        # 0x140008200
   1400042eb:	mov    r8d,0x104
   1400042f1:	lea    rdx,[rsp+0x80]
   1400042f9:	xor    ecx,ecx
   1400042fb:	mov    edi,eax
   1400042fd:	call   QWORD PTR [rip+0x3f05]        # 0x140008208
   140004303:	test   eax,eax
   140004305:	je     0x1400043bc
   14000430b:	mov    edx,0x5c
   140004310:	lea    rcx,[rsp+0x80]
   140004318:	call   QWORD PTR [rip+0x41a2]        # 0x1400084c0
   14000431e:	lea    rdx,[rsp+0x80]
   140004326:	mov    QWORD PTR [rsp+0x30],rsi
   14000432b:	lea    rcx,[rsp+0x30]
   140004330:	mov    WORD PTR [rax+0x2],si
   140004334:	call   0x140001ae4
   140004339:	lea    rdx,[rip+0x4bc0]        # 0x140008f00
   140004340:	lea    rcx,[rsp+0x30]
   140004345:	call   0x140001ba0
   14000434a:	lea    rcx,[rsp+0x40]
   14000434f:	mov    r9d,edi
   140004352:	lea    r8,[rip+0x4bcf]        # 0x140008f28
   140004359:	mov    edx,0x20
   14000435e:	test   ebx,ebx
   140004360:	jne    0x140004369
   140004362:	lea    r8,[rip+0x4bc7]        # 0x140008f30
   140004369:	call   QWORD PTR [rip+0x4161]        # 0x1400084d0
   14000436f:	mov    rbx,QWORD PTR [rsp+0x30]
   140004374:	lea    r8,[rip+0x4379]        # 0x1400086f4
   14000437b:	test   rbx,rbx
   14000437e:	mov    DWORD PTR [rsp+0x28],0x1
   140004386:	lea    r9,[rsp+0x40]
   14000438b:	mov    QWORD PTR [rsp+0x20],rsi
   140004390:	cmovne r8,rbx
   140004394:	lea    rdx,[rip+0x4bbd]        # 0x140008f58
   14000439b:	xor    ecx,ecx
   14000439d:	call   QWORD PTR [rip+0x3fc5]        # 0x140008368
   1400043a3:	test   rbx,rbx
   1400043a6:	je     0x1400043bc
   1400043a8:	call   QWORD PTR [rip+0x3f72]        # 0x140008320
   1400043ae:	mov    r8,rbx
   1400043b1:	xor    edx,edx
   1400043b3:	mov    rcx,rax
   1400043b6:	call   QWORD PTR [rip+0x3f5c]        # 0x140008318
   1400043bc:	mov    rcx,QWORD PTR [rsp+0x290]
   1400043c4:	xor    rcx,rsp
   1400043c7:	call   0x140007390
   1400043cc:	lea    r11,[rsp+0x2a0]
   1400043d4:	mov    rbx,QWORD PTR [r11+0x10]
   1400043d8:	mov    rsi,QWORD PTR [r11+0x18]
   1400043dc:	mov    rsp,r11
   1400043df:	pop    rdi
   1400043e0:	ret    
   1400043e1:	int3   
   1400043e2:	int3   
   1400043e3:	int3   
   1400043e4:	int3   
   1400043e5:	int3   
   1400043e6:	int3   
   1400043e7:	int3   
   1400043e8:	mov    rax,rsp
   1400043eb:	push   rbp
   1400043ec:	push   rsi
   1400043ed:	push   rdi
   1400043ee:	mov    rbp,rsp
   1400043f1:	sub    rsp,0x60
   1400043f5:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   1400043fd:	mov    QWORD PTR [rax+0x8],rbx
   140004401:	mov    rsi,rdx
   140004404:	mov    edi,ecx
   140004406:	xor    ebx,ebx
   140004408:	mov    QWORD PTR [rbp-0x18],rbx
   14000440c:	and    QWORD PTR [rbp+0x30],rbx
   140004410:	and    QWORD PTR [rbp+0x38],rbx
   140004414:	lea    rdx,[rbp+0x38]
   140004418:	xor    ecx,ecx
   14000441a:	call   QWORD PTR [rip+0x3f18]        # 0x140008338
   140004420:	test   eax,eax
   140004422:	js     0x140004453
   140004424:	mov    rcx,QWORD PTR [rbp+0x38]
   140004428:	test   rcx,rcx
   14000442b:	je     0x140004453
   14000442d:	mov    rax,QWORD PTR [rcx]
   140004430:	lea    rdx,[rbp+0x30]
   140004434:	mov    rax,QWORD PTR [rax+0x28]
   140004438:	call   QWORD PTR [rip+0x4162]        # 0x1400085a0
   14000443e:	test   eax,eax
   140004440:	js     0x140004453
   140004442:	mov    rdx,QWORD PTR [rbp+0x30]
   140004446:	mov    rcx,rsi
   140004449:	call   0x140001ae4
   14000444e:	jmp    0x1400044d7
   140004453:	test   edi,edi
   140004455:	jns    0x140004468
   140004457:	mov    eax,edi
   140004459:	and    eax,0x1fff0000
   14000445e:	cmp    eax,0x70000
   140004463:	jne    0x140004468
   140004465:	movzx  edi,di
   140004468:	and    QWORD PTR [rbp-0x20],0x0
   14000446d:	and    QWORD PTR [rsp+0x30],0x0
   140004473:	and    DWORD PTR [rsp+0x28],0x0
   140004478:	lea    rax,[rbp-0x20]
   14000447c:	mov    QWORD PTR [rsp+0x20],rax
   140004481:	xor    r9d,r9d
   140004484:	mov    r8d,edi
   140004487:	xor    edx,edx
   140004489:	mov    ecx,0x1100
   14000448e:	call   QWORD PTR [rip+0x3e64]        # 0x1400082f8
   140004494:	mov    rdx,QWORD PTR [rbp-0x20]
   140004498:	test   rdx,rdx
   14000449b:	je     0x1400044af
   14000449d:	mov    rcx,rsi
   1400044a0:	call   0x140001ae4
   1400044a5:	mov    rcx,QWORD PTR [rbp-0x20]
   1400044a9:	call   QWORD PTR [rip+0x3e41]        # 0x1400082f0
   1400044af:	mov    edx,0x272f
   1400044b4:	lea    rcx,[rbp-0x18]
   1400044b8:	call   0x1400041a0
   1400044bd:	lea    rdx,[rip+0x4230]        # 0x1400086f4
   1400044c4:	mov    rbx,QWORD PTR [rbp-0x18]
   1400044c8:	test   rbx,rbx
   1400044cb:	cmovne rdx,rbx
   1400044cf:	mov    rcx,rsi
   1400044d2:	call   0x140001ba0
   1400044d7:	mov    rcx,QWORD PTR [rbp+0x30]
   1400044db:	test   rcx,rcx
   1400044de:	je     0x1400044eb
   1400044e0:	call   QWORD PTR [rip+0x3e6a]        # 0x140008350
   1400044e6:	and    QWORD PTR [rbp+0x30],0x0
   1400044eb:	mov    rcx,QWORD PTR [rbp+0x38]
   1400044ef:	test   rcx,rcx
   1400044f2:	je     0x140004506
   1400044f4:	mov    rax,QWORD PTR [rcx]
   1400044f7:	mov    rax,QWORD PTR [rax+0x10]
   1400044fb:	call   QWORD PTR [rip+0x409f]        # 0x1400085a0
   140004501:	and    QWORD PTR [rbp+0x38],0x0
   140004506:	test   rbx,rbx
   140004509:	je     0x14000451f
   14000450b:	call   QWORD PTR [rip+0x3e0f]        # 0x140008320
   140004511:	mov    rcx,rax
   140004514:	mov    r8,rbx
   140004517:	xor    edx,edx
   140004519:	call   QWORD PTR [rip+0x3df9]        # 0x140008318
   14000451f:	mov    rbx,QWORD PTR [rsp+0x80]
   140004527:	add    rsp,0x60
   14000452b:	pop    rdi
   14000452c:	pop    rsi
   14000452d:	pop    rbp
   14000452e:	ret    
   14000452f:	int3   
   140004530:	int3   
   140004531:	int3   
   140004532:	int3   
   140004533:	int3   
   140004534:	int3   
   140004535:	int3   
   140004536:	int3   
   140004537:	int3   
   140004538:	mov    QWORD PTR [rsp+0x8],rbx
   14000453d:	mov    QWORD PTR [rsp+0x10],rbp
   140004542:	mov    QWORD PTR [rsp+0x18],rsi
   140004547:	push   rdi
   140004548:	sub    rsp,0x20
   14000454c:	mov    rbp,rdx
   14000454f:	xor    r9d,r9d
   140004552:	xor    edx,edx
   140004554:	xor    r8d,r8d
   140004557:	mov    rsi,rcx
   14000455a:	call   QWORD PTR [rip+0x3cc0]        # 0x140008220
   140004560:	mov    ebx,eax
   140004562:	test   eax,eax
   140004564:	jne    0x14000457c
   140004566:	call   QWORD PTR [rip+0x3d74]        # 0x1400082e0
   14000456c:	movzx  ebx,ax
   14000456f:	or     ebx,0x80070000
   140004575:	test   eax,eax
   140004577:	cmovle ebx,eax
   14000457a:	jmp    0x1400045e6
   14000457c:	lea    ecx,[rax+0x1]
   14000457f:	mov    eax,0x2
   140004584:	mul    rcx
   140004587:	mov    rcx,0xffffffffffffffff
   14000458e:	cmovo  rax,rcx
   140004592:	mov    rcx,rax
   140004595:	call   0x14000703c
   14000459a:	xor    r9d,r9d
   14000459d:	mov    r8,rax
   1400045a0:	mov    edx,ebx
   1400045a2:	mov    rcx,rsi
   1400045a5:	mov    rdi,rax
   1400045a8:	call   QWORD PTR [rip+0x3c72]        # 0x140008220
   1400045ae:	test   eax,eax
   1400045b0:	je     0x1400045c5
   1400045b2:	cmp    eax,ebx
   1400045b4:	ja     0x1400045c5
   1400045b6:	mov    rdx,rdi
   1400045b9:	mov    rcx,rbp
   1400045bc:	call   0x140001ae4
   1400045c1:	mov    ebx,eax
   1400045c3:	jmp    0x1400045d9
   1400045c5:	call   QWORD PTR [rip+0x3d15]        # 0x1400082e0
   1400045cb:	movzx  ebx,ax
   1400045ce:	or     ebx,0x80070000
   1400045d4:	test   eax,eax
   1400045d6:	cmovle ebx,eax
   1400045d9:	test   rdi,rdi
   1400045dc:	je     0x1400045e6
   1400045de:	mov    rcx,rdi
   1400045e1:	call   0x140007048
   1400045e6:	mov    rbp,QWORD PTR [rsp+0x38]
   1400045eb:	mov    eax,ebx
   1400045ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045f2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400045f7:	add    rsp,0x20
   1400045fb:	pop    rdi
   1400045fc:	ret    
   1400045fd:	int3   
   1400045fe:	int3   
   1400045ff:	int3   
   140004600:	int3   
   140004601:	int3   
   140004602:	int3   
   140004603:	int3   
   140004604:	mov    QWORD PTR [rsp+0x10],rbx
   140004609:	push   rbp
   14000460a:	push   rsi
   14000460b:	push   rdi
   14000460c:	push   r12
   14000460e:	push   r13
   140004610:	push   r14
   140004612:	push   r15
   140004614:	lea    rbp,[rsp-0x27]
   140004619:	sub    rsp,0xa0
   140004620:	xor    r13d,r13d
   140004623:	mov    r12,r8
   140004626:	mov    QWORD PTR [rbp-0x21],r13
   14000462a:	mov    r15,rdx
   14000462d:	mov    QWORD PTR [rbp-0x29],r13
   140004631:	mov    rbx,rcx
   140004634:	mov    QWORD PTR [rbp-0x31],r13
   140004638:	mov    edi,r13d
   14000463b:	mov    QWORD PTR [rbp+0x7f],r13
   14000463f:	mov    esi,r13d
   140004642:	mov    QWORD PTR [rbp-0x41],r13
   140004646:	mov    r14d,r13d
   140004649:	mov    QWORD PTR [rbp-0x39],r13
   14000464d:	mov    QWORD PTR [rbp-0x49],r13
   140004651:	mov    QWORD PTR [rbp+0x67],r13
   140004655:	test   rcx,rcx
   140004658:	je     0x1400048af
   14000465e:	mov    rax,QWORD PTR [rcx]
   140004661:	test   rax,rax
   140004664:	je     0x1400048af
   14000466a:	cmp    WORD PTR [rax],r13w
   14000466e:	je     0x1400048af
   140004674:	lea    rcx,[rip+0x42d5]        # 0x140008950
   14000467b:	call   QWORD PTR [rip+0x3cd7]        # 0x140008358
   140004681:	lea    rcx,[rbp-0x19]
   140004685:	mov    r14,rax
   140004688:	call   QWORD PTR [rip+0x3cba]        # 0x140008348
   14000468e:	test   r14,r14
   140004691:	jne    0x14000469d
   140004693:	mov    ebx,0x80070008
   140004698:	jmp    0x1400048d0
   14000469d:	lea    rcx,[rip+0x42ec]        # 0x140008990
   1400046a4:	call   QWORD PTR [rip+0x3cae]        # 0x140008358
   1400046aa:	mov    rsi,rax
   1400046ad:	test   rax,rax
   1400046b0:	jne    0x1400046bc
   1400046b2:	mov    ebx,0x80070008
   1400046b7:	jmp    0x1400048b4
   1400046bc:	cmp    QWORD PTR [rbx],r13
   1400046bf:	lea    rcx,[rip+0x402e]        # 0x1400086f4
   1400046c6:	lea    rdx,[rbp-0x21]
   1400046ca:	cmovne rcx,QWORD PTR [rbx]
   1400046ce:	call   0x140003494
   1400046d3:	mov    rdi,QWORD PTR [rbp-0x21]
   1400046d7:	mov    ebx,eax
   1400046d9:	test   eax,eax
   1400046db:	js     0x1400048b4
   1400046e1:	mov    rax,QWORD PTR [rdi]
   1400046e4:	lea    r9,[rbp-0x29]
   1400046e8:	mov    r8,rsi
   1400046eb:	mov    rdx,r14
   1400046ee:	mov    rcx,rdi
   1400046f1:	mov    rax,QWORD PTR [rax+0x18]
   1400046f5:	call   QWORD PTR [rip+0x3ea5]        # 0x1400085a0
   1400046fb:	mov    ebx,eax
   1400046fd:	test   eax,eax
   1400046ff:	js     0x1400048b4
   140004705:	mov    rcx,QWORD PTR [rbp-0x29]
   140004709:	lea    rdx,[rbp-0x31]
   14000470d:	mov    rax,QWORD PTR [rcx]
   140004710:	mov    rax,QWORD PTR [rax+0x20]
   140004714:	call   QWORD PTR [rip+0x3e86]        # 0x1400085a0
   14000471a:	mov    ebx,eax
   14000471c:	test   eax,eax
   14000471e:	js     0x1400048b4
   140004724:	lea    rcx,[rbp-0x19]
   140004728:	call   QWORD PTR [rip+0x3c12]        # 0x140008340
   14000472e:	mov    rcx,QWORD PTR [rbp-0x31]
   140004732:	lea    r8,[rbp+0x7f]
   140004736:	movsd  xmm1,QWORD PTR [rbp-0x9]
   14000473b:	lea    rdx,[rbp+0x7]
   14000473f:	mov    DWORD PTR [rbp-0x11],r13d
   140004743:	mov    eax,0x13
   140004748:	mov    WORD PTR [rbp-0x19],ax
   14000474c:	mov    rax,QWORD PTR [rcx]
   14000474f:	movups xmm0,XMMWORD PTR [rbp-0x19]
   140004753:	movsd  QWORD PTR [rbp+0x17],xmm1
   140004758:	mov    rax,QWORD PTR [rax+0x20]
   14000475c:	movaps XMMWORD PTR [rbp+0x7],xmm0
   140004760:	call   QWORD PTR [rip+0x3e3a]        # 0x1400085a0
   140004766:	mov    ebx,eax
   140004768:	test   eax,eax
   14000476a:	js     0x1400048b4
   140004770:	mov    rcx,QWORD PTR [rbp-0x49]
   140004774:	test   rcx,rcx
   140004777:	je     0x140004783
   140004779:	call   QWORD PTR [rip+0x3bd1]        # 0x140008350
   14000477f:	mov    QWORD PTR [rbp-0x49],r13
   140004783:	mov    rcx,QWORD PTR [rbp+0x7f]
   140004787:	lea    r8,[rbp-0x49]
   14000478b:	lea    rdx,[rip+0x443e]        # 0x140008bd0
   140004792:	call   0x1400023bc
   140004797:	mov    ebx,eax
   140004799:	test   eax,eax
   14000479b:	js     0x1400048b4
   1400047a1:	mov    rdx,QWORD PTR [rbp-0x49]
   1400047a5:	mov    rcx,r15
   1400047a8:	call   0x140001ae4
   1400047ad:	mov    ebx,eax
   1400047af:	test   eax,eax
   1400047b1:	js     0x1400048b4
   1400047b7:	mov    rcx,QWORD PTR [rbp+0x7f]
   1400047bb:	lea    rdx,[rbp-0x41]
   1400047bf:	mov    rax,QWORD PTR [rcx]
   1400047c2:	mov    rax,QWORD PTR [rax+0x20]
   1400047c6:	call   QWORD PTR [rip+0x3dd4]        # 0x1400085a0
   1400047cc:	mov    ebx,eax
   1400047ce:	test   eax,eax
   1400047d0:	js     0x1400048b4
   1400047d6:	lea    rcx,[rbp-0x19]
   1400047da:	call   QWORD PTR [rip+0x3b60]        # 0x140008340
   1400047e0:	mov    rcx,QWORD PTR [rbp-0x41]
   1400047e4:	lea    r8,[rbp-0x39]
   1400047e8:	movsd  xmm1,QWORD PTR [rbp-0x9]
   1400047ed:	lea    rdx,[rbp+0x7]
   1400047f1:	mov    DWORD PTR [rbp-0x11],r13d
   1400047f5:	mov    eax,0x13
   1400047fa:	mov    WORD PTR [rbp-0x19],ax
   1400047fe:	mov    rax,QWORD PTR [rcx]
   140004801:	movups xmm0,XMMWORD PTR [rbp-0x19]
   140004805:	movsd  QWORD PTR [rbp+0x17],xmm1
   14000480a:	mov    rax,QWORD PTR [rax+0x20]
   14000480e:	movaps XMMWORD PTR [rbp+0x7],xmm0
   140004812:	call   QWORD PTR [rip+0x3d88]        # 0x1400085a0
   140004818:	mov    ebx,eax
   14000481a:	test   eax,eax
   14000481c:	js     0x1400048b4
   140004822:	mov    rcx,QWORD PTR [rbp+0x67]
   140004826:	test   rcx,rcx
   140004829:	je     0x140004835
   14000482b:	call   QWORD PTR [rip+0x3b1f]        # 0x140008350
   140004831:	mov    QWORD PTR [rbp+0x67],r13
   140004835:	mov    rcx,QWORD PTR [rbp-0x39]
   140004839:	lea    r8,[rbp+0x67]
   14000483d:	lea    rdx,[rip+0x3f14]        # 0x140008758
   140004844:	call   0x1400023bc
   140004849:	mov    ebx,eax
   14000484b:	test   eax,eax
   14000484d:	js     0x1400048b4
   14000484f:	cmp    QWORD PTR [rbp+0x67],r13
   140004853:	jne    0x14000485c
   140004855:	mov    ebx,0x80004005
   14000485a:	jmp    0x1400048b4
   14000485c:	mov    rdx,QWORD PTR [rbp+0x67]
   140004860:	mov    rcx,r12
   140004863:	call   0x140001ae4
   140004868:	mov    ebx,eax
   14000486a:	test   eax,eax
   14000486c:	js     0x1400048b4
   14000486e:	mov    rcx,QWORD PTR [rbp-0x39]
   140004872:	mov    rax,QWORD PTR [rcx]
   140004875:	mov    rax,QWORD PTR [rax+0x10]
   140004879:	call   QWORD PTR [rip+0x3d21]        # 0x1400085a0
   14000487f:	mov    rcx,QWORD PTR [rbp-0x41]
   140004883:	mov    QWORD PTR [rbp-0x39],r13
   140004887:	mov    rax,QWORD PTR [rcx]
   14000488a:	mov    rax,QWORD PTR [rax+0x10]
   14000488e:	call   QWORD PTR [rip+0x3d0c]        # 0x1400085a0
   140004894:	mov    rcx,QWORD PTR [rbp+0x7f]
   140004898:	mov    QWORD PTR [rbp-0x41],r13
   14000489c:	mov    rax,QWORD PTR [rcx]
   14000489f:	mov    rax,QWORD PTR [rax+0x10]
   1400048a3:	call   QWORD PTR [rip+0x3cf7]        # 0x1400085a0
   1400048a9:	mov    QWORD PTR [rbp+0x7f],r13
   1400048ad:	jmp    0x1400048b4
   1400048af:	mov    ebx,0x80070057
   1400048b4:	test   r14,r14
   1400048b7:	je     0x1400048c2
   1400048b9:	mov    rcx,r14
   1400048bc:	call   QWORD PTR [rip+0x3a8e]        # 0x140008350
   1400048c2:	test   rsi,rsi
   1400048c5:	je     0x1400048d0
   1400048c7:	mov    rcx,rsi
   1400048ca:	call   QWORD PTR [rip+0x3a80]        # 0x140008350
   1400048d0:	mov    rcx,QWORD PTR [rbp-0x49]
   1400048d4:	test   rcx,rcx
   1400048d7:	je     0x1400048e3
   1400048d9:	call   QWORD PTR [rip+0x3a71]        # 0x140008350
   1400048df:	mov    QWORD PTR [rbp-0x49],r13
   1400048e3:	mov    rcx,QWORD PTR [rbp+0x67]
   1400048e7:	test   rcx,rcx
   1400048ea:	je     0x1400048f6
   1400048ec:	call   QWORD PTR [rip+0x3a5e]        # 0x140008350
   1400048f2:	mov    QWORD PTR [rbp+0x67],r13
   1400048f6:	mov    rcx,QWORD PTR [rbp-0x41]
   1400048fa:	test   rcx,rcx
   1400048fd:	je     0x140004910
   1400048ff:	mov    rax,QWORD PTR [rcx]
   140004902:	mov    rax,QWORD PTR [rax+0x10]
   140004906:	call   QWORD PTR [rip+0x3c94]        # 0x1400085a0
   14000490c:	mov    QWORD PTR [rbp-0x41],r13
   140004910:	mov    rcx,QWORD PTR [rbp-0x39]
   140004914:	test   rcx,rcx
   140004917:	je     0x14000492a
   140004919:	mov    rax,QWORD PTR [rcx]
   14000491c:	mov    rax,QWORD PTR [rax+0x10]
   140004920:	call   QWORD PTR [rip+0x3c7a]        # 0x1400085a0
   140004926:	mov    QWORD PTR [rbp-0x39],r13
   14000492a:	mov    rcx,QWORD PTR [rbp+0x7f]
   14000492e:	test   rcx,rcx
   140004931:	je     0x140004944
   140004933:	mov    rax,QWORD PTR [rcx]
   140004936:	mov    rax,QWORD PTR [rax+0x10]
   14000493a:	call   QWORD PTR [rip+0x3c60]        # 0x1400085a0
   140004940:	mov    QWORD PTR [rbp+0x7f],r13
   140004944:	mov    rcx,QWORD PTR [rbp-0x31]
   140004948:	test   rcx,rcx
   14000494b:	je     0x14000495e
   14000494d:	mov    rax,QWORD PTR [rcx]
   140004950:	mov    rax,QWORD PTR [rax+0x10]
   140004954:	call   QWORD PTR [rip+0x3c46]        # 0x1400085a0
   14000495a:	mov    QWORD PTR [rbp-0x31],r13
   14000495e:	mov    rcx,QWORD PTR [rbp-0x29]
   140004962:	test   rcx,rcx
   140004965:	je     0x140004978
   140004967:	mov    rax,QWORD PTR [rcx]
   14000496a:	mov    rax,QWORD PTR [rax+0x10]
   14000496e:	call   QWORD PTR [rip+0x3c2c]        # 0x1400085a0
   140004974:	mov    QWORD PTR [rbp-0x29],r13
   140004978:	test   rdi,rdi
   14000497b:	je     0x14000498d
   14000497d:	mov    rax,QWORD PTR [rdi]
   140004980:	mov    rcx,rdi
   140004983:	mov    rax,QWORD PTR [rax+0x10]
   140004987:	call   QWORD PTR [rip+0x3c13]        # 0x1400085a0
   14000498d:	mov    eax,ebx
   14000498f:	mov    rbx,QWORD PTR [rsp+0xe8]
   140004997:	add    rsp,0xa0
   14000499e:	pop    r15
   1400049a0:	pop    r14
   1400049a2:	pop    r13
   1400049a4:	pop    r12
   1400049a6:	pop    rdi
   1400049a7:	pop    rsi
   1400049a8:	pop    rbp
   1400049a9:	ret    
   1400049aa:	int3   
   1400049ab:	int3   
   1400049ac:	int3   
   1400049ad:	int3   
   1400049ae:	int3   
   1400049af:	int3   
   1400049b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400049b5:	push   rbp
   1400049b6:	push   rsi
   1400049b7:	push   rdi
   1400049b8:	push   r12
   1400049ba:	push   r13
   1400049bc:	push   r14
   1400049be:	push   r15
   1400049c0:	lea    rbp,[rsp-0x27]
   1400049c5:	sub    rsp,0xb0
   1400049cc:	mov    rbx,rcx
   1400049cf:	mov    r12,rdx
   1400049d2:	xor    edx,edx
   1400049d4:	mov    r13,r8
   1400049d7:	mov    QWORD PTR [rbp-0x21],rdx
   1400049db:	mov    edi,edx
   1400049dd:	mov    QWORD PTR [rbp-0x29],rdx
   1400049e1:	mov    esi,edx
   1400049e3:	mov    QWORD PTR [rbp-0x31],rdx
   1400049e7:	mov    r14d,edx
   1400049ea:	mov    QWORD PTR [rbp-0x41],rdx
   1400049ee:	mov    r15d,edx
   1400049f1:	mov    QWORD PTR [rbp-0x39],rdx
   1400049f5:	mov    ecx,0x80070057
   1400049fa:	mov    QWORD PTR [rbp-0x59],rdx
   1400049fe:	mov    QWORD PTR [rbp-0x49],rdx
   140004a02:	mov    QWORD PTR [rbp-0x51],rdx
   140004a06:	mov    DWORD PTR [rbp+0x7f],edx
   140004a09:	test   rbx,rbx
   140004a0c:	je     0x140004cce
   140004a12:	mov    rax,QWORD PTR [rbx]
   140004a15:	test   rax,rax
   140004a18:	je     0x140004cce
   140004a1e:	cmp    WORD PTR [rax],dx
   140004a21:	je     0x140004cce
   140004a27:	lea    rcx,[rip+0x3f22]        # 0x140008950
   140004a2e:	call   QWORD PTR [rip+0x3924]        # 0x140008358
   140004a34:	lea    rcx,[rbp-0x19]
   140004a38:	mov    r14,rax
   140004a3b:	call   QWORD PTR [rip+0x3907]        # 0x140008348
   140004a41:	test   r14,r14
   140004a44:	jne    0x140004a50
   140004a46:	mov    ebx,0x80070008
   140004a4b:	jmp    0x140004cf0
   140004a50:	lea    rcx,[rip+0x3f39]        # 0x140008990
   140004a57:	call   QWORD PTR [rip+0x38fb]        # 0x140008358
   140004a5d:	xor    edx,edx
   140004a5f:	mov    rsi,rax
   140004a62:	test   rax,rax
   140004a65:	jne    0x140004a71
   140004a67:	mov    ebx,0x80070008
   140004a6c:	jmp    0x140004cd0
   140004a71:	cmp    QWORD PTR [rbx],rdx
   140004a74:	lea    rcx,[rip+0x3c79]        # 0x1400086f4
   140004a7b:	lea    rdx,[rbp-0x21]
   140004a7f:	cmovne rcx,QWORD PTR [rbx]
   140004a83:	call   0x140003494
   140004a88:	mov    rdi,QWORD PTR [rbp-0x21]
   140004a8c:	mov    ebx,eax
   140004a8e:	test   eax,eax
   140004a90:	js     0x140004cd0
   140004a96:	mov    rax,QWORD PTR [rdi]
   140004a99:	lea    r9,[rbp-0x29]
   140004a9d:	mov    r8,rsi
   140004aa0:	mov    rdx,r14
   140004aa3:	mov    rcx,rdi
   140004aa6:	mov    rax,QWORD PTR [rax+0x18]
   140004aaa:	call   QWORD PTR [rip+0x3af0]        # 0x1400085a0
   140004ab0:	mov    ebx,eax
   140004ab2:	test   eax,eax
   140004ab4:	js     0x140004cd0
   140004aba:	mov    rcx,QWORD PTR [rbp-0x29]
   140004abe:	lea    rdx,[rbp-0x31]
   140004ac2:	mov    rax,QWORD PTR [rcx]
   140004ac5:	mov    rax,QWORD PTR [rax+0x20]
   140004ac9:	call   QWORD PTR [rip+0x3ad1]        # 0x1400085a0
   140004acf:	xor    edx,edx
   140004ad1:	mov    ebx,eax
   140004ad3:	test   eax,eax
   140004ad5:	js     0x140004cd0
   140004adb:	mov    rcx,QWORD PTR [rbp-0x31]
   140004adf:	mov    DWORD PTR [rbp+0x67],edx
   140004ae2:	lea    rdx,[rbp+0x67]
   140004ae6:	mov    rax,QWORD PTR [rcx]
   140004ae9:	mov    rax,QWORD PTR [rax+0x18]
   140004aed:	call   QWORD PTR [rip+0x3aad]        # 0x1400085a0
   140004af3:	xor    edx,edx
   140004af5:	mov    ebx,eax
   140004af7:	test   eax,eax
   140004af9:	js     0x140004cd0
   140004aff:	cmp    DWORD PTR [rbp+0x67],edx
   140004b02:	jbe    0x140004cd0
   140004b08:	lea    rcx,[rbp-0x19]
   140004b0c:	call   QWORD PTR [rip+0x382e]        # 0x140008340
   140004b12:	mov    rcx,QWORD PTR [rbp-0x31]
   140004b16:	lea    r8,[rbp-0x59]
   140004b1a:	movsd  xmm1,QWORD PTR [rbp-0x9]
   140004b1f:	lea    rdx,[rbp+0x7]
   140004b23:	mov    DWORD PTR [rbp-0x11],r15d
   140004b27:	mov    eax,0x13
   140004b2c:	mov    WORD PTR [rbp-0x19],ax
   140004b30:	mov    rax,QWORD PTR [rcx]
   140004b33:	movups xmm0,XMMWORD PTR [rbp-0x19]
   140004b37:	movsd  QWORD PTR [rbp+0x17],xmm1
   140004b3c:	mov    rax,QWORD PTR [rax+0x20]
   140004b40:	movaps XMMWORD PTR [rbp+0x7],xmm0
   140004b44:	call   QWORD PTR [rip+0x3a56]        # 0x1400085a0
   140004b4a:	mov    ebx,eax
   140004b4c:	test   eax,eax
   140004b4e:	js     0x140004cd0
   140004b54:	mov    rcx,QWORD PTR [rbp-0x49]
   140004b58:	test   rcx,rcx
   140004b5b:	je     0x140004b68
   140004b5d:	call   QWORD PTR [rip+0x37ed]        # 0x140008350
   140004b63:	and    QWORD PTR [rbp-0x49],0x0
   140004b68:	mov    rcx,QWORD PTR [rbp-0x59]
   140004b6c:	lea    r8,[rbp-0x49]
   140004b70:	lea    rdx,[rip+0x4059]        # 0x140008bd0
   140004b77:	call   0x1400023bc
   140004b7c:	xor    edx,edx
   140004b7e:	mov    ebx,eax
   140004b80:	test   eax,eax
   140004b82:	js     0x140004cd0
   140004b88:	cmp    QWORD PTR [r12],rdx
   140004b8c:	lea    rcx,[rip+0x3b61]        # 0x1400086f4
   140004b93:	mov    rdx,QWORD PTR [rbp-0x49]
   140004b97:	cmovne rcx,QWORD PTR [r12]
   140004b9c:	call   QWORD PTR [rip+0x3946]        # 0x1400084e8
   140004ba2:	mov    rcx,QWORD PTR [rbp-0x59]
   140004ba6:	test   eax,eax
   140004ba8:	mov    rax,QWORD PTR [rcx]
   140004bab:	je     0x140004bcf
   140004bad:	mov    rax,QWORD PTR [rax+0x10]
   140004bb1:	call   QWORD PTR [rip+0x39e9]        # 0x1400085a0
   140004bb7:	xor    edx,edx
   140004bb9:	inc    r15d
   140004bbc:	mov    QWORD PTR [rbp-0x59],rdx
   140004bc0:	cmp    r15d,DWORD PTR [rbp+0x67]
   140004bc4:	jb     0x140004b08
   140004bca:	jmp    0x140004cd0
   140004bcf:	mov    rax,QWORD PTR [rax+0x20]
   140004bd3:	lea    rdx,[rbp-0x41]
   140004bd7:	mov    DWORD PTR [rbp+0x7f],0x1
   140004bde:	call   QWORD PTR [rip+0x39bc]        # 0x1400085a0
   140004be4:	mov    ebx,eax
   140004be6:	test   eax,eax
   140004be8:	js     0x140004cd0
   140004bee:	lea    rcx,[rbp-0x19]
   140004bf2:	call   QWORD PTR [rip+0x3748]        # 0x140008340
   140004bf8:	and    DWORD PTR [rbp-0x11],0x0
   140004bfc:	lea    r8,[rbp-0x39]
   140004c00:	mov    rcx,QWORD PTR [rbp-0x41]
   140004c04:	lea    rdx,[rbp+0x7]
   140004c08:	movsd  xmm1,QWORD PTR [rbp-0x9]
   140004c0d:	mov    eax,0x13
   140004c12:	mov    WORD PTR [rbp-0x19],ax
   140004c16:	movups xmm0,XMMWORD PTR [rbp-0x19]
   140004c1a:	mov    rax,QWORD PTR [rcx]
   140004c1d:	movsd  QWORD PTR [rbp+0x17],xmm1
   140004c22:	movaps XMMWORD PTR [rbp+0x7],xmm0
   140004c26:	mov    rax,QWORD PTR [rax+0x20]
   140004c2a:	call   QWORD PTR [rip+0x3970]        # 0x1400085a0
   140004c30:	mov    ebx,eax
   140004c32:	test   eax,eax
   140004c34:	js     0x140004cd0
   140004c3a:	mov    rcx,QWORD PTR [rbp-0x51]
   140004c3e:	test   rcx,rcx
   140004c41:	je     0x140004c4e
   140004c43:	call   QWORD PTR [rip+0x3707]        # 0x140008350
   140004c49:	and    QWORD PTR [rbp-0x51],0x0
   140004c4e:	mov    rcx,QWORD PTR [rbp-0x39]
   140004c52:	lea    r8,[rbp-0x51]
   140004c56:	lea    rdx,[rip+0x3afb]        # 0x140008758
   140004c5d:	call   0x1400023bc
   140004c62:	xor    edx,edx
   140004c64:	mov    ebx,eax
   140004c66:	test   eax,eax
   140004c68:	js     0x140004cd0
   140004c6a:	cmp    QWORD PTR [rbp-0x51],rdx
   140004c6e:	jne    0x140004c77
   140004c70:	mov    ebx,0x80004005
   140004c75:	jmp    0x140004cd0
   140004c77:	mov    rdx,QWORD PTR [rbp-0x51]
   140004c7b:	mov    rcx,r13
   140004c7e:	call   0x140001ae4
   140004c83:	mov    ebx,eax
   140004c85:	test   eax,eax
   140004c87:	js     0x140004cd0
   140004c89:	mov    rcx,QWORD PTR [rbp-0x39]
   140004c8d:	mov    rax,QWORD PTR [rcx]
   140004c90:	mov    rax,QWORD PTR [rax+0x10]
   140004c94:	call   QWORD PTR [rip+0x3906]        # 0x1400085a0
   140004c9a:	mov    rcx,QWORD PTR [rbp-0x41]
   140004c9e:	and    QWORD PTR [rbp-0x39],0x0
   140004ca3:	mov    rax,QWORD PTR [rcx]
   140004ca6:	mov    rax,QWORD PTR [rax+0x10]
   140004caa:	call   QWORD PTR [rip+0x38f0]        # 0x1400085a0
   140004cb0:	mov    rcx,QWORD PTR [rbp-0x59]
   140004cb4:	and    QWORD PTR [rbp-0x41],0x0
   140004cb9:	mov    rax,QWORD PTR [rcx]
   140004cbc:	mov    rax,QWORD PTR [rax+0x10]
   140004cc0:	call   QWORD PTR [rip+0x38da]        # 0x1400085a0
   140004cc6:	xor    edx,edx
   140004cc8:	mov    QWORD PTR [rbp-0x59],rdx
   140004ccc:	jmp    0x140004cd0
   140004cce:	mov    ebx,ecx
   140004cd0:	test   r14,r14
   140004cd3:	je     0x140004cde
   140004cd5:	mov    rcx,r14
   140004cd8:	call   QWORD PTR [rip+0x3672]        # 0x140008350
   140004cde:	test   rsi,rsi
   140004ce1:	je     0x140004cec
   140004ce3:	mov    rcx,rsi
   140004ce6:	call   QWORD PTR [rip+0x3664]        # 0x140008350
   140004cec:	mov    r15d,DWORD PTR [rbp+0x7f]
   140004cf0:	mov    rcx,QWORD PTR [rbp-0x49]
   140004cf4:	test   rcx,rcx
   140004cf7:	je     0x140004d05
   140004cf9:	call   QWORD PTR [rip+0x3651]        # 0x140008350
   140004cff:	xor    edx,edx
   140004d01:	mov    QWORD PTR [rbp-0x49],rdx
   140004d05:	mov    rcx,QWORD PTR [rbp-0x51]
   140004d09:	test   rcx,rcx
   140004d0c:	je     0x140004d1a
   140004d0e:	call   QWORD PTR [rip+0x363c]        # 0x140008350
   140004d14:	xor    edx,edx
   140004d16:	mov    QWORD PTR [rbp-0x51],rdx
   140004d1a:	mov    rcx,QWORD PTR [rbp-0x59]
   140004d1e:	test   rcx,rcx
   140004d21:	je     0x140004d36
   140004d23:	mov    rax,QWORD PTR [rcx]
   140004d26:	mov    rax,QWORD PTR [rax+0x10]
   140004d2a:	call   QWORD PTR [rip+0x3870]        # 0x1400085a0
   140004d30:	xor    edx,edx
   140004d32:	mov    QWORD PTR [rbp-0x59],rdx
   140004d36:	mov    rcx,QWORD PTR [rbp-0x31]
   140004d3a:	test   rcx,rcx
   140004d3d:	je     0x140004d52
   140004d3f:	mov    rax,QWORD PTR [rcx]
   140004d42:	mov    rax,QWORD PTR [rax+0x10]
   140004d46:	call   QWORD PTR [rip+0x3854]        # 0x1400085a0
   140004d4c:	xor    edx,edx
   140004d4e:	mov    QWORD PTR [rbp-0x31],rdx
   140004d52:	mov    rcx,QWORD PTR [rbp-0x41]
   140004d56:	test   rcx,rcx
   140004d59:	je     0x140004d6e
   140004d5b:	mov    rax,QWORD PTR [rcx]
   140004d5e:	mov    rax,QWORD PTR [rax+0x10]
   140004d62:	call   QWORD PTR [rip+0x3838]        # 0x1400085a0
   140004d68:	xor    edx,edx
   140004d6a:	mov    QWORD PTR [rbp-0x41],rdx
   140004d6e:	mov    rcx,QWORD PTR [rbp-0x39]
   140004d72:	test   rcx,rcx
   140004d75:	je     0x140004d8a
   140004d77:	mov    rax,QWORD PTR [rcx]
   140004d7a:	mov    rax,QWORD PTR [rax+0x10]
   140004d7e:	call   QWORD PTR [rip+0x381c]        # 0x1400085a0
   140004d84:	xor    edx,edx
   140004d86:	mov    QWORD PTR [rbp-0x39],rdx
   140004d8a:	mov    rcx,QWORD PTR [rbp-0x29]
   140004d8e:	test   rcx,rcx
   140004d91:	je     0x140004da6
   140004d93:	mov    rax,QWORD PTR [rcx]
   140004d96:	mov    rax,QWORD PTR [rax+0x10]
   140004d9a:	call   QWORD PTR [rip+0x3800]        # 0x1400085a0
   140004da0:	xor    edx,edx
   140004da2:	mov    QWORD PTR [rbp-0x29],rdx
   140004da6:	test   rdi,rdi
   140004da9:	je     0x140004dbb
   140004dab:	mov    rdx,QWORD PTR [rdi]
   140004dae:	mov    rcx,rdi
   140004db1:	mov    rax,QWORD PTR [rdx+0x10]
   140004db5:	call   QWORD PTR [rip+0x37e5]        # 0x1400085a0
   140004dbb:	mov    eax,0x80070057
   140004dc0:	test   r15d,r15d
   140004dc3:	cmove  ebx,eax
   140004dc6:	mov    eax,ebx
   140004dc8:	mov    rbx,QWORD PTR [rsp+0xf8]
   140004dd0:	add    rsp,0xb0
   140004dd7:	pop    r15
   140004dd9:	pop    r14
   140004ddb:	pop    r13
   140004ddd:	pop    r12
   140004ddf:	pop    rdi
   140004de0:	pop    rsi
   140004de1:	pop    rbp
   140004de2:	ret    
   140004de3:	int3   
   140004de4:	int3   
   140004de5:	int3   
   140004de6:	int3   
   140004de7:	int3   
   140004de8:	int3   
   140004de9:	int3   
   140004dea:	int3   
   140004deb:	int3   
   140004dec:	mov    QWORD PTR [rsp+0x10],rbx
   140004df1:	push   rbp
   140004df2:	push   rsi
   140004df3:	push   rdi
   140004df4:	push   r12
   140004df6:	push   r13
   140004df8:	push   r14
   140004dfa:	push   r15
   140004dfc:	mov    rbp,rsp
   140004dff:	sub    rsp,0x80
   140004e06:	xor    edi,edi
   140004e08:	mov    r12,r8
   140004e0b:	and    QWORD PTR [rbp-0x48],rdi
   140004e0f:	mov    r13,rdx
   140004e12:	and    QWORD PTR [rbp-0x50],rdi
   140004e16:	mov    rbx,rcx
   140004e19:	and    QWORD PTR [rbp+0x50],rdi
   140004e1d:	and    QWORD PTR [rbp+0x58],rdi
   140004e21:	and    DWORD PTR [r8],edi
   140004e24:	mov    QWORD PTR [rbp-0x40],rdi
   140004e28:	test   rcx,rcx
   140004e2b:	jne    0x140004e37
   140004e2d:	mov    ebx,0x80070057
   140004e32:	jmp    0x14000505c
   140004e37:	lea    rcx,[rip+0x3b12]        # 0x140008950
   140004e3e:	call   QWORD PTR [rip+0x3514]        # 0x140008358
   140004e44:	lea    rcx,[rbp-0x38]
   140004e48:	mov    r15,rax
   140004e4b:	call   QWORD PTR [rip+0x34f7]        # 0x140008348
   140004e51:	test   r15,r15
   140004e54:	jne    0x140004e60
   140004e56:	mov    ebx,0x80070008
   140004e5b:	jmp    0x140004fe2
   140004e60:	lea    rcx,[rip+0x3b29]        # 0x140008990
   140004e67:	call   QWORD PTR [rip+0x34eb]        # 0x140008358
   140004e6d:	mov    rsi,rax
   140004e70:	test   rax,rax
   140004e73:	jne    0x140004e7f
   140004e75:	mov    ebx,0x80070008
   140004e7a:	jmp    0x140004fcb
   140004e7f:	lea    rdx,[rbp-0x40]
   140004e83:	mov    rcx,rbx
   140004e86:	call   0x140003494
   140004e8b:	mov    rdi,QWORD PTR [rbp-0x40]
   140004e8f:	mov    ebx,eax
   140004e91:	test   eax,eax
   140004e93:	js     0x140004fcb
   140004e99:	mov    rax,QWORD PTR [rdi]
   140004e9c:	lea    r9,[rbp-0x48]
   140004ea0:	mov    r8,rsi
   140004ea3:	mov    rdx,r15
   140004ea6:	mov    rcx,rdi
   140004ea9:	mov    rax,QWORD PTR [rax+0x18]
   140004ead:	call   QWORD PTR [rip+0x36ed]        # 0x1400085a0
   140004eb3:	mov    ebx,eax
   140004eb5:	test   eax,eax
   140004eb7:	js     0x140004fcb
   140004ebd:	mov    rcx,QWORD PTR [rbp-0x48]
   140004ec1:	lea    rdx,[rbp-0x50]
   140004ec5:	mov    rax,QWORD PTR [rcx]
   140004ec8:	mov    rax,QWORD PTR [rax+0x20]
   140004ecc:	call   QWORD PTR [rip+0x36ce]        # 0x1400085a0
   140004ed2:	mov    ebx,eax
   140004ed4:	test   eax,eax
   140004ed6:	js     0x140004fcb
   140004edc:	mov    rcx,QWORD PTR [rbp-0x50]
   140004ee0:	lea    rdx,[rbp+0x40]
   140004ee4:	and    DWORD PTR [rbp+0x40],0x0
   140004ee8:	mov    rax,QWORD PTR [rcx]
   140004eeb:	mov    rax,QWORD PTR [rax+0x18]
   140004eef:	call   QWORD PTR [rip+0x36ab]        # 0x1400085a0
   140004ef5:	mov    ebx,eax
   140004ef7:	test   eax,eax
   140004ef9:	js     0x140004fcb
   140004eff:	xor    r14d,r14d
   140004f02:	cmp    DWORD PTR [rbp+0x40],r14d
   140004f06:	jbe    0x140004fcb
   140004f0c:	lea    rcx,[rbp-0x38]
   140004f10:	call   QWORD PTR [rip+0x342a]        # 0x140008340
   140004f16:	mov    rcx,QWORD PTR [rbp-0x50]
   140004f1a:	lea    r8,[rbp+0x50]
   140004f1e:	movsd  xmm1,QWORD PTR [rbp-0x28]
   140004f23:	lea    rdx,[rbp-0x20]
   140004f27:	mov    DWORD PTR [rbp-0x30],r14d
   140004f2b:	mov    eax,0x13
   140004f30:	mov    WORD PTR [rbp-0x38],ax
   140004f34:	mov    rax,QWORD PTR [rcx]
   140004f37:	movups xmm0,XMMWORD PTR [rbp-0x38]
   140004f3b:	movsd  QWORD PTR [rbp-0x10],xmm1
   140004f40:	mov    rax,QWORD PTR [rax+0x20]
   140004f44:	movaps XMMWORD PTR [rbp-0x20],xmm0
   140004f48:	call   QWORD PTR [rip+0x3652]        # 0x1400085a0
   140004f4e:	mov    ebx,eax
   140004f50:	test   eax,eax
   140004f52:	js     0x140004fcb
   140004f54:	mov    rcx,QWORD PTR [rbp+0x58]
   140004f58:	test   rcx,rcx
   140004f5b:	je     0x140004f68
   140004f5d:	call   QWORD PTR [rip+0x33ed]        # 0x140008350
   140004f63:	and    QWORD PTR [rbp+0x58],0x0
   140004f68:	mov    rcx,QWORD PTR [rbp+0x50]
   140004f6c:	lea    r8,[rbp+0x58]
   140004f70:	lea    rdx,[rip+0x3c59]        # 0x140008bd0
   140004f77:	call   0x1400023bc
   140004f7c:	mov    ebx,eax
   140004f7e:	test   eax,eax
   140004f80:	js     0x140004fcb
   140004f82:	mov    rdx,QWORD PTR [rbp+0x58]
   140004f86:	mov    rcx,r13
   140004f89:	call   QWORD PTR [rip+0x3559]        # 0x1400084e8
   140004f8f:	mov    rcx,QWORD PTR [rbp+0x50]
   140004f93:	test   eax,eax
   140004f95:	mov    rax,QWORD PTR [rcx]
   140004f98:	mov    rax,QWORD PTR [rax+0x10]
   140004f9c:	je     0x140004fb8
   140004f9e:	call   QWORD PTR [rip+0x35fc]        # 0x1400085a0
   140004fa4:	and    QWORD PTR [rbp+0x50],0x0
   140004fa9:	inc    r14d
   140004fac:	cmp    r14d,DWORD PTR [rbp+0x40]
   140004fb0:	jb     0x140004f0c
   140004fb6:	jmp    0x140004fcb
   140004fb8:	mov    DWORD PTR [r12],0x1
   140004fc0:	call   QWORD PTR [rip+0x35da]        # 0x1400085a0
   140004fc6:	and    QWORD PTR [rbp+0x50],0x0
   140004fcb:	mov    rcx,r15
   140004fce:	call   QWORD PTR [rip+0x337c]        # 0x140008350
   140004fd4:	test   rsi,rsi
   140004fd7:	je     0x140004fe2
   140004fd9:	mov    rcx,rsi
   140004fdc:	call   QWORD PTR [rip+0x336e]        # 0x140008350
   140004fe2:	mov    rcx,QWORD PTR [rbp+0x58]
   140004fe6:	test   rcx,rcx
   140004fe9:	je     0x140004ff6
   140004feb:	call   QWORD PTR [rip+0x335f]        # 0x140008350
   140004ff1:	and    QWORD PTR [rbp+0x58],0x0
   140004ff6:	mov    rcx,QWORD PTR [rbp+0x50]
   140004ffa:	test   rcx,rcx
   140004ffd:	je     0x140005011
   140004fff:	mov    rax,QWORD PTR [rcx]
   140005002:	mov    rax,QWORD PTR [rax+0x10]
   140005006:	call   QWORD PTR [rip+0x3594]        # 0x1400085a0
   14000500c:	and    QWORD PTR [rbp+0x50],0x0
   140005011:	mov    rcx,QWORD PTR [rbp-0x50]
   140005015:	test   rcx,rcx
   140005018:	je     0x14000502c
   14000501a:	mov    rax,QWORD PTR [rcx]
   14000501d:	mov    rax,QWORD PTR [rax+0x10]
   140005021:	call   QWORD PTR [rip+0x3579]        # 0x1400085a0
   140005027:	and    QWORD PTR [rbp-0x50],0x0
   14000502c:	mov    rcx,QWORD PTR [rbp-0x48]
   140005030:	test   rcx,rcx
   140005033:	je     0x140005047
   140005035:	mov    rax,QWORD PTR [rcx]
   140005038:	mov    rax,QWORD PTR [rax+0x10]
   14000503c:	call   QWORD PTR [rip+0x355e]        # 0x1400085a0
   140005042:	and    QWORD PTR [rbp-0x48],0x0
   140005047:	test   rdi,rdi
   14000504a:	je     0x14000505c
   14000504c:	mov    rax,QWORD PTR [rdi]
   14000504f:	mov    rcx,rdi
   140005052:	mov    rax,QWORD PTR [rax+0x10]
   140005056:	call   QWORD PTR [rip+0x3544]        # 0x1400085a0
   14000505c:	mov    eax,ebx
   14000505e:	mov    rbx,QWORD PTR [rsp+0xc8]
   140005066:	add    rsp,0x80
   14000506d:	pop    r15
   14000506f:	pop    r14
   140005071:	pop    r13
   140005073:	pop    r12
   140005075:	pop    rdi
   140005076:	pop    rsi
   140005077:	pop    rbp
   140005078:	ret    
   140005079:	int3   
   14000507a:	int3   
   14000507b:	int3   
   14000507c:	int3   
   14000507d:	int3   
   14000507e:	int3   
   14000507f:	int3   
   140005080:	mov    QWORD PTR [rsp+0x10],rbx
   140005085:	mov    QWORD PTR [rsp+0x18],r8
   14000508a:	push   rbp
   14000508b:	push   rsi
   14000508c:	push   rdi
   14000508d:	push   r12
   14000508f:	push   r13
   140005091:	push   r14
   140005093:	push   r15
   140005095:	lea    rbp,[rsp-0x27]
   14000509a:	sub    rsp,0x90
   1400050a1:	xor    r14d,r14d
   1400050a4:	mov    r12,r9
   1400050a7:	mov    QWORD PTR [rbp-0x19],r14
   1400050ab:	mov    r13,rdx
   1400050ae:	mov    QWORD PTR [rbp-0x21],r14
   1400050b2:	mov    rbx,rcx
   1400050b5:	mov    QWORD PTR [rbp-0x29],r14
   1400050b9:	mov    edi,r14d
   1400050bc:	mov    QWORD PTR [rbp+0x7f],r14
   1400050c0:	mov    QWORD PTR [rbp-0x39],r14
   1400050c4:	mov    QWORD PTR [rbp-0x31],r14
   1400050c8:	mov    DWORD PTR [r9],r14d
   1400050cb:	test   rcx,rcx
   1400050ce:	jne    0x1400050da
   1400050d0:	mov    ebx,0x80070057
   1400050d5:	jmp    0x140005311
   1400050da:	lea    rcx,[rip+0x386f]        # 0x140008950
   1400050e1:	call   QWORD PTR [rip+0x3271]        # 0x140008358
   1400050e7:	lea    rcx,[rbp-0x11]
   1400050eb:	mov    r15,rax
   1400050ee:	call   QWORD PTR [rip+0x3254]        # 0x140008348
   1400050f4:	test   r15,r15
   1400050f7:	jne    0x140005103
   1400050f9:	mov    ebx,0x80070008
   1400050fe:	jmp    0x140005288
   140005103:	lea    rcx,[rip+0x3886]        # 0x140008990
   14000510a:	call   QWORD PTR [rip+0x3248]        # 0x140008358
   140005110:	mov    rsi,rax
   140005113:	test   rax,rax
   140005116:	jne    0x140005122
   140005118:	mov    ebx,0x80070008
   14000511d:	jmp    0x140005271
   140005122:	lea    rdx,[rbp-0x19]
   140005126:	mov    rcx,rbx
   140005129:	call   0x140003494
   14000512e:	mov    rdi,QWORD PTR [rbp-0x19]
   140005132:	mov    ebx,eax
   140005134:	test   eax,eax
   140005136:	js     0x140005271
   14000513c:	mov    rax,QWORD PTR [rdi]
   14000513f:	lea    r9,[rbp-0x21]
   140005143:	mov    r8,rsi
   140005146:	mov    rdx,r15
   140005149:	mov    rcx,rdi
   14000514c:	mov    rax,QWORD PTR [rax+0x18]
   140005150:	call   QWORD PTR [rip+0x344a]        # 0x1400085a0
   140005156:	mov    ebx,eax
   140005158:	test   eax,eax
   14000515a:	js     0x140005271
   140005160:	mov    rcx,QWORD PTR [rbp-0x21]
   140005164:	lea    rdx,[rbp-0x29]
   140005168:	mov    rax,QWORD PTR [rcx]
   14000516b:	mov    rax,QWORD PTR [rax+0x20]
   14000516f:	call   QWORD PTR [rip+0x342b]        # 0x1400085a0
   140005175:	mov    ebx,eax
   140005177:	test   eax,eax
   140005179:	js     0x140005271
   14000517f:	mov    rcx,QWORD PTR [rbp-0x29]
   140005183:	lea    rdx,[rbp+0x67]
   140005187:	mov    DWORD PTR [rbp+0x67],r14d
   14000518b:	mov    rax,QWORD PTR [rcx]
   14000518e:	mov    rax,QWORD PTR [rax+0x18]
   140005192:	call   QWORD PTR [rip+0x3408]        # 0x1400085a0
   140005198:	mov    ebx,eax
   14000519a:	test   eax,eax
   14000519c:	js     0x140005271
   1400051a2:	cmp    DWORD PTR [rbp+0x67],r14d
   1400051a6:	jbe    0x140005271
   1400051ac:	lea    rcx,[rbp-0x11]
   1400051b0:	call   QWORD PTR [rip+0x318a]        # 0x140008340
   1400051b6:	mov    rcx,QWORD PTR [rbp-0x29]
   1400051ba:	lea    r8,[rbp+0x7f]
   1400051be:	movsd  xmm1,QWORD PTR [rbp-0x1]
   1400051c3:	lea    rdx,[rbp+0x7]
   1400051c7:	mov    DWORD PTR [rbp-0x9],r14d
   1400051cb:	mov    eax,0x13
   1400051d0:	mov    WORD PTR [rbp-0x11],ax
   1400051d4:	mov    rax,QWORD PTR [rcx]
   1400051d7:	movups xmm0,XMMWORD PTR [rbp-0x11]
   1400051db:	movsd  QWORD PTR [rbp+0x17],xmm1
   1400051e0:	mov    rax,QWORD PTR [rax+0x20]
   1400051e4:	movaps XMMWORD PTR [rbp+0x7],xmm0
   1400051e8:	call   QWORD PTR [rip+0x33b2]        # 0x1400085a0
   1400051ee:	mov    ebx,eax
   1400051f0:	test   eax,eax
   1400051f2:	js     0x14000526e
   1400051f4:	mov    rcx,QWORD PTR [rbp-0x39]
   1400051f8:	test   rcx,rcx
   1400051fb:	je     0x140005208
   1400051fd:	call   QWORD PTR [rip+0x314d]        # 0x140008350
   140005203:	and    QWORD PTR [rbp-0x39],0x0
   140005208:	mov    rcx,QWORD PTR [rbp-0x31]
   14000520c:	test   rcx,rcx
   14000520f:	je     0x14000521c
   140005211:	call   QWORD PTR [rip+0x3139]        # 0x140008350
   140005217:	and    QWORD PTR [rbp-0x31],0x0
   14000521c:	mov    rcx,QWORD PTR [rbp+0x7f]
   140005220:	lea    r8,[rbp-0x31]
   140005224:	lea    rdx,[rip+0x3d49]        # 0x140008f74
   14000522b:	call   0x1400023bc
   140005230:	mov    ebx,eax
   140005232:	test   eax,eax
   140005234:	js     0x14000526e
   140005236:	mov    rdx,QWORD PTR [rbp-0x31]
   14000523a:	mov    rcx,r13
   14000523d:	call   QWORD PTR [rip+0x32a5]        # 0x1400084e8
   140005243:	mov    rcx,QWORD PTR [rbp+0x7f]
   140005247:	test   eax,eax
   140005249:	je     0x14000532e
   14000524f:	mov    rax,QWORD PTR [rcx]
   140005252:	mov    rax,QWORD PTR [rax+0x10]
   140005256:	call   QWORD PTR [rip+0x3344]        # 0x1400085a0
   14000525c:	and    QWORD PTR [rbp+0x7f],0x0
   140005261:	inc    r14d
   140005264:	cmp    r14d,DWORD PTR [rbp+0x67]
   140005268:	jb     0x1400051ac
   14000526e:	xor    r14d,r14d
   140005271:	mov    rcx,r15
   140005274:	call   QWORD PTR [rip+0x30d6]        # 0x140008350
   14000527a:	test   rsi,rsi
   14000527d:	je     0x140005288
   14000527f:	mov    rcx,rsi
   140005282:	call   QWORD PTR [rip+0x30c8]        # 0x140008350
   140005288:	mov    rcx,QWORD PTR [rbp-0x39]
   14000528c:	test   rcx,rcx
   14000528f:	je     0x14000529b
   140005291:	call   QWORD PTR [rip+0x30b9]        # 0x140008350
   140005297:	mov    QWORD PTR [rbp-0x39],r14
   14000529b:	mov    rcx,QWORD PTR [rbp-0x31]
   14000529f:	test   rcx,rcx
   1400052a2:	je     0x1400052ae
   1400052a4:	call   QWORD PTR [rip+0x30a6]        # 0x140008350
   1400052aa:	mov    QWORD PTR [rbp-0x31],r14
   1400052ae:	mov    rcx,QWORD PTR [rbp+0x7f]
   1400052b2:	test   rcx,rcx
   1400052b5:	je     0x1400052c8
   1400052b7:	mov    rax,QWORD PTR [rcx]
   1400052ba:	mov    rax,QWORD PTR [rax+0x10]
   1400052be:	call   QWORD PTR [rip+0x32dc]        # 0x1400085a0
   1400052c4:	mov    QWORD PTR [rbp+0x7f],r14
   1400052c8:	mov    rcx,QWORD PTR [rbp-0x29]
   1400052cc:	test   rcx,rcx
   1400052cf:	je     0x1400052e2
   1400052d1:	mov    rax,QWORD PTR [rcx]
   1400052d4:	mov    rax,QWORD PTR [rax+0x10]
   1400052d8:	call   QWORD PTR [rip+0x32c2]        # 0x1400085a0
   1400052de:	mov    QWORD PTR [rbp-0x29],r14
   1400052e2:	mov    rcx,QWORD PTR [rbp-0x21]
   1400052e6:	test   rcx,rcx
   1400052e9:	je     0x1400052fc
   1400052eb:	mov    rax,QWORD PTR [rcx]
   1400052ee:	mov    rax,QWORD PTR [rax+0x10]
   1400052f2:	call   QWORD PTR [rip+0x32a8]        # 0x1400085a0
   1400052f8:	mov    QWORD PTR [rbp-0x21],r14
   1400052fc:	test   rdi,rdi
   1400052ff:	je     0x140005311
   140005301:	mov    rax,QWORD PTR [rdi]
   140005304:	mov    rcx,rdi
   140005307:	mov    rax,QWORD PTR [rax+0x10]
   14000530b:	call   QWORD PTR [rip+0x328f]        # 0x1400085a0
   140005311:	mov    eax,ebx
   140005313:	mov    rbx,QWORD PTR [rsp+0xd8]
   14000531b:	add    rsp,0x90
   140005322:	pop    r15
   140005324:	pop    r14
   140005326:	pop    r13
   140005328:	pop    r12
   14000532a:	pop    rdi
   14000532b:	pop    rsi
   14000532c:	pop    rbp
   14000532d:	ret    
   14000532e:	lea    r8,[rbp-0x39]
   140005332:	lea    rdx,[rip+0x3897]        # 0x140008bd0
   140005339:	call   0x1400023bc
   14000533e:	xor    r14d,r14d
   140005341:	mov    ebx,eax
   140005343:	test   eax,eax
   140005345:	js     0x140005271
   14000534b:	mov    rdx,QWORD PTR [rbp-0x39]
   14000534f:	mov    rcx,QWORD PTR [rbp+0x77]
   140005353:	call   0x140001ae4
   140005358:	mov    ebx,eax
   14000535a:	test   eax,eax
   14000535c:	js     0x140005271
   140005362:	mov    rcx,QWORD PTR [rbp+0x7f]
   140005366:	mov    DWORD PTR [r12],0x1
   14000536e:	mov    rax,QWORD PTR [rcx]
   140005371:	mov    rax,QWORD PTR [rax+0x10]
   140005375:	call   QWORD PTR [rip+0x3225]        # 0x1400085a0
   14000537b:	mov    QWORD PTR [rbp+0x7f],r14
   14000537f:	jmp    0x140005271
   140005384:	int3   
   140005385:	int3   
   140005386:	int3   
   140005387:	int3   
   140005388:	int3   
   140005389:	int3   
   14000538a:	int3   
   14000538b:	int3   
   14000538c:	rex push rbx
   14000538e:	sub    rsp,0x20
   140005392:	mov    rbx,rcx
   140005395:	lea    rcx,[rip+0x330c]        # 0x1400086a8
   14000539c:	call   QWORD PTR [rip+0x2f46]        # 0x1400082e8
   1400053a2:	test   rax,rax
   1400053a5:	jne    0x1400053bd
   1400053a7:	call   QWORD PTR [rip+0x2f33]        # 0x1400082e0
   1400053ad:	movzx  edx,ax
   1400053b0:	or     edx,0x80070000
   1400053b6:	test   eax,eax
   1400053b8:	cmovle edx,eax
   1400053bb:	jmp    0x1400053cc
   1400053bd:	lea    rdx,[rsp+0x38]
   1400053c2:	mov    rcx,rax
   1400053c5:	call   0x14000674c
   1400053ca:	mov    edx,eax
   1400053cc:	test   edx,edx
   1400053ce:	jns    0x1400053d4
   1400053d0:	mov    eax,edx
   1400053d2:	jmp    0x1400053de
   1400053d4:	mov    rax,QWORD PTR [rsp+0x38]
   1400053d9:	mov    QWORD PTR [rbx],rax
   1400053dc:	xor    eax,eax
   1400053de:	add    rsp,0x20
   1400053e2:	pop    rbx
   1400053e3:	ret    
   1400053e4:	int3   
   1400053e5:	int3   
   1400053e6:	int3   
   1400053e7:	int3   
   1400053e8:	int3   
   1400053e9:	int3   
   1400053ea:	int3   
   1400053eb:	int3   
   1400053ec:	mov    rax,rsp
   1400053ef:	mov    QWORD PTR [rax+0x10],rdx
   1400053f3:	mov    QWORD PTR [rax+0x18],r8
   1400053f7:	mov    QWORD PTR [rax+0x20],r9
   1400053fb:	push   rbx
   1400053fc:	push   rbp
   1400053fd:	push   rsi
   1400053fe:	push   rdi
   1400053ff:	sub    rsp,0x38
   140005403:	mov    rsi,rcx
   140005406:	lea    rbp,[rax+0x18]
   14000540a:	call   QWORD PTR [rip+0x2f10]        # 0x140008320
   140005410:	mov    edx,0x8
   140005415:	mov    r8d,0x208
   14000541b:	mov    rcx,rax
   14000541e:	call   QWORD PTR [rip+0x2eec]        # 0x140008310
   140005424:	mov    rdi,rax
   140005427:	test   rax,rax
   14000542a:	jne    0x140005436
   14000542c:	mov    ebx,0x80070008
   140005431:	jmp    0x14000551c
   140005436:	mov    r9,QWORD PTR [rsp+0x68]
   14000543b:	mov    edx,0x104
   140005440:	mov    rcx,rax
   140005443:	mov    QWORD PTR [rsp+0x20],rbp
   140005448:	lea    r8d,[rdx-0x1]
   14000544c:	call   QWORD PTR [rip+0x3066]        # 0x1400084b8
   140005452:	cmp    eax,0xffffffff
   140005455:	jne    0x1400054fb
   14000545b:	mov    rcx,QWORD PTR [rsp+0x68]
   140005460:	mov    rdx,rbp
   140005463:	call   QWORD PTR [rip+0x3047]        # 0x1400084b0
   140005469:	cmp    eax,0x10000
   14000546e:	jle    0x14000547a
   140005470:	mov    ebx,0x8007000d
   140005475:	jmp    0x140005508
   14000547a:	lea    ebx,[rax*2+0x2]
   140005481:	call   QWORD PTR [rip+0x2e99]        # 0x140008320
   140005487:	mov    r8,rdi
   14000548a:	xor    edx,edx
   14000548c:	mov    rcx,rax
   14000548f:	call   QWORD PTR [rip+0x2e83]        # 0x140008318
   140005495:	test   eax,eax
   140005497:	jne    0x1400054af
   140005499:	call   QWORD PTR [rip+0x2e41]        # 0x1400082e0
   14000549f:	movzx  ebx,ax
   1400054a2:	or     ebx,0x80070000
   1400054a8:	test   eax,eax
   1400054aa:	cmovle ebx,eax
   1400054ad:	jmp    0x140005508
   1400054af:	movsxd rbx,ebx
   1400054b2:	call   QWORD PTR [rip+0x2e68]        # 0x140008320
   1400054b8:	mov    r8,rbx
   1400054bb:	mov    edx,0x8
   1400054c0:	mov    rcx,rax
   1400054c3:	call   QWORD PTR [rip+0x2e47]        # 0x140008310
   1400054c9:	mov    rdi,rax
   1400054cc:	test   rax,rax
   1400054cf:	je     0x14000542c
   1400054d5:	mov    r9,QWORD PTR [rsp+0x68]
   1400054da:	mov    rcx,rax
   1400054dd:	shr    rbx,1
   1400054e0:	mov    rdx,rbx
   1400054e3:	mov    QWORD PTR [rsp+0x20],rbp
   1400054e8:	lea    r8,[rbx-0x1]
   1400054ec:	call   QWORD PTR [rip+0x2fc6]        # 0x1400084b8
   1400054f2:	cmp    eax,0xffffffff
   1400054f5:	je     0x140005470
   1400054fb:	mov    rdx,rdi
   1400054fe:	mov    rcx,rsi
   140005501:	call   0x140001ae4
   140005506:	mov    ebx,eax
   140005508:	call   QWORD PTR [rip+0x2e12]        # 0x140008320
   14000550e:	mov    r8,rdi
   140005511:	xor    edx,edx
   140005513:	mov    rcx,rax
   140005516:	call   QWORD PTR [rip+0x2dfc]        # 0x140008318
   14000551c:	mov    eax,ebx
   14000551e:	add    rsp,0x38
   140005522:	pop    rdi
   140005523:	pop    rsi
   140005524:	pop    rbp
   140005525:	pop    rbx
   140005526:	ret    
   140005527:	int3   
   140005528:	int3   
   140005529:	int3   
   14000552a:	int3   
   14000552b:	int3   
   14000552c:	int3   
   14000552d:	int3   
   14000552e:	int3   
   14000552f:	int3   
   140005530:	mov    QWORD PTR [rsp+0x8],rbx
   140005535:	push   rdi
   140005536:	sub    rsp,0x20
   14000553a:	mov    ebx,edx
   14000553c:	mov    rdi,rcx
   14000553f:	call   0x140005568
   140005544:	test   bl,0x1
   140005547:	je     0x140005551
   140005549:	mov    rcx,rdi
   14000554c:	call   0x140007048
   140005551:	mov    rax,rdi
   140005554:	mov    rbx,QWORD PTR [rsp+0x30]
   140005559:	add    rsp,0x20
   14000555d:	pop    rdi
   14000555e:	ret    
   14000555f:	int3   
   140005560:	int3   
   140005561:	int3   
   140005562:	int3   
   140005563:	int3   
   140005564:	int3   
   140005565:	int3   
   140005566:	int3   
   140005567:	int3   
   140005568:	mov    QWORD PTR [rsp+0x8],rbx
   14000556d:	mov    QWORD PTR [rsp+0x10],rsi
   140005572:	push   rdi
   140005573:	sub    rsp,0x20
   140005577:	mov    rdi,QWORD PTR [rcx+0x20]
   14000557b:	lea    rax,[rip+0x2ac6]        # 0x140008048
   140005582:	mov    QWORD PTR [rcx],rax
   140005585:	mov    rbx,rcx
   140005588:	test   rdi,rdi
   14000558b:	je     0x1400055d8
   14000558d:	and    QWORD PTR [rdi+0x10],0x0
   140005592:	and    QWORD PTR [rdi+0x18],0x0
   140005597:	mov    rcx,QWORD PTR [rdi]
   14000559a:	test   rcx,rcx
   14000559d:	je     0x1400055a9
   14000559f:	call   QWORD PTR [rip+0x2c83]        # 0x140008228
   1400055a5:	and    QWORD PTR [rdi],0x0
   1400055a9:	mov    rsi,QWORD PTR [rdi+0x8]
   1400055ad:	test   rsi,rsi
   1400055b0:	je     0x1400055cb
   1400055b2:	call   QWORD PTR [rip+0x2d68]        # 0x140008320
   1400055b8:	mov    r8,rsi
   1400055bb:	xor    edx,edx
   1400055bd:	mov    rcx,rax
   1400055c0:	call   QWORD PTR [rip+0x2d52]        # 0x140008318
   1400055c6:	and    QWORD PTR [rdi+0x8],0x0
   1400055cb:	mov    rcx,rdi
   1400055ce:	call   0x140007048
   1400055d3:	and    QWORD PTR [rbx+0x20],0x0
   1400055d8:	mov    rdi,QWORD PTR [rbx+0x18]
   1400055dc:	test   rdi,rdi
   1400055df:	je     0x1400055fa
   1400055e1:	call   QWORD PTR [rip+0x2d39]        # 0x140008320
   1400055e7:	mov    r8,rdi
   1400055ea:	xor    edx,edx
   1400055ec:	mov    rcx,rax
   1400055ef:	call   QWORD PTR [rip+0x2d23]        # 0x140008318
   1400055f5:	and    QWORD PTR [rbx+0x18],0x0
   1400055fa:	mov    rdi,QWORD PTR [rbx+0x10]
   1400055fe:	test   rdi,rdi
   140005601:	je     0x14000561c
   140005603:	call   QWORD PTR [rip+0x2d17]        # 0x140008320
   140005609:	mov    r8,rdi
   14000560c:	xor    edx,edx
   14000560e:	mov    rcx,rax
   140005611:	call   QWORD PTR [rip+0x2d01]        # 0x140008318
   140005617:	and    QWORD PTR [rbx+0x10],0x0
   14000561c:	mov    rdi,QWORD PTR [rbx+0x8]
   140005620:	test   rdi,rdi
   140005623:	je     0x14000563e
   140005625:	call   QWORD PTR [rip+0x2cf5]        # 0x140008320
   14000562b:	mov    r8,rdi
   14000562e:	xor    edx,edx
   140005630:	mov    rcx,rax
   140005633:	call   QWORD PTR [rip+0x2cdf]        # 0x140008318
   140005639:	and    QWORD PTR [rbx+0x8],0x0
   14000563e:	mov    rbx,QWORD PTR [rsp+0x30]
   140005643:	mov    rsi,QWORD PTR [rsp+0x38]
   140005648:	add    rsp,0x20
   14000564c:	pop    rdi
   14000564d:	ret    
   14000564e:	int3   
   14000564f:	int3   
   140005650:	int3   
   140005651:	int3   
   140005652:	int3   
   140005653:	int3   
   140005654:	mov    QWORD PTR [rsp+0x10],rbx
   140005659:	mov    QWORD PTR [rsp+0x18],rsi
   14000565e:	push   rdi
   14000565f:	sub    rsp,0x30
   140005663:	cmp    QWORD PTR [rcx+0x20],0x0
   140005668:	mov    rdi,rcx
   14000566b:	jne    0x1400056e3
   14000566d:	mov    ecx,0x28
   140005672:	call   0x140006ffc
   140005677:	mov    QWORD PTR [rsp+0x40],rax
   14000567c:	test   rax,rax
   14000567f:	je     0x140005699
   140005681:	and    QWORD PTR [rax+0x8],0x0
   140005686:	and    QWORD PTR [rax],0x0
   14000568a:	and    QWORD PTR [rax+0x10],0x0
   14000568f:	and    QWORD PTR [rax+0x18],0x0
   140005694:	and    QWORD PTR [rax+0x20],0x0
   140005699:	mov    rcx,rax
   14000569c:	mov    QWORD PTR [rdi+0x20],rax
   1400056a0:	call   0x140001cc8
   1400056a5:	mov    ebx,eax
   1400056a7:	test   eax,eax
   1400056a9:	jns    0x1400056e3
   1400056ab:	test   BYTE PTR [rip+0x6292],0xf        # 0x14000b944
   1400056b2:	je     0x1400057c2
   1400056b8:	mov    rcx,QWORD PTR [rip+0x6289]        # 0x14000b948
   1400056bf:	mov    edx,0x4
   1400056c4:	mov    rcx,QWORD PTR [rcx+0x280]
   1400056cb:	call   QWORD PTR [rip+0x2b47]        # 0x140008218
   1400056d1:	lea    rax,[rip+0x38c8]        # 0x140008fa0
   1400056d8:	mov    r8d,0x68
   1400056de:	jmp    0x140005786
   1400056e3:	cmp    QWORD PTR [rdi+0x10],0x0
   1400056e8:	lea    rdx,[rip+0x3005]        # 0x1400086f4
   1400056ef:	lea    rsi,[rip+0x2ffe]        # 0x1400086f4
   1400056f6:	cmovne rdx,QWORD PTR [rdi+0x10]
   1400056fb:	cmp    QWORD PTR [rdi+0x8],0x0
   140005700:	cmovne rsi,QWORD PTR [rdi+0x8]
   140005705:	mov    rdi,QWORD PTR [rdi+0x20]
   140005709:	cmp    QWORD PTR [rdi+0x10],0x0
   14000570e:	jne    0x14000571a
   140005710:	mov    ebx,0x1
   140005715:	jmp    0x1400057c2
   14000571a:	test   rdx,rdx
   14000571d:	je     0x140005736
   14000571f:	mov    rax,QWORD PTR [rdi+0x20]
   140005723:	lea    rcx,[rip+0x302e]        # 0x140008758
   14000572a:	call   QWORD PTR [rip+0x2e70]        # 0x1400085a0
   140005730:	mov    ebx,eax
   140005732:	test   eax,eax
   140005734:	js     0x140005753
   140005736:	mov    rax,QWORD PTR [rdi+0x10]
   14000573a:	lea    r8,[rip+0x3037]        # 0x140008778
   140005741:	lea    rdx,[rip+0x2fac]        # 0x1400086f4
   140005748:	mov    rcx,rsi
   14000574b:	call   QWORD PTR [rip+0x2e4f]        # 0x1400085a0
   140005751:	mov    ebx,eax
   140005753:	test   ebx,ebx
   140005755:	jns    0x1400057c2
   140005757:	test   BYTE PTR [rip+0x61e6],0xf        # 0x14000b944
   14000575e:	je     0x1400057c2
   140005760:	mov    rcx,QWORD PTR [rip+0x61e1]        # 0x14000b948
   140005767:	mov    edx,0x4
   14000576c:	mov    rcx,QWORD PTR [rcx+0x280]
   140005773:	call   QWORD PTR [rip+0x2a9f]        # 0x140008218
   140005779:	lea    rax,[rip+0x38a0]        # 0x140009020
   140005780:	mov    r8d,0x76
   140005786:	mov    rcx,QWORD PTR [rip+0x61bb]        # 0x14000b948
   14000578d:	lea    r9,[rip+0x3834]        # 0x140008fc8
   140005794:	mov    QWORD PTR [rsp+0x28],rax
   140005799:	lea    rdx,[rip+0x3840]        # 0x140008fe0
   1400057a0:	mov    DWORD PTR [rsp+0x20],ebx
   1400057a4:	call   0x140006d38
   1400057a9:	mov    rcx,QWORD PTR [rip+0x6198]        # 0x14000b948
   1400057b0:	mov    edx,0x7
   1400057b5:	mov    rcx,QWORD PTR [rcx+0x280]
   1400057bc:	call   QWORD PTR [rip+0x2a56]        # 0x140008218
   1400057c2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400057c7:	mov    eax,ebx
   1400057c9:	mov    rbx,QWORD PTR [rsp+0x48]
   1400057ce:	add    rsp,0x30
   1400057d2:	pop    rdi
   1400057d3:	ret    
   1400057d4:	int3   
   1400057d5:	int3   
   1400057d6:	int3   
   1400057d7:	int3   
   1400057d8:	int3   
   1400057d9:	int3   
   1400057da:	int3   
   1400057db:	int3   
   1400057dc:	mov    rax,rsp
   1400057df:	push   rsi
   1400057e0:	sub    rsp,0x30
   1400057e4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400057ec:	mov    QWORD PTR [rax+0x8],rbx
   1400057f0:	mov    QWORD PTR [rax+0x10],rbp
   1400057f4:	mov    rbp,rdx
   1400057f7:	movsxd rbx,ecx
   1400057fa:	and    QWORD PTR [rax+0x18],0x0
   1400057ff:	and    QWORD PTR [rax+0x20],0x0
   140005804:	mov    edx,0x2723
   140005809:	lea    rcx,[rax+0x18]
   14000580d:	call   0x1400041a0
   140005812:	lea    rsi,[rip+0x2edb]        # 0x1400086f4
   140005819:	mov    rdx,rsi
   14000581c:	cmp    QWORD PTR [rsp+0x50],0x0
   140005822:	cmovne rdx,QWORD PTR [rsp+0x50]
   140005828:	mov    r8,rbx
   14000582b:	shl    r8,0x5
   14000582f:	lea    rax,[rip+0x57ca]        # 0x14000b000
   140005836:	mov    r8,QWORD PTR [r8+rax*1]
   14000583a:	lea    rcx,[rsp+0x58]
   14000583f:	call   0x1400053ec
   140005844:	mov    rbx,QWORD PTR [rsp+0x58]
   140005849:	test   eax,eax
   14000584b:	js     0x140005860
   14000584d:	test   rbx,rbx
   140005850:	cmovne rsi,rbx
   140005854:	mov    rdx,rsi
   140005857:	mov    rcx,rbp
   14000585a:	call   0x140001ae4
   14000585f:	nop
   140005860:	test   rbx,rbx
   140005863:	je     0x14000587a
   140005865:	call   QWORD PTR [rip+0x2ab5]        # 0x140008320
   14000586b:	mov    rcx,rax
   14000586e:	mov    r8,rbx
   140005871:	xor    edx,edx
   140005873:	call   QWORD PTR [rip+0x2a9f]        # 0x140008318
   140005879:	nop
   14000587a:	cmp    QWORD PTR [rsp+0x50],0x0
   140005880:	je     0x140005898
   140005882:	call   QWORD PTR [rip+0x2a98]        # 0x140008320
   140005888:	mov    rcx,rax
   14000588b:	mov    r8,QWORD PTR [rsp+0x50]
   140005890:	xor    edx,edx
   140005892:	call   QWORD PTR [rip+0x2a80]        # 0x140008318
   140005898:	mov    rbx,QWORD PTR [rsp+0x40]
   14000589d:	mov    rbp,QWORD PTR [rsp+0x48]
   1400058a2:	add    rsp,0x30
   1400058a6:	pop    rsi
   1400058a7:	ret    
   1400058a8:	int3   
   1400058a9:	int3   
   1400058aa:	int3   
   1400058ab:	int3   
   1400058ac:	int3   
   1400058ad:	int3   
   1400058ae:	int3   
   1400058af:	int3   
   1400058b0:	mov    rax,rsp
   1400058b3:	mov    QWORD PTR [rax+0x8],rbx
   1400058b7:	mov    QWORD PTR [rax+0x10],rbp
   1400058bb:	mov    QWORD PTR [rax+0x18],rsi
   1400058bf:	mov    QWORD PTR [rax+0x20],rdi
   1400058c3:	push   r14
   1400058c5:	sub    rsp,0x20
   1400058c9:	movsxd rdi,ecx
   1400058cc:	lea    r14,[rip+0x572d]        # 0x14000b000
   1400058d3:	shl    rdi,0x5
   1400058d7:	xor    ebx,ebx
   1400058d9:	mov    rsi,rdx
   1400058dc:	cmp    DWORD PTR [rdi+r14*1+0x10],ebx
   1400058e1:	je     0x140005992
   1400058e7:	mov    rax,QWORD PTR [rdi+r14*1+0x18]
   1400058ec:	test   rax,rax
   1400058ef:	je     0x140005992
   1400058f5:	cmp    WORD PTR [rax],bx
   1400058f8:	je     0x140005992
   1400058fe:	test   rax,rax
   140005901:	lea    rbp,[rip+0x2dec]        # 0x1400086f4
   140005908:	mov    rcx,rbp
   14000590b:	lea    rdx,[rip+0x2f1e]        # 0x140008830
   140005912:	cmovne rcx,rax
   140005916:	call   QWORD PTR [rip+0x2bcc]        # 0x1400084e8
   14000591c:	test   eax,eax
   14000591e:	je     0x140005988
   140005920:	cmp    QWORD PTR [rdi+r14*1+0x18],rbx
   140005925:	lea    rdx,[rip+0x3784]        # 0x1400090b0
   14000592c:	mov    rcx,rbp
   14000592f:	cmovne rcx,QWORD PTR [rdi+r14*1+0x18]
   140005935:	call   QWORD PTR [rip+0x2bad]        # 0x1400084e8
   14000593b:	test   eax,eax
   14000593d:	je     0x140005988
   14000593f:	cmp    QWORD PTR [rdi+r14*1+0x18],rbx
   140005944:	lea    rdx,[rip+0x2f5d]        # 0x1400088a8
   14000594b:	mov    rcx,rbp
   14000594e:	cmovne rcx,QWORD PTR [rdi+r14*1+0x18]
   140005954:	call   QWORD PTR [rip+0x2b8e]        # 0x1400084e8
   14000595a:	test   eax,eax
   14000595c:	je     0x140005984
   14000595e:	cmp    QWORD PTR [rdi+r14*1+0x18],rbx
   140005963:	lea    rdx,[rip+0x374a]        # 0x1400090b4
   14000596a:	cmovne rbp,QWORD PTR [rdi+r14*1+0x18]
   140005970:	mov    rcx,rbp
   140005973:	call   QWORD PTR [rip+0x2b6f]        # 0x1400084e8
   140005979:	test   eax,eax
   14000597b:	je     0x140005984
   14000597d:	mov    ebx,0x80070057
   140005982:	jmp    0x14000598e
   140005984:	mov    DWORD PTR [rsi],ebx
   140005986:	jmp    0x14000598e
   140005988:	mov    DWORD PTR [rsi],0x1
   14000598e:	mov    eax,ebx
   140005990:	jmp    0x1400059d7
   140005992:	mov    rcx,QWORD PTR [rdi+r14*1+0x8]
   140005997:	lea    rdx,[rip+0x2e92]        # 0x140008830
   14000599e:	call   QWORD PTR [rip+0x2b44]        # 0x1400084e8
   1400059a4:	test   eax,eax
   1400059a6:	je     0x1400059cf
   1400059a8:	cmp    QWORD PTR [rdi+r14*1+0x18],rbx
   1400059ad:	lea    rcx,[rip+0x2d40]        # 0x1400086f4
   1400059b4:	lea    rdx,[rip+0x36f5]        # 0x1400090b0
   1400059bb:	cmovne rcx,QWORD PTR [rdi+r14*1+0x18]
   1400059c1:	call   QWORD PTR [rip+0x2b21]        # 0x1400084e8
   1400059c7:	test   eax,eax
   1400059c9:	je     0x1400059cf
   1400059cb:	mov    DWORD PTR [rsi],ebx
   1400059cd:	jmp    0x1400059d5
   1400059cf:	mov    DWORD PTR [rsi],0x1
   1400059d5:	xor    eax,eax
   1400059d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400059dc:	mov    rbp,QWORD PTR [rsp+0x38]
   1400059e1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400059e6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400059eb:	add    rsp,0x20
   1400059ef:	pop    r14
   1400059f1:	ret    
   1400059f2:	int3   
   1400059f3:	int3   
   1400059f4:	int3   
   1400059f5:	int3   
   1400059f6:	int3   
   1400059f7:	int3   
   1400059f8:	mov    QWORD PTR [rsp+0x18],rbx
   1400059fd:	push   rbp
   1400059fe:	push   rsi
   1400059ff:	push   rdi
   140005a00:	push   r12
   140005a02:	push   r13
   140005a04:	push   r14
   140005a06:	push   r15
   140005a08:	lea    rbp,[rsp-0x150]
   140005a10:	sub    rsp,0x250
   140005a17:	mov    rax,QWORD PTR [rip+0x595a]        # 0x14000b378
   140005a1e:	xor    rax,rsp
   140005a21:	mov    QWORD PTR [rbp+0x140],rax
   140005a28:	xor    r13d,r13d
   140005a2b:	lea    rsi,[rip+0x2cc2]        # 0x1400086f4
   140005a32:	cmp    DWORD PTR [rip+0x5857],r13d        # 0x14000b290
   140005a39:	mov    r15,rdx
   140005a3c:	mov    r14,rcx
   140005a3f:	mov    DWORD PTR [rsp+0x20],r13d
   140005a44:	mov    DWORD PTR [rsp+0x28],r13d
   140005a49:	lea    edi,[r13+0xf]
   140005a4d:	je     0x140005b65
   140005a53:	mov    rax,QWORD PTR [rip+0x583e]        # 0x14000b298
   140005a5a:	lea    rcx,[rip+0x35e7]        # 0x140009048
   140005a61:	test   rax,rax
   140005a64:	mov    rbx,rsi
   140005a67:	cmovne rbx,rax
   140005a6b:	mov    rdx,rbx
   140005a6e:	call   QWORD PTR [rip+0x27bc]        # 0x140008230
   140005a74:	lea    rdx,[rip+0x35e5]        # 0x140009060
   140005a7b:	mov    rcx,rbx
   140005a7e:	call   QWORD PTR [rip+0x2a64]        # 0x1400084e8
   140005a84:	test   eax,eax
   140005a86:	je     0x140005b65
   140005a8c:	lea    rdx,[rip+0x35d9]        # 0x14000906c
   140005a93:	mov    rcx,rbx
   140005a96:	call   QWORD PTR [rip+0x2a4c]        # 0x1400084e8
   140005a9c:	test   eax,eax
   140005a9e:	je     0x140005b65
   140005aa4:	lea    rdx,[rip+0x35c5]        # 0x140009070
   140005aab:	mov    rcx,rbx
   140005aae:	call   QWORD PTR [rip+0x2a34]        # 0x1400084e8
   140005ab4:	test   eax,eax
   140005ab6:	je     0x140005b59
   140005abc:	lea    rdx,[rip+0x35b9]        # 0x14000907c
   140005ac3:	mov    rcx,rbx
   140005ac6:	call   QWORD PTR [rip+0x2a1c]        # 0x1400084e8
   140005acc:	test   eax,eax
   140005ace:	je     0x140005b59
   140005ad4:	lea    rdx,[rip+0x35a5]        # 0x140009080
   140005adb:	mov    rcx,rbx
   140005ade:	call   QWORD PTR [rip+0x2a04]        # 0x1400084e8
   140005ae4:	test   eax,eax
   140005ae6:	je     0x140005b48
   140005ae8:	lea    rdx,[rip+0x359d]        # 0x14000908c
   140005aef:	mov    rcx,rbx
   140005af2:	call   QWORD PTR [rip+0x29f0]        # 0x1400084e8
   140005af8:	test   eax,eax
   140005afa:	je     0x140005b48
   140005afc:	lea    rdx,[rip+0x358d]        # 0x140009090
   140005b03:	mov    rcx,rbx
   140005b06:	call   QWORD PTR [rip+0x29dc]        # 0x1400084e8
   140005b0c:	test   eax,eax
   140005b0e:	je     0x140005b50
   140005b10:	lea    rdx,[rip+0x3585]        # 0x14000909c
   140005b17:	mov    rcx,rbx
   140005b1a:	call   QWORD PTR [rip+0x29c8]        # 0x1400084e8
   140005b20:	test   eax,eax
   140005b22:	je     0x140005b50
   140005b24:	lea    rdx,[rip+0x3575]        # 0x1400090a0
   140005b2b:	mov    rcx,rbx
   140005b2e:	call   QWORD PTR [rip+0x29b4]        # 0x1400084e8
   140005b34:	test   eax,eax
   140005b36:	je     0x140005b48
   140005b38:	lea    rdx,[rip+0x356d]        # 0x1400090ac
   140005b3f:	mov    rcx,rbx
   140005b42:	call   QWORD PTR [rip+0x29a0]        # 0x1400084e8
   140005b48:	mov    DWORD PTR [rip+0x5df6],edi        # 0x14000b944
   140005b4e:	jmp    0x140005b6f
   140005b50:	mov    DWORD PTR [rip+0x5ded],r13d        # 0x14000b944
   140005b57:	jmp    0x140005b6f
   140005b59:	mov    DWORD PTR [rip+0x5de1],0x7        # 0x14000b944
   140005b63:	jmp    0x140005b6f
   140005b65:	mov    DWORD PTR [rip+0x5dd5],0x3        # 0x14000b944
   140005b6f:	cmp    DWORD PTR [rip+0x549a],r13d        # 0x14000b010
   140005b76:	je     0x140005bcf
   140005b78:	cmp    DWORD PTR [rip+0x55b1],r13d        # 0x14000b130
   140005b7f:	jne    0x140005bb8
   140005b81:	cmp    DWORD PTR [rip+0x5508],r13d        # 0x14000b090
   140005b88:	jne    0x140005bb8
   140005b8a:	cmp    DWORD PTR [rip+0x551f],r13d        # 0x14000b0b0
   140005b91:	jne    0x140005bb8
   140005b93:	cmp    DWORD PTR [rip+0x5536],r13d        # 0x14000b0d0
   140005b9a:	jne    0x140005bb8
   140005b9c:	mov    eax,DWORD PTR [rip+0x548e]        # 0x14000b030
   140005ba2:	test   eax,eax
   140005ba4:	jne    0x140005bb8
   140005ba6:	cmp    DWORD PTR [rip+0x54a3],r13d        # 0x14000b050
   140005bad:	jne    0x140005bb8
   140005baf:	cmp    DWORD PTR [rip+0x54ba],r13d        # 0x14000b070
   140005bb6:	je     0x140005c14
   140005bb8:	mov    edx,0x2716
   140005bbd:	mov    rcx,r15
   140005bc0:	call   0x1400041a0
   140005bc5:	mov    edi,0x80070057
   140005bca:	jmp    0x140006455
   140005bcf:	mov    eax,DWORD PTR [rip+0x545b]        # 0x14000b030
   140005bd5:	test   eax,eax
   140005bd7:	je     0x140005be9
   140005bd9:	cmp    DWORD PTR [rip+0x5470],r13d        # 0x14000b050
   140005be0:	jne    0x140005bf2
   140005be2:	mov    edx,0x2717
   140005be7:	jmp    0x140005bbd
   140005be9:	cmp    DWORD PTR [rip+0x5460],r13d        # 0x14000b050
   140005bf0:	je     0x140005c14
   140005bf2:	cmp    DWORD PTR [rip+0x5577],r13d        # 0x14000b170
   140005bf9:	jne    0x140005c0d
   140005bfb:	cmp    DWORD PTR [rip+0x554e],r13d        # 0x14000b150
   140005c02:	jne    0x140005c0d
   140005c04:	cmp    DWORD PTR [rip+0x5585],r13d        # 0x14000b190
   140005c0b:	je     0x140005c14
   140005c0d:	mov    edx,0x2726
   140005c12:	jmp    0x140005bbd
   140005c14:	cmp    DWORD PTR [rip+0x5695],r13d        # 0x14000b2b0
   140005c1b:	je     0x140005c3a
   140005c1d:	mov    rax,QWORD PTR [rip+0x5694]        # 0x14000b2b8
   140005c24:	mov    rcx,rsi
   140005c27:	test   rax,rax
   140005c2a:	cmovne rcx,rax
   140005c2e:	call   QWORD PTR [rip+0x2514]        # 0x140008148
   140005c34:	mov    eax,DWORD PTR [rip+0x53f6]        # 0x14000b030
   140005c3a:	test   eax,eax
   140005c3c:	je     0x140005c8c
   140005c3e:	mov    DWORD PTR [r14],r13d
   140005c41:	lea    rcx,[r14+0x48]
   140005c45:	mov    rax,QWORD PTR [rip+0x53ec]        # 0x14000b038
   140005c4c:	mov    rdx,rsi
   140005c4f:	test   rax,rax
   140005c52:	cmovne rdx,rax
   140005c56:	call   0x140001ae4
   140005c5b:	mov    edi,eax
   140005c5d:	test   eax,eax
   140005c5f:	js     0x140006455
   140005c65:	mov    rax,QWORD PTR [rip+0x53cc]        # 0x14000b038
   140005c6c:	mov    rcx,rsi
   140005c6f:	test   rax,rax
   140005c72:	cmovne rcx,rax
   140005c76:	call   QWORD PTR [rip+0x274c]        # 0x1400083c8
   140005c7c:	lea    ecx,[rax-0x1]
   140005c7f:	cmp    ecx,0xfffd
   140005c85:	ja     0x140005d04
   140005c87:	mov    WORD PTR [r14+0x50],ax
   140005c8c:	cmp    DWORD PTR [rip+0x53bd],r13d        # 0x14000b050
   140005c93:	je     0x140005ce8
   140005c95:	mov    DWORD PTR [r14],r13d
   140005c98:	lea    rcx,[r14+0x28]
   140005c9c:	mov    rax,QWORD PTR [rip+0x53b5]        # 0x14000b058
   140005ca3:	mov    rdx,rsi
   140005ca6:	test   rax,rax
   140005ca9:	cmovne rdx,rax
   140005cad:	call   0x140001ae4
   140005cb2:	mov    edi,eax
   140005cb4:	test   eax,eax
   140005cb6:	js     0x140006455
   140005cbc:	cmp    DWORD PTR [rip+0x538d],r13d        # 0x14000b050
   140005cc3:	je     0x140005ce8
   140005cc5:	cmp    DWORD PTR [rip+0x5364],r13d        # 0x14000b030
   140005ccc:	jne    0x140005ce8
   140005cce:	lea    rcx,[r14+0x48]
   140005cd2:	lea    rdx,[rip+0x33df]        # 0x1400090b8
   140005cd9:	call   0x140001ae4
   140005cde:	mov    edi,eax
   140005ce0:	test   eax,eax
   140005ce2:	js     0x140006455
   140005ce8:	cmp    DWORD PTR [rip+0x5381],r13d        # 0x14000b070
   140005cef:	je     0x140005d0e
   140005cf1:	mov    rax,QWORD PTR [rip+0x5380]        # 0x14000b078
   140005cf8:	mov    rdx,rsi
   140005cfb:	test   rax,rax
   140005cfe:	cmovne rdx,rax
   140005d02:	jmp    0x140005d1a
   140005d04:	mov    edx,0x2714
   140005d09:	jmp    0x140005bbd
   140005d0e:	cmp    DWORD PTR [r14],r13d
   140005d11:	jne    0x140005d2d
   140005d13:	lea    rdx,[rip+0x2ec2]        # 0x140008bdc
   140005d1a:	lea    rcx,[r14+0x30]
   140005d1e:	call   0x140001ae4
   140005d23:	mov    edi,eax
   140005d25:	test   eax,eax
   140005d27:	js     0x140006455
   140005d2d:	cmp    DWORD PTR [rip+0x539c],r13d        # 0x14000b0d0
   140005d34:	lea    rcx,[r14+0x38]
   140005d38:	je     0x140005d4d
   140005d3a:	mov    rax,QWORD PTR [rip+0x5397]        # 0x14000b0d8
   140005d41:	mov    rdx,rsi
   140005d44:	test   rax,rax
   140005d47:	cmovne rdx,rax
   140005d4b:	jmp    0x140005d54
   140005d4d:	lea    rdx,[rip+0x3374]        # 0x1400090c8
   140005d54:	call   0x140001ae4
   140005d59:	mov    edi,eax
   140005d5b:	test   eax,eax
   140005d5d:	js     0x140006455
   140005d63:	cmp    DWORD PTR [rip+0x52a6],r13d        # 0x14000b010
   140005d6a:	je     0x140005deb
   140005d6c:	mov    DWORD PTR [r14],0x1
   140005d73:	lea    rbx,[r14+0x10]
   140005d77:	mov    rax,QWORD PTR [rip+0x529a]        # 0x14000b018
   140005d7e:	mov    rcx,rsi
   140005d81:	test   rax,rax
   140005d84:	mov    rdx,rbx
   140005d87:	cmovne rcx,rax
   140005d8b:	call   0x140004538
   140005d90:	mov    edi,eax
   140005d92:	test   eax,eax
   140005d94:	jns    0x140005da5
   140005d96:	mov    rdx,r15
   140005d99:	mov    ecx,eax
   140005d9b:	call   0x1400043e8
   140005da0:	jmp    0x140006455
   140005da5:	cmp    QWORD PTR [rbx],r13
   140005da8:	mov    rcx,rsi
   140005dab:	cmovne rcx,QWORD PTR [rbx]
   140005daf:	call   0x140004138
   140005db4:	test   eax,eax
   140005db6:	jne    0x140005e1d
   140005db8:	mov    edx,0x2713
   140005dbd:	mov    rcx,r15
   140005dc0:	mov    edi,0x80070057
   140005dc5:	call   0x1400041a0
   140005dca:	cmp    QWORD PTR [rbx],r13
   140005dcd:	mov    r8,rsi
   140005dd0:	mov    rcx,r15
   140005dd3:	cmovne r8,QWORD PTR [rbx]
   140005dd7:	cmp    QWORD PTR [r15],r13
   140005dda:	cmovne rsi,QWORD PTR [r15]
   140005dde:	mov    rdx,rsi
   140005de1:	call   0x1400053ec
   140005de6:	jmp    0x140006455
   140005deb:	cmp    DWORD PTR [rip+0x525e],r13d        # 0x14000b050
   140005df2:	jne    0x140005e1d
   140005df4:	mov    DWORD PTR [r14],0x1
   140005dfb:	call   QWORD PTR [rip+0x233f]        # 0x140008140
   140005e01:	mov    rcx,rax
   140005e04:	lea    rdx,[r14+0x10]
   140005e08:	call   0x140004538
   140005e0d:	mov    edi,eax
   140005e0f:	test   eax,eax
   140005e11:	js     0x140005d96
   140005e13:	mov    DWORD PTR [rip+0x51f3],0x1        # 0x14000b010
   140005e1d:	cmp    DWORD PTR [rip+0x526c],r13d        # 0x14000b090
   140005e24:	je     0x14000601c
   140005e2a:	lea    rbx,[r14+0x18]
   140005e2e:	mov    rdi,QWORD PTR [rbx]
   140005e31:	test   rdi,rdi
   140005e34:	je     0x140005e4d
   140005e36:	call   QWORD PTR [rip+0x24e4]        # 0x140008320
   140005e3c:	mov    r8,rdi
   140005e3f:	xor    edx,edx
   140005e41:	mov    rcx,rax
   140005e44:	call   QWORD PTR [rip+0x24ce]        # 0x140008318
   140005e4a:	mov    QWORD PTR [rbx],r13
   140005e4d:	mov    rax,QWORD PTR [rip+0x5244]        # 0x14000b098
   140005e54:	mov    rcx,rsi
   140005e57:	test   rax,rax
   140005e5a:	cmovne rcx,rax
   140005e5e:	movzx  ecx,WORD PTR [rcx]
   140005e61:	call   QWORD PTR [rip+0x2639]        # 0x1400084a0
   140005e67:	mov    r12d,0x76
   140005e6d:	cmp    eax,r12d
   140005e70:	je     0x140005e8b
   140005e72:	lea    rdx,[rip+0x3263]        # 0x1400090dc
   140005e79:	mov    rcx,rbx
   140005e7c:	call   0x140001ae4
   140005e81:	mov    edi,eax
   140005e83:	test   eax,eax
   140005e85:	js     0x140006455
   140005e8b:	mov    rax,QWORD PTR [rip+0x5206]        # 0x14000b098
   140005e92:	mov    rdx,rsi
   140005e95:	test   rax,rax
   140005e98:	mov    rcx,rbx
   140005e9b:	cmovne rdx,rax
   140005e9f:	call   0x140001ba0
   140005ea4:	mov    edi,eax
   140005ea6:	test   eax,eax
   140005ea8:	js     0x140006455
   140005eae:	mov    rax,QWORD PTR [rbx]
   140005eb1:	test   rax,rax
   140005eb4:	je     0x140005ebc
   140005eb6:	cmp    WORD PTR [rax],r12w
   140005eba:	je     0x140005f25
   140005ebc:	test   rax,rax
   140005ebf:	lea    rcx,[rsp+0x30]
   140005ec4:	mov    r8,rsi
   140005ec7:	mov    edx,0x104
   140005ecc:	cmovne r8,rax
   140005ed0:	call   QWORD PTR [rip+0x2602]        # 0x1400084d8
   140005ed6:	mov    rdi,QWORD PTR [rbx]
   140005ed9:	test   rdi,rdi
   140005edc:	je     0x140005ef5
   140005ede:	call   QWORD PTR [rip+0x243c]        # 0x140008320
   140005ee4:	mov    r8,rdi
   140005ee7:	xor    edx,edx
   140005ee9:	mov    rcx,rax
   140005eec:	call   QWORD PTR [rip+0x2426]        # 0x140008318
   140005ef2:	mov    QWORD PTR [rbx],r13
   140005ef5:	lea    rdx,[rip+0x31e0]        # 0x1400090dc
   140005efc:	mov    rcx,rbx
   140005eff:	call   0x140001ae4
   140005f04:	mov    edi,eax
   140005f06:	test   eax,eax
   140005f08:	js     0x140006455
   140005f0e:	lea    rdx,[rsp+0x32]
   140005f13:	mov    rcx,rbx
   140005f16:	call   0x140001ba0
   140005f1b:	mov    edi,eax
   140005f1d:	test   eax,eax
   140005f1f:	js     0x140006455
   140005f25:	cmp    QWORD PTR [rbx],r13
   140005f28:	lea    rdx,[rip+0x31b1]        # 0x1400090e0
   140005f2f:	mov    rcx,rsi
   140005f32:	cmovne rcx,QWORD PTR [rbx]
   140005f36:	call   QWORD PTR [rip+0x25ac]        # 0x1400084e8
   140005f3c:	test   eax,eax
   140005f3e:	je     0x140005fe4
   140005f44:	cmp    QWORD PTR [rbx],r13
   140005f47:	lea    rdx,[rip+0x31a2]        # 0x1400090f0
   140005f4e:	mov    rcx,rsi
   140005f51:	cmovne rcx,QWORD PTR [rbx]
   140005f55:	call   QWORD PTR [rip+0x258d]        # 0x1400084e8
   140005f5b:	test   eax,eax
   140005f5d:	je     0x140005fe4
   140005f63:	cmp    QWORD PTR [rbx],r13
   140005f66:	lea    rdx,[rip+0x318b]        # 0x1400090f8
   140005f6d:	mov    rcx,rsi
   140005f70:	cmovne rcx,QWORD PTR [rbx]
   140005f74:	call   QWORD PTR [rip+0x256e]        # 0x1400084e8
   140005f7a:	test   eax,eax
   140005f7c:	je     0x140005fe4
   140005f7e:	cmp    QWORD PTR [rbx],r13
   140005f81:	lea    rdx,[rip+0x3180]        # 0x140009108
   140005f88:	mov    rcx,rsi
   140005f8b:	cmovne rcx,QWORD PTR [rbx]
   140005f8f:	call   QWORD PTR [rip+0x2553]        # 0x1400084e8
   140005f95:	test   eax,eax
   140005f97:	je     0x140005fe4
   140005f99:	cmp    QWORD PTR [rbx],r13
   140005f9c:	lea    rdx,[rip+0x316d]        # 0x140009110
   140005fa3:	mov    rcx,rsi
   140005fa6:	cmovne rcx,QWORD PTR [rbx]
   140005faa:	call   0x140007c1a
   140005faf:	test   eax,eax
   140005fb1:	je     0x14000601c
   140005fb3:	cmp    QWORD PTR [rbx],r13
   140005fb6:	lea    rdx,[rip+0x3163]        # 0x140009120
   140005fbd:	mov    rcx,rsi
   140005fc0:	cmovne rcx,QWORD PTR [rbx]
   140005fc4:	call   0x140007c1a
   140005fc9:	test   eax,eax
   140005fcb:	je     0x14000601c
   140005fcd:	mov    edx,0x2722
   140005fd2:	mov    edi,0x80070057
   140005fd7:	mov    rcx,r15
   140005fda:	call   0x1400041a0
   140005fdf:	jmp    0x140006455
   140005fe4:	mov    rdi,QWORD PTR [rbx]
   140005fe7:	test   rdi,rdi
   140005fea:	je     0x140006003
   140005fec:	call   QWORD PTR [rip+0x232e]        # 0x140008320
   140005ff2:	mov    r8,rdi
   140005ff5:	xor    edx,edx
   140005ff7:	mov    rcx,rax
   140005ffa:	call   QWORD PTR [rip+0x2318]        # 0x140008318
   140006000:	mov    QWORD PTR [rbx],r13
   140006003:	lea    rdx,[rip+0x3106]        # 0x140009110
   14000600a:	mov    rcx,rbx
   14000600d:	call   0x140001ae4
   140006012:	mov    edi,eax
   140006014:	test   eax,eax
   140006016:	js     0x140006455
   14000601c:	cmp    DWORD PTR [rip+0x508d],r13d        # 0x14000b0b0
   140006023:	je     0x14000612c
   140006029:	mov    rax,QWORD PTR [rip+0x5088]        # 0x14000b0b8
   140006030:	lea    rbx,[r14+0x20]
   140006034:	test   rax,rax
   140006037:	mov    rdx,rsi
   14000603a:	mov    rcx,rbx
   14000603d:	cmovne rdx,rax
   140006041:	call   0x140001ae4
   140006046:	mov    edi,eax
   140006048:	test   eax,eax
   14000604a:	js     0x140006455
   140006050:	cmp    QWORD PTR [rbx],r13
   140006053:	lea    r12,[rip+0x30d6]        # 0x140009130
   14000605a:	mov    rcx,rsi
   14000605d:	mov    rdx,r12
   140006060:	cmovne rcx,QWORD PTR [rbx]
   140006064:	call   0x140007c1a
   140006069:	test   eax,eax
   14000606b:	je     0x14000612c
   140006071:	cmp    QWORD PTR [rbx],r13
   140006074:	lea    rdx,[rip+0x30c5]        # 0x140009140
   14000607b:	mov    rcx,rsi
   14000607e:	cmovne rcx,QWORD PTR [rbx]
   140006082:	call   0x140007c1a
   140006087:	test   eax,eax
   140006089:	je     0x14000612c
   14000608f:	cmp    QWORD PTR [rbx],r13
   140006092:	mov    rcx,rsi
   140006095:	mov    rdx,r12
   140006098:	cmovne rcx,QWORD PTR [rbx]
   14000609c:	call   QWORD PTR [rip+0x2446]        # 0x1400084e8
   1400060a2:	test   eax,eax
   1400060a4:	jne    0x1400060bc
   1400060a6:	cmp    QWORD PTR [rbx],r13
   1400060a9:	mov    rcx,rsi
   1400060ac:	mov    rdx,r12
   1400060af:	cmovne rcx,QWORD PTR [rbx]
   1400060b3:	call   0x140007c1a
   1400060b8:	test   eax,eax
   1400060ba:	jne    0x1400060f8
   1400060bc:	cmp    QWORD PTR [rbx],r13
   1400060bf:	lea    r12,[rip+0x307a]        # 0x140009140
   1400060c6:	mov    rcx,rsi
   1400060c9:	mov    rdx,r12
   1400060cc:	cmovne rcx,QWORD PTR [rbx]
   1400060d0:	call   QWORD PTR [rip+0x2412]        # 0x1400084e8
   1400060d6:	test   eax,eax
   1400060d8:	jne    0x140006228
   1400060de:	cmp    QWORD PTR [rbx],r13
   1400060e1:	mov    rcx,rsi
   1400060e4:	mov    rdx,r12
   1400060e7:	cmovne rcx,QWORD PTR [rbx]
   1400060eb:	call   0x140007c1a
   1400060f0:	test   eax,eax
   1400060f2:	je     0x140006228
   1400060f8:	mov    rdi,QWORD PTR [rbx]
   1400060fb:	test   rdi,rdi
   1400060fe:	je     0x140006117
   140006100:	call   QWORD PTR [rip+0x221a]        # 0x140008320
   140006106:	mov    r8,rdi
   140006109:	xor    edx,edx
   14000610b:	mov    rcx,rax
   14000610e:	call   QWORD PTR [rip+0x2204]        # 0x140008318
   140006114:	mov    QWORD PTR [rbx],r13
   140006117:	mov    rdx,r12
   14000611a:	mov    rcx,rbx
   14000611d:	call   0x140001ae4
   140006122:	mov    edi,eax
   140006124:	test   eax,eax
   140006126:	js     0x140006455
   14000612c:	cmp    DWORD PTR [rip+0x503d],r13d        # 0x14000b170
   140006133:	je     0x140006257
   140006139:	cmp    QWORD PTR [r14+0x10],r13
   14000613d:	mov    rcx,rsi
   140006140:	cmovne rcx,QWORD PTR [r14+0x10]
   140006145:	call   0x140004138
   14000614a:	test   eax,eax
   14000614c:	jne    0x140006162
   14000614e:	cmp    QWORD PTR [r14+0x10],r13
   140006152:	mov    rcx,rsi
   140006155:	cmovne rcx,QWORD PTR [r14+0x10]
   14000615a:	xor    edx,edx
   14000615c:	call   QWORD PTR [rip+0x1fee]        # 0x140008150
   140006162:	mov    rax,QWORD PTR [rip+0x500f]        # 0x14000b178
   140006169:	lea    rbx,[r14+0x40]
   14000616d:	test   rax,rax
   140006170:	mov    rdx,rsi
   140006173:	mov    rcx,rbx
   140006176:	cmovne rdx,rax
   14000617a:	call   0x140001ae4
   14000617f:	mov    edi,eax
   140006181:	test   eax,eax
   140006183:	js     0x140006455
   140006189:	cmp    QWORD PTR [rbx],r13
   14000618c:	lea    r8,[rsp+0x20]
   140006191:	mov    rdx,rsi
   140006194:	mov    rcx,rsi
   140006197:	cmovne rdx,QWORD PTR [rbx]
   14000619b:	cmp    QWORD PTR [r14+0x10],r13
   14000619f:	cmovne rcx,QWORD PTR [r14+0x10]
   1400061a4:	call   0x140004dec
   1400061a9:	mov    edi,eax
   1400061ab:	test   eax,eax
   1400061ad:	js     0x140005d96
   1400061b3:	cmp    DWORD PTR [rsp+0x20],r13d
   1400061b8:	jne    0x140006232
   1400061ba:	mov    edx,0x2725
   1400061bf:	mov    rcx,r15
   1400061c2:	mov    edi,0x80070057
   1400061c7:	call   0x1400041a0
   1400061cc:	cmp    QWORD PTR [rbx],r13
   1400061cf:	lea    rcx,[rsp+0x28]
   1400061d4:	mov    r8,rsi
   1400061d7:	mov    QWORD PTR [rsp+0x28],r13
   1400061dc:	cmovne r8,QWORD PTR [rbx]
   1400061e0:	mov    rdx,rsi
   1400061e3:	cmp    QWORD PTR [r15],r13
   1400061e6:	cmovne rdx,QWORD PTR [r15]
   1400061ea:	call   0x1400053ec
   1400061ef:	mov    rbx,QWORD PTR [rsp+0x28]
   1400061f4:	mov    rcx,r15
   1400061f7:	test   rbx,rbx
   1400061fa:	cmovne rsi,rbx
   1400061fe:	mov    rdx,rsi
   140006201:	call   0x140001ae4
   140006206:	test   rbx,rbx
   140006209:	je     0x140006455
   14000620f:	call   QWORD PTR [rip+0x210b]        # 0x140008320
   140006215:	mov    r8,rbx
   140006218:	xor    edx,edx
   14000621a:	mov    rcx,rax
   14000621d:	call   QWORD PTR [rip+0x20f5]        # 0x140008318
   140006223:	jmp    0x140006455
   140006228:	mov    edx,0x2721
   14000622d:	jmp    0x140005fd2
   140006232:	cmp    QWORD PTR [rbx],r13
   140006235:	lea    rcx,[rip+0x2f1c]        # 0x140009158
   14000623c:	mov    rdx,rsi
   14000623f:	cmovne rdx,QWORD PTR [rbx]
   140006243:	call   QWORD PTR [rip+0x1fe7]        # 0x140008230
   140006249:	test   eax,eax
   14000624b:	jne    0x140006257
   14000624d:	mov    edx,0x271f
   140006252:	jmp    0x140005fd7
   140006257:	cmp    DWORD PTR [rip+0x4ef2],r13d        # 0x14000b150
   14000625e:	je     0x14000635e
   140006264:	cmp    QWORD PTR [r14+0x10],r13
   140006268:	mov    rcx,rsi
   14000626b:	cmovne rcx,QWORD PTR [r14+0x10]
   140006270:	call   0x140004138
   140006275:	test   eax,eax
   140006277:	jne    0x14000628d
   140006279:	cmp    QWORD PTR [r14+0x10],r13
   14000627d:	mov    rcx,rsi
   140006280:	cmovne rcx,QWORD PTR [r14+0x10]
   140006285:	xor    edx,edx
   140006287:	call   QWORD PTR [rip+0x1ec3]        # 0x140008150
   14000628d:	mov    rax,QWORD PTR [rip+0x4ec4]        # 0x14000b158
   140006294:	lea    r12,[r14+0x40]
   140006298:	test   rax,rax
   14000629b:	mov    DWORD PTR [rsp+0x20],r13d
   1400062a0:	mov    rdx,rsi
   1400062a3:	lea    r9,[rsp+0x20]
   1400062a8:	cmovne rdx,rax
   1400062ac:	mov    rcx,rsi
   1400062af:	cmp    QWORD PTR [r14+0x10],r13
   1400062b3:	mov    r8,r12
   1400062b6:	cmovne rcx,QWORD PTR [r14+0x10]
   1400062bb:	call   0x140005080
   1400062c0:	mov    edi,eax
   1400062c2:	test   eax,eax
   1400062c4:	js     0x140005d96
   1400062ca:	cmp    DWORD PTR [rsp+0x20],r13d
   1400062cf:	jne    0x14000633d
   1400062d1:	mov    edx,0x2730
   1400062d6:	mov    rcx,r15
   1400062d9:	mov    edi,0x80070057
   1400062de:	call   0x1400041a0
   1400062e3:	mov    rax,QWORD PTR [rip+0x4e6e]        # 0x14000b158
   1400062ea:	lea    rcx,[rsp+0x20]
   1400062ef:	test   rax,rax
   1400062f2:	mov    QWORD PTR [rsp+0x20],r13
   1400062f7:	mov    r8,rsi
   1400062fa:	mov    rdx,rsi
   1400062fd:	cmovne r8,rax
   140006301:	cmp    QWORD PTR [r15],r13
   140006304:	cmovne rdx,QWORD PTR [r15]
   140006308:	call   0x1400053ec
   14000630d:	mov    rbx,QWORD PTR [rsp+0x20]
   140006312:	mov    rdx,rsi
   140006315:	test   rbx,rbx
   140006318:	mov    rcx,r15
   14000631b:	cmovne rdx,rbx
   14000631f:	call   0x140001ae4
   140006324:	test   rbx,rbx
   140006327:	je     0x14000633d
   140006329:	call   QWORD PTR [rip+0x1ff1]        # 0x140008320
   14000632f:	mov    r8,rbx
   140006332:	xor    edx,edx
   140006334:	mov    rcx,rax
   140006337:	call   QWORD PTR [rip+0x1fdb]        # 0x140008318
   14000633d:	cmp    QWORD PTR [r12],r13
   140006341:	lea    rcx,[rip+0x2e10]        # 0x140009158
   140006348:	mov    rdx,rsi
   14000634b:	cmovne rdx,QWORD PTR [r12]
   140006350:	call   QWORD PTR [rip+0x1eda]        # 0x140008230
   140006356:	test   eax,eax
   140006358:	je     0x14000624d
   14000635e:	cmp    DWORD PTR [rip+0x4e2b],r13d        # 0x14000b190
   140006365:	je     0x1400063bf
   140006367:	mov    rax,QWORD PTR [rip+0x4e2a]        # 0x14000b198
   14000636e:	lea    rbx,[r14+0x8]
   140006372:	test   rax,rax
   140006375:	mov    rdx,rsi
   140006378:	mov    rcx,rbx
   14000637b:	cmovne rdx,rax
   14000637f:	call   0x140001ae4
   140006384:	mov    edi,eax
   140006386:	test   eax,eax
   140006388:	js     0x140006455
   14000638e:	cmp    QWORD PTR [rbx],r13
   140006391:	lea    r8,[rsp+0x28]
   140006396:	mov    rdx,rsi
   140006399:	cmovne rdx,QWORD PTR [rbx]
   14000639d:	cmp    QWORD PTR [r14+0x10],r13
   1400063a1:	cmovne rsi,QWORD PTR [r14+0x10]
   1400063a6:	mov    rcx,rsi
   1400063a9:	call   0x140003610
   1400063ae:	cmp    DWORD PTR [rsp+0x28],r13d
   1400063b3:	jne    0x1400063bf
   1400063b5:	mov    edx,0x2724
   1400063ba:	jmp    0x140005fd2
   1400063bf:	cmp    DWORD PTR [rip+0x4d6a],r13d        # 0x14000b130
   1400063c6:	je     0x1400063de
   1400063c8:	mov    ebx,0x9
   1400063cd:	lea    rdx,[r14+0x54]
   1400063d1:	mov    ecx,ebx
   1400063d3:	call   0x1400058b0
   1400063d8:	mov    edi,eax
   1400063da:	test   eax,eax
   1400063dc:	js     0x14000644b
   1400063de:	cmp    DWORD PTR [rip+0x4d2b],r13d        # 0x14000b110
   1400063e5:	je     0x14000640d
   1400063e7:	mov    ebx,0x8
   1400063ec:	lea    rdx,[rsp+0x28]
   1400063f1:	mov    ecx,ebx
   1400063f3:	call   0x1400058b0
   1400063f8:	mov    edi,eax
   1400063fa:	test   eax,eax
   1400063fc:	js     0x14000644b
   1400063fe:	cmp    DWORD PTR [rsp+0x28],r13d
   140006403:	mov    eax,r13d
   140006406:	sete   al
   140006409:	mov    DWORD PTR [r14+0x58],eax
   14000640d:	cmp    DWORD PTR [rip+0x4dfc],r13d        # 0x14000b210
   140006414:	je     0x14000642c
   140006416:	mov    ebx,0x10
   14000641b:	lea    rdx,[r14+0x58]
   14000641f:	mov    ecx,ebx
   140006421:	call   0x1400058b0
   140006426:	mov    edi,eax
   140006428:	test   eax,eax
   14000642a:	js     0x14000644b
   14000642c:	cmp    DWORD PTR [rip+0x4dbd],r13d        # 0x14000b1f0
   140006433:	je     0x140006455
   140006435:	mov    ebx,0xf
   14000643a:	lea    rdx,[r14+0x5c]
   14000643e:	mov    ecx,ebx
   140006440:	call   0x1400058b0
   140006445:	mov    edi,eax
   140006447:	test   eax,eax
   140006449:	jns    0x140006455
   14000644b:	mov    rdx,r15
   14000644e:	mov    ecx,ebx
   140006450:	call   0x1400057dc
   140006455:	mov    eax,edi
   140006457:	mov    rcx,QWORD PTR [rbp+0x140]
   14000645e:	xor    rcx,rsp
   140006461:	call   0x140007390
   140006466:	mov    rbx,QWORD PTR [rsp+0x2a0]
   14000646e:	add    rsp,0x250
   140006475:	pop    r15
   140006477:	pop    r14
   140006479:	pop    r13
   14000647b:	pop    r12
   14000647d:	pop    rdi
   14000647e:	pop    rsi
   14000647f:	pop    rbp
   140006480:	ret    
   140006481:	int3   
   140006482:	int3   
   140006483:	int3   
   140006484:	int3   
   140006485:	int3   
   140006486:	int3   
   140006487:	int3   
   140006488:	mov    r11,rsp
   14000648b:	push   rdi
   14000648c:	push   r12
   14000648e:	push   r13
   140006490:	push   r14
   140006492:	push   r15
   140006494:	sub    rsp,0x30
   140006498:	mov    QWORD PTR [r11-0x38],0xfffffffffffffffe
   1400064a0:	mov    QWORD PTR [r11+0x10],rbx
   1400064a4:	mov    QWORD PTR [r11+0x18],rbp
   1400064a8:	mov    QWORD PTR [r11+0x20],rsi
   1400064ac:	mov    rdi,rdx
   1400064af:	mov    rbp,rcx
   1400064b2:	xor    eax,eax
   1400064b4:	mov    QWORD PTR [r11+0x8],rax
   1400064b8:	mov    ebx,eax
   1400064ba:	mov    r15d,DWORD PTR [rip+0x4ccf]        # 0x14000b190
   1400064c1:	mov    r12d,DWORD PTR [rip+0x4ca8]        # 0x14000b170
   1400064c8:	mov    r13d,DWORD PTR [rip+0x4c81]        # 0x14000b150
   1400064cf:	lea    r14,[rcx+0x10]
   1400064d3:	lea    rsi,[rip+0x221a]        # 0x1400086f4
   1400064da:	mov    rcx,rsi
   1400064dd:	cmp    QWORD PTR [r14],rax
   1400064e0:	cmovne rcx,QWORD PTR [r14]
   1400064e4:	call   0x140004138
   1400064e9:	xor    edx,edx
   1400064eb:	test   eax,eax
   1400064ed:	jne    0x140006553
   1400064ef:	mov    rcx,rsi
   1400064f2:	cmp    QWORD PTR [r14],rdx
   1400064f5:	cmovne rcx,QWORD PTR [r14]
   1400064f9:	call   QWORD PTR [rip+0x1c51]        # 0x140008150
   1400064ff:	mov    rax,QWORD PTR [r14]
   140006502:	xor    edx,edx
   140006504:	test   rax,rax
   140006507:	je     0x140006553
   140006509:	cmp    WORD PTR [rax],dx
   14000650c:	je     0x140006553
   14000650e:	mov    rcx,rsi
   140006511:	test   rax,rax
   140006514:	cmovne rcx,rax
   140006518:	call   0x140004138
   14000651d:	test   eax,eax
   14000651f:	jne    0x140006553
   140006521:	mov    ebx,0x80070057
   140006526:	mov    edx,0x2713
   14000652b:	mov    rcx,rdi
   14000652e:	call   0x1400041a0
   140006533:	mov    r8,rsi
   140006536:	xor    eax,eax
   140006538:	cmp    QWORD PTR [r14],rax
   14000653b:	cmovne r8,QWORD PTR [r14]
   14000653f:	cmp    QWORD PTR [rdi],rax
   140006542:	cmovne rsi,QWORD PTR [rdi]
   140006546:	mov    rdx,rsi
   140006549:	mov    rcx,rdi
   14000654c:	call   0x1400053ec
   140006551:	jmp    0x1400065ce
   140006553:	test   r12d,r12d
   140006556:	jne    0x1400065a8
   140006558:	xor    r12d,r12d
   14000655b:	test   r13d,r13d
   14000655e:	jne    0x1400065a8
   140006560:	test   r15d,r15d
   140006563:	jne    0x1400065ce
   140006565:	lea    r15,[rbp+0x40]
   140006569:	lea    r8,[rbp+0x8]
   14000656d:	mov    rdx,r15
   140006570:	mov    rcx,r14
   140006573:	call   0x140004604
   140006578:	mov    ebx,eax
   14000657a:	test   eax,eax
   14000657c:	js     0x1400065c3
   14000657e:	cmp    QWORD PTR [r15],r12
   140006581:	cmovne rsi,QWORD PTR [r15]
   140006585:	mov    rdx,rsi
   140006588:	lea    rcx,[rip+0x2bc9]        # 0x140009158
   14000658f:	call   QWORD PTR [rip+0x1c9b]        # 0x140008230
   140006595:	test   eax,eax
   140006597:	jne    0x1400065ce
   140006599:	mov    edx,0x271f
   14000659e:	mov    rcx,rdi
   1400065a1:	call   0x1400041a0
   1400065a6:	jmp    0x1400065ce
   1400065a8:	test   r15d,r15d
   1400065ab:	jne    0x1400065ce
   1400065ad:	lea    r8,[rbp+0x8]
   1400065b1:	lea    rdx,[rbp+0x40]
   1400065b5:	mov    rcx,r14
   1400065b8:	call   0x1400049b0
   1400065bd:	mov    ebx,eax
   1400065bf:	test   eax,eax
   1400065c1:	jns    0x1400065ce
   1400065c3:	mov    rdx,rdi
   1400065c6:	mov    ecx,eax
   1400065c8:	call   0x1400043e8
   1400065cd:	nop
   1400065ce:	mov    eax,ebx
   1400065d0:	mov    rbx,QWORD PTR [rsp+0x68]
   1400065d5:	mov    rbp,QWORD PTR [rsp+0x70]
   1400065da:	mov    rsi,QWORD PTR [rsp+0x78]
   1400065df:	add    rsp,0x30
   1400065e3:	pop    r15
   1400065e5:	pop    r14
   1400065e7:	pop    r13
   1400065e9:	pop    r12
   1400065eb:	pop    rdi
   1400065ec:	ret    
   1400065ed:	int3   
   1400065ee:	int3   
   1400065ef:	int3   
   1400065f0:	int3   
   1400065f1:	int3   
   1400065f2:	int3   
   1400065f3:	int3   
   1400065f4:	mov    QWORD PTR [rsp+0x18],rbx
   1400065f9:	mov    QWORD PTR [rsp+0x20],rsi
   1400065fe:	push   rdi
   1400065ff:	sub    rsp,0x250
   140006606:	mov    rax,QWORD PTR [rip+0x4d6b]        # 0x14000b378
   14000660d:	xor    rax,rsp
   140006610:	mov    QWORD PTR [rsp+0x240],rax
   140006618:	mov    rdi,rcx
   14000661b:	mov    rsi,rdx
   14000661e:	lea    rcx,[rip+0x20cf]        # 0x1400086f4
   140006625:	mov    r8d,0x104
   14000662b:	lea    rdx,[rsp+0x30]
   140006630:	cmp    QWORD PTR [rdi+0x28],0x0
   140006635:	cmovne rcx,QWORD PTR [rdi+0x28]
   14000663a:	call   QWORD PTR [rip+0x1b60]        # 0x1400081a0
   140006640:	dec    eax
   140006642:	cmp    eax,0x103
   140006647:	ja     0x14000670b
   14000664d:	lea    rcx,[rsp+0x30]
   140006652:	call   QWORD PTR [rip+0x1b98]        # 0x1400081f0
   140006658:	cmp    eax,0xffffffff
   14000665b:	je     0x14000670b
   140006661:	test   al,0x10
   140006663:	je     0x14000670b
   140006669:	mov    rcx,rdi
   14000666c:	call   0x140002628
   140006671:	mov    ebx,eax
   140006673:	test   eax,eax
   140006675:	jns    0x1400066ee
   140006677:	test   BYTE PTR [rip+0x52c6],0xf        # 0x14000b944
   14000667e:	je     0x1400066e2
   140006680:	mov    rcx,QWORD PTR [rip+0x52c1]        # 0x14000b948
   140006687:	mov    edx,0x4
   14000668c:	mov    rcx,QWORD PTR [rcx+0x280]
   140006693:	call   QWORD PTR [rip+0x1b7f]        # 0x140008218
   140006699:	mov    rcx,QWORD PTR [rip+0x52a8]        # 0x14000b948
   1400066a0:	lea    rax,[rip+0x2ad9]        # 0x140009180
   1400066a7:	mov    QWORD PTR [rsp+0x28],rax
   1400066ac:	lea    r9,[rip+0x2afd]        # 0x1400091b0
   1400066b3:	mov    r8d,0x351
   1400066b9:	mov    DWORD PTR [rsp+0x20],ebx
   1400066bd:	lea    rdx,[rip+0x2b1c]        # 0x1400091e0
   1400066c4:	call   0x140006d38
   1400066c9:	mov    rcx,QWORD PTR [rip+0x5278]        # 0x14000b948
   1400066d0:	mov    edx,0x7
   1400066d5:	mov    rcx,QWORD PTR [rcx+0x280]
   1400066dc:	call   QWORD PTR [rip+0x1b36]        # 0x140008218
   1400066e2:	mov    rdx,rsi
   1400066e5:	mov    ecx,ebx
   1400066e7:	call   0x1400043e8
   1400066ec:	jmp    0x14000671d
   1400066ee:	cmp    DWORD PTR [rip+0x4a9b],0x0        # 0x14000b190
   1400066f5:	jne    0x14000671d
   1400066f7:	lea    rcx,[rdi+0x8]
   1400066fb:	lea    rdx,[rip+0x24de]        # 0x140008be0
   140006702:	call   0x140001ae4
   140006707:	mov    ebx,eax
   140006709:	jmp    0x14000671d
   14000670b:	mov    edx,0x2712
   140006710:	mov    rcx,rsi
   140006713:	call   0x1400041a0
   140006718:	mov    ebx,0x80070057
   14000671d:	mov    eax,ebx
   14000671f:	mov    rcx,QWORD PTR [rsp+0x240]
   140006727:	xor    rcx,rsp
   14000672a:	call   0x140007390
   14000672f:	lea    r11,[rsp+0x250]
   140006737:	mov    rbx,QWORD PTR [r11+0x20]
   14000673b:	mov    rsi,QWORD PTR [r11+0x28]
   14000673f:	mov    rsp,r11
   140006742:	pop    rdi
   140006743:	ret    
   140006744:	int3   
   140006745:	int3   
   140006746:	int3   
   140006747:	int3   
   140006748:	int3   
   140006749:	int3   
   14000674a:	int3   
   14000674b:	int3   
   14000674c:	mov    QWORD PTR [rsp+0x8],rbx
   140006751:	mov    QWORD PTR [rsp+0x10],rbp
   140006756:	mov    QWORD PTR [rsp+0x18],rsi
   14000675b:	push   rdi
   14000675c:	push   r12
   14000675e:	push   r13
   140006760:	push   r14
   140006762:	push   r15
   140006764:	sub    rsp,0x20
   140006768:	xor    r12d,r12d
   14000676b:	mov    r15,rdx
   14000676e:	mov    r14,rcx
   140006771:	mov    ebx,r12d
   140006774:	test   rcx,rcx
   140006777:	jne    0x140006783
   140006779:	mov    eax,0x80070057
   14000677e:	jmp    0x140006844
   140006783:	mov    esi,0x104
   140006788:	mov    r13d,0x2
   14000678e:	jmp    0x1400067c8
   140006790:	mov    ebx,0x8007000e
   140006795:	jmp    0x140006842
   14000679a:	mov    r8d,esi
   14000679d:	mov    rdx,rdi
   1400067a0:	mov    rcx,r14
   1400067a3:	call   QWORD PTR [rip+0x1a5f]        # 0x140008208
   1400067a9:	mov    ebp,eax
   1400067ab:	test   eax,eax
   1400067ad:	je     0x140006821
   1400067af:	call   QWORD PTR [rip+0x1b2b]        # 0x1400082e0
   1400067b5:	mov    rcx,rdi
   1400067b8:	cmp    eax,0x7a
   1400067bb:	je     0x1400067c1
   1400067bd:	cmp    esi,ebp
   1400067bf:	ja     0x1400067eb
   1400067c1:	call   0x140007048
   1400067c6:	add    esi,esi
   1400067c8:	mov    rcx,0xffffffffffffffff
   1400067cf:	mov    rax,r13
   1400067d2:	mul    rsi
   1400067d5:	cmovo  rax,rcx
   1400067d9:	mov    rcx,rax
   1400067dc:	call   0x140006ffc
   1400067e1:	mov    rdi,rax
   1400067e4:	test   rax,rax
   1400067e7:	je     0x140006790
   1400067e9:	jmp    0x14000679a
   1400067eb:	mov    rsi,rdi
   1400067ee:	mov    ebp,0x5c
   1400067f3:	jmp    0x1400067fc
   1400067f5:	mov    rsi,rax
   1400067f8:	lea    rcx,[rax+0x2]
   1400067fc:	mov    edx,ebp
   1400067fe:	call   QWORD PTR [rip+0x1d2c]        # 0x140008530
   140006804:	test   rax,rax
   140006807:	jne    0x1400067f5
   140006809:	test   rsi,rsi
   14000680c:	jne    0x140006815
   14000680e:	mov    ebx,0x80070585
   140006813:	jmp    0x140006835
   140006815:	mov    QWORD PTR [r15],rdi
   140006818:	mov    rdi,r12
   14000681b:	mov    WORD PTR [rsi],r12w
   14000681f:	jmp    0x140006835
   140006821:	call   QWORD PTR [rip+0x1ab9]        # 0x1400082e0
   140006827:	movzx  ebx,ax
   14000682a:	or     ebx,0x80070000
   140006830:	test   eax,eax
   140006832:	cmovle ebx,eax
   140006835:	test   rdi,rdi
   140006838:	je     0x140006842
   14000683a:	mov    rcx,rdi
   14000683d:	call   0x140007048
   140006842:	mov    eax,ebx
   140006844:	mov    rbx,QWORD PTR [rsp+0x50]
   140006849:	mov    rbp,QWORD PTR [rsp+0x58]
   14000684e:	mov    rsi,QWORD PTR [rsp+0x60]
   140006853:	add    rsp,0x20
   140006857:	pop    r15
   140006859:	pop    r14
   14000685b:	pop    r13
   14000685d:	pop    r12
   14000685f:	pop    rdi
   140006860:	ret    
   140006861:	int3   
   140006862:	int3   
   140006863:	int3   
   140006864:	int3   
   140006865:	int3   
   140006866:	int3   
   140006867:	int3   
   140006868:	mov    QWORD PTR [rsp+0x10],rbx
   14000686d:	push   rdi
   14000686e:	sub    rsp,0x30
   140006872:	mov    rdi,rdx
   140006875:	mov    rbx,rcx
   140006878:	test   rcx,rcx
   14000687b:	je     0x140006902
   140006881:	cmp    DWORD PTR [rip+0x50cc],0x0        # 0x14000b954
   140006888:	je     0x1400068a8
   14000688a:	mov    r8d,DWORD PTR [rdx+0x30]
   14000688e:	xor    r9d,r9d
   140006891:	mov    rdx,QWORD PTR [rdx+0x20]
   140006895:	and    QWORD PTR [rsp+0x20],0x0
   14000689b:	mov    rcx,QWORD PTR [rcx+0x280]
   1400068a2:	call   QWORD PTR [rip+0x19b8]        # 0x140008260
   1400068a8:	test   BYTE PTR [rbx+0x290],0x2
   1400068af:	je     0x1400068d7
   1400068b1:	mov    rcx,QWORD PTR [rbx+0x270]
   1400068b8:	cmp    rcx,0xffffffffffffffff
   1400068bc:	je     0x1400068d7
   1400068be:	and    QWORD PTR [rsp+0x20],0x0
   1400068c4:	lea    r9,[rsp+0x40]
   1400068c9:	mov    r8d,DWORD PTR [rdi+0x30]
   1400068cd:	mov    rdx,QWORD PTR [rdi+0x20]
   1400068d1:	call   QWORD PTR [rip+0x1989]        # 0x140008260
   1400068d7:	test   BYTE PTR [rbx+0x290],0x20
   1400068de:	je     0x1400068f9
   1400068e0:	mov    rcx,QWORD PTR [rbx+0x298]
   1400068e7:	test   rcx,rcx
   1400068ea:	je     0x1400068f9
   1400068ec:	mov    r8d,DWORD PTR [rdi+0x30]
   1400068f0:	mov    rdx,QWORD PTR [rdi+0x20]
   1400068f4:	call   0x140006f28
   1400068f9:	test   BYTE PTR [rbx+0x290],0x1
   140006900:	je     0x14000690c
   140006902:	mov    rcx,QWORD PTR [rdi+0x20]
   140006906:	call   QWORD PTR [rip+0x1a1c]        # 0x140008328
   14000690c:	mov    rbx,QWORD PTR [rsp+0x48]
   140006911:	add    rsp,0x30
   140006915:	pop    rdi
   140006916:	ret    
   140006917:	int3   
   140006918:	int3   
   140006919:	int3   
   14000691a:	int3   
   14000691b:	int3   
   14000691c:	int3   
   14000691d:	int3   
   14000691e:	int3   
   14000691f:	int3   
   140006920:	mov    QWORD PTR [rsp+0x8],rbx
   140006925:	mov    QWORD PTR [rsp+0x10],rbp
   14000692a:	mov    QWORD PTR [rsp+0x18],rsi
   14000692f:	push   rdi
   140006930:	push   r12
   140006932:	push   r13
   140006934:	push   r14
   140006936:	push   r15
   140006938:	sub    rsp,0x40
   14000693c:	mov    r12,rdx
   14000693f:	mov    r14,rcx
   140006942:	mov    edx,0x5c
   140006947:	mov    rcx,r8
   14000694a:	mov    r13d,r9d
   14000694d:	mov    rbx,r8
   140006950:	call   QWORD PTR [rip+0x1bf2]        # 0x140008548
   140006956:	xor    ebp,ebp
   140006958:	mov    r15,rax
   14000695b:	test   rax,rax
   14000695e:	jne    0x140006965
   140006960:	mov    r15,rbx
   140006963:	jmp    0x140006968
   140006965:	inc    r15
   140006968:	mov    ebx,DWORD PTR [r14+0x28]
   14000696c:	lea    rdi,[rip+0x28bd]        # 0x140009230
   140006973:	mov    rsi,QWORD PTR [r14+0x20]
   140006977:	test   r12,r12
   14000697a:	cmovne rdi,r12
   14000697e:	call   QWORD PTR [rip+0x1934]        # 0x1400082b8
   140006984:	mov    DWORD PTR [rsp+0x38],r13d
   140006989:	lea    r8,[rip+0x28a8]        # 0x140009238
   140006990:	mov    r9d,eax
   140006993:	mov    QWORD PTR [rsp+0x30],r15
   140006998:	mov    rax,QWORD PTR [rsp+0x90]
   1400069a0:	mov    edx,ebx
   1400069a2:	mov    QWORD PTR [rsp+0x28],rax
   1400069a7:	mov    rcx,rsi
   1400069aa:	mov    QWORD PTR [rsp+0x20],rdi
   1400069af:	call   QWORD PTR [rip+0x1b8b]        # 0x140008540
   1400069b5:	mov    edx,DWORD PTR [r14+0x28]
   1400069b9:	mov    r8d,edx
   1400069bc:	mov    rcx,QWORD PTR [r14+0x20]
   1400069c0:	mov    rsi,QWORD PTR [rsp+0xa0]
   1400069c8:	mov    r9,QWORD PTR [rsp+0x98]
   1400069d0:	movsxd rbx,eax
   1400069d3:	sub    r8d,ebx
   1400069d6:	sub    edx,ebx
   1400069d8:	mov    rax,QWORD PTR [rsi]
   1400069db:	dec    r8d
   1400069de:	add    rcx,rbx
   1400069e1:	mov    QWORD PTR [rsp+0x20],rax
   1400069e6:	call   QWORD PTR [rip+0x1a3c]        # 0x140008428
   1400069ec:	or     r15d,0xffffffff
   1400069f0:	cmp    eax,r15d
   1400069f3:	jne    0x140006a6b
   1400069f5:	mov    edx,0x2800
   1400069fa:	mov    rcx,r14
   1400069fd:	call   QWORD PTR [rip+0x175d]        # 0x140008160
   140006a03:	test   al,al
   140006a05:	jne    0x140006a1d
   140006a07:	call   QWORD PTR [rip+0x18d3]        # 0x1400082e0
   140006a0d:	movzx  ecx,ax
   140006a10:	or     ecx,0x80070000
   140006a16:	test   eax,eax
   140006a18:	cmovle ecx,eax
   140006a1b:	jmp    0x140006a1f
   140006a1d:	mov    ecx,ebp
   140006a1f:	test   ecx,ecx
   140006a21:	jns    0x140006a2c
   140006a23:	mov    rax,QWORD PTR [r14+0x20]
   140006a27:	mov    BYTE PTR [rax],bpl
   140006a2a:	jmp    0x140006a81
   140006a2c:	mov    edx,DWORD PTR [r14+0x28]
   140006a30:	mov    r8d,edx
   140006a33:	mov    rcx,QWORD PTR [r14+0x20]
   140006a37:	sub    r8d,ebx
   140006a3a:	mov    rax,QWORD PTR [rsi]
   140006a3d:	dec    r8d
   140006a40:	mov    r9,QWORD PTR [rsp+0x98]
   140006a48:	sub    edx,ebx
   140006a4a:	add    rcx,rbx
   140006a4d:	mov    QWORD PTR [rsp+0x20],rax
   140006a52:	call   QWORD PTR [rip+0x19d0]        # 0x140008428
   140006a58:	cmp    eax,r15d
   140006a5b:	jne    0x140006a6b
   140006a5d:	mov    ecx,DWORD PTR [r14+0x28]
   140006a61:	mov    rax,QWORD PTR [r14+0x20]
   140006a65:	dec    ecx
   140006a67:	mov    BYTE PTR [rcx+rax*1],bpl
   140006a6b:	mov    rcx,QWORD PTR [r14+0x20]
   140006a6f:	test   rcx,rcx
   140006a72:	je     0x140006a81
   140006a74:	mov    edx,DWORD PTR [r14+0x28]
   140006a78:	call   QWORD PTR [rip+0x19a2]        # 0x140008420
   140006a7e:	mov    rbp,rax
   140006a81:	lea    r11,[rsp+0x40]
   140006a86:	mov    DWORD PTR [r14+0x30],ebp
   140006a8a:	mov    rbx,QWORD PTR [r11+0x30]
   140006a8e:	mov    rbp,QWORD PTR [r11+0x38]
   140006a92:	mov    rsi,QWORD PTR [r11+0x40]
   140006a96:	mov    rsp,r11
   140006a99:	pop    r15
   140006a9b:	pop    r14
   140006a9d:	pop    r13
   140006a9f:	pop    r12
   140006aa1:	pop    rdi
   140006aa2:	ret    
   140006aa3:	int3   
   140006aa4:	int3   
   140006aa5:	int3   
   140006aa6:	int3   
   140006aa7:	int3   
   140006aa8:	int3   
   140006aa9:	int3   
   140006aaa:	int3   
   140006aab:	int3   
   140006aac:	mov    r11,rsp
   140006aaf:	mov    QWORD PTR [r11+0x8],rbx
   140006ab3:	mov    QWORD PTR [r11+0x10],rbp
   140006ab7:	mov    QWORD PTR [r11+0x18],rsi
   140006abb:	push   rdi
   140006abc:	sub    rsp,0x30
   140006ac0:	mov    r9d,DWORD PTR [rcx+0x28]
   140006ac4:	mov    rsi,r8
   140006ac7:	mov    rbp,rdx
   140006aca:	mov    rdi,rcx
   140006acd:	mov    rcx,QWORD PTR [rcx+0x20]
   140006ad1:	mov    edx,r9d
   140006ad4:	mov    rax,QWORD PTR [rsi]
   140006ad7:	lea    r8d,[r9-0x1]
   140006adb:	mov    r9,rbp
   140006ade:	mov    QWORD PTR [r11-0x18],rax
   140006ae2:	call   QWORD PTR [rip+0x1940]        # 0x140008428
   140006ae8:	xor    ebx,ebx
   140006aea:	cmp    eax,0xffffffff
   140006aed:	jne    0x140006b52
   140006aef:	mov    edx,0x2800
   140006af4:	mov    rcx,rdi
   140006af7:	call   QWORD PTR [rip+0x1663]        # 0x140008160
   140006afd:	test   al,al
   140006aff:	jne    0x140006b17
   140006b01:	call   QWORD PTR [rip+0x17d9]        # 0x1400082e0
   140006b07:	movzx  ecx,ax
   140006b0a:	or     ecx,0x80070000
   140006b10:	test   eax,eax
   140006b12:	cmovle ecx,eax
   140006b15:	jmp    0x140006b19
   140006b17:	mov    ecx,ebx
   140006b19:	test   ecx,ecx
   140006b1b:	jns    0x140006b25
   140006b1d:	mov    rax,QWORD PTR [rdi+0x20]
   140006b21:	mov    BYTE PTR [rax],bl
   140006b23:	jmp    0x140006b67
   140006b25:	mov    edx,DWORD PTR [rdi+0x28]
   140006b28:	mov    r9,rbp
   140006b2b:	mov    rax,QWORD PTR [rsi]
   140006b2e:	mov    rcx,QWORD PTR [rdi+0x20]
   140006b32:	mov    QWORD PTR [rsp+0x20],rax
   140006b37:	lea    r8d,[rdx-0x1]
   140006b3b:	call   QWORD PTR [rip+0x18e7]        # 0x140008428
   140006b41:	cmp    eax,0xffffffff
   140006b44:	jne    0x140006b52
   140006b46:	mov    ecx,DWORD PTR [rdi+0x28]
   140006b49:	mov    rax,QWORD PTR [rdi+0x20]
   140006b4d:	dec    ecx
   140006b4f:	mov    BYTE PTR [rcx+rax*1],bl
   140006b52:	mov    rcx,QWORD PTR [rdi+0x20]
   140006b56:	test   rcx,rcx
   140006b59:	je     0x140006b67
   140006b5b:	mov    edx,DWORD PTR [rdi+0x28]
   140006b5e:	call   QWORD PTR [rip+0x18bc]        # 0x140008420
   140006b64:	mov    rbx,rax
   140006b67:	mov    rbp,QWORD PTR [rsp+0x48]
   140006b6c:	mov    rsi,QWORD PTR [rsp+0x50]
   140006b71:	mov    DWORD PTR [rdi+0x30],ebx
   140006b74:	mov    rbx,QWORD PTR [rsp+0x40]
   140006b79:	add    rsp,0x30
   140006b7d:	pop    rdi
   140006b7e:	ret    
   140006b7f:	int3   
   140006b80:	int3   
   140006b81:	int3   
   140006b82:	int3   
   140006b83:	int3   
   140006b84:	int3   
   140006b85:	int3   
   140006b86:	int3   
   140006b87:	int3   
   140006b88:	mov    QWORD PTR [rsp+0x20],rbx
   140006b8d:	push   rbp
   140006b8e:	lea    rbp,[rsp-0x80]
   140006b93:	sub    rsp,0x180
   140006b9a:	mov    rax,QWORD PTR [rip+0x47d7]        # 0x14000b378
   140006ba1:	xor    rax,rsp
   140006ba4:	mov    QWORD PTR [rbp+0x70],rax
   140006ba8:	and    DWORD PTR [rsp+0x68],0x0
   140006bad:	lea    rax,[rsp+0x70]
   140006bb2:	and    DWORD PTR [rsp+0x30],0x0
   140006bb7:	mov    rbx,rcx
   140006bba:	lea    rcx,[rsp+0x38]
   140006bbf:	mov    QWORD PTR [rsp+0x58],rax
   140006bc4:	mov    DWORD PTR [rsp+0x60],0x100
   140006bcc:	mov    WORD PTR [rsp+0x64],0x100
   140006bd3:	mov    BYTE PTR [rsp+0x70],0x0
   140006bd8:	call   0x140006aac
   140006bdd:	mov    r8d,DWORD PTR [rsp+0x68]
   140006be2:	lea    r9,[rsp+0x30]
   140006be7:	mov    rdx,QWORD PTR [rsp+0x58]
   140006bec:	mov    rcx,QWORD PTR [rbx+0x280]
   140006bf3:	and    QWORD PTR [rsp+0x20],0x0
   140006bf9:	call   QWORD PTR [rip+0x1661]        # 0x140008260
   140006bff:	cmp    BYTE PTR [rsp+0x64],0x0
   140006c04:	je     0x140006c11
   140006c06:	lea    rcx,[rsp+0x38]
   140006c0b:	call   QWORD PTR [rip+0x155f]        # 0x140008170
   140006c11:	mov    rcx,QWORD PTR [rbp+0x70]
   140006c15:	xor    rcx,rsp
   140006c18:	call   0x140007390
   140006c1d:	mov    rbx,QWORD PTR [rsp+0x1a8]
   140006c25:	add    rsp,0x180
   140006c2c:	pop    rbp
   140006c2d:	ret    
   140006c2e:	int3   
   140006c2f:	int3   
   140006c30:	int3   
   140006c31:	int3   
   140006c32:	int3   
   140006c33:	int3   
   140006c34:	rex push rbp
   140006c36:	push   rbx
   140006c37:	push   rsi
   140006c38:	push   rdi
   140006c39:	push   r14
   140006c3b:	push   r15
   140006c3d:	lea    rbp,[rsp-0x98]
   140006c45:	sub    rsp,0x198
   140006c4c:	mov    rax,QWORD PTR [rip+0x4725]        # 0x14000b378
   140006c53:	xor    rax,rsp
   140006c56:	mov    QWORD PTR [rbp+0x80],rax
   140006c5d:	and    DWORD PTR [rsp+0x78],0x0
   140006c62:	lea    rax,[rbp-0x80]
   140006c66:	mov    QWORD PTR [rsp+0x68],rax
   140006c6b:	mov    rsi,r9
   140006c6e:	mov    edi,r8d
   140006c71:	mov    DWORD PTR [rsp+0x70],0x100
   140006c79:	mov    rbx,rdx
   140006c7c:	mov    WORD PTR [rsp+0x74],0x100
   140006c83:	mov    r14,rcx
   140006c86:	mov    BYTE PTR [rbp-0x80],0x0
   140006c8a:	call   QWORD PTR [rip+0x1650]        # 0x1400082e0
   140006c90:	mov    rcx,QWORD PTR [rbp+0xf0]
   140006c97:	mov    r9d,edi
   140006c9a:	mov    r15d,eax
   140006c9d:	mov    r8,rbx
   140006ca0:	lea    rax,[rbp+0xf8]
   140006ca7:	mov    rdx,r14
   140006caa:	mov    QWORD PTR [rsp+0x40],rax
   140006caf:	lea    rax,[rsp+0x40]
   140006cb4:	mov    QWORD PTR [rsp+0x30],rax
   140006cb9:	mov    QWORD PTR [rsp+0x28],rcx
   140006cbe:	lea    rcx,[rsp+0x48]
   140006cc3:	mov    QWORD PTR [rsp+0x20],rsi
   140006cc8:	call   0x140006920
   140006ccd:	cmp    DWORD PTR [rip+0x4c80],0x0        # 0x14000b954
   140006cd4:	jne    0x140006cea
   140006cd6:	mov    rdx,QWORD PTR [rbp+0xf0]
   140006cdd:	lea    r8,[rsp+0x40]
   140006ce2:	mov    rcx,r14
   140006ce5:	call   0x140006b88
   140006cea:	lea    rdx,[rsp+0x48]
   140006cef:	mov    rcx,r14
   140006cf2:	call   0x140006868
   140006cf7:	mov    ecx,r15d
   140006cfa:	call   QWORD PTR [rip+0x1568]        # 0x140008268
   140006d00:	cmp    BYTE PTR [rsp+0x74],0x0
   140006d05:	je     0x140006d12
   140006d07:	lea    rcx,[rsp+0x48]
   140006d0c:	call   QWORD PTR [rip+0x145e]        # 0x140008170
   140006d12:	mov    rcx,QWORD PTR [rbp+0x80]
   140006d19:	xor    rcx,rsp
   140006d1c:	call   0x140007390
   140006d21:	add    rsp,0x198
   140006d28:	pop    r15
   140006d2a:	pop    r14
   140006d2c:	pop    rdi
   140006d2d:	pop    rsi
   140006d2e:	pop    rbx
   140006d2f:	pop    rbp
   140006d30:	ret    
   140006d31:	int3   
   140006d32:	int3   
   140006d33:	int3   
   140006d34:	int3   
   140006d35:	int3   
   140006d36:	int3   
   140006d37:	int3   
   140006d38:	rex push rbp
   140006d3a:	push   rbx
   140006d3b:	push   rsi
   140006d3c:	push   rdi
   140006d3d:	push   r12
   140006d3f:	push   r14
   140006d41:	push   r15
   140006d43:	lea    rbp,[rsp-0xe0]
   140006d4b:	sub    rsp,0x1e0
   140006d52:	mov    rax,QWORD PTR [rip+0x461f]        # 0x14000b378
   140006d59:	xor    rax,rsp
   140006d5c:	mov    QWORD PTR [rbp+0xd0],rax
   140006d63:	lea    rax,[rbp-0x30]
   140006d67:	mov    DWORD PTR [rsp+0x78],0x100
   140006d6f:	xor    r12d,r12d
   140006d72:	mov    QWORD PTR [rsp+0x70],rax
   140006d77:	mov    DWORD PTR [rbp-0x80],r12d
   140006d7b:	mov    rsi,r9
   140006d7e:	mov    BYTE PTR [rbp-0x30],r12b
   140006d82:	mov    edi,r8d
   140006d85:	mov    rbx,rdx
   140006d88:	mov    WORD PTR [rsp+0x7c],0x100
   140006d8f:	mov    r14,rcx
   140006d92:	call   QWORD PTR [rip+0x1548]        # 0x1400082e0
   140006d98:	mov    rcx,QWORD PTR [rbp+0x148]
   140006d9f:	mov    r9d,edi
   140006da2:	mov    r15d,eax
   140006da5:	mov    r8,rbx
   140006da8:	lea    rax,[rbp+0x150]
   140006daf:	mov    rdx,r14
   140006db2:	mov    QWORD PTR [rsp+0x48],rax
   140006db7:	lea    rax,[rsp+0x48]
   140006dbc:	mov    QWORD PTR [rsp+0x30],rax
   140006dc1:	mov    QWORD PTR [rsp+0x28],rcx
   140006dc6:	lea    rcx,[rsp+0x50]
   140006dcb:	mov    QWORD PTR [rsp+0x20],rsi
   140006dd0:	call   0x140006920
   140006dd5:	cmp    DWORD PTR [rip+0x4b78],r12d        # 0x14000b954
   140006ddc:	je     0x140006df2
   140006dde:	mov    rdx,QWORD PTR [rbp+0x148]
   140006de5:	lea    r8,[rsp+0x48]
   140006dea:	mov    rcx,r14
   140006ded:	call   0x140006b88
   140006df2:	mov    ebx,DWORD PTR [rbp+0x140]
   140006df8:	lea    rax,[rsp+0x40]
   140006dfd:	mov    QWORD PTR [rsp+0x30],r12
   140006e02:	mov    r8d,ebx
   140006e05:	mov    DWORD PTR [rsp+0x28],r12d
   140006e0a:	xor    r9d,r9d
   140006e0d:	xor    edx,edx
   140006e0f:	mov    QWORD PTR [rsp+0x20],rax
   140006e14:	mov    ecx,0x1100
   140006e19:	mov    QWORD PTR [rsp+0x40],r12
   140006e1e:	call   QWORD PTR [rip+0x1434]        # 0x140008258
   140006e24:	cmp    QWORD PTR [rsp+0x40],r12
   140006e29:	je     0x140006ec8
   140006e2f:	mov    edx,0x40
   140006e34:	mov    DWORD PTR [rsp+0x20],ebx
   140006e38:	lea    r9,[rip+0x2411]        # 0x140009250
   140006e3f:	lea    rcx,[rbp-0x70]
   140006e43:	lea    r8d,[rdx-0x1]
   140006e47:	call   QWORD PTR [rip+0x159b]        # 0x1400083e8
   140006e4d:	or     rbx,0xffffffffffffffff
   140006e51:	mov    BYTE PTR [rbp-0x31],r12b
   140006e55:	mov    r8,rbx
   140006e58:	lea    rax,[rbp-0x70]
   140006e5c:	inc    r8
   140006e5f:	cmp    BYTE PTR [rax+r8*1],r12b
   140006e63:	jne    0x140006e5c
   140006e65:	mov    r9d,DWORD PTR [rbp-0x80]
   140006e69:	lea    rdx,[rbp-0x70]
   140006e6d:	lea    rcx,[rsp+0x50]
   140006e72:	mov    BYTE PTR [rsp+0x20],0x1
   140006e77:	call   QWORD PTR [rip+0x12eb]        # 0x140008168
   140006e7d:	mov    rdx,QWORD PTR [rsp+0x40]
   140006e82:	test   rdx,rdx
   140006e85:	je     0x140006ea7
   140006e87:	inc    rbx
   140006e8a:	cmp    BYTE PTR [rdx+rbx*1],r12b
   140006e8e:	jne    0x140006e87
   140006e90:	mov    r9d,DWORD PTR [rbp-0x80]
   140006e94:	lea    rcx,[rsp+0x50]
   140006e99:	mov    r8,rbx
   140006e9c:	mov    BYTE PTR [rsp+0x20],0x1
   140006ea1:	call   QWORD PTR [rip+0x12c1]        # 0x140008168
   140006ea7:	mov    r9d,DWORD PTR [rbp-0x80]
   140006eab:	lea    rdx,[rip+0x23ae]        # 0x140009260
   140006eb2:	mov    r8d,0x1
   140006eb8:	mov    BYTE PTR [rsp+0x20],0x1
   140006ebd:	lea    rcx,[rsp+0x50]
   140006ec2:	call   QWORD PTR [rip+0x12a0]        # 0x140008168
   140006ec8:	lea    rdx,[rsp+0x50]
   140006ecd:	mov    rcx,r14
   140006ed0:	call   0x140006868
   140006ed5:	mov    rcx,QWORD PTR [rsp+0x40]
   140006eda:	test   rcx,rcx
   140006edd:	je     0x140006ee5
   140006edf:	call   QWORD PTR [rip+0x140b]        # 0x1400082f0
   140006ee5:	mov    ecx,r15d
   140006ee8:	call   QWORD PTR [rip+0x137a]        # 0x140008268
   140006eee:	cmp    BYTE PTR [rsp+0x7c],r12b
   140006ef3:	je     0x140006f00
   140006ef5:	lea    rcx,[rsp+0x50]
   140006efa:	call   QWORD PTR [rip+0x1270]        # 0x140008170
   140006f00:	mov    rcx,QWORD PTR [rbp+0xd0]
   140006f07:	xor    rcx,rsp
   140006f0a:	call   0x140007390
   140006f0f:	add    rsp,0x1e0
   140006f16:	pop    r15
   140006f18:	pop    r14
   140006f1a:	pop    r12
   140006f1c:	pop    rdi
   140006f1d:	pop    rsi
   140006f1e:	pop    rbx
   140006f1f:	pop    rbp
   140006f20:	ret    
   140006f21:	int3   
   140006f22:	int3   
   140006f23:	int3   
   140006f24:	int3   
   140006f25:	int3   
   140006f26:	int3   
   140006f27:	int3   
   140006f28:	mov    rax,rsp
   140006f2b:	mov    QWORD PTR [rax+0x8],rbx
   140006f2f:	mov    QWORD PTR [rax+0x10],rbp
   140006f33:	mov    QWORD PTR [rax+0x18],rsi
   140006f37:	mov    QWORD PTR [rax+0x20],rdi
   140006f3b:	push   r14
   140006f3d:	sub    rsp,0x20
   140006f41:	cmp    DWORD PTR [rcx+0x48],0x0
   140006f45:	mov    r14,rdx
   140006f48:	mov    rbx,rcx
   140006f4b:	je     0x140006fd4
   140006f51:	cmp    DWORD PTR [rcx+0x78],0x0
   140006f55:	je     0x140006fd4
   140006f57:	mov    edi,r8d
   140006f5a:	mov    ecx,0xffffffff
   140006f5f:	lea    rax,[rdi+0x1]
   140006f63:	cmp    rax,rcx
   140006f66:	jbe    0x140006f6f
   140006f68:	mov    eax,0x216
   140006f6d:	jmp    0x140006fd9
   140006f6f:	lea    eax,[r8+0x1]
   140006f73:	cmp    eax,DWORD PTR [rbx+0x40]
   140006f76:	ja     0x140006fd4
   140006f78:	lea    rcx,[rbx+0x50]
   140006f7c:	call   QWORD PTR [rip+0x12c6]        # 0x140008248
   140006f82:	mov    rcx,QWORD PTR [rbx+0x8]
   140006f86:	lea    rax,[rdi+0x1]
   140006f8a:	mov    r8,QWORD PTR [rbx+0x10]
   140006f8e:	add    rax,rcx
   140006f91:	cmp    rax,r8
   140006f94:	jae    0x140006f9b
   140006f96:	mov    rsi,rcx
   140006f99:	jmp    0x140006fa9
   140006f9b:	mov    rsi,QWORD PTR [rbx+0x38]
   140006f9f:	sub    r8,rcx
   140006fa2:	xor    edx,edx
   140006fa4:	call   0x140007c0e
   140006fa9:	lea    rax,[rdi+0x1]
   140006fad:	add    rax,rsi
   140006fb0:	lea    rcx,[rbx+0x50]
   140006fb4:	mov    QWORD PTR [rbx+0x8],rax
   140006fb8:	call   QWORD PTR [rip+0x1282]        # 0x140008240
   140006fbe:	mov    r8,rdi
   140006fc1:	mov    rdx,r14
   140006fc4:	mov    rcx,rsi
   140006fc7:	call   0x140007c02
   140006fcc:	xor    eax,eax
   140006fce:	mov    BYTE PTR [rdi+rsi*1],0x0
   140006fd2:	jmp    0x140006fd9
   140006fd4:	mov    eax,0x8
   140006fd9:	mov    rbx,QWORD PTR [rsp+0x30]
   140006fde:	mov    rbp,QWORD PTR [rsp+0x38]
   140006fe3:	mov    rsi,QWORD PTR [rsp+0x40]
   140006fe8:	mov    rdi,QWORD PTR [rsp+0x48]
   140006fed:	add    rsp,0x20
   140006ff1:	pop    r14
   140006ff3:	ret    
   140006ff4:	int3   
   140006ff5:	int3   
   140006ff6:	int3   
   140006ff7:	int3   
   140006ff8:	int3   
   140006ff9:	int3   
   140006ffa:	int3   
   140006ffb:	int3   
   140006ffc:	mov    QWORD PTR [rsp+0x8],rbx
   140007001:	push   rdi
   140007002:	sub    rsp,0x20
   140007006:	mov    rdi,rcx
   140007009:	jmp    0x14000701a
   14000700b:	mov    rcx,rdi
   14000700e:	call   0x14000758e
   140007013:	test   eax,eax
   140007015:	je     0x140007027
   140007017:	mov    rcx,rdi
   14000701a:	call   0x140007582
   14000701f:	mov    rbx,rax
   140007022:	test   rax,rax
   140007025:	je     0x14000700b
   140007027:	mov    rax,rbx
   14000702a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000702f:	add    rsp,0x20
   140007033:	pop    rdi
   140007034:	ret    
   140007035:	int3   
   140007036:	int3   
   140007037:	int3   
   140007038:	int3   
   140007039:	int3   
   14000703a:	int3   
   14000703b:	int3   
   14000703c:	jmp    0x140006ffc
   140007041:	int3   
   140007042:	int3   
   140007043:	int3   
   140007044:	int3   
   140007045:	int3   
   140007046:	int3   
   140007047:	int3   
   140007048:	jmp    0x140007576
   14000704d:	int3   
   14000704e:	int3   
   14000704f:	int3   
   140007050:	int3   
   140007051:	int3   
   140007052:	int3   
   140007053:	int3   
   140007054:	int3   
   140007055:	int3   
   140007056:	int3   
   140007057:	int3   
   140007058:	int3   
   140007059:	int3   
   14000705a:	int3   
   14000705b:	int3   
   14000705c:	int3   
   14000705d:	int3   
   14000705e:	int3   
   14000705f:	int3   
   140007060:	sub    rsp,0x28
   140007064:	mov    eax,0x5a4d
   140007069:	cmp    WORD PTR [rip+0xffffffffffff8f90],ax        # 0x140000000
   140007070:	je     0x140007076
   140007072:	xor    eax,eax
   140007074:	jmp    0x1400070c5
   140007076:	movsxd rcx,DWORD PTR [rip+0xffffffffffff8fbf]        # 0x14000003c
   14000707d:	lea    rax,[rip+0xffffffffffff8f7c]        # 0x140000000
   140007084:	add    rcx,rax
   140007087:	cmp    DWORD PTR [rcx],0x4550
   14000708d:	jne    0x140007072
   14000708f:	movzx  eax,WORD PTR [rcx+0x18]
   140007093:	cmp    eax,0x10b
   140007098:	je     0x1400070b4
   14000709a:	cmp    eax,0x20b
   14000709f:	jne    0x140007072
   1400070a1:	xor    eax,eax
   1400070a3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400070aa:	jbe    0x1400070c5
   1400070ac:	cmp    DWORD PTR [rcx+0xf8],eax
   1400070b2:	jmp    0x1400070c2
   1400070b4:	xor    eax,eax
   1400070b6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400070ba:	jbe    0x1400070c5
   1400070bc:	cmp    DWORD PTR [rcx+0xe8],eax
   1400070c2:	setne  al
   1400070c5:	mov    ecx,0x1
   1400070ca:	mov    DWORD PTR [rip+0x42e8],eax        # 0x14000b3b8
   1400070d0:	call   0x140007668
   1400070d5:	mov    ecx,eax
   1400070d7:	call   QWORD PTR [rip+0x138b]        # 0x140008468
   1400070dd:	mov    rcx,QWORD PTR [rip+0x1354]        # 0x140008438
   1400070e4:	or     rax,0xffffffffffffffff
   1400070e8:	mov    QWORD PTR [rip+0x48a9],rax        # 0x14000b998
   1400070ef:	mov    QWORD PTR [rip+0x48aa],rax        # 0x14000b9a0
   1400070f6:	mov    eax,DWORD PTR [rip+0x42d0]        # 0x14000b3cc
   1400070fc:	mov    DWORD PTR [rcx],eax
   1400070fe:	mov    rcx,QWORD PTR [rip+0x132b]        # 0x140008430
   140007105:	mov    eax,DWORD PTR [rip+0x42b5]        # 0x14000b3c0
   14000710b:	mov    DWORD PTR [rcx],eax
   14000710d:	call   0x1400076c0
   140007112:	cmp    DWORD PTR [rip+0x4257],0x0        # 0x14000b370
   140007119:	jne    0x140007128
   14000711b:	lea    rcx,[rip+0x59e]        # 0x1400076c0
   140007122:	call   QWORD PTR [rip+0x1328]        # 0x140008450
   140007128:	xor    eax,eax
   14000712a:	add    rsp,0x28
   14000712e:	ret    
   14000712f:	int3   
   140007130:	int3   
   140007131:	int3   
   140007132:	int3   
   140007133:	int3   
   140007134:	int3   
   140007135:	int3   
   140007136:	int3   
   140007137:	int3   
   140007138:	int3   
   140007139:	int3   
   14000713a:	int3   
   14000713b:	int3   
   14000713c:	int3   
   14000713d:	int3   
   14000713e:	int3   
   14000713f:	int3   
   140007140:	sub    rsp,0x38
   140007144:	mov    eax,DWORD PTR [rip+0x427e]        # 0x14000b3c8
   14000714a:	lea    r8,[rip+0x425f]        # 0x14000b3b0
   140007151:	mov    r9d,DWORD PTR [rip+0x426c]        # 0x14000b3c4
   140007158:	lea    rdx,[rip+0x4249]        # 0x14000b3a8
   14000715f:	mov    DWORD PTR [rip+0x4257],eax        # 0x14000b3bc
   140007165:	lea    rcx,[rip+0x4234]        # 0x14000b3a0
   14000716c:	lea    rax,[rip+0x4249]        # 0x14000b3bc
   140007173:	mov    QWORD PTR [rsp+0x20],rax
   140007178:	call   QWORD PTR [rip+0x12f2]        # 0x140008470
   14000717e:	mov    DWORD PTR [rip+0x4220],eax        # 0x14000b3a4
   140007184:	add    rsp,0x38
   140007188:	ret    
   140007189:	int3   
   14000718a:	int3   
   14000718b:	int3   
   14000718c:	int3   
   14000718d:	int3   
   14000718e:	int3   
   14000718f:	int3   
   140007190:	mov    QWORD PTR [rsp+0x8],rbx
   140007195:	mov    QWORD PTR [rsp+0x10],rsi
   14000719a:	mov    QWORD PTR [rsp+0x18],rdi
   14000719f:	push   r15
   1400071a1:	sub    rsp,0x30
   1400071a5:	mov    rax,QWORD PTR gs:0x30
   1400071ae:	mov    rbx,QWORD PTR [rax+0x8]
   1400071b2:	xor    esi,esi
   1400071b4:	xor    eax,eax
   1400071b6:	lock cmpxchg QWORD PTR [rip+0x47c9],rbx        # 0x14000b988
   1400071bf:	je     0x1400071dc
   1400071c1:	cmp    rax,rbx
   1400071c4:	jne    0x1400071cf
   1400071c6:	mov    ebx,0x1
   1400071cb:	mov    esi,ebx
   1400071cd:	jmp    0x1400071e1
   1400071cf:	mov    ecx,0x3e8
   1400071d4:	call   QWORD PTR [rip+0x10f6]        # 0x1400082d0
   1400071da:	jmp    0x1400071b4
   1400071dc:	mov    ebx,0x1
   1400071e1:	mov    eax,DWORD PTR [rip+0x47a9]        # 0x14000b990
   1400071e7:	cmp    eax,ebx
   1400071e9:	jne    0x1400071f7
   1400071eb:	mov    ecx,0x1f
   1400071f0:	call   0x1400076b4
   1400071f5:	jmp    0x14000725c
   1400071f7:	mov    eax,DWORD PTR [rip+0x4793]        # 0x14000b990
   1400071fd:	test   eax,eax
   1400071ff:	jne    0x140007256
   140007201:	mov    DWORD PTR [rip+0x4789],ebx        # 0x14000b990
   140007207:	lea    r15,[rip+0x13d2]        # 0x1400085e0
   14000720e:	lea    rdi,[rip+0x13b3]        # 0x1400085c8
   140007215:	mov    QWORD PTR [rsp+0x28],rdi
   14000721a:	mov    DWORD PTR [rsp+0x20],eax
   14000721e:	cmp    rdi,r15
   140007221:	jae    0x140007248
   140007223:	test   eax,eax
   140007225:	jne    0x14000724c
   140007227:	cmp    QWORD PTR [rdi],0x0
   14000722b:	je     0x14000723d
   14000722d:	mov    rax,QWORD PTR [rdi]
   140007230:	mov    rcx,QWORD PTR [rip+0x1369]        # 0x1400085a0
   140007237:	call   rcx
   140007239:	mov    DWORD PTR [rsp+0x20],eax
   14000723d:	add    rdi,0x8
   140007241:	mov    QWORD PTR [rsp+0x28],rdi
   140007246:	jmp    0x14000721e
   140007248:	test   eax,eax
   14000724a:	je     0x14000725c
   14000724c:	mov    eax,0xff
   140007251:	jmp    0x140007338
   140007256:	mov    DWORD PTR [rip+0x413c],ebx        # 0x14000b398
   14000725c:	mov    eax,DWORD PTR [rip+0x472e]        # 0x14000b990
   140007262:	cmp    eax,ebx
   140007264:	jne    0x140007283
   140007266:	lea    rdx,[rip+0x1353]        # 0x1400085c0
   14000726d:	lea    rcx,[rip+0x1334]        # 0x1400085a8
   140007274:	call   0x14000788a
   140007279:	mov    DWORD PTR [rip+0x470d],0x2        # 0x14000b990
   140007283:	test   esi,esi
   140007285:	jne    0x140007290
   140007287:	xor    eax,eax
   140007289:	xchg   QWORD PTR [rip+0x46f8],rax        # 0x14000b988
   140007290:	cmp    QWORD PTR [rip+0x4710],0x0        # 0x14000b9a8
   140007298:	je     0x1400072c4
   14000729a:	lea    rcx,[rip+0x4707]        # 0x14000b9a8
   1400072a1:	call   0x140007720
   1400072a6:	test   eax,eax
   1400072a8:	je     0x1400072c4
   1400072aa:	xor    r8d,r8d
   1400072ad:	lea    edx,[r8+0x2]
   1400072b1:	xor    ecx,ecx
   1400072b3:	mov    rax,QWORD PTR [rip+0x46ee]        # 0x14000b9a8
   1400072ba:	mov    r9,QWORD PTR [rip+0x12df]        # 0x1400085a0
   1400072c1:	call   r9
   1400072c4:	mov    r8,QWORD PTR [rip+0x40e5]        # 0x14000b3b0
   1400072cb:	mov    rdx,QWORD PTR [rip+0x40d6]        # 0x14000b3a8
   1400072d2:	mov    ecx,DWORD PTR [rip+0x40c8]        # 0x14000b3a0
   1400072d8:	call   0x14000149c
   1400072dd:	mov    DWORD PTR [rip+0x40b1],eax        # 0x14000b394
   1400072e3:	cmp    DWORD PTR [rip+0x40ce],0x0        # 0x14000b3b8
   1400072ea:	jne    0x1400072f4
   1400072ec:	mov    ecx,eax
   1400072ee:	call   QWORD PTR [rip+0x1204]        # 0x1400084f8
   1400072f4:	cmp    DWORD PTR [rip+0x409d],0x0        # 0x14000b398
   1400072fb:	jne    0x140007309
   1400072fd:	call   QWORD PTR [rip+0x1155]        # 0x140008458
   140007303:	mov    eax,DWORD PTR [rip+0x408b]        # 0x14000b394
   140007309:	jmp    0x140007338
   14000730b:	mov    DWORD PTR [rip+0x4083],eax        # 0x14000b394
   140007311:	cmp    DWORD PTR [rip+0x40a0],0x0        # 0x14000b3b8
   140007318:	jne    0x140007323
   14000731a:	mov    ecx,eax
   14000731c:	call   QWORD PTR [rip+0x113e]        # 0x140008460
   140007322:	int3   
   140007323:	cmp    DWORD PTR [rip+0x406e],0x0        # 0x14000b398
   14000732a:	jne    0x140007338
   14000732c:	call   QWORD PTR [rip+0x1126]        # 0x140008458
   140007332:	mov    eax,DWORD PTR [rip+0x405c]        # 0x14000b394
   140007338:	mov    rbx,QWORD PTR [rsp+0x40]
   14000733d:	mov    rsi,QWORD PTR [rsp+0x48]
   140007342:	mov    rdi,QWORD PTR [rsp+0x50]
   140007347:	add    rsp,0x30
   14000734b:	pop    r15
   14000734d:	ret    
   14000734e:	int3   
   14000734f:	int3   
   140007350:	int3   
   140007351:	int3   
   140007352:	int3   
   140007353:	int3   
   140007354:	int3   
   140007355:	int3   
   140007356:	int3   
   140007357:	int3   
   140007358:	int3   
   140007359:	int3   
   14000735a:	int3   
   14000735b:	int3   
   14000735c:	int3   
   14000735d:	int3   
   14000735e:	int3   
   14000735f:	int3   
   140007360:	sub    rsp,0x28
   140007364:	call   0x1400077b4
   140007369:	add    rsp,0x28
   14000736d:	jmp    0x140007190
   140007372:	int3   
   140007373:	int3   
   140007374:	int3   
   140007375:	int3   
   140007376:	int3   
   140007377:	int3   
   140007378:	int3   
   140007379:	int3   
   14000737a:	int3   
   14000737b:	int3   
   14000737c:	int3   
   14000737d:	int3   
   14000737e:	int3   
   14000737f:	int3   
   140007380:	int3   
   140007381:	int3   
   140007382:	int3   
   140007383:	int3   
   140007384:	int3   
   140007385:	int3   
   140007386:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007390:	cmp    rcx,QWORD PTR [rip+0x3fe1]        # 0x14000b378
   140007397:	jne    0x1400073a9
   140007399:	rol    rcx,0x10
   14000739d:	test   cx,0xffff
   1400073a2:	jne    0x1400073a5
   1400073a4:	ret    
   1400073a5:	ror    rcx,0x10
   1400073a9:	jmp    0x140007900
   1400073ae:	int3   
   1400073af:	int3   
   1400073b0:	int3   
   1400073b1:	int3   
   1400073b2:	int3   
   1400073b3:	int3   
   1400073b4:	rex push rbx
   1400073b6:	sub    rsp,0x20
   1400073ba:	mov    rbx,rcx
   1400073bd:	mov    rax,QWORD PTR [rip+0x45dc]        # 0x14000b9a0
   1400073c4:	mov    QWORD PTR [rsp+0x38],rax
   1400073c9:	cmp    rax,0xffffffffffffffff
   1400073cd:	jne    0x1400073de
   1400073cf:	mov    rax,QWORD PTR [rip+0x102a]        # 0x140008400
   1400073d6:	call   QWORD PTR [rip+0x11c4]        # 0x1400085a0
   1400073dc:	jmp    0x14000743b
   1400073de:	mov    ecx,0x8
   1400073e3:	call   0x140007a78
   1400073e8:	nop
   1400073e9:	mov    rax,QWORD PTR [rip+0x45b0]        # 0x14000b9a0
   1400073f0:	mov    QWORD PTR [rsp+0x38],rax
   1400073f5:	mov    rax,QWORD PTR [rip+0x459c]        # 0x14000b998
   1400073fc:	mov    QWORD PTR [rsp+0x40],rax
   140007401:	lea    r8,[rsp+0x40]
   140007406:	lea    rdx,[rsp+0x38]
   14000740b:	mov    rcx,rbx
   14000740e:	call   0x140007a90
   140007413:	mov    rbx,rax
   140007416:	mov    rdx,QWORD PTR [rsp+0x38]
   14000741b:	mov    QWORD PTR [rip+0x457e],rdx        # 0x14000b9a0
   140007422:	mov    rdx,QWORD PTR [rsp+0x40]
   140007427:	mov    QWORD PTR [rip+0x456a],rdx        # 0x14000b998
   14000742e:	mov    ecx,0x8
   140007433:	call   0x140007a84
   140007438:	mov    rax,rbx
   14000743b:	add    rsp,0x20
   14000743f:	pop    rbx
   140007440:	ret    
   140007441:	int3   
   140007442:	int3   
   140007443:	int3   
   140007444:	int3   
   140007445:	int3   
   140007446:	int3   
   140007447:	int3   
   140007448:	sub    rsp,0x28
   14000744c:	call   0x1400073b4
   140007451:	neg    rax
   140007454:	sbb    eax,eax
   140007456:	neg    eax
   140007458:	dec    eax
   14000745a:	add    rsp,0x28
   14000745e:	ret    
   14000745f:	int3   
   140007460:	int3   
   140007461:	int3   
   140007462:	int3   
   140007463:	int3   
   140007464:	int3   
   140007465:	int3   
   140007466:	int3   
   140007467:	int3   
   140007468:	jmp    0x140007474
   14000746d:	int3   
   14000746e:	int3   
   14000746f:	int3   
   140007470:	int3   
   140007471:	int3   
   140007472:	int3   
   140007473:	int3   
   140007474:	mov    rax,rsp
   140007477:	mov    QWORD PTR [rax+0x20],r9
   14000747b:	mov    DWORD PTR [rax+0x18],r8d
   14000747f:	mov    QWORD PTR [rax+0x10],rdx
   140007483:	push   rbx
   140007484:	push   rsi
   140007485:	push   rdi
   140007486:	push   r14
   140007488:	sub    rsp,0x38
   14000748c:	mov    r14,r9
   14000748f:	movsxd rbx,r8d
   140007492:	mov    rsi,rdx
   140007495:	and    DWORD PTR [rax-0x38],0x0
   140007499:	mov    rdi,rbx
   14000749c:	imul   rdi,rdx
   1400074a0:	add    rdi,rcx
   1400074a3:	mov    QWORD PTR [rax+0x8],rdi
   1400074a7:	sub    ebx,0x1
   1400074aa:	mov    DWORD PTR [rsp+0x70],ebx
   1400074ae:	js     0x1400074c9
   1400074b0:	sub    rdi,rsi
   1400074b3:	mov    QWORD PTR [rsp+0x60],rdi
   1400074b8:	mov    rcx,rdi
   1400074bb:	mov    rax,r14
   1400074be:	mov    rdx,QWORD PTR [rip+0x10db]        # 0x1400085a0
   1400074c5:	call   rdx
   1400074c7:	jmp    0x1400074a7
   1400074c9:	mov    DWORD PTR [rsp+0x20],0x1
   1400074d1:	add    rsp,0x38
   1400074d5:	pop    r14
   1400074d7:	pop    rdi
   1400074d8:	pop    rsi
   1400074d9:	pop    rbx
   1400074da:	ret    
   1400074db:	int3   
   1400074dc:	int3   
   1400074dd:	int3   
   1400074de:	int3   
   1400074df:	int3   
   1400074e0:	int3   
   1400074e1:	int3   
   1400074e2:	int3   
   1400074e3:	int3   
   1400074e4:	mov    QWORD PTR [rsp+0x10],rbx
   1400074e9:	mov    DWORD PTR [rsp+0x18],r8d
   1400074ee:	mov    QWORD PTR [rsp+0x8],rcx
   1400074f3:	push   rsi
   1400074f4:	push   rdi
   1400074f5:	push   r14
   1400074f7:	sub    rsp,0x40
   1400074fb:	mov    rsi,r9
   1400074fe:	mov    ebx,r8d
   140007501:	mov    r14,rdx
   140007504:	mov    rdi,rcx
   140007507:	sub    ebx,0x1
   14000750a:	mov    DWORD PTR [rsp+0x70],ebx
   14000750e:	js     0x140007526
   140007510:	sub    rdi,r14
   140007513:	mov    QWORD PTR [rsp+0x60],rdi
   140007518:	mov    rcx,rdi
   14000751b:	mov    rax,rsi
   14000751e:	call   QWORD PTR [rip+0x107c]        # 0x1400085a0
   140007524:	jmp    0x140007507
   140007526:	jmp    0x140007528
   140007528:	mov    rbx,QWORD PTR [rsp+0x68]
   14000752d:	add    rsp,0x40
   140007531:	pop    r14
   140007533:	pop    rdi
   140007534:	pop    rsi
   140007535:	ret    
   140007536:	int3   
   140007537:	int3   
   140007538:	int3   
   140007539:	int3   
   14000753a:	int3   
   14000753b:	int3   
   14000753c:	int3   
   14000753d:	int3   
   14000753e:	int3   
   14000753f:	int3   
   140007540:	mov    QWORD PTR [rsp+0x8],rbx
   140007545:	push   rdi
   140007546:	sub    rsp,0x20
   14000754a:	mov    ebx,edx
   14000754c:	mov    rdi,rcx
   14000754f:	call   QWORD PTR [rip+0xe9b]        # 0x1400083f0
   140007555:	test   bl,0x1
   140007558:	je     0x140007562
   14000755a:	mov    rcx,rdi
   14000755d:	call   0x140007048
   140007562:	mov    rax,rdi
   140007565:	mov    rbx,QWORD PTR [rsp+0x30]
   14000756a:	add    rsp,0x20
   14000756e:	pop    rdi
   14000756f:	ret    
   140007570:	int3   
   140007571:	int3   
   140007572:	int3   
   140007573:	int3   
   140007574:	int3   
   140007575:	int3   
   140007576:	jmp    QWORD PTR [rip+0xf1c]        # 0x140008498
   14000757c:	int3   
   14000757d:	int3   
   14000757e:	int3   
   14000757f:	int3   
   140007580:	int3   
   140007581:	int3   
   140007582:	jmp    QWORD PTR [rip+0xf08]        # 0x140008490
   140007588:	int3   
   140007589:	int3   
   14000758a:	int3   
   14000758b:	int3   
   14000758c:	int3   
   14000758d:	int3   
   14000758e:	jmp    QWORD PTR [rip+0xef4]        # 0x140008488
   140007594:	int3   
   140007595:	int3   
   140007596:	int3   
   140007597:	int3   
   140007598:	int3   
   140007599:	int3   
   14000759a:	int3   
   14000759b:	int3   
   14000759c:	int3   
   14000759d:	int3   
   14000759e:	int3   
   14000759f:	int3   
   1400075a0:	sub    rsp,0x28
   1400075a4:	mov    rax,QWORD PTR [rcx]
   1400075a7:	cmp    DWORD PTR [rax],0xe06d7363
   1400075ad:	jne    0x1400075d2
   1400075af:	cmp    DWORD PTR [rax+0x18],0x4
   1400075b3:	jne    0x1400075d2
   1400075b5:	mov    ecx,DWORD PTR [rax+0x20]
   1400075b8:	lea    eax,[rcx-0x19930520]
   1400075be:	cmp    eax,0x2
   1400075c1:	jbe    0x1400075cb
   1400075c3:	cmp    ecx,0x1994000
   1400075c9:	jne    0x1400075d2
   1400075cb:	call   QWORD PTR [rip+0xe27]        # 0x1400083f8
   1400075d1:	int3   
   1400075d2:	xor    eax,eax
   1400075d4:	add    rsp,0x28
   1400075d8:	ret    
   1400075d9:	int3   
   1400075da:	int3   
   1400075db:	int3   
   1400075dc:	int3   
   1400075dd:	int3   
   1400075de:	int3   
   1400075df:	int3   
   1400075e0:	sub    rsp,0x28
   1400075e4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400075a0
   1400075eb:	call   QWORD PTR [rip+0xcd7]        # 0x1400082c8
   1400075f1:	xor    eax,eax
   1400075f3:	add    rsp,0x28
   1400075f7:	ret    
   1400075f8:	int3   
   1400075f9:	int3   
   1400075fa:	int3   
   1400075fb:	int3   
   1400075fc:	int3   
   1400075fd:	int3   
   1400075fe:	jmp    QWORD PTR [rip+0xe7c]        # 0x140008480
   140007604:	int3   
   140007605:	int3   
   140007606:	int3   
   140007607:	int3   
   140007608:	int3   
   140007609:	int3   
   14000760a:	int3   
   14000760b:	int3   
   14000760c:	sub    rsp,0x18
   140007610:	xor    edx,edx
   140007612:	lea    rax,[rcx-0x1]
   140007616:	cmp    rax,0xfffffffffffffffd
   14000761a:	ja     0x140007658
   14000761c:	mov    eax,0x5a4d
   140007621:	cmp    WORD PTR [rcx],ax
   140007624:	jne    0x140007650
   140007626:	cmp    DWORD PTR [rcx+0x3c],edx
   140007629:	jl     0x140007650
   14000762b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140007632:	jae    0x140007650
   140007634:	movsxd rax,DWORD PTR [rcx+0x3c]
   140007638:	add    rax,rcx
   14000763b:	mov    QWORD PTR [rsp],rax
   14000763f:	cmp    DWORD PTR [rax],0x4550
   140007645:	cmovne rax,rdx
   140007649:	mov    rdx,rax
   14000764c:	mov    QWORD PTR [rsp],rax
   140007650:	jmp    0x140007658
   140007652:	xor    edx,edx
   140007654:	mov    QWORD PTR [rsp],rdx
   140007658:	mov    rax,rdx
   14000765b:	add    rsp,0x18
   14000765f:	ret    
   140007660:	int3   
   140007661:	int3   
   140007662:	int3   
   140007663:	int3   
   140007664:	int3   
   140007665:	int3   
   140007666:	int3   
   140007667:	int3   
   140007668:	rex push rbx
   14000766a:	sub    rsp,0x20
   14000766e:	mov    ebx,ecx
   140007670:	xor    ecx,ecx
   140007672:	call   QWORD PTR [rip+0xc70]        # 0x1400082e8
   140007678:	test   rax,rax
   14000767b:	je     0x1400076a5
   14000767d:	mov    rcx,rax
   140007680:	call   0x14000760c
   140007685:	test   rax,rax
   140007688:	je     0x1400076a5
   14000768a:	mov    ecx,0x2
   14000768f:	cmp    WORD PTR [rax+0x5c],cx
   140007693:	jne    0x140007699
   140007695:	mov    eax,ecx
   140007697:	jmp    0x1400076a7
   140007699:	cmp    WORD PTR [rax+0x5c],0x3
   14000769e:	mov    eax,0x1
   1400076a3:	je     0x1400076a7
   1400076a5:	mov    eax,ebx
   1400076a7:	add    rsp,0x20
   1400076ab:	pop    rbx
   1400076ac:	ret    
   1400076ad:	int3   
   1400076ae:	int3   
   1400076af:	int3   
   1400076b0:	int3   
   1400076b1:	int3   
   1400076b2:	int3   
   1400076b3:	int3   
   1400076b4:	jmp    QWORD PTR [rip+0xdbe]        # 0x140008478
   1400076ba:	int3   
   1400076bb:	int3   
   1400076bc:	int3   
   1400076bd:	int3   
   1400076be:	int3   
   1400076bf:	int3   
   1400076c0:	xor    eax,eax
   1400076c2:	ret    
   1400076c3:	int3   
   1400076c4:	int3   
   1400076c5:	int3   
   1400076c6:	int3   
   1400076c7:	int3   
   1400076c8:	int3   
   1400076c9:	int3   
   1400076ca:	int3   
   1400076cb:	int3   
   1400076cc:	int3   
   1400076cd:	int3   
   1400076ce:	int3   
   1400076cf:	int3   
   1400076d0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400076d4:	xor    r9d,r9d
   1400076d7:	add    r8,rcx
   1400076da:	mov    r10,rdx
   1400076dd:	movzx  eax,WORD PTR [r8+0x14]
   1400076e2:	movzx  r11d,WORD PTR [r8+0x6]
   1400076e7:	add    rax,0x18
   1400076eb:	add    rax,r8
   1400076ee:	test   r11d,r11d
   1400076f1:	je     0x140007711
   1400076f3:	mov    edx,DWORD PTR [rax+0xc]
   1400076f6:	cmp    r10,rdx
   1400076f9:	jb     0x140007705
   1400076fb:	mov    ecx,DWORD PTR [rax+0x8]
   1400076fe:	add    ecx,edx
   140007700:	cmp    r10,rcx
   140007703:	jb     0x140007713
   140007705:	inc    r9d
   140007708:	add    rax,0x28
   14000770c:	cmp    r9d,r11d
   14000770f:	jb     0x1400076f3
   140007711:	xor    eax,eax
   140007713:	ret    
   140007714:	int3   
   140007715:	int3   
   140007716:	int3   
   140007717:	int3   
   140007718:	int3   
   140007719:	int3   
   14000771a:	int3   
   14000771b:	int3   
   14000771c:	int3   
   14000771d:	int3   
   14000771e:	int3   
   14000771f:	int3   
   140007720:	mov    QWORD PTR [rsp+0x8],rbx
   140007725:	push   rdi
   140007726:	sub    rsp,0x20
   14000772a:	mov    rbx,rcx
   14000772d:	lea    rdi,[rip+0xffffffffffff88cc]        # 0x140000000
   140007734:	mov    rcx,rdi
   140007737:	call   0x140007780
   14000773c:	test   eax,eax
   14000773e:	je     0x140007762
   140007740:	sub    rbx,rdi
   140007743:	mov    rdx,rbx
   140007746:	mov    rcx,rdi
   140007749:	call   0x1400076d0
   14000774e:	test   rax,rax
   140007751:	je     0x140007762
   140007753:	mov    eax,DWORD PTR [rax+0x24]
   140007756:	shr    eax,0x1f
   140007759:	not    eax
   14000775b:	and    eax,0x1
   14000775e:	jmp    0x140007762
   140007760:	xor    eax,eax
   140007762:	mov    rbx,QWORD PTR [rsp+0x30]
   140007767:	add    rsp,0x20
   14000776b:	pop    rdi
   14000776c:	ret    
   14000776d:	int3   
   14000776e:	int3   
   14000776f:	int3   
   140007770:	int3   
   140007771:	int3   
   140007772:	int3   
   140007773:	int3   
   140007774:	int3   
   140007775:	int3   
   140007776:	int3   
   140007777:	int3   
   140007778:	int3   
   140007779:	int3   
   14000777a:	int3   
   14000777b:	int3   
   14000777c:	int3   
   14000777d:	int3   
   14000777e:	int3   
   14000777f:	int3   
   140007780:	mov    rax,rcx
   140007783:	mov    ecx,0x5a4d
   140007788:	cmp    WORD PTR [rax],cx
   14000778b:	je     0x140007790
   14000778d:	xor    eax,eax
   14000778f:	ret    
   140007790:	movsxd rcx,DWORD PTR [rax+0x3c]
   140007794:	add    rcx,rax
   140007797:	xor    eax,eax
   140007799:	cmp    DWORD PTR [rcx],0x4550
   14000779f:	jne    0x1400077ad
   1400077a1:	mov    edx,0x20b
   1400077a6:	cmp    WORD PTR [rcx+0x18],dx
   1400077aa:	sete   al
   1400077ad:	ret    
   1400077ae:	int3   
   1400077af:	int3   
   1400077b0:	int3   
   1400077b1:	int3   
   1400077b2:	int3   
   1400077b3:	int3   
   1400077b4:	mov    QWORD PTR [rsp+0x20],rbx
   1400077b9:	push   rbp
   1400077ba:	mov    rbp,rsp
   1400077bd:	sub    rsp,0x20
   1400077c1:	and    QWORD PTR [rbp+0x18],0x0
   1400077c6:	movabs rbx,0x2b992ddfa232
   1400077d0:	mov    rax,QWORD PTR [rip+0x3ba1]        # 0x14000b378
   1400077d7:	cmp    rax,rbx
   1400077da:	jne    0x14000786f
   1400077e0:	lea    rcx,[rbp+0x18]
   1400077e4:	call   QWORD PTR [rip+0xac6]        # 0x1400082b0
   1400077ea:	mov    rax,QWORD PTR [rbp+0x18]
   1400077ee:	mov    QWORD PTR [rbp+0x10],rax
   1400077f2:	call   QWORD PTR [rip+0xa08]        # 0x140008200
   1400077f8:	mov    eax,eax
   1400077fa:	xor    QWORD PTR [rbp+0x10],rax
   1400077fe:	call   QWORD PTR [rip+0xab4]        # 0x1400082b8
   140007804:	mov    eax,eax
   140007806:	xor    QWORD PTR [rbp+0x10],rax
   14000780a:	call   QWORD PTR [rip+0xa98]        # 0x1400082a8
   140007810:	mov    eax,eax
   140007812:	shl    rax,0x18
   140007816:	xor    QWORD PTR [rbp+0x10],rax
   14000781a:	call   QWORD PTR [rip+0xa88]        # 0x1400082a8
   140007820:	mov    eax,eax
   140007822:	lea    rcx,[rbp+0x10]
   140007826:	xor    rax,QWORD PTR [rbp+0x10]
   14000782a:	xor    rax,rcx
   14000782d:	lea    rcx,[rbp+0x20]
   140007831:	mov    QWORD PTR [rbp+0x10],rax
   140007835:	call   QWORD PTR [rip+0xa85]        # 0x1400082c0
   14000783b:	mov    eax,DWORD PTR [rbp+0x20]
   14000783e:	movabs rcx,0xffffffffffff
   140007848:	shl    rax,0x20
   14000784c:	xor    rax,QWORD PTR [rbp+0x20]
   140007850:	xor    rax,QWORD PTR [rbp+0x10]
   140007854:	and    rax,rcx
   140007857:	movabs rcx,0x2b992ddfa233
   140007861:	cmp    rax,rbx
   140007864:	cmove  rax,rcx
   140007868:	mov    QWORD PTR [rip+0x3b09],rax        # 0x14000b378
   14000786f:	mov    rbx,QWORD PTR [rsp+0x48]
   140007874:	not    rax
   140007877:	mov    QWORD PTR [rip+0x3b02],rax        # 0x14000b380
   14000787e:	add    rsp,0x20
   140007882:	pop    rbp
   140007883:	ret    
   140007884:	int3   
   140007885:	int3   
   140007886:	int3   
   140007887:	int3   
   140007888:	int3   
   140007889:	int3   
   14000788a:	jmp    QWORD PTR [rip+0xbb8]        # 0x140008448
   140007890:	int3   
   140007891:	int3   
   140007892:	int3   
   140007893:	int3   
   140007894:	int3   
   140007895:	int3   
   140007896:	jmp    QWORD PTR [rip+0xba4]        # 0x140008440
   14000789c:	int3   
   14000789d:	int3   
   14000789e:	int3   
   14000789f:	int3   
   1400078a0:	int3   
   1400078a1:	int3   
   1400078a2:	int3   
   1400078a3:	int3   
   1400078a4:	int3   
   1400078a5:	int3   
   1400078a6:	int3   
   1400078a7:	int3   
   1400078a8:	int3   
   1400078a9:	int3   
   1400078aa:	int3   
   1400078ab:	int3   
   1400078ac:	int3   
   1400078ad:	int3   
   1400078ae:	int3   
   1400078af:	int3   
   1400078b0:	ret    0x0
   1400078b3:	int3   
   1400078b4:	int3   
   1400078b5:	int3   
   1400078b6:	int3   
   1400078b7:	int3   
   1400078b8:	int3   
   1400078b9:	int3   
   1400078ba:	int3   
   1400078bb:	int3   
   1400078bc:	rex push rbx
   1400078be:	sub    rsp,0x20
   1400078c2:	mov    rbx,rcx
   1400078c5:	xor    ecx,ecx
   1400078c7:	call   QWORD PTR [rip+0x9fb]        # 0x1400082c8
   1400078cd:	mov    rcx,rbx
   1400078d0:	call   QWORD PTR [rip+0x9b2]        # 0x140008288
   1400078d6:	call   QWORD PTR [rip+0x904]        # 0x1400081e0
   1400078dc:	mov    rcx,rax
   1400078df:	mov    edx,0xc0000409
   1400078e4:	add    rsp,0x20
   1400078e8:	pop    rbx
   1400078e9:	rex.W jmp QWORD PTR [rip+0x990]        # 0x140008280
   1400078f0:	int3   
   1400078f1:	int3   
   1400078f2:	int3   
   1400078f3:	int3   
   1400078f4:	int3   
   1400078f5:	int3   
   1400078f6:	int3   
   1400078f7:	int3   
   1400078f8:	int3   
   1400078f9:	int3   
   1400078fa:	int3   
   1400078fb:	int3   
   1400078fc:	int3   
   1400078fd:	int3   
   1400078fe:	int3   
   1400078ff:	int3   
   140007900:	mov    QWORD PTR [rsp+0x8],rcx
   140007905:	sub    rsp,0x88
   14000790c:	lea    rcx,[rip+0x3b5d]        # 0x14000b470
   140007913:	call   QWORD PTR [rip+0x987]        # 0x1400082a0
   140007919:	mov    rax,QWORD PTR [rip+0x3c48]        # 0x14000b568
   140007920:	mov    QWORD PTR [rsp+0x48],rax
   140007925:	xor    r8d,r8d
   140007928:	lea    rdx,[rsp+0x50]
   14000792d:	mov    rcx,QWORD PTR [rsp+0x48]
   140007932:	call   QWORD PTR [rip+0x960]        # 0x140008298
   140007938:	mov    QWORD PTR [rsp+0x40],rax
   14000793d:	cmp    QWORD PTR [rsp+0x40],0x0
   140007943:	je     0x140007987
   140007945:	mov    QWORD PTR [rsp+0x38],0x0
   14000794e:	lea    rax,[rsp+0x58]
   140007953:	mov    QWORD PTR [rsp+0x30],rax
   140007958:	lea    rax,[rsp+0x60]
   14000795d:	mov    QWORD PTR [rsp+0x28],rax
   140007962:	lea    rax,[rip+0x3b07]        # 0x14000b470
   140007969:	mov    QWORD PTR [rsp+0x20],rax
   14000796e:	mov    r9,QWORD PTR [rsp+0x40]
   140007973:	mov    r8,QWORD PTR [rsp+0x48]
   140007978:	mov    rdx,QWORD PTR [rsp+0x50]
   14000797d:	xor    ecx,ecx
   14000797f:	call   QWORD PTR [rip+0x90b]        # 0x140008290
   140007985:	jmp    0x1400079aa
   140007987:	mov    rax,QWORD PTR [rip+0x3b7a]        # 0x14000b508
   14000798e:	mov    rax,QWORD PTR [rax]
   140007991:	mov    QWORD PTR [rip+0x3bd0],rax        # 0x14000b568
   140007998:	mov    rax,QWORD PTR [rip+0x3b69]        # 0x14000b508
   14000799f:	add    rax,0x8
   1400079a3:	mov    QWORD PTR [rip+0x3b5e],rax        # 0x14000b508
   1400079aa:	mov    rax,QWORD PTR [rip+0x3bb7]        # 0x14000b568
   1400079b1:	mov    QWORD PTR [rip+0x3a28],rax        # 0x14000b3e0
   1400079b8:	mov    rax,QWORD PTR [rsp+0x90]
   1400079c0:	mov    QWORD PTR [rip+0x3b29],rax        # 0x14000b4f0
   1400079c7:	mov    DWORD PTR [rip+0x39ff],0xc0000409        # 0x14000b3d0
   1400079d1:	mov    DWORD PTR [rip+0x39f9],0x1        # 0x14000b3d4
   1400079db:	mov    DWORD PTR [rip+0x3a03],0x3        # 0x14000b3e8
   1400079e5:	mov    eax,0x8
   1400079ea:	imul   rax,rax,0x0
   1400079ee:	lea    rcx,[rip+0x39fb]        # 0x14000b3f0
   1400079f5:	mov    QWORD PTR [rcx+rax*1],0x2
   1400079fd:	mov    eax,0x8
   140007a02:	imul   rax,rax,0x1
   140007a06:	lea    rcx,[rip+0x39e3]        # 0x14000b3f0
   140007a0d:	mov    rdx,QWORD PTR [rip+0x3964]        # 0x14000b378
   140007a14:	mov    QWORD PTR [rcx+rax*1],rdx
   140007a18:	mov    eax,0x8
   140007a1d:	imul   rax,rax,0x2
   140007a21:	lea    rcx,[rip+0x39c8]        # 0x14000b3f0
   140007a28:	mov    rdx,QWORD PTR [rip+0x3951]        # 0x14000b380
   140007a2f:	mov    QWORD PTR [rcx+rax*1],rdx
   140007a33:	mov    eax,0x8
   140007a38:	imul   rax,rax,0x0
   140007a3c:	mov    rcx,QWORD PTR [rip+0x3935]        # 0x14000b378
   140007a43:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140007a48:	mov    eax,0x8
   140007a4d:	imul   rax,rax,0x1
   140007a51:	mov    rcx,QWORD PTR [rip+0x3928]        # 0x14000b380
   140007a58:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140007a5d:	lea    rcx,[rip+0x5a4]        # 0x140008008
   140007a64:	call   0x1400078bc
   140007a69:	add    rsp,0x88
   140007a70:	ret    
   140007a71:	int3   
   140007a72:	int3   
   140007a73:	int3   
   140007a74:	int3   
   140007a75:	int3   
   140007a76:	int3   
   140007a77:	int3   
   140007a78:	jmp    QWORD PTR [rip+0x99a]        # 0x140008418
   140007a7e:	int3   
   140007a7f:	int3   
   140007a80:	int3   
   140007a81:	int3   
   140007a82:	int3   
   140007a83:	int3   
   140007a84:	jmp    QWORD PTR [rip+0x986]        # 0x140008410
   140007a8a:	int3   
   140007a8b:	int3   
   140007a8c:	int3   
   140007a8d:	int3   
   140007a8e:	int3   
   140007a8f:	int3   
   140007a90:	jmp    QWORD PTR [rip+0x972]        # 0x140008408
   140007a96:	int3   
   140007a97:	int3   
   140007a98:	int3   
   140007a99:	int3   
   140007a9a:	int3   
   140007a9b:	int3   
   140007a9c:	int3   
   140007a9d:	int3   
   140007a9e:	int3   
   140007a9f:	int3   
   140007aa0:	int3   
   140007aa1:	int3   
   140007aa2:	int3   
   140007aa3:	int3   
   140007aa4:	int3   
   140007aa5:	int3   
   140007aa6:	int3   
   140007aa7:	int3   
   140007aa8:	rex push rbx
   140007aaa:	sub    rsp,0x20
   140007aae:	mov    ebx,ecx
   140007ab0:	call   0x140007acc
   140007ab5:	lea    rdx,[rbx+rbx*2]
   140007ab9:	shl    rdx,0x4
   140007abd:	add    rax,rdx
   140007ac0:	add    rsp,0x20
   140007ac4:	pop    rbx
   140007ac5:	ret    
   140007ac6:	int3   
   140007ac7:	int3   
   140007ac8:	int3   
   140007ac9:	int3   
   140007aca:	int3   
   140007acb:	int3   
   140007acc:	jmp    QWORD PTR [rip+0xa56]        # 0x140008528
   140007ad2:	int3   
   140007ad3:	int3   
   140007ad4:	int3   
   140007ad5:	int3   
   140007ad6:	int3   
   140007ad7:	int3   
   140007ad8:	jmp    QWORD PTR [rip+0x902]        # 0x1400083e0
   140007ade:	int3   
   140007adf:	int3   
   140007ae0:	int3   
   140007ae1:	int3   
   140007ae2:	int3   
   140007ae3:	int3   
   140007ae4:	sub    rsp,0x28
   140007ae8:	mov    r8,QWORD PTR [r9+0x38]
   140007aec:	mov    rcx,rdx
   140007aef:	mov    rdx,r9
   140007af2:	call   0x140007b08
   140007af7:	mov    eax,0x1
   140007afc:	add    rsp,0x28
   140007b00:	ret    
   140007b01:	int3   
   140007b02:	int3   
   140007b03:	int3   
   140007b04:	int3   
   140007b05:	int3   
   140007b06:	int3   
   140007b07:	int3   
   140007b08:	rex push rbx
   140007b0a:	mov    r11d,DWORD PTR [r8]
   140007b0d:	mov    rbx,rdx
   140007b10:	and    r11d,0xfffffff8
   140007b14:	mov    r9,rcx
   140007b17:	test   BYTE PTR [r8],0x4
   140007b1b:	mov    r10,rcx
   140007b1e:	je     0x140007b33
   140007b20:	mov    eax,DWORD PTR [r8+0x8]
   140007b24:	movsxd r10,DWORD PTR [r8+0x4]
   140007b28:	neg    eax
   140007b2a:	add    r10,rcx
   140007b2d:	movsxd rcx,eax
   140007b30:	and    r10,rcx
   140007b33:	movsxd rax,r11d
   140007b36:	mov    rdx,QWORD PTR [rax+r10*1]
   140007b3a:	mov    rax,QWORD PTR [rbx+0x10]
   140007b3e:	mov    ecx,DWORD PTR [rax+0x8]
   140007b41:	add    rcx,QWORD PTR [rbx+0x8]
   140007b45:	test   BYTE PTR [rcx+0x3],0xf
   140007b49:	je     0x140007b57
   140007b4b:	movzx  eax,BYTE PTR [rcx+0x3]
   140007b4f:	and    eax,0xfffffff0
   140007b52:	cdqe   
   140007b54:	add    r9,rax
   140007b57:	xor    r9,rdx
   140007b5a:	mov    rcx,r9
   140007b5d:	pop    rbx
   140007b5e:	jmp    0x140007390
   140007b63:	int3   
   140007b64:	int3   
   140007b65:	int3   
   140007b66:	int3   
   140007b67:	int3   
   140007b68:	int3   
   140007b69:	int3   
   140007b6a:	int3   
   140007b6b:	int3   
   140007b6c:	mov    rax,rsp
   140007b6f:	mov    QWORD PTR [rax+0x8],rbx
   140007b73:	mov    QWORD PTR [rax+0x10],rbp
   140007b77:	mov    QWORD PTR [rax+0x18],rsi
   140007b7b:	mov    QWORD PTR [rax+0x20],rdi
   140007b7f:	push   r14
   140007b81:	sub    rsp,0x20
   140007b85:	mov    rbx,QWORD PTR [r9+0x38]
   140007b89:	mov    rsi,rdx
   140007b8c:	mov    r14,r8
   140007b8f:	mov    rbp,rcx
   140007b92:	mov    rdx,r9
   140007b95:	mov    rcx,rsi
   140007b98:	mov    rdi,r9
   140007b9b:	lea    r8,[rbx+0x4]
   140007b9f:	call   0x140007b08
   140007ba4:	mov    r11d,DWORD PTR [rbx+0x4]
   140007ba8:	mov    r8d,0x1
   140007bae:	mov    r10d,DWORD PTR [rbp+0x4]
   140007bb2:	mov    eax,r11d
   140007bb5:	and    eax,r8d
   140007bb8:	and    r11d,0x2
   140007bbc:	and    r10b,0x66
   140007bc0:	cmove  r11d,eax
   140007bc4:	test   r11d,r11d
   140007bc7:	je     0x140007bdd
   140007bc9:	mov    r9,rdi
   140007bcc:	mov    r8,r14
   140007bcf:	mov    rdx,rsi
   140007bd2:	mov    rcx,rbp
   140007bd5:	call   0x140007ad8
   140007bda:	mov    r8d,eax
   140007bdd:	mov    rbx,QWORD PTR [rsp+0x30]
   140007be2:	mov    eax,r8d
   140007be5:	mov    rbp,QWORD PTR [rsp+0x38]
   140007bea:	mov    rsi,QWORD PTR [rsp+0x40]
   140007bef:	mov    rdi,QWORD PTR [rsp+0x48]
   140007bf4:	add    rsp,0x20
   140007bf8:	pop    r14
   140007bfa:	ret    
   140007bfb:	int3   
   140007bfc:	int3   
   140007bfd:	int3   
   140007bfe:	int3   
   140007bff:	int3   
   140007c00:	int3   
   140007c01:	int3   
   140007c02:	jmp    QWORD PTR [rip+0x7d0]        # 0x1400083d8
   140007c08:	int3   
   140007c09:	int3   
   140007c0a:	int3   
   140007c0b:	int3   
   140007c0c:	int3   
   140007c0d:	int3   
   140007c0e:	jmp    QWORD PTR [rip+0x7bc]        # 0x1400083d0
   140007c14:	int3   
   140007c15:	int3   
   140007c16:	int3   
   140007c17:	int3   
   140007c18:	int3   
   140007c19:	int3   
   140007c1a:	jmp    QWORD PTR [rip+0x888]        # 0x1400084a8
   140007c20:	int3   
   140007c21:	int3   
   140007c22:	int3   
   140007c23:	int3   
   140007c24:	int3   
   140007c25:	int3   
   140007c26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007c30:	jmp    rax
   140007c32:	int3   
   140007c33:	int3   
   140007c34:	int3   
   140007c35:	int3   
   140007c36:	int3   
   140007c37:	int3   
   140007c38:	int3   
   140007c39:	int3   
   140007c3a:	int3   
   140007c3b:	int3   
   140007c3c:	int3   
   140007c3d:	int3   
   140007c3e:	int3   
   140007c3f:	int3   
   140007c40:	int3   
   140007c41:	int3   
   140007c42:	int3   
   140007c43:	int3   
   140007c44:	int3   
   140007c45:	int3   
   140007c46:	lea    rcx,[rdx+0x48]
   140007c4d:	jmp    0x140001c88
   140007c52:	int3   
   140007c53:	int3   
   140007c54:	int3   
   140007c55:	int3   
   140007c56:	int3   
   140007c57:	int3   
   140007c58:	lea    rcx,[rdx+0x50]
   140007c5f:	jmp    0x140001c88
   140007c64:	int3   
   140007c65:	int3   
   140007c66:	int3   
   140007c67:	int3   
   140007c68:	int3   
   140007c69:	int3   
   140007c6a:	lea    rcx,[rdx+0x20]
   140007c71:	jmp    0x140001c88
   140007c76:	int3   
   140007c77:	int3   
   140007c78:	int3   
   140007c79:	int3   
   140007c7a:	int3   
   140007c7b:	int3   
   140007c7c:	lea    rcx,[rdx+0x60]
   140007c83:	jmp    0x140001c88
   140007c88:	lea    rcx,[rdx+0xe0]
   140007c8f:	jmp    0x140001c88
   140007c94:	lea    rcx,[rdx+0x70]
   140007c9b:	jmp    0x140001c88
   140007ca0:	int3   
   140007ca1:	int3   
   140007ca2:	int3   
   140007ca3:	int3   
   140007ca4:	int3   
   140007ca5:	int3   
   140007ca6:	lea    rcx,[rdx+0x50]
   140007cad:	jmp    0x140001c88
   140007cb2:	lea    rcx,[rdx+0x58]
   140007cb9:	jmp    0x140001c88
   140007cbe:	int3   
   140007cbf:	int3   
   140007cc0:	int3   
   140007cc1:	int3   
   140007cc2:	int3   
   140007cc3:	int3   
   140007cc4:	lea    rcx,[rdx+0x60]
   140007ccb:	jmp    0x140001c88
   140007cd0:	int3   
   140007cd1:	int3   
   140007cd2:	int3   
   140007cd3:	int3   
   140007cd4:	int3   
   140007cd5:	int3   
   140007cd6:	rex push rbp
   140007cd8:	sub    rsp,0x20
   140007cdc:	mov    rbp,rdx
   140007cdf:	mov    rax,QWORD PTR [rcx]
   140007ce2:	mov    rdx,rcx
   140007ce5:	mov    ecx,DWORD PTR [rax]
   140007ce7:	call   0x1400075fe
   140007cec:	nop
   140007ced:	add    rsp,0x20
   140007cf1:	pop    rbp
   140007cf2:	ret    
   140007cf3:	int3   
   140007cf4:	int3   
   140007cf5:	int3   
   140007cf6:	int3   
   140007cf7:	int3   
   140007cf8:	int3   
   140007cf9:	int3   
   140007cfa:	rex push rbp
   140007cfc:	sub    rsp,0x20
   140007d00:	mov    rbp,rdx
   140007d03:	mov    ecx,0x8
   140007d08:	call   0x140007a84
   140007d0d:	nop
   140007d0e:	add    rsp,0x20
   140007d12:	pop    rbp
   140007d13:	ret    
   140007d14:	int3   
   140007d15:	int3   
   140007d16:	int3   
   140007d17:	int3   
   140007d18:	int3   
   140007d19:	int3   
   140007d1a:	int3   
   140007d1b:	rex push rbp
   140007d1d:	sub    rsp,0x20
   140007d21:	mov    rbp,rdx
   140007d24:	cmp    DWORD PTR [rbp+0x20],0x0
   140007d28:	jne    0x140007d40
   140007d2a:	mov    r9,QWORD PTR [rbp+0x78]
   140007d2e:	mov    r8d,DWORD PTR [rbp+0x70]
   140007d32:	mov    rdx,QWORD PTR [rbp+0x68]
   140007d36:	mov    rcx,QWORD PTR [rbp+0x60]
   140007d3a:	call   0x1400074e4
   140007d3f:	nop
   140007d40:	add    rsp,0x20
   140007d44:	pop    rbp
   140007d45:	ret    
   140007d46:	int3   
   140007d47:	int3   
   140007d48:	int3   
   140007d49:	int3   
   140007d4a:	int3   
   140007d4b:	int3   
   140007d4c:	int3   
   140007d4d:	rex push rbp
   140007d4f:	sub    rsp,0x20
   140007d53:	mov    rbp,rdx
   140007d56:	mov    QWORD PTR [rbp+0x38],rcx
   140007d5a:	mov    QWORD PTR [rbp+0x28],rcx
   140007d5e:	mov    rax,QWORD PTR [rbp+0x28]
   140007d62:	mov    rcx,QWORD PTR [rax]
   140007d65:	mov    QWORD PTR [rbp+0x30],rcx
   140007d69:	mov    rax,QWORD PTR [rbp+0x30]
   140007d6d:	cmp    DWORD PTR [rax],0xe06d7363
   140007d73:	je     0x140007d81
   140007d75:	mov    DWORD PTR [rbp+0x20],0x0
   140007d7c:	mov    eax,DWORD PTR [rbp+0x20]
   140007d7f:	jmp    0x140007d88
   140007d81:	call   QWORD PTR [rip+0x671]        # 0x1400083f8
   140007d87:	nop
   140007d88:	add    rsp,0x20
   140007d8c:	pop    rbp
   140007d8d:	ret    
   140007d8e:	int3   
   140007d8f:	int3   
   140007d90:	int3   
   140007d91:	int3   
   140007d92:	int3   
   140007d93:	int3   
   140007d94:	int3   
   140007d95:	int3   
   140007d96:	int3   
   140007d97:	int3   
   140007d98:	int3   
   140007d99:	int3   
   140007d9a:	int3   
   140007d9b:	int3   
   140007d9c:	int3   
   140007d9d:	int3   
   140007d9e:	int3   
   140007d9f:	int3   
   140007da0:	rex push rbp
   140007da2:	sub    rsp,0x20
   140007da6:	mov    rbp,rdx
   140007da9:	mov    rax,QWORD PTR [rcx]
   140007dac:	xor    ecx,ecx
   140007dae:	cmp    DWORD PTR [rax],0xc0000005
   140007db4:	sete   cl
   140007db7:	mov    eax,ecx
   140007db9:	add    rsp,0x20
   140007dbd:	pop    rbp
   140007dbe:	ret    
   140007dbf:	int3   
   140007dc0:	int3   
   140007dc1:	int3   
   140007dc2:	int3   
   140007dc3:	int3   
   140007dc4:	int3   
   140007dc5:	int3   
   140007dc6:	int3   
   140007dc7:	int3   
   140007dc8:	int3   
   140007dc9:	int3   
   140007dca:	int3   
   140007dcb:	int3   
   140007dcc:	int3   
   140007dcd:	int3   
   140007dce:	int3   
   140007dcf:	int3   
   140007dd0:	mov    edx,0x20
   140007dd5:	lea    r9,[rip+0xffffffffffffa044]        # 0x140001e20
   140007ddc:	lea    rcx,[rip+0x321d]        # 0x14000b000
   140007de3:	lea    r8d,[rdx-0xa]
   140007de7:	jmp    0x140007468

Disassembly of section .rdata:

0000000140008000 <.rdata>:
   140008000:	rex jne 0x140008003
   140008003:	rex add DWORD PTR [rax],eax
   140008006:	add    BYTE PTR [rax],al
   140008008:	shl    BYTE PTR [rbx+0x14000],1
   14000800e:	add    BYTE PTR [rax],al
   140008010:	jo     0x140007fc6
   140008012:	add    BYTE PTR [rax+0x1],al
   140008015:	add    BYTE PTR [rax],al
   140008017:	add    al,ah
   140008019:	xchg   esp,eax
   14000801a:	add    BYTE PTR [rax+0x1],al
   14000801d:	add    BYTE PTR [rax],al
   14000801f:	add    BYTE PTR [rax],dl
   140008021:	and    al,BYTE PTR [rax]
   140008023:	rex add DWORD PTR [rax],eax
   140008026:	add    BYTE PTR [rax],al
   140008028:	mov    al,0x21
   14000802a:	add    BYTE PTR [rax+0x1],al
   14000802d:	add    BYTE PTR [rax],al
   14000802f:	add    al,dl
   140008031:	and    DWORD PTR [rax],eax
   140008033:	rex add DWORD PTR [rax],eax
   140008036:	add    BYTE PTR [rax],al
   140008038:	movabs al,ds:0x5800000001400022
   140008041:	xchg   ebp,eax
   140008042:	add    BYTE PTR [rax+0x1],al
   140008045:	add    BYTE PTR [rax],al
   140008047:	add    BYTE PTR [rax],dh
   140008049:	push   rbp
   14000804a:	add    BYTE PTR [rax+0x1],al
   14000804d:	add    BYTE PTR [rax],al
   14000804f:	add    al,dl
	...
   1400080a5:	add    BYTE PTR [rax],al
   1400080a7:	add    BYTE PTR [rax-0x4d],bh
   1400080aa:	add    BYTE PTR [rax+0x1],al
	...
   1400080bd:	add    BYTE PTR [rax],al
   1400080bf:	add    BYTE PTR [rax+0x1400085],bl
   1400080c5:	add    BYTE PTR [rax],al
   1400080c7:	add    BYTE PTR [rax+0x1400085],ah
   1400080cd:	add    BYTE PTR [rax],al
   1400080cf:	add    al,ch
   1400080d1:	test   DWORD PTR [rax],eax
   1400080d3:	rex add DWORD PTR [rax],eax
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	adc    al,0x0
   1400080da:	add    BYTE PTR [rax],al
   1400080dc:	add    BYTE PTR [rax],al
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	add    BYTE PTR [rip+0x1],dh        # 0x1400080e7
	...
   14000811e:	add    BYTE PTR [rax],al
   140008120:	xor    BYTE PTR [rax+rax*1+0x0],ah
   140008127:	add    BYTE PTR [rsp+riz*4+0x0],al
   14000812b:	add    BYTE PTR [rax],al
   14000812d:	add    BYTE PTR [rax],al
   14000812f:	add    BYTE PTR [rdx-0x5c],bl
	...
   14000813e:	add    BYTE PTR [rax],al
   140008140:	data16 stos BYTE PTR es:[rdi],al
   140008142:	add    BYTE PTR [rax],al
   140008144:	add    BYTE PTR [rax],al
   140008146:	add    BYTE PTR [rax],al
   140008148:	rex.R stos BYTE PTR es:[rdi],al
   14000814a:	add    BYTE PTR [rax],al
   14000814c:	add    BYTE PTR [rax],al
   14000814e:	add    BYTE PTR [rax],al
   140008150:	mov    WORD PTR [rdx+0x0],gs
	...
   14000815e:	add    BYTE PTR [rax],al
   140008160:	mov    esp,0xaa
   140008165:	add    BYTE PTR [rax],al
   140008167:	add    dh,bh
   140008169:	stos   BYTE PTR es:[rdi],al
   14000816a:	add    BYTE PTR [rax],al
   14000816c:	add    BYTE PTR [rax],al
   14000816e:	add    BYTE PTR [rax],al
   140008170:	fsubr  DWORD PTR [rdx+0x0]
	...
   14000817e:	add    BYTE PTR [rax],al
   140008180:	(bad)  
   140008181:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008182:	add    BYTE PTR [rax],al
   140008184:	add    BYTE PTR [rax],al
   140008186:	add    BYTE PTR [rax],al
   140008188:	jbe    0x14000812f
   14000818a:	add    BYTE PTR [rax],al
   14000818c:	add    BYTE PTR [rax],al
   14000818e:	add    BYTE PTR [rax],al
   140008190:	xchg   BYTE PTR [rbp+0x0],ah
   140008196:	add    BYTE PTR [rax],al
   140008198:	xchg   esi,eax
   140008199:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000819a:	add    BYTE PTR [rax],al
   14000819c:	add    BYTE PTR [rax],al
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	mov    al,0xa5
   1400081a2:	add    BYTE PTR [rax],al
   1400081a4:	add    BYTE PTR [rax],al
   1400081a6:	add    BYTE PTR [rax],al
   1400081a8:	int3   
   1400081a9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400081aa:	add    BYTE PTR [rax],al
   1400081ac:	add    BYTE PTR [rax],al
   1400081ae:	add    BYTE PTR [rax],al
   1400081b0:	fsub   QWORD PTR [rbp+0x0]
   1400081b6:	add    BYTE PTR [rax],al
   1400081b8:	out    dx,al
   1400081b9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400081ba:	add    BYTE PTR [rax],al
   1400081bc:	add    BYTE PTR [rax],al
   1400081be:	add    BYTE PTR [rax],al
   1400081c0:	(bad)  
   1400081c1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400081c2:	add    BYTE PTR [rax],al
   1400081c4:	add    BYTE PTR [rax],al
   1400081c6:	add    BYTE PTR [rax],al
   1400081c8:	(bad)  
   1400081c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400081ca:	add    BYTE PTR [rax],al
   1400081cc:	add    BYTE PTR [rax],al
   1400081ce:	add    BYTE PTR [rax],al
   1400081d0:	and    ah,BYTE PTR [rsi+0x0]
   1400081d6:	add    BYTE PTR [rax],al
   1400081d8:	cmps   BYTE PTR cs:[rsi],BYTE PTR es:[rdi]
   1400081da:	add    BYTE PTR [rax],al
   1400081dc:	add    BYTE PTR [rax],al
   1400081de:	add    BYTE PTR [rax],al
   1400081e0:	rex.R cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400081e2:	add    BYTE PTR [rax],al
   1400081e4:	add    BYTE PTR [rax],al
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	pop    rax
   1400081e9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400081ea:	add    BYTE PTR [rax],al
   1400081ec:	add    BYTE PTR [rax],al
   1400081ee:	add    BYTE PTR [rax],al
   1400081f0:	data16 cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400081f2:	add    BYTE PTR [rax],al
   1400081f4:	add    BYTE PTR [rax],al
   1400081f6:	add    BYTE PTR [rax],al
   1400081f8:	jl     0x1400081a0
   1400081fa:	add    BYTE PTR [rax],al
   1400081fc:	add    BYTE PTR [rax],al
   1400081fe:	add    BYTE PTR [rax],al
   140008200:	xchg   esp,eax
   140008201:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008202:	add    BYTE PTR [rax],al
   140008204:	add    BYTE PTR [rax],al
   140008206:	add    BYTE PTR [rax],al
   140008208:	stos   BYTE PTR es:[rdi],al
   140008209:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000820a:	add    BYTE PTR [rax],al
   14000820c:	add    BYTE PTR [rax],al
   14000820e:	add    BYTE PTR [rax],al
   140008210:	shl    BYTE PTR [rsi+0x0],0x0
   140008217:	add    al,dl
   140008219:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000821a:	add    BYTE PTR [rax],al
   14000821c:	add    BYTE PTR [rax],al
   14000821e:	add    BYTE PTR [rax],al
   140008220:	(bad)  
   140008221:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008222:	add    BYTE PTR [rax],al
   140008224:	add    BYTE PTR [rax],al
   140008226:	add    BYTE PTR [rax],al
   140008228:	(bad)  
   140008229:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000822a:	add    BYTE PTR [rax],al
   14000822c:	add    BYTE PTR [rax],al
   14000822e:	add    BYTE PTR [rax],al
   140008230:	or     al,0xa7
   140008232:	add    BYTE PTR [rax],al
   140008234:	add    BYTE PTR [rax],al
   140008236:	add    BYTE PTR [rax],al
   140008238:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000823a:	add    BYTE PTR [rax],al
   14000823c:	add    BYTE PTR [rax],al
   14000823e:	add    BYTE PTR [rax],al
   140008240:	(bad)  
   140008241:	lods   al,BYTE PTR ds:[rsi]
   140008242:	add    BYTE PTR [rax],al
   140008244:	add    BYTE PTR [rax],al
   140008246:	add    BYTE PTR [rax],al
   140008248:	lods   al,BYTE PTR ds:[rsi]
   140008249:	lods   al,BYTE PTR ds:[rsi]
   14000824a:	add    BYTE PTR [rax],al
   14000824c:	add    BYTE PTR [rax],al
   14000824e:	add    BYTE PTR [rax],al
   140008250:	rex.WR movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140008252:	add    BYTE PTR [rax],al
   140008254:	add    BYTE PTR [rax],al
   140008256:	add    BYTE PTR [rax],al
   140008258:	(bad)  
   140008259:	lods   al,BYTE PTR ds:[rsi]
   14000825a:	add    BYTE PTR [rax],al
   14000825c:	add    BYTE PTR [rax],al
   14000825e:	add    BYTE PTR [rax],al
   140008260:	mov    gs,WORD PTR [rax+rax*1+0x0]
   140008267:	add    BYTE PTR [rsi-0x54],bh
   14000826a:	add    BYTE PTR [rax],al
   14000826c:	add    BYTE PTR [rax],al
   14000826e:	add    BYTE PTR [rax],al
   140008270:	jo     0x14000821e
   140008272:	add    BYTE PTR [rax],al
   140008274:	add    BYTE PTR [rax],al
   140008276:	add    BYTE PTR [rax],al
   140008278:	rex.W lods al,BYTE PTR ds:[rsi]
   14000827a:	add    BYTE PTR [rax],al
   14000827c:	add    BYTE PTR [rax],al
   14000827e:	add    BYTE PTR [rax],al
   140008280:	xor    al,0xac
   140008282:	add    BYTE PTR [rax],al
   140008284:	add    BYTE PTR [rax],al
   140008286:	add    BYTE PTR [rax],al
   140008288:	sbb    BYTE PTR [rax+rax*1+0x0],ch
   14000828f:	add    BYTE PTR [rsp+rbp*4],al
   140008292:	add    BYTE PTR [rax],al
   140008294:	add    BYTE PTR [rax],al
   140008296:	add    BYTE PTR [rax],al
   140008298:	(bad)  
   140008299:	stos   DWORD PTR es:[rdi],eax
   14000829a:	add    BYTE PTR [rax],al
   14000829c:	add    BYTE PTR [rax],al
   14000829e:	add    BYTE PTR [rax],al
   1400082a0:	(bad)  
   1400082a1:	stos   DWORD PTR es:[rdi],eax
   1400082a2:	add    BYTE PTR [rax],al
   1400082a4:	add    BYTE PTR [rax],al
   1400082a6:	add    BYTE PTR [rax],al
   1400082a8:	(bad)  
   1400082a9:	stos   DWORD PTR es:[rdi],eax
   1400082aa:	add    BYTE PTR [rax],al
   1400082ac:	add    BYTE PTR [rax],al
   1400082ae:	add    BYTE PTR [rax],al
   1400082b0:	lods   al,BYTE PTR ds:[rsi]
   1400082b1:	stos   DWORD PTR es:[rdi],eax
   1400082b2:	add    BYTE PTR [rax],al
   1400082b4:	add    BYTE PTR [rax],al
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	xchg   esi,eax
   1400082b9:	stos   DWORD PTR es:[rdi],eax
   1400082ba:	add    BYTE PTR [rax],al
   1400082bc:	add    BYTE PTR [rax],al
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	jl     0x14000826d
   1400082c2:	add    BYTE PTR [rax],al
   1400082c4:	add    BYTE PTR [rax],al
   1400082c6:	add    BYTE PTR [rax],al
   1400082c8:	pop    rsi
   1400082c9:	stos   DWORD PTR es:[rdi],eax
   1400082ca:	add    BYTE PTR [rax],al
   1400082cc:	add    BYTE PTR [rax],al
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	call   0x140008379
   1400082d5:	add    BYTE PTR [rax],al
   1400082d7:	add    ah,dl
   1400082d9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400082da:	add    BYTE PTR [rax],al
   1400082dc:	add    BYTE PTR [rax],al
   1400082de:	add    BYTE PTR [rax],al
   1400082e0:	(bad)  
   1400082e1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400082e2:	add    BYTE PTR [rax],al
   1400082e4:	add    BYTE PTR [rax],al
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	mov    al,0xa4
   1400082ea:	add    BYTE PTR [rax],al
   1400082ec:	add    BYTE PTR [rax],al
   1400082ee:	add    BYTE PTR [rax],al
   1400082f0:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400082f2:	add    BYTE PTR [rax],al
   1400082f4:	add    BYTE PTR [rax],al
   1400082f6:	add    BYTE PTR [rax],al
   1400082f8:	movs   DWORD PTR es:[rdi],DWORD PTR cs:[rsi]
   1400082fa:	add    BYTE PTR [rax],al
   1400082fc:	add    BYTE PTR [rax],al
   1400082fe:	add    BYTE PTR [rax],al
   140008300:	sbb    al,0xa5
   140008302:	add    BYTE PTR [rax],al
   140008304:	add    BYTE PTR [rax],al
   140008306:	add    BYTE PTR [rax],al
   140008308:	(bad)  
   140008309:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000830a:	add    BYTE PTR [rax],al
   14000830c:	add    BYTE PTR [rax],al
   14000830e:	add    BYTE PTR [rax],al
   140008310:	add    ah,BYTE PTR [rbp+0x0]
   140008316:	add    BYTE PTR [rax],al
   140008318:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008319:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000831a:	add    BYTE PTR [rax],al
   14000831c:	add    BYTE PTR [rax],al
   14000831e:	add    BYTE PTR [rax],al
   140008320:	xchg   edx,eax
   140008321:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008322:	add    BYTE PTR [rax],al
   140008324:	add    BYTE PTR [rax],al
   140008326:	add    BYTE PTR [rax],al
   140008328:	jl     0x1400082ce
	...
   140008336:	add    BYTE PTR [rax],al
   140008338:	enter  0x0,0x0
   14000833c:	add    BYTE PTR [rax],al
   14000833e:	add    BYTE PTR [rax+0x9],al
   140008344:	add    BYTE PTR [rax],al
   140008346:	add    BYTE PTR [rax+0x8],al
   14000834c:	add    BYTE PTR [rax],al
   14000834e:	add    BYTE PTR [rax+0x6],al
   140008354:	add    BYTE PTR [rax],al
   140008356:	add    BYTE PTR [rax+0x2],al
   14000835c:	add    BYTE PTR [rax],al
   14000835e:	add    BYTE PTR [rax+0x0],al
   140008364:	add    BYTE PTR [rax],al
   140008366:	add    BYTE PTR [rax],al
   140008368:	or     BYTE PTR [rdx+0x0],ch
	...
   140008376:	add    BYTE PTR [rax],al
   140008378:	xor    al,0xa9
   14000837a:	add    BYTE PTR [rax],al
   14000837c:	add    BYTE PTR [rax],al
   14000837e:	add    BYTE PTR [rax],al
   140008380:	(bad)  
   140008381:	test   eax,0x0
   140008386:	add    BYTE PTR [rax],al
   140008388:	sahf   
   140008389:	test   eax,0x0
   14000838e:	add    BYTE PTR [rax],al
   140008390:	mov    ch,BYTE PTR [rcx+0x0]
   140008396:	add    BYTE PTR [rax],al
   140008398:	jbe    0x140008343
   14000839a:	add    BYTE PTR [rax],al
   14000839c:	add    BYTE PTR [rax],al
   14000839e:	add    BYTE PTR [rax],al
   1400083a0:	push   0xa9
   1400083a5:	add    BYTE PTR [rax],al
   1400083a7:	add    BYTE PTR [rsi-0x57],dl
   1400083aa:	add    BYTE PTR [rax],al
   1400083ac:	add    BYTE PTR [rax],al
   1400083ae:	add    BYTE PTR [rax],al
   1400083b0:	sub    BYTE PTR [rcx+0x0],ch
   1400083b6:	add    BYTE PTR [rax],al
   1400083b8:	rex.X test eax,0x0
	...
   1400083c6:	add    BYTE PTR [rax],al
   1400083c8:	in     al,0xa7
   1400083ca:	add    BYTE PTR [rax],al
   1400083cc:	add    BYTE PTR [rax],al
   1400083ce:	add    BYTE PTR [rax],al
   1400083d0:	pop    rsi
   1400083d1:	lods   eax,DWORD PTR ds:[rsi]
   1400083d2:	add    BYTE PTR [rax],al
   1400083d4:	add    BYTE PTR [rax],al
   1400083d6:	add    BYTE PTR [rax],al
   1400083d8:	push   rsp
   1400083d9:	lods   eax,DWORD PTR ds:[rsi]
   1400083da:	add    BYTE PTR [rax],al
   1400083dc:	add    BYTE PTR [rax],al
   1400083de:	add    BYTE PTR [rax],al
   1400083e0:	lods   eax,DWORD PTR ds:[rsi]
   1400083e2:	add    BYTE PTR [rax],al
   1400083e4:	add    BYTE PTR [rax],al
   1400083e6:	add    BYTE PTR [rax],al
   1400083e8:	xor    BYTE PTR [rbp+0x0],ch
   1400083ee:	add    BYTE PTR [rax],al
   1400083f0:	(bad)  
   1400083f1:	test   al,0x0
   1400083f3:	add    BYTE PTR [rax],al
   1400083f5:	add    BYTE PTR [rax],al
   1400083f7:	add    dl,ch
   1400083f9:	test   al,0x0
   1400083fb:	add    BYTE PTR [rax],al
   1400083fd:	add    BYTE PTR [rax],al
   1400083ff:	add    al,ah
   140008401:	test   al,0x0
   140008403:	add    BYTE PTR [rax],al
   140008405:	add    BYTE PTR [rax],al
   140008407:	add    dl,dl
   140008409:	test   al,0x0
   14000840b:	add    BYTE PTR [rax],al
   14000840d:	add    BYTE PTR [rax],al
   14000840f:	add    al,cl
   140008411:	test   al,0x0
   140008413:	add    BYTE PTR [rax],al
   140008415:	add    BYTE PTR [rax],al
   140008417:	add    al,al
   140008419:	test   al,0x0
   14000841b:	add    BYTE PTR [rax],al
   14000841d:	add    BYTE PTR [rax],al
   14000841f:	add    BYTE PTR [rsi],ah
   140008421:	lods   eax,DWORD PTR ds:[rsi]
   140008422:	add    BYTE PTR [rax],al
   140008424:	add    BYTE PTR [rax],al
   140008426:	add    BYTE PTR [rax],al
   140008428:	(bad)  
   140008429:	lods   eax,DWORD PTR ds:[rsi]
   14000842a:	add    BYTE PTR [rax],al
   14000842c:	add    BYTE PTR [rax],al
   14000842e:	add    BYTE PTR [rax],al
   140008430:	test   al,0xa8
   140008432:	add    BYTE PTR [rax],al
   140008434:	add    BYTE PTR [rax],al
   140008436:	add    BYTE PTR [rax],al
   140008438:	sahf   
   140008439:	test   al,0x0
   14000843b:	add    BYTE PTR [rax],al
   14000843d:	add    BYTE PTR [rax],al
   14000843f:	add    BYTE PTR [rsi+0xa8],al
   140008445:	add    BYTE PTR [rax],al
   140008447:	add    BYTE PTR [rdx-0x58],bh
   14000844a:	add    BYTE PTR [rax],al
   14000844c:	add    BYTE PTR [rax],al
   14000844e:	add    BYTE PTR [rax],al
   140008450:	data16 test al,0x0
   140008453:	add    BYTE PTR [rax],al
   140008455:	add    BYTE PTR [rax],al
   140008457:	add    BYTE PTR [rax+rbp*4+0x0],bl
   14000845b:	add    BYTE PTR [rax],al
   14000845d:	add    BYTE PTR [rax],al
   14000845f:	add    BYTE PTR [rax+rbp*4+0x0],dl
   140008463:	add    BYTE PTR [rax],al
   140008465:	add    BYTE PTR [rax],al
   140008467:	add    BYTE PTR [rdx-0x58],al
   14000846a:	add    BYTE PTR [rax],al
   14000846c:	add    BYTE PTR [rax],al
   14000846e:	add    BYTE PTR [rax],al
   140008470:	xor    BYTE PTR [rax+0x0],ch
   140008476:	add    BYTE PTR [rax],al
   140008478:	and    ch,BYTE PTR [rax+0x0]
   14000847e:	add    BYTE PTR [rax],al
   140008480:	adc    al,0xa8
   140008482:	add    BYTE PTR [rax],al
   140008484:	add    BYTE PTR [rax],al
   140008486:	add    BYTE PTR [rax],al
   140008488:	or     BYTE PTR [rax+0x0],ch
   14000848e:	add    BYTE PTR [rax],al
   140008490:	(bad)  
   140008491:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008492:	add    BYTE PTR [rax],al
   140008494:	add    BYTE PTR [rax],al
   140008496:	add    BYTE PTR [rax],al
   140008498:	mul    BYTE PTR [rdi+0x0]
   14000849e:	add    BYTE PTR [rax],al
   1400084a0:	in     al,dx
   1400084a1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400084a2:	add    BYTE PTR [rax],al
   1400084a4:	add    BYTE PTR [rax],al
   1400084a6:	add    BYTE PTR [rax],al
   1400084a8:	push   0xad
   1400084ad:	add    BYTE PTR [rax],al
   1400084af:	add    dh,dl
   1400084b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400084b2:	add    BYTE PTR [rax],al
   1400084b4:	add    BYTE PTR [rax],al
   1400084b6:	add    BYTE PTR [rax],al
   1400084b8:	(bad)  
   1400084b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400084ba:	add    BYTE PTR [rax],al
   1400084bc:	add    BYTE PTR [rax],al
   1400084be:	add    BYTE PTR [rax],al
   1400084c0:	mov    esp,0xa7
   1400084c5:	add    BYTE PTR [rax],al
   1400084c7:	add    BYTE PTR [rax+0xa7],dh
   1400084cd:	add    BYTE PTR [rax],al
   1400084cf:	add    BYTE PTR [rdx+0xa7],ah
   1400084d5:	add    BYTE PTR [rax],al
   1400084d7:	add    BYTE PTR [rsi+0xa7],dl
   1400084dd:	add    BYTE PTR [rax],al
   1400084df:	add    BYTE PTR [rdx+0xa7],cl
   1400084e5:	add    BYTE PTR [rax],al
   1400084e7:	add    BYTE PTR [rsi-0x59],bh
   1400084ea:	add    BYTE PTR [rax],al
   1400084ec:	add    BYTE PTR [rax],al
   1400084ee:	add    BYTE PTR [rax],al
   1400084f0:	jo     0x140008499
   1400084f2:	add    BYTE PTR [rax],al
   1400084f4:	add    BYTE PTR [rax],al
   1400084f6:	add    BYTE PTR [rax],al
   1400084f8:	push   0xa7
   1400084fd:	add    BYTE PTR [rax],al
   1400084ff:	add    BYTE PTR [rsi-0x59],bl
   140008502:	add    BYTE PTR [rax],al
   140008504:	add    BYTE PTR [rax],al
   140008506:	add    BYTE PTR [rax],al
   140008508:	push   rdx
   140008509:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000850a:	add    BYTE PTR [rax],al
   14000850c:	add    BYTE PTR [rax],al
   14000850e:	add    BYTE PTR [rax],al
   140008510:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140008512:	add    BYTE PTR [rax],al
   140008514:	add    BYTE PTR [rax],al
   140008516:	add    BYTE PTR [rax],al
   140008518:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000851a:	add    BYTE PTR [rax],al
   14000851c:	add    BYTE PTR [rax],al
   14000851e:	add    BYTE PTR [rax],al
   140008520:	xor    al,0xa7
   140008522:	add    BYTE PTR [rax],al
   140008524:	add    BYTE PTR [rax],al
   140008526:	add    BYTE PTR [rax],al
   140008528:	fsubr  QWORD PTR [rax+rax*1+0x0]
   14000852f:	add    dl,ch
   140008531:	lods   al,BYTE PTR ds:[rsi]
   140008532:	add    BYTE PTR [rax],al
   140008534:	add    BYTE PTR [rax],al
   140008536:	add    BYTE PTR [rax],al
   140008538:	hlt    
   140008539:	lods   al,BYTE PTR ds:[rsi]
   14000853a:	add    BYTE PTR [rax],al
   14000853c:	add    BYTE PTR [rax],al
   14000853e:	add    BYTE PTR [rax],al
   140008540:	add    BYTE PTR [rbp+0x0],ch
   140008546:	add    BYTE PTR [rax],al
   140008548:	or     al,0xad
	...
   140008556:	add    BYTE PTR [rax],al
   140008558:	xor    BYTE PTR [rbx+0x0],ch
	...
   140008566:	add    BYTE PTR [rax],al
   140008568:	retf   0xa9
   14000856b:	add    BYTE PTR [rax],al
   14000856d:	add    BYTE PTR [rax],al
   14000856f:	add    ah,bl
   140008571:	test   eax,0x0
   140008576:	add    BYTE PTR [rax],al
   140008578:	mov    eax,0xa9
	...
   140008585:	add    BYTE PTR [rax],al
   140008587:	add    BYTE PTR [rdx+rbp*4],ah
	...
   140008596:	add    BYTE PTR [rax],al
   140008598:	mov    al,0x78
   14000859a:	add    BYTE PTR [rax+0x1],al
   14000859d:	add    BYTE PTR [rax],al
   14000859f:	add    BYTE PTR [rax],dh
   1400085a1:	jl     0x1400085a3
   1400085a3:	rex add DWORD PTR [rax],eax
	...
   1400085ae:	add    BYTE PTR [rax],al
   1400085b0:	rex jno 0x1400085b3
   1400085b3:	rex add DWORD PTR [rax],eax
   1400085b6:	add    BYTE PTR [rax],al
   1400085b8:	add    BYTE PTR [rax],dl
   1400085ba:	add    BYTE PTR [rax+0x1],al
	...
   1400085cd:	add    BYTE PTR [rax],al
   1400085cf:	add    BYTE PTR [rax+0x70],ah
   1400085d2:	add    BYTE PTR [rax+0x1],al
   1400085d5:	add    BYTE PTR [rax],al
   1400085d7:	add    al,ah
   1400085d9:	jne    0x1400085db
   1400085db:	rex add DWORD PTR [rax],eax
	...
   1400085e6:	add    BYTE PTR [rax],al
   1400085e8:	add    BYTE PTR [rax],dl
   1400085ea:	add    BYTE PTR [rax],al
   1400085ec:	movabs al,ds:0x40000010b0000010
   1400085f5:	adc    al,BYTE PTR [rax]
   1400085f7:	add    BYTE PTR [rax],ah
   1400085f9:	(bad)  
   1400085fa:	add    BYTE PTR [rax],al
   1400085fc:	mov    al,0x21
   1400085fe:	add    BYTE PTR [rax],al
   140008600:	shl    BYTE PTR [rcx],1
   140008602:	add    BYTE PTR [rax],al
   140008604:	adc    BYTE PTR [rdx],ah
   140008606:	add    BYTE PTR [rax],al
   140008608:	movabs al,ds:0x6000005530000022
   140008611:	jo     0x140008613
   140008613:	add    BYTE PTR [rax+0x71],al
   140008616:	add    BYTE PTR [rax],al
   140008618:	(bad)  
   140008619:	jae    0x14000861b
   14000861b:	add    BYTE PTR [rax+0x75],al
   14000861e:	add    BYTE PTR [rax],al
   140008620:	movabs al,ds:0xc0000075e0000075
   140008629:	jbe    0x14000862b
   14000862b:	add    BYTE PTR [rax+0x78],dh
   140008631:	jns    0x140008633
   140008633:	add    al,dl
   140008635:	jge    0x140008637
	...
   14000863f:	add    BYTE PTR [rbp+0x6e],dl
   140008642:	(bad)  
   140008643:	(bad)  
   140008644:	ins    BYTE PTR es:[rdi],dx
   140008645:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14000864a:	rex.XB jb 0x1400086b2
   14000864d:	(bad)  
   14000864e:	je     0x1400086b5
   140008650:	and    BYTE PTR [rbp+riz*2+0x62],al
   140008654:	jne    0x1400086bd
   140008656:	and    BYTE PTR [rax+0x72],dl
   140008659:	imul   ebp,DWORD PTR [rsi+0x74],0x6a624f20
   140008660:	movsxd esi,DWORD PTR gs:[rax+riz*1+0xa]
   140008665:	add    BYTE PTR [rax],al
   140008667:	add    BYTE PTR [rip+0xa007300],ah        # 0x14a00f96d
   14000866d:	add    BYTE PTR [rax],al
   14000866f:	add    BYTE PTR [rcx+0x0],cl
   140008672:	rex.WB add BYTE PTR [r11+0x0],dl
   140008676:	add    BYTE PTR [r8+0x0],r11b
   14000867a:	push   rax
   14000867b:	add    BYTE PTR [rdx+0x0],dl
   14000867e:	add    BYTE PTR [r11+0x0],r10b
   140008682:	push   rbx
   140008683:	add    BYTE PTR [rax],al
   140008685:	add    BYTE PTR [rax],al
   140008687:	add    BYTE PTR [rdi],ch
   140008689:	add    BYTE PTR [rsi+0x0],ch
   14000868c:	jne    0x14000868e
   14000868e:	ins    BYTE PTR es:[rdi],dx
   14000868f:	add    BYTE PTR [rax+rax*1+0x20],ch
   140008693:	add    BYTE PTR [rax],al
   140008695:	add    BYTE PTR [rax],al
   140008697:	add    BYTE PTR [rax],ah
   140008699:	add    BYTE PTR [rax],al
   14000869b:	add    BYTE PTR [rip+0x7300],ah        # 0x14000f9a1
   1400086a1:	add    BYTE PTR [rax],al
   1400086a3:	add    BYTE PTR [rax],al
   1400086a5:	add    BYTE PTR [rax],al
   1400086a7:	add    BYTE PTR [rcx+0x0],ch
   1400086aa:	imul   eax,DWORD PTR [rax],0x650073
   1400086b0:	js     0x1400086b2
   1400086b2:	jo     0x1400086b4
   1400086b4:	jb     0x1400086b6
   1400086b6:	add    BYTE PTR gs:[rbx+0x0],dh
   1400086ba:	jae    0x1400086bc
   1400086bc:	add    BYTE PTR cs:[rbp+0x0],ah
   1400086c0:	js     0x1400086c2
   1400086c2:	add    BYTE PTR gs:[rax],al
   1400086c5:	add    BYTE PTR [rax],al
   1400086c7:	add    BYTE PTR [rcx+0x0],cl
   1400086ca:	rex.WB add BYTE PTR [r11+0x0],dl
   1400086ce:	add    BYTE PTR [r8+0x0],r15b
   1400086d2:	jo     0x1400086d4
   1400086d4:	jb     0x1400086d6
   1400086d6:	add    BYTE PTR gs:[rbx+0x0],dh
   1400086da:	jae    0x1400086dc
   1400086dc:	add    BYTE PTR [rax],al
   1400086de:	add    BYTE PTR [rax],al
   1400086e0:	and    BYTE PTR [rax],al
   1400086e2:	sub    eax,0x2000
   1400086e7:	add    BYTE PTR [rcx+0x69],ch
   1400086ea:	jae    0x140008751
   1400086ec:	js     0x14000875e
   1400086ee:	jb     0x140008755
   1400086f0:	jae    0x140008765
   1400086f2:	add    BYTE PTR [rax],al
   1400086f4:	add    BYTE PTR [rax],al
   1400086f6:	add    BYTE PTR [rax],al
   1400086f8:	pop    rsp
   1400086f9:	add    BYTE PTR [rax],al
   1400086fb:	add    BYTE PTR [rax],al
   1400086fd:	add    BYTE PTR [rax],al
   1400086ff:	add    BYTE PTR [rax+0x0],ch
   140008702:	ja     0x140008704
   140008704:	add    BYTE PTR gs:[rdx+0x0],ah
   140008708:	movsxd eax,DWORD PTR [rax]
   14000870a:	outs   dx,DWORD PTR ds:[rsi]
   14000870b:	add    BYTE PTR [rdx+0x0],dh
   14000870e:	add    BYTE PTR gs:[rsi],ch
   140008711:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140008715:	add    BYTE PTR [rax+rax*1+0x0],ch
   140008719:	add    BYTE PTR [rax],al
   14000871b:	add    BYTE PTR [rax],al
   14000871d:	add    BYTE PTR [rax],al
   14000871f:	add    BYTE PTR [rdi+0x65],dl
   140008722:	(bad)
   140008727:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000872c:	(bad)  
   14000872d:	je     0x140008794
   14000872f:	add    BYTE PTR [rdi+0x65],dl
   140008732:	(bad)
   140008737:	push   rbx
   140008738:	push   0x6f647475
   14000873d:	ja     0x1400087ad
   14000873f:	add    BYTE PTR [rdi+0x65],dl
   140008742:	(bad)
   140008747:	push   rbx
   140008748:	gs je  0x140008798
   14000874b:	gs je  0x1400087af
   14000874e:	fs (bad) 
   140008750:	je     0x1400087b3
   140008752:	add    BYTE PTR [rax],al
   140008754:	add    BYTE PTR [rax],al
   140008756:	add    BYTE PTR [rax],al
   140008758:	(bad)  
   140008759:	add    BYTE PTR [rax+0x0],dh
   14000875c:	jo     0x14000875e
   14000875e:	ins    BYTE PTR es:[rdi],dx
   14000875f:	add    BYTE PTR [rcx+0x0],ch
   140008762:	movsxd eax,DWORD PTR [rax]
   140008764:	(bad)  
   140008765:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008769:	add    BYTE PTR [rdi+0x0],ch
   14000876c:	outs   dx,BYTE PTR ds:[rsi]
   14000876d:	add    BYTE PTR [rax+0x0],dl
   140008770:	outs   dx,DWORD PTR ds:[rsi]
   140008771:	add    BYTE PTR [rdi+0x0],ch
   140008774:	ins    BYTE PTR es:[rdi],dx
   140008775:	add    BYTE PTR [rax],al
   140008777:	add    BYTE PTR [rdi+0x0],dl
   14000877a:	add    BYTE PTR gs:[rdx+0x0],ah
   14000877e:	rex.XB add BYTE PTR [r15+0x0],bpl
   140008782:	jb     0x140008784
   140008784:	add    BYTE PTR gs:[rbx+0x0],dl
   140008788:	add    BYTE PTR gs:[rdx+0x0],dh
   14000878c:	jbe    0x14000878e
   14000878e:	imul   eax,DWORD PTR [rax],0x650063
   140008794:	add    BYTE PTR [rax],al
   140008796:	add    BYTE PTR [rax],al
   140008798:	movsxd eax,DWORD PTR [rax]
   14000879a:	outs   dx,DWORD PTR ds:[rsi]
   14000879b:	add    BYTE PTR [rsi+0x0],ch
   14000879e:	data16 add BYTE PTR [rcx+0x0],ch
   1400087a2:	add    BYTE PTR [eax],al
   1400087a5:	add    BYTE PTR [rax],al
   1400087a7:	add    BYTE PTR [rax+0x0],dh
   1400087aa:	outs   dx,DWORD PTR ds:[rsi]
   1400087ab:	add    BYTE PTR [rdx+0x0],dh
   1400087ae:	je     0x1400087b0
	...
   1400087b8:	jo     0x1400087ba
   1400087ba:	(bad)  
   1400087bb:	add    BYTE PTR [rax+rax*1+0x68],dh
	...
   1400087c7:	add    BYTE PTR [rsi+0x0],dh
   1400087ca:	jo     0x1400087cc
   1400087cc:	(bad)  
   1400087cd:	add    BYTE PTR [rax+rax*1+0x68],dh
   1400087d1:	add    BYTE PTR [rax],al
   1400087d3:	add    BYTE PTR [rax],al
   1400087d5:	add    BYTE PTR [rax],al
   1400087d7:	add    BYTE PTR [rbx+0x0],ah
   1400087da:	ins    BYTE PTR es:[rdi],dx
   1400087db:	add    BYTE PTR [rdx+0x0],dh
   1400087de:	add    BYTE PTR [rax],al
   1400087e0:	ins    DWORD PTR es:[rdi],dx
   1400087e1:	add    BYTE PTR [rdi+0x0],ch
   1400087e4:	add    BYTE PTR fs:[rbp+0x0],ah
	...
   1400087f0:	push   0x73006f00
   1400087f5:	add    BYTE PTR [rax+rax*1+0x6e],dh
   1400087f9:	add    BYTE PTR [rcx+0x0],ah
   1400087fc:	ins    DWORD PTR es:[rdi],dx
   1400087fd:	add    BYTE PTR [rbp+0x0],ah
	...
   140008808:	push   0x6c006500
   14000880d:	add    BYTE PTR [rax+0x0],dh
	...
   140008818:	push   0x64006900
   14000881d:	add    BYTE PTR [rbp+0x0],ah
   140008820:	imul   eax,DWORD PTR [rax],0x6f0063
   140008826:	outs   dx,BYTE PTR ds:[rsi]
	...
   14000882f:	add    BYTE PTR [rax+rax*1+0x72],dh
   140008833:	add    BYTE PTR [rbp+0x0],dh
   140008836:	add    BYTE PTR gs:[rax],al
   140008839:	add    BYTE PTR [rax],al
   14000883b:	add    BYTE PTR [rax],al
   14000883d:	add    BYTE PTR [rax],al
   14000883f:	add    BYTE PTR [rsi+0x0],ch
   140008842:	je     0x140008844
   140008844:	ins    BYTE PTR es:[rdi],dx
   140008845:	add    BYTE PTR [rbp+0x0],ch
	...
   140008850:	jae    0x140008852
   140008852:	imul   eax,DWORD PTR [rax],0x650074
   140008858:	imul   eax,DWORD PTR [rax],0x64
   14000885e:	add    BYTE PTR [rax],al
   140008860:	jae    0x140008862
   140008862:	imul   eax,DWORD PTR [rax],0x650074
	...
   140008870:	(bad)  
   140008871:	add    BYTE PTR [rax+0x0],dh
   140008874:	jo     0x140008876
   140008876:	jo     0x140008878
   140008878:	outs   dx,DWORD PTR ds:[rsi]
   140008879:	add    BYTE PTR [rdi+0x0],ch
   14000887c:	ins    BYTE PTR es:[rdi],dx
   14000887d:	add    BYTE PTR [rax],al
   14000887f:	add    BYTE PTR [rsi+0x0],ch
   140008882:	outs   dx,DWORD PTR ds:[rsi]
   140008883:	add    BYTE PTR [rax+rax*1+0x69],ah
   140008887:	add    BYTE PTR [rdx+0x0],dh
   14000888a:	ins    BYTE PTR es:[rdi],dx
   14000888b:	add    BYTE PTR [rcx+0x0],ch
   14000888e:	jae    0x140008890
   140008890:	je     0x140008892
   140008892:	add    BYTE PTR [rax],al
   140008894:	add    BYTE PTR [rax],al
   140008896:	add    BYTE PTR [rax],al
   140008898:	jo     0x14000889a
   14000889a:	(bad)  
   14000889b:	add    BYTE PTR [rbp+0x0],dh
   14000889e:	jae    0x1400088a0
   1400088a0:	add    BYTE PTR gs:[rax],al
   1400088a3:	add    BYTE PTR [rax],al
   1400088a5:	add    BYTE PTR [rax],al
   1400088a7:	add    BYTE PTR [rsi+0x0],ah
   1400088aa:	(bad)  
   1400088ab:	add    BYTE PTR [rax+rax*1+0x73],ch
   1400088af:	add    BYTE PTR [rbp+0x0],ah
   1400088b2:	add    BYTE PTR [rax],al
   1400088b4:	add    BYTE PTR [rax],al
   1400088b6:	add    BYTE PTR [rax],al
   1400088b8:	add    BYTE PTR fs:[rcx+0x0],ch
   1400088bc:	(bad)  
   1400088bd:	add    BYTE PTR [rdi+0x0],ah
	...
   1400088c8:	jae    0x1400088ca
   1400088ca:	jns    0x1400088cc
   1400088cc:	jae    0x1400088ce
   1400088ce:	je     0x1400088d0
   1400088d0:	jb     0x1400088d2
   1400088d2:	(bad)  
   1400088d3:	add    BYTE PTR [rcx+0x0],bh
   1400088d6:	add    BYTE PTR [rax],al
   1400088d8:	(bad)  
   1400088d9:	add    BYTE PTR [rdx+0x0],ah
   1400088dc:	add    BYTE PTR [edx],bh
	...
   1400088e7:	add    BYTE PTR [rsi+0x0],ch
   1400088ea:	jne    0x1400088ec
   1400088ec:	ins    BYTE PTR es:[rdi],dx
   1400088ed:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400088f1:	add    BYTE PTR [rax],al
   1400088f3:	add    BYTE PTR [rax],al
   1400088f5:	add    BYTE PTR [rax],al
   1400088f7:	add    BYTE PTR [rax+rax*1+0x69],ch
   1400088fb:	add    BYTE PTR [rbx+0x0],dh
   1400088fe:	je     0x140008900
   140008900:	jae    0x140008902
   140008902:	imul   eax,DWORD PTR [rax],0x650074
   140008908:	jae    0x14000890a
   14000890a:	add    BYTE PTR [rax],al
   14000890c:	add    BYTE PTR [rax],al
   14000890e:	add    BYTE PTR [rax],al
   140008910:	je     0x140008912
   140008912:	jb     0x140008914
   140008914:	(bad)  
   140008915:	add    BYTE PTR [rbx+0x0],ah
   140008918:	add    BYTE PTR gs:[rax],al
   14000891b:	add    BYTE PTR [rax],al
   14000891d:	add    BYTE PTR [rax],al
   14000891f:	add    BYTE PTR [rbp+0x0],dh
   140008922:	jae    0x140008924
   140008924:	add    BYTE PTR gs:[rdx+0x0],dh
   140008928:	push   0x6d006f00
   14000892d:	add    BYTE PTR [rbp+0x0],ah
	...
   140008938:	jo     0x14000893a
   14000893a:	(bad)  
   14000893b:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000893f:	add    BYTE PTR [rbp+0x0],cl
   140008942:	(bad)  
   140008943:	add    BYTE PTR [rax+0x0],dh
   140008946:	jo     0x140008948
   140008948:	add    BYTE PTR gs:[rdx+0x0],dh
   14000894c:	add    BYTE PTR [rax],al
   14000894e:	add    BYTE PTR [rax],al
   140008950:	jae    0x140008952
   140008952:	jns    0x140008954
   140008954:	jae    0x140008956
   140008956:	je     0x140008958
   140008958:	add    BYTE PTR gs:[rbp+0x0],ch
   14000895c:	add    BYTE PTR cs:[rcx+0x0],ah
   140008960:	jo     0x140008962
   140008962:	jo     0x140008964
   140008964:	ins    BYTE PTR es:[rdi],dx
   140008965:	add    BYTE PTR [rcx+0x0],ch
   140008968:	movsxd eax,DWORD PTR [rax]
   14000896a:	(bad)  
   14000896b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000896f:	add    BYTE PTR [rdi+0x0],ch
   140008972:	outs   dx,BYTE PTR ds:[rsi]
   140008973:	add    BYTE PTR [rax+0x0],cl
   140008976:	outs   dx,DWORD PTR ds:[rsi]
   140008977:	add    BYTE PTR [rbx+0x0],dh
   14000897a:	je     0x14000897c
   14000897c:	(bad)  
   14000897d:	add    BYTE PTR [rbx+0x0],dh
   140008980:	imul   eax,DWORD PTR [rax],0x650074
   140008986:	jae    0x140008988
	...
   140008990:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140008994:	rex.XB add BYTE PTR [r8+0x0],cl
   140008998:	rex.WB add BYTE PTR [r14+0x0],cl
   14000899c:	add    BYTE PTR [r15],r13b
   14000899f:	add    BYTE PTR [rdi+0x0],dl
   1400089a2:	add    BYTE PTR [r10+0x0],r8b
   1400089a6:	push   rdx
   1400089a7:	add    BYTE PTR [rdi+0x0],cl
   1400089aa:	rex.WRXB add BYTE PTR [r8+r8*1+0x2f],r10b
   1400089af:	add    BYTE PTR [rcx+0x0],al
   1400089b2:	push   rax
   1400089b3:	add    BYTE PTR [rax+0x0],dl
   1400089b6:	rex.W add BYTE PTR [rdi+0x0],cl
   1400089ba:	push   rbx
   1400089bb:	add    BYTE PTR [rax+rax*1+0x0],dl
   1400089bf:	add    BYTE PTR [rcx+0x0],ah
   1400089c2:	jo     0x1400089c4
   1400089c4:	jo     0x1400089c6
   1400089c6:	ins    BYTE PTR es:[rdi],dx
   1400089c7:	add    BYTE PTR [rcx+0x0],ch
   1400089ca:	movsxd eax,DWORD PTR [rax]
   1400089cc:	(bad)  
   1400089cd:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400089d1:	add    BYTE PTR [rdi+0x0],ch
   1400089d4:	outs   dx,BYTE PTR ds:[rsi]
   1400089d5:	add    BYTE PTR [rax+0x0],ch
   1400089d8:	outs   dx,DWORD PTR ds:[rsi]
   1400089d9:	add    BYTE PTR [rbx+0x0],dh
   1400089dc:	je     0x1400089de
   1400089de:	and    eax,0x25006400
   1400089e3:	add    BYTE PTR [rax+rax*1+0x25],ah
   1400089e7:	add    BYTE PTR [rax+rax*1+0x25],ah
   1400089eb:	add    BYTE PTR [rax+rax*1+0x25],ah
   1400089ef:	add    BYTE PTR [rax+rax*1+0x25],ah
   1400089f3:	add    BYTE PTR [rax+rax*1+0x25],ah
   1400089f7:	add    BYTE PTR [rax+rax*1+0x2e],ah
   1400089fb:	add    BYTE PTR [rbx+0x0],ah
   1400089fe:	outs   dx,DWORD PTR ds:[rsi]
   1400089ff:	add    BYTE PTR [rsi+0x0],ch
   140008a02:	data16 add BYTE PTR [rcx+0x0],ch
   140008a06:	add    BYTE PTR [eax],al
   140008a09:	add    BYTE PTR [rax],al
   140008a0b:	add    BYTE PTR [rax],al
   140008a0d:	add    BYTE PTR [rax],al
   140008a0f:	add    BYTE PTR [rcx+0x0],ch
   140008a12:	imul   eax,DWORD PTR [rax],0x650073
   140008a18:	js     0x140008a1a
   140008a1a:	jo     0x140008a1c
   140008a1c:	jb     0x140008a1e
   140008a1e:	add    BYTE PTR gs:[rbx+0x0],dh
   140008a22:	jae    0x140008a24
   140008a24:	pop    rsp
   140008a25:	add    BYTE PTR [rax],al
   140008a27:	add    BYTE PTR [rax+rax*1+0x61],bl
   140008a2b:	add    BYTE PTR [rax+0x0],dh
   140008a2e:	jo     0x140008a30
   140008a30:	ins    BYTE PTR es:[rdi],dx
   140008a31:	add    BYTE PTR [rcx+0x0],ch
   140008a34:	movsxd eax,DWORD PTR [rax]
   140008a36:	(bad)  
   140008a37:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008a3b:	add    BYTE PTR [rdi+0x0],ch
   140008a3e:	outs   dx,BYTE PTR ds:[rsi]
   140008a3f:	add    BYTE PTR [rax+0x0],ch
   140008a42:	outs   dx,DWORD PTR ds:[rsi]
   140008a43:	add    BYTE PTR [rbx+0x0],dh
   140008a46:	je     0x140008a48
   140008a48:	add    BYTE PTR cs:[rbx+0x0],ah
   140008a4c:	outs   dx,DWORD PTR ds:[rsi]
   140008a4d:	add    BYTE PTR [rsi+0x0],ch
   140008a50:	data16 add BYTE PTR [rcx+0x0],ch
   140008a54:	add    BYTE PTR [eax],al
   140008a57:	add    BYTE PTR [rbx+0x6f],al
   140008a5a:	jo     0x140008ac5
   140008a5c:	gs and BYTE PTR fs:[rbp+riz*2+0x6d],dh
   140008a62:	jo     0x140008ad0
   140008a64:	(bad)  
   140008a65:	je     0x140008acc
   140008a67:	and    BYTE PTR [rbx+0x6f],ah
   140008a6a:	outs   dx,BYTE PTR ds:[rsi]
   140008a6b:	imul   sp,WORD PTR [rdi+0x20],0x6966
   140008a71:	ins    BYTE PTR es:[rdi],dx
   140008a72:	and    BYTE PTR gs:[rdi],ah
   140008a75:	and    eax,0x74202753
   140008a7a:	outs   dx,DWORD PTR ds:[rsi]
   140008a7b:	and    BYTE PTR [rdi],ah
   140008a7d:	and    eax,0xa202753
   140008a82:	add    BYTE PTR [rax],al
   140008a84:	add    BYTE PTR [rax],al
   140008a86:	add    BYTE PTR [rax],al
   140008a88:	rex.XB jb 0x140008af0
   140008a8b:	(bad)  
   140008a8c:	je     0x140008af3
   140008a8e:	push   rsp
   140008a8f:	gs ins DWORD PTR es:[rdi],dx
   140008a91:	jo     0x140008ad6
   140008a93:	outs   dx,DWORD PTR ds:[rsi]
   140008a94:	outs   dx,BYTE PTR ds:[rsi]
   140008a95:	imul   sp,WORD PTR [rdi+0x44],0x436f
   140008a9b:	(bad)  
   140008a9c:	jae    0x140008b11
   140008a9e:	imul   ebp,DWORD PTR [rsi+0x69],0x74746553
   140008aa5:	imul   ebp,DWORD PTR [rsi+0x67],0x73
   140008aac:	add    BYTE PTR [rax],al
   140008aae:	add    BYTE PTR [rax],al
   140008ab0:	imul   ebp,DWORD PTR [rsi+0x65],0x76727374
   140008ab7:	pop    rsp
   140008ab8:	imul   ebp,DWORD PTR [rcx+0x73],0x7369695c
   140008abf:	jb     0x140008b26
   140008ac1:	(bad)  
   140008ac2:	jb     0x140008b27
   140008ac4:	pop    rsp
   140008ac5:	imul   ebp,DWORD PTR [rcx+0x73],0x73756c70
   140008acc:	pop    rsp
   140008acd:	imul   ebp,DWORD PTR [rcx+0x73],0x72707865
   140008ad4:	gs jae 0x140008b4a
   140008ad7:	pop    rsp
   140008ad8:	imul   ebp,DWORD PTR [rcx+0x73],0x72707865
   140008adf:	gs jae 0x140008b55
   140008ae2:	jne    0x140008b58
   140008ae4:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x70632e79
   140008aec:	jo     0x140008aee
   140008aee:	add    BYTE PTR [rax],al
   140008af0:	pop    rsp
   140008af1:	add    BYTE PTR [rcx+0x0],al
   140008af4:	jo     0x140008af6
   140008af6:	jo     0x140008af8
   140008af8:	push   rbx
   140008af9:	add    BYTE PTR [rbp+0x0],ah
   140008afc:	jb     0x140008afe
   140008afe:	jbe    0x140008b00
   140008b00:	add    BYTE PTR gs:[rdx+0x0],dh
   140008b04:	pop    rsp
   140008b05:	add    BYTE PTR [rcx+0x0],ah
   140008b08:	jo     0x140008b0a
   140008b0a:	jo     0x140008b0c
   140008b0c:	ins    BYTE PTR es:[rdi],dx
   140008b0d:	add    BYTE PTR [rcx+0x0],ch
   140008b10:	movsxd eax,DWORD PTR [rax]
   140008b12:	(bad)  
   140008b13:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008b17:	add    BYTE PTR [rdi+0x0],ch
   140008b1a:	outs   dx,BYTE PTR ds:[rsi]
   140008b1b:	add    BYTE PTR [rax+0x0],ch
   140008b1e:	outs   dx,DWORD PTR ds:[rsi]
   140008b1f:	add    BYTE PTR [rbx+0x0],dh
   140008b22:	je     0x140008b24
   140008b24:	add    BYTE PTR cs:[rbx+0x0],ah
   140008b28:	outs   dx,DWORD PTR ds:[rsi]
   140008b29:	add    BYTE PTR [rsi+0x0],ch
   140008b2c:	data16 add BYTE PTR [rcx+0x0],ch
   140008b30:	add    BYTE PTR [eax],al
	...
   140008b3f:	add    BYTE PTR [rbp+0x0],cl
   140008b42:	imul   eax,DWORD PTR [rax],0x720063
   140008b48:	outs   dx,DWORD PTR ds:[rsi]
   140008b49:	add    BYTE PTR [rbx+0x0],dh
   140008b4c:	outs   dx,DWORD PTR ds:[rsi]
   140008b4d:	add    BYTE PTR [rsi+0x0],ah
   140008b50:	je     0x140008b52
   140008b52:	add    BYTE PTR cs:[rcx+0x0],al
   140008b56:	jo     0x140008b58
   140008b58:	jo     0x140008b5a
   140008b5a:	ins    BYTE PTR es:[rdi],dx
   140008b5b:	add    BYTE PTR [rcx+0x0],ch
   140008b5e:	movsxd eax,DWORD PTR [rax]
   140008b60:	(bad)  
   140008b61:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008b65:	add    BYTE PTR [rdi+0x0],ch
   140008b68:	outs   dx,BYTE PTR ds:[rsi]
   140008b69:	add    BYTE PTR [rax+0x0],cl
   140008b6c:	outs   dx,DWORD PTR ds:[rsi]
   140008b6d:	add    BYTE PTR [rbx+0x0],dh
   140008b70:	je     0x140008b72
   140008b72:	add    BYTE PTR cs:[rdi+0x0],dl
   140008b76:	jb     0x140008b78
   140008b78:	imul   eax,DWORD PTR [rax],0x610074
   140008b7e:	(bad)  
   140008b7f:	add    BYTE PTR [rax+rax*1+0x65],ch
   140008b83:	add    BYTE PTR [rcx+0x0],al
   140008b86:	add    BYTE PTR fs:[rbp+0x0],ch
   140008b8a:	imul   eax,DWORD PTR [rax],0x4d006e
   140008b90:	(bad)  
   140008b91:	add    BYTE PTR [rsi+0x0],ch
   140008b94:	(bad)  
   140008b95:	add    BYTE PTR [rdi+0x0],ah
   140008b98:	add    BYTE PTR gs:[rdx+0x0],dh
   140008b9c:	add    BYTE PTR [rax],al
   140008b9e:	add    BYTE PTR [rax],al
   140008ba0:	add    BYTE PTR [rbp+0x0],r12b
   140008ba4:	jbe    0x140008ba6
   140008ba6:	add    BYTE PTR gs:[rax+rax*1+0x6f],ch
   140008bab:	add    BYTE PTR [rax+0x0],dh
   140008bae:	ins    DWORD PTR es:[rdi],dx
   140008baf:	add    BYTE PTR [rbp+0x0],ah
   140008bb2:	outs   dx,BYTE PTR ds:[rsi]
   140008bb3:	add    BYTE PTR [rax+rax*1+0x20],dh
   140008bb7:	add    BYTE PTR [rdi+0x0],dl
   140008bba:	add    BYTE PTR gs:[rdx+0x0],ah
   140008bbe:	and    BYTE PTR [rax],al
   140008bc0:	push   rbx
   140008bc1:	add    BYTE PTR [rcx+0x0],ch
   140008bc4:	je     0x140008bc6
   140008bc6:	add    BYTE PTR gs:[rax],al
   140008bc9:	add    BYTE PTR [rax],al
   140008bcb:	add    BYTE PTR [rax],al
   140008bcd:	add    BYTE PTR [rax],al
   140008bcf:	add    BYTE PTR [rsi+0x0],ch
   140008bd2:	(bad)  
   140008bd3:	add    BYTE PTR [rbp+0x0],ch
   140008bd6:	add    BYTE PTR gs:[rax],al
   140008bd9:	add    BYTE PTR [rax],al
   140008bdb:	add    BYTE PTR [rdi],ch
   140008bdd:	add    BYTE PTR [rax],al
   140008bdf:	add    BYTE PTR [rcx+0x0],cl
   140008be2:	rex.WB add BYTE PTR [r11+0x0],dl
   140008be6:	add    BYTE PTR [r8+0x0],r15b
   140008bea:	jo     0x140008bec
   140008bec:	jb     0x140008bee
   140008bee:	add    BYTE PTR gs:[rbx+0x0],dh
   140008bf2:	jae    0x140008bf4
   140008bf4:	add    BYTE PTR [r8+0x0],sil
   140008bf8:	jo     0x140008bfa
   140008bfa:	push   rax
   140008bfb:	add    BYTE PTR [rdi+0x0],ch
   140008bfe:	outs   dx,DWORD PTR ds:[rsi]
   140008bff:	add    BYTE PTR [rax+rax*1+0x0],ch
   140008c03:	add    BYTE PTR [rax],al
   140008c05:	add    BYTE PTR [rax],al
   140008c07:	add    BYTE PTR [rax+0x0],dh
   140008c0a:	push   0x73007900
   140008c0f:	add    BYTE PTR [rcx+0x0],ch
   140008c12:	movsxd eax,DWORD PTR [rax]
   140008c14:	(bad)  
   140008c15:	add    BYTE PTR [rax+rax*1+0x50],ch
   140008c19:	add    BYTE PTR [rcx+0x0],ah
   140008c1c:	je     0x140008c1e
   140008c1e:	push   0x0
   140008c23:	add    BYTE PTR [rax],al
   140008c25:	add    BYTE PTR [rax],al
   140008c27:	add    BYTE PTR [rdx+0x0],ah
   140008c2a:	imul   eax,DWORD PTR [rax],0x64006e
   140008c30:	imul   eax,DWORD PTR [rax],0x67006e
   140008c36:	jae    0x140008c38
   140008c38:	add    BYTE PTR [rax],al
   140008c3a:	add    BYTE PTR [rax],al
   140008c3c:	cmp    al,BYTE PTR [rax]
   140008c3e:	add    BYTE PTR [rax],al
   140008c40:	(bad)  
   140008c41:	add    BYTE PTR [rcx+0x0],ch
   140008c44:	outs   dx,BYTE PTR ds:[rsi]
   140008c45:	add    BYTE PTR [rax+rax*1+0x69],ah
   140008c49:	add    BYTE PTR [rsi+0x0],ch
   140008c4c:	add    BYTE PTR [ecx+0x0],cl
   140008c50:	outs   dx,BYTE PTR ds:[rsi]
   140008c51:	add    BYTE PTR [rsi+0x0],ah
   140008c54:	outs   dx,DWORD PTR ds:[rsi]
   140008c55:	add    BYTE PTR [rdx+0x0],dh
   140008c58:	ins    DWORD PTR es:[rdi],dx
   140008c59:	add    BYTE PTR [rcx+0x0],ah
   140008c5c:	je     0x140008c5e
   140008c5e:	imul   eax,DWORD PTR [rax],0x6e006f
   140008c64:	add    BYTE PTR [rax],al
   140008c66:	add    BYTE PTR [rax],al
   140008c68:	ins    DWORD PTR es:[rdi],dx
   140008c69:	add    BYTE PTR [rcx+0x0],ah
   140008c6c:	outs   dx,BYTE PTR ds:[rsi]
   140008c6d:	add    BYTE PTR [rcx+0x0],ah
   140008c70:	add    BYTE PTR [ebp+0x0],ah
   140008c74:	add    BYTE PTR fs:[rdx+0x0],dl
   140008c78:	jne    0x140008c7a
   140008c7a:	outs   dx,BYTE PTR ds:[rsi]
   140008c7b:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008c7f:	add    BYTE PTR [rbp+0x0],ch
   140008c82:	add    BYTE PTR gs:[rsi+0x0],dl
   140008c86:	add    BYTE PTR gs:[rdx+0x0],dh
   140008c8a:	jae    0x140008c8c
   140008c8c:	imul   eax,DWORD PTR [rax],0x6e006f
   140008c92:	add    BYTE PTR [rax],al
   140008c94:	add    BYTE PTR [rax],al
   140008c96:	add    BYTE PTR [rax],al
   140008c98:	ins    DWORD PTR es:[rdi],dx
   140008c99:	add    BYTE PTR [rcx+0x0],ah
   140008c9c:	outs   dx,BYTE PTR ds:[rsi]
   140008c9d:	add    BYTE PTR [rcx+0x0],ah
   140008ca0:	add    BYTE PTR [ebp+0x0],ah
   140008ca4:	add    BYTE PTR fs:[rax+0x0],dl
   140008ca8:	imul   eax,DWORD PTR [rax],0x650070
   140008cae:	ins    BYTE PTR es:[rdi],dx
   140008caf:	add    BYTE PTR [rcx+0x0],ch
   140008cb2:	outs   dx,BYTE PTR ds:[rsi]
   140008cb3:	add    BYTE PTR [rbp+0x0],ah
   140008cb6:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140008cba:	add    BYTE PTR fs:[rbp+0x0],ah
   140008cbe:	add    BYTE PTR [rax],al
   140008cc0:	push   rbp
   140008cc1:	jo     0x140008d27
   140008cc3:	(bad)  
   140008cc4:	je     0x140008d2b
   140008cc6:	and    BYTE PTR fs:[rbx+0x6f],ah
   140008cca:	outs   dx,BYTE PTR ds:[rsi]
   140008ccb:	imul   sp,WORD PTR [rdi+0x75],0x6172
   140008cd1:	je     0x140008d3c
   140008cd3:	outs   dx,DWORD PTR ds:[rsi]
   140008cd4:	outs   dx,BYTE PTR ds:[rsi]
   140008cd5:	and    BYTE PTR [rsi+0x69],ah
   140008cd8:	ins    BYTE PTR es:[rdi],dx
   140008cd9:	and    BYTE PTR gs:[rdi],ah
   140008cdc:	and    eax,0x77202753
   140008ce1:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x65766967
   140008ce9:	outs   dx,BYTE PTR ds:[rsi]
   140008cea:	and    BYTE PTR [rbx+0x6d],ah
   140008ced:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
   140008cf2:	and    BYTE PTR gs:[rcx+0x6e],ch
   140008cf6:	outs   dx,WORD PTR ds:[rsi]
   140008cf8:	or     al,BYTE PTR cs:[rax]
   140008cfb:	add    BYTE PTR [rax],al
   140008cfd:	add    BYTE PTR [rax],al
   140008cff:	add    BYTE PTR [rbx+0x0],dh
   140008d02:	jns    0x140008d04
   140008d04:	jae    0x140008d06
   140008d06:	je     0x140008d08
   140008d08:	add    BYTE PTR gs:[rbp+0x0],ch
   140008d0c:	add    BYTE PTR cs:[rcx+0x0],ah
   140008d10:	jo     0x140008d12
   140008d12:	jo     0x140008d14
   140008d14:	ins    BYTE PTR es:[rdi],dx
   140008d15:	add    BYTE PTR [rcx+0x0],ch
   140008d18:	movsxd eax,DWORD PTR [rax]
   140008d1a:	(bad)  
   140008d1b:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008d1f:	add    BYTE PTR [rdi+0x0],ch
   140008d22:	outs   dx,BYTE PTR ds:[rsi]
   140008d23:	add    BYTE PTR [rax+0x0],cl
   140008d26:	outs   dx,DWORD PTR ds:[rsi]
   140008d27:	add    BYTE PTR [rbx+0x0],dh
   140008d2a:	je     0x140008d2c
   140008d2c:	(bad)  
   140008d2d:	add    BYTE PTR [rcx+0x0],ah
   140008d30:	jo     0x140008d32
   140008d32:	jo     0x140008d34
   140008d34:	ins    BYTE PTR es:[rdi],dx
   140008d35:	add    BYTE PTR [rcx+0x0],ch
   140008d38:	movsxd eax,DWORD PTR [rax]
   140008d3a:	(bad)  
   140008d3b:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008d3f:	add    BYTE PTR [rdi+0x0],ch
   140008d42:	outs   dx,BYTE PTR ds:[rsi]
   140008d43:	add    BYTE PTR [rax+0x0],dl
   140008d46:	outs   dx,DWORD PTR ds:[rsi]
   140008d47:	add    BYTE PTR [rdi+0x0],ch
   140008d4a:	ins    BYTE PTR es:[rdi],dx
   140008d4b:	add    BYTE PTR [rbx+0x0],dh
   140008d4e:	add    BYTE PTR [rax],al
   140008d50:	jae    0x140008d52
   140008d52:	jns    0x140008d54
   140008d54:	jae    0x140008d56
   140008d56:	je     0x140008d58
   140008d58:	add    BYTE PTR gs:[rbp+0x0],ch
   140008d5c:	add    BYTE PTR cs:[rdi+0x0],dh
   140008d60:	add    BYTE PTR gs:[rdx+0x0],ah
   140008d64:	push   rbx
   140008d65:	add    BYTE PTR [rbp+0x0],ah
   140008d68:	jb     0x140008d6a
   140008d6a:	jbe    0x140008d6c
   140008d6c:	add    BYTE PTR gs:[rdx+0x0],dh
   140008d70:	(bad)  
   140008d71:	add    BYTE PTR [rbx+0x0],dh
   140008d74:	add    BYTE PTR gs:[rbx+0x0],ah
   140008d78:	jne    0x140008d7a
   140008d7a:	jb     0x140008d7c
   140008d7c:	imul   eax,DWORD PTR [rax],0x790074
   140008d82:	(bad)  
   140008d83:	add    BYTE PTR [rcx+0x0],ah
   140008d86:	jne    0x140008d88
   140008d88:	je     0x140008d8a
   140008d8a:	push   0x6e006500
   140008d8f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008d93:	add    BYTE PTR [rbx+0x0],ah
   140008d96:	(bad)  
   140008d97:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008d9b:	add    BYTE PTR [rdi+0x0],ch
   140008d9e:	outs   dx,BYTE PTR ds:[rsi]
   140008d9f:	add    BYTE PTR [rdi],ch
   140008da1:	add    BYTE PTR [rcx+0x0],ah
   140008da4:	outs   dx,BYTE PTR ds:[rsi]
   140008da5:	add    BYTE PTR [rdi+0x0],ch
   140008da8:	outs   dx,BYTE PTR ds:[rsi]
   140008da9:	add    BYTE PTR [rcx+0x0],bh
   140008dac:	ins    DWORD PTR es:[rdi],dx
   140008dad:	add    BYTE PTR [rdi+0x0],ch
   140008db0:	jne    0x140008db2
   140008db2:	jae    0x140008db4
   140008db4:	add    BYTE PTR [r13+0x0],sil
   140008db8:	je     0x140008dba
   140008dba:	push   0x6e006500
   140008dbf:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008dc3:	add    BYTE PTR [rbx+0x0],ah
   140008dc6:	(bad)  
   140008dc7:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008dcb:	add    BYTE PTR [rdi+0x0],ch
   140008dce:	outs   dx,BYTE PTR ds:[rsi]
	...
   140008dd7:	add    BYTE PTR [rbp+0x0],ah
   140008dda:	outs   dx,BYTE PTR ds:[rsi]
   140008ddb:	add    BYTE PTR [rcx+0x0],ah
   140008dde:	(bad)  
   140008ddf:	add    BYTE PTR [rax+rax*1+0x65],ch
   140008de3:	add    BYTE PTR [rax+rax*1+0x0],ah
	...
   140008def:	add    BYTE PTR [rbx+0x0],dh
   140008df2:	jns    0x140008df4
   140008df4:	jae    0x140008df6
   140008df6:	je     0x140008df8
   140008df8:	add    BYTE PTR gs:[rbp+0x0],ch
   140008dfc:	add    BYTE PTR cs:[rdi+0x0],dh
   140008e00:	add    BYTE PTR gs:[rdx+0x0],ah
   140008e04:	push   rbx
   140008e05:	add    BYTE PTR [rbp+0x0],ah
   140008e08:	jb     0x140008e0a
   140008e0a:	jbe    0x140008e0c
   140008e0c:	add    BYTE PTR gs:[rdx+0x0],dh
   140008e10:	(bad)  
   140008e11:	add    BYTE PTR [rbx+0x0],dh
   140008e14:	add    BYTE PTR gs:[rbx+0x0],ah
   140008e18:	jne    0x140008e1a
   140008e1a:	jb     0x140008e1c
   140008e1c:	imul   eax,DWORD PTR [rax],0x790074
   140008e22:	(bad)  
   140008e23:	add    BYTE PTR [rcx+0x0],ah
   140008e26:	jne    0x140008e28
   140008e28:	je     0x140008e2a
   140008e2a:	push   0x6e006500
   140008e2f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008e33:	add    BYTE PTR [rbx+0x0],ah
   140008e36:	(bad)  
   140008e37:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008e3b:	add    BYTE PTR [rdi+0x0],ch
   140008e3e:	outs   dx,BYTE PTR ds:[rsi]
   140008e3f:	add    BYTE PTR [rdi],ch
   140008e41:	add    BYTE PTR [rdi+0x0],dh
   140008e44:	imul   eax,DWORD PTR [rax],0x64006e
   140008e4a:	outs   dx,DWORD PTR ds:[rsi]
   140008e4b:	add    BYTE PTR [rdi+0x0],dh
   140008e4e:	jae    0x140008e50
   140008e50:	add    BYTE PTR [r13+0x0],sil
   140008e54:	je     0x140008e56
   140008e56:	push   0x6e006500
   140008e5b:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008e5f:	add    BYTE PTR [rbx+0x0],ah
   140008e62:	(bad)  
   140008e63:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008e67:	add    BYTE PTR [rdi+0x0],ch
   140008e6a:	outs   dx,BYTE PTR ds:[rsi]
   140008e6b:	add    BYTE PTR [rax],al
   140008e6d:	add    BYTE PTR [rax],al
   140008e6f:	add    BYTE PTR [rbx+0x0],dh
   140008e72:	jns    0x140008e74
   140008e74:	jae    0x140008e76
   140008e76:	je     0x140008e78
   140008e78:	add    BYTE PTR gs:[rbp+0x0],ch
   140008e7c:	add    BYTE PTR cs:[rdi+0x0],dh
   140008e80:	add    BYTE PTR gs:[rdx+0x0],ah
   140008e84:	push   rbx
   140008e85:	add    BYTE PTR [rbp+0x0],ah
   140008e88:	jb     0x140008e8a
   140008e8a:	jbe    0x140008e8c
   140008e8c:	add    BYTE PTR gs:[rdx+0x0],dh
   140008e90:	(bad)  
   140008e91:	add    BYTE PTR [rbx+0x0],dh
   140008e94:	add    BYTE PTR gs:[rbx+0x0],ah
   140008e98:	jne    0x140008e9a
   140008e9a:	jb     0x140008e9c
   140008e9c:	imul   eax,DWORD PTR [rax],0x790074
   140008ea2:	(bad)  
   140008ea3:	add    BYTE PTR [rcx+0x0],ah
   140008ea6:	jne    0x140008ea8
   140008ea8:	je     0x140008eaa
   140008eaa:	push   0x72006f00
   140008eaf:	add    BYTE PTR [rcx+0x0],ch
   140008eb2:	jp     0x140008eb4
   140008eb4:	(bad)  
   140008eb5:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008eb9:	add    BYTE PTR [rdi+0x0],ch
   140008ebc:	outs   dx,BYTE PTR ds:[rsi]
   140008ebd:	add    BYTE PTR [rax],al
   140008ebf:	add    BYTE PTR [rcx+0x0],ah
   140008ec2:	add    BYTE PTR fs:[rax+rax*1+0x0],ah
   140008ec7:	add    BYTE PTR [rcx+0x0],al
   140008eca:	ins    BYTE PTR es:[rdi],dx
   140008ecb:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140008ecf:	add    BYTE PTR [rdi+0x0],dh
   140008ed2:	add    BYTE PTR [rax],al
   140008ed4:	add    BYTE PTR [rax],al
   140008ed6:	add    BYTE PTR [rax],al
   140008ed8:	(bad)  
   140008ed9:	add    BYTE PTR [rbx+0x0],ah
   140008edc:	movsxd eax,DWORD PTR [rax]
   140008ede:	add    BYTE PTR gs:[rbx+0x0],dh
   140008ee2:	jae    0x140008ee4
   140008ee4:	push   rsp
   140008ee5:	add    BYTE PTR [rcx+0x0],bh
   140008ee8:	jo     0x140008eea
   140008eea:	add    BYTE PTR gs:[rax],al
   140008eed:	add    BYTE PTR [rax],al
   140008eef:	add    BYTE PTR [rbp+0x0],dh
   140008ef2:	jae    0x140008ef4
   140008ef4:	add    BYTE PTR gs:[rdx+0x0],dh
   140008ef8:	jae    0x140008efa
   140008efa:	add    BYTE PTR [rax],al
   140008efc:	add    BYTE PTR [rax],al
   140008efe:	add    BYTE PTR [rax],al
   140008f00:	imul   eax,DWORD PTR [rax],0x730069
   140008f06:	add    BYTE PTR gs:[rax+0x0],bh
   140008f0a:	jo     0x140008f0c
   140008f0c:	jb     0x140008f0e
   140008f0e:	add    BYTE PTR gs:[rbx+0x0],dh
   140008f12:	jae    0x140008f14
   140008f14:	je     0x140008f16
   140008f16:	jb     0x140008f18
   140008f18:	(bad)  
   140008f19:	add    BYTE PTR [rcx+0x0],bh
   140008f1c:	add    BYTE PTR cs:[rbp+0x0],ah
   140008f20:	js     0x140008f22
   140008f22:	add    BYTE PTR gs:[rax],al
   140008f25:	add    BYTE PTR [rax],al
   140008f27:	add    BYTE PTR [rip+0x6400],ah        # 0x14000f32d
   140008f2d:	add    BYTE PTR [rax],al
   140008f2f:	add    BYTE PTR [rip+0x2d006400],ah        # 0x16d00f335
   140008f35:	add    BYTE PTR [rax+rax*1+0x69],ah
   140008f39:	add    BYTE PTR [rcx+0x0],ah
   140008f3c:	add    BYTE PTR [esi+0x0],ch
   140008f40:	outs   dx,DWORD PTR ds:[rsi]
   140008f41:	add    BYTE PTR [rbx+0x0],dh
   140008f44:	add    BYTE PTR gs:[rbp+0x0],al
   140008f48:	jb     0x140008f4a
   140008f4a:	jb     0x140008f4c
   140008f4c:	outs   dx,DWORD PTR ds:[rsi]
   140008f4d:	add    BYTE PTR [rdx+0x0],dh
	...
   140008f58:	outs   dx,DWORD PTR ds:[rsi]
   140008f59:	add    BYTE PTR [rax+0x0],dh
   140008f5c:	add    BYTE PTR gs:[rsi+0x0],ch
	...
   140008f68:	or     al,BYTE PTR [rax]
   140008f6a:	and    eax,0xa007300
   140008f6f:	add    BYTE PTR [rax],al
   140008f71:	add    BYTE PTR [rax],al
   140008f73:	add    BYTE PTR [rcx+0x0],ch
   140008f76:	add    BYTE PTR fs:[rax],al
   140008f79:	add    BYTE PTR [rax],al
   140008f7b:	add    BYTE PTR [rax],al
   140008f7d:	add    BYTE PTR [rax],al
   140008f7f:	add    dh,dh
   140008f81:	(bad)  
   140008f82:	jbe    0x140008f7e
   140008f84:	(bad)  
   140008f85:	jnp    0x140008fbe
   140008f87:	rex.X test al,0xbf
   140008f8a:	in     eax,dx
   140008f8b:	or     dl,al
   140008f8d:	fdivr  QWORD PTR [rbx-0x6d8a8a27]
   140008f93:	out    0xc3,eax
   140008f95:	pop    rsp
   140008f96:	cmp    eax,DWORD PTR [rax-0x7e]
   140008f99:	xor    cl,BYTE PTR cs:[rdx-0x11b46f95]
   140008fa0:	rex.W outs dx,DWORD PTR ds:[rsi]
   140008fa2:	jae    0x140009018
   140008fa4:	(bad)  
   140008fa5:	(bad)  
   140008fa6:	ins    BYTE PTR es:[rdi],dx
   140008fa7:	gs push rdi
   140008fa9:	(bad)
   140008faf:	and    BYTE PTR [rcx+0x6e],ch
   140008fb2:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x617a696c
   140008fba:	je     0x140009025
   140008fbc:	outs   dx,DWORD PTR ds:[rsi]
   140008fbd:	outs   dx,BYTE PTR ds:[rsi]
   140008fbe:	and    BYTE PTR [rsi+0x61],ah
   140008fc1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x49000a2e
   140008fc9:	rex.WB push r11
   140008fcb:	rex.RB js 0x14000903e
   140008fce:	jb     0x140009035
   140008fd0:	jae    0x140009045
   140008fd2:	push   rbx
   140008fd3:	gs jb  0x14000904c
   140008fd6:	gs jb  0x140009013
   140008fd9:	cmp    dl,BYTE PTR [rbx+0x74]
   140008fdc:	(bad)  
   140008fdd:	jb     0x140009053
   140008fdf:	add    BYTE PTR [rcx+0x6e],ch
   140008fe2:	gs je  0x140009058
   140008fe5:	jb     0x14000905d
   140008fe7:	pop    rsp
   140008fe8:	imul   ebp,DWORD PTR [rcx+0x73],0x7369695c
   140008fef:	jb     0x140009056
   140008ff1:	(bad)  
   140008ff2:	jb     0x140009057
   140008ff4:	pop    rsp
   140008ff5:	imul   ebp,DWORD PTR [rcx+0x73],0x73756c70
   140008ffc:	pop    rsp
   140008ffd:	imul   ebp,DWORD PTR [rcx+0x73],0x72707865
   140009004:	gs jae 0x14000907a
   140009007:	pop    rsp
   140009008:	imul   ebp,DWORD PTR [rcx+0x73],0x72707865
   14000900f:	gs jae 0x140009085
   140009012:	jae    0x140009079
   140009014:	jb     0x14000908c
   140009016:	gs jb  0x140009047
   140009019:	movsxd esi,DWORD PTR [rax+0x70]
   14000901c:	add    BYTE PTR [rax],al
   14000901e:	add    BYTE PTR [rax],al
   140009020:	rex.W outs dx,DWORD PTR ds:[rsi]
   140009022:	jae    0x140009098
   140009024:	(bad)  
   140009025:	(bad)  
   140009026:	ins    BYTE PTR es:[rdi],dx
   140009027:	gs push rdi
   140009029:	(bad)
   14000902f:	and    BYTE PTR [rcx+0x63],ah
   140009032:	je     0x14000909d
   140009034:	jbe    0x140009097
   140009036:	je     0x1400090a1
   140009038:	outs   dx,DWORD PTR ds:[rsi]
   140009039:	outs   dx,BYTE PTR ds:[rsi]
   14000903a:	and    BYTE PTR [rsi+0x61],ah
   14000903d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0xa2e
   140009045:	add    BYTE PTR [rax],al
   140009047:	add    BYTE PTR [rax+rax*1+0x52],dl
   14000904b:	add    BYTE PTR [rcx+0x0],al
   14000904e:	rex.XB add BYTE PTR [r13+0x0],al
   140009052:	pop    rdi
   140009053:	add    BYTE PTR [rax+rax*1+0x45],cl
   140009057:	add    BYTE PTR [rsi+0x0],dl
   14000905a:	add    BYTE PTR [r8+rax*1+0x0],r9b
   14000905f:	add    BYTE PTR [rcx+0x0],ch
   140009062:	outs   dx,BYTE PTR ds:[rsi]
   140009063:	add    BYTE PTR [rsi+0x0],ah
   140009066:	outs   dx,DWORD PTR ds:[rsi]
   140009067:	add    BYTE PTR [rax],al
   140009069:	add    BYTE PTR [rax],al
   14000906b:	add    BYTE PTR [rcx+0x0],ch
   14000906e:	add    BYTE PTR [rax],al
   140009070:	ja     0x140009072
   140009072:	(bad)  
   140009073:	add    BYTE PTR [rdx+0x0],dh
   140009076:	outs   dx,BYTE PTR ds:[rsi]
   140009077:	add    BYTE PTR [rax],al
   140009079:	add    BYTE PTR [rax],al
   14000907b:	add    BYTE PTR [rdi+0x0],dh
   14000907e:	add    BYTE PTR [rax],al
   140009080:	add    BYTE PTR gs:[rdx+0x0],dh
   140009084:	jb     0x140009086
   140009086:	outs   dx,DWORD PTR ds:[rsi]
   140009087:	add    BYTE PTR [rdx+0x0],dh
   14000908a:	add    BYTE PTR [rax],al
   14000908c:	add    BYTE PTR gs:[rax],al
   14000908f:	add    BYTE PTR [rsi+0x0],ch
   140009092:	outs   dx,DWORD PTR ds:[rsi]
   140009093:	add    BYTE PTR [rsi+0x0],ch
   140009096:	add    BYTE PTR gs:[rax],al
   140009099:	add    BYTE PTR [rax],al
   14000909b:	add    BYTE PTR [rsi+0x0],ch
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	add    BYTE PTR fs:[rbp+0x0],ah
   1400090a4:	(bad)  
   1400090a5:	add    BYTE PTR [rbp+0x0],dh
   1400090a8:	add    BYTE PTR [eax],al
   1400090ab:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400090af:	add    BYTE PTR [rcx],dh
   1400090b1:	add    BYTE PTR [rax],al
   1400090b3:	add    BYTE PTR [rax],dh
   1400090b5:	add    BYTE PTR [rax],al
   1400090b7:	add    BYTE PTR [rax],bh
   1400090b9:	add    BYTE PTR [rax],dh
   1400090bb:	add    BYTE PTR [rax],bh
   1400090bd:	add    BYTE PTR [rax],dh
	...
   1400090c7:	add    BYTE PTR [rax+rax*1+0x6f],ch
   1400090cb:	add    BYTE PTR [rbx+0x0],ah
   1400090ce:	(bad)  
   1400090cf:	add    BYTE PTR [rax+rax*1+0x68],ch
   1400090d3:	add    BYTE PTR [rdi+0x0],ch
   1400090d6:	jae    0x1400090d8
   1400090d8:	je     0x1400090da
   1400090da:	add    BYTE PTR [rax],al
   1400090dc:	jbe    0x1400090de
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	jbe    0x1400090e2
   1400090e2:	xor    eax,DWORD PTR [rax]
   1400090e4:	add    BYTE PTR cs:[rip+0x0],dh        # 0x1400090eb
   1400090eb:	add    BYTE PTR [rax],al
   1400090ed:	add    BYTE PTR [rax],al
   1400090ef:	add    BYTE PTR [rbx],dh
   1400090f1:	add    BYTE PTR [rsi],ch
   1400090f3:	add    BYTE PTR [rip+0x76000000],dh        # 0x1b60090f9
   1400090f9:	add    BYTE PTR [rbx],dh
   1400090fb:	add    BYTE PTR [rsi],ch
   1400090fd:	add    BYTE PTR [rax],dh
	...
   140009107:	add    BYTE PTR [rbx],dh
   140009109:	add    BYTE PTR [rsi],ch
   14000910b:	add    BYTE PTR [rax],dh
   14000910d:	add    BYTE PTR [rax],al
   14000910f:	add    BYTE PTR [rsi+0x0],dh
   140009112:	xor    al,BYTE PTR [rax]
   140009114:	add    BYTE PTR cs:[rax],dh
	...
   14000911f:	add    BYTE PTR [rsi+0x0],dh
   140009122:	xor    al,0x0
   140009124:	add    BYTE PTR cs:[rax],dh
	...
   14000912f:	add    BYTE PTR [rbx+0x0],al
   140009132:	ins    BYTE PTR es:[rdi],dx
   140009133:	add    BYTE PTR [rcx+0x0],ah
   140009136:	jae    0x140009138
   140009138:	jae    0x14000913a
   14000913a:	imul   eax,DWORD PTR [rax],0x63
   140009140:	rex.WB add BYTE PTR [r14+0x0],bpl
   140009144:	je     0x140009146
   140009146:	add    BYTE PTR gs:[rdi+0x0],ah
   14000914a:	jb     0x14000914c
   14000914c:	(bad)  
   14000914d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009151:	add    BYTE PTR [rax+rax*1+0x0],ah
   140009155:	add    BYTE PTR [rax],al
   140009157:	add    BYTE PTR [rcx+0x0],cl
   14000915a:	rex.WB add BYTE PTR [r11+0x0],dl
   14000915e:	add    BYTE PTR [r8+0x0],r11b
   140009162:	push   rax
   140009163:	add    BYTE PTR [rdx+0x0],dl
   140009166:	add    BYTE PTR [r11+0x0],r10b
   14000916a:	push   rbx
   14000916b:	add    BYTE PTR [rdi+0x0],bl
   14000916e:	push   rbx
   14000916f:	add    BYTE PTR [rcx+0x0],cl
   140009172:	push   rsp
   140009173:	add    BYTE PTR [rbp+0x0],al
   140009176:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   14000917a:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14000917e:	add    BYTE PTR [rax],al
   140009180:	and    BYTE PTR [rbp+riz*2+0x6d],dl
   140009184:	jo     0x1400091a6
   140009186:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140009189:	imul   sp,WORD PTR [rdi+0x75],0x6172
   14000918f:	je     0x1400091fa
   140009191:	outs   dx,DWORD PTR ds:[rsi]
   140009192:	outs   dx,BYTE PTR ds:[rsi]
   140009193:	and    BYTE PTR [rsi+0x69],ah
   140009196:	ins    BYTE PTR es:[rdi],dx
   140009197:	and    BYTE PTR gs:[rbx+0x65],dh
   14000919b:	je     0x140009211
   14000919d:	imul   ebp,DWORD PTR [rsi+0x67],0x72652073
   1400091a4:	jb     0x140009215
   1400091a6:	jb     0x1400091d6
   1400091a8:	or     al,BYTE PTR [rax]
   1400091aa:	add    BYTE PTR [rax],al
   1400091ac:	add    BYTE PTR [rax],al
   1400091ae:	add    BYTE PTR [rax],al
   1400091b0:	rex.WB
   1400091b1:	rex.WB push r11
   1400091b3:	rex.RB pop r8
   1400091b5:	push   rax
   1400091b6:	push   rdx
   1400091b7:	rex.RB push r11
   1400091b9:	push   rbx
   1400091ba:	pop    rdi
   1400091bb:	rex.XB
   1400091bc:	rex.WRXB
   1400091bd:	rex.WRX
   1400091be:	rex.RX
   1400091bf:	rex.WB
   1400091c0:	rex.RXB cmp r15b,BYTE PTR [r10]
   1400091c3:	push   rax
   1400091c4:	jb     0x140009235
   1400091c6:	movsxd esp,DWORD PTR [rbp+0x73]
   1400091c9:	jae    0x14000920e
   1400091cb:	(bad)  
   1400091cc:	jae    0x140009241
   1400091ce:	imul   ebp,DWORD PTR [rsi+0x69],0x65646f4d
   1400091d5:	push   rbx
   1400091d6:	gs je  0x14000924d
   1400091d9:	imul   ebp,DWORD PTR [rsi+0x67],0x73
   1400091e0:	imul   ebp,DWORD PTR [rsi+0x65],0x76727374
   1400091e7:	pop    rsp
   1400091e8:	imul   ebp,DWORD PTR [rcx+0x73],0x7369695c
   1400091ef:	jb     0x140009256
   1400091f1:	(bad)  
   1400091f2:	jb     0x140009257
   1400091f4:	pop    rsp
   1400091f5:	imul   ebp,DWORD PTR [rcx+0x73],0x73756c70
   1400091fc:	pop    rsp
   1400091fd:	imul   ebp,DWORD PTR [rcx+0x73],0x72707865
   140009204:	gs jae 0x14000927a
   140009207:	pop    rsp
   140009208:	imul   ebp,DWORD PTR [rcx+0x73],0x72707865
   14000920f:	gs jae 0x140009285
   140009212:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140009215:	imul   sp,WORD PTR [rdi+0x2e],0x7063
   14000921b:	jo     0x14000921d
	...
   140009225:	add    BYTE PTR [rax],al
   140009227:	add    al,al
   140009229:	add    BYTE PTR [rax],al
   14000922b:	add    BYTE PTR [rax],al
   14000922d:	add    BYTE PTR [rax],al
   14000922f:	rex.RX (bad) 
   140009231:	(bad)  
   140009232:	add    BYTE PTR [rax],al
   140009234:	add    BYTE PTR [rax],al
   140009236:	add    BYTE PTR [rax],al
   140009238:	and    eax,0x2520756c
   14000923d:	push   0x68252173
   140009242:	jae    0x140009264
   140009244:	pop    rbx
   140009245:	and    eax,0x40207368
   14000924a:	and    BYTE PTR [rip+0x3a5d64],ah        # 0x1403aefb4
   140009250:	or     DWORD PTR [rbp+0x72],eax
   140009253:	jb     0x1400092c4
   140009255:	jb     0x14000927f
   140009257:	and    eax,0x203a2978
   14000925c:	add    BYTE PTR [rax],al
   14000925e:	add    BYTE PTR [rax],al
   140009260:	or     al,BYTE PTR [rax]
	...
   14000926e:	add    BYTE PTR [rax],al
   140009270:	(bad)  
	...
   14000927d:	add    BYTE PTR [rax],al
   14000927f:	add    BYTE PTR [rdx],ah
   140009281:	add    eax,0x11993
   140009286:	add    BYTE PTR [rax],al
   140009288:	loopne 0x140009222
	...
   140009292:	add    BYTE PTR [rax],al
   140009294:	add    eax,0xe8000000
   140009299:	cwde   
   14000929a:	add    BYTE PTR [rax],al
   14000929c:	js     0x14000929e
   14000929e:	add    BYTE PTR [rax],al
   1400092a0:	add    BYTE PTR [rax],al
   1400092a2:	add    BYTE PTR [rax],al
   1400092a4:	add    DWORD PTR [rax],eax
   1400092a6:	add    BYTE PTR [rax],al
   1400092a8:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ac41
   1400092ae:	add    BYTE PTR [rax],al
   1400092b0:	jo     0x14000924a
	...
   1400092ba:	add    BYTE PTR [rax],al
   1400092bc:	add    eax,DWORD PTR [rax]
   1400092be:	add    BYTE PTR [rax],al
   1400092c0:	js     0x14000925a
   1400092c2:	add    BYTE PTR [rax],al
   1400092c4:	and    BYTE PTR [rax],al
   1400092c6:	add    BYTE PTR [rax],al
   1400092c8:	add    BYTE PTR [rax],al
   1400092ca:	add    BYTE PTR [rax],al
   1400092cc:	add    DWORD PTR [rax],eax
   1400092ce:	add    BYTE PTR [rax],al
   1400092d0:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ac69
   1400092d6:	add    BYTE PTR [rax],al
   1400092d8:	mov    al,0x99
	...
   1400092e2:	add    BYTE PTR [rax],al
   1400092e4:	add    eax,DWORD PTR [rax]
   1400092e6:	add    BYTE PTR [rax],al
   1400092e8:	mov    eax,0x38000099
   1400092ed:	add    BYTE PTR [rax],al
   1400092ef:	add    BYTE PTR [rax],al
   1400092f1:	add    BYTE PTR [rax],al
   1400092f3:	add    BYTE PTR [rcx],al
   1400092f5:	add    BYTE PTR [rax],al
   1400092f7:	add    BYTE PTR [rdx],ah
   1400092f9:	add    eax,0x31993
   1400092fe:	add    BYTE PTR [rax],al
   140009300:	rex.WR (bad) 
	...
   14000930a:	add    BYTE PTR [rax],al
   14000930c:	(bad)  
   14000930d:	add    BYTE PTR [rax],al
   14000930f:	add    BYTE PTR [rax-0x66],ch
   140009312:	add    BYTE PTR [rax],al
   140009314:	add    QWORD PTR [rax],rax
   140009317:	add    BYTE PTR [rax],al
   140009319:	add    BYTE PTR [rax],al
   14000931b:	add    BYTE PTR [rcx],al
   14000931d:	add    BYTE PTR [rax],al
   14000931f:	add    BYTE PTR [rdx],ah
   140009321:	add    eax,0x11993
   140009326:	add    BYTE PTR [rax],al
   140009328:	jo     0x1400092c2
	...
   140009332:	add    BYTE PTR [rax],al
   140009334:	add    eax,DWORD PTR [rax]
   140009336:	add    BYTE PTR [rax],al
   140009338:	jo     0x1400092d5
   14000933a:	add    BYTE PTR [rax],al
   14000933c:	push   rax
   14000933d:	add    BYTE PTR [rax],al
   14000933f:	add    BYTE PTR [rax],al
   140009341:	add    BYTE PTR [rax],al
   140009343:	add    BYTE PTR [rcx],al
   140009345:	add    BYTE PTR [rax],al
   140009347:	add    BYTE PTR [rdx],ah
   140009349:	add    eax,0x11993
   14000934e:	add    BYTE PTR [rax],al
   140009350:	rcr    BYTE PTR [rax+rax*1+0x0],0x0
   140009358:	add    BYTE PTR [rax],al
   14000935a:	add    BYTE PTR [rax],al
   14000935c:	add    eax,DWORD PTR [rax]
   14000935e:	add    BYTE PTR [rax],al
   140009360:	enter  0x9c,0x0
   140009364:	and    BYTE PTR [rax],al
   140009366:	add    BYTE PTR [rax],al
   140009368:	add    BYTE PTR [rax],al
   14000936a:	add    BYTE PTR [rax],al
   14000936c:	add    DWORD PTR [rax],eax
   14000936e:	add    BYTE PTR [rax],al
   140009370:	and    al,BYTE PTR [rip+0x21993]        # 0x14002ad09
   140009376:	add    BYTE PTR [rax],al
   140009378:	rex pushf 
	...
   140009382:	add    BYTE PTR [rax],al
   140009384:	add    eax,0x50000000
   140009389:	pushf  
   14000938a:	add    BYTE PTR [rax],al
   14000938c:	and    BYTE PTR [rax],al
   14000938e:	add    BYTE PTR [rax],al
   140009390:	add    BYTE PTR [rax],al
   140009392:	add    BYTE PTR [rax],al
   140009394:	add    DWORD PTR [rax],eax
	...
   1400093a2:	add    BYTE PTR [rax],al
   1400093a4:	out    0xb9,al
   1400093a6:	rex.WRXB push r15
   1400093a8:	add    BYTE PTR [rax],al
   1400093aa:	add    BYTE PTR [rax],al
   1400093ac:	add    al,BYTE PTR [rax]
   1400093ae:	add    BYTE PTR [rax],al
   1400093b0:	(bad)  
   1400093b1:	add    BYTE PTR [rax],al
   1400093b3:	add    BYTE PTR [rbp+rdx*4+0x0],bh
   1400093b7:	add    BYTE PTR [rdi+rax*4+0x0],bh
   1400093bb:	add    BYTE PTR [rax],al
   1400093bd:	add    BYTE PTR [rax],al
   1400093bf:	add    dh,ah
   1400093c1:	mov    ecx,0x574f
   1400093c6:	add    BYTE PTR [rax],al
   1400093c8:	or     eax,0x6c000000
   1400093cd:	add    al,BYTE PTR [rax]
   1400093cf:	add    al,dh
   1400093d1:	xchg   ebp,eax
   1400093d2:	add    BYTE PTR [rax],al
   1400093d4:	lock xchg DWORD PTR [rax],eax
   1400093d7:	add    BYTE PTR [rax],ah
   1400093d9:	xchg   esp,eax
   1400093da:	add    BYTE PTR [rax],al
   1400093dc:	xchg   rsp,rax
   1400093de:	add    BYTE PTR [rax],al
   1400093e0:	jo     0x140009376
	...
   1400093f6:	add    BYTE PTR [rax],al
   1400093f8:	xchg   rsp,rax
   1400093fa:	add    BYTE PTR [rax],al
   1400093fc:	jo     0x140009392
	...
   14000940e:	add    BYTE PTR [rax],al
   140009410:	jo     0x1400093a6
	...
   14000941e:	add    BYTE PTR [rax],al
   140009420:	shl    BYTE PTR [rdx+0x20000],0x0
   140009427:	add    BYTE PTR [rax],al
   140009429:	add    BYTE PTR [rax],al
   14000942b:	add    bh,bh
   14000942d:	(bad)  
   14000942e:	(bad)  
   14000942f:	inc    DWORD PTR [rax]
   140009431:	add    BYTE PTR [rax],al
   140009433:	add    BYTE PTR [rax+0x0],al
   140009436:	add    BYTE PTR [rax],al
   140009438:	cwde   
   140009439:	xchg   esp,eax
	...
   140009446:	add    BYTE PTR [rax],al
   140009448:	lock mov dl,0x0
   14000944b:	add    BYTE PTR [rcx],al
   14000944d:	add    BYTE PTR [rax],al
   14000944f:	add    BYTE PTR [rax],al
   140009451:	add    BYTE PTR [rax],al
   140009453:	add    bh,bh
   140009455:	(bad)  
   140009456:	(bad)  
   140009457:	inc    DWORD PTR [rax]
   140009459:	add    BYTE PTR [rax],al
   14000945b:	add    BYTE PTR [rax+0x0],al
   14000945e:	add    BYTE PTR [rax],al
   140009460:	mov    al,0x94
	...
   14000946e:	add    BYTE PTR [rax],al
   140009470:	and    BYTE PTR [rbx+0x0],dh
   140009476:	add    BYTE PTR [rax],al
   140009478:	add    BYTE PTR [rax],al
   14000947a:	add    BYTE PTR [rax],al
   14000947c:	(bad)  
   14000947d:	(bad)  
   14000947e:	(bad)  
   14000947f:	inc    DWORD PTR [rax]
   140009481:	add    BYTE PTR [rax],al
   140009483:	add    BYTE PTR [rax+0x0],al
   140009486:	add    BYTE PTR [rax],al
   140009488:	enter  0x94,0x0
	...
   1400094a0:	add    eax,DWORD PTR [rax]
   1400094a2:	add    BYTE PTR [rax],al
   1400094a4:	fcom   DWORD PTR [rbx+0x0]
	...
   1400094b6:	add    BYTE PTR [rax],al
   1400094b8:	add    al,BYTE PTR [rax]
   1400094ba:	add    BYTE PTR [rax],al
   1400094bc:	clc    
   1400094bd:	xchg   ebx,eax
	...
   1400094ce:	add    BYTE PTR [rax],al
   1400094d0:	add    DWORD PTR [rax],eax
   1400094d2:	add    BYTE PTR [rax],al
   1400094d4:	adc    BYTE PTR [rax+rax*1+0x0],dl
   1400094db:	add    BYTE PTR [rax],al
   1400094dd:	add    BYTE PTR [rax],al
   1400094df:	add    BYTE PTR [rcx],al
	...
   1400094e9:	add    BYTE PTR [rax],al
   1400094eb:	add    al,al
   1400094ed:	mov    dl,0x0
   1400094ef:	add    BYTE PTR [rax-0x1fffff6c],bl
   1400094f5:	xchg   esp,eax
	...
   140009506:	add    BYTE PTR [rax],al
   140009508:	sbb    BYTE PTR [rbp+0x0],dl
	...
   140009516:	add    BYTE PTR [rax],al
   140009518:	mov    bl,0x0
	...
   140009523:	add    bh,bh
   140009525:	(bad)  
   140009526:	(bad)  
   140009527:	inc    DWORD PTR [rax]
   140009529:	add    BYTE PTR [rax],al
   14000952b:	add    BYTE PTR [rax+0x0],al
   14000952e:	add    BYTE PTR [rax],al
   140009530:	rex xchg ebp,eax
	...
   140009546:	add    BYTE PTR [rax],al
   140009548:	add    DWORD PTR [rax],eax
   14000954a:	add    BYTE PTR [rax],al
   14000954c:	or     BYTE PTR [rbp+0x0],dl
   140009552:	add    BYTE PTR [rax],al
   140009554:	add    BYTE PTR [rax],al
   140009556:	add    BYTE PTR [rax],al
   140009558:	add    DWORD PTR [rax],eax
	...
   140009562:	add    BYTE PTR [rax],al
   140009564:	mov    bl,0x0
   140009567:	add    BYTE PTR [rax-0x6b],al
   14000956a:	add    BYTE PTR [rax],al
   14000956c:	pop    rax
   14000956d:	xchg   ebp,eax
	...
   14000957a:	add    BYTE PTR [rax],al
   14000957c:	push   rdx
   14000957d:	push   rbx
   14000957e:	rex.R push rbx
   140009580:	xchg   BYTE PTR [rsi-0x64a70e36],bl
   140009586:	int3   
   140009587:	rex.WXB mov r10b,0x5d
   14000958a:	int3   
   14000958b:	or     DWORD PTR [rsi-0x54],edx
   14000958e:	xor    eax,0x1d3
   140009593:	add    BYTE PTR [rcx+0x69],ch
   140009596:	jae    0x1400095fd
   140009598:	js     0x14000960a
   14000959a:	jb     0x140009601
   14000959c:	jae    0x140009611
   14000959e:	cs jo  0x140009605
   1400095a1:	(bad)  
	...
   1400095ee:	add    BYTE PTR [rax],al
   1400095f0:	rex.RXB
   1400095f1:	rex.XB push r12
   1400095f3:	rex.WR add BYTE PTR [rax],r10b
   1400095f6:	add    BYTE PTR [rax],al
   1400095f8:	adc    BYTE PTR [rax],al
   1400095fa:	add    BYTE PTR [rax],al
   1400095fc:	cs je  0x140009664
   1400095ff:	js     0x140009675
   140009601:	and    al,0x64
   140009603:	imul   eax,DWORD PTR [rax],0x10000000
   140009609:	adc    BYTE PTR [rax],al
   14000960b:	add    BYTE PTR [rax],dl
   14000960d:	ins    BYTE PTR es:[rdi],dx
   14000960e:	add    BYTE PTR [rax],al
   140009610:	cs je  0x140009678
   140009613:	js     0x140009689
   140009615:	and    al,0x6d
   140009617:	outs   dx,BYTE PTR ds:[rsi]
   140009618:	add    BYTE PTR [rax],al
   14000961a:	add    BYTE PTR [rax],al
   14000961c:	and    BYTE PTR [rax+rax*1+0x0],bh
   140009620:	and    BYTE PTR [rax],al
   140009622:	add    BYTE PTR [rax],al
   140009624:	cs je  0x14000968c
   140009627:	js     0x14000969d
   140009629:	and    al,0x6d
   14000962b:	outs   dx,BYTE PTR ds:[rsi]
   14000962c:	and    al,0x30
   14000962e:	xor    BYTE PTR [rax],al
   140009630:	rex jl 0x140009633
   140009633:	add    BYTE PTR [rax+0x2e000001],al
   140009639:	je     0x1400096a0
   14000963b:	js     0x1400096b1
   14000963d:	and    al,0x78
   14000963f:	add    al,al
   140009641:	jge    0x140009643
   140009643:	add    BYTE PTR [rax+rax*1],ch
   140009646:	add    BYTE PTR [rax],al
   140009648:	cs je  0x1400096b0
   14000964b:	js     0x1400096c1
   14000964d:	and    al,0x79
   14000964f:	add    BYTE PTR fs:[rax],al
   140009652:	add    BYTE PTR [rax],al
   140009654:	add    BYTE PTR [rax+0x1200000],al
   14000965a:	add    BYTE PTR [rax],al
   14000965c:	cs jb  0x1400096c3
   14000965f:	(bad)  
   140009660:	je     0x1400096c3
   140009662:	and    al,0x62
   140009664:	jb     0x1400096c9
   140009666:	add    BYTE PTR [rax],al
   140009668:	and    BYTE PTR [rcx+0x4780000],al
   14000966e:	add    BYTE PTR [rax],al
   140009670:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140009679:	add    BYTE PTR [rax],al
   14000967b:	add    BYTE PTR [rax+0x10000085],bl
   140009681:	add    BYTE PTR [rax],al
   140009683:	add    BYTE PTR [rsi],ch
   140009685:	xor    BYTE PTR [rax],dh
   140009687:	movsxd esp,DWORD PTR [rsi+0x67]
   14000968a:	add    BYTE PTR [rax],al
   14000968c:	test   al,0x85
   14000968e:	add    BYTE PTR [rax],al
   140009690:	or     BYTE PTR [rax],al
   140009692:	add    BYTE PTR [rax],al
   140009694:	cs rex.XB push r10
   140009697:	push   rsp
   140009698:	and    al,0x58
   14000969a:	rex.XB
   14000969b:	add    BYTE PTR [r8],al
   14000969e:	add    BYTE PTR [rax],al
   1400096a0:	mov    al,0x85
   1400096a2:	add    BYTE PTR [rax],al
   1400096a4:	or     BYTE PTR [rax],al
   1400096a6:	add    BYTE PTR [rax],al
   1400096a8:	cs rex.XB push r10
   1400096ab:	push   rsp
   1400096ac:	and    al,0x58
   1400096ae:	rex.XB
   1400096af:	rex.B
   1400096b0:	add    BYTE PTR [r8],al
   1400096b3:	add    BYTE PTR [rax+0x8000085],bh
   1400096b9:	add    BYTE PTR [rax],al
   1400096bb:	add    BYTE PTR [rsi],ch
   1400096bd:	rex.XB push r10
   1400096bf:	push   rsp
   1400096c0:	and    al,0x58
   1400096c2:	rex.XB push r13
   1400096c4:	add    BYTE PTR [rax],al
   1400096c6:	add    BYTE PTR [rax],al
   1400096c8:	rol    BYTE PTR [rbp+0x80000],0x0
   1400096cf:	add    BYTE PTR [rsi],ch
   1400096d1:	rex.XB push r10
   1400096d3:	push   rsp
   1400096d4:	and    al,0x58
   1400096d6:	rex.XB pop r10
   1400096d8:	add    BYTE PTR [rax],al
   1400096da:	add    BYTE PTR [rax],al
   1400096dc:	enter  0x85,0x0
   1400096e0:	or     BYTE PTR [rax],al
   1400096e2:	add    BYTE PTR [rax],al
   1400096e4:	cs rex.XB push r10
   1400096e7:	push   rsp
   1400096e8:	and    al,0x58
   1400096ea:	rex.WB
   1400096eb:	add    BYTE PTR [r8],al
   1400096ee:	add    BYTE PTR [rax],al
   1400096f0:	rol    BYTE PTR [rbp+0x80000],1
   1400096f6:	add    BYTE PTR [rax],al
   1400096f8:	cs rex.XB push r10
   1400096fb:	push   rsp
   1400096fc:	and    al,0x58
   1400096fe:	rex.WB
   1400096ff:	rex.B
   140009700:	add    BYTE PTR [r8],al
   140009703:	add    al,bl
   140009705:	test   DWORD PTR [rax],eax
   140009707:	add    BYTE PTR [rax],cl
   140009709:	add    BYTE PTR [rax],al
   14000970b:	add    BYTE PTR [rsi],ch
   14000970d:	rex.XB push r10
   14000970f:	push   rsp
   140009710:	and    al,0x58
   140009712:	rex.WB pop r9
   140009714:	add    BYTE PTR [rax],al
   140009716:	add    BYTE PTR [rax],al
   140009718:	loopne 0x14000969f
   14000971a:	add    BYTE PTR [rax],al
   14000971c:	or     BYTE PTR [rax],al
   14000971e:	add    BYTE PTR [rax],al
   140009720:	cs rex.XB push r10
   140009723:	push   rsp
   140009724:	and    al,0x58
   140009726:	rex.WB pop r10
   140009728:	add    BYTE PTR [rax],al
   14000972a:	add    BYTE PTR [rax],al
   14000972c:	call   0x1980097b6
   140009731:	add    BYTE PTR [rax],al
   140009733:	add    BYTE PTR [rsi],ch
   140009735:	movsxd esp,DWORD PTR [rsi+0x67]
   140009738:	jne    0x14000979b
   14000973a:	jb     0x1400097a0
   14000973c:	add    BYTE PTR [rax],al
   14000973e:	add    BYTE PTR [rax],al
   140009740:	xchg   BYTE PTR [rax],al
   140009743:	add    BYTE PTR [rax+0x2e00000d],bl
   140009749:	jb     0x1400097af
   14000974b:	(bad)  
   14000974c:	je     0x1400097af
   14000974e:	add    BYTE PTR [rax],al
   140009750:	fcom   DWORD PTR [rbx+0x1a40000]
   140009756:	add    BYTE PTR [rax],al
   140009758:	cs jb  0x1400097bf
   14000975b:	(bad)  
   14000975c:	je     0x1400097bf
   14000975e:	and    al,0x72
   140009760:	add    BYTE PTR [rax],al
   140009762:	add    BYTE PTR [rax],al
   140009764:	jl     0x1400096fb
   140009766:	add    BYTE PTR [rax],al
   140009768:	in     al,0x2
   14000976a:	add    BYTE PTR [rax],al
   14000976c:	cs jb  0x1400097d3
   14000976f:	(bad)  
   140009770:	je     0x1400097d3
   140009772:	and    al,0x7a
   140009774:	jp     0x1400097f0
   140009776:	fs (bad) 
   140009778:	add    BYTE PTR [eax],al
   14000977b:	add    BYTE PTR [rax-0x68],ah
   14000977e:	add    BYTE PTR [rax],al
   140009780:	fs (bad) 
   140009782:	add    BYTE PTR [rax],al
   140009784:	cs js  0x1400097eb
   140009787:	(bad)  
   140009788:	je     0x1400097eb
   14000978a:	add    BYTE PTR [rax],al
   14000978c:	(bad)  
   14000978d:	sahf   
   14000978e:	add    BYTE PTR [rax],al
   140009790:	fadd   QWORD PTR [rax]
   140009792:	add    BYTE PTR [rax],al
   140009794:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   14000979d:	add    BYTE PTR [rax],al
   14000979f:	add    BYTE PTR [rax+0x1800009f],ah
   1400097a5:	add    BYTE PTR [rax],al
   1400097a7:	add    BYTE PTR [rsi],ch
   1400097a9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x332461
   1400097b1:	add    BYTE PTR [rax],al
   1400097b3:	add    BYTE PTR [rax+0x7800009f],bh
   1400097b9:	add    al,0x0
   1400097bb:	add    BYTE PTR [rsi],ch
   1400097bd:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   1400097c5:	add    BYTE PTR [rax],al
   1400097c7:	add    BYTE PTR [rax],dh
   1400097c9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400097ca:	add    BYTE PTR [rax],al
   1400097cc:	rex.X or DWORD PTR [rax],eax
   1400097cf:	add    BYTE PTR [rsi],ch
   1400097d1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   1400097d9:	add    BYTE PTR [rax],al
   1400097db:	add    BYTE PTR [rax],al
   1400097dd:	mov    al,0x0
   1400097df:	add    al,al
   1400097e1:	add    al,BYTE PTR [rax]
   1400097e3:	add    BYTE PTR [rsi],ch
   1400097e5:	fs (bad) 
   1400097e7:	je     0x14000984a
   1400097e9:	and    al,0x62
   1400097eb:	jb     0x140009850
   1400097ed:	add    BYTE PTR [rax],al
   1400097ef:	add    al,al
   1400097f1:	mov    dl,0x0
   1400097f3:	add    BYTE PTR [rax+0x2e000000],dh
   1400097f9:	fs (bad) 
   1400097fb:	je     0x14000985e
   1400097fd:	and    al,0x72
   1400097ff:	and    al,0x62
   140009801:	jb     0x140009866
   140009803:	add    BYTE PTR [rax-0x4d],dh
   140009806:	add    BYTE PTR [rax],al
   140009808:	and    BYTE PTR [rax],al
   14000980a:	add    BYTE PTR [rax],al
   14000980c:	cs fs (bad) 
   14000980f:	je     0x140009872
   140009811:	add    BYTE PTR [rax],al
   140009813:	add    BYTE PTR [rax+0x200000b3],dl
   140009819:	(bad)  
   14000981a:	add    BYTE PTR [rax],al
   14000981c:	cs (bad) 
   14000981f:	jae    0x140009821
   140009821:	add    BYTE PTR [rax],al
   140009823:	add    BYTE PTR [rax],al
   140009825:	rol    BYTE PTR [rax],0x0
   140009828:	int3   
   140009829:	add    eax,DWORD PTR [rax]
   14000982b:	add    BYTE PTR [rsi],ch
   14000982d:	jo     0x140009893
   14000982f:	(bad)  
   140009830:	je     0x140009893
   140009832:	add    BYTE PTR [rax],al
   140009834:	add    al,dl
   140009836:	add    BYTE PTR [rax],al
   140009838:	movabs al,ds:0x637273722e000003
   140009841:	and    al,0x30
   140009843:	xor    DWORD PTR [rax],eax
   140009845:	add    BYTE PTR [rax],al
   140009847:	add    BYTE PTR [rax+0x100000d3],ah
   14000984d:	mov    ch,0x1
   14000984f:	add    BYTE PTR [rsi],ch
   140009851:	jb     0x1400098c6
   140009853:	jb     0x1400098b8
   140009855:	and    al,0x30
   140009857:	xor    al,BYTE PTR [rax]
   140009859:	add    BYTE PTR [rax],al
   14000985b:	add    BYTE PTR [rax],al
   14000985d:	add    BYTE PTR [rax],al
   14000985f:	add    BYTE PTR [rcx],dl
   140009861:	or     eax,0x62040001
   140009866:	add    BYTE PTR [rax],al
   140009868:	fdivr  DWORD PTR [rdx+0x0]
   14000986b:	add    BYTE PTR [rax-0xffff6e],ch
   140009871:	(bad)  
   140009872:	(bad)  
   140009873:	inc    DWORD PTR [rsi+0x7c]
   140009876:	add    BYTE PTR [rax],al
   140009878:	sbb    BYTE PTR [rax],dl
   14000987a:	add    BYTE PTR [rax],al
   14000987c:	(bad)  
   14000987d:	(bad)  
   14000987e:	(bad)  
   14000987f:	jmp    FWORD PTR [rbx]
   140009881:	adc    BYTE PTR [rax],al
   140009883:	add    BYTE PTR [rax],al
   140009885:	add    BYTE PTR [rax],al
   140009887:	add    BYTE PTR [rdi+0x10],ch
   14000988a:	add    BYTE PTR [rax],al
   14000988c:	(bad)  
   14000988d:	(bad)  
   14000988e:	(bad)  
   14000988f:	call   FWORD PTR [rcx]
   140009891:	sub    DWORD PTR [rcx],ecx
   140009893:	add    BYTE PTR [rbx],bl
   140009895:	je     0x1400098bb
   140009897:	add    BYTE PTR [rbx],bl
   140009899:	and    eax,DWORD PTR fs:[rax]
   14000989c:	sbb    esi,DWORD PTR [rdx+riz*1]
   14000989f:	add    BYTE PTR [rbx],bl
   1400098a1:	add    DWORD PTR [rax],esp
   1400098a3:	add    BYTE PTR [rax],dl
   1400098a5:	push   rax
   1400098a6:	add    BYTE PTR [rax],al
   1400098a8:	in     al,0x7a
   1400098aa:	add    BYTE PTR [rax],al
   1400098ac:	clc    
   1400098ad:	add    BYTE PTR [rax],al
   1400098af:	add    BYTE PTR [rcx],al
   1400098b1:	add    al,0x1
   1400098b3:	add    BYTE PTR [rdx+rax*2],al
   1400098b6:	add    BYTE PTR [rax],al
   1400098b8:	sbb    DWORD PTR [rbx+rcx*1],edi
   1400098bb:	add    BYTE PTR [rbx],ch
   1400098bd:	je     0x140009928
   1400098bf:	add    BYTE PTR [rdi],ah
   1400098c1:	fs push 0x66342300
   1400098c7:	add    BYTE PTR [rsi],dl
   1400098c9:	add    DWORD PTR [rdx+0x0],esp
   1400098cc:	or     al,dh
   1400098ce:	(bad)  
   1400098cf:	loopne 0x1400098d5
   1400098d1:	push   rax
   1400098d2:	add    BYTE PTR [rax],al
   1400098d4:	ins    BYTE PTR es:[rdi],dx
   1400098d5:	jnp    0x1400098d7
   1400098d7:	add    BYTE PTR [rax+0x2000092],al
   1400098dd:	add    eax,DWORD PTR [rax]
   1400098df:	add    bh,bh
   1400098e1:	(bad)  
   1400098e2:	(bad)  
   1400098e3:	call   FWORD PTR [rax+0x7c]
   1400098e6:	add    BYTE PTR [rax],al
   1400098e8:	mov    al,0x12
   1400098ea:	add    BYTE PTR [rax],al
   1400098ec:	(bad)  
   1400098ed:	(bad)  
   1400098ee:	(bad)  
   1400098ef:	(bad)  
   1400098f0:	clc    
   1400098f1:	adc    al,BYTE PTR [rax]
   1400098f3:	add    BYTE PTR [rax],al
   1400098f5:	add    BYTE PTR [rax],al
   1400098f7:	add    BYTE PTR [rsi],dl
   1400098f9:	adc    eax,DWORD PTR [rax]
   1400098fb:	add    bh,bh
   1400098fd:	(bad)  
   1400098fe:	(bad)  
   1400098ff:	call   FWORD PTR [rbx]
   140009901:	adc    eax,DWORD PTR [rax]
   140009903:	add    BYTE PTR [rax],al
   140009905:	add    BYTE PTR [rax],al
   140009907:	add    BYTE PTR [rdx+0x14],ch
   14000990a:	add    BYTE PTR [rax],al
   14000990c:	(bad)  
   14000990d:	(bad)  
   14000990e:	(bad)  
   14000990f:	inc    DWORD PTR [rcx]
   140009911:	sbb    al,0xb
   140009913:	add    BYTE PTR [rsp+rsi*1],bl
   140009916:	sbb    al,0x0
   140009918:	sbb    al,0x1
   14000991a:	adc    al,0x0
   14000991c:	adc    al,dh
   14000991e:	(bad)  
   14000991f:	loopne 0x14000992d
   140009921:	ror    BYTE PTR [rdx],1
   140009923:	ror    BYTE PTR [rax],0x70
   140009926:	(bad)  
   140009927:	(bad)  
   140009928:	(bad)  
   140009929:	push   rax
   14000992a:	add    BYTE PTR [rax],al
   14000992c:	add    DWORD PTR [rbx],edx
   14000992e:	add    DWORD PTR [rax],eax
   140009930:	adc    eax,DWORD PTR [rdx+0x0]
   140009933:	add    BYTE PTR [rcx],al
   140009935:	sbb    DWORD PTR [rdx],ecx
   140009937:	add    BYTE PTR [rcx],bl
   140009939:	je     0x140009944
   14000993b:	add    BYTE PTR [rcx],bl
   14000993d:	or     BYTE PTR fs:[rax],al
   140009940:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140009944:	sbb    DWORD PTR [rsi+rax*1],esi
   140009947:	add    BYTE PTR [rcx],bl
   140009949:	xor    dl,BYTE PTR [rip+0xc1d01e0]        # 0x14c1d9b2f
   14000994f:	add    BYTE PTR [rip+0x1d000b74],bl        # 0x15d00a4c9
   140009955:	or     al,BYTE PTR fs:[rax]
   140009958:	sbb    eax,0x1d000954
   14000995d:	xor    al,0x8
   14000995f:	add    BYTE PTR [rip+0x17f01932],bl        # 0x157f0b297
   140009965:	loopne 0x14000997c
   140009967:	rol    BYTE PTR [rcx],0xa
   14000996a:	add    al,0x0
   14000996c:	or     dh,BYTE PTR [rsi+rax*1]
   14000996f:	add    BYTE PTR [rdx],cl
   140009971:	xor    al,BYTE PTR [rsi]
   140009973:	jo     0x14000998e
   140009975:	and    al,0x7
   140009977:	add    BYTE PTR [rdx],dl
   140009979:	rex.WRX add BYTE PTR fs:[rdx],r10b
   14000997d:	xor    al,0x4d
   14000997f:	add    BYTE PTR [rdx],dl
   140009981:	add    DWORD PTR [rdx+0x0],ecx
   140009984:	or     esi,DWORD PTR [rax+0x0]
   140009987:	add    ah,ah
   140009989:	jp     0x14000998b
   14000998b:	add    BYTE PTR [rax+0x2],al
   14000998e:	add    BYTE PTR [rax],al
   140009990:	adc    DWORD PTR [rcx],ebp
   140009992:	or     DWORD PTR [rax],eax
   140009994:	and    DWORD PTR [rdx-0x1fe70fe6],eax
   14000999a:	(bad)  
   14000999b:	rcl    BYTE PTR [rax+rax*8],1
   14000999e:	adc    dh,BYTE PTR [rax+0x11]
   1400099a1:	(bad)  
   1400099a2:	adc    BYTE PTR [rax],dh
   1400099a4:	(bad)  
   1400099a6:	add    BYTE PTR [rax],al
   1400099a8:	fdivr  DWORD PTR [rdx+0x0]
   1400099ab:	add    al,dl
   1400099ad:	xchg   edx,eax
   1400099ae:	add    BYTE PTR [rax],al
   1400099b0:	(bad)  
   1400099b1:	(bad)  
   1400099b2:	(bad)  
   1400099b3:	jmp    FWORD PTR [rdx+0x7c]
   1400099b6:	add    BYTE PTR [rax],al
   1400099b8:	(bad)  
   1400099b9:	(bad)  
   1400099ba:	add    BYTE PTR [rax],al
   1400099bc:	(bad)  
   1400099bd:	(bad)  
   1400099be:	(bad)  
   1400099bf:	call   FWORD PTR [rax+0x1e]
   1400099c5:	add    BYTE PTR [rax],al
   1400099c7:	add    BYTE PTR [rsi+0x21],bh
   1400099ca:	add    BYTE PTR [rax],al
   1400099cc:	(bad)  
   1400099cd:	(bad)  
   1400099ce:	(bad)  
   1400099cf:	inc    DWORD PTR [rcx]
   1400099d1:	(bad)  
   1400099d2:	add    al,BYTE PTR [rax]
   1400099d4:	(bad)  
   1400099d5:	xor    al,BYTE PTR [rdx]
   1400099d7:	xor    BYTE PTR [rcx],al
   1400099d9:	clts   
   1400099db:	add    BYTE PTR [rdi],cl
   1400099dd:	fs (bad) 
   1400099df:	add    BYTE PTR [rdi],cl
   1400099e1:	xor    al,0x6
   1400099e3:	add    BYTE PTR [rdi],cl
   1400099e5:	xor    cl,BYTE PTR [rbx]
   1400099e7:	jo     0x1400099ea
   1400099e9:	or     al,BYTE PTR [rax+rax*1]
   1400099ec:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   1400099f0:	add    eax,0x1000134
   1400099f5:	adc    eax,0x64150008
   1400099fa:	adc    DWORD PTR [rax],eax
   1400099fc:	adc    eax,0x15001034
   140009a01:	mov    dl,0xe
   140009a03:	loopne 0x140009a11
   140009a05:	jo     0x140009a12
   140009a07:	push   rax
   140009a08:	add    DWORD PTR [rbx],ebx
   140009a0a:	or     al,BYTE PTR [rax]
   140009a0c:	sbb    esp,esp
   140009a0e:	adc    DWORD PTR [rax],eax
   140009a10:	sbb    esi,DWORD PTR [rax+rdx*1+0x0]
   140009a14:	sbb    esp,DWORD PTR [rdi+rcx*1+0x0]
   140009a18:	sbb    esi,DWORD PTR [rsi+rcx*1]
   140009a1b:	add    BYTE PTR [rbx],bl
   140009a1d:	mov    dl,0x14
   140009a1f:	push   rax
   140009a20:	sbb    DWORD PTR [rdi],edi
   140009a22:	or     eax,0x57742e00
   140009a27:	add    BYTE PTR [rdx],ch
   140009a29:	fs push rsi
   140009a2b:	add    BYTE PTR [rsi],ah
   140009a2d:	xor    al,0x55
   140009a2f:	add    BYTE PTR [rdx],bl
   140009a31:	add    DWORD PTR [rsi+0x0],ecx
   140009a34:	or     al,0xf0
   140009a36:	or     ah,al
   140009a38:	or     al,dl
   140009a3a:	(bad)  
   140009a3b:	rol    BYTE PTR [rax+rdx*2],0x0
   140009a3f:	add    BYTE PTR [rbx+rdi*2+0x0],ch
   140009a43:	add    al,bh
   140009a45:	xchg   edx,eax
   140009a46:	add    BYTE PTR [rax],al
   140009a48:	(bad)  
   140009a4a:	add    BYTE PTR [rax],al
   140009a4c:	(bad)  
   140009a4d:	(bad)  
   140009a4e:	(bad)  
   140009a4f:	(bad)  
   140009a50:	jl     0x140009ace
   140009a52:	add    BYTE PTR [rax],al
   140009a54:	add    BYTE PTR [rax],al
   140009a56:	add    BYTE PTR [rax],al
   140009a58:	mov    BYTE PTR [rax+rax*1+0x0],bh
   140009a5c:	add    DWORD PTR [rax],eax
   140009a5e:	add    BYTE PTR [rax],al
   140009a60:	xchg   esp,eax
   140009a61:	jl     0x140009a63
   140009a63:	add    BYTE PTR [rax],al
   140009a65:	add    BYTE PTR [rax],al
   140009a67:	add    BYTE PTR [rax],ch
   140009a69:	add    BYTE PTR es:[rax],al
   140009a6c:	(bad)  
   140009a6d:	(bad)  
   140009a6e:	(bad)  
   140009a6f:	push   QWORD PTR [rax+0x26]
   140009a75:	add    BYTE PTR [rax],al
   140009a77:	add    BYTE PTR [rsi+0x1000026],dh
   140009a7d:	add    BYTE PTR [rax],al
   140009a7f:	add    BYTE PTR [rsi+0x31],al
   140009a82:	add    BYTE PTR [rax],al
   140009a84:	add    al,BYTE PTR [rax]
   140009a86:	add    BYTE PTR [rax],al
   140009a88:	mov    ah,0x31
   140009a8a:	add    BYTE PTR [rax],al
   140009a8c:	add    DWORD PTR [rax],eax
   140009a8e:	add    BYTE PTR [rax],al
   140009a90:	sub    DWORD PTR [rax+rax*1],esi
   140009a93:	add    BYTE PTR [rax],al
   140009a95:	add    BYTE PTR [rax],al
   140009a97:	add    BYTE PTR [rbx+0x34],al
   140009a9a:	add    BYTE PTR [rax],al
   140009a9c:	(bad)  
   140009a9d:	(bad)  
   140009a9e:	(bad)  
   140009a9f:	call   FWORD PTR [rcx]
   140009aa1:	and    DWORD PTR [rax],ecx
   140009aa3:	add    BYTE PTR [rdx],dl
   140009aa5:	push   rsp
   140009aa6:	adc    eax,DWORD PTR [rax]
   140009aa8:	adc    dh,BYTE PTR [rdx+rdx*1]
   140009aab:	add    BYTE PTR [rdx],dl
   140009aad:	mov    dl,0xe
   140009aaf:	loopne 0x140009abd
   140009ab1:	jo     0x140009abe
   140009ab3:	(bad)  
   140009ab4:	in     al,0x7a
   140009ab6:	add    BYTE PTR [rax],al
   140009ab8:	push   rax
   140009ab9:	add    BYTE PTR [rax],al
   140009abb:	add    BYTE PTR [rcx],al
   140009abd:	sbb    al,0xb
   140009abf:	add    BYTE PTR [rsp+rsi*1],bl
   140009ac2:	sbb    al,BYTE PTR [rax]
   140009ac4:	sbb    al,0x1
   140009ac6:	adc    al,BYTE PTR [rax]
   140009ac8:	adc    al,dh
   140009aca:	(bad)  
   140009acb:	loopne 0x140009ad9
   140009acd:	ror    BYTE PTR [rdx],1
   140009acf:	ror    BYTE PTR [rax],0x70
   140009ad2:	(bad)  
   140009ad3:	(bad)  
   140009ad4:	(bad)  
   140009ad5:	push   rax
   140009ad6:	add    BYTE PTR [rax],al
   140009ad8:	add    DWORD PTR [rdx+rcx*1],ebx
   140009adb:	add    BYTE PTR [rsp+riz*2],bl
   140009ade:	(bad)  
   140009adf:	add    BYTE PTR [rsp+rsi*1],bl
   140009ae2:	(bad)  
   140009ae3:	add    BYTE PTR [rdx+rsi*8],bl
   140009ae6:	adc    dh,al
   140009ae8:	adc    al,ah
   140009aea:	(bad)  
   140009aeb:	ror    BYTE PTR [rax+rsi*2],0xb
   140009aef:	push   rax
   140009af0:	sbb    DWORD PTR [rdi],esi
   140009af2:	or     eax,0x57742600
   140009af7:	add    BYTE PTR [rsi],ah
   140009af9:	fs push rsi
   140009afb:	add    BYTE PTR [rsi],ah
   140009afd:	xor    al,0x55
   140009aff:	add    BYTE PTR [rsi],ah
   140009b01:	add    DWORD PTR [rsi+0x0],ecx
   140009b04:	sbb    al,dh
   140009b06:	(bad)  
   140009b07:	loopne 0x140009b1d
   140009b09:	rcl    BYTE PTR [rdx],1
   140009b0b:	rcl    BYTE PTR [rax],0x50
   140009b0e:	add    BYTE PTR [rax],al
   140009b10:	in     al,0x7a
   140009b12:	add    BYTE PTR [rax],al
   140009b14:	(bad)  
   140009b15:	add    al,BYTE PTR [rax]
   140009b17:	add    BYTE PTR [rcx],al
   140009b19:	(bad)  
   140009b1a:	(bad)  
   140009b1b:	add    BYTE PTR [rsi],cl
   140009b1d:	jb     0x140009b26
   140009b1f:	loopne 0x140009b26
   140009b21:	jo     0x140009b27
   140009b23:	(bad)  
   140009b24:	add    esi,DWORD PTR [rax]
   140009b26:	add    dl,BYTE PTR [rax+0x19]
   140009b29:	adc    eax,0x92060002
   140009b2e:	add    dh,BYTE PTR [rax]
   140009b30:	in     al,0x7a
   140009b32:	add    BYTE PTR [rax],al
   140009b34:	rex.W add BYTE PTR [rax],al
   140009b37:	add    BYTE PTR [rcx],bl
   140009b39:	sub    al,0x7
   140009b3b:	add    BYTE PTR [rdx],bl
   140009b3d:	fs push rdi
   140009b3f:	add    BYTE PTR [rdx],bl
   140009b41:	xor    al,0x56
   140009b43:	add    BYTE PTR [rdx],bl
   140009b45:	add    DWORD PTR [rax+rax*1+0x13],edx
   140009b49:	jo     0x140009b4b
   140009b4b:	add    ah,ah
   140009b4d:	jp     0x140009b4f
   140009b4f:	add    BYTE PTR [rax+0x11000002],dl
   140009b55:	sbb    DWORD PTR [rsi],eax
   140009b57:	add    BYTE PTR [rcx],bl
   140009b59:	xor    al,0x10
   140009b5b:	add    BYTE PTR [rip+0x57006b2],cl        # 0x14570a213
   140009b61:	(bad)  
   140009b62:	add    al,0x50
   140009b64:	fdivr  DWORD PTR [rdx+0x0]
   140009b67:	add    BYTE PTR [rax],ah
   140009b69:	xchg   ebx,eax
   140009b6a:	add    BYTE PTR [rax],al
   140009b6c:	add    BYTE PTR [rax],al
   140009b6e:	add    BYTE PTR [rax],al
   140009b70:	call   0x13f009bb8
   140009b75:	(bad)  
   140009b76:	(bad)  
   140009b77:	dec    DWORD PTR [rsp+rax*2]
   140009b7a:	add    BYTE PTR [rax],al
   140009b7c:	add    BYTE PTR [rax],al
   140009b7e:	add    BYTE PTR [rax],al
   140009b80:	(bad)  
   140009b81:	add    BYTE PTR [r8],r8b
   140009b84:	(bad)  
   140009b85:	(bad)  
   140009b86:	(bad)  
   140009b87:	inc    DWORD PTR [rcx]
   140009b89:	adc    al,0x8
   140009b8b:	add    BYTE PTR [rsp+riz*2],dl
   140009b8e:	or     BYTE PTR [rax],al
   140009b90:	adc    al,0x54
   140009b92:	(bad)  
   140009b93:	add    BYTE PTR [rsp+rsi*1],dl
   140009b96:	(bad)  
   140009b97:	add    BYTE PTR [rdx+rsi*1],dl
   140009b9a:	adc    BYTE PTR [rax+0x1],dh
   140009b9d:	sbb    al,0xb
   140009b9f:	add    BYTE PTR [rsp+rsi*1],bl
   140009ba2:	sbb    eax,0x14011c00
   140009ba7:	add    BYTE PTR [rax],dl
   140009ba9:	lock (bad) 
   140009bab:	loopne 0x140009bb9
   140009bad:	ror    BYTE PTR [rdx],1
   140009baf:	ror    BYTE PTR [rax],0x70
   140009bb2:	(bad)  
   140009bb3:	(bad)  
   140009bb4:	(bad)  
   140009bb5:	push   rax
   140009bb6:	add    BYTE PTR [rax],al
   140009bb8:	add    DWORD PTR [rbx+rcx*1],ebx
   140009bbb:	add    BYTE PTR [rsp+rsi*1],bl
   140009bbe:	(bad)  
   140009bbf:	add    BYTE PTR [rcx+rax*1],bl
   140009bc2:	(bad)  
   140009bc3:	add    BYTE PTR [rax],dl
   140009bc5:	lock (bad) 
   140009bc7:	loopne 0x140009bd5
   140009bc9:	ror    BYTE PTR [rdx],1
   140009bcb:	ror    BYTE PTR [rax],0x70
   140009bce:	(bad)  
   140009bcf:	(bad)  
   140009bd0:	(bad)  
   140009bd1:	push   rax
   140009bd2:	add    BYTE PTR [rax],al
   140009bd4:	add    DWORD PTR [rdx],ebx
   140009bd6:	or     al,BYTE PTR [rax]
   140009bd8:	sbb    dh,BYTE PTR [rcx+rbx*1]
   140009bdb:	add    BYTE PTR [rdx],bl
   140009bdd:	repnz adc al,dh
   140009be0:	(bad)  
   140009be1:	loopne 0x140009bef
   140009be3:	ror    BYTE PTR [rdx],1
   140009be5:	ror    BYTE PTR [rax],0x70
   140009be8:	(bad)  
   140009be9:	(bad)  
   140009bea:	(bad)  
   140009beb:	push   rax
   140009bec:	add    DWORD PTR [rcx],esp
   140009bee:	or     eax,DWORD PTR [rax]
   140009bf0:	and    DWORD PTR [rbx+rbx*1],esi
   140009bf3:	add    BYTE PTR [rcx],ah
   140009bf5:	add    DWORD PTR [rdx],edx
   140009bf7:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e0afed
   140009bfd:	ror    BYTE PTR [rdi],1
   140009bff:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b60a876
   140009c06:	add    BYTE PTR [rax],al
   140009c08:	add    DWORD PTR [rdi],edx
   140009c0a:	add    eax,0x13621700
   140009c0f:	jo     0x140009c23
   140009c11:	(bad)  
   140009c12:	adc    DWORD PTR [rax+0x10],edx
   140009c15:	xor    BYTE PTR [rax],al
   140009c17:	add    BYTE PTR [rcx],al
   140009c19:	clts   
   140009c1b:	add    BYTE PTR [rdi],cl
   140009c1d:	or     al,BYTE PTR fs:[rax]
   140009c20:	sysenter 
   140009c22:	or     DWORD PTR [rax],eax
   140009c24:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140009c27:	jo     0x140009c3a
   140009c29:	sbb    BYTE PTR [rsi],al
   140009c2b:	add    BYTE PTR [rax],bl
   140009c2d:	push   rsp
   140009c2e:	or     DWORD PTR [rax],eax
   140009c30:	adc    al,0x34
   140009c32:	or     BYTE PTR [rax],al
   140009c34:	or     BYTE PTR [rdx+0x4],dl
   140009c37:	(bad)  
   140009c38:	fdivr  DWORD PTR [rdx+0x0]
   140009c3b:	add    BYTE PTR [rax-0x6d],dh
   140009c3e:	add    BYTE PTR [rax],al
   140009c40:	(bad)  
   140009c41:	(bad)  
   140009c42:	(bad)  
   140009c43:	jmp    QWORD PTR [rsi+0x7c]
   140009c49:	add    BYTE PTR [rax],al
   140009c4b:	add    BYTE PTR [rdx-0x23ffff84],dh
   140009c51:	push   rdi
   140009c52:	add    BYTE PTR [rax],al
   140009c54:	(bad)  
   140009c55:	(bad)  
   140009c56:	(bad)  
   140009c57:	(bad)  
   140009c58:	call   QWORD PTR [rdi+0x0]
   140009c5b:	add    BYTE PTR [rax],al
   140009c5d:	add    BYTE PTR [rax],al
   140009c5f:	add    BYTE PTR [rax+rbx*2],al
   140009c62:	add    BYTE PTR [rax],al
   140009c64:	add    DWORD PTR [rax],eax
   140009c66:	add    BYTE PTR [rax],al
   140009c68:	(bad)  
   140009c69:	pop    rax
   140009c6a:	add    BYTE PTR [rax],al
   140009c6c:	add    BYTE PTR [rax],al
   140009c6e:	add    BYTE PTR [rax],al
   140009c70:	jp     0x140009cca
   140009c72:	add    BYTE PTR [rax],al
   140009c74:	(bad)  
   140009c75:	(bad)  
   140009c76:	(bad)  
   140009c77:	call   FWORD PTR [rcx]
   140009c79:	xor    BYTE PTR [rbx],cl
   140009c7b:	add    BYTE PTR [rdi],bl
   140009c7d:	xor    al,0x54
   140009c7f:	add    BYTE PTR [rdi],bl
   140009c81:	add    DWORD PTR [rdx+0x0],ecx
   140009c84:	adc    al,dh
   140009c86:	(bad)  
   140009c87:	loopne 0x140009c95
   140009c89:	ror    BYTE PTR [rdx],1
   140009c8b:	ror    BYTE PTR [rax],0x70
   140009c8e:	(bad)  
   140009c8f:	(bad)  
   140009c90:	(bad)  
   140009c91:	push   rax
   140009c92:	add    BYTE PTR [rax],al
   140009c94:	in     al,0x7a
   140009c96:	add    BYTE PTR [rax],al
   140009c98:	add    al,BYTE PTR [rax]
   140009c9b:	add    BYTE PTR [rcx],dl
   140009c9d:	and    al,0xc
   140009c9f:	add    BYTE PTR [rsp+riz*2],ah
   140009ca2:	verr   WORD PTR [rax]
   140009ca5:	push   rsp
   140009ca6:	(bad)  
   140009ca7:	add    BYTE PTR [rsp+rsi*1],bl
   140009caa:	or     eax,0xc521000
   140009caf:	lock or ah,al
   140009cb2:	or     al,dl
   140009cb4:	(bad)  
   140009cb5:	rol    BYTE PTR [rax+rsi*2],0xd8
   140009cb9:	jp     0x140009cbb
   140009cbb:	add    BYTE PTR [rax-0x6d],cl
   140009cbe:	add    BYTE PTR [rax],al
   140009cc0:	(bad)  
   140009cc1:	(bad)  
   140009cc2:	(bad)  
   140009cc3:	inc    esp
   140009cc5:	jl     0x140009cc7
   140009cc7:	add    BYTE PTR [rax-0xffff9c],cl
   140009ccd:	(bad)  
   140009cce:	(bad)  
   140009ccf:	(bad)  
   140009cd0:	mov    eax,0x64
   140009cd5:	add    BYTE PTR [rax],al
   140009cd7:	add    dh,cl
   140009cd9:	add    BYTE PTR gs:[rax],al
   140009cdc:	(bad)  
   140009cdd:	(bad)  
   140009cde:	(bad)  
   140009cdf:	call   FWORD PTR [rcx]
   140009ce1:	and    al,0x7
   140009ce3:	add    BYTE PTR [rdx],dl
   140009ce5:	rex.WRXB add BYTE PTR fs:[r10],r10b
   140009ce9:	xor    al,0x4e
   140009ceb:	add    BYTE PTR [rdx],dl
   140009ced:	add    DWORD PTR [rdx+0x0],ecx
   140009cf0:	or     esi,DWORD PTR [rax+0x0]
   140009cf3:	add    ah,ah
   140009cf5:	jp     0x140009cf7
   140009cf7:	add    BYTE PTR [rax+0x2],al
   140009cfa:	add    BYTE PTR [rax],al
   140009cfc:	add    DWORD PTR [rsp+rcx*1],ebx
   140009cff:	add    BYTE PTR [rsp+riz*2],bl
   140009d02:	or     al,0x0
   140009d04:	sbb    al,0x54
   140009d06:	or     eax,DWORD PTR [rax]
   140009d08:	sbb    al,0x34
   140009d0a:	or     al,BYTE PTR [rax]
   140009d0c:	sbb    al,0x32
   140009d0e:	sbb    al,dh
   140009d10:	(bad)  
   140009d11:	loopne 0x140009d27
   140009d13:	rcl    BYTE PTR [rdx],1
   140009d15:	rcl    BYTE PTR [rax],0x70
   140009d18:	add    DWORD PTR [rdx],ecx
   140009d1a:	add    al,0x0
   140009d1c:	or     dh,BYTE PTR [rcx+rcx*1]
   140009d1f:	add    BYTE PTR [rdx],cl
   140009d21:	push   rdx
   140009d22:	(bad)  
   140009d23:	jo     0x140009d26
   140009d25:	sbb    al,0xc
   140009d27:	add    BYTE PTR [rsp+riz*2],bl
   140009d2a:	adc    BYTE PTR [rax],al
   140009d2c:	sbb    al,0x54
   140009d2e:	ltr    WORD PTR [rsp+rsi*1]
   140009d32:	(bad)  
   140009d33:	add    BYTE PTR [rdx+rsi*2],bl
   140009d36:	sbb    al,dh
   140009d38:	(bad)  
   140009d39:	loopne 0x140009d4f
   140009d3b:	rcl    BYTE PTR [rdx],1
   140009d3d:	rcl    BYTE PTR [rax],0x70
   140009d40:	add    DWORD PTR [rax+rcx*1],edx
   140009d43:	add    BYTE PTR [rsp+riz*2],dl
   140009d46:	or     al,BYTE PTR [rax]
   140009d48:	adc    al,0x54
   140009d4a:	or     DWORD PTR [rax],eax
   140009d4c:	adc    al,0x34
   140009d4e:	or     BYTE PTR [rax],al
   140009d50:	adc    al,0x52
   140009d52:	adc    BYTE PTR [rax+0x19],dh
   140009d55:	and    BYTE PTR [rip+0x35341200],al        # 0x17534af5b
   140009d5b:	add    BYTE PTR [rdx],dl
   140009d5d:	add    DWORD PTR [rax],esi
   140009d5f:	add    BYTE PTR [rsi],al
   140009d61:	push   rax
   140009d62:	add    BYTE PTR [rax],al
   140009d64:	in     al,0x7a
   140009d66:	add    BYTE PTR [rax],al
   140009d68:	jo     0x140009d6b
   140009d6a:	add    BYTE PTR [rax],al
   140009d6c:	sbb    DWORD PTR [rcx],ebp
   140009d6e:	or     BYTE PTR [rax],al
   140009d70:	sbb    BYTE PTR [rcx],al
   140009d72:	xor    eax,DWORD PTR [rax]
   140009d74:	or     eax,esi
   140009d76:	(bad)  
   140009d77:	loopne 0x140009d7e
   140009d79:	jo     0x140009d7f
   140009d7b:	(bad)  
   140009d7c:	add    esi,DWORD PTR [rax]
   140009d7e:	add    dl,BYTE PTR [rax-0x1c]
   140009d81:	jp     0x140009d83
   140009d83:	add    BYTE PTR [rax+0x19000001],al
   140009d89:	sub    ecx,DWORD PTR [rcx]
   140009d8b:	add    BYTE PTR [rdx],bl
   140009d8d:	add    DWORD PTR [rax+rax*1],edi
   140009d90:	or     esi,eax
   140009d92:	or     eax,esp
   140009d94:	(bad)  
   140009d95:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360a20c
   140009d9c:	add    dl,BYTE PTR [rax+0x0]
   140009d9f:	add    ah,ah
   140009da1:	jp     0x140009da3
   140009da3:	add    al,dl
   140009da5:	add    DWORD PTR [rax],eax
   140009da7:	add    BYTE PTR [rcx],al
   140009da9:	add    al,0x1
   140009dab:	add    BYTE PTR [rdx+riz*2],al
   140009dae:	add    BYTE PTR [rax],al
   140009db0:	or     DWORD PTR [rip+0x74150008],edx        # 0x1b4159dbe
   140009db6:	or     al,BYTE PTR [rax]
   140009db8:	adc    eax,0x15000964
   140009dbd:	xor    al,0x8
   140009dbf:	add    BYTE PTR [rip+0xffffffff96f01152],dl        # 0xd6f0af17
   140009dc5:	js     0x140009dc7
   140009dc7:	add    BYTE PTR [rcx],al
   140009dc9:	add    BYTE PTR [rax],al
   140009dcb:	add    BYTE PTR [rbp+0xb000071],ah
   140009dd1:	jae    0x140009dd3
   140009dd3:	add    dh,dl
   140009dd5:	jl     0x140009dd7
   140009dd7:	add    BYTE PTR [rbx],cl
   140009dd9:	jae    0x140009ddb
   140009ddb:	add    BYTE PTR [rax],al
   140009ddd:	add    BYTE PTR [rax],al
   140009ddf:	add    BYTE PTR [rcx],al
   140009de1:	add    BYTE PTR [rax],al
   140009de3:	add    BYTE PTR [rcx],dl
   140009de5:	(bad)  
   140009de6:	add    al,BYTE PTR [rax]
   140009de8:	(bad)  
   140009de9:	xor    al,BYTE PTR [rdx]
   140009deb:	xor    BYTE PTR [rsi+0x1000078],dl
   140009df1:	add    BYTE PTR [rax],al
   140009df3:	add    cl,ch
   140009df5:	jae    0x140009df7
   140009df7:	add    BYTE PTR [rsi],ch
   140009df9:	je     0x140009dfb
   140009dfb:	add    dl,bh
   140009dfd:	jl     0x140009dff
   140009dff:	add    BYTE PTR [rax],al
   140009e01:	add    BYTE PTR [rax],al
   140009e03:	add    BYTE PTR [rcx],cl
   140009e05:	(bad)  
   140009e06:	(bad)  
   140009e07:	add    BYTE PTR [rdi],dl
   140009e09:	xor    al,0xd
   140009e0b:	add    BYTE PTR [rdi],dl
   140009e0d:	jb     0x140009e22
   140009e0f:	loopne 0x140009e22
   140009e11:	jo     0x140009e23
   140009e13:	(bad)  
   140009e14:	xchg   esi,eax
   140009e15:	js     0x140009e17
   140009e17:	add    BYTE PTR [rcx],al
   140009e19:	add    BYTE PTR [rax],al
   140009e1b:	add    BYTE PTR [rdi],al
   140009e1d:	jne    0x140009e1f
   140009e1f:	add    BYTE PTR [rax],ch
   140009e21:	jne    0x140009e23
   140009e23:	add    BYTE PTR [rbp+0x7d],cl
   140009e26:	add    BYTE PTR [rax],al
   140009e28:	sub    BYTE PTR [rbp+0x0],dh
   140009e2b:	add    BYTE PTR [rcx],al
   140009e2d:	(bad)  
   140009e2e:	add    al,BYTE PTR [rax]
   140009e30:	(bad)  
   140009e31:	xor    al,BYTE PTR [rdx]
   140009e33:	push   rax
   140009e34:	adc    DWORD PTR [rax],ebx
   140009e36:	add    eax,0x14621800
   140009e3b:	loopne 0x140009e4f
   140009e3d:	jo     0x140009e50
   140009e3f:	(bad)  
   140009e40:	adc    BYTE PTR [rax],dh
   140009e42:	add    BYTE PTR [rax],al
   140009e44:	xchg   esi,eax
   140009e45:	js     0x140009e47
   140009e47:	add    BYTE PTR [rcx],al
   140009e49:	add    BYTE PTR [rax],al
   140009e4b:	add    BYTE PTR [rdi-0x2effff8c],ah
   140009e51:	je     0x140009e53
   140009e53:	add    BYTE PTR [rbx],bl
   140009e55:	jge    0x140009e57
   140009e57:	add    BYTE PTR [rax],al
   140009e59:	add    BYTE PTR [rax],al
   140009e5b:	add    BYTE PTR [rcx],cl
   140009e5d:	add    al,0x1
   140009e5f:	add    BYTE PTR [rdx+riz*1],al
   140009e62:	add    BYTE PTR [rax],al
   140009e64:	xchg   esi,eax
   140009e65:	js     0x140009e67
   140009e67:	add    BYTE PTR [rcx],al
   140009e69:	add    BYTE PTR [rax],al
   140009e6b:	add    BYTE PTR [rsi+rsi*2],bl
   140009e6e:	add    BYTE PTR [rax],al
   140009e70:	push   rdx
   140009e71:	jbe    0x140009e73
   140009e73:	add    BYTE PTR [rcx],al
   140009e75:	add    BYTE PTR [rax],al
   140009e77:	add    BYTE PTR [rdx+0x76],dl
   140009e7a:	add    BYTE PTR [rax],al
   140009e7c:	or     DWORD PTR [rdx],ecx
   140009e7e:	add    al,0x0
   140009e80:	or     dh,BYTE PTR [rsi+rax*1]
   140009e83:	add    BYTE PTR [rdx],cl
   140009e85:	xor    al,BYTE PTR [rsi]
   140009e87:	jo     0x140009e1f
   140009e89:	js     0x140009e8b
   140009e8b:	add    BYTE PTR [rcx],al
   140009e8d:	add    BYTE PTR [rax],al
   140009e8f:	add    BYTE PTR [rip+0x60000077],ch        # 0x1a0009f0c
   140009e95:	ja     0x140009e97
   140009e97:	add    BYTE PTR [rax+0x6000007d],ah
   140009e9d:	ja     0x140009e9f
   140009e9f:	add    BYTE PTR [rcx],al
   140009ea1:	or     eax,0x340d0004
   140009ea6:	or     DWORD PTR [rax],eax
   140009ea8:	or     eax,0x1500632
   140009ead:	or     al,0x2
   140009eaf:	add    BYTE PTR [rcx+rax*1],cl
   140009eb2:	adc    DWORD PTR [rax],eax
   140009eb4:	add    BYTE PTR [rax],al
   140009eb6:	add    BYTE PTR [rax],al
   140009eb8:	add    DWORD PTR [rax],eax
   140009eba:	add    BYTE PTR [rax],al
   140009ebc:	add    DWORD PTR [rdx],eax
   140009ebe:	add    DWORD PTR [rax],eax
   140009ec0:	add    dh,BYTE PTR [rax]
   140009ec2:	add    BYTE PTR [rax],al
   140009ec4:	mov    eax,0x9f
   140009ec9:	add    BYTE PTR [rax],al
   140009ecb:	add    BYTE PTR [rax],al
   140009ecd:	add    BYTE PTR [rax],al
   140009ecf:	add    BYTE PTR [rsi-0x5c],ch
   140009ed2:	add    BYTE PTR [rax],al
   140009ed4:	and    BYTE PTR [rcx-0x5fe80000],al
	...
   140009ee2:	add    BYTE PTR [rax],al
   140009ee4:	cmps   DWORD PTR es:[rsi],DWORD PTR es:[rdi]
   140009ee6:	add    BYTE PTR [rax],al
   140009ee8:	add    BYTE PTR [rcx-0x5da00000],0x0
	...
   140009ef7:	add    BYTE PTR [rax+rbp*4-0x7c380000],dh
   140009efe:	add    BYTE PTR [rax],al
   140009f00:	adc    BYTE PTR [rdx+0x0],ah
   140009f06:	add    BYTE PTR [rax],al
   140009f08:	add    BYTE PTR [rax],al
   140009f0a:	add    BYTE PTR [rax],al
   140009f0c:	lods   al,BYTE PTR ds:[rsi]
   140009f0d:	test   eax,0x83780000
   140009f12:	add    BYTE PTR [rax],al
   140009f14:	add    BYTE PTR [rax+rax*1+0x0],ah
   140009f1b:	add    BYTE PTR [rax],al
   140009f1d:	add    BYTE PTR [rax],al
   140009f1f:	add    al,dh
   140009f21:	test   eax,0x85680000
   140009f26:	add    BYTE PTR [rax],al
   140009f28:	shl    BYTE PTR [rcx+0x0],1
   140009f2e:	add    BYTE PTR [rax],al
   140009f30:	add    BYTE PTR [rax],al
   140009f32:	add    BYTE PTR [rax],al
   140009f34:	cli    
   140009f35:	test   eax,0x83380000
   140009f3a:	add    BYTE PTR [rax],al
   140009f3c:	add    BYTE PTR [rdx+0x0],ah
   140009f42:	add    BYTE PTR [rax],al
   140009f44:	add    BYTE PTR [rax],al
   140009f46:	add    BYTE PTR [rax],al
   140009f48:	sbb    BYTE PTR [rdx-0x7c980000],ch
   140009f4e:	add    BYTE PTR [rax],al
   140009f50:	and    BYTE PTR [rax+rax*1+0x0],ah
   140009f57:	add    BYTE PTR [rax],al
   140009f59:	add    BYTE PTR [rax],al
   140009f5b:	add    BYTE PTR [rax],bh
   140009f5d:	stos   BYTE PTR es:[rdi],al
   140009f5e:	add    BYTE PTR [rax],al
   140009f60:	mov    BYTE PTR [rbp-0x60280000],al
	...
   140009f6e:	add    BYTE PTR [rax],al
   140009f70:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009f71:	stos   BYTE PTR es:[rdi],al
   140009f72:	add    BYTE PTR [rax],al
   140009f74:	rex add DWORD PTR [rax],0x9ff800
	...
   140009f83:	add    BYTE PTR [rdx],ah
   140009f85:	stos   DWORD PTR es:[rdi],eax
   140009f86:	add    BYTE PTR [rax],al
   140009f88:	(bad)  
   140009f89:	add    DWORD PTR [rax],0xa3f000
	...
   140009f97:	add    BYTE PTR [rax-0x55],dl
   140009f9a:	add    BYTE PTR [rax],al
   140009f9c:	pop    rax
   140009f9d:	test   DWORD PTR [rax],eax
	...
   140009fb7:	add    BYTE PTR [rax],dh
   140009fb9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009fba:	add    BYTE PTR [rax],al
   140009fbc:	add    BYTE PTR [rax],al
   140009fbe:	add    BYTE PTR [rax],al
   140009fc0:	rex.R movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009fc2:	add    BYTE PTR [rax],al
   140009fc4:	add    BYTE PTR [rax],al
   140009fc6:	add    BYTE PTR [rax],al
   140009fc8:	pop    rdx
   140009fc9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   140009fd6:	add    BYTE PTR [rax],al
   140009fd8:	data16 stos BYTE PTR es:[rdi],al
   140009fda:	add    BYTE PTR [rax],al
   140009fdc:	add    BYTE PTR [rax],al
   140009fde:	add    BYTE PTR [rax],al
   140009fe0:	rex.R stos BYTE PTR es:[rdi],al
   140009fe2:	add    BYTE PTR [rax],al
   140009fe4:	add    BYTE PTR [rax],al
   140009fe6:	add    BYTE PTR [rax],al
   140009fe8:	mov    WORD PTR [rdx+0x0],gs
	...
   140009ff6:	add    BYTE PTR [rax],al
   140009ff8:	mov    esp,0xaa
   140009ffd:	add    BYTE PTR [rax],al
   140009fff:	add    dh,bh
   14000a001:	stos   BYTE PTR es:[rdi],al
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	add    BYTE PTR [rax],al
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	fsubr  DWORD PTR [rdx+0x0]
	...
   14000a016:	add    BYTE PTR [rax],al
   14000a018:	(bad)  
   14000a019:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a01a:	add    BYTE PTR [rax],al
   14000a01c:	add    BYTE PTR [rax],al
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	jbe    0x140009fc7
   14000a022:	add    BYTE PTR [rax],al
   14000a024:	add    BYTE PTR [rax],al
   14000a026:	add    BYTE PTR [rax],al
   14000a028:	xchg   BYTE PTR [rbp+0x0],ah
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	xchg   esi,eax
   14000a031:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a032:	add    BYTE PTR [rax],al
   14000a034:	add    BYTE PTR [rax],al
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	mov    al,0xa5
   14000a03a:	add    BYTE PTR [rax],al
   14000a03c:	add    BYTE PTR [rax],al
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	int3   
   14000a041:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	add    BYTE PTR [rax],al
   14000a046:	add    BYTE PTR [rax],al
   14000a048:	fsub   QWORD PTR [rbp+0x0]
   14000a04e:	add    BYTE PTR [rax],al
   14000a050:	out    dx,al
   14000a051:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a052:	add    BYTE PTR [rax],al
   14000a054:	add    BYTE PTR [rax],al
   14000a056:	add    BYTE PTR [rax],al
   14000a058:	(bad)  
   14000a059:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a05a:	add    BYTE PTR [rax],al
   14000a05c:	add    BYTE PTR [rax],al
   14000a05e:	add    BYTE PTR [rax],al
   14000a060:	(bad)  
   14000a061:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a062:	add    BYTE PTR [rax],al
   14000a064:	add    BYTE PTR [rax],al
   14000a066:	add    BYTE PTR [rax],al
   14000a068:	and    ah,BYTE PTR [rsi+0x0]
   14000a06e:	add    BYTE PTR [rax],al
   14000a070:	cmps   BYTE PTR cs:[rsi],BYTE PTR es:[rdi]
   14000a072:	add    BYTE PTR [rax],al
   14000a074:	add    BYTE PTR [rax],al
   14000a076:	add    BYTE PTR [rax],al
   14000a078:	rex.R cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a07a:	add    BYTE PTR [rax],al
   14000a07c:	add    BYTE PTR [rax],al
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	pop    rax
   14000a081:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a082:	add    BYTE PTR [rax],al
   14000a084:	add    BYTE PTR [rax],al
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	data16 cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a08a:	add    BYTE PTR [rax],al
   14000a08c:	add    BYTE PTR [rax],al
   14000a08e:	add    BYTE PTR [rax],al
   14000a090:	jl     0x14000a038
   14000a092:	add    BYTE PTR [rax],al
   14000a094:	add    BYTE PTR [rax],al
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	xchg   esp,eax
   14000a099:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a09a:	add    BYTE PTR [rax],al
   14000a09c:	add    BYTE PTR [rax],al
   14000a09e:	add    BYTE PTR [rax],al
   14000a0a0:	stos   BYTE PTR es:[rdi],al
   14000a0a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a0a2:	add    BYTE PTR [rax],al
   14000a0a4:	add    BYTE PTR [rax],al
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	shl    BYTE PTR [rsi+0x0],0x0
   14000a0af:	add    al,dl
   14000a0b1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a0b2:	add    BYTE PTR [rax],al
   14000a0b4:	add    BYTE PTR [rax],al
   14000a0b6:	add    BYTE PTR [rax],al
   14000a0b8:	(bad)  
   14000a0b9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a0ba:	add    BYTE PTR [rax],al
   14000a0bc:	add    BYTE PTR [rax],al
   14000a0be:	add    BYTE PTR [rax],al
   14000a0c0:	(bad)  
   14000a0c1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a0c2:	add    BYTE PTR [rax],al
   14000a0c4:	add    BYTE PTR [rax],al
   14000a0c6:	add    BYTE PTR [rax],al
   14000a0c8:	or     al,0xa7
   14000a0ca:	add    BYTE PTR [rax],al
   14000a0cc:	add    BYTE PTR [rax],al
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a0d2:	add    BYTE PTR [rax],al
   14000a0d4:	add    BYTE PTR [rax],al
   14000a0d6:	add    BYTE PTR [rax],al
   14000a0d8:	(bad)  
   14000a0d9:	lods   al,BYTE PTR ds:[rsi]
   14000a0da:	add    BYTE PTR [rax],al
   14000a0dc:	add    BYTE PTR [rax],al
   14000a0de:	add    BYTE PTR [rax],al
   14000a0e0:	lods   al,BYTE PTR ds:[rsi]
   14000a0e1:	lods   al,BYTE PTR ds:[rsi]
   14000a0e2:	add    BYTE PTR [rax],al
   14000a0e4:	add    BYTE PTR [rax],al
   14000a0e6:	add    BYTE PTR [rax],al
   14000a0e8:	rex.WR movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000a0ea:	add    BYTE PTR [rax],al
   14000a0ec:	add    BYTE PTR [rax],al
   14000a0ee:	add    BYTE PTR [rax],al
   14000a0f0:	(bad)  
   14000a0f1:	lods   al,BYTE PTR ds:[rsi]
   14000a0f2:	add    BYTE PTR [rax],al
   14000a0f4:	add    BYTE PTR [rax],al
   14000a0f6:	add    BYTE PTR [rax],al
   14000a0f8:	mov    gs,WORD PTR [rax+rax*1+0x0]
   14000a0ff:	add    BYTE PTR [rsi-0x54],bh
   14000a102:	add    BYTE PTR [rax],al
   14000a104:	add    BYTE PTR [rax],al
   14000a106:	add    BYTE PTR [rax],al
   14000a108:	jo     0x14000a0b6
   14000a10a:	add    BYTE PTR [rax],al
   14000a10c:	add    BYTE PTR [rax],al
   14000a10e:	add    BYTE PTR [rax],al
   14000a110:	rex.W lods al,BYTE PTR ds:[rsi]
   14000a112:	add    BYTE PTR [rax],al
   14000a114:	add    BYTE PTR [rax],al
   14000a116:	add    BYTE PTR [rax],al
   14000a118:	xor    al,0xac
   14000a11a:	add    BYTE PTR [rax],al
   14000a11c:	add    BYTE PTR [rax],al
   14000a11e:	add    BYTE PTR [rax],al
   14000a120:	sbb    BYTE PTR [rax+rax*1+0x0],ch
   14000a127:	add    BYTE PTR [rsp+rbp*4],al
   14000a12a:	add    BYTE PTR [rax],al
   14000a12c:	add    BYTE PTR [rax],al
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	(bad)  
   14000a131:	stos   DWORD PTR es:[rdi],eax
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	add    BYTE PTR [rax],al
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	(bad)  
   14000a139:	stos   DWORD PTR es:[rdi],eax
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	add    BYTE PTR [rax],al
   14000a13e:	add    BYTE PTR [rax],al
   14000a140:	(bad)  
   14000a141:	stos   DWORD PTR es:[rdi],eax
   14000a142:	add    BYTE PTR [rax],al
   14000a144:	add    BYTE PTR [rax],al
   14000a146:	add    BYTE PTR [rax],al
   14000a148:	lods   al,BYTE PTR ds:[rsi]
   14000a149:	stos   DWORD PTR es:[rdi],eax
   14000a14a:	add    BYTE PTR [rax],al
   14000a14c:	add    BYTE PTR [rax],al
   14000a14e:	add    BYTE PTR [rax],al
   14000a150:	xchg   esi,eax
   14000a151:	stos   DWORD PTR es:[rdi],eax
   14000a152:	add    BYTE PTR [rax],al
   14000a154:	add    BYTE PTR [rax],al
   14000a156:	add    BYTE PTR [rax],al
   14000a158:	jl     0x14000a105
   14000a15a:	add    BYTE PTR [rax],al
   14000a15c:	add    BYTE PTR [rax],al
   14000a15e:	add    BYTE PTR [rax],al
   14000a160:	pop    rsi
   14000a161:	stos   DWORD PTR es:[rdi],eax
   14000a162:	add    BYTE PTR [rax],al
   14000a164:	add    BYTE PTR [rax],al
   14000a166:	add    BYTE PTR [rax],al
   14000a168:	call   0x14000a211
   14000a16d:	add    BYTE PTR [rax],al
   14000a16f:	add    ah,dl
   14000a171:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a172:	add    BYTE PTR [rax],al
   14000a174:	add    BYTE PTR [rax],al
   14000a176:	add    BYTE PTR [rax],al
   14000a178:	(bad)  
   14000a179:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a17a:	add    BYTE PTR [rax],al
   14000a17c:	add    BYTE PTR [rax],al
   14000a17e:	add    BYTE PTR [rax],al
   14000a180:	mov    al,0xa4
   14000a182:	add    BYTE PTR [rax],al
   14000a184:	add    BYTE PTR [rax],al
   14000a186:	add    BYTE PTR [rax],al
   14000a188:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a18a:	add    BYTE PTR [rax],al
   14000a18c:	add    BYTE PTR [rax],al
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	movs   DWORD PTR es:[rdi],DWORD PTR cs:[rsi]
   14000a192:	add    BYTE PTR [rax],al
   14000a194:	add    BYTE PTR [rax],al
   14000a196:	add    BYTE PTR [rax],al
   14000a198:	sbb    al,0xa5
   14000a19a:	add    BYTE PTR [rax],al
   14000a19c:	add    BYTE PTR [rax],al
   14000a19e:	add    BYTE PTR [rax],al
   14000a1a0:	(bad)  
   14000a1a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a1a2:	add    BYTE PTR [rax],al
   14000a1a4:	add    BYTE PTR [rax],al
   14000a1a6:	add    BYTE PTR [rax],al
   14000a1a8:	add    ah,BYTE PTR [rbp+0x0]
   14000a1ae:	add    BYTE PTR [rax],al
   14000a1b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a1b1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a1b2:	add    BYTE PTR [rax],al
   14000a1b4:	add    BYTE PTR [rax],al
   14000a1b6:	add    BYTE PTR [rax],al
   14000a1b8:	xchg   edx,eax
   14000a1b9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a1ba:	add    BYTE PTR [rax],al
   14000a1bc:	add    BYTE PTR [rax],al
   14000a1be:	add    BYTE PTR [rax],al
   14000a1c0:	jl     0x14000a166
	...
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	enter  0x0,0x0
   14000a1d4:	add    BYTE PTR [rax],al
   14000a1d6:	add    BYTE PTR [rax+0x9],al
   14000a1dc:	add    BYTE PTR [rax],al
   14000a1de:	add    BYTE PTR [rax+0x8],al
   14000a1e4:	add    BYTE PTR [rax],al
   14000a1e6:	add    BYTE PTR [rax+0x6],al
   14000a1ec:	add    BYTE PTR [rax],al
   14000a1ee:	add    BYTE PTR [rax+0x2],al
   14000a1f4:	add    BYTE PTR [rax],al
   14000a1f6:	add    BYTE PTR [rax+0x0],al
   14000a1fc:	add    BYTE PTR [rax],al
   14000a1fe:	add    BYTE PTR [rax],al
   14000a200:	or     BYTE PTR [rdx+0x0],ch
	...
   14000a20e:	add    BYTE PTR [rax],al
   14000a210:	xor    al,0xa9
   14000a212:	add    BYTE PTR [rax],al
   14000a214:	add    BYTE PTR [rax],al
   14000a216:	add    BYTE PTR [rax],al
   14000a218:	(bad)  
   14000a219:	test   eax,0x0
   14000a21e:	add    BYTE PTR [rax],al
   14000a220:	sahf   
   14000a221:	test   eax,0x0
   14000a226:	add    BYTE PTR [rax],al
   14000a228:	mov    ch,BYTE PTR [rcx+0x0]
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	jbe    0x14000a1db
   14000a232:	add    BYTE PTR [rax],al
   14000a234:	add    BYTE PTR [rax],al
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	push   0xa9
   14000a23d:	add    BYTE PTR [rax],al
   14000a23f:	add    BYTE PTR [rsi-0x57],dl
   14000a242:	add    BYTE PTR [rax],al
   14000a244:	add    BYTE PTR [rax],al
   14000a246:	add    BYTE PTR [rax],al
   14000a248:	sub    BYTE PTR [rcx+0x0],ch
   14000a24e:	add    BYTE PTR [rax],al
   14000a250:	rex.X test eax,0x0
	...
   14000a25e:	add    BYTE PTR [rax],al
   14000a260:	in     al,0xa7
   14000a262:	add    BYTE PTR [rax],al
   14000a264:	add    BYTE PTR [rax],al
   14000a266:	add    BYTE PTR [rax],al
   14000a268:	pop    rsi
   14000a269:	lods   eax,DWORD PTR ds:[rsi]
   14000a26a:	add    BYTE PTR [rax],al
   14000a26c:	add    BYTE PTR [rax],al
   14000a26e:	add    BYTE PTR [rax],al
   14000a270:	push   rsp
   14000a271:	lods   eax,DWORD PTR ds:[rsi]
   14000a272:	add    BYTE PTR [rax],al
   14000a274:	add    BYTE PTR [rax],al
   14000a276:	add    BYTE PTR [rax],al
   14000a278:	lods   eax,DWORD PTR ds:[rsi]
   14000a27a:	add    BYTE PTR [rax],al
   14000a27c:	add    BYTE PTR [rax],al
   14000a27e:	add    BYTE PTR [rax],al
   14000a280:	xor    BYTE PTR [rbp+0x0],ch
   14000a286:	add    BYTE PTR [rax],al
   14000a288:	(bad)  
   14000a289:	test   al,0x0
   14000a28b:	add    BYTE PTR [rax],al
   14000a28d:	add    BYTE PTR [rax],al
   14000a28f:	add    dl,ch
   14000a291:	test   al,0x0
   14000a293:	add    BYTE PTR [rax],al
   14000a295:	add    BYTE PTR [rax],al
   14000a297:	add    al,ah
   14000a299:	test   al,0x0
   14000a29b:	add    BYTE PTR [rax],al
   14000a29d:	add    BYTE PTR [rax],al
   14000a29f:	add    dl,dl
   14000a2a1:	test   al,0x0
   14000a2a3:	add    BYTE PTR [rax],al
   14000a2a5:	add    BYTE PTR [rax],al
   14000a2a7:	add    al,cl
   14000a2a9:	test   al,0x0
   14000a2ab:	add    BYTE PTR [rax],al
   14000a2ad:	add    BYTE PTR [rax],al
   14000a2af:	add    al,al
   14000a2b1:	test   al,0x0
   14000a2b3:	add    BYTE PTR [rax],al
   14000a2b5:	add    BYTE PTR [rax],al
   14000a2b7:	add    BYTE PTR [rsi],ah
   14000a2b9:	lods   eax,DWORD PTR ds:[rsi]
   14000a2ba:	add    BYTE PTR [rax],al
   14000a2bc:	add    BYTE PTR [rax],al
   14000a2be:	add    BYTE PTR [rax],al
   14000a2c0:	(bad)  
   14000a2c1:	lods   eax,DWORD PTR ds:[rsi]
   14000a2c2:	add    BYTE PTR [rax],al
   14000a2c4:	add    BYTE PTR [rax],al
   14000a2c6:	add    BYTE PTR [rax],al
   14000a2c8:	test   al,0xa8
   14000a2ca:	add    BYTE PTR [rax],al
   14000a2cc:	add    BYTE PTR [rax],al
   14000a2ce:	add    BYTE PTR [rax],al
   14000a2d0:	sahf   
   14000a2d1:	test   al,0x0
   14000a2d3:	add    BYTE PTR [rax],al
   14000a2d5:	add    BYTE PTR [rax],al
   14000a2d7:	add    BYTE PTR [rsi+0xa8],al
   14000a2dd:	add    BYTE PTR [rax],al
   14000a2df:	add    BYTE PTR [rdx-0x58],bh
   14000a2e2:	add    BYTE PTR [rax],al
   14000a2e4:	add    BYTE PTR [rax],al
   14000a2e6:	add    BYTE PTR [rax],al
   14000a2e8:	data16 test al,0x0
   14000a2eb:	add    BYTE PTR [rax],al
   14000a2ed:	add    BYTE PTR [rax],al
   14000a2ef:	add    BYTE PTR [rax+rbp*4+0x0],bl
   14000a2f3:	add    BYTE PTR [rax],al
   14000a2f5:	add    BYTE PTR [rax],al
   14000a2f7:	add    BYTE PTR [rax+rbp*4+0x0],dl
   14000a2fb:	add    BYTE PTR [rax],al
   14000a2fd:	add    BYTE PTR [rax],al
   14000a2ff:	add    BYTE PTR [rdx-0x58],al
   14000a302:	add    BYTE PTR [rax],al
   14000a304:	add    BYTE PTR [rax],al
   14000a306:	add    BYTE PTR [rax],al
   14000a308:	xor    BYTE PTR [rax+0x0],ch
   14000a30e:	add    BYTE PTR [rax],al
   14000a310:	and    ch,BYTE PTR [rax+0x0]
   14000a316:	add    BYTE PTR [rax],al
   14000a318:	adc    al,0xa8
   14000a31a:	add    BYTE PTR [rax],al
   14000a31c:	add    BYTE PTR [rax],al
   14000a31e:	add    BYTE PTR [rax],al
   14000a320:	or     BYTE PTR [rax+0x0],ch
   14000a326:	add    BYTE PTR [rax],al
   14000a328:	(bad)  
   14000a329:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a32a:	add    BYTE PTR [rax],al
   14000a32c:	add    BYTE PTR [rax],al
   14000a32e:	add    BYTE PTR [rax],al
   14000a330:	mul    BYTE PTR [rdi+0x0]
   14000a336:	add    BYTE PTR [rax],al
   14000a338:	in     al,dx
   14000a339:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a33a:	add    BYTE PTR [rax],al
   14000a33c:	add    BYTE PTR [rax],al
   14000a33e:	add    BYTE PTR [rax],al
   14000a340:	push   0xad
   14000a345:	add    BYTE PTR [rax],al
   14000a347:	add    dh,dl
   14000a349:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a34a:	add    BYTE PTR [rax],al
   14000a34c:	add    BYTE PTR [rax],al
   14000a34e:	add    BYTE PTR [rax],al
   14000a350:	(bad)  
   14000a351:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a352:	add    BYTE PTR [rax],al
   14000a354:	add    BYTE PTR [rax],al
   14000a356:	add    BYTE PTR [rax],al
   14000a358:	mov    esp,0xa7
   14000a35d:	add    BYTE PTR [rax],al
   14000a35f:	add    BYTE PTR [rax+0xa7],dh
   14000a365:	add    BYTE PTR [rax],al
   14000a367:	add    BYTE PTR [rdx+0xa7],ah
   14000a36d:	add    BYTE PTR [rax],al
   14000a36f:	add    BYTE PTR [rsi+0xa7],dl
   14000a375:	add    BYTE PTR [rax],al
   14000a377:	add    BYTE PTR [rdx+0xa7],cl
   14000a37d:	add    BYTE PTR [rax],al
   14000a37f:	add    BYTE PTR [rsi-0x59],bh
   14000a382:	add    BYTE PTR [rax],al
   14000a384:	add    BYTE PTR [rax],al
   14000a386:	add    BYTE PTR [rax],al
   14000a388:	jo     0x14000a331
   14000a38a:	add    BYTE PTR [rax],al
   14000a38c:	add    BYTE PTR [rax],al
   14000a38e:	add    BYTE PTR [rax],al
   14000a390:	push   0xa7
   14000a395:	add    BYTE PTR [rax],al
   14000a397:	add    BYTE PTR [rsi-0x59],bl
   14000a39a:	add    BYTE PTR [rax],al
   14000a39c:	add    BYTE PTR [rax],al
   14000a39e:	add    BYTE PTR [rax],al
   14000a3a0:	push   rdx
   14000a3a1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a3a2:	add    BYTE PTR [rax],al
   14000a3a4:	add    BYTE PTR [rax],al
   14000a3a6:	add    BYTE PTR [rax],al
   14000a3a8:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000a3aa:	add    BYTE PTR [rax],al
   14000a3ac:	add    BYTE PTR [rax],al
   14000a3ae:	add    BYTE PTR [rax],al
   14000a3b0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a3b2:	add    BYTE PTR [rax],al
   14000a3b4:	add    BYTE PTR [rax],al
   14000a3b6:	add    BYTE PTR [rax],al
   14000a3b8:	xor    al,0xa7
   14000a3ba:	add    BYTE PTR [rax],al
   14000a3bc:	add    BYTE PTR [rax],al
   14000a3be:	add    BYTE PTR [rax],al
   14000a3c0:	fsubr  QWORD PTR [rax+rax*1+0x0]
   14000a3c7:	add    dl,ch
   14000a3c9:	lods   al,BYTE PTR ds:[rsi]
   14000a3ca:	add    BYTE PTR [rax],al
   14000a3cc:	add    BYTE PTR [rax],al
   14000a3ce:	add    BYTE PTR [rax],al
   14000a3d0:	hlt    
   14000a3d1:	lods   al,BYTE PTR ds:[rsi]
   14000a3d2:	add    BYTE PTR [rax],al
   14000a3d4:	add    BYTE PTR [rax],al
   14000a3d6:	add    BYTE PTR [rax],al
   14000a3d8:	add    BYTE PTR [rbp+0x0],ch
   14000a3de:	add    BYTE PTR [rax],al
   14000a3e0:	or     al,0xad
	...
   14000a3ee:	add    BYTE PTR [rax],al
   14000a3f0:	xor    BYTE PTR [rbx+0x0],ch
	...
   14000a3fe:	add    BYTE PTR [rax],al
   14000a400:	retf   0xa9
   14000a403:	add    BYTE PTR [rax],al
   14000a405:	add    BYTE PTR [rax],al
   14000a407:	add    ah,bl
   14000a409:	test   eax,0x0
   14000a40e:	add    BYTE PTR [rax],al
   14000a410:	mov    eax,0xa9
	...
   14000a41d:	add    BYTE PTR [rax],al
   14000a41f:	add    BYTE PTR [rdx+rbp*4],ah
	...
   14000a42e:	add    BYTE PTR [rax],al
   14000a430:	adc    al,0x2
   14000a432:	rex.WRXB jo 0x14000a49a
   14000a435:	outs   dx,BYTE PTR ds:[rsi]
   14000a436:	push   rax
   14000a437:	jb     0x14000a4a8
   14000a439:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a43c:	jae    0x14000a492
   14000a43e:	outs   dx,DWORD PTR ds:[rsi]
   14000a43f:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   14000a443:	add    BYTE PTR [rdi+0x1],ch
   14000a446:	rex.RXB
   14000a447:	gs je  0x14000a49e
   14000a44a:	outs   dx,DWORD PTR ds:[rsi]
   14000a44b:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   14000a44f:	outs   dx,BYTE PTR ds:[rsi]
   14000a450:	outs   dx,WORD PTR ds:[rsi]
   14000a452:	jb     0x14000a4c1
   14000a454:	(bad)  
   14000a455:	je     0x14000a4c0
   14000a457:	outs   dx,DWORD PTR ds:[rsi]
   14000a458:	outs   dx,BYTE PTR ds:[rsi]
   14000a459:	add    BYTE PTR [rax+0x6f6f4c01],ch
   14000a45f:	imul   esi,DWORD PTR [rbp+0x70],0x41
   14000a463:	movsxd esp,DWORD PTR [rbx+0x6f]
   14000a466:	jne    0x14000a4d6
   14000a468:	je     0x14000a4bd
   14000a46a:	imul   esp,DWORD PTR [rdi+rdx*2+0x0],0x41564441
   14000a472:	push   rax
   14000a473:	xor    rsi,QWORD PTR [r10]
   14000a476:	cs fs ins BYTE PTR es:[rdi],dx
   14000a479:	ins    BYTE PTR es:[rdi],dx
   14000a47a:	add    BYTE PTR [rax],al
   14000a47c:	or     al,0x4
   14000a47e:	rex.WRXB jne 0x14000a4f5
   14000a481:	jo     0x14000a4f8
   14000a483:	je     0x14000a4c9
   14000a485:	gs (bad) 
   14000a487:	jne    0x14000a4f0
   14000a489:	push   rbx
   14000a48a:	je     0x14000a4fe
   14000a48c:	imul   ebp,DWORD PTR [rsi+0x67],0xb3000041
   14000a493:	add    al,BYTE PTR [rdi+0x65]
   14000a496:	je     0x14000a4e8
   14000a498:	jb     0x14000a509
   14000a49a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a49d:	jae    0x14000a4e7
   14000a49f:	gs (bad) 
   14000a4a1:	jo     0x14000a4a3
   14000a4a3:	add    BYTE PTR [rax+0x3],cl
   14000a4a6:	rex.W
   14000a4a7:	gs (bad) 
   14000a4a9:	jo     0x14000a4f1
   14000a4ab:	jb     0x14000a512
   14000a4ad:	add    BYTE PTR gs:[rax],al
   14000a4b0:	jbe    0x14000a4b4
   14000a4b2:	rex.RXB
   14000a4b3:	gs je  0x14000a503
   14000a4b6:	outs   dx,DWORD PTR ds:[rsi]
   14000a4b7:	fs jne 0x14000a526
   14000a4ba:	gs rex.W (bad) 
   14000a4bd:	outs   dx,BYTE PTR ds:[rsi]
   14000a4be:	fs ins BYTE PTR es:[rdi],dx
   14000a4c0:	gs push rdi
   14000a4c2:	add    BYTE PTR [rax],al
   14000a4c4:	pop    rdi
   14000a4c5:	add    al,BYTE PTR [rdi+0x65]
   14000a4c8:	je     0x14000a516
   14000a4ca:	(bad)  
   14000a4cb:	jae    0x14000a541
   14000a4cd:	rex.RB jb 0x14000a542
   14000a4d0:	outs   dx,DWORD PTR ds:[rsi]
   14000a4d1:	jb     0x14000a4d3
   14000a4d3:	add    BYTE PTR [rax],cl
   14000a4d5:	add    al,BYTE PTR [rdi+0x65]
   14000a4d8:	je     0x14000a51d
   14000a4da:	outs   dx,DWORD PTR ds:[rsi]
   14000a4db:	outs   dx,BYTE PTR ds:[rsi]
   14000a4dc:	jae    0x14000a54d
   14000a4de:	ins    BYTE PTR es:[rdi],dx
   14000a4df:	gs push rdi
   14000a4e1:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14000a4e8:	js     0x14000a4ef
   14000a4ea:	push   rbx
   14000a4eb:	ins    BYTE PTR es:[rdi],dx
   14000a4ec:	gs gs jo 0x14000a4f0
   14000a4f0:	fadd   DWORD PTR [rcx]
   14000a4f2:	rex.RXB
   14000a4f3:	gs je  0x14000a539
   14000a4f6:	outs   dx,DWORD PTR ds:[rsi]
   14000a4f7:	ins    DWORD PTR es:[rdi],dx
   14000a4f8:	ins    DWORD PTR es:[rdi],dx
   14000a4f9:	(bad)  
   14000a4fa:	outs   dx,BYTE PTR ds:[rsi]
   14000a4fb:	imul   r13,QWORD PTR fs:[rsi+0x65],0x3440057
   14000a504:	rex.W
   14000a505:	gs (bad) 
   14000a507:	jo     0x14000a54a
   14000a509:	ins    BYTE PTR es:[rdi],dx
   14000a50a:	ins    BYTE PTR es:[rdi],dx
   14000a50b:	outs   dx,DWORD PTR ds:[rsi]
   14000a50c:	movsxd eax,DWORD PTR [rax]
   14000a50e:	rex.WXB add rcx,QWORD PTR [r8+0x65]
   14000a512:	(bad)  
   14000a513:	jo     0x14000a567
   14000a515:	gs rex.B ins BYTE PTR es:[rdi],dx
   14000a518:	ins    BYTE PTR es:[rdi],dx
   14000a519:	outs   dx,DWORD PTR ds:[rsi]
   14000a51a:	movsxd eax,DWORD PTR [rax]
   14000a51c:	loop   0x14000a51e
   14000a51e:	rex.XB jb 0x14000a586
   14000a521:	(bad)  
   14000a522:	je     0x14000a589
   14000a524:	push   rax
   14000a525:	jb     0x14000a596
   14000a527:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a52a:	jae    0x14000a583
   14000a52c:	add    BYTE PTR [rax],al
   14000a52e:	test   al,0x1
   14000a530:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000a532:	jb     0x14000a5a1
   14000a534:	(bad)  
   14000a535:	je     0x14000a584
   14000a537:	gs jae 0x14000a5ad
   14000a53a:	(bad)  
   14000a53b:	addr32 gs push rdi
   14000a53e:	add    BYTE PTR [rax],al
   14000a540:	(bad)
   14000a544:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a547:	rex.RX jb 0x14000a5af
   14000a54a:	add    BYTE PTR gs:[rcx],al
   14000a54d:	add    eax,0x43746553
   14000a552:	outs   dx,DWORD PTR ds:[rsi]
   14000a553:	outs   dx,BYTE PTR ds:[rsi]
   14000a554:	jae    0x14000a5c5
   14000a556:	ins    BYTE PTR es:[rdi],dx
   14000a557:	gs push rsp
   14000a559:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x4c000057
   14000a561:	add    ecx,DWORD PTR [rax+0x65]
   14000a564:	(bad)  
   14000a565:	jo     0x14000a5ba
   14000a567:	gs je  0x14000a5b3
   14000a56a:	outs   dx,BYTE PTR ds:[rsi]
   14000a56b:	outs   dx,WORD PTR ds:[rsi]
   14000a56d:	jb     0x14000a5dc
   14000a56f:	(bad)  
   14000a570:	je     0x14000a5db
   14000a572:	outs   dx,DWORD PTR ds:[rsi]
   14000a573:	outs   dx,BYTE PTR ds:[rsi]
   14000a574:	add    BYTE PTR [rax],al
   14000a576:	adc    al,BYTE PTR [rip+0x45746553]        # 0x185750acf
   14000a57c:	jb     0x14000a5f0
   14000a57e:	outs   dx,DWORD PTR ds:[rsi]
   14000a57f:	jb     0x14000a5ce
   14000a581:	outs   dx,DWORD PTR ds:[rsi]
   14000a582:	fs add BYTE PTR gs:[rax],al
   14000a586:	out    dx,al
   14000a587:	add    BYTE PTR [rbx+0x72],al
   14000a58a:	gs (bad) 
   14000a58c:	je     0x14000a5f3
   14000a58e:	push   rsp
   14000a58f:	push   0x64616572
   14000a594:	add    BYTE PTR [rax],al
   14000a596:	rol    DWORD PTR [rip+0x74696157],1        # 0x1b46a06f3
   14000a59c:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000a59e:	jb     0x14000a5ed
   14000a5a0:	jne    0x14000a60e
   14000a5a2:	je     0x14000a60d
   14000a5a4:	jo     0x14000a612
   14000a5a6:	gs rex.WRXB (bad) 
   14000a5a9:	push   0x65
   14000a5ab:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   14000a5af:	add    BYTE PTR [rbx+0x1],ah
   14000a5b2:	rex.RB js 0x14000a625
   14000a5b5:	(bad)  
   14000a5b6:	outs   dx,BYTE PTR ds:[rsi]
   14000a5b7:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14000a5ba:	jbe    0x14000a625
   14000a5bc:	jb     0x14000a62d
   14000a5be:	outs   dx,BYTE PTR ds:[rsi]
   14000a5bf:	ins    DWORD PTR es:[rdi],dx
   14000a5c0:	outs   dx,BYTE PTR gs:[rsi]
   14000a5c2:	je     0x14000a617
   14000a5c4:	je     0x14000a638
   14000a5c6:	imul   ebp,DWORD PTR [rsi+0x67],0xba005773
   14000a5cd:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14000a5d1:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   14000a5da:	add    BYTE PTR [rax],al
   14000a5dc:	lods   eax,DWORD PTR ds:[rsi]
   14000a5dd:	add    al,BYTE PTR [rdi+0x65]
   14000a5e0:	je     0x14000a632
   14000a5e2:	jb     0x14000a653
   14000a5e4:	movsxd eax,DWORD PTR [rcx+0x64]
   14000a5e7:	fs jb  0x14000a64f
   14000a5ea:	jae    0x14000a65f
   14000a5ec:	add    BYTE PTR [rax],al
   14000a5ee:	cmc    
   14000a5ef:	add    al,BYTE PTR [rdi+0x65]
   14000a5f2:	je     0x14000a648
   14000a5f4:	gs ins DWORD PTR es:[rdi],dx
   14000a5f6:	jo     0x14000a648
   14000a5f8:	(bad)  
   14000a5f9:	je     0x14000a663
   14000a5fb:	push   rdi
   14000a5fc:	add    BYTE PTR [rax],al
   14000a5fe:	out    0x2,al
   14000a600:	rex.RXB
   14000a601:	gs je  0x14000a657
   14000a604:	jns    0x14000a679
   14000a606:	je     0x14000a66d
   14000a608:	ins    DWORD PTR es:[rdi],dx
   14000a609:	push   rsp
   14000a60a:	imul   ebp,DWORD PTR [rbp+0x65],0x4300b700
   14000a611:	jb     0x14000a678
   14000a613:	(bad)  
   14000a614:	je     0x14000a67b
   14000a616:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14000a61e:	jns    0x14000a677
   14000a620:	add    BYTE PTR [rax],al
   14000a622:	stos   BYTE PTR es:[rdi],al
   14000a623:	add    BYTE PTR [rbx+0x6f],al
   14000a626:	jo     0x14000a6a1
   14000a628:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x53051a00
   14000a631:	gs je  0x14000a67a
   14000a634:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14000a63c:	(bad)  
   14000a63d:	jne    0x14000a6b3
   14000a63f:	gs jae 0x14000a699
   14000a642:	add    BYTE PTR [rax],al
   14000a644:	sbb    BYTE PTR [rdx],al
   14000a646:	rex.RXB
   14000a647:	gs je  0x14000a68d
   14000a64a:	jne    0x14000a6be
   14000a64c:	jb     0x14000a6b3
   14000a64e:	outs   dx,BYTE PTR ds:[rsi]
   14000a64f:	je     0x14000a6a1
   14000a651:	jb     0x14000a6c2
   14000a653:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a656:	jae    0x14000a658
   14000a658:	test   BYTE PTR [rax],al
   14000a65a:	rex.XB ins BYTE PTR es:[rdi],dx
   14000a65c:	outs   dx,DWORD PTR ds:[rsi]
   14000a65d:	jae    0x14000a6c4
   14000a65f:	rex.W (bad) 
   14000a661:	outs   dx,BYTE PTR ds:[rsi]
   14000a662:	fs ins BYTE PTR es:[rdi],dx
   14000a664:	add    BYTE PTR gs:[rbp+0x2],al
   14000a668:	rex.RXB
   14000a669:	gs je  0x14000a6b2
   14000a66c:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14000a674:	(bad)  
   14000a675:	jne    0x14000a6eb
   14000a677:	gs jae 0x14000a6d1
   14000a67a:	add    BYTE PTR [rax],al
   14000a67c:	rex.X add al,BYTE PTR [rdi+0x65]
   14000a680:	je     0x14000a6c8
   14000a682:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14000a68a:	(bad)  
   14000a68b:	jne    0x14000a701
   14000a68d:	gs jae 0x14000a6d5
   14000a690:	js     0x14000a6e9
   14000a692:	add    BYTE PTR [rax],al
   14000a694:	sbb    DWORD PTR [rdx],eax
   14000a696:	rex.RXB
   14000a697:	gs je  0x14000a6dd
   14000a69a:	jne    0x14000a70e
   14000a69c:	jb     0x14000a703
   14000a69e:	outs   dx,BYTE PTR ds:[rsi]
   14000a69f:	je     0x14000a6f1
   14000a6a1:	jb     0x14000a712
   14000a6a3:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a6a6:	jae    0x14000a6f1
   14000a6a8:	add    BYTE PTR fs:[rdx+0x2],dh
   14000a6ac:	rex.RXB
   14000a6ad:	gs je  0x14000a6fd
   14000a6b0:	outs   dx,DWORD PTR ds:[rsi]
   14000a6b1:	fs jne 0x14000a720
   14000a6b4:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14000a6be:	add    BYTE PTR [rax],al
   14000a6c0:	rol    DWORD PTR [rdx],1
   14000a6c2:	rex.RXB
   14000a6c3:	gs je  0x14000a719
   14000a6c6:	je     0x14000a72c
   14000a6c8:	rex.W (bad) 
   14000a6ca:	outs   dx,BYTE PTR ds:[rsi]
   14000a6cb:	fs ins BYTE PTR es:[rdi],dx
   14000a6cd:	add    BYTE PTR gs:[rax],al
   14000a6d0:	inc    DWORD PTR [rbx+rdx*2]
   14000a6d3:	gs je  0x14000a719
   14000a6d6:	outs   dx,DWORD PTR ds:[rsi]
   14000a6d7:	outs   dx,BYTE PTR ds:[rsi]
   14000a6d8:	jae    0x14000a749
   14000a6da:	ins    BYTE PTR es:[rdi],dx
   14000a6db:	gs push rsp
   14000a6dd:	gs js  0x14000a754
   14000a6e0:	rex.B je 0x14000a757
   14000a6e3:	jb     0x14000a74e
   14000a6e5:	(bad)  
   14000a6e6:	jne    0x14000a75c
   14000a6e8:	add    BYTE PTR gs:[rcx+0x2],bl
   14000a6ec:	rex.RXB
   14000a6ed:	gs je  0x14000a736
   14000a6f0:	jne    0x14000a75e
   14000a6f2:	ins    BYTE PTR es:[rdi],dx
   14000a6f3:	push   rax
   14000a6f4:	(bad)  
   14000a6f5:	je     0x14000a75f
   14000a6f7:	rex.WRX (bad) 
   14000a6f9:	ins    DWORD PTR es:[rdi],dx
   14000a6fa:	gs push rdi
   14000a6fc:	add    BYTE PTR [rax],al
   14000a6fe:	lods   al,BYTE PTR ds:[rsi]
   14000a6ff:	add    DWORD PTR [rsi+0x72],eax
   14000a702:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   14000a70c:	adc    DWORD PTR [rip+0x45746553],eax        # 0x185750c65
   14000a712:	outs   dx,BYTE PTR ds:[rsi]
   14000a713:	jbe    0x14000a77e
   14000a715:	jb     0x14000a786
   14000a717:	outs   dx,BYTE PTR ds:[rsi]
   14000a718:	ins    DWORD PTR es:[rdi],dx
   14000a719:	outs   dx,BYTE PTR gs:[rsi]
   14000a71b:	je     0x14000a773
   14000a71d:	(bad)  
   14000a71e:	jb     0x14000a789
   14000a720:	(bad)  
   14000a721:	(bad)  
   14000a722:	ins    BYTE PTR es:[rdi],dx
   14000a723:	gs push rdi
   14000a725:	add    BYTE PTR [rbx+0x45],cl
   14000a728:	push   rdx
   14000a729:	rex.WRX
   14000a72a:	rex.RB
   14000a72b:	xor    r14,QWORD PTR [rdx]
   14000a72e:	cs fs ins BYTE PTR es:[rdi],dx
   14000a731:	ins    BYTE PTR es:[rdi],dx
   14000a732:	add    BYTE PTR [rax],al
   14000a734:	and    BYTE PTR [rip+0x69727077],al        # 0x1a97317b1
   14000a73a:	outs   dx,BYTE PTR ds:[rsi]
   14000a73b:	je     0x14000a7a3
   14000a73d:	add    BYTE PTR [rcx],bh
   14000a73f:	add    al,0x66
   14000a741:	data16 ins BYTE PTR es:[rdi],dx
   14000a743:	jne    0x14000a7b8
   14000a745:	push   0x16c0000
   14000a74a:	pop    rdi
   14000a74b:	addr32 gs je 0x14000a7c6
   14000a74f:	movsxd ebp,DWORD PTR [rax+0x0]
   14000a752:	in     al,dx
   14000a753:	add    al,0x74
   14000a755:	outs   dx,DWORD PTR ds:[rsi]
   14000a756:	ja     0x14000a7cd
   14000a758:	jo     0x14000a7ca
   14000a75a:	gs jb  0x14000a75d
   14000a75d:	add    BYTE PTR [rax*1+0x73736377],dl
   14000a764:	je     0x14000a7d8
   14000a766:	add    BYTE PTR [rax],al
   14000a768:	xor    al,BYTE PTR [riz*2+0x746978]
   14000a76f:	add    dl,bh
   14000a771:	add    al,0x76
   14000a773:	jae    0x14000a7ec
   14000a775:	jo     0x14000a7e9
   14000a777:	imul   ebp,DWORD PTR [rsi+0x74],0x735f66
   14000a77e:	mov    al,BYTE PTR [rbx]
   14000a780:	pop    rdi
   14000a781:	ja     0x14000a7e6
   14000a783:	jae    0x14000a7ee
   14000a785:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000a788:	add    BYTE PTR [rax],al
   14000a78a:	xchg   esp,eax
   14000a78b:	add    ebx,DWORD PTR [rdi+0x77]
   14000a78e:	movsxd esi,DWORD PTR [rbx+0x6e]
   14000a791:	imul   esp,DWORD PTR [rbx+0x6d],0x5050070
   14000a798:	ja     0x14000a7fd
   14000a79a:	jae    0x14000a7ff
   14000a79c:	jo     0x14000a817
   14000a79e:	pop    rdi
   14000a79f:	jae    0x14000a7a1
   14000a7a1:	add    ah,bl
   14000a7a3:	add    al,0x73
   14000a7a5:	ja     0x14000a817
   14000a7a7:	jb     0x14000a812
   14000a7a9:	outs   dx,BYTE PTR ds:[rsi]
   14000a7aa:	je     0x14000a812
   14000a7ac:	pop    rdi
   14000a7ad:	jae    0x14000a7af
   14000a7af:	add    BYTE PTR [rax],al
   14000a7b1:	add    eax,0x63736377
   14000a7b6:	(bad)  
   14000a7b7:	je     0x14000a818
   14000a7b9:	jae    0x14000a7bb
   14000a7bb:	add    BYTE PTR [rax],dl
   14000a7bd:	add    eax,0x72736377
   14000a7c2:	movsxd ebp,DWORD PTR [rax+0x72]
   14000a7c5:	add    BYTE PTR [rbx+0x3],ch
   14000a7c8:	pop    rdi
   14000a7c9:	jbe    0x14000a83e
   14000a7cb:	outs   dx,BYTE PTR ds:[rsi]
   14000a7cc:	ja     0x14000a83e
   14000a7ce:	jb     0x14000a839
   14000a7d0:	outs   dx,BYTE PTR ds:[rsi]
   14000a7d1:	je     0x14000a839
   14000a7d3:	pop    rdi
   14000a7d4:	jae    0x14000a7d6
   14000a7d6:	(bad)  
   14000a7d7:	add    ebx,DWORD PTR [rdi+0x76]
   14000a7da:	jae    0x14000a83f
   14000a7dc:	ja     0x14000a84e
   14000a7de:	jb     0x14000a849
   14000a7e0:	outs   dx,BYTE PTR ds:[rsi]
   14000a7e1:	je     0x14000a849
   14000a7e3:	add    BYTE PTR [rip+0x74775f04],al        # 0x1b47806ed
   14000a7e9:	outs   dx,DWORD PTR ds:[rsi]
   14000a7ea:	imul   eax,DWORD PTR [rax],0x6f7404e9
   14000a7f0:	ins    BYTE PTR es:[rdi],dx
   14000a7f1:	outs   dx,DWORD PTR ds:[rsi]
   14000a7f2:	ja     0x14000a859
   14000a7f4:	jb     0x14000a7f6
   14000a7f6:	rex.WR add al,0x66
   14000a7f9:	jb     0x14000a860
   14000a7fb:	add    BYTE PTR gs:[rax],al
   14000a7fe:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000a805:	movsxd eax,DWORD PTR [rax]
   14000a807:	add    BYTE PTR [rdi+0x61635f00],bh
   14000a80d:	ins    BYTE PTR es:[rdi],dx
   14000a80e:	ins    BYTE PTR es:[rdi],dx
   14000a80f:	outs   dx,BYTE PTR ds:[rsi]
   14000a810:	gs ja  0x14000a87b
   14000a813:	add    BYTE PTR [rbp+0x0],dl
   14000a816:	pop    rdi
   14000a817:	pop    rax
   14000a818:	movsxd esi,DWORD PTR [rax+0x74]
   14000a81b:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000a824:	pop    rdi
   14000a825:	(bad)  
   14000a826:	ins    DWORD PTR es:[rdi],dx
   14000a827:	jae    0x14000a890
   14000a829:	pop    rdi
   14000a82a:	gs js  0x14000a896
   14000a82d:	je     0x14000a82f
   14000a82f:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000a835:	addr32 gs je 0x14000a8a6
   14000a839:	(bad)  
   14000a83a:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000a841:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000a847:	gs je  0x14000a8a9
   14000a84a:	(bad)  
   14000a84b:	jo     0x14000a8bd
   14000a84d:	pop    rdi
   14000a84e:	je     0x14000a8c9
   14000a850:	jo     0x14000a8b7
   14000a852:	add    BYTE PTR [rax],al
   14000a854:	(bad)  
   14000a855:	add    DWORD PTR [rdi+0x65],ebx
   14000a858:	js     0x14000a8c3
   14000a85a:	je     0x14000a85c
   14000a85c:	rol    DWORD PTR [rax],0x5f
   14000a85f:	movsxd esp,DWORD PTR [rbp+0x78]
   14000a862:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000a86a:	jae    0x14000a8d1
   14000a86c:	je     0x14000a8e3
   14000a86e:	jae    0x14000a8d5
   14000a870:	jb     0x14000a8df
   14000a872:	(bad)  
   14000a873:	je     0x14000a8dd
   14000a875:	gs jb  0x14000a8ea
   14000a878:	add    BYTE PTR [rax],al
   14000a87a:	jge    0x14000a87d
   14000a87c:	pop    rdi
   14000a87d:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000a884:	ins    DWORD PTR es:[rdi],dx
   14000a885:	add    BYTE PTR [rdi+0x0],dl
   14000a888:	pop    rdi
   14000a889:	pop    rdi
   14000a88a:	rex.XB pop r15
   14000a88c:	jae    0x14000a8fe
   14000a88e:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000a892:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000a899:	ins    BYTE PTR es:[rdi],dx
   14000a89a:	gs jb  0x14000a89d
   14000a89d:	add    BYTE PTR [rdi],ah
   14000a89f:	add    DWORD PTR [rdi+0x66],ebx
   14000a8a2:	ins    DWORD PTR es:[rdi],dx
   14000a8a3:	outs   dx,DWORD PTR ds:[rsi]
   14000a8a4:	fs add BYTE PTR gs:[rax],al
   14000a8a8:	rol    BYTE PTR [rax],cl
   14000a8aa:	pop    rdi
   14000a8ab:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000a8ae:	ins    DWORD PTR es:[rdi],dx
   14000a8af:	outs   dx,DWORD PTR ds:[rsi]
   14000a8b0:	fs add BYTE PTR gs:[rax],al
   14000a8b4:	ins    DWORD PTR es:[rdi],dx
   14000a8b5:	jae    0x14000a92d
   14000a8b7:	movsxd esi,DWORD PTR [rdx+0x74]
   14000a8ba:	cs fs ins BYTE PTR es:[rdi],dx
   14000a8bd:	ins    BYTE PTR es:[rdi],dx
   14000a8be:	add    BYTE PTR [rax],al
   14000a8c0:	out    0x1,al
   14000a8c2:	pop    rdi
   14000a8c3:	ins    BYTE PTR es:[rdi],dx
   14000a8c4:	outs   dx,DWORD PTR ds:[rsi]
   14000a8c5:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000a8c8:	add    ebx,DWORD PTR [r15+0x75]
   14000a8cc:	outs   dx,BYTE PTR ds:[rsi]
   14000a8cd:	ins    BYTE PTR es:[rdi],dx
   14000a8ce:	outs   dx,DWORD PTR ds:[rsi]
   14000a8cf:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000a8d2:	jnp    0x14000a8d4
   14000a8d4:	pop    rdi
   14000a8d5:	pop    rdi
   14000a8d6:	fs ins BYTE PTR es:[rdi],dx
   14000a8d8:	ins    BYTE PTR es:[rdi],dx
   14000a8d9:	outs   dx,DWORD PTR ds:[rsi]
   14000a8da:	outs   dx,BYTE PTR ds:[rsi]
   14000a8db:	gs js  0x14000a947
   14000a8de:	je     0x14000a8e0
   14000a8e0:	nop
   14000a8e1:	add    bl,BYTE PTR [rdi+0x6f]
   14000a8e4:	outs   dx,BYTE PTR ds:[rsi]
   14000a8e5:	gs js  0x14000a951
   14000a8e8:	je     0x14000a8ea
   14000a8ea:	(bad)  
   14000a8eb:	add    BYTE PTR [rdi],bh
   14000a8ed:	je     0x14000a954
   14000a8ef:	jb     0x14000a95e
   14000a8f1:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000a8f8:	pop    rcx
   14000a8f9:	pop    r8
   14000a8fb:	pop    rax
   14000a8fc:	pop    rdx
   14000a8fd:	add    BYTE PTR [rdx],dl
   14000a8ff:	add    BYTE PTR [rdi],bh
   14000a901:	(bad)  
   14000a902:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14000a906:	gs pop rdi
   14000a908:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14000a90f:	rex.RB
   14000a910:	rex.B
   14000a911:	rex.B
   14000a912:	rex pop rax
   14000a914:	pop    rdx
   14000a915:	add    BYTE PTR [rax+rax*1+0x57666544],ah
   14000a91c:	imul   ebp,DWORD PTR [rsi+0x64],0x7250776f
   14000a923:	outs   dx,DWORD PTR ds:[rsi]
   14000a924:	movsxd edx,DWORD PTR [rdi+0x0]
   14000a927:	add    BYTE PTR [rbx],bh
   14000a929:	add    cl,BYTE PTR [rdi+rbp*2+0x61]
   14000a92d:	movsxd rbp,DWORD PTR fs:[r15+0x6e]
   14000a932:	push   rdi
   14000a933:	add    BYTE PTR [rcx],bh
   14000a935:	add    cl,BYTE PTR [rdi+rbp*2+0x61]
   14000a939:	fs rex.XB jne 0x14000a9af
   14000a93d:	jae    0x14000a9ae
   14000a93f:	jb     0x14000a998
   14000a941:	add    BYTE PTR [rbx+0x67655202],dh
   14000a947:	imul   esi,DWORD PTR [rbx+0x74],0x6c437265
   14000a94e:	(bad)  
   14000a94f:	jae    0x14000a9c4
   14000a951:	rex.RB js 0x14000a9ab
   14000a954:	add    BYTE PTR [rax],al
   14000a956:	jae    0x14000a958
   14000a958:	rex.XB jb 0x14000a9c0
   14000a95b:	(bad)  
   14000a95c:	je     0x14000a9c3
   14000a95e:	push   rdi
   14000a95f:	imul   ebp,DWORD PTR [rsi+0x64],0x7845776f
   14000a966:	push   rdi
   14000a967:	add    BYTE PTR [rcx+rax*1+0x47],bh
   14000a96b:	gs je  0x14000a9bb
   14000a96e:	gs jae 0x14000a9e4
   14000a971:	(bad)  
   14000a972:	addr32 gs push rdi
   14000a975:	add    BYTE PTR [rsi+0x3],dh
   14000a978:	push   rsp
   14000a979:	jb     0x14000a9dc
   14000a97b:	outs   dx,BYTE PTR ds:[rsi]
   14000a97c:	jae    0x14000a9ea
   14000a97e:	(bad)  
   14000a97f:	je     0x14000a9e6
   14000a981:	rex.WRB
   14000a982:	gs jae 0x14000a9f8
   14000a985:	(bad)  
   14000a986:	add    BYTE PTR gs:[eax],al
   14000a98a:	mov    eax,0x73694400
   14000a98f:	jo     0x14000a9f2
   14000a991:	je     0x14000a9f6
   14000a993:	push   0x7373654d
   14000a998:	(bad)  
   14000a999:	addr32 gs push rdi
   14000a99c:	add    BYTE PTR [rax],al
   14000a99e:	rex.W add cl,BYTE PTR [rdi+rbp*2+0x61]
   14000a9a3:	fs push rbx
   14000a9a5:	je     0x14000aa19
   14000a9a7:	imul   ebp,DWORD PTR [rsi+0x67],0x53550057
   14000a9ae:	rex.RB push r10
   14000a9b0:	xor    esi,DWORD PTR [rdx]
   14000a9b2:	cs fs ins BYTE PTR es:[rdi],dx
   14000a9b5:	ins    BYTE PTR es:[rdi],dx
   14000a9b6:	add    BYTE PTR [rax],al
   14000a9b8:	(bad)  
   14000a9b9:	add    BYTE PTR [rbx+0x6f],al
   14000a9bc:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a9be:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000a9c6:	rex.RB js 0x14000a9c9
   14000a9c9:	add    BYTE PTR [rsi],cl
   14000a9cb:	add    BYTE PTR [rbx+0x4c],al
   14000a9ce:	push   rbx
   14000a9cf:	rex.WB
   14000a9d0:	rex.R
   14000a9d1:	rex.RX jb 0x14000aa43
   14000a9d4:	ins    DWORD PTR es:[rdi],dx
   14000a9d5:	push   rax
   14000a9d6:	jb     0x14000aa47
   14000a9d8:	addr32 rex.WB
   14000a9da:	add    BYTE PTR [rbx],r13b
   14000a9dd:	add    BYTE PTR [rbx+0x6f],al
   14000a9e0:	rex.XB jb 0x14000aa48
   14000a9e3:	(bad)  
   14000a9e4:	je     0x14000aa4b
   14000a9e6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a9e8:	jae    0x14000aa5e
   14000a9ea:	(bad)  
   14000a9eb:	outs   dx,BYTE PTR ds:[rsi]
   14000a9ec:	movsxd esp,DWORD PTR [rbp+0x0]
   14000a9ef:	add    BYTE PTR [rdi+0x6c],ch
   14000a9f2:	xor    esi,DWORD PTR gs:[rdx]
   14000a9f5:	cs fs ins BYTE PTR es:[rdi],dx
   14000a9f8:	ins    BYTE PTR es:[rdi],dx
   14000a9f9:	add    BYTE PTR [rdi+0x4c],cl
   14000a9fc:	rex.RB
   14000a9fd:	push   r13
   14000a9ff:	push   rsp
   14000aa00:	xor    esi,DWORD PTR [rdx]
   14000aa02:	cs fs ins BYTE PTR es:[rdi],dx
   14000aa05:	ins    BYTE PTR es:[rdi],dx
   14000aa06:	add    BYTE PTR [rax],al
   14000aa08:	mov    ecx,0x65685301
   14000aa0d:	ins    BYTE PTR es:[rdi],dx
   14000aa0e:	ins    BYTE PTR es:[rdi],dx
   14000aa0f:	rex.RB js 0x14000aa77
   14000aa12:	movsxd esi,DWORD PTR [rbp+0x74]
   14000aa15:	gs push rdi
   14000aa17:	add    BYTE PTR [rbx+0x48],dl
   14000aa1a:	rex.RB
   14000aa1b:	rex.WR
   14000aa1c:	xor    r14,QWORD PTR [rdx]
   14000aa1f:	cs fs ins BYTE PTR es:[rdi],dx
   14000aa22:	ins    BYTE PTR es:[rdi],dx
   14000aa23:	add    BYTE PTR [rbx],al
   14000aa25:	add    BYTE PTR [rbx+0x65],dl
   14000aa28:	je     0x14000aa9f
   14000aa2a:	jo     0x14000aa7e
   14000aa2c:	jne    0x14000aa9c
   14000aa2e:	je     0x14000aa99
   14000aa30:	ins    DWORD PTR es:[rdi],dx
   14000aa31:	rex.WB outs dx,BYTE PTR gs:[rsi]
   14000aa34:	outs   dx,WORD PTR ds:[rsi]
   14000aa36:	add    BYTE PTR [rax],al
   14000aa38:	jb     0x14000aaae
   14000aa3a:	imul   ebp,DWORD PTR [rsi+0x66],0x6c642e6f
   14000aa41:	ins    BYTE PTR es:[rdi],dx
   14000aa42:	add    BYTE PTR [rax],al
   14000aa44:	add    BYTE PTR [rax],0x53
   14000aa47:	gs je  0x14000aa93
   14000aa4a:	rex.WB push r11
   14000aa4c:	rex.RB js 0x14000aabf
   14000aa4f:	jb     0x14000aab6
   14000aa51:	jae    0x14000aac6
   14000aa53:	push   rbp
   14000aa54:	jae    0x14000aabb
   14000aa56:	jb     0x14000aa9b
   14000aa58:	jne    0x14000aacd
   14000aa5a:	je     0x14000aacb
   14000aa5c:	ins    DWORD PTR es:[rdi],dx
   14000aa5d:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000aa5f:	ins    DWORD PTR es:[rdi],dx
   14000aa60:	gs push rax
   14000aa62:	(bad)  
   14000aa63:	je     0x14000aacd
   14000aa65:	add    BYTE PTR [rdx+0x0],bh
   14000aa68:	rex.RXB
   14000aa69:	gs je  0x14000aab5
   14000aa6c:	rex.WB push r11
   14000aa6e:	rex.RB js 0x14000aae1
   14000aa71:	jb     0x14000aad8
   14000aa73:	jae    0x14000aae8
   14000aa75:	push   rbp
   14000aa76:	jae    0x14000aadd
   14000aa78:	jb     0x14000aabb
   14000aa7a:	jo     0x14000aaec
   14000aa7c:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000aa7e:	jae    0x14000aaf4
   14000aa80:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000aa82:	outs   dx,BYTE PTR ds:[rsi]
   14000aa83:	imul   sp,WORD PTR [rdi+0x46],0x6c69
   14000aa89:	add    BYTE PTR gs:[rax],al
   14000aa8c:	add    DWORD PTR [rax],0x75746553
   14000aa92:	jo     0x14000aadd
   14000aa94:	rex.WB push r11
   14000aa96:	rex.RB js 0x14000ab09
   14000aa99:	jb     0x14000ab00
   14000aa9b:	jae    0x14000ab10
   14000aa9d:	push   rbp
   14000aa9e:	jae    0x14000ab05
   14000aaa0:	jb     0x14000aaea
   14000aaa2:	outs   dx,DWORD PTR ds:[rsi]
   14000aaa3:	ins    DWORD PTR es:[rdi],dx
   14000aaa4:	add    BYTE PTR gs:[rcx+0x49],cl
   14000aaa8:	push   rbx
   14000aaa9:	rex.RB pop r8
   14000aaab:	push   rax
   14000aaac:	push   rdx
   14000aaad:	rex.RB push r11
   14000aaaf:	push   rbx
   14000aab0:	rex.W
   14000aab1:	rex.RB
   14000aab2:	rex.WR push rax
   14000aab4:	rex.RB push r10
   14000aab6:	cs fs ins BYTE PTR es:[rdi],dx
   14000aab9:	ins    BYTE PTR es:[rdi],dx
   14000aaba:	add    BYTE PTR [rax],al
   14000aabc:	add    edi,DWORD PTR [r15]
   14000aabf:	push   rdx
   14000aac0:	gs jae 0x14000ab2c
   14000aac3:	jp     0x14000ab2a
   14000aac5:	rex
   14000aac6:	rex.X push rbp
   14000aac8:	rex.RX
   14000aac9:	rex.RX
   14000aaca:	rex.RB push r10
   14000aacc:	rex
   14000aacd:	rex push rcx
   14000aacf:	rex.RB
   14000aad0:	rex.B
   14000aad1:	pop    r15
   14000aad3:	rex.WRX
   14000aad4:	rex.WXB
   14000aad5:	rex pop rdx
   14000aad7:	add    dl,dl
   14000aad9:	add    DWORD PTR [rdi],edi
   14000aadb:	rex.RX jb 0x14000ab43
   14000aade:	gs rex.WRB
   14000aae0:	gs ins DWORD PTR es:[rdi],dx
   14000aae2:	outs   dx,DWORD PTR ds:[rsi]
   14000aae3:	jb     0x14000ab5e
   14000aae5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000aae7:	je     0x14000ab4e
   14000aae9:	jb     0x14000ab59
   14000aaeb:	(bad)  
   14000aaec:	ins    BYTE PTR es:[rdi],dx
   14000aaed:	rex
   14000aaee:	rex.X push rbp
   14000aaf0:	rex.RX
   14000aaf1:	rex.RX
   14000aaf2:	rex.RB push r10
   14000aaf4:	rex
   14000aaf5:	rex
   14000aaf6:	rex.B
   14000aaf7:	rex.RB
   14000aaf8:	rex.B
   14000aaf9:	pop    r8
   14000aafb:	pop    rax
   14000aafc:	pop    rdx
   14000aafd:	add    BYTE PTR [rdx],cl
   14000aaff:	add    DWORD PTR [rdi],edi
   14000ab01:	rex.B jne 0x14000ab7c
   14000ab04:	rex.B jo 0x14000ab77
   14000ab07:	outs   dx,BYTE PTR gs:[rsi]
   14000ab09:	fs rex push rbx
   14000ab0c:	push   rsp
   14000ab0d:	push   rdx
   14000ab0e:	rex.B
   14000ab0f:	rex
   14000ab10:	rex
   14000ab11:	rex.B
   14000ab12:	rex.RB
   14000ab13:	rex.B
   14000ab14:	rex.B
   14000ab15:	rex.WX push rax
   14000ab17:	rex.RB
   14000ab18:	rex.X
   14000ab19:	rex.RB
   14000ab1a:	rex.WXB
   14000ab1b:	rex.WXB pop r15
   14000ab1d:	rex.WRX
   14000ab1e:	rex pop rdx
   14000ab20:	add    BYTE PTR [rax],al
   14000ab22:	rex.WB
   14000ab23:	rex.WB push r11
   14000ab25:	push   rbp
   14000ab26:	push   rsp
   14000ab27:	rex.WB
   14000ab28:	rex.WR xor r13b,BYTE PTR [rsi]
   14000ab2b:	fs ins BYTE PTR es:[rdi],dx
   14000ab2d:	ins    BYTE PTR es:[rdi],dx
   14000ab2e:	add    BYTE PTR [rax],al
   14000ab30:	(bad)  
   14000ab31:	add    BYTE PTR [rcx+0x6e],cl
   14000ab34:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000ab3c:	rex.WRX (bad) 
   14000ab3e:	je     0x14000aba9
   14000ab40:	jbe    0x14000aba7
   14000ab42:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ab44:	outs   dx,BYTE PTR ds:[rsi]
   14000ab45:	imul   sp,WORD PTR [rdi+0x75],0x6172
   14000ab4b:	je     0x14000abb6
   14000ab4d:	outs   dx,DWORD PTR ds:[rsi]
   14000ab4e:	outs   dx,BYTE PTR ds:[rsi]
   14000ab4f:	add    BYTE PTR [rsi+0x61],ch
   14000ab52:	je     0x14000abbd
   14000ab54:	jbe    0x14000abc8
   14000ab56:	xor    ch,BYTE PTR fs:[rsi]
   14000ab59:	fs ins BYTE PTR es:[rdi],dx
   14000ab5b:	ins    BYTE PTR es:[rdi],dx
   14000ab5c:	add    BYTE PTR [rax],al
   14000ab5e:	imul   eax,DWORD PTR [rip+0x55746553],0x6e61686e        # 0x1957510bb
   14000ab68:	fs ins BYTE PTR es:[rdi],dx
   14000ab6a:	gs fs rex.RB js 0x14000abd2
   14000ab6f:	gs jo  0x14000abe6
   14000ab72:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000ab79:	gs jb  0x14000ab7c
   14000ab7c:	rex.B add al,0x51
   14000ab7f:	jne    0x14000abe6
   14000ab81:	jb     0x14000abfc
   14000ab83:	push   rax
   14000ab84:	gs jb  0x14000abed
   14000ab87:	outs   dx,DWORD PTR ds:[rsi]
   14000ab88:	jb     0x14000abf7
   14000ab8a:	(bad)  
   14000ab8b:	outs   dx,BYTE PTR ds:[rsi]
   14000ab8c:	movsxd esp,DWORD PTR [rbp+0x43]
   14000ab8f:	outs   dx,DWORD PTR ds:[rsi]
   14000ab90:	jne    0x14000ac00
   14000ab92:	je     0x14000abf9
   14000ab94:	jb     0x14000ab96
   14000ab96:	sbb    eax,0x74654702
   14000ab9b:	rex.XB jne 0x14000ac10
   14000ab9e:	jb     0x14000ac05
   14000aba0:	outs   dx,BYTE PTR ds:[rsi]
   14000aba1:	je     0x14000abf7
   14000aba3:	push   0x64616572
   14000aba8:	rex.WB
   14000aba9:	add    BYTE PTR fs:[rax],al
   14000abac:	call   0x1b465f2b3
   14000abb1:	push   rbx
   14000abb2:	jns    0x14000ac27
   14000abb4:	je     0x14000ac1b
   14000abb6:	ins    DWORD PTR es:[rdi],dx
   14000abb7:	push   rsp
   14000abb8:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000abbf:	ins    BYTE PTR es:[rdi],dx
   14000abc0:	gs push rsp
   14000abc2:	imul   ebp,DWORD PTR [rbp+0x65],0x47030500
   14000abc9:	gs je  0x14000ac20
   14000abcc:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000abd3:	je     0x14000abd5
   14000abd5:	add    dl,al
   14000abd7:	add    al,0x52
   14000abd9:	je     0x14000ac47
   14000abdb:	rex.XB (bad) 
   14000abdd:	jo     0x14000ac53
   14000abdf:	jne    0x14000ac53
   14000abe1:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000abe4:	outs   dx,BYTE PTR ds:[rsi]
   14000abe5:	je     0x14000ac4c
   14000abe7:	js     0x14000ac5d
   14000abe9:	add    cl,cl
   14000abeb:	add    al,0x52
   14000abed:	je     0x14000ac5b
   14000abef:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000abf1:	outs   dx,DWORD PTR ds:[rsi]
   14000abf2:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000abf6:	jne    0x14000ac66
   14000abf8:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000abfc:	outs   dx,BYTE PTR ds:[rsi]
   14000abfd:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000abff:	je     0x14000ac73
   14000ac01:	jns    0x14000ac03
   14000ac03:	add    al,dl
   14000ac05:	add    al,0x52
   14000ac07:	je     0x14000ac75
   14000ac09:	push   rsi
   14000ac0a:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000ac11:	outs   dx,BYTE PTR ds:[rsi]
   14000ac12:	ja     0x14000ac7d
   14000ac14:	outs   dx,BYTE PTR ds:[rsi]
   14000ac15:	add    BYTE PTR fs:[rax],al
   14000ac18:	test   eax,0x686e5505
   14000ac1d:	(bad)  
   14000ac1e:	outs   dx,BYTE PTR ds:[rsi]
   14000ac1f:	fs ins BYTE PTR es:[rdi],dx
   14000ac21:	gs fs rex.RB js 0x14000ac89
   14000ac26:	gs jo  0x14000ac9d
   14000ac29:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000ac30:	gs jb  0x14000ac33
   14000ac33:	add    BYTE PTR [rdi+0x72655405],al
   14000ac39:	ins    DWORD PTR es:[rdi],dx
   14000ac3a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000ac41:	outs   dx,DWORD PTR ds:[rsi]
   14000ac42:	movsxd esp,DWORD PTR [rbp+0x73]
   14000ac45:	jae    0x14000ac47
   14000ac47:	add    BYTE PTR [rbp+0x3],bl
   14000ac4a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ac4c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000ac54:	rex.XB jb 0x14000acc0
   14000ac57:	je     0x14000acc2
   14000ac59:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ac5c:	push   rbx
   14000ac5d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000ac62:	outs   dx,BYTE PTR ds:[rsi]
   14000ac63:	rex.B outs dx,BYTE PTR ds:[rsi]
   14000ac65:	fs push rbx
   14000ac67:	jo     0x14000acd2
   14000ac69:	outs   dx,BYTE PTR ds:[rsi]
   14000ac6a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ac6c:	jne    0x14000acdc
   14000ac6e:	je     0x14000ac70
   14000ac70:	sub    al,0x3
   14000ac72:	rex.RXB ins BYTE PTR es:[rdi],dx
   14000ac74:	outs   dx,DWORD PTR ds:[rsi]
   14000ac75:	(bad)
   14000ac7a:	ins    BYTE PTR es:[rdi],dx
   14000ac7b:	outs   dx,DWORD PTR ds:[rsi]
   14000ac7c:	movsxd eax,DWORD PTR [rax]
   14000ac7e:	cs add eax,0x4c746553
   14000ac84:	(bad)  
   14000ac85:	jae    0x14000acfb
   14000ac87:	rex.RB jb 0x14000acfc
   14000ac8a:	outs   dx,DWORD PTR ds:[rsi]
   14000ac8b:	jb     0x14000ac8d
   14000ac8d:	add    BYTE PTR [rbx],cl
   14000ac8f:	(bad)  
   14000ac90:	push   rdi
   14000ac91:	jb     0x14000acfc
   14000ac93:	je     0x14000acfa
   14000ac95:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x6f4601a7
   14000ac9e:	jb     0x14000ad0d
   14000aca0:	(bad)  
   14000aca1:	je     0x14000acf0
   14000aca3:	gs jae 0x14000ad19
   14000aca6:	(bad)  
   14000aca7:	add    BYTE PTR gs:[r8d],al
   14000acac:	xor    DWORD PTR [rcx],eax
   14000acae:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000acb0:	je     0x14000ad17
   14000acb2:	jb     0x14000acf7
   14000acb4:	jb     0x14000ad1f
   14000acb6:	je     0x14000ad21
   14000acb8:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000acbb:	push   rbx
   14000acbc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000acc1:	outs   dx,BYTE PTR ds:[rsi]
   14000acc2:	add    BYTE PTR [rax],al
   14000acc4:	mov    bl,0x3
   14000acc6:	rex.WR
   14000acc7:	gs (bad) 
   14000acc9:	jbe    0x14000ad30
   14000accb:	rex.XB jb 0x14000ad37
   14000acce:	je     0x14000ad39
   14000acd0:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000acd3:	push   rbx
   14000acd4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000acd9:	outs   dx,BYTE PTR ds:[rsi]
   14000acda:	add    BYTE PTR [rax],al
   14000acdc:	add    DWORD PTR [rax],0x6f695f5f
   14000ace2:	(bad)  
   14000ace3:	pop    rdi
   14000ace4:	data16 jne 0x14000ad55
   14000ace7:	movsxd eax,DWORD PTR [rax]
   14000ace9:	add    BYTE PTR [rcx],al
   14000aceb:	add    eax,0x63736377
   14000acf0:	push   0xffffffffc5000072
   14000acf5:	add    al,0x73
   14000acf7:	je     0x14000ad6b
   14000acf9:	movsxd esi,DWORD PTR [rax+0x79]
   14000acfc:	pop    rdi
   14000acfd:	jae    0x14000acff
   14000acff:	add    BYTE PTR [rcx+0x72707304],bh
   14000ad05:	imul   ebp,DWORD PTR [rsi+0x74],0x735f66
   14000ad0c:	rol    BYTE PTR [rbx+rsi*2],cl
   14000ad0f:	je     0x14000ad83
   14000ad11:	jb     0x14000ad76
   14000ad13:	push   0x3670072
   14000ad18:	pop    rdi
   14000ad19:	jbe    0x14000ad8e
   14000ad1b:	outs   dx,BYTE PTR ds:[rsi]
   14000ad1c:	jo     0x14000ad90
   14000ad1e:	imul   ebp,DWORD PTR [rsi+0x74],0x735f66
   14000ad25:	add    al,dl
   14000ad27:	add    al,0x73
   14000ad29:	je     0x14000ad9d
   14000ad2b:	outs   dx,BYTE PTR ds:[rsi]
   14000ad2c:	ins    BYTE PTR es:[rdi],dx
   14000ad2d:	outs   dx,BYTE PTR gs:[rsi]
   14000ad2f:	add    bh,cl
   14000ad31:	add    bl,BYTE PTR [rdi+0x73]
   14000ad34:	outs   dx,BYTE PTR ds:[rsi]
   14000ad35:	jo     0x14000ada9
   14000ad37:	imul   ebp,DWORD PTR [rsi+0x74],0x735f66
   14000ad3e:	pop    rbx
   14000ad3f:	add    BYTE PTR [rdi+0x5f],bl
   14000ad42:	rex.XB js 0x14000adbd
   14000ad45:	rex.RX jb 0x14000ada9
   14000ad48:	ins    DWORD PTR es:[rdi],dx
   14000ad49:	gs rex.W (bad) 
   14000ad4c:	outs   dx,BYTE PTR ds:[rsi]
   14000ad4d:	fs ins BYTE PTR es:[rdi],dx
   14000ad4f:	gs jb  0x14000ad85
   14000ad52:	add    BYTE PTR [rax],al
   14000ad54:	xchg   edx,eax
   14000ad55:	add    al,0x6d
   14000ad57:	gs ins DWORD PTR es:[rdi],dx
   14000ad59:	movsxd esi,DWORD PTR [rax+0x79]
   14000ad5c:	add    BYTE PTR [rax],al
   14000ad5e:	xchg   esi,eax
   14000ad5f:	add    al,0x6d
   14000ad61:	gs ins DWORD PTR es:[rdi],dx
   14000ad63:	jae    0x14000adca
   14000ad65:	je     0x14000ad67
   14000ad67:	add    BYTE PTR [rdx],al
   14000ad69:	add    eax,0x63736377
   14000ad6e:	ins    DWORD PTR es:[rdi],dx
   14000ad6f:	jo     0x14000ad71
	...

Disassembly of section .data:

000000014000b000 <.data>:
   14000b000:	cwde   
   14000b001:	xchg   DWORD PTR [rax],eax
   14000b003:	rex add DWORD PTR [rax],eax
	...
   14000b01e:	add    BYTE PTR [rax],al
   14000b020:	test   al,0x87
   14000b022:	add    BYTE PTR [rax+0x1],al
	...
   14000b03d:	add    BYTE PTR [rax],al
   14000b03f:	add    BYTE PTR [rax+0x1400087],bh
	...
   14000b05d:	add    BYTE PTR [rax],al
   14000b05f:	add    al,cl
   14000b061:	xchg   DWORD PTR [rax],eax
   14000b063:	rex add DWORD PTR [rax],eax
	...
   14000b07e:	add    BYTE PTR [rax],al
   14000b080:	fadd   DWORD PTR [rdi+0x14000]
	...
   14000b09e:	add    BYTE PTR [rax],al
   14000b0a0:	loopne 0x14000b029
   14000b0a2:	add    BYTE PTR [rax+0x1],al
	...
   14000b0bd:	add    BYTE PTR [rax],al
   14000b0bf:	add    al,dh
   14000b0c1:	xchg   DWORD PTR [rax],eax
   14000b0c3:	rex add DWORD PTR [rax],eax
	...
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	or     BYTE PTR [rax+0x14000],cl
	...
   14000b0f2:	add    BYTE PTR [rax],al
   14000b0f4:	add    DWORD PTR [rax],eax
	...
   14000b0fe:	add    BYTE PTR [rax],al
   14000b100:	sbb    BYTE PTR [rax+0x14000],cl
   14000b106:	add    BYTE PTR [rax],al
   14000b108:	xor    BYTE PTR [rax+0x14000],cl
   14000b10e:	add    BYTE PTR [rax],al
   14000b110:	add    BYTE PTR [rax],al
   14000b112:	add    BYTE PTR [rax],al
   14000b114:	add    DWORD PTR [rax],eax
	...
   14000b11e:	add    BYTE PTR [rax],al
   14000b120:	mov    BYTE PTR [rax],al
   14000b123:	rex add DWORD PTR [rax],eax
   14000b126:	add    BYTE PTR [rax],al
   14000b128:	xor    BYTE PTR [rax+0x14000],cl
   14000b12e:	add    BYTE PTR [rax],al
   14000b130:	add    BYTE PTR [rax],al
   14000b132:	add    BYTE PTR [rax],al
   14000b134:	add    DWORD PTR [rax],eax
	...
   14000b13e:	add    BYTE PTR [rax],al
   14000b140:	push   rax
   14000b141:	mov    BYTE PTR [rax],al
   14000b143:	rex add DWORD PTR [rax],eax
	...
   14000b15e:	add    BYTE PTR [rax],al
   14000b160:	(bad)  
   14000b161:	mov    BYTE PTR [rax],al
   14000b163:	rex add DWORD PTR [rax],eax
	...
   14000b17e:	add    BYTE PTR [rax],al
   14000b180:	jo     0x14000b10a
   14000b182:	add    BYTE PTR [rax+0x1],al
	...
   14000b19d:	add    BYTE PTR [rax],al
   14000b19f:	add    BYTE PTR [rax+0x1400088],al
   14000b1a5:	add    BYTE PTR [rax],al
   14000b1a7:	add    BYTE PTR [rax],dh
   14000b1a9:	mov    BYTE PTR [rax],al
   14000b1ab:	rex add DWORD PTR [rax],eax
   14000b1ae:	add    BYTE PTR [rax],al
   14000b1b0:	add    BYTE PTR [rax],al
   14000b1b2:	add    BYTE PTR [rax],al
   14000b1b4:	add    DWORD PTR [rax],eax
	...
   14000b1be:	add    BYTE PTR [rax],al
   14000b1c0:	cwde   
   14000b1c1:	mov    BYTE PTR [rax],al
   14000b1c3:	rex add DWORD PTR [rax],eax
   14000b1c6:	add    BYTE PTR [rax],al
   14000b1c8:	test   al,0x88
   14000b1ca:	add    BYTE PTR [rax+0x1],al
   14000b1cd:	add    BYTE PTR [rax],al
   14000b1cf:	add    BYTE PTR [rax],al
   14000b1d1:	add    BYTE PTR [rax],al
   14000b1d3:	add    BYTE PTR [rcx],al
	...
   14000b1dd:	add    BYTE PTR [rax],al
   14000b1df:	add    BYTE PTR [rax+0x1400088],bh
   14000b1e5:	add    BYTE PTR [rax],al
   14000b1e7:	add    BYTE PTR [rax],dh
   14000b1e9:	mov    BYTE PTR [rax],al
   14000b1eb:	rex add DWORD PTR [rax],eax
   14000b1ee:	add    BYTE PTR [rax],al
   14000b1f0:	add    BYTE PTR [rax],al
   14000b1f2:	add    BYTE PTR [rax],al
   14000b1f4:	add    DWORD PTR [rax],eax
	...
   14000b1fe:	add    BYTE PTR [rax],al
   14000b200:	enter  0x88,0x40
   14000b204:	add    DWORD PTR [rax],eax
   14000b206:	add    BYTE PTR [rax],al
   14000b208:	xor    BYTE PTR [rax+0x14000],cl
   14000b20e:	add    BYTE PTR [rax],al
   14000b210:	add    BYTE PTR [rax],al
   14000b212:	add    BYTE PTR [rax],al
   14000b214:	add    DWORD PTR [rax],eax
	...
   14000b21e:	add    BYTE PTR [rax],al
   14000b220:	fmul   DWORD PTR [rax+0x14000]
   14000b226:	add    BYTE PTR [rax],al
   14000b228:	xor    BYTE PTR [rax+0x14000],cl
   14000b22e:	add    BYTE PTR [rax],al
   14000b230:	add    BYTE PTR [rax],al
   14000b232:	add    BYTE PTR [rax],al
   14000b234:	add    DWORD PTR [rax],eax
	...
   14000b23e:	add    BYTE PTR [rax],al
   14000b240:	call   0x14140b2cd
   14000b245:	add    BYTE PTR [rax],al
   14000b247:	add    BYTE PTR [rax],dh
   14000b249:	mov    BYTE PTR [rax],al
   14000b24b:	rex add DWORD PTR [rax],eax
   14000b24e:	add    BYTE PTR [rax],al
   14000b250:	add    BYTE PTR [rax],al
   14000b252:	add    BYTE PTR [rax],al
   14000b254:	add    DWORD PTR [rax],eax
	...
   14000b25e:	add    BYTE PTR [rax],al
   14000b260:	clc    
   14000b261:	mov    BYTE PTR [rax],al
   14000b263:	rex add DWORD PTR [rax],eax
   14000b266:	add    BYTE PTR [rax],al
   14000b268:	xor    BYTE PTR [rax+0x14000],cl
   14000b26e:	add    BYTE PTR [rax],al
   14000b270:	add    BYTE PTR [rax],al
   14000b272:	add    BYTE PTR [rax],al
   14000b274:	add    DWORD PTR [rax],eax
	...
   14000b27e:	add    BYTE PTR [rax],al
   14000b280:	adc    BYTE PTR [rcx+0x14000],cl
	...
   14000b292:	add    BYTE PTR [rax],al
   14000b294:	add    DWORD PTR [rax],eax
	...
   14000b29e:	add    BYTE PTR [rax],al
   14000b2a0:	and    BYTE PTR [rcx+0x14000],cl
	...
   14000b2be:	add    BYTE PTR [rax],al
   14000b2c0:	add    BYTE PTR [rax+0x14000],al
	...
   14000b2ce:	add    BYTE PTR [rax],al
   14000b2d0:	cs (bad) 
   14000b2d2:	push   r14
   14000b2d4:	rex.WB
   14000b2d5:	rex.WB push r11
   14000b2d7:	rex.R
   14000b2d8:	rex.RB push r14
   14000b2da:	pop    rdi
   14000b2db:	rex.XB
   14000b2dc:	rex.WRXB
   14000b2dd:	rex.WRX
   14000b2de:	rex.RX
   14000b2df:	rex.WB
   14000b2e0:	rex.RXB pop r15
   14000b2e2:	push   rax
   14000b2e3:	push   r12
   14000b2e5:	rex.W pop rdi
   14000b2e7:	rex.WRB
   14000b2e8:	push   r8
   14000b2ea:	push   rax
   14000b2eb:	rex.RB push r10
   14000b2ed:	rex
   14000b2ee:	add    BYTE PTR [rax],al
   14000b2f1:	add    BYTE PTR [rax],0x40
   14000b2f4:	add    DWORD PTR [rax],eax
	...
   14000b2fe:	add    BYTE PTR [rax],al
   14000b300:	cs (bad) 
   14000b302:	push   r13
   14000b304:	rex.WB
   14000b305:	rex.B jo 0x14000b378
   14000b308:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000b30a:	jae    0x14000b380
   14000b30c:	push   rax
   14000b30d:	(bad)  
   14000b30e:	je     0x14000b378
   14000b310:	rex.WRB (bad) 
   14000b312:	jo     0x14000b384
   14000b314:	gs jb  0x14000b357
   14000b317:	add    BYTE PTR [rax],al
   14000b31a:	add    BYTE PTR [rax],al
   14000b31c:	add    BYTE PTR [rax],al
   14000b31e:	add    BYTE PTR [rax],al
   14000b320:	add    BYTE PTR [rax+0x14000],al
	...
   14000b32e:	add    BYTE PTR [rax],al
   14000b330:	cs (bad) 
   14000b332:	push   r13
   14000b334:	rex.WB push r13
   14000b336:	outs   dx,BYTE PTR ds:[rsi]
   14000b337:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000b33b:	outs   dx,BYTE PTR ds:[rsi]
   14000b33c:	rex
   14000b33d:	add    BYTE PTR [rax],al
   14000b340:	add    BYTE PTR [rax+0x14000],al
	...
   14000b34e:	add    BYTE PTR [rax],al
   14000b350:	cs (bad) 
   14000b352:	push   r14
   14000b354:	rex.WB
   14000b355:	rex.WB push r11
   14000b357:	rex.RB js 0x14000b3ca
   14000b35a:	jb     0x14000b3c1
   14000b35c:	jae    0x14000b3d1
   14000b35e:	push   rbx
   14000b35f:	gs jb  0x14000b3d8
   14000b362:	gs jb  0x14000b3a5
   14000b365:	add    BYTE PTR [rax],al
	...
   14000b370:	add    DWORD PTR [rax],eax
   14000b372:	add    BYTE PTR [rax],al
   14000b374:	add    BYTE PTR [rax],al
   14000b376:	add    BYTE PTR [rax],al
   14000b378:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000b37e:	add    BYTE PTR [rax],al
   14000b380:	int    0x5d
   14000b382:	and    dl,dl
   14000b384:	data16 (bad) 
   14000b386:	(bad)  
   14000b387:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

000000014000c000 <.pdata>:
   14000c000:	sbb    BYTE PTR [rax],dl
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	xchg   edx,eax
   14000c005:	adc    BYTE PTR [rax],al
   14000c007:	add    BYTE PTR [rax-0x68],ah
   14000c00a:	add    BYTE PTR [rax],al
   14000c00c:	mov    al,0x10
   14000c00e:	add    BYTE PTR [rax],al
   14000c010:	cmp    BYTE PTR [rdx],dl
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	nop
   14000c015:	cwde   
   14000c016:	add    BYTE PTR [rax],al
   14000c018:	adc    al,BYTE PTR [rax]
   14000c01b:	add    BYTE PTR [rdi-0x4fffffee],ah
   14000c021:	cwde   
   14000c022:	add    BYTE PTR [rax],al
   14000c024:	mov    al,0x12
   14000c026:	add    BYTE PTR [rax],al
   14000c028:	xchg   esi,eax
   14000c029:	adc    al,0x0
   14000c02b:	add    BYTE PTR [rax-0x63ffff68],bh
   14000c031:	adc    al,0x0
   14000c033:	add    BYTE PTR [rdx+rbx*1-0x66f00000],ch
   14000c03a:	add    BYTE PTR [rax],al
   14000c03c:	mov    ah,0x1a
   14000c03e:	add    BYTE PTR [rax],al
   14000c040:	ficomp WORD PTR [rdx]
   14000c042:	add    BYTE PTR [rax],al
   14000c044:	sub    al,0x99
   14000c046:	add    BYTE PTR [rax],al
   14000c048:	in     al,0x1a
   14000c04a:	add    BYTE PTR [rax],al
   14000c04c:	cwde   
   14000c04d:	sbb    eax,DWORD PTR [rax]
   14000c04f:	add    BYTE PTR [rcx+rbx*4],dh
   14000c052:	add    BYTE PTR [rax],al
   14000c054:	movabs al,ds:0x4c00001c7f00001b
   14000c05d:	cdq    
   14000c05e:	add    BYTE PTR [rax],al
   14000c060:	mov    BYTE PTR [rax+rax*1],bl
   14000c063:	add    al,al
   14000c065:	sbb    al,0x0
   14000c067:	add    BYTE PTR [rax-0x67],ch
   14000c06a:	add    BYTE PTR [rax],al
   14000c06c:	enter  0x1c,0x0
   14000c070:	sbb    BYTE PTR [rsi],bl
   14000c072:	add    BYTE PTR [rax],al
   14000c074:	je     0x14000c00f
   14000c076:	add    BYTE PTR [rax],al
   14000c078:	and    BYTE PTR [rsi],bl
   14000c07a:	add    BYTE PTR [rax],al
   14000c07c:	pop    rdx
   14000c07d:	(bad)  
   14000c07e:	add    BYTE PTR [rax],al
   14000c080:	push   0x60000099
   14000c085:	(bad)  
   14000c086:	add    BYTE PTR [rax],al
   14000c088:	stos   BYTE PTR es:[rdi],al
   14000c089:	and    DWORD PTR [rax],eax
   14000c08b:	add    BYTE PTR [rax-0x2fffff67],dl
   14000c091:	and    DWORD PTR [rax],eax
   14000c093:	add    bh,bh
   14000c095:	and    DWORD PTR [rax],eax
   14000c097:	add    al,dl
   14000c099:	cdq    
   14000c09a:	add    BYTE PTR [rax],al
   14000c09c:	adc    BYTE PTR [rdx],ah
   14000c09e:	add    BYTE PTR [rax],al
   14000c0a0:	xchg   edi,eax
   14000c0a1:	and    al,BYTE PTR [rax]
   14000c0a3:	add    al,bl
   14000c0a5:	cdq    
   14000c0a6:	add    BYTE PTR [rax],al
   14000c0a8:	movabs al,ds:0x68000022ec000022
   14000c0b1:	cdq    
   14000c0b2:	add    BYTE PTR [rax],al
   14000c0b4:	hlt    
   14000c0b5:	and    al,BYTE PTR [rax]
   14000c0b7:	add    BYTE PTR [rsi-0x17ffffdd],dh
   14000c0bd:	cdq    
   14000c0be:	add    BYTE PTR [rax],al
   14000c0c0:	mov    esp,0x56000023
   14000c0c5:	and    al,0x0
   14000c0c7:	add    al,bl
   14000c0c9:	cdq    
   14000c0ca:	add    BYTE PTR [rax],al
   14000c0cc:	pop    rsp
   14000c0cd:	and    al,0x0
   14000c0cf:	add    BYTE PTR [rdi+0x25],al
   14000c0d2:	add    BYTE PTR [rax],al
   14000c0d4:	hlt    
   14000c0d5:	cdq    
   14000c0d6:	add    BYTE PTR [rax],al
   14000c0d8:	push   rax
   14000c0d9:	and    eax,0x26220000
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	or     BYTE PTR [rdx+0x26280000],bl
   14000c0e6:	add    BYTE PTR [rax],al
   14000c0e8:	mov    ?,WORD PTR [rax+rax*1]
   14000c0eb:	add    BYTE PTR [rax],ah
   14000c0ed:	(bad)  
   14000c0ee:	add    BYTE PTR [rax],al
   14000c0f0:	xchg   esp,eax
   14000c0f1:	xor    al,0x0
   14000c0f3:	add    BYTE PTR [rdx],cl
   14000c0f5:	add    BYTE PTR ss:[rax],al
   14000c0f8:	movabs al,ds:0xb20000361000009a
   14000c101:	cmp    BYTE PTR [rax],al
   14000c103:	add    BYTE PTR [rdx+rbx*4+0x38b80000],bh
   14000c10a:	add    BYTE PTR [rax],al
   14000c10c:	cmp    eax,DWORD PTR ds:[rax]
   14000c10f:	add    al,bl
   14000c111:	(bad)  
   14000c112:	add    BYTE PTR [rax],al
   14000c114:	cmp    r8d,DWORD PTR [rax]
   14000c117:	add    bh,dl
   14000c119:	cmp    eax,0x9af00000
   14000c11e:	add    BYTE PTR [rax],al
   14000c120:	loopne 0x14000c15f
   14000c122:	add    BYTE PTR [rax],al
   14000c124:	(bad)  
   14000c125:	add    BYTE PTR [r8],al
   14000c128:	sbb    BYTE PTR [rbx+0x41380000],bl
   14000c12e:	add    BYTE PTR [rax],al
   14000c130:	xchg   edi,eax
   14000c131:	add    BYTE PTR [r8],al
   14000c134:	sub    BYTE PTR [rbx+0x41a00000],bl
   14000c13a:	add    BYTE PTR [rax],al
   14000c13c:	movabs eax,ds:0xa80000994c000042
   14000c145:	rex.X add BYTE PTR [rax],al
   14000c148:	loope  0x14000c18d
   14000c14a:	add    BYTE PTR [rax],al
   14000c14c:	cmp    BYTE PTR [rbx+0x43e80000],bl
   14000c152:	add    BYTE PTR [rax],al
   14000c154:	(bad)  
   14000c155:	add    BYTE PTR [r8],r8b
   14000c158:	push   rsp
   14000c159:	fwait
   14000c15a:	add    BYTE PTR [rax],al
   14000c15c:	cmp    BYTE PTR [rbp+0x0],al
   14000c15f:	add    ch,bh
   14000c161:	add    BYTE PTR [r8],r8b
   14000c164:	mov    BYTE PTR [rbx+0x46040000],bl
   14000c16a:	add    BYTE PTR [rax],al
   14000c16c:	stos   BYTE PTR es:[rdi],al
   14000c16d:	rex.WB add BYTE PTR [r8],al
   14000c170:	pushf  
   14000c171:	fwait
   14000c172:	add    BYTE PTR [rax],al
   14000c174:	mov    al,0x49
   14000c176:	add    BYTE PTR [rax],al
   14000c178:	jrcxz  0x14000c1c7
   14000c17a:	add    BYTE PTR [rax],al
   14000c17c:	mov    eax,0xec00009b
   14000c181:	rex.WRB add BYTE PTR [r8],r8b
   14000c184:	jns    0x14000c1d6
   14000c186:	add    BYTE PTR [rax],al
   14000c188:	(bad)  
   14000c189:	fwait
   14000c18a:	add    BYTE PTR [rax],al
   14000c18c:	adc    BYTE PTR [rax+0x0],0x0
   14000c190:	test   BYTE PTR [rbx+0x0],dl
   14000c193:	add    ah,ch
   14000c195:	fwait
   14000c196:	add    BYTE PTR [rax],al
   14000c198:	mov    WORD PTR [rbx+0x0],ss
   14000c19b:	add    ah,ah
   14000c19d:	push   rbx
   14000c19e:	add    BYTE PTR [rax],al
   14000c1a0:	rcr    BYTE PTR [rcx+0x53ec0000],1
   14000c1a6:	add    BYTE PTR [rax],al
   14000c1a8:	(bad)  
   14000c1a9:	push   rbp
   14000c1aa:	add    BYTE PTR [rax],al
   14000c1ac:	or     BYTE PTR [rax+rax*1+0x553000],bl
   14000c1b3:	add    BYTE PTR [rdi+0x55],bl
   14000c1b6:	add    BYTE PTR [rax],al
   14000c1b8:	push   0x68000099
   14000c1bd:	push   rbp
   14000c1be:	add    BYTE PTR [rax],al
   14000c1c0:	rex.WRX push rsi
   14000c1c2:	add    BYTE PTR [rax],al
   14000c1c4:	fcomp  DWORD PTR [rcx+0x56540000]
   14000c1ca:	add    BYTE PTR [rax],al
   14000c1cc:	(bad)  
   14000c1cd:	push   rdi
   14000c1ce:	add    BYTE PTR [rax],al
   14000c1d0:	sbb    BYTE PTR [rax+rax*1+0x57dc00],bl
   14000c1d7:	add    BYTE PTR [rax+0x28000058],ch
   14000c1dd:	pushf  
   14000c1de:	add    BYTE PTR [rax],al
   14000c1e0:	mov    al,0x58
   14000c1e2:	add    BYTE PTR [rax],al
   14000c1e4:	repnz pop rcx
   14000c1e6:	add    BYTE PTR [rax],al
   14000c1e8:	xor    al,0x99
   14000c1ea:	add    BYTE PTR [rax],al
   14000c1ec:	clc    
   14000c1ed:	pop    rcx
   14000c1ee:	add    BYTE PTR [rax],al
   14000c1f0:	and    DWORD PTR [rax+rax*1+0x0],0x9c78
   14000c1f8:	mov    BYTE PTR [rax+rax*1+0x0],ah
   14000c1fc:	in     eax,dx
   14000c1fd:	add    BYTE PTR gs:[rax],al
   14000c200:	pushf  
   14000c201:	pushf  
   14000c202:	add    BYTE PTR [rax],al
   14000c204:	hlt    
   14000c205:	add    BYTE PTR gs:[rax],al
   14000c208:	rex.R
   14000c209:	add    BYTE PTR [eax],al
   14000c20c:	loopne 0x14000c1aa
   14000c20e:	add    BYTE PTR [rax],al
   14000c210:	rex.WR
   14000c211:	add    BYTE PTR [eax],al
   14000c214:	(bad)  
   14000c215:	push   0xffffffff9cfc0000
   14000c21a:	add    BYTE PTR [rax],al
   14000c21c:	push   0x17000068
   14000c221:	imul   eax,DWORD PTR [rax],0x9d1800
   14000c227:	add    BYTE PTR [rax],ah
   14000c229:	imul   eax,DWORD PTR [rax],0x6aa300
   14000c22f:	add    BYTE PTR [rbx*4+0x6aac0000],ah
   14000c236:	add    BYTE PTR [rax],al
   14000c238:	jg     0x14000c2a5
   14000c23a:	add    BYTE PTR [rax],al
   14000c23c:	rex popf 
   14000c23e:	add    BYTE PTR [rax],al
   14000c240:	mov    BYTE PTR [rbx+0x0],ch
   14000c243:	add    BYTE PTR [rsi],ch
   14000c245:	ins    BYTE PTR es:[rdi],dx
   14000c246:	add    BYTE PTR [rax],al
   14000c248:	push   rsp
   14000c249:	popf   
   14000c24a:	add    BYTE PTR [rax],al
   14000c24c:	xor    al,0x6c
   14000c24e:	add    BYTE PTR [rax],al
   14000c250:	xor    DWORD PTR [rbp+0x0],ebp
   14000c253:	add    BYTE PTR [rbp+rbx*4+0x0],ch
   14000c257:	add    BYTE PTR [rax],bh
   14000c259:	ins    DWORD PTR es:[rdi],dx
   14000c25a:	add    BYTE PTR [rax],al
   14000c25c:	and    DWORD PTR [rdi+0x0],ebp
   14000c25f:	add    BYTE PTR [rax+0x2800009d],cl
   14000c265:	outs   dx,DWORD PTR ds:[rsi]
   14000c266:	add    BYTE PTR [rax],al
   14000c268:	hlt    
   14000c269:	outs   dx,DWORD PTR ds:[rsi]
   14000c26a:	add    BYTE PTR [rax],al
   14000c26c:	xor    al,0x99
   14000c26e:	add    BYTE PTR [rax],al
   14000c270:	cld    
   14000c271:	outs   dx,DWORD PTR ds:[rsi]
   14000c272:	add    BYTE PTR [rax],al
   14000c274:	xor    eax,0x68000070
   14000c279:	cdq    
   14000c27a:	add    BYTE PTR [rax],al
   14000c27c:	(bad)  
   14000c27d:	jo     0x14000c27f
   14000c27f:	add    BYTE PTR [rdi],ch
   14000c281:	jno    0x14000c283
   14000c283:	add    BYTE PTR [rax+0x40000098],dh
   14000c289:	jno    0x14000c28b
   14000c28b:	add    BYTE PTR [rcx-0x57ffff8f],cl
   14000c291:	popf   
   14000c292:	add    BYTE PTR [rax],al
   14000c294:	nop
   14000c295:	jno    0x14000c297
   14000c297:	add    BYTE PTR [rsi+0x73],cl
   14000c29a:	add    BYTE PTR [rax],al
   14000c29c:	mov    al,0x9d
   14000c29e:	add    BYTE PTR [rax],al
   14000c2a0:	(bad)  
   14000c2a1:	jae    0x14000c2a3
   14000c2a3:	add    BYTE PTR [rdx+0x73],dh
   14000c2a6:	add    BYTE PTR [rax],al
   14000c2a8:	mov    al,0x98
   14000c2aa:	add    BYTE PTR [rax],al
   14000c2ac:	nop
   14000c2ad:	jae    0x14000c2af
   14000c2af:	add    BYTE PTR [rsi-0x1fffff8d],ch
   14000c2b5:	popf   
   14000c2b6:	add    BYTE PTR [rax],al
   14000c2b8:	mov    ah,0x73
   14000c2ba:	add    BYTE PTR [rax],al
   14000c2bc:	rex.B je 0x14000c2bf
   14000c2bf:	add    ah,ah
   14000c2c1:	popf   
   14000c2c2:	add    BYTE PTR [rax],al
   14000c2c4:	rex.W je 0x14000c2c7
   14000c2c7:	add    BYTE PTR [rdi+0x74],bl
   14000c2ca:	add    BYTE PTR [rax],al
   14000c2cc:	mov    al,0x98
   14000c2ce:	add    BYTE PTR [rax],al
   14000c2d0:	je     0x14000c346
   14000c2d2:	add    BYTE PTR [rax],al
   14000c2d4:	(bad)  [rax+rax*1+0x0]
   14000c2d8:	xor    al,0x9e
   14000c2da:	add    BYTE PTR [rax],al
   14000c2dc:	in     al,0x74
   14000c2de:	add    BYTE PTR [rax],al
   14000c2e0:	ss jne 0x14000c2e3
   14000c2e3:	add    BYTE PTR [rsi+rbx*4],al
   14000c2e6:	add    BYTE PTR [rax],al
   14000c2e8:	rex jne 0x14000c2eb
   14000c2eb:	add    BYTE PTR [rax+0x75],dh
   14000c2ee:	add    BYTE PTR [rax],al
   14000c2f0:	push   0xffffffffa0000099
   14000c2f5:	jne    0x14000c2f7
   14000c2f7:	add    cl,bl
   14000c2f9:	jne    0x14000c2fb
   14000c2fb:	add    BYTE PTR [rax-0x1fffff68],dh
   14000c301:	jne    0x14000c303
   14000c303:	add    al,bh
   14000c305:	jne    0x14000c307
   14000c307:	add    BYTE PTR [rax+0xc000098],dh
   14000c30d:	jbe    0x14000c30f
   14000c30f:	add    BYTE PTR [rax+0x76],ah
   14000c312:	add    BYTE PTR [rax],al
   14000c314:	pop    rsp
   14000c315:	sahf   
   14000c316:	add    BYTE PTR [rax],al
   14000c318:	push   0xffffffffad000076
   14000c31d:	jbe    0x14000c31f
   14000c31f:	add    al,dl
   14000c321:	cdq    
   14000c322:	add    BYTE PTR [rax],al
   14000c324:	and    BYTE PTR [rdi+0x0],dh
   14000c327:	add    BYTE PTR [rbp+0x77],ch
   14000c32a:	add    BYTE PTR [rax],al
   14000c32c:	jl     0x14000c2cc
   14000c32e:	add    BYTE PTR [rax],al
   14000c330:	mov    ah,0x77
   14000c332:	add    BYTE PTR [rax],al
   14000c334:	test   BYTE PTR [rax+0x0],bh
   14000c337:	add    BYTE PTR [rax-0x43ffff62],ah
   14000c33d:	js     0x14000c33f
   14000c33f:	add    al,dh
   14000c341:	js     0x14000c343
   14000c343:	add    al,dl
   14000c345:	cdq    
   14000c346:	add    BYTE PTR [rax],al
   14000c348:	add    BYTE PTR [rcx+0x0],bh
   14000c34b:	add    BYTE PTR [rcx+0x7a],dh
   14000c34e:	add    BYTE PTR [rax],al
   14000c350:	lods   al,BYTE PTR ds:[rsi]
   14000c351:	sahf   
   14000c352:	add    BYTE PTR [rax],al
   14000c354:	test   al,0x7a
   14000c356:	add    BYTE PTR [rax],al
   14000c358:	(bad)  
   14000c359:	jp     0x14000c35b
   14000c35b:	add    al,dl
   14000c35d:	cdq    
   14000c35e:	add    BYTE PTR [rax],al
   14000c360:	in     al,0x7a
   14000c362:	add    BYTE PTR [rax],al
   14000c364:	add    DWORD PTR [rbx+0x0],edi
   14000c367:	add    BYTE PTR [rax+0x8000098],dh
   14000c36d:	jnp    0x14000c36f
   14000c36f:	add    BYTE PTR [rbx+0x7b],ah
   14000c372:	add    BYTE PTR [rax],al
   14000c374:	mov    esp,0x6c00009e
   14000c379:	jnp    0x14000c37b
   14000c37b:	add    bl,bh
   14000c37d:	jnp    0x14000c37f
   14000c37f:	add    BYTE PTR [rcx+rbx*4],dh
   14000c382:	add    BYTE PTR [rax],al
   14000c384:	xor    BYTE PTR [rax+rax*1+0x0],bh
   14000c388:	xor    bh,BYTE PTR [rax+rax*1+0x0]
   14000c38c:	mov    eax,0xd600009e
   14000c391:	jl     0x14000c393
   14000c393:	add    ah,dh
   14000c395:	jl     0x14000c397
   14000c397:	add    BYTE PTR [rsi+rbx*4],ch
   14000c39a:	add    BYTE PTR [rax],al
   14000c39c:	cli    
   14000c39d:	jl     0x14000c39f
   14000c39f:	add    BYTE PTR [rip+0x2c00007d],dl        # 0x16c00c422
   14000c3a5:	sahf   
   14000c3a6:	add    BYTE PTR [rax],al
   14000c3a8:	sbb    edi,DWORD PTR [rbp+0x0]
   14000c3ab:	add    BYTE PTR [rdi+0x7d],al
   14000c3ae:	add    BYTE PTR [rax],al
   14000c3b0:	sub    al,0x9e
   14000c3b2:	add    BYTE PTR [rax],al
   14000c3b4:	rex.WRB jge 0x14000c3b7
   14000c3b7:	add    BYTE PTR [rdi+0x2c00007d],cl
   14000c3bd:	sahf   
   14000c3be:	add    BYTE PTR [rax],al
   14000c3c0:	movabs al,ds:0x2c00007dc000007d
   14000c3c9:	sahf   
	...

Disassembly of section .rsrc:

000000014000d000 <.rsrc>:
	...
   14000d00c:	add    DWORD PTR [rax],eax
   14000d00e:	add    eax,DWORD PTR [rax]
   14000d010:	mov    WORD PTR [rbx],es
   14000d012:	add    BYTE PTR [rax-0x7fffffd0],al
   14000d018:	add    eax,DWORD PTR [rax]
   14000d01a:	add    BYTE PTR [rax],al
   14000d01c:	rex.W add BYTE PTR [rax],al
   14000d01f:	or     BYTE PTR [rsi],0x0
   14000d022:	add    BYTE PTR [rax],al
   14000d024:	rol    BYTE PTR [rax],0x0
   14000d027:	adc    BYTE PTR [rax],0x0
   14000d02a:	add    BYTE PTR [rax],al
   14000d02c:	fadd   DWORD PTR [rax]
   14000d02e:	add    BYTE PTR [rax+0x0],al
	...
   14000d03c:	add    BYTE PTR [rax],al
   14000d03e:	add    DWORD PTR [rax],eax
   14000d040:	add    DWORD PTR [rax],eax
   14000d042:	add    BYTE PTR [rax],al
   14000d044:	lock add BYTE PTR [rax],al
   14000d047:	add    BYTE PTR [rax],0x0
	...
   14000d056:	or     eax,0x100
   14000d05b:	add    BYTE PTR [rax],cl
   14000d05d:	add    DWORD PTR [rax],eax
   14000d05f:	add    BYTE PTR [rdx],0x0
   14000d062:	add    BYTE PTR [rax],al
   14000d064:	and    BYTE PTR [rcx],al
   14000d066:	add    BYTE PTR [rax+0x3],al
   14000d06c:	cmp    BYTE PTR [rcx],al
   14000d06e:	add    BYTE PTR [rax+0x4],al
   14000d074:	push   rax
   14000d075:	add    DWORD PTR [rax],eax
   14000d077:	add    BYTE PTR [rip+0x68000000],0x1        # 0x1a800d07e
   14000d07e:	add    BYTE PTR [rax+0x6],al
   14000d084:	add    BYTE PTR [rcx],0x0
   14000d087:	add    BYTE PTR [rdi],0x0
   14000d08a:	add    BYTE PTR [rax],al
   14000d08c:	cwde   
   14000d08d:	add    DWORD PTR [rax],eax
   14000d08f:	or     BYTE PTR [rax],0x0
   14000d092:	add    BYTE PTR [rax],al
   14000d094:	mov    al,0x1
   14000d096:	add    BYTE PTR [rax+0x9],al
   14000d09c:	enter  0x1,0x80
   14000d0a0:	or     al,BYTE PTR [rax]
   14000d0a2:	add    BYTE PTR [rax],al
   14000d0a4:	loopne 0x14000d0a7
   14000d0a6:	add    BYTE PTR [rax+0xb],al
   14000d0ac:	clc    
   14000d0ad:	add    DWORD PTR [rax],eax
   14000d0af:	or     BYTE PTR [rax+rax*1],0x0
   14000d0b3:	add    BYTE PTR [rax],dl
   14000d0b5:	add    al,BYTE PTR [rax]
   14000d0b7:	or     BYTE PTR [rip+0x28000000],0x2        # 0x16800d0be
   14000d0be:	add    BYTE PTR [rax+0x0],al
	...
   14000d0cc:	add    DWORD PTR [rax],eax
   14000d0ce:	add    BYTE PTR [rax],al
   14000d0d0:	jo     0x14000d0d5
   14000d0d2:	add    BYTE PTR [rax-0x7ffffdc0],al
	...
   14000d0e4:	add    BYTE PTR [rax],al
   14000d0e6:	add    DWORD PTR [rax],eax
   14000d0e8:	add    DWORD PTR [rax],eax
   14000d0ea:	add    BYTE PTR [rax],al
   14000d0ec:	pop    rax
   14000d0ed:	add    al,BYTE PTR [rax]
   14000d0ef:	add    BYTE PTR [rax],0x0
	...
   14000d0fe:	add    DWORD PTR [rax],eax
   14000d100:	or     DWORD PTR [rax+rax*1],eax
   14000d103:	add    BYTE PTR [rax+0x2],dh
	...
   14000d116:	add    DWORD PTR [rax],eax
   14000d118:	or     DWORD PTR [rax+rax*1],eax
   14000d11b:	add    BYTE PTR [rax+0x2],al
	...
   14000d12d:	add    BYTE PTR [rcx],al
   14000d12f:	add    BYTE PTR [rcx],cl
   14000d131:	add    al,0x0
   14000d133:	add    BYTE PTR [rax+0x2],dl
	...
   14000d145:	add    BYTE PTR [rcx],al
   14000d147:	add    BYTE PTR [rcx],cl
   14000d149:	add    al,0x0
   14000d14b:	add    BYTE PTR [rax+0x2],ah
	...
   14000d15d:	add    BYTE PTR [rcx],al
   14000d15f:	add    BYTE PTR [rcx],cl
   14000d161:	add    al,0x0
   14000d163:	add    BYTE PTR [rax+0x2],dh
	...
   14000d175:	add    BYTE PTR [rcx],al
   14000d177:	add    BYTE PTR [rcx],cl
   14000d179:	add    al,0x0
   14000d17b:	add    al,al
   14000d17d:	add    al,BYTE PTR [rax]
	...
   14000d18b:	add    BYTE PTR [rax],al
   14000d18d:	add    BYTE PTR [rcx],al
   14000d18f:	add    BYTE PTR [rcx],cl
   14000d191:	add    al,0x0
   14000d193:	add    al,dl
   14000d195:	add    al,BYTE PTR [rax]
	...
   14000d1a3:	add    BYTE PTR [rax],al
   14000d1a5:	add    BYTE PTR [rcx],al
   14000d1a7:	add    BYTE PTR [rcx],cl
   14000d1a9:	add    al,0x0
   14000d1ab:	add    al,ah
   14000d1ad:	add    al,BYTE PTR [rax]
	...
   14000d1bb:	add    BYTE PTR [rax],al
   14000d1bd:	add    BYTE PTR [rcx],al
   14000d1bf:	add    BYTE PTR [rcx],cl
   14000d1c1:	add    al,0x0
   14000d1c3:	add    al,dh
   14000d1c5:	add    al,BYTE PTR [rax]
	...
   14000d1d3:	add    BYTE PTR [rax],al
   14000d1d5:	add    BYTE PTR [rcx],al
   14000d1d7:	add    BYTE PTR [rcx],cl
   14000d1d9:	add    al,0x0
   14000d1db:	add    BYTE PTR [rax],al
   14000d1dd:	add    eax,DWORD PTR [rax]
	...
   14000d1eb:	add    BYTE PTR [rax],al
   14000d1ed:	add    BYTE PTR [rcx],al
   14000d1ef:	add    BYTE PTR [rcx],cl
   14000d1f1:	add    al,0x0
   14000d1f3:	add    BYTE PTR [rax],dl
   14000d1f5:	add    eax,DWORD PTR [rax]
	...
   14000d203:	add    BYTE PTR [rax],al
   14000d205:	add    BYTE PTR [rcx],al
   14000d207:	add    BYTE PTR [rcx],cl
   14000d209:	add    al,0x0
   14000d20b:	add    BYTE PTR [rax],ah
   14000d20d:	add    eax,DWORD PTR [rax]
	...
   14000d21b:	add    BYTE PTR [rax],al
   14000d21d:	add    BYTE PTR [rcx],al
   14000d21f:	add    BYTE PTR [rcx],cl
   14000d221:	add    al,0x0
   14000d223:	add    BYTE PTR [rax],dh
   14000d225:	add    eax,DWORD PTR [rax]
	...
   14000d233:	add    BYTE PTR [rax],al
   14000d235:	add    BYTE PTR [rcx],al
   14000d237:	add    BYTE PTR [rcx],cl
   14000d239:	add    al,0x0
   14000d23b:	add    BYTE PTR [rax+0x3],al
	...
   14000d24e:	add    DWORD PTR [rax],eax
   14000d250:	or     DWORD PTR [rax+rax*1],eax
   14000d253:	add    BYTE PTR [rax+0x3],dl
	...
   14000d266:	add    DWORD PTR [rax],eax
   14000d268:	or     DWORD PTR [rax+rax*1],eax
   14000d26b:	add    BYTE PTR [rax+0x3],ah
   14000d26e:	add    BYTE PTR [rax],al
   14000d270:	loopne 0x14000d1f9
   14000d272:	add    al,BYTE PTR [rax]
   14000d274:	rol    BYTE PTR [rax],1
	...
   14000d27e:	add    BYTE PTR [rax],al
   14000d280:	jo     0x14000d259
   14000d282:	add    BYTE PTR [rax],al
   14000d284:	push   0x6
   14000d289:	add    BYTE PTR [rax],al
   14000d28b:	add    BYTE PTR [rax],al
   14000d28d:	add    BYTE PTR [rax],al
   14000d28f:	add    al,bl
   14000d291:	fld    QWORD PTR [rax]
   14000d293:	add    al,ch
   14000d295:	add    al,BYTE PTR [rax]
	...
   14000d29f:	add    al,al
   14000d2a1:	loopne 0x14000d2a3
   14000d2a3:	add    al,ch
   14000d2a5:	add    DWORD PTR [rax],eax
	...
   14000d2af:	add    BYTE PTR [rax+0x280000e2],ch
   14000d2b5:	add    DWORD PTR [rax],eax
	...
   14000d2bf:	add    al,dl
   14000d2c1:	jrcxz  0x14000d2c3
   14000d2c3:	add    BYTE PTR [rax+0xe],ch
   14000d2c9:	add    BYTE PTR [rax],al
   14000d2cb:	add    BYTE PTR [rax],al
   14000d2cd:	add    BYTE PTR [rax],al
   14000d2cf:	add    BYTE PTR [rax-0xe],bh
   14000d2d2:	add    BYTE PTR [rax],al
   14000d2d4:	test   al,0x8
	...
   14000d2de:	add    BYTE PTR [rax],al
   14000d2e0:	and    bl,bh
   14000d2e2:	add    BYTE PTR [rax],al
   14000d2e4:	enter  0x6,0x0
	...
   14000d2f0:	call   0x1a800d3f6
   14000d2f5:	add    eax,0x0
   14000d2fa:	add    BYTE PTR [rax],al
   14000d2fc:	add    BYTE PTR [rax],al
   14000d2fe:	add    BYTE PTR [rax],al
   14000d300:	push   rax
   14000d301:	(bad)  
   14000d302:	add    DWORD PTR [rax],eax
   14000d304:	mov    ?,WORD PTR [rbx]
   14000d306:	add    DWORD PTR [rax],eax
	...
   14000d310:	loopne 0x14000d354
   14000d312:	add    al,BYTE PTR [rax]
   14000d314:	test   al,0x25
	...
   14000d31e:	add    BYTE PTR [rax],al
   14000d320:	mov    BYTE PTR [rax+0x2],ch
   14000d323:	add    BYTE PTR [rax+0x10],ch
   14000d329:	add    BYTE PTR [rax],al
   14000d32b:	add    BYTE PTR [rax],al
   14000d32d:	add    BYTE PTR [rax],al
   14000d32f:	add    BYTE PTR [rax],dh
   14000d331:	jns    0x14000d335
   14000d333:	add    BYTE PTR [rax+0x9],cl
   14000d339:	add    BYTE PTR [rax],al
   14000d33b:	add    BYTE PTR [rax],al
   14000d33d:	add    BYTE PTR [rax],al
   14000d33f:	add    BYTE PTR [rax+0x68000282],bh
   14000d345:	add    al,0x0
	...
   14000d34f:	add    BYTE PTR [rax],ah
   14000d351:	xchg   DWORD PTR [rdx],eax
   14000d353:	add    BYTE PTR [rax+rax*1+0x0],bh
   14000d35a:	add    BYTE PTR [rax],al
   14000d35c:	add    BYTE PTR [rax],al
   14000d35e:	add    BYTE PTR [rax],al
   14000d360:	movabs al,ds:0x3d00000d3
   14000d369:	add    BYTE PTR [rax],al
   14000d36b:	add    BYTE PTR [rax],al
   14000d36d:	add    BYTE PTR [rax],al
   14000d36f:	add    BYTE PTR [rip+0x44004900],cl        # 0x184011c75
   14000d375:	add    BYTE PTR [rdx+0x0],dl
   14000d378:	pop    rdi
   14000d379:	add    BYTE PTR [rbp+0x0],cl
   14000d37c:	add    BYTE PTR [r9+0x0],cl
   14000d380:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000d384:	push   rdx
   14000d385:	add    BYTE PTR [rcx+0x0],al
   14000d388:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14000d38c:	add    eax,DWORD PTR [rax]
   14000d38e:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000d392:	rex.WB add BYTE PTR [r8],al
	...
   14000d39d:	add    BYTE PTR [rax],al
   14000d39f:	add    al,cl
   14000d3a1:	add    esi,DWORD PTR [rax+rax*1]
   14000d3a4:	add    BYTE PTR [rax],al
   14000d3a6:	push   rsi
   14000d3a7:	add    BYTE PTR [rbx+0x0],dl
   14000d3aa:	pop    rdi
   14000d3ab:	add    BYTE PTR [rsi+0x0],dl
   14000d3ae:	add    BYTE PTR [r10+0x0],r10b
   14000d3b2:	push   rbx
   14000d3b3:	add    BYTE PTR [rcx+0x0],cl
   14000d3b6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000d3ba:	pop    rdi
   14000d3bb:	add    BYTE PTR [rcx+0x0],cl
   14000d3be:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000d3c2:	rex.WRXB add BYTE PTR [r8],r8b
   14000d3c5:	add    BYTE PTR [rax],al
   14000d3c7:	add    BYTE PTR [rbp+0xfeef04],bh
   14000d3cd:	add    BYTE PTR [rcx],al
   14000d3cf:	add    BYTE PTR [rax],al
   14000d3d1:	add    BYTE PTR [rdx],cl
   14000d3d3:	add    al,ch
   14000d3d5:	add    edx,DWORD PTR [rsi]
   14000d3d7:	cmp    BYTE PTR [rax],al
   14000d3d9:	add    BYTE PTR [rdx],cl
   14000d3db:	add    al,ch
   14000d3dd:	add    edx,DWORD PTR [rsi]
   14000d3df:	cmp    BYTE PTR [rdi],bh
   14000d3e1:	add    BYTE PTR [rax],al
   14000d3e3:	add    BYTE PTR [rax],cl
   14000d3e5:	add    BYTE PTR [rax],al
   14000d3e7:	add    BYTE PTR [rax+rax*1],al
   14000d3ea:	add    al,0x0
   14000d3ec:	add    DWORD PTR [rax],eax
	...
   14000d3fa:	add    BYTE PTR [rax],al
   14000d3fc:	sub    BYTE PTR [rbx],al
   14000d3fe:	add    BYTE PTR [rax],al
   14000d400:	add    DWORD PTR [rax],eax
   14000d402:	push   rbx
   14000d403:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000d407:	add    BYTE PTR [rcx+0x0],ch
   14000d40a:	outs   dx,BYTE PTR ds:[rsi]
   14000d40b:	add    BYTE PTR [rdi+0x0],ah
   14000d40e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000d412:	ins    BYTE PTR es:[rdi],dx
   14000d413:	add    BYTE PTR [rbp+0x0],ah
   14000d416:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d41a:	data16 add BYTE PTR [rdi+0x0],ch
   14000d41e:	add    BYTE PTR [rax],al
   14000d420:	add    al,0x3
   14000d422:	add    BYTE PTR [rax],al
   14000d424:	add    DWORD PTR [rax],eax
   14000d426:	xor    BYTE PTR [rax],al
   14000d428:	xor    BYTE PTR [rax],al
   14000d42a:	xor    BYTE PTR [rax],al
   14000d42c:	xor    BYTE PTR [rax],al
   14000d42e:	xor    BYTE PTR [rax],al
   14000d430:	xor    al,0x0
   14000d432:	rex.X add BYTE PTR [rax],sil
   14000d435:	add    BYTE PTR [rax],al
   14000d437:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000d43b:	add    BYTE PTR [rcx],al
   14000d43d:	add    BYTE PTR [rbx+0x0],al
   14000d440:	outs   dx,DWORD PTR ds:[rsi]
   14000d441:	add    BYTE PTR [rbp+0x0],ch
   14000d444:	jo     0x14000d446
   14000d446:	(bad)  
   14000d447:	add    BYTE PTR [rsi+0x0],ch
   14000d44a:	jns    0x14000d44c
   14000d44c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000d450:	ins    DWORD PTR es:[rdi],dx
   14000d451:	add    BYTE PTR [rbp+0x0],ah
   14000d454:	add    BYTE PTR [rax],al
   14000d456:	add    BYTE PTR [rax],al
   14000d458:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000d45c:	movsxd eax,DWORD PTR [rax]
   14000d45e:	jb     0x14000d460
   14000d460:	outs   dx,DWORD PTR ds:[rsi]
   14000d461:	add    BYTE PTR [rbx+0x0],dh
   14000d464:	outs   dx,DWORD PTR ds:[rsi]
   14000d465:	add    BYTE PTR [rsi+0x0],ah
   14000d468:	je     0x14000d46a
   14000d46a:	and    BYTE PTR [rax],al
   14000d46c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000d470:	jb     0x14000d472
   14000d472:	jo     0x14000d474
   14000d474:	outs   dx,DWORD PTR ds:[rsi]
   14000d475:	add    BYTE PTR [rdx+0x0],dh
   14000d478:	(bad)  
   14000d479:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000d47d:	add    BYTE PTR [rdi+0x0],ch
   14000d480:	outs   dx,BYTE PTR ds:[rsi]
   14000d481:	add    BYTE PTR [rax],al
   14000d483:	add    BYTE PTR [rsi+0x0],bl
   14000d486:	sbb    eax,DWORD PTR [rax]
   14000d488:	add    DWORD PTR [rax],eax
   14000d48a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000d48e:	ins    BYTE PTR es:[rdi],dx
   14000d48f:	add    BYTE PTR [rbp+0x0],ah
   14000d492:	add    BYTE PTR [rbp+0x0],r12b
   14000d496:	jae    0x14000d498
   14000d498:	movsxd eax,DWORD PTR [rax]
   14000d49a:	jb     0x14000d49c
   14000d49c:	imul   eax,DWORD PTR [rax],0x740070
   14000d4a2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d4a8:	add    BYTE PTR [rax],al
   14000d4aa:	add    BYTE PTR [rax],al
   14000d4ac:	rex.WB add BYTE PTR [r9+0x0],cl
   14000d4b0:	push   rbx
   14000d4b1:	add    BYTE PTR [rax],ah
   14000d4b3:	add    BYTE PTR [rbp+0x0],al
   14000d4b6:	js     0x14000d4b8
   14000d4b8:	jo     0x14000d4ba
   14000d4ba:	jb     0x14000d4bc
   14000d4bc:	add    BYTE PTR gs:[rbx+0x0],dh
   14000d4c0:	jae    0x14000d4c2
   14000d4c2:	and    BYTE PTR [rax],al
   14000d4c4:	push   rdi
   14000d4c5:	add    BYTE PTR [rdi+0x0],ch
   14000d4c8:	jb     0x14000d4ca
   14000d4ca:	imul   eax,DWORD PTR [rax],0x65
   14000d4cd:	add    BYTE PTR [rdx+0x0],dh
   14000d4d0:	and    BYTE PTR [rax],al
   14000d4d2:	push   rax
   14000d4d3:	add    BYTE PTR [rdx+0x0],dh
   14000d4d6:	outs   dx,DWORD PTR ds:[rsi]
   14000d4d7:	add    BYTE PTR [rbx+0x0],ah
   14000d4da:	add    BYTE PTR gs:[rbx+0x0],dh
   14000d4de:	jae    0x14000d4e0
   14000d4e0:	add    BYTE PTR [rax],al
   14000d4e2:	add    BYTE PTR [rax],al
   14000d4e4:	cwde   
   14000d4e5:	add    BYTE PTR [rax+rax*1],bh
   14000d4e8:	add    DWORD PTR [rax],eax
   14000d4ea:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000d4ee:	ins    BYTE PTR es:[rdi],dx
   14000d4ef:	add    BYTE PTR [rbp+0x0],ah
   14000d4f2:	push   rsi
   14000d4f3:	add    BYTE PTR [rbp+0x0],ah
   14000d4f6:	jb     0x14000d4f8
   14000d4f8:	jae    0x14000d4fa
   14000d4fa:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d500:	add    BYTE PTR [rax],al
   14000d502:	add    BYTE PTR [rax],al
   14000d504:	xor    DWORD PTR [rax],eax
   14000d506:	xor    BYTE PTR [rax],al
   14000d508:	add    BYTE PTR cs:[rax],dh
   14000d50b:	add    BYTE PTR [rsi],ch
   14000d50d:	add    BYTE PTR [rcx],dh
   14000d50f:	add    BYTE PTR [rax+rax*1],dh
   14000d512:	xor    eax,DWORD PTR [rax]
   14000d514:	xor    eax,0x2e003800
   14000d519:	add    BYTE PTR [rcx],dh
   14000d51b:	add    BYTE PTR [rax],dh
   14000d51d:	add    BYTE PTR [rax],dh
   14000d51f:	add    BYTE PTR [rax],dh
   14000d521:	add    BYTE PTR [rax],ah
   14000d523:	add    BYTE PTR [rax],ch
   14000d525:	add    BYTE PTR [rdx+0x0],dh
   14000d528:	jae    0x14000d52a
   14000d52a:	xor    DWORD PTR [rax],eax
   14000d52c:	pop    rdi
   14000d52d:	add    BYTE PTR [rbx+0x0],dh
   14000d530:	jb     0x14000d532
   14000d532:	jbe    0x14000d534
   14000d534:	movsxd eax,DWORD PTR [rax]
   14000d536:	outs   dx,DWORD PTR ds:[rsi]
   14000d537:	add    BYTE PTR [rbp+0x0],ch
   14000d53a:	ins    DWORD PTR es:[rdi],dx
   14000d53b:	add    BYTE PTR [rdi+0x0],ch
   14000d53e:	outs   dx,BYTE PTR ds:[rsi]
   14000d53f:	add    BYTE PTR [rdi+0x0],bl
   14000d542:	imul   eax,DWORD PTR [rax],0x730069
   14000d548:	pop    rdi
   14000d549:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000d54d:	add    BYTE PTR [rsi+0x0],dh
   14000d550:	sub    BYTE PTR [rax],al
   14000d552:	outs   dx,BYTE PTR ds:[rsi]
   14000d553:	add    BYTE PTR [rcx+0x0],ch
   14000d556:	outs   dx,BYTE PTR ds:[rsi]
   14000d557:	add    BYTE PTR [rdi+0x0],ah
   14000d55a:	ins    BYTE PTR es:[rdi],dx
   14000d55b:	add    BYTE PTR [rcx+0x0],ch
   14000d55e:	sub    DWORD PTR [rax],eax
   14000d560:	add    BYTE PTR cs:[rcx],dh
   14000d563:	add    BYTE PTR [rsi],dh
   14000d565:	add    BYTE PTR [rax],dh
   14000d567:	add    BYTE PTR [rip+0x34003200],dh        # 0x17401076d
   14000d56d:	add    BYTE PTR [rip+0x34003100],ch        # 0x174010673
   14000d573:	add    BYTE PTR [rip+0x29003200],dh        # 0x169010779
   14000d579:	add    BYTE PTR [rax],al
   14000d57b:	add    BYTE PTR [rsi],bh
   14000d57d:	add    BYTE PTR [rdi],cl
   14000d57f:	add    BYTE PTR [rcx],al
   14000d581:	add    BYTE PTR [rcx+0x0],cl
   14000d584:	outs   dx,BYTE PTR ds:[rsi]
   14000d585:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000d589:	add    BYTE PTR [rdx+0x0],dh
   14000d58c:	outs   dx,BYTE PTR ds:[rsi]
   14000d58d:	add    BYTE PTR [rcx+0x0],ah
   14000d590:	ins    BYTE PTR es:[rdi],dx
   14000d591:	add    BYTE PTR [rsi+0x0],cl
   14000d594:	(bad)  
   14000d595:	add    BYTE PTR [rbp+0x0],ch
   14000d598:	add    BYTE PTR gs:[rax],al
   14000d59b:	add    BYTE PTR [rcx+0x0],ch
   14000d59e:	imul   eax,DWORD PTR [rax],0x650073
   14000d5a4:	js     0x14000d5a6
   14000d5a6:	jo     0x14000d5a8
   14000d5a8:	jb     0x14000d5aa
   14000d5aa:	add    BYTE PTR gs:[rbx+0x0],dh
   14000d5ae:	jae    0x14000d5b0
   14000d5b0:	add    BYTE PTR cs:[rbp+0x0],ah
   14000d5b4:	js     0x14000d5b6
   14000d5b6:	add    BYTE PTR gs:[rax],al
   14000d5b9:	add    BYTE PTR [rax],al
   14000d5bb:	add    BYTE PTR [rax+0x1002e00],al
   14000d5c1:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000d5c5:	add    BYTE PTR [rdi+0x0],ah
   14000d5c8:	(bad)  
   14000d5c9:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000d5cd:	add    BYTE PTR [rdi+0x0],ch
   14000d5d0:	jo     0x14000d5d2
   14000d5d2:	jns    0x14000d5d4
   14000d5d4:	jb     0x14000d5d6
   14000d5d6:	imul   eax,DWORD PTR [rax],0x680067
   14000d5dc:	je     0x14000d5de
   14000d5de:	add    BYTE PTR [rax],al
   14000d5e0:	test   eax,0x4d002000
   14000d5e5:	add    BYTE PTR [rcx+0x0],ch
   14000d5e8:	movsxd eax,DWORD PTR [rax]
   14000d5ea:	jb     0x14000d5ec
   14000d5ec:	outs   dx,DWORD PTR ds:[rsi]
   14000d5ed:	add    BYTE PTR [rbx+0x0],dh
   14000d5f0:	outs   dx,DWORD PTR ds:[rsi]
   14000d5f1:	add    BYTE PTR [rsi+0x0],ah
   14000d5f4:	je     0x14000d5f6
   14000d5f6:	and    BYTE PTR [rax],al
   14000d5f8:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000d5fc:	jb     0x14000d5fe
   14000d5fe:	jo     0x14000d600
   14000d600:	outs   dx,DWORD PTR ds:[rsi]
   14000d601:	add    BYTE PTR [rdx+0x0],dh
   14000d604:	(bad)  
   14000d605:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000d609:	add    BYTE PTR [rdi+0x0],ch
   14000d60c:	outs   dx,BYTE PTR ds:[rsi]
   14000d60d:	add    BYTE PTR [rsi],ch
   14000d60f:	add    BYTE PTR [rax],ah
   14000d611:	add    BYTE PTR [rcx+0x0],al
   14000d614:	ins    BYTE PTR es:[rdi],dx
   14000d615:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000d619:	add    BYTE PTR [rdx+0x0],dh
   14000d61c:	imul   eax,DWORD PTR [rax],0x680067
   14000d622:	je     0x14000d624
   14000d624:	jae    0x14000d626
   14000d626:	and    BYTE PTR [rax],al
   14000d628:	jb     0x14000d62a
   14000d62a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000d62e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d632:	jbe    0x14000d634
   14000d634:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000d639:	add    BYTE PTR [rax],al
   14000d63b:	add    BYTE PTR [rsi+0x0],al
   14000d63e:	sldt   WORD PTR [rcx]
   14000d641:	add    BYTE PTR [rdi+0x0],cl
   14000d644:	jb     0x14000d646
   14000d646:	imul   eax,DWORD PTR [rax],0x690067
   14000d64c:	outs   dx,BYTE PTR ds:[rsi]
   14000d64d:	add    BYTE PTR [rcx+0x0],ah
   14000d650:	ins    BYTE PTR es:[rdi],dx
   14000d651:	add    BYTE PTR [rsi+0x0],al
   14000d654:	imul   eax,DWORD PTR [rax],0x65006c
   14000d65a:	outs   dx,BYTE PTR ds:[rsi]
   14000d65b:	add    BYTE PTR [rcx+0x0],ah
   14000d65e:	ins    DWORD PTR es:[rdi],dx
   14000d65f:	add    BYTE PTR [rbp+0x0],ah
   14000d662:	add    BYTE PTR [rax],al
   14000d664:	imul   eax,DWORD PTR [rax],0x730069
   14000d66a:	add    BYTE PTR gs:[rax+0x0],bh
   14000d66e:	jo     0x14000d670
   14000d670:	jb     0x14000d672
   14000d672:	add    BYTE PTR gs:[rbx+0x0],dh
   14000d676:	jae    0x14000d678
   14000d678:	add    BYTE PTR cs:[rbp+0x0],ah
   14000d67c:	js     0x14000d67e
   14000d67e:	add    BYTE PTR gs:[rax],al
   14000d681:	add    BYTE PTR [rax],al
   14000d683:	add    BYTE PTR [rax+rax*1+0x1e],bl
   14000d687:	add    BYTE PTR [rcx],al
   14000d689:	add    BYTE PTR [rax+0x0],dl
   14000d68c:	jb     0x14000d68e
   14000d68e:	outs   dx,DWORD PTR ds:[rsi]
   14000d68f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000d693:	add    BYTE PTR [rbx+0x0],ah
   14000d696:	je     0x14000d698
   14000d698:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000d69c:	ins    DWORD PTR es:[rdi],dx
   14000d69d:	add    BYTE PTR [rbp+0x0],ah
   14000d6a0:	add    BYTE PTR [rax],al
   14000d6a2:	add    BYTE PTR [rax],al
   14000d6a4:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d6a8:	je     0x14000d6aa
   14000d6aa:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d6ae:	outs   dx,BYTE PTR ds:[rsi]
   14000d6af:	add    BYTE PTR [rbp+0x0],ah
   14000d6b2:	je     0x14000d6b4
   14000d6b4:	and    BYTE PTR [rax],al
   14000d6b6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d6ba:	data16 add BYTE PTR [rdi+0x0],ch
   14000d6be:	jb     0x14000d6c0
   14000d6c0:	ins    DWORD PTR es:[rdi],dx
   14000d6c1:	add    BYTE PTR [rcx+0x0],ah
   14000d6c4:	je     0x14000d6c6
   14000d6c6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d6cc:	and    BYTE PTR [rax],al
   14000d6ce:	push   rbx
   14000d6cf:	add    BYTE PTR [rbp+0x0],ah
   14000d6d2:	jb     0x14000d6d4
   14000d6d4:	jbe    0x14000d6d6
   14000d6d6:	imul   eax,DWORD PTR [rax],0x650063
   14000d6dc:	jae    0x14000d6de
   14000d6de:	add    BYTE PTR [rax],al
   14000d6e0:	add    BYTE PTR [rax],r10b
   14000d6e3:	add    BYTE PTR [rcx],al
   14000d6e5:	add    BYTE PTR [rax+0x0],dl
   14000d6e8:	jb     0x14000d6ea
   14000d6ea:	outs   dx,DWORD PTR ds:[rsi]
   14000d6eb:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000d6ef:	add    BYTE PTR [rbx+0x0],ah
   14000d6f2:	je     0x14000d6f4
   14000d6f4:	push   rsi
   14000d6f5:	add    BYTE PTR [rbp+0x0],ah
   14000d6f8:	jb     0x14000d6fa
   14000d6fa:	jae    0x14000d6fc
   14000d6fc:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d702:	add    BYTE PTR [rax],al
   14000d704:	xor    DWORD PTR [rax],eax
   14000d706:	xor    BYTE PTR [rax],al
   14000d708:	add    BYTE PTR cs:[rax],dh
   14000d70b:	add    BYTE PTR [rsi],ch
   14000d70d:	add    BYTE PTR [rcx],dh
   14000d70f:	add    BYTE PTR [rax+rax*1],dh
   14000d712:	xor    eax,DWORD PTR [rax]
   14000d714:	xor    eax,0x2e003800
   14000d719:	add    BYTE PTR [rcx],dh
   14000d71b:	add    BYTE PTR [rax],dh
   14000d71d:	add    BYTE PTR [rax],dh
   14000d71f:	add    BYTE PTR [rax],dh
   14000d721:	add    BYTE PTR [rax],al
   14000d723:	add    BYTE PTR [rax+rax*1+0x0],al
   14000d727:	add    BYTE PTR [rcx],al
   14000d729:	add    BYTE PTR [rsi+0x0],dl
   14000d72c:	(bad)  
   14000d72d:	add    BYTE PTR [rdx+0x0],dh
   14000d730:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000d734:	ins    BYTE PTR es:[rdi],dx
   14000d735:	add    BYTE PTR [rbp+0x0],ah
   14000d738:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d73c:	data16 add BYTE PTR [rdi+0x0],ch
   14000d740:	add    BYTE PTR [rax],al
   14000d742:	add    BYTE PTR [rax],al
   14000d744:	and    al,0x0
   14000d746:	add    al,0x0
   14000d748:	add    BYTE PTR [rax],al
   14000d74a:	push   rsp
   14000d74b:	add    BYTE PTR [rdx+0x0],dh
   14000d74e:	(bad)  
   14000d74f:	add    BYTE PTR [rsi+0x0],ch
   14000d752:	jae    0x14000d754
   14000d754:	ins    BYTE PTR es:[rdi],dx
   14000d755:	add    BYTE PTR [rcx+0x0],ah
   14000d758:	je     0x14000d75a
   14000d75a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d760:	add    BYTE PTR [rax],al
   14000d762:	add    BYTE PTR [rax],al
   14000d764:	add    BYTE PTR [rax],al
   14000d766:	mov    al,0x4
	...
   14000d770:	sub    BYTE PTR [rax],al
   14000d772:	add    BYTE PTR [rax],al
   14000d774:	xor    BYTE PTR [rax],al
   14000d776:	add    BYTE PTR [rax],al
   14000d778:	(bad)  
   14000d779:	add    BYTE PTR [rax],al
   14000d77b:	add    BYTE PTR [rcx],al
   14000d77d:	add    BYTE PTR [rax+rax*1],al
   14000d780:	add    BYTE PTR [rax],al
   14000d782:	add    BYTE PTR [rax],al
   14000d784:	add    BYTE PTR [rax+rax*1],0x0
	...
   14000d79c:	add    BYTE PTR [rax],al
   14000d79e:	add    BYTE PTR [rax],0x0
   14000d7a1:	add    BYTE PTR [rax],0x0
   14000d7a4:	add    BYTE PTR [rax+0x800080],al
   14000d7aa:	add    BYTE PTR [rax],al
   14000d7ac:	add    BYTE PTR [rax],0x80
   14000d7af:	add    BYTE PTR [rax-0x7fffff80],al
   14000d7b5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000d7bc:	add    BYTE PTR [rax],al
   14000d7be:	inc    DWORD PTR [rax]
   14000d7c0:	add    bh,bh
   14000d7c2:	add    BYTE PTR [rax],al
   14000d7c4:	add    bh,bh
   14000d7c6:	inc    DWORD PTR [rax]
   14000d7c8:	inc    DWORD PTR [rax]
   14000d7ca:	add    BYTE PTR [rax],al
   14000d7cc:	inc    DWORD PTR [rax]
   14000d7ce:	inc    DWORD PTR [rax]
   14000d7d0:	(bad)  
   14000d7d1:	inc    DWORD PTR [rax]
   14000d7d3:	add    bh,bh
   14000d7d5:	(bad)  
   14000d7d6:	inc    DWORD PTR [rax]
	...
   14000d7fc:	add    BYTE PTR [rax],al
   14000d7fe:	or     BYTE PTR [rdi-0x80],dh
	...
   14000d811:	add    BYTE PTR [rax],al
   14000d813:	add    BYTE PTR [rax-0x7888889],cl
   14000d819:	jo     0x14000d81b
	...
   14000d82b:	ja     0x14000d8a4
   14000d82d:	ja     0x14000d8aa
   14000d82f:	mov    bh,0x8f
   14000d831:	div    DWORD PTR [rax+0x0]
	...
   14000d840:	add    BYTE PTR [rax],al
   14000d842:	(bad)  
   14000d843:	ja     0x14000d7cd
   14000d845:	mov    BYTE PTR [rax-0x78007079],cl
	...
   14000d857:	add    BYTE PTR [rax],al
   14000d859:	add    BYTE PTR [rdi],al
   14000d85b:	mov    BYTE PTR [rax-0x70888889],cl
   14000d861:	mov    bh,bh
   14000d863:	jo     0x14000d865
	...
   14000d871:	add    BYTE PTR [rdi],al
   14000d873:	ja     0x14000d8ec
   14000d875:	ja     0x14000d8ee
   14000d877:	ja     0x14000d801
   14000d879:	mov    BYTE PTR [rax+0x7088],cl
	...
   14000d887:	add    BYTE PTR [rax],al
   14000d889:	add    BYTE PTR [rdi],al
   14000d88b:	ja     0x14000d904
   14000d88d:	ja     0x14000d906
   14000d88f:	ja     0x14000d819
   14000d891:	mov    BYTE PTR [rax+0x8778],cl
	...
   14000d89f:	add    BYTE PTR [rax],al
   14000d8a1:	add    BYTE PTR [rdi],al
   14000d8a3:	xchg   DWORD PTR [rdi+0x77],esi
   14000d8a6:	ja     0x14000d91f
   14000d8a8:	mov    BYTE PTR [rax-0x78778778],cl
	...
   14000d8ba:	(bad)  
   14000d8bb:	ja     0x14000d934
   14000d8bd:	ja     0x14000d936
   14000d8bf:	ja     0x14000d849
   14000d8c1:	mov    BYTE PTR [rax-0xf777779],cl
	...
   14000d8cf:	add    BYTE PTR [rax],al
   14000d8d1:	add    BYTE PTR [rdi],al
   14000d8d3:	xchg   DWORD PTR [rdi+0x77],esi
   14000d8d6:	ja     0x14000d94f
   14000d8d8:	mov    BYTE PTR [rax-0x77778778],cl
   14000d8de:	add    BYTE PTR [rax],0x0
	...
   14000d8e9:	add    BYTE PTR [rdi],al
   14000d8eb:	ja     0x14000d964
   14000d8ed:	ja     0x14000d966
   14000d8ef:	ja     0x14000d879
   14000d8f1:	mov    BYTE PTR [rax-0x7f778779],cl
	...
   14000d8ff:	add    BYTE PTR [rax],al
   14000d901:	add    BYTE PTR [rdi],al
   14000d903:	xchg   DWORD PTR [rdi+0x77],esi
   14000d906:	ja     0x14000d97f
   14000d908:	mov    BYTE PTR [rax-0x77787778],cl
   14000d90e:	add    BYTE PTR [rax],0x0
	...
   14000d919:	add    BYTE PTR [rdi],al
   14000d91b:	xchg   DWORD PTR [rdi+0x77],esi
   14000d91e:	ja     0x14000d997
   14000d920:	mov    BYTE PTR [rax-0x77777778],cl
   14000d926:	add    BYTE PTR [rax],0x0
   14000d929:	add    BYTE PTR [rax],al
   14000d92b:	add    BYTE PTR [rax],al
   14000d92d:	add    BYTE PTR [rdi],al
   14000d92f:	ja     0x14000d9a8
   14000d931:	ja     0x14000d9aa
   14000d933:	xchg   DWORD PTR [rdi+0x77],esi
   14000d936:	ja     0x14000d9af
   14000d938:	mov    BYTE PTR [rax-0x77777778],cl
   14000d93e:	add    BYTE PTR [rax],0x0
   14000d941:	add    BYTE PTR [rax],al
   14000d943:	add    BYTE PTR [rax],al
   14000d945:	ja     0x14000d9ad
   14000d947:	ja     0x14000d9c0
   14000d949:	ja     0x14000d9c2
   14000d94b:	xchg   DWORD PTR [rdi+0x77],esi
   14000d94e:	js     0x14000d9c7
   14000d950:	mov    BYTE PTR [rax-0x77777778],cl
   14000d956:	add    BYTE PTR [rax],0x0
   14000d959:	add    BYTE PTR [rax],al
   14000d95b:	add    BYTE PTR [rdi],al
   14000d95d:	ja     0x14000d9c6
   14000d95f:	ja     0x14000d9d8
   14000d961:	ja     0x14000d9da
   14000d963:	xchg   DWORD PTR [rdi+0x77],esi
   14000d966:	ja     0x14000d9df
   14000d968:	mov    BYTE PTR [rax-0x77777778],cl
   14000d96e:	add    BYTE PTR [rax],0x0
   14000d971:	add    BYTE PTR [rax],al
   14000d973:	add    BYTE PTR [rdi+0x77],dh
   14000d976:	ja     0x14000d9ee
   14000d978:	stos   BYTE PTR es:[rdi],al
   14000d979:	ja     0x14000d9f2
   14000d97b:	xchg   DWORD PTR [rdi+0x77],esi
   14000d97e:	ja     0x14000d9f7
   14000d980:	mov    BYTE PTR [rax-0x77777778],cl
   14000d986:	add    BYTE PTR [rax],0x0
   14000d989:	add    BYTE PTR [rax],al
   14000d98b:	(bad)  
   14000d98c:	ja     0x14000da05
   14000d98e:	ja     0x14000d9f6
   14000d990:	data16 data16 ja 0x14000d91b
   14000d994:	ja     0x14000da0d
   14000d996:	ja     0x14000da0f
   14000d998:	mov    BYTE PTR [rax-0x77777778],cl
   14000d99e:	add    BYTE PTR [rax],0x0
   14000d9a1:	add    BYTE PTR [rax],al
   14000d9a3:	ja     0x14000da1c
   14000d9a5:	jb     0x14000da0d
   14000d9a7:	and    ah,BYTE PTR [rdx]
   14000d9a9:	sub    ah,BYTE PTR [rdi-0x79]
   14000d9ac:	ja     0x14000da25
   14000d9ae:	ja     0x14000da27
   14000d9b0:	mov    BYTE PTR [rax-0x77777778],cl
   14000d9b6:	add    BYTE PTR [rax],0x0
   14000d9b9:	add    BYTE PTR [rdi],al
   14000d9bb:	ja     0x14000da34
   14000d9bd:	and    ah,BYTE PTR [rdx]
   14000d9bf:	and    ah,BYTE PTR [rdx]
   14000d9c1:	and    ah,BYTE PTR [rdi]
   14000d9c3:	xchg   DWORD PTR [rdi+0x77],esi
   14000d9c6:	js     0x14000d94f
   14000d9c8:	mov    BYTE PTR [rax+0x77778888],cl
   14000d9ce:	add    BYTE PTR [rax],0x0
   14000d9d1:	add    BYTE PTR [rdi+0x77],dh
   14000d9d4:	jb     0x14000d9f8
   14000d9d6:	and    ah,BYTE PTR [rdx]
   14000d9d8:	and    ah,BYTE PTR [rdx]
   14000d9da:	(bad)  
   14000d9db:	ja     0x14000d964
   14000d9dd:	mov    BYTE PTR [rax-0x78777778],cl
   14000d9e3:	ja     0x14000da5c
   14000d9e5:	ja     0x14000d967
   14000d9e7:	add    BYTE PTR [rax],al
   14000d9e9:	or     BYTE PTR [rdi+0x77],dh
   14000d9ec:	and    ah,BYTE PTR [rdx]
   14000d9ee:	and    ah,BYTE PTR [rdx]
   14000d9f0:	and    ah,BYTE PTR [rsi+0x67]
   14000d9f3:	clc    
   14000d9f4:	mov    BYTE PTR [rax-0x78777878],cl
   14000d9fa:	ja     0x14000da73
   14000d9fc:	ja     0x14000da75
   14000d9fe:	add    BYTE PTR [rax],0x0
   14000da01:	(bad)  
   14000da02:	rex.R
   14000da03:	data16 and ah,BYTE PTR [rdx]
   14000da06:	and    ah,BYTE PTR [rdx]
   14000da08:	dec    WORD PTR es:[eax+0x77878888]
   14000da11:	ja     0x14000da8a
   14000da13:	ja     0x14000da8c
   14000da15:	ja     0x14000d997
   14000da17:	add    BYTE PTR [rax],al
   14000da19:	je     0x14000da5f
   14000da1b:	rex.RX and r12b,BYTE PTR [rdx]
   14000da1e:	and    ah,BYTE PTR [rdx]
   14000da20:	es int3 
   14000da22:	mov    DWORD PTR [rdi+0x77777777],0x77777787
   14000da2c:	ja     0x14000daa5
   14000da2e:	add    BYTE PTR [rax],0x0
   14000da31:	rex.R
   14000da32:	rex.R
   14000da33:	and    r12b,BYTE PTR [rdx]
   14000da36:	stos   BYTE PTR es:[rdi],al
   14000da37:	data16 data16 int3 
   14000da3a:	(bad)  
   14000da3b:	mov    BYTE PTR [rdi-0x78888889],al
   14000da41:	ja     0x14000daba
   14000da43:	ja     0x14000dabc
   14000da45:	ja     0x14000dab7
   14000da47:	add    BYTE PTR [rax],al
   14000da49:	rex.R
   14000da4a:	rex.R
   14000da4b:	(bad)
   14000da51:	data16 mov BYTE PTR [edi+0x77],dh
   14000da56:	ja     0x14000dacf
   14000da58:	xchg   DWORD PTR [rdi+0x77],esi
   14000da5b:	ja     0x14000dad4
   14000da5d:	ja     0x14000dacf
   14000da5f:	add    BYTE PTR [rax],cl
   14000da61:	rex.R
   14000da62:	rex.R
   14000da63:	data16 data16 jbe 0x14000dacd
   14000da67:	data16 jbe 0x14000dae1
   14000da6a:	ja     0x14000d9f4
   14000da6c:	mov    BYTE PTR [rdi+0x78],dh
   14000da6f:	ja     0x14000d9f8
   14000da71:	ja     0x14000daea
   14000da73:	ja     0x14000daec
   14000da75:	ja     0x14000dae7
   14000da77:	add    BYTE PTR [rdi],al
   14000da79:	rex.R
   14000da7a:	rex.RX
   14000da7b:	data16 data16 data16 data16 data16 data16 ja 0x14000dafa
   14000da83:	clc    
   14000da84:	xchg   DWORD PTR [rdi+0x77],esi
   14000da87:	ja     0x14000db00
   14000da89:	ja     0x14000db02
   14000da8b:	ja     0x14000db04
   14000da8d:	ja     0x14000daff
   14000da8f:	add    BYTE PTR [rdi],al
   14000da91:	rex.R
   14000da92:	rex.RX
   14000da93:	data16 data16 addr32 data16 out dx,al
   14000da98:	out    0x76,eax
   14000da9a:	ja     0x14000da24
   14000da9c:	xchg   DWORD PTR [rdi+0x77],esi
   14000da9f:	ja     0x14000db18
   14000daa1:	ja     0x14000db1a
   14000daa3:	ja     0x14000db1c
   14000daa5:	ja     0x14000db17
   14000daa7:	add    BYTE PTR [rsi],al
   14000daa9:	rex.R
   14000daaa:	data16 data16 addr32 ja 0x14000da9d
   14000daaf:	out    dx,al
   14000dab0:	out    dx,al
   14000dab1:	out    0x77,eax
   14000dab3:	dec    DWORD PTR [rax+0x77777787]
   14000dab9:	ja     0x14000db32
   14000dabb:	ja     0x14000db34
   14000dabd:	ja     0x14000db2f
   14000dabf:	add    BYTE PTR [rsi+rax*2],al
   14000dac2:	data16 data16 ja 0x14000dab4
   14000dac6:	out    dx,al
   14000dac7:	out    dx,al
   14000dac8:	out    dx,al
   14000dac9:	out    dx,al
   14000daca:	out    0x87,eax
   14000dacc:	ja     0x14000db45
   14000dace:	mov    BYTE PTR [rdi+0x77777777],al
   14000dad4:	ja     0x14000db4d
   14000dad6:	jo     0x14000dad8
   14000dad8:	add    al,0x62
   14000dada:	data16 addr32 jle 0x14000dacc
   14000dade:	out    dx,al
   14000dadf:	out    dx,al
   14000dae0:	out    dx,al
   14000dae1:	out    dx,al
   14000dae2:	out    0xf8,eax
   14000dae4:	clc    
   14000dae5:	mov    BYTE PTR [rax+0x77777787],cl
   14000daeb:	ja     0x14000db64
   14000daed:	ja     0x14000db5f
   14000daef:	add    BYTE PTR [rdi],al
   14000daf1:	(bad)  
   14000daf2:	data16 addr32 jae 0x14000db29
   14000daf6:	xor    esi,DWORD PTR [rbx]
   14000daf8:	xor    esi,DWORD PTR [rbx]
   14000dafa:	ja     0x14000dafb
   14000dafc:	dec    DWORD PTR [rax+0x77778788]
   14000db02:	ja     0x14000db7b
   14000db04:	ja     0x14000db7d
   14000db06:	jo     0x14000db08
   14000db08:	(bad)  
   14000db09:	push   0x66
   14000db0b:	addr32 jae 0x14000da96
   14000db0e:	mov    BYTE PTR [rax-0xc87478],cl
   14000db14:	dec    DWORD PTR [rax+0x77778788]
   14000db1a:	ja     0x14000db93
   14000db1c:	ja     0x14000db95
   14000db1e:	jo     0x14000db20
   14000db20:	add    BYTE PTR [rdx+0x66],ch
   14000db23:	data16 ja 0x14000dade
   14000db26:	mov    ebx,0x37bbbbbb
   14000db2b:	(bad)  
   14000db2c:	(bad)  
   14000db2d:	clc    
   14000db2e:	mov    BYTE PTR [rdi+0x77777777],al
   14000db34:	ja     0x14000dbad
   14000db36:	jo     0x14000db38
   14000db38:	add    BYTE PTR [rdx-0x56],ch
   14000db3b:	stos   BYTE PTR es:[rdi],al
   14000db3c:	test   al,0x8b
   14000db3e:	mov    edi,DWORD PTR [rbx-0xc84445]
   14000db44:	clc    
   14000db45:	dec    DWORD PTR [rax+0x77777787]
   14000db4b:	ja     0x14000dbc4
   14000db4d:	ja     0x14000dbbf
   14000db4f:	add    BYTE PTR [rax],al
   14000db51:	push   0xffffffffffffffaa
   14000db53:	stos   BYTE PTR es:[rdi],al
   14000db54:	test   al,0x88
   14000db56:	mov    ebx,0x37bbbbbb
   14000db5b:	xchg   DWORD PTR [rdi+0x77],esi
   14000db5e:	pop    QWORD PTR [rdi+0x77777777]
   14000db64:	ja     0x14000dbdd
   14000db66:	jo     0x14000db68
   14000db68:	add    BYTE PTR [rbx-0x56],dh
   14000db6b:	stos   BYTE PTR es:[rdi],al
   14000db6c:	js     0x14000daf9
   14000db6e:	cmp    BYTE PTR [rbx+0x7737bbbb],bh
   14000db74:	ja     0x14000dbed
   14000db76:	js     0x14000daff
   14000db78:	ja     0x14000dbf1
   14000db7a:	ja     0x14000dbf3
   14000db7c:	ja     0x14000dbf5
   14000db7e:	jo     0x14000db80
   14000db80:	add    BYTE PTR [rbx],al
   14000db82:	stos   BYTE PTR es:[rdi],al
   14000db83:	stos   BYTE PTR es:[rdi],al
   14000db84:	test   al,0xb3
   14000db86:	sti    
   14000db87:	mov    ebx,0x8838bbbb
   14000db8c:	mov    BYTE PTR [rax-0x77887878],cl
   14000db92:	mov    BYTE PTR [rax+0x8088],cl
   14000db98:	add    BYTE PTR [rbx-0x40cc5556],dh
   14000db9e:	mov    ebx,0x38bbbbbb
   14000dba3:	mov    BYTE PTR [rdi+0x707778],al
	...
   14000dbb1:	xor    edi,DWORD PTR [rdx-0x5d]
   14000dbb4:	cmp    ecx,DWORD PTR [rbx-0x44c44c45]
   14000dbba:	cmp    BYTE PTR [rax+0x70887777],cl
	...
   14000dbc8:	(bad)  
   14000dbc9:	xor    eax,DWORD PTR [rdi]
   14000dbcb:	xor    edi,DWORD PTR [rdi-0x7cc84445]
   14000dbd1:	mov    ebx,0x77788738
   14000dbd6:	xchg   DWORD PTR [rax],eax
	...
   14000dbe0:	add    edi,DWORD PTR [rbx-0x447444cd]
   14000dbe6:	xor    ecx,DWORD PTR [rax-0x77c7c418]
   14000dbec:	js     0x14000dc65
   14000dbee:	jo     0x14000dbf0
	...
   14000dbf8:	add    edi,DWORD PTR [rbx-0x4c447745]
   14000dbfe:	js     0x14000db88
   14000dc00:	(bad)  
   14000dc01:	repz cmp BYTE PTR [rdi+0x78],dh
   14000dc05:	js     0x14000dc07
	...
   14000dc0f:	add    BYTE PTR [rbx],cl
   14000dc11:	mov    ebx,0x33bbbbbb
   14000dc16:	mov    BYTE PTR [rax+0x7777f88f],cl
   14000dc1c:	mov    BYTE PTR [rax],al
	...
   14000dc26:	add    BYTE PTR [rax],al
   14000dc28:	add    BYTE PTR [rbx-0x78474445],bh
   14000dc2e:	mov    BYTE PTR [rax+0x7877f88f],cl
   14000dc34:	add    BYTE PTR [rax],0x0
	...
   14000dc3f:	add    BYTE PTR [rax],al
   14000dc41:	or     BYTE PTR [rbx+0x8000088],bh
   14000dc47:	mov    BYTE PTR [rax+0x8087],cl
	...
   14000dc55:	add    BYTE PTR [rax],al
   14000dc57:	add    bh,bh
   14000dc59:	(bad)  
   14000dc5a:	(bad)  
   14000dc5b:	(bad)  
   14000dc5c:	(bad)  
   14000dc5d:	inc    DWORD PTR [rax]
   14000dc5f:	add    bh,bh
   14000dc61:	(bad)  
   14000dc62:	(bad)  
   14000dc63:	clc    
   14000dc64:	jg     0x14000dc65
   14000dc66:	add    BYTE PTR [rax],al
   14000dc68:	(bad)  
   14000dc69:	(bad)  
   14000dc6a:	inc    DWORD PTR [rax]
   14000dc6c:	(bad)  
   14000dc6d:	inc    DWORD PTR [rax]
   14000dc6f:	add    bh,bh
   14000dc71:	(bad)  
   14000dc72:	cld    
   14000dc73:	add    BYTE PTR [rdi],al
   14000dc75:	inc    DWORD PTR [rax]
   14000dc77:	add    bh,bh
   14000dc79:	(bad)  
   14000dc7a:	clc    
   14000dc7b:	add    BYTE PTR [rbx],al
   14000dc7d:	inc    DWORD PTR [rax]
   14000dc7f:	add    bh,bh
   14000dc81:	(bad)  
   14000dc82:	clc    
   14000dc83:	add    BYTE PTR [rcx],al
   14000dc85:	inc    DWORD PTR [rax]
   14000dc87:	add    bh,bh
   14000dc89:	(bad)  
   14000dc8a:	clc    
   14000dc8b:	add    BYTE PTR [rax],al
   14000dc8d:	jg     0x14000dc8f
   14000dc8f:	add    bh,bh
   14000dc91:	(bad)  
   14000dc92:	clc    
   14000dc93:	add    BYTE PTR [rax],al
   14000dc95:	(bad)  
   14000dc96:	add    BYTE PTR [rax],al
   14000dc98:	(bad)  
   14000dc99:	(bad)  
   14000dc9a:	clc    
   14000dc9b:	add    BYTE PTR [rax],al
   14000dc9d:	sldt   WORD PTR [rax]
   14000dca0:	(bad)  
   14000dca1:	(bad)  
   14000dca2:	clc    
   14000dca3:	add    BYTE PTR [rax],al
   14000dca5:	(bad)  
   14000dca6:	add    BYTE PTR [rax],al
   14000dca8:	(bad)  
   14000dca9:	(bad)  
   14000dcaa:	clc    
   14000dcab:	add    BYTE PTR [rax],al
   14000dcad:	(bad)  
   14000dcae:	add    BYTE PTR [rax],al
   14000dcb0:	(bad)  
   14000dcb1:	(bad)  
   14000dcb2:	clc    
   14000dcb3:	add    BYTE PTR [rax],al
   14000dcb5:	(bad)  
   14000dcb6:	add    BYTE PTR [rax],al
   14000dcb8:	(bad)  
   14000dcb9:	(bad)  
   14000dcba:	clc    
   14000dcbb:	add    BYTE PTR [rax],al
   14000dcbd:	(bad)  
   14000dcbe:	add    BYTE PTR [rax],al
   14000dcc0:	(bad)  
   14000dcc1:	(bad)  
   14000dcc2:	clc    
   14000dcc3:	add    BYTE PTR [rax],al
   14000dcc5:	(bad)  
   14000dcc6:	add    BYTE PTR [rax],al
   14000dcc8:	(bad)  
   14000dcc9:	clc    
   14000dcca:	add    BYTE PTR [rax],al
   14000dccc:	add    BYTE PTR [rdi],al
   14000dcce:	add    BYTE PTR [rax],al
   14000dcd0:	inc    eax
   14000dcd2:	add    BYTE PTR [rax],al
   14000dcd4:	add    BYTE PTR [rdi],al
   14000dcd6:	add    BYTE PTR [rax],al
   14000dcd8:	inc    DWORD PTR [rax+0x7000000]
   14000dcde:	add    BYTE PTR [rax],al
   14000dce0:	inc    DWORD PTR [rax]
   14000dce2:	add    BYTE PTR [rax],al
   14000dce4:	add    BYTE PTR [rdi],al
   14000dce6:	add    BYTE PTR [rax],al
   14000dce8:	inc    BYTE PTR [rax]
   14000dcea:	add    BYTE PTR [rax],al
   14000dcec:	add    BYTE PTR [rdi],al
   14000dcee:	add    BYTE PTR [rax],al
   14000dcf0:	cld    
   14000dcf1:	add    BYTE PTR [rax],al
   14000dcf3:	add    BYTE PTR [rax],al
   14000dcf5:	(bad)  
   14000dcf6:	add    BYTE PTR [rax],al
   14000dcf8:	clc    
   14000dcf9:	add    BYTE PTR [rax],al
   14000dcfb:	add    BYTE PTR [rax],al
   14000dcfd:	(bad)  
   14000dcfe:	add    BYTE PTR [rax],al
   14000dd00:	lock add BYTE PTR [rax],al
   14000dd03:	add    BYTE PTR [rax],al
   14000dd05:	(bad)  
   14000dd06:	add    BYTE PTR [rax],al
   14000dd08:	loopne 0x14000dd0a
   14000dd0a:	add    BYTE PTR [rax],al
   14000dd0c:	add    BYTE PTR [rdi],al
   14000dd0e:	add    BYTE PTR [rax],al
   14000dd10:	loopne 0x14000dd12
   14000dd12:	add    BYTE PTR [rax],al
   14000dd14:	add    BYTE PTR [rdi],al
   14000dd16:	add    BYTE PTR [rax],al
   14000dd18:	rol    BYTE PTR [rax],0x0
   14000dd1b:	add    BYTE PTR [rax],al
   14000dd1d:	(bad)  
   14000dd1e:	add    BYTE PTR [rax],al
   14000dd20:	rol    BYTE PTR [rax],0x0
   14000dd23:	add    BYTE PTR [rax],al
   14000dd25:	(bad)  
   14000dd26:	add    BYTE PTR [rax],al
   14000dd28:	rol    BYTE PTR [rax],0x0
   14000dd2b:	add    BYTE PTR [rax],al
   14000dd2d:	(bad)  
   14000dd2e:	add    BYTE PTR [rax],al
   14000dd30:	add    BYTE PTR [rax],0x0
   14000dd33:	add    BYTE PTR [rax],al
   14000dd35:	(bad)  
   14000dd36:	add    BYTE PTR [rax],al
   14000dd38:	add    BYTE PTR [rax],0x0
   14000dd3b:	add    BYTE PTR [rax],al
   14000dd3d:	(bad)  
   14000dd3e:	add    BYTE PTR [rax],al
   14000dd40:	add    BYTE PTR [rax],0x0
   14000dd43:	add    BYTE PTR [rax],al
   14000dd45:	(bad)  
   14000dd46:	add    BYTE PTR [rax],al
   14000dd48:	add    BYTE PTR [rax],0x0
   14000dd4b:	add    BYTE PTR [rax],al
   14000dd4d:	(bad)  
   14000dd4e:	add    BYTE PTR [rax],al
   14000dd50:	add    BYTE PTR [rax],0x0
   14000dd53:	add    BYTE PTR [rax],al
   14000dd55:	(bad)  
   14000dd56:	add    BYTE PTR [rax],al
   14000dd58:	add    BYTE PTR [rax],0x0
   14000dd5b:	add    BYTE PTR [rax],al
   14000dd5d:	(bad)  
   14000dd5e:	add    BYTE PTR [rax],al
   14000dd60:	add    BYTE PTR [rax],0x0
   14000dd63:	add    BYTE PTR [rax],al
   14000dd65:	(bad)  
   14000dd66:	add    BYTE PTR [rax],al
   14000dd68:	add    BYTE PTR [rax],0x0
   14000dd6b:	add    BYTE PTR [rax],al
   14000dd6d:	(bad)  
   14000dd6e:	add    BYTE PTR [rax],al
   14000dd70:	rol    BYTE PTR [rax],0x0
   14000dd73:	add    BYTE PTR [rax],al
   14000dd75:	(bad)  
   14000dd76:	add    BYTE PTR [rax],al
   14000dd78:	rol    BYTE PTR [rax],0x0
   14000dd7b:	add    BYTE PTR [rax],al
   14000dd7d:	(bad)  
   14000dd7e:	add    BYTE PTR [rax],al
   14000dd80:	rol    BYTE PTR [rax],0x0
   14000dd83:	add    BYTE PTR [rax],al
   14000dd85:	(bad)  
   14000dd86:	add    BYTE PTR [rax],al
   14000dd88:	rol    BYTE PTR [rax],0x0
   14000dd8b:	add    BYTE PTR [rax],al
   14000dd8d:	(bad)  
   14000dd8e:	add    BYTE PTR [rax],al
   14000dd90:	loopne 0x14000dd92
   14000dd92:	add    BYTE PTR [rax],al
   14000dd94:	add    BYTE PTR [rdi],bl
   14000dd96:	add    BYTE PTR [rax],al
   14000dd98:	rol    BYTE PTR [rax],0x0
   14000dd9b:	add    edi,edi
   14000dd9d:	inc    DWORD PTR [rax]
   14000dd9f:	add    al,al
   14000dda1:	add    BYTE PTR [rax],al
   14000dda3:	add    edi,edi
   14000dda5:	inc    DWORD PTR [rax]
   14000dda7:	add    BYTE PTR [rax-0xfd0000],cl
   14000ddad:	inc    DWORD PTR [rax]
   14000ddaf:	add    BYTE PTR [rax-0xf90000],al
   14000ddb5:	inc    DWORD PTR [rax]
   14000ddb7:	add    BYTE PTR [rax-0xf10000],al
   14000ddbd:	inc    DWORD PTR [rax]
   14000ddbf:	add    BYTE PTR [rax-0xc10000],al
   14000ddc5:	inc    DWORD PTR [rax]
   14000ddc7:	add    al,al
   14000ddc9:	add    BYTE PTR [rax],al
   14000ddcb:	jg     0x14000ddcc
   14000ddcd:	inc    DWORD PTR [rax]
   14000ddcf:	add    al,ah
   14000ddd1:	clc    
   14000ddd2:	(bad)  
   14000ddd3:	(bad)  
   14000ddd4:	(bad)  
   14000ddd5:	inc    DWORD PTR [rax]
   14000ddd7:	add    BYTE PTR [rax],ch
   14000ddd9:	add    BYTE PTR [rax],al
   14000dddb:	add    BYTE PTR [rax],ah
   14000dddd:	add    BYTE PTR [rax],al
   14000dddf:	add    BYTE PTR [rax+0x0],al
   14000dde2:	add    BYTE PTR [rax],al
   14000dde4:	add    DWORD PTR [rax],eax
   14000dde6:	add    al,0x0
   14000dde8:	add    BYTE PTR [rax],al
   14000ddea:	add    BYTE PTR [rax],al
   14000ddec:	add    BYTE PTR [rdx],al
	...
   14000de06:	add    BYTE PTR [rax],0x0
   14000de09:	add    BYTE PTR [rax],0x0
   14000de0c:	add    BYTE PTR [rax+0x800080],al
   14000de12:	add    BYTE PTR [rax],al
   14000de14:	add    BYTE PTR [rax],0x80
   14000de17:	add    BYTE PTR [rax-0x7fffff80],al
   14000de1d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000de24:	add    BYTE PTR [rax],al
   14000de26:	inc    DWORD PTR [rax]
   14000de28:	add    bh,bh
   14000de2a:	add    BYTE PTR [rax],al
   14000de2c:	add    bh,bh
   14000de2e:	inc    DWORD PTR [rax]
   14000de30:	inc    DWORD PTR [rax]
   14000de32:	add    BYTE PTR [rax],al
   14000de34:	inc    DWORD PTR [rax]
   14000de36:	inc    DWORD PTR [rax]
   14000de38:	(bad)  
   14000de39:	inc    DWORD PTR [rax]
   14000de3b:	add    bh,bh
   14000de3d:	(bad)  
   14000de3e:	inc    DWORD PTR [rax]
	...
   14000de58:	add    BYTE PTR [rax],al
   14000de5a:	xchg   DWORD PTR [rdi-0x80],esi
	...
   14000de65:	add    BYTE PTR [rax],al
   14000de67:	add    BYTE PTR [rdi+0x77],dh
   14000de6a:	jb     0x14000de13
   14000de6c:	inc    DWORD PTR [rax+0x0]
   14000de72:	add    BYTE PTR [rax],al
   14000de74:	add    BYTE PTR [rax],al
   14000de76:	add    BYTE PTR [rax],al
   14000de78:	xchg   DWORD PTR [rdi+0x77],esi
   14000de7b:	mov    bh,0xff
   14000de7d:	clc    
	...
   14000de86:	add    BYTE PTR [rax],al
   14000de88:	mov    BYTE PTR [rdi+0x77],dh
   14000de8b:	ja     0x14000de85
   14000de8d:	mov    BYTE PTR [rdi+0x0],al
   14000de93:	add    BYTE PTR [rax],al
   14000de95:	add    BYTE PTR [rax],al
   14000de97:	add    BYTE PTR [rax-0x77888889],cl
   14000de9d:	xchg   DWORD PTR [rax+0x80],ecx
   14000dea3:	add    BYTE PTR [rax],al
   14000dea5:	add    BYTE PTR [rax],al
   14000dea7:	add    BYTE PTR [rax-0x77888879],cl
   14000dead:	mov    BYTE PTR [rax-0x80],bh
	...
   14000deb8:	mov    BYTE PTR [rdi+0x77],dh
   14000debb:	ja     0x14000de45
   14000debd:	mov    BYTE PTR [rax+0x80],cl
   14000dec3:	add    BYTE PTR [rax],al
   14000dec5:	(bad)  
   14000dec6:	ja     0x14000df3f
   14000dec8:	mov    BYTE PTR [rax-0x77778889],cl
   14000dece:	mov    BYTE PTR [rax+0x0],al
   14000ded4:	ja     0x14000df3c
   14000ded6:	ja     0x14000df4f
   14000ded8:	mov    BYTE PTR [rdi+0x77],dh
   14000dedb:	ja     0x14000de65
   14000dedd:	mov    BYTE PTR [rax+0x80],cl
   14000dee3:	(bad)  
   14000dee4:	jbe    0x14000df5d
   14000dee6:	addr32 ja 0x14000de71
   14000dee9:	mov    BYTE PTR [rdi-0x77777789],al
   14000deef:	add    BYTE PTR [rax],0x0
   14000def2:	add    BYTE PTR [rdi+0x77],dh
   14000def5:	jbe    0x14000df1d
   14000def7:	data16 mov BYTE PTR [rdi+0x77],dh
   14000defb:	ja     0x14000de85
   14000defd:	mov    BYTE PTR [rax+0x8000080],cl
   14000df03:	jbe    0x14000df27
   14000df05:	and    ah,BYTE PTR [rdx]
   14000df07:	data16 mov BYTE PTR [rax-0x78777878],cl
   14000df0e:	ja     0x14000de90
   14000df10:	add    BYTE PTR [rax],al
   14000df12:	xchg   DWORD PTR [rsi+0x22],esp
   14000df15:	and    ah,BYTE PTR [rdx]
   14000df17:	es mov bh,bh
   14000df1a:	mov    BYTE PTR [rdi+0x70777787],al
   14000df20:	add    BYTE PTR [rax],al
   14000df22:	jbe    0x14000df86
   14000df24:	and    ah,BYTE PTR [rdx]
   14000df26:	data16 mov BYTE PTR es:[rax+0x77878788],cl
   14000df2e:	ja     0x14000dfa0
   14000df30:	add    BYTE PTR [rdi],al
   14000df32:	(bad)  
   14000df33:	and    ah,BYTE PTR [rdx]
   14000df35:	sub    ah,BYTE PTR [rsi+0x77778864]
   14000df3b:	ja     0x14000dec4
   14000df3d:	ja     0x14000dfb6
   14000df3f:	jo     0x14000df41
   14000df41:	or     al,0xc4
   14000df43:	push   0x2a
   14000df45:	ja     0x14000dfad
   14000df47:	data16 mov BYTE PTR [rax+0x77877788],cl
   14000df4e:	ja     0x14000dfc0
   14000df50:	add    BYTE PTR [rsi+rax*8+0x66766666],cl
   14000df57:	data16 mov BYTE PTR [rdi+0x77],dh
   14000df5b:	ja     0x14000dee4
   14000df5d:	ja     0x14000dfd6
   14000df5f:	jo     0x14000df61
   14000df61:	jl     0x14000dfa9
   14000df63:	data16 data16 outs dx,BYTE PTR ds:[rsi]
   14000df66:	out    0x76,eax
   14000df68:	mov    BYTE PTR [rax+0x77877788],cl
   14000df6e:	ja     0x14000dfe0
   14000df70:	add    ah,al
   14000df72:	data16 data16 outs dx,BYTE PTR ds:[rsi]
   14000df75:	out    dx,al
   14000df76:	out    dx,al
   14000df77:	jbe    0x14000df01
   14000df79:	mov    BYTE PTR [rdi+0x77],dh
   14000df7c:	ja     0x14000dff5
   14000df7e:	ja     0x14000dff0
   14000df80:	add    BYTE PTR [rsi+0x66],al
   14000df83:	data16 out dx,al
   14000df85:	out    dx,al
   14000df86:	out    dx,al
   14000df87:	data16 mov BYTE PTR [rax+0x77778788],cl
   14000df8e:	ja     0x14000e000
   14000df90:	add    BYTE PTR [rsi+0x66],ah
   14000df93:	ja     0x14000dfc8
   14000df95:	xor    esi,DWORD PTR [rbx]
   14000df97:	(bad)  
   14000df98:	(bad)  
   14000df99:	(bad)  
   14000df9a:	inc    DWORD PTR [rdi+0x70777777]
   14000dfa0:	add    BYTE PTR [rsi+0x66],ah
   14000dfa3:	jrcxz  0x14000df2d
   14000dfa5:	mov    BYTE PTR [rax+0x787788b3],cl
   14000dfab:	xchg   DWORD PTR [rdi+0x77],esi
   14000dfae:	ja     0x14000e020
   14000dfb0:	add    BYTE PTR [rdx+0x66],bh
   14000dfb3:	jle    0x14000dfed
   14000dfb5:	mov    ebx,0x7788b3bb
   14000dfba:	js     0x14000df43
   14000dfbc:	js     0x14000df46
   14000dfbe:	mov    BYTE PTR [rax-0x5755f600],al
   14000dfc4:	jae    0x14000df51
   14000dfc6:	mov    ebx,0x777777b3
   14000dfcb:	ja     0x14000dfcd
   14000dfcd:	add    BYTE PTR [rax],al
   14000dfcf:	add    BYTE PTR [rax],al
   14000dfd1:	ss stos BYTE PTR es:[rdi],al
   14000dfd3:	movabs ds:0x77778788b3bbbbb8,eax
   14000dfdc:	add    BYTE PTR [rax],al
   14000dfde:	add    BYTE PTR [rax],al
   14000dfe0:	or     BYTE PTR [rdi],dh
   14000dfe2:	stos   BYTE PTR es:[rdi],al
   14000dfe3:	cmp    edi,ebx
   14000dfe5:	mov    ebx,0x8788b3bb
   14000dfea:	xchg   DWORD PTR [rax+0x0],eax
   14000dfed:	add    BYTE PTR [rax],al
   14000dfef:	add    BYTE PTR [rbx],al
   14000dff1:	xor    BYTE PTR [rbx-0x41],dh
   14000dff4:	mov    ebx,0x88b33bbb
   14000dff9:	jbe    0x14000e072
   14000dffb:	jo     0x14000dffd
   14000dffd:	add    BYTE PTR [rax],al
   14000dfff:	add    BYTE PTR [rbx],al
   14000e001:	cmp    edi,DWORD PTR [rbx-0x7cc84405]
   14000e007:	mov    bl,0x88
   14000e009:	ja     0x14000e082
   14000e00b:	add    BYTE PTR [rax],al
   14000e00d:	add    BYTE PTR [rax],al
   14000e00f:	add    BYTE PTR [rbx],al
   14000e011:	mov    ebx,0x7833bb88
   14000e016:	call   0x1b0886852
   14000e01b:	add    BYTE PTR [rax],al
   14000e01d:	add    BYTE PTR [rax],al
   14000e01f:	add    BYTE PTR [rbx],cl
   14000e021:	mov    ebx,0x88b7bbbb
   14000e026:	(bad)  
   14000e027:	test   DWORD PTR [rdi+0x88],0x0
   14000e031:	mov    ebx,0x880000bb
   14000e036:	mov    BYTE PTR [rax+0x80],cl
   14000e03c:	add    BYTE PTR [rax],al
   14000e03e:	add    BYTE PTR [rax],al
   14000e040:	(bad)  
   14000e041:	(bad)  
   14000e042:	(bad)  
   14000e043:	(bad)  
   14000e044:	(bad)  
   14000e045:	push   rax
   14000e047:	jg     0x14000e048
   14000e049:	inc    DWORD PTR [rax]
   14000e04b:	(bad)  
   14000e04c:	(bad)  
   14000e04d:	inc    DWORD PTR [rax]
   14000e04f:	ud0    edi,edi
   14000e052:	add    BYTE PTR [rbx],al
   14000e054:	(bad)  
   14000e055:	inc    DWORD PTR [rax]
   14000e057:	add    edi,edi
   14000e059:	inc    DWORD PTR [rax]
   14000e05b:	add    edi,edi
   14000e05d:	inc    DWORD PTR [rax]
   14000e05f:	add    edi,edi
   14000e061:	loopne 0x14000e063
   14000e063:	add    edi,edi
   14000e065:	add    BYTE PTR [rax],al
   14000e067:	add    esi,edi
   14000e069:	add    BYTE PTR [rax],al
   14000e06b:	add    esp,edi
   14000e06d:	add    BYTE PTR [rax],al
   14000e06f:	add    eax,edi
   14000e071:	add    BYTE PTR [rax],al
   14000e073:	add    eax,esi
   14000e075:	add    BYTE PTR [rax],al
   14000e077:	add    eax,esi
   14000e079:	add    BYTE PTR [rax],al
   14000e07b:	add    eax,esp
   14000e07d:	add    BYTE PTR [rax],al
   14000e07f:	add    eax,esp
   14000e081:	add    BYTE PTR [rax],al
   14000e083:	add    eax,eax
   14000e085:	add    BYTE PTR [rax],al
   14000e087:	add    eax,eax
   14000e089:	add    BYTE PTR [rax],al
   14000e08b:	add    eax,eax
   14000e08d:	add    BYTE PTR [rax],al
   14000e08f:	add    eax,eax
   14000e091:	add    BYTE PTR [rax],al
   14000e093:	add    eax,eax
   14000e095:	add    BYTE PTR [rax],al
   14000e097:	add    eax,eax
   14000e099:	add    BYTE PTR [rax],al
   14000e09b:	add    eax,eax
   14000e09d:	add    BYTE PTR [rax],al
   14000e09f:	add    eax,esp
   14000e0a1:	add    BYTE PTR [rax],al
   14000e0a3:	inc    eax
   14000e0a5:	add    BYTE PTR [rax],al
   14000e0a7:	inc    DWORD PTR [rax-0x6f00ff00]
   14000e0ad:	add    BYTE PTR [rcx],al
   14000e0af:	inc    DWORD PTR [rax-0x7f00fd00]
   14000e0b5:	add    BYTE PTR [rdi],al
   14000e0b7:	inc    DWORD PTR [rax-0x3c00f100]
   14000e0bd:	sar    BYTE PTR [rdi-0x1],0x28
   14000e0c1:	add    BYTE PTR [rax],al
   14000e0c3:	add    BYTE PTR [rax],bl
   14000e0c5:	add    BYTE PTR [rax],al
   14000e0c7:	add    BYTE PTR [rax],dh
   14000e0c9:	add    BYTE PTR [rax],al
   14000e0cb:	add    BYTE PTR [rcx],al
   14000e0cd:	add    BYTE PTR [rax+rax*1],al
   14000e0d0:	add    BYTE PTR [rax],al
   14000e0d2:	add    BYTE PTR [rax],al
   14000e0d4:	and    BYTE PTR [rcx],al
	...
   14000e0ee:	add    BYTE PTR [rax],0x0
   14000e0f1:	add    BYTE PTR [rax],0x0
   14000e0f4:	add    BYTE PTR [rax+0x800080],al
   14000e0fa:	add    BYTE PTR [rax],al
   14000e0fc:	add    BYTE PTR [rax],0x80
   14000e0ff:	add    BYTE PTR [rax-0x7fffff80],al
   14000e105:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000e10c:	add    BYTE PTR [rax],al
   14000e10e:	inc    DWORD PTR [rax]
   14000e110:	add    bh,bh
   14000e112:	add    BYTE PTR [rax],al
   14000e114:	add    bh,bh
   14000e116:	inc    DWORD PTR [rax]
   14000e118:	inc    DWORD PTR [rax]
   14000e11a:	add    BYTE PTR [rax],al
   14000e11c:	inc    DWORD PTR [rax]
   14000e11e:	inc    DWORD PTR [rax]
   14000e120:	(bad)  
   14000e121:	inc    DWORD PTR [rax]
   14000e123:	add    bh,bh
   14000e125:	(bad)  
   14000e126:	inc    DWORD PTR [rax]
	...
   14000e138:	add    BYTE PTR [rax],al
   14000e13a:	or     BYTE PTR [rdi+0x7872],al
   14000e140:	add    BYTE PTR [rax],al
   14000e142:	add    BYTE PTR [rax],al
   14000e144:	add    BYTE PTR [rax],al
   14000e146:	ja     0x14000e1bf
   14000e148:	xor    edi,DWORD PTR [rdi-0x9]
   14000e14b:	add    BYTE PTR [rax],al
   14000e14d:	add    BYTE PTR [rax],al
   14000e14f:	add    BYTE PTR [rax],al
   14000e151:	add    BYTE PTR [rax-0x77808889],cl
   14000e157:	add    BYTE PTR [rax],0x0
   14000e15a:	add    BYTE PTR [rax],al
   14000e15c:	add    BYTE PTR [rax],al
   14000e15e:	mov    BYTE PTR [rax-0x77788779],cl
   14000e164:	add    BYTE PTR [rax],al
   14000e166:	add    BYTE PTR [rax],al
   14000e168:	add    BYTE PTR [rax],al
   14000e16a:	mov    BYTE PTR [rdi+0x77],dh
   14000e16d:	js     0x14000e0f7
   14000e16f:	js     0x14000e171
   14000e171:	add    BYTE PTR [rax],al
   14000e173:	add    BYTE PTR [rdi+0x70],dh
   14000e176:	mov    BYTE PTR [rax-0x77778779],cl
   14000e17c:	add    BYTE PTR [rax],al
   14000e17e:	(bad)  
   14000e17f:	ja     0x14000e1f9
   14000e181:	mov    BYTE PTR [rax-0x77878889],cl
   14000e187:	mov    BYTE PTR [rax],al
   14000e189:	add    BYTE PTR [rdi+0x77],dh
   14000e18c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e18d:	js     0x14000e117
   14000e18f:	mov    BYTE PTR [rdi+0x888878],al
   14000e195:	or     BYTE PTR [rdi+0x62],dh
   14000e198:	and    ah,BYTE PTR [rdi+0x78878888]
   14000e19e:	xchg   DWORD PTR [rax+0x0],edi
   14000e1a1:	(bad)  
   14000e1a2:	jb     0x14000e1c6
   14000e1a4:	and    ah,BYTE PTR [rsi+0x7888ff8f]
   14000e1aa:	ja     0x14000e224
   14000e1ac:	add    BYTE PTR [rsi+0x22],dh
   14000e1af:	sub    ah,BYTE PTR [rdi-0x7877779a]
   14000e1b5:	js     0x14000e22e
   14000e1b7:	ja     0x14000e1b9
   14000e1b9:	int3   
   14000e1ba:	push   0xffffffffffffffa7
   14000e1bc:	jbe    0x14000e18a
   14000e1be:	mov    BYTE PTR [rax+0x77777887],cl
   14000e1c4:	(bad)  
   14000e1c5:	(bad)  
   14000e1c6:	addr32 ja 0x14000e190
   14000e1c9:	ja     0x14000e153
   14000e1cb:	ja     0x14000e244
   14000e1cd:	js     0x14000e246
   14000e1cf:	ja     0x14000e1dd
   14000e1d1:	data16 data16 outs dx,BYTE PTR ds:[rsi]
   14000e1d4:	out    dx,al
   14000e1d5:	ja     0x14000e15f
   14000e1d7:	mov    BYTE PTR [rdi+0x4777778],al
   14000e1dd:	data16 jae 0x14000e213
   14000e1e0:	xor    esi,DWORD PTR [rdi]
   14000e1e2:	mov    BYTE PTR [rdi+0x77],dh
   14000e1e5:	ja     0x14000e25e
   14000e1e7:	ja     0x14000e1ef
   14000e1e9:	ins    BYTE PTR es:[rdi],dx
   14000e1ea:	jae    0x14000e174
   14000e1ec:	mov    BYTE PTR [rbx+0x77f8ff8f],dh
   14000e1f2:	ja     0x14000e26b
   14000e1f4:	(bad)  
   14000e1f5:	data16 js 0x14000e233
   14000e1f8:	mov    ebx,0x887788b3
   14000e1fd:	ja     0x14000e276
   14000e1ff:	ja     0x14000e208
   14000e201:	stos   BYTE PTR es:[rdi],al
   14000e202:	movabs ds:0x8878887788b3bbb8,eax
   14000e20b:	mov    BYTE PTR [rbx],al
   14000e20d:	cmp    bh,BYTE PTR [rbx]
   14000e20f:	mov    edi,DWORD PTR [rbx+0x707787b3]
   14000e215:	add    BYTE PTR [rax],al
   14000e217:	add    BYTE PTR [rbx],al
   14000e219:	cmp    DWORD PTR [rax-0x784c4c45],0x77
   14000e220:	add    BYTE PTR [rax],al
   14000e222:	add    BYTE PTR [rax],al
   14000e224:	mov    edi,DWORD PTR [rax]
   14000e226:	mov    edi,DWORD PTR [rbx+0x78873338]
   14000e22c:	add    BYTE PTR [rax],al
   14000e22e:	add    BYTE PTR [rax],al
   14000e230:	or     ecx,DWORD PTR [rbx-0x78774c45]
   14000e236:	mov    BYTE PTR [rax+0x0],al
   14000e23c:	or     BYTE PTR [rbx-0x77707745],bh
   14000e242:	add    BYTE PTR [rax],0x0
   14000e245:	add    BYTE PTR [rax],al
   14000e247:	add    bh,bh
   14000e249:	(bad)  
   14000e24a:	inc    DWORD PTR [rax]
   14000e24c:	(bad)  
   14000e24d:	clc    
   14000e24e:	(bad)  
   14000e250:	push   rax
   14000e252:	add    eax,DWORD PTR [rax]
   14000e254:	push   rax
   14000e256:	add    DWORD PTR [rax],eax
   14000e258:	push   rax
   14000e25a:	add    BYTE PTR [rax],al
   14000e25c:	push   rax
   14000e25e:	add    BYTE PTR [rax],al
   14000e260:	call   QWORD PTR [rax]
   14000e262:	add    BYTE PTR [rax],al
   14000e264:	clc    
   14000e265:	add    BYTE PTR [rax],al
   14000e267:	add    al,dh
   14000e269:	add    BYTE PTR [rax],al
   14000e26b:	add    al,ah
   14000e26d:	add    BYTE PTR [rax],al
   14000e26f:	add    al,ah
   14000e271:	add    BYTE PTR [rax],al
   14000e273:	add    al,al
   14000e275:	add    BYTE PTR [rax],al
   14000e277:	add    al,al
   14000e279:	add    BYTE PTR [rax],al
   14000e27b:	add    BYTE PTR [rax-0x80000000],al
   14000e281:	add    BYTE PTR [rax],al
   14000e283:	add    BYTE PTR [rax-0x80000000],al
   14000e289:	add    BYTE PTR [rax],al
   14000e28b:	add    BYTE PTR [rax-0x80000000],al
   14000e291:	add    BYTE PTR [rax],al
   14000e293:	add    BYTE PTR [rax-0x7fff8100],al
   14000e299:	add    bh,bh
   14000e29b:	add    BYTE PTR [rax],al
   14000e29d:	add    bh,bh
   14000e29f:	add    BYTE PTR [rax-0x7fff00ff],al
   14000e2a5:	(bad)  
   14000e2a6:	inc    DWORD PTR [rax]
   14000e2a8:	sub    BYTE PTR [rax],al
   14000e2aa:	add    BYTE PTR [rax],al
   14000e2ac:	adc    BYTE PTR [rax],al
   14000e2ae:	add    BYTE PTR [rax],al
   14000e2b0:	and    BYTE PTR [rax],al
   14000e2b2:	add    BYTE PTR [rax],al
   14000e2b4:	add    DWORD PTR [rax],eax
   14000e2b6:	add    al,0x0
   14000e2b8:	add    BYTE PTR [rax],al
   14000e2ba:	add    BYTE PTR [rax],al
   14000e2bc:	add    BYTE PTR [rax],0x0
	...
   14000e2d3:	add    BYTE PTR [rax],al
   14000e2d5:	add    BYTE PTR [rax+0x800000],al
   14000e2db:	add    BYTE PTR [rax],al
   14000e2dd:	add    BYTE PTR [rax+0x8000],0x0
   14000e2e4:	add    BYTE PTR [rax],0x80
   14000e2e7:	add    BYTE PTR [rax-0x7fffff80],al
   14000e2ed:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000e2f4:	add    BYTE PTR [rax],al
   14000e2f6:	inc    DWORD PTR [rax]
   14000e2f8:	add    bh,bh
   14000e2fa:	add    BYTE PTR [rax],al
   14000e2fc:	add    bh,bh
   14000e2fe:	inc    DWORD PTR [rax]
   14000e300:	inc    DWORD PTR [rax]
   14000e302:	add    BYTE PTR [rax],al
   14000e304:	inc    DWORD PTR [rax]
   14000e306:	inc    DWORD PTR [rax]
   14000e308:	(bad)  
   14000e309:	inc    DWORD PTR [rax]
   14000e30b:	add    bh,bh
   14000e30d:	(bad)  
   14000e30e:	inc    DWORD PTR [rax]
   14000e310:	add    BYTE PTR [rax],al
   14000e312:	add    BYTE PTR [rax],al
   14000e314:	(bad)  
   14000e315:	ja     0x14000e38e
   14000e317:	ja     0x14000e319
   14000e319:	add    BYTE PTR [rax],al
   14000e31b:	add    BYTE PTR [rax],cl
   14000e31d:	mov    BYTE PTR [rdx+0xa7],cl
   14000e323:	add    BYTE PTR [rax],cl
   14000e325:	mov    BYTE PTR [rdi+0xb7],al
   14000e32b:	add    BYTE PTR [rax],cl
   14000e32d:	mov    BYTE PTR [rax+0x87],cl
   14000e333:	data16 or BYTE PTR [rax+0x8788],cl
   14000e33a:	rex.X
   14000e33b:	es push 0x878888
   14000e341:	add    al,0x6a
   14000e343:	stos   BYTE PTR es:[rdi],al
   14000e344:	push   0x777777
   14000e349:	rex.RX stos BYTE PTR es:[rdi],al
   14000e34b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e34c:	push   0xf7ffff
   14000e351:	rex.RX
   14000e352:	data16 ja 0x14000e31d
   14000e355:	ja     0x14000e3ce
   14000e357:	ja     0x14000e35f
   14000e359:	ins    BYTE PTR es:[rdi],dx
   14000e35a:	data16 enterw 0xffff,0x87
   14000e360:	(bad)  
   14000e361:	movsxd edi,DWORD PTR [rbx+0x6086e8bb]
   14000e367:	xchg   DWORD PTR [rax],ecx
   14000e369:	mov    ax,0xe88b
   14000e36d:	mov    BYTE PTR [rax-0x479d4479],cl
   14000e373:	mov    ebx,0x77e7
   14000e378:	mov    ebx,0xe7bb8b8b
   14000e37d:	jo     0x14000e37f
   14000e37f:	add    BYTE PTR [rax+0x767bb388],bh
   14000e385:	add    BYTE PTR [rax],al
   14000e387:	add    BYTE PTR [rbx],cl
   14000e389:	mov    ebx,0x7700
   14000e38e:	add    BYTE PTR [rax],al
   14000e390:	inc    DWORD PTR [rax-0x7f010000]
   14000e396:	add    BYTE PTR [rax],al
   14000e398:	inc    DWORD PTR [rax-0x7f010000]
   14000e39e:	add    BYTE PTR [rax],al
   14000e3a0:	cld    
   14000e3a1:	add    BYTE PTR [rax],0x0
   14000e3a4:	lock add BYTE PTR [rax],al
   14000e3a7:	add    al,ah
   14000e3a9:	add    BYTE PTR [rax],al
   14000e3ab:	add    al,al
   14000e3ad:	add    BYTE PTR [rax],al
   14000e3af:	add    al,al
   14000e3b1:	add    BYTE PTR [rax],al
   14000e3b3:	add    BYTE PTR [rax-0x80000000],al
   14000e3b9:	add    BYTE PTR [rax],al
   14000e3bb:	add    BYTE PTR [rax+0x0],al
   14000e3c1:	sldt   WORD PTR [rax]
   14000e3c4:	add    BYTE PTR [rdi],bl
   14000e3c6:	add    BYTE PTR [rax],al
   14000e3c8:	add    BYTE PTR [rdi],bh
   14000e3ca:	add    BYTE PTR [rax],al
   14000e3cc:	mov    edi,?
   14000e3ce:	add    BYTE PTR [rax],al
   14000e3d0:	sub    BYTE PTR [rax],al
   14000e3d2:	add    BYTE PTR [rax],al
   14000e3d4:	xor    BYTE PTR [rax],al
   14000e3d6:	add    BYTE PTR [rax],al
   14000e3d8:	(bad)  
   14000e3d9:	add    BYTE PTR [rax],al
   14000e3db:	add    BYTE PTR [rcx],al
   14000e3dd:	add    BYTE PTR [rax],cl
   14000e3df:	add    BYTE PTR [rax],al
   14000e3e1:	add    BYTE PTR [rax],al
   14000e3e3:	add    BYTE PTR [rax],al
   14000e3e5:	or     DWORD PTR [rax],eax
	...
   14000e3ef:	add    BYTE PTR [rax],al
   14000e3f1:	add    DWORD PTR [rax],eax
   14000e3f3:	add    BYTE PTR [rax],al
   14000e3f5:	add    DWORD PTR [rax],eax
   14000e3f7:	add    BYTE PTR [rax],al
   14000e3f9:	add    BYTE PTR [rax],al
   14000e3fb:	add    BYTE PTR [rip+0x14000c6f],dl        # 0x15400f070
   14000e401:	jnp    0x14000e40f
   14000e403:	add    BYTE PTR [rdi+rsi*2],bl
   14000e406:	adc    eax,DWORD PTR [rax]
   14000e408:	rex.WRB
   14000e409:	rex.WRXB
   14000e40a:	add    BYTE PTR ss:[rdi+0x59],ch
   14000e40e:	sub    eax,DWORD PTR [rax]
   14000e410:	pop    rcx
   14000e411:	xor    al,BYTE PTR gs:[rax]
   14000e414:	ins    BYTE PTR es:[rdi],dx
   14000e415:	outs   dx,BYTE PTR ds:[rsi]
   14000e416:	(bad)  
   14000e417:	add    BYTE PTR [rbp+rcx*2+0x4b],cl
   14000e41b:	add    BYTE PTR [rdx+0x4b],bl
   14000e41e:	rex.WB add BYTE PTR [r10+0x52],bl
   14000e422:	rex.WXB add BYTE PTR [r14+0x57],dl
   14000e426:	push   rsi
   14000e427:	add    BYTE PTR [rdx+0x5b],ah
   14000e42a:	push   rdi
   14000e42b:	add    BYTE PTR [rbx+0x59],dh
   14000e42e:	push   rbx
   14000e42f:	add    BYTE PTR [rcx+0x64],ch
   14000e432:	pop    rdx
   14000e433:	add    BYTE PTR [rdx+0x6f],bh
   14000e436:	push   rbx
   14000e437:	add    BYTE PTR [rsi+0x6a],ch
   14000e43a:	data16 add BYTE PTR [rdx+0x6d],dh
   14000e43e:	imul   eax,DWORD PTR [rax],0x74
   14000e441:	jae    0x14000e4ad
   14000e443:	add    BYTE PTR [rbx+0x7a],bh
   14000e446:	jae    0x14000e448
   14000e448:	(bad)  
   14000e449:	es (bad) 
   14000e44b:	add    BYTE PTR [rcx-0x62ffdcd6],cl
   14000e451:	sub    eax,0x338c0025
   14000e456:	add    BYTE PTR es:[rdi-0x65ffd5ca],dl
   14000e45d:	cmp    DWORD PTR [rcx],esi
   14000e45f:	add    BYTE PTR [rcx-0x39ffd3c7],ch
   14000e465:	cmp    ebp,DWORD PTR [rdi]
   14000e467:	add    BYTE PTR [rcx+rax*2+0x5090002f],bl
   14000e46e:	(bad)  
   14000e46f:	add    BYTE PTR [rbx-0x77ffc7b8],bl
   14000e475:	pop    rdi
   14000e476:	cmp    DWORD PTR [rax],eax
   14000e478:	fwait
   14000e479:	push   rsi
   14000e47a:	cmp    DWORD PTR [rax],eax
   14000e47c:	scas   eax,DWORD PTR es:[rdi]
   14000e47d:	rex.WRXB
   14000e47e:	add    BYTE PTR ss:[rdi-0x4effc490],cl
   14000e485:	outs   dx,BYTE PTR ds:[rsi]
   14000e486:	cmp    eax,DWORD PTR [rax]
   14000e488:	retf   
   14000e489:	push   rcx
   14000e48a:	xor    al,0x0
   14000e48c:	shr    DWORD PTR [rdx+0x34],1
   14000e48f:	add    ah,ah
   14000e491:	jns    0x14000e4c6
   14000e493:	add    BYTE PTR [rdi-0x5cffb6ab],bl
   14000e499:	rex.WRX
   14000e49a:	rex.RX add BYTE PTR [rsi-0x4dffb8ac],r12b
   14000e4a1:	push   rbp
   14000e4a2:	add    BYTE PTR [r15-0x4cffada1],r12b
   14000e4a9:	pop    rbx
   14000e4aa:	push   rsp
   14000e4ab:	add    BYTE PTR [rax-0x59ffa886],cl
   14000e4b1:	ins    BYTE PTR es:[rdi],dx
   14000e4b2:	rex.X add BYTE PTR [rbp-0x42ffb79c],sil
   14000e4b9:	jnp    0x14000e509
   14000e4bb:	add    BYTE PTR [rax-0x47ffaa99],ch
   14000e4c1:	fs push rbp
   14000e4c3:	add    BYTE PTR [rsi-0x7dff9798],al
   14000e4c9:	jnp    0x14000e541
   14000e4cb:	add    BYTE PTR [rdi-0x46ff8f90],dl
   14000e4d1:	jns    0x14000e541
   14000e4d3:	add    ah,dl
   14000e4d5:	outs   dx,DWORD PTR ds:[rsi]
   14000e4d6:	add    bl,r8b
   14000e4d9:	jb     0x14000e545
   14000e4db:	add    BYTE PTR [rsi],cl
   14000e4dd:	mov    BYTE PTR [rcx],cl
   14000e4df:	add    BYTE PTR [rax],bl
   14000e4e1:	(bad)  
   14000e4e2:	(bad)  
   14000e4e3:	add    BYTE PTR [rcx],cl
   14000e4e5:	xchg   edi,eax
   14000e4e6:	or     al,0x0
   14000e4e8:	sbb    eax,DWORD PTR [rbp-0x63f9ffee]
   14000e4ee:	adc    BYTE PTR [rax],al
   14000e4f0:	sbb    edx,DWORD PTR [rbx+rdx*1+0x198e2800]
   14000e4f7:	add    BYTE PTR [rdx],ah
   14000e4f9:	xchg   ebp,eax
   14000e4fa:	(bad)  
   14000e4fb:	add    BYTE PTR [rsp+rdi*4],al
   14000e4fe:	or     eax,0x14a41a00
   14000e503:	add    BYTE PTR [rdi],cl
   14000e505:	mov    edx,0xb5140018
   14000e50a:	sbb    BYTE PTR [rax],al
   14000e50c:	sub    DWORD PTR [rsi-0x48d6ffe7],esp
   14000e512:	(bad)  
   14000e513:	add    BYTE PTR [rcx],ch
   14000e515:	mov    BYTE PTR [rbx],ah
   14000e517:	add    BYTE PTR [rip+0x3100279e],ch        # 0x171010cbb
   14000e51d:	sahf   
   14000e51e:	and    al,0x0
   14000e520:	sub    ch,BYTE PTR [rdx-0x5ccaffdb]
   14000e526:	and    al,0x0
   14000e528:	cmp    dh,BYTE PTR [rcx-0x58caffd8]
   14000e52e:	xor    BYTE PTR [rax],al
   14000e530:	cmp    DWORD PTR [rsi-0x79b2ffce],esi
   14000e536:	sub    BYTE PTR [rax],al
   14000e538:	push   rdi
   14000e539:	test   DWORD PTR [rcx],ebp
   14000e53b:	add    BYTE PTR [rdi-0x66],al
   14000e53e:	sub    eax,DWORD PTR [rax]
   14000e540:	rex.R xchg esi,eax
   14000e542:	add    BYTE PTR ss:[rax-0x78],ch
   14000e546:	xor    eax,DWORD PTR [rax]
   14000e548:	ja     0x14000e4d4
   14000e54a:	(bad)  
   14000e54b:	add    BYTE PTR [rdi-0x6d],ah
   14000e54e:	add    BYTE PTR ss:[rdx+riz*4+0x29],al
   14000e553:	add    BYTE PTR [rax-0x56],cl
   14000e556:	add    BYTE PTR ss:[rax+rbp*4+0x3e],bl
   14000e55b:	add    BYTE PTR [rsi-0x47],al
   14000e55e:	add    BYTE PTR ss:[rax-0x5f],dh
   14000e562:	cmp    BYTE PTR [rax],al
   14000e564:	adc    ecx,edx
   14000e566:	sbb    al,BYTE PTR [rax]
   14000e568:	or     esp,esp
   14000e56a:	(bad)  
   14000e56b:	add    BYTE PTR [rax],bl
   14000e56d:	shr    DWORD PTR [rcx],cl
   14000e56f:	add    BYTE PTR [rsi+rax*8],ch
   14000e572:	add    BYTE PTR es:[rbx],bh
   14000e575:	ret    
   14000e576:	sub    al,0x0
   14000e578:	and    bl,bh
   14000e57a:	(bad)  
   14000e57b:	add    BYTE PTR [rsi],dh
   14000e57d:	xlat   BYTE PTR ds:[rbx]
   14000e57e:	cmp    BYTE PTR [rax],al
   14000e580:	sbb    al,0xea
   14000e582:	sub    eax,0x39ef2800
   14000e587:	add    BYTE PTR [rcx-0x38],cl
   14000e58a:	cmp    eax,DWORD PTR [rax]
   14000e58c:	push   rbp
   14000e58d:	ret    
   14000e58e:	cmp    DWORD PTR [rax],eax
   14000e590:	rex.X sar DWORD PTR [rcx],1
   14000e593:	add    BYTE PTR [rax-0x2f],bl
   14000e596:	cmp    eax,0x41827400
   14000e59b:	add    BYTE PTR [rax-0x53],cl
   14000e59e:	rex.WXB add BYTE PTR [r10-0x57],bl
   14000e5a2:	add    BYTE PTR [rbp-0x49],r9b
   14000e5a6:	rex.X add BYTE PTR [rdi-0x46],bl
   14000e5aa:	rex.WRB add BYTE PTR [r8-0x59],r13b
   14000e5ae:	rex.W add BYTE PTR [rbp-0x60],sil
   14000e5b2:	rex.WX add BYTE PTR [rax-0x47],bpl
   14000e5b6:	add    BYTE PTR [r15+rbp*4+0x52],r15b
   14000e5bb:	add    BYTE PTR [rdi-0x50],bh
   14000e5be:	pop    rsp
   14000e5bf:	add    BYTE PTR [rsi],dl
   14000e5c1:	ret    
   14000e5c2:	add    BYTE PTR [rbx],r14b
   14000e5c5:	out    dx,al
   14000e5c6:	push   rcx
   14000e5c7:	add    BYTE PTR [rsi],dh
   14000e5c9:	fsubr  QWORD PTR [rsi+0x0]
   14000e5cc:	xor    al,0xe7
   14000e5ce:	imul   eax,DWORD PTR [rax],0x43c050
   14000e5d4:	push   rdx
   14000e5d5:	rol    BYTE PTR [rax+0x0],cl
   14000e5d8:	retfw  
   14000e5da:	rex.WR add BYTE PTR [rdx+rcx*8+0x4f],r14b
   14000e5df:	add    BYTE PTR [rcx+rcx*8+0x52],bh
   14000e5e3:	add    BYTE PTR [rsi-0x3a],al
   14000e5e6:	add    BYTE PTR [edx-0x12],cl
   14000e5ea:	jb     0x14000e5ec
   14000e5ec:	call   0xe664
   14000e5f0:	retf   
   14000e5f1:	cmp    DWORD PTR [rbx],0x0
   14000e5f4:	in     eax,0x94
   14000e5f6:	cmp    al,BYTE PTR [rax]
   14000e5f8:	fidiv  WORD PTR [rax-0x5212ffca]
   14000e5fe:	cmp    DWORD PTR [rax],eax
   14000e600:	cmc    
   14000e601:	sar    DWORD PTR [rsi],0x0
   14000e604:	test   DWORD PTR [rax+rax*2+0x46819b00],eax
   14000e60b:	add    BYTE PTR [rdx-0x68ffb06b],al
   14000e611:	(bad)  
   14000e612:	push   rbp
   14000e613:	add    BYTE PTR [rbp-0x4effa96f],al
   14000e619:	xchg   ebp,eax
   14000e61a:	rex.WB add BYTE PTR [r14-0x5bffa575],dil
   14000e621:	cwde   
   14000e622:	pop    rdx
   14000e623:	add    BYTE PTR [rsi+rbp*4-0x4b71ffaf],cl
   14000e62a:	push   rax
   14000e62b:	add    BYTE PTR [rcx-0x46ffa660],ch
   14000e631:	movabs ds:0x8995007b83850053,eax
   14000e63a:	jnp    0x14000e63c
   14000e63c:	mov    bh,0x9e
   14000e63e:	js     0x14000e640
   14000e640:	cdq    
   14000e641:	mov    dh,0x6f
   14000e643:	add    BYTE PTR [rsi-0x4fff905b],ch
   14000e649:	lods   al,BYTE PTR ds:[rsi]
   14000e64a:	add    BYTE PTR gs:[rdx-0x47ff9a47],ah
   14000e651:	mov    ebp,0x8ac0007b
   14000e656:	rex.WRXB add r10b,r11b
   14000e659:	mov    BYTE PTR [rdi+0x0],al
   14000e65c:	retf   0x4997
   14000e65f:	add    dl,bl
   14000e661:	cwde   
   14000e662:	rex.X add dil,al
   14000e665:	test   DWORD PTR [rbp+0x0],edx
   14000e668:	xlat   BYTE PTR ds:[rbx]
   14000e669:	mov    BYTE PTR [rbx+0x0],dl
   14000e66c:	retf   0x5993
   14000e66f:	add    dl,bl
   14000e671:	xchg   ebp,eax
   14000e672:	pop    rbx
   14000e673:	add    bl,ah
   14000e675:	xchg   ecx,eax
   14000e676:	add    r11b,r10b
   14000e679:	test   eax,0xafed0056
   14000e67e:	rex.RXB add r8b,r9b
   14000e681:	xchg   BYTE PTR [rax+0x0],ah
   14000e684:	retf   0x659a
   14000e687:	add    dh,dl
   14000e689:	xchg   esi,eax
   14000e68a:	movsxd eax,DWORD PTR [rax]
   14000e68c:	(bad)  
   14000e68d:	xor    BYTE PTR [rdx+0x0],0xe5
   14000e691:	pushf  
   14000e692:	(bad)  
   14000e693:	add    dl,cl
   14000e695:	mov    al,0x6e
   14000e697:	add    bl,ch
   14000e699:	mov    ch,0x68
   14000e69b:	add    BYTE PTR [rdi+rax*8-0x387affaf],cl
   14000e6a2:	jnp    0x14000e6a4
   14000e6a4:	(bad)  
   14000e6a5:	jrcxz  0x14000e71d
   14000e6a7:	add    dl,dl
   14000e6a9:	rcr    DWORD PTR [rax+rax*1-0x7],0xca
   14000e6ae:	rex.RXB add r9b,r10b
   14000e6b1:	enter  0x77,0xf8
   14000e6b5:	retf   0x6a
   14000e6b8:	sbb    al,0x85
   14000e6ba:	mov    esi,0xb78e2e00
   14000e6bf:	add    BYTE PTR [rbp-0x70],dl
   14000e6c2:	fwait
   14000e6c3:	add    BYTE PTR [rsi-0x4e],ch
   14000e6c6:	lods   eax,DWORD PTR ds:[rsi]
   14000e6c7:	add    BYTE PTR [rsi],dh
   14000e6c9:	fistp  WORD PTR [rbx-0x6915ef00]
   14000e6cf:	add    BYTE PTR [rcx],ch
   14000e6d1:	jmp    QWORD PTR [rdx-0x6500a300]
   14000e6d7:	add    BYTE PTR [rcx-0xf],ch
   14000e6da:	mov    WORD PTR [rax],es
   14000e6dc:	push   rsi
   14000e6dd:	jmp    QWORD PTR [rcx-0x510c8e00]
   14000e6e3:	add    BYTE PTR [rip+0x2300d18f],cl        # 0x16301b878
   14000e6e9:	xchg   esi,eax
   14000e6ea:	retf   
   14000e6eb:	add    BYTE PTR [rsi],bl
   14000e6ed:	movabs ds:0x9d0f00d5aa2e00d3,al
   14000e6f6:	loop   0x14000e6f8
   14000e6f8:	(bad)  
   14000e6fa:	clc    
   14000e6fb:	add    BYTE PTR [rbx+rsi*4],ch
   14000e6fe:	in     eax,dx
   14000e6ff:	add    BYTE PTR [rdx-0x51],cl
   14000e702:	(bad)  
   14000e703:	add    BYTE PTR [rax-0x48],al
   14000e706:	cmc    
   14000e707:	add    BYTE PTR [rip+0x3300ffc7],dl        # 0x17301e6d4
   14000e70d:	retf   0xfd
   14000e710:	push   rax
   14000e711:	sar    bl,1
   14000e713:	add    BYTE PTR [rsi+rdx*8-0x4],ch
   14000e717:	add    BYTE PTR [rbp-0x1f],bl
   14000e71a:	inc    DWORD PTR [rax]
   14000e71c:	ja     0x14000e6ff
   14000e71e:	inc    DWORD PTR [rax]
   14000e720:	mov    ecx,DWORD PTR [rdx-0x736cff7c]
   14000e726:	test   DWORD PTR [rax],eax
   14000e728:	mov    ds,WORD PTR [rsi-0x6d6aff76]
   14000e72e:	mov    al,BYTE PTR [rax]
   14000e730:	fwait
   14000e731:	(bad)  
   14000e732:	xchg   ebx,eax
   14000e733:	add    BYTE PTR [rbx-0x5bff7568],ah
   14000e739:	pushf  
   14000e73a:	xchg   esi,eax
   14000e73b:	add    BYTE PTR [rcx-0x45ff6065],bh
   14000e741:	movabs eax,ds:0xa9b6009ca3a50080
   14000e74a:	(bad)  
   14000e74b:	add    BYTE PTR [rdi-0x55ff5e5b],bl
   14000e751:	stos   BYTE PTR es:[rdi],al
   14000e752:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e753:	add    BYTE PTR [rsp+rbp*4-0x4c4bff5b],dh
   14000e75a:	stos   DWORD PTR es:[rdi],eax
   14000e75b:	add    BYTE PTR [rdx-0x31ff4c46],bh
   14000e761:	xchg   ebx,eax
   14000e762:	xchg   BYTE PTR [rax],al
   14000e764:	int    0x9b
   14000e766:	nop
   14000e767:	add    cl,al
   14000e769:	mov    al,0x9a
   14000e76b:	add    ch,ah
   14000e76d:	mov    al,0x80
   14000e76f:	add    bl,al
   14000e771:	mov    ebp,0xd2b100b6
   14000e776:	mov    WORD PTR [rax],es
   14000e778:	lods   al,BYTE PTR ds:[rsi]
   14000e779:	in     eax,0x98
   14000e77b:	add    BYTE PTR [rbp-0x41ff5f28],bh
   14000e781:	shl    BYTE PTR [rdi-0x410d5400],0x0
   14000e788:	ror    ebp,cl
   14000e78a:	xchg   esp,eax
   14000e78b:	add    al,cl
   14000e78d:	ret    0xae
   14000e790:	fadd   st,st(4)
   14000e792:	movabs ds:0xbbc4c500a6d8c900,al
   14000e79b:	add    ah,dl
   14000e79d:	(bad)  
   14000e79e:	mov    esp,0xb7d8c800
   14000e7a3:	add    al,bl
   14000e7a5:	sar    BYTE PTR [rdi-0x4a183200],cl
   14000e7ab:	add    BYTE PTR [rbp-0x45ff2135],al
   14000e7b1:	std    
   14000e7b2:	fld    QWORD PTR [rax]
   14000e7b4:	sbb    ecx,0xfffffff7
   14000e7b7:	add    BYTE PTR [rcx-0x4eff1412],dl
   14000e7bd:	out    dx,al
   14000e7be:	std    
   14000e7bf:	add    cl,cl
   14000e7c1:	leave  
   14000e7c2:	ret    
   14000e7c3:	add    cl,dl
   14000e7c5:	(bad)  
   14000e7c6:	mov    BYTE PTR [rax],0xcf
   14000e7c9:	ror    cl,1
   14000e7cb:	add    dh,dl
   14000e7cd:	(bad)  
   14000e7ce:	mov    DWORD PTR [rax],0xd1dada
   14000e7d4:	loope  0x14000e7b3
   14000e7d6:	int3   
   14000e7d7:	add    dl,bl
   14000e7d9:	out    0xd0,eax
   14000e7db:	add    dh,ah
   14000e7dd:	in     al,0xd9
   14000e7df:	add    dl,dh
   14000e7e1:	out    dx,al
   14000e7e2:	fadd   DWORD PTR [rax]
   14000e7e4:	(bad)  
   14000e7e6:	lock add cl,ch
   14000e7e9:	jmp    0x14000e7ce
   14000e7eb:	add    bh,ah
   14000e7ed:	hlt    
   14000e7ee:	in     eax,0x0
   14000e7f0:	div    dh
   14000e7f2:	jmp    0x14000e7f4
   14000e7f4:	(bad)  
   14000e7f5:	(bad)  
   14000e7f6:	inc    DWORD PTR [rax]
	...
   14000e844:	add    cl,dl
   14000e846:	xor    eax,0xd68f
	...
   14000e86f:	add    dh,bl
   14000e871:	(bad)  
   14000e872:	(bad)  
   14000e873:	nop
   14000e874:	nop
   14000e875:	jnp    0x14000e8e0
   14000e877:	xor    al,0xfe
   14000e879:	hlt    
   14000e87a:	adc    eax,DWORD PTR [rax]
	...
   14000e89c:	add    BYTE PTR [rax],al
   14000e89e:	retf   
   14000e89f:	nop
   14000e8a0:	(bad)  
   14000e8a1:	(bad)  
   14000e8a2:	nop
   14000e8a3:	nop
   14000e8a4:	xor    esi,DWORD PTR [rsi-0x9cc4b]
   14000e8aa:	dec    ch
   14000e8ac:	pop    QWORD PTR [rax]
	...
   14000e8ca:	add    BYTE PTR [rax],al
   14000e8cc:	add    BYTE PTR [rbx],dl
   14000e8ce:	xor    al,0xcb
   14000e8d0:	(bad)  
   14000e8d1:	(bad)  
   14000e8d2:	(bad)  
   14000e8d3:	(bad)  
   14000e8d5:	(bad)  
   14000e8d7:	nop
   14000e8d8:	idiv   cl
   14000e8da:	cld    
   14000e8db:	push   rsp
   14000e8dd:	adc    DWORD PTR [rax],eax
	...
   14000e8fb:	add    BYTE PTR [rax],al
   14000e8fd:	retf   0xdcd7
   14000e900:	(bad)  
   14000e902:	(bad)  
   14000e903:	adc    BYTE PTR [rbx],dl
   14000e905:	int    0xcf
   14000e907:	retf   
   14000e908:	idiv   cl
   14000e90a:	div    dh
   14000e90c:	cld    
   14000e90d:	cld    
   14000e90e:	int    0x0
	...
   14000e92c:	add    dl,cl
   14000e92e:	shl    BYTE PTR [rsp+rsi*1],1
   14000e931:	adc    DWORD PTR [rax],edx
   14000e933:	(bad)  
   14000e934:	iret   
   14000e935:	rcl    BYTE PTR [rax-0xa090935],1
   14000e93b:	div    dl
   14000e93d:	(bad)  
   14000e93e:	repz loop 0x14000e8d0
	...
   14000e95d:	retf   0x8fcd
   14000e960:	ror    ch,1
   14000e962:	retf   
   14000e963:	retf   0xcdcd
   14000e966:	retf   
   14000e967:	int    0xf4
   14000e969:	div    ah
   14000e96b:	hlt    
   14000e96c:	repnz fcom st(0)
   14000e96f:	fdiv   st,st(6)
   14000e971:	(bad)  
	...
   14000e98a:	add    BYTE PTR [rax],al
   14000e98c:	add    dl,cl
   14000e98e:	(bad)  
   14000e98f:	xor    al,0x10
   14000e991:	adc    BYTE PTR [rax+rdx*4],dh
   14000e994:	int    0xcf
   14000e996:	nop
   14000e997:	retf   
   14000e998:	hlt    
   14000e999:	hlt    
   14000e99a:	hlt    
   14000e99b:	hlt    
   14000e99c:	repz ror esi,cl
   14000e99f:	(bad)  
   14000e9a0:	(bad)  
   14000e9a1:	repz repnz (bad) 
	...
   14000e9bc:	add    dl,cl
   14000e9be:	ror    dl,1
   14000e9c0:	retf   
   14000e9c1:	(bad)  
   14000e9c2:	retf   0x3434
   14000e9c5:	int    0xcb
   14000e9c7:	retf   
   14000e9c8:	hlt    
   14000e9c9:	hlt    
   14000e9ca:	repz hlt 
   14000e9cc:	(bad)  
   14000e9ce:	xlat   BYTE PTR ds:[rbx]
   14000e9cf:	(bad)  
   14000e9d0:	rcl    edi,cl
   14000e9d2:	fdecstp 
   14000e9d4:	stc    
	...
   14000e9ed:	int    0xd3
   14000e9ef:	xor    al,0x13
   14000e9f1:	adc    DWORD PTR [rdi+rcx*4],esi
   14000e9f4:	int    0xcf
   14000e9f6:	nop
   14000e9f7:	retf   
   14000e9f8:	hlt    
   14000e9f9:	repz repz repz call 0x113d7b7d4
   14000ea01:	rcl    esi,cl
   14000ea03:	call   0x14000eafc
	...
   14000ea1c:	add    dl,cl
   14000ea1e:	ror    ch,1
   14000ea20:	ror    ch,1
   14000ea22:	int    0xcd
   14000ea24:	(bad)  
   14000ea25:	ror    ch,1
   14000ea27:	retf   
   14000ea28:	repz repz bnd call 0x10edade18
   14000ea30:	(bad)  
   14000ea31:	(bad)  
   14000ea32:	rcr    ecx,cl
   14000ea34:	repz add BYTE PTR [rax],al
	...
   14000ea4b:	add    BYTE PTR [rax],al
   14000ea4d:	int    0xd6
   14000ea4f:	xor    al,0x13
   14000ea51:	adc    DWORD PTR [rbx],edx
   14000ea53:	xor    al,0xcb
   14000ea55:	iret   
   14000ea56:	nop
   14000ea57:	int    0xf3
   14000ea59:	repz call 0x128e9d347
   14000ea5f:	call   0x119d4b93a
   14000ea64:	repz add BYTE PTR [rax],al
	...
   14000ea7b:	add    BYTE PTR [rax],al
   14000ea7d:	int    0xd3
   14000ea7f:	(bad)  
   14000ea80:	retf   
   14000ea81:	iret   
   14000ea82:	iret   
   14000ea83:	int    0xcd
   14000ea85:	int    0xcb
   14000ea87:	int    0xf2
   14000ea89:	call   0x119dac467
   14000ea8e:	(bad)  
   14000ea90:	call   0x133dabe6e
	...
   14000eaa5:	adc    DWORD PTR [rdx+rcx*1],ecx
   14000eaa8:	or     DWORD PTR [rcx],ecx
   14000eaaa:	or     cl,BYTE PTR [rsi+rcx*1]
   14000eaad:	int    0xd8
   14000eaaf:	int    0x11
   14000eab1:	or     al,0x10
   14000eab3:	adc    ecx,ebx
   14000eab5:	iret   
   14000eab6:	nop
   14000eab7:	retf   
   14000eab8:	repnz loop 0x14000ea94
   14000eabb:	(bad)  
   14000eabd:	(bad)  
   14000eabf:	(bad)  
   14000eac1:	(bad)  
   14000eac3:	fsubr  st,st(0)
	...
   14000ead1:	add    BYTE PTR [rdi+0x6806040d],cl
   14000ead7:	mov    ah,BYTE PTR [rbx-0x615b5b5c]
   14000eadd:	int    0xd6
   14000eadf:	retf   
   14000eae0:	retf   
   14000eae1:	int    0xcd
   14000eae3:	iret   
   14000eae4:	rcl    dh,1
   14000eae6:	int    0xcb
   14000eae8:	call   0x118dac4c6
   14000eaed:	fcomp  st(0)
   14000eaef:	fcomp  st(0)
   14000eaf1:	fcomp  st(0)
   14000eaf3:	fsubr  st,st(0)
	...
   14000eb01:	xor    esp,DWORD PTR [rdi]
   14000eb03:	xchg   BYTE PTR [rdx+0x6a],dl
   14000eb06:	ins    BYTE PTR es:[rdi],dx
   14000eb07:	jbe    0x14000eb81
   14000eb09:	xchg   ebp,eax
   14000eb0a:	movabs ds:0x1313cacdd8cda4a2,al
   14000eb13:	xor    al,0x8f
   14000eb15:	int    0x90
   14000eb17:	retf   
   14000eb18:	loop   0x14000eaf3
   14000eb1a:	fcomp  st(0)
   14000eb1c:	fcomp  st(0)
   14000eb1e:	fcomp  st(0)
   14000eb20:	(bad)  
   14000eb21:	xlat   BYTE PTR ds:[rbx]
   14000eb22:	(bad)  
   14000eb23:	(bad)  
   14000eb24:	fld    DWORD PTR [rax]
	...
   14000eb2e:	add    BYTE PTR [rax],al
   14000eb30:	xor    DWORD PTR [rdi],ebp
   14000eb32:	xor    al,BYTE PTR [rdi+0x64797a6b]
   14000eb38:	data16 ja 0x14000eac6
   14000eb3b:	lea    ecx,[rcx-0x32342c33]
   14000eb41:	iret   
   14000eb42:	ror    bh,1
   14000eb44:	iret   
   14000eb45:	iret   
   14000eb46:	nop
   14000eb47:	retf   
   14000eb48:	(bad)  
   14000eb4a:	fcomp  st(0)
   14000eb4c:	xlat   BYTE PTR ds:[rbx]
   14000eb4d:	(bad)  
   14000eb4e:	(bad)  
   14000eb4f:	(bad)  
   14000eb50:	(bad)  
   14000eb51:	(bad)  
   14000eb52:	(bad)  
   14000eb53:	(bad)  
   14000eb54:	fld    DWORD PTR [rax]
	...
   14000eb5e:	add    BYTE PTR [rdx],dh
   14000eb60:	sub    ebp,DWORD PTR [rax]
   14000eb62:	sub    esi,DWORD PTR [rax+0x78]
   14000eb65:	outs   dx,DWORD PTR ds:[rsi]
   14000eb66:	push   rdi
   14000eb67:	push   rdi
   14000eb68:	pop    rcx
   14000eb69:	fs fs addr32 mov esi,cs
   14000eb6e:	hlt    
   14000eb6f:	ror    BYTE PTR [rdi-0x70eceeef],1
   14000eb75:	int    0xcb
   14000eb77:	int    0xd9
   14000eb79:	fcom   st(6)
   14000eb7b:	(bad)  
   14000eb7c:	(bad)  
   14000eb7d:	(bad)  
   14000eb7e:	(bad)  
   14000eb7f:	(bad)  
   14000eb80:	(bad)  
   14000eb81:	rcl    ebx,cl
   14000eb83:	rcr    eax,cl
	...
   14000eb8d:	add    BYTE PTR [rdi],ch
   14000eb8f:	(bad)  
   14000eb90:	sub    BYTE PTR [rcx],dh
   14000eb92:	ins    DWORD PTR es:[rdi],dx
   14000eb93:	rex.WRX push rdi
   14000eb95:	push   rdx
   14000eb96:	rex.W
   14000eb97:	rex.W
   14000eb98:	rex.WB
   14000eb99:	rex.WXB
   14000eb9a:	rex.WR pop rdi
   14000eb9c:	gs retf 0xcdd6
   14000eba0:	retf   0x908f
   14000eba3:	retf   
   14000eba4:	int    0xcf
   14000eba6:	nop
   14000eba7:	retf   0xd6d9
   14000ebaa:	(bad)  
   14000ebab:	(bad)  
   14000ebac:	(bad)  
   14000ebad:	rcl    ebx,cl
   14000ebaf:	rcl    ebx,cl
   14000ebb1:	rcl    ebx,cl
   14000ebb3:	rcr    eax,cl
	...
   14000ebbd:	sub    DWORD PTR [rdi],esp
   14000ebbf:	sub    BYTE PTR [rcx],dh
   14000ebc1:	push   0x4a
   14000ebc3:	rex.RXB
   14000ebc4:	rex.RXB (bad) 
   14000ebc6:	rex
   14000ebc7:	rex
   14000ebc8:	rex
   14000ebc9:	rex
   14000ebca:	rex.RB
   14000ebcb:	rex.RB
   14000ebcc:	rex.RX int 0xe8
   14000ebcf:	ror    BYTE PTR [rdi-0x32cbcbed],1
   14000ebd5:	rcl    ebx,cl
   14000ebd7:	int    0xd8
   14000ebd9:	(bad)  
   14000ebda:	rcl    ebx,cl
   14000ebdc:	rcl    ebx,cl
   14000ebde:	rcl    ebx,cl
   14000ebe0:	(bad)  
   14000ebe1:	(bad)  
   14000ebe2:	(bad)  
   14000ebe3:	(bad)  
   14000ebe4:	fadd   DWORD PTR [rax]
   14000ebe6:	add    BYTE PTR [rax],al
   14000ebe8:	add    BYTE PTR [rax],al
   14000ebea:	add    BYTE PTR [rax],al
   14000ebec:	xor    ah,BYTE PTR [rdi]
   14000ebee:	sub    DWORD PTR [rax*4+0x2034748],ebp
   14000ebf5:	cmp    bh,BYTE PTR [rdx]
   14000ebf7:	cmp    al,0x40
   14000ebf9:	ds rex.X
   14000ebfb:	rex.X
   14000ebfc:	rex.R retf 0xcdce
   14000ec00:	ror    esi,cl
   14000ec02:	fdiv   st,st(2)
   14000ec04:	hlt    
   14000ec05:	div    bl
   14000ec07:	rcl    esi,cl
   14000ec09:	rcl    ebx,cl
   14000ec0b:	rcl    ebx,cl
   14000ec0d:	(bad)  
   14000ec0e:	(bad)  
   14000ec0f:	(bad)  
   14000ec10:	(bad)  
   14000ec11:	(bad)  
   14000ec12:	(bad)  
   14000ec13:	(bad)  
   14000ec14:	(bad)  
   14000ec15:	add    BYTE PTR [rax],al
   14000ec17:	add    BYTE PTR [rax],al
   14000ec19:	add    BYTE PTR [rax],al
   14000ec1b:	fisub  DWORD PTR [rdi]
   14000ec1d:	(bad)  
   14000ec1e:	sub    DWORD PTR [rsi+0x2033c4d],eax
   14000ec24:	cmp    bh,BYTE PTR [rdx]
   14000ec26:	cmp    al,BYTE PTR [rax+0x40]
   14000ec29:	rex push rcx
   14000ec2b:	push   rbp
   14000ec2c:	push   rsp
   14000ec2d:	int    0xfe
   14000ec2f:	stc    
   14000ec30:	cmc    
   14000ec31:	jmp    0x14000ec1e
   14000ec33:	jmp    0x14000ec2a
   14000ec35:	div    dl
   14000ec37:	(bad)  
   14000ec38:	rcl    ebx,cl
   14000ec3a:	ror    esi,cl
   14000ec3c:	(bad)  
   14000ec3d:	(bad)  
   14000ec3e:	(bad)  
   14000ec3f:	(bad)  
   14000ec40:	(bad)  
   14000ec41:	(bad)  
   14000ec42:	(bad)  
   14000ec43:	int    0xd6
   14000ec45:	add    BYTE PTR [rax],al
   14000ec47:	add    BYTE PTR [rax],al
   14000ec49:	add    BYTE PTR [rax],al
   14000ec4b:	sbb    al,0x18
   14000ec4d:	sbb    bl,BYTE PTR [rdx]
   14000ec4f:	rex.WRXB cmp rax,0x403c0201
   14000ec55:	ds ds rex.X
   14000ec58:	rex.R sub DWORD PTR [rdx],0x21
   14000ec5c:	and    ebp,ecx
   14000ec5e:	(bad)  
   14000ec5f:	cli    
   14000ec60:	imul   al
   14000ec62:	(bad)  
   14000ec64:	(bad)  
   14000ec66:	fmulp  st(6),st
   14000ec68:	(bad)  
   14000ec69:	(bad)  
   14000ec6a:	(bad)  
   14000ec6b:	(bad)  
   14000ec6c:	(bad)  
   14000ec6d:	(bad)  
   14000ec6e:	(bad)  
   14000ec6f:	int    0xcd
   14000ec71:	int    0xcd
   14000ec73:	int    0xd3
   14000ec75:	add    BYTE PTR [rax],al
   14000ec77:	add    BYTE PTR [rax],al
   14000ec79:	add    BYTE PTR [rbp+0x1a1a1818],ah
   14000ec7f:	(bad)  
   14000ec80:	cmp    edi,DWORD PTR [rcx]
   14000ec82:	cmp    al,0x40
   14000ec84:	rex.X
   14000ec85:	rex.R
   14000ec86:	rex.XB
   14000ec87:	rex.XB
   14000ec88:	rex.WRX
   14000ec89:	sbb    ebx,DWORD PTR cs:[rbx]
   14000ec8c:	sbb    ecx,ebp
   14000ec8e:	not    al
   14000ec90:	xor    al,0x11
   14000ec92:	adc    DWORD PTR [rbx],edx
   14000ec94:	retf   0xcfce
   14000ec97:	adc    edx,esi
   14000ec99:	(bad)  
   14000ec9a:	(bad)  
   14000ec9b:	(bad)  
   14000ec9c:	int    0xcd
   14000ec9e:	int    0xcd
   14000eca0:	int    0xcd
   14000eca2:	int    0xca
   14000eca4:	rol    DWORD PTR [rax],cl
   14000eca6:	add    BYTE PTR [rax],al
   14000eca8:	add    BYTE PTR [rax],al
   14000ecaa:	sbb    BYTE PTR [rdi],dl
   14000ecac:	sbb    BYTE PTR [rdx],bl
   14000ecae:	sbb    ebx,DWORD PTR [rdx]
   14000ecb0:	(bad)  
   14000ecb1:	cmp    eax,DWORD PTR [r10+0x5b]
   14000ecb5:	pop    rbp
   14000ecb6:	pop    rax
   14000ecb7:	and    ah,BYTE PTR [rax]
   14000ecb9:	and    DWORD PTR [rsp],esp
   14000ecbc:	and    al,0xcd
   14000ecbe:	hlt    
   14000ecbf:	(bad)  
   14000ecc1:	int    0xcd
   14000ecc3:	iret   
   14000ecc4:	iret   
   14000ecc5:	iret   
   14000ecc6:	nop
   14000ecc7:	adc    esi,edx
   14000ecc9:	(bad)  
   14000ecca:	(bad)  
   14000eccb:	int    0xcd
   14000eccd:	int    0xcd
   14000eccf:	retf   0xcaca
   14000ecd2:	retf   0xceca
   14000ecd5:	add    BYTE PTR [rax],al
   14000ecd7:	add    BYTE PTR [rax],al
   14000ecd9:	add    BYTE PTR [rdi],dl
   14000ecdb:	(bad)  
   14000ecdc:	sbb    BYTE PTR [rdx],bl
   14000ecde:	and    DWORD PTR [rcx],esp
   14000ece0:	rex.WRXB
   14000ece1:	rex.R
   14000ece2:	rex.WX
   14000ece3:	rex.WX pop rcx
   14000ece5:	outs   dx,BYTE PTR ds:[rsi]
   14000ece6:	sub    ah,BYTE PTR [rsp]
   14000ece9:	(bad)  
   14000ecea:	(bad)  
   14000eceb:	and    al,0x24
   14000eced:	int    0xf4
   14000ecef:	fcom   st(0)
   14000ecf1:	retf   0x8f8f
   14000ecf4:	retf   0xcbcd
   14000ecf7:	adc    ebx,edx
   14000ecf9:	(bad)  
   14000ecfa:	int    0xcd
   14000ecfc:	int    0xca
   14000ecfe:	retf   0xcaca
   14000ed01:	retf   0x8fca
   14000ed04:	(bad)  
   14000ed05:	add    BYTE PTR [rax],al
   14000ed07:	add    BYTE PTR [rax],al
   14000ed09:	fist   DWORD PTR [rdi+rdx*1]
   14000ed0c:	(bad)  
   14000ed0d:	sbb    ah,BYTE PTR [rax]
   14000ed0f:	and    ah,BYTE PTR [rax]
   14000ed11:	and    al,BYTE PTR [rdx+riz*1+0x3725252f]
   14000ed18:	(bad)  
   14000ed19:	(bad)  
   14000ed1a:	(bad)  
   14000ed1b:	(bad)  
   14000ed1c:	(bad)  
   14000ed1d:	retf   0xd8e8
   14000ed20:	fcom   st(4)
   14000ed22:	iret   
   14000ed23:	iret   
   14000ed24:	iret   
   14000ed25:	rcl    DWORD PTR [rax-0x32322cef],cl
   14000ed2b:	int    0xca
   14000ed2d:	retf   0xcaca
   14000ed30:	retf   0x8f8f
   14000ed33:	(bad)  
   14000ed34:	int    0x0
   14000ed36:	add    BYTE PTR [rax],al
   14000ed38:	add    BYTE PTR [rsi],dh
   14000ed3a:	adc    al,0x15
   14000ed3c:	(bad)  
   14000ed3d:	sbb    eax,0x25242a22
   14000ed42:	and    eax,0x7f262625
   14000ed47:	jg     0x14000ece8
   14000ed49:	lahf   
   14000ed4a:	cwde   
   14000ed4b:	cwde   
   14000ed4c:	cwde   
   14000ed4d:	(bad)  
   14000ed4e:	(bad)  
   14000ed4f:	repnz fcom st(0)
   14000ed52:	(bad)  
   14000ed53:	(bad)  
   14000ed54:	retf   
   14000ed55:	(bad)  
   14000ed56:	retf   
   14000ed57:	adc    esi,ecx
   14000ed59:	int    0xcd
   14000ed5b:	retf   0xcaca
   14000ed5e:	retf   0x8f8f
   14000ed61:	(bad)  
   14000ed62:	(bad)  
   14000ed63:	(bad)  
   14000ed64:	int    0x0
   14000ed66:	add    BYTE PTR [rax],al
   14000ed68:	add    BYTE PTR [rbx],ch
   14000ed6a:	adc    al,0x15
   14000ed6c:	sbb    BYTE PTR [rbx+0x53],dl
   14000ed6f:	and    al,0x26
   14000ed71:	and    eax,0x7f9a987e
   14000ed76:	jg     0x14000edf7
   14000ed78:	jg     0x14000ed19
   14000ed7a:	lahf   
   14000ed7b:	lahf   
   14000ed7c:	cwde   
   14000ed7d:	retf   0xd6de
   14000ed80:	(bad)  
   14000ed81:	(bad)  
   14000ed82:	int    0x8f
   14000ed84:	nop
   14000ed85:	iret   
   14000ed86:	nop
   14000ed87:	adc    esi,ecx
   14000ed89:	retf   0xcaca
   14000ed8c:	retf   0x8f8f
   14000ed8f:	(bad)  
   14000ed90:	(bad)  
   14000ed91:	(bad)  
   14000ed92:	(bad)  
   14000ed93:	adc    ecx,ebp
   14000ed95:	add    BYTE PTR [rax],al
   14000ed97:	add    BYTE PTR [rax],al
   14000ed99:	(bad)  
   14000ed9a:	adc    al,0x19
   14000ed9c:	push   rax
   14000ed9d:	push   rcx
   14000ed9e:	and    DWORD PTR [rip+0xffffffffa08e997e],esp        # 0xe08f8722
   14000eda4:	jg     0x14000ed27
   14000eda6:	add    DWORD PTR [rcx-0x605e7e7f],0xf9fece9f
   14000edb0:	hlt    
   14000edb1:	(bad)  
   14000edb3:	int    0xcd
   14000edb5:	iret   
   14000edb6:	xor    al,0x10
   14000edb8:	(bad)  
   14000edb9:	retf   0xcaca
   14000edbc:	retf   0x8f8f
   14000edbf:	(bad)  
   14000edc0:	(bad)  
   14000edc1:	xor    al,0x8f
   14000edc3:	adc    ecx,edx
   14000edc5:	add    BYTE PTR [rax],al
   14000edc7:	add    BYTE PTR [rax],al
   14000edc9:	(bad)  
   14000edca:	adc    eax,0x25535153
   14000edcf:	jle    0x14000ed59
   14000edd1:	cdq    
   14000edd2:	(bad)  
   14000edd3:	add    DWORD PTR [rcx-0x7d7d7d7e],0xa181a182
   14000eddd:	retf   0xcad9
   14000ede0:	retf   0xcdca
   14000ede3:	(bad)  
   14000ede4:	xlat   BYTE PTR ds:[rbx]
   14000ede5:	(bad)  
   14000ede7:	adc    ecx,ebp
   14000ede9:	retf   0xcaca
   14000edec:	(bad)  
   14000eded:	(bad)  
   14000edee:	(bad)  
   14000edef:	(bad)  
   14000edf0:	xor    al,0x13
   14000edf2:	adc    edx,DWORD PTR [rbx]
   14000edf4:	retf   0x0
   14000edf7:	add    BYTE PTR [rax],al
   14000edf9:	sbb    BYTE PTR [rip+0x7e21204a],al        # 0x1be220e49
   14000edff:	cdq    
   14000ee00:	(bad)  
   14000ee01:	add    DWORD PTR [rdx-0x52525253],0x82adadad
   14000ee0b:	movabs eax,ds:0xf7f7f9f9f9f9caa1
   14000ee14:	jmp    0x14000ee0d
   14000ee16:	jmp    0x10acbb8e8
   14000ee1b:	(bad)  
   14000ee1c:	(bad)  
   14000ee1d:	(bad)  
   14000ee1e:	(bad)  
   14000ee1f:	adc    edx,DWORD PTR [rbx]
   14000ee21:	adc    edx,DWORD PTR [rbx]
   14000ee23:	adc    edx,ecx
   14000ee25:	add    BYTE PTR [rax],al
   14000ee27:	add    BYTE PTR [rax],al
   14000ee29:	sub    al,BYTE PTR [rdi]
   14000ee2b:	rex.WX (bad) 
   14000ee2d:	and    al,0x26
   14000ee2f:	cdq    
   14000ee30:	mov    ?,WORD PTR [rcx-0x44444450]
   14000ee36:	mov    ebx,0xbbbbbbbb
   14000ee3b:	mov    ebx,0xffffcdb2
   14000ee40:	cld    
   14000ee41:	stc    
   14000ee42:	div    ebp
   14000ee44:	jmp    0x14000ee3b
   14000ee46:	in     eax,0xca
   14000ee48:	retf   0xcaca
   14000ee4b:	(bad)  
   14000ee4c:	(bad)  
   14000ee4d:	(bad)  
   14000ee4e:	xor    al,0x13
   14000ee50:	adc    edx,DWORD PTR [rbx]
   14000ee52:	adc    edx,DWORD PTR [rcx]
   14000ee54:	pop    QWORD PTR [rax]
   14000ee56:	add    BYTE PTR [rax],al
   14000ee58:	add    BYTE PTR [rax],bh
   14000ee5a:	add    eax,0x2524225b
   14000ee5f:	mov    cs,WORD PTR [rsi-0x36361044]
   14000ee65:	leave  
   14000ee66:	leave  
   14000ee67:	leave  
   14000ee68:	leave  
   14000ee69:	mov    edi,0xffcab0c6
   14000ee6f:	(bad)  
   14000ee70:	cld    
   14000ee71:	stc    
   14000ee72:	div    ch
   14000ee74:	jmp    0x14000ee6b
   14000ee76:	in     eax,0xca
   14000ee78:	retf   0xcaca
   14000ee7b:	(bad)  
   14000ee7c:	(bad)  
   14000ee7d:	(bad)  
   14000ee7e:	adc    edx,DWORD PTR [rbx]
   14000ee80:	adc    edx,DWORD PTR [rbx]
   14000ee82:	adc    edx,DWORD PTR [rcx]
   14000ee84:	pop    QWORD PTR [rax]
   14000ee86:	add    BYTE PTR [rax],al
   14000ee88:	add    BYTE PTR [rax],al
   14000ee8a:	(bad)  
   14000ee8b:	pop    rbx
   14000ee8c:	push   rsi
   14000ee8d:	push   rsp
   14000ee8e:	pop    rdx
   14000ee8f:	fs test eax,0xc6efbf93
   14000ee95:	(bad)  
   14000ee96:	(bad)
   14000ee99:	vshufpd ymm7,ymm7,YMMWORD PTR [rbx-0x1000036],0xfc
   14000eea2:	stc    
   14000eea3:	div    ch
   14000eea5:	jmp    0x14000ee8c
   14000eea7:	retf   0xcaca
   14000eeaa:	(bad)  
   14000eeab:	(bad)  
   14000eeac:	(bad)  
   14000eead:	(bad)  
   14000eeae:	adc    edx,DWORD PTR [rbx]
   14000eeb0:	adc    edx,DWORD PTR [rbx]
   14000eeb2:	adc    DWORD PTR [rdx],edx
   14000eeb4:	pop    QWORD PTR [rax]
   14000eeb6:	add    BYTE PTR [rax],al
   14000eeb8:	add    BYTE PTR [rax],al
   14000eeba:	(bad)  
   14000eebb:	pop    rbx
   14000eebc:	pop    rsp
   14000eebd:	pop    rbx
   14000eebe:	pop    rbp
   14000eebf:	(bad)  
   14000eec0:	jae    0x14000ee6d
   14000eec2:	scas   al,BYTE PTR es:[rdi]
   14000eec3:	mov    edi,0xc5c5c8ef
   14000eec8:	(bad)
   14000eecb:	(bad)  
   14000eecc:	mov    ebx,0xf9fcffcd
   14000eed1:	stc    
   14000eed2:	stc    
   14000eed3:	cld    
   14000eed4:	stc    
   14000eed5:	jmp    0x14000eebc
   14000eed7:	retf   0xcaca
   14000eeda:	retf   0x8f8f
   14000eedd:	(bad)  
   14000eede:	adc    edx,DWORD PTR [rbx]
   14000eee0:	adc    edx,DWORD PTR [rbx]
   14000eee2:	adc    edx,DWORD PTR [rcx]
   14000eee4:	pop    QWORD PTR [rax]
   14000eee6:	add    BYTE PTR [rax],al
   14000eee8:	add    BYTE PTR [rax],al
   14000eeea:	and    bl,BYTE PTR [rbx+0x62]
   14000eeed:	(bad)  
   14000eeee:	pop    rsi
   14000eeef:	(bad)  
   14000eef0:	jae    0x14000eea9
   14000eef2:	in     al,dx
   14000eef3:	mov    bl,0xbf
   14000eef5:	(bad)  
   14000eef6:	enter  0xc4c4,0xc4
   14000eefa:	rol    dh,0xbb
   14000eefd:	retf   0xfd4
   14000ef00:	(bad)  
   14000ef01:	or     al,0xe
   14000ef03:	int    0xf3
   14000ef05:	cld    
   14000ef06:	in     eax,0xca
   14000ef08:	retf   0xcaca
   14000ef0b:	(bad)  
   14000ef0c:	(bad)  
   14000ef0d:	xor    al,0x13
   14000ef0f:	adc    edx,DWORD PTR [rbx]
   14000ef11:	adc    DWORD PTR [rcx],edx
   14000ef13:	adc    cl,BYTE PTR [rdi+0x0]
   14000ef19:	add    dl,dl
   14000ef1b:	jb     0x14000ef80
   14000ef1d:	jae    0x14000ef82
   14000ef1f:	(bad)  
   14000ef20:	jl     0x14000eedc
   14000ef22:	lock mov esi,0xc4c6c7bd
   14000ef28:	(bad)  
   14000ef29:	rol    al,0xc6
   14000ef2c:	mov    ebx,0xb0e2d13
   14000ef31:	or     BYTE PTR [rax],cl
   14000ef33:	or     ecx,esi
   14000ef35:	imul   ecx
   14000ef37:	int    0xca
   14000ef39:	retf   0x8fca
   14000ef3c:	(bad)  
   14000ef3d:	adc    edx,DWORD PTR [rbx]
   14000ef3f:	adc    edx,DWORD PTR [rbx]
   14000ef41:	adc    edx,DWORD PTR [rbx]
   14000ef43:	adc    DWORD PTR [rdi+0x0],ecx
   14000ef49:	add    BYTE PTR [rax],al
   14000ef4b:	mov    ebx,0x75737363
   14000ef50:	jne    0x14000ef0c
   14000ef52:	mov    esi,0xc4c5f1bf
   14000ef57:	(bad)  
   14000ef58:	rol    al,0xc0
   14000ef5b:	(bad)  
   14000ef5c:	mov    ebx,0xd4d4dcdc
   14000ef61:	(bad)  
   14000ef63:	(bad)  
   14000ef64:	(bad)  
   14000ef65:	(bad)  
   14000ef66:	(bad)  
   14000ef67:	(bad)  
   14000ef68:	int    0xce
   14000ef6a:	rcl    esi,cl
   14000ef6c:	xlat   BYTE PTR ds:[rbx]
   14000ef6d:	loop   0x14000ef61
   14000ef6f:	loop   0x14000ef63
   14000ef71:	hlt    
   14000ef72:	hlt    
   14000ef73:	add    BYTE PTR [rax],al
   14000ef75:	add    BYTE PTR [rax],al
   14000ef77:	add    BYTE PTR [rax],al
   14000ef79:	add    dl,al
   14000ef7b:	mov    edi,0x73737363
   14000ef80:	jne    0x14000ef40
   14000ef82:	mov    esi,0xc4c5c5f1
   14000ef87:	(bad)  
   14000ef88:	rol    al,0xc0
   14000ef8b:	(bad)  
   14000ef8c:	mov    ebx,0xa6a8a8af
   14000ef91:	pushf  
   14000ef92:	(bad)  
   14000ef93:	fist   WORD PTR [rdx+0x2e23]
	...
   14000efa9:	add    BYTE PTR [rbx+0x736095bf],bh
   14000efaf:	je     0x14000ef6e
   14000efb1:	shl    ecx,0xc6
   14000efb4:	mov    ch,0xc0
   14000efb7:	mov    ebx,0xc6c0c0bb
   14000efbc:	mov    ebx,0x9ba6a8af
   14000efc1:	(bad)  
   14000efc2:	xor    BYTE PTR [rbp-0x49],bh
   14000efc5:	stos   DWORD PTR es:[rdi],eax
   14000efc6:	xchg   ecx,eax
	...
   14000efd7:	add    BYTE PTR [rax],al
   14000efd9:	ret    0xbfbf
   14000efdc:	add    BYTE PTR [rcx+0x75],dh
   14000efdf:	mov    ebp,0xc5c6f1c1
   14000efe4:	(bad)
   14000efe7:	ret    0xbbac
   14000efea:	ret    
   14000efeb:	(bad)  
   14000efec:	mov    ebx,0x899eafaf
   14000eff1:	xchg   esi,eax
   14000eff2:	xchg   esp,eax
   14000eff3:	jl     0x14000efae
   14000eff5:	stos   BYTE PTR es:[rdi],al
	...
   14000f006:	add    BYTE PTR [rax],al
   14000f008:	add    BYTE PTR [rbx-0x40444040],bh
   14000f00e:	rol    ebx,0xf0
   14000f011:	mov    ch,0xc5
   14000f014:	mov    edi,0x80ace1bd
   14000f019:	xchg   esi,eax
   14000f01a:	mov    ebx,0xa8a8bbc1
   14000f01f:	test   al,0xa7
   14000f021:	movabs ds:0xaa7d89,eax
	...
   14000f036:	add    BYTE PTR [rax],al
   14000f038:	add    BYTE PTR [rcx+rax*8-0x383c3a3a],bh
   14000f03f:	leave  
   14000f040:	enter  0xc1c3,0xbb
   14000f044:	mov    bl,0xae
   14000f046:	loopne 0x14000f02c
   14000f048:	movabs al,ds:0xa398a0a7b0bbfbfd
   14000f051:	scas   al,BYTE PTR es:[rdi]
   14000f052:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f053:	fild   WORD PTR [rax]
	...
   14000f069:	ret    0xc6c1
   14000f06c:	(bad)  
   14000f06d:	enter  0xc6c6,0xc3
   14000f071:	mov    edi,0xbabab4bd
   14000f076:	mov    edx,0xfffca8ec
   14000f07b:	(bad)  
   14000f07c:	int3   
   14000f07d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f07e:	pushf  
   14000f07f:	xchg   edi,eax
   14000f080:	loopne 0x14000f061
	...
   14000f09a:	rol    ebp,0xc6
   14000f09d:	(bad)
   14000f0a0:	shr    ebp,0xe1
   14000f0a3:	xchg   edx,eax
   14000f0a4:	jrcxz  0x14000f094
   14000f0a6:	out    0xa7,eax
   14000f0a8:	in     al,0xfd
   14000f0aa:	sti    
   14000f0ab:	out    0x9d,al
   14000f0ad:	sahf   
   14000f0ae:	sahf   
   14000f0af:	xchg   esi,eax
   14000f0b0:	in     al,dx
	...
   14000f0c9:	add    BYTE PTR [rax],al
   14000f0cb:	mov    cl,0xc1
   14000f0ce:	(bad)  
   14000f0cf:	out    dx,eax
   14000f0d0:	add    BYTE PTR [rax],al
   14000f0d2:	add    BYTE PTR [rax],al
   14000f0d4:	add    ah,ch
   14000f0d6:	(bad)  
   14000f0d7:	(bad)  
   14000f0d8:	clc    
   14000f0d9:	clc    
   14000f0da:	in     al,0x9d
   14000f0dc:	fld    QWORD PTR [rax]
	...
   14000f0f6:	add    BYTE PTR [rax],al
   14000f0f8:	(bad)  
   14000f0f9:	(bad)  
   14000f0fa:	(bad)  
   14000f0fb:	(bad)  
   14000f0fc:	(bad)  
   14000f0fd:	inc    DWORD PTR [rax]
   14000f0ff:	add    bh,bh
   14000f101:	(bad)  
   14000f102:	(bad)  
   14000f103:	clc    
   14000f104:	jg     0x14000f105
   14000f106:	add    BYTE PTR [rax],al
   14000f108:	(bad)  
   14000f109:	(bad)  
   14000f10a:	inc    DWORD PTR [rax]
   14000f10c:	(bad)  
   14000f10d:	inc    DWORD PTR [rax]
   14000f10f:	add    bh,bh
   14000f111:	(bad)  
   14000f112:	cld    
   14000f113:	add    BYTE PTR [rdi],al
   14000f115:	inc    DWORD PTR [rax]
   14000f117:	add    bh,bh
   14000f119:	(bad)  
   14000f11a:	clc    
   14000f11b:	add    BYTE PTR [rbx],al
   14000f11d:	inc    DWORD PTR [rax]
   14000f11f:	add    bh,bh
   14000f121:	(bad)  
   14000f122:	clc    
   14000f123:	add    BYTE PTR [rcx],al
   14000f125:	inc    DWORD PTR [rax]
   14000f127:	add    bh,bh
   14000f129:	(bad)  
   14000f12a:	clc    
   14000f12b:	add    BYTE PTR [rax],al
   14000f12d:	jg     0x14000f12f
   14000f12f:	add    bh,bh
   14000f131:	(bad)  
   14000f132:	clc    
   14000f133:	add    BYTE PTR [rax],al
   14000f135:	(bad)  
   14000f136:	add    BYTE PTR [rax],al
   14000f138:	(bad)  
   14000f139:	(bad)  
   14000f13a:	clc    
   14000f13b:	add    BYTE PTR [rax],al
   14000f13d:	sldt   WORD PTR [rax]
   14000f140:	(bad)  
   14000f141:	(bad)  
   14000f142:	clc    
   14000f143:	add    BYTE PTR [rax],al
   14000f145:	(bad)  
   14000f146:	add    BYTE PTR [rax],al
   14000f148:	(bad)  
   14000f149:	(bad)  
   14000f14a:	clc    
   14000f14b:	add    BYTE PTR [rax],al
   14000f14d:	(bad)  
   14000f14e:	add    BYTE PTR [rax],al
   14000f150:	(bad)  
   14000f151:	(bad)  
   14000f152:	clc    
   14000f153:	add    BYTE PTR [rax],al
   14000f155:	(bad)  
   14000f156:	add    BYTE PTR [rax],al
   14000f158:	(bad)  
   14000f159:	(bad)  
   14000f15a:	clc    
   14000f15b:	add    BYTE PTR [rax],al
   14000f15d:	(bad)  
   14000f15e:	add    BYTE PTR [rax],al
   14000f160:	(bad)  
   14000f161:	(bad)  
   14000f162:	clc    
   14000f163:	add    BYTE PTR [rax],al
   14000f165:	(bad)  
   14000f166:	add    BYTE PTR [rax],al
   14000f168:	(bad)  
   14000f169:	clc    
   14000f16a:	add    BYTE PTR [rax],al
   14000f16c:	add    BYTE PTR [rdi],al
   14000f16e:	add    BYTE PTR [rax],al
   14000f170:	inc    eax
   14000f172:	add    BYTE PTR [rax],al
   14000f174:	add    BYTE PTR [rdi],al
   14000f176:	add    BYTE PTR [rax],al
   14000f178:	inc    DWORD PTR [rax+0x7000000]
   14000f17e:	add    BYTE PTR [rax],al
   14000f180:	inc    DWORD PTR [rax]
   14000f182:	add    BYTE PTR [rax],al
   14000f184:	add    BYTE PTR [rdi],al
   14000f186:	add    BYTE PTR [rax],al
   14000f188:	inc    BYTE PTR [rax]
   14000f18a:	add    BYTE PTR [rax],al
   14000f18c:	add    BYTE PTR [rdi],al
   14000f18e:	add    BYTE PTR [rax],al
   14000f190:	cld    
   14000f191:	add    BYTE PTR [rax],al
   14000f193:	add    BYTE PTR [rax],al
   14000f195:	(bad)  
   14000f196:	add    BYTE PTR [rax],al
   14000f198:	clc    
   14000f199:	add    BYTE PTR [rax],al
   14000f19b:	add    BYTE PTR [rax],al
   14000f19d:	(bad)  
   14000f19e:	add    BYTE PTR [rax],al
   14000f1a0:	lock add BYTE PTR [rax],al
   14000f1a3:	add    BYTE PTR [rax],al
   14000f1a5:	(bad)  
   14000f1a6:	add    BYTE PTR [rax],al
   14000f1a8:	loopne 0x14000f1aa
   14000f1aa:	add    BYTE PTR [rax],al
   14000f1ac:	add    BYTE PTR [rdi],al
   14000f1ae:	add    BYTE PTR [rax],al
   14000f1b0:	loopne 0x14000f1b2
   14000f1b2:	add    BYTE PTR [rax],al
   14000f1b4:	add    BYTE PTR [rdi],al
   14000f1b6:	add    BYTE PTR [rax],al
   14000f1b8:	rol    BYTE PTR [rax],0x0
   14000f1bb:	add    BYTE PTR [rax],al
   14000f1bd:	(bad)  
   14000f1be:	add    BYTE PTR [rax],al
   14000f1c0:	rol    BYTE PTR [rax],0x0
   14000f1c3:	add    BYTE PTR [rax],al
   14000f1c5:	(bad)  
   14000f1c6:	add    BYTE PTR [rax],al
   14000f1c8:	rol    BYTE PTR [rax],0x0
   14000f1cb:	add    BYTE PTR [rax],al
   14000f1cd:	(bad)  
   14000f1ce:	add    BYTE PTR [rax],al
   14000f1d0:	add    BYTE PTR [rax],0x0
   14000f1d3:	add    BYTE PTR [rax],al
   14000f1d5:	(bad)  
   14000f1d6:	add    BYTE PTR [rax],al
   14000f1d8:	add    BYTE PTR [rax],0x0
   14000f1db:	add    BYTE PTR [rax],al
   14000f1dd:	(bad)  
   14000f1de:	add    BYTE PTR [rax],al
   14000f1e0:	add    BYTE PTR [rax],0x0
   14000f1e3:	add    BYTE PTR [rax],al
   14000f1e5:	(bad)  
   14000f1e6:	add    BYTE PTR [rax],al
   14000f1e8:	add    BYTE PTR [rax],0x0
   14000f1eb:	add    BYTE PTR [rax],al
   14000f1ed:	(bad)  
   14000f1ee:	add    BYTE PTR [rax],al
   14000f1f0:	add    BYTE PTR [rax],0x0
   14000f1f3:	add    BYTE PTR [rax],al
   14000f1f5:	(bad)  
   14000f1f6:	add    BYTE PTR [rax],al
   14000f1f8:	add    BYTE PTR [rax],0x0
   14000f1fb:	add    BYTE PTR [rax],al
   14000f1fd:	(bad)  
   14000f1fe:	add    BYTE PTR [rax],al
   14000f200:	add    BYTE PTR [rax],0x0
   14000f203:	add    BYTE PTR [rax],al
   14000f205:	(bad)  
   14000f206:	add    BYTE PTR [rax],al
   14000f208:	add    BYTE PTR [rax],0x0
   14000f20b:	add    BYTE PTR [rax],al
   14000f20d:	(bad)  
   14000f20e:	add    BYTE PTR [rax],al
   14000f210:	rol    BYTE PTR [rax],0x0
   14000f213:	add    BYTE PTR [rax],al
   14000f215:	(bad)  
   14000f216:	add    BYTE PTR [rax],al
   14000f218:	rol    BYTE PTR [rax],0x0
   14000f21b:	add    BYTE PTR [rax],al
   14000f21d:	(bad)  
   14000f21e:	add    BYTE PTR [rax],al
   14000f220:	rol    BYTE PTR [rax],0x0
   14000f223:	add    BYTE PTR [rax],al
   14000f225:	(bad)  
   14000f226:	add    BYTE PTR [rax],al
   14000f228:	rol    BYTE PTR [rax],0x0
   14000f22b:	add    BYTE PTR [rax],al
   14000f22d:	(bad)  
   14000f22e:	add    BYTE PTR [rax],al
   14000f230:	loopne 0x14000f232
   14000f232:	add    BYTE PTR [rax],al
   14000f234:	add    BYTE PTR [rdi],bl
   14000f236:	add    BYTE PTR [rax],al
   14000f238:	rol    BYTE PTR [rax],0x0
   14000f23b:	add    edi,edi
   14000f23d:	inc    DWORD PTR [rax]
   14000f23f:	add    al,al
   14000f241:	add    BYTE PTR [rax],al
   14000f243:	add    edi,edi
   14000f245:	inc    DWORD PTR [rax]
   14000f247:	add    BYTE PTR [rax-0xfd0000],cl
   14000f24d:	inc    DWORD PTR [rax]
   14000f24f:	add    BYTE PTR [rax-0xf90000],al
   14000f255:	inc    DWORD PTR [rax]
   14000f257:	add    BYTE PTR [rax-0xf10000],al
   14000f25d:	inc    DWORD PTR [rax]
   14000f25f:	add    BYTE PTR [rax-0xc10000],al
   14000f265:	inc    DWORD PTR [rax]
   14000f267:	add    al,al
   14000f269:	add    BYTE PTR [rax],al
   14000f26b:	jg     0x14000f26c
   14000f26d:	inc    DWORD PTR [rax]
   14000f26f:	add    al,ah
   14000f271:	clc    
   14000f272:	(bad)  
   14000f273:	(bad)  
   14000f274:	(bad)  
   14000f275:	inc    DWORD PTR [rax]
   14000f277:	add    BYTE PTR [rax],ch
   14000f279:	add    BYTE PTR [rax],al
   14000f27b:	add    BYTE PTR [rax],ah
   14000f27d:	add    BYTE PTR [rax],al
   14000f27f:	add    BYTE PTR [rax+0x0],al
   14000f282:	add    BYTE PTR [rax],al
   14000f284:	add    DWORD PTR [rax],eax
   14000f286:	or     BYTE PTR [rax],al
   14000f288:	add    BYTE PTR [rax],al
   14000f28a:	add    BYTE PTR [rax],al
   14000f28c:	add    BYTE PTR [rax+rax*1],al
	...
   14000f297:	add    BYTE PTR [rax],al
   14000f299:	add    DWORD PTR [rax],eax
   14000f29b:	add    BYTE PTR [rax],al
   14000f29d:	add    DWORD PTR [rax],eax
   14000f29f:	add    BYTE PTR [rax],al
   14000f2a1:	add    BYTE PTR [rax],al
   14000f2a3:	add    BYTE PTR [rax+rbx*2+0x30],dl
   14000f2a7:	add    BYTE PTR [rcx+rdi*2+0x21],bl
   14000f2ab:	add    BYTE PTR [rdx+0x78],dh
   14000f2ae:	sub    al,BYTE PTR [rax]
   14000f2b0:	data16 jg 0x14000f2e8
   14000f2b3:	add    BYTE PTR [rsi+0x7a],dh
   14000f2b6:	cmp    eax,0x48575b00
   14000f2bb:	add    BYTE PTR [rbx+0x5f],ah
   14000f2be:	pop    rax
   14000f2bf:	add    BYTE PTR [rdx+rsi*2+0x57],bl
   14000f2c3:	add    BYTE PTR [rbx+0x65],ch
   14000f2c6:	pop    rsi
   14000f2c7:	add    BYTE PTR [rdx+0x6b],bl
   14000f2ca:	(bad)  
   14000f2cb:	add    BYTE PTR [rbp+0x68],ch
   14000f2ce:	add    BYTE PTR [ecx+0x6a],dh
   14000f2d2:	imul   eax,DWORD PTR [rax],0x76
   14000f2d5:	jne    0x14000f343
   14000f2d7:	add    BYTE PTR [rbx+0x7a],bh
   14000f2da:	jae    0x14000f2dc
   14000f2dc:	mov    ch,0x3d
   14000f2de:	(bad)  
   14000f2df:	add    BYTE PTR [rdx-0x55ffdbd2],dh
   14000f2e5:	ss add BYTE PTR es:[rdx-0x39ffd6c4],dh
   14000f2ed:	cmp    eax,0x3ec0002d
   14000f2f2:	xor    DWORD PTR [rax],eax
   14000f2f4:	nop
   14000f2f5:	rex.WRXB
   14000f2f6:	add    BYTE PTR es:[rbp-0x67ffd5a5],al
   14000f2fd:	pop    rdi
   14000f2fe:	cmp    al,0x0
   14000f300:	mov    esi,0xbb002849
   14000f305:	push   rsi
   14000f306:	sub    al,BYTE PTR [rax]
   14000f308:	mov    dh,0x45
   14000f30a:	xor    BYTE PTR [rax],al
   14000f30c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f30d:	push   rbp
   14000f30e:	add    BYTE PTR ds:[rdi-0x75ffc7a7],dh
   14000f315:	addr32 sub al,0x0
   14000f318:	fwait
   14000f319:	outs   dx,BYTE PTR ds:[rsi]
   14000f31a:	add    BYTE PTR es:[rsi-0x6bffd08a],al
   14000f321:	imul   esi,DWORD PTR [rdi],0x0
   14000f324:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f325:	ins    BYTE PTR es:[rdi],dx
   14000f326:	sub    al,0x0
   14000f328:	mov    ah,0x66
   14000f32a:	sub    al,BYTE PTR [rax]
   14000f32c:	mov    esi,0xbb003b67
   14000f331:	js     0x14000f36b
   14000f333:	add    dl,cl
   14000f335:	push   rdx
   14000f336:	(bad)  
   14000f337:	add    ch,cl
   14000f339:	xor    al,BYTE PTR [r8]
   14000f33c:	(bad)  
   14000f33d:	pop    rdx
   14000f33e:	(bad)  
   14000f33f:	add    bl,bl
   14000f341:	addr32 sub eax,0x2f72cc00
   14000f347:	add    cl,dl
   14000f349:	jl     0x14000f377
   14000f34b:	add    dh,al
   14000f34d:	push   0x70c20033
   14000f352:	cmp    al,BYTE PTR [rax]
   14000f354:	(bad)  
   14000f355:	js     0x14000f388
   14000f357:	add    al,ah
   14000f359:	jp     0x14000f386
   14000f35b:	add    BYTE PTR [rbx+rbx*2+0x64a9004e],dh
   14000f362:	add    BYTE PTR [rdx-0x54ffbf9b],r14b
   14000f369:	jbe    0x14000f3af
   14000f36b:	add    BYTE PTR [rdi-0x79ffbb8a],bh
   14000f371:	push   0x62
   14000f373:	add    BYTE PTR [rdx-0x69ff9586],al
   14000f379:	jno    0x14000f3e8
   14000f37b:	add    BYTE PTR [rdx-0x6dff8984],al
   14000f381:	jle    0x14000f3fd
   14000f383:	add    ch,cl
   14000f385:	pop    rsp
   14000f386:	rex.WR add dl,r10b
   14000f389:	pop    rdx
   14000f38a:	rex.WR add bpl,r9b
   14000f38d:	pop    rdi
   14000f38e:	push   rax
   14000f38f:	add    cl,dl
   14000f391:	addr32 add r15b,cl
   14000f395:	jo     0x14000f3de
   14000f397:	add    dl,bl
   14000f399:	ja     0x14000f3dd
   14000f39b:	add    ch,dl
   14000f39d:	push   0x5d
   14000f39f:	add    ah,cl
   14000f3a1:	js     0x14000f3f3
   14000f3a3:	add    BYTE PTR [rdi],bl
   14000f3a5:	cdq    
   14000f3a6:	(bad)  
   14000f3a7:	add    BYTE PTR [rbx+rcx*4],ah
   14000f3aa:	(bad)  
   14000f3ab:	add    BYTE PTR [rax],bh
   14000f3ad:	mov    DWORD PTR [rax],ebx
   14000f3af:	add    BYTE PTR [rip+0x31001a97],ah        # 0x171010e4c
   14000f3b5:	xchg   esp,eax
   14000f3b6:	sbb    al,0x0
   14000f3b8:	sbb    al,0xa5
   14000f3ba:	sbb    BYTE PTR [rax],al
   14000f3bc:	(bad)  
   14000f3bd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f3be:	sbb    eax,DWORD PTR [rax]
   14000f3c0:	and    al,0x8f
   14000f3c2:	add    BYTE PTR es:[rip+0x2b002a8d],bh        # 0x16b011e56
   14000f3c9:	lahf   
   14000f3ca:	and    al,BYTE PTR [rax]
   14000f3cc:	xor    al,0x9a
   14000f3ce:	sub    eax,0x2cba0e00
   14000f3d3:	add    BYTE PTR [rsi],ch
   14000f3d5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f3d6:	and    DWORD PTR [rax],eax
   14000f3d8:	xor    BYTE PTR [rax-0x4ad4ffdc],ch
   14000f3de:	(bad)  
   14000f3df:	add    BYTE PTR [rax],bh
   14000f3e1:	mov    eax,0xb73b002e
   14000f3e6:	xor    al,0x0
   14000f3e8:	rex (bad) 
   14000f3ea:	sbb    eax,DWORD PTR [rax]
   14000f3ec:	test   BYTE PTR [r8+r8*1],r13b
   14000f3f0:	push   rsp
   14000f3f1:	xchg   ecx,eax
   14000f3f2:	sub    eax,0x349d5f00
   14000f3f7:	add    BYTE PTR [rdx-0x77],ah
   14000f3fa:	add    BYTE PTR cs:[rbx-0x76],ah
   14000f3fe:	cmp    eax,0x309c6400
   14000f403:	add    BYTE PTR [rcx-0x6a],dh
   14000f406:	add    BYTE PTR ds:[rdi-0x59],al
   14000f40a:	sub    al,BYTE PTR [rax]
   14000f40c:	rex.R scas eax,DWORD PTR es:[rdi]
   14000f40e:	cmp    DWORD PTR [rax],eax
   14000f410:	pop    rcx
   14000f411:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f412:	add    BYTE PTR ds:[rsi],cl
   14000f415:	ret    
   14000f416:	(bad)  
   14000f417:	add    BYTE PTR [rdi],ah
   14000f419:	(bad)  
   14000f41a:	and    eax,DWORD PTR [rax]
   14000f41c:	fild   QWORD PTR es:[rip+0x30c42e00]        # 0x170c52223
   14000f423:	add    BYTE PTR [rcx],bh
   14000f425:	(bad)  
   14000f426:	(bad)  
   14000f427:	add    BYTE PTR [rbx+riz*8],dl
   14000f42a:	and    al,0x0
   14000f42c:	adc    dh,bl
   14000f42e:	sub    eax,DWORD PTR [rax]
   14000f430:	add    bh,bh
   14000f432:	add    BYTE PTR ds:[rsi],bl
   14000f435:	repnz xor al,0x0
   14000f438:	and    ebp,ebp
   14000f43a:	xor    BYTE PTR [rax],al
   14000f43c:	rex.R ret 
   14000f43e:	(bad)  
   14000f43f:	add    BYTE PTR [rdi-0x69],ch
   14000f442:	pop    rax
   14000f443:	add    BYTE PTR [rbp-0x4e],dl
   14000f446:	rex.XB add BYTE PTR [r14-0x5f],dil
   14000f44a:	add    BYTE PTR [r10+rcx*8],dil
   14000f44e:	add    BYTE PTR [rbx],spl
   14000f451:	test   BYTE PTR [rdx+0x0],0x38
   14000f455:	repz add BYTE PTR [rdx+r11*8+0x56],r9b
   14000f45b:	add    BYTE PTR [rbp-0x22],ch
   14000f45e:	jl     0x14000f460
   14000f460:	(bad)  
   14000f461:	in     al,dx
   14000f462:	jbe    0x14000f464
   14000f464:	lea    ecx,[rcx-0x6954ffca]
   14000f46a:	ss add bl,bl
   14000f46d:	(bad)  
   14000f46e:	ss add bl,bl
   14000f471:	xchg   edi,eax
   14000f472:	cmp    al,BYTE PTR [rax]
   14000f474:	in     eax,0x80
   14000f476:	(bad)  
   14000f477:	add    cl,ah
   14000f479:	xchg   DWORD PTR [rip+0x3c96eb00],esi        # 0x17c97df7f
   14000f47f:	add    bh,bl
   14000f481:	test   al,0x3d
   14000f483:	add    bl,bh
   14000f485:	test   eax,0xb9f9003f
   14000f48a:	cmp    al,0x0
   14000f48c:	mov    bl,0x88
   14000f48e:	add    BYTE PTR [r14-0x55ffa277],sil
   14000f495:	xchg   ebp,eax
   14000f496:	pop    rcx
   14000f497:	add    BYTE PTR [rax-0x6bffa558],cl
   14000f49d:	lods   eax,DWORD PTR ds:[rsi]
   14000f49e:	push   rdi
   14000f49f:	add    BYTE PTR [rax+riz*4-0x7c79ffac],dh
   14000f4a6:	jnp    0x14000f4a8
   14000f4a8:	xchg   edx,eax
   14000f4a9:	mov    DWORD PTR [rbx+0x0],edi
   14000f4ac:	mov    ecx,0xb2006585
   14000f4b1:	popf   
   14000f4b2:	push   0x7f92a600
   14000f4b7:	add    BYTE PTR [rdi-0x65ff9053],bl
   14000f4bd:	mov    cl,0x67
   14000f4bf:	add    BYTE PTR [rsi-0x24ff8641],bl
   14000f4c5:	test   BYTE PTR [rbx+0x0],al
   14000f4c8:	fcom   QWORD PTR [rax-0x7429ffc0]
   14000f4ce:	pop    rcx
   14000f4cf:	add    ah,cl
   14000f4d1:	xchg   edi,eax
   14000f4d2:	pop    rcx
   14000f4d3:	add    bl,dl
   14000f4d5:	cdq    
   14000f4d6:	pop    rax
   14000f4d7:	add    dl,ch
   14000f4d9:	mov    BYTE PTR [rcx+0x0],cl
   14000f4dc:	repz (bad) 
   14000f4de:	rex.RXB add r14b,r10b
   14000f4e1:	movabs al,ds:0xacfb0044abef005b
   14000f4ea:	rex.XB add r8b,bpl
   14000f4ed:	mov    ch,0x44
   14000f4ef:	add    ch,ah
   14000f4f1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f4f2:	pop    rbx
   14000f4f3:	add    cl,cl
   14000f4f5:	mov    DWORD PTR [rsi+0x0],edi
   14000f4f8:	xlat   BYTE PTR ds:[rbx]
   14000f4f9:	mov    al,0x6d
   14000f4fb:	add    dh,ah
   14000f4fd:	movabs eax,ds:0xb9e20068a6f20061
   14000f506:	imul   eax,DWORD PTR [rax],0x6eb7f5
   14000f50c:	idiv   DWORD PTR [rbp-0x2d74ff90]
   14000f512:	rex.W add BYTE PTR [rax-0x61ff9934],cl
   14000f519:	(bad)  
   14000f51a:	jp     0x14000f51c
   14000f51c:	xchg   ebx,eax
   14000f51d:	loope  0x14000f59a
   14000f51f:	add    BYTE PTR [rdx-0x4ff8201],dl
   14000f525:	(bad)
   14000f528:	in     al,0xc5
   14000f52a:	gs add bl,bh
   14000f52d:	int    0x6d
   14000f52f:	add    bh,bh
   14000f531:	int3   
   14000f532:	ja     0x14000f534
   14000f534:	call   rax
   14000f536:	je     0x14000f538
   14000f538:	or     bh,BYTE PTR [rsi-0x3d]
   14000f53b:	add    BYTE PTR [rsi],dh
   14000f53d:	mov    dh,0xa6
   14000f53f:	add    BYTE PTR [rax+rdi*4],bh
   14000f542:	mov    bl,0x0
   14000f544:	imul   ebx,DWORD PTR [rdx-0x609cff6b],0xffffffa4
   14000f54b:	add    BYTE PTR [rax-0x48],dl
   14000f54e:	lods   al,BYTE PTR ds:[rsi]
   14000f54f:	add    BYTE PTR [rcx+rsi*4-0x55],dh
   14000f553:	add    BYTE PTR [rax],al
   14000f555:	(bad)  
   14000f556:	mov    dl,0x0
   14000f558:	rex.XB leave 
   14000f55a:	mov    eax,DWORD PTR [rax]
   14000f55c:	js     0x14000f529
   14000f55e:	mov    al,BYTE PTR [rax]
   14000f560:	or     BYTE PTR [rbx-0x64e1ff37],al
   14000f566:	iret   
   14000f567:	add    BYTE PTR [rax],cl
   14000f569:	mov    edx,ebx
   14000f56b:	add    BYTE PTR [rsi],al
   14000f56d:	xchg   ebp,eax
   14000f56e:	xlat   BYTE PTR ds:[rbx]
   14000f56f:	add    BYTE PTR [rsi],dl
   14000f571:	(bad)  
   14000f572:	rol    DWORD PTR [rax],cl
   14000f574:	adc    al,0xa8
   14000f576:	fld    QWORD PTR [rax]
   14000f578:	and    al,0xa1
   14000f57a:	rol    BYTE PTR [rax],1
   14000f57c:	es mov cl,0xd5
   14000f57f:	add    BYTE PTR [rax],cl
   14000f581:	cwde   
   14000f582:	loop   0x14000f584
   14000f584:	add    al,0xa6
   14000f586:	(bad)  
   14000f587:	add    BYTE PTR [rax],bl
   14000f589:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f58a:	out    0x0,al
   14000f58c:	or     BYTE PTR [rbp-0x48e3ff02],dh
   14000f592:	inc    DWORD PTR [rax]
   14000f594:	and    al,0xb2
   14000f596:	in     al,dx
   14000f597:	add    BYTE PTR [rsi],dh
   14000f599:	mov    ch,0xe5
   14000f59b:	add    BYTE PTR [rdx],dh
   14000f59d:	scas   al,BYTE PTR es:[rdi]
   14000f59e:	stc    
   14000f59f:	add    BYTE PTR [rsi+rsi*4],ah
   14000f5a2:	sti    
   14000f5a3:	add    BYTE PTR [rax+rdi*4],dh
   14000f5a6:	cli    
   14000f5a7:	add    BYTE PTR [rbx-0x55],al
   14000f5aa:	iret   
   14000f5ab:	add    BYTE PTR [rcx-0x5d],bl
   14000f5ae:	rol    DWORD PTR [rax],0x49
   14000f5b1:	mov    esp,0xc51900e6
   14000f5b6:	inc    DWORD PTR [rax]
   14000f5b8:	(bad)  
   14000f5b9:	enter  0xff,0x39
   14000f5bd:	enter  0xfe,0x37
   14000f5c1:	(bad)  
   14000f5c2:	inc    DWORD PTR [rax]
   14000f5c4:	jo     0x14000f58a
   14000f5c6:	fild   WORD PTR [rax]
   14000f5c8:	pop    rax
   14000f5c9:	shr    ebx,0x0
   14000f5cc:	rex.W int 0xfb
   14000f5cf:	add    BYTE PTR [rdi-0x40],dl
   14000f5d2:	inc    BYTE PTR [rax]
   14000f5d4:	rex.WR (bad) 
   14000f5d6:	inc    DWORD PTR [rax]
   14000f5d8:	pop    rsp
   14000f5d9:	(bad)  
   14000f5da:	inc    DWORD PTR [rax]
   14000f5dc:	imul   ebx,ebp,0xffffffff
   14000f5df:	add    BYTE PTR [rbx-0x27],bh
   14000f5e2:	inc    BYTE PTR [rax]
   14000f5e4:	jge    0x14000f5c6
   14000f5e6:	inc    DWORD PTR [rax]
   14000f5e8:	mov    ecx,DWORD PTR [rdx-0x736dff7e]
   14000f5ee:	test   DWORD PTR [rax],eax
   14000f5f0:	mov    dl,BYTE PTR [rsi-0x6c68ff78]
   14000f5f6:	mov    eax,DWORD PTR [rax]
   14000f5f8:	pushf  
   14000f5f9:	fwait
   14000f5fa:	xchg   ebp,eax
   14000f5fb:	add    BYTE PTR [rbp-0x5dff7573],ah
   14000f601:	cdq    
   14000f602:	mov    WORD PTR [rax],es
   14000f604:	movabs ds:0xbc009ca2a400919a,al
   14000f60d:	test   eax,0xa8a90090
   14000f612:	movabs ds:0xacb4ae00a4adb300,al
   14000f61b:	add    BYTE PTR [rsi-0x44ff554d],dh
   14000f621:	mov    edx,0x8ede00b4
   14000f626:	test   BYTE PTR [rax],al
   14000f628:	out    0x90,eax
   14000f62a:	test   BYTE PTR [rax],al
   14000f62c:	in     eax,0x9f
   14000f62e:	xchg   esi,eax
   14000f62f:	add    bh,ch
   14000f631:	mov    esi,0xbac30094
   14000f636:	lods   al,BYTE PTR ds:[rsi]
   14000f637:	add    dl,al
   14000f639:	mov    esp,0xdf9200b3
   14000f63e:	mov    WORD PTR [rax],es
   14000f640:	mov    ebp,0xa30084c9
   14000f645:	repz popf 
   14000f647:	add    BYTE PTR [rbp-0x15ff5a24],dh
   14000f64d:	jmp    0x14000f5e4
   14000f64f:	add    dh,bl
   14000f651:	retf   
   14000f652:	test   al,0x0
   14000f654:	(bad)  
   14000f655:	shr    DWORD PTR [rdi-0x443a3800],cl
   14000f65b:	add    cl,dl
   14000f65d:	int    0xbc
   14000f65f:	add    al,ah
   14000f661:	int    0xaa
   14000f663:	add    BYTE PTR [rbx-0x56ff0625],al
   14000f669:	out    dx,al
   14000f66a:	std    
   14000f66b:	add    BYTE PTR [rax-0x35ff010b],bh
   14000f671:	leave  
   14000f672:	ret    
   14000f673:	add    cl,dl
   14000f675:	int    0xc3
   14000f677:	add    bh,cl
   14000f679:	ror    dl,1
   14000f67b:	add    bh,dl
   14000f67d:	(bad)  
   14000f67e:	retf   
   14000f67f:	add    bh,dl
   14000f681:	xlat   BYTE PTR ds:[rbx]
   14000f682:	rol    BYTE PTR [rax],cl
   14000f684:	loopne 0x14000f663
   14000f686:	iret   
   14000f687:	add    cl,ch
   14000f689:	(bad)  
   14000f68b:	add    dh,ah
   14000f68d:	in     al,0xd9
   14000f68f:	add    cl,bh
   14000f691:	out    dx,eax
   14000f692:	rol    DWORD PTR [rax],1
   14000f694:	(bad)  
   14000f695:	jmp    0x139faf77b
   14000f69a:	call   0x14000f59f
	...
   14000f6d3:	add    al,ah
   14000f6d5:	(bad)  
   14000f6d6:	xor    eax,0xf408
	...
   14000f6ef:	add    ch,dl
   14000f6f1:	(bad)  
   14000f6f2:	(bad)  
   14000f6f3:	xor    eax,0xa644c34
   14000f6f8:	(bad)  
   14000f6f9:	std    
   14000f6fa:	fiadd  DWORD PTR [rax]
	...
   14000f710:	out    0xda,al
   14000f712:	(bad)  
   14000f713:	(bad)  
   14000f715:	scas   al,BYTE PTR es:[rdi]
   14000f716:	lods   eax,DWORD PTR ds:[rsi]
   14000f717:	or     ebx,edi
   14000f719:	std    
   14000f71a:	sti    
   14000f71b:	fadd   QWORD PTR [rax]
	...
   14000f72d:	add    BYTE PTR [rax],al
   14000f72f:	add    dh,ah
   14000f731:	fst    st(3)
   14000f733:	xor    eax,0xd2358135
   14000f738:	sti    
   14000f739:	clc    
   14000f73a:	loopne 0x14000f71b
   14000f73c:	hlt    
   14000f73d:	(bad)  
	...
   14000f74e:	add    BYTE PTR [rax],al
   14000f750:	out    dx,al
   14000f751:	(bad)  
   14000f753:	(bad)  
   14000f755:	(bad)  
   14000f757:	sar    al,cl
   14000f759:	neg    edi
   14000f75b:	(bad)  
   14000f75c:	fdivr  st(5),st
   14000f75e:	fadd   QWORD PTR [rax]
	...
   14000f770:	out    dx,al
   14000f771:	out    0xdd,al
   14000f773:	fld    DWORD PTR [rdx-0x77eca7f]
   14000f779:	cmc    
   14000f77a:	loopne 0x14000f758
   14000f77c:	(bad)  
   14000f77d:	fdivr  st(7),st
	...
   14000f78f:	add    dh,ch
   14000f791:	fld    QWORD PTR [rcx-0x7d2a2c2e]
   14000f797:	xor    edi,0xdfeeeeee
   14000f79d:	(bad)  
	...
   14000f7ab:	(bad)  
   14000f7ac:	or     al,0xb
   14000f7ae:	or     eax,0xdfeee034
   14000f7b3:	(bad)  
   14000f7b5:	(bad)  
   14000f7b6:	add    DWORD PTR [rcx-0x1f1f1f0a],0xe0dfe0
	...
   14000f7c8:	(bad)  
   14000f7c9:	(bad)  
   14000f7ca:	add    DWORD PTR [rip+0x31408b7d],eax        # 0x17141834d
   14000f7d0:	in     eax,0xdf
   14000f7d2:	rcl    bl,cl
   14000f7d4:	rcl    ebp,cl
   14000f7d6:	add    DWORD PTR [rcx-0x2020200b],0xe0dfdf
   14000f7e0:	add    BYTE PTR [rax],al
   14000f7e2:	add    BYTE PTR [rax],al
   14000f7e4:	add    BYTE PTR [rax],al
   14000f7e6:	add    BYTE PTR [rsi],dh
   14000f7e8:	(bad)  
   14000f7e9:	push   rdi
   14000f7ea:	imul   ebp,DWORD PTR [rcx+0x67],0xe531326a
   14000f7f1:	out    dx,al
   14000f7f2:	(bad)  
   14000f7f4:	fcmovu st,st(1)
   14000f7f6:	(bad)  
   14000f7f7:	sub    esi,0xdcdcdcdf
   14000f7fd:	(bad)  
   14000f7ff:	add    BYTE PTR [rax],al
   14000f801:	add    BYTE PTR [rax],al
   14000f803:	add    BYTE PTR [rax],al
   14000f805:	add    BYTE PTR [rbp+0x69693039],dl
   14000f80b:	pop    rbx
   14000f80c:	push   rcx
   14000f80d:	pop    rdx
   14000f80e:	pop    rax
   14000f80f:	and    ch,ah
   14000f811:	(bad)  
   14000f813:	adc    edx,0xe081d7d7
   14000f819:	(bad)  
   14000f81b:	fcmovu st,st(2)
   14000f81d:	fcmovu st,st(4)
   14000f81f:	add    BYTE PTR [rax],al
   14000f821:	add    BYTE PTR [rax],al
   14000f823:	add    BYTE PTR [rax],al
   14000f825:	loop   0x14000f860
   14000f827:	(bad)  
   14000f828:	rex.WB
   14000f829:	rex.WXB
   14000f82a:	rex.WXB
   14000f82b:	rex.WX
   14000f82c:	rex.WX
   14000f82d:	rex.RB push r10
   14000f82f:	add    esp,ebp
   14000f831:	cmc    
   14000f832:	stc    
   14000f833:	stc    
   14000f834:	cli    
   14000f835:	out    dx,al
   14000f836:	fiadd  WORD PTR [rcx-0x29252520]
   14000f83c:	(bad)  
   14000f83d:	(bad)  
   14000f83e:	fiadd  DWORD PTR [rax]
   14000f840:	add    BYTE PTR [rax],al
   14000f842:	add    BYTE PTR [rax],al
   14000f844:	jrcxz  0x14000f881
   14000f846:	sbb    edx,DWORD PTR [rbx+0x48]
   14000f849:	rex.X
   14000f84a:	rex.R
   14000f84b:	rex.R
   14000f84c:	rex.WX
   14000f84d:	rex.R push rdx
   14000f84f:	add    ah,al
   14000f851:	sti    
   14000f852:	(bad)  
   14000f853:	(bad)  
   14000f854:	cli    
   14000f855:	out    dx,al
   14000f856:	fiadd  WORD PTR [rcx-0x29292921]
   14000f85c:	(bad)  
   14000f85d:	(bad)  
   14000f85e:	(bad)  
   14000f85f:	add    BYTE PTR [rax],al
   14000f861:	add    BYTE PTR [rax],al
   14000f863:	add    BYTE PTR [rdx],bh
   14000f865:	(bad)  
   14000f866:	add    al,0x41
   14000f868:	rex.R
   14000f869:	rex.WX
   14000f86a:	rex.WX
   14000f86b:	rex.WRB
   14000f86c:	rex.RXB push r12
   14000f86e:	(bad)  
   14000f86f:	(bad)  
   14000f870:	loopne 0x14000f869
   14000f872:	stc    
   14000f873:	div    ebp
   14000f875:	out    dx,al
   14000f876:	fiadd  WORD PTR [rcx-0x2a2a2922]
   14000f87c:	(bad)  
   14000f87d:	rcr    ecx,cl
   14000f87f:	add    BYTE PTR [rax],al
   14000f881:	add    BYTE PTR [rax],al
   14000f883:	(bad)  
   14000f884:	sbb    DWORD PTR es:[rbx+0x46],eax
   14000f888:	rex.WRX push rax
   14000f88a:	push   rax
   14000f88b:	(bad)  
   14000f88c:	imul   esp,DWORD PTR [rbx+rbp*1],0x11
   14000f890:	in     eax,0xdf
   14000f892:	(bad)  
   14000f893:	rcl    ebx,cl
   14000f895:	rol    DWORD PTR [rcx-0x2a2a23c9],cl
   14000f89b:	rcl    dl,cl
   14000f89d:	rcl    ch,cl
   14000f89f:	add    BYTE PTR [rax],al
   14000f8a1:	add    BYTE PTR [rax],al
   14000f8a3:	adc    edx,DWORD PTR [rbx]
   14000f8a5:	nop    DWORD PTR [rbp+0x4f]
   14000f8a9:	(bad)  
   14000f8aa:	outs   dx,BYTE PTR ds:[rsi]
   14000f8ab:	jle    0x14000f8d1
   14000f8ad:	sub    DWORD PTR [rdi],esp
   14000f8af:	sbb    ah,ch
   14000f8b1:	cmc    
   14000f8b2:	imul   dh
   14000f8b4:	(bad)  
   14000f8b6:	fdiv   DWORD PTR [rdi]
   14000f8b8:	(bad)  
   14000f8ba:	rcl    dl,cl
   14000f8bc:	rol    BYTE PTR [rcx+0xd2],cl
   14000f8c2:	loope  0x14000f8d7
   14000f8c4:	adc    ebx,DWORD PTR [rax]
   14000f8c6:	and    DWORD PTR [rsp+rbx*2+0x59],edx
   14000f8ca:	jnp    0x14000f8f9
   14000f8cc:	jae    0x14000f90c
   14000f8ce:	cmp    al,0x1c
   14000f8d0:	out    0xe0,al
   14000f8d2:	(bad)  
   14000f8d3:	(bad)  
   14000f8d4:	rcl    ebx,cl
   14000f8d6:	xor    DWORD PTR [rdi],0x81d2d2dc
   14000f8dc:	add    DWORD PTR [rcx+0xd2],0x2012133a
   14000f8e6:	sub    ebp,DWORD PTR [rip+0x77767373]        # 0x1b7776c5f
   14000f8ec:	(bad)  
   14000f8ed:	mov    ?,WORD PTR [rsi]
   14000f8ef:	sbb    al,0xee
   14000f8f1:	cmc    
   14000f8f2:	out    dx,al
   14000f8f3:	out    0xe6,al
   14000f8f5:	fstp   st(1)
   14000f8f7:	(bad)  
   14000f8f8:	fcmovbe st,st(2)
   14000f8fa:	add    DWORD PTR [rcx+0x810e81],0x10140000
   14000f904:	sbb    eax,0x74752871
   14000f909:	ja     0x14000f984
   14000f90b:	xchg   edx,eax
   14000f90c:	xchg   edx,eax
   14000f90d:	(bad)
   14000f911:	hlt    
   14000f912:	(bad)  
   14000f914:	(bad)  
   14000f915:	(bad)  
   14000f917:	(bad)  
   14000f918:	(bad)  
   14000f919:	add    DWORD PTR [rcx+0xe0e0e37],0x10000000
   14000f923:	sbb    eax,0x742a2255
   14000f928:	xchg   ebx,eax
   14000f929:	jp     0x14000f8cc
   14000f92b:	movabs eax,ds:0xf6f8f8f52c8a91a1
   14000f934:	out    dx,al
   14000f935:	out    dx,al
   14000f936:	fisttp QWORD PTR [rsi]
   14000f938:	(bad)  
   14000f939:	add    DWORD PTR [rcx+0xe0d0e0e],0x15000000
   14000f943:	push   rsi
   14000f944:	sbb    al,0x29
   14000f946:	sub    BYTE PTR [rcx-0x4d4d4d4e],0xb2
   14000f94d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f94e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f94f:	test   eax,0xfdfefdf5
   14000f954:	std    
   14000f955:	sti    
   14000f956:	in     eax,0xe
   14000f958:	(bad)  
   14000f959:	add    DWORD PTR [rcx+0xe0d0e0e],0x20000000
   14000f963:	pop    rdx
   14000f964:	and    eax,0xd0b8782e
   14000f969:	rcl    eax,1
   14000f96b:	rcl    al,1
   14000f96d:	ror    ah,1
   14000f96f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f970:	cmc    
   14000f971:	in     eax,0x35
   14000f973:	(bad)  
   14000f974:	or     eax,0xd60eeff5
   14000f979:	or     DWORD PTR [rsi],0x350d0d0e
   14000f97f:	add    BYTE PTR [rax],al
   14000f981:	add    BYTE PTR [rbx-0x638d8ea2],al
   14000f987:	movabs eax,ds:0xb2cec0c6c8c8f1b8
   14000f990:	cmc    
   14000f991:	fild   DWORD PTR [rbp-0x2123c77b]
   14000f997:	(bad)  
   14000f998:	(bad)  
   14000f999:	fcmovu st,st(6)
   14000f99b:	fnstsw ax
   14000f99d:	loopne 0x14000f98d
   14000f99f:	add    BYTE PTR [rax],al
   14000f9a1:	add    BYTE PTR [rax],al
   14000f9a3:	pop    rsi
   14000f9a4:	(bad)  
   14000f9a5:	pop    rsi
   14000f9a6:	movabs al,gs:0xb2cebcc5c6f1b8ab
   14000f9b0:	mov    WORD PTR [rax-0x7fcc7273],ss
   14000f9b6:	xchg   BYTE PTR [rsi+0x0],bh
	...
   14000f9c1:	add    BYTE PTR [rcx+0x6d5f635a],dh
   14000f9c7:	test   al,0xb8
   14000f9c9:	repnz mov ch,0xbb
   14000f9cd:	mov    ebx,0x9aa3b2ce
   14000f9d2:	cwde   
   14000f9d3:	cmp    eax,0x68af7d32
	...
   14000f9e0:	add    cl,cl
   14000f9e2:	mov    bl,0xac
   14000f9e4:	data16 ins BYTE PTR es:[rdi],dx
   14000f9e6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f9e7:	mov    edx,0xc5c6c8f3
   14000f9ec:	mov    ebx,0xa5b2cebb
   14000f9f1:	fwait
   14000f9f2:	cwde   
   14000f9f3:	cmp    al,0xe7
   14000f9f5:	jl     0x14000fa09
	...
   14000f9ff:	add    BYTE PTR [rax],al
   14000fa01:	mov    dh,0xb3
   14000fa03:	add    BYTE PTR [rbp-0x310c3f59],bl
   14000fa09:	(bad)  
   14000fa0a:	mov    esp,0xcebfb3b5
   14000fa0f:	mov    eax,0x278b9aa4
   14000fa14:	sahf   
   14000fa15:	xchg   DWORD PTR [rbx+0x0],eax
   14000fa1b:	add    BYTE PTR [rax],al
   14000fa1d:	add    BYTE PTR [rax],al
   14000fa1f:	add    BYTE PTR [rax],al
   14000fa21:	mov    al,0xb8
   14000fa23:	mov    ecx,0xcef3cec1
   14000fa28:	(bad)  
   14000fa29:	mov    ebp,0xb299c3b3
   14000fa2e:	mov    edi,0x8b97a5b8
   14000fa33:	mov    WORD PTR [rax+0x6f],?
	...
   14000fa3e:	add    BYTE PTR [rax],al
   14000fa40:	add    BYTE PTR [rcx-0x30303239],dh
   14000fa46:	retf   
   14000fa47:	shl    DWORD PTR [rsp+rsi*4-0x696c143e],0xb2
   14000fa4f:	stos   BYTE PTR es:[rdi],al
   14000fa50:	movabs ds:0x888c9094,eax
	...
   14000fa61:	(bad)  
   14000fa62:	(bad)  
   14000fa63:	int    0xcb
   14000fa65:	mov    esi,0x7fb7baba
   14000fa6a:	lahf   
   14000fa6b:	jmp    0xc4fdfa12
   14000fa70:	cdq    
   14000fa71:	xchg   esp,eax
   14000fa72:	xchg   esi,eax
   14000fa73:	lock add BYTE PTR [rax],al
	...
   14000fa82:	retf   0xc4c4
   14000fa85:	retf   0x0
   14000fa88:	add    BYTE PTR [rax],al
   14000fa8a:	(bad)  
   14000fa8b:	call   0xd6ede826
   14000fa90:	in     al,0x0
	...
   14000fa9e:	add    BYTE PTR [rax],al
   14000faa0:	(bad)  
   14000faa1:	(bad)  
   14000faa2:	(bad)  
   14000faa3:	(bad)  
   14000faa4:	(bad)  
   14000faa5:	push   rax
   14000faa7:	jg     0x14000faa8
   14000faa9:	inc    DWORD PTR [rax]
   14000faab:	(bad)  
   14000faac:	(bad)  
   14000faad:	inc    DWORD PTR [rax]
   14000faaf:	ud0    edi,edi
   14000fab2:	add    BYTE PTR [rbx],al
   14000fab4:	(bad)  
   14000fab5:	inc    DWORD PTR [rax]
   14000fab7:	add    edi,edi
   14000fab9:	inc    DWORD PTR [rax]
   14000fabb:	add    edi,edi
   14000fabd:	inc    DWORD PTR [rax]
   14000fabf:	add    edi,edi
   14000fac1:	loopne 0x14000fac3
   14000fac3:	add    edi,edi
   14000fac5:	add    BYTE PTR [rax],al
   14000fac7:	add    esi,edi
   14000fac9:	add    BYTE PTR [rax],al
   14000facb:	add    esp,edi
   14000facd:	add    BYTE PTR [rax],al
   14000facf:	add    eax,edi
   14000fad1:	add    BYTE PTR [rax],al
   14000fad3:	add    eax,esi
   14000fad5:	add    BYTE PTR [rax],al
   14000fad7:	add    eax,esi
   14000fad9:	add    BYTE PTR [rax],al
   14000fadb:	add    eax,esp
   14000fadd:	add    BYTE PTR [rax],al
   14000fadf:	add    eax,esp
   14000fae1:	add    BYTE PTR [rax],al
   14000fae3:	add    eax,eax
   14000fae5:	add    BYTE PTR [rax],al
   14000fae7:	add    eax,eax
   14000fae9:	add    BYTE PTR [rax],al
   14000faeb:	add    eax,eax
   14000faed:	add    BYTE PTR [rax],al
   14000faef:	add    eax,eax
   14000faf1:	add    BYTE PTR [rax],al
   14000faf3:	add    eax,eax
   14000faf5:	add    BYTE PTR [rax],al
   14000faf7:	add    eax,eax
   14000faf9:	add    BYTE PTR [rax],al
   14000fafb:	add    eax,eax
   14000fafd:	add    BYTE PTR [rax],al
   14000faff:	add    eax,esp
   14000fb01:	add    BYTE PTR [rax],al
   14000fb03:	inc    eax
   14000fb05:	add    BYTE PTR [rax],al
   14000fb07:	inc    DWORD PTR [rax-0x6f00ff00]
   14000fb0d:	add    BYTE PTR [rcx],al
   14000fb0f:	inc    DWORD PTR [rax-0x7f00fd00]
   14000fb15:	add    BYTE PTR [rdi],al
   14000fb17:	inc    DWORD PTR [rax-0x3c00f100]
   14000fb1d:	sar    BYTE PTR [rdi-0x1],0x28
   14000fb21:	add    BYTE PTR [rax],al
   14000fb23:	add    BYTE PTR [rax],bl
   14000fb25:	add    BYTE PTR [rax],al
   14000fb27:	add    BYTE PTR [rax],dh
   14000fb29:	add    BYTE PTR [rax],al
   14000fb2b:	add    BYTE PTR [rcx],al
   14000fb2d:	add    BYTE PTR [rax],cl
   14000fb2f:	add    BYTE PTR [rax],al
   14000fb31:	add    BYTE PTR [rax],al
   14000fb33:	add    BYTE PTR [rax+0x2],al
	...
   14000fb3e:	add    BYTE PTR [rax],al
   14000fb40:	add    BYTE PTR [rcx],al
   14000fb42:	add    BYTE PTR [rax],al
   14000fb44:	add    BYTE PTR [rcx],al
   14000fb46:	add    BYTE PTR [rax],al
   14000fb48:	add    BYTE PTR [rax],al
   14000fb4a:	add    BYTE PTR [rax],al
   14000fb4c:	je     0x14000fbbc
   14000fb4e:	sub    eax,0x425a5e00
   14000fb53:	add    BYTE PTR [rbp+0x67],bl
   14000fb56:	pop    rbp
   14000fb57:	add    BYTE PTR [rdi+0x7b],ah
   14000fb5a:	data16 add BYTE PTR [rax+0x70],dh
   14000fb5e:	add    BYTE PTR [ebx+esi*2+0x6c],dh
   14000fb63:	add    BYTE PTR [rcx+0x78],bh
   14000fb66:	outs   dx,BYTE PTR ds:[rsi]
   14000fb67:	add    BYTE PTR [rsi+0x77],dh
   14000fb6a:	ja     0x14000fb6c
   14000fb6c:	jle    0x14000fbe4
   14000fb6e:	jo     0x14000fb70
   14000fb70:	jnp    0x14000fbed
   14000fb72:	jae    0x14000fb74
   14000fb74:	jle    0x14000fbf4
   14000fb76:	js     0x14000fb78
   14000fb78:	test   eax,0xc6002a3a
   14000fb7d:	sub    eax,0x36cc0029
   14000fb82:	xor    al,BYTE PTR [rax]
   14000fb84:	retf   0x323a
   14000fb87:	add    al,ch
   14000fb89:	cmp    bh,BYTE PTR [rax]
   14000fb8b:	add    BYTE PTR [rbp-0x44ffd1ba],ah
   14000fb91:	xor    DWORD PTR [r8],eax
   14000fb94:	mov    ebp,0xb7003d4a
   14000fb99:	push   rcx
   14000fb9a:	add    BYTE PTR ss:[rbx-0x76ffc598],bl
   14000fba1:	jnp    0x14000fbdd
   14000fba3:	add    BYTE PTR [rax-0x63ffc588],dl
   14000fba9:	jge    0x14000fbe3
   14000fbab:	add    al,al
   14000fbad:	rex.XB
   14000fbae:	ss add bl,dl
   14000fbb1:	xor    al,0x0
   14000fbb4:	out    0x41,al
   14000fbb6:	cmp    DWORD PTR [rax],eax
   14000fbb8:	loop   0x14000fc16
   14000fbba:	cmp    al,BYTE PTR [rax]
   14000fbbc:	frstor [rbp+0x33]
   14000fbbf:	add    cl,ch
   14000fbc1:	movsxd esi,DWORD PTR [rbx]
   14000fbc3:	add    dl,ch
   14000fbc5:	jo     0x14000fbfe
   14000fbc7:	add    dl,ch
   14000fbc9:	jnp    0x14000fc01
   14000fbcb:	add    BYTE PTR [rcx-0x77ff9586],al
   14000fbd1:	jl     0x14000fc48
   14000fbd3:	add    BYTE PTR [rdx-0x72ff8782],al
   14000fbd9:	jp     0x14000fc58
   14000fbdb:	add    BYTE PTR [rdi-0x25ff8585],ah
   14000fbe1:	push   rbx
   14000fbe2:	rex.WX add dl,bl
   14000fbe5:	pop    rbp
   14000fbe6:	push   rbp
   14000fbe7:	add    bl,al
   14000fbe9:	imul   eax,DWORD PTR [rdx+0x0],0x4b6ede
   14000fbf0:	frstor [rcx+0x5b]
   14000fbf3:	add    dl,ah
   14000fbf5:	fs rex.W add bl,bpl
   14000fbf9:	js     0x14000fc47
   14000fbfb:	add    ah,ah
   14000fbfd:	movsxd ebx,DWORD PTR [rdx+0x0]
   14000fc00:	call   0x117014c7c
   14000fc05:	push   0x60
   14000fc07:	add    BYTE PTR [rdx],bl
   14000fc09:	(bad)  
   14000fc0a:	sbb    BYTE PTR [rax],al
   14000fc0c:	and    BYTE PTR [rbx-0x53eaffec],dl
   14000fc12:	adc    eax,DWORD PTR [rax]
   14000fc14:	(bad)  
   14000fc15:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fc16:	sbb    BYTE PTR [rax],al
   14000fc18:	and    bl,BYTE PTR [rbx-0x62caffd8]
   14000fc1e:	(bad)  
   14000fc1f:	add    BYTE PTR [rsi],ch
   14000fc21:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fc22:	and    eax,0x2ba63500
   14000fc27:	add    BYTE PTR [rdi],ch
   14000fc29:	mov    bh,0x26
   14000fc2b:	add    BYTE PTR [rdi],ah
   14000fc2d:	mov    eax,0xb5360022
   14000fc32:	(bad)  
   14000fc33:	add    BYTE PTR [rcx],bh
   14000fc35:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fc36:	xor    BYTE PTR [rax],al
   14000fc38:	push   rdx
   14000fc39:	lea    ebp,[rcx]
   14000fc3b:	add    BYTE PTR [rbp-0x79],ch
   14000fc3e:	cmp    BYTE PTR [rax],al
   14000fc40:	rex stos DWORD PTR es:[rdi],eax
   14000fc42:	cmp    al,BYTE PTR [rax]
   14000fc44:	rex.RB mov r15b,0x30
   14000fc47:	add    BYTE PTR [rbx-0x5f],ch
   14000fc4a:	xor    BYTE PTR [rax],al
   14000fc4c:	(bad)  
   14000fc4d:	xlat   BYTE PTR ds:[rbx]
   14000fc4e:	and    al,0x0
   14000fc50:	sub    al,0xc4
   14000fc52:	sub    al,BYTE PTR [rax]
   14000fc54:	sub    dl,bl
   14000fc56:	sub    eax,DWORD PTR [rax]
   14000fc58:	xor    al,0xcc
   14000fc5a:	xor    al,BYTE PTR [rax]
   14000fc5c:	or     esp,eax
   14000fc5e:	xor    eax,DWORD PTR [rax]
   14000fc60:	sbb    ah,bh
   14000fc62:	cmp    BYTE PTR [rax],al
   14000fc64:	ud0    esi,DWORD PTR [rcx]
   14000fc67:	add    BYTE PTR [rdi],cl
   14000fc69:	lods   eax,DWORD PTR ds:[rsi]
   14000fc6a:	js     0x14000fc6c
   14000fc6c:	test   DWORD PTR gs:[rbx+0x0],eax
   14000fc70:	pop    rbp
   14000fc71:	movabs ds:0xf92d0045e9340059,al
   14000fc7a:	rex.WRB add BYTE PTR [r9+rdx*8],r11b
   14000fc7e:	add    BYTE PTR fs:[rax],al
   14000fc81:	(bad)  
   14000fc82:	je     0x14000fc84
   14000fc84:	rex.RXB (bad) [r8+0x0]
   14000fc88:	data16 fisttp DWORD PTR [rbx+0x0]
   14000fc8c:	addr32 (bad) 
   14000fc8e:	push   rsi
   14000fc8f:	add    BYTE PTR [rbp-0x18],al
   14000fc92:	push   rcx
   14000fc93:	add    BYTE PTR [rbp-0x29],bh
   14000fc96:	jno    0x14000fc98
   14000fc98:	outs   dx,DWORD PTR ds:[rsi]
   14000fc99:	loop   0x14000fd08
   14000fc9b:	add    ch,al
   14000fc9d:	xor    BYTE PTR [rdi],0x0
   14000fca0:	cli    
   14000fca1:	xchg   ebx,eax
   14000fca2:	cmp    al,0x0
   14000fca4:	xchg   ebp,eax
   14000fca5:	or     DWORD PTR [rdi+0x0],0xffffff86
   14000fca9:	xchg   ebx,eax
   14000fcaa:	rex.RXB add BYTE PTR [r15-0x70ffb46e],r8b
   14000fcb1:	nop
   14000fcb2:	rex.WRXB add BYTE PTR [r9-0x5effb06c],r12b
   14000fcb9:	xchg   ebp,eax
   14000fcba:	pop    rsp
   14000fcbb:	add    BYTE PTR [rdi-0x72ffa36d],ch
   14000fcc1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fcc2:	add    BYTE PTR [r10-0x6fffb25f],r9b
   14000fcc9:	scas   al,BYTE PTR es:[rdi]
   14000fcca:	pop    rcx
   14000fccb:	add    BYTE PTR [rdx+rdi*4-0x444fffa3],dl
   14000fcd2:	pop    rsi
   14000fcd3:	add    BYTE PTR [rbx-0x65ff9f79],dl
   14000fcd9:	test   BYTE PTR [rbx+0x0],ah
   14000fcdc:	mov    DWORD PTR [rax-0x7d7cff89],eax
   14000fce2:	jp     0x14000fce4
   14000fce4:	mov    al,BYTE PTR [rbx+rdi*2+0x7f899100]
   14000fceb:	add    BYTE PTR [rbx-0x47ff9555],ah
   14000fcf1:	movabs ds:0xa1b20077a8ab0061,eax
   14000fcfa:	jae    0x14000fcfc
   14000fcfc:	fld    DWORD PTR [rdx+rbx*2+0x5787e800]
   14000fd03:	add    ah,ch
   14000fd05:	xchg   DWORD PTR [rdx+0x0],ebx
   14000fd08:	out    dx,al
   14000fd09:	xchg   esi,eax
   14000fd0a:	push   rsp
   14000fd0b:	add    bl,bh
   14000fd0d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fd0e:	rex.WR add dl,r12b
   14000fd11:	pushf  
   14000fd12:	fs add ch,bh
   14000fd15:	xchg   ebx,eax
   14000fd16:	ins    DWORD PTR es:[rdi],dx
   14000fd17:	add    dl,bl
   14000fd19:	test   al,0x6b
   14000fd1b:	add    bh,ah
   14000fd1d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000fd1e:	push   0x6eabfc00
   14000fd23:	add    bl,ch
   14000fd25:	mov    dl,0x65
   14000fd27:	add    ch,dh
   14000fd29:	mov    ch,0x75
   14000fd2b:	add    BYTE PTR [rdx-0x3dff8540],ah
   14000fd31:	ret    0x45
   14000fd34:	retf   0x65c7
   14000fd37:	add    ch,cl
   14000fd39:	(bad)  
   14000fd3a:	ins    BYTE PTR es:[rdi],dx
   14000fd3b:	add    al,dl
   14000fd3d:	int3   
   14000fd3e:	imul   eax,DWORD PTR [rax],0x78c3ca
   14000fd44:	std    
   14000fd45:	ret    0x77
   14000fd48:	or     edi,DWORD PTR [rax+rax*8+0x0]
   14000fd4c:	mov    bh,BYTE PTR [rdi-0x7d]
   14000fd4f:	add    BYTE PTR [rsi-0x70],cl
   14000fd52:	mov    cl,0x0
   14000fd54:	jns    0x14000fcff
   14000fd56:	mov    bl,0x0
   14000fd58:	push   0xf00bfc0
   14000fd5d:	add    esp,0xcb850a00
   14000fd63:	add    BYTE PTR [rcx+rcx*4],cl
   14000fd66:	(bad)  
   14000fd67:	add    BYTE PTR [rdx],bl
   14000fd69:	(bad)  
   14000fd6a:	(bad)  
   14000fd6b:	add    BYTE PTR [rbx],al
   14000fd6d:	sahf   
   14000fd6e:	(bad)  
   14000fd6f:	add    BYTE PTR [rdi],al
   14000fd71:	xchg   edx,edx
   14000fd73:	add    BYTE PTR [rdx],bl
   14000fd75:	mov    ss,eax
   14000fd77:	add    BYTE PTR [rsp+rdx*4],al
   14000fd7a:	fild   DWORD PTR [rax]
   14000fd7c:	sbb    dl,BYTE PTR [rdx-0x63e0ff2e]
   14000fd82:	rol    DWORD PTR [rax],cl
   14000fd84:	adc    ebx,DWORD PTR [rcx-0x62ddff21]
   14000fd8a:	fild   DWORD PTR [rax]
   14000fd8c:	btr    esp,eax
   14000fd8f:	add    BYTE PTR [rcx+riz*4],bl
   14000fd92:	rol    BYTE PTR [rax],cl
   14000fd94:	sbb    ah,BYTE PTR [rax-0x59dcff26]
   14000fd9a:	(bad)  
   14000fd9b:	add    BYTE PTR [rsi],ah
   14000fd9d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fd9e:	fld    DWORD PTR [rax]
   14000fda0:	(bad)  
   14000fda1:	stos   DWORD PTR es:[rdi],eax
   14000fda2:	fld    QWORD PTR [rax]
   14000fda4:	adc    ah,BYTE PTR [rsp+riz*8-0x4cf900]
   14000fdab:	add    BYTE PTR [rbx],cl
   14000fdad:	mov    dl,0xff
   14000fdaf:	add    BYTE PTR [rip+0x2b00ffba],bl        # 0x16b01fd6f
   14000fdb5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000fdb6:	in     eax,0x0
   14000fdb8:	sub    ch,BYTE PTR [rdx-0x54ceff18]
   14000fdbe:	jmp    0x12eb721c3
   14000fdc3:	add    BYTE PTR [rbx],dh
   14000fdc5:	mov    ecx,0xbc2300ea
   14000fdca:	std    
   14000fdcb:	add    BYTE PTR [rdi*4-0x4da7ff01],dh
   14000fdd2:	fiadd  WORD PTR [rax]
   14000fdd4:	es (bad) 
   14000fdd6:	inc    DWORD PTR [rax]
   14000fdd8:	ss ret 
   14000fdda:	stc    
   14000fddb:	add    BYTE PTR [rsi],bh
   14000fddd:	int    0xff
   14000fddf:	add    BYTE PTR [rbx+rcx*8-0x1],cl
   14000fde3:	add    BYTE PTR [rdx-0x34],bl
   14000fde6:	cld    
   14000fde7:	add    BYTE PTR [rbp-0x2f],al
   14000fdea:	inc    DWORD PTR [rax]
   14000fdec:	pop    rdx
   14000fded:	(bad)  
   14000fdee:	inc    DWORD PTR [rax]
   14000fdf0:	push   rbx
   14000fdf1:	fdivr  st,st(7)
   14000fdf3:	add    BYTE PTR [rbp-0x26],bl
   14000fdf6:	inc    DWORD PTR [rax]
   14000fdf8:	jle    0x14000fdcb
   14000fdfa:	in     al,dx
   14000fdfb:	add    BYTE PTR [rax-0x34],dh
   14000fdfe:	hlt    
   14000fdff:	add    BYTE PTR [rsi+rbx*8-0x1],ch
   14000fe03:	add    BYTE PTR [rsi-0x1f],dh
   14000fe06:	inc    DWORD PTR [rax]
   14000fe08:	jns    0x14000fdec
   14000fe0a:	inc    DWORD PTR [rax]
   14000fe0c:	jb     0x14000fdfa
   14000fe0e:	inc    DWORD PTR [rax]
   14000fe10:	xchg   DWORD PTR [rsi-0x7573ff80],eax
   14000fe16:	add    DWORD PTR [rax],0xffffff8e
   14000fe19:	mov    ecx,DWORD PTR [rbx-0x7b736e00]
   14000fe1f:	add    BYTE PTR [rax-0x75ff7577],dl
   14000fe25:	xchg   esp,eax
   14000fe26:	mov    DWORD PTR [rax],eax
   14000fe28:	nop
   14000fe29:	nop
   14000fe2a:	xchg   DWORD PTR [rax],eax
   14000fe2c:	fwait
   14000fe2d:	xchg   ecx,eax
   14000fe2e:	xchg   BYTE PTR [rax],al
   14000fe30:	xchg   esp,eax
   14000fe31:	xchg   edx,eax
   14000fe32:	mov    eax,DWORD PTR [rax]
   14000fe34:	(bad)  
   14000fe35:	xchg   esp,eax
   14000fe36:	mov    al,BYTE PTR [rax]
   14000fe38:	cwde   
   14000fe39:	cwde   
   14000fe3a:	pop    QWORD PTR [rax]
   14000fe3c:	fwait
   14000fe3d:	xchg   esp,eax
   14000fe3e:	xchg   esp,eax
   14000fe3f:	add    BYTE PTR [rbx-0x61ff6b66],bl
   14000fe45:	sahf   
   14000fe46:	cdq    
   14000fe47:	add    BYTE PTR [rsp+rcx*4-0x744fff7e],ah
   14000fe4e:	mov    DWORD PTR [rax],eax
   14000fe50:	movabs ds:0xa5008e99a1008f90,eax
   14000fe59:	pushf  
   14000fe5a:	xchg   ebx,eax
   14000fe5b:	add    BYTE PTR [rcx-0x51ff6662],ah
   14000fe61:	lods   eax,DWORD PTR ds:[rsi]
   14000fe62:	lea    eax,[rax]
   14000fe64:	lods   al,BYTE PTR ds:[rsi]
   14000fe65:	movabs eax,ds:0xa4aa009ba2a30097
   14000fe6e:	fwait
   14000fe6f:	add    BYTE PTR [rsi-0x4fff6158],ch
   14000fe75:	stos   DWORD PTR es:[rdi],eax
   14000fe76:	xchg   edi,eax
   14000fe77:	add    BYTE PTR [rdx-0x5bff6158],dh
   14000fe7d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fe7e:	movabs eax,ds:0xa9adad00a2a9aa00
   14000fe87:	add    BYTE PTR [rcx-0x5fff5c55],dh
   14000fe8d:	mov    ch,0xab
   14000fe8f:	add    BYTE PTR [rcx-0x46ff584f],dh
   14000fe95:	mov    cl,0xa7
   14000fe97:	add    BYTE PTR [rdx-0x44ff554f],dh
   14000fe9d:	mov    ch,0xac
   14000fe9f:	add    BYTE PTR [rbp-0x48ff5048],bh
   14000fea5:	mov    dh,0xb5
   14000fea7:	add    BYTE PTR [rsi+rsi*4-0x4544ff4c],bh
   14000feae:	mov    bl,0x0
   14000feb0:	mov    esp,0xc000b9bc
   14000feb5:	mov    ch,0xa8
   14000feb7:	add    cl,al
   14000feb9:	mov    esp,0xbcc100ab
   14000febe:	mov    bl,0x0
   14000fec0:	sar    DWORD PTR [rsi-0x5010ff48],0xaa
   14000fec7:	add    BYTE PTR [rax-0x5dff6d27],dl
   14000fecd:	fst    DWORD PTR [rbx-0x5a323100]
   14000fed3:	add    cl,cl
   14000fed5:	ret    0xb2
   14000fed8:	(bad)
   14000fedb:	add    cl,cl
   14000fedd:	(bad)  
   14000fede:	mov    esp,0xa3c7e200
   14000fee3:	add    dl,dh
   14000fee5:	fild   QWORD PTR [rax-0x4f311d00]
   14000feeb:	add    cl,ch
   14000feed:	shl    BYTE PTR [rcx-0x35316200],cl
   14000fef3:	add    BYTE PTR [rdi-0x57ff0011],cl
   14000fef9:	out    0xfd,eax
   14000fefb:	add    BYTE PTR [rcx-0x57ff0017],ah
   14000ff01:	call   0x107cb0003
   14000ff06:	ret    
   14000ff07:	add    bl,cl
   14000ff09:	retf   0xc2
   14000ff0c:	ror    ch,1
   14000ff0e:	(bad)  
   14000ff0f:	add    dl,dl
   14000ff11:	rol    bh,1
   14000ff13:	add    dl,dl
   14000ff15:	ror    ebp,cl
   14000ff17:	add    cl,bl
   14000ff19:	xlat   BYTE PTR ds:[rbx]
   14000ff1a:	int3   
   14000ff1b:	add    cl,bl
   14000ff1d:	(bad)  
   14000ff1f:	add    ch,bl
   14000ff21:	fstp   st(0)
   14000ff23:	add    bl,ah
   14000ff25:	jrcxz  0x14000ff02
   14000ff27:	add    ch,ch
   14000ff29:	in     al,dx
   14000ff2a:	fiadd  WORD PTR [rax]
   14000ff2c:	div    cl
   14000ff2e:	fiadd  DWORD PTR [rax]
   14000ff30:	out    dx,eax
   14000ff31:	out    dx,eax
   14000ff32:	in     eax,dx
   14000ff33:	add    bl,ch
   14000ff35:	cli    
   14000ff36:	out    dx,al
   14000ff37:	add    bh,bh
   14000ff39:	repz call 0x12ffcfa3f
   14000ff3f:	add    dh,dh
   14000ff41:	cmc    
   14000ff42:	repnz add bh,bh
   14000ff45:	(bad)  
   14000ff46:	inc    DWORD PTR [rax]
	...
   14000ff6c:	add    al,dh
   14000ff6e:	fld    st(2)
   14000ff70:	rex.WX xor rax,0xd704
	...
   14000ff82:	add    BYTE PTR [rax],al
   14000ff84:	(bad)  
   14000ff85:	mov    ch,0xbc
   14000ff87:	and    eax,0xfe034e4d
   14000ff8c:	div    DWORD PTR [rax+rax*1+0x0]
	...
   14000ff9b:	add    ch,dl
   14000ff9d:	retf   0x2265
   14000ffa0:	mov    dl,0x8
   14000ffa2:	or     edi,esi
   14000ffa4:	lock in al,0xcf
	...
   14000ffb3:	add    ch,bl
   14000ffb5:	(bad)  
   14000ffb6:	retf   0xccca
   14000ffb9:	mov    ecx,0xbad4f6b5
   14000ffbe:	fmulp  st(7),st
	...
   14000ffcc:	(bad)  
   14000ffce:	mov    bl,0x65
   14000ffd0:	gs gs gs cmc 
   14000ffd4:	in     al,0xd4
   14000ffd6:	mov    ebp,0xf0
   14000ffdb:	add    BYTE PTR [rax],al
   14000ffdd:	add    BYTE PTR [rax],al
   14000ffdf:	add    BYTE PTR [rsi-0x22ff4b7f],dh
   14000ffe5:	in     al,0xd0
   14000ffe7:	retf   0xb9ca
   14000ffea:	gs repz (bad) 
   14000ffee:	(bad)  
   14000ffef:	fiadd  WORD PTR [rax]
   14000fff1:	add    BYTE PTR [rax],al
   14000fff3:	add    BYTE PTR [rax],al
   14000fff5:	and    al,0x2
   14000fff7:	rex.WB (bad) 
   14000fff9:	je     0x14001006e
   14000fffb:	jb     0x14000ffda
   14000fffd:	enter  0xb5b3,0xb5
   140010001:	gs gs lock (bad) 
   140010005:	(bad)  
   140010006:	(bad)  
   140010007:	fld    DWORD PTR [rax]
   140010009:	add    BYTE PTR [rax],al
   14001000b:	add    cl,al
   14001000d:	(bad)  
   14001000e:	(bad)  
   14001000f:	push   rcx
   140010010:	rex.WRXB push r8
   140010012:	(bad)  
   140010013:	jbe    0x14000fff2
   140010015:	fst    st(0)
   140010017:	retf   0xc4c7
   14001001a:	addr32 in al,0xca
   14001001d:	retf   0xd2c8
   140010020:	add    BYTE PTR [rax],al
   140010022:	add    bh,bl
   140010024:	sub    eax,0x363b3e5a
   140010029:	cmp    DWORD PTR [rbx+0x5e],eax
   14001002c:	fstp   st(5)
   14001002e:	(bad)  
   14001002f:	(bad)  
   140010030:	xlat   BYTE PTR ds:[rbx]
   140010031:	mov    ebp,0xbfc8da65
   140010036:	mov    edi,0xca
   14001003b:	sub    dl,BYTE PTR [rdi+0x34]
   14001003e:	xor    BYTE PTR [rcx],dh
   140010040:	xor    edi,DWORD PTR [rax]
   140010042:	rex.X (bad) 
   140010044:	(bad)  
   140010046:	(bad)  
   140010047:	cld    
   140010048:	hlt    
   140010049:	int    0x65
   14001004b:	(bad)  
   14001004c:	mov    edi,0xc8babf
   140010051:	add    BYTE PTR [rsi],ah
   140010053:	adc    esi,DWORD PTR [rdi]
   140010055:	xor    bh,BYTE PTR [rdx]
   140010057:	rex.R
   140010058:	rex.WXB pop r8
   14001005a:	adc    al,0x14
   14001005c:	(bad)  
   14001005e:	in     eax,0xdd
   140010060:	fnstcw WORD PTR [rdi-0x45452b99]
   140010066:	mov    bl,0xbc
   140010068:	add    BYTE PTR [rax],al
   14001006a:	sbb    cl,BYTE PTR [rip+0x5452463c]        # 0x1945346ac
   140010070:	pop    rsp
   140010071:	sbb    DWORD PTR [rax],edx
   140010073:	sbb    ebx,ebp
   140010075:	fst    st(4)
   140010077:	ror    dl,1
   140010079:	mov    esp,0xb3b3ca23
   14001007e:	addr32 mov eax,0x120f2f00
   140010084:	adc    eax,0x1c285b5f
   140010089:	sub    al,0x2e
   14001008b:	sub    ebx,ebp
   14001008d:	fidivr WORD PTR [rdi+0x2365b5ba]
   140010093:	int    0xb3
   140010095:	addr32 addr32 mov bl,0x0
   140010099:	(bad)  
   14001009a:	adc    DWORD PTR [rsi],edx
   14001009c:	sbb    eax,0x7156201f
   1400100a1:	jno    0x140010113
   1400100a3:	outs   dx,BYTE PTR ds:[rsi]
   1400100a4:	in     al,0xe5
   1400100a6:	(bad)  
   1400100a8:	sar    DWORD PTR [rbx+riz*1+0xa6767c8],cl
   1400100af:	add    BYTE PTR [edi*1-0x72729be8],cl
   1400100b7:	mov    ecx,DWORD PTR [rbx-0xf7d7a75]
   1400100bd:	out    dx,eax
   1400100be:	(bad)
   1400100c1:	push   0xa67bf0b
   1400100c6:	or     cl,BYTE PTR [rdx]
   1400100c8:	add    BYTE PTR [rcx],al
   1400100ca:	(bad)  
   1400100cb:	(bad)  
   1400100cc:	push   0xffffffffffffff90
   1400100ce:	jmp    0x140010081
   1400100d0:	scas   al,BYTE PTR es:[rdi]
   1400100d1:	mov    al,0xa7
   1400100d3:	xor    cl,0xfa
   1400100d6:	(bad)  
   1400100d7:	std    
   1400100d8:	stc    
   1400100d9:	retf   
   1400100da:	or     bh,BYTE PTR [rdi+0xa060a0b]
   1400100e0:	add    BYTE PTR [rcx+0x40],bl
   1400100e3:	push   rbp
   1400100e4:	jp     0x140010162
   1400100e6:	nop
   1400100e7:	stos   DWORD PTR es:[rdi],eax
   1400100e8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400100e9:	movabs eax,ds:0xdcf20621e3f286ab
   1400100f2:	or     bh,BYTE PTR [rdi+0x705070a]
   1400100f8:	add    BYTE PTR [rbx-0x6bb3bebb],al
   1400100fe:	fwait
   1400100ff:	in     al,dx
   140010100:	movabs ds:0xd1b7c0dbe686aa98,eax
   140010109:	sar    BYTE PTR [rdi-0x25283033],cl
   14001010f:	fiadd  DWORD PTR [rax]
   140010111:	xchg   ebx,eax
   140010112:	rex.W
   140010113:	rex.RXB xchg r9d,eax
   140010115:	popf   
   140010116:	in     al,dx
   140010117:	test   al,0x9a
   140010119:	cdq    
   14001011a:	test   al,0x87
   14001011c:	jg     0x14001018d
   14001011e:	pop    rbp
   14001011f:	ins    BYTE PTR es:[rdi],dx
   140010120:	movsxd eax,DWORD PTR [rax]
   140010122:	add    BYTE PTR [rax],al
   140010124:	add    BYTE PTR [rax],al
   140010126:	add    BYTE PTR [rax],al
   140010128:	add    BYTE PTR [rbp-0x11637616],dl
   14001012e:	test   eax,0xa68c97a0
   140010133:	mov    bh,BYTE PTR [rax+0x29]
   140010136:	jns    0x1400101a1
	...
   140010140:	movabs ds:0x8e97a0a7edad8c9b,al
   140010149:	jnp    0x1400100da
   14001014b:	mov    dh,BYTE PTR [rbp+0x6d]
   14001014e:	push   rbx
   14001014f:	loopne 0x140010151
	...
   140010159:	sahf   
   14001015a:	scas   eax,DWORD PTR es:[rdi]
   14001015b:	test   eax,0x9297a0a4
   140010160:	jge    0x140010149
   140010162:	(bad)  
   140010163:	imul   esi,DWORD PTR [rdi+0x74],0xffffffe2
	...
   14001016f:	add    BYTE PTR [rax],al
   140010171:	lods   al,BYTE PTR ds:[rsi]
   140010172:	lahf   
   140010173:	lahf   
   140010174:	popf   
   140010175:	xchg   esi,eax
   140010176:	test   cl,ah
   140010178:	jle    0x140010175
   14001017a:	call   0x14001eaf4
	...
   140010187:	add    bh,bh
   140010189:	(bad)  
   14001018a:	inc    DWORD PTR [rax]
   14001018c:	(bad)  
   14001018d:	clc    
   14001018e:	(bad)  
   140010190:	push   rax
   140010192:	add    eax,DWORD PTR [rax]
   140010194:	push   rax
   140010196:	add    DWORD PTR [rax],eax
   140010198:	push   rax
   14001019a:	add    BYTE PTR [rax],al
   14001019c:	push   rax
   14001019e:	add    BYTE PTR [rax],al
   1400101a0:	call   QWORD PTR [rax]
   1400101a2:	add    BYTE PTR [rax],al
   1400101a4:	clc    
   1400101a5:	add    BYTE PTR [rax],al
   1400101a7:	add    al,dh
   1400101a9:	add    BYTE PTR [rax],al
   1400101ab:	add    al,ah
   1400101ad:	add    BYTE PTR [rax],al
   1400101af:	add    al,ah
   1400101b1:	add    BYTE PTR [rax],al
   1400101b3:	add    al,al
   1400101b5:	add    BYTE PTR [rax],al
   1400101b7:	add    al,al
   1400101b9:	add    BYTE PTR [rax],al
   1400101bb:	add    BYTE PTR [rax-0x80000000],al
   1400101c1:	add    BYTE PTR [rax],al
   1400101c3:	add    BYTE PTR [rax-0x80000000],al
   1400101c9:	add    BYTE PTR [rax],al
   1400101cb:	add    BYTE PTR [rax-0x80000000],al
   1400101d1:	add    BYTE PTR [rax],al
   1400101d3:	add    BYTE PTR [rax-0x7fff8100],al
   1400101d9:	add    bh,bh
   1400101db:	add    BYTE PTR [rax],al
   1400101dd:	add    bh,bh
   1400101df:	add    BYTE PTR [rax-0x7fff00ff],al
   1400101e5:	(bad)  
   1400101e6:	inc    DWORD PTR [rax]
   1400101e8:	sub    BYTE PTR [rax],al
   1400101ea:	add    BYTE PTR [rax],al
   1400101ec:	adc    BYTE PTR [rax],al
   1400101ee:	add    BYTE PTR [rax],al
   1400101f0:	and    BYTE PTR [rax],al
   1400101f2:	add    BYTE PTR [rax],al
   1400101f4:	add    DWORD PTR [rax],eax
   1400101f6:	or     BYTE PTR [rax],al
   1400101f8:	add    BYTE PTR [rax],al
   1400101fa:	add    BYTE PTR [rax],al
   1400101fc:	add    BYTE PTR [rcx],al
	...
   140010206:	add    BYTE PTR [rax],al
   140010208:	add    BYTE PTR [rcx],al
   14001020a:	add    BYTE PTR [rax],al
   14001020c:	add    BYTE PTR [rcx],al
   14001020e:	add    BYTE PTR [rax],al
   140010210:	add    BYTE PTR [rax],al
   140010212:	add    BYTE PTR [rax],al
   140010214:	xor    esi,DWORD PTR [rbx]
   140010216:	xor    DWORD PTR [rax],eax
   140010218:	(bad)  
   140010219:	jbe    0x14001021b
   14001021b:	add    BYTE PTR [rbp+0x52],bh
   14001021e:	or     al,BYTE PTR [rax]
   140010220:	push   rax
   140010221:	outs   dx,DWORD PTR ds:[rsi]
   140010222:	add    BYTE PTR [rax],al
   140010224:	pop    rsp
   140010225:	rex.WRX
   140010226:	add    BYTE PTR es:[rdx+0x69],dh
   14001022a:	pop    rsi
   14001022b:	add    BYTE PTR [rcx+0x70],bh
   14001022e:	movsxd eax,DWORD PTR [rax]
   140010230:	jnp    0x1400102a5
   140010232:	data16 add BYTE PTR [rsi+0x75],bh
   140010236:	add    BYTE PTR [edi+0x75],bh
   14001023a:	push   0x6e777f00
   14001023f:	add    BYTE PTR [rsi-0x62fff1ea],dh
   140010245:	(bad)  
   140010246:	or     BYTE PTR [rax],al
   140010248:	nop
   140010249:	xor    eax,0x27ae0016
   14001024e:	verr   WORD PTR [rbx-0x46ffeab1]
   140010255:	jg     0x140010296
   140010257:	add    cl,bl
   140010259:	push   rbx
   14001025a:	(bad)  
   14001025b:	add    ch,cl
   14001025d:	imul   ebx,DWORD PTR [rip+0x3550e800],0x0        # 0x17551ea64
   140010264:	(bad)  
   140010265:	imul   esp,DWORD PTR [rdx],0x0
   140010268:	enter  0x217e,0x0
   14001026c:	lock movsxd esi,DWORD PTR [rdi]
   14001026f:	add    BYTE PTR [rbp-0x7affb687],ch
   140010275:	jnp    0x1400102e3
   140010277:	add    BYTE PTR [rdi-0x7dff9083],al
   14001027d:	jnp    0x1400102f1
   14001027f:	add    BYTE PTR [rbp-0x77ff8982],al
   140010285:	jg     0x1400102f9
   140010287:	add    BYTE PTR [rdx+rbp*4],ch
   14001028a:	add    BYTE PTR [rax],al
   14001028c:	cmp    DWORD PTR [rdi-0x6c8fffd6],edx
   140010292:	adc    eax,DWORD PTR [rax]
   140010294:	mov    dl,0x1
   140010297:	add    BYTE PTR [rbx-0x4e],dh
   14001029a:	sbb    eax,DWORD PTR [rax]
   14001029c:	mov    QWORD PTR [r8],rbp
   14001029f:	add    BYTE PTR [rbp+rax*4+0x2d],dl
   1400102a3:	add    BYTE PTR [rcx-0x7f],dh
   1400102a6:	sub    BYTE PTR [rax],al
   1400102a8:	xor    al,bl
   1400102aa:	add    BYTE PTR [rax],al
   1400102ac:	xor    bh,al
   1400102ae:	add    BYTE PTR [rax],al
   1400102b0:	(bad)  
   1400102b1:	out    0xa,eax
   1400102b3:	add    BYTE PTR [rdx],bh
   1400102b5:	std    
   1400102b6:	sbb    BYTE PTR [rax],al
   1400102b8:	add    ch,dl
   1400102ba:	xor    eax,0x1ed45600
   1400102bf:	add    BYTE PTR [rcx-0xe],al
   1400102c2:	sbb    al,BYTE PTR [rax]
   1400102c4:	je     0x140010295
   1400102c6:	cmp    al,0x0
   1400102c8:	(bad)  
   1400102c9:	idiv   DWORD PTR [rax+rax*1]
   1400102cc:	jb     0x140010264
   1400102ce:	push   rsp
   1400102cf:	add    BYTE PTR [rax-0x6b],ch
   1400102d2:	data16 add BYTE PTR [rax],al
   1400102d5:	inc    DWORD PTR [rdi+0x0]
   1400102d8:	movabs al,ds:0xb5003a87ae002d8b
   1400102e1:	movabs eax,ds:0x89cf0028a4b5002b
   1400102ea:	es add ch,bl
   1400102ed:	mov    BYTE PTR [rcx],ch
   1400102ef:	add    cl,ch
   1400102f1:	xchg   DWORD PTR [rdx],esi
   1400102f3:	add    bh,bh
   1400102f5:	test   BYTE PTR [rdx],bh
   1400102f7:	add    bh,bh
   1400102f9:	lahf   
   1400102fa:	(bad)  
   1400102fb:	add    BYTE PTR [rdx-0x74ffbe73],dh
   140010301:	xor    BYTE PTR [rcx+0x0],0x8a
   140010305:	xor    DWORD PTR [rsi+0x0],0x77838c
   14001030c:	mov    es,WORD PTR [rsi-0x766bff84]
   140010312:	jp     0x140010314
   140010314:	(bad)  
   140010315:	(bad)  
   140010316:	jg     0x140010318
   140010318:	(bad)
   14001031b:	add    cl,bl
   14001031d:	popf   
   14001031e:	pop    rbx
   14001031f:	add    ch,ah
   140010321:	test   DWORD PTR [rbp+0x0],eax
   140010324:	icebp  
   140010325:	stos   BYTE PTR es:[rdi],al
   140010326:	rex.WRXB add r15b,r15b
   140010329:	scas   al,BYTE PTR es:[rdi]
   14001032a:	rex.WX add al,al
   14001032d:	xchg   esi,eax
   14001032e:	jae    0x140010330
   140010330:	sar    BYTE PTR [rax-0x5c3eff9a],0x77
   140010337:	add    BYTE PTR [rsi-0x7bffb13d],cl
   14001033d:	rol    BYTE PTR [rbx+0x0],1
   140010340:	cmp    BYTE PTR [rbx-0x21bbff5f],ah
   140010346:	sahf   
   140010347:	add    BYTE PTR [rdx-0x13],ah
   14001034a:	add    BYTE PTR [rax],0x29
   14001034d:	movabs ds:0xa00d00dfa42000d2,eax
   140010356:	jrcxz  0x140010358
   140010358:	adc    ah,BYTE PTR [rcx-0x5ceaff1e]
   14001035e:	in     al,0x0
   140010360:	(bad)  
   140010361:	lods   eax,DWORD PTR ds:[rsi]
   140010362:	out    dx,al
   140010363:	add    BYTE PTR [rbx],bl
   140010365:	stos   DWORD PTR es:[rdi],eax
   140010366:	jmp    0x140010368
   140010368:	(bad)  
   140010369:	scas   al,BYTE PTR es:[rdi]
   14001036a:	(bad)  
   14001036b:	add    BYTE PTR [rsi],bl
   14001036d:	lods   eax,DWORD PTR ds:[rsi]
   14001036e:	in     eax,dx
   14001036f:	add    BYTE PTR [rsi+rbp*4],dl
   140010372:	lock add BYTE PTR [rip+0x1c00f7b3],bl        # 0x15c01fb2c
   140010379:	mov    ebx,0xb31f00f4
   14001037e:	stc    
   14001037f:	add    BYTE PTR [rdi+rbp*4],ah
   140010382:	jmp    0x121ae3c87
   140010387:	add    BYTE PTR [rax+rsi*4],ah
   14001038a:	jmp    0x12bb22b8f
   14001038f:	add    BYTE PTR [rsi],ch
   140010391:	mov    esp,0xb03300ec
   140010396:	jmp    0x12fbd419b
   14001039b:	add    BYTE PTR [rcx],ah
   14001039d:	mov    al,0xf5
   14001039f:	add    BYTE PTR [rsi],dh
   1400103a1:	mov    ebp,0xde1200f3
   1400103a6:	rol    DWORD PTR [rax],0xd
   1400103a9:	ret    0xff
   1400103ac:	imul   ecx,esi,0xfffffff6
   1400103af:	add    BYTE PTR [rsi+rbx*8-0x2],ch
   1400103b3:	add    BYTE PTR [rcx-0x26],dh
   1400103b6:	inc    DWORD PTR [rax]
   1400103b8:	mov    al,BYTE PTR [rsi-0x736bff7f]
   1400103be:	add    DWORD PTR [rax],0xffffffa6
   1400103c1:	pushf  
   1400103c2:	lea    eax,[rax]
   1400103c4:	movabs ds:0xac0093a1aa00989e,al
   1400103cd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400103ce:	xchg   edi,eax
   1400103cf:	add    BYTE PTR [rdi-0x55ff6c53],ah
   1400103d5:	movabs ds:0xafb800a2acb40098,al
   1400103de:	movabs eax,ds:0xa3b2ba00a6b0b600
   1400103e7:	add    BYTE PTR [rbp-0x43ff594d],bh
   1400103ed:	mov    ah,0xa6
   1400103ef:	add    BYTE PTR [rdx-0x40ff554d],bh
   1400103f5:	mov    dh,0xa8
   1400103f7:	add    BYTE PTR [rbx-0x3dff524b],bh
   1400103fd:	mov    eax,0xbbc400aa
   140010402:	lods   al,BYTE PTR ds:[rsi]
   140010403:	add    ch,al
   140010405:	mov    ebp,0xbec700ae
   14001040a:	mov    al,0x0
   14001040c:	sar    DWORD PTR [rbp-0x3d27ff48],0x8c
   140010413:	add    cl,cl
   140010415:	shl    BYTE PTR [rdx-0x443f3c00],0x0
   14001041c:	ror    ebp,cl
   14001041e:	mov    ecx,0xfcdf8c00
   140010423:	add    BYTE PTR [rbp-0x67ff011b],cl
   140010429:	jrcxz  0x140010429
   14001042b:	add    BYTE PTR [rcx+rbp*8-0x3c39ff03],ah
   140010432:	rol    BYTE PTR [rax],0xca
   140010435:	enter  0xc6,0xcc
   140010439:	retf   0xc8
   14001043c:	loope  0x14001041a
   14001043e:	retf   
   14001043f:	add    al,ch
   140010441:	in     eax,0xd4
   140010443:	add    bl,ch
   140010445:	out    0xdb,eax
   140010447:	add    ch,ch
   140010449:	jmp    0x12df1052c
   14001044e:	jrcxz  0x140010450
   140010450:	clc    
   140010451:	imul   esi
   140010453:	add    bl,bh
   140010455:	cli    
   140010456:	hlt    
	...
   14001060b:	add    bh,bh
   14001060d:	(bad)  
   14001060e:	inc    DWORD PTR [rax]
	...
   140010618:	add    BYTE PTR [rdi],bh
   14001061a:	cmp    eax,0x7191d1d
   14001061f:	(bad)  
	...
   140010628:	add    BYTE PTR [rcx+0x7d],dh
   14001062b:	jge    0x1400106aa
   14001062d:	sub    dh,BYTE PTR [rcx]
   14001062f:	(bad)  
	...
   140010638:	add    BYTE PTR [rsi+rdi*2+0x7d],dh
   14001063c:	jge    0x14001068b
   14001063e:	gs (bad) 
	...
   140010648:	add    BYTE PTR [rax-0x7f],bh
   14001064b:	jge    0x1400106ca
   14001064d:	ja     0x1400106c2
   14001064f:	or     al,BYTE PTR [rax]
   140010651:	add    BYTE PTR [rax],al
   140010653:	add    BYTE PTR [rax],al
   140010655:	add    BYTE PTR [rbx],ah
   140010657:	and    eax,0x7e817f00
   14001065c:	jle    0x1400106d6
   14001065e:	ja     0x140010679
   140010660:	add    BYTE PTR [rax],al
   140010662:	add    BYTE PTR [rax],al
   140010664:	(bad)  
   140010665:	add    bl,BYTE PTR [rsi]
   140010667:	and    DWORD PTR [rax],esp
   140010669:	(bad)  
   14001066a:	add    DWORD PTR [rcx+0x19777d81],0xd000000
   140010674:	add    al,0x26
   140010676:	sub    BYTE PTR [rcx],ch
   140010678:	sub    ecx,DWORD PTR [rax+0xa1c1c6b]
   14001067e:	cmp    eax,0xc00003d
   140010683:	add    esp,DWORD PTR [rsi]
   140010685:	sub    al,0x2e
   140010687:	rex.WXB xor cl,BYTE PTR [r9-0x71707071]
   14001068e:	lea    eax,[rax+0x0]
   140010691:	add    BYTE PTR [rdi],cl
   140010693:	adc    BYTE PTR [rdx],ah
   140010695:	sub    eax,0x8914424a
   14001069a:	ins    DWORD PTR es:[rdi],dx
   14001069b:	push   0x6a
   14001069d:	sbb    al,0x3d
   14001069f:	add    BYTE PTR [r11],sil
   1400106a2:	adc    eax,0x37161312
   1400106a7:	cmp    BYTE PTR [rdi],dl
   1400106a9:	mov    dl,BYTE PTR [rcx-0x74736f70]
   1400106af:	ins    BYTE PTR es:[rdi],dx
   1400106b0:	add    BYTE PTR [rbx],bh
   1400106b2:	ss rex.WRXB push r13
   1400106b5:	push   rbp
   1400106b6:	push   rbp
   1400106b7:	push   rsp
   1400106b8:	cmp    DWORD PTR [rdx+0x1050583],ecx
   1400106be:	sub    DWORD PTR [rsi+0x0],0xffffff80
   1400106c2:	xor    eax,0x86876224
   1400106c7:	movsxd edi,DWORD PTR [rdx]
   1400106c9:	mov    cl,BYTE PTR [rdx+0x72788989]
   1400106cf:	outs   dx,BYTE PTR ds:[rsi]
   1400106d0:	push   rbx
   1400106d1:	pop    rbp
   1400106d2:	xor    eax,0x6668641f
   1400106d7:	pop    rcx
   1400106d8:	rex.RX
   1400106d9:	rex.W
   1400106da:	rex.WRX (bad) 
   1400106dc:	add    BYTE PTR [rax],al
   1400106de:	add    BYTE PTR [rax],al
   1400106e0:	push   rcx
   1400106e1:	pop    rbp
   1400106e2:	jo     0x140010744
   1400106e4:	test   DWORD PTR [rdx+0x58],ebx
   1400106e7:	pop    rbx
   1400106e8:	rex.RB
   1400106e9:	rex.XB sbb BYTE PTR [r8],al
   1400106ec:	add    BYTE PTR [rax],al
   1400106ee:	add    BYTE PTR [rax],al
   1400106f0:	push   rbx
   1400106f1:	imul   eax,DWORD PTR [esi+ebx*2+0x4450304c],0x11
   1400106fd:	add    BYTE PTR [rax],al
   1400106ff:	add    BYTE PTR [rax],al
   140010701:	pop    rdi
   140010702:	pop    rsp
   140010703:	(bad)  
   140010704:	add    BYTE PTR [rax],al
   140010706:	rex.WB
   140010707:	rex.RXB add BYTE PTR [r8],r8b
   14001070a:	add    BYTE PTR [rax],al
   14001070c:	add    BYTE PTR [rax],al
   14001070e:	add    BYTE PTR [rax],al
   140010710:	inc    DWORD PTR [rax-0x7f010000]
   140010716:	add    BYTE PTR [rax],al
   140010718:	inc    DWORD PTR [rax-0x7f010000]
   14001071e:	add    BYTE PTR [rax],al
   140010720:	cld    
   140010721:	add    BYTE PTR [rax],0x0
   140010724:	lock add BYTE PTR [rax],al
   140010727:	add    al,ah
   140010729:	add    BYTE PTR [rax],al
   14001072b:	add    al,al
   14001072d:	add    BYTE PTR [rax],al
   14001072f:	add    al,al
   140010731:	add    BYTE PTR [rax],al
   140010733:	add    BYTE PTR [rax-0x80000000],al
   140010739:	add    BYTE PTR [rax],al
   14001073b:	add    BYTE PTR [rax+0x0],al
   140010741:	sldt   WORD PTR [rax]
   140010744:	add    BYTE PTR [rdi],bl
   140010746:	add    BYTE PTR [rax],al
   140010748:	add    BYTE PTR [rdi],bh
   14001074a:	add    BYTE PTR [rax],al
   14001074c:	mov    edi,?
   14001074e:	add    BYTE PTR [rax],al
   140010750:	mov    DWORD PTR [rax+0x4e],edx
   140010753:	rex.RXB or eax,0xa1a0a
   140010759:	add    BYTE PTR [rax],al
   14001075b:	or     eax,0x52444849
   140010760:	add    BYTE PTR [rax],al
   140010762:	add    DWORD PTR [rax],eax
   140010764:	add    BYTE PTR [rax],al
   140010766:	add    DWORD PTR [rax],eax
   140010768:	or     BYTE PTR [rsi],al
   14001076a:	add    BYTE PTR [rax],al
   14001076c:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   140010770:	data16 add BYTE PTR [rax],al
   140010773:	and    BYTE PTR [rax],al
   140010775:	rex.WB
   140010776:	rex.R
   140010777:	push   r12
   140010779:	js     0x140010717
   14001077b:	in     al,dx
   14001077c:	mov    ebp,0x575d9479
   140010781:	jge    0x14001076a
   140010783:	sti    
   140010784:	fnstcw WORD PTR [rbx-0x61]
   140010787:	stc    
   140010788:	rex.WRX push rbp
   14001078a:	mov    bh,0x26
   14001078c:	push   rbp
   14001078d:	xchg   ebp,eax
   14001078e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001078f:	shr    BYTE PTR [rbx+rcx*2],cl
   140010792:	mov    dl,0x8c
   140010794:	ins    DWORD PTR es:[rdi],dx
   140010795:	ins    BYTE PTR es:[rdi],dx
   140010796:	rol    BYTE PTR [rax+0x43081b01],0x8
   14001079d:	push   rbx
   14001079e:	cmp    cl,BYTE PTR [rcx+0x27]
   1400107a1:	and    ebp,ebx
   1400107a3:	rcr    BYTE PTR [rbp-0x422a6a6b],1
   1400107a9:	mov    dl,0x5e
   1400107ab:	(bad)  
   1400107ac:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400107ad:	fisttp WORD PTR [rbx-0xe]
   1400107b0:	pop    rsi
   1400107b1:	cli    
   1400107b2:	mov    ebp,0xb2733ba4
   1400107b7:	push   rsi
   1400107b8:	mov    dl,0x68
   1400107ba:	enter  0x19d4,0x8
   1400107be:	adc    rdx,r10
   1400107c1:	nop
   1400107c2:	adc    BYTE PTR [rax],cl
   1400107c4:	add    DWORD PTR [rbx-0x78],esp
   1400107c7:	(bad)  
   1400107c8:	xor    BYTE PTR [rax-0x35],ah
   1400107cb:	movabs ds:0xf3cd52a54ab35964,eax
   1400107d4:	popf   
   1400107d5:	iret   
   1400107d6:	mov    al,0xf7
   1400107d8:	sti    
   1400107d9:	jrcxz  0x140010777
   1400107db:	jnp    0x1400107c8
   1400107dd:	push   rsi
   1400107de:	rex.WB (bad) 
   1400107e0:	jrcxz  0x140010842
   1400107e2:	pop    rax
   1400107e3:	pop    rbp
   1400107e4:	(bad)  
   1400107e5:	mov    ebx,0xf73def74
   1400107ea:	(bad)  
   1400107eb:	test   eax,0xbf7f7d33
   1400107f0:	out    dx,eax
   1400107f1:	out    dx,eax
   1400107f2:	sti    
   1400107f3:	sti    
   1400107f4:	in     eax,dx
   1400107f5:	jge    0x1400107fb
   1400107f7:	pop    rbx
   1400107f8:	imul   BYTE PTR [rdi]
   1400107fa:	(bad)  
   1400107fb:	mov    edi,0xbe54f770
   140010800:	movsxd rsp,DWORD PTR [r8+0xbeadcb6]
   140010807:	(bad)  
   140010808:	rex.WX
   140010809:	rex.WRB (bad) 
   14001080b:	cs call 0x16d2512d9
   140010811:	(bad)  
   140010812:	push   rdx
   140010813:	(bad)  
   140010814:	rol    DWORD PTR [rdx-0x45],cl
   140010817:	mov    DWORD PTR [rdx-0x14],esi
   14001081a:	pushf  
   14001081b:	mov    dl,0x2d
   14001081d:	and    eax,0x9069ab62
   140010822:	cmp    cl,BYTE PTR [rcx+0x1352d28d]
   140010828:	mov    ch,BYTE PTR [rax]
   14001082a:	mov    WORD PTR [rsp+riz*4-0xe],cs
   14001082e:	and    dh,BYTE PTR [rdx+rdx*1+0x619af0d1]
   140010835:	movabs ds:0x8d90d6bf81155245,eax
   14001083e:	(bad)  
   14001083f:	adc    dh,BYTE PTR [rdx+0x6e]
   140010842:	outs   dx,DWORD PTR fs:[rsi]
   140010844:	jmp    rsp
   140010846:	push   rbp
   140010848:	mov    ah,BYTE PTR [rcx]
   14001084a:	repz jb 0x14001086c
   14001084d:	out    0x96,eax
   14001084f:	jge    0x1400108c8
   140010851:	fwait
   140010852:	js     0x14001080d
   140010854:	ja     0x140010836
   140010856:	mov    ebx,0xe2e2fed5
   14001085b:	(bad)  
   14001085c:	mov    ch,0x56
   14001085e:	popf   
   14001085f:	ror    BYTE PTR [rbx],cl
   140010861:	movabs eax,ds:0x78ad16efac5c2eed
   14001086a:	rex.WRXB xor r14,QWORD PTR [r14-0x4a]
   14001086e:	fist   DWORD PTR [rsi+0x311b143d]
   140010874:	shr    BYTE PTR [rax+0x35],cl
   140010877:	jbe    0x140010862
   140010879:	mov    eax,0x4a9c67d2
   14001087e:	shl    DWORD PTR [rsi-0x6e],1
   140010881:	pushf  
   140010882:	ins    DWORD PTR es:[rdi],dx
   140010883:	(bad)
   140010886:	push   0xffffffffffffffcf
   140010888:	cmc    
   140010889:	test   bl,ah
   14001088b:	sub    ch,BYTE PTR [rcx-0x5c7a718e]
   140010891:	add    al,0x42
   140010893:	(bad)  
   140010894:	adc    BYTE PTR [rsi],al
   140010896:	test   DWORD PTR [rsi],eax
   140010898:	and    DWORD PTR [rcx-0x4c],ecx
   14001089b:	and    DWORD PTR [rcx+0xc],ecx
   14001089e:	push   rcx
   14001089f:	(bad)  
   1400108a0:	mov    BYTE PTR [rdx-0x65eca97c],ah
   1400108a6:	xor    DWORD PTR [rbp+0x5b354b56],ebp
   1400108ac:	and    ebp,esi
   1400108ae:	and    al,0x2e
   1400108b0:	push   rbp
   1400108b1:	pop    rbx
   1400108b2:	(bad)  
   1400108b3:	ret    0xb372
   1400108b6:	pop    rcx
   1400108b7:	cdq    
   1400108b8:	sbb    ebx,ebp
   1400108ba:	fidiv  WORD PTR [rdi]
   1400108bc:	gs pop rbx
   1400108be:	shl    DWORD PTR [rbp+rbx*8-0x76],0xaf
   1400108c3:	add    al,0xc6
   1400108c5:	mov    ecx,0x1f17b798
   1400108ca:	call   QWORD PTR [rbp+0xbcdf77]
   1400108d0:	lock ror DWORD PTR [rcx+0x3be7f119],0xb7
   1400108d8:	ins    DWORD PTR es:[rdi],dx
   1400108d9:	cmp    DWORD PTR [rax-0x24a984d3],ecx
   1400108df:	jb     0x1400108e1
   1400108e1:	(bad)  
   1400108e2:	sar    dh,1
   1400108e4:	retf   
   1400108e5:	jge    0x14001087e
   1400108e7:	(bad)  
   1400108e8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400108e9:	rex.WRXB iretq 
   1400108eb:	sbb    eax,0xa8e6c56d
   1400108f0:	push   rsi
   1400108f1:	(bad)  
   1400108f2:	(bad)  
   1400108f3:	jrcxz  0x1400108cd
   1400108f5:	xlat   BYTE PTR ds:[rbx]
   1400108f6:	imul   edx,DWORD PTR [rcx+0x3d],0x854b780
   1400108fd:	mov    dl,BYTE PTR [rcx-0x70]
   140010900:	iret   
   140010901:	rex.RXB pop r14
   140010903:	mov    cl,0x20
   140010905:	sbb    BYTE PTR [rax],ch
   140010907:	fdivr  st,st(0)
   140010909:	mov    es,edx
   14001090b:	push   rcx
   14001090c:	add    cl,BYTE PTR [rbx+0x49]
   14001090f:	pop    rsp
   140010910:	test   eax,0x90941890
   140010915:	pop    rax
   140010916:	push   rdx
   140010917:	and    DWORD PTR [rax+rax*1-0x5bb7b5f3],esp
   14001091e:	add    BYTE PTR [rbp+0x11fa2b8d],al
   140010924:	add    dh,BYTE PTR [rax]
   140010926:	nop
   140010927:	push   0x16108300
   14001092c:	(bad)  
   14001092d:	shl    BYTE PTR [rcx+riz*2+0x13463096],cl
   140010934:	rex.RXB (bad) 
   140010936:	loope  0x1400109a9
   140010938:	not    BYTE PTR [rcx+rdx*4-0x45]
   14001093c:	(bad)  
   14001093d:	pop    rsi
   14001093e:	and    ebx,DWORD PTR [rdi]
   140010940:	mov    eax,0x49446c80
   140010945:	push   rdx
   140010946:	push   rbx
   140010947:	mov    dh,0x5a
   140010949:	lock sbb al,0x6b
   14001094c:	fcomp  QWORD PTR [rax-0x2a31b308]
   140010952:	(bad)  
   140010953:	jp     0x14001094c
   140010955:	cmc    
   140010956:	fsubrp st(7),st
   140010958:	(bad)  
   140010959:	test   BYTE PTR [rbp+rbp*1-0x49],0xea
   14001095e:	leave  
   14001095f:	outs   dx,DWORD PTR ds:[rsi]
   140010960:	pop    rdi
   140010961:	(bad)  
   140010962:	sar    BYTE PTR [rax+0x79],cl
   140010965:	iret   
   140010966:	fcom   QWORD PTR [rsi-0x6925d883]
   14001096c:	add    edi,DWORD PTR [rax+0xe]
   14001096f:	sti    
   140010970:	out    dx,eax
   140010971:	(bad)  
   140010972:	xchg   esi,eax
   140010973:	ja     0x1400109d1
   140010975:	sbb    al,0x9f
   140010977:	fistp  QWORD PTR [rcx]
   140010979:	xor    eax,0xb4bb74b9
   14001097e:	xchg   edx,eax
   14001097f:	movabs ds:0x380f542edebed15e,eax
   140010988:	test   DWORD PTR [rip+0xffffffffc89bd8a7],edx        # 0x1089ce235
   14001098e:	jb     0x1400109e9
   140010990:	shr    ebx,cl
   140010992:	rex.XB
   140010993:	rex.WRX fidivr DWORD PTR [rax-0x76e6be3e]
   14001099a:	adc    dl,BYTE PTR [rsi]
   14001099c:	mov    dh,0xb0
   14001099e:	adc    BYTE PTR [rdx-0x60],bl
   1400109a1:	adc    BYTE PTR [rax],cl
   1400109a3:	(bad)  
   1400109a4:	xor    DWORD PTR [rcx],0xc6302d18
   1400109aa:	and    BYTE PTR [rax],dl
   1400109ac:	push   0xffffffffa448c203
   1400109b1:	nop
   1400109b2:	rex.W sub al,0x1c
   1400109b5:	jp     0x140010968
   1400109b7:	test   BYTE PTR [rdi+0x68],al
   1400109ba:	xor    al,0x5a
   1400109bc:	(bad)  
   1400109bd:	pop    rax
   1400109be:	rex.WX
   1400109bf:	data16 jnp 0x1400109e2
   1400109c2:	rex push 0x1081294
   1400109c8:	xchg   esi,eax
   1400109c9:	add    al,0xdb
   1400109cb:	(bad)  
   1400109cc:	cmp    al,0x71
   1400109ce:	test   eax,0xd70f5dc9
   1400109d3:	and    DWORD PTR [rcx],edx
   1400109d5:	sbb    BYTE PTR [rcx],ah
   1400109d7:	mov    DWORD PTR [rdx],esp
   1400109d9:	or     DWORD PTR [rcx+0xc],0x5a
   1400109dd:	(bad)  
   1400109de:	nop
   1400109df:	or     BYTE PTR [rdx],dl
   1400109e1:	rex.WRB and r14b,BYTE PTR [r9]
   1400109e4:	rex.WRB mov r12b,0xb8
   1400109e7:	call   0x155e24644
   1400109ec:	lods   al,BYTE PTR ds:[rsi]
   1400109ed:	mov    ebx,0xc7f3dbcb
   1400109f2:	test   ch,ah
   1400109f4:	scas   eax,DWORD PTR es:[rdi]
   1400109f5:	cwde   
   1400109f6:	xchg   edx,eax
   1400109f7:	pop    rax
   1400109f8:	cld    
   1400109f9:	int    0x5b
   1400109fb:	(bad)  
   1400109fc:	fwait
   1400109fd:	(bad)  
   1400109fe:	jmp    0x140010989
   140010a00:	fnsave [rdx+0x72db08ef]
   140010a06:	add    bh,dl
   140010a08:	mov    al,0x5f
   140010a0a:	jg     0x1400109ec
   140010a0c:	repnz ror DWORD PTR [rbx-0x69],0xd7
   140010a11:	(bad)  
   140010a12:	rex.WRXB
   140010a13:	rex.WRXB int 0xdf
   140010a16:	imul   esp,edi,0x7fb1bc2
   140010a1c:	frstor [rbx]
   140010a1e:	mov    r9d,0xaef7ebd2
   140010a24:	rcr    edi,1
   140010a26:	movsxd ebp,eax
   140010a28:	sub    ebp,DWORD PTR [rax]
   140010a2a:	cmp    al,0xe3
   140010a2c:	loope  0x140010a96
   140010a2e:	sbb    esi,DWORD PTR [rsp+rax*2-0x6bfd7696]
   140010a35:	adc    DWORD PTR [rax+0x8101a44],eax
   140010a3b:	xor    BYTE PTR [rax+0x5a044811],al
   140010a41:	imul   eax,DWORD PTR [rdx+rsi*1],0xfffffffb
   140010a45:	rex.WRXB and BYTE PTR [r8+r8*2+0x6368948],r9b
   140010a4d:	retf   
   140010a4e:	adc    al,0x70
   140010a50:	rex.R mov es,WORD PTR [rbp-0x464637b6]
   140010a57:	sbb    al,BYTE PTR [rsi+0x44]
   140010a5a:	xchg   esp,eax
   140010a5b:	or     ebx,DWORD PTR [rsi]
   140010a5d:	mov    cl,0x90
   140010a5f:	(bad)  
   140010a60:	ret    
   140010a61:	mov    BYTE PTR [rdx-0x55],cl
   140010a64:	mov    DWORD PTR [rbp+0x9],ebp
   140010a67:	add    al,bh
   140010a69:	or     bl,BYTE PTR [r8-0x57]
   140010a6d:	imul   ecx,DWORD PTR [rsi-0x252e52c1],0xffffffc5
   140010a74:	sub    edi,DWORD PTR [rdx+0x23892368]
   140010a7a:	(bad)  
   140010a7b:	leave  
   140010a7c:	pushf  
   140010a7d:	or     al,0xc6
   140010a7f:	movabs al,ds:0x63a35aafa424c1b5
   140010a88:	or     DWORD PTR [rcx-0x3c],0xffffff9a
   140010a8c:	adc    bh,dl
   140010a8e:	leave  
   140010a8f:	sahf   
   140010a90:	jle    0x140010a79
   140010a92:	stos   DWORD PTR es:[rdi],eax
   140010a93:	std    
   140010a94:	cmp    ecx,DWORD PTR [rdx-0x474e7bf1]
   140010a9a:	fcom   QWORD PTR [rbx-0x1d01318d]
   140010aa0:	sbb    esi,DWORD PTR [rsi+0x5dff8552]
   140010aa6:	ins    DWORD PTR es:[rdi],dx
   140010aa7:	retf   
   140010aa8:	add    DWORD PTR [rcx+rbx*8-0x79],esi
   140010aac:	(bad)  
   140010aad:	sti    
   140010aae:	hlt    
   140010aaf:	cmovle ecx,DWORD PTR [rbp+0x2e]
   140010ab3:	mov    edi,0x374bdb55
   140010ab8:	outs   dx,DWORD PTR ds:[rsi]
   140010ab9:	(bad)  [rcx+0xe]
   140010abc:	ins    DWORD PTR es:[rdi],dx
   140010abd:	(bad)  
   140010abe:	hlt    
   140010abf:	jl     0x140010af8
   140010ac1:	(bad)  
   140010ac2:	rex.X jno 0x140010a46
   140010ac5:	pop    rsi
   140010ac6:	fcmovnb st,st(3)
   140010ac8:	shr    DWORD PTR [rsi],cl
   140010aca:	sub    dh,BYTE PTR [rcx+0x40]
   140010acd:	add    ecx,DWORD PTR [rax]
   140010acf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010ad0:	adc    DWORD PTR [rax-0x3a],ebx
   140010ad3:	movabs al,ds:0x604061795293480c
   140010adc:	mov    BYTE PTR [rdx-0x17397cfc],dl
   140010ae2:	or     BYTE PTR [rcx-0x71e1ed40],al
   140010ae8:	or     al,0x10
   140010aea:	es in  eax,0xf8
   140010aed:	sub    ebp,edx
   140010aef:	(bad)  
   140010af0:	push   0x45816840
   140010af5:	sub    DWORD PTR [rcx-0x6c8c7727],0xd0a9182b
   140010aff:	mov    cl,0xa6
   140010b01:	sbb    ch,BYTE PTR [rcx-0x3e]
   140010b04:	add    al,0x16
   140010b06:	push   rdi
   140010b07:	xor    al,0x2b
   140010b09:	jne    0x140010b26
   140010b0b:	mov    edi,0x109080a7
   140010b10:	rex.RXB adc r9b,r15b
   140010b13:	mov    bl,0x28
   140010b15:	hlt    
   140010b16:	(bad)  
   140010b17:	mov    ah,0x62
   140010b19:	rex.XB adc al,0x26
   140010b1c:	sbb    BYTE PTR [rbx],ah
   140010b1e:	xor    BYTE PTR [rax],bl
   140010b20:	mov    dl,0xff
   140010b22:	xor    esi,eax
   140010b24:	mov    fs,WORD PTR fs:[rax]
   140010b27:	gs sbb eax,0x689d0126
   140010b2d:	je     0x140010b3b
   140010b2f:	rex.WB add al,0x26
   140010b32:	shl    BYTE PTR [rcx+0x707c78b4],cl
   140010b38:	(bad)  
   140010b39:	std    
   140010b3a:	jb     0x140010b4c
   140010b3c:	fmul   DWORD PTR [rdi-0x785275e9]
   140010b42:	jle    0x140010b3d
   140010b44:	jnp    0x140010ad4
   140010b46:	pop    rsi
   140010b47:	jp     0x140010b82
   140010b49:	iret   
   140010b4a:	call   QWORD PTR [rsi+0x65edfb7d]
   140010b50:	jae    0x140010b52
   140010b52:	(bad)  
   140010b53:	sbb    BYTE PTR [rcx],ah
   140010b55:	test   BYTE PTR [rax-0x27],bh
   140010b58:	and    cl,bh
   140010b5a:	(bad)  
   140010b5b:	cmp    bh,BYTE PTR [rip+0x10bf1cee]        # 0x150c0284f
   140010b61:	imul   BYTE PTR [rsi+rdx*8+0x2bd757e2]
   140010b68:	rcr    DWORD PTR [rip+0x6f8bcb2b],1        # 0x1af8cd699
   140010b6e:	mov    cl,0xfb
   140010b70:	(bad)  
   140010b71:	jbe    0x140010be2
   140010b73:	fucomi st,st(5)
   140010b75:	in     al,0x7d
   140010b77:	sbb    al,0xa2
   140010b79:	mov    ch,0x16
   140010b7b:	std    
   140010b7c:	gs fwait
   140010b7e:	std    
   140010b7f:	add    edi,DWORD PTR [rbp-0x2eb177a4]
   140010b85:	movsxd eax,DWORD PTR [rdi]
   140010b87:	adc    al,0x94
   140010b89:	(bad)  
   140010b8a:	adc    ah,BYTE PTR [rdx]
   140010b8c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010b8d:	clc    
   140010b8e:	xchg   rsp,rax
   140010b90:	adc    BYTE PTR [rax],cl
   140010b92:	or     eax,0xbae94996
   140010b97:	shl    DWORD PTR [rax],0xb4
   140010b9a:	and    DWORD PTR [rdx+rbx*1+0x34],ecx
   140010b9e:	loop   0x140010bc6
   140010ba0:	push   rdx
   140010ba1:	(bad)  
   140010ba2:	or     BYTE PTR [rbx],al
   140010ba4:	mov    ds,WORD PTR [rbp-0x7bdaec3d]
   140010baa:	push   rsp
   140010bab:	cwde   
   140010bac:	rex.R xchg ebx,eax
   140010bae:	cwde   
   140010baf:	or     BYTE PTR [rcx],ch
   140010bb1:	ins    BYTE PTR es:[rdi],dx
   140010bb2:	add    al,0x2
   140010bb4:	add    esp,0x52a03692
   140010bba:	icebp  
   140010bbb:	(bad)  
   140010bbc:	rex.WX xchg rax,rax
   140010bbe:	ret    0xd5a2
   140010bc1:	mov    WORD PTR [rcx+0x334698e2],cs
   140010bc7:	data16 jb 0x140010b6b
   140010bca:	ret    0x45c5
   140010bcd:	xchg   edi,eax
   140010bce:	mov    ch,0xb8
   140010bd0:	test   BYTE PTR [rcx-0x784303c4],dh
   140010bd6:	jrcxz  0x140010bb3
   140010bd8:	(bad)  
   140010bd9:	imul   esi,DWORD PTR [rcx],0x61
   140010bdc:	lods   al,BYTE PTR ds:[rsi]
   140010bdd:	add    DWORD PTR [rax],edx
   140010bdf:	and    al,BYTE PTR [rip+0xffffffffd49231bd]        # 0x114933da2
   140010be5:	add    eax,0x3b6dffb4
   140010bea:	add    edx,eax
   140010bec:	cmp    bh,ch
   140010bee:	or     DWORD PTR [r9+0xc],0x71
   140010bf3:	(bad)  
   140010bf4:	rex.W pop rdx
   140010bf6:	sbb    dl,BYTE PTR [rcx]
   140010bf8:	jmp    0x140010b80
   140010bfa:	pop    rdi
   140010bfb:	je     0x140010b9b
   140010bfd:	(bad)  
   140010bfe:	jmp    0xfa2e6b16
   140010c03:	test   BYTE PTR [rbx],0x3b
   140010c06:	pop    rsi
   140010c07:	fnstcw WORD PTR [rdi-0x31]
   140010c0a:	int3   
   140010c0b:	retf   0x7344
   140010c0e:	loop   0x140010c2b
   140010c10:	pop    rdi
   140010c11:	adc    ebx,DWORD PTR [rdi-0x6ac07008]
   140010c17:	jl     0x140010bf4
   140010c19:	(bad)  
   140010c1a:	(bad)  
   140010c1b:	xchg   esi,eax
   140010c1c:	jge    0x140010bf9
   140010c1e:	in     al,dx
   140010c1f:	and    eax,0x3a6f0073
   140010c24:	movabs ds:0x37fe5fded416f40e,al
   140010c2d:	rex.XB scas eax,DWORD PTR es:[rdi]
   140010c2f:	pop    rbx
   140010c30:	lods   eax,DWORD PTR ds:[rsi]
   140010c31:	(bad)  
   140010c32:	ret    
   140010c33:	push   rdx
   140010c34:	mov    BYTE PTR [rbp+0x48],bh
   140010c37:	xchg   ecx,eax
   140010c38:	out    dx,eax
   140010c39:	pop    rsi
   140010c3a:	mov    DWORD PTR [rax+0x6c],0x29693d12
   140010c41:	cs jl  0x140010c3d
   140010c44:	shr    edx,1
   140010c46:	mov    bh,0xee
   140010c48:	jle    0x140010c06
   140010c4a:	stc    
   140010c4b:	mov    ah,0x50
   140010c4d:	(bad)  
   140010c4e:	test   eax,0x2cac9ffb
   140010c53:	mov    esp,0x5cf1fb54
   140010c58:	mul    bh
   140010c5a:	jrcxz  0x140010c31
   140010c5c:	ret    0x1399
   140010c5f:	sar    DWORD PTR [rbx-0x52],cl
   140010c62:	mov    WORD PTR [rdi],gs
   140010c64:	frstor [rcx]
   140010c66:	xchg   ebp,eax
   140010c67:	cmc    
   140010c68:	xchg   esi,eax
   140010c69:	(bad)  
   140010c6a:	in     eax,0xca
   140010c6c:	imul   ebx,DWORD PTR [rbx-0x2b],0x7a
   140010c70:	outs   dx,DWORD PTR ds:[rsi]
   140010c71:	adc    al,0xad
   140010c73:	push   rdx
   140010c74:	(bad)  
   140010c75:	xlat   BYTE PTR ds:[rbx]
   140010c76:	xchg   esp,eax
   140010c77:	jnp    0x140010c83
   140010c79:	mov    ah,0x5a
   140010c7b:	cmp    DWORD PTR [rdx],ebp
   140010c7d:	imul   esi,DWORD PTR [rcx],0xffffff87
   140010c80:	test   ah,0xf4
   140010c83:	in     eax,dx
   140010c84:	lahf   
   140010c85:	rex.X mov ebx,0x1efcdb31
   140010c8b:	sbb    al,0x13
   140010c8d:	movsxd ecx,DWORD PTR [rbx-0x7f]
   140010c90:	and    ebx,DWORD PTR [rbp+0x6c]
   140010c93:	in     eax,0x22
   140010c95:	adc    cl,BYTE PTR [rip+0x41b14424]        # 0x181b250bf
   140010c9b:	add    QWORD PTR [r8+0x41],0x2125109c
   140010ca3:	rex.X pop rbx
   140010ca5:	cmp    dh,al
   140010ca7:	(bad)
   140010caa:	push   0x52d711a0
   140010caf:	repnz outs dx,DWORD PTR ds:[rsi]
   140010cb1:	rex.WR (bad) 
   140010cb3:	lods   al,BYTE PTR ds:[rsi]
   140010cb5:	and    bl,dl
   140010cb7:	add    BYTE PTR [rdx+rax*1],dl
   140010cba:	cdq    
   140010cbb:	(bad)  
   140010cbc:	push   rdi
   140010cbd:	sub    BYTE PTR [rbp+0x11890614],0x6
   140010cc4:	and    eax,0x7a86c740
   140010cc9:	stos   DWORD PTR es:[rdi],eax
   140010cca:	mov    DWORD PTR [rax],edx
   140010ccc:	ss (bad) 
   140010cce:	pushf  
   140010ccf:	scas   eax,DWORD PTR es:[rdi]
   140010cd0:	jae    0x140010d3c
   140010cd2:	push   rdx
   140010cd3:	push   rbx
   140010cd4:	mov    ebx,esi
   140010cd6:	hlt    
   140010cd7:	(bad)  
   140010cd8:	(bad)  
   140010cd9:	rex.W adc BYTE PTR [rdx+rax*8+0x68c1a304],sil
   140010ce1:	xchg   ebx,eax
   140010ce2:	retf   0x4605
   140010ce5:	movabs al,ds:0x30801680c67ce885
   140010cee:	or     BYTE PTR [rbx],ah
   140010cf0:	shr    eax,1
   140010cf2:	xchg   esp,eax
   140010cf3:	rcr    DWORD PTR [rax-0x5271248c],0x40
   140010cfa:	rex.XB ror BYTE PTR [r10-0x39f614f7],cl
   140010d01:	mov    BYTE PTR [rip+0x291eaf2f],ah        # 0x1691fbc36
   140010d07:	imul   BYTE PTR [rdx+0x65bb187f]
   140010d0d:	loopne 0x140010cbe
   140010d0f:	(bad)  
   140010d10:	push   rdi
   140010d11:	pop    rbx
   140010d12:	(bad)  
   140010d13:	push   0x4f
   140010d15:	fdiv   st(4),st
   140010d17:	add    DWORD PTR [rbx-0x45],0xfffffff5
   140010d1b:	mov    bh,0xeb
   140010d1d:	sbb    ch,BYTE PTR [rbp-0x27]
   140010d20:	mov    bh,0xcf
   140010d22:	pop    rsi
   140010d23:	mov    ah,0x3
   140010d25:	sub    cl,bh
   140010d27:	mov    bh,bh
   140010d29:	sti    
   140010d2a:	(bad)  
   140010d2b:	or     ebp,DWORD PTR [rdi+0x7833b838]
   140010d31:	jg     0x140010db2
   140010d33:	sar    DWORD PTR [rsi-0x39],1
   140010d36:	imul   ecx,DWORD PTR [rdi],0x5
   140010d39:	(bad)  
   140010d3a:	mov    ch,0xa1
   140010d3c:	nop
   140010d3d:	and    al,0x60
   140010d3f:	cmp    edx,DWORD PTR [rdx-0x1ca0f06c]
   140010d45:	(bad)  
   140010d46:	mov    ch,0x81
   140010d48:	and    al,0x7d
   140010d4a:	xor    DWORD PTR [rax+0x1a],ebp
   140010d4d:	sub    eax,0xc9e0fe3d
   140010d52:	(bad)  
   140010d54:	(bad)  
   140010d55:	data16 jrcxz 0x140010d17
   140010d58:	sti    
   140010d59:	call   0x15ff83775
   140010d5e:	mov    edi,0xf004b8d8
   140010d63:	push   rdx
   140010d64:	mov    bl,0x83
   140010d66:	(bad)  
   140010d67:	ds xor al,0x55
   140010d6a:	sahf   
   140010d6b:	cdq    
   140010d6c:	pop    rcx
   140010d6d:	fnstcw WORD PTR [rdi-0x1f]
   140010d70:	(bad)  
   140010d71:	cmc    
   140010d72:	std    
   140010d73:	in     al,0xab
   140010d75:	out    dx,eax
   140010d76:	xchg   esp,eax
   140010d77:	outs   dx,BYTE PTR ds:[rsi]
   140010d78:	cmc    
   140010d79:	push   rax
   140010d7a:	gs mov esp,0x1de6d6a5
   140010d80:	ins    BYTE PTR es:[rdi],dx
   140010d81:	(bad)  
   140010d82:	add    BYTE PTR [rdx+0x7a],ah
   140010d85:	mov    ecx,DWORD PTR [rsi]
   140010d87:	add    ebx,0x16
   140010d8a:	xchg   esi,eax
   140010d8b:	or     al,0x59
   140010d8d:	pop    rdx
   140010d8e:	stos   BYTE PTR es:[rdi],al
   140010d8f:	lock xchg BYTE PTR [rdi+0x36],dl
   140010d93:	sbb    DWORD PTR [rbx],ebx
   140010d95:	retf   
   140010d96:	xchg   ebx,eax
   140010d97:	xchg   edi,eax
   140010d98:	movabs ds:0x2c49094626102148,eax
   140010da1:	sbb    esi,DWORD PTR [rcx+rbp*4]
   140010da4:	adc    ch,al
   140010da6:	imul   eax,DWORD PTR [rcx+rcx*2+0x11c1a30b],0xffffffa0
   140010dae:	mov    ch,0x40
   140010db0:	imul   eax,DWORD PTR [rbp+0x20],0xffffff8b
   140010db4:	rex.R xchg ecx,eax
   140010db6:	movabs ds:0x5824d347898412de,al
   140010dbf:	movabs ds:0x2240879408083941,al
   140010dc8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010dc9:	shr    BYTE PTR [rax+0x50],0x42
   140010dcd:	(bad)  
   140010dce:	add    BYTE PTR [rcx+rax*4],0x14
   140010dd2:	test   eax,0x8318056
   140010dd7:	and    DWORD PTR [rax+0x8368252],edx
   140010ddd:	rex sub DWORD PTR [rcx+0x53339ad6],ecx
   140010de4:	rex.WRB (bad) 
   140010de6:	js     0x140010e22
   140010de8:	data16 mov cl,0xe1
   140010deb:	sar    BYTE PTR [rdi],1
   140010ded:	fmul   QWORD PTR [rbx-0x52015ada]
   140010df3:	xchg   esi,eax
   140010df4:	rol    DWORD PTR es:[rsi],1
   140010df7:	(bad)  
   140010df8:	or     al,0x9a
   140010dfa:	push   rsp
   140010dfb:	xor    ah,dl
   140010dfd:	ins    DWORD PTR es:[rdi],dx
   140010dfe:	movabs al,ds:0x1080c634e9d99023
   140010e07:	sbb    BYTE PTR [rcx-0x5c61fa5a],dl
   140010e0d:	test   al,0xad
   140010e0f:	push   rsp
   140010e10:	xchg   ecx,eax
   140010e11:	movabs ds:0x5ab53acd6a08ef85,al
   140010e1a:	mov    BYTE PTR [rcx],dl
   140010e1c:	and    dh,BYTE PTR [rcx-0x3841887b]
   140010e22:	jmp    0x140010e21
   140010e24:	hlt    
   140010e25:	loopne 0x140010db8
   140010e27:	loop   0x140010e08
   140010e29:	pop    rax
   140010e2a:	mov    ebx,0x38dff182
   140010e2f:	xor    al,0xb2
   140010e31:	cli    
   140010e32:	push   rdx
   140010e33:	pop    rsi
   140010e34:	xchg   ebx,eax
   140010e35:	sub    eax,0x5edf97b
   140010e3a:	cmp    eax,DWORD PTR [rax-0x20d10b01]
   140010e40:	cmp    edi,DWORD PTR [rdx+0x6dc0f827]
   140010e46:	xchg   DWORD PTR [rdx+0x1f],esi
   140010e49:	sbb    al,0x1b
   140010e4b:	jb     0x140010eac
   140010e4d:	(bad)  
   140010e4e:	cmp    BYTE PTR [rdx],al
   140010e50:	sub    al,0x95
   140010e52:	jle    0x140010ebd
   140010e54:	(bad)  
   140010e55:	(bad)  
   140010e57:	gs (bad) 
   140010e59:	or     ecx,DWORD PTR [r8+0xe355cd3]
   140010e60:	xor    eax,0x3e5e38ad
   140010e65:	jbe    0x140010e1d
   140010e67:	mul    ch
   140010e69:	mov    edi,0x17f6b07f
   140010e6e:	(bad)  
   140010e6f:	sub    al,0x1e
   140010e71:	mov    ecx,0x3dafbee7
   140010e76:	fadd   DWORD PTR [rdx]
   140010e78:	adc    BYTE PTR [rdx-0x44],al
   140010e7b:	call   0x13b930268
   140010e80:	(bad)  
   140010e81:	(bad)  
   140010e82:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010e83:	push   rsi
   140010e84:	sbb    dl,bh
   140010e86:	lea    ebx,[rdi-0x476e07a1]
   140010e8c:	xor    al,0xff
   140010e8e:	(bad)  
   140010e8f:	mov    al,0xfc
   140010e91:	(bad)  
   140010e92:	sahf   
   140010e93:	jmp    0xbdab
   140010e97:	sbb    bl,ah
   140010e99:	ret    
   140010e9a:	jmp    0x10b859a9a
   140010e9f:	sti    
   140010ea0:	pop    rcx
   140010ea1:	pop    rbp
   140010ea2:	xor    BYTE PTR [rsi+rsi*8-0x53f005d5],cl
   140010ea9:	mov    al,0x77
   140010eab:	addr32 cmp ebp,0xffffffd6
   140010eaf:	adc    BYTE PTR [rdi+0x7e6a809f],cl
   140010eb5:	mov    gs,WORD PTR [rbp-0x5d]
   140010eb8:	xchg   edx,eax
   140010eb9:	mov    ebp,0xbde4ddc5
   140010ebe:	(bad)  
   140010ebf:	jl     0x140010e88
   140010ec1:	rex.X adc BYTE PTR [rdx-0x25],spl
   140010ec5:	sbb    cl,BYTE PTR [rdi-0x5a]
   140010ec8:	mov    ch,0xba
   140010eca:	data16 sbb al,0x53
   140010ecd:	rex.WB push r14
   140010ecf:	xor    BYTE PTR [rdx+0xa7d2d85],ah
   140010ed5:	push   rsi
   140010ed6:	cdq    
   140010ed7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010ed8:	mov    ch,0x88
   140010eda:	jnp    0x140010f2b
   140010edc:	lods   al,BYTE PTR ds:[rsi]
   140010edd:	jb     0x140010ec5
   140010edf:	rex.WX sahf 
   140010ee1:	and    al,0x51
   140010ee3:	adc    al,0x4b
   140010ee5:	imul   ebx,DWORD PTR [rdx+rbx*8],0x69
   140010ee9:	cmp    BYTE PTR [rsp+rbx*1],bh
   140010eec:	loopne 0x140010f39
   140010eee:	pandn  mm6,QWORD PTR [rsi+0x46d01248]
   140010ef5:	and    eax,DWORD PTR [rdx+rax*2+0x223f3966]
   140010efc:	(bad)  
   140010efd:	in     al,0xc2
   140010eff:	sbb    BYTE PTR [rax+0x20],al
   140010f02:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010f03:	(bad)  
   140010f04:	pushf  
   140010f05:	mov    DWORD PTR es:[rcx+rdx*4],eax
   140010f09:	loopne 0x140010f63
   140010f0b:	xchg   edx,eax
   140010f0c:	test   ebp,edx
   140010f0e:	cwde   
   140010f0f:	rex.WRXB jg 0x140010ec5
   140010f12:	(bad)  
   140010f13:	jb     0x140010ee0
   140010f15:	(bad)  
   140010f16:	idiv   BYTE PTR [rsp+rdi*4]
   140010f19:	rol    BYTE PTR [rbp+0x28],0x45
   140010f1d:	mov    ebp,0x34dba499
   140010f22:	(bad)  
   140010f23:	rex.XB (bad) 
   140010f25:	(bad)  
   140010f26:	mov    WORD PTR [rcx],fs
   140010f28:	rol    DWORD PTR [rip+0xffffffffd3de764c],cl        # 0x113df857a
   140010f2e:	out    dx,eax
   140010f2f:	push   rdx
   140010f30:	data16 (bad) 
   140010f32:	lock sbb eax,0x65e5b58b
   140010f38:	xchg   BYTE PTR [rdi],cl
   140010f3a:	rex.WRB mov r9b,0x77
   140010f3d:	rex.WRXB (bad) 
   140010f3f:	pop    rsp
   140010f40:	jb     0x140010f60
   140010f42:	pushf  
   140010f43:	sbb    DWORD PTR [rdx],edx
   140010f45:	xchg   ebx,eax
   140010f46:	push   rax
   140010f47:	scas   eax,DWORD PTR es:[rdi]
   140010f48:	jp     0x140010ef6
   140010f4a:	pushf  
   140010f4b:	cmp    DWORD PTR [rax-0x1b],ecx
   140010f4e:	loop   0x140010efe
   140010f50:	rex.WB lahf 
   140010f52:	movabs eax,ds:0x4ef153e7a1beefcf
   140010f5b:	jmp    0x140010f26
   140010f5d:	fistp  QWORD PTR [rcx-0x740d3882]
   140010f63:	mov    ebp,0x9df65b1e
   140010f68:	gs (bad) 
   140010f6a:	enter  0x7c01,0xf2
   140010f6e:	addr32 sti 
   140010f70:	ds lock xchg esi,eax
   140010f73:	fwait
   140010f74:	rex.WXB (bad) 
   140010f76:	fist   WORD PTR [rbx-0x69a4f14d]
   140010f7c:	add    cl,BYTE PTR [rbx]
   140010f7e:	mov    al,0xba
   140010f80:	ss icebp 
   140010f82:	jl     0x140010fe6
   140010f84:	mov    dh,0x68
   140010f86:	scas   eax,DWORD PTR es:[rdi]
   140010f87:	(bad)  
   140010f88:	call   0x1355311c5
   140010f8d:	pushf  
   140010f8e:	rex.W
   140010f8f:	rex.XB xchg r10d,eax
   140010f91:	adc    BYTE PTR [rsi-0x6599e8ef],al
   140010f97:	(bad)  
   140010f99:	movabs ds:0x9f7297c3d9fdad2f,eax
   140010fa2:	jle    0x140010f84
   140010fa4:	ror    ecx,1
   140010fa6:	xchg   ebp,eax
   140010fa7:	hlt    
   140010fa8:	push   rdi
   140010fa9:	(bad)
   140010fac:	movabs ds:0xf45cc5cb7b4f4f0f,eax
   140010fb5:	(bad)  
   140010fb6:	(bad)  
   140010fb7:	addr32 rex.WX retf 
   140010fba:	or     edx,esi
   140010fbc:	lods   eax,DWORD PTR ds:[rsi]
   140010fbd:	(bad)  
   140010fbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   140010fc0:	jg     0x140010f66
   140010fc2:	push   rbp
   140010fc3:	cwde   
   140010fc4:	jp     0x140011011
   140010fc6:	jae    0x140010fa3
   140010fc8:	movsxd esp,DWORD PTR [rbx]
   140010fca:	(bad)  
   140010fcb:	inc    BYTE PTR [rdx]
   140010fcd:	mov    DWORD PTR [rbp-0x1be34f34],edi
   140010fd3:	adc    eax,0xbb1e11de
   140010fd8:	mov    edi,0xa1ec9580
   140010fdd:	mov    edx,0xfd7ed828
   140010fe2:	sbb    ch,BYTE PTR [rbx+0x7b]
   140010fe5:	mov    edi,0x702d4942
   140010fea:	fwait
   140010feb:	mov    ebx,0x3bcd5d8b
   140010ff0:	mov    ecx,0x9aa25938
   140010ff5:	mov    eax,0xe31a83f8
   140010ffa:	cmp    ah,cl
   140010ffc:	push   rbp
   140010ffd:	jmp    0x140011007
   140010fff:	sbb    eax,0xbd213ae2
   140011004:	rcl    DWORD PTR [rdx],0xfd
   140011007:	add    edi,0x85cf9ae5
   14001100d:	test   DWORD PTR [rdx],edi
   14001100f:	mov    DWORD PTR [rsi+0x60],ebp
   140011012:	fist   DWORD PTR [rsi]
   140011014:	xor    esi,0x30
   140011017:	adc    edx,DWORD PTR [rbx+0x1ecbb316]
   14001101d:	rex.XB ret 
   14001101f:	add    DWORD PTR [rdx+0x49],edx
   140011022:	(bad)  
   140011023:	xchg   esi,eax
   140011024:	stos   BYTE PTR es:[rdi],al
   140011025:	pop    rax
   140011026:	xchg   cx,ax
   140011028:	sbb    DWORD PTR [rsi+0xb],0x40c52461
   14001102f:	jae    0x14001100e
   140011031:	test   al,0x61
   140011033:	mov    al,0x54
   140011035:	(bad)  
   140011036:	(bad)
   14001103a:	(bad)  
   14001103b:	rex.W
   14001103c:	rex.R
   14001103d:	rex.RX fisttp QWORD PTR [rbp+0x41210810]
   140011044:	imul   edx,DWORD PTR [rax+rdx*4-0x26ed9617],0x9
   14001104c:	xchg   esi,eax
   14001104d:	adc    cl,bh
   14001104f:	xchg   edx,eax
   140011050:	sub    al,0x56
   140011052:	(bad)  
   140011053:	out    dx,al
   140011054:	(bad)  
   140011055:	pop    rcx
   140011056:	movsxd ebp,DWORD PTR [rdx+0x4d]
   140011059:	mov    al,0xd2
   14001105b:	jb     0x140011065
   14001105d:	retf   0x5a05
   140011060:	int    0x98
   140011062:	cmp    bl,dl
   140011064:	add    al,0xda
   140011066:	movabs al,ds:0x241685d8298f4b4f
   14001106f:	(bad)  
   140011070:	add    al,0x1a
   140011072:	xchg   ecx,eax
   140011073:	xor    DWORD PTR [rbx],eax
   140011075:	fist   WORD PTR [rdi-0x2c]
   140011078:	xchg   edi,eax
   140011079:	sbb    ebp,DWORD PTR [rsi+rdx*8-0x1883c659]
   140011080:	cmp    BYTE PTR [rbx-0x25],ah
   140011083:	cmp    eax,0x4341ab64
   140011088:	iret   
   140011089:	adc    cl,bl
   14001108b:	(bad)  
   14001108c:	xor    eax,0x8a95856b
   140011091:	int    0xdc
   140011093:	test   eax,0x185eacfd
   140011098:	pop    rcx
   140011099:	call   0x174bf57d3
   14001109e:	mov    edx,0xb309f0af
   1400110a3:	rex.WRB jge 0x140011093
   1400110a6:	ja     0x140011107
   1400110a8:	mov    edi,0x6fbcfea3
   1400110ad:	sahf   
   1400110ae:	sub    eax,0xe7b48efb
   1400110b3:	in     eax,0x0
   1400110b5:	mov    esi,0xd77b16ef
   1400110ba:	out    dx,eax
   1400110bb:	(bad)  
   1400110bc:	in     al,0xc8
   1400110be:	out    dx,eax
   1400110bf:	ins    DWORD PTR es:[rdi],dx
   1400110c0:	sub    edi,DWORD PTR [rbx]
   1400110c2:	out    dx,eax
   1400110c3:	(bad)  
   1400110c4:	ins    BYTE PTR es:[rdi],dx
   1400110c5:	add    eax,0xad75849e
   1400110ca:	jmp    0x14ebb0e54
   1400110cf:	loopne 0x14001108c
   1400110d1:	sbb    al,0x41
   1400110d3:	fimul  DWORD PTR [rsi]
   1400110d5:	mov    bh,0xfe
   1400110d7:	movabs ds:0x79be726626084681,eax
   1400110e0:	out    dx,al
   1400110e1:	xor    ecx,DWORD PTR [rdi]
   1400110e3:	push   rsi
   1400110e4:	(bad)
   1400110e9:	jg     0x1400110e4
   1400110eb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400110ec:	(bad)  
   1400110ed:	sahf   
   1400110ee:	pop    rdx
   1400110ef:	add    edx,DWORD PTR [rax]
   1400110f1:	rex.X (bad) 
   1400110f3:	xlat   BYTE PTR ds:[rbx]
   1400110f4:	(bad)  
   1400110f6:	fst    QWORD PTR [rdi-0x250e46d5]
   1400110fc:	stos   BYTE PTR es:[rdi],al
   1400110fd:	mov    eax,0xd5f56270
   140011102:	shl    ebx,cl
   140011104:	cmc    
   140011105:	(bad)  
   140011106:	pop    rsp
   140011107:	mov    ah,0xce
   140011109:	mov    ebp,0xb139ee5b
   14001110e:	sub    eax,0xa1a05fca
   140011113:	xchg   edi,eax
   140011114:	xchg   ecx,eax
   140011115:	xchg   ecx,eax
   140011116:	rex.WXB mov r14,fs
   140011119:	xchg   esi,eax
   14001111a:	ret    0xae0e
   14001111d:	rex.WXB (bad) 
   14001111f:	icebp  
   140011120:	lea    edi,[rbx+0x7a]
   140011123:	sub    DWORD PTR [rip+0xffffffff8243f88a],edx        # 0xc24509b3
   140011129:	fld    st(1)
   14001112b:	sti    
   14001112c:	call   0x18647ad5a
   140011131:	or     edx,ecx
   140011133:	and    al,0x6c
   140011135:	push   rbx
   140011136:	and    ecx,DWORD PTR [rax+rdi*8+0x73d9d987]
   14001113d:	mov    BYTE PTR [rcx+0x71],ah
   140011140:	xor    edx,DWORD PTR [rbp-0x131b3d86]
   140011146:	cmp    al,0x95
   140011148:	test   BYTE PTR [rdx+r8*1+0x7a],r14b
   14001114d:	jae    0x140011165
   14001114f:	cmp    eax,0xd6a78d41
   140011154:	(bad)  
   140011155:	mov    esi,0x796288f4
   14001115a:	rex.WB (bad) 
   14001115c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001115d:	and    DWORD PTR [rsi],esi
   14001115f:	xor    ebp,eax
   140011161:	movabs ds:0xd223df6c21fee762,al
   14001116a:	(bad)  
   14001116b:	xor    r12d,DWORD PTR [rcx+r10*2-0x7bcbb671]
   140011173:	push   rcx
   140011174:	int3   
   140011175:	fcmovb st,st(2)
   140011177:	sub    al,bl
   140011179:	stc    
   14001117a:	push   rbp
   14001117b:	mov    esi,0xe1c790e7
   140011180:	ins    DWORD PTR es:[rdi],dx
   140011181:	cmp    DWORD PTR [rax+0x14],ecx
   140011184:	push   rdx
   140011185:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011186:	sub    al,0xca
   140011188:	push   0x4c0a9083
   14001118d:	retf   0xd3df
   140011190:	and    ah,BYTE PTR [rdx+0x26]
   140011193:	xor    BYTE PTR [rsi-0x1fbdf139],ah
   140011199:	cmp    DWORD PTR [rdx+0x3c846e5],ecx
   14001119f:	rex.WRXB xor rax,0xffffffff935c6478
   1400111a5:	jmp    0x1400111d2
   1400111a7:	movabs al,ds:0xd33ec54e3346876c
   1400111b0:	(bad)  
   1400111b1:	add    eax,0x60a74235
   1400111b6:	(bad)  
   1400111b7:	sbb    dh,BYTE PTR [rcx+rsi*1+0x240c8c88]
   1400111be:	sbb    ch,BYTE PTR [rbx+rcx*2-0x20]
   1400111c2:	jnp    0x14001114e
   1400111c4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400111c5:	sub    esi,DWORD PTR [rbp-0x56]
   1400111c8:	lods   eax,DWORD PTR ds:[rsi]
   1400111c9:	sbb    DWORD PTR [rsi-0x22659c41],ebp
   1400111cf:	mov    ebx,0xb15af21c
   1400111d4:	xchg   esi,eax
   1400111d5:	pop    rsp
   1400111d6:	movabs al,ds:0xd12b98a551a85496
   1400111df:	pop    rax
   1400111e0:	sub    eax,0x8b74ea73
   1400111e5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400111e6:	rol    DWORD PTR [rdi+0x67],cl
   1400111e9:	retf   0xe0ea
   1400111ec:	(bad)  
   1400111ed:	xchg   esi,eax
   1400111ee:	mov    edx,0xdaf03f3f
   1400111f4:	sahf   
   1400111f5:	xchg   DWORD PTR [rsi-0x32],esi
   1400111f8:	cmp    ecx,esi
   1400111fa:	sti    
   1400111fb:	outs   dx,DWORD PTR ds:[rsi]
   1400111fc:	(bad)  
   1400111fd:	ficom  DWORD PTR [rdx]
   1400111ff:	or     edi,DWORD PTR [rdi+0x1d39ed0b]
   140011205:	rol    BYTE PTR [rdi],0xde
   140011208:	in     al,0xbf
   14001120a:	in     eax,dx
   14001120b:	movsxd edi,edi
   14001120d:	(bad)  
   14001120e:	hlt    
   14001120f:	(bad)  
   140011210:	jl     0x140011259
   140011212:	(bad)  
   140011213:	pop    rdx
   140011214:	mov    esi,0x8bfe234a
   140011219:	retf   0xc5ce
   14001121c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001121d:	call   0xc1977101
   140011222:	mov    edi,0x41217bfb
   140011227:	sub    DWORD PTR [rax-0x80],ecx
   14001122a:	mov    di,WORD PTR [rax]
   14001122d:	ins    BYTE PTR es:[rdi],dx
   14001122e:	xor    bh,BYTE PTR [rbx-0x1406c72c]
   140011234:	lahf   
   140011235:	pop    rcx
   140011236:	sti    
   140011237:	xor    eax,0xdfd5fe46
   14001123c:	jle    0x140011222
   14001123e:	idiv   edi
   140011240:	xor    BYTE PTR [rdx],dl
   140011242:	rex.X
   140011243:	rex.R fstp QWORD PTR [rbx-0x1]
   140011247:	rcl    DWORD PTR [rbx],cl
   140011249:	adc    eax,ebp
   14001124b:	adc    ecx,DWORD PTR [rdi-0x53]
   14001124e:	sbb    al,0x59
   140011250:	pop    rdx
   140011251:	mov    bl,bh
   140011253:	mov    ebx,0x247fc72a
   140011258:	fdivp  st(1),st
   14001125a:	clc    
   14001125b:	jbe    0x1400112d8
   14001125d:	push   0xffffffffd487e51c
   140011262:	(bad)  
   140011263:	sub    eax,0x34b4d55a
   140011268:	(bad)  
   140011269:	xor    BYTE PTR [rdi+rcx*1+0x1c],ch
   14001126d:	ficomp WORD PTR [rdi]
   14001126f:	cld    
   140011270:	sub    ebp,esi
   140011272:	cli    
   140011273:	rex.X sbb eax,0xdc0c07e9
   140011279:	mov    esi,0x377c44c0
   14001127e:	add    eax,0x2e52c42b
   140011283:	jno    0x140011261
   140011285:	(bad)  
   140011286:	mov    bl,0x1c
   140011288:	(bad)  
   140011289:	cmc    
   14001128a:	fmulp  st(0),st
   14001128c:	sahf   
   14001128d:	fadd   QWORD PTR [rcx+0x72]
   140011290:	movabs ds:0x6ed9a1a612fd5ac4,al
   140011299:	mov    ebp,0x32283f1e
   14001129e:	movsxd edi,DWORD PTR [rsi-0x7683953e]
   1400112a4:	mov    eax,0xc2c683b6
   1400112a9:	(bad)  
   1400112aa:	mov    cl,BYTE PTR [rsi+0x263ca58d]
   1400112b0:	sbb    bh,BYTE PTR [rsi]
   1400112b2:	lahf   
   1400112b3:	mov    ebp,0x498f5318
   1400112b8:	fwait
   1400112b9:	adc    BYTE PTR [rsp+rax*8+0x25a41df2],0xf1
   1400112c1:	add    dl,BYTE PTR [rdi]
   1400112c3:	fbstp  TBYTE PTR [rdi+0x9]
   1400112c6:	jmp    0x1400112e9
   1400112c8:	xchg   ebx,eax
   1400112c9:	adc    ebp,DWORD PTR [rbx]
   1400112cb:	sbb    al,0x29
   1400112cd:	sub    al,0xf1
   1400112cf:	ret    
   1400112d0:	mov    bh,0x28
   1400112d2:	rex.WX jbe 0x1400112f3
   1400112d5:	retf   
   1400112d6:	pop    rax
   1400112d7:	call   0x1b64ef312
   1400112dc:	(bad)  
   1400112dd:	test   eax,ebp
   1400112df:	push   rax
   1400112e0:	ja     0x14001134b
   1400112e2:	test   QWORD PTR [rcx+rax*1],rdi
   1400112e6:	or     BYTE PTR [rbp+0x6a5204b4],al
   1400112ec:	cs iret 
   1400112ee:	(bad)  
   1400112ef:	jl     0x1400112da
   1400112f1:	mov    DWORD PTR [rsi],eax
   1400112f3:	shr    DWORD PTR [rbx-0x6e],cl
   1400112f6:	rex.X pop rdi
   1400112f8:	sahf   
   1400112f9:	fsubr  DWORD PTR [rax]
   1400112fb:	ret    0xf530
   1400112fe:	(bad)  
   1400112ff:	sbb    eax,0x553a00d
   140011304:	xor    BYTE PTR [rbp+rdx*8-0x3f],ah
   140011308:	in     al,dx
   140011309:	mov    ebx,0xa58eeb74
   14001130e:	or     BYTE PTR [rdx],al
   140011310:	leave  
   140011311:	cld    
   140011312:	js     0x1400112a9
   140011314:	jp     0x1400112ca
   140011316:	rex iret 
   140011318:	push   0xffffffffdedd5793
   14001131d:	fs and al,0xef
   140011320:	mov    al,0x12
   140011322:	sahf   
   140011323:	mov    r8b,BYTE PTR [rdx]
   140011326:	(bad)  
   140011327:	sbb    BYTE PTR [rax-0x4d],dl
   14001132a:	add    eax,0x2e2e75d8
   14001132f:	lahf   
   140011330:	gs icebp 
   140011332:	rex.X cdq 
   140011334:	fimul  DWORD PTR [rcx+0xb964c37]
   14001133a:	std    
   14001133b:	lahf   
   14001133c:	fdiv   QWORD PTR [rcx-0x5c]
   14001133f:	clc    
   140011340:	(bad)  
   140011341:	(bad)  
   140011342:	cmp    eax,0xf7ff2edb
   140011347:	cmp    eax,0xd17356de
   14001134c:	ja     0x1400112e7
   14001134e:	cmp    eax,0xfcf803ab
   140011353:	(bad)  
   140011354:	idiv   bh
   140011356:	lock fld TBYTE PTR [rdi+0x29]
   14001135a:	(bad)  
   14001135b:	mov    ecx,0x2f83a4a5
   140011360:	pop    rdi
   140011361:	and    al,0xf0
   140011363:	pop    rcx
   140011364:	(bad)  
   140011365:	clc    
   140011366:	(bad)  
   140011367:	loopne 0x14001136c
   140011369:	mov    ah,0xc1
   14001136b:	(bad)  
   14001136c:	xlat   BYTE PTR ds:[rbx]
   14001136d:	cdq    
   14001136e:	adc    DWORD PTR [rax],0x5a8880a9
   140011374:	addr32 add al,0x6
   140011377:	test   al,0x35
   140011379:	rex.WB movabs ds:0x5f47ffdeab9c4f3a,al
   140011383:	or     edi,edi
   140011385:	fld    TBYTE PTR [rdi+0x7c]
   140011388:	outs   dx,BYTE PTR ds:[rsi]
   140011389:	out    0xfe,al
   14001138b:	mov    ecx,DWORD PTR [rbx+0x2b6bb39a]
   140011391:	loop   0x140011355
   140011393:	stc    
   140011394:	retf   0x89c8
   140011397:	xchg   ebx,eax
   140011398:	mov    ebp,edi
   14001139a:	(bad)  
   14001139b:	jb     0x140011410
   14001139d:	(bad)  
   14001139e:	stos   BYTE PTR es:[rdi],al
   14001139f:	or     eax,0xf58763d
   1400113a4:	sahf   
   1400113a5:	and    bh,ah
   1400113a7:	sub    DWORD PTR [rdi+0x39],0x34
   1400113ab:	xchg   edx,eax
   1400113ac:	nop
   1400113ad:	(bad)  
   1400113ae:	push   0xffffffffffffff85
   1400113b0:	xor    BYTE PTR [rsi],dl
   1400113b2:	test   al,0xa8
   1400113b4:	(bad)  
   1400113b5:	sub    eax,0xea142997
   1400113ba:	mov    esp,0x91987721
   1400113bf:	sub    esi,DWORD PTR [rdi-0x10]
   1400113c2:	(bad)  
   1400113c3:	je     0x140011350
   1400113c5:	(bad)
   1400113c8:	jae    0x14001137b
   1400113ca:	icebp  
   1400113cb:	or     BYTE PTR [rbx],ah
   1400113cd:	jle    0x14001135d
   1400113cf:	popf   
   1400113d0:	std    
   1400113d1:	movabs ds:0xc9a2987b61972c94,eax
   1400113da:	xor    DWORD PTR [rsi],0xd4c6a2c4
   1400113e0:	retf   0x94d3
   1400113e3:	popf   
   1400113e4:	push   rcx
   1400113e5:	div    ch
   1400113e7:	fmul   QWORD PTR [rdx-0x58]
   1400113ea:	sub    cl,BYTE PTR [rdi+rbp*4+0x3eae631e]
   1400113f1:	sub    rdx,QWORD PTR [r10+0x41dee4dc]
   1400113f8:	(bad)  
   1400113f9:	sbb    ah,BYTE PTR [rsi+0x17d02ce9]
   1400113ff:	or     al,0xe3
   140011401:	(bad)  
   140011402:	scas   eax,DWORD PTR es:[rdi]
   140011403:	fs mov cl,0x9e
   140011406:	push   rax
   140011407:	imul   eax,DWORD PTR [rbp-0x33d5a874],0x756b3437
   140011411:	xchg   DWORD PTR [rbx],esi
   140011413:	mov    ecx,DWORD PTR [rcx]
   140011415:	sub    eax,0x503bd0e9
   14001141a:	rex.R
   14001141b:	rex.WXB mov rbx,r10
   14001141e:	(bad)  
   14001141f:	cmp    bh,bh
   140011421:	cli    
   140011422:	xchg   BYTE PTR [rax-0x77f4f8e5],bl
   140011428:	(bad)
   14001142c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001142d:	inc    dh
   14001142f:	or     dh,0xa2
   140011432:	cmp    eax,0xa4edd69
   140011437:	rex.RB (bad) 
   140011439:	je     0x140011486
   14001143b:	adc    DWORD PTR [rax],0x8264482
   140011441:	add    edi,ebx
   140011443:	cmp    dl,BYTE PTR [rbx]
   140011445:	icebp  
   140011446:	int    0xb3
   140011448:	sub    eax,0x77a2896a
   14001144d:	movabs al,ds:0x306329471311a548
   140011456:	es (bad) 
   140011458:	sbb    cl,BYTE PTR [rsi+rdx*4+0x19]
   14001145c:	push   0x13da43
   140011461:	nop
   140011462:	push   0xffffffffc4e8108c
   140011467:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011468:	rex.WR and BYTE PTR [rax-0xcf69578],r14b
   14001146f:	push   rbx
   140011470:	imul   edi,DWORD PTR [rax-0x90e502],0xfffffffe
   140011477:	nop
   140011478:	mov    esi,0x9a25447c
   14001147d:	lods   al,BYTE PTR ds:[rsi]
   14001147f:	(bad)  
   140011480:	xor    ebx,DWORD PTR [rbx-0x35]
   140011483:	and    ecx,DWORD PTR [rdx-0x7a]
   140011486:	fcomp  DWORD PTR [rip+0x649cc567]        # 0x1a49dd9f3
   14001148c:	mov    esi,0xc9e964da
   140011491:	sbb    ecx,DWORD PTR [rax]
   140011493:	rex.WRXB fbstp TBYTE PTR [r10+r13*2-0x31]
   140011498:	loope  0x14001143b
   14001149a:	(bad)  
   14001149b:	ins    BYTE PTR es:[rdi],dx
   14001149c:	(bad)  
   14001149d:	mov    edi,esi
   14001149f:	push   rdi
   1400114a0:	and    ebx,DWORD PTR [rdi+0x58]
   1400114a3:	cld    
   1400114a4:	scas   eax,DWORD PTR es:[rdi]
   1400114a5:	scas   eax,DWORD PTR es:[rdi]
   1400114a6:	sbb    bl,bl
   1400114a8:	stos   BYTE PTR es:[rdi],al
   1400114a9:	sbb    BYTE PTR [rdi+rdx*4-0x68],bh
   1400114ad:	jp     0x140011455
   1400114af:	(bad)  
   1400114b0:	jle    0x1400114ab
   1400114b2:	rex.RXB or r11d,r15d
   1400114b5:	repz out dx,eax
   1400114b7:	fistp  QWORD PTR [rsi]
   1400114b9:	clc    
   1400114ba:	sbb    DWORD PTR [rip+0xffffffffc1e2fda5],esp        # 0x101e41265
   1400114c0:	(bad)  
   1400114c1:	sahf   
   1400114c2:	add    esp,edi
   1400114c4:	mov    dl,0xeb
   1400114c6:	mov    ebx,0xba2fc0c
   1400114cb:	cld    
   1400114cc:	rex.X ins DWORD PTR es:[rdi],dx
   1400114ce:	add    eax,DWORD PTR fs:[rdx-0x7e]
   1400114d2:	out    dx,eax
   1400114d3:	and    ebx,DWORD PTR [rbp+0x3592e180]
   1400114d9:	jbe    0x1400114c2
   1400114db:	cmc    
   1400114dc:	loop   0x1400114e1
   1400114de:	(bad)  
   1400114e0:	mov    ebx,0xadfd18df
   1400114e5:	(bad)  
   1400114e6:	stc    
   1400114e7:	enter  0x35a5,0xe7
   1400114eb:	adc    eax,0x34b99c37
   1400114f0:	std    
   1400114f1:	rex.WXB leave 
   1400114f3:	sahf   
   1400114f4:	xchg   ebx,eax
   1400114f5:	(bad)  
   1400114f6:	pop    rsi
   1400114f7:	fbstp  TBYTE PTR [rbx-0x9]
   1400114fa:	fnstenv ss:[rbx-0x62]
   1400114fe:	rcl    BYTE PTR [rbx+0x38],0x96
   140011502:	rex.XB adc al,0x87
   140011505:	push   rsp
   140011506:	ret    0x6215
   140011509:	(bad)  
   14001150a:	or     BYTE PTR [rcx+0x23],ch
   14001150d:	in     eax,dx
   14001150e:	cwde   
   14001150f:	shr    BYTE PTR [rbx-0x15d51830],0x62
   140011516:	adc    eax,0xe95a87cf
   14001151b:	and    cl,BYTE PTR [rdi]
   14001151d:	xchg   edi,esi
   14001151f:	shl    BYTE PTR [rbx],cl
   140011521:	xor    eax,0xa765d2bd
   140011526:	(bad)  
   140011527:	int3   
   140011528:	jbe    0x140011599
   14001152a:	adc    al,0x9d
   14001152c:	(bad)  
   14001152d:	int3   
   14001152e:	xor    eax,0x8b7488a7
   140011533:	stc    
   140011534:	jo     0x1400114c4
   140011536:	sub    BYTE PTR [rcx+0x28],cl
   140011539:	fld    DWORD PTR [rbx]
   14001153b:	hlt    
   14001153c:	cli    
   14001153d:	add    eax,DWORD PTR [rsp+rdx*8+0x534e6c58]
   140011544:	or     DWORD PTR [rbx],ebx
   140011546:	sub    al,0x84
   140011548:	and    DWORD PTR [rdi-0x5d],esp
   14001154b:	jae    0x1400114e9
   14001154d:	(bad)  
   14001154e:	iret   
   14001154f:	(bad)  
   140011550:	push   rsp
   140011551:	mov    edi,DWORD PTR [rsi+0x77]
   140011554:	cwde   
   140011555:	mov    dl,0x5f
   140011557:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011558:	in     al,0x25
   14001155a:	adc    al,0xb
   14001155c:	adc    eax,0xd9c7bd0a
   140011561:	(bad)  
   140011562:	pop    rax
   140011563:	jrcxz  0x140011582
   140011565:	mov    ebx,0xc0787077
   14001156a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001156b:	adc    bl,BYTE PTR [rbx]
   14001156d:	(bad)  
   14001156e:	addr32 sbb esp,esp
   140011571:	jp     0x140011566
   140011573:	(bad)  
   140011574:	lea    edx,[rax-0x6e7b1a63]
   14001157a:	movabs ds:0x5fd6542a40a7b4a,al
   140011583:	rex.WX retf 0xf2b4
   140011587:	rex sti 
   140011589:	mov    ebp,0xb203534c
   14001158e:	(bad)  
   14001158f:	add    BYTE PTR [rdx],0xa4
   140011592:	rex or ebx,eax
   140011595:	push   rsi
   140011596:	mov    dl,0x58
   140011598:	stos   BYTE PTR es:[rdi],al
   140011599:	xor    eax,0x40885b99
   14001159e:	sub    DWORD PTR [rbp+rbp*2+0x39d74da1],esp
   1400115a5:	add    eax,0xad65874c
   1400115aa:	pop    rdi
   1400115ab:	mov    ?,ebp
   1400115ad:	push   rbx
   1400115ae:	pushf  
   1400115af:	cmp    al,BYTE PTR [rcx-0x49a72bd8]
   1400115b5:	movabs ds:0xa5e2e63669639fdc,al
   1400115be:	sbb    al,BYTE PTR [rbp-0x5180b2af]
   1400115c4:	rex.W (bad) 
   1400115c6:	int    0x90
   1400115c8:	mov    edi,0x10b52184
   1400115ce:	repnz out dx,al
   1400115d0:	or     BYTE PTR [rip+0x5e8de04f],ah        # 0x19e8ef625
   1400115d6:	rex.R or al,0x9f
   1400115d9:	in     eax,dx
   1400115da:	lahf   
   1400115db:	mov    edi,0xd2e7be20
   1400115e0:	adc    eax,ebp
   1400115e2:	movabs ds:0x73f8bf43f97e5cc5,eax
   1400115eb:	adc    ebx,DWORD PTR [rdi+0x6f6fe8ff]
   1400115f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400115f2:	add    al,0xdf
   1400115f4:	add    eax,0xf0074d76
   1400115f9:	mov    esi,0x7ffb3957
   1400115fe:	cmc    
   1400115ff:	rex.XB movabs ds:0x23297827956df05f,eax
   140011609:	(bad)  
   14001160a:	pop    rbp
   14001160b:	movabs al,ds:0x2006b6a8050bbeef
   140011614:	shr    edi,cl
   140011616:	(bad)  
   140011617:	jge    0x1400115d6
   140011619:	mov    dh,0xc3
   14001161b:	mov    al,0x15
   14001161d:	clc    
   14001161e:	cmp    DWORD PTR [rdi+rbp*1+0x10],ebp
   140011622:	mov    ebx,0xaf4dd4fb
   140011627:	sbb    eax,0xfdc0fe99
   14001162c:	out    0xa7,eax
   14001162e:	fbstp  TBYTE PTR [rbx-0x28b43508]
   140011634:	mov    edx,ecx
   140011636:	rex.RXB xchg r13d,eax
   140011638:	and    eax,0x41c258ea
   14001163d:	(bad)  
   14001163e:	test   al,0x87
   140011640:	imul   edx,DWORD PTR [rbx+riz*4+0x65],0xffffff8c
   140011645:	imul   eax,DWORD PTR [rcx],0x516a9611
   14001164b:	or     bl,BYTE PTR [rdx+0x14]
   14001164e:	sbb    al,0x81
   140011650:	add    DWORD PTR [rdx+riz*2+0x18],0xffffffe7
   140011655:	or     al,0x53
   140011657:	icebp  
   140011658:	add    eax,0x514da506
   14001165d:	rex.WB jp 0x14001168c
   140011660:	(bad)  
   140011661:	rex.WXB (bad) 
   140011663:	int3   
   140011664:	(bad)  
   140011665:	pop    cx
   140011667:	push   0x9a1602d
   14001166c:	cmc    
   14001166d:	sub    bh,BYTE PTR [rdx]
   14001166f:	scas   al,BYTE PTR es:[rdi]
   140011670:	(bad)  
   140011671:	rex.WB
   140011672:	rex.XB (bad) 
   140011674:	sub    dl,cl
   140011676:	movabs ds:0x5867352c33466806,eax
   14001167f:	xor    eax,0x89b68a82
   140011684:	jno    0x1400116af
   140011686:	pop    rdx
   140011687:	add    eax,0x1cb749a4
   14001168c:	mov    esp,DWORD PTR [rip+0x48967aea]        # 0x18897917c
   140011692:	rex.R xor al,0x43
   140011695:	rex.XB rcr DWORD PTR [r14],1
   140011698:	movabs ds:0x49e9d9e74167e9c7,al
   1400116a1:	sahf   
   1400116a2:	cwde   
   1400116a3:	mov    edx,DWORD PTR [rax-0x7]
   1400116a6:	add    BYTE PTR [rdi+0x54],bl
   1400116a9:	enter  0x3107,0xe3
   1400116ad:	rex.WXB (bad) 
   1400116af:	(bad)  
   1400116b0:	iret   
   1400116b1:	movabs ds:0x2ced250a12c2ae0,al
   1400116ba:	mov    ebp,0x4a090a40
   1400116bf:	and    ah,BYTE PTR [rsp+rbp*8-0x59bd001c]
   1400116c6:	rex.WRX
   1400116c7:	rex sub DWORD PTR [rcx+0x35624163],ecx
   1400116ce:	jns    0x140011744
   1400116d0:	cmp    al,cl
   1400116d2:	push   rcx
   1400116d3:	cs jne 0x140011669
   1400116d6:	cmp    DWORD PTR [rax],eax
   1400116d8:	ins    DWORD PTR es:[rdi],dx
   1400116d9:	adc    BYTE PTR [rdx],dl
   1400116db:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400116dc:	adc    bl,al
   1400116de:	xchg   esi,eax
   1400116df:	rex.X sub DWORD PTR [rcx-0x51adfb4e],ecx
   1400116e6:	pop    rdi
   1400116e7:	setae  BYTE PTR [rbp+0xf]
   1400116eb:	xchg   ecx,eax
   1400116ec:	mov    cl,0xa
   1400116ee:	movsxd ecx,DWORD PTR [rbp*4+0x41484128]
   1400116f5:	outs   dx,DWORD PTR ds:[rsi]
   1400116f6:	fldenv [rdi+0x75]
   1400116f9:	(bad)  
   1400116fa:	out    0xf4,al
   1400116fc:	or     DWORD PTR [rbx+0x65030fd7],eax
   140011702:	(bad)
   140011705:	and    BYTE PTR [rdi+0x2c],0xac
   140011709:	jp     0x14001174a
   14001170b:	rcl    DWORD PTR [rip+0xffffffffd1f76b81],cl        # 0x111f88292
   140011711:	out    0x97,eax
   140011713:	sub    ebp,esp
   140011715:	movabs eax,ds:0xe703a9aaaa8cf87c
   14001171e:	(bad)  
   14001171f:	pandn  mm3,QWORD PTR [rdx-0x63]
   140011723:	in     eax,dx
   140011724:	mov    bl,0xdf
   140011726:	idiv   bh
   140011728:	jl     0x1400117a2
   14001172a:	icebp  
   14001172b:	jmp    0x1400117ac
   14001172d:	repnz mov ebx,0xcef22ff3
   140011733:	fnstenv [rdx-0x6aa26c91]
   140011739:	add    cl,BYTE PTR [rsi+rsi*8+0x6c7f8ea2]
   140011740:	iret   
   140011741:	xchg   edi,eax
   140011742:	or     bh,BYTE PTR [rsi-0xf54e90d]
   140011748:	(bad)  
   140011749:	add    eax,0xe80336fe
   14001174e:	pop    rdx
   14001174f:	rex.WRXB
   140011750:	mov    si,0x368
   140011754:	cmp    ebp,eax
   140011756:	rex.WX add rbx,rdx
   140011759:	mov    edi,0x8d75b32b
   14001175e:	sub    BYTE PTR [rdx-0x6b],0xb8
   140011762:	mov    dh,0xc4
   140011764:	out    0x16,eax
   140011766:	xor    al,0x7f
   140011768:	(bad)  
   140011769:	or     al,0xa0
   14001176b:	test   BYTE PTR [rdi],0x20
   14001176e:	rex.R
   14001176f:	and    r13,QWORD PTR [rdx+rdx*8-0x12ab0acc]
   140011777:	rex.WRX xor al,0x42
   14001177a:	sbb    cl,BYTE PTR [rdx-0x42]
   14001177d:	rex.XB ror DWORD PTR [r9],0xd2
   140011781:	pop    rdi
   140011782:	(bad)  
   140011783:	or     DWORD PTR [rdx],esp
   140011785:	jmp    0x1400117ce
   140011787:	jo     0x140011715
   140011789:	mov    BYTE PTR [rdx],0x1c
   14001178c:	and    edx,DWORD PTR [rax]
   14001178e:	ret    0x8460
   140011791:	rex.X sbb ecx,DWORD PTR [rcx-0x71]
   140011795:	xchg   ebp,eax
   140011796:	movabs ds:0xf049256c0238d964,eax
   14001179f:	call   0xd394ce15
   1400117a4:	ss adc ebx,ecx
   1400117a7:	push   rsp
   1400117a8:	and    cl,BYTE PTR [rbp-0x32]
   1400117ab:	fld    QWORD PTR [rcx+0x1a962965]
   1400117b1:	retf   
   1400117b2:	sub    al,0xb4
   1400117b4:	xchg   esi,eax
   1400117b5:	xor    BYTE PTR [rdx],bh
   1400117b7:	es (bad) 
   1400117b9:	and    eax,0x36c07603
   1400117be:	outs   dx,DWORD PTR ds:[rsi]
   1400117bf:	cmp    edx,DWORD PTR [rsi+0x4096a5ea]
   1400117c5:	rex.WRX or rax,0xffffffffcbd833b3
   1400117cb:	leave  
   1400117cc:	cmp    QWORD PTR [rdx+r12*1-0x8],0x709787bd
   1400117d5:	xchg   dl,cl
   1400117d7:	(bad)  
   1400117d8:	push   rdi
   1400117d9:	(bad)  
   1400117da:	nop
   1400117db:	ret    0x3730
   1400117de:	outs   dx,DWORD PTR ds:[rsi]
   1400117df:	mov    eax,0x83e0bb75
   1400117e4:	xlat   BYTE PTR ds:[rbx]
   1400117e5:	rex.XB
   1400117e6:	rex.WRX jns 0x140011821
   1400117e9:	ret    0x4e23
   1400117ec:	xchg   edx,eax
   1400117ed:	xor    al,0x13
   1400117ef:	retf   0xbf58
   1400117f2:	xor    DWORD PTR [rcx+0x65],ebp
   1400117f5:	rex xchg ebx,eax
   1400117f7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400117f8:	add    al,0x9
   1400117fa:	mov    DWORD PTR [rdx-0x7c9d0b20],esi
   140011800:	jnp    0x1400117a0
   140011802:	pop    rsi
   140011803:	jrcxz  0x1400117ce
   140011805:	rex.WB sub BYTE PTR [r11+rax*1],dl
   140011809:	pop    rsp
   14001180a:	xlat   BYTE PTR ds:[rbx]
   14001180b:	shl    DWORD PTR [rbx+0x1d],0x44
   14001180f:	xchg   edx,eax
   140011810:	and    BYTE PTR [rdx+rbp*4+0x19],cl
   140011814:	test   BYTE PTR [rbp+0x31a5b088],cl
   14001181a:	sbb    BYTE PTR [rdi+rax*8+0x46],bl
   14001181e:	pop    rax
   14001181f:	xchg   edx,eax
   140011820:	push   rsi
   140011821:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011822:	or     DWORD PTR [rbx-0x6d],eax
   140011825:	push   rsi
   140011826:	sbb    eax,0x18c05d32
   14001182b:	or     esi,0xffffff9a
   14001182e:	mov    bh,BYTE PTR [rbx+rbx*2]
   140011831:	loope  0x1400117ec
   140011833:	mov    bh,cl
   140011835:	retf   
   140011836:	imul   edx,DWORD PTR [rdx+rbx*4+0x4b],0xffffffbc
   14001183b:	out    dx,eax
   14001183c:	(bad)  
   14001183d:	adc    ah,BYTE PTR [rdx+0x336249e2]
   140011843:	leave  
   140011844:	jo     0x1400118c2
   140011846:	mov    dl,bl
   140011848:	shr    BYTE PTR [rsi+0x2e],cl
   14001184b:	lods   al,BYTE PTR ds:[rsi]
   14001184c:	xor    eax,0x8649ae58
   140011851:	scas   eax,DWORD PTR es:[rdi]
   140011852:	pop    rbx
   140011853:	repnz movs BYTE PTR es:[rdi],BYTE PTR fs:[rsi]
   140011856:	rex.WRB rcr QWORD PTR [r14+0x60],cl
   14001185a:	push   0xffffffff91f27248
   14001185f:	sbb    BYTE PTR [rbx-0x1e],ch
   140011862:	mov    dh,0x47
   140011864:	idiv   BYTE PTR [rsi+riz*2-0x10896810]
   14001186b:	lock out dx,eax
   14001186d:	jle    0x140011827
   14001186f:	iret   
   140011870:	lea    edi,[rsi]
   140011872:	mov    ecx,0x118b67b3
   140011877:	jl     0x140011880
   140011879:	ficom  DWORD PTR [rbp+0xc]
   14001187c:	loopne 0x1400118b5
   14001187e:	(bad)  
   14001187f:	push   rsp
   140011880:	(bad)  
   140011881:	loopne 0x14001182e
   140011883:	(bad)  
   140011885:	jg     0x140011861
   140011887:	(bad)  
   140011888:	(bad)  
   140011889:	movsxd esi,DWORD PTR [rsi-0x10]
   14001188c:	fdivr  st(6),st
   14001188e:	mov    eax,fs
   140011890:	push   rdi
   140011891:	pop    rbp
   140011892:	mov    bh,BYTE PTR [rdi]
   140011894:	sbb    eax,ecx
   140011896:	fistp  WORD PTR [rip+0xd3b45e9]        # 0x14d3c5e85
   14001189c:	call   0xf949274b
   1400118a1:	mov    esi,0xf08d3b5e
   1400118a6:	add    esp,DWORD PTR [rax+rdx*2-0x1e]
   1400118aa:	nop
   1400118ab:	addr32 js 0x1400118c5
   1400118ae:	retf   
   1400118af:	cmp    al,0x7d
   1400118b1:	and    WORD PTR [rdi+0x1b2c4865],0x1208
   1400118ba:	je     0x140011858
   1400118bc:	movabs al,ds:0xa78796f22db5c18d
   1400118c5:	and    al,0x16
   1400118c7:	and    BYTE PTR [rax+rbx*1],dh
   1400118ca:	adc    edx,DWORD PTR [rbx-0x498d934d]
   1400118d0:	(bad)  
   1400118d1:	rcr    DWORD PTR [rdx-0x659776c8],1
   1400118d7:	push   rsp
   1400118d8:	cmp    al,0xeb
   1400118da:	mov    cl,0x3c
   1400118dc:	jl     0x140011883
   1400118de:	mov    al,0x85
   1400118e0:	(bad)  
   1400118e1:	xchg   ecx,eax
   1400118e2:	(bad)  
   1400118e3:	and    al,0x31
   1400118e5:	push   rsp
   1400118e6:	rex.XB
   1400118e7:	rex.WRB sub rax,0x5499a35a
   1400118ed:	mov    DWORD PTR [rbx+rcx*2-0x673c2227],esi
   1400118f4:	mov    edi,0xa8f49c8b
   1400118f9:	(bad)  
   1400118fa:	sub    edx,DWORD PTR [rsp+rbp*1]
   1400118fd:	(bad)  
   1400118fe:	jle    0x1400118af
   140011900:	lahf   
   140011901:	jp     0x1400118bf
   140011903:	mov    dh,BYTE PTR [rdx]
   140011905:	sub    eax,0x451cdd7a
   14001190a:	add    BYTE PTR [ebx+0x15],bl
   14001190e:	mov    DWORD PTR [rcx-0x1dfe35d8],ecx
   140011914:	(bad)  
   140011915:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011916:	in     al,dx
   140011917:	fcomp  st(4)
   140011919:	cmp    ebx,ecx
   14001191b:	shr    ch,0x2f
   14001191e:	(bad)  
   14001191f:	jrcxz  0x1400118f2
   140011921:	test   al,0x4b
   140011923:	lods   al,BYTE PTR ds:[rsi]
   140011924:	and    al,0xe2
   140011926:	fnstsw WORD PTR [rbx+0x4]
   140011929:	jge    0x1400118b0
   14001192b:	cmp    bh,BYTE PTR [rsi+0x42c2c795]
   140011931:	rex.W mov bl,0x1e
   140011934:	cmc    
   140011935:	rex.WRB sbb r14b,r9b
   140011938:	test   DWORD PTR [rdx],eax
   14001193a:	sub    ebx,edx
   14001193c:	xchg   BYTE PTR [rcx],ah
   14001193e:	iret   
   14001193f:	xchg   esi,eax
   140011940:	sbb    al,0x5f
   140011942:	(bad)  
   140011943:	jl     0x140011941
   140011945:	fwait
   140011946:	imul   ebx,DWORD PTR [rsi+rbx*2-0x16e3e74c],0xffffffc5
   14001194e:	retf   0xe07b
   140011951:	pop    rax
   140011952:	rex.R (bad) 
   140011954:	rex.R mov bl,0xda
   140011957:	and    ch,BYTE PTR [rsi-0x3a]
   14001195a:	and    al,0xcd
   14001195c:	mov    BYTE PTR [rsi-0x53],ah
   14001195f:	rex.WRX lahf 
   140011961:	fild   WORD PTR [rdx+0x25]
   140011964:	adc    ebx,ecx
   140011966:	retf   
   140011967:	rex.WRB test BYTE PTR [r10],r10b
   14001196a:	clc    
   14001196b:	add    DWORD PTR [rbx-0x54],0xd202c64d
   140011972:	jp     0x1400119b7
   140011974:	(bad)  
   140011975:	iret   
   140011976:	or     al,BYTE PTR [rcx+0x18]
   140011979:	imul   esi,DWORD PTR [rsi+rax*4-0x57f0162],0xffffffb2
   140011981:	(bad)  
   140011982:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011983:	shl    BYTE PTR [rdx-0x31],cl
   140011986:	cs fwait
   140011988:	(bad)  
   140011989:	jp     0x167773b10
   14001198f:	jno    0x1400119d5
   140011991:	mov    gs,ecx
   140011993:	xor    eax,DWORD PTR [rbx+0x3c]
   140011996:	jge    0x140011964
   140011998:	(bad)  
   140011999:	jne    0x1400119fd
   14001199b:	test   ch,dl
   14001199d:	xor    ebx,ebx
   14001199f:	mov    ecx,0xe22595ed
   1400119a4:	rex.XB not r8d
   1400119a7:	or     al,0x1e
   1400119a9:	sbb    edi,DWORD PTR [rcx-0x311e9b0e]
   1400119af:	in     eax,0x71
   1400119b1:	mov    edi,0x737e86ef
   1400119b6:	loope  0x1400119a8
   1400119b8:	iret   
   1400119b9:	cld    
   1400119ba:	mov    bh,0x95
   1400119bc:	xchg   DWORD PTR [rsi],edi
   1400119be:	cli    
   1400119bf:	stos   DWORD PTR es:[rdi],eax
   1400119c0:	pop    rbx
   1400119c1:	or     DWORD PTR [rsi+0x36cc3be],0xffffffca
   1400119c8:	scas   eax,DWORD PTR es:[rdi]
   1400119c9:	sbb    esp,DWORD PTR [rcx+0x3e3f5bf8]
   1400119cf:	repnz leave 
   1400119d1:	(bad)  
   1400119d2:	fsubp  st(6),st
   1400119d4:	jge    0x1400119d4
   1400119d6:	rex.WRB cmp rax,0xffffffff9c8d76dd
   1400119dc:	mov    edi,0xc0ba660d
   1400119e1:	fcomp  QWORD PTR [rbp+0xeb54bff]
   1400119e7:	cld    
   1400119e8:	rex.WRX push rbp
   1400119ea:	movabs al,ds:0x8eb6542fc1d67e0d
   1400119f3:	pop    rsp
   1400119f4:	xlat   BYTE PTR ds:[rbx]
   1400119f5:	add    eax,0x41650084
   1400119fa:	mov    esi,0x78e6eb84
   1400119ff:	imul   ebp,DWORD PTR [rsi],0xffffffe4
   140011a02:	xchg   BYTE PTR [rbp+0x689bee35],dh
   140011a08:	push   rdx
   140011a09:	sub    DWORD PTR [rsi],eax
   140011a0b:	and    al,0x46
   140011a0d:	(bad)  
   140011a0e:	sub    eax,DWORD PTR [rcx-0x6b1b8699]
   140011a14:	rex.RB (bad) 
   140011a16:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011a17:	mov    ah,0xda
   140011a19:	push   rsi
   140011a1a:	sbb    dl,bh
   140011a1c:	xchg   edx,eax
   140011a1d:	in     al,0x2c
   140011a1f:	fwait
   140011a20:	push   rsi
   140011a21:	movabs ds:0xf4b611c6a9d66c59,al
   140011a2a:	fsub   st,st(5)
   140011a2c:	or     eax,0x90773071
   140011a31:	pushf  
   140011a32:	xchg   ebp,eax
   140011a33:	(bad)  
   140011a34:	shl    BYTE PTR [rax+0x5a970da6],1
   140011a3a:	adc    DWORD PTR [rsi-0x1b],eax
   140011a3d:	fabs   
   140011a3f:	(bad)  
   140011a40:	rcl    DWORD PTR [rip+0x5b1b0601],0xe4        # 0x19b1c2048
   140011a47:	cdq    
   140011a48:	xorps  xmm7,XMMWORD PTR [rcx]
   140011a4b:	push   rdi
   140011a4c:	mov    ebx,0x8c0b2384
   140011a51:	jp     0x140011a2e
   140011a53:	pop    rcx
   140011a54:	mov    fs,edi
   140011a56:	mov    BYTE PTR [rbx+rax*1+0x21],cl
   140011a5a:	and    al,0xc2
   140011a5c:	fdivr  DWORD PTR [rax+0x37b28072]
   140011a62:	rex.WX fldl2e 
   140011a65:	ret    
   140011a66:	(bad)  
   140011a67:	mov    dl,BYTE PTR gs:[rsi-0x8f7a535]
   140011a6e:	pop    rsp
   140011a6f:	test   eax,0x112c1b93
   140011a74:	ss rex.XB
   140011a76:	rex.WR mov bpl,0xc2
   140011a79:	cmp    ecx,DWORD PTR [rsi]
   140011a7b:	push   0x6e
   140011a7d:	sbb    al,0xb9
   140011a7f:	mov    WORD PTR [rbp+0x2a0511c0],es
   140011a85:	(bad)  
   140011a86:	(bad)  
   140011a87:	(bad)
   140011a8a:	and    eax,0x70172766
   140011a8f:	cli    
   140011a90:	(bad)  
   140011a91:	(bad)  
   140011a92:	mov    ah,0x41
   140011a94:	sub    cl,BYTE PTR [rcx+0x15291294]
   140011a9a:	mov    dh,0x14
   140011a9c:	sub    BYTE PTR [rbx-0xe],cl
   140011a9f:	mov    ecx,0x2c4e35e3
   140011aa4:	sbb    DWORD PTR [rsi-0x12],esi
   140011aa7:	out    dx,al
   140011aa8:	rex.XB cmp sil,BYTE PTR [r14]
   140011aab:	cmc    
   140011aac:	sub    cl,al
   140011aae:	jne    0x140011ac4
   140011ab0:	xchg   ebp,eax
   140011ab1:	mov    ecx,0x799c7a35
   140011ab6:	xchg   dl,bh
   140011ab8:	sub    dh,BYTE PTR [rdx+rbp*8]
   140011abb:	sbb    bl,bl
   140011abd:	mov    DWORD PTR [rcx+0x52917e0e],ecx
   140011ac3:	inc    DWORD PTR ds:0x14dccca7
   140011aca:	pop    rax
   140011acb:	sahf   
   140011acc:	mov    esi,DWORD PTR [rcx-0x4116d9ec]
   140011ad2:	push   rsp
   140011ad3:	(bad)  
   140011ad4:	std    
   140011ad5:	xor    cl,BYTE PTR [rdx+0x49]
   140011ad8:	adc    al,0xa7
   140011ada:	and    ebx,DWORD PTR [rax]
   140011adc:	pop    rbp
   140011add:	pop    rdi
   140011ade:	adc    DWORD PTR [rdi+0x6a1c0e42],esi
   140011ae4:	mov    dl,0xdb
   140011ae6:	(bad)  
   140011ae8:	(bad)  
   140011ae9:	mov    WORD PTR [esi+edx*8+0x59],es
   140011aee:	mov    dh,0xcf
   140011af0:	and    DWORD PTR [rsi+0x3bc529c6],eax
   140011af6:	cdq    
   140011af7:	fwait
   140011af8:	push   rcx
   140011af9:	rex.R
   140011afa:	rex.WRB jo 0x140011b43
   140011afd:	xchg   edi,eax
   140011afe:	fdiv   DWORD PTR [rdi]
   140011b00:	xor    ah,al
   140011b02:	shr    BYTE PTR [rax-0x7d],1
   140011b05:	rex.RX (bad) 
   140011b07:	cmp    eax,0x7569e5f9
   140011b0c:	fist   DWORD PTR [rbp-0x13c874b9]
   140011b12:	(bad)  
   140011b13:	push   rdx
   140011b14:	(bad)  
   140011b15:	(bad)  
   140011b17:	push   rbx
   140011b18:	(bad)  
   140011b19:	mov    bh,0xda
   140011b1b:	cli    
   140011b1c:	iret   
   140011b1d:	(bad)  
   140011b1e:	(bad)  
   140011b1f:	pop    rdi
   140011b20:	cld    
   140011b21:	enter  0xbe6f,0x88
   140011b25:	jnp    0x140011b92
   140011b27:	retf   
   140011b28:	(bad)  
   140011b29:	and    eax,0xf803836c
   140011b2e:	lock sti 
   140011b30:	mov    bl,bh
   140011b32:	not    DWORD PTR [rsi+0x213f8b9b]
   140011b38:	fst    QWORD PTR [rdi]
   140011b3a:	adc    edi,ebp
   140011b3c:	mov    ebx,0x7e0ddd40
   140011b41:	mov    edx,0x3a66fd29
   140011b46:	fisttp WORD PTR [rsi+0x7]
   140011b49:	call   0xf8189050
   140011b4e:	test   DWORD PTR [rsi+rsi*2-0x10],edi
   140011b52:	mov    bh,0x1d
   140011b54:	test   DWORD PTR [rcx],edx
   140011b56:	loopne 0x140011b12
   140011b58:	nop
   140011b59:	jmp    0x140011bc0
   140011b5b:	(bad)  
   140011b5c:	mov    dl,0xf9
   140011b5e:	rcr    DWORD PTR [rsp+rax*2-0xd],1
   140011b62:	jb     0x140011b01
   140011b64:	jae    0x140011b1c
   140011b66:	and    edi,edx
   140011b68:	jrcxz  0x140011b3b
   140011b6a:	jrcxz  0x140011bb4
   140011b6c:	mov    bl,BYTE PTR [rsi+0x5ae01485]
   140011b72:	add    al,bh
   140011b74:	xchg   esi,eax
   140011b75:	sub    BYTE PTR [rdx+rbx*2],ch
   140011b78:	rex.WB
   140011b79:	rex.X xor eax,0xc7a4090e
   140011b7f:	ss addr32 cwde 
   140011b82:	mov    ebp,0xbbb64ec1
   140011b87:	cmp    ecx,DWORD PTR [rcx]
   140011b89:	fwait
   140011b8a:	(bad)  
   140011b8b:	jle    0x140011c08
   140011b8d:	or     al,0xdb
   140011b8f:	sub    dh,BYTE PTR [rbx-0x56b775a0]
   140011b95:	mov    eax,0xb30370b9
   140011b9a:	int    0x1e
   140011b9c:	add    al,0x3
   140011b9e:	in     al,0xac
   140011ba0:	add    cl,BYTE PTR [rsi+0x87461e5]
   140011ba6:	rex.RX push rax
   140011ba8:	jo     0x140011bb4
   140011baa:	rex.WR mov dil,0xce
   140011bad:	push   rdx
   140011bae:	or     DWORD PTR [rdi+0x9],esp
   140011bb1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011bb2:	mov    eax,DWORD PTR [rbx]
   140011bb4:	int3   
   140011bb5:	xor    eax,0x2a8a5c2b
   140011bba:	xchg   esp,eax
   140011bbb:	(bad)  
   140011bbc:	adc    BYTE PTR [rbx],al
   140011bbe:	out    dx,al
   140011bbf:	(bad)  
   140011bc0:	push   0x26
   140011bc2:	rcl    BYTE PTR [rdi-0x6e],0xaf
   140011bc6:	rex.WRX (bad) 
   140011bc8:	cmp    al,0xb5
   140011bca:	sbb    al,0xd1
   140011bcc:	xor    ebx,DWORD PTR [rax-0x1dd29299]
   140011bd2:	(bad)  
   140011bd3:	outs   dx,DWORD PTR ds:[rsi]
   140011bd4:	popf   
   140011bd5:	jmp    0x140011b8e
   140011bd7:	(bad)  
   140011bd8:	xor    ch,BYTE PTR [rax+0x15]
   140011bdb:	jo     0x140011b6f
   140011bdd:	cmp    al,0x23
   140011bdf:	rcr    DWORD PTR [rdi],cl
   140011be1:	addr32 mov eax,0x3a4a2ce7
   140011be7:	hlt    
   140011be8:	retf   
   140011be9:	adc    edi,DWORD PTR [rcx+rdi*1]
   140011bec:	mov    bl,0xb
   140011bee:	(bad)  
   140011bef:	pop    rdi
   140011bf0:	(bad)  
   140011bf1:	mov    dl,0x2c
   140011bf3:	sbb    al,0xdb
   140011bf5:	(bad)  
   140011bf6:	push   rsi
   140011bf7:	xchg   edx,eax
   140011bf8:	push   rax
   140011bf9:	ret    
   140011bfa:	mov    cl,0xa9
   140011bfc:	mov    BYTE PTR [rbx-0x9d6ab31],bh
   140011c02:	(bad)  
   140011c03:	push   rcx
   140011c04:	mov    esi,0x6319bd4d
   140011c09:	or     al,0x78
   140011c0b:	mov    dh,0xa2
   140011c0d:	mov    cl,0xdc
   140011c0f:	(bad)  
   140011c10:	sub    bh,BYTE PTR [rip+0xffffffffc53be981]        # 0x1053d0597
   140011c16:	scas   al,BYTE PTR es:[rdi]
   140011c17:	ins    DWORD PTR es:[rdi],dx
   140011c18:	sub    eax,0xa79c1c0e
   140011c1d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011c1e:	sbb    BYTE PTR [rdx],dl
   140011c20:	adc    al,0x34
   140011c22:	jge    0x140011be1
   140011c24:	or     eax,0x188be796
   140011c29:	rol    DWORD PTR [rbx],1
   140011c2b:	rex.WX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011c2d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011c2e:	(bad)  
   140011c2f:	in     al,dx
   140011c30:	fidiv  DWORD PTR [rdx+rax*8-0x4d]
   140011c34:	enter  0xf7a,0x64
   140011c38:	fidivr DWORD PTR [rdi-0x60]
   140011c3b:	add    al,0xac
   140011c3d:	scas   al,BYTE PTR es:[rdi]
   140011c3e:	(bad)  
   140011c3f:	call   0xd50df063
   140011c44:	jnp    0x140011c2e
   140011c46:	idiv   DWORD PTR [rdx+0x29]
   140011c49:	retf   
   140011c4a:	xor    dh,BYTE PTR [rip+0xffffffff931559e6]        # 0xd3167636
   140011c50:	add    al,0xa3
   140011c52:	(bad)  
   140011c53:	sbb    BYTE PTR [rip+0x152cacf8],ch        # 0x1552dc951
   140011c59:	mov    eax,0xa58e44f8
   140011c5e:	mov    eax,0x18176582
   140011c63:	sbb    ebp,DWORD PTR [rsi]
   140011c65:	(bad)  
   140011c66:	jbe    0x140011ce7
   140011c68:	push   rcx
   140011c69:	push   0xffffffffe9d7796b
   140011c6e:	(bad)  
   140011c6f:	jb     0x140011ce0
   140011c71:	push   0x45
   140011c73:	outs   dx,BYTE PTR ds:[rsi]
   140011c74:	jrcxz  0x140011cf0
   140011c76:	sbb    DWORD PTR [rdi-0x22],ecx
   140011c79:	div    ecx
   140011c7b:	fild   QWORD PTR [rbx+0x6c1b88be]
   140011c81:	retf   
   140011c82:	inc    BYTE PTR [rip+0x7fd2036c]        # 0x1bfd31ff4
   140011c88:	mul    DWORD PTR [rdi]
   140011c8a:	(bad)  
   140011c8b:	jg     0x140011d0a
   140011c8d:	test   al,0x64
   140011c8f:	(bad)  
   140011c90:	adc    al,0x8e
   140011c92:	jl     0x140011c3a
   140011c94:	cmc    
   140011c95:	lahf   
   140011c96:	rcr    edx,0x65
   140011c99:	mov    ebp,0x1bfda86b
   140011c9e:	movabs ds:0xfc8eebbebba8193e,al
   140011ca7:	(bad)  [rcx+riz*2]
   140011caa:	rex.XB cmp dl,r8b
   140011cad:	or     eax,0x20a66efe
   140011cb2:	(bad)  
   140011cb3:	lods   eax,DWORD PTR ds:[rsi]
   140011cb4:	rex.B scas al,BYTE PTR es:[edi]
   140011cb7:	mov    ah,dh
   140011cb9:	rex.WXB movabs r12,0x95f8e0d873784bc6
   140011cc3:	adc    BYTE PTR [rbp-0x1fa5bc33],dh
   140011cc9:	enter  0x9c6c,0x2
   140011ccd:	mov    bh,BYTE PTR [rax]
   140011ccf:	mov    gs,ecx
   140011cd1:	push   rdi
   140011cd2:	sub    esp,0x77
   140011cd5:	div    BYTE PTR [rax-0x175817d9]
   140011cdb:	xchg   esi,eax
   140011cdc:	pop    rax
   140011cdd:	pop    rbp
   140011cde:	jno    0x140011cd8
   140011ce0:	out    0xe5,al
   140011ce2:	(bad)  
   140011ce3:	rex.WRX mov gs,rdi
   140011ce6:	(bad)  
   140011ce7:	jb     0x140011d63
   140011ce9:	mov    cl,0x2
   140011ceb:	mov    al,0x8d
   140011ced:	loopne 0x140011d5f
   140011cef:	movabs eax,ds:0x708ea75dc439a34c
   140011cf8:	jb     0x140011d43
   140011cfa:	loopne 0x140011cd5
   140011cfc:	mov    dh,bl
   140011cfe:	adc    eax,0x6194f1b
   140011d03:	jae    0x140011d06
   140011d05:	stos   DWORD PTR es:[rdi],eax
   140011d06:	icebp  
   140011d07:	xor    cl,BYTE PTR [rcx+0x72]
   140011d0a:	sbb    DWORD PTR [rdx],edx
   140011d0c:	rex.WB
   140011d0d:	rex.WRX pop rcx
   140011d0f:	ins    BYTE PTR es:[rdi],dx
   140011d10:	repz or ah,BYTE PTR [rax]
   140011d13:	add    ebp,DWORD PTR [rsi]
   140011d15:	test   DWORD PTR [rbp+0x4a],edx
   140011d18:	push   rsi
   140011d19:	xchg   ecx,eax
   140011d1a:	fstp   st(6)
   140011d1c:	rex.WRX (bad) 
   140011d1e:	and    al,cl
   140011d20:	ins    BYTE PTR es:[rdi],dx
   140011d21:	ret    
   140011d22:	loop   0x140011cef
   140011d24:	jrcxz  0x140011d3b
   140011d26:	(bad)  
   140011d27:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011d28:	add    BYTE PTR [rdi],bh
   140011d2a:	out    0xd1,eax
   140011d2c:	test   al,0x87
   140011d2e:	cmp    BYTE PTR [rcx-0x6d],cl
   140011d31:	jge    0x140011db0
   140011d33:	jns    0x140011d27
   140011d35:	(bad)  
   140011d36:	addr32 out dx,eax
   140011d38:	in     al,dx
   140011d39:	(bad)  
   140011d3a:	lock (bad) 
   140011d3c:	gs sub dh,ch
   140011d3f:	add    ch,BYTE PTR [rdi]
   140011d41:	and    BYTE PTR [rdx+rcx*8+0x6e368bc9],0xef
   140011d49:	jbe    0x140011dc7
   140011d4b:	xlat   BYTE PTR ds:[rbx]
   140011d4c:	or     r9d,DWORD PTR [r11-0x60f6b42d]
   140011d53:	cmp    DWORD PTR [rcx-0x1d],ebx
   140011d56:	scas   al,BYTE PTR es:[rdi]
   140011d57:	mov    bl,0x15
   140011d59:	pop    rdx
   140011d5a:	mov    es,WORD PTR [rdi+0x5f]
   140011d5d:	jg     0x140011cfd
   140011d5f:	pop    rdx
   140011d60:	(bad)  
   140011d61:	out    dx,al
   140011d62:	wrmsr  
   140011d64:	cmp    BYTE PTR [rdx+0x60],cl
   140011d67:	rex.WXB
   140011d68:	rex.XB jne 0x140011dd0
   140011d6b:	(bad)  
   140011d6c:	rex.WXB adc rdi,QWORD PTR [r11-0x67]
   140011d70:	pop    rbx
   140011d71:	imul   esp,DWORD PTR [rdx-0x14],0x22bc4645
   140011d78:	mov    ebp,0xbcecc04e
   140011d7d:	retf   
   140011d7e:	in     al,0xe5
   140011d80:	ds ins BYTE PTR es:[rdi],dx
   140011d82:	scas   eax,DWORD PTR es:[rdi]
   140011d83:	add    BYTE PTR [rsi-0x340a14bc],dh
   140011d89:	and    bh,BYTE PTR [rdx]
   140011d8b:	xlat   BYTE PTR ds:[rbx]
   140011d8c:	xor    DWORD PTR [rbx],edi
   140011d8e:	lods   eax,DWORD PTR ds:[rsi]
   140011d8f:	rex.RX add BYTE PTR [rdi+r11*8],0xb5
   140011d94:	xor    BYTE PTR [rip+0xcc789c9],ch        # 0x14cc8a763
   140011d9a:	out    0x97,eax
   140011d9c:	xchg   edi,eax
   140011d9d:	cdq    
   140011d9e:	mov    ebp,ebx
   140011da0:	or     al,0xf7
   140011da2:	(bad)  
   140011da3:	sbb    DWORD PTR [rsi+0x2355e87b],esi
   140011da9:	(bad)  
   140011daa:	(bad)
   140011dad:	mov    ecx,0xa4b2b6c1
   140011db2:	fdivrp st(0),st
   140011db4:	mov    ecx,0x9a36d0f4
   140011db9:	xor    eax,DWORD PTR [rbx]
   140011dbb:	in     al,dx
   140011dbc:	cmp    al,0xe8
   140011dbe:	loop   0x140011d88
   140011dc0:	adc    BYTE PTR [rdi-0x18],ch
   140011dc3:	cmp    BYTE PTR [rdx-0x18],ch
   140011dc6:	jl     0x140011da7
   140011dc8:	clc    
   140011dc9:	movabs ds:0xf9defa87a73737b9,eax
   140011dd2:	fstp   TBYTE PTR [rdi]
   140011dd4:	repz call 0x137f21db1
   140011dda:	sub    ch,BYTE PTR [rdi]
   140011ddc:	clc    
   140011ddd:	outs   dx,BYTE PTR ds:[rsi]
   140011dde:	fnsave [rdx+0x3c3adc97]
   140011de4:	jmp    FWORD PTR [rbp+0x37]
   140011de7:	stos   BYTE PTR es:[rdi],al
   140011de8:	mov    esi,0x5db9fabf
   140011ded:	out    0xfa,eax
   140011def:	jp     0x140011d8d
   140011df1:	(bad)  
   140011df2:	ins    BYTE PTR es:[rdi],dx
   140011df3:	icebp  
   140011df4:	add    al,ah
   140011df6:	mov    edi,0xf3d27aae
   140011dfb:	imul   esi,eax,0xdbf8d4e9
   140011e01:	jmp    0x140011e7a
   140011e03:	sar    DWORD PTR [rsi-0x28],1
   140011e06:	sbb    cl,bh
   140011e08:	cmp    edi,ebp
   140011e0a:	add    ebp,ebx
   140011e0c:	xchg   ecx,eax
   140011e0d:	jg     0x140011de2
   140011e0f:	out    0x4c,eax
   140011e11:	shr    esi,0xb0
   140011e14:	xor    esi,0x2eac1467
   140011e1a:	rex jne 0x140011db3
   140011e1d:	iret   
   140011e1e:	(bad)  
   140011e1f:	xlat   BYTE PTR ds:[rbx]
   140011e20:	stc    
   140011e21:	fild   DWORD PTR [rdx+0x3ea1d0cf]
   140011e27:	sub    al,0x25
   140011e29:	push   rcx
   140011e2a:	xchg   ecx,eax
   140011e2b:	(bad)  
   140011e2c:	xchg   edi,eax
   140011e2d:	jne    0x140011e4c
   140011e2f:	cmp    DWORD PTR [rcx-0x68],esp
   140011e32:	stos   DWORD PTR es:[rdi],eax
   140011e33:	xlat   BYTE PTR ds:[rbx]
   140011e34:	mov    eax,0xa170c972
   140011e39:	rex.WX fdivr DWORD PTR ds:[rax+0x11bad081]
   140011e41:	(bad)  
   140011e42:	out    dx,eax
   140011e43:	loop   0x140011e0c
   140011e45:	out    0xb1,eax
   140011e47:	popf   
   140011e48:	sub    eax,DWORD PTR [rax+rbp*1+0x76]
   140011e4c:	xchg   edi,eax
   140011e4d:	xor    eax,0x5722f5cb
   140011e52:	ret    0x4a3
   140011e55:	sahf   
   140011e56:	rex.X (bad) 
   140011e58:	sub    eax,DWORD PTR [rcx+rdx*4+0x4b]
   140011e5c:	xchg   edx,eax
   140011e5d:	int3   
   140011e5e:	mov    al,0xbb
   140011e60:	ja     0x140011de4
   140011e62:	push   rdi
   140011e63:	or     al,0xae
   140011e65:	push   rcx
   140011e66:	mov    dl,0x67
   140011e68:	rex.B (bad) 
   140011e6a:	loope  0x140011e95
   140011e6c:	lahf   
   140011e6d:	popf   
   140011e6e:	rol    DWORD PTR [rcx],0x7a
   140011e71:	fdivr  QWORD PTR [rbp+0x5c]
   140011e74:	outs   dx,BYTE PTR ds:[rsi]
   140011e75:	scas   al,BYTE PTR es:[rdi]
   140011e76:	loope  0x140011ec1
   140011e78:	xchg   edi,eax
   140011e79:	ins    DWORD PTR es:[rdi],dx
   140011e7a:	(bad)  
   140011e7b:	xor    bh,bh
   140011e7d:	jo     0x140011e40
   140011e7f:	jrcxz  0x140011e42
   140011e81:	rex.RB
   140011e82:	rex.XB and eax,0x2f6ef434
   140011e88:	adc    ebx,DWORD PTR [rbx+0x16]
   140011e8b:	mov    dl,0x19
   140011e8d:	xor    bh,BYTE PTR [rip+0x765bc0b5]        # 0x1b65cdf48
   140011e93:	rex.R jl 0x140011ec6
   140011e96:	stc    
   140011e97:	adc    edi,edx
   140011e99:	(bad)  
   140011e9a:	or     al,0xf4
   140011e9c:	out    dx,al
   140011e9d:	retf   0xce44
   140011ea0:	add    al,0xaa
   140011ea2:	adc    edi,DWORD PTR [rsi+riz*8-0x15]
   140011ea6:	cmp    ebx,DWORD PTR [rcx]
   140011ea8:	mov    ebp,0xfb145de1
   140011ead:	(bad)  
   140011eae:	cmp    bl,dl
   140011eb0:	or     al,0xf8
   140011eb2:	hlt    
   140011eb3:	mov    DWORD PTR [rbp-0x1a],edx
   140011eb6:	and    al,bl
   140011eb8:	rex jg 0x140011e59
   140011ebb:	rex.X shl DWORD PTR [rdi-0x5ee5e4eb],0x46
   140011ec3:	nop
   140011ec4:	mov    dh,0xff
   140011ec6:	fld    st(6)
   140011ec8:	loopne 0x140011f24
   140011eca:	jmp    0xccde847f
   140011ecf:	pop    rax
   140011ed0:	cdq    
   140011ed1:	ins    DWORD PTR es:[rdi],dx
   140011ed2:	adc    ch,BYTE PTR [rsi-0x32d3acd3]
   140011ed8:	(bad)  
   140011ed9:	mov    ebx,0x7d2bea4d
   140011ede:	(bad)  
   140011edf:	hlt    
   140011ee0:	sar    DWORD PTR [rdi+0x212887ad],1
   140011ee6:	popf   
   140011ee7:	rex.WB or BYTE PTR [r13-0x314f479f],dil
   140011eee:	mov    ah,0x1
   140011ef0:	xchg   ebx,eax
   140011ef1:	mov    ebp,0xb123274f
   140011ef6:	push   0xffffffffccac5a56
   140011efb:	rex.RX lods al,BYTE PTR ds:[rsi]
   140011efd:	xor    eax,0x34783996
   140011f02:	loop   0x140011ecb
   140011f04:	out    dx,al
   140011f05:	sbb    BYTE PTR [rax-0x65],ah
   140011f08:	jmp    0x140011efd
   140011f0a:	rcpps  xmm0,xmm7
   140011f0d:	imul   esp,esp,0x9d961ce
   140011f13:	push   0x65
   140011f15:	adc    BYTE PTR [rbx-0x2b181009],0x71
   140011f1c:	xchg   edi,eax
   140011f1d:	mov    ebp,0xa6e159af
   140011f22:	(bad)  
   140011f23:	rex.WRXB mov r10b,0x5a
   140011f26:	cmp    ecx,DWORD PTR [rbp+0x36a96716]
   140011f2c:	adc    al,0x67
   140011f2e:	mov    esi,0xc59c3afa
   140011f33:	(bad)  
   140011f35:	inc    al
   140011f37:	jnp    0x140011faf
   140011f39:	cld    
   140011f3a:	mov    ah,0xbf
   140011f3c:	and    ebx,DWORD PTR [rax]
   140011f3e:	(bad)  
   140011f3f:	pop    rbx
   140011f40:	mov    ecx,edi
   140011f42:	ja     0x140011f1b
   140011f44:	cmc    
   140011f45:	outs   dx,DWORD PTR ds:[rsi]
   140011f46:	imul   eax,DWORD PTR [rbx],0xed59932f
   140011f4c:	(bad)  
   140011f4d:	sti    
   140011f4e:	rex.RXB mov r13d,0xaaf39557
   140011f54:	(bad)  
   140011f55:	cmc    
   140011f56:	add    al,al
   140011f58:	fisttp WORD PTR [rcx+0x5ebface0]
   140011f5e:	stos   DWORD PTR es:[rdi],eax
   140011f5f:	int3   
   140011f60:	xlat   BYTE PTR ds:[rbx]
   140011f61:	(bad)  
   140011f62:	ins    DWORD PTR es:[rdi],dx
   140011f63:	ja     0x140011ee8
   140011f65:	shrd   DWORD PTR [rdi+0x1df8a6d7],ebp,0x86
   140011f6d:	rol    BYTE PTR [rip+0x7ed1cdee],1        # 0x1bed2ed61
   140011f73:	repz idiv BYTE PTR [rbx+0x2d81bfc1]
   140011f7a:	or     al,ch
   140011f7c:	fild   DWORD PTR [rsi]
   140011f7e:	(bad)  
   140011f81:	jmp    0x140011fe2
   140011f83:	loope  0x140011ff2
   140011f85:	mov    ch,0x45
   140011f87:	ds jbe 0x140011ff6
   140011f8a:	sahf   
   140011f8b:	(bad)  
   140011f8c:	add    ebx,0x1c
   140011f8f:	fisttp WORD PTR cs:[rax+0x2b]
   140011f93:	lods   al,BYTE PTR ds:[rsi]
   140011f94:	lock (bad) 
   140011f96:	xchg   esp,eax
   140011f97:	ret    
   140011f98:	push   rbx
   140011f99:	shl    DWORD PTR [rdi+0x42],cl
   140011f9c:	sub    eax,0x518d624f
   140011fa1:	(bad)  
   140011fa3:	mov    DWORD PTR [rax+0x1e],0x57a92594
   140011faa:	jbe    0x140011f4e
   140011fac:	(bad)  
   140011faf:	adc    DWORD PTR [rdi+rbp*4-0x5e7eea9],ebx
   140011fb6:	cli    
   140011fb7:	ins    BYTE PTR es:[rdi],dx
   140011fb8:	cmp    al,0xdf
   140011fba:	es rex.WR xchg al,r14b
   140011fbe:	pop    rsp
   140011fbf:	rex.WB mov r13b,0x52
   140011fc2:	loop   0x140011fc0
   140011fc4:	cld    
   140011fc5:	adc    BYTE PTR [rbp-0x11087598],ch
   140011fcb:	sbb    DWORD PTR [rcx],esp
   140011fcd:	mov    al,0x8f
   140011fcf:	(bad)  
   140011fd0:	leave  
   140011fd1:	rex.B (bad) 
   140011fd4:	adc    edx,edi
   140011fd6:	xchg   esp,eax
   140011fd7:	fldpi  
   140011fd9:	xchg   edi,eax
   140011fda:	jns    0x140012054
   140011fdc:	stc    
   140011fdd:	xor    bh,BYTE PTR [rdi+0x78]
   140011fe0:	sbb    al,0xe6
   140011fe2:	(bad)  
   140011fe3:	or     DWORD PTR [rsi+0x5f],ebp
   140011fe6:	xor    DWORD PTR [rdx-0x3f],0x2d414a43
   140011fed:	(bad)  
   140011fee:	adc    al,0x72
   140011ff0:	cs cmp eax,0xaf378f05
   140011ff6:	(bad)  
   140011ff7:	adc    ebp,edi
   140011ff9:	mov    ebp,0x95da50b3
   140011ffe:	(bad)  
   140011fff:	mov    ebx,0xca03004e
   140012004:	rex.RX (bad) 
   140012006:	jne    0x140012062
   140012008:	int    0x26
   14001200a:	mov    ch,0x56
   14001200c:	ret    0x6ac4
   14001200f:	mov    ebp,DWORD PTR [rdx-0x2a2713b0]
   140012015:	or     edx,DWORD PTR [rsi+0x484ad2a4]
   14001201b:	(bad)  
   14001201c:	popf   
   14001201d:	xchg   esi,eax
   14001201e:	add    eax,0x89041811
   140012023:	(bad)  
   140012024:	xor    al,0x42
   140012026:	lea    eax,[rdx]
   140012028:	pop    rsp
   140012029:	(bad)  
   14001202a:	movabs ds:0xb6b712e6b08e477f,al
   140012033:	movabs eax,ds:0xd230a78e317df80d
   14001203c:	and    cl,BYTE PTR [rcx+0x69d4f4a3]
   140012042:	shl    BYTE PTR [r9],cl
   140012045:	pop    rbx
   140012046:	(bad)  
   140012047:	sub    DWORD PTR [rax-0x39],ecx
   14001204a:	adc    BYTE PTR [rax+0x0],cl
   14001204d:	rex.XB sbb BYTE PTR [r11],bl
   140012050:	xchg   edx,eax
   140012051:	sub    dh,al
   140012053:	mov    dl,0x1d
   140012055:	(bad)  
   140012056:	ja     0x140012053
   140012058:	in     al,0x57
   14001205a:	ins    BYTE PTR es:[rdi],dx
   14001205b:	(bad)  
   14001205c:	ds mov cl,0xc4
   14001205f:	push   QWORD PTR [rdi+riz*8+0x28]
   140012063:	mov    eax,0x1b1d4f1e
   140012068:	and    al,0x52
   14001206a:	or     bh,BYTE PTR [rdi+0x6de9b824]
   140012070:	xchg   edi,eax
   140012071:	cmp    dl,bh
   140012073:	mov    edx,0x1c9ece39
   140012078:	fs cld 
   14001207a:	cwde   
   14001207b:	(bad)  
   14001207c:	(bad)  
   14001207e:	or     BYTE PTR [rdi-0x48],ch
   140012081:	jae    0x140012003
   140012083:	sbb    ecx,ebx
   140012085:	ret    0xaff3
   140012088:	jo     0x140012087
   14001208a:	mov    ebx,0x5fb389fe
   14001208f:	fwait
   140012090:	jge    0x140012061
   140012092:	mov    DWORD PTR [rdi-0x1209885],edi
   140012098:	pop    rbx
   140012099:	jbe    0x140012097
   14001209b:	rex.RX jo 0x1400120be
   14001209e:	clc    
   14001209f:	cli    
   1400120a0:	mov    cl,0xe5
   1400120a2:	out    0xca,al
   1400120a4:	sub    eax,0x1396debd
   1400120a9:	js     0x1400120c4
   1400120ab:	lods   al,BYTE PTR ds:[rsi]
   1400120ac:	jrcxz  0x1400120ae
   1400120ae:	or     al,0x62
   1400120b0:	mov    edi,0xcf1d7290
   1400120b5:	iret   
   1400120b6:	push   0xffffffffffffffcf
   1400120b8:	rex.X stc 
   1400120ba:	(bad)  
   1400120bb:	je     0x1400120b6
   1400120bd:	jno    0x1400120f4
   1400120bf:	push   rax
   1400120c0:	(bad)  
   1400120c1:	je     0x140012064
   1400120c3:	mov    ah,0xc1
   1400120c5:	(bad)  [rbp+0x6efe03ac]
   1400120cb:	push   0x7f
   1400120cd:	or     eax,0x2eb0007
   1400120d2:	(bad)  
   1400120d3:	(bad)  
   1400120d4:	ins    DWORD PTR es:[rdi],dx
   1400120d5:	call   0x1ad2337b4
   1400120da:	ja     0x14001208f
   1400120dc:	cmp    eax,0xbf8fde18
   1400120e1:	fcmove st,st(7)
   1400120e3:	xchg   DWORD PTR [rbp+0x5f1e9c2b],edi
   1400120e9:	out    0xb3,al
   1400120eb:	(bad)  
   1400120ec:	iret   
   1400120ed:	jo     0x1400120b1
   1400120ef:	mov    esp,0x41c6d58b
   1400120f4:	fdiv   st(4),st
   1400120f6:	add    ch,al
   1400120f8:	pop    rbp
   1400120f9:	rex.RB mov r8d,ss
   1400120fc:	mov    eax,0x8c3459e
   140012101:	adc    ch,BYTE PTR [rcx-0x50]
   140012104:	cli    
   140012105:	mov    ecx,DWORD PTR [rax+0x21]
   140012108:	enter  0x4109,0x58
   14001210c:	xor    eax,0x986b57d4
   140012111:	(bad)  
   140012112:	add    dh,BYTE PTR [rdx+0x6291d0a5]
   140012118:	(bad)  
   140012119:	rex.WB push r8
   14001211b:	or     al,ch
   14001211d:	fist   DWORD PTR [rsi+0x60]
   140012120:	jb     0x140012193
   140012122:	(bad)  
   140012123:	xchg   ebp,eax
   140012124:	lock sub al,0xb2
   140012127:	mov    al,0x87
   140012129:	mov    ebp,0xab2676ee
   14001212e:	cmp    DWORD PTR [rdx+rbp*8-0x5e],0xffffffa2
   140012133:	(bad)  
   140012134:	loopne 0x140012180
   140012136:	gs (bad) 
   140012138:	mov    DWORD PTR [rbp+0x1960f467],ebx
   14001213e:	lea    esp,[rsi+0x362189a]
   140012144:	pop    rdx
   140012145:	rex.B movabs ds:0x7f06e43ffc17e4d5,eax
   14001214f:	sbb    cl,BYTE PTR [rdx+0x63]
   140012152:	sbb    eax,edi
   140012154:	mov    bl,0xfe
   140012156:	pop    rbp
   140012157:	add    BYTE PTR [rip+0xffffffff9c49ba91],ah        # 0xdc4adbee
   14001215d:	push   0x2bc84984
   140012162:	and    edi,0x6925b42b
   140012168:	test   BYTE PTR [rdx],bl
   14001216a:	adc    BYTE PTR [rax-0x6b],cl
   14001216d:	(bad)  
   14001216e:	and    eax,0x4c690200
   140012173:	fimul  DWORD PTR [rcx-0x58]
   140012176:	xor    al,0x6
   140012178:	push   0x1b589a25
   14001217d:	jo     0x140012193
   14001217f:	retf   0x1d26
   140012182:	data16 mov WORD PTR [rbp+0x18],cs
   140012186:	or     DWORD PTR [rcx],0x13
   140012189:	adc    bl,cl
   14001218b:	outs   dx,BYTE PTR ds:[rsi]
   14001218c:	xor    DWORD PTR [rsi],eax
   14001218e:	cdq    
   14001218f:	add    dh,0x20
   140012192:	test   eax,eax
   140012194:	or     al,dl
   140012196:	xor    bl,BYTE PTR [rbp+0x2471c434]
   14001219c:	xchg   esi,eax
   14001219d:	adc    al,0x44
   14001219f:	mov    cl,0x41
   1400121a1:	(bad)  
   1400121a2:	(bad)  
   1400121a3:	sub    BYTE PTR [rsi],al
   1400121a5:	scas   eax,DWORD PTR es:[rdi]
   1400121a6:	in     al,0x33
   1400121a8:	push   0xffffffffeb3c997a
   1400121ad:	movabs eax,ds:0xf1611bc143aed80d
   1400121b6:	repnz adc dh,bh
   1400121b9:	jg     0x1400121f7
   1400121bb:	iret   
   1400121bc:	imul   ebx,edi,0x7b
   1400121bf:	add    eax,0x975200bf
   1400121c4:	pop    rcx
   1400121c5:	cmp    cl,ch
   1400121c7:	repz je 0x140012249
   1400121ca:	test   DWORD PTR [rcx+0x64c2de57],esi
   1400121d0:	mov    bl,0x4a
   1400121d2:	leave  
   1400121d3:	pop    rdx
   1400121d4:	in     eax,0xc0
   1400121d6:	imul   ecx,DWORD PTR [rdi+0x70],0xffffffb9
   1400121da:	push   rsp
   1400121db:	jge    0x1400121da
   1400121dd:	xchg   ebx,eax
   1400121de:	bsf    esi,DWORD PTR [rbx+0x57]
   1400121e2:	movsxd edi,DWORD PTR [rcx-0x11]
   1400121e5:	outs   dx,DWORD PTR ds:[rsi]
   1400121e6:	xor    eax,0x4fd596f
   1400121eb:	mov    al,0x35
   1400121ed:	ret    0x65f0
   1400121f0:	mov    al,0x8e
   1400121f2:	(bad)  
   1400121f3:	jo     0x1400121d0
   1400121f5:	idiv   DWORD PTR [rip+0xffffffffe97578ef]        # 0x129769aeb
   1400121fc:	jbe    0x1400121d2
   1400121fe:	repz icebp 
   140012200:	add    BYTE PTR [rbp+0x0],bl
   140012203:	out    dx,al
   140012204:	sub    al,0xba
   140012206:	rex.RX in al,0x6f
   140012209:	(bad)  
   14001220a:	clc    
   14001220b:	sbb    BYTE PTR [rcx-0x345e16b2],dh
   140012211:	push   rcx
   140012212:	cmp    al,0x13
   140012214:	clc    
   140012215:	(bad)  
   140012216:	in     eax,0xfc
   140012218:	sbb    eax,0x40e5d027
   14001221d:	fs xchg edi,eax
   14001221f:	movsxd ebp,eax
   140012221:	cld    
   140012222:	jle    0x1400121fb
   140012224:	neg    ebp
   140012226:	int3   
   140012227:	add    DWORD PTR [rbx],eax
   140012229:	jle    0x140012249
   14001222b:	repnz add esi,esp
   14001222e:	(bad)  [rcx]
   140012230:	scas   eax,DWORD PTR es:[rdi]
   140012231:	jrcxz  0x14001223d
   140012233:	(bad)  
   140012234:	rex.WRXB sub QWORD PTR [r10],r13
   140012237:	and    esi,DWORD PTR [rdi+0x201d1a52]
   14001223d:	mov    cl,0x21
   14001223f:	mov    ah,0x14
   140012241:	xchg   ecx,eax
   140012242:	xor    BYTE PTR [rdx+rax*1],ah
   140012245:	mov    ah,0x14
   140012247:	and    al,0x8
   140012249:	and    ch,BYTE PTR [rcx]
   14001224b:	lock sub al,0x5
   14001224e:	lods   eax,DWORD PTR ds:[rsi]
   14001224f:	cwde   
   140012250:	(bad)  
   140012252:	and    al,0xf9
   140012254:	repnz out 0xb8,eax
   140012257:	test   eax,0x1d1f8674
   14001225c:	sub    al,0x51
   14001225e:	jbe    0x1400121eb
   140012260:	mov    WORD PTR [rax-0x66],ds
   140012263:	mov    al,0xd1
   140012265:	fs mov dl,0xe
   140012268:	xchg   esi,eax
   140012269:	pushf  
   14001226a:	and    DWORD PTR [rcx+0x5c],ecx
   14001226d:	sbb    cl,BYTE PTR es:[rcx]
   140012270:	fistp  WORD PTR [rax-0x7976636e]
   140012276:	lock cli 
   140012278:	jnp    0x140012242
   14001227a:	cmc    
   14001227b:	hlt    
   14001227c:	shl    BYTE PTR [rdi],1
   14001227e:	cwde   
   14001227f:	movabs ds:0xad229279e925ac09,eax
   140012288:	rex.RX cld 
   14001228a:	je     0x140012271
   14001228c:	ja     0x140012246
   14001228e:	leave  
   14001228f:	mov    edi,0x36bb3d00
   140012294:	sbb    edi,0x68ce7a4
   14001229a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001229b:	iret   
   14001229c:	cmp    BYTE PTR es:[rbp-0x29],bh
   1400122a0:	adc    edi,DWORD PTR [rcx]
   1400122a2:	add    DWORD PTR [rdi-0x4e2cf116],esp
   1400122a8:	(bad)  
   1400122a9:	leave  
   1400122aa:	jns    0x1400122d0
   1400122ac:	cmp    cl,BYTE PTR [rbp+0x5c3640d4]
   1400122b2:	test   al,0x4d
   1400122b4:	mov    dh,0xd2
   1400122b6:	imul   DWORD PTR [rcx+0x17]
   1400122b9:	(bad)  
   1400122ba:	jbe    0x1400122d6
   1400122bc:	enter  0x9d40,0xcd
   1400122c0:	fcomp  QWORD PTR ss:[rcx]
   1400122c3:	push   0xffffffffffffff90
   1400122c5:	jbe    0x140012311
   1400122c7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400122c8:	add    eax,DWORD PTR [rsp+rax*1+0x64fc0c88]
   1400122cf:	(bad)  
   1400122d0:	movabs al,ds:0x5d1d4acd1679e041
   1400122d9:	imul   edx,edx,0x6a
   1400122dc:	test   BYTE PTR [rcx-0x7e],r12b
   1400122e0:	xchg   esp,eax
   1400122e1:	add    dl,bh
   1400122e3:	ja     0x140012355
   1400122e5:	jl     0x1400122f6
   1400122e7:	(bad)  [rsi-0x6f]
   1400122ea:	mov    es,WORD PTR [rip+0x1ce54a0a]        # 0x15ce66cfa
   1400122f0:	mov    ch,0xa5
   1400122f2:	or     bh,cl
   1400122f4:	cmc    
   1400122f5:	rol    ah,1
   1400122f7:	rex.R mov bpl,0x2
   1400122fa:	rex.B
   1400122fb:	rex.WRX jb 0x1400122ef
   1400122fe:	mov    cl,0x90
   140012300:	sbb    ebx,DWORD PTR [rsi+0x25]
   140012303:	pop    rax
   140012304:	push   rsp
   140012305:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012306:	adc    esi,eax
   140012308:	(bad)  
   140012309:	sbb    ebx,DWORD PTR [rbx-0x77b49242]
   14001230f:	rcl    DWORD PTR [rbx-0x3b],0x33
   140012313:	pop    rdi
   140012314:	jmp    0x1b25b48d2
   140012319:	data16 rex.WRX fdiv st(5),st
   14001231d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001231e:	(bad)  
   14001231f:	ds mov edi,0x5ecb765b
   140012325:	rex.WX jmp 0x140012360
   140012328:	adc    BYTE PTR [rdi+0x1f],0x70
   14001232c:	(bad)  
   14001232e:	mov    ss,WORD PTR [rdi+0x15]
   140012331:	lahf   
   140012332:	ret    
   140012333:	add    DWORD PTR [rbx+rcx*4+0x72],esi
   140012337:	xlat   BYTE PTR ds:[rbx]
   140012338:	add    bh,bh
   14001233a:	mov    ch,0x14
   14001233c:	jg     0x1400123b3
   14001233e:	or     eax,0xfdd577f0
   140012343:	(bad)  
   140012344:	test   al,0xfd
   140012346:	in     eax,dx
   140012347:	fild   QWORD PTR [rdi+0x7f]
   14001234a:	out    dx,al
   14001234b:	mov    gs,esp
   14001234d:	pop    rbp
   14001234e:	lods   al,BYTE PTR ds:[rsi]
   14001234f:	sub    sil,BYTE PTR [rsi]
   140012352:	in     al,0xfc
   140012354:	sbb    edx,esi
   140012356:	jmp    0x1afa8a25d
   14001235b:	and    bl,bh
   14001235d:	fisttp DWORD PTR [rdx+0x41]
   140012360:	jle    0x140012362
   140012362:	(bad)  
   140012363:	(bad)  
   140012364:	js     0x140012339
   140012366:	loopne 0x1400123a1
   140012368:	outs   dx,BYTE PTR ds:[rsi]
   140012369:	push   0x573dc03d
   14001236e:	jb     0x1400123b4
   140012370:	rex.XB sti 
   140012372:	rcr    DWORD PTR [rax+0x4a84496b],cl
   140012378:	mov    bh,0x65
   14001237a:	sub    eax,DWORD PTR [rcx+0x4b7c4b6f]
   140012380:	shr    BYTE PTR [rsi+rax*4+0x29e60b6c],1
   140012387:	pop    rcx
   140012388:	(bad)  
   140012389:	shl    ebx,1
   14001238b:	pop    rbp
   14001238c:	adc    ch,BYTE PTR es:[rbx+0x1c]
   140012390:	sub    DWORD PTR [rdx],ebp
   140012392:	outs   dx,BYTE PTR ds:[rsi]
   140012393:	out    dx,eax
   140012394:	xor    ecx,esp
   140012396:	(bad)  
   140012397:	xor    eax,0xa13cc3c7
   14001239c:	mov    ch,0x93
   14001239e:	leave  
   14001239f:	(bad)  
   1400123a0:	xor    BYTE PTR [rdi],dl
   1400123a2:	(bad)  
   1400123a3:	and    ebp,DWORD PTR [rcx+rcx*4+0x72dba312]
   1400123aa:	adc    BYTE PTR [rax-0x5a5f6acc],bh
   1400123b0:	or     eax,0xf032a021
   1400123b5:	and    esp,DWORD PTR [rdi+rbx*1]
   1400123b8:	pop    rsp
   1400123b9:	cli    
   1400123ba:	jge    0x14001242a
   1400123bc:	test   DWORD PTR [rsi+0x74eeef43],0x37e0db3f
   1400123c6:	xchg   BYTE PTR [rdx+rdi*4-0x58deafb8],dl
   1400123cd:	rex.WRXB (bad) 
   1400123cf:	adc    ebp,edi
   1400123d1:	xchg   ecx,esi
   1400123d3:	cld    
   1400123d4:	adc    dl,BYTE PTR [rdi+0x22]
   1400123d7:	fwait
   1400123d8:	add    eax,0x2e72b0a3
   1400123dd:	mov    cl,0xe9
   1400123df:	mov    esi,0x400e5d14
   1400123e4:	mov    BYTE PTR [rip+0xffffffffbc3a6b9a],cl        # 0xfc3b8f84
   1400123ea:	sub    BYTE PTR [rbx+0x285d265a],bh
   1400123f0:	mov    bl,0x9a
   1400123f2:	jg     0x14001245b
   1400123f4:	mov    al,BYTE PTR [rax]
   1400123f6:	xchg   ecx,eax
   1400123f7:	add    bl,BYTE PTR [rsi+0x18]
   1400123fa:	mov    dl,0x34
   1400123fc:	sub    eax,0x701a1e75
   140012401:	sbb    al,0xc5
   140012403:	fiadd  DWORD PTR [rdx-0x6b]
   140012406:	pop    rbx
   140012407:	mov    es,esp
   140012409:	mov    BYTE PTR [rax+0x5869ae45],ah
   14001240f:	pop    rcx
   140012410:	scas   al,BYTE PTR es:[rdi]
   140012411:	ror    DWORD PTR [rbp+rax*1-0x265c3e82],1
   140012418:	rex.WR test al,0x37
   14001241b:	adc    al,dl
   14001241d:	push   rsi
   14001241e:	(bad)  
   14001241f:	gs rex.WB ret 0x2ab5
   140012424:	jnp    0x140012494
   140012426:	pop    rbp
   140012427:	movsxd esp,DWORD PTR [rbp+0x3a]
   14001242a:	movabs ds:0x321ea488e3a2e531,al
   140012433:	je     0x140012410
   140012435:	gs rex.X jne 0x14001244f
   140012439:	imul   edx,DWORD PTR [rdx+rbx*1],0xf208c48b
   140012440:	in     eax,0x1a
   140012442:	rcr    DWORD PTR [rsi+0x5fb3b9d3],0xcd
   140012449:	mov    ebp,0x4fd8f0fa
   14001244e:	iret   
   14001244f:	pushf  
   140012450:	(bad)  
   140012451:	cmc    
   140012452:	(bad)  
   140012453:	rex.WRXB movabs r14,0xedd699fecb77fbc0
   14001245d:	add    dh,bl
   14001245f:	repnz mov ss,WORD PTR [rdi+0x15]
   140012463:	pop    rdi
   140012464:	dec    esp
   140012466:	(bad)  
   140012467:	movabs al,ds:0xdfe35dbfb4ddf81b
   140012470:	(bad)  
   140012471:	loopne 0x140012446
   140012473:	mov    cs,eax
   140012475:	fwait
   140012476:	xchg   ebp,eax
   140012477:	(bad)  
   140012478:	imul   esi,DWORD PTR [rip+0x2606cf8],0xffffff9b        # 0x142619177
   14001247f:	retf   0x9d80
   140012482:	sub    dh,bl
   140012484:	or     eax,0xa0eccdfe
   140012489:	fistp  DWORD PTR [rcx]
   14001248b:	enter  0xe08d,0xdf
   14001248f:	mov    esp,0x3978031d
   140012494:	sub    BYTE PTR [rcx+rdx*8],cl
   140012497:	xchg   DWORD PTR [edi+esi*1-0x6033b009],edi
   14001249f:	cmp    cl,ch
   1400124a1:	pop    rcx
   1400124a2:	imul   ebx,DWORD PTR [rdi],0x76
   1400124a5:	test   eax,0x105d5b37
   1400124aa:	cmp    BYTE PTR [rdx],cl
   1400124ac:	cmp    ecx,DWORD PTR [rcx+rbx*2]
   1400124af:	pop    rbx
   1400124b0:	outs   dx,BYTE PTR ds:[rsi]
   1400124b1:	shr    BYTE PTR [rdx+0x3dcbe937],cl
   1400124b7:	rex leave 
   1400124b9:	mov    ecx,0xaa2a5944
   1400124be:	jp     0x140012449
   1400124c0:	and    eax,0xd59c997d
   1400124c5:	retf   
   1400124c6:	push   0xffffffffffffffcb
   1400124c8:	gs xor ch,dl
   1400124cb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400124cc:	jg     0x140012502
   1400124ce:	rex.WRXB
   1400124cf:	rex.WRXB fldenv [r11-0x16178fb0]
   1400124d6:	cmc    
   1400124d7:	push   rcx
   1400124d8:	mov    cs,WORD PTR [rdx-0x3f]
   1400124db:	mov    BYTE PTR [rax],ah
   1400124dd:	(bad)  
   1400124de:	imul   esi,ebx,0x4529948e
   1400124e4:	call   rax
   1400124e6:	loop   0x1400124af
   1400124e8:	js     0x140012475
   1400124ea:	test   DWORD PTR [rax],0xb2807714
   1400124f0:	mov    bl,0xa1
   1400124f2:	mov    edi,0x380433ba
   1400124f7:	popf   
   1400124f8:	sub    esp,edx
   1400124fa:	or     BYTE PTR [rcx],0x99
   1400124fd:	cdq    
   1400124fe:	test   eax,0x67eee6b3
   140012503:	mov    ah,0xaf
   140012505:	rol    BYTE PTR [rdx+0x62],0x33
   140012509:	ficom  WORD PTR [rdx-0x58]
   14001250c:	shl    BYTE PTR [rbx],0x41
   14001250f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012510:	rol    DWORD PTR [rbx],cl
   140012512:	fs rex.WRX
   140012514:	rex.RB movabs al,ds:0x408e36401a59f7b3
   14001251e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001251f:	pop    rbp
   140012520:	test   cl,ch
   140012522:	add    BYTE PTR [rdx-0x14ef504a],ah
   140012528:	mov    fs,WORD PTR [rbx]
   14001252a:	jae    0x14001252c
   14001252c:	add    BYTE PTR [rsi-0x52],al
   14001252f:	xor    eax,DWORD PTR [rax]
   140012531:	and    DWORD PTR [rdx-0x19],edx
   140012534:	loope  0x14001256e
   140012536:	(bad)  
   140012537:	(bad)  
   140012538:	(bad)  
   140012539:	mov    BYTE PTR [rbp+0x37],bh
   14001253c:	(bad)  
   14001253d:	jae    0x1400125a7
   14001253f:	(bad)  
   140012540:	sbb    al,0xd9
   140012542:	sbb    esp,ebx
   140012544:	fimul  DWORD PTR [rcx]
   140012546:	(bad)  
   140012547:	iret   
   140012548:	(bad)  
   140012549:	shl    BYTE PTR [rdx],1
   14001254b:	adc    al,0x7c
   14001254d:	or     ebp,DWORD PTR [rbx+0x5bd71315]
   140012553:	enter  0xa128,0xb1
   140012557:	mov    al,0xca
   140012559:	shr    ah,cl
   14001255b:	xor    cl,bl
   14001255d:	addr32 pop rsp
   14001255f:	loop   0x1400125bb
   140012561:	imul   rbp,QWORD PTR [rcx+0x2f37fec9],0xffffffffffffffa0
   140012569:	neg    esp
   14001256b:	(bad)  
   14001256c:	adc    ebp,edx
   14001256e:	je     0x140012584
   140012570:	mov    ecx,0x215a2490
   140012575:	adc    al,BYTE PTR [rbp+0x7f]
   140012578:	jg     0x140012505
   14001257a:	(bad)  
   14001257b:	push   rdi
   14001257c:	pop    rsp
   14001257d:	enter  0x9f8d,0xb
   140012581:	mov    esi,0x9fb1fae7
   140012586:	pop    rbp
   140012587:	cmp    eax,0xf13f277
   14001258c:	mov    edi,0x96f7b774
   140012591:	cmp    eax,0x803b7597
   140012596:	mov    bh,0x3e
   140012598:	mov    bl,0x3
   14001259a:	mov    eax,0x59aff806
   14001259f:	stos   BYTE PTR es:[rdi],al
   1400125a0:	movsxd ebx,DWORD PTR [rip+0xfffffffff83557ac]        # 0x138367d52
   1400125a6:	je     0x1400125e3
   1400125a8:	or     ebp,DWORD PTR [rsi-0x2b9401ff]
   1400125ae:	clc    
   1400125af:	gs push rdi
   1400125b1:	in     al,0x6f
   1400125b3:	mov    bh,0x0
   1400125b5:	pop    rdi
   1400125b6:	mov    ch,0xce
   1400125b8:	data16 out 0xb0,al
   1400125bb:	pop    rcx
   1400125bc:	(bad)  
   1400125bd:	nop
   1400125be:	sbb    ebx,DWORD PTR [rip+0x29a3b751]        # 0x169a4dd15
   1400125c4:	hlt    
   1400125c5:	and    esp,ebx
   1400125c7:	pop    rsi
   1400125c8:	outs   dx,BYTE PTR ds:[rsi]
   1400125c9:	leave  
   1400125ca:	(bad)  
   1400125cb:	repz (bad) 
   1400125cd:	out    0x5d,al
   1400125cf:	cmp    al,0x34
   1400125d1:	outs   dx,BYTE PTR ds:[rsi]
   1400125d2:	push   0xffffffffba47edf4
   1400125d7:	or     DWORD PTR ss:[rip+0xfffffffffb16d595],0xff1c39ec        # 0x13b17fb77
   1400125e2:	repz in al,dx
   1400125e4:	or     al,0xce
   1400125e6:	xor    ah,BYTE PTR [rdi+rax*2+0x58]
   1400125ea:	rex.X and al,BYTE PTR [rbp+0x51e9285]
   1400125f1:	mov    cl,0x93
   1400125f3:	jl     0x14001265d
   1400125f5:	jae    0x1400125a0
   1400125f7:	xchg   ebp,eax
   1400125f8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400125f9:	jmp    0x155b6ea59
   1400125fe:	(bad)  
   1400125ff:	pop    rdx
   140012600:	test   DWORD PTR [rax-0x5a869ca2],esi
   140012606:	rex.WB stos QWORD PTR es:[rdi],rax
   140012608:	fisub  WORD PTR [rdx-0x7af60ba8]
   14001260e:	rex
   14001260f:	gs (bad) 
   140012611:	sti    
   140012612:	outs   dx,DWORD PTR ds:[rsi]
   140012613:	out    0x3f,eax
   140012615:	retf   0xee9d
   140012618:	movabs ds:0x18fdaa9bb601d850,eax
   140012621:	ss (bad) 
   140012623:	xlat   BYTE PTR ds:[rbx]
   140012624:	retf   
   140012625:	rol    BYTE PTR [rax+0x35756624],cl
   14001262b:	in     al,0x44
   14001262d:	xor    eax,edi
   14001262f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012630:	hlt    
   140012631:	jns    0x1400126a5
   140012633:	mov    ch,0x40
   140012635:	push   rbx
   140012636:	jns    0x1400125f0
   140012638:	add    eax,0xa418c48f
   14001263d:	pop    rsp
   14001263e:	out    dx,eax
   14001263f:	loopne 0x1400125c4
   140012641:	(bad)  
   140012642:	adc    DWORD PTR [rax],ebx
   140012644:	sbb    al,BYTE PTR [rcx-0x1058b40]
   14001264b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001264c:	xor    BYTE PTR [rcx],ch
   14001264e:	(bad)  
   14001264f:	adc    al,BYTE PTR [rdx+0x48b14874]
   140012655:	cmc    
   140012656:	or     BYTE PTR [rsi-0x17],0x4f
   14001265a:	mov    ah,0xc9
   14001265c:	add    BYTE PTR [rcx+rbp*8-0x7e],ah
   140012660:	int3   
   140012661:	scas   al,BYTE PTR es:[rdi]
   140012662:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012663:	in     eax,dx
   140012664:	sub    BYTE PTR [rdx-0xc7662a6],ah
   14001266a:	xor    DWORD PTR [rdx+0x5fd8a75c],ebp
   140012670:	movsxd esp,DWORD PTR [rdi+rdx*4]
   140012673:	(bad)  
   140012674:	and    BYTE PTR [rdx+riz*8+0x74],ah
   140012678:	or     edx,0x5c
   14001267b:	or     eax,0x2df10ad5
   140012680:	test   DWORD PTR [rax+0x42cb5c12],ecx
   140012686:	scas   eax,DWORD PTR es:[rdi]
   140012687:	mul    BYTE PTR [rax]
   140012689:	lea    eax,[rbp+riz*1+0x9]
   14001268d:	rex.XB out dx,eax
   14001268f:	cmp    al,BYTE PTR [rbp+0x1057db75]
   140012695:	(bad)  
   140012696:	(bad)  
   140012697:	cdq    
   140012698:	or     eax,0x9b26366e
   14001269d:	or     al,0x55
   14001269f:	sub    BYTE PTR [rdx],al
   1400126a1:	add    cl,BYTE PTR [rdx+0x23b91685]
   1400126a7:	out    0x9d,eax
   1400126a9:	rex.WXB out 0x9c,eax
   1400126ac:	cmp    ecx,DWORD PTR [rdi]
   1400126ae:	(bad)  
   1400126af:	jge    0x140012729
   1400126b1:	cmc    
   1400126b2:	cld    
   1400126b3:	push   rbx
   1400126b4:	jg     0x1400126ab
   1400126b6:	sar    BYTE PTR [rdi],1
   1400126b8:	call   rsi
   1400126ba:	fidiv  WORD PTR [rdx+0x71d63e7]
   1400126c0:	jo     0x1400126ad
   1400126c2:	add    edi,esi
   1400126c4:	(bad)  
   1400126c5:	out    dx,eax
   1400126c6:	mov    esp,0xab86f8b5
   1400126cb:	sbb    eax,0xfe51b3c0
   1400126d0:	sub    QWORD PTR [r9-0x59],r8
   1400126d4:	or     al,0xd7
   1400126d6:	(bad)  
   1400126d7:	and    eax,0x67843b57
   1400126dc:	push   0xfffffffffffffff0
   1400126de:	jmp    0xc35e2d17
   1400126e3:	(bad)  
   1400126e4:	pop    rdi
   1400126e5:	xor    esi,edx
   1400126e7:	outs   dx,DWORD PTR ds:[rsi]
   1400126e8:	rex.WX or rsi,QWORD PTR [rsi]
   1400126eb:	xchg   esp,eax
   1400126ec:	(bad)  
   1400126ed:	mov    ebx,0x8f0b367f
   1400126f2:	pop    rbp
   1400126f3:	cmp    al,BYTE PTR [rip+0xa1f1c1a]        # 0x14a204313
   1400126f9:	rex.XB clc 
   1400126fb:	ss mov esp,0xbc0dff23
   140012701:	icebp  
   140012702:	rex.RXB js 0x140012727
   140012705:	fimul  DWORD PTR [rbp-0x52]
   140012708:	cmp    al,0x48
   14001270a:	jge    0x1400126c1
   14001270c:	(bad)  
   14001270d:	xchg   ecx,eax
   14001270e:	loop   0x140012724
   140012710:	fild   DWORD PTR [rbx+0x69ed14cb]
   140012716:	ins    BYTE PTR es:[rdi],dx
   140012717:	(bad)  
   140012718:	mov    al,0xa4
   14001271a:	mov    ebp,DWORD PTR [rbx]
   14001271c:	pop    rbp
   14001271d:	pop    rsp
   14001271e:	imul   edx,DWORD PTR [rbx-0x4cf73549],0x8f757393
   140012728:	jp     0x14001279d
   14001272a:	or     eax,0xa6e15cdf
   14001272f:	sahf   
   140012730:	sub    DWORD PTR [rsi+0x57],ebx
   140012733:	xor    al,0xdc
   140012735:	sbb    cl,BYTE PTR [rax+0x4e]
   140012738:	lods   eax,DWORD PTR ds:[rsi]
   140012739:	(bad)  
   14001273a:	sub    ah,ch
   14001273c:	xchg   ecx,eax
   14001273d:	rex.WX adc bl,BYTE PTR [rcx]
   140012740:	clc    
   140012741:	mov    cl,0xd9
   140012743:	(bad)  
   140012744:	jno    0x1400126cd
   140012746:	repz xor ah,ah
   140012749:	ja     0x1400126cb
   14001274b:	in     eax,dx
   14001274c:	lods   al,BYTE PTR ds:[rsi]
   14001274d:	stos   DWORD PTR es:[rdi],eax
   14001274e:	std    
   14001274f:	data16 jge 0x1400126f4
   140012752:	(bad)  
   140012753:	cmc    
   140012754:	cmp    DWORD PTR [rsp+rcx*1+0x18b2b310],edi
   14001275b:	icebp  
   14001275c:	cmp    ecx,DWORD PTR [rdi-0x72]
   14001275f:	jno    0x140012797
   140012761:	sbb    al,BYTE PTR [rdi+rdx*1-0x6]
   140012765:	sub    BYTE PTR [rsi+rdx*4],cl
   140012768:	adc    BYTE PTR [rsi+0x791cee22],dh
   14001276e:	(bad)  
   14001276f:	push   0xffffffffffffff93
   140012771:	shl    dh,cl
   140012773:	hlt    
   140012774:	repnz gs and bh,ch
   140012778:	shr    BYTE PTR [rsi+0x9b65af],cl
   14001277e:	add    BYTE PTR [rax],ah
   140012780:	add    BYTE PTR [rcx+0x44],cl
   140012783:	push   r12
   140012785:	add    edx,ebx
   140012787:	(bad)  
   140012788:	movabs ds:0x6e75f77ca3b4ccbd,al
   140012791:	scas   eax,DWORD PTR es:[rdi]
   140012792:	fwait
   140012793:	jle    0x140012736
   140012795:	adc    eax,DWORD PTR [rbx+0x398a138c]
   14001279b:	xchg   edi,eax
   14001279c:	(bad)  
   14001279d:	mov    esi,fs
   14001279f:	ret    0xc331
   1400127a2:	in     al,0xb8
   1400127a4:	(bad)  
   1400127a5:	lock push 0xffffffff9e62de9d
   1400127ab:	in     eax,dx
   1400127ac:	rex.XB xchg r10d,eax
   1400127ae:	sahf   
   1400127af:	xchg   edx,eax
   1400127b0:	out    0xdc,al
   1400127b2:	shl    DWORD PTR [rbp+0x2c],cl
   1400127b5:	pop    rbx
   1400127b6:	movabs ds:0xc113a0c6d437e748,al
   1400127bf:	mov    es,WORD PTR [rbx+0x2d]
   1400127c2:	rex.WX fcomip st,st(7)
   1400127c5:	rex.WRB scas al,BYTE PTR es:[rdi]
   1400127c7:	xor    al,0x4e
   1400127c9:	(bad)  
   1400127ca:	and    eax,0xc7a44a36
   1400127cf:	stos   BYTE PTR es:[rdi],al
   1400127d0:	rex.WB (bad) 
   1400127d2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400127d3:	sub    eax,0x1d0a0c2d
   1400127d8:	cmp    DWORD PTR [rdx+rsi*2+0x39c8f71a],edx
   1400127df:	jnp    0x1400127c3
   1400127e1:	mov    ah,0x7d
   1400127e3:	mov    ecx,0xb956bf1d
   1400127e9:	clc    
   1400127ea:	hlt    
   1400127eb:	(bad)  
   1400127ec:	clc    
   1400127ed:	(bad)  
   1400127ee:	or     edi,DWORD PTR [rsi+0x5ecb79b]
   1400127f4:	pop    rbx
   1400127f5:	mov    DWORD PTR [rcx],0xbedfb2dc
   1400127fb:	(bad)  
   1400127fc:	jnp    0x14001286d
   1400127fe:	leave  
   1400127ff:	mov    edi,0x6913ce83
   140012804:	movabs al,ds:0x6c95dfdaa33c5373
   14001280d:	mov    dh,0xc1
   14001280f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012810:	mov    edx,0x45372c81
   140012815:	imul   ebx,DWORD PTR [rax+0x6f],0xf36f6a04
   14001281c:	pop    rdx
   14001281d:	(bad)  
   14001281e:	pop    rdi
   14001281f:	push   rdi
   140012820:	push   rsp
   140012821:	out    dx,eax
   140012822:	(bad)  
   140012823:	(bad)  
   140012824:	fsubr  QWORD PTR [rcx+0xf]
   140012827:	out    dx,al
   140012828:	jbe    0x14001283a
   14001282a:	in     eax,dx
   14001282b:	ins    DWORD PTR es:[rdi],dx
   14001282c:	outs   dx,BYTE PTR ds:[rsi]
   14001282d:	sbb    bh,BYTE PTR [rax]
   14001282f:	mov    ah,0x41
   140012831:	xchg   edi,eax
   140012832:	(bad)  
   140012833:	jge    0x1400128b4
   140012835:	cmp    ebx,ebx
   140012837:	test   DWORD PTR [rbp+0x5d],esi
   14001283a:	add    cl,BYTE PTR [rax]
   14001283c:	jp     0x1400127ff
   14001283e:	in     eax,dx
   14001283f:	movsxd edi,DWORD PTR [rdi-0x3cc434c1]
   140012845:	(bad)  
   140012846:	jb     0x140012834
   140012848:	rex.WR popf 
   14001284a:	(bad)  
   14001284b:	ret    0x8e3e
   14001284e:	pop    rax
   14001284f:	and    DWORD PTR [rsi-0x698d7cc3],ebp
   140012855:	mov    dl,0xa7
   140012857:	call   QWORD PTR [rax+rcx*1]
   14001285a:	pushf  
   14001285b:	add    BYTE PTR [rdi-0x1b],cl
   14001285e:	mov    BYTE PTR [rsp+rcx*4-0x51],al
   140012862:	sbb    al,0xe
   140012864:	add    eax,0x338d4702
   140012869:	pop    rdx
   14001286a:	js     0x1400127f0
   14001286c:	in     eax,dx
   14001286d:	sar    DWORD PTR [rbx+riz*2],0x41
   140012871:	mov    DWORD PTR [rbp-0x47],ebx
   140012874:	cmp    al,0x8f
   140012876:	push   rdi
   140012877:	sub    eax,0xa9492256
   14001287c:	adc    al,dh
   14001287e:	mov    esi,0x87728fe9
   140012883:	cmc    
   140012884:	push   rax
   140012885:	(bad)  
   140012886:	stc    
   140012887:	fneni(8087 only) 
   140012889:	(bad)  
   14001288a:	rex.XB (bad) 
   14001288c:	push   rdi
   14001288d:	(bad)  
   14001288e:	out    dx,eax
   14001288f:	mov    esp,0xad504807
   140012894:	mov    bh,cl
   140012896:	sub    eax,0xc777a01e
   14001289b:	outs   dx,BYTE PTR ds:[rsi]
   14001289c:	or     bh,BYTE PTR [rbp-0x43]
   14001289f:	push   0xffffffffecee25cf
   1400128a4:	mov    ah,0xc9
   1400128a6:	(bad)  
   1400128a7:	(bad)  
   1400128a8:	lods   eax,DWORD PTR ds:[rsi]
   1400128a9:	cmp    eax,DWORD PTR [rcx]
   1400128ab:	imul   edx,esi,0xf2ccbd69
   1400128b1:	push   QWORD PTR [rsi]
   1400128b3:	retf   0xc3db
   1400128b6:	mov    edx,DWORD PTR [rcx]
   1400128b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400128b9:	adc    esp,ecx
   1400128bb:	gs mov dh,0x29
   1400128be:	xchg   ebx,eax
   1400128bf:	cmp    DWORD PTR [rsi],eax
   1400128c1:	mov    ecx,eax
   1400128c3:	test   BYTE PTR [rcx],cl
   1400128c5:	mov    WORD PTR es:[rcx],?
   1400128c8:	cmc    
   1400128c9:	cwde   
   1400128ca:	push   0x47a981b9
   1400128cf:	adc    al,0x3c
   1400128d1:	xchg   edi,eax
   1400128d2:	pushf  
   1400128d3:	out    0x32,eax
   1400128d5:	cmc    
   1400128d6:	je     0x14001286b
   1400128d8:	ror    DWORD PTR [rdi+0x5b],cl
   1400128db:	push   rsp
   1400128dc:	(bad)  
   1400128dd:	(bad)  
   1400128de:	movsxd esi,DWORD PTR [rsi+0x3fbfa25f]
   1400128e4:	pop    QWORD PTR [rbx-0x40]
   1400128e7:	(bad)  
   1400128e8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400128e9:	lods   eax,DWORD PTR es:[rsi]
   1400128eb:	data16 test cl,dl
   1400128ee:	add    cl,bh
   1400128f0:	mov    bh,0x68
   1400128f2:	xor    eax,0x4246db34
   1400128f7:	fsub   QWORD PTR [rbx-0x3251a699]
   1400128fd:	loopne 0x140012928
   1400128ff:	test   DWORD PTR [rbx],esp
   140012901:	xor    eax,0xa948d496
   140012906:	mov    cl,0x25
   140012908:	js     0x1400128f3
   14001290a:	pushf  
   14001290b:	jb     0x140012965
   14001290d:	retf   0x1023
   140012910:	jns    0x14001296e
   140012912:	(bad)  
   140012913:	xchg   bl,ch
   140012915:	fcom   DWORD PTR cs:[rdi+0x4e]
   140012919:	retf   0xee37
   14001291c:	jmp    0xc996cb1c
   140012921:	repz lahf 
   140012923:	fisttp DWORD PTR [rdx+0x7]
   140012926:	inc    BYTE PTR [rbp+0x6e00e3ad]
   14001292c:	fisub  DWORD PTR [rbx-0x71]
   14001292f:	mov    esp,0x1fc595f3
   140012934:	xchg   edx,eax
   140012935:	mov    dh,0x14
   140012937:	jmp    0x1400129b2
   140012939:	cmp    al,0x6c
   14001293b:	add    bh,bh
   14001293d:	(bad)  
   14001293e:	loope  0x14001298e
   140012940:	lods   al,BYTE PTR ds:[rsi]
   140012941:	scas   eax,DWORD PTR es:[rdi]
   140012942:	ror    DWORD PTR [rsi-0x75ccd42],cl
   140012948:	(bad)  
   140012949:	add    al,0x8d
   14001294b:	cmp    bh,BYTE PTR [rdx+0x3668551]
   140012951:	xchg   ecx,eax
   140012952:	and    al,0x60
   140012954:	pop    rcx
   140012955:	(bad)  
   140012956:	(bad)  [rax]
   140012958:	lods   al,BYTE PTR ds:[rsi]
   140012959:	lock outs dx,BYTE PTR cs:[rsi]
   14001295c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001295d:	std    
   14001295e:	iret   
   14001295f:	add    BYTE PTR [rsi-0x27],bh
   140012962:	mov    ebp,0xa2d4e6ce
   140012967:	cmp    edx,DWORD PTR [rbp-0x18]
   14001296a:	fiadd  DWORD PTR [rsi]
   14001296c:	in     eax,dx
   14001296d:	call   0x18b9d4481
   140012972:	(bad)  
   140012973:	clc    
   140012974:	mov    ebx,0xc1a302d3
   140012979:	jb     0x14001299c
   14001297b:	(bad)  
   14001297c:	mov    ch,ch
   14001297e:	mov    edx,0xc63b91dc
   140012983:	rcl    ah,0xb7
   140012986:	cwde   
   140012987:	pop    rax
   140012988:	jne    0x140012973
   14001298a:	sbb    DWORD PTR [rbp+riz*4-0x62ebcc31],ebx
   140012991:	cmp    BYTE PTR [rbx+rdx*8-0x1e363ebd],0xdb
   140012999:	jns    0x140012a17
   14001299b:	(bad)  [rbp-0x28c61992]
   1400129a1:	mov    esp,0x322fb488
   1400129a6:	in     al,0x46
   1400129a8:	in     al,0x2c
   1400129aa:	or     ecx,DWORD PTR [rbx-0x1b]
   1400129ad:	push   rcx
   1400129ae:	in     al,0x28
   1400129b0:	rex.WB pop r15
   1400129b3:	xchg   esi,eax
   1400129b4:	loopne 0x14001293d
   1400129b6:	imul   edi,DWORD PTR [rdi-0x3a],0xffffffed
   1400129ba:	(bad)  
   1400129bb:	and    DWORD PTR [rax],ebp
   1400129bd:	ins    BYTE PTR es:[rdi],dx
   1400129be:	rex.WRXB inc QWORD PTR [r14+0x3ec4ba49]
   1400129c5:	mov    bl,0x91
   1400129c7:	div    BYTE PTR [rdi+0x1c]
   1400129ca:	add    DWORD PTR [rax+0x62],esp
   1400129cd:	je     0x140012a02
   1400129cf:	loop   0x140012a24
   1400129d1:	jrcxz  0x140012996
   1400129d3:	mov    eax,0xa09803bd
   1400129d8:	mov    ah,dh
   1400129da:	cmp    eax,0x2feea990
   1400129df:	mov    bl,0x99
   1400129e1:	mov    edi,0x68c0a991
   1400129e6:	cmp    dl,BYTE PTR [rcx-0x6df83441]
   1400129ec:	mov    dl,0x84
   1400129ee:	mul    BYTE PTR [rdi-0x4d]
   1400129f1:	leave  
   1400129f2:	neg    DWORD PTR [rcx]
   1400129f4:	sub    r15b,sil
   1400129f7:	and    eax,0xa6099a1a
   1400129fc:	adc    DWORD PTR [rbx+0x6a],esp
   1400129ff:	sub    eax,0x569886a8
   140012a04:	or     al,0x91
   140012a06:	es ins BYTE PTR es:[rdi],dx
   140012a08:	rex.R lods eax,DWORD PTR es:[rsi]
   140012a0b:	add    al,0x81
   140012a0d:	rex.RX stc 
   140012a0f:	adc    ebx,edi
   140012a11:	xchg   BYTE PTR [rbx],al
   140012a13:	(bad)  
   140012a14:	mov    cl,0xc7
   140012a16:	fnstcw WORD PTR [rcx]
   140012a18:	mov    eax,DWORD PTR [rbp-0x70e474b6]
   140012a1e:	adc    al,0x30
   140012a20:	and    al,0x6c
   140012a22:	sub    edi,DWORD PTR [rcx-0x2b328a3c]
   140012a28:	in     eax,0x35
   140012a2a:	je     0x1400129ce
   140012a2c:	sbb    DWORD PTR [rax],ebx
   140012a2e:	xchg   esi,eax
   140012a2f:	hlt    
   140012a30:	(bad)  
   140012a31:	scas   al,BYTE PTR es:[rdi]
   140012a32:	mov    cl,0xd8
   140012a34:	(bad)  
   140012a35:	movabs al,ds:0x97c2caf2096720a0
   140012a3e:	(bad)  
   140012a3f:	scas   al,BYTE PTR es:[rdi]
   140012a40:	jb     0x140012a93
   140012a42:	ret    0xa722
   140012a45:	sbb    al,0x7c
   140012a47:	loope  0x140012aac
   140012a49:	bswap  r11
   140012a4c:	fcom   DWORD PTR [rdx+rsi*2]
   140012a4f:	xor    esi,ecx
   140012a51:	cmc    
   140012a52:	out    0xec,eax
   140012a54:	mov    ecx,DWORD PTR [rdi+0xd]
   140012a57:	mov    ebp,0x7eebcee9
   140012a5c:	cli    
   140012a5d:	retf   0xa789
   140012a60:	(bad)  
   140012a61:	(bad)  
   140012a62:	mov    DWORD PTR [rdi-0x4d20710c],edx
   140012a68:	or     eax,0xae0071d6
   140012a6d:	lods   eax,DWORD PTR ds:[rsi]
   140012a6e:	jrcxz  0x140012a67
   140012a70:	mov    esp,0x72eff4b6
   140012a75:	mov    esi,0xb23ca4e5
   140012a7a:	sti    
   140012a7b:	xchg   DWORD PTR [rbx+0x1c86f3e9],ebp
   140012a81:	pop    rbx
   140012a82:	fs fwait
   140012a84:	adc    bl,BYTE PTR [rax-0x60b0e536]
   140012a8a:	pop    rdi
   140012a8b:	stos   BYTE PTR es:[rdi],al
   140012a8c:	cld    
   140012a8d:	int    0xfd
   140012a8f:	mov    ecx,DWORD PTR [rdi-0x67c05804]
   140012a95:	(bad)  
   140012a96:	loop   0x140012ad7
   140012a98:	(bad)  
   140012a99:	pop    rbx
   140012a9a:	cmp    esi,ebp
   140012a9c:	test   eax,0xe9cd1dc8
   140012aa1:	add    DWORD PTR [rdi+0x4a],edx
   140012aa4:	jo     0x140012a63
   140012aa6:	mov    WORD PTR [rdx-0x1903fd91],gs
   140012aac:	adc    DWORD PTR [rcx+0x6bec482f],eax
   140012ab2:	xor    eax,DWORD PTR [rbx+0x39bfda2e]
   140012ab8:	add    eax,0x66ff06e9
   140012abd:	(bad)  
   140012abe:	(bad)  
   140012abf:	rex.WB
   140012ac0:	rex.XB or al,0x8
   140012ac3:	add    ebx,DWORD PTR [rsi+0x1]
   140012ac6:	cld    
   140012ac7:	add    DWORD PTR [rsi-0x1a],esi
   140012aca:	sub    bl,ah
   140012acc:	in     al,0x3d
   140012ace:	int3   
   140012acf:	stc    
   140012ad0:	jae    0x140012ac5
   140012ad2:	test   al,0xde
   140012ad4:	and    DWORD PTR [rdi+rbp*1],edi
   140012ad7:	(bad)  
   140012ad8:	adc    al,0x1
   140012ada:	push   rdx
   140012adb:	in     al,0xb0
   140012add:	rex.R sahf 
   140012adf:	pop    rax
   140012ae0:	cmp    ebx,DWORD PTR [rsp+rbp*4+0x24]
   140012ae4:	push   rsp
   140012ae5:	pop    rax
   140012ae6:	movabs eax,ds:0x12c1c6073204d7cf
   140012aef:	adc    DWORD PTR ds:[rbp-0x5e],0x9aec385f
   140012af7:	sti    
   140012af8:	sbb    ebp,DWORD PTR [rsi-0xd]
   140012afb:	(bad)  
   140012afc:	rex.WXB imul rdi,r15,0xffffffffd367f066
   140012b03:	jb     0x140012b7a
   140012b05:	ds ja  0x140012b2a
   140012b08:	jg     0x140012aa0
   140012b0a:	(bad)  
   140012b0b:	sbb    BYTE PTR [rbp+0x757f2114],cl
   140012b11:	jno    0x140012b27
   140012b13:	jnp    0x140012b89
   140012b15:	or     al,0xbb
   140012b17:	push   rax
   140012b18:	(bad)  
   140012b19:	idiv   BYTE PTR [rbp-0x5fe0e98c]
   140012b1f:	ffree  st(3)
   140012b21:	(bad)  
   140012b22:	rex.WB
   140012b23:	rex.WXB add bpl,BYTE PTR [r9-0x1a]
   140012b27:	outs   dx,DWORD PTR ds:[rsi]
   140012b28:	mov    dl,0x4a
   140012b2a:	or     al,0x2e
   140012b2d:	fwait
   140012b2e:	enter  0xc0e4,0x2c
   140012b32:	not    DWORD PTR [rsi-0x73f2b630]
   140012b38:	xchg   BYTE PTR [rax+0x63],cl
   140012b3b:	(bad)  
   140012b3c:	adc    DWORD PTR [rsi+0x11eba216],esp
   140012b42:	(bad)  
   140012b43:	ret    
   140012b44:	je     0x140012b9f
   140012b46:	xchg   edx,eax
   140012b47:	cmp    ah,BYTE PTR [rsi]
   140012b49:	and    edx,edx
   140012b4b:	rex.WB
   140012b4c:	test   DWORD PTR [r8],r10d
   140012b4f:	adc    BYTE PTR [rbx],bl
   140012b51:	or     bh,BYTE PTR [rip+0xffffffffc1f5de0d]        # 0x101f70964
   140012b57:	push   rbp
   140012b58:	not    BYTE PTR [rip+0xffffffffc3aafce0]        # 0x103ac283e
   140012b5e:	jmp    0x15d7778b6
   140012b63:	je     0x140012b8e
   140012b65:	in     eax,dx
   140012b66:	sahf   
   140012b67:	rcr    cl,0xff
   140012b6a:	or     bl,al
   140012b6c:	xchg   DWORD PTR [rsi],edx
   140012b6e:	mov    cl,0x1b
   140012b70:	jge    0x140012bce
   140012b72:	jp     0x140012b2e
   140012b74:	test   ecx,ecx
   140012b76:	pop    rbx
   140012b77:	or     al,0xed
   140012b79:	mov    dh,0x68
   140012b7b:	mov    edx,0x1092b117
   140012b80:	pop    rbx
   140012b81:	(bad)  
   140012b83:	retf   0xc5c5
   140012b86:	(bad)
   140012b89:	mov    dh,0xb0
   140012b8b:	or     BYTE PTR [rsp+rsi*2+0x47437768],ch
   140012b92:	test   BYTE PTR [rsi],al
   140012b94:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012b95:	jbe    0x140012bb0
   140012b97:	call   0x19e910fcd
   140012b9c:	je     0x140012bbc
   140012b9e:	mov    ebx,0xfe437837
   140012ba3:	xchg   BYTE PTR [rdi-0x2b034cc4],bl
   140012ba9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012baa:	rex.WRX movabs rbp,0xb803974196feb7f4
   140012bb4:	mov    esp,0x743f9a60
   140012bb9:	jnp    0x140012ba9
   140012bbb:	frstor [rbx]
   140012bbd:	jge    0x140012b8d
   140012bbf:	rex.W cmp cl,bpl
   140012bc2:	ja     0x140012b5b
   140012bc4:	add    ebp,eax
   140012bc6:	push   rsi
   140012bc7:	cli    
   140012bc8:	(bad)  
   140012bc9:	mov    edx,gs
   140012bcb:	xchg   ebx,eax
   140012bcc:	pop    rbp
   140012bcd:	push   rcx
   140012bce:	pop    rdx
   140012bcf:	(bad)  
   140012bd0:	push   rsi
   140012bd1:	sub    ebx,esp
   140012bd3:	sti    
   140012bd4:	(bad)
   140012bd8:	(bad)  
   140012bd9:	jg     0x140012bae
   140012bdb:	jg     0x140012bcd
   140012bdd:	fld    DWORD PTR [rdi+0x5667fba2]
   140012be3:	(bad)  
   140012be4:	stc    
   140012be5:	jae    0x140012b9a
   140012be7:	repnz hlt 
   140012be9:	out    0x1f,eax
   140012beb:	mov    bl,0x1e
   140012bed:	js     0x140012c6b
   140012bef:	mov    esp,0x57b3bd31
   140012bf4:	in     al,dx
   140012bf5:	sbb    ecx,DWORD PTR [rip+0x3cb0be1a]        # 0x17cb1ea15
   140012bfb:	jo     0x140012c59
   140012bfd:	scas   al,BYTE PTR es:[rdi]
   140012bfe:	jb     0x140012c02
   140012c00:	ins    DWORD PTR es:[rdi],dx
   140012c01:	xor    BYTE PTR [rsi],bh
   140012c03:	(bad)  
   140012c04:	mov    cl,0xaf
   140012c06:	cmp    esi,DWORD PTR [rip+0xffffffffe87b06b8]        # 0x1287c32c4
   140012c0c:	ins    BYTE PTR es:[rdi],dx
   140012c0d:	mov    ebx,0x8eba7d7b
   140012c12:	in     eax,0x5a
   140012c14:	rex.WRX mov ?,rsp
   140012c17:	cmp    esp,DWORD PTR [rbx+0x40]
   140012c1a:	pop    rdx
   140012c1b:	nop
   140012c1c:	out    dx,eax
   140012c1d:	rex.RXB pop r10
   140012c1f:	cmp    DWORD PTR [rsi],ecx
   140012c21:	out    0x6a,al
   140012c23:	xchg   esp,eax
   140012c24:	data16 scas al,BYTE PTR es:[rdi]
   140012c26:	jo     0x140012c8a
   140012c28:	(bad)  
   140012c29:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012c2a:	outs   dx,DWORD PTR ds:[rsi]
   140012c2b:	fisttp DWORD PTR [rax]
   140012c2d:	add    al,BYTE PTR [rdi-0x24cca72b]
   140012c33:	pop    rax
   140012c34:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012c35:	xchg   edx,eax
   140012c36:	rex.WR shl rdi,1
   140012c39:	mov    ah,0xe8
   140012c3b:	push   rcx
   140012c3c:	and    eax,0xb7c4595c
   140012c41:	or     edi,eax
   140012c43:	stos   BYTE PTR es:[rdi],al
   140012c44:	test   BYTE PTR [rbx-0x601c27f6],ch
   140012c4a:	addr32 mov edi,0xdb72127f
   140012c50:	ror    edx,0xd4
   140012c53:	(bad)  
   140012c54:	outs   dx,BYTE PTR ds:[rsi]
   140012c55:	lock ja 0x140012bd8
   140012c58:	ficom  WORD PTR [rip+0xffffffffe03a49f5]        # 0x1203b7653
   140012c5e:	rex.WRXB out 0xf3,eax
   140012c61:	mov    bh,al
   140012c63:	retf   
   140012c64:	or     esp,DWORD PTR [rbx-0x4e247c28]
   140012c6a:	or     eax,DWORD PTR [rbp-0x5c]
   140012c6d:	jmp    0x140012ce5
   140012c6f:	(bad)  
   140012c70:	cmp    dh,BYTE PTR [rdx]
   140012c72:	adc    DWORD PTR [rdi-0x30],ecx
   140012c75:	scas   al,BYTE PTR es:[rdi]
   140012c76:	call   0xd49dfde0
   140012c7b:	retf   0x2577
   140012c7e:	ins    DWORD PTR es:[rdi],dx
   140012c7f:	jmp    0x140012c45
   140012c81:	(bad)  
   140012c82:	sar    BYTE PTR [rcx+0x5304c210],cl
   140012c88:	mov    esi,DWORD PTR [rax]
   140012c8a:	lea    ecx,[rax]
   140012c8c:	ror    DWORD PTR [rax+0x53a495a1],cl
   140012c92:	test   BYTE PTR [rbp-0xd],ah
   140012c95:	(bad)  
   140012c96:	rex.WX xchg rcx,rax
   140012c98:	push   rbp
   140012c99:	pminub mm3,QWORD PTR [rdi-0x7d6d3f5b]
   140012ca0:	mov    ch,0x4a
   140012ca2:	xchg   ebp,eax
   140012ca3:	rol    BYTE PTR [rcx+0x1685a306],cl
   140012ca9:	scas   al,BYTE PTR es:[rdi]
   140012caa:	icebp  
   140012cab:	sbb    DWORD PTR [rdi-0x2e],edi
   140012cae:	(bad)  
   140012caf:	rex.WXB add bpl,BYTE PTR [r14-0x48]
   140012cb3:	rex.B jb 0x140012cff
   140012cb6:	(bad)  
   140012cb7:	movabs ds:0x9e2e7eb181c63fe2,eax
   140012cc0:	cs mov dl,0x36
   140012cc3:	add    eax,ebx
   140012cc5:	(bad)  
   140012cc6:	adc    ecx,esp
   140012cc8:	shr    BYTE PTR [rcx-0x78],0xeb
   140012ccc:	mov    eax,0x936241ca
   140012cd1:	call   0x1a15395ee
   140012cd6:	(bad)  
   140012cd7:	or     BYTE PTR [rbx+0x3492a126],al
   140012cdd:	test   al,0x9a
   140012cdf:	mov    BYTE PTR [rax],ch
   140012ce1:	(bad)  
   140012ce2:	rex.WXB movabs r11,0xd5fc2787d897eb6c
   140012cec:	scas   eax,DWORD PTR es:[rdi]
   140012ced:	(bad)  
   140012cee:	(bad)  
   140012cf0:	jg     0x140012ce5
   140012cf2:	jg     0x140012d70
   140012cf4:	js     0x140012ce4
   140012cf6:	(bad)  
   140012cf7:	(bad)  
   140012cf8:	(bad)  
   140012cf9:	mov    ebp,0x96fd3754
   140012cfe:	lods   eax,DWORD PTR ds:[rsi]
   140012cff:	pop    rbx
   140012d00:	mul    DWORD PTR [rax-0x60]
   140012d03:	in     al,0xed
   140012d05:	(bad)  
   140012d06:	sti    
   140012d07:	rex.RXB scas al,BYTE PTR es:[rdi]
   140012d09:	fucomi st,st(6)
   140012d0b:	mov    edi,0x8b5dd85a
   140012d10:	cmp    ebp,DWORD PTR [rbp-0x46]
   140012d13:	pop    rbp
   140012d14:	stc    
   140012d15:	jle    0x140012cce
   140012d17:	call   0x1735e33f2
   140012d1c:	in     al,0xc2
   140012d1e:	in     eax,0xe5
   140012d20:	fidivr DWORD PTR [rbx-0x20562002]
   140012d26:	pop    rdi
   140012d27:	lods   al,BYTE PTR ds:[rsi]
   140012d28:	stos   DWORD PTR es:[rdi],eax
   140012d29:	jno    0x140012d4c
   140012d2b:	(bad)  
   140012d2c:	xchg   edx,eax
   140012d2d:	push   rdx
   140012d2e:	(bad)  
   140012d2f:	rex.WR movabs rsi,0x8f4b5f67b038bbd8
   140012d39:	mov    ebp,0x134bf867
   140012d3e:	scas   eax,DWORD PTR es:[rdi]
   140012d3f:	mov    esp,0x92b96e69
   140012d44:	mov    ebx,0x5b027fb5
   140012d49:	rex.W
   140012d4a:	lock jae 0x140012da4
   140012d4d:	(bad)  
   140012d4e:	call   FWORD PTR [rbp+rax*1+0x6c]
   140012d52:	rol    DWORD PTR [rsi-0x4f],0x50
   140012d56:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012d57:	rex.XB sub BYTE PTR [r15-0x7d221d76],0x1f
   140012d5f:	fwait
   140012d60:	sbb    al,0x4a
   140012d62:	xlat   BYTE PTR ds:[rbx]
   140012d63:	mov    dl,0x67
   140012d65:	add    al,0x7f
   140012d67:	xchg   edi,eax
   140012d68:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012d69:	sar    BYTE PTR [rsi],1
   140012d6b:	rex.WRX movsxd r8,eax
   140012d6e:	or     eax,0xb027ebc0
   140012d73:	xor    eax,0xb85759d7
   140012d78:	clc    
   140012d79:	(bad)  
   140012d7a:	cmp    al,0x55
   140012d7c:	adc    BYTE PTR [edi],ch
   140012d7f:	out    0x81,eax
   140012d81:	test   eax,0x3934b051
   140012d86:	pop    rcx
   140012d87:	ret    0x6595
   140012d8a:	jl     0x140012d47
   140012d8c:	mov    BYTE PTR [rbx],ah
   140012d8e:	add    ch,BYTE PTR [rcx+rbx*4]
   140012d91:	movabs ds:0xe08d99c5143dd2e7,eax
   140012d9a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012d9b:	or     eax,0xefc536fe
   140012da0:	retf   0xd3fb
   140012da3:	add    eax,0x96cfe0eb
   140012da8:	or     edi,eax
   140012daa:	lock icebp 
   140012dac:	jrcxz  0x140012e2b
   140012dae:	mov    eax,0xf3b0c6db
   140012db3:	rex.RB sub al,0xd7
   140012db6:	add    esi,edx
   140012db8:	mov    bl,0x34
   140012dba:	or     DWORD PTR [rax+0x63],ecx
   140012dbd:	ss in  al,dx
   140012dbf:	jnp    0x140012dbb
   140012dc1:	pop    rbp
   140012dc2:	test   BYTE PTR [rdx+0x1b94c8c0],0x90
   140012dc9:	sbb    BYTE PTR [rax],cl
   140012dcb:	jne    0x140012dd7
   140012dcd:	cli    
   140012dce:	jp     0x140012e1a
   140012dd0:	icebp  
   140012dd1:	jne    0x140012e1e
   140012dd3:	scas   eax,DWORD PTR es:[rdi]
   140012dd4:	rex.WRXB
   140012dd5:	rex.X push 0xffffffffffffffda
   140012dd8:	xchg   DWORD PTR [rip+0xffffffffa248bd3a],ebp        # 0xe249eb18
   140012dde:	imul   edx,edi,0xfffffffc
   140012de1:	shl    BYTE PTR [rdx+0x79],0x26
   140012de5:	(bad)  
   140012de6:	ins    DWORD PTR es:[rdi],dx
   140012de7:	shl    DWORD PTR [rbp+0x3466c07c],0x57
   140012dee:	jrcxz  0x140012dd2
   140012df0:	mov    ecx,0x75932b32
   140012df5:	xchg   BYTE PTR [rdi],cl
   140012df7:	rex.WXB pop r12
   140012df9:	or     ah,BYTE PTR [rdx+rsi*1]
   140012dfc:	es xchg edi,eax
   140012dfe:	scas   eax,DWORD PTR es:[rdi]
   140012dff:	(bad)  
   140012e00:	rex.RB (bad) 
   140012e02:	jae    0x140012e17
   140012e04:	std    
   140012e05:	mov    esp,ds
   140012e07:	mov    dh,0x80
   140012e09:	cs sahf 
   140012e0b:	(bad)
   140012e0e:	sub    DWORD PTR [rbp-0x3e5f6f3f],eax
   140012e14:	rex.R mov eax,0xd16e3399
   140012e1a:	ret    0xd060
   140012e1d:	(bad)  
   140012e1e:	pop    rdx
   140012e1f:	rex.RX adc r12d,DWORD PTR [rsi]
   140012e22:	adc    dh,BYTE PTR [rdi]
   140012e24:	jno    0x140012e3f
   140012e26:	sbb    dh,BYTE PTR [rax]
   140012e28:	xor    al,0x76
   140012e2a:	pop    rbp
   140012e2b:	sub    al,0xac
   140012e2d:	jl     0x140012e08
   140012e2f:	jg     0x140012e8e
   140012e31:	fistp  QWORD PTR [rdi-0x18447203]
   140012e37:	out    dx,eax
   140012e38:	std    
   140012e39:	ret    
   140012e3a:	(bad)
   140012e3d:	pop    rdi
   140012e3e:	outs   dx,DWORD PTR ds:[rsi]
   140012e3f:	fpatan 
   140012e41:	mov    ah,0x6e
   140012e43:	(bad)  
   140012e44:	(bad)  
   140012e45:	push   0xffffffffffffffcd
   140012e47:	enter  0xa1ff,0x37
   140012e4b:	xchg   esi,eax
   140012e4c:	jle    0x140012e8e
   140012e4e:	mov    dh,0x9f
   140012e50:	rex.RB mov r13d,0x80efdd59
   140012e56:	mov    edi,0xd2bba51d
   140012e5b:	sbb    DWORD PTR [rdx-0x73],0xf4e4fd5f
   140012e62:	push   rdi
   140012e63:	out    dx,al
   140012e64:	jns    0x140012eb0
   140012e66:	(bad)  
   140012e67:	sub    BYTE PTR [rbp-0x4924864],ah
   140012e6d:	rol    al,cl
   140012e6f:	lock lock (bad) 
   140012e72:	fmul   st,st(5)
   140012e74:	scas   eax,DWORD PTR es:[rdi]
   140012e75:	pop    rcx
   140012e76:	fstp   TBYTE PTR [rdi-0x5]
   140012e79:	(bad)  
   140012e7a:	sbb    al,0xd5
   140012e7c:	jb     0x140012e45
   140012e7e:	rex.WRXB adc al,0xfa
   140012e81:	(bad)  
   140012e82:	jbe    0x140012e11
   140012e84:	rex.RXB sti 
   140012e86:	clc    
   140012e87:	(bad)  
   140012e88:	movsxd eax,DWORD PTR [rsi-0x2e3084e5]
   140012e8e:	out    0x44,eax
   140012e90:	adc    ah,ah
   140012e92:	jmp    0x12dd51f63
   140012e97:	push   rax
   140012e98:	cmp    bl,bl
   140012e9a:	out    dx,al
   140012e9b:	(bad)  
   140012e9c:	stc    
   140012e9d:	(bad)  
   140012e9e:	imul   eax,DWORD PTR [rsi],0x62
   140012ea1:	jrcxz  0x140012f1d
   140012ea3:	ins    BYTE PTR es:[rdi],dx
   140012ea4:	(bad)  
   140012ea6:	int    0xe0
   140012ea8:	out    dx,eax
   140012ea9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012eaa:	cld    
   140012eab:	fwait
   140012eac:	and    edi,edi
   140012eae:	es lock mov bh,0x3f
   140012eb2:	rex.WRXB shl BYTE PTR [r9d],cl
   140012eb6:	push   rdi
   140012eb7:	(bad)  
   140012eb8:	stos   DWORD PTR es:[rdi],eax
   140012eb9:	shl    dh,0x42
   140012ebc:	test   ecx,edx
   140012ebe:	retf   0x1e39
   140012ec1:	mov    edi,0x1e1c1828
   140012ec6:	ret    
   140012ec7:	mov    ch,0xf2
   140012ec9:	mov    eax,0x16571fb2
   140012ece:	mov    cl,0x94
   140012ed0:	mov    esp,DWORD PTR [rip+0x1e26061c]        # 0x15e2734f2
   140012ed6:	and    BYTE PTR [rdi+0x2e],ah
   140012ed9:	rex jle 0x140012f17
   140012edc:	pop    rax
   140012edd:	(bad)  
   140012ede:	cmp    ah,BYTE PTR [rax-0x201b88b3]
   140012ee4:	and    al,0xf8
   140012ee6:	cdq    
   140012ee7:	test   BYTE PTR [rsi+0x1a],cl
   140012eea:	(bad)  
   140012eeb:	mov    edx,0xf84a841c
   140012ef0:	in     al,dx
   140012ef1:	test   eax,0x8dda185e
   140012ef6:	pop    rbp
   140012ef7:	sub    BYTE PTR [rax-0x47],ah
   140012efa:	pop    rsi
   140012efb:	out    0x7,al
   140012efd:	xlat   BYTE PTR ds:[rbx]
   140012efe:	and    edi,DWORD PTR [rdi+0x7b]
   140012f01:	pop    rdi
   140012f02:	gs mov dh,0xab
   140012f05:	ror    BYTE PTR [rsi-0x6fada60a],1
   140012f0b:	sbb    BYTE PTR [rsp+rdx*1+0x63],al
   140012f0f:	(bad)  
   140012f10:	ins    DWORD PTR es:[rdi],dx
   140012f11:	loopne 0x140012f3a
   140012f13:	mov    BYTE PTR [rax-0x43],bh
   140012f16:	repnz sar BYTE PTR [rcx],1
   140012f19:	fdiv   QWORD PTR [rbp+0x3f]
   140012f1c:	nop
   140012f1d:	sahf   
   140012f1e:	sbb    eax,0x292b3a03
   140012f23:	sbb    cl,BYTE PTR [rip+0x72e452d2]        # 0x1b2e581fb
   140012f29:	(bad)  
   140012f2a:	xor    esp,ebx
   140012f2c:	rex.WRB jbe 0x140012f1d
   140012f2f:	xchg   ecx,eax
   140012f30:	push   rsp
   140012f31:	pop    rdx
   140012f32:	rex.WXB pushf 
   140012f34:	cmp    ebp,esi
   140012f36:	push   rcx
   140012f37:	popf   
   140012f38:	mov    cl,0x79
   140012f3a:	repnz (bad) 
   140012f3c:	sub    DWORD PTR [rbp+0x7a],0x21bafeb8
   140012f43:	xchg   esi,eax
   140012f44:	pop    rbx
   140012f45:	xor    eax,0x639e3cce
   140012f4a:	cli    
   140012f4b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012f4c:	iret   
   140012f4d:	sub    eax,0x8e47e8af
   140012f52:	sub    al,0x22
   140012f54:	hlt    
   140012f55:	jl     0x140012f51
   140012f57:	test   al,0x33
   140012f59:	(bad)  
   140012f5a:	xor    al,0x49
   140012f5c:	jbe    0x140012f51
   140012f5e:	fldcw  WORD PTR [rax]
   140012f60:	(bad)  
   140012f61:	movabs eax,ds:0x21d7536652b6c085
   140012f6a:	mov    cl,0x31
   140012f6c:	xor    al,0x13
   140012f6e:	jo     0x140012f83
   140012f70:	adc    ebp,0x30be6557
   140012f76:	(bad)  
   140012f78:	cld    
   140012f79:	xchg   ebx,eax
   140012f7a:	jae    0x140012f3f
   140012f7c:	rol    BYTE PTR [rcx+0x73377f6d],0xe6
   140012f83:	rcl    esi,1
   140012f85:	repz mov edi,0xb9ecb7bd
   140012f8b:	ins    BYTE PTR es:[rdi],dx
   140012f8c:	ret    
   140012f8d:	jo     0x140012f6f
   140012f8f:	pop    rdx
   140012f90:	and    ebx,DWORD PTR [rcx+0x7a]
   140012f93:	iret   
   140012f94:	imul   esi,edx,0x3f
   140012f97:	(bad)  
   140012f98:	push   rdi
   140012f99:	jb     0x140012fe5
   140012f9b:	imul   ebx,DWORD PTR [rdx],0xd6360dd0
   140012fa1:	add    DWORD PTR [rdi-0x57f83e47],esi
   140012fa7:	scas   al,BYTE PTR es:[rdi]
   140012fa8:	push   rsp
   140012fa9:	hlt    
   140012faa:	(bad)  
   140012fab:	jl     0x140013029
   140012fad:	div    BYTE PTR [rbx+0x5675558b]
   140012fb3:	pop    rcx
   140012fb4:	(bad)  
   140012fb5:	fs (bad) 
   140012fb8:	fmul   st,st(4)
   140012fba:	sub    eax,0xd5a1f63f
   140012fbf:	pop    rbp
   140012fc0:	(bad)  
   140012fc1:	jge    0x140012fc2
   140012fc3:	cmp    ecx,0xe73fe769
   140012fc9:	retf   
   140012fca:	mov    ebp,0x479ebab7
   140012fcf:	fmul   DWORD PTR [rax-0x3644e68]
   140012fd5:	leave  
   140012fd6:	(bad)
   140012fd9:	(bad)  
   140012fda:	rex.WXB fcom QWORD PTR [r8+0x4c]
   140012fde:	shr    BYTE PTR [rcx],0x6c
   140012fe1:	rex.WX or rdx,rbx
   140012fe4:	mov    ah,0x7f
   140012fe6:	jae    0x140012fb6
   140012fe8:	fisttp WORD PTR [rsi+0x5]
   140012feb:	ss sar esi,cl
   140012fee:	imul   ecx,DWORD PTR [rbp-0x407c97cf],0x3b
   140012ff5:	jne    0x140012fc0
   140012ff7:	pop    rsi
   140012ff8:	scas   eax,DWORD PTR es:[rdi]
   140012ff9:	rex.RB sti 
   140012ffb:	cmp    edi,DWORD PTR [rdi-0x22880531]
   140013001:	data16 rex.WR cmp r13b,BYTE PTR [rsi-0x6adcd440]
   140013009:	loopne 0x14001304b
   14001300b:	jle    0x140012f8f
   14001300d:	stc    
   14001300e:	push   rbx
   14001300f:	push   rdi
   140013010:	test   al,0x88
   140013012:	push   rcx
   140013013:	cli    
   140013014:	retf   0xd803
   140013017:	rol    BYTE PTR [rbx+0x18],cl
   14001301a:	fwait
   14001301b:	or     ebx,0x626792f7
   140013021:	and    edi,eax
   140013023:	(bad)  [rbp+0x411b0d7e]
   140013029:	fidiv  WORD PTR [rsi+0x2]
   14001302c:	cli    
   14001302d:	(bad)  
   14001302e:	in     eax,0xc6
   140013030:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013031:	xchg   ebp,eax
   140013032:	add    cl,BYTE PTR [rbx]
   140013034:	mov    esi,0xa5679131
   140013039:	mov    esp,0x399f2f0f
   14001303e:	or     BYTE PTR [rdi+rbx*8+0x48],0xc5
   140013043:	mov    esp,0xfdb74c34
   140013048:	sbb    al,0x42
   14001304a:	(bad)
   14001304e:	cmp    bl,BYTE PTR [rdi]
   140013050:	imul   ebp,DWORD PTR [rax+0x44],0xffffffd0
   140013054:	rex.WR rcr BYTE PTR [rcx],1
   140013057:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013059:	and    DWORD PTR [rbp+0x4f7afc8],ebp
   14001305f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013060:	push   rcx
   140013061:	(bad)  
   140013062:	adc    cl,bl
   140013064:	movabs ds:0x11dbdacea3e904c8,eax
   14001306d:	(bad)  
   14001306e:	loop   0x1400130b8
   140013070:	jrcxz  0x1400130ec
   140013072:	ss jno 0x1400130a8
   140013075:	(bad)  
   140013076:	mov    esi,0xf7e3ccb6
   14001307b:	(bad)  
   14001307c:	movabs eax,ds:0x99b2cb07bdb0301e
   140013085:	mov    edi,0x9cdd3112
   14001308a:	out    0xec,al
   14001308c:	(bad)  
   14001308d:	cli    
   14001308e:	pop    rcx
   14001308f:	cld    
   140013090:	(bad)  
   140013091:	sub    BYTE PTR [rdx],bh
   140013093:	xor    ch,ah
   140013095:	fsub   st(3),st
   140013097:	adc    dh,ch
   140013099:	jp     0x140013035
   14001309b:	and    al,0x59
   14001309d:	add    sil,BYTE PTR [rsi-0x57fb162c]
   1400130a4:	or     BYTE PTR [rax+rsi*4+0x2946c291],al
   1400130ab:	(bad)  
   1400130ac:	pop    rdi
   1400130ad:	stc    
   1400130ae:	rex.R cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400130b0:	test   DWORD PTR [rsi],edx
   1400130b2:	(bad)  
   1400130b3:	jo     0x14001311d
   1400130b5:	call   0x15063974a
   1400130ba:	push   0x5605fea2
   1400130bf:	sub    ch,BYTE PTR [rbx-0x104c349d]
   1400130c5:	fistp  DWORD PTR [rsi-0x3]
   1400130c8:	test   eax,0xfeb2f99f
   1400130cd:	(bad)  
   1400130ce:	(bad)  
   1400130cf:	fidiv  WORD PTR [rax]
   1400130d1:	and    eax,0x78bd96fc
   1400130d6:	xchg   ebx,eax
   1400130d7:	fstp   QWORD PTR [rdi]
   1400130d9:	scas   al,BYTE PTR es:[rdi]
   1400130da:	sub    al,0x33
   1400130dc:	sti    
   1400130dd:	cmc    
   1400130de:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400130df:	push   0xffffffffffffff9f
   1400130e1:	(bad)  
   1400130e2:	push   rcx
   1400130e3:	ss rex.WRB int3 
   1400130e6:	(bad)  
   1400130e7:	sub    DWORD PTR [rcx+0x16efe94b],edi
   1400130ed:	(bad)  
   1400130ee:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400130ef:	test   BYTE PTR [rbx+rsi*1+0x3e],al
   1400130f3:	fistp  DWORD PTR [rdx-0x67]
   1400130f6:	pop    rsi
   1400130f7:	in     al,0xb2
   1400130f9:	adc    BYTE PTR [rdx-0x4b],dh
   1400130fc:	push   rsp
   1400130fd:	(bad)  
   1400130fe:	pop    rax
   1400130ff:	mov    esi,0xb07ffbed
   140013104:	mov    ecx,0x76dbf0f7
   140013109:	rex.WRB pushf 
   14001310b:	pop    rsp
   14001310c:	std    
   14001310d:	pop    rcx
   14001310e:	retf   
   14001310f:	jbe    0x1400130f0
   140013111:	in     al,0x79
   140013113:	(bad)  
   140013114:	lods   eax,DWORD PTR ds:[rsi]
   140013115:	xchg   esi,eax
   140013116:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013117:	push   rbp
   140013118:	pushf  
   140013119:	addr32 jp 0x140013117
   14001311c:	(bad)  
   14001311d:	pop    rax
   14001311e:	fst    DWORD PTR [rdi-0x1b]
   140013121:	ret    
   140013122:	sub    ecx,DWORD PTR [rbp+0x7e]
   140013125:	icebp  
   140013126:	or     DWORD PTR [rcx-0x68],0x2546871f
   14001312d:	in     eax,dx
   14001312e:	mov    bl,bl
   140013130:	and    dl,ah
   140013132:	jne    0x1400130b7
   140013134:	stc    
   140013135:	pop    rdx
   140013136:	loopne 0x140013127
   140013138:	rex.WX or rbp,QWORD PTR [rsi-0x1f24eaee]
   14001313f:	ffreep st(4)
   140013141:	adc    al,0x9e
   140013143:	or     esp,edi
   140013145:	popf   
   140013146:	(bad)
   140013149:	jg     0x140013126
   14001314b:	fiadd  DWORD PTR [rax+0x2e]
   14001314e:	ins    BYTE PTR es:[rdi],dx
   14001314f:	cmp    esp,0x7e
   140013152:	scas   al,BYTE PTR es:[rdi]
   140013153:	fild   WORD PTR [rip+0x32afe9b7]        # 0x172b11b10
   140013159:	stc    
   14001315a:	shl    BYTE PTR [rdi],1
   14001315c:	or     BYTE PTR [rbx],bl
   14001315e:	and    DWORD PTR [rcx-0x686e888d],edi
   140013164:	xchg   ebx,eax
   140013165:	sbb    ebp,ebp
   140013167:	ja     0x14001319b
   140013169:	shr    DWORD PTR [rdi],0x9b
   14001316c:	sbb    DWORD PTR [rbx+0x77],0x9
   140013170:	jge    0x14001318f
   140013172:	mov    bl,bh
   140013174:	rex.RB stc 
   140013176:	xlat   BYTE PTR ds:[rbx]
   140013177:	(bad)  
   140013178:	out    0x5b,al
   14001317a:	(bad)  
   14001317b:	mov    edi,0x2beb0749
   140013180:	movabs eax,ds:0x7b13a45921a74611
   140013189:	rex.WX sub QWORD PTR [rax],rdx
   14001318c:	rex.WX
   14001318d:	fs xchg edi,eax
   14001318f:	and    eax,0x9284fd15
   140013194:	jmp    0x162a577d3
   140013199:	pop    rsi
   14001319a:	stos   DWORD PTR es:[rdi],eax
   14001319b:	popf   
   14001319c:	out    0x27,eax
   14001319e:	cwde   
   14001319f:	shl    BYTE PTR [rbp+rcx*1+0x412a9d42],1
   1400131a6:	cmp    al,bh
   1400131a8:	movabs al,ds:0x11b48869ccf538ec
   1400131b1:	test   al,0xd3
   1400131b3:	(bad)  
   1400131b4:	xchg   esp,eax
   1400131b5:	or     DWORD PTR [rdx-0x73dfc693],ecx
   1400131bb:	adc    bh,BYTE PTR [rdx-0x6]
   1400131be:	jge    0x1400131da
   1400131c0:	adc    eax,DWORD PTR [rbx+0x14]
   1400131c3:	(bad)  
   1400131c4:	pop    rsi
   1400131c5:	(bad)  
   1400131c6:	ja     0x14001315c
   1400131c8:	push   0xffffffffb0370645
   1400131cd:	icebp  
   1400131ce:	jae    0x1400131ee
   1400131d0:	mov    esi,edi
   1400131d2:	sbb    eax,0x4bd85f46
   1400131d7:	jns    0x1400131fd
   1400131d9:	rex.RXB mov r9b,0x18
   1400131dc:	push   rax
   1400131dd:	icebp  
   1400131de:	data16 sub al,0xa7
   1400131e2:	iret   
   1400131e3:	es adc al,0x82
   1400131e6:	cwde   
   1400131e7:	push   rsp
   1400131e8:	(bad)  
   1400131e9:	adc    dl,BYTE PTR [rdx]
   1400131eb:	mov    WORD PTR [rax+rax*2-0xfe9a1c0],cs
   1400131f2:	test   DWORD PTR [rbp-0x935c3d5],ecx
   1400131f8:	add    bl,bl
   1400131fa:	(bad)  
   1400131fb:	adc    esi,esi
   1400131fd:	add    al,0x7b
   1400131ff:	jo     0x140013196
   140013201:	xchg   esi,edx
   140013203:	(bad)  
   140013204:	add    ebx,DWORD PTR [rsi-0x7f]
   140013207:	repnz cmp ebp,DWORD PTR [rdi]
   14001320a:	sar    BYTE PTR [rbx],1
   14001320c:	hlt    
   14001320d:	in     eax,0xf
   14001320f:	in     al,dx
   140013210:	std    
   140013211:	in     al,0xe9
   140013213:	lahf   
   140013214:	jne    0x1400131ec
   140013216:	loop   0x140013297
   140013218:	(bad)  
   140013219:	jl     0x140013290
   14001321b:	pop    rbx
   14001321c:	(bad)  
   14001321d:	ins    DWORD PTR es:[rdi],dx
   14001321e:	jb     0x140013213
   140013220:	(bad)  
   140013221:	(bad)  
   140013222:	stc    
   140013223:	repnz repnz addr32 (bad) 
   140013227:	(bad)  
   140013228:	sbb    al,0x91
   14001322a:	mov    al,0x51
   14001322c:	lods   eax,DWORD PTR ds:[rsi]
   14001322d:	fistp  QWORD PTR [rsi+riz*8]
   140013230:	mov    esi,0x81692e0d
   140013235:	test   BYTE PTR [rbx+0x57],dh
   140013238:	ret    0xe5b5
   14001323b:	xchg   BYTE PTR [rax-0xa577bf],bl
   140013241:	idiv   BYTE PTR [rip+0x7faf43ad]        # 0x1bfb075f4
   140013247:	ja     0x140013228
   140013249:	push   rbx
   14001324a:	pop    rdi
   14001324b:	lahf   
   14001324c:	cli    
   14001324d:	rex.WB sub rax,0x79f8f79c
   140013253:	rex.RB adc al,0x26
   140013256:	xor    al,0xcc
   140013258:	sbb    al,0x13
   14001325a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001325b:	mov    edi,0xc7981e25
   140013260:	sbb    edx,DWORD PTR [rcx+0x38]
   140013263:	movsxd esi,DWORD PTR [rsi]
   140013265:	jg     0x1400132c1
   140013267:	adc    bh,BYTE PTR [rax+riz*8-0x3f]
   14001326b:	imul   esp,DWORD PTR [rdx-0x494f3447],0x77df9eb4
   140013275:	cmp    DWORD PTR [rdx+0x376404cd],0xfffffff8
   14001327c:	adc    eax,0x1bd8dcd9
   140013281:	sbb    eax,0x2b571482
   140013286:	std    
   140013287:	xlat   BYTE PTR ds:[rbx]
   140013288:	add    bh,dh
   14001328a:	xchg   BYTE PTR [rsi],ah
   14001328c:	movabs ds:0xe9eb31f80b3fd1f6,al
   140013295:	mov    edx,0xbf45538e
   14001329a:	mov    eax,0xe21b990b
   14001329f:	mul    cl
   1400132a1:	repz in al,dx
   1400132a3:	popf   
   1400132a4:	cld    
   1400132a5:	imul   eax,DWORD PTR [rsi],0xffffff9d
   1400132a8:	sbb    eax,esi
   1400132aa:	rex.RX mov dl,0x9c
   1400132ad:	(bad)  
   1400132ae:	mov    ecx,0xc077f29a
   1400132b3:	fistp  WORD PTR [rsi-0x2a]
   1400132b6:	(bad)  
   1400132b7:	idiv   DWORD PTR [rbx+0xeb27fa3]
   1400132bd:	dec    BYTE PTR [rbp+rcx*4+0x1b]
   1400132c1:	jno    0x14001325e
   1400132c3:	(bad)  
   1400132c4:	rex.WR mul BYTE PTR [rax+0x4f]
   1400132c8:	mov    bl,0xe9
   1400132ca:	mov    al,0x52
   1400132cc:	xor    BYTE PTR [rsi+0x4342faeb],0x12
   1400132d3:	(bad)
   1400132d6:	(bad)  
   1400132d7:	outs   dx,BYTE PTR ds:[rsi]
   1400132d8:	(bad)  
   1400132d9:	cwde   
   1400132da:	scas   al,BYTE PTR es:[rdi]
   1400132db:	mov    DWORD PTR [rdi+0x6653d223],0xd7edf7b2
   1400132e5:	xchg   esp,eax
   1400132e6:	out    dx,al
   1400132e7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400132e8:	lods   eax,DWORD PTR ds:[rsi]
   1400132e9:	retf   0xfb2a
   1400132ec:	ins    BYTE PTR es:[rdi],dx
   1400132ed:	fidivr DWORD PTR [rsi+0x38]
   1400132f0:	adc    eax,DWORD PTR [rcx]
   1400132f2:	test   BYTE PTR [rax+0x41],cl
   1400132f5:	sbb    eax,DWORD PTR [rbp-0x66]
   1400132f8:	push   rsi
   1400132f9:	add    bl,BYTE PTR [rsi-0x51]
   1400132fc:	xchg   ebp,esp
   1400132fe:	mov    edx,0x68b6aeac
   140013303:	(bad)  
   140013304:	and    eax,edx
   140013306:	push   rax
   140013307:	xor    esi,0xffffffc8
   14001330a:	xchg   ebp,eax
   14001330b:	jge    0x140013317
   14001330d:	jge    0x14001333d
   14001330f:	lea    ebx,[rdx-0x78]
   140013312:	fld    TBYTE PTR [rdi]
   140013314:	push   0xfffffffff5224f0e
   140013319:	sub    bh,BYTE PTR [rcx+0x69]
   14001331c:	movsxd ecx,DWORD PTR [rcx]
   14001331e:	mov    BYTE PTR [rcx],dh
   140013320:	(bad)  
   140013321:	rex.WR cli 
   140013323:	push   0x48
   140013325:	lock ins BYTE PTR es:[rdi],dx
   140013327:	xchg   DWORD PTR [rsp+rsi*2-0x61deda97],edi
   14001332e:	or     BYTE PTR [rax+0x2d],ch
   140013331:	or     eax,0x815ce272
   140013336:	(bad)  
   140013337:	pop    rax
   140013338:	jo     0x1400132f2
   14001333a:	je     0x1400132d0
   14001333c:	xor    DWORD PTR [rdi+0x17],esi
   14001333f:	jge    0x140013397
   140013341:	(bad)  
   140013343:	or     eax,0xa6f633f4
   140013348:	sub    ch,BYTE PTR [rsi+0x34]
   14001334b:	sti    
   14001334c:	jg     0x14001336c
   14001334e:	stc    
   14001334f:	(bad)  
   140013350:	bsf    ebp,ebp
   140013353:	jns    0x140013332
   140013355:	fstp   QWORD PTR [rbx-0xa]
   140013358:	pushf  
   140013359:	jbe    0x1400132f0
   14001335b:	add    edi,eax
   14001335d:	out    0xd3,al
   14001335f:	leave  
   140013360:	and    ecx,DWORD PTR [rdi]
   140013362:	lahf   
   140013363:	test   eax,0x6324937d
   140013368:	pop    rcx
   140013369:	in     eax,dx
   14001336a:	test   al,0x78
   14001336c:	xchg   ebp,eax
   14001336d:	rex.W (bad) 
   14001336f:	mov    ch,0x2c
   140013371:	rex.WB push 0x8054946
   140013377:	popf   
   140013378:	pop    rsp
   140013379:	cs sbb al,0xbb
   14001337c:	in     eax,dx
   14001337d:	ss sti 
   14001337f:	leave  
   140013380:	jnp    0x140013329
   140013382:	(bad)  
   140013384:	test   al,0x46
   140013386:	(bad)  
   140013387:	call   0xd1d3c991
   14001338c:	movabs eax,ds:0x7dea4dffa2c2b6be
   140013395:	jrcxz  0x1400133cf
   140013397:	std    
   140013398:	add    bh,BYTE PTR [rbx]
   14001339a:	scas   eax,DWORD PTR es:[rdi]
   14001339b:	mov    al,0x8a
   14001339d:	fidiv  WORD PTR ss:[rsi]
   1400133a0:	lahf   
   1400133a1:	outs   dx,DWORD PTR ds:[rsi]
   1400133a2:	out    dx,al
   1400133a3:	or     al,0xf8
   1400133a5:	inc    BYTE PTR [rdi-0x69]
   1400133a8:	pop    rax
   1400133a9:	(bad)  
   1400133aa:	sbb    DWORD PTR [rdi-0x6eb2266b],eax
   1400133b0:	mov    esp,0xffbbe91d
   1400133b5:	out    dx,al
   1400133b6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400133b7:	iret   
   1400133b8:	sbb    esi,DWORD PTR [rdx-0x5]
   1400133bb:	mul    BYTE PTR [rcx+0x6d]
   1400133be:	(bad)  
   1400133bf:	jle    0x1400133f8
   1400133c1:	mov    eax,0x4dec3aaf
   1400133c6:	fild   QWORD PTR [rdi+0x36]
   1400133c9:	jae    0x1400133c0
   1400133cb:	jnp    0x140013360
   1400133cd:	add    ebp,edx
   1400133cf:	out    dx,eax
   1400133d0:	add    edx,0x18
   1400133d3:	stos   BYTE PTR es:[rdi],al
   1400133d4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400133d5:	(bad)  
   1400133d6:	jp     0x14001344e
   1400133d8:	outs   dx,BYTE PTR ds:[rsi]
   1400133d9:	add    al,0x7f
   1400133db:	jnp    0x1400133da
   1400133dd:	int    0xf9
   1400133df:	ds sbb eax,edx
   1400133e2:	cmp    ecx,DWORD PTR [rsi+0x77ea2c81]
   1400133e8:	test   DWORD PTR [rax+rdx*8],0x8245b579
   1400133ef:	and    ecx,DWORD PTR [r13+0x15934946]
   1400133f6:	pop    rbp
   1400133f7:	mov    edx,0x29498c59
   1400133fc:	jl     0x1400133aa
   1400133fe:	rcr    edx,cl
   140013400:	jge    0x14001342d
   140013402:	mov    BYTE PTR [rcx+rsi*2-0x46],0x7d
   140013407:	and    DWORD PTR [rax],edx
   140013409:	retf   0x3480
   14001340c:	je     0x1400133ac
   14001340e:	xor    esp,DWORD PTR [rsp+rax*2]
   140013411:	idiv   ah
   140013413:	shl    esi,0xa9
   140013416:	imul   edi,DWORD PTR [rbx],0x41
   140013419:	cdq    
   14001341a:	cmp    eax,0x45a6403f
   14001341f:	push   rcx
   140013420:	sar    DWORD PTR [rsi],cl
   140013422:	fbstp  TBYTE PTR [rsp+rbx*1+0xf]
   140013426:	rex (bad) 
   140013428:	rex.WX or BYTE PTR [rbx-0x6ce79eef],bl
   14001342f:	(bad)  
   140013430:	jmp    0x166927a73
   140013435:	ins    BYTE PTR es:[rdi],dx
   140013436:	and    eax,0x61119b34
   14001343b:	xor    eax,DWORD PTR [rcx+0x7b]
   14001343e:	adc    DWORD PTR [rdi],eax
   140013440:	fidivr WORD PTR [rbx]
   140013442:	int    0x1d
   140013444:	(bad)  
   140013445:	or     ebx,DWORD PTR [rax+rsi*2]
   140013448:	scas   al,BYTE PTR es:[rdi]
   140013449:	and    edx,DWORD PTR [rax-0x1c96fdfb]
   14001344f:	or     dl,BYTE PTR [rax]
   140013451:	(bad)  
   140013452:	rcl    BYTE PTR [rdx],1
   140013454:	xchg   BYTE PTR [rsi],dl
   140013456:	xchg   BYTE PTR [rsi-0x2e],ah
   140013459:	add    BYTE PTR [rbx+0x5c6bd150],dl
   14001345f:	or     cl,bh
   140013461:	rcl    BYTE PTR [rdi-0x511a8f0c],cl
   140013467:	ds out dx,al
   140013469:	call   FWORD PTR [rdi]
   14001346b:	jge    0x140013489
   14001346d:	cmp    ebx,ebp
   14001346f:	(bad)  
   140013470:	xor    BYTE PTR [rdi-0x70],dh
   140013473:	(bad)  
   140013474:	imul   ebx,DWORD PTR [rax-0x146b94af],0xb
   14001347b:	(bad)  
   14001347c:	adc    dl,BYTE PTR [rip+0xffffffffc0f5815a]        # 0x100f6b5dc
   140013482:	leave  
   140013483:	(bad)  
   140013484:	mov    ecx,0x7c1f9d8f
   140013489:	xchg   esi,eax
   14001348a:	or     esi,DWORD PTR [rsi-0x512c309b]
   140013490:	rex.X
   140013491:	rex.X or al,0x8d
   140013494:	(bad)  
   140013495:	clc    
   140013496:	ret    0x1fe2
   140013499:	test   DWORD PTR [rbp-0x696be4d0],ecx
   14001349f:	xor    DWORD PTR [rax-0x43],0xd5357488
   1400134a6:	ss adc dh,al
   1400134a9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400134aa:	imul   edi,DWORD PTR [rcx+0x5e79626e],0x2bd8cda4
   1400134b4:	out    0x2e,eax
   1400134b6:	push   rdi
   1400134b7:	jg     0x140013495
   1400134b9:	(bad)  
   1400134ba:	jp     0x14001343f
   1400134bc:	rex.WX
   1400134bd:	rex.X jae 0x14001346d
   1400134c0:	shl    DWORD PTR [rdx+0x437328fb],0x77
   1400134c7:	loope  0x1400134bd
   1400134c9:	sbb    bl,BYTE PTR [rsp+rdi*4-0x48fd06be]
   1400134d0:	(bad)  
   1400134d1:	xchg   ebx,eax
   1400134d2:	sbb    esi,esp
   1400134d4:	call   0x1bb3501f4
   1400134d9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400134da:	(bad)  
   1400134db:	sti    
   1400134dc:	rex.WRX (bad) 
   1400134de:	cmp    BYTE PTR [rbx],bh
   1400134e0:	jle    0x1400134eb
   1400134e2:	xchg   esi,eax
   1400134e3:	scas   eax,DWORD PTR es:[rdi]
   1400134e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400134e5:	push   rcx
   1400134e6:	mov    edi,0xa06c0d9b
   1400134eb:	cld    
   1400134ec:	fwait
   1400134ed:	sub    edx,DWORD PTR [rbx]
   1400134ef:	fnstcw WORD PTR [rdx]
   1400134f1:	fst    QWORD PTR [rcx-0x503ed501]
   1400134f7:	mov    ebp,0xf1c75dfb
   1400134fc:	ins    BYTE PTR es:[rdi],dx
   1400134fd:	cmp    DWORD PTR [rdi-0x39],edi
   140013500:	mov    edx,0x238eb194
   140013505:	rcr    BYTE PTR [rbp-0x3e],1
   140013508:	jge    0x1400134a6
   14001350a:	mov    dl,0x20
   14001350c:	scas   eax,DWORD PTR es:[rdi]
   14001350d:	(bad)  
   14001350e:	sti    
   14001350f:	lods   al,BYTE PTR ds:[rsi]
   140013510:	mov    ecx,0x86ff5f66
   140013515:	(bad)  
   140013516:	(bad)  
   140013517:	mov    ebp,0x7f0dfa0e
   14001351c:	addr32 push rbx
   14001351e:	(bad)  
   14001351f:	rex
   140013520:	es (bad) 
   140013522:	cmc    
   140013523:	fldcw  WORD PTR [rip+0xffffffffd9d04ea4]        # 0x119d183cd
   140013529:	or     DWORD PTR [ecx+ecx*8-0x72],0x4c
   14001352f:	(bad)  
   140013530:	sub    BYTE PTR [rdx+0x34],ah
   140013533:	call   0x1a3387b70
   140013538:	je     0x1400134ce
   14001353a:	xchg   esi,eax
   14001353b:	bnd rex.R jbe 0x14001359b
   14001353f:	rex.RX cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013541:	jmp    0x14001355e
   140013543:	push   rdx
   140013544:	shl    BYTE PTR [rdi-0x2cf7a071],1
   14001354a:	push   rbp
   14001354b:	sbb    al,BYTE PTR [rbp+0x236190f6]
   140013551:	or     eax,0xebe8f4e9
   140013556:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013557:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013558:	fst    QWORD PTR [rdi+0x60]
   14001355b:	xor    ah,BYTE PTR [rdi+0x21]
   14001355e:	push   rbp
   14001355f:	cli    
   140013560:	movsxd r12d,DWORD PTR [rcx-0x2a9429bc]
   140013567:	xchg   ebp,eax
   140013568:	(bad)  
   140013569:	or     BYTE PTR [rax+0x5868811c],dh
   14001356f:	cmp    al,0xf9
   140013571:	test   eax,0x3f7702
   140013576:	(bad)  
   140013577:	cli    
   140013578:	add    edx,esi
   14001357a:	out    dx,al
   14001357b:	push   rcx
   14001357c:	cmp    al,0x55
   14001357e:	movabs ds:0x20244b0258280adf,al
   140013587:	adc    bl,BYTE PTR [rdx-0x46]
   14001358a:	rex.B int 0xac
   14001358d:	xor    ch,ah
   14001358f:	(bad)  
   140013590:	jae    0x1400135b6
   140013592:	ja     0x14001359c
   140013594:	(bad)  
   140013595:	(bad)  
   140013596:	jb     0x14001357f
   140013598:	sbb    ecx,DWORD PTR [rdx]
   14001359a:	adc    al,0xad
   14001359c:	(bad)  
   14001359d:	(bad)  
   14001359e:	jl     0x14001361e
   1400135a0:	nop
   1400135a1:	mov    ebx,0xdae0ac1f
   1400135a6:	rex.RXB xor r14d,r14d
   1400135a9:	ss ret 0x4a
   1400135ad:	cmc    
   1400135ae:	sbb    al,0x49
   1400135b0:	ds sbb bl,bl
   1400135b3:	std    
   1400135b4:	imul   eax,edi,0xfffffffe
   1400135b7:	fdivr  st,st(1)
   1400135b9:	repnz xlat BYTE PTR ds:[rbx]
   1400135bb:	pushf  
   1400135bc:	addr32 mov ecx,0x3cf65b70
   1400135c2:	in     al,dx
   1400135c3:	pop    rdx
   1400135c4:	mov    ecx,0x91313c94
   1400135c9:	rex.WR movabs rbp,0x1dddfb3bf5ef66fd
   1400135d3:	js     0x1400135f3
   1400135d5:	jmp    0x1400135f7
   1400135d7:	(bad)  
   1400135d8:	adc    bl,ch
   1400135da:	cmp    dl,BYTE PTR [rbx+rbx*2-0x1b0ee7bf]
   1400135e1:	(bad)  
   1400135e3:	jmp    0x1b2c11537
   1400135e8:	xlat   BYTE PTR ds:[rbx]
   1400135e9:	out    dx,al
   1400135ea:	push   rdi
   1400135eb:	mov    ebp,0x8dae1f33
   1400135f0:	jge    0x14001362a
   1400135f2:	(bad)  
   1400135f4:	jnp    0x140013661
   1400135f6:	push   rax
   1400135f7:	je     0x1400135a2
   1400135f9:	(bad)  
   1400135fa:	(bad)
   1400135fd:	(bad)  
   1400135fe:	mov    ecx,0x306ff7b2
   140013603:	or     ebx,0xfffffff8
   140013606:	mov    dh,0x85
   140013608:	push   rdx
   140013609:	add    ch,cl
   14001360b:	or     ebx,esp
   14001360d:	shl    BYTE PTR [rcx-0x191c18d9],0x6c
   140013614:	rcl    BYTE PTR [rax],0xf5
   140013617:	fidivr DWORD PTR [rsi+riz*8+0x7c]
   14001361b:	lea    esp,[rbx+0x6eed8d61]
   140013621:	add    bh,BYTE PTR [rcx-0x809c9a2]
   140013627:	outs   dx,DWORD PTR ds:[rsi]
   140013628:	outs   dx,BYTE PTR ds:[rsi]
   140013629:	lock jmp 0x13c1caf31
   14001362f:	fwait
   140013630:	(bad)  
   140013631:	and    DWORD PTR [rbp+0x1f67f68a],edi
   140013637:	sahf   
   140013638:	rex.WRXB (bad) 
   14001363a:	jg     0x140013651
   14001363c:	clc    
   14001363d:	fld    TBYTE PTR [rdx-0x2]
   140013640:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013641:	out    dx,eax
   140013642:	cmp    eax,DWORD PTR [rax]
   140013644:	(bad)  
   140013645:	jmp    0x1400135e6
   140013647:	jne    0x1400135e4
   140013649:	loop   0x1400136b2
   14001364b:	cmp    al,BYTE PTR [rax]
   14001364d:	or     DWORD PTR [rax],edx
   14001364f:	or     DWORD PTR [rsi+0x671044c0],0xffffffef
   140013656:	jne    0x14001365c
   140013658:	rex.WB or BYTE PTR [r9+0x2b],cl
   14001365c:	pop    rbp
   14001365d:	outs   dx,BYTE PTR ds:[rsi]
   14001365e:	mov    edx,0x2c08eb96
   140013663:	cmp    BYTE PTR [rip+0x3dca7929],dh        # 0x17dcbaf92
   140013669:	(bad)  
   14001366a:	push   rbx
   14001366b:	sub    cl,ah
   14001366d:	in     al,0x72
   14001366f:	sub    eax,edi
   140013671:	rex.WR test spl,0xbf
   140013675:	cmp    cl,al
   140013677:	xor    al,0x13
   140013679:	je     0x140013613
   14001367b:	cmp    eax,0x441b40eb
   140013680:	xchg   esi,eax
   140013681:	jbe    0x14001368b
   140013683:	add    ch,bl
   140013685:	sahf   
   140013686:	sub    BYTE PTR [rbx*8-0x76a6e91],ah
   14001368d:	rex.R xchg edx,eax
   14001368f:	mov    ecx,0xb5d66317
   140013694:	shl    dh,0x77
   140013697:	cdq    
   140013698:	jae    0x1400136cc
   14001369a:	popf   
   14001369b:	mov    dl,0x60
   14001369d:	jbe    0x1400136db
   14001369f:	pop    rcx
   1400136a0:	rex.RB shl DWORD PTR [r15+rdi*2-0x39],0xe8
   1400136a6:	not    bl
   1400136a8:	xchg   DWORD PTR [rbx],esi
   1400136aa:	frstor [rcx]
   1400136ac:	pop    rbx
   1400136ad:	push   rdi
   1400136ae:	rex.WX
   1400136af:	rex.B movabs eax,ds:0xf8c72fb8982843e4
   1400136b9:	pop    rcx
   1400136ba:	rol    eax,0x70
   1400136bd:	(bad)  
   1400136be:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400136bf:	jb     0x14001364a
   1400136c1:	pop    rdx
   1400136c2:	mov    esp,0x58128f4c
   1400136c7:	rex.X loop 0x140013714
   1400136ca:	(bad)  
   1400136cb:	sub    eax,0x60189e34
   1400136d0:	rex.R in eax,dx
   1400136d2:	gs mov dh,0x9a
   1400136d5:	rex jle 0x140013713
   1400136d8:	xor    eax,0x47439e77
   1400136dd:	adc    edx,DWORD PTR [rsi+rbp*4-0x38]
   1400136e1:	and    ebx,DWORD PTR [rdi+0x48]
   1400136e4:	adc    BYTE PTR [rsi-0x75],dh
   1400136e7:	loope  0x140013706
   1400136e9:	add    ebx,DWORD PTR [rbx+rdi*4-0x6c2d3d4c]
   1400136f0:	(bad)  
   1400136f1:	jbe    0x140013713
   1400136f3:	adc    ebx,ecx
   1400136f5:	stos   DWORD PTR es:[rdi],eax
   1400136f6:	(bad)  
   1400136f7:	rex.WXB lahf 
   1400136f9:	cmp    esi,ebx
   1400136fb:	pushf  
   1400136fc:	pop    rdi
   1400136fd:	mov    eax,0xb96781ff
   140013702:	sbb    BYTE PTR [rbx-0xa],0x1c
   140013706:	test   BYTE PTR [rdx+riz*2+0x4a],0x58
   14001370b:	test   eax,0x7bdfeab7
   140013710:	imul   ebp,esi,0xfffffffd
   140013713:	mov    dh,0xe3
   140013715:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013716:	jrcxz  0x140013700
   140013718:	(bad)  
   14001371a:	jne    0x140013793
   14001371c:	lea    ebx,[rsi+0x4a]
   14001371f:	nop
   140013720:	xchg   esi,eax
   140013721:	and    DWORD PTR [rdx-0x67],ebp
   140013724:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013725:	(bad)  
   140013726:	rex.WRB fistp QWORD PTR cs:[r13+0x3a]
   14001372b:	mov    eax,0xf6f7d4af
   140013730:	mul    ebp
   140013732:	retf   0xef03
   140013735:	int    0xf7
   140013737:	in     al,0x54
   140013739:	fadd   DWORD PTR [rax-0x2ccb14eb]
   14001373f:	jnp    0x140013740
   140013741:	sbb    bh,BYTE PTR [rip+0x7050473c]        # 0x1b0517e83
   140013747:	mov    cl,0x2c
   140013749:	adc    eax,0xc9b5db1a
   14001374f:	mov    ecx,0xc02d8e3e
   140013754:	add    cl,bl
   140013756:	mov    cl,0x71
   140013758:	ins    DWORD PTR es:[rdi],dx
   140013759:	fwait
   14001375a:	push   rsi
   14001375b:	rex.WRX
   14001375c:	repnz mov bh,0x13
   14001375f:	adc    eax,0x39d5afb6
   140013764:	cwde   
   140013765:	mov    eax,ecx
   140013767:	in     eax,dx
   140013768:	rex.WRB
   140013769:	rex.RXB int 0x6d
   14001376c:	add    bl,dh
   14001376e:	jae    0x1400137a4
   140013770:	clc    
   140013771:	pop    rsp
   140013772:	or     edi,esp
   140013774:	ins    BYTE PTR es:[rdi],dx
   140013775:	add    bh,bh
   140013777:	cli    
   140013778:	(bad)  
   140013779:	iret   
   14001377a:	(bad)  
   14001377b:	fld    QWORD PTR [rax+0x6f]
   14001377e:	(bad)  
   14001377f:	(bad)  
   140013780:	mov    ah,dh
   140013782:	es (bad) 
   140013784:	adc    eax,DWORD PTR [rdx-0x24]
   140013787:	test   BYTE PTR [rcx+rcx*1+0x2aa21d49],ah
   14001378e:	(bad)  
   14001378f:	adc    eax,0xaa20d708
   140013794:	fs (bad) 
   140013796:	stos   DWORD PTR es:[rdi],eax
   140013797:	adc    BYTE PTR [rbp-0x1ef943bf],ch
   14001379d:	sub    al,BYTE PTR [rbx+rbp*1+0x10abf7d9]
   1400137a4:	lods   eax,DWORD PTR ds:[rsi]
   1400137a5:	fs scas eax,DWORD PTR es:[rdi]
   1400137a7:	(bad)  [rdi-0x68]
   1400137aa:	mov    ebp,0x75b256b6
   1400137af:	xchg   edi,eax
   1400137b0:	push   r12
   1400137b2:	cdq    
   1400137b3:	pushf  
   1400137b4:	xor    DWORD PTR [rbx+rsi*2],ebx
   1400137b7:	pop    rsi
   1400137b8:	xchg   ebp,eax
   1400137b9:	jbe    0x1400137bd
   1400137bb:	out    0xf2,al
   1400137bd:	jmp    0x10f6b08b7
   1400137c2:	mov    esi,0x9c4c130e
   1400137c7:	(bad)  
   1400137c8:	repnz or eax,0xc433b20
   1400137ce:	rex.WR
   1400137cf:	rex.RXB ror DWORD PTR [r15-0x61],1
   1400137d3:	test   BYTE PTR [rcx+0x3a],0x4e
   1400137d7:	shl    BYTE PTR [rcx+rbp*4+0x8b1f740],0x40
   1400137df:	push   0x6a104d93
   1400137e4:	rol    BYTE PTR [rcx+rax*2-0x51],cl
   1400137e8:	cmp    esi,DWORD PTR [rdi+0x27596136]
   1400137ee:	and    bh,BYTE PTR ds:[rbx-0xe]
   1400137f2:	jo     0x14001386a
   1400137f4:	sahf   
   1400137f5:	push   rdx
   1400137f6:	(bad)  
   1400137f7:	rex.B jnp 0x1400137d0
   1400137fa:	xchg   ecx,eax
   1400137fb:	push   rsi
   1400137fc:	sub    esp,DWORD PTR [rdx]
   1400137fe:	(bad)  
   1400137ff:	xor    eax,0xd8a5de7e
   140013804:	jmp    0x1400137b6
   140013806:	jp     0x1400137d1
   140013808:	xor    BYTE PTR [rcx+0x4e],dh
   14001380b:	jae    0x140013801
   14001380d:	xor    eax,0x68b134fd
   140013812:	(bad)  
   140013813:	mov    bl,0x78
   140013815:	add    cl,0xc2
   140013818:	xchg   edx,eax
   140013819:	add    al,bh
   14001381b:	not    BYTE PTR [rcx]
   14001381d:	cmc    
   14001381e:	adc    bl,BYTE PTR [rdi-0x8]
   140013821:	mov    bl,0x7e
   140013823:	sahf   
   140013824:	clc    
   140013825:	push   rsi
   140013826:	int3   
   140013827:	scas   al,BYTE PTR es:[rdi]
   140013828:	movabs ds:0x2cf80e0cd3f94b16,eax
   140013831:	rex.WRX fidivr DWORD PTR [rsi+r14*8]
   140013835:	test   rsp,rbx
   140013838:	pop    rsi
   140013839:	(bad)  
   14001383a:	mov    cl,0xfe
   14001383c:	adc    BYTE PTR [rbp-0xe067717],0x26
   140013843:	rex.B (bad) 
   140013845:	(bad)  
   140013846:	or     ecx,ecx
   140013848:	int    0xfe
   14001384a:	scas   eax,DWORD PTR es:[rdi]
   14001384b:	jle    0x140013831
   14001384d:	imul   ebp,DWORD PTR [rbx-0x1],0xfffffff0
   140013851:	mov    cl,0xcb
   140013853:	iret   
   140013854:	jb     0x140013877
   140013856:	mov    bh,0xec
   140013858:	pop    rcx
   140013859:	in     al,dx
   14001385a:	pop    rdx
   14001385b:	(bad)  
   14001385c:	rol    BYTE PTR [rax],0xea
   14001385f:	in     al,0xe5
   140013861:	fs loop 0x140013859
   140013864:	xchg   esp,ebp
   140013866:	fwait
   140013867:	test   BYTE PTR [rip+0xffffffff9f857b39],0xcf        # 0xdf86b3a7
   14001386e:	lock fs ins DWORD PTR es:[rdi],dx
   140013871:	add    al,0xbf
   140013873:	push   rax
   140013874:	cmp    cl,BYTE PTR [rbp-0x63a0a530]
   14001387a:	pop    rax
   14001387b:	imul   edi,DWORD PTR [rip+0x177df6bc],0x7fdf7f6c        # 0x1577f2f41
   140013885:	sub    BYTE PTR [rdi],cl
   140013887:	xchg   edi,eax
   140013888:	repz (bad) 
   14001388a:	mov    BYTE PTR [rbp-0x7b],ah
   14001388d:	mov    ecx,0xfa9bbe1
   140013892:	sahf   
   140013893:	ret    0x3bcb
   140013896:	add    al,0x79
   140013898:	(bad)  
   140013899:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001389a:	sar    BYTE PTR [rcx-0x38],cl
   14001389d:	pop    rsp
   14001389e:	mov    esi,0x125814b1
   1400138a4:	in     eax,0x28
   1400138a6:	rex.WX sahf 
   1400138a8:	(bad)  
   1400138a9:	jrcxz  0x140013886
   1400138ab:	xor    al,0x4c
   1400138ad:	or     al,0x52
   1400138af:	jo     0x140013920
   1400138b1:	and    eax,0xdcabcb86
   1400138b6:	shl    BYTE PTR [rdi-0x40],cl
   1400138b9:	sub    eax,0xbdd37282
   1400138be:	jmp    0x14001390e
   1400138c0:	add    eax,0xddcfa6e4
   1400138c5:	(bad)  
   1400138c6:	mov    DWORD PTR [rsi+0x67],ebp
   1400138c9:	mov    cl,0x41
   1400138cb:	mov    ebx,0x80375ec8
   1400138d0:	jg     0x140013945
   1400138d2:	stos   BYTE PTR es:[rdi],al
   1400138d3:	ror    BYTE PTR [rsi-0x5c059e20],1
   1400138d9:	sbb    edx,DWORD PTR [rax]
   1400138db:	(bad)  
   1400138dc:	and    BYTE PTR [rsi+0xc95242],ch
   1400138e2:	mov    ebp,0x92156102
   1400138e7:	sbb    al,ah
   1400138e9:	cmc    
   1400138ea:	(bad)  
   1400138eb:	add    DWORD PTR [rcx*8-0x4c51b70b],esp
   1400138f2:	push   0x35f4926e
   1400138f7:	jmp    0x18abd3452
   1400138fc:	sbb    ebp,0xffffffe2
   1400138ff:	movabs al,ds:0x98ab823ada00d2e8
   140013908:	cwde   
   140013909:	or     edi,DWORD PTR [rax-0x38]
   14001390c:	mov    esi,0x83d8b705
   140013911:	adc    esp,esp
   140013913:	adc    BYTE PTR [rdx-0x5e],al
   140013916:	rex.XB lea ecx,[r14]
   140013919:	jne    0x140013935
   14001391b:	lea    ecx,[rbp-0x72e864b2]
   140013921:	out    dx,al
   140013922:	xchg   esp,eax
   140013923:	repz push rdx
   140013925:	ss sahf 
   140013927:	xchg   esi,eax
   140013928:	out    dx,eax
   140013929:	ficom  DWORD PTR [rcx-0x2c2ae242]
   14001392f:	ds loop 0x1400139a8
   140013932:	mov    dh,0x21
   140013934:	xor    dl,BYTE PTR [rsi]
   140013936:	nop
   140013937:	sub    DWORD PTR [rsi+riz*2],eax
   14001393a:	sbb    eax,0xcf4469dc
   14001393f:	mov    edx,0x965bb0b
   140013944:	rex.WRB mov r14b,0x2e
   140013947:	pop    rbp
   140013948:	jmp    0x1400138d5
   14001394a:	cmc    
   14001394b:	jge    0x14001398e
   14001394d:	adc    BYTE PTR [rdi-0x66],al
   140013950:	cmp    ax,0xd94a
   140013954:	rex scas eax,DWORD PTR es:[rdi]
   140013956:	(bad)  
   140013957:	loop   0x1400139d1
   140013959:	popf   
   14001395a:	mov    ecx,0x5f471a95
   14001395f:	push   rbp
   140013960:	fs sub eax,0x79e9a90a
   140013966:	adc    al,0x9
   140013968:	sahf   
   140013969:	je     0x140013944
   14001396b:	loope  0x14001395c
   14001396d:	(bad)  
   14001396f:	shl    ebx,1
   140013971:	cmp    DWORD PTR [rdi-0x2846a370],0x62daad61
   14001397b:	fild   QWORD PTR [rbp+0x2e]
   14001397e:	add    ebp,DWORD PTR [rsi-0x77]
   140013981:	xchg   edx,eax
   140013982:	push   rbp
   140013983:	(bad)  
   140013984:	rex.WRXB movabs r9,0xbe1c9bbbf811ba97
   14001398e:	mov    ecx,0x23c795c4
   140013993:	(bad)  
   140013994:	push   rbp
   140013995:	test   al,0x57
   140013997:	sub    edi,DWORD PTR [rsi]
   140013999:	xchg   ebx,eax
   14001399a:	jae    0x140013973
   14001399c:	xchg   edi,eax
   14001399d:	jg     0x14001398b
   14001399f:	out    0xbf,eax
   1400139a1:	mov    al,0x72
   1400139a3:	fistp  WORD PTR [rdi-0x1cab293]
   1400139a9:	and    ch,ah
   1400139ab:	cdq    
   1400139ac:	sbb    BYTE PTR [rax+0x2],al
   1400139af:	xor    BYTE PTR [rsi],bh
   1400139b1:	adc    ebx,DWORD PTR [rbp+0x79]
   1400139b4:	jmp    FWORD PTR [rbx+0x73]
   1400139b7:	(bad)  
   1400139b8:	loopne 0x140013975
   1400139ba:	scas   al,BYTE PTR es:[rdi]
   1400139bb:	xchg   ebp,eax
   1400139bc:	(bad)  
   1400139bd:	jmp    0x193bd08ab
   1400139c2:	pop    rsi
   1400139c3:	sub    DWORD PTR [rsi+riz*1+0x5a9ec49],esp
   1400139ca:	mov    esi,0xdfa7f9fe
   1400139cf:	cld    
   1400139d0:	mov    edx,0x7b435da1
   1400139d5:	sub    eax,0x6ad9a1c7
   1400139da:	mov    al,0x36
   1400139dc:	cld    
   1400139dd:	sub    BYTE PTR [rbx-0x3d],cl
   1400139e0:	pop    rdi
   1400139e1:	rex.RXB add al,0x31
   1400139e4:	outs   dx,BYTE PTR ds:[rsi]
   1400139e5:	push   rcx
   1400139e6:	(bad)  
   1400139e7:	jnp    0x1400139fb
   1400139e9:	test   ecx,eax
   1400139eb:	xchg   ecx,eax
   1400139ec:	adc    ah,ch
   1400139ee:	sub    ah,BYTE PTR [rbx+rdx*4-0x46bf7fc6]
   1400139f5:	add    al,0x96
   1400139f7:	and    DWORD PTR [rbp+0x48474614],0x6d
   1400139fe:	rcl    BYTE PTR [rdx-0x353f65c4],0xb9
   140013a05:	gs pop rsi
   140013a07:	push   rdi
   140013a08:	mov    es,eax
   140013a0a:	jmp    0x140013a11
   140013a0c:	(bad)  
   140013a0d:	retf   
   140013a0e:	out    dx,al
   140013a0f:	data16 mov cl,0xb1
   140013a12:	int3   
   140013a13:	ja     0x140013a2a
   140013a15:	in     eax,0xef
   140013a17:	mov    ?,esp
   140013a19:	fwait
   140013a1a:	sar    DWORD PTR [rdi+0x19342059],0xf5
   140013a21:	(bad)  
   140013a22:	push   rbx
   140013a23:	adc    bh,al
   140013a25:	(bad)  
   140013a26:	cmc    
   140013a27:	enter  0x549d,0xb3
   140013a2b:	gs or  eax,0xe1d02d30
   140013a31:	cmp    bl,BYTE PTR [rbp-0x2d072d11]
   140013a37:	push   rdi
   140013a38:	mov    cl,0x69
   140013a3a:	div    BYTE PTR [r14-0x1793f853]
   140013a41:	cli    
   140013a42:	jmp    0x140013a6e
   140013a44:	add    ebp,DWORD PTR [rsi+0x5e]
   140013a47:	(bad)  
   140013a48:	scas   al,BYTE PTR es:[rdi]
   140013a49:	add    al,0xb4
   140013a4b:	mov    ch,0x4
   140013a4d:	add    DWORD PTR [rsi-0x6a7a0c36],ebx
   140013a53:	jmp    0x140013a45
   140013a55:	cli    
   140013a56:	(bad)  
   140013a57:	push   rcx
   140013a58:	sahf   
   140013a59:	(bad)  
   140013a5a:	rol    BYTE PTR [rdx],1
   140013a5c:	sbb    eax,0xdd7c1d65
   140013a61:	mov    ah,0xbe
   140013a63:	pop    rbp
   140013a64:	jno    0x140013a4e
   140013a66:	push   rax
   140013a67:	je     0x140013aaa
   140013a69:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013a6a:	jp     0x140013acc
   140013a6c:	mov    dl,0x53
   140013a6e:	(bad)  
   140013a6f:	push   rbp
   140013a70:	xchg   ebp,eax
   140013a71:	push   0xffffffffda369cfb
   140013a76:	fstp   TBYTE PTR [rsi]
   140013a78:	or     DWORD PTR [rdx],esi
   140013a7a:	pop    rdi
   140013a7b:	(bad)  
   140013a7c:	data16 adc BYTE PTR [rbx+rbx*8-0x18],ah
   140013a81:	fidivr DWORD PTR [rbx+rbx*8+0x69]
   140013a85:	mov    ah,0x77
   140013a87:	pop    rcx
   140013a88:	mov    ah,0xd3
   140013a8a:	sub    BYTE PTR [rsi+0x1b46cd61],0xc2
   140013a91:	push   rsi
   140013a92:	mov    WORD PTR [rbx+0x5b],fs
   140013a95:	in     al,0xa
   140013a97:	(bad)  
   140013a98:	(bad)  
   140013a99:	(bad)  
   140013a9a:	scas   al,BYTE PTR es:[rdi]
   140013a9b:	push   rbx
   140013a9c:	pop    rcx
   140013a9d:	rex.WRB cmp r12b,r14b
   140013aa0:	mov    dh,BYTE PTR [rdx]
   140013aa2:	retf   
   140013aa3:	data16 (bad) 
   140013aa5:	pop    rdi
   140013aa6:	rex.R mov WORD PTR [rcx+0x53105807],?
   140013aad:	fdivr  st(5),st
   140013aaf:	xlat   BYTE PTR ds:[rbx]
   140013ab0:	ss xor eax,edi
   140013ab3:	(bad)  
   140013ab4:	sbb    ah,bl
   140013ab6:	cdq    
   140013ab7:	addr32 imul cl
   140013aba:	cwde   
   140013abb:	xor    esi,edi
   140013abd:	cmp    BYTE PTR [rax+rcx*4],ch
   140013ac0:	rex.RX outs dx,BYTE PTR gs:[rsi]
   140013ac3:	push   0xffffffffffffffd0
   140013ac5:	(bad)  
   140013ac6:	and    al,dh
   140013ac8:	push   rdi
   140013ac9:	retf   0xfdfc
   140013acc:	scas   eax,DWORD PTR es:[rdi]
   140013acd:	sub    al,0xb2
   140013acf:	mov    eax,0x1cb6a758
   140013ad4:	movabs ds:0x1a5f9e85b37a9762,eax
   140013add:	sub    eax,0xb9d9eb4e
   140013ae2:	leave  
   140013ae3:	iret   
   140013ae4:	(bad)  
   140013ae5:	clc    
   140013ae6:	or     al,0xf7
   140013ae8:	repnz xchg esi,eax
   140013aea:	cmp    eax,0x3d5b3d8b
   140013aef:	push   rbp
   140013af0:	pop    rbp
   140013af1:	pop    rsi
   140013af2:	rex.W
   140013af3:	data16 jnp 0x140013b69
   140013af6:	es mov eax,0x9b7b80ed
   140013afc:	hlt    
   140013afd:	add    dh,BYTE PTR [rax+0x3a491814]
   140013b03:	mov    ch,0x8d
   140013b05:	xor    al,0xa9
   140013b07:	mov    ah,0x2c
   140013b09:	lea    edx,[rcx]
   140013b0b:	push   0xffffffffffffffe9
   140013b0d:	mov    edi,0x53d6f67e
   140013b12:	rex.WXB mov WORD PTR [r14-0x5df9d7cb],?
   140013b19:	pop    rsi
   140013b1a:	ins    DWORD PTR es:[rdi],dx
   140013b1b:	nop
   140013b1c:	or     al,0x5f
   140013b1e:	(bad)  
   140013b1f:	jbe    0x140013b0d
   140013b21:	mov    esp,DWORD PTR [rcx+rdi*4]
   140013b24:	sbb    dl,BYTE PTR [rsi-0x3f]
   140013b27:	loopne 0x140013b21
   140013b29:	adc    ah,BYTE PTR [rbp+0x5852b60c]
   140013b2f:	sahf   
   140013b30:	mov    ebp,ebp
   140013b32:	cmp    BYTE PTR [rax-0x62],bl
   140013b35:	ret    0x6cb3
   140013b38:	pop    rsp
   140013b39:	adc    al,0x18
   140013b3b:	rex.XB lods al,BYTE PTR ds:[rsi]
   140013b3d:	and    ebp,DWORD PTR [rax+riz*1+0x36]
   140013b41:	(bad)  
   140013b42:	xchg   esp,eax
   140013b43:	(bad)  
   140013b44:	mov    bl,0x5
   140013b46:	addr32 sub al,0xc9
   140013b49:	in     eax,0xd3
   140013b4b:	sub    edi,DWORD PTR [rcx+rsi*4+0x4f95023f]
   140013b52:	addr32 repz rex.WB out 0xae,eax
   140013b57:	loop   0x140013b83
   140013b59:	adc    eax,esi
   140013b5b:	(bad)  
   140013b5c:	mov    ah,0xbf
   140013b5e:	pop    rbx
   140013b5f:	adc    al,0xeb
   140013b62:	(bad)  
   140013b63:	mov    ebp,0x2cb5f603
   140013b68:	mov    dl,0xd7
   140013b6a:	ror    BYTE PTR [rax-0x51],cl
   140013b6d:	and    edi,DWORD PTR [rdx]
   140013b6f:	pop    rbp
   140013b70:	jns    0x140013b22
   140013b72:	sub    DWORD PTR [rip+0xfffffffff7743ec8],ecx        # 0x137757a40
   140013b78:	icebp  
   140013b79:	ja     0x140013bcd
   140013b7b:	test   DWORD PTR [rbp+rdi*1-0x66],esp
   140013b7f:	outs   dx,DWORD PTR ds:[rsi]
   140013b80:	cs icebp 
   140013b82:	ins    DWORD PTR es:[rdi],dx
   140013b83:	adc    BYTE PTR [rbx],al
   140013b85:	xchg   ebx,eax
   140013b86:	cmc    
   140013b87:	in     eax,0x6d
   140013b89:	(bad)  
   140013b8a:	(bad)  
   140013b8b:	xchg   edx,eax
   140013b8c:	mov    WORD PTR [rsi-0x344a1499],fs
   140013b92:	and    BYTE PTR [rsi],0x6
   140013b95:	rex.WXB adc QWORD PTR [r15],rsp
   140013b98:	add    eax,0x8f57efe
   140013b9d:	stos   BYTE PTR es:[rdi],al
   140013b9e:	cmp    BYTE PTR [rax+0x650806ed],al
   140013ba4:	jne    0x140013ba6
   140013ba6:	mov    dh,0x21
   140013ba8:	sub    esp,DWORD PTR [rcx]
   140013baa:	jae    0x140013bae
   140013bac:	pop    rcx
   140013bad:	fild   WORD PTR [rcx+0x4da11a10]
   140013bb3:	pop    rdx
   140013bb4:	shl    DWORD PTR [rdi],cl
   140013bb6:	(bad)  
   140013bb7:	popf   
   140013bb8:	mov    al,0x1e
   140013bba:	int    0x4d
   140013bbc:	mov    dh,0x4e
   140013bbe:	push   rdi
   140013bbf:	mov    esi,0xb4692ddf
   140013bc4:	(bad)  
   140013bc5:	sub    ah,BYTE PTR [rbp+0x138e81ec]
   140013bcb:	fnstcw WORD PTR [rdx+rbp*2]
   140013bce:	pop    rcx
   140013bcf:	mov    al,0xfe
   140013bd1:	mov    esi,0xfb644093
   140013bd6:	es adc eax,0x8e22ae78
   140013bdc:	adc    ebp,DWORD PTR [rdi+rax*2]
   140013bdf:	loope  0x140013bc8
   140013be1:	sbb    al,0xce
   140013be3:	fsub   DWORD PTR ds:[rbx+rbx*8-0x50]
   140013be8:	rex.RXB mov r12b,0xf7
   140013beb:	or     bl,BYTE PTR [rsi+0x6de6316e]
   140013bf1:	out    0x1b,eax
   140013bf3:	lahf   
   140013bf4:	sbb    esp,ecx
   140013bf6:	fidivr WORD PTR [rdi]
   140013bf8:	out    dx,eax
   140013bf9:	movsxd esp,DWORD PTR [rax-0x4c647741]
   140013bff:	or     BYTE PTR [rdx],al
   140013c01:	minps  xmm2,XMMWORD PTR [rbx+0x5c]
   140013c05:	mov    esi,0x21aa260f
   140013c0a:	(bad)  
   140013c0b:	mov    esi,0x635a87b1
   140013c10:	xchg   ebp,eax
   140013c11:	mov    bl,0xff
   140013c13:	sub    cl,dl
   140013c15:	push   rbp
   140013c16:	(bad)  
   140013c17:	gs sbb al,0x84
   140013c1a:	xor    dh,BYTE PTR [rdx+rbp*8]
   140013c1d:	rex.WRB loop 0x140013c48
   140013c20:	and    al,0x49
   140013c22:	hlt    
   140013c23:	imul   ecx,DWORD PTR [rsi+rbp*4+0x5facd7dc],0xffffffd9
   140013c2b:	rex.WX add rax,0xffffffff9b3da05e
   140013c31:	add    ecx,DWORD PTR [rax-0x7a]
   140013c34:	xchg   DWORD PTR [rdi+0x6d7c3fd5],eax
   140013c3a:	(bad)  
   140013c3b:	(bad)  
   140013c3c:	fistp  DWORD PTR [rsi-0x17]
   140013c3f:	mov    ebp,0x1ed97b7e
   140013c44:	(bad)  
   140013c45:	addps  xmm5,XMMWORD PTR [rdi]
   140013c48:	(bad)  
   140013c49:	retf   
   140013c4a:	or     esi,DWORD PTR ss:[rax-0xb818141]
   140013c51:	sar    DWORD PTR [rdi+0x7c],cl
   140013c54:	iret   
   140013c55:	sub    edi,0xcf390af3
   140013c5b:	jno    0x140013cca
   140013c5d:	mov    al,0x43
   140013c5f:	ret    0xef5b
   140013c62:	movsxd edx,DWORD PTR [rbp-0x3bd6bbd7]
   140013c68:	leave  
   140013c69:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013c6a:	xor    eax,0xf0b6db66
   140013c6f:	mov    eax,DWORD PTR [rcx]
   140013c71:	mov    dh,0x9f
   140013c73:	movabs ds:0x25120e017929e768,eax
   140013c7c:	sub    eax,0x13a0d68c
   140013c81:	xchg   esp,eax
   140013c82:	test   ah,al
   140013c84:	sbb    BYTE PTR [rcx+rbp*1],bl
   140013c87:	jo     0x140013cc6
   140013c89:	rcl    dh,0x9c
   140013c8c:	mov    dl,0xc
   140013c8e:	(bad)  
   140013c8f:	(bad)  
   140013c90:	pop    rdi
   140013c91:	out    0x1d,al
   140013c93:	mov    ebp,0x70793811
   140013c98:	jae    0x140013c83
   140013c9a:	(bad)  
   140013c9b:	pop    rsi
   140013c9c:	stos   DWORD PTR es:[rdi],eax
   140013c9d:	(bad)  
   140013c9e:	fist   WORD PTR [rsi]
   140013ca0:	sti    
   140013ca1:	cmp    al,BYTE PTR [rdx-0x44fe6da1]
   140013ca7:	sahf   
   140013ca8:	out    0xd5,al
   140013caa:	jno    0x140013cd9
   140013cac:	(bad)  
   140013cad:	in     al,dx
   140013cae:	cmp    ah,BYTE PTR [rbx+0x19bb9dea]
   140013cb4:	movs   BYTE PTR es:[rdi],BYTE PTR ss:[rsi]
   140013cb6:	add    eax,0xe6cdeba6
   140013cbb:	movabs eax,ds:0xbebe3aeee8721bbb
   140013cc4:	jp     0x140013d3f
   140013cc6:	pop    rbx
   140013cc7:	or     al,0xec
   140013cc9:	jbe    0x140013cd5
   140013ccb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013ccc:	sub    ebx,edx
   140013cce:	ja     0x140013c90
   140013cd0:	(bad)  
   140013cd2:	jmp    0xf94ffbd9
   140013cd7:	mov    edx,0xe67cf370
   140013cdc:	retf   0x545e
   140013cdf:	iret   
   140013ce0:	or     BYTE PTR [rdx],ch
   140013ce2:	enter  0x6ca1,0x3b
   140013ce6:	test   DWORD PTR [rdx+0x16],ebx
   140013ce9:	loope  0x140013cbc
   140013ceb:	add    al,BYTE PTR [rsi+riz*1+0x2]
   140013cef:	sbb    al,BYTE PTR [rbx-0x1eab16cf]
   140013cf5:	jmp    0x15ad44d2d
   140013cfa:	add    BYTE PTR [rdx+0x1d],bh
   140013cfd:	lods   al,BYTE PTR ds:[rsi]
   140013cfe:	jmp    0x15ba8a79c
   140013d03:	fldcw  WORD PTR [rcx+0x74d980ec]
   140013d09:	add    DWORD PTR ds:[rcx-0x68],0xfffffff4
   140013d0e:	sbb    DWORD PTR [rcx+0x1b0c6322],eax
   140013d14:	rex.WRXB
   140013d15:	rex.RXB mov r10d,0x90d07b6e
   140013d1b:	imul   esp,DWORD PTR [rdi-0x5adf25fd],0x3a15f7c4
   140013d25:	rex.WX
   140013d26:	rex.W ret 0x5a18
   140013d2a:	xchg   edx,eax
   140013d2b:	cli    
   140013d2c:	(bad)  
   140013d2d:	es rex.WB cmp al,0x82
   140013d31:	pop    rbx
   140013d32:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013d33:	mov    cl,0xc6
   140013d35:	cs xchg ebx,eax
   140013d37:	mov    esp,DWORD PTR [rbx+0x6]
   140013d3a:	in     al,dx
   140013d3b:	and    bh,dh
   140013d3d:	repnz rex.WRB cmp al,0xf6
   140013d41:	pop    rax
   140013d42:	add    ecx,DWORD PTR [rbx+0x2a]
   140013d45:	je     0x140013d53
   140013d47:	lea    ebx,[rdx+0x48]
   140013d4a:	mov    esi,0x927b61e8
   140013d4f:	(bad)
   140013d52:	retf   
   140013d53:	test   QWORD PTR [rbp+r11*1-0x3bde84d0],r11
   140013d5b:	mov    ah,0x24
   140013d5d:	jno    0x140013cfb
   140013d5f:	adc    BYTE PTR [rsi+0x11],al
   140013d62:	rex.WB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013d64:	ror    DWORD PTR [rcx+0x42],1
   140013d67:	fsubr  DWORD PTR [rax+rdi*4+0x779bc1e5]
   140013d6e:	sub    al,0x4e
   140013d70:	jg     0x140013d67
   140013d72:	(bad)  
   140013d73:	pop    rdi
   140013d74:	sar    BYTE PTR [rbp-0x44c39a41],0x3
   140013d7b:	movabs al,ds:0xadf272e53d46ad5a
   140013d84:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013d85:	xchg   esi,eax
   140013d86:	iret   
   140013d87:	mov    esi,0xf7ded5e7
   140013d8c:	out    0x1c,al
   140013d8e:	mov    edi,0x55164c0b
   140013d94:	xor    eax,0xeb18ca42
   140013d99:	clc    
   140013d9a:	idiv   edi
   140013d9c:	cli    
   140013d9d:	or     eax,0xc60dc243
   140013da2:	jb     0x140013dc9
   140013da4:	pop    rdi
   140013da5:	or     BYTE PTR [rcx],ah
   140013da7:	push   rax
   140013da8:	stc    
   140013da9:	nop
   140013daa:	jmp    0xfd263ba1
   140013daf:	adc    eax,0xed855ebc
   140013db4:	or     DWORD PTR [rdx+rdx*4],edx
   140013db7:	pushf  
   140013db8:	out    0xa1,eax
   140013dba:	sbb    al,0xb
   140013dbc:	push   rdi
   140013dbd:	cmp    BYTE PTR [rbp+rbp*8-0x4cda93e2],dl
   140013dc4:	mov    ecx,0x89a10c80
   140013dc9:	adc    edx,ebx
   140013dcb:	movabs al,ds:0x11c614a3ad573a54
   140013dd4:	(bad)  
   140013dd5:	jbe    0x140013e19
   140013dd7:	sub    al,0x4
   140013dd9:	xchg   edi,eax
   140013dda:	cmp    eax,0x57a713c1
   140013ddf:	js     0x140013e48
   140013de1:	cmp    DWORD PTR [rdx],eax
   140013de3:	jmp    0x136cd9d6a
   140013de8:	mov    dl,0xd
   140013dea:	jle    0x140013d81
   140013dec:	test   DWORD PTR [rdx],ebp
   140013dee:	or     eax,0xe5e699a6
   140013df3:	jno    0x140013e1a
   140013df5:	adc    eax,0x4a4692df
   140013dfa:	(bad)  
   140013dfc:	mov    ch,0xf7
   140013dfe:	stos   DWORD PTR es:[rdi],eax
   140013dff:	push   rdx
   140013e00:	add    al,bl
   140013e02:	rex.W fnstsw WORD PTR [rbx+0x1d5c1cc3]
   140013e09:	(bad)
   140013e0c:	mov    al,0x21
   140013e0e:	loop   0x140013dc7
   140013e10:	jmp    0x1288c27d0
   140013e15:	in     eax,dx
   140013e16:	jl     0x140013dd7
   140013e18:	sti    
   140013e19:	jae    0x140013df6
   140013e1b:	imul   ebp,eax,0x19b7f02e
   140013e21:	rex.R push rsi
   140013e23:	xor    eax,0xa65b248
   140013e28:	adc    dh,BYTE PTR [rdi-0x10d0583c]
   140013e2e:	rex.RXB test BYTE PTR [r15-0x5bc6f8a0],0xe5
   140013e36:	shl    BYTE PTR [rsi-0x404dd0a],1
   140013e3c:	ins    DWORD PTR es:[rdi],dx
   140013e3d:	mov    ch,0x5e
   140013e3f:	je     0x140013e8a
   140013e41:	or     eax,0x590ec89d
   140013e46:	jne    0x140013e08
   140013e48:	lods   al,BYTE PTR ds:[rsi]
   140013e49:	mov    eax,DWORD PTR [rbx+0x7a8bacc6]
   140013e4f:	jp     0x140013e0e
   140013e51:	rex.RXB (bad) 
   140013e53:	and    ecx,DWORD PTR [rbx+0x52cb3a1]
   140013e59:	mov    ecx,0x4a1c0ce8
   140013e5e:	push   QWORD PTR [rsi+0x3a]
   140013e61:	movabs ds:0xdad1231904d8c9b0,eax
   140013e6a:	(bad)  
   140013e6b:	fst    DWORD PTR [rdx]
   140013e6d:	(bad)  
   140013e6e:	(bad)  
   140013e6f:	(bad)  
   140013e70:	imul   esp,DWORD PTR [rcx],0xfffffffe
   140013e73:	nop
   140013e74:	int    0xf6
   140013e76:	mov    bh,0xce
   140013e78:	loopne 0x140013e69
   140013e7a:	ds (bad) 
   140013e7c:	out    dx,al
   140013e7d:	pop    rbx
   140013e7e:	xchg   edi,eax
   140013e7f:	fdivr  DWORD PTR [rbp-0x1d]
   140013e82:	and    al,0x23
   140013e84:	jle    0x140013e13
   140013e86:	pushf  
   140013e87:	jno    0x140013e99
   140013e89:	ror    al,0xa8
   140013e8c:	rex.XB test r15b,cl
   140013e8f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013e90:	rol    DWORD PTR [rsi],cl
   140013e92:	imul   edx,DWORD PTR [rcx*4-0x732bbb86],0xbc3c97c8
   140013e9d:	shl    BYTE PTR [rdx-0xa],0x41
   140013ea1:	ret    
   140013ea2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013ea3:	mov    ebp,DWORD PTR [rbx+0x38]
   140013ea6:	retf   0x44c2
   140013ea9:	xchg   edx,eax
   140013eaa:	push   rsi
   140013eab:	sbb    BYTE PTR [rcx+0x418c1893],ah
   140013eb1:	jmp    0x140013eb7
   140013eb3:	popf   
   140013eb4:	and    al,0xb4
   140013eb6:	(bad)  
   140013eb7:	xchg   ebp,eax
   140013eb8:	mov    ebp,0xba5fbef9
   140013ebd:	pop    rsp
   140013ebe:	pop    rbp
   140013ebf:	cli    
   140013ec0:	retf   
   140013ec1:	(bad)  
   140013ec2:	pop    rsi
   140013ec3:	cmp    BYTE PTR [rsi+rdi*8],cl
   140013ec6:	div    DWORD PTR [rbp+0x6cc4756b]
   140013ecc:	mov    al,0x20
   140013ece:	or     BYTE PTR [rdx-0x4e114cad],ah
   140013ed4:	lahf   
   140013ed5:	std    
   140013ed6:	jrcxz  0x140013e71
   140013ed8:	pop    rdi
   140013ed9:	imul   edx,DWORD PTR [rsi+0x56],0xeaccd1a0
   140013ee0:	repz add al,BYTE PTR [rdx+rsi*8]
   140013ee4:	out    0x3f,eax
   140013ee6:	jno    0x140013ecc
   140013ee8:	mov    DWORD PTR [rdx+0x64],edi
   140013eeb:	fist   WORD PTR [rax]
   140013eed:	in     al,0x1d
   140013eef:	loope  0x140013ea9
   140013ef1:	ss jno 0x140013f0c
   140013ef4:	push   rcx
   140013ef5:	loope  0x140013f09
   140013ef7:	rex.WRB jnp 0x140013eff
   140013efa:	xchg   ebp,eax
   140013efb:	rex.WXB jo 0x140013f6a
   140013efe:	push   rax
   140013eff:	(bad)  
   140013f00:	xchg   esp,eax
   140013f01:	sub    eax,0x44c4b651
   140013f06:	xor    DWORD PTR [rcx-0x5cac5777],ecx
   140013f0c:	sbb    ebp,edx
   140013f0e:	mov    DWORD PTR [rbp-0x68],ecx
   140013f11:	(bad)  
   140013f12:	jns    0x1938af33b
   140013f18:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013f19:	(bad)  
   140013f1a:	or     DWORD PTR [rbx+riz*4-0x1db3a12f],edx
   140013f21:	sbb    BYTE PTR [rsi+rbx*2-0x70],ah
   140013f25:	jmp    0x140013f9c
   140013f27:	mov    eax,0xffe7d7b0
   140013f2c:	js     0x140013f92
   140013f2e:	or     bh,BYTE PTR [rip+0xb6a1a73]        # 0x14b6b59a7
   140013f34:	cdq    
   140013f35:	xor    BYTE PTR [rax-0x7ea2852f],bl
   140013f3b:	(bad)  
   140013f3c:	adc    dh,BYTE PTR [rsi+riz*8+0x2b8d7d2]
   140013f43:	es int3 
   140013f45:	mov    fs,WORD PTR [rdx-0x4d]
   140013f48:	enter  0x36d7,0xc3
   140013f4c:	(bad)  
   140013f4d:	ss mov bp,0x94dd
   140013f52:	scas   eax,DWORD PTR es:[rdi]
   140013f53:	ja     0x140013f13
   140013f55:	out    dx,al
   140013f56:	outs   dx,BYTE PTR ds:[rsi]
   140013f57:	fild   QWORD PTR [rbp+0xb]
   140013f5a:	add    bl,BYTE PTR [rcx+0x6d]
   140013f5d:	rex.WRB (bad) 
   140013f5f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140013f61:	jg     0x140013f5a
   140013f63:	cli    
   140013f64:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013f65:	retf   
   140013f66:	test   eax,0x5dfe886c
   140013f6b:	mov    WORD PTR [rax-0x24f71dfc],es
   140013f71:	or     DWORD PTR [rcx+0x74611d51],edx
   140013f77:	sub    dh,BYTE PTR [rcx+0x66]
   140013f7a:	ins    DWORD PTR es:[rdi],dx
   140013f7b:	mov    ch,0x1b
   140013f7d:	in     al,0x8d
   140013f7f:	ins    BYTE PTR es:[rdi],dx
   140013f80:	mov    edi,0x27b1d64c
   140013f85:	push   rdx
   140013f86:	mov    esp,0xd7d35a6
   140013f8b:	fs jne 0x14001400a
   140013f8e:	imul   ebx,edx,0x5fb28883
   140013f94:	(bad)  
   140013f95:	push   rax
   140013f96:	ja     0x140013fd2
   140013f98:	mov    ebp,0x8a6ee948
   140013f9d:	cmc    
   140013f9e:	out    dx,al
   140013f9f:	gs popf 
   140013fa1:	or     DWORD PTR [rcx-0x137f0113],eax
   140013fa7:	rex.WR push 0x4c
   140013faa:	xchg   DWORD PTR [rbp+0x64],ecx
   140013fad:	(bad)  
   140013fae:	and    DWORD PTR [rbx],esp
   140013fb0:	(bad)  
   140013fb1:	jmp    0x1024c3aa8
   140013fb6:	sahf   
   140013fb7:	pop    rbx
   140013fb8:	(bad)  
   140013fb9:	rex.RX jle 0x140013fb0
   140013fbc:	pop    rbx
   140013fbd:	add    al,0xaf
   140013fbf:	(bad)  
   140013fc0:	(bad)  
   140013fc1:	dec    edi
   140013fc3:	ficomp WORD PTR [rbx+0x65937cc7]
   140013fc9:	ja     0x140014048
   140013fcb:	lahf   
   140013fcc:	jae    0x14001403d
   140013fce:	push   rbp
   140013fcf:	std    
   140013fd0:	xchg   esi,eax
   140013fd1:	addr32 jg 0x140013f8b
   140013fd4:	fdivrp st(7),st
   140013fd6:	sahf   
   140013fd7:	out    dx,al
   140013fd8:	(bad)  
   140013fd9:	mov    bh,0x67
   140013fdb:	jp     0x140014019
   140013fdd:	mov    ebx,0x1d8d8383
   140013fe2:	(bad)  
   140013fe3:	mov    al,0x2c
   140013fe5:	rex.W or BYTE PTR [rax+0x51],cl
   140013fe9:	and    BYTE PTR [rdx+0x58],dh
   140013fec:	adc    al,0x21
   140013fee:	(bad)  
   140013fef:	adc    BYTE PTR [rdx+rcx*2+0x62],al
   140013ff3:	mov    BYTE PTR [rax*8+0x48505612],dl
   140013ffa:	pop    rax
   140013ffb:	and    al,0x2
   140013ffd:	and    al,0x22
   140013fff:	mov    ah,0x31
   140014002:	adc    al,cl
   140014004:	and    BYTE PTR [rdi],al
   140014006:	mov    al,0x30
   140014008:	mov    dh,0xf1
   14001400a:	add    bh,BYTE PTR [rax-0x3a]
   14001400d:	(bad)  
   14001400e:	jnp    0x140014000
   140014010:	int3   
   140014011:	hlt    
   140014012:	sub    al,0xdd
   140014014:	rcr    ebp,cl
   140014016:	rcr    ebx,cl
   140014018:	hlt    
   140014019:	bnd jbe 0x140013fdb
   14001401c:	jmp    0x140013fd1
   14001401e:	cld    
   14001401f:	xchg   esi,eax
   140014020:	stos   BYTE PTR es:[rdi],al
   140014021:	mov    edx,0x738fe4f7
   140014026:	out    dx,eax
   140014027:	lods   eax,DWORD PTR ds:[rsi]
   140014028:	cli    
   140014029:	cmp    eax,0x3d33d3ef
   14001402e:	sahf   
   14001402f:	xlat   BYTE PTR ds:[rbx]
   140014030:	and    dl,BYTE PTR [rdx]
   140014032:	(bad)  
   140014033:	int3   
   140014034:	fcmovne st,st(7)
   140014036:	outs   dx,DWORD PTR ds:[rsi]
   140014037:	test   eax,0xeeb72d5f
   14001403c:	cmp    edi,esp
   14001403e:	jnp    0x140013ffe
   140014040:	addr32 mov ecx,0x3ef7e47c
   140014046:	(bad)  
   140014047:	ja     0x1400140c6
   140014049:	call   QWORD PTR [rdi-0x8]
   14001404c:	mov    dh,0x8b
   14001404e:	sub    eax,0x173eca0f
   140014053:	stos   BYTE PTR es:[rdi],al
   140014054:	or     DWORD PTR [rbx+0x57],esi
   140014057:	mov    cl,0x23
   140014059:	rex.WXB jbe 0x140014002
   14001405c:	(bad)  
   14001405d:	mov    BYTE PTR [rbx-0x17ec5500],ch
   140014063:	mov    edx,0x16b7b5c8
   140014068:	push   0x4c1d6c74
   14001406d:	push   0x5dd2edae
   140014072:	lods   eax,DWORD PTR ds:[rsi]
   140014073:	call   0x194700bb3
   140014078:	sbb    al,0x52
   14001407a:	jns    0x1400140f8
   14001407c:	shl    eax,cl
   14001407e:	(bad)  
   14001407f:	mov    ch,BYTE PTR [rax]
   140014081:	xor    BYTE PTR [rbp-0x603304],bl
   140014087:	popf   
   140014088:	jg     0x140014080
   14001408a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001408b:	(bad)  
   14001408c:	mov    esi,0x77fe9cde
   140014091:	(bad)  [rax-0x15632283]
   140014097:	ret    
   140014098:	ret    
   140014099:	ret    
   14001409a:	mov    eax,0x3fedbdbd
   14001409f:	not    DWORD PTR [rdx-0x5]
   1400140a2:	rex.X xlat BYTE PTR ds:[rbx]
   1400140a4:	cs clc 
   1400140a6:	scas   al,BYTE PTR es:[rdi]
   1400140a7:	not    esi
   1400140a9:	(bad)  
   1400140aa:	xchg   ebx,eax
   1400140ab:	jp     0x1400140bb
   1400140ad:	cmc    
   1400140ae:	(bad)  
   1400140af:	mov    edi,0x93fdb27e
   1400140b4:	(bad)  
   1400140b5:	std    
   1400140b6:	fistp  QWORD PTR [rdx-0x7c0c1c19]
   1400140bc:	in     eax,dx
   1400140bd:	cmp    ecx,0xffffffee
   1400140c0:	mov    WORD PTR [rax-0x3e465372],?
   1400140c6:	xchg   ebp,eax
   1400140c7:	(bad)  
   1400140c8:	jg     0x140014064
   1400140ca:	out    dx,al
   1400140cb:	rcr    BYTE PTR [rbx+0x34],cl
   1400140ce:	cmp    ecx,esi
   1400140d0:	sar    bl,cl
   1400140d2:	and    esi,DWORD PTR [rsi*4+0x751ed5c3]
   1400140d9:	(bad)  
   1400140da:	shl    BYTE PTR [rdx],0xb6
   1400140dd:	imul   eax,DWORD PTR [rdx-0x21],0x12
   1400140e1:	pushf  
   1400140e2:	adc    ah,BYTE PTR [rbx+0x44]
   1400140e5:	sti    
   1400140e6:	mov    ds,edx
   1400140e8:	sub    edx,DWORD PTR [rip+0x258d22b6]        # 0x1658e63a4
   1400140ee:	mov    dh,0xb5
   1400140f0:	je     0x140014132
   1400140f2:	test   DWORD PTR [rdi+0x3e],esp
   1400140f5:	icebp  
   1400140f6:	in     al,dx
   1400140f7:	rex.WR push 0x16
   1400140fa:	mov    ebx,0x99e2ff35
   1400140ff:	and    edi,DWORD PTR [rsi-0x5efc8989]
   140014105:	or     DWORD PTR [rdx+0x12],0x61
   140014109:	mov    bh,0x32
   14001410b:	rex.RB push r8
   14001410d:	pop    rsp
   14001410e:	xor    DWORD PTR [rbx-0x164381fc],0x1c8cfe8
   140014118:	fmulp  st(0),st
   14001411a:	ret    0x1afb
   14001411d:	mov    al,0x7f
   14001411f:	cld    
   140014120:	cmp    eax,0x80de4123
   140014125:	cld    
   140014126:	cmp    dh,BYTE PTR [rdx+0x7e420cfe]
   14001412c:	sbb    bl,BYTE PTR [rip+0x1c40158c]        # 0x15c4156be
   140014132:	sub    DWORD PTR [rdx-0x2226e38c],eax
   140014138:	in     eax,0x27
   14001413a:	sahf   
   14001413b:	jnp    0x140014145
   14001413d:	ja     0x140014128
   14001413f:	rex.B (bad) 
   140014141:	in     eax,dx
   140014142:	sbb    eax,0xfe4c6aa4
   140014147:	push   rbp
   140014148:	mov    DWORD PTR [rcx],ebp
   14001414a:	hlt    
   14001414b:	xchg   esi,eax
   14001414c:	jne    0x1400140e3
   14001414e:	es mov eax,0xaeed344e
   140014154:	rol    esi,1
   140014156:	(bad)  
   140014157:	(bad)  
   140014158:	add    al,0x13
   14001415a:	lea    esp,[rdx+0x48]
   14001415d:	fiadd  WORD PTR [rbx+0xe]
   140014160:	(bad)  
   140014161:	rex.WX xchg cl,dil
   140014164:	rex.WB cmp rax,0x233f9f14
   14001416a:	xor    DWORD PTR [rdx-0x5],0x329a8032
   140014171:	xchg   esp,eax
   140014172:	movabs ds:0x127742f38fb4805c,eax
   14001417b:	js     0x140014165
   14001417d:	and    eax,edi
   14001417f:	fdiv   st(5),st
   140014181:	movabs eax,ds:0xd8a856cabe4e2ccb
   14001418a:	out    dx,al
   14001418b:	out    0x4c,eax
   14001418d:	movsxd ecx,DWORD PTR [rbp+0x67a44717]
   140014193:	mov    ebx,0x77aa66da
   140014198:	repnz mov edi,DWORD PTR [rdi]
   14001419b:	fcomip st,st(3)
   14001419d:	out    0xb,al
   14001419f:	jae    0x14001413b
   1400141a1:	retf   0x5eb3
   1400141a4:	pop    rcx
   1400141a5:	shl    DWORD PTR [rbx-0x74a9f830],cl
   1400141ab:	mov    ?,WORD PTR [rsi-0x2b]
   1400141ae:	shl    BYTE PTR [rsi+0x6d76eb2d],cl
   1400141b4:	imul   ecx,esi,0x4d13cc1a
   1400141ba:	jns    0x140014187
   1400141bc:	sbb    ah,BYTE PTR [rbx]
   1400141be:	sbb    ah,BYTE PTR [rbx]
   1400141c0:	jmp    0x1400141a5
   1400141c2:	cmc    
   1400141c3:	rex.WRX movabs rdi,0xea7ecff8bf6f7b8c
   1400141cd:	jmp    0x14001419c
   1400141cf:	jmp    0x140014250
   1400141d1:	mov    bh,0xd9
   1400141d3:	div    BYTE PTR [rbp+0x11]
   1400141d6:	add    BYTE PTR [rax],dl
   1400141d8:	(bad)  
   1400141d9:	jp     0x1400141c3
   1400141db:	movabs eax,ds:0xae4fcbffc734d365
   1400141e4:	inc    dh
   1400141e6:	pop    rdi
   1400141e7:	stc    
   1400141e8:	(bad)  
   1400141e9:	scas   eax,DWORD PTR es:[rdi]
   1400141ea:	dec    DWORD PTR [rax+0x7f]
   1400141ed:	in     eax,dx
   1400141ee:	or     eax,0x7f56af58
   1400141f3:	(bad)  
   1400141f4:	scas   eax,DWORD PTR es:[rdi]
   1400141f5:	(bad)  
   1400141f6:	test   al,0x7e
   1400141f8:	cmp    bh,BYTE PTR [rcx+0x60]
   1400141fb:	mov    esi,0xadff313d
   140014200:	(bad)  
   140014201:	fdivr  QWORD PTR [rax-0x31]
   140014204:	(bad)  
   140014205:	jno    0x140014279
   140014207:	(bad)  
   140014208:	mov    edi,DWORD PTR [rax-0x429d4d26]
   14001420e:	retf   
   14001420f:	pop    rbp
   140014210:	test   BYTE PTR gs:[rax+0x2a7b5d42],ch
   140014217:	(bad)  
   140014218:	lods   al,BYTE PTR ds:[rsi]
   140014219:	mov    ah,0xe5
   14001421b:	pop    rax
   14001421c:	pop    rbx
   14001421d:	ficom  DWORD PTR [rax]
   14001421f:	pop    rax
   140014220:	mov    ch,0x4b
   140014222:	ins    BYTE PTR es:[rdi],dx
   140014223:	(bad)  
   140014224:	cmp    bh,BYTE PTR [rdx-0x73]
   140014227:	test   BYTE PTR [rsi],dh
   140014229:	rol    ch,cl
   14001422b:	xchg   esi,eax
   14001422c:	cs pop rdx
   14001422e:	out    dx,eax
   14001422f:	cmp    ch,BYTE PTR [rcx-0x40]
   140014232:	(bad)  
   140014233:	xor    eax,0x6cc576cd
   140014238:	scas   eax,DWORD PTR es:[rdi]
   140014239:	(bad)  
   14001423a:	stc    
   14001423b:	(bad)  
   14001423c:	ss jg  0x140014239
   14001423f:	jmp    0x13f99070f
   140014244:	and    eax,0x8767d5c
   140014249:	add    edx,DWORD PTR [rsi+0xdf0c38e]
   14001424f:	or     edi,DWORD PTR [rdi+0x36]
   140014252:	adc    DWORD PTR [rax+0x4],0x77352365
   140014259:	ret    
   14001425a:	jp     0x1400141eb
   14001425c:	loopne 0x1400142dd
   14001425e:	or     ebp,ebp
   140014260:	test   DWORD PTR [rbx-0x178b007b],esi
   140014266:	scas   eax,DWORD PTR es:[rdi]
   140014267:	rex (bad) 
   140014269:	jle    0x140014263
   14001426b:	ds (bad) 
   14001426d:	or     BYTE PTR [rcx],ch
   14001426f:	push   rsp
   140014270:	sbb    BYTE PTR [rdi-0x4b],al
   140014273:	add    BYTE PTR [rdx],bl
   140014275:	movabs eax,ds:0xf054a2bb4823435f
   14001427e:	or     DWORD PTR [rcx+0x4bb9902b],ebp
   140014284:	scas   al,BYTE PTR es:[rdi]
   140014285:	fsubr  QWORD PTR [rbx-0x36]
   140014288:	loop   0x1400142d5
   14001428a:	out    dx,eax
   14001428b:	movsxd edi,DWORD PTR [rsi+0x4010c117]
   140014291:	mov    dl,0xcd
   140014293:	adc    DWORD PTR [rip+0xffffffff9922e7b7],0x0        # 0xd9242a51
   14001429a:	nop
   14001429b:	loope  0x14001426f
   14001429d:	repz or dh,ah
   1400142a0:	test   DWORD PTR [rsi-0x7a],eax
   1400142a3:	(bad)  
   1400142a4:	stos   BYTE PTR es:[rdi],al
   1400142a5:	xchg   ecx,eax
   1400142a6:	imul   esi,DWORD PTR [rax],0xffffff8c
   1400142a9:	in     al,0xa9
   1400142ab:	ja     0x140014293
   1400142ad:	data16 rex.WRB ja 0x140014235
   1400142b1:	pop    rdi
   1400142b2:	std    
   1400142b3:	sbb    DWORD PTR [rbp-0x7],esp
   1400142b6:	(bad)
   1400142b9:	test   al,0xdf
   1400142bb:	ret    
   1400142bc:	(bad)  
   1400142bd:	mov    edi,0xe8ae24e0
   1400142c2:	jae    0x140014288
   1400142c4:	adc    esp,ecx
   1400142c6:	rex.R push rdi
   1400142c8:	fcom   QWORD PTR [rax+0x440ea396]
   1400142ce:	push   rdx
   1400142cf:	(bad)  
   1400142d0:	(bad)  
   1400142d2:	adc    dh,dh
   1400142d4:	(bad)  
   1400142d5:	jo     0x1400142f5
   1400142d7:	pop    rdi
   1400142d8:	jnp    0x140014304
   1400142da:	pop    rdi
   1400142db:	xchg   ecx,eax
   1400142dc:	cmp    ebx,DWORD PTR [rip+0x23445df6]        # 0x16345a0d8
   1400142e2:	js     0x14001430b
   1400142e4:	clc    
   1400142e5:	(bad)  
   1400142e7:	sub    ecx,DWORD PTR [rdi+0x3eae789f]
   1400142ed:	dec    edx
   1400142ef:	jg     0x1400142ed
   1400142f1:	cmp    eax,0x7e4ff5ff
   1400142f6:	jmp    0x1400142cf
   1400142f8:	lahf   
   1400142f9:	(bad)  
   1400142fa:	jmp    FWORD PTR [rsi-0x7d]
   1400142fd:	ja     0x1400142a6
   1400142ff:	add    al,bh
   140014301:	hlt    
   140014302:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014303:	(bad)  
   140014304:	fstp   QWORD PTR [rbp-0x44]
   140014307:	js     0x14001437a
   140014309:	shl    DWORD PTR [rcx*8+0x7ffb3fb5],1
   140014310:	(bad)  
   140014311:	inc    ebp
   140014313:	mov    edi,0xfdaf13fc
   140014318:	call   0x139aac0cc
   14001431d:	sti    
   14001431e:	mov    edi,0x6fe9c5f1
   140014323:	lahf   
   140014324:	out    dx,al
   140014325:	int3   
   140014326:	cdq    
   140014327:	int3   
   140014328:	sbb    edx,DWORD PTR [rsi-0x3e3a7eb9]
   14001432e:	rex.WXB pushf 
   140014330:	in     al,dx
   140014331:	mov    edi,0x5f1eba84
   140014336:	sub    ebp,DWORD PTR [rsi]
   140014338:	add    bh,BYTE PTR [rbp+0x1a10bd10]
   14001433e:	fwait
   14001433f:	push   0x7432caa2
   140014344:	lods   al,BYTE PTR ds:[rsi]
   140014345:	xor    eax,0xc6d15542
   14001434a:	mov    ss,eax
   14001434c:	mul    eax
   14001434e:	sbb    al,0x5d
   140014350:	or     BYTE PTR [rbx+rdi*4+0x74d7569e],ch
   140014357:	ror    esp,0x94
   14001435a:	hlt    
   14001435b:	(bad)  
   14001435c:	cmp    al,BYTE PTR [rdi]
   14001435e:	movabs al,ds:0x7c39efb54f2df815
   140014368:	fistp  QWORD PTR [rcx-0x2]
   14001436b:	loopne 0x1400143e0
   14001436d:	xor    ebp,DWORD PTR [rsi+0x5c0cf8be]
   140014373:	jnp    0x1400142fe
   140014375:	rcl    BYTE PTR [rsi],cl
   140014377:	in     al,dx
   140014378:	rex.WR test al,0x3f
   14001437b:	fidiv  WORD PTR [rdx+0x1bd7a7b0]
   140014381:	sbb    al,0xc0
   140014383:	enter  0xbfb7,0xc5
   140014387:	(bad)  
   140014388:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014389:	lock fild WORD PTR [rsi+0x7fa867d0]
   140014390:	(bad)  
   140014391:	xchg   ecx,eax
   140014392:	(bad)  
   140014393:	mov    dh,0xec
   140014395:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014396:	test   ecx,0x129c22ca
   14001439c:	clc    
   14001439d:	jo     0x140014389
   14001439f:	pop    rdi
   1400143a0:	mov    rax,db0
   1400143a3:	or     BYTE PTR [rsi+0x53],bl
   1400143a6:	(bad)  
   1400143a7:	rex.WRXB (bad) 
   1400143a9:	mov    dh,BYTE PTR [rdx-0x4e4701d6]
   1400143af:	jge    0x140014376
   1400143b1:	jp     0x1400143d6
   1400143b3:	rcl    DWORD PTR [rsi+0x3dd64af6],1
   1400143b9:	out    0x50,al
   1400143bb:	and    BYTE PTR [rax-0x13d9b4af],dl
   1400143c1:	nop
   1400143c2:	cwde   
   1400143c3:	add    al,0x3e
   1400143c5:	gs clc 
   1400143c7:	in     eax,0xe2
   1400143c9:	lahf   
   1400143ca:	push   0x5b92214a
   1400143cf:	jns    0x140014404
   1400143d1:	in     al,0x6
   1400143d3:	pushf  
   1400143d4:	sbb    ah,BYTE PTR [rdx-0x33]
   1400143d7:	movabs ds:0xbdf3231a0805109e,eax
   1400143e0:	sbb    DWORD PTR [rsi-0x4f],edi
   1400143e3:	int    0x2f
   1400143e5:	std    
   1400143e6:	fdiv   DWORD PTR [rsi]
   1400143e8:	ja     0x1400143de
   1400143ea:	out    dx,eax
   1400143eb:	loope  0x140014433
   1400143ed:	getsec 
   1400143ef:	ret    0x9582
   1400143f2:	test   BYTE PTR [rdx+rdx*8-0x66],al
   1400143f6:	fwait
   1400143f7:	movabs ds:0xedb322542a175b0a,eax
   140014400:	xchg   BYTE PTR [rdx+0x62],bh
   140014403:	sbb    DWORD PTR [rdi-0x61087d56],ebx
   140014409:	or     DWORD PTR [rbx],0x73
   14001440c:	jbe    0x14001441d
   14001440e:	out    0x54,al
   140014410:	mov    esi,0xce6a69a6
   140014415:	pop    rbp
   140014416:	fsub   DWORD PTR [rcx-0x26]
   140014419:	xor    al,0xc4
   14001441b:	movabs ds:0x5f38d4df1aeae1ce,al
   140014425:	adc    edx,esp
   140014427:	cli    
   140014428:	mov    ?,WORD PTR [rdi-0x40068661]
   14001442e:	stc    
   14001442f:	jrcxz  0x140014470
   140014431:	mul    ebp
   140014433:	ja     0x14001446a
   140014435:	mov    bh,0xff
   140014437:	ins    DWORD PTR es:[rdi],dx
   140014438:	fild   QWORD PTR [rdx+0x6d8bbfaf]
   14001443e:	iret   
   14001443f:	(bad)  
   140014440:	(bad)  
   140014441:	cld    
   140014442:	cli    
   140014443:	rol    DWORD PTR [rdi],0x1f
   140014446:	xchg   esp,eax
   140014447:	xchg   edi,eax
   140014448:	pop    rsi
   140014449:	jp     0x140014494
   14001444b:	(bad)  
   14001444c:	(bad)  
   14001444d:	addr32 (bad) 
   14001444f:	cld    
   140014450:	xlat   BYTE PTR ds:[rbx]
   140014451:	dec    esi
   140014453:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014454:	(bad)  
   140014455:	stc    
   140014456:	loope  0x140014441
   140014458:	(bad)  
   140014459:	cld    
   14001445a:	jl     0x140014491
   14001445c:	icebp  
   14001445d:	test   BYTE PTR [rbp-0x1921b12e],dh
   140014463:	lock mov cl,0x5f
   140014466:	movabs eax,ds:0xbe91f507370b7ddd
   14001446f:	jmp    0x1400144b2
   140014471:	add    eax,0xb5f06d3f
   140014476:	mov    ch,0x80
   140014478:	push   0xfffffffffffffffb
   14001447a:	shl    BYTE PTR [rdx-0x495b5715],0xe
   140014481:	xor    eax,0x3c44cf5d
   140014486:	xor    eax,0x35406a82
   14001448b:	fmul   st,st(2)
   14001448d:	xor    eax,0xda53b41e
   140014492:	adc    cl,dh
   140014494:	stos   BYTE PTR es:[rdi],al
   140014495:	add    al,0x11
   140014497:	rex.WRX mov BYTE PTR [rax+0x21cd99ab],r9b
   14001449e:	push   0xffffffffffffffc5
   1400144a0:	cmc    
   1400144a1:	(bad)  
   1400144a2:	idiv   cl
   1400144a4:	sub    DWORD PTR [rdi],0x557ff21e
   1400144aa:	iret   
   1400144ab:	jno    0x14001447b
   1400144ad:	cmp    DWORD PTR [rax],edi
   1400144af:	div    DWORD PTR [rax]
   1400144b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400144b2:	fucomi st,st(6)
   1400144b4:	sub    eax,0xcfab69db
   1400144b9:	out    0xfb,al
   1400144bb:	ja     0x140014441
   1400144bd:	cld    
   1400144be:	xor    ah,dh
   1400144c0:	icebp  
   1400144c1:	cmp    esp,ebp
   1400144c3:	(bad)  
   1400144c4:	adc    ch,cl
   1400144c6:	push   0xffffffffffffff8f
   1400144c8:	pop    rbp
   1400144c9:	or     ah,0x3
   1400144cc:	adc    al,0xb2
   1400144ce:	(bad)  
   1400144cf:	xchg   ebx,eax
   1400144d0:	(bad)  
   1400144d1:	addr32 rex.B (bad) 
   1400144d4:	fs icebp 
   1400144d6:	rex.WRXB movabs r11,0xb7585233f04d1a01
   1400144e0:	cmp    al,0xb2
   1400144e2:	mov    bh,0xe2
   1400144e4:	fstp   DWORD PTR [rax]
   1400144e6:	mov    BYTE PTR [rdx+0x3f257b42],bl
   1400144ec:	fist   WORD PTR [rax+0x47ebad95]
   1400144f2:	mov    cl,0xf2
   1400144f4:	pop    rcx
   1400144f5:	cmp    DWORD PTR [rdx+rsi*2-0x31],eax
   1400144f9:	sar    BYTE PTR [rbx+rax*8-0x37],0xa2
   1400144fe:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400144ff:	xor    DWORD PTR [rax],ebp
   140014501:	mov    WORD PTR [rax-0x36],es
   140014504:	lods   eax,DWORD PTR ds:[rsi]
   140014505:	test   al,0xa2
   140014507:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014508:	test   BYTE PTR [rdx],0xe
   14001450b:	lea    ecx,[rdx+0x14]
   14001450e:	xchg   DWORD PTR [rdi-0x5a5534cc],ebp
   140014514:	(bad)  
   140014515:	push   rsi
   140014516:	sub    DWORD PTR [rax+rbx*1-0x6d],edi
   14001451a:	ret    0xd609
   14001451d:	xchg   esp,eax
   14001451e:	je     0x14001457a
   140014520:	cdq    
   140014521:	cmc    
   140014522:	(bad)  
   140014523:	sbb    BYTE PTR [rcx-0xd2126bf],cl
   140014529:	jl     0x1400144f6
   14001452b:	mov    ebp,0xe6feb817
   140014530:	xor    ebp,edx
   140014532:	fist   DWORD PTR [rbx]
   140014534:	(bad)  
   140014535:	(bad)  
   140014537:	sbb    bl,dh
   140014539:	scas   al,BYTE PTR es:[rdi]
   14001453a:	movsxd ebp,esi
   14001453c:	jbe    0x14001454f
   14001453e:	adc    DWORD PTR [rsi+0xd7332da],esp
   140014544:	sti    
   140014545:	jp     0x140014576
   140014547:	(bad)  
   140014548:	lock sbb eax,0xb5da7cdb
   14001454e:	movabs al,ds:0x8487dbfae03abe0d
   140014557:	adc    BYTE PTR [rax+0x3af59e27],ch
   14001455d:	mov    al,0x38
   14001455f:	pop    rsi
   140014560:	mov    dl,0x77
   140014562:	xlat   BYTE PTR ds:[rbx]
   140014563:	jns    0x140014593
   140014565:	mov    edi,0xb0f2c27e
   14001456a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001456b:	(bad)  
   14001456d:	out    0xca,al
   14001456f:	(bad)  
   140014570:	adc    esi,DWORD PTR [rdx+rax*4-0x1cefc50b]
   140014577:	ss std 
   140014579:	retf   0x62d6
   14001457c:	pop    rax
   14001457d:	pop    rsp
   14001457e:	jle    0x14001457b
   140014580:	sti    
   140014581:	stos   DWORD PTR es:[rdi],eax
   140014582:	out    0x5e,eax
   140014584:	(bad)  
   140014585:	mov    esi,0xecf33d2f
   14001458a:	(bad)  
   14001458b:	cmp    ch,bh
   14001458d:	stc    
   14001458e:	retf   0x5e57
   140014591:	in     al,dx
   140014592:	(bad)  
   140014593:	jmp    0x1400145cb
   140014595:	add    bh,BYTE PTR [rax-0x11]
   140014598:	(bad)  
   140014599:	mov    bl,dl
   14001459b:	out    dx,eax
   14001459c:	(bad)  
   14001459d:	mov    esi,0x2f04ddef
   1400145a2:	call   QWORD PTR [rsi+0x15aef6e]
   1400145a8:	add    ah,bh
   1400145aa:	mov    dh,0x1f
   1400145ac:	clc    
   1400145ad:	xor    esi,0xa1fa1fa5
   1400145b3:	jrcxz  0x1400145f0
   1400145b5:	out    dx,eax
   1400145b6:	cli    
   1400145b7:	fisttp QWORD PTR [rdi+0x5c]
   1400145ba:	jg     0x1400145e9
   1400145bc:	jle    0x1400145b5
   1400145be:	out    dx,al
   1400145bf:	lods   al,BYTE PTR ds:[rsi]
   1400145c0:	(bad)  
   1400145c1:	cmp    ch,BYTE PTR [rdi-0xa226f33]
   1400145c7:	es rex.RXB pop r11
   1400145ca:	iret   
   1400145cb:	sbb    ebx,DWORD PTR [rdi+rbx*8+0x33]
   1400145cf:	pop    rbx
   1400145d0:	adc    al,0xfb
   1400145d2:	cmp    BYTE PTR [rdx+0x3472aa8a],0xbe
   1400145d9:	rex.X mov esp,0x75511023
   1400145df:	push   rsp
   1400145e0:	(bad)  
   1400145e1:	jrcxz  0x140014645
   1400145e3:	(bad)  
   1400145e4:	or     esi,DWORD PTR [rsi+rbx*8]
   1400145e7:	jrcxz  0x1400145bd
   1400145e9:	sub    al,0x55
   1400145eb:	adc    al,0xcc
   1400145ed:	push   rdx
   1400145ee:	(bad)  
   1400145ef:	movabs eax,ds:0xd221962c66884a0b
   1400145f8:	adc    dh,BYTE PTR [rax+0x52]
   1400145fb:	and    DWORD PTR [rbp-0x22e3905d],esi
   140014601:	(bad)  
   140014602:	sar    DWORD PTR [rdi],cl
   140014604:	jbe    0x1400145c6
   140014606:	(bad)  
   140014607:	jle    0x1400145f7
   140014609:	cwde   
   14001460a:	(bad)  
   14001460b:	xchg   ebx,eax
   14001460c:	out    0xd9,eax
   14001460e:	jne    0x1400145ee
   140014610:	push   rsi
   140014611:	fcom   st(5)
   140014613:	(bad)  
   140014614:	(bad)  
   140014615:	xchg   ebp,eax
   140014616:	mov    edi,0x2867f093
   14001461b:	nop
   14001461c:	test   DWORD PTR [rdi-0x8],edi
   14001461f:	xor    esp,DWORD PTR [rax-0x2253ee27]
   140014625:	push   rax
   140014626:	add    dh,cl
   140014628:	(bad)  
   140014629:	out    dx,eax
   14001462a:	(bad)  
   14001462b:	lahf   
   14001462c:	xor    DWORD PTR [rsi+rdx*4-0x7b],edi
   140014630:	jg     0x140014695
   140014632:	lahf   
   140014633:	mov    cl,0x72
   140014635:	cmp    BYTE PTR [rip+0xd451805],bl        # 0x14d465e40
   14001463b:	mov    bl,BYTE PTR [rbx-0x49aa67ef]
   140014641:	pop    rdi
   140014642:	push   rsp
   140014643:	imul   ebp,DWORD PTR [rcx-0x7aae15db],0x1d
   14001464a:	and    dh,BYTE PTR [rbx+0x5d]
   14001464d:	push   rbx
   14001464e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001464f:	lods   al,BYTE PTR ds:[rsi]
   140014650:	(bad)  
   140014651:	jne    0x140014673
   140014653:	rex.R
   140014654:	es push rbp
   140014656:	(bad)  
   140014657:	ja     0x1400145e3
   140014659:	mov    edx,0x4afde298
   14001465e:	sbb    eax,0x26d4b243
   140014663:	mov    eax,0x6269115
   140014668:	movsxd esi,esp
   14001466a:	xor    DWORD PTR [rdx-0x70709631],esp
   140014670:	jge    0x1400146d4
   140014672:	std    
   140014673:	sub    eax,0xa04b590c
   140014678:	xchg   edx,eax
   140014679:	and    ebx,ecx
   14001467b:	push   rax
   14001467c:	push   rbp
   14001467d:	imul   esp,DWORD PTR [rax+rbx*2],0x50ea5061
   140014684:	sub    al,0x2
   140014686:	pop    rsi
   140014687:	push   rdx
   140014688:	std    
   140014689:	add    BYTE PTR [rax-0x3ea8af56],0xae
   140014690:	loope  0x1400146f3
   140014692:	(bad)  
   140014693:	pop    rsp
   140014694:	ffree  st(1)
   140014696:	(bad)  
   140014698:	movabs al,ds:0xfd49661110e27a79
   1400146a1:	pushf  
   1400146a2:	movabs al,ds:0x5b138e607fb7c0d4
   1400146ab:	in     al,dx
   1400146ac:	hlt    
   1400146ad:	xchg   ebp,eax
   1400146ae:	push   rdi
   1400146af:	rex.WRXB push 0x534996db
   1400146b5:	push   rbx
   1400146b6:	(bad)  
   1400146b7:	xor    eax,0x14514dce
   1400146bc:	jge    0x140014722
   1400146be:	mov    ebp,DWORD PTR [rsi+0x3d]
   1400146c1:	and    eax,DWORD PTR [rcx+riz*4-0x11]
   1400146c5:	(bad)  
   1400146c6:	and    al,0xba
   1400146c8:	cmp    DWORD PTR [rsi],0x44
   1400146cb:	rex.X (bad) 
   1400146cd:	cmp    BYTE PTR [rcx],bh
   1400146cf:	jmp    0x1ae7ca3dd
   1400146d4:	sbb    bh,BYTE PTR [rdi-0xcc1c806]
   1400146da:	mov    ecx,0xfa12bf2b
   1400146df:	and    BYTE PTR [rbx-0x45521327],dh
   1400146e5:	stos   BYTE PTR es:[rdi],al
   1400146e6:	(bad)  
   1400146e7:	push   rcx
   1400146e8:	movabs ds:0x7fdfffae3415eaaa,eax
   1400146f1:	cld    
   1400146f2:	push   rbx
   1400146f3:	sar    DWORD PTR [rbx+0x7f],1
   1400146f6:	test   al,0xaa
   1400146f8:	(bad)  
   1400146f9:	pushf  
   1400146fa:	pop    rdi
   1400146fb:	ss rex.WRB jae 0x1400146b2
   1400146ff:	jmp    0x14001473b
   140014701:	ja     0x1400146ea
   140014703:	sbb    eax,0xefedae97
   140014708:	out    dx,eax
   140014709:	movabs cs:0xd200c6aa5b3a7cc2,al
   140014713:	mov    edx,DWORD PTR [rbx+0x71154695]
   140014719:	sar    BYTE PTR [rsi-0x1e],cl
   14001471c:	xchg   ebx,eax
   14001471d:	mov    edi,0x2b6db6da
   140014722:	jnp    0x14001479f
   140014724:	jnp    0x140014703
   140014726:	ins    BYTE PTR es:[rdi],dx
   140014727:	ss or  eax,0xebbe39ce
   14001472d:	mov    bh,0x7f
   14001472f:	(bad)  
   140014730:	cmp    ebx,DWORD PTR [rcx-0x62]
   140014733:	call   FWORD PTR [rdi+0x6f]
   140014736:	fist   WORD PTR [rax+0x1ff1f802]
   14001473c:	cli    
   14001473d:	movabs eax,ds:0xe9fecfcff1ffc7f8
   140014746:	jg     0x140014743
   140014748:	iret   
   140014749:	push   rax
   14001474b:	in     al,dx
   14001474c:	(bad)  
   14001474d:	mov    ebx,0xfcb626ae
   140014752:	(bad)  
   140014753:	movabs ds:0x7875d89b7f89c1bb,al
   14001475c:	fist   WORD PTR [rbx-0x7d]
   14001475f:	loope  0x1400147a5
   140014761:	jno    0x140014743
   140014763:	cmp    eax,0x1f255082
   140014768:	xor    al,0x74
   14001476a:	rex.WX and QWORD PTR [rbx+0x52],0x1
   14001476f:	rex.B test al,0x5d
   140014772:	test   DWORD PTR [rip+0xffffffffadc9b0b0],esi        # 0xedcaf828
   140014778:	pop    rax
   140014779:	ins    BYTE PTR es:[rdi],dx
   14001477a:	ja     0x140014799
   14001477c:	(bad)  
   14001477d:	fldcw  WORD PTR [rcx]
   14001477f:	sbb    bl,BYTE PTR [rbp-0x6a97d94b]
   140014785:	and    ebx,eax
   140014787:	pop    rsp
   140014788:	add    al,0x0
   14001478a:	add    BYTE PTR [rax],ah
   14001478c:	add    BYTE PTR [rcx+0x44],cl
   14001478f:	push   r12
   140014791:	retf   0x5b41
   140014794:	shl    DWORD PTR [rsi-0x755e9c6],0xaa
   14001479b:	(bad)  
   14001479c:	rex.WRXB and r13,r11
   14001479f:	(bad)  
   1400147a0:	iret   
   1400147a1:	repz (bad) 
   1400147a3:	lahf   
   1400147a4:	fwait
   1400147a5:	lock neg esp
   1400147a8:	xchg   edi,eax
   1400147a9:	cdq    
   1400147aa:	mov    eax,eax
   1400147ac:	out    dx,al
   1400147ad:	std    
   1400147ae:	mov    WORD PTR [rdx-0x2e],ss
   1400147b1:	in     al,dx
   1400147b2:	loop   0x1400147eb
   1400147b4:	test   bh,bh
   1400147b6:	xor    al,0xec
   1400147b8:	iret   
   1400147b9:	xchg   esi,eax
   1400147ba:	(bad)  
   1400147bb:	jg     0x1400147f4
   1400147bd:	adc    dl,ah
   1400147bf:	or     eax,0x79932c06
   1400147c4:	mov    ecx,0x7de4fc3
   1400147c9:	ss cld 
   1400147cb:	jge    0x140014813
   1400147cd:	(bad)  
   1400147ce:	pushf  
   1400147cf:	or     DWORD PTR [rdi],edi
   1400147d1:	rex.WRX movabs rcx,0x3811367dc22fb109
   1400147db:	jp     0x14001479a
   1400147dd:	pop    rsi
   1400147de:	jno    0x1400147bf
   1400147e0:	ins    BYTE PTR es:[rdi],dx
   1400147e1:	sar    DWORD PTR [rdi+0x26627bee],0x1a
   1400147e8:	popf   
   1400147e9:	std    
   1400147ea:	cld    
   1400147eb:	ret    
   1400147ec:	rex.RXB outs dx,DWORD PTR ds:[rsi]
   1400147ee:	mov    al,0x7f
   1400147f0:	cmc    
   1400147f1:	jne    0x140014869
   1400147f3:	ja     0x1400147ac
   1400147f5:	xchg   ecx,eax
   1400147f6:	and    al,0x58
   1400147f8:	xchg   edx,eax
   1400147f9:	fwait
   1400147fa:	xchg   BYTE PTR [rax+0x41],bh
   1400147fd:	jmp    0x1400147cc
   1400147ff:	addr32 push 0xffffffff8031925e
   140014805:	loop   0x140014863
   140014807:	or     bh,bh
   140014809:	pop    rcx
   14001480a:	fld    TBYTE PTR [rdi]
   14001480c:	stos   DWORD PTR es:[rdi],eax
   14001480d:	stc    
   14001480e:	scas   eax,DWORD PTR es:[rdi]
   14001480f:	adc    DWORD PTR [rcx+0x1218320b],ebp
   140014815:	stos   DWORD PTR es:[rdi],eax
   140014816:	push   rdx
   140014817:	lods   al,BYTE PTR ds:[rsi]
   140014818:	lahf   
   140014819:	and    DWORD PTR [rax],eax
   14001481b:	adc    DWORD PTR [rip+0xffffffff8218739c],edx        # 0xc219bbbd
   140014821:	enter  0xa57f,0xc
   140014825:	out    dx,eax
   140014826:	loopne 0x14001484d
   140014828:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014829:	(bad)  
   14001482b:	mov    bl,0x49
   14001482d:	es or  eax,0x223638d9
   140014833:	js     0x1400148a4
   140014835:	(bad)  
   140014836:	and    esi,eax
   140014838:	sahf   
   140014839:	sbb    eax,DWORD PTR [rdi-0x796456c9]
   14001483f:	fnstenv [rdx+riz*2+0x59]
   140014843:	movabs ds:0x61efb93c4248b949,al
   14001484c:	push   rax
   14001484d:	jmp    0x1400148b1
   14001484f:	lods   al,BYTE PTR ds:[rsi]
   140014850:	sub    BYTE PTR [rcx],dh
   140014852:	sub    bl,BYTE PTR [rdx]
   140014854:	add    ebx,DWORD PTR [rdx]
   140014856:	cmc    
   140014857:	pop    rsi
   140014858:	pushf  
   140014859:	sti    
   14001485a:	std    
   14001485b:	rex.WRX movabs al,ds:0x6c86129259594def
   140014865:	push   rsp
   140014866:	mov    WORD PTR [rsi+rdx*2-0x4b],?
   14001486a:	mov    esp,0xf7dd7682
   14001486f:	jge    0x140014898
   140014871:	iret   
   140014872:	(bad)  
   140014873:	jg     0x14001482d
   140014875:	adc    BYTE PTR [rcx-0x775555d2],dl
   14001487b:	pushf  
   14001487c:	(bad)  
   14001487d:	sbb    BYTE PTR [rdx],al
   14001487f:	rex.WX (bad) 
   140014881:	ficomp WORD PTR [rip+0x2711506b]        # 0x1671298f2
   140014887:	(bad)  
   140014888:	xchg   ebx,eax
   140014889:	data16 jb 0x1400148b4
   14001488c:	xchg   ebx,eax
   14001488d:	rex.RX push rax
   14001488f:	mov    ebp,0xbb75eb1
   140014894:	sar    al,1
   140014896:	leave  
   140014897:	pop    rdi
   140014898:	std    
   140014899:	mov    ch,0x23
   14001489b:	xor    eax,0x5c82db08
   1400148a0:	push   rbx
   1400148a1:	lea    ecx,[rsi]
   1400148a3:	xchg   ecx,eax
   1400148a4:	and    esp,edi
   1400148a6:	fmul   QWORD PTR [rip+0xffffffffbaaa518d]        # 0xfaab9a39
   1400148ac:	mov    esi,0x71d55551
   1400148b1:	fbstp  TBYTE PTR [rbp+0x7c74787a]
   1400148b7:	cmp    al,0x9b
   1400148b9:	int    0xa2
   1400148bb:	rex
   1400148bc:	in     al,0x24
   1400148bf:	(bad)  
   1400148c0:	test   al,0xce
   1400148c2:	mov    ecx,0x156e73b5
   1400148c7:	movsxd esp,DWORD PTR [rcx+rbp*2+0x555d659a]
   1400148ce:	ins    DWORD PTR es:[rdi],dx
   1400148cf:	or     BYTE PTR [rcx+0x53db7e0f],al
   1400148d5:	mov    edi,0x1be548a5
   1400148da:	push   rdx
   1400148db:	add    BYTE PTR [rax],al
   1400148dd:	lahf   
   1400148de:	(bad)  
   1400148df:	(bad)  
   1400148e0:	lahf   
   1400148e1:	stc    
   1400148e2:	(bad)  
   1400148e3:	cmp    eax,0x9fb77f9b
   1400148e8:	push   rsp
   1400148e9:	int3   
   1400148ea:	ja     0x140014892
   1400148ec:	test   BYTE PTR [rsi],ch
   1400148ee:	loop   0x14001491f
   1400148f0:	sub    al,0xb8
   1400148f2:	jno    0x1400148d5
   1400148f4:	(bad)  
   1400148f5:	and    BYTE PTR [rdx+0x62],bh
   1400148f8:	(bad)  
   1400148f9:	or     DWORD PTR [rbx],ecx
   1400148fb:	and    edi,edi
   1400148fd:	test   al,0x6d
   1400148ff:	(bad)  
   140014900:	cmp    DWORD PTR [rbp+0x42],edx
   140014903:	or     al,0xc4
   140014905:	push   0x2ae3416e
   14001490a:	jmp    0x1400148b5
   14001490c:	adc    DWORD PTR [rdx+0x54a2fdb1],eax
   140014912:	or     cl,BYTE PTR [rdx+0x24]
   140014915:	rex.R pop rbx
   140014917:	cmp    DWORD PTR [rsi-0x3c55dea9],esp
   14001491d:	loope  0x140014970
   14001491f:	xor    ebp,DWORD PTR [rbx+0x54]
   140014922:	fadd   st,st(4)
   140014924:	mov    dl,BYTE PTR ds:[rcx-0x2be914e5]
   14001492b:	xor    DWORD PTR [rcx-0x26b515c8],ebx
   140014931:	jnp    0x14001499d
   140014933:	xchg   edi,eax
   140014934:	(bad)  
   140014935:	jl     0x140014995
   140014937:	clc    
   140014938:	pop    rdi
   140014939:	stos   DWORD PTR es:[rdi],eax
   14001493a:	(bad)  
   14001493b:	add    rbp,r13
   14001493e:	fimul  WORD PTR [rdi-0x5f]
   140014941:	stos   BYTE PTR es:[rdi],al
   140014942:	outs   dx,DWORD PTR ds:[rsi]
   140014943:	adc    esi,edi
   140014945:	lods   al,BYTE PTR ds:[rsi]
   140014946:	adc    al,0x4e
   140014948:	ret    
   140014949:	jle    0x140014991
   14001494b:	rex.X (bad) 
   14001494d:	(bad)  
   14001494e:	data16 (bad) 
   140014951:	cld    
   140014952:	imul   esp,DWORD PTR [rip+0xffffffff83398cf8],0x5b        # 0xc33ad651
   140014959:	(bad)  
   14001495a:	cld    
   14001495b:	or     edx,edx
   14001495d:	lahf   
   14001495e:	out    0xb,al
   140014960:	(bad)  
   140014961:	cli    
   140014962:	cmp    al,0x2b
   140014964:	xchg   ebp,eax
   140014965:	cld    
   140014966:	jle    0x14001494c
   140014968:	adc    dh,BYTE PTR [rsi+rbp*4]
   14001496b:	(bad)  
   14001496c:	idiv   BYTE PTR [rip+0xffffffff9a37efae]        # 0xda393920
   140014972:	js     0x1400149c2
   140014974:	rex.RB cdq 
   140014976:	rex.WRX
   140014977:	rex.WR
   140014978:	movabs rsp,0x4cd8df4116edcaab
   140014982:	rex
   140014983:	rex.W (bad) 
   140014985:	mov    esi,0xcbe132bd
   14001498a:	test   BYTE PTR [rcx-0x14],ah
   14001498d:	xor    QWORD PTR [r13-0x7f],r12
   140014991:	jno    0x140014975
   140014993:	rcl    DWORD PTR [rbx+rbp*2+0x10],1
   140014997:	rex.WXB movabs r8,0xca5556c68e9e3873
   1400149a1:	imul   eax,DWORD PTR [rcx+0x8],0x31
   1400149a5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400149a6:	xlat   BYTE PTR ds:[rbx]
   1400149a7:	fwait
   1400149a8:	or     al,BYTE PTR [rax]
   1400149aa:	sub    al,0x2a
   1400149ac:	(bad)  
   1400149ad:	enter  0x9463,0xab
   1400149b1:	and    BYTE PTR [rax-0x29],dl
   1400149b4:	xor    eax,0x783b3b3b
   1400149b9:	out    0x39,eax
   1400149bb:	pop    rdx
   1400149bc:	sub    al,0xd0
   1400149be:	jrcxz  0x1400149d3
   1400149c0:	stos   BYTE PTR es:[rdi],al
   1400149c1:	retf   0x7517
   1400149c4:	in     al,0x72
   1400149c6:	cmp    DWORD PTR [rbx],esi
   1400149c8:	pop    rax
   1400149c9:	and    DWORD PTR [ecx],ebx
   1400149cc:	cmp    ah,BYTE PTR [rcx]
   1400149ce:	rex.WXB pop r10
   1400149d0:	(bad)  
   1400149d1:	xor    ecx,ebp
   1400149d3:	and    al,al
   1400149d5:	adc    al,0x8a
   1400149d7:	and    BYTE PTR [rax],bh
   1400149d9:	jno    0x140014980
   1400149db:	jae    0x14001496f
   1400149dd:	mov    ah,BYTE PTR [rcx]
   1400149df:	(bad)  
   1400149e0:	(bad)  
   1400149e1:	jmp    0x182a24b1a
   1400149e6:	sbb    edx,DWORD PTR [rax+rbx*8-0x57]
   1400149ea:	pushf  
   1400149eb:	iret   
   1400149ec:	mov    ch,dh
   1400149ee:	mov    esp,0x24ac95a1
   1400149f3:	xchg   ebx,eax
   1400149f4:	(bad)  
   1400149f5:	push   rdi
   1400149f6:	sti    
   1400149f7:	jge    0x140014a18
   1400149f9:	add    bh,BYTE PTR [rbp-0x21]
   1400149fc:	adc    al,BYTE PTR [rbx-0x50e4190e]
   140014a02:	jrcxz  0x1400149a0
   140014a04:	(bad)  
   140014a05:	mul    DWORD PTR [rdi]
   140014a07:	(bad)  
   140014a08:	loop   0x1400149ac
   140014a0a:	(bad)  
   140014a0b:	rex.WB
   140014a0c:	fwait
   140014a0d:	clc    
   140014a0e:	xchg   edi,eax
   140014a0f:	(bad)  
   140014a10:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014a11:	rex.RB (bad) 
   140014a13:	cmp    bl,BYTE PTR [rcx+0xf0e8fae]
   140014a19:	and    edx,DWORD PTR [rax]
   140014a1b:	push   rsp
   140014a1c:	cmc    
   140014a1d:	and    al,0xaa
   140014a1f:	stos   BYTE PTR es:[rdi],al
   140014a20:	rcl    BYTE PTR [rdx],0x91
   140014a23:	and    edx,DWORD PTR [rbp+0x15]
   140014a26:	out    0xdc,eax
   140014a28:	movabs eax,ds:0x95fc9f208624ee73
   140014a31:	rex.WRXB pop r13
   140014a33:	stos   DWORD PTR es:[rdi],eax
   140014a34:	stos   BYTE PTR es:[rdi],al
   140014a35:	stos   BYTE PTR es:[rdi],al
   140014a36:	imul   edi,DWORD PTR [rbx-0x9251252],0xffffffcd
   140014a3d:	jmp    0x17f9140ae
   140014a42:	(bad)  
   140014a43:	ror    DWORD PTR [rdi],1
   140014a45:	jg     0x1400149e0
   140014a47:	(bad)  [rbp+rdi*2-0x51ff53d]
   140014a4e:	fwait
   140014a4f:	xlat   BYTE PTR ds:[rbx]
   140014a50:	dec    DWORD PTR [rdi+rbp*2-0x796c2b44]
   140014a57:	test   al,0x91
   140014a59:	(bad)
   140014a5c:	lock shr BYTE PTR [rbx+0x12bc9628],1
   140014a63:	movabs ds:0x2710240e548a5612,eax
   140014a6c:	adc    eax,0x29d0951a
   140014a71:	xchg   ecx,eax
   140014a72:	ficom  WORD PTR [rdx+0x55]
   140014a75:	or     r11d,r13d
   140014a78:	(bad)  
   140014a79:	mov    edx,0xab82d4d7
   140014a7e:	rex mov esp,0x1156f2b3
   140014a84:	or     al,dl
   140014a86:	cmp    DWORD PTR [rip+0xffffffff8a18d038],esp        # 0xca1a1ac4
   140014a8c:	mov    ch,0xc2
   140014a8e:	rex.RXB cmp r15b,BYTE PTR [r10]
   140014a91:	outs   dx,BYTE PTR ds:[rsi]
   140014a92:	lods   al,BYTE PTR ds:[rsi]
   140014a93:	xchg   esp,eax
   140014a94:	mov    dh,0x83
   140014a96:	test   eax,0x66baf877
   140014a9b:	outs   dx,DWORD PTR ds:[rsi]
   140014a9c:	ss in  eax,0x61
   140014a9f:	cdq    
   140014aa0:	mov    cl,0xb3
   140014aa2:	jne    0x140014a32
   140014aa4:	mov    edi,0xf9b7f9f0
   140014aa9:	out    dx,eax
   140014aaa:	in     al,0x45
   140014aac:	sbb    dh,BYTE PTR [rax+0x4c0a3885]
   140014ab2:	addr32 hlt 
   140014ab4:	cmp    cl,BYTE PTR [rbx]
   140014ab6:	(bad)  
   140014ab7:	addr32 nop
   140014ab9:	jge    0x140014b1e
   140014abb:	cwde   
   140014abc:	ds (bad) 
   140014abe:	ins    BYTE PTR es:[rdi],dx
   140014abf:	in     al,0xcb
   140014ac1:	(bad)  
   140014ac2:	sub    eax,0x8c4158fc
   140014ac7:	mov    bl,0xfc
   140014ac9:	test   BYTE PTR ss:[rdi-0xc],bh
   140014acd:	cmp    bl,BYTE PTR [rdx+rdx*1+0x70a50dfe]
   140014ad4:	(bad)  
   140014ad5:	and    cl,BYTE PTR [rax-0x68ea25ff]
   140014adb:	sub    esi,DWORD PTR es:[rsp+rax*1]
   140014adf:	push   rbx
   140014ae0:	nop
   140014ae1:	rex.WB ret 0xe315
   140014ae5:	rex.W mov cs,WORD PTR [rsi+0x1efae98e]
   140014aec:	out    dx,eax
   140014aed:	cmp    al,0xce
   140014aef:	and    r15,rdi
   140014af2:	push   rsp
   140014af3:	sub    eax,0x5bdf928a
   140014af8:	xchg   edx,eax
   140014af9:	fs sub bl,dl
   140014afc:	rex.WB
   140014afd:	rex.W
   140014afe:	rex.B add al,0xbc
   140014b01:	repz ss cdq 
   140014b04:	mov    ebx,0x8d2fd86e
   140014b09:	push   rsp
   140014b0a:	xlat   BYTE PTR ds:[rbx]
   140014b0b:	mov    ch,0xa3
   140014b0d:	(bad)  
   140014b0e:	xor    BYTE PTR [rdx+0x10],0x34
   140014b12:	rex.RX pushf 
   140014b14:	jae    0x140014ab9
   140014b16:	jae    0x140014b5d
   140014b18:	rex.X leave 
   140014b1a:	rex.R sbb al,0x24
   140014b1d:	cmp    ch,BYTE PTR [rdx-0x3956d3eb]
   140014b23:	ret    0x842b
   140014b26:	xchg   esp,eax
   140014b27:	mov    esp,0xfcf16aa3
   140014b2c:	movabs ds:0xeec73f9e2e49d248,al
   140014b35:	(bad)  
   140014b36:	sbb    al,0x50
   140014b38:	rex.WRX xchg rsi,rax
   140014b3a:	mov    edx,DWORD PTR [rcx-0x5c8af93e]
   140014b40:	rex.RXB enter 0x7f70,0x79
   140014b45:	retf   
   140014b46:	xchg   DWORD PTR [rcx],ebx
   140014b48:	out    dx,al
   140014b49:	jns    0x140014b03
   140014b4b:	iret   
   140014b4c:	pushf  
   140014b4d:	ds adc ebx,esi
   140014b50:	ins    DWORD PTR es:[rdi],dx
   140014b51:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014b52:	fbld   TBYTE PTR [rsi+0x57]
   140014b55:	(bad)  
   140014b56:	mov    ch,0xf1
   140014b58:	sub    DWORD PTR [rbx+0x2a],ebp
   140014b5b:	add    dh,bl
   140014b5d:	mov    ebx,0xf0c8fc22
   140014b62:	xlat   BYTE PTR ds:[rbx]
   140014b63:	pop    rsi
   140014b65:	rdmsr  
   140014b67:	(bad)  
   140014b68:	or     cl,cl
   140014b6a:	adc    eax,0x79d30232
   140014b6f:	mov    BYTE PTR [r9+r13*8],r14b
   140014b73:	mov    dh,0x1a
   140014b75:	(bad)  
   140014b76:	push   rsi
   140014b77:	push   0x5a
   140014b79:	cs rex.WRXB adc r11b,r10b
   140014b7d:	test   edx,ecx
   140014b7f:	jnp    0x140014b1d
   140014b81:	stos   DWORD PTR es:[rdi],eax
   140014b82:	push   rax
   140014b83:	movabs ds:0xd9d583e7b795c5b9,al
   140014b8c:	sbb    eax,0x4620de1e
   140014b91:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014b92:	jmp    0x140014c0e
   140014b94:	fidivr WORD PTR [rsi-0x843da8e]
   140014b9a:	mov    edi,eax
   140014b9c:	scas   eax,DWORD PTR es:[rdi]
   140014b9d:	add    bh,bh
   140014b9f:	data16 adc al,0xc0
   140014ba2:	rex.RXB push QWORD PTR [r11+0x5723e3ff]
   140014ba9:	lahf   
   140014baa:	mov    ecx,0x677eddfc
   140014baf:	retf   0x3e64
   140014bb2:	xor    DWORD PTR [rax+0x3f],ebp
   140014bb5:	out    dx,eax
   140014bb6:	mov    eax,0xc433e176
   140014bbb:	jne    0x140014bf1
   140014bbd:	jb     0x140014b67
   140014bbf:	cmp    DWORD PTR [rsi+0x6d],0x35
   140014bc3:	rex.X sbb cl,spl
   140014bc6:	mov    edx,0xa97e6084
   140014bcb:	(bad)  
   140014bcc:	sahf   
   140014bcd:	mov    edx,0x1bb06876
   140014bd2:	stos   BYTE PTR es:[rdi],al
   140014bd3:	push   rdx
   140014bd4:	cdq    
   140014bd5:	jno    0x140014bd7
   140014bd7:	push   rsi
   140014bd8:	jno    0x140014b5f
   140014bda:	rex.RX mov bl,0xf2
   140014bdd:	pop    rbp
   140014bde:	or     BYTE PTR [rdx+rdi*1-0x73b884bb],ch
   140014be5:	(bad)  
   140014be6:	mov    ecx,DWORD PTR [rdx+0x55]
   140014be9:	or     ebp,DWORD PTR [rip+0xffffffff84a7758e]        # 0xc4a8c17d
   140014bef:	loopne 0x140014b89
   140014bf1:	push   rsp
   140014bf2:	or     eax,0x553476be
   140014bf7:	ret    
   140014bf8:	shl    DWORD PTR [rdx+rcx*8+0x56],0x5d
   140014bfd:	loope  0x140014c5c
   140014bff:	(bad)  
   140014c00:	cld    
   140014c01:	pop    rbx
   140014c02:	idiv   ecx
   140014c04:	lahf   
   140014c05:	mov    edi,0xbca0fca0
   140014c0a:	rex.WR in eax,0x4
   140014c0d:	mov    dh,0xee
   140014c0f:	data16 xor al,0xf0
   140014c13:	out    dx,al
   140014c14:	test   bh,bh
   140014c16:	hlt    
   140014c17:	addr32 mov ds:0x6f8cbeec,eax
   140014c1d:	rex.RXB jno 0x140014c1a
   140014c20:	int    0x30
   140014c22:	fild   QWORD PTR [rcx]
   140014c24:	add    eax,0x8afdb391
   140014c29:	or     esi,eax
   140014c2b:	mov    ch,0x20
   140014c2d:	call   FWORD PTR [rcx]
   140014c2f:	or     ah,BYTE PTR [rbx]
   140014c31:	mov    ebp,0x4204a9f
   140014c36:	push   rbx
   140014c37:	and    BYTE PTR [rdx],dl
   140014c39:	add    eax,esp
   140014c3b:	or     al,BYTE PTR [rbp-0x27]
   140014c3e:	ficomp WORD PTR [rdx-0x802288d]
   140014c44:	ror    BYTE PTR [rdi+riz*1+0x4c],cl
   140014c48:	fwait
   140014c49:	(bad)  
   140014c4a:	jmp    0x17122aeb3
   140014c4f:	xchg   edi,eax
   140014c50:	(bad)  
   140014c51:	jbe    0x140014ca7
   140014c53:	data16 (bad) 
   140014c55:	retf   
   140014c56:	add    al,0x76
   140014c58:	xchg   esi,eax
   140014c59:	mov    ebp,0x2d313a67
   140014c5e:	and    ch,dl
   140014c60:	cmp    eax,0xf592c5cb
   140014c65:	mov    edx,0xe71e57c5
   140014c6a:	cmp    eax,0x8d44f795
   140014c6f:	lods   al,BYTE PTR ds:[rsi]
   140014c70:	xchg   edi,eax
   140014c71:	stos   DWORD PTR es:[rdi],eax
   140014c72:	and    ah,BYTE PTR [rdx+riz*8]
   140014c75:	sbb    al,0x21
   140014c77:	rex.RX or r9d,edi
   140014c7a:	(bad)
   140014c7d:	push   0xa88e704
   140014c82:	stos   DWORD PTR es:[rdi],eax
   140014c83:	(bad)  
   140014c84:	retf   0x78e0
   140014c87:	stos   BYTE PTR es:[rdi],al
   140014c88:	(bad)  
   140014c89:	push   rax
   140014c8a:	movabs al,ds:0x3379d8bdd8b7bef
   140014c93:	sub    eax,0x4e4afd43
   140014c98:	fldz   
   140014c9a:	cli    
   140014c9b:	rcr    BYTE PTR [rbx],0xaf
   140014c9e:	mov    ebp,0x572bd5c6
   140014ca3:	mov    eax,0x791795f6
   140014ca8:	repnz loope 0x140014c32
   140014cab:	rex.WX or BYTE PTR [rdx],sil
   140014cae:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014caf:	repz sbb eax,DWORD PTR [rcx]
   140014cb2:	(bad)  
   140014cb3:	fisub  WORD PTR [rbx-0x41]
   140014cb6:	out    dx,eax
   140014cb7:	rex.WRB sti 
   140014cb9:	pop    rax
   140014cba:	(bad)  
   140014cbb:	and    DWORD PTR [rsp+rdi*1+0x28591484],0xfffffffa
   140014cc3:	xchg   DWORD PTR ds:[rdi],esi
   140014cc6:	shl    DWORD PTR [rbx-0x2df0c32d],cl
   140014ccc:	pop    rdi
   140014ccd:	(bad)  
   140014cce:	jb     0x140014d11
   140014cd0:	in     eax,0xf9
   140014cd2:	sbb    bl,dl
   140014cd4:	nop
   140014cd5:	xchg   ecx,eax
   140014cd6:	adc    ebx,DWORD PTR [rcx+0x7e]
   140014cd9:	pop    rax
   140014cda:	pop    rsp
   140014cdb:	(bad)  
   140014cdc:	lods   al,BYTE PTR ds:[rsi]
   140014cdd:	(bad)  
   140014cde:	(bad)  
   140014cdf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014ce0:	push   rax
   140014ce1:	test   BYTE PTR [rdx-0x72ef14f0],dh
   140014ce7:	jbe    0x140014ce1
   140014ce9:	mov    WORD PTR [rsi+0x0],ss
   140014cec:	out    0xbd,eax
   140014cee:	sub    DWORD PTR [rdx],ebx
   140014cf0:	mov    ch,0xdf
   140014cf2:	cmp    BYTE PTR [rcx-0x3b171a2],dh
   140014cf8:	loopne 0x140014d6b
   140014cfa:	cmp    DWORD PTR [rbx],ecx
   140014cfc:	js     0x140014d78
   140014cfe:	jno    0x140014cd4
   140014d00:	jne    0x140014c8f
   140014d02:	test   DWORD PTR [rsi],0x8c6a9cef
   140014d08:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014d09:	(bad)  
   140014d0a:	fdiv   DWORD PTR [rdi]
   140014d0c:	mov    ch,0x7d
   140014d0e:	rex.XB or spl,BYTE PTR [r8+0x7d]
   140014d12:	cmc    
   140014d13:	in     al,0xcf
   140014d15:	mov    BYTE PTR [rbx-0xac25067],dl
   140014d1b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014d1c:	movabs ds:0x393cb06fb7acb45d,al
   140014d25:	rex.R stos BYTE PTR es:[rdi],al
   140014d27:	(bad)  
   140014d28:	lods   eax,DWORD PTR ds:[rsi]
   140014d29:	and    edx,ecx
   140014d2b:	sub    DWORD PTR [rbp-0x7c],edx
   140014d2e:	fcomp  st(1)
   140014d30:	rex.WRB (bad) 
   140014d32:	rex.WRX call 0x1ab6018b2
   140014d38:	(bad)  
   140014d39:	es retf 0x6dba
   140014d3d:	icebp  
   140014d3e:	and    eax,edx
   140014d40:	jns    0x140014d87
   140014d42:	icebp  
   140014d43:	(bad)  
   140014d44:	fcom   st(2)
   140014d46:	xchg   DWORD PTR [rax-0x2d],eax
   140014d49:	fld    TBYTE PTR [rdx+0x595e8bb1]
   140014d4f:	scas   eax,DWORD PTR es:[rdi]
   140014d50:	lods   al,BYTE PTR ds:[rsi]
   140014d51:	stos   DWORD PTR es:[rdi],eax
   140014d52:	lea    ecx,[rbx+0x19ad1f42]
   140014d58:	enter  0x9a9a,0x2a
   140014d5c:	cmp    ch,BYTE PTR [rdx+0x67]
   140014d5f:	jo     0x140014d6f
   140014d61:	push   rcx
   140014d62:	sub    bl,bh
   140014d64:	adc    esi,DWORD PTR [rbp-0x3b]
   140014d67:	push   rdx
   140014d68:	add    edi,DWORD PTR [rsi+0x5e]
   140014d6b:	adc    DWORD PTR [rbp+0x77fdef61],esp
   140014d71:	icebp  
   140014d72:	ret    
   140014d73:	lahf   
   140014d74:	jae    0x140014d72
   140014d76:	cmp    edi,edi
   140014d78:	sub    dh,ch
   140014d7a:	popf   
   140014d7b:	add    dh,BYTE PTR [rbx+0x5eec293b]
   140014d81:	xor    DWORD PTR [rsi],edx
   140014d83:	mov    edx,0x622ceff9
   140014d88:	outs   dx,DWORD PTR ds:[rsi]
   140014d89:	lods   al,BYTE PTR ds:[rsi]
   140014d8a:	add    al,0xe2
   140014d8c:	xor    BYTE PTR [rcx],bh
   140014d8e:	(bad)  
   140014d8f:	je     0x140014d51
   140014d91:	movabs al,ds:0x7f23e4b1439cc62c
   140014d9a:	push   QWORD PTR [rdx+rdx*2+0x47f85338]
   140014da1:	retf   0x7c67
   140014da4:	(bad)  
   140014da5:	jbe    0x140014d70
   140014da7:	mov    ecx,0x45d1ac9
   140014dac:	and    edi,DWORD PTR [rbx+0x2c18f154]
   140014db2:	lahf   
   140014db3:	iret   
   140014db4:	fdivr  QWORD PTR es:[rbx-0x7a013c45]
   140014dbb:	or     edi,DWORD PTR [rax+rdi*8-0x8c3a406]
   140014dc2:	out    0xdb,al
   140014dc4:	sbb    al,0xec
   140014dc6:	out    dx,al
   140014dc7:	adc    al,0xeb
   140014dc9:	(bad)  
   140014dca:	(bad)  
   140014dcb:	(bad)  
   140014dcc:	jnp    0x140014e08
   140014dce:	(bad)
   140014dd1:	fwait
   140014dd2:	ja     0x140014e45
   140014dd4:	mov    dl,0x20
   140014dd6:	mov    BYTE PTR [rax-0x2d],0x34
   140014dda:	hlt    
   140014ddb:	jge    0x140014dfd
   140014ddd:	xchg   BYTE PTR [rsi-0x620b0d56],bl
   140014de3:	sbb    eax,0xb220e4db
   140014de8:	mov    ebp,0x80d445b5
   140014ded:	ja     0x140014d7d
   140014def:	adc    BYTE PTR [rbp+0x1f7857c6],dl
   140014df5:	adc    edi,esp
   140014df7:	or     ecx,edx
   140014df9:	cmp    bh,bl
   140014dfb:	xchg   edx,eax
   140014dfc:	nop
   140014dfd:	rex.R or al,0x11
   140014e00:	(bad)  
   140014e01:	mov    ?,WORD PTR [rcx+0x33]
   140014e04:	movabs eax,ds:0x8d1e20200b563d8f
   140014e0d:	mov    cl,0x40
   140014e0f:	jb     0x140014e50
   140014e11:	cdq    
   140014e12:	es mov ah,0x90
   140014e15:	(bad)  
   140014e16:	and    edx,DWORD PTR [rdx+0x37ab0ce8]
   140014e1c:	mov    eax,0x880ae576
   140014e21:	mov    al,0x5e
   140014e23:	ja     0x140014e69
   140014e25:	int    0x8
   140014e27:	and    edx,DWORD PTR [rdx+0xe]
   140014e2a:	nop
   140014e2b:	movabs ds:0x721c9689cb250c9c,eax
   140014e34:	sbb    eax,esp
   140014e36:	or     al,0xe
   140014e38:	push   rax
   140014e39:	cmp    bl,BYTE PTR [rax]
   140014e3b:	adc    DWORD PTR [rbx],eax
   140014e3d:	(bad)  
   140014e3e:	(bad)  
   140014e3f:	rex.XB lea ebp,[r9+0x1e]
   140014e43:	or     al,0x8f
   140014e45:	iret   
   140014e46:	(bad)  
   140014e47:	jno    0x140014e9c
   140014e49:	(bad)  
   140014e4a:	fcom   DWORD PTR [rdi-0x348e25df]
   140014e50:	cmp    DWORD PTR [rcx+riz*4],esi
   140014e53:	xchg   DWORD PTR [rbp+rdi*4+0x11],esp
   140014e57:	sub    ecx,ebp
   140014e59:	(bad)  
   140014e5a:	jbe    0x140014e58
   140014e5c:	pop    rax
   140014e5d:	mov    gs,WORD PTR [rbx-0x39]
   140014e60:	(bad)  
   140014e61:	rcr    DWORD PTR [rip+0xffffffff902abb19],0xd0        # 0xd02c0981
   140014e68:	scas   al,BYTE PTR es:[rdi]
   140014e69:	rex.WXB lods rax,QWORD PTR ds:[rsi]
   140014e6b:	shr    ch,cl
   140014e6d:	cwde   
   140014e6e:	xchg   edx,eax
   140014e6f:	adc    al,0x8e
   140014e71:	jns    0x140014e82
   140014e73:	xchg   esi,eax
   140014e74:	es out dx,eax
   140014e76:	popf   
   140014e77:	xor    BYTE PTR [rcx+0x26],ch
   140014e7a:	rex.WR (bad) 
   140014e7c:	sbb    cl,BYTE PTR [rip+0xffffffffdfdef7b1]        # 0x11fe04633
   140014e82:	(bad)  
   140014e83:	mov    dl,0xe7
   140014e85:	ja     0x140014e34
   140014e87:	add    dh,bh
   140014e89:	enter  0xfd0f,0xd4
   140014e8d:	ret    
   140014e8e:	(bad)  
   140014e8f:	cld    
   140014e90:	(bad)  
   140014e91:	ds cmc 
   140014e93:	(bad)  [rsi+0x7b]
   140014e96:	pop    rbx
   140014e97:	mov    eax,0xf40311da
   140014e9c:	movabs eax,ds:0xf0bcee15ffbfc3
   140014ea5:	scas   eax,DWORD PTR es:[rdi]
   140014ea6:	mov    edi,0x1e6405f5
   140014eab:	xchg   ecx,eax
   140014eac:	pop    rbp
   140014ead:	or     al,dh
   140014eaf:	push   rdx
   140014eb0:	scas   eax,DWORD PTR es:[rdi]
   140014eb1:	add    al,0xaf
   140014eb3:	mov    eax,0x11d513d8
   140014eb8:	movabs ds:0x4ad2950b5d8b93f5,al
   140014ec1:	and    al,0xf4
   140014ec3:	sar    DWORD PTR [rdx+0x544f0458],1
   140014ec9:	pop    rax
   140014eca:	not    BYTE PTR [rcx-0x1f2fec6d]
   140014ed0:	cdq    
   140014ed1:	int3   
   140014ed2:	sub    ch,BYTE PTR [rdx+0x605ac2ba]
   140014ed8:	cmp    DWORD PTR [rdx],edi
   140014eda:	xlat   BYTE PTR ds:[rbx]
   140014edb:	adc    bh,BYTE PTR [rbx+0x67]
   140014ede:	rex.W sbb al,dil
   140014ee1:	rex.WRX pop rbp
   140014ee3:	ror    DWORD PTR [rax+0x5af50f15],cl
   140014ee9:	adc    DWORD PTR [rbp+0x4d],edi
   140014eec:	mov    ebp,0xd6102c25
   140014ef1:	fbstp  TBYTE PTR [rdx-0x72]
   140014ef4:	(bad)  
   140014ef5:	std    
   140014ef6:	je     0x140014ec7
   140014ef8:	pop    rdi
   140014ef9:	jno    0x140014eaa
   140014efb:	push   rdx
   140014efc:	pop    rdi
   140014efd:	add    ah,BYTE PTR [rsi-0x200f2769]
   140014f03:	outs   dx,DWORD PTR ds:[rsi]
   140014f04:	mov    cl,0xfc
   140014f06:	sub    DWORD PTR [rdi+rax*8+0x29],edi
   140014f0a:	and    esp,esp
   140014f0c:	sbb    eax,0xe74e7c12
   140014f11:	imul   BYTE PTR [rdi-0x5c]
   140014f14:	dec    DWORD PTR [rsi-0x630bc37c]
   140014f1a:	ins    DWORD PTR es:[rdi],dx
   140014f1b:	(bad)  
   140014f1d:	push   rcx
   140014f1e:	push   0x30c52cf0
   140014f23:	rex.RX adc eax,0x8909333d
   140014f29:	loopne 0x140014eb5
   140014f2b:	test   eax,0xc880571c
   140014f30:	mov    edx,0x15af58ed
   140014f35:	xchg   eax,esi
   140014f37:	jmp    0x1afe6eee3
   140014f3c:	(bad)  
   140014f3d:	(bad)  
   140014f3e:	call   QWORD PTR [rax+0x131dbd83]
   140014f44:	pop    rax
   140014f45:	out    0xf0,eax
   140014f47:	(bad)  
   140014f49:	(bad)  
   140014f4a:	adc    eax,0xcdd47395
   140014f4f:	test   ch,al
   140014f51:	int    0x6b
   140014f53:	mov    esp,0xb2cfa5f6
   140014f58:	mov    bl,0xb5
   140014f5a:	(bad)
   140014f5d:	rex.WRX mov WORD PTR [rcx],ss
   140014f60:	out    dx,eax
   140014f61:	test   BYTE PTR [rsi-0x7698ef52],ah
   140014f67:	movabs eax,ds:0xb1555509c593951a
   140014f70:	xor    eax,0x6f7d19f
   140014f75:	xlat   BYTE PTR ds:[rbx]
   140014f76:	sub    ebp,edi
   140014f78:	test   eax,0x6db69aea
   140014f7d:	test   eax,0x6baea7bc
   140014f82:	pushf  
   140014f83:	ja     0x140014f49
   140014f85:	adc    BYTE PTR [rcx-0x53],bl
   140014f88:	xchg   edi,eax
   140014f89:	fdivr  QWORD PTR [rbx-0x29]
   140014f8c:	cmp    eax,0x1178ba5c
   140014f91:	jno    0x140014fd5
   140014f93:	pop    rbp
   140014f94:	(bad)  
   140014f95:	or     esi,ebx
   140014f97:	or     bl,BYTE PTR [rdx]
   140014f99:	add    esi,DWORD PTR [rbx+0x7d1e1dad]
   140014f9f:	fild   WORD PTR [rdi]
   140014fa1:	test   al,0xbc
   140014fa3:	xor    esi,edx
   140014fa5:	or     eax,0xad96696b
   140014faa:	sti    
   140014fab:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014fac:	scas   al,BYTE PTR es:[rdi]
   140014fad:	int3   
   140014fae:	xor    eax,0x214c9c48
   140014fb3:	or     al,BYTE PTR [rdi+0x21]
   140014fb6:	rex.WRB retf 
   140014fb8:	xor    al,0xb4
   140014fba:	fisttp WORD PTR [rsi+0x27472d25]
   140014fc0:	movabs ds:0x66780985f6aab168,al
   140014fc9:	and    esp,ebp
   140014fcb:	xchg   ecx,eax
   140014fcc:	(bad)  
   140014fcd:	mov    DWORD PTR [rbp+0x71],ecx
   140014fd0:	in     al,0x77
   140014fd2:	or     al,0xfd
   140014fd4:	or     eax,0x6440f846
   140014fd9:	clc    
   140014fda:	sbb    al,0x43
   140014fdc:	xor    eax,0xf3b103d9
   140014fe1:	push   0xfffffffffffffffe
   140014fe3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014fe4:	rex.RB (bad) 
   140014fe6:	in     al,dx
   140014fe7:	retf   0x2147
   140014fea:	push   rsi
   140014feb:	cmp    ebx,DWORD PTR [rdi+0x4e]
   140014fee:	loopne 0x14001501a
   140014ff0:	mov    ds,WORD PTR [rax-0x1a]
   140014ff3:	pop    rsp
   140014ff4:	or     BYTE PTR [rcx-0x19],cl
   140014ff7:	imul   ecx,edx,0x7b
   140014ffa:	or     BYTE PTR [rip+0xffffffffc2c129a9],al        # 0x102c279a9
   140015000:	mov    bh,0x48
   140015002:	cdq    
   140015003:	scas   al,BYTE PTR es:[rdi]
   140015004:	(bad)  
   140015005:	(bad)  
   140015006:	xchg   edi,eax
   140015007:	pop    rdi
   140015008:	jge    0x140014fff
   14001500a:	fisttp WORD PTR [rdx+rax*1-0x50d40588]
   140015011:	(bad)  
   140015012:	and    ecx,eax
   140015014:	(bad)  [rbx+0x59]
   140015017:	push   rdi
   140015018:	adc    eax,0x774c8da1
   14001501d:	add    eax,0x7b68266d
   140015022:	mov    es,WORD PTR [rdi]
   140015024:	cs ds int3 
   140015027:	or     edi,edx
   140015029:	jns    0x140014fd5
   14001502b:	call   0xed50fb00
   140015030:	add    al,0x6d
   140015032:	xchg   edx,eax
   140015033:	mov    bh,BYTE PTR [rax]
   140015035:	jo     0x140015081
   140015037:	fcomip st,st(7)
   140015039:	hlt    
   14001503a:	sbb    cl,BYTE PTR [rax]
   14001503c:	jne    0x140015062
   14001503e:	push   rsi
   14001503f:	loopne 0x140014ff1
   140015041:	adc    BYTE PTR [rbp+rdx*1-0x7b],dl
   140015045:	fimul  DWORD PTR [rcx]
   140015047:	add    al,0xcf
   140015049:	jb     0x140014fec
   14001504b:	mov    al,0xa8
   14001504d:	test   al,0x9a
   14001504f:	xchg   esp,eax
   140015050:	icebp  
   140015051:	(bad)  
   140015052:	ficom  DWORD PTR [rdi-0x29]
   140015056:	movabs eax,ds:0x78998af8828f88ab
   14001505f:	push   dx
   140015061:	loope  0x140015054
   140015063:	mov    ah,0x38
   140015065:	mov    ?,WORD PTR [rdx-0x5c61d1c1]
   14001506b:	pop    rdx
   14001506c:	pop    rcx
   14001506d:	rex.WRX and BYTE PTR [rdi],0x2f
   140015071:	lock or edi,0xffffffd4
   140015075:	cld    
   140015076:	add    eax,0x79f53af7
   14001507b:	test   ecx,ebp
   14001507d:	xchg   BYTE PTR [r15+rsi*2],r8b
   140015081:	fcom   DWORD PTR [rsi+rdi*8]
   140015084:	mov    cl,0xf5
   140015086:	(bad)  
   140015087:	mov    esi,0x611c4c7c
   14001508c:	(bad)  
   14001508d:	out    dx,al
   14001508e:	xchg   ecx,eax
   14001508f:	ror    BYTE PTR [rdi+0x1896fd85],1
   140015095:	jg     0x140015095
   140015097:	cmp    al,0x70
   140015099:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001509a:	jo     0x14001510b
   14001509c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001509d:	add    ecx,DWORD PTR [rdi-0x5617beb]
   1400150a3:	cs std 
   1400150a5:	in     eax,dx
   1400150a6:	pop    rbx
   1400150a7:	cs out dx,al
   1400150a9:	add    eax,0x68ebd5e4
   1400150ae:	mov    eax,0xd7f5920f
   1400150b3:	rex.W pop rsi
   1400150b5:	nop    DWORD PTR [rdi]
   1400150b8:	mov    fs,WORD PTR [rdi]
   1400150ba:	(bad)  
   1400150bb:	mov    esp,0xb3534987
   1400150c0:	pop    rdx
   1400150c1:	lods   eax,DWORD PTR ds:[rsi]
   1400150c2:	nop
   1400150c3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400150c4:	sub    DWORD PTR [rdx+0x8477bc2],0x2b461521
   1400150ce:	pop    rbx
   1400150cf:	pop    rbx
   1400150d0:	pop    rbx
   1400150d1:	hlt    
   1400150d2:	stos   DWORD PTR es:[rdi],eax
   1400150d3:	add    eax,0xc2bb5e6f
   1400150d8:	cmp    eax,0x7385dd77
   1400150dd:	mov    ?,WORD PTR [rbp-0x74]
   1400150e0:	sub    al,0x60
   1400150e2:	xor    DWORD PTR [rsp+rdi*4],0x7c
   1400150e6:	in     eax,0xa
   1400150e8:	pop    rbx
   1400150e9:	mov    bl,0x29
   1400150eb:	(bad)  
   1400150ec:	mov    bl,0x19
   1400150ee:	mov    cl,0xb8
   1400150f1:	movsxd eax,DWORD PTR [rdx+rbx*2]
   1400150f4:	loop   0x1400150fd
   1400150f6:	stos   BYTE PTR es:[rdi],al
   1400150f7:	mov    esp,0xeb0af575
   1400150fc:	in     eax,0x8a
   1400150fe:	shl    QWORD PTR [r8+0x42669328],cl
   140015105:	pop    rbp
   140015106:	push   rdi
   140015107:	cmp    bh,ah
   140015109:	or     BYTE PTR [rbp-0x31],bl
   14001510c:	(bad)  
   14001510d:	mov    ecx,0x9555548b
   140015112:	cmp    BYTE PTR [rdi-0x65668f4c],al
   140015118:	rex.X
   140015119:	rex.WRB
   14001511a:	rex.WRB
   14001511b:	es sub al,0xda
   14001511e:	(bad)  
   14001511f:	pop    rsp
   140015120:	pushf  
   140015121:	shl    esp,0xda
   140015124:	mov    esp,0xe23902c9
   140015129:	sub    eax,0x919816c8
   14001512e:	in     eax,0x86
   140015130:	mov    dl,0xde
   140015132:	ror    DWORD PTR [rax+0x35],0x90
   140015136:	add    eax,0x3a42310e
   14001513b:	(bad)  
   14001513c:	out    0x9c,eax
   14001513e:	repz xchg esp,eax
   140015140:	stc    
   140015141:	xchg   esp,eax
   140015142:	lods   al,BYTE PTR ds:[rsi]
   140015143:	push   rax
   140015144:	mov    ecx,DWORD PTR [rdx+0x48]
   140015147:	repz movsxd eax,DWORD PTR [rax-0x6d28906]
   14001514e:	repnz adc al,0x8a
   140015151:	(bad)  
   140015152:	retf   0x48ee
   140015155:	es rex.WRX ins DWORD PTR es:[rdi],dx
   140015158:	mov    esp,0x4a48a2b2
   14001515d:	rex.X (bad) 
   14001515f:	fld    QWORD PTR [rsi]
   140015161:	imul   edx,esi,0x22
   140015164:	in     eax,0x8c
   140015166:	(bad)  
   140015167:	(bad)  
   140015168:	sub    eax,0x90c28bda
   14001516d:	(bad)  
   14001516e:	in     eax,0x27
   140015170:	push   rbp
   140015171:	(bad)  
   140015172:	or     DWORD PTR [rdi-0x42],ebp
   140015175:	jns    0x140015170
   140015177:	xor    al,0xb3
   140015179:	sti    
   14001517a:	rex.WRB ins DWORD PTR es:[rdi],dx
   14001517c:	out    dx,eax
   14001517d:	rex.WX add rsp,rdi
   140015180:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015181:	(bad)  
   140015182:	cld    
   140015183:	movsxd esi,DWORD PTR [rbx+0x2f7bf95f]
   140015189:	jle    0x14001515a
   14001518b:	fs jnp 0x140015170
   14001518e:	jl     0x1400151ed
   140015190:	jrcxz  0x14001512e
   140015192:	adc    bl,bl
   140015194:	(bad)  
   140015195:	mov    ecx,0x9f8dc563
   14001519a:	mov    edx,0xb3547893
   14001519f:	neg    DWORD PTR [rbp+0x33]
   1400151a2:	hlt    
   1400151a3:	out    dx,al
   1400151a4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400151a5:	mov    DWORD PTR [rdx+0x21ede7d4],esp
   1400151ab:	mov    ebx,0x84bdb2ca
   1400151b0:	rex.W or BYTE PTR [rsi],cl
   1400151b3:	lea    eax,[rcx+0x58348740]
   1400151b9:	rex.XB leave 
   1400151bb:	(bad)  
   1400151bc:	push   rbx
   1400151bd:	(bad)  
   1400151be:	mov    bh,BYTE PTR [rdx+0x62]
   1400151c1:	push   rsi
   1400151c2:	jge    0x140015175
   1400151c4:	mov    gs,WORD PTR [rdi+rcx*2-0x5f6bede4]
   1400151cb:	xchg   esi,eax
   1400151cc:	adc    bl,BYTE PTR [rbx+rbx*8]
   1400151cf:	mov    BYTE PTR [rbx+0x2c],cl
   1400151d2:	ins    BYTE PTR es:[rdi],dx
   1400151d3:	adc    eax,0x7c2aa905
   1400151d8:	push   rbx
   1400151d9:	push   rbx
   1400151da:	mov    ebx,0x138e7506
   1400151df:	add    dl,BYTE PTR [rip+0x4581a891]        # 0x18582fa76
   1400151e5:	push   rdi
   1400151e6:	ror    DWORD PTR [rdx+0x4f],cl
   1400151e9:	adc    al,0xc7
   1400151eb:	ins    BYTE PTR es:[rdi],dx
   1400151ec:	jnp    0x1400151b0
   1400151ee:	shl    DWORD PTR [rsi+riz*8-0x1825620],0xfc
   1400151f6:	out    0xdf,eax
   1400151f8:	in     al,0x7
   1400151fa:	mov    ebx,0xd5dd99b7
   1400151ff:	shl    BYTE PTR [rbx+rbx*8+0x12],0x90
   140015204:	sbb    BYTE PTR [rcx],cl
   140015206:	pop    rax
   140015207:	jle    0x140015216
   140015209:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001520a:	sub    al,0xfa
   14001520c:	sbb    dh,bl
   14001520e:	addr32 es call rsp
   140015212:	sti    
   140015213:	or     eax,0xe5046ef2
   140015218:	mov    edx,0x3862331f
   14001521e:	rex.RB add al,0x72
   140015221:	(bad)  
   140015222:	(bad)  
   140015223:	stc    
   140015224:	mov    esp,0xf7d2bae5
   140015229:	jge    0x1400151ef
   14001522b:	xor    eax,0x345beb8a
   140015230:	rex.RX
   140015231:	rex.X mov BYTE PTR [rax+0x2594448f],cl
   140015238:	rex.X or al,0x4a
   14001523b:	sbb    edi,DWORD PTR [rdx]
   14001523d:	sahf   
   14001523e:	jl     0x140015238
   140015240:	add    DWORD PTR [rsi],edi
   140015242:	(bad)  
   140015243:	mov    esi,0x67c4f927
   140015248:	lahf   
   140015249:	data16 ror BYTE PTR [rax+rbp*4-0x44],cl
   14001524e:	movabs ds:0x4c763592aaaa9ef1,eax
   140015257:	mov    bh,0x77
   140015259:	js     0x14001522a
   14001525b:	sti    
   14001525c:	(bad)  
   14001525d:	(bad)  
   14001525e:	mov    bl,0xff
   140015260:	cli    
   140015261:	push   rdi
   140015262:	pop    rcx
   140015263:	cs xchg edi,eax
   140015265:	pushf  
   140015266:	cmp    edi,DWORD PTR [rax]
   140015268:	addr32 popf 
   14001526a:	mov    esp,0x614b5c36
   14001526f:	shl    BYTE PTR [rsp+rsi*1],cl
   140015272:	xchg   ebx,eax
   140015273:	sub    DWORD PTR [rbp+0x33],ecx
   140015276:	sub    edi,ebx
   140015278:	or     eax,0xb4d241fa
   14001527d:	xor    eax,0xc8c63dd6
   140015282:	jl     0x1400152ba
   140015284:	addr32 addr32 jnp 0x1400152af
   140015288:	or     DWORD PTR [rcx-0xccd2c1e],edi
   14001528e:	and    DWORD PTR [rsi+rcx*8],eax
   140015291:	fbstp  TBYTE PTR [rcx+0x7]
   140015294:	bsr    esp,edi
   140015297:	xor    DWORD PTR [rdx-0x23bcb95a],ebx
   14001529d:	lock stos DWORD PTR es:[rdi],eax
   14001529f:	sub    ebp,edi
   1400152a1:	test   al,0x2a
   1400152a3:	iret   
   1400152a4:	(bad)  
   1400152a5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400152a6:	and    eax,0xef3823e7
   1400152ab:	sbb    QWORD PTR [r14+rsi*1],r10
   1400152af:	lahf   
   1400152b0:	(bad)
   1400152b4:	rex.WB
   1400152b5:	rex.WRX (bad) 
   1400152b7:	fldenv [rcx-0x61ade1f8]
   1400152bd:	gs mov esi,0xc7816cc6
   1400152c3:	lahf   
   1400152c4:	(bad)  
   1400152c5:	push   rsi
   1400152c6:	cmp    bh,BYTE PTR [rcx+0x43843a12]
   1400152cc:	repz icebp 
   1400152ce:	mov    dl,0x32
   1400152d0:	nop
   1400152d1:	lods   al,BYTE PTR ds:[rsi]
   1400152d2:	adc    DWORD PTR [rdx+0x4140c8d2],edx
   1400152d8:	xor    al,0xbb
   1400152da:	(bad)  
   1400152db:	rex.RX
   1400152dc:	fwait
   1400152dd:	data16 outs dx,BYTE PTR ds:[rsi]
   1400152df:	and    dl,BYTE PTR [rbx+0x7aa4b9d9]
   1400152e5:	cmp    BYTE PTR [rdi+0x3e],ch
   1400152e8:	lahf   
   1400152e9:	(bad)  
   1400152ea:	call   0xd1829471
   1400152ef:	adc    al,0x58
   1400152f1:	mov    ?,WORD PTR [rbx-0x58]
   1400152f4:	sub    bh,BYTE PTR [rax]
   1400152f6:	fxch   st(0)
   1400152f8:	mov    esp,0xedebb0b4
   1400152fd:	fcmovnu st,st(6)
   1400152ff:	sbb    eax,0xbfb6e802
   140015304:	(bad)  
   140015305:	mov    ah,0xdd
   140015307:	push   rbx
   140015308:	(bad)  
   140015309:	rcl    DWORD PTR [rdi+riz*8],0x6c
   14001530d:	(bad)  
   14001530e:	push   rbx
   14001530f:	cmc    
   140015310:	test   BYTE PTR [rsi+0x7077e667],bh
   140015316:	fisttp DWORD PTR [rip+0x47ad0f44]        # 0x187ae6260
   14001531c:	jbe    0x14001534b
   14001531e:	mov    ah,0x17
   140015320:	popf   
   140015321:	movabs ds:0xf98ded15411ac54a,eax
   14001532a:	jne    0x1400152c1
   14001532c:	push   rax
   14001532d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001532e:	cmc    
   14001532f:	(bad)  
   140015330:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015331:	xor    eax,DWORD PTR [rdi]
   140015333:	test   al,0xd5
   140015335:	enter  0xfba,0x9c
   140015339:	pushf  
   14001533a:	sub    BYTE PTR [rbx+rbx*1+0x13a457bc],ch
   140015341:	mov    ah,0x4d
   140015343:	(bad)  
   140015344:	pop    rsp
   140015345:	in     eax,0xa8
   140015347:	pop    rbp
   140015348:	rex.RB push r11
   14001534a:	cmp    esp,DWORD PTR [rsi]
   14001534c:	(bad)  
   14001534d:	(bad)
   140015350:	shl    BYTE PTR [rcx+0x1a044350],1
   140015356:	sub    eax,esp
   140015358:	rex.XB (bad) 
   14001535a:	add    esp,eax
   14001535c:	jrcxz  0x140015303
   14001535e:	mov    bx,0xb29e
   140015362:	(bad)  
   140015363:	ins    DWORD PTR es:[rdi],dx
   140015364:	jo     0x140015379
   140015366:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015367:	jp     0x14001534b
   140015369:	add    ch,BYTE PTR [rdi+0x78f2debc]
   14001536f:	cmp    BYTE PTR [rcx+0x2cc76db8],al
   140015375:	data16 and bl,BYTE PTR [rbx+0x5]
   140015379:	sub    BYTE PTR [rax+rax*2],bh
   14001537c:	cdq    
   14001537d:	movabs ds:0x3e8f8a4160c395a7,al
   140015386:	push   rsi
   140015387:	or     dh,BYTE PTR [rdi-0x53700f8]
   14001538d:	xor    esi,DWORD PTR [rdx-0x1152da12]
   140015393:	(bad)  
   140015394:	out    dx,eax
   140015395:	(bad)  
   140015396:	(bad)  
   140015397:	cdq    
   140015398:	addr32 fwait
   14001539a:	rex.X in al,dx
   14001539c:	lock push rbp
   14001539e:	rex.WRXB (bad) 
   1400153a0:	(bad)  
   1400153a1:	adc    ebp,DWORD PTR [rbx+0x54f1179e]
   1400153a7:	mov    dh,0x2a
   1400153a9:	(bad)
   1400153ad:	xchg   ecx,eax
   1400153ae:	lods   eax,DWORD PTR ds:[rsi]
   1400153af:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400153b0:	loope  0x1400153c1
   1400153b2:	cld    
   1400153b3:	(bad)  
   1400153b4:	out    dx,eax
   1400153b5:	in     al,0x8b
   1400153b7:	(bad)  
   1400153b8:	mov    esp,0x4cf7db48
   1400153bd:	(bad)  
   1400153be:	sub    edx,esp
   1400153c0:	or     eax,0x7c138bd6
   1400153c5:	mov    edx,0x3e0f4b85
   1400153ca:	xchg   BYTE PTR [rdx-0x20],ch
   1400153cd:	test   DWORD PTR [rdi-0x1a80bcc1],esp
   1400153d3:	sub    eax,0x680ef6f6
   1400153d8:	(bad)  
   1400153d9:	mov    edx,0x4d7cc04c
   1400153de:	movabs eax,ds:0x7432e74c135b69ef
   1400153e7:	rex.WRXB pushf 
   1400153e9:	clc    
   1400153ea:	mov    BYTE PTR [rbx+rcx*1],dh
   1400153ed:	xor    edx,edx
   1400153ef:	jne    0x14001540e
   1400153f1:	jge    0x1400153df
   1400153f3:	jmp    0xc18e72f2
   1400153f8:	mov    dh,0xed
   1400153fa:	test   al,0xaa
   1400153fc:	mov    bh,BYTE PTR [rbx+0x6f8fb9ee]
   140015402:	jns    0x1400153ee
   140015404:	add    ebp,esp
   140015406:	in     al,dx
   140015407:	in     eax,dx
   140015408:	pop    rcx
   140015409:	out    0x62,eax
   14001540b:	xchg   edi,eax
   14001540c:	sbb    DWORD PTR [rdi+0x13],esi
   14001540f:	mov    esp,0x5a39a9a6
   140015414:	lods   eax,DWORD PTR ds:[rsi]
   140015415:	jmp    0x19a87a05d
   14001541a:	mov    WORD PTR [rax],?
   14001541c:	mov    WORD PTR [rcx],?
   14001541e:	mov    DWORD PTR [rbp+0x2a],edx
   140015421:	cmp    DWORD PTR [rsi-0x430633d4],edx
   140015427:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015428:	pop    rdx
   140015429:	mov    cl,ah
   14001542b:	stc    
   14001542c:	adc    eax,0x9a124deb
   140015431:	sbb    BYTE PTR [rbx],dl
   140015433:	add    al,0x67
   140015435:	test   al,0x61
   140015437:	sbb    ch,ah
   140015439:	sub    DWORD PTR [rdx+rdx*1+0x768f4c7],esp
   140015440:	rex.RB push r9
   140015442:	fdivr  DWORD PTR [rbx-0x164c0ef4]
   140015448:	rex.RX mov r12d,DWORD PTR [rax]
   14001544b:	xchg   edx,eax
   14001544c:	rex.W (bad) 
   14001544e:	xchg   ecx,eax
   14001544f:	add    esi,DWORD PTR [rcx]
   140015451:	test   al,0x20
   140015453:	add    eax,0x6d10e34
   140015458:	sub    BYTE PTR [rbx+0x7f8450ad],cl
   14001545e:	je     0x140015408
   140015460:	hlt    
   140015461:	push   rdi
   140015462:	push   rdx
   140015463:	fs (bad) 
   140015465:	(bad)  
   140015466:	hlt    
   140015467:	and    DWORD PTR [rbx+0x43682a0d],eax
   14001546d:	outs   dx,DWORD PTR ds:[rsi]
   14001546e:	stos   DWORD PTR es:[rdi],eax
   14001546f:	(bad)  
   140015470:	js     0x1400154c9
   140015472:	(bad)  
   140015473:	sti    
   140015474:	cmc    
   140015475:	pop    rdi
   140015476:	jl     0x140015461
   140015478:	cmp    ebx,DWORD PTR [rbx-0x21d84c87]
   14001547e:	add    DWORD PTR [rbx-0x28bb8a30],0xffffffd2
   140015485:	scas   eax,DWORD PTR es:[rdi]
   140015486:	xchg   esp,eax
   140015487:	cmc    
   140015488:	xor    bl,al
   14001548a:	add    ecx,DWORD PTR [rdx-0x2bfd1762]
   140015490:	or     bh,BYTE PTR [rbp-0x2328d6e0]
   140015496:	loope  0x140015424
   140015498:	in     eax,0x74
   14001549a:	(bad)  
   14001549b:	stos   BYTE PTR es:[rdi],al
   14001549c:	pop    rdx
   14001549d:	out    0x98,al
   14001549f:	movabs al,ds:0xe1c76d9646d7488b
   1400154a8:	jno    0x140015475
   1400154aa:	icebp  
   1400154ab:	movabs ds:0x156c401c8a485fa3,al
   1400154b4:	cmp    ch,BYTE PTR [rax+0x6aa4c55c]
   1400154ba:	cwde   
   1400154bb:	(bad)  
   1400154bc:	or     eax,0xb5e9e54d
   1400154c1:	(bad)  
   1400154c2:	test   BYTE PTR [rsi-0x67d16e60],cl
   1400154c8:	jb     0x140015533
   1400154ca:	shl    eax,cl
   1400154cc:	cmp    ch,BYTE PTR [rbp-0x333d9b57]
   1400154d2:	(bad)  
   1400154d3:	int3   
   1400154d4:	mov    esp,0x371d57d0
   1400154d9:	fstp   QWORD PTR [rdx+0x32f27bdf]
   1400154df:	(bad)  
   1400154e0:	fistp  WORD PTR [rdi]
   1400154e2:	movabs eax,ds:0xc76962de9746cf39
   1400154eb:	ret    0x83aa
   1400154ee:	adc    eax,0x38fdacce
   1400154f3:	jnp    0x1400154e4
   1400154f5:	(bad)  
   1400154f6:	repnz scas al,BYTE PTR es:[rdi]
   1400154f8:	addr32 xor cl,0x7d
   1400154fc:	rex.WX
   1400154fd:	lock sbb ebp,esp
   140015500:	repnz (bad) 
   140015502:	idiv   DWORD PTR [rcx]
   140015504:	xor    esi,DWORD PTR [rax+rdi*1]
   140015507:	cmp    bl,dh
   140015509:	imul   ebp,ebx,0xbebf9d9f
   14001550f:	(bad)  
   140015510:	stc    
   140015511:	sahf   
   140015512:	cmp    ch,BYTE PTR [rsi+0xe5a2189]
   140015518:	cmp    al,0xf6
   14001551a:	cmc    
   14001551b:	lods   al,BYTE PTR ds:[rsi]
   14001551c:	stos   BYTE PTR es:[rdi],al
   14001551d:	or     bh,BYTE PTR [rbx+0x79aed27c]
   140015523:	jmp    QWORD PTR [rbx+0xf]
   140015526:	icebp  
   140015527:	pop    rdi
   140015528:	(bad)  
   140015529:	(bad)  
   14001552a:	fild   WORD PTR [rbx]
   14001552c:	add    bl,BYTE PTR [rbp+0x8]
   14001552f:	js     0x1400154e2
   140015531:	jl     0x1400155ad
   140015533:	(bad)  
   140015534:	cs std 
   140015536:	xor    eax,0xf781fa9f
   14001553b:	jle    0x1400154bd
   14001553d:	(bad)  
   14001553e:	cld    
   14001553f:	mov    gs,edi
   140015541:	gs mul edx
   140015544:	popf   
   140015545:	sbb    al,0x9d
   140015547:	sbb    al,0x73
   140015549:	repz (bad) 
   14001554b:	or     eax,0xb915eb56
   140015550:	retf   
   140015551:	rcl    dh,1
   140015553:	jl     0x1400154e3
   140015555:	mov    al,dl
   140015557:	jbe    0x140015576
   140015559:	jge    0x14001553a
   14001555b:	shl    DWORD PTR [rbp+0x1d],cl
   14001555e:	pop    rbp
   14001555f:	fbld   TBYTE PTR [rdi]
   140015561:	rex.B
   140015562:	rex.WRB adc BYTE PTR [rip+0xffffffffaf95d0f9],r14b        # 0xef972662
   140015569:	cmp    eax,ebx
   14001556b:	fild   WORD PTR [rbx-0x80]
   14001556e:	(bad)
   140015571:	ins    DWORD PTR es:[rdi],dx
   140015572:	(bad)  [rcx+0x13cdbdb5]
   140015578:	out    dx,eax
   140015579:	jnp    0x1400155ba
   14001557b:	(bad)  
   14001557c:	cld    
   14001557d:	imul   BYTE PTR [rdi+0x67]
   140015580:	(bad)  
   140015581:	fdivr  QWORD PTR [rcx+0x23]
   140015584:	add    ebx,DWORD PTR [rbp-0x76]
   140015587:	retf   
   140015588:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015589:	lock pop rcx
   14001558b:	push   rbx
   14001558c:	push   rdi
   14001558d:	sub    al,0xda
   14001558f:	mov    es,WORD PTR [rbp-0x65]
   140015592:	push   rdi
   140015593:	cli    
   140015594:	xor    cl,BYTE PTR [rax+0x423baedf]
   14001559a:	mov    BYTE PTR [rbx-0x672ddcdc],ah
   1400155a0:	mov    eax,?
   1400155a2:	add    BYTE PTR [rdx],dl
   1400155a4:	add    al,0x4f
   1400155a6:	jmp    0x16a52967b
   1400155ab:	(bad)  
   1400155ac:	lods   eax,DWORD PTR ds:[rsi]
   1400155ad:	sub    al,0x20
   1400155af:	adc    cl,cl
   1400155b1:	jl     0x140015558
   1400155b3:	xchg   edx,eax
   1400155b4:	(bad)  
   1400155b5:	xchg   ebx,eax
   1400155b6:	(bad)  
   1400155b7:	rex.R xchg ebp,eax
   1400155b9:	xor    al,0x8e
   1400155bb:	leave  
   1400155bc:	(bad)  
   1400155bd:	shl    BYTE PTR [eax],cl
   1400155c0:	or     DWORD PTR [rax+0x5a927191],esp
   1400155c6:	scas   al,BYTE PTR es:[rdi]
   1400155c7:	or     eax,0xcc97a54b
   1400155cc:	leave  
   1400155cd:	adc    eax,ecx
   1400155cf:	mov    bh,0xab
   1400155d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400155d2:	sub    cl,dl
   1400155d4:	movabs ds:0x997cd77e99f5d21c,al
   1400155dd:	movabs ds:0x44753b2acff64b2e,eax
   1400155e6:	adc    al,0x26
   1400155e8:	mov    esi,0x404b9ca3
   1400155ed:	or     BYTE PTR [rax],ah
   1400155ef:	mov    esi,DWORD PTR [rdi+0x27]
   1400155f2:	(bad)  
   1400155f4:	outs   dx,BYTE PTR ds:[rsi]
   1400155f5:	sti    
   1400155f6:	mov    edx,0xfdcfe008
   1400155fb:	popf   
   1400155fc:	lahf   
   1400155fd:	jns    0x1400155e7
   1400155ff:	rex.RXB inc r15b
   140015602:	pop    rdi
   140015603:	clc    
   140015604:	psadbw mm5,mm7
   140015607:	fld    st(7)
   140015609:	push   rbp
   14001560a:	sahf   
   14001560b:	sbb    BYTE PTR [rbp-0x20970928],dl
   140015611:	shl    BYTE PTR [rdi*1+0x21a0dd4d],cl
   140015618:	mov    al,0xec
   14001561a:	(bad)  
   14001561b:	mov    eax,0x100d08ed
   140015620:	rol    DWORD PTR [rbx-0x983310d],cl
   140015626:	sub    BYTE PTR [rcx+rbp*8],al
   140015629:	int    0x9f
   14001562b:	mov    DWORD PTR [rdx-0x49],eax
   14001562e:	out    dx,al
   14001562f:	mov    DWORD PTR [rbp-0x7ca3bb73],ebx
   140015635:	rex.RX and DWORD PTR [rax+0x103ab726],r13d
   14001563c:	jnp    0x1400155cd
   14001563e:	jae    0x140015626
   140015640:	xlat   BYTE PTR ds:[rbx]
   140015641:	jp     0x140015674
   140015643:	(bad)  
   140015644:	mov    bh,0xed
   140015646:	xlat   BYTE PTR ds:[rbx]
   140015647:	jmp    0x16d7d8f6d
   14001564c:	push   rsp
   14001564d:	xchg   ebp,eax
   14001564e:	sbb    bh,BYTE PTR [rcx-0x18]
   140015651:	sub    eax,DWORD PTR [rbp+rbx*1-0x55]
   140015655:	(bad)  
   140015656:	movabs eax,ds:0xb62ac8bbc388985e
   14001565f:	sub    al,0x5a
   140015661:	in     eax,0x8f
   140015663:	mov    esp,0xdbef06f5
   140015668:	repz mov dh,0x62
   14001566b:	(bad)
   14001566f:	sbb    esi,eax
   140015671:	ds pop rcx
   140015673:	addr32 mov dl,0x55
   140015676:	(bad)  
   140015677:	in     eax,dx
   140015678:	jmp    0x140015609
   14001567a:	(bad)  
   14001567b:	ds pop rcx
   14001567d:	sub    BYTE PTR [r15-0x77a60908],sil
   140015684:	(bad)  
   140015685:	or     al,BYTE PTR [rdx+rsi*2+0x141d1f67]
   14001568c:	retf   0xa82d
   14001568f:	loopne 0x140015665
   140015691:	jne    0x1400156ff
   140015693:	and    BYTE PTR [rdx],al
   140015695:	and    BYTE PTR [rax+rdi*1-0x21],dh
   140015699:	push   rbx
   14001569a:	cmc    
   14001569b:	sub    edx,esi
   14001569d:	push   rcx
   14001569e:	mov    DWORD PTR [rcx],esp
   1400156a0:	adc    BYTE PTR [rbx+0x7b],dl
   1400156a3:	out    dx,al
   1400156a4:	int    0x42
   1400156a6:	(bad)  
   1400156a7:	pop    rax
   1400156a8:	hlt    
   1400156a9:	sbb    eax,0x3fdbf3bf
   1400156ae:	rex.W xlat BYTE PTR ds:[rbx]
   1400156b0:	(bad)  
   1400156b1:	(bad)  
   1400156b2:	dec    bh
   1400156b4:	cld    
   1400156b5:	cmp    al,0x8b
   1400156b7:	in     eax,0x8a
   1400156b9:	popf   
   1400156ba:	lods   eax,DWORD PTR ds:[rsi]
   1400156bb:	mov    ecx,0x63925555
   1400156c0:	fmul   QWORD PTR [rdx-0x1168e20a]
   1400156c6:	mov    ecx,0xdd774b9f
   1400156cb:	retf   
   1400156cc:	(bad)  
   1400156cd:	retf   
   1400156ce:	scas   eax,DWORD PTR es:[rdi]
   1400156cf:	jno    0x1400156ce
   1400156d1:	bnd jmp 0x140015670
   1400156d4:	fdivr  QWORD PTR [rcx+rcx*8-0x70ef071e]
   1400156db:	push   rax
   1400156dc:	push   rdi
   1400156dd:	adc    eax,0xafbc463e
   1400156e2:	mov    eax,cs
   1400156e4:	ret    
   1400156e5:	repnz add eax,0xb5d4f7bc
   1400156eb:	(bad)
   1400156ee:	stos   BYTE PTR es:[rdi],al
   1400156ef:	movabs ds:0xedeca74c9c0c8cae,al
   1400156f8:	out    dx,al
   1400156f9:	jb     0x1400156ec
   1400156fb:	rcr    BYTE PTR [rip+0x7def75dc],cl        # 0x1bdf0ccdd
   140015701:	fdivr  QWORD PTR [rbx-0x21]
   140015704:	std    
   140015705:	in     al,dx
   140015706:	sbb    eax,0x1804339c
   14001570b:	adc    DWORD PTR [rsp+r11*4+0x1554d44c],ebp
   140015713:	rex.RXB stos DWORD PTR es:[rdi],eax
   140015715:	xchg   esi,eax
   140015716:	movabs ds:0x1280f0252daedaf5,eax
   14001571f:	rex.X outs dx,DWORD PTR ds:[rsi]
   140015721:	outs   dx,BYTE PTR ds:[rsi]
   140015722:	xchg   DWORD PTR [rdi-0x7db6969e],edx
   140015728:	push   rax
   140015729:	sbb    al,0x95
   14001572b:	(bad)  
   14001572c:	(bad)  
   14001572d:	sub    eax,0x9088708b
   140015732:	retf   0x79e
   140015735:	jmp    0x140015751
   140015737:	rex.RXB mov BYTE PTR [r9+0x10],r12b
   14001573b:	pop    rax
   14001573c:	rex.XB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001573e:	xor    DWORD PTR [rsi+0xb],eax
   140015741:	ret    
   140015742:	xor    DWORD PTR [rax+0x3418997d],edx
   140015748:	sub    BYTE PTR [rdi],bl
   14001574a:	mov    ebx,edi
   14001574c:	scas   al,BYTE PTR es:[rdi]
   14001574d:	sub    r8,rbx
   140015750:	lahf   
   140015751:	xor    al,0x86
   140015753:	cdq    
   140015754:	(bad)  
   140015755:	(bad)  
   140015756:	add    ecx,DWORD PTR [rsp+rcx*4+0x8]
   14001575a:	rex.WR or r11b,spl
   14001575d:	mov    bh,0xb3
   14001575f:	ucomiss xmm1,DWORD PTR [rbx]
   140015762:	in     eax,0xb8
   140015764:	out    0xfb,al
   140015766:	stos   DWORD PTR es:[edi],eax
   140015768:	scas   eax,DWORD PTR es:[rdi]
   140015769:	test   DWORD PTR [rbx],eax
   14001576b:	sbb    BYTE PTR [rdx-0x57880cc9],ch
   140015771:	scas   al,BYTE PTR es:[rdi]
   140015772:	rex outs dx,BYTE PTR ds:[rsi]
   140015774:	jle    0x1400157b3
   140015776:	cdq    
   140015777:	std    
   140015778:	rex.RX mov sil,0xaf
   14001577b:	stos   DWORD PTR es:[rdi],eax
   14001577c:	add    dh,bh
   14001577e:	(bad)
   140015781:	cli    
   140015782:	(bad)  
   140015783:	jmp    0xfc834afe
   140015788:	(bad)  
   140015789:	pop    rbp
   14001578a:	mov    WORD PTR [rdx-0x18],cs
   14001578d:	add    dh,BYTE PTR [rcx-0x597b07f5]
   140015793:	push   rdi
   140015794:	(bad)  
   140015795:	(bad)  
   140015796:	int3   
   140015797:	out    0xc1,eax
   140015799:	mov    ah,0xed
   14001579b:	mov    edx,0x66da7246
   1400157a0:	add    BYTE PTR [rip+0xffffffffba1177d0],ah        # 0xfa12cf76
   1400157a6:	rex.W jo 0x1400157eb
   1400157a9:	sbb    DWORD PTR [rdi],ecx
   1400157ab:	(bad)  
   1400157ac:	pop    rbp
   1400157ad:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400157ae:	(bad)  
   1400157af:	cs (bad) 
   1400157b1:	ds adc ebp,edi
   1400157b4:	test   al,0x48
   1400157b6:	mov    ch,0xe2
   1400157b8:	sar    DWORD PTR [rsp+rbx*8+0x18],1
   1400157bc:	add    esp,DWORD PTR [rcx]
   1400157be:	sub    BYTE PTR [rbp+0x4c],bh
   1400157c1:	or     al,BYTE PTR [rbp+0x4]
   1400157c4:	jno    0x140015810
   1400157c6:	(bad)  
   1400157c7:	shl    BYTE PTR [rcx+rsi*4+0x507d24c6],0x7c
   1400157cf:	adc    eax,0xf69d2241
   1400157d4:	sbb    al,0x75
   1400157d6:	retf   0x1d6a
   1400157d9:	clc    
   1400157da:	push   rbx
   1400157db:	(bad)  
   1400157dc:	scas   al,BYTE PTR es:[rdi]
   1400157dd:	lock ds jg 0x140015777
   1400157e1:	lock addr32 add esi,ecx
   1400157e5:	mov    ah,BYTE PTR [rax]
   1400157e7:	pop    rcx
   1400157e8:	stc    
   1400157e9:	rex.WR clc 
   1400157eb:	popf   
   1400157ec:	(bad)  
   1400157ed:	ret    0x785b
   1400157f0:	xor    DWORD PTR [rbx],0xc8dbd88
   1400157f6:	mov    esi,0xd361c82c
   1400157fb:	stos   BYTE PTR es:[rdi],al
   1400157fc:	jmp    0x1400157a7
   1400157fe:	mov    al,al
   140015800:	xchg   BYTE PTR [rdx],dh
   140015802:	sbb    DWORD PTR [rbx],edx
   140015804:	mov    esp,DWORD PTR [rbx]
   140015806:	(bad)  
   140015807:	movabs eax,ds:0x27be84d71701dff8
   140015810:	xchg   BYTE PTR [rsi+0x12b24318],bl
   140015816:	fwait
   140015817:	iret   
   140015818:	rex.WXB movabs ds:0x728f8efbef9ed2b2,rax
   140015822:	out    dx,eax
   140015823:	popf   
   140015824:	xchg   edi,eax
   140015825:	clc    
   140015826:	mov    DWORD PTR [rdi+0x795e45fd],ebx
   14001582c:	in     eax,dx
   14001582d:	or     eax,0x132bfb63
   140015832:	fmul   st(4),st
   140015834:	xchg   edx,eax
   140015835:	imul   ebp
   140015837:	mov    ah,BYTE PTR [rsi+0x43df7299]
   14001583d:	(bad)  
   14001583e:	icebp  
   14001583f:	lock movsxd ebx,edi
   140015842:	rex.X mov dil,0x5e
   140015845:	shr    BYTE PTR [rsi],cl
   140015847:	mov    ds,WORD PTR [rcx-0x63]
   14001584a:	sbb    al,0x73
   14001584c:	repz cli 
   14001584e:	push   rbp
   14001584f:	cli    
   140015850:	cmc    
   140015851:	ficom  DWORD PTR [rdx-0x105f9d7d]
   140015857:	jp     0x14001589d
   140015859:	(bad)  
   14001585a:	fbld   TBYTE PTR ss:[rdx+0x3a]
   14001585e:	popf   
   14001585f:	loopne 0x1400157fe
   140015861:	addr32 ja 0x1400158db
   140015864:	xchg   ebp,ebx
   140015866:	mov    ebp,0xce0e0e3d
   14001586b:	mov    cl,0xbf
   14001586d:	mov    edi,0x2eeececf
   140015872:	mov    ebx,0x664cfbfb
   140015877:	jae    0x1400158cc
   140015879:	out    dx,al
   14001587a:	and    DWORD PTR [rbx+rbp*8],edx
   14001587d:	sbb    al,0x43
   14001587f:	add    BYTE PTR [rdx+0x371ce7fb],dl
   140015885:	xchg   esi,eax
   140015886:	sub    edx,DWORD PTR [rsi+0x5d]
   140015889:	sub    BYTE PTR [rbx],ch
   14001588b:	sbb    al,0x45
   14001588d:	int    0xca
   14001588f:	sub    al,0x1b
   140015891:	jnp    0x14001585e
   140015893:	ror    bl,1
   140015895:	nop
   140015896:	pop    rbp
   140015897:	mov    dl,0x90
   140015899:	rex.W
   14001589a:	rex.WRX
   14001589b:	sbb    al,BYTE PTR fs:[rsi-0x629b36f8]
   1400158a2:	mov    WORD PTR [rsi+0x43],ds
   1400158a5:	imul   edi,DWORD PTR [rdx-0x70],0x1246c6c7
   1400158ac:	rex.WRB
   1400158ad:	rex.WX sub BYTE PTR [rdi],spl
   1400158b0:	rex.RB
   1400158b1:	rex.WB adc dil,r14b
   1400158b4:	rcl    DWORD PTR [rdx-0x5cd3cc99],0xf1
   1400158bb:	(bad)  
   1400158bc:	test   BYTE PTR [rcx+0x10],bh
   1400158bf:	(bad)  
   1400158c0:	and    DWORD PTR [rdi],0x90da3988
   1400158c6:	test   DWORD PTR [rbp-0x2f3736df],edx
   1400158cc:	add    eax,DWORD PTR [rbx+0x1f564177]
   1400158d2:	push   rdx
   1400158d3:	rex.X jg 0x14001594c
   1400158d6:	mov    ss,WORD PTR [rcx-0x432b6c3e]
   1400158dc:	rex.RB xchg r11d,eax
   1400158de:	sti    
   1400158df:	(bad)  
   1400158e0:	fisttp WORD PTR [rbx-0x12bc4416]
   1400158e6:	out    dx,eax
   1400158e7:	jbe    0x1400158e4
   1400158e9:	(bad)  
   1400158ea:	or     ah,al
   1400158ec:	paddw  mm5,mm0
   1400158ef:	(bad)  
   1400158f0:	test   al,0x3f
   1400158f2:	stc    
   1400158f3:	xchg   edi,eax
   1400158f4:	call   FWORD PTR ds:[rip+0xfffffffffbc2acf5]        # 0x13bc405f0
   1400158fb:	mov    ah,0x1a
   1400158fd:	rex.WRXB or al,0x84
   140015900:	push   rsi
   140015901:	jno    0x140015978
   140015903:	(bad)  
   140015904:	jns    0x1400158b9
   140015906:	rex.R (bad) 
   140015908:	jbe    0x1400158ee
   14001590a:	rol    bh,cl
   14001590c:	outs   dx,DWORD PTR ds:[rsi]
   14001590d:	repnz fmul st(3),st
   140015910:	out    0x67,al
   140015912:	xchg   BYTE PTR [rdx],cl
   140015914:	adc    cl,BYTE PTR fs:[rcx]
   140015917:	movabs al,cs:0x535880595a2ed05e
   140015921:	or     DWORD PTR cs:[rdx-0x78],eax
   140015925:	cmp    DWORD PTR [rsi-0x1c2a89c9],0x5aa352f0
   14001592f:	jrcxz  0x140015985
   140015931:	call   0x10189a099
   140015936:	sbb    cl,BYTE PTR [rax-0x200f8506]
   14001593c:	movabs ds:0xa64c1c5f29d415a2,al
   140015945:	pushf  
   140015946:	jae    0x14001599c
   140015948:	rex.WRX call 0x1646e7982
   14001594e:	div    al
   140015950:	rex.WRX outs dx,BYTE PTR ds:[esi]
   140015953:	repnz ins DWORD PTR es:[rdi],dx
   140015955:	rex.WRB add rax,0xffffffff8ff0b1b3
   14001595b:	movabs r15,0x4e304465908bb304
   140015965:	fistp  DWORD PTR [rip+0xffffffffbf1c7c09]        # 0xff1dd574
   14001596b:	(bad)  
   14001596c:	sub    ebx,DWORD PTR [rdi+rsi*8-0x583ed4b]
   140015973:	int    0x63
   140015975:	(bad)  
   140015976:	cs (bad) 
   140015978:	mov    WORD PTR [rsi],?
   14001597a:	rex.WRX and QWORD PTR [rbx+0x48c01cac],r10
   140015981:	rex.XB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015983:	(bad)  
   140015984:	std    
   140015985:	mov    bl,BYTE PTR [rsi+rax*8]
   140015988:	int3   
   140015989:	repz cmp al,dh
   14001598c:	cwde   
   14001598d:	sbb    ah,ch
   14001598f:	and    DWORD PTR [rbx+rdx*2-0x1a5e69ab],0xcc3d8f03
   14001599a:	add    esi,DWORD PTR [rdi+0x5d]
   14001599d:	loop   0x140015932
   14001599f:	lahf   
   1400159a0:	std    
   1400159a1:	add    bh,BYTE PTR [rdi-0x46980602]
   1400159a7:	jb     0x1400159a6
   1400159a9:	cmp    cl,bl
   1400159ab:	mov    al,0x66
   1400159ad:	movabs ds:0x60471add0804fd84,eax
   1400159b7:	ds fwait
   1400159b9:	jno    0x1400159a9
   1400159bb:	loopne 0x1400159dd
   1400159bd:	test   eax,edi
   1400159bf:	sbb    bh,BYTE PTR [rbx+rax*1-0x71d8fef3]
   1400159c6:	mov    edx,0x52cef0ae
   1400159cb:	jne    0x140015968
   1400159cd:	mov    edx,0x556310b6
   1400159d2:	sbb    DWORD PTR [rcx-0x28],ebx
   1400159d5:	pop    rax
   1400159d6:	adc    DWORD PTR [rdx],0xffffff97
   1400159d9:	es jo  0x140015a44
   1400159dc:	pop    rbx
   1400159dd:	fwait
   1400159de:	sub    ch,BYTE PTR [rcx-0x3e]
   1400159e1:	mov    eax,DWORD PTR [rdx+0x55]
   1400159e4:	or     DWORD PTR [rax-0x74fdea9d],ecx
   1400159ea:	xchg   ebx,eax
   1400159eb:	adc    eax,0x3c1e2c5d
   1400159f0:	sbb    edx,edi
   1400159f2:	rex.WXB
   1400159f3:	data16 fsub DWORD PTR [rip+0x2c52cefb]        # 0x16c5428f5
   1400159fa:	stos   DWORD PTR es:[rdi],eax
   1400159fb:	rex.RX
   1400159fc:	fwait
   1400159fd:	stc    
   1400159fe:	and    edx,ebp
   140015a00:	sbb    QWORD PTR [rax-0xa],rax
   140015a04:	(bad)  
   140015a05:	(bad)
   140015a08:	mov    ecx,0x1918e900
   140015a0d:	imul   eax,DWORD PTR [rbx-0x17],0x62
   140015a11:	sub    al,0x9a
   140015a13:	ret    0x59a8
   140015a16:	and    dl,BYTE PTR [rip+0xffffffffa2eb8262]        # 0xe2ecdc7e
   140015a1c:	jno    0x1400159a1
   140015a1e:	ins    BYTE PTR es:[rdi],dx
   140015a1f:	rex.WR jmp 0x1400159ce
   140015a22:	(bad)  
   140015a23:	mov    esi,0x8a457278
   140015a28:	rex.WXB xor dil,BYTE PTR [r10-0x61]
   140015a2c:	scas   eax,DWORD PTR es:[rdi]
   140015a2d:	rex.WB rol BYTE PTR [rip+0x4060800f],cl        # 0x18061da43
   140015a34:	add    bh,BYTE PTR [rdx]
   140015a36:	mov    esp,0x38e1325
   140015a3b:	movabs ds:0x116aaa1546429418,al
   140015a44:	xchg   ebx,eax
   140015a45:	je     0x140015a34
   140015a47:	cmp    ch,ah
   140015a49:	jp     0x140015a26
   140015a4b:	mov    dh,0xaf
   140015a4d:	test   eax,0xbb9af600
   140015a52:	(bad)  
   140015a53:	test   eax,esi
   140015a55:	cdq    
   140015a56:	inc    esp
   140015a58:	sti    
   140015a59:	mov    ecx,0x48d15f75
   140015a5e:	in     al,dx
   140015a5f:	add    esp,DWORD PTR [rcx+0x3c0f4c0f]
   140015a65:	rex.WX
   140015a66:	rex.WRXB push 0x50113223
   140015a6c:	mov    cl,0x26
   140015a6e:	(bad)  
   140015a6f:	loop   0x140015ae1
   140015a71:	fild   DWORD PTR [rax-0x59f07da9]
   140015a77:	or     eax,0xbd0a9850
   140015a7c:	sub    dl,bl
   140015a7e:	stos   DWORD PTR es:[rdi],eax
   140015a7f:	rcl    edi,0x0
   140015a82:	cs jp  0x140015a41
   140015a85:	jp     0x140015a8b
   140015a87:	rex.RXB mov r15d,0x4f7d072
   140015a8d:	mov    cl,0xe4
   140015a8f:	xadd   esp,edi
   140015a92:	rex.RB add al,0x56
   140015a95:	ins    DWORD PTR es:[rdi],dx
   140015a96:	sub    BYTE PTR [rax],0xb8
   140015a99:	rex.RX jo 0x140015ac6
   140015a9c:	mov    eax,0x41232862
   140015aa1:	lods   eax,DWORD PTR ds:[rsi]
   140015aa2:	jo     0x140015ac8
   140015aa4:	cs or  eax,0xf22eba08
   140015aaa:	sbb    ebp,0xffffff92
   140015aad:	sysexit 
   140015aaf:	cmc    
   140015ab0:	sub    ecx,esp
   140015ab2:	iret   
   140015ab3:	jp     0x140015b2b
   140015ab5:	ins    BYTE PTR es:[rdi],dx
   140015ab6:	stc    
   140015ab7:	fxch   st(4)
   140015ab9:	or     DWORD PTR [rax],ebx
   140015abb:	movabs ds:0xf0b4ee7216effc82,eax
   140015ac4:	lahf   
   140015ac5:	in     eax,0xd7
   140015ac7:	lahf   
   140015ac8:	rex.WRX
   140015ac9:	lock cmp DWORD PTR [rbp+0xe],esi
   140015acd:	rex.WRX lahf 
   140015acf:	repz or al,0xe2
   140015ad2:	jno    0x140015ad4
   140015ad4:	mov    ebx,0x5c47d6f6
   140015ad9:	push   0x4422d6ad
   140015ade:	sub    dl,BYTE PTR [rbp-0x75]
   140015ae1:	scas   eax,DWORD PTR es:[rdi]
   140015ae2:	adc    al,0xf2
   140015ae4:	push   0xffffffffffffffb0
   140015ae6:	(bad)  
   140015ae7:	stc    
   140015ae8:	(bad)  
   140015ae9:	(bad)  
   140015aea:	in     eax,dx
   140015aeb:	xchg   edx,eax
   140015aec:	in     eax,dx
   140015aed:	in     eax,dx
   140015aee:	sub    edi,ebx
   140015af0:	sti    
   140015af1:	sbb    eax,0xefa3e61f
   140015af6:	jnp    0x140015a7a
   140015af8:	(bad)  
   140015af9:	mov    ebp,0x7e5f0af0
   140015afe:	stc    
   140015aff:	stos   DWORD PTR es:[rdi],eax
   140015b00:	mov    esp,0xcb1af57d
   140015b05:	(bad)  
   140015b06:	retf   0x8ad2
   140015b09:	movsxd esp,DWORD PTR [rsi+rsi*1+0x69]
   140015b0d:	lock rcl ecx,1
   140015b10:	jne    0x140015aaf
   140015b12:	rex.WRB shl BYTE PTR [r14-0x14772a4e],0x8a
   140015b1a:	mov    edx,0x508a2daa
   140015b1f:	cmp    DWORD PTR [rdx],ebp
   140015b21:	jno    0x140015b77
   140015b23:	fsubrp st(1),st
   140015b25:	pushf  
   140015b26:	(bad)  
   140015b27:	jns    0x140015aac
   140015b29:	in     al,dx
   140015b2a:	and    esp,esi
   140015b2c:	sub    al,0x17
   140015b2e:	cmp    eax,0xad532ce
   140015b33:	pushf  
   140015b34:	scas   eax,DWORD PTR es:[rdi]
   140015b35:	sub    dl,BYTE PTR [rbx-0x36]
   140015b38:	ds xor eax,0x3df758f5
   140015b3e:	retf   
   140015b3f:	mov    esi,0xd03beda5
   140015b44:	pop    r9
   140015b46:	in     al,0xdb
   140015b48:	retf   
   140015b49:	ret    0x9218
   140015b4c:	rex.WXB movsxd rax,r12d
   140015b4f:	and    eax,DWORD PTR [rbx-0x10b368ef]
   140015b55:	xor    DWORD PTR [rax-0x2c],ebx
   140015b58:	cwde   
   140015b59:	lods   al,BYTE PTR ds:[rsi]
   140015b5a:	outs   dx,DWORD PTR ds:[rsi]
   140015b5b:	loope  0x140015b65
   140015b5d:	rex.RX pop rbx
   140015b5f:	rcl    BYTE PTR [rbx+rsi*8-0x38f7cd61],1
   140015b66:	jne    0x140015b72
   140015b68:	leave  
   140015b69:	int    0x1f
   140015b6b:	cmp    ah,0xa6
   140015b6e:	stos   DWORD PTR es:[rdi],eax
   140015b6f:	xor    DWORD PTR [rdx+rdi*2],ecx
   140015b72:	sahf   
   140015b73:	es add ecx,ecx
   140015b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   140015b78:	retf   0x49df
   140015b7b:	and    esp,esi
   140015b7d:	xchg   esp,eax
   140015b7e:	cwde   
   140015b7f:	rcl    BYTE PTR [rdx+0x10c9550b],cl
   140015b85:	sbb    bl,BYTE PTR [rax+rdi*8]
   140015b88:	or     cl,BYTE PTR [rdx+0x42e290f2]
   140015b8e:	sub    al,0xf7
   140015b91:	push   rdi
   140015b92:	xchg   edx,eax
   140015b93:	xchg   DWORD PTR [rdx+0x465c2b22],esi
   140015b99:	scas   al,BYTE PTR es:[rdi]
   140015b9a:	popf   
   140015b9b:	mov    eax,0x54d7dbbd
   140015ba0:	add    BYTE PTR [rdi+0x3dcf47fc],bl
   140015ba6:	(bad)  
   140015ba7:	push   0xffffffffffffffff
   140015ba9:	nop
   140015baa:	scas   eax,DWORD PTR es:[rdi]
   140015bab:	popf   
   140015bac:	gs cmc 
   140015bae:	mov    BYTE PTR [r13+0x4f],r11b
   140015bb2:	in     al,dx
   140015bb3:	add    edx,ecx
   140015bb5:	cmc    
   140015bb6:	mov    al,0x8a
   140015bb8:	data16 int 0xe9
   140015bbb:	mov    eax,0x3a0d7c7a
   140015bc0:	or     DWORD PTR [rcx],0x53715cc8
   140015bc6:	or     edi,DWORD PTR [rbx]
   140015bc8:	(bad)
   140015bcb:	rex.WRX cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140015bcd:	rex.WX in al,dx
   140015bcf:	adc    edx,DWORD PTR [rdi+rbp*8+0x443bd885]
   140015bd6:	cmp    eax,0x5afd2341
   140015bdb:	or     BYTE PTR [rbp+0x67],ch
   140015bde:	(bad)  
   140015bdf:	mov    edi,0xc6854076
   140015be4:	(bad)  
   140015be5:	and    eax,0x28952ed2
   140015bea:	(bad)  
   140015beb:	repz sbb BYTE PTR [rdx+0x1293ec36],0x89
   140015bf3:	(bad)  
   140015bf4:	fidivr DWORD PTR [rbp+rdx*8+0x45]
   140015bf8:	(bad)  
   140015bf9:	ds loopne 0x140015bfe
   140015bfc:	cld    
   140015bfd:	jns    0x140015bd5
   140015bff:	jl     0x140015c6d
   140015c01:	cmp    dh,BYTE PTR [rbp-0x4f9ec014]
   140015c07:	mov    esi,0xca77021b
   140015c0c:	fistp  WORD PTR [rdi]
   140015c0e:	sti    
   140015c0f:	ficomp WORD PTR [rbx]
   140015c11:	or     DWORD PTR [rsi],edi
   140015c13:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015c14:	push   rdx
   140015c15:	jnp    0x140015bde
   140015c17:	loope  0x140015bd5
   140015c19:	ja     0x140015c67
   140015c1b:	lock leave 
   140015c1d:	icebp  
   140015c1e:	jg     0x140015c5d
   140015c20:	cmc    
   140015c21:	fstp   QWORD PTR [rcx]
   140015c23:	(bad)  
   140015c24:	cmp    BYTE PTR [rip+0xfffffffffec14ffd],cl        # 0x13ec2ac27
   140015c2a:	lea    ebp,[rbp-0x23]
   140015c2d:	jb     0x140015c16
   140015c2f:	rex.WRX loopne 0x140015c27
   140015c32:	mov    esi,0x553b7635
   140015c37:	mov    edi,0x3d8a6e9
   140015c3c:	or     al,0xf1
   140015c3e:	push   0xffffffffdd04da15
   140015c43:	ja     0x140015bfb
   140015c45:	out    0x7c,eax
   140015c47:	in     al,dx
   140015c48:	test   eax,0xb7d0f827
   140015c4d:	ds (bad) 
   140015c4f:	lea    esp,[rbx-0x347219d]
   140015c55:	outs   dx,DWORD PTR ss:[rsi]
   140015c57:	pop    rdi
   140015c58:	(bad)  
   140015c59:	in     al,0xda
   140015c5b:	lea    ebx,[rbx-0x25942954]
   140015c61:	mov    dh,0x23
   140015c63:	and    dh,BYTE PTR [rbp+rdi*4+0x35]
   140015c67:	fsub   st(4),st
   140015c69:	stos   DWORD PTR es:[rdi],eax
   140015c6a:	(bad)  
   140015c6b:	rex.WB push 0xffffffffffffffb5
   140015c6e:	gs sbb eax,0x76796d9b
   140015c74:	push   rbp
   140015c75:	jmp    0x140015c52
   140015c77:	xchg   DWORD PTR [rdx],ecx
   140015c79:	clc    
   140015c7a:	retf   0x6c8a
   140015c7d:	adc    bh,BYTE PTR [rcx-0x64ff0668]
   140015c83:	out    0x8e,eax
   140015c85:	ds rex.RX
   140015c87:	rex.WRX cli 
   140015c89:	sahf   
   140015c8a:	mov    dh,0xeb
   140015c8c:	jmp    0xc81238f3
   140015c91:	ins    BYTE PTR es:[rdi],dx
   140015c92:	or     eax,0x9c5c0615
   140015c97:	jl     0x140015c88
   140015c99:	mov    esi,0x53c71737
   140015c9e:	or     eax,0x91049902
   140015ca3:	movs   DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
   140015ca5:	jne    0x140015cfb
   140015ca7:	lahf   
   140015ca8:	nop
   140015ca9:	xchg   ebx,eax
   140015caa:	jae    0x140015cbe
   140015cac:	or     BYTE PTR [rdi-0x52f37a26],dh
   140015cb2:	xor    eax,0x86926a11
   140015cb7:	pop    rcx
   140015cb8:	xor    dl,BYTE PTR [rcx-0x55647168]
   140015cbe:	sbb    BYTE PTR [rcx],bh
   140015cc0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015cc1:	rex.R ins BYTE PTR es:[rdi],dx
   140015cc3:	(bad)  
   140015cc4:	adc    edx,esp
   140015cc6:	loop   0x140015ca7
   140015cc8:	fiadd  WORD PTR [ecx]
   140015ccb:	imul   ebp,DWORD PTR [rsi+0x13],0xffffffe3
   140015ccf:	adc    BYTE PTR [rsp+rbx*8],ch
   140015cd2:	push   rax
   140015cd3:	or     al,0x22
   140015cd5:	test   DWORD PTR [rdi-0x38],ebx
   140015cd8:	rex.X sub al,0xc9
   140015cdb:	xchg   edx,eax
   140015cdc:	pop    QWORD PTR [rip+0x13426358]        # 0x15343c03a
   140015ce2:	or     bl,ah
   140015ce4:	(bad)  
   140015ce5:	cmp    dl,dh
   140015ce7:	xor    BYTE PTR [rsi],al
   140015ce9:	and    eax,0xdd459f69
   140015cee:	mov    al,0xc
   140015cf0:	(bad)  
   140015cf2:	test   BYTE PTR [rsi-0x4781ff6],0x13
   140015cf9:	stc    
   140015cfa:	mov    ebx,0x7f57f1df
   140015cff:	xchg   edi,eax
   140015d00:	stos   DWORD PTR es:[rdi],eax
   140015d01:	sbb    al,0xae
   140015d03:	rex.WX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015d05:	rex.WB mov BYTE PTR [r12+riz*2-0x229f0443],al
   140015d0d:	push   0xffffffffffffffbc
   140015d0f:	cmp    ch,BYTE PTR [rax-0x5a14e9c6]
   140015d15:	rex.WRB xchg BYTE PTR [r14],r8b
   140015d18:	test   al,0x62
   140015d1a:	adc    dl,BYTE PTR [rsi-0x45]
   140015d1d:	(bad)  
   140015d1e:	fsubr  DWORD PTR [rbx]
   140015d20:	outs   dx,BYTE PTR ds:[rsi]
   140015d21:	imul   edx,DWORD PTR [rbx+0x57a139c6],0x12827e13
   140015d2b:	cli    
   140015d2c:	rex pop rax
   140015d2e:	rex.XB and eax,0x2342e595
   140015d34:	rex.R in eax,dx
   140015d36:	in     eax,dx
   140015d37:	test   r14b,0x16
   140015d3b:	stos   DWORD PTR es:[rdi],eax
   140015d3c:	je     0x140015d34
   140015d3e:	push   0xffffffffe6de0a89
   140015d43:	(bad)  
   140015d44:	and    al,dl
   140015d46:	(bad)  
   140015d47:	(bad)  
   140015d48:	mov    edx,0xe374b57
   140015d4d:	cmp    edi,0xb7dbe049
   140015d53:	out    0x96,al
   140015d55:	cmc    
   140015d56:	xchg   DWORD PTR [rdi],edi
   140015d58:	rex.XB clc 
   140015d5a:	xor    ecx,DWORD PTR [rdi+rbx*1+0xc1bfbf9]
   140015d61:	call   FWORD PTR [rax+0x1]
   140015d64:	mov    WORD PTR [rbx],ss
   140015d66:	jb     0x140015d26
   140015d68:	rex.RX mov WORD PTR [rdi+0x2b5f0cb8],?
   140015d6f:	shl    DWORD PTR [rdi-0x3c],0x21
   140015d73:	xchg   esp,eax
   140015d74:	jae    0x140015d12
   140015d76:	(bad)  
   140015d77:	cmp    al,0x4c
   140015d79:	iret   
   140015d7a:	cmc    
   140015d7b:	popf   
   140015d7c:	push   rdx
   140015d7d:	mov    ebp,0xde1e6bd7
   140015d82:	out    dx,eax
   140015d83:	stc    
   140015d84:	je     0x140015d5d
   140015d86:	movabs ds:0xa8e01a5c89649131,eax
   140015d8f:	in     eax,dx
   140015d90:	cmp    cl,BYTE PTR [rsp+rax*8-0x1f]
   140015d94:	(bad)  
   140015d95:	sti    
   140015d96:	push   rcx
   140015d97:	pop    rsp
   140015d98:	std    
   140015d99:	(bad)  
   140015d9a:	outs   dx,DWORD PTR ds:[rsi]
   140015d9b:	mov    esi,ebx
   140015d9d:	sti    
   140015d9e:	fstp   TBYTE PTR [rax]
   140015da0:	out    0x58,eax
   140015da2:	lods   al,BYTE PTR ds:[rsi]
   140015da3:	pop    rdx
   140015da4:	xchg   esi,eax
   140015da5:	retf   
   140015da6:	xor    eax,0xab15cb27
   140015dab:	mov    dh,0xa7
   140015dad:	out    dx,eax
   140015dae:	(bad)  
   140015daf:	lods   al,BYTE PTR ds:[rsi]
   140015db0:	(bad)  
   140015db1:	sub    eax,0xe0270551
   140015db6:	mov    ebp,0xad795a27
   140015dbb:	gs adc al,0x56
   140015dbe:	adc    eax,0xb2c4c9d3
   140015dc3:	std    
   140015dc4:	mov    esp,0x59c41645
   140015dc9:	(bad)
   140015dcc:	rex.WX (bad) 
   140015dce:	and    bh,BYTE PTR [rbp+0xc]
   140015dd1:	mov    ah,0x5d
   140015dd3:	outs   dx,DWORD PTR ds:[rsi]
   140015dd4:	(bad)  
   140015dd5:	scas   al,BYTE PTR es:[rdi]
   140015dd6:	xchg   edx,eax
   140015dd7:	loop   0x140015dbc
   140015dd9:	leave  
   140015dda:	fsubp  st(2),st
   140015ddc:	sub    BYTE PTR [rdi+rdx*4+0x9527631],dl
   140015de3:	push   0xffffffffffffffeb
   140015de5:	ror    DWORD PTR [rax+rsi*2],1
   140015de8:	sbb    esi,eax
   140015dea:	rex sbb ebx,esi
   140015ded:	(bad)  
   140015dee:	sbb    eax,0xb4082939
   140015df3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015df4:	add    dl,BYTE PTR [rsi+rbx*2-0x6aa8e77a]
   140015dfb:	and    edx,DWORD PTR [rcx+rdi*1]
   140015dfe:	mov    ecx,0xe06c6007
   140015e03:	rex.WXB cli 
   140015e05:	cs jrcxz 0x140015d90
   140015e08:	rcl    eax,0xe5
   140015e0b:	js     0x140015e35
   140015e0d:	pop    rcx
   140015e0e:	(bad)  
   140015e0f:	movabs eax,ds:0x59471ff4d2b9439d
   140015e18:	mov    WORD PTR [rip+0xffffffff841635d5],fs        # 0xc41793f3
   140015e1e:	xor    cl,BYTE PTR [rsi-0x18]
   140015e21:	add    esp,0x9895905b
   140015e27:	mov    WORD PTR [rsi-0x73203cdc],cs
   140015e2d:	rex.WR adc r15b,BYTE PTR [rdx-0x79d01a4d]
   140015e34:	mov    edx,DWORD PTR [rsi]
   140015e36:	cmp    BYTE PTR [rsp+riz*8-0x36],al
   140015e3a:	fst    DWORD PTR [rbx]
   140015e3c:	in     al,0x37
   140015e3e:	mov    bh,0xbd
   140015e40:	movabs ds:0xd75dd72fd3fcf802,eax
   140015e49:	jle    0x140015e0a
   140015e4b:	stos   DWORD PTR es:[rdi],eax
   140015e4c:	(bad)  
   140015e4d:	ror    BYTE PTR [rax+0x43],cl
   140015e50:	and    al,0x86
   140015e52:	or     BYTE PTR [rcx+0x32a4904f],dh
   140015e58:	sub    cl,BYTE PTR [r11-0xb]
   140015e5c:	and    eax,0xbb4c10cb
   140015e61:	imul   edx,DWORD PTR [rax+rcx*1+0x46],0x842d74e4
   140015e69:	adc    ebp,DWORD PTR [rbx+0x20a9d015]
   140015e6f:	and    DWORD PTR [rdx-0x79],edx
   140015e72:	sbb    ch,BYTE PTR [rdi-0x7d4482cb]
   140015e78:	rex.WX or BYTE PTR [rsi],dil
   140015e7b:	es cmp al,0x27
   140015e7e:	(bad)  
   140015e7f:	sub    DWORD PTR [rbx],ebp
   140015e81:	idiv   BYTE PTR [rax-0x56a1aad6]
   140015e87:	(bad)  
   140015e88:	push   rdx
   140015e89:	(bad)  
   140015e8a:	(bad)  
   140015e8b:	add    eax,0x12d0821
   140015e90:	in     eax,dx
   140015e91:	cmp    eax,0xbf8ac6f1
   140015e96:	mov    ecx,0xf9a1f357
   140015e9b:	(bad)  
   140015e9c:	rex.WR
   140015e9d:	rex.WRXB pop r9
   140015e9f:	dec    BYTE PTR [rip+0xfffffffff2263e08]        # 0x132279cad
   140015ea5:	(bad)  
   140015ea6:	(bad)  
   140015ea7:	div    DWORD PTR [rsp+rdx*2]
   140015eaa:	(bad)  
   140015eab:	sub    eax,DWORD PTR [rdi-0x1]
   140015eae:	or     al,0xe1
   140015eb0:	iret   
   140015eb1:	scas   eax,DWORD PTR es:[rdi]
   140015eb2:	mov    bl,0x40
   140015eb4:	mov    edi,0x38cf8263
   140015eb9:	pop    rbx
   140015eba:	push   rax
   140015ebb:	cmp    DWORD PTR [rbx+0x11],esi
   140015ebe:	xchg   ecx,eax
   140015ebf:	lods   al,BYTE PTR ds:[rsi]
   140015ec0:	xchg   esp,eax
   140015ec1:	fisubr WORD PTR [rcx-0x15]
   140015ec4:	cmp    cl,BYTE PTR [rsi]
   140015ec6:	es sbb eax,0x3ed01571
   140015ecc:	movabs eax,ds:0xf1b4136b1a053117
   140015ed5:	add    al,0x2f
   140015ed7:	ins    BYTE PTR es:[rdi],dx
   140015ed8:	(bad)  
   140015ed9:	stc    
   140015eda:	std    
   140015edb:	lock pop rbp
   140015edd:	or     BYTE PTR [rcx],dl
   140015edf:	or     edi,DWORD PTR [rbp+rsi*8-0x1313d088]
   140015ee6:	int3   
   140015ee7:	fcomp  st(1)
   140015ee9:	cdq    
   140015eea:	movabs ds:0xb7beeb18d1a63c29,eax
   140015ef3:	sbb    BYTE PTR [rdi+0x404a68c6],bh
   140015ef9:	xchg   DWORD PTR [rdx-0x62],esp
   140015efc:	adc    BYTE PTR [rax],0x43
   140015eff:	rex.WRXB sbb r9,r13
   140015f02:	sub    eax,0x71f5a3ec
   140015f07:	enter  0xca26,0xa
   140015f0b:	mov    es,WORD PTR [rsi-0x5c]
   140015f0e:	pop    rsp
   140015f0f:	sbb    al,0xe7
   140015f11:	mov    esp,0x86034231
   140015f16:	in     eax,0x7
   140015f18:	cvttps2pi mm6,QWORD PTR [rcx-0x21]
   140015f1c:	leave  
   140015f1d:	jp     0x140015f05
   140015f1f:	and    DWORD PTR [rcx],ebp
   140015f21:	and    eax,0x9684c9c5
   140015f26:	xor    al,0xde
   140015f28:	fadd   QWORD PTR [rsp+riz*4-0x59edce14]
   140015f2f:	and    bh,BYTE PTR [rax]
   140015f31:	cmp    DWORD PTR [rip+0xffffffffb4c48848],ebx        # 0xf4c5e77f
   140015f37:	(bad)  
   140015f38:	ret    0xfcc0
   140015f3b:	(bad)  
   140015f3c:	jg     0x140015fba
   140015f3e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015f3f:	or     dl,dl
   140015f41:	rex.X mov ecx,ebp
   140015f44:	test   DWORD PTR [rax],0x526b01a9
   140015f4a:	sbb    al,BYTE PTR [rbx]
   140015f4c:	sbb    DWORD PTR [rax+0xea6c810],ebx
   140015f52:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015f53:	movabs al,ds:0x5cf2583242054d1b
   140015f5c:	mov    ds,WORD PTR [rbx+rsi*4+0x1042b328]
   140015f63:	repnz add DWORD PTR [rsi+0x772a242],eax
   140015f6a:	add    cl,BYTE PTR [rax-0x48a365c]
   140015f70:	mov    dh,0x77
   140015f72:	push   rsp
   140015f73:	add    BYTE PTR [rdi-0x22502501],dl
   140015f79:	shr    DWORD PTR [rsi-0x262cdc3d],cl
   140015f7f:	(bad)  
   140015f80:	pop    rax
   140015f81:	std    
   140015f82:	movabs al,ds:0xea6691288fa7e1d6
   140015f8b:	mov    DWORD PTR [rbp+0x65],edi
   140015f8e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015f8f:	rex.WR sbb rax,0x102d5a39
   140015f95:	icebp  
   140015f96:	in     al,0x55
   140015f98:	(bad)  
   140015f99:	imul   edx,DWORD PTR [rbx-0x6d],0x5be84a88
   140015fa0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015fa1:	mov    ebp,0xb513d111
   140015fa6:	rex.RX (bad) 
   140015fa8:	xchg   ebx,eax
   140015fa9:	xchg   esi,eax
   140015faa:	in     eax,dx
   140015fab:	leave  
   140015fac:	(bad)  
   140015fad:	(bad)  
   140015fae:	pop    rsp
   140015faf:	mov    edx,0x9764f99b
   140015fb4:	push   rdi
   140015fb5:	scas   eax,DWORD PTR es:[rdi]
   140015fb6:	mov    esp,0x2f37ebc9
   140015fbb:	push   rbx
   140015fbc:	stc    
   140015fbd:	sbb    bl,BYTE PTR [rdi+0x55]
   140015fc0:	push   0xffffffffed81fcb0
   140015fc5:	data16 (bad) 
   140015fc7:	jno    0x140016001
   140015fc9:	and    esp,esi
   140015fcb:	mov    dl,BYTE PTR [rdi]
   140015fcd:	(bad)
   140015fd0:	xchg   ebx,eax
   140015fd1:	xchg   ebp,eax
   140015fd2:	or     dl,ch
   140015fd4:	add    al,BYTE PTR [rcx]
   140015fd6:	rex.RXB jg 0x14001603c
   140015fd9:	leave  
   140015fda:	(bad)  
   140015fdb:	out    dx,al
   140015fdc:	(bad)  
   140015fdd:	cmp    al,0xb5
   140015fdf:	mov    ch,0x3
   140015fe1:	xchg   ebx,eax
   140015fe2:	mov    ah,0x64
   140015fe4:	jl     0x140016032
   140015fe6:	adc    BYTE PTR [rdi],bh
   140015fe8:	pop    rbx
   140015fe9:	(bad)  
   140015fea:	xor    ah,BYTE PTR [rsi-0x59]
   140015fed:	rol    al,1
   140015fef:	jmp    0xdd6e5fb0
   140015ff4:	outs   dx,DWORD PTR ds:[rsi]
   140015ff5:	imul   edx,edi,0x47f7f63d
   140015ffb:	(bad)  
   140015ffc:	sahf   
   140015ffd:	xchg   ecx,eax
   140015ffe:	lock xchg edi,eax
   140016000:	add    al,0x9f
   140016002:	sahf   
   140016003:	add    bl,ch
   140016005:	or     ch,ah
   140016007:	xlat   BYTE PTR ds:[rbx]
   140016008:	loope  0x140015fe6
   14001600a:	movsxd edx,DWORD PTR [rdi-0x5c]
   14001600d:	pop    rax
   14001600e:	or     BYTE PTR [rsi+0x5bebb03e],bh
   140016014:	cs (bad) 
   140016016:	add    bl,BYTE PTR [rsi*2-0x77b7f7b8]
   14001601d:	(bad)  
   14001601e:	stos   BYTE PTR es:[rdi],al
   14001601f:	and    al,BYTE PTR [rsp+rdi*2+0x66c62fc]
   140016026:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016027:	pop    rcx
   140016028:	xchg   DWORD PTR [rdi+0x13329f67],ebx
   14001602e:	rex.WR movabs rcx,0x5b10c0340dc8587d
   140016038:	int3   
   140016039:	ret    0xa65
   14001603c:	cmp    al,0x24
   14001603e:	idiv   BYTE PTR [rsi]
   140016040:	(bad)  
   140016041:	imul   edi,DWORD PTR [rbx-0x7a0d9acf],0x8f5fc5a8
   14001604b:	(bad)  
   14001604c:	cdq    
   14001604d:	cmc    
   14001604e:	in     al,0xa7
   140016050:	stos   DWORD PTR es:[rdi],eax
   140016051:	sub    BYTE PTR [r10+0x72],r12b
   140016055:	mov    bl,0xc6
   140016057:	(bad)  
   140016058:	xor    DWORD PTR [rsi+0x628dc9b1],esp
   14001605e:	xor    eax,ecx
   140016060:	rex.WXB or QWORD PTR [r11+0x42],rdx
   140016064:	out    dx,al
   140016065:	push   rdi
   140016066:	cwde   
   140016067:	adc    esp,DWORD PTR [rbx-0xe]
   14001606a:	rex.WRB pop r9
   14001606c:	lods   al,BYTE PTR ds:[rsi]
   14001606d:	cmp    al,0x26
   14001606f:	and    DWORD PTR [rdi+riz*8+0x5a739969],esi
   140016076:	loop   0x140016074
   140016078:	and    eax,0xfd205e9e
   14001607d:	nop
   14001607e:	mov    ecx,DWORD PTR [rdi]
   140016080:	cdq    
   140016081:	fs xor al,0xa5
   140016084:	xchg   ebx,eax
   140016085:	pop    rbp
   140016086:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016087:	mov    dl,0x42
   140016089:	jb     0x1400160fd
   14001608b:	sete   BYTE PTR [rax-0x717466b2]
   140016092:	push   rdx
   140016093:	jae    0x14001606f
   140016095:	in     al,0x2a
   140016097:	adc    al,0xe0
   140016099:	(bad)  
   14001609a:	rex.X add eax,0x1ab35c79
   1400160a0:	sub    BYTE PTR [rdx],cl
   1400160a2:	xlat   BYTE PTR ds:[rbx]
   1400160a3:	movabs r10,0xe3fc73f2669df4a6
   1400160ad:	cwde   
   1400160ae:	adc    al,0xa
   1400160b0:	movabs ds:0x546939590d750fe3,eax
   1400160b9:	xchg   ecx,eax
   1400160ba:	push   rdx
   1400160bb:	call   0x1b7b7dc30
   1400160c0:	push   rsp
   1400160c1:	add    BYTE PTR [rbx-0x24034351],cl
   1400160c7:	popf   
   1400160c8:	xchg   edi,eax
   1400160c9:	rex.RX rol BYTE PTR [rdx],cl
   1400160cc:	mov    cl,0xb3
   1400160cf:	neg    ch
   1400160d1:	xor    DWORD PTR [rdx],ebp
   1400160d3:	xchg   ecx,eax
   1400160d4:	rex.W nop
   1400160d6:	xchg   esi,eax
   1400160d7:	movabs al,ds:0x84de8620cfed8b33
   1400160e0:	xor    ebp,DWORD PTR [rcx-0x2ddcef52]
   1400160e6:	sbb    bl,al
   1400160e8:	mov    edx,0x13c4765e
   1400160ed:	xchg   ebx,eax
   1400160ee:	xchg   ebx,eax
   1400160ef:	cmp    ecx,0x2e
   1400160f2:	rex.WRXB fdivrp st(3),st
   1400160f5:	xor    BYTE PTR [rbx-0x25],bh
   1400160f8:	jae    0x140016158
   1400160fa:	jge    0x1400160ed
   1400160fc:	or     ch,BYTE PTR [rdi-0x70ed0d42]
   140016102:	jg     0x1400160ec
   140016104:	add    esi,ebp
   140016106:	fdivr  QWORD PTR [rcx+0x4ded9b93]
   14001610c:	ficomp WORD PTR [rax+0x5c]
   14001610f:	(bad)  
   140016110:	loope  0x14001618b
   140016112:	in     al,0xdc
   140016114:	sub    DWORD PTR [rbp+rcx*8+0x2b],0x44
   140016119:	cmp    eax,0x8d7d5c2f
   14001611e:	movabs ds:0x40d752d89c698370,eax
   140016127:	and    eax,0xf3dc7742
   14001612c:	mov    bh,0x77
   14001612e:	imul   ebx,DWORD PTR [rsi-0x36782526],0xffffffc5
   140016135:	xor    al,0xa0
   140016137:	pop    rcx
   140016138:	clc    
   140016139:	cmc    
   14001613a:	(bad)  
   14001613b:	pop    rdi
   14001613c:	rex.XB outs dx,BYTE PTR ss:[rsi]
   14001613f:	mov    bh,0xd4
   140016141:	repnz lahf 
   140016143:	(bad)  
   140016144:	add    ebx,DWORD PTR [rax]
   140016146:	ret    
   140016147:	sti    
   140016148:	xor    ebx,DWORD PTR [rdx+0x512dc78]
   14001614e:	mov    BYTE PTR [rbx+0x37ef47fd],ah
   140016154:	movabs ds:0x5377b6be33ec3a07,al
   14001615d:	loope  0x140016138
   14001615f:	imul   DWORD PTR [rbx+rdi*4+0xe]
   140016163:	rex.X pop QWORD PTR [rsi]
   140016166:	jmp    0x140016174
   140016168:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016169:	jmp    0x1a2de5508
   14001616e:	je     0x14001611b
   140016170:	sbb    edx,DWORD PTR [rbx-0x25820390]
   140016176:	(bad)  
   140016177:	sub    ecx,DWORD PTR [rcx+rsi*4+0x66]
   14001617b:	jns    0x14001619f
   14001617d:	add    ebx,DWORD PTR [eax]
   140016180:	adc    ebx,DWORD PTR [rdi+rbp*1+0x45]
   140016184:	(bad)  
   140016185:	sbb    dl,BYTE PTR [rcx+0x71]
   140016188:	jbe    0x1400161f8
   14001618a:	xor    dl,BYTE PTR [rbx+0x429c283e]
   140016190:	gs (bad) 
   140016192:	lock fwait
   140016194:	or     DWORD PTR [rdi-0x53a18dd8],0xb170eb7
   14001619e:	push   0x4749fc4a
   1400161a3:	retf   
   1400161a4:	rex.X pop rcx
   1400161a6:	pop    rsi
   1400161a7:	stos   DWORD PTR es:[rdi],eax
   1400161a8:	cmc    
   1400161a9:	jge    0x140016200
   1400161ab:	rex.RXB (bad) 
   1400161ad:	mov    cl,0x93
   1400161af:	add    ah,BYTE PTR [rdi+0x53108407]
   1400161b5:	add    ecx,DWORD PTR [rdi-0x7cea3cf4]
   1400161bb:	and    al,0x59
   1400161bd:	(bad)  
   1400161be:	(bad)  
   1400161bf:	push   0x9
   1400161c1:	push   rsp
   1400161c2:	push   rbx
   1400161c3:	push   0xffffffffffffffaf
   1400161c5:	(bad)  
   1400161c6:	mov    BYTE PTR [rdi+riz*4+0x4c],ah
   1400161ca:	or     eax,0xeb7bd34b
   1400161cf:	rcr    BYTE PTR [rbp+riz*4-0x78462cad],0x94
   1400161d7:	out    0x41,al
   1400161d9:	test   eax,0x67864fe4
   1400161de:	mov    cl,0x31
   1400161e0:	call   0xe4637100
   1400161e5:	push   rax
   1400161e6:	rex.WX (bad) 
   1400161e8:	in     al,0x11
   1400161ea:	(bad)  
   1400161eb:	sbb    edi,ebp
   1400161ed:	sub    al,0xe
   1400161ef:	(bad)  
   1400161f0:	xchg   ebp,eax
   1400161f1:	(bad)  
   1400161f2:	sub    BYTE PTR [rsi-0x31],0xf6
   1400161f6:	mov    cs,WORD PTR [rdx]
   1400161f8:	loopne 0x14001625e
   1400161fa:	xor    bh,cl
   1400161fc:	pop    rbp
   1400161fd:	sub    dl,cl
   1400161ff:	rex.WXB sub bl,r12b
   140016202:	mov    BYTE PTR [rcx+0x63404347],ah
   140016208:	rex.R movabs ds:0xa1ac68174821bab0,al
   140016212:	cmp    al,0x52
   140016214:	xchg   ecx,eax
   140016215:	jl     0x14001628f
   140016217:	or     DWORD PTR [rbp-0x13525632],0xffffffb3
   14001621e:	push   rdx
   14001621f:	je     0x14001628e
   140016221:	punpckhdq mm5,QWORD PTR [rdi-0x42]
   140016225:	int    0x53
   140016227:	ja     0x140016266
   140016229:	ret    0xe3cd
   14001622c:	sbb    ebx,DWORD PTR [rdi+rbx*1]
   14001622f:	pop    rdi
   140016230:	jrcxz  0x14001622c
   140016232:	mov    edi,0x2f746dfa
   140016237:	popf   
   140016238:	jrcxz  0x140016233
   14001623a:	fwait
   14001623b:	push   rdi
   14001623c:	jns    0x14001622e
   14001623e:	cmp    edi,DWORD PTR [rdi+0x5dfdc5c2]
   140016244:	(bad)  
   140016245:	mov    ebp,0x973730f0
   14001624a:	rex.RXB je 0x140016284
   14001624d:	add    ch,BYTE PTR [rdi-0x3a3a9684]
   140016253:	xchg   DWORD PTR [rbx-0x62],ebp
   140016256:	mov    edx,0x395e21fb
   14001625b:	jl     0x1400161f0
   14001625d:	push   rdi
   14001625e:	xchg   esi,eax
   14001625f:	scas   eax,DWORD PTR es:[rdi]
   140016260:	mov    bl,0x33
   140016262:	cdq    
   140016263:	sar    DWORD PTR [rax+0x47],cl
   140016266:	mov    ch,0x88
   140016268:	cld    
   140016269:	call   0x139cb4922
   14001626e:	ds rex.WR
   140016270:	cs jo  0x1400161fe
   140016273:	(bad)  
   140016275:	(bad)  
   140016276:	mov    eax,0x9fcec10d
   14001627b:	lea    ebp,[rbp-0x68d3c701]
   140016281:	add    al,0xfe
   140016283:	sub    al,0x46
   140016285:	jg     0x1400162e3
   140016287:	(bad)  
   140016288:	sbb    edi,ebx
   14001628a:	rex.WRB loope 0x1400162ab
   14001628d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001628e:	jmp    QWORD PTR [rsi-0x49]
   140016291:	loop   0x140016247
   140016293:	sbb    edx,DWORD PTR [rcx-0x7c]
   140016296:	jle    0x14001630c
   140016298:	lods   eax,DWORD PTR ds:[rsi]
   140016299:	out    dx,eax
   14001629a:	xchg   dl,dl
   14001629c:	adc    DWORD PTR [rax-0x43388ea5],esp
   1400162a2:	and    esi,DWORD PTR [rsi+0x1d]
   1400162a5:	mov    cl,0x57
   1400162a7:	or     BYTE PTR [rsi+0x1c],dl
   1400162aa:	xor    al,ah
   1400162ac:	(bad)  
   1400162ad:	outs   dx,DWORD PTR ds:[rsi]
   1400162ae:	std    
   1400162af:	fchs   
   1400162b1:	(bad)  
   1400162b2:	jo     0x1400162df
   1400162b4:	rex.R
   1400162b5:	gs add cl,0x25
   1400162b9:	imul   esi,DWORD PTR [rip+0x7a5d4252],0x139a78ea        # 0x1ba5ea515
   1400162c3:	ins    BYTE PTR es:[rdi],dx
   1400162c4:	(bad)  
   1400162c5:	add    al,0xca
   1400162c7:	lods   al,BYTE PTR ds:[rsi]
   1400162c8:	stc    
   1400162c9:	add    BYTE PTR [rdx-0x72bd97cd],bh
   1400162cf:	jge    0x1400162a0
   1400162d1:	push   rax
   1400162d2:	cmp    DWORD PTR [rbx],ecx
   1400162d4:	(bad)  
   1400162d6:	rex.RXB outs dx,DWORD PTR ds:[rsi]
   1400162d8:	cmp    edi,edi
   1400162da:	(bad)  
   1400162db:	pushf  
   1400162dc:	(bad)  
   1400162dd:	rex.WX sub QWORD PTR [rbx+0x13afbc89],rsp
   1400162e4:	rex.WXB
   1400162e5:	repnz xchg ecx,eax
   1400162e7:	xor    DWORD PTR [rbp-0x45e7c431],0xc87a30c9
   1400162f1:	push   rax
   1400162f2:	sbb    al,0x45
   1400162f4:	jmp    0x12e9eab00
   1400162f9:	jno    0x1400162f3
   1400162fb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400162fc:	mov    ah,0xfb
   1400162fe:	sub    bh,al
   140016300:	and    bl,ah
   140016302:	xchg   ebp,eax
   140016303:	test   BYTE PTR [rdx],bh
   140016305:	in     al,dx
   140016306:	sahf   
   140016307:	(bad)  
   140016308:	xor    DWORD PTR [rbp+0x769921cd],0xb8648a4c
   140016312:	(bad)  
   140016313:	or     ah,cl
   140016315:	(bad)  
   140016316:	movabs eax,ds:0x4c9b292dba0e1d64
   14001631f:	adc    esp,DWORD PTR [rcx+rdi*2-0x8cd386f]
   140016326:	adc    ecx,eax
   140016328:	rex.XB in eax,0xd2
   14001632b:	mov    ch,0x8b
   14001632d:	cmc    
   14001632e:	outs   dx,DWORD PTR ds:[rsi]
   14001632f:	(bad)  
   140016330:	jrcxz  0x14001637b
   140016332:	jmp    rsi
   140016334:	mov    bh,0x33
   140016336:	adc    eax,0x3bfb1fc0
   14001633b:	lahf   
   14001633c:	jo     0x14001637d
   14001633e:	sti    
   14001633f:	xchg   edi,eax
   140016340:	jle    0x14001633c
   140016342:	leave  
   140016343:	push   0x5a
   140016345:	pop    rcx
   140016346:	addr32 lahf 
   140016348:	or     BYTE PTR [rcx-0x32b00fb1],dh
   14001634e:	iret   
   14001634f:	repz movabs eax,ds:0x93ec42c861be88c1
   140016359:	mov    WORD PTR [rsp+rdx*2],es
   14001635c:	ins    BYTE PTR es:[rdi],dx
   14001635d:	or     eax,0x6b50b8b7
   140016362:	hlt    
   140016363:	pop    rax
   140016364:	or     ebx,DWORD PTR [rdi]
   140016366:	mov    edi,0x785e09ff
   14001636b:	mov    edx,0xfcbffae7
   140016370:	pop    rbp
   140016371:	call   0x15eea973a
   140016376:	in     al,0xee
   140016378:	rex.RXB out dx,eax
   14001637a:	in     eax,0xea
   14001637c:	sub    edx,DWORD PTR [rdi+0x79]
   14001637f:	out    dx,al
   140016380:	(bad)  
   140016381:	(bad)  
   140016382:	gs mov edx,0x87dce535
   140016388:	shl    DWORD PTR ds:[rbx+0xf],0xdd
   14001638d:	ret    
   14001638e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001638f:	jle    0x140016386
   140016391:	rex.XB (bad) 
   140016393:	cmc    
   140016394:	mov    WORD PTR [rdi-0x41c650d1],ss
   14001639a:	(bad)  
   14001639b:	repnz loopne 0x140016399
   14001639e:	(bad)
   1400163a2:	div    ecx
   1400163a4:	ror    cl,cl
   1400163a6:	mov    ebp,DWORD PTR [rsi+rbp*4-0x10400ee3]
   1400163ad:	rex.WRXB js 0x14001639f
   1400163b0:	jl     0x1400163d1
   1400163b2:	(bad)  
   1400163b3:	or     ebp,DWORD PTR [rax+rcx*1-0x2c]
   1400163b7:	(bad)  
   1400163b8:	mov    esp,0x97659d3e
   1400163bd:	sub    eax,0x67f7a9f0
   1400163c2:	(bad)  
   1400163c5:	rex.W loopne 0x140016397
   1400163c8:	(bad)  
   1400163c9:	fdiv   st(3),st
   1400163cb:	mov    ch,0x9a
   1400163cd:	js     0x14001643b
   1400163cf:	sub    BYTE PTR [rsp+rdi*8-0x21864e7],bl
   1400163d6:	rex.RX sti 
   1400163d8:	cmp    dh,ah
   1400163da:	sub    ebp,0x1f68f69
   1400163e0:	(bad)  
   1400163e1:	rex.WRXB or al,0x11
   1400163e4:	test   eax,0xc68ab1ac
   1400163e9:	(bad)  
   1400163ea:	jge    0x140016383
   1400163ec:	loop   0x1400163e9
   1400163ee:	lahf   
   1400163ef:	xchg   esi,eax
   1400163f0:	stos   DWORD PTR es:[rdi],eax
   1400163f1:	hlt    
   1400163f2:	lahf   
   1400163f3:	pop    rbx
   1400163f4:	mov    DWORD PTR [rax-0x35a96aac],esi
   1400163fa:	jrcxz  0x14001641c
   1400163fc:	push   rdi
   1400163fd:	(bad)  
   1400163fe:	fldenv [rbp-0x338601f2]
   140016404:	(bad)  
   140016405:	mov    edx,0x2638d00c
   14001640a:	mov    dl,0x57
   14001640c:	mov    esi,DWORD PTR [rip+0xffffffffb35ed64b]        # 0xf3603a5d
   140016412:	clc    
   140016413:	jmp    0xc75850c0
   140016418:	iret   
   140016419:	rex.RXB
   14001641a:	gs mov dl,0x85
   14001641d:	int3   
   14001641e:	mov    ah,0x3b
   140016420:	fdivr  DWORD PTR [rax+0x758841e8]
   140016426:	and    ch,0x25
   140016429:	retf   
   14001642a:	jle    0x140016418
   14001642c:	mov    bh,0x53
   14001642e:	enter  0x4141,0x2c
   140016432:	jb     0x1400163c5
   140016434:	add    eax,0xfef65c56
   140016439:	int    0x8d
   14001643b:	(bad)  
   14001643c:	xchg   esp,ebx
   14001643e:	rex.RX out dx,al
   140016440:	rex.WB
   140016441:	ds fcmovnu st,st(0)
   140016444:	ret    0xef17
   140016447:	jl     0x14001648c
   140016449:	in     al,dx
   14001644a:	xor    al,0xff
   14001644c:	(bad)  
   14001644d:	(bad)  
   14001644e:	loope  0x1400164c0
   140016450:	mov    ebx,esp
   140016452:	jge    0x14001648a
   140016454:	xchg   esp,eax
   140016455:	ins    DWORD PTR es:[rdi],dx
   140016456:	jb     0x14001645b
   140016458:	pop    rsp
   140016459:	mov    ecx,0x30d7d4cd
   14001645e:	mov    ebp,0xd5350ace
   140016463:	or     DWORD PTR [rdx-0x6defaca5],ebx
   140016469:	in     al,0x31
   14001646b:	cmp    eax,0x3beaf542
   140016470:	rex.WRXB xchg r10,rax
   140016472:	outs   dx,DWORD PTR ds:[rsi]
   140016473:	jl     0x1400164b0
   140016475:	push   rbx
   140016476:	add    DWORD PTR [rsi+rsi*2-0x71e5c3c3],edi
   14001647d:	xchg   edi,eax
   14001647e:	jnp    0x140016413
   140016480:	stc    
   140016481:	cs sbb edx,0xffffff8c
   140016485:	out    0xe7,al
   140016487:	test   eax,0x26e03443
   14001648c:	push   0x69
   14001648e:	out    dx,eax
   14001648f:	imul   edx,DWORD PTR [rbx+0xe],0x12
   140016493:	ins    DWORD PTR es:[rdi],dx
   140016494:	adc    dl,BYTE PTR [rbp+0x6a]
   140016497:	mov    rsi,cr0
   14001649a:	nop
   14001649b:	pop    rsi
   14001649c:	or     al,0x86
   14001649e:	(bad)  
   14001649f:	sbb    ebp,0x6c9c19fd
   1400164a5:	mov    cl,0xfe
   1400164a7:	addr32 (bad) 
   1400164a9:	jrcxz  0x14001647d
   1400164ab:	fidivr WORD PTR [rip+0xffffffffd1f6e734]        # 0x111f84be5
   1400164b1:	rex.WX icebp 
   1400164b3:	rcr    DWORD PTR [rsi-0x586008b5],cl
   1400164b9:	stos   BYTE PTR es:[rdi],al
   1400164ba:	out    dx,eax
   1400164bb:	loope  0x1400164a5
   1400164bd:	jo     0x140016488
   1400164bf:	(bad)  
   1400164c1:	push   0xffffffffffffff9f
   1400164c3:	xchg   ebx,eax
   1400164c4:	out    0x8f,eax
   1400164c6:	test   eax,0x8f0b97b8
   1400164cb:	fiadd  WORD PTR [rcx-0x1a89471e]
   1400164d1:	mov    BYTE PTR [rdi-0x44688681],ah
   1400164d7:	(bad)  
   1400164d9:	mov    bl,0x3c
   1400164db:	mov    ch,0xfd
   1400164dd:	and    esi,edi
   1400164df:	hlt    
   1400164e0:	mov    ecx,0x74d0f0cf
   1400164e5:	cmp    cl,BYTE PTR [rax]
   1400164e7:	jg     0x14001654a
   1400164e9:	xlat   BYTE PTR ds:[rbx]
   1400164ea:	mov    bl,0xb0
   1400164ec:	mov    DWORD PTR [rcx-0x38],0xc7f7f16e
   1400164f3:	ret    0xb63e
   1400164f6:	shl    BYTE PTR [rbx],cl
   1400164f8:	fsubrp st(0),st
   1400164fa:	hlt    
   1400164fb:	loop   0x140016519
   1400164fd:	pop    rdi
   1400164fe:	push   rbx
   1400164ff:	clc    
   140016500:	(bad)  
   140016501:	fs jrcxz 0x14001656d
   140016504:	and    al,0x31
   140016506:	jb     0x140016513
   140016508:	mov    dh,ch
   14001650a:	dec    DWORD PTR [rbp+0x8]
   14001650d:	(bad)  
   14001650e:	rex pop rax
   140016510:	xor    ebx,DWORD PTR [rbx+0x293ec4b6]
   140016516:	add    DWORD PTR [rsp+rcx*1-0x608cef4],ecx
   14001651d:	movabs ds:0x711706eca7966008,eax
   140016526:	cmp    DWORD PTR [rip+0x6d885963],esp        # 0x1ad89be8f
   14001652c:	mov    fs,WORD PTR [rbp-0x35]
   14001652f:	ds mov esp,0x8ee0b1d7
   140016535:	es cmp eax,0xc262e2c5
   14001653b:	cwde   
   14001653c:	std    
   14001653d:	ficomp DWORD PTR [rax-0x2b4d8b59]
   140016543:	cmp    bl,BYTE PTR [rax-0x28]
   140016546:	add    DWORD PTR [r13-0x58],esp
   14001654a:	cmp    eax,0xb90d93c0
   14001654f:	sbb    DWORD PTR [rdi-0x5d],ebx
   140016552:	add    bl,0xa5
   140016555:	imul   ebx,DWORD PTR [rcx],0x7c
   140016558:	(bad)  
   140016559:	rcl    DWORD PTR [rcx],0x13
   14001655c:	scas   eax,DWORD PTR es:[rdi]
   14001655d:	push   rbx
   14001655e:	in     al,0x6e
   140016560:	adc    al,0x19
   140016562:	xor    BYTE PTR [rbx],dh
   140016564:	(bad)  
   140016565:	pop    rax
   140016566:	je     0x14001653d
   140016568:	jb     0x140016577
   14001656a:	jns    0x140016591
   14001656c:	(bad)  
   14001656d:	ins    BYTE PTR es:[rdi],dx
   14001656e:	mov    ch,0x4a
   140016570:	jbe    0x140016591
   140016572:	pop    rcx
   140016573:	cwde   
   140016574:	(bad)  
   140016575:	cmp    al,0x29
   140016577:	sti    
   140016578:	lods   eax,DWORD PTR ds:[rsi]
   140016579:	push   0x52
   14001657b:	and    dh,dh
   14001657d:	fiadd  WORD PTR [rsi+0x21286dc4]
   140016583:	(bad)  
   140016584:	jns    0x1400165aa
   140016586:	(bad)  
   140016587:	out    dx,al
   140016588:	movabs ds:0xfff92915c522fbf8,al
   140016591:	xor    ah,BYTE PTR [rax+0x7270ac86]
   140016597:	movabs eax,es:0xb1907a5c988ad21d
   1400165a1:	in     al,dx
   1400165a2:	rex.RB mul DWORD PTR [r15]
   1400165a5:	jmp    rsp
   1400165a7:	lahf   
   1400165a8:	enter  0xddeb,0xdd
   1400165ac:	xchg   esi,eax
   1400165ad:	in     eax,dx
   1400165ae:	int3   
   1400165af:	mov    ah,0xc2
   1400165b1:	in     eax,0xb5
   1400165b3:	(bad)
   1400165b6:	hlt    
   1400165b7:	cmp    al,0x29
   1400165b9:	std    
   1400165ba:	push   rdi
   1400165bb:	movabs ds:0x38bd87b6dc8dddc5,eax
   1400165c4:	pop    rcx
   1400165c5:	mov    dl,0x5e
   1400165c7:	lods   eax,DWORD PTR ds:[rsi]
   1400165c8:	sub    eax,0xcca96419
   1400165cd:	fwait
   1400165ce:	ins    DWORD PTR es:[rdi],dx
   1400165cf:	sar    DWORD PTR [rdx+0x55ce1de],cl
   1400165d5:	shl    DWORD PTR [rcx-0x729d5f43],1
   1400165db:	ds (bad) 
   1400165de:	jnp    0x14001657c
   1400165e0:	pop    rsp
   1400165e1:	out    dx,eax
   1400165e2:	cwde   
   1400165e3:	xor    eax,0x9c5eecfb
   1400165e8:	jno    0x140016666
   1400165ea:	jb     0x1400165ae
   1400165ec:	cmc    
   1400165ed:	imul   ecx,DWORD PTR [rbx-0x52],0xffffffbc
   1400165f1:	mov    ch,0xe4
   1400165f3:	fidiv  DWORD PTR [rbp+0x5cbc705]
   1400165f9:	mov    ebx,0xb85c2697
   1400165fe:	jmp    0x14001666e
   140016600:	data16 repnz sbb BYTE PTR [rbx],bh
   140016604:	sti    
   140016605:	push   rbx
   140016606:	xchg   esi,eax
   140016607:	ins    DWORD PTR es:[rdi],dx
   140016608:	retf   
   140016609:	pop    rdx
   14001660a:	cmp    ebp,esi
   14001660c:	mov    eax,0xbbb99767
   140016611:	xchg   edi,eax
   140016612:	mov    bh,0x3e
   140016614:	stc    
   140016615:	sti    
   140016616:	clc    
   140016617:	movabs ds:0x9959e3afc29b0bed,eax
   140016620:	push   rcx
   140016621:	add    BYTE PTR [rbx-0x7e9a43c],bl
   140016627:	lea    edi,[rdi+0x67]
   14001662a:	jl     0x140016682
   14001662c:	xchg   esp,eax
   14001662d:	rex.XB cmp r11b,dil
   140016630:	cmc    
   140016631:	cdq    
   140016632:	xchg   esi,eax
   140016633:	push   rsp
   140016635:	jno    0x1400165ea
   140016637:	lock (bad) 
   140016639:	adc    cl,cl
   14001663b:	sub    eax,0x6c4dfde7
   140016640:	stos   BYTE PTR es:[rdi],al
   140016641:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140016643:	rex.W mov dil,0xb0
   140016646:	mov    ah,0xd9
   140016648:	(bad)  
   140016649:	xchg   ebx,eax
   14001664a:	ror    DWORD PTR [rbx-0x32],cl
   14001664d:	mov    ch,0x67
   14001664f:	rol    DWORD PTR [rdx],cl
   140016651:	lea    ecx,[rbp+0x2017142b]
   140016657:	xchg   edx,eax
   140016658:	(bad)  
   140016659:	and    ecx,DWORD PTR [rbp-0x9]
   14001665c:	and    dl,BYTE PTR [rcx+rcx*2+0x236f8c59]
   140016663:	dec    DWORD PTR [rdi-0x79]
   140016666:	imul   ecx,eax,0x56
   140016669:	(bad)  
   14001666a:	(bad)  
   14001666b:	mov    ebx,0xe7abe723
   140016670:	lock pop rsi
   140016672:	repnz lea edx,[rbx+0x63700ff0]
   140016679:	je     0x1400166ec
   14001667b:	test   eax,0x1746580d
   140016680:	sbb    ebp,DWORD PTR [rcx+0x25e2e9b7]
   140016686:	out    dx,eax
   140016687:	rex.XB sub al,0x4
   14001668a:	pop    rdi
   14001668b:	mov    ecx,0x14aa228c
   140016690:	(bad)  
   140016691:	sub    ah,cl
   140016693:	xor    bl,BYTE PTR [rip+0x4fdf2fae]        # 0x18fe09647
   140016699:	es (bad) 
   14001669b:	jne    0x140016719
   14001669d:	(bad)  
   14001669e:	(bad)  
   14001669f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400166a0:	xor    al,0x8a
   1400166a2:	mov    esi,0xc18c6321
   1400166a7:	push   rax
   1400166a8:	retf   
   1400166a9:	(bad)  
   1400166aa:	pop    rcx
   1400166ab:	mov    bl,0x5b
   1400166ad:	jo     0x140016669
   1400166af:	mov    bl,0x71
   1400166b1:	rex.WR or r13b,BYTE PTR [rdx-0x4c]
   1400166b5:	sti    
   1400166b6:	xchg   BYTE PTR [rbx],ch
   1400166b8:	xor    ebx,DWORD PTR [rsp+riz*2-0xa7ce98c]
   1400166bf:	mov    bh,0x9c
   1400166c1:	ja     0x1400166a3
   1400166c3:	rex.WRB je 0x1400166fa
   1400166c6:	sub    al,0x82
   1400166c8:	stos   BYTE PTR es:[rdi],al
   1400166c9:	retf   0xfb5f
   1400166cc:	(bad)  
   1400166ce:	(bad)  
   1400166cf:	outs   dx,DWORD PTR ds:[rsi]
   1400166d0:	cmp    eax,0xb2bcd007
   1400166d5:	clc    
   1400166d6:	lods   eax,DWORD PTR ss:[rsi]
   1400166d8:	gs retf 
   1400166da:	cli    
   1400166db:	cwde   
   1400166dc:	rex.B
   1400166dd:	rex.WR sbb rax,0xffffffffa8b2637d
   1400166e3:	(bad)  
   1400166e4:	rex scas eax,DWORD PTR es:[rdi]
   1400166e6:	(bad)  
   1400166e7:	test   eax,0x41efc7bc
   1400166ec:	mov    edi,0xaec1f472
   1400166f1:	push   rsp
   1400166f2:	mov    BYTE PTR [rdx+0x68],r12b
   1400166f6:	rol    DWORD PTR [rbp+0x0],0x63
   1400166fa:	inc    DWORD PTR [rbx-0x42a0ed8]
   140016700:	rex.B movabs al,ds:0x8ca5523d972c765d
   14001670a:	mov    bl,0x0
   14001670c:	mov    edi,0xa95eeb2d
   140016712:	out    0xd,al
   140016714:	xor    al,0x1e
   140016716:	pop    rcx
   140016717:	jnp    0x14001678b
   140016719:	fidiv  DWORD PTR [rcx-0x712930c6]
   14001671f:	repnz and ebx,DWORD PTR [rdi]
   140016722:	std    
   140016723:	push   rcx
   140016724:	fidivr WORD PTR [rbx-0x52]
   140016727:	and    esi,0x1c
   14001672a:	(bad)
   14001672d:	adc    BYTE PTR [rdx-0x38e103ef],bh
   140016733:	repz (bad) 
   140016735:	cld    
   140016736:	std    
   140016737:	xor    esp,DWORD PTR [rax+0x7a]
   14001673a:	in     al,dx
   14001673b:	xchg   DWORD PTR [rbx-0x6b],esp
   14001673e:	add    al,0x9f
   140016740:	xor    DWORD PTR [rcx],ecx
   140016742:	cwde   
   140016743:	leave  
   140016744:	mov    esi,0x718c79b8
   140016749:	clc    
   14001674a:	lock popf 
   14001674c:	adc    bh,BYTE PTR [rsi+rax*8-0x6a]
   140016750:	(bad)  
   140016751:	(bad)  
   140016753:	cld    
   140016754:	ins    DWORD PTR es:[edi],dx
   140016756:	movabs eax,ds:0x2a3ac16ebb3dd5c7
   14001675f:	jge    0x140016780
   140016761:	icebp  
   140016762:	xchg   ebp,eax
   140016763:	push   rdx
   140016764:	push   rbp
   140016765:	xor    eax,0x4326baa
   14001676a:	(bad)  
   14001676b:	retf   
   14001676c:	pushf  
   14001676d:	leave  
   14001676e:	jne    0x1400167b2
   140016770:	jo     0x140016704
   140016772:	mov    ecx,DWORD PTR [rdx+0x60]
   140016775:	ret    
   140016776:	and    DWORD PTR [rsi-0x45cc533c],eax
   14001677c:	(bad)  
   14001677d:	fs xchg ecx,eax
   14001677f:	and    al,BYTE PTR [rbx-0x7c]
   140016782:	add    DWORD PTR [rbx],edi
   140016784:	xchg   esi,eax
   140016785:	in     eax,dx
   140016786:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016787:	mov    bh,0x8
   140016789:	mov    ds,WORD PTR gs:[rbp-0x25]
   14001678d:	add    DWORD PTR [rcx],ebp
   14001678f:	and    ch,BYTE PTR [rdx-0x604f95a8]
   140016795:	add    BYTE PTR [rax],al
   140016797:	and    BYTE PTR [rax],al
   140016799:	rex.WB
   14001679a:	rex.R
   14001679b:	push   r12
   14001679d:	and    bl,BYTE PTR [rbx]
   14001679f:	add    bh,0xb8
   1400167a2:	(bad)  
   1400167a3:	rex.W
   1400167a4:	rex.WRX xchg rsi,rax
   1400167a6:	push   rbp
   1400167a7:	mov    ch,0x86
   1400167a9:	xor    DWORD PTR [rbx-0x323a6600],eax
   1400167af:	xor    eax,0x523a702
   1400167b4:	jrcxz  0x1400167a9
   1400167b6:	movabs eax,ds:0x8412d2d627a32b62
   1400167bf:	rex.RX in al,dx
   1400167c1:	(bad)  
   1400167c2:	xor    BYTE PTR [rax],cl
   1400167c4:	mov    dh,0x22
   1400167c6:	jb     0x14001681e
   1400167c8:	pop    rdi
   1400167c9:	pop    rcx
   1400167ca:	adc    esp,DWORD PTR [rsi-0x762c2bdb]
   1400167d0:	mov    dl,0x3e
   1400167d2:	sub    al,0xca
   1400167d4:	ror    DWORD PTR [rsi],1
   1400167d6:	imul   ecx,edi,0x2d
   1400167d9:	or     ebp,DWORD PTR [rcx-0x79c71dbe]
   1400167df:	jrcxz  0x1400167fc
   1400167e1:	je     0x140016822
   1400167e3:	in     eax,dx
   1400167e4:	jbe    0x14001680f
   1400167e6:	and    eax,0x9a3ca8c9
   1400167eb:	(bad)  
   1400167ec:	and    eax,0xb2431da8
   1400167f1:	jl     0x140016807
   1400167f3:	retf   
   1400167f4:	outs   dx,DWORD PTR ds:[rsi]
   1400167f5:	movsxd ebp,ebx
   1400167f7:	mov    dl,BYTE PTR [rdx-0x704ebe6e]
   1400167fd:	push   rax
   1400167fe:	fucomi st,st(5)
   140016800:	fmul   st(6),st
   140016802:	add    BYTE PTR [rdi],r13b
   140016805:	mov    esi,0x75fdf2fc
   14001680a:	push   rbx
   14001680b:	rex.XB stos BYTE PTR es:[rdi],al
   14001680d:	fcmovne st,st(6)
   14001680f:	and    eax,0xba8fb9a8
   140016814:	stc    
   140016815:	sbb    DWORD PTR [rdx+0x26],0xcc1c209d
   14001681c:	(bad)  
   14001681d:	mov    BYTE PTR [rsp+rdx*1+0x6150b252],al
   140016824:	je     0x140016843
   140016826:	(bad)  
   140016827:	test   eax,ebx
   140016829:	ret    
   14001682a:	outs   dx,BYTE PTR ds:[rsi]
   14001682b:	mov    bl,0xc7
   14001682d:	cmc    
   14001682e:	(bad)  
   14001682f:	out    dx,al
   140016830:	imul   di,WORD PTR [rbx+0x6a],0xffca
   140016835:	cmp    ah,BYTE PTR [rax*4+0x40796312]
   14001683c:	and    DWORD PTR [rdx+rdi*4+0x75],eax
   140016840:	movabs al,ds:0x7166f7d22eda455b
   140016849:	(bad)  
   14001684a:	scas   al,BYTE PTR es:[rdi]
   14001684b:	pop    rdi
   14001684c:	loope  0x1400167fd
   14001684e:	mov    esp,0xdef32fe7
   140016853:	or     edx,DWORD PTR [rdi-0x6e]
   140016856:	lock xor edx,DWORD PTR [rdx]
   140016859:	mov    ah,0xb1
   14001685b:	push   rax
   14001685c:	(bad)  
   14001685d:	and    DWORD PTR [rbp+0x4b7a420e],edi
   140016863:	jbe    0x140016844
   140016865:	push   0xfffffffffc2238bf
   14001686a:	outs   dx,BYTE PTR ds:[rsi]
   14001686b:	adc    esi,edi
   14001686d:	cld    
   14001686e:	cli    
   14001686f:	je     0x140016885
   140016871:	loopne 0x1400168c7
   140016873:	leave  
   140016874:	out    dx,eax
   140016875:	cdq    
   140016876:	cmc    
   140016877:	jmp    QWORD PTR [rbx+0x3e]
   14001687a:	and    bl,BYTE PTR [rdi+0x52789bf3]
   140016880:	stos   BYTE PTR es:[rdi],al
   140016881:	loopne 0x1400168a5
   140016883:	ds mov dh,0xd6
   140016886:	fs mov bl,0xf
   140016889:	push   0xffffffff92177580
   14001688e:	fmul   QWORD PTR [rsi-0x54f22b04]
   140016894:	scas   eax,DWORD PTR es:[rdi]
   140016895:	add    esp,DWORD PTR [rcx+0x52e58324]
   14001689b:	sbb    eax,0x3cc5b265
   1400168a0:	cmp    ebx,esi
   1400168a2:	and    eax,0xe92d09a7
   1400168a7:	repz cmp al,0xdc
   1400168aa:	fdiv   st,st(3)
   1400168ac:	xlat   BYTE PTR ds:[rbx]
   1400168ad:	shl    DWORD PTR [rsp+rsi*4+0x2e],1
   1400168b1:	vunpcklps xmm15,xmm8,xmm5
   1400168b5:	(bad)  
   1400168b6:	sbb    al,0xc2
   1400168b8:	rol    dl,cl
   1400168ba:	and    eax,0x5a78550c
   1400168bf:	enter  0x2b1,0x83
   1400168c3:	repz mov cl,0xca
   1400168c6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400168c7:	mov    esp,DWORD PTR [rcx]
   1400168c9:	rex.W push rdx
   1400168cb:	jmp    0x1604c3488
   1400168d0:	in     eax,dx
   1400168d1:	jae    0x14262fb29
   1400168d7:	(bad)  
   1400168d8:	and    DWORD PTR [rdx-0x5c],esp
   1400168db:	(bad)  
   1400168dc:	shl    BYTE PTR [rip+0x6aab66aa],cl        # 0x1aaaccf8c
   1400168e2:	movabs eax,ds:0x7f245ee8e2f1f247
   1400168eb:	xchg   edi,eax
   1400168ec:	adc    al,0x53
   1400168ee:	xchg   ch,bl
   1400168f0:	fsqrt  
   1400168f2:	retf   0x2a0
   1400168f5:	xor    ch,BYTE PTR [rcx+0x28ea12e7]
   1400168fb:	push   rbp
   1400168fc:	xchg   esi,eax
   1400168fd:	(bad)  
   1400168ff:	sub    al,bh
   140016901:	xor    edx,edi
   140016903:	and    eax,0x86dab5ff
   140016908:	add    DWORD PTR [rcx+0x43904464],ebp
   14001690e:	jge    0x1400168a2
   140016910:	stc    
   140016911:	mov    edx,DWORD PTR [rcx-0x74afaf65]
   140016917:	ffree  st(3)
   140016919:	ins    DWORD PTR es:[rdi],dx
   14001691a:	(bad)  
   14001691b:	add    bl,BYTE PTR [rsi-0x441ff5f]
   140016921:	jg     0x14001691b
   140016923:	icebp  
   140016924:	in     eax,dx
   140016925:	in     eax,0x2b
   140016927:	scas   eax,DWORD PTR es:[rdi]
   140016928:	lahf   
   140016929:	not    DWORD PTR [rbx-0x4f84ed26]
   14001692f:	xchg   DWORD PTR [rdx],ebx
   140016931:	movsxd esi,DWORD PTR [rcx+riz*8]
   140016934:	(bad)  
   140016935:	rex.WR sbb al,0x69
   140016938:	push   rsi
   140016939:	retf   0x55d0
   14001693c:	add    eax,0xdc585b2d
   140016941:	mov    esi,0xaf50417
   140016946:	xchg   ebp,eax
   140016947:	jrcxz  0x140016937
   140016949:	fnstsw WORD PTR [rbx]
   14001694b:	mov    BYTE PTR [rbx-0x6986a0e6],cl
   140016951:	(bad)  
   140016952:	sub    edi,ebx
   140016954:	pop    rsi
   140016955:	mov    cl,0x87
   140016957:	sbb    esp,ecx
   140016959:	sbb    ah,bh
   14001695b:	pop    rsp
   14001695c:	add    eax,DWORD PTR [rdx+0x110d9675]
   140016962:	je     0x1400169d5
   140016964:	popf   
   140016965:	(bad)  
   140016966:	sti    
   140016967:	fcomp  st(7)
   140016969:	in     al,0x5b
   14001696b:	out    dx,eax
   14001696c:	mov    edx,0xf4f9d50e
   140016971:	mov    ah,0xe2
   140016973:	lods   eax,DWORD PTR ds:[rsi]
   140016974:	dec    DWORD PTR [rdx-0x4]
   140016977:	ds or  ebx,edi
   14001697a:	sub    DWORD PTR [rbx],ecx
   14001697c:	jge    0x140016989
   14001697e:	movabs ds:0x328f5e8fdfc2461f,eax
   140016987:	cli    
   140016988:	jb     0x140016983
   14001698a:	outs   dx,BYTE PTR ds:[rsi]
   14001698b:	scas   rax,QWORD PTR es:[rdi]
   14001698d:	movsxd edx,DWORD PTR [rdx]
   14001698f:	clc    
   140016990:	scas   eax,DWORD PTR es:[rdi]
   140016991:	jmp    0x1400169a5
   140016993:	mov    WORD PTR [rcx+0x40],ss
   140016996:	clc    
   140016997:	out    0x4,al
   140016999:	(bad)  
   14001699a:	adc    bl,BYTE PTR [rbp+rcx*1+0x38]
   14001699e:	imul   ebx,DWORD PTR [rcx+0x6d1082e9],0x22189c15
   1400169a8:	stos   DWORD PTR es:[rdi],eax
   1400169a9:	adc    BYTE PTR [rdi],al
   1400169ab:	adc    ch,dh
   1400169ad:	mov    WORD PTR [rbp-0x74],gs
   1400169b0:	(bad)  
   1400169b1:	in     al,dx
   1400169b2:	std    
   1400169b3:	sbb    ebx,edi
   1400169b5:	lea    esp,[rax+0x6b]
   1400169b8:	(bad)  
   1400169b9:	xor    ecx,DWORD PTR [rax]
   1400169bb:	outs   dx,BYTE PTR ds:[rsi]
   1400169bc:	mov    dh,0xcd
   1400169be:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400169bf:	jle    0x140016968
   1400169c1:	jrcxz  0x140016a12
   1400169c3:	adc    ah,BYTE PTR [rdx]
   1400169c5:	push   rax
   1400169c6:	sub    eax,0x862326ba
   1400169cb:	mov    cl,0x15
   1400169cd:	(bad)  
   1400169ce:	jmp    0x150af4302
   1400169d3:	leave  
   1400169d4:	out    dx,eax
   1400169d5:	mov    bl,0x2c
   1400169d7:	test   BYTE PTR fs:[rcx+0x46],ah
   1400169db:	and    al,0x2f
   1400169dd:	jp     0x140016a19
   1400169df:	ds jnp 0x140016a38
   1400169e2:	push   rsp
   1400169e3:	fwait
   1400169e4:	out    dx,al
   1400169e5:	add    al,BYTE PTR [rbx+0x3e]
   1400169e8:	jo     0x140016a44
   1400169ea:	in     al,dx
   1400169eb:	and    al,0x6f
   1400169ed:	outs   dx,BYTE PTR ds:[rsi]
   1400169ee:	cmp    BYTE PTR [rbp+0x3a],bh
   1400169f1:	xchg   esi,eax
   1400169f2:	sub    DWORD PTR [rbp-0x2b],esp
   1400169f5:	push   0x4347e6ad
   1400169fa:	xor    dh,bh
   1400169fc:	frstor [rsi]
   1400169fe:	pop    rbp
   1400169ff:	xchg   edx,eax
   140016a00:	lods   eax,DWORD PTR ds:[rsi]
   140016a01:	clc    
   140016a02:	fmul   DWORD PTR [rbp+0x7a307248]
   140016a08:	ins    DWORD PTR es:[rdi],dx
   140016a09:	(bad)  
   140016a0a:	loop   0x140016996
   140016a0c:	sub    ebx,DWORD PTR [rdi-0x3cd29c81]
   140016a12:	shr    edi,cl
   140016a14:	(bad)  
   140016a15:	outs   dx,BYTE PTR ds:[rsi]
   140016a16:	rex (bad) 
   140016a18:	jle    0x140016a63
   140016a1a:	pop    rsp
   140016a1b:	rex.RXB
   140016a1c:	ds mov dh,0xcb
   140016a1f:	cmc    
   140016a20:	push   QWORD PTR [rdx]
   140016a22:	jle    0x140016a3c
   140016a24:	mov    al,cl
   140016a26:	rcr    DWORD PTR [rdi-0x3b015004],1
   140016a2c:	ins    DWORD PTR es:[rdi],dx
   140016a2d:	test   DWORD PTR [rax],eax
   140016a2f:	mov    bh,0x28
   140016a31:	sub    dl,0xf2
   140016a34:	rol    DWORD PTR [rbx-0x48],0xee
   140016a38:	(bad)  
   140016a39:	jl     0x140016a9c
   140016a3b:	sbb    ah,BYTE PTR [rbx]
   140016a3d:	sbb    dl,BYTE PTR [rdx+0x3]
   140016a40:	add    eax,0x2ac547c3
   140016a45:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016a46:	cmp    esp,DWORD PTR [rax+rdx*8]
   140016a49:	jae    0x140016a3e
   140016a4b:	in     al,0x10
   140016a4d:	rcr    DWORD PTR [rdx+0x72c6d23c],0x74
   140016a54:	push   rcx
   140016a55:	loope  0x1400169da
   140016a57:	idiv   DWORD PTR [rdi+0x795e1797]
   140016a5d:	(bad)  
   140016a5e:	(bad)
   140016a61:	add    BYTE PTR [rcx+0x1d],ah
   140016a64:	push   rdx
   140016a65:	(bad)  
   140016a66:	pop    rcx
   140016a67:	rex.WRX jo 0x140016ab2
   140016a6a:	enter  0x2922,0x83
   140016a6e:	sbb    BYTE PTR [rbp-0x3],ch
   140016a71:	cmp    esi,DWORD PTR [rdi-0x2703e44]
   140016a77:	sti    
   140016a78:	(bad)  
   140016a79:	ret    0xeefb
   140016a7c:	mov    eax,0x4d80fe01
   140016a81:	jg     0x140016abf
   140016a83:	pop    rcx
   140016a84:	(bad)  
   140016a85:	and    ch,BYTE PTR [rbx+riz*2+0x133a7e68]
   140016a8c:	rex.WRXB iretq 
   140016a8e:	adc    dh,dl
   140016a90:	xchg   ecx,eax
   140016a91:	xor    eax,0x19e828df
   140016a96:	std    
   140016a97:	mov    esi,0xe0b2fa84
   140016a9c:	jg     0x140016aab
   140016a9e:	ds (bad) 
   140016aa0:	movsxd esp,ecx
   140016aa2:	sar    BYTE PTR [rbp+rdi*2-0x21],1
   140016aa6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016aa7:	(bad)  
   140016aa8:	(bad)  
   140016aa9:	outs   dx,DWORD PTR ds:[rsi]
   140016aaa:	stos   BYTE PTR es:[rdi],al
   140016aab:	and    BYTE PTR [rcx],dl
   140016aad:	(bad)  
   140016aae:	jnp    0x140016af2
   140016ab0:	outs   dx,DWORD PTR ds:[rsi]
   140016ab1:	cdq    
   140016ab2:	jns    0x140016ad5
   140016ab4:	(bad)  
   140016ab5:	nop    DWORD PTR [rdx+0x4c]
   140016ab9:	in     eax,0xb6
   140016abb:	jns    0x140016b1c
   140016abd:	sti    
   140016abe:	repz rex.WRX (bad) 
   140016ac1:	(bad)
   140016ac6:	jg     0x140016a63
   140016ac8:	pushf  
   140016ac9:	(bad)  
   140016aca:	int    0x3d
   140016acc:	fstp   DWORD PTR [rdx+0x32944b27]
   140016ad2:	out    dx,al
   140016ad3:	in     al,dx
   140016ad4:	(bad)  
   140016ad5:	rex.RXB and al,0xde
   140016ad8:	jo     0x140016a94
   140016ada:	(bad)  
   140016adb:	ins    DWORD PTR es:[rdi],dx
   140016adc:	(bad)  
   140016add:	cmp    edi,DWORD PTR cs:[rdi-0x62]
   140016ae1:	iret   
   140016ae2:	pop    rbx
   140016ae3:	test   dh,al
   140016ae5:	mov    esi,0xe47d562d
   140016aea:	(bad)  
   140016aeb:	fwait
   140016aec:	and    rax,0x6e0b9aab
   140016af2:	retf   0x3371
   140016af5:	cwde   
   140016af6:	mov    dh,0xd7
   140016af8:	fld    DWORD PTR [rsi+0x109ab70c]
   140016afe:	(bad)  
   140016aff:	adc    al,0xd1
   140016b01:	sub    eax,0x9701679f
   140016b06:	xchg   ecx,eax
   140016b07:	adc    BYTE PTR [rsi+0x2b],ah
   140016b0a:	ss pop rsp
   140016b0c:	adc    DWORD PTR [rbx+rcx*4+0x3eddae18],0xffffff8b
   140016b14:	pop    rcx
   140016b15:	movabs eax,ds:0xa91436a0a287ba9d
   140016b1e:	mov    esp,fs
   140016b20:	jge    0x140016ac6
   140016b22:	ret    0x8df2
   140016b25:	mov    WORD PTR [rdi+rcx*2+0x774899c9],ss
   140016b2c:	in     al,0x86
   140016b2e:	(bad)  
   140016b2f:	xor    DWORD PTR [rdx],esp
   140016b31:	adc    al,0x15
   140016b33:	push   rbp
   140016b34:	pop    rbp
   140016b35:	jb     0x140016ad2
   140016b37:	mov    bh,0x5b
   140016b39:	adc    al,0xc0
   140016b3b:	shl    esp,0xf2
   140016b3e:	movsxd ebx,DWORD PTR [rbp+0x70]
   140016b41:	imul   DWORD PTR [rdx+0x66]
   140016b44:	(bad)  
   140016b45:	movsxd ecx,DWORD PTR [rdx-0x69977909]
   140016b4b:	pop    rdx
   140016b4c:	(bad)  
   140016b4d:	cwde   
   140016b4e:	and    ch,BYTE PTR [rcx-0x71455adf]
   140016b54:	jne    0x140016b11
   140016b56:	rex.WR (bad) 
   140016b58:	pushf  
   140016b59:	enter  0xf1f,0x55
   140016b5d:	in     eax,dx
   140016b5e:	clc    
   140016b5f:	fadd   DWORD PTR [rbp-0x46402f09]
   140016b65:	out    0xd5,al
   140016b67:	mov    edi,0xdaab0bbb
   140016b6c:	or     bh,BYTE PTR [rax-0x5e]
   140016b6f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016b70:	movsxd edx,DWORD PTR [rsi]
   140016b72:	jb     0x140016bc5
   140016b74:	lods   eax,DWORD PTR ds:[rsi]
   140016b75:	xlat   BYTE PTR ds:[rbx]
   140016b76:	jge    0x140016bce
   140016b78:	or     BYTE PTR [rbp+rax*2-0x5],al
   140016b7c:	sahf   
   140016b7d:	mov    edi,0xc87fa1f8
   140016b82:	sti    
   140016b83:	out    dx,al
   140016b84:	mov    esp,0xe8f93a96
   140016b89:	lock (bad) 
   140016b8b:	(bad)  
   140016b8c:	jb     0x140016b20
   140016b8e:	xor    DWORD PTR [rax],ebx
   140016b90:	jg     0x140016b39
   140016b92:	fwait
   140016b93:	sti    
   140016b94:	(bad)  
   140016b95:	(bad)  
   140016b96:	cmp    eax,0x6816fef5
   140016b9b:	(bad)  
   140016b9c:	(bad)  
   140016b9d:	jo     0x140016b7c
   140016b9f:	je     0x140016bae
   140016ba1:	mov    BYTE PTR [rcx+riz*2-0x21c6b9c2],0x59
   140016ba9:	out    0x4f,eax
   140016bab:	lahf   
   140016bac:	(bad)  [rsi]
   140016bae:	loope  0x140016b37
   140016bb0:	adc    al,0x39
   140016bb2:	or     BYTE PTR [rcx+rsi*4+0x24],ch
   140016bb6:	hlt    
   140016bb7:	rex.WX call 0x14e3d90e1
   140016bbd:	mov    bl,0x7f
   140016bbf:	in     al,0x3a
   140016bc1:	fiadd  WORD PTR [rdx+0xa]
   140016bc4:	(bad)  
   140016bc5:	(bad)  
   140016bc6:	pop    QWORD PTR [rdi]
   140016bc8:	loope  0x140016b5f
   140016bca:	loope  0x140016b86
   140016bcc:	xor    ecx,ebx
   140016bce:	outs   dx,DWORD PTR ds:[rsi]
   140016bcf:	adc    edi,DWORD PTR [rdi+0x24]
   140016bd2:	jo     0x140016b6d
   140016bd4:	mov    dl,cl
   140016bd6:	rex.B jmp 0x140016b9b
   140016bd9:	mov    ah,0x6b
   140016bdb:	push   rcx
   140016bdc:	sbb    BYTE PTR [rbp-0x484db1fe],ah
   140016be2:	pushf  
   140016be3:	lods   eax,DWORD PTR ds:[rsi]
   140016be4:	in     al,dx
   140016be5:	sub    DWORD PTR [rip+0x247df864],ecx        # 0x1647f644f
   140016beb:	or     ebx,DWORD PTR [rcx]
   140016bed:	fiadd  DWORD PTR [rdi+0x32]
   140016bf0:	sub    al,0x2f
   140016bf2:	(bad)  
   140016bf3:	xor    DWORD PTR [rbx],ecx
   140016bf5:	test   DWORD PTR [rax-0x7da66d78],eax
   140016bfb:	sbb    al,0x5
   140016bfd:	nop
   140016bfe:	and    cl,BYTE PTR [rbp+riz*8-0x7daa1ceb]
   140016c05:	sub    BYTE PTR [rax+0xd252724],cl
   140016c0b:	(bad)  
   140016c0c:	movabs eax,ds:0x7a2de3c94a84248
   140016c15:	leave  
   140016c16:	(bad)  
   140016c17:	jl     0x140016bb3
   140016c19:	out    0xce,eax
   140016c1b:	loope  0x140016baf
   140016c1d:	fwait
   140016c1e:	cmp    esp,DWORD PTR [rax]
   140016c20:	add    BYTE PTR [rdi+0x10],dl
   140016c23:	mov    fs,esi
   140016c25:	icebp  
   140016c26:	(bad)  
   140016c27:	add    ch,BYTE PTR [rip+0x2b1463a3]        # 0x16b15cfd0
   140016c2d:	sub    BYTE PTR ds:[rsi-0x45],al
   140016c31:	or     eax,DWORD PTR [rcx+0x62]
   140016c34:	or     ah,BYTE PTR [rdi+0x2ecc7ba6]
   140016c3a:	xchg   BYTE PTR [rip+0x6070c11d],ah        # 0x1a0722d5d
   140016c40:	sub    DWORD PTR [rax+0x5c],ecx
   140016c43:	outs   dx,DWORD PTR ds:[rsi]
   140016c44:	mov    ebx,0x2867003
   140016c49:	js     0x140016cc6
   140016c4b:	test   ecx,0x2ddb447b
   140016c51:	out    0x6d,eax
   140016c53:	enter  0x4435,0xe8
   140016c57:	movabs ds:0x5acc0fd9280f82d,eax
   140016c60:	rex.XB mov r8b,dil
   140016c63:	cmp    esp,ebx
   140016c65:	cmp    al,0xbe
   140016c67:	xchg   esi,eax
   140016c68:	(bad)  
   140016c69:	mov    ebx,0x347d95b7
   140016c6e:	jo     0x140016c5f
   140016c70:	(bad)  
   140016c71:	add    eax,0xe39f1fce
   140016c76:	(bad)  
   140016c79:	int    0xfe
   140016c7b:	cmc    
   140016c7c:	ffreep st(1)
   140016c7e:	(bad)  
   140016c7f:	out    dx,al
   140016c80:	pop    rsi
   140016c81:	sbb    cl,BYTE PTR [rdi-0x1b4ae478]
   140016c87:	ror    BYTE PTR [rsi+rsi*1+0x45],cl
   140016c8b:	adc    edx,DWORD PTR [rbp+rcx*4-0x6f]
   140016c8f:	outs   dx,BYTE PTR ds:[rsi]
   140016c90:	jno    0x140016c5a
   140016c92:	jg     0x140016c8c
   140016c94:	enter  0xa117,0xde
   140016c98:	rex.WRB push r15
   140016c9a:	jbe    0x140016cf6
   140016c9c:	shl    bl,0x19
   140016c9f:	(bad)  
   140016ca0:	std    
   140016ca1:	push   rsp
   140016ca2:	in     eax,0xdd
   140016ca4:	imul   edi,DWORD PTR [rdi-0x1],0xe63f6fb4
   140016cab:	add    edx,ecx
   140016cad:	jmp    0x140016ce0
   140016caf:	(bad)  
   140016cb0:	jo     0x140016c9c
   140016cb2:	sbb    BYTE PTR [rcx],dh
   140016cb4:	fisubr DWORD PTR [rdx-0x13f4843]
   140016cba:	push   rbx
   140016cbb:	sar    BYTE PTR [rdi],1
   140016cbd:	sti    
   140016cbe:	cld    
   140016cbf:	mov    bh,0x7d
   140016cc1:	mov    ecx,DWORD PTR [rax-0x14]
   140016cc4:	jmp    0x15ed1bc0c
   140016cc9:	rex.X
   140016cca:	fs adc eax,0xef3b394c
   140016cd0:	retf   0x2b24
   140016cd3:	jg     0x140016c76
   140016cd5:	clc    
   140016cd6:	repz pop rcx
   140016cd8:	and    BYTE PTR [rdx+0x74],cl
   140016cdb:	ds (bad) 
   140016cdd:	xor    cl,bh
   140016cdf:	xchg   esi,eax
   140016ce0:	mov    fs,edx
   140016ce2:	mov    bl,0x6b
   140016ce4:	(bad)  
   140016ce5:	and    eax,0x2638b9aa
   140016cea:	xchg   DWORD PTR [rbx],ecx
   140016cec:	(bad)  
   140016ced:	(bad)  
   140016cee:	mov    ah,BYTE PTR [rdx+0x15]
   140016cf1:	outs   dx,DWORD PTR ds:[rsi]
   140016cf2:	ret    
   140016cf3:	mov    esi,0xcd149216
   140016cf8:	cmp    al,0x41
   140016cfa:	pop    rdx
   140016cfb:	push   rdx
   140016cfc:	stos   DWORD PTR es:[rdi],eax
   140016cfd:	sbb    al,0x93
   140016cff:	and    ch,al
   140016d01:	pop    rdx
   140016d02:	add    al,0x36
   140016d04:	fist   WORD PTR [rdi-0x42]
   140016d07:	mov    fs,WORD PTR [rcx]
   140016d09:	sub    al,0x39
   140016d0b:	(bad)  
   140016d0c:	pop    rcx
   140016d0d:	add    ebp,DWORD PTR [rax]
   140016d0f:	imul   BYTE PTR [rcx+0x69829123]
   140016d15:	ss pop rdx
   140016d17:	mov    al,0x20
   140016d19:	fst    QWORD PTR [rbx+0x16]
   140016d1c:	push   rax
   140016d1d:	int    0x8a
   140016d1f:	and    edx,DWORD PTR [rcx]
   140016d21:	je     0x140016d85
   140016d23:	(bad)
   140016d26:	mov    ecx,0x72d69927
   140016d2b:	pop    rax
   140016d2c:	rex.RX (bad) 
   140016d2e:	cdq    
   140016d2f:	fidivr WORD PTR [rcx+0x16393d74]
   140016d35:	movabs eax,ds:0xecf91d53293d1f64
   140016d3e:	imul   edx,DWORD PTR [rax],0x29671287
   140016d44:	xlat   BYTE PTR ds:[rbx]
   140016d45:	movabs al,ds:0xcd2c72e769191f99
   140016d4e:	rex.WX jns 0x140016dc1
   140016d51:	xchg   ebp,eax
   140016d52:	(bad)  
   140016d53:	(bad)  
   140016d54:	rex push rcx
   140016d56:	push   rdx
   140016d57:	cmp    DWORD PTR [rbx+rdi*2],ebx
   140016d5a:	(bad)  [rbp-0x3febcc61]
   140016d60:	loope  0x140016dad
   140016d62:	lahf   
   140016d63:	(bad)  
   140016d64:	out    0x9b,eax
   140016d66:	(bad)  
   140016d67:	jno    0x140016d73
   140016d69:	(bad)  
   140016d6a:	fsub   st,st(0)
   140016d6c:	rex.WR (bad) 
   140016d6e:	xchg   ebp,eax
   140016d6f:	(bad)  
   140016d70:	and    al,0x31
   140016d72:	lea    ebx,[rax-0x2f8a9cf7]
   140016d78:	mov    cl,0x5a
   140016d7a:	lahf   
   140016d7b:	and    al,0xf5
   140016d7d:	nop
   140016d7e:	or     dl,al
   140016d80:	sbb    BYTE PTR [rcx-0x7a056566],ch
   140016d86:	test   eax,0xeecedf73
   140016d8c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016d8d:	jae    0x140016d7b
   140016d8f:	sahf   
   140016d90:	fwait
   140016d91:	jb     0x140016e05
   140016d93:	rcl    DWORD PTR [rax+0x2c9b5382],cl
   140016d99:	and    al,0x85
   140016d9b:	adc    al,BYTE PTR [rbx+0x310b22da]
   140016da1:	(bad)  
   140016da2:	retf   
   140016da3:	(bad)  
   140016da4:	push   rdi
   140016da5:	jl     0x140016d89
   140016da7:	retf   
   140016da8:	test   DWORD PTR [rax+0x35f509bf],0x3aa10e68
   140016db2:	add    DWORD PTR [rdi-0x28fd4900],edi
   140016db8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016db9:	xchg   esi,eax
   140016dba:	(bad)  
   140016dbb:	shr    DWORD PTR [rsi+0x7e6e7243],0x86
   140016dc2:	add    eax,0xaf935059
   140016dc7:	(bad)  
   140016dc8:	mov    ebx,0x92e86fe1
   140016dcd:	and    BYTE PTR [rdi+0x8ac8079],cl
   140016dd3:	rex.WRX or r15,rdi
   140016dd6:	cmp    edx,DWORD PTR [rcx+0x3074237d]
   140016ddc:	es std 
   140016dde:	mov    esi,0x9defb259
   140016de3:	mov    dh,0x0
   140016de5:	push   0xffffffffd12cb6c7
   140016dea:	adc    cl,dl
   140016dec:	(bad)  
   140016ded:	push   rdx
   140016dee:	(bad)  
   140016def:	fcmovne st,st(0)
   140016df1:	add    BYTE PTR [rbp+0x19],bl
   140016df4:	sti    
   140016df5:	cli    
   140016df6:	jmp    0x15eb14772
   140016dfb:	sbb    eax,0x67b7932a
   140016e00:	mul    BYTE PTR [r10-0x629d6bd8]
   140016e07:	ss jg  0x140016e47
   140016e0a:	movabs ds:0x951643c19a68065a,al
   140016e13:	test   QWORD PTR [r10],r12
   140016e16:	jns    0x140016e4d
   140016e18:	movabs ds:0x8cafe584f371a22c,al
   140016e21:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016e22:	stc    
   140016e23:	movabs al,ds:0xf4ffdaa4004bb2c5
   140016e2c:	xchg   r9,rax
   140016e2e:	test   eax,0x15397024
   140016e33:	jge    0x140016e51
   140016e35:	sub    eax,0x576c8248
   140016e3a:	stos   DWORD PTR es:[rdi],eax
   140016e3b:	add    eax,0x4d7b97c2
   140016e40:	test   al,0x26
   140016e42:	test   eax,0x8781a8
   140016e47:	and    al,0x59
   140016e49:	cli    
   140016e4a:	sbb    al,0xa5
   140016e4c:	fcomp  DWORD PTR [rax]
   140016e4e:	(bad)  
   140016e4f:	and    ch,ah
   140016e51:	add    esi,DWORD PTR [rdx+0x28]
   140016e54:	rex.RX mov ebx,0xc5b9083c
   140016e5a:	mov    ebp,0x993cbb18
   140016e5f:	add    ebp,DWORD PTR [rax]
   140016e61:	sub    BYTE PTR [rcx+0x34],ah
   140016e64:	sbb    ebp,DWORD PTR es:[rsi+0xa]
   140016e68:	(bad)
   140016e6b:	in     eax,dx
   140016e6c:	cmp    ah,al
   140016e6e:	xchg   esi,eax
   140016e6f:	xor    al,ah
   140016e71:	xchg   ebp,eax
   140016e72:	rex.WRXB jge 0x140016ee6
   140016e75:	mov    bh,0x9a
   140016e77:	(bad)  
   140016e78:	adc    al,0x8d
   140016e7a:	sbb    al,BYTE PTR [rbx-0x4df6044f]
   140016e80:	xchg   edi,eax
   140016e81:	xchg   ecx,eax
   140016e82:	adc    BYTE PTR [rax+0x139c1acd],bl
   140016e88:	pop    rdx
   140016e89:	pop    rcx
   140016e8a:	pop    rax
   140016e8b:	leave  
   140016e8c:	jo     0x140016eb3
   140016e8e:	shl    BYTE PTR [rbx+rcx*8-0x229538ac],1
   140016e95:	jae    0x140016f13
   140016e97:	mov    ah,0xc5
   140016e99:	shl    esi,0x9d
   140016e9c:	in     al,dx
   140016e9d:	popf   
   140016e9e:	fwait
   140016e9f:	jo     0x140016e9e
   140016ea1:	retf   0xeb09
   140016ea4:	push   rbp
   140016ea5:	rex.WRXB push r13
   140016ea7:	push   rdi
   140016ea8:	pop    rax
   140016ea9:	rex.RX push rsi
   140016eab:	rex.WR sub rax,0xffffffff88c41482
   140016eb1:	(bad)  
   140016eb2:	rex.X pop rdx
   140016eb4:	(bad)  
   140016eb5:	int3   
   140016eb6:	(bad)  
   140016eb7:	cld    
   140016eb8:	sar    DWORD PTR [rdi-0x7],1
   140016ebb:	(bad)  
   140016ebc:	mov    eax,0x8d7ee7f7
   140016ec1:	in     eax,dx
   140016ec2:	clc    
   140016ec3:	sbb    dl,BYTE PTR [rbx-0x41]
   140016ec6:	loop   0x140016e71
   140016ec8:	jnp    0x140016ecc
   140016eca:	(bad)  [rbx]
   140016ecc:	loope  0x140016eaf
   140016ece:	sbb    DWORD PTR [rsi-0x3c38b613],0xffffff97
   140016ed5:	rex.WRX cdqe 
   140016ed7:	push   rsi
   140016ed8:	adc    eax,0x55c173bb
   140016edd:	(bad)  
   140016ede:	(bad)  
   140016edf:	jae    0x140016f29
   140016ee1:	in     eax,0x90
   140016ee3:	or     dl,BYTE PTR [rax+0x391e7c0a]
   140016ee9:	xor    eax,0xd0f4225e
   140016eee:	and    eax,0x4292ee41
   140016ef3:	push   0x251ef5b3
   140016ef8:	add    dl,BYTE PTR [rip+0xc711f61]        # 0x14c728e5f
   140016efe:	add    eax,0xdb030855
   140016f03:	or     DWORD PTR [rbp+0x5a],esp
   140016f06:	fs loope 0x140016f08
   140016f09:	lods   eax,DWORD PTR ds:[rsi]
   140016f0a:	ficom  WORD PTR [rbx+rdx*2+0x4]
   140016f0e:	rex int 0x23
   140016f11:	rol    DWORD PTR [rdx+rdx*8-0x7a],cl
   140016f15:	xor    bl,0xfe
   140016f18:	jmp    0x140016f19
   140016f1a:	(bad)  
   140016f1b:	or     cl,BYTE PTR [rbx-0x9b0e392]
   140016f21:	in     eax,dx
   140016f22:	(bad)  
   140016f23:	rex.B sbb al,0x3c
   140016f26:	sbb    edi,DWORD PTR [rbx-0x63]
   140016f29:	or     DWORD PTR [rsi-0x51a90b4e],edi
   140016f2f:	repnz push rbx
   140016f31:	sub    ecx,DWORD PTR [rax]
   140016f33:	sub    cl,BYTE PTR [rdx+0x4b853460]
   140016f39:	mov    ds,WORD PTR [r13+0x12f28529]
   140016f40:	xchg   esp,eax
   140016f41:	push   rbp
   140016f42:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016f43:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016f44:	hlt    
   140016f45:	xchg   esi,eax
   140016f46:	jg     0x140016fc1
   140016f48:	xlat   BYTE PTR ds:[rbx]
   140016f49:	rex.WR cmp BYTE PTR [rdi],r12b
   140016f4c:	jbe    0x140016f2b
   140016f4e:	gs push rax
   140016f50:	push   rdi
   140016f51:	jo     0x140016f56
   140016f53:	xor    DWORD PTR [rcx],edx
   140016f55:	test   BYTE PTR [rcx-0x57],bl
   140016f58:	fs test eax,0x417afe2b
   140016f5e:	mov    edx,DWORD PTR [rsi-0x1f4def59]
   140016f64:	(bad)  
   140016f65:	cmp    ax,0x13e5
   140016f69:	data16 xor dl,BYTE PTR gs:[rsi-0x6a]
   140016f6e:	pop    rdx
   140016f6f:	mov    es,WORD PTR [rax]
   140016f71:	cmp    ebp,edx
   140016f73:	mov    bh,0x28
   140016f75:	adc    BYTE PTR [rdx+0x65a023],cl
   140016f7b:	(bad)  
   140016f7c:	loop   0x140016f51
   140016f7e:	outs   dx,BYTE PTR ds:[rsi]
   140016f7f:	push   rcx
   140016f80:	xchg   edx,eax
   140016f81:	ja     0x140016f17
   140016f83:	popf   
   140016f84:	test   BYTE PTR [rdx],dh
   140016f86:	add    al,BYTE PTR [rsi+0x29ca4628]
   140016f8c:	es (bad) 
   140016f8e:	and    BYTE PTR [rdx-0x12],ch
   140016f91:	rex jbe 0x140016fc9
   140016f94:	repnz mov ah,0xca
   140016f97:	retf   0x5aca
   140016f9a:	movabs ds:0x529c201fb5b7001,eax
   140016fa3:	lock (bad) 
   140016fa5:	jle    0x140016f90
   140016fa7:	repz (bad) 
   140016fa9:	lahf   
   140016faa:	cld    
   140016fab:	(bad)  
   140016fac:	jg     0x140016f99
   140016fae:	ret    0x5e64
   140016fb1:	fwait
   140016fb2:	out    0xca,al
   140016fb4:	(bad)  
   140016fb5:	and    al,BYTE PTR [rdx+0x29]
   140016fb8:	cmp    al,0x29
   140016fba:	add    eax,0x6be6d63f
   140016fbf:	mov    cl,0x5a
   140016fc1:	adc    bl,ch
   140016fc3:	and    edx,esp
   140016fc5:	test   eax,0x4d67ffe5
   140016fca:	(bad)  
   140016fcb:	movabs eax,ds:0xd1c226696faac15b
   140016fd4:	lea    esp,[rip+0xfffffffff38745cb]        # 0x13388b5a5
   140016fda:	jns    0x140016fc1
   140016fdc:	push   rbp
   140016fdd:	rex.WRB push r13
   140016fdf:	jge    0x140016ff2
   140016fe1:	rex.WXB sub al,0x20
   140016fe4:	imul   esi,DWORD PTR [rcx+0x4d],0xcc885d31
   140016feb:	js     0x140016fa6
   140016fed:	cli    
   140016fee:	and    BYTE PTR [rcx+0x5eb0947d],ah
   140016ff4:	lock mov edi,esp
   140016ff7:	pop    rbx
   140016ff8:	lea    esi,es:[rax]
   140016ffb:	lods   eax,DWORD PTR ds:[rsi]
   140016ffc:	loopne 0x140016ff8
   140016ffe:	lea    ebx,[rbx]
   140017000:	pop    rsp
   140017001:	mov    edx,0x1c9c33e7
   140017006:	pop    rdi
   140017007:	out    0xf8,eax
   140017009:	(bad)  
   14001700a:	div    DWORD PTR [rcx-0x31da1081]
   140017010:	outs   dx,DWORD PTR ds:[rsi]
   140017011:	lods   eax,DWORD PTR ds:[rsi]
   140017012:	push   0xffffffffdd5ecb5c
   140017017:	xor    ebx,esi
   140017019:	sub    eax,0x96cf75db
   14001701e:	outs   dx,DWORD PTR ds:[rsi]
   14001701f:	fldcw  WORD PTR [rsi+0x441ff702]
   140017025:	out    dx,al
   140017026:	ficom  WORD PTR [rdi]
   140017028:	(bad)  
   140017029:	fmul   DWORD PTR [rbx]
   14001702b:	in     al,dx
   14001702c:	rex.WR xchg rsp,rax
   14001702e:	mov    ebp,0x23af88ed
   140017033:	repz std 
   140017035:	ficom  WORD PTR [rax*2-0x44a862a2]
   14001703c:	xor    al,0xe3
   14001703e:	pop    rbx
   14001703f:	adc    edi,esi
   140017041:	fimul  WORD PTR [rdx]
   140017043:	jo     0x14001709d
   140017045:	scas   eax,DWORD PTR es:[rdi]
   140017046:	movabs al,ds:0x7435fa0e84714def
   14001704f:	imul   ebp,eax,0x32
   140017052:	repnz loopne 0x140017009
   140017055:	cdq    
   140017056:	fstp   st(4)
   140017058:	in     al,0x1d
   14001705a:	pop    rsi
   14001705b:	jg     0x1400170a0
   14001705d:	fidiv  DWORD PTR [rdx]
   140017060:	pop    rdx
   140017061:	imul   edx,DWORD PTR [rcx+0x79f21f50],0x74dbd106
   14001706b:	ja     0x1400170d2
   14001706d:	(bad)  
   14001706e:	enter  0x3232,0x88
   140017072:	xchg   esp,eax
   140017073:	(bad)  
   140017074:	pushf  
   140017075:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017076:	rex.RX mov ebp,0x498e4208
   14001707c:	(bad)  
   14001707d:	fs sbb eax,0xa2100a33
   140017083:	or     al,0xec
   140017085:	cmp    eax,0x85f46b62
   14001708a:	fsub   QWORD PTR [rsi-0x6753a6d6]
   140017090:	push   rcx
   140017091:	add    ecx,ebx
   140017093:	js     0x1400170a2
   140017095:	push   0xffffffffa2c798a0
   14001709a:	sbb    BYTE PTR [rsi],dh
   14001709c:	test   DWORD PTR [rsi+0x64],edi
   14001709f:	pop    rdx
   1400170a0:	or     eax,0x61252611
   1400170a5:	(bad)  
   1400170a6:	test   QWORD PTR [r10],r14
   1400170a9:	sub    DWORD PTR [rdi],esp
   1400170ab:	shl    BYTE PTR [rip+0x4738628e],0x52        # 0x18739d340
   1400170b2:	rex.X imul ebx,DWORD PTR [rsi-0x66],0x2c06cf51
   1400170ba:	fldenv [rbx]
   1400170bc:	rex.WB jle 0x1400170f6
   1400170bf:	fwait
   1400170c0:	imul   edi,DWORD PTR [rsi-0xcb109de],0xdc2c746f
   1400170ca:	jbe    0x140017148
   1400170cc:	or     ecx,DWORD PTR [rcx+0x3289908e]
   1400170d2:	in     al,0xfe
   1400170d4:	retf   
   1400170d5:	push   cx
   1400170d7:	push   rdx
   1400170d8:	jno    0x140017119
   1400170da:	xor    BYTE PTR [rcx-0x72],ah
   1400170dd:	cdq    
   1400170de:	movabs ds:0x2d31acebb24a4d49,eax
   1400170e7:	scas   eax,DWORD PTR es:[rdi]
   1400170e8:	xchg   esi,eax
   1400170e9:	out    dx,eax
   1400170ea:	jge    0x140017140
   1400170ec:	imul   DWORD PTR [rdi-0x72e76227]
   1400170f2:	rex.WRXB
   1400170f3:	rex.X
   1400170f4:	es (bad) 
   1400170f6:	(bad)  
   1400170f8:	cmp    al,0x79
   1400170fa:	neg    ebx
   1400170fc:	xchg   BYTE PTR [rdx],al
   1400170fe:	js     0x1400170f9
   140017100:	push   rdi
   140017101:	pop    rdi
   140017102:	fdivr  st(7),st
   140017104:	(bad)  
   140017106:	push   rcx
   140017107:	push   rax
   140017108:	or     DWORD PTR [rcx+0x5b],ecx
   14001710b:	(bad)  
   14001710c:	cwde   
   14001710d:	jb     0x1400170c6
   14001710f:	rol    esp,cl
   140017111:	push   rax
   140017112:	sbb    DWORD PTR [rdx+0x1c],esi
   140017115:	stos   BYTE PTR es:[rdi],al
   140017116:	xchg   esi,eax
   140017117:	jmp    0x1afa220a3
   14001711c:	movsxd ebp,ebp
   14001711e:	sar    BYTE PTR [rbx],0x41
   140017121:	(bad)  
   140017122:	(bad)  
   140017123:	je     0x140017133
   140017125:	out    0x2,eax
   140017127:	stos   DWORD PTR es:[rdi],eax
   140017128:	js     0x1400170b6
   14001712a:	stos   BYTE PTR es:[rdi],al
   14001712b:	rol    bh,cl
   14001712d:	imul   sil
   140017130:	push   rsp
   140017131:	adc    eax,0x47e0b689
   140017136:	lahf   
   140017137:	sub    al,0xab
   140017139:	test   al,0x58
   14001713b:	clc    
   14001713c:	shr    BYTE PTR [rbx-0x16],1
   14001713f:	adc    DWORD PTR [rdi+0x2dba581a],0xecbc6aa8
   140017149:	(bad)  
   14001714a:	add    al,0xc4
   14001714c:	rex.XB xor ebp,DWORD PTR [r15-0x28]
   140017150:	lahf   
   140017151:	(bad)  
   140017152:	jno    0x140017110
   140017154:	mov    esi,0xfbb2bc1b
   140017159:	pop    rax
   14001715a:	ret    
   14001715b:	fs ja  0x140017120
   14001715e:	fisttp DWORD PTR [rax]
   140017160:	jge    0x14001716e
   140017162:	leave  
   140017163:	(bad)  
   140017164:	rex.WXB push r14
   140017166:	mov    ebx,0xe253a453
   14001716b:	jno    0x140017178
   14001716d:	(bad)  
   14001716e:	add    eax,0x11c5be8
   140017173:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017174:	sbb    eax,0x9685c042
   140017179:	rex.WX and cl,BYTE PTR [rdi]
   14001717c:	in     al,dx
   14001717d:	lods   al,BYTE PTR ds:[rsi]
   14001717e:	cwde   
   14001717f:	push   rsp
   140017180:	xchg   ecx,eax
   140017181:	mov    ebx,0x3e262b26
   140017186:	jo     0x1400171f1
   140017188:	(bad)  
   140017189:	xor    dh,BYTE PTR [rdi+0x3d]
   14001718c:	out    0xa7,eax
   14001718e:	sbb    eax,0xf8f28ddb
   140017193:	sbb    eax,0x6c8abcca
   140017198:	outs   dx,DWORD PTR ds:[rsi]
   140017199:	rex.RXB jl 0x1400171b1
   14001719c:	imul   esp,esi,0x500abe3d
   1400171a2:	mov    ebp,DWORD PTR [rcx]
   1400171a4:	test   DWORD PTR [rsi-0x44ef7acb],edi
   1400171aa:	hlt    
   1400171ab:	(bad)  
   1400171ac:	imul   eax,eax,0x2eb5a018
   1400171b2:	ds hlt 
   1400171b4:	movabs ds:0x2b4e1880ef7428bf,eax
   1400171bd:	or     BYTE PTR [rip+0xffffffffcfb6606a],al        # 0x10fb7d22d
   1400171c3:	in     eax,0x6e
   1400171c5:	mov    cs,WORD PTR [rsi-0x4c]
   1400171c8:	jo     0x1400171ef
   1400171ca:	(bad)  
   1400171cb:	push   rsi
   1400171cc:	adc    ecx,ebx
   1400171ce:	iret   
   1400171cf:	loope  0x140017175
   1400171d1:	rol    DWORD PTR [rdi+0x37],0x81
   1400171d5:	int3   
   1400171d6:	push   rax
   1400171d7:	jg     0x140017255
   1400171d9:	push   0xffffffff82ae673b
   1400171de:	xor    edi,DWORD PTR [rcx]
   1400171e0:	mov    bl,0x6c
   1400171e2:	mov    ebx,0xc28e6b21
   1400171e7:	repz add BYTE PTR [rcx],ch
   1400171ea:	add    DWORD PTR [rdx+riz*4+0x3f016214],ecx
   1400171f1:	cmp    bl,BYTE PTR [rsi*1+0x80c9fa1]
   1400171f8:	in     al,dx
   1400171f9:	jne    0x1400171ad
   1400171fb:	clc    
   1400171fc:	fldcw  WORD PTR [rsi]
   1400171fe:	(bad)  
   1400171ff:	imul   BYTE PTR [rdi]
   140017201:	xor    BYTE PTR [rdx],dh
   140017203:	or     ecx,DWORD PTR [rdi+0x69113e08]
   140017209:	sbb    DWORD PTR [rdx-0x69],esi
   14001720c:	or     al,0x67
   14001720e:	ror    DWORD PTR [rbp+0x14],cl
   140017211:	jns    0x1400171dc
   140017213:	rcr    BYTE PTR [rdi-0x402991d4],cl
   140017219:	(bad)  
   14001721a:	int    0xa3
   14001721c:	sar    BYTE PTR [rcx+0x20],cl
   14001721f:	(bad)  
   140017220:	cmp    bl,BYTE PTR [rbp-0x68]
   140017223:	rex.WX pop rsi
   140017225:	fisubr DWORD PTR [rbx+0x64]
   140017228:	fsub   QWORD PTR [rcx+rdi*4]
   14001722b:	(bad)  
   14001722c:	test   eax,0xbef4a8d8
   140017231:	enter  0x3816,0x93
   140017235:	(bad)  
   140017236:	push   rcx
   140017237:	leave  
   140017238:	sub    ebx,DWORD PTR [rbx+rax*1]
   14001723b:	and    eax,0x94106819
   140017240:	or     al,0x44
   140017242:	jb     0x140017293
   140017244:	ror    DWORD PTR [rsi+riz*1-0xdb38c9c],0x35
   14001724c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001724d:	(bad)  
   14001724e:	sub    BYTE PTR [r14+0x20],al
   140017252:	out    0x7d,al
   140017254:	add    eax,0x14c80586
   140017259:	mov    al,0x95
   14001725b:	xchg   bl,dl
   14001725d:	icebp  
   14001725e:	outs   dx,DWORD PTR ds:[rsi]
   14001725f:	out    dx,eax
   140017260:	stos   BYTE PTR es:[rdi],al
   140017261:	and    BYTE PTR [rdx+rdx*2-0x421f100],bl
   140017268:	xchg   ecx,eax
   140017269:	mov    ebp,0x7d3f75cf
   14001726e:	rex.RXB and r9d,DWORD PTR [r13+0x1a]
   140017272:	add    al,0x65
   140017274:	lock in eax,0x46
   140017277:	xchg   ebx,eax
   140017278:	push   rbp
   140017279:	xchg   BYTE PTR [rdi-0x40af29e9],al
   14001727f:	jge    0x140017290
   140017281:	sbb    bh,BYTE PTR [rdi]
   140017283:	xchg   DWORD PTR [rsi+0x20],esi
   140017286:	mov    DWORD PTR [rdx],0x61cfc395
   14001728c:	retf   
   14001728d:	cmp    DWORD PTR [rbp+rbx*2+0x2aa858a3],esi
   140017294:	hlt    
   140017295:	and    DWORD PTR [rcx+0x1b],eax
   140017298:	(bad)
   14001729d:	neg    ecx
   14001729f:	mov    WORD PTR [rdx],?
   1400172a1:	adc    al,0x10
   1400172a3:	add    eax,esi
   1400172a5:	(bad)  
   1400172a6:	adc    BYTE PTR [rdi+0x23],r10b
   1400172aa:	jne    0x14001722f
   1400172ac:	mov    eax,0x1ac869b9
   1400172b1:	test   al,0x4
   1400172b3:	cdq    
   1400172b4:	push   rbp
   1400172b5:	in     al,dx
   1400172b6:	sahf   
   1400172b7:	mov    ebx,0x7ad8f51b
   1400172bc:	add    ebx,DWORD PTR [rsi]
   1400172be:	cmp    dl,BYTE PTR [rbp-0x16]
   1400172c1:	ss loopne 0x140017321
   1400172c4:	mov    al,0x7
   1400172c6:	(bad)  
   1400172c7:	adc    dl,BYTE PTR [rbp-0x8c2c954]
   1400172cd:	push   rdi
   1400172ce:	(bad)  
   1400172cf:	rex.W outs dx,DWORD PTR ds:[rsi]
   1400172d1:	test   eax,0xe0210aa3
   1400172d6:	mov    al,0x38
   1400172d8:	cli    
   1400172d9:	rex.WXB cdqe 
   1400172db:	rex cmp eax,0xfdad5a83
   1400172e1:	jno    0x140017335
   1400172e3:	xchg   QWORD PTR [rdx-0x14],r8
   1400172e7:	cmp    ah,ah
   1400172e9:	fld    DWORD PTR [rip+0x2b2a7b4e]        # 0x16b2bee3d
   1400172ef:	jle    0x140017291
   1400172f1:	mov    ch,BYTE PTR [rip+0xc7c7b5e]        # 0x14c7dee55
   1400172f7:	fdivr  QWORD PTR [rcx-0x54968e2b]
   1400172fd:	out    0xe2,eax
   1400172ff:	mov    ah,0xe7
   140017301:	(bad)  
   140017302:	fidiv  DWORD PTR [rbx+0x71]
   140017305:	fidiv  DWORD PTR [rdx]
   140017307:	test   DWORD PTR [rcx-0x6cd21845],0x2f6fb95a
   140017311:	push   rdx
   140017312:	xor    eax,0x10eb334a
   140017317:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017318:	(bad)  
   140017319:	lea    esi,[rip+0x4356a4cd]        # 0x1835817ec
   14001731f:	(bad)  
   140017320:	stos   DWORD PTR es:[rdi],eax
   140017321:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017322:	movabs eax,ds:0x2bb491491856758a
   14001732b:	sbb    ebp,DWORD PTR [rdi+0x57]
   14001732e:	sar    DWORD PTR [rbp-0x71],0xf2
   140017332:	hlt    
   140017333:	addr32 idiv eax
   140017336:	(bad)  
   140017337:	lea    eax,[rdi]
   140017339:	cwde   
   14001733a:	(bad)  
   14001733b:	and    ah,al
   14001733d:	xchg   ecx,eax
   14001733e:	sub    BYTE PTR [rbx+rdx*8],ch
   140017341:	loop   0x14001736c
   140017343:	sbb    ah,BYTE PTR [rbx]
   140017345:	(bad)  
   140017346:	pop    rsp
   140017347:	jno    0x140017396
   140017349:	rex.WXB (bad) 
   14001734b:	(bad)  
   14001734c:	or     al,0x72
   14001734e:	push   rsi
   14001734f:	xor    DWORD PTR [rcx-0x7a],r12d
   140017353:	and    al,BYTE PTR [rax]
   140017355:	pop    rcx
   140017356:	rex.WXB mov WORD PTR [r11],cs
   140017359:	push   rax
   14001735a:	rcl    BYTE PTR [rsp+rcx*8],cl
   14001735d:	jmp    0x11503cd14
   140017362:	jp     0x140017343
   140017364:	add    eax,0xbc9254d5
   140017369:	rex.WB (bad) 
   14001736b:	(bad)  
   14001736c:	cwde   
   14001736d:	lods   eax,DWORD PTR ds:[rsi]
   14001736e:	ret    
   14001736f:	mov    DWORD PTR [rdi],esi
   140017371:	or     al,0x7c
   140017373:	cmp    edx,esi
   140017375:	add    BYTE PTR [rsi+0xb2dacf],cl
   14001737b:	(bad)  
   14001737c:	call   0x198bc4c1f
   140017381:	ret    0xd91b
   140017384:	add    al,0xa7
   140017386:	sbb    eax,0xc58f7413
   14001738b:	test   al,0xea
   14001738d:	test   eax,0x4b5ccfb
   140017392:	pop    rcx
   140017393:	outs   dx,BYTE PTR ds:[rsi]
   140017394:	adc    edx,ecx
   140017396:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017397:	mov    ch,BYTE PTR [rbp+0xc4437cb]
   14001739d:	mov    dl,0xfb
   14001739f:	cmp    eax,0xa03031ee
   1400173a4:	xchg   esi,eax
   1400173a5:	rex.B test eax,0x2e72ba5a
   1400173ab:	(bad)  
   1400173ac:	(bad)  
   1400173ad:	xchg   edi,eax
   1400173ae:	xor    ebx,DWORD PTR [rax-0x6]
   1400173b1:	jb     0x140017362
   1400173b3:	cdq    
   1400173b4:	(bad)  
   1400173b5:	sub    ebp,DWORD PTR [rsi-0x1b6af72e]
   1400173bb:	cmp    ebp,DWORD PTR [rcx]
   1400173bd:	retf   0x233b
   1400173c0:	ins    BYTE PTR es:[rdi],dx
   1400173c1:	enter  0x9515,0x25
   1400173c5:	and    al,0x7f
   1400173c7:	out    0x48,al
   1400173c9:	jge    0x14001743e
   1400173cb:	fild   DWORD PTR [rsi-0x55c47fe]
   1400173d1:	xlat   BYTE PTR ds:[rbx]
   1400173d2:	jnp    0x140017451
   1400173d4:	out    dx,eax
   1400173d5:	out    dx,eax
   1400173d6:	push   rax
   1400173d7:	adc    esp,edx
   1400173d9:	cdq    
   1400173da:	rex (bad) 
   1400173dc:	xor    ecx,edi
   1400173de:	xchg   edi,eax
   1400173df:	(bad)  
   1400173e0:	lods   al,BYTE PTR ds:[rsi]
   1400173e1:	pop    rbp
   1400173e2:	mov    ah,0xb9
   1400173e4:	add    bl,dl
   1400173e6:	jp     0x140017373
   1400173e8:	(bad)
   1400173eb:	fdivr  st,st(7)
   1400173ed:	enter  0x6e79,0x1c
   1400173f1:	pop    rbp
   1400173f2:	movabs eax,ds:0x73522647c684ce72
   1400173fb:	rex.RXB jne 0x14001738c
   1400173fe:	xlat   BYTE PTR ds:[rbx]
   1400173ff:	rex.X loopne 0x1400173de
   140017402:	(bad)  
   140017403:	mov    WORD PTR [rbp-0x586a8fd3],gs
   140017409:	pop    rbp
   14001740a:	(bad)  
   14001740b:	fidiv  DWORD PTR [rbp-0x40]
   14001740e:	rex.RB mov r13b,0x7
   140017411:	fwait
   140017412:	cmp    BYTE PTR [rcx+rcx*8],dh
   140017415:	cs sub dl,0x90
   140017419:	mov    edx,0xe55c2ae9
   14001741e:	movabs eax,ds:0xd1ceb5002b6348f6
   140017427:	push   rcx
   140017428:	and    eax,0xea59c9bf
   14001742d:	mov    cl,0x17
   14001742f:	fcom   QWORD PTR [rax+rbp*4+0x25]
   140017433:	pop    rdx
   140017434:	js     0x140017408
   140017436:	and    eax,0x1e988b9f
   14001743b:	rex.WRX sahf 
   14001743d:	adc    BYTE PTR [rcx],dl
   14001743f:	scas   eax,DWORD PTR es:[rdi]
   140017440:	and    DWORD PTR [rbp-0x6f],esp
   140017443:	and    eax,0x722572c
   140017448:	(bad)  
   140017449:	mov    cl,BYTE PTR [rbx+rax*2+0x44]
   14001744d:	movsxd ebx,DWORD PTR [rdi-0x9ae12e8]
   140017453:	movsxd ecx,DWORD PTR [rdx]
   140017455:	push   rbp
   140017456:	movabs ds:0xe7818c55f5ad5e91,al
   14001745f:	movabs ds:0x92d4b3d6eb46bcf2,eax
   140017468:	xor    al,0x14
   14001746a:	push   rbx
   14001746b:	(bad)  
   14001746c:	sbb    eax,0xc5531ddf
   140017471:	sahf   
   140017472:	test   eax,0x2644f02e
   140017477:	jno    0x140017402
   140017479:	push   0xffffffff999aca60
   14001747e:	mov    edi,DWORD PTR [rcx+rdi*2]
   140017481:	addr32 (bad) 
   140017483:	scas   eax,DWORD PTR es:[rdi]
   140017484:	mov    esp,ebx
   140017486:	mov    ebx,0xf755b3d3
   14001748b:	fdiv   QWORD PTR [rbx+0x44ddb3dd]
   140017491:	cs (bad) 
   140017493:	cli    
   140017494:	xor    al,0xf
   140017496:	test   BYTE PTR [rdi],bl
   140017498:	(bad)  
   140017499:	mov    ecx,0xe7dafe2d
   14001749e:	(bad)  
   14001749f:	(bad)  
   1400174a0:	in     eax,dx
   1400174a1:	out    dx,eax
   1400174a2:	loop   0x14001743e
   1400174a4:	sbb    DWORD PTR [rdx],esp
   1400174a6:	xor    eax,0xdc6eb0c8
   1400174ab:	(bad)  
   1400174ac:	jne    0x1400174fd
   1400174ae:	leave  
   1400174af:	jmp    0x14001745a
   1400174b1:	pop    rcx
   1400174b2:	movsxd eax,DWORD PTR [rdx]
   1400174b4:	xchg   ecx,eax
   1400174b5:	leave  
   1400174b6:	pop    rsp
   1400174b7:	ret    
   1400174b8:	in     eax,dx
   1400174b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400174ba:	sti    
   1400174bb:	xchg   ebp,eax
   1400174bc:	xchg   esp,eax
   1400174bd:	add    ecx,DWORD PTR [rbp+0x2660a768]
   1400174c3:	fist   WORD PTR [rsp+rsi*8+0x30e792c8]
   1400174ca:	pop    rsi
   1400174cb:	(bad)  
   1400174cc:	mov    edx,0xf0cb1085
   1400174d1:	jge    0x14001754f
   1400174d3:	out    0x7c,al
   1400174d5:	mov    al,0x1
   1400174d7:	mov    esi,0x9e9db0f
   1400174dc:	scas   al,BYTE PTR es:[rdi]
   1400174dd:	xor    al,al
   1400174df:	icebp  
   1400174e0:	(bad)  
   1400174e1:	rex.WB
   1400174e2:	repz xor ebx,DWORD PTR [rsp+rdx*1]
   1400174e6:	push   rsi
   1400174e7:	adc    edx,ebx
   1400174e9:	int3   
   1400174ea:	rex.WRXB
   1400174eb:	rex push rcx
   1400174ed:	or     ch,ah
   1400174ef:	repnz repz out 0x59,eax
   1400174f3:	cdq    
   1400174f4:	cmp    DWORD PTR [rbx],ebx
   1400174f6:	and    bl,ch
   1400174f8:	stos   BYTE PTR es:[rdi],al
   1400174f9:	ss mov eax,0xed565904
   1400174ff:	rcr    cl,1
   140017501:	in     al,0xc6
   140017503:	ror    ah,cl
   140017505:	ret    
   140017506:	in     al,0xdd
   140017508:	(bad)  
   140017509:	(bad)  
   14001750a:	in     eax,0xeb
   14001750c:	sbb    ebx,DWORD PTR [rax+0x3f]
   14001750f:	push   rsp
   140017510:	and    edi,DWORD PTR [rcx+0x39]
   140017513:	mov    al,0x72
   140017515:	(bad)  
   140017516:	in     eax,0x3e
   140017518:	(bad)  
   140017519:	stc    
   14001751a:	test   DWORD PTR [rcx+rcx*4-0x7d],edi
   14001751e:	repnz sbb BYTE PTR [rdx+0x524986b4],al
   140017525:	mov    ecx,0xcc0898f1
   14001752a:	add    eax,0xdb71b712
   14001752f:	push   rax
   140017530:	add    BYTE PTR [rdi-0x41],ch
   140017533:	jb     0x1400175a3
   140017535:	out    0xaa,al
   140017537:	mov    al,0x27
   140017539:	cs (bad) 
   14001753b:	cli    
   14001753c:	(bad)  
   14001753d:	std    
   14001753e:	(bad)
   140017542:	cmp    bh,BYTE PTR [rax]
   140017544:	fisttp QWORD PTR [rax+rsi*4-0x66cca6c4]
   14001754b:	int    0x38
   14001754d:	jns    0x140017528
   14001754f:	jno    0x140017541
   140017551:	sar    bl,1
   140017553:	pop    rcx
   140017554:	popf   
   140017555:	sti    
   140017556:	ficom  DWORD PTR gs:[rbp-0x75]
   14001755a:	je     0x14001756c
   14001755c:	mov    edx,0x535ba2c0
   140017561:	xor    eax,0xe2ca0d0e
   140017566:	jo     0x1400175ad
   140017568:	(bad)  
   140017569:	and    dh,BYTE PTR [rbx-0x62cf653]
   14001756f:	xchg   esp,eax
   140017570:	in     eax,0xb2
   140017572:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017573:	rex.RX test eax,0x21dea09d
   140017579:	ds pop rcx
   14001757b:	jle    0x14001758e
   14001757d:	adc    esp,DWORD PTR [rax-0x4f]
   140017580:	(bad)  
   140017581:	mov    cl,0xdb
   140017583:	adc    ecx,DWORD PTR [rdi+0x33]
   140017586:	test   eax,0x9f50aaa0
   14001758b:	(bad)  
   14001758c:	mov    ebx,0xf1ae1caf
   140017591:	mov    BYTE PTR [rdi+0x1c],dh
   140017594:	ja     0x140017536
   140017596:	loop   0x140017609
   140017598:	imul   esp,DWORD PTR [rcx+0x9],0x2404b111
   14001759f:	(bad)  
   1400175a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400175a1:	xchg   edx,eax
   1400175a2:	mov    bl,BYTE PTR [rax-0x48]
   1400175a5:	rex.W pushf 
   1400175a7:	or     al,0x90
   1400175a9:	ror    BYTE PTR [rcx],1
   1400175ab:	pop    rsi
   1400175ac:	sub    al,0x6e
   1400175ae:	(bad)  
   1400175af:	jrcxz  0x140017560
   1400175b1:	movabs ds:0xab1f849d0e2912f0,eax
   1400175ba:	imul   ecx,DWORD PTR [rax+0x4d021aa3],0x48
   1400175c1:	rex.X (bad) 
   1400175c3:	jp     0x1400175e9
   1400175c5:	pop    rax
   1400175c6:	cdq    
   1400175c7:	outs   dx,BYTE PTR ds:[rsi]
   1400175c8:	pop    rdx
   1400175c9:	and    eax,0x4d3efa9
   1400175ce:	or     edx,eax
   1400175d0:	div    DWORD PTR [rsi]
   1400175d2:	movabs eax,ds:0x85951c0d0142cf42
   1400175db:	cmp    eax,0xc2fc988c
   1400175e0:	movabs eax,ds:0xd696c1a03d7d0c29
   1400175e9:	rcr    dh,cl
   1400175eb:	shr    BYTE PTR [rdx-0x20c58b4d],cl
   1400175f1:	loopne 0x1400175e9
   1400175f3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400175f4:	rex.WR jbe 0x140017625
   1400175f7:	push   rax
   1400175f8:	ins    DWORD PTR es:[rdi],dx
   1400175f9:	in     eax,dx
   1400175fa:	loope  0x1400175a6
   1400175fc:	(bad)  
   1400175fd:	or     DWORD PTR [rbx-0x6eae45d2],esp
   140017603:	push   0xffffffffffffff98
   140017605:	push   rsp
   140017606:	add    DWORD PTR [rcx-0x134e6cb3],0x67
   14001760d:	xchg   ebx,eax
   14001760e:	fistp  WORD PTR [rdx-0x3e96f1a6]
   140017614:	stc    
   140017615:	(bad)  
   140017616:	mov    ebx,DWORD PTR [rsi]
   140017618:	push   rax
   140017619:	ss mov esi,0x6ed54813
   14001761f:	data16 adc BYTE PTR [rdx+0x22],ah
   140017623:	add    dh,BYTE PTR [rip+0xffffffff849af826]        # 0xc49c6e4f
   140017629:	rex.B retf 0xa598
   14001762d:	mov    edx,0x67d25890
   140017632:	enter  0xfb93,0xb4
   140017636:	lock addr32 rex.B (bad) 
   14001763a:	and    cl,BYTE PTR [rsi]
   14001763c:	mov    ecx,0x13e48f03
   140017641:	xchg   ebx,eax
   140017642:	fnstcw WORD PTR [rdx+0x29]
   140017645:	test   DWORD PTR [rsi],eax
   140017647:	rex.WB pop r12
   140017649:	loop   0x140017613
   14001764b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001764c:	sub    DWORD PTR [rsi-0x42],edi
   14001764f:	(bad)  
   140017650:	rex.WX adc BYTE PTR [rbx+0x5d],sil
   140017654:	push   rbp
   140017655:	in     eax,dx
   140017656:	cdq    
   140017657:	imul   eax,DWORD PTR [rcx+0x679d9646],0xffffffbf
   14001765e:	rex.WRXB (bad) 
   140017660:	fwait
   140017661:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017662:	jbe    0x1400176c5
   140017664:	imul   ebp,DWORD PTR [rip+0x2ba61cca],0xc0b2460d        # 0x16ba79338
   14001766e:	cmp    al,BYTE PTR [rdi+0x5e]
   140017671:	(bad)  
   140017672:	adc    BYTE PTR [rsi],al
   140017674:	push   rdx
   140017675:	adc    DWORD PTR [rax],ebx
   140017677:	loop   0x140017672
   140017679:	(bad)  
   14001767a:	out    dx,eax
   14001767b:	leave  
   14001767c:	cld    
   14001767d:	jge    0x14001760a
   14001767f:	in     eax,0x17
   140017681:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017682:	movabs ds:0x3ea9cbd27bdf2afc,al
   14001768b:	and    DWORD PTR [rcx],ebp
   14001768d:	(bad)  
   14001768e:	sbb    DWORD PTR [rdx-0x44e5ecdc],esi
   140017694:	in     eax,dx
   140017695:	mov    DWORD PTR [rax+0x1b],eax
   140017698:	or     ah,al
   14001769a:	cmc    
   14001769b:	popf   
   14001769c:	stos   DWORD PTR es:[rdi],eax
   14001769d:	push   rbx
   14001769e:	mov    DWORD PTR [rdx],esi
   1400176a0:	sub    edx,DWORD PTR [rdi+0x19]
   1400176a3:	rex.WRB
   1400176a4:	rex sar BYTE PTR [rax+0x9a94651],1
   1400176ab:	(bad)  
   1400176ac:	test   BYTE PTR [rsi-0x4b3e9039],dh
   1400176b2:	cmp    eax,0x7aa7c9cf
   1400176b7:	out    dx,al
   1400176b8:	clc    
   1400176b9:	clc    
   1400176ba:	xchg   DWORD PTR [rcx-0x15],edi
   1400176bd:	loopne 0x140017696
   1400176bf:	imul   edi,DWORD PTR [rbx+0x5e2b5e35],0xf6cabc3d
   1400176c9:	out    dx,al
   1400176ca:	rep ins BYTE PTR es:[rdi],dx
   1400176cc:	iret   
   1400176cd:	cs jo  0x1400176c5
   1400176d0:	jp     0x1400176dd
   1400176d2:	out    dx,al
   1400176d3:	sbb    BYTE PTR [rcx-0x29d996c5],dl
   1400176d9:	rex.RXB jle 0x1400176db
   1400176dc:	fmul   QWORD PTR [rax+riz*8-0x7d8e29d6]
   1400176e3:	js     0x14001772c
   1400176e5:	adc    al,0xf0
   1400176e7:	lea    eax,[rdi+0x6a]
   1400176ea:	(bad)  
   1400176eb:	ror    DWORD PTR [rdx-0x7475d8e5],cl
   1400176f1:	rex.WX jg 0x14001776c
   1400176f4:	rex.W push rdi
   1400176f6:	sbb    eax,0xba9167e1
   1400176fb:	sahf   
   1400176fc:	and    BYTE PTR [rbx-0x3c9a5c7a],ch
   140017702:	(bad)  
   140017703:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017704:	cmp    ebx,eax
   140017706:	cdq    
   140017707:	or     dh,BYTE PTR [rcx-0x7c95c656]
   14001770d:	and    eax,0x242079e3
   140017712:	lahf   
   140017713:	int    0x1b
   140017715:	pop    rbx
   140017716:	ins    BYTE PTR es:[rdi],dx
   140017717:	xor    ebp,ebx
   140017719:	mov    ah,0x1e
   14001771b:	pop    rbp
   14001771c:	gs retf 
   14001771e:	xchg   esp,eax
   14001771f:	fnstcw WORD PTR [rdx+rsi*2-0x64863880]
   140017726:	or     al,0x11
   140017728:	xchg   edi,eax
   140017729:	push   rdx
   14001772a:	ss (bad) 
   14001772c:	icebp  
   14001772d:	data16 or al,0xf6
   140017730:	(bad)  
   140017731:	and    al,0x54
   140017733:	je     0x1400177ae
   140017735:	mov    edx,0x98fa598
   14001773a:	loop   0x1400176be
   14001773c:	xchg   ecx,eax
   14001773d:	imul   esi,DWORD PTR [rsi-0x134a43a2],0xffffffb2
   140017744:	lock retfw 0x6d
   140017749:	call   0x128ea8c09
   14001774e:	ins    DWORD PTR es:[rdi],dx
   14001774f:	jmp    0x15c680bff
   140017754:	rex.X
   140017755:	rex.R
   140017756:	rex.XB xchg DWORD PTR [r14],eax
   140017759:	test   eax,ebx
   14001775b:	pop    rbx
   14001775c:	popf   
   14001775d:	rex.R fistp WORD PTR [rbx+0x4d210dd9]
   140017764:	cmp    cl,BYTE PTR [rdi-0x49563361]
   14001776a:	jbe    0x140017715
   14001776c:	data16 jnp 0x1400177a7
   14001776f:	pop    rdi
   140017770:	adc    esi,DWORD PTR [rcx-0x64]
   140017773:	test   BYTE PTR [rdx-0x5deaf1ca],cl
   140017779:	fwait
   14001777a:	mov    ebp,DWORD PTR [rax-0x5a]
   14001777d:	retf   
   14001777e:	iret   
   14001777f:	out    dx,eax
   140017780:	adc    eax,0x68fabac0
   140017785:	(bad)  
   140017786:	in     eax,dx
   140017787:	es ins DWORD PTR es:[rdi],dx
   140017789:	xchg   ecx,eax
   14001778a:	sub    esi,ebx
   14001778c:	(bad)  
   14001778d:	xchg   edi,eax
   14001778e:	(bad)  
   14001778f:	(bad)  [rcx]
   140017791:	adc    esp,DWORD PTR [rax+0x619102b2]
   140017797:	xlat   BYTE PTR ds:[rbx]
   140017798:	test   BYTE PTR [rdx],cl
   14001779a:	(bad)  
   14001779b:	(bad)  
   14001779c:	xor    BYTE PTR [rdx],dh
   14001779e:	pop    rdx
   14001779f:	leave  
   1400177a0:	xchg   edi,eax
   1400177a1:	fmul   st(3),st
   1400177a3:	add    BYTE PTR ds:[rcx],bh
   1400177a6:	(bad)  
   1400177a7:	(bad)  
   1400177a8:	and    BYTE PTR [rax-0x474f294],al
   1400177ae:	rol    DWORD PTR [rax],0x7f
   1400177b1:	or     ecx,DWORD PTR [rdx+0x48]
   1400177b4:	jae    0x140017786
   1400177b6:	fldl2t 
   1400177b8:	ins    BYTE PTR es:[rdi],dx
   1400177b9:	lahf   
   1400177ba:	pop    rsp
   1400177bb:	out    dx,eax
   1400177bc:	(bad)  
   1400177bd:	cdq    
   1400177be:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400177bf:	movabs al,ds:0x3893103a6c2d6dc0
   1400177c8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400177c9:	out    0xa0,al
   1400177cb:	xor    bh,BYTE PTR [rdx+0x489482b6]
   1400177d1:	repz cmp ecx,DWORD PTR [rcx]
   1400177d4:	lods   al,BYTE PTR ds:[rsi]
   1400177d5:	and    DWORD PTR [rcx+0x3f246ae4],ebp
   1400177db:	and    ah,BYTE PTR [rbx-0x78877376]
   1400177e1:	push   rsp
   1400177e2:	stos   BYTE PTR es:[rdi],al
   1400177e3:	xchg   ecx,eax
   1400177e4:	(bad)  
   1400177e5:	(bad)  
   1400177e6:	rex.B clc 
   1400177e8:	repz loope 0x1400177f0
   1400177eb:	sub    DWORD PTR [rbx-0x6b],ecx
   1400177ee:	sub    esi,DWORD PTR [rsi+0x4b86f64a]
   1400177f4:	xchg   esi,eax
   1400177f5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400177f6:	mov    ebp,0x46cc44f4
   1400177fb:	(bad)  
   1400177fc:	adc    eax,DWORD PTR [rcx-0x75b91e32]
   140017802:	xchg   edi,eax
   140017803:	je     0x140017851
   140017805:	adc    DWORD PTR [rsi],ebp
   140017807:	jae    0x1400177a4
   140017809:	mov    bh,0xd
   14001780b:	add    eax,0x86f3a7e0
   140017810:	or     al,0x99
   140017812:	adc    rsp,QWORD PTR [r15+0xc3125a4]
   140017819:	(bad)  
   14001781b:	movsxd edi,DWORD PTR [rbx+0x5938b02e]
   140017821:	xor    bl,BYTE PTR [rcx+0x4be390cd]
   140017827:	mov    ah,0x9f
   140017829:	push   0x57fbf7b8
   14001782e:	jl     0x1400178a5
   140017830:	sti    
   140017831:	imul   eax,DWORD PTR [rdx-0x51],0x992e1e1c
   140017838:	mov    ebp,0xbe2e35ff
   14001783d:	stc    
   14001783e:	and    eax,0x2eecfc6e
   140017843:	xor    BYTE PTR [rbx],al
   140017845:	mov    cl,0xe4
   140017847:	movabs eax,ds:0x9bf5fd7234069ded
   140017850:	je     0x1400178c9
   140017852:	pop    rdi
   140017853:	rex.RX
   140017854:	fwait
   140017855:	xchg   esi,eax
   140017856:	jmp    0xd300df07
   14001785b:	out    0xca,eax
   14001785d:	(bad)  
   14001785e:	(bad)  
   14001785f:	fs out dx,eax
   140017861:	rcr    BYTE PTR [rip+0x246d6026],cl        # 0x1646ed88d
   140017867:	(bad)  
   140017868:	xlat   BYTE PTR ds:[rbx]
   140017869:	rol    DWORD PTR [rdi-0x1],1
   14001786c:	sub    DWORD PTR [rip+0x70b9ee4b],ebp        # 0x1b0bb66bd
   140017872:	(bad)  
   140017873:	(bad)  
   140017874:	ja     0x140017853
   140017876:	loopne 0x1400178a3
   140017878:	pop    rdi
   140017879:	jl     0x140017817
   14001787b:	ret    
   14001787c:	(bad)  
   14001787d:	out    dx,eax
   14001787e:	rex.B scas eax,DWORD PTR es:[rdi]
   140017880:	cmp    al,0xc1
   140017882:	(bad)  
   140017884:	fucomi st,st(4)
   140017886:	sbb    r13,QWORD PTR [r14-0x52]
   14001788a:	sub    al,0x5c
   14001788c:	sub    DWORD PTR [rbp+0x112b6e96],edx
   140017892:	and    eax,0x83c492c7
   140017897:	je     0x14001786a
   140017899:	es rex.RX
   14001789b:	rex.RX or r12b,BYTE PTR [rdx-0x70]
   14001789f:	push   rsi
   1400178a0:	popf   
   1400178a1:	and    BYTE PTR [rdx],dl
   1400178a3:	sub    eax,0x8a622dbe
   1400178a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400178a9:	rol    BYTE PTR [rip+0xffffffffe1f9704f],0x66        # 0x121fae8ff
   1400178b0:	mov    al,0xb
   1400178b2:	push   rsp
   1400178b3:	rex.X push rbp
   1400178b5:	sahf   
   1400178b6:	push   rdx
   1400178b7:	(bad)  
   1400178b8:	pop    QWORD PTR [rdx+rax*2]
   1400178bb:	mov    cl,0x49
   1400178bd:	in     eax,0xb3
   1400178bf:	fist   DWORD PTR [rcx+rdi*2+0x14fc9c94]
   1400178c6:	xchg   BYTE PTR [rax],dh
   1400178c8:	(bad)  
   1400178c9:	mov    WORD PTR [rcx-0x16d6039],gs
   1400178cf:	sbb    ch,BYTE PTR [rdx-0x3e5af060]
   1400178d5:	sub    cl,dh
   1400178d7:	loope  0x140017956
   1400178d9:	lea    ebp,[rbx-0x57cb6396]
   1400178df:	or     cl,BYTE PTR [rsi-0x79]
   1400178e2:	out    0x1c,al
   1400178e4:	push   rcx
   1400178e5:	xor    edx,DWORD PTR [rbp+rbx*1-0x48]
   1400178e9:	(bad)  
   1400178ea:	lea    ecx,[rsi+rdi*4-0xdadd61f]
   1400178f1:	and    eax,0xf69582c6
   1400178f6:	shl    BYTE PTR [rcx-0x64349b60],1
   1400178fc:	mov    bl,0xe2
   1400178fe:	rex.R push rbx
   140017900:	rex.WRXB rol BYTE PTR [r9+0x4a672f51],0xc2
   140017908:	xor    dh,BYTE PTR [rax-0x311e9c18]
   14001790e:	leave  
   14001790f:	or     cl,BYTE PTR [rcx]
   140017911:	fisub  WORD PTR [rsi+0x3f]
   140017914:	stc    
   140017915:	(bad)  
   140017916:	ss and al,0xc
   140017919:	fnstcw WORD PTR [rax]
   14001791b:	(bad)  
   14001791c:	jnp    0x140017977
   14001791e:	and    ch,bh
   140017920:	lock sbb esp,DWORD PTR [rdi]
   140017923:	rex.WX
   140017924:	rex.W push 0xffffffff92cff8ac
   14001792a:	lahf   
   14001792b:	fld    DWORD PTR [rax+0x3a]
   14001792e:	(bad)  
   14001792f:	icebp  
   140017930:	rex.WX in eax,dx
   140017932:	mov    dh,0xb2
   140017934:	shl    BYTE PTR [rax],cl
   140017936:	mov    di,0x2400
   14001793a:	rol    QWORD PTR [rax-0x693b1f94],1
   140017941:	shr    DWORD PTR [rdx],0x43
   140017944:	(bad)  
   140017945:	jae    0x1400179af
   140017947:	jo     0x14001799e
   140017949:	jb     0x1400179a3
   14001794b:	iret   
   14001794c:	(bad)  
   14001794e:	sbb    BYTE PTR [rsi-0x1c],ch
   140017951:	adc    al,ch
   140017953:	movabs al,ds:0x7dd1c789940c0616
   14001795c:	nop
   14001795d:	cli    
   14001795e:	add    eax,0x9c8268e6
   140017963:	rcr    edi,0x8c
   140017966:	pop    rsp
   140017967:	mov    cl,0xdb
   140017969:	mov    ebp,0xf680286d
   14001796e:	js     0x14001794f
   140017970:	pop    rbx
   140017971:	lea    esp,[rdx-0x371f9f74]
   140017977:	(bad)  
   140017978:	(bad)  
   140017979:	cmp    dh,BYTE PTR [rax]
   14001797b:	cmp    eax,0xed22108c
   140017980:	mov    edx,0x9d31c443
   140017985:	rex.WRB pop r9
   140017987:	pop    rdi
   140017988:	fbld   TBYTE PTR [rcx-0x9]
   14001798b:	lods   eax,DWORD PTR ds:[rsi]
   14001798c:	(bad)  
   14001798d:	fnstcw WORD PTR [rdx-0x4f1aa11]
   140017993:	sbb    edx,DWORD PTR [rsp+rcx*2+0x79]
   140017997:	imul   esi,ecx,0x7a5d8f16
   14001799d:	cwde   
   14001799e:	stc    
   14001799f:	jl     0x14001793c
   1400179a1:	xchg   ebx,eax
   1400179a2:	movsxd edx,eax
   1400179a4:	movabs al,ds:0x2d6feb9ed7c6eb6
   1400179ad:	test   eax,0xec7e1ccb
   1400179b3:	(bad)  
   1400179b4:	cmp    DWORD PTR [rcx-0x1e1f8315],edx
   1400179ba:	(bad)  
   1400179bb:	jo     0x14001796c
   1400179bd:	cmp    al,0x4e
   1400179bf:	neg    ecx
   1400179c1:	mov    ebx,0xe2ab0b4d
   1400179c6:	and    eax,0xe26dda12
   1400179cb:	outs   dx,DWORD PTR ds:[rsi]
   1400179cc:	cld    
   1400179cd:	out    0x84,eax
   1400179cf:	fdiv   st,st(0)
   1400179d1:	imul   edi,ecx,0x7c8f3b2c
   1400179d7:	cdq    
   1400179d8:	idiv   DWORD PTR [rax+riz*8-0x75]
   1400179dc:	jo     0x1400179ad
   1400179de:	rex.WRXB jae 0x1400179dd
   1400179e1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400179e2:	ffreep st(7)
   1400179e4:	(bad)  
   1400179e5:	push   rdi
   1400179e6:	(bad)  
   1400179e7:	cmp    eax,0xd9ec3d2e
   1400179ec:	fwait
   1400179ed:	jp     0x1400179fd
   1400179ef:	push   rdi
   1400179f0:	xchg   ecx,eax
   1400179f1:	fsub   DWORD PTR [rbp+0x2d8f0f42]
   1400179f7:	rex.R loop 0x140017a47
   1400179fa:	mov    al,0xbd
   1400179fc:	rex.WX pop rdx
   1400179fe:	rex.R
   1400179ff:	ror    DWORD PTR ds:[rbp-0x4b],0x35
   140017a04:	(bad)  
   140017a05:	(bad)  
   140017a06:	fld    DWORD PTR [rsi+rcx*8+0x4013822e]
   140017a0d:	jae    0x140017a88
   140017a0f:	rex.RX
   140017a10:	rex.X adc cl,cl
   140017a13:	test   DWORD PTR [rax-0x6afcdfc6],ecx
   140017a19:	pushf  
   140017a1a:	mov    bh,0xad
   140017a1c:	or     DWORD PTR [rcx-0x1c],esp
   140017a1f:	(bad)  
   140017a20:	xchg   esi,eax
   140017a21:	loope  0x1400179cd
   140017a23:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017a24:	(bad)  
   140017a25:	mov    al,0xd9
   140017a27:	rcl    BYTE PTR [rcx+rcx*1-0x3e],cl
   140017a2b:	mov    cl,BYTE PTR [rbp+0x3e7ab27c]
   140017a31:	xchg   edi,eax
   140017a32:	(bad)  
   140017a33:	xchg   DWORD PTR [rax+rdi*4-0x41f677b7],esi
   140017a3a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017a3b:	add    al,0x29
   140017a3d:	rex.WRB
   140017a3e:	rex.WB
   140017a3f:	sub    BYTE PTR cs:[rdx+0x68f8008e],ah
   140017a46:	mov    al,0x5f
   140017a48:	movabs ds:0x576a2df35b3557c3,eax
   140017a51:	pop    rcx
   140017a52:	xchg   BYTE PTR [rdx-0x4f],al
   140017a55:	in     al,0x91
   140017a57:	nop
   140017a58:	movabs ds:0x44474242467c462f,al
   140017a61:	mov    bl,0x69
   140017a63:	xchg   esi,eax
   140017a64:	mov    esi,0xac05763d
   140017a69:	or     BYTE PTR [rbx+0x2a4b4d64],cl
   140017a6f:	mov    eax,0x126945a8
   140017a74:	lods   al,BYTE PTR ds:[rsi]
   140017a75:	mov    bh,0x53
   140017a77:	in     al,0xdf
   140017a79:	or     edi,DWORD PTR fs:[rsi+0x16630969]
   140017a80:	sbb    DWORD PTR fs:[rdi-0x66],edi
   140017a84:	lods   al,BYTE PTR ds:[rsi]
   140017a85:	jbe    0x140017a60
   140017a87:	ja     0x140017a4c
   140017a89:	(bad)  
   140017a8a:	rex.WRB jg 0x140017a7a
   140017a8d:	repz pop rsp
   140017a8f:	(bad)  
   140017a90:	push   rdi
   140017a91:	je     0x140017ae5
   140017a93:	mov    dl,0xf6
   140017a95:	and    eax,0x8e09a9b2
   140017a9a:	out    0xfc,eax
   140017a9c:	mov    esp,DWORD PTR [rsp+rbx*8]
   140017a9f:	jrcxz  0x140017b09
   140017aa1:	ret    
   140017aa2:	adc    BYTE PTR [rax],ah
   140017aa4:	jne    0x140017a2c
   140017aa6:	loop   0x140017aba
   140017aa8:	cmp    DWORD PTR [rsp+rbp*8],edi
   140017aab:	and    DWORD PTR [rbp+0x7c],esp
   140017aae:	repnz outs dx,DWORD PTR ds:[rsi]
   140017ab0:	sbb    eax,0x65228239
   140017ab5:	mov    fs,WORD PTR [rax+0x64cc6499]
   140017abb:	movabs ds:0xb3be6070861a8f0e,al
   140017ac4:	adc    ecx,ecx
   140017ac6:	pop    rax
   140017ac7:	jb     0x140017ac9
   140017ac9:	fcom   QWORD PTR [rax-0x5645cf79]
   140017acf:	adc    edi,esp
   140017ad1:	(bad)  
   140017ad2:	add    eax,0x23ce6419
   140017ad7:	mov    bh,0x3
   140017ad9:	retf   
   140017ada:	fld    QWORD PTR [rbp-0x5e490891]
   140017ae0:	add    BYTE PTR [rsi],dl
   140017ae2:	push   rdi
   140017ae3:	pop    rdi
   140017ae4:	jno    0x140017b08
   140017ae6:	(bad)  
   140017ae7:	(bad)  
   140017ae8:	ss or  eax,0xe4008942
   140017aee:	fdiv   DWORD PTR [rcx-0x6]
   140017af1:	scas   eax,DWORD PTR es:[rdi]
   140017af2:	loopne 0x140017b05
   140017af4:	sub    DWORD PTR [rsi-0x569397f3],0xf99d8aea
   140017afe:	xlat   BYTE PTR cs:[rbx]
   140017b00:	add    ebx,DWORD PTR ds:[rbx+0xf]
   140017b04:	(bad)  
   140017b05:	mov    al,0xe4
   140017b07:	test   BYTE PTR [rax-0x9054376],bh
   140017b0d:	xor    ebx,edx
   140017b0f:	leave  
   140017b10:	jmp    0x140017b4e
   140017b12:	repnz (bad) 
   140017b14:	sti    
   140017b15:	jns    0x140017b15
   140017b17:	mov    bl,0x81
   140017b19:	rol    BYTE PTR [rsi-0x66],1
   140017b1c:	(bad)
   140017b20:	and    eax,0xe3d1ca74
   140017b25:	mov    edi,0x82d1d1c0
   140017b2a:	sti    
   140017b2b:	out    dx,eax
   140017b2c:	jp     0x140017ab6
   140017b2e:	mov    ebp,0x7fe78f7e
   140017b33:	out    0x7d,al
   140017b35:	ins    BYTE PTR es:[rdi],dx
   140017b36:	xor    eax,0x68a71017
   140017b3b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017b3c:	lods   al,BYTE PTR ds:[rsi]
   140017b3d:	cmp    esp,DWORD PTR [rbp+0x6f51ee9e]
   140017b43:	push   rdi
   140017b44:	int3   
   140017b45:	out    0x15,al
   140017b47:	repz jrcxz 0x140017ad9
   140017b4a:	jb     0x140017b40
   140017b4c:	fadd   QWORD PTR [rdi+0x6fdaf679]
   140017b52:	lock fsubp st(7),st
   140017b55:	outs   dx,BYTE PTR ds:[rsi]
   140017b56:	mov    eax,0xf34f03ef
   140017b5b:	fsubr  QWORD PTR [rdi]
   140017b5d:	out    dx,eax
   140017b5e:	icebp  
   140017b5f:	(bad)  
   140017b60:	sub    ecx,DWORD PTR [rdi+0x72]
   140017b63:	(bad)  
   140017b64:	mov    esi,0x9e27761d
   140017b69:	pop    rsi
   140017b6a:	sbb    eax,0x80b5b58b
   140017b6f:	rcr    BYTE PTR [rax-0x1d96d87b],cl
   140017b75:	ins    BYTE PTR es:[rdi],dx
   140017b76:	add    DWORD PTR [rsp+rbp*1-0x41],eax
   140017b7a:	cmp    eax,0x60bc8229
   140017b7f:	rex.R push rsi
   140017b81:	mov    eax,0x8c9658b8
   140017b86:	or     cl,cl
   140017b88:	sbb    al,BYTE PTR [rsi]
   140017b8a:	mov    cl,0x6
   140017b8c:	sbb    al,0x25
   140017b8e:	and    DWORD PTR [rsi-0x14],eax
   140017b91:	xor    edx,DWORD PTR [rbx+0x12]
   140017b94:	xchg   ecx,eax
   140017b95:	test   al,0xae
   140017b97:	clc    
   140017b98:	outs   dx,BYTE PTR ds:[rsi]
   140017b99:	sbb    esi,esi
   140017b9b:	(bad)  
   140017b9c:	in     al,0x87
   140017b9e:	out    0xe3,al
   140017ba0:	rex.RX jne 0x140017beb
   140017ba3:	xor    BYTE PTR [rcx+0x24],ah
   140017ba6:	ror    DWORD PTR [rsi+0x13],0xc6
   140017baa:	je     0x140017b39
   140017bac:	cmp    eax,0xa5f31ea0
   140017bb1:	lea    esp,[rdi-0x1bceb650]
   140017bb7:	and    ecx,DWORD PTR [rcx-0x7e]
   140017bba:	out    dx,al
   140017bbb:	adc    al,BYTE PTR [rcx+0x63]
   140017bbe:	loopne 0x140017bad
   140017bc0:	retf   
   140017bc1:	xchg   edi,eax
   140017bc2:	stc    
   140017bc3:	rcl    bl,cl
   140017bc5:	retf   0xcefe
   140017bc8:	cs push rbp
   140017bca:	push   rbp
   140017bcb:	jrcxz  0x140017b67
   140017bcd:	rex.WB pop r10
   140017bcf:	(bad)  
   140017bd0:	mov    bl,0xa2
   140017bd2:	push   0x1a
   140017bd4:	pop    rbx
   140017bd5:	xchg   esi,eax
   140017bd6:	int    0x59
   140017bd8:	(bad)  
   140017bd9:	jle    0x140017bca
   140017bdb:	stos   DWORD PTR es:[rdi],eax
   140017bdc:	ror    DWORD PTR [rbp+riz*4+0x890df54],0xcb
   140017be4:	adc    BYTE PTR [rdx-0x6],bh
   140017be7:	ds loopne 0x140017bbf
   140017bea:	(bad)  
   140017beb:	out    0x30,eax
   140017bed:	push   rbx
   140017bee:	(bad)
   140017bf2:	ror    dl,1
   140017bf4:	(bad)  
   140017bf5:	(bad)  
   140017bf6:	sub    BYTE PTR [rbx-0x5d],dh
   140017bf9:	js     0x140017bbe
   140017bfb:	imul   esi,DWORD PTR [rdx-0x69],0x90b23145
   140017c02:	mov    WORD PTR [rax+0x5ed8142],ss
   140017c08:	adc    DWORD PTR [rax+rax*2],ecx
   140017c0b:	ja     0x140017ba0
   140017c0d:	xor    bl,cl
   140017c0f:	mov    BYTE PTR [rax],ah
   140017c11:	pop    rbx
   140017c12:	(bad)  
   140017c13:	and    DWORD PTR [rsi+0x2f],eax
   140017c16:	rex.WB and BYTE PTR [r10],sil
   140017c19:	addr32 nop
   140017c1b:	cmc    
   140017c1c:	leave  
   140017c1d:	shl    BYTE PTR [rdi+0x62d840af],1
   140017c23:	movabs eax,ds:0xebda9a9a92c2aaf3
   140017c2c:	add    al,0xee
   140017c2e:	rex.RXB
   140017c2f:	repz sub ah,0x77
   140017c33:	pop    QWORD PTR [rdi+rsi*4-0x1c18824]
   140017c3a:	xchg   BYTE PTR [rsi+riz*2],ah
   140017c3d:	gs (bad) 
   140017c3f:	(bad)  
   140017c41:	or     al,0x67
   140017c43:	stc    
   140017c44:	cmp    al,0x23
   140017c46:	adc    BYTE PTR [rip+0xffffffffa6232cee],dh        # 0xe624a93a
   140017c4c:	mov    dl,0x78
   140017c4e:	or     DWORD PTR [rbx],esp
   140017c50:	rex.R xchg esp,eax
   140017c52:	scas   eax,DWORD PTR es:[rdi]
   140017c53:	ret    
   140017c54:	and    BYTE PTR [rdi-0x76],bh
   140017c57:	push   rsi
   140017c58:	fs push rsp
   140017c5a:	jrcxz  0x140017c22
   140017c5c:	(bad)  
   140017c5d:	mov    esi,0x286db2d
   140017c62:	adc    bh,ah
   140017c64:	and    eax,0x8cf43292
   140017c69:	xchg   esi,eax
   140017c6a:	fist   WORD PTR [rsp+rdx*8-0x5d]
   140017c6e:	mov    ah,0x53
   140017c70:	sbb    eax,0xdf7d1511
   140017c75:	mov    bl,0x5a
   140017c77:	lods   al,BYTE PTR ds:[rsi]
   140017c78:	(bad)  
   140017c7a:	test   eax,0xb96b5c59
   140017c7f:	jrcxz  0x140017c5a
   140017c81:	psllq  mm3,0xd1
   140017c85:	jmp    0x140017c3b
   140017c87:	jmp    0x140017c8e
   140017c89:	cmc    
   140017c8a:	leave  
   140017c8b:	xchg   esp,eax
   140017c8c:	out    0xc2,eax
   140017c8e:	jae    0x140017c78
   140017c90:	fisttp QWORD PTR [rsi-0x435c0b05]
   140017c96:	cli    
   140017c97:	jmp    0x140017c27
   140017c99:	jmp    0x140017d0a
   140017c9b:	(bad)  
   140017c9c:	mov    dl,0xe
   140017c9e:	imul   ebp,DWORD PTR [rsi+0x3c],0xfffffff5
   140017ca2:	jae    0x140017cc0
   140017ca4:	(bad)  
   140017ca5:	(bad)  
   140017ca6:	test   eax,0xbfd8e26
   140017cab:	or     eax,0x9f27f6f
   140017cb0:	(bad)  
   140017cb1:	scas   eax,DWORD PTR es:[rdi]
   140017cb2:	popf   
   140017cb3:	jrcxz  0x140017c91
   140017cb5:	jrcxz  0x140017cc4
   140017cb7:	rex.RXB
   140017cb8:	rex.RXB sub eax,0x3d172c20
   140017cbe:	retf   
   140017cbf:	mov    ch,0x22
   140017cc1:	rex.WRB iretq 
   140017cc3:	stos   BYTE PTR es:[rdi],al
   140017cc4:	ins    DWORD PTR es:[rdi],dx
   140017cc5:	fcomp  st(2)
   140017cc7:	popf   
   140017cc8:	jb     0x140017cb3
   140017cca:	adc    ecx,esp
   140017ccc:	repnz retf 
   140017cce:	rex.WRXB
   140017ccf:	repnz in al,dx
   140017cd1:	(bad)  
   140017cd2:	push   rsp
   140017cd3:	fdiv   st(7),st
   140017cd5:	icebp  
   140017cd6:	pop    rdi
   140017cd7:	loop   0x140017caa
   140017cd9:	movq   QWORD PTR [rsi-0x1ecf40a9],mm1
   140017ce0:	clc    
   140017ce1:	lea    eax,[rdi-0x1009ed5f]
   140017ce7:	fadd   DWORD PTR [rbx+0x6a]
   140017cea:	(bad)  
   140017ceb:	adc    eax,0xde6b57a0
   140017cf0:	test   BYTE PTR [rax],al
   140017cf2:	sbb    eax,0x60489568
   140017cf7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017cf8:	mov    eax,0x89266952
   140017cfd:	add    al,0xb4
   140017cff:	(bad)  
   140017d00:	ror    BYTE PTR [rbx+0x2160810d],cl
   140017d06:	(bad)  
   140017d07:	jb     0x140017cbc
   140017d09:	pop    rdx
   140017d0a:	adc    DWORD PTR [rbx-0x4b796cf4],esp
   140017d10:	mov    DWORD PTR [rdx-0x6d],esp
   140017d13:	and    al,BYTE PTR [rax+riz*4-0x4e]
   140017d17:	call   0x105c9fb61
   140017d1c:	(bad)  
   140017d1d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017d1e:	(bad)  
   140017d1f:	mov    WORD PTR [rbp+0x2f5b532c],es
   140017d25:	and    DWORD PTR [rcx-0x16],ebx
   140017d28:	pop    rsp
   140017d29:	cmp    ebp,DWORD PTR [rdi]
   140017d2b:	pop    rcx
   140017d2c:	(bad)  
   140017d2d:	jb     0x140017d80
   140017d2f:	push   rsp
   140017d30:	(bad)  
   140017d31:	(bad)  
   140017d32:	cld    
   140017d33:	(bad)  
   140017d34:	xchg   edx,eax
   140017d35:	rex.W (bad) 
   140017d37:	and    al,0x30
   140017d39:	stos   BYTE PTR es:[rdi],al
   140017d3a:	mov    ah,0xbd
   140017d3c:	popf   
   140017d3d:	sti    
   140017d3e:	xchg   ebx,eax
   140017d3f:	mov    edi,0xf73ccbfc
   140017d44:	in     eax,0xe7
   140017d46:	cmp    BYTE PTR [rcx],bh
   140017d48:	ds (bad) 
   140017d4a:	cmp    bl,BYTE PTR [rbx+0x3e67bde2]
   140017d50:	lahf   
   140017d51:	mov    bl,0xbd
   140017d53:	mov    ebp,0x839e7385
   140017d58:	jae    0x140017d55
   140017d5a:	and    BYTE PTR [rsi+0x266d9ded],cl
   140017d60:	xchg   ebx,eax
   140017d61:	sub    DWORD PTR [rbp+0x5d],edx
   140017d64:	xor    ebx,DWORD PTR [rdi-0x3242f233]
   140017d6a:	cmp    BYTE PTR [edi-0x27],bl
   140017d6e:	(bad)  
   140017d6f:	(bad)  
   140017d70:	xchg   ebx,eax
   140017d71:	sub    DWORD PTR [rdx-0x7799b32e],ecx
   140017d77:	cmp    BYTE PTR [rdx+0x4779c6ba],ch
   140017d7d:	mov    BYTE PTR [rdx-0x5bece451],cl
   140017d83:	nop
   140017d84:	pop    rsp
   140017d85:	sub    eax,0x69e82c3f
   140017d8a:	and    DWORD PTR [rcx+0x5f],eax
   140017d8d:	sub    al,0xb2
   140017d8f:	(bad)  
   140017d90:	rex.WRB
   140017d91:	rex.WXB
   140017d92:	rex.W
   140017d93:	rex.X (bad) 
   140017d95:	jne    0x140017dd8
   140017d97:	mov    dh,0xee
   140017d99:	jbe    0x140017d9e
   140017d9b:	push   rdx
   140017d9c:	mov    bh,0xb9
   140017d9f:	mov    ah,0xe4
   140017da1:	cwde   
   140017da2:	jae    0x140017d78
   140017da4:	rex.WRB popf 
   140017da6:	push   0x1b
   140017da8:	je     0x140017e0d
   140017daa:	ficomp DWORD PTR [rcx+0x4c0167dc]
   140017db0:	(bad)  
   140017db1:	(bad)  
   140017db2:	(bad)  
   140017db3:	leave  
   140017db4:	sbb    rbp,QWORD PTR [rbx]
   140017db7:	jmp    0x160408c4a
   140017dbc:	mov    ?,WORD PTR [rdx+0x3bd2484c]
   140017dc2:	rex.WX scas al,BYTE PTR es:[rdi]
   140017dc4:	and    al,0xb6
   140017dc6:	jrcxz  0x140017e00
   140017dc8:	leave  
   140017dc9:	pop    rsi
   140017dca:	out    dx,eax
   140017dcb:	adc    BYTE PTR [rsi],cl
   140017dcd:	int3   
   140017dce:	movabs ds:0x3b0a43570dbf8857,al
   140017dd7:	nop
   140017dd8:	fnsave [rcx]
   140017dda:	fcmovnb st,st(5)
   140017ddc:	xchg   ecx,eax
   140017ddd:	mov    DWORD PTR [rbx+0x7b],ecx
   140017de0:	push   rsi
   140017de1:	imul   edi,edi,0xbc1f7591
   140017de7:	nop    DWORD PTR [rbp-0x6d]
   140017deb:	adc    al,0x85
   140017ded:	(bad)  
   140017dee:	loop   0x140017e17
   140017df0:	movabs ds:0x28670009aef6efd,eax
   140017df9:	nop
   140017dfa:	sbb    BYTE PTR [rdi+0x4d74ef3c],al
   140017e00:	imul   edi,DWORD PTR [rbp*2-0x58e2c870],0x5d74d57c
   140017e0b:	rex.WRXB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017e0d:	addr32 mov ebx,0xa5e8e03e
   140017e13:	jmp    0x140017e51
   140017e15:	lock (bad) 
   140017e17:	jnp    0x140017e92
   140017e19:	imul   esi,ecx,0xb7046259
   140017e1f:	in     eax,dx
   140017e20:	jns    0x140017e20
   140017e22:	in     al,0x4b
   140017e24:	jl     0x140017e1b
   140017e26:	cld    
   140017e27:	rex.WXB hlt 
   140017e29:	fbld   TBYTE PTR [rbx]
   140017e2b:	rex.RX mov edx,0x47e61089
   140017e31:	add    al,0x7a
   140017e33:	(bad)  
   140017e34:	ins    DWORD PTR es:[rdi],dx
   140017e35:	out    dx,eax
   140017e36:	mov    bl,0x7f
   140017e38:	je     0x140017dbb
   140017e3a:	addr32 jle 0x140017ea0
   140017e3d:	(bad)  
   140017e3e:	stc    
   140017e3f:	mov    esi,DWORD PTR [rdi-0x7f]
   140017e42:	mov    esi,DWORD PTR [rbx+rbp*4-0x1700a722]
   140017e49:	rex.WX pop rsi
   140017e4b:	sar    BYTE PTR [rdx+0x19],0xe8
   140017e4f:	ret    0xbd9a
   140017e52:	sub    DWORD PTR [rcx],0x77
   140017e55:	cmp    al,0xb8
   140017e57:	(bad)  
   140017e58:	pop    rbx
   140017e59:	pop    rdi
   140017e5a:	jge    0x140017e6b
   140017e5c:	iret   
   140017e5d:	(bad)  
   140017e5e:	cld    
   140017e5f:	and    eax,0x55f03fae
   140017e64:	out    dx,al
   140017e65:	std    
   140017e66:	shr    BYTE PTR [rdi],0xd0
   140017e69:	pop    rsp
   140017e6a:	stc    
   140017e6b:	rex.RXB pop r12
   140017e6d:	jge    0x140017e5d
   140017e6f:	sti    
   140017e70:	mov    ecx,0x6ca3faf6
   140017e75:	popf   
   140017e76:	(bad)  [rsi+0x67]
   140017e79:	(bad)  
   140017e7a:	pop    rcx
   140017e7b:	loopne 0x140017ed5
   140017e7d:	mov    ah,0xd1
   140017e7f:	sbb    BYTE PTR [rax-0x37],ah
   140017e82:	rex.X outs dx,DWORD PTR ds:[rsi]
   140017e84:	cs rex.X adc al,0x45
   140017e88:	mov    ebp,0xc07a62e2
   140017e8d:	(bad)  
   140017e8e:	(bad)  
   140017e8f:	test   al,0x68
   140017e91:	mov    esi,0xb04a4840
   140017e96:	cmp    al,0x78
   140017e98:	sbb    esi,esp
   140017e9a:	lods   eax,DWORD PTR ds:[rsi]
   140017e9b:	add    DWORD PTR [rdi],r11d
   140017e9e:	or     DWORD PTR [rdx+0x867771e],edx
   140017ea4:	and    eax,DWORD PTR [rbx+0x4d]
   140017ea7:	push   rbx
   140017ea8:	and    DWORD PTR [rdx+0x4a],edx
   140017eab:	test   eax,0x3d9f865d
   140017eb0:	(bad)  
   140017eb1:	xor    al,0x67
   140017eb3:	(bad)  
   140017eb4:	sub    ebx,DWORD PTR [rbp-0x6f57c8c1]
   140017eba:	sbb    al,0x6a
   140017ebc:	push   rdx
   140017ebd:	rex.RB movabs ds:0x1e3632f41911d0f9,al
   140017ec7:	(bad)  
   140017ec8:	sahf   
   140017ec9:	(bad)  
   140017eca:	add    ebp,edi
   140017ecc:	jns    0x140017e5a
   140017ece:	idiv   DWORD PTR [rdi+riz*8-0x104511af]
   140017ed5:	mov    r14d,0xbcb3ccfc
   140017edb:	repnz ror BYTE PTR [rbx-0x44],cl
   140017edf:	clc    
   140017ee0:	ror    BYTE PTR [rbx+0x5c],cl
   140017ee3:	jle    0x140017ec8
   140017ee5:	or     eax,0xa115eb56
   140017eea:	out    dx,eax
   140017eeb:	push   rbx
   140017eec:	mov    dl,0x49
   140017eee:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017eef:	scas   al,BYTE PTR es:[rdi]
   140017ef0:	sbb    ebp,edx
   140017ef2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017ef3:	mov    dh,0x6e
   140017ef5:	rex.WRX push rbp
   140017ef7:	test   DWORD PTR [rdi-0x72],esi
   140017efa:	stc    
   140017efb:	(bad)  
   140017efc:	(bad)  
   140017efd:	rex.WRB pop r10
   140017eff:	in     al,0x73
   140017f01:	cmp    bl,BYTE PTR [rbx+0x36639ce1]
   140017f07:	lahf   
   140017f08:	loope  0x140017f66
   140017f0a:	(bad)
   140017f0d:	gs ss lahf 
   140017f10:	jrcxz  0x140017f3c
   140017f12:	iret   
   140017f13:	(bad)  
   140017f14:	(bad)  
   140017f15:	(bad)  
   140017f16:	sub    DWORD PTR cs:[rcx+0x55f069ba],ecx
   140017f1d:	int    0x74
   140017f1f:	ss rex.XB jl 0x140017ee8
   140017f23:	ins    BYTE PTR es:[rdi],dx
   140017f24:	ss ret 
   140017f26:	push   rdi
   140017f27:	adc    eax,0x6cca64cd
   140017f2c:	imul   ecx,DWORD PTR [rsi],0x2a
   140017f2f:	xor    al,0xe9
   140017f31:	pop    rax
   140017f32:	mov    ecx,0x4c3ac688
   140017f37:	fstp   TBYTE PTR [rip+0x100acb8b]        # 0x1500c4ac8
   140017f3d:	xor    bh,dh
   140017f3f:	adc    DWORD PTR [rcx-0xe51c865],eax
   140017f45:	mul    ch
   140017f47:	(bad)  
   140017f48:	jmp    0x12f19f86c
   140017f4d:	out    0x6,eax
   140017f4f:	xchg   ecx,eax
   140017f50:	xchg   ebp,eax
   140017f51:	and    cl,BYTE PTR [rbx+rax*2-0x5e]
   140017f55:	pavgw  mm6,QWORD PTR [rsp+rdx*4-0x1e]
   140017f5a:	ror    BYTE PTR [rbp+0x21341685],cl
   140017f60:	xor    BYTE PTR [rip+0xffffffff9da53809],ch        # 0xdda6b76f
   140017f66:	xlat   BYTE PTR ds:[rbx]
   140017f67:	fcomp  DWORD PTR [rbp+0x19]
   140017f6a:	leave  
   140017f6b:	pop    rdi
   140017f6c:	mov    esi,0x87856cbe
   140017f71:	mov    eax,0x9482e0c8
   140017f76:	test   eax,0xca890a4f
   140017f7b:	sub    dh,cl
   140017f7d:	xchg   ecx,eax
   140017f7e:	nop
   140017f7f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017f80:	mov    edx,0x5d72b3f2
   140017f85:	add    ebx,DWORD PTR [rsi-0x63ef5250]
   140017f8b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017f8c:	shl    BYTE PTR [rdx-0x54],cl
   140017f8f:	and    BYTE PTR [rbx+0x27e11bea],dh
   140017f95:	in     eax,0xb5
   140017f97:	xor    esp,DWORD PTR [rbp+0x36d89bf8]
   140017f9d:	adc    al,0xc0
   140017f9f:	neg    BYTE PTR [rbp+0x73ec68f7]
   140017fa5:	test   al,0x2b
   140017fa7:	stc    
   140017fa8:	jns    0x140017fd8
   140017faa:	cmp    edi,DWORD PTR [rcx]
   140017fac:	sbb    DWORD PTR [rsp-0x214d1fdb],ebp
   140017fb3:	rex.WRB and BYTE PTR [rip+0x35e3cb2a],r13b        # 0x175e54ae4
   140017fba:	pop    rbx
   140017fbb:	cmp    esi,DWORD PTR [rbx]
   140017fbd:	push   rsi
   140017fbe:	pop    rdi
   140017fbf:	cmc    
   140017fc0:	clc    
   140017fc1:	lahf   
   140017fc2:	jg     0x140017f44
   140017fc4:	(bad)  
   140017fc5:	jle    0x140017fd6
   140017fc7:	push   rsp
   140017fc8:	(bad)  
   140017fc9:	or     ebp,DWORD PTR [rax+0x5e133cd7]
   140017fcf:	in     al,0xfa
   140017fd1:	stos   DWORD PTR es:[rdi],eax
   140017fd2:	(bad)  
   140017fd3:	push   rsp
   140017fd4:	pop    rbx
   140017fd5:	mov    ?,WORD PTR [rax]
   140017fd7:	mov    ch,0x4c
   140017fd9:	rex retf 
   140017fdb:	test   BYTE PTR [rbx],dl
   140017fdd:	out    0x3b,al
   140017fdf:	sahf   
   140017fe0:	out    dx,al
   140017fe1:	(bad)
   140017fe4:	outs   dx,DWORD PTR ds:[rsi]
   140017fe5:	ds (bad) 
   140017fe7:	in     al,0x89
   140017fe9:	enter  0x1bcd,0x2b
   140017fed:	xor    al,0x8
   140017fef:	loop   0x140017fad
   140017ff1:	shl    ebx,0x8
   140017ff4:	sbb    al,BYTE PTR [rdi-0x64723250]
   140017ffa:	imul   esi,DWORD PTR [rsi-0x9],0x1b
   140017ffe:	fidivr WORD PTR cs:[rdi-0x62]
   140018002:	rcr    BYTE PTR [rdi],1
   140018004:	jo     0x140017fff
   140018006:	fpatan 
   140018008:	fdiv   QWORD PTR [rbp-0x5f]
   14001800b:	(bad)  
   14001800c:	jbe    0x14001800d
   14001800e:	(bad)  
   14001800f:	(bad)  
   140018010:	ss (bad) 
   140018012:	fistp  DWORD PTR [rbx+rdi*4+0x6f2c03fc]
   140018019:	pushf  
   14001801a:	out    0xe8,eax
   14001801c:	in     al,0x4e
   14001801e:	(bad)  
   140018020:	(bad)  
   140018021:	shl    BYTE PTR [rdi-0x177c5588],cl
   140018027:	test   al,ah
   140018029:	movabs al,ds:0xd8bde7da3365318a
   140018032:	movabs ds:0x9474ce7649a922a3,al
   14001803b:	rol    DWORD PTR [rdx+rcx*2-0x359f0302],1
   140018042:	ins    BYTE PTR es:[rdi],dx
   140018043:	mov    ebp,0x1039cb04
   140018048:	and    BYTE PTR [rax+0x28fd5b38],ah
   14001804e:	fwait
   14001804f:	lods   eax,DWORD PTR ds:[rsi]
   140018050:	fdiv   QWORD PTR [rbp+0x46]
   140018053:	jne    0x1400180b9
   140018055:	jge    0x14001801b
   140018057:	mov    esi,0x1958a2f
   14001805c:	or     esp,eax
   14001805e:	in     al,dx
   14001805f:	repz fucomi st,st(0)
   140018062:	(bad)  
   140018063:	lods   eax,DWORD PTR ds:[rsi]
   140018064:	add    eax,0xa6da152
   140018069:	fnstsw WORD PTR [rcx+0x2906a5a8]
   14001806f:	test   al,cl
   140018071:	test   cl,0xe
   140018074:	(bad)  
   140018075:	stc    
   140018076:	clc    
   140018077:	(bad)  
   140018078:	stc    
   140018079:	rol    BYTE PTR [rdi+0x3f],1
   14001807c:	retf   0xd96a
   14001807f:	jb     0x140018074
   140018081:	out    0xd,al
   140018083:	fidivr WORD PTR [rsi-0x15]
   140018086:	sub    eax,0x3af1bf2e
   14001808b:	outs   dx,DWORD PTR ds:[rsi]
   14001808c:	mov    esi,0x7f2f26f9
   140018091:	in     eax,0x45
   140018093:	scas   al,BYTE PTR es:[rdi]
   140018094:	pop    rbp
   140018095:	mov    ebp,0x21e1d1c2
   14001809a:	(bad)  
   14001809b:	(bad)  
   14001809c:	(bad)  
   14001809d:	sub    al,0x16
   14001809f:	or     edx,DWORD PTR [rsi+0x47]
   1400180a2:	(bad)  
   1400180a3:	mov    ah,0xab
   1400180a5:	xor    eax,0xf592e5ab
   1400180aa:	jp     0x1400180f5
   1400180ac:	or     BYTE PTR [rcx],al
   1400180ae:	out    dx,eax
   1400180af:	sub    edi,ebx
   1400180b1:	push   rdi
   1400180b2:	jns    0x1400180f8
   1400180b4:	test   BYTE PTR [rdx+0xaeba9ae],ch
   1400180ba:	rex.B test al,0xaa
   1400180bd:	or     dl,BYTE PTR [rbp-0x5b]
   1400180c0:	outs   dx,BYTE PTR ds:[rsi]
   1400180c1:	ins    BYTE PTR es:[rdi],dx
   1400180c2:	add    DWORD PTR [rdi],edx
   1400180c4:	adc    DWORD PTR [rcx+0x32],esp
   1400180c7:	cdq    
   1400180c8:	loop   0x140018086
   1400180ca:	addr32 jnp 0x140018144
   1400180cd:	(bad)  
   1400180ce:	push   rsi
   1400180cf:	adc    al,0xf6
   1400180d1:	sahf   
   1400180d2:	data16 fisub DWORD PTR [rax]
   1400180d5:	js     0x14001813d
   1400180d7:	pop    rbx
   1400180d8:	repz in al,0x72
   1400180db:	xor    BYTE PTR [rdi-0x32],0xdc
   1400180df:	xchg   ebx,eax
   1400180e0:	stos   BYTE PTR es:[rdi],al
   1400180e1:	xor    ah,BYTE PTR [rip+0x75d434d2]        # 0x1b5d5b5b9
   1400180e7:	rex.WRB push r13
   1400180e9:	xlat   BYTE PTR ds:[rbx]
   1400180ea:	sbb    al,0x1c
   1400180ec:	sbb    al,0x10
   1400180ee:	push   rbp
   1400180ef:	stc    
   1400180f0:	rcl    BYTE PTR [rdi+0x5f33c4be],cl
   1400180f6:	clc    
   1400180f7:	adc    cl,dh
   1400180f9:	jns    0x1400180b9
   1400180fb:	out    dx,eax
   1400180fc:	mov    ebx,0xe381477f
   140018101:	(bad)  
   140018103:	adc    al,0xeb
   140018105:	stos   BYTE PTR es:[rdi],al
   140018106:	add    DWORD PTR [rax-0x3a],0xffffffec
   14001810a:	mov    bl,0x67
   14001810c:	rex.WXB sbb rsi,QWORD PTR [r13-0x346d5f30]
   140018113:	lea    ecx,[rbx-0x18]
   140018116:	cmp    bh,BYTE PTR [rbx-0x480debee]
   14001811c:	in     al,0xf
   14001811e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001811f:	add    al,0xa7
   140018121:	xor    al,0xc3
   140018123:	push   rbx
   140018124:	mov    es,WORD PTR [rdx+rsi*1+0x4]
   140018128:	movsxd eax,DWORD PTR [rcx+0x4e]
   14001812b:	out    0x89,eax
   14001812d:	(bad)  
   14001812e:	lea    esp,[rcx+0x72]
   140018131:	or     edx,edx
   140018133:	pop    rsp
   140018134:	adc    dl,BYTE PTR [rbp-0x55]
   140018137:	cmc    
   140018138:	rex.WRXB iretq 
   14001813a:	rex.WXB shl BYTE PTR [r10-0x78f71d02],0x24
   140018142:	test   DWORD PTR [rbp-0x6d],0x25af680b
   140018149:	mov    ecx,0xcb928e09
   14001814e:	cwde   
   14001814f:	and    cl,BYTE PTR [rsi+0x3]
   140018152:	frstor [rax-0x5ff74a41]
   140018158:	shl    DWORD PTR [rdi+0x51],cl
   14001815b:	(bad)  
   14001815c:	rex.X call 0x155ccfb7a
   140018162:	push   rcx
   140018163:	pop    rcx
   140018164:	(bad)  
   140018165:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018166:	ror    DWORD PTR [rax-0x4bda55ce],1
   14001816c:	not    BYTE PTR [rdx+0x7d]
   14001816f:	fist   DWORD PTR [rbx]
   140018171:	movabs ds:0x8d7b3e1c075b3b2,eax
   14001817a:	(bad)  
   14001817b:	jns    0x140018194
   14001817d:	out    dx,al
   14001817e:	mov    edi,edx
   140018180:	cmp    DWORD PTR [rcx-0xfc308f7],edi
   140018186:	ins    DWORD PTR es:[rdi],dx
   140018187:	call   0x114735111
   14001818c:	cs jno 0x140018176
   14001818f:	cmp    al,0xb4
   140018191:	adc    BYTE PTR [rdi-0x4e35078c],ch
   140018197:	pop    rbp
   140018198:	ins    DWORD PTR es:[rdi],dx
   140018199:	repz (bad) 
   14001819b:	stos   DWORD PTR es:[rdi],eax
   14001819c:	xlat   BYTE PTR ds:[rbx]
   14001819d:	cmp    DWORD PTR [rdi+0x7e],esi
   1400181a0:	(bad)  
   1400181a1:	rcr    DWORD PTR [rbx-0x35],0x2b
   1400181a5:	pop    rsp
   1400181a6:	retf   0xd412
   1400181a9:	test   BYTE PTR [rax],al
   1400181ab:	and    dh,BYTE PTR [rsi-0xa3e5fd8]
   1400181b1:	ret    
   1400181b2:	sbb    edi,DWORD PTR [rip+0xffffffffefce51ae]        # 0x12fcfd366
   1400181b8:	rex.WRXB fdivr DWORD PTR [r13+0x37cde538]
   1400181bf:	push   0xffffffffffffff9e
   1400181c1:	jl     0x1400181a3
   1400181c3:	rex.WB out dx,al
   1400181c5:	mov    ecx,0x47ea2deb
   1400181ca:	jg     0x14001814e
   1400181cc:	fwait
   1400181cd:	(bad)  
   1400181ce:	jl     0x140018160
   1400181d0:	addr32 sahf 
   1400181d2:	dec    BYTE PTR [rdi+0x7b447d88]
   1400181d8:	vunpcklpd ymm2,ymm5,YMMWORD PTR [rdx+0x49]
   1400181dd:	xchg   edx,eax
   1400181de:	push   rdx
   1400181df:	jmp    0x196d661e7
   1400181e4:	mov    esp,0x90043515
   1400181e9:	std    
   1400181ea:	cs xor eax,0x616197e5
   1400181f0:	es cmc 
   1400181f2:	movabs ds:0x50b490d27277dc0c,al
   1400181fb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400181fc:	in     eax,dx
   1400181fd:	(bad)  
   1400181fe:	xchg   DWORD PTR [rdx+0x5c05a4a0],ebx
   140018204:	loop   0x14001821e
   140018206:	or     bh,BYTE PTR [rbp+0x34ff7d9a]
   14001820c:	test   eax,0x70799c73
   140018211:	add    esi,DWORD PTR [rdi+riz*4]
   140018214:	mov    ah,0x53
   140018216:	xchg   edx,eax
   140018217:	rex.WXB sub al,0x6a
   14001821a:	addr32 int3 
   14001821c:	(bad)  
   14001821d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001821e:	jo     0x140018282
   140018220:	and    ah,dh
   140018222:	shl    ah,1
   140018224:	ret    
   140018225:	pop    rbx
   140018226:	fsubr  DWORD PTR [rbp-0x43a32b62]
   14001822c:	js     0x1400181bf
   14001822e:	mov    esi,DWORD PTR [rdi+0x5c]
   140018231:	loop   0x14001828e
   140018233:	mov    esi,0xaefa49f5
   140018238:	movabs ds:0x709c9e5910fa5b6b,eax
   140018241:	jl     0x1400182b7
   140018243:	(bad)
   140018247:	in     al,0xe4
   140018249:	cwde   
   14001824a:	xchg   ebx,eax
   14001824b:	movabs ds:0xc9bc3c390e8e8e63,eax
   140018254:	loope  0x140018223
   140018256:	rex.XB fidiv DWORD PTR [r13-0x35]
   14001825a:	leave  
   14001825b:	loop   0x1400181e1
   14001825d:	(bad)  
   14001825e:	push   0x45
   140018260:	(bad)  [rsi+0x562b57ac]
   140018266:	stos   DWORD PTR es:[rdi],eax
   140018267:	xor    eax,0xab560631
   14001826c:	adc    eax,0x6ad58e22
   140018271:	rex.WB or al,0x81
   140018274:	stos   BYTE PTR es:[rdi],al
   140018275:	stos   BYTE PTR es:[rdi],al
   140018276:	adc    cl,BYTE PTR [rdi+0x14]
   140018279:	mov    eax,0x5455f6f6
   14001827e:	and    edx,ebx
   140018280:	jmp    0x1209b2919
   140018285:	mov    esp,0x8a66baa3
   14001828a:	cmp    bl,BYTE PTR fs:[rbp-0x6cf2cb2f]
   140018291:	rex.WB ret 
   140018293:	(bad)  
   140018294:	out    dx,al
   140018295:	cmp    edi,DWORD PTR cs:[rbx]
   140018298:	mov    ebx,0x536d6f6c
   14001829d:	rex.WRXB sbb r13b,BYTE PTR [r10+0x67a9a6aa]
   1400182a4:	fcomp  QWORD PTR [rsp+rbp*1+0x39]
   1400182a8:	cmp    al,0x5a
   1400182aa:	rol    DWORD PTR [rsi],cl
   1400182ac:	mov    eax,0xba8e7078
   1400182b1:	imul   edx,DWORD PTR [rdx],0x30e24f3c
   1400182b7:	and    ah,dl
   1400182b9:	repnz xor ecx,edx
   1400182bc:	rex.WXB test QWORD PTR [r15+0x6a90bac7],rcx
   1400182c3:	stos   BYTE PTR es:[rdi],al
   1400182c4:	add    eax,0xe1b46c22
   1400182c9:	retf   0x9cf
   1400182cc:	retf   
   1400182cd:	mov    bh,0x2f
   1400182cf:	mov    ecx,0x834cf9fa
   1400182d4:	icebp  
   1400182d5:	(bad)  
   1400182d6:	(bad)  
   1400182d7:	in     eax,dx
   1400182d8:	xor    al,0x9d
   1400182da:	scas   eax,DWORD PTR es:[rdi]
   1400182db:	add    ebx,DWORD PTR [rdi+rbp*1]
   1400182de:	rex.R sbb eax,0x2a6c6e40
   1400182e4:	sbb    ebp,DWORD PTR [rax+0x7693bb2e]
   1400182ea:	push   rbp
   1400182eb:	rex.XB
   1400182ec:	es pop rdi
   1400182ee:	and    BYTE PTR ss:[rsi],ah
   1400182f1:	push   rbx
   1400182f2:	mov    ecx,0x2ae0ea39
   1400182f7:	and    BYTE PTR [rcx+0x26],bh
   1400182fa:	movs   DWORD PTR es:[rdi],DWORD PTR gs:[rsi]
   1400182fc:	loopne 0x1400182c6
   1400182fe:	loope  0x140018342
   140018300:	test   DWORD PTR [rsi],0x99befc2d
   140018306:	ins    DWORD PTR es:[rdi],dx
   140018307:	rex.XB add r12d,ebp
   14001830a:	lahf   
   14001830b:	fsub   QWORD PTR [rbx+0x3aeb5b51]
   140018311:	sbb    ecx,DWORD PTR [rip+0xd68daa6]        # 0x14d6a5dbd
   140018317:	nop
   140018318:	and    DWORD PTR ss:[rdx],0xffffffc9
   14001831c:	(bad)  
   14001831d:	pop    rsi
   14001831e:	sub    al,0x63
   140018320:	and    al,0x46
   140018322:	(bad)  
   140018323:	jno    0x1400182d9
   140018325:	fs mov esi,0x5d6fecad
   14001832b:	(bad)  
   14001832c:	stc    
   14001832d:	cld    
   14001832e:	(bad)  
   14001832f:	cmp    al,0xfb
   140018331:	add    bl,dl
   140018333:	(bad)  
   140018334:	jae    0x14001839b
   140018336:	jmp    FWORD PTR [rip+0x33ddfaee]        # 0x173df7e2a
   14001833c:	fidiv  DWORD PTR [rbx-0x41]
   14001833f:	rex mov ebx,0x1a9d91ec
   140018345:	lods   eax,DWORD PTR ds:[rsi]
   140018346:	cmp    al,0xd3
   140018348:	cdq    
   140018349:	outs   dx,DWORD PTR ds:[esi]
   14001834b:	cmc    
   14001834c:	add    BYTE PTR [rdi],ch
   14001834e:	jge    0x14001833e
   140018350:	pop    rsi
   140018351:	(bad)  
   140018352:	out    dx,eax
   140018353:	(bad)  
   140018354:	rex.WRX mov ss,WORD PTR [rsi-0x1]
   140018358:	(bad)  
   140018359:	jae    0x1400183ca
   14001835b:	(bad)  
   14001835c:	in     al,dx
   14001835d:	pop    rbx
   14001835e:	jbe    0x14001833d
   140018360:	cmc    
   140018361:	jge    0x140018359
   140018363:	fsubrp st(7),st
   140018365:	cld    
   140018366:	(bad)  
   140018367:	cmp    edi,DWORD PTR [rbp+0x3cf5faf7]
   14001836d:	rex.WB sub rax,0xffffffffdab6a5b9
   140018373:	mov    dl,0x6
   140018375:	or     edi,DWORD PTR [rcx]
   140018377:	pop    rax
   140018378:	fsub   DWORD PTR [rip+0x8603603]        # 0x14861b981
   14001837e:	(bad)  
   14001837f:	(bad)  
   140018380:	cs (bad) 
   140018382:	or     al,0x5
   140018384:	and    eax,esp
   140018386:	and    al,0x84
   140018388:	cwde   
   140018389:	jb     0x140018395
   14001838b:	stos   BYTE PTR es:[rdi],al
   14001838c:	xchg   edx,eax
   14001838d:	rex.WX or al,BYTE PTR [rdx-0x56]
   140018391:	test   al,0x54
   140018393:	xchg   BYTE PTR [rdx],ah
   140018395:	movsxd eax,DWORD PTR [rbp+0x26314e24]
   14001839b:	and    DWORD PTR [rip+0xffffffffc1b63602],edx        # 0x101b7b9a3
   1400183a1:	add    esi,DWORD PTR [rsi+0xf196465]
   1400183a7:	ins    DWORD PTR es:[rdi],dx
   1400183a8:	rex.WXB mov r10b,0x1a
   1400183ab:	or     eax,0xdfaf8f3d
   1400183b0:	js     0x1400183a1
   1400183b2:	jge    0x14001842b
   1400183b4:	cli    
   1400183b5:	std    
   1400183b6:	jle    0x14001839f
   1400183b8:	in     al,dx
   1400183b9:	mov    ebp,0x6b5ac7f2
   1400183be:	lahf   
   1400183bf:	jae    0x14001837c
   1400183c1:	and    eax,0x153d6597
   1400183c6:	pushf  
   1400183c7:	scas   al,BYTE PTR es:[rdi]
   1400183c8:	xlat   BYTE PTR ds:[rbx]
   1400183c9:	mov    edi,0xf7f77f7b
   1400183ce:	cmp    eax,ebx
   1400183d0:	fidivr WORD PTR [rbx-0x53]
   1400183d3:	cmc    
   1400183d4:	pop    rbp
   1400183d5:	imul   edi,DWORD PTR [rbp-0x29],0xffffffda
   1400183d9:	in     al,0x8d
   1400183db:	call   0x150ba885e
   1400183e0:	ror    BYTE PTR [rax+0x21325268],cl
   1400183e6:	movsxd esi,DWORD PTR [rbp-0x1e82df1a]
   1400183ec:	div    BYTE PTR [rcx-0x39]
   1400183ef:	(bad)  
   1400183f0:	(bad)  
   1400183f1:	pop    rsp
   1400183f2:	jg     0x1400183e9
   1400183f4:	jle    0x140018474
   1400183f6:	cld    
   1400183f7:	xchg   DWORD PTR [rdi-0x22650940],ebp
   1400183fd:	in     eax,0xbd
   1400183ff:	int3   
   140018400:	in     eax,0x12
   140018402:	rex.B (bad) 
   140018404:	nop
   140018405:	shl    BYTE PTR [rdx+0x4db44b35],cl
   14001840b:	movabs al,ds:0xbcab5226db6cda33
   140018414:	adc    DWORD PTR [rdx-0x20],0xffffffa4
   140018418:	jmp    0x140018403
   14001841a:	mov    esi,DWORD PTR [rip+0x7d418969]        # 0x1bd430d89
   140018420:	(bad)  [rax+0x2faebb90]
   140018426:	jmp    QWORD PTR [rcx]
   140018428:	xchg   dl,ch
   14001842a:	(bad)  
   14001842b:	(bad)  
   14001842c:	scas   eax,DWORD PTR es:[rdi]
   14001842d:	push   0xffffffffdae2c5b3
   140018432:	sti    
   140018433:	fsub   QWORD PTR [rdx+0x65]
   140018436:	(bad)  
   140018438:	rex.WX add rdi,QWORD PTR [rbx+0xa]
   14001843c:	or     al,0x5c
   14001843e:	rcl    DWORD PTR [rsi],0xa3
   140018441:	cmp    eax,0x5d6cfea3
   140018446:	and    eax,0xa204482b
   14001844c:	icebp  
   14001844d:	push   rdx
   14001844e:	cmp    eax,0x39ac1765
   140018453:	rex.WXB lahf 
   140018455:	jne    0x14001841e
   140018457:	in     eax,0x1
   140018459:	test   eax,0x23048a16
   14001845e:	sbb    ecx,edi
   140018460:	(bad)  
   140018462:	(bad)  
   140018463:	leave  
   140018464:	test   BYTE PTR [rax+riz*2+0x32],al
   140018468:	fwait
   140018469:	mov    cl,0xbd
   14001846b:	mov    bh,0x87
   14001846d:	outs   dx,DWORD PTR ds:[rsi]
   14001846e:	sti    
   14001846f:	in     eax,0x6c
   140018471:	rex.WRXB out dx,eax
   140018473:	xor    BYTE PTR [rdx+rsi*4+0x56],dl
   140018477:	rex.RXB out 0x92,al
   14001847a:	jmp    0x137de2339
   14001847f:	(bad)  
   140018480:	jp     0x1400184de
   140018482:	mov    ecx,0x6ac0a510
   140018487:	jne    0x140018433
   140018489:	(bad)  
   14001848a:	sub    eax,0x4a58252a
   14001848f:	loope  0x140018485
   140018491:	in     al,0x94
   140018493:	scas   al,BYTE PTR es:[rdi]
   140018494:	out    dx,eax
   140018495:	cdq    
   140018496:	iret   
   140018497:	data16 int3 
   140018499:	(bad)  
   14001849a:	jae    0x1400184a0
   14001849c:	pop    rax
   14001849d:	scas   eax,DWORD PTR es:[rdi]
   14001849e:	cmp    edx,DWORD PTR [rdx-0x74]
   1400184a1:	test   BYTE PTR [rax+rbx*8+0x673e9974],dl
   1400184a8:	cli    
   1400184a9:	pop    rsp
   1400184aa:	enter  0x6e82,0x22
   1400184ae:	(bad)  
   1400184b0:	hlt    
   1400184b1:	cmp    DWORD PTR [rbx+0x2c],esi
   1400184b4:	nop
   1400184b5:	movsxd esp,DWORD PTR [rsi+0x7b]
   1400184b8:	out    0x2,eax
   1400184ba:	xchg   ebx,eax
   1400184bb:	leave  
   1400184bc:	adc    al,0xe7
   1400184be:	and    DWORD PTR [rax+0x17],edi
   1400184c1:	lods   eax,DWORD PTR ds:[rsi]
   1400184c2:	cli    
   1400184c3:	ins    BYTE PTR es:[rdi],dx
   1400184c4:	es rex.RB mov r14d,0x927062fe
   1400184cb:	(bad)  
   1400184cc:	adc    BYTE PTR [rsi+rcx*8-0x54159d15],cl
   1400184d3:	mov    ch,0xc2
   1400184d5:	addr32 sbb dl,bh
   1400184d8:	or     ecx,edx
   1400184da:	stc    
   1400184db:	fs test eax,0x13178098
   1400184e1:	(bad)  
   1400184e2:	jno    0x140018518
   1400184e4:	pop    rdi
   1400184e5:	mov    BYTE PTR [rcx+0x35724344],0x60
   1400184ec:	sbb    al,0x2
   1400184ee:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400184ef:	or     al,0x28
   1400184f1:	rex.XB mov r11b,0x12
   1400184f4:	movabs ds:0x9afd77ea4308ac7b,eax
   1400184fd:	adc    eax,0xb030586b
   140018502:	mov    edx,0x2d9e21c
   140018507:	sti    
   140018508:	pushf  
   140018509:	leave  
   14001850a:	pop    rsi
   14001850b:	sbb    eax,0x9c7c3b87
   140018510:	push   rbx
   140018511:	add    BYTE PTR [rdi],dl
   140018513:	mov    edx,0xb242459b
   140018518:	adc    dl,cl
   14001851a:	(bad)  
   14001851c:	rex.W xlat BYTE PTR ds:[rbx]
   14001851e:	mov    dl,0xa1
   140018520:	(bad)  
   140018521:	(bad)  
   140018522:	movabs al,ds:0x7d0884b1bc986cc1
   14001852b:	xlat   BYTE PTR ds:[rbx]
   14001852c:	jae    0x1400185a8
   14001852e:	mov    esp,0x42902fa6
   140018533:	rex.XB pushf 
   140018535:	or     DWORD PTR [rbx+0x7674898b],esi
   14001853b:	mov    ebx,ebx
   14001853d:	(bad)  
   14001853e:	lahf   
   14001853f:	mov    ecx,0x1aff43ef
   140018544:	scas   eax,DWORD PTR es:[rdi]
   140018545:	pop    rsp
   140018546:	cli    
   140018547:	cmp    BYTE PTR [rbp+0x56],ah
   14001854a:	pop    rax
   14001854b:	in     al,dx
   14001854c:	rex.WRB jns 0x14001852a
   14001854f:	fidivr WORD PTR [rbp-0x44]
   140018552:	clc    
   140018553:	(bad)  
   140018554:	(bad)  
   140018555:	stc    
   140018556:	out    0x1d,al
   140018558:	ins    BYTE PTR es:[rdi],dx
   140018559:	out    dx,eax
   14001855a:	lods   al,BYTE PTR ss:[rsi]
   14001855c:	outs   dx,DWORD PTR ds:[rsi]
   14001855d:	addr32 fwait
   14001855f:	cld    
   140018560:	add    ah,BYTE PTR [rdx+0x2c62127b]
   140018566:	mov    ebp,0x1694980
   14001856b:	leave  
   14001856c:	rex.RB sub eax,0xfdc99750
   140018572:	test   BYTE PTR [rbx-0x437847e1],bh
   140018578:	cli    
   140018579:	std    
   14001857a:	rol    BYTE PTR [rsp+rdi*2+0x19cdc994],0xd3
   140018582:	sub    eax,0x4999f558
   140018587:	(bad)  [rax+0x78]
   14001858a:	gs lahf 
   14001858c:	popf   
   14001858d:	rex.WB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001858f:	imul   esp,ecx,0x436e91da
   140018595:	xchg   ebp,eax
   140018596:	fcmovb st,st(0)
   140018598:	(bad)  
   140018599:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001859a:	add    eax,0x394d6d77
   14001859f:	pop    rcx
   1400185a0:	addr32 rex.WRX
   1400185a2:	ss cdq 
   1400185a4:	(bad)  
   1400185a5:	xchg   esi,eax
   1400185a6:	(bad)  
   1400185a7:	pop    rcx
   1400185a8:	mov    DWORD PTR [rsi+0x42],ecx
   1400185ab:	mov    DWORD PTR [rcx+0x6],eax
   1400185ae:	(bad)  
   1400185af:	cmp    al,0x58
   1400185b1:	adc    al,0x3c
   1400185b3:	clc    
   1400185b4:	and    al,0xba
   1400185b6:	mov    cl,0x29
   1400185b8:	(bad)  
   1400185b9:	xor    dl,BYTE PTR [rbp-0x672ac63f]
   1400185bf:	xchg   ebp,eax
   1400185c0:	mov    ecx,0x18c8ae4b
   1400185c5:	fsub   DWORD PTR [rbp-0x3f]
   1400185c8:	rcr    BYTE PTR [rbp-0x5b37f35b],cl
   1400185ce:	add    cl,cl
   1400185d0:	(bad)  
   1400185d1:	push   rcx
   1400185d2:	sub    DWORD PTR ss:[rdi-0x15fe3d57],0x5acda222
   1400185dd:	cmp    eax,0x16e766d8
   1400185e2:	scas   eax,DWORD PTR es:[rdi]
   1400185e3:	(bad)  
   1400185e4:	jno    0x140018625
   1400185e6:	xor    eax,0xb0bb4deb
   1400185eb:	push   0xb
   1400185ed:	mov    cl,0x1e
   1400185ef:	sub    DWORD PTR [rdx-0x61],eax
   1400185f2:	xor    edi,DWORD PTR [rcx]
   1400185f4:	stos   DWORD PTR es:[rdi],eax
   1400185f5:	jo     0x140018665
   1400185f7:	(bad)  
   1400185f8:	imul   esi,DWORD PTR [rsi],0x5d
   1400185fb:	scas   eax,DWORD PTR es:[rdi]
   1400185fc:	rex.X pop rdx
   1400185fe:	xor    bl,BYTE PTR [rbx+0x57b67ede]
   140018604:	fstp   QWORD PTR [rip+0x5fc0d73a]        # 0x19fc25d44
   14001860a:	fbld   TBYTE PTR [rdi-0x76]
   14001860d:	adc    al,0xfa
   14001860f:	ins    BYTE PTR es:[rdi],dx
   140018610:	fstp   QWORD PTR [rax+rax*4-0x46bb8d8e]
   140018617:	jno    0x140018694
   140018619:	adc    al,0x18
   14001861b:	mov    ah,0xa6
   14001861d:	mov    dl,0xee
   14001861f:	rex.X fiadd DWORD PTR [rdx]
   140018622:	rdtsc  
   140018624:	push   rbp
   140018625:	loope  0x1400185fb
   140018627:	sbb    eax,0xcce1bd88
   14001862c:	cmp    BYTE PTR [rbp-0x38],ch
   14001862f:	lock adc dh,ch
   140018632:	sub    edi,DWORD PTR [rbx-0x72]
   140018635:	(bad)  
   140018636:	pop    rbx
   140018637:	jnp    0x1400185e7
   140018639:	xor    BYTE PTR [rcx-0x7f],0xf7
   14001863d:	mov    BYTE PTR [rdx+0x6521d55b],al
   140018643:	out    0x96,eax
   140018645:	fimul  DWORD PTR [rbx-0x67]
   140018648:	jne    0x1400186a8
   14001864a:	ret    
   14001864b:	loopne 0x14001867f
   14001864d:	xor    al,cl
   14001864f:	push   0xffffffffb3cf9200
   140018654:	movabs eax,ds:0x91965351c5061087
   14001865d:	push   rcx
   14001865e:	(bad)  
   14001865f:	xchg   ecx,eax
   140018660:	mov    esi,DWORD PTR [rbp+0x519e29b9]
   140018666:	lock out dx,eax
   140018668:	mov    WORD PTR [rdx],cs
   14001866a:	or     BYTE PTR [rdi+rcx*2-0x2c],0x40
   14001866f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018670:	fadd   DWORD PTR [rbp+0x7d]
   140018673:	(bad)  
   140018674:	add    BYTE PTR [rdi+0x6dea20ff],bh
   14001867a:	jmp    0x1400186ae
   14001867c:	cmp    al,0x37
   14001867e:	xor    BYTE PTR [rdi-0x1c],dh
   140018681:	cmp    bh,ch
   140018683:	add    al,ah
   140018685:	movabs ds:0xf507d786a9716542,eax
   14001868e:	mov    WORD PTR [rax-0x4d57b4ac],?
   140018694:	pop    rdi
   140018695:	out    dx,eax
   140018696:	or     al,0x37
   140018698:	and    DWORD PTR [rdx],0xffffffd0
   14001869b:	ja     0x140018636
   14001869d:	(bad)  
   14001869e:	lock and r15,QWORD PTR [rbx+0x3029434d]
   1400186a6:	fwait
   1400186a7:	rex.WRXB sub QWORD PTR [r15+0x3f5f132f],r14
   1400186ae:	in     eax,0x91
   1400186b0:	ja     0x1400186ee
   1400186b2:	enter  0x8f67,0x5f
   1400186b6:	loop   0x140018689
   1400186b8:	rex.RXB out dx,eax
   1400186ba:	and    DWORD PTR [rbp-0x3826384c],edi
   1400186c0:	jbe    0x14001869a
   1400186c2:	fistp  DWORD PTR [rsi-0x213cb4ee]
   1400186c8:	push   rsi
   1400186c9:	ret    
   1400186ca:	jl     0x1400186f3
   1400186cc:	jno    0x140018746
   1400186ce:	fcom   QWORD PTR [rbx-0x4faeeec3]
   1400186d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400186d5:	mov    dl,0xc
   1400186d7:	scas   eax,DWORD PTR es:[rdi]
   1400186d8:	lock xor DWORD PTR ss:[rbx],ecx
   1400186dc:	fwait
   1400186dd:	xchg   ebx,eax
   1400186de:	push   rbx
   1400186df:	jb     0x1400186bc
   1400186e1:	and    BYTE PTR [rbp+0x40b5e990],ch
   1400186e7:	test   al,0x49
   1400186e9:	hlt    
   1400186ea:	popf   
   1400186eb:	shr    BYTE PTR [rdx],cl
   1400186ed:	jnp    0x140018700
   1400186ef:	movabs ds:0xa7a671f8df6de2dc,al
   1400186f8:	or     edi,DWORD PTR [rsi+0x2493c2e7]
   1400186fe:	or     esp,edi
   140018700:	hlt    
   140018701:	mov    bl,0x73
   140018703:	ds cmc 
   140018705:	test   DWORD PTR [rip+0xffffffffdb29edb3],edx        # 0x11b2b74be
   14001870b:	xchg   edi,eax
   14001870c:	mov    dh,0xe9
   14001870e:	rex.X (bad) 
   140018710:	movsxd edi,ebx
   140018712:	(bad)  
   140018713:	nop
   140018714:	rex.X (bad) 
   140018716:	mov    esp,0xf9872301
   14001871b:	movsxd eax,esi
   14001871d:	(bad)  
   14001871e:	pop    rdx
   14001871f:	cmp    eax,0x2058a860
   140018724:	adc    esi,DWORD PTR [rdx+0x32ea0a67]
   14001872a:	(bad)  
   14001872b:	mov    ecx,0x5a8615f2
   140018730:	push   rax
   140018731:	shl    DWORD PTR [rcx],cl
   140018733:	sub    DWORD PTR [rsi+rdx*4],ecx
   140018736:	mov    ebp,0x808c8c06
   14001873b:	in     eax,0x48
   14001873d:	push   rsi
   14001873e:	sbb    ebp,DWORD PTR [rbp+0x291de7da]
   140018744:	cwde   
   140018745:	adc    dh,BYTE PTR [rax-0x55]
   140018748:	jrcxz  0x14001870c
   14001874a:	add    ah,dl
   14001874c:	mov    eax,0x6a3a792
   140018751:	(bad)  
   140018752:	push   rdx
   140018753:	call   FWORD PTR [rdi-0x36]
   140018756:	add    BYTE PTR [rdx-0x3a],0x65
   14001875a:	stos   BYTE PTR es:[rdi],al
   14001875b:	xor    DWORD PTR [rax*2+0x65af7d03],eax
   140018762:	(bad)  
   140018763:	mov    ebp,0x2abeb80a
   140018768:	adc    DWORD PTR [rcx-0x6b],0x44
   14001876c:	frstor es:[ecx-0x49bdeeb8]
   140018774:	cli    
   140018775:	jl     0x140018723
   140018777:	(bad)  
   140018778:	popf   
   140018779:	rol    DWORD PTR [rdx-0x4b290af3],1
   14001877f:	rex.B
   140018780:	data16 sbb ah,BYTE PTR [rax-0x27747285]
   140018787:	call   FWORD PTR [rcx+rsi*4-0x6c]
   14001878b:	rex.X mov BYTE PTR [rsi+0x1f0b34b2],bl
   140018792:	mov    ah,0xda
   140018794:	iret   
   140018795:	(bad)  
   140018796:	mov    edx,fs
   140018798:	add    al,0x2f
   14001879a:	xchg   ebx,eax
   14001879b:	outs   dx,BYTE PTR ds:[rsi]
   14001879c:	or     eax,0x430e4e63
   1400187a1:	add    BYTE PTR [rax],al
   1400187a3:	and    BYTE PTR [rax],al
   1400187a5:	rex.WB
   1400187a6:	rex.R
   1400187a7:	push   r12
   1400187a9:	adc    al,0xfa
   1400187ab:	xchg   esi,eax
   1400187ac:	pop    rbp
   1400187ad:	cs (bad) 
   1400187af:	(bad)  
   1400187b0:	mov    ch,0x55
   1400187b2:	sub    dh,BYTE PTR [rbp+0x4c]
   1400187b5:	retf   
   1400187b6:	and    al,al
   1400187b8:	jrcxz  0x140018744
   1400187ba:	xchg   r15,rsp
   1400187bd:	pop    rsi
   1400187be:	loop   0x1400187e3
   1400187c0:	(bad)
   1400187c3:	imul   edi,DWORD PTR [rax+0x3d],0x57051b85
   1400187ca:	call   0x16bd04212
   1400187cf:	sub    DWORD PTR [rbp-0x63],esi
   1400187d2:	(bad)  
   1400187d3:	cmp    ah,BYTE PTR [rsi-0x43bacc82]
   1400187d9:	(bad)  
   1400187da:	shr    BYTE PTR [rax],0xad
   1400187dd:	sbb    BYTE PTR [rax+0x22cf0f1c],ch
   1400187e3:	or     al,0x72
   1400187e5:	outs   dx,BYTE PTR ds:[rsi]
   1400187e6:	rcl    ebx,0x10
   1400187e9:	fld    QWORD PTR [rip+0x2525fdb8]        # 0x1652785a7
   1400187ef:	stc    
   1400187f0:	mov    bh,0x78
   1400187f2:	pushf  
   1400187f3:	push   rbx
   1400187f4:	add    BYTE PTR [rdi],ch
   1400187f6:	scas   al,BYTE PTR es:[rdi]
   1400187f7:	sahf   
   1400187f8:	pop    rax
   1400187f9:	mov    bh,0xf1
   1400187fb:	lahf   
   1400187fc:	adc    ch,BYTE PTR [rdx+0x51]
   1400187ff:	add    esp,esi
   140018801:	push   rsi
   140018802:	lea    esi,[rax-0x63fee739]
   140018808:	cmp    edx,DWORD PTR [rbp-0x15bb80f4]
   14001880e:	loop   0x14001883f
   140018810:	jge    0x140018873
   140018812:	mov    bl,0x52
   140018814:	sub    BYTE PTR [rax],bh
   140018816:	popf   
   140018817:	int3   
   140018818:	cmp    BYTE PTR [rbx-0x6],bh
   14001881b:	ds data16 ja 0x14001885e
   14001881f:	(bad)  
   140018820:	(bad)  
   140018821:	cmp    eax,0x8dfe7837
   140018826:	xlat   BYTE PTR ds:[rbx]
   140018827:	clc    
   140018828:	enter  0xe3d6,0xbc
   14001882c:	div    edi
   14001882e:	cmp    al,0xc0
   140018830:	xor    edi,edi
   140018832:	cld    
   140018833:	jns    0x140018883
   140018835:	outs   dx,DWORD PTR ds:[rsi]
   140018836:	imul   r14,QWORD PTR [rsi],0xffffffffba5f9917
   14001883d:	enter  0xeede,0x9c
   140018841:	fcmovnb st,st(7)
   140018843:	cmp    eax,0x8f52365d
   140018848:	add    BYTE PTR [rsi],al
   14001884a:	fbstp  TBYTE PTR [rbx+rax*4+0x8942170]
   140018851:	mov    cl,0x23
   140018853:	xor    al,0xd7
   140018855:	cmp    BYTE PTR [rcx],0xfd
   140018858:	jmp    0x110d68262
   14001885d:	(bad)  
   14001885e:	cwde   
   14001885f:	rex.WRX add r10b,BYTE PTR [rax+0x4a7dda69]
   140018866:	adc    DWORD PTR [rdx-0x344a9b00],ebx
   14001886c:	mov    edx,DWORD PTR [rdi]
   14001886e:	jle    0x1400187fa
   140018870:	rcr    ebp,cl
   140018872:	jg     0x14001883e
   140018874:	(bad)  
   140018875:	iret   
   140018876:	(bad)  
   140018877:	enter  0x7f1f,0xf4
   14001887b:	mov    ebp,0x5e4fcbc
   140018880:	(bad)  
   140018881:	(bad)  
   140018882:	rex.WRXB int 0x39
   140018885:	cmp    ebx,DWORD PTR [rdx+0x6621b4c2]
   14001888b:	push   0xffffffffffffff84
   14001888d:	cmp    dl,BYTE PTR [rdi+rdx*2-0x58]
   140018891:	cwde   
   140018892:	jle    0x14001889f
   140018894:	mov    edx,0x646baa98
   140018899:	shl    DWORD PTR [rdx],0xc
   14001889c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001889d:	mov    eax,esp
   14001889f:	out    dx,al
   1400188a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400188a1:	rcl    DWORD PTR [rbp+0x35],cl
   1400188a4:	mov    BYTE PTR [rbx+0x363a8259],ah
   1400188aa:	jrcxz  0x1400188aa
   1400188ac:	popf   
   1400188ad:	movabs ds:0xbbafd781ae62dbbb,al
   1400188b6:	xor    ebx,DWORD PTR [rdx]
   1400188b8:	cmp    eax,0x3de4e016
   1400188bd:	movabs eax,ds:0x188be00634052916
   1400188c6:	rex.RX
   1400188c7:	add    ch,BYTE PTR cs:[rsi]
   1400188ca:	push   rbx
   1400188cb:	movsxd edi,DWORD PTR [rax]
   1400188cd:	stos   DWORD PTR es:[rdi],eax
   1400188ce:	xlat   BYTE PTR ds:[rbx]
   1400188cf:	push   rbx
   1400188d0:	(bad)  
   1400188d1:	(bad)  
   1400188d2:	loopne 0x140018911
   1400188d4:	sbb    BYTE PTR [rbp+0x3f5d4968],bh
   1400188da:	mov    ebp,0x52cf5cb9
   1400188df:	mov    cl,0x5f
   1400188e1:	lea    ecx,[rip+0xf8c10c5]        # 0x14f8d99ac
   1400188e7:	adc    DWORD PTR [rbp-0x1d0b5ac8],ecx
   1400188ed:	push   0x68563b4b
   1400188f2:	cmp    ebp,DWORD PTR [rdx+0x7c]
   1400188f5:	pop    rcx
   1400188f6:	xlat   BYTE PTR ds:[rbx]
   1400188f7:	test   BYTE PTR [rbx+0x14e368cb],ah
   1400188fd:	xchg   BYTE PTR [rdi-0x6e73b779],bh
   140018903:	scas   al,BYTE PTR es:[rdi]
   140018904:	out    dx,eax
   140018905:	xor    eax,0xe8e3619e
   14001890a:	xchg   esi,eax
   14001890b:	mov    ch,0x52
   14001890d:	ins    DWORD PTR es:[rdi],dx
   14001890e:	(bad)  
   14001890f:	icebp  
   140018910:	xchg   esp,eax
   140018911:	sbb    dl,cl
   140018913:	ja     0x1400188fa
   140018915:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018916:	movsxd ebp,ecx
   140018918:	movabs ds:0xb309880d197e7ead,eax
   140018921:	int    0xcd
   140018923:	cmp    bh,bh
   140018925:	pop    rsi
   140018926:	in     eax,dx
   140018927:	sbb    DWORD PTR [rbx-0x4a],eax
   14001892a:	rex.WXB (bad) 
   14001892c:	std    
   14001892d:	(bad)  
   14001892e:	rol    BYTE PTR [rbx],1
   140018930:	movsxd esi,DWORD PTR [rcx+riz*2]
   140018933:	repz (bad) 
   140018935:	out    0x88,eax
   140018937:	pop    rdx
   140018938:	pop    rdi
   140018939:	push   0x8
   14001893b:	(bad)  
   14001893c:	xor    al,0xcf
   14001893e:	add    DWORD PTR [rbp+0x10b91957],ebp
   140018944:	jne    0x1400188e0
   140018946:	xchg   ecx,ecx
   140018948:	stos   BYTE PTR es:[rdi],al
   140018949:	jae    0x14001898a
   14001894b:	es xor al,0x79
   14001894e:	and    BYTE PTR [rdx],bl
   140018950:	or     DWORD PTR [rip+0xffffffffa738f877],ebx        # 0xe73a81cd
   140018956:	add    BYTE PTR [rsi+0x2eb0bf77],dl
   14001895c:	jge    0x140018931
   14001895e:	mov    DWORD PTR [rax-0x55],ecx
   140018961:	or     esi,DWORD PTR [rbx]
   140018963:	mov    fs,WORD PTR [rsi]
   140018965:	enter  0xfc06,0x8b
   140018969:	rex.WB (bad) 
   14001896b:	cmp    BYTE PTR [rdi],bl
   14001896d:	movsxd ecx,DWORD PTR [rbx]
   14001896f:	fisub  WORD PTR [rbx-0x4417bb18]
   140018975:	sahf   
   140018976:	cmc    
   140018977:	rex.WX
   140018978:	repz int 0x6d
   14001897b:	cdq    
   14001897c:	xchg   ebx,eax
   14001897d:	(bad)  
   14001897e:	repz sub BYTE PTR [rdi-0x28628511],dl
   140018985:	mov    ?,WORD PTR [rsi-0x63]
   140018988:	lahf   
   140018989:	popf   
   14001898a:	std    
   14001898b:	adc    al,0x72
   14001898d:	ja     0x1400189f5
   14001898f:	icebp  
   140018990:	jnp    0x140018929
   140018992:	int3   
   140018993:	(bad)  
   140018994:	jnp    0x1400189e2
   140018996:	pop    rdi
   140018997:	jnp    0x14001892b
   140018999:	hlt    
   14001899a:	(bad)  
   14001899c:	rex.WB and sil,BYTE PTR [r10-0x291b4449]
   1400189a3:	loope  0x1400189eb
   1400189a5:	std    
   1400189a6:	jae    0x14001895b
   1400189a8:	js     0x1400189c8
   1400189aa:	rex.WRB or rax,0x1cc201a0
   1400189b0:	fnstenv [rbx+rdx*2-0x68]
   1400189b4:	sahf   
   1400189b5:	adc    ah,BYTE PTR [rbp+0x1b]
   1400189b8:	push   0x1a50c334
   1400189bd:	enter  0x7599,0xba
   1400189c1:	rex.B ins BYTE PTR es:[rdi],dx
   1400189c3:	(bad)  
   1400189c4:	pop    rax
   1400189c5:	test   DWORD PTR [rip+0x1de67d2f],esp        # 0x15de806fa
   1400189cb:	cmp    al,0xf9
   1400189cd:	sub    eax,0x5e12b0fb
   1400189d2:	cmp    al,0xbb
   1400189d4:	int3   
   1400189d5:	out    0x79,eax
   1400189d7:	cdq    
   1400189d8:	xchg   ebx,eax
   1400189d9:	cmc    
   1400189da:	imul   ecx,DWORD PTR [rdi+rdx*4-0x11],0x62
   1400189df:	jge    0x140018a5d
   1400189e1:	xchg   ecx,eax
   1400189e2:	in     eax,0x22
   1400189e4:	rcl    DWORD PTR [rip+0xffffffff9813e9e3],1        # 0xd81573cd
   1400189ea:	(bad)  
   1400189eb:	sbb    cl,BYTE PTR [rsi-0x50317a2a]
   1400189f1:	sbb    DWORD PTR [rax],esp
   1400189f3:	xchg   DWORD PTR [rbp+rcx*4-0x4],ecx
   1400189f7:	pop    rdx
   1400189f8:	adc    al,dl
   1400189fa:	icebp  
   1400189fb:	push   rcx
   1400189fc:	mov    cl,0xb1
   1400189fe:	jo     0x1400189f8
   140018a00:	out    0x56,eax
   140018a02:	leave  
   140018a03:	(bad)  
   140018a04:	mov    dh,0xf0
   140018a06:	xchg   esp,eax
   140018a07:	xchg   edx,eax
   140018a08:	loopne 0x140018a60
   140018a0a:	lea    ebp,[rdx+0x31]
   140018a0d:	xor    eax,0xef871fdc
   140018a12:	mov    WORD PTR [rcx+0x18],gs
   140018a15:	sahf   
   140018a16:	sbb    eax,eax
   140018a18:	iret   
   140018a19:	movsxd esi,DWORD PTR [rax+0x1ba70b33]
   140018a1f:	cmp    bl,bl
   140018a21:	hlt    
   140018a22:	movabs ds:0x85303c3f551aa0b9,eax
   140018a2b:	or     edi,ebx
   140018a2d:	fadd   DWORD PTR [rbx+0x2e]
   140018a30:	push   rax
   140018a31:	xor    edi,DWORD PTR [rsi]
   140018a33:	rex.RB (bad) 
   140018a35:	mov    ?,WORD PTR [rip+0xffffffff8b805ba2]        # 0xcb81e5dd
   140018a3b:	adc    al,0xb
   140018a3d:	hlt    
   140018a3e:	jmp    0x12e6a443e
   140018a43:	(bad)  
   140018a44:	sbb    ebp,esp
   140018a46:	cmc    
   140018a47:	mov    edx,0x5d7a2f90
   140018a4c:	cmp    al,0xf1
   140018a4e:	in     eax,0xa0
   140018a50:	jbe    0x140018a4e
   140018a52:	add    DWORD PTR [rbx+0x36],esp
   140018a55:	mov    gs,WORD PTR [rbp+rbx*4+0x277eabde]
   140018a5c:	(bad)  
   140018a5d:	rex.W
   140018a5e:	mov    QWORD PTR [rax+0x3d],r12
   140018a62:	jge    0x140018ace
   140018a64:	adc    al,0xda
   140018a66:	xchg   esp,eax
   140018a67:	lods   al,BYTE PTR ds:[rsi]
   140018a68:	add    esp,DWORD PTR [rbp-0x16]
   140018a6b:	pop    rcx
   140018a6c:	gs add al,0xad
   140018a6f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018a70:	sahf   
   140018a71:	or     edx,DWORD PTR [rdi]
   140018a73:	push   rsp
   140018a74:	ja     0x140018a79
   140018a76:	add    BYTE PTR [rdi+0x1dbb9fb2],ah
   140018a7c:	xchg   ecx,eax
   140018a7d:	(bad)  
   140018a7e:	jmp    0x140018ab0
   140018a80:	rex.X popf 
   140018a82:	sbb    edi,DWORD PTR [rdi]
   140018a84:	pop    rbx
   140018a85:	adc    esp,DWORD PTR [rdx-0x13]
   140018a88:	jle    0x140018aae
   140018a8a:	clc    
   140018a8b:	in     eax,dx
   140018a8c:	mov    WORD PTR [rsp+rdx*1],es
   140018a8f:	(bad)  
   140018a90:	shr    DWORD PTR [rdx-0x14],cl
   140018a93:	ret    0x114
   140018a96:	pushf  
   140018a97:	adc    edi,eax
   140018a99:	mov    WORD PTR [rbp-0xd049474],fs
   140018a9f:	push   rax
   140018aa0:	or     ebx,DWORD PTR [rcx-0x3de7cf16]
   140018aa6:	sbb    BYTE PTR [rsi+0x1dd2d155],ch
   140018aac:	test   DWORD PTR [rcx],0xcb8029ce
   140018ab2:	(bad)  
   140018ab3:	mov    edi,0x7e6cb4e7
   140018ab8:	clc    
   140018ab9:	push   rax
   140018aba:	fs jle 0x140018a54
   140018abd:	loop   0x140018af7
   140018abf:	mov    bl,0x26
   140018ac1:	sar    DWORD PTR [rbp-0xd30c855],0x0
   140018ac8:	outs   dx,DWORD PTR ds:[rsi]
   140018ac9:	fiadd  WORD PTR [rdi+rax*1]
   140018acc:	push   0x74
   140018ace:	fistp  DWORD PTR [rbp-0x77]
   140018ad1:	scas   al,BYTE PTR es:[rdi]
   140018ad2:	retf   
   140018ad3:	pushf  
   140018ad4:	popf   
   140018ad5:	pushf  
   140018ad6:	shl    DWORD PTR [rsi+0x2c6ece73],1
   140018adc:	cwde   
   140018add:	mov    ebp,0xbf2e76f6
   140018ae2:	sti    
   140018ae3:	(bad)  
   140018ae4:	push   rdi
   140018ae5:	imul   edx,DWORD PTR [rdx-0x1a]
   140018ae9:	mov    ebp,ecx
   140018aeb:	(bad)  
   140018aec:	mov    ch,BYTE PTR [rsi]
   140018aee:	pop    rsp
   140018aef:	and    eax,0xc5c2be5c
   140018af4:	mov    ebx,0xf4fe9ce6
   140018af9:	(bad)  
   140018afa:	rex.XB adc edi,DWORD PTR [r9-0x523a4848]
   140018b01:	fistp  DWORD PTR [rbx]
   140018b03:	(bad)  
   140018b04:	clc    
   140018b05:	(bad)  
   140018b06:	cmc    
   140018b07:	(bad)  
   140018b08:	pop    rbp
   140018b09:	push   rbp
   140018b0a:	add    al,0xe9
   140018b0c:	or     ah,BYTE PTR [rcx+0x12]
   140018b0f:	push   0x71beacb8
   140018b14:	xor    cl,BYTE PTR [rbx-0x2a]
   140018b17:	(bad)  
   140018b18:	and    al,0xf5
   140018b1a:	(bad)  
   140018b1b:	mov    dh,0x21
   140018b1d:	ins    BYTE PTR es:[rdi],dx
   140018b1e:	sahf   
   140018b1f:	and    ch,ah
   140018b21:	enter  0x81bc,0x6b
   140018b25:	scas   eax,DWORD PTR es:[rdi]
   140018b26:	in     al,dx
   140018b27:	repz test eax,0x2e93bd8f
   140018b2d:	rex.RXB outs dx,BYTE PTR ds:[rsi]
   140018b2f:	pushf  
   140018b30:	int    0x69
   140018b32:	rex fild DWORD PTR [rdx+rbx*4+0x32]
   140018b38:	cmp    DWORD PTR [ebp-0x6c],ecx
   140018b3c:	int    0x86
   140018b3e:	int    0xc1
   140018b40:	sub    DWORD PTR [rdi],ecx
   140018b42:	pop    rdi
   140018b43:	pop    rdx
   140018b44:	jb     0x140018b31
   140018b46:	jbe    0x140018b0f
   140018b48:	jp     0x140018b1d
   140018b4a:	xor    ebx,DWORD PTR [rcx+0x5b354e]
   140018b50:	push   rbp
   140018b51:	sti    
   140018b52:	mov    ebx,0x31aaf036
   140018b57:	out    dx,eax
   140018b58:	(bad)  
   140018b59:	xor    BYTE PTR [rsi],bl
   140018b5b:	add    ch,BYTE PTR [rdi-0x5076090b]
   140018b61:	or     ebp,DWORD PTR [rbx+0x34]
   140018b64:	jle    0x140018b94
   140018b66:	cmp    BYTE PTR [rcx-0x13a5ee78],dh
   140018b6c:	sbb    DWORD PTR [rip+0xffffffffb256201e],edi        # 0xf257ab90
   140018b72:	pop    rsp
   140018b73:	movsxd eax,DWORD PTR [rdi]
   140018b75:	mov    dh,0x68
   140018b77:	(bad)  
   140018b78:	xor    ebp,edx
   140018b7a:	pushf  
   140018b7b:	js     0x140018bac
   140018b7d:	in     al,0x3c
   140018b7f:	pop    rax
   140018b80:	adc    edi,DWORD PTR [rdi]
   140018b82:	std    
   140018b83:	cmp    BYTE PTR [rdi+0x3d],bh
   140018b86:	mov    esi,0x40ec789e
   140018b8b:	rex.WX lods rax,QWORD PTR ds:[rsi]
   140018b8d:	mov    cl,0x1f
   140018b8f:	xchg   edi,eax
   140018b90:	fisttp QWORD PTR [rdx]
   140018b92:	nop
   140018b93:	rex.WXB scas al,BYTE PTR es:[rdi]
   140018b95:	in     al,dx
   140018b96:	shl    BYTE PTR [rdx+0x2],0xaf
   140018b9a:	xchg   esp,eax
   140018b9b:	(bad)  
   140018b9c:	stos   DWORD PTR es:[rdi],eax
   140018b9d:	movsxd esi,DWORD PTR [rax+0x21ba8318]
   140018ba3:	movabs ds:0x6071fae81c067172,eax
   140018bac:	add    edi,edx
   140018bae:	rex.WRB mov WORD PTR [r14+0x18],?
   140018bb2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018bb3:	in     al,0xea
   140018bb5:	cmp    bl,BYTE PTR [rbx]
   140018bb7:	or     DWORD PTR [rax+0xd],esi
   140018bba:	add    bh,dl
   140018bbc:	mov    bl,0x31
   140018bbe:	xor    ch,BYTE PTR [rsi+rbp*8]
   140018bc1:	(bad)  
   140018bc2:	stc    
   140018bc3:	sti    
   140018bc4:	and    DWORD PTR [rax],ebx
   140018bc6:	sub    dh,dl
   140018bc8:	jno    0x140018be8
   140018bca:	xchg   esi,eax
   140018bcb:	test   al,0x30
   140018bcd:	pop    rdx
   140018bce:	movabs ds:0x16b8fe88f4daca2,al
   140018bd7:	cmp    al,0xee
   140018bd9:	gs js  0x140018b83
   140018bdc:	sahf   
   140018bdd:	sub    DWORD PTR [rdx+0x63686c4b],edi
   140018be3:	push   rax
   140018be4:	lock jle 0x140018c06
   140018be7:	and    esp,DWORD PTR [rbp+0x12]
   140018bea:	xchg   BYTE PTR [rbx+0x10663957],ch
   140018bf0:	loop   0x140018bd6
   140018bf2:	(bad)  
   140018bf3:	xlat   BYTE PTR ds:[rbx]
   140018bf4:	mov    ah,0x48
   140018bf6:	cmc    
   140018bf7:	cmc    
   140018bf8:	mov    ebp,0xf396a252
   140018bfe:	pushf  
   140018bff:	(bad)  
   140018c00:	je     0x140018baf
   140018c02:	jae    0x140018b8b
   140018c04:	(bad)  
   140018c05:	jae    0x140018c11
   140018c07:	and    BYTE PTR [rbx+0x1bc2121c],cl
   140018c0d:	push   rdx
   140018c0e:	in     al,0xae
   140018c10:	(bad)  
   140018c11:	nop
   140018c12:	and    al,0x68
   140018c14:	pop    rcx
   140018c15:	ins    DWORD PTR es:[rdi],dx
   140018c16:	or     ah,BYTE PTR [rbx]
   140018c18:	mov    edi,0x237ade55
   140018c1d:	imul   esi,DWORD PTR ss:[rbp+0x73],0x261f3783
   140018c25:	add    al,0xeb
   140018c27:	push   rbp
   140018c28:	rex.WRXB cmp r13,QWORD PTR [r11]
   140018c2b:	sub    al,0xd3
   140018c2d:	rex.RB (bad) 
   140018c2f:	jg     0x140018bd2
   140018c31:	out    0x52,eax
   140018c33:	fldenv [rbp+0x319fe27d]
   140018c39:	pop    rbp
   140018c3a:	ret    0x27eb
   140018c3d:	push   rdi
   140018c3e:	pop    rcx
   140018c3f:	(bad)
   140018c42:	xor    al,0xbc
   140018c44:	(bad)  
   140018c45:	fmul   DWORD PTR [rdi-0xf]
   140018c48:	clc    
   140018c49:	cli    
   140018c4a:	cs fdivp st(0),st
   140018c4d:	clc    
   140018c4e:	adc    esp,DWORD PTR [rdi+rax*1-0x63a2d1a6]
   140018c55:	jae    0x140018cc2
   140018c57:	jg     0x140018c9c
   140018c59:	(bad)  
   140018c5a:	push   0x48072e84
   140018c5f:	(bad)  
   140018c61:	test   al,0xa4
   140018c63:	int    0x41
   140018c65:	or     eax,0x4544926
   140018c6a:	shr    BYTE PTR [rdi-0x740b4975],cl
   140018c70:	(bad)  
   140018c71:	sub    ch,BYTE PTR [rdx+rbx*4]
   140018c74:	xchg   BYTE PTR [rbx-0x12],bh
   140018c77:	(bad)  
   140018c79:	push   0x18843dff
   140018c7e:	mov    eax,0x5f45b17f
   140018c83:	xchg   esp,eax
   140018c84:	mov    edi,0x42532920
   140018c89:	movabs al,ds:0xcd7c259f75d15e3b
   140018c92:	(bad)  
   140018c93:	sub    edi,ecx
   140018c95:	cmp    eax,0x37eae6cc
   140018c9a:	shl    DWORD PTR [rcx+rcx*1-0x65326f88],cl
   140018ca1:	rex.R (bad) 
   140018ca3:	add    cl,BYTE PTR [rdx-0x4baa705a]
   140018ca9:	movabs ds:0x4aeb330e363301af,eax
   140018cb2:	xchg   esp,eax
   140018cb3:	rol    DWORD PTR [rsi],0x46
   140018cb6:	pop    rdi
   140018cb7:	adc    eax,0x6a23e7e6
   140018cbc:	imul   esp,DWORD PTR [rbx-0xd623d4d],0xb10f316b
   140018cc6:	(bad)  
   140018cc7:	pop    rbp
   140018cc8:	and    DWORD PTR [rbx+0x33950c15],edi
   140018cce:	loopne 0x140018d3d
   140018cd0:	lods   eax,DWORD PTR ds:[rsi]
   140018cd1:	movsxd ecx,DWORD PTR [rsp+rsi*4-0x6d]
   140018cd5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018cd6:	rex.RX hlt 
   140018cd8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018cd9:	rex (bad) 
   140018cdb:	sbb    eax,0xca877cd9
   140018ce0:	jmp    0x17c1afffc
   140018ce5:	(bad)  
   140018ce6:	(bad)  
   140018ce7:	imul   DWORD PTR [rip+0xffffffffb14b39b6]        # 0xf14cc6a3
   140018ced:	jg     0x140018cc4
   140018cef:	(bad)  
   140018cf0:	mov    edx,0x84ac012
   140018cf5:	sbb    BYTE PTR [rbp-0x7daab9b9],bl
   140018cfb:	mov    ?,esp
   140018cfd:	jo     0x140018ca0
   140018cff:	(bad)  
   140018d00:	and    eax,esi
   140018d02:	enter  0x65bd,0x4c
   140018d06:	fs sbb al,0x54
   140018d09:	push   rsi
   140018d0a:	or     eax,0xea687d57
   140018d0f:	mov    ecx,0x84b4bef4
   140018d14:	pop    rbx
   140018d15:	std    
   140018d16:	fild   QWORD PTR [rdx]
   140018d18:	and    BYTE PTR [rsi+0x70],bl
   140018d1b:	xor    eax,0x4d7e4632
   140018d20:	cmp    eax,0x41eee73f
   140018d25:	stos   BYTE PTR es:[rdi],al
   140018d26:	fild   QWORD PTR [rbp-0x69]
   140018d29:	mov    bl,0x60
   140018d2b:	outs   dx,BYTE PTR ds:[rsi]
   140018d2c:	lea    esi,[rbp-0x46e6062c]
   140018d32:	add    edi,DWORD PTR [rdx]
   140018d34:	movabs ds:0x3a701ef76bec8b14,eax
   140018d3d:	jl     0x140018db4
   140018d3f:	lea    edi,[rbp+rbx*2-0x21a88049]
   140018d46:	pushf  
   140018d47:	and    DWORD PTR [rbx-0x7b],eax
   140018d4a:	mov    ebx,0x1973412a
   140018d4f:	(bad)
   140018d52:	frstor [rbx]
   140018d54:	xor    BYTE PTR [rax],dh
   140018d56:	or     ah,bl
   140018d58:	movabs al,ds:0x9babf1c6dc3a4695
   140018d61:	(bad)  
   140018d62:	fdiv   st(2),st
   140018d64:	rex.RXB (bad) 
   140018d66:	jb     0x140018d88
   140018d68:	retf   
   140018d69:	lods   eax,DWORD PTR ds:[rsi]
   140018d6a:	(bad)  
   140018d6b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018d6c:	xchg   esp,eax
   140018d6d:	idiv   DWORD PTR [rax]
   140018d6f:	icebp  
   140018d70:	pop    rsp
   140018d71:	ins    BYTE PTR es:[rdi],dx
   140018d72:	add    ch,BYTE PTR [rdx+0x4]
   140018d75:	in     al,dx
   140018d76:	int    0x38
   140018d78:	out    dx,eax
   140018d79:	rex.WXB sbb al,0x3a
   140018d7c:	rex.RB sbb eax,0x2d10ab30
   140018d82:	out    0xcc,eax
   140018d84:	cli    
   140018d85:	je     0x140018d4a
   140018d87:	(bad)  
   140018d88:	cmp    esi,DWORD PTR [rcx+0x5eacddc3]
   140018d8e:	xchg   DWORD PTR [rbx+0x4e31eebe],edi
   140018d94:	ss scas eax,DWORD PTR es:[rdi]
   140018d96:	icebp  
   140018d97:	enter  0x11ec,0x5e
   140018d9b:	mov    edx,0x69670af9
   140018da0:	(bad)
   140018da3:	xor    ebx,edi
   140018da5:	(bad)  
   140018da6:	cld    
   140018da7:	imul   ebx,DWORD PTR [rsi],0xff4f8f67
   140018dad:	je     0x140018d90
   140018daf:	rol    edi,0x1f
   140018db2:	(bad)  
   140018db3:	xchg   BYTE PTR [rcx+0x20093459],cl
   140018db9:	pop    rax
   140018dba:	xchg   ecx,eax
   140018dbb:	mov    ebx,?
   140018dbd:	ja     0x140018da0
   140018dbf:	sbb    al,0x5d
   140018dc1:	push   rdi
   140018dc2:	movsxd edi,DWORD PTR [rsi]
   140018dc4:	(bad)  
   140018dc5:	outs   dx,BYTE PTR ds:[rsi]
   140018dc6:	sub    al,0x0
   140018dc8:	and    DWORD PTR [rbx-0x24],esi
   140018dcb:	addr32 cli 
   140018dcd:	pop    rcx
   140018dce:	rex.XB push 0xffffffffa7008467
   140018dd4:	fld    QWORD PTR [rsi-0x4d506322]
   140018dda:	sub    DWORD PTR [rcx-0x77],0xf1fd02b4
   140018de1:	cs lahf 
   140018de3:	(bad)  
   140018de4:	jmp    0x17337e0e0
   140018de9:	mov    dh,0x2f
   140018deb:	je     0x140018df1
   140018ded:	mov    esp,0xfcfdd7c4
   140018df2:	rex mov DWORD PTR [rsi],eax
   140018df5:	sahf   
   140018df6:	ins    DWORD PTR es:[rdi],dx
   140018df7:	pop    rax
   140018df8:	add    dh,BYTE PTR [rsi-0x35876201]
   140018dfe:	sub    dh,dl
   140018e00:	add    eax,0x4ea20beb
   140018e05:	mov    bl,0xd5
   140018e07:	test   DWORD PTR [rdi],0xec904406
   140018e0d:	sub    al,0x6f
   140018e0f:	sbb    eax,0x6c4caaf3
   140018e14:	mov    ebp,0x21c4ac85
   140018e19:	in     eax,dx
   140018e1a:	and    eax,0x225140f
   140018e1f:	test   eax,0x6816d409
   140018e24:	push   rdi
   140018e25:	pop    rsi
   140018e26:	jnp    0x140018db5
   140018e28:	pop    rdi
   140018e29:	inc    ch
   140018e2b:	pop    rdi
   140018e2c:	and    ah,bh
   140018e2e:	int3   
   140018e2f:	(bad)
   140018e32:	cdq    
   140018e33:	sub    eax,0x78ba5c96
   140018e38:	xor    DWORD PTR [rsi+0x32],0x3258b161
   140018e3f:	fwait
   140018e40:	(bad)  
   140018e41:	(bad)  
   140018e42:	movabs ds:0xde919087d27b58c4,al
   140018e4b:	jae    0x140018e2c
   140018e4d:	push   rdx
   140018e4e:	loope  0x140018eb6
   140018e50:	mov    WORD PTR [rcx+0x1e480b90],cs
   140018e56:	mov    al,BYTE PTR [rcx-0x43]
   140018e59:	cs fs in al,0x2e
   140018e5d:	js     0x140018eaf
   140018e5f:	rol    DWORD PTR [rbp-0x1fd470f5],cl
   140018e65:	repnz (bad) 
   140018e67:	sar    dh,0xb1
   140018e6a:	or     esp,DWORD PTR [rax]
   140018e6c:	movabs ds:0x371a8f22c30944bf,eax
   140018e75:	sbb    BYTE PTR [rax-0x80],dl
   140018e78:	(bad)  
   140018e79:	sbb    al,0x8d
   140018e7b:	and    eax,DWORD PTR fs:[rsi]
   140018e7e:	sub    eax,0x4c061854
   140018e83:	rex.RB xchg r8d,eax
   140018e85:	movabs eax,ds:0x4f595830912b97a5
   140018e8e:	lods   eax,DWORD PTR ds:[rsi]
   140018e8f:	mov    edx,0xe26c1b33
   140018e94:	sbb    al,0xf5
   140018e96:	cmp    BYTE PTR [rdx+0x552ef5a8],al
   140018e9c:	rex.RXB test BYTE PTR ss:[r13+0x73f2d7a],r11b
   140018ea4:	mov    ch,0xf5
   140018ea6:	push   rdi
   140018ea7:	lods   al,BYTE PTR ds:[rsi]
   140018ea8:	cmc    
   140018ea9:	add    eax,0xaf46daa1
   140018eae:	in     al,dx
   140018eaf:	jne    0x140018ec8
   140018eb1:	movabs al,ds:0x231890aae31b742a
   140018eba:	adc    al,0xe7
   140018ebc:	adc    ch,al
   140018ebe:	cli    
   140018ebf:	test   eax,0x7ebd4c69
   140018ec4:	(bad)  
   140018ec5:	ret    0xb957
   140018ec8:	(bad)  
   140018ec9:	loopne 0x140018ec6
   140018ecb:	mov    esi,0xfe1d0feb
   140018ed0:	loopne 0x140018ee1
   140018ed2:	(bad)  
   140018ed3:	in     eax,0xab
   140018ed5:	mov    dl,0x58
   140018ed7:	push   rdx
   140018ed8:	jae    0x140018e84
   140018eda:	xor    esp,edx
   140018edc:	jg     0x140018ea8
   140018ede:	(bad)  
   140018edf:	sbb    BYTE PTR [rax+0x51b51f8f],ah
   140018ee5:	test   al,0x6b
   140018ee7:	jmp    0xd23c096c
   140018eec:	(bad)  
   140018eed:	pop    rdi
   140018eee:	retf   
   140018eef:	(bad)  
   140018ef0:	fs mov ebp,0x59ae21ee
   140018ef6:	sub    al,0x67
   140018ef8:	pushf  
   140018ef9:	pop    rbp
   140018efa:	imul   edi,DWORD PTR [rcx+0xddeb7fa],0xe170f79b
   140018f04:	movabs eax,ds:0x2ff9e3867fbbeec8
   140018f0d:	rcr    DWORD PTR [rsi-0x68],cl
   140018f10:	shr    BYTE PTR [rdi],cl
   140018f12:	cmp    esi,DWORD PTR [rsi]
   140018f14:	xchg   edi,eax
   140018f15:	sahf   
   140018f16:	loop   0x140018efc
   140018f18:	loopne 0x140018f07
   140018f1a:	dec    QWORD PTR [rax]
   140018f1d:	movabs eax,ds:0x2602ee2d317e2b64
   140018f26:	(bad)  
   140018f27:	hlt    
   140018f28:	ret    
   140018f29:	mov    ah,0xbf
   140018f2b:	add    DWORD PTR [rdi+0x31],r13d
   140018f2f:	sahf   
   140018f30:	(bad)  
   140018f31:	push   0xffffffffffffffd4
   140018f33:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018f34:	retf   
   140018f35:	jmp    0x1b9a4f42e
   140018f3a:	jle    0x140018fab
   140018f3c:	(bad)  
   140018f3d:	loopne 0x140018f49
   140018f3f:	add    edx,DWORD PTR [rbp+0x20]
   140018f42:	int    0xa4
   140018f44:	(bad)  
   140018f45:	imul   DWORD PTR [rsi+0x6ed069b7]
   140018f4b:	push   rdi
   140018f4c:	or     BYTE PTR [rbp-0x7be5d146],ch
   140018f52:	sbb    BYTE PTR [rcx+0x1c],bl
   140018f55:	mov    bh,0x2e
   140018f57:	(bad)  
   140018f58:	out    0xea,eax
   140018f5a:	mov    ecx,0x5ac46974
   140018f5f:	ins    BYTE PTR es:[rdi],dx
   140018f60:	add    dh,BYTE PTR [rbp-0x448e6e1d]
   140018f66:	fucom  st(4)
   140018f68:	mov    WORD PTR [rip+0xffffffffc748b68f],gs        # 0x1074a45fd
   140018f6e:	rol    eax,0xc0
   140018f71:	jge    0x140018fa2
   140018f73:	push   rdx
   140018f74:	sti    
   140018f75:	hlt    
   140018f76:	(bad)  
   140018f77:	movabs al,ds:0xedc2c842eefcc660
   140018f80:	ds jb  0x140018f68
   140018f83:	movabs al,ds:0x14fabf93e7a17e67
   140018f8c:	mov    edi,0x938f89f8
   140018f91:	sti    
   140018f92:	rex.WR fbstp TBYTE PTR [rdi+0x2c]
   140018f96:	mov    bh,0x77
   140018f98:	fcomp  st(6)
   140018f9a:	fxam   
   140018f9c:	loop   0x140018f43
   140018f9e:	mov    ebx,DWORD PTR [rax+rdi*4+0x70]
   140018fa2:	xchg   ecx,eax
   140018fa3:	stc    
   140018fa4:	ins    BYTE PTR es:[rdi],dx
   140018fa5:	(bad)  
   140018fa6:	(bad)  
   140018fa7:	mov    ecx,0xeec4a624
   140018fac:	fisubr WORD PTR [rsi]
   140018fae:	xchg   ebx,eax
   140018faf:	leave  
   140018fb0:	xchg   esp,eax
   140018fb1:	or     edx,DWORD PTR [rdi]
   140018fb3:	xor    BYTE PTR cs:[rdi+0x2c],bl
   140018fb7:	sub    QWORD PTR [rcx-0xf],rsi
   140018fbb:	rcr    BYTE PTR [rbp-0xc],cl
   140018fbe:	fld    QWORD PTR [rsi+0x2299d9d5]
   140018fc4:	sbb    al,0x84
   140018fc6:	adc    al,0x23
   140018fc8:	movabs ds:0x26d11027c5a9f55b,al
   140018fd1:	(bad)  
   140018fd2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018fd3:	or     ah,al
   140018fd5:	(bad)  
   140018fd6:	fs jg  0x140018fd1
   140018fd9:	push   rdx
   140018fda:	xor    ecx,DWORD PTR [rbx]
   140018fdc:	out    dx,al
   140018fdd:	add    bh,BYTE PTR [rdx+0x1071fd5]
   140018fe3:	sbb    DWORD PTR [rcx],ecx
   140018fe5:	test   DWORD PTR [rax],0xcb0ddb6
   140018feb:	jo     0x140019068
   140018fed:	(bad)  
   140018fee:	jmp    0x15c6b7354
   140018ff3:	or     al,0x11
   140018ff5:	jb     0x140018fff
   140018ff7:	sbb    bl,BYTE PTR [rbx]
   140018ff9:	or     DWORD PTR [rbx+0x62],eax
   140018ffc:	enter  0x4867,0xa3
   140019000:	out    0xc3,al
   140019002:	sbb    esi,DWORD PTR [rip+0x1c8e257b]        # 0x15c8fb583
   140019008:	(bad)  
   140019009:	(bad)  
   14001900a:	jmp    0x140018fc9
   14001900c:	mov    edx,0x999a1bf2
   140019011:	push   rax
   140019012:	(bad)  
   140019013:	ins    DWORD PTR es:[rdi],dx
   140019014:	mov    al,0xc9
   140019016:	je     0x14001908f
   140019018:	mov    ss,WORD PTR [rax]
   14001901a:	sub    al,0x90
   14001901c:	sbb    ch,BYTE PTR [rcx-0x6979c0bb]
   140019022:	(bad)  
   140019023:	xor    al,0x84
   140019025:	xor    eax,0xd02a7120
   14001902a:	and    BYTE PTR [rbx+rax*4],dh
   14001902d:	jnp    0x140019011
   14001902f:	outs   dx,BYTE PTR ds:[rsi]
   140019030:	enter  0xe6e8,0x6b
   140019034:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019035:	stos   BYTE PTR es:[rdi],al
   140019036:	jg     0x140019008
   140019038:	jns    0x140019040
   14001903a:	rol    BYTE PTR [rbx-0x4],cl
   14001903d:	(bad)  
   14001903e:	ss add al,0xf9
   140019041:	adc    ebx,DWORD PTR [rdi]
   140019043:	jp     0x140019069
   140019045:	(bad)  
   140019046:	cli    
   140019047:	lock neg DWORD PTR [rdi+0x3b]
   14001904b:	sub    ebx,DWORD PTR [rbx]
   14001904d:	stos   DWORD PTR es:[rdi],eax
   14001904e:	add    BYTE PTR [rbx+0x358a6d9c],dh
   140019054:	adc    eax,0x6304fe1
   140019059:	rex.WXB pop r15
   14001905b:	retf   0xf135
   14001905e:	(bad)  
   14001905f:	sbb    DWORD PTR [rdi],esi
   140019061:	xor    dl,BYTE PTR [rdx-0x3a]
   140019064:	(bad)  
   140019065:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019066:	sub    al,0x84
   140019068:	in     eax,dx
   140019069:	leave  
   14001906a:	gs rex.X
   14001906c:	rex.WR
   14001906d:	rex.W
   14001906e:	rex.WX
   14001906f:	rex.WR jnp 0x1400190cf
   140019072:	rex.WR xchg rax,rax
   140019074:	or     DWORD PTR [rdi-0x77],eax
   140019077:	imul   ecx,DWORD PTR [rax],0xb87b9b74
   14001907d:	jnp    0x140019066
   14001907f:	jmp    0x1400190ea
   140019081:	push   rbx
   140019082:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019083:	mov    ecx,0xe33eeb6c
   140019088:	mov    ecx,0x1f0d6096
   14001908d:	fs in  al,0x9a
   140019090:	rex.R in eax,dx
   140019092:	icebp  
   140019093:	adc    DWORD PTR [r11-0x7c],esp
   140019097:	pop    rcx
   140019098:	leave  
   140019099:	scas   al,BYTE PTR es:[rdi]
   14001909a:	rex.R pmulhuw mm1,QWORD PTR [rcx-0x3044f66a]
   1400190a2:	(bad)  
   1400190a3:	and    ah,BYTE PTR [rcx]
   1400190a5:	adc    al,0xfa
   1400190a7:	rex.WRX cmp cl,r9b
   1400190aa:	mov    cl,0x5a
   1400190ac:	adc    edi,edx
   1400190ae:	xor    BYTE PTR [rbp+riz*4+0x4e],0xb6
   1400190b3:	(bad)  
   1400190b4:	movsxd eax,ebp
   1400190b6:	(bad)  
   1400190b7:	pushf  
   1400190b8:	or     esi,DWORD PTR [rax+rbx*4]
   1400190bb:	push   rdx
   1400190bc:	adc    ebx,ecx
   1400190be:	adc    eax,0xe351300e
   1400190c3:	(bad)  
   1400190c4:	and    eax,0x2b
   1400190c7:	cmp    al,0x1d
   1400190c9:	test   BYTE PTR [rip+0x7212eb3],bl        # 0x14722bf82
   1400190cf:	mov    ah,BYTE PTR [rbp-0x70006aea]
   1400190d5:	(bad)  
   1400190d6:	(bad)  
   1400190d8:	fdivrp st(3),st
   1400190da:	(bad)  
   1400190db:	adc    esi,eax
   1400190dd:	or     al,bl
   1400190df:	push   rax
   1400190e0:	(bad)  
   1400190e1:	cdq    
   1400190e2:	and    cl,BYTE PTR [rdx-0x7e18550b]
   1400190e8:	(bad)  
   1400190e9:	(bad)  
   1400190ea:	in     al,0xfb
   1400190ec:	inc    edx
   1400190ee:	pop    rdi
   1400190ef:	loopne 0x1400190c6
   1400190f1:	push   rdi
   1400190f2:	mov    esi,0x7d9fe787
   1400190f7:	xchg   esi,eax
   1400190f8:	jg     0x1400190eb
   1400190fa:	cdq    
   1400190fb:	iret   
   1400190fc:	lock fsubr st(7),st
   1400190ff:	(bad)  
   140019100:	iret   
   140019101:	cmc    
   140019102:	imul   edx,edi,0xffffffb8
   140019105:	inc    dh
   140019107:	adc    eax,0xd80e0f0e
   14001910c:	ins    BYTE PTR es:[rdi],dx
   14001910d:	movs   BYTE PTR es:[rdi],BYTE PTR ss:[rsi]
   14001910f:	sbb    BYTE PTR [rcx-0x5dbcedd7],cl
   140019115:	imul   ebx,DWORD PTR [rbx],0x98f6f676
   14001911b:	iret   
   14001911c:	out    0x4c,eax
   14001911e:	addr32 xor ebp,esi
   140019121:	mov    ecx,0x2cd3ee7
   140019126:	(bad)  
   140019127:	enter  0x68c4,0xba
   14001912b:	retf   
   14001912c:	lods   eax,DWORD PTR ds:[rsi]
   14001912d:	sub    eax,0xc5ca769a
   140019132:	rex.WXB xchg r15,rax
   140019134:	sub    BYTE PTR [rsi+rsi*8],al
   140019137:	cs pop rsp
   140019139:	test   BYTE PTR [rax],dl
   14001913b:	cmp    DWORD PTR [rcx],edi
   14001913d:	cmp    eax,0x74b49da5
   140019142:	jge    0x1400191a5
   140019144:	xor    bl,BYTE PTR [rbx+0x69a14a51]
   14001914a:	pop    rdx
   14001914b:	ins    DWORD PTR es:[rdi],dx
   14001914c:	push   rbp
   14001914d:	rex.WRX rol QWORD PTR [rsi-0x7fc8e1db],1
   140019154:	mov    dl,BYTE PTR [rsp+rdi*1]
   140019157:	jmp    FWORD PTR [rsi-0x14ef4fea]
   14001915d:	(bad)  
   14001915e:	pop    rcx
   14001915f:	adc    DWORD PTR [rax],0x3de4fd92
   140019165:	cli    
   140019166:	jl     0x140019119
   140019168:	mov    ecx,0xe56d16d0
   14001916d:	call   0x1192ca763
   140019172:	scas   eax,DWORD PTR es:[rdi]
   140019173:	or     al,0xbc
   140019175:	(bad)  
   140019176:	jmp    0x1b643e8d3
   14001917b:	loope  0x14001911d
   14001917d:	xchg   ebp,eax
   14001917e:	cmp    al,0x86
   140019180:	jp     0x1400191ce
   140019182:	sub    BYTE PTR [rbp+0xd],ch
   140019185:	(bad)  
   140019186:	sbb    al,0x5e
   140019188:	or     edx,DWORD PTR [rbp-0x42]
   14001918b:	jno    0x140019167
   14001918d:	xor    BYTE PTR [rsi],cl
   14001918f:	icebp  
   140019190:	int3   
   140019191:	adc    eax,0x750d3970
   140019196:	rex.WRB movabs r11,0xb23067bb79583fbf
   1400191a0:	push   rsp
   1400191a1:	ret    0x8a59
   1400191a4:	jrcxz  0x140019148
   1400191a6:	ret    
   1400191a7:	jp     0x140019151
   1400191a9:	pop    rdi
   1400191aa:	(bad)  
   1400191ab:	xlat   BYTE PTR ds:[rbx]
   1400191ac:	cmp    BYTE PTR [rbx],bh
   1400191ae:	rex.WX jno 0x140019136
   1400191b1:	xor    eax,0xb65a0256
   1400191b6:	js     0x14001921f
   1400191b8:	(bad)  
   1400191b9:	mov    bh,0xec
   1400191bb:	or     esi,DWORD PTR [rax+0x71dfdbfb]
   1400191c1:	js     0x1400191b5
   1400191c3:	repz lahf 
   1400191c5:	mov    r14b,0x0
   1400191c8:	sbb    DWORD PTR [rdx],ecx
   1400191ca:	ja     0x14001922e
   1400191cc:	push   rbp
   1400191cd:	add    BYTE PTR [rip+0xffffffffee5bc554],dh        # 0x12e5d5727
   1400191d3:	out    0xcd,al
   1400191d5:	enter  0x8700,0x42
   1400191d9:	sub    BYTE PTR [r12+r8*1],0x25
   1400191de:	xchg   BYTE PTR [rdi+rbx*1],bl
   1400191e1:	lods   al,BYTE PTR ds:[rsi]
   1400191e2:	or     BYTE PTR [rcx-0x6795add],ch
   1400191e8:	jb     0x1400191ab
   1400191ea:	rcl    ecx,0x6d
   1400191ed:	data16 xlat BYTE PTR ds:[rbx]
   1400191ef:	fmulp  st(1),st
   1400191f1:	vdivsd xmm4,xmm7,xmm1
   1400191f5:	js     0x1400191aa
   1400191f7:	rex.WRXB movabs r10,0xc5eec5dd4fadcbb6
   140019201:	sbb    DWORD PTR [rbp+0xf],ecx
   140019204:	je     0x14001925f
   140019206:	(bad)  
   140019207:	movabs al,ds:0x30949c92216b482f
   140019210:	adc    al,0x15
   140019212:	xchg   esi,eax
   140019213:	sti    
   140019214:	sub    cl,BYTE PTR [rbx]
   140019216:	sar    BYTE PTR gs:[rax+0x47ca5a31],1
   14001921d:	rex.WR movabs rax,0x404d6818edbc066d
   140019227:	out    dx,al
   140019228:	mov    bl,0xfa
   14001922a:	retf   
   14001922b:	out    0x82,al
   14001922d:	rex.WB jrcxz 0x1400191dc
   140019230:	xor    BYTE PTR [rbx+0x35],ch
   140019233:	push   rsi
   140019234:	ret    0x94b9
   140019237:	xchg   edi,eax
   140019238:	(bad)  
   140019239:	push   0xffffffff825d0f2c
   14001923e:	and    cl,BYTE PTR [rdi]
   140019240:	mov    cl,0x14
   140019242:	sbb    BYTE PTR [rbx],ah
   140019244:	(bad)  
   140019245:	iret   
   140019246:	movabs ds:0x128a28a678871161,eax
   14001924f:	mov    WORD PTR [rax],?
   140019251:	js     0x1400192a2
   140019253:	sbb    BYTE PTR [rsp+rax*1+0x44],bl
   140019257:	mov    edx,DWORD PTR [rdx+rbp*2-0x13baf30]
   14001925e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001925f:	mov    BYTE PTR [rbx],ch
   140019261:	cmp    al,BYTE PTR [rdi]
   140019263:	rcr    BYTE PTR [rcx+0x7f],0xc0
   140019267:	(bad)  
   140019269:	loopne 0x1400191f4
   14001926b:	idiv   DWORD PTR [rdi+rax*4+0x6bf6be27]
   140019272:	stc    
   140019273:	(bad)  
   140019274:	fcomip st,st(5)
   140019276:	mov    ebx,0xe0383c38
   14001927b:	(bad)  
   14001927c:	sbb    edx,DWORD PTR [rdi+0x79]
   14001927f:	jrcxz  0x140019276
   140019281:	xlat   BYTE PTR ds:[rbx]
   140019282:	jns    0x140019265
   140019284:	mov    ecx,0xb5fd7967
   140019289:	xlat   BYTE PTR ds:[rbx]
   14001928a:	cmp    DWORD PTR [rsp+rdi*1],edi
   14001928d:	loopne 0x140019265
   14001928f:	(bad)  
   140019290:	ds (bad) 
   140019292:	(bad)  
   140019293:	outs   dx,DWORD PTR ds:[rsi]
   140019294:	jb     0x140019308
   140019296:	jp     0x14001925a
   140019298:	dec    ch
   14001929a:	fmul   st(0),st
   14001929d:	cmp    eax,0x9fb3c081
   1400192a2:	sti    
   1400192a3:	sub    al,0x9e
   1400192a5:	mov    dh,bl
   1400192a7:	and    esi,DWORD PTR [rip+0xffffffffd4d34d0d]        # 0x114d4dfba
   1400192ad:	and    ah,BYTE PTR [rcx+0x2916d6e5]
   1400192b3:	xor    eax,0xc59693b4
   1400192b8:	(bad)  
   1400192ba:	adc    eax,ebx
   1400192bc:	fcompp 
   1400192be:	and    r13b,0x72
   1400192c2:	mov    esi,DWORD PTR [rsi+0x3a]
   1400192c5:	movsxd esi,DWORD PTR [rdx]
   1400192c7:	popf   
   1400192c8:	mov    cl,0xb3
   1400192ca:	mov    ebx,0x61b37ac7
   1400192cf:	addr32 addr32 xchg edi,eax
   1400192d2:	ds addr32 out 0x8b,al
   1400192d6:	add    eax,0x61a8dd44
   1400192db:	ss fwait
   1400192dd:	ror    DWORD PTR [rcx],1
   1400192df:	xor    al,0xa9
   1400192e1:	(bad)  
   1400192e2:	lea    ecx,[rsi-0x73]
   1400192e5:	imul   ebx,DWORD PTR [rax+0x63],0x60d3c101
   1400192ec:	xor    eax,0x2bc61c4
   1400192f1:	outs   dx,DWORD PTR gs:[rsi]
   1400192f3:	mov    edx,0x62071fe5
   1400192f8:	fst    QWORD PTR [rdx+0x657e9ac7]
   1400192fe:	lock jmp 0x15e8112af
   140019304:	mov    cl,0x69
   140019306:	sbb    eax,0xa7f838c1
   14001930b:	out    0xf4,eax
   14001930d:	js     0x140019291
   14001930f:	sahf   
   140019310:	mov    bl,0x54
   140019312:	and    eax,0x87312830
   140019317:	in     eax,dx
   140019318:	rex.XB sub DWORD PTR [r14+0x74],0x6421af0a
   140019320:	rex.WRXB pop r15
   140019322:	(bad)  
   140019323:	cmp    eax,0x60818b45
   140019328:	xchg   al,al
   14001932a:	push   rbx
   14001932b:	(bad)  
   14001932c:	movabs eax,ds:0x10fb43e2b75426ee
   140019335:	push   rdx
   140019336:	iret   
   140019337:	(bad)  
   140019338:	(bad)  
   140019339:	add    esi,DWORD PTR [rdi+0x5c]
   14001933c:	cld    
   14001933d:	mov    edi,0xf0780288
   140019342:	ret    
   140019343:	pxor   mm7,QWORD PTR [rdi+0x514fe3f4]
   14001934a:	not    BYTE PTR [rsi+0x469ab0ba]
   140019350:	jmp    0xdf51c50d
   140019355:	mov    dh,0xb2
   140019357:	sbb    eax,0xe30a7b86
   14001935c:	pop    rdi
   14001935d:	fdivrp st(2),st
   14001935f:	xchg   ebx,esi
   140019361:	xchg   DWORD PTR [rax],ecx
   140019363:	fs jrcxz 0x140019316
   140019366:	(bad)  
   140019367:	sub    DWORD PTR [rax+rdx*2-0x71921968],eax
   14001936e:	mov    edi,0xcd7b20f0
   140019373:	rex.RXB cwde 
   140019375:	mov    esi,0x1f9817e7
   14001937a:	ffreep st(5)
   14001937c:	shr    DWORD PTR [rbx+0xf],0xb3
   140019380:	js     0x1400193e2
   140019382:	(bad)  
   140019383:	fxch   st(1)
   140019385:	xchg   BYTE PTR [rbp+rdx*4-0x52b6d09d],dl
   14001938c:	ins    DWORD PTR es:[rdi],dx
   14001938d:	imul   rbx,rax,0xffffffffc205cd5f
   140019394:	(bad)  
   140019395:	sub    eax,0xc28bd88e
   14001939a:	in     eax,0x10
   14001939c:	sar    ebp,1
   14001939e:	(bad)  
   14001939f:	add    dl,dh
   1400193a1:	(bad)  
   1400193a2:	sub    al,0xa8
   1400193a4:	fwait
   1400193a5:	and    BYTE PTR [rax],0x31
   1400193a8:	test   al,0xa2
   1400193aa:	xor    ebx,esp
   1400193ac:	lods   eax,DWORD PTR ds:[rsi]
   1400193ad:	sub    DWORD PTR [rdx],edi
   1400193af:	or     BYTE PTR [rbp-0x1cdec047],bl
   1400193b5:	mov    ecx,0x18dae8ff
   1400193ba:	rex.WRXB (bad) 
   1400193bc:	(bad)  
   1400193bd:	cmp    ecx,0xffffff99
   1400193c0:	pop    rax
   1400193c1:	stos   BYTE PTR es:[rdi],al
   1400193c2:	test   al,0x9a
   1400193c4:	in     eax,0x1f
   1400193c6:	std    
   1400193c7:	cmp    al,0x82
   1400193c9:	sti    
   1400193ca:	cmp    ebp,0x63
   1400193cd:	in     al,0xc7
   1400193cf:	jp     0x140019425
   1400193d1:	mov    ebp,0x4d6a8e26
   1400193d6:	rol    al,0x42
   1400193d9:	push   rbx
   1400193da:	call   FWORD PTR [rdx+0x6b]
   1400193dd:	mov    al,0x4c
   1400193df:	jmp    0x14b07497c
   1400193e4:	dec    BYTE PTR [rcx+0xad5eb0]
   1400193ea:	and    DWORD PTR [rsi-0x68b43a3c],esp
   1400193f0:	mov    ecx,0xef32f978
   1400193f5:	jl     0x1400193f3
   1400193f7:	pop    rbp
   1400193f8:	jl     0x1400193dd
   1400193fa:	out    dx,eax
   1400193fb:	clc    
   1400193fc:	sbb    eax,0xa735eb74
   140019401:	(bad)  
   140019402:	(bad)  
   140019403:	pushf  
   140019404:	sbb    al,0x1f
   140019406:	jae    0x14001947c
   140019408:	sti    
   140019409:	nop
   14001940a:	fwait
   14001940b:	(bad)  
   14001940c:	outs   dx,DWORD PTR ds:[rsi]
   14001940d:	jb     0x1400193fa
   14001940f:	(bad)  
   140019410:	rex.WRB (bad) 
   140019412:	test   BYTE PTR [rdi],0xb8
   140019415:	jne    0x140019482
   140019417:	lahf   
   140019418:	std    
   140019419:	pop    rbx
   14001941a:	(bad)  
   14001941b:	mov    ch,0x2e
   14001941d:	loopne 0x1400193ff
   14001941f:	sbb    bl,0x87
   140019422:	xchg   DWORD PTR [rsi+rcx*8-0x63cc1532],ebp
   140019429:	sahf   
   14001942a:	pushf  
   14001942b:	and    BYTE PTR [rdx],ah
   14001942d:	fdivr  QWORD PTR [rsi]
   14001942f:	cmp    BYTE PTR [rax+0x12db4d00],al
   140019435:	(bad)  
   140019436:	xchg   ebp,eax
   140019437:	out    dx,al
   140019438:	mov    ah,0x74
   14001943b:	cmp    dh,BYTE PTR [rbp-0x1c9ca22c]
   140019441:	and    al,0x2c
   140019443:	mov    bh,0xb6
   140019445:	cdq    
   140019446:	rex.WR cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140019448:	and    BYTE PTR [rcx+0x3b4e62f9],al
   14001944e:	push   rcx
   14001944f:	out    dx,al
   140019450:	(bad)  
   140019451:	jl     0x140019484
   140019453:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019454:	or     ah,ch
   140019456:	in     al,dx
   140019457:	out    dx,al
   140019458:	jno    0x1400194ce
   14001945a:	sti    
   14001945b:	ss (bad) 
   14001945d:	(bad)  
   14001945e:	lock xchg ecx,ebx
   140019461:	jle    0x14001944b
   140019463:	adc    DWORD PTR [rsi+0x7d],ebx
   140019466:	stc    
   140019467:	add    eax,0xed6c74f7
   14001946c:	add    al,0x88
   14001946e:	movabs ds:0xeeb42f74a2a88f5e,eax
   140019477:	rex.WB or BYTE PTR [rip+0x3e81e2eb],sil        # 0x17e837769
   14001947e:	int    0xce
   140019480:	xor    BYTE PTR [rdx-0x3a],dl
   140019483:	pop    rax
   140019484:	(bad)  
   140019485:	(bad)  
   140019486:	adc    BYTE PTR [rdi+0x71],bh
   140019489:	push   rdx
   14001948a:	(bad)  
   14001948b:	xchg   esi,eax
   14001948c:	lahf   
   14001948d:	addr32 in al,0xdb
   140019490:	xlat   BYTE PTR ds:[rbx]
   140019491:	(bad)  
   140019492:	fnstsw WORD PTR [rax+0x53dd807f]
   140019498:	in     eax,0x1d
   14001949a:	enter  0xb128,0x69
   14001949e:	(bad)  
   14001949f:	mov    edx,?
   1400194a1:	add    al,0x57
   1400194a3:	(bad)
   1400194a6:	test   DWORD PTR [rdx+0xca54bae],0x10afdb6b
   1400194b0:	mov    BYTE PTR [rcx+0x68ec6a41],0x5c
   1400194b7:	mov    ch,0x68
   1400194b9:	jne    0x1400194c2
   1400194bb:	mov    r14d,0x804069da
   1400194c1:	clc    
   1400194c2:	jmp    0x17a64f46e
   1400194c7:	(bad)  
   1400194c8:	xchg   ebp,eax
   1400194c9:	and    cl,BYTE PTR [rbx]
   1400194cb:	sub    eax,0x24520772
   1400194d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400194d1:	rex
   1400194d2:	rex.W (bad) 
   1400194d4:	and    BYTE PTR [rdx+0x1b24fd8c],ch
   1400194da:	sbb    BYTE PTR [rdi+rbp*2+0x56],bl
   1400194de:	in     eax,0xf0
   1400194e0:	rex.RB mov r12b,0x80
   1400194e3:	sub    esi,DWORD PTR [rbx]
   1400194e5:	xchg   DWORD PTR [rbp+0x22],edx
   1400194e8:	hlt    
   1400194e9:	fwait
   1400194ea:	ret    0x3674
   1400194ed:	(bad)  
   1400194ee:	rex.WXB (bad) 
   1400194f0:	(bad)  
   1400194f1:	cmc    
   1400194f2:	mov    ecx,0xfd7cf729
   1400194f7:	stos   DWORD PTR es:[rdi],eax
   1400194f8:	mov    ah,0xeb
   1400194fa:	cmp    DWORD PTR [rcx+0x1a],edx
   1400194fd:	mov    edx,0x84ddd64d
   140019502:	in     al,dx
   140019503:	cld    
   140019504:	fwait
   140019505:	and    dl,al
   140019507:	pop    rcx
   140019508:	sbb    ebp,DWORD PTR [rbp-0x6559dfac]
   14001950e:	rex.RXB or eax,0x315b6c51
   140019514:	xlat   BYTE PTR ds:[rbx]
   140019515:	test   al,0xee
   140019517:	xchg   BYTE PTR [rax+0x48d08691],cl
   14001951d:	jp     0x1400194e3
   14001951f:	loop   0x140019523
   140019521:	rex.RX sub al,0x1a
   140019524:	(bad)  
   140019525:	cmp    al,0x44
   140019527:	stos   DWORD PTR es:[rdi],eax
   140019528:	xor    eax,0x68e149a8
   14001952d:	rex.X (bad) 
   14001952f:	sbb    eax,0xcd3e0e0a
   140019534:	loopne 0x14001958c
   140019536:	xor    BYTE PTR [rax+0x78],ch
   140019539:	xchg   DWORD PTR [rsi-0x3b],ebp
   14001953c:	add    ecx,DWORD PTR [rbx+0x15]
   14001953f:	lock push rsi
   140019541:	retf   
   140019542:	movabs ds:0x87622d1ed4b5b01e,eax
   14001954b:	jg     0x140019567
   14001954d:	or     esi,DWORD PTR [rdi+rdx*1-0x3d]
   140019551:	pop    rsp
   140019552:	sbb    bl,dh
   140019554:	jae    0x1400195cb
   140019556:	xor    eax,0xeae65a85
   14001955b:	sar    DWORD PTR [rcx+rbx*1-0x73],1
   14001955f:	lods   eax,DWORD PTR ds:[rsi]
   140019560:	(bad)  
   140019561:	(bad)  
   140019562:	jmp    0xd7a7707d
   140019567:	rex.WX in eax,dx
   140019569:	es rex.R out 0x8b,al
   14001956d:	and    eax,0x8b92f9b3
   140019572:	xchg   edi,eax
   140019573:	out    dx,eax
   140019574:	out    0xa1,al
   140019576:	rex.RXB (bad) 
   140019578:	and    esp,DWORD PTR [rbp-0x129f0ba0]
   14001957e:	jo     0x14001955c
   140019580:	ja     0x1400195bf
   140019582:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019583:	sub    ecx,DWORD PTR [esi-0x17192092]
   14001958a:	call   0x107495cc5
   14001958f:	lods   al,BYTE PTR ds:[rsi]
   140019590:	push   rsi
   140019591:	lods   al,BYTE PTR ds:[esi]
   140019593:	push   rdi
   140019594:	sub    ecx,DWORD PTR [rsi-0x4177172]
   14001959a:	sahf   
   14001959b:	ret    
   14001959c:	sbb    DWORD PTR [rbx-0x64],0xffffff9e
   1400195a0:	pushf  
   1400195a1:	push   rsi
   1400195a2:	or     esp,DWORD PTR [rdi]
   1400195a4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400195a5:	jo     0x140019619
   1400195a7:	jl     0x1400195eb
   1400195a9:	lahf   
   1400195aa:	jnp    0x1400195d7
   1400195ac:	(bad)  
   1400195ad:	push   0xffffffffffffff8d
   1400195af:	push   rsp
   1400195b0:	and    al,0x5a
   1400195b2:	mov    edi,0xcdd81461
   1400195b7:	jp     0x14001955e
   1400195b9:	push   0x2e596fb7
   1400195be:	xchg   edi,eax
   1400195bf:	test   ah,bl
   1400195c1:	jae    0x1400195ba
   1400195c3:	in     eax,0x4b
   1400195c5:	fdivr  QWORD PTR [rdi-0x21]
   1400195c8:	fld    QWORD PTR [rcx+rcx*8+0x23e08072]
   1400195cf:	jrcxz  0x140019603
   1400195d1:	mov    dh,0x39
   1400195d3:	rcl    DWORD PTR [rip+0xffffffffcaf5c181],1        # 0x10af7575a
   1400195d9:	(bad)
   1400195dc:	stc    
   1400195dd:	test   al,0x26
   1400195df:	shl    BYTE PTR [rcx+0xd5ea0b6],1
   1400195e5:	rex.WRX mov r10b,cl
   1400195e8:	ins    BYTE PTR es:[rdi],dx
   1400195e9:	add    ebp,DWORD PTR [rdi+0x22]
   1400195ec:	rex.WXB lea rdi,[r9]
   1400195ef:	sbb    eax,0xe6d04c78
   1400195f4:	xor    ah,dl
   1400195f6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400195f7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400195f8:	sbb    bl,BYTE PTR [rcx+0x539cf3f1]
   1400195fe:	adc    ah,BYTE PTR [rcx+0x308c679e]
   140019604:	jl     0x1400195b4
   140019606:	push   0x7c
   140019608:	mov    edi,0x3684779e
   14001960d:	movabs al,ds:0x2986b45ee73eafba
   140019616:	xor    bl,bh
   140019618:	js     0x1400195a1
   14001961a:	jo     0x140019616
   14001961c:	data16 jns 0x14001961c
   14001961f:	rex.WX (bad) 
   140019621:	mov    bh,0x28
   140019623:	or     BYTE PTR [rdi-0x30010821],0x6e
   14001962a:	in     eax,0x67
   14001962c:	pop    rsi
   14001962d:	sub    eax,0x229afda5
   140019632:	rex.X adc bpl,BYTE PTR [rbp-0x2a]
   140019636:	nop
   140019637:	(bad)  
   140019638:	mov    ah,0x62
   14001963a:	mov    DWORD PTR [rdx+0x56],esp
   14001963d:	jae    0x1400195c3
   14001963f:	idiv   DWORD PTR [rdi+0x23]
   140019642:	mov    ebp,0x73a0a4e4
   140019647:	out    dx,eax
   140019648:	jmp    0x10388018c
   14001964d:	cli    
   14001964e:	lods   al,BYTE PTR ds:[rsi]
   14001964f:	movsxd esi,DWORD PTR [rsi]
   140019651:	lahf   
   140019652:	shl    BYTE PTR [rsi],1
   140019654:	adc    ecx,esi
   140019656:	rex.WRX out 0x3c,eax
   140019659:	sti    
   14001965a:	ret    0x3c8b
   14001965d:	mov    esp,0x1b1345b7
   140019662:	jb     0x140019613
   140019664:	sti    
   140019665:	or     esp,eax
   140019667:	xchg   esp,eax
   140019668:	push   0xffffffff9f684e92
   14001966d:	ret    
   14001966e:	jo     0x14001960e
   140019670:	and    al,0x10
   140019672:	mov    edx,DWORD PTR [rsi]
   140019674:	push   rax
   140019675:	adc    al,0x34
   140019677:	adc    BYTE PTR [rbx-0x3a709eaf],dl
   14001967d:	jbe    0x14001969e
   14001967f:	sbb    cl,BYTE PTR [rax+0x4158211f]
   140019685:	mov    gs,WORD PTR [rbx]
   140019687:	push   rbx
   140019688:	rex.WRXB
   140019689:	ss jnp 0x14001960c
   14001968c:	adc    edi,ebp
   14001968e:	mov    WORD PTR [rdi+0xf],?
   140019691:	sbb    DWORD PTR [rsi],edx
   140019693:	sbb    eax,0x715ebd04
   140019698:	sub    eax,0xc32eb54d
   14001969d:	stos   BYTE PTR es:[rdi],al
   14001969e:	xor    DWORD PTR [rax+0x39],ebx
   1400196a1:	stos   QWORD PTR es:[rdi],rax
   1400196a3:	rex.WRB jb 0x1400196f6
   1400196a6:	fsubr  st,st(7)
   1400196a8:	out    dx,eax
   1400196a9:	(bad)  
   1400196aa:	add    eax,0xfd7cbe6c
   1400196af:	mov    eax,0x58b4e2d
   1400196b4:	push   rsp
   1400196b5:	stos   DWORD PTR es:[rdi],eax
   1400196b6:	es add esp,edi
   1400196b9:	and    al,cl
   1400196bb:	adc    BYTE PTR [rdx+riz*4+0x68],ch
   1400196bf:	test   eax,0xea3f00ed
   1400196c4:	sbb    eax,esi
   1400196c6:	or     ecx,DWORD PTR [rcx-0x2f]
   1400196c9:	lods   eax,DWORD PTR ds:[rsi]
   1400196ca:	(bad)  
   1400196cb:	rex mov ebx,0x590a5308
   1400196d1:	test   BYTE PTR [rsi-0x6ab01715],bh
   1400196d7:	(bad)  
   1400196d8:	fcomi  st,st(5)
   1400196da:	cmp    eax,0xeba3ae9b
   1400196df:	mov    ebx,DWORD PTR [rdx-0x44]
   1400196e2:	jbe    0x1400196aa
   1400196e4:	(bad)  
   1400196e5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400196e6:	cmp    ebx,ebx
   1400196e8:	ja     0x1400196c7
   1400196ea:	rex.WXB mov r12b,0x71
   1400196ed:	cwde   
   1400196ee:	mov    dh,0x13
   1400196f0:	add    al,0xeb
   1400196f2:	(bad)  
   1400196f3:	pop    rsp
   1400196f4:	xchg   BYTE PTR [rsi-0x26],dl
   1400196f7:	push   rdx
   1400196f8:	xor    al,BYTE PTR [rdi+0x47]
   1400196fb:	(bad)  
   1400196fc:	je     0x1400196db
   1400196fe:	xchg   ch,al
   140019700:	jl     0x1400196d0
   140019702:	ins    BYTE PTR es:[rdi],dx
   140019703:	xor    DWORD PTR [rdi],esp
   140019705:	neg    DWORD PTR [rcx+0x4d15b3d3]
   14001970b:	shr    BYTE PTR [rdx+rax*2-0x63bbb291],cl
   140019712:	loopne 0x140019757
   140019714:	mov    BYTE PTR [rcx+rax*4],dl
   140019717:	rex.WRB (bad) 
   140019719:	mov    esp,0xc388fd78
   14001971e:	fld    TBYTE PTR [rdi+0x4d855293]
   140019724:	out    0x5e,eax
   140019726:	movabs ds:0x34481d128322e3c1,eax
   14001972f:	mov    al,BYTE PTR [rcx-0x3b3579dc]
   140019735:	lods   al,BYTE PTR ds:[rsi]
   140019736:	movabs ds:0xd6021d7110c22ee8,al
   14001973f:	data16 jl 0x1400196ee
   140019742:	rex.WRB ret 0x31b9
   140019746:	stos   DWORD PTR es:[rdi],eax
   140019747:	je     0x1400197a6
   140019749:	ja     0x140019768
   14001974b:	add    al,0x6
   14001974d:	push   0xffffffffffffffaf
   14001974f:	jle    0x140019720
   140019751:	adc    DWORD PTR [rdi-0x63],eax
   140019754:	retf   
   140019755:	loopne 0x1400197a1
   140019757:	retf   0x2dae
   14001975a:	adc    BYTE PTR [rdx-0x4c],dl
   14001975d:	(bad)  
   14001975e:	pcmpeqw mm5,QWORD PTR [rdi+0x63]
   140019762:	xchg   ebx,eax
   140019763:	and    DWORD PTR [rcx+0x7681edc2],ebp
   140019769:	push   rbp
   14001976a:	sub    al,0x8a
   14001976c:	ss pop rsp
   14001976e:	mov    DWORD PTR [rcx+riz*1],ecx
   140019771:	retf   
   140019772:	add    BYTE PTR [rcx],ah
   140019774:	pushf  
   140019775:	(bad)  
   140019776:	sub    ebx,edi
   140019778:	pop    rdi
   140019779:	rex.WX int3 
   14001977b:	jle    0x140019728
   14001977d:	(bad)  
   14001977e:	pop    rbx
   14001977f:	adc    al,0xc0
   140019781:	jmp    0x133f55905
   140019786:	(bad)  
   140019787:	sti    
   140019788:	sub    edx,DWORD PTR [rsi+rdi*4]
   14001978b:	rex.RX mov dl,0xc
   14001978e:	xchg   ebx,eax
   14001978f:	shl    WORD PTR [rbx],0xe9
   140019793:	test   DWORD PTR [rcx],esp
   140019795:	(bad)  
   140019796:	(bad)  
   140019797:	mov    ecx,esp
   140019799:	(bad)  
   14001979a:	in     eax,0x4d
   14001979c:	(bad)  
   14001979d:	loopne 0x1400197ec
   14001979f:	mov    edi,0xcd68d68e
   1400197a4:	fiadd  DWORD PTR [rcx+0xb3eca2e]
   1400197aa:	std    
   1400197ab:	(bad)  [rcx]
   1400197ad:	icebp  
   1400197ae:	mov    ebp,0x4e69b12f
   1400197b3:	cmp    DWORD PTR [rdx+0x1d],ebx
   1400197b6:	jb     0x14001978f
   1400197b8:	rex.R rol DWORD PTR [rdx+0x4d],cl
   1400197bc:	xchg   ebx,eax
   1400197bd:	enter  0x201d,0x42
   1400197c1:	fild   DWORD PTR [rax+0x783df420]
   1400197c7:	jg     0x140019808
   1400197c9:	movabs ds:0xe8eb5435fdde06bb,al
   1400197d2:	rex.WR xor rax,0xffffffffbcd45a85
   1400197d8:	mov    bl,0x56
   1400197da:	fadd   QWORD PTR [rax-0x18]
   1400197dd:	(bad)
   1400197e0:	cmp    dh,BYTE PTR [rcx]
   1400197e2:	data16 jb 0x14001982f
   1400197e5:	or     al,0x26
   1400197e7:	and    BYTE PTR [rsi+0x7a],0xbd
   1400197eb:	cmp    DWORD PTR [rbx+0x71],ebx
   1400197ee:	(bad)  
   1400197ef:	ds pop rdx
   1400197f1:	add    al,0x41
   1400197f3:	out    dx,eax
   1400197f4:	(bad)
   1400197f7:	add    eax,0xb0482feb
   1400197fc:	std    
   1400197fd:	or     eax,0x6a3f6d30
   140019802:	xchg   ecx,eax
   140019803:	lods   eax,DWORD PTR ds:[rsi]
   140019804:	(bad)  
   140019805:	mov    al,BYTE PTR [rax+0x62080166]
   14001980b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001980c:	(bad)  
   14001980d:	fsub   st,st(2)
   14001980f:	movabs al,ds:0x2fb0df7e990abfde
   140019818:	adc    BYTE PTR [rsi],al
   14001981a:	push   rdx
   14001981b:	rex.WRXB and QWORD PTR [r9],0x6a8d4eba
   140019822:	xlat   BYTE PTR ds:[rbx]
   140019823:	sahf   
   140019824:	jge    0x140019894
   140019826:	test   eax,0xc5302a91
   14001982b:	xchg   ebp,eax
   14001982c:	cwde   
   14001982d:	(bad)  
   14001982e:	and    DWORD PTR [rcx-0x11],0xffffffbe
   140019832:	out    dx,eax
   140019833:	pop    rcx
   140019834:	outs   dx,DWORD PTR ds:[rsi]
   140019835:	ss je  0x140019891
   140019838:	rol    DWORD PTR [rax-0x29],1
   14001983b:	cmc    
   14001983c:	je     0x140019894
   14001983e:	xor    BYTE PTR [rbx+rcx*4-0x3bbffa2a],dl
   140019845:	mov    bh,0x82
   140019847:	ja     0x140019834
   140019849:	stos   BYTE PTR es:[rdi],al
   14001984a:	sub    eax,0x538380c7
   14001984f:	rex.X or BYTE PTR [rdx],bpl
   140019852:	int3   
   140019853:	xchg   esi,eax
   140019854:	(bad)  
   140019855:	adc    DWORD PTR [rcx],edx
   140019857:	fstp   QWORD PTR [rbp+0x7a]
   14001985a:	rex.WR cmp rax,0x335b7336
   140019860:	or     eax,0x4549cca3
   140019865:	outs   dx,BYTE PTR ds:[rsi]
   140019866:	(bad)  
   140019867:	call   FWORD PTR [rip+0x1e172dad]        # 0x15e18c61a
   14001986d:	adc    ebx,DWORD PTR [rdx]
   14001986f:	rex.WRB mov r8b,0xf8
   140019872:	movabs al,ds:0x143504b8366d38d
   14001987b:	(bad)  
   14001987c:	(bad)  
   14001987d:	push   rdi
   14001987e:	and    BYTE PTR [rsi],bl
   140019880:	cmc    
   140019881:	jle    0x14d49f58b
   140019887:	jge    0x140019822
   140019889:	movabs eax,ds:0xbfde701df7aeb0f3
   140019892:	(bad)  
   140019893:	(bad)  
   140019894:	sbb    ebp,0xffffff97
   140019897:	mov    edi,DWORD PTR [rcx]
   140019899:	(bad)  
   14001989a:	xchg   edi,eax
   14001989b:	nop
   14001989c:	jae    0x140019899
   14001989e:	cli    
   14001989f:	(bad)  
   1400198a0:	jne    0x140019831
   1400198a2:	pop    rcx
   1400198a3:	jne    0x140019864
   1400198a5:	rex.WXB add rax,0xffffffff963f369a
   1400198ab:	(bad)  
   1400198ac:	jne    0x140019871
   1400198ae:	movabs ds:0xdc9bf34d200810c3,eax
   1400198b7:	sti    
   1400198b8:	icebp  
   1400198b9:	retf   
   1400198ba:	cmp    dh,bl
   1400198bc:	movabs ds:0x7f9de76adb7cd600,al
   1400198c5:	stc    
   1400198c6:	cli    
   1400198c7:	(bad)  
   1400198c8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400198c9:	fild   WORD PTR [rax-0x6a]
   1400198cc:	xor    edx,DWORD PTR [rax]
   1400198ce:	shr    DWORD PTR [rax+0x602a8a71],1
   1400198d4:	xchg   si,ax
   1400198d6:	cmp    al,0x2
   1400198d8:	ds in  al,0x46
   1400198db:	in     eax,dx
   1400198dc:	(bad)  
   1400198dd:	(bad)  
   1400198de:	mov    dl,0xb
   1400198e0:	xchg   ebp,eax
   1400198e1:	jmp    0x140019893
   1400198e3:	push   rax
   1400198e4:	addr32 (bad) 
   1400198e6:	shl    DWORD PTR [rsi+0x6560e109],1
   1400198ec:	rex.WXB (bad) 
   1400198ee:	enter  0xc564,0x3
   1400198f2:	neg    ebp
   1400198f4:	(bad)  
   1400198f5:	(bad)  
   1400198f6:	xchg   ebp,eax
   1400198f7:	pop    rbx
   1400198f8:	pop    rsp
   1400198f9:	push   0x19eb088f
   1400198fe:	sub    DWORD PTR [rbp-0x46],eax
   140019901:	jne    0x140019934
   140019903:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019904:	push   rcx
   140019905:	push   0x2f6f63ad
   14001990a:	movsxd ecx,DWORD PTR [r8]
   14001990d:	push   rsi
   14001990e:	out    0x49,al
   140019910:	(bad)  
   140019911:	adc    DWORD PTR [rsi+0x2534cad1],ecx
   140019917:	nop
   140019918:	es rex.B sub eax,0xc147c198
   14001991f:	add    al,0x26
   140019921:	mov    BYTE PTR [rsi-0x24],dh
   140019924:	mov    ch,0x73
   140019926:	mov    cl,BYTE PTR [rdi]
   140019928:	je     0x140019953
   14001992a:	xor    eax,0x8b6c1b2a
   14001992f:	jmp    0x14001993b
   140019931:	xor    eax,DWORD PTR [rbx+0x4c8d4f40]
   140019937:	sub    DWORD PTR [rcx+0x3],ebp
   14001993a:	mov    bl,0xa
   14001993c:	add    DWORD PTR [rax-0x4a],0x8d4150f1
   140019943:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019944:	push   rcx
   140019945:	(bad)  
   140019946:	cmp    DWORD PTR [rbp+0x5c],ebx
   140019949:	movabs eax,ds:0xbd57c3df2a62ad0c
   140019952:	or     DWORD PTR [rcx+0x10],esp
   140019955:	neg    DWORD PTR [rdi+0x19]
   140019958:	xor    al,BYTE PTR [rax]
   14001995a:	fsubr  DWORD PTR [rbx+0x2d415a60]
   140019960:	push   0xffffffffffffff8d
   140019962:	js     0x14001991d
   140019964:	jbe    0x1400199db
   140019966:	pop    rdi
   140019967:	js     0x1400198ed
   140019969:	xor    al,0xb0
   14001996b:	push   0x3c
   14001996d:	mov    cl,0x4d
   14001996f:	rex push rsp
   140019971:	xor    ecx,edi
   140019973:	pop    rsi
   140019974:	(bad)  
   140019975:	(bad)  
   140019976:	or     al,dh
   140019978:	or     BYTE PTR [rax+0xc],al
   14001997b:	push   rsi
   14001997c:	(bad)  
   14001997d:	add    al,0xcd
   14001997f:	add    BYTE PTR [rip+0x2a4c9019],ah        # 0x16a4e299e
   140019985:	mov    edx,0xd115bcd
   14001998a:	fisubr WORD PTR [rcx]
   14001998c:	ret    0x3a10
   14001998f:	mov    ah,0x85
   140019991:	fwait
   140019992:	sahf   
   140019993:	ror    DWORD PTR [rbp+0x41f8ab86],cl
   140019999:	jmp    0x17128f4e3
   14001999e:	es adc esp,edx
   1400199a1:	rex
   1400199a2:	rex.WR
   1400199a3:	movsxd rax,DWORD PTR [r10+0x21]
   1400199a7:	push   rax
   1400199a8:	or     esi,DWORD PTR [rdi+0xc]
   1400199ab:	pop    rsi
   1400199ac:	test   al,0x8b
   1400199ae:	fs xchg esi,eax
   1400199b0:	cdq    
   1400199b1:	rex.B cdq 
   1400199b3:	stos   DWORD PTR es:[rdi],eax
   1400199b4:	add    al,BYTE PTR [rsi+0x1553fa5a]
   1400199ba:	movabs ds:0x636cd3749ccabdae,eax
   1400199c3:	adc    ebp,ebx
   1400199c5:	call   0x12fdf29d6
   1400199ca:	int    0x63
   1400199cc:	xor    esp,ebx
   1400199ce:	(bad)  
   1400199cf:	and    esi,DWORD PTR [rax]
   1400199d1:	fs add ch,0xf9
   1400199d5:	or     BYTE PTR [rbp+0x5d],dh
   1400199d8:	jnp    0x140019a1f
   1400199da:	(bad)  
   1400199db:	ja     0x140019977
   1400199dd:	movabs ds:0x38dfe60888e31006,al
   1400199e6:	xlat   BYTE PTR ds:[rbx]
   1400199e7:	and    al,0xc8
   1400199e9:	out    0x3b,al
   1400199eb:	add    al,0xb7
   1400199ed:	sub    eax,0xf419f363
   1400199f2:	pop    rdx
   1400199f3:	rex.RB
   1400199f4:	rex.RX fistp WORD PTR [rax]
   1400199f7:	pmulhuw mm3,QWORD PTR [rbp-0x4cd741c5]
   1400199fe:	call   0x13b7a8946
   140019a03:	mov    eax,edi
   140019a05:	imul   ecx,DWORD PTR [rbp-0x43],0xffffff89
   140019a09:	rex.RXB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019a0b:	fwait
   140019a0c:	test   al,0xfe
   140019a0e:	jbe    0x140019a5a
   140019a10:	stos   BYTE PTR es:[rdi],al
   140019a11:	cmp    ebx,eax
   140019a13:	(bad)  
   140019a14:	mov    ebx,0x39fc717
   140019a19:	fs jbe 0x140019a0e
   140019a1c:	int3   
   140019a1d:	nop
   140019a1e:	xor    eax,ebx
   140019a20:	fisub  WORD PTR [rdi-0x2ca2a41e]
   140019a26:	ret    0x7762
   140019a29:	leave  
   140019a2a:	jmp    0x12cc9d9fe
   140019a2f:	mov    ecx,0xbbd8f1f7
   140019a34:	out    dx,al
   140019a35:	in     eax,0xc6
   140019a37:	fstp   TBYTE PTR [rdi-0x7a]
   140019a3a:	mov    dl,0x12
   140019a3c:	rol    DWORD PTR es:[rsi+0x40b504d4],cl
   140019a43:	rex.RB in eax,0x6b
   140019a46:	add    bl,dl
   140019a48:	xchg   edx,eax
   140019a49:	pop    rbx
   140019a4a:	hlt    
   140019a4b:	(bad)  
   140019a4c:	rex.XB sub DWORD PTR [r8-0x21],ecx
   140019a50:	sub    eax,DWORD PTR [rcx+0x5c842fa5]
   140019a56:	push   0x26d30a3
   140019a5b:	rex.WRB sub BYTE PTR [r10+rdx*2+0x19ade868],r14b
   140019a63:	scas   eax,DWORD PTR es:[rdi]
   140019a64:	pop    rax
   140019a65:	movabs ds:0x200ee54bf7bd6c90,eax
   140019a6e:	rex (bad) 
   140019a70:	xchg   edx,eax
   140019a71:	(bad)  
   140019a72:	test   r14,rcx
   140019a75:	neg    BYTE PTR [rcx]
   140019a77:	gs retf 
   140019a79:	adc    eax,0x67552de8
   140019a7e:	test   eax,0x25568a52
   140019a83:	(bad)  
   140019a84:	lahf   
   140019a85:	add    edi,DWORD PTR [rdx-0x70]
   140019a88:	mov    esi,0x39fb7a10
   140019a8d:	rex.XB call 0x11b35f700
   140019a93:	test   eax,0xf402480a
   140019a98:	(bad)  
   140019a99:	hlt    
   140019a9a:	movabs ds:0xef6a79dbd03dbfa5,al
   140019aa3:	jle    0x140019a76
   140019aa5:	ds jl  0x140019aed
   140019aa8:	adc    bl,bl
   140019aaa:	push   rax
   140019aab:	mov    r12d,DWORD PTR [rcx+0x366fa2d4]
   140019ab2:	sbb    eax,0xd0af4f9e
   140019ab7:	pushf  
   140019ab8:	push   rax
   140019ab9:	(bad)  
   140019aba:	loopne 0x140019a6c
   140019abc:	int3   
   140019abd:	rex.RXB push r8
   140019abf:	sbb    BYTE PTR [rip+0xffffffff9f5dae13],ch        # 0xdf5f48d8
   140019ac5:	sub    eax,0x911e2eea
   140019aca:	ja     0x140019ad1
   140019acc:	loop   0x140019af2
   140019ace:	sub    BYTE PTR [rdi],cl
   140019ad0:	js     0x140019aeb
   140019ad2:	ror    BYTE PTR [rbx],cl
   140019ad4:	(bad)  
   140019ad5:	(bad)  
   140019ad6:	xchg   ebx,eax
   140019ad7:	sti    
   140019ad8:	es sub al,0x31
   140019adb:	(bad)  
   140019adc:	push   rdx
   140019add:	rex.WX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019adf:	adc    al,0x49
   140019ae1:	(bad)  
   140019ae2:	pop    rsi
   140019ae3:	mov    al,0xf7
   140019ae5:	movsxd esp,DWORD PTR [rcx+rbx*2]
   140019ae8:	jae    0x140019a75
   140019aea:	jae    0x140019a78
   140019aec:	mov    ebx,0x105d73fa
   140019af1:	push   rbp
   140019af2:	sbb    DWORD PTR [rbx-0x58],eax
   140019af5:	pop    rbp
   140019af6:	jno    0x140019afe
   140019af8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019af9:	xor    eax,0x437e03b8
   140019afe:	(bad)  
   140019aff:	not    al
   140019b01:	rol    bl,0x46
   140019b04:	and    BYTE PTR [rcx+riz*4+0x535baeab],al
   140019b0b:	(bad)  
   140019b0c:	fnstsw ax
   140019b0e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019b0f:	sbb    ebx,esi
   140019b11:	ja     0x140019b57
   140019b13:	xor    al,0xde
   140019b15:	test   eax,0xaa4cc7d7
   140019b1a:	push   rdx
   140019b1b:	sbb    al,0xd9
   140019b1d:	mov    ebx,0xc639eb18
   140019b22:	rex.WX pop rax
   140019b24:	lea    ebx,[rbp+0x34]
   140019b27:	and    ebp,eax
   140019b29:	push   rsi
   140019b2a:	xchg   ecx,eax
   140019b2b:	(bad)  
   140019b2c:	xchg   ah,dh
   140019b2e:	cmp    eax,edx
   140019b30:	push   rbx
   140019b31:	(bad)  
   140019b32:	(bad)  
   140019b33:	leave  
   140019b34:	movabs ds:0xc1de802cf5e7a39d,al
   140019b3d:	(bad)  
   140019b3e:	adc    DWORD PTR [rax+0xb78f8af],edi
   140019b44:	add    al,BYTE PTR [rax]
   140019b46:	clc    
   140019b47:	mov    eax,0x136f2fc8
   140019b4c:	mov    fs,WORD PTR [rbp+0xb255b2f]
   140019b52:	or     DWORD PTR [rax+0x1d3521b1],ecx
   140019b58:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019b59:	jae    0x140019b5e
   140019b5b:	jmp    0x1501a02b0
   140019b60:	(bad)  
   140019b61:	mov    ebp,0x8184828e
   140019b66:	ror    DWORD PTR [rbp+0x8],0xa3
   140019b6a:	(bad)  
   140019b6b:	sbb    DWORD PTR [rdx-0x6c54fdf1],eax
   140019b71:	mov    ds,ebp
   140019b73:	mov    edx,DWORD PTR [rbx]
   140019b75:	outs   dx,BYTE PTR cs:[rsi]
   140019b77:	(bad)  
   140019b79:	loope  0x140019b42
   140019b7b:	es in  al,0xe3
   140019b7e:	pop    rbp
   140019b7f:	out    dx,al
   140019b80:	sahf   
   140019b81:	mov    ch,0x9c
   140019b83:	xor    eax,0xfa70857
   140019b88:	mov    cl,0xb3
   140019b8a:	(bad)  
   140019b8b:	movsxd esi,DWORD PTR [rbp-0x6a]
   140019b8e:	pop    rcx
   140019b8f:	ins    BYTE PTR es:[rdi],dx
   140019b90:	rex.WRXB and r11,r13
   140019b93:	ror    BYTE PTR [rdx+0x10],0x64
   140019b97:	or     ah,BYTE PTR [rdi]
   140019b99:	stos   DWORD PTR es:[rdi],eax
   140019b9a:	ret    0xe1f1
   140019b9d:	xchg   BYTE PTR [rbp+0x36da334b],bh
   140019ba3:	push   0x77
   140019ba5:	pop    rsi
   140019ba6:	test   BYTE PTR [rdx+rdx*1-0x359331a3],dl
   140019bad:	mov    ch,BYTE PTR [rsi-0x11]
   140019bb0:	cmp    edx,edx
   140019bb2:	jmp    0xd9746034
   140019bb7:	stc    
   140019bb8:	(bad)  
   140019bb9:	retf   
   140019bba:	rex.XB cmc 
   140019bbc:	ds sti 
   140019bbe:	xchg   edx,eax
   140019bbf:	sub    ecx,ebx
   140019bc1:	fadd   DWORD PTR [rbp+0x79c5ab76]
   140019bc7:	add    ch,BYTE PTR [rsi-0x4f224c02]
   140019bcd:	(bad)  
   140019bce:	mov    ecx,ss
   140019bd0:	je     0x140019b7a
   140019bd2:	ss (bad) 
   140019bd4:	fisttp WORD PTR [rsi]
   140019bd6:	sub    dh,BYTE PTR [rdx+0x18]
   140019bd9:	fiadd  DWORD PTR [rsi+0x14037483]
   140019bdf:	je     0x140019b69
   140019be1:	(bad)  
   140019be2:	(bad)  
   140019be3:	sub    cl,BYTE PTR [rsi+0x553d756a]
   140019be9:	xor    al,0xf8
   140019beb:	jle    0x140019bd4
   140019bed:	pop    rbx
   140019bee:	sbb    QWORD PTR [rip+0x5690fab8],rsp        # 0x1969296ad
   140019bf5:	(bad)  
   140019bf6:	fwait
   140019bf7:	gs cwde 
   140019bf9:	test   BYTE PTR [rbx+0x61],dh
   140019bfc:	je     0x140019bb1
   140019bfe:	rcl    ch,1
   140019c00:	retf   0x7a2b
   140019c03:	jae    0x140019bdc
   140019c05:	rex.WRX imul r15,QWORD PTR [rsi-0x6e8432bd],0xffffffffeaa7c9a1
   140019c10:	cmp    dl,BYTE PTR [rdi]
   140019c12:	jle    0x140019c68
   140019c14:	push   rcx
   140019c15:	mov    WORD PTR [rsi-0x13add4ef],?
   140019c1b:	jbe    0x140019be3
   140019c1d:	ror    edi,0xd1
   140019c20:	mov    bl,0x99
   140019c22:	mov    ch,0x1d
   140019c24:	xlat   BYTE PTR ds:[rbx]
   140019c25:	sbb    eax,DWORD PTR [rbx+rdi*8]
   140019c28:	cmp    eax,0x1f509a86
   140019c2d:	ins    BYTE PTR es:[rdi],dx
   140019c2e:	rex.RB pop r13
   140019c30:	adc    al,0x2a
   140019c32:	add    BYTE PTR [rcx],ch
   140019c34:	(bad)  
   140019c36:	out    dx,al
   140019c37:	add    ah,BYTE PTR [rsi+0x5190c05]
   140019c3d:	sbb    ebp,DWORD PTR [rdi-0x16439fb8]
   140019c43:	mov    BYTE PTR [rbx+0x535b07e7],dh
   140019c49:	mov    esp,0x7de885a7
   140019c4e:	xchg   esi,eax
   140019c4f:	xor    BYTE PTR [rax],ah
   140019c51:	stos   DWORD PTR es:[rdi],eax
   140019c52:	(bad)  
   140019c53:	cli    
   140019c54:	ret    
   140019c55:	sub    BYTE PTR [rbx-0x549f79b0],al
   140019c5b:	lea    ebx,[rdi+0x74]
   140019c5e:	and    DWORD PTR [rbp+0x43573a67],esi
   140019c64:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019c65:	xchg   ecx,eax
   140019c66:	rex.RB jge 0x140019ccf
   140019c69:	movabs ds:0xc18b82677710765,eax
   140019c72:	push   0x717d03ce
   140019c77:	sbb    al,0x5c
   140019c79:	xchg   esp,eax
   140019c7a:	adc    DWORD PTR [rax+0x39],eax
   140019c7d:	mov    edi,0x9ca2a941
   140019c82:	sub    dh,BYTE PTR [rdi*2+0x7f2a3dee]
   140019c89:	out    0x8e,eax
   140019c8b:	(bad)  
   140019c8c:	stos   BYTE PTR es:[rdi],al
   140019c8d:	add    BYTE PTR [rsi-0x53],ch
   140019c90:	repnz iret 
   140019c92:	(bad)  
   140019c93:	(bad)  
   140019c94:	mov    eax,0x62ad8451
   140019c99:	(bad)  
   140019c9a:	sub    BYTE PTR [rax+rbp*2],dh
   140019c9d:	adc    eax,DWORD PTR [rdi-0x3cad8a68]
   140019ca3:	enter  0xc367,0xa6
   140019ca7:	int    0x26
   140019ca9:	(bad)
   140019cac:	out    0x67,al
   140019cae:	sbb    esp,esi
   140019cb0:	sti    
   140019cb1:	movabs al,ds:0xe6759b0872521831
   140019cba:	call   0x105d0621f
   140019cbf:	and    eax,0x565ee17b
   140019cc4:	lahf   
   140019cc5:	fldenv [rcx-0x26580904]
   140019ccb:	stc    
   140019ccc:	ror    BYTE PTR [rbx],0xdc
   140019ccf:	cld    
   140019cd0:	leave  
   140019cd1:	and    eax,0x4c997b89
   140019cd6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019cd7:	sbb    al,0x5e
   140019cd9:	cmp    eax,0x42bbb0e5
   140019cde:	ficomp DWORD PTR [rsi-0x4d]
   140019ce1:	mov    BYTE PTR [rbx],bh
   140019ce3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019ce4:	sub    DWORD PTR [rbp+0x66],0x7b
   140019ce8:	jnp    0x140019cc6
   140019cea:	(bad)  
   140019ceb:	fidiv  DWORD PTR [rcx-0x28e4291a]
   140019cf1:	cmp    BYTE PTR [rbp+0x4f138957],cl
   140019cf7:	fbld   TBYTE PTR [rip+0xffffffff9f66bef6]        # 0xdf685bf3
   140019cfd:	popf   
   140019cfe:	int    0x65
   140019d00:	ss mov ebp,0x77dc30ee
   140019d06:	(bad)  
   140019d07:	xor    dl,BYTE PTR fs:[rdx-0x6965b399]
   140019d0e:	mov    ebp,0x75596ed
   140019d13:	(bad)  
   140019d14:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019d15:	mov    ebp,0xb6a4e6d
   140019d1a:	(bad)  
   140019d1b:	or     ah,ah
   140019d1d:	push   0xffffffffefe82a4a
   140019d22:	rcl    DWORD PTR [rsi],1
   140019d24:	popf   
   140019d25:	lods   eax,DWORD PTR ds:[rsi]
   140019d26:	(bad)  
   140019d27:	repnz rex.W (bad) 
   140019d2a:	add    al,0xd7
   140019d2c:	(bad)  
   140019d2d:	(bad)
   140019d30:	cmp    BYTE PTR [rsp+rdi*2-0x4f],0xd5
   140019d35:	mov    dl,0xa0
   140019d37:	sub    ah,BYTE PTR [rbx-0xed2bbfe]
   140019d3d:	cmc    
   140019d3e:	loope  0x140019d51
   140019d40:	jrcxz  0x140019d56
   140019d42:	jns    0x140019d82
   140019d44:	fcomp  st(5)
   140019d46:	add    BYTE PTR [rbx-0x7e1c6cd9],bh
   140019d4c:	add    DWORD PTR [rdi+0x30],esp
   140019d4f:	cmp    al,0x6
   140019d51:	imul   ebp,DWORD PTR [rsi+0x5a59311],0xfffffffd
   140019d58:	lahf   
   140019d59:	in     eax,dx
   140019d5a:	add    DWORD PTR [rax],edx
   140019d5c:	rex.X in eax,dx
   140019d5e:	add    ah,ah
   140019d60:	fadd   QWORD PTR [rcx]
   140019d62:	cmp    eax,0x7d6f58bf
   140019d67:	adc    eax,0x6ec2e2f8
   140019d6c:	(bad)  
   140019d6d:	fs scas eax,DWORD PTR es:[rdi]
   140019d6f:	adc    dh,BYTE PTR [rbp+riz*8+0x64]
   140019d73:	or     eax,0x33707d7
   140019d78:	mov    ebx,0xc6061f07
   140019d7d:	mov    dh,0x7c
   140019d7f:	push   rax
   140019d80:	cwde   
   140019d81:	sbb    DWORD PTR [rbx+0x62],0xffffffb9
   140019d85:	jno    0x140019d9b
   140019d87:	rcl    DWORD PTR [rdx+rdx*2-0x73],0xc
   140019d8c:	mov    ch,BYTE PTR [rax-0x4d]
   140019d8f:	fst    DWORD PTR [rax]
   140019d91:	ret    0x8d56
   140019d94:	mov    BYTE PTR [rbx],ch
   140019d96:	add    DWORD PTR [rdi+0x46],0x3e5323d9
   140019d9d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019d9e:	mov    cl,0xd
   140019da0:	outs   dx,DWORD PTR ds:[rsi]
   140019da1:	stos   BYTE PTR es:[rdi],al
   140019da2:	ret    0xae8b
   140019da5:	rex.WR or rax,0x6edfbbe6
   140019dab:	fcomip st,st(7)
   140019dad:	sbb    eax,0xe7b99d85
   140019db2:	retf   0x6bd8
   140019db5:	std    
   140019db6:	(bad)  
   140019db7:	gs cmp al,0x4
   140019dba:	pop    rsi
   140019dbb:	ins    DWORD PTR es:[rdi],dx
   140019dbc:	mov    ecx,0xce71a356
   140019dc1:	ja     0x140019df3
   140019dc3:	mov    bh,0x43
   140019dc5:	xchg   ecx,eax
   140019dc6:	mov    edi,DWORD PTR [rbx]
   140019dc8:	(bad)  
   140019dc9:	ret    
   140019dca:	inc    edi
   140019dcc:	(bad)  
   140019dcd:	movabs ds:0x1340b7da1cac3866,al
   140019dd6:	mov    ebx,0x4e7eda89
   140019ddb:	push   0xfffffffffffffffa
   140019ddd:	iret   
   140019dde:	xlat   BYTE PTR ds:[rbx]
   140019ddf:	(bad)  
   140019de0:	ins    DWORD PTR es:[rdi],dx
   140019de1:	(bad)  
   140019de2:	pop    rax
   140019de3:	jae    0x140019d6c
   140019de5:	(bad)  
   140019de6:	(bad)  
   140019de7:	stos   BYTE PTR es:[rdi],al
   140019de8:	add    BYTE PTR [rsi],cl
   140019dea:	(bad)  
   140019deb:	cli    
   140019dec:	lahf   
   140019ded:	js     0x140019ddc
   140019def:	loop   0x140019e04
   140019df1:	fistp  QWORD PTR [rdi+0x73]
   140019df4:	(bad)  
   140019df5:	xchg   edi,eax
   140019df6:	rex.RXB pop r13
   140019df8:	cmp    eax,0x4d491885
   140019dfd:	and    ah,BYTE PTR [rdi]
   140019dff:	iret   
   140019e00:	stos   DWORD PTR es:[rdi],eax
   140019e01:	mov    edx,0x8534d794
   140019e06:	or     al,al
   140019e08:	or     BYTE PTR [rsi],dh
   140019e0a:	push   rbp
   140019e0b:	add    al,ah
   140019e0d:	add    DWORD PTR [rsi+0x47d1f32a],0x4c
   140019e14:	adc    dl,ah
   140019e16:	and    ch,BYTE PTR [rdi-0x637584b2]
   140019e1c:	xor    DWORD PTR [rbx+0x4c],ebx
   140019e1f:	cdq    
   140019e20:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019e21:	sub    eax,0x2ef13f8e
   140019e26:	mov    ?,WORD PTR [rdi]
   140019e28:	lock xor esi,ecx
   140019e2b:	fidivr WORD PTR [rcx-0x7d]
   140019e2e:	imul   esi,DWORD PTR [rdi],0x1f
   140019e31:	rex.RB cli 
   140019e33:	rex.WR fldl2t 
   140019e36:	cwde   
   140019e37:	mov    ebp,0x4d5c73e7
   140019e3c:	rex.WRXB icebp 
   140019e3e:	(bad)  
   140019e3f:	(bad)  
   140019e40:	out    dx,eax
   140019e41:	out    0xf4,eax
   140019e43:	(bad)  
   140019e44:	ds retf 0x9b4
   140019e48:	ins    BYTE PTR es:[rdi],dx
   140019e49:	iret   
   140019e4a:	sbb    esp,DWORD PTR [rdx]
   140019e4c:	cmp    DWORD PTR [rsi-0x440a4e64],0x796521ff
   140019e56:	rex.W fild DWORD PTR [rsi+0x16]
   140019e5a:	mov    ebx,DWORD PTR [rcx]
   140019e5c:	xchg   edi,eax
   140019e5d:	repnz cmp edi,DWORD PTR [rax+0x676f23f2]
   140019e64:	cmp    ch,BYTE PTR [rbp-0x18]
   140019e67:	cli    
   140019e68:	mov    cs,WORD PTR [rbp-0x5]
   140019e6b:	or     dl,BYTE PTR [rdi]
   140019e6d:	lahf   
   140019e6e:	cld    
   140019e6f:	cmp    al,0x8b
   140019e71:	mov    esp,0x2f67cdcd
   140019e76:	jae    0x140019e75
   140019e78:	test   edi,eax
   140019e7a:	mov    ecx,0xa45b6dfb
   140019e7f:	rex.RB ret 
   140019e81:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019e82:	sub    esi,esp
   140019e84:	popf   
   140019e85:	ss (bad) 
   140019e87:	xchg   ebp,eax
   140019e88:	pop    rsi
   140019e89:	cmp    DWORD PTR [rdx],ecx
   140019e8b:	(bad)  
   140019e8c:	rcl    BYTE PTR [rbp+0x79a402a2],1
   140019e92:	pop    rsp
   140019e93:	jg     0x140019ec5
   140019e95:	pop    rbx
   140019e96:	(bad)  
   140019e97:	shl    ecx,0xa3
   140019e9a:	or     al,0xd3
   140019e9c:	out    dx,eax
   140019e9d:	push   rdx
   140019e9e:	stos   BYTE PTR es:[rdi],al
   140019e9f:	add    eax,DWORD PTR [rbp-0x14656f15]
   140019ea5:	addr32 mov al,0xec
   140019ea8:	xor    eax,0xaf1fe09b
   140019ead:	test   eax,0x5064612a
   140019eb2:	test   al,0x8d
   140019eb4:	movabs eax,ds:0x8bf2f22005ec5d05
   140019ebd:	(bad)  
   140019ebe:	bnd rex.WRXB jg 0x140019ea4
   140019ec2:	(bad)  
   140019ec3:	sub    BYTE PTR [rcx-0x28],bl
   140019ec6:	mov    ebp,0xeeeec7b0
   140019ecb:	(bad)  
   140019ecc:	cmp    edi,DWORD PTR [rbx+0x4ae7ccbb]
   140019ed2:	repz popf 
   140019ed4:	rex.WR
   140019ed5:	rex.WR cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   140019ed8:	push   rbx
   140019ed9:	fisub  DWORD PTR [rsi-0x5a6a925b]
   140019edf:	xlat   BYTE PTR ds:[rbx]
   140019ee0:	fnstcw WORD PTR [rsi+0x262d0585]
   140019ee6:	push   0x12
   140019ee8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019ee9:	and    al,0xc4
   140019eeb:	cwde   
   140019eec:	xor    eax,0x2cd12283
   140019ef1:	js     0x140019f0c
   140019ef3:	outs   dx,BYTE PTR ds:[rsi]
   140019ef4:	test   eax,0x6bf38022
   140019ef9:	data16 sub al,0xfc
   140019efc:	scas   al,BYTE PTR es:[rdi]
   140019efd:	imul   DWORD PTR [rdx+0x29]
   140019f00:	mov    ecx,0x70daad8c
   140019f05:	mov    eax,ss
   140019f07:	mov    edx,0x9b05b60a
   140019f0c:	jae    0x140019f3c
   140019f0e:	sbb    al,0xde
   140019f10:	ds loop 0x140019ec1
   140019f13:	mov    ebx,0x7189802e
   140019f18:	sbb    BYTE PTR [rdx],0xe9
   140019f1b:	neg    esi
   140019f1d:	fld    QWORD PTR [rcx]
   140019f1f:	in     eax,dx
   140019f20:	jmp    0x19ac2e9d4
   140019f25:	jg     0x140019f81
   140019f27:	rex.XB
   140019f28:	rex.WRX xchg rsp,r13
   140019f2b:	xchg   ebp,eax
   140019f2c:	add    esp,DWORD PTR [rax-0x3e]
   140019f2f:	and    eax,0xc0236e36
   140019f34:	(bad)  
   140019f35:	ja     0x140019f74
   140019f37:	(bad)  
   140019f39:	(bad)  
   140019f3a:	fbstp  TBYTE PTR [rdi]
   140019f3c:	stos   BYTE PTR es:[rdi],al
   140019f3d:	loope  0x140019f8f
   140019f3f:	mov    eax,0x6bb4d03b
   140019f44:	movabs al,ds:0xcd782f8f7233dfcf
   140019f4d:	adc    BYTE PTR [rbp-0x77377d66],cl
   140019f53:	mov    al,0x54
   140019f55:	adc    eax,0x2356bb83
   140019f5a:	(bad)  
   140019f5b:	mov    edi,0xccdf0746
   140019f60:	sub    al,0xc
   140019f62:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019f63:	adc    bh,bl
   140019f65:	xor    al,0xea
   140019f67:	pop    rdi
   140019f68:	stc    
   140019f69:	icebp  
   140019f6a:	rex.RB adc eax,0xe07c4000
   140019f70:	loop   0x140019f99
   140019f72:	in     eax,0xb9
   140019f74:	jmp    0x140019f65
   140019f76:	xchg   edi,eax
   140019f77:	ds (bad) 
   140019f79:	leave  
   140019f7a:	rex.RB
   140019f7b:	rex.WXB imul rbx,QWORD PTR [r11+0x120d4c44],0x6d
   140019f83:	mov    ebp,ebp
   140019f85:	(bad)  
   140019f86:	enter  0x4deb,0xd6
   140019f8a:	cs test eax,0x145433c3
   140019f90:	(bad)  
   140019f91:	test   eax,0xa3fa334f
   140019f96:	jge    0x140019f27
   140019f98:	cli    
   140019f99:	and    ebx,DWORD PTR [rbx+0x3d8c4cb3]
   140019f9f:	fstp   TBYTE PTR [rbx]
   140019fa1:	or     esp,DWORD PTR [rsi+0x67b382fd]
   140019fa7:	mov    edi,0xfd37c58e
   140019fac:	and    al,0x7
   140019fae:	jmp    0x140019f4f
   140019fb0:	jrcxz  0x140019f88
   140019fb2:	leave  
   140019fb3:	sub    eax,0x6ef87e1e
   140019fb8:	mov    dh,0xd3
   140019fba:	mov    ebp,0xb9479bb4
   140019fbf:	jp     0x140019fac
   140019fc1:	repz int3 
   140019fc3:	ss (bad) 
   140019fc6:	(bad)  
   140019fc7:	hlt    
   140019fc8:	xchg   esp,eax
   140019fc9:	mov    ebx,0x7f61daef
   140019fce:	dec    DWORD PTR [rax-0x14437150]
   140019fd4:	movabs eax,ds:0x96fa1cff2ba9f277
   140019fdd:	xor    edx,DWORD PTR [rsi-0x44]
   140019fe0:	cli    
   140019fe1:	(bad)  
   140019fe2:	movsxd esi,DWORD PTR [rax+0x24d22da]
   140019fe8:	(bad)  
   140019fe9:	fwait
   140019fea:	pop    rbx
   140019feb:	rex.WR (bad) 
   140019fed:	jge    0x140019f85
   140019fef:	clc    
   140019ff0:	neg    BYTE PTR [rdi-0x1a]
   140019ff3:	fiadd  WORD PTR [rdi]
   140019ff5:	or     cl,BYTE PTR [rdi+0x7e51e07c]
   140019ffb:	hlt    
   140019ffc:	jg     0x14001a03d
   140019ffe:	and    DWORD PTR [rbx+rsi*8],edi
   14001a001:	or     eax,0x16242f2c
   14001a006:	retf   
   14001a007:	xchg   esi,eax
   14001a008:	cmp    al,0x81
   14001a00a:	cmp    BYTE PTR [rcx-0x64],cl
   14001a00d:	popf   
   14001a00e:	jne    0x14001a024
   14001a010:	cmp    ecx,0xd3fbb5bc
   14001a016:	test   al,0xee
   14001a018:	(bad)  [rdx+0x7b]
   14001a01b:	fucomi st,st(1)
   14001a01d:	sub    eax,0x110c535b
   14001a022:	mov    esi,DWORD PTR [rdi+0x60]
   14001a025:	sbb    eax,0x8dde1483
   14001a02a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a02b:	jge    0x140019ffd
   14001a02d:	add    BYTE PTR [rbx],ah
   14001a02f:	fs push rsp
   14001a031:	pop    rcx
   14001a032:	xor    DWORD PTR [rsi+0x9],0x7a0e500b
   14001a039:	xor    DWORD PTR [rax+rbx*4+0x2c],edx
   14001a03d:	(bad)  
   14001a03e:	in     eax,dx
   14001a03f:	(bad)  
   14001a040:	addr32 mov ebx,0xf05b58f9
   14001a046:	fild   DWORD PTR [rdi+0x1b]
   14001a049:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a04a:	mov    bl,0x19
   14001a04c:	(bad)  
   14001a04d:	mov    bh,0x6f
   14001a04f:	xrelease mov DWORD PTR [rdi+0x574e39fb],ebx
   14001a056:	addr32 pushf 
   14001a058:	sbb    al,0x1d
   14001a05a:	xchg   ecx,eax
   14001a05b:	jae    0x14001a0c3
   14001a05d:	mov    cl,0xb5
   14001a05f:	fs mov cl,0x5c
   14001a062:	mov    dl,0xb5
   14001a064:	mov    ch,0xc3
   14001a066:	(bad)  
   14001a067:	div    BYTE PTR [rsi]
   14001a069:	mov    esp,ebp
   14001a06b:	xchg   edx,eax
   14001a06c:	(bad)
   14001a06f:	ret    0xbfe8
   14001a072:	mov    edi,ecx
   14001a074:	xchg   edx,eax
   14001a075:	stc    
   14001a076:	(bad)  
   14001a077:	(bad)  
   14001a078:	(bad)  
   14001a079:	mov    ecx,0xa33a64c5
   14001a07e:	popf   
   14001a07f:	int    0xd8
   14001a081:	hlt    
   14001a082:	rex.WX (bad) 
   14001a084:	rex.WRX xor QWORD PTR [rcx+0x4c],r8
   14001a088:	mov    ah,0x29
   14001a08a:	xor    bl,BYTE PTR [rbp-0x2fc4cab4]
   14001a090:	ja     0x14001a0ec
   14001a092:	lea    ebx,[rcx+0x2aaa0d4b]
   14001a098:	loopne 0x14001a10b
   14001a09a:	xor    dl,bl
   14001a09c:	or     BYTE PTR [rdx],0x6a
   14001a09f:	add    r8,QWORD PTR [r11-0x11]
   14001a0a3:	cld    
   14001a0a4:	rex.B or eax,0xd544bbb8
   14001a0aa:	movabs eax,ds:0xef3586646a975ce7
   14001a0b3:	retf   0x5305
   14001a0b6:	cs and al,bl
   14001a0b9:	mov    edx,0xdfe13452
   14001a0be:	sbb    BYTE PTR [rdx-0x7e],dl
   14001a0c1:	jne    0x14001a050
   14001a0c3:	push   rbp
   14001a0c4:	adc    al,r14b
   14001a0c7:	in     al,dx
   14001a0c8:	rex.WX jo 0x14001a04e
   14001a0cb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a0cc:	add    esi,ebp
   14001a0ce:	pop    rdx
   14001a0cf:	mov    edx,0x5fdd70e2
   14001a0d4:	mov    cl,0xd8
   14001a0d6:	cmp    BYTE PTR [rbp+0x4f],0x3d
   14001a0da:	adc    eax,DWORD PTR [rbp+0x7d21d1ec]
   14001a0e0:	lods   eax,DWORD PTR ds:[rsi]
   14001a0e1:	sbb    dh,BYTE PTR [rbx+rdi*8+0x2b4a6297]
   14001a0e8:	pushf  
   14001a0e9:	xchg   ebx,eax
   14001a0ea:	(bad)  
   14001a0eb:	xor    DWORD PTR [rdi-0x46],0xe
   14001a0ef:	loop   0x14001a119
   14001a0f1:	pop    rbx
   14001a0f2:	loope  0x14001a0a9
   14001a0f4:	add    al,0x16
   14001a0f6:	(bad)  
   14001a0f7:	test   al,0x77
   14001a0f9:	call   QWORD PTR [rsi-0x23]
   14001a0fc:	jns    0x14001a0c5
   14001a0fe:	mov    gs,WORD PTR [rdi]
   14001a100:	test   eax,0xee6e8e00
   14001a105:	push   QWORD PTR [rax-0x76]
   14001a108:	jmp    0x11a5e369c
   14001a10d:	rcl    BYTE PTR [rdi],cl
   14001a10f:	push   rdx
   14001a110:	stos   DWORD PTR es:[rdi],eax
   14001a111:	shl    esp,1
   14001a113:	fadd   DWORD PTR [rdx+rsi*2+0x6a]
   14001a117:	movabs al,ds:0xe1d9874a3fb523f4
   14001a120:	ins    DWORD PTR es:[rdi],dx
   14001a121:	xor    bl,ch
   14001a123:	add    al,0xc3
   14001a125:	mov    al,0xe8
   14001a127:	int    0xd4
   14001a129:	cmp    ecx,edx
   14001a12b:	(bad)
   14001a12e:	jle    0x14001a0be
   14001a130:	cmc    
   14001a131:	imul   eax,DWORD PTR [rdi+0x4a],0x3993266b
   14001a138:	jb     0x14001a1b7
   14001a13a:	(bad)  
   14001a13b:	cld    
   14001a13c:	imul   ebp,edi,0x65
   14001a13f:	div    edx
   14001a141:	fstp   TBYTE PTR [rax-0x18]
   14001a144:	sbb    eax,0xfd3fe8d7
   14001a149:	xor    eax,0x708cfabc
   14001a14e:	fistp  QWORD PTR [rbx]
   14001a150:	(bad)  
   14001a151:	jo     0x14001a150
   14001a153:	fidivr WORD PTR [rdi-0x38]
   14001a156:	out    dx,al
   14001a157:	xlat   BYTE PTR ds:[rbx]
   14001a158:	(bad)  
   14001a159:	vpackuswb xmm7,xmm2,XMMWORD PTR [rsi-0x78ce376f]
   14001a161:	scas   eax,DWORD PTR es:[rdi]
   14001a162:	(bad)  
   14001a163:	adc    DWORD PTR [rsi],edi
   14001a165:	hlt    
   14001a166:	xor    edi,DWORD PTR [rsp+rsi*4-0x4230fd01]
   14001a16d:	lock movabs ds:0x6653289e16dfbdf6,al
   14001a177:	mov    bl,0x25
   14001a179:	xchg   ecx,eax
   14001a17a:	shl    BYTE PTR [rdx+0x32],0xe7
   14001a17e:	out    0xc5,al
   14001a180:	rex.WRXB
   14001a181:	repnz in al,dx
   14001a183:	lea    esp,[rdi-0xfa05687]
   14001a189:	enter  0x8e85,0x77
   14001a18d:	jg     0x14001a1f6
   14001a18f:	loopne 0x14001a157
   14001a191:	(bad)  
   14001a192:	sahf   
   14001a193:	out    0xc6,eax
   14001a195:	retf   
   14001a196:	(bad)  
   14001a198:	mov    al,0x4d
   14001a19a:	jnp    0x14001a187
   14001a19c:	adc    DWORD PTR [rsi+0x772cbb66],esi
   14001a1a2:	(bad)  
   14001a1a3:	in     al,0x2e
   14001a1a5:	adc    edi,DWORD PTR [rdx-0x38382462]
   14001a1ab:	rex.W adc BYTE PTR [rsi+0x17b64b96],sil
   14001a1b2:	push   rbx
   14001a1b3:	(bad)  
   14001a1b4:	(bad)  
   14001a1b6:	mov    edx,0xd00c210
   14001a1bb:	mov    ebp,0x2cefa539
   14001a1c0:	mov    WORD PTR [rip+0xffffffffef5a8740],es        # 0x12f5c2906
   14001a1c6:	movabs ds:0x15d284db4e2f862e,al
   14001a1cf:	fs pop rbp
   14001a1d1:	cmp    eax,DWORD PTR [rsi]
   14001a1d3:	outs   dx,DWORD PTR ds:[rsi]
   14001a1d4:	(bad)  
   14001a1d5:	imul   DWORD PTR [rdx+0x22805e0b]
   14001a1db:	push   0xffffffff9482c48b
   14001a1e0:	rex leave 
   14001a1e2:	pop    rdx
   14001a1e3:	(bad)  
   14001a1e4:	mov    esi,0x73dc755e
   14001a1e9:	(bad)  
   14001a1eb:	stc    
   14001a1ec:	jae    0x14001a22d
   14001a1ee:	lock add edi,DWORD PTR [rdi+rsi*8-0x9]
   14001a1f3:	(bad)  
   14001a1f4:	adc    DWORD PTR [rsi+0x78],ebx
   14001a1f7:	icebp  
   14001a1f8:	rex.RB sahf 
   14001a1fa:	jg     0x14001a1e2
   14001a1fc:	sbb    DWORD PTR [rsi-0x46982307],ebx
   14001a202:	jle    0x14001a201
   14001a204:	sbb    dh,BYTE PTR [rdi]
   14001a206:	outs   dx,DWORD PTR ds:[rsi]
   14001a207:	fsubr  st(0),st
   14001a209:	fcmovbe st,st(5)
   14001a20b:	sub    edi,DWORD PTR [rdi+rdi*8]
   14001a20e:	int3   
   14001a20f:	(bad)  
   14001a210:	call   0x122fef0d0
   14001a215:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a216:	add    ch,BYTE PTR [rsi]
   14001a218:	and    cl,BYTE PTR [rdx-0x9]
   14001a21b:	ins    DWORD PTR es:[rdi],dx
   14001a21c:	sbb    ebx,DWORD PTR [rdx-0x69256f2c]
   14001a222:	lods   eax,DWORD PTR ds:[rsi]
   14001a223:	in     eax,0x16
   14001a225:	(bad)
   14001a229:	ins    BYTE PTR es:[rdi],dx
   14001a22a:	(bad)  
   14001a22b:	je     0x14001a267
   14001a22d:	mov    ch,0xfd
   14001a22f:	add    dl,BYTE PTR [rsi]
   14001a231:	sbb    al,BYTE PTR [rax]
   14001a233:	mov    cs,WORD PTR [rcx+0x74c962e5]
   14001a239:	mov    cl,0x60
   14001a23b:	ss lahf 
   14001a23d:	mov    bl,0x58
   14001a23f:	out    dx,al
   14001a240:	nop
   14001a241:	jae    0x14001a269
   14001a243:	(bad)  
   14001a244:	rex push 0x26
   14001a247:	(bad)  
   14001a248:	es fyl2xp1 
   14001a24b:	and    BYTE PTR es:[rax-0x4cdf6883],dl
   14001a252:	or     al,ch
   14001a254:	or     DWORD PTR [rbx],edi
   14001a256:	rol    DWORD PTR [rbx+0x7d2ede94],0x14
   14001a25d:	fld    QWORD PTR [rdi-0x56]
   14001a260:	and    dh,cl
   14001a262:	and    BYTE PTR [rbx-0x47461c05],ah
   14001a268:	jo     0x14001a200
   14001a26a:	sbb    eax,0xa44a0263
   14001a270:	mov    edx,0x74d18809
   14001a275:	jge    0x14001a1f9
   14001a277:	(bad)  
   14001a278:	sbb    DWORD PTR [rdx-0x48],edi
   14001a27b:	movsxd esi,DWORD PTR [rax]
   14001a27d:	cld    
   14001a27e:	data16 out dx,al
   14001a280:	push   rdi
   14001a281:	xor    al,0xeb
   14001a283:	sub    eax,0x73a27106
   14001a288:	hlt    
   14001a289:	cmp    eax,0x5d4565a3
   14001a28e:	(bad)
   14001a291:	pop    rax
   14001a292:	cmp    bl,bl
   14001a294:	lods   al,BYTE PTR ds:[rsi]
   14001a295:	mov    ebp,0xd1563b98
   14001a29a:	fucomip st,st(0)
   14001a29c:	pop    rdx
   14001a29d:	push   rbp
   14001a29e:	xor    al,0x6c
   14001a2a0:	int    0x57
   14001a2a2:	and    eax,0x24df70e6
   14001a2a7:	and    al,0x8c
   14001a2a9:	or     al,0x23
   14001a2ab:	and    ebx,ecx
   14001a2ad:	shl    DWORD PTR [rcx-0x1f550c48],1
   14001a2b3:	rex.WXB sub al,BYTE PTR [r8-0x76089607]
   14001a2ba:	cs rex.WRX push rdi
   14001a2bd:	xchg   edx,eax
   14001a2be:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a2bf:	push   rbp
   14001a2c0:	lahf   
   14001a2c1:	push   rcx
   14001a2c2:	or     BYTE PTR [rbp+0x43],cl
   14001a2c5:	push   0xa
   14001a2c7:	cmp    DWORD PTR [rbp+0x24],esp
   14001a2ca:	stos   DWORD PTR es:[rdi],eax
   14001a2cb:	(bad)  
   14001a2cc:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a2ce:	jge    0x14001a2ce
   14001a2d0:	or     dh,ah
   14001a2d2:	fistp  WORD PTR [rbx-0x337151ca]
   14001a2d8:	jns    0x14001a31b
   14001a2da:	scas   eax,DWORD PTR es:[rdi]
   14001a2db:	ins    BYTE PTR es:[rdi],dx
   14001a2dc:	add    dh,BYTE PTR [rip+0x10abf56d]        # 0x150ad984f
   14001a2e2:	call   0x182db3cbd
   14001a2e7:	mov    eax,0xb39975b0
   14001a2ec:	push   rdi
   14001a2ed:	mov    bh,0x38
   14001a2ef:	jns    0x14001a2de
   14001a2f1:	xor    eax,0xc4a68ff6
   14001a2f6:	sub    esi,edi
   14001a2f8:	icebp  
   14001a2f9:	push   rax
   14001a2fa:	push   rbp
   14001a2fc:	in     al,dx
   14001a2fd:	(bad)  
   14001a2fe:	repz pop rcx
   14001a300:	out    dx,al
   14001a301:	loop   0x14001a2de
   14001a303:	sub    DWORD PTR [rdi+0x7f],ebp
   14001a306:	mov    ?,ebp
   14001a308:	push   rbx
   14001a309:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a30a:	pushf  
   14001a30b:	mov    ebp,0x3bf1cc7e
   14001a310:	jg     0x14001a29a
   14001a312:	(bad)  
   14001a313:	ds jl  0x14001a2b1
   14001a316:	pop    rdi
   14001a317:	jge    0x14001a2ff
   14001a319:	pop    rcx
   14001a31a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a31b:	imul   eax,DWORD PTR [rsi],0x126d3021
   14001a321:	xor    al,0xa7
   14001a323:	fdivr  QWORD PTR [rax-0x34b7e50a]
   14001a329:	(bad)  
   14001a32a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a32b:	enter  0x726,0x96
   14001a32f:	jnp    0x14001a344
   14001a331:	cli    
   14001a332:	adc    bh,BYTE PTR [rax-0x6]
   14001a335:	cdq    
   14001a336:	imul   edi,DWORD PTR [rsp+rdi*4],0x33
   14001a33a:	out    0xc1,eax
   14001a33c:	neg    DWORD PTR [rbp+0x62]
   14001a33f:	jmp    0x14001a3be
   14001a341:	cdq    
   14001a342:	rcl    BYTE PTR [rsi+rbx*4],cl
   14001a345:	(bad)  
   14001a346:	in     al,dx
   14001a347:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a348:	cmp    eax,edi
   14001a34a:	jmp    0x11fd555de
   14001a34f:	scas   eax,DWORD PTR es:[rdi]
   14001a350:	lea    esi,[rdx]
   14001a352:	ja     0x14001a3b2
   14001a354:	loope  0x14001a2f7
   14001a356:	fbstp  TBYTE PTR [rsi-0x6b]
   14001a359:	retf   
   14001a35a:	ja     0x14001a3c3
   14001a35c:	ds stc 
   14001a35e:	pmaxub mm0,mm3
   14001a361:	pop    rbp
   14001a362:	icebp  
   14001a363:	jle    0x14001a3db
   14001a365:	ja     0x14001a30d
   14001a367:	sbb    al,0xdd
   14001a369:	pop    rsi
   14001a36a:	stos   DWORD PTR es:[rdi],eax
   14001a36b:	sub    edx,DWORD PTR gs:[rbp-0x21af77cc]
   14001a372:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a373:	rcr    ebp,0x12
   14001a376:	or     eax,0xadbda93e
   14001a37b:	or     ecx,ebp
   14001a37d:	es mov ecx,0xaa87a8d6
   14001a383:	(bad)  
   14001a384:	lock ds (bad) 
   14001a387:	(bad)  
   14001a388:	xchg   esi,eax
   14001a389:	jne    0x14001a363
   14001a38b:	movabs eax,ds:0x202109604e16334d
   14001a394:	cmp    DWORD PTR [rbx],edx
   14001a396:	push   rbx
   14001a397:	in     al,0xfe
   14001a399:	xchg   DWORD PTR [rsi],ebx
   14001a39b:	loop   0x14001a35b
   14001a39d:	(bad)  
   14001a39e:	(bad)  
   14001a39f:	loop   0x14001a324
   14001a3a1:	(bad)  
   14001a3a2:	cli    
   14001a3a3:	adc    BYTE PTR [rdi-0x59],ah
   14001a3a6:	fdivr  QWORD PTR [esi]
   14001a3a9:	cmp    al,0xe4
   14001a3ab:	cli    
   14001a3ac:	(bad)  
   14001a3ad:	stos   DWORD PTR es:[rdi],eax
   14001a3ae:	fdivr  QWORD PTR [rax+0x5fd7957e]
   14001a3b4:	jnp    0x14001a343
   14001a3b6:	imul   edx,DWORD PTR [rdi-0x51],0xffffffb2
   14001a3ba:	jg     0x14001a36c
   14001a3bc:	iret   
   14001a3bd:	(bad)  
   14001a3be:	(bad)  
   14001a3bf:	scas   al,BYTE PTR es:[rdi]
   14001a3c0:	jb     0x14001a3b7
   14001a3c2:	cmc    
   14001a3c3:	xlat   BYTE PTR ds:[rbx]
   14001a3c4:	pop    rax
   14001a3c5:	lahf   
   14001a3c6:	popf   
   14001a3c7:	sbb    DWORD PTR [rbx-0x51],ebp
   14001a3ca:	mov    al,0xc9
   14001a3cc:	sbb    ebx,eax
   14001a3ce:	ins    BYTE PTR es:[rdi],dx
   14001a3cf:	cmp    BYTE PTR [rip+0xffffffffbeee1a3a],bh        # 0xfeefbe0f
   14001a3d5:	pop    rsi
   14001a3d6:	add    al,0x62
   14001a3d8:	rex.WX
   14001a3d9:	rex.WR fimul DWORD PTR [rcx]
   14001a3dc:	int    0xa4
   14001a3de:	cmp    bl,BYTE PTR gs:[rcx-0x2cb77296]
   14001a3e5:	xor    BYTE PTR [rbp-0x183266b2],bl
   14001a3eb:	xor    al,0x6d
   14001a3ed:	retf   
   14001a3ee:	je     0x14001a42a
   14001a3f0:	cmp    bl,BYTE PTR [edi+0x69cf9f33]
   14001a3f7:	(bad)  
   14001a3f8:	push   rbx
   14001a3f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a3fa:	shr    DWORD PTR [rcx+0x6532186d],cl
   14001a400:	xor    bl,BYTE PTR [rbp-0x2cdb3915]
   14001a406:	test   eax,0x1310a0ee
   14001a40b:	test   eax,0xe7ce9969
   14001a410:	fs xchg edx,eax
   14001a412:	scas   eax,DWORD PTR es:[rdi]
   14001a413:	(bad)  
   14001a414:	and    esp,DWORD PTR [rsi+0xe]
   14001a417:	movabs r10,0xe2f026c8471890e0
   14001a421:	movabs ds:0x3dca665c5f6e123a,eax
   14001a42a:	mov    BYTE PTR [rcx],cl
   14001a42c:	outs   dx,BYTE PTR ds:[rsi]
   14001a42d:	xchg   esp,eax
   14001a42e:	mov    WORD PTR [rax],cs
   14001a430:	(bad)  
   14001a431:	rex.RX clc 
   14001a433:	loop   0x14001a482
   14001a435:	jb     0x14001a44c
   14001a437:	or     DWORD PTR [rbx-0x1f],eax
   14001a43a:	rex.WRXB push r8
   14001a43c:	push   rdi
   14001a43d:	rex.XB jmp 0x14001a450
   14001a440:	xchg   esp,eax
   14001a441:	(bad)  
   14001a442:	push   rcx
   14001a443:	jnp    0x14001a3d7
   14001a445:	test   cl,dl
   14001a447:	ja     0x14001a476
   14001a449:	xchg   esi,eax
   14001a44a:	push   rcx
   14001a44b:	pop    rbp
   14001a44c:	sbb    dl,BYTE PTR [rdi]
   14001a44e:	imul   esi,DWORD PTR [rdi-0x7d],0xa9021a82
   14001a455:	mov    BYTE PTR [rcx-0x4c],ah
   14001a458:	fsub   st(5),st
   14001a45a:	(bad)  
   14001a45b:	cld    
   14001a45c:	sahf   
   14001a45d:	mov    esp,0x47c6aa81
   14001a462:	(bad)  
   14001a463:	(bad)  
   14001a464:	(bad)  
   14001a465:	rex.RX push rcx
   14001a467:	fwait
   14001a468:	cmp    esi,DWORD PTR [rdi+0x7c]
   14001a46b:	rex.WB add rax,0xfffffffffeafd2f0
   14001a471:	(bad)  
   14001a472:	mov    bh,0xee
   14001a474:	inc    DWORD PTR [rsi-0x6d160b01]
   14001a47a:	sti    
   14001a47b:	cmovnp ebp,DWORD PTR [rdi+0x40a5391a]
   14001a482:	xor    DWORD PTR [rsi+0x40],ecx
   14001a485:	mov    dh,0x54
   14001a487:	rex.RXB sbb BYTE PTR [r15],r15b
   14001a48a:	mov    DWORD PTR [rbx],esp
   14001a48c:	fistp  QWORD PTR [rax]
   14001a48e:	(bad)  
   14001a48f:	push   rsi
   14001a490:	out    dx,al
   14001a491:	mov    bl,0x41
   14001a493:	rex.RB ror DWORD PTR [r11+rdx*2],0x3d
   14001a498:	mov    WORD PTR [rax+0x6ff4f7f8],es
   14001a49e:	jge    0x14001a44f
   14001a4a0:	shr    r9d,0x6c
   14001a4a4:	ret    0xb66c
   14001a4a7:	sar    BYTE PTR fs:[rdi],cl
   14001a4aa:	xchg   BYTE PTR [rsp+rsi*8-0xcf94a8a],bh
   14001a4b1:	adc    esi,esi
   14001a4b3:	in     al,0x61
   14001a4b5:	outs   dx,BYTE PTR ds:[rsi]
   14001a4b6:	pop    rbp
   14001a4b7:	(bad)  
   14001a4b9:	in     al,dx
   14001a4ba:	loop   0x14001a4ed
   14001a4bc:	stos   DWORD PTR es:[rdi],eax
   14001a4bd:	paddd  mm1,mm7
   14001a4c0:	sub    al,0x1e
   14001a4c2:	in     eax,dx
   14001a4c3:	js     0x14001a4bc
   14001a4c5:	cmp    eax,0x378bfcbb
   14001a4ca:	sahf   
   14001a4cb:	in     eax,0xa4
   14001a4cd:	(bad)  
   14001a4ce:	and    eax,0x615a06c6
   14001a4d3:	mov    bl,0x11
   14001a4d5:	data16 (bad) 
   14001a4d7:	cld    
   14001a4d8:	cmp    BYTE PTR [rbx+0x7c887f27],bl
   14001a4de:	mov    bl,0x65
   14001a4e0:	out    dx,eax
   14001a4e1:	mov    DWORD PTR [rip+0x72af368e],ebp        # 0x1b2b0db75
   14001a4e7:	js     0x14001a485
   14001a4e9:	pop    rax
   14001a4ea:	sbb    eax,0xe7ae94f4
   14001a4ef:	mov    ch,0xd5
   14001a4f1:	adc    eax,0xcebd5eae
   14001a4f6:	es popf 
   14001a4f8:	xor    bl,BYTE PTR [rcx+0x36]
   14001a4fb:	cmp    al,0xf9
   14001a4fd:	mov    ch,0xf
   14001a4ff:	jo     0x14001a4e0
   14001a501:	neg    BYTE PTR [rdi+rbp*1-0x4f9c0b04]
   14001a508:	ins    BYTE PTR es:[rdi],dx
   14001a509:	js     0x14001a50a
   14001a50b:	(bad)  
   14001a50c:	jns    0x14001a494
   14001a50e:	popf   
   14001a50f:	fld    QWORD PTR [rbx-0x12]
   14001a512:	fisttp DWORD PTR [rcx]
   14001a514:	pop    rsp
   14001a515:	jge    0x14001a58d
   14001a517:	shl    ebx,0x3f
   14001a51a:	xchg   edi,eax
   14001a51b:	mov    eax,0xd87bc1ff
   14001a520:	pop    rsi
   14001a521:	ss adc al,0x9
   14001a524:	sbb    al,0x1f
   14001a526:	ins    DWORD PTR es:[rdi],dx
   14001a527:	xor    al,0x3e
   14001a529:	loopne 0x14001a58e
   14001a52b:	nop
   14001a52c:	(bad)  
   14001a52d:	call   0x1574feba1
   14001a532:	mov    bl,0xc
   14001a534:	xchg   esi,eax
   14001a535:	movsxd ebp,DWORD PTR [rax]
   14001a537:	rex.WR sbb r14b,BYTE PTR [rdx+0x3041ec9]
   14001a53e:	push   0xffffffffffffff97
   14001a540:	loopne 0x14001a51c
   14001a542:	push   rdi
   14001a543:	mov    al,0x8c
   14001a545:	xor    al,BYTE PTR [rdx]
   14001a547:	add    dh,BYTE PTR [rbp+0xd66ff1]
   14001a54d:	stos   BYTE PTR es:[rdi],al
   14001a54e:	xchg   edx,eax
   14001a54f:	ins    DWORD PTR es:[rdi],dx
   14001a550:	test   BYTE PTR [rsi-0x43],ch
   14001a553:	scas   al,BYTE PTR es:[rdi]
   14001a554:	push   rcx
   14001a555:	sti    
   14001a556:	jbe    0x14001a58a
   14001a558:	loope  0x14001a51c
   14001a55a:	(bad)
   14001a55d:	in     al,dx
   14001a55e:	out    dx,al
   14001a55f:	repnz div BYTE PTR [rdi-0x42]
   14001a563:	adc    edx,DWORD PTR [rcx]
   14001a565:	call   0xdb37c140
   14001a56a:	adc    eax,0xab19d59b
   14001a56f:	(bad)  
   14001a570:	mov    bl,bl
   14001a572:	xchg   DWORD PTR [rdi-0x748a4324],eax
   14001a578:	add    ebx,0x3
   14001a57b:	imul   BYTE PTR [rdi-0x22]
   14001a57e:	loop   0x14001a578
   14001a580:	clc    
   14001a581:	rex.RXB xchg DWORD PTR ss:[r15+0x603c3c39],r14d
   14001a589:	jmp    rsi
   14001a58b:	rex.WRB (bad) 
   14001a58d:	stos   DWORD PTR es:[rdi],eax
   14001a58e:	xchg   ebp,eax
   14001a58f:	and    DWORD PTR [rbx],edx
   14001a591:	jmp    0x14001a5b9
   14001a593:	ins    BYTE PTR es:[rdi],dx
   14001a594:	retf   
   14001a595:	mov    al,0xeb
   14001a597:	jne    0x14001a5ec
   14001a599:	fsub   DWORD PTR [rsi]
   14001a59b:	rex cmp DWORD PTR [rbx],ebp
   14001a59e:	lods   al,BYTE PTR ds:[rsi]
   14001a59f:	xlat   BYTE PTR ds:[rbx]
   14001a5a0:	imul   eax,DWORD PTR [rbp+0x5c],0xffffffe9
   14001a5a4:	test   al,0xa
   14001a5a6:	pop    rsi
   14001a5a7:	rex.WX mov QWORD PTR [rsi-0x5adeff97],rsp
   14001a5ae:	xchg   BYTE PTR [rax-0x5917ceee],bl
   14001a5b4:	and    BYTE PTR [rbx+0x64e99cf9],dh
   14001a5ba:	add    ah,BYTE PTR [rcx]
   14001a5bc:	lock popf 
   14001a5be:	jg     0x14001a5b0
   14001a5c0:	lss    edi,FWORD PTR [rsp+rsi*2-0xc3d0d1]
   14001a5c8:	cld    
   14001a5c9:	or     BYTE PTR [rdi],ah
   14001a5cb:	or     esp,ebx
   14001a5cd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a5ce:	xor    ebp,DWORD PTR [rsi-0x51]
   14001a5d1:	in     eax,dx
   14001a5d2:	nop
   14001a5d3:	pop    rdx
   14001a5d4:	jo     0x14001a60d
   14001a5d6:	(bad)  
   14001a5d7:	pushf  
   14001a5d8:	or     ebx,DWORD PTR [rcx]
   14001a5da:	jbe    0x14001a627
   14001a5dc:	ds xchg edi,eax
   14001a5de:	(bad)  
   14001a5df:	je     0x14001a60c
   14001a5e1:	sbb    al,0x2
   14001a5e3:	(bad)  
   14001a5e4:	xchg   esi,eax
   14001a5e5:	test   al,0x8f
   14001a5e7:	movabs eax,ds:0xeb9f1acc4ec8b8f6
   14001a5f0:	cmp    DWORD PTR [rax],esi
   14001a5f2:	ds out 0xf0,eax
   14001a5f5:	rcl    DWORD PTR [rcx+0x30abb8b4],0x46
   14001a5fc:	adc    DWORD PTR [rax+0x444cb042],0xffffffac
   14001a603:	cmp    BYTE PTR [rax],ah
   14001a605:	(bad)  
   14001a606:	loope  0x14001a5e1
   14001a608:	adc    al,0x70
   14001a60a:	mov    WORD PTR [rsi+rdi*1],gs
   14001a60d:	es cld 
   14001a60f:	out    dx,al
   14001a610:	(bad)  
   14001a611:	sbb    BYTE PTR [rdx-0x4c],bl
   14001a614:	jp     0x14001a598
   14001a616:	jge    0x14001a65c
   14001a618:	mov    esi,0xe3c0e5ba
   14001a61d:	rex.XB (bad) 
   14001a61f:	rol    edx,cl
   14001a621:	xchg   ebx,eax
   14001a622:	jg     0x14001a615
   14001a624:	(bad)  
   14001a625:	retf   0x3e46
   14001a628:	sub    al,0x7d
   14001a62a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a62b:	hlt    
   14001a62c:	cdq    
   14001a62d:	xchg   esp,eax
   14001a62e:	adc    dh,BYTE PTR [rcx+0x21b6a44d]
   14001a634:	ja     0x14001a5bb
   14001a636:	push   rdx
   14001a637:	jp     0x14001a686
   14001a639:	retf   
   14001a63a:	cwde   
   14001a63b:	(bad)  
   14001a63c:	sbb    eax,0x74a34f58
   14001a641:	test   QWORD PTR [rdx-0xa],r8
   14001a645:	mov    edi,0x5c717eca
   14001a64a:	jmp    0x14001a64a
   14001a64c:	sahf   
   14001a64d:	std    
   14001a64e:	pop    rax
   14001a64f:	(bad)  
   14001a650:	sbb    al,0x72
   14001a652:	pop    rdi
   14001a653:	pop    rax
   14001a654:	lahf   
   14001a655:	cmc    
   14001a656:	hlt    
   14001a657:	and    eax,0xf9d68290
   14001a65c:	(bad)  
   14001a65d:	adc    al,cl
   14001a65f:	mov    ebp,0x66479d30
   14001a664:	push   rdi
   14001a665:	(bad)  
   14001a666:	out    0xe4,eax
   14001a668:	and    al,0x71
   14001a66a:	jmp    0x12e539f4e
   14001a66f:	fstp   TBYTE PTR [rcx-0x80]
   14001a672:	rex.WRXB movabs r15,0x6a1f698f4e1cabfe
   14001a67c:	enter  0x85d7,0xb8
   14001a680:	outs   dx,BYTE PTR ds:[rsi]
   14001a681:	xchg   ecx,eax
   14001a682:	push   rdx
   14001a683:	clc    
   14001a684:	ret    0xcfd5
   14001a687:	repnz cmp edi,DWORD PTR [rdi]
   14001a68a:	lock cs loop 0x14001a6f1
   14001a68e:	sbb    DWORD PTR [rdi-0x47],0xf65702f6
   14001a695:	jns    0x1ba53ba52
   14001a69b:	rex.X push 0x77d0b128
   14001a6a1:	cmp    eax,0xfa6cc91b
   14001a6a6:	or     eax,0xf3c2f2bf
   14001a6ab:	mov    esp,0x8796bef7
   14001a6b0:	(bad)  
   14001a6b1:	call   0x15d76fecd
   14001a6b6:	scas   eax,DWORD PTR es:[rdi]
   14001a6b7:	pushf  
   14001a6b8:	cmc    
   14001a6b9:	(bad)  
   14001a6bb:	pop    rsp
   14001a6bc:	loope  0x14001a69b
   14001a6be:	jmp    0x14001a707
   14001a6c0:	mov    eax,0x1c9bd1fc
   14001a6c5:	xchg   edi,eax
   14001a6c6:	sbb    ebx,DWORD PTR [rbx+rdi*2-0x1b]
   14001a6ca:	add    dl,BYTE PTR [rbx+0x3dc3df97]
   14001a6d0:	paddsw mm6,QWORD PTR [rdx+0x3e396cb5]
   14001a6d7:	mov    dl,0x92
   14001a6d9:	shl    BYTE PTR gs:[rdi],0x1d
   14001a6dd:	sbb    eax,0xe47d012b
   14001a6e2:	push   rcx
   14001a6e3:	in     al,0xdd
   14001a6e5:	or     edx,DWORD PTR [rsi-0x50]
   14001a6e8:	clc    
   14001a6e9:	or     DWORD PTR [rsi+rdx*1],0xba801bcf
   14001a6f0:	in     eax,0x2d
   14001a6f2:	es clc 
   14001a6f4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a6f5:	mov    BYTE PTR [rbx-0x74],dh
   14001a6f8:	ins    BYTE PTR es:[rdi],dx
   14001a6f9:	fcom   st(4)
   14001a6fb:	retf   0xfb3d
   14001a6fe:	(bad)  
   14001a6ff:	rex.RXB lahf 
   14001a701:	jnp    0x14001a729
   14001a703:	imul   edx,DWORD PTR [rdx-0x39],0x290a37d6
   14001a70a:	fsincos 
   14001a70c:	(bad)  
   14001a70d:	sub    esi,DWORD PTR [rcx-0x59]
   14001a710:	xchg   edi,eax
   14001a711:	lods   al,BYTE PTR ds:[rsi]
   14001a712:	test   al,0xb6
   14001a714:	cdq    
   14001a715:	xor    bl,BYTE PTR [rbx+0x4e]
   14001a718:	fcomp  st(2)
   14001a71a:	mov    ecx,0x3c8f03c0
   14001a71f:	rex.RX
   14001a720:	rex.WR fisubr DWORD PTR [rcx-0x5b]
   14001a724:	xchg   esp,eax
   14001a725:	sahf   
   14001a726:	rex.WRB xlat BYTE PTR ds:[rbx]
   14001a728:	shl    DWORD PTR [rbp+0x1b],cl
   14001a72b:	ss fwait
   14001a72d:	mov    ch,0x9
   14001a72f:	jge    0x14001a707
   14001a731:	fld    QWORD PTR [rbx-0x7071d4aa]
   14001a737:	xchg   ebp,eax
   14001a738:	bnd jnp 0x14001a7b5
   14001a73b:	jl     0x14001a6e9
   14001a73d:	sub    eax,0x268ebbc1
   14001a742:	and    eax,0x4e4e114a
   14001a747:	(bad)  
   14001a748:	rex.WRB test rax,0x2001c0f
   14001a74e:	sub    al,0x97
   14001a750:	rex.WXB push r10
   14001a752:	push   rdx
   14001a753:	or     ebx,DWORD PTR [rdi-0x64c99dae]
   14001a759:	mov    cl,0x58
   14001a75b:	imul   ebx,DWORD PTR cs:[rdx+0x45],0x8772ed07
   14001a763:	push   rdi
   14001a764:	scas   eax,DWORD PTR es:[rdi]
   14001a765:	pop    rsp
   14001a766:	(bad)  
   14001a767:	in     eax,0x11
   14001a769:	rex.X jge 0x14001a7e0
   14001a76c:	scas   eax,DWORD PTR es:[rdi]
   14001a76d:	xchg   ebp,eax
   14001a76e:	test   al,0x1
   14001a770:	fs int3 
   14001a772:	sbb    DWORD PTR [rdi],0x59
   14001a775:	gs push rdi
   14001a777:	or     ah,bh
   14001a779:	cmp    dh,al
   14001a77b:	cmp    BYTE PTR [rsi],ch
   14001a77d:	sbb    ah,ch
   14001a77f:	rex.WRX push rbp
   14001a781:	sbb    dl,BYTE PTR [rip+0x1cc0d41c]        # 0x15cc27ba3
   14001a787:	rex.XB jo 0x14001a75a
   14001a78a:	mov    esi,0x856ba32f
   14001a78f:	xor    BYTE PTR [rax],bh
   14001a791:	or     al,0x63
   14001a793:	and    eax,0x239d2354
   14001a798:	adc    al,0x32
   14001a79a:	sbb    al,0x6a
   14001a79c:	mov    ch,0xb5
   14001a79e:	data16 (bad) 
   14001a7a0:	sti    
   14001a7a1:	(bad)  
   14001a7a2:	or     eax,0x9444be2d
   14001a7a7:	lods   al,BYTE PTR ds:[rsi]
   14001a7a8:	ss ins BYTE PTR es:[rdi],dx
   14001a7aa:	sub    al,0x35
   14001a7ac:	(bad)  
   14001a7ad:	add    BYTE PTR [rax],al
   14001a7af:	and    BYTE PTR [rax],al
   14001a7b1:	rex.WB
   14001a7b2:	rex.R
   14001a7b3:	push   r12
   14001a7b5:	pop    rsp
   14001a7b6:	rcl    BYTE PTR [rax+0x42],cl
   14001a7b9:	push   rbp
   14001a7ba:	jo     0x14001a790
   14001a7bc:	jnp    0x14001a7b3
   14001a7be:	and    BYTE PTR [rdx+0x8],0xe1
   14001a7c2:	pushf  
   14001a7c3:	retf   0x53b9
   14001a7c6:	(bad)  
   14001a7c7:	xchg   edi,eax
   14001a7c8:	push   rsp
   14001a7c9:	add    BYTE PTR [rax],al
   14001a7cb:	ja     0x14001a78c
   14001a7cd:	jmp    0x14001a750
   14001a7cf:	jg     0x14001a7c3
   14001a7d1:	(bad)  
   14001a7d2:	push   rbx
   14001a7d3:	iret   
   14001a7d4:	std    
   14001a7d5:	push   rbp
   14001a7d6:	jmp    0x1817ed026
   14001a7db:	and    BYTE PTR es:[rcx],0x80
   14001a7df:	xchg   esp,eax
   14001a7e0:	(bad)  
   14001a7e1:	ss (bad) 
   14001a7e3:	sbb    BYTE PTR [rdi+0x64],dl
   14001a7e6:	cmp    eax,ecx
   14001a7e8:	jne    0x14001a7f2
   14001a7ea:	jmp    0x14001a7ff
   14001a7ec:	push   rdi
   14001a7ed:	adc    eax,0x6a869bc1
   14001a7f2:	rex.R (bad) 
   14001a7f4:	cmp    ah,bh
   14001a7f6:	(bad)  
   14001a7f7:	(bad)  
   14001a7f8:	or     BYTE PTR [rbx-0x3061be92],ch
   14001a7fe:	jp     0x14001a81b
   14001a800:	push   0x6d36334d
   14001a805:	(bad)  
   14001a806:	mov    ecx,0xe2fb64b3
   14001a80b:	xchg   edx,eax
   14001a80c:	adc    edi,DWORD PTR [rcx]
   14001a80e:	out    0xd6,al
   14001a810:	in     eax,dx
   14001a811:	adc    eax,0x9ff97d9f
   14001a816:	xor    ecx,ebx
   14001a818:	test   ecx,ebx
   14001a81a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a81b:	sub    DWORD PTR [rip+0x720a7908],esp        # 0x1b20c2129
   14001a821:	(bad)  
   14001a822:	sub    al,0xb5
   14001a824:	in     eax,dx
   14001a825:	int3   
   14001a826:	iret   
   14001a827:	fdivp  st(4),st
   14001a829:	or     al,0x74
   14001a82b:	mov    ebx,eax
   14001a82d:	xchg   edi,eax
   14001a82e:	(bad)  
   14001a82f:	xor    al,0x5d
   14001a831:	rcl    dl,cl
   14001a833:	fist   WORD PTR [rsi+0x68]
   14001a836:	ins    BYTE PTR es:[rdi],dx
   14001a837:	mov    ah,0x8b
   14001a839:	cmp    eax,0x7f489b0b
   14001a83e:	and    bh,BYTE PTR [rsi*8+0x707817fa]
   14001a845:	out    0x6e,eax
   14001a847:	xchg   esi,eax
   14001a848:	xor    DWORD PTR [rax-0x55],esi
   14001a84b:	fsub   QWORD PTR [rsi+rsi*1+0x4d]
   14001a84f:	jl     0x14001a843
   14001a851:	(bad)  
   14001a853:	mov    esp,0x9e71eb6b
   14001a858:	cld    
   14001a859:	jge    0x14001a82a
   14001a85b:	mov    bl,0x96
   14001a85d:	shl    bh,0xfe
   14001a860:	outs   dx,BYTE PTR ds:[rsi]
   14001a861:	in     al,0xca
   14001a863:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a864:	fmulp  st(7),st
   14001a866:	in     eax,0xc7
   14001a868:	data16 in al,dx
   14001a86a:	outs   dx,BYTE PTR ds:[rsi]
   14001a86b:	(bad)  
   14001a86c:	lods   al,BYTE PTR ds:[rsi]
   14001a86d:	(bad)  
   14001a86e:	cdq    
   14001a86f:	shl    ebx,cl
   14001a871:	scas   al,BYTE PTR es:[rdi]
   14001a872:	rex.RX jg 0x14001a8d6
   14001a875:	int3   
   14001a876:	mov    ah,0xf2
   14001a878:	adc    al,0xd3
   14001a87a:	push   rax
   14001a87b:	pop    rcx
   14001a87c:	out    0x81,al
   14001a87e:	cmp    eax,0x1dde5ab7
   14001a883:	fsub   DWORD PTR [rdi-0x26]
   14001a886:	add    eax,0x32c7e9dd
   14001a88b:	or     bh,BYTE PTR [rbp-0x38afd395]
   14001a891:	test   eax,0xc49c05cf
   14001a896:	test   BYTE PTR [rbp-0x4d],dl
   14001a899:	pop    rcx
   14001a89a:	sub    cl,bh
   14001a89c:	sti    
   14001a89d:	add    BYTE PTR [rdx],cl
   14001a89f:	rex sub DWORD PTR [rbx+0x7a],eax
   14001a8a3:	leave  
   14001a8a4:	fadd   QWORD PTR [rsi-0x429c512d]
   14001a8aa:	jmp    0x1ac385607
   14001a8af:	mov    edx,0xa7aeeb0d
   14001a8b4:	retf   
   14001a8b5:	std    
   14001a8b6:	rcr    BYTE PTR [rax],0x8c
   14001a8b9:	and    DWORD PTR [rsi+rdx*2+0x39],0x97160bb6
   14001a8c1:	xchg   esi,eax
   14001a8c2:	(bad)  
   14001a8c3:	adc    BYTE PTR [rcx-0x327a2494],bh
   14001a8c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a8ca:	lods   eax,DWORD PTR ds:[rsi]
   14001a8cb:	or     dh,BYTE PTR [rdi+0x29]
   14001a8ce:	ins    BYTE PTR es:[rdi],dx
   14001a8cf:	sbb    edi,DWORD PTR ss:[rbp-0x2a4f1f39]
   14001a8d6:	add    al,0x28
   14001a8d8:	and    eax,0x528e9b36
   14001a8dd:	or     bh,BYTE PTR [rbp-0x61]
   14001a8e0:	jmp    0xc5d14a30
   14001a8e5:	movabs ds:0x5783d5e6b67f4775,eax
   14001a8ee:	sub    DWORD PTR [rcx-0x15],ebx
   14001a8f1:	cmp    eax,0x175c5286
   14001a8f6:	fs std 
   14001a8f8:	(bad)  
   14001a8f9:	lods   eax,DWORD PTR ds:[rsi]
   14001a8fa:	jbe    0x14001a8fc
   14001a8fc:	rex.XB xchg r13d,eax
   14001a8fe:	adc    al,BYTE PTR [rdx-0xb]
   14001a901:	leave  
   14001a902:	(bad)  
   14001a903:	leave  
   14001a904:	not    BYTE PTR [rbp+rbx*8+0x21a2b858]
   14001a90b:	test   ecx,esp
   14001a90d:	movabs ds:0x99fb467b06749b5,eax
   14001a916:	add    DWORD PTR [rbx-0x57afb8f8],ebp
   14001a91c:	out    dx,al
   14001a91d:	mov    esp,0x716088
   14001a922:	pavgb  mm1,QWORD PTR [rsi]
   14001a925:	push   rbx
   14001a926:	cmp    al,0xc4
   14001a928:	adc    cl,BYTE PTR [rax]
   14001a92a:	push   rsi
   14001a92b:	push   rsi
   14001a92c:	in     al,dx
   14001a92d:	test   DWORD PTR [rcx],0x2281ed78
   14001a933:	or     eax,0x9adcfdfb
   14001a938:	xor    BYTE PTR [rbx],ah
   14001a93a:	xor    DWORD PTR [rdx],ebp
   14001a93c:	rex.WB (bad) 
   14001a93e:	mov    WORD PTR [rbx+0x59fd1506],ss
   14001a944:	jmp    0x14001a941
   14001a946:	ja     0x14001a940
   14001a948:	clc    
   14001a949:	or     eax,0x7e87c015
   14001a94e:	loopne 0x14001a947
   14001a950:	mov    esp,0xfddfc3f6
   14001a955:	(bad)  
   14001a956:	jle    0x14001a90a
   14001a958:	xchg   esp,eax
   14001a959:	repnz xor DWORD PTR ds:[rbx-0x6e],ecx
   14001a95e:	fiadd  DWORD PTR [rsp+rsi*4+0x4246d091]
   14001a965:	test   BYTE PTR [rdx+0xa],0xbb
   14001a969:	cmp    r14d,0x23
   14001a96d:	imul   BYTE PTR [rcx+rdx*4+0x6669822c]
   14001a974:	(bad)  
   14001a975:	out    dx,eax
   14001a976:	xor    bh,BYTE PTR [rax-0x3c6ee7f4]
   14001a97c:	rol    BYTE PTR [rcx+0x40],1
   14001a97f:	push   0x6e
   14001a981:	(bad)  
   14001a982:	movs   BYTE PTR es:[rdi],BYTE PTR fs:[rsi]
   14001a984:	sahf   
   14001a985:	rex.XB in eax,dx
   14001a987:	clc    
   14001a988:	(bad)  
   14001a989:	mov    edx,eax
   14001a98b:	lods   eax,DWORD PTR ds:[rsi]
   14001a98c:	xor    esp,DWORD PTR [rdi]
   14001a98e:	mov    bh,0xf
   14001a990:	xchg   ecx,eax
   14001a991:	mov    eax,DWORD PTR [rcx-0x259c5c1d]
   14001a997:	xor    BYTE PTR [rip+0x9d28ea5],ah        # 0x149d43842
   14001a99d:	adc    dl,BYTE PTR [rdx]
   14001a99f:	pushf  
   14001a9a0:	rex.X pop rcx
   14001a9a2:	test   esp,0x852c2459
   14001a9a8:	cmc    
   14001a9a9:	mov    edx,0x8ee39b0
   14001a9ae:	jmp    0x14001a9f4
   14001a9b0:	jmp    0x184ec7a3a
   14001a9b5:	adc    eax,0xcb981a91
   14001a9ba:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a9bb:	rol    BYTE PTR [rsi+0x27],0xa4
   14001a9bf:	ins    DWORD PTR es:[rdi],dx
   14001a9c0:	and    ebp,DWORD PTR [rdi+0x769d7cdc]
   14001a9c6:	cs sub al,0x66
   14001a9c9:	adc    ebp,DWORD PTR [rbp-0x25]
   14001a9cc:	rex.RB retf 
   14001a9ce:	scas   eax,DWORD PTR es:[rdi]
   14001a9cf:	sbb    eax,0xf2bb9e7d
   14001a9d4:	gs sahf 
   14001a9d6:	mov    esp,0xedbf10fc
   14001a9db:	(bad)  
   14001a9dc:	std    
   14001a9dd:	cmp    bh,BYTE PTR [rdi]
   14001a9df:	repnz neg DWORD PTR [rsi-0x1a]
   14001a9e3:	(bad)  
   14001a9e4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a9e5:	mov    esi,0x9b64c599
   14001a9ea:	or     esi,edi
   14001a9ec:	outs   dx,BYTE PTR ds:[rsi]
   14001a9ed:	adc    DWORD PTR [rsi+0xd],esp
   14001a9f0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a9f1:	(bad)  
   14001a9f2:	sbb    eax,0x8c0ad2ae
   14001a9f7:	sbb    al,0x3d
   14001a9f9:	sbb    edx,DWORD PTR [rbx]
   14001a9fb:	pop    rdi
   14001a9fc:	je     0x14001aa34
   14001a9fe:	or     dl,ch
   14001aa00:	(bad)  
   14001aa01:	imul   eax,DWORD PTR [rcx+rdx*8]
   14001aa05:	mov    ebp,0x896add11
   14001aa0a:	pop    rcx
   14001aa0b:	movabs al,ds:0xe5615a04182ca62
   14001aa14:	xchg   esi,eax
   14001aa15:	mov    cl,0x76
   14001aa17:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001aa18:	sub    ebx,eax
   14001aa1a:	stc    
   14001aa1b:	rex.XB add r9b,cl
   14001aa1e:	(bad)  
   14001aa1f:	or     DWORD PTR [rax],ebx
   14001aa21:	mov    ch,0xf6
   14001aa23:	rcr    BYTE PTR [rbx+0xb],cl
   14001aa26:	test   BYTE PTR [rax],dl
   14001aa28:	imul   edx,DWORD PTR [rbx+0x24],0xa9e84897
   14001aa2f:	pushf  
   14001aa30:	call   FWORD PTR [rbp+rsi*4+0xa37cb10]
   14001aa37:	sbb    DWORD PTR [rax+rax*1+0x3f],ebx
   14001aa3b:	imul   DWORD PTR [rax]
   14001aa3d:	add    eax,0xeec030c
   14001aa42:	cwde   
   14001aa43:	cmc    
   14001aa44:	movhps xmm5,QWORD PTR [rcx]
   14001aa47:	scas   eax,DWORD PTR es:[rdi]
   14001aa48:	(bad)  
   14001aa49:	ss js  0x14001aaaa
   14001aa4c:	(bad)  
   14001aa4d:	sbb    cl,BYTE PTR [rbx-0x324aef72]
   14001aa53:	mov    eax,0xaa993415
   14001aa58:	rex.XB pop r12
   14001aa5a:	(bad)  
   14001aa5b:	(bad)  
   14001aa5c:	or     esi,DWORD PTR [rsi]
   14001aa5e:	push   rbp
   14001aa5f:	mov    BYTE PTR [rbp-0x30],bl
   14001aa62:	xchg   ebp,eax
   14001aa63:	out    dx,eax
   14001aa64:	gs jge 0x14001aa85
   14001aa67:	rol    BYTE PTR [rdx],0x80
   14001aa6a:	outs   dx,DWORD PTR ds:[rsi]
   14001aa6b:	rex.X or esp,ebx
   14001aa6e:	pop    rsi
   14001aa6f:	mov    eax,DWORD PTR [rsi-0x31]
   14001aa72:	cmc    
   14001aa73:	rex.WRXB call 0xe49715c5
   14001aa79:	fbld   TBYTE PTR [rax+0x18c7b9cb]
   14001aa7f:	(bad)  
   14001aa80:	and    DWORD PTR [rcx],ecx
   14001aa82:	sbb    esi,ebp
   14001aa84:	pop    rdi
   14001aa85:	fdivr  QWORD PTR [rdi]
   14001aa87:	xchg   ecx,eax
   14001aa88:	add    sil,BYTE PTR [rbx+rbx*1+0x5fa2a052]
   14001aa90:	(bad)  
   14001aa91:	movsxd ebx,DWORD PTR [rax]
   14001aa93:	mov    WORD PTR [rbx+0x74],fs
   14001aa96:	faddp  st(1),st
   14001aa98:	enter  0xb840,0x4c
   14001aa9c:	rex.R scas eax,DWORD PTR es:[rdi]
   14001aa9e:	xor    BYTE PTR [rbp-0x55acb8b1],dh
   14001aaa4:	xor    eax,0x70f2eec0
   14001aaa9:	xchg   DWORD PTR [rdi-0x9fab5d1],ecx
   14001aaaf:	movsxd edi,ecx
   14001aab1:	shl    BYTE PTR [rbp-0x32492a5],0xbd
   14001aab8:	pushf  
   14001aab9:	mov    esi,esi
   14001aabb:	mov    gs,ebx
   14001aabd:	mov    ch,0x1f
   14001aabf:	push   rbp
   14001aac0:	ins    BYTE PTR es:[rdi],dx
   14001aac1:	sbb    cl,BYTE PTR [rip+0xffffffffe548c608]        # 0x1254a70cf
   14001aac7:	ret    
   14001aac8:	jnp    0x14001aa94
   14001aaca:	stos   BYTE PTR es:[rdi],al
   14001aacb:	ds xchg esp,eax
   14001aacd:	iret   
   14001aace:	(bad)  
   14001aacf:	or     dl,ch
   14001aad1:	fndisi(8087 only) 
   14001aad3:	stos   BYTE PTR es:[rdi],al
   14001aad4:	and    BYTE PTR [rdi+rbp*1],al
   14001aad7:	lods   eax,DWORD PTR ds:[rsi]
   14001aad8:	fs xor al,0xf9
   14001aadb:	out    0xff,eax
   14001aadd:	ds jle 0x14001aad5
   14001aae0:	jb     0x14001aaab
   14001aae2:	mov    BYTE PTR [rsi],ch
   14001aae4:	loopne 0x14001aab9
   14001aae6:	(bad)  
   14001aae7:	jne    0x14001ab37
   14001aae9:	out    dx,eax
   14001aaea:	stc    
   14001aaeb:	(bad)  
   14001aaec:	je     0x14001ab67
   14001aaee:	(bad)  
   14001aaef:	imul   ecx,esi,0x1baf7dc8
   14001aaf5:	push   0xffffffffccb203cc
   14001aafa:	and    rax,rsp
   14001aafd:	rex.WXB add rax,0xffffffff814812d9
   14001ab03:	xor    al,0x89
   14001ab05:	xchg   ebp,eax
   14001ab06:	jo     0x14001aaa9
   14001ab08:	rex.X (bad) 
   14001ab0a:	ins    DWORD PTR es:[rdi],dx
   14001ab0b:	mov    bh,0x28
   14001ab0d:	test   BYTE PTR [rax-0x34],dl
   14001ab10:	std    
   14001ab11:	(bad)  
   14001ab12:	enter  0x4cbd,0x2
   14001ab16:	ror    DWORD PTR [rbx],cl
   14001ab18:	or     eax,0xdf4b76ed
   14001ab1d:	rex outs dx,BYTE PTR ds:[rsi]
   14001ab1f:	xor    dh,BYTE PTR [rcx+0x51]
   14001ab22:	fcomp  st(6)
   14001ab24:	outs   dx,BYTE PTR ds:[rsi]
   14001ab25:	leave  
   14001ab26:	int    0x11
   14001ab28:	lahf   
   14001ab29:	ds clc 
   14001ab2b:	sub    al,0xaf
   14001ab2d:	outs   dx,DWORD PTR ds:[rsi]
   14001ab2e:	scas   al,BYTE PTR es:[rdi]
   14001ab2f:	xacquire xchg DWORD PTR [rdi-0x40270f45],edi
   14001ab36:	idiv   DWORD PTR [rdi+0x73]
   14001ab39:	mov    dl,0xf3
   14001ab3b:	xor    al,0xd7
   14001ab3d:	pop    rsi
   14001ab3e:	fldenv [rdi-0x2e]
   14001ab41:	ret    0xde6c
   14001ab44:	test   al,0x9f
   14001ab46:	sahf   
   14001ab47:	or     esp,DWORD PTR [rip+0xffffffffa50bd20b]        # 0xe50d7d58
   14001ab4d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001ab4e:	(bad)  
   14001ab4f:	xchg   ebx,eax
   14001ab50:	pop    rsi
   14001ab51:	fild   QWORD PTR [rdi]
   14001ab53:	mov    dh,0xdb
   14001ab55:	mov    ?,esp
   14001ab57:	rex.RB stc 
   14001ab59:	cli    
   14001ab5a:	cmp    eax,0x7d284e94
   14001ab5f:	rex.R jb 0x14001ab12
   14001ab62:	jb     0x14001abbe
   14001ab64:	stos   DWORD PTR es:[rdi],eax
   14001ab65:	pop    rbp
   14001ab66:	sub    dh,cl
   14001ab68:	(bad)  
   14001ab69:	push   rbx
   14001ab6a:	stos   BYTE PTR es:[rdi],al
   14001ab6b:	jno    0x14001ab36
   14001ab6d:	(bad)  
   14001ab6e:	(bad)  
   14001ab6f:	adc    ch,0x99
   14001ab72:	or     DWORD PTR [rsi-0x13],ebx
   14001ab75:	mov    DWORD PTR [rax-0x3e],esp
   14001ab78:	movsxd edi,DWORD PTR [rdi-0x56cea45]
   14001ab7e:	mov    bl,0xc
   14001ab80:	(bad)  
   14001ab81:	jmp    0x14001abcf
   14001ab83:	(bad)  
   14001ab84:	add    ah,BYTE PTR [rcx+0x6cb38600]
   14001ab8a:	add    esp,0x715a8c48
   14001ab90:	cwde   
   14001ab91:	push   rdx
   14001ab92:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ab93:	mov    QWORD PTR [r14],rsp
   14001ab96:	xor    eax,0x63028634
   14001ab9b:	or     al,0x95
   14001ab9d:	(bad)  
   14001ab9e:	sbb    eax,DWORD PTR [rdx-0x348a4be]
   14001aba4:	sub    DWORD PTR [rsi+0x22],eax
   14001aba7:	(bad)  
   14001aba8:	mov    esi,0x8e114635
   14001abad:	jno    0x14001ac17
   14001abaf:	xor    BYTE PTR [rbx],dl
   14001abb1:	movsxd esi,DWORD PTR [rdx+riz*2-0x25b53e34]
   14001abb8:	add    al,cl
   14001abba:	pop    rbp
   14001abbb:	(bad)  
   14001abbc:	repz xchg esp,eax
   14001abbe:	(bad)  
   14001abbf:	(bad)  
   14001abc0:	retf   
   14001abc1:	xor    bl,BYTE PTR [rdx+0x4f]
   14001abc4:	push   0xffffffffffffffd5
   14001abc6:	mov    cl,0xa
   14001abc8:	push   rax
   14001abc9:	(bad)  
   14001abca:	rex.X jae 0x14001ab76
   14001abcd:	ret    0xeaf0
   14001abd0:	or     cl,cl
   14001abd2:	rex.WRXB push r11
   14001abd4:	retf   
   14001abd5:	mov    ecx,DWORD PTR [rbp+0x367e21d3]
   14001abdb:	(bad)  
   14001abdc:	cmp    eax,0x7d4e28d6
   14001abe1:	es test al,0xb2
   14001abe4:	jnp    0x14001abd4
   14001abe6:	mov    ch,BYTE PTR ss:[rdx-0x4b]
   14001abea:	mov    edx,0x88b5dd58
   14001abef:	movsxd eax,DWORD PTR [rbp-0x77033cdc]
   14001abf5:	(bad)  
   14001abf6:	mov    bh,0x9f
   14001abf8:	fs hlt 
   14001abfa:	pop    rsp
   14001abfb:	cmc    
   14001abfc:	mov    bl,0x7e
   14001abfe:	mov    r13,QWORD PTR [r14+rdi*2+0x35]
   14001ac03:	pop    rsp
   14001ac04:	sbb    bh,0x50
   14001ac07:	add    esp,edi
   14001ac09:	mov    bh,0xf
   14001ac0b:	pop    rbp
   14001ac0c:	sub    al,0x8f
   14001ac0e:	jg     0x14001abdb
   14001ac10:	mov    ebx,0x73af297f
   14001ac15:	push   rcx
   14001ac16:	out    dx,al
   14001ac17:	mov    esp,0x2453eef1
   14001ac1c:	xor    eax,0x188e6511
   14001ac21:	pushf  
   14001ac22:	mov    ah,0xb4
   14001ac24:	rex.WXB cmp BYTE PTR [r15],sil
   14001ac27:	rex.B movabs eax,ds:0x9b140e70d36ba04e
   14001ac31:	enter  0xff07,0xbc
   14001ac35:	jmp    QWORD PTR [rcx+0x50]
   14001ac38:	sbb    dh,cl
   14001ac3a:	je     0x14001ac47
   14001ac3c:	(bad)  
   14001ac3d:	xchg   esp,eax
   14001ac3e:	mov    edi,0x9d17401d
   14001ac43:	fsub   QWORD PTR [rdx]
   14001ac45:	and    DWORD PTR [rsi-0x6ee72cf3],r8d
   14001ac4c:	mov    bl,0x9e
   14001ac4e:	out    dx,al
   14001ac4f:	ficomp DWORD PTR [rdx]
   14001ac51:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ac52:	(bad)  
   14001ac53:	ficom  WORD PTR [rbx+0x8]
   14001ac56:	(bad)  
   14001ac57:	jnp    0x14001acc1
   14001ac59:	or     dh,BYTE PTR [rcx+0x7dfcb945]
   14001ac5f:	(bad)  
   14001ac60:	push   rax
   14001ac61:	nop
   14001ac62:	(bad)  
   14001ac63:	lods   eax,DWORD PTR ds:[rsi]
   14001ac64:	ins    BYTE PTR es:[rdi],dx
   14001ac65:	or     al,0xe
   14001ac67:	retf   
   14001ac68:	lods   al,BYTE PTR ds:[rsi]
   14001ac69:	rex.WR mov bpl,0x81
   14001ac6c:	cmp    BYTE PTR [rdi-0x33de9a3c],cl
   14001ac72:	add    ebx,DWORD PTR [rbp+0xe]
   14001ac75:	ins    BYTE PTR es:[rdi],dx
   14001ac76:	rex.WRX and r13b,bl
   14001ac79:	xchg   ebp,eax
   14001ac7a:	or     bl,BYTE PTR [rbx+rbp*4]
   14001ac7d:	rex.W
   14001ac7e:	cmp    DWORD PTR ds:[rsi+0x2d],0x3c
   14001ac83:	jge    0x14001ac7a
   14001ac85:	gs jle 0x14001ac6c
   14001ac88:	mov    ecx,0xaf6ed38f
   14001ac8d:	clc    
   14001ac8e:	loopne 0x14001ac2f
   14001ac90:	cli    
   14001ac91:	add    al,0xe1
   14001ac93:	sahf   
   14001ac94:	addr32 mov eax,0xd980f575
   14001ac9a:	and    al,0x32
   14001ac9c:	ficom  DWORD PTR ss:[rbp-0x3654848]
   14001aca4:	imul   r10,QWORD PTR [rsp+r12*4],0x2b
   14001aca9:	rex.W (bad) 
   14001acab:	nop
   14001acac:	shl    edi,1
   14001acae:	mov    bl,0xde
   14001acb0:	push   rdi
   14001acb1:	mov    cl,0x8d
   14001acb3:	adc    DWORD PTR ds:[rbp+0x18],edx
   14001acb7:	sahf   
   14001acb8:	jrcxz  0x14001ace9
   14001acba:	(bad)  
   14001acbb:	std    
   14001acbc:	(bad)  
   14001acbd:	and    dh,ch
   14001acbf:	jae    0x14001ad1f
   14001acc1:	test   BYTE PTR [rbx-0x54],dl
   14001acc4:	ss loopne 0x14001acb7
   14001acc7:	adc    BYTE PTR [rsi],dh
   14001acc9:	pop    rbp
   14001acca:	and    DWORD PTR [rsi],esi
   14001accc:	mov    DWORD PTR [rax],ebx
   14001acce:	fwait
   14001accf:	jae    0x14001ace2
   14001acd1:	out    dx,al
   14001acd2:	in     al,dx
   14001acd3:	nop
   14001acd4:	pop    rsp
   14001acd5:	fmul   QWORD PTR [rbp+0x50]
   14001acd8:	sbb    BYTE PTR [rbx+0x10],bl
   14001acdb:	or     esp,DWORD PTR [rsi]
   14001acdd:	pop    rdx
   14001acde:	rex int3 
   14001ace0:	push   0xffffffffff4479bf
   14001ace5:	jne    0x14001acc6
   14001ace7:	fcmovu st,st(1)
   14001ace9:	jo     0x14001aca0
   14001aceb:	add    al,0xd9
   14001aced:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001acee:	mov    bl,0xce
   14001acf0:	jrcxz  0x14001ad6a
   14001acf2:	inc    BYTE PTR [rdx+0x7d]
   14001acf5:	test   eax,0x30bce9
   14001acfa:	in     eax,0xfa
   14001acfc:	(bad)  
   14001acfd:	stos   BYTE PTR es:[rdi],al
   14001acfe:	in     eax,dx
   14001acff:	rex.XB pop r13
   14001ad01:	lock mov ch,0xbe
   14001ad04:	(bad)
   14001ad08:	hlt    
   14001ad09:	xor    DWORD PTR [rdx-0x4a161ccc],ebx
   14001ad0f:	ja     0x14001acda
   14001ad11:	adc    al,0xca
   14001ad13:	pop    rax
   14001ad14:	cmp    DWORD PTR [rdi+rbp*4+0x1f],eax
   14001ad18:	lock retf 0x9d3a
   14001ad1c:	fs pop rbx
   14001ad1e:	movabs ax,ds:0xfd07590ff15419c6
   14001ad28:	lods   al,BYTE PTR ds:[rsi]
   14001ad29:	rex.RXB call 0x10a8f4fd4
   14001ad2f:	push   rsp
   14001ad30:	xor    al,0x6b
   14001ad32:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ad33:	jrcxz  0x14001ad50
   14001ad35:	stos   DWORD PTR es:[rdi],eax
   14001ad36:	jno    0x14001ad8a
   14001ad38:	(bad)  
   14001ad39:	mov    bh,0x9e
   14001ad3b:	fsub   DWORD PTR [rdx+0x6c30a73f]
   14001ad41:	cmp    DWORD PTR [rsi+0x29a2e32d],esp
   14001ad47:	ds xchg edi,eax
   14001ad49:	mov    DWORD PTR [rcx+0x51],edx
   14001ad4c:	pop    rax
   14001ad4d:	jo     0x14001acf6
   14001ad4f:	jrcxz  0x14001ad1e
   14001ad51:	rex.WX (bad) 
   14001ad53:	xchg   edi,eax
   14001ad54:	mov    ebx,0x19b84210
   14001ad59:	mov    ah,0x52
   14001ad5b:	in     al,0x8e
   14001ad5d:	(bad)  
   14001ad5e:	mov    edi,0xf80002a1
   14001ad63:	iret   
   14001ad64:	(bad)  
   14001ad65:	clc    
   14001ad66:	rex.RXB inc r13b
   14001ad69:	leave  
   14001ad6a:	leave  
   14001ad6b:	cli    
   14001ad6c:	out    0x14,eax
   14001ad6e:	(bad)  
   14001ad6f:	stos   BYTE PTR es:[rdi],al
   14001ad70:	sbb    DWORD PTR [rdx+0x6ad35201],ecx
   14001ad76:	test   DWORD PTR [rax-0x5a9f6ab],esp
   14001ad7c:	lods   al,BYTE PTR ds:[rsi]
   14001ad7d:	sub    eax,0x80ae6092
   14001ad82:	(bad)  
   14001ad83:	sbb    BYTE PTR [rdi-0x444b8582],cl
   14001ad89:	rex.X mov ebp,0x4d92c150
   14001ad8f:	xchg   edx,eax
   14001ad90:	or     al,0xf0
   14001ad92:	rex.W xor dl,bl
   14001ad95:	icebp  
   14001ad96:	and    al,dh
   14001ad98:	outs   dx,BYTE PTR ds:[rsi]
   14001ad99:	mov    ecx,0xca4758d5
   14001ad9e:	fisubr DWORD PTR [rdx]
   14001ada0:	ret    0xfa8a
   14001ada3:	mov    DWORD PTR [rbx+0xefa4249],edx
   14001ada9:	mov    edx,0xb34f448e
   14001adae:	or     esp,eax
   14001adb0:	movsxd ebx,eax
   14001adb2:	pop    rsp
   14001adb3:	fist   WORD PTR [rax+0x6e]
   14001adb6:	sub    cl,BYTE PTR [rcx-0x3c354fbb]
   14001adbc:	adc    ch,BYTE PTR [rax]
   14001adbe:	jge    0x14001ade6
   14001adc0:	scas   eax,DWORD PTR es:[rdi]
   14001adc1:	cmp    cl,dl
   14001adc3:	sbb    ch,BYTE PTR [rax+0x20]
   14001adc6:	sub    al,0x22
   14001adc8:	(bad)  
   14001adc9:	(bad)  
   14001adca:	and    DWORD PTR [rdi],esp
   14001adcc:	cli    
   14001adcd:	rex.WRB
   14001adce:	rex.WXB movabs r15,0x749e9c29fde3f6d1
   14001add8:	fdivr  QWORD PTR [rsi]
   14001adda:	pop    rbx
   14001addb:	jae    0x14001ad99
   14001addd:	out    dx,al
   14001adde:	pop    rcx
   14001addf:	lods   eax,DWORD PTR ds:[rsi]
   14001ade0:	xor    ch,bl
   14001ade2:	outs   dx,BYTE PTR ds:[rsi]
   14001ade3:	ret    
   14001ade4:	lods   eax,DWORD PTR ds:[rsi]
   14001ade5:	int    0x11
   14001ade7:	(bad)  
   14001ade8:	(bad)  
   14001ade9:	(bad)  
   14001adea:	shr    esp,cl
   14001adec:	outs   dx,DWORD PTR ds:[rsi]
   14001aded:	(bad)  
   14001adee:	cmp    al,0xf1
   14001adf0:	cmp    eax,0xf67ac8bf
   14001adf5:	add    dh,BYTE PTR [rdi+0x3e653e5e]
   14001adfb:	mov    ebp,DWORD PTR [rdi+rdx*4]
   14001adfe:	lea    ecx,[rbp+0x38]
   14001ae01:	js     0x14001ad8e
   14001ae03:	outs   dx,DWORD PTR ds:[rsi]
   14001ae04:	rex.WX shl QWORD PTR [rsi],1
   14001ae07:	pop    rax
   14001ae08:	jge    0x14001adb0
   14001ae0a:	je     0x14001ad91
   14001ae0c:	fmul   QWORD PTR [rcx-0x6f56a2eb]
   14001ae12:	test   eax,0x9f62d7b5
   14001ae17:	xchg   edx,eax
   14001ae18:	xchg   ebp,eax
   14001ae19:	mov    cl,BYTE PTR [rbx-0x6a]
   14001ae1c:	fcmovu st,st(0)
   14001ae1e:	rex.XB jmp FWORD PTR [r14]
   14001ae21:	stos   BYTE PTR es:[rdi],al
   14001ae22:	ror    BYTE PTR [rax*2-0x3166eb5c],0x5a
   14001ae2a:	outs   dx,BYTE PTR ds:[rsi]
   14001ae2b:	fidivr WORD PTR [rax-0x28140a3f]
   14001ae31:	pop    rax
   14001ae32:	popf   
   14001ae33:	sahf   
   14001ae34:	adc    DWORD PTR [rax],ecx
   14001ae36:	rex.WR
   14001ae37:	fidivr DWORD PTR es:[rdx+0x701a69ab]
   14001ae3e:	jg     0x14001ae16
   14001ae40:	loopne 0x14001ae98
   14001ae42:	ins    DWORD PTR es:[rdi],dx
   14001ae43:	jmp    FWORD PTR [rbp+0x5]
   14001ae46:	rex.RXB
   14001ae47:	rex.RB mov r10b,0x9
   14001ae4a:	xchg   esi,eax
   14001ae4b:	rol    DWORD PTR [rdx-0x34eb3eb3],1
   14001ae51:	cmp    eax,0x3b320c8a
   14001ae56:	out    dx,al
   14001ae57:	cmc    
   14001ae58:	scas   eax,DWORD PTR es:[rdi]
   14001ae59:	xor    DWORD PTR [rdi],ebx
   14001ae5b:	mov    bl,0xd2
   14001ae5d:	outs   dx,DWORD PTR ds:[rsi]
   14001ae5e:	pop    rcx
   14001ae5f:	cmp    eax,0xa3d6f083
   14001ae64:	rex.X jns 0x14001ae76
   14001ae67:	test   BYTE PTR [rip+0x1e819fd1],0x3d        # 0x15e834e3f
   14001ae6e:	pop    rax
   14001ae6f:	pop    rsp
   14001ae70:	lea    ecx,[rbp+0x3b529ba8]
   14001ae76:	in     eax,dx
   14001ae77:	pop    rdx
   14001ae78:	popf   
   14001ae79:	lea    edx,[rdi+0xe20ab7f]
   14001ae7f:	and    al,0x9d
   14001ae81:	mov    cl,0x7b
   14001ae83:	and    dl,BYTE PTR [rdx]
   14001ae85:	lods   eax,DWORD PTR ds:[rsi]
   14001ae86:	es (bad) 
   14001ae88:	and    BYTE PTR [rdi+0x50],bh
   14001ae8b:	movabs eax,ds:0xfe8dc938bc51757
   14001ae94:	(bad)
   14001ae97:	pop    rax
   14001ae98:	mov    bl,0x59
   14001ae9a:	push   rbx
   14001ae9b:	adc    cl,dl
   14001ae9d:	test   DWORD PTR [rsi],edi
   14001ae9f:	mov    eax,0xfc601765
   14001aea4:	jns    0x14001aee3
   14001aea6:	jg     0x14001aedc
   14001aea8:	and    al,0x53
   14001aeaa:	fstp   TBYTE PTR [rbp-0x7b]
   14001aead:	sub    BYTE PTR [rdi-0x3],0x15
   14001aeb1:	loop   0x14001ae9b
   14001aeb3:	jp     0x14001ae63
   14001aeb5:	jl     0x14001af21
   14001aeb7:	(bad)  
   14001aeb8:	movabs ds:0x6973d949154db838,eax
   14001aec1:	rex.XB xchg r13d,eax
   14001aec3:	jrcxz  0x14001aed5
   14001aec5:	push   0xffffffffffffffc3
   14001aec7:	leave  
   14001aec8:	cmp    esi,DWORD PTR [rsi-0x4]
   14001aecb:	xchg   BYTE PTR [rcx],dh
   14001aecd:	add    BYTE PTR [rax-0xe1b8371],al
   14001aed3:	stos   DWORD PTR es:[rdi],eax
   14001aed4:	xchg   edi,eax
   14001aed5:	mov    edi,0x24fd2fe1
   14001aeda:	(bad)  
   14001aedb:	mov    bh,0xbf
   14001aedd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001aede:	in     al,0x56
   14001aee0:	ja     0x14001aeaf
   14001aee2:	sub    edx,ebx
   14001aee4:	es sub al,0x4e
   14001aee7:	sbb    ah,BYTE PTR [rdx-0x51]
   14001aeea:	or     ebx,edx
   14001aeec:	mov    ecx,0x1580fee0
   14001aef1:	add    DWORD PTR [rax+0x66b4616b],ecx
   14001aef7:	mov    esi,0x79ba115d
   14001aefc:	cmp    eax,0x60a507bf
   14001af01:	fs pop rax
   14001af03:	sub    cl,BYTE PTR [rbx+0x532480a2]
   14001af09:	pcmpgtw mm0,QWORD PTR [rax+0xf]
   14001af0d:	(bad)  
   14001af0e:	jo     0x14001aecd
   14001af10:	rex.R retf 0xd0aa
   14001af14:	rex.R sub eax,0x4743e8fc
   14001af1a:	int3   
   14001af1b:	pop    rdx
   14001af1c:	stos   DWORD PTR es:[rdi],eax
   14001af1d:	(bad)  
   14001af1e:	jp     0x14001af28
   14001af20:	xchg   ebx,eax
   14001af21:	rex enter 0xcf90,0x7a
   14001af26:	mov    edx,0x58eb0cc3
   14001af2b:	xchg   ebp,eax
   14001af2c:	mov    WORD PTR [rax],ds
   14001af2e:	in     al,dx
   14001af2f:	xchg   edi,eax
   14001af30:	sub    dh,0xf2
   14001af33:	imul   ebx,DWORD PTR [rdx],0x3a
   14001af36:	in     al,dx
   14001af37:	rex.R
   14001af38:	rex.WRB jmp 0x151d62fab
   14001af3e:	addr32 cmp eax,0xdd7e87b9
   14001af44:	and    dl,BYTE PTR [rcx+0x68]
   14001af47:	(bad)  
   14001af48:	rex.X xor ecx,ebx
   14001af4b:	(bad)  
   14001af4c:	sbb    bh,BYTE PTR [rdi+0x8d90569]
   14001af52:	mov    edi,0xfc33f57c
   14001af57:	test   BYTE PTR [rdi],0x3e
   14001af5a:	rcr    bl,0xff
   14001af5d:	call   0x17f5592a1
   14001af62:	js     0x14001afa8
   14001af64:	jle    0x14001af5c
   14001af66:	sub    esp,0xffffffdd
   14001af69:	mov    ebx,0xd0e29e60
   14001af6e:	mov    cs,WORD PTR [rax+rcx*4]
   14001af71:	rex.WB lods rax,QWORD PTR ds:[rsi]
   14001af73:	out    dx,al
   14001af74:	ins    WORD PTR es:[rdi],dx
   14001af76:	mov    ah,BYTE PTR [rax+0x1604a93]
   14001af7c:	push   0x60
   14001af7e:	push   rax
   14001af7f:	xchg   edx,eax
   14001af81:	loop   0x14001af85
   14001af83:	gs push rax
   14001af85:	cwde   
   14001af86:	ss adc al,0x35
   14001af89:	push   rdi
   14001af8a:	in     al,dx
   14001af8b:	sbb    DWORD PTR [rbx-0x1a22263],eax
   14001af91:	lahf   
   14001af92:	mov    edi,0xf1f8b7f3
   14001af97:	(bad)  
   14001af98:	sti    
   14001af99:	xor    esi,ebp
   14001af9b:	mov    ebx,0x7fee7eff
   14001afa0:	call   0x16ef8a5c6
   14001afa5:	xor    BYTE PTR [rbp-0x262226b3],bl
   14001afab:	movsxd esi,edi
   14001afad:	loop   0x14001aff4
   14001afaf:	div    BYTE PTR [rsi+0x77]
   14001afb2:	test   BYTE PTR [r14-0x79256f67],spl
   14001afb9:	adc    BYTE PTR [rbx],dl
   14001afbb:	and    eax,0x4d8d65ab
   14001afc0:	rex.WXB push r11
   14001afc2:	and    BYTE PTR [rsi-0x64a893e2],al
   14001afc8:	push   0xfffffffffffffff9
   14001afca:	xor    DWORD PTR [rbx],ecx
   14001afcc:	cmp    eax,0x71479ff6
   14001afd1:	sbb    cl,BYTE PTR [rip+0xffffffff8f7a85ae]        # 0xcf7c3585
   14001afd7:	add    ebx,esi
   14001afd9:	(bad)  
   14001afda:	rcl    DWORD PTR [rax],cl
   14001afdc:	hlt    
   14001afdd:	lods   eax,DWORD PTR ds:[rsi]
   14001afde:	movabs eax,ds:0x1b5b78edcfe7f332
   14001afe7:	out    dx,al
   14001afe8:	test   BYTE PTR [rbx+0x7e],dh
   14001afeb:	lahf   
   14001afec:	mov    DWORD PTR [rsi],0x6ba2f77a
   14001aff2:	sbb    DWORD PTR [ebx],esi
   14001aff5:	xor    ah,BYTE PTR [rdx]
   14001aff7:	mov    ch,0x6c
   14001aff9:	ja     0x14001b033
   14001affb:	test   DWORD PTR [rdx],esi
   14001affd:	and    al,0x9d
   14001afff:	push   rsp
   14001b000:	adc    al,0x95
   14001b002:	mov    bh,0x8d
   14001b004:	(bad)  
   14001b005:	loope  0x14001b031
   14001b007:	mov    WORD PTR [rdi+0x428a9b50],gs
   14001b00d:	(bad)  
   14001b00e:	(bad)  
   14001b00f:	pop    rdi
   14001b010:	mov    WORD PTR [rcx+0x632bf1a7],gs
   14001b016:	js     0x14001b000
   14001b018:	rex.XB cdq 
   14001b01a:	adc    dl,dl
   14001b01c:	sti    
   14001b01d:	lods   al,BYTE PTR ds:[rsi]
   14001b01e:	fstp   TBYTE PTR [rbp+0x1568cbd9]
   14001b024:	xlat   BYTE PTR ds:[rbx]
   14001b025:	sbb    BYTE PTR [rdi+0x304bec30],cl
   14001b02b:	and    BYTE PTR [rax-0x1573b7b8],0x27
   14001b032:	xchg   BYTE PTR [rax*8-0x3aa38968],cl
   14001b039:	rex.B adc eax,0x66f9dd0
   14001b03f:	shr    BYTE PTR [rdi+0x42],0x1
   14001b043:	add    ah,bh
   14001b045:	mov    cl,0x7f
   14001b047:	repz rex.XB (bad) 
   14001b04a:	repz cmp DWORD PTR [rdi-0x13],0xffffffc7
   14001b04f:	(bad)  
   14001b051:	fwait
   14001b052:	rex.WRXB out dx,eax
   14001b054:	sub    eax,0xdb48f5d
   14001b059:	and    DWORD PTR [rip+0xffffffffad286a52],esp        # 0xed2a1ab1
   14001b05f:	outs   dx,BYTE PTR ds:[rsi]
   14001b060:	rex.X push rcx
   14001b062:	mov    ebp,DWORD PTR [rdx]
   14001b064:	stos   BYTE PTR es:[rdi],al
   14001b065:	adc    al,0xf
   14001b067:	sub    DWORD PTR [rdx+rbp*4-0x2d6bf673],edx
   14001b06e:	adc    eax,ebx
   14001b070:	sbb    DWORD PTR [rcx-0x4a],eax
   14001b073:	rex.RXB
   14001b074:	rex.W push rdx
   14001b076:	sbb    al,0xeb
   14001b078:	fwait
   14001b079:	mov    ch,BYTE PTR [rdi]
   14001b07b:	adc    DWORD PTR [rbp+0x31],0xffffffa6
   14001b07f:	sbb    al,0x12
   14001b081:	sub    al,BYTE PTR [rbp-0x2a]
   14001b084:	std    
   14001b085:	rex.WRB lods rax,QWORD PTR ds:[rsi]
   14001b087:	(bad)  
   14001b088:	sub    eax,DWORD PTR [rcx+rdx*8]
   14001b08b:	mov    cl,0x91
   14001b08d:	nop
   14001b08e:	pop    rcx
   14001b08f:	scas   eax,DWORD PTR es:[rdi]
   14001b090:	xor    ah,ch
   14001b092:	and    al,0x91
   14001b094:	xchg   edx,eax
   14001b095:	pop    rdx
   14001b096:	retf   
   14001b097:	mov    bl,0xe3
   14001b099:	or     eax,0x3e905a72
   14001b09e:	xor    bh,0xf0
   14001b0a1:	adc    esi,ebx
   14001b0a3:	repz mov ebx,0xd323d200
   14001b0a9:	or     eax,0x8b119da1
   14001b0ae:	ss popf 
   14001b0b0:	xchg   esp,eax
   14001b0b1:	test   eax,0x4b468720
   14001b0b6:	cwde   
   14001b0b7:	es pop rbp
   14001b0b9:	adc    al,0x13
   14001b0bb:	and    DWORD PTR [rbx+0x7d2c0ef6],ecx
   14001b0c1:	rol    dh,1
   14001b0c3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b0c4:	or     eax,0x56806db4
   14001b0c9:	and    BYTE PTR [rbp+0x7e],ah
   14001b0cc:	icebp  
   14001b0cd:	(bad)  
   14001b0ce:	(bad)  
   14001b0cf:	stc    
   14001b0d0:	rol    BYTE PTR [rbx-0x207c1e11],1
   14001b0d6:	imul   ebx
   14001b0d8:	jl     0x14001b0c4
   14001b0da:	out    dx,eax
   14001b0db:	(bad)  
   14001b0dc:	jo     0x14001b15a
   14001b0de:	je     0x14001b10f
   14001b0e0:	imul   edx,DWORD PTR [rsi],0x4876cf68
   14001b0e6:	int3   
   14001b0e7:	or     DWORD PTR [rcx+0x4a],edi
   14001b0ea:	enter  0xb613,0xe6
   14001b0ee:	fisttp DWORD PTR [rdx+rbx*4+0x40]
   14001b0f2:	xor    ebp,DWORD PTR [rbp+0x8]
   14001b0f5:	rex.R outs dx,BYTE PTR ds:[rsi]
   14001b0f7:	(bad)  
   14001b0f8:	ins    BYTE PTR es:[rdi],dx
   14001b0f9:	call   0xe14e0878
   14001b0fe:	(bad)  
   14001b0ff:	mov    ebx,ebx
   14001b101:	imul   ebp,DWORD PTR [rdi],0xe
   14001b104:	rcl    dl,cl
   14001b106:	(bad)  
   14001b107:	pop    rbx
   14001b108:	shl    BYTE PTR [rsi+0xb4c74a2],0x4d
   14001b10f:	fcomi  st,st(0)
   14001b111:	sbb    eax,0x349df9df
   14001b116:	xchg   ebx,eax
   14001b117:	sub    DWORD PTR [rdi-0x1f60f40c],edi
   14001b11d:	out    0x7f,eax
   14001b11f:	mul    BYTE PTR [rdi+0x39]
   14001b122:	cmp    edi,DWORD PTR [rip+0x515ebd65]        # 0x191606e8d
   14001b128:	jb     0x14001b190
   14001b12a:	mov    esi,0xb7b3b25c
   14001b12f:	(bad)  
   14001b130:	(bad)
   14001b135:	fs ja  0x14001b1af
   14001b138:	(bad)  
   14001b139:	retf   
   14001b13a:	xchg   edi,eax
   14001b13b:	out    dx,eax
   14001b13c:	data16 xor bl,BYTE PTR [rcx+0x1613b4d0]
   14001b143:	pop    rbx
   14001b144:	pop    rbx
   14001b145:	sub    al,0xb7
   14001b147:	mov    dh,0x69
   14001b149:	xor    edx,DWORD PTR es:[rsi+0x7d]
   14001b14d:	sqrtps xmm3,XMMWORD PTR [rcx]
   14001b150:	jge    0x14001b13f
   14001b152:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b153:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b154:	(bad)  
   14001b155:	call   0x13105e7dd
   14001b15a:	stos   DWORD PTR es:[rdi],eax
   14001b15b:	(bad)  
   14001b15c:	xchg   ebp,eax
   14001b15d:	add    ch,0x76
   14001b160:	or     eax,edx
   14001b162:	lods   eax,DWORD PTR ds:[rsi]
   14001b163:	repz cmp edi,edx
   14001b166:	(bad)  
   14001b167:	add    al,0xb5
   14001b169:	frstor [rdi]
   14001b16b:	(bad)  
   14001b16c:	(bad)  
   14001b16d:	pop    rax
   14001b16e:	add    eax,0xf56bea7
   14001b173:	rex xlat BYTE PTR ds:[rbx]
   14001b175:	fstp   QWORD PTR [r14+rdx*8-0x6b729254]
   14001b17d:	mov    ebx,0x82ba3327
   14001b182:	(bad)  
   14001b183:	mov    esi,0x10a796ed
   14001b188:	lods   eax,DWORD PTR ds:[rsi]
   14001b189:	outs   dx,DWORD PTR ds:[rsi]
   14001b18a:	jmp    0x14001b16c
   14001b18c:	jne    0x14001b116
   14001b18e:	mov    DWORD PTR [rbx+0xc0f7659],ebx
   14001b194:	push   rdx
   14001b195:	out    dx,eax
   14001b196:	xor    BYTE PTR [rax-0x736d3e44],dl
   14001b19c:	jb     0x14001b1f1
   14001b19e:	ret    0xf540
   14001b1a1:	sbb    eax,0xa3e8391a
   14001b1a6:	or     al,0xfc
   14001b1a8:	loope  0x14001b174
   14001b1aa:	(bad)  
   14001b1ab:	movabs al,ds:0x66323eb382c18436
   14001b1b4:	and    BYTE PTR [rbp-0x74],al
   14001b1b7:	cmp    eax,0x6088628
   14001b1bc:	ja     0x14001b229
   14001b1be:	jo     0x14001b169
   14001b1c0:	cld    
   14001b1c1:	cld    
   14001b1c2:	outs   dx,DWORD PTR ds:[rsi]
   14001b1c3:	(bad)
   14001b1c6:	(bad)  
   14001b1c7:	clc    
   14001b1c8:	sub    QWORD PTR [r8-0xd138391],r8
   14001b1cf:	(bad)  
   14001b1d0:	std    
   14001b1d1:	int    0xb6
   14001b1d3:	jns    0x14001b17f
   14001b1d5:	hlt    
   14001b1d6:	in     eax,0xf7
   14001b1d8:	xchg   ebp,eax
   14001b1d9:	scas   al,BYTE PTR es:[rdi]
   14001b1da:	sub    BYTE PTR [rdi],ah
   14001b1dc:	movabs al,ds:0xce77d0cd28119a49
   14001b1e5:	or     ah,BYTE PTR [rbp-0x3a]
   14001b1e8:	xchg   ebx,eax
   14001b1e9:	pop    rcx
   14001b1ea:	xor    eax,0xec598da3
   14001b1ef:	(bad)  
   14001b1f0:	test   BYTE PTR [rsi+0x51],0x73
   14001b1f4:	sub    BYTE PTR [rdx],dh
   14001b1f6:	cli    
   14001b1f7:	lock enter 0x9832,0x52
   14001b1fc:	test   al,0x9e
   14001b1fe:	push   rcx
   14001b1ff:	mov    ch,0xa0
   14001b201:	add    ebp,0x22080b76
   14001b207:	cmp    eax,0x964d6765
   14001b20c:	sahf   
   14001b20d:	xor    al,0xb1
   14001b20f:	call   0x112d35d09
   14001b214:	fld    TBYTE PTR [rcx+0x2565defa]
   14001b21a:	rcr    BYTE PTR [rbx-0x451291ba],1
   14001b220:	and    eax,0x820d2980
   14001b225:	ins    DWORD PTR es:[rdi],dx
   14001b226:	test   DWORD PTR [rbp-0x2f2b5bca],edx
   14001b22c:	(bad)  
   14001b22d:	(bad)  
   14001b22e:	and    al,0x64
   14001b230:	pop    rax
   14001b231:	(bad)  
   14001b232:	cmp    al,0xf2
   14001b234:	adc    al,0x1b
   14001b236:	add    DWORD PTR [rsi+0x79],0xd5817ddd
   14001b23d:	pop    rdx
   14001b23e:	cdq    
   14001b23f:	nop
   14001b240:	xchg   ebx,eax
   14001b241:	rex.RB (bad) 
   14001b243:	mov    DWORD PTR ss:[rbx+rax*2-0x1c],ecx
   14001b248:	cmp    BYTE PTR [rdi-0x72],ah
   14001b24b:	xlat   BYTE PTR ds:[rbx]
   14001b24c:	cmp    eax,0xe7d2f8bf
   14001b251:	js     0x14001b2c7
   14001b253:	div    DWORD PTR [rdx]
   14001b255:	out    dx,eax
   14001b256:	sti    
   14001b257:	sahf   
   14001b258:	or     DWORD PTR [rbx-0x58e15cbb],edi
   14001b25e:	jmp    0x14001b2b7
   14001b260:	call   0x1bc95515f
   14001b265:	enter  0x5f95,0x78
   14001b269:	test   ch,bh
   14001b26b:	movabs ds:0xd87657f4bde6e939,eax
   14001b274:	fstp   st(3)
   14001b276:	gs out 0xc2,eax
   14001b279:	xchg   esp,eax
   14001b27a:	std    
   14001b27b:	jmp    0x14001b2a8
   14001b27d:	rex.WX outs dx,DWORD PTR ds:[rsi]
   14001b27f:	movabs al,ds:0x81c0b5085bafa0d8
   14001b288:	or     DWORD PTR [rax],0x1642c32f
   14001b28e:	sub    BYTE PTR [rip+0xffffffffc9e67391],ah        # 0x109e82625
   14001b294:	idiv   DWORD PTR [rsi+0x1d]
   14001b297:	pop    rdi
   14001b298:	sti    
   14001b299:	fisubr WORD PTR [rdi+0x5bcde6e3]
   14001b29f:	mov    esp,0x7cf3fcf0
   14001b2a4:	out    dx,al
   14001b2a5:	jmp    0xd3fc2c51
   14001b2aa:	lahf   
   14001b2ab:	in     al,0xb9
   14001b2ad:	addr32 sahf 
   14001b2af:	loope  0x14001b297
   14001b2b1:	cmc    
   14001b2b2:	imul   ebx,esp,0xffffffba
   14001b2b5:	jne    0x14001b24a
   14001b2b7:	sub    ebp,DWORD PTR [rdi+0x77df4abe]
   14001b2bd:	add    al,0x14
   14001b2bf:	pop    rdx
   14001b2c0:	cli    
   14001b2c1:	loop   0x14001b32d
   14001b2c3:	ficom  DWORD PTR [rsi-0x9368d07]
   14001b2c9:	div    BYTE PTR [rsi]
   14001b2cb:	mov    bl,0xd9
   14001b2cd:	pushf  
   14001b2ce:	(bad)
   14001b2d1:	jl     0x14001b284
   14001b2d3:	movabs al,ds:0xbbdb96132768ce9d
   14001b2dc:	int3   
   14001b2dd:	(bad)  
   14001b2de:	rex.WXB out 0xcb,al
   14001b2e1:	and    eax,0x7d16e5f3
   14001b2e6:	rex.WR cmps BYTE PTR cs:[rsi],BYTE PTR es:[rdi]
   14001b2e9:	adc    esp,DWORD PTR [rsi-0x216fd553]
   14001b2ef:	loop   0x14001b334
   14001b2f1:	and    eax,0xd0458d60
   14001b2f6:	stos   BYTE PTR es:[rdi],al
   14001b2f7:	cmp    al,0x80
   14001b2f9:	loop   0x14001b27f
   14001b2fb:	cwde   
   14001b2fc:	movabs eax,ds:0xe07893f41906a026
   14001b305:	ja     0x14001b2e3
   14001b307:	jnp    0x14001b2bf
   14001b309:	out    dx,eax
   14001b30a:	lods   eax,DWORD PTR ds:[rsi]
   14001b30b:	mov    esi,0x7fb42dc0
   14001b310:	iret   
   14001b311:	(bad)  
   14001b312:	ret    
   14001b313:	jo     0x14001b31f
   14001b315:	test   eax,0xfd2b47ca
   14001b31a:	pushf  
   14001b31b:	(bad)  
   14001b31c:	and    BYTE PTR [rdx+0x38],ch
   14001b31f:	sub    BYTE PTR [rsi-0x54daf8bc],al
   14001b325:	sub    BYTE PTR [rsi-0x62bac746],al
   14001b32b:	ja     0x14001b35a
   14001b32d:	jmp    0x14001b324
   14001b32f:	cwde   
   14001b330:	mov    DWORD PTR [rbx],edi
   14001b332:	clc    
   14001b333:	(bad)  
   14001b334:	xchg   esp,eax
   14001b335:	call   0x19e77f670
   14001b33a:	stos   DWORD PTR es:[rdi],eax
   14001b33b:	clc    
   14001b33c:	cmp    eax,0x504ed4a
   14001b341:	pop    rsi
   14001b342:	or     ch,BYTE PTR [rsi-0x2fdaf3c5]
   14001b348:	fisttp QWORD PTR [rbp+rbx*8-0x97d2638]
   14001b34f:	jb     0x14001b3b4
   14001b351:	rex.WRXB pop r15
   14001b353:	jp     0x14001b3a5
   14001b355:	xor    al,0xdb
   14001b357:	jne    0x14001b336
   14001b359:	mov    ebp,0x1e5fe441
   14001b35e:	add    bh,al
   14001b360:	scas   al,BYTE PTR es:[rdi]
   14001b361:	(bad)  
   14001b362:	hlt    
   14001b363:	or     eax,0xfbfd4ff9
   14001b368:	jg     0x14001b365
   14001b36a:	rex.RXB (bad) 
   14001b36c:	fistp  WORD PTR [rdi]
   14001b36e:	jp     0x14001b35a
   14001b370:	ja     0x14001b361
   14001b372:	rex.WRB fidiv DWORD PTR [r14-0x2ecb7a8c]
   14001b379:	push   rsp
   14001b37a:	mov    BYTE PTR [r9+0x628d64d8],r9b
   14001b381:	xchg   edi,eax
   14001b382:	pop    rdx
   14001b383:	add    eax,eax
   14001b385:	cmp    DWORD PTR [rbx+0x20],ebx
   14001b388:	push   rsp
   14001b389:	(bad)  
   14001b38a:	mov    bh,0x4e
   14001b38c:	(bad)
   14001b391:	xchg   esp,eax
   14001b392:	or     BYTE PTR [rdi-0xe],ch
   14001b395:	repz (bad) 
   14001b397:	retf   0xc1a6
   14001b39a:	cmp    eax,0xd6c8a620
   14001b39f:	(bad)  
   14001b3a0:	xchg   esp,eax
   14001b3a1:	jbe    0x14001b3b5
   14001b3a3:	mov    ecx,0x5635c6f9
   14001b3a8:	fcmovne st,st(7)
   14001b3aa:	rcr    esi,1
   14001b3ac:	mov    bl,0xa6
   14001b3ae:	mov    ah,0x1d
   14001b3b0:	imul   ebx,DWORD PTR [rdx],0x6c8236e9
   14001b3b6:	add    dh,BYTE PTR [rdx+rbp*2]
   14001b3b9:	cdq    
   14001b3ba:	ret    0x420a
   14001b3bd:	addr32 add dl,ah
   14001b3c0:	pop    rax
   14001b3c1:	mov    cx,0x1a4f
   14001b3c5:	cmp    ebp,DWORD PTR [rax]
   14001b3c7:	or     cl,BYTE PTR [rip+0xb584025]        # 0x14b59f3f2
   14001b3cd:	jns    0x14001b3e5
   14001b3cf:	push   0xfffffffff946c822
   14001b3d4:	imul   BYTE PTR [rcx]
   14001b3d6:	or     ah,BYTE PTR [rdx]
   14001b3d8:	popf   
   14001b3d9:	cli    
   14001b3da:	movabs ds:0x136124a5912b5819,eax
   14001b3e3:	jne    0x14001b378
   14001b3e5:	(bad)  
   14001b3e6:	mov    esi,0x103cd213
   14001b3eb:	movabs ds:0xcd7eab12cf105650,al
   14001b3f4:	out    0x8f,eax
   14001b3f6:	pop    rsi
   14001b3f7:	jrcxz  0x14001b3be
   14001b3f9:	hlt    
   14001b3fa:	xchg   BYTE PTR [rsi-0x47],al
   14001b3fd:	fcmovnb st,st(4)
   14001b3ff:	(bad)  
   14001b400:	(bad)  
   14001b401:	(bad)  
   14001b402:	cmp    DWORD PTR [rdi],edx
   14001b404:	data16 adc al,0x1e
   14001b407:	clc    
   14001b408:	call   0x1bde1232e
   14001b40d:	nop
   14001b40e:	cmp    esi,0xffffff97
   14001b411:	stc    
   14001b412:	ret    0x2e27
   14001b415:	jo     0x14001b3fa
   14001b417:	(bad)  
   14001b418:	jl     0x14001b455
   14001b41a:	xchg   edi,eax
   14001b41b:	out    dx,al
   14001b41c:	mov    ecx,0x534b85c8
   14001b421:	imul   BYTE PTR [rdi-0x64]
   14001b424:	xchg   ecx,eax
   14001b425:	cmp    eax,ecx
   14001b427:	pop    rbx
   14001b428:	jg     0x14001b437
   14001b42a:	and    BYTE PTR [rbx+0x45301aa],bh
   14001b430:	push   rdx
   14001b431:	lods   eax,DWORD PTR ds:[rsi]
   14001b432:	movabs al,ds:0xbec7359c9e2e9a0e
   14001b43b:	mov    ebx,0x3ffbc7b7
   14001b440:	hlt    
   14001b441:	rex.B fdivrp st(3),st
   14001b444:	dec    BYTE PTR [rdi]
   14001b446:	lock in eax,dx
   14001b448:	jg     0x14001b43a
   14001b44a:	cmp    edi,DWORD PTR [rcx]
   14001b44c:	cmp    al,0x3c
   14001b44e:	loopne 0x14001b405
   14001b450:	xchg   edi,eax
   14001b451:	pop    rdi
   14001b452:	out    0xca,al
   14001b454:	retf   
   14001b455:	scas   eax,DWORD PTR es:[rdi]
   14001b456:	lock shl BYTE PTR [rbx-0x31],cl
   14001b45a:	repnz retf 0x2f4b
   14001b45e:	jno    0x14001b410
   14001b460:	mov    edi,0xaf2b95cf
   14001b465:	jae    0x14001b4d7
   14001b467:	jo     0x14001b429
   14001b469:	cli    
   14001b46a:	hlt    
   14001b46b:	xchg   esp,eax
   14001b46c:	int    0x66
   14001b46e:	ret    
   14001b46f:	leave  
   14001b470:	icebp  
   14001b471:	ins    DWORD PTR es:[rdi],dx
   14001b472:	rex.WRX outs dx,BYTE PTR ds:[rsi]
   14001b474:	fild   QWORD PTR [rsi-0x5953e770]
   14001b47a:	sahf   
   14001b47b:	shr    BYTE PTR [rsi+rdi*1+0x67],0x32
   14001b480:	cdq    
   14001b481:	xor    BYTE PTR [rcx-0x51d396b4],bl
   14001b487:	xor    BYTE PTR [rdi+0x2c],bl
   14001b48a:	pop    rax
   14001b48b:	outs   dx,BYTE PTR ds:[rsi]
   14001b48c:	out    dx,eax
   14001b48d:	call   0x16dccf860
   14001b492:	out    0xf3,al
   14001b494:	add    eax,0x2a2d2d8b
   14001b499:	pop    rdx
   14001b49a:	out    dx,al
   14001b49b:	in     al,dx
   14001b49c:	push   0x23
   14001b49e:	xchg   esp,eax
   14001b49f:	(bad)  
   14001b4a0:	xor    eax,0xa37ad02
   14001b4a5:	(bad)  
   14001b4a6:	mov    ah,0x9b
   14001b4a8:	stc    
   14001b4a9:	mov    ch,0xe4
   14001b4ab:	(bad)  
   14001b4ac:	lods   eax,DWORD PTR ds:[rsi]
   14001b4ad:	(bad)  
   14001b4ae:	rex.RB sub al,0xd7
   14001b4b1:	ds mov dh,0x1e
   14001b4b4:	push   rsp
   14001b4b5:	adc    al,0x10
   14001b4b7:	stos   BYTE PTR es:[rdi],al
   14001b4b8:	nop
   14001b4b9:	lea    esi,[rcx-0x2e]
   14001b4bc:	or     BYTE PTR [rax-0x7d9da2fa],0x3b
   14001b4c3:	xor    bl,BYTE PTR [rcx+riz*4]
   14001b4c6:	or     al,0xb1
   14001b4c8:	(bad)  
   14001b4c9:	jae    0x14001b4e1
   14001b4cb:	(bad)  
   14001b4cc:	imul   edi,DWORD PTR [rbx+0x61],0x4f7f5318
   14001b4d3:	mov    bh,ah
   14001b4d5:	fcom   QWORD PTR [rbx-0x71]
   14001b4d8:	jnp    0x14001b46e
   14001b4da:	push   rdx
   14001b4db:	adc    esi,DWORD PTR [rdi+0x35]
   14001b4de:	(bad)  
   14001b4df:	rol    WORD PTR [rax-0x368a1cf6],1
   14001b4e6:	mov    al,BYTE PTR [rsi]
   14001b4e8:	sub    al,ah
   14001b4ea:	jnp    0x14001b530
   14001b4ec:	sbb    bh,BYTE PTR [rdx]
   14001b4ee:	adc    ebx,eax
   14001b4f0:	sub    eax,0xc8e98f6
   14001b4f5:	(bad)  
   14001b4f6:	mov    ss,esp
   14001b4f8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b4f9:	adc    BYTE PTR [rcx+rbp*8+0x10a01554],ch
   14001b500:	mov    eax,0x9de11ee5
   14001b505:	cmp    al,0x7e
   14001b507:	push   rbx
   14001b508:	or     al,BYTE PTR [rax]
   14001b50a:	loopne 0x14001b4fe
   14001b50c:	vpandn xmm3,xmm6,XMMWORD PTR [rcx-0x416041dc]
   14001b514:	jl     0x14001b563
   14001b516:	(bad)  
   14001b517:	test   eax,ebx
   14001b519:	(bad)  
   14001b51a:	ret    0x5154
   14001b51d:	rex (bad) 
   14001b51f:	and    rbx,r12
   14001b522:	xor    eax,0x9dc03bdf
   14001b527:	movabs eax,ds:0x750e39b9f0acc65a
   14001b530:	icebp  
   14001b531:	(bad)  
   14001b532:	sub    dl,cl
   14001b534:	fwait
   14001b535:	scas   al,BYTE PTR es:[rdi]
   14001b536:	cmp    ch,BYTE PTR [rsp+rdi*8]
   14001b539:	adc    BYTE PTR [rdx],al
   14001b53b:	retf   
   14001b53c:	in     eax,dx
   14001b53d:	or     ebp,ecx
   14001b53f:	and    al,0x70
   14001b541:	repz cmc 
   14001b543:	fwait
   14001b544:	sbb    al,0x2e
   14001b546:	(bad)
   14001b54a:	jmp    FWORD PTR [rdi]
   14001b54c:	(bad)  
   14001b54d:	rex.RB
   14001b54e:	rex.WRXB xlat BYTE PTR ds:[rbx]
   14001b550:	stos   BYTE PTR es:[rdi],al
   14001b551:	fistp  WORD PTR [rdx+0x5189857b]
   14001b557:	add    ah,ch
   14001b559:	mov    ah,0x81
   14001b55b:	(bad)  
   14001b55c:	add    bl,BYTE PTR [rcx-0x7f011730]
   14001b562:	shl    BYTE PTR [rip+0x6f4b5295],cl        # 0x1af4d07fd
   14001b568:	(bad)  
   14001b569:	ds add al,0x24
   14001b56c:	data16 cli 
   14001b56e:	rcr    DWORD PTR [rsi+0xa144eb8],cl
   14001b574:	mov    dl,0x2c
   14001b576:	adc    rsi,QWORD PTR [rsp+rsi*8-0x6c6cd30a]
   14001b57e:	ret    0xd0b5
   14001b581:	stos   DWORD PTR es:[rdi],eax
   14001b582:	repnz rcl BYTE PTR [rsi+0x167299fe],cl
   14001b589:	call   0x1909c301d
   14001b58e:	fdiv   DWORD PTR [rdx+rax*4-0xc]
   14001b592:	pop    rcx
   14001b593:	fst    QWORD PTR [rcx+0x37eab00]
   14001b599:	or     DWORD PTR [rdx+0x69],esp
   14001b59c:	pop    rcx
   14001b59d:	ja     0x14001b5a6
   14001b59f:	je     0x14001b5fe
   14001b5a1:	cmovne edi,DWORD PTR [rax+0x7d]
   14001b5a5:	jb     0x14001b53a
   14001b5a7:	pop    rdi
   14001b5a8:	mov    edi,0xbc9e29f6
   14001b5ad:	mul    DWORD PTR [rcx-0x42]
   14001b5b0:	jmp    0x102fddd90
   14001b5b5:	(bad)  
   14001b5b6:	addr32 jns 0x14001b59c
   14001b5b9:	xchg   DWORD PTR [rsi+0x5e0fcb85],edi
   14001b5bf:	(bad)  
   14001b5c0:	out    dx,eax
   14001b5c1:	loop   0x14001b557
   14001b5c3:	std    
   14001b5c4:	sbb    ebp,DWORD PTR [rbx]
   14001b5c6:	cli    
   14001b5c7:	(bad)  
   14001b5c8:	lods   eax,DWORD PTR ds:[rsi]
   14001b5c9:	(bad)  
   14001b5ca:	iret   
   14001b5cb:	test   DWORD PTR [rax],0x40c98f3e
   14001b5d1:	ds xchg esp,eax
   14001b5d3:	gs lock mov cl,0x45
   14001b5d7:	test   BYTE PTR [rsi+0x22dc6d3],ch
   14001b5dd:	rex.WR out 0x73,eax
   14001b5e0:	cs (bad) 
   14001b5e2:	out    0xec,al
   14001b5e4:	fidivr WORD PTR [rbp+0xf]
   14001b5e7:	out    dx,eax
   14001b5e8:	cld    
   14001b5e9:	mov    edx,0x6bd791f7
   14001b5ee:	cli    
   14001b5ef:	cmc    
   14001b5f0:	mov    dh,ch
   14001b5f2:	jmp    0xee38bd00
   14001b5f7:	jae    0x14001b5a9
   14001b5f9:	jg     0x14001b5bb
   14001b5fb:	int    0xeb
   14001b5fd:	xlat   BYTE PTR ds:[rbx]
   14001b5fe:	mov    ecx,0xd70ae57a
   14001b603:	outs   dx,DWORD PTR ds:[rsi]
   14001b604:	pop    rsp
   14001b605:	jrcxz  0x14001b667
   14001b607:	inc    DWORD PTR [rax-0xd50a815]
   14001b60d:	(bad)  
   14001b60e:	xchg   ebp,eax
   14001b60f:	xlat   BYTE PTR ds:[rbx]
   14001b610:	cmp    DWORD PTR [rbx],edi
   14001b612:	cmp    DWORD PTR [rcx+0x4f6814c],esi
   14001b618:	cmp    al,0x3b
   14001b61a:	cmp    esp,DWORD PTR [rbx-0x43]
   14001b61d:	fst    DWORD PTR [rax]
   14001b61f:	movabs ds:0x5daf121e1f6ef5a6,eax
   14001b628:	movabs ds:0xb6da1a911fee8d49,eax
   14001b631:	and    eax,0x6f0a0d06
   14001b636:	ins    DWORD PTR es:[rdi],dx
   14001b637:	outs   dx,DWORD PTR ds:[rsi]
   14001b638:	ror    DWORD PTR [rsi-0x5a],cl
   14001b63b:	sub    al,0x16
   14001b63d:	mov    ch,BYTE PTR [rdx+rdx*2]
   14001b640:	shr    DWORD PTR [rdx+0x7d],cl
   14001b643:	sar    BYTE PTR [rsi+rcx*8+0x6c],0x3e
   14001b648:	(bad)  
   14001b649:	mov    ch,0x13
   14001b64b:	rex.X push 0x47b8bad8
   14001b651:	or     DWORD PTR [rbp+0x464545a6],ecx
   14001b657:	sti    
   14001b658:	sbb    edx,ecx
   14001b65a:	add    dh,bh
   14001b65c:	ret    0xda8
   14001b65f:	mov    bh,0x59
   14001b661:	(bad)  
   14001b662:	rex.W
   14001b663:	rex.R movabs ds:0x4c6a18843fd12e37,al
   14001b66d:	rex.X fcomip st,st(2)
   14001b670:	hlt    
   14001b671:	scas   al,BYTE PTR es:[rdi]
   14001b672:	mov    ebp,DWORD PTR [rax-0x10d4fa5e]
   14001b678:	mov    cl,0xff
   14001b67a:	jmp    0x14001b633
   14001b67c:	rex.WXB
   14001b67d:	rex or eax,0x33d1cd52
   14001b683:	xchg   esp,eax
   14001b684:	ss pop rbx
   14001b686:	adc    BYTE PTR [rbp+0x6d4133ee],dh
   14001b68c:	and    al,0x67
   14001b68e:	cs add eax,0x7114ce06
   14001b694:	rex.W
   14001b695:	movabs ds:0x35422ed44857359,rax
   14001b69f:	fdivr  st(6),st
   14001b6a1:	(bad)  
   14001b6a2:	rex.RXB adc r10b,r15b
   14001b6a5:	adc    al,0x52
   14001b6a7:	ret    
   14001b6a8:	and    DWORD PTR [rbx],esp
   14001b6aa:	xlat   BYTE PTR ds:[rbx]
   14001b6ab:	loop   0x14001b68d
   14001b6ad:	(bad)  
   14001b6af:	mov    bh,0xff
   14001b6b1:	in     al,0xbf
   14001b6b3:	cmp    al,0x5
   14001b6b5:	lock push rdi
   14001b6b7:	dec    edx
   14001b6b9:	ja     0x14001b6da
   14001b6bb:	jge    0x14001b6a5
   14001b6bd:	and    edi,DWORD PTR [rdi-0x1b]
   14001b6c0:	(bad)  
   14001b6c1:	jnp    0x14001b6b8
   14001b6c3:	(bad)  
   14001b6c4:	rcr    DWORD PTR [rdi-0x64],1
   14001b6c7:	mov    ch,0x4d
   14001b6c9:	nop
   14001b6ca:	ds rex.XB
   14001b6cc:	fwait
   14001b6cd:	xchg   esp,eax
   14001b6ce:	adc    eax,0x11a424d8
   14001b6d3:	rex.X out dx,al
   14001b6d5:	mov    ah,0x5c
   14001b6d7:	retf   
   14001b6d8:	outs   dx,BYTE PTR ds:[rsi]
   14001b6d9:	jp     0x14001b6e3
   14001b6db:	jmp    0x14001b66b
   14001b6dd:	(bad)  
   14001b6de:	leave  
   14001b6df:	loope  0x14001b6b4
   14001b6e1:	sub    BYTE PTR [rsi],bh
   14001b6e3:	(bad)  
   14001b6e4:	(bad)  
   14001b6e5:	test   eax,0xc1443b13
   14001b6ea:	push   rsp
   14001b6eb:	movsxd eax,esi
   14001b6ed:	or     BYTE PTR [rbx+0x45d3099d],cl
   14001b6f3:	loopne 0x14001b6db
   14001b6f5:	sub    edi,ebx
   14001b6f7:	in     al,dx
   14001b6f8:	(bad)  
   14001b6f9:	jg     0x14001b690
   14001b6fb:	xchg   ebx,eax
   14001b6fc:	ud0    ebx,DWORD PTR [rbp-0x26]
   14001b700:	popf   
   14001b701:	xor    ebp,DWORD PTR [rbx+0xe]
   14001b704:	adc    al,0xe9
   14001b706:	ss pop rax
   14001b708:	pop    rbx
   14001b709:	sub    eax,0x1a6d994b
   14001b70e:	ret    0x203a
   14001b711:	rex.WRB and r8b,BYTE PTR [r14+0x4454b2a4]
   14001b718:	retf   
   14001b719:	pop    rax
   14001b71a:	mov    bl,0x59
   14001b71c:	adc    DWORD PTR [rcx-0x68],edx
   14001b71f:	sbb    ah,BYTE PTR [rdx-0x5f]
   14001b722:	fld    TBYTE PTR [rcx+rcx*1+0x50a92812]
   14001b729:	cwd    
   14001b72b:	nop
   14001b72c:	movabs ds:0x2052605c9112066d,eax
   14001b735:	add    DWORD PTR [rbx+0x2165516c],ebx
   14001b73b:	xchg   esp,eax
   14001b73c:	enter  0x8d66,0xfa
   14001b740:	out    dx,eax
   14001b741:	add    eax,0xb9168924
   14001b746:	test   BYTE PTR [rsi+0x11a41538],al
   14001b74c:	retf   0x50a6
   14001b74f:	cli    
   14001b750:	pop    rsi
   14001b751:	jge    0x14001b716
   14001b753:	test   al,0x56
   14001b755:	ins    BYTE PTR es:[rdi],dx
   14001b756:	rex.XB loope 0x14001b72c
   14001b759:	(bad)  
   14001b75a:	pop    rdi
   14001b75b:	(bad)  
   14001b75c:	fimul  WORD PTR [rsi-0x8]
   14001b75f:	rcr    BYTE PTR [rdi],0x58
   14001b762:	repz xor ebp,DWORD PTR [rbx-0x60523381]
   14001b769:	cld    
   14001b76a:	ss fdivr QWORD PTR cs:[rbx-0x7f]
   14001b76f:	mov    ebp,0x6ff6338b
   14001b774:	sahf   
   14001b775:	shl    BYTE PTR [rbp-0x5b],cl
   14001b778:	rex.X pop rax
   14001b77a:	int3   
   14001b77b:	out    0x76,eax
   14001b77d:	rex.W (bad) 
   14001b77f:	or     eax,ebp
   14001b781:	sti    
   14001b782:	out    dx,eax
   14001b783:	mov    esp,DWORD PTR [rsi+rdx*2-0x55]
   14001b787:	lea    ecx,[rsi-0x453b974e]
   14001b78d:	clc    
   14001b78e:	(bad)  
   14001b78f:	jle    0x14001b736
   14001b791:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b792:	sub    ebx,DWORD PTR [rdx+0x6b39c8c9]
   14001b798:	jo     0x14001b7c9
   14001b79a:	xor    eax,0x1716c5a4
   14001b79f:	(bad)  
   14001b7a0:	(bad)  
   14001b7a1:	jae    0x14001b794
   14001b7a3:	rol    DWORD PTR [rdi-0x397bb388],0x42
   14001b7aa:	in     al,dx
   14001b7ab:	std    
   14001b7ac:	jp     0x14001b7fb
   14001b7ae:	mov    edi,0xb4af58e9
   14001b7b3:	nop
   14001b7b4:	push   0xffffffffdb9f7f7f
   14001b7b9:	sti    
   14001b7ba:	sti    
   14001b7bb:	in     al,dx
   14001b7bc:	(bad)  
   14001b7bd:	sbb    al,0x70
   14001b7bf:	std    
   14001b7c0:	ficom  DWORD PTR [rbp+0x56]
   14001b7c3:	sub    ecx,DWORD PTR [esi+0x4e]
   14001b7c7:	rex.WRX cmp BYTE PTR [rip+0xffffffffe4f4e13d],r15b        # 0x124f6990b
   14001b7ce:	mov    ebx,fs
   14001b7d0:	jrcxz  0x14001b7ad
   14001b7d2:	xchg   BYTE PTR [rdx+0x11fee83],ah
   14001b7d8:	js     0x14001b7df
   14001b7da:	fild   QWORD PTR [rdx-0x4b]
   14001b7dd:	mov    bp,0x70de
   14001b7e1:	jb     0x14001b85f
   14001b7e3:	int3   
   14001b7e4:	(bad)  
   14001b7e5:	sub    ebp,DWORD PTR [rdi+0x22f58d1]
   14001b7eb:	scas   eax,DWORD PTR es:[rdi]
   14001b7ec:	rex.R ins BYTE PTR es:[rdi],dx
   14001b7ee:	(bad)  
   14001b7ef:	adc    ebx,edx
   14001b7f1:	jbe    0x14001b7b5
   14001b7f3:	ja     0x14001b871
   14001b7f5:	(bad)  
   14001b7f6:	out    dx,eax
   14001b7f7:	in     eax,0x91
   14001b7f9:	ja     0x14001b7b9
   14001b7fb:	fwait
   14001b7fc:	rcl    ebx,cl
   14001b7fe:	and    ebx,DWORD PTR [rsi]
   14001b800:	mov    eax,0x9bd61eef
   14001b805:	xor    eax,0xba2727c7
   14001b80a:	rex.WXB xchg r9,rax
   14001b80c:	cmc    
   14001b80d:	xchg   sp,ax
   14001b80f:	pop    rdx
   14001b810:	pop    rdx
   14001b811:	cmp    ebx,DWORD PTR [rdx-0x6c]
   14001b814:	shl    DWORD PTR [rcx-0x7],0x79
   14001b818:	scas   eax,DWORD PTR es:[rdi]
   14001b819:	pop    rcx
   14001b81a:	rex.RX add r13b,BYTE PTR [rcx]
   14001b81d:	js     0x14001b855
   14001b81f:	rex (bad) 
   14001b821:	jge    0x14001b86a
   14001b823:	(bad)  
   14001b824:	out    0x9b,al
   14001b826:	rcr    DWORD PTR [rdx+0x35],1
   14001b829:	stos   DWORD PTR es:[rdi],eax
   14001b82a:	(bad)  
   14001b82b:	sbb    BYTE PTR [rdx-0x43b3394e],cl
   14001b831:	retf   0xb1ff
   14001b834:	push   rbp
   14001b835:	lods   eax,DWORD PTR ds:[rsi]
   14001b836:	loope  0x14001b841
   14001b838:	mov    bh,0xde
   14001b83a:	mov    esi,0x6ea113a2
   14001b83f:	rex.WX loope 0x14001b7ed
   14001b842:	fist   WORD PTR [rbx-0x6b]
   14001b845:	(bad)  
   14001b846:	jl     0x14001b853
   14001b848:	rex.XB leave 
   14001b84a:	adc    ecx,DWORD PTR cs:[rsi+rbp*4]
   14001b84e:	rex.WRX xchg rsp,rax
   14001b850:	icebp  
   14001b851:	jge    0x14001b7ed
   14001b853:	jnp    0x14001b849
   14001b855:	(bad)
   14001b858:	ja     0x14001b83a
   14001b85a:	clc    
   14001b85b:	sub    r8,QWORD PTR [r8]
   14001b85e:	and    BYTE PTR [rdi],0xde
   14001b861:	std    
   14001b862:	mov    ?,edi
   14001b864:	loope  0x14001b83b
   14001b866:	(bad)  
   14001b867:	jle    0x14001b856
   14001b869:	sti    
   14001b86a:	rex.WX (bad) 
   14001b86c:	jnp    0x14001b827
   14001b86e:	jmp    0x14001b7f9
   14001b870:	rex.WRB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b872:	cdq    
   14001b873:	mov    dh,0xa4
   14001b875:	sub    DWORD PTR ss:[rbx],eax
   14001b878:	scas   eax,DWORD PTR es:[rdi]
   14001b879:	iret   
   14001b87a:	rex.RX
   14001b87b:	rex shl DWORD PTR [rcx+riz*4+0x1ec43058],0x43
   14001b884:	fcom   QWORD PTR [rsi-0x511279fb]
   14001b88a:	test   DWORD PTR [rax],ebx
   14001b88c:	or     eax,0xba8f46f2
   14001b891:	rex.X jne 0x14001b8b7
   14001b894:	(bad)  
   14001b895:	rex.RX jmp 0x14001b83f
   14001b898:	mov    bl,0xc8
   14001b89a:	(bad)  
   14001b89b:	xchg   ebp,eax
   14001b89c:	adc    ecx,DWORD PTR [rsi]
   14001b89e:	xchg   esi,eax
   14001b89f:	lahf   
   14001b8a0:	data16 std 
   14001b8a2:	sub    eax,0x39a927ff
   14001b8a7:	push   rsi
   14001b8a8:	out    0xda,al
   14001b8aa:	xor    al,0x91
   14001b8ac:	push   rdi
   14001b8ad:	add    eax,0x26c80b39
   14001b8b2:	and    DWORD PTR [rbp-0x2c6ba25a],edi
   14001b8b8:	sbb    ebp,edx
   14001b8ba:	(bad)  
   14001b8bb:	pop    rsp
   14001b8bc:	fnstcw WORD PTR [rbx+rbx*2]
   14001b8bf:	fwait
   14001b8c0:	jo     0x14001b8ca
   14001b8c2:	shr    BYTE PTR [rdx-0x5b2cf276],1
   14001b8c8:	(bad)  
   14001b8c9:	jge    0x14001b894
   14001b8cb:	or     dl,BYTE PTR [rsi-0x46]
   14001b8ce:	rex.W
   14001b8cf:	ds retf 0x22f4
   14001b8d3:	test   BYTE PTR [rsi-0x78],dl
   14001b8d6:	fild   DWORD PTR [rcx+0x136404d0]
   14001b8dc:	adc    BYTE PTR [rbx+0x75],dh
   14001b8df:	jb     0x14001b950
   14001b8e1:	mov    al,0x3f
   14001b8e3:	movabs gs:0xb6834f01327315a5,al
   14001b8ed:	(bad)  
   14001b8ee:	stos   DWORD PTR es:[rdi],eax
   14001b8ef:	mov    BYTE PTR [rdx+rcx*1-0x4f],ch
   14001b8f3:	mov    eax,edx
   14001b8f5:	data16 and BYTE PTR [rax],bl
   14001b8f8:	movabs eax,ds:0xc4bc6f2bf0f4a1a7
   14001b901:	xlat   BYTE PTR ds:[rbx]
   14001b902:	mov    DWORD PTR [rdi],0x6aefa6f9
   14001b908:	stc    
   14001b909:	fdivr  st,st(4)
   14001b90b:	xchg   DWORD PTR [rcx+0x377f8ff1],edi
   14001b911:	xchg   edi,eax
   14001b912:	loop   0x14001b951
   14001b914:	sub    al,0xb7
   14001b916:	es sbb al,0x1e
   14001b919:	pushf  
   14001b91a:	sbb    DWORD PTR [rax],eax
   14001b91c:	rol    BYTE PTR [rbp-0x4dc9bd5c],1
   14001b922:	mov    BYTE PTR [rsi+0x8a043c8],bh
   14001b928:	lods   al,BYTE PTR ds:[rsi]
   14001b929:	(bad)  
   14001b92a:	pop    rbp
   14001b92b:	pop    rbp
   14001b92c:	retf   
   14001b92d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b92e:	xchg   esp,eax
   14001b92f:	cmp    cl,BYTE PTR [rdx-0x7f281d66]
   14001b935:	sub    BYTE PTR [rsi-0x18548bbe],dl
   14001b93b:	cmc    
   14001b93c:	add    bh,BYTE PTR [rbp-0x21]
   14001b93f:	jmp    0x14001b90f
   14001b941:	and    rax,0x6d2be557
   14001b947:	ret    
   14001b948:	(bad)  
   14001b949:	fnsave [rdi+0x73]
   14001b94c:	stc    
   14001b94d:	rol    DWORD PTR [rdi],0x68
   14001b950:	mov    esp,?
   14001b952:	xchg   ebp,eax
   14001b953:	(bad)  
   14001b954:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b955:	in     al,0xcc
   14001b957:	cli    
   14001b958:	ins    BYTE PTR es:[rdi],dx
   14001b959:	(bad)
   14001b95c:	(bad)  
   14001b95d:	mov    ebp,0xaf5eb15a
   14001b962:	leave  
   14001b963:	mov    ebp,0xe1172f7e
   14001b968:	in     al,dx
   14001b969:	in     al,0x98
   14001b96b:	adc    al,0x23
   14001b96d:	pop    rbp
   14001b96e:	xlat   BYTE PTR ds:[rbx]
   14001b96f:	jno    0x14001b9e5
   14001b971:	jl     0x14001b9cf
   14001b973:	loope  0x14001b9a2
   14001b975:	add    al,0x9a
   14001b977:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b978:	(bad)  
   14001b979:	jnp    0x14001b9f6
   14001b97b:	sbb    edx,DWORD PTR [rcx]
   14001b97d:	push   0xffffffffcc9ac6da
   14001b982:	(bad)  
   14001b983:	out    dx,al
   14001b984:	mov    edx,0xadd312eb
   14001b989:	sbb    DWORD PTR [rdi-0x5],ebx
   14001b98c:	(bad)  
   14001b98d:	cmp    edi,DWORD PTR [rax]
   14001b98f:	mov    eax,0xa3a38571
   14001b994:	movabs ds:0xe79cf68e07f047ca,eax
   14001b99d:	stc    
   14001b99e:	add    al,0x26
   14001b9a0:	test   BYTE PTR [rax+0x35],ch
   14001b9a3:	movabs al,ds:0xcac054e307a27923
   14001b9ac:	sub    ah,bl
   14001b9ae:	movabs al,ds:0xe34b7341ca61c4db
   14001b9b7:	outs   dx,BYTE PTR ds:[rsi]
   14001b9b8:	rex.RX adc eax,0xb73f069e
   14001b9be:	(bad)  
   14001b9bf:	(bad)  
   14001b9c0:	rex.WXB std 
   14001b9c2:	mov    bl,0xc7
   14001b9c4:	and    ch,BYTE PTR [rdx-0x727c3cc3]
   14001b9ca:	push   rdx
   14001b9cb:	mov    DWORD PTR [rbp+0x62],ebp
   14001b9ce:	mov    ecx,0xca6df3fd
   14001b9d3:	int3   
   14001b9d4:	pop    rcx
   14001b9d5:	mov    BYTE PTR [rsi+0x5304a2f3],dh
   14001b9db:	(bad)  
   14001b9dc:	sbb    cl,BYTE PTR [rdi-0x78]
   14001b9df:	neg    BYTE PTR [rcx]
   14001b9e1:	ins    DWORD PTR es:[rdi],dx
   14001b9e2:	(bad)  
   14001b9e3:	out    dx,al
   14001b9e4:	out    dx,al
   14001b9e5:	xchg   edi,eax
   14001b9e6:	fcmovnbe st,st(3)
   14001b9e8:	scas   eax,DWORD PTR es:[rdi]
   14001b9e9:	mov    bh,ah
   14001b9eb:	jg     0x14001ba66
   14001b9ed:	or     ah,al
   14001b9ef:	outs   dx,DWORD PTR ds:[rsi]
   14001b9f0:	cld    
   14001b9f1:	scas   eax,DWORD PTR es:[rdi]
   14001b9f2:	fcomip st,st(3)
   14001b9f4:	cli    
   14001b9f5:	xlat   BYTE PTR ds:[rbx]
   14001b9f6:	jle    0x14001b9e8
   14001b9f8:	(bad)  
   14001b9f9:	call   FWORD PTR [rbx-0xb13049]
   14001b9ff:	ret    
   14001ba00:	(bad)  
   14001ba01:	(bad)  
   14001ba02:	rex.WX pop rdi
   14001ba04:	sub    BYTE PTR [rcx+0x63],cl
   14001ba07:	add    DWORD PTR [rcx-0x797feabb],ebp
   14001ba0d:	out    0xa9,al
   14001ba0f:	(bad)  
   14001ba10:	rex.WRB (bad) 
   14001ba12:	jo     0x14001ba4e
   14001ba14:	cdq    
   14001ba15:	sbb    DWORD PTR [rdi-0x784255fd],0xffffff8a
   14001ba1c:	mov    bh,0x60
   14001ba1e:	(bad)  
   14001ba1f:	movabs eax,ds:0xbad8522089f94b04
   14001ba28:	xor    BYTE PTR [rdi+0x3a],al
   14001ba2b:	cmp    dh,cl
   14001ba2d:	(bad)  
   14001ba2e:	xchg   edx,eax
   14001ba2f:	(bad)  
   14001ba30:	hlt    
   14001ba31:	movabs ds:0x429900dcd8cf1734,eax
   14001ba3a:	mov    bh,0x2a
   14001ba3c:	in     al,0xe
   14001ba3e:	retf   0xc23a
   14001ba41:	sub    DWORD PTR [rsi],esi
   14001ba43:	fcmovnb st,st(6)
   14001ba45:	rex.WXB
   14001ba46:	rex.W
   14001ba47:	or     cl,dl
   14001ba4a:	div    bl
   14001ba4c:	ret    0x808d
   14001ba4f:	mov    dh,0x3
   14001ba51:	rex.WRXB out dx,al
   14001ba53:	mov    bl,0x25
   14001ba55:	rex.X (bad) 
   14001ba57:	and    DWORD PTR [rcx-0x22],ebp
   14001ba5a:	mov    ebp,0xf7585be9
   14001ba5f:	adc    al,0x32
   14001ba61:	(bad)  
   14001ba62:	(bad)  
   14001ba63:	or     BYTE PTR [rbx+0x10],bl
   14001ba66:	fiadd  DWORD PTR [rdx-0x5bd68a9c]
   14001ba6c:	add    al,0xe5
   14001ba6e:	rex.X xor al,0x96
   14001ba71:	mov    bh,0x17
   14001ba73:	movabs al,ds:0x29ec2b1648099429
   14001ba7c:	je     0x14001ba69
   14001ba7e:	test   BYTE PTR [rcx+rax*4-0x70],dh
   14001ba82:	ins    BYTE PTR es:[rdi],dx
   14001ba83:	ror    DWORD PTR [rbp+0x75],0xd1
   14001ba87:	enter  0x223a,0x59
   14001ba8b:	fwait
   14001ba8c:	and    DWORD PTR [rdi+0x5d4f034e],ebp
   14001ba92:	jns    0x14001ba21
   14001ba94:	xchg   DWORD PTR [rsi],ebp
   14001ba96:	lods   al,BYTE PTR ds:[rsi]
   14001ba97:	js     0x14001ba78
   14001ba99:	mov    bh,0xdf
   14001ba9b:	iret   
   14001ba9c:	shl    DWORD PTR [rdi],cl
   14001ba9e:	mov    edi,0x76c7d1ce
   14001baa3:	mov    eax,0x4992ef70
   14001baa8:	adc    ebp,eax
   14001baaa:	ss sbb edi,ebp
   14001baad:	add    DWORD PTR [rdi],0x86173f23
   14001bab3:	and    WORD PTR [rax-0x14df9f63],di
   14001baba:	cwde   
   14001babb:	and    al,0xb8
   14001babd:	lock mov ebx,0xde7ffbd0
   14001bac3:	out    0xad,al
   14001bac5:	out    dx,al
   14001bac6:	cmp    al,BYTE PTR [rbx+rsi*8-0x657acbcc]
   14001bacd:	mov    edx,DWORD PTR [rsi]
   14001bacf:	adc    DWORD PTR [rbp-0x5838c28b],ebx
   14001bad5:	addr32 (bad) 
   14001bad7:	(bad)  
   14001bad8:	movabs eax,ds:0x82f9c449a9735350
   14001bae1:	lods   eax,DWORD PTR ds:[rsi]
   14001bae2:	lods   eax,DWORD PTR ds:[rsi]
   14001bae3:	sub    eax,0x825f1182
   14001bae8:	xor    eax,0xbeff77d9
   14001baed:	js     0x14001babe
   14001baef:	mov    dl,0xc1
   14001baf1:	mov    eax,0x3af18156
   14001baf6:	test   DWORD PTR [rdx+0x38eeb670],eax
   14001bafc:	cmp    eax,0xcaadaa3c
   14001bb01:	jb     0x14001bb39
   14001bb03:	fmul   DWORD PTR [rsi+0xf430732]
   14001bb09:	rex.WX sbb QWORD PTR [rsi+0x253ce4aa],rdx
   14001bb10:	jmp    0x118c678be
   14001bb15:	cmp    edx,DWORD PTR [rdx-0x754ca506]
   14001bb1b:	movabs ds:0x8c5bd65cdd440ab1,eax
   14001bb24:	jns    0x14001bab2
   14001bb26:	(bad)  
   14001bb27:	add    al,0xd5
   14001bb29:	cmc    
   14001bb2a:	jo     0x14001bb0d
   14001bb2c:	xchg   ebp,eax
   14001bb2d:	and    edi,ecx
   14001bb2f:	outs   dx,DWORD PTR ds:[rsi]
   14001bb30:	jrcxz  0x14001bb4e
   14001bb32:	jl     0x14001bb2f
   14001bb34:	xor    al,0x4f
   14001bb36:	sub    edi,DWORD PTR [rdi+0x6a9633a9]
   14001bb3c:	mov    dl,BYTE PTR [rax-0x39]
   14001bb3f:	push   rdi
   14001bb40:	add    ecx,DWORD PTR [rcx+0x356fcb43]
   14001bb46:	outs   dx,BYTE PTR ds:[rsi]
   14001bb47:	div    bh
   14001bb49:	loopne 0x14001bb95
   14001bb4b:	(bad)  
   14001bb4c:	(bad)  
   14001bb4d:	test   al,0x7e
   14001bb4f:	ds sbb ch,bl
   14001bb52:	sub    esi,edx
   14001bb54:	es pushf 
   14001bb56:	ja     0x14001bb56
   14001bb58:	clc    
   14001bb59:	mov    dl,0x14
   14001bb5b:	add    al,al
   14001bb5d:	xchg   ebx,eax
   14001bb5e:	rex.WRXB cmp al,0xfa
   14001bb61:	mov    edi,0x3f17fc7d
   14001bb66:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   14001bb69:	xchg   ecx,eax
   14001bb6a:	cdq    
   14001bb6b:	jbe    0x14001bb32
   14001bb6d:	int    0x48
   14001bb6f:	mov    ah,al
   14001bb71:	adc    BYTE PTR ss:[rbx+0x390bea44],bh
   14001bb78:	mov    ebp,DWORD PTR [rsi-0x40]
   14001bb7b:	sub    DWORD PTR [rsi],edi
   14001bb7d:	js     0x14001bb82
   14001bb7f:	cmp    BYTE PTR [rbx],dh
   14001bb81:	push   rbx
   14001bb82:	push   rsi
   14001bb83:	movabs eax,ds:0x5e305b582d808d96
   14001bb8c:	in     al,0x61
   14001bb8e:	cmp    al,0xed
   14001bb90:	xchg   esp,eax
   14001bb91:	(bad)  
   14001bb92:	(bad)  
   14001bb93:	cli    
   14001bb94:	rex.WRB
   14001bb95:	repnz pop rbp
   14001bb97:	push   rdi
   14001bb98:	or     BYTE PTR [rdi-0x41],ch
   14001bb9b:	cmp    QWORD PTR [r11-0x17],rbp
   14001bb9f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001bba0:	and    esi,DWORD PTR [rdx+rax*2+0x29]
   14001bba4:	sbb    esp,0xb00b3845
   14001bbaa:	rcr    DWORD PTR [rax+0x5b],0x42
   14001bbae:	jmp    0xc48ef437
   14001bbb3:	cdq    
   14001bbb4:	adc    BYTE PTR [rsi],ah
   14001bbb6:	rex.WB jmp 0x11041f972
   14001bbbc:	mov    ?,WORD PTR [rip+0x543a5abe]        # 0x1943c1680
   14001bbc2:	jmp    0x117a1030f
   14001bbc7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001bbc8:	rcl    BYTE PTR [rax-0x7d25f61a],1
   14001bbce:	int3   
   14001bbcf:	add    eax,0x2ee72c69
   14001bbd4:	cmp    eax,0xeef43494
   14001bbd9:	pop    QWORD PTR [rsi+0x24]
   14001bbdc:	retf   0x9a09
   14001bbdf:	pop    rsi
   14001bbe0:	sub    eax,0xd8946e4b
   14001bbe5:	and    eax,DWORD PTR [rdx-0x654d698c]
   14001bbeb:	test   eax,0x9512b1f0
   14001bbf0:	cli    
   14001bbf1:	adc    ah,BYTE PTR [rcx]
   14001bbf3:	imul   eax,esi,0xffffff82
   14001bbf6:	rex.WB and r15b,sil
   14001bbf9:	adc    DWORD PTR [rdi],0x70e4df6f
   14001bbff:	mov    ch,0xe1
   14001bc01:	sbb    eax,0x67c3b4df
   14001bc06:	mov    edi,0xd39b22f0
   14001bc0b:	ja     0x14001bbe4
   14001bc0d:	hlt    
   14001bc0e:	out    0x90,eax
   14001bc10:	(bad)  
   14001bc11:	(bad)  
   14001bc12:	sub    dl,ch
   14001bc14:	or     ecx,eax
   14001bc16:	and    eax,0x480083c0
   14001bc1b:	rex.WRB shl QWORD PTR [r14+0x2b],0xc
   14001bc20:	sub    ch,BYTE PTR [rax+0x18]
   14001bc23:	ret    
   14001bc24:	imul   ecx,DWORD PTR [rsp+rax*8],0xffffffa8
   14001bc28:	(bad)
   14001bc2b:	add    DWORD PTR [rdx-0x670279f9],ebp
   14001bc31:	int    0xea
   14001bc33:	add    al,0x8c
   14001bc35:	(bad)  
   14001bc36:	sbb    al,BYTE PTR [rbx]
   14001bc38:	and    ah,bh
   14001bc3a:	stc    
   14001bc3b:	(bad)  
   14001bc3c:	sbb    ah,BYTE PTR [rdi-0x18]
   14001bc3f:	(bad)  
   14001bc40:	outs   dx,DWORD PTR ds:[rsi]
   14001bc41:	loopne 0x14001bc84
   14001bc43:	pop    rbp
   14001bc44:	(bad)  
   14001bc45:	(bad)  
   14001bc46:	(bad)  
   14001bc47:	rex.WRB
   14001bc48:	repnz fwait
   14001bc4a:	pop    rsi
   14001bc4b:	(bad)  
   14001bc4d:	sub    cl,ah
   14001bc4f:	jb     0x14001bc4f
   14001bc51:	(bad)  
   14001bc52:	movabs ds:0x669820c0101a5b87,eax
   14001bc5b:	xchg   ebp,eax
   14001bc5c:	rex.WRB js 0x14001bcc1
   14001bc5f:	mov    al,0x46
   14001bc61:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001bc62:	cmp    BYTE PTR [rdi+rsi*4+0x6f],cl
   14001bc66:	pop    rcx
   14001bc67:	xor    BYTE PTR [rdi-0x161390ec],ch
   14001bc6d:	mov    cl,al
   14001bc6f:	fadd   QWORD PTR [rsi]
   14001bc71:	sbb    al,0x99
   14001bc73:	cwde   
   14001bc74:	adc    cl,BYTE PTR [rdi]
   14001bc76:	loope  0x14001bcd4
   14001bc78:	loope  0x14001bc07
   14001bc7a:	(bad)  
   14001bc7b:	mov    cl,0x81
   14001bc7d:	sub    al,0x8a
   14001bc7f:	xchg   ecx,eax
   14001bc80:	jle    0x14001bc2c
   14001bc82:	sti    
   14001bc83:	sbb    ch,BYTE PTR [rax+0x8c6328]
   14001bc89:	cld    
   14001bc8a:	in     al,dx
   14001bc8b:	(bad)  
   14001bc8c:	xchg   DWORD PTR [rcx],edx
   14001bc8e:	lahf   
   14001bc8f:	sub    edx,edi
   14001bc91:	pop    rdx
   14001bc92:	fisubr WORD PTR [rdx]
   14001bc94:	addr32 mov al,0x89
   14001bc97:	js     0x14001bca1
   14001bc99:	mov    cl,0x54
   14001bc9b:	xchg   edi,eax
   14001bc9c:	loopne 0x14001bc4b
   14001bc9e:	cdq    
   14001bc9f:	xchg   edx,eax
   14001bca0:	lock push rbp
   14001bca2:	sub    BYTE PTR [rip+0xffffffff997f2bd6],al        # 0xd980e87e
   14001bca8:	(bad)  
   14001bca9:	pop    rdi
   14001bcaa:	sti    
   14001bcab:	scas   eax,DWORD PTR es:[rdi]
   14001bcac:	(bad)  
   14001bcad:	cmc    
   14001bcae:	addr32 push rdi
   14001bcb0:	imul   edi,ecx,0xffffffc1
   14001bcb3:	pushf  
   14001bcb4:	mov    bl,0x96
   14001bcb6:	add    al,0x77
   14001bcb8:	or     cl,BYTE PTR [rbx+0x20775263]
   14001bcbe:	mov    ah,0x49
   14001bcc0:	sub    eax,0xf1b86baf
   14001bcc5:	push   rcx
   14001bcc6:	jg     0x14001bd3d
   14001bcc8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001bcc9:	loopne 0x14001bc8a
   14001bccb:	(bad)  
   14001bccc:	nop
   14001bccd:	cwde   
   14001bcce:	(bad)  
   14001bccf:	movabs al,ds:0x26de3e8055b8a6fe
   14001bcd8:	mov    edi,0xdb6827e3
   14001bcdd:	add    eax,0xd682bceb
   14001bce2:	ss sub esi,ebp
   14001bce5:	jle    0x14001bcb7
   14001bce7:	cmp    eax,0x29d209d0
   14001bcec:	xor    edi,eax
   14001bcee:	pop    rbx
   14001bcef:	ins    DWORD PTR es:[rdi],dx
   14001bcf0:	xchg   ebx,eax
   14001bcf1:	or     esp,DWORD PTR [rdx]
   14001bcf3:	cmp    eax,0x2ffa51b2
   14001bcf8:	rex.RB hlt 
   14001bcfa:	jae    0x14001bc97
   14001bcfc:	movabs ds:0xd4502d611750eb9f,al
   14001bd05:	(bad)  
   14001bd06:	iret   
   14001bd07:	cs mov ah,0x34
   14001bd0a:	jnp    0x14001bc91
   14001bd0c:	cmp    BYTE PTR [rbx+0x1f],dl
   14001bd0f:	push   rsp
   14001bd10:	mov    ss,WORD PTR [rdx]
   14001bd12:	in     eax,0x84
   14001bd14:	pop    rdx
   14001bd15:	out    dx,al
   14001bd16:	rex.WXB adc spl,r13b
   14001bd19:	jrcxz  0x14001bcca
   14001bd1b:	movsxd ecx,DWORD PTR [rip+0x73024154]        # 0x1b303fe75
   14001bd21:	rex.B and al,0x46
   14001bd24:	cwde   
   14001bd25:	add    eax,0x875b5908
   14001bd2a:	shl    DWORD PTR [rcx],cl
   14001bd2c:	popf   
   14001bd2d:	nop
   14001bd2e:	rex.WRXB and BYTE PTR [r15-0x6b31b5c5],r13b
   14001bd35:	and    ah,BYTE PTR [rcx+rdx*2-0x6e]
   14001bd39:	xchg   ecx,eax
   14001bd3a:	lods   al,BYTE PTR ds:[rsi]
   14001bd3b:	pop    rdx
   14001bd3c:	scas   al,BYTE PTR es:[rdi]
   14001bd3d:	(bad)  
   14001bd3e:	sbb    al,0xf2
   14001bd40:	cld    
   14001bd41:	out    0x73,al
   14001bd43:	fdivr  st(3),st
   14001bd45:	(bad)  
   14001bd46:	pop    rdx
   14001bd47:	shr    DWORD PTR [rdx-0x15cc1deb],cl
   14001bd4d:	movabs ds:0xec92aa220b5e3868,eax
   14001bd56:	sti    
   14001bd57:	int3   
   14001bd58:	dec    ch
   14001bd5a:	movsxd eax,DWORD PTR [rbx]
   14001bd5c:	pop    rsi
   14001bd5d:	sbb    edx,0xffffffa8
   14001bd60:	sub    BYTE PTR [r11-0xc],spl
   14001bd64:	adc    eax,0x878166c9
   14001bd69:	xor    edi,esi
   14001bd6b:	push   rdx
   14001bd6c:	(bad)  
   14001bd6d:	xor    esp,esp
   14001bd6f:	xor    cl,BYTE PTR [rsi]
   14001bd71:	sar    DWORD PTR [rax+0x59ff5710],0x86
   14001bd78:	(bad)  
   14001bd79:	mov    ds,WORD PTR [rcx]
   14001bd7b:	jo     0x14001bd8b
   14001bd7d:	in     eax,0xdd
   14001bd7f:	in     eax,dx
   14001bd80:	or     edx,DWORD PTR [rsi]
   14001bd82:	and    al,0x6c
   14001bd84:	(bad)  
   14001bd86:	mov    cl,0x1e
   14001bd88:	add    BYTE PTR [rcx-0x5c],ah
   14001bd8b:	add    al,0xc2
   14001bd8d:	fwait
   14001bd8e:	mov    edi,0x30236b6f
   14001bd93:	enter  0x604a,0xf4
   14001bd97:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bd98:	pop    rbp
   14001bd99:	sbb    DWORD PTR [r12+r9*4-0x32],edi
   14001bd9e:	loope  0x14001bd8b
   14001bda0:	int3   
   14001bda1:	(bad)  
   14001bda2:	push   rcx
   14001bda3:	rex.WR call 0x13a870353
   14001bda9:	jns    0x14001bd72
   14001bdab:	add    BYTE PTR [rsi+0x19f9ea70],ch
   14001bdb1:	ss clc 
   14001bdb3:	lods   al,BYTE PTR ds:[rsi]
   14001bdb4:	int    0x37
   14001bdb6:	ins    BYTE PTR es:[rdi],dx
   14001bdb7:	pop    rcx
   14001bdb8:	cmp    bl,BYTE PTR [rbx]
   14001bdba:	movsx  ebp,si
   14001bdbd:	sub    BYTE PTR [rax],bh
   14001bdbf:	or     BYTE PTR [rdx+0x4f],bh
   14001bdc2:	scas   al,BYTE PTR es:[rdi]
   14001bdc3:	ins    BYTE PTR es:[rdi],dx
   14001bdc4:	cld    
   14001bdc5:	fsub   QWORD PTR [rdx-0xf]
   14001bdc8:	(bad)
   14001bdcc:	mov    bl,0x21
   14001bdce:	(bad)  
   14001bdcf:	rex.WX movabs ds:0x8f88639e1ffb8718,rax
   14001bdd9:	adc    ebx,DWORD PTR [rbp+rbx*1-0x77b1f7c8]
   14001bde0:	ja     0x14001be60
   14001bde2:	imul   esi,DWORD PTR [rax-0x41],0xffffffe6
   14001bde6:	xchg   edi,eax
   14001bde7:	jne    0x14001bdc5
   14001bde9:	jnp    0x14001bdba
   14001bdeb:	out    dx,al
   14001bdec:	cli    
   14001bded:	jnp    0x14001bdee
   14001bdef:	lock xchg edi,edi
   14001bdf2:	(bad)  
   14001bdf3:	leave  
   14001bdf4:	icebp  
   14001bdf5:	(bad)  
   14001bdf6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bdf7:	in     al,0x4c
   14001bdf9:	(bad)  [rax]
   14001bdfb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001bdfc:	xlat   BYTE PTR ds:[rbx]
   14001bdfd:	sbb    eax,0xb4d24236
   14001be02:	push   rdi
   14001be03:	ins    BYTE PTR es:[rdi],dx
   14001be04:	push   rdx
   14001be05:	(bad)  
   14001be06:	test   al,0xb8
   14001be08:	out    dx,eax
   14001be09:	and    ecx,DWORD PTR [rcx+rax*4]
   14001be0c:	mov    eax,0xe556ef2a
   14001be11:	loop   0x14001be63
   14001be13:	cmp    bl,BYTE PTR [rax+0xa]
   14001be16:	sub    al,0x8
   14001be18:	push   0xffffffffffffffbb
   14001be1a:	(bad)  
   14001be1b:	(bad)  
   14001be1c:	data16 xchg BYTE PTR [rax+rbp*2-0xb31c251],bl
   14001be24:	(bad)  
   14001be25:	retf   0x6c3c
   14001be28:	push   rbx
   14001be29:	sbb    dl,BYTE PTR [rax-0x2987235c]
   14001be2f:	scas   al,BYTE PTR es:[rdi]
   14001be30:	div    BYTE PTR [rcx-0x5af504a2]
   14001be36:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001be37:	or     ecx,eax
   14001be39:	rex.WB
   14001be3a:	rex outs dx,BYTE PTR ds:[rsi]
   14001be3c:	sbb    DWORD PTR [rcx+rcx*1+0x1b299365],0x28
   14001be44:	sub    BYTE PTR [ecx],cl
   14001be47:	test   al,0xf
   14001be49:	xchg   esp,eax
   14001be4a:	jne    0x14001bdf2
   14001be4c:	je     0x14001bea6
   14001be4e:	hlt    
   14001be4f:	shl    DWORD PTR ss:[rcx+0x22411756],cl
   14001be56:	rol    BYTE PTR [rip+0xffffffff9f2049f2],cl        # 0xdf22084e
   14001be5c:	or     dh,BYTE PTR [rdx+0x2816700a]
   14001be62:	addr32 rex.RB iret 
   14001be65:	jne    0x14001be83
   14001be67:	enter  0x5967,0x29
   14001be6b:	mov    ecx,0x2e944eb
   14001be70:	xchg   esp,eax
   14001be71:	movabs al,ds:0x2ce50b02cd128059
   14001be7a:	xchg   ebx,eax
   14001be7b:	iret   
   14001be7c:	add    al,0xc9
   14001be7e:	rex.X out dx,al
   14001be80:	mov    dl,0x56
   14001be82:	xlat   BYTE PTR ds:[rbx]
   14001be83:	ins    DWORD PTR es:[rdi],dx
   14001be84:	cmp    cl,BYTE PTR [rdx-0x14]
   14001be87:	xchg   ecx,eax
   14001be88:	push   rsp
   14001be89:	enter  0x4f5d,0xbf
   14001be8d:	out    dx,al
   14001be8e:	fsubr  DWORD PTR [rsi+rsi*1-0x4f2522e4]
   14001be95:	cmp    BYTE PTR [rdx-0x1f25f6f1],bh
   14001be9b:	rex.XB mov r12d,0x7508280a
   14001bea1:	(bad)  [rcx-0x51]
   14001bea4:	xchg   ebx,eax
   14001bea5:	nop
   14001bea6:	rex.X and BYTE PTR [rbx],dl
   14001bea9:	add    DWORD PTR [rdx-0x1a],0xffffffeb
   14001bead:	(bad)  
   14001beae:	iret   
   14001beaf:	nop
   14001beb0:	xor    ah,ah
   14001beb2:	mov    DWORD PTR [rdx-0x6ce53307],eax
   14001beb8:	sub    eax,0x6ad5a2d5
   14001bebd:	mov    esi,0x4772fa9a
   14001bec2:	movabs ds:0x622eb01bac2142d4,al
   14001becb:	cmp    DWORD PTR [rdi-0x48c45a2b],0x32
   14001bed2:	rcr    ecx,1
   14001bed4:	xchg   ebp,eax
   14001bed5:	rcr    DWORD PTR [rdx-0x6837519d],0x5a
   14001bedc:	xor    dil,BYTE PTR [rax+0x235bc32b]
   14001bee3:	ret    0x178d
   14001bee6:	cwde   
   14001bee7:	ficomp DWORD PTR [rcx+0x70cb50ab]
   14001beed:	or     eax,0x7cc12605
   14001bef2:	cld    
   14001bef3:	shl    DWORD PTR [rdx-0x7ea85a71],0xe0
   14001befa:	enter  0x8508,0x50
   14001befe:	and    eax,0xe63e5075
   14001bf03:	mov    ?,WORD PTR [rax]
   14001bf05:	add    eax,0xf0af3fd8
   14001bf0a:	rex.RXB rol DWORD PTR [r8+0x1c],1
   14001bf0e:	(bad)  
   14001bf0f:	adc    DWORD PTR [rcx+rbx*8+0x68],ecx
   14001bf13:	xor    eax,0x8b39af9f
   14001bf18:	ins    DWORD PTR es:[rdi],dx
   14001bf19:	add    eax,0x6532722f
   14001bf1e:	movsxd edx,DWORD PTR [rdx+0x8214c9d]
   14001bf24:	mov    WORD PTR [rdx+0x1],gs
   14001bf27:	rex.WR (bad) [rdi+rbp*8-0x7f5579c1]
   14001bf2f:	pop    rsp
   14001bf30:	(bad)  
   14001bf31:	(bad)  
   14001bf32:	outs   dx,BYTE PTR ds:[rsi]
   14001bf33:	(bad)  
   14001bf34:	xchg   ebp,eax
   14001bf35:	sbb    esi,DWORD PTR [rbx-0x19]
   14001bf38:	(bad)  
   14001bf39:	(bad)  
   14001bf3a:	fild   DWORD PTR [rip+0x7ff3f800]        # 0x1bff5b740
   14001bf40:	neg    BYTE PTR [rbx+0x7e4ff93f]
   14001bf46:	loop   0x14001bf9f
   14001bf48:	(bad)  
   14001bf49:	(bad)  
   14001bf4a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bf4b:	(bad)  
   14001bf4c:	jg     0x14001bee8
   14001bf4e:	rex.RX ins BYTE PTR es:[rdi],dx
   14001bf50:	ret    
   14001bf51:	or     al,0xd
   14001bf53:	pop    rsi
   14001bf54:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001bf55:	rex.WB shr r10b,cl
   14001bf58:	(bad)  
   14001bf59:	jmp    0x1b46cf887
   14001bf5e:	jl     0x14001bf44
   14001bf60:	xlat   BYTE PTR ds:[rbx]
   14001bf61:	or     al,0x50
   14001bf63:	push   rcx
   14001bf64:	rex.RX or r9d,ecx
   14001bf67:	push   0xffffffffaf9a25b9
   14001bf6c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001bf6d:	adc    r15d,ebx
   14001bf70:	test   DWORD PTR [rdi],esi
   14001bf72:	rex.R (bad) 
   14001bf74:	jnp    0x14001bf5d
   14001bf76:	add    al,BYTE PTR [rdi]
   14001bf78:	pop    rdi
   14001bf79:	clc    
   14001bf7a:	sub    BYTE PTR [rcx+rdi*1+0x34fb5f3b],dl
   14001bf81:	jb     0x14001bfc4
   14001bf83:	fsub   st,st(4)
   14001bf85:	push   rbx
   14001bf86:	retf   0x4351
   14001bf89:	push   rbx
   14001bf8a:	es (bad) 
   14001bf8c:	push   rsi
   14001bf8d:	imul   ebx,eax,0x72
   14001bf90:	adc    edx,edi
   14001bf92:	fcom   QWORD PTR [rbx+0x7a]
   14001bf95:	out    0xb8,eax
   14001bf97:	(bad)  
   14001bf98:	jrcxz  0x14001bf7a
   14001bf9a:	mov    eax,DWORD PTR [rsi]
   14001bf9c:	(bad)  
   14001bf9d:	mov    esp,0x85a0be37
   14001bfa2:	rex.WR
   14001bfa3:	rex.WRB xor BYTE PTR [r8+rdx*4-0x4987e2cc],r10b
   14001bfab:	(bad)  
   14001bfac:	push   rbx
   14001bfad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bfae:	rex.W sahf 
   14001bfb0:	push   rdx
   14001bfb1:	retf   0x1699
   14001bfb4:	out    dx,al
   14001bfb5:	mov    BYTE PTR [rax],ch
   14001bfb7:	loop   0x14001c011
   14001bfb9:	jmp    0x14001bf85
   14001bfbb:	int3   
   14001bfbc:	adc    DWORD PTR [rdx+0x28],eax
   14001bfbf:	adc    BYTE PTR [rbp+0x319a2ab2],al
   14001bfc5:	mov    al,0xad
   14001bfc7:	retf   
   14001bfc8:	call   0x164860ce2
   14001bfcd:	test   BYTE PTR [rcx+0x50],ch
   14001bfd0:	repnz xchg ecx,eax
   14001bfd2:	rex mov edi,0x52bd0ce
   14001bfd8:	push   rsp
   14001bfd9:	rol    BYTE PTR [rdx-0x60],1
   14001bfdc:	mov    al,0xd2
   14001bfde:	outs   dx,BYTE PTR ds:[rsi]
   14001bfdf:	xor    DWORD PTR [rcx-0x67e29f2],ebx
   14001bfe5:	sbb    ecx,DWORD PTR [rdi+0x70]
   14001bfe8:	clc    
   14001bfe9:	rol    BYTE PTR [rsi+rsi*2-0x76c966e2],cl
   14001bff0:	imul   ebp,DWORD PTR [rdi],0xeb1d57ac
   14001bff6:	push   rbp
   14001bff7:	rex.WRXB mov r8b,r11b
   14001bffa:	pop    rax
   14001bffb:	mov    ecx,0x1b985012
   14001c000:	jmp    0x14001c03a
   14001c002:	(bad)  
   14001c003:	pop    rbp
   14001c004:	outs   dx,DWORD PTR ds:[rsi]
   14001c005:	test   DWORD PTR [rdx-0x541ac64],r14d
   14001c00c:	stos   BYTE PTR es:[rdi],al
   14001c00d:	sar    DWORD PTR [rdi],0x75
   14001c010:	add    eax,0xce003eea
   14001c015:	xor    BYTE PTR [rsp+rsi*8+0x65],dh
   14001c019:	add    ch,al
   14001c01b:	enter  0x6000,0x8c
   14001c01f:	out    0xde,al
   14001c021:	(bad)  
   14001c023:	xlat   BYTE PTR ds:[rbx]
   14001c024:	icebp  
   14001c025:	in     al,dx
   14001c026:	outs   dx,DWORD PTR ds:[rsi]
   14001c027:	dec    BYTE PTR [rax]
   14001c029:	(bad)  
   14001c02a:	rex.W fistp QWORD PTR [rcx+0x31]
   14001c02e:	(bad)  
   14001c02f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c030:	xlat   BYTE PTR ds:[rbx]
   14001c031:	or     BYTE PTR [rdx-0x7b],dl
   14001c034:	(bad)  
   14001c035:	(bad)  
   14001c036:	mov    ds,WORD PTR [rdx-0x5b]
   14001c039:	sub    DWORD PTR [rsi+0x7bfd4adc],ebp
   14001c03f:	lods   al,BYTE PTR ds:[rsi]
   14001c040:	jo     0x14001c01e
   14001c042:	shl    BYTE PTR [rbp-0x5df1ffea],cl
   14001c048:	fild   QWORD PTR [rcx-0x795e278a]
   14001c04e:	or     al,0x69
   14001c050:	mov    bh,0x51
   14001c052:	rex.WB (bad) 
   14001c054:	mov    ch,0xe6
   14001c056:	(bad)
   14001c05a:	div    DWORD PTR [rdi-0x1c]
   14001c05d:	xor    al,ah
   14001c05f:	sub    al,BYTE PTR [rdi+0x1a]
   14001c062:	rex.XB lea edi,[r15+0x914b454]
   14001c069:	rex.WX push rcx
   14001c06b:	(bad)  
   14001c06c:	(bad)  
   14001c06d:	(bad)  
   14001c06e:	(bad)  
   14001c06f:	mov    edx,0xe0878185
   14001c074:	outs   dx,BYTE PTR ds:[rsi]
   14001c075:	or     dh,ch
   14001c077:	popf   
   14001c078:	mov    cl,0xdb
   14001c07a:	in     al,0xd9
   14001c07c:	or     ebx,esp
   14001c07e:	cwde   
   14001c07f:	leave  
   14001c080:	xchg   edi,eax
   14001c081:	(bad)  
   14001c082:	mov    esi,0xcbe3d9bf
   14001c087:	rex.RX add BYTE PTR [rax],r8b
   14001c08a:	(bad)  
   14001c08b:	ds jl  0x14001c0e5
   14001c08e:	jmp    QWORD PTR [rdi-0x1]
   14001c091:	(bad)  [rdi-0x3]
   14001c094:	fwait
   14001c095:	or     BYTE PTR [rdi-0x5b3724b4],ch
   14001c09b:	mov    DWORD PTR [rcx+rsi*1],esi
   14001c09e:	xor    BYTE PTR [rbp-0x4b],ch
   14001c0a1:	sub    BYTE PTR [rbp+0x32],ah
   14001c0a4:	outs   dx,DWORD PTR ds:[rsi]
   14001c0a5:	imul   esp,DWORD PTR [rdi+0x62452689],0xe5dd9548
   14001c0af:	(bad)  
   14001c0b0:	stos   DWORD PTR es:[rdi],eax
   14001c0b1:	add    eax,0x706d6e3f
   14001c0b6:	retf   
   14001c0b7:	jrcxz  0x14001c04f
   14001c0b9:	(bad)  
   14001c0ba:	jbe    0x14001c062
   14001c0bc:	or     edx,ebp
   14001c0be:	sub    bl,BYTE PTR [rbp+rbx*1-0x66252753]
   14001c0c5:	mov    dl,0xb7
   14001c0c7:	jne    0x14001c0e0
   14001c0c9:	mov    dl,0x7f
   14001c0cb:	(bad)  
   14001c0cc:	mov    dl,0x95
   14001c0ce:	mov    ecx,0xec8baefb
   14001c0d3:	sub    al,0x2e
   14001c0d5:	mov    al,0x3d
   14001c0d7:	(bad)  [rbp+0x67]
   14001c0da:	mov    esi,0x8b7cd6c3
   14001c0df:	in     eax,0x72
   14001c0e1:	xchg   ebp,eax
   14001c0e3:	je     0x14001c0ae
   14001c0e5:	sub    al,0xce
   14001c0e7:	rex.W
   14001c0e8:	imul   esi,DWORD PTR es:[rdx+0x410e1851],0x51141d1
   14001c0f3:	(bad)  
   14001c0f4:	cmp    eax,0x6b216f03
   14001c0f9:	stc    
   14001c0fa:	lods   eax,DWORD PTR ds:[rsi]
   14001c0fb:	hlt    
   14001c0fc:	sbb    esp,0xdeb74f5
   14001c102:	icebp  
   14001c103:	sub    al,0x12
   14001c105:	rex.WRXB sbb r11,r11
   14001c108:	cmp    eax,0x73045cc8
   14001c10d:	test   al,0x65
   14001c10f:	sub    eax,0x95b3f50a
   14001c114:	out    dx,eax
   14001c115:	scas   al,BYTE PTR es:[rdi]
   14001c116:	or     bh,cl
   14001c118:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c119:	test   al,0x82
   14001c11b:	call   0x16c0b87aa
   14001c120:	sub    ah,dl
   14001c122:	int3   
   14001c123:	adc    ebp,DWORD PTR [rcx-0x26]
   14001c126:	adc    BYTE PTR [rdx-0x5d],dl
   14001c129:	push   rsi
   14001c12a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c12b:	movzx  edx,BYTE PTR [rbx+0x50]
   14001c12f:	shl    BYTE PTR [rbx+riz*2],1
   14001c132:	(bad)  
   14001c133:	hlt    
   14001c134:	stos   DWORD PTR es:[rdi],eax
   14001c135:	int3   
   14001c136:	jbe    0x14001c1b7
   14001c138:	(bad)  
   14001c139:	(bad)  
   14001c13a:	pop    rdi
   14001c13b:	stc    
   14001c13c:	mov    cs,WORD PTR es:[rsi]
   14001c13f:	sbb    ecx,esi
   14001c141:	rex.WRX (bad) 
   14001c143:	cmp    BYTE PTR [rbx],bh
   14001c145:	rex.RB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c148:	addr32 mov cl,0xdd
   14001c14b:	mov    dl,0xdc
   14001c14d:	push   0xffffffffffffffcd
   14001c14f:	or     eax,0x16aab1d0
   14001c154:	rcl    DWORD PTR [rsi],0xa5
   14001c157:	mov    BYTE PTR [rdx+0x10c3d325],ah
   14001c15d:	ret    0x17b0
   14001c160:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c162:	out    dx,eax
   14001c163:	(bad)  
   14001c164:	jmp    0x14001c15d
   14001c166:	(bad)  
   14001c167:	cmc    
   14001c168:	idiv   DWORD PTR [rdx+0x1280c2d8]
   14001c16e:	(bad)  
   14001c16f:	mov    dh,0xdb
   14001c171:	cmp    DWORD PTR [rcx-0x28],0x37
   14001c175:	hlt    
   14001c176:	in     eax,0xce
   14001c178:	cs (bad) 
   14001c17a:	mov    ch,BYTE PTR [rsi]
   14001c17c:	cld    
   14001c17d:	sub    al,BYTE PTR [rbx-0xb7dcc19]
   14001c183:	sub    BYTE PTR [rax-0x27],0xb1
   14001c187:	ret    0x60ee
   14001c18a:	sti    
   14001c18b:	or     bl,BYTE PTR [rax-0x1182ae25]
   14001c191:	xor    DWORD PTR [rdi+rdx*8+0x1fb695f7],esi
   14001c198:	imul   edx,DWORD PTR [rbx+0x30c67d5a],0xffffff8e
   14001c19f:	add    al,0xc
   14001c1a1:	ds jns 0x14001c1bc
   14001c1a4:	(bad)  
   14001c1a5:	repnz ror BYTE PTR [rcx],0x6b
   14001c1a9:	and    DWORD PTR [rax-0x77],edx
   14001c1ac:	ins    BYTE PTR es:[rdi],dx
   14001c1ad:	cmc    
   14001c1ae:	out    0xec,al
   14001c1b0:	add    ebp,DWORD PTR [r15+r9*1-0x1a]
   14001c1b5:	sub    ch,al
   14001c1b7:	sub    cl,BYTE PTR [rdi-0x379ec448]
   14001c1bd:	sar    BYTE PTR [rsi],0x97
   14001c1c0:	movabs ds:0x5561e33c083094a3,al
   14001c1c9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c1ca:	push   rdx
   14001c1cb:	ja     0x14001c1f9
   14001c1cd:	stos   BYTE PTR es:[rdi],al
   14001c1ce:	cmc    
   14001c1cf:	movnti DWORD PTR [rbp-0x11],edx
   14001c1d3:	in     al,0xf1
   14001c1d5:	pop    rbx
   14001c1d6:	rex.X add BYTE PTR [rax],al
   14001c1d9:	inc    ecx
   14001c1db:	lahf   
   14001c1dc:	stc    
   14001c1dd:	call   0x1bbed8009
   14001c1e2:	(bad)  
   14001c1e3:	cli    
   14001c1e4:	(bad)  
   14001c1e5:	ds std 
   14001c1e7:	stc    
   14001c1e8:	sub    ebx,edi
   14001c1ea:	mov    bh,0x3d
   14001c1ec:	outs   dx,DWORD PTR ds:[rsi]
   14001c1ed:	mov    BYTE PTR [rbp+0x24],cl
   14001c1f0:	rex.WRB mov r12b,0x48
   14001c1f3:	sub    BYTE PTR [rdi+0x1b],cl
   14001c1f6:	cli    
   14001c1f7:	mov    bl,0x86
   14001c1f9:	jle    0x14001c1ce
   14001c1fb:	xchg   ebx,eax
   14001c1fc:	xlat   BYTE PTR ds:[rbx]
   14001c1fd:	mov    edx,0x7eed6d33
   14001c202:	ins    DWORD PTR es:[rdi],dx
   14001c203:	or     edx,DWORD PTR [rsp+rdi*8-0x2b]
   14001c207:	and    esp,DWORD PTR [rbx+0x495236d8]
   14001c20d:	and    edi,eax
   14001c20f:	xor    DWORD PTR [rax+0x4d4917cf],edi
   14001c215:	movabs al,ds:0x80e27da05770b815
   14001c21e:	repnz mov dh,0x9
   14001c221:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c222:	addr32 cmp eax,0xb345b493
   14001c228:	xor    BYTE PTR [rdx+0x249af4d2],0xbd
   14001c22f:	rex.RX ins BYTE PTR es:[rdi],dx
   14001c231:	je     0x14001c213
   14001c233:	push   rdi
   14001c234:	std    
   14001c235:	xchg   ah,bl
   14001c237:	ja     0x14001c2b3
   14001c239:	ret    
   14001c23a:	push   rcx
   14001c23b:	(bad)  
   14001c23c:	(bad)  
   14001c23d:	sub    ebp,esi
   14001c23f:	data16 sbb ah,cl
   14001c242:	iret   
   14001c243:	(bad)  
   14001c244:	jmp    0x14001c271
   14001c246:	cmp    eax,0x43645339
   14001c24b:	lahf   
   14001c24c:	and    ch,BYTE PTR [rcx+0x20b1284c]
   14001c252:	shr    DWORD PTR [rbp+rcx*4-0x65890b49],1
   14001c259:	push   rsi
   14001c25a:	mov    dh,0xd5
   14001c25c:	(bad)  
   14001c25e:	rex.W (bad) 
   14001c260:	mov    ah,0x3f
   14001c262:	rex.RB rol BYTE PTR [r8],cl
   14001c265:	pop    rdi
   14001c266:	fisttp QWORD PTR [rcx+0x58]
   14001c269:	sub    al,0x85
   14001c26b:	ss sbb eax,edx
   14001c26e:	xchg   edx,eax
   14001c26f:	add    ah,dh
   14001c271:	test   QWORD PTR [r13+riz*1-0x44],rsi
   14001c276:	jmp    rdx
   14001c278:	xchg   DWORD PTR [rax-0xf],edi
   14001c27b:	lods   al,BYTE PTR ds:[rsi]
   14001c27c:	movsxd ebp,ebx
   14001c27e:	leave  
   14001c27f:	iret   
   14001c280:	sar    DWORD PTR [rbx+rdi*8+0x65c1e20d],1
   14001c287:	mov    ?,WORD PTR [rdi-0x1f]
   14001c28a:	sbb    eax,0x59cf6eac
   14001c28f:	ins    BYTE PTR es:[rdi],dx
   14001c290:	(bad)  
   14001c291:	cwde   
   14001c292:	rex.WRB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c294:	adc    BYTE PTR [rbp-0x64c9eb30],al
   14001c29a:	int3   
   14001c29b:	(bad)  
   14001c29c:	mov    ah,0xab
   14001c29e:	add    bl,BYTE PTR [rbx-0x3d08c3f5]
   14001c2a4:	sub    eax,0xafed977e
   14001c2a9:	push   rax
   14001c2aa:	xlat   BYTE PTR ds:[rbx]
   14001c2ab:	mov    edx,0x7392d929
   14001c2b0:	pop    rbp
   14001c2b1:	cmp    eax,0x22739be
   14001c2b6:	xchg   edx,eax
   14001c2b7:	xor    esi,DWORD PTR [rbp+0x57f567e9]
   14001c2bd:	(bad)  
   14001c2be:	js     0x14001c31e
   14001c2c0:	mov    esp,0xe2d8efa3
   14001c2c5:	xchg   DWORD PTR [rcx],esp
   14001c2c7:	enter  0x2777,0x56
   14001c2cb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c2cc:	(bad)  [rdi-0xb]
   14001c2cf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c2d0:	or     eax,0x6a909afa
   14001c2d5:	rcl    DWORD PTR [rax],cl
   14001c2d7:	mov    bl,0xf2
   14001c2d9:	(bad)  
   14001c2da:	push   0xffffffffd60821ae
   14001c2df:	rex.WB jns 0x14001c29a
   14001c2e2:	(bad)  
   14001c2e3:	rex.RXB
   14001c2e4:	ds (bad) 
   14001c2e6:	stos   BYTE PTR es:[rdi],al
   14001c2e7:	sbb    esp,DWORD PTR [rbx-0xa91a4ee]
   14001c2ed:	mov    bh,0x21
   14001c2ef:	enter  0x2fa6,0xd1
   14001c2f3:	push   rdx
   14001c2f4:	xchg   DWORD PTR [rsi],ecx
   14001c2f6:	fbld   TBYTE PTR [rbp+0x74]
   14001c2f9:	outs   dx,DWORD PTR ds:[rsi]
   14001c2fa:	adc    eax,0x21c8a3e6
   14001c2ff:	movabs ds:0x70982f07c3c7c408,al
   14001c308:	push   rdi
   14001c309:	xchg   esi,eax
   14001c30a:	lock call 0x1357c91b2
   14001c310:	fwait
   14001c311:	rol    eax,1
   14001c313:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c314:	fstp   QWORD PTR ds:[r10-0x74]
   14001c319:	sar    DWORD PTR [rcx-0x6f791016],1
   14001c31f:	and    al,0x74
   14001c321:	ja     0x14001c383
   14001c323:	mov    eax,0x96fc72df
   14001c328:	adc    eax,0xfe77c000
   14001c32d:	xor    edi,0xfecfd7ff
   14001c333:	idiv   DWORD PTR [rdi]
   14001c335:	(bad)  
   14001c336:	ins    DWORD PTR es:[rdi],dx
   14001c337:	jge    0x14001c360
   14001c339:	outs   dx,DWORD PTR ds:[rsi]
   14001c33a:	fwait
   14001c33b:	mov    ah,0xa2
   14001c33d:	repnz xor esi,ecx
   14001c340:	(bad)  
   14001c341:	adc    DWORD PTR [rcx+0x69906eb2],edx
   14001c347:	ss ja  0x14001c388
   14001c34a:	(bad)  
   14001c34c:	sbb    BYTE PTR [rcx+0x9d35620],al
   14001c352:	push   rbp
   14001c353:	jnp    0x14001c2db
   14001c355:	loopne 0x14001c3c7
   14001c357:	cmovl  eax,DWORD PTR [rdi+0x4ed79856]
   14001c35e:	add    cl,BYTE PTR [rbp-0x64]
   14001c361:	mov    bl,0x89
   14001c363:	fucomi st,st(4)
   14001c365:	outs   dx,DWORD PTR ds:[rsi]
   14001c366:	(bad)  
   14001c367:	enter  0x84fd,0x18
   14001c36b:	adc    ah,BYTE PTR [rax]
   14001c36d:	or     rsp,QWORD PTR [rcx]
   14001c370:	xchg   DWORD PTR [rdx-0x5297a693],edi
   14001c376:	cmp    QWORD PTR [rsi+rdx*2+0x22],r8
   14001c37b:	sbb    DWORD PTR fs:[rbp-0x5c],ebp
   14001c37f:	jmp    0x11167e617
   14001c384:	rex.XB lea ebx,[r13+0x43]
   14001c388:	xchg   edi,eax
   14001c389:	and    BYTE PTR [rsi],dl
   14001c38b:	rex.WX fcom QWORD PTR [rax-0x18e4bc9d]
   14001c392:	xor    al,0xa5
   14001c394:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c395:	or     ebp,DWORD PTR [rbx]
   14001c397:	imul   esp,ebx,0x3d
   14001c39a:	pop    rdx
   14001c39b:	cmp    BYTE PTR [rsi-0x329f0d28],0x4b
   14001c3a2:	(bad)  
   14001c3a3:	loop   0x14001c3c9
   14001c3a5:	and    BYTE PTR [rbp-0x2a9ee246],ch
   14001c3ab:	nop
   14001c3ac:	xlat   BYTE PTR ds:[rbx]
   14001c3ad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c3ae:	stc    
   14001c3af:	(bad)  
   14001c3b0:	sbb    BYTE PTR [rax],0x69
   14001c3b3:	(bad)  
   14001c3b4:	rex.WB popf 
   14001c3b6:	fwait
   14001c3b7:	pop    rsi
   14001c3b8:	adc    DWORD PTR [rdx+0x6c27a6fd],0x22
   14001c3bf:	xlat   BYTE PTR ds:[rbx]
   14001c3c0:	ss scas eax,DWORD PTR es:[rdi]
   14001c3c2:	nop
   14001c3c3:	ds cli 
   14001c3c5:	cmp    al,0xd7
   14001c3c7:	retf   
   14001c3c8:	sub    eax,0xddc374c2
   14001c3cd:	(bad)  
   14001c3ce:	faddp  st(5),st
   14001c3d0:	(bad)
   14001c3d3:	(bad)  
   14001c3d4:	call   QWORD PTR [rdi+0x1e]
   14001c3d7:	out    0xb4,al
   14001c3d9:	lahf   
   14001c3da:	adc    bl,BYTE PTR [rbx-0x5f]
   14001c3dd:	cmp    ebx,DWORD PTR [rax+0x58f7f611]
   14001c3e3:	out    dx,al
   14001c3e4:	int    0xd9
   14001c3e6:	(bad)  [rbx]
   14001c3e8:	hlt    
   14001c3e9:	sbb    edx,DWORD PTR [rip+0xffffffffb38134d6]        # 0xf382f8c5
   14001c3ef:	outs   dx,BYTE PTR ds:[rsi]
   14001c3f0:	rex.WRX xchg rdi,rax
   14001c3f2:	mov    ebx,0x849dd7a1
   14001c3f7:	adc    DWORD PTR [rbx-0x628cf671],0x435e4539
   14001c401:	sti    
   14001c402:	lods   al,BYTE PTR ds:[rsi]
   14001c403:	xor    ah,BYTE PTR [rax]
   14001c405:	mov    al,0xfa
   14001c407:	mov    ?,WORD PTR [rdi+0x54]
   14001c40a:	mov    esi,0x471812a8
   14001c40f:	test   al,0xbf
   14001c411:	loop   0x14001c3b6
   14001c413:	(bad)  
   14001c414:	and    al,BYTE PTR [rsi]
   14001c416:	fistp  QWORD PTR [rax+rdi*4]
   14001c419:	call   FWORD PTR [rdi]
   14001c41b:	iret   
   14001c41c:	movabs ds:0x2f02aab214775084,eax
   14001c425:	add    esi,DWORD PTR [rcx+rdi*2-0xe71f5af]
   14001c42c:	lock movsxd esi,DWORD PTR [rdx+riz*2+0x3af08725]
   14001c434:	mov    DWORD PTR [rcx+0x6b15dd61],edx
   14001c43a:	jmp    FWORD PTR [rbp+0xf1b44e9]
   14001c440:	jg     0x14001c498
   14001c442:	jnp    0x14001c40a
   14001c444:	(bad)  
   14001c445:	(bad)  
   14001c446:	cli    
   14001c447:	(bad)  
   14001c448:	(bad)  
   14001c449:	xchg   ebp,eax
   14001c44a:	(bad)  
   14001c44b:	xor    esi,eax
   14001c44d:	push   rcx
   14001c44e:	(bad)  
   14001c44f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c450:	rex.W test al,0x7b
   14001c453:	or     bl,BYTE PTR [rax]
   14001c455:	(bad)  
   14001c456:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c457:	test   BYTE PTR [rcx-0x2af70031],ah
   14001c45d:	push   0xffffffff87487fea
   14001c462:	sti    
   14001c463:	ss cmc 
   14001c465:	adc    eax,0x5fcf9bee
   14001c46a:	push   rcx
   14001c46b:	mov    bl,BYTE PTR [rax+0x6a]
   14001c46e:	mov    esp,0x333b8394
   14001c473:	fsub   st,st(7)
   14001c475:	(bad)  
   14001c476:	scas   eax,DWORD PTR es:[rdi]
   14001c477:	add    QWORD PTR [rdi+rbp*8+0x77],rdi
   14001c47c:	jg     0x14001c441
   14001c47e:	jae    0x14001c47f
   14001c480:	(bad)  
   14001c481:	lahf   
   14001c482:	cld    
   14001c483:	(bad)  
   14001c484:	(bad)  
   14001c485:	xchg   edi,eax
   14001c486:	rex.WRXB (bad) 
   14001c488:	cli    
   14001c489:	retf   
   14001c48a:	jmp    QWORD PTR [rbp-0x66]
   14001c48d:	rex.R ret 0x1b46
   14001c491:	test   eax,ebp
   14001c493:	(bad)  
   14001c494:	and    cl,BYTE PTR [rcx+0x2d3cb130]
   14001c49a:	pop    rcx
   14001c49b:	rex.WRB movabs ds:0x619aa963ff98b40b,rax
   14001c4a5:	xchg   edi,eax
   14001c4a6:	popf   
   14001c4a7:	xor    DWORD PTR [rbx+rbx*1-0x3118aa7c],eax
   14001c4ae:	xor    al,BYTE PTR [rdi]
   14001c4b0:	scas   eax,DWORD PTR es:[rdi]
   14001c4b1:	cmp    al,0x44
   14001c4b3:	mov    esp,0xe2f201f7
   14001c4b8:	jne    0x14001c4a2
   14001c4ba:	sbb    al,BYTE PTR [rdx+0x49]
   14001c4bd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c4be:	push   rsi
   14001c4bf:	lods   eax,DWORD PTR ds:[rsi]
   14001c4c0:	(bad)  
   14001c4c1:	call   0x180264f92
   14001c4c6:	sbb    ah,BYTE PTR [rsi+0x646d8813]
   14001c4cc:	mov    ch,0x59
   14001c4ce:	shl    edi,cl
   14001c4d0:	mov    esi,0x3a9ba681
   14001c4d5:	int    0x45
   14001c4d7:	xchg   ebx,eax
   14001c4d8:	movabs ds:0xc9109200ae6a7c6e,eax
   14001c4e1:	hlt    
   14001c4e2:	std    
   14001c4e3:	mov    bh,BYTE PTR [rax]
   14001c4e5:	mov    DWORD PTR [rcx+rsi*4],esi
   14001c4e8:	and    eax,0x264b90d3
   14001c4ed:	rcr    DWORD PTR fs:[rax+0x5490935c],1
   14001c4f4:	stos   BYTE PTR es:[rdi],al
   14001c4f5:	rex.WRXB mov r12b,BYTE PTR [r8-0x4bed79e5]
   14001c4fc:	and    edx,DWORD PTR [rcx+0x17]
   14001c4ff:	(bad)  
   14001c500:	test   ecx,esi
   14001c502:	(bad)  
   14001c504:	fadd   st,st(3)
   14001c506:	rex.R
   14001c507:	rex.WR movabs rcx,0xccc15040d1393668
   14001c511:	xor    ebx,esi
   14001c513:	leave  
   14001c514:	fwait
   14001c515:	mov    edi,0xa7327cc6
   14001c51a:	je     0x14001c4a1
   14001c51c:	inc    BYTE PTR [rsi-0x1a]
   14001c51f:	rex.WX sti 
   14001c521:	jno    0x14001c541
   14001c523:	mov    ecx,0x7e9718f8
   14001c528:	fisttp WORD PTR [rbx+0x6b67a974]
   14001c52e:	(bad)  
   14001c52f:	scas   ax,WORD PTR es:[rdi]
   14001c531:	mov    esp,0xbf9fdb9d
   14001c536:	(bad)  
   14001c537:	movabs ds:0xbef2cddc6ff4e637,eax
   14001c540:	ret    0x2fa6
   14001c543:	ins    BYTE PTR es:[rdi],dx
   14001c544:	mov    fs,WORD PTR [rsi]
   14001c546:	sub    al,0x97
   14001c548:	rex.WXB jb 0x14001c534
   14001c54b:	add    DWORD PTR [rbp+0x15],eax
   14001c54e:	(bad)  
   14001c54f:	(bad)  
   14001c550:	ror    esp,cl
   14001c552:	test   DWORD PTR [rdi-0x21804cff],esi
   14001c558:	out    0xdd,al
   14001c55a:	add    ecx,DWORD PTR [rbp-0x15dfd86b]
   14001c560:	(bad)  
   14001c561:	jns    0x14001c5a4
   14001c563:	lea    esp,[rbx-0x1159484c]
   14001c569:	mov    esi,0xd6f35592
   14001c56e:	and    esp,DWORD PTR [rsi-0x6aa7faac]
   14001c574:	(bad)  
   14001c575:	and    edi,DWORD PTR [rax+0x61]
   14001c578:	xchg   ecx,eax
   14001c579:	jae    0x14001c58e
   14001c57b:	cld    
   14001c57c:	push   0x3d
   14001c57e:	mov    ebp,0xb7099e5f
   14001c583:	idiv   ecx
   14001c585:	adc    esi,DWORD PTR [rbx+0x70b6c1d4]
   14001c58b:	mov    esi,DWORD PTR [rcx+0x50]
   14001c58e:	test   BYTE PTR [rsi],al
   14001c590:	enter  0xe7ed,0xc1
   14001c594:	fist   WORD PTR [rdi]
   14001c596:	test   BYTE PTR [rdx*4+0x4886efe7],dl
   14001c59d:	(bad)  
   14001c59e:	cmp    DWORD PTR [rsi+0x30318646],0x2b58839b
   14001c5a8:	xor    BYTE PTR [rcx-0x521d627e],dh
   14001c5ae:	leave  
   14001c5af:	jl     0x14001c57c
   14001c5b1:	scas   eax,DWORD PTR es:[rdi]
   14001c5b2:	sub    BYTE PTR [rbx-0x14],al
   14001c5b5:	movabs al,ds:0x31421942307aee1e
   14001c5be:	idiv   DWORD PTR [rax-0x28]
   14001c5c1:	outs   dx,BYTE PTR ds:[rsi]
   14001c5c2:	ds push rsi
   14001c5c4:	cli    
   14001c5c5:	or     BYTE PTR [rdx+0x30],r13b
   14001c5c9:	(bad)  
   14001c5ca:	jnp    0x14001c557
   14001c5cc:	fsubrp st(1),st
   14001c5ce:	jrcxz  0x14001c5fb
   14001c5d0:	push   rdx
   14001c5d1:	add    BYTE PTR [rax],al
   14001c5d3:	jg     0x14001c5c6
   14001c5d5:	iret   
   14001c5d6:	jg     0x14001c5b3
   14001c5d8:	push   rsp
   14001c5da:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c5db:	(bad)  
   14001c5dc:	(bad)  
   14001c5de:	dec    BYTE PTR [rsi+0x247f26cd]
   14001c5e4:	test   BYTE PTR [rsi-0x6f7ca62c],bl
   14001c5ea:	adc    al,0xa0
   14001c5ec:	imul   edx,eax,0x56573c
   14001c5f2:	(bad)  
   14001c5f3:	adc    DWORD PTR [rcx-0x63],ebp
   14001c5f6:	xor    BYTE PTR [rbx+rbp*8-0x75],cl
   14001c5fa:	(bad)  
   14001c5fb:	fild   WORD PTR [rdi-0x557ed6c9]
   14001c601:	xor    dl,BYTE PTR [rbp-0x2d]
   14001c604:	xchg   edi,eax
   14001c605:	pushf  
   14001c606:	cdq    
   14001c607:	sub    al,0x5b
   14001c609:	(bad)  
   14001c60a:	xchg   DWORD PTR [rdi],ecx
   14001c60c:	shl    DWORD PTR [rdi-0x2886b5c2],0x4f
   14001c613:	mov    cl,0x9a
   14001c615:	frstor [rsi+rsi*4]
   14001c618:	adc    DWORD PTR [rdx+0x65],ebx
   14001c61b:	push   rbx
   14001c61c:	xchg   ebp,eax
   14001c61d:	rex.WRB
   14001c61e:	es (bad) 
   14001c620:	sub    BYTE PTR [rax-0x3f],0xbe
   14001c624:	rex.RX cmp r12d,esp
   14001c627:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c628:	enter  0x857a,0x35
   14001c62c:	mov    ebx,0xa1e621ac
   14001c631:	sti    
   14001c632:	outs   dx,BYTE PTR ds:[rsi]
   14001c633:	sub    al,0x48
   14001c635:	mov    dl,al
   14001c637:	pop    rbx
   14001c638:	in     eax,dx
   14001c639:	ja     0x14001c696
   14001c63b:	or     BYTE PTR [rcx-0x5bc91059],ah
   14001c641:	mov    dh,0xa5
   14001c643:	or     eax,0xa13e7233
   14001c648:	adc    al,0x25
   14001c64a:	mov    ecx,0x4f0c7f18
   14001c64f:	(bad)  
   14001c650:	jns    0x14001c5ed
   14001c652:	imul   ebp,ecx,0xae080d0
   14001c658:	pop    rbx
   14001c659:	sub    al,0x45
   14001c65b:	or     DWORD PTR [rdx+rax*1-0x38fe9a9f],0x12
   14001c663:	leave  
   14001c664:	cmp    eax,0x13627a14
   14001c669:	cwde   
   14001c66a:	xor    eax,0xe7318253
   14001c66f:	push   rsi
   14001c670:	stos   DWORD PTR es:[rdi],eax
   14001c671:	or     eax,0x3469a321
   14001c676:	cdq    
   14001c677:	icebp  
   14001c678:	ror    ch,cl
   14001c67a:	push   rdi
   14001c67b:	js     0x14001c67a
   14001c67d:	in     al,0x35
   14001c67f:	(bad)  
   14001c680:	pop    rcx
   14001c681:	(bad)  
   14001c682:	jle    0x14001c6b4
   14001c684:	jrcxz  0x14001c664
   14001c686:	mov    ebx,0xf1e1716f
   14001c68b:	pop    rbp
   14001c68c:	fidiv  WORD PTR [rsi-0x4]
   14001c68f:	cs fdivp st(0),st
   14001c692:	ret    0x9ccb
   14001c695:	ins    BYTE PTR es:[rdi],dx
   14001c696:	out    dx,eax
   14001c697:	mov    bl,0x23
   14001c699:	psllq  mm2,0xd4
   14001c69d:	add    esp,0xffffffdd
   14001c6a0:	add    eax,esp
   14001c6a2:	mov    BYTE PTR [rbx],dh
   14001c6a4:	push   rdx
   14001c6a5:	(bad)  
   14001c6a6:	bnd jmp 0xfd191b69
   14001c6ac:	(bad)  
   14001c6ad:	xor    eax,0xaaa8aa94
   14001c6b2:	test   DWORD PTR [rdi],esi
   14001c6b4:	or     BYTE PTR [rbx+0x4e],bh
   14001c6b7:	call   0x1502092e6
   14001c6bc:	rex.R jne 0x14001c64c
   14001c6bf:	mov    edi,0x6768e10a
   14001c6c4:	ret    0x3705
   14001c6c7:	(bad)  
   14001c6c8:	movabs ds:0xe1da900ff0aa1eb5,eax
   14001c6d1:	mov    ebp,0x4debe2ef
   14001c6d6:	rex.WRXB cmp rax,0x2f60eea2
   14001c6dc:	adc    ah,bl
   14001c6de:	out    0xac,eax
   14001c6e0:	retf   0x3ea5
   14001c6e3:	pop    rsi
   14001c6e4:	sbb    dh,dl
   14001c6e6:	cdq    
   14001c6e7:	xchg   al,dh
   14001c6e9:	sbb    al,0xd1
   14001c6eb:	js     0x14001c6e0
   14001c6ed:	xchg   ebx,eax
   14001c6ee:	or     DWORD PTR [r8+rbx*1+0x35],eax
   14001c6f3:	or     ebx,DWORD PTR [rip+0x191d7d20]        # 0x1591f4419
   14001c6f9:	or     ebp,DWORD PTR [rax]
   14001c6fb:	cli    
   14001c6fc:	movabs ds:0xdbd078674b43aad5,al
   14001c705:	retf   
   14001c706:	mov    eax,0x50cae01d
   14001c70b:	adc    al,0x14
   14001c70d:	fild   WORD PTR [rax+rsi*4-0x63dbe396]
   14001c714:	fwait
   14001c715:	cmp    DWORD PTR [rdi-0x4b],0xbc7e0062
   14001c71c:	test   ecx,0x93fe4e07
   14001c722:	mov    edi,0xcafff7f4
   14001c727:	(bad)  
   14001c728:	cli    
   14001c729:	(bad)  
   14001c72a:	rex.WRXB call FWORD PTR [r8-0x2d]
   14001c72e:	(bad)  
   14001c72f:	es ja  0x14001c6cb
   14001c732:	nop
   14001c733:	xor    ah,BYTE PTR [rcx]
   14001c735:	es rex.X adc spl,0x6
   14001c73a:	or     cl,BYTE PTR [rcx+0x6679af40]
   14001c740:	add    bh,BYTE PTR [rsi+0x7f7bac63]
   14001c746:	loop   0x14001c776
   14001c748:	add    ebx,eax
   14001c74a:	add    al,0xd6
   14001c74c:	imul   ecx,DWORD PTR [rcx+0x7df5edea],0xb1dd66cf
   14001c756:	fmul   QWORD PTR [rbx-0x38]
   14001c759:	leave  
   14001c75a:	add    esi,esp
   14001c75c:	iret   
   14001c75d:	jge    0x14001c767
   14001c75f:	jns    0x14001c73c
   14001c761:	(bad)  
   14001c762:	shr    ebp,1
   14001c764:	(bad)  
   14001c766:	jle    0x14001c7e7
   14001c768:	and    eax,0x5d1ad612
   14001c76d:	(bad)  
   14001c76e:	ror    DWORD PTR [rsp+rax*2+0x34f7a144],1
   14001c775:	rex.WRB
   14001c776:	rex.W ins DWORD PTR es:[rdi],dx
   14001c778:	(bad)  
   14001c779:	(bad)
   14001c77c:	fst    DWORD PTR [rax+0x57b06eb3]
   14001c782:	(bad)  
   14001c783:	fsubr  QWORD PTR [rcx]
   14001c785:	mov    bh,0xb6
   14001c787:	(bad)  
   14001c788:	add    cl,BYTE PTR [rcx]
   14001c78a:	imul   edi,DWORD PTR [rdx],0xc5d35e72
   14001c790:	rex.R ror DWORD PTR [rsi+0x69],cl
   14001c794:	rex.WX
   14001c795:	rex.WXB pop r15
   14001c797:	je     0x14001c7fc
   14001c799:	rex.WR (bad) 
   14001c79b:	sar    esp,1
   14001c79d:	jno    0x14001c7d0
   14001c79f:	xor    al,0x0
   14001c7a1:	shl    BYTE PTR [rbp+0x23],cl
   14001c7a4:	stc    
   14001c7a5:	adc    al,0x25
   14001c7a7:	cld    
   14001c7a8:	(bad)  
   14001c7a9:	add    BYTE PTR [rbx],dl
   14001c7ab:	xchg   esp,eax
   14001c7ac:	(bad)  
   14001c7ad:	fistp  QWORD PTR [rbx]
   14001c7af:	push   rdx
   14001c7b0:	mov    al,0xe7
   14001c7b2:	hlt    
   14001c7b3:	jbe    0x14001c792
   14001c7b5:	in     eax,0x1b
   14001c7b7:	in     eax,dx
   14001c7b8:	xor    BYTE PTR [rax],al
   14001c7ba:	add    BYTE PTR [rax],ah
   14001c7bc:	add    BYTE PTR [rcx+0x44],cl
   14001c7bf:	push   r12
   14001c7c1:	sbb    eax,DWORD PTR [rip+0xffffffff84e99346]        # 0xc4eb5b0d
   14001c7c7:	xchg   esp,eax
   14001c7c8:	sbb    ah,BYTE PTR [rsi]
   14001c7ca:	push   rbx
   14001c7cb:	sub    BYTE PTR [rbx+0x52782d5e],bl
   14001c7d1:	sbb    BYTE PTR [rbx-0x79437a29],bl
   14001c7d7:	mov    bl,0x74
   14001c7d9:	int3   
   14001c7da:	leave  
   14001c7db:	stos   BYTE PTR es:[rdi],al
   14001c7dc:	movsxd esp,DWORD PTR [rdi-0x1]
   14001c7df:	mov    ebp,?
   14001c7e1:	lods   eax,DWORD PTR ds:[rsi]
   14001c7e2:	mov    ?,eax
   14001c7e4:	fadd   DWORD PTR [rsi+0x370dd3e3]
   14001c7ea:	rex.WRX lahf 
   14001c7ec:	(bad)  
   14001c7ed:	mov    ebp,0xbefe8b6f
   14001c7f2:	xchg   ch,cl
   14001c7f4:	cli    
   14001c7f5:	xor    DWORD PTR [rbx+rdx*4+0x48eb3756],0xffffff91
   14001c7fd:	pushf  
   14001c7fe:	jnp    0x14001c872
   14001c800:	(bad)  
   14001c801:	fldcw  WORD PTR [rdi+rdx*8+0x131ab3e6]
   14001c808:	nop
   14001c809:	push   rdx
   14001c80a:	xchg   edi,eax
   14001c80b:	xor    ebp,edx
   14001c80d:	mov    ah,BYTE PTR [rdx-0x3f]
   14001c810:	push   rdx
   14001c811:	sbb    eax,0xd12bdc97
   14001c816:	out    0xcd,eax
   14001c818:	cmp    eax,0x9c03edf6
   14001c81d:	push   rdi
   14001c81e:	or     ebx,DWORD PTR [rdi-0x27]
   14001c821:	xor    DWORD PTR [rax+0x13],edi
   14001c824:	xor    bl,BYTE PTR [rdi+rdi*4+0x230e3438]
   14001c82b:	jne    0x14001c85d
   14001c82d:	clc    
   14001c82e:	clc    
   14001c82f:	add    ebx,DWORD PTR [rdi+0x41]
   14001c832:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c833:	and    eax,0x9bdd148c
   14001c838:	movsxd ebx,ebx
   14001c83a:	sub    DWORD PTR [rax],ebx
   14001c83c:	cdq    
   14001c83d:	retf   
   14001c83e:	and    edi,edx
   14001c840:	(bad)  
   14001c841:	ret    
   14001c842:	xchg   ecx,eax
   14001c843:	loope  0x14001c84e
   14001c845:	(bad)  
   14001c846:	mov    ecx,0xd10b4300
   14001c84b:	(bad)  
   14001c84c:	adc    eax,0xf00d90c2
   14001c851:	fwait
   14001c852:	icebp  
   14001c853:	xor    bl,BYTE PTR [rsi+0x3f]
   14001c856:	stos   BYTE PTR es:[rdi],al
   14001c857:	jmp    0x14001c8b3
   14001c859:	(bad)  
   14001c85a:	push   rbx
   14001c85b:	pop    rdi
   14001c85c:	fnsave [rdx-0x5edace9]
   14001c862:	xchg   ecx,eax
   14001c863:	mov    BYTE PTR [rdx+0x79756268],bpl
   14001c86a:	(bad)  
   14001c86c:	movabs eax,ds:0x5ffb2aa7a5578396
   14001c875:	rex.WRB add rax,0xffffffffbf67f000
   14001c87b:	out    dx,eax
   14001c87c:	pop    rbx
   14001c87d:	(bad)  
   14001c87e:	test   bh,0x9f
   14001c881:	jp     0x14001c87c
   14001c883:	mov    edi,0xe8f37ebb
   14001c888:	(bad)  
   14001c889:	rex.X rcr BYTE PTR [rip+0x8149b84],cl        # 0x148166414
   14001c890:	sub    DWORD PTR [rcx+0x4d],ebp
   14001c893:	js     0x14001c8c9
   14001c895:	jb     0x14001c8e3
   14001c897:	int3   
   14001c898:	(bad)  
   14001c899:	popf   
   14001c89a:	ins    DWORD PTR es:[rdi],dx
   14001c89b:	add    al,0x8
   14001c89d:	add    eax,0xe3aa72c1
   14001c8a2:	sahf   
   14001c8a3:	jg     0x14001c853
   14001c8a5:	leave  
   14001c8a6:	sub    eax,0x4a1422f8
   14001c8ab:	or     DWORD PTR [rsi+rcx*8-0x6697bdc6],ebp
   14001c8b2:	rex.WRB (bad) 
   14001c8b4:	in     al,0x93
   14001c8b6:	sti    
   14001c8b7:	sub    DWORD PTR [rdi-0x44],ebp
   14001c8ba:	fwait
   14001c8bb:	movabs ds:0xc0b9c4c717e867c9,eax
   14001c8c4:	stos   BYTE PTR es:[rdi],al
   14001c8c5:	push   r14
   14001c8c7:	sbb    dl,BYTE PTR [rcx]
   14001c8c9:	(bad)  
   14001c8ca:	movabs eax,ds:0x4264edc83a35fd68
   14001c8d3:	xchg   rcx,rax
   14001c8d5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c8d6:	rex.WRXB (bad) 
   14001c8d8:	adc    dl,BYTE PTR [rsi+rbx*4+0x4b92cd12]
   14001c8df:	ror    BYTE PTR [rsi-0x5772a965],1
   14001c8e5:	ds jge 0x14001c86a
   14001c8e8:	mov    dh,0xa7
   14001c8ea:	fild   QWORD PTR [rax+riz*4+0x35ae9a04]
   14001c8f1:	mov    eax,0x6ad923de
   14001c8f6:	or     bh,BYTE PTR [rdi+rbx*4+0x6d5a0e41]
   14001c8fd:	sbb    BYTE PTR [rbx],cl
   14001c8ff:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c900:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c901:	cs rex.RB push r8
   14001c904:	(bad)
   14001c907:	rex.X mov al,0x32
   14001c90a:	jmp    0x1556854e1
   14001c90f:	(bad)  
   14001c910:	not    BYTE PTR [rbp+0x54]
   14001c913:	mov    dh,0xb3
   14001c915:	mov    al,0x5e
   14001c917:	ins    DWORD PTR es:[rdi],dx
   14001c918:	adc    al,0x86
   14001c91a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c91b:	xchg   ah,dl
   14001c91d:	ss (bad) 
   14001c91f:	(bad)  
   14001c920:	adc    eax,0x27201271
   14001c925:	and    al,0x8
   14001c927:	int    0x34
   14001c929:	xor    BYTE PTR [rcx+0x53],cl
   14001c92c:	ss stos DWORD PTR es:[rdi],eax
   14001c92e:	int3   
   14001c92f:	repz (bad) 
   14001c931:	scas   eax,DWORD PTR es:[rdi]
   14001c932:	shl    BYTE PTR [rsi],1
   14001c934:	or     eax,0x87cfa448
   14001c939:	test   BYTE PTR [rax-0x6b],bh
   14001c93c:	(bad)  
   14001c93d:	scas   eax,DWORD PTR es:[rdi]
   14001c93e:	jle    0x14001c8de
   14001c940:	pop    rdi
   14001c941:	(bad)  
   14001c942:	std    
   14001c943:	and    eax,0x7f67ee7e
   14001c948:	xchg   ch,ah
   14001c94a:	(bad)  
   14001c94b:	(bad)  
   14001c94c:	bsr    ebp,ebp
   14001c94f:	xor    DWORD PTR [rsi+0x17cc96b6],esi
   14001c955:	rex.WXB jbe 0x14001c94e
   14001c958:	jbe    0x14001c933
   14001c95a:	fcmovu st,st(6)
   14001c95c:	(bad)  
   14001c95d:	je     0x14001c9aa
   14001c95f:	mov    al,0xe9
   14001c961:	fs stos BYTE PTR es:[rdi],al
   14001c963:	sub    eax,0xa80f3bc
   14001c968:	sbb    BYTE PTR [rdi+0x5],ah
   14001c96b:	sbb    al,0x25
   14001c96d:	mov    WORD PTR [rdx+0x55],ds
   14001c970:	lahf   
   14001c971:	adc    edi,edx
   14001c973:	mov    bh,0xa4
   14001c975:	add    DWORD PTR [rdi-0x47db9c7e],edi
   14001c97b:	out    0x58,eax
   14001c97d:	and    BYTE PTR [rcx+0x24],0xfc
   14001c981:	(bad)  
   14001c982:	pop    rdx
   14001c983:	(bad)  [rbp-0x7cad763b]
   14001c989:	xchg   edx,eax
   14001c98a:	test   al,0x14
   14001c98c:	pop    rdx
   14001c98d:	test   eax,0x99fa9d11
   14001c992:	mov    ah,dh
   14001c994:	cmp    DWORD PTR [rdi],esp
   14001c996:	fwait
   14001c997:	js     0x14001ca17
   14001c999:	(bad)  
   14001c99a:	sub    eax,0x820e6231
   14001c99f:	pop    rcx
   14001c9a0:	lock rex.WX (bad) 
   14001c9a3:	xchg   edx,eax
   14001c9a4:	(bad)  
   14001c9a5:	add    DWORD PTR [rax+0x5f],esp
   14001c9a8:	stos   BYTE PTR es:[rdi],al
   14001c9a9:	or     DWORD PTR [rdi+0x775cd6ee],0x24
   14001c9b0:	div    BYTE PTR [rcx]
   14001c9b2:	rex.R fnstenv [rcx-0x774a722b]
   14001c9b9:	xchg   esi,eax
   14001c9ba:	jg     0x14001c9db
   14001c9bc:	rex.WRB push r15
   14001c9be:	(bad)  
   14001c9bf:	rex.RB
   14001c9c0:	rex.RB (bad) 
   14001c9c2:	mov    ch,0x2f
   14001c9c4:	sbb    dl,dl
   14001c9c6:	mov    BYTE PTR [rcx],al
   14001c9c8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c9c9:	add    edi,0x9dfd2810
   14001c9cf:	outs   dx,DWORD PTR ds:[rsi]
   14001c9d0:	(bad)  
   14001c9d1:	(bad)  
   14001c9d2:	ja     0x14001ca1c
   14001c9d4:	add    esp,ebx
   14001c9d6:	ja     0x14001c9c7
   14001c9d8:	fsubrp st(6),st
   14001c9da:	rex.RXB jg 0x14001c9d9
   14001c9dd:	xor    edi,DWORD PTR [rdi-0x3]
   14001c9e0:	(bad)  
   14001c9e1:	cli    
   14001c9e2:	(bad)  
   14001c9e3:	(bad)  
   14001c9e4:	jg     0x14001c9d8
   14001c9e6:	fidivr WORD PTR [rax+rcx*8]
   14001c9e9:	mov    dh,0xed
   14001c9eb:	mov    esi,0xd6fcfbeb
   14001c9f0:	pop    rdx
   14001c9f1:	jnp    0x14001c992
   14001c9f3:	test   eax,0xc770f4fb
   14001c9f8:	neg    esi
   14001c9fa:	jge    0x14001c99f
   14001c9fc:	sahf   
   14001c9fd:	xchg   BYTE PTR [rdi+0x64d196c1],ah
   14001ca03:	mov    ecx,eax
   14001ca05:	(bad)  
   14001ca06:	sbb    bh,al
   14001ca08:	and    DWORD PTR [rsi+0x1895d80d],ecx
   14001ca0e:	(bad)  
   14001ca10:	adc    eax,0x7047fc99
   14001ca15:	add    ch,BYTE PTR [rcx]
   14001ca17:	(bad)  
   14001ca18:	add    DWORD PTR [rbx+0x19],eax
   14001ca1b:	test   QWORD PTR [rax-0x7b],r8
   14001ca1f:	sub    cl,BYTE PTR [rax+0x2a]
   14001ca22:	add    ebp,DWORD PTR [rcx]
   14001ca24:	rex.W add dl,BYTE PTR [rip+0xffffffffd8e0c29b]        # 0x118e28cc6
   14001ca2b:	loopne 0x14001c9b5
   14001ca2d:	test   BYTE PTR [rdx+riz*4-0x61eb7b76],al
   14001ca34:	and    al,0x4b
   14001ca36:	mov    dl,0x2c
   14001ca38:	jmp    0x1b7e0c20a
   14001ca3d:	out    dx,eax
   14001ca3e:	mov    ebx,0x6e9edf53
   14001ca43:	ja     0x14001c9e4
   14001ca45:	ds ret 
   14001ca47:	fisubr WORD PTR [rbx-0x53]
   14001ca4a:	cld    
   14001ca4b:	icebp  
   14001ca4c:	pop    rbx
   14001ca4d:	imul   ebp,ebp,0xffffffdd
   14001ca50:	push   rdi
   14001ca51:	adc    cl,al
   14001ca53:	in     al,0x3d
   14001ca55:	out    0x89,eax
   14001ca57:	in     al,dx
   14001ca58:	stos   BYTE PTR es:[rdi],al
   14001ca59:	sar    DWORD PTR [rbp-0x1a],cl
   14001ca5c:	mov    bl,0x87
   14001ca5e:	cmc    
   14001ca5f:	fwait
   14001ca60:	mov    edi,0xefefefbf
   14001ca65:	jl     0x14001ca0e
   14001ca67:	stos   DWORD PTR es:[rdi],eax
   14001ca68:	(bad)  
   14001ca69:	neg    DWORD PTR [rdx]
   14001ca6b:	sub    eax,DWORD PTR [rbp+riz*4+0x12698660]
   14001ca72:	mov    dh,BYTE PTR [rip+0x22e96e4a]        # 0x162eb38c2
   14001ca78:	rol    BYTE PTR [rsi-0x7b2960ae],cl
   14001ca7e:	rex.WX jb 0x14001ca14
   14001ca81:	rex.WX fbld TBYTE PTR [rip+0xffffffff89f4b390]        # 0xc9f67e18
   14001ca88:	je     0x14001cad3
   14001ca8a:	(bad)
   14001ca8d:	mov    ebp,0xa180b167
   14001ca92:	adc    DWORD PTR [rsi-0x2b],eax
   14001ca95:	adc    al,0x7f
   14001ca97:	jb     0x14001ca9e
   14001ca99:	mov    edi,0x7aacc277
   14001ca9e:	sbb    DWORD PTR [rdi-0x55],ecx
   14001caa1:	scas   al,BYTE PTR es:[rdi]
   14001caa2:	push   rdi
   14001caa3:	adc    dh,BYTE PTR gs:[rbx+0xe]
   14001caa7:	mov    ecx,0xbc52866a
   14001caac:	rex.R pop rsp
   14001caae:	(bad)  
   14001caaf:	push   0xffffffffffffff85
   14001cab1:	shl    DWORD PTR [rdx-0x41cb6894],0xc1
   14001cab8:	mov    ebx,0x68bb56a0
   14001cabd:	(bad)  
   14001cabf:	fld    TBYTE PTR [rax-0x6e]
   14001cac2:	lock jns 0x14001cb41
   14001cac5:	ins    BYTE PTR es:[rdi],dx
   14001cac6:	xor    al,0x14
   14001cac8:	push   0x3838c56a
   14001cacd:	or     bh,BYTE PTR [rbx+0xa23686c]
   14001cad3:	retf   0x70c9
   14001cad6:	mov    al,0x64
   14001cad8:	cmc    
   14001cad9:	movsxd ecx,DWORD PTR [rsp+riz*8-0x62]
   14001cadd:	push   rdx
   14001cade:	ret    0xcc9e
   14001cae1:	rex.WRX and r10,QWORD PTR [rsi+0x1]
   14001cae5:	and    eax,0x4f950926
   14001caea:	jno    0x14001cb64
   14001caec:	jmp    0x14001cb63
   14001caee:	fimul  DWORD PTR [rsi+0x3ace0dad]
   14001caf4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001caf5:	jmp    0x14001cb42
   14001caf7:	shr    BYTE PTR [rax],0x63
   14001cafa:	mov    ah,0xab
   14001cafc:	shl    DWORD PTR [rdi],1
   14001cafe:	(bad)  
   14001caff:	sbb    ah,BYTE PTR [rip+0xffffffffb51310cb]        # 0xf514dbd0
   14001cb05:	xchg   edx,eax
   14001cb06:	adc    DWORD PTR [rax+0x76967a59],esp
   14001cb0c:	(bad)  
   14001cb0d:	out    0x3e,eax
   14001cb0f:	cmc    
   14001cb10:	imul   edi,DWORD PTR [rsp+rsi*8-0x7973743e],0x43
   14001cb18:	rex.WRB (bad) 
   14001cb1a:	(bad)  
   14001cb1b:	xor    eax,0x5c5b9b1b
   14001cb20:	jp     0x14001cb06
   14001cb22:	adc    esi,edx
   14001cb24:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001cb25:	push   rbx
   14001cb26:	mov    dh,0xb7
   14001cb28:	iret   
   14001cb29:	jno    0x14001cb0c
   14001cb2b:	repnz and eax,0x59b6b636
   14001cb31:	pop    rbx
   14001cb32:	pop    rbx
   14001cb33:	addr32 mov edx,0xc6c6c1b9
   14001cb39:	(bad)  
   14001cb3a:	scas   al,BYTE PTR es:[rdi]
   14001cb3b:	scas   al,BYTE PTR es:[rdi]
   14001cb3c:	imul   esp,DWORD PTR [rbx+0x1a],0xb2892afa
   14001cb43:	retf   0xe0ab
   14001cb46:	test   BYTE PTR [rbx],dh
   14001cb48:	rex.X
   14001cb49:	rex.RB out 0x8d,eax
   14001cb4c:	mov    esi,0x82c08901
   14001cb51:	stos   DWORD PTR es:[rdi],eax
   14001cb52:	(bad)  
   14001cb53:	push   rbx
   14001cb54:	pop    rsi
   14001cb55:	int3   
   14001cb56:	cmp    DWORD PTR [rcx],ecx
   14001cb58:	jge    0x14001cb28
   14001cb5a:	adc    al,0x5a
   14001cb5c:	(bad)  
   14001cb5d:	rex.WX movabs rsp,0xd7a7a4f53d96a26f
   14001cb67:	cli    
   14001cb68:	(bad)  
   14001cb69:	xchg   esp,eax
   14001cb6a:	imul   DWORD PTR [rbx]
   14001cb6c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001cb6d:	stos   BYTE PTR es:[rdi],al
   14001cb6e:	or     BYTE PTR [rdi+0x2b6712e5],0x6b
   14001cb75:	xchg   edx,eax
   14001cb76:	sbb    bl,bh
   14001cb78:	sub    al,0xe7
   14001cb7a:	stc    
   14001cb7b:	out    0x4b,eax
   14001cb7d:	sub    BYTE PTR [rsi],0x9d
   14001cb80:	mov    dl,0xe9
   14001cb82:	jge    0x14001cbff
   14001cb84:	push   rsi
   14001cb85:	(bad)
   14001cb89:	stc    
   14001cb8a:	pop    rbx
   14001cb8b:	push   rbx
   14001cb8c:	pop    rsi
   14001cb8d:	ret    0x8690
   14001cb90:	(bad)
   14001cb93:	xor    BYTE PTR [rcx+rcx*8+0x63],0xc9
   14001cb98:	movabs al,ds:0x23d436252507eea0
   14001cba1:	sub    BYTE PTR [rbx],bh
   14001cba3:	push   rcx
   14001cba4:	mov    cs,WORD PTR [rbx]
   14001cba6:	lods   eax,DWORD PTR ds:[rsi]
   14001cba7:	xor    ebp,ebp
   14001cba9:	(bad)  
   14001cbaa:	mov    edi,0x655fd13a
   14001cbaf:	jnp    0x14001cbf4
   14001cbb1:	adc    al,0x0
   14001cbb3:	shl    BYTE PTR [rdi+0x7d],0xe7
   14001cbb7:	jnp    0x14001cc18
   14001cbb9:	(bad)  
   14001cbba:	icebp  
   14001cbbb:	(bad)  
   14001cbbc:	stc    
   14001cbbd:	jae    0x14001cbfe
   14001cbbf:	cmc    
   14001cbc0:	idiv   esi
   14001cbc2:	mov    bh,0xdf
   14001cbc4:	clc    
   14001cbc5:	jmp    0x14001cc22
   14001cbc7:	(bad)  
   14001cbc8:	lods   al,BYTE PTR ds:[rsi]
   14001cbc9:	rex.WB sub bpl,r9b
   14001cbcc:	cdq    
   14001cbcd:	fisub  DWORD PTR [rax+rdi*1+0x10c69058]
   14001cbd4:	ins    DWORD PTR es:[rdi],dx
   14001cbd5:	rex.R jb 0x14001cb99
   14001cbd8:	pop    rdx
   14001cbd9:	add    ah,BYTE PTR [rbp+0x51940b35]
   14001cbdf:	sub    BYTE PTR [rbx],dl
   14001cbe1:	mov    bl,0xa3
   14001cbe3:	retf   0x63a1
   14001cbe6:	pop    rsi
   14001cbe7:	xchg   ebx,eax
   14001cbe8:	xchg   esp,eax
   14001cbe9:	rex.WXB mov BYTE PTR [r11+r13*1],sil
   14001cbed:	rex.XB in eax,0x2c
   14001cbf0:	rex.XB mov r15d,0x28f07f89
   14001cbf6:	in     eax,dx
   14001cbf7:	je     0x14001cb88
   14001cbf9:	(bad)
   14001cbfc:	(bad)  
   14001cbfd:	sub    al,0x66
   14001cbff:	cwde   
   14001cc00:	xor    cl,dh
   14001cc02:	or     ecx,DWORD PTR [rax]
   14001cc04:	lods   eax,DWORD PTR ds:[rsi]
   14001cc05:	(bad)  
   14001cc06:	xchg   esp,eax
   14001cc07:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001cc08:	xchg   ebp,eax
   14001cc09:	push   0x71
   14001cc0b:	sub    eax,DWORD PTR [rsi]
   14001cc0d:	xchg   ecx,eax
   14001cc0e:	pop    rdx
   14001cc0f:	out    0xd2,eax
   14001cc11:	test   DWORD PTR [rbp-0x582efb7a],edx
   14001cc17:	mov    ecx,0x4a3f696f
   14001cc1c:	add    BYTE PTR [rsi-0x3f],ah
   14001cc1f:	ss add al,0x59
   14001cc22:	rol    BYTE PTR [rbx+rax*2-0x1b],cl
   14001cc26:	(bad)  
   14001cc27:	(bad)  
   14001cc28:	jno    0x14001cbf2
   14001cc2a:	sub    ch,BYTE PTR [rsi+rcx*8]
   14001cc2d:	xchg   esi,eax
   14001cc2e:	xor    edx,0x13463182
   14001cc34:	cmp    DWORD PTR [rsi],0x2a
   14001cc37:	adc    al,0xd9
   14001cc39:	movabs ds:0x4ee5f7a5c056881d,eax
   14001cc42:	xor    al,0x1f
   14001cc44:	je     0x14001cc5e
   14001cc46:	or     DWORD PTR [rdx+0x2885720c],ebp
   14001cc4c:	rex.W int3 
   14001cc4e:	pop    rax
   14001cc4f:	and    eax,0x4426872d
   14001cc54:	(bad)  
   14001cc55:	mov    bl,0x15
   14001cc57:	and    DWORD PTR [rdx+rbx*8-0x6b],eax
   14001cc5b:	rol    BYTE PTR [rdi-0x64e77275],cl
   14001cc61:	int3   
   14001cc62:	cwde   
   14001cc63:	push   rcx
   14001cc64:	jb     0x14001cc36
   14001cc66:	rex.WXB (bad) 
   14001cc68:	ds (bad) 
   14001cc6a:	jg     0x14001cc60
   14001cc6c:	jrcxz  0x14001cced
   14001cc6e:	mov    WORD PTR [rdi],gs
   14001cc70:	(bad)  
   14001cc71:	out    0x6f,al
   14001cc73:	repnz cdq 
   14001cc75:	rex.WRXB jg 0x14001cc02
   14001cc78:	xchg   edi,eax
   14001cc79:	pop    rsi
   14001cc7a:	clc    
   14001cc7b:	adc    al,bh
   14001cc7d:	mov    edi,0xf2eeefec
   14001cc83:	(bad)  
   14001cc84:	mov    ebp,DWORD PTR [rdi]
   14001cc86:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001cc87:	rcr    DWORD PTR [rbp-0x4a],1
   14001cc8a:	pop    rax
   14001cc8b:	sar    DWORD PTR [rdx+0x30],0x60
   14001cc8f:	movsxd esi,DWORD PTR [rbx-0x75]
   14001cc92:	cmc    
   14001cc93:	lea    ebp,[rcx]
   14001cc95:	pop    rbx
   14001cc96:	pop    rbx
   14001cc97:	fistp  DWORD PTR [rbx+rdi*4-0x188c7e88]
   14001cc9e:	(bad)  
   14001cc9f:	jae    0x14001cc9a
   14001cca1:	rol    DWORD PTR [rdi-0x67],1
   14001cca4:	lods   al,BYTE PTR ds:[rsi]
   14001cca5:	scas   eax,DWORD PTR es:[rdi]
   14001cca6:	push   rcx
   14001cca7:	or     eax,0x1ba74c86
   14001ccac:	mov    edi,ss
   14001ccae:	es cli 
   14001ccb0:	xor    esp,DWORD PTR [rdx]
   14001ccb2:	rex.WX (bad) 
   14001ccb4:	fwait
   14001ccb5:	adc    ebp,DWORD PTR [rcx+rcx*8-0x46]
   14001ccb9:	xchg   al,ah
   14001ccbb:	adc    esi,eax
   14001ccbd:	and    eax,0xfcff0f7b
   14001ccc2:	lods   eax,DWORD PTR ds:[rsi]
   14001ccc3:	fwait
   14001ccc4:	stos   BYTE PTR es:[rdi],al
   14001ccc5:	pop    rbx
   14001ccc6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ccc7:	and    ch,bh
   14001ccc9:	(bad)  
   14001ccca:	pop    rbx
   14001cccb:	retf   0xb4cc
   14001ccce:	fidiv  DWORD PTR [rcx]
   14001ccd0:	div    ebx
   14001ccd2:	xchg   esp,ecx
   14001ccd4:	sub    al,0x94
   14001ccd6:	cmp    eax,0xfc3858e7
   14001ccdb:	mov    dh,BYTE PTR [rip+0xbb756cf]        # 0x14bb923b0
   14001cce1:	mov    ebp,0xf94da13b
   14001cce6:	sbb    dl,BYTE PTR [rdx-0x64]
   14001cce9:	(bad)  
   14001ccea:	mov    BYTE PTR [rcx+0x34ad28c9],ch
   14001ccf0:	xchg   ecx,eax
   14001ccf1:	adc    al,0x2e
   14001ccf3:	push   rax
   14001ccf4:	pop    rdx
   14001ccf5:	jge    0x14001cd6a
   14001ccf7:	movabs al,ds:0x102709277b21bc0c
   14001cd01:	xchg   ebx,eax
   14001cd02:	xor    cl,BYTE PTR [rax+0x39]
   14001cd05:	lods   al,BYTE PTR ds:[rsi]
   14001cd06:	loop   0x14001ccdd
   14001cd08:	fs iret 
   14001cd0a:	add    bh,BYTE PTR [rdx-0x3c670082]
   14001cd10:	sub    BYTE PTR [rdi+rcx*1+0x67881ad2],0x95
   14001cd18:	rex.WXB jns 0x14001ccba
   14001cd1b:	repnz adc DWORD PTR ds:[rsi-0x2963ca1],edx
   14001cd23:	sub    eax,0x2986f6f
   14001cd28:	add    al,bh
   14001cd2a:	and    edi,DWORD PTR [rdi-0x8]
   14001cd2d:	cmp    edi,esi
   14001cd2f:	out    dx,al
   14001cd30:	(bad)  
   14001cd31:	sahf   
   14001cd32:	mov    edi,0x5f37edf3
   14001cd37:	(bad)  
   14001cd38:	clc    
   14001cd39:	shl    ebp,1
   14001cd3b:	jne    0x14001cd60
   14001cd3d:	fimul  WORD PTR [rax]
   14001cd3f:	(bad)  
   14001cd40:	mov    ah,0x3f
   14001cd42:	rcr    al,0x34
   14001cd45:	fld    DWORD PTR [rbp+0x53]
   14001cd48:	int    0xb9
   14001cd4a:	repnz add esi,DWORD PTR [rbx+rdx*2+0x5e]
   14001cd4f:	cmc    
   14001cd50:	fsub   QWORD PTR [rbp-0x79d51639]
   14001cd56:	add    al,0x7a
   14001cd58:	leave  
   14001cd59:	fidiv  DWORD PTR [rcx]
   14001cd5b:	add    al,0x68
   14001cd5d:	(bad)  
   14001cd5e:	mov    BYTE PTR [rcx+0x19],bl
   14001cd61:	stos   BYTE PTR es:[rdi],al
   14001cd62:	loope  0x14001ccfc
   14001cd64:	loope  0x14001cd2f
   14001cd66:	and    esi,DWORD PTR [rdi+rsi*2]
   14001cd69:	out    0xb4,eax
   14001cd6b:	(bad)  
   14001cd6c:	lahf   
   14001cd6d:	ror    BYTE PTR [rsi],cl
   14001cd6f:	adc    r8,QWORD PTR [rbx+r10*8-0x73bf9096]
   14001cd77:	loopne 0x14001cdf6
   14001cd79:	sub    DWORD PTR [rip+0xffffffffaeea9345],ebx        # 0xeeec60c4
   14001cd7f:	rex.RX test al,0x44
   14001cd82:	mov    al,0xd1
   14001cd84:	loop   0x14001cd28
   14001cd86:	movabs ds:0xe43912897e962b31,eax
   14001cd8f:	(bad)  
   14001cd90:	adc    eax,0xa862174
   14001cd95:	jno    0x14001cda4
   14001cd97:	and    esi,ecx
   14001cd99:	pop    rcx
   14001cd9a:	(bad)
   14001cd9d:	sahf   
   14001cd9e:	push   rax
   14001cd9f:	sti    
   14001cda0:	adc    DWORD PTR [rbx+0x3f],ecx
   14001cda3:	rex.RXB add DWORD PTR [r8],r15d
   14001cda6:	sub    BYTE PTR [rbx],ch
   14001cda8:	push   rdx
   14001cda9:	pop    rdx
   14001cdaa:	mov    bh,0x61
   14001cdac:	adc    eax,0x44279590
   14001cdb1:	pop    rbp
   14001cdb2:	cmp    dh,al
   14001cdb4:	sbb    DWORD PTR [rdx+rdx*1+0x5422a9c4],esp
   14001cdbb:	rex.RX fist WORD PTR [rbx+r15*2]
   14001cdbf:	movabs ds:0x5711744202c56dc2,eax
   14001cdc8:	cmp    DWORD PTR [rsi+rax*2],ecx
   14001cdcb:	add    DWORD PTR [rsi+0x21],eax
   14001cdce:	and    al,0x88
   14001cdd0:	push   0x1220be22
   14001cdd5:	lods   eax,DWORD PTR ds:[rsi]
   14001cdd6:	scas   al,BYTE PTR es:[rdi]
   14001cdd7:	(bad)  
   14001cdd8:	fsub   DWORD PTR [rsi-0x21ff40f4]
   14001cdde:	mov    al,0x5a
   14001cde0:	xor    eax,0x3ad918c4
   14001cde5:	ja     0x14001cd68
   14001cde7:	(bad)  
   14001cde9:	lods   eax,DWORD PTR ds:[rsi]
   14001cdea:	(bad)  
   14001cdeb:	out    0x3,eax
   14001cded:	(bad)  
   14001cdee:	cli    
   14001cdef:	xor    bh,dh
   14001cdf1:	out    dx,al
   14001cdf2:	fsubrp st(5),st
   14001cdf4:	(bad)  
   14001cdf5:	push   rdi
   14001cdf6:	pop    rsi
   14001cdf7:	out    0xd5,al
   14001cdf9:	xchg   edi,eax
   14001cdfa:	pop    rdi
   14001cdfb:	in     al,0xe6
   14001cdfd:	cmc    
   14001cdfe:	jmp    0x14001cdec
   14001ce00:	out    dx,al
   14001ce01:	out    dx,eax
   14001ce02:	mov    cl,0x7b
   14001ce04:	outs   dx,DWORD PTR ds:[rsi]
   14001ce05:	(bad)  
   14001ce06:	mov    BYTE PTR [rax],bh
   14001ce08:	push   rdi
   14001ce09:	mov    cl,0x5a
   14001ce0b:	cs mov eax,0x3b2eef7f
   14001ce11:	ja     0x14001ce02
   14001ce13:	push   0x3654404f
   14001ce18:	(bad)  
   14001ce19:	(bad)  
   14001ce1a:	add    ch,BYTE PTR [rbx-0x15]
   14001ce1d:	jmp    0x14001ce7b
   14001ce1f:	mov    eax,0xedcd8978
   14001ce24:	ins    DWORD PTR es:[rdi],dx
   14001ce25:	(bad)  
   14001ce26:	popf   
   14001ce27:	fild   DWORD PTR [rsi]
   14001ce29:	test   BYTE PTR [rbp+0x3d2e4dcd],cl
   14001ce2f:	cli    
   14001ce30:	sub    bl,bl
   14001ce32:	(bad)  
   14001ce33:	cs and dh,al
   14001ce36:	xor    ch,bl
   14001ce38:	fsub   DWORD PTR [rax-0x46]
   14001ce3b:	mov    cl,0x41
   14001ce3d:	push   rbp
   14001ce3e:	imul   edi,DWORD PTR [rax+0x55],0x386e35d7
   14001ce45:	sub    al,0x56
   14001ce47:	cmp    BYTE PTR [rbx],dl
   14001ce49:	jl     0x14001cdf3
   14001ce4b:	pop    rsp
   14001ce4c:	in     eax,0x52
   14001ce4e:	sahf   
   14001ce4f:	sub    al,dl
   14001ce51:	ret    0xdf97
   14001ce54:	jnp    0x14001ce14
   14001ce56:	add    edi,esi
   14001ce58:	sbb    BYTE PTR [rsi+0x186c86ab],dl
   14001ce5e:	rex.WX movabs rbp,0xfbdc76a33bbb445f
   14001ce68:	mov    WORD PTR [rax],ds
   14001ce6a:	xchg   ebp,eax
   14001ce6b:	(bad)  
   14001ce6c:	(bad)  
   14001ce6d:	xor    BYTE PTR [rax+rbx*4-0x6],0x58
   14001ce72:	rex.WX test BYTE PTR [rbp+0x38],bl
   14001ce76:	and    DWORD PTR [rax-0x54],edx
   14001ce79:	sub    eax,0x9fbe71f9
   14001ce7e:	rex.W (bad) 
   14001ce80:	cli    
   14001ce81:	push   rbp
   14001ce82:	add    BYTE PTR [rbp-0x59],bl
   14001ce85:	(bad)  [rdx-0x28b5ca59]
   14001ce8b:	clc    
   14001ce8c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ce8d:	mov    ah,BYTE PTR [rsi+riz*4]
   14001ce90:	movabs eax,ds:0x8e6720b72f4f141f
   14001ce99:	fwait
   14001ce9a:	push   rsp
   14001ce9b:	in     al,0x2c
   14001ce9d:	out    0x26,eax
   14001ce9f:	and    DWORD PTR [rax+0x4a],esp
   14001cea2:	sub    dh,BYTE PTR [rcx+0x71e52a84]
   14001cea8:	(bad)  
   14001cea9:	push   0xffffffff89441ea4
   14001ceae:	ss fsubp st(0),st
   14001ceb1:	in     eax,dx
   14001ceb2:	or     eax,0x1e570055
   14001ceb7:	fxtract 
   14001ceb9:	jg     0x14001ceae
   14001cebb:	(bad)  
   14001cebc:	ds std 
   14001cebe:	lahf   
   14001cebf:	(bad)  
   14001cec0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001cec1:	mov    edi,0x6c7fbffc
   14001cec6:	mov    ecx,0x4833df6a
   14001cecb:	jno    0x14001ce69
   14001cecd:	xor    eax,0x92a6002a
   14001ced2:	scas   al,BYTE PTR es:[rdi]
   14001ced3:	(bad)  
   14001ced4:	pop    rbp
   14001ced5:	xor    al,0x56
   14001ced7:	(bad)  
   14001ced8:	jae    0x14001cedb
   14001ceda:	rcr    BYTE PTR [rdi-0x69569ee4],cl
   14001cee0:	or     al,0x64
   14001cee2:	(bad)  
   14001cee3:	js     0x14001cf32
   14001cee5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001cee6:	imul   ebx,DWORD PTR [rdi+0x40],0xada182b3
   14001ceed:	sbb    dl,bl
   14001ceef:	ins    DWORD PTR es:[rdi],dx
   14001cef0:	loop   0x14001cf43
   14001cef2:	ret    
   14001cef3:	jb     0x14001cf73
   14001cef5:	adc    edi,DWORD PTR [rdi-0x12]
   14001cef8:	add    al,0xe3
   14001cefa:	lods   al,BYTE PTR ds:[rsi]
   14001cefb:	xchg   BYTE PTR [rbx],dl
   14001cefd:	jae    0x14001ceb4
   14001ceff:	ret    0xd438
   14001cf02:	and    ah,bh
   14001cf04:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001cf05:	rex.WRX iretq 
   14001cf07:	mov    bl,0xb2
   14001cf09:	and    bl,BYTE PTR [rax]
   14001cf0b:	test   eax,0xf18303b1
   14001cf10:	xchg   dh,al
   14001cf12:	scas   eax,DWORD PTR es:[rdi]
   14001cf13:	push   0x7501db62
   14001cf18:	rex imul eax,esp,0x206d81c5
   14001cf1f:	lods   al,BYTE PTR ds:[rsi]
   14001cf20:	pop    rax
   14001cf21:	sbb    DWORD PTR [rcx-0x51e773e6],esp
   14001cf27:	(bad)  
   14001cf28:	sub    al,0xc2
   14001cf2a:	sub    DWORD PTR [rcx],edi
   14001cf2c:	rcr    DWORD PTR [rsi],cl
   14001cf2e:	rex.RB lods eax,DWORD PTR ds:[rsi]
   14001cf30:	jp     0x14001cf86
   14001cf32:	push   rbx
   14001cf33:	test   eax,0xa43cc048
   14001cf38:	ret    0x9d0b
   14001cf3b:	lahf   
   14001cf3c:	cdq    
   14001cf3d:	mov    esi,0x4aa2253b
   14001cf42:	call   0xc99629d7
   14001cf47:	xor    DWORD PTR [rbp-0x2c675bb8],esi
   14001cf4d:	jmp    0x14001cf48
   14001cf4f:	push   0x1b32ad17
   14001cf54:	mov    DWORD PTR [rax-0x53],esp
   14001cf57:	push   rbx
   14001cf58:	stos   DWORD PTR es:[rdi],eax
   14001cf59:	(bad)  
   14001cf5a:	jb     0x14001cf52
   14001cf5c:	(bad)  
   14001cf5e:	clc    
   14001cf5f:	xchg   al,dl
   14001cf61:	mov    dh,0x58
   14001cf63:	xor    DWORD PTR [rbx+rbp*4],esi
   14001cf66:	adc    eax,0x1f971c62
   14001cf6b:	jnp    0x14001cf09
   14001cf6d:	mov    ecx,DWORD PTR [rdi+0x3f07c63c]
   14001cf73:	repnz sub eax,0x603d1c9c
   14001cf79:	idiv   esi
   14001cf7b:	(bad)  
   14001cf7c:	xlat   BYTE PTR ds:[rbx]
   14001cf7d:	pop    rdi
   14001cf7e:	jge    0x14001cf05
   14001cf80:	(bad)  [rdi-0x391c8c91]
   14001cf86:	imul   ebp,esp,0xffffffdc
   14001cf89:	mov    ebx,0x58f8ecc7
   14001cf8e:	iret   
   14001cf8f:	test   DWORD PTR [rbp-0x53554ea8],esi
   14001cf95:	push   rdx
   14001cf96:	adc    dh,al
   14001cf98:	(bad)  
   14001cf99:	int    0x1b
   14001cf9b:	fdivr  QWORD PTR [rcx+rsi*2+0x53fdfb5d]
   14001cfa2:	mov    fs,WORD PTR [rdx+0x38]
   14001cfa5:	sbb    al,0x32
   14001cfa7:	sbb    al,0x8d
   14001cfa9:	jno    0x14001cf79
   14001cfab:	xor    bl,BYTE PTR [rax]
   14001cfad:	(bad)  
   14001cfae:	cdq    
   14001cfaf:	rex.WR (bad) 
   14001cfb1:	fdivr  DWORD PTR [rdx]
   14001cfb3:	jg     0x14001cf53
   14001cfb5:	(bad)  
   14001cfb6:	int    0x4d
   14001cfb8:	ss ss (bad) 
   14001cfbb:	cmp    DWORD PTR [rdi-0x2],esi
   14001cfbe:	cmp    al,0xeb
   14001cfc0:	fwait
   14001cfc1:	fwait
   14001cfc2:	lods   al,BYTE PTR ds:[rsi]
   14001cfc3:	lods   eax,DWORD PTR ds:[rsi]
   14001cfc4:	lods   eax,DWORD PTR ds:[rsi]
   14001cfc5:	mov    cl,0xbe
   14001cfc7:	mov    cl,0xc1
   14001cfc9:	je     0x14001d02e
   14001cfcb:	mov    dh,BYTE PTR [rcx-0x28a00426]
   14001cfd1:	xor    eax,0xc698879
   14001cfd6:	mov    cl,ch
   14001cfd8:	mov    al,0xa6
   14001cfda:	jrcxz  0x14001d002
   14001cfdc:	lods   al,BYTE PTR ds:[rsi]
   14001cfdd:	stos   BYTE PTR es:[rdi],al
   14001cfde:	or     ah,bh
   14001cfe0:	je     0x14001d01e
   14001cfe2:	pop    rax
   14001cfe3:	(bad)  [rsi-0x2cd076a3]
   14001cfe9:	jg     0x14001d052
   14001cfeb:	xchg   edi,eax
   14001cfec:	(bad)  
   14001cfed:	pop    rbx
   14001cfee:	call   0x1aadae31f
   14001cff3:	out    0x30,eax
   14001cff5:	and    eax,0x414787f3
   14001cffa:	adc    al,BYTE PTR [rbx-0x25749b1]
   14001d000:	jbe    0x14001d05d
   14001d002:	adc    ch,ah
   14001d004:	add    BYTE PTR [rcx+rdi*4],dh
   14001d007:	in     al,dx
   14001d008:	xchg   esi,eax
   14001d009:	and    bh,BYTE PTR [rbx-0x37]
   14001d00c:	mov    esi,0xd7f92f41
   14001d011:	rex.WXB
   14001d012:	rex.RX xchg esi,eax
   14001d014:	mov    ch,0x99
   14001d016:	lods   eax,DWORD PTR ds:[rsi]
   14001d017:	cmp    ebx,ecx
   14001d019:	xchg   edx,eax
   14001d01a:	xchg   ebx,eax
   14001d01b:	ret    0xe941
   14001d01e:	pop    rsp
   14001d01f:	cld    
   14001d020:	pushf  
   14001d021:	mov    bh,0x28
   14001d023:	cdq    
   14001d024:	jle    0x14001cfee
   14001d026:	lods   al,BYTE PTR ds:[rsi]
   14001d027:	rex.XB (bad) 
   14001d02a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d02b:	and    eax,0x54844390
   14001d030:	sbb    eax,0x8f48bdd3
   14001d035:	sti    
   14001d036:	adc    edx,edx
   14001d038:	sbb    edi,DWORD PTR [rax+0xaa1bd]
   14001d03e:	loopne 0x14001cfc7
   14001d040:	mov    esi,0xfeb783f7
   14001d045:	hlt    
   14001d046:	rex.WRXB std 
   14001d048:	loop   0x14001cfd9
   14001d04a:	std    
   14001d04b:	iret   
   14001d04c:	lahf   
   14001d04d:	cld    
   14001d04e:	int3   
   14001d04f:	iret   
   14001d050:	pop    rbx
   14001d051:	sub    ebx,DWORD PTR [rbx-0x2f]
   14001d054:	jns    0x14001d0be
   14001d056:	or     al,0xce
   14001d058:	add    dh,al
   14001d05a:	(bad)  
   14001d05b:	pop    rsp
   14001d05c:	(bad)  
   14001d05d:	mov    esp,0xc20d210
   14001d062:	retf   0xe601
   14001d065:	rex.WB sub al,0x29
   14001d068:	mov    dl,0xea
   14001d06a:	xor    al,0x66
   14001d06c:	mov    edx,0xd4785e0
   14001d071:	jge    0xcf520327
   14001d077:	sbb    al,0x83
   14001d079:	in     eax,0x36
   14001d07b:	jrcxz  0x14001d0b8
   14001d07d:	iret   
   14001d07e:	shr    BYTE PTR [rsi+0x160ed3ed],cl
   14001d084:	push   rax
   14001d085:	or     DWORD PTR [rdx],esi
   14001d087:	push   rsp
   14001d088:	jo     0x14001d018
   14001d08a:	and    al,0xb4
   14001d08c:	sahf   
   14001d08d:	and    al,0x62
   14001d08f:	(bad)
   14001d093:	cwde   
   14001d094:	xchg   esp,eax
   14001d095:	mov    edx,DWORD PTR fs:[rcx]
   14001d098:	xchg   ebx,eax
   14001d09a:	(bad)  
   14001d09b:	xchg   BYTE PTR [rdx],ch
   14001d09d:	cmp    BYTE PTR [rdx+0x5769a5b6],bl
   14001d0a3:	mov    ah,0xb1
   14001d0a5:	(bad)  
   14001d0a6:	cli    
   14001d0a7:	jno    0x14001d10f
   14001d0a9:	nop
   14001d0aa:	or     BYTE PTR [rip+0x5944b6d1],dl        # 0x199468781
   14001d0b0:	rol    DWORD PTR [rsi],1
   14001d0b2:	lea    ebp,[rbp+0x4d21ab07]
   14001d0b8:	pop    rax
   14001d0b9:	adc    ch,BYTE PTR [rax-0x2b]
   14001d0bc:	sub    eax,0x5e9c4117
   14001d0c1:	(bad)  
   14001d0c2:	leave  
   14001d0c3:	pushf  
   14001d0c4:	add    al,0xa0
   14001d0c6:	(bad)  
   14001d0c7:	fadd   DWORD PTR [rsp+rdx*4-0x60fdb600]
   14001d0ce:	addr32 (bad) 
   14001d0d0:	or     ecx,DWORD PTR [rcx]
   14001d0d2:	mov    eax,0x88086924
   14001d0d7:	jp     0x14001d11a
   14001d0d9:	(bad)  
   14001d0da:	out    dx,al
   14001d0db:	push   0x103450e9
   14001d0e0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d0e1:	or     al,0xd9
   14001d0e3:	test   al,0x34
   14001d0e5:	lods   al,BYTE PTR ds:[rsi]
   14001d0e6:	shl    ah,1
   14001d0e8:	movabs ds:0x56d4a7ffad2aa029,al
   14001d0f1:	or     al,0x34
   14001d0f3:	rex.WRB sbb r12b,r15b
   14001d0f6:	in     eax,0x23
   14001d0f8:	adc    ecx,0x3a
   14001d0fb:	(bad)  
   14001d0fc:	pop    rsp
   14001d0fd:	pop    rcx
   14001d0fe:	jrcxz  0x14001d0b1
   14001d100:	(bad)  
   14001d101:	lahf   
   14001d102:	shl    DWORD PTR [rdx+0x3c386fa5],1
   14001d108:	fsub   st,st(7)
   14001d10a:	out    dx,al
   14001d10b:	popf   
   14001d10c:	cmp    ebp,esp
   14001d10e:	in     al,dx
   14001d10f:	fsubrp st(7),st
   14001d111:	cmc    
   14001d112:	fwait
   14001d113:	(bad)  
   14001d114:	fnstcw WORD PTR [rcx-0x427c7885]
   14001d11a:	cmp    eax,0xc9a7a7e6
   14001d11f:	sti    
   14001d120:	xor    BYTE PTR [rax+riz*8+0x3262c671],al
   14001d127:	sub    DWORD PTR [rax+0x55beb473],ecx
   14001d12d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d12e:	je     0x14001d162
   14001d130:	movsxd esi,DWORD PTR [rsi+0x32]
   14001d133:	movsxd esi,DWORD PTR [rdi+0x7f]
   14001d136:	(bad)  
   14001d137:	imul   esi,esp,0x75
   14001d13a:	movsxd ecx,DWORD PTR [rip+0x48315555]        # 0x188332695
   14001d140:	movabs fs:0x9dce2dad8d90e1c3,al
   14001d14a:	(bad)  
   14001d14b:	iret   
   14001d14c:	out    0xd6,al
   14001d14e:	(bad)  
   14001d14f:	xchg   ebx,eax
   14001d150:	cmc    
   14001d151:	jne    0x14001d119
   14001d153:	xchg   ebx,eax
   14001d154:	or     ebx,edx
   14001d156:	jmp    0x1b5f786ef
   14001d15b:	jl     0x14001d171
   14001d15d:	xchg   esi,eax
   14001d15e:	stos   DWORD PTR es:[rdi],eax
   14001d15f:	adc    eax,0xe0f01ab6
   14001d164:	shl    DWORD PTR [rcx],0x37
   14001d167:	outs   dx,DWORD PTR ds:[rsi]
   14001d168:	fsubrp st(1),st
   14001d16a:	out    0x8d,al
   14001d16c:	xlat   BYTE PTR ds:[rbx]
   14001d16d:	jns    0x14001d161
   14001d16f:	retf   0xa513
   14001d172:	neg    BYTE PTR [rdi+0x5c]
   14001d175:	in     eax,0x1c
   14001d177:	jp     0x14001d13d
   14001d179:	push   rax
   14001d17a:	cmp    BYTE PTR [rdx+rsi*2],ah
   14001d17d:	std    
   14001d17e:	pop    rdi
   14001d17f:	mov    bl,0xed
   14001d181:	sub    dh,bh
   14001d183:	(bad)  
   14001d184:	or     ecx,DWORD PTR [rsi-0x4a]
   14001d187:	mov    ebx,0x294030bd
   14001d18c:	ret    
   14001d18d:	sub    DWORD PTR [rbp-0x61],eax
   14001d190:	fdiv   DWORD PTR [rbx+0x2ab02adc]
   14001d196:	imul   eax,DWORD PTR [rcx+0x279bdcae],0x804e6587
   14001d1a0:	mov    esp,0x344dd94f
   14001d1a5:	jmp    0x14c2dbaa1
   14001d1aa:	jp     0x14001d1b6
   14001d1ac:	rex.X jb 0x14001d171
   14001d1af:	xor    BYTE PTR [rdi-0x2b3c26d6],al
   14001d1b5:	mul    DWORD PTR [rdi+0x7c]
   14001d1b8:	(bad)  
   14001d1b9:	(bad)  
   14001d1ba:	lods   eax,DWORD PTR ds:[rsi]
   14001d1bb:	fcomp  QWORD PTR [rdi-0x76f3d6e0]
   14001d1c1:	sbb    BYTE PTR [rbx],ah
   14001d1c3:	adc    cl,BYTE PTR [rdi+rbp*1+0x3d]
   14001d1c7:	lock (bad) 
   14001d1c9:	outs   dx,BYTE PTR ds:[rsi]
   14001d1ca:	outs   dx,DWORD PTR ds:[rsi]
   14001d1cb:	mov    eax,0x33f80002
   14001d1d0:	(bad)  
   14001d1d1:	stc    
   14001d1d2:	cmp    eax,0x37abe7ff
   14001d1d7:	idiv   esi
   14001d1d9:	in     al,dx
   14001d1da:	addr32 (bad) 
   14001d1dc:	(bad)  
   14001d1dd:	ficomp DWORD PTR [rdi-0x66]
   14001d1e0:	pop    rax
   14001d1e1:	and    eax,DWORD PTR [rcx+0x20]
   14001d1e4:	mov    BYTE PTR [rax+0x6],ah
   14001d1e7:	stos   BYTE PTR es:[rdi],al
   14001d1e8:	int    0xc5
   14001d1ea:	(bad)  
   14001d1eb:	movabs ds:0xf815ad43d493094f,al
   14001d1f4:	push   rsp
   14001d1f5:	xchg   DWORD PTR [rdi+0x16],ecx
   14001d1f8:	adc    eax,0x3d33e692
   14001d1fd:	scas   eax,DWORD PTR es:[rdi]
   14001d1fe:	and    BYTE PTR [rip+0xffffffff8368c100],cl        # 0xc36a9304
   14001d204:	lea    esi,[rbp-0x6a]
   14001d207:	stos   BYTE PTR es:[rdi],al
   14001d208:	(bad)  
   14001d209:	xor    DWORD PTR [rsi],edi
   14001d20b:	mov    esi,0x75c1e2c2
   14001d210:	cld    
   14001d211:	(bad)
   14001d214:	sub    DWORD PTR [rbx-0x3f],0xea5606b4
   14001d21b:	sub    ch,BYTE PTR [rbx-0x33]
   14001d21e:	fcom   DWORD PTR [rax-0x1a]
   14001d221:	out    0x65,eax
   14001d223:	sbb    BYTE PTR [rdi-0x2e],ch
   14001d226:	(bad)  
   14001d227:	es sbb al,ah
   14001d22a:	sub    BYTE PTR [rbx-0x39694c6f],bh
   14001d230:	(bad)  
   14001d231:	xor    al,0xa6
   14001d233:	(bad)
   14001d236:	pop    rbx
   14001d237:	mov    BYTE PTR [rcx+0x6],dl
   14001d23a:	imul   ecx,DWORD PTR fs:[rcx-0x7e0bb982],0x7ca80dca
   14001d245:	lea    ebp,[rdi+0xd]
   14001d248:	lods   eax,DWORD PTR ds:[rsi]
   14001d249:	xor    al,0xa
   14001d24b:	std    
   14001d24c:	int    0x3
   14001d24e:	(bad)  
   14001d24f:	jb     0x14001d1f4
   14001d251:	push   rcx
   14001d252:	cmp    DWORD PTR [rsi],edx
   14001d254:	mov    edx,0x74dd36d8
   14001d259:	movabs al,ds:0x941b5210d833218a
   14001d262:	rex.RB test r15d,0xd94c014a
   14001d269:	fiadd  DWORD PTR [rcx-0x7f65fabd]
   14001d26f:	or     DWORD PTR [rsi],esp
   14001d271:	and    DWORD PTR [rcx],esp
   14001d273:	jnp    0x14001d2c0
   14001d275:	xor    ebp,esi
   14001d277:	cli    
   14001d278:	out    0x81,eax
   14001d27a:	movabs al,ds:0xa0fbd5025317cb24
   14001d283:	or     ch,BYTE PTR [rsi-0x74920e97]
   14001d289:	lods   eax,DWORD PTR ds:[rsi]
   14001d28a:	es cmp al,0xfd
   14001d28d:	div    bh
   14001d28f:	lock scas al,BYTE PTR es:[rdi]
   14001d291:	imul   DWORD PTR [rdx-0x6698c510]
   14001d297:	popf   
   14001d298:	sahf   
   14001d299:	mov    al,0xb7
   14001d29b:	mov    ebx,0x98e4eccb
   14001d2a0:	std    
   14001d2a1:	mov    ebp,0xbedeee3d
   14001d2a6:	vpand  ymm6,ymm4,YMMWORD PTR [rdi+0x39cc5d39]
   14001d2ae:	cmp    eax,0x2e58b199
   14001d2b3:	pop    rcx
   14001d2b4:	cs xchg edi,eax
   14001d2b6:	or     dl,ch
   14001d2b8:	mov    dh,0x69
   14001d2ba:	mov    esp,0x785b597
   14001d2bf:	rcl    BYTE PTR [rbp+0x15],1
   14001d2c2:	or     BYTE PTR [rax-0x11],bh
   14001d2c5:	mov    ebx,ecx
   14001d2c7:	and    eax,0xf470d34d
   14001d2cc:	loopne 0x14001d2cf
   14001d2ce:	(bad)  
   14001d2cf:	scas   eax,DWORD PTR es:[rdi]
   14001d2d0:	pop    rbp
   14001d2d1:	movabs ds:0xe198d1c33c109ef5,eax
   14001d2da:	jo     0x14001d2a4
   14001d2dc:	push   0x708a2634
   14001d2e1:	in     eax,0xb1
   14001d2e3:	xbegin 0x1bdf21287
   14001d2e9:	jl     0x14001d2d9
   14001d2eb:	(bad)  
   14001d2ec:	mov    esi,0xf7bbedc0
   14001d2f1:	cwde   
   14001d2f2:	int    0x66
   14001d2f4:	pop    rax
   14001d2f5:	leave  
   14001d2f6:	outs   dx,BYTE PTR ds:[rsi]
   14001d2f7:	mov    dh,0xa2
   14001d2f9:	in     al,dx
   14001d2fa:	cmp    ch,BYTE PTR [rbx]
   14001d2fc:	sahf   
   14001d2fd:	sub    esi,eax
   14001d2ff:	stos   BYTE PTR es:[rdi],al
   14001d300:	sbb    BYTE PTR [rbx],cl
   14001d302:	mov    ebp,DWORD PTR [rdi]
   14001d304:	adc    al,0xd1
   14001d306:	mov    WORD PTR [rbp+0x5c7b20b0],?
   14001d30c:	pop    rbp
   14001d30d:	mov    WORD PTR [rdi+0x614c4b67],gs
   14001d313:	cld    
   14001d314:	rex.WRXB
   14001d315:	(bad)
   14001d319:	(bad)  
   14001d31a:	fldenv [rdi+rsi*8+0x1484143d]
   14001d321:	(bad)  
   14001d322:	mov    ch,0x84
   14001d324:	xchg   ebp,eax
   14001d325:	gs rex.WRB
   14001d327:	add    edx,DWORD PTR es:[rsi+0xba1fd0b]
   14001d32e:	pop    rbp
   14001d32f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d330:	js     0x14001d2e7
   14001d332:	mov    ebp,0x94ec46f4
   14001d337:	test   DWORD PTR [rip+0x5757234a],ebp        # 0x19758f687
   14001d33d:	xchg   edx,eax
   14001d33e:	and    DWORD PTR [rsp+riz*4+0x40cc2401],ecx
   14001d345:	jbe    0x14001d325
   14001d347:	sub    cl,bh
   14001d349:	in     al,dx
   14001d34a:	outs   dx,DWORD PTR ds:[rsi]
   14001d34b:	outs   dx,DWORD PTR ds:[rsi]
   14001d34c:	mov    al,BYTE PTR [rdx]
   14001d34e:	adc    BYTE PTR [rcx-0x22d07a08],dl
   14001d354:	cli    
   14001d355:	stos   DWORD PTR es:[rdi],eax
   14001d356:	(bad)  
   14001d357:	cli    
   14001d358:	movsxd edi,DWORD PTR [rdi]
   14001d35a:	std    
   14001d35b:	rcl    DWORD PTR [rbx-0x4b781507],0x5f
   14001d362:	mov    esp,0x54c449c1
   14001d367:	(bad)  
   14001d368:	mov    cl,0x16
   14001d36a:	sub    dl,dl
   14001d36c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d36d:	rex.WR jrcxz 0x14001d336
   14001d370:	push   rdx
   14001d371:	rex.WR fcom QWORD PTR [rcx]
   14001d374:	(bad)  
   14001d375:	sub    dh,BYTE PTR [rbx]
   14001d377:	push   rax
   14001d378:	mov    dh,0xde
   14001d37a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d37b:	xchg   BYTE PTR [rbx-0x3a],cl
   14001d37e:	ins    BYTE PTR es:[rdi],dx
   14001d37f:	imul   ecx,DWORD PTR [rsi+rdx*8-0x46938b54],0x63
   14001d387:	ret    0xfae4
   14001d38a:	sti    
   14001d38b:	mov    BYTE PTR [rdx],al
   14001d38d:	retf   
   14001d38e:	in     eax,dx
   14001d38f:	pop    rbx
   14001d390:	sub    r8d,esp
   14001d393:	add    DWORD PTR [rdx+0x5b395748],edi
   14001d399:	movups xmm2,XMMWORD PTR [rbx+0x4f]
   14001d39d:	rex.X add DWORD PTR [rdi+0x4354efa7],edx
   14001d3a4:	(bad)  
   14001d3a5:	(bad)  
   14001d3a6:	(bad)  
   14001d3a7:	movabs ds:0xa2b09a7ad54745c1,al
   14001d3b0:	or     DWORD PTR [rip+0xffffffff9330643e],ebp        # 0xd33237f4
   14001d3b6:	add    ebx,ebx
   14001d3b8:	adc    ah,BYTE PTR [rcx+rax*2+0x1b]
   14001d3bc:	and    ecx,esi
   14001d3be:	or     eax,0x549e5674
   14001d3c3:	mov    ah,0x71
   14001d3c5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d3c6:	adc    al,0xe3
   14001d3c8:	mov    cl,0x55
   14001d3ca:	loope  0x14001d3e0
   14001d3cc:	int    0x3b
   14001d3ce:	hlt    
   14001d3cf:	cmp    eax,0x4e88c01
   14001d3d4:	movabs ds:0x612673c3a49492b4,al
   14001d3dd:	in     al,0xc1
   14001d3df:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d3e0:	test   DWORD PTR [rdi+rdx*1+0x14abad88],edx
   14001d3e7:	ss mov ah,0xea
   14001d3ea:	sbb    DWORD PTR [rdi+rbx*1],edx
   14001d3ed:	or     DWORD PTR [rax+0x2a025981],ecx
   14001d3f3:	xchg   ecx,eax
   14001d3f4:	call   0x1914650b9
   14001d3f9:	jge    0x14001d44b
   14001d3fb:	es or  ah,ch
   14001d3fe:	xchg   ecx,eax
   14001d3ff:	(bad)  
   14001d401:	loopne 0x14001d466
   14001d403:	fs jno 0x14001d440
   14001d406:	out    0xe0,eax
   14001d408:	lock add DWORD PTR [rbp-0x15],ecx
   14001d40c:	cmc    
   14001d40d:	mov    bl,0x46
   14001d40f:	jo     0x14001d3a6
   14001d411:	movsxd edi,DWORD PTR [rdx+rbx*1]
   14001d414:	jae    0x14001d40f
   14001d416:	test   eax,0xb9edbccb
   14001d41b:	mul    DWORD PTR [rcx-0x53]
   14001d41e:	movabs eax,ds:0xfcca7a7164421576
   14001d427:	hlt    
   14001d428:	test   bl,dl
   14001d42a:	(bad)  [rcx+rdi*8-0x262c6b04]
   14001d431:	mov    ecx,ds
   14001d433:	in     al,dx
   14001d434:	test   bl,ah
   14001d436:	jrcxz  0x14001d49b
   14001d438:	mov    cs,WORD PTR [rdi+0x7ac4758f]
   14001d43e:	shl    DWORD PTR [rdx+0xc],cl
   14001d441:	xor    al,0x4d
   14001d443:	rex.WXB or BYTE PTR [r10-0x2eb64ef9],cl
   14001d44a:	push   rbp
   14001d44b:	push   rbp
   14001d44c:	(bad)  
   14001d44f:	push   rsi
   14001d450:	scas   eax,DWORD PTR es:[rdi]
   14001d451:	retf   
   14001d452:	cmp    DWORD PTR [rsi+0x3ad601c3],eax
   14001d458:	cs pop rbp
   14001d45a:	jle    0x14001d3e0
   14001d45c:	leave  
   14001d45d:	rex.R cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d45f:	(bad)  
   14001d460:	sbb    esp,DWORD PTR [rbx+0x53]
   14001d463:	sti    
   14001d464:	lods   al,BYTE PTR ds:[rsi]
   14001d465:	xchg   edx,eax
   14001d466:	jle    0x14001d452
   14001d468:	(bad)  
   14001d469:	stos   BYTE PTR es:[rdi],al
   14001d46a:	lea    ecx,[rip+0x64d705a9]        # 0x1a4d8da19
   14001d470:	xchg   ebx,eax
   14001d471:	pushf  
   14001d472:	sub    cl,BYTE PTR [rax]
   14001d474:	and    DWORD PTR [rip+0xffffffffadd2dacf],eax        # 0xedd4af49
   14001d47a:	or     bl,bh
   14001d47c:	rex.WR cmc 
   14001d47e:	adc    eax,0x42952ca4
   14001d483:	rol    DWORD PTR [rip+0xffffffffc045a59d],cl        # 0x100477a26
   14001d489:	add    WORD PTR [rdi+0x2ca07b3c],dx
   14001d490:	adc    eax,0xf5d37615
   14001d495:	(bad)  
   14001d496:	in     al,0x28
   14001d498:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d499:	sbb    BYTE PTR [rsi+0x3e5758fc],cl
   14001d49f:	cdq    
   14001d4a0:	or     esi,DWORD PTR [rax]
   14001d4a2:	out    0x98,al
   14001d4a4:	fsubrp st(4),st
   14001d4a6:	cmp    al,0xad
   14001d4a8:	je     0x14001d476
   14001d4aa:	shr    BYTE PTR [rcx],0x6c
   14001d4ad:	movabs ds:0x98b128a08e7294a7,eax
   14001d4b6:	xchg   ebp,eax
   14001d4b7:	cwde   
   14001d4b8:	sbb    DWORD PTR [rax],0xde8e4496
   14001d4be:	push   rax
   14001d4bf:	and    DWORD PTR [rbp-0x25],ecx
   14001d4c2:	fwait
   14001d4c3:	movabs ds:0x7f4ec7eefbde0000,al
   14001d4cc:	loope  0x14001d4bd
   14001d4ce:	jge    0x14001d4b6
   14001d4d0:	(bad)  
   14001d4d1:	std    
   14001d4d2:	(bad)  
   14001d4d3:	rex.WRXB std 
   14001d4d5:	ret    0x8d3b
   14001d4d8:	loope  0x14001d45d
   14001d4da:	jne    0x14001d488
   14001d4dc:	add    cl,BYTE PTR [rsi+0x6a]
   14001d4e0:	pop    rsp
   14001d4e1:	gs or  esi,ecx
   14001d4e4:	loopne 0x14001d4af
   14001d4e6:	loopne 0x14001d4c4
   14001d4e8:	(bad)  
   14001d4e9:	out    0x9b,al
   14001d4eb:	pop    rdx
   14001d4ec:	push   rsp
   14001d4ed:	jne    0x14001d481
   14001d4ef:	rex.WX (bad) 
   14001d4f1:	add    al,0x74
   14001d4f3:	sub    edx,DWORD PTR [rip+0xffffffff92231442]        # 0xd224e93b
   14001d4f9:	je     0x14001d4fe
   14001d4fb:	lods   al,BYTE PTR ds:[rsi]
   14001d4fc:	pop    rdx
   14001d4fd:	sbb    al,BYTE PTR [rdi]
   14001d4ff:	cmc    
   14001d500:	js     0x14001d54a
   14001d502:	pop    rsp
   14001d503:	pop    rbp
   14001d504:	rex.X pop rsi
   14001d506:	mov    ecx,DWORD PTR [rax-0x10283377]
   14001d50c:	nop
   14001d50d:	pop    rbx
   14001d50e:	xchg   ebp,eax
   14001d50f:	and    ebp,DWORD PTR [rcx+0x3858884b]
   14001d515:	or     DWORD PTR [rsp+rsi*4],eax
   14001d518:	rex.WB
   14001d519:	es mov cl,0xdd
   14001d51c:	rex.R
   14001d51d:	fwait
   14001d51e:	sub    al,0x27
   14001d520:	xor    DWORD PTR [rip+0xffffffffe2b86922],esi        # 0x122ba3e48
   14001d526:	(bad)  
   14001d527:	movabs eax,ds:0xd5bef032a836810a
   14001d530:	std    
   14001d531:	sbb    eax,0x24b0f834
   14001d536:	(bad)  
   14001d537:	rex.W push rbp
   14001d539:	pop    gs
   14001d53b:	lea    r13,[rcx+0x46]
   14001d53f:	lods   al,BYTE PTR ds:[rsi]
   14001d540:	loop   0x14001d58c
   14001d542:	lahf   
   14001d543:	test   DWORD PTR [rcx],0x28a8be5c
   14001d549:	rcl    BYTE PTR [rax],cl
   14001d54b:	xor    BYTE PTR [rbp+0x1a],dh
   14001d54e:	cmc    
   14001d54f:	in     al,0x35
   14001d551:	sub    al,0x28
   14001d553:	rex.WB
   14001d554:	rex.WRX
   14001d555:	rex test eax,0x7d8712cc
   14001d55b:	in     al,dx
   14001d55c:	lods   al,BYTE PTR ds:[rsi]
   14001d55d:	mov    edi,0xedc9087a
   14001d562:	mov    bh,0x86
   14001d564:	cwde   
   14001d565:	(bad)  
   14001d566:	pop    rax
   14001d567:	push   rsi
   14001d568:	and    ah,BYTE PTR [rdx+0x61]
   14001d56b:	(bad)  
   14001d56c:	rex.WRXB adc r10,QWORD PTR [r9]
   14001d56f:	push   0xffffffffa4318ab2
   14001d574:	mov    esp,0xebccce44
   14001d579:	sub    eax,0x54488013
   14001d57e:	(bad)  
   14001d57f:	mov    bh,0xb2
   14001d581:	sbb    dl,BYTE PTR [rdx+0x6cb031b5]
   14001d587:	push   rsi
   14001d588:	pushf  
   14001d589:	int3   
   14001d58a:	rex.WRXB (bad) 
   14001d58d:	(bad)  
   14001d58e:	loopne 0x14001d565
   14001d590:	fwait
   14001d591:	scas   eax,DWORD PTR es:[rdi]
   14001d592:	sub    edi,ebx
   14001d594:	scas   eax,DWORD PTR es:[rdi]
   14001d595:	jae    0x14001d56b
   14001d597:	push   rbp
   14001d598:	rex.RB in eax,0x1c
   14001d59b:	ret    
   14001d59c:	mov    edx,0x331e3262
   14001d5a1:	pop    rsi
   14001d5a2:	(bad)  [rdx+0x6b]
   14001d5a5:	repz add dl,BYTE PTR [rdi]
   14001d5a8:	pushf  
   14001d5a9:	mov    ?,WORD PTR [rsi]
   14001d5ab:	jae    0x14001d57b
   14001d5ad:	xor    ch,BYTE PTR [rax+0x3a3c0a9c]
   14001d5b3:	mov    eax,0xa53f3e65
   14001d5b8:	imul   ebx,edx,0xc7a1aa44
   14001d5be:	out    dx,al
   14001d5bf:	rex.XB rcr BYTE PTR [r8+0x47],0xdb
   14001d5c4:	sub    cl,BYTE PTR [rbx+0x6d3de354]
   14001d5ca:	stos   DWORD PTR es:[rdi],eax
   14001d5cb:	mov    edi,0xfa7d7ffb
   14001d5d0:	repz sub al,0x57
   14001d5d3:	retf   
   14001d5d4:	cmp    DWORD PTR cs:[rax+0x18446790],ecx
   14001d5db:	shl    BYTE PTR [rdi-0x76],0xf8
   14001d5df:	hlt    
   14001d5e0:	jp     0x14001d601
   14001d5e2:	xchg   ebp,eax
   14001d5e3:	xchg   edi,eax
   14001d5e4:	lods   eax,DWORD PTR ds:[rsi]
   14001d5e5:	data16 cs mov bh,0x42
   14001d5e9:	scas   al,BYTE PTR es:[rdi]
   14001d5ea:	add    BYTE PTR [rsi+rbx*4],ah
   14001d5ed:	mov    ebp,0x45881392
   14001d5f2:	mov    al,0xcb
   14001d5f4:	mov    ah,0x1e
   14001d5f6:	cmc    
   14001d5f7:	mov    bl,0x55
   14001d5f9:	lahf   
   14001d5fa:	xchg   esp,eax
   14001d5fb:	(bad)  
   14001d5fd:	gs mov ebx,0x6bd239f4
   14001d603:	sbb    BYTE PTR [ebp-0x35],bh
   14001d607:	xchg   ebp,eax
   14001d608:	sub    eax,0x4430d3ef
   14001d60d:	out    0xf,eax
   14001d60f:	adc    al,0x32
   14001d611:	push   rdi
   14001d612:	cmp    ah,BYTE PTR [rip+0xffffffffc50a69a1]        # 0x1050c3fb9
   14001d618:	(bad)  
   14001d619:	test   BYTE PTR [rdx-0x7b5b6813],dl
   14001d61f:	jb     0x14001d5df
   14001d621:	push   rdx
   14001d622:	rex.WXB pushf 
   14001d624:	and    DWORD PTR [rbx],edx
   14001d626:	(bad)  [rax+0x2e]
   14001d629:	rex.XB
   14001d62a:	rex.R ficomp WORD PTR [rcx+rbx*2]
   14001d62e:	jge    0x14001d603
   14001d630:	adc    al,0x0
   14001d632:	shl    bh,0xfe
   14001d635:	(bad)  
   14001d636:	fbstp  TBYTE PTR [rcx-0x5]
   14001d639:	(bad)  
   14001d63a:	call   QWORD PTR [rdi-0x1]
   14001d63d:	call   0x13fb1d281
   14001d642:	fidivr DWORD PTR [rdi]
   14001d644:	(bad)  
   14001d645:	cdq    
   14001d646:	test   eax,0x2b2a6793
   14001d64b:	or     BYTE PTR [rdx+0x43a56c28],bh
   14001d651:	sub    al,0x7d
   14001d653:	add    al,0x8f
   14001d655:	push   rdi
   14001d656:	mov    ah,0x1c
   14001d658:	nop
   14001d659:	std    
   14001d65a:	add    cl,dl
   14001d65c:	in     eax,0x91
   14001d65e:	fidiv  WORD PTR [rbx+0x69]
   14001d661:	retf   
   14001d662:	xor    eax,0x36881f56
   14001d667:	shr    BYTE PTR [rdx+riz*1],cl
   14001d66a:	(bad)  
   14001d66b:	xchg   esp,eax
   14001d66c:	jb     0x14001d608
   14001d66e:	data16 fwait
   14001d670:	jo     0x14001d671
   14001d672:	sub    esp,edi
   14001d674:	(bad)  
   14001d675:	adc    DWORD PTR [rbx],ebp
   14001d677:	cmp    DWORD PTR [rsi-0x5c],ecx
   14001d67a:	and    DWORD PTR [rdx+0x59],ebx
   14001d67d:	mov    BYTE PTR [rcx-0x70],al
   14001d680:	nop
   14001d681:	retf   0xc968
   14001d684:	(bad)  
   14001d685:	push   0x46e76c17
   14001d68a:	(bad)  
   14001d68b:	(bad)  
   14001d68c:	add    ecx,edx
   14001d68e:	mov    ebp,DWORD PTR [rcx+0xd]
   14001d691:	mov    BYTE PTR [rdx+0x383a918b],0x34
   14001d698:	sub    al,dh
   14001d69a:	sbb    bl,BYTE PTR [rdx]
   14001d69c:	cwde   
   14001d69d:	adc    eax,0x1b68ae31
   14001d6a2:	rex.WRXB jo 0x14001d6c3
   14001d6a5:	out    0x6a,eax
   14001d6a7:	sub    ch,BYTE PTR [rcx-0x590f9d50]
   14001d6ad:	push   rbp
   14001d6ae:	fisubr DWORD PTR [rdi]
   14001d6b0:	rex.RB or al,0x21
   14001d6b3:	(bad)  
   14001d6b4:	int    0x60
   14001d6b6:	movabs ds:0x4d119e04a65847e1,eax
   14001d6bf:	(bad)  
   14001d6c0:	xchg   ebp,eax
   14001d6c1:	lods   al,BYTE PTR ds:[rsi]
   14001d6c2:	scas   eax,DWORD PTR es:[rdi]
   14001d6c3:	mov    QWORD PTR [r9+0x4c959898],rbp
   14001d6ca:	retf   0xb7ce
   14001d6cd:	push   0xfffffffffffffff9
   14001d6cf:	(bad)  
   14001d6d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d6d1:	cwde   
   14001d6d2:	and    eax,0x4d041729
   14001d6d7:	mov    al,0x5a
   14001d6d9:	in     eax,0xf3
   14001d6db:	imul   ebx,edx,0x56
   14001d6de:	sub    ecx,DWORD PTR [rbx]
   14001d6e0:	(bad)  
   14001d6e1:	sub    ah,cl
   14001d6e3:	mov    DWORD PTR [rcx-0x7],eax
   14001d6e6:	(bad)  
   14001d6e7:	rcr    BYTE PTR [rcx-0x74],cl
   14001d6ea:	movabs ds:0xd9019c74711a099c,al
   14001d6f3:	add    bh,BYTE PTR [rdx]
   14001d6f5:	jmp    0x14001d6cb
   14001d6f7:	adc    ah,bh
   14001d6f9:	stc    
   14001d6fa:	hlt    
   14001d6fb:	rex
   14001d6fc:	fwait
   14001d6fd:	ret    0xd386
   14001d700:	rcl    DWORD PTR [rbx-0xa],cl
   14001d703:	(bad)  
   14001d704:	sbb    al,0x69
   14001d706:	and    bh,BYTE PTR ds:[rcx-0x46]
   14001d70a:	(bad)  
   14001d70b:	xchg   esp,eax
   14001d70c:	mov    ah,0x48
   14001d70e:	sahf   
   14001d70f:	hlt    
   14001d710:	pop    rbx
   14001d711:	xchg   BYTE PTR [rbp+0x4a5ace08],cl
   14001d717:	mov    dh,0x3c
   14001d719:	in     eax,dx
   14001d71a:	or     DWORD PTR [rdi-0x5],0xea3aec42
   14001d721:	xor    dl,bl
   14001d723:	rex.WRXB xchg r10b,r14b
   14001d726:	not    BYTE PTR [rdi-0x7f]
   14001d729:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d72a:	(bad)  
   14001d72b:	jle    0x14001d6c0
   14001d72d:	movabs eax,ds:0xc871094b172a4200
   14001d736:	jns    0x14001d6dc
   14001d738:	sahf   
   14001d739:	shr    DWORD PTR [rax],0x72
   14001d73c:	fistp  QWORD PTR [rbx+0x5c]
   14001d73f:	(bad)  
   14001d740:	jo     0x14001d70b
   14001d742:	out    dx,eax
   14001d743:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d744:	and    al,0xe3
   14001d746:	rex.WR
   14001d747:	rex.WRX int3 
   14001d749:	in     eax,0x72
   14001d74b:	(bad)  
   14001d74c:	mov    bh,ch
   14001d74e:	or     esp,DWORD PTR [rsi]
   14001d750:	(bad)  
   14001d751:	add    si,dx
   14001d754:	push   rbp
   14001d755:	imul   edx,edx,0x840874f1
   14001d75b:	lods   al,BYTE PTR ds:[rsi]
   14001d75c:	adc    al,0xf4
   14001d75e:	rex.WRB add rax,0x1125bf2
   14001d764:	mov    cl,0xe0
   14001d766:	ds and bh,ch
   14001d769:	rex.RX push rdx
   14001d76b:	ds sub ecx,esi
   14001d76e:	push   rdi
   14001d76f:	mov    edx,0xa43ef214
   14001d774:	jge    0x14001d78a
   14001d776:	movabs ds:0x2aa6f6c66f6b7d,eax
   14001d77f:	cmp    BYTE PTR [rdi],0xfa
   14001d782:	movsxd edi,DWORD PTR [rdi-0xb006819]
   14001d788:	lahf   
   14001d789:	sti    
   14001d78a:	in     al,0x9f
   14001d78c:	cli    
   14001d78d:	cdq    
   14001d78e:	lahf   
   14001d78f:	sti    
   14001d790:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d791:	push   QWORD PTR [rsi+0x73]
   14001d794:	imul   ebp,DWORD PTR [rbp-0x2d],0x2
   14001d798:	in     eax,dx
   14001d799:	push   rdx
   14001d79a:	pop    rbp
   14001d79b:	jp     0x14001d7f0
   14001d79d:	pop    rcx
   14001d79e:	ins    BYTE PTR es:[rdi],dx
   14001d79f:	push   rbp
   14001d7a0:	and    DWORD PTR [rax],ecx
   14001d7a2:	ins    DWORD PTR es:[rdi],dx
   14001d7a3:	(bad)  
   14001d7a4:	test   eax,0x93bc19bd
   14001d7a9:	fwait
   14001d7aa:	sub    al,0x8
   14001d7ac:	mov    cl,0x4b
   14001d7ae:	(bad)  
   14001d7af:	out    0x78,al
   14001d7b1:	rex.WRXB
   14001d7b2:	rex.WR (bad) 
   14001d7b4:	lods   al,BYTE PTR ds:[rsi]
   14001d7b5:	or     BYTE PTR [rcx],al
   14001d7b7:	(bad)  
   14001d7b8:	stos   BYTE PTR es:[rdi],al
   14001d7b9:	add    al,0xc
   14001d7bb:	(bad)  
   14001d7bc:	pop    rbx
   14001d7bd:	push   gs
   14001d7bf:	rex.WRXB mov r14b,0x19
   14001d7c2:	sbb    al,0x5c
   14001d7c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d7c5:	cmp    eax,0x8f442337
   14001d7ca:	or     al,0x92
   14001d7cc:	jmp    0x14001d785
   14001d7ce:	hlt    
   14001d7cf:	jmp    0x19f36288f
   14001d7d4:	ss (bad) 
   14001d7d6:	std    
   14001d7d7:	clc    
   14001d7d8:	rex.WR xor al,0x19
   14001d7db:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d7dc:	(bad)  
   14001d7dd:	(bad)  
   14001d7de:	mov    ecx,0xc56a92ef
   14001d7e3:	xor    al,al
   14001d7e5:	adc    DWORD PTR [rcx],ecx
   14001d7e7:	shl    ebx,1
   14001d7e9:	or     DWORD PTR [rsi+rdi*4+0x5e0587c6],esi
   14001d7f0:	push   rsi
   14001d7f1:	clc    
   14001d7f2:	mov    eax,0xe306c420
   14001d7f7:	(bad)  
   14001d7f8:	push   rsp
   14001d7f9:	scas   al,BYTE PTR es:[rdi]
   14001d7fa:	ret    0x2432
   14001d7fd:	xor    al,0x11
   14001d7ff:	out    dx,eax
   14001d800:	fwait
   14001d801:	(bad)  
   14001d802:	lods   eax,DWORD PTR ds:[rsi]
   14001d803:	test   al,0x35
   14001d805:	jle    0x14001d829
   14001d807:	clc    
   14001d808:	xchg   ebp,eax
   14001d809:	(bad)  
   14001d80a:	push   rdx
   14001d80b:	rex.XB adc DWORD PTR [r9-0x77],edx
   14001d80f:	push   rax
   14001d810:	or     al,0x68
   14001d812:	(bad)
   14001d817:	adc    eax,0x101aa502
   14001d81c:	or     BYTE PTR [rsi],ah
   14001d81e:	pop    rcx
   14001d81f:	xor    al,0x9b
   14001d821:	mov    WORD PTR [rsi-0x6c94a777],cs
   14001d827:	adc    DWORD PTR [rbx-0x23061f7c],esi
   14001d82d:	scas   eax,DWORD PTR es:[rdi]
   14001d82e:	jg     0x14001d7ba
   14001d830:	mov    ebp,0x791e5ddd
   14001d835:	in     al,dx
   14001d836:	mov    cl,BYTE PTR [rsi-0xd]
   14001d839:	sbb    DWORD PTR [rsi],ecx
   14001d83b:	test   eax,0x5ad621ea
   14001d840:	rex.WR xor BYTE PTR [rsi+rdx*2-0x78],r10b
   14001d845:	adc    eax,0x4e83e080
   14001d84a:	jns    0x14001d81e
   14001d84c:	xor    BYTE PTR [rdi+rdx*1+0x5c],al
   14001d850:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d851:	adc    al,0x28
   14001d853:	cs mov dh,0x2e
   14001d856:	outs   dx,BYTE PTR ds:[rsi]
   14001d857:	rcr    BYTE PTR [rsi+0x3b],1
   14001d85a:	enter  0xc75d,0x94
   14001d85e:	mov    bh,0x45
   14001d860:	ins    DWORD PTR es:[rdi],dx
   14001d861:	sub    eax,0x96efa206
   14001d866:	stos   BYTE PTR es:[rdi],al
   14001d867:	(bad)  
   14001d868:	mov    dh,0xe7
   14001d86a:	(bad)  
   14001d86b:	lahf   
   14001d86c:	fld    QWORD PTR [rsp+rcx*2+0x21]
   14001d870:	cmp    ecx,ebp
   14001d872:	rex.WRXB icebp 
   14001d874:	xchg   ebp,eax
   14001d875:	(bad)  
   14001d876:	jg     0x14001d80e
   14001d878:	xor    edi,esp
   14001d87a:	xor    DWORD PTR [rdx+0x36],ebp
   14001d87d:	ds pop rbp
   14001d87f:	sbb    al,0x15
   14001d881:	xor    bl,dl
   14001d883:	(bad)  
   14001d884:	(bad)  
   14001d885:	retf   0xce57
   14001d888:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d889:	fs pop rdx
   14001d88b:	xchg   edi,eax
   14001d88c:	cli    
   14001d88d:	retf   
   14001d88e:	out    dx,al
   14001d88f:	mov    edx,0xfea9e494
   14001d894:	rex.X (bad) 
   14001d896:	std    
   14001d897:	xchg   esp,eax
   14001d898:	cld    
   14001d899:	rex.WXB pop r10
   14001d89b:	movabs ds:0xa4802f1915566c08,al
   14001d8a4:	pop    rsp
   14001d8a5:	rex.X call 0x198b661e7
   14001d8ab:	jb     0x14001d8d8
   14001d8ad:	jnp    0x14001d87d
   14001d8af:	add    eax,0xe7568df4
   14001d8b4:	rex.B je 0x14001d87e
   14001d8b7:	fwait
   14001d8b8:	sub    edx,DWORD PTR [rip+0xffffffffb0a01299]        # 0xf0a1eb57
   14001d8be:	sub    al,0xd1
   14001d8c0:	repz out 0xc8,al
   14001d8c3:	cdq    
   14001d8c4:	xchg   BYTE PTR [rsi-0x37],cl
   14001d8c7:	(bad)
   14001d8ca:	icebp  
   14001d8cb:	rex.WRB fcomp st(6)
   14001d8ce:	je     0x14001d8d5
   14001d8d0:	add    al,dh
   14001d8d2:	push   rbx
   14001d8d3:	jg     0x14001d8c7
   14001d8d5:	mov    ebx,0xfdf7d6ff
   14001d8da:	rcr    BYTE PTR [rdi+0x79],1
   14001d8dd:	loop   0x14001d864
   14001d8df:	xchg   edi,eax
   14001d8e0:	out    dx,eax
   14001d8e1:	cld    
   14001d8e2:	jns    0x14001d947
   14001d8e4:	rex.R
   14001d8e5:	rex.R pop rdx
   14001d8e7:	(bad)  
   14001d8e8:	(bad)  
   14001d8e9:	(bad)  
   14001d8ea:	outs   dx,DWORD PTR ds:[rsi]
   14001d8eb:	jrcxz  0x14001d8f9
   14001d8ed:	sbb    BYTE PTR [rbx+0x2d121225],cl
   14001d8f3:	push   rdi
   14001d8f4:	lahf   
   14001d8f5:	rex.WR push rsi
   14001d8f7:	(bad)  
   14001d8f8:	cmp    ah,ch
   14001d8fa:	xchg   ebx,eax
   14001d8fb:	movabs ds:0x40288832b320a627,al
   14001d904:	push   0xffffffffebcaed03
   14001d909:	rex.R pop rsp
   14001d90b:	(bad)  
   14001d90c:	movabs eax,ds:0x5ab68779b5473e3a
   14001d915:	(bad)  
   14001d916:	jl     0x14001d8dc
   14001d918:	mov    db6,rcx
   14001d91b:	ror    DWORD PTR [rax+0x18cb52b1],1
   14001d921:	xchg   edi,eax
   14001d922:	sub    BYTE PTR [rcx+0x68],bl
   14001d925:	pop    rdx
   14001d926:	pop    rsp
   14001d927:	add    BYTE PTR [rcx+rax*8-0x1c],al
   14001d92b:	(bad)  
   14001d92c:	(bad)  
   14001d92d:	shr    DWORD PTR [rip+0xffffffffe6a26892],cl        # 0x126a441c5
   14001d933:	adc    eax,0x8744c7a2
   14001d938:	add    eax,0xa108eb2a
   14001d93d:	mov    BYTE PTR [rdi-0x4ba9a96a],0x34
   14001d944:	(bad)  
   14001d945:	cmp    al,0x8a
   14001d947:	jg     0x14001d9b9
   14001d949:	pop    rax
   14001d94a:	jrcxz  0x14001d9bc
   14001d94c:	mov    cl,0x22
   14001d94e:	shr    BYTE PTR [rax+0xe],1
   14001d951:	movabs eax,ds:0xa4a2ef8d079dd56d
   14001d95a:	cwde   
   14001d95b:	xor    eax,DWORD PTR [rax]
   14001d95d:	push   rsi
   14001d95e:	sbb    ebx,DWORD PTR [rcx+0x1719fd52]
   14001d964:	shl    DWORD PTR [rbx+riz*8],cl
   14001d967:	fcomp  DWORD PTR [rcx+0x55]
   14001d96a:	fwait
   14001d96b:	adc    edx,0x14
   14001d96e:	rex.WRXB or r9b,r10b
   14001d971:	cmp    al,0x14
   14001d973:	or     eax,0x272eed7b
   14001d978:	jle    0x14001d940
   14001d97a:	mov    ebp,0x9dfc7b9d
   14001d97f:	lahf   
   14001d980:	stc    
   14001d981:	imul   edi,DWORD PTR [rdi+rsi*8-0x7e874064],0xb02ee7f3
   14001d98c:	mov    cl,0xb5
   14001d98e:	leave  
   14001d98f:	fcmovu st,st(2)
   14001d991:	xchg   esp,eax
   14001d992:	in     eax,dx
   14001d993:	jae    0x14001d9ac
   14001d995:	cmp    BYTE PTR [rdi-0x17],bh
   14001d998:	adc    dl,bl
   14001d99a:	lea    ecx,[rbp-0x7e]
   14001d99d:	(bad)  
   14001d99e:	(bad)  
   14001d99f:	add    DWORD PTR [rcx],0xffffff93
   14001d9a2:	icebp  
   14001d9a3:	mov    ch,dl
   14001d9a5:	push   0x5
   14001d9a7:	sub    eax,ecx
   14001d9a9:	(bad)  
   14001d9aa:	(bad)  
   14001d9ab:	add    al,0x6d
   14001d9ad:	cmp    ecx,edi
   14001d9af:	retf   0x2fb0
   14001d9b2:	call   0x1974c5e14
   14001d9b7:	sub    ebp,DWORD PTR [rdi]
   14001d9b9:	(bad)  
   14001d9bb:	repz fdiv DWORD PTR [rbp+rsi*2-0x9]
   14001d9c0:	rex.WX pop rdi
   14001d9c2:	jge    0x14001d995
   14001d9c4:	(bad)  
   14001d9c5:	pop    rsp
   14001d9c6:	pop    rsi
   14001d9c7:	cmp    edi,DWORD PTR [rbx+0x4007c749]
   14001d9cd:	(bad)  
   14001d9ce:	jno    0x14001d9da
   14001d9d0:	sub    QWORD PTR [r10+riz*1-0x17ee6538],rax
   14001d9d8:	rex.WRX push rbp
   14001d9da:	xor    esp,0xaf06a48a
   14001d9e0:	pop    rsi
   14001d9e1:	cmp    al,0x9f
   14001d9e3:	mul    BYTE PTR [rdi]
   14001d9e5:	iret   
   14001d9e6:	or     DWORD PTR [rdx+rbx*2-0x5e],ecx
   14001d9ea:	mov    bh,0x5f
   14001d9ec:	rex.B adc eax,0xd488484a
   14001d9f2:	adc    al,0x5a
   14001d9f4:	or     bl,BYTE PTR [rcx+0x63bba9d]
   14001d9fa:	adc    esp,DWORD PTR [rbx+0x2074db5e]
   14001da00:	fst    DWORD PTR [rbx+0x48]
   14001da03:	sub    BYTE PTR [rcx-0x18],ah
   14001da06:	mov    edi,0x5c862b37
   14001da0b:	ret    0xa58f
   14001da0e:	lock shr DWORD PTR [rip+0xffffffffd220a4b7],cl        # 0x112227ecc
   14001da15:	jmp    0x155947b44
   14001da1a:	or     eax,0x9b950b5b
   14001da1f:	test   BYTE PTR [rip+0x800ebe1],al        # 0x14802c606
   14001da25:	hlt    
   14001da26:	iret   
   14001da27:	(bad)  
   14001da29:	clc    
   14001da2a:	jg     0x14001da28
   14001da2c:	jnp    0x14001da2d
   14001da2e:	loop   0x14001d9bf
   14001da30:	inc    esp
   14001da32:	iret   
   14001da33:	pop    rbp
   14001da34:	fnstcw WORD PTR [rdi+0x70]
   14001da37:	xacquire xchg DWORD PTR [rbp+0x22],esp
   14001da3b:	test   DWORD PTR [rcx+rax*8],edi
   14001da3e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001da3f:	rex.B movabs ds:0xf3e02db4f011506e,eax
   14001da49:	rcl    BYTE PTR [rcx+0x75],0x7
   14001da4d:	rex.WR
   14001da4e:	rex.WR add r10b,BYTE PTR [rax+0xf50664f]
   14001da55:	and    DWORD PTR [rsi-0x2bed4e47],esp
   14001da5b:	push   0xffffffffffffffb4
   14001da5d:	(bad)  
   14001da5e:	int3   
   14001da5f:	retf   0xeb62
   14001da62:	and    esi,ebp
   14001da64:	loopne 0x14001daa2
   14001da66:	sub    ecx,0x63
   14001da69:	jo     0x14001da69
   14001da6b:	shl    DWORD PTR ss:[rip+0xffffffffd4848988],0xa2        # 0x1148663fb
   14001da73:	sbb    DWORD PTR [rdi-0x61de63ff],eax
   14001da79:	rex.X pop rsp
   14001da7b:	rex.RX
   14001da7c:	rex.RB in al,0x5
   14001da7f:	push   rcx
   14001da80:	out    dx,eax
   14001da81:	rex.XB or al,0xd1
   14001da84:	and    al,0xe1
   14001da86:	or     al,0x92
   14001da88:	or     BYTE PTR [rdx-0x677678af],0xde
   14001da8f:	ret    0x9134
   14001da92:	loopne 0x14001dae5
   14001da94:	je     0x14001daf3
   14001da96:	lods   al,BYTE PTR ds:[rsi]
   14001da97:	jno    0x14001da4a
   14001da99:	push   rsi
   14001da9a:	push   0x71
   14001da9c:	shr    eax,cl
   14001da9e:	(bad)  
   14001da9f:	pop    rdi
   14001daa0:	cmp    al,0xb1
   14001daa2:	(bad)  
   14001daa3:	mov    bl,al
   14001daa5:	xchg   DWORD PTR [rbp+rdx*1-0x470ad5ca],r14d
   14001daad:	(bad)  
   14001daae:	and    al,0xda
   14001dab0:	mov    ebp,0x62ffea50
   14001dab5:	movabs ds:0x2d31342c0ba10f32,eax
   14001dabe:	(bad)  
   14001dabf:	shl    DWORD PTR [rcx+riz*2+0x242a906d],1
   14001dac6:	rex.WRX add r13b,BYTE PTR [rbx+0x4b66deab]
   14001dacd:	sbb    DWORD PTR [rax],edi
   14001dacf:	mov    bh,al
   14001dad1:	sbb    al,0xcb
   14001dad3:	mov    WORD PTR [rdi+0x79dbfc7f],cs
   14001dad9:	cld    
   14001dada:	retf   0xfce3
   14001dadd:	(bad)  
   14001dade:	addr32 (bad) 
   14001dae0:	retf   
   14001dae1:	(bad)  
   14001dae2:	mov    edi,0xf4be79f0
   14001dae7:	(bad)
   14001daea:	ins    DWORD PTR es:[rdi],dx
   14001daeb:	sbb    cl,BYTE PTR [rcx+rsi*1-0x39ec3974]
   14001daf2:	jrcxz  0x14001db25
   14001daf4:	add    ecx,0x0
   14001daf7:	movsxd ebp,DWORD PTR [rdi+riz*8]
   14001dafa:	cs pushf 
   14001dafc:	out    0xc2,eax
   14001dafe:	in     eax,0x47
   14001db00:	xor    eax,0xb09e3f23
   14001db05:	mov    ecx,0xeb11e7d
   14001db0a:	out    0x2a,eax
   14001db0c:	(bad)  
   14001db0d:	mov    edx,0xa3268826
   14001db12:	mov    dl,0x12
   14001db14:	sub    BYTE PTR [rdx+rax*8-0x5b],cl
   14001db18:	(bad)  
   14001db19:	setge  BYTE PTR [rax-0x6d]
   14001db1d:	(bad)  
   14001db1e:	(bad)
   14001db21:	sahf   
   14001db22:	ins    BYTE PTR es:[rdi],dx
   14001db23:	jo     0x14001db37
   14001db25:	add    al,0xd5
   14001db27:	pop    rbx
   14001db28:	(bad)
   14001db2b:	cmp    ecx,edi
   14001db2d:	mov    ebp,?
   14001db2f:	sub    dl,BYTE PTR [rdx-0x2c]
   14001db32:	pop    rcx
   14001db33:	rcr    BYTE PTR [rax-0x77d60796],1
   14001db39:	out    dx,al
   14001db3a:	push   rbx
   14001db3b:	jne    0x14001dbb2
   14001db3d:	(bad)  
   14001db3e:	lahf   
   14001db3f:	add    eax,0xa9438528
   14001db44:	mov    dl,0x23
   14001db46:	je     0x14001dbb6
   14001db48:	jge    0x14001db18
   14001db4a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001db4b:	(bad)  
   14001db4c:	mov    BYTE PTR [rdx-0x4e],dl
   14001db4f:	cmc    
   14001db50:	adc    al,0x44
   14001db52:	fidiv  WORD PTR [rdi-0x6d]
   14001db55:	lods   al,BYTE PTR ds:[rsi]
   14001db56:	ins    DWORD PTR es:[rdi],dx
   14001db57:	(bad)  
   14001db58:	rex.RB push r12
   14001db5a:	rex.WRXB in al,0x52
   14001db5d:	ins    DWORD PTR es:[rdi],dx
   14001db5e:	out    0xe2,eax
   14001db60:	stos   DWORD PTR es:[rdi],eax
   14001db61:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001db62:	adc    DWORD PTR [rdx],ecx
   14001db64:	or     dl,BYTE PTR [rdx-0x631436c]
   14001db6a:	mov    DWORD PTR [rsp+rbp*1-0x7f60b4ac],ebx
   14001db71:	rex.RB
   14001db72:	gs (bad) 
   14001db74:	cmp    esp,ecx
   14001db76:	(bad)  
   14001db77:	adc    esi,DWORD PTR [rax-0x6d93b1b8]
   14001db7d:	sub    al,0x9f
   14001db7f:	jmp    0x1440a6f52
   14001db84:	(bad)  
   14001db85:	mov    dh,0x76
   14001db87:	stos   DWORD PTR es:[rdi],eax
   14001db88:	fbstp  TBYTE PTR [rdx-0x24f28230]
   14001db8e:	outs   dx,DWORD PTR ds:[rsi]
   14001db8f:	fwait
   14001db90:	add    bh,al
   14001db92:	rol    BYTE PTR [rdi],1
   14001db94:	sahf   
   14001db95:	or     bh,bh
   14001db97:	call   0x167f29abb
   14001db9c:	(bad)  
   14001db9d:	clc    
   14001db9e:	rex.WRXB (bad) 
   14001dba0:	fdivr  QWORD PTR [rcx+0x7f2e9e5]
   14001dba6:	(bad)  
   14001dba7:	lea    ecx,[rbx+0x27]
   14001dbaa:	(bad)  
   14001dbab:	push   rbp
   14001dbac:	add    al,0x76
   14001dbae:	sbb    BYTE PTR [rcx-0x1b],ah
   14001dbb1:	push   0xffffffffa7212997
   14001dbb6:	sub    BYTE PTR [rax-0x1b6e59ae],bl
   14001dbbc:	not    BYTE PTR [rcx-0x6cb6284f]
   14001dbc2:	jmp    0x14001dbe0
   14001dbc4:	adc    BYTE PTR [rbx+0x6c],al
   14001dbc7:	add    dl,dh
   14001dbc9:	sbb    DWORD PTR [rdx+0x57],ebp
   14001dbcc:	push   rbx
   14001dbcd:	lahf   
   14001dbce:	pushf  
   14001dbcf:	ret    
   14001dbd0:	pop    rdi
   14001dbd1:	(bad)  
   14001dbd2:	enter  0x88e9,0xe6
   14001dbd6:	rcr    BYTE PTR [rip+0x2f18f8c2],cl        # 0x16f1ad49e
   14001dbdc:	sub    eax,DWORD PTR [rdx+0x545c115b]
   14001dbe2:	data16 fisttp WORD PTR [rdx-0x78]
   14001dbe6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001dbe7:	(bad)  
   14001dbe8:	pop    rcx
   14001dbe9:	mov    DWORD PTR [rdx+0x220a56f3],esp
   14001dbef:	adc    ah,BYTE PTR [rdx+0xb8adb26]
   14001dbf5:	xchg   esi,eax
   14001dbf6:	xchg   BYTE PTR [rax+0x79],al
   14001dbf9:	adc    BYTE PTR [rcx+0x44],dh
   14001dbfc:	or     DWORD PTR [rbp+0x60ad1c9e],esp
   14001dc02:	rex.WR (bad) 
   14001dc04:	xchg   rbp,rax
   14001dc06:	(bad)  
   14001dc07:	int3   
   14001dc08:	xor    eax,0x4f8b2621
   14001dc0d:	jbe    0x14001dc32
   14001dc0f:	or     eax,0x52a10b38
   14001dc14:	and    edi,esi
   14001dc16:	cdq    
   14001dc17:	comiss xmm2,DWORD PTR [rax]
   14001dc1a:	mov    WORD PTR [rsi],gs
   14001dc1c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001dc1d:	and    BYTE PTR [rdx+0x68348786],dl
   14001dc24:	jns    0x14001dbfa
   14001dc26:	out    0x58,al
   14001dc28:	xor    ah,BYTE PTR [rdi]
   14001dc2a:	rex.RB rcr r12d,1
   14001dc2d:	rex push rax
   14001dc2f:	or     DWORD PTR cs:[r14],eax
   14001dc33:	adc    ebp,DWORD PTR [rip+0x7ab58412]        # 0x1bab7604b
   14001dc39:	popf   
   14001dc3a:	retf   0xa80e
   14001dc3d:	jmp    0x14001dc50
   14001dc3f:	out    dx,eax
   14001dc40:	js     0x14001dc30
   14001dc42:	jge    0x14001dc00
   14001dc44:	in     eax,dx
   14001dc45:	sbb    eax,0xbfbbf1cf
   14001dc4a:	jrcxz  0x14001dc87
   14001dc4c:	jns    0x14001dc3b
   14001dc4e:	mov    ch,0xab
   14001dc50:	mov    esp,0x5c0bfcf4
   14001dc55:	jge    0x14001dc3c
   14001dc57:	gs out dx,al
   14001dc59:	fidivr WORD PTR [rsi-0x1cc9933b]
   14001dc5f:	jo     0x14001dce0
   14001dc61:	lahf   
   14001dc62:	sub    BYTE PTR [rax-0x11],dh
   14001dc65:	out    dx,al
   14001dc66:	ins    DWORD PTR es:[rdi],dx
   14001dc67:	fdivr  st(3),st
   14001dc69:	pop    rdi
   14001dc6a:	sar    BYTE PTR [rsi],cl
   14001dc6c:	adc    DWORD PTR [rcx+rbp*4-0x5378f3e1],0xffffffad
   14001dc74:	scas   eax,DWORD PTR es:[rdi]
   14001dc75:	mov    bl,0xb9
   14001dc77:	mov    ch,0xcd
   14001dc79:	out    0xf6,al
   14001dc7b:	jns    0x14001dca3
   14001dc7d:	imul   edx,DWORD PTR [rbx],0xffffffc6
   14001dc80:	xchg   ebx,eax
   14001dc81:	jne    0x14001dca9
   14001dc83:	ror    DWORD PTR [rip+0xffffffffaaa0354c],cl        # 0xeaa211d5
   14001dc89:	(bad)  
   14001dc8a:	push   rsp
   14001dc8b:	ret    
   14001dc8c:	and    DWORD PTR [rbp-0x1a],ecx
   14001dc8f:	adc    DWORD PTR [rax+0xb],ecx
   14001dc92:	mov    ebx,0x8bce094c
   14001dc97:	mov    esp,0xfc1411e7
   14001dc9c:	rex.X fistp QWORD PTR [rcx]
   14001dc9f:	iret   
   14001dca0:	push   rsi
   14001dca1:	mov    ah,0x2b
   14001dca3:	shl    bh,cl
   14001dca5:	out    dx,al
   14001dca6:	not    DWORD PTR [rbp-0x2c2176b6]
   14001dcac:	(bad)  
   14001dcad:	(bad)  
   14001dcae:	call   QWORD PTR [rcx]
   14001dcb0:	cmp    DWORD PTR [rdi+0x53],edi
   14001dcb3:	int3   
   14001dcb4:	sub    cl,bl
   14001dcb6:	cmp    esp,DWORD PTR [rcx-0x74c5fcac]
   14001dcbc:	lahf   
   14001dcbd:	in     al,0xab
   14001dcbf:	scas   eax,DWORD PTR es:[rdi]
   14001dcc0:	sub    al,0x4a
   14001dcc2:	mov    dl,0x4e
   14001dcc4:	mov    edx,0x6b5a50bc
   14001dcc9:	add    eax,0x1e4bd408
   14001dcce:	stos   BYTE PTR es:[rdi],al
   14001dccf:	mov    al,0xf6
   14001dcd1:	retf   0xa576
   14001dcd4:	hlt    
   14001dcd5:	xlat   BYTE PTR ds:[rbx]
   14001dcd6:	cmp    ebp,DWORD PTR [rsi]
   14001dcd8:	cmp    cl,BYTE PTR [rdi]
   14001dcda:	movabs al,ds:0x59c03ca5b1f35aa0
   14001dce3:	fs (bad) 
   14001dce5:	ds push rbx
   14001dce7:	movabs eax,ds:0x149a081f5262cfbc
   14001dcf0:	jle    0x14001dc85
   14001dcf2:	movabs ds:0x7e7bf0000536df80,al
   14001dcfb:	xlat   BYTE PTR ds:[rbx]
   14001dcfc:	mov    ebx,0xff93e4e
   14001dd01:	notrack jmp QWORD PTR [rbx+0x3f]
   14001dd05:	icebp  
   14001dd06:	xchg   ebx,eax
   14001dd07:	(bad)  
   14001dd08:	mov    edi,0x7c5d3cb6
   14001dd0d:	mov    bh,0x8c
   14001dd0f:	(bad)  
   14001dd10:	enter  0x2f4a,0x88
   14001dd14:	add    DWORD PTR [rdx+rsi*4-0x3762d548],esp
   14001dd1b:	push   rbp
   14001dd1c:	stos   DWORD PTR es:[rdi],eax
   14001dd1d:	movsxd edi,DWORD PTR [rax+0x562ba8bd]
   14001dd23:	rex.X add dl,spl
   14001dd26:	and    ah,BYTE PTR [rbx]
   14001dd28:	and    eax,0xcc11d370
   14001dd2d:	sbb    DWORD PTR [rax],0x31e96684
   14001dd33:	(bad)  
   14001dd34:	xor    BYTE PTR [rdx],bl
   14001dd36:	mov    WORD PTR [rcx],?
   14001dd38:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001dd39:	xchg   edi,eax
   14001dd3a:	pop    rcx
   14001dd3b:	fstp   QWORD PTR [rax]
   14001dd3d:	movsxd esp,DWORD PTR [rdi-0x15]
   14001dd40:	mov    ah,0xe7
   14001dd42:	ja     0x14001ddad
   14001dd44:	mov    bh,0xee
   14001dd46:	ror    DWORD PTR [rsi-0x6b117772],cl
   14001dd4c:	stos   BYTE PTR es:[rdi],al
   14001dd4d:	or     al,BYTE PTR [rdx+rcx*2-0x18ef4a10]
   14001dd54:	add    cl,BYTE PTR [rbx+0x43]
   14001dd57:	xor    BYTE PTR [rdx-0x7529d754],al
   14001dd5d:	int3   
   14001dd5e:	adc    al,0x63
   14001dd60:	cmp    ebp,DWORD PTR [rbx]
   14001dd62:	test   al,0xcd
   14001dd64:	and    eax,0x3a849896
   14001dd69:	fcmovbe st,st(4)
   14001dd6b:	shr    DWORD PTR [rax-0x6e],1
   14001dd6e:	imul   ebx,DWORD PTR [rsi],0x2d
   14001dd71:	or     BYTE PTR es:[rsi-0xc],al
   14001dd75:	loop   0x14001dd7c
   14001dd77:	shl    DWORD PTR [rdx],cl
   14001dd79:	(bad)  
   14001dd7a:	int    0x45
   14001dd7c:	mov    ah,0x46
   14001dd7e:	mov    ecx,0x9182d301
   14001dd83:	cwde   
   14001dd84:	call   0x147c78a58
   14001dd89:	rex.WRXB imul r15,QWORD PTR [rip+0x5827a31],0x4c        # 0x1458457c2
   14001dd91:	sahf   
   14001dd92:	cmp    al,0x67
   14001dd94:	je     0x14001dda6
   14001dd96:	rex.WB mov r8b,0x58
   14001dd99:	push   rbx
   14001dd9a:	and    esp,DWORD PTR [rsi]
   14001dd9c:	(bad)  
   14001dd9d:	jl     0x14001dd24
   14001dd9f:	mov    ch,al
   14001dda1:	cwde   
   14001dda2:	sbb    ah,bl
   14001dda4:	hlt    
   14001dda5:	mov    bh,0x26
   14001dda7:	cmc    
   14001dda8:	push   rsp
   14001dda9:	test   DWORD PTR [rdi],ebp
   14001ddab:	(bad)  
   14001ddac:	mov    esp,0x647d696f
   14001ddb1:	cmp    BYTE PTR [rcx-0x4184230e],bl
   14001ddb7:	mov    DWORD PTR [rdi-0x41],esi
   14001ddba:	out    0xfd,eax
   14001ddbc:	int3   
   14001ddbd:	addr32 (bad) 
   14001ddbf:	fdivr  QWORD PTR [rdi+0x576b8f7f]
   14001ddc5:	pop    rdi
   14001ddc6:	in     eax,0xb5
   14001ddc8:	imul   edx,DWORD PTR [rdi-0x47],0x77
   14001ddcc:	out    dx,eax
   14001ddcd:	ss rex.RXB jle 0xe03a1a0d
   14001ddd5:	popf   
   14001ddd6:	(bad)  
   14001ddd7:	rex.WX cmp rax,0x7058b97f
   14001dddd:	jb     0x14001ddd3
   14001dddf:	cmp    BYTE PTR [rbx],0xaf
   14001dde2:	fild   QWORD PTR [rdi*2-0x15f9de0a]
   14001dde9:	mov    edx,0x8b85dce6
   14001ddee:	rex.WR cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14001ddf0:	push   rbx
   14001ddf1:	es imul ebp,ebx,0xffffff8c
   14001ddf5:	(bad)  
   14001ddf6:	adc    edx,esi
   14001ddf8:	(bad)  
   14001ddf9:	mov    bh,0xd8
   14001ddfb:	mov    esi,0x16310970
   14001de00:	push   rdi
   14001de01:	nop    DWORD PTR [rsi+0x426e7ac7]
   14001de08:	shl    dl,1
   14001de0a:	mov    ?,WORD PTR [ebx+0x63]
   14001de0e:	in     al,dx
   14001de0f:	rex.WX xchg rdx,rax
   14001de11:	pop    rcx
   14001de12:	rex.W
   14001de13:	rex.WR iretq 
   14001de15:	repnz add ecx,DWORD PTR [rcx+0x22]
   14001de19:	mov    edi,0x6420652c
   14001de1e:	loope  0x14001ddc2
   14001de20:	movabs al,ds:0xf7364c28fd4262e1
   14001de29:	adc    esp,DWORD PTR [rdi+rdx*4]
   14001de2c:	ds (bad) 
   14001de2e:	sub    DWORD PTR [rdx],edi
   14001de30:	mov    bh,0x3f
   14001de32:	(bad)  
   14001de33:	movabs al,ds:0xc48c07928f098c4f
   14001de3c:	in     al,dx
   14001de3d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001de3e:	rex.W pop rcx
   14001de40:	pop    rdi
   14001de41:	rex.RB sbb al,0x7b
   14001de44:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001de45:	fcmovnb st,st(2)
   14001de47:	(bad)  
   14001de48:	push   rsp
   14001de49:	adc    al,0x7a
   14001de4b:	iret   
   14001de4c:	jae    0x14001de17
   14001de4e:	repnz popf 
   14001de50:	imul   BYTE PTR [rdi]
   14001de52:	rex.X (bad) 
   14001de54:	mov    dl,0xa4
   14001de56:	movsxd ebp,ecx
   14001de58:	xchg   DWORD PTR [rdi],edi
   14001de5a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001de5b:	sbb    ebx,DWORD PTR [rsi-0x2b6ffa5]
   14001de61:	(bad)  
   14001de62:	imul   rax,rax,0x6820ade2
   14001de69:	rex.WR
   14001de6a:	rex.X push rcx
   14001de6c:	outs   dx,BYTE PTR ds:[rsi]
   14001de6d:	outs   dx,DWORD PTR ds:[rsi]
   14001de6e:	hlt    
   14001de6f:	neg    bl
   14001de71:	stos   BYTE PTR es:[rdi],al
   14001de72:	add    BYTE PTR [rax],al
   14001de74:	mov    esi,0xc37ef7fb
   14001de79:	fisubr WORD PTR [rdi]
   14001de7b:	cld    
   14001de7c:	loop   0x14001dee5
   14001de7e:	jg     0x14001de74
   14001de80:	rex.WRXB (bad) 
   14001de82:	cdq    
   14001de83:	lahf   
   14001de84:	(bad)  
   14001de85:	xchg   DWORD PTR [rax],edx
   14001de87:	mov    esi,0x5489347d
   14001de8c:	xor    edx,edx
   14001de8e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001de8f:	test   al,0xc7
   14001de91:	push   rsi
   14001de92:	(bad)  
   14001de93:	(bad)  
   14001de94:	(bad)  
   14001de95:	movsxd eax,DWORD PTR [rsi+rsi*2+0x6828de09]
   14001de9c:	sub    BYTE PTR [rsi-0x61],al
   14001de9f:	push   rbx
   14001dea0:	and    eax,DWORD PTR [rbp-0x24f444e7]
   14001dea6:	rex.XB retf 0x18cf
   14001deaa:	jl     0x14001de97
   14001deac:	pop    rcx
   14001dead:	sahf   
   14001deae:	(bad)  
   14001deaf:	rex.X jmp 0x14001deca
   14001deb2:	mov    WORD PTR [rdx+0x2c],gs
   14001deb5:	fwait
   14001deb6:	push   rsp
   14001deb7:	xchg   DWORD PTR [rip+0xffffffffe694c5cb],edx        # 0x12696a488
   14001debd:	push   0xee17b13
   14001dec2:	mov    dl,0x7d
   14001dec4:	xchg   edi,eax
   14001dec5:	(bad)  
   14001dec6:	popf   
   14001dec7:	(bad)  
   14001dec8:	mov    WORD PTR [rdx-0x1],?
   14001decb:	sti    
   14001decc:	rex.WX or BYTE PTR [rbx-0x656004ec],cl
   14001ded3:	push   rsp
   14001ded4:	xchg   ecx,eax
   14001ded5:	rcl    BYTE PTR [rip+0x1952539a],1        # 0x159543275
   14001dedb:	rcl    BYTE PTR [rdi],0x5a
   14001dede:	scas   eax,DWORD PTR es:[rdi]
   14001dedf:	sbb    al,0xa3
   14001dee2:	(bad)  
   14001dee3:	rex.X xchg DWORD PTR [rcx],ebx
   14001dee6:	and    eax,0xb3d45557
   14001deeb:	adc    BYTE PTR [rbx+0x5a5d363],ch
   14001def1:	adc    ebp,DWORD PTR [rbx-0x3ade804c]
   14001def7:	xchg   esp,eax
   14001def8:	test   eax,0x6ea70ec5
   14001defd:	stos   BYTE PTR es:[rdi],al
   14001defe:	add    ebp,DWORD PTR [rcx-0x32d5e4fc]
   14001df04:	shl    BYTE PTR [rdi+0x1a6c81de],0x62
   14001df0b:	mov    BYTE PTR [rdx],ch
   14001df0d:	in     al,dx
   14001df0e:	rex.XB mov ebx,DWORD PTR [rip+0xffffffffc68dfd39]        # 0x1068fdc4e
   14001df15:	movabs ds:0x6195b018e05d0595,al
   14001df1e:	in     eax,0x9b
   14001df20:	(bad)  
   14001df21:	jle    0x14001dec6
   14001df23:	ret    0x4461
   14001df26:	push   0xffffffffaae5969a
   14001df2b:	shl    eax,0x78
   14001df2e:	in     al,0xca
   14001df30:	rcr    DWORD PTR [rcx+rdi*2-0x1e],cl
   14001df34:	sbb    DWORD PTR [rsi-0x74d29c07],edi
   14001df3a:	fst    DWORD PTR [rcx]
   14001df3c:	(bad)  
   14001df3d:	rex.RXB (bad) 
   14001df40:	jne    0x14001df35
   14001df42:	(bad)  
   14001df43:	div    DWORD PTR [rdi-0x11]
   14001df46:	jae    0x14001df43
   14001df48:	cmc    
   14001df49:	pop    rbx
   14001df4a:	in     al,dx
   14001df4b:	out    dx,al
   14001df4c:	out    dx,eax
   14001df4d:	mov    dl,0xbf
   14001df4f:	mov    ebx,0x41e1d1cf
   14001df54:	rex.B std 
   14001df56:	adc    eax,0xfec23088
   14001df5b:	out    dx,al
   14001df5c:	cs sti 
   14001df5e:	mov    ebx,0xa8628bf7
   14001df63:	sub    al,bh
   14001df65:	jo     0x14001df9f
   14001df67:	(bad)  
   14001df68:	cmp    BYTE PTR [rcx+rsi*4],bl
   14001df6b:	mov    dh,0xbe
   14001df6d:	(bad)  
   14001df6e:	(bad)  
   14001df6f:	cmp    BYTE PTR [rdx+0x6d],ah
   14001df72:	cmp    ah,BYTE PTR [rbp+0x6d]
   14001df75:	cmp    ah,BYTE PTR [rbp+0x7d]
   14001df78:	movsxd ecx,DWORD PTR [rbx-0x39e91917]
   14001df7e:	es test DWORD PTR ds:[rdx+0x40],edi
   14001df83:	xchg   esp,eax
   14001df84:	rex.R movabs ds:0xc637c1951087fe95,eax
   14001df8e:	push   rsp
   14001df8f:	mov    bh,0x8b
   14001df91:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001df92:	jle    0x14001df42
   14001df94:	ficom  WORD PTR [rbx+0xa]
   14001df97:	xchg   ebx,eax
   14001df98:	adc    ch,BYTE PTR [rcx-0x36858559]
   14001df9e:	xchg   DWORD PTR [rax],ebp
   14001dfa0:	(bad)  
   14001dfa1:	rex.X (bad) 
   14001dfa3:	or     dl,BYTE PTR [rsi+riz*1-0x30766d52]
   14001dfaa:	loope  0x14001dff4
   14001dfac:	jmp    0x179276d74
   14001dfb1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001dfb2:	(bad)  
   14001dfb3:	xlat   BYTE PTR ds:[rbx]
   14001dfb4:	out    dx,eax
   14001dfb5:	cmp    ecx,DWORD PTR ds:[rsi-0x42e099d2]
   14001dfbc:	and    al,0xff
   14001dfbe:	(bad)  
   14001dfbf:	clc    
   14001dfc0:	sbb    al,0x89
   14001dfc2:	cdq    
   14001dfc3:	rex.WX
   14001dfc4:	rex.X (bad) 
   14001dfc6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001dfc7:	and    al,0xb5
   14001dfc9:	jne    0x14001e032
   14001dfcb:	mov    bh,BYTE PTR [rbx-0xdafd234]
   14001dfd1:	push   rsi
   14001dfd2:	leave  
   14001dfd3:	rcr    DWORD PTR [rax*2+0x3aeb32a6],1
   14001dfdb:	and    BYTE PTR [rbp+0x13f74b39],cl
   14001dfe1:	movsxd eax,DWORD PTR [rdi-0x21]
   14001dfe4:	xchg   esi,eax
   14001dfe5:	xchg   cl,al
   14001dfe7:	rex.W cld 
   14001dfe9:	jb     0x14001dfc8
   14001dfeb:	clc    
   14001dfec:	xchg   BYTE PTR [rdi+rdi*4-0x13],ch
   14001dff0:	or     al,BYTE PTR [rax]
   14001dff2:	loopne 0x14001e06f
   14001dff4:	jg     0x14001dfd5
   14001dff6:	(bad)  
   14001dff7:	(bad)  
   14001dff9:	jmp    0x13fadd5bd
   14001dffe:	(bad)  
   14001dfff:	lahf   
   14001e000:	sti    
   14001e001:	iret   
   14001e002:	(bad)  
   14001e003:	stc    
   14001e004:	xlat   BYTE PTR ds:[rbx]
   14001e005:	movsxd ebx,DWORD PTR [rsp+rdi*2-0x15]
   14001e009:	lods   eax,DWORD PTR fs:[rsi]
   14001e00b:	out    0xee,eax
   14001e00d:	add    eax,0x296dad87
   14001e012:	adc    ebx,DWORD PTR [rdx-0x2974bcab]
   14001e018:	fiadd  WORD PTR [rbx+0xc]
   14001e01b:	test   esi,esi
   14001e01d:	or     DWORD PTR [rdx+0x1982cc96],edx
   14001e023:	adc    dil,BYTE PTR [rdi+0x3f11f040]
   14001e02a:	outs   dx,DWORD PTR ds:[rsi]
   14001e02b:	lock and DWORD PTR [rdx+0xf],edx
   14001e02f:	or     al,0xb5
   14001e031:	rex.WR mov al,0xab
   14001e034:	mov    dl,ch
   14001e036:	loope  0x14001dfd0
   14001e038:	xor    ax,0x3ac2
   14001e03c:	(bad)  
   14001e03d:	jns    0x14001e02d
   14001e03f:	ss ins DWORD PTR es:[rdi],dx
   14001e041:	pop    rax
   14001e042:	sub    BYTE PTR [rax-0x3d],cl
   14001e045:	rex.RX
   14001e046:	adc    BYTE PTR fs:[rcx],ah
   14001e049:	pop    rdx
   14001e04a:	xor    BYTE PTR [rip+0xffffffffb5b10c2c],dl        # 0xf5b2ec7c
   14001e050:	hlt    
   14001e051:	jno    0x14001e036
   14001e053:	(bad)  
   14001e055:	mov    edx,0x1436e4ce
   14001e05a:	pop    QWORD PTR [rax+rdx*4-0x73eee200]
   14001e061:	xlat   BYTE PTR ds:[rbx]
   14001e062:	imul   eax,eax,0x93c216ce
   14001e068:	fsubr  DWORD PTR [rax+0x61a896f5]
   14001e06e:	sub    DWORD PTR [rbp-0x59ab5045],0x24
   14001e075:	xchg   ebx,eax
   14001e076:	lock (bad) 
   14001e078:	or     eax,0x9a745382
   14001e07d:	add    DWORD PTR [rcx+0x5a],esi
   14001e080:	push   rsi
   14001e081:	rex.XB add al,0x1a
   14001e084:	add    ebx,ebp
   14001e086:	xchg   ebp,eax
   14001e087:	rex.WX sub al,0xc5
   14001e08a:	scas   al,BYTE PTR es:[rdi]
   14001e08b:	(bad)  
   14001e08c:	push   0x2c
   14001e08e:	imul   ebp,DWORD PTR [rbp-0x52],0x1e
   14001e092:	or     BYTE PTR [rsi+0x22],dl
   14001e095:	ins    DWORD PTR es:[rdi],dx
   14001e096:	rol    eax,cl
   14001e098:	rex test DWORD PTR [rdi+0x16eae4b8],esp
   14001e09f:	rol    BYTE PTR [rdi+rcx*8],1
   14001e0a2:	push   0xffffffffffffffd6
   14001e0a4:	call   0x160d6a0c5
   14001e0a9:	xor    eax,0xaef36c98
   14001e0ae:	neg    DWORD PTR [rbp-0x1c]
   14001e0b1:	sbb    eax,DWORD PTR [rdi]
   14001e0b3:	(bad)  
   14001e0b4:	adc    ebp,ebp
   14001e0b6:	(bad)  
   14001e0b7:	sahf   
   14001e0b8:	lahf   
   14001e0b9:	sbb    al,0x73
   14001e0bb:	out    0xde,eax
   14001e0bd:	pop    rbp
   14001e0be:	jbe    0x14001e0ae
   14001e0c0:	fsubrp st(3),st
   14001e0c2:	cli    
   14001e0c3:	cmc    
   14001e0c4:	imul   ebx,DWORD PTR [rdi+rdi*4+0x76],0xffffff9d
   14001e0c9:	vshufps ymm14,ymm0,YMMWORD PTR [rdx-0x42],0xa0
   14001e0cf:	ins    DWORD PTR es:[rdi],dx
   14001e0d0:	pop    rbx
   14001e0d1:	rex.R adc al,0xed
   14001e0d4:	push   rdi
   14001e0d5:	(bad)  
   14001e0d6:	mov    ch,0x2e
   14001e0d8:	pop    rsp
   14001e0d9:	adc    DWORD PTR [rdx-0xf0f1e4a],ebx
   14001e0df:	adc    BYTE PTR [rbx-0x71],ah
   14001e0e2:	fcomp  st(7)
   14001e0e4:	fcmovnb st,st(5)
   14001e0e6:	push   rbp
   14001e0e7:	sbb    DWORD PTR [rcx],ebx
   14001e0e9:	push   0x54c68d18
   14001e0ee:	jne    0x14001e0bd
   14001e0f0:	je     0x14001e165
   14001e0f2:	xchg   ebx,eax
   14001e0f3:	leave  
   14001e0f4:	fs (bad) 
   14001e0f6:	shr    DWORD PTR [rax-0x34],0x68
   14001e0fa:	mov    dl,0xc6
   14001e0fc:	(bad)  
   14001e0fd:	xor    BYTE PTR [rdx+0x30],ah
   14001e100:	sbb    dl,BYTE PTR [rcx+0xd]
   14001e103:	rex.RXB (bad) 
   14001e105:	sbb    al,0x6d
   14001e107:	enter  0x708e,0xe7
   14001e10b:	cld    
   14001e10c:	out    0x3b,eax
   14001e10e:	es pop rbp
   14001e110:	jnp    0x14001e096
   14001e112:	xor    al,0x71
   14001e114:	cmp    edi,DWORD PTR [rcx-0x61749b2f]
   14001e11a:	ret    0x248c
   14001e11d:	xchg   ecx,eax
   14001e11e:	movabs eax,ds:0x207ac9fb7b9dd347
   14001e127:	xchg   DWORD PTR [rax],esp
   14001e129:	movabs al,ds:0x75773d7e5cf4b749
   14001e132:	sub    ebx,eax
   14001e134:	xchg   edi,eax
   14001e135:	add    bh,BYTE PTR [rcx-0x6ce788cc]
   14001e13b:	rex.B
   14001e13c:	rex.W (bad) 
   14001e13e:	ins    DWORD PTR es:[rdi],dx
   14001e13f:	push   rdx
   14001e140:	xor    dh,BYTE PTR [rdx+0x574cea94]
   14001e146:	pop    rdx
   14001e147:	int3   
   14001e148:	ror    DWORD PTR [rsi+0xba15f14],0x21
   14001e14f:	mov    ecx,gs
   14001e151:	xchg   edx,eax
   14001e152:	xchg   cl,ch
   14001e154:	clc    
   14001e155:	retf   0x996c
   14001e158:	jl     0x14001e116
   14001e15a:	cdq    
   14001e15b:	add    DWORD PTR [rcx+0x48],ecx
   14001e15e:	adc    al,dh
   14001e160:	mov    dh,0x95
   14001e162:	clc    
   14001e163:	(bad)  
   14001e164:	out    0x3,al
   14001e166:	clc    
   14001e167:	(bad)  
   14001e168:	fnstcw WORD PTR [rsi]
   14001e16a:	icebp  
   14001e16b:	add    ebx,DWORD PTR [rdi]
   14001e16d:	mov    ecx,0xfb7f33fa
   14001e172:	push   rdi
   14001e173:	(bad)  
   14001e174:	rcr    BYTE PTR [rdi-0x800c03],1
   14001e17a:	scas   eax,DWORD PTR es:[rdi]
   14001e17b:	sbb    ebx,DWORD PTR [rcx+0x7c]
   14001e17e:	jmp    0x14001e110
   14001e180:	sbb    cl,ch
   14001e182:	(bad)  
   14001e183:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e184:	xchg   ebx,eax
   14001e185:	imul   ebp,DWORD PTR [rbp+0x6153435a],0xffffff8c
   14001e18c:	movabs eax,ds:0xd15b343b1b625a69
   14001e195:	(bad)  
   14001e196:	pop    rbp
   14001e197:	mov    WORD PTR [rcx-0x146d9ded],gs
   14001e19d:	(bad)  
   14001e19e:	shr    BYTE PTR [rsi],1
   14001e1a0:	pop    rbx
   14001e1a1:	(bad)  
   14001e1a2:	adc    BYTE PTR [rdi+rsi*4-0x3cfe7cac],bl
   14001e1a9:	call   0x11c85053e
   14001e1ae:	icebp  
   14001e1af:	enter  0xd220,0x6e
   14001e1b3:	in     al,dx
   14001e1b4:	rcr    DWORD PTR [rax-0x2a149dad],1
   14001e1ba:	gs sbb eax,0xc01ea43a
   14001e1c0:	rcl    BYTE PTR [rdx],0xe7
   14001e1c3:	xchg   esi,eax
   14001e1c4:	rcr    BYTE PTR [rdx+0x22d79fc4],1
   14001e1ca:	and    al,0x6b
   14001e1cc:	rex.WXB stos QWORD PTR es:[rdi],rax
   14001e1ce:	int    0x3d
   14001e1d0:	rex.W
   14001e1d1:	rex.X sub al,BYTE PTR [rsi]
   14001e1d4:	xor    BYTE PTR [rsi],bh
   14001e1d6:	mov    ch,0x1
   14001e1d8:	or     edi,DWORD PTR [rax-0x7fb1866c]
   14001e1de:	and    ecx,DWORD PTR [rdx+rcx*8+0x3e]
   14001e1e2:	mov    eax,edx
   14001e1e4:	adc    ax,0x1410
   14001e1e8:	or     DWORD PTR [rsi],edi
   14001e1ea:	(bad)
   14001e1ee:	and    al,0x5f
   14001e1f0:	cli    
   14001e1f1:	retf   0x2bc5
   14001e1f4:	mov    cl,0x8
   14001e1f6:	rex.B
   14001e1f7:	rex.WX sub rsi,QWORD PTR [rcx+0x6c929d18]
   14001e1fe:	sub    ebx,DWORD PTR [rbp-0x70]
   14001e201:	(bad)  
   14001e202:	out    0x30,al
   14001e204:	rex.X push rax
   14001e206:	(bad)  
   14001e207:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e208:	rex.WB sbb al,0xf5
   14001e20b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e20c:	rcl    DWORD PTR [rdx+0x35b39e7a],0x85
   14001e213:	(bad)  
   14001e214:	xchg   ebx,eax
   14001e215:	or     al,0x21
   14001e217:	shl    BYTE PTR [rbx+rcx*2+0xd36564d],cl
   14001e21e:	lods   eax,DWORD PTR ds:[rsi]
   14001e21f:	push   rdi
   14001e220:	rcl    BYTE PTR [rax-0x57c8f14d],1
   14001e226:	cmp    bh,dh
   14001e228:	call   0xeefd1e60
   14001e22d:	outs   dx,DWORD PTR ds:[rsi]
   14001e22e:	in     al,0x77
   14001e230:	movntps XMMWORD PTR [rdx+0x67],xmm5
   14001e234:	cmp    DWORD PTR [rbp+0x6f73b09d],ebx
   14001e23a:	xchg   ebx,edi
   14001e23c:	div    DWORD PTR [rdi+0x38]
   14001e23f:	popf   
   14001e240:	popf   
   14001e241:	jo     0x14001e1f3
   14001e243:	jg     0x14001e205
   14001e245:	out    dx,al
   14001e246:	out    dx,al
   14001e247:	(bad)  
   14001e248:	(bad)  
   14001e249:	jnp    0x14001e246
   14001e24b:	mov    ah,0x6d
   14001e24d:	rex.XB shl DWORD PTR [r14],cl
   14001e250:	test   BYTE PTR [rax],dl
   14001e252:	xchg   esp,eax
   14001e253:	ror    ah,cl
   14001e255:	mov    BYTE PTR [rsi],dh
   14001e257:	jnp    0x14001e2b2
   14001e259:	cmc    
   14001e25a:	sahf   
   14001e25b:	rex.WRX
   14001e25c:	rex.WRXB
   14001e25d:	rex.WRXB xor r11,r9
   14001e260:	and    eax,0xa947c7c7
   14001e265:	jmp    0x14001e23a
   14001e267:	adc    al,0xec
   14001e269:	shr    BYTE PTR [rax+0x3c],0xc6
   14001e26d:	cmp    DWORD PTR [rdi+0x55],eax
   14001e270:	xlat   BYTE PTR ds:[rbx]
   14001e271:	cld    
   14001e272:	loopne 0x14001e283
   14001e274:	std    
   14001e275:	xor    BYTE PTR [rdi-0x11],dl
   14001e278:	push   rsp
   14001e279:	jl     0x14001e2a9
   14001e27b:	test   DWORD PTR [rdx+0x67],0x77531d1b
   14001e282:	pop    rdi
   14001e283:	(bad)  
   14001e284:	(bad)  
   14001e285:	nop
   14001e286:	jmp    0x14001e27e
   14001e288:	xchg   edx,eax
   14001e289:	and    ecx,DWORD PTR [rcx+0x362b5e54]
   14001e28f:	lahf   
   14001e290:	jle    0x14001e274
   14001e292:	cs (bad) 
   14001e294:	or     eax,0x42fa3aeb
   14001e299:	test   eax,0x8ab9746e
   14001e29e:	lods   al,BYTE PTR ds:[rsi]
   14001e29f:	call   0x105e5cfcd
   14001e2a4:	popf   
   14001e2a5:	(bad)  
   14001e2a6:	rex.WB pop r14
   14001e2a8:	cwde   
   14001e2a9:	sub    DWORD PTR [rdi-0x14e099e0],ebx
   14001e2af:	ins    BYTE PTR es:[rdi],dx
   14001e2b0:	push   0xffffffffb9bdf92f
   14001e2b5:	jns    0x14001e300
   14001e2b7:	sub    BYTE PTR [rdi+0x7b4d2a25],cl
   14001e2bd:	leave  
   14001e2be:	xor    esp,esp
   14001e2c0:	nop
   14001e2c1:	test   esi,ebp
   14001e2c3:	cwde   
   14001e2c4:	mov    dl,0x97
   14001e2c6:	nop
   14001e2c7:	mov    bh,0xd8
   14001e2c9:	ror    DWORD PTR [rcx-0x140e76b1],0xbb
   14001e2d0:	or     dh,al
   14001e2d2:	xchg   ebp,eax
   14001e2d3:	mov    dh,0x1f
   14001e2d5:	(bad)  
   14001e2d6:	(bad)  
   14001e2d7:	outs   dx,DWORD PTR ds:[rsi]
   14001e2d8:	mov    esi,0xf8bff3fa
   14001e2dd:	cdq    
   14001e2de:	(bad)  
   14001e2df:	cli    
   14001e2e0:	mov    DWORD PTR [rdi],edi
   14001e2e2:	repz or edi,DWORD PTR [rdi+0xd]
   14001e2e6:	or     edi,edi
   14001e2e8:	sbb    ah,bl
   14001e2ea:	nop
   14001e2eb:	pop    rsp
   14001e2ec:	(bad)  
   14001e2ed:	xchg   DWORD PTR [rcx+0x3872b602],ebp
   14001e2f3:	imul   edx,DWORD PTR [rcx-0x734c95f],0xffffffa5
   14001e2fa:	adc    bl,bl
   14001e2fc:	push   rsi
   14001e2fd:	mov    cl,0xfd
   14001e2ff:	sub    DWORD PTR [rsi+0x405b2e2c],esi
   14001e305:	jnp    0x14001e301
   14001e307:	jnp    0x14001e2dd
   14001e309:	(bad)  
   14001e30a:	and    DWORD PTR [rax+0x527ad5b6],ecx
   14001e310:	rex.XB
   14001e311:	rex.WR
   14001e312:	rex.RB ins DWORD PTR es:[rdi],dx
   14001e314:	xlat   BYTE PTR ds:[rbx]
   14001e315:	or     DWORD PTR [rdi+0x4],esi
   14001e318:	cdq    
   14001e319:	nop    DWORD PTR [rsp+rdi*1+0x20]
   14001e31e:	cmp    al,0x7e
   14001e320:	xchg   ebp,esp
   14001e322:	lock rex.B retf 0xb76
   14001e327:	adc    bl,BYTE PTR [rsi+rax*8]
   14001e32a:	or     eax,0x6f830389
   14001e32f:	movabs al,ds:0x52bc6da1aac2465d
   14001e338:	add    BYTE PTR [rdx],bl
   14001e33a:	sub    eax,0xc8d2190f
   14001e33f:	xor    DWORD PTR [rbx+0x6831a94d],esp
   14001e345:	rex.WB (bad) 
   14001e347:	test   BYTE PTR [rbx+rdi*8],al
   14001e34a:	ins    BYTE PTR es:[rdi],dx
   14001e34b:	adc    ah,BYTE PTR [rdx]
   14001e34d:	rex.WRXB cqo 
   14001e34f:	and    edx,DWORD PTR [rbp+0x27a9c424]
   14001e355:	adc    DWORD PTR [rdx],eax
   14001e357:	mov    BYTE PTR [rbp-0x49],dl
   14001e35a:	pop    rdx
   14001e35b:	stos   DWORD PTR es:[rdi],eax
   14001e35c:	or     eax,0x5c2484e9
   14001e361:	(bad)  
   14001e362:	jno    0x14001e384
   14001e364:	mov    BYTE PTR [rdx-0x6b],0x68
   14001e368:	shr    BYTE PTR [rbp-0x2723a8ab],cl
   14001e36e:	adc    al,0x13
   14001e370:	sbb    esp,DWORD PTR [rdx+rbx*8]
   14001e373:	adc    al,0x8f
   14001e375:	pop    rdx
   14001e376:	add    BYTE PTR [rdx+0x4fe21454],ah
   14001e37c:	lea    ebx,[rip+0xfffffffff2fd8cce]        # 0x132ff7050
   14001e382:	sbb    DWORD PTR [rsi-0x63],ebp
   14001e385:	outs   dx,BYTE PTR ds:[rsi]
   14001e386:	jns    0x14001e319
   14001e388:	sbb    edx,DWORD PTR [rbx+rsi*2-0x58c29660]
   14001e38f:	stos   DWORD PTR es:[rdi],eax
   14001e390:	cmp    ebp,ebp
   14001e392:	ins    BYTE PTR es:[rdi],dx
   14001e393:	(bad)  
   14001e394:	(bad)  
   14001e395:	fidivr WORD PTR [rsi]
   14001e397:	lea    ecx,[rdi]
   14001e399:	cmp    BYTE PTR [rbx+0x19],ch
   14001e39c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e39d:	push   rdx
   14001e39e:	loope  0x14001e418
   14001e3a0:	cmp    al,0xe2
   14001e3a2:	retf   0xefb3
   14001e3a5:	data16 jae 0x14001e425
   14001e3a8:	rex.X xchg BYTE PTR [rdi+0x1b],bpl
   14001e3ac:	movabs ds:0x53f3e663e3b3835d,eax
   14001e3b5:	rex.WRX
   14001e3b6:	rex.WRX mov ?,WORD PTR [rbp-0x2e]
   14001e3ba:	push   rcx
   14001e3bb:	mov    ebx,0xd258b562
   14001e3c0:	mov    ah,0x2d
   14001e3c2:	adc    BYTE PTR [rcx+0x22134ecd],bl
   14001e3c8:	push   rax
   14001e3c9:	or     dl,BYTE PTR [rsi+0x4d6d7d63]
   14001e3cf:	adc    eax,0x6e5d4258
   14001e3d4:	outs   dx,BYTE PTR ds:[rsi]
   14001e3d5:	outs   dx,BYTE PTR ds:[rsi]
   14001e3d6:	shr    ebp,0xdd
   14001e3d9:	(bad)  
   14001e3da:	std    
   14001e3db:	mov    bl,0x20
   14001e3dd:	fs pop rbp
   14001e3df:	movabs al,ds:0xc5e5452f597ec4c9
   14001e3e8:	retf   0x276
   14001e3eb:	lods   eax,DWORD PTR ds:[rsi]
   14001e3ec:	xor    DWORD PTR [rbx-0x42a21046],edi
   14001e3f2:	(bad)  
   14001e3f3:	adc    eax,0x9de96b4a
   14001e3f8:	jo     0x14001e3f7
   14001e3fa:	ins    BYTE PTR es:[rdi],dx
   14001e3fb:	(bad)  
   14001e3fc:	mov    esi,0x8923e42e
   14001e401:	(bad)  
   14001e402:	and    BYTE PTR [rsi],dl
   14001e404:	test   DWORD PTR [rbx+rsi*2+0x4612679],edx
   14001e40b:	jb     0x14001e3cd
   14001e40d:	nop
   14001e40e:	sub    al,BYTE PTR [rax]
   14001e410:	in     al,0xe4
   14001e412:	(bad)  
   14001e413:	neg    DWORD PTR [rax]
   14001e415:	xor    al,BYTE PTR [rsi-0x59cf59e0]
   14001e41b:	jrcxz  0x14001e3ad
   14001e41d:	call   0x1ae56f5de
   14001e422:	mov    bl,BYTE PTR [rsp+rcx*4+0x5d]
   14001e426:	call   0x1a45bfe2c
   14001e42b:	and    eax,0xde8c73d0
   14001e430:	enter  0xffed,0x53
   14001e434:	add    eax,0xbf7df000
   14001e439:	out    dx,eax
   14001e43a:	ja     0x14001e3f8
   14001e43c:	(bad)  
   14001e43d:	idiv   DWORD PTR [rsi]
   14001e43f:	stc    
   14001e440:	fnstcw WORD PTR [rdi]
   14001e442:	hlt    
   14001e443:	lahf   
   14001e444:	cld    
   14001e445:	in     al,0xcf
   14001e447:	call   QWORD PTR [rbp+0x7fbf5718]
   14001e44d:	cmp    BYTE PTR [rdx-0x58],cl
   14001e450:	test   al,0xe0
   14001e452:	(bad)  
   14001e453:	scas   eax,DWORD PTR es:[rdi]
   14001e454:	scas   eax,DWORD PTR es:[rdi]
   14001e455:	sub    al,0xa6
   14001e457:	mov    dl,0x69
   14001e459:	pushf  
   14001e45a:	mov    ah,0xba
   14001e45c:	(bad)  
   14001e45d:	in     eax,dx
   14001e45e:	mov    dl,0x25
   14001e460:	jp     0x14001e4b1
   14001e462:	outs   dx,BYTE PTR ds:[rsi]
   14001e463:	or     eax,ecx
   14001e465:	sbb    bh,BYTE PTR [rdi]
   14001e467:	xchg   edx,eax
   14001e468:	xchg   ebp,eax
   14001e469:	(bad)  
   14001e46a:	and    al,0xed
   14001e46c:	stos   DWORD PTR es:[rdi],eax
   14001e46d:	push   rbp
   14001e46e:	add    al,0x1f
   14001e470:	and    esp,DWORD PTR [rcx-0x5b]
   14001e473:	(bad)  
   14001e474:	xor    BYTE PTR [rdx*8-0x32f91274],bl
   14001e47b:	(bad)  
   14001e47c:	sbb    BYTE PTR [rdi+0x39db85bf],bh
   14001e482:	(bad)  
   14001e483:	jns    0x14001e460
   14001e485:	jmp    0x14001e47f
   14001e487:	(bad)  
   14001e488:	ja     0x14001e4ab
   14001e48a:	pop    rax
   14001e48b:	and    al,0x1a
   14001e48d:	lods   al,BYTE PTR ds:[rsi]
   14001e48e:	sbb    ebp,DWORD PTR [rbx+0x77]
   14001e491:	pop    rbp
   14001e492:	push   rax
   14001e493:	ins    BYTE PTR es:[rdi],dx
   14001e494:	sbb    DWORD PTR [rdi+0x2b162cd7],0xa75e6cb5
   14001e49e:	mov    ch,BYTE PTR [rax]
   14001e4a0:	mov    WORD PTR [rax],ds
   14001e4a2:	mov    esp,0x628c108d
   14001e4a7:	(bad)  
   14001e4a8:	lea    esp,[rax+0x2]
   14001e4ab:	rex.WX or al,0x9a
   14001e4ae:	fmul   st(0),st
   14001e4b0:	sbb    BYTE PTR [rdi+rax*2+0x7f],bh
   14001e4b4:	out    0x23,al
   14001e4b6:	loop   0x14001e4f3
   14001e4b8:	xor    BYTE PTR [rbp+0xa68c12],cl
   14001e4be:	(bad)  
   14001e4bf:	push   rcx
   14001e4c0:	test   BYTE PTR [rcx+0x44ea60ca],bl
   14001e4c6:	or     eax,0xc1062d66
   14001e4cb:	sbb    al,BYTE PTR [rdi+0x10]
   14001e4ce:	je     0x14001e501
   14001e4d0:	(bad)  
   14001e4d1:	rcl    DWORD PTR [rax+0x25],1
   14001e4d4:	mov    ecx,0x6d8126b6
   14001e4d9:	and    al,0x58
   14001e4db:	(bad)  
   14001e4dc:	fsub   DWORD PTR [rsp+rax*4+0x419c5a5b]
   14001e4e3:	add    eax,0x437f433f
   14001e4e8:	out    dx,al
   14001e4e9:	sub    BYTE PTR [rbx+rcx*2+0x70],al
   14001e4ed:	add    eax,0x1dfa0364
   14001e4f2:	rex.RX xor BYTE PTR [rax],r11b
   14001e4f5:	sbb    al,0x52
   14001e4f7:	stos   BYTE PTR es:[rdi],al
   14001e4f8:	add    cl,BYTE PTR [rbp-0x25]
   14001e4fb:	mov    al,0xff
   14001e4fd:	(bad)  
   14001e4fe:	(bad)
   14001e501:	and    DWORD PTR [rdi-0x4865243b],ebp
   14001e507:	mov    al,0x16
   14001e509:	out    0x2c,eax
   14001e50b:	ret    
   14001e50c:	mov    edx,0x831caaa6
   14001e511:	stos   BYTE PTR es:[rdi],al
   14001e512:	movabs ds:0x8e5553adce4c07ae,al
   14001e51b:	retf   0x44da
   14001e51e:	not    BYTE PTR [rcx]
   14001e520:	jo     0x14001e4b7
   14001e522:	push   rbx
   14001e523:	mov    al,0x51
   14001e525:	jb     0x14001e4c8
   14001e527:	fwait
   14001e528:	mov    dh,0x25
   14001e52a:	test   BYTE PTR [rax-0xa59718d],al
   14001e530:	xor    al,0xad
   14001e532:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e533:	or     eax,0x7f3f4f91
   14001e538:	xchg   ebp,eax
   14001e539:	popf   
   14001e53a:	fstp   QWORD PTR [rbp-0x54]
   14001e53d:	jne    0x14001e503
   14001e53f:	or     BYTE PTR [rbx+0x37a122e5],cl
   14001e545:	movsxd ecx,DWORD PTR [rcx+0x733525c5]
   14001e54b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e54c:	xchg   esi,eax
   14001e54d:	(bad)  
   14001e54e:	xor    edx,edi
   14001e550:	pop    rsi
   14001e551:	out    dx,eax
   14001e552:	in     eax,0x4e
   14001e554:	add    al,ch
   14001e556:	es cli 
   14001e558:	es iret 
   14001e55a:	movabs al,ds:0x5b18963f767bf3e0
   14001e563:	(bad)  
   14001e565:	and    al,0x6c
   14001e567:	mov    ecx,0x1960afeb
   14001e56c:	mov    dl,0x32
   14001e56e:	(bad)  
   14001e56f:	popf   
   14001e570:	mov    ebx,0x1fd3b552
   14001e575:	sub    BYTE PTR cs:[rax-0x23],al
   14001e579:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e57a:	pop    rsp
   14001e57b:	mov    dl,0x54
   14001e57d:	adc    BYTE PTR [rbx-0x1],bl
   14001e580:	mov    ebx,0xa48b46b2
   14001e585:	fs sub dh,BYTE PTR fs:[rbx-0x16cc976a]
   14001e58d:	lahf   
   14001e58e:	mov    WORD PTR [rbx],ss
   14001e590:	sub    BYTE PTR [rcx+rdi*4+0x6f],ah
   14001e594:	mov    bh,al
   14001e596:	mov    edi,0xc0001405
   14001e59b:	out    dx,eax
   14001e59c:	(bad)  
   14001e59d:	out    dx,al
   14001e59e:	outs   dx,DWORD PTR ds:[rsi]
   14001e59f:	mov    edx,0xaffcbffb
   14001e5a4:	lahf   
   14001e5a5:	push   QWORD PTR [rdi+0x7e]
   14001e5a8:	(bad)  
   14001e5a9:	(bad)  
   14001e5aa:	sti    
   14001e5ab:	in     al,0xf1
   14001e5ad:	leave  
   14001e5ae:	sar    esp,1
   14001e5b0:	adc    esp,ebx
   14001e5b2:	cmc    
   14001e5b3:	(bad)  
   14001e5b4:	sub    bh,BYTE PTR [rax]
   14001e5b6:	and    al,0x4
   14001e5b8:	and    dh,BYTE PTR [rbp+0x5ca738da]
   14001e5be:	jnp    0x14001e555
   14001e5c0:	test   eax,0xd0eac6b0
   14001e5c5:	xchg   ecx,eax
   14001e5c6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e5c7:	cmp    DWORD PTR [rbx],edi
   14001e5c9:	in     eax,0xb6
   14001e5cb:	cmp    BYTE PTR [rbx],0x92
   14001e5ce:	xchg   ebp,eax
   14001e5cf:	xchg   ebp,eax
   14001e5d0:	test   bh,cl
   14001e5d2:	mov    es,WORD PTR [rdx-0xc]
   14001e5d5:	rol    BYTE PTR [rdi+rcx*1],1
   14001e5d8:	jno    0x14001e583
   14001e5da:	sbb    eax,0x2e01c384
   14001e5df:	push   rsi
   14001e5e0:	mov    ah,0xfb
   14001e5e2:	rex.XB fsubr QWORD PTR [r8]
   14001e5e5:	(bad)  
   14001e5e6:	iret   
   14001e5e7:	jns    0x14001e5cb
   14001e5e9:	jo     0x14001e5f4
   14001e5eb:	pop    rax
   14001e5ec:	pushf  
   14001e5ed:	test   eax,0x8d12ce88
   14001e5f2:	movabs eax,ds:0xfbc6ba9835de02aa
   14001e5fb:	rex.W or BYTE PTR [rip+0xffffffff9de4a0f8],bpl        # 0xdde686fa
   14001e602:	in     eax,dx
   14001e603:	or     dl,BYTE PTR [rcx]
   14001e605:	stos   DWORD PTR es:[rdi],eax
   14001e606:	rex (bad) 
   14001e608:	movabs ds:0xf14bbb0c24d8c648,eax
   14001e611:	(bad)  
   14001e612:	rex.W mov al,0x3d
   14001e615:	shl    DWORD PTR [rbp-0x53],cl
   14001e618:	jno    0x14001e5bc
   14001e61a:	push   rsi
   14001e61b:	ficomp WORD PTR [rdx]
   14001e61d:	xchg   esp,eax
   14001e61e:	fiadd  DWORD PTR [rdx-0x5]
   14001e621:	(bad)  
   14001e622:	mov    al,0xa2
   14001e624:	and    eax,0x72ca9739
   14001e629:	leave  
   14001e62a:	and    eax,0xf56a318d
   14001e62f:	and    DWORD PTR [rax-0x39f95055],ebp
   14001e635:	and    BYTE PTR [rdx+0x25a90572],dl
   14001e63b:	fdiv   DWORD PTR [rdi+0x26211bc9]
   14001e641:	add    BYTE PTR [rcx+0x144e86f4],ah
   14001e647:	outs   dx,BYTE PTR ds:[rsi]
   14001e648:	mov    WORD PTR [rcx+rcx*1+0x1e],es
   14001e64c:	xchg   edx,eax
   14001e64d:	rex.WXB
   14001e64e:	mov    QWORD PTR [r15-0x4cabf19d],r11
   14001e655:	add    DWORD PTR [rbx-0x77481476],ecx
   14001e65b:	add    dl,BYTE PTR [rbx-0x3f7ad006]
   14001e661:	jmp    0x12d3e34e2
   14001e666:	mov    ecx,0x9243e9d0
   14001e66b:	(bad)  
   14001e66c:	pop    rax
   14001e66d:	gs (bad) 
   14001e66f:	retf   0xdad0
   14001e672:	mov    ah,0x25
   14001e674:	iret   
   14001e675:	rex.XB xor cl,r14b
   14001e678:	(bad)  
   14001e679:	mov    ebp,0x4de24a6f
   14001e67e:	fbstp  TBYTE PTR [rbx]
   14001e680:	fwait
   14001e681:	popf   
   14001e682:	(bad)  
   14001e683:	popf   
   14001e684:	sub    eax,0x2988f8d9
   14001e689:	rex sahf 
   14001e68b:	mov    WORD PTR [rsi],ss
   14001e68d:	or     al,0x79
   14001e68f:	xchg   edx,eax
   14001e690:	jno    0x14001e6a8
   14001e692:	ins    BYTE PTR es:[rdi],dx
   14001e693:	mov    cl,0x67
   14001e695:	pop    rsp
   14001e696:	jl     0x14001e6e2
   14001e698:	or     eax,0xe8ed233e
   14001e69d:	mov    ecx,0xa9e7afe
   14001e6a2:	jrcxz  0x14001e634
   14001e6a4:	(bad)  
   14001e6a5:	adc    eax,0x654a4bc9
   14001e6aa:	cmp    al,0x21
   14001e6ac:	popf   
   14001e6ad:	out    dx,eax
   14001e6ae:	adc    al,0xd3
   14001e6b0:	sbb    ebp,DWORD PTR [rbx+0x1a73a5f7]
   14001e6b6:	mov    edx,0x453d7631
   14001e6bb:	xchg   esp,eax
   14001e6bc:	xlat   BYTE PTR ds:[rbx]
   14001e6bd:	(bad)  
   14001e6be:	retf   0x280b
   14001e6c1:	icebp  
   14001e6c2:	neg    BYTE PTR [edx+edx*2+0x4a]
   14001e6c7:	xor    DWORD PTR [rbx-0x1],esi
   14001e6ca:	sbb    esi,DWORD PTR [rsp+rdx*8]
   14001e6cd:	rex.WXB retf 0x3f40
   14001e6d1:	rex.RXB add r15b,BYTE PTR [r15-0x4034e22f]
   14001e6d8:	or     al,0x65
   14001e6da:	sar    BYTE PTR [rdi-0x2a],0xf6
   14001e6de:	cmp    eax,0xfb0df5df
   14001e6e3:	inc    ebx
   14001e6e5:	(bad)  
   14001e6e7:	xchg   DWORD PTR [rdi],edi
   14001e6e9:	cli    
   14001e6ea:	xor    edi,DWORD PTR [rdi]
   14001e6ec:	sti    
   14001e6ed:	stc    
   14001e6ee:	mov    ebp,0x7e0ff7db
   14001e6f3:	ins    BYTE PTR es:[rdi],dx
   14001e6f4:	cmp    al,0x89
   14001e6f6:	push   rsi
   14001e6f7:	xchg   BYTE PTR [rdx],al
   14001e6f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e6fa:	rex.WB cqo 
   14001e6fc:	(bad)  
   14001e6fd:	and    eax,0x52c6b4d2
   14001e702:	(bad)  
   14001e703:	rex.RX mov ebx,0x6ac29cf6
   14001e709:	jge    0x14001e6f6
   14001e70b:	retf   
   14001e70c:	(bad)  
   14001e70d:	xchg   esp,ebx
   14001e70f:	mov    edx,0xcadbc19b
   14001e714:	xlat   BYTE PTR ds:[rbx]
   14001e715:	sahf   
   14001e716:	push   0xfffffffffffffff6
   14001e718:	(bad)  
   14001e719:	mov    al,0x5a
   14001e71b:	add    eax,0x6df0134c
   14001e720:	ror    BYTE PTR [rip+0xffffffffb476b62c],0x87        # 0xf4789d53
   14001e727:	and    esp,esp
   14001e729:	jo     0x14001e6c8
   14001e72b:	js     0x14001e6eb
   14001e72d:	rol    DWORD PTR [rbx+rcx*4-0x49],0x10
   14001e732:	mov    ebp,0x6a43ace0
   14001e737:	ins    DWORD PTR es:[rdi],dx
   14001e738:	out    dx,eax
   14001e739:	adc    eax,0x2f07825a
   14001e73e:	rex.XB test DWORD PTR [r11-0x5052f2aa],edi
   14001e745:	mov    ch,0x6c
   14001e747:	(bad)  
   14001e748:	xchg   edi,eax
   14001e749:	mov    ah,0xa6
   14001e74b:	rex.WB and rax,0x6db115b8
   14001e751:	jmp    0x1b228d17c
   14001e756:	or     BYTE PTR [rbx-0x78],ah
   14001e759:	push   rbp
   14001e75a:	rex.WR movabs al,ds:0xac9b160d6ec2ab1e
   14001e764:	add    r13b,BYTE PTR [rsp+riz*4-0x3d1c6d3b]
   14001e76c:	adc    DWORD PTR cs:[rax+rbp*8+0x56540bd6],0x85a4df05
   14001e778:	imul   esp,DWORD PTR [rdx-0x34377bdb],0xe3817fcf
   14001e782:	jrcxz  0x14001e7e7
   14001e784:	cs cmp eax,0x2936a8f2
   14001e78a:	push   rbp
   14001e78b:	or     cl,BYTE PTR [rbp+0xe]
   14001e78e:	(bad)  
   14001e78f:	(bad)  
   14001e790:	rex.X push rsp
   14001e792:	out    0xa0,al
   14001e794:	adc    BYTE PTR [rcx],ah
   14001e796:	ss mov ebp,0x4bf48a30
   14001e79c:	stc    
   14001e79d:	outs   dx,DWORD PTR ds:[rsi]
   14001e79e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e79f:	add    DWORD PTR [rdx+0x6],ecx
   14001e7a2:	cmp    al,0x4a
   14001e7a4:	outs   dx,DWORD PTR ds:[rsi]
   14001e7a5:	(bad)  
   14001e7a6:	xchg   edx,eax
   14001e7a7:	(bad)  
   14001e7aa:	scas   al,BYTE PTR es:[rdi]
   14001e7ab:	retf   
   14001e7ac:	shr    DWORD PTR [rdx-0x14],0x7d
   14001e7b0:	push   rdi
   14001e7b1:	push   rsi
   14001e7b2:	ds jge 0x14001e7e9
   14001e7b5:	pop    rbp
   14001e7b6:	test   BYTE PTR [rsp+rsi*1],0xdd
   14001e7ba:	xchg   ecx,eax
   14001e7bb:	sbb    ah,BYTE PTR [rsp+rcx*4-0x3edf5bd7]
   14001e7c2:	jns    0x14001e795
   14001e7c4:	sbb    BYTE PTR [rax],al
   14001e7c6:	add    BYTE PTR [rax],ah
   14001e7c8:	add    BYTE PTR [rcx+0x44],cl
   14001e7cb:	push   r12
   14001e7cd:	pop    rbp
   14001e7ce:	push   rsp
   14001e7cf:	(bad)  
   14001e7d0:	mulps  xmm7,xmm0
   14001e7d3:	cwde   
   14001e7d4:	fisubr WORD PTR [rbx]
   14001e7d6:	imul   r11d,DWORD PTR [r9-0x5685914],0x917cef7f
   14001e7e1:	lods   eax,DWORD PTR ds:[rsi]
   14001e7e2:	jb     0x14001e79e
   14001e7e4:	fisttp WORD PTR [rbx]
   14001e7e6:	(bad)  
   14001e7e7:	and    eax,0x1139897b
   14001e7ec:	pop    rdi
   14001e7ed:	xchg   edx,eax
   14001e7ee:	mov    ch,cl
   14001e7f0:	jne    0x14001e7a4
   14001e7f2:	not    DWORD PTR [rsi-0x2731b632]
   14001e7f8:	imul   edx
   14001e7fa:	stc    
   14001e7fb:	pop    rbp
   14001e7fc:	(bad)  
   14001e7fd:	movabs eax,ds:0xe97a92350a677424
   14001e806:	cld    
   14001e807:	adc    esp,0x49a4841c
   14001e80d:	rex.WXB stc 
   14001e80f:	cld    
   14001e810:	fs sub eax,0x66552bd2
   14001e816:	jl     0x14001e863
   14001e818:	rcl    BYTE PTR [rax+0x3d],cl
   14001e81b:	loopne 0x14001e87f
   14001e81d:	iret   
   14001e81e:	push   rbp
   14001e81f:	jnp    0x14001e884
   14001e821:	mov    bh,0xb7
   14001e823:	mov    WORD PTR [rdx],es
   14001e825:	add    al,bh
   14001e827:	out    dx,eax
   14001e828:	(bad)  
   14001e829:	mov    ebx,0xf2fc589f
   14001e82e:	scas   eax,DWORD PTR es:[rdi]
   14001e82f:	jl     0x14001e82b
   14001e831:	(bad)  
   14001e832:	(bad)  
   14001e833:	fwait
   14001e834:	(bad)  
   14001e835:	cld    
   14001e836:	(bad)  
   14001e838:	(bad)  
   14001e839:	in     al,dx
   14001e83a:	outs   dx,DWORD PTR ds:[rsi]
   14001e83b:	mov    esp,0xd36113fe
   14001e840:	outs   dx,DWORD PTR ds:[rsi]
   14001e841:	mov    fs,edx
   14001e843:	add    BYTE PTR [rsi+rdx*8+0x2559c591],bh
   14001e84a:	fsubr  QWORD PTR [rax-0x54e59d2c]
   14001e850:	cmp    DWORD PTR [rdx-0x6a992e4a],eax
   14001e856:	shl    BYTE PTR [rsi-0x3a9da2ed],1
   14001e85c:	xchg   esp,eax
   14001e85d:	stos   BYTE PTR es:[rdi],al
   14001e85e:	rex.WB (bad) 
   14001e860:	cs js  0x14001e812
   14001e863:	(bad)  
   14001e864:	push   rbx
   14001e865:	add    cl,ch
   14001e867:	or     al,ah
   14001e869:	rex.B in eax,0x1c
   14001e86c:	(bad)  
   14001e86d:	xlat   BYTE PTR ds:[rbx]
   14001e86e:	test   bl,ah
   14001e870:	sbb    bl,cl
   14001e872:	mov    al,0x4
   14001e874:	cmp    al,0xa4
   14001e876:	and    DWORD PTR [rax],esp
   14001e878:	ins    DWORD PTR es:[rdi],dx
   14001e879:	add    BYTE PTR [rcx-0x5391bccc],ch
   14001e87f:	rex.WB push r13
   14001e881:	and    eax,DWORD PTR [rbx+0x1742ab17]
   14001e887:	mov    ah,0x6e
   14001e889:	(bad)  
   14001e88a:	movabs ds:0x841f12cad2d36a3,eax
   14001e893:	shr    DWORD PTR [rcx],1
   14001e895:	(bad)  [rcx+0x1a8fdc87]
   14001e89b:	rex.WB stc 
   14001e89d:	or     BYTE PTR [rdx],0xed
   14001e8a0:	rex.RXB xchg r8d,eax
   14001e8a2:	in     al,0xf6
   14001e8a4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e8a5:	cld    
   14001e8a6:	rex.RB mov r14b,0x73
   14001e8a9:	(bad)  
   14001e8ab:	cwde   
   14001e8ac:	lods   al,BYTE PTR ds:[rsi]
   14001e8ad:	push   0x115436e
   14001e8b2:	imul   esi,DWORD PTR [rcx],0x29
   14001e8b5:	(bad)  
   14001e8b7:	in     eax,0xa3
   14001e8b9:	and    al,0xa1
   14001e8bb:	xchg   edx,eax
   14001e8bc:	(bad)  
   14001e8bd:	(bad)  
   14001e8be:	push   rcx
   14001e8bf:	fnstenv [rsi+0x6e]
   14001e8c2:	mov    ebp,0xffbf937e
   14001e8c7:	mov    edi,DWORD PTR [rdi+0x17]
   14001e8ca:	movsxd ecx,DWORD PTR [rdi+riz*8]
   14001e8cd:	(bad)  
   14001e8ce:	pushf  
   14001e8cf:	out    0xdc,eax
   14001e8d1:	mov    ecx,0xa74fac0b
   14001e8d6:	ins    BYTE PTR es:[rdi],dx
   14001e8d7:	ins    BYTE PTR es:[rdi],dx
   14001e8d8:	outs   dx,BYTE PTR ds:[rsi]
   14001e8d9:	jae    0x14001e8c9
   14001e8db:	ret    0xd665
   14001e8de:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e8df:	push   rbx
   14001e8e0:	mov    WORD PTR [rbp-0x7778f1e8],gs
   14001e8e6:	jae    0x14001e914
   14001e8e8:	push   rdi
   14001e8e9:	lea    eax,[rdx-0x6c]
   14001e8ec:	add    edx,0xffffff94
   14001e8ef:	sub    DWORD PTR [rdi-0x76],0xffffff95
   14001e8f3:	test   BYTE PTR [rdi+rdi*2],cl
   14001e8f6:	iret   
   14001e8f7:	add    eax,0xced5cead
   14001e8fc:	add    bl,BYTE PTR [rdi+0x44]
   14001e8ff:	mov    bl,0x24
   14001e901:	loop   0x14001e93d
   14001e903:	in     eax,0x75
   14001e905:	(bad)  
   14001e906:	clc    
   14001e907:	and    ebp,ecx
   14001e909:	jno    0x14001e95a
   14001e90b:	mov    ecx,0xbb918a49
   14001e910:	mov    dl,0x5f
   14001e912:	out    0xb6,eax
   14001e914:	rcr    DWORD PTR [rbx-0xf],cl
   14001e917:	xchg   edx,eax
   14001e918:	sub    al,0x6a
   14001e91a:	(bad)  
   14001e91b:	xor    dh,BYTE PTR [rdx+0x196e9767]
   14001e921:	sub    cl,BYTE PTR [rcx+rsi*1]
   14001e924:	and    eax,0xc9efbb21
   14001e929:	mov    ecx,0x4a266d02
   14001e92e:	push   rsi
   14001e92f:	cmp    BYTE PTR [rbx+0x2ab69eba],ch
   14001e935:	mov    eax,0x81f458bc
   14001e93a:	rex.WRX dec QWORD PTR [rcx-0x47]
   14001e93e:	adc    esp,DWORD PTR [rbx]
   14001e940:	mov    DWORD PTR [rax-0x77b0b5c5],ebx
   14001e946:	rex.B movabs eax,ds:0x2891928a58f7a185
   14001e950:	mov    esi,edx
   14001e952:	mov    esi,0xe52521b
   14001e957:	sub    BYTE PTR [rsi],ah
   14001e959:	jl     0x14001e966
   14001e95b:	push   0xffffffffffffffed
   14001e95d:	jae    0x14001e9d6
   14001e95f:	(bad)  
   14001e960:	cmp    r12,QWORD PTR [rsi]
   14001e963:	stc    
   14001e964:	xchg   esp,eax
   14001e965:	stos   BYTE PTR es:[rdi],al
   14001e966:	rex.WXB je 0x14001e9ad
   14001e969:	mov    BYTE PTR [rdi-0x36],ch
   14001e96c:	js     0x14001e95e
   14001e96e:	mov    bh,0x94
   14001e970:	add    bh,al
   14001e972:	in     eax,0x5f
   14001e974:	stc    
   14001e975:	xor    al,0xcf
   14001e977:	mov    ebp,0x73f2edeb
   14001e97c:	(bad)  
   14001e97d:	repz (bad) 
   14001e97f:	cld    
   14001e980:	(bad)
   14001e983:	xchg   ecx,eax
   14001e984:	mov    edi,0xbf33fd70
   14001e989:	cmp    ebx,edi
   14001e98b:	repz movabs eax,ds:0xb1515489386dbe5d
   14001e995:	repnz (bad) 
   14001e997:	(bad)  
   14001e998:	xor    DWORD PTR [rax-0x4c],esp
   14001e99b:	cdq    
   14001e99c:	(bad)  
   14001e99d:	or     al,0xb4
   14001e99f:	rol    DWORD PTR [rbp-0x74],0xe0
   14001e9a3:	lods   eax,DWORD PTR ds:[rsi]
   14001e9a4:	(bad)  
   14001e9a5:	psubsb mm1,QWORD PTR [rdi-0x3e]
   14001e9a9:	leave  
   14001e9aa:	or     esi,DWORD PTR [rdi-0x5af98790]
   14001e9b0:	or     edx,DWORD PTR [rdi]
   14001e9b2:	or     DWORD PTR [rbx+rcx*2+0x699d6b68],esi
   14001e9b9:	call   0x14d6af815
   14001e9be:	pop    rsi
   14001e9bf:	push   rsi
   14001e9c0:	sub    esi,edx
   14001e9c2:	mov    ds,WORD PTR [rax]
   14001e9c4:	shl    DWORD PTR [rax+0x2a],cl
   14001e9c7:	sbb    eax,0x7a99a22c
   14001e9cc:	xor    eax,0x6a131a0b
   14001e9d1:	imul   ebp,DWORD PTR [rcx],0x3f5a4fa
   14001e9d7:	sub    BYTE PTR [rcx-0x55],bh
   14001e9da:	rex.WB ins DWORD PTR es:[rdi],dx
   14001e9dc:	int    0x10
   14001e9de:	icebp  
   14001e9df:	jns    0x14001e968
   14001e9e1:	cmc    
   14001e9e2:	mov    ebp,0x633ee8a2
   14001e9e7:	rex.WR out dx,al
   14001e9e9:	push   rdi
   14001e9ea:	and    eax,0x10babf24
   14001e9ef:	mov    esi,0x5cca1264
   14001e9f4:	cmp    eax,eax
   14001e9f6:	(bad)  
   14001e9f7:	(bad)  
   14001e9f8:	lea    esp,[rax-0x7e]
   14001e9fb:	rex.B jmp 0x14001e9d4
   14001e9fe:	ss icebp 
   14001ea00:	or     eax,0x70601868
   14001ea05:	sbb    BYTE PTR [rdx+0x16],ch
   14001ea08:	movabs eax,ds:0x95e8f38f95ff9be1
   14001ea11:	sub    edi,DWORD PTR [rsi+rbp*8-0x29]
   14001ea15:	(bad)  
   14001ea16:	int    0x4b
   14001ea18:	(bad)  
   14001ea19:	mov    esi,0xd3fcafc0
   14001ea1e:	call   FWORD PTR [rbx+0x3c62b566]
   14001ea24:	pop    rcx
   14001ea25:	movsxd ebp,DWORD PTR [rbp+0x7d]
   14001ea28:	popf   
   14001ea29:	sar    DWORD PTR [rax-0x34],1
   14001ea2c:	jo     0x14001ea5e
   14001ea2e:	fs mov edx,0xb9d6c9b9
   14001ea34:	or     ebp,DWORD PTR [rsi+rbp*2+0x6f]
   14001ea38:	mov    bl,0x75
   14001ea3a:	out    dx,al
   14001ea3b:	add    ch,BYTE PTR [rbx+0x6b]
   14001ea3e:	push   rbx
   14001ea3f:	(bad)  
   14001ea40:	test   DWORD PTR [rbx+rbp*4],0xe561809a
   14001ea47:	pop    rbx
   14001ea48:	rex.WRB
   14001ea49:	rex.R cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001ea4b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ea4c:	(bad)  
   14001ea4d:	out    dx,al
   14001ea4e:	xchg   ebx,eax
   14001ea4f:	iret   
   14001ea50:	(bad)  
   14001ea51:	push   rbp
   14001ea52:	(bad)  
   14001ea53:	out    0xf,eax
   14001ea55:	fs adc eax,0xafafffd7
   14001ea5b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ea5c:	lods   eax,DWORD PTR ds:[rsi]
   14001ea5d:	(bad)  
   14001ea5e:	and    eax,0x48990df4
   14001ea63:	mov    dh,0xe4
   14001ea65:	and    al,0xaf
   14001ea67:	sub    eax,0x3d4920fb
   14001ea6c:	in     al,0xf0
   14001ea6e:	(bad)  
   14001ea6f:	push   rbx
   14001ea70:	push   0xffffffffc7ece127
   14001ea75:	int3   
   14001ea76:	sbb    ah,dl
   14001ea78:	jmp    0x1814ba4f8
   14001ea7d:	fucomp st(7)
   14001ea7f:	out    0x9c,eax
   14001ea81:	add    BYTE PTR [rcx-0xfa834a4],bh
   14001ea87:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001ea88:	push   rbx
   14001ea89:	pop    rax
   14001ea8a:	xchg   edx,eax
   14001ea8b:	div    DWORD PTR [rbx-0x5b5bf288]
   14001ea91:	(bad)  
   14001ea92:	mov    edx,0x20879986
   14001ea97:	or     bpl,BYTE PTR [rbp+0x7a]
   14001ea9b:	pop    rsi
   14001ea9c:	add    eax,0xf7d4079d
   14001eaa1:	xor    BYTE PTR [rax],ah
   14001eaa3:	(bad)  
   14001eaa4:	movabs ds:0x5397b3162537bee9,eax
   14001eaad:	in     al,0x1c
   14001eaaf:	sub    DWORD PTR [rdx-0x2e060db3],ecx
   14001eab5:	fldenv cs:[rsi]
   14001eab8:	mul    BYTE PTR [rsi-0x47]
   14001eabb:	mov    esp,0x495bdb91
   14001eac0:	add    DWORD PTR [rax],ecx
   14001eac2:	and    bh,cl
   14001eac4:	mov    edi,0xc64cb2f0
   14001eac9:	xor    eax,0xffffffb7
   14001eacc:	(bad)  
   14001eacd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001eace:	(bad)  
   14001eacf:	(bad)  
   14001ead0:	jae    0x14001eab1
   14001ead2:	repz (bad) 
   14001ead4:	(bad)  
   14001ead5:	fmul   DWORD PTR [rbp+0x7f46b7eb]
   14001eadb:	jmp    0x111f84bc8
   14001eae0:	leave  
   14001eae1:	cli    
   14001eae2:	cmp    BYTE PTR [rdx+0x3160c40a],0x5e
   14001eae9:	jrcxz  0x14001eb4f
   14001eaeb:	test   eax,0xc2ea362c
   14001eaf0:	jno    0x14001eb67
   14001eaf2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001eaf3:	sub    al,0xc4
   14001eaf5:	(bad)  
   14001eaf6:	adc    BYTE PTR [rdx],bl
   14001eaf8:	sbb    r15,QWORD PTR [r10+r11*1+0x7b]
   14001eafd:	rex.RB (bad) 
   14001eaff:	jl     0x14001eb4c
   14001eb01:	lea    edx,[rdi+0x12]
   14001eb04:	push   rbx
   14001eb05:	movabs ds:0x223470547c91218f,eax
   14001eb0e:	sub    al,0x20
   14001eb10:	mov    eax,0x7f63af06
   14001eb15:	adc    DWORD PTR [rbx],esp
   14001eb17:	push   rsp
   14001eb18:	(bad)  
   14001eb19:	or     BYTE PTR [rbp-0x7b],dl
   14001eb1c:	mov    DWORD PTR [rsi],edx
   14001eb1e:	pop    rbx
   14001eb1f:	jmp    0xea3165b2
   14001eb24:	or     BYTE PTR [rdx-0x45671da6],al
   14001eb2a:	xchg   edi,eax
   14001eb2b:	pushf  
   14001eb2c:	sbb    DWORD PTR [rdx+0x4],eax
   14001eb2f:	(bad)  
   14001eb30:	sub    eax,esp
   14001eb32:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001eb33:	test   BYTE PTR [rbp-0x3a165577],bl
   14001eb39:	test   al,0xfb
   14001eb3b:	outs   dx,DWORD PTR ds:[rsi]
   14001eb3c:	rex.WX adc BYTE PTR [rax+r11*1-0x46ab6eff],bpl
   14001eb44:	nop
   14001eb45:	mov    dl,0x12
   14001eb47:	and    al,0xb9
   14001eb49:	clc    
   14001eb4a:	xor    ebp,ebx
   14001eb4c:	xchg   ebx,eax
   14001eb4d:	or     DWORD PTR [rsi+0x5221c1ca],r13d
   14001eb54:	imul   ebp,DWORD PTR [rsi+0xe2c3a20],0x96758b11
   14001eb5e:	mov    dh,0x81
   14001eb60:	stos   BYTE PTR es:[rdi],al
   14001eb61:	stos   BYTE PTR es:[rdi],al
   14001eb62:	jns    0x14001eb5e
   14001eb64:	(bad)  
   14001eb66:	js     0x14001eb4a
   14001eb68:	test   eax,0x747c73b7
   14001eb6d:	enter  0xeb8d,0xaf
   14001eb71:	repnz retf 0x2f2b
   14001eb75:	icebp  
   14001eb76:	(bad)  
   14001eb77:	mov    ebp,DWORD PTR [rdi]
   14001eb79:	jno    0x14001eb62
   14001eb7b:	(bad)  
   14001eb7c:	rex.WRB
   14001eb7d:	rex.WRX
   14001eb7e:	rex.WRX xchg rsp,rax
   14001eb80:	mov    eax,0xaaaa0443
   14001eb85:	movabs ds:0xf3adac9fd352eaaa,al
   14001eb8e:	fcom   DWORD PTR [rbx+0x75b9b04f]
   14001eb94:	(bad)  
   14001eb95:	(bad)  
   14001eb96:	jb     0x14001eb79
   14001eb98:	shl    BYTE PTR [rbp+0x46],cl
   14001eb9b:	xchg   ebx,eax
   14001eb9c:	xor    eax,0x3d6c188c
   14001eba1:	and    BYTE PTR [rax+0x7a],ah
   14001eba4:	out    dx,al
   14001eba5:	jbe    0x14001ebd3
   14001eba7:	(bad)
   14001ebab:	scas   al,BYTE PTR es:[rdi]
   14001ebac:	pop    rbx
   14001ebad:	(bad)  
   14001ebae:	test   al,0x10
   14001ebb0:	jp     0x14001eb34
   14001ebb2:	xlat   BYTE PTR ds:[rbx]
   14001ebb3:	jae    0x14001eb8c
   14001ebb5:	cmp    DWORD PTR [rbx],esp
   14001ebb7:	test   dl,dl
   14001ebb9:	sub    ebx,ebp
   14001ebbb:	rex.X mov cl,0x9d
   14001ebbe:	pushf  
   14001ebbf:	repnz (bad) 
   14001ebc1:	test   al,0xd3
   14001ebc3:	ja     0x14001ec3b
   14001ebc5:	lods   eax,DWORD PTR ds:[rsi]
   14001ebc6:	std    
   14001ebc7:	jmp    0xdb44e6e3
   14001ebcc:	adc    ebp,DWORD PTR [rdi+0x5]
   14001ebcf:	ins    BYTE PTR es:[rdi],dx
   14001ebd0:	xchg   ecx,eax
   14001ebd1:	(bad)  
   14001ebd2:	(bad)  
   14001ebd3:	leave  
   14001ebd4:	imul   esi,DWORD PTR [rax+0x1896c89d],0xfffffffd
   14001ebdb:	rex.WR and rax,0x61542849
   14001ebe1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001ebe2:	mov    edi,ss
   14001ebe4:	fist   DWORD PTR [rcx+0x25]
   14001ebe7:	sbb    cl,cl
   14001ebe9:	and    DWORD PTR [rsi+rbx*8-0x6c],eax
   14001ebed:	fidiv  DWORD PTR [rbx]
   14001ebef:	sub    eax,DWORD PTR [rip+0xffffffffbf32d272]        # 0xff34be67
   14001ebf5:	(bad)  
   14001ebf6:	xchg   DWORD PTR [rdx],esi
   14001ebf8:	std    
   14001ebf9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ebfa:	fs (bad) 
   14001ebfc:	rex.XB (bad) 
   14001ebfe:	fiadd  WORD PTR [rdi+rdi*1-0x34]
   14001ec02:	rex.WB or dl,BYTE PTR [r13-0x7c]
   14001ec06:	call   0x119903e4e
   14001ec0b:	(bad)  
   14001ec0c:	js     0x14001ebf1
   14001ec0e:	mov    bh,0xb7
   14001ec10:	xchg   edx,eax
   14001ec11:	add    ch,BYTE PTR [rax]
   14001ec13:	fucomi st,st(4)
   14001ec15:	je     0x14001ec80
   14001ec17:	stos   DWORD PTR es:[rdi],eax
   14001ec18:	retf   0x9799
   14001ec1b:	sahf   
   14001ec1c:	(bad)  
   14001ec1d:	mov    ebx,0xf170b99f
   14001ec22:	mov    ebp,0xf564f07f
   14001ec27:	mov    dh,0x9f
   14001ec29:	pushf  
   14001ec2a:	(bad)  
   14001ec2b:	leave  
   14001ec2c:	(bad)  
   14001ec2d:	push   0xffffffffffffffc7
   14001ec2f:	rcl    DWORD PTR [rsi-0x22],0x52
   14001ec33:	(bad)  
   14001ec34:	adc    eax,0x7a24442e
   14001ec39:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001ec3a:	add    dh,BYTE PTR [rdi-0x26]
   14001ec3d:	mov    bh,0x6f
   14001ec3f:	xor    BYTE PTR [r14+0xd8b5822],r13b
   14001ec46:	(bad)  
   14001ec47:	fistp  QWORD PTR [rax+0x42]
   14001ec4a:	sbb    esi,DWORD PTR [rax+rdi*1-0x58]
   14001ec4e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001ec4f:	mov    eax,0x41a431a9
   14001ec54:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001ec55:	ficom  WORD PTR [rax]
   14001ec57:	jl     0x14001ec19
   14001ec59:	rex.RB sub DWORD PTR [r10+rbp*2],0x6d
   14001ec5e:	fbstp  TBYTE PTR [rip+0xffffffff93ab6d2d]        # 0xd3ad5991
   14001ec64:	ja     0x14001ec13
   14001ec66:	test   eax,0xdaad2f0
   14001ec6b:	mov    cl,0x15
   14001ec6d:	and    al,BYTE PTR [rsi-0x19]
   14001ec70:	mov    DWORD PTR [rip+0xffffffffb8e8484f],0x64541a64        # 0xf8ea34c9
   14001ec7a:	lea    eax,[rax]
   14001ec7c:	sub    eax,0x85782042
   14001ec81:	hlt    
   14001ec82:	(bad)  
   14001ec83:	xchg   edi,eax
   14001ec84:	mov    BYTE PTR [rax+rax*1],bh
   14001ec87:	sub    dl,BYTE PTR [rbx-0x4d2ef8e4]
   14001ec8d:	movabs eax,ds:0x4945face971e290
   14001ec96:	sbb    DWORD PTR [rbp+0xb14c49a],esi
   14001ec9c:	push   0xffffffff854acfb2
   14001eca1:	xchg   DWORD PTR [rbp-0x7a8091b6],r12d
   14001eca8:	movabs eax,ds:0x940e9c218b70a902
   14001ecb1:	scas   eax,DWORD PTR es:[rdi]
   14001ecb2:	iret   
   14001ecb3:	rex.RXB pop r10
   14001ecb5:	out    dx,eax
   14001ecb6:	sbb    DWORD PTR [rdi+rdx*8],ecx
   14001ecb9:	js     0x14001ec96
   14001ecbb:	cmp    ebx,edi
   14001ecbd:	(bad)  
   14001ecbe:	xor    ebp,DWORD PTR [rdi+0x7f]
   14001ecc1:	mov    es,ebp
   14001ecc3:	(bad)  
   14001ecc4:	addr32 sbb al,0xec
   14001ecc7:	in     eax,dx
   14001ecc8:	jb     0x14001ecbf
   14001ecca:	(bad)  
   14001eccb:	push   rdi
   14001eccc:	js     0x14001ecb3
   14001ecce:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001eccf:	(bad)  
   14001ecd0:	fcomp  st(7)
   14001ecd2:	(bad)  [rbp+0x76]
   14001ecd5:	movabs ds:0x1cb18c63b3273e8c,al
   14001ecde:	sbb    eax,0xceef721e
   14001ece3:	in     eax,dx
   14001ece4:	adc    ch,BYTE PTR [rbx-0x29bc79f1]
   14001ecea:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001eceb:	push   rbx
   14001ecec:	(bad)  
   14001eced:	imul   ebp,ebx,0xffffffca
   14001ecf0:	add    BYTE PTR [rbx*8+0x653eb264],bh
   14001ecf7:	mov    dl,0xbe
   14001ecf9:	shr    DWORD PTR [rax+0x7d],0x1d
   14001ecfd:	push   rdi
   14001ecfe:	pop    gs
   14001ed00:	and    r13d,DWORD PTR [r9+r14*2+0xd06daac]
   14001ed08:	mov    edi,0xc92094a0
   14001ed0d:	cmp    eax,0x3b84ba1c
   14001ed12:	(bad)  
   14001ed13:	(bad)  
   14001ed14:	rex.XB mov r9d,0x5ac28721
   14001ed1a:	adc    cl,ch
   14001ed1c:	(bad)  
   14001ed1d:	repnz pop rax
   14001ed1f:	adc    al,BYTE PTR [rdx-0x15db82bb]
   14001ed25:	mov    ah,0x6e
   14001ed27:	rex stos DWORD PTR es:[rdi],eax
   14001ed29:	je     0x14001ecb8
   14001ed2b:	rex.X je 0x14001ed8e
   14001ed2e:	popf   
   14001ed2f:	or     edx,DWORD PTR cs:[rax+0x11c87fad]
   14001ed36:	rex.WXB (bad) 
   14001ed38:	rex.RX
   14001ed39:	addr32 jle 0x14001ed87
   14001ed3c:	mov    edx,0x53cba6bf
   14001ed41:	je     0x14001eccd
   14001ed43:	(bad)  
   14001ed44:	or     esp,DWORD PTR [rdi-0x6e11bcc7]
   14001ed4a:	stos   DWORD PTR es:[rdi],eax
   14001ed4b:	add    esi,DWORD PTR [rcx]
   14001ed4d:	pop    sp
   14001ed4f:	rex.X sub al,0xec
   14001ed52:	shr    cl,1
   14001ed54:	or     BYTE PTR [rdi+rbp*1+0xc],dh
   14001ed58:	fucompp 
   14001ed5a:	pop    rdx
   14001ed5b:	xchg   edx,eax
   14001ed5c:	(bad)  
   14001ed5d:	xchg   esp,eax
   14001ed5e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ed5f:	jo     0x14001ed2f
   14001ed61:	ja     0x14001ed0b
   14001ed63:	out    dx,al
   14001ed64:	out    dx,eax
   14001ed65:	stc    
   14001ed66:	rex.WRX xor QWORD PTR [rcx],r13
   14001ed69:	or     ah,ch
   14001ed6b:	sub    BYTE PTR ds:[rbx-0x18],cl
   14001ed6f:	(bad)  
   14001ed70:	(bad)  
   14001ed72:	xchg   edx,eax
   14001ed73:	or     al,BYTE PTR [rax]
   14001ed75:	nop
   14001ed76:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001ed77:	imul   esp,ebp,0xae5e1785
   14001ed7d:	pop    rsi
   14001ed7e:	jg     0x14001ed7d
   14001ed80:	test   BYTE PTR [rbx-0xd06835],0xa9
   14001ed87:	leave  
   14001ed88:	out    0xc7,al
   14001ed8a:	pop    rdi
   14001ed8b:	lock mov ecx,DWORD PTR [rbx+0x3f]
   14001ed8f:	mov    esi,0xf072f1f4
   14001ed94:	adc    DWORD PTR [rsi],eax
   14001ed96:	xchg   ecx,eax
   14001ed97:	sbb    BYTE PTR [rsi+rdx*8],ch
   14001ed9a:	and    eax,0x854633b7
   14001ed9f:	mov    dl,0x89
   14001eda1:	mov    dh,0x18
   14001eda3:	fwait
   14001eda4:	test   al,0x60
   14001eda6:	xchg   ebx,eax
   14001eda7:	loopne 0x14001ede6
   14001eda9:	ins    DWORD PTR es:[rdi],dx
   14001edaa:	movsxd ecx,DWORD PTR [rax]
   14001edac:	push   rsi
   14001edad:	cmp    esi,ecx
   14001edaf:	(bad)  
   14001edb0:	enter  0x3148,0x8f
   14001edb4:	add    DWORD PTR [rdx-0x5c951c3a],ebx
   14001edba:	xor    ecx,DWORD PTR [rbx]
   14001edbc:	add    al,BYTE PTR [rdi+rbx*8]
   14001edbf:	sub    dh,BYTE PTR [rax]
   14001edc1:	sub    BYTE PTR [rdi-0x2b6aff6a],ch
   14001edc7:	(bad)  
   14001edc8:	sub    al,BYTE PTR [rdx+0x7c4da687]
   14001edce:	(bad)  
   14001edcf:	push   rsi
   14001edd0:	movsxd edi,DWORD PTR [rcx-0x15]
   14001edd3:	push   rdx
   14001edd4:	js     0x14001ee16
   14001edd6:	rex.X ror DWORD PTR [rcx+0xd],cl
   14001edda:	xor    BYTE PTR [rbx-0x7c],cl
   14001edde:	test   al,0x9e
   14001ede0:	movabs ds:0x4ba1bc7de35a93ee,al
   14001edea:	(bad)  
   14001edeb:	stos   DWORD PTR es:[rdi],eax
   14001edec:	pop    rbx
   14001eded:	lahf   
   14001edee:	sbb    edi,ebp
   14001edf0:	lea    esi,[rcx-0x1ed7de97]
   14001edf6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001edf7:	mov    cl,0xa9
   14001edf9:	xor    al,0xb9
   14001edfb:	pop    rax
   14001edfc:	ret    
   14001edfd:	sub    al,0xd7
   14001edff:	xor    BYTE PTR [rcx+0x7e0a8ac2],dh
   14001ee05:	mov    WORD PTR [rsi],es
   14001ee07:	rcl    esi,cl
   14001ee09:	mov    BYTE PTR [rdi],bl
   14001ee0b:	(bad)  
   14001ee0c:	outs   dx,BYTE PTR ds:[rsi]
   14001ee0d:	pushf  
   14001ee0e:	xchg   DWORD PTR [rip+0xffffffff8220dc25],ecx        # 0xc222ca39
   14001ee14:	outs   dx,DWORD PTR ds:[rsi]
   14001ee15:	pop    rbx
   14001ee16:	fcmovb st,st(4)
   14001ee18:	add    eax,ebp
   14001ee1a:	mov    ebp,0xf9c70427
   14001ee1f:	rex.WXB (bad) 
   14001ee21:	repz fcom DWORD PTR [rbx]
   14001ee24:	iret   
   14001ee25:	lock mov cl,0x6f
   14001ee28:	sti    
   14001ee29:	jbe    0x14001ee79
   14001ee2b:	rex.RXB fdivr QWORD PTR [r15d-0x28323c41]
   14001ee33:	scas   al,BYTE PTR es:[rdi]
   14001ee34:	mov    cl,0x73
   14001ee36:	out    dx,eax
   14001ee37:	(bad)  
   14001ee38:	mov    ebx,0xedecbbbb
   14001ee3d:	out    dx,al
   14001ee3e:	mov    dl,0xbb
   14001ee40:	mov    bl,0x43
   14001ee42:	or     BYTE PTR [rcx+0x108472aa],al
   14001ee48:	cwde   
   14001ee49:	lahf   
   14001ee4a:	sahf   
   14001ee4b:	add    dh,BYTE PTR [rdi-0x17]
   14001ee4e:	sti    
   14001ee4f:	icebp  
   14001ee50:	(bad)  
   14001ee51:	cmp    esi,edx
   14001ee53:	push   rbx
   14001ee54:	ret    
   14001ee55:	rcr    dl,1
   14001ee57:	je     0x14001ee23
   14001ee59:	fs jge 0x14001ee26
   14001ee5c:	cli    
   14001ee5d:	(bad)  
   14001ee5e:	ss out 0x2e,eax
   14001ee61:	pop    rsp
   14001ee62:	(bad)  
   14001ee63:	xor    al,0x5e
   14001ee65:	and    ecx,DWORD PTR [rdx+0x318d1a30]
   14001ee6b:	mov    dh,0xa2
   14001ee6d:	lea    ebx,[rsi+0x7]
   14001ee70:	pushf  
   14001ee71:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ee72:	(bad)  
   14001ee73:	ins    DWORD PTR es:[rdi],dx
   14001ee74:	and    DWORD PTR [rip+0x59ba33a5],ebp        # 0x199bc221f
   14001ee7a:	cmp    BYTE PTR [rbp-0x24cde698],cl
   14001ee80:	ror    esp,0x6d
   14001ee83:	test   al,0x1d
   14001ee85:	js     0x14001ee50
   14001ee87:	or     eax,0xe9821037
   14001ee8c:	retf   0xd0be
   14001ee8f:	in     eax,0x1f
   14001ee91:	mov    dl,BYTE PTR [rbx-0x70]
   14001ee94:	adc    DWORD PTR [rcx],0x7d
   14001ee97:	rcl    BYTE PTR [rdx+rdi*4],cl
   14001ee9a:	outs   dx,DWORD PTR ds:[rsi]
   14001ee9b:	retf   0x55fb
   14001ee9e:	mov    eax,0xca4cf962
   14001eea3:	adc    al,0xa0
   14001eea5:	or     DWORD PTR [rbx+0x5],esp
   14001eea8:	xor    esi,DWORD PTR [rbp-0x78]
   14001eeab:	rcr    DWORD PTR [rsi+0x183c5027],0x45
   14001eeb2:	pop    rdi
   14001eeb3:	(bad)  
   14001eeb4:	lods   al,BYTE PTR ds:[rsi]
   14001eeb5:	test   BYTE PTR [rdx],ah
   14001eeb7:	and    al,0xfa
   14001eeb9:	cs mov ah,0xfa
   14001eebc:	xchg   edx,eax
   14001eebd:	sbb    eax,0xcc2c94c0
   14001eec2:	adc    eax,0x8c208486
   14001eec7:	jns    0x14001ef08
   14001eec9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001eeca:	cmp    ecx,DWORD PTR [rdi]
   14001eecc:	mov    ecx,0xcf24cdb1
   14001eed1:	and    al,bh
   14001eed3:	push   rsp
   14001eed4:	cli    
   14001eed5:	mov    WORD PTR [rcx-0x3cb4f4f0],ss
   14001eedb:	sbb    edi,DWORD PTR [rdx+0x1555bd]
   14001eee1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001eee2:	mov    ch,0x71
   14001eee4:	jb     0x14001ef18
   14001eee6:	mov    bl,0xd7
   14001eee8:	scas   al,BYTE PTR es:[rdi]
   14001eee9:	pop    rbp
   14001eeea:	xchg   ebx,eax
   14001eeeb:	mov    edx,DWORD PTR [rdi]
   14001eeed:	rex.WRXB (bad) 
   14001eeef:	test   dh,0xf6
   14001eef2:	sti    
   14001eef3:	pop    rdi
   14001eef4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001eef5:	jns    0x14001eeed
   14001eef7:	rex.WRXB clc 
   14001eef9:	out    0xdc,al
   14001eefb:	(bad)  
   14001eefc:	(bad)  
   14001eefd:	mov    edi,0x38561aa0
   14001ef02:	pop    rdi
   14001ef03:	loope  0x14001ee87
   14001ef05:	(bad)
   14001ef08:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001ef09:	lods   eax,DWORD PTR ds:[esi]
   14001ef0b:	sub    DWORD PTR [rax+0x75189313],esp
   14001ef11:	lea    edx,[rbp+0xa]
   14001ef14:	scas   al,BYTE PTR es:[rdi]
   14001ef15:	(bad)  
   14001ef16:	jnp    0x14001ef5a
   14001ef18:	stos   DWORD PTR es:[rdi],eax
   14001ef19:	in     al,0x98
   14001ef1b:	(bad)  
   14001ef1c:	rex.RX (bad) 
   14001ef1e:	rex.X push 0xffffffffda12de89
   14001ef24:	and    al,0x34
   14001ef26:	sub    BYTE PTR [rcx+0x26],ah
   14001ef29:	xchg   ecx,eax
   14001ef2a:	shr    BYTE PTR [rsi-0x15],cl
   14001ef2d:	sbb    eax,DWORD PTR [rdi+0xdbb4173]
   14001ef33:	movabs ds:0xd602fd4bda5cb8c3,eax
   14001ef3c:	adc    ah,BYTE PTR [rbx-0x75]
   14001ef3f:	(bad)  
   14001ef40:	(bad)  
   14001ef41:	sub    esp,DWORD PTR [rdx-0x7d93a70f]
   14001ef47:	sbb    ecx,DWORD PTR cs:[rbp+0x4e]
   14001ef4b:	push   rsi
   14001ef4c:	leave  
   14001ef4d:	(bad)  
   14001ef4e:	int3   
   14001ef4f:	ds ins BYTE PTR es:[rdi],dx
   14001ef51:	cmp    al,ah
   14001ef53:	fcom   QWORD PTR [rsi]
   14001ef55:	lods   eax,DWORD PTR ds:[rsi]
   14001ef56:	shl    BYTE PTR [rax-0x6b38191c],0xe0
   14001ef5d:	ret    
   14001ef5e:	(bad)  
   14001ef5f:	push   rsi
   14001ef60:	movsxd ebp,DWORD PTR [rdx-0x3123923d]
   14001ef66:	rex.RB in al,dx
   14001ef68:	leave  
   14001ef69:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001ef6a:	xor    bh,ch
   14001ef6c:	push   rsp
   14001ef6d:	stos   BYTE PTR es:[rdi],al
   14001ef6e:	sbb    al,0xf0
   14001ef70:	rex.WRX (bad) 
   14001ef72:	and    al,0x7b
   14001ef74:	mov    esi,DWORD PTR [rbp+0x5ab9868e]
   14001ef7a:	mov    WORD PTR [rdx+0x3],fs
   14001ef7d:	shr    DWORD PTR [rdi+0x46],cl
   14001ef80:	in     eax,0xfc
   14001ef82:	(bad)  
   14001ef83:	popf   
   14001ef84:	mov    bh,0x1c
   14001ef86:	popf   
   14001ef87:	pushf  
   14001ef88:	adc    BYTE PTR [rbx-0x5c],al
   14001ef8b:	jb     0x14001ef23
   14001ef8d:	mov    ecx,DWORD PTR [rdi+0x4f63c93e]
   14001ef93:	cmp    al,0x8b
   14001ef95:	xor    eax,0xb436df11
   14001ef9a:	int    0x92
   14001ef9c:	popf   
   14001ef9d:	mov    ebx,0x383839b7
   14001efa2:	in     al,0xc6
   14001efa4:	imul   esi,DWORD PTR [rdi],0xffffffb8
   14001efa7:	jbe    0x14001efa6
   14001efa9:	sub    al,BYTE PTR [rdi+0x4aafbfb]
   14001efaf:	rex.X (bad) 
   14001efb1:	cmp    BYTE PTR [rbx+0x1eba96b5],al
   14001efb7:	sar    BYTE PTR [rdx-0x31],1
   14001efba:	mov    ebp,0xb9d8f77b
   14001efbf:	mov    edi,0x93463183
   14001efc4:	mov    al,al
   14001efc6:	jo     0x14001effc
   14001efc8:	(bad)  
   14001efc9:	jge    0x14001ef85
   14001efcb:	sar    edx,0xc6
   14001efce:	(bad)  
   14001efcf:	jmp    0x14001efa4
   14001efd1:	rex.WRB xchg r11b,r12b
   14001efd4:	xor    ebx,edx
   14001efd6:	in     eax,dx
   14001efd7:	repz (bad) 
   14001efd9:	cmc    
   14001efda:	add    BYTE PTR [rdi+0x55],dl
   14001efdd:	fadd   st,st(1)
   14001efdf:	mov    BYTE PTR [rsi],dh
   14001efe1:	loope  0x14001efc4
   14001efe3:	lea    esi,[rcx+0x2f41861a]
   14001efe9:	fisub  WORD PTR [rdi+0x21a779ec]
   14001efef:	adc    ah,BYTE PTR [rsi+0x42]
   14001eff2:	and    BYTE PTR [rcx+rbp*1],al
   14001eff5:	and    DWORD PTR [rsi+rsi*8+0x54],ebx
   14001eff9:	xor    ch,BYTE PTR [rdx]
   14001effb:	xor    BYTE PTR [rcx+0x770fe52f],dl
   14001f001:	and    QWORD PTR [r12+rdx*2],0xffffffffffffffc5
   14001f006:	xchg   edi,eax
   14001f007:	call   0x1033a0561
   14001f00c:	cmp    al,0x4c
   14001f00e:	rex.WB
   14001f00f:	cs in  al,0xe8
   14001f012:	and    BYTE PTR [rcx-0xb],bh
   14001f015:	and    eax,0x72bd8fe6
   14001f01a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001f01b:	mov    esi,0xed03d8ae
   14001f020:	xor    esp,DWORD PTR [rax]
   14001f022:	xchg   DWORD PTR [r13-0x7b],edx
   14001f026:	cdq    
   14001f027:	sahf   
   14001f028:	(bad)  
   14001f029:	rcl    ecx,1
   14001f02b:	mov    BYTE PTR [rbp-0x67c0b261],ah
   14001f031:	ret    
   14001f032:	mov    esp,ebp
   14001f034:	add    DWORD PTR [rdi+rbp*8-0x2d],esi
   14001f038:	test   BYTE PTR [rsi+0x22],ah
   14001f03b:	scas   al,BYTE PTR es:[rdi]
   14001f03c:	mov    ecx,0x71be9c03
   14001f041:	movabs ds:0x85f3d005556f6dd5,al
   14001f04a:	xor    dh,bl
   14001f04c:	(bad)  
   14001f04d:	mov    ecx,0xdea7777b
   14001f052:	(bad)  
   14001f054:	(bad)  
   14001f055:	mov    esi,0xfcfdb5b0
   14001f05a:	(bad)  
   14001f05b:	cdq    
   14001f05c:	sahf   
   14001f05d:	sti    
   14001f05e:	call   0x1adf324f2
   14001f063:	(bad)  
   14001f064:	mov    eax,0x8737cc5a
   14001f069:	adc    ecx,DWORD PTR [rdi+0x1ce716f7]
   14001f06f:	scas   al,BYTE PTR es:[rdi]
   14001f070:	jb     0x14001f04c
   14001f072:	out    0x9f,eax
   14001f074:	rex.WX ins BYTE PTR es:[rdi],dx
   14001f076:	xchg   edx,eax
   14001f077:	push   0xffffffffffffffe9
   14001f079:	cmp    ch,BYTE PTR [rsi+0x4344c1c]
   14001f07f:	outs   dx,DWORD PTR ds:[rsi]
   14001f080:	adc    eax,DWORD PTR [rdx+0xe]
   14001f083:	rex.W push 0x366b1cb6
   14001f089:	stos   DWORD PTR es:[rdi],eax
   14001f08a:	and    eax,0xa155fad
   14001f08f:	mov    cl,0x10
   14001f091:	xor    eax,0x2b576c6a
   14001f096:	rex.R or al,0x75
   14001f099:	or     eax,0xb4158b18
   14001f09e:	xchg   BYTE PTR [rdi],ch
   14001f0a0:	(bad)  
   14001f0a1:	xor    DWORD PTR [rsi-0x45],ecx
   14001f0a4:	std    
   14001f0a5:	(bad)  
   14001f0a6:	push   rcx
   14001f0a7:	data16 (bad) 
   14001f0a9:	add    al,0x4c
   14001f0ab:	xchg   ebx,eax
   14001f0ac:	(bad)  
   14001f0ad:	cmp    BYTE PTR [rip+0xffffffffb51a4872],al        # 0xf51c3925
   14001f0b3:	sub    eax,0xe70d485e
   14001f0b8:	mov    edi,ebp
   14001f0ba:	xor    ecx,DWORD PTR cs:[rax]
   14001f0bd:	(bad)  
   14001f0be:	sbb    dh,BYTE PTR [rcx+0xc]
   14001f0c1:	movabs al,ds:0x31b60f60186c4183
   14001f0ca:	imul   DWORD PTR [rsi]
   14001f0cc:	push   rax
   14001f0cd:	fistp  QWORD PTR [rdi+0x54471544]
   14001f0d3:	add    DWORD PTR [rcx],0xffffffb1
   14001f0d6:	adc    DWORD PTR [rbp+0xd],esp
   14001f0d9:	(bad)  
   14001f0da:	cdq    
   14001f0db:	rex.WRXB sbb r8,r13
   14001f0de:	mov    ah,0x9f
   14001f0e0:	push   rbp
   14001f0e1:	xor    BYTE PTR [rdx+0x316283f8],cl
   14001f0e7:	mov    DWORD PTR [rcx+0x4b8f38f5],ebp
   14001f0ed:	rex.XB xchg r10d,eax
   14001f0ef:	xor    bl,BYTE PTR [rax+0x70]
   14001f0f2:	jb     0x14001f16e
   14001f0f4:	rex.WX
   14001f0f5:	lock stos BYTE PTR es:[rdi],al
   14001f0f7:	xchg   esp,eax
   14001f0f8:	mov    ebp,ss
   14001f0fa:	shr    BYTE PTR [rdx+0x7a],1
   14001f0fd:	jmp    0x13b810f4b
   14001f102:	jnp    0x14001f0fd
   14001f104:	xchg   esi,eax
   14001f105:	(bad)  
   14001f106:	nop    DWORD PTR [rsi-0x6a]
   14001f10a:	rcl    DWORD PTR [rbx-0x9f1f1ed],cl
   14001f110:	mov    eax,0xfb36eb75
   14001f115:	mov    ebx,0xeeeeecbb
   14001f11a:	jo     0x14001f117
   14001f11c:	(bad)  
   14001f11d:	sub    eax,0x3e39f316
   14001f122:	add    al,0xda
   14001f124:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001f125:	rol    DWORD PTR [rbp-0x5441df65],1
   14001f12b:	(bad)  
   14001f12c:	jae    0x14001f1a6
   14001f12e:	js     0x14001f0f0
   14001f130:	rol    ecx,0x7e
   14001f133:	stos   BYTE PTR es:[rdi],al
   14001f134:	shr    BYTE PTR [rax],cl
   14001f136:	pop    rax
   14001f137:	imul   esi,DWORD PTR [rax],0x8d1a321c
   14001f13d:	sbb    BYTE PTR [rdi-0x2870e7b3],ch
   14001f143:	sbb    DWORD PTR [rbp-0x22c14e53],ebp
   14001f149:	sar    BYTE PTR [rax-0x72873e76],0xf1
   14001f150:	fs retf 0x3172
   14001f154:	(bad)  
   14001f155:	jae    0x14001f148
   14001f157:	jae    0x14001f135
   14001f159:	pop    rsp
   14001f15a:	sub    cl,BYTE PTR [rcx]
   14001f15c:	push   rcx
   14001f15d:	(bad)  
   14001f15e:	rex.X (bad) 
   14001f160:	or     esp,0x32b23c43
   14001f166:	xchg   edi,eax
   14001f167:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f168:	pop    rsp
   14001f169:	cmp    eax,DWORD PTR [rdi+0x446f125d]
   14001f16f:	cli    
   14001f170:	pop    rsp
   14001f171:	out    dx,al
   14001f172:	sbb    al,0xec
   14001f174:	fs mov edi,0xa8ada640
   14001f17a:	vunpckhps ymm8,ymm10,YMMWORD PTR [rdx-0x36fff86c]
   14001f182:	xchg   ebx,eax
   14001f183:	in     eax,0xc8
   14001f185:	(bad)  
   14001f186:	int    0x34
   14001f188:	in     eax,dx
   14001f189:	pop    rcx
   14001f18a:	(bad)  
   14001f18b:	in     al,0xfc
   14001f18d:	rex.XB scas al,BYTE PTR es:[rdi]
   14001f18f:	jb     0x14001f185
   14001f191:	push   rdx
   14001f192:	adc    ebx,DWORD PTR [rbp-0x58]
   14001f195:	rol    ecx,1
   14001f197:	(bad)  
   14001f198:	je     0x14001f189
   14001f19a:	rex.WX ja 0x14001f12c
   14001f19d:	out    dx,al
   14001f19e:	ins    DWORD PTR es:[rdi],dx
   14001f19f:	push   rcx
   14001f1a0:	ds xchg edx,eax
   14001f1a2:	cmp    eax,0xe85e1495
   14001f1a7:	retf   
   14001f1a8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001f1a9:	(bad)  
   14001f1aa:	clc    
   14001f1ab:	std    
   14001f1ac:	(bad)  
   14001f1ae:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001f1af:	mov    al,0x82
   14001f1b1:	mov    ebp,0xde401555
   14001f1b6:	jp     0x14001f1f1
   14001f1b8:	fwait
   14001f1b9:	sbb    BYTE PTR [rdi-0x1108b9d5],dl
   14001f1bf:	fstp   QWORD PTR [rax-0x34]
   14001f1c2:	out    0x47,eax
   14001f1c4:	(bad)  
   14001f1c5:	mov    ebp,0x97d4f1be
   14001f1ca:	rex.RX jmp 0x14001f1ac
   14001f1cd:	repnz mov DWORD PTR [rcx-0x527700a1],ebx
   14001f1d4:	test   cl,dl
   14001f1d6:	js     0x14001f220
   14001f1d8:	lock (bad) 
   14001f1da:	pop    rbx
   14001f1db:	push   rbp
   14001f1dc:	pop    rax
   14001f1dd:	(bad)  
   14001f1de:	mov    BYTE PTR [rbx],dl
   14001f1e0:	pushf  
   14001f1e1:	jno    0x14001f23d
   14001f1e3:	mov    esi,0x2b661c93
   14001f1e8:	push   rdi
   14001f1e9:	sahf   
   14001f1ea:	adc    ebp,DWORD PTR [rbx-0x15bdedfe]
   14001f1f0:	push   rsi
   14001f1f1:	stos   DWORD PTR es:[rdi],eax
   14001f1f2:	push   0xdb6279d
   14001f1f7:	mov    esi,0x2328156d
   14001f1fc:	rex.X mov spl,0xd
   14001f1ff:	sar    DWORD PTR [rbx-0x74],0xc6
   14001f203:	sbb    DWORD PTR [rdx],ebp
   14001f205:	mov    al,0x56
   14001f207:	or     BYTE PTR [rcx-0x80],ah
   14001f20a:	test   eax,0xed695b04
   14001f20f:	pop    rax
   14001f210:	push   rax
   14001f211:	cs cmp eax,0x4442459c
   14001f217:	mov    BYTE PTR fs:[rsi-0x243c55fe],dh
   14001f21e:	xchg   BYTE PTR [rax+0x1a0ddf34],ch
   14001f224:	(bad)  
   14001f225:	and    al,0xfa
   14001f227:	jo     0x14001f1da
   14001f229:	and    al,0xea
   14001f22b:	jo     0x14001f1c8
   14001f22d:	in     al,0xd9
   14001f22f:	(bad)  
   14001f230:	jo     0x14001f26a
   14001f232:	sub    cl,ah
   14001f234:	jmp    0x155d0e03f
   14001f239:	(bad)  
   14001f23a:	sti    
   14001f23b:	out    0xa9,eax
   14001f23d:	int3   
   14001f23e:	sbb    BYTE PTR [rcx],dl
   14001f240:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001f241:	test   al,0xc4
   14001f243:	ss jno 0x14001f230
   14001f246:	and    eax,0x62118245
   14001f24b:	movabs ds:0xbe6cd2e0eb5b756e,eax
   14001f254:	jl     0x14001f29c
   14001f256:	cli    
   14001f257:	rex.WB out dx,eax
   14001f259:	je     0x14001f2a5
   14001f25b:	(bad)  
   14001f25c:	movabs ds:0x62b0da0115f3451f,eax
   14001f265:	mov    esi,0x3107258
   14001f26a:	(bad)  
   14001f26b:	out    dx,al
   14001f26c:	fadd   st(5),st
   14001f26e:	(bad)  
   14001f26f:	enter  0x3070,0x60
   14001f273:	mov    edx,0x64fac6b6
   14001f278:	ret    0xbe3b
   14001f27b:	loope  0x14001f280
   14001f27d:	lods   al,BYTE PTR ds:[rsi]
   14001f27e:	or     eax,0xa904d807
   14001f283:	pop    rbp
   14001f284:	sub    eax,0xefefec17
   14001f289:	jae    0x14001f28a
   14001f28b:	dec    BYTE PTR [rsi]
   14001f28d:	repz (bad) [rcx]
   14001f290:	retf   
   14001f291:	(bad)
   14001f294:	jrcxz  0x14001f2f9
   14001f296:	data16 (bad) 
   14001f298:	(bad)  
   14001f299:	(bad)  
   14001f29a:	push   0xffffffffbc88aaf4
   14001f29f:	neg    DWORD PTR [rdx-0x5f]
   14001f2a2:	imul   edi,DWORD PTR [rip+0xffffffffc1e2b34d],0xfb078afe        # 0x101e4a5f9
   14001f2ac:	(bad)  
   14001f2ad:	rex.WB pop r8
   14001f2af:	or     al,0xa3
   14001f2b1:	rcl    DWORD PTR [rax-0x6188c13],1
   14001f2b7:	(bad)  
   14001f2b8:	(bad)  
   14001f2b9:	jle    0x14001f23f
   14001f2bb:	pop    rdi
   14001f2bc:	sti    
   14001f2bd:	ret    0xca4b
   14001f2c0:	movabs ds:0xdafb10e8279cb658,eax
   14001f2c9:	(bad)  
   14001f2ca:	(bad)  
   14001f2cb:	(bad)  
   14001f2cc:	mov    bl,BYTE PTR [rcx-0x48b7c7cd]
   14001f2d2:	or     al,0xcd
   14001f2d4:	adc    DWORD PTR [rax+0x6c97ae84],0xcb9b5f48
   14001f2de:	jns    0x14001f2fd
   14001f2e0:	loope  0x14001f359
   14001f2e2:	fbstp  TBYTE PTR [rbx]
   14001f2e4:	rex.W jl 0x14001f26c
   14001f2e7:	(bad)  
   14001f2e8:	mov    edx,0xb724032a
   14001f2ed:	pop    rdi
   14001f2ee:	mov    edi,0x5f44e427
   14001f2f3:	ficom  WORD PTR [rdi]
   14001f2f5:	mov    edx,0x7b3d5e58
   14001f2fa:	leave  
   14001f2fb:	mov    cl,0x83
   14001f2fd:	jle    0x14001f333
   14001f2ff:	out    dx,eax
   14001f300:	rex.RXB (bad) 
   14001f302:	sbb    esp,DWORD PTR [rdi+rdi*1-0x53]
   14001f306:	hlt    
   14001f307:	cmp    al,ch
   14001f309:	imul   ebx
   14001f30b:	xlat   BYTE PTR ds:[rbx]
   14001f30c:	ja     0x14001f34c
   14001f30e:	pop    rsp
   14001f30f:	rex.X pcmpeqd mm0,QWORD PTR [rdi]
   14001f313:	test   DWORD PTR [rsi],0x5556f6f
   14001f319:	adc    BYTE PTR [rdi],bl
   14001f31b:	mov    edx,0x46216f9f
   14001f320:	in     al,dx
   14001f321:	add    DWORD PTR [rdi],0xffffff87
   14001f324:	jbe    0x14001f39c
   14001f326:	repnz mov ecx,0xdcd8dcdf
   14001f32c:	stc    
   14001f32d:	(bad)  
   14001f32e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001f32f:	fucomi st,st(7)
   14001f331:	push   QWORD PTR [rsi-0x41c40a8]
   14001f337:	rex.WRXB pop r11
   14001f339:	mov    dh,0xea
   14001f33b:	rex.WB
   14001f33c:	rex.RB in eax,0x5b
   14001f33f:	pushf  
   14001f340:	stos   DWORD PTR es:[rdi],eax
   14001f341:	jo     0x14001f2d8
   14001f343:	add    eax,0xc9683607
   14001f348:	push   rax
   14001f349:	xchg   ebx,eax
   14001f34a:	push   0x31996414
   14001f34f:	(bad)  
   14001f350:	pop    rbp
   14001f351:	ja     0x14001f329
   14001f353:	push   rcx
   14001f354:	cvtpi2ps xmm7,mm4
   14001f357:	rex.W nop
   14001f359:	and    BYTE PTR [rax-0x5de1f7aa],bl
   14001f35f:	mov    DWORD PTR [rsi+riz*4-0x314fe4fb],esi
   14001f366:	adc    DWORD PTR [rbx-0x38631555],edx
   14001f36c:	mov    edx,0x40da90c
   14001f371:	adc    esi,DWORD PTR [rcx]
   14001f373:	shr    DWORD PTR [rcx+0xf72263c],1
   14001f379:	rex.B
   14001f37a:	rex.WX scas rax,QWORD PTR es:[rdi]
   14001f37c:	(bad)  
   14001f37d:	and    DWORD PTR [rdx+0x4d],esp
   14001f380:	and    al,bh
   14001f382:	rex.WR movabs rsp,0x2ba3608885caa47b
   14001f38c:	out    dx,al
   14001f38d:	mov    edi,0x8718c6a5
   14001f392:	pop    rbx
   14001f393:	lea    edx,[rax+0x6cec6d83]
   14001f399:	(bad)  
   14001f39a:	xchg   ebx,eax
   14001f39b:	add    DWORD PTR [rcx],esp
   14001f39d:	or     BYTE PTR [rbp-0x45],cl
   14001f3a0:	ret    0x1eb7
   14001f3a3:	in     eax,0xa1
   14001f3a5:	xchg   ebx,eax
   14001f3a6:	loop   0x14001f416
   14001f3a8:	(bad)  
   14001f3a9:	ret    0xaab3
   14001f3ac:	mov    al,0xd2
   14001f3ae:	or     DWORD PTR [rbx+0x52bde1d6],esi
   14001f3b4:	(bad)  
   14001f3b5:	(bad)
   14001f3b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f3b9:	ins    BYTE PTR es:[rdi],dx
   14001f3ba:	jge    0x14001f362
   14001f3bc:	int3   
   14001f3bd:	push   rdx
   14001f3be:	mov    edx,DWORD PTR [rsi+0x2f34641b]
   14001f3c4:	xchg   edx,eax
   14001f3c5:	cmp    ebp,ebp
   14001f3c7:	push   0xffffffffffffffa9
   14001f3c9:	lock call 0x1478574fb
   14001f3cf:	psubusb mm3,mm5
   14001f3d2:	(bad)  
   14001f3d3:	sbb    BYTE PTR [rbx-0x1f5cef49],0xa8
   14001f3da:	loope  0x14001f37c
   14001f3dc:	data16 xor al,0x1c
   14001f3df:	xor    bl,BYTE PTR [rdx]
   14001f3e1:	or     al,0x38
   14001f3e3:	jg     0x14001f3ca
   14001f3e5:	sbb    esi,eax
   14001f3e7:	jrcxz  0x14001f40a
   14001f3e9:	ret    
   14001f3ea:	stos   BYTE PTR es:[rdi],al
   14001f3eb:	and    al,BYTE PTR [rsi+0x555beb40]
   14001f3f1:	lods   al,BYTE PTR ds:[rsi]
   14001f3f2:	movabs ds:0x9b32d67069be023c,al
   14001f3fb:	int    0x58
   14001f3fd:	xor    eax,0x6c9f9e8d
   14001f402:	loope  0x14001f390
   14001f404:	rcr    DWORD PTR [rdx+0x47],0xdb
   14001f408:	mov    dh,0x1c
   14001f40a:	sahf   
   14001f40b:	cs cwde 
   14001f40d:	(bad)  
   14001f40e:	xchg   edi,eax
   14001f40f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f410:	adc    bh,BYTE PTR [rcx+0x4159496e]
   14001f416:	jbe    0x14001f3f9
   14001f418:	push   rbx
   14001f419:	pop    rsp
   14001f41a:	sahf   
   14001f41b:	mov    BYTE PTR [rdx+0x11],al
   14001f41e:	cmp    dh,BYTE PTR [rax+0x3cc3124e]
   14001f424:	hlt    
   14001f425:	xchg   ebx,eax
   14001f426:	movabs ds:0xba33099cf1021e24,al
   14001f42f:	sbb    BYTE PTR [rbp+rax*4+0x30],bl
   14001f433:	jge    0x14001f46c
   14001f435:	cmp    al,BYTE PTR [rbx-0x4e]
   14001f438:	and    al,0x15
   14001f43a:	shr    edx,cl
   14001f43c:	push   rbx
   14001f43d:	rex.W mov cl,0x9e
   14001f440:	xor    eax,DWORD PTR [rbx-0x51]
   14001f443:	rex.R cdq 
   14001f445:	mov    esi,0xe792633
   14001f44a:	mov    ecx,0xa0f62141
   14001f44f:	vpsubq xmm5,xmm6,xmm2
   14001f453:	jle    0x14001f3f8
   14001f455:	pop    rbx
   14001f456:	ficomp WORD PTR [rcx+0x7d8b3cae]
   14001f45c:	rex.WRX sub sil,r12b
   14001f45f:	mov    esp,0xff949bc8
   14001f464:	add    ebx,esi
   14001f466:	mov    edx,0xd67a000a
   14001f46b:	(bad)  
   14001f46c:	std    
   14001f46d:	iret   
   14001f46e:	add    eax,0xe5b68f3d
   14001f473:	psadbw mm6,mm6
   14001f476:	outs   dx,BYTE PTR ds:[rsi]
   14001f477:	(bad)  
   14001f478:	cmp    BYTE PTR [rcx],bh
   14001f47a:	mov    esi,0x5ba70ff7
   14001f47f:	(bad)  
   14001f480:	ds (bad) 
   14001f482:	(bad)  
   14001f484:	xchg   esi,eax
   14001f485:	out    dx,eax
   14001f486:	imul   edx,DWORD PTR [rdi-0x19],0x3e
   14001f48a:	xor    al,0x58
   14001f48c:	pop    rbx
   14001f48d:	(bad)  
   14001f48e:	fxch   st(2)
   14001f490:	push   rbx
   14001f491:	sti    
   14001f492:	mov    ch,BYTE PTR [rdx+0x2acac472]
   14001f498:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001f499:	fiadd  WORD PTR [rdx+rbx*2]
   14001f49c:	imul   edx,DWORD PTR [rip+0xffffffffd3346b78],0x1e        # 0x11336601b
   14001f4a3:	rex.B jge 0x14001f4e5
   14001f4a6:	and    ebx,DWORD PTR [rax-0x72bd9eb0]
   14001f4ac:	cmc    
   14001f4ad:	(bad)  
   14001f4ae:	adc    edx,esp
   14001f4b0:	sub    al,BYTE PTR [rcx+rcx*1]
   14001f4b3:	test   DWORD PTR [rbp-0x1cb0bbd9],ebx
   14001f4b9:	xchg   edi,eax
   14001f4ba:	test   BYTE PTR [rdx],ch
   14001f4bc:	loop   0x14001f4a8
   14001f4be:	mov    bl,dh
   14001f4c0:	sahf   
   14001f4c1:	call   0xc96f80f1
   14001f4c6:	(bad)  
   14001f4c7:	and    al,0x2
   14001f4c9:	or     al,0x8
   14001f4cb:	(bad)  
   14001f4cc:	jrcxz  0x14001f4bb
   14001f4ce:	rex.WX or QWORD PTR [rax+0x31],rax
   14001f4d2:	add    eax,0x9da19fc3
   14001f4d7:	(bad)  
   14001f4d9:	movabs eax,ds:0x40cb0e2b162b7df5
   14001f4e2:	rex.XB sbb BYTE PTR [r9],bl
   14001f4e5:	and    BYTE PTR [rcx-0x6e2831da],ah
   14001f4eb:	jrcxz  0x14001f53a
   14001f4ed:	ins    BYTE PTR es:[rdi],dx
   14001f4ee:	sbb    al,0x83
   14001f4f0:	cmp    BYTE PTR [rdx+0x430c4f95],bl
   14001f4f6:	sbb    dh,BYTE PTR [rbx+0x22]
   14001f4f9:	xor    ecx,edx
   14001f4fb:	rex.WRXB out 0x93,eax
   14001f4fe:	movabs ds:0xd980e8f8e107cd0b,eax
   14001f507:	ins    BYTE PTR es:[rdi],dx
   14001f508:	(bad)  
   14001f509:	je     0x14001f57e
   14001f50b:	adc    esp,DWORD PTR [rdi+0x6b]
   14001f50e:	mov    WORD PTR [rax],gs
   14001f510:	and    al,0xd7
   14001f512:	xchg   edi,eax
   14001f513:	movabs eax,ds:0x774ee99fa9279d9a
   14001f51c:	push   rsi
   14001f51d:	or     bh,BYTE PTR [rcx+0x35]
   14001f520:	fwait
   14001f521:	(bad)  
   14001f522:	shr    eax,0xac
   14001f525:	out    dx,al
   14001f526:	jns    0x14001f570
   14001f528:	and    eax,0xc162f9b3
   14001f52d:	jmp    0x15b52f3ae
   14001f532:	stos   DWORD PTR es:[rdi],eax
   14001f533:	call   0x150c686a8
   14001f538:	pop    rsp
   14001f539:	pop    rcx
   14001f53a:	in     eax,dx
   14001f53b:	fild   QWORD PTR [rax+0x40432b9c]
   14001f541:	movsxd esp,edx
   14001f543:	mov    BYTE PTR [rbp+rcx*8-0x35],al
   14001f548:	xor    al,0x11
   14001f54a:	mov    edi,0x5ba4f650
   14001f54f:	iret   
   14001f550:	mov    edi,0xae74e2ca
   14001f555:	lahf   
   14001f556:	rex.WRXB sbb r12b,BYTE PTR [r8+0x65b26100]
   14001f55d:	or     al,0xb1
   14001f55f:	xchg   esp,eax
   14001f560:	cmc    
   14001f561:	mov    edx,0x9c1279cc
   14001f566:	and    al,0xe8
   14001f568:	leave  
   14001f569:	out    dx,al
   14001f56a:	xchg   edi,eax
   14001f56b:	lock movabs eax,ds:0x86f4d39205f2933c
   14001f575:	fadd   QWORD PTR [rbx+0x4e]
   14001f578:	imul   ecx,DWORD PTR [rsi-0xb787cde],0xa4a6359e
   14001f582:	adc    DWORD PTR [rdx-0xa],esi
   14001f585:	mov    edi,0x1836356b
   14001f58a:	rex.WB add al,0xaa
   14001f58d:	mov    esi,DWORD PTR es:[rsi-0x5e3662e2]
   14001f594:	rex.W loop 0x14001f5d4
   14001f597:	call   0x18700a8f0
   14001f59c:	leave  
   14001f59d:	rex enter 0xc159,0x36
   14001f5a2:	stc    
   14001f5a3:	js     0x14001f548
   14001f5a5:	out    0x15,al
   14001f5a7:	lods   al,BYTE PTR ds:[rsi]
   14001f5a8:	leave  
   14001f5a9:	ficomp WORD PTR [rdx-0x125b21a8]
   14001f5af:	lods   eax,DWORD PTR ds:[rsi]
   14001f5b0:	stos   BYTE PTR es:[rdi],al
   14001f5b1:	add    dl,bh
   14001f5b3:	(bad)  
   14001f5b4:	rex
   14001f5b5:	rex test esi,ebx
   14001f5b8:	movabs ds:0xbd40367f4743b44e,eax
   14001f5c1:	pop    rsp
   14001f5c2:	stc    
   14001f5c3:	mov    eax,0xceeaff77
   14001f5c8:	icebp  
   14001f5c9:	loope  0x14001f580
   14001f5cb:	mov    edi,0x9bfe79ba
   14001f5d0:	ds in  eax,dx
   14001f5d2:	fwait
   14001f5d3:	ja     0x14001f653
   14001f5d5:	xchg   DWORD PTR [rbx],ebx
   14001f5d7:	cmp    al,0xfa
   14001f5d9:	pushf  
   14001f5da:	(bad)  
   14001f5db:	loope  0x14001f577
   14001f5dd:	push   0xffffffffffffffc5
   14001f5df:	(bad)  
   14001f5e0:	cmp    al,0xc0
   14001f5e2:	pop    rdx
   14001f5e3:	rcr    eax,0xa
   14001f5e6:	push   rdi
   14001f5e7:	rex.RB int 0xf
   14001f5ea:	rex.R push rbp
   14001f5ec:	add    al,0x62
   14001f5ee:	mov    ah,0x6f
   14001f5f0:	pop    rsi
   14001f5f1:	or     al,0x48
   14001f5f3:	cmp    eax,eax
   14001f5f5:	and    ebp,DWORD PTR ss:[rax-0x73]
   14001f5f9:	rex.WX test QWORD PTR [rax],rbx
   14001f5fc:	pushf  
   14001f5fd:	test   DWORD PTR [rax-0x6b07f68e],ebx
   14001f603:	xor    al,0x8c
   14001f605:	sub    edi,DWORD PTR [rax+rcx*4+0x44]
   14001f609:	(bad)  
   14001f60a:	xor    ch,ch
   14001f60c:	adc    al,ah
   14001f60e:	(bad)  
   14001f60f:	ins    DWORD PTR es:[rdi],dx
   14001f610:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001f611:	(bad)  
   14001f612:	(bad)  
   14001f613:	rex.R jne 0x14001f611
   14001f616:	rex.WRB
   14001f617:	rex.XB mov r8b,0x2d
   14001f61a:	push   r14
   14001f61c:	add    al,0xd1
   14001f61e:	mov    esi,0xf8b268fc
   14001f623:	pop    rbx
   14001f624:	rex.WRB (bad) 
   14001f626:	(bad)
   14001f629:	adc    BYTE PTR [rsi+rcx*8],bl
   14001f62c:	push   rsi
   14001f62d:	mov    eax,0x2186c430
   14001f632:	xor    bl,BYTE PTR [rbx+0x30a77710]
   14001f638:	fwait
   14001f639:	(bad)  
   14001f63a:	rex.XB
   14001f63b:	rex.WRB
   14001f63c:	fwait
   14001f63d:	(bad)  
   14001f63e:	ins    BYTE PTR es:[rdi],dx
   14001f63f:	je     0x14001f5e9
   14001f641:	xor    BYTE PTR [rcx+riz*2+0x25],dl
   14001f645:	loope  0x14001f67b
   14001f647:	mov    DWORD PTR [rdx],edx
   14001f649:	sbb    al,0x23
   14001f64b:	pop    rax
   14001f64c:	xlat   BYTE PTR ds:[rbx]
   14001f64d:	xor    bl,BYTE PTR [rbx+0x7f67e03d]
   14001f653:	cli    
   14001f654:	outs   dx,DWORD PTR ds:[rsi]
   14001f655:	jo     0x14001f60f
   14001f657:	mov    edi,0xaec7e5cf
   14001f65c:	lock mov dh,0x67
   14001f65f:	(bad)  
   14001f661:	out    0xf6,al
   14001f663:	cmp    DWORD PTR [rsi],eax
   14001f665:	movabs ds:0x1e3572a25c2fe731,eax
   14001f66e:	test   al,0xea
   14001f670:	sub    cl,ch
   14001f672:	cld    
   14001f673:	or     ebp,DWORD PTR [rcx-0x523ede99]
   14001f679:	rex.WB loopne 0x14001f6a0
   14001f67c:	call   0x104ab0506
   14001f681:	xchg   ebp,eax
   14001f682:	fsub   st(4),st
   14001f684:	cwde   
   14001f685:	imul   edi,DWORD PTR [rcx-0x3040ad7c],0x5beb6e1e
   14001f68f:	lock shl BYTE PTR [rax+riz*1],1
   14001f693:	stos   DWORD PTR es:[rdi],eax
   14001f694:	pushf  
   14001f695:	xlat   BYTE PTR ds:[rbx]
   14001f696:	or     ch,bh
   14001f698:	(bad)  
   14001f699:	sub    edx,DWORD PTR [rsi+0x2e]
   14001f69c:	(bad)  
   14001f69d:	div    BYTE PTR [rsp+rax*4+0x130283da]
   14001f6a4:	xchg   ebx,eax
   14001f6a5:	add    dl,BYTE PTR [rdx-0xc171ae4]
   14001f6ab:	and    eax,0xa7ff9edb
   14001f6b0:	cld    
   14001f6b1:	or     eax,0xbb90430f
   14001f6b6:	(bad)  
   14001f6b7:	pop    rbp
   14001f6b8:	mov    dh,0xfc
   14001f6ba:	xor    DWORD PTR [rcx],ecx
   14001f6bc:	push   0xffffffffffffffd9
   14001f6be:	push   rcx
   14001f6bf:	xchg   edx,eax
   14001f6c0:	addr32 popf 
   14001f6c2:	adc    eax,0xd22e3a5e
   14001f6c7:	cld    
   14001f6c8:	add    DWORD PTR [rbp-0x7cb18bbe],ebp
   14001f6ce:	and    bh,BYTE PTR [rsi-0x2b]
   14001f6d1:	mov    ebp,DWORD PTR [rdx+rcx*4]
   14001f6d4:	push   rdx
   14001f6d5:	cli    
   14001f6d6:	(bad)  
   14001f6d7:	rex.WRXB jmp 0x112f1c708
   14001f6dd:	popf   
   14001f6de:	rex.WRB (bad) 
   14001f6e0:	xor    ah,BYTE PTR [edi+0x60]
   14001f6e4:	sbb    DWORD PTR [rdx+0x23],ebp
   14001f6e7:	xchg   esp,eax
   14001f6e8:	inc    BYTE PTR [rdi-0x5054eb80]
   14001f6ee:	cmp    edx,DWORD PTR [rsi+0x729307b8]
   14001f6f4:	mov    ?,WORD PTR [rcx]
   14001f6f6:	fdivp  st(6),st
   14001f6f8:	out    0x8b,eax
   14001f6fa:	int3   
   14001f6fb:	mov    edi,0x5556f6d8
   14001f700:	add    al,dl
   14001f702:	pop    rcx
   14001f703:	std    
   14001f704:	jl     0x14001f6d1
   14001f706:	rex.WX movabs al,ds:0x842404bd34685605
   14001f710:	push   0xffffffffda38cb16
   14001f715:	mov    ecx,0x31bfebfd
   14001f71a:	sahf   
   14001f71b:	mov    esp,0xf374caf8
   14001f720:	jge    0x14001f741
   14001f722:	imul   eax,DWORD PTR [rdi+0x6f],0xf6bd70fb
   14001f729:	(bad)  
   14001f72a:	jae    0x14001f6f9
   14001f72c:	loop   0x14001f6c2
   14001f72e:	jp     0x14001f6dd
   14001f730:	ret    0x91d5
   14001f733:	mov    dh,0x35
   14001f735:	push   rsp
   14001f736:	xchg   ebp,eax
   14001f737:	ret    
   14001f738:	mov    eax,0xc1acc0b4
   14001f73d:	fist   DWORD PTR [rsi-0x57b3a4f0]
   14001f743:	xchg   ecx,eax
   14001f744:	jbe    0x14001f6ee
   14001f746:	repz stc 
   14001f748:	sbb    dh,BYTE PTR [rbp+0x67a3c12c]
   14001f74e:	sub    BYTE PTR [rax+0x6a49de5a],ah
   14001f754:	add    esi,esi
   14001f756:	(bad)  
   14001f757:	fcom   st(0)
   14001f759:	cli    
   14001f75a:	mov    BYTE PTR [rsi-0x12],ah
   14001f75d:	pop    rbx
   14001f75e:	ins    DWORD PTR es:[rdi],dx
   14001f75f:	(bad)  
   14001f760:	adc    dl,ah
   14001f762:	ror    BYTE PTR [rbx-0x4dad4c39],0x8f
   14001f769:	pop    rsi
   14001f76a:	adc    edx,DWORD PTR [rax+0x94db74e]
   14001f770:	mov    edi,0x52c46358
   14001f775:	lea    rcx,[r11]
   14001f778:	imul   ebx,eax,0xffffffc5
   14001f77b:	(bad)  
   14001f77c:	mov    dl,0x1c
   14001f77e:	and    edi,eax
   14001f780:	movsxd esp,esp
   14001f782:	rol    DWORD PTR [rbx+rdx*8],0x4c
   14001f786:	adc    bh,ch
   14001f788:	mov    ah,0x9b
   14001f78a:	rcr    BYTE PTR [rdx-0x4c],1
   14001f78d:	push   rdi
   14001f78e:	enter  0x19a6,0x2
   14001f792:	(bad)  
   14001f793:	neg    BYTE PTR [rbx+0x67]
   14001f796:	mov    al,0x4e
   14001f798:	fild   DWORD PTR [rbp+0x164608c5]
   14001f79e:	ins    BYTE PTR es:[rdi],dx
   14001f79f:	outs   dx,DWORD PTR ds:[rsi]
   14001f7a0:	pop    rdi
   14001f7a1:	loopne 0x14001f79a
   14001f7a3:	jge    0x14001f784
   14001f7a5:	mov    edi,0xe57ea7c5
   14001f7aa:	xchg   edi,eax
   14001f7ab:	mov    eax,0xfe15f576
   14001f7b0:	shl    DWORD PTR [rdi],0x7f
   14001f7b3:	xchg   ecx,eax
   14001f7b4:	sbb    BYTE PTR [rbx+rdx*4],bh
   14001f7b7:	mov    ch,0x75
   14001f7b9:	(bad)  
   14001f7ba:	mov    ecx,0xc99a78f2
   14001f7bf:	(bad)  
   14001f7c0:	in     eax,0xdc
   14001f7c2:	stc    
   14001f7c3:	or     ecx,DWORD PTR [rsi+rax*8+0x374dac6b]
   14001f7ca:	sbb    DWORD PTR [rdi-0x5c529c53],ebp
   14001f7d0:	(bad)  
   14001f7d1:	mov    ds,WORD PTR [rax-0x4b]
   14001f7d4:	sub    eax,0x4fca0f8d
   14001f7d9:	nop
   14001f7da:	repnz or BYTE PTR [rdx],ch
   14001f7dd:	push   rsp
   14001f7de:	mov    ebp,0x42bfda05
   14001f7e3:	pushf  
   14001f7e4:	rex.WRB js 0x14001f7dc
   14001f7e7:	rex.RB
   14001f7e8:	rex.X fnstenv [rcx+0x45]
   14001f7ec:	ret    
   14001f7ed:	(bad)  
   14001f7ee:	jb     0x14001f86d
   14001f7f0:	pop    rbp
   14001f7f1:	(bad)  
   14001f7f2:	nop
   14001f7f3:	rex.RXB lahf 
   14001f7f5:	xchg   ebx,eax
   14001f7f6:	ficom  WORD PTR [rdi+0x6e]
   14001f7f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001f7fa:	imul   edi,DWORD PTR [rsi+0x51],0x3c
   14001f7fe:	test   BYTE PTR [rax-0xa87abc1],dl
   14001f804:	jae    0x14001f7fe
   14001f806:	push   rbx
   14001f807:	pop    rsp
   14001f808:	out    dx,eax
   14001f809:	pushf  
   14001f80a:	rex.W
   14001f80b:	rex.WXB inc BYTE PTR [r13-0x5c]
   14001f80f:	nop
   14001f810:	jl     0x14001f7a8
   14001f812:	fisttp WORD PTR [rbx+0x42]
   14001f815:	sbb    eax,0xb854c774
   14001f81a:	iret   
   14001f81b:	xor    BYTE PTR [rbx+0x44],dh
   14001f81e:	cmp    ch,BYTE PTR [rip+0x1efedc92]        # 0x15f00d4b6
   14001f824:	sub    BYTE PTR [rcx],0x2b
   14001f827:	mov    ebx,0x488d84ac
   14001f82c:	leave  
   14001f82d:	sub    ecx,DWORD PTR [rcx-0x32]
   14001f830:	push   rbx
   14001f831:	sub    BYTE PTR [rdx],bl
   14001f833:	or     dl,dl
   14001f835:	out    dx,eax
   14001f836:	lahf   
   14001f837:	add    DWORD PTR [rax-0x63],ecx
   14001f83a:	movabs eax,ds:0x968d12825474b08
   14001f843:	rex.WXB
   14001f844:	rex.WX in al,dx
   14001f846:	rex.XB (bad) 
   14001f848:	ins    DWORD PTR es:[rdi],dx
   14001f849:	xchg   esi,eax
   14001f84a:	ret    0xbdff
   14001f84d:	fild   QWORD PTR [rdx-0x24528310]
   14001f853:	pop    rbx
   14001f854:	add    QWORD PTR [r12+rsi*4],rdi
   14001f858:	mov    edx,0x5878d98a
   14001f85d:	clc    
   14001f85e:	fwait
   14001f85f:	hlt    
   14001f860:	mov    esp,0x42bcb749
   14001f865:	and    al,0x44
   14001f867:	xchg   BYTE PTR [rdi],ah
   14001f869:	(bad)  
   14001f86a:	(bad)  
   14001f86b:	retf   
   14001f86c:	rcl    ebx,cl
   14001f86e:	pop    rdi
   14001f86f:	(bad)  
   14001f870:	(bad)  
   14001f871:	xchg   ebx,eax
   14001f872:	mov    ch,0x97
   14001f874:	pop    rsi
   14001f875:	pushf  
   14001f876:	pushf  
   14001f877:	mov    esi,0xf5933ded
   14001f87c:	idiv   DWORD PTR [rsi-0x3c]
   14001f87f:	sti    
   14001f880:	mov    ecx,edi
   14001f882:	mov    bl,BYTE PTR [rbp+0x30]
   14001f885:	pop    rdx
   14001f886:	(bad)  
   14001f887:	jrcxz  0x14001f8cc
   14001f889:	shl    BYTE PTR [rsi+0x54b95f16],0xeb
   14001f890:	(bad)  
   14001f891:	(bad)  
   14001f892:	(bad)  
   14001f893:	in     al,dx
   14001f894:	pushf  
   14001f895:	cmp    ebp,ebx
   14001f897:	test   BYTE PTR [rcx+0x126f821],al
   14001f89d:	cmp    cl,BYTE PTR [rsp+rbp*4]
   14001f8a0:	movabs ds:0x415a10de311b142e,al
   14001f8a9:	pop    rsp
   14001f8aa:	(bad)  
   14001f8ab:	(bad)  
   14001f8ac:	sub    eax,DWORD PTR [rip+0x3f1d18f8]        # 0x17f1f11aa
   14001f8b2:	adc    eax,0x68af56db
   14001f8b7:	adc    dl,BYTE PTR [rax+0x63]
   14001f8ba:	sbb    al,0xb1
   14001f8bc:	add    eax,0xa56a2a9
   14001f8c1:	(bad)  
   14001f8c2:	xchg   esi,eax
   14001f8c3:	(bad)  
   14001f8c4:	mov    esi,0x6a6b0633
   14001f8c9:	int    0xec
   14001f8cb:	iret   
   14001f8cc:	mov    bh,0x71
   14001f8ce:	repz rex.WRB in al,0x68
   14001f8d2:	add    ebx,ebx
   14001f8d4:	mov    ?,WORD PTR [rax]
   14001f8d6:	ins    DWORD PTR es:[rdi],dx
   14001f8d7:	test   DWORD PTR [rcx-0x4b4e5dfd],ecx
   14001f8dd:	(bad)  
   14001f8de:	stos   BYTE PTR es:[rdi],al
   14001f8df:	sub    ch,BYTE PTR [rip+0xfffffffff9e42b6e]        # 0x139e62453
   14001f8e5:	jnp    0x14001f90b
   14001f8e7:	adc    DWORD PTR [r11-0x508d7ce6],ebx
   14001f8ee:	jge    0x14001f8fc
   14001f8f0:	clc    
   14001f8f1:	push   0xffffffffef1de679
   14001f8f6:	loope  0x14001f8e9
   14001f8f8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001f8f9:	faddp  st(6),st
   14001f8fb:	out    dx,al
   14001f8fc:	(bad)  
   14001f8fd:	sbb    eax,0xcff9f4be
   14001f902:	jno    0x14001f8f1
   14001f904:	ficom  DWORD PTR [rbp+0x6e]
   14001f907:	mov    esi,0xbcaf1af6
   14001f90c:	lock mov esp,0xfc4807ce
   14001f912:	add    al,bl
   14001f914:	xchg   ecx,eax
   14001f915:	push   rdx
   14001f916:	jns    0x14001f8c5
   14001f918:	rex.WRXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14001f91a:	or     al,0x6
   14001f91c:	rex.XB
   14001f91d:	ss ss mov bh,0xd9
   14001f921:	mov    esp,0xc1a15170
   14001f926:	ror    DWORD PTR [rbp-0x5e],cl
   14001f929:	adc    eax,0x2223d6c
   14001f92e:	rex.WRB shr QWORD PTR [r8-0x7e],cl
   14001f932:	xor    edi,eax
   14001f934:	fcmovb st,st(5)
   14001f936:	ins    DWORD PTR es:[rdi],dx
   14001f937:	out    dx,al
   14001f938:	in     al,dx
   14001f939:	jmp    0x10f857ad5
   14001f93e:	(bad)  
   14001f93f:	fstp   TBYTE PTR [rip+0x5de9dd3]        # 0x145e09718
   14001f945:	fld    DWORD PTR [rax-0x55]
   14001f948:	push   rbp
   14001f949:	xchg   esp,eax
   14001f94a:	(bad)  
   14001f94b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001f94c:	rex.WXB ins DWORD PTR es:[rdi],dx
   14001f94e:	(bad)  
   14001f94f:	(bad)  
   14001f950:	iret   
   14001f951:	and    eax,0x3f748b2b
   14001f956:	je     0x14001f92e
   14001f958:	fldenv [rdx+rcx*4+0x48204e40]
   14001f95f:	sub    cl,cl
   14001f961:	adc    eax,0x5c5ec556
   14001f966:	sahf   
   14001f967:	or     DWORD PTR [rsp+rdx*2+0x3f],eax
   14001f96b:	rex.W fst DWORD PTR [rbx+0x39024a98]
   14001f972:	(bad)  
   14001f973:	xchg   ecx,eax
   14001f974:	xchg   DWORD PTR [rax+rbp*8-0x46cb5e4c],esi
   14001f97b:	sub    al,BYTE PTR [rdi-0x38305dce]
   14001f981:	sub    al,0x9e
   14001f983:	cmp    eax,0x3ef2450f
   14001f988:	div    dh
   14001f98a:	pop    rdi
   14001f98b:	out    0x5f,eax
   14001f98d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001f98e:	rex.R
   14001f98f:	repnz xor cl,BYTE PTR gs:[rdx-0x3b]
   14001f994:	and    esi,esi
   14001f996:	rcl    bl,0xc9
   14001f999:	sbb    ecx,edx
   14001f99b:	and    DWORD PTR [rax-0x4fabb7b8],eax
   14001f9a1:	(bad)  
   14001f9a2:	dec    DWORD PTR [rip+0xffffffff9017b201]        # 0xd019aba9
   14001f9a8:	test   DWORD PTR [rdi],edi
   14001f9aa:	or     edi,DWORD PTR [rbx]
   14001f9ac:	je     0x14001f970
   14001f9ae:	push   rax
   14001f9b0:	sti    
   14001f9b1:	movsxd ecx,DWORD PTR [rax]
   14001f9b3:	or     al,0x8e
   14001f9b5:	(bad)  
   14001f9b6:	div    BYTE PTR [rsi+0x4f]
   14001f9b9:	addr32 jnp 0x14001f97b
   14001f9bc:	je     0x14001f9ba
   14001f9be:	loopne 0x14001f9a5
   14001f9c0:	xchg   edi,eax
   14001f9c1:	xlat   BYTE PTR ds:[rbx]
   14001f9c2:	(bad)  
   14001f9c3:	(bad)  
   14001f9c4:	jg     0x14001fa38
   14001f9c6:	mov    dl,0xf9
   14001f9c8:	sub    DWORD PTR [rdi-0xb],0xdda7adcb
   14001f9cf:	push   0xffffffff8d71ea60
   14001f9d4:	ins    DWORD PTR es:[rdi],dx
   14001f9d5:	cmp    al,0x4d
   14001f9d7:	(bad)  
   14001f9d8:	loop   0x14001fa44
   14001f9da:	ror    esi,0x3
   14001f9dd:	ret    
   14001f9de:	loope  0x14001f9f0
   14001f9e0:	jnp    0x14001fa5e
   14001f9e2:	(bad)  
   14001f9e3:	push   rdi
   14001f9e4:	ins    DWORD PTR es:[rdi],dx
   14001f9e5:	shl    DWORD PTR [rdx+0xb],cl
   14001f9e8:	fist   WORD PTR [rdx-0x54]
   14001f9eb:	push   rax
   14001f9ec:	mov    WORD PTR [rcx-0x8],cs
   14001f9ef:	lods   eax,DWORD PTR ds:[rsi]
   14001f9f0:	jbe    0x14001fa16
   14001f9f2:	shr    dl,cl
   14001f9f4:	je     0x14001f999
   14001f9f6:	and    BYTE PTR [rsi],al
   14001f9f8:	outs   dx,DWORD PTR ds:[rsi]
   14001f9f9:	cmp    eax,0x44bd44c6
   14001f9fe:	shl    ch,cl
   14001fa00:	(bad)  
   14001fa01:	mov    al,0x5a
   14001fa03:	xor    DWORD PTR [rax],edx
   14001fa05:	shl    BYTE PTR [rcx+riz*1-0x59],cl
   14001fa09:	sbb    eax,0x4e2c567b
   14001fa0e:	xchg   ah,dl
   14001fa10:	mov    WORD PTR [rcx-0x1c27a469],gs
   14001fa16:	repz mov eax,0x336c4d93
   14001fa1c:	ret    0x152
   14001fa1f:	(bad)  
   14001fa20:	outs   dx,DWORD PTR ds:[rsi]
   14001fa21:	rex.RB
   14001fa22:	rex.WXB xchg r9,rax
   14001fa24:	push   rcx
   14001fa25:	sub    eax,0x20423184
   14001fa2a:	mov    ebx,0x914742df
   14001fa2f:	rex.WRX mov dil,0xf8
   14001fa32:	add    al,0x82
   14001fa34:	push   0x58b96ff2
   14001fa39:	loopne 0x14001fa7e
   14001fa3b:	(bad)  
   14001fa3c:	jmp    0x14001fa3a
   14001fa3e:	movsxd edi,esp
   14001fa40:	(bad)  
   14001fa41:	fbstp  TBYTE PTR [rbp-0x77]
   14001fa44:	movq   QWORD PTR [rcx+rax*8-0x22],mm6
   14001fa49:	out    dx,al
   14001fa4a:	sbb    eax,0xc6bb5fae
   14001fa4f:	(bad)  
   14001fa50:	push   rdi
   14001fa51:	pop    rsi
   14001fa52:	out    0xda,al
   14001fa54:	stos   DWORD PTR es:[rdi],eax
   14001fa55:	scas   eax,DWORD PTR es:[rdi]
   14001fa56:	loop   0x14001fa33
   14001fa58:	xchg   esi,eax
   14001fa59:	(bad)
   14001fa5c:	cld    
   14001fa5d:	je     0x14001fa25
   14001fa5f:	(bad)  
   14001fa60:	fnstsw WORD PTR [rbx+0x295418c4]
   14001fa66:	or     al,0x87
   14001fa68:	or     al,0x86
   14001fa6a:	and    ebp,DWORD PTR [rcx+rsi*4+0x716f6c6c]
   14001fa71:	in     eax,0xa9
   14001fa73:	addr32 pop rax
   14001fa75:	fcmovnu st,st(0)
   14001fa77:	(bad)  
   14001fa78:	xor    al,0x9c
   14001fa7a:	jo     0x14001fa6d
   14001fa7c:	xchg   ecx,eax
   14001fa7d:	(bad)  
   14001fa7e:	or     BYTE PTR [rdx+0x12],ah
   14001fa81:	stos   BYTE PTR es:[rdi],al
   14001fa82:	rex.WRB (bad) 
   14001fa84:	or     al,0xe9
   14001fa86:	movs   BYTE PTR es:[rdi],BYTE PTR cs:[rsi]
   14001fa88:	add    eax,0xe376185f
   14001fa8d:	cdq    
   14001fa8e:	fs push rsi
   14001fa90:	fdivrp st(2),st
   14001fa92:	stos   DWORD PTR es:[rdi],eax
   14001fa93:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001fa94:	cmp    BYTE PTR [r11-0x38],r11b
   14001fa98:	(bad)  
   14001fa99:	(bad)  
   14001fa9a:	scas   eax,DWORD PTR es:[rdi]
   14001fa9b:	movabs eax,ds:0x44ac97d227c27ebf
   14001faa4:	mov    dl,0xeb
   14001faa6:	lods   eax,DWORD PTR ds:[rsi]
   14001faa7:	lods   eax,DWORD PTR ds:[rsi]
   14001faa8:	iret   
   14001faa9:	xchg   ecx,eax
   14001faaa:	fsub   QWORD PTR [rcx+0x67]
   14001faad:	rex.WR mov BYTE PTR [rdx],0x9c
   14001fab1:	sbb    eax,0x1309ddb9
   14001fab6:	sub    DWORD PTR [rdi+0x48850290],ecx
   14001fabc:	add    DWORD PTR [rsi],eax
   14001fabe:	in     eax,0x3c
   14001fac0:	rex.B
   14001fac1:	sbb    ax,0x28ca
   14001fac5:	rex
   14001fac6:	rex.RB hlt 
   14001fac8:	imul   edi,esp,0x2529a26f
   14001face:	pop    rbx
   14001facf:	jmp    0x18f2333dd
   14001fad4:	add    al,0xce
   14001fad6:	retf   0x8e8d
   14001fad9:	(bad)  
   14001fada:	rex.WR cli 
   14001fadc:	fimul  WORD PTR [rcx-0xe]
   14001fadf:	rex.RX or r15b,BYTE PTR [rcx-0x57]
   14001fae3:	jle    0x14001fa87
   14001fae5:	xor    BYTE PTR [rbx],cl
   14001fae7:	rex.WXB
   14001fae8:	rex.WRXB or r13,r12
   14001faeb:	push   rdi
   14001faec:	test   DWORD PTR [rsi+0xb],edi
   14001faef:	leave  
   14001faf0:	ret    
   14001faf1:	test   eax,0x7b743782
   14001faf6:	sub    ebp,DWORD PTR [rdx]
   14001faf8:	sub    BYTE PTR [rsi],0x28
   14001fafb:	jmp    0x14001fb11
   14001fafd:	and    BYTE PTR [rax+0x79d0c04a],0x0
   14001fb04:	popf   
   14001fb05:	outs   dx,DWORD PTR ds:[rsi]
   14001fb06:	fcom   DWORD PTR [rcx-0x3c]
   14001fb09:	test   DWORD PTR [rbx-0x7a],0xecc8f7a1
   14001fb10:	in     al,0x60
   14001fb12:	ja     0x14001fb45
   14001fb14:	(bad)  
   14001fb15:	cmp    al,0x79
   14001fb17:	jo     0x14001fb11
   14001fb19:	rcl    ch,cl
   14001fb1b:	mov    ch,0xf5
   14001fb1d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001fb1e:	scas   al,BYTE PTR es:[rdi]
   14001fb1f:	lods   al,BYTE PTR ds:[rsi]
   14001fb20:	outs   dx,DWORD PTR ds:[rsi]
   14001fb21:	jg     0x14001fb0b
   14001fb23:	fcmovnu st,st(2)
   14001fb25:	ror    DWORD PTR [rbp-0x287239d5],cl
   14001fb2b:	xchg   BYTE PTR [rbx+0x2455da13],bl
   14001fb31:	test   BYTE PTR [rsi],al
   14001fb33:	cmp    DWORD PTR [rdi-0x5f],esp
   14001fb36:	lods   eax,DWORD PTR ds:[rsi]
   14001fb37:	xchg   ecx,eax
   14001fb38:	movabs ds:0x3968df041ba3b44b,eax
   14001fb41:	(bad)  
   14001fb42:	fld    st(4)
   14001fb44:	movs   BYTE PTR es:[rdi],BYTE PTR ss:[rsi]
   14001fb46:	rcr    bh,1
   14001fb48:	cwde   
   14001fb49:	test   BYTE PTR [rdx-0x23],0xfd
   14001fb4d:	fcomp  QWORD PTR [rbp+0x48]
   14001fb50:	movabs eax,ds:0xc48b8c0e2026f2c0
   14001fb59:	stos   BYTE PTR es:[rdi],al
   14001fb5a:	push   rdx
   14001fb5b:	fsubr  DWORD PTR [rsi+0x54]
   14001fb5e:	sbb    BYTE PTR [rdi-0x2bc9ee6d],ch
   14001fb64:	push   rsp
   14001fb65:	(bad)  
   14001fb66:	rex.X xor eax,0x362cc0df
   14001fb6c:	mov    al,0xb3
   14001fb6e:	sub    esi,eax
   14001fb70:	scas   eax,DWORD PTR es:[rdi]
   14001fb71:	(bad)  
   14001fb72:	movabs ds:0x9545d0f022436da5,al
   14001fb7b:	and    cl,BYTE PTR [rdi-0x62f4db7c]
   14001fb81:	and    DWORD PTR [rax],esi
   14001fb83:	push   rdx
   14001fb84:	sub    al,0x22
   14001fb86:	rex.W push rcx
   14001fb88:	ds ds (bad) 
   14001fb8b:	push   rdx
   14001fb8c:	rex.RX or r11d,esi
   14001fb8f:	jrcxz  0x14001fb6c
   14001fb91:	xchg   esi,eax
   14001fb92:	add    DWORD PTR es:[rdi-0x1ae1482a],ebx
   14001fb99:	rex.XB (bad) 
   14001fb9b:	lahf   
   14001fb9c:	loopne 0x14001fb39
   14001fb9e:	(bad)  
   14001fb9f:	cli    
   14001fba0:	xor    DWORD PTR [rsi],ecx
   14001fba2:	psadbw mm7,QWORD PTR [rcx+0x5e35f379]
   14001fba9:	jle    0x14001fb8c
   14001fbab:	add    eax,0xc9badcee
   14001fbb0:	in     al,dx
   14001fbb1:	fs (bad) 
   14001fbb3:	jl     0x14001fbf3
   14001fbb5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001fbb6:	pop    rcx
   14001fbb7:	lods   eax,DWORD PTR ds:[rsi]
   14001fbb8:	cwde   
   14001fbb9:	(bad)  
   14001fbba:	cmp    DWORD PTR [rbx-0x1f03ed3c],ecx
   14001fbc0:	rol    DWORD PTR [rcx],0x37
   14001fbc3:	pop    rdi
   14001fbc4:	mov    ebx,0x812b89ae
   14001fbc9:	jmp    0x11af38f42
   14001fbce:	sbb    dl,BYTE PTR [rdi]
   14001fbd0:	(bad)  
   14001fbd1:	jns    0x14001fb67
   14001fbd3:	repz (bad) 
   14001fbd5:	cs push rcx
   14001fbd7:	sysret 
   14001fbd9:	rex.WR mov dil,0xce
   14001fbdc:	movsxd ebp,DWORD PTR [rdx+0x63506e01]
   14001fbe2:	stos   DWORD PTR es:[rdi],eax
   14001fbe3:	adc    DWORD PTR [rsi-0x159db01],0xb7ec1e88
   14001fbed:	fdivr  DWORD PTR [rsi+rcx*2+0xe19c29]
   14001fbf4:	rex.W push rdi
   14001fbf6:	pop    rbx
   14001fbf7:	push   rdx
   14001fbf8:	cmp    al,0x3c
   14001fbfa:	retf   
   14001fbfb:	and    ecx,edx
   14001fbfd:	retf   
   14001fbfe:	gs rex.WRX cqo 
   14001fc01:	repnz and cl,BYTE PTR [rcx+rbx*8]
   14001fc05:	ins    DWORD PTR es:[rdi],dx
   14001fc06:	(bad)  
   14001fc07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   14001fc09:	rex.RXB adc r12b,BYTE PTR [r15]
   14001fc0c:	and    cl,ch
   14001fc0e:	mov    bh,0x34
   14001fc10:	iret   
   14001fc11:	xchg   ebx,eax
   14001fc12:	repz (bad) 
   14001fc14:	pop    rbp
   14001fc15:	pop    rdi
   14001fc16:	(bad)  
   14001fc17:	and    DWORD PTR [rbx],ebp
   14001fc19:	shl    esp,cl
   14001fc1b:	jmp    0x13e441117
   14001fc20:	rex.X cmc 
   14001fc22:	or     al,0xca
   14001fc24:	mov    ebx,0x88042f3b
   14001fc29:	mov    ebp,eax
   14001fc2b:	(bad)  
   14001fc2c:	(bad)  
   14001fc2d:	sti    
   14001fc2e:	(bad)  
   14001fc2f:	push   rsp
   14001fc30:	test   DWORD PTR [rbp-0x6],esp
   14001fc33:	mov    ebx,0xb3fadc57
   14001fc38:	lea    ebp,[rcx+0x64]
   14001fc3b:	rex.W jae 0x14001fc2f
   14001fc3e:	mov    ss,esp
   14001fc40:	jrcxz  0x14001fc0b
   14001fc42:	(bad)  
   14001fc43:	xchg   BYTE PTR [rsi-0x1eaf0300],al
   14001fc49:	int    0xd3
   14001fc4b:	add    BYTE PTR [rdi+0x45],ch
   14001fc4e:	add    eax,0x60beb790
   14001fc53:	ret    
   14001fc54:	pop    rcx
   14001fc55:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001fc56:	sar    BYTE PTR [rdi],1
   14001fc58:	and    ebx,ecx
   14001fc5a:	(bad)  
   14001fc5b:	in     eax,dx
   14001fc5c:	(bad)  
   14001fc5e:	lahf   
   14001fc5f:	ins    DWORD PTR es:[rdi],dx
   14001fc60:	add    DWORD PTR [rcx+0x17ef11f7],0xba5e69b1
   14001fc6a:	jle    0x14001fce0
   14001fc6c:	clc    
   14001fc6d:	ret    0xf58d
   14001fc70:	lods   eax,DWORD PTR ds:[rsi]
   14001fc71:	addr32 (bad) 
   14001fc73:	sbb    eax,0x83e7bdaf
   14001fc78:	int    0xe2
   14001fc7a:	cld    
   14001fc7b:	adc    edx,ebp
   14001fc7d:	lock cld 
   14001fc7f:	in     eax,0xd5
   14001fc81:	ins    BYTE PTR es:[rdi],dx
   14001fc82:	sub    al,0x12
   14001fc84:	(bad)  
   14001fc85:	or     al,0xc7
   14001fc87:	xor    eax,0x591b74e1
   14001fc8c:	mov    edi,0x68d72344
   14001fc91:	fs xchg ch,dh
   14001fc94:	xor    eax,0x1b110cd6
   14001fc99:	mov    al,0x41
   14001fc9b:	rex.WXB
   14001fc9c:	rex.R (bad) 
   14001fc9e:	cli    
   14001fc9f:	sbb    esp,DWORD PTR [rbp-0x8]
   14001fca2:	xor    DWORD PTR [rcx+0x2d],edx
   14001fca5:	test   bh,dl
   14001fca7:	xchg   esi,eax
   14001fca8:	rex.WRX in eax,0xed
   14001fcab:	(bad)  
   14001fcac:	adc    BYTE PTR [rip+0x70c1bb03],bl        # 0x1b0c3b7b5
   14001fcb2:	jne    0x14001fcb5
   14001fcb4:	mov    ebx,0x6019621a
   14001fcb9:	test   QWORD PTR [r9-0x1c079d7f],r10
   14001fcc0:	or     BYTE PTR [rbx],bl
   14001fcc2:	xchg   eax,ebx
   14001fcc4:	jbe    0x14001fcca
   14001fcc6:	shl    DWORD PTR [rax-0x107da494],0x16
   14001fccd:	sub    esp,DWORD PTR [rdx+0x12]
   14001fcd0:	jmp    0xd5e6a162
   14001fcd5:	cmp    DWORD PTR [rbx-0x4356cc1a],edi
   14001fcdb:	push   rcx
   14001fcdc:	adc    BYTE PTR [rbx],dl
   14001fcde:	add    bh,BYTE PTR [rsi]
   14001fce0:	xor    esp,DWORD PTR [rax]
   14001fce2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001fce3:	xor    DWORD PTR [rbp-0x7],ebx
   14001fce6:	in     al,0xc5
   14001fce8:	sbb    BYTE PTR [rcx-0x52],bl
   14001fceb:	(bad)  
   14001fcec:	int3   
   14001fced:	out    0x7a,eax
   14001fcef:	cli    
   14001fcf0:	xchg   ch,dh
   14001fcf2:	sbb    bl,bh
   14001fcf4:	lock dec BYTE PTR [rdi]
   14001fcf7:	repz movabs eax,ds:0xc1e1c16ad5947f0f
   14001fd01:	xlat   BYTE PTR ds:[rbx]
   14001fd03:	pop    rdi
   14001fd04:	jge    0x14001fc8b
   14001fd06:	jmp    0x14001fcdf
   14001fd08:	scas   al,BYTE PTR es:[rdi]
   14001fd09:	mov    dl,0xb3
   14001fd0b:	mov    bl,0xc3
   14001fd0d:	(bad)  
   14001fd0e:	ficomp WORD PTR [rsi]
   14001fd10:	rex.RXB mov DWORD PTR [r15-0x8],0xda758379
   14001fd18:	jb     0x14001fd87
   14001fd1a:	lods   al,BYTE PTR ds:[rsi]
   14001fd1b:	in     eax,0xf0
   14001fd1d:	lock and bl,0x93
   14001fd21:	movsxd ebp,esi
   14001fd23:	fidivr WORD PTR [rcx-0x45421a53]
   14001fd29:	(bad)
   14001fd2e:	(bad)  
   14001fd2f:	es jmp 0x14001fccd
   14001fd32:	fwait
   14001fd33:	lods   al,BYTE PTR ds:[rsi]
   14001fd34:	rex.WRXB (bad) 
   14001fd36:	fcomp  st(0)
   14001fd38:	cmp    al,bh
   14001fd3a:	cli    
   14001fd3b:	out    0x16,al
   14001fd3d:	adc    ecx,0x4
   14001fd40:	(bad)  
   14001fd41:	sbb    BYTE PTR [rax],dh
   14001fd43:	cdq    
   14001fd44:	lods   al,BYTE PTR ds:[rsi]
   14001fd45:	jrcxz  0x14001fd8a
   14001fd47:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fd48:	icebp  
   14001fd49:	ins    DWORD PTR es:[rdi],dx
   14001fd4a:	stos   BYTE PTR es:[rdi],al
   14001fd4b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001fd4c:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001fd4e:	test   dl,0xc6
   14001fd51:	cmp    esi,esi
   14001fd53:	pop    rdx
   14001fd54:	ins    BYTE PTR es:[rdi],dx
   14001fd55:	mov    bl,0x30
   14001fd57:	fs add esi,ecx
   14001fd5a:	mov    ch,0xfb
   14001fd5c:	pop    rax
   14001fd5d:	pop    rsp
   14001fd5e:	repz je 0x14001fd3d
   14001fd61:	rex.RB dec DWORD PTR [r9]
   14001fd64:	mov    ecx,0xeb7246dc
   14001fd69:	ins    DWORD PTR es:[rdi],dx
   14001fd6a:	mov    dl,0xc2
   14001fd6c:	rex.WX (bad) 
   14001fd6e:	and    esp,DWORD PTR [rdi-0x35]
   14001fd71:	jl     0x14001fd2c
   14001fd73:	rex.R xchg edi,eax
   14001fd75:	test   eax,0x7d11e877
   14001fd7a:	es (bad) 
   14001fd7c:	rex.WRXB jmp 0x14460c9f6
   14001fd82:	stc    
   14001fd83:	mov    bh,0xe9
   14001fd85:	in     eax,dx
   14001fd86:	xchg   ebx,eax
   14001fd87:	je     0x14001fd6a
   14001fd89:	rex.W retf 0xa872
   14001fd8d:	(bad)  
   14001fd8e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001fd8f:	movabs ds:0x460cf228a4c250c8,eax
   14001fd98:	mov    dl,0xe5
   14001fd9a:	rex.WRXB and QWORD PTR [r14+0x1e895e49],r12
   14001fda1:	rex.RX
   14001fda2:	repnz and al,0x8a
   14001fda5:	sbb    dh,BYTE PTR [rcx]
   14001fda7:	cmp    al,BYTE PTR [rsi+0x6537fbce]
   14001fdad:	sub    BYTE PTR [rax],cl
   14001fdaf:	mov    esp,0x2f4014f5
   14001fdb4:	ins    DWORD PTR es:[rdi],dx
   14001fdb5:	add    edi,DWORD PTR [rbp+0xf511fb]
   14001fdbb:	cli    
   14001fdbc:	jns    0x14001fd40
   14001fdbe:	jle    0x14001fe32
   14001fdc0:	mov    al,0x9f
   14001fdc2:	(bad)  
   14001fdc3:	enter  0x82d5,0x15
   14001fdc7:	xor    BYTE PTR [rax-0x9],cl
   14001fdca:	pop    rbx
   14001fdcb:	movabs al,ds:0x73bfb067bc0c3ef1
   14001fdd4:	cmc    
   14001fdd5:	cmc    
   14001fdd6:	ret    
   14001fdd7:	(bad)  [rbx-0x121cb8c9]
   14001fddd:	in     eax,dx
   14001fdde:	sar    edx,1
   14001fde0:	ror    edi,cl
   14001fde2:	(bad)  
   14001fde3:	or     DWORD PTR [rbx-0x71],0xffffffb5
   14001fde7:	repz addr32 lahf 
   14001fdea:	fidivr WORD PTR [rsi-0x1c]
   14001fded:	leave  
   14001fdee:	sub    eax,0xf7b2299a
   14001fdf3:	jle    0x14001fd7b
   14001fdf5:	sbb    edx,DWORD PTR [rdi-0x3ed10a10]
   14001fdfb:	sbb    eax,0x443b74b3
   14001fe00:	mov    bh,0xc4
   14001fe02:	cwde   
   14001fe03:	mov    cl,dl
   14001fe05:	mov    ?,WORD PTR [rax]
   14001fe07:	mov    cl,0x4a
   14001fe09:	sbb    DWORD PTR [rdx+0x75],ebp
   14001fe0c:	rex.WR mov rcx,ss
   14001fe0f:	rex.R pushf 
   14001fe11:	test   eax,0xac4f4bb5
   14001fe16:	movabs ds:0xbc41897e60c1b36,eax
   14001fe1f:	push   rsp
   14001fe20:	jno    0x14001fe6c
   14001fe22:	and    eax,0x29718c23
   14001fe27:	jbe    0x14001fe7e
   14001fe29:	add    DWORD PTR ds:[rbp-0x1b],eax
   14001fe2d:	or     DWORD PTR [rcx+0x5a136869],esp
   14001fe33:	xor    BYTE PTR [rdi-0x683c4543],dl
   14001fe39:	out    dx,al
   14001fe3a:	lods   al,BYTE PTR ds:[rsi]
   14001fe3b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fe3c:	pop    rbx
   14001fe3d:	sbb    DWORD PTR [rdi+0x6213d3e6],0x14ed0522
   14001fe47:	mov    dl,ah
   14001fe49:	call   0xe6024091
   14001fe4e:	rex.RB xchg r14d,eax
   14001fe50:	xchg   edx,eax
   14001fe51:	pop    rsi
   14001fe52:	mov    bl,0xd3
   14001fe54:	cmp    DWORD PTR [rdi+0x11ac33c7],eax
   14001fe5a:	(bad)  
   14001fe5b:	movabs ds:0x3db7c8f9975b1b31,eax
   14001fe64:	int    0xb7
   14001fe66:	jge    0x14001fdef
   14001fe68:	movsxd edi,DWORD PTR [rcx+0x1d98b398]
   14001fe6e:	repz (bad) 
   14001fe71:	imul   ebx,esp,0xffffffbe
   14001fe74:	jne    0x14001fe01
   14001fe76:	mov    ebx,0xf771eef7
   14001fe7b:	(bad)  
   14001fe7c:	ins    DWORD PTR es:[rdi],dx
   14001fe7d:	(bad)  
   14001fe7e:	div    edi
   14001fe80:	cdq    
   14001fe81:	int    0x4e
   14001fe83:	mov    al,0x21
   14001fe85:	push   rax
   14001fe86:	push   rbp
   14001fe87:	adc    eax,0x549b9beb
   14001fe8c:	cmc    
   14001fe8d:	and    al,0x3d
   14001fe90:	nop    DWORD PTR [rax+riz*8]
   14001fe94:	lock jo 0x14001fe36
   14001fe97:	sbb    BYTE PTR [rip+0xffffffffc55cec0a],dl        # 0x1055eeaa7
   14001fe9d:	push   0xfffffffff07a5438
   14001fea2:	jmp    0xd4eb91cd
   14001fea7:	lea    ebp,[rbp-0x64582993]
   14001fead:	test   cl,r8b
   14001feb0:	jo     0x14001feb6
   14001feb2:	(bad)  
   14001feb3:	adc    DWORD PTR [rdx-0x3c],eax
   14001feb6:	(bad)  
   14001feb7:	jle    0x14001feaf
   14001feb9:	and    dl,0x1a
   14001febc:	add    DWORD PTR [ecx+eiz*1],ebp
   14001fec0:	rex.XB leave 
   14001fec2:	loopne 0x14001fe6f
   14001fec4:	pop    rsp
   14001fec5:	test   esp,esp
   14001fec7:	sub    eax,0x68c06f48
   14001fecc:	shr    DWORD PTR [rax],1
   14001fece:	popf   
   14001fecf:	cmp    edx,DWORD PTR [rax-0x7baf7cbe]
   14001fed5:	cmp    DWORD PTR [rbx],ebp
   14001fed7:	adc    ch,al
   14001fed9:	nop
   14001feda:	and    DWORD PTR [rdx-0x4eb6c523],0x295befea
   14001fee4:	fs sbb al,0x65
   14001fee7:	jg     0x14001fef5
   14001fee9:	sbb    bl,BYTE PTR [rdi-0x56]
   14001feec:	push   rax
   14001feed:	ja     0x14001fede
   14001feef:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001fef0:	jl     0x14001ff61
   14001fef2:	push   rsi
   14001fef3:	int3   
   14001fef4:	stos   BYTE PTR es:[rdi],al
   14001fef5:	push   rdx
   14001fef6:	retf   0x88b1
   14001fef9:	adc    al,0x8f
   14001fefb:	add    ebp,DWORD PTR [rax]
   14001fefd:	in     al,dx
   14001fefe:	(bad)  
   14001feff:	sub    cl,BYTE PTR [ecx]
   14001ff02:	ror    BYTE PTR [rcx+0x627ebe7d],cl
   14001ff08:	adc    al,0xf8
   14001ff0a:	xor    al,0x1c
   14001ff0c:	(bad)  
   14001ff0d:	fbstp  TBYTE PTR [rcx+rdi*1]
   14001ff10:	jge    0x14001febd
   14001ff12:	sub    DWORD PTR [rax],eax
   14001ff14:	cmp    BYTE PTR [rbx],ch
   14001ff16:	cld    
   14001ff17:	addr32 jmp 0x14001ff61
   14001ff1a:	pop    rdi
   14001ff1b:	sahf   
   14001ff1c:	sbb    edi,DWORD PTR [rax-0x48]
   14001ff1f:	rex.X loopne 0x14001ff73
   14001ff22:	shr    DWORD PTR [rdi+0x6dfeffd3],0x90
   14001ff29:	outs   dx,DWORD PTR ds:[rsi]
   14001ff2a:	adc    DWORD PTR [rdx],ebp
   14001ff2c:	(bad)  
   14001ff2d:	sbb    BYTE PTR [rsp+rbx*4-0x63601014],bl
   14001ff34:	in     al,dx
   14001ff35:	call   rbx
   14001ff37:	shl    DWORD PTR [rax+0x7c1ecf1a],0xe9
   14001ff3e:	icebp  
   14001ff3f:	cmp    ebx,0xffffff9b
   14001ff42:	(bad)  
   14001ff43:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001ff44:	pop    rbx
   14001ff45:	out    dx,eax
   14001ff46:	jp     0x14001ff12
   14001ff48:	push   rsp
   14001ff49:	rex.WRXB movabs r15,0xc618fb1b5d3c9edd
   14001ff53:	pushf  
   14001ff54:	xor    bh,BYTE PTR [rdi+rdi*4]
   14001ff57:	and    al,0x54
   14001ff59:	rex.RXB js 0x14001ffd3
   14001ff5c:	(bad)  
   14001ff5d:	stos   BYTE PTR es:[rdi],al
   14001ff5e:	mov    esi,0x100f7043
   14001ff63:	adc    DWORD PTR [rbp+0x6e2d6e8],esi
   14001ff69:	add    ebp,DWORD PTR [rdx]
   14001ff6b:	xor    esp,DWORD PTR [rdx+riz*2+0x536c3a8b]
   14001ff72:	sub    eax,0x16c3a936
   14001ff77:	jne    0x14001ff55
   14001ff79:	movabs al,ds:0xc782f04066d4d41e
   14001ff82:	not    BYTE PTR [rsp+rbx*2+0x1a]
   14001ff86:	xchg   esp,eax
   14001ff87:	adc    DWORD PTR [rbp-0x77],edi
   14001ff8a:	pop    rbp
   14001ff8b:	repz movabs ds:0x214863cd650f7fd7,al
   14001ff95:	rex.B (bad) 
   14001ff97:	add    ch,BYTE PTR [rax-0x7f576025]
   14001ff9d:	movsxd ebp,DWORD PTR [rbx]
   14001ff9f:	cmp    cl,BYTE PTR [rsi-0x30]
   14001ffa2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001ffa3:	(bad)  
   14001ffa4:	lahf   
   14001ffa5:	sub    DWORD PTR [rsi+0x2e],edi
   14001ffa8:	xchg   esp,eax
   14001ffa9:	(bad)
   14001ffae:	(bad)  
   14001ffaf:	push   rax
   14001ffb0:	mov    DWORD PTR [rdx],edx
   14001ffb2:	addr32 int3 
   14001ffb4:	rex.WRX
   14001ffb5:	addr32 sbb al,0xcf
   14001ffb8:	data16 cmp ch,BYTE PTR [rcx-0x34]
   14001ffbc:	pop    rcx
   14001ffbd:	stos   BYTE PTR es:[rdi],al
   14001ffbe:	rex.B int 0xda
   14001ffc1:	js     0x14001ff8f
   14001ffc3:	xchg   ebp,eax
   14001ffc4:	ja     0x14001ff82
   14001ffc6:	xchg   edi,eax
   14001ffc7:	outs   dx,DWORD PTR ds:[rsi]
   14001ffc8:	clc    
   14001ffc9:	lock rex.RXB test eax,0x96aed08c
   14001ffd0:	(bad)  
   14001ffd1:	shl    BYTE PTR [rdx-0x1d],1
   14001ffd4:	mov    ch,0x1b
   14001ffd6:	fdivr  QWORD PTR [rsi-0x8847483]
   14001ffdc:	out    dx,al
   14001ffdd:	jb     0x14001ffc6
   14001ffdf:	(bad)  
   14001ffe0:	ins    DWORD PTR es:[rdi],dx
   14001ffe1:	div    bh
   14001ffe3:	jbe    0x140020016
   14001ffe5:	xchg   ebp,eax
   14001ffe6:	sar    DWORD PTR [rbp-0x59feb36b],cl
   14001ffec:	in     eax,0xbc
   14001ffee:	(bad)
   14001fff1:	push   0x7f
   14001fff3:	pop    QWORD PTR [rbx-0x5253c203]
   14001fff9:	xchg   esp,eax
   14001fffa:	ret    0x845c
   14001fffd:	cmc    
   14001fffe:	jmp    0x156c8e997
   140020003:	jmp    0x14001ffd8
   140020005:	sub    ebp,esi
   140020007:	jo     0x14001ffcd
   140020009:	fs cmp al,ch
   14002000c:	push   rbp
   14002000d:	add    eax,DWORD PTR [rsi-0x18e5ac95]
   140020013:	cmp    dh,bh
   140020015:	cs jbe 0x14001ffb6
   140020018:	rex
   140020019:	and    edi,DWORD PTR ds:[rcx]
   14002001c:	xchg   BYTE PTR [rdi],al
   14002001e:	rex.WX add sil,BYTE PTR [rdx+0x73a400f0]
   140020025:	addr32 jb 0x14002007a
   140020028:	rex.WRB push r12
   14002002a:	js     0x14001ffce
   14002002c:	rex.R and al,0x74
   14002002f:	mov    al,0xdb
   140020031:	push   rdx
   140020032:	xor    al,0x8c
   140020034:	leave  
   140020035:	(bad)  
   140020036:	rex.W mov spl,0x3b
   140020039:	pop    rbp
   14002003a:	mov    eax,DWORD PTR [rsi+0x608a730a]
   140020040:	rex.WX xchg rsp,rax
   140020042:	pop    rdi
   140020043:	cmp    al,0x81
   140020045:	(bad)  
   140020046:	std    
   140020047:	jg     0x14002008f
   140020049:	rol    esp,1
   14002004b:	or     al,0x25
   14002004d:	out    0xac,al
   14002004f:	rex.RXB xchg r8d,eax
   140020051:	(bad)  
   140020052:	movabs ds:0x21260cf855aee0ac,eax
   14002005b:	xchg   DWORD PTR [rcx],esp
   14002005d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002005e:	pop    rbx
   14002005f:	(bad)  
   140020060:	fidivr WORD PTR [rbx+0x1e]
   140020063:	in     al,dx
   140020064:	in     eax,dx
   140020065:	xor    ebx,DWORD PTR [rbp+0x34757f4e]
   14002006b:	sbb    bh,ch
   14002006d:	(bad)  
   14002006e:	pop    rdi
   14002006f:	cs outs dx,DWORD PTR es:[rsi]
   140020072:	int3   
   140020073:	not    BYTE PTR [rsi+0x54]
   140020076:	add    BYTE PTR [rdi+0x69],bl
   140020079:	retf   
   14002007a:	scas   al,BYTE PTR es:[rdi]
   14002007b:	jge    0x1400200d3
   14002007d:	xchg   edx,eax
   14002007e:	mov    cl,0x77
   140020080:	jmp    0x1400200fd
   140020082:	add    DWORD PTR [rip+0xffffffffef6dfc2a],ebp        # 0x12f6ffcb2
   140020088:	xchg   esi,eax
   140020089:	mov    ebp,0x6d7a6581
   14002008e:	sar    bl,1
   140020090:	(bad)  
   140020091:	add    BYTE PTR [rdx-0x469e4d1b],ch
   140020097:	mov    esp,0xf21caafe
   14002009c:	fcmovbe st,st(1)
   14002009e:	shr    DWORD PTR [rbx-0x5c4a6d1],0xd5
   1400200a5:	shr    eax,0xdc
   1400200a8:	div    BYTE PTR [rbx+rsi*8-0x3]
   1400200ac:	iret   
   1400200ad:	mov    ecx,0xc64fa3c1
   1400200b2:	in     eax,0x74
   1400200b4:	(bad)  
   1400200b5:	fadd   QWORD PTR [rsi-0x39367ee0]
   1400200bb:	jnp    0x14002006d
   1400200bd:	xchg   ebx,eax
   1400200be:	adc    eax,0x83f18e5e
   1400200c3:	add    edi,esp
   1400200c5:	push   0x1640e88f
   1400200ca:	xchg   edi,eax
   1400200cb:	mov    cl,0xed
   1400200cd:	adc    eax,0xda9170ea
   1400200d2:	rex.WRB sbb r14b,r10b
   1400200d5:	adc    eax,0xc6c436b6
   1400200da:	xor    ebp,DWORD PTR [rbx+0x57]
   1400200dd:	fcmovb st,st(4)
   1400200df:	adc    dl,BYTE PTR [rbx+0x49]
   1400200e2:	sub    al,0x1d
   1400200e4:	rex.WB mov es,WORD PTR [r9-0x4b]
   1400200e8:	fmul   DWORD PTR [rip+0x11831ca4]        # 0x151851d92
   1400200ee:	and    DWORD PTR [rdx-0x4f58d91c],ebx
   1400200f4:	and    ah,BYTE PTR [rsi-0x5a84e4fb]
   1400200fa:	mov    bl,0x42
   1400200fc:	rex.RB and eax,0xd1bc1180
   140020102:	xor    BYTE PTR [rax],ah
   140020104:	data16 ja 0x140020099
   140020107:	adc    al,BYTE PTR [rcx+0xa4c5592]
   14002010d:	jne    0x1400200e2
   14002010f:	ja     0x1400200b9
   140020111:	(bad)  
   140020112:	(bad)  
   140020113:	mov    BYTE PTR [rdx-0x54d20fc1],bl
   140020119:	pop    rcx
   14002011a:	ret    
   14002011b:	and    DWORD PTR [rbx+0x180c7c63],0x31
   140020122:	(bad)  
   140020123:	mov    ch,0xb2
   140020125:	(bad)  
   140020126:	lea    eax,[rdi+0x23]
   140020129:	ss (bad) 
   14002012b:	pop    rbp
   14002012c:	loope  0x1400200c7
   14002012e:	ja     0x1400200ed
   140020130:	xchg   ecx,edx
   140020132:	movabs al,ds:0x1f0f0e73172c0846
   14002013b:	jo     0x1400201bc
   14002013d:	out    0x1e,eax
   14002013f:	sti    
   140020140:	jnp    0x14002013d
   140020142:	int3   
   140020143:	rex.WRX mov ds,WORD PTR [rcx-0x63639933]
   14002014a:	pushf  
   14002014b:	xor    BYTE PTR [rbx],bh
   14002014d:	cmp    DWORD PTR [rsi-0x54],ecx
   140020150:	rcl    BYTE PTR [rdx+0x12d55a5a],0x2f
   140020157:	out    0x73,al
   140020159:	data16 mov bl,0x19
   14002015c:	ja     0x1400201cc
   14002015e:	sub    edx,eax
   140020160:	mov    dl,0xae
   140020162:	(bad)  
   140020163:	test   BYTE PTR [rax],dl
   140020165:	clc    
   140020166:	xchg   ecx,eax
   140020167:	(bad)  
   140020168:	stc    
   140020169:	add    al,0x73
   14002016b:	mov    ecx,0xfd7f67c8
   140020170:	push   rbx
   140020171:	addr32 push rbp
   140020173:	jle    0x14002014f
   140020175:	shl    BYTE PTR [rcx],cl
   140020177:	adc    dl,BYTE PTR [rdx]
   140020179:	loopne 0x1400201a2
   14002017b:	rex.X (bad) 
   14002017d:	in     eax,0x18
   14002017f:	jnp    0x1400201a1
   140020181:	and    cl,dl
   140020183:	(bad)  
   140020184:	jae    0x1400201d2
   140020186:	rex.WRXB push r14
   140020188:	jp     0x1400201a7
   14002018a:	xchg   esp,eax
   14002018b:	mov    eax,0x62b29d00
   140020190:	rex.WRB out 0xaf,eax
   140020193:	jae    0x1400201c2
   140020195:	movsxd ecx,DWORD PTR [rcx+0x5e]
   140020198:	jbe    0x140020133
   14002019a:	test   BYTE PTR [rax+rcx*1-0xa63189d],dh
   1400201a1:	rex.WXB lea rsp,[rip+0xfffffffffcb19979]        # 0x13cb39b21
   1400201a8:	cmp    ebx,ebp
   1400201aa:	xchg   ecx,eax
   1400201ab:	test   BYTE PTR [rdx+0x52],bl
   1400201ae:	sub    BYTE PTR [rax],ah
   1400201b0:	mov    edx,eax
   1400201b2:	fdivrp st(4),st
   1400201b4:	adc    bl,BYTE PTR [rdi]
   1400201b6:	xor    DWORD PTR [rcx+0x26],edi
   1400201b9:	(bad)  
   1400201ba:	in     eax,0x68
   1400201bc:	(bad)  
   1400201bd:	loopne 0x1400201ab
   1400201bf:	fs (bad) 
   1400201c1:	std    
   1400201c2:	mov    ebx,0xdbdbd8f7
   1400201c7:	jrcxz  0x140020166
   1400201c9:	out    dx,eax
   1400201ca:	jl     0x140020163
   1400201cc:	cmp    edi,DWORD PTR [rax+rsi*8-0x60]
   1400201d0:	cli    
   1400201d1:	sbb    ah,BYTE PTR [rsp+riz*8+0x5f]
   1400201d5:	push   0xffffffff802b2b7b
   1400201da:	jle    0x140020214
   1400201dc:	nop
   1400201dd:	inc    DWORD PTR [rdi+0x57d6bde]
   1400201e3:	ror    BYTE PTR [rdi],1
   1400201e5:	adc    esi,DWORD PTR [rdx+0x8]
   1400201e8:	nop
   1400201e9:	outs   dx,DWORD PTR ds:[rsi]
   1400201ea:	xor    eax,0x9d849150
   1400201ef:	rex.WRX adc rsp,r14
   1400201f2:	xchg   ebp,eax
   1400201f3:	rex.B or eax,0x9c3231d4
   1400201f9:	iret   
   1400201fa:	(bad)  
   1400201fb:	sbb    edi,DWORD PTR [rax]
   1400201fd:	ds pushf 
   1400201ff:	iret   
   140020200:	ja     0x1400201f1
   140020202:	(bad)  
   140020203:	(bad)  
   140020204:	pop    rbp
   140020205:	mov    ebx,0x78c19821
   14002020a:	jb     0x14002028a
   14002020c:	jge    0x14002028b
   14002020e:	jmp    0x14002028d
   140020210:	out    dx,eax
   140020211:	mov    ah,0xf5
   140020213:	movabs ds:0x55183571a3a7b44f,eax
   14002021c:	(bad)  
   14002021d:	pop    rbp
   14002021e:	stos   BYTE PTR es:[rdi],al
   14002021f:	xor    DWORD PTR [rdi+0x301f5e32],ecx
   140020225:	cwde   
   140020226:	cmp    al,BYTE PTR [rsp+rcx*1-0xb]
   14002022a:	movabs al,ds:0x4ba72723ef0ed5c6
   140020233:	loop   0x14002029e
   140020235:	jb     0x1400201f6
   140020237:	jno    0x140020202
   140020239:	in     eax,0x83
   14002023b:	sbb    al,0x3b
   14002023d:	data16 repz and bh,BYTE PTR [rcx-0x269841f1]
   140020245:	(bad)
   140020248:	jmp    0x140020279
   14002024a:	xchg   esp,eax
   14002024b:	mov    es,ecx
   14002024d:	mov    BYTE PTR [rcx],ch
   14002024f:	cmp    BYTE PTR [rax+0x589d1e88],al
   140020255:	movabs ds:0x7d122aed2c66174,eax
   14002025e:	pushf  
   14002025f:	xor    eax,0x3eb45488
   140020264:	rol    BYTE PTR [rsi+0x1ca37880],1
   14002026a:	or     BYTE PTR [rcx+rsi*1-0x51298b9a],ah
   140020271:	and    al,0xb7
   140020273:	xchg   edx,eax
   140020274:	adc    r11b,BYTE PTR [r15]
   140020277:	mov    al,0xb9
   140020279:	(bad)  
   14002027a:	cs retf 0x7763
   14002027e:	xor    bl,BYTE PTR [rbx-0x3d838b8f]
   140020284:	popf   
   140020285:	popf   
   140020286:	(bad)  
   140020287:	lahf   
   140020288:	sbb    DWORD PTR [rsi],ecx
   14002028a:	(bad)  
   14002028b:	ins    BYTE PTR es:[rdi],dx
   14002028c:	lods   al,BYTE PTR ds:[rsi]
   14002028d:	rex.WRXB pop r8
   14002028f:	sbb    ecx,DWORD PTR [rdi-0x2c2700c7]
   140020295:	cmp    al,0xfb
   140020297:	out    dx,al
   140020298:	outs   dx,DWORD PTR ds:[rsi]
   140020299:	(bad)  
   14002029a:	pop    rcx
   14002029b:	lock lea esp,[rdi-0x4b]
   14002029f:	pop    rdx
   1400202a0:	jmp    0x14912f6fd
   1400202a5:	mov    esi,0x1398b165
   1400202aa:	movsxd edx,DWORD PTR [rax+rdi*1-0x10]
   1400202ae:	push   0xffffffffffffffa5
   1400202b0:	fs es jmp 0x1418508cf
   1400202b7:	ds rol dh,0xb9
   1400202bb:	mov    ebp,esp
   1400202bd:	mov    esi,0xe7312f7e
   1400202c2:	adc    QWORD PTR [rdx+0x79bbb57c],rcx
   1400202c9:	jg     0x1400202db
   1400202cb:	push   rdx
   1400202cc:	in     eax,dx
   1400202cd:	cmp    al,0xf
   1400202cf:	xchg   DWORD PTR [rsi],ebp
   1400202d1:	cmc    
   1400202d2:	jg     0x1400202d8
   1400202d4:	mov    ch,0xfb
   1400202d6:	movabs eax,ds:0xfe13baf652e3f501
   1400202e0:	pop    rax
   1400202e1:	mov    eax,0x9200b2fa
   1400202e6:	es (bad) 
   1400202e8:	rex.WB
   1400202e9:	repnz and al,0x7a
   1400202ec:	out    0x87,eax
   1400202ee:	fsub   st(3),st
   1400202f0:	lahf   
   1400202f1:	mov    esi,0xd4a664a5
   1400202f6:	rex.WB (bad) 
   1400202f8:	(bad)  [rsi+0x6f7609d2]
   1400202fe:	(bad)
   140020301:	mul    DWORD PTR [r8]
   140020304:	(bad)  
   140020305:	push   rax
   140020306:	js     0x140020314
   140020308:	or     esi,DWORD PTR [rbp+0x445b0a78]
   14002030e:	(bad)  
   14002030f:	cmp    DWORD PTR [rdi-0x50],ebx
   140020312:	jae    0x14002030b
   140020314:	(bad)  
   140020315:	cmp    esi,DWORD PTR [rdi+0x77]
   140020318:	pop    rax
   140020319:	scas   al,BYTE PTR es:[rdi]
   14002031a:	push   rsi
   14002031b:	or     DWORD PTR [rbx-0x607e094f],esi
   140020321:	std    
   140020322:	fnstcw WORD PTR [rdi-0x401ff607]
   140020328:	cld    
   140020329:	(bad)  
   14002032a:	and    eax,0xbdb0b7e7
   14002032f:	xchg   ebp,eax
   140020330:	adc    eax,0xf98d9c00
   140020335:	sti    
   140020336:	rex.WX rcl al,0xe5
   14002033a:	add    al,0x72
   14002033c:	test   al,0x10
   14002033e:	push   rax
   14002033f:	jo     0x1400202d1
   140020341:	rex.WRXB push QWORD PTR [r11-0x7d5ea7fe]
   140020348:	lahf   
   140020349:	call   rdi
   14002034b:	paddw  mm3,QWORD PTR [rdi]
   14002034e:	hlt    
   14002034f:	(bad)  
   140020350:	xchg   edi,eax
   140020351:	fwait
   140020352:	out    0xb,al
   140020354:	(bad)  
   140020355:	or     esp,DWORD PTR [rax+0x79b9a6a]
   14002035b:	femms  
   14002035d:	outs   dx,DWORD PTR ds:[rsi]
   14002035e:	fadd   QWORD PTR [rcx]
   140020360:	rex.WR push rbp
   140020362:	or     eax,0xcf9beb86
   140020367:	xor    bl,BYTE PTR ds:[rdi*1-0x4a274702]
   14002036f:	in     eax,dx
   140020370:	(bad)
   140020373:	(bad)  
   140020374:	(bad)  
   140020375:	popf   
   140020376:	sbb    ecx,DWORD PTR [rdi+0x3893dbc6]
   14002037c:	sbb    al,0xd7
   14002037e:	mov    bl,0x65
   140020380:	and    al,0x18
   140020382:	rex.XB mov r13b,0x5e
   140020385:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020386:	repnz rex.WRXB add al,0x9a
   14002038a:	push   rsp
   14002038b:	rex.WX
   14002038c:	rex.WX xchg QWORD PTR [rbx-0x6e],rsp
   140020390:	test   DWORD PTR [rax],edx
   140020392:	push   rdx
   140020393:	ins    DWORD PTR es:[rdi],dx
   140020394:	mov    eax,0x1e972e7b
   140020399:	jae    0x140020323
   14002039b:	lahf   
   14002039c:	xchg   ebp,eax
   14002039d:	sbb    DWORD PTR [rax-0x33],0x316b182d
   1400203a4:	(bad)  
   1400203a5:	shr    DWORD PTR [rdi*1+0x430ad9ab],1
   1400203ac:	shl    BYTE PTR [rdi+0x4757ef4b],0xb3
   1400203b3:	xor    BYTE PTR [rbx+rdi*8-0x29252e6d],bl
   1400203ba:	(bad)  
   1400203bb:	ds sti 
   1400203bd:	imul   ecx,DWORD PTR [rdi+rsi*1-0x49],0xffffffd8
   1400203c2:	fidivr DWORD PTR [rsi+0x374dac0]
   1400203c8:	push   rdi
   1400203c9:	(bad)  
   1400203ca:	cmp    BYTE PTR [rdi+0x41],ah
   1400203cd:	sub    bl,BYTE PTR [rdx]
   1400203cf:	lahf   
   1400203d0:	(bad)  
   1400203d1:	xchg   esp,eax
   1400203d2:	xchg   ebx,eax
   1400203d3:	adc    ecx,DWORD PTR [rdi-0x6c]
   1400203d6:	and    al,0x5a
   1400203d8:	sbb    DWORD PTR [rax+0x515d1252],esi
   1400203de:	cmp    eax,0x93588904
   1400203e3:	test   DWORD PTR [rcx+0x77],eax
   1400203e6:	mov    bh,0x6d
   1400203e8:	sbb    ebp,esi
   1400203ea:	in     eax,dx
   1400203eb:	out    dx,al
   1400203ec:	jno    0x140020425
   1400203ee:	in     al,dx
   1400203ef:	xchg   esi,eax
   1400203f0:	xor    bl,BYTE PTR [rcx+rsi*4-0x6313d126]
   1400203f7:	movabs ds:0xa26c6e1b44831cae,eax
   140020400:	(bad)  
   140020401:	sbb    ebp,DWORD PTR [rbx+riz*2+0x19aae907]
   140020408:	ror    DWORD PTR [rdx+0x5e021961],0x2
   14002040f:	lahf   
   140020410:	jp     0x140020410
   140020412:	push   rbp
   140020413:	rex.WRX
   140020414:	rex.WRX
   140020415:	rex.WRX test al,0xac
   140020418:	int    0xbe
   14002041a:	rex.WX (bad) 
   14002041c:	ret    0x1748
   14002041f:	(bad)  
   140020420:	rex.XB (bad) 
   140020422:	(bad)  
   140020423:	mov    WORD PTR [rax],ss
   140020425:	int3   
   140020426:	cwde   
   140020427:	test   BYTE PTR [rsp+riz*4],ah
   14002042a:	adc    DWORD PTR [rbp-0x62646c59],ecx
   140020430:	(bad)  
   140020431:	mov    ebp,0x394f3d9d
   140020436:	xchg   esp,eax
   140020437:	add    al,0xda
   140020439:	sub    DWORD PTR [rbx+0x77d5134b],eax
   14002043f:	data16 icebp 
   140020441:	jmp    0x10d7dc72e
   140020446:	rex.RB (bad) 
   140020448:	jrcxz  0x140020475
   14002044a:	(bad)  
   14002044b:	add    DWORD PTR [rdx-0x22],edi
   14002044e:	call   0x19a941bcc
   140020453:	mov    esi,ebx
   140020455:	jmp    0x182a87845
   14002045a:	push   0x69
   14002045c:	out    dx,al
   14002045d:	sub    eax,0xa040cda
   140020462:	ins    DWORD PTR es:[rdi],dx
   140020463:	ret    
   140020464:	mov    ebp,0x7db8f7db
   140020469:	jmp    0x140020481
   14002046b:	(bad)  
   14002046c:	(bad)  
   14002046d:	xor    eax,esi
   14002046f:	xchg   ebx,eax
   140020470:	adc    DWORD PTR [rdi+0x3c],ecx
   140020473:	cmc    
   140020474:	add    al,0x17
   140020476:	(bad)  
   140020477:	mov    ecx,0x6d6facc
   14002047c:	and    dh,BYTE PTR [rdx-0x24]
   14002047f:	xchg   ebx,eax
   140020480:	cmp    DWORD PTR [rdi-0x62],0xb696fc9c
   140020487:	mov    bh,0xba
   140020489:	add    cl,al
   14002048b:	pop    rbx
   14002048c:	mov    dh,0xf0
   14002048e:	stc    
   14002048f:	add    al,0x78
   140020491:	cmp    al,BYTE PTR [rbp-0x537d3c70]
   140020497:	add    BYTE PTR [rdx],dl
   140020499:	std    
   14002049a:	(bad)  
   14002049b:	adc    eax,0x59839167
   1400204a0:	add    DWORD PTR [rax],edi
   1400204a2:	cmp    ah,cl
   1400204a4:	out    dx,eax
   1400204a5:	(bad)  
   1400204a7:	or     ah,BYTE PTR [rcx+0x1bef4e]
   1400204ad:	jne    0x1400204b7
   1400204af:	mov    cl,0xbc
   1400204b1:	mov    esi,0xabe72e5c
   1400204b6:	jnp    0x140020517
   1400204b8:	cmp    al,0x8a
   1400204ba:	jl     0x1400204ad
   1400204bc:	and    eax,0x60c33ac0
   1400204c1:	mov    dl,0x7e
   1400204c3:	jns    0x140020540
   1400204c5:	cmp    BYTE PTR [rsi-0x3665c184],bh
   1400204cb:	xchg   BYTE PTR [rax+0x3d],cl
   1400204ce:	xor    al,0xd6
   1400204d0:	push   rbp
   1400204d1:	(bad)  
   1400204d2:	jo     0x140020541
   1400204d4:	pop    rax
   1400204d5:	(bad)  
   1400204d6:	xchg   DWORD PTR ss:[rsi+0x3b5b1f5e],ebp
   1400204dd:	sbb    DWORD PTR [rdx-0x6addf855],ecx
   1400204e3:	and    BYTE PTR [rsi],ch
   1400204e5:	cmp    DWORD PTR [rax+0x52],0xa531b0ab
   1400204ec:	mov    WORD PTR [rdi],fs
   1400204ee:	or     DWORD PTR [rax-0x2c],ecx
   1400204f1:	(bad)  
   1400204f2:	scas   eax,DWORD PTR es:[rdi]
   1400204f3:	shl    DWORD PTR [rcx+0x6d0c4f47],cl
   1400204f9:	or     BYTE PTR [rsi+0x3e],bh
   1400204fc:	test   ebp,0x7cb56cf1
   140020502:	jo     0x1400204de
   140020504:	scas   al,BYTE PTR es:[rdi]
   140020505:	mov    fs,esi
   140020507:	mov    esi,0x2e587c6d
   14002050c:	xchg   edi,eax
   14002050d:	in     eax,dx
   14002050e:	loop   0x140020508
   140020510:	js     0x140020587
   140020512:	jb     0x140020503
   140020514:	(bad)  
   140020515:	(bad)  
   140020516:	bnd jp 0x1400204de
   140020519:	cmp    edi,esi
   14002051b:	loopne 0x1400204dc
   14002051d:	jle    0x140020516
   14002051f:	(bad)  
   140020520:	lods   eax,DWORD PTR ds:[rsi]
   140020521:	cli    
   140020522:	xchg   edi,eax
   140020523:	dec    cl
   140020525:	(bad)  
   140020526:	rex.RX mov ecx,es
   140020529:	push   rbp
   14002052a:	xor    eax,0x857a3c8f
   14002052f:	rex.RXB (bad) 
   140020531:	jge    0x1400204bf
   140020533:	or     edx,DWORD PTR [rdi+0x5b5e332e]
   140020539:	ins    DWORD PTR es:[edi],dx
   14002053b:	jge    0x140020550
   14002053d:	movsxd ebx,DWORD PTR [rbp+0x69]
   140020540:	test   ebp,edx
   140020542:	(bad)  
   140020543:	push   0x696a125f
   140020548:	mov    esp,0xbdd93966
   14002054d:	push   0x17a98297
   140020552:	movabs eax,ds:0xf13583f67f7a5576
   14002055b:	mov    eax,0x2d58ad5a
   140020560:	xchg   edi,eax
   140020561:	pushf  
   140020562:	cwde   
   140020563:	jns    0x140020546
   140020565:	ror    DWORD PTR [rbx-0x30],1
   140020568:	xchg   esi,eax
   140020569:	push   rsp
   14002056a:	jrcxz  0x1400205ba
   14002056c:	loopne 0x140020513
   14002056e:	test   QWORD PTR [rsi],r12
   140020571:	or     DWORD PTR [rsi-0x65],esp
   140020574:	jrcxz  0x140020561
   140020576:	fsubr  DWORD PTR [rbp-0x72429319]
   14002057c:	pushf  
   14002057d:	adc    eax,0x37a54874
   140020582:	(bad)  
   140020583:	fldenv [rdi]
   140020585:	fwait
   140020586:	add    eax,0xfa0fe530
   14002058b:	fnstsw WORD PTR [rbp-0x27]
   14002058e:	push   rbx
   14002058f:	mov    BYTE PTR [rcx+0x5668df74],bl
   140020595:	movabs eax,ds:0xe49c6d3308f95e78
   14002059e:	cld    
   14002059f:	rex.WXB outs dx,BYTE PTR ds:[rsi]
   1400205a1:	cs rex.WX (bad) 
   1400205a4:	addr32 mov dl,0xc0
   1400205a7:	ja     0x14002059a
   1400205a9:	jg     0x1400205cc
   1400205ab:	cmp    cl,BYTE PTR [rbp-0x5b]
   1400205ae:	mov    esi,0x6ee405ec
   1400205b3:	(bad)  
   1400205b4:	cmp    eax,0xd3242e9c
   1400205b9:	(bad)  
   1400205ba:	(bad)  
   1400205bb:	xor    eax,0x71edee1c
   1400205c0:	jrcxz  0x1400205bc
   1400205c2:	jne    0x1400205ba
   1400205c4:	out    dx,al
   1400205c5:	out    dx,eax
   1400205c6:	push   rcx
   1400205c7:	push   rbp
   1400205c8:	adc    eax,0x897a3c8f
   1400205cd:	sub    ecx,DWORD PTR [rdi+0x3e]
   1400205d0:	leave  
   1400205d1:	fs ins DWORD PTR es:[rdi],dx
   1400205d3:	(bad)  
   1400205d4:	xor    DWORD PTR [rsi],eax
   1400205d6:	(bad)  
   1400205d7:	(bad)  
   1400205d8:	(bad)  
   1400205d9:	loope  0x1400205df
   1400205db:	rex xchg edx,eax
   1400205dd:	(bad)  
   1400205de:	adc    DWORD PTR [rdx+0xc],esp
   1400205e1:	sbb    eax,0x2e5f483f
   1400205e6:	cli    
   1400205e7:	fcmovnbe st,st(7)
   1400205e9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400205ea:	adc    al,0xbe
   1400205ec:	pop    rsi
   1400205ed:	adc    al,0x40
   1400205ef:	ficomp WORD PTR [rsi]
   1400205f1:	push   rsi
   1400205f2:	add    al,0x70
   1400205f4:	mov    dh,0x3a
   1400205f6:	nop
   1400205f7:	cmp    eax,0x5b457c81
   1400205fc:	push   rsp
   1400205fd:	and    DWORD PTR [rax],edi
   1400205ff:	mov    edx,0x38fc823e
   140020604:	or     edi,DWORD PTR [rsi-0x1]
   140020607:	inc    bl
   140020609:	(bad)  
   14002060a:	rex.X push rsi
   14002060c:	add    dh,BYTE PTR [rsi-0x22714709]
   140020612:	out    0x5c,eax
   140020614:	sbb    ebx,DWORD PTR [rax-0x88f87c1]
   14002061a:	in     al,0xc1
   14002061c:	cmp    DWORD PTR [rbx-0x4f825851],0xffffff80
   140020623:	stos   DWORD PTR es:[rdi],eax
   140020624:	sub    esi,DWORD PTR [rdi]
   140020626:	test   al,0xea
   140020628:	mov    ch,0x91
   14002062a:	jne    0x14002060f
   14002062c:	mov    cl,0xb5
   14002062e:	jrcxz  0x140020641
   140020630:	(bad)  
   140020631:	or     eax,0x58c43ac0
   140020636:	xor    DWORD PTR [rcx+0x1c],ebp
   140020639:	rex.WRX ret 0x4a7b
   14002063d:	rex.RX rcl BYTE PTR [rsi],1
   140020640:	cmp    bl,al
   140020642:	je     0x1400205f0
   140020644:	xor    DWORD PTR [rip+0xffffffff895be0e5],ebp        # 0xc95de72f
   14002064a:	ins    DWORD PTR es:[rdi],dx
   14002064b:	jmp    0x1400205e8
   14002064d:	(bad)
   140020650:	rex.WRX
   140020651:	rex.WRX push rdi
   140020653:	mov    esp,DWORD PTR [rbx+0x316ad5d3]
   140020659:	out    dx,eax
   14002065a:	sbb    eax,0x78b8047b
   14002065f:	out    dx,al
   140020660:	jge    0x140020679
   140020662:	ins    DWORD PTR es:[rdi],dx
   140020663:	xor    eax,0xbdfddf0c
   140020668:	(bad)  
   14002066a:	lods   eax,DWORD PTR ds:[rsi]
   14002066b:	sbb    edx,edi
   14002066d:	stc    
   14002066e:	fsub   QWORD PTR [rdi+0x3e]
   140020671:	int    0x6b
   140020673:	xlat   BYTE PTR ds:[rbx]
   140020674:	pop    rsi
   140020675:	in     eax,0xa5
   140020677:	out    0xbf,eax
   140020679:	enter  0x7f17,0xe3
   14002067d:	mov    bl,0x58
   14002067f:	imul   ebx,DWORD PTR [rcx],0xffffffaf
   140020682:	lods   eax,DWORD PTR ds:[rsi]
   140020683:	jno    0x140020666
   140020685:	shl    BYTE PTR [rbx],cl
   140020687:	ins    BYTE PTR es:[rdi],dx
   140020688:	ins    BYTE PTR es:[rdi],dx
   140020689:	rex.WRX movabs rcx,0xab8cb85fce11e978
   140020693:	imul   esp,DWORD PTR [rsi],0xffffffd3
   140020696:	rex.WRB in eax,dx
   140020698:	rex.WB adc r9b,al
   14002069b:	and    esi,DWORD PTR [rcx+rax*8+0x74e611a7]
   1400206a2:	xor    eax,0xe5842cec
   1400206a7:	(bad)  
   1400206a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400206a9:	rex.RB pop r13
   1400206ab:	pop    rsp
   1400206ac:	jo     0x14002066b
   1400206ae:	outs   dx,DWORD PTR ds:[rsi]
   1400206af:	mov    dl,0xcb
   1400206b1:	pushf  
   1400206b2:	xchg   ecx,eax
   1400206b3:	mov    esp,DWORD PTR [rip+0xffffffffd9514e45]        # 0x1195354fe
   1400206b9:	and    cl,BYTE PTR [rdx+0x8]
   1400206bc:	xchg   edx,eax
   1400206bd:	(bad)  
   1400206be:	popf   
   1400206bf:	xor    ah,BYTE PTR [rdx+rax*8+0x6b7f5d98]
   1400206c6:	xchg   esp,eax
   1400206c7:	sub    eax,0xd9f56b49
   1400206cc:	mov    ebp,0xef7f2eee
   1400206d1:	(bad)  
   1400206d2:	adc    eax,0x4cfdda8b
   1400206d7:	repnz test al,0x12
   1400206da:	lods   eax,DWORD PTR ds:[rsi]
   1400206db:	push   rsi
   1400206dc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400206dd:	adc    esi,DWORD PTR [rdi]
   1400206df:	movaps xmm4,XMMWORD PTR es:[rbp-0x368be219]
   1400206e7:	(bad)  
   1400206e8:	pop    rsp
   1400206e9:	scas   al,BYTE PTR es:[rdi]
   1400206ea:	jmp    0x14002075f
   1400206ec:	cld    
   1400206ed:	out    0xdf,eax
   1400206ef:	mov    cl,cl
   1400206f1:	jne    0x1400206c2
   1400206f3:	mov    ebp,0x536aa57b
   1400206f8:	mul    BYTE PTR [rip+0xffffffff920826ab]        # 0xd20a2da9
   1400206fe:	xchg   edx,eax
   1400206ff:	jl     0x14002075a
   140020701:	and    DWORD PTR [rcx+0x357210e2],ecx
   140020707:	jrcxz  0x1400206f1
   140020709:	shl    DWORD PTR [rcx],0xaf
   14002070c:	pop    rbp
   14002070d:	jge    0x14002069c
   14002070f:	fwait
   140020710:	(bad)  
   140020711:	outs   dx,BYTE PTR ds:[rsi]
   140020712:	add    dh,BYTE PTR [rax-0xf]
   140020715:	repnz and eax,0x49fa7c9e
   14002071b:	mov    dh,0xb6
   14002071d:	mov    bh,0x11
   14002071f:	jmp    0x140020731
   140020721:	push   rcx
   140020722:	rex.WR
   140020723:	rex.RXB or al,0x91
   140020726:	push   rcx
   140020727:	push   rbp
   140020728:	sbb    DWORD PTR [rax],eax
   14002072a:	ja     0x14002072a
   14002072c:	(bad)  
   14002072d:	sbb    DWORD PTR [rdx-0x2797a31f],ecx
   140020733:	cmp    eax,0x1f338939
   140020738:	adc    BYTE PTR [rbx-0x5d],ch
   14002073b:	lea    esp,[rcx]
   14002073d:	ficom  DWORD PTR [rax]
   14002073f:	pop    rcx
   140020740:	lods   al,BYTE PTR ds:[rsi]
   140020741:	rex.WX mov bpl,0xf0
   140020744:	imul   edx,DWORD PTR [rsi+0xa],0x5f
   140020748:	outs   dx,DWORD PTR ds:[rsi]
   140020749:	or     ah,BYTE PTR [rax+0x4195f5bf]
   14002074f:	(bad)  
   140020750:	or     DWORD PTR [rbp+0x543973de],eax
   140020756:	xor    BYTE PTR [rax+0x1df7c822],ch
   14002075c:	popf   
   14002075d:	and    dh,BYTE PTR [rax+0x4d5ffbbd]
   140020763:	and    DWORD PTR [rbp+rdi*4-0x29],edx
   140020767:	fst    QWORD PTR [rdi+0x79]
   14002076a:	out    dx,al
   14002076b:	loope  0x140020708
   14002076d:	pop    rbp
   14002076e:	xor    eax,0x439aacad
   140020773:	add    eax,DWORD PTR [rdi-0x7828a147]
   140020779:	cs out 0xfb,eax
   14002077c:	jge    0x14002078d
   14002077e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002077f:	jg     0x1400207f2
   140020781:	(bad)  
   140020782:	mov    esi,0xfed63fdf
   140020787:	movsxd ebp,eax
   140020789:	xchg   edx,eax
   14002078a:	lahf   
   14002078b:	pop    rax
   14002078c:	jmp    0x1400207dc
   14002078e:	and    esi,DWORD PTR [rcx]
   140020790:	(bad)  
   140020791:	jno    0x1400207cf
   140020793:	icebp  
   140020794:	int3   
   140020795:	cmp    edi,DWORD PTR [rcx-0x1e]
   140020798:	jmp    0x1b7c1bb54
   14002079d:	(bad)  
   14002079e:	imul   ebp,DWORD PTR [rdi-0x50543b44],0xffffffbc
   1400207a5:	ret    0xd78d
   1400207a8:	scas   al,BYTE PTR es:[rdi]
   1400207a9:	icebp  
   1400207aa:	loopne 0x14002079c
   1400207ac:	and    bl,0xa3
   1400207af:	(bad)  
   1400207b0:	sbb    BYTE PTR [rbx+0x15],ah
   1400207b3:	std    
   1400207b4:	out    0x1c,eax
   1400207b6:	fwait
   1400207b7:	pop    rbx
   1400207b8:	fistp  DWORD PTR [rax+rdi*4+0x78]
   1400207bc:	xchg   ecx,eax
   1400207bd:	shl    DWORD PTR [rax-0x38],0xf6
   1400207c1:	mov    ecx,0xb85d6c0b
   1400207c6:	(bad)  
   1400207c7:	jo     0x140020836
   1400207c9:	(bad)  
   1400207ca:	leave  
   1400207cb:	cli    
   1400207cc:	(bad)  
   1400207cd:	in     al,dx
   1400207ce:	jge    0x140020760
   1400207d0:	push   0x200000
   1400207d5:	rex.WB
   1400207d6:	rex.R
   1400207d7:	push   r12
   1400207d9:	scas   al,BYTE PTR es:[rdi]
   1400207da:	(bad)  
   1400207db:	loop   0x1400207c7
   1400207dd:	(bad)  
   1400207de:	push   rbp
   1400207df:	stos   DWORD PTR es:[rdi],eax
   1400207e0:	mov    cl,0x7d
   1400207e2:	pop    rsi
   1400207e3:	int3   
   1400207e4:	jge    0x14002078b
   1400207e6:	push   rax
   1400207e7:	adc    ch,BYTE PTR [rsi-0x17]
   1400207ea:	jle    0x1400207a2
   1400207ec:	retf   0x7a79
   1400207ef:	push   rcx
   1400207f0:	imul   ebx,DWORD PTR [rsi],0x2bf8f202
   1400207f6:	jp     0x14002080e
   1400207f8:	mov    ebp,0x8a09681c
   1400207fd:	mov    ebx,0x17e5abf7
   140020802:	mov    WORD PTR [rip+0x6792efbc],ss        # 0x1a794f7c4
   140020808:	cmp    DWORD PTR [rcx+rcx*1+0x79],ebp
   14002080c:	out    dx,al
   14002080d:	add    cl,BYTE PTR [rcx]
   14002080f:	add    ah,dl
   140020811:	add    ebx,DWORD PTR [rdi]
   140020813:	in     eax,0x2e
   140020815:	leave  
   140020816:	sub    al,0x74
   140020818:	sbb    DWORD PTR [rdx-0x64],edx
   14002081b:	(bad)  
   14002081c:	xchg   BYTE PTR [rdx],cl
   14002081f:	(bad)  
   140020820:	xor    ecx,DWORD PTR [rdx+0x5]
   140020823:	rex.WX xchg rdx,rax
   140020825:	push   rcx
   140020826:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020827:	movsxd edi,eax
   140020829:	adc    eax,0x1484a17a
   14002082e:	mov    rdi,db7
   140020831:	ja     0x140020851
   140020833:	pop    rsi
   140020834:	push   0xffffffffffffffb3
   140020836:	(bad)  
   140020837:	jmp    0x13e871d06
   14002083c:	int    0xd5
   14002083e:	mov    ?,ecx
   140020840:	ins    BYTE PTR es:[rdi],dx
   140020841:	(bad)  
   140020842:	imul   edx,edi,0xffffffae
   140020845:	repz (bad) 
   140020847:	rex.WXB scas rax,QWORD PTR es:[rdi]
   140020849:	jo     0x1400208bd
   14002084b:	jb     0x14002080f
   14002084d:	mov    ecx,0xfa79e7f3
   140020852:	fldenv [rdi+0x78]
   140020855:	hlt    
   140020856:	retf   0x5463
   140020859:	jne    0x140020808
   14002085b:	retf   0x7caa
   14002085e:	(bad)  
   14002085f:	(bad)  
   140020860:	mov    esp,es
   140020862:	in     eax,0xaa
   140020864:	mov    cl,0x0
   140020866:	int    0xce
   140020868:	mov    ebp,0xbc41ba2a
   14002086d:	jrcxz  0x1400208ec
   14002086f:	lods   al,BYTE PTR ds:[rsi]
   140020870:	xchg   DWORD PTR [rsi],esp
   140020872:	push   rdx
   140020873:	xlat   BYTE PTR ds:[rbx]
   140020874:	fdivr  DWORD PTR [rdx+0x18]
   140020877:	(bad)  
   140020878:	lock jno 0x1400208bb
   14002087b:	loopne 0x140020853
   14002087d:	test   eax,0xb51ce28d
   140020882:	outs   dx,DWORD PTR ds:[rsi]
   140020883:	pop    rax
   140020884:	(bad)  
   140020885:	(bad)  
   140020886:	jns    0x140020905
   140020888:	jl     0x1400208ef
   14002088a:	rex.WRXB (bad) 
   14002088c:	mov    al,0x5
   14002088e:	retf   
   14002088f:	sub    DWORD PTR [rdi+0x3c50055b],0x52
   140020896:	(bad)  
   140020897:	or     al,BYTE PTR [rdx-0x69]
   14002089a:	out    dx,eax
   14002089b:	jmp    0x149592d24
   1400208a0:	mov    dl,0xd0
   1400208a2:	in     eax,0x24
   1400208a4:	(bad)  
   1400208a5:	pop    rdi
   1400208a6:	and    DWORD PTR [rsp+rbp*4],edi
   1400208a9:	or     al,0xbe
   1400208ab:	xchg   edx,eax
   1400208ac:	push   rax
   1400208ad:	jg     0x140020864
   1400208af:	fwait
   1400208b0:	jge    0x14002089a
   1400208b2:	jle    0x140020849
   1400208b4:	mov    esi,0xe92f3f37
   1400208b9:	mov    esi,0x4095cbe1
   1400208be:	fsubp  st(4),st
   1400208c0:	rex.XB sti 
   1400208c2:	call   QWORD PTR [rbp+0x78ff4194]
   1400208c8:	repnz (bad) 
   1400208ca:	jl     0x1400208a8
   1400208cc:	rex.WX pop rdx
   1400208ce:	outs   dx,BYTE PTR ds:[rsi]
   1400208cf:	int    0x38
   1400208d1:	js     0x1400208f2
   1400208d3:	movabs ds:0x38d9393014ae9cf7,eax
   1400208dc:	iret   
   1400208dd:	(bad)  
   1400208de:	jle    0x1400208c8
   1400208e0:	add    ch,bh
   1400208e2:	jnp    0x1400208e3
   1400208e4:	(bad)  
   1400208e5:	cmp    DWORD PTR [rdx],edi
   1400208e7:	fsubr  st(3),st
   1400208e9:	cmc    
   1400208ea:	sbb    esi,DWORD PTR [rdi]
   1400208ec:	js     0x1400208cf
   1400208ee:	(bad)
   1400208f1:	std    
   1400208f2:	mov    ch,0xeb
   1400208f4:	sub    al,0x16
   1400208f6:	or     eax,DWORD PTR [rcx+riz*8]
   1400208f9:	jo     0x14002097a
   1400208fb:	lahf   
   1400208fc:	std    
   1400208fd:	sti    
   1400208fe:	test   DWORD PTR [rcx],0x2eaaea44
   140020904:	jo     0x1400208e6
   140020906:	mov    edx,0xfc3695ae
   14002090b:	loop   0x140020932
   14002090d:	mov    dh,0xb6
   14002090f:	iret   
   140020910:	imul   ecx,DWORD PTR [rax],0x31
   140020913:	frstor [rax-0x2b]
   140020916:	(bad)  
   140020917:	(bad)  
   140020918:	sub    ah,BYTE PTR [rdi+0x40]
   14002091b:	mov    WORD PTR [rcx-0x47],ss
   14002091e:	jmp    0x1400208f4
   140020920:	pop    rcx
   140020921:	sub    DWORD PTR [rdi],edx
   140020923:	and    eax,0x3e3eb90b
   140020928:	(bad)  [rdi]
   14002092a:	adc    BYTE PTR [rbx+0x7d5ee790],dh
   140020930:	xor    eax,0x69502ad5
   140020935:	stos   BYTE PTR es:[rdi],al
   140020936:	push   rax
   140020937:	xchg   esp,eax
   140020938:	cwde   
   140020939:	(bad)  
   14002093a:	out    0x8c,al
   14002093c:	cwde   
   14002093d:	xor    ebp,eax
   14002093f:	mov    BYTE PTR [rbp-0x46],dh
   140020942:	xchg   ecx,eax
   140020943:	pop    rsi
   140020944:	xor    DWORD PTR [rdi-0x656f6d11],edx
   14002094a:	mov    esi,0xfa3b9fcb
   14002094f:	hlt    
   140020950:	jno    0x1400208f1
   140020952:	add    BYTE PTR [rax],bh
   140020954:	xlat   BYTE PTR ds:[rbx]
   140020955:	in     al,0x4d
   140020957:	fisub  DWORD PTR [rbx-0x9a8253c]
   14002095d:	xor    dl,BYTE PTR [rdx-0x509ad5da]
   140020963:	cmp    DWORD PTR [rsi-0x33],0x1f
   140020967:	cli    
   140020968:	pop    rsi
   140020969:	rex.XB (bad) 
   14002096b:	or     bl,BYTE PTR [rax]
   14002096d:	mov    cl,0xd9
   14002096f:	sub    ecx,DWORD PTR gs:[rsi+0x4adce48a]
   140020976:	rex.WX cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020978:	pop    rsi
   140020979:	jg     0x140020970
   14002097b:	sbb    ch,BYTE PTR [rdi]
   14002097d:	mov    edi,0xef7722f0
   140020982:	fisub  WORD PTR [rbx+0x6d]
   140020985:	mov    dl,0xc6
   140020987:	jnp    0x140020967
   140020989:	neg    DWORD PTR [rsi-0x62]
   14002098c:	js     0x140020978
   14002098e:	rex.WB
   14002098f:	shl    DWORD PTR es:[rip+0x518958b5],cl        # 0x1918b624b
   140020996:	mov    eax,0xd1953a7
   14002099b:	xchg   esi,ecx
   14002099d:	cmp    BYTE PTR [rdi],dh
   14002099f:	add    cl,BYTE PTR [rbp+riz*2+0x4d]
   1400209a3:	in     eax,dx
   1400209a4:	ret    
   1400209a5:	sub    cl,BYTE PTR [rdx-0x1b]
   1400209a8:	rex.X mov ecx,DWORD PTR [rbp-0x793b6364]
   1400209af:	adc    ecx,DWORD PTR [rsi]
   1400209b1:	and    ah,dl
   1400209b3:	add    cl,BYTE PTR [rsi+rax*2]
   1400209b6:	rol    DWORD PTR [rdi+rcx*4],1
   1400209b9:	repz ds (bad) 
   1400209bc:	xchg   ebp,eax
   1400209bd:	mov    eax,DWORD PTR [rbx-0x2410f72f]
   1400209c3:	js     0x140020a39
   1400209c5:	mov    edx,0xa9ad9fc0
   1400209ca:	(bad)  
   1400209cb:	pop    rdi
   1400209cc:	rex.RX clc 
   1400209ce:	cli    
   1400209cf:	test   BYTE PTR [rax],0xe0
   1400209d2:	sub    ebp,DWORD PTR [rbx]
   1400209d4:	(bad)  
   1400209d5:	mov    esi,0xaa17d057
   1400209da:	sub    al,0x74
   1400209dc:	pop    rcx
   1400209dd:	sbb    esp,esi
   1400209df:	(bad)  
   1400209e0:	out    0xfb,eax
   1400209e2:	mul    BYTE PTR [rcx+0xe5257db]
   1400209e8:	ud2    
   1400209ea:	cld    
   1400209eb:	push   rdi
   1400209ec:	jnp    0x140020a6d
   1400209ee:	mov    esi,0xcb72af99
   1400209f3:	mov    ch,BYTE PTR [rdx]
   1400209f5:	(bad)  
   1400209f6:	(bad)  
   1400209f7:	pop    rdx
   1400209f8:	mov    ss,WORD PTR [rbx]
   1400209fa:	(bad)  
   1400209fb:	push   rsi
   1400209fc:	cmp    eax,0x8016bf2
   140020a01:	ins    DWORD PTR es:[rdi],dx
   140020a02:	ror    DWORD PTR [rsi+0x108b0842],cl
   140020a08:	jrcxz  0x140020a62
   140020a0a:	rex.R jrcxz 0x140020a07
   140020a0d:	in     eax,0x52
   140020a0f:	cmp    DWORD PTR [rsi],ecx
   140020a11:	and    esi,DWORD PTR [rax]
   140020a13:	pop    rsp
   140020a14:	(bad)  
   140020a15:	iret   
   140020a16:	(bad)  
   140020a17:	jle    0x140020a09
   140020a19:	or     bl,bh
   140020a1b:	cld    
   140020a1c:	cmp    edi,DWORD PTR [rdi]
   140020a1e:	mov    cl,0xc1
   140020a21:	(bad)  
   140020a22:	scas   eax,DWORD PTR es:[rdi]
   140020a23:	fistp  QWORD PTR [rcx+rcx*8-0x334350d5]
   140020a2a:	int    0xab
   140020a2c:	scas   eax,DWORD PTR es:[rdi]
   140020a2d:	jb     0x140020aab
   140020a2f:	jl     0x1400209fd
   140020a31:	push   0xffffffffffffffb5
   140020a33:	movabs ds:0x8674ecf8847469,al
   140020a3c:	imul   edi
   140020a3e:	ffree  st(5)
   140020a40:	mov    esp,0xf726a2f4
   140020a45:	sub    al,BYTE PTR [rdi-0x60b8714b]
   140020a4b:	js     0x1400209cf
   140020a4d:	(bad)  
   140020a4e:	scas   al,BYTE PTR es:[rdi]
   140020a4f:	cmp    al,0xc9
   140020a51:	je     0x140020ac6
   140020a53:	xchg   ebx,eax
   140020a54:	sar    edx,1
   140020a56:	(bad)  
   140020a57:	xchg   ebx,eax
   140020a58:	jmp    0xf01d5783
   140020a5d:	jne    0x140020a0c
   140020a5f:	in     al,0x9f
   140020a61:	push   rcx
   140020a62:	cmp    al,BYTE PTR [rax+0x52]
   140020a65:	out    dx,eax
   140020a66:	rex and DWORD PTR [rbx-0x7],ebx
   140020a6a:	xchg   DWORD PTR [rsi-0x41e131b2],ecx
   140020a70:	rex
   140020a71:	rex.WB hlt 
   140020a73:	xchg   ecx,eax
   140020a74:	jrcxz  0x140020a5d
   140020a76:	in     al,0xe3
   140020a78:	stos   DWORD PTR es:[rdi],eax
   140020a79:	lock (bad) 
   140020a7b:	mov    ds,WORD PTR [rcx]
   140020a7d:	pop    rax
   140020a7e:	jp     0x140020aa1
   140020a80:	rex.RX (bad) 
   140020a82:	out    0xd0,eax
   140020a84:	mov    ecx,0x274639eb
   140020a89:	(bad)  
   140020a8a:	add    al,0x8d
   140020a8c:	mov    esi,0x85f1732f
   140020a91:	sbb    BYTE PTR [rax+0x4a1b1129],dh
   140020a97:	outs   dx,DWORD PTR ds:[rsi]
   140020a98:	xor    DWORD PTR [rdi+rbx*2-0x73],0x14
   140020a9d:	jg     0x140020ac3
   140020a9f:	(bad)  
   140020aa0:	adc    DWORD PTR [rcx],ebp
   140020aa2:	jns    0x140020aee
   140020aa4:	or     dh,BYTE PTR [rbx+0x48]
   140020aa7:	jns    0x140020aae
   140020aa9:	jb     0x140020b13
   140020aab:	(bad)  
   140020aac:	jns    0x140020aba
   140020aae:	(bad)  
   140020aaf:	cmp    al,BYTE PTR [rdx-0x1213e309]
   140020ab5:	(bad)
   140020ab9:	and    dl,bh
   140020abb:	scas   eax,DWORD PTR es:[rdi]
   140020abc:	pop    rsi
   140020abd:	(bad)
   140020ac0:	push   rbx
   140020ac1:	rex.WRXB (bad) 
   140020ac3:	(bad)
   140020ac6:	jle    0x140020aff
   140020ac8:	pop    rbx
   140020ac9:	out    0xb6,eax
   140020acb:	iret   
   140020acc:	test   BYTE PTR [rip+0xffffffff94835526],dh        # 0xd4855ff8
   140020ad2:	pop    rsi
   140020ad3:	fdiv   QWORD PTR [rbx-0x2e21088d]
   140020ad9:	idiv   DWORD PTR [rsi-0x29]
   140020adc:	ja     0x140020b5b
   140020ade:	js     0x140020b1e
   140020ae0:	lahf   
   140020ae1:	(bad)  
   140020ae2:	or     al,0x6c
   140020ae4:	mov    bh,0x9
   140020ae6:	fbld   TBYTE PTR [rcx]
   140020ae8:	adc    r10,QWORD PTR [r14+0x2aea4621]
   140020aef:	(bad)  
   140020af0:	adc    BYTE PTR [rbx+0xb4d0eaa],ch
   140020af6:	mov    dl,0x98
   140020af8:	vmovhlps xmm12,xmm10,xmm7
   140020afc:	rex.WB fmul DWORD PTR [r15-0x33]
   140020b00:	sub    cl,BYTE PTR [rsi]
   140020b02:	lods   eax,DWORD PTR ds:[rsi]
   140020b03:	lea    edx,[rbx+0x384412ca]
   140020b09:	sbb    eax,0x347ac7af
   140020b0e:	mov    al,BYTE PTR [rbx-0x5899d4f9]
   140020b14:	mov    ebx,0xebf6b5b1
   140020b19:	pop    rsi
   140020b1a:	add    esp,esp
   140020b1c:	lods   eax,DWORD PTR ds:[rsi]
   140020b1d:	out    dx,eax
   140020b1e:	idiv   BYTE PTR [rdi]
   140020b20:	mov    esp,0x204afabc
   140020b25:	pop    rbx
   140020b26:	int    0x2c
   140020b28:	in     al,dx
   140020b29:	rex.X (bad) 
   140020b2b:	(bad)  
   140020b2c:	jl     0x140020b53
   140020b2e:	rex.WXB fst QWORD PTR [r15]
   140020b31:	loop   0x140020af1
   140020b33:	xor    eax,0xede7bd77
   140020b38:	push   rdi
   140020b39:	mov    eax,0x7f2c95ff
   140020b3e:	push   QWORD PTR [rcx-0x21]
   140020b41:	add    ebp,eax
   140020b43:	jnp    0x140020b72
   140020b45:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020b46:	idiv   edi
   140020b48:	stos   DWORD PTR es:[rdi],eax
   140020b49:	sub    DWORD PTR [rdi+0x743c4c7c],esi
   140020b4f:	(bad)  
   140020b50:	sbb    BYTE PTR [rbx-0x3a],ah
   140020b53:	and    DWORD PTR [rdi+rbx*1-0x77],eax
   140020b57:	(bad)  
   140020b59:	(bad)  
   140020b5a:	push   rsp
   140020b5b:	clc    
   140020b5c:	(bad)  
   140020b5d:	xor    DWORD PTR [rdx-0x3066d1a4],esi
   140020b63:	push   rdi
   140020b64:	or     BYTE PTR [rax],dh
   140020b66:	sahf   
   140020b67:	mov    WORD PTR [rcx-0x31],?
   140020b6a:	(bad)  
   140020b6b:	jl     0x140020aed
   140020b6d:	movd   esp,mm4
   140020b70:	movabs ds:0xdae1dfdeeca7972c,eax
   140020b79:	retf   
   140020b7a:	(bad)  
   140020b7b:	jae    0x140020b72
   140020b7d:	xchg   ebp,eax
   140020b7e:	xchg   edi,eax
   140020b7f:	(bad)  
   140020b81:	(bad)  
   140020b83:	loopne 0x140020b65
   140020b85:	and    BYTE PTR [rcx+0x22312cf8],dh
   140020b8b:	cmp    BYTE PTR [rdi+0x25],dl
   140020b8e:	retf   0xc0b5
   140020b91:	mov    ch,0x97
   140020b93:	pop    rdi
   140020b94:	out    0xda,al
   140020b96:	mov    ebp,DWORD PTR [rdi]
   140020b98:	adc    DWORD PTR [rip+0x60dd36b2],esp        # 0x1a0df4250
   140020b9e:	jnp    0x140020b9b
   140020ba0:	sbb    al,0x6b
   140020ba2:	jmp    0x140020bf7
   140020ba4:	(bad)  
   140020ba5:	pop    rdi
   140020ba6:	mov    esp,0x6c6fac4
   140020bab:	movabs ds:0x831ca918e1aa0db5,eax
   140020bb4:	rol    DWORD PTR [rcx+rsi*4+0x9],0x51
   140020bb9:	sub    eax,0x82110fad
   140020bbe:	(bad)  
   140020bbf:	xchg   ebx,eax
   140020bc0:	(bad)  
   140020bc1:	xor    cl,bl
   140020bc3:	(bad)  
   140020bc4:	enter  0x7e61,0x3a
   140020bc8:	rcr    BYTE PTR [rax-0x5e],1
   140020bcb:	add    eax,0xa8c735d3
   140020bd0:	stc    
   140020bd1:	out    dx,al
   140020bd2:	rex.WX xchg rdi,rax
   140020bd4:	in     eax,0xe2
   140020bd6:	(bad)
   140020bda:	rex.WRXB adc BYTE PTR [r9-0xb],r13b
   140020bde:	shl    BYTE PTR [rbx],1
   140020be0:	sbb    BYTE PTR [rbx-0x6d6fbdc0],dl
   140020be6:	or     dl,BYTE PTR [rax]
   140020be8:	sub    ch,cl
   140020bea:	rex.R jns 0x140020be7
   140020bed:	rex.WRXB sub al,0x67
   140020bf0:	pop    rdi
   140020bf1:	(bad)
   140020bf4:	mov    ah,0xb4
   140020bf6:	mov    ch,0xf9
   140020bf8:	in     al,dx
   140020bf9:	rex.RB xchg r10d,eax
   140020bfb:	add    al,0xa6
   140020bfd:	xor    bh,BYTE PTR [rcx]
   140020bff:	stc    
   140020c00:	cwde   
   140020c01:	test   dh,0x26
   140020c04:	(bad)  
   140020c05:	stos   BYTE PTR es:[rdi],al
   140020c06:	xchg   ebx,eax
   140020c07:	xchg   ebx,eax
   140020c08:	adc    ebx,DWORD PTR [rsi+0x7e]
   140020c0b:	inc    BYTE PTR [rbp+0x3e]
   140020c0e:	sti    
   140020c0f:	cdq    
   140020c10:	iret   
   140020c11:	mov    al,0x98
   140020c13:	iret   
   140020c14:	jns    0x140020bf8
   140020c16:	mov    DWORD PTR [rdi],esp
   140020c18:	jns    0x140020bf1
   140020c1a:	mov    ebx,0x93cae39f
   140020c1f:	(bad)  
   140020c20:	push   rbx
   140020c21:	xlat   BYTE PTR ds:[rbx]
   140020c22:	xor    eax,0x63146421
   140020c27:	xchg   DWORD PTR [rdx],ecx
   140020c29:	xor    al,0x22
   140020c2b:	sub    al,0x97
   140020c2d:	rex.WXB jbe 0x140020ca7
   140020c30:	out    dx,al
   140020c31:	repz loop 0x140020c3f
   140020c34:	(bad)  
   140020c35:	xchg   BYTE PTR [rbx-0x7e687c7d],al
   140020c3b:	jae    0x140020c0b
   140020c3d:	mov    ecx,0x8d8918ca
   140020c42:	ss pop rbx
   140020c44:	adc    dl,bl
   140020c46:	push   rsi
   140020c47:	add    al,0x9
   140020c49:	pop    rsi
   140020c4a:	and    ah,al
   140020c4c:	sbb    BYTE PTR [rdx+0x10],ah
   140020c4f:	(bad)  
   140020c50:	mov    edx,0xd898ce8e
   140020c55:	mov    dh,0x8d
   140020c57:	outs   dx,DWORD PTR ds:[rsi]
   140020c58:	and    esp,DWORD PTR [rdx+0x42]
   140020c5b:	or     BYTE PTR [rbp-0x2d],cl
   140020c5e:	(bad)  
   140020c5f:	rcr    DWORD PTR [rax],cl
   140020c61:	movsxd esi,DWORD PTR [rsi+riz*1]
   140020c64:	(bad)  
   140020c65:	mov    esp,DWORD PTR [rip+0x20989e9c]        # 0x1609aab07
   140020c6b:	(bad)  
   140020c6c:	jmp    0x14f9e7357
   140020c71:	xchg   bh,bh
   140020c73:	shr    BYTE PTR [rax],cl
   140020c75:	add    al,bh
   140020c77:	jb     0x140020cd0
   140020c79:	sbb    esi,ecx
   140020c7b:	mov    edx,0x862d5fd4
   140020c80:	jle    0x140020c5a
   140020c82:	rex.XB enter 0x9a82,0x9f
   140020c87:	retf   
   140020c88:	out    0xc8,eax
   140020c8a:	neg    dh
   140020c8c:	jrcxz  0x140020d08
   140020c8e:	div    DWORD PTR [rbx-0x18100820]
   140020c94:	out    dx,eax
   140020c95:	call   0x1287f9c19
   140020c9a:	(bad)  
   140020c9b:	cli    
   140020c9c:	(bad)  
   140020c9d:	(bad)  
   140020c9f:	std    
   140020ca0:	xchg   ebx,esi
   140020ca2:	add    cl,BYTE PTR [rdi]
   140020ca4:	(bad)  
   140020ca5:	add    ecx,DWORD PTR [rdi]
   140020ca7:	mov    ebp,0x5d401456
   140020cac:	xlat   BYTE PTR ds:[rbx]
   140020cad:	xchg   ebx,eax
   140020cae:	loopne 0x140020d2d
   140020cb0:	mov    BYTE PTR [rcx-0x6913670b],cl
   140020cb6:	(bad)  
   140020cb7:	pop    rax
   140020cb8:	(bad)  
   140020cb9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020cba:	pop    rcx
   140020cbb:	stos   DWORD PTR es:[rdi],eax
   140020cbc:	nop
   140020cbd:	loope  0x140020c52
   140020cbf:	fldcw  WORD PTR [rcx]
   140020cc1:	rex.RXB (bad) 
   140020cc3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020cc4:	cmp    BYTE PTR [rdi+0x18],ah
   140020cc7:	(bad)  
   140020cc8:	(bad)  
   140020cc9:	lods   al,BYTE PTR ds:[rsi]
   140020cca:	outs   dx,DWORD PTR ds:[rsi]
   140020ccb:	cmp    eax,0xc77eb7c2
   140020cd0:	(bad)  
   140020cd2:	push   rdi
   140020cd3:	dec    DWORD PTR [rbp-0x6b031a66]
   140020cd9:	jrcxz  0x140020ce2
   140020cdb:	(bad)  
   140020cdc:	fdivr  QWORD PTR [rdx-0x3]
   140020cdf:	(bad)  
   140020ce0:	scas   eax,DWORD PTR es:[rdi]
   140020ce1:	pop    rbp
   140020ce2:	mov    edi,0x7dcecece
   140020ce7:	outs   dx,BYTE PTR ds:[rsi]
   140020ce8:	fnstsw WORD PTR [rdx-0x63]
   140020ceb:	ret    
   140020cec:	std    
   140020ced:	jge    0x140020d05
   140020cef:	repz mov ecx,0x860f0332
   140020cf5:	mov    esi,es
   140020cf7:	and    eax,DWORD PTR [rax+rbx*8]
   140020cfa:	mov    ebp,0xeefec3bf
   140020cff:	(bad)  
   140020d00:	scas   eax,DWORD PTR es:[rdi]
   140020d01:	pop    rbp
   140020d02:	jnp    0x140020c89
   140020d04:	shr    DWORD PTR [rax-0x3e],1
   140020d07:	(bad)  
   140020d08:	xor    al,0x64
   140020d0a:	xor    bl,BYTE PTR [rdx]
   140020d0c:	xor    ebx,DWORD PTR [rdx-0x20a4a7b4]
   140020d12:	(bad)  
   140020d13:	ins    DWORD PTR es:[rdi],dx
   140020d14:	jae    0x140020ca1
   140020d16:	repz xchg edi,eax
   140020d18:	(bad)  
   140020d19:	movabs eax,ds:0x3688e1b822b08e1a
   140020d22:	and    ax,0x9495
   140020d26:	rex mov ds,WORD PTR [rbx+0x1a0030e9]
   140020d2d:	mov    fs,WORD PTR [rdi]
   140020d2f:	stos   DWORD PTR es:[rdi],eax
   140020d30:	addr32 add al,0xf1
   140020d33:	stc    
   140020d34:	and    al,0xa4
   140020d36:	push   rbx
   140020d37:	xchg   ecx,eax
   140020d38:	sub    al,0xa6
   140020d3a:	sub    eax,0x71480813
   140020d3f:	jg     0x140020d27
   140020d41:	add    dh,ch
   140020d43:	cmc    
   140020d44:	push   rsi
   140020d45:	in     al,0x30
   140020d47:	movabs eax,ds:0x2af18ca35719d77b
   140020d50:	outs   dx,BYTE PTR ds:[rsi]
   140020d51:	mov    edi,0xa6265774
   140020d56:	rex.WRXB out 0xd7,al
   140020d59:	shl    BYTE PTR [rbx+0x11],cl
   140020d5c:	mov    al,0x56
   140020d5e:	jp     0x140020cf0
   140020d60:	(bad)  
   140020d61:	rcr    DWORD PTR [rcx-0x35],0x6a
   140020d65:	mov    ch,0xe4
   140020d67:	(bad)  
   140020d68:	rex.WXB scas rax,QWORD PTR es:[rdi]
   140020d6a:	repnz test eax,0x7635fb5f
   140020d70:	out    dx,al
   140020d71:	in     eax,dx
   140020d72:	jo     0x140020d65
   140020d74:	loop   0x140020d7b
   140020d76:	ds lock mov cl,0x8f
   140020d7a:	icebp  
   140020d7b:	in     al,dx
   140020d7c:	cmp    ebx,edi
   140020d7e:	(bad)  
   140020d7f:	js     0x140020db3
   140020d81:	push   rcx
   140020d82:	push   rdx
   140020d83:	pop    rdx
   140020d84:	lea    esp,[rcx]
   140020d86:	retf   0x691e
   140020d89:	outs   dx,DWORD PTR ds:[rsi]
   140020d8a:	mov    DWORD PTR [rdi+0x7f],esp
   140020d8d:	outs   dx,DWORD PTR ds:[rsi]
   140020d8e:	lahf   
   140020d8f:	fwait
   140020d90:	scas   eax,DWORD PTR es:[rdi]
   140020d91:	frstor [rdi+rdi*2+0x7f]
   140020d95:	(bad)  
   140020d96:	movsxd ecx,esp
   140020d98:	call   0x13f7a0c7c
   140020d9d:	mov    ebp,0xbf2bf0bf
   140020da2:	cld    
   140020da3:	rex.WXB movabs r15,0x5c512aba5ff3fcf0
   140020dad:	in     eax,dx
   140020dae:	lods   al,BYTE PTR ds:[rsi]
   140020daf:	mov    BYTE PTR [rbx-0x1e2e72de],dh
   140020db5:	mov    eax,0xaf5a411
   140020dba:	add    al,0x6b
   140020dbc:	rex.WRB or al,0x12
   140020dbf:	movabs ds:0x12f111acaa2695d4,al
   140020dc8:	imul   eax,DWORD PTR [rbx+0xc],0x9f9c6262
   140020dcf:	(bad)  
   140020dd0:	xchg   ebp,eax
   140020dd1:	xor    eax,0x668e75b1
   140020dd6:	ss xchg ebx,eax
   140020dd8:	rcl    ecx,0xe1
   140020ddb:	call   rbx
   140020ddd:	ficomp WORD PTR [rbx+0x5d75c906]
   140020de3:	ja     0x140020d83
   140020de5:	mov    edi,0xb97bef7b
   140020dea:	(bad)  
   140020deb:	mov    ds,WORD PTR [rdx-0x4f]
   140020dee:	adc    ah,BYTE PTR [rax]
   140020df0:	(bad)  
   140020df1:	(bad)  
   140020df2:	add    al,0xb8
   140020df4:	adc    esp,DWORD PTR [rsp+rcx*2+0x5128a24a]
   140020dfb:	push   0xffffffffffffffba
   140020dfd:	sub    eax,0x5b4f6dcb
   140020e02:	outs   dx,BYTE PTR ds:[rsi]
   140020e03:	mov    ebx,0xdd1331dd
   140020e08:	(bad)  
   140020e09:	rex.RXB cmp r11d,r10d
   140020e0c:	xor    ebp,ebp
   140020e0e:	cdq    
   140020e0f:	imul   esi,DWORD PTR [rdi-0x71ecc225],0x3130f999
   140020e19:	xor    DWORD PTR [rbx],edx
   140020e1b:	movsxd ecx,DWORD PTR [rbx-0x4e]
   140020e1e:	push   0xffffffffb6e5b64b
   140020e23:	rex.RX mov r8d,ebp
   140020e26:	popf   
   140020e27:	xchg   edx,eax
   140020e28:	sub    BYTE PTR [rdx-0x69],ch
   140020e2b:	and    eax,0x82291252
   140020e30:	add    al,0x49
   140020e32:	movabs al,ds:0xbed42a850a140550
   140020e3b:	push   rdi
   140020e3c:	in     eax,0xfe
   140020e3e:	fidivr WORD PTR [rbx-0x4783109]
   140020e44:	fmulp  st(3),st
   140020e46:	add    al,0x4c
   140020e48:	retf   0x4592
   140020e4b:	mov    ch,0xa4
   140020e4d:	(bad)  
   140020e4e:	popf   
   140020e4f:	mov    BYTE PTR [rdx-0x6833534],ch
   140020e55:	repnz mov esi,0x9ee73cac
   140020e5b:	in     eax,0x7f
   140020e5d:	inc    bh
   140020e5f:	outs   dx,BYTE PTR ds:[rsi]
   140020e60:	and    eax,0x725af003
   140020e65:	jne    0x140020e69
   140020e67:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020e68:	push   rbp
   140020e69:	imul   ebp,DWORD PTR [rsi-0x4697f0f2],0xb415eadf
   140020e73:	subsd  xmm5,QWORD PTR [rbp+0x6fdf57cc]
   140020e7b:	jne    0x140020e64
   140020e7d:	pop    rbx
   140020e7e:	or     eax,0x695c00
   140020e83:	push   0xfffffffffbeb5f39
   140020e88:	shl    BYTE PTR [rdx+0x4c],cl
   140020e8b:	stos   DWORD PTR es:[rdi],eax
   140020e8c:	shr    DWORD PTR [rdx-0xb],1
   140020e8f:	add    bl,BYTE PTR [rsi-0x15]
   140020e92:	cli    
   140020e93:	sub    al,0x60
   140020e95:	mov    ebp,0xad61df8c
   140020e9a:	(bad)  
   140020e9b:	fsub   st(6),st
   140020e9d:	imul   esp,edx,0xcd4964f1
   140020ea3:	cli    
   140020ea4:	rex.WX mov rsp,QWORD PTR [rdi-0x58d6755c]
   140020eab:	movabs al,ds:0x6b3530aa59b1ad56
   140020eb4:	push   rcx
   140020eb5:	sahf   
   140020eb6:	rex.RXB movabs eax,ds:0x6ec70393abbba790
   140020ec0:	jrcxz  0x140020e88
   140020ec2:	adc    esi,DWORD PTR [rdi-0x5d]
   140020ec5:	mov    al,0xd4
   140020ec7:	retf   0xaa25
   140020eca:	xchg   ebp,eax
   140020ecb:	adc    dl,BYTE PTR [rbx+0x53]
   140020ece:	xchg   edi,eax
   140020ecf:	cdq    
   140020ed0:	cdq    
   140020ed1:	mov    esi,0x2e2c2cc
   140020ed6:	retf   
   140020ed7:	mov    ecx,DWORD PTR [rbx+0x6c]
   140020eda:	outs   dx,BYTE PTR ds:[rsi]
   140020edb:	ins    BYTE PTR es:[rdi],dx
   140020edc:	loopne 0x140020f57
   140020ede:	sahf   
   140020edf:	(bad)  [rcx]
   140020ee1:	xchg   ebp,eax
   140020ee2:	movabs ds:0x52a25d4d90830f4b,eax
   140020eeb:	jne    0x140020e8b
   140020eed:	test   DWORD PTR [rdi+0x723e30c9],ebx
   140020ef3:	sbb    cl,bh
   140020ef5:	ja     0x140020f30
   140020ef7:	test   esi,esi
   140020ef9:	(bad)  
   140020efa:	outs   dx,BYTE PTR ds:[rsi]
   140020efb:	or     ch,BYTE PTR [rbp-0x13]
   140020efe:	je     0x140020ef5
   140020f00:	in     al,dx
   140020f01:	movabs al,ds:0x966f359719102f90
   140020f0a:	retf   
   140020f0b:	ins    BYTE PTR es:[rdi],dx
   140020f0c:	mov    edx,0x3af5ba23
   140020f11:	mov    bh,0x20
   140020f13:	xchg   ah,ch
   140020f15:	(bad)  
   140020f16:	cs std 
   140020f18:	(bad)  
   140020f19:	push   0xffffffff997af73d
   140020f1e:	xchg   BYTE PTR [rsi+riz*1],al
   140020f21:	jne    0x140020eca
   140020f23:	adc    eax,DWORD PTR [rdx-0x32]
   140020f26:	out    0x7,al
   140020f28:	sub    BYTE PTR [rcx-0x6d],dh
   140020f2b:	movabs ds:0xd27dc291152eb1dc,al
   140020f34:	movabs ds:0x1891f3c9a080af1c,eax
   140020f3d:	sub    BYTE PTR [rbx+0x1e2584d2],bl
   140020f43:	or     al,0xc2
   140020f45:	test   DWORD PTR [rip+0x79269753],eax        # 0x1b928a69e
   140020f4b:	icebp  
   140020f4c:	jnp    0x140020f7d
   140020f4e:	jo     0x140020f4e
   140020f50:	fdivr  QWORD PTR [rcx]
   140020f52:	or     bh,cl
   140020f54:	cmp    al,0xb7
   140020f56:	fnsave [rsi+0x2b]
   140020f59:	(bad)  
   140020f5a:	outs   dx,BYTE PTR ds:[rsi]
   140020f5b:	mov    esi,0x5ebe9e89
   140020f60:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020f61:	nop
   140020f62:	push   0x2460c4dd
   140020f67:	(bad)  
   140020f68:	add    eax,0x2a5aa4a4
   140020f6d:	xor    DWORD PTR [rcx],edi
   140020f6f:	ds rcl edx,0xe2
   140020f73:	adc    ah,BYTE PTR [rcx+0x14]
   140020f76:	sar    DWORD PTR [rdi],1
   140020f78:	rol    bh,1
   140020f7a:	xor    eax,0x7f640e07
   140020f7f:	jmp    0x1bfdc0f1b
   140020f84:	clc    
   140020f85:	movabs ds:0x7c3c3b3c9f3fe5ff,eax
   140020f8e:	rex.WRX sub r11,QWORD PTR [rcx-0x5ce4a5ef]
   140020f95:	lea    edx,[rax]
   140020f97:	(bad)  
   140020f98:	ss popf 
   140020f9a:	and    BYTE PTR [rax-0x1ede727b],bl
   140020fa0:	or     QWORD PTR [rax+r11*1+0x4a],rcx
   140020fa5:	test   eax,0x6d0db3c
   140020faa:	and    eax,0xce5cb911
   140020faf:	pop    rax
   140020fb0:	adc    BYTE PTR [rbp-0xa7f4fe0],ah
   140020fb6:	or     eax,0xfffffff8
   140020fb9:	rex.X pop rbx
   140020fbb:	and    esi,DWORD PTR [rdi-0x3c0ff7b2]
   140020fc1:	enter  0x19eb,0x85
   140020fc5:	rex.R scas al,BYTE PTR es:[rdi]
   140020fc7:	push   rsi
   140020fc8:	retf   0x8dab
   140020fcb:	(bad)  
   140020fcc:	(bad)  
   140020fcd:	cmp    edi,eax
   140020fcf:	(bad)  
   140020fd0:	mov    bh,bh
   140020fd2:	pop    rdx
   140020fd3:	iret   
   140020fd4:	pop    rdi
   140020fd5:	lods   eax,DWORD PTR ds:[rsi]
   140020fd6:	clc    
   140020fd7:	mov    esp,0xb5afe3c6
   140020fdc:	xchg   BYTE PTR [rbx-0x1942a011],ch
   140020fe2:	sub    edi,DWORD PTR [rdx+rax*4]
   140020fe5:	jp     0x140020fa4
   140020fe7:	outs   dx,DWORD PTR ds:[rsi]
   140020fe9:	(bad)  
   140020fea:	rcr    DWORD PTR [rax],cl
   140020fec:	mov    bl,0xcb
   140020fee:	mov    ebp,0x6dcb6e30
   140020ff3:	cmp    DWORD PTR [rbp-0x4d],ecx
   140020ff6:	(bad)  
   140020ff7:	sahf   
   140020ff8:	(bad)  
   140020ff9:	stos   BYTE PTR es:[rdi],al
   140020ffa:	(bad)  
   140020ffb:	test   ah,al
   140020ffd:	mov    esi,DWORD PTR [rbx]
   140020fff:	ficomp WORD PTR [rdx+0x6b]
   140021002:	ss ss ss pop rcx
   140021006:	pop    rbp
   140021007:	pop    rdi
   140021008:	mov    DWORD PTR [rdx],0x7981df19
   14002100e:	mov    dl,0xb9
   140021010:	sub    al,0xed
   140021012:	(bad)
   140021015:	(bad)  
   140021016:	sbb    al,0xe3
   140021018:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140021019:	fucomi st,st(7)
   14002101b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002101c:	nop
   14002101d:	int    0x52
   14002101f:	imul   edx,DWORD PTR [rcx+rbp*4+0x57],0xffffffaa
   140021024:	lods   al,BYTE PTR ds:[rsi]
   140021025:	lods   eax,DWORD PTR ds:[rsi]
   140021026:	lods   eax,DWORD PTR ds:[rsi]
   140021027:	mov    dl,0x30
   140021029:	(bad)  
   14002102a:	iret   
   14002102b:	cli    
   14002102c:	cli    
   14002102d:	sbb    dl,BYTE PTR [rbp-0x42a5668e]
   140021033:	rex.RX imul r14d,DWORD PTR [rbx-0x6d],0xae91a346
   14002103b:	rol    ah,1
   14002103d:	push   rax
   14002103e:	jrcxz  0x140020fe5
   140021040:	stc    
   140021041:	jns    0x140021029
   140021043:	addr32 addr32 push rax
   140021046:	rex.WX loope 0x140021044
   140021049:	ds cdq 
   14002104b:	ins    BYTE PTR es:[rdi],dx
   14002104c:	sahf   
   14002104d:	rex.X movabs eax,ds:0xaa54b32fd9fefbc0
   140021057:	jae    0x1400210cf
   140021059:	cmp    cl,ch
   14002105b:	xchg   ecx,eax
   14002105c:	mov    BYTE PTR [rdi-0x2],dh
   14002105f:	(bad)  
   140021060:	hlt    
   140021061:	es out dx,al
   140021063:	mov    eax,0xe4f1dd49
   140021068:	rcr    BYTE PTR [rdx+0x5b],cl
   14002106b:	js     0x140021080
   14002106d:	(bad)  
   14002106e:	lahf   
   14002106f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140021070:	or     edx,DWORD PTR [rax-0x5c]
   140021073:	push   rdi
   140021074:	fistp  DWORD PTR [rdx+0x30]
   140021077:	mov    WORD PTR [rbx-0x4f7bdb7a],es
   14002107d:	mov    es,WORD PTR [rdx-0x16d9c6d5]
   140021083:	mov    ecx,0x2a300930
   140021088:	and    r10d,ecx
   14002108b:	out    0xb9,al
   14002108d:	pop    rsp
   14002108e:	pop    rdi
   14002108f:	xchg   ebp,eax
   140021090:	rex.RB
   140021091:	rex.WB (bad) 
   140021093:	adc    BYTE PTR [rsi+0x6d],ah
   140021096:	jne    0x140021025
   140021098:	out    dx,eax
   140021099:	ds sti 
   14002109b:	sub    al,0x2f
   14002109d:	mov    ebp,0x14a51270
   1400210a2:	rex.RXB scas al,BYTE PTR es:[rdi]
   1400210a4:	mov    ebx,0xdc4edb8e
   1400210a9:	shl    eax,0xae
   1400210ac:	pop    rbp
   1400210ad:	js     0x14002110d
   1400210af:	pushf  
   1400210b0:	and    BYTE PTR [rdx+rdi*4],dh
   1400210b3:	stc    
   1400210b4:	(bad)  
   1400210b5:	(bad)  
   1400210b6:	rol    DWORD PTR [rcx+0x73321851],1
   1400210bc:	icebp  
   1400210bd:	adc    dl,BYTE PTR [rbx]
   1400210bf:	jrcxz  0x1400210a4
   1400210c1:	push   rsp
   1400210c2:	imul   esi,DWORD PTR [rip+0x38bb3b3a],0x74        # 0x178bd4c03
   1400210c9:	hlt    
   1400210ca:	or     BYTE PTR [rbx],al
   1400210cc:	cmp    ebp,0x78
   1400210cf:	jle    0x140021057
   1400210d1:	int    0xd2
   1400210d3:	mov    BYTE PTR [rsi+0x18],0x4
   1400210d7:	(bad)  
   1400210d8:	push   rax
   1400210d9:	(bad)  
   1400210da:	sbb    cl,BYTE PTR [rax+rdx*2-0x2ed2e73e]
   1400210e1:	fidivr DWORD PTR [rax-0x27]
   1400210e4:	or     al,0x51
   1400210e6:	adc    BYTE PTR [rdx],ah
   1400210e8:	movsxd ecx,DWORD PTR [rdx+0x24]
   1400210eb:	and    edx,DWORD PTR [rcx]
   1400210ed:	sbb    BYTE PTR [rbp-0x5ce53dae],cl
   1400210f3:	rex.RB and al,0x3c
   1400210f6:	ins    BYTE PTR es:[rdi],dx
   1400210f7:	push   0xa424641
   1400210fc:	rex.WB mov r9b,0xad
   1400210ff:	lea    ecx,[rdx-0x47]
   140021102:	ins    BYTE PTR es:[rdi],dx
   140021103:	or     al,0x10
   140021105:	out    0xf2,al
   140021107:	(bad)  
   140021108:	repz ficomp WORD PTR [rsi+rax*1]
   14002110c:	loopne 0x140021158
   14002110e:	or     eax,0x5ae7ed78
   140021113:	adc    eax,0x2dcebc49
   140021118:	pop    rsp
   140021119:	cdq    
   14002111a:	xor    al,0xbc
   14002111c:	cli    
   14002111d:	icebp  
   14002111e:	stos   DWORD PTR es:[rdi],eax
   14002111f:	or     eax,0xf71d5704
   140021124:	pop    rdx
   140021125:	xchg   BYTE PTR [rip+0x63eafe39],ah        # 0x1a3ed0f64
   14002112b:	in     eax,dx
   14002112c:	jmp    0x14002112a
   14002112e:	std    
   14002112f:	jp     0x14002111c
   140021131:	(bad)  
   140021132:	or     ch,0x66
   140021135:	mov    bl,0x59
   140021137:	movsxd ecx,DWORD PTR [rbp-0x5b5db5af]
   14002113d:	rex.RXB sbb BYTE PTR [r15-0x6f3928ff],r9b
   140021144:	fs mov edx,0xc62b96af
   14002114a:	jo     0x140021113
   14002114c:	jg     0x140021189
   14002114e:	in     al,0x5e
   140021150:	repz fsub DWORD PTR [rax]
   140021153:	mov    cl,BYTE PTR [rax]
   140021155:	rex.WXB and QWORD PTR [r11],rbx
   140021158:	sbb    ebx,DWORD PTR [rbx-0x6b51a397]
   14002115e:	and    al,0x9f
   140021160:	int    0xd2
   140021162:	push   rsi
   140021163:	sub    al,0xd2
   140021165:	push   rsi
   140021166:	call   0x17b8fda4f
   14002116b:	imul   ebp,DWORD PTR [rbx],0x5873e216
   140021171:	sbb    dh,BYTE PTR [rbp-0x2b7b39fa]
   140021177:	jmp    0x1400211ee
   140021179:	sbb    dh,ch
   14002117b:	sbb    al,BYTE PTR [rcx+0x3d]
   14002117e:	movabs al,ds:0xb41620c462a32d5c
   140021187:	xor    DWORD PTR [rcx+rdx*2-0xbfbefb8],eax
   14002118e:	cmc    
   14002118f:	cmc    
   140021190:	mov    dl,0x5c
   140021192:	sahf   
   140021193:	rex.RX loopne 0x140021130
   140021196:	xchg   BYTE PTR [rdx-0xb],ch
   140021199:	cmp    bl,BYTE PTR [rdx+0x27]
   14002119c:	in     al,0xb
   14002119e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002119f:	mov    ecx,0xa0b766b2
   1400211a4:	shr    esi,cl
   1400211a6:	and    al,0x4c
   1400211a8:	mov    BYTE PTR [rbx],al
   1400211aa:	cmc    
   1400211ab:	js     0x140021174
   1400211ad:	jbe    0x14002116c
   1400211af:	(bad)  
   1400211b0:	and    dl,BYTE PTR [rsi+0x52]
   1400211b3:	push   rdi
   1400211b4:	retf   
   1400211b5:	ja     0x140021200
   1400211b7:	shl    BYTE PTR [rsi+rbx*1-0x32958361],0xa0
   1400211bf:	add    BYTE PTR [rdi],dh
   1400211c1:	mov    edi,0x4131f881
   1400211c6:	rex.WX
   1400211c7:	rex.WRX sub r14b,BYTE PTR [rax+0x4]
   1400211cb:	mov    cl,0xad
   1400211cd:	inc    DWORD PTR [rdx]
   1400211cf:	sub    eax,DWORD PTR [rsi+rdi*4]
   1400211d2:	out    0x51,eax
   1400211d4:	lods   eax,DWORD PTR ds:[rsi]
   1400211d5:	push   rsp
   1400211d6:	sbb    BYTE PTR [rsi],bh
   1400211d8:	std    
   1400211d9:	sub    bl,BYTE PTR [rdi-0x7]
   1400211dc:	loop   0x140021175
   1400211de:	pop    rcx
   1400211df:	pop    rdi
   1400211e0:	pop    rbp
   1400211e1:	in     eax,0xe8
   1400211e3:	or     eax,0xedeb7037
   1400211e8:	mov    bh,0x73
   1400211ea:	in     eax,dx
   1400211eb:	loope  0x140021230
   1400211ed:	in     al,0xf2
   1400211ef:	fnstcw WORD PTR [rax+0x6d]
   1400211f2:	jno    0x140021180
   1400211f4:	adc    BYTE PTR [rdi+0x1e],dl
   1400211f7:	xchg   edx,eax
   1400211f8:	test   eax,0x8b0bcb44
   1400211fd:	mov    WORD PTR [rbp+0x7e61631f],ds
   140021203:	mov    ?,WORD PTR [rsi+rdi*4-0x40]
   140021207:	inc    BYTE PTR [rbx]
   140021209:	(bad)  
   14002120a:	fdiv   DWORD PTR [rdi+0x1d8a1aff]
   140021210:	ins    DWORD PTR es:[rdi],dx
   140021211:	xor    DWORD PTR [rcx+rdi*1],ebp
   140021214:	icebp  
   140021215:	jo     0x140021283
   140021217:	mov    dl,0x5a
   140021219:	(bad)  
   14002121a:	rex.WR test BYTE PTR [rbx+0x22],r13b
   14002121e:	jbe    0x140021278
   140021220:	rex.RB iret 
   140021222:	repz rex.WR adc al,0x86
   140021226:	push   rsi
   140021227:	or     DWORD PTR [rdi],esi
   140021229:	jmp    0x14002123d
   14002122b:	and    eax,0xa46d585
   140021230:	packsswb mm6,QWORD PTR [rax+0x2a4a6e29]
   140021237:	rex.WB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140021239:	mov    ch,0x55
   14002123b:	and    BYTE PTR [rdi+r9*8-0x36],dil
   140021240:	xor    BYTE PTR [rax-0x32052ca4],ah
   140021246:	(bad)  
   140021247:	add    BYTE PTR [rdx],dl
   140021249:	jns    0x140021278
   14002124b:	(bad)  
   14002124c:	sbb    bh,dh
   14002124e:	mov    esi,0x9c56bd62
   140021253:	popf   
   140021254:	enter  0xa5d5,0xc6
   140021258:	in     al,0xf5
   14002125a:	push   rdi
   14002125b:	(bad)  
   14002125c:	(bad)  
   14002125d:	scas   eax,DWORD PTR es:[rdi]
   14002125e:	push   rsi
   14002125f:	out    dx,al
   140021260:	(bad)  
   140021261:	(bad)  
   140021262:	scas   al,BYTE PTR es:[rdi]
   140021263:	ds out dx,al
   140021265:	cmc    
   140021266:	mov    esp,0xb867ef8f
   14002126b:	scas   al,BYTE PTR es:[rdi]
   14002126c:	pop    rsi
   14002126d:	scas   eax,DWORD PTR es:[rdi]
   14002126e:	add    BYTE PTR [rbx+rdi*2+0x67],ch
   140021272:	ja     0x140021294
   140021274:	mov    al,0xf6
   140021276:	repnz (bad) 
   140021278:	sbb    ch,dh
   14002127a:	rex.RX
   14002127b:	rex ja 0x1400212cd
   14002127e:	(bad)  
   14002127f:	ins    DWORD PTR es:[rdi],dx
   140021280:	ins    DWORD PTR es:[rdi],dx
   140021281:	ins    DWORD PTR es:[rdi],dx
   140021282:	js     0x140021302
   140021284:	(bad)  
   140021285:	imul   edx,DWORD PTR [rdx],0xe1534b90
   14002128b:	and    DWORD PTR [rcx+0x41],ebp
   14002128e:	outs   dx,BYTE PTR ds:[rsi]
   14002128f:	cmp    eax,0x6c2fcd0b
   140021294:	cld    
   140021295:	cwde   
   140021296:	sbb    DWORD PTR [rdi+0x144a9449],0xffffffc2
   14002129d:	sbb    eax,0xa9d7ab52
   1400212a2:	push   rsp
   1400212a3:	push   0xffffffffffffffcc
   1400212a5:	pop    rax
   1400212a6:	mov    bh,0xb3
   1400212a8:	sub    DWORD PTR [rcx],esp
   1400212aa:	push   rcx
   1400212ab:	sahf   
   1400212ac:	xchg   DWORD PTR [rdx-0x58399376],edx
   1400212b2:	push   rax
   1400212b3:	enter  0xf191,0x7d
   1400212b7:	jl     0x1400212e8
   1400212b9:	xchg   DWORD PTR [rax],ebp
   1400212bb:	out    0xe9,al
   1400212bd:	push   0xfffffffff19326eb
   1400212c2:	rex.WB (bad) 
   1400212c4:	hlt    
   1400212c5:	push   rcx
   1400212c6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400212c7:	xor    DWORD PTR [rcx-0x58],esi
   1400212ca:	jb     0x1400212b6
   1400212cc:	cld    
   1400212cd:	and    al,0xeb
   1400212cf:	jmp    0x1400212ec
   1400212d1:	js     0x140021284
   1400212d3:	jno    0x140021305
   1400212d5:	lods   eax,DWORD PTR ds:[rsi]
   1400212d6:	lods   eax,DWORD PTR ds:[rsi]
   1400212d7:	int3   
   1400212d8:	leave  
   1400212d9:	push   rdx
   1400212da:	and    al,0x60
   1400212dc:	adc    esi,DWORD PTR [rsi+0x2b90849d]
   1400212e2:	imul   ebx,DWORD PTR [rdx-0x2fa7964e],0x57ba1f44
   1400212ec:	rex.WX (bad) 
   1400212ee:	lods   al,BYTE PTR ds:[rsi]
   1400212ef:	mov    esi,0x578b1248
   1400212f4:	and    esi,esi
   1400212f6:	lods   al,BYTE PTR ds:[rsi]
   1400212f7:	jne    0x14002136f
   1400212f9:	test   BYTE PTR es:[rsi-0xca705bc],0x7a
   140021301:	and    eax,0x122772e
   140021306:	test   eax,0x4658c614
   14002130b:	xchg   edi,ecx
   14002130d:	repnz xchg ebp,eax
   14002130f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140021310:	lahf   
   140021311:	out    0xc2,al
   140021313:	test   DWORD PTR [rbx],ecx
   140021315:	or     al,0xd
   140021317:	or     eax,0xfabfcbf1
   14002131c:	iret   
   14002131d:	mov    ecx,0x8a31f8fe
   140021322:	in     eax,dx
   140021323:	in     eax,dx
   140021324:	sub    ebx,esp
   140021326:	push   rax
   140021327:	(bad)  
   140021328:	repz rex.WRXB or al,0x95
   14002132c:	hlt    
   14002132d:	jl     0x1400212f9
   14002132f:	fwait
   140021330:	fwait
   140021331:	pushf  
   140021332:	(bad)  
   140021333:	sbb    eax,0x9c5d2e5
   140021338:	ret    0x6430
   14002133b:	iret   
   14002133c:	sahf   
   14002133d:	mov    ebp,0x30eebe1c
   140021342:	cmp    eax,0xf9cdbd7d
   140021347:	xchg   DWORD PTR [rcx-0x8],esi
   14002134a:	adc    dl,ah
   14002134c:	sbb    edx,ebp
   14002134e:	rex.WX movabs rcx,0x1993695ac2f802b2
   140021358:	rex.WX (bad) 
   14002135a:	mov    ah,0xb6
   14002135c:	push   rsi
   14002135d:	sub    DWORD PTR [rcx],esp
   14002135f:	test   DWORD PTR [rbx],ebx
   140021361:	movsxd ebp,DWORD PTR [rsi-0x3f]
   140021364:	sbb    ah,BYTE PTR [rbx-0x73930473]
   14002136a:	xchg   ecx,eax
   14002136b:	push   rdx
   14002136c:	(bad)  
   14002136d:	rex.RB (bad) 
   14002136f:	mov    bh,0x3a
   140021371:	mov    cl,BYTE PTR [rax+0x31b46d22]
   140021377:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140021378:	mov    ebp,0xb0eb5dbd
   14002137d:	(bad)  
   14002137e:	retf   
   14002137f:	rex.B push 0x3266f300
   140021385:	add    BYTE PTR [rdi+0x1867af27],ch
   14002138b:	pop    rsi
   14002138c:	retf   
   14002138d:	int    0x6e
   14002138f:	jge    0x14002134d
   140021391:	push   rbp
   140021392:	pop    rsi
   140021393:	rex.WRXB xchg r9,rax
   140021395:	scas   eax,DWORD PTR es:[rdi]
   140021396:	sahf   
   140021397:	out    0x92,al
   140021399:	test   BYTE PTR [rbp-0x49f084a9],cl
   14002139f:	in     eax,0xfe
   1400213a1:	not    DWORD PTR [rbx-0x14b0a529]
   1400213a7:	(bad)  
   1400213a8:	sub    dl,BYTE PTR [rsi]
   1400213aa:	sbb    dh,ch
   1400213ac:	pop    rdx
   1400213ad:	test   DWORD PTR [rdi+0x3205fd3c],ebp
   1400213b3:	mov    esi,0x9dada14f
   1400213b8:	sbb    eax,0xf6f4fd7d
   1400213bd:	not    ebx
   1400213bf:	xlat   BYTE PTR ds:[rbx]
   1400213c0:	(bad)  
   1400213c1:	in     al,0x6
   1400213c3:	jl     0x14002143b
   1400213c5:	je     0x140021427
   1400213c7:	icebp  
   1400213c8:	push   rdx
   1400213c9:	cmp    eax,0x10cdd6d7
   1400213ce:	rex.W
   1400213cf:	rex.WRXB adc rax,0xfffffffffb697eef
   1400213d5:	lods   eax,DWORD PTR ds:[rsi]
   1400213d6:	js     0x140021365
   1400213d8:	cmovae edi,DWORD PTR [rax]
   1400213db:	sub    al,0xbf
   1400213dd:	xchg   edx,eax
   1400213de:	loopne 0x140021383
   1400213e0:	jo     0x1400213aa
   1400213e2:	cmp    BYTE PTR [rdi+0xe],dl
   1400213e5:	sar    DWORD PTR [rdx],cl
   1400213e7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400213e8:	pop    rdx
   1400213e9:	or     eax,0xe96ad6a8
   1400213ee:	sbb    al,0x86
   1400213f0:	push   rsi
   1400213f1:	out    dx,eax
   1400213f2:	and    eax,DWORD PTR [rcx]
   1400213f4:	or     bh,BYTE PTR [rcx-0x261177c7]
   1400213fa:	xor    al,0x1b
   1400213fc:	fbstp  TBYTE PTR [rdx]
   1400213fe:	rex.RX sbb r12d,ecx
   140021401:	jb     0x14002141c
   140021403:	fcom   DWORD PTR [rsi]
   140021405:	xchg   edi,eax
   140021406:	sbb    al,0x52
   140021408:	je     0x140021468
   14002140a:	movabs ds:0x457adb2b90c269ca,al
   140021413:	(bad)  
   140021414:	adc    al,0x44
   140021416:	rex.WXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140021418:	movabs eax,ds:0x490ab9c01e092d65
   140021421:	in     eax,0x20
   140021423:	sub    bl,BYTE PTR ds:[rcx-0x7065d81b]
   14002142a:	leave  
   14002142b:	fdivr  DWORD PTR [rbx]
   14002142d:	(bad)  
   14002142e:	lahf   
   14002142f:	popf   
   140021430:	out    0x6b,eax
   140021432:	pop    rdi
   140021433:	(bad)  
   140021434:	adc    bl,bh
   140021436:	jge    0x14002141e
   140021438:	pop    rcx
   140021439:	fidivr DWORD PTR [rbx]
   14002143b:	cmp    bh,BYTE PTR [rcx-0x39]
   14002143e:	jge    0x140021437
   140021440:	icebp  
   140021441:	jae    0x14002143a
   140021443:	fmul   st(5),st
   140021445:	mov    es,WORD PTR [rcx-0xc8b5b82]
   14002144b:	sub    BYTE PTR [rbp+0x1313eab8],al
   140021451:	add    ch,BYTE PTR [rbp-0x383968cb]
   140021457:	sbb    BYTE PTR [rsi],bh
   140021459:	jae    0x1400213e1
   14002145b:	mov    ch,0xd5
   14002145d:	push   rbp
   14002145e:	mov    edx,0xf9b9bbbb
   140021463:	xchg   esi,eax
   140021464:	fwait
   140021465:	sbb    edx,ebx
   140021467:	mov    bl,0x87
   140021469:	(bad)
   14002146e:	adc    BYTE PTR [rcx+0x7f],cl
   140021471:	add    DWORD PTR [rdx+0x10],eax
   140021474:	jmp    0x15a3680a1
   140021479:	jne    0x1400214c3
   14002147b:	jno    0x1400214c6
   14002147d:	ret    0x8d60
   140021480:	adc    al,0x52
   140021482:	or     cl,BYTE PTR [rbp+rax*8+0x7fff1b48]
   140021489:	mov    WORD PTR [rcx+rbp*8],es
   14002148c:	cmp    BYTE PTR [rax-0x649539eb],ch
   140021492:	icebp  
   140021493:	mov    dl,0x36
   140021495:	(bad)  
   140021496:	(bad)  
   140021497:	(bad)  
   140021498:	rex.B push 0x1d16947c
   14002149e:	ins    DWORD PTR es:[rdi],dx
   14002149f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400214a0:	(bad)  
   1400214a2:	movabs ds:0x84537b039241eb,eax
   1400214ab:	(bad)  
   1400214ac:	mov    bh,BYTE PTR [rdi+rdi*1-0x1d]
   1400214b0:	lock push rbx
   1400214b2:	(bad)  
   1400214b3:	pop    rdi
   1400214b4:	jmp    rdx
   1400214b6:	out    0xab,eax
   1400214b8:	mov    bh,0xdc
   1400214ba:	jbe    0x14002151e
   1400214bc:	jmp    QWORD PTR gs:[rcx+0x7d17f9eb]
   1400214c3:	sbb    DWORD PTR [rsi+rdi*2+0x46c645e5],0x47
   1400214cb:	cmp    BYTE PTR [rdi],dh
   1400214cd:	mov    esp,0x112bf0c0
   1400214d2:	retf   0x4473
   1400214d5:	movabs al,ds:0x831f67b5d97a3b3d
   1400214de:	rex.XB
   1400214df:	rex.XB adc al,0xda
   1400214e2:	cmp    ch,BYTE PTR [rcx+0x6f]
   1400214e5:	(bad)  
   1400214e6:	retf   
   1400214e7:	jbe    0x1400214bf
   1400214e9:	(bad)  
   1400214ea:	repz cli 
   1400214ec:	sub    al,0x61
   1400214ee:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400214ef:	sbb    eax,0xd0563ed6
   1400214f4:	es (bad) 
   1400214f6:	rex.WRXB xor r15,r9
   1400214f9:	jbe    0x1400214a0
   1400214fb:	rex.WB push 0xfffffffffa12faa2
   140021501:	jo     0x140021507
   140021503:	jmp    0x115d6a958
   140021508:	outs   dx,BYTE PTR ds:[rsi]
   140021509:	mov    DWORD PTR [rbx-0x102e359b],ebp
   14002150f:	(bad)  
   140021510:	ja     0x14002149e
   140021512:	jo     0x14002151d
   140021514:	mov    dl,0x26
   140021516:	jb     0x1400214d0
   140021518:	(bad)
   14002151b:	add    bl,cl
   14002151d:	xchg   edx,eax
   14002151e:	nop
   14002151f:	jae    0x140021530
   140021521:	(bad)  
   140021522:	jnp    0x14002152b
   140021524:	adc    dl,ah
   140021526:	pop    rdi
   140021527:	mov    dl,0xc2
   140021529:	je     0x14002159f
   14002152b:	pop    rax
   14002152c:	movabs ds:0x788287ca4b7d89c8,al
   140021535:	add    dl,BYTE PTR [rcx+rsi*4]
   140021538:	xchg   DWORD PTR [rax-0x1d],esp
   14002153b:	push   rax
   14002153c:	movabs ds:0x4250a91118907125,eax
   140021545:	mov    al,0xb1
   140021547:	mov    cl,0xc9
   140021549:	jae    0x14002151a
   14002154b:	jle    0x1400214e8
   14002154d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002154e:	(bad)  
   14002154f:	(bad)  
   140021550:	jns    0x140021588
   140021552:	(bad)  
   140021553:	(bad)  
   140021554:	stc    
   140021555:	mov    ecx,0x7b8dbeb7
   14002155a:	out    dx,eax
   14002155b:	mov    ebx,0xf6fbdd8f
   140021560:	and    bh,BYTE PTR [rbp+0x1f]
   140021563:	mov    al,0x8e
   140021565:	ret    0xfe3d
   140021568:	fdivr  QWORD PTR fs:[rdx+0x2daff5dd]
   14002156f:	scas   eax,DWORD PTR es:[rdi]
   140021570:	jo     0x14002155c
   140021572:	(bad)
   140021575:	pushf  
   140021576:	mov    eax,0x70cfd644
   14002157b:	std    
   14002157c:	shl    DWORD PTR [rbx+0x28e1be1c],1
   140021582:	ins    DWORD PTR es:[rdi],dx
   140021583:	sbb    eax,0xb485ce1d
   140021588:	outs   dx,BYTE PTR ds:[rsi]
   140021589:	xchg   esp,eax
   14002158a:	mov    ebp,0x8c06ff6b
   14002158f:	gs jno 0x140021608
   140021592:	outs   dx,BYTE PTR ds:[rsi]
   140021593:	repz std 
   140021595:	mov    edi,0xd6efcbf2
   14002159a:	push   rcx
   14002159b:	cmp    DWORD PTR fs:[rcx+rsi*1+0x31250b56],0xbb46906
   1400215a7:	cmc    
   1400215a8:	test   BYTE PTR [rcx+0x4ed08256],dh
   1400215ae:	stc    
   1400215af:	lea    esi,[rax-0x2d4e53ea]
   1400215b5:	push   rbx
   1400215b6:	or     dh,BYTE PTR ss:[rbp-0x4d9fae2b]
   1400215bd:	rex.X cwde 
   1400215bf:	mov    WORD PTR [rdi],fs
   1400215c1:	rex.WR test rax,0xffffffffad28e9b4
   1400215c7:	pop    rbx
   1400215c8:	(bad)  
   1400215c9:	imul   ebx,ebx,0x89ab6006
   1400215cf:	mov    ch,0x36
   1400215d1:	mov    WORD PTR [rbp*2-0x1c4302a3],gs
   1400215d8:	(bad)  
   1400215d9:	pop    rdi
   1400215da:	loopne 0x1400215a0
   1400215dc:	pop    rbp
   1400215dd:	outs   dx,DWORD PTR ds:[rsi]
   1400215de:	in     eax,0xd2
   1400215e0:	test   BYTE PTR [rbx],bl
   1400215e2:	or     DWORD PTR [rsi],edi
   1400215e4:	(bad)  
   1400215e5:	(bad)  
   1400215e6:	(bad)  
   1400215e7:	(bad)  
   1400215e8:	retf   0xa532
   1400215eb:	cmc    
   1400215ec:	or     eax,0xc09a5f2e
   1400215f1:	sbb    BYTE PTR [rbx-0x42260e61],cl
   1400215f7:	ja     0x140021618
   1400215f9:	fnstsw WORD PTR [rip+0xffffffff8be7c83b]        # 0xcbe9de3a
   1400215ff:	or     al,0xee
   140021601:	fimul  WORD PTR [rbp+0x26]
   140021604:	push   rdi
   140021605:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140021606:	rcl    cl,1
   140021608:	rex.WB
   140021609:	cs fwait
   14002160b:	rex.XB sub BYTE PTR [r13+0x6c51245],al
   140021612:	shl    DWORD PTR [rax+rdi*4+0x5a6289e5],0xdb
   14002161a:	movabs ds:0xadb6030c43e124e0,al
   140021623:	or     eax,0x5ca15c3c
   140021628:	out    dx,al
   140021629:	rex.RX mov eax,0xce50bc8c
   14002162f:	(bad)  
   140021630:	outs   dx,DWORD PTR ds:[rsi]
   140021631:	int    0xfc
   140021633:	adc    ebx,DWORD PTR [rdi-0x20674539]
   140021639:	test   ecx,edi
   14002163b:	push   rdi
   14002163c:	fwait
   14002163d:	(bad)  
   14002163e:	fwait
   14002163f:	sbb    BYTE PTR ss:[rip+0x26e682c9],ah        # 0x166e8990f
   140021646:	fsubrp st(4),st
   140021648:	(bad)  
   140021649:	(bad)  
   14002164a:	push   rdx
   14002164b:	mov    ecx,0x294dade7
   140021650:	mov    ebx,0x8fdb526d
   140021655:	adc    eax,0x482a89bf
   14002165a:	xchg   edx,eax
   14002165b:	(bad)  
   14002165c:	loopne 0x140021659
   14002165e:	ds adc r10b,sil
   140021662:	loop   0x1400216af
   140021664:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140021665:	js     0x140021663
   140021667:	movabs eax,ds:0xc7e3b1ca373b1987
   140021670:	stc    
   140021671:	outs   dx,DWORD PTR ds:[rsi]
   140021672:	jg     0x14002165f
   140021674:	pop    rdi
   140021675:	jae    0x140021654
   140021677:	shl    DWORD PTR [rbx-0x5d860c9c],1
   14002167d:	fs (bad) 
   14002167f:	rex.WRXB jb 0x14002168a
   140021682:	mov    cl,0xe2
   140021684:	sti    
   140021685:	sahf   
   140021686:	(bad)  
   140021687:	out    0xe6,al
   140021689:	(bad)  
   14002168a:	addr32 rex.WRXB lahf 
   14002168d:	loope  0x140021624
   14002168f:	xchg   edi,eax
   140021690:	pop    rdi
   140021691:	movabs eax,ds:0xe1b86bfecd706f51
   14002169a:	(bad)  
   14002169b:	jrcxz  0x140021689
   14002169d:	fnstenv [rdi+0x3c67bdd7]
   1400216a3:	mov    al,0xc5
   1400216a5:	fld    DWORD PTR [rcx+0x57]
   1400216a8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400216a9:	lods   eax,DWORD PTR ds:[rsi]
   1400216aa:	push   rsi
   1400216ab:	stos   DWORD PTR es:[rdi],eax
   1400216ac:	int3   
   1400216ad:	rex.WRXB iretq 
   1400216af:	xor    bh,BYTE PTR [rcx+0x69]
   1400216b2:	rol    BYTE PTR [rsi],cl
   1400216b4:	mov    r8b,0xc
   1400216b7:	hlt    
   1400216b8:	nop
   1400216b9:	js     0x140021645
   1400216bb:	(bad)  
   1400216bc:	(bad)  
   1400216be:	xchg   ebx,eax
   1400216bf:	mov    al,0x16
   1400216c1:	xor    al,0x56
   1400216c3:	xchg   sp,ax
   1400216c5:	mov    ah,0x75
   1400216c7:	ins    DWORD PTR es:[rdi],dx
   1400216c8:	je     0x140021684
   1400216ca:	push   0x29
   1400216cc:	mov    al,0x19
   1400216ce:	test   DWORD PTR [rax],ecx
   1400216d0:	lea    eax,[rsi+0x8]
   1400216d3:	sub    eax,0x30a5d494
   1400216d8:	mov    edx,0xb9246fa2
   1400216dd:	fnsave [rsi]
   1400216df:	add    BYTE PTR [rbx+0x4c],bl
   1400216e2:	mov    WORD PTR [rcx],?
   1400216e4:	add    ch,BYTE PTR [rbx-0x30]
   1400216e7:	cmp    ah,BYTE PTR [rdx-0x4c0ff6ac]
   1400216ed:	rex.RB mov ds,WORD PTR [r14]
   1400216f0:	mov    edi,0xb86eeb9d
   1400216f5:	mov    edx,esi
   1400216f7:	cli    
   1400216f8:	sub    dl,BYTE PTR [rdi+0x6c605e2e]
   1400216fe:	in     al,dx
   1400216ff:	cmp    al,0xb3
   140021701:	xor    edx,ebx
   140021703:	(bad)  
   140021704:	sub    dl,BYTE PTR [rip+0x5d4cb1ac]        # 0x19d4ec8b6
   14002170a:	mov    esp,0x3185c4c8
   14002170f:	test   BYTE PTR [rax+0x72058a14],dl
   140021715:	mov    ecx,0x9d1d1d3c
   14002171a:	mov    ah,0x75
   14002171c:	je     0x1400216ee
   14002171e:	fst    st(7)
   140021720:	iret   
   140021721:	loopne 0x1400216f1
   140021723:	cmp    eax,0x8a458be4
   140021728:	popf   
   140021729:	cmp    eax,0xa103cf18
   14002172e:	mov    BYTE PTR [rsi+riz*1+0x2628e78a],dh
   140021735:	mov    eax,0x82fba77f
   14002173a:	es xchg esi,eax
   14002173c:	sahf   
   14002173d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002173e:	repnz fist DWORD PTR [rsi-0x613c7605]
   140021745:	jb     0x140021748
   140021747:	ss jae 0x1400216e7
   14002174a:	rex.WB and dl,r10b
   14002174d:	sbb    DWORD PTR [rcx+0x12146a6c],0x1f871d26
   140021757:	xchg   edx,eax
   140021758:	push   0xffffffff92b328e3
   14002175d:	(bad)  
   14002175e:	pushf  
   14002175f:	fs push rax
   140021761:	test   al,0xdb
   140021763:	mov    ch,0x89
   140021765:	sti    
   140021766:	add    al,0xe2
   140021768:	int3   
   140021769:	jge    0x140021747
   14002176b:	xor    cl,BYTE PTR [rsp+rax*4+0x7c773474]
   140021772:	rex.WR xchg rdx,rax
   140021774:	mov    ebp,0xe66caf71
   140021779:	pop    rsi
   14002177a:	test   DWORD PTR [rax+rbp*1],edx
   14002177d:	pop    rdi
   14002177e:	jno    0x1400217e9
   140021780:	jl     0x140021704
   140021782:	(bad)  
   140021783:	(bad)  
   140021784:	jge    0x140021712
   140021786:	out    0xbe,eax
   140021788:	std    
   140021789:	sub    al,0x9d
   14002178b:	popf   
   14002178c:	popf   
   14002178d:	cld    
   14002178e:	(bad)  
   14002178f:	mov    edi,0xbf6e1dfd
   140021794:	repz add al,0xdd
   140021797:	mov    ebp,0x26e3183d
   14002179c:	ss and eax,0xd2924103
   1400217a2:	movabs al,ds:0xe2f28e8fce1811cb
   1400217ab:	neg    DWORD PTR [rsi+0x60]
   1400217ae:	jp     0x14002181a
   1400217b0:	mov    bl,BYTE PTR [rsi+0x78ee3ebe]
   1400217b6:	fisttp DWORD PTR [rcx]
   1400217b8:	(bad)  
   1400217b9:	pop    rsi
   1400217ba:	ja     0x140021744
   1400217bc:	mov    dh,0x62
   1400217be:	fwait
   1400217bf:	and    ebp,DWORD PTR [rdi-0x73]
   1400217c2:	rex.XB sahf 
   1400217c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400217c5:	(bad)  
   1400217c6:	rcr    DWORD PTR [rdx],0xc3
   1400217c9:	rol    dl,cl
   1400217cb:	and    dl,BYTE PTR [rdi+0x75625d2f]
   1400217d1:	jne    0x1400217f0
   1400217d3:	rex.WRXB test rax,0xfffffffffbfcffc2
   1400217d9:	push   rcx
   1400217db:	(bad)  
   1400217dc:	jp     0x1400217d0
   1400217de:	icebp  
   1400217df:	(bad)  
   1400217e0:	ds ss ss ss mov dh,0x64
   1400217e6:	pop    r9
   1400217e8:	movsxd ecx,DWORD PTR [rbp-0x74f4bd6c]
   1400217ee:	xor    al,BYTE PTR [rsi+0x1b]
   1400217f1:	sub    DWORD PTR [rbp-0x6be7377],edx
   1400217f7:	sahf   
   1400217f8:	shl    BYTE PTR [rcx+0x64],1
   1400217fb:	lods   eax,DWORD PTR ds:[rsi]
   1400217fc:	push   rdx
   1400217fd:	ss xchg ebx,eax
   1400217ff:	retf   
   140021800:	imul   edx,DWORD PTR [rbx],0x64245145
   140021806:	add    al,0xda
   140021808:	(bad)  
   140021809:	and    ebx,DWORD PTR [rip+0x2bfe54d1]        # 0x16c006ce0
   14002180f:	mov    esp,0xb0036dd7
   140021814:	(bad)
   140021817:	stos   DWORD PTR es:[rdi],eax
   140021818:	mov    ch,0xb5
   14002181a:	sub    eax,ebp
   14002181c:	and    BYTE PTR [rax],cl
   14002181e:	(bad)  
   140021820:	sub    QWORD PTR [r14+r15*2],r8
   140021824:	pop    rbx
   140021825:	(bad)  
   140021826:	mov    bh,0xdd
   140021828:	cmc    
   140021829:	jbe    0x140021819
   14002182b:	jp     0x140021818
   14002182d:	mov    ebp,0x332dac6c
   140021832:	ds ds (bad) 
   140021835:	call   0x18cce4c13
   14002183a:	rex.WRB movabs ds:0xb52ad56a228a21b5,al
   140021844:	push   0xffffffffffffff95
   140021846:	mov    ch,0xd5
   140021848:	adc    eax,0x7c67e040
   14002184d:	(bad)  
   14002184e:	ficomp DWORD PTR [rbx+0x29]
   140021851:	cld    
   140021852:	ins    BYTE PTR es:[rdi],dx
   140021853:	xchg   esi,eax
   140021854:	pop    rbp
   140021855:	jnp    0x14002184e
   140021857:	sar    DWORD PTR [rdi],1
   140021859:	mov    eax,0x2ecef68b
   14002185e:	jp     0x14002185a
   140021860:	cli    
   140021861:	lock repz sbb r12b,BYTE PTR [r9+0x44]
   140021867:	(bad)  
   140021869:	sbb    al,0x97
   14002186b:	out    dx,eax
   14002186c:	rex.WR cli 
   14002186e:	push   rbp
   14002186f:	rex.WXB sbb al,BYTE PTR [r9+0x3bdf15ec]
   140021876:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140021877:	sub    DWORD PTR [rsi],0x4362b852
   14002187d:	mov    ah,BYTE PTR [rip+0xffffffffec65eb8e]        # 0x12c680411
   140021883:	sbb    eax,0xba71f2e0
   140021888:	push   rbp
   140021889:	rcl    edx,1
   14002188b:	adc    DWORD PTR [rip+0x494898ce],edi        # 0x1894ab15f
   140021891:	xchg   ebx,eax
   140021892:	imul   edx,DWORD PTR [rdi-0x5c],0xf8f881d9
   140021899:	cmp    bh,ah
   14002189b:	nop
   14002189c:	js     0x1400218c9
   14002189e:	and    dl,BYTE PTR [rsi+0x76]
   1400218a1:	rex.B int3 
   1400218a3:	mov    al,0x14
   1400218a5:	(bad)  
   1400218a6:	xor    eax,0xd6c0edd6
   1400218ab:	ret    0xeada
   1400218ae:	sub    cl,bh
   1400218b0:	jl     0x140021895
   1400218b2:	sbb    edi,DWORD PTR [rcx+riz*8-0x37]
   1400218b6:	iret   
   1400218b7:	push   rdx
   1400218b8:	scas   eax,DWORD PTR es:[rdi]
   1400218b9:	xlat   BYTE PTR ds:[rbx]
   1400218ba:	js     0x14002189c
   1400218bc:	mov    ebp,0xf75de5ef
   1400218c1:	(bad)  
   1400218c3:	loopne 0x1400218b3
   1400218c5:	pop    rbp
   1400218c6:	pop    rax
   1400218c7:	imul   ecx,DWORD PTR [rcx+0x688108a2],0xffffff86
   1400218ce:	cmp    ecx,DWORD PTR [rcx]
   1400218d0:	(bad)  
   1400218d1:	and    BYTE PTR [rsi-0x619a5a1b],dl
   1400218d7:	dec    esi
   1400218d9:	ja     0x140021914
   1400218db:	std    
   1400218dc:	retf   0x642b
   1400218df:	mov    bl,0x59
   1400218e1:	outs   dx,BYTE PTR ds:[rsi]
   1400218e2:	mov    edx,0xbe6e56f5
   1400218e7:	cmc    
   1400218e8:	(bad)  
   1400218e9:	jbe    0x1400218df
   1400218eb:	in     eax,dx
   1400218ec:	add    BYTE PTR [rcx-0x72c8b9d0],ch
   1400218f2:	pop    rcx
   1400218f3:	pushf  
   1400218f4:	jmp    FWORD PTR [rax+0x1a5c2b94]
   1400218fa:	lahf   
   1400218fb:	(bad)  
   1400218fc:	outs   dx,BYTE PTR ds:[rsi]
   1400218fd:	xchg   si,ax
   1400218ff:	sub    BYTE PTR [rdx-0x1fe5e3e8],cl
   140021905:	fisub  DWORD PTR [rbx]
   140021907:	xchg   ebp,edi
   140021909:	ins    BYTE PTR es:[rdi],dx
   14002190a:	es repz rex.WXB (bad) 
   14002190f:	(bad)  
   140021910:	xlat   BYTE PTR ds:[rbx]
   140021911:	(bad)  
   140021912:	sbb    DWORD PTR [rdi+0x31840289],edi
   140021918:	push   rsi
   140021919:	sub    BYTE PTR [rcx],ch
   14002191b:	lea    esi,[rip+0x4954968e]        # 0x18956afaf
   140021921:	gs ret 
   140021923:	movsxd rdx,DWORD PTR [rbp+0x1d0ad232]
   14002192a:	(bad)  
   14002192b:	push   0xffffffffffffff91
   14002192d:	rex.WR mov BYTE PTR [edx+edi*8-0x15006896],r10b
   140021936:	out    dx,eax
   140021937:	retf   
   140021938:	mov    dh,0x1
   14002193a:	fsub   DWORD PTR [rdx+0x22]
   14002193d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002193e:	lods   al,BYTE PTR ds:[rsi]
   14002193f:	pop    rax
   140021940:	movsxd esi,DWORD PTR [rax+0x8e835c2]
   140021946:	sub    DWORD PTR [rcx],edx
   140021948:	rex.RX movabs ds:0x4c48e8610dd746b5,eax
   140021952:	fisttp DWORD PTR [rdx]
   140021954:	fstp   st(4)
   140021956:	cmc    
   140021957:	jae    0x1400219c8
   140021959:	out    0xed,eax
   14002195b:	idiv   DWORD PTR [rsi+0x3ad2cd93]
   140021961:	jae    0x140021916
   140021963:	xor    ecx,DWORD PTR [rsi+rbx*4+0x4be5cb3d]
   14002196a:	adc    ebp,DWORD PTR [rsi+rbp*2+0x6e]
   14002196e:	push   rdx
   14002196f:	scas   al,BYTE PTR es:[rdi]
   140021970:	xchg   esp,eax
   140021971:	test   eax,0x1d68aa55
   140021976:	adc    DWORD PTR [rsi],eax
   140021978:	movabs eax,ds:0x33afae6c2a56b783
   140021981:	jp     0x14002197d
   140021983:	push   rbp
   140021984:	lods   al,BYTE PTR ds:[rsi]
   140021985:	mov    ch,0x74
   140021987:	jne    0x140021980
   140021989:	rcr    dh,1
   14002198b:	(bad)  
   14002198c:	inc    r8
   14002198f:	and    ch,bh
   140021991:	rex.XB mov r11d,0x68da15c8
   140021997:	jmp    0x140021985
   140021999:	rex.RX clc 
   14002199b:	sbb    edi,edx
   14002199d:	call   0x15c9e7ec5
   1400219a2:	mov    ah,0x60
   1400219a4:	rex.WR mov rdi,ss
   1400219a7:	mov    edx,DWORD PTR [rip+0xffffffffb7be19b7]        # 0xf7c03364
   1400219ad:	(bad)  
   1400219ae:	out    dx,al
   1400219af:	movabs ds:0x524b1148692c7cf9,al
   1400219b8:	movabs ds:0x75cb36d22fa331b3,al
   1400219c1:	mov    cl,0x27
   1400219c3:	loop   0x1400219e5
   1400219c5:	ror    ch,0x3a
   1400219c8:	mov    esi,0x2f3a4b4
   1400219cd:	shl    esi,cl
   1400219cf:	sahf   
   1400219d0:	(bad)  
   1400219d1:	cmp    al,0x8
   1400219d3:	sar    BYTE PTR [rdx+0x549ef271],0x54
   1400219da:	retf   0x5e65
   1400219dd:	jge    0x1400219d8
   1400219df:	adc    eax,0x4fdbfe1e
   1400219e4:	xor    DWORD PTR [rcx+0x7e],esi
   1400219e7:	mov    WORD PTR [rbx+0x7f87b9ee],?
   1400219ed:	cli    
   1400219ee:	mov    esi,0x75f0e45f
   1400219f3:	xlat   BYTE PTR ds:[rbx]
   1400219f4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400219f5:	cmp    edi,DWORD PTR [rbx-0x5166d085]
   1400219fb:	rcl    DWORD PTR [rbp+0x2ad4334e],cl
   140021a01:	push   rbp
   140021a02:	rex.WRX popf 
   140021a04:	jl     0x140021997
   140021a06:	out    0xbe,eax
   140021a08:	std    
   140021a09:	ins    DWORD PTR es:[rdi],dx
   140021a0a:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140021a0c:	adc    dl,bh
   140021a0e:	(bad)  
   140021a0f:	cmp    al,ah
   140021a11:	in     eax,dx
   140021a12:	(bad)  
   140021a13:	out    dx,al
   140021a14:	loopne 0x1400219b0
   140021a16:	add    DWORD PTR [rdi],0xfffffff0
   140021a19:	cmp    eax,0x881cfd3f
   140021a1e:	repz sbb DWORD PTR [rsi+0x48],edx
   140021a22:	rex.WR adc al,0x32
   140021a25:	(bad)  
   140021a26:	cmp    eax,0x79e8d8cf
   140021a2b:	ss (bad) 
   140021a2d:	(bad)  
   140021a2e:	jmp    0x130e3071f
   140021a33:	jne    0x1400219bc
   140021a35:	fnstenv [rbp+0x267e3767]
   140021a3b:	ret    
   140021a3c:	ret    0x7cfc
   140021a3f:	test   eax,0x6d27af51
   140021a44:	in     eax,dx
   140021a45:	and    bh,BYTE PTR [rsi+0xf1318c5]
   140021a4b:	lods   eax,DWORD PTR ds:[rsi]
   140021a4c:	adc    dl,BYTE PTR [rsi+0x5b]
   140021a4f:	lods   al,BYTE PTR ds:[rsi]
   140021a50:	rex.R push 0xffffffffa46475a3
   140021a56:	or     al,0xb0
   140021a58:	or     ah,BYTE PTR ss:[rax]
   140021a5b:	rex.WX (bad) 
   140021a5d:	sti    
   140021a5e:	jge    0x140021ad2
   140021a60:	push   rsi
   140021a61:	fild   DWORD PTR [rsi]
   140021a63:	(bad)  
   140021a64:	stos   DWORD PTR es:[rdi],eax
   140021a65:	mov    DWORD PTR [rdx+0x4c835b56],edx
   140021a6b:	pop    rbp
   140021a6c:	push   0x14902a93
   140021a71:	outs   dx,BYTE PTR ds:[rsi]
   140021a72:	and    BYTE PTR [rdi],0x16
   140021a75:	rex.WX xchg rbp,rax
   140021a77:	or     bl,BYTE PTR [rbx+0x4a5232e5]
   140021a7d:	mov    al,ch
   140021a7f:	and    al,BYTE PTR [rdi]
   140021a81:	(bad)  
   140021a82:	(bad)  
   140021a83:	jrcxz  0x140021a7d
   140021a85:	rex.WRB mov r15b,0x3
   140021a88:	xchg   esi,eax
   140021a89:	mov    ch,0xd5
   140021a8b:	gs (bad) 
   140021a8d:	xchg   esi,eax
   140021a8e:	xchg   edi,eax
   140021a8f:	sbb    BYTE PTR [rbx],bh
   140021a91:	(bad)  
   140021a92:	retf   0xe9e5
   140021a95:	retf   
   140021a96:	int3   
   140021a97:	(bad)  
   140021a98:	(bad)  
   140021a99:	mov    dl,0xb2
   140021a9b:	mov    esp,0x9443098c
   140021aa0:	xchg   edx,eax
   140021aa1:	clc    
   140021aa2:	jle    0x140021a2a
   140021aa4:	pop    rsp
   140021aa5:	ds rex.WRXB movabs r13,0xe7661615b3aa751
   140021ab0:	sti    
   140021ab1:	loop   0x140021afc
   140021ab3:	fcmovu st,st(2)
   140021ab5:	cmp    ebp,eax
   140021ab7:	call   0xe3a5bfa6
   140021abc:	xchg   ebx,eax
   140021abd:	scas   al,BYTE PTR es:[rdi]
   140021abe:	sahf   
   140021abf:	pop    rsi
   140021ac0:	cmp    bh,BYTE PTR [rdx+0x7a]
   140021ac3:	enter  0xdb17,0x29
   140021ac7:	je     0x140021b3d
   140021ac9:	loop   0x140021ac6
   140021acb:	cmp    DWORD PTR [rdi+rbp*8-0x5bbc95ed],edx
   140021ad2:	adc    esp,DWORD PTR [rdx]
   140021ad4:	(bad)  
   140021ad5:	push   rsi
   140021ad6:	movabs ds:0x2c021e4d0fd016cf,al
   140021adf:	jno    0x140021b44
   140021ae1:	ja     0x140021b1f
   140021ae3:	test   edi,edx
   140021ae5:	pop    rdx
   140021ae6:	push   rdx
   140021ae7:	test   al,0x85
   140021ae9:	mov    BYTE PTR [rbx-0x8],bh
   140021aec:	rex.R sar cl,cl
   140021aef:	fld    QWORD PTR [rdx]
   140021af1:	(bad)  
   140021af2:	mov    dl,0x36
   140021af4:	data16 (bad) 
   140021af6:	jbe    0x140021a96
   140021af8:	xchg   BYTE PTR [rbx+0x400872f8],ah
   140021afe:	sbb    esp,DWORD PTR [rdi-0x78956c2d]
   140021b04:	push   rax
   140021b05:	rex.WRX movabs rax,ds:0xc33e67f8f30f0ecf
   140021b0f:	test   eax,0x9ae45e97
   140021b14:	imul   esi,esi,0xfffffff3
   140021b17:	jnp    0x140021b98
   140021b19:	lock (bad) 
   140021b1b:	fdivr  QWORD PTR [rcx-0x29]
   140021b1e:	pop    rbp
   140021b1f:	or     bh,BYTE PTR fs:[rcx-0x3e]
   140021b23:	sbb    BYTE PTR [rsi-0x65],dh
   140021b26:	test   BYTE PTR [rbx],0xc4
   140021b29:	gs rex.X (bad) 
   140021b2c:	jns    0x140021b4e
   140021b2e:	sbb    DWORD PTR [rdi-0x40a831d0],edi
   140021b34:	clc    
   140021b35:	and    eax,0xb1cf46c6
   140021b3a:	imul   esi,edi,0x2e
   140021b3d:	fdivp  st(5),st
   140021b3f:	rol    BYTE PTR [rbx],0x1c
   140021b42:	mov    ebx,0x5ded38f1
   140021b47:	sbb    eax,0x9a563369
   140021b4c:	fisttp QWORD PTR [rax-0x1a6a6443]
   140021b52:	adc    eax,0x718fcfc6
   140021b57:	jns    0x140021bcb
   140021b59:	adc    bl,bh
   140021b5b:	neg    ecx
   140021b5d:	jg     0x140021b4c
   140021b5f:	jle    0x140021b57
   140021b61:	pop    rdi
   140021b62:	jnp    0x140021b91
   140021b64:	ins    DWORD PTR es:[rdi],dx
   140021b65:	sbb    eax,0xa0a1b8ed
   140021b6a:	jno    0x140021b3d
   140021b6c:	iret   
   140021b6d:	fdiv   DWORD PTR [rcx+rcx*8+0x3b3c54c]
   140021b74:	mov    WORD PTR [rbp+0x5611a520],?
   140021b7a:	pop    rax
   140021b7b:	movsxd ecx,DWORD PTR [rbp+0x24]
   140021b7e:	and    al,0x11
   140021b80:	pop    rsi
   140021b81:	and    BYTE PTR es:[rbx+riz*4],cl
   140021b85:	js     0x140021b5e
   140021b87:	rex.WRXB xor r15,r13
   140021b8a:	fisttp WORD PTR [rdi-0x4a]
   140021b8d:	or     eax,0x131316c0
   140021b92:	imul   eax,DWORD PTR [rcx-0x3708268f],0x9b8f1768
   140021b9c:	imul   ecx,DWORD PTR es:[rsi-0x5e],0x20
   140021ba1:	mov    ds,WORD PTR [rdx+rax*8-0x6993154f]
   140021ba8:	rex.WX lods al,BYTE PTR ds:[rsi]
   140021baa:	lods   al,BYTE PTR ds:[rsi]
   140021bab:	scas   eax,DWORD PTR es:[rdi]
   140021bac:	and    eax,DWORD PTR [rsp+rsi*2-0x25c5c13d]
   140021bb3:	call   0x1ab9a9b97
   140021bb8:	(bad)  
   140021bb9:	fld    QWORD PTR [rsi+rax*2+0xa]
   140021bbd:	(bad)  
   140021bbe:	(bad)  
   140021bbf:	adc    ch,BYTE PTR [rbx+0x2b]
   140021bc2:	sub    ebx,DWORD PTR [rsp+rbx*1+0x1f]
   140021bc6:	out    0xf2,eax
   140021bc8:	(bad)  
   140021bc9:	adc    al,0x8b
   140021bcb:	mov    ecx,DWORD PTR [rbx+0x502d2d2c]
   140021bd1:	sub    eax,0xf4f15057
   140021bd6:	fild   QWORD PTR [rsi+rbp*4+0xd]
   140021bda:	iret   
   140021bdb:	imul   DWORD PTR [rcx+0x2a54aa54]
   140021be1:	push   rbp
   140021be2:	(bad)  
   140021be3:	(bad)  
   140021be4:	(bad)  
   140021be5:	lock cmp eax,0x93e32f1f
   140021beb:	retf   
   140021bec:	out    0xe9,eax
   140021bee:	(bad)  
   140021bef:	(bad)  
   140021bf0:	es push rdi
   140021bf2:	ins    BYTE PTR es:[rdi],dx
   140021bf3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140021bf4:	mov    ebp,0xfe9e8ba3
   140021bf9:	jle    0x140021c2d
   140021bfb:	mov    ecx,0xe488cc42
   140021c00:	adc    ebx,DWORD PTR [rcx]
   140021c02:	xchg   edi,eax
   140021c03:	pop    rsp
   140021c04:	(bad)  
   140021c05:	fst    DWORD PTR es:[rdi+0x47007e93]
   140021c0c:	xchg   edx,eax
   140021c0d:	cdq    
   140021c0e:	(bad)  
   140021c0f:	jmp    0x140021bd3
   140021c11:	int    0xf6
   140021c13:	rex.WXB push 0xfffffffff57949b5
   140021c19:	xchg   edx,eax
   140021c1a:	and    BYTE PTR [rsi-0x80],bl
   140021c1d:	xchg   ebp,eax
   140021c1e:	imul   ebp,DWORD PTR [rbp+rcx*4-0x3b],0xb493a151
   140021c26:	fcomp  st(2)
   140021c28:	xchg   esp,eax
   140021c29:	add    bh,BYTE PTR [rcx*2-0x2b97f5ea]
   140021c30:	add    ebx,DWORD PTR [rsi-0x61ee0b88]
   140021c36:	clc    
   140021c37:	int3   
   140021c38:	rex.XB adc al,0xdb
   140021c3b:	cmp    edi,eax
   140021c3d:	(bad)  
   140021c3e:	idiv   edi
   140021c40:	cmp    dh,bh
   140021c42:	call   QWORD PTR [rbx-0x5f9c4f09]
   140021c48:	nop    DWORD PTR [rbp+0x44]
   140021c4c:	icebp  
   140021c4d:	pop    rax
   140021c4e:	jae    0x140021c77
   140021c50:	rex.WB movabs ds:0x7ccbcb2b1e79e050,al
   140021c5a:	sti    
   140021c5b:	pop    rbx
   140021c5c:	iret   
   140021c5d:	lock lods eax,DWORD PTR ds:[rsi]
   140021c5f:	outs   dx,DWORD PTR ds:[rsi]
   140021c60:	cld    
   140021c61:	sbb    eax,0xd6f3e79e
   140021c66:	mov    bh,0xbf
   140021c68:	popf   
   140021c69:	adc    esi,DWORD PTR [rdi-0x63]
   140021c6c:	movabs al,ds:0x20ed225455d0687f
   140021c75:	ror    BYTE PTR [rcx+0x32],0x54
   140021c79:	rex.W mov spl,0xd1
   140021c7c:	pop    rsp
   140021c7d:	cmp    al,0x3f
   140021c7f:	(bad)  
   140021c80:	enter  0x59f0,0x4a
   140021c84:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140021c85:	adc    bh,BYTE PTR [rbx]
   140021c87:	xchg   DWORD PTR [rsi+0x18fc7a38],eax
   140021c8d:	jge    0x140021c92
   140021c8f:	std    
   140021c90:	clc    
   140021c91:	mov    esi,0x2dc6f1f
   140021c96:	imul   esp,DWORD PTR [rip+0x4b8c2116],0xffffffd6        # 0x18b8e3db3
   140021c9d:	jnp    0x140021ce9
   140021c9f:	sub    DWORD PTR [rcx],ebp
   140021ca1:	test   esp,edx
   140021ca3:	pop    rdx
   140021ca4:	rex.RXB or BYTE PTR [r9],r13b
   140021ca7:	rcr    DWORD PTR [rax-0x73],1
   140021caa:	xor    DWORD PTR [rcx-0x5377dd4c],eax
   140021cb0:	ins    DWORD PTR es:[rdi],dx
   140021cb1:	or     BYTE PTR [rdi-0x7c],cl
   140021cb4:	sub    eax,0x540fff2e
   140021cb9:	test   eax,0x5b0036da
   140021cbe:	rex.WR mov spl,0x31
   140021cc1:	or     DWORD PTR [rbp+0x2dcd2cea],0x24ef6c52
   140021ccb:	fwait
   140021ccc:	sub    edi,DWORD PTR [rax+0x6a749c52]
   140021cd2:	xchg   ebp,eax
   140021cd3:	hlt    
   140021cd4:	fadd   DWORD PTR [rbx-0x44]
   140021cd7:	ret    
   140021cd8:	and    dh,cl
   140021cda:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140021cdb:	jmp    0x140021c9a
   140021cdd:	(bad)  
   140021cde:	mov    WORD PTR [rsi-0x51ae54a2],fs
   140021ce4:	push   rsi
   140021ce5:	mov    ecx,0x178f373c
   140021cea:	(bad)
   140021cee:	repz je 0x140021ca6
   140021cf1:	ja     0x140021d64
   140021cf3:	cld    
   140021cf4:	(bad)  
   140021cf5:	fnstsw WORD PTR [rbp+rbp*8+0x3401ef9d]
   140021cfc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140021cfd:	cmc    
   140021cfe:	jne    0x140021d4a
   140021d00:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140021d01:	adc    dh,BYTE PTR [rbx]
   140021d03:	xor    edx,ebx
   140021d05:	int3   
   140021d06:	(bad)  
   140021d07:	int3   
   140021d08:	mov    al,0xb1
   140021d0a:	mov    esi,0xc9b4a94e
   140021d0f:	cli    
   140021d10:	(bad)  
   140021d11:	(bad)  
   140021d12:	stos   DWORD PTR es:[rdi],eax
   140021d13:	mov    edi,0x68c6e114
   140021d19:	stos   BYTE PTR es:[rdi],al
   140021d1a:	in     eax,0xa
   140021d1c:	mov    ch,0x6a
   140021d1e:	adc    eax,0xc7494021
   140021d23:	adc    eax,ebp
   140021d25:	addr32 xor dh,ah
   140021d28:	cmc    
   140021d29:	not    ebx
   140021d2b:	(bad)  
   140021d2d:	sbb    DWORD PTR [rdi-0x4bcfcc35],0xb
   140021d34:	xchg   ecx,eax
   140021d35:	outs   dx,DWORD PTR ds:[rsi]
   140021d36:	outs   dx,DWORD PTR ds:[rsi]
   140021d37:	mov    ecx,0x68057b12
   140021d3c:	(bad)  
   140021d3d:	movabs eax,ds:0xcc13600021091734
   140021d46:	mov    edi,0x8f623fb
   140021d4b:	and    BYTE PTR [rbp-0x2],ch
   140021d4e:	rex.WRXB (bad) 
   140021d50:	imul   r15,r9,0xffffffffffffffb1
   140021d54:	jno    0x140021da7
   140021d56:	xor    al,0x93
   140021d58:	xchg   edi,eax
   140021d59:	sar    ah,0xdc
   140021d5c:	sbb    al,0x9f
   140021d5e:	jg     0x140021d44
   140021d60:	xor    esi,ebp
   140021d62:	jge    0x140021d3b
   140021d64:	std    
   140021d65:	cld    
   140021d66:	loop   0x140021d97
   140021d68:	mov    ebp,0xf6fb5d8f
   140021d6d:	(bad)  
   140021d6e:	test   DWORD PTR [rax],esp
   140021d70:	mov    WORD PTR [rdx],fs
   140021d72:	(bad)  
   140021d73:	(bad)  
   140021d74:	and    cl,bl
   140021d76:	cmc    
   140021d77:	jno    0x140021d9e
   140021d79:	rex.WRX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140021d7b:	and    al,0xf5
   140021d7d:	pop    rdx
   140021d7e:	popf   
   140021d7f:	(bad)  
   140021d80:	lahf   
   140021d81:	call   FWORD PTR [rsi]
   140021d83:	rex.WRXB jg 0x140021d84
   140021d86:	sub    DWORD PTR [rsi],edx
   140021d88:	out    0xe6,al
   140021d8a:	mov    eax,0xb85b96f1
   140021d8f:	neg    DWORD PTR [rbp-0x1f1f8e09]
   140021d95:	and    esp,edi
   140021d97:	mov    edi,fs
   140021d99:	or     dh,bl
   140021d9b:	(bad)  
   140021d9c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140021d9d:	ret    
   140021d9e:	rex.WRX xchg rbp,rax
   140021da0:	push   rsp
   140021da1:	pop    rax
   140021da2:	movsxd ebx,DWORD PTR [rax+0x5d]
   140021da5:	pop    rax
   140021da6:	in     al,0xf4
   140021da8:	jmp    0xfca079e0
   140021dad:	rex.R mov cl,0xad
   140021db0:	lea    ebx,[rbx+0x389be6e]
   140021db6:	xchg   DWORD PTR [rdi],ecx
   140021db8:	push   rbx
   140021db9:	sub    al,0x16
   140021dbb:	mov    cl,0xd6
   140021dbd:	movabs al,ds:0x2ce6994264d8f3b5
   140021dc6:	xor    DWORD PTR [rbx],0x262c0200
   140021dcc:	jb     0x140021e04
   140021dce:	shl    DWORD PTR [rsi],0x94
   140021dd1:	xchg   edx,eax
   140021dd2:	xor    eax,0xa5b40d8d
   140021dd7:	(bad)  
   140021dd8:	push   rsi
   140021dd9:	fld    TBYTE PTR [rax]
   140021ddb:	rex.WX jbe 0x140021ddc
   140021dde:	(bad)  
   140021ddf:	mov    eax,0x6dbd4c
   140021de4:	mov    dh,0x98
   140021de6:	and    rdi,rdx
   140021de9:	mov    WORD PTR [rcx-0x40282908],cs
   140021def:	rex.WR test rax,0xffffffffdef76254
   140021df5:	jge    0x140021deb
   140021df7:	test   DWORD PTR [rdi],0x4dd5d9d0
   140021dfd:	addr32 rex.WRXB (bad) 
   140021e00:	sbb    eax,0xf2e45d9d
   140021e05:	rex.RB lods al,BYTE PTR ds:[rsi]
   140021e07:	jne    0x140021e01
   140021e09:	jl     0x140021dae
   140021e0b:	xor    eax,0x25ef2e3a
   140021e10:	(bad)  
   140021e11:	ret    0x9e23
   140021e14:	pop    rcx
   140021e15:	movsxd ebp,DWORD PTR [rip+0x1eb01061]        # 0x15eb22e7c
   140021e1b:	add    al,0xac
   140021e1d:	scas   al,BYTE PTR es:[rdi]
   140021e1e:	lods   eax,DWORD PTR ds:[rsi]
   140021e1f:	movsxd ebp,DWORD PTR [rbp+0x33f50723]
   140021e25:	outs   dx,BYTE PTR ds:[rsi]
   140021e26:	jbe    0x140021e68
   140021e28:	push   rdi
   140021e29:	rex.RXB sbb r8d,DWORD PTR [r15]
   140021e2c:	mov    ds,esi
   140021e2e:	enter  0x77cd,0xdc
   140021e32:	rex.RB
   140021e33:	ds xchg ebx,eax
   140021e35:	and    DWORD PTR [rax],ecx
   140021e37:	sbb    edx,DWORD PTR [rbx+rcx*8+0x15]
   140021e3b:	rex.WX
   140021e3c:	fwait
   140021e3d:	sbb    ebp,DWORD PTR [rsi]
   140021e3f:	(bad)  
   140021e40:	push   rax
   140021e41:	fisub  DWORD PTR [rbp+rdi*2+0x6d]
   140021e45:	lea    ebp,[rax]
   140021e47:	mov    cl,BYTE PTR [rax]
   140021e49:	(bad)  
   140021e4a:	or     BYTE PTR [rax+0x6b],0xc2
   140021e4e:	and    BYTE PTR [rax-0x14],dh
   140021e51:	cmp    DWORD PTR [rsi],edx
   140021e53:	(bad)  
   140021e54:	jp     0x140021de3
   140021e56:	fxch   st(3)
   140021e58:	xchg   ebx,eax
   140021e59:	add    al,0x8d
   140021e5b:	cmp    bh,BYTE PTR [rbx-0x28f89f9]
   140021e61:	xchg   ecx,eax
   140021e62:	jmp    0x140021e5d
   140021e64:	fimul  WORD PTR [rbx]
   140021e66:	iret   
   140021e67:	xchg   ebx,eax
   140021e68:	adc    BYTE PTR [rbx-0x48],ch
   140021e6b:	ss out 0x66,al
   140021e6e:	stc    
   140021e6f:	(bad)  
   140021e70:	push   rcx
   140021e71:	jle    0x140021ede
   140021e73:	xor    r11d,ecx
   140021e76:	addr32 xchg ebx,eax
   140021e78:	fs (bad) 
   140021e7a:	cld    
   140021e7b:	(bad)  
   140021e7c:	test   BYTE PTR [rdx-0x5cb8ffe5],ch
   140021e82:	jle    0x140021e49
   140021e84:	lock nop
   140021e86:	cwde   
   140021e87:	xchg   ebx,eax
   140021e88:	pop    rbp
   140021e89:	ror    BYTE PTR [rcx*4-0x7c4c546],1
   140021e90:	(bad)  
   140021e91:	jmp    rax
   140021e93:	(bad)  
   140021e95:	cmc    
   140021e96:	neg    bl
   140021e98:	nop
   140021e99:	sbb    DWORD PTR [rdi],ebp
   140021e9b:	(bad)  
   140021e9c:	fwait
   140021e9d:	sahf   
   140021e9e:	sbb    al,0xdf
   140021ea0:	xor    al,0x98
   140021ea2:	retf   0x5853
   140021ea5:	add    edx,DWORD PTR [rdi-0x38758d9]
   140021eab:	movabs eax,ds:0xdf6fb1ef85f17987
   140021eb4:	xor    eax,0xfc6feafc
   140021eb9:	(bad)  
   140021eba:	mov    bh,0xde
   140021ebc:	jno    0x140021ef9
   140021ebe:	in     eax,dx
   140021ebf:	popf   
   140021ec0:	sbb    eax,0xd89180f1
   140021ec5:	sbb    ch,al
   140021ec7:	sahf   
   140021ec8:	mov    edi,esp
   140021eca:	jns    0x140021e60
   140021ecc:	(bad)  
   140021ecd:	retf   
   140021ece:	mov    WORD PTR [rcx+rbx*1+0x19f4f866],ds
   140021ed5:	(bad)  
   140021ed6:	rex.RX cmp DWORD PTR [rbp+0x7],0xe
   140021edb:	jo     0x140021ec9
   140021edd:	(bad)  
   140021ede:	jrcxz  0x140021ed4
   140021ee0:	or     eax,0x2c4f39f4
   140021ee5:	(bad)
   140021ee8:	stos   DWORD PTR es:[rdi],eax
   140021ee9:	and    al,0x52
   140021eeb:	rex.WX xchg rsp,rax
   140021eed:	adc    bh,BYTE PTR [rsi+0x14]
   140021ef0:	jae    0x140021e97
   140021ef2:	test   esi,eax
   140021ef4:	sbb    ch,BYTE PTR [rbp+rsi*1-0x4b7977be]
   140021efb:	movabs ds:0x8dd0df8ccbadb5a6,al
   140021f04:	rex.RX xchg edx,eax
   140021f06:	in     eax,0xff
   140021f08:	movabs eax,ds:0xa31396c00db61f94
   140021f11:	mov    ch,0xf5
   140021f13:	xor    bl,BYTE PTR [rbp+0x79ef7dc]
   140021f19:	js     0x140021f10
   140021f1b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140021f1c:	xchg   ebx,eax
   140021f1d:	mov    WORD PTR [rdi-0x74150e73],cs
   140021f23:	(bad)  
   140021f24:	nop
   140021f25:	leave  
   140021f26:	in     eax,0xe8
   140021f28:	out    dx,al
   140021f29:	fld    DWORD PTR [rcx-0x1]
   140021f2c:	shl    BYTE PTR [rax],0x9d
   140021f2f:	pop    rbp
   140021f30:	(bad)  
   140021f32:	or     eax,0xd773b10c
   140021f37:	pop    rsi
   140021f38:	xor    bh,BYTE PTR [rcx+0x3b42c51c]
   140021f3e:	movabs eax,ds:0x4d0dcf8e3083d431
   140021f47:	in     al,0x4c
   140021f49:	(bad)  
   140021f4a:	or     BYTE PTR [rbx-0x4e],0x76
   140021f4e:	xchg   BYTE PTR [rax],ah
   140021f50:	or     BYTE PTR [rcx-0x57],bl
   140021f53:	scas   eax,DWORD PTR es:[rdi]
   140021f54:	mov    cl,0xb4
   140021f56:	mov    edx,0x213776ea
   140021f5b:	xchg   ecx,eax
   140021f5c:	retf   0x7fc1
   140021f5f:	fisttp DWORD PTR [rdx+0x450ada05]
   140021f65:	mov    edx,0x2bb37676
   140021f6a:	lahf   
   140021f6b:	and    ebp,ebx
   140021f6d:	sti    
   140021f6e:	or     BYTE PTR [rdx+rdi*1],ch
   140021f71:	mov    WORD PTR [rax],ss
   140021f73:	ret    0x87c1
   140021f76:	ret    
   140021f77:	xor    BYTE PTR [rbx+rdi*2-0x4f],dh
   140021f7b:	xchg   esp,eax
   140021f7c:	sub    QWORD PTR [rcx],rcx
   140021f7f:	ret    
   140021f80:	nop
   140021f81:	pop    rsp
   140021f82:	ds iret 
   140021f84:	in     eax,0xd9
   140021f86:	(bad)
   140021f89:	sbb    al,0xbf
   140021f8b:	mov    bh,0x5b
   140021f8d:	rex.WXB pop r12
   140021f8f:	(bad)  
   140021f90:	mov    WORD PTR [rcx-0x22],ds
   140021f93:	test   BYTE PTR [rbp+rcx*2-0x2d69202a],dh
   140021f9a:	(bad)  
   140021f9b:	(bad)  
   140021f9d:	pinsrw mm6,WORD PTR [rbx-0x2b],0x48
   140021fa2:	adc    eax,0x9bf8292a
   140021fa7:	sbb    ah,bl
   140021fa9:	movabs ds:0xaee0ec77bb3ac39a,eax
   140021fb2:	and    DWORD PTR [rcx],0x1448511a
   140021fb8:	jmp    0x182d6bfd5
   140021fbd:	repnz mov DWORD PTR [rax],esp
   140021fc0:	fwait
   140021fc1:	int    0xb0
   140021fc3:	mov    esi,0xbed7ceb6
   140021fc8:	repnz adc eax,0x63e8f73e
   140021fce:	push   rsp
   140021fcf:	sub    edx,DWORD PTR [rip+0x7f17fe7e]        # 0x1bf1a1e53
   140021fd5:	xchg   ecx,eax
   140021fd6:	ja     0x140021f94
   140021fd8:	jmp    0x140021f77
   140021fda:	or     al,0xee
   140021fdc:	ficom  DWORD PTR [rip+0xffffffffc09b1dd7]        # 0x1009d3db9
   140021fe2:	sub    DWORD PTR [rbx+0x1d],ebp
   140021fe5:	(bad)  
   140021fe6:	pop    rsi
   140021fe7:	or     cl,cl
   140021fe9:	in     eax,0x4b
   140021feb:	push   rbx
   140021fec:	jl     0x140021fdd
   140021fee:	mov    ecx,0x74ba99e7
   140021ff3:	mov    esi,ebp
   140021ff5:	out    dx,al
   140021ff6:	(bad)  
   140021ff7:	rex.WRX movabs rsp,0x3e4c8ebd1c8e2ee5
   140022001:	lahf   
   140022002:	push   rsi
   140022003:	rex.WR push rdx
   140022005:	movabs ds:0xcf9c1374a42b5717,eax
   14002200e:	or     eax,0x66717d9f
   140022013:	jp     0x140021fbb
   140022015:	add    al,0x20
   140022017:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140022018:	ins    BYTE PTR es:[rdi],dx
   140022019:	sbb    BYTE PTR [rbx+0x2b],ch
   14002201c:	rex.X jmp 0x140021fc9
   14002201f:	int    0xe6
   140022021:	push   0xffffffffffffffb6
   140022023:	push   rcx
   140022024:	pcmpeqb mm4,QWORD PTR [rbx+0x27e15091]
   14002202b:	(bad)  
   14002202c:	sti    
   14002202d:	rex.XB leave 
   14002202f:	mov    dh,0x1
   140022031:	fsub   DWORD PTR [rdx+0x62]
   140022034:	lods   al,BYTE PTR ds:[rsi]
   140022035:	push   rcx
   140022036:	(bad)  
   140022037:	test   al,0xe9
   140022039:	out    dx,al
   14002203a:	fcmovnb st,st(5)
   14002203c:	cmp    ebx,DWORD PTR [rdi]
   14002203e:	fadd   st,st(3)
   140022040:	in     eax,dx
   140022041:	(bad)  
   140022042:	(bad)  
   140022043:	mov    eax,0xb3947e70
   140022048:	addr32 pop rsi
   14002204a:	gs jns 0x1400220b6
   14002204d:	mov    DWORD PTR [rbp-0x621cb8eb],esi
   140022053:	(bad)  
   140022054:	adc    al,0x1c
   140022056:	add    dh,BYTE PTR [rax]
   140022058:	jrcxz  0x14002200d
   14002205a:	jnp    0x14002204b
   14002205c:	xor    eax,0x63e8ecf4
   140022061:	push   0x5cfc1ef7
   140022066:	(bad)  
   140022067:	cdq    
   140022068:	leave  
   140022069:	adc    ch,BYTE PTR [rdx+0x47]
   14002206c:	int    0x65
   14002206e:	loop   0x14002209f
   140022070:	and    al,BYTE PTR ss:[rcx]
   140022073:	hlt    
   140022074:	cmp    BYTE PTR [rbp+0x13],al
   140022077:	xor    DWORD PTR [rcx+0x36a77367],esp
   14002207d:	(bad)  
   14002207e:	jmp    0x1400220f5
   140022080:	stos   BYTE PTR es:[rdi],al
   140022081:	mov    ch,0x1a
   140022083:	repz cmp WORD PTR [rbp-0x37],si
   140022088:	cmp    eax,0xa72943cf
   14002208d:	call   0xe47acadc
   140022092:	sbb    ah,BYTE PTR [rax]
   140022094:	fs rex.WX xchg rbx,rax
   140022097:	in     eax,dx
   140022098:	(bad)  
   140022099:	mov    ebp,0x8f5ebd41
   14002209e:	adc    dh,BYTE PTR [ecx+esi*2]
   1400220a2:	add    al,0x71
   1400220a4:	scas   al,BYTE PTR es:[rdi]
   1400220a5:	(bad)  
   1400220a6:	(bad)  
   1400220a7:	icebp  
   1400220a8:	movsxd esp,DWORD PTR [rbx]
   1400220aa:	nop
   1400220ab:	call   0x1ad086968
   1400220b0:	nop
   1400220b1:	mov    edx,0xe3cd4ee9
   1400220b6:	jns    0x140022137
   1400220b8:	and    al,BYTE PTR [rcx+0x16]
   1400220bb:	and    al,0xce
   1400220bd:	mov    edi,0x52c8e94c
   1400220c2:	adc    BYTE PTR [rdx+0x1046a175],0x6
   1400220c9:	int    0x52
   1400220cb:	(bad)  
   1400220cc:	mov    esp,0x6c9604a6
   1400220d1:	and    edi,0x1e5dfdbe
   1400220d7:	std    
   1400220d8:	int3   
   1400220d9:	fbstp  TBYTE PTR [rdx]
   1400220db:	xor    bh,BYTE PTR [rsp+rcx*8]
   1400220de:	sbb    eax,0x7bc5de77
   1400220e3:	fcomip st,st(7)
   1400220e5:	mov    ds,WORD PTR ds:[rsi]
   1400220e8:	mov    edi,0x43364c81
   1400220ed:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400220ee:	jrcxz  0x14002214c
   1400220f0:	mov    esp,DWORD PTR [rax]
   1400220f2:	sub    eax,0xc79efa79
   1400220f7:	mov    dh,0x6
   1400220fa:	(bad)  
   1400220fb:	lahf   
   1400220fc:	cmp    al,0xc9
   1400220fe:	retf   
   1400220ff:	(bad)  
   140022100:	popf   
   140022101:	ret    0xcb18
   140022104:	mov    cl,0xe3
   140022106:	(bad)  
   140022107:	jb     0x140022105
   140022109:	out    0x1b,al
   14002210b:	jmp    0x15922392b
   140022110:	out    0x9e,eax
   140022112:	sub    al,0x2e
   140022114:	test   eax,0x5121087e
   140022119:	sahf   
   14002211a:	(bad)
   14002211f:	loope  0x140022170
   140022121:	jge    0x14002210d
   140022123:	xchg   ebx,eax
   140022124:	lahf   
   140022125:	stc    
   140022126:	fisttp DWORD PTR [rdi+0x3f]
   140022129:	pop    rbp
   14002212a:	scas   al,BYTE PTR es:[rdi]
   14002212b:	push   rsp
   14002212c:	sbb    dl,BYTE PTR [rdx-0x57]
   14002212f:	mov    edx,0xda2b6b4
   140022134:	adc    eax,0x1acd652b
   140022139:	sbb    eax,0xa88fef90
   14002213e:	sub    eax,0xfef1c0fe
   140022143:	imul   ecx,ecx,0xffffffb6
   140022146:	add    eax,ebx
   140022148:	(bad)  
   14002214a:	imul   ebx,DWORD PTR [rbp+0x75],0xa40d8ca
   140022151:	rex.WB movabs rax,ds:0x6e5b806e7fdb8fb3
   14002215b:	mov    edi,0xe3134b83
   140022160:	pushf  
   140022161:	jns    0x14002215c
   140022163:	adc    al,0xb
   140022165:	repz repz (bad) 
   140022168:	jmp    0x1400221df
   14002216a:	rex.RXB mul DWORD PTR [rip+0xb0b4b25]        # 0x14b0d6c96
   140022171:	outs   dx,BYTE PTR ds:[rsi]
   140022172:	sub    al,0x98
   140022174:	out    0x91,eax
   140022176:	int    0xe5
   140022178:	sbb    esp,ebx
   14002217a:	mov    ch,0x9b
   14002217c:	fdivp  st(6),st
   14002217e:	rex.B jp 0x140022188
   140022181:	xchg   BYTE PTR [rax-0x11],ch
   140022184:	out    dx,al
   140022185:	and    DWORD PTR [rbx+0x28],ebx
   140022188:	(bad)  
   140022189:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002218a:	mov    al,BYTE PTR [rdi-0x72]
   14002218d:	mov    ecx,0xd0cd395d
   140022192:	adc    edx,DWORD PTR [rbx]
   140022194:	jo     0x14002215a
   140022196:	rex.WB
   140022197:	ss add eax,0xf192d558
   14002219d:	rex.WRX xchg rsp,rax
   14002219f:	enter  0x4258,0x1d
   1400221a3:	(bad)  
   1400221a4:	stos   DWORD PTR es:[rdi],eax
   1400221a5:	je     0x140022156
   1400221a7:	xchg   ecx,eax
   1400221a8:	mov    ebx,ebp
   1400221aa:	mov    eax,DWORD PTR [rax+0x29]
   1400221ad:	in     eax,0x94
   1400221af:	mov    edi,0x7a6d0145
   1400221b4:	mov    ?,esp
   1400221b6:	test   BYTE PTR [rcx+0x19],ch
   1400221b9:	xor    cl,dl
   1400221bb:	int3   
   1400221bc:	hlt    
   1400221bd:	outs   dx,DWORD PTR ds:[rsi]
   1400221be:	mov    bh,0x7d
   1400221c0:	ss stos DWORD PTR es:[rdi],eax
   1400221c2:	add    BYTE PTR [rax+0x412f9394],cl
   1400221c8:	cli    
   1400221c9:	and    al,0xbd
   1400221cb:	cmovns esp,DWORD PTR [rsi]
   1400221ce:	mov    esi,0x85b7a139
   1400221d3:	(bad)  
   1400221d4:	cmp    ebx,DWORD PTR [rsi-0x51]
   1400221d7:	repz js 0x1400221de
   1400221da:	repz jae 0x140022250
   1400221dd:	cmp    al,0xf6
   1400221df:	mov    bh,0xf
   1400221e1:	icebp  
   1400221e2:	xchg   ebp,eax
   1400221e3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400221e4:	sahf   
   1400221e5:	(bad)  
   1400221e6:	jo     0x1400221df
   1400221e8:	cs jle 0x1400221e6
   1400221eb:	(bad)  
   1400221ed:	cs ja  0x1400221af
   1400221f0:	cmc    
   1400221f1:	(bad)  
   1400221f2:	cmp    bh,BYTE PTR [rbx+0x471830ba]
   1400221f8:	push   rsp
   1400221f9:	rex.WX adc rdi,QWORD PTR [rsi+0x2c]
   1400221fd:	xchg   ebp,eax
   1400221fe:	rex.R
   1400221ff:	rex.RXB (bad) 
   140022201:	or     esp,edi
   140022203:	iret   
   140022204:	icebp  
   140022205:	int    0xaf
   140022207:	call   FWORD PTR [rip+0xcf3730b]        # 0x14cf59518
   14002220d:	out    dx,al
   14002220e:	fcmove st,st(1)
   140022210:	sbb    eax,0xe4704e27
   140022215:	cli    
   140022216:	jmp    0x14002226a
   140022218:	movabs al,es:0x539e53c19dc4292b
   140022222:	(bad)  
   140022223:	xchg   edi,eax
   140022224:	pop    rdi
   140022225:	cmp    BYTE PTR [rcx-0x16],bh
   140022228:	rex.XB jg 0x14002221d
   14002222b:	(bad)  
   14002222c:	jg     0x1400222a3
   14002222e:	(bad)  
   14002222f:	(bad)  
   140022230:	rex.WXB
   140022231:	lods   eax,DWORD PTR ds:[esi]
   140022233:	mov    ch,0x55
   140022235:	movabs al,ds:0xb67cd9aa1a1b948a
   14002223e:	(bad)  
   14002223f:	sub    BYTE PTR [rdi-0x7b2e73bd],dl
   140022245:	mov    edi,edi
   140022247:	(bad)  
   140022248:	xchg   esi,eax
   140022249:	call   FWORD PTR [rdi]
   14002224b:	xchg   edx,eax
   14002224c:	ins    DWORD PTR es:[rdi],dx
   14002224d:	add    esi,DWORD PTR [rax+0x3b0844c5]
   140022253:	movsxd ebp,DWORD PTR [rbp+0x35afa175]
   140022259:	add    al,0x61
   14002225b:	and    rsi,QWORD PTR [rax-0x11475eb8]
   140022262:	xchg   BYTE PTR [rbx-0x47],bl
   140022265:	stc    
   140022266:	xchg   esi,eax
   140022267:	cmp    ebx,DWORD PTR [rax+0x59]
   14002226a:	pop    rsi
   14002226b:	fs fs clc 
   14002226e:	xor    al,0x63
   140022270:	out    0xcf,eax
   140022272:	mov    cl,0xba
   140022274:	mov    dl,0x4a
   140022276:	mov    ecx,0x410c89b4
   14002227b:	sti    
   14002227c:	sbb    DWORD PTR [rdx-0x39393fba],eax
   140022282:	(bad)  
   140022283:	out    0xce,eax
   140022285:	pushf  
   140022286:	rex.RX imul r9d,ebp,0xffffff8e
   14002228a:	mov    esi,0x7fb7a3e
   14002228f:	call   0x10ec3fc7e
   140022294:	cmp    eax,0x7477c97b
   140022299:	xchg   ecx,eax
   14002229a:	(bad)  
   14002229b:	mov    ah,0x93
   14002229d:	imul   ebp,DWORD PTR [rbx+0x23],0x4c
   1400222a1:	(bad)  
   1400222a2:	cdq    
   1400222a3:	sbb    eax,DWORD PTR [rdi]
   1400222a5:	outs   dx,BYTE PTR ds:[rsi]
   1400222a6:	xor    DWORD PTR [rsi+rdi*8],0xa96e534d
   1400222ad:	loop   0x1400222e5
   1400222af:	jnp    0x1400222b5
   1400222b1:	adc    ah,BYTE PTR [rbp-0x12bacd69]
   1400222b7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400222b8:	or     eax,0x77d5093d
   1400222bd:	repz mov ch,0x2d
   1400222c0:	sbb    ebx,DWORD PTR [rdx+riz*4-0x28]
   1400222c4:	imul   edx,DWORD PTR [rdx-0x31],0xff1dba26
   1400222cb:	mov    al,BYTE PTR [rcx+0x47]
   1400222ce:	movabs ds:0x13430c5a6feeeda9,al
   1400222d7:	(bad)  
   1400222d8:	nop
   1400222d9:	and    al,0xe8
   1400222db:	xchg   edx,eax
   1400222dc:	ret    0xf122
   1400222df:	sti    
   1400222e0:	jnp    0x1400222a0
   1400222e2:	rex.WRXB movabs r9,0xf33e35fabeefe654
   1400222ec:	leave  
   1400222ed:	rex.WRXB shr BYTE PTR [r8+0x7bcf78d7],1
   1400222f4:	jg     0x140022277
   1400222f6:	idiv   esi
   1400222f8:	shr    BYTE PTR [rdi],cl
   1400222fa:	xor    DWORD PTR [rdi+riz*2+0x35d6037],esi
   140022301:	adc    eax,0x8c8f5d36
   140022306:	imul   eax,eax,0x795757d6
   14002230c:	out    0x9b,al
   14002230e:	(bad)  
   140022310:	in     al,0x73
   140022312:	iret   
   140022313:	push   rbx
   140022314:	sub    al,0xb6
   140022316:	jno    0x1400222fa
   140022318:	sub    eax,0x6dcb7277
   14002231d:	mov    bh,0xd2
   14002231f:	mov    ebp,0x62ab8763
   140022324:	(bad)  
   140022325:	push   rsp
   140022326:	ins    DWORD PTR es:[rdi],dx
   140022327:	movabs ds:0x3b38b08dcc65f145,al
   140022330:	mov    ebx,0x8f23d8fe
   140022335:	cmp    al,0xf5
   140022337:	jmp    0xf3f4a18b
   14002233c:	stos   DWORD PTR es:[rdi],eax
   14002233d:	stos   DWORD PTR es:[rdi],eax
   14002233e:	stos   DWORD PTR es:[rdi],eax
   14002233f:	stos   DWORD PTR es:[rdi],eax
   140022340:	rex.X leave 
   140022342:	cmp    bl,BYTE PTR [rdx-0x3cd94fce]
   140022348:	mov    al,0xaa
   14002234a:	or     ebp,DWORD PTR [rbp-0xb]
   14002234d:	rex.RX sub eax,0x4b01f88c
   140022353:	jl     0x140022394
   140022355:	mov    BYTE PTR [rbx+rbx*1-0x80],ch
   140022359:	sub    eax,0x696b5a26
   14002235e:	ins    BYTE PTR es:[rdi],dx
   14002235f:	mov    dl,0x53
   140022361:	mov    ebx,0x2f127b4a
   140022366:	scas   eax,DWORD PTR es:[rdi]
   140022367:	lods   al,BYTE PTR ds:[rsi]
   140022368:	ins    DWORD PTR es:[rdi],dx
   140022369:	nop
   14002236a:	retf   
   14002236b:	out    0xe9,eax
   14002236d:	in     al,dx
   14002236e:	(bad)  
   140022370:	std    
   140022371:	(bad)  
   140022372:	jg     0x1400222f4
   140022374:	sti    
   140022375:	out    dx,al
   140022376:	addps  xmm3,XMMWORD PTR [rax-0x13839e61]
   14002237d:	cmp    al,0xe3
   14002237f:	jrcxz  0x140022364
   140022381:	rex.WR
   140022382:	rex.WRX pop rsp
   140022384:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140022385:	mov    esp,0x932649b9
   14002238a:	ror    edi,0xb8
   14002238d:	shl    DWORD PTR [rdi-0x53545415],0x2c
   140022394:	(bad)  
   140022395:	movabs ds:0xa4ecece867ef8475,eax
   14002239e:	outs   dx,DWORD PTR ds:[rsi]
   14002239f:	(bad)  
   1400223a0:	nop
   1400223a1:	(bad)  
   1400223a2:	jnp    0x1400223ab
   1400223a4:	std    
   1400223a5:	cmp    esi,DWORD PTR [rdi-0x2d]
   1400223a8:	mov    edi,0xcfca1773
   1400223ad:	nop
   1400223ae:	(bad)  
   1400223af:	mov    ah,0x61
   1400223b1:	test   DWORD PTR [rax],esp
   1400223b3:	xor    dh,BYTE PTR [rsi]
   1400223b5:	in     eax,dx
   1400223b6:	sbb    ebp,DWORD PTR [rax+0x55]
   1400223b9:	jle    0x140022415
   1400223bb:	imul   edi,esi,0xffffffc9
   1400223be:	(bad)  
   1400223bf:	sahf   
   1400223c0:	outs   dx,BYTE PTR ds:[rsi]
   1400223c1:	jmp    0x1400223f0
   1400223c3:	or     ch,BYTE PTR [rsi]
   1400223c5:	fsubr  QWORD PTR [rax-0x50]
   1400223c8:	xor    BYTE PTR [rdx+0x5078a288],cl
   1400223ce:	mov    DWORD PTR [rbp+0x2a],ebp
   1400223d1:	(bad)  
   1400223d2:	mov    ch,0x49
   1400223d4:	mov    ah,0xec
   1400223d6:	mov    ah,0xb8
   1400223d8:	mov    ch,0x7d
   1400223da:	mov    dl,0x89
   1400223dc:	repz imul esp,ecx,0x118e1620
   1400223e3:	enter  0xb8ca,0x91
   1400223e7:	test   al,0x55
   1400223e9:	outs   dx,DWORD PTR ds:[rsi]
   1400223ea:	pop    rdx
   1400223eb:	sti    
   1400223ec:	or     ch,BYTE PTR [rcx+rsi*1]
   1400223ef:	jno    0x1400223f8
   1400223f1:	pushf  
   1400223f2:	jle    0x1400223ed
   1400223f4:	adc    eax,0x27c4fa1e
   1400223f9:	jns    0x1400223e4
   1400223fb:	in     al,0x49
   1400223fd:	mov    ds,WORD PTR [rdi*4-0x3200a072]
   140022404:	jg     0x1400223cb
   140022406:	icebp  
   140022407:	pop    rbx
   140022408:	outs   dx,BYTE PTR ds:[rsi]
   140022409:	ret    0x66cb
   14002240c:	mov    BYTE PTR [rdx],ah
   14002240e:	in     eax,dx
   14002240f:	mov    al,0x3
   140022411:	sub    eax,0xae5285e1
   140022416:	add    esi,eax
   140022418:	hlt    
   140022419:	rex.WXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14002241b:	clc    
   14002241c:	retf   0xbf17
   14002241f:	int3   
   140022420:	fsub   st(4),st
   140022422:	or     al,0xd7
   140022424:	sbb    eax,0xee7b9ebd
   140022429:	jge    0x140022446
   14002242b:	(bad)  
   14002242c:	nop    esp
   14002242f:	retf   
   140022430:	clc    
   140022431:	cwde   
   140022432:	enter  0x48d1,0x34
   140022436:	xchg   ecx,eax
   140022437:	mov    dh,ch
   140022439:	pop    rdx
   14002243a:	cmp    eax,0xbe7be1df
   14002243f:	sti    
   140022440:	lods   eax,DWORD PTR ds:[rsi]
   140022441:	outs   dx,DWORD PTR ds:[rsi]
   140022442:	mov    esi,0xfb3fd1f2
   140022447:	repz (bad) 
   140022449:	rex.WRXB sahf 
   14002244b:	cmp    al,0x79
   14002244d:	or     ch,BYTE PTR [rax+0x8]
   140022450:	and    edx,ecx
   140022452:	sbb    BYTE PTR [rbx-0x41e44fda],bh
   140022458:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022459:	sub    al,BYTE PTR [rcx+0x756a0d36]
   14002245f:	rex.XB jno 0x140022409
   140022462:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140022463:	cmp    al,0xf5
   140022465:	(bad)  
   140022466:	jbe    0x140022461
   140022468:	scas   eax,DWORD PTR es:[rdi]
   140022469:	xchg   esi,eax
   14002246a:	ins    DWORD PTR es:[rdi],dx
   14002246b:	add    esi,DWORD PTR [rax+0x236b44c5]
   140022471:	rex.WRB or al,0xb4
   140022474:	imul   esi,DWORD PTR [rdx-0x12],0x17c9fbbb
   14002247b:	jne    0x1400224f2
   14002247d:	ins    DWORD PTR es:[rdi],dx
   14002247e:	popf   
   14002247f:	cmc    
   140022480:	jne    0x1400224cb
   140022482:	ss fwait
   140022484:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140022485:	mov    ebx,0x5ef7376f
   14002248a:	jae    0x140022414
   14002248c:	sti    
   14002248d:	(bad)  
   14002248e:	adc    BYTE PTR [rsi+rsi*1-0xe8746aa],dl
   140022495:	and    al,bl
   140022497:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022498:	rex.WRXB xor r15,QWORD PTR [r10]
   14002249b:	xor    al,BYTE PTR [rdx-0x53]
   14002249e:	pop    rsp
   14002249f:	rex.X
   1400224a0:	rex.W xlat BYTE PTR ds:[rbx]
   1400224a2:	jrcxz  0x140022493
   1400224a4:	jns    0x140022514
   1400224a6:	and    al,0x59
   1400224a8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400224a9:	pop    rdx
   1400224aa:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400224ab:	je     0x14002250e
   1400224ad:	or     al,0x63
   1400224af:	or     al,0x99
   1400224b1:	shr    DWORD PTR [rdi-0x36183470],cl
   1400224b7:	out    0x72,al
   1400224b9:	hlt    
   1400224ba:	paddsw mm6,QWORD PTR [rcx+riz*2-0x3d]
   1400224bf:	loopne 0x1400224e1
   1400224c1:	ins    DWORD PTR es:[rdi],dx
   1400224c2:	ins    DWORD PTR es:[rdi],dx
   1400224c3:	popf   
   1400224c4:	fs mov ch,ch
   1400224c7:	rex.R (bad) 
   1400224c9:	in     eax,dx
   1400224ca:	outs   dx,BYTE PTR ds:[rsi]
   1400224cb:	ficomp DWORD PTR [rax-0x2b66b96a]
   1400224d1:	pop    rdi
   1400224d2:	outs   dx,DWORD PTR ds:[rsi]
   1400224d3:	mov    ecx,0x273e9275
   1400224d8:	sbb    eax,0x836b4dd2
   1400224dd:	push   rdx
   1400224de:	outs   dx,BYTE PTR ds:[rsi]
   1400224df:	movabs ds:0x26c7882935a092b2,al
   1400224e8:	leave  
   1400224e9:	add    DWORD PTR [rbx],ebx
   1400224eb:	repz add DWORD PTR [rsi],esp
   1400224ee:	rex.WRB
   1400224ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400224f1:	cmc    
   1400224f2:	mov    edx,0x26ce9dd
   1400224f7:	or     al,0xc2
   1400224f9:	jns    0x1400224ff
   1400224fb:	rex.WRB or r14b,BYTE PTR [r8-0x1fbdf688]
   140022502:	addr32 cmp al,0x56
   140022505:	xchg   esi,eax
   140022506:	xchg   esi,eax
   140022507:	jns    0x1400224fd
   140022509:	outs   dx,DWORD PTR ds:[rsi]
   14002250a:	(bad)  
   14002250b:	ret    
   14002250c:	xlat   BYTE PTR ds:[rbx]
   14002250d:	mov    esi,0xcf3c45f8
   140022512:	jrcxz  0x1400224cb
   140022514:	jle    0x1400224fd
   140022516:	ja     0x140022590
   140022518:	sti    
   140022519:	cmp    ebp,edi
   14002251b:	movabs ds:0x8e91d08ea10f477b,eax
   140022524:	pop    rdi
   140022525:	lahf   
   140022526:	movabs al,ds:0x1be05c5a5829010d
   14002252f:	pop    rdi
   140022530:	(bad)  
   140022531:	sub    ch,BYTE PTR [rdi]
   140022533:	cmp    al,0xff
   140022535:	cmp    al,0x1d
   140022537:	sbb    eax,0x7bfcfc1d
   14002253c:	(bad)  
   14002253e:	ins    DWORD PTR es:[rdi],dx
   14002253f:	(bad)  
   140022540:	rex.WRX rcl bpl,1
   140022543:	fisttp QWORD PTR [rcx+0x679d3636]
   140022549:	loopne 0x1400224db
   14002254b:	cdq    
   14002254c:	and    dh,BYTE PTR [rip+0x5649523c]        # 0x1964b778e
   140022552:	xchg   edi,eax
   140022553:	push   rsi
   140022554:	retf   0xff1f
   140022557:	jmp    0x1400224e8
   140022559:	cmp    eax,0xf43c8f5
   14002255e:	jge    0x140022503
   140022560:	push   rsp
   140022561:	sub    ch,BYTE PTR [rip+0x58217502]        # 0x198239a69
   140022567:	ret    
   140022568:	ficom  DWORD PTR [rbp+0x7ca594ac]
   14002256e:	mov    cl,0x50
   140022570:	(bad)  [rsp+rdx*2+0x208dac43]
   140022577:	xor    dl,BYTE PTR [rdi+riz*4-0x34102f22]
   14002257e:	mov    dh,0x1
   140022580:	fsub   DWORD PTR [rdx+0x12]
   140022583:	test   ecx,esp
   140022585:	xchg   BYTE PTR [rbp+0x59],dh
   140022588:	(bad)  
   140022589:	iret   
   14002258a:	sbb    bl,bl
   14002258c:	je     0x140022541
   14002258e:	xor    DWORD PTR [rsi+rsi*8],0x1ad94e16
   140022595:	cmp    r10d,0x4a
   140022599:	popf   
   14002259a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002259b:	adc    eax,0x8a167f17
   1400225a0:	add    eax,0x177add8e
   1400225a5:	outs   dx,DWORD PTR ds:[rsi]
   1400225a6:	jnp    0x14002256f
   1400225a8:	mov    ebx,0x971a8308
   1400225ad:	rex.WRX xor BYTE PTR cs:[rcx],r14b
   1400225b1:	xor    ecx,eax
   1400225b3:	call   0x1730d5680
   1400225b8:	xor    edx,DWORD PTR [rbx+riz*8-0x835611f]
   1400225bf:	leave  
   1400225c0:	stc    
   1400225c1:	sub    QWORD PTR ds:[rdx+r10*2-0xb37befc],rsp
   1400225ca:	in     al,0x25
   1400225cc:	data16 cs rex.WRXB movabs r9,0xc5d5ded02f943e9
   1400225d8:	(bad)  
   1400225d9:	in     eax,dx
   1400225da:	je     0x140022640
   1400225dc:	movabs al,ds:0x430a102ef6853cf9
   1400225e5:	mov    dl,0x8b
   1400225e7:	jrcxz  0x14002262b
   1400225e9:	add    eax,0x1e6b9573
   1400225ee:	scas   eax,DWORD PTR es:[rdi]
   1400225ef:	xor    eax,0x8e5a2fb9
   1400225f4:	mov    bh,0x80
   1400225f6:	rex.X movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400225f8:	cwde   
   1400225f9:	xchg   BYTE PTR [rsi+rdx*2],al
   1400225fc:	rex.WXB retf 
   1400225fe:	imul   edx,DWORD PTR [rdx],0xffffffae
   140022601:	mov    al,0x64
   140022603:	xchg   edi,eax
   140022604:	rex.WRB test rax,0x57cc44c0
   14002260a:	nop
   14002260b:	out    dx,al
   14002260c:	cli    
   14002260d:	rex.WRX adc QWORD PTR [rbp-0x1dd717f0],r8
   140022614:	pop    rbx
   140022615:	iret   
   140022616:	cmp    al,0xcb
   140022618:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022619:	dec    ebx
   14002261b:	fbstp  TBYTE PTR [rax]
   14002261d:	jae    0x140022698
   14002261f:	mov    bh,bl
   140022621:	fdivrp st(3),st
   140022623:	(bad)  
   140022624:	fdivp  st(3),st
   140022626:	mov    esi,0xa1cd71f7
   14002262b:	and    DWORD PTR [rax],0xffffff88
   14002262e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002262f:	sbb    al,0x37
   140022631:	rex.XB sbb spl,BYTE PTR [r9]
   140022634:	and    al,0xd2
   140022636:	push   rbx
   140022637:	(bad)  
   140022638:	imul   esi,DWORD PTR [rbp+0x5e],0x78
   14002263c:	out    dx,al
   14002263d:	jns    0x1400225fd
   14002263f:	hlt    
   140022640:	hlt    
   140022641:	(bad)  
   140022642:	pop    rax
   140022643:	pop    rcx
   140022644:	pop    rsp
   140022645:	loop   0x14002263d
   140022647:	adc    esp,DWORD PTR [rdi]
   140022649:	js     0x140022612
   14002264b:	mov    ebx,0x7deec9de
   140022650:	sti    
   140022651:	nop
   140022652:	sahf   
   140022653:	rex.WX xchg rbx,rax
   140022655:	jl     0x140022604
   140022657:	fiadd  WORD PTR [rdx+0x1979e010]
   14002265d:	ret    0xc346
   140022660:	call   FWORD PTR ds:[rbp-0x7803099]
   140022667:	add    edi,DWORD PTR [rdi-0xe]
   14002266a:	clc    
   14002266b:	stos   DWORD PTR es:[rdi],eax
   14002266c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002266d:	iret   
   14002266e:	mov    WORD PTR [rcx],es
   140022670:	and    eax,0x88429b04
   140022675:	adc    eax,0xca9aec6b
   14002267a:	clc    
   14002267b:	sbb    esi,DWORD PTR [rsi-0x414e545d]
   140022681:	mov    dl,0x1c
   140022683:	pop    rcx
   140022684:	imul   edx,DWORD PTR [rbx+0x2e1bdf32],0xffffffdb
   14002268b:	(bad)  
   14002268c:	(bad)  
   14002268d:	mov    ecx,DWORD PTR [rcx-0x2529347b]
   140022693:	xchg   BYTE PTR [rax+0x32be4bd2],dl
   140022699:	imul   edi,ebx,0x42447c6e
   14002269f:	rex.XB sub eax,0xb2ca8dc0
   1400226a5:	(bad)  
   1400226a6:	sbb    eax,0xadacac45
   1400226ab:	xor    edi,DWORD PTR [rdi-0x2dbdf34c]
   1400226b1:	(bad)  
   1400226b2:	ror    esi,1
   1400226b4:	shl    al,1
   1400226b6:	outs   dx,BYTE PTR ds:[rsi]
   1400226b7:	out    dx,al
   1400226b8:	cmp    edi,DWORD PTR [rsp+rdx*4-0x5]
   1400226bc:	(bad)  
   1400226bd:	clc    
   1400226be:	jns    0x140022642
   1400226c0:	rex.RX popf 
   1400226c2:	jmp    0xd6585070
   1400226c7:	(bad)  
   1400226c8:	sbb    DWORD PTR [rip+0xffffffffcceccb39],ebx        # 0x10ceef207
   1400226ce:	or     al,0xa5
   1400226d0:	push   rdx
   1400226d1:	cdq    
   1400226d2:	jp     0x140022677
   1400226d4:	loope  0x140022666
   1400226d6:	test   DWORD PTR [rdx-0x6e],edx
   1400226d9:	icebp  
   1400226da:	xor    esp,DWORD PTR [rdx+rsi*4+0x59]
   1400226de:	test   BYTE PTR [rdx-0x6c],dl
   1400226e1:	rex.WXB
   1400226e2:	fwait
   1400226e3:	pushf  
   1400226e4:	pop    rbx
   1400226e5:	pop    rbx
   1400226e6:	movsxd edi,eax
   1400226e8:	(bad)  
   1400226e9:	xchg   edi,eax
   1400226ea:	jmp    0xe7a911db
   1400226ef:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400226f0:	xchg   DWORD PTR [rdx+0x7b],esp
   1400226f3:	(bad)  
   1400226f4:	cmp    eax,0xb647dbd
   1400226f9:	in     eax,dx
   1400226fa:	or     eax,DWORD PTR fs:[rip+0xffffffffc8872654]        # 0x108894d55
   140022701:	clc    
   140022702:	sub    esp,esi
   140022704:	(bad)  
   140022705:	or     bl,BYTE PTR [rdx]
   140022707:	outs   dx,BYTE PTR ds:[rsi]
   140022708:	jge    0x1400226bb
   14002270a:	sub    ebp,DWORD PTR [rdi]
   14002270c:	push   rbp
   14002270d:	pop    rsp
   14002270e:	jle    0x14002269c
   140022710:	xchg   ebp,eax
   140022711:	pop    rsp
   140022712:	or     cl,ch
   140022714:	call   0x1a13589d7
   140022719:	rex.R xchg edx,eax
   14002271b:	(bad)  
   14002271c:	push   0xffffffffdf10067a
   140022721:	(bad)  
   140022722:	rex.WB stos QWORD PTR es:[rdi],rax
   140022724:	ins    DWORD PTR es:[rdi],dx
   140022725:	xchg   ebx,eax
   140022726:	or     al,0x4d
   140022728:	movabs al,ds:0x660883e2db40eee2
   140022731:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022732:	addr32 stc 
   140022734:	(bad)  
   140022735:	(bad)  
   140022736:	call   0x118e3dfca
   14002273b:	jno    0x14002273b
   14002273d:	repz push rsi
   140022740:	mov    edi,0xdb89eb73
   140022745:	icebp  
   140022746:	cmp    al,0xf
   140022748:	sbb    eax,0x6c42eab7
   14002274d:	(bad)  
   14002274e:	fs push rdx
   140022750:	sahf   
   140022751:	repz cwde 
   140022753:	mov    esi,0x1f67c53c
   140022758:	jge    0x1400226e6
   14002275a:	out    dx,eax
   14002275b:	ds rep ins DWORD PTR es:[rdi],dx
   14002275e:	jbe    0x14002274d
   140022760:	fmulp  st(5),st
   140022762:	scas   eax,DWORD PTR es:[rdi]
   140022763:	(bad)  
   140022764:	cli    
   140022765:	scas   eax,DWORD PTR es:[rdi]
   140022766:	jae    0x140022743
   140022768:	popf   
   140022769:	ja     0x14002273b
   14002276b:	(bad)  
   14002276c:	(bad)  
   14002276d:	mov    ?,WORD PTR [rsi-0x7d6fd552]
   140022773:	xchg   edi,eax
   140022774:	loop   0x1400227b2
   140022776:	xchg   DWORD PTR [rdx-0x7e],edx
   140022779:	ins    BYTE PTR es:[rdi],dx
   14002277a:	cs retf 
   14002277c:	ret    0x5cf4
   14002277f:	in     eax,0xe3
   140022781:	jg     0x140022780
   140022783:	mov    cl,0x67
   140022785:	(bad)  
   140022786:	cli    
   140022787:	hlt    
   140022788:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022789:	mov    edi,0x5654aa51
   14002278e:	xchg   ecx,eax
   14002278f:	mov    dl,0x24
   140022791:	mov    cl,0xcb
   140022793:	(bad)  
   140022794:	fsub   DWORD PTR [rip+0x4cf58a5f]        # 0x18cf7b1f9
   14002279a:	(bad)  
   14002279b:	fld    TBYTE PTR [rbx+rbx*1+0x5e58deaf]
   1400227a2:	rex.WX loop 0x1400227a2
   1400227a5:	(bad)  
   1400227a6:	fwait
   1400227a7:	ins    BYTE PTR es:[rdi],dx
   1400227a8:	sbb    eax,DWORD PTR [rax+0x2952262d]
   1400227ae:	and    ecx,edx
   1400227b0:	add    al,0xd5
   1400227b2:	adc    cl,dl
   1400227b4:	iret   
   1400227b5:	push   rdx
   1400227b6:	sub    BYTE PTR [rcx+riz*2+0x61d220ac],dh
   1400227bd:	retf   0x99a2
   1400227c0:	sbb    BYTE PTR [rsi+rdx*8-0x52f180a7],al
   1400227c7:	es shl bh,0xd0
   1400227cb:	(bad)  
   1400227cc:	mov    dl,0xbc
   1400227ce:	mov    esi,0xaeac2c6
   1400227d3:	rex.WX sub cl,BYTE PTR [rdx-0x2312fd7b]
   1400227da:	lea    ebx,[rcx+0x1a000008]
   1400227e0:	jmp    0x194436c2e
   1400227e5:	ins    DWORD PTR es:[rdi],dx
   1400227e6:	rex.RB jbe 0x1400227d5
   1400227e9:	sbb    BYTE PTR [rdi+rdx*8-0x2],ah
   1400227ed:	rex.XB fdiv QWORD PTR [r9-0x31]
   1400227f1:	fcomi  st,st(1)
   1400227f3:	add    al,0xac
   1400227f5:	scas   eax,DWORD PTR es:[rdi]
   1400227f6:	scas   al,BYTE PTR es:[rdi]
   1400227f7:	mov    al,0xb1
   1400227f9:	mov    dh,0xca
   1400227fb:	fdiv   st(4),st
   1400227fd:	cmp    al,0x13
   1400227ff:	(bad)  
   140022800:	(bad)  
   140022801:	(bad)  
   140022802:	push   0x52a512c0
   140022807:	or     DWORD PTR [rbx+0x2d],ebp
   14002280a:	sahf   
   14002280b:	out    dx,eax
   14002280c:	xchg   ebx,eax
   14002280d:	leave  
   14002280e:	or     BYTE PTR fs:[rdx-0x682c2cfa],al
   140022815:	icebp  
   140022816:	xchg   esp,eax
   140022817:	(bad)  
   140022818:	(bad)  
   140022819:	(bad)  
   14002281a:	cmp    cl,bl
   14002281c:	pop    rsp
   14002281d:	sahf   
   14002281e:	rex.X mov cl,0x40
   140022821:	jnp    0x14002286a
   140022823:	(bad)  
   140022824:	pop    rbp
   140022825:	fnstsw WORD PTR [rbp-0x75ba751c]
   14002282b:	sbb    eax,0xb5b5745d
   140022830:	jae    0x14002286b
   140022832:	cdq    
   140022833:	or     al,0x44
   140022835:	repz xchg edi,eax
   140022837:	xor    eax,0x25e51d3a
   14002283c:	jrcxz  0x140022804
   14002283e:	lahf   
   14002283f:	(bad)  
   140022840:	xor    ah,BYTE PTR [rcx+0x52]
   140022843:	clc    
   140022844:	imul   edi,DWORD PTR [rbp+0x3c],0xffffffa1
   140022848:	adc    dh,BYTE PTR [rdi+0x13]
   14002284b:	mov    ebx,0xd6cb2d9a
   140022850:	mov    dl,BYTE PTR [rsi]
   140022852:	xor    al,0xa1
   140022854:	repz (bad) 
   140022856:	xchg   esp,eax
   140022857:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022858:	clc    
   140022859:	(bad)  
   14002285a:	mov    edi,0xe5f92ff1
   14002285f:	pop    rdi
   140022860:	jnp    0x1400228a1
   140022862:	fnstsw WORD PTR [rbx]
   140022864:	jp     0x1400228ce
   140022866:	add    al,0x1
   140022868:	fcmovu st,st(0)
   14002286a:	xchg   esp,eax
   14002286b:	mov    al,0x24
   14002286d:	sahf   
   14002286e:	es mov bh,ch
   140022871:	sub    BYTE PTR [ebp-0x6a],ch
   140022875:	jns    0x14002285d
   140022877:	(bad)  
   14002287a:	mov    DWORD PTR [rdi+0x295ca21e],eax
   140022880:	repz out dx,al
   140022882:	(bad)  
   140022883:	jle    0x140022823
   140022885:	ja     0x140022865
   140022887:	jmp    FWORD PTR [rsi]
   140022889:	jbe    0x140022879
   14002288b:	fldln2 
   14002288d:	retf   0xc6a6
   140022890:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140022891:	jae    0x140022899
   140022893:	xchg   ebx,eax
   140022894:	ja     0x1400228a6
   140022896:	pop    rax
   140022897:	cmp    al,0xdf
   140022899:	ret    
   14002289a:	sbb    ch,cl
   14002289c:	xchg   edi,eax
   14002289d:	ds not esp
   1400228a0:	stc    
   1400228a1:	(bad)  
   1400228a2:	cmp    al,0xf8
   1400228a4:	loopne 0x1400228fd
   1400228a6:	iret   
   1400228a7:	sahf   
   1400228a8:	cmp    eax,0x3280e7b
   1400228ad:	stos   DWORD PTR es:[rdi],eax
   1400228ae:	ret    0x59a
   1400228b1:	movsxd ebx,DWORD PTR [rcx-0xe]
   1400228b4:	lock (bad) 
   1400228b6:	mov    al,0xba
   1400228b8:	adc    bl,BYTE PTR [rdx]
   1400228ba:	sbb    eax,DWORD PTR [rsi-0x67]
   1400228bd:	sbb    eax,0x8ff4e111
   1400228c2:	xlat   BYTE PTR gs:[rbx]
   1400228c4:	outs   dx,DWORD PTR ds:[rsi]
   1400228c5:	xchg   ebp,eax
   1400228c6:	ins    DWORD PTR es:[rdi],dx
   1400228c7:	add    esi,DWORD PTR [rax-0x7b97db3b]
   1400228cd:	add    dl,BYTE PTR [rbx]
   1400228cf:	icebp  
   1400228d0:	ja     0x140022931
   1400228d2:	(bad)  
   1400228d3:	xor    dh,BYTE PTR [rbp+0xe6b955a]
   1400228d9:	(bad)  
   1400228da:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400228db:	outs   dx,DWORD PTR ds:[rsi]
   1400228dc:	(bad)  
   1400228dd:	mov    dh,bh
   1400228df:	inc    BYTE PTR [rcx-0xe]
   1400228e2:	(bad)
   1400228e5:	xchg   edx,eax
   1400228e6:	cmp    BYTE PTR [rsi-0x45712da3],al
   1400228ec:	test   BYTE PTR [rax],bh
   1400228ee:	xor    ecx,DWORD PTR [rsi-0x69]
   1400228f1:	and    eax,DWORD PTR [rsp+riz*2]
   1400228f4:	cmp    al,0xc7
   1400228f6:	fld    QWORD PTR [rdi-0x3f9e7bf0]
   1400228fc:	repnz push 0xffffffffffffffc0
   1400228ff:	ror    dl,cl
   140022901:	sub    cl,BYTE PTR [rax]
   140022903:	enter  0x19fa,0x72
   140022907:	mov    ecx,0x6ded9d0c
   14002290c:	je     0x140022905
   14002290e:	out    dx,al
   14002290f:	in     al,0x86
   140022911:	popf   
   140022912:	sti    
   140022913:	cmp    cl,dh
   140022915:	xchg   esi,eax
   140022916:	mov    bh,0xa1
   140022918:	test   BYTE PTR [rcx-0x25acd6ae],ah
   14002291e:	fsub   QWORD PTR [rax-0x4b4e52ae]
   140022924:	mov    ah,0xc4
   140022926:	(bad)  
   140022927:	retf   0xe50a
   14002292a:	jb     0x1400228b5
   14002292c:	xor    BYTE PTR [rax-0x1c],dh
   14002292f:	lahf   
   140022930:	lea    eax,[rsi-0x7d]
   140022933:	and    BYTE PTR [rax+rcx*1],cl
   140022936:	sbb    eax,DWORD PTR [rcx]
   140022938:	or     esi,DWORD PTR [rbx-0x4d]
   14002293b:	int3   
   14002293c:	pop    rsi
   14002293d:	sahf   
   14002293e:	ret    0xbb02
   140022941:	imul   esp
   140022943:	in     eax,0x7f
   140022945:	clc    
   140022946:	idiv   DWORD PTR [rdi-0x4c6e2639]
   14002294c:	scas   al,BYTE PTR es:[rdi]
   14002294d:	mov    bh,0x3f
   14002294f:	jno    0x14002294c
   140022951:	movsxd esi,DWORD PTR [rbx*2+0x1c5bdde2]
   140022958:	call   FWORD PTR [rdi-0x2e]
   14002295b:	xlat   BYTE PTR ds:[rbx]
   14002295c:	lahf   
   14002295d:	and    al,0xd6
   14002295f:	fdivr  st(3),st
   140022961:	sub    eax,0xb7623d49
   140022966:	pop    rbx
   140022967:	(bad)  
   140022968:	pop    rax
   140022969:	loope  0x1400229b0
   14002296b:	push   rdx
   14002296c:	xor    al,0x88
   14002296e:	mov    ecx,0x7c1ee2ff
   140022973:	sub    ebx,DWORD PTR [rax]
   140022975:	fidivr DWORD PTR [rcx]
   140022977:	(bad)  
   140022978:	mov    edi,0x1aff37fa
   14002297d:	jmp    0x198cbb7fd
   140022982:	(bad)  
   140022983:	mov    eax,0x513438a1
   140022988:	rex.WX (bad) 
   14002298a:	(bad)  
   14002298b:	loopne 0x140022969
   14002298d:	enter  0x3e39,0xf3
   140022991:	mov    DWORD PTR [rdi-0x10],ecx
   140022994:	ror    cl,cl
   140022996:	(bad)  
   140022997:	cmp    BYTE PTR [rdx-0xc],dh
   14002299a:	jp     0x14002299a
   14002299c:	mov    ebx,0x6e6dfedf
   1400229a1:	mov    esi,0xf9b216f5
   1400229a6:	sbb    al,0x56
   1400229a8:	jmp    0x1400229d5
   1400229aa:	(bad)  
   1400229ab:	rex.W ret 0x2c4a
   1400229af:	add    al,0x9e
   1400229b1:	lahf   
   1400229b2:	(bad)  
   1400229b3:	outs   dx,BYTE PTR ds:[rsi]
   1400229b4:	jp     0x14002296c
   1400229b6:	(bad)  
   1400229b7:	(bad)  
   1400229b8:	jg     0x1400229af
   1400229ba:	shl    DWORD PTR [rdi+0x1f],1
   1400229bd:	jge    0x1400229b7
   1400229bf:	xchg   ecx,eax
   1400229c0:	out    0x2b,eax
   1400229c2:	(bad)  
   1400229c3:	(bad)  
   1400229c4:	mov    esp,0x4b014d80
   1400229c9:	push   rsi
   1400229ca:	retf   0x8405
   1400229cd:	pop    rax
   1400229ce:	(bad)  
   1400229cf:	or     esi,DWORD PTR [rsi]
   1400229d1:	rex.XB ins DWORD PTR es:[rdi],dx
   1400229d3:	(bad)  
   1400229d4:	xor    DWORD PTR [rcx],0xfdf12b91
   1400229da:	clc    
   1400229db:	xchg   ebp,eax
   1400229dc:	(bad)  
   1400229dd:	mov    dh,0xd
   1400229df:	rcl    BYTE PTR [rsi-0x655d9ced],0x91
   1400229e6:	sahf   
   1400229e7:	mov    ecx,0xbc13f6f9
   1400229ec:	lock fdiv QWORD PTR [rdi+0x38]
   1400229f0:	cmc    
   1400229f1:	ret    0x4473
   1400229f4:	(bad)  
   1400229f5:	rex.R
   1400229f6:	ds lahf 
   1400229f8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400229f9:	outs   dx,DWORD PTR ds:[rsi]
   1400229fa:	jo     0x14002298c
   1400229fc:	std    
   1400229fd:	(bad)  
   1400229fe:	(bad)  
   1400229ff:	rcr    bl,cl
   140022a01:	(bad)  
   140022a02:	rex xlat BYTE PTR ds:[rbx]
   140022a04:	mov    ?,WORD PTR [rsi]
   140022a06:	jb     0x140022a0d
   140022a08:	xlat   BYTE PTR ds:[rbx]
   140022a09:	shl    bl,0x1a
   140022a0c:	push   rsp
   140022a0d:	or     al,0x41
   140022a0f:	fdiv   QWORD PTR [rbp+0x119c4cd6]
   140022a15:	add    esi,DWORD PTR [rdi+0x12]
   140022a18:	(bad)  
   140022a19:	fisubr DWORD PTR [rcx]
   140022a1b:	push   rsi
   140022a1c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140022a1d:	xor    eax,0x728d4ae5
   140022a22:	mov    ecx,0x3cccd4ca
   140022a27:	add    BYTE PTR [rsi-0x7366e11],bh
   140022a2d:	clc    
   140022a2e:	jle    0x1400229b6
   140022a30:	mov    fs,WORD PTR [rdx-0x7f]
   140022a33:	(bad)  
   140022a34:	push   rdi
   140022a35:	(bad)  
   140022a36:	xlat   BYTE PTR ds:[rbx]
   140022a37:	test   BYTE PTR [rsi],0x72
   140022a3a:	xor    al,0xe3
   140022a3c:	xchg   ebx,eax
   140022a3d:	int    0x66
   140022a3f:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140022a41:	shr    BYTE PTR [rax+0x4d],0xbd
   140022a45:	push   rcx
   140022a46:	(bad)  
   140022a47:	or     al,0x5c
   140022a49:	jae    0x140022a98
   140022a4b:	lods   eax,DWORD PTR ds:[rsi]
   140022a4c:	push   rsi
   140022a4d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022a4e:	pop    rsi
   140022a4f:	scas   eax,DWORD PTR es:[rdi]
   140022a50:	and    DWORD PTR [rbp-0x6c4c4c5e],edx
   140022a56:	(bad)  
   140022a57:	(bad)  
   140022a58:	int    0x78
   140022a5a:	(bad)  
   140022a5b:	and    BYTE PTR [rsi+riz*8-0x65a923d3],dh
   140022a62:	and    bl,bh
   140022a64:	rex.WR or r14b,BYTE PTR [rcx+0x64fb764d]
   140022a6b:	jge    0x140022a56
   140022a6d:	test   BYTE PTR [rsi+0x44a43296],cl
   140022a73:	(bad)  
   140022a74:	mov    al,0x57
   140022a76:	sub    BYTE PTR [rdi-0x3e],ah
   140022a79:	cmp    bl,BYTE PTR [rax+0x79ca4186]
   140022a7f:	sbb    eax,0xe95c8a3a
   140022a84:	xor    BYTE PTR [rcx-0x23],dh
   140022a87:	movsxd edx,DWORD PTR [rax-0x32]
   140022a8a:	cli    
   140022a8b:	(bad)  
   140022a8c:	sbb    bl,BYTE PTR [rdi-0x6]
   140022a8f:	ret    0x3cd3
   140022a92:	(bad)  
   140022a93:	shl    BYTE PTR [rdi+0x40],1
   140022a96:	or     BYTE PTR [rsi-0x13],bh
   140022a99:	pop    rdi
   140022a9a:	(bad)  
   140022a9b:	es out dx,eax
   140022a9d:	js     0x140022a76
   140022a9f:	cmp    ebp,ecx
   140022aa1:	sbb    ebp,eax
   140022aa3:	ja     0x140022a6e
   140022aa5:	retf   0x6c84
   140022aa8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022aa9:	xor    eax,0x63ce105c
   140022aae:	or     BYTE PTR [rdx],bl
   140022ab0:	or     eax,0x17f4fabe
   140022ab5:	(bad)  
   140022ab6:	(bad)  
   140022ab7:	cld    
   140022ab8:	ror    DWORD PTR [rdi],cl
   140022aba:	jge    0x140022b1f
   140022abc:	je     0x140022b22
   140022abe:	fs sbb al,0x58
   140022ac1:	xchg   edi,eax
   140022ac2:	mov    BYTE PTR [rip+0xffffffffa943982b],dl        # 0xe945c2f3
   140022ac8:	(bad)
   140022acb:	push   rsi
   140022acc:	jge    0x140022aad
   140022ace:	scas   eax,DWORD PTR es:[rdi]
   140022acf:	movabs al,ds:0xfe5dd8fead56a34d
   140022ad8:	stos   DWORD PTR es:[rdi],eax
   140022ad9:	fild   DWORD PTR gs:[rax]
   140022adc:	ins    BYTE PTR es:[rdi],dx
   140022add:	xor    ecx,ecx
   140022adf:	out    0xf3,eax
   140022ae1:	mov    r13d,0x9ed0cda1
   140022ae7:	imul   edi,DWORD PTR [rcx-0x21],0xffffffee
   140022aeb:	jge    0x140022b49
   140022aed:	sbb    al,0x1b
   140022aef:	in     eax,0xdc
   140022af1:	call   0x18e51590f
   140022af6:	jb     0x140022b61
   140022af8:	cld    
   140022af9:	add    dl,BYTE PTR [rbx+0x13]
   140022afc:	adc    eax,DWORD PTR [rax-0x2c22b8e5]
   140022b02:	fisttp DWORD PTR [rdi+0x77]
   140022b05:	ja     0x140022b16
   140022b07:	std    
   140022b08:	rex.XB cmp ebp,r9d
   140022b0b:	(bad)  
   140022b0c:	jmp    0x189d8fbb4
   140022b11:	mov    esi,0x83d48ad
   140022b16:	or     DWORD PTR [rdx-0x338b92f8],esp
   140022b1c:	test   BYTE PTR [rbx-0x3763426c],bl
   140022b22:	and    al,0x5b
   140022b24:	(bad)  
   140022b25:	(bad)  
   140022b26:	dec    DWORD PTR [rsi+0x50]
   140022b29:	ins    BYTE PTR es:[rdi],dx
   140022b2a:	cmc    
   140022b2b:	jp     0x140022ab0
   140022b2d:	push   0xffffffffffffffb5
   140022b2f:	(bad)  
   140022b30:	mov    dh,0x46
   140022b33:	xor    ecx,esp
   140022b35:	nop
   140022b36:	(bad)  
   140022b37:	loopne 0x140022b5c
   140022b39:	xchg   ebp,eax
   140022b3a:	ret    0xca53
   140022b3d:	in     eax,dx
   140022b3e:	mov    dl,cl
   140022b40:	xchg   ebp,eax
   140022b41:	cli    
   140022b42:	xchg   esp,eax
   140022b43:	out    0x39,eax
   140022b45:	gs ins DWORD PTR es:[rdi],dx
   140022b47:	push   0xffffffff9cabab16
   140022b4c:	mov    esi,0xbbac26e8
   140022b51:	scas   al,BYTE PTR es:[rdi]
   140022b52:	mov    ecx,0xd1c08626
   140022b57:	add    edi,0xffffffbb
   140022b5a:	jbe    0x140022b38
   140022b5c:	push   rsp
   140022b5d:	xchg   ebx,eax
   140022b5e:	rcl    BYTE PTR [rax+0x389ee0a5],1
   140022b64:	and    ecx,DWORD PTR [rdi+0x2]
   140022b67:	push   rax
   140022b68:	mov    ch,BYTE PTR [rip+0x68795a40]        # 0x1a87b85ae
   140022b6e:	(bad)  
   140022b6f:	adc    al,0x0
   140022b71:	imul   ebx,DWORD PTR [rsi+0x0],0xd89e72d1
   140022b78:	or     esi,DWORD PTR [rdx-0x3c3083fe]
   140022b7e:	sbb    cl,bl
   140022b80:	sub    esp,DWORD PTR [rdi+0x1f13e15e]
   140022b86:	sti    
   140022b87:	sbb    BYTE PTR [rbx],ah
   140022b89:	ret    
   140022b8a:	addr32 mov eax,0xf0b7aef3
   140022b90:	sub    edi,DWORD PTR [rdi+0x5d0e7ef6]
   140022b96:	ja     0x140022b5c
   140022b98:	push   rbp
   140022b99:	push   rsp
   140022b9a:	adc    r9,rcx
   140022b9d:	xchg   edi,eax
   140022b9e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140022b9f:	(bad)  
   140022ba0:	sub    eax,0x973ae5ae
   140022ba5:	iret   
   140022ba6:	xor    esi,DWORD PTR [rcx-0x1f]
   140022ba9:	rex.X in eax,dx
   140022bab:	outs   dx,DWORD PTR ds:[rsi]
   140022bac:	(bad)  
   140022bad:	(bad)  
   140022bae:	scas   eax,DWORD PTR es:[rdi]
   140022baf:	pop    rsi
   140022bb0:	jl     0x140022b9e
   140022bb2:	xchg   ecx,eax
   140022bb3:	rex.RXB mov r15d,0x5755ad57
   140022bb9:	test   BYTE PTR [rbx+rbp*8],dl
   140022bbc:	rex.X mov BYTE PTR [rcx],dil
   140022bbf:	(bad)  
   140022bc0:	cdq    
   140022bc1:	mov    bl,0xb0
   140022bc3:	pop    rax
   140022bc4:	int3   
   140022bc5:	xlat   BYTE PTR gs:[rbx]
   140022bc7:	movabs ds:0xc0de4237aa5ebd7a,al
   140022bd0:	(bad)  
   140022bd2:	mov    db3,rbx
   140022bd5:	(bad)  
   140022bd6:	(bad)  
   140022bd7:	mov    ecx,DWORD PTR [rcx+0x4b021e52]
   140022bdd:	mov    ch,0x56
   140022bdf:	(bad)  
   140022be0:	fwait
   140022be1:	leave  
   140022be2:	jb     0x140022be1
   140022be4:	lea    esi,[rdi+0x70]
   140022be7:	hlt    
   140022be8:	clc    
   140022be9:	rex.WRB pop r12
   140022beb:	mov    esi,0x57e18174
   140022bf0:	pop    rdi
   140022bf1:	in     eax,0xe2
   140022bf3:	test   DWORD PTR [rcx],esi
   140022bf5:	mov    ah,0x8e
   140022bf7:	pop    rax
   140022bf8:	pop    rsi
   140022bf9:	pop    rsp
   140022bfa:	(bad)  
   140022bfb:	imul   esp,DWORD PTR [rcx+0x11],0xf97223ad
   140022c02:	add    ch,BYTE PTR [rbp-0x13]
   140022c05:	in     eax,dx
   140022c06:	je     0x140022c7e
   140022c08:	jbe    0x140022bdc
   140022c0a:	fstp   st(3)
   140022c0c:	(bad)  
   140022c0d:	scas   al,BYTE PTR es:[rdi]
   140022c0e:	mov    ebp,0xbdda19fb
   140022c13:	(bad)  
   140022c14:	xchg   esp,eax
   140022c15:	(bad)  
   140022c16:	hlt    
   140022c17:	xor    eax,DWORD PTR [rsi+rax*8+0x25]
   140022c1b:	or     DWORD PTR [rbx],edx
   140022c1d:	add    eax,0xd869d26a
   140022c22:	(bad)  
   140022c23:	jge    0x140022c5f
   140022c25:	in     eax,dx
   140022c26:	sbb    DWORD PTR [rax+0x25],ebp
   140022c29:	or     eax,0xdfa93215
   140022c2e:	sbb    eax,edx
   140022c30:	sub    BYTE PTR [rsi+0x2],ch
   140022c33:	mov    ah,BYTE PTR [rcx-0x4d]
   140022c36:	or     DWORD PTR [rbx],ebp
   140022c38:	mov    al,0x88
   140022c3a:	retf   
   140022c3b:	test   DWORD PTR [rdx],esp
   140022c3d:	rex.WRX hlt 
   140022c3f:	mov    DWORD PTR [rsi],edx
   140022c41:	imul   esi,DWORD PTR [rbx+0x5],0x64
   140022c45:	rcl    BYTE PTR [rdx],0x27
   140022c48:	or     BYTE PTR [rbx-0x2],ah
   140022c4b:	mov    esi,0xe498a2b4
   140022c50:	adc    dh,BYTE PTR ss:[rax-0x70418caf]
   140022c57:	rex.WXB (bad) 
   140022c59:	mov    edx,0x5b633cae
   140022c5e:	rex
   140022c5f:	rex.RX (bad) 
   140022c61:	and    al,BYTE PTR [rbp-0x3787773b]
   140022c67:	xchg   DWORD PTR [rax-0x45],ecx
   140022c6a:	test   cl,dh
   140022c6c:	jl     0x140022c0d
   140022c6e:	xchg   ebp,eax
   140022c6f:	(bad)
   140022c72:	(bad)  
   140022c73:	(bad)  
   140022c74:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022c75:	js     0x140022c71
   140022c77:	repz lahf 
   140022c79:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022c7a:	mov    bh,0xb7
   140022c7c:	(bad)  
   140022c7d:	jg     0x140022c7a
   140022c7f:	mov    ebx,0xdef73dff
   140022c84:	ja     0x140022ca5
   140022c86:	in     eax,dx
   140022c87:	pop    rbp
   140022c88:	sbb    eax,0xd5e09769
   140022c8d:	in     eax,0x46
   140022c8f:	add    DWORD PTR [rax],ebp
   140022c91:	rex.WRXB movabs ds:0xe0f5393e4f0be1b5,al
   140022c9b:	xchg   DWORD PTR [rsi],edi
   140022c9d:	hlt    
   140022c9e:	popf   
   140022c9f:	rcl    ecx,1
   140022ca1:	shl    DWORD PTR [rcx+0x60],1
   140022ca4:	push   rbx
   140022ca5:	and    BYTE PTR [rsi+0x3933b5ac],dl
   140022cab:	(bad)  
   140022cac:	cmp    ebx,DWORD PTR [rdi]
   140022cae:	(bad)  
   140022caf:	ror    DWORD PTR [rdx+0x6b1376b4],1
   140022cb5:	jmp    0x140022c6c
   140022cb7:	rex.W (bad) 
   140022cb9:	shr    DWORD PTR [rbx+0x6db2227f],cl
   140022cbf:	add    BYTE PTR [rsi+0x318e898],dh
   140022cc5:	and    BYTE PTR [rbp-0x1aee2de0],ah
   140022ccb:	push   0x15
   140022ccd:	rex.WRXB jns 0x140022d2c
   140022cd0:	jae    0x140022cc2
   140022cd2:	(bad)  
   140022cd3:	mov    ds,WORD PTR [rdi+rsi*2-0x74]
   140022cd7:	test   ecx,edi
   140022cd9:	imul   ecx,esi,0xee730f0e
   140022cdf:	in     al,dx
   140022ce0:	xor    ch,ah
   140022ce2:	push   rdx
   140022ce3:	leave  
   140022ce4:	mov    ch,0x1
   140022ce6:	xchg   DWORD PTR [rcx],esp
   140022ce8:	sbb    ebp,DWORD PTR [rbx+0x6b]
   140022ceb:	lods   al,BYTE PTR ds:[rsi]
   140022cec:	lods   eax,DWORD PTR ds:[rsi]
   140022ced:	sub    al,0x33
   140022cef:	jns    0x140022ce2
   140022cf1:	and    ah,bh
   140022cf3:	xchg   BYTE PTR [rdi-0x1d],cl
   140022cf6:	sti    
   140022cf7:	sbb    DWORD PTR [rdx-0x5],edi
   140022cfa:	(bad)  
   140022cfb:	mov    eax,0xa11c8f6
   140022d00:	in     eax,dx
   140022d01:	in     eax,dx
   140022d02:	in     al,dx
   140022d03:	call   0x126cdef23
   140022d08:	mov    BYTE PTR [rdx+rcx*2-0x3b39094d],al
   140022d0f:	(bad)  
   140022d10:	jne    0x140022ca4
   140022d12:	jge    0x140022d3b
   140022d14:	rex.WB jge 0x140022ccc
   140022d17:	fimul  WORD PTR [rdi-0x36]
   140022d1a:	pop    rdi
   140022d1b:	sub    eax,0x40093c0c
   140022d20:	(bad)  
   140022d21:	push   rbp
   140022d22:	jbe    0x140022d2b
   140022d24:	push   rsi
   140022d25:	xor    dl,BYTE PTR [rdx-0x5a]
   140022d28:	xor    eax,0x72774fa
   140022d2d:	(bad)  
   140022d2e:	adc    esp,DWORD PTR [rax]
   140022d30:	sbb    al,0x8e
   140022d32:	fist   WORD PTR [rbp-0xe]
   140022d35:	ins    BYTE PTR es:[rdi],dx
   140022d36:	retf   0x2c1c
   140022d39:	jrcxz  0x140022d5c
   140022d3b:	movabs al,ds:0xa229fbb34c0c8c4
   140022d44:	movsxd ecx,DWORD PTR [rdi+0x25]
   140022d47:	mul    BYTE PTR [rsp+rbx*2-0x2]
   140022d4b:	ret    
   140022d4c:	(bad)  
   140022d4d:	loopne 0x140022d77
   140022d4f:	xchg   ecx,eax
   140022d50:	push   rdx
   140022d51:	jg     0x140022d5e
   140022d53:	add    DWORD PTR [rsi-0x3fbe7bac],ebx
   140022d59:	jae    0x140022d2a
   140022d5b:	cmp    al,0xcb
   140022d5d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022d5e:	ds (bad) 
   140022d60:	jno    0x140022d88
   140022d62:	(bad)  
   140022d63:	(bad)  
   140022d64:	jb     0x140022d35
   140022d66:	mov    ebp,0xbf2bf2f7
   140022d6b:	cli    
   140022d6c:	iret   
   140022d6d:	mov    ecx,0x9001e0e6
   140022d72:	shl    cl,cl
   140022d74:	(bad)  
   140022d75:	adc    DWORD PTR [rsi+0x5ac628ed],ecx
   140022d7b:	and    al,0x61
   140022d7d:	test   BYTE PTR [rdx],dl
   140022d7f:	(bad)  
   140022d80:	retf   
   140022d81:	push   rbx
   140022d82:	xchg   edi,eax
   140022d83:	sbb    edi,DWORD PTR [rdi-0x3]
   140022d86:	(bad)  
   140022d87:	(bad)  
   140022d88:	cmp    eax,0x8fa3d8f5
   140022d8d:	mov    esi,0x17d7af5c
   140022d92:	xor    DWORD PTR [rbp+0x60],0x2b314ace
   140022d99:	sub    al,0xb
   140022d9b:	movabs eax,ds:0x5ad515533e512bd6
   140022da4:	movabs ds:0x6d913f14c4fea954,eax
   140022dad:	add    esi,DWORD PTR [rax+0x131ac4c5]
   140022db3:	(bad)  
   140022db5:	dec    DWORD PTR [rsi+0x36]
   140022db8:	test   al,0x48
   140022dba:	rex.RXB ins BYTE PTR es:[rdi],dx
   140022dbc:	xchg   esp,eax
   140022dbd:	and    ah,BYTE PTR [rax+rdx*1-0x1a12088c]
   140022dc4:	(bad)  
   140022dc5:	jle    0x140022db8
   140022dc7:	cmp    bl,dh
   140022dc9:	std    
   140022dca:	rex.WRXB (bad) 
   140022dcc:	(bad)  
   140022dcd:	je     0x140022e33
   140022dcf:	test   BYTE PTR [rdi-0x1d36c3a1],dl
   140022dd5:	ret    0x9b3c
   140022dd8:	sbb    ebx,DWORD PTR [rbx]
   140022dda:	push   0xffffffff8f3cf06d
   140022ddf:	movabs al,ds:0x4c4b94a837a8d011
   140022de8:	rex.WRX mov WORD PTR [rbx],fs
   140022deb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140022dec:	movabs al,ds:0x3b433f7f6f41d6d8
   140022df5:	ja     0x140022dc9
   140022df7:	fnstsw WORD PTR [rbx]
   140022df9:	rex (bad) 
   140022dfb:	mov    ?,WORD PTR [rsi]
   140022dfd:	jb     0x140022dc4
   140022dff:	jbe    0x140022dbd
   140022e01:	rex.WR
   140022e02:	ss out dx,al
   140022e04:	and    BYTE PTR [rcx+rdi*4+0x1],dh
   140022e08:	movsxd ebx,DWORD PTR [rdx+0x7e9a4008]
   140022e0e:	rcl    BYTE PTR [rbp-0xa494b95],0xe9
   140022e15:	cmp    WORD PTR [rip+0x4263046],0x88a0        # 0x144285e64
   140022e1e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140022e1f:	iret   
   140022e20:	rex.B fdivr st(4),st
   140022e23:	movsxd esp,ebx
   140022e25:	cwde   
   140022e26:	pop    rdi
   140022e27:	mov    WORD PTR es:[rdx+0x36],es
   140022e2b:	jne    0x140022e30
   140022e2d:	sbb    al,0xd9
   140022e2f:	(bad)  
   140022e30:	imul   bh
   140022e32:	sub    DWORD PTR [rsi+0xa],esi
   140022e35:	(bad)  
   140022e36:	push   0x49
   140022e38:	stos   DWORD PTR es:[rdi],eax
   140022e39:	mov    eax,edi
   140022e3b:	cmp    edi,eax
   140022e3d:	cmp    ebp,DWORD PTR [rdx]
   140022e3f:	push   rcx
   140022e40:	push   rdx
   140022e41:	xor    bh,BYTE PTR [rbx]
   140022e43:	cmp    eax,0x3c8fe3c3
   140022e48:	ret    0x8f53
   140022e4b:	(bad)  
   140022e4c:	(bad)  
   140022e4d:	out    dx,al
   140022e4e:	mov    ebp,0xfe9ff97b
   140022e53:	rcr    DWORD PTR [rdi],cl
   140022e55:	jb     0x140022e39
   140022e57:	scas   al,BYTE PTR es:[rdi]
   140022e58:	adc    esp,esp
   140022e5a:	fimul  DWORD PTR [rdx]
   140022e5c:	mov    ?,ecx
   140022e5e:	push   rdi
   140022e5f:	(bad)  
   140022e60:	cmp    BYTE PTR [rdx],al
   140022e62:	rol    esp,cl
   140022e64:	adc    DWORD PTR [rax],eax
   140022e66:	cdq    
   140022e67:	ins    BYTE PTR es:[rdi],dx
   140022e68:	xchg   esi,eax
   140022e69:	and    BYTE PTR [rax+rdi*8],cl
   140022e6c:	retf   0x5fd3
   140022e6f:	pushf  
   140022e70:	std    
   140022e71:	rcr    BYTE PTR [rdi-0x18441f84],1
   140022e77:	(bad)  
   140022e78:	(bad)  
   140022e79:	rex.WRXB add r13,r11
   140022e7c:	rex.X retf 0x6b05
   140022e80:	int3   
   140022e81:	pushf  
   140022e82:	nop
   140022e83:	jb     0x140022e4b
   140022e85:	idiv   DWORD PTR [rbp+rax*4-0x733264b8]
   140022e8c:	mov    ah,0xb5
   140022e8e:	test   al,0x5a
   140022e90:	or     eax,0xf9ab15ed
   140022e95:	leave  
   140022e96:	leave  
   140022e97:	mov    dh,0x1
   140022e99:	fsub   DWORD PTR [rdx+0x22]
   140022e9c:	cmp    eax,0xe8421755
   140022ea1:	and    al,0x43
   140022ea3:	sahf   
   140022ea4:	ds (bad) 
   140022ea6:	mov    ebx,0x854aa5e1
   140022eab:	rex.WX mov bpl,0x46
   140022eae:	ds lahf 
   140022eb0:	jrcxz  0x140022e68
   140022eb2:	adc    esi,DWORD PTR [rdi-0xd]
   140022eb5:	xchg   esi,eax
   140022eb6:	mov    ebx,0xdafac6df
   140022ebb:	adc    ah,bh
   140022ebd:	rex.RXB
   140022ebe:	rex.RXB sbb DWORD PTR [r9],r15d
   140022ec1:	cmp    ecx,esp
   140022ec3:	in     eax,0xcb
   140022ec5:	xchg   edi,eax
   140022ec6:	pop    rcx
   140022ec7:	pushf  
   140022ec8:	fwait
   140022ec9:	ret    
   140022eca:	pop    rdx
   140022ecb:	rex.WXB
   140022ecc:	es jrcxz 0x140022e72
   140022ecf:	cmp    al,0x1f
   140022ed1:	or     BYTE PTR [rdx+0x69],0x93
   140022ed5:	int    0x8d
   140022ed7:	jne    0x140022e9f
   140022ed9:	rex.RXB
   140022eda:	rex.RXB rol BYTE PTR [r14-0x2d],1
   140022ede:	(bad)  
   140022ee0:	int    0xee
   140022ee2:	cmp    eax,0xeee8e87b
   140022ee7:	(bad)  
   140022ee8:	out    0x35,eax
   140022eea:	sti    
   140022eeb:	jmp    0x10fc81dd8
   140022ef0:	out    0xf0,al
   140022ef2:	or     eax,DWORD PTR [rip+0x322230c2]        # 0x172245fba
   140022ef8:	mov    cl,0x81
   140022efb:	lods   eax,DWORD PTR ds:[rsi]
   140022efc:	sbb    edi,esp
   140022efe:	fstp   DWORD PTR [rdx+0x75c2bf9f]
   140022f04:	mov    ss,WORD PTR [rbx+0x115b297c]
   140022f0a:	mov    DWORD PTR [rcx-0x593babb8],eax
   140022f10:	scas   eax,DWORD PTR es:[rdi]
   140022f11:	xor    al,0x31
   140022f13:	rex.WX xchg rax,rax
   140022f15:	cwde   
   140022f16:	add    eax,DWORD PTR [rax-0x3c]
   140022f19:	movabs r15,0x9ea43a7b46efe324
   140022f23:	mov    cl,0x12
   140022f25:	test   DWORD PTR [rbx-0x3f97b532],esp
   140022f2b:	rex.RB int3 
   140022f2d:	rex.WX cdqe 
   140022f2f:	and    al,0x1
   140022f31:	sbb    eax,0xd22498d3
   140022f36:	xchg   BYTE PTR [rdi+0x7d],ch
   140022f39:	cmc    
   140022f3a:	imul   edi,esp,0xffffffe5
   140022f3d:	lahf   
   140022f3e:	(bad)  
   140022f3f:	cmp    ebp,esp
   140022f41:	push   rdx
   140022f42:	mov    DWORD PTR [rdi+0x79],ebx
   140022f45:	(bad)  
   140022f46:	sti    
   140022f47:	sbb    eax,0x2ed77fee
   140022f4c:	(bad)  
   140022f4d:	sub    BYTE PTR [rax],ah
   140022f4f:	shl    BYTE PTR [rsi],cl
   140022f51:	neg    BYTE PTR [rsi]
   140022f53:	(bad)
   140022f58:	rex.X
   140022f59:	rex mov esi,0xfc6a6790
   140022f5f:	(bad)
   140022f64:	shl    ecx,1
   140022f66:	rex.WRXB jge 0x140022f4b
   140022f69:	adc    ebp,DWORD PTR [rdi]
   140022f6b:	sbb    DWORD PTR [rbx-0x29],ebp
   140022f6e:	test   DWORD PTR [rax],edx
   140022f70:	sub    eax,eax
   140022f72:	sub    al,0xd8
   140022f74:	imul   ebp,DWORD PTR [rcx],0x2c10bce5
   140022f7a:	out    0x3c,eax
   140022f7c:	pop    rcx
   140022f7d:	scas   al,BYTE PTR es:[rdi]
   140022f7e:	sbb    ebp,ebx
   140022f80:	test   al,0x6
   140022f82:	cli    
   140022f83:	xchg   esi,ebp
   140022f85:	fcos   
   140022f87:	jno    0x140022f53
   140022f89:	mov    dh,0x1
   140022f8b:	fsub   DWORD PTR [rdx-0x5e]
   140022f8e:	and    ebp,DWORD PTR [rip+0xffffffffe86269b4]        # 0x128649948
   140022f94:	pop    rbp
   140022f95:	cmp    BYTE PTR [rax+0x7763617c],dl
   140022f9b:	push   rbp
   140022f9c:	mov    edx,0xc4f8fc0c
   140022fa1:	gs (bad) 
   140022fa3:	(bad)  
   140022fa4:	out    dx,al
   140022fa5:	out    dx,al
   140022fa6:	in     al,0x8e
   140022fa8:	mov    ebx,0x6f2de5ef
   140022fad:	jge    0x140022fb6
   140022faf:	es stos BYTE PTR es:[rdi],al
   140022fb1:	xor    esi,DWORD PTR [rsi-0x12]
   140022fb4:	sbb    al,0x63
   140022fb6:	movsxd esp,edi
   140022fb8:	cmp    DWORD PTR [rbx],edi
   140022fba:	cmp    al,0xcc
   140022fbc:	fmul   st(4),st
   140022fbe:	or     al,0x26
   140022fc0:	mov    dl,BYTE PTR [rax-0x7ee146b6]
   140022fc6:	(bad)
   140022fcb:	ret    
   140022fcc:	(bad)  
   140022fcd:	(bad)  
   140022fce:	cmp    dh,ah
   140022fd0:	ret    0x2318
   140022fd3:	addr32 pop rsi
   140022fd5:	and    eax,0xd3d2c993
   140022fda:	xlat   BYTE PTR ds:[rbx]
   140022fdb:	mov    eax,0x86fa2ed0
   140022fe1:	jbe    0x140022fb5
   140022fe3:	(bad)  
   140022fe4:	mov    bl,0x3
   140022fe6:	(bad)  
   140022fe7:	fwait
   140022fe8:	(bad)  
   140022fe9:	iret   
   140022fea:	(bad)  
   140022feb:	and    cl,BYTE PTR [rax+0x312d28a2]
   140022ff1:	es in  al,0x17
   140022ff4:	rex.WRX fstp DWORD PTR [rbx+0x32]
   140022ff8:	stc    
   140022ff9:	icebp  
   140022ffa:	scas   al,BYTE PTR es:[rdi]
   140022ffb:	lahf   
   140022ffc:	jp     0x14002300a
   140022ffe:	rex.WB push r10
   140023000:	(bad)  
   140023001:	cmp    al,ch
   140023003:	(bad)  
   140023004:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140023005:	stc    
   140023006:	js     0x140022f9a
   140023008:	fdiv   QWORD PTR [rbx-0x74]
   14002300b:	mov    edi,0x24d885ae
   140023010:	sbb    al,0x1f
   140023012:	and    ch,BYTE PTR [rcx+0x29]
   140023015:	outs   dx,BYTE PTR ds:[rsi]
   140023016:	(bad)
   140023019:	cmp    ch,BYTE PTR [rsi+0x89ac62b]
   14002301f:	sbb    BYTE PTR [edx-0x6b],ch
   140023023:	or     cl,BYTE PTR [rdi+0x3e]
   140023026:	idiv   BYTE PTR [rax]
   140023028:	popf   
   140023029:	popf   
   14002302a:	popf   
   14002302b:	cld    
   14002302c:	(bad)  
   14002302d:	(bad)  
   14002302e:	(bad)  
   14002302f:	and    DWORD PTR [rdi],esi
   140023031:	fidiv  WORD PTR [rdx+0x33]
   140023034:	push   rdx
   140023035:	jns    0x14002306b
   140023037:	(bad)  
   140023038:	fiadd  WORD PTR [rdx+0x1719e924]
   14002303e:	(bad)  
   14002303f:	add    edx,edx
   140023041:	and    al,0xe0
   140023043:	xchg   ebx,eax
   140023044:	(bad)  
   140023046:	xor    bh,bl
   140023048:	ror    DWORD PTR [rdi-0x5c340604],1
   14002304e:	and    esp,DWORD PTR [rbx]
   140023050:	xchg   edi,eax
   140023051:	xor    BYTE PTR [rbp+0x21],0x58
   140023055:	rcr    dl,0x69
   140023058:	or     edx,ebx
   14002305a:	and    BYTE PTR [rsi],dl
   14002305c:	or     ebx,DWORD PTR [rcx]
   14002305e:	mov    ch,0x5e
   140023060:	or     esi,DWORD PTR [rbp-0x53]
   140023063:	pop    rsp
   140023064:	stos   DWORD PTR es:[rdi],eax
   140023065:	rex.RXB (bad) 
   140023067:	(bad)  
   140023068:	in     al,0x62
   14002306a:	std    
   14002306b:	xlat   BYTE PTR ds:[rbx]
   14002306c:	xchg   ebx,eax
   14002306d:	ins    DWORD PTR es:[rdi],dx
   14002306e:	add    esi,DWORD PTR [rax-0x7ce73b3b]
   140023074:	rcr    DWORD PTR [rdx-0x28],1
   140023077:	js     0x140023051
   140023079:	rex.RX or r14b,sil
   14002307c:	adc    DWORD PTR [rdx-0x731ca117],esp
   140023082:	adc    BYTE PTR [rsi+rbx*1+0x58588e91],0x5c
   14002308a:	(bad)  
   14002308b:	outs   dx,BYTE PTR ds:[rsi]
   14002308c:	jno    0x1400230a7
   14002308e:	iret   
   14002308f:	push   rbx
   140023090:	adc    al,0xdb
   140023092:	or     ch,ah
   140023094:	cmp    bh,BYTE PTR [rax+0x3d]
   140023097:	mov    bh,0xdc
   140023099:	jns    0x1400230d2
   14002309b:	test   DWORD PTR [rdx+riz*2-0x1e699192],ecx
   1400230a2:	xor    eax,ebx
   1400230a4:	pushf  
   1400230a5:	cmp    eax,0xf3b18673
   1400230aa:	and    esi,DWORD PTR [rdx+rbp*8]
   1400230ad:	jne    0x140023051
   1400230af:	xchg   rbx,rax
   1400230b1:	leave  
   1400230b2:	leavew 
   1400230b4:	out    0xda,eax
   1400230b6:	push   rax
   1400230b7:	retf   0xa73
   1400230ba:	and    ch,BYTE PTR [rbx+rbx*1]
   1400230bd:	stos   DWORD PTR es:[rdi],eax
   1400230be:	stos   DWORD PTR es:[rdi],eax
   1400230bf:	ins    BYTE PTR es:[rdi],dx
   1400230c0:	scas   al,BYTE PTR es:[rdi]
   1400230c1:	scas   eax,DWORD PTR es:[rdi]
   1400230c2:	xor    esi,DWORD PTR [rsi]
   1400230c4:	jb     0x14002308c
   1400230c6:	sbb    DWORD PTR [rsi-0x505c122],edx
   1400230cc:	(bad)  
   1400230cd:	call   0xeda61ec0
   1400230d2:	movabs ds:0x9218368127477c9b,eax
   1400230db:	stc    
   1400230dc:	jle    0x140023082
   1400230de:	or     bl,BYTE PTR [rsi+0x4ac4c936]
   1400230e4:	popf   
   1400230e5:	xchg   esi,eax
   1400230e6:	and    edx,DWORD PTR [rbx-0x7cd24cf5]
   1400230ec:	ror    DWORD PTR [r10],cl
   1400230ef:	rex.XB sbb al,0xe3
   1400230f2:	(bad)  
   1400230f3:	xchg   BYTE PTR [rsi+0x24],cl
   1400230f6:	or     eax,0x424f4d47
   1400230fb:	adc    BYTE PTR [rdi+0x12],cl
   1400230fe:	xchg   BYTE PTR [rbx+rbx*8],dh
   140023101:	scas   eax,DWORD PTR es:[rdi]
   140023102:	xor    r12b,BYTE PTR [rsi-0x34]
   140023106:	xor    eax,0xcfbe7916
   14002310b:	jg     0x140023100
   14002310d:	(bad)  
   14002310e:	pop    rdi
   14002310f:	jrcxz  0x1400230f9
   140023111:	cmc    
   140023112:	xlat   BYTE PTR ds:[rbx]
   140023113:	xor    DWORD PTR [rax+0x2235c873],esi
   140023119:	imul   ebx,ebp,0x92b85234
   14002311f:	movabs al,ds:0x8d2e3cf43ecdc635
   140023128:	pop    QWORD PTR [rdi]
   14002312a:	jg     0x140023125
   14002312c:	setle  BYTE PTR [ebp-0x1e]
   140023131:	mov    cl,0xc7
   140023133:	iret   
   140023134:	ss fdivr st(0),st
   140023137:	mov    fs,WORD PTR [rbp+0x60]
   14002313a:	(bad)  
   14002313b:	and    ch,BYTE PTR [rsi]
   14002313d:	jnp    0x140023189
   14002313f:	(bad)  
   140023140:	push   0x6d
   140023142:	push   rdi
   140023143:	repnz mov esi,0x5187acd8
   140023149:	ret    
   14002314a:	cwde   
   14002314b:	sub    ebp,DWORD PTR [rax+0x64aa7fb9]
   140023151:	fild   DWORD PTR [rax]
   140023153:	ins    BYTE PTR es:[rdi],dx
   140023154:	xor    DWORD PTR [rcx-0x308228a6],esi
   14002315a:	ror    DWORD PTR [rsi],cl
   14002315c:	mov    edx,fs
   14002315e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002315f:	jmp    0x140023197
   140023161:	(bad)  
   140023162:	jo     0x1400230e4
   140023164:	jmp    0x140023175
   140023166:	jo     0x14002315f
   140023168:	xchg   ebx,eax
   140023169:	push   0xffffffffffffff9e
   14002316b:	mov    bl,BYTE PTR [rcx]
   14002316d:	jo     0x140023131
   14002316f:	rex.W mov bl,0xbc
   140023172:	mov    dl,0xc6
   140023174:	cld    
   140023175:	repnz or ah,BYTE PTR [rdi-0x32]
   140023179:	pop    rbx
   14002317a:	fimul  DWORD PTR [rbx+0x7bfa0645]
   140023180:	mov    ecx,0x79fbbee7
   140023185:	xlat   BYTE PTR ds:[rbx]
   140023186:	jnp    0x1400231a6
   140023188:	and    BYTE PTR [rax-0x2c],ch
   14002318b:	cdq    
   14002318c:	mov    eax,0xa5d4ce38
   140023191:	or     DWORD PTR [rsi],esp
   140023193:	(bad)  
   140023194:	(bad)  
   140023195:	xor    DWORD PTR [rip+0x56b54131],esi        # 0x196b772cc
   14002319b:	mov    eax,ecx
   14002319d:	xor    eax,DWORD PTR [rdx]
   14002319f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400231a0:	cmp    al,0xb2
   1400231a2:	sahf   
   1400231a3:	xchg   DWORD PTR [rdi-0x60c30e0f],edx
   1400231a9:	shl    dh,cl
   1400231ab:	(bad)  
   1400231ac:	sbb    ebp,DWORD PTR [rbx-0x55]
   1400231af:	jo     0x14002321f
   1400231b1:	test   BYTE PTR [rdx+0x5b],ah
   1400231b4:	cmp    ebx,DWORD PTR [rip+0x74741d9d]        # 0x1b4764f57
   1400231ba:	jbe    0x14002318d
   1400231bc:	cmp    esi,DWORD PTR [rax+0x48be4c93]
   1400231c2:	scas   al,BYTE PTR es:[rdi]
   1400231c3:	lods   eax,DWORD PTR ds:[rsi]
   1400231c4:	add    edx,DWORD PTR [rbx+rbx*4-0x5f7f97af]
   1400231cb:	push   rcx
   1400231cc:	(bad)  
   1400231cd:	(bad)  
   1400231ce:	cld    
   1400231cf:	adc    eax,0xca72d1b1
   1400231d4:	(bad)  
   1400231d5:	add    BYTE PTR [rdx+0x7487c25a],al
   1400231db:	jp     0x14002324e
   1400231dd:	shr    DWORD PTR [rbx-0x50],cl
   1400231e0:	(bad)
   1400231e4:	pop    fs
   1400231e6:	rex.WB sub rax,0xffffffff906e92d2
   1400231ec:	rex.WRB
   1400231ed:	movabs al,es:0xef7ddc72e5c8ebc4
   1400231f7:	fild   DWORD PTR [rax]
   1400231f9:	or     dl,al
   1400231fb:	nop
   1400231fc:	test   BYTE PTR [rax-0x1d80c6cc],dl
   140023202:	test   eax,0x6a450be4
   140023207:	xchg   ebp,eax
   140023208:	xor    bl,BYTE PTR [rdi-0x1]
   14002320b:	rcl    BYTE PTR [rdi-0x380bc06a],cl
   140023211:	jg     0x14002328f
   140023213:	push   0x64
   140023215:	je     0x14002328b
   140023217:	or     bl,al
   140023219:	mov    BYTE PTR [rcx],dil
   14002321c:	sub    esp,eax
   14002321e:	mov    ah,0xb5
   140023220:	div    BYTE PTR [rdx]
   140023222:	mov    BYTE PTR [rcx],bh
   140023224:	cdq    
   140023225:	leave  
   140023226:	lods   al,BYTE PTR ds:[rsi]
   140023227:	jns    0x14002328a
   140023229:	movabs ds:0x54a9fbde52740d56,eax
   140023232:	jle    0x14002320c
   140023234:	add    BYTE PTR ss:[rbx+0x4e],bl
   140023238:	test   BYTE PTR [rbx+rbp*8+0x5f7af440],dl
   14002323f:	mov    ecx,0x34531c94
   140023244:	pop    rbp
   140023245:	loopne 0x14002323b
   140023247:	sbb    ecx,DWORD PTR [rsi-0x29849935]
   14002324d:	sub    DWORD PTR [rbp-0x57],ebx
   140023250:	pop    rdx
   140023251:	movsxd edi,DWORD PTR gs:[rdx+rax*4-0x4f]
   140023256:	mov    edx,DWORD PTR [rbx+0x7a59b364]
   14002325c:	cmp    bh,BYTE PTR [rbx]
   14002325e:	call   0x11dd2043e
   140023263:	neg    DWORD PTR [rip+0xffffffffe82c1ee6]        # 0x1282e514f
   140023269:	mov    ch,cl
   14002326b:	int    0x75
   14002326d:	push   rsi
   14002326e:	(bad)  
   14002326f:	out    0x59,al
   140023271:	pop    rsp
   140023272:	pop    rdx
   140023273:	fs jb  0x1400232e8
   140023276:	xchg   edx,eax
   140023277:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140023278:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140023279:	and    eax,0x7280f5ea
   14002327e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002327f:	test   BYTE PTR [rax],ah
   140023281:	(bad)  
   140023282:	add    al,0x52
   140023284:	add    al,0x41
   140023286:	sar    ah,0xfc
   140023289:	sbb    al,0x8b
   14002328b:	or     ecx,DWORD PTR [rbx]
   14002328d:	rex.WR pop rsp
   14002328f:	sbb    BYTE PTR [rbx-0x2e2fd7b0],ah
   140023295:	(bad)  
   140023296:	rex.XB
   140023297:	rex.RXB push r15
   140023299:	(bad)  
   14002329a:	in     eax,dx
   14002329b:	pop    rbp
   14002329c:	cmp    eax,0xd0f57474
   1400232a1:	mov    edi,0xcbd98fa3
   1400232a6:	push   rbx
   1400232a7:	mov    cl,0x92
   1400232a9:	cmp    ecx,DWORD PTR [rcx+rax*2+0x6933a432]
   1400232b0:	push   0x4a
   1400232b2:	mov    esp,0x83ce718
   1400232b7:	(bad)  
   1400232b8:	xlat   BYTE PTR ds:[rbx]
   1400232b9:	mov    bh,0x64
   1400232bb:	jrcxz  0x14002330a
   1400232bd:	sar    BYTE PTR [rdx],cl
   1400232bf:	ins    BYTE PTR es:[rdi],dx
   1400232c0:	rex.WRB retf 0x9c0c
   1400232c4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400232c5:	adc    dl,BYTE PTR [rdx+0x215261ca]
   1400232cb:	adc    BYTE PTR [rax-0x73],ah
   1400232ce:	mov    ecx,0x99352882
   1400232d3:	cs xchg esp,eax
   1400232d5:	mov    esi,0x852e3628
   1400232da:	rex.X adc ecx,0x47c6e1e1
   1400232e1:	(bad)  
   1400232e2:	in     al,dx
   1400232e3:	shl    DWORD PTR [rbx-0x61],0x7f
   1400232e7:	repnz leave 
   1400232e9:	jae    0x14002332c
   1400232eb:	sbb    BYTE PTR [rsi],ch
   1400232ed:	or     ebp,DWORD PTR [rcx]
   1400232ef:	push   rsi
   1400232f0:	mov    al,0xcc
   1400232f2:	and    rax,0x67a47527
   1400232f8:	cld    
   1400232f9:	ins    BYTE PTR es:[rdi],dx
   1400232fa:	data16 rex.WB
   1400232fc:	rex.RXB xchg r12d,eax
   1400232fe:	mov    ah,0xf2
   140023300:	sbb    al,BYTE PTR [rcx-0x53]
   140023303:	mul    BYTE PTR [rbx+0x6b]
   140023306:	loopne 0x140023381
   140023308:	and    esp,DWORD PTR [rbp-0x25]
   14002330b:	add    BYTE PTR [rcx+rsi*1+0x31],ch
   14002330f:	mov    ah,0x1
   140023312:	push   rdi
   140023314:	cmp    ebp,DWORD PTR [rdx]
   140023316:	(bad)  
   140023317:	fsubr  QWORD PTR [rbp+0x22]
   14002331a:	loop   0x1400232ee
   14002331c:	(bad)  
   14002331d:	div    DWORD PTR [rax+riz*2]
   140023320:	icebp  
   140023321:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023322:	sbb    ebp,esi
   140023324:	and    DWORD PTR [rbp-0x1d3ca53e],edx
   14002332a:	retf   0xf30a
   14002332d:	retf   
   14002332e:	sub    ecx,DWORD PTR [rax+0x1]
   140023331:	(bad)  [rsi+rdx*4-0x4a]
   140023335:	(bad)  
   140023336:	sbb    ebx,DWORD PTR [rbp+0x767a45ed]
   14002333c:	(bad)  
   14002333d:	(bad)  
   14002333e:	xlat   BYTE PTR ds:[rbx]
   14002333f:	movabs eax,ds:0xb08253c48f79dca3
   140023348:	pop    rsi
   140023349:	movsxd ebp,DWORD PTR [rbp+0x7d]
   14002334c:	xchg   ebp,eax
   14002334d:	lea    esi,[rbp-0x68a869f3]
   140023353:	pop    rcx
   140023354:	pop    rbx
   140023355:	pop    rbx
   140023356:	movsxd edi,DWORD PTR [ebp-0x7d]
   14002335a:	xor    BYTE PTR [rax-0x60],ch
   14002335d:	lea    esp,[rcx]
   14002335f:	mov    bh,BYTE PTR [rcx]
   140023361:	div    BYTE PTR [rdi]
   140023363:	(bad)  
   140023364:	(bad)  
   140023365:	fstp   DWORD PTR [rdi+rbx*2+0x27]
   140023369:	or     dh,cl
   14002336b:	jno    0x140023369
   14002336d:	(bad)  
   14002336e:	sbb    edi,DWORD PTR [rcx-0x20]
   140023371:	(bad)  
   140023372:	ja     0x140023364
   140023374:	(bad)  
   140023375:	jmp    0x1020444d1
   14002337a:	sub    BYTE PTR [rsi+rbx*2+0x3c09c7ab],ah
   140023381:	xchg   ebx,eax
   140023382:	ret    0xdcfe
   140023385:	(bad)  
   140023386:	ins    BYTE PTR es:[rdi],dx
   140023387:	mov    cl,0x18
   140023389:	pop    rdx
   14002338a:	rol    DWORD PTR [rdx-0x77],1
   14002338d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002338e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002338f:	(bad)  
   140023390:	rex.X
   140023391:	rex.WXB movabs ds:0x7e23cf3a411c0af1,al
   14002339b:	test   DWORD PTR [rdx-0x4e],ecx
   14002339e:	mov    BYTE PTR [rbp+0x31a68688],ch
   1400233a4:	nop
   1400233a5:	shl    BYTE PTR [rcx],cl
   1400233a7:	sbb    edi,DWORD PTR [rdi]
   1400233a9:	cli    
   1400233aa:	jmp    0x1384062fe
   1400233af:	movabs eax,ds:0x7d76e138bf199c0f
   1400233b8:	cwde   
   1400233b9:	(bad)  
   1400233ba:	fisubr DWORD PTR [rcx]
   1400233bc:	imul   esp,ebp,0xffffff94
   1400233bf:	xor    eax,0x6e5c8166
   1400233c4:	and    eax,0xaead54b2
   1400233c9:	(bad)  
   1400233ca:	xchg   esp,eax
   1400233cb:	and    esi,0x49
   1400233ce:	jle    0x14002339a
   1400233d0:	fild   DWORD PTR gs:[rax]
   1400233d3:	ins    BYTE PTR es:[rdi],dx
   1400233d4:	xor    DWORD PTR [rcx],esi
   1400233d6:	rex.RX retf 
   1400233d8:	xchg   bp,ax
   1400233da:	cld    
   1400233db:	xchg   DWORD PTR [rbx+0x482b5bf4],edx
   1400233e1:	retf   
   1400233e2:	imul   ebp,DWORD PTR [rsi+0x4576e742],0xffffffdf
   1400233e9:	mov    esi,DWORD PTR [rdi+0x61]
   1400233ec:	sub    al,0x91
   1400233ee:	mov    ds,WORD PTR [rax+0x5d]
   1400233f1:	pop    rdi
   1400233f2:	movsxd esp,DWORD PTR [rbp+0x6d]
   1400233f5:	xor    eax,0xf3df1455
   1400233fa:	sbb    al,0xad
   1400233fc:	pop    rax
   1400233fd:	(bad)  
   1400233fe:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400233ff:	stos   DWORD PTR es:[rdi],eax
   140023400:	movabs ds:0x96bbec0cdd81ce9d,eax
   140023409:	mov    WORD PTR [rdi+0x183366c8],fs
   14002340f:	sbb    eax,0x2088a3a1
   140023414:	push   0x2a541020
   140023419:	adc    eax,0xa6f1b8c2
   14002341e:	mov    bh,0xb7
   140023420:	xchg   edi,eax
   140023421:	cdq    
   140023422:	mov    ecx,0x8a21725
   140023427:	sbb    BYTE PTR [r13-0x25ead56c],al
   14002342e:	or     bh,cl
   140023430:	je     0x140023429
   140023432:	rex.WRX push rdi
   140023434:	sbb    DWORD PTR [rbx-0x19],esi
   140023437:	and    eax,0x28497d5d
   14002343c:	xchg   ebx,eax
   14002343d:	mov    ah,0x35
   14002343f:	and    eax,0xaf9240e1
   140023444:	(bad)  
   140023445:	mov    cl,0x87
   140023447:	xchg   ebx,eax
   140023448:	(bad)  
   140023449:	mov    ?,WORD PTR [rax+0x5e]
   14002344c:	add    BYTE PTR [rax+0x6e3875b8],cl
   140023452:	sbb    al,0x4a
   140023454:	adc    cl,BYTE PTR [rsi+0x43df3c08]
   14002345a:	rol    r12,0xf8
   14002345e:	js     0x140023450
   140023460:	loopne 0x140023469
   140023462:	ds xor dh,dh
   140023465:	in     al,0x13
   140023467:	rex.WRXB pushf 
   140023469:	rcr    DWORD PTR [rdx-0x51],cl
   14002346c:	add    cl,BYTE PTR [rbx+0x42]
   14002346f:	enter  0x8b19,0x99
   140023473:	(bad)  
   140023474:	jb     0x14002342f
   140023476:	cwde   
   140023477:	cmc    
   140023478:	(bad)  
   140023479:	jmp    0x1400234bd
   14002347b:	xchg   ebp,eax
   14002347c:	imul   edx,esp,0x9039b6eb
   140023482:	jrcxz  0x1400234eb
   140023484:	rex.RX mov sil,0xd
   140023487:	rcl    BYTE PTR [rsi],0x93
   14002348a:	and    BYTE PTR [rdx],cl
   14002348c:	(bad)  
   14002348d:	mov    cl,0x44
   14002348f:	shr    ah,1
   140023491:	nop
   140023492:	sti    
   140023493:	(bad)  
   140023494:	rex.W mov bl,0xba
   140023497:	(bad)  
   140023498:	ja     0x140023452
   14002349a:	rex.WB jmp 0x16195b728
   1400234a0:	movabs al,ds:0x70e07b8b354a042
   1400234a9:	movabs al,ds:0x3d6d65635eb54875
   1400234b2:	and    esi,0x8c7d4c39
   1400234b8:	stos   DWORD PTR es:[rdi],eax
   1400234b9:	push   rdi
   1400234ba:	push   rdx
   1400234bb:	loope  0x1400234b8
   1400234bd:	or     ah,BYTE PTR [rbx+0x1d]
   1400234c0:	and    al,0x18
   1400234c2:	loope  0x14002344c
   1400234c4:	cmp    bh,ah
   1400234c6:	(bad)  
   1400234c7:	data16 fdivr QWORD PTR [rbp+rdi*4+0x21233094]
   1400234cf:	(bad)  
   1400234d1:	popf   
   1400234d2:	sub    ebx,DWORD PTR [rax+0x5d9207e0]
   1400234d8:	ds rex.WRX
   1400234da:	es mov dh,0xa2
   1400234dd:	add    dl,BYTE PTR [rbx]
   1400234df:	rex.WR xchg rax,rax
   1400234e1:	pop    rbx
   1400234e2:	cmp    DWORD PTR [rsi+0x12],edx
   1400234e5:	(bad)  
   1400234e6:	loope  0x14002355a
   1400234e8:	out    0x20,al
   1400234ea:	cmp    eax,0xd34e4d97
   1400234ef:	retf   0xe434
   1400234f2:	ret    0x5c86
   1400234f5:	rex.WXB movabs ss:0xc8fe5f1e4789e0d1,rax
   140023500:	cmp    DWORD PTR [rdi+0x7a],0xfffffff6
   140023504:	cld    
   140023505:	fadd   DWORD PTR [rbp+0x43588119]
   14002350b:	mov    BYTE PTR [rcx],bh
   14002350d:	(bad)  
   14002350e:	adc    ch,BYTE PTR [rbx-0x5a]
   140023511:	xor    bh,BYTE PTR [rsi+0x5eb5ab3f]
   140023517:	lods   eax,DWORD PTR ds:[rsi]
   140023518:	scas   rax,QWORD PTR es:[rdi]
   14002351a:	rex.X lods eax,DWORD PTR ds:[rsi]
   14002351c:	sbb    al,BYTE PTR [rcx]
   14002351e:	sar    DWORD PTR [rdi],1
   140023520:	cli    
   140023521:	ret    
   140023522:	dec    BYTE PTR [rcx]
   140023524:	retf   0x1b6
   140023527:	fsub   DWORD PTR [rdx-0xe]
   14002352a:	fsub   DWORD PTR [rdi]
   14002352c:	(bad)  
   14002352d:	jp     0x140023512
   14002352f:	ja     0x14002352f
   140023531:	std    
   140023532:	(bad)  
   140023533:	xor    al,0x52
   140023535:	enter  0xbdac,0x62
   140023539:	sti    
   14002353a:	cld    
   14002353b:	xchg   ecx,eax
   14002353c:	mov    BYTE PTR [rsi+rax*8-0x62],r12b
   140023541:	or     bl,BYTE PTR [r9-0x2ea2f3ca]
   140023548:	pop    rbp
   140023549:	(bad)  
   14002354a:	and    al,0x9e
   14002354c:	xchg   esp,eax
   14002354d:	js     0x140023568
   14002354f:	jmp    0x14254a724
   140023554:	xchg   edx,eax
   140023555:	cwde   
   140023556:	rcr    BYTE PTR [rsi-0xa55e4b8],cl
   14002355c:	sub    BYTE PTR [rsi+0x2f4c710d],dh
   140023562:	or     QWORD PTR [r9+0x65],rax
   140023566:	(bad)  
   140023567:	sbb    BYTE PTR [rcx+rbp*2+0x62631ede],dh
   14002356e:	push   rax
   14002356f:	iret   
   140023570:	adc    eax,0x372e297
   140023575:	mov    BYTE PTR [rbx+r8*1+0x6d0421c4],r8b
   14002357d:	mov    dl,0xff
   14002357f:	mov    edx,esp
   140023581:	test   DWORD PTR [rdi+0x68],0xb8b0adc3
   140023588:	sub    DWORD PTR [rdx+0x49],esp
   14002358b:	jbe    0x14002356c
   14002358d:	in     eax,dx
   14002358e:	cld    
   14002358f:	jmp    0xf916662c
   140023594:	rex.X sahf 
   140023596:	mov    cl,0x91
   140023598:	xchg   ecx,eax
   140023599:	loopne 0x14002355a
   14002359b:	cld    
   14002359c:	(bad)
   14002359f:	jle    0x14002359b
   1400235a1:	xchg   ebx,eax
   1400235a2:	lahf   
   1400235a3:	sbb    al,0xd1
   1400235a5:	(bad)  
   1400235a6:	sub    al,0xb
   1400235a8:	and    DWORD PTR [rsi-0x4f],edx
   1400235ab:	jbe    0x140023607
   1400235ad:	pop    rax
   1400235ae:	and    bl,BYTE PTR cs:[rax-0x76d2adaa]
   1400235b5:	pop    rsp
   1400235b6:	(bad)  
   1400235b7:	rex.XB push r15
   1400235b9:	retf   
   1400235ba:	cmc    
   1400235bb:	pop    rax
   1400235bc:	stc    
   1400235bd:	jg     0x140023625
   1400235bf:	fild   DWORD PTR gs:[rax]
   1400235c2:	ins    BYTE PTR es:[rdi],dx
   1400235c3:	rex.WRB xchg r9,rax
   1400235c5:	xchg   esi,eax
   1400235c6:	add    al,0xb4
   1400235c8:	xchg   edx,eax
   1400235c9:	nop
   1400235ca:	outs   dx,DWORD PTR ds:[rsi]
   1400235cb:	mov    esi,0xb46c9231
   1400235d0:	(bad)  
   1400235d1:	mov    eax,0xb697b19
   1400235d6:	scas   al,BYTE PTR es:[rdi]
   1400235d7:	push   rsp
   1400235d8:	or     BYTE PTR [rcx+rbx*1],ch
   1400235db:	fbld   TBYTE PTR [rbx]
   1400235dd:	fwait
   1400235de:	int    0x90
   1400235e0:	cmc    
   1400235e1:	jge    0x1400235f3
   1400235e3:	adc    dl,BYTE PTR [rip+0x1e3ad6bb]        # 0x15e3d0ca4
   1400235e9:	push   rax
   1400235ea:	sbb    ch,BYTE PTR [rcx-0x29]
   1400235ed:	cmp    eax,0x47269917
   1400235f2:	sahf   
   1400235f3:	movabs ds:0x4d8c604e6b2452f3,eax
   1400235fc:	pushf  
   1400235fd:	adc    BYTE PTR [rbx+0x7e],0x29
   140023601:	sbb    al,0x94
   140023603:	rex.RXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140023605:	xchg   BYTE PTR [rip+0xfffffffff748dd26],ch        # 0x1374b1331
   14002360b:	not    dh
   14002360d:	in     al,dx
   14002360e:	cmp    eax,0x61a4bdfc
   140023613:	retf   
   140023614:	add    eax,0xd880d8a4
   140023619:	pop    rbp
   14002361a:	lock cmp al,0xf
   14002361d:	lods   eax,DWORD PTR ds:[rsi]
   14002361e:	sub    eax,0xe3fc7f0f
   140023623:	sub    edi,DWORD PTR [rdi-0x2]
   140023626:	loopne 0x1400235ab
   140023628:	and    edx,DWORD PTR [rdi]
   14002362a:	mov    bh,0x67
   14002362d:	adc    BYTE PTR [rip+0xffffffffa6167304],0x10        # 0xe618a938
   140023634:	(bad)
   140023639:	sbb    ecx,DWORD PTR [rdi-0x53]
   14002363c:	test   ebp,edx
   14002363e:	pop    rdx
   14002363f:	xor    eax,0xcc4394aa
   140023644:	rex.WRXB (bad) 
   140023646:	test   al,0xe7
   140023648:	(bad)  
   140023649:	and    ebx,ebx
   14002364b:	(bad)  
   14002364c:	(bad)  
   14002364d:	or     ecx,DWORD PTR [rdx-0x7462b6cb]
   140023653:	stos   DWORD PTR es:[rdi],eax
   140023654:	adc    al,0xe2
   140023656:	lea    edi,[rsi-0x5d]
   140023659:	(bad)  
   14002365a:	pop    QWORD PTR [rsi+0x58]
   14002365d:	rex.XB
   14002365e:	ss fwait
   140023660:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140023661:	lods   eax,DWORD PTR ds:[rsi]
   140023662:	cwde   
   140023663:	(bad)  
   140023664:	iret   
   140023665:	sub    BYTE PTR fs:[rdi-0x49414f91],ch
   14002366c:	rex.WR pop rax
   14002366e:	imul   esp,DWORD PTR [rax],0x62
   140023671:	push   rsp
   140023672:	movabs eax,ds:0xca833f48784225f4
   14002367b:	adc    DWORD PTR fs:[rsi+0x6],ebx
   14002367f:	adc    esi,edi
   140023681:	shl    DWORD PTR [rdi],1
   140023683:	mov    edi,0xd85dda64
   140023688:	(bad)  
   140023689:	sub    al,0x1b
   14002368b:	and    edi,DWORD PTR [rsp+rbp*2+0x2b]
   14002368f:	sbb    BYTE PTR [rax],cl
   140023691:	loop   0x1400236f1
   140023693:	(bad)  
   140023694:	fs jg  0x1400236ae
   140023697:	test   eax,0xdd5adfeb
   14002369c:	push   0xffffffffb7704ded
   1400236a1:	sub    eax,0x4f058461
   1400236a6:	sub    DWORD PTR [rdi+riz*8+0x3e763e31],esp
   1400236ad:	cli    
   1400236ae:	enter  0xfe87,0xf4
   1400236b2:	loop   0x1400236c7
   1400236b4:	(bad)  
   1400236b5:	(bad)  
   1400236b6:	jle    0x1400236d9
   1400236b8:	or     al,0xc3
   1400236ba:	adc    eax,0x71085160
   1400236bf:	fstp   DWORD PTR [rdx+0x7b]
   1400236c2:	rex.WB sub sil,BYTE PTR [r9]
   1400236c5:	and    eax,0xa90d8b2c
   1400236ca:	ss ins DWORD PTR es:[rdi],dx
   1400236cc:	and    ebp,DWORD PTR [rax-0x1539529d]
   1400236d2:	lahf   
   1400236d3:	test   eax,0x64f5ff58
   1400236d8:	fild   DWORD PTR [rax]
   1400236da:	ins    BYTE PTR es:[rdi],dx
   1400236db:	sub    DWORD PTR [r13-0x36],edx
   1400236df:	fild   QWORD PTR [rax-0x11]
   1400236e2:	in     al,dx
   1400236e3:	and    BYTE PTR ds:[rbp-0x6f2c2275],dh
   1400236ea:	sbb    edx,edx
   1400236ec:	mov    eax,0x7637da5a
   1400236f1:	jrcxz  0x1400236e5
   1400236f3:	xchg   esp,eax
   1400236f4:	rex.RXB xor DWORD PTR [r15+0x1c982243],r11d
   1400236fb:	mov    ebx,0x3ce2cac0
   140023700:	sahf   
   140023701:	repnz enter 0xb366,0xe4
   140023706:	bnd jns 0x140023735
   140023709:	(bad)  
   14002370a:	(bad)
   14002370d:	(bad)  
   14002370e:	rex.WX stos QWORD PTR es:[rdi],rax
   140023710:	fs std 
   140023712:	or     al,0x7d
   140023714:	jge    0x140023719
   140023716:	in     al,0xba
   140023718:	mov    ebx,0x10f47429
   14002371d:	rex.RB push r9
   14002371f:	jae    0x140023718
   140023721:	outs   dx,DWORD PTR ds:[rsi]
   140023722:	jno    0x140023717
   140023724:	pop    rbx
   140023725:	mov    esp,0xf09e207d
   14002372a:	sub    edx,DWORD PTR [rbx]
   14002372c:	(bad)  
   14002372e:	ror    DWORD PTR [rdi+rsi*8+0x22978563],1
   140023735:	(bad)  
   140023736:	or     al,0x16
   140023738:	imul   rax,QWORD PTR [r9+0x1a],0xffffffffffffffe7
   14002373d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002373e:	jrcxz  0x1400236fa
   140023740:	pop    rdx
   140023741:	rex.WRX cqo 
   140023743:	sub    eax,0xcb94a814
   140023748:	cmp    al,0xf5
   14002374a:	lock ret 
   14002374c:	stos   DWORD PTR es:[rdi],eax
   14002374d:	(bad)  
   14002374e:	(bad)  
   14002374f:	loopne 0x140023758
   140023751:	(bad)  
   140023752:	rex.WRB
   140023753:	rex.WR pop rsp
   140023755:	(bad)  
   140023756:	rex.RX mov al,0x8a
   140023759:	fs (bad) 
   14002375b:	ret    
   14002375c:	and    al,0x42
   14002375e:	rex.WR sub r13b,spl
   140023761:	ins    BYTE PTR es:[rdi],dx
   140023762:	scas   al,BYTE PTR es:[rdi]
   140023763:	mov    ebx,0xb9bab967
   140023768:	pop    rcx
   140023769:	mov    bl,0xb5
   14002376b:	(bad)  
   14002376c:	rex.WRXB jge 0x1400237cc
   14002376f:	inc    DWORD PTR [rdi-0x4ffc926b]
   140023775:	cmc    
   140023776:	rex.R jl 0x140023770
   140023779:	cdq    
   14002377a:	scas   eax,DWORD PTR es:[rdi]
   14002377b:	std    
   14002377c:	(bad)  
   14002377d:	(bad)  
   14002377e:	out    dx,al
   14002377f:	ja     0x140023800
   140023781:	outs   dx,DWORD PTR ds:[rsi]
   140023782:	iret   
   140023783:	mov    cx,0xeefe
   140023787:	xor    BYTE PTR [rdx],dh
   140023789:	js     0x1400237bf
   14002378b:	push   rcx
   14002378c:	jbe    0x14002375b
   14002378e:	scas   al,BYTE PTR es:[rdi]
   14002378f:	mov    esp,0x1ffd6e16
   140023794:	push   rcx
   140023795:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023796:	adc    BYTE PTR [rax-0x42],bh
   140023799:	ret    0xf8cf
   14002379c:	rex.WR pushf 
   14002379e:	(bad)  
   14002379f:	movsxd edi,DWORD PTR [rsi+0x66]
   1400237a2:	(bad)  
   1400237a3:	rex.X
   1400237a4:	xchg   DWORD PTR cs:[rdx+0x1e],edx
   1400237a8:	sahf   
   1400237a9:	out    0xe1,eax
   1400237ab:	sub    ecx,ecx
   1400237ad:	(bad)  
   1400237af:	rex.WR jmp QWORD PTR gs:[rbx+rdi*2]
   1400237b4:	fisub  WORD PTR [rdx]
   1400237b6:	imul   edx,DWORD PTR [rsp+rbp*1-0x1714dc75],0xf7b22f9
   1400237c1:	sbb    eax,0xefbbada5
   1400237c6:	or     ah,BYTE PTR [rax+riz*4]
   1400237c9:	xchg   ebx,eax
   1400237ca:	mov    eax,0x781c292c
   1400237cf:	sub    DWORD PTR [rsi-0xa],eax
   1400237d2:	mov    eax,0x78338c0b
   1400237d7:	lods   eax,DWORD PTR ds:[rsi]
   1400237d8:	pop    rsp
   1400237d9:	dec    DWORD PTR [rsi+0x9e9affb]
   1400237df:	and    al,0xae
   1400237e1:	jge    0x14002378e
   1400237e3:	push   rdi
   1400237e4:	nop
   1400237e5:	push   rax
   1400237e6:	test   BYTE PTR [rcx],al
   1400237e8:	fs mov bl,0x39
   1400237eb:	(bad)  
   1400237ec:	(bad)  
   1400237ed:	sahf   
   1400237ee:	lea    edi,[rsi]
   1400237f0:	clc    
   1400237f1:	(bad)  
   1400237f2:	(bad)  
   1400237f3:	out    dx,eax
   1400237f4:	(bad)
   1400237f7:	idiv   DWORD PTR [rcx+0x25eb48f1]
   1400237fd:	test   BYTE PTR [rax+0x4],bl
   140023800:	es add eax,0x4cc492e2
   140023806:	(bad)  
   140023807:	mov    bh,cl
   140023809:	test   DWORD PTR [rdx-0x53],edi
   14002380c:	mov    cl,0x59
   14002380e:	stos   DWORD PTR es:[rdi],eax
   14002380f:	(bad)  
   140023810:	add    bl,BYTE PTR [rbx]
   140023812:	add    al,0x3f
   140023814:	adc    esi,DWORD PTR [rbp-0x3]
   140023817:	(bad)  
   140023818:	push   rsi
   140023819:	mov    dh,0xd
   14002381b:	rcl    dh,0x13
   14002381e:	cmp    edi,DWORD PTR [rsi+0x7e]
   140023821:	je     0x1400237f5
   140023823:	(bad)  
   140023824:	rex.WXB (bad) 
   140023826:	jmp    0x140023878
   140023828:	out    dx,eax
   140023829:	mov    ss,ebp
   14002382b:	rex.RX push 0xffffffffa20d55de
   140023831:	fisub  WORD PTR [rax+0x6913a611]
   140023837:	pop    rdx
   140023838:	(bad)  
   140023839:	jmp    QWORD PTR [rbp+rbx*1-0x2ceef7a9]
   140023840:	ins    BYTE PTR es:[rdi],dx
   140023841:	jmp    0x15fe8d4f1
   140023846:	rex.WR xchg rsp,rax
   140023848:	push   rax
   140023849:	add    al,0x8d
   14002384b:	(bad)  
   14002384c:	rex.WXB or rsi,QWORD PTR [r11+0x32e79e78]
   140023853:	hlt    
   140023854:	rex.X loopne 0x140023852
   140023857:	imul   ecx,DWORD PTR ds:[rbx+0x1b],0xffffffb0
   14002385c:	jae    0x1400237f0
   14002385e:	mov    ebx,0xdd9db37f
   140023863:	jnp    0x14002385f
   140023865:	enter  0x7699,0xbe
   140023869:	cli    
   14002386a:	in     eax,0x53
   14002386c:	pushf  
   14002386d:	cli    
   14002386e:	in     al,0x3a
   140023870:	ror    DWORD PTR [rax-0x38],0x8d
   140023874:	ja     0x140023834
   140023876:	or     eax,0xf964fca9
   14002387b:	icebp  
   14002387c:	outs   dx,DWORD PTR ds:[rsi]
   14002387d:	xchg   ecx,eax
   14002387e:	jbe    0x140023870
   140023880:	pop    rcx
   140023881:	adc    eax,ebx
   140023883:	jbe    0x1400238e0
   140023885:	sar    DWORD PTR [rdi-0x4c],1
   140023888:	sbb    cl,BYTE PTR [rbx-0x452ff0c8]
   14002388e:	jmp    0x140023837
   140023890:	xlat   BYTE PTR ds:[rbx]
   140023891:	in     eax,0x9e
   140023893:	mov    bl,0xc6
   140023895:	jne    0x1400238aa
   140023897:	sub    cl,bh
   140023899:	and    ecx,DWORD PTR [rbx+rax*2]
   14002389c:	ds repz (bad) 
   14002389f:	jge    0x14002391d
   1400238a1:	cmc    
   1400238a2:	and    ecx,DWORD PTR [rdi]
   1400238a4:	ds js  0x1400238a5
   1400238a7:	ret    0xf8f8
   1400238aa:	adc    al,0xb0
   1400238ac:	and    al,BYTE PTR [rbp+0x9963598]
   1400238b2:	test   DWORD PTR [rbp-0x68677b5c],edi
   1400238b8:	mov    ecx,0x32a06adc
   1400238bd:	(bad)  
   1400238be:	push   rax
   1400238bf:	push   rdi
   1400238c0:	rex.XB stos BYTE PTR es:[rdi],al
   1400238c2:	xchg   ebp,eax
   1400238c3:	sub    eax,0x96bfeee1
   1400238c8:	ins    BYTE PTR es:[rdi],dx
   1400238c9:	sbb    eax,DWORD PTR [rax+0x3ff229ad]
   1400238cf:	cld    
   1400238d0:	(bad)  
   1400238d1:	fistp  QWORD PTR [rdi-0x4f]
   1400238d4:	stos   DWORD PTR es:[rdi],eax
   1400238d5:	mov    ebp,0xf3dcdfed
   1400238da:	(bad)  
   1400238db:	mov    bh,0xed
   1400238dd:	fstp   TBYTE PTR [rbx-0x33]
   1400238e0:	xor    DWORD PTR [rdi+0x74],0xa7f8ee74
   1400238e7:	(bad)
   1400238ea:	sbb    edi,DWORD PTR [rip+0xffffffffa528333f]        # 0xe52a6c2f
   1400238f0:	push   rdx
   1400238f1:	or     DWORD PTR [rdi-0x80],ebp
   1400238f4:	ins    DWORD PTR es:[rdi],dx
   1400238f5:	(bad)  
   1400238f6:	jrcxz  0x1400238db
   1400238f8:	xlat   BYTE PTR ss:[rbx]
   1400238fa:	je     0x1400238e8
   1400238fc:	xlat   BYTE PTR ds:[rbx]
   1400238fd:	setae  BYTE PTR [rdi]
   140023900:	adc    BYTE PTR [rcx+0x1f],dh
   140023903:	(bad)  
   140023904:	rex.WRB push 0x5f765cc4
   14002390a:	and    BYTE PTR [rcx],cl
   14002390c:	fs cdq 
   14002390e:	movabs eax,ds:0xd71434c596df201b
   140023917:	(bad)  
   140023918:	(bad)  
   140023919:	mov    dl,0x70
   14002391b:	ins    BYTE PTR es:[rdi],dx
   14002391c:	lea    ecx,[rcx+0x7d59a7a3]
   140023922:	(bad)  
   140023923:	xchg   ebx,eax
   140023924:	cmc    
   140023925:	(bad)  
   140023926:	and    eax,0x60f7077a
   14002392b:	je     0x140023901
   14002392d:	jp     0x1400238e9
   14002392f:	xor    al,0x51
   140023931:	xchg   edi,eax
   140023932:	(bad)  
   140023933:	(bad)  
   140023934:	mov    ecx,0x28af2dfa
   140023939:	stc    
   14002393a:	xor    eax,0x12c9bf95
   14002393f:	(bad)  
   140023940:	sub    al,0x53
   140023942:	jp     0x140023902
   140023944:	(bad)  
   140023945:	repnz adc al,0x13
   140023948:	movsxd esp,DWORD PTR [rbx-0x2f]
   14002394b:	sbb    DWORD PTR [rdi],0xfffffffc
   14002394e:	shl    ah,0x63
   140023951:	(bad)  
   140023952:	cmp    eax,0xc20c2e76
   140023957:	gs and esp,eax
   14002395a:	sbb    al,0x82
   14002395c:	sub    DWORD PTR [rax],edx
   14002395e:	xchg   edi,eax
   14002395f:	add    al,0x76
   140023961:	mov    edx,0xd82e2c58
   140023966:	rex xchg esi,eax
   140023968:	rex.WXB cmc 
   14002396a:	push   rdx
   14002396b:	cmp    DWORD PTR [rdx-0x3],0xffffffa7
   14002396f:	(bad)  
   140023970:	ret    
   140023971:	inc    DWORD PTR [rsi-0x37]
   140023974:	mov    dh,0x1
   140023976:	fcomp  DWORD PTR [rdx+0x62318c62]
   14002397c:	jne    0x1400239e1
   14002397e:	xor    edi,eax
   140023980:	in     al,dx
   140023981:	(bad)  
   140023982:	mov    edi,0xf0a22e34
   140023987:	xchg   edx,eax
   140023988:	(bad)  
   140023989:	(bad)  
   14002398a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002398b:	out    dx,al
   14002398c:	mov    eax,0x6dbceeb
   140023991:	(bad)  
   140023992:	xchg   dh,ch
   140023994:	mov    esi,0xdf9b86ee
   140023999:	fstp   st(1)
   14002399b:	fnsave [rdi+0x24]
   14002399e:	xchg   edi,eax
   14002399f:	sub    ebp,esp
   1400239a1:	or     bl,al
   1400239a3:	add    BYTE PTR [rbp-0x73],ch
   1400239a6:	jrcxz  0x140023980
   1400239a8:	outs   dx,DWORD PTR ds:[rsi]
   1400239a9:	adc    DWORD PTR [rcx],edx
   1400239ab:	xlat   BYTE PTR ds:[rbx]
   1400239ac:	fistp  WORD PTR [rbx-0x3e008ded]
   1400239b2:	(bad)  
   1400239b3:	and    al,0xdf
   1400239b5:	(bad)  
   1400239b6:	rex.WRX and rdi,r11
   1400239b9:	rex.RX movabs ds:0xd66458d645414951,eax
   1400239c3:	and    BYTE PTR [rdx],dh
   1400239c5:	xchg   BYTE PTR [rax-0x5253a65a],dh
   1400239cb:	jb     0x14002395f
   1400239cd:	outs   dx,DWORD PTR ds:[rsi]
   1400239ce:	mov    bl,0xde
   1400239d0:	fsub   DWORD PTR [rax]
   1400239d2:	rcr    DWORD PTR [rip+0xffffffffaa023411],cl        # 0xea046de9
   1400239d8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400239d9:	rex.WRB sbb BYTE PTR [r9+riz*4+0x42bbd2c8],r9b
   1400239e1:	in     eax,0x62
   1400239e3:	mov    al,0x6f
   1400239e5:	mov    esp,0xf857d7a6
   1400239ea:	(bad)  
   1400239eb:	(bad)  
   1400239ec:	scas   al,BYTE PTR es:[rdi]
   1400239ed:	and    BYTE PTR ds:[rbx+0x110512cd],bl
   1400239f4:	rex.WRXB
   1400239f5:	ds hlt 
   1400239f7:	lock cli 
   1400239f9:	xchg   DWORD PTR [rdi],edi
   1400239fb:	clc    
   1400239fc:	xor    DWORD PTR [rbx-0x5d],0x25dcee7
   140023a03:	push   rsi
   140023a04:	add    al,0x4c
   140023a06:	pop    rbx
   140023a07:	imul   ebp,DWORD PTR [rdi],0x61
   140023a0a:	cdq    
   140023a0b:	int3   
   140023a0c:	in     eax,0xb3
   140023a0e:	mov    bl,0x51
   140023a10:	and    ebx,esp
   140023a12:	sub    BYTE PTR [rbx-0x51],cl
   140023a15:	(bad)
   140023a1a:	mov    ebx,0xdb65a5b
   140023a1f:	rcl    dh,0x15
   140023a22:	or     eax,DWORD PTR [rsp+rax*2-0x5f]
   140023a26:	int3   
   140023a27:	xor    esi,DWORD PTR gs:[rsi]
   140023a2a:	rcr    BYTE PTR [rdx-0x620c41e9],1
   140023a30:	out    0x43,eax
   140023a32:	js     0x1400239dd
   140023a34:	out    dx,eax
   140023a35:	cdq    
   140023a36:	addr32 (bad) 
   140023a38:	in     eax,dx
   140023a39:	(bad)  
   140023a3a:	sbb    al,0xbc
   140023a3c:	(bad)  
   140023a3d:	fcmovb st,st(3)
   140023a3f:	rex.RXB fidiv WORD PTR [r10-0x3]
   140023a43:	mov    cl,0x9b
   140023a45:	out    dx,al
   140023a46:	out    dx,al
   140023a47:	call   0x16946ac28
   140023a4c:	(bad)  
   140023a4d:	(bad)  
   140023a4e:	or     al,0x58
   140023a50:	adc    edi,DWORD PTR [rdx]
   140023a52:	mov    bh,0x5b
   140023a54:	fdivr  DWORD PTR [rax-0x35332112]
   140023a5a:	rex.XB xor edi,r14d
   140023a5d:	(bad)  
   140023a5e:	rcr    BYTE PTR [rdx+rax*4],cl
   140023a61:	mov    ch,0x38
   140023a63:	inc    BYTE PTR [rax-0x53]
   140023a66:	fnstenv [rdi-0x13]
   140023a69:	jle    0x140023a99
   140023a6b:	mov    WORD PTR [rsi-0x88e3a00],cs
   140023a71:	or     DWORD PTR [rbp+0x58],ecx
   140023a74:	xchg   edx,eax
   140023a75:	sub    al,0x4f
   140023a77:	(bad)  
   140023a78:	sbb    DWORD PTR [rdx+0x1e5281b6],edi
   140023a7e:	mov    bl,0xe3
   140023a80:	stos   DWORD PTR es:[rdi],eax
   140023a81:	sub    al,0x2e
   140023a83:	xchg   esp,eax
   140023a84:	or     DWORD PTR [rbx+0x4b5fdf31],ebp
   140023a8a:	jb     0x140023aba
   140023a8c:	mov    ebx,ebp
   140023a8e:	fwait
   140023a8f:	lods   eax,DWORD PTR ds:[rsi]
   140023a90:	int3   
   140023a91:	and    bl,BYTE PTR [rsi]
   140023a93:	rex.WX push 0x5f
   140023a96:	jae    0x140023ac3
   140023a98:	(bad)  
   140023a99:	jle    0x140023a54
   140023a9b:	and    QWORD PTR [rip+0xffffffff918e6cd9],r12        # 0xd190a77b
   140023aa2:	shr    DWORD PTR [rdi-0x7404e07a],cl
   140023aa8:	(bad)  
   140023aa9:	rex.WRX
   140023aaa:	ds dec al
   140023aad:	movsxd esp,edi
   140023aaf:	(bad)  
   140023ab0:	movsxd eax,DWORD PTR [r14]
   140023ab3:	cwde   
   140023ab4:	(bad)  
   140023ab5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140023ab6:	sub    al,0x4c
   140023ab8:	stc    
   140023ab9:	mov    esi,0x25606d3f
   140023abe:	(bad)  
   140023abf:	mov    esp,ebp
   140023ac1:	xchg   edx,eax
   140023ac2:	pop    rbp
   140023ac3:	or     eax,0xc446e6cc
   140023ac8:	sbb    eax,DWORD PTR [rip+0x1019f89c]        # 0x1501c336a
   140023ace:	cmc    
   140023acf:	xchg   ebx,eax
   140023ad0:	pop    rsi
   140023ad1:	shl    BYTE PTR [rsi+0x46c5d8fc],0x5a
   140023ad8:	pop    rbx
   140023ad9:	sub    al,0x5a
   140023adb:	imul   rsi,QWORD PTR [rbx-0x62],0xffffffffae5ca364
   140023ae3:	cs sub eax,0x9d8f4c2e
   140023ae9:	sbb    ebx,DWORD PTR [rcx]
   140023aeb:	jle    0x140023ae6
   140023aed:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140023aee:	xchg   ebx,eax
   140023aef:	fistp  QWORD PTR [rbx-0x7]
   140023af2:	(bad)
   140023af5:	icebp  
   140023af6:	jge    0x140023b31
   140023af8:	addr32 jne 0x140023b53
   140023afb:	(bad)  
   140023afc:	adc    al,0x3b
   140023afe:	(bad)  
   140023aff:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023b00:	push   rdx
   140023b01:	(bad)  
   140023b02:	push   rdx
   140023b03:	xchg   edx,eax
   140023b04:	mov    ds,edi
   140023b06:	mov    edx,0xa0989caa
   140023b0b:	push   0xffffffffdd3ec39b
   140023b10:	(bad)  
   140023b11:	sub    DWORD PTR [rip+0x489d9d1d],eax        # 0x1889fd834
   140023b17:	in     eax,0x51
   140023b19:	ficomp DWORD PTR [rax+0x7]
   140023b1c:	add    DWORD PTR [rsi+0x2cb22892],ebx
   140023b22:	int3   
   140023b23:	(bad)  
   140023b24:	(bad)  
   140023b25:	fisttp DWORD PTR [rdx+0x20]
   140023b28:	movabs al,ds:0x61e58366716751b4
   140023b31:	or     BYTE PTR [rdi],dh
   140023b33:	or     ebp,esp
   140023b35:	(bad)  
   140023b36:	je     0x140023b75
   140023b38:	fld    DWORD PTR [rdx+0x1b]
   140023b3b:	pop    rax
   140023b3c:	rex.WXB movabs r9,0xee2a4a3cc2e2c9b4
   140023b46:	mov    eax,0xb97226f5
   140023b4b:	sbb    al,0x91
   140023b4d:	xor    esp,esi
   140023b4f:	hlt    
   140023b50:	neg    BYTE PTR [rsi+0x31]
   140023b53:	rex.WRX cld 
   140023b55:	mov    dh,BYTE PTR [rbp+0x10b7f55c]
   140023b5b:	add    cl,bh
   140023b5d:	repz xor esi,eax
   140023b60:	lock mov ecx,0xf8d91f47
   140023b66:	rex.WRXB movabs r15,0x67b3ccfb3d2ffbff
   140023b70:	and    ebp,DWORD PTR [rbp+0x1c6084a7]
   140023b76:	cmp    BYTE PTR [rdi+0x76b1e794],al
   140023b7c:	retf   0xbe6
   140023b7f:	rex.WXB
   140023b80:	ss mov cl,dl
   140023b83:	lea    eax,[rsi+0x3d]
   140023b86:	rcl    BYTE PTR [rdi-0x45],1
   140023b89:	rex.B outs dx,DWORD PTR ds:[rsi]
   140023b8b:	add    bl,cl
   140023b8d:	test   BYTE PTR [rax],0xde
   140023b90:	sbb    al,0x62
   140023b92:	lods   al,BYTE PTR ds:[rsi]
   140023b93:	mov    ch,0x44
   140023b95:	(bad)  
   140023b96:	fcmove st,st(0)
   140023b98:	movabs al,ds:0x4512babb223b3d33
   140023ba1:	(bad)  
   140023ba2:	(bad)  
   140023ba3:	repnz out 0x66,al
   140023ba6:	lods   eax,DWORD PTR ds:[rsi]
   140023ba7:	push   rsp
   140023ba8:	sub    cl,ch
   140023baa:	cmp    eax,0x9c4fe9fc
   140023baf:	idiv   DWORD PTR [rdi+rbp*4-0x3]
   140023bb3:	sar    dh,0x83
   140023bb6:	sti    
   140023bb7:	neg    BYTE PTR [rdi]
   140023bb9:	cmp    bh,BYTE PTR [rbx+rbx*8-0x22]
   140023bbd:	std    
   140023bbe:	xchg   esi,ebp
   140023bc0:	fidiv  DWORD PTR [rcx]
   140023bc2:	cmp    BYTE PTR [rax-0x149068d1],bh
   140023bc8:	adc    cl,dl
   140023bca:	xchg   ebx,eax
   140023bcb:	pop    rax
   140023bcc:	shl    BYTE PTR [rsi],1
   140023bce:	push   0x9
   140023bd0:	or     DWORD PTR [rsi-0x29ce4994],ebp
   140023bd6:	push   rax
   140023bd7:	outs   dx,DWORD PTR ds:[rsi]
   140023bd8:	xor    al,0xf0
   140023bda:	cmp    al,0xc5
   140023bdc:	scas   al,BYTE PTR es:[rdi]
   140023bdd:	cmp    eax,0xb365c9bb
   140023be2:	int3   
   140023be3:	iret   
   140023be4:	rex.WR ror QWORD PTR [rax],cl
   140023be7:	add    esi,DWORD PTR [rdx-0x7b]
   140023bea:	cmp    al,0x85
   140023bec:	sar    BYTE PTR [rsi+0x46],cl
   140023bef:	mov    esi,0xfefb4c30
   140023bf4:	cmp    DWORD PTR [rdx+rax*4+0x6d64bcf2],eax
   140023bfb:	xor    al,0xcb
   140023bfd:	inc    BYTE PTR [rbx-0x222e2f29]
   140023c03:	xchg   ecx,edx
   140023c05:	cmp    bh,BYTE PTR [rip+0x4fa99259]        # 0x18fabce64
   140023c0b:	fadd   DWORD PTR [rsi+0x7795dc45]
   140023c11:	add    eax,0x4475f93e
   140023c16:	sub    cl,BYTE PTR [rdi]
   140023c18:	and    eax,0xa3a36325
   140023c1d:	rol    DWORD PTR [rdi+0x3f],1
   140023c20:	cld    
   140023c21:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140023c22:	xchg   edi,eax
   140023c23:	sahf   
   140023c24:	jl     0x140023c22
   140023c26:	leave  
   140023c27:	loope  0x140023ca3
   140023c29:	rcr    BYTE PTR [rax+0x62cc5215],1
   140023c2f:	cwde   
   140023c30:	adc    cl,BYTE PTR [rax+0x7eb30449]
   140023c36:	mov    cl,0x63
   140023c38:	xor    eax,0xa6ab546a
   140023c3d:	push   rdx
   140023c3e:	(bad)  
   140023c3f:	jo     0x140023bd6
   140023c41:	(bad)
   140023c44:	jmp    0x140023c05
   140023c46:	sahf   
   140023c47:	ins    BYTE PTR es:[rdi],dx
   140023c48:	sbb    eax,DWORD PTR [rax-0x3fe768c9]
   140023c4e:	add    al,0xab
   140023c50:	sub    eax,DWORD PTR [rsi]
   140023c52:	mov    BYTE PTR [rsp+rax*1],dl
   140023c55:	rex.RX mov BYTE PTR [rdx+0x11aab6b2],r11b
   140023c5c:	in     eax,0x28
   140023c5e:	mov    edx,cs
   140023c60:	out    0xcf,eax
   140023c62:	(bad)  
   140023c63:	scas   al,BYTE PTR es:[rdi]
   140023c64:	lahf   
   140023c65:	(bad)  
   140023c66:	(bad)  
   140023c67:	cmp    cl,BYTE PTR [rdx]
   140023c69:	cmp    al,0x71
   140023c6b:	std    
   140023c6c:	or     eax,0xe9e86ec7
   140023c71:	sbb    eax,0x86f47c38
   140023c76:	jrcxz  0x140023c3f
   140023c78:	mov    edx,0xb6f707fb
   140023c7d:	ja     0x140023c74
   140023c7f:	in     al,dx
   140023c80:	push   rcx
   140023c81:	jle    0x140023cc9
   140023c83:	xor    al,0x82
   140023c85:	add    BYTE PTR [rsi+rsi*2-0x71694358],dh
   140023c8c:	ret    0x8c30
   140023c8f:	sub    BYTE PTR [rdi-0x56],dl
   140023c92:	sbb    BYTE PTR [rbx-0x17],ah
   140023c95:	jmp    0x11ed2e285
   140023c9a:	(bad)  
   140023c9b:	cli    
   140023c9c:	repnz adc dl,BYTE PTR [rbp-0x5e7e768e]
   140023ca3:	rex.B (bad) 
   140023ca5:	mov    WORD PTR [rcx-0x7],fs
   140023ca8:	test   DWORD PTR [rcx+0x1a],edi
   140023cab:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140023cac:	mov    ?,WORD PTR [rax]
   140023cae:	pop    rcx
   140023caf:	(bad)  
   140023cb0:	sbb    eax,0x2381c7dd
   140023cb5:	mov    DWORD PTR [rcx+0x5c279ca4],0xee6c9e57
   140023cbf:	in     al,dx
   140023cc0:	(bad)  
   140023cc1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140023cc2:	add    ecx,DWORD PTR [rbp-0x518296ae]
   140023cc8:	xor    eax,0xf3e5c804
   140023ccd:	(bad)  
   140023cce:	stos   BYTE PTR es:[rdi],al
   140023ccf:	adc    eax,0xb1e47b1e
   140023cd4:	(bad)  
   140023cd5:	(bad)  
   140023cd6:	(bad)  
   140023cd7:	hlt    
   140023cd8:	shl    DWORD PTR [rbx],0xe3
   140023cdb:	(bad)  
   140023cdc:	(bad)  
   140023cdd:	pop    rsi
   140023cde:	and    al,0x71
   140023ce0:	test   DWORD PTR [rip+0xffffffffed3b0253],0x1914b929        # 0x12d3d3f3d
   140023cea:	mov    ebx,0x137531a9
   140023cef:	add    al,0x3f
   140023cf1:	adc    DWORD PTR [rdx],ebp
   140023cf3:	out    dx,al
   140023cf4:	lahf   
   140023cf5:	fnstenv es:[rsi]
   140023cf8:	add    BYTE PTR [rdi+0x4e],ch
   140023cfb:	xor    DWORD PTR [rax-0x7c8f9f2b],eax
   140023d01:	(bad)  
   140023d02:	rex.XB pop r15
   140023d04:	push   rdx
   140023d05:	xchg   ebx,eax
   140023d06:	retf   0x372b
   140023d09:	ret    0x2f28
   140023d0c:	xchg   esp,eax
   140023d0d:	sub    bl,BYTE PTR [rdx-0x53]
   140023d10:	stos   DWORD PTR es:[rdi],eax
   140023d11:	addr32 xchg edi,ecx
   140023d14:	cmp    al,0x7
   140023d16:	addr32 pop rsi
   140023d18:	ds cmc 
   140023d1a:	ret    0xbf77
   140023d1d:	pop    rsi
   140023d1e:	ins    BYTE PTR es:[rdi],dx
   140023d1f:	imul   ebp,edi,0xffffffdb
   140023d22:	mov    ebp,0xa1fedf6f
   140023d27:	fnstsw WORD PTR [rbx-0x9]
   140023d2a:	sbb    al,0x3d
   140023d2c:	jbe    0x140023cf9
   140023d2e:	mov    DWORD PTR [rdx+0x67],esp
   140023d31:	imul   DWORD PTR [rsi]
   140023d33:	fcomip st,st(3)
   140023d35:	xor    al,BYTE PTR [rsi+0x6b]
   140023d38:	loop   0x140023d64
   140023d3a:	sbb    eax,0x84184b06
   140023d3f:	xchg   esp,eax
   140023d40:	lea    esp,[rip+0xffffffffb972230a]        # 0xf9746050
   140023d46:	sub    al,0xfd
   140023d48:	mov    ebx,0xddd41376
   140023d4d:	xor    BYTE PTR [rax+0x87b5d81],dl
   140023d53:	ret    0x4a80
   140023d56:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140023d57:	(bad)  
   140023d58:	xchg   BYTE PTR [rcx+0x1da277b6],dl
   140023d5e:	adc    DWORD PTR [rcx],0xffffff90
   140023d61:	loopne 0x140023d77
   140023d63:	xchg   edx,eax
   140023d64:	jb     0x140023de5
   140023d66:	rex.WXB jmp 0x140023dd8
   140023d69:	adc    ebx,DWORD PTR [rdi]
   140023d6b:	rex.WR xchg rdx,rax
   140023d6d:	jae    0x140023dd7
   140023d6f:	adc    eax,0x818cdc21
   140023d74:	mov    cl,0x91
   140023d76:	adc    ebp,edi
   140023d78:	(bad)  
   140023d79:	dec    edi
   140023d7b:	(bad)  
   140023d7c:	cmp    eax,0xbea7c5fa
   140023d81:	jo     0x140023d29
   140023d83:	adc    DWORD PTR [rsi+0xbcc4197],eax
   140023d89:	leave  
   140023d8a:	and    al,0x96
   140023d8c:	imul   ecx,edi,0x7f58f353
   140023d92:	ret    
   140023d93:	ret    
   140023d94:	push   rsi
   140023d95:	rex.XB push r11
   140023d97:	cmovge ebp,DWORD PTR [rcx-0xd]
   140023d9b:	rex.WRB lods rax,QWORD PTR ds:[rsi]
   140023d9d:	clc    
   140023d9e:	mov    DWORD PTR [rbx+rbx*1-0x80],ebp
   140023da2:	(bad)  
   140023da3:	scas   eax,DWORD PTR es:[rdi]
   140023da4:	and    al,0x89
   140023da6:	jp     0x140023d4b
   140023da8:	rcr    DWORD PTR [rax],0x63
   140023dab:	xor    eax,0xeddd0756
   140023db0:	(bad)  
   140023db3:	lods   eax,DWORD PTR ds:[rsi]
   140023db4:	push   rcx
   140023db5:	adc    eax,0x635a6e52
   140023dba:	mov    cl,BYTE PTR [rdx-0x38]
   140023dbd:	(bad)  
   140023dbe:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140023dbf:	pop    rdx
   140023dc0:	lods   eax,DWORD PTR ds:[rsi]
   140023dc1:	push   rdi
   140023dc2:	stos   BYTE PTR es:[rdi],al
   140023dc3:	(bad)  
   140023dc4:	xchg   ebp,eax
   140023dc5:	(bad)
   140023dc8:	sub    DWORD PTR [rcx-0xe],esi
   140023dcb:	test   edx,eax
   140023dcd:	(bad)  
   140023dce:	mov    esi,0x6d7f4f4
   140023dd3:	xchg   BYTE PTR [rsi+0xe],dh
   140023dd6:	fdivp  st(1),st
   140023dd8:	xchg   esi,eax
   140023dd9:	lahf   
   140023dda:	mov    ebx,0xaec0c775
   140023ddf:	imul   edi,DWORD PTR [rbx+0x7],0x6
   140023de3:	scas   eax,DWORD PTR es:[rdi]
   140023de4:	rex.RB stc 
   140023de6:	cmp    DWORD PTR [rcx-0x5d294b6c],ebp
   140023dec:	mov    ch,0xa1
   140023dee:	pop    rdx
   140023def:	scas   eax,DWORD PTR es:[rdi]
   140023df0:	adc    DWORD PTR [rcx+riz*1+0x7947c67e],eax
   140023df7:	(bad)  
   140023df8:	ret    0x7577
   140023dfb:	jle    0x140023ddc
   140023dfd:	repz jmp 0x11ad324cf
   140023e03:	movabs ds:0x74132b5be6f69475,al
   140023e0c:	cs (bad) 
   140023e0e:	loope  0x140023e5a
   140023e10:	mov    dh,BYTE PTR [rcx]
   140023e12:	fwait
   140023e13:	scas   eax,DWORD PTR es:[rdi]
   140023e14:	rex.WRB or BYTE PTR [r12+rbx*2-0x17],0xa7
   140023e1a:	mov    ebx,0x56a3df58
   140023e1f:	stos   DWORD PTR es:[rdi],eax
   140023e20:	icebp  
   140023e21:	in     al,0xc3
   140023e23:	imul   edi,esp
   140023e26:	(bad)
   140023e29:	repnz retf 0xc8c8
   140023e2d:	enter  0x3028,0x27
   140023e31:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023e32:	cwde   
   140023e33:	mov    dh,0xc6
   140023e35:	rex.WRX and rsp,r10
   140023e38:	lods   al,BYTE PTR ds:[rsi]
   140023e39:	adc    eax,0x7cd944ac
   140023e3e:	test   DWORD PTR [rdx+0x25],ecx
   140023e41:	mov    BYTE PTR [rbp+rsi*1-0x1441b20a],ch
   140023e48:	mov    bh,0xca
   140023e4a:	mov    dh,0x1
   140023e4c:	fcom   DWORD PTR [rsi]
   140023e4e:	rex.W (bad) 
   140023e50:	(bad)  
   140023e51:	imul   ebx,DWORD PTR [rcx+0x2b],0x55
   140023e55:	mov    ah,0xf0
   140023e57:	std    
   140023e58:	sub    bl,dl
   140023e5a:	(bad)  
   140023e5b:	pop    rsi
   140023e5c:	xlat   BYTE PTR ds:[rbx]
   140023e5d:	cmc    
   140023e5e:	pop    rdx
   140023e5f:	rex.WRB sbb BYTE PTR [r13-0x4a],r11b
   140023e63:	adc    DWORD PTR [rcx],edi
   140023e65:	and    ebp,DWORD PTR [rax]
   140023e67:	rex.WX sub BYTE PTR [rdx],bl
   140023e6a:	rex.R movabs eax,ds:0x4f2d8f8c4c6cad5a
   140023e74:	mov    WORD PTR [rdi-0x4c993463],cs
   140023e7a:	test   DWORD PTR [rbx+0xf],ebp
   140023e7d:	(bad)  
   140023e7e:	fidiv  DWORD PTR [rbp+0x7daee773]
   140023e84:	jnp    0x140023e95
   140023e86:	sbb    al,0x3e
   140023e88:	(bad)  
   140023e89:	xor    esi,DWORD PTR [rax]
   140023e8b:	mov    eax,0xbbb3bda7
   140023e90:	push   rdi
   140023e91:	jns    0x140023f11
   140023e93:	(bad)  
   140023e94:	pop    rax
   140023e95:	mov    r13d,0x411b6011
   140023e9b:	int3   
   140023e9c:	stos   BYTE PTR es:[rdi],al
   140023e9d:	rex.WXB xor rsp,QWORD PTR [r11-0x78]
   140023ea1:	rex.XB out 0x25,al
   140023ea4:	or     eax,0xf9254a3b
   140023ea9:	rex.RX xchg ecx,eax
   140023eab:	repnz add DWORD PTR [rbx+rbp*1+0x3b3aba55],edx
   140023eb3:	xchg   edx,eax
   140023eb4:	(bad)  
   140023eb5:	in     al,0x2b
   140023eb7:	xchg   esp,eax
   140023eb8:	pop    rdi
   140023eb9:	sub    DWORD PTR [rbp+0x385cfbe7],eax
   140023ebf:	ja     0x140023eef
   140023ec1:	cli    
   140023ec2:	call   0x13e7e7e4e
   140023ec7:	mov    edi,eax
   140023ec9:	(bad)  
   140023eca:	cmp    edx,DWORD PTR [rbp-0x55]
   140023ecd:	xlat   BYTE PTR ds:[rbx]
   140023ece:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140023ecf:	sub    BYTE PTR [rcx-0x5b],0xd4
   140023ed3:	xchg   esp,eax
   140023ed4:	xor    eax,0x5fdf167a
   140023ed9:	retf   0x8a16
   140023edc:	jmp    0x140023f1f
   140023ede:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140023edf:	push   rdx
   140023ee0:	(bad)  
   140023ee1:	in     eax,0x52
   140023ee3:	loop   0x140023ed3
   140023ee5:	mov    edi,0xd7fd6329
   140023eea:	xchg   ebx,eax
   140023eeb:	ins    DWORD PTR es:[rdi],dx
   140023eec:	add    esi,DWORD PTR [rax-0x75db76d3]
   140023ef2:	(bad)  
   140023ef3:	ins    BYTE PTR es:[rdi],dx
   140023ef4:	sbb    BYTE PTR [rdx+0x55a1b846],bl
   140023efa:	mov    cl,0x2d
   140023efc:	bnd ret 
   140023efe:	rex.RX (bad) 
   140023f00:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140023f01:	lods   eax,DWORD PTR ds:[rsi]
   140023f02:	out    0xb,al
   140023f04:	(bad)
   140023f07:	pop    rsi
   140023f08:	iret   
   140023f09:	adc    DWORD PTR [rbp+0x39],eax
   140023f0c:	movabs eax,ds:0x237c8890531ade64
   140023f15:	push   0xffffffff9f0ecee4
   140023f1a:	pop    rcx
   140023f1b:	cmp    DWORD PTR [rbx],edi
   140023f1d:	jl     0x140023f85
   140023f1f:	add    al,0xbe
   140023f21:	hlt    
   140023f22:	mov    ch,0xbe
   140023f24:	mov    esi,0xf77b1dbe
   140023f29:	pop    rbp
   140023f2a:	mov    bl,0x7f
   140023f2c:	out    0xee,eax
   140023f2e:	cmp    eax,0x3d1f0f7b
   140023f33:	jbe    0x140023fb2
   140023f35:	rex.WRXB outs dx,DWORD PTR ds:[rsi]
   140023f37:	call   QWORD PTR [rax-0x52]
   140023f3a:	mov    ebp,0x8c234773
   140023f3f:	push   0x1b8c4234
   140023f44:	xlat   BYTE PTR ds:[rbx]
   140023f45:	mov    edx,DWORD PTR [rdx+rax*1]
   140023f48:	adc    eax,0x7922faef
   140023f4d:	ja     0x140023f30
   140023f4f:	and    BYTE PTR [rbp-0x294bf7be],bh
   140023f55:	imul   ecx,DWORD PTR [rcx-0x759a8d30],0x6864cfce
   140023f5f:	(bad)  
   140023f60:	jmp    0x140023f9e
   140023f62:	(bad)  
   140023f63:	rol    BYTE PTR [rbx-0x35],1
   140023f66:	(bad)  
   140023f67:	inc    al
   140023f69:	(bad)  
   140023f6a:	mov    esi,0xe2f17e37
   140023f6f:	xor    BYTE PTR [rax],dh
   140023f71:	(bad)  
   140023f72:	(bad)  
   140023f73:	rex.RX or r15b,BYTE PTR [rbx]
   140023f76:	test   DWORD PTR [rax+0x51],esp
   140023f79:	adc    al,0x8a
   140023f7b:	jmp    0x140023fe5
   140023f7d:	push   rbx
   140023f7e:	or     edx,ebp
   140023f80:	cmc    
   140023f81:	enter  0xe144,0xb6
   140023f85:	loop   0x140023f46
   140023f87:	mov    gs,WORD PTR [rbx+rbx*1-0x80]
   140023f8b:	ins    DWORD PTR es:[rdi],dx
   140023f8c:	mov    ecx,0xd145125a
   140023f91:	mov    edx,0x3035d652
   140023f96:	push   rdx
   140023f97:	mov    BYTE PTR [rax],ah
   140023f99:	or     al,0x1a
   140023f9b:	retf   0x5144
   140023f9e:	lods   eax,DWORD PTR ds:[rsi]
   140023f9f:	stos   DWORD PTR es:[rdi],eax
   140023fa0:	cwde   
   140023fa1:	not    esi
   140023fa3:	jmp    0x140023f32
   140023fa5:	sbb    al,0x16
   140023fa7:	(bad)  
   140023fa8:	(bad)  
   140023faa:	adc    DWORD PTR [rbp-0x7d5616c7],eax
   140023fb0:	lea    esi,[rsi+rbx*1+0x44]
   140023fb4:	outs   dx,BYTE PTR ds:[rsi]
   140023fb5:	imul   ebp,DWORD PTR [rcx-0x57],0x34b4b4b2
   140023fbc:	repz loop 0x140023f88
   140023fbf:	(bad)  
   140023fc0:	mov    dl,0xbd
   140023fc2:	(bad)  
   140023fc4:	mov    ebx,0x777677af
   140023fc9:	neg    DWORD PTR [rsi]
   140023fcb:	cmp    esi,DWORD PTR [rsi-0x4]
   140023fce:	loopne 0x140023f51
   140023fd0:	add    DWORD PTR [rdi+0x7bdaee0f],0xffffffcd
   140023fd7:	xchg   ecx,eax
   140023fd8:	rex.WR movabs rsi,0xe2e061ea191eafad
   140023fe2:	ud2    
   140023fe4:	sub    DWORD PTR [rbx-0x3ba78a51],ebp
   140023fea:	sub    BYTE PTR [rdx+0x7c9f3df0],cl
   140023ff0:	ds (bad) 
   140023ff2:	xchg   DWORD PTR [rdx],eax
   140023ff4:	outs   dx,BYTE PTR es:[rsi]
   140023ff6:	sbb    DWORD PTR [rsi-0x118e1ad8],edx
   140023ffc:	in     al,dx
   140023ffd:	f2xm1  
   140023fff:	movsxd ebx,DWORD PTR [rdi]
   140024001:	stc    
   140024002:	mov    bl,0xe1
   140024004:	(bad)  
   140024005:	(bad)  
   140024006:	jg     0x140023fea
   140024008:	lods   eax,DWORD PTR fs:[rsi]
   14002400a:	pop    rsi
   14002400b:	(bad)  
   14002400c:	add    esp,DWORD PTR [rsi-0x23]
   14002400f:	(bad)  
   140024010:	popf   
   140024011:	ret    
   140024012:	not    DWORD PTR [rdi-0x73]
   140024015:	ss and eax,0xa24208db
   14002401b:	jo     0x140024068
   14002401d:	loop   0x140024016
   14002401f:	fisttp WORD PTR [rax+0x79]
   140024022:	rol    DWORD PTR [rax],cl
   140024024:	(bad)  
   140024025:	mov    dh,0xe5
   140024027:	rex.RXB (bad) 
   140024029:	cmp    eax,ebx
   14002402b:	xlat   BYTE PTR ds:[rbx]
   14002402c:	iret   
   14002402d:	fcmovb st,st(6)
   14002402f:	mov    edx,0xb650c20c
   140024034:	out    0x73,eax
   140024036:	sub    dl,BYTE PTR [rsi+rbx*4+0x1f]
   14002403a:	add    al,0xd
   14002403c:	(bad)  
   14002403d:	movsxd esi,DWORD PTR [rbx]
   14002403f:	(bad)  
   140024040:	jb     0x14002409a
   140024042:	xchg   ebx,eax
   140024043:	mov    bh,0x9a
   140024045:	sbb    al,0x56
   140024047:	out    0x40,eax
   140024049:	in     al,0xc1
   14002404b:	cli    
   14002404c:	rex (bad) 
   14002404e:	enter  0x9efa,0x57
   140024052:	in     al,dx
   140024053:	jmp    0x140024032
   140024055:	shl    DWORD PTR [rcx-0x10],1
   140024058:	loopne 0x14002403b
   14002405a:	mov    ebp,0xd374de37
   14002405f:	rex.WRB jnp 0x140024011
   140024062:	cmp    DWORD PTR [rax-0x5c],esi
   140024065:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140024066:	scas   eax,DWORD PTR es:[rdi]
   140024067:	jg     0x140024039
   140024069:	or     ah,ch
   14002406b:	rex.RXB
   14002406c:	rex.W mov spl,0xd6
   14002406f:	(bad)  
   140024070:	sbb    esp,DWORD PTR [rcx]
   140024072:	mov    bl,0xb3
   140024074:	mov    bl,0xac
   140024076:	cs int3 
   140024078:	jo     0x14002405c
   14002407a:	mov    dh,0x5b
   14002407c:	mov    eax,0x999bd6fd
   140024081:	pop    rdi
   140024082:	pop    rax
   140024083:	and    al,0x32
   140024085:	(bad)  
   140024086:	fwait
   140024087:	outs   dx,BYTE PTR ds:[rsi]
   140024088:	mov    ebx,0xcea34695
   14002408d:	ror    DWORD PTR [rdi+0x7e],cl
   140024090:	jbe    0x140024090
   140024092:	cmp    DWORD PTR [rdi-0x4],0xffffffc7
   140024096:	fistp  WORD PTR [rsp+rbx*4+0x66011c9a]
   14002409d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002409e:	xchg   edx,eax
   14002409f:	xchg   edi,eax
   1400240a0:	lea    esi,[rcx+0x2fef9ef3]
   1400240a6:	rex.RXB push r9
   1400240a8:	mov    ah,0x89
   1400240aa:	mov    ch,0xf5
   1400240ac:	cmp    BYTE PTR [rcx-0x14e24f7],dh
   1400240b2:	(bad)  
   1400240b3:	sub    bl,bl
   1400240b5:	(bad)  
   1400240b6:	(bad)  
   1400240b7:	pop    rbx
   1400240b8:	jle    0x1400240e2
   1400240ba:	icebp  
   1400240bb:	cmp    al,0x4f
   1400240bd:	in     al,0xb3
   1400240bf:	pop    rcx
   1400240c0:	jb     0x14002407b
   1400240c2:	mov    esp,0x56595a58
   1400240c7:	pop    rbp
   1400240c8:	sti    
   1400240c9:	(bad)  
   1400240ca:	movsxd edx,DWORD PTR [rsi-0x5a]
   1400240cd:	std    
   1400240ce:	push   0x2d
   1400240d0:	push   rax
   1400240d1:	mov    esi,0x5eb1be14
   1400240d6:	mov    dh,0x11
   1400240d8:	(bad)  
   1400240d9:	xor    al,BYTE PTR [rdx-0x36]
   1400240dc:	lods   al,BYTE PTR ds:[rsi]
   1400240dd:	adc    al,0x22
   1400240df:	imul   ecx,DWORD PTR [rcx+rcx*8-0x6e8cd6d5],0xffffffd6
   1400240e7:	cmp    DWORD PTR [rax],esp
   1400240e9:	xchg   DWORD PTR [rbx],esi
   1400240eb:	or     dh,bl
   1400240ed:	mov    ds,WORD PTR [rip+0x1c8ffa3b]        # 0x15c923b2e
   1400240f3:	cmp    bh,BYTE PTR [rsp+riz*8-0x18]
   1400240f7:	shl    DWORD PTR [rbx-0x1e42e3c9],1
   1400240fd:	xchg   BYTE PTR [rbx-0x4c4bcbd],al
   140024103:	mov    dl,0xf9
   140024105:	jl     0x1400240cd
   140024107:	pop    rdx
   140024108:	rex.B
   140024109:	ss xchg edi,eax
   14002410b:	and    DWORD PTR [rdi-0x1837ac35],edx
   140024111:	pop    rax
   140024112:	pop    rax
   140024113:	pop    rax
   140024114:	shl    bl,0x7d
   140024117:	mov    bl,BYTE PTR [rip+0x3e5fc16d]        # 0x17e62028a
   14002411d:	clc    
   14002411e:	loopne 0x1400240c9
   140024120:	iret   
   140024121:	jge    0x140024119
   140024123:	leave  
   140024124:	addr32 sub edx,ebp
   140024127:	fidivr DWORD PTR [rax]
   140024129:	xor    BYTE PTR [rdi-0x2bd4d1a0],cl
   14002412f:	movabs ds:0x356a954cb947ac46,al
   140024138:	and    al,0x4e
   14002413a:	ins    BYTE PTR es:[rdi],dx
   14002413b:	(bad)  
   14002413c:	and    al,0x3f
   14002413e:	movabs ds:0xa3f2db0036d9259f,eax
   140024147:	xchg   rdx,rax
   140024149:	(bad)  
   14002414a:	push   rbx
   14002414b:	clc    
   14002414c:	ins    DWORD PTR es:[rdi],dx
   14002414d:	adc    al,0x7c
   14002414f:	movabs eax,ds:0x3e7b546159556a82
   140024158:	sub    ebp,DWORD PTR [rbx]
   14002415a:	ror    bl,cl
   14002415c:	rex.R xchg ebp,eax
   14002415e:	rex.WX push rsi
   140024160:	or     BYTE PTR [rbx+riz*2+0x6c],bh
   140024164:	pop    rsi
   140024165:	rex (bad) 
   140024167:	jmp    0x1528bee51
   14002416c:	movsxd edx,DWORD PTR [rax-0x12e2f5fb]
   140024172:	in     eax,dx
   140024173:	cmp    DWORD PTR [rbx-0x9],0xffffffec
   140024177:	cmp    DWORD PTR [rax-0x3],esi
   14002417a:	mov    cl,0x63
   14002417c:	sti    
   14002417d:	outs   dx,DWORD PTR ds:[rsi]
   14002417e:	cmp    al,0x7e
   140024180:	jrcxz  0x140024143
   140024182:	fnstsw WORD PTR [rbx-0xa]
   140024185:	in     al,dx
   140024186:	(bad)  
   140024187:	jmp    0x1400241a8
   140024189:	sub    BYTE PTR [rsi-0xd],ah
   14002418c:	jns    0x140024134
   14002418e:	es (bad) 
   140024190:	sbb    DWORD PTR [rcx],ebx
   140024192:	ds jge 0x140024186
   140024195:	leave  
   140024196:	(bad)  
   140024197:	sahf   
   140024198:	jl     0x140024180
   14002419a:	cld    
   14002419b:	fdivr  st,st(1)
   14002419d:	(bad)  
   14002419e:	cmp    DWORD PTR [rcx],0xa9e33660
   1400241a4:	in     eax,0x50
   1400241a6:	stc    
   1400241a7:	imul   ebx,DWORD PTR [rcx+0x3f],0x57
   1400241ab:	(bad)  
   1400241ac:	sub    esp,DWORD PTR [rbp-0x5242a4c0]
   1400241b2:	clc    
   1400241b3:	dec    DWORD PTR [rax]
   1400241b5:	fnstenv [rsi]
   1400241b7:	add    bl,bl
   1400241b9:	repnz (bad) 
   1400241bb:	mov    DWORD PTR [rdx],ebp
   1400241bd:	rex.WX je 0x1400241c5
   1400241c0:	and    DWORD PTR [rax],edx
   1400241c2:	sbb    edi,ecx
   1400241c4:	adc    esp,DWORD PTR [rcx+0x656b1945]
   1400241ca:	es xchg edi,eax
   1400241cc:	repz test al,0xd7
   1400241cf:	cld    
   1400241d0:	shl    dl,0xb
   1400241d3:	rex.RX or DWORD PTR fs:[rcx+0x205cd851],r10d
   1400241db:	rex.RB (bad) 
   1400241dd:	xchg   BYTE PTR [rcx+0x62],ah
   1400241e0:	or     BYTE PTR [rdx],dh
   1400241e2:	rex pop rbx
   1400241e4:	pop    rbx
   1400241e5:	pop    rbx
   1400241e6:	pop    rbx
   1400241e7:	rex.WRXB pop r15
   1400241e9:	outs   dx,DWORD PTR ds:[rsi]
   1400241ea:	out    dx,eax
   1400241eb:	loopne 0x140024176
   1400241ed:	cmp    ecx,DWORD PTR [rsi+0x1c]
   1400241f0:	cmp    DWORD PTR [rsp+riz*8-0x38],edi
   1400241f4:	movabs eax,ds:0xa7e9e17f4dcee773
   1400241fd:	mov    esi,0xa6572e55
   140024202:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140024203:	out    dx,eax
   140024204:	lods   eax,DWORD PTR ds:[rsi]
   140024205:	and    ch,dl
   140024207:	xchg   edx,eax
   140024208:	(bad)  
   140024209:	xchg   BYTE PTR [rbx-0x14d3a75a],ch
   14002420f:	push   0x2d
   140024211:	mov    al,cl
   140024214:	rex.RX loope 0x1400241b2
   140024217:	movabs ds:0x5b6006db21c7e771,al
   140024220:	jle    0x14002427e
   140024222:	loop   0x14002428e
   140024224:	jl     0x140024293
   140024226:	mov    ebx,0x85199511
   14002422b:	mov    ch,0xc2
   14002422d:	repz cmp al,0xd9
   140024230:	xchg   ecx,eax
   140024231:	retf   
   140024232:	stos   DWORD PTR es:[rdi],eax
   140024233:	cmc    
   140024234:	jb     0x140024213
   140024236:	ret    
   140024237:	xor    ecx,edx
   140024239:	pop    rax
   14002423a:	cmp    al,0x9
   14002423c:	mov    esi,0x6137d295
   140024241:	cwde   
   140024242:	in     al,0xb
   140024244:	jl     0x140024266
   140024246:	and    esp,DWORD PTR [rax]
   140024248:	(bad)  
   140024249:	xchg   ebp,eax
   14002424a:	retf   0x6b5a
   14002424d:	and    esp,DWORD PTR [rbx+0x4c]
   140024250:	pop    rcx
   140024251:	rex pop rcx
   140024253:	jp     0x1400242b3
   140024255:	leave  
   140024256:	ret    
   140024257:	xchg   esp,eax
   140024258:	lods   al,BYTE PTR ds:[rsi]
   140024259:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002425a:	(bad)  
   14002425b:	sbb    BYTE PTR [rbx],bl
   14002425d:	mov    ecx,0x49db0181
   140024262:	mov    esi,0xdb6451f
   140024267:	shl    BYTE PTR [rsi+0x110d7fc],0xb0
   14002426e:	outs   dx,DWORD PTR ds:[rsi]
   14002426f:	neg    DWORD PTR [rsi]
   140024271:	cmps   DWORD PTR es:[rsi],DWORD PTR es:[rdi]
   140024273:	(bad)  
   140024274:	rex.WXB
   140024275:	in     al,0x3d
   140024278:	and    eax,0x2a9cd91a
   14002427d:	add    al,0x75
   14002427f:	adc    DWORD PTR [rax+0x64],ebx
   140024282:	adc    BYTE PTR [rcx],bl
   140024284:	add    eax,0xaf8ca856
   140024289:	xor    bl,BYTE PTR [rsi-0x3a]
   14002428c:	adc    eax,DWORD PTR [rcx+0x4d]
   14002428f:	rex.RB xchg r9d,eax
   140024291:	xchg   ecx,eax
   140024292:	rex.RX (bad) 
   140024294:	and    ecx,DWORD PTR [rbx+0x20]
   140024297:	and    eax,ecx
   140024299:	jp     0x1400242c5
   14002429b:	test   al,0x45
   14002429d:	(bad)  
   14002429e:	std    
   14002429f:	jrcxz  0x140024257
   1400242a1:	jle    0x140024239
   1400242a3:	fild   DWORD PTR fs:[rax]
   1400242a6:	ins    BYTE PTR es:[rdi],dx
   1400242a7:	retf   
   1400242a8:	jg     0x140024317
   1400242aa:	imul   eax,DWORD PTR [rip+0x3e2d25f4],0x494ab7a4        # 0x17e2f68a8
   1400242b4:	rex.WRXB
   1400242b5:	rex.WB loope 0x140024321
   1400242b8:	lea    esi,[rsi]
   1400242ba:	rex.RX sbb BYTE PTR [rbx],r9b
   1400242bd:	cmp    ch,dh
   1400242bf:	(bad)  
   1400242c0:	movabs al,ds:0xfe4837fe56da0789
   1400242c9:	jg     0x140024258
   1400242cb:	ins    DWORD PTR es:[rdi],dx
   1400242cc:	(bad)  
   1400242cd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400242ce:	(bad)  
   1400242cf:	sahf   
   1400242d0:	adc    ah,ch
   1400242d2:	add    BYTE PTR [rax],al
   1400242d4:	add    BYTE PTR [rax],al
   1400242d6:	rex.WB
   1400242d7:	rex.RB
   1400242d8:	rex.WRX
   1400242d9:	rex.R scas al,BYTE PTR es:[rdi]
   1400242db:	rex.X (bad) 
   1400242dd:	(bad)  
   1400242de:	add    BYTE PTR [rax],al
   1400242e0:	sub    BYTE PTR [rax],al
   1400242e2:	add    BYTE PTR [rax],al
   1400242e4:	xor    BYTE PTR [rax],al
   1400242e6:	add    BYTE PTR [rax],al
   1400242e8:	(bad)  
   1400242e9:	add    BYTE PTR [rax],al
   1400242eb:	add    BYTE PTR [rcx],al
   1400242ed:	add    BYTE PTR [rax],ah
   1400242ef:	add    BYTE PTR [rax],al
   1400242f1:	add    BYTE PTR [rax],al
   1400242f3:	add    BYTE PTR [rax+0x25],al
	...
   140024379:	add    BYTE PTR [rax],al
   14002437b:	add    BYTE PTR [rcx-0x7df0857a],dl
   140024381:	js     0x1400243ee
   140024383:	sub    BYTE PTR [rdx+0x46],cl
   140024386:	rex.X push rsp
   140024388:	push   rbx
   140024389:	push   rcx
   14002438a:	rex.WRXB xor QWORD PTR [r8],r8
	...
   140024429:	add    BYTE PTR [rax],al
   14002442b:	add    BYTE PTR [rdi-0x72f6867a],cl
   140024431:	xor    DWORD PTR [rbp+0x34],0xffffff91
   140024435:	mov    BYTE PTR [rbx+0x4f],bh
   140024438:	xchg   edi,eax
   140024439:	mov    WORD PTR [rdi+0x74],?
   14002443c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002443d:	jg     0x1400243c3
   14002443f:	(bad)  
   140024440:	xchg   edi,eax
   140024441:	jo     0x1400244b3
   140024443:	dec    DWORD PTR [rdx-0x5900857d]
   140024449:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002444a:	movabs ds:0x661d1e1df4,al
   140024453:	adc    BYTE PTR [rax],al
	...
   1400244dd:	add    BYTE PTR [rax],al
   1400244df:	add    BYTE PTR [rdi-0x6ad18274],dl
   1400244e5:	mov    al,BYTE PTR [rbx-0x7f756a88]
   1400244eb:	mov    WORD PTR [rdx+rax*4-0x7d734c8b],cs
   1400244f2:	jae    0x1400244f3
   1400244f4:	xchg   edi,eax
   1400244f5:	mov    bh,BYTE PTR [rsi-0x1]
   1400244f8:	xchg   esi,eax
   1400244f9:	add    DWORD PTR [rax+0x67c646ff],0xffffffff
   140024500:	lods   rax,QWORD PTR ds:[rsi]
   140024502:	rex.WXB dec QWORD PTR [r10-0xa008c8f]
   140024509:	hlt    
   14002450a:	in     eax,dx
   14002450b:	call   rcx
   14002450d:	ror    cl,cl
   14002450f:	inc    DWORD PTR [rbp+0x45]
   140024512:	rex.XB mov r12d,0x3c000000
	...
   14002459c:	jne    0x14002460d
   14002459e:	imul   esi,DWORD PTR [rbp-0x78],0x91e0727d
   1400245a5:	test   DWORD PTR [rdi-0x1],edi
   1400245a8:	mov    WORD PTR [rcx-0x7c720087],es
   1400245ae:	jne    0x1400245af
   1400245b0:	xchg   ebp,eax
   1400245b1:	mov    bh,BYTE PTR [rbx-0x1]
   1400245b4:	(bad)  
   1400245b5:	lea    edi,[rdi-0x1]
   1400245b8:	sub    DWORD PTR [rdi+rbp*2-0x1],0x29
   1400245bd:	jmp    QWORD PTR [rdx-0x6915ee01]
   1400245c3:	inc    DWORD PTR [rdi-0x26009b9e]
   1400245c9:	xlat   BYTE PTR ds:[rbx]
   1400245ca:	sar    bh,cl
   1400245cc:	(bad)  
   1400245cd:	push   rdi
   1400245cf:	push   rcx
   1400245d1:	lock out 0xff,eax
   1400245d4:	mov    cs,WORD PTR [rbp+0x100ff289]
   1400245da:	adc    BYTE PTR [rbx+0x1d000000],al
	...
   14002465c:	jp     0x1400246d4
   14002465e:	jno    0x14002465f
   140024660:	(bad)  
   140024661:	jbe    0x1400246d3
   140024663:	call   QWORD PTR [rbp-0x4f007b78]
   140024669:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002466a:	fwait
   14002466b:	push   QWORD PTR [rax-0x4500695b]
   140024671:	scas   al,BYTE PTR es:[rdi]
   140024672:	sahf   
   140024673:	(bad)  
   140024674:	mov    ebx,0xb8ffa0ae
   140024679:	test   eax,0xbdbbff9f
   14002467e:	mov    dh,0xff
   140024680:	lahf   
   140024681:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140024682:	movabs eax,ds:0xd1d8d8ff7c8391ff
   14002468b:	jmp    rbx
   14002468d:	jrcxz  0x140024669
   14002468f:	(bad)  
   140024690:	jmp    0x13a02257d
   140024695:	stc    
   140024696:	lock call rsp
   140024699:	ror    edx,cl
   14002469b:	dec    DWORD PTR [rax+0x48]
   14002469e:	rex.RX mov DWORD PTR [rax],0x430000
   1400246a5:	add    BYTE PTR [rax],al
   1400246a7:	add    DWORD PTR [rax],eax
	...
   140024719:	add    BYTE PTR [rax],al
   14002471b:	add    BYTE PTR [rdx-0x55007b78],cl
   140024721:	popf   
   140024722:	xchg   edi,eax
   140024723:	out    0xb8,al
   140024725:	stos   DWORD PTR es:[rdi],eax
   140024726:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140024727:	(bad)  
   140024728:	mov    ecx,0xacffa6ae
   14002472d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002472e:	popf   
   14002472f:	inc    DWORD PTR [rbp+0x6dff8082]
   140024735:	imul   ebp,DWORD PTR [rax-0x1],0x7c
   140024739:	ja     0x1400247b0
   14002473b:	call   FWORD PTR [rsi-0x5c007574]
   140024741:	nop
   140024742:	test   bh,bh
   140024744:	xchg   ebp,eax
   140024745:	lea    eax,[rbp-0x2f272801]
   14002474b:	jmp    rcx
   14002474d:	loop   0x140024727
   14002474f:	(bad)  
   140024750:	fcmovu st,st(1)
   140024752:	sar    edi,1
   140024754:	(bad)  
   140024756:	(bad)  
   140024757:	(bad)  
   140024758:	call   0x129022546
   14002475d:	call   0xcd904740
   140024762:	mov    dh,ch
   140024764:	(bad)  
   140024765:	femms  
   140024767:	jge    0x140024769
   140024769:	add    BYTE PTR [rax],al
   14002476b:	adc    al,0x0
	...
   1400247d9:	add    BYTE PTR [rax],al
   1400247db:	add    BYTE PTR [rsi-0x66017774],cl
   1400247e1:	(bad)
   1400247e5:	jp     0x14002485f
   1400247e7:	(bad)  
   1400247e8:	jle    0x140024864
   1400247ea:	jns    0x1400247eb
   1400247ec:	jo     0x14002485b
   1400247ee:	imul   edi,edi,0xff63686d
   1400247f4:	mov    WORD PTR [rbp-0x665c0084],es
   1400247fa:	mov    ?,edi
   1400247fc:	stos   BYTE PTR es:[rdi],al
   1400247fd:	lahf   
   1400247fe:	xchg   ecx,eax
   1400247ff:	call   FWORD PTR [rcx-0x6c008272]
   140024805:	lea    eax,[rdi+rdi*8-0x2f282a]
   14002480c:	fstp   st(5)
   14002480e:	sar    edi,cl
   140024810:	fcom   st(5)
   140024812:	int    0xff
   140024814:	fcmovu st,st(1)
   140024816:	sar    bh,1
   140024818:	enter  0xc1c7,0xff
   14002481c:	stos   BYTE PTR es:[rdi],al
   14002481d:	test   eax,0xcbceffa4
   140024822:	(bad)  
   140024823:	(bad)  
   140024824:	mov    edi,0x4effbabf
   140024829:	rex.WRX
   14002482a:	rex.WR mov sil,0x2
   14002482d:	add    al,BYTE PTR [rbx]
   14002482f:	cmp    BYTE PTR [rax],al
	...
   140024899:	add    BYTE PTR [rax],al
   14002489b:	add    BYTE PTR [rsi-0x79017674],cl
   1400248a1:	jge    0x14002491f
   1400248a3:	fimul  WORD PTR [rcx-0x5a00807e]
   1400248a9:	pushf  
   1400248aa:	xchg   esp,eax
   1400248ab:	call   FWORD PTR [rsp+rdx*4-0x756c007a]
   1400248b2:	cmp    edi,0xff838b8f
   1400248b8:	xchg   ebp,eax
   1400248b9:	xchg   ecx,eax
   1400248ba:	mov    edi,edi
   1400248bc:	cwde   
   1400248bd:	xchg   esp,eax
   1400248be:	(bad)  
   1400248bf:	call   QWORD PTR [rbp-0x69007873]
   1400248c5:	nop
   1400248c6:	mov    bh,bh
   1400248c8:	rcl    esp,cl
   1400248ca:	int    0xff
   1400248cc:	fcmovu st,st(2)
   1400248ce:	sar    edi,1
   1400248d0:	(bad)  
   1400248d1:	ror    bl,cl
   1400248d3:	call   rsi
   1400248d5:	xlat   BYTE PTR ds:[rbx]
   1400248d6:	(bad)  
   1400248d7:	inc    edi
   1400248d9:	mov    eax,0xa9afb0ff
   1400248df:	jmp    QWORD PTR [rax-0x48006762]
   1400248e5:	mov    ah,0xaf
   1400248e7:	(bad)  
   1400248e8:	(bad)  
   1400248ea:	(bad)  
   1400248eb:	dec    DWORD PTR [rdi+0x17ec888f]
   1400248f1:	sbb    DWORD PTR [rcx],ebx
   1400248f3:	data16 add BYTE PTR [rax],al
   1400248f6:	add    BYTE PTR [rcx],cl
	...
   14002495c:	mov    cs,WORD PTR [rsi-0x665b0177]
   140024962:	xchg   edx,eax
   140024963:	jrcxz  0x1400248e9
   140024965:	jge    0x1400249e1
   140024967:	jmp    FWORD PTR [rdi+0x6a]
   14002496a:	imul   edi,edi,0xff696b6f
   140024970:	test   DWORD PTR [rsi+0x7a],edi
   140024973:	call   QWORD PTR [rcx-0x66008378]
   140024979:	nop
   14002497a:	cmp    edi,0xffffffa6
   14002497d:	fwait
   14002497e:	(bad)  
   14002497f:	call   FWORD PTR [rdx-0x6c008171]
   140024985:	mov    WORD PTR [rdi+rdi*8-0x332c2e],es
   14002498c:	xlat   BYTE PTR ds:[rbx]
   14002498d:	xlat   BYTE PTR ds:[rbx]
   14002498e:	iret   
   14002498f:	call   rdx
   140024991:	ror    al,cl
   140024993:	call   rcx
   140024995:	ror    ecx,cl
   140024997:	dec    ebx
   140024999:	retf   
   14002499a:	sar    edi,0xa6
   14002499d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002499e:	lahf   
   14002499f:	call   FWORD PTR [rcx-0x55006c68]
   1400249a5:	test   eax,0xa9abffa4
   1400249aa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400249ab:	dec    edx
   1400249ad:	enter  0xffc0,0xc8
   1400249b1:	leave  
   1400249b2:	mov    edi,0x474948ff
   1400249b7:	xchg   esi,eax
   1400249b8:	add    BYTE PTR [rax],al
   1400249ba:	add    BYTE PTR [rdx],bl
	...
   140024a1c:	mov    cs,WORD PTR [rsi-0x6f660077]
   140024a22:	mov    ebp,eax
   140024a24:	mov    es,WORD PTR [rsi-0x7268007e]
   140024a2a:	test   edi,edi
   140024a2c:	lahf   
   140024a2d:	cwde   
   140024a2e:	nop
   140024a2f:	dec    DWORD PTR [rdi-0x7e007b77]
   140024a35:	jnp    0x140024aae
   140024a37:	inc    DWORD PTR [rax-0x6b008885]
   140024a3d:	mov    cs,WORD PTR [rax-0x7a706701]
   140024a43:	call   QWORD PTR [rbp-0x2f007971]
   140024a49:	ror    edx,1
   140024a4b:	call   rdx
   140024a4d:	ror    ebx,cl
   140024a4f:	dec    ebp
   140024a51:	int    0xc4
   140024a53:	call   rcx
   140024a55:	ror    eax,1
   140024a57:	(bad)  
   140024a58:	mov    eax,0xa3ffb1b8
   140024a5d:	movabs al,ds:0x9c9effa8afafff9c
   140024a66:	cwde   
   140024a67:	jmp    QWORD PTR [rcx-0x50006460]
   140024a6d:	scas   eax,DWORD PTR es:[rdi]
   140024a6e:	test   eax,0xb4bbbcff
   140024a73:	(bad)  
   140024a74:	fstp   st(2)
   140024a76:	sar    bh,cl
   140024a78:	rcl    dl,cl
   140024a7a:	retf   0x97
   140024a7d:	add    BYTE PTR [rax],al
   140024a7f:	adc    BYTE PTR [rax],al
   140024a81:	add    BYTE PTR [rax],al
   140024a83:	add    eax,0x0
	...
   140024adc:	nop
   140024add:	mov    cs,WORD PTR [rdx-0x6d685d01]
   140024ae3:	(bad)  
   140024ae4:	cmp    DWORD PTR [rsi+0x7d],0xffffffff
   140024ae8:	jp     0x140024b5f
   140024aea:	jae    0x140024aeb
   140024aec:	jbe    0x140024b61
   140024aee:	ins    DWORD PTR es:[rdi],dx
   140024aef:	inc    DWORD PTR [rax-0x70008d87]
   140024af5:	xchg   BYTE PTR [rsi-0x1],bh
   140024af8:	sahf   
   140024af9:	xchg   esi,eax
   140024afa:	mov    bh,bh
   140024afc:	stos   DWORD PTR es:[rdi],eax
   140024afd:	popf   
   140024afe:	(bad)  
   140024aff:	call   FWORD PTR [rcx-0x6d008574]
   140024b05:	lea    eax,[rdi+rdi*8-0x362f31]
   140024b0c:	ror    edi,1
   140024b0e:	(bad)  
   140024b0f:	dec    edx
   140024b11:	retf   0xffc2
   140024b14:	retf   
   140024b15:	int3   
   140024b16:	ret    
   140024b17:	inc    esp
   140024b19:	ret    
   140024b1a:	mov    edi,0x9ca1a2ff
   140024b1f:	call   QWORD PTR [rdx-0x54007370]
   140024b25:	test   eax,0xa2a4ffa4
   140024b2a:	popf   
   140024b2b:	jmp    QWORD PTR [rbx-0x5000635f]
   140024b31:	scas   al,BYTE PTR es:[rdi]
   140024b32:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140024b33:	inc    esi
   140024b35:	(bad)  
   140024b36:	mov    ebp,0xc8cfd0ff
   140024b3b:	inc    DWORD PTR [rcx]
   140024b3d:	add    DWORD PTR [rcx],eax
   140024b3f:	sbb    DWORD PTR [rax],eax
   140024b41:	add    BYTE PTR [rax],al
   140024b43:	adc    al,0x0
   140024b45:	add    BYTE PTR [rax],al
   140024b47:	add    eax,0x0
	...
   140024b9c:	mov    cs,WORD PTR [rsi-0x665d0075]
   140024ba2:	xchg   ebx,eax
   140024ba3:	lock lahf 
   140024ba5:	xchg   esp,eax
   140024ba6:	(bad)  
   140024ba7:	jmp    QWORD PTR [rax+rbx*4-0x6960006e]
   140024bae:	xchg   edi,edi
   140024bb0:	fwait
   140024bb1:	xchg   ecx,eax
   140024bb2:	test   bh,bh
   140024bb4:	fwait
   140024bb5:	xchg   ebx,eax
   140024bb6:	mov    edi,edi
   140024bb8:	sahf   
   140024bb9:	(bad)  
   140024bba:	xchg   esp,eax
   140024bbb:	jmp    QWORD PTR [rbx-0x64006462]
   140024bc1:	xchg   edx,eax
   140024bc2:	mov    bh,bh
   140024bc4:	xchg   esp,eax
   140024bc5:	mov    es,WORD PTR [rbp-0x38313301]
   140024bcb:	dec    ebp
   140024bcd:	int3   
   140024bce:	(bad)  
   140024bd1:	mov    edx,0xbec6c6ff
   140024bd7:	inc    esi
   140024bd9:	(bad)  
   140024bda:	mov    edi,0xc1c9c8ff
   140024bdf:	(bad)  
   140024be0:	mov    esp,0x97ffb4bb
   140024be5:	xchg   esi,eax
   140024be6:	xchg   ebx,eax
   140024be7:	call   FWORD PTR [rax-0x52006e6a]
   140024bed:	lods   al,BYTE PTR ds:[rsi]
   140024bee:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140024bef:	jmp    QWORD PTR [rbp-0x4200605d]
   140024bf5:	mov    esp,0xcdceffb4
   140024bfa:	(bad)  
   140024bfb:	inc    DWORD PTR [rdx]
   140024bfd:	add    al,BYTE PTR [rdx]
   140024bff:	sldt   WORD PTR [rax]
   140024c02:	add    BYTE PTR [rsi],dl
   140024c04:	add    BYTE PTR [rax],al
   140024c06:	add    BYTE PTR [rax],dl
	...
   140024c5c:	xchg   ecx,eax
   140024c5d:	(bad)  
   140024c5e:	mov    edi,edi
   140024c60:	stos   DWORD PTR es:[rdi],eax
   140024c61:	lahf   
   140024c62:	xchg   edi,eax
   140024c63:	repz cmp DWORD PTR [rcx+rdi*2-0x1],0xff717377
   140024c6c:	je     0x140024cdd
   140024c6e:	ins    DWORD PTR es:[rdi],dx
   140024c6f:	(bad)  
   140024c70:	jle    0x140024cec
   140024c72:	jb     0x140024c73
   140024c74:	xchg   BYTE PTR [rax-0x746d008b],al
   140024c7a:	cmp    bh,0xa2
   140024c7d:	cwde   
   140024c7e:	mov    bh,bh
   140024c80:	cwde   
   140024c81:	mov    WORD PTR [rbp-0x1],?
   140024c84:	xchg   esi,eax
   140024c85:	nop
   140024c86:	mov    bh,bh
   140024c88:	retf   0xc5cc
   140024c8b:	dec    eax
   140024c8d:	enter  0xffc1,0xc4
   140024c91:	ret    
   140024c92:	mov    esp,0xbbc3c2ff
   140024c97:	inc    ebx
   140024c99:	ret    
   140024c9a:	mov    ecx,0xbac2c2ff
   140024c9f:	inc    edx
   140024ca1:	ret    0xffbb
   140024ca4:	(bad)  
   140024ca5:	enter  0xffbe,0xab
   140024ca9:	test   eax,0x999affa3
   140024cae:	xchg   ebp,eax
   140024caf:	jmp    QWORD PTR [rbp-0x4500615d]
   140024cb5:	mov    ecx,0xcbcbffb2
   140024cba:	ret    
   140024cbb:	inc    DWORD PTR [rcx]
   140024cbd:	add    DWORD PTR [rcx],eax
   140024cbf:	(bad)  
   140024cc0:	add    BYTE PTR [rax],al
   140024cc2:	add    BYTE PTR [rbx],cl
   140024cc4:	add    BYTE PTR [rax],al
   140024cc6:	add    BYTE PTR [rax],cl
	...
   140024cf4:	(bad)  
   140024cf5:	(bad)  
   140024cf6:	(bad)  
   140024cf8:	(bad)  
   140024cf9:	(bad)  
   140024cfa:	(bad)  
   140024cfb:	(bad)  
   140024cfc:	pf2iw  mm1,QWORD PTR [rdi]
   140024d00:	(bad)  
   140024d01:	(bad)          # 0x17c115c11
   140024d02:	cvtps2pi mm1,QWORD PTR [rdi]
   140024d05:	(bad)  
   140024d06:	(bad)  
   140024d08:	(bad)  
   140024d09:	(bad)  
   140024d0a:	cmova  ecx,DWORD PTR [rdi]
   140024d0d:	(bad)  
   140024d0e:	cmovge ecx,DWORD PTR [rdi]
   140024d11:	(bad)  
   140024d12:	cmovle ecx,DWORD PTR [rdi]
   140024d15:	(bad)  
   140024d16:	cmovp  ecx,DWORD PTR [rdi]
   140024d19:	(bad)  
   140024d1a:	cmovb  edx,DWORD PTR [rcx-0x5a007471]
   140024d21:	popf   
   140024d22:	xchg   edi,eax
   140024d23:	test   DWORD PTR [rax-0x68008380],0xa2ff848d
   140024d2d:	cdq    
   140024d2e:	mov    ?,edi
   140024d30:	movabs ds:0x99ff88909aff8c97,al
   140024d39:	xchg   ecx,eax
   140024d3a:	xchg   edi,edi
   140024d3c:	sahf   
   140024d3d:	xchg   esi,eax
   140024d3e:	mov    edi,?
   140024d40:	cwde   
   140024d41:	mov    es,WORD PTR [rdx-0x786f6a01]
   140024d47:	inc    edi
   140024d49:	enter  0xffc1,0xc4
   140024d4d:	(bad)  
   140024d4e:	mov    ebp,0xb7bfbfff
   140024d53:	(bad)  
   140024d54:	mov    edi,0xbeffb7be
   140024d59:	mov    esi,0xbcbdffb6
   140024d5e:	mov    ah,0xff
   140024d60:	mov    ebx,0xbcffb6bb
   140024d65:	mov    esp,0xc0c0ffb5
   140024d6a:	mov    ecx,0xb1b8b6ff
   140024d6f:	jmp    QWORD PTR [rbx+riz*4-0x46460062]
   140024d76:	mov    cl,0xff
   140024d78:	enter  0xc0c8,0xff
	...
   140024da8:	(bad)  
   140024da9:	(bad)  
   140024daa:	lsl    ecx,WORD PTR [rdi]
   140024dad:	(bad)  
   140024dae:	unpcklps xmm1,XMMWORD PTR [rdi]
   140024db1:	(bad)  
   140024db2:	ucomiss xmm1,DWORD PTR [rdi]
   140024db5:	(bad)  
   140024db6:	cmovne ecx,DWORD PTR [rdi]
   140024db9:	(bad)  
   140024dba:	(bad)  
   140024dbc:	and    BYTE PTR [rsi],cl
   140024dbe:	(bad)  
   140024dbf:	cdq    
   140024dc0:	(bad)  
   140024dc1:	adc    eax,0x1a30b515
   140024dc6:	sbb    eax,esp
   140024dc8:	xor    BYTE PTR [rdx+rbx*1],bl
   140024dcb:	int3   
   140024dcc:	sub    al,0x1f
   140024dce:	sbb    esp,ecx
   140024dd0:	sub    al,0x22
   140024dd2:	sbb    edi,eax
   140024dd4:	sub    al,0x20
   140024dd6:	sbb    BYTE PTR [rdi+riz*1-0x6e51ebe5],bh
   140024ddd:	xchg   ecx,eax
   140024dde:	mov    edi,?
   140024de0:	mov    eax,0x93fba8ae
   140024de5:	mov    ecx,DWORD PTR [rax+0x6e7276ff]
   140024deb:	jmp    QWORD PTR [rbx+0x5f]
   140024dee:	pop    rsp
   140024def:	jmp    FWORD PTR [rsi+0x6c]
   140024df2:	push   0xffffffffffffffff
   140024df4:	jge    0x140024e6d
   140024df6:	je     0x140024df7
   140024df8:	xchg   ecx,eax
   140024df9:	mov    al,BYTE PTR [rax-0x74685e01]
   140024dff:	call   QWORD PTR [rsi-0x6b008475]
   140024e05:	pop    QWORD PTR [rsi-0x3f393a01]
   140024e0b:	(bad)  
   140024e0c:	mov    edi,0xbcffb9c0
   140024e11:	mov    esp,0xbabbffb4
   140024e16:	mov    bl,0xff
   140024e18:	mov    edx,0xb8ffb2ba
   140024e1d:	mov    eax,0xb7b7ffb2
   140024e22:	mov    al,0xff
   140024e24:	mov    dh,0xb6
   140024e26:	mov    al,0xff
   140024e28:	mov    eax,0xb8ffb1b8
   140024e2d:	mov    bh,0xb1
   140024e2f:	push   QWORD PTR [rsi-0x4b005048]
   140024e35:	mov    ch,0xad
   140024e37:	inc    esi
   140024e39:	(bad)
	...
   140024e64:	pi2fw  mm1,QWORD PTR [rdi]
   140024e68:	(bad)  
   140024e69:	(bad)  
   140024e6a:	(bad)  
   140024e6c:	(bad)  
   140024e6d:	(bad)  
   140024e6e:	cmovle ecx,DWORD PTR [rdi]
   140024e71:	(bad)  
   140024e72:	jae    0x1032175c0
   140024e78:	cmp    eax,0x59e9243f
   140024e7d:	gs xor bh,bh
   140024e80:	je     0x140024e04
   140024e82:	jmp    QWORD PTR [r8+rbx*4-0x603400a6]
   140024e8a:	imul   edi,edi,0xffffffd6
   140024e8d:	xchg   edx,eax
   140024e8e:	addr32 call rdi
   140024e91:	xchg   edx,eax
   140024e92:	(bad)  
   140024e93:	(bad)  
   140024e94:	fistp  DWORD PTR [rdx-0x6726009e]
   140024e9a:	pop    rdi
   140024e9b:	call   QWORD PTR [rcx-0x56007370]
   140024ea1:	movabs ds:0x8c95ff878a92fd9f,al
   140024eaa:	xchg   bh,bh
   140024eac:	pushf  
   140024ead:	xchg   ecx,eax
   140024eae:	cmp    edi,0xffffff9f
   140024eb1:	xchg   esp,eax
   140024eb2:	xchg   edi,edi
   140024eb4:	movabs al,ds:0xacff909ca6ff8997
   140024ebd:	movabs ds:0x8e94ff82909bff99,eax
   140024ec6:	test   edi,edi
   140024ec8:	ret    0xbec2
   140024ecb:	(bad)  
   140024ecc:	mov    esp,0xb9ffb6bd
   140024ed1:	mov    ecx,0xb7b7ffb2
   140024ed6:	mov    cl,0xff
   140024ed8:	mov    dh,0xb6
   140024eda:	scas   eax,DWORD PTR es:[rdi]
   140024edb:	push   QWORD PTR [rbp-0x4b00514b]
   140024ee1:	mov    ah,0xad
   140024ee3:	push   QWORD PTR [rbx+rsi*4-0x4c4c0054]
   140024eea:	stos   BYTE PTR es:[rdi],al
   140024eeb:	push   QWORD PTR [rdx-0x4c00544e]
   140024ef1:	mov    bl,0xac
   140024ef3:	push   QWORD PTR [rbx-0x3d00544d]
   140024ef9:	ret    0xffba
	...
   140024f24:	(bad)  
   140024f25:	(bad)  
   140024f26:	nop    DWORD PTR [rdi]
   140024f29:	(bad)  
   140024f2a:	rcpps  xmm2,XMMWORD PTR [rax+rbp*1+0x20]
   140024f2f:	mov    al,0x9c
   140024f31:	push   rcx
   140024f32:	rex.R cmc 
   140024f34:	xchg   ebp,eax
   140024f35:	test   BYTE PTR [rdi+rdi*8+0x48],dl
   140024f39:	xchg   esp,eax
   140024f3a:	cmp    eax,0x45ad55ff
   140024f3f:	call   FWORD PTR [rdi-0x46]
   140024f42:	rex.WRB call QWORD PTR [r8-0x40]
   140024f46:	jmp    QWORD PTR [r12+r9*8+0x4d]
   140024f4b:	jmp    QWORD PTR [rdx-0x38009a47]
   140024f51:	test   BYTE PTR [rcx-0x1],ah
   140024f54:	retf   0x6089
   140024f57:	call   rdx
   140024f59:	(bad)  
   140024f5a:	call   QWORD PTR fs:[rdx-0x4200716f]
   140024f61:	mov    dl,0xac
   140024f63:	call   QWORD PTR [rbp-0x76007372]
   140024f69:	add    DWORD PTR [rcx+0x777b7fff],0xffffffff
   140024f70:	jp     0x140024fe8
   140024f72:	jb     0x140024f73
   140024f74:	cmp    BYTE PTR [rbp+0x75],0xff
   140024f78:	mov    eax,DWORD PTR [rsi-0x6d640083]
   140024f7e:	mov    bh,bh
   140024f80:	xchg   esi,eax
   140024f81:	mov    edi,DWORD PTR [rdi-0x1]
   140024f84:	xchg   edx,eax
   140024f85:	lea    eax,[rdi-0x45414201]
   140024f8b:	(bad)  
   140024f8c:	mov    eax,0xb5ffb1b8
   140024f91:	mov    ah,0xae
   140024f93:	push   QWORD PTR [rsp+rsi*4-0x4d4d0053]
   140024f9a:	stos   DWORD PTR es:[rdi],eax
   140024f9b:	push   QWORD PTR [rcx-0x4f00564f]
   140024fa1:	mov    cl,0xa9
   140024fa3:	push   QWORD PTR [rax-0x50005750]
   140024fa9:	scas   eax,DWORD PTR es:[rdi]
   140024faa:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140024fab:	jmp    FWORD PTR [rdi-0x51005751]
   140024fb1:	scas   al,BYTE PTR es:[rdi]
   140024fb2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140024fb3:	jmp    FWORD PTR [rsi-0x41005a52]
   140024fb9:	mov    esi,0xffb6
	...
   140024fe2:	add    BYTE PTR [rax],al
   140024fe4:	rex.X and bl,BYTE PTR [rsi]
   140024fe7:	xchg   rdx,rax
   140024fe9:	rex.WX cmp rdx,rsi
   140024fec:	mov    bl,0x61
   140024fee:	rex.WXB (bad) 
   140024ff0:	mov    eax,0x85ff5762
   140024ff5:	xchg   ecx,eax
   140024ff6:	push   rsi
   140024ff7:	dec    DWORD PTR [rbp-0x49]
   140024ffa:	rex.X (bad) 
   140024ffc:	jl     0x140024fc7
   140024ffe:	push   rdx
   140024fff:	push   QWORD PTR [rdx+rcx*8+0x4f]
   140025003:	dec    DWORD PTR [rdx-0x37]
   140025006:	(bad)  
   140025007:	inc    DWORD PTR [rdx-0x2f]
   14002500a:	cmp    edi,edi
   14002500c:	push   rdx
   14002500d:	rol    BYTE PTR [rax-0x1],cl
   140025010:	mov    WORD PTR [rsi-0x5f5600af],gs
   140025016:	pop    rcx
   140025017:	(bad)  
   140025018:	mov    edi,0x91ff588b
   14002501d:	mov    cs,WORD PTR [rdi+rdi*8-0x635e59]
   140025024:	xchg   ecx,eax
   140025025:	mov    BYTE PTR [rbx-0x776e6501],al
   14002502b:	jmp    QWORD PTR [rbx-0x55007467]
   140025031:	lahf   
   140025032:	xchg   ecx,eax
   140025033:	jmp    QWORD PTR [rbx-0x5b007567]
   140025039:	cwde   
   14002503a:	mov    edi,edi
   14002503c:	test   al,0x9b
   14002503e:	(bad)  
   14002503f:	call   QWORD PTR [rsi-0x6c008476]
   140025045:	mov    es,WORD PTR [rsi-0x49424401]
   14002504b:	push   QWORD PTR [rbp+rsi*4-0x4e4d0053]
   140025052:	stos   BYTE PTR es:[rdi],al
   140025053:	push   QWORD PTR [rax-0x5000564f]
   140025059:	scas   al,BYTE PTR es:[rdi]
   14002505a:	test   al,0xff
   14002505c:	lods   eax,DWORD PTR ds:[rsi]
   14002505d:	lods   eax,DWORD PTR ds:[rsi]
   14002505e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002505f:	jmp    FWORD PTR [rsp+rbp*4-0x5454005b]
   140025066:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140025067:	jmp    FWORD PTR [rdx-0x55005b56]
   14002506d:	stos   BYTE PTR es:[rdi],al
   14002506e:	movabs ds:0xa2a9a9ffa3a9aaff,eax
   140025077:	(bad)  
   140025078:	mov    edx,0xffb2bb
	...
   14002509d:	add    BYTE PTR [rax],al
   14002509f:	add    BYTE PTR [rbp+0x36],ch
   1400250a2:	sub    al,0x47
   1400250a4:	mov    ebx,0xaaf44c61
   1400250a9:	pop    rbp
   1400250aa:	rex.WXB jmp QWORD PTR [r13-0x5700b7b1]
   1400250b1:	(bad)  {k4}
   1400250b6:	push   rdx
   1400250b7:	jmp    FWORD PTR [rcx-0x35]
   1400250ba:	rex.WR jmp FWORD PTR [rax-0x47]
   1400250be:	rex.RB dec DWORD PTR [r11-0x52]
   1400250c2:	cmp    edi,edi
   1400250c4:	rex lods eax,DWORD PTR ds:[rsi]
   1400250c6:	xor    eax,0x35bc46ff
   1400250cb:	inc    DWORD PTR [rbp-0x3e]
   1400250ce:	(bad)  
   1400250cf:	dec    DWORD PTR [rcx-0x35]
   1400250d2:	cmp    edi,edi
   1400250d4:	pop    rax
   1400250d5:	sar    DWORD PTR [rip+0x50b48eff],1        # 0x190b6dfda
   1400250db:	call   QWORD PTR [rbp-0x29006f6c]
   1400250e1:	iret   
   1400250e2:	retf   0xa5ff
   1400250e5:	popf   
   1400250e6:	cdq    
   1400250e7:	dec    DWORD PTR [rdx+0x72ff7e83]
   1400250ed:	ins    BYTE PTR es:[rdi],dx
   1400250ee:	push   0x6c6e71ff
   1400250f3:	push   QWORD PTR [rsi+0x74]
   1400250f6:	jae    0x1400250f7
   1400250f8:	test   DWORD PTR [rcx-0x6964007f],eax
   1400250fe:	(bad)  
   1400250ff:	call   QWORD PTR [rdi-0x6b007c72]
   140025105:	(bad)  
   140025109:	mov    edx,0xb1b2ffb4
   14002510e:	test   eax,0xa7aeaeff
   140025113:	jmp    FWORD PTR [rbp-0x54005a53]
   140025119:	stos   DWORD PTR es:[rdi],eax
   14002511a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002511b:	jmp    FWORD PTR [rcx-0x57005d57]
   140025121:	test   al,0xa1
   140025123:	jmp    FWORD PTR [rax-0x57005e58]
   140025129:	test   al,0xa0
   14002512b:	jmp    QWORD PTR [rdi-0x58006059]
   140025131:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140025132:	lahf   
   140025133:	jmp    QWORD PTR [rbp-0x4800615b]
   140025139:	mov    bh,0xaf
   14002513b:	inc    DWORD PTR [rax]
	...
   140025159:	add    BYTE PTR [rax],al
   14002515b:	add    al,cl
   14002515d:	(bad)  
   14002515e:	rex.WXB push r9
   140025160:	mov    ebx,0x9fff4d61
   140025165:	push   rbx
   140025166:	rex.W jmp QWORD PTR [rax-0x5900bab3]
   14002516d:	ins    DWORD PTR es:[rdi],dx
   14002516e:	push   rsi
   14002516f:	jmp    FWORD PTR [rax-0x59]
   140025172:	rex.W (bad) 
   140025174:	cmp    bh,BYTE PTR [rcx-0x5bb200cc]
   14002517a:	inc    DWORD PTR ss:[rcx-0x67]
   14002517e:	xor    bh,bh
   140025180:	(bad)  
   140025181:	sahf   
   140025182:	(bad)  
   140025183:	jmp    FWORD PTR [rdi]
   140025185:	lahf   
   140025186:	and    eax,0x249e31ff
   14002518b:	push   QWORD PTR [rip+0x3aff24a3]        # 0x17b017634
   140025191:	mov    cl,0x28
   140025193:	(bad)  
   140025194:	cmp    eax,ebx
   140025196:	sub    al,0xff
   140025198:	push   rbp
   140025199:	ret    
   14002519a:	cmp    edi,edi
   14002519c:	mov    cs,WORD PTR [rbp-0x5a560077]
   1400251a2:	movabs eax,ds:0x81878fff8f9095ff
   1400251ab:	dec    DWORD PTR [rdx-0x6d00877d]
   1400251b1:	xchg   DWORD PTR [rdi+rdi*8-0x67],edi
   1400251b5:	pop    QWORD PTR [rcx-0x7b6c6101]
   1400251bb:	jmp    QWORD PTR [rdi-0x6b007466]
   1400251c1:	xchg   DWORD PTR [rbp-0x1],esi
   1400251c4:	(bad)
   1400251c8:	mov    dh,0xb6
   1400251ca:	mov    dl,0xff
   1400251cc:	lods   eax,DWORD PTR ds:[rsi]
   1400251cd:	lods   eax,DWORD PTR ds:[rsi]
   1400251ce:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400251cf:	jmp    FWORD PTR [rdx-0x56005b56]
   1400251d5:	test   al,0xa1
   1400251d7:	jmp    FWORD PTR [rax-0x59006058]
   1400251dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400251de:	sahf   
   1400251df:	jmp    QWORD PTR [rbp-0x5b00625b]
   1400251e5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400251e6:	popf   
   1400251e7:	jmp    QWORD PTR [rsp+riz*4-0x5b5b0063]
   1400251ee:	pushf  
   1400251ef:	jmp    QWORD PTR [rbp-0x5d00635d]
   1400251f5:	movabs eax,ds:0xffacb3b4ff9a
	...
   140025216:	add    BYTE PTR [rax],al
   140025218:	mov    ah,0x52
   14002521a:	rex
   14002521b:	rex.XB stos BYTE PTR es:[rdi],al
   14002521d:	pop    rax
   14002521e:	rex.RB jmp QWORD PTR [r8-0x5b00baad]
   140025225:	rex.WRXB
   140025226:	rex.RB jmp FWORD PTR [r15+0x5fff5669]
   14002522d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002522e:	jmp    QWORD PTR [r9+r13*4]
   140025232:	sub    edi,edi
   140025234:	sub    ecx,DWORD PTR [rdi-0x77d500d9]
   14002523a:	and    edi,edi
   14002523c:	(bad)  
   14002523d:	mov    WORD PTR [rax],ds
   14002523f:	call   FWORD PTR [rdi]
   140025241:	nop
   140025242:	(bad)  
   140025243:	call   FWORD PTR [rsi]
   140025245:	xchg   edx,eax
   140025246:	adc    edi,edi
   140025248:	and    DWORD PTR [rbx-0x69d900ed],edx
   14002524e:	adc    eax,0x19a227ff
   140025253:	jmp    FWORD PTR [rbx+rbp*4]
   140025256:	sbb    bh,bh
   140025258:	sub    DWORD PTR [rdi-0x716e00e1],esi
   14002525e:	mov    edi,edi
   140025260:	enter  0xbcbf,0xff
   140025264:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140025265:	pushf  
   140025266:	cdq    
   140025267:	inc    DWORD PTR [rbp+0x7aff7d80]
   14002526d:	jne    0x1400252e0
   14002526f:	inc    DWORD PTR [rcx-0x7b008886]
   140025275:	jg     0x1400252f3
   140025277:	call   QWORD PTR [rcx-0x5a007774]
   14002527d:	movabs eax,ds:0x9399ff97a1a8ff9c
   140025286:	mov    edi,edi
   140025288:	mov    al,0xb1
   14002528a:	stos   DWORD PTR es:[rdi],eax
   14002528b:	jmp    FWORD PTR [rax-0x58005c56]
   140025291:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140025292:	lahf   
   140025293:	jmp    QWORD PTR [rsi-0x5b00615a]
   140025299:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002529a:	pushf  
   14002529b:	jmp    QWORD PTR [rbx-0x5f00635d]
   1400252a1:	movabs al,ds:0x9e9fff99a0a1ff9a
   1400252aa:	cwde   
   1400252ab:	call   FWORD PTR [rdi-0x60006762]
   1400252b1:	sahf   
   1400252b2:	cwde   
   1400252b3:	call   FWORD PTR [rbp-0x4f006863]
   1400252b9:	scas   eax,DWORD PTR es:[rdi]
   1400252ba:	test   al,0xff
	...
   1400252d4:	mov    eax,0xad0d4154
   1400252d9:	pop    rax
   1400252da:	rex.RX (bad) 
   1400252dc:	movabs ds:0xb3ff4954a8ff4956,al
   1400252e5:	pop    rbx
   1400252e6:	push   rsp
   1400252e7:	inc    DWORD PTR [rdx+0x2bff4f95]
   1400252ed:	lahf   
   1400252ee:	sub    edi,edi
   1400252f0:	(bad)  
   1400252f1:	and    DWORD PTR [rdx],0xffffffff
   1400252f4:	(bad)  
   1400252f5:	jl     0x14002530d
   1400252f7:	call   QWORD PTR [rip+0x18ff0f7e]        # 0x15901627b
   1400252fd:	(bad)  
   1400252fe:	(bad)  
   1400252ff:	call   FWORD PTR [rbx]
   140025301:	adc    BYTE PTR [rax],0xff
   140025304:	(bad)  
   140025305:	mov    BYTE PTR [rcx],dl
   140025307:	jmp    QWORD PTR [rax]
   140025309:	xchg   esp,eax
   14002530a:	adc    al,0xff
   14002530c:	sbb    eax,0x1eff1398
   140025311:	movabs al,ds:0xb515ff15a61eff14
   14002531a:	adc    eax,0x888b8cff
   14002531f:	call   FWORD PTR [rdx-0x6d006f6a]
   140025325:	xchg   ecx,eax
   140025326:	mov    edi,edi
   140025328:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140025329:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002532a:	pushf  
   14002532b:	call   FWORD PTR [rsp+rbx*4-0x4b49006d]
   140025332:	stos   BYTE PTR es:[rdi],al
   140025333:	dec    edx
   140025335:	enter  0xffbc,0xd5
   140025339:	(bad)  
   14002533a:	enter  0xdbff,0xd9
   14002533e:	retf   
   14002533f:	call   rax
   140025341:	(bad)  
   140025342:	sar    bh,0xa1
   140025345:	movabs al,ds:0xa7a6ffa0a7a7ff98
   14002534e:	sahf   
   14002534f:	jmp    QWORD PTR [rsp+riz*4-0x5c5c0063]
   140025356:	pushf  
   140025357:	jmp    QWORD PTR [rax-0x61006660]
   14002535d:	sahf   
   14002535e:	cwde   
   14002535f:	call   FWORD PTR [rbp-0x63006863]
   140025365:	pushf  
   140025366:	xchg   esp,eax
   140025367:	call   FWORD PTR [rbx+rbx*4-0x6564006c]
   14002536e:	xchg   ebx,eax
   14002536f:	call   FWORD PTR [rbx-0x65006c65]
   140025375:	(bad)  
   140025376:	xchg   ecx,eax
   140025377:	jmp    FWORD PTR [rbx+rbp*4+0xffa4]
	...
   140025392:	add    BYTE PTR [rax],al
   140025394:	mov    dl,0x54
   140025396:	rex movabs eax,ds:0xff4550a6ff4653a2
   1400253a0:	scas   eax,DWORD PTR es:[rdi]
   1400253a1:	push   rcx
   1400253a2:	rex.WB call FWORD PTR [r10+0x35ff5681]
   1400253a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400253aa:	xor    bh,bh
   1400253ac:	(bad)  
   1400253ad:	sbb    DWORD PTR [rbx],0x10731aff
   1400253b3:	call   QWORD PTR [rbx]
   1400253b5:	jnp    0x1400253c2
   1400253b7:	call   FWORD PTR [rcx]
   1400253b9:	(bad)  
   1400253ba:	adc    bh,bh
   1400253bc:	sbb    eax,DWORD PTR [rdx-0x7ae400ee]
   1400253c2:	adc    bh,bh
   1400253c4:	sbb    eax,0x20ff1392
   1400253c9:	cwde   
   1400253ca:	(bad)  
   1400253cb:	jmp    QWORD PTR [rsi]
   1400253cd:	xchg   esi,eax
   1400253ce:	sbb    eax,0x299b41ff
   1400253d3:	jmp    QWORD PTR [rdi-0x6d]
   1400253d6:	push   QWORD PTR ss:[rsi+rcx*4+0x39]
   1400253db:	call   QWORD PTR [rax-0x7470]
   1400253e1:	(bad)  
   1400253e2:	out    0xff,eax
   1400253e4:	jmp    0x11a0224ce
   1400253e9:	xlat   BYTE PTR ds:[rbx]
   1400253ea:	(bad)  
   1400253ed:	rol    cl,cl
   1400253ef:	call   rsi
   1400253f1:	(bad)  
   1400253f2:	ret    
   1400253f3:	call   rbp
   1400253f5:	rol    bl,1
   1400253f7:	(bad)  
   1400253f8:	fcom   st(6)
   1400253fa:	enter  0xd9ff,0xd9
   1400253fe:	retf   
   1400253ff:	dec    esp
   140025401:	retf   
   140025402:	mov    esp,0x949c9fff
   140025407:	jmp    QWORD PTR [rdx+riz*4-0x5e5c0062]
   14002540e:	(bad)  
   14002540f:	jmp    QWORD PTR [rcx-0x6000655f]
   140025415:	lahf   
   140025416:	cwde   
   140025417:	call   FWORD PTR [rbp-0x64006863]
   14002541d:	fwait
   14002541e:	xchg   esp,eax
   14002541f:	call   FWORD PTR [rdx-0x66006d66]
   140025425:	(bad)  
   140025426:	xchg   ecx,eax
   140025427:	call   FWORD PTR [rcx-0x67006e68]
   14002542d:	xchg   edi,eax
   14002542e:	xchg   ecx,eax
   14002542f:	call   FWORD PTR [rax-0x68006f68]
   140025435:	xchg   edi,eax
   140025436:	(bad)  
   140025437:	jmp    FWORD PTR [rax-0x67005f59]
   14002543d:	cwde   
   14002543e:	xchg   edx,eax
   14002543f:	add    DWORD PTR [rax],eax
	...
   14002544d:	add    BYTE PTR [rax],al
   14002544f:	add    BYTE PTR [rcx-0x63c1c9b7],dh
   140025455:	rex.B (bad) 
   140025457:	call   QWORD PTR [rbp-0x5c00d2c6]
   14002545d:	cmp    ch,BYTE PTR [rip+0x3441a8ff]        # 0x17443fd62
   140025463:	dec    DWORD PTR [rbx+rcx*4+0x2a]
   140025467:	inc    DWORD PTR [rsi]
   140025469:	pushf  
   14002546a:	adc    bh,bh
   14002546c:	adc    eax,0x14ff0c6f
   140025471:	jp     0x14002547e
   140025473:	call   QWORD PTR [rdi]
   140025475:	mov    edx,DWORD PTR [rdx]
   140025477:	call   FWORD PTR [rbx]
   140025479:	xchg   edx,eax
   14002547a:	adc    edi,edi
   14002547c:	(bad)  
   14002547d:	xchg   edx,eax
   14002547e:	adc    edi,edi
   140025480:	sbb    bl,BYTE PTR [rsp+rdx*1+0x12aa12ff]
   140025487:	call   QWORD PTR [rdx]
   140025489:	mov    cl,0x14
   14002548b:	inc    DWORD PTR [rbp-0x4b00bf7c]
   140025491:	push   rsp
   140025492:	push   QWORD PTR ds:[rbx-0x4600cbb9]
   140025499:	xor    r15d,r15d
   14002549c:	xchg   ecx,eax
   14002549d:	xchg   ecx,eax
   14002549e:	(bad)  
   14002549f:	(bad)  
   1400254a0:	(bad)  
   1400254a1:	push   rdi
   1400254a3:	push   rdx
   1400254a5:	out    dx,al
   1400254a6:	fdivr  st,st(7)
   1400254a8:	fcmovnu st,st(0)
   1400254aa:	enter  0xc9ff,0xc6
   1400254ae:	mov    eax,0xaeb9b9ff
   1400254b3:	(bad)  
   1400254b4:	mov    eax,0xb9ffadb7
   1400254b9:	mov    ecx,0xc0beffaf
   1400254be:	mov    dh,0xff
   1400254c0:	ret    
   1400254c1:	shl    BYTE PTR [rbp-0x6d656201],0xff
   1400254c8:	lahf   
   1400254c9:	lahf   
   1400254ca:	fwait
   1400254cb:	call   FWORD PTR [rdi-0x62006862]
   1400254d1:	popf   
   1400254d2:	xchg   edi,eax
   1400254d3:	call   FWORD PTR [rsp+rbx*4-0x6565006c]
   1400254da:	xchg   ebx,eax
   1400254db:	call   FWORD PTR [rax-0x68006f68]
   1400254e1:	xchg   edi,eax
   1400254e2:	nop
   1400254e3:	call   QWORD PTR [rsi-0x6b00716a]
   1400254e9:	xchg   ebp,eax
   1400254ea:	(bad)  
   1400254eb:	call   QWORD PTR [rsp+rdx*4-0x6b6b0073]
   1400254f2:	(bad)  
   1400254f3:	call   QWORD PTR [rcx-0x59007570]
   1400254f9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400254fa:	popf   
   1400254fb:	call   QWORD PTR [rsp+rdx*4+0x190]
	...
   14002550e:	add    BYTE PTR [rax],al
   140025510:	test   al,0x43
   140025512:	(bad)  
   140025513:	lods   al,BYTE PTR ds:[rsi]
   140025514:	xchg   ecx,eax
   140025515:	xor    eax,0x3797ff2a
   14002551a:	sub    edi,edi
   14002551c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002551d:	cmp    ch,BYTE PTR [rdi+rdi*8]
   140025520:	lods   eax,DWORD PTR ds:[rsi]
   140025521:	cmp    ch,BYTE PTR [rsi]
   140025523:	jmp    QWORD PTR [rdx+0x69]
   140025526:	(bad)  
   140025527:	inc    DWORD PTR [rsi]
   140025529:	xchg   ebp,eax
   14002552a:	or     bh,bh
   14002552c:	(bad)  
   14002552d:	mov    BYTE PTR [rcx],cl
   14002552f:	call   QWORD PTR [rdi]
   140025531:	mov    DWORD PTR [rax],edx
   140025533:	call   FWORD PTR [rsp+rdx*4]
   140025536:	adc    eax,0x13a71cff
   14002553b:	call   QWORD PTR [rbx]
   14002553d:	mov    ah,0x16
   14002553f:	dec    DWORD PTR [rdi]
   140025541:	mov    edx,0xbd14ff18
   140025546:	sbb    al,0xff
   140025548:	cmp    BYTE PTR [rbx+0x60a3ff31],dh
   14002554e:	ds inc ebp
   140025551:	cmp    DWORD PTR [rdi],ebp
   140025553:	inc    edi
   140025555:	ds (bad) 
   140025557:	inc    edx
   140025559:	rex.X xor edi,edi
   14002555c:	xchg   ebx,eax
   14002555d:	xchg   ebx,eax
   14002555e:	(bad)  
   14002555f:	(bad)  
   140025560:	(bad)  
   140025562:	iret   
   140025563:	jmp    QWORD PTR [rdx-0x7f006761]
   140025569:	jge    0x1400255e6
   14002556b:	push   QWORD PTR [rcx+0x6f]
   14002556e:	ins    DWORD PTR es:[rdi],dx
   14002556f:	push   QWORD PTR [rdx+0x6e]
   140025572:	ins    BYTE PTR es:[rdi],dx
   140025573:	(bad)  
   140025574:	jl     0x1400255f0
   140025576:	jbe    0x140025577
   140025578:	mov    WORD PTR [rax-0x6660007e],cs
   14002557e:	xchg   ecx,eax
   14002557f:	jmp    QWORD PTR [rax+0x7eff8895]
   140025585:	jp     0x1400255fa
   140025587:	jmp    QWORD PTR [rbx-0x63005f5b]
   14002558d:	sahf   
   14002558e:	xchg   esp,eax
   14002558f:	call   FWORD PTR [rdx-0x66006b66]
   140025595:	cwde   
   140025596:	xchg   ecx,eax
   140025597:	call   QWORD PTR [rdi-0x6a007069]
   14002559d:	xchg   ebp,eax
   14002559e:	(bad)  
   14002559f:	call   QWORD PTR [rdx-0x6d00726d]
   1400255a5:	xchg   edx,eax
   1400255a6:	mov    edi,edi
   1400255a8:	nop
   1400255a9:	xchg   ecx,eax
   1400255aa:	mov    bh,bh
   1400255ac:	xchg   ecx,eax
   1400255ad:	nop
   1400255ae:	mov    edi,edi
   1400255b0:	xchg   ecx,eax
   1400255b1:	(bad)  
   1400255b5:	lea    eax,[rsi-0x665e5d01]
   1400255bb:	call   QWORD PTR [rdx+0x18f92]
	...
   1400255c9:	add    BYTE PTR [rax],al
   1400255cb:	add    BYTE PTR [rdx-0x67dfd0be],dh
   1400255d1:	cmp    ebp,DWORD PTR [rdx]
   1400255d3:	dec    DWORD PTR [rsp+rsi*1+0x3699ff27]
   1400255da:	sub    edi,edi
   1400255dc:	test   eax,0xb8ff2e3a
   1400255e1:	ss sub al,0xff
   1400255e4:	test   al,0x38
   1400255e6:	jmp    FWORD PTR cs:[rax]
   1400255e9:	mov    ds,WORD PTR [rcx]
   1400255eb:	inc    DWORD PTR [rsp+rdi*4]
   1400255ee:	or     eax,0xf990dff
   1400255f3:	call   FWORD PTR [rax]
   1400255f5:	movabs eax,ds:0xde11ff18cc0bff16
   1400255fe:	(bad)  
   1400255ff:	call   FWORD PTR [rax+rbp*4+0x3e]
   140025603:	call   QWORD PTR [rsp+rsi*2+0x5ea4ff3d]
   14002560a:	cmp    edi,edi
   14002560c:	mov    bh,0x43
   14002560e:	xor    bh,bh
   140025610:	retf   
   140025611:	rex.RXB xor r15d,r15d
   140025614:	retf   
   140025615:	rex.WX xor rdi,rdi
   140025618:	leave  
   140025619:	xor    edi,r15d
   14002561c:	xchg   ecx,eax
   14002561d:	xchg   ecx,eax
   14002561e:	mov    ?,edi
   140025620:	ror    dh,cl
   140025622:	enter  0xbfff,0xba
   140025626:	mov    bh,0xff
   140025628:	mov    cl,0xa8
   14002562a:	movabs eax,ds:0x80909dff87949fff
   140025633:	jmp    QWORD PTR [rax-0x5c007d6d]
   140025639:	xchg   esi,eax
   14002563a:	test   edi,edi
   14002563c:	test   eax,0x91ff889c
   140025641:	xchg   BYTE PTR [rbx-0x1],dh
   140025644:	je     0x1400256b4
   140025646:	push   0xffffffffa0a5a5ff
   14002564b:	call   FWORD PTR [rbx-0x67006c67]
   140025651:	xchg   edi,eax
   140025652:	nop
   140025653:	call   QWORD PTR [rsi-0x6c00716c]
   140025659:	xchg   ebx,eax
   14002565a:	mov    edi,?
   14002565c:	xchg   ecx,eax
   14002565d:	xchg   ecx,eax
   14002565e:	mov    bh,bh
   140025660:	nop
   140025661:	nop
   140025662:	mov    edi,edi
   140025664:	mov    cs,WORD PTR [rsi-0x72710079]
   14002566a:	xchg   bh,bh
   14002566c:	mov    cs,WORD PTR [rsi-0x7272007a]
   140025672:	xchg   bh,bh
   140025674:	mov    cl,BYTE PTR [rdx-0x6261007d]
   14002567a:	xchg   ebp,eax
   14002567b:	dec    DWORD PTR [rsi+0x18b8e]
	...
   140025689:	add    BYTE PTR [rax],al
   14002568b:	add    BYTE PTR [rcx-0x75a9d3c2],ch
   140025691:	xor    ah,BYTE PTR [rip+0x25338fff]        # 0x16535e696
   140025697:	call   FWORD PTR [rbx-0x5600d6cb]
   14002569d:	cmp    DWORD PTR [rcx],ebp
   14002569f:	push   QWORD PTR [rsi-0x5500cfbf]
   1400256a5:	rex.WX xor al,0xff
   1400256a8:	rex.WRXB (bad) 
   1400256aa:	(bad)  
   1400256ab:	call   FWORD PTR [rdx]
   1400256ad:	mov    dh,0x1f
   1400256af:	jmp    FWORD PTR [rax]
   1400256b1:	lods   al,BYTE PTR ds:[rsi]
   1400256b2:	jmp    FWORD PTR es:[rsi]
   1400256b5:	lods   al,BYTE PTR ds:[rsi]
   1400256b6:	and    eax,0x38b647ff
   1400256bb:	push   QWORD PTR [rbp-0x60]
   1400256be:	rex.WX push QWORD PTR [rax+r11*2+0x52ccff40]
   1400256c6:	cmp    bh,bh
   1400256c8:	rcr    DWORD PTR [rcx+0x3c],cl
   1400256cb:	call   rbx
   1400256cd:	(bad)  
   1400256ce:	rex call rdx
   1400256d1:	(bad)  
   1400256d2:	dec    r15d
   1400256d5:	pop    rdx
   1400256d6:	notrack call rax
   1400256d9:	push   rbx
   1400256da:	cmp    bh,bh
   1400256dc:	xchg   edx,eax
   1400256dd:	xchg   edx,eax
   1400256de:	mov    ?,edi
   1400256e0:	(bad)  
   1400256e1:	ror    esp,cl
   1400256e3:	push   QWORD PTR [rbx-0x5e005451]
   1400256e9:	popf   
   1400256ea:	cwde   
   1400256eb:	dec    DWORD PTR [rsi-0x79007b78]
   1400256f1:	cmp    BYTE PTR [rdi+rdi*8-0x79],0x80
   1400256f6:	jge    0x1400256f7
   1400256f8:	lea    ecx,[rcx-0x6862007d]
   1400256fe:	mov    ?,edi
   140025700:	xchg   edi,eax
   140025701:	mov    es,WORD PTR [rcx+0x6a7176ff]
   140025707:	jmp    QWORD PTR [rbx-0x6600625c]
   14002570d:	xchg   edi,eax
   14002570e:	xchg   ecx,eax
   14002570f:	call   QWORD PTR [rsi-0x6d00716a]
   140025715:	xchg   edx,eax
   140025716:	mov    edi,?
   140025718:	xchg   ecx,eax
   140025719:	xchg   ecx,eax
   14002571a:	mov    edi,edi
   14002571c:	(bad)  
   14002571d:	pop    QWORD PTR [rdi-0x79717101]
   140025723:	dec    DWORD PTR [rsp+rcx*4-0x7574007b]
   14002572a:	cmp    edi,0xffffff8b
   14002572d:	mov    eax,DWORD PTR [rdx-0x7c747501]
   140025733:	inc    DWORD PTR [rsi-0x6500807a]
   140025739:	(bad)  
   14002573a:	xchg   edx,eax
   14002573b:	dec    DWORD PTR [rsi+0x28b8d]
	...
   140025749:	add    BYTE PTR [rax],al
   14002574b:	add    BYTE PTR [rax-0x7f7bd5c2],ah
   140025751:	sub    ah,BYTE PTR [rcx]
   140025753:	dec    DWORD PTR [rdi-0x6300d9d0]
   140025759:	xor    ah,BYTE PTR [rsi]
   14002575b:	jmp    QWORD PTR [rbp-0x5d00d2c4]
   140025761:	pop    rsi
   140025762:	cmp    eax,0x3e6c96ff
   140025767:	call   FWORD PTR [rbp+rbx*2+0x728fff39]
   14002576e:	cmp    al,0xff
   140025770:	fwait
   140025771:	add    DWORD PTR [rsi-0x1],0xff3b749b
   140025778:	shl    DWORD PTR [rax+rax*2-0x1],0xc8
   14002577d:	movsxd edi,DWORD PTR [rip+0x3765cfff]        # 0x177682782
   140025783:	(bad)  
   140025784:	fbstp  TBYTE PTR [rsi+0x40]
   140025787:	(bad)  
   140025788:	fidivr WORD PTR [rcx+0x45]
   14002578b:	(bad)  
   14002578c:	(bad)  [rdi+0x45]
   14002578f:	call   rdi
   140025791:	je     0x1400257d9
   140025793:	call   rbp
   140025795:	outs   dx,DWORD PTR ds:[rsi]
   140025796:	rex.RB call r10
   140025799:	push   0x43
   14002579b:	dec    DWORD PTR [rdi-0x3b007471]
   1400257a1:	sar    DWORD PTR [rbx-0x514c4801],0xff
   1400257a8:	mov    ah,0xaf
   1400257aa:	stos   BYTE PTR es:[rdi],al
   1400257ab:	push   QWORD PTR [rax-0x5b006259]
   1400257b1:	(bad)  
   1400257b2:	mov    edi,?
   1400257b4:	movabs ds:0xacff8d9ea7ff8a99,eax
   1400257bd:	movabs eax,ds:0x7075ff798b97ff90
   1400257c6:	imul   edi,edi,0xff9ca1a1
   1400257cc:	xchg   ebp,eax
   1400257cd:	xchg   esi,eax
   1400257ce:	(bad)  
   1400257cf:	call   QWORD PTR [rdx-0x6f00746e]
   1400257d5:	nop
   1400257d6:	mov    bh,bh
   1400257d8:	mov    cs,WORD PTR [rsi-0x73730079]
   1400257de:	test   edi,edi
   1400257e0:	mov    cl,BYTE PTR [rdx-0x7576007e]
   1400257e6:	(bad)  
   1400257e7:	dec    DWORD PTR [rax-0x78007e78]
   1400257ed:	xchg   DWORD PTR [rax+0x7f8787ff],eax
   1400257f3:	inc    DWORD PTR [rbx+rax*4-0x68670085]
   1400257fa:	mov    ?,edi
   1400257fc:	lea    ecx,[rdx+rcx*4+0x3]
	...
   14002580b:	add    BYTE PTR [rcx-0x7f51d4c5],bl
   140025811:	sub    DWORD PTR [rdi],ebx
   140025813:	dec    DWORD PTR [rsi-0x6200dad3]
   140025819:	sub    eax,0x5090ff25
   14002581e:	(bad)  
   14002581f:	inc    DWORD PTR [rbx-0x4500c18b]
   140025825:	pop    rsp
   140025826:	cmp    edi,edi
   140025828:	rcr    DWORD PTR [rbx+0x2f],1
   14002582b:	call   rsp
   14002582d:	(bad)  
   14002582e:	xor    al,0xff
   140025830:	xlat   BYTE PTR ds:[rbx]
   140025831:	data16 xor al,0xff
   140025834:	fldcw  WORD PTR [rbx+0x32]
   140025837:	(bad)  
   140025838:	fbstp  TBYTE PTR [rbp+0x35]
   14002583b:	jmp    rbx
   14002583d:	jg     0x140025876
   14002583f:	jmp    rsp
   140025841:	xchg   DWORD PTR [rdi+rdi*8],edi
   140025844:	loop   0x1400257d1
   140025846:	cmp    eax,0x408ae0ff
   14002584b:	jmp    rax
   14002584d:	mov    BYTE PTR [rdi+rdi*8-0x22],al
   140025851:	(bad)  
   140025852:	rex.RXB (bad) 
   140025854:	fdivr  QWORD PTR [rax+rcx*2-0x1]
   140025858:	fnstcw WORD PTR [rcx+0x48]
   14002585b:	call   QWORD PTR [rsi-0x5006d6a]
   140025861:	imul   dh
   140025863:	dec    ebx
   140025865:	mov    edx,0xa9aeb2ff
   14002586b:	jmp    QWORD PTR [rax-0x73006d66]
   140025871:	xchg   DWORD PTR [rdi-0x1],edi
   140025874:	xchg   DWORD PTR [rcx-0x746e0083],eax
   14002587a:	test   bh,bh
   14002587c:	sahf   
   14002587d:	xchg   edi,eax
   14002587e:	xchg   ecx,eax
   14002587f:	call   FWORD PTR [rax+0x76ff838e]
   140025885:	jb     0x1400258f1
   140025887:	call   FWORD PTR [rdi-0x6d006461]
   14002588d:	xchg   edx,eax
   14002588e:	(bad)  
   14002588f:	call   QWORD PTR [rax-0x71007770]
   140025895:	mov    es,WORD PTR [rsi-0x7b737301]
   14002589b:	dec    DWORD PTR [rdx-0x77007e77]
   1400258a1:	mov    BYTE PTR [rax+0x7f8686ff],al
   1400258a7:	inc    DWORD PTR [rsi-0x7b00807a]
   1400258ad:	test   DWORD PTR [rbp-0x1],edi
   1400258b0:	test   BYTE PTR [rsp+rdi*2+0x798181ff],al
   1400258b7:	call   QWORD PTR [rsp+rdx*4-0x74720075]
   1400258be:	mov    DWORD PTR [rip+0x0],eax        # 0x1400258c4
	...
   1400258cc:	xchg   edx,eax
   1400258cd:	cmp    DWORD PTR [rax],ebp
   1400258cf:	int    0x83
   1400258d1:	es (bad) 
   1400258d3:	dec    DWORD PTR [rbp-0x6400deda]
   1400258d9:	cmp    BYTE PTR [rsi],ch
   1400258db:	jmp    QWORD PTR [rbp-0x77]
   1400258de:	xor    bh,bh
   1400258e0:	imul   ecx,DWORD PTR [rax+0x5dcdff35],0x30
   1400258e7:	jmp    rbp
   1400258e9:	je     0x14002591b
   1400258eb:	call   rbp
   1400258ed:	jbe    0x14002591f
   1400258ef:	inc    edi
   1400258f1:	(bad)  
   1400258f2:	(bad)  
   1400258f3:	call   rbp
   1400258f5:	mov    es,WORD PTR [rdi+rdi*8-0x21]
   1400258f9:	xchg   esp,eax
   1400258fa:	rex jmp rbp
   1400258fd:	xchg   ebp,eax
   1400258fe:	xor    eax,0x3b99e9ff
   140025903:	(bad)  
   140025904:	call   0x12a0196a4
   140025909:	cwde   
   14002590a:	rex jmp rsi
   14002590d:	xchg   ebp,eax
   14002590e:	rex.X jmp rsp
   140025911:	nop
   140025912:	rex.XB jmp r9
   140025915:	mov    al,BYTE PTR [rdi-0x1]
   140025918:	fld    QWORD PTR [rdx-0x717100b6]
   14002591e:	mov    edi,edi
   140025920:	sar    BYTE PTR [rax+rdi*4-0x59575301],0xff
   140025928:	test   eax,0x9effa3a7
   14002592d:	fwait
   14002592e:	xchg   ebp,eax
   14002592f:	call   QWORD PTR [rsi-0x70007870]
   140025935:	xchg   DWORD PTR [rbp-0x1],edi
   140025938:	xchg   esp,eax
   140025939:	mov    edi,DWORD PTR [rdi-0x1]
   14002593c:	movabs ds:0x75ff7b8b96ff8c98,al
   140025945:	jo     0x1400259b0
   140025947:	call   FWORD PTR [rbp-0x70006663]
   14002594d:	(bad)  
   140025951:	mov    es,WORD PTR [rsi-0x7a737301]
   140025957:	dec    DWORD PTR [rdx-0x77007e77]
   14002595d:	test   DWORD PTR [rdi-0x1],edi
   140025960:	test   DWORD PTR [rbp-0x7b7a0081],eax
   140025966:	jle    0x140025967
   140025968:	add    DWORD PTR [rbx-0x7d7c0085],0x7a
   14002596f:	inc    DWORD PTR [rdx+0x7eff7982]
   140025975:	jg     0x1400259ed
   140025977:	call   QWORD PTR [rcx-0x7300776f]
   14002597d:	mov    al,BYTE PTR [rdi+0x7]
	...
   14002598b:	add    BYTE PTR [rbx+rsi*1+0x2385e325],cl
   140025992:	(bad)  
   140025993:	call   FWORD PTR [rdx+0x57ff3139]
   140025999:	test   DWORD PTR [rcx],ebp
   14002599b:	dec    DWORD PTR [rsi-0x67]
   14002599e:	sub    eax,0x3459abff
   1400259a3:	dec    ebp
   1400259a5:	movsxd ebp,DWORD PTR [rdx]
   1400259a7:	dec    edi
   1400259a9:	test   DWORD PTR [rdi],edi
   1400259ab:	dec    edx
   1400259ad:	xchg   ebp,eax
   1400259ae:	rex.WX inc rax
   1400259b1:	test   eax,0xa2d5ff5b
   1400259b6:	rex.WRXB jmp r14
   1400259b9:	lahf   
   1400259ba:	cmp    edi,edi
   1400259bc:	jmp    0x140025965
   1400259be:	(bad)  
   1400259bf:	push   rax
   1400259c1:	lods   al,BYTE PTR ds:[rsi]
   1400259c2:	cmp    bh,bh
   1400259c4:	out    dx,al
   1400259c5:	scas   al,BYTE PTR es:[rdi]
   1400259c6:	cmp    edi,edi
   1400259c8:	out    dx,al
   1400259c9:	stos   DWORD PTR es:[rdi],eax
   1400259ca:	rex (bad) 
   1400259cc:	in     eax,dx
   1400259cd:	test   al,0x3f
   1400259cf:	(bad)  
   1400259d0:	jmp    0x140025973
   1400259d2:	rex.X jmp rsi
   1400259d5:	cdq    
   1400259d6:	rex.R jmp rsp
   1400259d9:	xchg   ecx,eax
   1400259da:	rex.WB call QWORD PTR [r13-0x5006e6b]
   1400259e1:	imul   ch
   1400259e3:	jmp    rbp
   1400259e5:	loopne 0x1400259c0
   1400259e7:	call   rdi
   1400259e9:	ror    ah,cl
   1400259eb:	inc    edx
   1400259ed:	mov    ebx,0xa6afffb0
   1400259f2:	fwait
   1400259f3:	call   FWORD PTR [rdi-0x6400776b]
   1400259f9:	xchg   edx,eax
   1400259fa:	cmp    edi,0xffffffa3
   1400259fd:	xchg   edi,eax
   1400259fe:	xchg   edi,edi
   140025a00:	lea    edi,[rdi+0x71]
   140025a03:	jmp    FWORD PTR [rsi+0x6a]
   140025a06:	(bad)  
   140025a07:	call   FWORD PTR [rdx-0x71006b64]
   140025a0d:	pop    QWORD PTR [rsi-0x7b737301]
   140025a13:	dec    DWORD PTR [rdx-0x77007c75]
   140025a19:	mov    BYTE PTR [rax+0x7e8586ff],al
   140025a1f:	inc    DWORD PTR [rbx-0x7c00837d]
   140025a25:	cmp    DWORD PTR [rdx-0x1],0xffffff81
   140025a29:	cmp    DWORD PTR [rcx-0x1],0xff778080
   140025a30:	add    BYTE PTR [rax+0x7c7cff78],0x72
   140025a37:	dec    DWORD PTR [rdi-0x74007972]
   140025a3d:	mov    cl,BYTE PTR [rcx+0x8]
	...
   140025a4b:	add    BYTE PTR [rdi-0x7409decf],al
   140025a51:	cs (bad) 
   140025a53:	jmp    FWORD PTR [rbx+rdi*2+0x34]
   140025a57:	dec    DWORD PTR [rax-0x65]
   140025a5a:	sub    edi,edi
   140025a5c:	ins    DWORD PTR es:[rdi],dx
   140025a5d:	jl     0x140025a95
   140025a5f:	inc    ebx
   140025a61:	(bad)  
   140025a62:	cmp    al,0xff
   140025a64:	mov    edi,0xb1ff397c
   140025a69:	xchg   ebp,eax
   140025a6a:	dec    r14
   140025a6d:	xchg   esi,eax
   140025a6e:	rex.R jmp rdx
   140025a71:	movabs eax,ds:0xb5f2ff36a5e4ff3d
   140025a7a:	cmp    edi,edi
   140025a7c:	idiv   BYTE PTR [rsp+rdi*1+0x3ec2f6ff]
   140025a83:	push   rbp
   140025a85:	sar    BYTE PTR [rdi],0xff
   140025a88:	cmc    
   140025a89:	mov    ebp,0xb9f3ff41
   140025a8e:	(bad)  
   140025a8f:	push   rcx
   140025a91:	mov    dl,0x40
   140025a93:	(bad)  
   140025a94:	in     eax,dx
   140025a95:	test   eax,0xa1e9ff45
   140025a9a:	dec    QWORD PTR [r14-0x4a007472]
   140025aa1:	mov    dl,0xb0
   140025aa3:	dec    DWORD PTR [rsi-0x77007574]
   140025aa9:	xchg   DWORD PTR [rbp-0x77767401],eax
   140025aaf:	call   QWORD PTR [rdx-0x6000736f]
   140025ab5:	popf   
   140025ab6:	xchg   esi,eax
   140025ab7:	push   QWORD PTR [rcx-0x3d005a51]
   140025abd:	mov    ebp,0xb1b6ffb2
   140025ac2:	movabs ds:0x8e9593ff747a7dff,eax
   140025acb:	dec    DWORD PTR [rbp-0x75007a73]
   140025ad1:	mov    eax,DWORD PTR [rbx-0x7e767601]
   140025ad7:	inc    DWORD PTR [rbp-0x7c00817b]
   140025add:	test   BYTE PTR [rdi+rdi*8-0x7f],bh
   140025ae1:	(bad)  
   140025ae2:	jp     0x140025ae3
   140025ae4:	add    DWORD PTR [rcx+0x7f80ff78],0x7f7eff76
   140025aee:	jbe    0x140025aef
   140025af0:	jge    0x140025b6f
   140025af2:	jne    0x140025af3
   140025af4:	jns    0x140025b6f
   140025af6:	jb     0x140025af7
   140025af8:	mov    WORD PTR [rbx-0x7675007d],cs
   140025afe:	xchg   DWORD PTR [rcx],ecx
	...
   140025b0c:	xchg   esp,eax
   140025b0d:	xor    BYTE PTR [rsi],ah
   140025b0f:	cli    
   140025b10:	outs   dx,DWORD PTR ds:[rsi]
   140025b11:	pop    rcx
   140025b12:	sub    edi,edi
   140025b14:	(bad)  
   140025b15:	test   al,0x26
   140025b17:	call   FWORD PTR [rbx-0x5000c5b0]
   140025b1d:	push   rdi
   140025b1e:	cmp    edi,edi
   140025b20:	ret    
   140025b21:	js     0x140025b61
   140025b23:	inc    edx
   140025b25:	cwde   
   140025b26:	rex.WX call rbp
   140025b29:	popf   
   140025b2a:	rex.R jmp rsp
   140025b2d:	movabs ds:0xc7faff37bcf8ff31,al
   140025b36:	rex.B (bad) 
   140025b38:	cld    
   140025b39:	int    0x44
   140025b3b:	(bad)  
   140025b3c:	cld    
   140025b3d:	rol    DWORD PTR [rbx-0x1],1
   140025b40:	sti    
   140025b41:	rol    BYTE PTR [rbp-0x1],1
   140025b44:	sti    
   140025b45:	int    0x45
   140025b47:	(bad)  
   140025b48:	cli    
   140025b49:	retf   
   140025b4a:	rex.RB (bad) 
   140025b4c:	clc    
   140025b4d:	mov    BYTE PTR [rbx-0x1],0xf5
   140025b51:	mov    ebp,0xb6f2ff42
   140025b56:	rex.RB (bad) 
   140025b58:	out    dx,al
   140025b59:	lods   eax,DWORD PTR ds:[rsi]
   140025b5a:	rex.WX dec QWORD PTR [rbx-0x1c007675]
   140025b61:	in     eax,0xe0
   140025b63:	(bad)  
   140025b64:	fnstsw ax
   140025b66:	fdivr  st,st(7)
   140025b68:	loop   0x140025b4c
   140025b6a:	fcos   
   140025b6c:	loop   0x140025b4f
   140025b6e:	(bad)  
   140025b6f:	jmp    rdx
   140025b71:	(bad)  
   140025b73:	jmp    rax
   140025b75:	fadd   st(7),st
   140025b77:	(bad)  
   140025b78:	fstp   st(0)
   140025b7a:	ret    
   140025b7b:	jmp    rcx
   140025b7d:	fadd   st(5),st
   140025b7f:	call   rbp
   140025b81:	(bad)  
   140025b82:	mov    edx,0x8a9294ff
   140025b87:	dec    DWORD PTR [rbp-0x73007873]
   140025b8d:	mov    WORD PTR [rbx-0x7d767601],es
   140025b93:	inc    DWORD PTR [rdi-0x7b007f79]
   140025b99:	test   BYTE PTR [rdi+rdi*8-0x7e],bh
   140025b9d:	(bad)  
   140025b9e:	jns    0x140025b9f
   140025ba0:	add    BYTE PTR [rax+0x7f7fff78],0x77
   140025ba7:	(bad)  
   140025ba8:	jge    0x140025c27
   140025baa:	jne    0x140025bab
   140025bac:	jge    0x140025c2a
   140025bae:	jne    0x140025baf
   140025bb0:	jnp    0x140025c2d
   140025bb2:	je     0x140025bb3
   140025bb4:	ja     0x140025c2d
   140025bb6:	outs   dx,BYTE PTR ds:[rsi]
   140025bb7:	dec    DWORD PTR [rdx-0x74007e77]
   140025bbd:	mov    al,BYTE PTR [rdi+0xb]
	...
   140025bcb:	add    BYTE PTR [rdx+0x62d82b34],ah
   140025bd1:	jb     0x140025bfe
   140025bd3:	jmp    FWORD PTR [rcx+rbp*4]
   140025bd6:	and    edi,edi
   140025bd8:	lahf   
   140025bd9:	rex.RXB xor eax,0x2a53c4ff
   140025bdf:	(bad)  
   140025be0:	fdiv   DWORD PTR [rbp+0x2c]
   140025be3:	dec    esi
   140025be5:	pushf  
   140025be6:	rex.WR (bad) 
   140025be8:	mov    eax,0x2eff55a2
   140025bed:	mov    ?,WORD PTR [rdi-0x3b75e601]
   140025bf3:	dec    DWORD PTR [rdx]
   140025bf5:	xchg   ch,cl
   140025bf7:	dec    DWORD PTR [rdx]
   140025bf9:	test   ah,cl
   140025bfb:	dec    DWORD PTR [rdx]
   140025bfd:	test   bl,cl
   140025bff:	dec    DWORD PTR [rdx]
   140025c01:	test   dl,cl
   140025c03:	dec    DWORD PTR [rdx]
   140025c05:	or     edx,0xffffffff
   140025c08:	or     al,BYTE PTR [rdx-0x7ef50038]
   140025c0e:	(bad)  
   140025c0f:	dec    DWORD PTR [rdx]
   140025c11:	add    dh,0xff
   140025c14:	jno    0xd0585bde
   140025c1a:	fwait
   140025c1b:	call   QWORD PTR [rcx-0x736f]
   140025c21:	(bad)  
   140025c22:	(bad)  
   140025c23:	(bad)  
   140025c24:	cli    
   140025c25:	cld    
   140025c26:	lock (bad) 
   140025c28:	in     eax,dx
   140025c29:	lock in eax,0xff
   140025c2c:	out    0xe7,eax
   140025c2e:	(bad)  
   140025c30:	loope  0x140025c11
   140025c32:	sar    edi,1
   140025c34:	fcmovbe st,st(6)
   140025c36:	(bad)  
   140025c37:	call   rdi
   140025c39:	sar    DWORD PTR [rdi-0x3f2a2401],1
   140025c3f:	dec    ecx
   140025c41:	(bad)  
   140025c42:	scas   eax,DWORD PTR es:[rdi]
   140025c43:	dec    DWORD PTR [rdi-0x73007a73]
   140025c49:	lea    eax,[rsi-0x7b737401]
   140025c4f:	dec    DWORD PTR [rax-0x7a007f78]
   140025c55:	test   DWORD PTR [rsi-0x1],edi
   140025c58:	add    DWORD PTR [rbx-0x7e7e0085],0x79
   140025c5f:	inc    DWORD PTR [rax+0x7dff767f]
   140025c65:	jge    0x140025cdc
   140025c67:	(bad)  
   140025c68:	jl     0x140025ce5
   140025c6a:	jae    0x140025c6b
   140025c6c:	jnp    0x140025ce8
   140025c6e:	jb     0x140025c6f
   140025c70:	jp     0x140025ceb
   140025c72:	jb     0x140025c73
   140025c74:	jne    0x140025cec
   140025c76:	imul   edi,edi,0xffffff88
   140025c79:	xchg   DWORD PTR [rdi-0x1],edi
   140025c7c:	mov    DWORD PTR [rax+0xc86],ecx
	...
   140025c8a:	add    BYTE PTR [rax],al
   140025c8c:	stos   BYTE PTR es:[rdi],al
   140025c8d:	(bad)  
   140025c8e:	sub    al,0xb3
   140025c90:	jbe    0x140025cf2
   140025c92:	call   QWORD PTR cs:[rsi+rax*8]
   140025c96:	sbb    bh,bh
   140025c98:	mov    ch,BYTE PTR [rcx+0x38]
   140025c9b:	dec    esp
   140025c9d:	push   rdx
   140025c9e:	xor    bh,bh
   140025ca0:	(bad)  
   140025ca1:	outs   dx,BYTE PTR ds:[rsi]
   140025ca2:	xor    bh,bh
   140025ca4:	mov    esp,0xb8ff50a0
   140025ca9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140025caa:	push   rsi
   140025cab:	jmp    QWORD PTR [rsi]
   140025cad:	xchg   esi,eax
   140025cae:	(bad)  
   140025caf:	inc    DWORD PTR [rdx+0x79fffbde]
   140025cb5:	loope  0x140025cb6
   140025cb7:	push   QWORD PTR [rbp-0x1f]
   140025cba:	(bad)  
   140025cbb:	push   QWORD PTR [rcx-0x22]
   140025cbe:	(bad)  
   140025cbf:	push   QWORD PTR [rdx-0x24]
   140025cc2:	(bad)  
   140025cc3:	push   QWORD PTR [rdx-0x25]
   140025cc6:	(bad)  
   140025cc7:	push   QWORD PTR [rbp-0x27]
   140025cca:	(bad)  
   140025ccb:	jmp    FWORD PTR [rbp-0x2a]
   140025cce:	(bad)  
   140025ccf:	jmp    FWORD PTR [rbp-0x2a]
   140025cd2:	(bad)  
   140025cd3:	call   QWORD PTR [rbx+rax*8-0x3]
   140025cd7:	call   FWORD PTR [rax*4-0x71710042]
   140025cde:	mov    edi,edi
   140025ce0:	(bad)  
   140025ce1:	(bad)  
   140025ce2:	(bad)  
   140025ce3:	push   rdx
   140025ce5:	cmc    
   140025ce6:	jmp    0x140025ce7
   140025ce8:	jmp    0x1250241d9
   140025ced:	in     al,0xdc
   140025cef:	(bad)  
   140025cf0:	(bad)  
   140025cf2:	sar    bh,1
   140025cf4:	fcmovbe st,st(6)
   140025cf6:	(bad)  
   140025cf9:	rol    al,cl
   140025cfb:	(bad)  
   140025cfc:	fcmovbe st,st(3)
   140025cfe:	sar    bh,0xc8
   140025d01:	ret    0xffaf
   140025d04:	(bad)  
   140025d05:	lea    eax,[rdi+rdi*8-0x7a7474]
   140025d0c:	mov    ecx,DWORD PTR [rbx-0x7777007d]
   140025d12:	cmp    bh,0x85
   140025d15:	test   DWORD PTR [rsi-0x1],edi
   140025d18:	add    DWORD PTR [rbx-0x7f7f0085],0x78
   140025d1f:	(bad)  
   140025d20:	jle    0x140025da0
   140025d22:	jbe    0x140025d23
   140025d24:	jge    0x140025da3
   140025d26:	jne    0x140025d27
   140025d28:	jnp    0x140025da5
   140025d2a:	jb     0x140025d2b
   140025d2c:	jns    0x140025da7
   140025d2e:	jo     0x140025d2f
   140025d30:	js     0x140025daa
   140025d32:	jo     0x140025d33
   140025d34:	jae    0x140025da8
   140025d36:	imul   edi,edi,0xff7e8687
   140025d3c:	mov    al,BYTE PTR [rdi+0xd86]
	...
   140025d4a:	add    BYTE PTR [rax],al
   140025d4c:	lods   eax,DWORD PTR ds:[rsi]
   140025d4d:	cmp    DWORD PTR [rdi],ebp
   140025d4f:	jge    0x140025dca
   140025d51:	addr32 xor edi,edi
   140025d54:	adc    dh,cl
   140025d56:	sbb    bh,bh
   140025d58:	rex.R movabs ds:0xa170ff36867aff29,al
   140025d62:	cmp    bh,bh
   140025d64:	rex.WRB int 0x3e
   140025d67:	dec    DWORD PTR [rdi+rax*8-0x5a5100af]
   140025d6e:	outs   dx,DWORD PTR ds:[rsi]
   140025d6f:	call   FWORD PTR [rdx]
   140025d71:	movabs ds:0xd142fffbde82ffe0,al
   140025d7a:	(bad)  
   140025d7b:	jmp    QWORD PTR [rbx]
   140025d7d:	retf   0xffff
   140025d80:	sub    ecx,eax
   140025d82:	(bad)  
   140025d83:	jmp    FWORD PTR [rax]
   140025d85:	ret    0xffff
   140025d88:	and    bh,BYTE PTR [rdx-0x3ccd0001]
   140025d8e:	(bad)  
   140025d8f:	jmp    FWORD PTR [rbx]
   140025d91:	sar    bh,0xff
   140025d94:	push   rdi
   140025d95:	retf   
   140025d96:	std    
   140025d97:	dec    DWORD PTR [rdi]
   140025d99:	test   dl,cl
   140025d9b:	dec    DWORD PTR [rsi-0x7472]
   140025da1:	(bad)  
   140025da2:	(bad)  
   140025da3:	(bad)  
   140025da4:	stc    
   140025da5:	cld    
   140025da6:	hlt    
   140025da7:	push   rsp
   140025da9:	imul   esi
   140025dab:	(bad)  
   140025dac:	in     al,dx
   140025dad:	out    dx,al
   140025dae:	out    0xff,al
   140025db0:	in     eax,0xe4
   140025db2:	(bad)  
   140025db4:	fstp   st(3)
   140025db6:	retf   
   140025db7:	(bad)  
   140025db8:	(bad)  
   140025dba:	ret    0xdaff
   140025dbd:	(bad)  
   140025dbe:	mov    edi,0xadc3c8ff
   140025dc3:	dec    DWORD PTR [rbp-0x73007c76]
   140025dc9:	mov    WORD PTR [rsi-0x7c747501],es
   140025dcf:	inc    DWORD PTR [rbp-0x7a007f7b]
   140025dd5:	test   DWORD PTR [rsi-0x1],edi
   140025dd8:	(bad)  
   140025dd9:	(bad)  
   140025dda:	js     0x140025ddb
   140025ddc:	add    BYTE PTR [rax+0x7e7fff78],0x76
   140025de3:	(bad)  
   140025de4:	jge    0x140025e63
   140025de6:	jne    0x140025de7
   140025de8:	jp     0x140025e64
   140025dea:	jb     0x140025deb
   140025dec:	jns    0x140025e67
   140025dee:	jo     0x140025def
   140025df0:	ja     0x140025e69
   140025df2:	ins    DWORD PTR es:[rdi],dx
   140025df3:	push   QWORD PTR [rdx+0x72]
   140025df6:	inc    DWORD PTR [edi-0x7500817a]
   140025dfd:	xchg   DWORD PTR [rsi+0x10],eax
	...
   140025e0b:	add    BYTE PTR [rsi-0x77c3cac0],dh
   140025e11:	pop    rdi
   140025e12:	cmp    edi,edi
   140025e14:	sbb    al,0xc7
   140025e16:	(bad)  
   140025e17:	dec    DWORD PTR [rcx]
   140025e19:	in     al,0x1f
   140025e1b:	call   QWORD PTR [rdi]
   140025e1d:	retf   0xff21
   140025e20:	sbb    eax,0x1cff26c6
   140025e25:	fidiv  WORD PTR [rax]
   140025e27:	jmp    FWORD PTR [rdi]
   140025e29:	icebp  
   140025e2a:	rex.RX dec DWORD PTR [rsi-0x33008e1b]
   140025e31:	ret    0xff75
   140025e34:	adc    bl,BYTE PTR [rsi-0x237a001f]
   140025e3a:	stc    
   140025e3b:	call   FWORD PTR [rbp-0x1f]
   140025e3e:	(bad)  
   140025e3f:	push   QWORD PTR [rax]
   140025e41:	xlat   BYTE PTR ds:[rbx]
   140025e42:	(bad)  
   140025e43:	(bad)  
   140025e44:	cmp    edx,ebx
   140025e46:	(bad)  
   140025e47:	push   QWORD PTR [rdi]
   140025e49:	retf   
   140025e4a:	(bad)  
   140025e4b:	jmp    FWORD PTR [rax]
   140025e4d:	ret    0xffff
   140025e50:	and    bh,BYTE PTR [rdx-0x2ca50001]
   140025e56:	std    
   140025e57:	dec    DWORD PTR [rdi]
   140025e59:	xchg   esp,ecx
   140025e5b:	call   QWORD PTR [rcx-0x716f]
   140025e61:	(bad)  
   140025e62:	(bad)  
   140025e63:	(bad)  
   140025e64:	out    dx,al
   140025e65:	out    dx,al
   140025e66:	in     al,0xff
   140025e68:	out    0xe5,eax
   140025e6a:	fdivr  st,st(7)
   140025e6c:	in     al,0xe2
   140025e6e:	xlat   BYTE PTR ds:[rbx]
   140025e6f:	(bad)  
   140025e70:	jmp    0x12d023c5c
   140025e75:	jmp    0x140025e54
   140025e77:	jmp    rbp
   140025e79:	loop   0x140025e4c
   140025e7b:	(bad)  
   140025e7c:	fstp   st(1)
   140025e7e:	(bad)  
   140025e7f:	inc    edi
   140025e81:	ret    0xffae
   140025e84:	(bad)  
   140025e85:	mov    eax,DWORD PTR [rbx-0x7a737301]
   140025e8b:	dec    DWORD PTR [rbx-0x78007c75]
   140025e91:	mov    BYTE PTR [rax+0x7d8585ff],al
   140025e97:	inc    DWORD PTR [rbx-0x7e00857d]
   140025e9d:	cmp    DWORD PTR [rcx-0x1],0xff767e7e
   140025ea4:	jge    0x140025f23
   140025ea6:	je     0x140025ea7
   140025ea8:	jp     0x140025f25
   140025eaa:	jb     0x140025eab
   140025eac:	jns    0x140025f27
   140025eae:	jno    0x140025eaf
   140025eb0:	js     0x140025f29
   140025eb2:	jo     0x140025eb3
   140025eb4:	jae    0x140025f28
   140025eb6:	imul   edi,edi,0xff7e8687
   140025ebc:	mov    ecx,DWORD PTR [rcx+0x1487]
	...
   140025eca:	add    BYTE PTR [rax],al
   140025ecc:	mov    ebx,0x8b1f3949
   140025ed1:	jb     0x140025f0c
   140025ed3:	call   QWORD PTR [rdi]
   140025ed5:	retf   
   140025ed6:	(bad)  
   140025ed7:	call   FWORD PTR [rcx]
   140025ed9:	repnz sub eax,0x2fdf22ff
   140025edf:	jmp    FWORD PTR [rsi+rax*8]
   140025ee2:	push   QWORD PTR es:[rip+0x39ff35d4]        # 0x17a0194bd
   140025ee9:	neg    BYTE PTR [rbx-0x1]
   140025eec:	pop    rbp
   140025eed:	call   FWORD PTR [rdx-0x52103201]
   140025ef3:	push   QWORD PTR [rcx-0x44]
   140025ef6:	mov    edx,0xe29e11ff
   140025efb:	call   FWORD PTR [rcx+rcx*8-0xd]
   140025eff:	call   FWORD PTR [rbx-0x23]
   140025f02:	(bad)  
   140025f03:	call   FWORD PTR [rip+0x1dffffce]        # 0x15e025ed7
   140025f09:	(bad)  
   140025f0a:	(bad)  
   140025f0b:	call   QWORD PTR [rdi]
   140025f0d:	mov    ebp,0xb510ffff
   140025f12:	(bad)  
   140025f13:	call   FWORD PTR [rdx-0x2c]
   140025f16:	std    
   140025f17:	dec    DWORD PTR [rdi]
   140025f19:	mov    esi,ecx
   140025f1b:	dec    DWORD PTR [rsp+rcx*4-0x51490077]
   140025f22:	xchg   ebp,eax
   140025f23:	(bad)  
   140025f24:	jp     0x140025f95
   140025f26:	push   rbx
   140025f27:	jmp    FWORD PTR [rbp+0x68]
   140025f2a:	push   rdi
   140025f2b:	jmp    QWORD PTR [rax+0x5d]
   140025f2e:	push   rsp
   140025f2f:	jmp    QWORD PTR [rsi+0x63]
   140025f32:	pop    rsi
   140025f33:	call   QWORD PTR [rax-0x30007572]
   140025f39:	int3   
   140025f3a:	(bad)  
   140025f3b:	(bad)  
   140025f3c:	in     al,dx
   140025f3d:	jmp    0x109d05f1f
   140025f42:	mov    ch,0xff
   140025f44:	lea    ecx,[rbx-0x7373007e]
   140025f4a:	xchg   bh,bh
   140025f4c:	mov    ecx,DWORD PTR [rbx+rax*4-0x7e767601]
   140025f53:	inc    DWORD PTR [rbp-0x7c00807b]
   140025f59:	cmp    DWORD PTR [rbx-0x1],0xffffff81
   140025f5d:	xor    BYTE PTR [rsi-0x1],0x7d
   140025f61:	jge    0x140025fd8
   140025f63:	(bad)  
   140025f64:	jnp    0x140025fe1
   140025f66:	jb     0x140025f67
   140025f68:	js     0x140025fe2
   140025f6a:	jno    0x140025f6b
   140025f6c:	ja     0x140025fe5
   140025f6e:	outs   dx,BYTE PTR ds:[rsi]
   140025f6f:	push   QWORD PTR [rsi+0x75]
   140025f72:	ins    BYTE PTR es:[rdi],dx
   140025f73:	push   QWORD PTR [rax+0x70]
   140025f76:	inc    DWORD PTR gs:[rdi-0x7900817a]
   140025f7d:	test   BYTE PTR [rdx+0x18],al
	...
   140025f8f:	add    BYTE PTR [rdx+0x16a0356a],dl
   140025f95:	ret    
   140025f96:	rex.R jmp QWORD PTR [rsi+rsi*8]
   140025f9a:	(bad)  
   140025f9b:	jmp    FWORD PTR [rip+0x2cff4bf0]        # 0x16d01ab91
   140025fa1:	loop   0x140025fe1
   140025fa3:	(bad)  
   140025fa4:	cmp    bl,bl
   140025fa6:	cmp    edi,edi
   140025fa8:	rex.WXB in eax,dx
   140025faa:	ja     0x140025fab
   140025fac:	(bad)  
   140025fad:	(bad)  
   140025fae:	mov    esi,0xe0f787ff
   140025fb3:	(bad)  
   140025fb4:	cmp    DWORD PTR [rsi-0x60de0023],ebp
   140025fba:	fdiv   st(7),st
   140025fbc:	gs enter 0xfff4,0x52
   140025fc1:	(bad)  
   140025fc2:	(bad)  
   140025fc3:	call   QWORD PTR [rbx]
   140025fc5:	retf   
   140025fc6:	(bad)  
   140025fc7:	call   QWORD PTR [rax]
   140025fc9:	sar    edi,0xff
   140025fcc:	(bad)  
   140025fcd:	mov    ebx,0xb20affff
   140025fd2:	(bad)  
   140025fd3:	call   FWORD PTR [rdx-0x2c]
   140025fd6:	std    
   140025fd7:	dec    DWORD PTR [rdi]
   140025fd9:	mov    dl,al
   140025fdb:	(bad)  
   140025fdc:	jg     0x14002605d
   140025fde:	ja     0x140025fdf
   140025fe0:	mov    BYTE PTR [rdx+0x57],bh
   140025fe3:	jmp    FWORD PTR [rax+0x64]
   140025fe6:	push   rsi
   140025fe7:	call   QWORD PTR [rsp+rdx*2+0x54]
   140025feb:	dec    DWORD PTR [rsi+0x4e]
   140025fee:	rex.WR dec QWORD PTR [rbx+0x4d]
   140025ff2:	rex.WX call FWORD PTR [rcx+0x5a]
   140025ff6:	pop    rax
   140025ff7:	call   FWORD PTR [rax-0x1e006a69]
   140025ffd:	(bad)  
   140025fff:	call   rbx
   140026001:	(bad)  
   140026002:	mov    esi,0x889194ff
   140026007:	dec    DWORD PTR [rbx-0x76007c76]
   14002600d:	mov    DWORD PTR [rcx+0x7e8988ff],eax
   140026013:	inc    DWORD PTR [rbp-0x7c00827b]
   140026019:	cmp    DWORD PTR [rbx-0x1],0x7e
   14002601d:	jle    0x140026094
   14002601f:	(bad)  
   140026020:	jns    0x14002609c
   140026022:	jb     0x140026023
   140026024:	jge    0x1400260a4
   140026026:	jbe    0x140026027
   140026028:	jns    0x1400260a3
   14002602a:	jb     0x14002602b
   14002602c:	ja     0x1400260a5
   14002602e:	jno    0x14002602f
   140026030:	jnp    0x1400260ab
   140026032:	jno    0x140026033
   140026034:	ja     0x1400260ad
   140026036:	ins    DWORD PTR es:[rdi],dx
   140026037:	inc    DWORD PTR [rbx-0x6400807d]
   14002603d:	cdq    
   14002603e:	cwde   
   14002603f:	(bad)  
	...
   140026050:	sub    DWORD PTR [rbx+0x6a],0x42
   140026054:	setns  dl
   140026057:	jmp    QWORD PTR [rdi+rdi*8]
   14002605a:	cmp    eax,0x57fa3cff
   14002605f:	push   QWORD PTR [rdx]
   140026061:	out    dx,al
   140026062:	push   rsi
   140026063:	push   QWORD PTR [rdi]
   140026065:	in     al,dx
   140026066:	(bad)  
   140026067:	inc    DWORD PTR [rbx-0x15]
   14002606a:	(bad)  
   14002606b:	(bad)  
   14002606c:	js     0x140026054
   14002606e:	stos   BYTE PTR es:[rdi],al
   14002606f:	push   QWORD PTR [rip+0x19ffdeac]        # 0x15a023f21
   140026075:	sahf   
   140026076:	(bad)  
   140026078:	mov    ch,0xef
   14002607a:	std    
   14002607b:	(bad)  
   14002607c:	cmp    dl,dl
   14002607e:	(bad)  
   14002607f:	dec    DWORD PTR [rsp+rax*8]
   140026082:	(bad)  
   140026083:	call   QWORD PTR [rcx]
   140026085:	leave  
   140026086:	(bad)  
   140026087:	inc    DWORD PTR [rsi+rdi*4]
   14002608a:	(bad)  
   14002608b:	inc    DWORD PTR [rsi]
   14002608d:	mov    ecx,0xaf03ffff
   140026092:	(bad)  
   140026093:	call   FWORD PTR [rdx-0x2c]
   140026096:	std    
   140026097:	dec    DWORD PTR [rdi]
   140026099:	mov    edx,ss
   14002609b:	(bad)  
   14002609c:	mov    ebp,0xc1ff90ae
   1400260a1:	mov    al,0x9a
   1400260a3:	(bad)  
   1400260a4:	mov    esp,0xbaff9cad
   1400260a9:	lods   al,BYTE PTR ds:[rsi]
   1400260aa:	popf   
   1400260ab:	(bad)  
   1400260ac:	mov    esp,0xb4ffa0ab
   1400260b1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400260b2:	sahf   
   1400260b3:	jmp    FWORD PTR [rbx-0x55005b52]
   1400260b9:	stos   DWORD PTR es:[rdi],eax
   1400260ba:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400260bb:	jmp    FWORD PTR [rdx+rbp*4-0x5554005c]
   1400260c2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400260c3:	call   FWORD PTR [rcx-0x6f006b69]
   1400260c9:	lea    ecx,[rcx-0x716f6d05]
   1400260cf:	in     al,0x91
   1400260d1:	xchg   ecx,eax
   1400260d2:	(bad)  
   1400260d3:	(bad)  
   1400260d4:	(bad)  
   1400260d5:	(bad)  
   1400260d6:	mov    ecx,ecx
   1400260d8:	lea    ecx,[rbp-0x64644276]
   1400260de:	(bad)  
   1400260df:	mov    al,0xa2
   1400260e1:	movabs eax,ds:0xa0a19d909192a69f
   1400260ea:	sahf   
   1400260eb:	xchg   ebp,eax
   1400260ec:	movabs ds:0x9a839698998ba2a2,eax
   1400260f5:	cdq    
   1400260f6:	xchg   edi,eax
   1400260f7:	jl     0x1400260ab
   1400260f9:	mov    cl,0xb0
   1400260fb:	imul   ebp,DWORD PTR [rsi+0xdacad],0x0
	...
   14002610d:	add    BYTE PTR [rax],al
   14002610f:	add    BYTE PTR [rip+0xbcbd09b],dl        # 0x14bce31b0
   140026115:	cdq    
   140026116:	fsin   
   140026118:	sub    al,0xe7
   14002611a:	xor    eax,0x54ff36ff
   14002611f:	push   QWORD PTR [rdi]
   140026121:	jrcxz  0x140026174
   140026123:	push   QWORD PTR [rbx]
   140026125:	loope  0x14002617c
   140026127:	(bad)  
   140026128:	cmp    ebx,esp
   14002612a:	ins    BYTE PTR es:[rdi],dx
   14002612b:	push   QWORD PTR [rcx]
   14002612d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002612e:	(bad)  
   14002612f:	jmp    FWORD PTR [rax]
   140026131:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140026132:	loope  0x140026133
   140026134:	mov    bh,0xf0
   140026136:	std    
   140026137:	(bad)  
   140026138:	cmp    ecx,edx
   14002613a:	(bad)  
   14002613b:	push   QWORD PTR [rcx+rdx*8]
   14002613e:	(bad)  
   14002613f:	jmp    QWORD PTR [rsi]
   140026141:	int3   
   140026142:	(bad)  
   140026143:	call   FWORD PTR [rdx]
   140026145:	(bad)  
   140026146:	(bad)  
   140026147:	dec    DWORD PTR [rip+0xcffffbd]        # 0x14d02610a
   14002614d:	mov    ecx,0xaf03ffff
   140026152:	(bad)  
   140026153:	call   FWORD PTR [rdx-0x2c]
   140026156:	std    
   140026157:	dec    DWORD PTR [rdi]
   140026159:	(bad)  
   14002615a:	sar    edi,cl
   14002615c:	test   ch,0x68
   14002615f:	(bad)  
   140026160:	in     al,dx
   140026161:	mov    ecx,0xabe8ff6b
   140026166:	push   0x629ce5ff
   14002616b:	(bad)  
   14002616c:	fild   WORD PTR [rbx+0x67c8ff53]
   140026172:	rex.RXB jmp QWORD PTR [r14-0x6a007d3b]
   140026179:	mov    ah,0x76
   14002617b:	push   QWORD PTR [rbx-0x5900be96]
   140026181:	ins    BYTE PTR es:[rdi],dx
   140026182:	rex.X jmp QWORD PTR [rbx+0x652b3a]
	...
   1400261c9:	add    BYTE PTR [rax],al
   1400261cb:	add    BYTE PTR [rsp+rdx*4],cl
   1400261ce:	leave  
   1400261cf:	imul   ecx,DWORD PTR [rcx],0xffffff95
   1400261d2:	(bad)  
   1400261d3:	std    
   1400261d4:	or     bl,BYTE PTR [rcx-0x607b0525]
   1400261da:	rcr    DWORD PTR [r15],1
   1400261dd:	loop   0x14002620c
   1400261df:	jmp    FWORD PTR [rdi]
   1400261e1:	jrcxz  0x14002622e
   1400261e3:	push   QWORD PTR [rsi]
   1400261e5:	fsubr  QWORD PTR [rsi-0x1]
   1400261e8:	and    ch,BYTE PTR [rax-0x53cb0033]
   1400261ee:	in     al,0xff
   1400261f0:	stos   DWORD PTR es:[rdi],eax
   1400261f1:	in     al,dx
   1400261f2:	cld    
   1400261f3:	dec    DWORD PTR [rax-0x29]
   1400261f6:	(bad)  
   1400261f7:	inc    DWORD PTR [rbp-0x2c]
   1400261fa:	(bad)  
   1400261fb:	jmp    FWORD PTR [rbx]
   1400261fd:	(bad)  
   1400261fe:	(bad)  
   1400261ff:	call   FWORD PTR [rip+0xafff4b6]        # 0x14b0256bb
   140026205:	xchg   edi,eax
   140026206:	fdivr  st,st(7)
   140026208:	(bad)  
   140026209:	xchg   edx,eax
   14002620a:	(bad)  
   14002620b:	call   QWORD PTR [rdi]
   14002620d:	test   al,0xf6
   14002620f:	inc    DWORD PTR [rbx]
   140026211:	scas   eax,DWORD PTR es:[rdi]
   140026212:	(bad)  
   140026213:	call   FWORD PTR [rbx-0x2c]
   140026216:	std    
   140026217:	dec    DWORD PTR [rdi]
   140026219:	mov    ss,ebp
   14002621b:	push   rbp
   14002621d:	ret    
   14002621e:	imul   edi,edi,0xffffffed
   140026221:	mov    ch,0x6c
   140026223:	jmp    rsi
   140026225:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140026226:	dec    si
   140026229:	adc    DWORD PTR [rbp-0x1],0xffffffcc
   14002622d:	jbe    0x14002627c
   14002622f:	(bad)  
   140026230:	mov    ebp,0x6fff4e7b
   140026235:	in     al,0x81
   140026237:	jmp    QWORD PTR [rbx-0x1]
   14002623a:	cwde   
   14002623b:	call   QWORD PTR [rax-0x5e00831e]
   140026241:	or     DWORD PTR [rdi-0x3d],0x0
	...
   140026288:	add    BYTE PTR [rcx-0x70f8ec36],cl
   14002628e:	retf   0x6c1
   140026291:	cdq    
   140026292:	fdivp  st(7),st
   140026294:	or     DWORD PTR [rax-0x77be0225],ebx
   14002629a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002629b:	rex.R jo 0x140026245
   14002629e:	rex.W jrcxz 0x1400262cd
   1400262a1:	out    0x6f,al
   1400262a3:	jmp    QWORD PTR [rdi]
   1400262a5:	lods   al,BYTE PTR ds:[rsi]
   1400262a6:	iret   
   1400262a7:	push   QWORD PTR [rcx]
   1400262a9:	scas   al,BYTE PTR es:[rdi]
   1400262aa:	in     eax,0xff
   1400262ac:	mov    al,0xef
   1400262ae:	(bad)  
   1400262af:	dec    DWORD PTR [rbp-0x27]
   1400262b2:	(bad)  
   1400262b3:	(bad)  
   1400262b4:	cmp    eax,0x39ffffd3
   1400262b9:	(bad)  
   1400262ba:	cld    
   1400262bb:	call   FWORD PTR [rsi+rbp*4]
   1400262be:	in     eax,dx
   1400262bf:	dec    DWORD PTR [rdx]
   1400262c1:	cwde   
   1400262c2:	fdivr  st,st(7)
   1400262c4:	pop    rsi
   1400262c5:	mov    bh,0xc8
   1400262c7:	call   rdx
   1400262c9:	rcr    DWORD PTR [rdi+rdi*8+0x16],0x93
   1400262ce:	(bad)  
   1400262cf:	inc    DWORD PTR [rax-0x48]
   1400262d2:	cmc    
   1400262d3:	call   QWORD PTR [rbx-0x33]
   1400262d6:	(bad)  
   1400262d7:	dec    DWORD PTR [rdi]
   1400262d9:	(bad)  
   1400262da:	xlat   BYTE PTR ds:[rbx]
   1400262db:	(bad)  
   1400262dc:	call   rsi
   1400262de:	ins    DWORD PTR es:[rdi],dx
   1400262df:	push   rdi
   1400262e1:	mov    esi,0x93ddff6c
   1400262e6:	pop    rdx
   1400262e7:	(bad)  
   1400262e8:	mov    ebp,0xc5ff5c8b
   1400262ed:	mov    edx,0xacb0ff78
   1400262f2:	call   QWORD PTR gs:[rcx-0xc]
   1400262f6:	jge    0x1400262f7
   1400262f8:	push   rsi
   1400262f9:	jmp    QWORD PTR [rcx+0x61ba76ff]
   1400262ff:	fldenv [rcx+0xa3350]
	...
   140026349:	mov    cl,bl
   14002634b:	rex.R add eax,0x19f0cc8c
   140026351:	mov    al,0xf0
   140026353:	dec    DWORD PTR [rdx]
   140026355:	popf   
   140026356:	in     al,0xff
   140026358:	(bad)  
   140026359:	xchg   esi,eax
   14002635a:	(bad)  
   14002635c:	or     ebx,DWORD PTR [rsi+rbx*8-0x1351d701]
   140026363:	dec    DWORD PTR [rbp-0x40]
   140026366:	lock call FWORD PTR [rbx+0x48fff7e5]
   14002636d:	(bad)  
   14002636e:	(bad)  
   14002636f:	(bad)  
   140026370:	cmp    al,0xca
   140026372:	std    
   140026373:	jmp    FWORD PTR [rip+0x11fff8be]        # 0x152025c37
   140026379:	popf   
   14002637a:	fdiv   st(7),st
   14002637c:	(bad)  
   14002637d:	movabs ds:0xb8dfffa0d8bdffd3,al
   140026386:	push   rbx
   140026387:	(bad)  
   140026388:	fidiv  WORD PTR [rax-0x403a00ca]
   14002638e:	js     0x14002638f
   140026390:	or     eax,0x2affd28f
   140026395:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140026396:	cmc    
   140026397:	call   QWORD PTR [rax]
   140026399:	(bad)  
   14002639a:	(bad)  
   14002639b:	(bad)  
   14002639c:	out    dx,al
   14002639d:	rcr    BYTE PTR [rdi-0x1],0xf0
   1400263a1:	mov    esi,0xabe7ff60
   1400263a6:	pop    rsp
   1400263a7:	dec    edx
   1400263a9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400263aa:	imul   edi,edi,0xff6ca2d3
   1400263b0:	rol    BYTE PTR [rdi-0x179900aa],0x74
   1400263b7:	jmp    FWORD PTR [rbp-0x3c]
   1400263ba:	ins    BYTE PTR es:[rdi],dx
   1400263bb:	fstp   QWORD PTR [rcx+0x1a3661]
	...
   140026409:	mov    cl,bl
   14002640b:	rex.X or DWORD PTR [rdi-0x40cc1135],ecx
   140026412:	out    dx,al
   140026413:	inc    DWORD PTR [rbp-0x2e]
   140026416:	std    
   140026417:	push   QWORD PTR [rcx]
   140026419:	mov    edi,0xc23bfff4
   14002641e:	hlt    
   14002641f:	jmp    FWORD PTR [rsi-0x23]
   140026422:	(bad)  
   140026423:	push   QWORD PTR [rcx-0x23]
   140026426:	(bad)  
   140026427:	jmp    QWORD PTR [rdx-0x28]
   14002642a:	(bad)  
   14002642b:	inc    DWORD PTR [rax-0x3d]
   14002642e:	clc    
   14002642f:	jmp    FWORD PTR [rcx]
   140026431:	scas   eax,DWORD PTR es:[rdi]
   140026432:	jmp    0x112957036
   140026437:	jmp    FWORD PTR [rax+rbp*4-0x60]
   14002643b:	call   rsi
   14002643d:	(bad)  
   14002643e:	jp     0x14002643f
   140026440:	lods   al,BYTE PTR ds:[rsi]
   140026441:	in     eax,0x98
   140026443:	call   rdx
   140026445:	fist   DWORD PTR [rcx+0x54b5e0ff]
   14002644b:	(bad)  
   14002644c:	out    dx,al
   14002644d:	jmp    rbx
   14002644f:	(bad)  
   140026450:	(bad)  
   140026452:	lock dec DWORD PTR [rax]
   140026455:	mov    ss,edx
   140026457:	jmp    QWORD PTR [rcx*4-0x4b39003e]
   14002645e:	imul   edi,edi,0xffffffd9
   140026461:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140026462:	pop    rsp
   140026463:	(bad)  
   140026464:	fisttp DWORD PTR [rdi-0x6a3500b6]
   14002646a:	(bad)  
   14002646b:	call   rdx
   14002646d:	mov    esp,0xabc3ff79
   140026472:	(bad)  
   140026473:	call   FWORD PTR [rdi-0x643c9641]
   140026479:	test   BYTE PTR [rcx+rdx*1+0x0],cl
	...
   1400264c9:	mov    cl,bl
   1400264cb:	sbb    BYTE PTR [rdx+rbx*4],dl
   1400264ce:	(bad)  
   1400264cf:	enter  0xbd2c,0xf5
   1400264d3:	inc    DWORD PTR [rdx-0x2e]
   1400264d6:	(bad)  
   1400264d7:	dec    DWORD PTR [rdi-0x24]
   1400264da:	(bad)  
   1400264db:	call   FWORD PTR [rbp-0x22]
   1400264de:	(bad)  
   1400264df:	call   FWORD PTR [rbp-0x29]
   1400264e2:	sti    
   1400264e3:	call   QWORD PTR [rbx-0x34]
   1400264e6:	hlt    
   1400264e7:	inc    DWORD PTR [rax-0x3f]
   1400264ea:	lock call FWORD PTR [rdi+riz*4]
   1400264ee:	in     al,0xff
   1400264f0:	adc    DWORD PTR [rdi-0x20c90032],ebx
   1400264f6:	fwait
   1400264f7:	jmp    QWORD PTR [rdi-0xb]
   1400264fa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400264fb:	(bad)  
   1400264fc:	jle    0x1400264ed
   1400264fe:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400264ff:	(bad)  
   140026500:	jge    0x1400264f9
   140026502:	mov    dh,0xff
   140026504:	int3   
   140026505:	jmp    0xfde764c3
   14002650a:	push   0xffffffffffffffff
   14002650c:	jmp    0x13c024a06
   140026511:	(bad)  
   140026512:	(bad)  
   140026513:	dec    eax
   140026515:	sar    DWORD PTR [rsi-0x75617101],cl
   14002651b:	inc    edi
   14002651d:	test   eax,0x8dd0ff69
   140026522:	push   rbx
   140026523:	inc    eax
   140026525:	mov    cl,BYTE PTR [rdi-0x1]
   140026528:	mov    bh,0xdf
   14002652a:	xchg   ebp,eax
   14002652b:	push   QWORD PTR [rcx-0x4c0d7829]
   140026531:	lods   eax,DWORD PTR ds:[rsi]
   140026532:	pop    rbx
   140026533:	jb     0x140026535
	...
   140026589:	add    BYTE PTR [rax],al
   14002658b:	add    BYTE PTR [rdx],ah
   14002658d:	movabs ds:0xce3ceae3a5163fd4,al
   140026596:	std    
   140026597:	std    
   140026598:	rex.RXB sar r13d,cl
   14002659b:	inc    DWORD PTR [rcx-0x33]
   14002659e:	sti    
   14002659f:	(bad)  
   1400265a0:	cmp    eax,0x24fdf7c8
   1400265a5:	scas   eax,DWORD PTR es:[rdi]
   1400265a6:	call   0x125a97da4
   1400265ab:	loop   0x1400265c9
   1400265ad:	sahf   
   1400265ae:	ret    0x9788
   1400265b1:	mov    ecx,0xbc98935d
   1400265b6:	outs   dx,BYTE PTR ds:[rsi]
   1400265b7:	repnz lods al,BYTE PTR ds:[rsi]
   1400265b9:	repnz mov esi,0xddfdbaff
   1400265bf:	dec    esp
   1400265c1:	(bad)  
   1400265c2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400265c3:	(bad)  
   1400265c4:	fdiv   DWORD PTR [rax-0x362c008c]
   1400265ca:	xchg   edi,eax
   1400265cb:	jmp    rcx
   1400265cd:	lock in al,0xff
   1400265d0:	loop   0x1400265c3
   1400265d2:	jmp    0x1400265d3
   1400265d4:	fadd   st,st(4)
   1400265d6:	movabs ds:0x549ae2ff5890c6ff,al
   1400265df:	(bad)  
   1400265e0:	ficom  DWORD PTR [rsi-0x484e00a8]
   1400265e6:	outs   dx,DWORD PTR ds:[rsi]
   1400265e7:	call   0xd17e398c
   1400265ec:	mov    ch,0xa4
   1400265ee:	pop    rdx
   1400265ef:	sbb    DWORD PTR [rax],eax
	...
   14002664d:	add    BYTE PTR [rax],al
   14002664f:	add    BYTE PTR [rax],bh
   140026651:	mov    ah,0xda
   140026653:	xor    al,0x19
   140026655:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140026656:	loopne 0x140026606
   140026658:	and    BYTE PTR [rdx-0x55e0191e],ch
   14002665e:	loop   0x140026643
   140026660:	sbb    ah,BYTE PTR [rdi-0x5bea491e]
   140026666:	jrcxz  0x1400265ec
   140026668:	(bad)  
   140026669:	xchg   edi,eax
   14002666a:	ficom  DWORD PTR [rsi]
	...
   140026674:	int3   
   140026675:	mov    DWORD PTR [rbx+0x1b],ebx
   140026678:	(bad)  
   140026679:	mov    bl,0x75
   14002667b:	rex.WB (bad) 
   14002667d:	(bad)  
   14002667e:	fwait
   14002667f:	lods   al,BYTE PTR ds:[rsi]
   140026680:	leave  
   140026681:	fisubr DWORD PTR [rax-0x4f213716]
   140026687:	call   rdx
   140026689:	lock sar bh,1
   14002668c:	fucom  st(7)
   14002668e:	enter  0xd5ff,0xc5
   140026692:	xchg   esp,eax
   140026693:	dec    esi
   140026695:	xchg   esp,eax
   140026696:	push   rsi
   140026697:	neg    ch
   140026699:	xchg   edi,eax
   14002669a:	push   rdi
   14002669b:	shr    ah,0xa2
   14002669e:	pop    rsi
   14002669f:	jns    0x140026690
   1400266a1:	lods   al,BYTE PTR ds:[rsi]
   1400266a2:	ins    BYTE PTR es:[rdi],dx
   1400266a3:	cmp    edi,DWORD PTR [rcx+0x1567ad]
	...
   140026705:	add    BYTE PTR [rax],al
   140026707:	add    bh,bh
   140026709:	(bad)  
   14002670a:	(bad)  
   14002670b:	clc    
   14002670c:	jg     0x14002670d
   14002670e:	add    BYTE PTR [rax],al
   140026710:	(bad)  
   140026711:	(bad)  
   140026712:	inc    DWORD PTR [rax+0xff1f]
   140026718:	(bad)  
   140026719:	(bad)  
   14002671a:	cld    
   14002671b:	add    BYTE PTR [rdi],cl
   14002671d:	inc    DWORD PTR [rax]
   14002671f:	add    bh,bh
   140026721:	(bad)  
   140026722:	clc    
   140026723:	add    BYTE PTR [rbx],al
   140026725:	inc    DWORD PTR [rax]
   140026727:	add    bh,bh
   140026729:	(bad)  
   14002672a:	clc    
   14002672b:	add    BYTE PTR [rax],al
   14002672d:	inc    DWORD PTR [rax]
   14002672f:	add    bh,bh
   140026731:	(bad)  
   140026732:	clc    
   140026733:	add    BYTE PTR [rax],al
   140026735:	jg     0x140026737
   140026737:	add    bh,bh
   140026739:	(bad)  
   14002673a:	clc    
   14002673b:	add    BYTE PTR [rax],al
   14002673d:	(bad)  
   14002673e:	add    BYTE PTR [rax],al
   140026740:	(bad)  
   140026741:	(bad)  
   140026742:	clc    
   140026743:	add    BYTE PTR [rax],al
   140026745:	sldt   WORD PTR [rax]
   140026748:	(bad)  
   140026749:	(bad)  
   14002674a:	clc    
   14002674b:	add    BYTE PTR [rax],al
   14002674d:	(bad)  
   14002674e:	add    BYTE PTR [rax],al
   140026750:	(bad)  
   140026751:	(bad)  
   140026752:	clc    
   140026753:	add    BYTE PTR [rax],al
   140026755:	add    DWORD PTR [rax],eax
   140026757:	add    bh,bh
   140026759:	(bad)  
   14002675a:	clc    
   14002675b:	add    BYTE PTR [rax],al
   14002675d:	add    BYTE PTR [rax],al
   14002675f:	add    bh,bh
   140026761:	(bad)  
   140026762:	clc    
   140026763:	add    BYTE PTR [rax],al
   140026765:	add    BYTE PTR [rax],al
   140026767:	add    bh,bh
   140026769:	(bad)  
   14002676a:	clc    
   14002676b:	add    BYTE PTR [rax],al
   14002676d:	add    BYTE PTR [rax],al
   14002676f:	add    bh,bh
   140026771:	loopne 0x140026773
   140026773:	add    BYTE PTR [rax],al
   140026775:	(bad)  
   140026776:	add    BYTE PTR [rax],al
   140026778:	inc    DWORD PTR [rax]
   14002677a:	add    BYTE PTR [rax],al
   14002677c:	add    BYTE PTR [rdi],al
   14002677e:	add    BYTE PTR [rax],al
   140026780:	inc    BYTE PTR [rax]
   140026782:	add    BYTE PTR [rax],al
   140026784:	add    BYTE PTR [rdi],al
   140026786:	add    BYTE PTR [rax],al
   140026788:	inc    BYTE PTR [rax]
   14002678a:	add    BYTE PTR [rax],al
   14002678c:	add    BYTE PTR [rdi],al
   14002678e:	add    BYTE PTR [rax],al
   140026790:	inc    BYTE PTR [rax]
   140026792:	add    BYTE PTR [rax],al
   140026794:	add    BYTE PTR [rdi],al
   140026796:	add    BYTE PTR [rax],al
   140026798:	cld    
   140026799:	add    BYTE PTR [rax],al
   14002679b:	add    BYTE PTR [rax],al
   14002679d:	(bad)  
   14002679e:	add    BYTE PTR [rax],al
   1400267a0:	clc    
   1400267a1:	add    BYTE PTR [rax],al
   1400267a3:	add    BYTE PTR [rax],al
   1400267a5:	(bad)  
   1400267a6:	add    BYTE PTR [rax],al
   1400267a8:	lock add BYTE PTR [rax],al
   1400267ab:	add    BYTE PTR [rax],al
   1400267ad:	(bad)  
   1400267ae:	add    BYTE PTR [rax],al
   1400267b0:	loopne 0x1400267b2
   1400267b2:	add    BYTE PTR [rax],al
   1400267b4:	add    BYTE PTR [rdi],al
   1400267b6:	add    BYTE PTR [rax],al
   1400267b8:	loopne 0x1400267ba
   1400267ba:	add    BYTE PTR [rax],al
   1400267bc:	add    BYTE PTR [rbx],al
   1400267be:	add    BYTE PTR [rax],al
   1400267c0:	rol    BYTE PTR [rax],0x0
   1400267c3:	add    BYTE PTR [rax],al
   1400267c5:	add    eax,DWORD PTR [rax]
   1400267c7:	add    al,al
   1400267c9:	add    BYTE PTR [rax],al
   1400267cb:	add    BYTE PTR [rax],al
   1400267cd:	add    eax,DWORD PTR [rax]
   1400267cf:	add    BYTE PTR [rax+0x0],al
   1400267d5:	add    eax,DWORD PTR [rax]
   1400267d7:	add    BYTE PTR [rax+0x0],al
   1400267dd:	add    eax,DWORD PTR [rax]
   1400267df:	add    BYTE PTR [rax+0x0],al
   1400267e5:	add    eax,DWORD PTR [rax]
   1400267e7:	add    BYTE PTR [rax+0x0],al
   1400267ed:	add    eax,DWORD PTR [rax]
   1400267ef:	add    BYTE PTR [rax+0x0],al
   1400267f5:	add    eax,DWORD PTR [rax]
   1400267f7:	add    BYTE PTR [rax+0x0],al
   1400267fd:	add    eax,DWORD PTR [rax]
   1400267ff:	add    BYTE PTR [rax+0x0],al
   140026805:	add    eax,DWORD PTR [rax]
   140026807:	add    BYTE PTR [rax+0x0],al
   14002680d:	add    eax,DWORD PTR [rax]
   14002680f:	add    BYTE PTR [rax+0x0],al
   140026815:	add    eax,DWORD PTR [rax]
   140026817:	add    BYTE PTR [rax+0x0],al
   14002681d:	add    eax,DWORD PTR [rax]
   14002681f:	add    BYTE PTR [rax+0x0],al
   140026825:	add    eax,DWORD PTR [rax]
   140026827:	add    BYTE PTR [rax+0x0],al
   14002682d:	add    eax,DWORD PTR [rax]
   14002682f:	add    BYTE PTR [rax+0x0],al
   140026835:	add    eax,DWORD PTR [rax]
   140026837:	add    al,al
   140026839:	add    BYTE PTR [rax],al
   14002683b:	add    BYTE PTR [rax],al
   14002683d:	add    eax,DWORD PTR [rax]
   14002683f:	add    al,al
   140026841:	add    BYTE PTR [rax],al
   140026843:	add    BYTE PTR [rax],al
   140026845:	add    eax,DWORD PTR [rax]
   140026847:	add    al,al
   140026849:	add    BYTE PTR [rax],al
   14002684b:	add    bh,bh
   14002684d:	inc    DWORD PTR [rax]
   14002684f:	add    BYTE PTR [rax-0xff0000],al
   140026855:	inc    DWORD PTR [rax]
   140026857:	add    BYTE PTR [rax],al
   140026859:	add    BYTE PTR [rax],al
   14002685b:	add    edi,edi
   14002685d:	inc    DWORD PTR [rax]
   14002685f:	add    BYTE PTR [rax],al
   140026861:	add    BYTE PTR [rax],al
   140026863:	add    edi,edi
   140026865:	inc    DWORD PTR [rax]
   140026867:	add    BYTE PTR [rax],al
   140026869:	add    BYTE PTR [rax],al
   14002686b:	(bad)  
   14002686c:	(bad)  
   14002686d:	inc    DWORD PTR [rax]
   14002686f:	add    BYTE PTR [rax],al
   140026871:	add    BYTE PTR [rax],al
   140026873:	(bad)  
   140026874:	(bad)  
   140026875:	inc    DWORD PTR [rax]
   140026877:	add    BYTE PTR [rax-0xc10000],al
   14002687d:	inc    DWORD PTR [rax]
   14002687f:	add    al,al
   140026881:	(bad)  
   140026882:	add    bh,bh
   140026884:	(bad)  
   140026885:	inc    DWORD PTR [rax]
   140026887:	add    BYTE PTR [rax],ch
   140026889:	add    BYTE PTR [rax],al
   14002688b:	add    BYTE PTR [rax],ah
   14002688d:	add    BYTE PTR [rax],al
   14002688f:	add    BYTE PTR [rax+0x0],al
   140026892:	add    BYTE PTR [rax],al
   140026894:	add    DWORD PTR [rax],eax
   140026896:	and    BYTE PTR [rax],al
   140026898:	add    BYTE PTR [rax],al
   14002689a:	add    BYTE PTR [rax],al
   14002689c:	adc    BYTE PTR [rax],0x0
	...
   140026907:	add    BYTE PTR [rsi+rdx*4+0x6265068d],bl
   14002690e:	pop    rbx
   14002690f:	rex.WRB
   140026910:	rex.RB
   140026911:	rex.RX
   140026912:	rex.R sub al,0x25
   140026915:	es and eax,0x4
	...
   140026973:	add    BYTE PTR [rsi+rdx*4-0x6963df73],bl
   14002697a:	lea    eax,[rcx-0x64]
   14002697d:	xchg   esi,eax
   14002697e:	lea    ebp,[rdi-0x64]
   140026981:	xchg   esi,eax
   140026982:	lea    ebp,[rax-0x726964]
   140026988:	test   BYTE PTR [rcx+0x6f],bh
   14002698b:	cld    
   14002698c:	pop    rsp
   14002698d:	jb     0x1400269e6
   14002698f:	inc    ecx
   140026991:	ret    
   140026992:	mov    edi,0x323332f1
   140026997:	jns    0x1400269b0
   140026999:	(bad)  
   14002699a:	sbb    BYTE PTR [rdx],dl
	...
   1400269f0:	pushf  
   1400269f1:	xchg   esi,eax
   1400269f2:	(bad)  
   1400269f3:	call   FWORD PTR [rsi+rdx*4-0x69630073]
   1400269fa:	(bad)  
   1400269fb:	(bad)  
   1400269fc:	jg     0x140026a77
   1400269fe:	ins    DWORD PTR es:[rdi],dx
   1400269ff:	inc    DWORD PTR [rbx+0xeff636d]
   140026a05:	mov    edx,0xff00ff2c
   140026a0a:	call   FWORD PTR ds:[rdx+0x6b]
   140026a0e:	(bad)  
   140026a0f:	(bad)  
   140026a10:	clc    
   140026a11:	cmc    
   140026a12:	repz (bad) 
   140026a14:	jmp    0xc8024b01
   140026a19:	xchg   DWORD PTR [rcx+0x242525c2],eax
   140026a1f:	rex.XB sub DWORD PTR [r9],ebp
   140026a22:	sub    BYTE PTR [rax+rax*1],al
	...
   140026a6d:	add    BYTE PTR [rax],al
   140026a6f:	add    al,al
   140026a71:	mov    edx,0x8d93ffb1
   140026a76:	test   ebp,edx
   140026a78:	popf   
   140026a79:	xchg   edi,eax
   140026a7a:	mov    ?,ebp
   140026a7c:	movabs eax,ds:0x43ff858fa5ff8f9b
   140026a85:	leave  
   140026a86:	mov    edi,edi
   140026a88:	add    ah,dl
   140026a8a:	mov    dl,0xff
   140026a8c:	imul   esp,DWORD PTR [rbp+0x5e],0xffffffff
   140026a90:	in     al,0xe3
   140026a92:	(bad)  
   140026a94:	in     al,dx
   140026a95:	in     al,dx
   140026a96:	loop   0x140026a97
   140026a98:	out    0xe7,eax
   140026a9a:	(bad)  
   140026a9c:	movabs ds:0x667f343636f19ea2,eax
   140026aa5:	movsxd cx,DWORD PTR [rdx]
	...
   140026af0:	sar    BYTE PTR [rdx-0x514c004f],0xa6
   140026af7:	std    
   140026af8:	nop
   140026af9:	mov    eax,DWORD PTR [rdx+0x747d83ff]
   140026aff:	inc    DWORD PTR [rcx-0x77008d85]
   140026b05:	(bad)  
   140026b06:	jns    0x140026b07
   140026b08:	test   BYTE PTR [rbp+0x74],bh
   140026b0b:	dec    DWORD PTR [rbp-0x1f007f79]
   140026b11:	loopne 0x140026aed
   140026b13:	(bad)  
   140026b14:	(bad)  
   140026b16:	sar    edi,1
   140026b18:	mov    edi,0xb6ffb7be
   140026b1d:	mov    ch,0xae
   140026b1f:	inc    edi
   140026b21:	mov    cl,0xff
   140026b24:	jbe    0x140026b9c
   140026b26:	jae    0x140026ae1
   140026b28:	adc    al,0x14
   140026b2a:	adc    ebp,DWORD PTR [rax]
	...
   140026b70:	(bad)  
   140026b71:	mov    edi,0xa9aee4b5
   140026b76:	movabs al,ds:0x8f999fff828a90ff
   140026b7f:	jmp    QWORD PTR [rbx+rbx*4-0x645a0070]
   140026b86:	mov    ?,edi
   140026b88:	fwait
   140026b89:	nop
   140026b8a:	cmp    edi,0xff7f888e
   140026b90:	fcmovnu st,st(3)
   140026b92:	(bad)  
   140026b93:	call   rbp
   140026b95:	(bad)  
   140026b96:	int3   
   140026b97:	push   QWORD PTR [rsp+rsi*4-0x63610055]
   140026b9e:	xchg   esi,eax
   140026b9f:	jmp    QWORD PTR [rsi-0x32005f5b]
   140026ba5:	int3   
   140026ba6:	(bad)  
   140026ba9:	lahf   
   140026baa:	cdq    
   140026bab:	out    0x0,eax
	...
   140026bed:	add    BYTE PTR [rax],al
   140026bef:	add    dl,al
   140026bf1:	mov    ebp,0xbdc4ebb3
   140026bf6:	mov    bl,0xff
   140026bf8:	mov    ah,0xad
   140026bfa:	movabs ds:0x7d8990ff909aa1ff,al
   140026c03:	dec    DWORD PTR [rbp-0x7c00857b]
   140026c09:	jp     0x140026c7a
   140026c0b:	dec    DWORD PTR [rbx-0x2600827a]
   140026c11:	(bad)  
   140026c13:	dec    ebx
   140026c15:	int3   
   140026c16:	(bad)  
   140026c17:	(bad)  
   140026c18:	mov    edi,0xa7ffb7bf
   140026c1d:	test   al,0xa1
   140026c1f:	call   FWORD PTR [rdx-0x57006968]
   140026c25:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140026c26:	movabs ds:0xffc9d1d3ff,al
	...
   140026c57:	add    BYTE PTR [rcx],dl
   140026c59:	adc    DWORD PTR [rcx],edx
   140026c5b:	add    dl,BYTE PTR [rcx]
   140026c5d:	adc    DWORD PTR [rcx],edx
   140026c5f:	or     dl,BYTE PTR [rcx]
   140026c61:	adc    DWORD PTR [rcx],edx
   140026c63:	adc    al,0x11
   140026c65:	adc    DWORD PTR [rcx],edx
   140026c67:	sbb    DWORD PTR [rcx],edx
   140026c69:	adc    DWORD PTR [rcx],edx
   140026c6b:	sbb    dl,BYTE PTR [rcx]
   140026c6d:	adc    DWORD PTR [rcx],edx
   140026c6f:	(bad)  
   140026c70:	ret    0xb3bd
   140026c73:	in     eax,dx
   140026c74:	mov    cl,0xac
   140026c76:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140026c77:	inc    DWORD PTR [rsi-0x7100827f]
   140026c7d:	mov    DWORD PTR [rcx-0x78706801],eax
   140026c83:	call   FWORD PTR [rsp+rdx*4-0x786e0077]
   140026c8a:	jp     0x140026c8b
   140026c8c:	mov    al,BYTE PTR [rsp+rdi*2-0x302b2b01]
   140026c93:	inc    ebx
   140026c95:	ret    
   140026c96:	mov    ebx,0xbdc4c4ff
   140026c9b:	inc    ebx
   140026c9d:	ret    
   140026c9e:	mov    esp,0xabb0b1ff
   140026ca3:	jmp    QWORD PTR [rbx-0x4000615e]
   140026ca9:	mov    esi,0xffb6
	...
   140026cca:	add    BYTE PTR [rax],al
   140026ccc:	adc    DWORD PTR [rcx],edx
   140026cce:	adc    DWORD PTR [rax],ecx
   140026cd0:	adc    DWORD PTR [rcx],edx
   140026cd2:	adc    DWORD PTR [rcx],esp
   140026cd4:	adc    DWORD PTR [rcx],edx
   140026cd6:	adc    DWORD PTR [rbp+0x14],eax
   140026cd9:	adc    DWORD PTR [rcx],edx
   140026cdb:	outs   dx,DWORD PTR ds:[rsi]
   140026cdc:	(bad)  
   140026cdd:	adc    BYTE PTR [rcx],dl
   140026cdf:	(bad)  
   140026ce0:	sbb    eax,0x1ca01412
   140026ce5:	adc    eax,0x161ba414
   140026cea:	adc    eax,0x1e27599b
   140026cef:	mov    bl,0xbb
   140026cf1:	mov    dh,0xac
   140026cf3:	hlt    
   140026cf4:	int3   
   140026cf5:	(bad)  
   140026cf6:	mov    ebp,0xabb6bcff
   140026cfb:	jmp    FWORD PTR [rdi-0x5d006259]
   140026d01:	fwait
   140026d02:	nop
   140026d03:	call   FWORD PTR [rbx+rdx*4-0x7b720078]
   140026d0a:	js     0x140026d0b
   140026d0c:	mov    DWORD PTR [rbp-0x30310084],eax
   140026d12:	leave  
   140026d13:	(bad)  
   140026d14:	mov    esp,0xb9ffb5bd
   140026d19:	mov    ecx,0xb9b9ffb3
   140026d1e:	mov    dl,0xff
   140026d20:	mov    esp,0xb5ffb4bb
   140026d25:	mov    ch,0xae
   140026d27:	(bad)  
   140026d28:	mov    ebp,0xffb6bd
	...
   140026d45:	add    BYTE PTR [rax],al
   140026d47:	add    BYTE PTR [rcx],dl
   140026d49:	adc    DWORD PTR [rcx],edx
   140026d4b:	sbb    dl,BYTE PTR [rcx]
   140026d4d:	adc    DWORD PTR [rcx],edx
   140026d4f:	rex.WR
   140026d50:	es (bad) 
   140026d52:	(bad)  
   140026d53:	xchg   edx,eax
   140026d54:	xor    eax,0x51cf1e31
   140026d59:	push   rbp
   140026d5a:	sub    al,0xfa
   140026d5c:	jbe    0x140026dd8
   140026d5e:	cmp    eax,0x5492a7ff
   140026d63:	call   rbx
   140026d65:	mov    BYTE PTR [rdi+rdi*8-0x34],bl
   140026d69:	js     0x140026dbb
   140026d6b:	push   QWORD PTR [rdx-0x3d02bf9d]
   140026d71:	mov    ecx,0xb0b3fcad
   140026d76:	test   eax,0x85898eff
   140026d7b:	call   QWORD PTR [rax-0x6d007974]
   140026d81:	lea    eax,[rbp-0x776f6801]
   140026d87:	dec    DWORD PTR [rsi-0x7700847a]
   140026d8d:	test   BYTE PTR [rbx-0x1],bh
   140026d90:	leave  
   140026d91:	leave  
   140026d92:	(bad)  
   140026d93:	push   QWORD PTR [rdi-0x4b004f4a]
   140026d99:	mov    ah,0xac
   140026d9b:	push   QWORD PTR [rbx-0x4d00534d]
   140026da1:	mov    cl,0xa9
   140026da3:	push   QWORD PTR [rcx-0x4800564f]
   140026da9:	mov    eax,0xffb0
	...
   140026dc6:	add    BYTE PTR [rax],al
   140026dc8:	adc    al,0x13
   140026dca:	adc    edi,DWORD PTR [rax]
   140026dcc:	push   0x35
   140026dce:	cs mov dl,0xb2
   140026dd1:	push   rsi
   140026dd2:	rex.W mul BYTE PTR [rbx-0x76]
   140026dd6:	cmp    eax,0x46b054ff
   140026ddb:	call   QWORD PTR [rax-0x47]
   140026dde:	rex.R inc DWORD PTR [rbx+rax*8+0x3f]
   140026de3:	(bad)  
   140026de4:	jle    0x140026d87
   140026de6:	jmp    FWORD PTR [r10+rsi*2+0x67b3ff43]
   140026dee:	rex inc edi
   140026df1:	mov    ebp,0xc3c6ffae
   140026df6:	mov    edx,0xa8b0b6ff
   140026dfb:	push   QWORD PTR [rcx-0x55005e56]
   140026e01:	movabs eax,ds:0x8b95ff8f9da6ff97
   140026e0a:	jnp    0x140026e0b
   140026e0c:	xchg   DWORD PTR [rdx-0x3c3b0086],eax
   140026e12:	mov    ebp,0xa8b0b0ff
   140026e17:	jmp    FWORD PTR [rbp-0x54005953]
   140026e1d:	stos   DWORD PTR es:[rdi],eax
   140026e1e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140026e1f:	jmp    FWORD PTR [rdx-0x56005c55]
   140026e25:	test   al,0xa1
   140026e27:	push   QWORD PTR [rax+0xffa7b0]
	...
   140026e41:	add    BYTE PTR [rax],al
   140026e43:	add    BYTE PTR [rcx-0x4df3b9b0],ah
   140026e49:	push   rbp
   140026e4a:	rex.RX mov cl,0xcf
   140026e4d:	pop    rsi
   140026e4e:	rex.WRB jmp FWORD PTR [r9+0x59ff4464]
   140026e55:	mov    al,0x44
   140026e57:	call   FWORD PTR [rax-0x4e]
   140026e5a:	rex inc DWORD PTR [rdi+rbp*4+0x39]
   140026e5f:	(bad)  
   140026e60:	cmp    esi,DWORD PTR [rdi-0x53bc00cc]
   140026e66:	sub    edi,edi
   140026e68:	fs pushf 
   140026e6a:	xor    bh,bh
   140026e6c:	xchg   edx,eax
   140026e6d:	outs   dx,DWORD PTR ds:[rsi]
   140026e6e:	ss inc ebp
   140026e71:	mov    edx,0xb4b8ffac
   140026e76:	scas   al,BYTE PTR es:[rdi]
   140026e77:	dec    DWORD PTR [rax+rcx*4-0x7a76007d]
   140026e7e:	jg     0x140026e7f
   140026e80:	mov    ecx,DWORD PTR [rcx-0x6e5f0080]
   140026e86:	nop
   140026e87:	jmp    QWORD PTR [rbp-0x77007075]
   140026e8d:	cmp    DWORD PTR [rbx-0x1],0xffb9bfbe
   140026e94:	stos   BYTE PTR es:[rdi],al
   140026e95:	test   eax,0xa7a7ffa3
   140026e9a:	movabs al,ds:0x9da4a5ff9ea5a5ff
   140026ea3:	jmp    QWORD PTR [rdx-0x5500645e]
   140026ea9:	stos   BYTE PTR es:[rdi],al
   140026eaa:	movabs ds:0xff,al
	...
   140026ebf:	add    ch,bl
   140026ec1:	pop    rbp
   140026ec2:	rex.WRX (bad) 
   140026ec4:	fisub  WORD PTR [rsi+0x55]
   140026ec7:	mov    eax,0xff4c5acc
   140026ecc:	cwde   
   140026ecd:	pop    rdi
   140026ece:	cmp    al,0xff
   140026ed0:	cmp    eax,0x34ff2a8d
   140026ed5:	popf   
   140026ed6:	(bad)  
   140026ed7:	push   QWORD PTR [rax+rbx*4]
   140026eda:	sub    al,0xff
   140026edc:	sub    DWORD PTR [rdi-0x60d300dc],ebx
   140026ee2:	and    bh,bh
   140026ee4:	xor    DWORD PTR [rsp+rbx*1+0x1b8f40ff],edx
   140026eeb:	push   QWORD PTR [rdx+0x78]
   140026eee:	sub    bh,bh
   140026ef0:	sar    BYTE PTR [rcx-0x322f0054],0xc4
   140026ef7:	(bad)  
   140026ef8:	(bad)  
   140026efa:	iret   
   140026efb:	(bad)  
   140026efc:	(bad)  
   140026efe:	(bad)  
   140026eff:	jmp    rsi
   140026f01:	fcom   st(0)
   140026f03:	dec    ecx
   140026f05:	enter  0xffbd,0xaf
   140026f09:	mov    bl,0xad
   140026f0b:	dec    DWORD PTR [rax-0x4600837e]
   140026f11:	mov    ecx,0xa3a4ffb3
   140026f16:	fwait
   140026f17:	jmp    QWORD PTR [rcx-0x6100655f]
   140026f1d:	lahf   
   140026f1e:	cwde   
   140026f1f:	call   FWORD PTR [rsi-0x64006963]
   140026f25:	fwait
   140026f26:	xchg   esp,eax
   140026f27:	jmp    QWORD PTR [rsp+riz*4+0xff9d]
	...
   140026f3e:	add    BYTE PTR [rax],al
   140026f40:	(bad)  
   140026f41:	pop    rsi
   140026f42:	rex.WRX xchg rdi,rax
   140026f44:	int    0x5f
   140026f46:	push   rax
   140026f47:	jmp    QWORD PTR [rbp+rdx*2-0x7bb800c2]
   140026f4e:	sub    al,0xff
   140026f50:	and    al,0x8f
   140026f52:	jmp    QWORD PTR es:[rbx+rcx*4]
   140026f56:	(bad)  
   140026f57:	jmp    QWORD PTR [rcx]
   140026f59:	xchg   ebx,eax
   140026f5a:	sbb    edi,edi
   140026f5c:	and    dl,BYTE PTR [rdi-0x5dd400e7]
   140026f62:	(bad)  
   140026f63:	jmp    QWORD PTR [rdi]
   140026f65:	(bad)  
   140026f66:	(bad)  
   140026f67:	(bad)  
   140026f68:	lea    ebx,ds:[rcx]
   140026f6b:	call   FWORD PTR [rcx+rdi*2+0x21]
   140026f6f:	(bad)  
   140026f70:	mov    ebx,0xe4ffabbb
   140026f75:	loope  0x140026f4c
   140026f77:	(bad)  
   140026f78:	(bad)  
   140026f79:	(bad)  
   140026f7a:	out    dx,al
   140026f7b:	push   rsi
   140026f7d:	hlt    
   140026f7e:	jrcxz  0x140026f7f
   140026f80:	in     eax,dx
   140026f81:	fcmovbe st,st(3)
   140026f83:	dec    ecx
   140026f85:	enter  0xffbd,0xaf
   140026f89:	mov    bl,0xad
   140026f8b:	dec    DWORD PTR [rcx-0x4c00837f]
   140026f91:	mov    dl,0xac
   140026f93:	call   FWORD PTR [rsi-0x63006862]
   140026f99:	pushf  
   140026f9a:	xchg   ebp,eax
   140026f9b:	call   FWORD PTR [rcx-0x67006d66]
   140026fa1:	cwde   
   140026fa2:	nop
   140026fa3:	call   QWORD PTR [rbp-0x6100716a]
   140026fa9:	sahf   
   140026faa:	xchg   edi,eax
   140026fab:	inc    DWORD PTR [rax]
	...
   140026fb9:	add    BYTE PTR [rax],al
   140026fbb:	add    ch,cl
   140026fbd:	rex.WXB cmp dl,BYTE PTR [r8-0x2d]
   140026fc1:	pop    rax
   140026fc2:	rex.WX inc rax
   140026fc5:	pop    rbx
   140026fc6:	cmp    eax,0x357f66ff
   140026fcb:	call   FWORD PTR [rdi]
   140026fcd:	cdq    
   140026fce:	(bad)  
   140026fcf:	jmp    FWORD PTR [rcx]
   140026fd1:	xchg   ebx,eax
   140026fd2:	sbb    edi,edi
   140026fd4:	sub    DWORD PTR [rdi-0x60d300e2],ebx
   140026fda:	and    edi,edi
   140026fdc:	cmps   DWORD PTR cs:[rsi],DWORD PTR es:[rdi]
   140026fde:	and    edi,edi
   140026fe0:	and    al,0xa8
   140026fe2:	sbb    bh,bh
   140026fe4:	push   rsp
   140026fe5:	xchg   ecx,eax
   140026fe6:	sub    edi,edi
   140026fe8:	xchg   BYTE PTR [rsi+0x2f],dh
   140026feb:	inc    DWORD PTR [rbp-0x4100d5a5]
   140026ff1:	mov    eax,0xd4d8ffab
   140026ff6:	retf   
   140026ff7:	jmp    rax
   140026ff9:	(bad)  
   140026ffb:	(bad)  
   140026ffc:	fcom   st(5)
   140026ffe:	enter  0xd0ff,0xcd
   140027002:	sar    bh,0xc7
   140027005:	(bad)  
   140027006:	mov    esp,0xadb3afff
   14002700b:	inc    DWORD PTR [rbp-0x5000867f]
   140027011:	mov    al,0xa9
   140027013:	call   FWORD PTR [rax-0x68006d68]
   140027019:	xchg   esi,eax
   14002701a:	(bad)  
   14002701b:	call   QWORD PTR [rsp+rdx*4-0x6e6d0073]
   140027022:	mov    edi,edi
   140027024:	nop
   140027025:	(bad)  
   140027029:	cwde   
   14002702a:	(bad)  
   14002702b:	inc    DWORD PTR [rax]
	...
   140027035:	add    BYTE PTR [rax],al
   140027037:	add    dl,cl
   140027039:	rex xor DWORD PTR [rcx],ecx
   14002703c:	retf   0x3242
   14002703f:	leave  
   140027040:	int    0x41
   140027042:	xor    bh,bh
   140027044:	mov    ebx,0x33ff2a56
   140027049:	test   DWORD PTR [rax],ebx
   14002704b:	call   FWORD PTR [riz*4-0x57cf00e8]
   140027052:	and    al,0xff
   140027054:	(bad)  
   140027055:	mov    ah,0x2e
   140027057:	(bad)  
   140027058:	cmp    DWORD PTR [rdi+rbp*1+0x30c42eff],edi
   14002705f:	(bad)  
   140027060:	cmp    al,0xca
   140027062:	rex (bad) 
   140027064:	mov    edi,0xc5ff3777
   140027069:	gs xor edi,edi
   14002706c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002706d:	cmp    al,0x28
   14002706f:	inc    esp
   140027071:	mov    bh,0xac
   140027073:	push   QWORD PTR [rdi-0x6a00514c]
   140027079:	xchg   edx,eax
   14002707a:	mov    ?,edi
   14002707c:	xchg   edx,eax
   14002707d:	vprotd ymm1,xmm0,[r14+r8*4-0x7a736c01]
   140027087:	dec    DWORD PTR [rbx-0x7c00877e]
   14002708d:	jg     0x140027107
   14002708f:	jmp    FWORD PTR [rbp-0x6b005853]
   140027095:	xchg   esp,eax
   140027096:	(bad)  
   140027097:	call   QWORD PTR [rcx-0x7100756e]
   14002709d:	pop    QWORD PTR [rdi-0x7a737201]
   1400270a3:	dec    DWORD PTR [rdx-0x6d007d76]
   1400270a9:	xchg   edx,eax
   1400270aa:	mov    edi,edi
	...
   1400270b8:	leave  
   1400270b9:	ds cs rex (bad) 
   1400270bd:	(bad)  
   1400270be:	(bad)  
   1400270bf:	inc    edi
   1400270c1:	cmp    eax,0x3db5ff2d
   1400270c6:	(bad)  
   1400270c7:	call   FWORD PTR [rbx+0xeff266e]
   1400270cd:	ret    
   1400270ce:	(bad)  
   1400270cf:	jmp    FWORD PTR [rbx]
   1400270d1:	mov    ch,0x27
   1400270d3:	(bad)  
   1400270d4:	cmp    esi,eax
   1400270d6:	(bad)  
   1400270d7:	dec    DWORD PTR [rdx+rbx*8+0x56]
   1400270db:	dec    DWORD PTR [rax-0x4800a95f]
   1400270e1:	jns    0x14002711d
   1400270e3:	dec    esp
   1400270e5:	outs   dx,BYTE PTR ds:[rsi]
   1400270e6:	xor    bh,bh
   1400270e8:	leave  
   1400270e9:	pop    rdx
   1400270ea:	xor    bh,bh
   1400270ec:	mov    dh,0x45
   1400270ee:	xor    bh,bh
   1400270f0:	ret    0xadb6
   1400270f3:	call   rax
   1400270f5:	int    0xc5
   1400270f7:	call   rsp
   1400270f9:	iret   
   1400270fa:	enter  0xcbff,0xc5
   1400270fe:	mov    ebx,0xacb7bfff
   140027103:	push   QWORD PTR [rdi-0x5f005d52]
   140027109:	xchg   esi,eax
   14002710a:	mov    edi,edi
   14002710c:	test   BYTE PTR [rdi+0x78],bh
   14002710f:	jmp    FWORD PTR [rcx-0x6f005b57]
   140027115:	nop
   140027116:	mov    bh,bh
   140027118:	lea    ecx,[rbp-0x7575007b]
   14002711e:	(bad)  
   14002711f:	dec    DWORD PTR [rax-0x7a007e78]
   140027125:	test   BYTE PTR [rbp-0x1],bh
   140027128:	lea    ecx,[rsp+rax*4+0xff]
	...
   140027137:	add    bh,al
   140027139:	ds cs xchg ebp,eax
   14002713c:	leave  
   14002713d:	(bad)  
   14002713e:	(bad)  
   14002713f:	inc    esi
   140027141:	cmp    al,0x2c
   140027143:	(bad)  
   140027144:	mov    esi,0xa6ff2849
   140027149:	ins    BYTE PTR es:[rdi],dx
   14002714a:	sub    al,0xff
   14002714c:	push   rbp
   14002714d:	xchg   edx,eax
   14002714e:	(bad)  
   14002714f:	call   FWORD PTR [rcx-0x5b]
   140027152:	push   QWORD PTR ds:[rcx-0x6a]
   140027156:	push   QWORD PTR ds:[rbx-0x2b00be78]
   14002715d:	jns    0x140027191
   14002715f:	(bad)  
   140027160:	fild   WORD PTR [rdx+rdi*1+0x407adfff]
   140027167:	call   rax
   140027169:	(bad)  
   14002716a:	rex (bad) 
   14002716c:	mov    eax,0xc6ff3551
   140027171:	mov    ebx,0xbabcffb1
   140027176:	mov    bl,0xff
   140027178:	pushf  
   140027179:	(bad)  
   14002717a:	xchg   esi,eax
   14002717b:	call   QWORD PTR [rbp-0x6f00716f]
   140027181:	mov    WORD PTR [rsi-0x78716b01],es
   140027187:	dec    DWORD PTR [rsi-0x7e008179]
   14002718d:	jle    0x140027207
   14002718f:	jmp    QWORD PTR [rbp-0x73005f5b]
   140027195:	mov    WORD PTR [rdi+rdi*8-0x7d7676],es
   14002719c:	xchg   BYTE PTR [rbp-0x7b7b0081],al
   1400271a2:	jl     0x1400271a3
   1400271a4:	add    BYTE PTR [rcx-0x77770088],0x7e
   1400271ab:	inc    DWORD PTR [rax]
	...
   1400271b5:	add    BYTE PTR [rax],al
   1400271b7:	add    al,cl
   1400271b9:	cmp    eax,0x3ac3d52d
   1400271be:	sub    edi,edi
   1400271c0:	mov    cl,0x3a
   1400271c2:	(bad)  
   1400271c3:	call   FWORD PTR [rcx-0x3c00cb9b]
   1400271c9:	ins    DWORD PTR es:[rdi],dx
   1400271ca:	xor    bh,bh
   1400271cc:	(bad)  
   1400271cd:	ja     0x140027200
   1400271cf:	call   rsi
   1400271d1:	xor    BYTE PTR [rip+0x3583ddff],0xff        # 0x175864fd7
   1400271d8:	loope  0x140027161
   1400271da:	xor    eax,0x3e94ebff
   1400271df:	push   rsi
   1400271e1:	cwde   
   1400271e2:	rex.WB (bad) 
   1400271e4:	(bad)  
   1400271e5:	mov    BYTE PTR [rcx-0x1],cl
   1400271e8:	(bad)  
   1400271e9:	je     0x140027230
   1400271eb:	(bad)  
   1400271ec:	mov    ebx,0xcaff3b5d
   1400271f1:	ret    
   1400271f2:	mov    eax,0xc3cacdff
   1400271f7:	inc    ebp
   1400271f9:	sar    DWORD PTR [rbx-0x48403b01],0xff
   140027200:	ret    0xb1bb
   140027203:	push   QWORD PTR [rsi-0x5e005c52]
   140027209:	cwde   
   14002720a:	mov    edi,edi
   14002720c:	cmp    DWORD PTR [rsi+0x78],0x9da3a2ff
   140027213:	dec    DWORD PTR [rax-0x7a007f78]
   140027219:	test   DWORD PTR [rsi-0x1],edi
   14002721c:	(bad)  
   14002721d:	(bad)  
   14002721e:	jnp    0x14002721f
   140027220:	add    DWORD PTR [rcx+0x7e7dff78],0x8384ff74
   14002722a:	jp     0x14002722b
	...
   140027238:	mov    esi,0xb2f62a37
   14002723d:	cs and al,0xff
   140027240:	mov    DWORD PTR [rbp+rbp*1-0x1],ebp
   140027244:	mov    WORD PTR [rbp+0x67dbff38],es
   14002724a:	sub    eax,0x2f80e5ff
   14002724f:	(bad)  
   140027250:	ficom  WORD PTR [rbx-0x671400c5]
   140027256:	cmp    bh,bh
   140027258:	sti    
   140027259:	test   eax,0xaefeff3f
   14002725e:	rex.X (bad) 
   140027260:	stc    
   140027261:	stos   DWORD PTR es:[rdi],eax
   140027262:	rex.R push rcx
   140027265:	pushf  
   140027266:	rex.RB (bad) 
   140027268:	fild   DWORD PTR [rbx+rax*2+0x3b67beff]
   14002726f:	dec    ebp
   140027271:	enter  0xffbd,0xca
   140027275:	mov    eax,0xabafb0ff
   14002727b:	jmp    QWORD PTR [rcx-0x64006460]
   140027281:	xchg   edi,eax
   140027282:	xchg   ecx,eax
   140027283:	jmp    QWORD PTR [rdx-0x65006d63]
   140027289:	xchg   ebx,eax
   14002728a:	mov    edi,edi
   14002728c:	cmp    BYTE PTR [rsi+0x79],0xff
   140027290:	sahf   
   140027291:	sahf   
   140027292:	cwde   
   140027293:	inc    DWORD PTR [rsi-0x7c00817b]
   140027299:	cmp    DWORD PTR [rbx-0x1],0xffffff80
   14002729d:	xor    BYTE PTR [rdi-0x1],0x7e
   1400272a1:	jl     0x140027318
   1400272a3:	(bad)  
   1400272a4:	jns    0x140027320
   1400272a6:	jno    0x1400272a7
   1400272a8:	jle    0x140027329
   1400272aa:	jbe    0x1400272ab
	...
   1400272b8:	scas   al,BYTE PTR es:[rdi]
   1400272b9:	xor    BYTE PTR [rip+0x2b628bff],ah        # 0x16b64febe
   1400272bf:	call   FWORD PTR [rdi-0x63]
   1400272c2:	xor    al,0xff
   1400272c4:	mov    ah,0x66
   1400272c6:	sub    bh,bh
   1400272c8:	sar    DWORD PTR [rsp+rbp*1-0x1],1
   1400272cc:	fcomp  DWORD PTR [rbx-0x4c1400c7]
   1400272d2:	rex.RXB (bad) 
   1400272d4:	stc    
   1400272d5:	mov    ecx,0xc5ffff3c
   1400272da:	rex.RB (bad) 
   1400272dc:	dec    ecx
   1400272de:	rex.WR (bad) 
   1400272e0:	inc    esi
   1400272e2:	rex.WR (bad) 
   1400272e4:	out    dx,eax
   1400272e5:	stos   DWORD PTR es:[rdi],eax
   1400272e6:	rex.R (bad) 
   1400272e8:	fcom   QWORD PTR [rax+0x70c2ff40]
   1400272ee:	cmp    bh,bh
   1400272f0:	ror    ah,1
   1400272f2:	sar    edi,0xd7
   1400272f5:	(bad)  
   1400272f6:	sar    edi,1
   1400272f8:	rcl    ebp,cl
   1400272fa:	sar    edi,1
   1400272fc:	iret   
   1400272fd:	ror    dl,1
   1400272ff:	dec    ebp
   140027301:	retf   
   140027302:	mov    edi,0xb9cacfff
   140027307:	(bad)  
   140027308:	mov    eax,0x7affa2b3
   14002730d:	jp     0x140027383
   14002730f:	call   FWORD PTR [rsi-0x7b006862]
   140027315:	test   BYTE PTR [rbp-0x1],bh
   140027318:	add    DWORD PTR [rcx+0x7e7eff7a],0x7b7bff76
   140027322:	jae    0x140027323
   140027324:	jne    0x14002739c
   140027326:	ins    DWORD PTR es:[rdi],dx
   140027327:	(bad)  
   140027328:	jnp    0x1400273a5
   14002732a:	jb     0x14002732b
	...
   140027338:	(bad)  
   140027339:	and    r15,r11
   14002733c:	(bad)  
   14002733d:	mov    DWORD PTR [rsi],ebp
   14002733f:	push   QWORD PTR [rbx-0x3300c6a1]
   140027345:	jb     0x140027376
   140027347:	push   QWORD PTR [rax+riz*4-0x629600ac]
   14002734e:	xchg   edi,eax
   14002734f:	dec    DWORD PTR [rdx]
   140027351:	mov    edx,edx
   140027353:	dec    DWORD PTR [rdx]
   140027355:	xchg   edi,ecx
   140027357:	dec    DWORD PTR [rdx]
   140027359:	test   ebp,ecx
   14002735b:	dec    DWORD PTR [rdx]
   14002735d:	or     edx,0xffffffff
   140027360:	or     al,BYTE PTR [rdx-0x7ff50038]
   140027366:	(bad)  
   140027369:	jle    0x14002732e
   14002736b:	jmp    FWORD PTR [rsi-0x69]
   14002736e:	xchg   ebx,eax
   14002736f:	call   rbx
   140027371:	(bad)  
   140027372:	ret    
   140027373:	jmp    rdi
   140027375:	out    0xe1,al
   140027377:	(bad)  
   140027378:	stc    
   140027379:	clc    
   14002737a:	repz (bad) 
   14002737c:	in     eax,dx
   14002737d:	in     al,dx
   14002737e:	jrcxz  0x14002737f
   140027380:	(bad)  
   140027381:	call   0x126ee7363
   140027386:	sar    edi,cl
   140027388:	(bad)  
   140027389:	mov    esi,0x797affa9
   14002738e:	jb     0x14002738f
   140027390:	popf   
   140027391:	popf   
   140027392:	cwde   
   140027393:	inc    DWORD PTR [rdx+rax*4-0x7e7e0083]
   14002739a:	jns    0x14002739b
   14002739c:	jle    0x14002741c
   14002739e:	jbe    0x14002739f
   1400273a0:	jp     0x14002741d
   1400273a2:	jb     0x1400273a3
   1400273a4:	jne    0x14002741a
   1400273a6:	ins    DWORD PTR es:[rdi],dx
   1400273a7:	(bad)  
   1400273a8:	jp     0x140027423
   1400273aa:	jno    0x1400273ab
	...
   1400273b8:	xchg   BYTE PTR [rbp+0x27],bl
   1400273bb:	in     eax,0x4e
   1400273bd:	movabs eax,ds:0x7ae0ff2f52caff29
   1400273c6:	sub    edi,edi
   1400273c8:	fild   QWORD PTR [rax-0x67f800c3]
   1400273ce:	loope  0x1400273cf
   1400273d0:	jge    0x1400273ac
   1400273d2:	stc    
   1400273d3:	(bad)  
   1400273d4:	jge    0x1400273b6
   1400273d6:	(bad)  
   1400273d7:	(bad)  
   1400273d8:	jge    0x1400273b7
   1400273da:	(bad)  
   1400273db:	(bad)  
   1400273dc:	jge    0x1400273b8
   1400273de:	(bad)  
   1400273df:	(bad)  
   1400273e0:	jge    0x1400273ba
   1400273e2:	(bad)  
   1400273e3:	(bad)  
   1400273e4:	jge    0x1400273bb
   1400273e6:	(bad)  
   1400273e7:	call   QWORD PTR [rdi-0x40]
   1400273ea:	(bad)  
   1400273eb:	dec    DWORD PTR [rdx]
   1400273ed:	add    ch,0xff
   1400273f0:	ror    edi,cl
   1400273f2:	(bad)  
   1400273f5:	mov    esi,0x7a82ffad
   1400273fa:	jmp    QWORD PTR gs:[rbx+0x5f]
   1400273fe:	pop    rax
   1400273ff:	push   QWORD PTR [rbx+0x71]
   140027402:	ins    DWORD PTR es:[rdi],dx
   140027403:	dec    edx
   140027405:	enter  0xffc1,0xd1
   140027409:	int    0xbc
   14002740b:	(bad)  
   14002740c:	jp     0x140027487
   14002740e:	jae    0x14002740f
   140027410:	sahf   
   140027411:	lahf   
   140027412:	xchg   edi,eax
   140027413:	inc    DWORD PTR [rsp+rax*4+0x7f7fff7b]
   14002741a:	jne    0x14002741b
   14002741c:	jnp    0x140027499
   14002741e:	jo     0x14002741f
   140027420:	ja     0x140027499
   140027422:	outs   dx,BYTE PTR ds:[rsi]
   140027423:	push   QWORD PTR [rdx+0x72]
   140027426:	imul   edi,edi,0xff6e7879
	...
   140027438:	cwde   
   140027439:	pop    rsp
   14002743a:	sub    esi,DWORD PTR [rsp+rbp*1-0x7000dc3d]
   140027441:	mov    ?,WORD PTR [rdi+rdi*8]
   140027444:	stos   DWORD PTR es:[rdi],eax
   140027445:	xchg   esi,eax
   140027446:	dec    DWORD PTR ss:[rbx-0xe00b72e]
   14002744d:	ret    
   14002744e:	rex.RX inc DWORD PTR [rdi]
   140027451:	cwde   
   140027452:	loopne 0x140027453
   140027454:	(bad)  
   140027455:	fdiv   st(1),st
   140027457:	push   QWORD PTR [rip+0x31ffffd7]        # 0x172027434
   14002745d:	sar    edi,cl
   14002745f:	jmp    FWORD PTR [rbx]
   140027461:	(bad)  
   140027462:	(bad)  
   140027463:	jmp    QWORD PTR [rsi]
   140027465:	mov    ebx,0xd85dffff
   14002746a:	(bad)  
   14002746b:	dec    DWORD PTR [rdx]
   14002746d:	or     edx,0xffffffff
   140027470:	(bad)  
   140027471:	rol    esi,1
   140027473:	(bad)  
   140027474:	mov    esp,0xa6ff90a9
   140027479:	xchg   edx,eax
   14002747a:	jg     0x14002747b
   14002747c:	popf   
   14002747d:	mov    al,BYTE PTR [rax+0x7a7e92ff]
   140027483:	jmp    QWORD PTR [rdx-0x53005f55]
   140027489:	mov    ebx,0x9786ffac
   14002748e:	mov    edi,edi
   140027490:	mov    edx,DWORD PTR [rbx-0x7474097c]
   140027496:	xchg   ebx,ecx
   140027498:	nop
   140027499:	nop
   14002749a:	mov    WORD PTR [rsp+rdx*4-0x6b4f6f6d],?
   1400274a1:	xchg   esp,eax
   1400274a2:	xchg   edx,eax
   1400274a3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400274a4:	xchg   esp,eax
   1400274a5:	xchg   esp,eax
   1400274a6:	xchg   ecx,eax
   1400274a7:	lahf   
   1400274a8:	cdq    
   1400274a9:	cwde   
   1400274aa:	xchg   ebp,eax
   1400274ab:	popf   
	...
   1400274b8:	stos   DWORD PTR es:[rdi],eax
   1400274b9:	push   rbp
   1400274ba:	xor    al,0x57
   1400274bc:	(bad)  
   1400274bd:	(bad)  
   1400274be:	and    edi,edi
   1400274c0:	adc    al,0xe3
   1400274c2:	and    al,0xff
   1400274c4:	and    cl,ah
   1400274c6:	and    edi,edi
   1400274c8:	(bad)  
   1400274c9:	repnz xor al,0xff
   1400274cc:	xchg   edx,eax
   1400274cd:	(bad)  
   1400274ce:	jge    0x1400274cf
   1400274d0:	push   rax
   1400274d1:	mov    eax,0x980affac
   1400274d6:	in     eax,0xff
   1400274d8:	test   dl,bl
   1400274da:	stc    
   1400274db:	jmp    QWORD PTR [rcx]
   1400274dd:	iret   
   1400274de:	(bad)  
   1400274df:	call   FWORD PTR [rdx]
   1400274e1:	sar    edi,0xff
   1400274e4:	sbb    DWORD PTR [rdi-0x2aa30001],esi
   1400274ea:	(bad)  
   1400274eb:	dec    DWORD PTR [rdx]
   1400274ed:	xchg   eax,edx
   1400274ef:	dec    edi
   1400274f1:	xchg   esp,eax
   1400274f2:	push   rbx
   1400274f3:	call   rsi
   1400274f5:	movabs al,ds:0x96d2ff5a9cd4ff5b
   1400274fe:	push   rdi
   1400274ff:	(bad)  
   140027500:	mov    edi,0xafff4476
   140027505:	sahf   
   140027506:	pop    rbx
   140027507:	call   FWORD PTR [rdi-0x76009053]
   14002750d:	scas   eax,DWORD PTR es:[rdi]
   14002750e:	pop    rsi
   14002750f:	jmp    FWORD PTR [rdi+0x7e]
   140027512:	xor    esp,DWORD PTR [rdx+0x0]
	...
   140027535:	add    BYTE PTR [rax],al
   140027537:	add    BYTE PTR [rbx*4-0x58c00030],bl
   14002753e:	and    al,0xf7
   140027540:	adc    dh,bl
   140027542:	sub    edi,edi
   140027544:	fild   QWORD PTR es:[rip+0x46f338ff]        # 0x186f5ae4a
   14002754b:	(bad)  
   14002754c:	cmp    al,0xb8
   14002754e:	mov    bl,0xff
   140027550:	(bad)  
   140027551:	lahf   
   140027552:	call   0x13df11f56
   140027557:	jmp    QWORD PTR [rax+rcx*8]
   14002755a:	(bad)  
   14002755b:	call   QWORD PTR [rbx]
   14002755d:	retf   0xffff
   140027560:	add    al,0xbc
   140027562:	(bad)  
   140027563:	inc    DWORD PTR [rdi]
   140027565:	mov    cl,0xff
   140027567:	call   FWORD PTR [rdi+rdx*8-0x1]
   14002756b:	dec    DWORD PTR [rdx]
   14002756d:	mov    edx,ebp
   14002756f:	(bad)  
   140027570:	dec    esi
   140027572:	outs   dx,BYTE PTR ds:[rsi]
   140027573:	push   rdi
   140027575:	mov    edx,0xa6f2ff6d
   14002757a:	addr32 dec edi
   14002757d:	jo     0x1400275c6
   14002757f:	jmp    FWORD PTR [rdx-0x5500b986]
   140027585:	nop
   140027586:	pop    rbp
   140027587:	(bad)  
   140027588:	js     0x140027555
   14002758a:	mov    bh,bh
   14002758c:	addr32 xchg ecx,eax
   14002758e:	rex.WRXB icebp 
   140027590:	mov    ss,WORD PTR [rdi+0x27]
   140027593:	(bad)  
	...
   1400275b4:	and    al,0xa5
   1400275b6:	iret   
   1400275b7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400275b8:	(bad)  
   1400275b9:	cwde   
   1400275ba:	(bad)  
   1400275bb:	jmp    FWORD PTR [rdi]
   1400275bd:	mov    al,BYTE PTR [rcx+0x30ed23aa]
   1400275c3:	jmp    QWORD PTR [rbx]
   1400275c5:	test   BYTE PTR [rdx-0x1],0x38
   1400275c9:	mov    eax,0xa516ffa8
   1400275ce:	in     eax,dx
   1400275cf:	push   QWORD PTR [rcx+0x3ffffdf1]
   1400275d5:	sar    edi,cl
   1400275d7:	jmp    FWORD PTR [rdi]
   1400275d9:	int    0xff
   1400275db:	call   FWORD PTR [rsi]
   1400275dd:	(bad)  
   1400275de:	(bad)  
   1400275df:	dec    DWORD PTR [rbx]
   1400275e1:	mov    eax,0xb00afffd
   1400275e6:	(bad)  
   1400275e7:	call   FWORD PTR [rsi+rdx*8-0x1]
   1400275eb:	dec    DWORD PTR [rdx]
   1400275ed:	mov    ds,edx
   1400275ef:	(bad)  
   1400275f0:	call   rax
   1400275f2:	je     0x1400275f3
   1400275f4:	idiv   DWORD PTR [rbp-0x580d0090]
   1400275fa:	push   0xffffffffffffffff
   1400275fc:	shr    BYTE PTR [rbx+rax*2-0x1],cl
   140027600:	xchg   edx,eax
   140027601:	fisttp WORD PTR [rdi+rdi*8-0xa2764a]
   140027608:	mov    ah,0x3e
   14002760a:	sub    al,0xff
   14002760c:	scas   al,BYTE PTR es:[rdi]
   14002760d:	cmp    DWORD PTR [rsi],esp
   14002760f:	imul   eax,DWORD PTR [rax],0x0
	...
   140027631:	mov    cl,cl
   140027633:	and    eax,0xe0ca9406
   140027638:	add    al,0x96
   14002763a:	(bad)  
   14002763b:	call   QWORD PTR [rdi+0x66064184]
   140027641:	mov    esi,0xb435c539
   140027646:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140027647:	jmp    QWORD PTR [rbx]
   140027649:	mov    cl,0xf7
   14002764b:	(bad)  
   14002764c:	mov    ecx,0x5afffff6
   140027651:	fdivp  st(7),st
   140027653:	(bad)  
   140027654:	(bad)  
   140027655:	int3   
   140027656:	(bad)  
   140027657:	call   FWORD PTR [rdi]
   140027659:	mov    eax,0xa814ffff
   14002765e:	(bad)  
   140027660:	add    al,0x92
   140027662:	(bad)  
   140027663:	push   QWORD PTR [rsi]
   140027665:	mov    dl,0xfc
   140027667:	call   FWORD PTR [rsp+rdx*8-0x1]
   14002766b:	dec    DWORD PTR [rdx]
   14002766d:	xchg   edx,eax
   14002766e:	fdivp  st(7),st
   140027670:	dec    esp
   140027672:	ja     0x140027673
   140027674:	hlt    
   140027675:	mov    ah,0x6f
   140027677:	(bad)  
   140027678:	fisttp WORD PTR [rdi+0x60c7ff58]
   14002767e:	cmp    al,0xff
   140027680:	sahf   
   140027681:	(bad)  
   140027682:	jp     0x140027683
   140027684:	(bad)  
   140027685:	mov    cl,0x67
   140027687:	jmp    FWORD PTR [rcx+0xc4345a]
	...
   1400276b1:	mov    cl,bl
   1400276b3:	pop    rsp
   1400276b4:	add    BYTE PTR [rdx-0x68fb0035],cl
   1400276ba:	loopne 0x1400276bb
   1400276bc:	add    al,0xa6
   1400276be:	(bad)  
   1400276bf:	push   QWORD PTR [rdx]
   1400276c1:	mov    ebp,0xd15cffff
   1400276c6:	(bad)  
   1400276c7:	(bad)  
   1400276c8:	mov    esi,0x5efffff9
   1400276cd:	fcos   
   1400276cf:	push   QWORD PTR [rsi]
   1400276d1:	(bad)  
   1400276d2:	(bad)  
   1400276d3:	jmp    QWORD PTR [rdx+rsi*4]
   1400276d6:	in     al,dx
   1400276d7:	dec    DWORD PTR [rcx]
   1400276d9:	(bad)  
   1400276da:	(bad)  
   1400276db:	call   FWORD PTR [rcx-0x5d]
   1400276de:	sar    edi,0xdf
   1400276e1:	mov    eax,0x8e04ff6c
   1400276e6:	sar    edi,1
   1400276e8:	xor    ch,BYTE PTR [rsi-0x6cf50007]
   1400276ee:	loope  0x1400276ef
   1400276f0:	call   rax
   1400276f2:	jne    0x1400276f3
   1400276f4:	out    0xa1,al
   1400276f6:	(bad)  
   1400276f7:	call   rcx
   1400276f9:	mov    ebx,DWORD PTR [rcx-0x1]
   1400276fc:	retf   0x5b98
   1400276ff:	jmp    QWORD PTR [rax-0x14]
   140027702:	jbe    0x140027703
   140027704:	pop    rsp
   140027705:	fisubr DWORD PTR [rbx+riz*8-0x67]
   140027709:	ins    BYTE PTR es:[rdi],dx
   14002770a:	cmp    DWORD PTR [rdx],ebp
	...
   140027730:	add    BYTE PTR [rdx-0x64e1a335],cl
   140027736:	iret   
   140027737:	(bad)  
   140027738:	cmp    ch,al
   14002773a:	std    
   14002773b:	dec    DWORD PTR [rdi-0x28]
   14002773e:	(bad)  
   14002773f:	jmp    FWORD PTR [rbx-0x23]
   140027742:	(bad)  
   140027743:	push   QWORD PTR [rdx-0x23]
   140027746:	(bad)  
   140027747:	inc    DWORD PTR [rdi-0x34]
   14002774a:	(bad)  
   14002774b:	push   QWORD PTR [rsi]
   14002774d:	mov    edx,0x9b16fff4
   140027752:	(bad)  
   140027753:	call   QWORD PTR [rcx]
   140027755:	cwde   
   140027756:	sar    edi,cl
   140027758:	rex.XB stos DWORD PTR es:[rdi],eax
   14002775a:	iret   
   14002775b:	(bad)  
   14002775c:	(bad)  
   14002775d:	jmp    0x1400276f4
   14002775f:	jmp    rsi
   140027761:	mov    eax,0xadd4ff41
   140027766:	push   0xffffffffd18c04ff
   14002776b:	jmp    QWORD PTR [rbx-0x61]
   14002776e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002776f:	(bad)  
   140027770:	clc    
   140027771:	int    0x6c
   140027773:	(bad)  
   140027774:	(bad)  
   140027775:	lods   eax,DWORD PTR ds:[rsi]
   140027776:	pop    rdi
   140027777:	(bad)  
   140027778:	(bad)  [rsi-0x6432009c]
   14002777e:	pop    rsi
   14002777f:	inc    DWORD PTR [rsi+rbp*4-0x738136ab]
   140027786:	sub    r8b,BYTE PTR [rax]
	...
   1400277b1:	mov    cl,bl
   1400277b3:	(bad)  
   1400277b4:	sub    al,0xb0
   1400277b6:	(bad)  
   1400277b8:	(bad)  
   1400277b9:	ret    0xffff
   1400277bc:	rex.WB (bad) 
   1400277be:	(bad)  
   1400277bf:	dec    DWORD PTR [rdx-0x31]
   1400277c2:	clc    
   1400277c3:	(bad)  
   1400277c4:	ss mov ch,0xe5
   1400277c7:	call   FWORD PTR [rbx]
   1400277c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400277ca:	in     al,0xff
   1400277cc:	sbb    DWORD PTR [rsi-0x4ed9001e],esp
   1400277d2:	(bad)  
   1400277d3:	(bad)  
   1400277d4:	xchg   esp,eax
   1400277d5:	lods   eax,DWORD PTR ds:[rsi]
   1400277d6:	push   rdi
   1400277d7:	call   QWORD PTR [rbx-0x5c00841f]
   1400277dd:	repz popf 
   1400277df:	jmp    rsp
   1400277e1:	(bad)
   1400277e4:	idiv   edi
   1400277e6:	hlt    
   1400277e7:	(bad)  
   1400277e8:	stc    
   1400277e9:	out    dx,eax
   1400277ea:	sar    edi,1
   1400277ec:	mov    dl,0x9d
   1400277ee:	push   0x69b9e2ff
   1400277f3:	jmp    rax
   1400277f5:	movabs al,ds:0x9ec4f46fb6cfff58
   1400277fe:	pop    rdx
   1400277ff:	sub    DWORD PTR [rsi+0xd5091],0x0
	...
   140027832:	add    BYTE PTR [rax],al
   140027834:	cmp    BYTE PTR [rax-0x50d7b82b],dh
   14002783a:	loope  0x140027802
   14002783c:	sub    BYTE PTR [rcx-0x4fda241c],dh
   140027842:	in     al,0xdb
   140027844:	(bad)  
   140027845:	scas   al,BYTE PTR es:[rdi]
   140027846:	(bad)  
   140027847:	mov    ebp,0x7cf4b012
   14002784c:	add    BYTE PTR [rax],al
   14002784e:	add    BYTE PTR [rax],al
   140027850:	ins    BYTE PTR es:[rdi],dx
   140027851:	retf   0x1b51
   140027854:	mov    es,esp
   140027856:	outs   dx,DWORD PTR ds:[rsi]
   140027857:	jne    0x140027802
   140027859:	xlat   BYTE PTR ds:[rbx]
   14002785a:	xchg   esi,eax
   14002785b:	fnstcw WORD PTR [rbx-0x2d0a8039]
   140027861:	mov    esp,0xd3d6ff76
   140027866:	scas   eax,DWORD PTR es:[rdi]
   140027867:	(bad)  
   140027868:	fmulp  st(3),st
   14002786a:	test   al,0xff
   14002786c:	fstp   DWORD PTR [rcx-0x62181da7]
   140027872:	pop    rsi
   140027873:	test   eax,0x5e5e9ccd
   140027878:	(bad)  
   140027879:	enter  0x1980,0x0
	...
   1400278ad:	add    BYTE PTR [rax],al
   1400278af:	add    bh,bh
   1400278b1:	(bad)  
   1400278b2:	cld    
   1400278b3:	(bad)  
   1400278b4:	(bad)  
   1400278b5:	inc    DWORD PTR [rax+0xffff1f]
   1400278bb:	(bad)  
   1400278bc:	(bad)  
   1400278bd:	inc    DWORD PTR [rax]
   1400278bf:	add    edi,edi
   1400278c1:	inc    DWORD PTR [rax]
   1400278c3:	add    edi,edi
   1400278c5:	inc    DWORD PTR [rax]
   1400278c7:	add    edi,edi
   1400278c9:	inc    DWORD PTR [rax]
   1400278cb:	add    edi,edi
   1400278cd:	rol    BYTE PTR [rax],0x1
   1400278d0:	inc    BYTE PTR [rax]
   1400278d2:	add    BYTE PTR [rcx],al
   1400278d4:	cld    
   1400278d5:	add    BYTE PTR [rax],al
   1400278d7:	add    esp,edi
   1400278d9:	add    BYTE PTR [rax],al
   1400278db:	add    eax,edi
   1400278dd:	add    BYTE PTR [rax],al
   1400278df:	add    eax,esi
   1400278e1:	add    BYTE PTR [rax],al
   1400278e3:	add    eax,esi
   1400278e5:	add    BYTE PTR [rax],al
   1400278e7:	add    eax,esp
   1400278e9:	add    BYTE PTR [rax],al
   1400278eb:	add    eax,eax
   1400278ed:	add    BYTE PTR [rax],al
   1400278ef:	add    eax,eax
   1400278f1:	add    BYTE PTR [rax],al
   1400278f3:	add    eax,eax
   1400278f5:	add    BYTE PTR [rax],al
   1400278f7:	add    eax,eax
   1400278f9:	add    BYTE PTR [rax],al
   1400278fb:	add    eax,eax
   1400278fd:	add    BYTE PTR [rax],al
   1400278ff:	add    eax,eax
   140027901:	add    BYTE PTR [rax],al
   140027903:	add    eax,eax
   140027905:	add    BYTE PTR [rax],al
   140027907:	add    eax,eax
   140027909:	add    BYTE PTR [rax],al
   14002790b:	add    eax,eax
   14002790d:	add    BYTE PTR [rax],al
   14002790f:	add    eax,eax
   140027911:	add    BYTE PTR [rax],al
   140027913:	jg     0x1400278d5
   140027915:	add    BYTE PTR [rax],al
   140027917:	jg     0x140027899
   140027919:	add    BYTE PTR [rax],al
   14002791b:	inc    DWORD PTR [rax]
   14002791d:	add    BYTE PTR [rcx],al
   14002791f:	inc    DWORD PTR [rax]
   140027921:	add    BYTE PTR [rcx],al
   140027923:	inc    DWORD PTR [rax]
   140027925:	add    BYTE PTR [rbx],al
   140027927:	inc    DWORD PTR [rax]
   140027929:	add    BYTE PTR [rdi],al
   14002792b:	inc    DWORD PTR [rcx+0x28ff1f00]
   140027931:	add    BYTE PTR [rax],al
   140027933:	add    BYTE PTR [rax],bl
   140027935:	add    BYTE PTR [rax],al
   140027937:	add    BYTE PTR [rax],dh
   140027939:	add    BYTE PTR [rax],al
   14002793b:	add    BYTE PTR [rcx],al
   14002793d:	add    BYTE PTR [rax],ah
   14002793f:	add    BYTE PTR [rax],al
   140027941:	add    BYTE PTR [rax],al
   140027943:	add    BYTE PTR [rax+0x9],ah
	...
   14002798e:	add    BYTE PTR [rax],al
   140027990:	popf   
   140027991:	xchg   edi,eax
   140027992:	mov    es,WORD PTR [rdx]
   140027994:	popf   
   140027995:	cdq    
   140027996:	(bad)  
   140027997:	adc    DWORD PTR [rdi-0x69d86a6b],esp
   14002799d:	(bad)  
   14002799e:	(bad)  
   14002799f:	cmp    al,0x5b
   1400279a1:	pop    rdi
   1400279a2:	push   rdi
   1400279a3:	sub    BYTE PTR gs:[rdx],ch
   1400279a6:	sub    DWORD PTR [rax+rax*1],ebx
	...
   1400279e5:	add    BYTE PTR [rax],al
   1400279e7:	add    BYTE PTR [rax-0x619c766e],bl
   1400279ed:	cwde   
   1400279ee:	mov    es,WORD PTR [rbx-0x5e786f6a]
   1400279f4:	xchg   edx,eax
   1400279f5:	jnp    0x140027a70
   1400279f7:	(bad)  
   1400279f8:	pop    rbp
   1400279f9:	movabs ds:0x7b67ff379d35ff59,al
   140027a02:	push   WORD PTR [rax+0x32ddacac]
   140027a09:	xor    dh,BYTE PTR [rax]
   140027a0b:	push   rax
	...
   140027a48:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140027a49:	sahf   
   140027a4a:	xchg   ebp,eax
   140027a4b:	call   QWORD PTR [rsi+rcx*4-0x6863007a]
   140027a52:	(bad)  
   140027a53:	jmp    QWORD PTR [rdi+0x1cff7a7b]
   140027a59:	shl    DWORD PTR [rdi+rdi*8+0x0],1
   140027a5d:	(bad)  
   140027a5e:	je     0x140027a5f
   140027a60:	pop    rbp
   140027a61:	addr32 pop rbp
   140027a63:	push   rsi
   140027a65:	cmc    
   140027a66:	bnd jmp rbx
   140027a69:	jrcxz  0x140027a45
   140027a6b:	dec    DWORD PTR [rsi+0x4e]
   140027a6e:	rex.WR movabs ds:0x15494c4b,rax
	...
   140027aa8:	mov    esp,0xacffadb6
   140027aad:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140027aae:	lahf   
   140027aaf:	dec    DWORD PTR [rax-0x7700867f]
   140027ab5:	jl     0x140027b2c
   140027ab7:	inc    DWORD PTR [rdi+0x76ff8086]
   140027abd:	ja     0x140027b36
   140027abf:	(bad)  
   140027ac0:	jle    0x140027b38
   140027ac2:	jo     0x140027ac3
   140027ac4:	in     al,0xe3
   140027ac6:	fdiv   st(7),st
   140027ac8:	int    0xcb
   140027aca:	ret    
   140027acb:	inc    esi
   140027acd:	(bad)
   140027ad0:	movabs ds:0x3d222222e19ea2,al
	...
   140027b05:	add    BYTE PTR [rax],al
   140027b07:	add    bl,al
   140027b09:	mov    ebp,0xb4b9feb4
   140027b0e:	stos   DWORD PTR es:[rdi],eax
   140027b0f:	jmp    FWORD PTR [rdi-0x50005f57]
   140027b15:	test   al,0x9d
   140027b17:	push   QWORD PTR [rdx-0x60006158]
   140027b1d:	xchg   edx,eax
   140027b1e:	xchg   bh,bh
   140027b20:	nop
   140027b21:	mov    al,BYTE PTR [rdx-0x27222201]
   140027b27:	push   QWORD PTR [rdx-0x6a00554d]
   140027b2d:	xchg   edx,eax
   140027b2e:	(bad)  
   140027b2f:	inc    ecx
   140027b31:	mov    esi,0xaeadffb9
   140027b36:	test   al,0xff
	...
   140027b54:	(bad)  
   140027b55:	(bad)  
   140027b56:	(bad)  
   140027b57:	add    DWORD PTR [rdi],edx
   140027b59:	(bad)  
   140027b5a:	(bad)  
   140027b5b:	adc    dl,BYTE PTR [rdi]
   140027b5d:	(bad)  
   140027b5e:	(bad)  
   140027b5f:	sbb    edx,DWORD PTR [rdi]
   140027b61:	(bad)  
   140027b62:	(bad)  
   140027b63:	sbb    BYTE PTR [rdi],dl
   140027b65:	(bad)  
   140027b66:	(bad)  
   140027b67:	adc    ebx,eax
   140027b69:	mov    esi,0xa3a8fdb4
   140027b6e:	fwait
   140027b6f:	dec    DWORD PTR [rsi-0x74007d77]
   140027b75:	xchg   DWORD PTR [rsi-0x1],edi
   140027b78:	mov    es,WORD PTR [rdi-0x7a720081]
   140027b7e:	jnp    0x140027b7f
   140027b80:	mov    eax,DWORD PTR [rsi-0x26260083]
   140027b86:	sar    edi,cl
   140027b88:	(bad)
   140027b8b:	push   QWORD PTR [rax-0x67005550]
   140027b91:	xchg   esp,eax
   140027b92:	xchg   ebx,eax
   140027b93:	dec    edx
   140027b95:	leave  
   140027b96:	sar    edi,0x0
	...
   140027ba9:	add    BYTE PTR [rax],al
   140027bab:	add    BYTE PTR [rdi],dl
   140027bad:	(bad)  
   140027bae:	(bad)  
   140027baf:	add    DWORD PTR [rdi],edx
   140027bb1:	(bad)  
   140027bb2:	(bad)  
   140027bb3:	cs (bad) 
   140027bb5:	(bad)  
   140027bb6:	(bad)  
   140027bb7:	(bad)  
   140027bb8:	and    eax,0x2a811816
   140027bbd:	(bad)  
   140027bbe:	sbb    eax,0x1917208b
   140027bc3:	adc    BYTE PTR [rdi],0x17
   140027bc6:	(bad)  
   140027bc7:	sar    WORD PTR [rdx+rsi*4-0x473e3902],0xff
   140027bd0:	mov    bl,0xad
   140027bd2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140027bd3:	jmp    FWORD PTR [rsi-0x54006058]
   140027bd9:	movabs ds:0x8489ff869098ff99,eax
   140027be2:	jl     0x140027be3
   140027be4:	rcl    bl,cl
   140027be6:	int    0xff
   140027be8:	mov    esp,0xc1ffb6bc
   140027bed:	mov    edi,0xb4b5ffb8
   140027bf2:	lods   eax,DWORD PTR ds:[rsi]
   140027bf3:	inc    eax
   140027bf5:	mov    edi,0xffb8
	...
   140027c06:	add    BYTE PTR [rax],al
   140027c08:	(bad)  
   140027c09:	(bad)  
   140027c0a:	(bad)  
   140027c0b:	sbb    eax,0x95221c3d
   140027c10:	push   rcx
   140027c11:	rex.WR xor r13b,bl
   140027c14:	test   DWORD PTR gs:[rbx-0x1],eax
   140027c18:	nop
   140027c19:	scas   al,BYTE PTR es:[rdi]
   140027c1a:	pop    rcx
   140027c1b:	(bad)  
   140027c1c:	fld    TBYTE PTR [rax-0x6c020094]
   140027c22:	ins    DWORD PTR es:[rdi],dx
   140027c23:	jmp    rdx
   140027c25:	pushf  
   140027c26:	fs inc edx
   140027c29:	mov    ebp,0xa3a6ffb2
   140027c2e:	fwait
   140027c2f:	dec    DWORD PTR [rsi-0x6f007a76]
   140027c35:	mov    WORD PTR [rbp-0x7b736e01],es
   140027c3b:	dec    DWORD PTR [rsi-0x77008479]
   140027c41:	test   BYTE PTR [rbx-0x1],bh
   140027c44:	retf   
   140027c45:	int3   
   140027c46:	(bad)  
   140027c47:	push   QWORD PTR [rcx-0x4d00554f]
   140027c4d:	mov    cl,0xaa
   140027c4f:	push   QWORD PTR [rcx-0x46005750]
   140027c55:	mov    edx,0xffb2
	...
   140027c66:	add    BYTE PTR [rax],al
   140027c68:	jns    0x140027ca4
   140027c6a:	cmp    BYTE PTR [rsi-0xaaa226],dl
   140027c70:	xchg   esp,eax
   140027c71:	mov    edx,0xd567ff5d
   140027c76:	push   rsi
   140027c77:	inc    DWORD PTR [rdi-0x27]
   140027c7a:	rex.W jmp QWORD PTR [rsi-0x25]
   140027c7e:	rex.WXB push QWORD PTR [r8-0x300a145]
   140027c85:	stos   DWORD PTR es:[rdi],eax
   140027c86:	outs   dx,BYTE PTR ds:[rsi]
   140027c87:	inc    ebx
   140027c89:	mov    esi,0xbbc0ffb4
   140027c8e:	mov    ah,0xff
   140027c90:	mov    dl,0xac
   140027c92:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140027c93:	jmp    FWORD PTR [rdx-0x5300635a]
   140027c99:	movabs eax,ds:0x8287ff919aa7ff97
   140027ca2:	jp     0x140027ca3
   140027ca4:	(bad)  
   140027ca5:	(bad)  
   140027ca6:	mov    esi,0xa2a9a9ff
   140027cab:	jmp    FWORD PTR [rcx-0x59005d57]
   140027cb1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140027cb2:	sahf   
   140027cb3:	push   QWORD PTR [rax+0xffa7b0]
	...
   140027cc1:	add    BYTE PTR [rax],al
   140027cc3:	add    dl,ah
   140027cc5:	gs pop rbx
   140027cc7:	test   ah,ah
   140027cc9:	movsxd ebx,DWORD PTR [rdx-0x1]
   140027ccc:	(bad)  
   140027ccd:	nop
   140027cce:	rex.WRXB inc QWORD PTR [r8-0x55]
   140027cd2:	cmp    bh,bh
   140027cd4:	cmp    DWORD PTR [rax+rsi*1+0x25a62eff],esp
   140027cdb:	jmp    QWORD PTR [rdi]
   140027cdd:	mov    eax,0xda28ff22
   140027ce2:	sub    edi,edi
   140027ce4:	lea    esp,[rbp+rax*2-0x4c413c01]
   140027ceb:	inc    edx
   140027ced:	mov    edi,0xb6bbffb7
   140027cf2:	lods   eax,DWORD PTR ds:[rsi]
   140027cf3:	(bad)  
   140027cf4:	mov    edi,0xbeffaeb7
   140027cf9:	mov    ch,0xb1
   140027cfb:	call   FWORD PTR [rdi-0x77006a6b]
   140027d01:	cmp    DWORD PTR [rbx-0x1],0xffb8bebd
   140027d08:	movabs eax,ds:0x9eff9a9f9fff9aa1
   140027d11:	pushf  
   140027d12:	xchg   esi,eax
   140027d13:	jmp    FWORD PTR [rax+0xffa0a8]
   140027d19:	add    BYTE PTR [rax],al
   140027d1b:	add    BYTE PTR [rax],al
   140027d1d:	add    BYTE PTR [rax],al
   140027d1f:	add    cl,bl
   140027d21:	pop    rbx
   140027d22:	rex.WRB (bad) 
   140027d24:	frstor [rcx+0x5b]
   140027d27:	call   QWORD PTR [rbp+0x22ff4f83]
   140027d2d:	fwait
   140027d2e:	sub    bh,bh
   140027d30:	sbb    cl,BYTE PTR [rdi-0x6cdf00e8]
   140027d36:	adc    al,0xff
   140027d38:	(bad)  
   140027d39:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140027d3a:	sbb    bh,bh
   140027d3c:	(bad)  
   140027d3d:	mov    bh,0x26
   140027d3f:	jmp    FWORD PTR [rsp+rax*8]
   140027d42:	sub    bh,bh
   140027d44:	rex.RB mov r15b,0x30
   140027d47:	inc    ecx
   140027d49:	mov    esp,0xecedffb2
   140027d4e:	fdivp  st(7),st
   140027d50:	(bad)  
   140027d51:	(bad)  
   140027d52:	cld    
   140027d53:	(bad)  
   140027d54:	push   rbx
   140027d56:	call   0x10cda575a
   140027d5b:	jmp    QWORD PTR [rdx-0x76005d59]
   140027d61:	(bad)  
   140027d62:	jl     0x140027d63
   140027d64:	mov    dh,0xb5
   140027d66:	scas   eax,DWORD PTR es:[rdi]
   140027d67:	call   FWORD PTR [rdx-0x66006c66]
   140027d6d:	cdq    
   140027d6e:	xchg   edx,eax
   140027d6f:	call   QWORD PTR [rbp-0x5f00726b]
   140027d75:	movabs al,ds:0x45cc00000000ff99
   140027d7e:	xor    eax,0x3f49d813
   140027d83:	lock mov ebp,0x35ff3d4a
   140027d89:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140027d8a:	sub    edi,edi
   140027d8c:	adc    eax,0x36ff13ac
   140027d91:	mov    ch,0x27
   140027d93:	push   QWORD PTR [rsp+rcx*8]
   140027d96:	xor    bh,bh
   140027d98:	xor    al,0xe9
   140027d9a:	rex.RB inc DWORD PTR [r14-0x4800b86d]
   140027da1:	push   rax
   140027da2:	(bad)  
   140027da3:	push   QWORD PTR [rdi-0x3e00caae]
   140027da9:	mov    esp,0xcdd1ffb1
   140027dae:	(bad)  
   140027daf:	dec    eax
   140027db1:	(bad)  
   140027db2:	mov    edx,0xb2bdc1ff
   140027db7:	(bad)  
   140027db8:	mov    esp,0x98ffb2bb
   140027dbd:	cdq    
   140027dbe:	xchg   ebx,eax
   140027dbf:	inc    DWORD PTR [rbp-0x4f00867f]
   140027dc5:	mov    al,0xa9
   140027dc7:	call   QWORD PTR [rbx+rdx*4-0x6d6e0074]
   140027dce:	mov    edi,?
   140027dd0:	mov    cs,WORD PTR [rbp-0x6767007a]
   140027dd6:	(bad)  
   140027dd7:	inc    DWORD PTR [rax]
   140027dd9:	add    BYTE PTR [rax],al
   140027ddb:	add    cl,cl
   140027ddd:	rex.XB xor eax,0x3440d36f
   140027de3:	inc    esi
   140027de5:	sub    eax,0x8d52ff29
   140027dea:	sub    edi,edi
   140027dec:	sbb    ah,bh
   140027dee:	cmp    bh,bh
   140027df0:	rex.RB call 0x122727d47
   140027df6:	ins    DWORD PTR es:[rdi],dx
   140027df7:	jmp    QWORD PTR [rcx-0x3f00a36b]
   140027dfd:	rex.XB
   140027dfe:	ss (bad) 
   140027e00:	call   0x12701b63f
   140027e05:	cmp    r15d,edi
   140027e08:	ret    0xb3bc
   140027e0b:	inc    eax
   140027e0d:	mov    esp,0xb0b3ffb6
   140027e12:	test   eax,0xa1aab0ff
   140027e17:	jmp    FWORD PTR [rbp-0x6300645b]
   140027e1d:	xchg   ebx,eax
   140027e1e:	mov    bh,bh
   140027e20:	cmp    DWORD PTR [rdi+0x78],0xffffffff
   140027e24:	lods   al,BYTE PTR ds:[rsi]
   140027e25:	lods   al,BYTE PTR ds:[rsi]
   140027e26:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140027e27:	dec    DWORD PTR [rbp-0x73007a72]
   140027e2d:	mov    WORD PTR [rbx+0x7f8687ff],es
   140027e33:	call   QWORD PTR [rax+0xff8790]
   140027e39:	add    BYTE PTR [rax],al
   140027e3b:	add    ch,cl
   140027e3d:	rex.X
   140027e3e:	ss leave 
   140027e40:	retf   0x323a
   140027e43:	(bad)  
   140027e44:	mov    ebx,0x9bff3141
   140027e49:	push   0xffffffffa18aff3a
   140027e4e:	rex.WRB jmp QWORD PTR [r9-0x3c00b06c]
   140027e55:	imul   eax,DWORD PTR [rdx-0x1],0xff3a5ce2
   140027e5c:	jmp    0x140027ed6
   140027e5e:	rex.WR (bad) 
   140027e60:	call   0x12301cedc
   140027e65:	fs inc rdx
   140027e69:	mov    ebp,0xbfc2ffb4
   140027e6e:	mov    eax,0x93989eff
   140027e73:	call   QWORD PTR [rdi-0x68007670]
   140027e79:	mov    es,WORD PTR [rbp+0x778089ff]
   140027e7f:	inc    DWORD PTR [rdx-0x58008782]
   140027e85:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140027e86:	movabs ds:0x7f8585ff818889ff,al
   140027e8f:	inc    DWORD PTR [rcx-0x7500867e]
   140027e95:	mov    al,BYTE PTR [rax+0xff]
   140027e9b:	add    ah,cl
   140027e9d:	xor    al,0x30
   140027e9f:	cld    
   140027ea0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140027ea1:	rex.RX
   140027ea2:	dec    DWORD PTR cs:[rcx-0x2200c585]
   140027ea9:	gs xor edi,edi
   140027eac:	(bad)  
   140027ead:	jo     0x140027ee6
   140027eaf:	(bad)  
   140027eb0:	(bad)  
   140027eb1:	jnp    0x140027ee9
   140027eb3:	(bad)  
   140027eb4:	cli    
   140027eb5:	xchg   ebx,eax
   140027eb6:	cmp    al,0xff
   140027eb8:	(bad)  
   140027eb9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140027eba:	rex.WB (bad) 
   140027ebc:	clc    
   140027ebd:	movabs ds:0x87e8ff5496eeff4f,eax
   140027ec6:	push   rdi
   140027ec7:	inc    edi
   140027ec9:	ret    
   140027eca:	mov    ecx,0xbfc7caff
   140027ecf:	(bad)  
   140027ed0:	mov    esi,0xbdffb2ba
   140027ed5:	mov    eax,0xb1b9ffaf
   140027eda:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140027edb:	call   FWORD PTR [rbx-0x7e00776d]
   140027ee1:	jle    0x140027f5b
   140027ee3:	jmp    QWORD PTR [rdx-0x7c00625d]
   140027ee9:	cmp    DWORD PTR [rdi+rdi*8-0x7e],0xffffff82
   140027eee:	jns    0x140027eef
   140027ef0:	jge    0x140027f70
   140027ef2:	je     0x140027ef3
   140027ef4:	test   BYTE PTR [rdx+rdi*2+0xff],al
   140027efb:	add    BYTE PTR [rcx+0x6dff2a3a],ch
   140027f01:	xchg   DWORD PTR [rax],edi
   140027f03:	call   FWORD PTR [rbp+rdi*2-0x7b6500c8]
   140027f0a:	movsxd edi,edi
   140027f0c:	sbb    dl,BYTE PTR [rbx-0x6de5002d]
   140027f12:	sar    bh,cl
   140027f14:	sbb    cl,BYTE PTR [rsi-0x70e20030]
   140027f1a:	iret   
   140027f1b:	call   FWORD PTR [rax]
   140027f1d:	mov    ecx,esi
   140027f1f:	dec    DWORD PTR [rdi]
   140027f21:	add    esp,0xb1904eff
   140027f27:	dec    esp
   140027f29:	leave  
   140027f2a:	sar    bh,0xca
   140027f2d:	mov    ebx,0x999ea1ff
   140027f33:	call   FWORD PTR [rax-0x5e00716d]
   140027f39:	cdq    
   140027f3a:	mov    ?,edi
   140027f3c:	xchg   ecx,eax
   140027f3d:	mov    DWORD PTR [rdi-0x1],edi
   140027f40:	jle    0x140027fbf
   140027f42:	js     0x140027f43
   140027f44:	sahf   
   140027f45:	sahf   
   140027f46:	cwde   
   140027f47:	inc    DWORD PTR [rax+0x7fff7980]
   140027f4d:	jge    0x140027fc3
   140027f4f:	(bad)  
   140027f50:	js     0x140027fca
   140027f52:	jo     0x140027f53
   140027f54:	jge    0x140027fd4
   140027f56:	jne    0x140027f57
   140027f58:	add    BYTE PTR [rax],al
   140027f5a:	add    BYTE PTR [rax],al
   140027f5c:	je     0x140027fcc
   140027f5e:	sub    eax,0x3a7890ff
   140027f63:	(bad)  
   140027f64:	jmp    0xf901b2cc
   140027f69:	movabs ds:0xef8fffdc9d21ff61,eax
   140027f72:	(bad)  
   140027f73:	push   QWORD PTR [rdx-0x14]
   140027f76:	(bad)  
   140027f77:	jmp    FWORD PTR [rsi+rbx*8-0x1]
   140027f7b:	(bad)  
   140027f7c:	jns    0x140027f60
   140027f7e:	(bad)  
   140027f7f:	call   FWORD PTR [rbx-0x35]
   140027f82:	cli    
   140027f83:	dec    DWORD PTR [rbx]
   140027f85:	jl     0x140027f47
   140027f87:	call   rax
   140027f89:	(bad)  
   140027f8a:	(bad)  
   140027f8d:	out    dx,eax
   140027f8e:	in     eax,dx
   140027f8f:	(bad)  
   140027f90:	(bad)  
   140027f91:	(bad)  
   140027f92:	(bad)  
   140027f93:	(bad)  
   140027f94:	sti    
   140027f95:	sti    
   140027f96:	out    dx,eax
   140027f97:	push   rsi
   140027f99:	icebp  
   140027f9a:	(bad)  
   140027f9c:	mov    al,0xab
   140027f9e:	xchg   edi,eax
   140027f9f:	(bad)  
   140027fa0:	jp     0x14002801b
   140027fa2:	jae    0x140027fa3
   140027fa4:	popf   
   140027fa5:	popf   
   140027fa6:	xchg   edi,eax
   140027fa7:	(bad)  
   140027fa8:	jg     0x140028029
   140027faa:	js     0x140027fab
   140027fac:	jl     0x14002802a
   140027fae:	je     0x140027faf
   140027fb0:	je     0x140028026
   140027fb2:	ins    BYTE PTR es:[rdi],dx
   140027fb3:	(bad)  
   140027fb4:	jp     0x140028030
   140027fb6:	jno    0x140027fb7
   140027fb8:	add    BYTE PTR [rax],al
   140027fba:	add    BYTE PTR [rax],al
   140027fbc:	je     0x140027f3f
   140027fbe:	(bad)  
   140027fbf:	fsubr  QWORD PTR [rbx-0x5f]
   140027fc2:	xor    bh,bh
   140027fc4:	(bad)
   140027fc7:	inc    edx
   140027fc9:	ret    0xff45
   140027fcc:	int    0xc6
   140027fce:	ins    BYTE PTR es:[rdi],dx
   140027fcf:	jmp    QWORD PTR [rsi+rbx*4]
   140027fd2:	(bad)  
   140027fd4:	pop    rdi
   140027fd5:	fdivr  st,st(7)
   140027fd7:	(bad)  
   140027fd8:	ds int 0xff
   140027fdb:	push   QWORD PTR [rdi*4-0x23a30001]
   140027fe2:	(bad)  
   140027fe3:	dec    DWORD PTR [rcx]
   140027fe5:	test   dl,cl
   140027fe7:	call   rdx
   140027fe9:	rol    bh,1
   140027feb:	dec    ecx
   140027fed:	ret    0xffb2
   140027ff0:	cmp    DWORD PTR [rdx+0x6a],0x6d7274ff
   140027ff7:	call   rbx
   140027ff9:	rol    edi,1
   140027ffb:	inc    ecx
   140027ffd:	mov    esp,0x7a7bffab
   140028002:	je     0x140028003
   140028004:	popf   
   140028005:	popf   
   140028006:	xchg   esi,eax
   140028007:	(bad)  
   140028008:	jl     0x140028086
   14002800a:	jb     0x14002800b
   14002800c:	jns    0x140028087
   14002800e:	outs   dx,BYTE PTR ds:[rsi]
   14002800f:	push   QWORD PTR [rax+0x70]
   140028012:	addr32 (bad) 
   140028014:	jns    0x14002808e
   140028016:	outs   dx,DWORD PTR ds:[rsi]
   140028017:	inc    DWORD PTR [rax]
   140028019:	add    BYTE PTR [rax],al
   14002801b:	add    BYTE PTR [rax-0x7b],al
   14002801e:	xchg   ebx,eax
   14002801f:	mov    dl,0xb
   140028021:	loopne 0x140028056
   140028023:	call   QWORD PTR [rsi]
   140028025:	xlat   BYTE PTR ds:[rbx]
   140028026:	and    al,0xff
   140028028:	sub    eax,0x23ff4df9
   14002802d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002802e:	(bad)  
   14002802f:	jmp    FWORD PTR [rip+0xffffffffa8ffe7a7]        # 0xe90267dc
   140028035:	out    0xfd,eax
   140028037:	jmp    QWORD PTR [rsi]
   140028039:	(bad)  
   14002803a:	(bad)  
   14002803b:	inc    DWORD PTR [rdi]
   14002803d:	mov    bl,0xff
   14002803f:	call   QWORD PTR [rbx-0x28]
   140028042:	(bad)  
   140028043:	dec    DWORD PTR [rbx]
   140028045:	xchg   esp,ecx
   140028047:	jmp    rdx
   140028049:	(bad)  
   14002804a:	movabs ds:0x828ca4ffa8b5c0ff,eax
   140028053:	dec    DWORD PTR [rdx-0x5f00766c]
   140028059:	mov    ch,0xab
   14002805b:	push   QWORD PTR [rax-0x740b5b50]
   140028061:	mov    al,BYTE PTR [rdi-0x76727422]
   140028067:	leave  
   140028068:	(bad)  
   140028069:	(bad)  
   14002806a:	mov    edi,DWORD PTR [rax-0x556f6d6d]
   140028070:	xchg   edx,eax
   140028071:	xchg   edx,eax
   140028072:	nop
   140028073:	movabs al,ds:0x36d39000a0939697
   14002807c:	(bad)  
   14002807d:	cwde   
   14002807e:	xlat   BYTE PTR ds:[rbx]
   14002807f:	jmp    0x140028090
   140028081:	lods   eax,DWORD PTR ds:[rsi]
   140028082:	js     0x140028083
   140028084:	ud0    esi,DWORD PTR [rcx]
   140028087:	dec    DWORD PTR [rdi]
   140028089:	mov    bl,0xc4
   14002808b:	push   QWORD PTR [rax]
   14002808d:	test   eax,0xe7a8ffea
   140028092:	std    
   140028093:	dec    DWORD PTR [rdx-0x30]
   140028096:	(bad)  
   140028097:	call   FWORD PTR [rip+0xbffffba]        # 0x14c028057
   14002809d:	mov    dl,0xff
   14002809f:	inc    DWORD PTR [rcx-0x2e]
   1400280a2:	(bad)  
   1400280a3:	dec    DWORD PTR [rcx+rcx*4]
   1400280a6:	(bad)  
   1400280a7:	(bad)  
   1400280a8:	std    
   1400280a9:	ret    0xff77
   1400280ac:	in     al,dx
   1400280ad:	xchg   DWORD PTR [rdx-0x1],ebx
   1400280b0:	scas   eax,DWORD PTR es:[rdi]
   1400280b1:	xchg   ebx,eax
   1400280b2:	pop    rsp
   1400280b3:	push   QWORD PTR [rdx-0x6c008c5f]
   1400280b9:	xchg   DWORD PTR [rax-0x1],esp
   1400280bc:	xchg   ecx,eax
   1400280bd:	push   rax
   1400280be:	sub    DWORD PTR [rsi],ebp
	...
   1400280d8:	add    BYTE PTR [rbp-0x5bd98130],cl
   1400280de:	fcos   
   1400280e0:	test   ecx,eax
   1400280e2:	mov    ebp,0xce9e03c9
   1400280e7:	jmp    FWORD PTR [rdx]
   1400280e9:	stos   BYTE PTR es:[rdi],al
   1400280ea:	call   0x13deb29ee
   1400280ef:	call   FWORD PTR [rdx-0x2d]
   1400280f2:	(bad)  
   1400280f3:	jmp    QWORD PTR [rcx]
   1400280f5:	mov    esi,0xa614ffff
   1400280fa:	out    0xff,al
   1400280fc:	(bad)  
   1400280fd:	xchg   esp,eax
   1400280fe:	(bad)  
   140028100:	rex.WR retf 
   140028102:	(bad)  
   140028103:	dec    DWORD PTR [rbx]
   140028105:	mov    edx,esp
   140028107:	push   rbp
   140028109:	mov    ch,0x75
   14002810b:	(bad)  
   14002810c:	fisubr WORD PTR [rsi+0x4b]
   14002810f:	jmp    QWORD PTR [rdx-0x5c008540]
   140028115:	stos   DWORD PTR es:[rdi],eax
   140028116:	push   0xffffffffffffffff
   140028118:	mov    esi,0x7d1d28
	...
   140028139:	mov    cl,ch
   14002813b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002813c:	sub    ah,BYTE PTR [rbx+riz*8-0x226afe01]
   140028143:	(bad)  
   140028144:	jo     0x140028112
   140028146:	hlt    
   140028147:	jmp    QWORD PTR [rcx+0x5affffe9]
   14002814d:	int    0xff
   14002814f:	jmp    QWORD PTR [rsi]
   140028151:	mov    esi,0xa412fffe
   140028156:	out    0xff,al
   140028158:	(bad)  
   140028159:	pushf  
   14002815a:	sar    edi,cl
   14002815c:	retf   0x65c7
   14002815f:	call   QWORD PTR [rbx]
   140028161:	cdq    
   140028162:	(bad)  
   140028164:	add    eax,DWORD PTR [rax+rdx*8+0x66a6ebff]
   14002816b:	(bad)  
   14002816c:	fld    DWORD PTR [rdx+rbx*2+0x71d77dff]
   140028173:	jmp    QWORD PTR [rdx-0x36]
   140028176:	gs mov bl,0x0
	...
   140028199:	mov    ecx,ebp
   14002819b:	jbe    0x1400281c1
   14002819d:	mov    dh,0xee
   14002819f:	push   QWORD PTR [rsi-0x1f]
   1400281a2:	(bad)  
   1400281a3:	call   FWORD PTR [rbx-0x29]
   1400281a6:	(bad)  
   1400281a7:	push   QWORD PTR [rsi]
   1400281a9:	ret    
   1400281aa:	stc    
   1400281ab:	jmp    QWORD PTR [rdx]
   1400281ad:	mov    edx,0xa311fffc
   1400281b2:	loop   0x1400281b3
   1400281b4:	sbb    al,0xa1
   1400281b6:	sar    bh,cl
   1400281b8:	ror    ah,1
   1400281ba:	imul   edi,edi,0xffa8dff2
   1400281c0:	scas   al,BYTE PTR es:[rdi]
   1400281c1:	lods   eax,DWORD PTR ds:[rsi]
   1400281c2:	(bad)  
   1400281c3:	jmp    FWORD PTR [rbx-0x14008858]
   1400281c9:	mov    dl,0x65
   1400281cb:	(bad)  
   1400281cc:	fldcw  WORD PTR [rcx-0x5d590096]
   1400281d2:	pop    rcx
   1400281d3:	mov    DWORD PTR [rax],eax
	...
   1400281f5:	add    BYTE PTR [rax],al
   1400281f7:	add    BYTE PTR [rdx],al
   1400281f9:	(bad)  
   1400281fa:	retf   
   1400281fb:	or     ebp,DWORD PTR [rdx]
   1400281fd:	mov    bl,0xe0
   1400281ff:	(bad)  
   140028200:	and    DWORD PTR [rbp-0x4ddf1315],esi
   140028206:	out    0xe6,eax
   140028208:	add    eax,0x6d1e59d
   14002820d:	xchg   edi,eax
   14002820e:	(bad)  
   14002820f:	int3   
   140028210:	cmp    DWORD PTR [rbp-0x275f3d55],ebp
   140028216:	nop
   140028217:	test   edx,0xebff78c3
   14002821d:	cli    
   14002821e:	out    dx,al
   14002821f:	jmp    rbx
   140028221:	(bad)  
   140028222:	mov    al,0xff
   140028224:	ficom  WORD PTR [rsi+rcx*2+0x69a8d5d6]
   14002822b:	or     eax,0xffffffbc
   14002822e:	js     0x140028262
	...
   140028258:	(bad)  
   140028259:	cld    
   14002825a:	(bad)  
   14002825c:	push   rax
   14002825e:	(bad)  
   14002825f:	add    bh,bh
   140028261:	lock add DWORD PTR [rax],eax
   140028264:	push   rax
   140028266:	add    BYTE PTR [rax],al
   140028268:	push   rax
   14002826a:	add    BYTE PTR [rax],al
   14002826c:	inc    BYTE PTR [rax]
   14002826e:	add    BYTE PTR [rax],al
   140028270:	clc    
   140028271:	add    BYTE PTR [rax],al
   140028273:	add    al,dh
   140028275:	add    BYTE PTR [rax],al
   140028277:	add    al,dh
   140028279:	add    BYTE PTR [rax],al
   14002827b:	add    al,ah
   14002827d:	add    BYTE PTR [rax],al
   14002827f:	add    al,al
   140028281:	add    BYTE PTR [rax],al
   140028283:	add    BYTE PTR [rax-0x80000000],al
   140028289:	add    BYTE PTR [rax],al
   14002828b:	add    BYTE PTR [rax-0x80000000],al
   140028291:	add    BYTE PTR [rax],al
   140028293:	add    BYTE PTR [rax-0x80000000],al
   140028299:	add    BYTE PTR [rax],al
   14002829b:	add    BYTE PTR [rax-0x80000000],al
   1400282a1:	add    BYTE PTR [rax],al
   1400282a3:	add    BYTE PTR [rax],al
   1400282a5:	add    BYTE PTR [rdi],bh
   1400282a7:	add    BYTE PTR [rax],al
   1400282a9:	add    BYTE PTR [rdi+0x0],bh
   1400282ac:	add    BYTE PTR [rax],al
   1400282ae:	inc    DWORD PTR [rax]
   1400282b0:	add    BYTE PTR [rcx],al
   1400282b2:	inc    DWORD PTR [rax]
   1400282b4:	add    BYTE PTR [rbx],al
   1400282b6:	inc    DWORD PTR [rax]
   1400282b8:	sub    BYTE PTR [rax],al
   1400282ba:	add    BYTE PTR [rax],al
   1400282bc:	adc    BYTE PTR [rax],al
   1400282be:	add    BYTE PTR [rax],al
   1400282c0:	and    BYTE PTR [rax],al
   1400282c2:	add    BYTE PTR [rax],al
   1400282c4:	add    DWORD PTR [rax],eax
   1400282c6:	and    BYTE PTR [rax],al
   1400282c8:	add    BYTE PTR [rax],al
   1400282ca:	add    BYTE PTR [rax],al
   1400282cc:	add    al,0x0
	...
   140028303:	add    BYTE PTR [rsi-0x7500837a],cl
   140028309:	xor    DWORD PTR [rsi-0x1],0xff727f88
   140028310:	mov    BYTE PTR [rdi+0x72],bh
   140028313:	inc    DWORD PTR [rbp+0x79ff6d7b]
   140028319:	jo     0x14002837e
   14002831b:	push   QWORD PTR [rdx+0x69]
   14002831e:	pop    rsi
   14002831f:	inc    DWORD PTR [rax]
	...
   140028341:	add    BYTE PTR [rax],al
   140028343:	add    BYTE PTR [rdx-0x3a00675e],ch
   140028349:	mov    ebp,0xb8c2ffaf
   14002834e:	stos   BYTE PTR es:[rdi],al
   14002834f:	inc    edx
   140028351:	mov    eax,0xd500ffaa
   140028356:	xor    eax,0x47ff00ff
   14002835b:	(bad)  
   14002835c:	jnp    0x1400283d1
   14002835e:	inc    WORD PTR [rax]
	...
   140028381:	add    BYTE PTR [rax],al
   140028383:	add    BYTE PTR [rsi-0x38005950],dh
   140028389:	mov    esi,0xbbc4ffb0
   14002838e:	lods   al,BYTE PTR ds:[rsi]
   14002838f:	inc    esp
   140028391:	mov    ebx,0xde44ffac
   140028396:	sahf   
   140028397:	call   QWORD PTR [rdx]
   140028399:	faddp  st(1),st
   14002839b:	(bad)  
   14002839c:	jle    0x140028413
   14002839e:	inc    DWORD PTR [eax]
	...
   1400283c1:	add    BYTE PTR [rax],al
   1400283c3:	add    BYTE PTR [rdx-0x3600554d],bh
   1400283c9:	shl    BYTE PTR [rdx-0x51423901],0xff
   1400283d0:	(bad)  
   1400283d1:	mov    ebp,0xb4bcffae
   1400283d6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400283d7:	(bad)  
   1400283d8:	mov    eax,0x7fffa1af
   1400283dd:	jne    0x140028447
   1400283df:	inc    DWORD PTR [rax]
	...
   1400283e9:	add    BYTE PTR [rax],al
   1400283eb:	add    BYTE PTR [rax-0x71fefff2],al
   1400283f1:	(bad)  
   1400283f2:	add    esp,DWORD PTR [rcx]
   1400283f4:	rex.RB
   1400283f5:	add    BYTE PTR [r10+0x28],r15b
   1400283f9:	je     0x1400283fb
   1400283fb:	xlat   BYTE PTR ds:[rbx]
   1400283fc:	push   rdi
   1400283fd:	push   0x1
   1400283ff:	xlat   BYTE PTR ds:[rbx]
   140028400:	fwait
   140028401:	push   rdx
   140028402:	adc    esi,DWORD PTR [rdi-0x3f]
   140028405:	mov    ebp,0xc1caffb8
   14002840a:	mov    bl,0xff
   14002840c:	(bad)  
   14002840d:	mov    esi,0xbec7ffb1
   140028412:	mov    cl,0xff
   140028414:	mov    edi,0xbaffa8b6
   140028419:	mov    dl,0xa3
   14002841b:	inc    DWORD PTR [rbp+0xff6c7b]
   140028421:	add    BYTE PTR [rax],al
   140028423:	add    BYTE PTR [rax],al
   140028425:	add    BYTE PTR [rax],al
   140028427:	add    BYTE PTR [rdi+0xf],ch
   14002842a:	add    BYTE PTR [rdx],al
   14002842c:	fwait
   14002842d:	(bad)  
   14002842e:	add    ecx,DWORD PTR [rcx-0x7a]
   140028431:	and    al,BYTE PTR [rcx]
   140028433:	jmp    0x13f02fa77
   140028438:	sub    al,0xaa
   14002843a:	add    bh,bh
   14002843c:	mov    dl,0x1
   14002843f:	push   QWORD PTR [rax-0x6d]
   140028442:	adc    edi,edi
   140028444:	(bad)  
   140028445:	sar    BYTE PTR [rbx-0x4c3e3501],0xff
   14002844c:	leave  
   14002844d:	shl    BYTE PTR [rdx-0x4d3f3601],0xff
   140028454:	ret    0xaab8
   140028457:	(bad)  
   140028458:	mov    ebp,0x87ffa6b3
   14002845d:	jge    0x1400284ce
   14002845f:	inc    DWORD PTR [rax]
   140028461:	add    BYTE PTR [rax],al
   140028463:	add    BYTE PTR [rax],al
   140028465:	add    BYTE PTR [rax],al
   140028467:	add    BYTE PTR [rbx-0x62b1fef2],dl
   14002846d:	es (bad) 
   14002846f:	std    
   140028470:	push   rax
   140028471:	outs   dx,DWORD PTR ds:[rsi]
   140028472:	add    bh,bh
   140028474:	xor    al,bl
   140028476:	add    bh,bh
   140028478:	(bad)  
   140028479:	out    0xa,eax
   14002847b:	(bad)  
   14002847c:	cmp    bh,ch
   14002847e:	sbb    bh,bh
   140028480:	push   rsi
   140028481:	(bad)  
   140028482:	(bad)  
   140028483:	inc    esi
   140028485:	ret    
   140028486:	sar    bh,0x94
   140028489:	mov    WORD PTR [rbx+0x767e85ff],es
   14002848f:	inc    DWORD PTR [rbp+0x7fff767e]
   140028495:	ja     0x140028505
   140028497:	dec    DWORD PTR [rdx-0x7400897f]
   14002849d:	xor    BYTE PTR [rcx-0x1],0x0
   1400284a1:	add    BYTE PTR [rax],al
   1400284a3:	add    BYTE PTR [rsp+rcx*1+0xfb41300],al
   1400284aa:	(bad)  
   1400284ab:	idiv   DWORD PTR [rbp+0x52]
   1400284ae:	or     bh,bh
   1400284b0:	xor    bh,al
   1400284b2:	add    bh,bh
   1400284b4:	rex.B
   1400284b5:	repnz sbb bh,bh
   1400284b8:	(bad)  
   1400284b9:	idiv   DWORD PTR [rdi+rdi*8]
   1400284bc:	test   al,dl
   1400284be:	rex.XB jmp QWORD PTR [r8-0x3400d275]
   1400284c5:	enter  0xffc5,0xf0
   1400284c9:	in     eax,dx
   1400284ca:	jrcxz  0x1400284cb
   1400284cc:	lock in eax,dx
   1400284ce:	jrcxz  0x1400284cf
   1400284d0:	lock in eax,dx
   1400284d2:	jrcxz  0x1400284d3
   1400284d4:	in     eax,dx
   1400284d5:	jmp    0x127ee84b8
   1400284da:	(bad)  
   1400284dc:	xchg   esp,eax
   1400284dd:	mov    DWORD PTR [rdx-0x1],edi
   1400284e0:	add    BYTE PTR [rax],al
   1400284e2:	add    BYTE PTR [rax],al
   1400284e4:	lods   eax,DWORD PTR ds:[rsi]
   1400284e5:	push   rdi
   1400284e6:	adc    al,0x75
   1400284e8:	scas   al,BYTE PTR es:[rdi]
   1400284e9:	(bad)  
   1400284ea:	paddd  mm4,QWORD PTR [rbx+0x73ff154f]
   1400284f1:	mov    dl,0x1b
   1400284f3:	push   QWORD PTR [rdi+rcx*8+0x3c]
   1400284f7:	dec    DWORD PTR [rsi-0x3a00b13d]
   1400284fd:	xchg   DWORD PTR [rsi-0x1],eax
   140028500:	call   0x10c01ba55
   140028505:	leave  
   140028506:	(bad)  
   140028507:	jmp    QWORD PTR [rdx-0x75006762]
   14002850d:	xchg   BYTE PTR [rcx-0x7e797501],al
   140028513:	inc    DWORD PTR [rdx-0x73008d85]
   140028519:	xor    DWORD PTR [rdi-0x1],0xffffff9a
   14002851d:	(bad)  
   14002851e:	jg     0x14002851f
   140028520:	add    BYTE PTR [rax],al
   140028522:	add    BYTE PTR [rax],al
   140028524:	lahf   
   140028525:	jo     0x14002853b
   140028527:	(bad)  
   140028528:	(bad)  
   140028529:	imul   esp,DWORD PTR [rdx],0xffffffff
   14002852c:	fst    DWORD PTR [rbx+0x1e]
   14002852f:	dec    ebp
   140028531:	imul   ebx,DWORD PTR [rip+0x217ec8ff],0xffffffff        # 0x161814e37
   140028538:	fisttp QWORD PTR [rax-0x781600d7]
   14002853e:	xor    bh,bh
   140028540:	lock movsxd esi,DWORD PTR [rdi]
   140028543:	dec    esp
   140028545:	retf   0xffc8
   140028548:	sti    
   140028549:	cli    
   14002854a:	hlt    
   14002854b:	(bad)  
   14002854c:	clc    
   14002854d:	imul   esi
   14002854f:	(bad)  
   140028550:	clc    
   140028551:	imul   esi
   140028553:	(bad)  
   140028554:	call   0x122025a3e
   140028559:	fmul   st(3),st
   14002855b:	jmp    QWORD PTR [rsi+0x69ff8d9c]
   140028561:	ret    
   140028562:	in     eax,dx
   140028563:	and    ah,BYTE PTR [rbx-0x302be489]
   140028569:	mov    DWORD PTR [rsi],esp
   14002856b:	jmp    FWORD PTR [rcx]
   14002856d:	movabs ds:0xad1effebab1bffd2,eax
   140028576:	in     eax,dx
   140028577:	call   FWORD PTR [rsi]
   140028579:	scas   al,BYTE PTR es:[rdi]
   14002857a:	(bad)  
   14002857b:	call   QWORD PTR [rsi]
   14002857d:	lods   eax,DWORD PTR ds:[rsi]
   14002857e:	out    dx,al
   14002857f:	(bad)  
   140028580:	inc    DWORD PTR [rdx+rdi*1-0x37353301]
   140028587:	call   rbx
   140028589:	int    0xb9
   14002858b:	call   FWORD PTR [rsi+rcx*2+0x26]
   14002858f:	call   FWORD PTR [rsi+rcx*2+0x26]
   140028593:	push   QWORD PTR [rbx]
   140028595:	xor    esi,DWORD PTR [rcx]
   140028597:	call   rbx
   140028599:	int    0xb9
   14002859b:	jmp    FWORD PTR [rdx+0x4dff93a1]
   1400285a1:	mov    ecx,0x8eb762eb
   1400285a6:	sub    BYTE PTR [rax-0x1d75b4b],cl
   1400285ac:	push   rsp
   1400285ad:	test   DWORD PTR [rip+0xffffffffefbc3eff],ebp        # 0x12fbec4b2
   1400285b3:	jmp    QWORD PTR [rcx+rbp*8-0x1c670003]
   1400285ba:	(bad)  
   1400285bb:	jmp    QWORD PTR [rcx]
   1400285bd:	mov    al,0xf5
   1400285bf:	(bad)  
   1400285c0:	call   FWORD PTR [rdi-0x353300c1]
   1400285c6:	enter  0xccff,0xca
   1400285ca:	enter  0xcaff,0xc9
   1400285ce:	(bad)  
   1400285cf:	dec    edx
   1400285d1:	leave  
   1400285d2:	(bad)  
   1400285d3:	(bad)  
   1400285d4:	mov    ebx,0xb4ffadb5
   1400285d9:	lods   al,BYTE PTR ds:[rsi]
   1400285da:	movabs ds:0xe29b01ff97a4acff,al
   1400285e3:	(bad)  
   1400285e4:	add    al,0x99
   1400285e6:	fmul   st(1),st
   1400285e8:	mov    ch,0xa0
   1400285ea:	sub    esp,edi
   1400285ec:	cmp    DWORD PTR [rdi-0x42c900d6],edx
   1400285f2:	repz jmp FWORD PTR [rsi+rbx*8-0x2]
   1400285f7:	dec    DWORD PTR [rip+0x1dffffc2]        # 0x15e0285bf
   1400285fd:	mov    bl,0xf7
   1400285ff:	(bad)  
   140028600:	jmp    FWORD PTR [rsi-0x473f00b6]
   140028606:	jmp    WORD PTR [rdx-0x13]
   14002860a:	cmp    bh,0x5d
   14002860d:	xchg   BYTE PTR [rdx],bh
   14002860f:	fnsave [rbx+0x22]
   140028612:	add    DWORD PTR [rsi],ebx
	...
   140028620:	add    DWORD PTR [rbx-0x6aff0d1e],ebx
   140028626:	fadd   st,st(6)
   140028628:	jbe    0x1400286a8
   14002862a:	push   rsi
   14002862b:	movabs ds:0xfffee58dfeecbc2e,al
   140028634:	sbb    al,0xbb
   140028636:	hlt    
   140028637:	call   QWORD PTR [rsi+rbp*4]
   14002863a:	lock call FWORD PTR [rdi]
   14002863d:	mov    bl,0xf9
   14002863f:	push   rcx
   140028641:	stos   BYTE PTR es:[rdi],al
   140028642:	rex.WRXB (bad) 
   140028644:	fstp   DWORD PTR [rbp+0x73aaff5b]
   14002864a:	rex.B hlt 
   14002864c:	jae    0x14002866c
   14002864e:	(bad)  
   14002864f:	(bad)  
   140028650:	(bad)  
   140028651:	add    eax,DWORD PTR [rax]
   140028653:	add    DWORD PTR [rax],eax
	...
   14002865d:	add    BYTE PTR [rax],al
   14002865f:	add    BYTE PTR [rcx],al
   140028661:	(bad)  
   140028662:	loopne 0x140028651
   140028664:	imul   ecx,esi,0xfffffff6
   140028667:	push   QWORD PTR [rcx-0x26]
   14002866a:	(bad)  
   14002866b:	dec    DWORD PTR [rdi+rbx*8-0x4fdb0004]
   140028672:	jmp    0xe1a5be76
   140028677:	std    
   140028678:	push   0x20fe6695
   14002867d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002867e:	(bad)  
   140028680:	in     eax,0x84
   140028682:	rex.XB sti 
   140028684:	mov    bh,0x7b
   140028686:	cmp    edi,esi
   140028688:	jno    0x1400286c3
   14002868a:	or     al,0x49
   14002868c:	pop    rbx
   14002868d:	add    eax,DWORD PTR [rax]
   14002868f:	add    al,BYTE PTR [rax]
	...
   14002869d:	add    BYTE PTR [rax],al
   14002869f:	add    BYTE PTR [rdi],dl
   1400286a1:	pushf  
   1400286a2:	ror    DWORD PTR [rbx+0x18],cl
   1400286a5:	lods   al,BYTE PTR ds:[rsi]
   1400286a6:	(bad)  
   1400286a7:	in     eax,dx
   1400286a8:	(bad)  
   1400286a9:	stos   BYTE PTR es:[rdi],al
   1400286aa:	call   0x125a28f9f
   1400286af:	shl    BYTE PTR [rbx+rdx*4],cl
   1400286b2:	ret    
   1400286b3:	push   rdx
   1400286b4:	mov    DWORD PTR [rax+0x27],esp
   1400286b7:	push   rbx
   1400286b8:	test   al,0x7d
   1400286ba:	(bad)  
   1400286bb:	mov    ah,0xa7
   1400286bd:	ins    BYTE PTR es:[rdi],dx
   1400286be:	cmp    esi,DWORD PTR [rsi+0x53183b98]
   1400286c4:	imul   esp,DWORD PTR [rcx],0x1
   1400286c7:	adc    al,BYTE PTR [rax]
	...
   1400286dd:	add    BYTE PTR [rax],al
   1400286df:	add    bh,bh
   1400286e1:	add    BYTE PTR [rax],0x0
   1400286e4:	inc    DWORD PTR [rax-0x7f010000]
   1400286ea:	add    BYTE PTR [rax],al
   1400286ec:	inc    DWORD PTR [rax+0xe00000]
   1400286f2:	add    BYTE PTR [rax],al
   1400286f4:	rol    BYTE PTR [rax],0x0
   1400286f7:	add    al,al
   1400286f9:	add    BYTE PTR [rax],al
   1400286fb:	add    BYTE PTR [rax-0x80000000],al
   140028701:	add    BYTE PTR [rax],al
   140028703:	add    BYTE PTR [rax+0x0],al
	...
   140028711:	(bad)  
   140028712:	add    BYTE PTR [rax],al
   140028714:	add    BYTE PTR [rdi],al
   140028716:	add    BYTE PTR [rax],al
   140028718:	add    BYTE PTR [rdi],cl
   14002871a:	add    BYTE PTR [rax],al
   14002871c:	add    BYTE PTR [rdi],bh
   14002871e:	add    BYTE PTR [rax],al
   140028720:	add    BYTE PTR [rax],al
   140028722:	add    DWORD PTR [rax],eax
   140028724:	or     eax,0x10303000
   140028729:	add    BYTE PTR [rcx],al
   14002872b:	add    BYTE PTR [rax+rax*1],al
   14002872e:	push   0x1000006
   140028733:	add    BYTE PTR [rax],ah
   140028735:	and    BYTE PTR [rax],dl
   140028737:	add    BYTE PTR [rcx],al
   140028739:	add    BYTE PTR [rax+rax*1],al
   14002873c:	call   0x142028743
   140028741:	add    BYTE PTR [rax],bl
   140028743:	sbb    BYTE PTR [rax],dl
   140028745:	add    BYTE PTR [rcx],al
   140028747:	add    BYTE PTR [rax+rax*1],al
   14002874a:	call   0x143028750
   14002874f:	add    BYTE PTR [rax],dl
   140028751:	adc    BYTE PTR [rax],dl
   140028753:	add    BYTE PTR [rcx],al
   140028755:	add    BYTE PTR [rax+rax*1],al
   140028758:	sub    BYTE PTR [rcx],al
   14002875a:	add    BYTE PTR [rax],al
   14002875c:	add    al,0x0
   14002875e:	xor    BYTE PTR [rax],dh
   140028760:	add    BYTE PTR [rax],al
   140028762:	add    DWORD PTR [rax],eax
   140028764:	or     BYTE PTR [rax],al
   140028766:	test   al,0xe
   140028768:	add    BYTE PTR [rax],al
   14002876a:	add    eax,0x202000
   14002876f:	add    BYTE PTR [rcx],al
   140028771:	add    BYTE PTR [rax],cl
   140028773:	add    BYTE PTR [rax+0x6000008],ch
   140028779:	add    BYTE PTR [rax],bl
   14002877b:	sbb    BYTE PTR [rax],al
   14002877d:	add    BYTE PTR [rcx],al
   14002877f:	add    BYTE PTR [rax],cl
   140028781:	add    al,cl
   140028783:	(bad)  
   140028784:	add    BYTE PTR [rax],al
   140028786:	(bad)  
   140028787:	add    BYTE PTR [rax],dl
   140028789:	adc    BYTE PTR [rax],al
   14002878b:	add    BYTE PTR [rcx],al
   14002878d:	add    BYTE PTR [rax],cl
   14002878f:	add    BYTE PTR [rax+0x5],ch
   140028792:	add    BYTE PTR [rax],al
   140028794:	or     BYTE PTR [rax],al
   140028796:	add    BYTE PTR [rax],al
   140028798:	add    BYTE PTR [rax],al
   14002879a:	add    DWORD PTR [rax],eax
   14002879c:	and    BYTE PTR [rax],al
   14002879e:	mov    ?,WORD PTR [rbx]
   1400287a0:	add    DWORD PTR [rax],eax
   1400287a2:	or     DWORD PTR [rax],eax
   1400287a4:	xor    BYTE PTR [rax],dh
   1400287a6:	add    BYTE PTR [rax],al
   1400287a8:	add    DWORD PTR [rax],eax
   1400287aa:	and    BYTE PTR [rax],al
   1400287ac:	test   al,0x25
   1400287ae:	add    BYTE PTR [rax],al
   1400287b0:	or     al,BYTE PTR [rax]
   1400287b2:	and    BYTE PTR [rax],ah
   1400287b4:	add    BYTE PTR [rax],al
   1400287b6:	add    DWORD PTR [rax],eax
   1400287b8:	and    BYTE PTR [rax],al
   1400287ba:	test   al,0x10
   1400287bc:	add    BYTE PTR [rax],al
   1400287be:	or     eax,DWORD PTR [rax]
   1400287c0:	sbb    BYTE PTR [rax],bl
   1400287c2:	add    BYTE PTR [rax],al
   1400287c4:	add    DWORD PTR [rax],eax
   1400287c6:	and    BYTE PTR [rax],al
   1400287c8:	mov    BYTE PTR [rcx],cl
   1400287ca:	add    BYTE PTR [rax],al
   1400287cc:	or     al,0x0
   1400287ce:	adc    BYTE PTR [rax],dl
   1400287d0:	add    BYTE PTR [rax],al
   1400287d2:	add    DWORD PTR [rax],eax
   1400287d4:	and    BYTE PTR [rax],al
   1400287d6:	push   0xd000004
   1400287db:	add    BYTE PTR [rax],al
   1400287dd:	add    BYTE PTR [rax],al
   1400287df:	add    ch,cl
   1400287e1:	dec    ch
   1400287e3:	(bad)  
   1400287e4:	rol    BYTE PTR [rax],1
   1400287e6:	add    BYTE PTR [rax],al
   1400287e8:	add    BYTE PTR [rax],al
   1400287ea:	add    DWORD PTR [rax],eax
   1400287ec:	add    BYTE PTR [rax],al
   1400287ee:	add    BYTE PTR [rax],al
   1400287f0:	adc    DWORD PTR [rax],eax
   1400287f2:	add    BYTE PTR [rax],al
   1400287f4:	add    BYTE PTR [rax],al
   1400287f6:	add    BYTE PTR [rax],al
   1400287f8:	add    al,BYTE PTR [rax]
   1400287fa:	add    BYTE PTR [rax],al
   1400287fc:	push   rdx
   1400287fd:	pop    rdx
   1400287fe:	rex.W
   1400287ff:	iretw  
   140028801:	test   eax,0x3511b247
   140028806:	rex.WXB mov BYTE PTR fs:[r9],dil
   14002880a:	jns    0x140028814
   14002880c:	pop    rcx
   14002880d:	stos   DWORD PTR es:[rdi],eax
   14002880e:	cwde   
   14002880f:	rex.RX call rbp
   140028812:	mul    DWORD PTR [rip+0xfffffffffaf5e283]        # 0x13af86a9b
   140028818:	fwait
   140028819:	mov    al,BYTE PTR [rbp-0x3e]
	...
   140028834:	mov    BYTE PTR [rax],al
   140028836:	add    BYTE PTR [rax],al
   140028838:	(bad)  
   140028839:	add    BYTE PTR [rax],al
   14002883b:	add    BYTE PTR [rax+0xc000000],bl
   140028841:	add    BYTE PTR [rax],al
   140028843:	add    BYTE PTR [rax+0xe000000],ch
   140028849:	add    BYTE PTR [rax],al
   14002884b:	add    BYTE PTR [rax+0x8000000],bh
	...
   140028859:	add    BYTE PTR [rax],al
   14002885b:	add    al,al
   14002885d:	add    BYTE PTR [rax],al
   14002885f:	add    BYTE PTR [rax+rax*1],cl
   140028862:	add    BYTE PTR [rax],al
   140028864:	add    BYTE PTR [rax],al
   140028866:	add    BYTE PTR [rax],al
   140028868:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14002886c:	rex.WB add BYTE PTR [r8],al
	...
   140028877:	add    BYTE PTR [rbx],al
   140028879:	add    BYTE PTR [rax],al
   14002887b:	add    BYTE PTR [rsi],cl
   14002887d:	add    BYTE PTR [rax],al
   14002887f:	add    BYTE PTR [rax],dl
   140028881:	add    BYTE PTR [rax],al
   140028883:	add    BYTE PTR [rax],al
   140028885:	add    BYTE PTR [rax],al
   140028887:	add    BYTE PTR [rbp+0x0],cl
   14002888a:	push   rbp
   14002888b:	add    BYTE PTR [rcx+0x0],cl
	...
   140028896:	add    BYTE PTR [rax],al
   140028898:	(bad)  
   140028899:	add    BYTE PTR [rax],al
   14002889b:	add    BYTE PTR [rax],dl
   14002889d:	add    BYTE PTR [rax],al
   14002889f:	add    BYTE PTR [rbp+0x0],ah
   1400288a2:	outs   dx,BYTE PTR ds:[rsi]
   1400288a3:	add    BYTE PTR [rip+0x53005500],ch        # 0x19302dda9
   1400288a9:	add    BYTE PTR [rax],al
   1400288ab:	add    BYTE PTR [rax],al
   1400288ad:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140029000 <.reloc>:
   140029000:	add    BYTE PTR [rax+0x300000],al
   140029006:	add    BYTE PTR [rax],al
   140029008:	add    BYTE PTR [rax-0x5fef5ff8],ah
   14002900e:	sbb    BYTE PTR [rax-0x5fd75fe0],ah
   140029014:	xor    BYTE PTR [rax-0x5fbf5fc8],ah
   14002901a:	rex.W movabs al,ds:0xa0d0a0c8a0c0a0a8
   140029024:	cwde   
   140029025:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140029026:	movabs al,ds:0xd8a5d0a5b8a5b0a5
   14002902f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140029030:	add    BYTE PTR [rax+0x500000],dh
   140029036:	add    BYTE PTR [rax],al
   140029038:	add    BYTE PTR [rax-0x5fbf5fe0],ah
   14002903e:	(bad)  
   14002903f:	movabs al,ds:0xa0e0a0c0a0a0a080
   140029048:	add    BYTE PTR [rcx-0x5edf5ef8],ah
   14002904e:	sub    BYTE PTR [rcx-0x5e9f5ec0],ah
   140029054:	and    BYTE PTR [rcx-0x5e575e60],0xc0
   14002905b:	movabs eax,ds:0xa200a1e8a1e0a1c8
   140029064:	or     BYTE PTR [rdx-0x5dd75de0],ah
   14002906a:	movabs ds:0xa280a268a260a248,al
   140029074:	movabs al,ds:0x40a320a2f0a2c0a2
   14002907d:	.byte 0xa3
	...
