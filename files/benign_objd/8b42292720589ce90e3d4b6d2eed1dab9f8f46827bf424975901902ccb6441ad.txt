
8b42292720589ce90e3d4b6d2eed1dab9f8f46827bf424975901902ccb6441ad.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x177d5]        # 0x4187f0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x177d6]        # 0x418800
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x177d9]        # 0x418810
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x1779c]        # 0x4187e0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x1760f]        # 0x418660
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x17771]        # 0x4187d0
  40105f:	mov    DWORD PTR [rip+0x1afa3],edx        # 0x41c008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x411510
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x40b600
  401081:	mov    rdx,QWORD PTR [rip+0x17678]        # 0x418700
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x1765e]        # 0x4186f0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x176d4]        # 0x418770
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x175fb]        # 0x4186a0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x40b1e0
  4010af:	mov    rax,QWORD PTR [rip+0x1755a]        # 0x418610
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x411510
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xa3b9]        # 0x40b4e0
  401127:	call   0x40b4d0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x17635]        # 0x4187a0
  40116b:	lea    r8,[rip+0x1aea6]        # 0x41c018
  401172:	lea    rdx,[rip+0x1aea7]        # 0x41c020
  401179:	lea    rcx,[rip+0x1aea8]        # 0x41c028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x1ae78],eax        # 0x41c000
  401188:	lea    rax,[rip+0x1ae71]        # 0x41c000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x175c5]        # 0x418760
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x411528
  4011a3:	mov    DWORD PTR [rip+0x1ae67],eax        # 0x41c010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x1760a]        # 0x4187d0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x174db]        # 0x4186d0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x1e35e]        # 0x41f560
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x174b7]        # 0x4186e0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x1adba],0x1        # 0x41c004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x173ec]        # 0x418650
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x40b7f0
  40127d:	lea    rcx,[rip+0xab0c]        # 0x40bd90
  401284:	call   QWORD PTR [rip+0x1e2ce]        # 0x41f558
  40128a:	mov    rdx,QWORD PTR [rip+0x1742f]        # 0x4186c0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x40bca0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x411560
  4012a5:	call   0x40b5e0
  4012aa:	mov    rax,QWORD PTR [rip+0x173af]        # 0x418660
  4012b1:	mov    QWORD PTR [rip+0x1d430],rax        # 0x41e6e8
  4012b8:	mov    rax,QWORD PTR [rip+0x173d1]        # 0x418690
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x1d3c9],rax        # 0x41e6e0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x10cca],eax        # 0x412000
  401336:	mov    r12d,DWORD PTR [rip+0x1aceb]        # 0x41c028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x411428
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x1acc2]        # 0x41c020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x4113b8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x411428
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x411418
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x1ac6a],rbp        # 0x41c020
  4013b6:	call   0x40b1b0
  4013bb:	mov    rax,QWORD PTR [rip+0x172ae]        # 0x418670
  4013c2:	mov    rdx,QWORD PTR [rip+0x1ac4f]        # 0x41c018
  4013c9:	mov    ecx,DWORD PTR [rip+0x1ac59]        # 0x41c028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x1ac3c]        # 0x41c018
  4013dc:	mov    rdx,QWORD PTR [rip+0x1ac3d]        # 0x41c020
  4013e3:	call   0x411790
  4013e8:	mov    ecx,DWORD PTR [rip+0x1ac1a]        # 0x41c008
  4013ee:	mov    DWORD PTR [rip+0x1ac18],eax        # 0x41c00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x1ac02]        # 0x41c004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x4114f8
  40140b:	mov    eax,DWORD PTR [rip+0x1abfb]        # 0x41c00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x172a9]        # 0x4186e0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x411500
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x172cd]        # 0x418730
  401463:	mov    rcx,QWORD PTR [rip+0x172b6]        # 0x418720
  40146a:	call   0x4114d8
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x1e047]        # 0x41f4e0
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x172a9]        # 0x418750
  4014a7:	mov    rcx,QWORD PTR [rip+0x17292]        # 0x418740
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x4114d8
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x4114a0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x172f5]        # 0x4187d0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x40b1f0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x172c5]        # 0x4187d0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x40b1f0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rdi
  401531:	push   rsi
  401532:	push   rbx
  401533:	sub    rsp,0x20
  401537:	mov    rdi,rcx
  40153a:	lea    rsi,[rcx+0x1]
  40153e:	jmp    0x40155c
  401540:	movsx  edx,BYTE PTR [rsi]
  401543:	test   dl,dl
  401545:	je     0x40157d
  401547:	lea    rcx,[rip+0x11ab2]        # 0x413000
  40154e:	call   0x4113d8
  401553:	test   rax,rax
  401556:	jne    0x401588
  401558:	add    rsi,0x1
  40155c:	movzx  r8d,BYTE PTR [rsi-0x1]
  401561:	lea    rbx,[rsi-0x1]
  401565:	cmp    r8b,0x5c
  401569:	setne  al
  40156c:	test   r8b,r8b
  40156f:	setne  r9b
  401573:	test   al,r9b
  401576:	jne    0x401558
  401578:	test   r8b,r8b
  40157b:	jne    0x401540
  40157d:	mov    rax,rdi
  401580:	add    rsp,0x20
  401584:	pop    rbx
  401585:	pop    rsi
  401586:	pop    rdi
  401587:	ret    
  401588:	mov    rcx,rdi
  40158b:	call   0x4113b8
  401590:	mov    rcx,rax
  401593:	call   0x402ed0
  401598:	mov    r8,rbx
  40159b:	mov    rdx,rdi
  40159e:	mov    rcx,rax
  4015a1:	sub    r8,rdi
  4015a4:	lea    rsi,[rax+r8*1]
  4015a8:	call   0x411418
  4015ad:	movzx  r10d,BYTE PTR [rip+0x1aa7c]        # 0x41c031
  4015b5:	mov    r9,rax
  4015b8:	lea    rax,[rip+0x11a55]        # 0x413014
  4015bf:	nop
  4015c0:	movzx  r8d,BYTE PTR [rbx+0x1]
  4015c5:	lea    edx,[r8-0x30]
  4015c9:	cmp    dl,0x46
  4015cc:	ja     0x4016b5
  4015d2:	movzx  edx,dl
  4015d5:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4015d9:	add    rdx,rax
  4015dc:	jmp    rdx
  4015de:	mov    BYTE PTR [rsi],0xb
  4015e1:	add    rbx,0x2
  4015e5:	add    rsi,0x1
  4015e9:	jmp    0x4015ff
  4015eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4015f0:	test   dl,dl
  4015f2:	je     0x401607
  4015f4:	add    rsi,0x1
  4015f8:	add    rbx,0x1
  4015fc:	mov    BYTE PTR [rsi-0x1],dl
  4015ff:	movzx  edx,BYTE PTR [rbx]
  401602:	cmp    dl,0x5c
  401605:	jne    0x4015f0
  401607:	test   dl,dl
  401609:	jne    0x4015c0
  40160b:	mov    rax,r9
  40160e:	mov    BYTE PTR [rip+0x1aa1c],r10b        # 0x41c031
  401615:	mov    BYTE PTR [rsi],0x0
  401618:	add    rsp,0x20
  40161c:	pop    rbx
  40161d:	pop    rsi
  40161e:	pop    rdi
  40161f:	ret    
  401620:	mov    BYTE PTR [rsi],0x9
  401623:	add    rbx,0x2
  401627:	add    rsi,0x1
  40162b:	jmp    0x4015ff
  40162d:	mov    BYTE PTR [rsi],0xd
  401630:	add    rbx,0x2
  401634:	add    rsi,0x1
  401638:	jmp    0x4015ff
  40163a:	mov    BYTE PTR [rsi],0xa
  40163d:	add    rbx,0x2
  401641:	add    rsi,0x1
  401645:	jmp    0x4015ff
  401647:	mov    BYTE PTR [rsi],0xc
  40164a:	add    rbx,0x2
  40164e:	add    rsi,0x1
  401652:	jmp    0x4015ff
  401654:	add    rbx,0x2
  401658:	xor    r10d,r10d
  40165b:	jmp    0x4015ff
  40165d:	mov    BYTE PTR [rsi],0x8
  401660:	add    rbx,0x2
  401664:	add    rsi,0x1
  401668:	jmp    0x4015ff
  40166a:	mov    BYTE PTR [rsi],0x7
  40166d:	add    rbx,0x2
  401671:	add    rsi,0x1
  401675:	jmp    0x4015ff
  401677:	mov    BYTE PTR [rsi],0x5c
  40167a:	add    rbx,0x2
  40167e:	jmp    0x4015ff
  401683:	movsx  ecx,BYTE PTR [rbx+0x2]
  401687:	movsx  edx,r8b
  40168b:	sub    edx,0x30
  40168e:	lea    r8d,[rcx-0x30]
  401692:	cmp    r8b,0x7
  401696:	ja     0x4016c1
  401698:	lea    edx,[rcx+rdx*8-0x30]
  40169c:	movsx  ecx,BYTE PTR [rbx+0x3]
  4016a0:	lea    r8d,[rcx-0x30]
  4016a4:	cmp    r8b,0x7
  4016a8:	jbe    0x4016cc
  4016aa:	add    rbx,0x3
  4016ae:	mov    BYTE PTR [rsi],dl
  4016b0:	jmp    0x4015ff
  4016b5:	add    rbx,0x1
  4016b9:	mov    BYTE PTR [rsi],0x5c
  4016bc:	jmp    0x4015ff
  4016c1:	add    rbx,0x2
  4016c5:	mov    BYTE PTR [rsi],dl
  4016c7:	jmp    0x4015ff
  4016cc:	lea    edx,[rcx+rdx*8-0x30]
  4016d0:	add    rbx,0x4
  4016d4:	mov    BYTE PTR [rsi],dl
  4016d6:	jmp    0x4015ff
  4016db:	nop
  4016dc:	nop
  4016dd:	nop
  4016de:	nop
  4016df:	nop
  4016e0:	sub    rsp,0x38
  4016e4:	movzx  edx,BYTE PTR [rcx]
  4016e7:	xor    eax,eax
  4016e9:	and    edx,0xffffffdf
  4016ec:	sub    edx,0x41
  4016ef:	cmp    dl,0x19
  4016f2:	ja     0x401700
  4016f4:	xor    eax,eax
  4016f6:	cmp    BYTE PTR [rcx+0x1],0x3a
  4016fa:	sete   al
  4016fd:	add    rax,rax
  401700:	add    rax,rcx
  401703:	movzx  r10d,BYTE PTR [rax]
  401707:	test   r10b,r10b
  40170a:	je     0x40176a
  40170c:	lea    rdx,[rax+0x1]
  401710:	mov    r8d,r10d
  401713:	mov    r9d,0x1
  401719:	jmp    0x401739
  40171b:	nop    DWORD PTR [rax+rax*1+0x0]
  401720:	cmp    r8b,0x2f
  401724:	je     0x40173f
  401726:	movzx  r8d,BYTE PTR [rdx]
  40172a:	mov    rcx,rdx
  40172d:	xor    r9d,r9d
  401730:	add    rdx,0x1
  401734:	test   r8b,r8b
  401737:	je     0x401752
  401739:	cmp    r8b,0x5c
  40173d:	jne    0x401720
  40173f:	movzx  r8d,BYTE PTR [rdx]
  401743:	mov    rax,rdx
  401746:	mov    rcx,rdx
  401749:	add    rdx,0x1
  40174d:	test   r8b,r8b
  401750:	jne    0x401739
  401752:	cmp    BYTE PTR [rax],0x0
  401755:	je     0x4017a0
  401757:	test   r9d,r9d
  40175a:	jne    0x40176a
  40175c:	movzx  edx,BYTE PTR [rcx-0x1]
  401760:	cmp    dl,0x5c
  401763:	je     0x401770
  401765:	cmp    dl,0x2f
  401768:	je     0x401770
  40176a:	add    rsp,0x38
  40176e:	ret    
  40176f:	nop
  401770:	lea    rdx,[rip+0x12189]        # 0x413900
  401777:	lea    rcx,[rip+0x12192]        # 0x413910
  40177e:	mov    r8d,0x50
  401784:	mov    QWORD PTR [rsp+0x28],rax
  401789:	call   0x40ca90
  40178e:	mov    rax,QWORD PTR [rsp+0x28]
  401793:	add    rsp,0x38
  401797:	ret    
  401798:	nop    DWORD PTR [rax+rax*1+0x0]
  4017a0:	cmp    r10b,0x5c
  4017a4:	je     0x4017ac
  4017a6:	cmp    r10b,0x2f
  4017aa:	jne    0x401757
  4017ac:	test   r9d,r9d
  4017af:	je     0x40175c
  4017b1:	sub    rax,0x1
  4017b5:	add    rsp,0x38
  4017b9:	ret    
  4017ba:	nop
  4017bb:	nop
  4017bc:	nop
  4017bd:	nop
  4017be:	nop
  4017bf:	nop
  4017c0:	push   rdi
  4017c1:	push   rsi
  4017c2:	push   rbx
  4017c3:	sub    rsp,0x20
  4017c7:	mov    rbx,QWORD PTR [rip+0x1de02]        # 0x41f5d0
  4017ce:	call   rbx
  4017d0:	lea    rcx,[rax+0x30]
  4017d4:	call   0x401970
  4017d9:	test   eax,eax
  4017db:	mov    rsi,QWORD PTR [rip+0x1de2e]        # 0x41f610
  4017e2:	jne    0x401832
  4017e4:	call   rsi
  4017e6:	mov    DWORD PTR [rax],0x0
  4017ec:	call   rbx
  4017ee:	lea    rcx,[rax+0x60]
  4017f2:	call   0x411490
  4017f7:	test   eax,eax
  4017f9:	jne    0x40185b
  4017fb:	call   rbx
  4017fd:	lea    rcx,[rax+0x60]
  401801:	call   0x411488
  401806:	test   eax,eax
  401808:	jne    0x40185b
  40180a:	call   rbx
  40180c:	lea    rcx,[rax+0x60]
  401810:	call   0x411498
  401815:	test   eax,eax
  401817:	jne    0x401821
  401819:	add    rsp,0x20
  40181d:	pop    rbx
  40181e:	pop    rsi
  40181f:	pop    rdi
  401820:	ret    
  401821:	call   rsi
  401823:	cmp    DWORD PTR [rax],0x9
  401826:	je     0x401819
  401828:	mov    ecx,0x1
  40182d:	call   0x4114a0
  401832:	lea    rcx,[rip+0x12107]        # 0x413940
  401839:	call   0x40b010
  40183e:	mov    rdi,rax
  401841:	call   rsi
  401843:	mov    edx,DWORD PTR [rax]
  401845:	lea    r8,[rip+0x12100]        # 0x41394c
  40184c:	mov    r9,rdi
  40184f:	mov    ecx,0x1
  401854:	call   0x4031c0
  401859:	jmp    0x4017e4
  40185b:	call   rbx
  40185d:	lea    rcx,[rax+0x60]
  401861:	call   0x411498
  401866:	mov    ecx,0x1
  40186b:	call   0x4114a0
  401870:	nop
  401871:	nop
  401872:	nop
  401873:	nop
  401874:	nop
  401875:	nop
  401876:	nop
  401877:	nop
  401878:	nop
  401879:	nop
  40187a:	nop
  40187b:	nop
  40187c:	nop
  40187d:	nop
  40187e:	nop
  40187f:	nop
  401880:	push   rdi
  401881:	push   rsi
  401882:	push   rbx
  401883:	sub    rsp,0x20
  401887:	mov    rbx,rcx
  40188a:	mov    edi,edx
  40188c:	call   QWORD PTR [rip+0x1dd3e]        # 0x41f5d0
  401892:	add    rax,0x30
  401896:	cmp    rbx,rax
  401899:	je     0x401903
  40189b:	mov    rsi,QWORD PTR [rip+0x1dd6e]        # 0x41f610
  4018a2:	call   rsi
  4018a4:	mov    rcx,rbx
  4018a7:	mov    DWORD PTR [rax],0x0
  4018ad:	call   0x411490
  4018b2:	test   eax,eax
  4018b4:	mov    rcx,rbx
  4018b7:	jne    0x401915
  4018b9:	test   dil,dil
  4018bc:	je     0x4018f0
  4018be:	call   0x411488
  4018c3:	test   eax,eax
  4018c5:	je     0x401943
  4018c7:	call   rsi
  4018c9:	mov    edi,DWORD PTR [rax]
  4018cb:	mov    rcx,rbx
  4018ce:	call   0x411498
  4018d3:	call   rsi
  4018d5:	mov    DWORD PTR [rax],edi
  4018d7:	call   rsi
  4018d9:	cmp    DWORD PTR [rax],0x20
  4018dc:	setne  al
  4018df:	movzx  eax,al
  4018e2:	neg    eax
  4018e4:	add    rsp,0x20
  4018e8:	pop    rbx
  4018e9:	pop    rsi
  4018ea:	pop    rdi
  4018eb:	ret    
  4018ec:	nop    DWORD PTR [rax+0x0]
  4018f0:	call   0x411498
  4018f5:	test   eax,eax
  4018f7:	jne    0x4018d7
  4018f9:	xor    eax,eax
  4018fb:	add    rsp,0x20
  4018ff:	pop    rbx
  401900:	pop    rsi
  401901:	pop    rdi
  401902:	ret    
  401903:	cmp    BYTE PTR [rip+0x1a736],0x0        # 0x41c040
  40190a:	jne    0x4018f9
  40190c:	mov    BYTE PTR [rip+0x1a72d],0x1        # 0x41c040
  401913:	jmp    0x40189b
  401915:	call   0x411488
  40191a:	test   eax,eax
  40191c:	jne    0x4018c7
  40191e:	xor    ecx,ecx
  401920:	mov    rdx,rbx
  401923:	call   0x4050c0
  401928:	cmp    eax,0xffffffff
  40192b:	je     0x4018c7
  40192d:	mov    rcx,rbx
  401930:	call   0x411488
  401935:	test   eax,eax
  401937:	jne    0x4018c7
  401939:	call   rsi
  40193b:	mov    DWORD PTR [rax],0x0
  401941:	jmp    0x4018c7
  401943:	mov    rcx,rbx
  401946:	call   0x411498
  40194b:	test   eax,eax
  40194d:	je     0x4018f9
  40194f:	call   rsi
  401951:	cmp    DWORD PTR [rax],0x9
  401954:	jne    0x4018d7
  401956:	xor    eax,eax
  401958:	jmp    0x4018fb
  40195a:	nop    WORD PTR [rax+rax*1+0x0]
  401960:	xor    edx,edx
  401962:	jmp    0x401880
  401967:	nop    WORD PTR [rax+rax*1+0x0]
  401970:	mov    edx,0x1
  401975:	jmp    0x401880
  40197a:	nop
  40197b:	nop
  40197c:	nop
  40197d:	nop
  40197e:	nop
  40197f:	nop
  401980:	push   rdi
  401981:	push   rsi
  401982:	push   rbx
  401983:	sub    rsp,0x20
  401987:	test   rcx,rcx
  40198a:	mov    rbx,rcx
  40198d:	je     0x4019f7
  40198f:	mov    edx,0x2f
  401994:	call   0x4113a0
  401999:	test   rax,rax
  40199c:	je     0x4019e8
  40199e:	lea    rdx,[rax+0x1]
  4019a2:	mov    rcx,rdx
  4019a5:	sub    rcx,rbx
  4019a8:	cmp    rcx,0x6
  4019ac:	jle    0x4019e8
  4019ae:	lea    rsi,[rax-0x6]
  4019b2:	lea    rdi,[rip+0x11fcf]        # 0x413988
  4019b9:	mov    ecx,0x7
  4019be:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4019c0:	jne    0x4019e8
  4019c2:	lea    rdi,[rip+0x11fc7]        # 0x413990
  4019c9:	mov    ecx,0x3
  4019ce:	mov    rsi,rdx
  4019d1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4019d3:	seta   r8b
  4019d7:	setb   cl
  4019da:	add    rax,0x4
  4019de:	cmp    r8b,cl
  4019e1:	cmovne rax,rdx
  4019e5:	mov    rbx,rax
  4019e8:	mov    QWORD PTR [rip+0x1a661],rbx        # 0x41c050
  4019ef:	add    rsp,0x20
  4019f3:	pop    rbx
  4019f4:	pop    rsi
  4019f5:	pop    rdi
  4019f6:	ret    
  4019f7:	call   QWORD PTR [rip+0x1dbd3]        # 0x41f5d0
  4019fd:	lea    rcx,[rip+0x11f4c]        # 0x413950
  401a04:	lea    rdx,[rax+0x60]
  401a08:	call   0x405190
  401a0d:	call   0x4114b0
  401a12:	nop
  401a13:	nop
  401a14:	nop
  401a15:	nop
  401a16:	nop
  401a17:	nop
  401a18:	nop
  401a19:	nop
  401a1a:	nop
  401a1b:	nop
  401a1c:	nop
  401a1d:	nop
  401a1e:	nop
  401a1f:	nop
  401a20:	push   r15
  401a22:	push   r14
  401a24:	push   r13
  401a26:	push   r12
  401a28:	push   rbp
  401a29:	push   rdi
  401a2a:	push   rsi
  401a2b:	push   rbx
  401a2c:	sub    rsp,0xc8
  401a33:	lea    rbx,[rsp+0x40]
  401a38:	mov    r12,rcx
  401a3b:	mov    rcx,rdx
  401a3e:	mov    edx,0x2
  401a43:	lea    rbp,[rsp+0x80]
  401a4b:	call   0x4027f0
  401a50:	mov    QWORD PTR [rsp+0x28],rax
  401a55:	lea    rax,[rbx+0x4]
  401a59:	mov    rdi,QWORD PTR [rip+0x16c20]        # 0x418680
  401a60:	mov    QWORD PTR [rsp+0x20],rax
  401a65:	lea    rax,[rbp+0x4]
  401a69:	mov    QWORD PTR [rsp+0x30],rax
  401a6e:	xchg   ax,ax
  401a70:	cmp    BYTE PTR [r12],0x0
  401a75:	je     0x401d4e
  401a7b:	mov    rdx,QWORD PTR [rsp+0x28]
  401a80:	mov    rcx,r12
  401a83:	call   0x408a40
  401a88:	test   rax,rax
  401a8b:	mov    rsi,rax
  401a8e:	je     0x401d4e
  401a94:	mov    rax,QWORD PTR [rdi]
  401a97:	cmp    DWORD PTR [rax],0x1
  401a9a:	jle    0x402230
  401aa0:	cmp    r12,rsi
  401aa3:	mov    QWORD PTR [rsp+0x50],r12
  401aa8:	mov    BYTE PTR [rsp+0x40],0x0
  401aad:	mov    DWORD PTR [rsp+0x44],0x0
  401ab5:	mov    BYTE PTR [rsp+0x48],0x0
  401aba:	jae    0x401bfa
  401ac0:	mov    r12,QWORD PTR [rip+0x16cf9]        # 0x4187c0
  401ac7:	nop    WORD PTR [rax+rax*1+0x0]
  401ad0:	cmp    BYTE PTR [rsp+0x40],0x0
  401ad5:	jne    0x401b38
  401ad7:	mov    r13,QWORD PTR [rsp+0x50]
  401adc:	movzx  eax,BYTE PTR [r13+0x0]
  401ae1:	mov    edx,eax
  401ae3:	and    eax,0x1f
  401ae6:	shr    dl,0x5
  401ae9:	and    edx,0x7
  401aec:	mov    edx,DWORD PTR [r12+rdx*4]
  401af0:	bt     edx,eax
  401af3:	jae    0x401b21
  401af5:	mov    QWORD PTR [rsp+0x58],0x1
  401afe:	movsx  cx,BYTE PTR [r13+0x0]
  401b04:	mov    BYTE PTR [rsp+0x60],0x1
  401b09:	mov    BYTE PTR [rsp+0x48],0x1
  401b0e:	mov    WORD PTR [rsp+0x62],cx
  401b13:	test   cx,cx
  401b16:	jne    0x401bcd
  401b1c:	call   0x4114b0
  401b21:	mov    rcx,QWORD PTR [rsp+0x20]
  401b26:	call   0x404630
  401b2b:	test   eax,eax
  401b2d:	je     0x402280
  401b33:	mov    BYTE PTR [rsp+0x40],0x1
  401b38:	mov    rax,QWORD PTR [rdi]
  401b3b:	mov    r13,QWORD PTR [rsp+0x50]
  401b40:	movsxd rdx,DWORD PTR [rax]
  401b43:	mov    rcx,r13
  401b46:	call   0x4027b0
  401b4b:	lea    rcx,[rbx+0x22]
  401b4f:	lea    r9,[rbx+0x4]
  401b53:	mov    r8,rax
  401b56:	mov    rdx,r13
  401b59:	call   0x404520
  401b5e:	cmp    rax,0xffffffffffffffff
  401b62:	mov    QWORD PTR [rsp+0x58],rax
  401b67:	je     0x4020d0
  401b6d:	cmp    rax,0xfffffffffffffffe
  401b71:	je     0x402130
  401b77:	test   rax,rax
  401b7a:	jne    0x401b9f
  401b7c:	mov    rax,QWORD PTR [rsp+0x50]
  401b81:	mov    QWORD PTR [rsp+0x58],0x1
  401b8a:	cmp    BYTE PTR [rax],0x0
  401b8d:	jne    0x402361
  401b93:	cmp    WORD PTR [rsp+0x62],0x0
  401b99:	jne    0x402343
  401b9f:	lea    rcx,[rbx+0x4]
  401ba3:	mov    BYTE PTR [rsp+0x60],0x1
  401ba8:	call   0x404630
  401bad:	test   eax,eax
  401baf:	je     0x401bb6
  401bb1:	mov    BYTE PTR [rsp+0x40],0x0
  401bb6:	movzx  eax,BYTE PTR [rsp+0x60]
  401bbb:	movzx  ecx,WORD PTR [rsp+0x62]
  401bc0:	mov    BYTE PTR [rsp+0x48],0x1
  401bc5:	test   al,al
  401bc7:	jne    0x401b13
  401bcd:	mov    r13,QWORD PTR [rsp+0x50]
  401bd2:	mov    rax,r13
  401bd5:	add    rax,QWORD PTR [rsp+0x58]
  401bda:	movzx  edx,BYTE PTR [rsp+0x60]
  401bdf:	mov    BYTE PTR [rsp+0x48],0x0
  401be4:	cmp    rsi,rax
  401be7:	mov    QWORD PTR [rsp+0x50],rax
  401bec:	ja     0x401ad0
  401bf2:	test   dl,dl
  401bf4:	jne    0x40237f
  401bfa:	mov    BYTE PTR [rsp+0x3f],0x1
  401bff:	mov    rax,QWORD PTR [rsp+0x28]
  401c04:	mov    r12,QWORD PTR [rip+0x16bb5]        # 0x4187c0
  401c0b:	mov    QWORD PTR [rsp+0x50],rsi
  401c10:	mov    BYTE PTR [rsp+0x40],0x0
  401c15:	mov    DWORD PTR [rsp+0x44],0x0
  401c1d:	mov    BYTE PTR [rsp+0x48],0x0
  401c22:	mov    QWORD PTR [rsp+0x90],rax
  401c2a:	mov    BYTE PTR [rsp+0x80],0x0
  401c32:	mov    r13,r12
  401c35:	mov    DWORD PTR [rsp+0x84],0x0
  401c40:	mov    BYTE PTR [rsp+0x88],0x0
  401c48:	nop    DWORD PTR [rax+rax*1+0x0]
  401c50:	cmp    BYTE PTR [rsp+0x80],0x0
  401c58:	jne    0x401e6a
  401c5e:	mov    rcx,QWORD PTR [rsp+0x90]
  401c66:	movzx  eax,BYTE PTR [rcx]
  401c69:	mov    edx,eax
  401c6b:	and    eax,0x1f
  401c6e:	shr    dl,0x5
  401c71:	and    edx,0x7
  401c74:	mov    edx,DWORD PTR [r12+rdx*4]
  401c78:	bt     edx,eax
  401c7b:	jae    0x401e50
  401c81:	mov    QWORD PTR [rsp+0x98],0x1
  401c8d:	movsx  ax,BYTE PTR [rcx]
  401c91:	mov    BYTE PTR [rsp+0xa0],0x1
  401c99:	mov    BYTE PTR [rsp+0x88],0x1
  401ca1:	mov    WORD PTR [rsp+0xa2],ax
  401ca9:	cmp    WORD PTR [rsp+0xa2],0x0
  401cb2:	jne    0x401f15
  401cb8:	movzx  r12d,BYTE PTR [rsp+0x48]
  401cbe:	test   r12b,r12b
  401cc1:	je     0x402151
  401cc7:	movzx  eax,WORD PTR [rsp+0x62]
  401ccc:	movzx  r12d,BYTE PTR [rsp+0x60]
  401cd2:	test   r12b,r12b
  401cd5:	je     0x401cdc
  401cd7:	test   ax,ax
  401cda:	je     0x401ce7
  401cdc:	cmp    BYTE PTR [rsp+0x60],0x0
  401ce1:	jne    0x402398
  401ce7:	cmp    BYTE PTR [rsp+0x3f],0x0
  401cec:	jne    0x402262
  401cf2:	mov    QWORD PTR [rsp+0x50],rsi
  401cf7:	mov    BYTE PTR [rsp+0x40],0x0
  401cfc:	mov    DWORD PTR [rsp+0x44],0x0
  401d04:	mov    BYTE PTR [rsp+0x48],0x0
  401d09:	movzx  eax,BYTE PTR [rsi]
  401d0c:	mov    rcx,QWORD PTR [rip+0x16aad]        # 0x4187c0
  401d13:	mov    edx,eax
  401d15:	and    eax,0x1f
  401d18:	shr    dl,0x5
  401d1b:	and    edx,0x7
  401d1e:	mov    edx,DWORD PTR [rcx+rdx*4]
  401d21:	bt     edx,eax
  401d24:	jae    0x401d70
  401d26:	mov    QWORD PTR [rsp+0x58],0x1
  401d2f:	movsx  ax,BYTE PTR [rsi]
  401d33:	mov    BYTE PTR [rsp+0x60],0x1
  401d38:	mov    BYTE PTR [rsp+0x48],0x1
  401d3d:	mov    WORD PTR [rsp+0x62],ax
  401d42:	cmp    WORD PTR [rsp+0x62],0x0
  401d48:	jne    0x401e43
  401d4e:	xor    ebx,ebx
  401d50:	mov    rcx,QWORD PTR [rsp+0x28]
  401d55:	call   0x411468
  401d5a:	mov    eax,ebx
  401d5c:	add    rsp,0xc8
  401d63:	pop    rbx
  401d64:	pop    rsi
  401d65:	pop    rdi
  401d66:	pop    rbp
  401d67:	pop    r12
  401d69:	pop    r13
  401d6b:	pop    r14
  401d6d:	pop    r15
  401d6f:	ret    
  401d70:	mov    rcx,QWORD PTR [rsp+0x20]
  401d75:	call   0x404630
  401d7a:	test   eax,eax
  401d7c:	je     0x4023b2
  401d82:	mov    rax,QWORD PTR [rdi]
  401d85:	mov    r12,QWORD PTR [rsp+0x50]
  401d8a:	mov    BYTE PTR [rsp+0x40],0x1
  401d8f:	movsxd rdx,DWORD PTR [rax]
  401d92:	mov    rcx,r12
  401d95:	call   0x4027b0
  401d9a:	mov    r9,QWORD PTR [rsp+0x20]
  401d9f:	lea    rcx,[rbx+0x22]
  401da3:	mov    r8,rax
  401da6:	mov    rdx,r12
  401da9:	call   0x404520
  401dae:	cmp    rax,0xffffffffffffffff
  401db2:	mov    QWORD PTR [rsp+0x58],rax
  401db7:	je     0x4023d0
  401dbd:	cmp    rax,0xfffffffffffffffe
  401dc1:	je     0x4023fe
  401dc7:	test   rax,rax
  401dca:	jne    0x401e19
  401dcc:	mov    rax,QWORD PTR [rsp+0x50]
  401dd1:	mov    QWORD PTR [rsp+0x58],0x1
  401dda:	cmp    BYTE PTR [rax],0x0
  401ddd:	je     0x401df8
  401ddf:	lea    rdx,[rip+0x11bba]        # 0x4139a0
  401de6:	lea    rcx,[rip+0x11bd4]        # 0x4139c1
  401ded:	mov    r8d,0xb2
  401df3:	call   0x40ca90
  401df8:	cmp    WORD PTR [rsp+0x62],0x0
  401dfe:	je     0x401e19
  401e00:	lea    rdx,[rip+0x11b99]        # 0x4139a0
  401e07:	lea    rcx,[rip+0x11bca]        # 0x4139d8
  401e0e:	mov    r8d,0xb3
  401e14:	call   0x40ca90
  401e19:	mov    rcx,QWORD PTR [rsp+0x20]
  401e1e:	mov    BYTE PTR [rsp+0x60],0x1
  401e23:	call   0x404630
  401e28:	test   eax,eax
  401e2a:	je     0x401e31
  401e2c:	mov    BYTE PTR [rsp+0x40],0x0
  401e31:	movzx  eax,BYTE PTR [rsp+0x60]
  401e36:	mov    BYTE PTR [rsp+0x48],0x1
  401e3b:	test   al,al
  401e3d:	jne    0x401d42
  401e43:	add    rsi,QWORD PTR [rsp+0x58]
  401e48:	mov    r12,rsi
  401e4b:	jmp    0x401a70
  401e50:	mov    rcx,QWORD PTR [rsp+0x30]
  401e55:	call   0x404630
  401e5a:	test   eax,eax
  401e5c:	je     0x4020f0
  401e62:	mov    BYTE PTR [rsp+0x80],0x1
  401e6a:	mov    rax,QWORD PTR [rdi]
  401e6d:	mov    r14,QWORD PTR [rsp+0x90]
  401e75:	movsxd rdx,DWORD PTR [rax]
  401e78:	mov    rcx,r14
  401e7b:	call   0x4027b0
  401e80:	lea    rcx,[rbp+0x22]
  401e84:	lea    r9,[rbp+0x4]
  401e88:	mov    r8,rax
  401e8b:	mov    rdx,r14
  401e8e:	call   0x404520
  401e93:	cmp    rax,0xffffffffffffffff
  401e97:	mov    QWORD PTR [rsp+0x98],rax
  401e9f:	je     0x402060
  401ea5:	cmp    rax,0xfffffffffffffffe
  401ea9:	je     0x402094
  401eaf:	test   rax,rax
  401eb2:	jne    0x401ee0
  401eb4:	mov    rax,QWORD PTR [rsp+0x90]
  401ebc:	mov    QWORD PTR [rsp+0x98],0x1
  401ec8:	cmp    BYTE PTR [rax],0x0
  401ecb:	jne    0x4021d0
  401ed1:	cmp    WORD PTR [rsp+0xa2],0x0
  401eda:	jne    0x4021b0
  401ee0:	lea    rcx,[rbp+0x4]
  401ee4:	mov    BYTE PTR [rsp+0xa0],0x1
  401eec:	call   0x404630
  401ef1:	test   eax,eax
  401ef3:	je     0x401efd
  401ef5:	mov    BYTE PTR [rsp+0x80],0x0
  401efd:	movzx  eax,BYTE PTR [rsp+0xa0]
  401f05:	mov    BYTE PTR [rsp+0x88],0x1
  401f0d:	test   al,al
  401f0f:	jne    0x401ca9
  401f15:	movzx  r14d,BYTE PTR [rsp+0x48]
  401f1b:	test   r14b,r14b
  401f1e:	je     0x401f60
  401f20:	movzx  r14d,BYTE PTR [rsp+0x60]
  401f26:	test   r14b,r14b
  401f29:	jne    0x401fab
  401f2f:	mov    rax,QWORD PTR [rsp+0x58]
  401f34:	mov    BYTE PTR [rsp+0x48],0x0
  401f39:	add    QWORD PTR [rsp+0x50],rax
  401f3e:	mov    BYTE PTR [rsp+0x88],0x0
  401f46:	mov    rax,QWORD PTR [rsp+0x98]
  401f4e:	add    QWORD PTR [rsp+0x90],rax
  401f56:	jmp    0x401c50
  401f5b:	nop    DWORD PTR [rax+rax*1+0x0]
  401f60:	cmp    BYTE PTR [rsp+0x40],0x0
  401f65:	jne    0x401fd7
  401f67:	mov    rcx,QWORD PTR [rsp+0x50]
  401f6c:	movzx  eax,BYTE PTR [rcx]
  401f6f:	mov    edx,eax
  401f71:	and    eax,0x1f
  401f74:	shr    dl,0x5
  401f77:	and    edx,0x7
  401f7a:	mov    edx,DWORD PTR [r13+rdx*4+0x0]
  401f7f:	bt     edx,eax
  401f82:	jae    0x401fc0
  401f84:	mov    QWORD PTR [rsp+0x58],0x1
  401f8d:	movsx  ax,BYTE PTR [rcx]
  401f91:	mov    r14d,0x1
  401f97:	mov    BYTE PTR [rsp+0x60],0x1
  401f9c:	mov    WORD PTR [rsp+0x62],ax
  401fa1:	test   r14b,r14b
  401fa4:	mov    BYTE PTR [rsp+0x48],0x1
  401fa9:	je     0x401f2f
  401fab:	cmp    WORD PTR [rsp+0x62],0x0
  401fb1:	je     0x401b1c
  401fb7:	jmp    0x401f2f
  401fbc:	nop    DWORD PTR [rax+0x0]
  401fc0:	mov    rcx,QWORD PTR [rsp+0x20]
  401fc5:	call   0x404630
  401fca:	test   eax,eax
  401fcc:	je     0x402110
  401fd2:	mov    BYTE PTR [rsp+0x40],0x1
  401fd7:	mov    rax,QWORD PTR [rdi]
  401fda:	mov    r15,QWORD PTR [rsp+0x50]
  401fdf:	movsxd rdx,DWORD PTR [rax]
  401fe2:	mov    rcx,r15
  401fe5:	call   0x4027b0
  401fea:	lea    rcx,[rbx+0x22]
  401fee:	lea    r9,[rbx+0x4]
  401ff2:	mov    r8,rax
  401ff5:	mov    rdx,r15
  401ff8:	call   0x404520
  401ffd:	cmp    rax,0xffffffffffffffff
  402001:	mov    QWORD PTR [rsp+0x58],rax
  402006:	je     0x402081
  402008:	cmp    rax,0xfffffffffffffffe
  40200c:	je     0x4020b3
  402012:	test   rax,rax
  402015:	jne    0x40203a
  402017:	mov    rax,QWORD PTR [rsp+0x50]
  40201c:	mov    QWORD PTR [rsp+0x58],0x1
  402025:	cmp    BYTE PTR [rax],0x0
  402028:	jne    0x402210
  40202e:	cmp    WORD PTR [rsp+0x62],0x0
  402034:	jne    0x4021f0
  40203a:	lea    rcx,[rbx+0x4]
  40203e:	mov    BYTE PTR [rsp+0x60],0x1
  402043:	call   0x404630
  402048:	test   eax,eax
  40204a:	je     0x402051
  40204c:	mov    BYTE PTR [rsp+0x40],0x0
  402051:	movzx  r14d,BYTE PTR [rsp+0x60]
  402057:	jmp    0x401fa1
  40205c:	nop    DWORD PTR [rax+0x0]
  402060:	mov    QWORD PTR [rsp+0x98],0x1
  40206c:	mov    BYTE PTR [rsp+0xa0],0x0
  402074:	mov    BYTE PTR [rsp+0x88],0x1
  40207c:	jmp    0x401f15
  402081:	mov    QWORD PTR [rsp+0x58],0x1
  40208a:	mov    BYTE PTR [rsp+0x60],0x0
  40208f:	jmp    0x401fa1
  402094:	mov    rcx,QWORD PTR [rsp+0x90]
  40209c:	call   0x4113b8
  4020a1:	mov    BYTE PTR [rsp+0xa0],0x0
  4020a9:	mov    QWORD PTR [rsp+0x98],rax
  4020b1:	jmp    0x402074
  4020b3:	mov    rcx,QWORD PTR [rsp+0x50]
  4020b8:	call   0x4113b8
  4020bd:	mov    BYTE PTR [rsp+0x60],0x0
  4020c2:	mov    QWORD PTR [rsp+0x58],rax
  4020c7:	jmp    0x401fa1
  4020cc:	nop    DWORD PTR [rax+0x0]
  4020d0:	mov    QWORD PTR [rsp+0x58],0x1
  4020d9:	mov    BYTE PTR [rsp+0x60],0x0
  4020de:	movzx  ecx,WORD PTR [rsp+0x62]
  4020e3:	mov    r13,QWORD PTR [rsp+0x50]
  4020e8:	jmp    0x401bd2
  4020ed:	nop    DWORD PTR [rax]
  4020f0:	lea    rdx,[rip+0x118a9]        # 0x4139a0
  4020f7:	lea    rcx,[rip+0x118ac]        # 0x4139aa
  4020fe:	mov    r8d,0x96
  402104:	call   0x40ca90
  402109:	jmp    0x401e62
  40210e:	xchg   ax,ax
  402110:	lea    rdx,[rip+0x11889]        # 0x4139a0
  402117:	lea    rcx,[rip+0x1188c]        # 0x4139aa
  40211e:	mov    r8d,0x96
  402124:	call   0x40ca90
  402129:	jmp    0x401fd2
  40212e:	xchg   ax,ax
  402130:	mov    r13,QWORD PTR [rsp+0x50]
  402135:	mov    rcx,r13
  402138:	call   0x4113b8
  40213d:	mov    BYTE PTR [rsp+0x60],0x0
  402142:	mov    QWORD PTR [rsp+0x58],rax
  402147:	movzx  ecx,WORD PTR [rsp+0x62]
  40214c:	jmp    0x401bd2
  402151:	cmp    BYTE PTR [rsp+0x40],0x0
  402156:	jne    0x4022b5
  40215c:	mov    rcx,QWORD PTR [rsp+0x50]
  402161:	mov    r8,QWORD PTR [rip+0x16658]        # 0x4187c0
  402168:	movzx  eax,BYTE PTR [rcx]
  40216b:	mov    edx,eax
  40216d:	and    eax,0x1f
  402170:	shr    dl,0x5
  402173:	and    edx,0x7
  402176:	mov    edx,DWORD PTR [r8+rdx*4]
  40217a:	bt     edx,eax
  40217d:	jae    0x40229e
  402183:	mov    QWORD PTR [rsp+0x58],0x1
  40218c:	movsx  ax,BYTE PTR [rcx]
  402190:	mov    r12d,0x1
  402196:	mov    BYTE PTR [rsp+0x60],0x1
  40219b:	mov    WORD PTR [rsp+0x62],ax
  4021a0:	mov    BYTE PTR [rsp+0x48],0x1
  4021a5:	jmp    0x401cd2
  4021aa:	nop    WORD PTR [rax+rax*1+0x0]
  4021b0:	lea    rdx,[rip+0x117e9]        # 0x4139a0
  4021b7:	lea    rcx,[rip+0x1181a]        # 0x4139d8
  4021be:	mov    r8d,0xb3
  4021c4:	call   0x40ca90
  4021c9:	jmp    0x401ee0
  4021ce:	xchg   ax,ax
  4021d0:	lea    rdx,[rip+0x117c9]        # 0x4139a0
  4021d7:	lea    rcx,[rip+0x117e3]        # 0x4139c1
  4021de:	mov    r8d,0xb2
  4021e4:	call   0x40ca90
  4021e9:	jmp    0x401ed1
  4021ee:	xchg   ax,ax
  4021f0:	lea    rdx,[rip+0x117a9]        # 0x4139a0
  4021f7:	lea    rcx,[rip+0x117da]        # 0x4139d8
  4021fe:	mov    r8d,0xb3
  402204:	call   0x40ca90
  402209:	jmp    0x40203a
  40220e:	xchg   ax,ax
  402210:	lea    rdx,[rip+0x11789]        # 0x4139a0
  402217:	lea    rcx,[rip+0x117a3]        # 0x4139c1
  40221e:	mov    r8d,0xb2
  402224:	call   0x40ca90
  402229:	jmp    0x40202e
  40222e:	xchg   ax,ax
  402230:	cmp    r12,rsi
  402233:	jae    0x402243
  402235:	movzx  ecx,BYTE PTR [rsi-0x1]
  402239:	call   QWORD PTR [rip+0x1d481]        # 0x41f6c0
  40223f:	test   eax,eax
  402241:	jne    0x40226c
  402243:	mov    rcx,QWORD PTR [rsp+0x28]
  402248:	call   0x4113b8
  40224d:	movzx  eax,BYTE PTR [rsi+rax*1]
  402251:	test   al,al
  402253:	je     0x402262
  402255:	movzx  ecx,al
  402258:	call   QWORD PTR [rip+0x1d462]        # 0x41f6c0
  40225e:	test   eax,eax
  402260:	jne    0x40226c
  402262:	mov    ebx,0x1
  402267:	jmp    0x401d50
  40226c:	cmp    BYTE PTR [rsi],0x0
  40226f:	je     0x401d4e
  402275:	lea    r12,[rsi+0x1]
  402279:	jmp    0x401a70
  40227e:	xchg   ax,ax
  402280:	lea    rdx,[rip+0x11719]        # 0x4139a0
  402287:	lea    rcx,[rip+0x1171c]        # 0x4139aa
  40228e:	mov    r8d,0x96
  402294:	call   0x40ca90
  402299:	jmp    0x401b33
  40229e:	mov    rcx,QWORD PTR [rsp+0x20]
  4022a3:	call   0x404630
  4022a8:	test   eax,eax
  4022aa:	je     0x402438
  4022b0:	mov    BYTE PTR [rsp+0x40],0x1
  4022b5:	mov    rax,QWORD PTR [rdi]
  4022b8:	mov    r13,QWORD PTR [rsp+0x50]
  4022bd:	movsxd rdx,DWORD PTR [rax]
  4022c0:	mov    rcx,r13
  4022c3:	call   0x4027b0
  4022c8:	lea    rcx,[rbx+0x22]
  4022cc:	lea    r9,[rbx+0x4]
  4022d0:	mov    r8,rax
  4022d3:	mov    rdx,r13
  4022d6:	call   0x404520
  4022db:	cmp    rax,0xffffffffffffffff
  4022df:	mov    QWORD PTR [rsp+0x58],rax
  4022e4:	je     0x4023e6
  4022ea:	cmp    rax,0xfffffffffffffffe
  4022ee:	je     0x40241a
  4022f4:	test   rax,rax
  4022f7:	jne    0x40231c
  4022f9:	mov    rax,QWORD PTR [rsp+0x50]
  4022fe:	mov    QWORD PTR [rsp+0x58],0x1
  402307:	cmp    BYTE PTR [rax],0x0
  40230a:	jne    0x402456
  402310:	cmp    WORD PTR [rsp+0x62],0x0
  402316:	jne    0x40247b
  40231c:	lea    rcx,[rbx+0x4]
  402320:	mov    BYTE PTR [rsp+0x60],0x1
  402325:	call   0x404630
  40232a:	test   eax,eax
  40232c:	je     0x402333
  40232e:	mov    BYTE PTR [rsp+0x40],0x0
  402333:	movzx  eax,WORD PTR [rsp+0x62]
  402338:	movzx  r12d,BYTE PTR [rsp+0x60]
  40233e:	jmp    0x4021a0
  402343:	lea    rdx,[rip+0x11656]        # 0x4139a0
  40234a:	lea    rcx,[rip+0x11687]        # 0x4139d8
  402351:	mov    r8d,0xb3
  402357:	call   0x40ca90
  40235c:	jmp    0x401b9f
  402361:	lea    rdx,[rip+0x11638]        # 0x4139a0
  402368:	lea    rcx,[rip+0x11652]        # 0x4139c1
  40236f:	mov    r8d,0xb2
  402375:	call   0x40ca90
  40237a:	jmp    0x401b93
  40237f:	movzx  ecx,cx
  402382:	mov    edx,0x107
  402387:	call   0x411438
  40238c:	test   eax,eax
  40238e:	sete   BYTE PTR [rsp+0x3f]
  402393:	jmp    0x401bff
  402398:	movzx  ecx,ax
  40239b:	mov    edx,0x107
  4023a0:	call   0x411438
  4023a5:	test   eax,eax
  4023a7:	je     0x401ce7
  4023ad:	jmp    0x401cf2
  4023b2:	lea    rdx,[rip+0x115e7]        # 0x4139a0
  4023b9:	lea    rcx,[rip+0x115ea]        # 0x4139aa
  4023c0:	mov    r8d,0x96
  4023c6:	call   0x40ca90
  4023cb:	jmp    0x401d82
  4023d0:	mov    QWORD PTR [rsp+0x58],0x1
  4023d9:	add    rsi,QWORD PTR [rsp+0x58]
  4023de:	mov    r12,rsi
  4023e1:	jmp    0x401a70
  4023e6:	mov    QWORD PTR [rsp+0x58],0x1
  4023ef:	mov    BYTE PTR [rsp+0x60],0x0
  4023f4:	movzx  eax,WORD PTR [rsp+0x62]
  4023f9:	jmp    0x4021a0
  4023fe:	mov    rcx,QWORD PTR [rsp+0x50]
  402403:	call   0x4113b8
  402408:	mov    QWORD PTR [rsp+0x58],rax
  40240d:	add    rsi,QWORD PTR [rsp+0x58]
  402412:	mov    r12,rsi
  402415:	jmp    0x401a70
  40241a:	mov    rcx,QWORD PTR [rsp+0x50]
  40241f:	call   0x4113b8
  402424:	mov    BYTE PTR [rsp+0x60],0x0
  402429:	mov    QWORD PTR [rsp+0x58],rax
  40242e:	movzx  eax,WORD PTR [rsp+0x62]
  402433:	jmp    0x4021a0
  402438:	lea    rdx,[rip+0x11561]        # 0x4139a0
  40243f:	lea    rcx,[rip+0x11564]        # 0x4139aa
  402446:	mov    r8d,0x96
  40244c:	call   0x40ca90
  402451:	jmp    0x4022b0
  402456:	lea    rdx,[rip+0x11543]        # 0x4139a0
  40245d:	lea    rcx,[rip+0x1155d]        # 0x4139c1
  402464:	mov    r8d,0xb2
  40246a:	call   0x40ca90
  40246f:	cmp    WORD PTR [rsp+0x62],0x0
  402475:	je     0x40231c
  40247b:	lea    rdx,[rip+0x1151e]        # 0x4139a0
  402482:	lea    rcx,[rip+0x1154f]        # 0x4139d8
  402489:	mov    r8d,0xb3
  40248f:	call   0x40ca90
  402494:	jmp    0x40231c
  402499:	nop    DWORD PTR [rax+0x0]
  4024a0:	push   rdi
  4024a1:	push   rsi
  4024a2:	push   rbx
  4024a3:	sub    rsp,0x20
  4024a7:	mov    rsi,rcx
  4024aa:	call   0x40b010
  4024af:	cmp    rax,rsi
  4024b2:	mov    rbx,rax
  4024b5:	je     0x4024c6
  4024b7:	mov    rdx,rsi
  4024ba:	mov    rcx,rax
  4024bd:	call   0x401a20
  4024c2:	test   al,al
  4024c4:	je     0x4024d1
  4024c6:	mov    rax,rbx
  4024c9:	add    rsp,0x20
  4024cd:	pop    rbx
  4024ce:	pop    rsi
  4024cf:	pop    rdi
  4024d0:	ret    
  4024d1:	mov    rcx,rbx
  4024d4:	call   0x4113b8
  4024d9:	mov    rcx,rsi
  4024dc:	mov    rdi,rax
  4024df:	call   0x4113b8
  4024e4:	lea    rcx,[rdi+rax*1+0x4]
  4024e9:	call   0x402ed0
  4024ee:	lea    rdx,[rip+0x114f5]        # 0x4139ea
  4024f5:	mov    rdi,rax
  4024f8:	mov    r8,rbx
  4024fb:	mov    r9,rsi
  4024fe:	mov    rcx,rax
  402501:	mov    rbx,rdi
  402504:	call   0x40b008
  402509:	mov    rax,rbx
  40250c:	add    rsp,0x20
  402510:	pop    rbx
  402511:	pop    rsi
  402512:	pop    rdi
  402513:	ret    
  402514:	xchg   ax,ax
  402516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402520:	push   r14
  402522:	push   r13
  402524:	push   r12
  402526:	push   rbp
  402527:	push   rdi
  402528:	push   rsi
  402529:	push   rbx
  40252a:	sub    rsp,0x30
  40252e:	mov    rsi,rcx
  402531:	mov    rdi,rdx
  402534:	call   0x40b010
  402539:	mov    r12,rax
  40253c:	call   0x405960
  402541:	lea    rdx,[rip+0x114aa]        # 0x4139f2
  402548:	mov    rcx,rax
  40254b:	mov    rbx,rax
  40254e:	call   0x4058d0
  402553:	test   eax,eax
  402555:	jne    0x402590
  402557:	test   rdi,rdi
  40255a:	je     0x402770
  402560:	mov    r14,rdi
  402563:	mov    rbx,rdi
  402566:	xor    r13d,r13d
  402569:	xor    ebp,ebp
  40256b:	mov    rdx,rsi
  40256e:	mov    rcx,r12
  402571:	call   0x4113d0
  402576:	test   eax,eax
  402578:	jne    0x402671
  40257e:	mov    rax,rbx
  402581:	add    rsp,0x30
  402585:	pop    rbx
  402586:	pop    rsi
  402587:	pop    rdi
  402588:	pop    rbp
  402589:	pop    r12
  40258b:	pop    r13
  40258d:	pop    r14
  40258f:	ret    
  402590:	lea    rdx,[rip+0x1145b]        # 0x4139f2
  402597:	mov    r8,rbx
  40259a:	mov    rcx,rdi
  40259d:	call   0x403070
  4025a2:	mov    rcx,rbx
  4025a5:	mov    rbp,rax
  4025a8:	call   0x4113b8
  4025ad:	lea    rcx,[rax+0xb]
  4025b1:	mov    r13,rax
  4025b4:	call   0x402ed0
  4025b9:	mov    r8,r13
  4025bc:	mov    r14,rax
  4025bf:	mov    rdx,rbx
  4025c2:	mov    rcx,rax
  4025c5:	add    r13,r14
  4025c8:	call   0x411418
  4025cd:	movabs rax,0x4c534e4152542f2f
  4025d7:	lea    rdx,[rip+0x11414]        # 0x4139f2
  4025de:	mov    BYTE PTR [r13+0xa],0x0
  4025e3:	mov    QWORD PTR [r13+0x0],rax
  4025e7:	mov    eax,0x5449
  4025ec:	mov    r8,r14
  4025ef:	mov    WORD PTR [r13+0x8],ax
  4025f4:	mov    rcx,rdi
  4025f7:	call   0x403070
  4025fc:	mov    rcx,r14
  4025ff:	mov    r13,rax
  402602:	call   0x411468
  402607:	test   r13,r13
  40260a:	je     0x402780
  402610:	test   rbp,rbp
  402613:	je     0x402650
  402615:	mov    rdx,rsi
  402618:	mov    rcx,r12
  40261b:	mov    r14,r13
  40261e:	call   0x4113d0
  402623:	test   eax,eax
  402625:	mov    rdi,rbp
  402628:	mov    rbx,rbp
  40262b:	jne    0x402671
  40262d:	cmp    r13,rbp
  402630:	je     0x4027a0
  402636:	mov    rcx,r13
  402639:	call   0x411468
  40263e:	mov    rax,rbp
  402641:	add    rsp,0x30
  402645:	pop    rbx
  402646:	pop    rsi
  402647:	pop    rdi
  402648:	pop    rbp
  402649:	pop    r12
  40264b:	pop    r13
  40264d:	pop    r14
  40264f:	ret    
  402650:	mov    rdx,rsi
  402653:	mov    rcx,r12
  402656:	call   0x4113d0
  40265b:	test   eax,eax
  40265d:	jne    0x4026a0
  40265f:	mov    rax,r13
  402662:	add    rsp,0x30
  402666:	pop    rbx
  402667:	pop    rsi
  402668:	pop    rdi
  402669:	pop    rbp
  40266a:	pop    r12
  40266c:	pop    r13
  40266e:	pop    r14
  402670:	ret    
  402671:	mov    rdx,rsi
  402674:	mov    rcx,r12
  402677:	call   0x401a20
  40267c:	test   al,al
  40267e:	jne    0x4026d0
  402680:	test   rdi,rdi
  402683:	je     0x402694
  402685:	mov    rdx,rdi
  402688:	mov    rcx,r12
  40268b:	call   0x401a20
  402690:	test   al,al
  402692:	jne    0x4026d0
  402694:	mov    rsi,r13
  402697:	mov    r13,rbx
  40269a:	jmp    0x4026b5
  40269c:	nop    DWORD PTR [rax+0x0]
  4026a0:	mov    rdx,rsi
  4026a3:	mov    rcx,r12
  4026a6:	call   0x401a20
  4026ab:	test   al,al
  4026ad:	jne    0x4026e9
  4026af:	mov    rsi,r13
  4026b2:	mov    r14,r13
  4026b5:	test   r14,r14
  4026b8:	je     0x402703
  4026ba:	mov    rdx,r14
  4026bd:	mov    rcx,r12
  4026c0:	call   0x401a20
  4026c5:	test   al,al
  4026c7:	je     0x402703
  4026c9:	mov    r13,rsi
  4026cc:	nop    DWORD PTR [rax+0x0]
  4026d0:	test   rbp,rbp
  4026d3:	je     0x4026dd
  4026d5:	mov    rcx,rbp
  4026d8:	call   0x411468
  4026dd:	test   r13,r13
  4026e0:	mov    rax,r12
  4026e3:	je     0x402581
  4026e9:	mov    rcx,r13
  4026ec:	call   0x411468
  4026f1:	mov    rax,r12
  4026f4:	add    rsp,0x30
  4026f8:	pop    rbx
  4026f9:	pop    rsi
  4026fa:	pop    rdi
  4026fb:	pop    rbp
  4026fc:	pop    r12
  4026fe:	pop    r13
  402700:	pop    r14
  402702:	ret    
  402703:	mov    rcx,r12
  402706:	call   0x4113b8
  40270b:	mov    rcx,r13
  40270e:	mov    rbx,rax
  402711:	call   0x4113b8
  402716:	lea    rcx,[rbx+rax*1+0x4]
  40271b:	call   0x402ed0
  402720:	lea    rdx,[rip+0x112c3]        # 0x4139ea
  402727:	mov    r9,r13
  40272a:	mov    r8,r12
  40272d:	mov    rcx,rax
  402730:	mov    rbx,rax
  402733:	call   0x40b008
  402738:	test   rbp,rbp
  40273b:	je     0x402745
  40273d:	mov    rcx,rbp
  402740:	call   0x411468
  402745:	test   rsi,rsi
  402748:	mov    rax,rbx
  40274b:	je     0x402581
  402751:	mov    rcx,rsi
  402754:	mov    QWORD PTR [rsp+0x28],rbx
  402759:	call   0x411468
  40275e:	mov    rax,QWORD PTR [rsp+0x28]
  402763:	jmp    0x402581
  402768:	nop    DWORD PTR [rax+rax*1+0x0]
  402770:	xor    r14d,r14d
  402773:	xor    r13d,r13d
  402776:	xor    ebp,ebp
  402778:	mov    rbx,rsi
  40277b:	jmp    0x40256b
  402780:	xor    r14d,r14d
  402783:	test   rbp,rbp
  402786:	je     0x402793
  402788:	mov    rdi,rbp
  40278b:	mov    rbx,rbp
  40278e:	jmp    0x40256b
  402793:	xor    edi,edi
  402795:	mov    r13,rbp
  402798:	mov    rbx,rsi
  40279b:	jmp    0x40256b
  4027a0:	mov    rax,rbp
  4027a3:	jmp    0x402581
  4027a8:	nop
  4027a9:	nop
  4027aa:	nop
  4027ab:	nop
  4027ac:	nop
  4027ad:	nop
  4027ae:	nop
  4027af:	nop
  4027b0:	push   rsi
  4027b1:	push   rbx
  4027b2:	sub    rsp,0x28
  4027b6:	mov    r8,rdx
  4027b9:	mov    rsi,rdx
  4027bc:	xor    edx,edx
  4027be:	mov    rbx,rcx
  4027c1:	call   0x404650
  4027c6:	test   rax,rax
  4027c9:	je     0x4027e0
  4027cb:	sub    rax,rbx
  4027ce:	add    rax,0x1
  4027d2:	add    rsp,0x28
  4027d6:	pop    rbx
  4027d7:	pop    rsi
  4027d8:	ret    
  4027d9:	nop    DWORD PTR [rax+0x0]
  4027e0:	mov    rax,rsi
  4027e3:	add    rsp,0x28
  4027e7:	pop    rbx
  4027e8:	pop    rsi
  4027e9:	ret    
  4027ea:	nop
  4027eb:	nop
  4027ec:	nop
  4027ed:	nop
  4027ee:	nop
  4027ef:	nop
  4027f0:	push   r14
  4027f2:	push   r13
  4027f4:	push   r12
  4027f6:	push   rbp
  4027f7:	push   rdi
  4027f8:	push   rsi
  4027f9:	push   rbx
  4027fa:	sub    rsp,0x70
  4027fe:	mov    ebp,edx
  402800:	call   0x411378
  402805:	test   rax,rax
  402808:	mov    rsi,rax
  40280b:	je     0x402e5e
  402811:	mov    rax,QWORD PTR [rip+0x15e68]        # 0x418680
  402818:	mov    rax,QWORD PTR [rax]
  40281b:	cmp    DWORD PTR [rax],0x1
  40281e:	jle    0x402c50
  402824:	test   ebp,ebp
  402826:	je     0x4029d8
  40282c:	mov    QWORD PTR [rsp+0x38],rsi
  402831:	mov    rdx,rsi
  402834:	mov    ecx,DWORD PTR [rdx]
  402836:	add    rdx,0x4
  40283a:	lea    eax,[rcx-0x1010101]
  402840:	not    ecx
  402842:	and    eax,ecx
  402844:	and    eax,0x80808080
  402849:	je     0x402834
  40284b:	mov    ecx,eax
  40284d:	mov    BYTE PTR [rsp+0x28],0x0
  402852:	mov    DWORD PTR [rsp+0x2c],0x0
  40285a:	shr    ecx,0x10
  40285d:	test   eax,0x8080
  402862:	mov    BYTE PTR [rsp+0x30],0x0
  402867:	cmove  eax,ecx
  40286a:	lea    rcx,[rdx+0x2]
  40286e:	mov    rbx,rsi
  402871:	cmove  rdx,rcx
  402875:	add    al,al
  402877:	sbb    rdx,0x3
  40287b:	cmp    rsi,rdx
  40287e:	mov    QWORD PTR [rsp+0x20],rdx
  402883:	jae    0x4029b8
  402889:	lea    rdi,[rsp+0x20]
  40288e:	mov    r13,QWORD PTR [rip+0x15f2b]        # 0x4187c0
  402895:	lea    r14,[rdi+0xc]
  402899:	jmp    0x40290e
  40289b:	nop    DWORD PTR [rax+rax*1+0x0]
  4028a0:	movzx  eax,BYTE PTR [rbx]
  4028a3:	mov    edx,eax
  4028a5:	and    eax,0x1f
  4028a8:	shr    dl,0x5
  4028ab:	and    edx,0x7
  4028ae:	mov    edx,DWORD PTR [r13+rdx*4+0x0]
  4028b3:	bt     edx,eax
  4028b6:	jae    0x402d60
  4028bc:	mov    QWORD PTR [rsp+0x40],0x1
  4028c5:	movsx  ax,BYTE PTR [rbx]
  4028c9:	mov    BYTE PTR [rsp+0x48],0x1
  4028ce:	mov    BYTE PTR [rsp+0x30],0x1
  4028d3:	mov    WORD PTR [rsp+0x4a],ax
  4028d8:	movzx  ecx,WORD PTR [rsp+0x4a]
  4028dd:	mov    edx,0x8
  4028e2:	call   0x411438
  4028e7:	test   eax,eax
  4028e9:	je     0x4029b3
  4028ef:	mov    rbx,QWORD PTR [rsp+0x40]
  4028f4:	add    rbx,QWORD PTR [rsp+0x38]
  4028f9:	cmp    QWORD PTR [rsp+0x20],rbx
  4028fe:	mov    BYTE PTR [rsp+0x30],0x0
  402903:	mov    QWORD PTR [rsp+0x38],rbx
  402908:	jbe    0x4029b8
  40290e:	cmp    BYTE PTR [rsp+0x28],0x0
  402913:	je     0x4028a0
  402915:	mov    rdx,QWORD PTR [rsp+0x38]
  40291a:	mov    r8,QWORD PTR [rsp+0x20]
  40291f:	lea    rcx,[rdi+0x2a]
  402923:	lea    r9,[rdi+0xc]
  402927:	sub    r8,rdx
  40292a:	call   0x404520
  40292f:	cmp    rax,0xffffffffffffffff
  402933:	mov    QWORD PTR [rsp+0x40],rax
  402938:	je     0x4029a0
  40293a:	cmp    rax,0xfffffffffffffffe
  40293e:	je     0x402d80
  402944:	test   rax,rax
  402947:	jne    0x40296c
  402949:	mov    rax,QWORD PTR [rsp+0x38]
  40294e:	mov    QWORD PTR [rsp+0x40],0x1
  402957:	cmp    BYTE PTR [rax],0x0
  40295a:	jne    0x402e40
  402960:	cmp    WORD PTR [rsp+0x4a],0x0
  402966:	jne    0x402e20
  40296c:	lea    rcx,[rdi+0xc]
  402970:	mov    BYTE PTR [rsp+0x48],0x1
  402975:	call   0x404630
  40297a:	test   eax,eax
  40297c:	je     0x402983
  40297e:	mov    BYTE PTR [rsp+0x28],0x0
  402983:	movzx  eax,BYTE PTR [rsp+0x48]
  402988:	mov    BYTE PTR [rsp+0x30],0x1
  40298d:	test   al,al
  40298f:	jne    0x4028d8
  402995:	jmp    0x4029b3
  402997:	nop    WORD PTR [rax+rax*1+0x0]
  4029a0:	mov    QWORD PTR [rsp+0x40],0x1
  4029a9:	mov    BYTE PTR [rsp+0x48],0x0
  4029ae:	mov    BYTE PTR [rsp+0x30],0x1
  4029b3:	mov    rbx,QWORD PTR [rsp+0x38]
  4029b8:	mov    rcx,rbx
  4029bb:	call   0x4113b8
  4029c0:	lea    r8,[rax+0x1]
  4029c4:	mov    rdx,rbx
  4029c7:	mov    rcx,rsi
  4029ca:	call   0x411410
  4029cf:	cmp    ebp,0x1
  4029d2:	je     0x402b9a
  4029d8:	mov    QWORD PTR [rsp+0x38],rsi
  4029dd:	mov    rdx,rsi
  4029e0:	mov    ecx,DWORD PTR [rdx]
  4029e2:	add    rdx,0x4
  4029e6:	lea    eax,[rcx-0x1010101]
  4029ec:	not    ecx
  4029ee:	and    eax,ecx
  4029f0:	and    eax,0x80808080
  4029f5:	je     0x4029e0
  4029f7:	mov    ecx,eax
  4029f9:	mov    BYTE PTR [rsp+0x28],0x0
  4029fe:	mov    DWORD PTR [rsp+0x2c],0x0
  402a06:	shr    ecx,0x10
  402a09:	test   eax,0x8080
  402a0e:	mov    BYTE PTR [rsp+0x30],0x0
  402a13:	cmove  eax,ecx
  402a16:	lea    rcx,[rdx+0x2]
  402a1a:	cmove  rdx,rcx
  402a1e:	add    al,al
  402a20:	mov    rax,rdx
  402a23:	mov    rdx,rsi
  402a26:	sbb    rax,0x3
  402a2a:	xor    ebx,ebx
  402a2c:	cmp    rsi,rax
  402a2f:	mov    QWORD PTR [rsp+0x20],rax
  402a34:	jae    0x402b9a
  402a3a:	lea    rdi,[rsp+0x20]
  402a3f:	mov    rbp,QWORD PTR [rip+0x15d7a]        # 0x4187c0
  402a46:	lea    r13,[rdi+0xc]
  402a4a:	jmp    0x402abe
  402a4c:	nop    DWORD PTR [rax+0x0]
  402a50:	movzx  eax,BYTE PTR [rdx]
  402a53:	mov    ecx,eax
  402a55:	and    eax,0x1f
  402a58:	shr    cl,0x5
  402a5b:	and    ecx,0x7
  402a5e:	mov    ecx,DWORD PTR [rbp+rcx*4+0x0]
  402a62:	bt     ecx,eax
  402a65:	jae    0x402c01
  402a6b:	mov    QWORD PTR [rsp+0x40],0x1
  402a74:	movsx  ax,BYTE PTR [rdx]
  402a78:	mov    BYTE PTR [rsp+0x48],0x1
  402a7d:	mov    WORD PTR [rsp+0x4a],ax
  402a82:	test   ebx,ebx
  402a84:	mov    BYTE PTR [rsp+0x30],0x1
  402a89:	jne    0x402b50
  402a8f:	cmp    BYTE PTR [rsp+0x48],0x0
  402a94:	jne    0x402bc5
  402a9a:	mov    rdx,QWORD PTR [rsp+0x38]
  402a9f:	mov    ebx,0x1
  402aa4:	add    rdx,QWORD PTR [rsp+0x40]
  402aa9:	mov    BYTE PTR [rsp+0x30],0x0
  402aae:	cmp    QWORD PTR [rsp+0x20],rdx
  402ab3:	mov    QWORD PTR [rsp+0x38],rdx
  402ab8:	jbe    0x402b90
  402abe:	cmp    BYTE PTR [rsp+0x28],0x0
  402ac3:	je     0x402a50
  402ac5:	mov    rdx,QWORD PTR [rsp+0x38]
  402aca:	mov    r8,QWORD PTR [rsp+0x20]
  402acf:	lea    rcx,[rdi+0x2a]
  402ad3:	lea    r9,[rdi+0xc]
  402ad7:	sub    r8,rdx
  402ada:	call   0x404520
  402adf:	cmp    rax,0xffffffffffffffff
  402ae3:	mov    QWORD PTR [rsp+0x40],rax
  402ae8:	je     0x402c20
  402aee:	cmp    rax,0xfffffffffffffffe
  402af2:	je     0x402c33
  402af8:	test   rax,rax
  402afb:	jne    0x402b20
  402afd:	mov    rax,QWORD PTR [rsp+0x38]
  402b02:	mov    QWORD PTR [rsp+0x40],0x1
  402b0b:	cmp    BYTE PTR [rax],0x0
  402b0e:	jne    0x402e00
  402b14:	cmp    WORD PTR [rsp+0x4a],0x0
  402b1a:	jne    0x402de0
  402b20:	lea    rcx,[rdi+0xc]
  402b24:	mov    BYTE PTR [rsp+0x48],0x1
  402b29:	call   0x404630
  402b2e:	test   eax,eax
  402b30:	je     0x402a82
  402b36:	test   ebx,ebx
  402b38:	mov    BYTE PTR [rsp+0x28],0x0
  402b3d:	mov    BYTE PTR [rsp+0x30],0x1
  402b42:	je     0x402a8f
  402b48:	nop    DWORD PTR [rax+rax*1+0x0]
  402b50:	cmp    ebx,0x1
  402b53:	je     0x402bb0
  402b55:	cmp    ebx,0x2
  402b58:	jne    0x402a9a
  402b5e:	cmp    BYTE PTR [rsp+0x48],0x0
  402b63:	je     0x402a9a
  402b69:	movzx  ecx,WORD PTR [rsp+0x4a]
  402b6e:	mov    edx,0x8
  402b73:	call   0x411438
  402b78:	test   eax,eax
  402b7a:	mov    rdx,QWORD PTR [rsp+0x38]
  402b7f:	jne    0x402aa4
  402b85:	mov    ebx,0x1
  402b8a:	jmp    0x402aa4
  402b8f:	nop
  402b90:	cmp    ebx,0x2
  402b93:	jne    0x402b9a
  402b95:	mov    BYTE PTR [r12],0x0
  402b9a:	mov    rax,rsi
  402b9d:	add    rsp,0x70
  402ba1:	pop    rbx
  402ba2:	pop    rsi
  402ba3:	pop    rdi
  402ba4:	pop    rbp
  402ba5:	pop    r12
  402ba7:	pop    r13
  402ba9:	pop    r14
  402bab:	ret    
  402bac:	nop    DWORD PTR [rax+0x0]
  402bb0:	cmp    BYTE PTR [rsp+0x48],0x0
  402bb5:	jne    0x402d10
  402bbb:	mov    rdx,QWORD PTR [rsp+0x38]
  402bc0:	jmp    0x402aa4
  402bc5:	movzx  ecx,WORD PTR [rsp+0x4a]
  402bca:	mov    edx,0x8
  402bcf:	call   0x411438
  402bd4:	test   eax,eax
  402bd6:	jne    0x402bbb
  402bd8:	cmp    BYTE PTR [rsp+0x48],0x0
  402bdd:	je     0x402a9a
  402be3:	movzx  ecx,WORD PTR [rsp+0x4a]
  402be8:	mov    edx,0x8
  402bed:	mov    ebx,0x1
  402bf2:	call   0x411438
  402bf7:	mov    rdx,QWORD PTR [rsp+0x38]
  402bfc:	jmp    0x402aa4
  402c01:	mov    rcx,r13
  402c04:	call   0x404630
  402c09:	test   eax,eax
  402c0b:	je     0x402da0
  402c11:	mov    BYTE PTR [rsp+0x28],0x1
  402c16:	jmp    0x402ac5
  402c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c20:	mov    QWORD PTR [rsp+0x40],0x1
  402c29:	mov    BYTE PTR [rsp+0x48],0x0
  402c2e:	jmp    0x402a82
  402c33:	mov    rax,QWORD PTR [rsp+0x20]
  402c38:	sub    rax,QWORD PTR [rsp+0x38]
  402c3d:	mov    BYTE PTR [rsp+0x48],0x0
  402c42:	mov    QWORD PTR [rsp+0x40],rax
  402c47:	jmp    0x402a82
  402c4c:	nop    DWORD PTR [rax+0x0]
  402c50:	test   ebp,ebp
  402c52:	je     0x402ca4
  402c54:	movzx  eax,BYTE PTR [rsi]
  402c57:	mov    rbx,rsi
  402c5a:	mov    rdi,QWORD PTR [rip+0x1ca67]        # 0x41f6c8
  402c61:	test   al,al
  402c63:	jne    0x402c7b
  402c65:	jmp    0x402c84
  402c67:	nop    WORD PTR [rax+rax*1+0x0]
  402c70:	add    rbx,0x1
  402c74:	movzx  eax,BYTE PTR [rbx]
  402c77:	test   al,al
  402c79:	je     0x402c84
  402c7b:	movzx  ecx,al
  402c7e:	call   rdi
  402c80:	test   eax,eax
  402c82:	jne    0x402c70
  402c84:	mov    rcx,rbx
  402c87:	call   0x4113b8
  402c8c:	lea    r8,[rax+0x1]
  402c90:	mov    rdx,rbx
  402c93:	mov    rcx,rsi
  402c96:	call   0x411410
  402c9b:	cmp    ebp,0x1
  402c9e:	je     0x402b9a
  402ca4:	mov    rdx,rsi
  402ca7:	mov    ecx,DWORD PTR [rdx]
  402ca9:	add    rdx,0x4
  402cad:	lea    eax,[rcx-0x1010101]
  402cb3:	not    ecx
  402cb5:	and    eax,ecx
  402cb7:	and    eax,0x80808080
  402cbc:	je     0x402ca7
  402cbe:	mov    ecx,eax
  402cc0:	mov    rdi,QWORD PTR [rip+0x1ca01]        # 0x41f6c8
  402cc7:	shr    ecx,0x10
  402cca:	test   eax,0x8080
  402ccf:	cmove  eax,ecx
  402cd2:	lea    rcx,[rdx+0x2]
  402cd6:	cmove  rdx,rcx
  402cda:	add    al,al
  402cdc:	sbb    rdx,0x3
  402ce0:	lea    rbx,[rdx-0x1]
  402ce4:	cmp    rsi,rbx
  402ce7:	jbe    0x402d00
  402ce9:	jmp    0x402b9a
  402cee:	xchg   ax,ax
  402cf0:	mov    BYTE PTR [rbx],0x0
  402cf3:	sub    rbx,0x1
  402cf7:	cmp    rsi,rbx
  402cfa:	ja     0x402b9a
  402d00:	movzx  ecx,BYTE PTR [rbx]
  402d03:	call   rdi
  402d05:	test   eax,eax
  402d07:	jne    0x402cf0
  402d09:	jmp    0x402b9a
  402d0e:	xchg   ax,ax
  402d10:	movzx  ecx,WORD PTR [rsp+0x4a]
  402d15:	mov    edx,0x8
  402d1a:	call   0x411438
  402d1f:	test   eax,eax
  402d21:	je     0x402bbb
  402d27:	cmp    BYTE PTR [rsp+0x48],0x0
  402d2c:	je     0x402bbb
  402d32:	movzx  ecx,WORD PTR [rsp+0x4a]
  402d37:	mov    edx,0x8
  402d3c:	call   0x411438
  402d41:	test   eax,eax
  402d43:	je     0x402bbb
  402d49:	mov    r12,QWORD PTR [rsp+0x38]
  402d4e:	mov    ebx,0x2
  402d53:	mov    rdx,r12
  402d56:	jmp    0x402aa4
  402d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d60:	mov    rcx,r14
  402d63:	call   0x404630
  402d68:	test   eax,eax
  402d6a:	je     0x402dc0
  402d6c:	mov    BYTE PTR [rsp+0x28],0x1
  402d71:	jmp    0x402915
  402d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d80:	mov    rax,QWORD PTR [rsp+0x20]
  402d85:	sub    rax,QWORD PTR [rsp+0x38]
  402d8a:	mov    BYTE PTR [rsp+0x48],0x0
  402d8f:	mov    QWORD PTR [rsp+0x40],rax
  402d94:	jmp    0x4029ae
  402d99:	nop    DWORD PTR [rax+0x0]
  402da0:	lea    rdx,[rip+0x10c59]        # 0x413a00
  402da7:	lea    rcx,[rip+0x10c5b]        # 0x413a09
  402dae:	mov    r8d,0x8e
  402db4:	call   0x40ca90
  402db9:	jmp    0x402c11
  402dbe:	xchg   ax,ax
  402dc0:	lea    rdx,[rip+0x10c39]        # 0x413a00
  402dc7:	lea    rcx,[rip+0x10c3b]        # 0x413a09
  402dce:	mov    r8d,0x8e
  402dd4:	call   0x40ca90
  402dd9:	jmp    0x402d6c
  402ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  402de0:	lea    rdx,[rip+0x10c19]        # 0x413a00
  402de7:	lea    rcx,[rip+0x10c49]        # 0x413a37
  402dee:	mov    r8d,0xaa
  402df4:	call   0x40ca90
  402df9:	jmp    0x402b20
  402dfe:	xchg   ax,ax
  402e00:	lea    rdx,[rip+0x10bf9]        # 0x413a00
  402e07:	lea    rcx,[rip+0x10c12]        # 0x413a20
  402e0e:	mov    r8d,0xa9
  402e14:	call   0x40ca90
  402e19:	jmp    0x402b14
  402e1e:	xchg   ax,ax
  402e20:	lea    rdx,[rip+0x10bd9]        # 0x413a00
  402e27:	lea    rcx,[rip+0x10c09]        # 0x413a37
  402e2e:	mov    r8d,0xaa
  402e34:	call   0x40ca90
  402e39:	jmp    0x40296c
  402e3e:	xchg   ax,ax
  402e40:	lea    rdx,[rip+0x10bb9]        # 0x413a00
  402e47:	lea    rcx,[rip+0x10bd2]        # 0x413a20
  402e4e:	mov    r8d,0xa9
  402e54:	call   0x40ca90
  402e59:	jmp    0x402960
  402e5e:	call   0x402e70
  402e63:	nop
  402e64:	nop
  402e65:	nop
  402e66:	nop
  402e67:	nop
  402e68:	nop
  402e69:	nop
  402e6a:	nop
  402e6b:	nop
  402e6c:	nop
  402e6d:	nop
  402e6e:	nop
  402e6f:	nop
  402e70:	sub    rsp,0x28
  402e74:	lea    rcx,[rip+0x10bd5]        # 0x413a50
  402e7b:	call   0x40b010
  402e80:	mov    ecx,DWORD PTR [rip+0xf18a]        # 0x412010
  402e86:	mov    r8,rax
  402e89:	xor    edx,edx
  402e8b:	call   0x4031c0
  402e90:	mov    ecx,0x1
  402e95:	call   0x4114a0
  402e9a:	nop
  402e9b:	nop    DWORD PTR [rax+rax*1+0x0]
  402ea0:	sub    rsp,0x28
  402ea4:	test   rcx,rcx
  402ea7:	jne    0x402ec0
  402ea9:	mov    ecx,0x1
  402eae:	call   0x411428
  402eb3:	test   rax,rax
  402eb6:	je     0x402ec0
  402eb8:	add    rsp,0x28
  402ebc:	ret    
  402ebd:	nop    DWORD PTR [rax]
  402ec0:	call   0x402e70
  402ec5:	nop
  402ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ed0:	push   rbx
  402ed1:	sub    rsp,0x20
  402ed5:	mov    rbx,rcx
  402ed8:	call   0x411428
  402edd:	test   rax,rax
  402ee0:	je     0x402ef0
  402ee2:	add    rsp,0x20
  402ee6:	pop    rbx
  402ee7:	ret    
  402ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ef0:	mov    rcx,rbx
  402ef3:	add    rsp,0x20
  402ef7:	pop    rbx
  402ef8:	jmp    0x402ea0
  402efa:	nop    WORD PTR [rax+rax*1+0x0]
  402f00:	push   rbx
  402f01:	sub    rsp,0x20
  402f05:	mov    rax,0xffffffffffffffff
  402f0c:	mov    rbx,rdx
  402f0f:	xor    edx,edx
  402f11:	div    rbx
  402f14:	cmp    rax,rcx
  402f17:	jb     0x402f3d
  402f19:	imul   rbx,rcx
  402f1d:	mov    rcx,rbx
  402f20:	call   0x411428
  402f25:	test   rax,rax
  402f28:	je     0x402f30
  402f2a:	add    rsp,0x20
  402f2e:	pop    rbx
  402f2f:	ret    
  402f30:	mov    rcx,rbx
  402f33:	add    rsp,0x20
  402f37:	pop    rbx
  402f38:	jmp    0x402ea0
  402f3d:	call   0x402e70
  402f42:	nop
  402f43:	nop    DWORD PTR [rax]
  402f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f50:	push   rsi
  402f51:	push   rbx
  402f52:	sub    rsp,0x28
  402f56:	mov    rsi,rcx
  402f59:	call   0x402ed0
  402f5e:	mov    r8,rsi
  402f61:	mov    rbx,rax
  402f64:	xor    edx,edx
  402f66:	mov    rcx,rax
  402f69:	call   0x411408
  402f6e:	mov    rax,rbx
  402f71:	add    rsp,0x28
  402f75:	pop    rbx
  402f76:	pop    rsi
  402f77:	ret    
  402f78:	nop    DWORD PTR [rax+rax*1+0x0]
  402f80:	push   rbx
  402f81:	sub    rsp,0x20
  402f85:	mov    rbx,rcx
  402f88:	call   0x4114a8
  402f8d:	test   rax,rax
  402f90:	je     0x402fa0
  402f92:	add    rsp,0x20
  402f96:	pop    rbx
  402f97:	ret    
  402f98:	nop    DWORD PTR [rax+rax*1+0x0]
  402fa0:	mov    rcx,rbx
  402fa3:	add    rsp,0x20
  402fa7:	pop    rbx
  402fa8:	jmp    0x402ea0
  402fad:	nop    DWORD PTR [rax]
  402fb0:	push   rbx
  402fb1:	sub    rsp,0x20
  402fb5:	test   rcx,rcx
  402fb8:	je     0x402fd0
  402fba:	mov    rbx,rdx
  402fbd:	call   0x4113f0
  402fc2:	test   rax,rax
  402fc5:	je     0x402fe0
  402fc7:	add    rsp,0x20
  402fcb:	pop    rbx
  402fcc:	ret    
  402fcd:	nop    DWORD PTR [rax]
  402fd0:	mov    rcx,rdx
  402fd3:	add    rsp,0x20
  402fd7:	pop    rbx
  402fd8:	jmp    0x402ed0
  402fdd:	nop    DWORD PTR [rax]
  402fe0:	mov    rcx,rbx
  402fe3:	add    rsp,0x20
  402fe7:	pop    rbx
  402fe8:	jmp    0x402ea0
  402fed:	nop
  402fee:	nop
  402fef:	nop
  402ff0:	push   rbx
  402ff1:	sub    rsp,0x30
  402ff5:	mov    rax,QWORD PTR [rsp+0x60]
  402ffa:	mov    QWORD PTR [rsp+0x20],rax
  402fff:	call   0x409d20
  403004:	test   eax,eax
  403006:	mov    ebx,eax
  403008:	js     0x403012
  40300a:	mov    eax,ebx
  40300c:	add    rsp,0x30
  403010:	pop    rbx
  403011:	ret    
  403012:	call   QWORD PTR [rip+0x1c5f8]        # 0x41f610
  403018:	cmp    DWORD PTR [rax],0xc
  40301b:	jne    0x40300a
  40301d:	call   0x402e70
  403022:	nop
  403023:	nop    DWORD PTR [rax]
  403026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403030:	push   rbx
  403031:	sub    rsp,0x20
  403035:	call   0x409fb0
  40303a:	test   rax,rax
  40303d:	mov    rbx,rax
  403040:	je     0x403050
  403042:	mov    rax,rbx
  403045:	add    rsp,0x20
  403049:	pop    rbx
  40304a:	ret    
  40304b:	nop    DWORD PTR [rax+rax*1+0x0]
  403050:	call   QWORD PTR [rip+0x1c5ba]        # 0x41f610
  403056:	cmp    DWORD PTR [rax],0xc
  403059:	jne    0x403042
  40305b:	call   0x402e70
  403060:	nop
  403061:	nop    DWORD PTR [rax+rax*1+0x0]
  403066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403070:	push   rbx
  403071:	sub    rsp,0x20
  403075:	call   0x40a1b0
  40307a:	test   rax,rax
  40307d:	mov    rbx,rax
  403080:	je     0x403090
  403082:	mov    rax,rbx
  403085:	add    rsp,0x20
  403089:	pop    rbx
  40308a:	ret    
  40308b:	nop    DWORD PTR [rax+rax*1+0x0]
  403090:	call   QWORD PTR [rip+0x1c57a]        # 0x41f610
  403096:	cmp    DWORD PTR [rax],0xc
  403099:	jne    0x403082
  40309b:	call   0x402e70
  4030a0:	nop
  4030a1:	nop
  4030a2:	nop
  4030a3:	nop
  4030a4:	nop
  4030a5:	nop
  4030a6:	nop
  4030a7:	nop
  4030a8:	nop
  4030a9:	nop
  4030aa:	nop
  4030ab:	nop
  4030ac:	nop
  4030ad:	nop
  4030ae:	nop
  4030af:	nop
  4030b0:	push   r12
  4030b2:	push   rbp
  4030b3:	push   rdi
  4030b4:	push   rsi
  4030b5:	push   rbx
  4030b6:	sub    rsp,0x20
  4030ba:	mov    rbx,QWORD PTR [rip+0x1c50f]        # 0x41f5d0
  4030c1:	mov    edi,edx
  4030c3:	mov    rbp,r8
  4030c6:	mov    r12,r9
  4030c9:	mov    esi,ecx
  4030cb:	mov    QWORD PTR [rsp+0x68],r9
  4030d0:	call   rbx
  4030d2:	lea    rcx,[rax+0x60]
  4030d6:	mov    r8,r12
  4030d9:	mov    rdx,rbp
  4030dc:	call   0x404f70
  4030e1:	add    DWORD PTR [rip+0x1b608],0x1        # 0x41e6f0
  4030e8:	test   edi,edi
  4030ea:	jne    0x403120
  4030ec:	call   rbx
  4030ee:	lea    rdx,[rax+0x60]
  4030f2:	mov    ecx,0xa
  4030f7:	call   0x4050c0
  4030fc:	call   rbx
  4030fe:	lea    rcx,[rax+0x60]
  403102:	call   0x411488
  403107:	test   esi,esi
  403109:	jne    0x403161
  40310b:	add    rsp,0x20
  40310f:	pop    rbx
  403110:	pop    rsi
  403111:	pop    rdi
  403112:	pop    rbp
  403113:	pop    r12
  403115:	ret    
  403116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403120:	mov    ecx,edi
  403122:	call   0x4053f0
  403127:	test   rax,rax
  40312a:	mov    rdi,rax
  40312d:	je     0x403150
  40312f:	call   rbx
  403131:	lea    rdx,[rip+0x1094d]        # 0x413a85
  403138:	lea    rcx,[rax+0x60]
  40313c:	mov    r8,rdi
  40313f:	call   0x405060
  403144:	jmp    0x4030ec
  403146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403150:	lea    rcx,[rip+0x10919]        # 0x413a70
  403157:	call   0x40b010
  40315c:	mov    rdi,rax
  40315f:	jmp    0x40312f
  403161:	mov    ecx,esi
  403163:	call   0x4114a0
  403168:	nop
  403169:	nop    DWORD PTR [rax+0x0]
  403170:	push   rbx
  403171:	sub    rsp,0x20
  403175:	mov    rbx,QWORD PTR [rip+0x1c454]        # 0x41f5d0
  40317c:	call   rbx
  40317e:	lea    rcx,[rax+0x30]
  403182:	call   0x411370
  403187:	test   eax,eax
  403189:	js     0x4031b0
  40318b:	mov    ecx,eax
  40318d:	call   0x404700
  403192:	cmp    rax,0xffffffffffffffff
  403196:	je     0x4031b0
  403198:	call   rbx
  40319a:	lea    rcx,[rax+0x30]
  40319e:	add    rsp,0x20
  4031a2:	pop    rbx
  4031a3:	jmp    0x411488
  4031a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4031b0:	add    rsp,0x20
  4031b4:	pop    rbx
  4031b5:	ret    
  4031b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031c0:	push   rbp
  4031c1:	push   rdi
  4031c2:	push   rsi
  4031c3:	push   rbx
  4031c4:	sub    rsp,0x38
  4031c8:	mov    ebx,ecx
  4031ca:	mov    esi,edx
  4031cc:	mov    QWORD PTR [rsp+0x78],r9
  4031d1:	mov    rdi,r8
  4031d4:	call   0x403170
  4031d9:	mov    rax,QWORD PTR [rip+0x1b518]        # 0x41e6f8
  4031e0:	test   rax,rax
  4031e3:	je     0x403210
  4031e5:	call   rax
  4031e7:	lea    r9,[rsp+0x78]
  4031ec:	mov    r8,rdi
  4031ef:	mov    edx,esi
  4031f1:	mov    ecx,ebx
  4031f3:	mov    QWORD PTR [rsp+0x28],r9
  4031f8:	call   0x4030b0
  4031fd:	nop
  4031fe:	add    rsp,0x38
  403202:	pop    rbx
  403203:	pop    rsi
  403204:	pop    rdi
  403205:	pop    rbp
  403206:	ret    
  403207:	nop    WORD PTR [rax+rax*1+0x0]
  403210:	mov    rax,QWORD PTR [rip+0x15609]        # 0x418820
  403217:	mov    rbp,QWORD PTR [rax]
  40321a:	call   QWORD PTR [rip+0x1c3b0]        # 0x41f5d0
  403220:	lea    rdx,[rip+0x10863]        # 0x413a8a
  403227:	lea    rcx,[rax+0x60]
  40322b:	mov    r8,rbp
  40322e:	call   0x405060
  403233:	jmp    0x4031e7
  403235:	nop
  403236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403240:	push   r13
  403242:	push   r12
  403244:	push   rbp
  403245:	push   rdi
  403246:	push   rsi
  403247:	push   rbx
  403248:	sub    rsp,0x38
  40324c:	mov    eax,DWORD PTR [rip+0x1b4ae]        # 0x41e700
  403252:	mov    ebp,ecx
  403254:	mov    r12d,edx
  403257:	mov    rbx,r8
  40325a:	mov    edi,r9d
  40325d:	test   eax,eax
  40325f:	je     0x40327b
  403261:	cmp    DWORD PTR [rip+0x18e00],r9d        # 0x41c068
  403268:	je     0x4032f0
  40326e:	mov    QWORD PTR [rip+0x18deb],rbx        # 0x41c060
  403275:	mov    DWORD PTR [rip+0x18ded],edi        # 0x41c068
  40327b:	call   0x403170
  403280:	mov    rax,QWORD PTR [rip+0x1b471]        # 0x41e6f8
  403287:	test   rax,rax
  40328a:	je     0x403320
  403290:	call   rax
  403292:	mov    r13,QWORD PTR [rip+0x1c337]        # 0x41f5d0
  403299:	lea    rax,[rip+0x107ef]        # 0x413a8f
  4032a0:	lea    rsi,[rip+0x107f0]        # 0x413a97
  4032a7:	test   rbx,rbx
  4032aa:	cmovne rsi,rax
  4032ae:	call   r13
  4032b1:	lea    rcx,[rax+0x60]
  4032b5:	mov    r9d,edi
  4032b8:	mov    r8,rbx
  4032bb:	mov    rdx,rsi
  4032be:	call   0x405060
  4032c3:	mov    r8,QWORD PTR [rsp+0x90]
  4032cb:	lea    r9,[rsp+0x98]
  4032d3:	mov    edx,r12d
  4032d6:	mov    ecx,ebp
  4032d8:	mov    QWORD PTR [rsp+0x28],r9
  4032dd:	call   0x4030b0
  4032e2:	nop
  4032e3:	add    rsp,0x38
  4032e7:	pop    rbx
  4032e8:	pop    rsi
  4032e9:	pop    rdi
  4032ea:	pop    rbp
  4032eb:	pop    r12
  4032ed:	pop    r13
  4032ef:	ret    
  4032f0:	mov    rcx,QWORD PTR [rip+0x18d69]        # 0x41c060
  4032f7:	cmp    r8,rcx
  4032fa:	je     0x4032e3
  4032fc:	test   r8,r8
  4032ff:	je     0x40326e
  403305:	test   rcx,rcx
  403308:	je     0x40326e
  40330e:	mov    rdx,r8
  403311:	call   0x4113d0
  403316:	test   eax,eax
  403318:	je     0x4032e3
  40331a:	jmp    0x40326e
  40331f:	nop
  403320:	mov    rax,QWORD PTR [rip+0x154f9]        # 0x418820
  403327:	mov    r13,QWORD PTR [rip+0x1c2a2]        # 0x41f5d0
  40332e:	mov    rsi,QWORD PTR [rax]
  403331:	call   r13
  403334:	lea    rdx,[rip+0x1075e]        # 0x413a99
  40333b:	lea    rcx,[rax+0x60]
  40333f:	mov    r8,rsi
  403342:	call   0x405060
  403347:	jmp    0x403299
  40334c:	nop
  40334d:	nop
  40334e:	nop
  40334f:	nop
  403350:	push   r14
  403352:	push   r13
  403354:	push   r12
  403356:	push   rbp
  403357:	push   rdi
  403358:	push   rsi
  403359:	push   rbx
  40335a:	movsxd rax,DWORD PTR [rdx+0x34]
  40335e:	mov    r12d,DWORD PTR [rdx+0x30]
  403362:	mov    ebp,DWORD PTR [rdx]
  403364:	mov    esi,r12d
  403367:	lea    r10,[rcx+rax*8]
  40336b:	mov    rbx,rax
  40336e:	mov    edi,ebp
  403370:	cmp    ebx,esi
  403372:	jle    0x4033c0
  403374:	cmp    edi,ebx
  403376:	jle    0x4033c0
  403378:	mov    r13d,edi
  40337b:	mov    r14d,ebx
  40337e:	sub    r13d,ebx
  403381:	sub    r14d,esi
  403384:	cmp    r13d,r14d
  403387:	jg     0x4033e0
  403389:	test   r13d,r13d
  40338c:	jle    0x4033b9
  40338e:	movsxd rax,esi
  403391:	lea    r8,[rcx+rax*8]
  403395:	xor    eax,eax
  403397:	nop    WORD PTR [rax+rax*1+0x0]
  4033a0:	mov    r9,QWORD PTR [r8+rax*8]
  4033a4:	mov    r11,QWORD PTR [r10+rax*8]
  4033a8:	mov    QWORD PTR [r8+rax*8],r11
  4033ac:	mov    QWORD PTR [r10+rax*8],r9
  4033b0:	add    rax,0x1
  4033b4:	cmp    r13d,eax
  4033b7:	jg     0x4033a0
  4033b9:	add    esi,r13d
  4033bc:	cmp    ebx,esi
  4033be:	jg     0x403374
  4033c0:	mov    eax,ebp
  4033c2:	mov    DWORD PTR [rdx+0x34],ebp
  4033c5:	sub    eax,ebx
  4033c7:	add    r12d,eax
  4033ca:	mov    DWORD PTR [rdx+0x30],r12d
  4033ce:	pop    rbx
  4033cf:	pop    rsi
  4033d0:	pop    rdi
  4033d1:	pop    rbp
  4033d2:	pop    r12
  4033d4:	pop    r13
  4033d6:	pop    r14
  4033d8:	ret    
  4033d9:	nop    DWORD PTR [rax+0x0]
  4033e0:	test   r14d,r14d
  4033e3:	jle    0x403419
  4033e5:	movsxd rax,esi
  4033e8:	lea    r9,[rcx+rax*8]
  4033ec:	mov    eax,esi
  4033ee:	sub    eax,ebx
  4033f0:	add    eax,edi
  4033f2:	cdqe   
  4033f4:	lea    r8,[rcx+rax*8]
  4033f8:	xor    eax,eax
  4033fa:	nop    WORD PTR [rax+rax*1+0x0]
  403400:	mov    r11,QWORD PTR [r9+rax*8]
  403404:	mov    r13,QWORD PTR [r8+rax*8]
  403408:	mov    QWORD PTR [r9+rax*8],r13
  40340c:	mov    QWORD PTR [r8+rax*8],r11
  403410:	add    rax,0x1
  403414:	cmp    r14d,eax
  403417:	jg     0x403400
  403419:	sub    edi,r14d
  40341c:	jmp    0x403370
  403421:	nop    DWORD PTR [rax+rax*1+0x0]
  403426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403430:	push   r15
  403432:	push   r14
  403434:	push   r13
  403436:	push   r12
  403438:	push   rbp
  403439:	push   rdi
  40343a:	push   rsi
  40343b:	push   rbx
  40343c:	sub    rsp,0x68
  403440:	mov    r15,QWORD PTR [rsp+0xe0]
  403448:	test   ecx,ecx
  40344a:	mov    ebp,ecx
  40344c:	mov    QWORD PTR [rsp+0xb8],rdx
  403454:	mov    r13,r8
  403457:	mov    QWORD PTR [rsp+0xc8],r9
  40345f:	mov    eax,DWORD PTR [r15+0x4]
  403463:	mov    DWORD PTR [rsp+0x3c],eax
  403467:	jle    0x4038bc
  40346d:	mov    eax,DWORD PTR [r15]
  403470:	mov    QWORD PTR [r15+0x10],0x0
  403478:	test   eax,eax
  40347a:	jne    0x403754
  403480:	mov    DWORD PTR [r15],0x1
  403487:	mov    eax,0x1
  40348c:	mov    r9d,DWORD PTR [rsp+0xe8]
  403494:	mov    DWORD PTR [r15+0x34],eax
  403498:	mov    DWORD PTR [r15+0x30],eax
  40349c:	mov    QWORD PTR [r15+0x20],0x0
  4034a4:	mov    eax,0x1
  4034a9:	test   r9d,r9d
  4034ac:	je     0x4038d0
  4034b2:	mov    DWORD PTR [r15+0x2c],eax
  4034b6:	movzx  edx,BYTE PTR [r13+0x0]
  4034bb:	cmp    dl,0x2d
  4034be:	je     0x4038f7
  4034c4:	cmp    dl,0x2b
  4034c7:	je     0x403a30
  4034cd:	xor    eax,0x1
  4034d0:	mov    DWORD PTR [r15+0x28],eax
  4034d4:	mov    DWORD PTR [r15+0x18],0x1
  4034dc:	movzx  eax,BYTE PTR [r13+0x0]
  4034e1:	cmp    al,0x3a
  4034e3:	mov    rbx,QWORD PTR [r15+0x20]
  4034e7:	mov    eax,0x0
  4034ec:	cmovne eax,DWORD PTR [rsp+0x3c]
  4034f1:	test   rbx,rbx
  4034f4:	mov    DWORD PTR [rsp+0x3c],eax
  4034f8:	je     0x403830
  4034fe:	cmp    BYTE PTR [rbx],0x0
  403501:	je     0x403830
  403507:	cmp    QWORD PTR [rsp+0xc8],0x0
  403510:	je     0x403782
  403516:	movsxd rax,DWORD PTR [r15]
  403519:	mov    rdi,QWORD PTR [rsp+0xb8]
  403521:	mov    r8,rax
  403524:	mov    rax,QWORD PTR [rdi+rax*8]
  403528:	movsx  edx,BYTE PTR [rax+0x1]
  40352c:	cmp    dl,0x2d
  40352f:	je     0x403564
  403531:	mov    ecx,DWORD PTR [rsp+0xd8]
  403538:	test   ecx,ecx
  40353a:	je     0x403782
  403540:	cmp    BYTE PTR [rax+0x2],0x0
  403544:	jne    0x403564
  403546:	mov    rcx,r13
  403549:	mov    DWORD PTR [rsp+0x40],r8d
  40354e:	mov    rdi,rbx
  403551:	call   0x4113d8
  403556:	test   rax,rax
  403559:	mov    r8d,DWORD PTR [rsp+0x40]
  40355e:	jne    0x403785
  403564:	movzx  eax,BYTE PTR [rbx]
  403567:	mov    rdi,rbx
  40356a:	cmp    al,0x3d
  40356c:	je     0x403e33
  403572:	test   al,al
  403574:	jne    0x403584
  403576:	jmp    0x403e33
  40357b:	nop    DWORD PTR [rax+rax*1+0x0]
  403580:	test   al,al
  403582:	je     0x40358f
  403584:	add    rdi,0x1
  403588:	movzx  eax,BYTE PTR [rdi]
  40358b:	cmp    al,0x3d
  40358d:	jne    0x403580
  40358f:	mov    rax,rdi
  403592:	sub    rax,rbx
  403595:	mov    r11d,eax
  403598:	mov    rsi,QWORD PTR [rsp+0xc8]
  4035a0:	mov    r14,QWORD PTR [rsi]
  4035a3:	test   r14,r14
  4035a6:	je     0x4036bd
  4035ac:	mov    eax,eax
  4035ae:	xor    ecx,ecx
  4035b0:	mov    rdx,rbx
  4035b3:	mov    QWORD PTR [rsp+0x48],rdi
  4035b8:	mov    DWORD PTR [rsp+0xb0],ebp
  4035bf:	xor    r12d,r12d
  4035c2:	mov    QWORD PTR [rsp+0xc0],r13
  4035ca:	mov    DWORD PTR [rsp+0x44],0xffffffff
  4035d2:	mov    r13,r14
  4035d5:	mov    DWORD PTR [rsp+0x40],0x0
  4035dd:	xor    ebx,ebx
  4035df:	mov    rdi,rax
  4035e2:	mov    ebp,r11d
  4035e5:	mov    r14,rcx
  4035e8:	jmp    0x403644
  4035ea:	nop    WORD PTR [rax+rax*1+0x0]
  4035f0:	mov    eax,DWORD PTR [rsp+0x40]
  4035f4:	test   eax,eax
  4035f6:	jne    0x403630
  4035f8:	mov    eax,DWORD PTR [rsp+0xd8]
  4035ff:	test   eax,eax
  403601:	jne    0x403610
  403603:	mov    eax,DWORD PTR [rsi+0x8]
  403606:	cmp    DWORD PTR [r14+0x8],eax
  40360a:	je     0x403a41
  403610:	mov    ecx,0x10
  403615:	call   0x411428
  40361a:	test   rax,rax
  40361d:	je     0x403a61
  403623:	mov    QWORD PTR [rax+0x8],rbx
  403627:	mov    QWORD PTR [rax],rsi
  40362a:	mov    rbx,rax
  40362d:	nop    DWORD PTR [rax]
  403630:	add    rsi,0x20
  403634:	mov    r13,QWORD PTR [rsi]
  403637:	add    r12d,0x1
  40363b:	test   r13,r13
  40363e:	je     0x403680
  403640:	mov    rdx,QWORD PTR [r15+0x20]
  403644:	mov    r8,rdi
  403647:	mov    rcx,r13
  40364a:	call   0x4113b0
  40364f:	test   eax,eax
  403651:	jne    0x403630
  403653:	mov    rcx,r13
  403656:	call   0x4113b8
  40365b:	cmp    ebp,eax
  40365d:	je     0x403a90
  403663:	test   r14,r14
  403666:	jne    0x4035f0
  403668:	mov    r14,rsi
  40366b:	add    rsi,0x20
  40366f:	mov    r13,QWORD PTR [rsi]
  403672:	mov    DWORD PTR [rsp+0x44],r12d
  403677:	add    r12d,0x1
  40367b:	test   r13,r13
  40367e:	jne    0x403640
  403680:	test   rbx,rbx
  403683:	mov    rcx,r14
  403686:	mov    rdi,QWORD PTR [rsp+0x48]
  40368b:	mov    ebp,DWORD PTR [rsp+0xb0]
  403692:	mov    r13,QWORD PTR [rsp+0xc0]
  40369a:	setne  sil
  40369e:	movzx  eax,BYTE PTR [rsp+0x40]
  4036a3:	jne    0x403d80
  4036a9:	test   al,al
  4036ab:	jne    0x403d80
  4036b1:	mov    r8d,DWORD PTR [r15]
  4036b4:	test   rcx,rcx
  4036b7:	jne    0x4042f6
  4036bd:	mov    ebx,DWORD PTR [rsp+0xd8]
  4036c4:	test   ebx,ebx
  4036c6:	jne    0x403d27
  4036cc:	mov    r11d,DWORD PTR [rsp+0x3c]
  4036d1:	test   r11d,r11d
  4036d4:	je     0x403730
  4036d6:	mov    rax,QWORD PTR [rsp+0xb8]
  4036de:	movsxd r14,r8d
  4036e1:	mov    rsi,QWORD PTR [rax+r14*8]
  4036e5:	cmp    BYTE PTR [rsi+0x1],0x2d
  4036e9:	je     0x403f8e
  4036ef:	mov    rbx,QWORD PTR [r15+0x20]
  4036f3:	mov    rax,QWORD PTR [rsp+0xb8]
  4036fb:	movsx  ebp,BYTE PTR [rsi]
  4036fe:	lea    rcx,[rip+0x104b3]        # 0x413bb8
  403705:	mov    rdi,QWORD PTR [rax]
  403708:	call   0x40b010
  40370d:	mov    rsi,rax
  403710:	call   QWORD PTR [rip+0x1beba]        # 0x41f5d0
  403716:	lea    rcx,[rax+0x60]
  40371a:	mov    r8,rdi
  40371d:	mov    QWORD PTR [rsp+0x20],rbx
  403722:	mov    r9d,ebp
  403725:	mov    rdx,rsi
  403728:	call   0x405060
  40372d:	mov    r8d,DWORD PTR [r15]
  403730:	lea    rax,[rip+0x104a1]        # 0x413bd8
  403737:	lea    r14d,[r8+0x1]
  40373b:	mov    DWORD PTR [r15+0x8],0x0
  403743:	mov    ebx,0x3f
  403748:	mov    QWORD PTR [r15+0x20],rax
  40374c:	mov    DWORD PTR [r15],r14d
  40374f:	jmp    0x40381c
  403754:	mov    r10d,DWORD PTR [r15+0x18]
  403758:	test   r10d,r10d
  40375b:	je     0x40348c
  403761:	movzx  eax,BYTE PTR [r8]
  403765:	lea    edx,[rax-0x2b]
  403768:	and    edx,0xfd
  40376e:	jne    0x4034e1
  403774:	movzx  eax,BYTE PTR [r8+0x1]
  403779:	add    r13,0x1
  40377d:	jmp    0x4034e1
  403782:	mov    rdi,rbx
  403785:	lea    r12,[rdi+0x1]
  403789:	mov    rcx,r13
  40378c:	mov    QWORD PTR [r15+0x20],r12
  403790:	movsx  ebx,BYTE PTR [rdi]
  403793:	mov    edx,ebx
  403795:	mov    esi,ebx
  403797:	call   0x4113d8
  40379c:	cmp    BYTE PTR [rdi+0x1],0x0
  4037a0:	je     0x403932
  4037a6:	sub    esi,0x3a
  4037a9:	cmp    sil,0x1
  4037ad:	jbe    0x403805
  4037af:	test   rax,rax
  4037b2:	je     0x403805
  4037b4:	cmp    BYTE PTR [rax],0x57
  4037b7:	movzx  edx,BYTE PTR [rax+0x1]
  4037bb:	je     0x403c0b
  4037c1:	cmp    dl,0x3a
  4037c4:	jne    0x40381c
  4037c6:	cmp    BYTE PTR [rax+0x2],0x3a
  4037ca:	je     0x403f6f
  4037d0:	cmp    BYTE PTR [rdi+0x1],0x0
  4037d4:	jne    0x403f62
  4037da:	movsxd rax,DWORD PTR [r15]
  4037dd:	cmp    eax,ebp
  4037df:	je     0x4040b4
  4037e5:	mov    rsi,QWORD PTR [rsp+0xb8]
  4037ed:	lea    edx,[rax+0x1]
  4037f0:	mov    DWORD PTR [r15],edx
  4037f3:	mov    rax,QWORD PTR [rsi+rax*8]
  4037f7:	mov    QWORD PTR [r15+0x10],rax
  4037fb:	mov    QWORD PTR [r15+0x20],0x0
  403803:	jmp    0x40381c
  403805:	mov    r10d,DWORD PTR [rsp+0x3c]
  40380a:	test   r10d,r10d
  40380d:	jne    0x403940
  403813:	mov    DWORD PTR [r15+0x8],ebx
  403817:	mov    ebx,0x3f
  40381c:	mov    eax,ebx
  40381e:	add    rsp,0x68
  403822:	pop    rbx
  403823:	pop    rsi
  403824:	pop    rdi
  403825:	pop    rbp
  403826:	pop    r12
  403828:	pop    r13
  40382a:	pop    r14
  40382c:	pop    r15
  40382e:	ret    
  40382f:	nop
  403830:	mov    edx,DWORD PTR [r15]
  403833:	cmp    DWORD PTR [r15+0x34],edx
  403837:	jle    0x40383d
  403839:	mov    DWORD PTR [r15+0x34],edx
  40383d:	cmp    edx,DWORD PTR [r15+0x30]
  403841:	jge    0x403847
  403843:	mov    DWORD PTR [r15+0x30],edx
  403847:	cmp    DWORD PTR [r15+0x28],0x1
  40384c:	je     0x4039b0
  403852:	cmp    ebp,edx
  403854:	je     0x403a11
  40385a:	mov    rdi,QWORD PTR [rsp+0xb8]
  403862:	movsxd rax,edx
  403865:	mov    ecx,0x3
  40386a:	mov    rax,QWORD PTR [rdi+rax*8]
  40386e:	lea    rdi,[rip+0x1023b]        # 0x413ab0
  403875:	mov    rsi,rax
  403878:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40387a:	jne    0x403910
  403880:	mov    eax,DWORD PTR [r15+0x30]
  403884:	mov    ecx,DWORD PTR [r15+0x34]
  403888:	add    edx,0x1
  40388b:	mov    DWORD PTR [r15],edx
  40388e:	cmp    eax,ecx
  403890:	je     0x403bd0
  403896:	cmp    edx,ecx
  403898:	je     0x4038ae
  40389a:	mov    rcx,QWORD PTR [rsp+0xb8]
  4038a2:	mov    rdx,r15
  4038a5:	call   0x403350
  4038aa:	mov    eax,DWORD PTR [r15+0x30]
  4038ae:	mov    DWORD PTR [r15+0x34],ebp
  4038b2:	mov    DWORD PTR [r15],ebp
  4038b5:	cmp    ebp,eax
  4038b7:	je     0x4038bc
  4038b9:	mov    DWORD PTR [r15],eax
  4038bc:	mov    ebx,0xffffffff
  4038c1:	jmp    0x40381c
  4038c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038d0:	lea    rcx,[rip+0x101c9]        # 0x413aa0
  4038d7:	call   0x411450
  4038dc:	test   rax,rax
  4038df:	setne  al
  4038e2:	movzx  eax,al
  4038e5:	mov    DWORD PTR [r15+0x2c],eax
  4038e9:	movzx  edx,BYTE PTR [r13+0x0]
  4038ee:	cmp    dl,0x2d
  4038f1:	jne    0x4034c4
  4038f7:	mov    DWORD PTR [r15+0x28],0x2
  4038ff:	add    r13,0x1
  403903:	jmp    0x4034d4
  403908:	nop    DWORD PTR [rax+rax*1+0x0]
  403910:	cmp    BYTE PTR [rax],0x2d
  403913:	je     0x403980
  403915:	mov    r8d,DWORD PTR [r15+0x28]
  403919:	test   r8d,r8d
  40391c:	je     0x4038bc
  40391e:	add    edx,0x1
  403921:	mov    QWORD PTR [r15+0x10],rax
  403925:	mov    ebx,0x1
  40392a:	mov    DWORD PTR [r15],edx
  40392d:	jmp    0x40381c
  403932:	add    DWORD PTR [r15],0x1
  403936:	jmp    0x4037a6
  40393b:	nop    DWORD PTR [rax+rax*1+0x0]
  403940:	mov    rax,QWORD PTR [rsp+0xb8]
  403948:	lea    rcx,[rip+0x1028a]        # 0x413bd9
  40394f:	mov    rdi,QWORD PTR [rax]
  403952:	call   0x40b010
  403957:	mov    rsi,rax
  40395a:	call   QWORD PTR [rip+0x1bc70]        # 0x41f5d0
  403960:	lea    rcx,[rax+0x60]
  403964:	mov    r9d,ebx
  403967:	mov    r8,rdi
  40396a:	mov    rdx,rsi
  40396d:	call   0x405060
  403972:	jmp    0x403813
  403977:	nop    WORD PTR [rax+rax*1+0x0]
  403980:	movzx  ecx,BYTE PTR [rax+0x1]
  403984:	test   cl,cl
  403986:	je     0x403915
  403988:	cmp    cl,0x2d
  40398b:	sete   dl
  40398e:	xor    ecx,ecx
  403990:	cmp    QWORD PTR [rsp+0xc8],0x0
  403999:	setne  cl
  40399c:	and    rdx,rcx
  40399f:	lea    rbx,[rax+rdx*1+0x1]
  4039a4:	mov    QWORD PTR [r15+0x20],rbx
  4039a8:	jmp    0x403507
  4039ad:	nop    DWORD PTR [rax]
  4039b0:	mov    eax,DWORD PTR [r15+0x34]
  4039b4:	cmp    DWORD PTR [r15+0x30],eax
  4039b8:	je     0x403e20
  4039be:	cmp    edx,eax
  4039c0:	je     0x4039d5
  4039c2:	mov    rcx,QWORD PTR [rsp+0xb8]
  4039ca:	mov    rdx,r15
  4039cd:	call   0x403350
  4039d2:	mov    eax,DWORD PTR [r15]
  4039d5:	cmp    ebp,eax
  4039d7:	jle    0x403a20
  4039d9:	mov    rsi,QWORD PTR [rsp+0xb8]
  4039e1:	movsxd rdx,eax
  4039e4:	lea    rdx,[rsi+rdx*8]
  4039e8:	jmp    0x4039fe
  4039ea:	nop    WORD PTR [rax+rax*1+0x0]
  4039f0:	add    eax,0x1
  4039f3:	add    rdx,0x8
  4039f7:	cmp    eax,ebp
  4039f9:	mov    DWORD PTR [r15],eax
  4039fc:	je     0x403a20
  4039fe:	mov    rcx,QWORD PTR [rdx]
  403a01:	cmp    BYTE PTR [rcx],0x2d
  403a04:	jne    0x4039f0
  403a06:	cmp    BYTE PTR [rcx+0x1],0x0
  403a0a:	je     0x4039f0
  403a0c:	mov    edx,DWORD PTR [r15]
  403a0f:	jmp    0x403a22
  403a11:	mov    ebp,DWORD PTR [r15+0x34]
  403a15:	mov    eax,DWORD PTR [r15+0x30]
  403a19:	jmp    0x4038b5
  403a1e:	xchg   ax,ax
  403a20:	mov    edx,eax
  403a22:	mov    DWORD PTR [r15+0x34],eax
  403a26:	jmp    0x403852
  403a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  403a30:	mov    DWORD PTR [r15+0x28],0x0
  403a38:	add    r13,0x1
  403a3c:	jmp    0x4034d4
  403a41:	mov    rax,QWORD PTR [rsi+0x10]
  403a45:	cmp    QWORD PTR [r14+0x10],rax
  403a49:	jne    0x403610
  403a4f:	mov    eax,DWORD PTR [rsi+0x18]
  403a52:	cmp    DWORD PTR [r14+0x18],eax
  403a56:	jne    0x403610
  403a5c:	jmp    0x403630
  403a61:	test   rbx,rbx
  403a64:	je     0x403a81
  403a66:	mov    rcx,rbx
  403a69:	nop    DWORD PTR [rax+0x0]
  403a70:	mov    rbx,QWORD PTR [rbx+0x8]
  403a74:	call   0x411468
  403a79:	test   rbx,rbx
  403a7c:	mov    rcx,rbx
  403a7f:	jne    0x403a70
  403a81:	mov    DWORD PTR [rsp+0x40],0x1
  403a89:	jmp    0x403630
  403a8e:	xchg   ax,ax
  403a90:	test   rbx,rbx
  403a93:	mov    rdi,QWORD PTR [rsp+0x48]
  403a98:	mov    ebp,DWORD PTR [rsp+0xb0]
  403a9f:	mov    r13,QWORD PTR [rsp+0xc0]
  403aa7:	mov    rcx,rbx
  403aaa:	jne    0x403ac4
  403aac:	mov    eax,DWORD PTR [rsp+0x40]
  403ab0:	mov    r8d,DWORD PTR [r15]
  403ab3:	test   eax,eax
  403ab5:	jne    0x403ad8
  403ab7:	mov    DWORD PTR [rsp+0x44],r12d
  403abc:	mov    rcx,rsi
  403abf:	jmp    0x4036b4
  403ac4:	mov    rbx,QWORD PTR [rcx+0x8]
  403ac8:	call   0x411468
  403acd:	test   rbx,rbx
  403ad0:	mov    rcx,rbx
  403ad3:	jne    0x403ac4
  403ad5:	mov    r8d,DWORD PTR [r15]
  403ad8:	lea    eax,[r8+0x1]
  403adc:	mov    DWORD PTR [r15],eax
  403adf:	cmp    BYTE PTR [rdi],0x0
  403ae2:	je     0x403b80
  403ae8:	mov    r13d,DWORD PTR [rsi+0x8]
  403aec:	test   r13d,r13d
  403aef:	jne    0x403bdb
  403af5:	mov    ebp,DWORD PTR [rsp+0x3c]
  403af9:	test   ebp,ebp
  403afb:	je     0x403b53
  403afd:	mov    rdi,QWORD PTR [rsp+0xb8]
  403b05:	cdqe   
  403b07:	mov    rax,QWORD PTR [rdi+rax*8-0x8]
  403b0c:	cmp    BYTE PTR [rax+0x1],0x2d
  403b10:	je     0x403f30
  403b16:	movsx  ebp,BYTE PTR [rax]
  403b19:	mov    rax,QWORD PTR [rsp+0xb8]
  403b21:	lea    rcx,[rip+0x10018]        # 0x413b40
  403b28:	mov    r12,QWORD PTR [rsi]
  403b2b:	mov    rdi,QWORD PTR [rax]
  403b2e:	call   0x40b010
  403b33:	mov    rbx,rax
  403b36:	call   QWORD PTR [rip+0x1ba94]        # 0x41f5d0
  403b3c:	lea    rcx,[rax+0x60]
  403b40:	mov    QWORD PTR [rsp+0x20],r12
  403b45:	mov    r9d,ebp
  403b48:	mov    r8,rdi
  403b4b:	mov    rdx,rbx
  403b4e:	call   0x405060
  403b53:	mov    rbx,QWORD PTR [r15+0x20]
  403b57:	mov    rcx,rbx
  403b5a:	call   0x4113b8
  403b5f:	add    rax,rbx
  403b62:	mov    QWORD PTR [r15+0x20],rax
  403b66:	mov    eax,DWORD PTR [rsi+0x18]
  403b69:	mov    DWORD PTR [r15+0x8],eax
  403b6d:	mov    ebx,0x3f
  403b72:	jmp    0x40381c
  403b77:	nop    WORD PTR [rax+rax*1+0x0]
  403b80:	cmp    DWORD PTR [rsi+0x8],0x1
  403b84:	je     0x403be5
  403b86:	mov    rbx,QWORD PTR [r15+0x20]
  403b8a:	mov    rcx,rbx
  403b8d:	call   0x4113b8
  403b92:	add    rax,rbx
  403b95:	cmp    QWORD PTR [rsp+0xd0],0x0
  403b9e:	mov    QWORD PTR [r15+0x20],rax
  403ba2:	je     0x403baf
  403ba4:	mov    rax,QWORD PTR [rsp+0xd0]
  403bac:	mov    DWORD PTR [rax],r12d
  403baf:	mov    rax,QWORD PTR [rsi+0x10]
  403bb3:	test   rax,rax
  403bb6:	je     0x403eed
  403bbc:	mov    edx,DWORD PTR [rsi+0x18]
  403bbf:	xor    ebx,ebx
  403bc1:	mov    DWORD PTR [rax],edx
  403bc3:	jmp    0x40381c
  403bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  403bd0:	mov    DWORD PTR [r15+0x30],edx
  403bd4:	mov    eax,edx
  403bd6:	jmp    0x4038ae
  403bdb:	add    rdi,0x1
  403bdf:	mov    QWORD PTR [r15+0x10],rdi
  403be3:	jmp    0x403b86
  403be5:	cmp    ebp,eax
  403be7:	jle    0x403ef5
  403bed:	mov    rdi,QWORD PTR [rsp+0xb8]
  403bf5:	cdqe   
  403bf7:	lea    r14d,[r8+0x2]
  403bfb:	mov    DWORD PTR [r15],r14d
  403bfe:	mov    rax,QWORD PTR [rdi+rax*8]
  403c02:	mov    QWORD PTR [r15+0x10],rax
  403c06:	jmp    0x403b86
  403c0b:	cmp    dl,0x3b
  403c0e:	jne    0x4037c1
  403c14:	cmp    QWORD PTR [rsp+0xc8],0x0
  403c1d:	je     0x4040fd
  403c23:	cmp    BYTE PTR [rdi+0x1],0x0
  403c27:	je     0x4040d7
  403c2d:	add    DWORD PTR [r15],0x1
  403c31:	mov    QWORD PTR [r15+0x10],r12
  403c35:	mov    QWORD PTR [r15+0x20],r12
  403c39:	movzx  edi,BYTE PTR [r12]
  403c3e:	mov    rbx,r12
  403c41:	cmp    dil,0x3d
  403c45:	jne    0x403c5d
  403c47:	jmp    0x403c62
  403c49:	nop    DWORD PTR [rax+0x0]
  403c50:	add    rbx,0x1
  403c54:	movzx  edi,BYTE PTR [rbx]
  403c57:	cmp    dil,0x3d
  403c5b:	je     0x403c62
  403c5d:	test   dil,dil
  403c60:	jne    0x403c50
  403c62:	mov    rax,QWORD PTR [rsp+0xc8]
  403c6a:	mov    r14,QWORD PTR [rax]
  403c6d:	test   r14,r14
  403c70:	je     0x4040fd
  403c76:	mov    rax,rbx
  403c79:	xor    r10d,r10d
  403c7c:	xor    ecx,ecx
  403c7e:	sub    rax,r12
  403c81:	mov    BYTE PTR [rsp+0x44],dil
  403c86:	mov    QWORD PTR [rsp+0x48],rbx
  403c8b:	mov    edx,eax
  403c8d:	mov    DWORD PTR [rsp+0xb0],ebp
  403c94:	mov    QWORD PTR [rsp+0xc0],r13
  403c9c:	mov    QWORD PTR [rsp+0xe0],r15
  403ca4:	xor    esi,esi
  403ca6:	mov    DWORD PTR [rsp+0x40],0x0
  403cae:	mov    rdi,rax
  403cb1:	mov    rbp,rcx
  403cb4:	mov    r13d,r10d
  403cb7:	mov    rbx,QWORD PTR [rsp+0xc8]
  403cbf:	mov    r15,rdx
  403cc2:	jmp    0x403cf6
  403cc4:	mov    r9d,DWORD PTR [rsp+0xd8]
  403ccc:	test   r9d,r9d
  403ccf:	jne    0x403cdd
  403cd1:	mov    eax,DWORD PTR [rbx+0x8]
  403cd4:	cmp    DWORD PTR [rbp+0x8],eax
  403cd7:	je     0x404006
  403cdd:	mov    r13d,0x1
  403ce3:	add    rbx,0x20
  403ce7:	mov    r14,QWORD PTR [rbx]
  403cea:	add    esi,0x1
  403ced:	test   r14,r14
  403cf0:	je     0x404028
  403cf6:	mov    r8,rdi
  403cf9:	mov    rdx,r12
  403cfc:	mov    rcx,r14
  403cff:	call   0x4113b0
  403d04:	test   eax,eax
  403d06:	jne    0x403ce3
  403d08:	mov    rcx,r14
  403d0b:	call   0x4113b8
  403d10:	cmp    r15,rax
  403d13:	je     0x40410f
  403d19:	test   rbp,rbp
  403d1c:	jne    0x403cc4
  403d1e:	mov    DWORD PTR [rsp+0x40],esi
  403d22:	mov    rbp,rbx
  403d25:	jmp    0x403ce3
  403d27:	mov    rsi,QWORD PTR [rsp+0xb8]
  403d2f:	movsxd rax,r8d
  403d32:	mov    rsi,QWORD PTR [rsi+rax*8]
  403d36:	cmp    BYTE PTR [rsi+0x1],0x2d
  403d3a:	je     0x403f82
  403d40:	mov    rbx,QWORD PTR [r15+0x20]
  403d44:	mov    rcx,r13
  403d47:	mov    DWORD PTR [rsp+0x40],r8d
  403d4c:	movsx  edx,BYTE PTR [rbx]
  403d4f:	mov    rdi,rbx
  403d52:	call   0x4113d8
  403d57:	test   rax,rax
  403d5a:	mov    r8d,DWORD PTR [rsp+0x40]
  403d5f:	jne    0x403785
  403d65:	mov    edx,DWORD PTR [rsp+0x3c]
  403d69:	test   edx,edx
  403d6b:	jne    0x4036f3
  403d71:	jmp    0x403730
  403d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d80:	mov    r14d,DWORD PTR [rsp+0x3c]
  403d85:	test   r14d,r14d
  403d88:	setne  dl
  403d8b:	test   sil,sil
  403d8e:	je     0x403d98
  403d90:	test   dl,dl
  403d92:	jne    0x403e3d
  403d98:	test   al,al
  403d9a:	je     0x403dd9
  403d9c:	test   dl,dl
  403d9e:	je     0x403dd9
  403da0:	movsxd rax,DWORD PTR [r15]
  403da3:	mov    rdi,QWORD PTR [rsp+0xb8]
  403dab:	lea    rcx,[rip+0xfd3b]        # 0x413aed
  403db2:	mov    rbp,QWORD PTR [rdi]
  403db5:	mov    r12,QWORD PTR [rdi+rax*8]
  403db9:	call   0x40b010
  403dbe:	mov    rdi,rax
  403dc1:	call   QWORD PTR [rip+0x1b809]        # 0x41f5d0
  403dc7:	lea    rcx,[rax+0x60]
  403dcb:	mov    r9,r12
  403dce:	mov    r8,rbp
  403dd1:	mov    rdx,rdi
  403dd4:	call   0x405060
  403dd9:	mov    rdi,QWORD PTR [r15+0x20]
  403ddd:	mov    rcx,rdi
  403de0:	call   0x4113b8
  403de5:	add    DWORD PTR [r15],0x1
  403de9:	add    rax,rdi
  403dec:	test   sil,sil
  403def:	mov    QWORD PTR [r15+0x20],rax
  403df3:	mov    DWORD PTR [r15+0x8],0x0
  403dfb:	je     0x403b6d
  403e01:	mov    rcx,rbx
  403e04:	mov    rbx,QWORD PTR [rcx+0x8]
  403e08:	call   0x411468
  403e0d:	test   rbx,rbx
  403e10:	mov    rcx,rbx
  403e13:	jne    0x403e04
  403e15:	jmp    0x403b6d
  403e1a:	nop    WORD PTR [rax+rax*1+0x0]
  403e20:	cmp    edx,eax
  403e22:	je     0x4039d5
  403e28:	mov    DWORD PTR [r15+0x30],edx
  403e2c:	mov    eax,edx
  403e2e:	jmp    0x4039d5
  403e33:	xor    r11d,r11d
  403e36:	xor    eax,eax
  403e38:	jmp    0x403598
  403e3d:	movsxd rax,DWORD PTR [r15]
  403e40:	mov    rsi,QWORD PTR [rsp+0xb8]
  403e48:	mov    r14,rcx
  403e4b:	mov    QWORD PTR [rsp+0x50],rcx
  403e50:	lea    rcx,[rip+0xfc61]        # 0x413ab8
  403e57:	mov    QWORD PTR [rsp+0x58],rbx
  403e5c:	mov    rbp,QWORD PTR [rsi+rax*8]
  403e60:	mov    rsi,QWORD PTR [rsi]
  403e63:	call   0x40b010
  403e68:	mov    rdi,QWORD PTR [rip+0x1b761]        # 0x41f5d0
  403e6f:	mov    rbx,rax
  403e72:	call   rdi
  403e74:	lea    rcx,[rax+0x60]
  403e78:	mov    rdx,rbx
  403e7b:	mov    r9,rbp
  403e7e:	mov    r8,rsi
  403e81:	lea    rbx,[rsp+0x50]
  403e86:	call   0x405060
  403e8b:	mov    rax,r14
  403e8e:	jmp    0x403e93
  403e90:	mov    rax,QWORD PTR [rbx]
  403e93:	mov    rsi,QWORD PTR [rax]
  403e96:	call   rdi
  403e98:	lea    rdx,[rip+0xfc46]        # 0x413ae5
  403e9f:	lea    rcx,[rax+0x60]
  403ea3:	mov    r8,rsi
  403ea6:	call   0x405060
  403eab:	mov    rbx,QWORD PTR [rbx+0x8]
  403eaf:	test   rbx,rbx
  403eb2:	jne    0x403e90
  403eb4:	call   rdi
  403eb6:	lea    rdx,[rax+0x60]
  403eba:	mov    ecx,0xa
  403ebf:	call   0x4050c0
  403ec4:	mov    rbx,QWORD PTR [r15+0x20]
  403ec8:	mov    rcx,rbx
  403ecb:	call   0x4113b8
  403ed0:	add    rax,rbx
  403ed3:	add    DWORD PTR [r15],0x1
  403ed7:	mov    DWORD PTR [r15+0x8],0x0
  403edf:	mov    QWORD PTR [r15+0x20],rax
  403ee3:	mov    ebx,0x3f
  403ee8:	jmp    0x40381c
  403eed:	mov    ebx,DWORD PTR [rsi+0x18]
  403ef0:	jmp    0x40381c
  403ef5:	mov    edi,DWORD PTR [rsp+0x3c]
  403ef9:	test   edi,edi
  403efb:	jne    0x403fcc
  403f01:	mov    rbx,QWORD PTR [r15+0x20]
  403f05:	mov    rcx,rbx
  403f08:	call   0x4113b8
  403f0d:	add    rax,rbx
  403f10:	mov    QWORD PTR [r15+0x20],rax
  403f14:	mov    eax,DWORD PTR [rsi+0x18]
  403f17:	mov    DWORD PTR [r15+0x8],eax
  403f1b:	cmp    BYTE PTR [r13+0x0],0x3a
  403f20:	jne    0x403b6d
  403f26:	mov    ebx,0x3a
  403f2b:	jmp    0x40381c
  403f30:	mov    rbp,QWORD PTR [rsi]
  403f33:	mov    rdi,QWORD PTR [rdi]
  403f36:	lea    rcx,[rip+0xfbd3]        # 0x413b10
  403f3d:	call   0x40b010
  403f42:	mov    rbx,rax
  403f45:	call   QWORD PTR [rip+0x1b685]        # 0x41f5d0
  403f4b:	lea    rcx,[rax+0x60]
  403f4f:	mov    r9,rbp
  403f52:	mov    r8,rdi
  403f55:	mov    rdx,rbx
  403f58:	call   0x405060
  403f5d:	jmp    0x403b53
  403f62:	mov    QWORD PTR [r15+0x10],r12
  403f66:	add    DWORD PTR [r15],0x1
  403f6a:	jmp    0x4037fb
  403f6f:	cmp    BYTE PTR [rdi+0x1],0x0
  403f73:	jne    0x403f62
  403f75:	mov    QWORD PTR [r15+0x10],0x0
  403f7d:	jmp    0x4037fb
  403f82:	mov    eax,DWORD PTR [rsp+0x3c]
  403f86:	test   eax,eax
  403f88:	je     0x403730
  403f8e:	mov    rax,QWORD PTR [rsp+0xb8]
  403f96:	lea    rcx,[rip+0xfbfb]        # 0x413b98
  403f9d:	mov    rdi,QWORD PTR [r15+0x20]
  403fa1:	mov    rsi,QWORD PTR [rax]
  403fa4:	call   0x40b010
  403fa9:	mov    rbx,rax
  403fac:	call   QWORD PTR [rip+0x1b61e]        # 0x41f5d0
  403fb2:	lea    rcx,[rax+0x60]
  403fb6:	mov    r8,rsi
  403fb9:	mov    r9,rdi
  403fbc:	mov    rdx,rbx
  403fbf:	call   0x405060
  403fc4:	mov    r8d,DWORD PTR [r15]
  403fc7:	jmp    0x403730
  403fcc:	mov    rax,QWORD PTR [rsp+0xb8]
  403fd4:	mov    rbp,QWORD PTR [rsi]
  403fd7:	lea    rcx,[rip+0xfb92]        # 0x413b70
  403fde:	mov    rdi,QWORD PTR [rax]
  403fe1:	call   0x40b010
  403fe6:	mov    rbx,rax
  403fe9:	call   QWORD PTR [rip+0x1b5e1]        # 0x41f5d0
  403fef:	lea    rcx,[rax+0x60]
  403ff3:	mov    r9,rbp
  403ff6:	mov    r8,rdi
  403ff9:	mov    rdx,rbx
  403ffc:	call   0x405060
  404001:	jmp    0x403f01
  404006:	mov    rax,QWORD PTR [rbx+0x10]
  40400a:	cmp    QWORD PTR [rbp+0x10],rax
  40400e:	jne    0x403cdd
  404014:	mov    eax,DWORD PTR [rbx+0x18]
  404017:	cmp    DWORD PTR [rbp+0x18],eax
  40401a:	mov    eax,0x1
  40401f:	cmovne r13d,eax
  404023:	jmp    0x403ce3
  404028:	mov    eax,r13d
  40402b:	mov    rsi,rbp
  40402e:	movzx  edi,BYTE PTR [rsp+0x44]
  404033:	test   eax,eax
  404035:	mov    rbx,QWORD PTR [rsp+0x48]
  40403a:	mov    ebp,DWORD PTR [rsp+0xb0]
  404041:	mov    r13,QWORD PTR [rsp+0xc0]
  404049:	mov    r15,QWORD PTR [rsp+0xe0]
  404051:	je     0x404186
  404057:	mov    r8d,DWORD PTR [rsp+0x3c]
  40405c:	test   r8d,r8d
  40405f:	je     0x404097
  404061:	mov    rax,QWORD PTR [rsp+0xb8]
  404069:	lea    rcx,[rip+0xfbb8]        # 0x413c28
  404070:	mov    rsi,QWORD PTR [rax]
  404073:	call   0x40b010
  404078:	mov    rbx,rax
  40407b:	call   QWORD PTR [rip+0x1b54f]        # 0x41f5d0
  404081:	lea    rcx,[rax+0x60]
  404085:	mov    r9,r12
  404088:	mov    r8,rsi
  40408b:	mov    rdx,rbx
  40408e:	call   0x405060
  404093:	mov    r12,QWORD PTR [r15+0x20]
  404097:	mov    rcx,r12
  40409a:	mov    ebx,0x3f
  40409f:	call   0x4113b8
  4040a4:	add    r12,rax
  4040a7:	add    DWORD PTR [r15],0x1
  4040ab:	mov    QWORD PTR [r15+0x20],r12
  4040af:	jmp    0x40381c
  4040b4:	mov    ecx,DWORD PTR [rsp+0x3c]
  4040b8:	test   ecx,ecx
  4040ba:	jne    0x4041a0
  4040c0:	mov    DWORD PTR [r15+0x8],ebx
  4040c4:	xor    ebx,ebx
  4040c6:	cmp    BYTE PTR [r13+0x0],0x3a
  4040cb:	setne  bl
  4040ce:	lea    ebx,[rbx+rbx*4+0x3a]
  4040d2:	jmp    0x4037fb
  4040d7:	movsxd rax,DWORD PTR [r15]
  4040da:	cmp    eax,ebp
  4040dc:	je     0x4041d7
  4040e2:	mov    rsi,QWORD PTR [rsp+0xb8]
  4040ea:	lea    edx,[rax+0x1]
  4040ed:	mov    DWORD PTR [r15],edx
  4040f0:	mov    r12,QWORD PTR [rsi+rax*8]
  4040f4:	mov    QWORD PTR [r15+0x10],r12
  4040f8:	jmp    0x403c35
  4040fd:	mov    QWORD PTR [r15+0x20],0x0
  404105:	mov    ebx,0x57
  40410a:	jmp    0x40381c
  40410f:	movzx  edi,BYTE PTR [rsp+0x44]
  404114:	mov    QWORD PTR [rsp+0xc8],rbx
  40411c:	mov    ebp,DWORD PTR [rsp+0xb0]
  404123:	mov    r13,QWORD PTR [rsp+0xc0]
  40412b:	mov    rbx,QWORD PTR [rsp+0x48]
  404130:	mov    r15,QWORD PTR [rsp+0xe0]
  404138:	test   dil,dil
  40413b:	mov    rax,QWORD PTR [rsp+0xc8]
  404143:	je     0x4041fa
  404149:	cmp    DWORD PTR [rax+0x8],0x0
  40414d:	jne    0x404345
  404153:	cmp    DWORD PTR [rsp+0x3c],0x0
  404158:	jne    0x404303
  40415e:	mov    rdx,QWORD PTR [r15+0x20]
  404162:	xor    eax,eax
  404164:	or     rcx,0xffffffffffffffff
  404168:	mov    ebx,0x3f
  40416d:	mov    rdi,rdx
  404170:	repnz scas al,BYTE PTR es:[rdi]
  404172:	mov    rax,rcx
  404175:	not    rax
  404178:	lea    rax,[rdx+rax*1-0x1]
  40417d:	mov    QWORD PTR [r15+0x20],rax
  404181:	jmp    0x40381c
  404186:	test   rsi,rsi
  404189:	mov    rax,rsi
  40418c:	je     0x4040fd
  404192:	mov    esi,DWORD PTR [rsp+0x40]
  404196:	mov    QWORD PTR [rsp+0xc8],rax
  40419e:	jmp    0x404138
  4041a0:	mov    rax,QWORD PTR [rsp+0xb8]
  4041a8:	lea    rcx,[rip+0xfa49]        # 0x413bf8
  4041af:	mov    rdi,QWORD PTR [rax]
  4041b2:	call   0x40b010
  4041b7:	mov    rsi,rax
  4041ba:	call   QWORD PTR [rip+0x1b410]        # 0x41f5d0
  4041c0:	lea    rcx,[rax+0x60]
  4041c4:	mov    r9d,ebx
  4041c7:	mov    r8,rdi
  4041ca:	mov    rdx,rsi
  4041cd:	call   0x405060
  4041d2:	jmp    0x4040c0
  4041d7:	cmp    DWORD PTR [rsp+0x3c],0x0
  4041dc:	jne    0x404352
  4041e2:	mov    DWORD PTR [r15+0x8],ebx
  4041e6:	cmp    BYTE PTR [r13+0x0],0x3a
  4041eb:	setne  bl
  4041ee:	lea    ebx,[rbx+rbx*4+0x3a]
  4041f2:	movsx  ebx,bl
  4041f5:	jmp    0x40381c
  4041fa:	cmp    DWORD PTR [rax+0x8],0x1
  4041fe:	je     0x404255
  404200:	mov    QWORD PTR [r15+0x10],0x0
  404208:	xor    eax,eax
  40420a:	or     rcx,0xffffffffffffffff
  40420e:	mov    rdi,r12
  404211:	repnz scas al,BYTE PTR es:[rdi]
  404213:	cmp    QWORD PTR [rsp+0xd0],0x0
  40421c:	mov    rax,rcx
  40421f:	not    rax
  404222:	lea    rax,[r12+rax*1-0x1]
  404227:	mov    QWORD PTR [r15+0x20],rax
  40422b:	je     0x404237
  40422d:	mov    rax,QWORD PTR [rsp+0xd0]
  404235:	mov    DWORD PTR [rax],esi
  404237:	mov    rax,QWORD PTR [rsp+0xc8]
  40423f:	mov    rax,QWORD PTR [rax+0x10]
  404243:	test   rax,rax
  404246:	je     0x404274
  404248:	mov    rsi,QWORD PTR [rsp+0xc8]
  404250:	jmp    0x403bbc
  404255:	movsxd rax,DWORD PTR [r15]
  404258:	cmp    ebp,eax
  40425a:	jle    0x404284
  40425c:	mov    rdi,QWORD PTR [rsp+0xb8]
  404264:	lea    edx,[rax+0x1]
  404267:	mov    DWORD PTR [r15],edx
  40426a:	mov    rax,QWORD PTR [rdi+rax*8]
  40426e:	mov    QWORD PTR [r15+0x10],rax
  404272:	jmp    0x404208
  404274:	mov    rax,QWORD PTR [rsp+0xc8]
  40427c:	mov    ebx,DWORD PTR [rax+0x18]
  40427f:	jmp    0x40381c
  404284:	cmp    DWORD PTR [rsp+0x3c],0x0
  404289:	je     0x4042c8
  40428b:	mov    rax,QWORD PTR [rsp+0xc8]
  404293:	lea    rcx,[rip+0xf9e6]        # 0x413c80
  40429a:	mov    rdi,QWORD PTR [rax]
  40429d:	mov    rax,QWORD PTR [rsp+0xb8]
  4042a5:	mov    rsi,QWORD PTR [rax]
  4042a8:	call   0x40b010
  4042ad:	mov    rbx,rax
  4042b0:	call   QWORD PTR [rip+0x1b31a]        # 0x41f5d0
  4042b6:	lea    rcx,[rax+0x60]
  4042ba:	mov    r9,rdi
  4042bd:	mov    r8,rsi
  4042c0:	mov    rdx,rbx
  4042c3:	call   0x405060
  4042c8:	mov    rdx,QWORD PTR [r15+0x20]
  4042cc:	xor    eax,eax
  4042ce:	or     rcx,0xffffffffffffffff
  4042d2:	mov    rdi,rdx
  4042d5:	repnz scas al,BYTE PTR es:[rdi]
  4042d7:	mov    rax,rcx
  4042da:	not    rax
  4042dd:	lea    rax,[rdx+rax*1-0x1]
  4042e2:	mov    QWORD PTR [r15+0x20],rax
  4042e6:	cmp    BYTE PTR [r13+0x0],0x3a
  4042eb:	jne    0x403b6d
  4042f1:	jmp    0x403f26
  4042f6:	mov    rsi,rcx
  4042f9:	mov    r12d,DWORD PTR [rsp+0x44]
  4042fe:	jmp    0x403ad8
  404303:	mov    rax,QWORD PTR [rsp+0xc8]
  40430b:	lea    rcx,[rip+0xf93e]        # 0x413c50
  404312:	mov    rdi,QWORD PTR [rax]
  404315:	mov    rax,QWORD PTR [rsp+0xb8]
  40431d:	mov    rsi,QWORD PTR [rax]
  404320:	call   0x40b010
  404325:	mov    rbx,rax
  404328:	call   QWORD PTR [rip+0x1b2a2]        # 0x41f5d0
  40432e:	lea    rcx,[rax+0x60]
  404332:	mov    r9,rdi
  404335:	mov    r8,rsi
  404338:	mov    rdx,rbx
  40433b:	call   0x405060
  404340:	jmp    0x40415e
  404345:	add    rbx,0x1
  404349:	mov    QWORD PTR [r15+0x10],rbx
  40434d:	jmp    0x404208
  404352:	mov    rax,QWORD PTR [rsp+0xb8]
  40435a:	lea    rcx,[rip+0xf897]        # 0x413bf8
  404361:	mov    rdi,QWORD PTR [rax]
  404364:	call   0x40b010
  404369:	mov    rsi,rax
  40436c:	call   QWORD PTR [rip+0x1b25e]        # 0x41f5d0
  404372:	lea    rcx,[rax+0x60]
  404376:	mov    r9d,ebx
  404379:	mov    r8,rdi
  40437c:	mov    rdx,rsi
  40437f:	call   0x405060
  404384:	jmp    0x4041e2
  404389:	nop    DWORD PTR [rax+0x0]
  404390:	sub    rsp,0x48
  404394:	mov    eax,DWORD PTR [rip+0xdc8e]        # 0x412028
  40439a:	mov    DWORD PTR [rip+0x17ce0],eax        # 0x41c080
  4043a0:	mov    eax,DWORD PTR [rip+0xdc7e]        # 0x412024
  4043a6:	mov    DWORD PTR [rip+0x17cd8],eax        # 0x41c084
  4043ac:	mov    eax,DWORD PTR [rsp+0x80]
  4043b3:	mov    DWORD PTR [rsp+0x38],eax
  4043b7:	lea    rax,[rip+0x17cc2]        # 0x41c080
  4043be:	mov    QWORD PTR [rsp+0x30],rax
  4043c3:	mov    eax,DWORD PTR [rsp+0x78]
  4043c7:	mov    DWORD PTR [rsp+0x28],eax
  4043cb:	mov    rax,QWORD PTR [rsp+0x70]
  4043d0:	mov    QWORD PTR [rsp+0x20],rax
  4043d5:	call   0x403430
  4043da:	mov    edx,DWORD PTR [rip+0x17ca0]        # 0x41c080
  4043e0:	mov    DWORD PTR [rip+0xdc42],edx        # 0x412028
  4043e6:	mov    rdx,QWORD PTR [rip+0x17ca3]        # 0x41c090
  4043ed:	mov    QWORD PTR [rip+0x1a314],rdx        # 0x41e708
  4043f4:	mov    edx,DWORD PTR [rip+0x17c8e]        # 0x41c088
  4043fa:	mov    DWORD PTR [rip+0xdc20],edx        # 0x412020
  404400:	add    rsp,0x48
  404404:	ret    
  404405:	nop
  404406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404410:	sub    rsp,0x48
  404414:	xor    r9d,r9d
  404417:	mov    DWORD PTR [rsp+0x30],0x1
  40441f:	mov    DWORD PTR [rsp+0x28],0x0
  404427:	mov    QWORD PTR [rsp+0x20],0x0
  404430:	call   0x404390
  404435:	add    rsp,0x48
  404439:	ret    
  40443a:	nop
  40443b:	nop
  40443c:	nop
  40443d:	nop
  40443e:	nop
  40443f:	nop
  404440:	sub    rsp,0x48
  404444:	mov    rax,QWORD PTR [rsp+0x70]
  404449:	mov    DWORD PTR [rsp+0x30],0x0
  404451:	mov    DWORD PTR [rsp+0x28],0x0
  404459:	mov    QWORD PTR [rsp+0x20],rax
  40445e:	call   0x404390
  404463:	add    rsp,0x48
  404467:	ret    
  404468:	nop    DWORD PTR [rax+rax*1+0x0]
  404470:	sub    rsp,0x48
  404474:	mov    rax,QWORD PTR [rsp+0x78]
  404479:	mov    DWORD PTR [rsp+0x38],0x0
  404481:	mov    DWORD PTR [rsp+0x28],0x0
  404489:	mov    QWORD PTR [rsp+0x30],rax
  40448e:	mov    rax,QWORD PTR [rsp+0x70]
  404493:	mov    QWORD PTR [rsp+0x20],rax
  404498:	call   0x403430
  40449d:	add    rsp,0x48
  4044a1:	ret    
  4044a2:	nop    DWORD PTR [rax+0x0]
  4044a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044b0:	sub    rsp,0x48
  4044b4:	mov    rax,QWORD PTR [rsp+0x70]
  4044b9:	mov    DWORD PTR [rsp+0x30],0x0
  4044c1:	mov    DWORD PTR [rsp+0x28],0x1
  4044c9:	mov    QWORD PTR [rsp+0x20],rax
  4044ce:	call   0x404390
  4044d3:	add    rsp,0x48
  4044d7:	ret    
  4044d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4044e0:	sub    rsp,0x48
  4044e4:	mov    rax,QWORD PTR [rsp+0x78]
  4044e9:	mov    DWORD PTR [rsp+0x38],0x0
  4044f1:	mov    DWORD PTR [rsp+0x28],0x1
  4044f9:	mov    QWORD PTR [rsp+0x30],rax
  4044fe:	mov    rax,QWORD PTR [rsp+0x70]
  404503:	mov    QWORD PTR [rsp+0x20],rax
  404508:	call   0x403430
  40450d:	add    rsp,0x48
  404511:	ret    
  404512:	nop
  404513:	nop
  404514:	nop
  404515:	nop
  404516:	nop
  404517:	nop
  404518:	nop
  404519:	nop
  40451a:	nop
  40451b:	nop
  40451c:	nop
  40451d:	nop
  40451e:	nop
  40451f:	nop
  404520:	push   r13
  404522:	push   r12
  404524:	push   rbp
  404525:	push   rdi
  404526:	push   rsi
  404527:	push   rbx
  404528:	sub    rsp,0x38
  40452c:	test   rdx,rdx
  40452f:	mov    r13,rcx
  404532:	mov    rdi,rdx
  404535:	mov    rbp,r8
  404538:	mov    rsi,r9
  40453b:	je     0x404610
  404541:	lea    rax,[rip+0x17b78]        # 0x41c0c0
  404548:	test   rsi,rsi
  40454b:	cmove  rsi,rax
  40454f:	mov    rcx,rsi
  404552:	call   0x404630
  404557:	test   eax,eax
  404559:	jne    0x4045b0
  40455b:	xor    ebx,ebx
  40455d:	test   rbp,rbp
  404560:	lea    r12,[rsp+0x2e]
  404565:	jne    0x40457f
  404567:	jmp    0x4045d0
  404569:	nop    DWORD PTR [rax+0x0]
  404570:	add    rbx,0x1
  404574:	cmp    rax,0xfffffffffffffffe
  404578:	jne    0x4045e4
  40457a:	cmp    rbp,rbx
  40457d:	je     0x4045d0
  40457f:	lea    rdx,[rdi+rbx*1]
  404583:	mov    r9,rsi
  404586:	mov    r8d,0x1
  40458c:	mov    rcx,r12
  40458f:	call   0x40c710
  404594:	cmp    rax,0xffffffffffffffff
  404598:	jne    0x404570
  40459a:	add    rsp,0x38
  40459e:	pop    rbx
  40459f:	pop    rsi
  4045a0:	pop    rdi
  4045a1:	pop    rbp
  4045a2:	pop    r12
  4045a4:	pop    r13
  4045a6:	ret    
  4045a7:	nop    WORD PTR [rax+rax*1+0x0]
  4045b0:	mov    r9,rsi
  4045b3:	mov    r8,rbp
  4045b6:	mov    rdx,rdi
  4045b9:	mov    rcx,r13
  4045bc:	call   0x40c710
  4045c1:	add    rsp,0x38
  4045c5:	pop    rbx
  4045c6:	pop    rsi
  4045c7:	pop    rdi
  4045c8:	pop    rbp
  4045c9:	pop    r12
  4045cb:	pop    r13
  4045cd:	ret    
  4045ce:	xchg   ax,ax
  4045d0:	mov    rax,0xfffffffffffffffe
  4045d7:	add    rsp,0x38
  4045db:	pop    rbx
  4045dc:	pop    rsi
  4045dd:	pop    rdi
  4045de:	pop    rbp
  4045df:	pop    r12
  4045e1:	pop    r13
  4045e3:	ret    
  4045e4:	test   r13,r13
  4045e7:	movzx  eax,WORD PTR [rsp+0x2e]
  4045ec:	je     0x4045f3
  4045ee:	mov    WORD PTR [r13+0x0],ax
  4045f3:	test   ax,ax
  4045f6:	mov    eax,0x0
  4045fb:	cmovne rax,rbx
  4045ff:	add    rsp,0x38
  404603:	pop    rbx
  404604:	pop    rsi
  404605:	pop    rdi
  404606:	pop    rbp
  404607:	pop    r12
  404609:	pop    r13
  40460b:	ret    
  40460c:	nop    DWORD PTR [rax+0x0]
  404610:	mov    ebp,0x1
  404615:	lea    rdi,[rip+0xf694]        # 0x413cb0
  40461c:	xor    r13d,r13d
  40461f:	jmp    0x404541
  404624:	nop
  404625:	nop
  404626:	nop
  404627:	nop
  404628:	nop
  404629:	nop
  40462a:	nop
  40462b:	nop
  40462c:	nop
  40462d:	nop
  40462e:	nop
  40462f:	nop
  404630:	test   rcx,rcx
  404633:	je     0x404640
  404635:	mov    edx,DWORD PTR [rcx]
  404637:	xor    eax,eax
  404639:	test   edx,edx
  40463b:	sete   al
  40463e:	ret    
  40463f:	nop
  404640:	mov    eax,0x1
  404645:	ret    
  404646:	nop
  404647:	nop
  404648:	nop
  404649:	nop
  40464a:	nop
  40464b:	nop
  40464c:	nop
  40464d:	nop
  40464e:	nop
  40464f:	nop
  404650:	test   r8,r8
  404653:	mov    r9d,edx
  404656:	je     0x404677
  404658:	test   cl,0x3
  40465b:	je     0x404684
  40465d:	cmp    BYTE PTR [rcx],dl
  40465f:	jne    0x40466d
  404661:	jmp    0x404680
  404663:	test   cl,0x3
  404666:	je     0x404684
  404668:	cmp    BYTE PTR [rcx],r9b
  40466b:	je     0x404680
  40466d:	add    rcx,0x1
  404671:	sub    r8,0x1
  404675:	jne    0x404663
  404677:	xor    eax,eax
  404679:	ret    
  40467a:	nop    WORD PTR [rax+rax*1+0x0]
  404680:	mov    rax,rcx
  404683:	ret    
  404684:	movzx  eax,dl
  404687:	mov    r11d,eax
  40468a:	shl    r11d,0x8
  40468e:	or     r11d,eax
  404691:	mov    eax,r11d
  404694:	shl    eax,0x10
  404697:	or     r11d,eax
  40469a:	cmp    r8,0x3
  40469e:	ja     0x4046b0
  4046a0:	jmp    0x4046c8
  4046a2:	sub    r8,0x4
  4046a6:	add    rcx,0x4
  4046aa:	cmp    r8,0x3
  4046ae:	jbe    0x4046f0
  4046b0:	mov    eax,DWORD PTR [rcx]
  4046b2:	xor    eax,r11d
  4046b5:	lea    r10d,[rax-0x1010101]
  4046bc:	not    eax
  4046be:	and    eax,r10d
  4046c1:	test   eax,0x80808080
  4046c6:	je     0x4046a2
  4046c8:	add    r8,rcx
  4046cb:	cmp    BYTE PTR [rcx],dl
  4046cd:	lea    rax,[rcx+0x1]
  4046d1:	jne    0x4046df
  4046d3:	jmp    0x404680
  4046d5:	add    rax,0x1
  4046d9:	cmp    BYTE PTR [rax-0x1],r9b
  4046dd:	je     0x404680
  4046df:	cmp    rax,r8
  4046e2:	mov    rcx,rax
  4046e5:	jne    0x4046d5
  4046e7:	xor    eax,eax
  4046e9:	ret    
  4046ea:	nop    WORD PTR [rax+rax*1+0x0]
  4046f0:	test   r8,r8
  4046f3:	jne    0x4046c8
  4046f5:	jmp    0x404677
  4046f7:	nop
  4046f8:	nop
  4046f9:	nop
  4046fa:	nop
  4046fb:	nop
  4046fc:	nop
  4046fd:	nop
  4046fe:	nop
  4046ff:	nop
  404700:	push   rbx
  404701:	sub    rsp,0x20
  404705:	mov    ebx,ecx
  404707:	call   0x40a280
  40470c:	mov    rax,QWORD PTR [rip+0x1af15]        # 0x41f628
  404713:	mov    ecx,ebx
  404715:	add    rsp,0x20
  404719:	pop    rbx
  40471a:	rex.W jmp rax
  40471d:	nop
  40471e:	nop
  40471f:	nop
  404720:	push   r15
  404722:	push   r14
  404724:	push   r13
  404726:	push   r12
  404728:	push   rbp
  404729:	push   rdi
  40472a:	push   rsi
  40472b:	push   rbx
  40472c:	sub    rsp,0x28
  404730:	xor    edi,edi
  404732:	test   rdx,rdx
  404735:	mov    r13,rcx
  404738:	mov    rsi,rdx
  40473b:	mov    r12,r8
  40473e:	mov    QWORD PTR [rsp+0x88],r9
  404746:	jne    0x40475a
  404748:	jmp    0x404782
  40474a:	nop    WORD PTR [rax+rax*1+0x0]
  404750:	je     0x4047a2
  404752:	mov    rsi,rbx
  404755:	cmp    rdi,rsi
  404758:	jae    0x404782
  40475a:	lea    rbx,[rsi+rdi*1]
  40475e:	mov    rdx,r12
  404761:	shr    rbx,1
  404764:	mov    rbp,rbx
  404767:	shl    rbp,0x4
  40476b:	mov    rcx,QWORD PTR [r13+rbp*1+0x0]
  404770:	call   0x4113d0
  404775:	test   eax,eax
  404777:	jns    0x404750
  404779:	lea    rdi,[rbx+0x1]
  40477d:	cmp    rdi,rsi
  404780:	jb     0x40475a
  404782:	mov    rax,QWORD PTR [rsp+0x88]
  40478a:	mov    QWORD PTR [rax],rdi
  40478d:	mov    QWORD PTR [rax+0x8],rsi
  404791:	add    rsp,0x28
  404795:	pop    rbx
  404796:	pop    rsi
  404797:	pop    rdi
  404798:	pop    rbp
  404799:	pop    r12
  40479b:	pop    r13
  40479d:	pop    r14
  40479f:	pop    r15
  4047a1:	ret    
  4047a2:	cmp    rdi,rbx
  4047a5:	jae    0x4047d3
  4047a7:	lea    r14,[r13+rbp*1-0x10]
  4047ac:	mov    rbp,rbx
  4047af:	jmp    0x4047bd
  4047b1:	sub    r14,0x10
  4047b5:	cmp    r15,rdi
  4047b8:	mov    rbp,r15
  4047bb:	jbe    0x4047d3
  4047bd:	mov    rcx,QWORD PTR [r14]
  4047c0:	mov    rdx,r12
  4047c3:	lea    r15,[rbp-0x1]
  4047c7:	call   0x4113d0
  4047cc:	test   eax,eax
  4047ce:	jns    0x4047b1
  4047d0:	mov    rdi,rbp
  4047d3:	lea    rbp,[rbx+0x1]
  4047d7:	mov    rax,rbp
  4047da:	shl    rax,0x4
  4047de:	add    r13,rax
  4047e1:	cmp    rsi,rbx
  4047e4:	ja     0x4047f4
  4047e6:	jmp    0x404782
  4047e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4047f0:	add    rbp,0x1
  4047f4:	cmp    rbp,rsi
  4047f7:	je     0x404782
  4047f9:	mov    rcx,QWORD PTR [r13+0x0]
  4047fd:	mov    rdx,r12
  404800:	add    r13,0x10
  404804:	call   0x4113d0
  404809:	test   eax,eax
  40480b:	jle    0x4047f0
  40480d:	mov    rsi,rbp
  404810:	jmp    0x404782
  404815:	nop
  404816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404820:	push   r15
  404822:	push   r14
  404824:	push   r13
  404826:	push   r12
  404828:	push   rbp
  404829:	push   rdi
  40482a:	push   rsi
  40482b:	push   rbx
  40482c:	sub    rsp,0x1a8
  404833:	mov    ebx,ecx
  404835:	mov    rdi,rdx
  404838:	call   0x4113e8
  40483d:	test   rax,rax
  404840:	mov    rbp,rax
  404843:	je     0x404860
  404845:	mov    rax,rbp
  404848:	add    rsp,0x1a8
  40484f:	pop    rbx
  404850:	pop    rsi
  404851:	pop    rdi
  404852:	pop    rbp
  404853:	pop    r12
  404855:	pop    r13
  404857:	pop    r14
  404859:	pop    r15
  40485b:	ret    
  40485c:	nop    DWORD PTR [rax+0x0]
  404860:	mov    rcx,rdi
  404863:	call   0x4113b8
  404868:	cmp    rax,0x3f
  40486c:	ja     0x404845
  40486e:	movzx  eax,BYTE PTR [rdi]
  404871:	lea    rsi,[rsp+0x60]
  404876:	mov    r9,rdi
  404879:	mov    rdx,rsi
  40487c:	cmp    al,0x2e
  40487e:	jne    0x404894
  404880:	jmp    0x404898
  404882:	add    r9,0x1
  404886:	mov    BYTE PTR [rdx],al
  404888:	add    rdx,0x1
  40488c:	movzx  eax,BYTE PTR [r9]
  404890:	cmp    al,0x2e
  404892:	je     0x404898
  404894:	test   al,al
  404896:	jne    0x404882
  404898:	cmp    al,0x2e
  40489a:	jne    0x4048af
  40489c:	jmp    0x404960
  4048a1:	add    r9,0x1
  4048a5:	mov    BYTE PTR [rdx],al
  4048a7:	add    rdx,0x1
  4048ab:	movzx  eax,BYTE PTR [r9]
  4048af:	test   al,al
  4048b1:	jne    0x4048a1
  4048b3:	mov    BYTE PTR [rdx],0x0
  4048b6:	mov    rcx,rsi
  4048b9:	mov    rdx,rdi
  4048bc:	call   0x4113d0
  4048c1:	test   eax,eax
  4048c3:	je     0x4048e0
  4048c5:	mov    rdx,rsi
  4048c8:	mov    ecx,ebx
  4048ca:	call   0x4113e8
  4048cf:	test   rax,rax
  4048d2:	mov    rbp,rax
  4048d5:	jne    0x404845
  4048db:	nop    DWORD PTR [rax+rax*1+0x0]
  4048e0:	lea    rdi,[rsp+0x120]
  4048e8:	lea    rcx,[rip+0x10c91]        # 0x415580
  4048ef:	mov    edx,0xa4
  4048f4:	mov    r8,rsi
  4048f7:	mov    r9,rdi
  4048fa:	call   0x404720
  4048ff:	mov    rbp,QWORD PTR [rsp+0x120]
  404907:	lea    rdx,[rip+0x10c72]        # 0x415580
  40490e:	mov    rax,rbp
  404911:	shl    rax,0x4
  404915:	cmp    rbp,QWORD PTR [rsp+0x128]
  40491d:	lea    r12,[rdx+rax*1+0x8]
  404922:	jb     0x404942
  404924:	jmp    0x404981
  404926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404930:	add    rbp,0x1
  404934:	add    r12,0x10
  404938:	cmp    rbp,QWORD PTR [rsp+0x128]
  404940:	jae    0x404981
  404942:	mov    rdx,QWORD PTR [r12]
  404946:	mov    ecx,ebx
  404948:	call   0x4113e8
  40494d:	test   rax,rax
  404950:	je     0x404930
  404952:	mov    rbp,rax
  404955:	jmp    0x404845
  40495a:	nop    WORD PTR [rax+rax*1+0x0]
  404960:	add    r9,0x1
  404964:	movzx  eax,BYTE PTR [r9]
  404968:	test   al,0xbf
  40496a:	je     0x4048af
  404970:	add    r9,0x1
  404974:	movzx  eax,BYTE PTR [r9]
  404978:	test   al,0xbf
  40497a:	jne    0x404960
  40497c:	jmp    0x4048af
  404981:	mov    edx,0x5f
  404986:	mov    rcx,rsi
  404989:	call   0x4113d8
  40498e:	test   rax,rax
  404991:	mov    rbp,rax
  404994:	je     0x404845
  40499a:	lea    r13,[rax+0x1]
  40499e:	mov    edx,0x40
  4049a3:	mov    rcx,r13
  4049a6:	call   0x4113d8
  4049ab:	test   rax,rax
  4049ae:	mov    r12,rax
  4049b1:	je     0x404b9b
  4049b7:	lea    r14,[rsp+0xa0]
  4049bf:	sub    rbp,rsi
  4049c2:	mov    rdx,rsi
  4049c5:	mov    r8,rbp
  4049c8:	lea    rsi,[rsp+0xe0]
  4049d0:	mov    rcx,r14
  4049d3:	call   0x411418
  4049d8:	lea    rcx,[r14+rbp*1]
  4049dc:	mov    rdx,r12
  4049df:	sub    r12,r13
  4049e2:	call   0x4113c8
  4049e7:	mov    r8,r12
  4049ea:	mov    rdx,r13
  4049ed:	mov    rcx,rsi
  4049f0:	call   0x411418
  4049f5:	lea    r9,[rsp+0x40]
  4049fa:	lea    rcx,[rip+0x10b7f]        # 0x415580
  404a01:	mov    r8,r14
  404a04:	mov    edx,0xa4
  404a09:	mov    BYTE PTR [rsp+r12*1+0xe0],0x0
  404a12:	call   0x404720
  404a17:	mov    rax,QWORD PTR [rsp+0x48]
  404a1c:	cmp    QWORD PTR [rsp+0x40],rax
  404a21:	jae    0x404a93
  404a23:	lea    r9,[rsp+0x50]
  404a28:	lea    rcx,[rip+0xfa51]        # 0x414480
  404a2f:	mov    r8,rsi
  404a32:	mov    edx,0x8f
  404a37:	call   0x404720
  404a3c:	mov    rbp,QWORD PTR [rsp+0x50]
  404a41:	mov    rax,QWORD PTR [rsp+0x58]
  404a46:	cmp    rbp,rax
  404a49:	jb     0x404aa0
  404a4b:	mov    rsi,QWORD PTR [rsp+0x40]
  404a50:	cmp    rsi,QWORD PTR [rsp+0x48]
  404a55:	jae    0x404a93
  404a57:	mov    rax,rsi
  404a5a:	lea    rdx,[rip+0x10b1f]        # 0x415580
  404a61:	shl    rax,0x4
  404a65:	lea    rdi,[rdx+rax*1+0x8]
  404a6a:	jmp    0x404a7f
  404a6c:	nop    DWORD PTR [rax+0x0]
  404a70:	add    rsi,0x1
  404a74:	add    rdi,0x10
  404a78:	cmp    rsi,QWORD PTR [rsp+0x48]
  404a7d:	jae    0x404a93
  404a7f:	mov    rdx,QWORD PTR [rdi]
  404a82:	mov    ecx,ebx
  404a84:	call   0x4113e8
  404a89:	test   rax,rax
  404a8c:	je     0x404a70
  404a8e:	jmp    0x404952
  404a93:	xor    ebp,ebp
  404a95:	jmp    0x404845
  404a9a:	nop    WORD PTR [rax+rax*1+0x0]
  404aa0:	mov    rsi,QWORD PTR [rsp+0x40]
  404aa5:	cmp    rsi,QWORD PTR [rsp+0x48]
  404aaa:	mov    QWORD PTR [rsp+0x30],rsi
  404aaf:	jae    0x404a93
  404ab1:	mov    rdx,rsi
  404ab4:	lea    rcx,[rip+0x10ac5]        # 0x415580
  404abb:	shl    rdx,0x4
  404abf:	lea    rsi,[rcx+rdx*1+0x8]
  404ac4:	mov    QWORD PTR [rsp+0x38],rsi
  404ac9:	cmp    rbp,rax
  404acc:	jae    0x404b70
  404ad2:	mov    rax,QWORD PTR [rsp+0x38]
  404ad7:	lea    rsi,[rip+0xf9a2]        # 0x414480
  404ade:	mov    rax,QWORD PTR [rax]
  404ae1:	mov    QWORD PTR [rsp+0x28],rax
  404ae6:	mov    rax,rbp
  404ae9:	shl    rax,0x4
  404aed:	lea    r13,[rsi+rax*1+0x8]
  404af2:	jmp    0x404b03
  404af4:	add    rbp,0x1
  404af8:	add    r13,0x10
  404afc:	cmp    rbp,QWORD PTR [rsp+0x58]
  404b01:	jae    0x404b70
  404b03:	mov    rcx,QWORD PTR [rsp+0x28]
  404b08:	call   0x4113b8
  404b0d:	mov    r12,QWORD PTR [r13+0x0]
  404b11:	mov    rsi,rax
  404b14:	lea    r14,[rsi+0x1]
  404b18:	mov    rcx,r12
  404b1b:	call   0x4113b8
  404b20:	lea    r15,[rax+0x1]
  404b24:	lea    rax,[r14+r15*1]
  404b28:	cmp    rax,0x80
  404b2e:	ja     0x404bad
  404b30:	mov    rdx,QWORD PTR [rsp+0x28]
  404b35:	mov    r8,rsi
  404b38:	mov    rcx,rdi
  404b3b:	call   0x411418
  404b40:	lea    rcx,[rdi+r14*1]
  404b44:	mov    r8,r15
  404b47:	mov    rdx,r12
  404b4a:	mov    BYTE PTR [rsp+rsi*1+0x120],0x5f
  404b52:	call   0x411418
  404b57:	mov    rdx,rdi
  404b5a:	mov    ecx,ebx
  404b5c:	call   0x4113e8
  404b61:	test   rax,rax
  404b64:	je     0x404af4
  404b66:	jmp    0x404952
  404b6b:	nop    DWORD PTR [rax+rax*1+0x0]
  404b70:	add    QWORD PTR [rsp+0x30],0x1
  404b76:	add    QWORD PTR [rsp+0x38],0x10
  404b7c:	mov    rax,QWORD PTR [rsp+0x30]
  404b81:	cmp    rax,QWORD PTR [rsp+0x48]
  404b86:	jae    0x404a4b
  404b8c:	mov    rax,QWORD PTR [rsp+0x58]
  404b91:	mov    rbp,QWORD PTR [rsp+0x50]
  404b96:	jmp    0x404ac9
  404b9b:	mov    rcx,r13
  404b9e:	call   0x4113b8
  404ba3:	lea    r12,[r13+rax*1+0x0]
  404ba8:	jmp    0x4049b7
  404bad:	call   0x4114b0
  404bb2:	nop
  404bb3:	nop    DWORD PTR [rax]
  404bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404bc0:	sub    rsp,0x28
  404bc4:	cmp    ecx,0x6c1
  404bca:	je     0x404bd5
  404bcc:	add    rsp,0x28
  404bd0:	jmp    0x404820
  404bd5:	test   rdx,rdx
  404bd8:	je     0x404bf3
  404bda:	lea    rcx,[rip+0xd45f]        # 0x412040
  404be1:	mov    r8d,0x3f
  404be7:	mov    BYTE PTR [rip+0xd491],0x0        # 0x41207f
  404bee:	call   0x4113a8
  404bf3:	lea    rax,[rip+0xd446]        # 0x412040
  404bfa:	add    rsp,0x28
  404bfe:	ret    
  404bff:	nop
  404c00:	push   r13
  404c02:	push   r12
  404c04:	push   rbp
  404c05:	push   rdi
  404c06:	push   rsi
  404c07:	push   rbx
  404c08:	sub    rsp,0x28
  404c0c:	test   rdx,rdx
  404c0f:	mov    esi,ecx
  404c11:	mov    rbx,rdx
  404c14:	je     0x404d30
  404c1a:	cmp    BYTE PTR [rdx],0x0
  404c1d:	je     0x404cc0
  404c23:	test   ecx,ecx
  404c25:	jne    0x404d30
  404c2b:	mov    edx,0x2e
  404c30:	mov    rcx,rbx
  404c33:	call   0x4113d8
  404c38:	test   rax,rax
  404c3b:	je     0x404d30
  404c41:	xor    edx,edx
  404c43:	xor    ecx,ecx
  404c45:	call   0x4113e8
  404c4a:	test   rax,rax
  404c4d:	je     0x404ed0
  404c53:	mov    rcx,rax
  404c56:	call   0x411378
  404c5b:	test   rax,rax
  404c5e:	mov    rbp,rax
  404c61:	je     0x404ed0
  404c67:	xor    ecx,ecx
  404c69:	mov    rdx,rbx
  404c6c:	call   0x404820
  404c71:	test   rax,rax
  404c74:	je     0x404f30
  404c7a:	xor    edx,edx
  404c7c:	mov    ecx,0x2
  404c81:	lea    rdi,[rip+0xf07e]        # 0x413d06
  404c88:	call   0x4113e8
  404c8d:	mov    ecx,0x2
  404c92:	mov    rsi,rax
  404c95:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404c97:	je     0x404f20
  404c9d:	mov    rcx,rbp
  404ca0:	call   0x411468
  404ca5:	xor    edx,edx
  404ca7:	xor    ecx,ecx
  404ca9:	add    rsp,0x28
  404cad:	pop    rbx
  404cae:	pop    rsi
  404caf:	pop    rdi
  404cb0:	pop    rbp
  404cb1:	pop    r12
  404cb3:	pop    r13
  404cb5:	jmp    0x4113e8
  404cba:	nop    WORD PTR [rax+rax*1+0x0]
  404cc0:	test   ecx,ecx
  404cc2:	je     0x404d60
  404cc8:	cmp    ecx,0x3
  404ccb:	lea    rdx,[rip+0xf002]        # 0x413cd4
  404cd2:	je     0x404d00
  404cd4:	jle    0x404d35
  404cd6:	cmp    ecx,0x5
  404cd9:	lea    rdx,[rip+0xf00b]        # 0x413ceb
  404ce0:	je     0x404d00
  404ce2:	lea    rdx,[rip+0xeff7]        # 0x413ce0
  404ce9:	jl     0x404d00
  404ceb:	cmp    ecx,0x6c1
  404cf1:	lea    rdx,[rip+0xf002]        # 0x413cfa
  404cf8:	jne    0x404d4d
  404cfa:	nop    WORD PTR [rax+rax*1+0x0]
  404d00:	mov    ecx,esi
  404d02:	call   0x407440
  404d07:	test   rax,rax
  404d0a:	je     0x404f50
  404d10:	mov    rdx,rax
  404d13:	mov    ecx,esi
  404d15:	add    rsp,0x28
  404d19:	pop    rbx
  404d1a:	pop    rsi
  404d1b:	pop    rdi
  404d1c:	pop    rbp
  404d1d:	pop    r12
  404d1f:	pop    r13
  404d21:	jmp    0x404bc0
  404d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d30:	mov    rdx,rbx
  404d33:	jmp    0x404d13
  404d35:	cmp    ecx,0x1
  404d38:	lea    rdx,[rip+0xef81]        # 0x413cc0
  404d3f:	je     0x404d00
  404d41:	cmp    ecx,0x2
  404d44:	lea    rdx,[rip+0xef80]        # 0x413ccb
  404d4b:	je     0x404d00
  404d4d:	lea    rdx,[rip+0xef9f]        # 0x413cf3
  404d54:	jmp    0x404d00
  404d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d60:	xor    edx,edx
  404d62:	xor    ecx,ecx
  404d64:	call   0x4113e8
  404d69:	test   rax,rax
  404d6c:	je     0x404ed0
  404d72:	mov    rcx,rax
  404d75:	call   0x411378
  404d7a:	test   rax,rax
  404d7d:	mov    r12,rax
  404d80:	je     0x404ed0
  404d86:	lea    rdx,[rip+0xef3e]        # 0x413ccb
  404d8d:	mov    ecx,0x2
  404d92:	call   0x407440
  404d97:	test   rax,rax
  404d9a:	mov    rbp,rax
  404d9d:	je     0x404f5a
  404da3:	xor    ecx,ecx
  404da5:	mov    rdx,rbp
  404da8:	call   0x404820
  404dad:	test   rax,rax
  404db0:	je     0x404eb0
  404db6:	mov    edx,0x2e
  404dbb:	mov    rcx,rbp
  404dbe:	call   0x4113d8
  404dc3:	test   rax,rax
  404dc6:	je     0x404deb
  404dc8:	xor    edx,edx
  404dca:	mov    ecx,0x2
  404dcf:	lea    rdi,[rip+0xef30]        # 0x413d06
  404dd6:	call   0x4113e8
  404ddb:	mov    ecx,0x2
  404de0:	mov    rsi,rax
  404de3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404de5:	je     0x404eb0
  404deb:	lea    rsi,[rip+0xef1e]        # 0x413d10
  404df2:	lea    r13,[rip+0xef2b]        # 0x413d24
  404df9:	jmp    0x404e50
  404dfb:	nop    DWORD PTR [rax+rax*1+0x0]
  404e00:	cmp    ebx,0x5
  404e03:	je     0x404f00
  404e09:	jl     0x404ef0
  404e0f:	cmp    ebx,0x6c1
  404e15:	jne    0x404ee0
  404e1b:	lea    rdx,[rip+0xeed8]        # 0x413cfa
  404e22:	mov    ecx,0x6c1
  404e27:	call   0x407440
  404e2c:	test   rax,rax
  404e2f:	mov    rdi,rax
  404e32:	je     0x404f40
  404e38:	mov    rdx,rdi
  404e3b:	mov    ecx,ebx
  404e3d:	call   0x404bc0
  404e42:	test   rax,rax
  404e45:	je     0x404eb0
  404e47:	add    rsi,0x4
  404e4b:	cmp    rsi,r13
  404e4e:	je     0x404ea8
  404e50:	mov    ebx,DWORD PTR [rsi]
  404e52:	cmp    ebx,0x3
  404e55:	je     0x404f10
  404e5b:	jg     0x404e00
  404e5d:	cmp    ebx,0x1
  404e60:	lea    rdx,[rip+0xee59]        # 0x413cc0
  404e67:	je     0x404e75
  404e69:	cmp    ebx,0x2
  404e6c:	lea    rdx,[rip+0xee58]        # 0x413ccb
  404e73:	jne    0x404ee0
  404e75:	mov    ecx,ebx
  404e77:	call   0x407440
  404e7c:	test   rax,rax
  404e7f:	mov    rdi,rax
  404e82:	je     0x404f40
  404e88:	mov    rdx,rbp
  404e8b:	mov    rcx,rdi
  404e8e:	call   0x4113d0
  404e93:	test   eax,eax
  404e95:	jne    0x404e38
  404e97:	cmp    ebx,0x6c1
  404e9d:	je     0x404e38
  404e9f:	add    rsi,0x4
  404ea3:	cmp    rsi,r13
  404ea6:	jne    0x404e50
  404ea8:	mov    rcx,r12
  404eab:	jmp    0x404ca0
  404eb0:	cmp    BYTE PTR [r12],0x0
  404eb5:	je     0x404ec1
  404eb7:	mov    rdx,r12
  404eba:	xor    ecx,ecx
  404ebc:	call   0x4113e8
  404ec1:	mov    rcx,r12
  404ec4:	call   0x411468
  404ec9:	nop    DWORD PTR [rax+0x0]
  404ed0:	xor    eax,eax
  404ed2:	add    rsp,0x28
  404ed6:	pop    rbx
  404ed7:	pop    rsi
  404ed8:	pop    rdi
  404ed9:	pop    rbp
  404eda:	pop    r12
  404edc:	pop    r13
  404ede:	ret    
  404edf:	nop
  404ee0:	lea    rdx,[rip+0xee0c]        # 0x413cf3
  404ee7:	jmp    0x404e75
  404ee9:	nop    DWORD PTR [rax+0x0]
  404ef0:	lea    rdx,[rip+0xede9]        # 0x413ce0
  404ef7:	jmp    0x404e75
  404efc:	nop    DWORD PTR [rax+0x0]
  404f00:	lea    rdx,[rip+0xede4]        # 0x413ceb
  404f07:	jmp    0x404e75
  404f0c:	nop    DWORD PTR [rax+0x0]
  404f10:	lea    rdx,[rip+0xedbd]        # 0x413cd4
  404f17:	jmp    0x404e75
  404f1c:	nop    DWORD PTR [rax+0x0]
  404f20:	cmp    BYTE PTR [rbp+0x0],0x0
  404f24:	je     0x404f30
  404f26:	mov    rdx,rbp
  404f29:	xor    ecx,ecx
  404f2b:	call   0x4113e8
  404f30:	mov    rcx,rbp
  404f33:	call   0x411468
  404f38:	jmp    0x404ed0
  404f3a:	nop    WORD PTR [rax+rax*1+0x0]
  404f40:	call   0x4074b0
  404f45:	mov    rdi,rax
  404f48:	jmp    0x404e88
  404f4d:	nop    DWORD PTR [rax]
  404f50:	call   0x4074b0
  404f55:	jmp    0x404d10
  404f5a:	call   0x4074b0
  404f5f:	mov    rbp,rax
  404f62:	jmp    0x404da3
  404f67:	nop
  404f68:	nop
  404f69:	nop
  404f6a:	nop
  404f6b:	nop
  404f6c:	nop
  404f6d:	nop
  404f6e:	nop
  404f6f:	nop
  404f70:	push   rdi
  404f71:	push   rsi
  404f72:	push   rbx
  404f73:	sub    rsp,0x20
  404f77:	mov    rbx,rcx
  404f7a:	mov    rsi,rdx
  404f7d:	mov    rdi,r8
  404f80:	call   0x411490
  404f85:	test   eax,eax
  404f87:	jne    0x404fb0
  404f89:	xor    ecx,ecx
  404f8b:	call   QWORD PTR [rip+0x1a5bf]        # 0x41f550
  404f91:	mov    rdx,rsi
  404f94:	mov    r8,rdi
  404f97:	mov    rcx,rbx
  404f9a:	call   0x40cb50
  404f9f:	cmp    eax,0xffffffff
  404fa2:	mov    esi,eax
  404fa4:	je     0x404fc5
  404fa6:	mov    eax,esi
  404fa8:	add    rsp,0x20
  404fac:	pop    rbx
  404fad:	pop    rsi
  404fae:	pop    rdi
  404faf:	ret    
  404fb0:	mov    r8,rdi
  404fb3:	mov    rdx,rsi
  404fb6:	mov    rcx,rbx
  404fb9:	add    rsp,0x20
  404fbd:	pop    rbx
  404fbe:	pop    rsi
  404fbf:	pop    rdi
  404fc0:	jmp    0x40cb50
  404fc5:	call   QWORD PTR [rip+0x1a4ed]        # 0x41f4b8
  404fcb:	cmp    eax,0xe8
  404fd0:	jne    0x404fa6
  404fd2:	mov    rcx,rbx
  404fd5:	call   0x411490
  404fda:	test   eax,eax
  404fdc:	je     0x404fa6
  404fde:	mov    rcx,rbx
  404fe1:	call   0x411370
  404fe6:	test   eax,eax
  404fe8:	js     0x404fa6
  404fea:	mov    ecx,eax
  404fec:	call   0x404700
  404ff1:	mov    rcx,rax
  404ff4:	call   QWORD PTR [rip+0x1a4b6]        # 0x41f4b0
  404ffa:	cmp    eax,0x3
  404ffd:	jne    0x404fa6
  404fff:	mov    ecx,0xd
  405004:	call   0x40a2b0
  405009:	call   QWORD PTR [rip+0x1a601]        # 0x41f610
  40500f:	mov    DWORD PTR [rax],0x20
  405015:	jmp    0x404fa6
  405017:	nop    WORD PTR [rax+rax*1+0x0]
  405020:	push   rsi
  405021:	push   rbx
  405022:	sub    rsp,0x38
  405026:	lea    rbx,[rsp+0x58]
  40502b:	mov    rsi,rcx
  40502e:	mov    QWORD PTR [rsp+0x58],rdx
  405033:	mov    QWORD PTR [rsp+0x60],r8
  405038:	mov    QWORD PTR [rsp+0x68],r9
  40503d:	mov    QWORD PTR [rsp+0x28],rbx
  405042:	call   QWORD PTR [rip+0x1a588]        # 0x41f5d0
  405048:	lea    rcx,[rax+0x30]
  40504c:	mov    r8,rbx
  40504f:	mov    rdx,rsi
  405052:	call   0x404f70
  405057:	add    rsp,0x38
  40505b:	pop    rbx
  40505c:	pop    rsi
  40505d:	ret    
  40505e:	xchg   ax,ax
  405060:	sub    rsp,0x38
  405064:	mov    QWORD PTR [rsp+0x50],r8
  405069:	lea    r8,[rsp+0x50]
  40506e:	mov    QWORD PTR [rsp+0x58],r9
  405073:	mov    QWORD PTR [rsp+0x28],r8
  405078:	call   0x404f70
  40507d:	add    rsp,0x38
  405081:	ret    
  405082:	nop    DWORD PTR [rax+0x0]
  405086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405090:	push   rsi
  405091:	push   rbx
  405092:	sub    rsp,0x28
  405096:	mov    rbx,rcx
  405099:	mov    rsi,rdx
  40509c:	call   QWORD PTR [rip+0x1a52e]        # 0x41f5d0
  4050a2:	lea    rcx,[rax+0x30]
  4050a6:	mov    r8,rsi
  4050a9:	mov    rdx,rbx
  4050ac:	add    rsp,0x28
  4050b0:	pop    rbx
  4050b1:	pop    rsi
  4050b2:	jmp    0x404f70
  4050b7:	nop    WORD PTR [rax+rax*1+0x0]
  4050c0:	push   rsi
  4050c1:	push   rbx
  4050c2:	sub    rsp,0x28
  4050c6:	mov    esi,ecx
  4050c8:	mov    rcx,rdx
  4050cb:	mov    rbx,rdx
  4050ce:	call   0x411490
  4050d3:	test   eax,eax
  4050d5:	jne    0x405100
  4050d7:	xor    ecx,ecx
  4050d9:	call   QWORD PTR [rip+0x1a471]        # 0x41f550
  4050df:	mov    ecx,esi
  4050e1:	mov    rdx,rbx
  4050e4:	call   0x411478
  4050e9:	cmp    eax,0xffffffff
  4050ec:	mov    esi,eax
  4050ee:	je     0x405110
  4050f0:	mov    eax,esi
  4050f2:	add    rsp,0x28
  4050f6:	pop    rbx
  4050f7:	pop    rsi
  4050f8:	ret    
  4050f9:	nop    DWORD PTR [rax+0x0]
  405100:	mov    rdx,rbx
  405103:	mov    ecx,esi
  405105:	add    rsp,0x28
  405109:	pop    rbx
  40510a:	pop    rsi
  40510b:	jmp    0x411478
  405110:	call   QWORD PTR [rip+0x1a3a2]        # 0x41f4b8
  405116:	cmp    eax,0xe8
  40511b:	je     0x405124
  40511d:	mov    esi,0xffffffff
  405122:	jmp    0x4050f0
  405124:	mov    rcx,rbx
  405127:	call   0x411490
  40512c:	test   eax,eax
  40512e:	je     0x40511d
  405130:	mov    rcx,rbx
  405133:	call   0x411370
  405138:	test   eax,eax
  40513a:	js     0x40511d
  40513c:	mov    ecx,eax
  40513e:	call   0x404700
  405143:	mov    rcx,rax
  405146:	call   QWORD PTR [rip+0x1a364]        # 0x41f4b0
  40514c:	cmp    eax,0x3
  40514f:	jne    0x40511d
  405151:	mov    ecx,0xd
  405156:	call   0x40a2b0
  40515b:	call   QWORD PTR [rip+0x1a4af]        # 0x41f610
  405161:	mov    DWORD PTR [rax],0x20
  405167:	jmp    0x4050f0
  405169:	nop    DWORD PTR [rax+0x0]
  405170:	push   rbx
  405171:	sub    rsp,0x20
  405175:	mov    ebx,ecx
  405177:	call   QWORD PTR [rip+0x1a453]        # 0x41f5d0
  40517d:	lea    rdx,[rax+0x30]
  405181:	mov    ecx,ebx
  405183:	add    rsp,0x20
  405187:	pop    rbx
  405188:	jmp    0x4050c0
  40518d:	nop    DWORD PTR [rax]
  405190:	push   rsi
  405191:	push   rbx
  405192:	sub    rsp,0x28
  405196:	mov    rsi,rcx
  405199:	mov    rcx,rdx
  40519c:	mov    rbx,rdx
  40519f:	call   0x411490
  4051a4:	test   eax,eax
  4051a6:	jne    0x4051d0
  4051a8:	xor    ecx,ecx
  4051aa:	call   QWORD PTR [rip+0x1a3a0]        # 0x41f550
  4051b0:	mov    rcx,rsi
  4051b3:	mov    rdx,rbx
  4051b6:	call   0x411470
  4051bb:	cmp    eax,0xffffffff
  4051be:	mov    esi,eax
  4051c0:	je     0x4051e1
  4051c2:	mov    eax,esi
  4051c4:	add    rsp,0x28
  4051c8:	pop    rbx
  4051c9:	pop    rsi
  4051ca:	ret    
  4051cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4051d0:	mov    rdx,rbx
  4051d3:	mov    rcx,rsi
  4051d6:	add    rsp,0x28
  4051da:	pop    rbx
  4051db:	pop    rsi
  4051dc:	jmp    0x411470
  4051e1:	call   QWORD PTR [rip+0x1a2d1]        # 0x41f4b8
  4051e7:	cmp    eax,0xe8
  4051ec:	je     0x4051f5
  4051ee:	mov    esi,0xffffffff
  4051f3:	jmp    0x4051c2
  4051f5:	mov    rcx,rbx
  4051f8:	call   0x411490
  4051fd:	test   eax,eax
  4051ff:	je     0x4051ee
  405201:	mov    rcx,rbx
  405204:	call   0x411370
  405209:	test   eax,eax
  40520b:	js     0x4051ee
  40520d:	mov    ecx,eax
  40520f:	call   0x404700
  405214:	mov    rcx,rax
  405217:	call   QWORD PTR [rip+0x1a293]        # 0x41f4b0
  40521d:	cmp    eax,0x3
  405220:	jne    0x4051ee
  405222:	mov    ecx,0xd
  405227:	call   0x40a2b0
  40522c:	call   QWORD PTR [rip+0x1a3de]        # 0x41f610
  405232:	mov    DWORD PTR [rax],0x20
  405238:	jmp    0x4051c2
  40523a:	nop    WORD PTR [rax+rax*1+0x0]
  405240:	push   rsi
  405241:	push   rbx
  405242:	sub    rsp,0x28
  405246:	mov    rsi,rcx
  405249:	call   QWORD PTR [rip+0x1a381]        # 0x41f5d0
  40524f:	lea    rbx,[rax+0x30]
  405253:	mov    rcx,rbx
  405256:	call   0x411490
  40525b:	test   eax,eax
  40525d:	jne    0x405280
  40525f:	xor    ecx,ecx
  405261:	call   QWORD PTR [rip+0x1a2e9]        # 0x41f550
  405267:	mov    rcx,rsi
  40526a:	call   0x411400
  40526f:	cmp    eax,0xffffffff
  405272:	mov    esi,eax
  405274:	je     0x405290
  405276:	mov    eax,esi
  405278:	add    rsp,0x28
  40527c:	pop    rbx
  40527d:	pop    rsi
  40527e:	ret    
  40527f:	nop
  405280:	mov    rcx,rsi
  405283:	add    rsp,0x28
  405287:	pop    rbx
  405288:	pop    rsi
  405289:	jmp    0x411400
  40528e:	xchg   ax,ax
  405290:	call   QWORD PTR [rip+0x1a222]        # 0x41f4b8
  405296:	cmp    eax,0xe8
  40529b:	je     0x4052a4
  40529d:	mov    esi,0xffffffff
  4052a2:	jmp    0x405276
  4052a4:	mov    rcx,rbx
  4052a7:	call   0x411490
  4052ac:	test   eax,eax
  4052ae:	je     0x40529d
  4052b0:	mov    rcx,rbx
  4052b3:	call   0x411370
  4052b8:	test   eax,eax
  4052ba:	js     0x40529d
  4052bc:	mov    ecx,eax
  4052be:	call   0x404700
  4052c3:	mov    rcx,rax
  4052c6:	call   QWORD PTR [rip+0x1a1e4]        # 0x41f4b0
  4052cc:	cmp    eax,0x3
  4052cf:	jne    0x40529d
  4052d1:	mov    ecx,0xd
  4052d6:	call   0x40a2b0
  4052db:	call   QWORD PTR [rip+0x1a32f]        # 0x41f610
  4052e1:	mov    DWORD PTR [rax],0x20
  4052e7:	jmp    0x405276
  4052e9:	nop    DWORD PTR [rax+0x0]
  4052f0:	push   rbp
  4052f1:	push   rdi
  4052f2:	push   rsi
  4052f3:	push   rbx
  4052f4:	sub    rsp,0x28
  4052f8:	mov    rdi,rcx
  4052fb:	mov    rcx,r9
  4052fe:	mov    rbp,rdx
  405301:	mov    rsi,r8
  405304:	mov    rbx,r9
  405307:	call   0x411490
  40530c:	test   eax,eax
  40530e:	jne    0x405340
  405310:	xor    ecx,ecx
  405312:	call   QWORD PTR [rip+0x1a238]        # 0x41f550
  405318:	mov    rcx,rdi
  40531b:	mov    r9,rbx
  40531e:	mov    r8,rsi
  405321:	mov    rdx,rbp
  405324:	call   0x411458
  405329:	cmp    rsi,rax
  40532c:	mov    rdi,rax
  40532f:	ja     0x405360
  405331:	mov    rax,rdi
  405334:	add    rsp,0x28
  405338:	pop    rbx
  405339:	pop    rsi
  40533a:	pop    rdi
  40533b:	pop    rbp
  40533c:	ret    
  40533d:	nop    DWORD PTR [rax]
  405340:	mov    r9,rbx
  405343:	mov    r8,rsi
  405346:	mov    rdx,rbp
  405349:	mov    rcx,rdi
  40534c:	add    rsp,0x28
  405350:	pop    rbx
  405351:	pop    rsi
  405352:	pop    rdi
  405353:	pop    rbp
  405354:	jmp    0x411458
  405359:	nop    DWORD PTR [rax+0x0]
  405360:	call   QWORD PTR [rip+0x1a152]        # 0x41f4b8
  405366:	cmp    eax,0xe8
  40536b:	jne    0x405331
  40536d:	mov    rcx,rbx
  405370:	call   0x411490
  405375:	test   eax,eax
  405377:	je     0x405331
  405379:	mov    rcx,rbx
  40537c:	call   0x411370
  405381:	test   eax,eax
  405383:	js     0x405331
  405385:	mov    ecx,eax
  405387:	call   0x404700
  40538c:	mov    rcx,rax
  40538f:	call   QWORD PTR [rip+0x1a11b]        # 0x41f4b0
  405395:	cmp    eax,0x3
  405398:	jne    0x405331
  40539a:	mov    ecx,0xd
  40539f:	call   0x40a2b0
  4053a4:	call   QWORD PTR [rip+0x1a266]        # 0x41f610
  4053aa:	mov    DWORD PTR [rax],0x20
  4053b0:	jmp    0x405331
  4053b5:	nop
  4053b6:	nop
  4053b7:	nop
  4053b8:	nop
  4053b9:	nop
  4053ba:	nop
  4053bb:	nop
  4053bc:	nop
  4053bd:	nop
  4053be:	nop
  4053bf:	nop
  4053c0:	sub    rsp,0x38
  4053c4:	lea    rdx,[rip+0x10bf5]        # 0x415fc0
  4053cb:	lea    rcx,[rip+0x16d2e]        # 0x41c100
  4053d2:	mov    QWORD PTR [rsp+0x50],r8
  4053d7:	lea    r8,[rsp+0x50]
  4053dc:	mov    QWORD PTR [rsp+0x58],r9
  4053e1:	mov    QWORD PTR [rsp+0x28],r8
  4053e6:	call   0x40cb80
  4053eb:	add    rsp,0x38
  4053ef:	ret    
  4053f0:	push   rdi
  4053f1:	push   rsi
  4053f2:	push   rbx
  4053f3:	sub    rsp,0x20
  4053f7:	mov    ebx,ecx
  4053f9:	call   0x4054e0
  4053fe:	test   rax,rax
  405401:	je     0x405410
  405403:	add    rsp,0x20
  405407:	pop    rbx
  405408:	pop    rsi
  405409:	pop    rdi
  40540a:	ret    
  40540b:	nop    DWORD PTR [rax+rax*1+0x0]
  405410:	mov    ecx,ebx
  405412:	call   0x4113c0
  405417:	test   rax,rax
  40541a:	mov    rsi,rax
  40541d:	je     0x4054a0
  405423:	cmp    BYTE PTR [rax],0x0
  405426:	je     0x4054a0
  405428:	mov    rcx,rax
  40542b:	call   0x4113b8
  405430:	cmp    rax,0xff
  405436:	ja     0x4054ce
  40543c:	add    rax,0x1
  405440:	lea    rdi,[rip+0x16cb9]        # 0x41c100
  405447:	cmp    eax,0x8
  40544a:	jae    0x405490
  40544c:	xor    edx,edx
  40544e:	test   al,0x4
  405450:	jne    0x405480
  405452:	test   al,0x2
  405454:	jne    0x405470
  405456:	test   al,0x1
  405458:	jne    0x405463
  40545a:	lea    rax,[rip+0x16c9f]        # 0x41c100
  405461:	jmp    0x405403
  405463:	movzx  eax,BYTE PTR [rsi+rdx*1]
  405467:	mov    BYTE PTR [rdi+rdx*1],al
  40546a:	jmp    0x40545a
  40546c:	nop    DWORD PTR [rax+0x0]
  405470:	movzx  ecx,WORD PTR [rsi+rdx*1]
  405474:	mov    WORD PTR [rdi+rdx*1],cx
  405478:	add    rdx,0x2
  40547c:	jmp    0x405456
  40547e:	xchg   ax,ax
  405480:	mov    edx,DWORD PTR [rsi]
  405482:	mov    DWORD PTR [rdi],edx
  405484:	mov    edx,0x4
  405489:	jmp    0x405452
  40548b:	nop    DWORD PTR [rax+rax*1+0x0]
  405490:	mov    ecx,eax
  405492:	shr    ecx,0x3
  405495:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  405498:	jmp    0x40544c
  40549a:	nop    WORD PTR [rax+rax*1+0x0]
  4054a0:	lea    rdx,[rip+0x10b19]        # 0x415fc0
  4054a7:	lea    rcx,[rip+0x16c52]        # 0x41c100
  4054ae:	mov    r8d,ebx
  4054b1:	call   0x4053c0
  4054b6:	call   QWORD PTR [rip+0x1a154]        # 0x41f610
  4054bc:	mov    DWORD PTR [rax],0x16
  4054c2:	lea    rax,[rip+0x16c37]        # 0x41c100
  4054c9:	jmp    0x405403
  4054ce:	call   0x4114b0
  4054d3:	nop
  4054d4:	nop
  4054d5:	nop
  4054d6:	nop
  4054d7:	nop
  4054d8:	nop
  4054d9:	nop
  4054da:	nop
  4054db:	nop
  4054dc:	nop
  4054dd:	nop
  4054de:	nop
  4054df:	nop
  4054e0:	cmp    ecx,0x2754
  4054e6:	je     0x405890
  4054ec:	jg     0x405542
  4054ee:	cmp    ecx,0x89
  4054f4:	je     0x405870
  4054fa:	jg     0x4055a3
  405500:	cmp    ecx,0x79
  405503:	je     0x4058a0
  405509:	jle    0x4056d1
  40550f:	cmp    ecx,0x7d
  405512:	lea    rax,[rip+0x10b09]        # 0x416022
  405519:	je     0x405540
  40551b:	jle    0x4057e0
  405521:	cmp    ecx,0x7f
  405524:	lea    rax,[rip+0x10ef5]        # 0x416420
  40552b:	je     0x405540
  40552d:	cmp    ecx,0x83
  405533:	lea    rax,[rip+0x10b0a]        # 0x416044
  40553a:	jne    0x4055a0
  40553c:	nop    DWORD PTR [rax+0x0]
  405540:	repz ret 
  405542:	cmp    ecx,0x2779
  405548:	je     0x405880
  40554e:	jg     0x4055f2
  405554:	cmp    ecx,0x276c
  40555a:	je     0x405861
  405560:	jg     0x405710
  405566:	cmp    ecx,0x2756
  40556c:	lea    rax,[rip+0x10bab]        # 0x41611e
  405573:	je     0x405540
  405575:	lea    rax,[rip+0x10b8e]        # 0x41610a
  40557c:	jl     0x405540
  40557e:	cmp    ecx,0x2757
  405584:	lea    rax,[rip+0x10ba9]        # 0x416134
  40558b:	je     0x405540
  40558d:	cmp    ecx,0x276b
  405593:	lea    rax,[rip+0x10c36]        # 0x4161d0
  40559a:	je     0x405540
  40559c:	nop    DWORD PTR [rax+0x0]
  4055a0:	xor    eax,eax
  4055a2:	ret    
  4055a3:	cmp    ecx,0x273c
  4055a9:	je     0x4058c0
  4055af:	jle    0x405645
  4055b5:	cmp    ecx,0x274b
  4055bb:	lea    rax,[rip+0x10af6]        # 0x4160b8
  4055c2:	je     0x405540
  4055c8:	jle    0x405750
  4055ce:	cmp    ecx,0x2750
  4055d4:	lea    rax,[rip+0x10b00]        # 0x4160db
  4055db:	je     0x405540
  4055e1:	cmp    ecx,0x2753
  4055e7:	lea    rax,[rip+0x10afa]        # 0x4160e8
  4055ee:	jne    0x4055a0
  4055f0:	repz ret 
  4055f2:	cmp    ecx,0x277f
  4055f8:	je     0x4058b0
  4055fe:	jle    0x405690
  405604:	cmp    ecx,0x2afa
  40560a:	lea    rax,[rip+0x10d47]        # 0x416358
  405611:	je     0x405540
  405617:	jle    0x4057b0
  40561d:	cmp    ecx,0x2afb
  405623:	lea    rax,[rip+0x10d4e]        # 0x416378
  40562a:	je     0x405540
  405630:	cmp    ecx,0x2afc
  405636:	lea    rax,[rip+0x10d53]        # 0x416390
  40563d:	jne    0x4055a0
  405643:	repz ret 
  405645:	cmp    ecx,0x3e4
  40564b:	lea    rax,[rip+0x10b16]        # 0x416168
  405652:	je     0x405540
  405658:	jle    0x405780
  40565e:	cmp    ecx,0x3e5
  405664:	lea    rax,[rip+0x10b35]        # 0x4161a0
  40566b:	je     0x405540
  405671:	cmp    ecx,0x7d4
  405677:	lea    rax,[rip+0x10d83]        # 0x416401
  40567e:	jne    0x4055a0
  405684:	repz ret 
  405686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405690:	cmp    ecx,0x277c
  405696:	lea    rax,[rip+0x10c65]        # 0x416302
  40569d:	je     0x405540
  4056a3:	jg     0x405823
  4056a9:	cmp    ecx,0x277a
  4056af:	lea    rax,[rip+0x10c12]        # 0x4162c8
  4056b6:	je     0x405540
  4056bc:	cmp    ecx,0x277b
  4056c2:	lea    rax,[rip+0x10c25]        # 0x4162ee
  4056c9:	jne    0x4055a0
  4056cf:	repz ret 
  4056d1:	cmp    ecx,0x68
  4056d4:	lea    rax,[rip+0x10d39]        # 0x416414
  4056db:	je     0x405540
  4056e1:	jle    0x405850
  4056e7:	cmp    ecx,0x6f
  4056ea:	lea    rax,[rip+0x10ce7]        # 0x4163d8
  4056f1:	je     0x405540
  4056f7:	cmp    ecx,0x78
  4056fa:	lea    rax,[rip+0x108f6]        # 0x415ff7
  405701:	jne    0x4055a0
  405707:	repz ret 
  405709:	nop    DWORD PTR [rax+0x0]
  405710:	cmp    ecx,0x2776
  405716:	je     0x405842
  40571c:	jg     0x405802
  405722:	cmp    ecx,0x276d
  405728:	lea    rax,[rip+0x10af1]        # 0x416220
  40572f:	je     0x405540
  405735:	cmp    ecx,0x2775
  40573b:	lea    rax,[rip+0x10b06]        # 0x416248
  405742:	jne    0x4055a0
  405748:	repz ret 
  40574a:	nop    WORD PTR [rax+rax*1+0x0]
  405750:	cmp    ecx,0x273e
  405756:	lea    rax,[rip+0x1090d]        # 0x41606a
  40575d:	je     0x405540
  405763:	cmp    ecx,0x274a
  405769:	lea    rax,[rip+0x10918]        # 0x416088
  405770:	jne    0x4055a0
  405776:	repz ret 
  405778:	nop    DWORD PTR [rax+rax*1+0x0]
  405780:	cmp    ecx,0x8b
  405786:	lea    rax,[rip+0x1085b]        # 0x415fe8
  40578d:	je     0x405540
  405793:	cmp    ecx,0x3e3
  405799:	lea    rax,[rip+0x109a5]        # 0x416145
  4057a0:	jne    0x4055a0
  4057a6:	repz ret 
  4057a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4057b0:	cmp    ecx,0x2780
  4057b6:	lea    rax,[rip+0x10b6c]        # 0x416329
  4057bd:	je     0x405540
  4057c3:	cmp    ecx,0x2af9
  4057c9:	lea    rax,[rip+0x10b74]        # 0x416344
  4057d0:	jne    0x4055a0
  4057d6:	repz ret 
  4057d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4057e0:	cmp    ecx,0x7a
  4057e3:	lea    rax,[rip+0x10bd3]        # 0x4163bd
  4057ea:	je     0x405540
  4057f0:	cmp    ecx,0x7c
  4057f3:	lea    rax,[rip+0x1080f]        # 0x416009
  4057fa:	jne    0x4055a0
  405800:	repz ret 
  405802:	cmp    ecx,0x2777
  405808:	je     0x4058b0
  40580e:	cmp    ecx,0x2778
  405814:	lea    rax,[rip+0x10a6d]        # 0x416288
  40581b:	jne    0x4055a0
  405821:	repz ret 
  405823:	cmp    ecx,0x277d
  405829:	lea    rax,[rip+0x10ae4]        # 0x416314
  405830:	je     0x405540
  405836:	cmp    ecx,0x277e
  40583c:	jne    0x4055a0
  405842:	lea    rax,[rip+0x10a1d]        # 0x416266
  405849:	ret    
  40584a:	nop    WORD PTR [rax+rax*1+0x0]
  405850:	test   ecx,ecx
  405852:	lea    rax,[rip+0x10787]        # 0x415fe0
  405859:	jne    0x4055a0
  40585f:	repz ret 
  405861:	lea    rax,[rip+0x10990]        # 0x4161f8
  405868:	ret    
  405869:	nop    DWORD PTR [rax+0x0]
  405870:	lea    rax,[rip+0x107bf]        # 0x416036
  405877:	ret    
  405878:	nop    DWORD PTR [rax+rax*1+0x0]
  405880:	lea    rax,[rip+0x10a21]        # 0x4162a8
  405887:	ret    
  405888:	nop    DWORD PTR [rax+rax*1+0x0]
  405890:	lea    rax,[rip+0x10864]        # 0x4160fb
  405897:	ret    
  405898:	nop    DWORD PTR [rax+rax*1+0x0]
  4058a0:	lea    rax,[rip+0x10b44]        # 0x4163eb
  4058a7:	ret    
  4058a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4058b0:	lea    rax,[rip+0x109bf]        # 0x416276
  4058b7:	ret    
  4058b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4058c0:	lea    rax,[rip+0x10789]        # 0x416050
  4058c7:	ret    
  4058c8:	nop
  4058c9:	nop
  4058ca:	nop
  4058cb:	nop
  4058cc:	nop
  4058cd:	nop
  4058ce:	nop
  4058cf:	nop
  4058d0:	cmp    rcx,rdx
  4058d3:	jne    0x4058ed
  4058d5:	jmp    0x405924
  4058d7:	nop    WORD PTR [rax+rax*1+0x0]
  4058e0:	add    rcx,0x1
  4058e4:	add    rdx,0x1
  4058e8:	cmp    al,r8b
  4058eb:	jne    0x405919
  4058ed:	movzx  r8d,BYTE PTR [rcx]
  4058f1:	lea    r9d,[r8-0x41]
  4058f5:	lea    eax,[r8+0x20]
  4058f9:	cmp    r9d,0x19
  4058fd:	movzx  r9d,BYTE PTR [rdx]
  405901:	cmova  eax,r8d
  405905:	lea    r11d,[r9-0x41]
  405909:	lea    r8d,[r9+0x20]
  40590d:	cmp    r11d,0x19
  405911:	cmova  r8d,r9d
  405915:	test   al,al
  405917:	jne    0x4058e0
  405919:	movzx  r8d,r8b
  40591d:	movzx  eax,al
  405920:	sub    eax,r8d
  405923:	ret    
  405924:	xor    eax,eax
  405926:	ret    
  405927:	nop
  405928:	nop
  405929:	nop
  40592a:	nop
  40592b:	nop
  40592c:	nop
  40592d:	nop
  40592e:	nop
  40592f:	nop
  405930:	sub    rsp,0x38
  405934:	lea    rcx,[rip+0x168c5]        # 0x41c200
  40593b:	mov    QWORD PTR [rsp+0x50],r8
  405940:	lea    r8,[rsp+0x50]
  405945:	mov    QWORD PTR [rsp+0x58],r9
  40594a:	mov    QWORD PTR [rsp+0x28],r8
  40594f:	call   0x40cb80
  405954:	add    rsp,0x38
  405958:	ret    
  405959:	nop    DWORD PTR [rax+0x0]
  405960:	push   rsi
  405961:	push   rbx
  405962:	sub    rsp,0x28
  405966:	xor    edx,edx
  405968:	xor    ecx,ecx
  40596a:	call   0x404c00
  40596f:	mov    edx,0x3b
  405974:	mov    rcx,rax
  405977:	mov    rbx,rax
  40597a:	call   0x4113d8
  40597f:	test   rax,rax
  405982:	je     0x405993
  405984:	xor    edx,edx
  405986:	mov    ecx,0x2
  40598b:	call   0x404c00
  405990:	mov    rbx,rax
  405993:	mov    edx,0x2e
  405998:	mov    rcx,rbx
  40599b:	call   0x4113a0
  4059a0:	test   rax,rax
  4059a3:	je     0x405a53
  4059a9:	lea    r8,[rax+0x1]
  4059ad:	lea    rdx,[rip+0x10c12]        # 0x4165c6
  4059b4:	lea    rcx,[rip+0x16845]        # 0x41c200
  4059bb:	call   0x405930
  4059c0:	mov    rbx,QWORD PTR [rip+0x16849]        # 0x41c210
  4059c7:	test   rbx,rbx
  4059ca:	jne    0x4059ea
  4059cc:	jmp    0x405a40
  4059ce:	xchg   ax,ax
  4059d0:	mov    rcx,rbx
  4059d3:	call   0x4113b8
  4059d8:	lea    rbx,[rbx+rax*1+0x1]
  4059dd:	mov    rcx,rbx
  4059e0:	call   0x4113b8
  4059e5:	lea    rbx,[rbx+rax*1+0x1]
  4059ea:	movzx  esi,BYTE PTR [rbx]
  4059ed:	test   sil,sil
  4059f0:	je     0x405a33
  4059f2:	lea    rcx,[rip+0x16807]        # 0x41c200
  4059f9:	mov    rdx,rbx
  4059fc:	call   0x4113d0
  405a01:	test   eax,eax
  405a03:	je     0x405a11
  405a05:	cmp    sil,0x2a
  405a09:	jne    0x4059d0
  405a0b:	cmp    BYTE PTR [rbx+0x1],0x0
  405a0f:	jne    0x4059d0
  405a11:	mov    rcx,rbx
  405a14:	call   0x4113b8
  405a19:	lea    rax,[rbx+rax*1+0x1]
  405a1e:	cmp    BYTE PTR [rax],0x0
  405a21:	lea    rdx,[rip+0x10b98]        # 0x4165c0
  405a28:	cmove  rax,rdx
  405a2c:	add    rsp,0x28
  405a30:	pop    rbx
  405a31:	pop    rsi
  405a32:	ret    
  405a33:	lea    rax,[rip+0x167c6]        # 0x41c200
  405a3a:	jmp    0x405a1e
  405a3c:	nop    DWORD PTR [rax+0x0]
  405a40:	lea    rax,[rip+0x109f9]        # 0x416440
  405a47:	mov    QWORD PTR [rip+0x167c2],rax        # 0x41c210
  405a4e:	mov    rbx,rax
  405a51:	jmp    0x4059ea
  405a53:	call   QWORD PTR [rip+0x19a37]        # 0x41f490
  405a59:	lea    rdx,[rip+0x10b6b]        # 0x4165cb
  405a60:	lea    rcx,[rip+0x16799]        # 0x41c200
  405a67:	mov    r8d,eax
  405a6a:	call   0x405930
  405a6f:	jmp    0x4059c0
  405a74:	nop
  405a75:	nop
  405a76:	nop
  405a77:	nop
  405a78:	nop
  405a79:	nop
  405a7a:	nop
  405a7b:	nop
  405a7c:	nop
  405a7d:	nop
  405a7e:	nop
  405a7f:	nop
  405a80:	push   rdi
  405a81:	push   rsi
  405a82:	push   rbx
  405a83:	sub    rsp,0xe0
  405a8a:	mov    r8d,0x10
  405a90:	lea    rdx,[rsp+0x28]
  405a95:	lea    rbx,[rsp+0x30]
  405a9a:	call   0x411398
  405a9f:	mov    r9d,0x55
  405aa5:	mov    esi,eax
  405aa7:	mov    r8,rbx
  405aaa:	mov    edx,0x1001
  405aaf:	mov    ecx,eax
  405ab1:	mov    rdi,QWORD PTR [rip+0x19a08]        # 0x41f4c0
  405ab8:	call   rdi
  405aba:	test   eax,eax
  405abc:	jne    0x405ad0
  405abe:	mov    eax,0x1
  405ac3:	add    rsp,0xe0
  405aca:	pop    rbx
  405acb:	pop    rsi
  405acc:	pop    rdi
  405acd:	ret    
  405ace:	xchg   ax,ax
  405ad0:	mov    r8,rbx
  405ad3:	mov    eax,DWORD PTR [r8]
  405ad6:	add    r8,0x4
  405ada:	lea    edx,[rax-0x1010101]
  405ae0:	not    eax
  405ae2:	and    edx,eax
  405ae4:	and    edx,0x80808080
  405aea:	je     0x405ad3
  405aec:	mov    eax,edx
  405aee:	mov    r9d,0x55
  405af4:	mov    ecx,esi
  405af6:	shr    eax,0x10
  405af9:	test   edx,0x8080
  405aff:	cmove  edx,eax
  405b02:	lea    rax,[r8+0x2]
  405b06:	cmove  r8,rax
  405b0a:	add    dl,dl
  405b0c:	mov    eax,0x5f
  405b11:	sbb    r8,0x3
  405b15:	mov    edx,0x1002
  405b1a:	sub    r8,rbx
  405b1d:	mov    WORD PTR [rbx+r8*1],ax
  405b22:	lea    r8,[rbx+r8*1+0x1]
  405b27:	call   rdi
  405b29:	test   eax,eax
  405b2b:	je     0x405abe
  405b2d:	mov    rdi,rbx
  405b30:	mov    eax,DWORD PTR [rdi]
  405b32:	add    rdi,0x4
  405b36:	lea    edx,[rax-0x1010101]
  405b3c:	not    eax
  405b3e:	and    edx,eax
  405b40:	and    edx,0x80808080
  405b46:	je     0x405b30
  405b48:	mov    eax,edx
  405b4a:	mov    rcx,rbx
  405b4d:	shr    eax,0x10
  405b50:	test   edx,0x8080
  405b56:	cmove  edx,eax
  405b59:	lea    rax,[rdi+0x2]
  405b5d:	cmove  rdi,rax
  405b61:	add    dl,dl
  405b63:	lea    rdx,[rip+0x16bd6]        # 0x41c740
  405b6a:	sbb    rdi,0x3
  405b6e:	sub    rdi,rbx
  405b71:	mov    r8,rdi
  405b74:	call   0x4113b0
  405b79:	test   eax,eax
  405b7b:	jne    0x405abe
  405b81:	lea    rdx,[rip+0x16bb8]        # 0x41c740
  405b88:	movzx  edx,BYTE PTR [rdx+rdi*1]
  405b8c:	test   dl,dl
  405b8e:	je     0x405b99
  405b90:	cmp    dl,0x2e
  405b93:	jne    0x405abe
  405b99:	mov    DWORD PTR [rip+0x16d51],esi        # 0x41c8f0
  405b9f:	jmp    0x405ac3
  405ba4:	xchg   ax,ax
  405ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405bb0:	push   rbx
  405bb1:	sub    rsp,0x20
  405bb5:	mov    ebx,ecx
  405bb7:	lea    rcx,[rip+0x11286]        # 0x416e44
  405bbe:	call   0x411450
  405bc3:	test   rax,rax
  405bc6:	je     0x405be7
  405bc8:	movzx  ecx,bx
  405bcb:	mov    r9d,0xff
  405bd1:	lea    r8,[rip+0x16668]        # 0x41c240
  405bd8:	mov    edx,0x5c
  405bdd:	call   QWORD PTR [rip+0x198dd]        # 0x41f4c0
  405be3:	test   eax,eax
  405be5:	jne    0x405c10
  405be7:	mov    edx,ebx
  405be9:	and    bx,0x3ff
  405bee:	shr    dx,0xa
  405bf2:	cmp    bx,0x91
  405bf7:	ja     0x406d07
  405bfd:	lea    rax,[rip+0x1124c]        # 0x416e50
  405c04:	movzx  ebx,bx
  405c07:	movsxd rcx,DWORD PTR [rax+rbx*4]
  405c0b:	add    rax,rcx
  405c0e:	jmp    rax
  405c10:	movzx  eax,BYTE PTR [rip+0x16629]        # 0x41c240
  405c17:	test   al,al
  405c19:	je     0x405c40
  405c1b:	cmp    al,0x2d
  405c1d:	lea    rax,[rip+0x1661c]        # 0x41c240
  405c24:	jne    0x405c35
  405c26:	jmp    0x405c60
  405c28:	nop    DWORD PTR [rax+rax*1+0x0]
  405c30:	cmp    dl,0x2d
  405c33:	je     0x405c60
  405c35:	add    rax,0x1
  405c39:	movzx  edx,BYTE PTR [rax]
  405c3c:	test   dl,dl
  405c3e:	jne    0x405c30
  405c40:	lea    rax,[rip+0x165f9]        # 0x41c240
  405c47:	nop    WORD PTR [rax+rax*1+0x0]
  405c50:	add    rsp,0x20
  405c54:	pop    rbx
  405c55:	ret    
  405c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c60:	mov    BYTE PTR [rax],0x5f
  405c63:	lea    rdx,[rax+0x1]
  405c67:	movzx  eax,BYTE PTR [rax+0x1]
  405c6b:	test   al,al
  405c6d:	jne    0x405c85
  405c6f:	jmp    0x405c40
  405c71:	cmp    BYTE PTR [rdx],0x2d
  405c74:	je     0x4072b0
  405c7a:	add    rdx,0x1
  405c7e:	movzx  eax,BYTE PTR [rdx]
  405c81:	test   al,al
  405c83:	je     0x405c40
  405c85:	lea    ecx,[rax-0x61]
  405c88:	cmp    cl,0x19
  405c8b:	ja     0x405c71
  405c8d:	sub    eax,0x20
  405c90:	mov    BYTE PTR [rdx],al
  405c92:	jmp    0x405c7a
  405c94:	cmp    dx,0x1
  405c98:	lea    rax,[rip+0x10c65]        # 0x416904
  405c9f:	lea    rdx,[rip+0x10f5d]        # 0x416c03
  405ca6:	cmovne rax,rdx
  405caa:	jmp    0x405c50
  405cac:	cmp    dx,0x1
  405cb0:	lea    rax,[rip+0x10b1d]        # 0x4167d4
  405cb7:	lea    rdx,[rip+0x10b1d]        # 0x4167db
  405cbe:	cmovne rax,rdx
  405cc2:	jmp    0x405c50
  405cc4:	cmp    dx,0x1
  405cc8:	lea    rax,[rip+0x1114f]        # 0x416e1e
  405ccf:	lea    rdx,[rip+0x1114e]        # 0x416e24
  405cd6:	cmovne rax,rdx
  405cda:	jmp    0x405c50
  405cdf:	cmp    dx,0x1
  405ce3:	lea    rax,[rip+0x10d49]        # 0x416a33
  405cea:	lea    rdx,[rip+0x10d48]        # 0x416a39
  405cf1:	cmovne rax,rdx
  405cf5:	jmp    0x405c50
  405cfa:	cmp    dx,0x1
  405cfe:	lea    rax,[rip+0x10d23]        # 0x416a28
  405d05:	lea    rdx,[rip+0x10d23]        # 0x416a2f
  405d0c:	cmovne rax,rdx
  405d10:	jmp    0x405c50
  405d15:	cmp    dx,0x1
  405d19:	lea    rax,[rip+0x11110]        # 0x416e30
  405d20:	lea    rdx,[rip+0x11110]        # 0x416e37
  405d27:	cmovne rax,rdx
  405d2b:	jmp    0x405c50
  405d30:	cmp    dx,0x1
  405d34:	lea    rax,[rip+0x108a7]        # 0x4165e2
  405d3b:	lea    rdx,[rip+0x108a7]        # 0x4165e9
  405d42:	cmovne rax,rdx
  405d46:	jmp    0x405c50
  405d4b:	cmp    dx,0x1
  405d4f:	lea    rax,[rip+0x109cb]        # 0x416721
  405d56:	lea    rdx,[rip+0x109ca]        # 0x416727
  405d5d:	cmovne rax,rdx
  405d61:	jmp    0x405c50
  405d66:	cmp    dx,0x1
  405d6a:	lea    rax,[rip+0x10da5]        # 0x416b16
  405d71:	lea    rdx,[rip+0x10da4]        # 0x416b1c
  405d78:	cmovne rax,rdx
  405d7c:	jmp    0x405c50
  405d81:	cmp    dx,0x1
  405d85:	lea    rax,[rip+0x10d2f]        # 0x416abb
  405d8c:	lea    rdx,[rip+0x10d2e]        # 0x416ac1
  405d93:	cmovne rax,rdx
  405d97:	jmp    0x405c50
  405d9c:	cmp    dx,0x1
  405da0:	lea    rax,[rip+0x11011]        # 0x416db8
  405da7:	lea    rdx,[rip+0x11010]        # 0x416dbe
  405dae:	cmovne rax,rdx
  405db2:	jmp    0x405c50
  405db7:	cmp    dx,0x1
  405dbb:	lea    rax,[rip+0x10906]        # 0x4166c8
  405dc2:	lea    rdx,[rip+0x10905]        # 0x4166ce
  405dc9:	cmovne rax,rdx
  405dcd:	jmp    0x405c50
  405dd2:	cmp    dx,0x1
  405dd6:	lea    rax,[rip+0x10cfb]        # 0x416ad8
  405ddd:	lea    rdx,[rip+0x10cfb]        # 0x416adf
  405de4:	cmovne rax,rdx
  405de8:	jmp    0x405c50
  405ded:	cmp    dx,0x1
  405df1:	lea    rax,[rip+0x10ccc]        # 0x416ac4
  405df8:	lea    rdx,[rip+0x10ccc]        # 0x416acb
  405dff:	cmovne rax,rdx
  405e03:	jmp    0x405c50
  405e08:	cmp    dx,0x1
  405e0c:	lea    rax,[rip+0x10d1e]        # 0x416b31
  405e13:	lea    rdx,[rip+0x10d1e]        # 0x416b38
  405e1a:	cmovne rax,rdx
  405e1e:	jmp    0x405c50
  405e23:	cmp    dx,0x1
  405e27:	lea    rax,[rip+0x1100d]        # 0x416e3b
  405e2e:	lea    rdx,[rip+0x1100c]        # 0x416e41
  405e35:	cmovne rax,rdx
  405e39:	jmp    0x405c50
  405e3e:	cmp    dx,0x1
  405e42:	lea    rax,[rip+0x10de7]        # 0x416c30
  405e49:	lea    rdx,[rip+0x10de6]        # 0x416c36
  405e50:	cmovne rax,rdx
  405e54:	jmp    0x405c50
  405e59:	cmp    dx,0x1
  405e5d:	lea    rax,[rip+0x10bfe]        # 0x416a62
  405e64:	lea    rdx,[rip+0x10bfd]        # 0x416a68
  405e6b:	cmovne rax,rdx
  405e6f:	jmp    0x405c50
  405e74:	cmp    dx,0x1
  405e78:	lea    rax,[rip+0x10af7]        # 0x416976
  405e7f:	lea    rdx,[rip+0x10af7]        # 0x41697d
  405e86:	cmovne rax,rdx
  405e8a:	jmp    0x405c50
  405e8f:	cmp    dx,0x1
  405e93:	lea    rax,[rip+0x10abe]        # 0x416958
  405e9a:	lea    rdx,[rip+0x10abd]        # 0x41695e
  405ea1:	cmovne rax,rdx
  405ea5:	jmp    0x405c50
  405eaa:	cmp    dx,0x1
  405eae:	lea    rax,[rip+0x10ed0]        # 0x416d85
  405eb5:	je     0x405c50
  405ebb:	cmp    dx,0x2
  405ebf:	lea    rax,[rip+0x10ec5]        # 0x416d8b
  405ec6:	lea    rdx,[rip+0x10ec4]        # 0x416d91
  405ecd:	cmovne rax,rdx
  405ed1:	jmp    0x405c50
  405ed6:	cmp    dx,0x1
  405eda:	lea    rax,[rip+0x10c47]        # 0x416b28
  405ee1:	lea    rdx,[rip+0x10c46]        # 0x416b2e
  405ee8:	cmovne rax,rdx
  405eec:	jmp    0x405c50
  405ef1:	cmp    dx,0x1
  405ef5:	lea    rax,[rip+0x10b0b]        # 0x416a07
  405efc:	lea    rdx,[rip+0x10b0a]        # 0x416a0d
  405f03:	cmovne rax,rdx
  405f07:	jmp    0x405c50
  405f0c:	cmp    dx,0x1
  405f10:	lea    rax,[rip+0x10a99]        # 0x4169b0
  405f17:	lea    rdx,[rip+0x10a98]        # 0x4169b6
  405f1e:	cmovne rax,rdx
  405f22:	jmp    0x405c50
  405f27:	cmp    dx,0x1
  405f2b:	lea    rax,[rip+0x10a1d]        # 0x41694f
  405f32:	lea    rdx,[rip+0x10a1c]        # 0x416955
  405f39:	cmovne rax,rdx
  405f3d:	jmp    0x405c50
  405f42:	cmp    dx,0x1
  405f46:	lea    rax,[rip+0x10b30]        # 0x416a7d
  405f4d:	lea    rdx,[rip+0x10b2f]        # 0x416a83
  405f54:	cmovne rax,rdx
  405f58:	jmp    0x405c50
  405f5d:	cmp    dx,0x1
  405f61:	lea    rax,[rip+0x10736]        # 0x41669e
  405f68:	lea    rdx,[rip+0x10735]        # 0x4166a4
  405f6f:	cmovne rax,rdx
  405f73:	jmp    0x405c50
  405f78:	cmp    dx,0x1
  405f7c:	lea    rax,[rip+0x10cd0]        # 0x416c53
  405f83:	lea    rdx,[rip+0x10cd0]        # 0x416c5a
  405f8a:	cmovne rax,rdx
  405f8e:	jmp    0x405c50
  405f93:	cmp    dx,0x2
  405f97:	lea    rax,[rip+0x10bd4]        # 0x416b72
  405f9e:	je     0x405c50
  405fa4:	cmp    dx,0x3
  405fa8:	lea    rax,[rip+0x10bc9]        # 0x416b78
  405faf:	je     0x405c50
  405fb5:	cmp    dx,0x1
  405fb9:	lea    rax,[rip+0x10bac]        # 0x416b6c
  405fc0:	lea    rdx,[rip+0x10bb7]        # 0x416b7e
  405fc7:	cmovne rax,rdx
  405fcb:	jmp    0x405c50
  405fd0:	cmp    dx,0x1
  405fd4:	lea    rax,[rip+0x10d4b]        # 0x416d26
  405fdb:	lea    rdx,[rip+0x10c15]        # 0x416bf7
  405fe2:	cmovne rax,rdx
  405fe6:	jmp    0x405c50
  405feb:	cmp    dx,0x1
  405fef:	lea    rax,[rip+0x109a6]        # 0x41699c
  405ff6:	lea    rdx,[rip+0x109a6]        # 0x4169a3
  405ffd:	cmovne rax,rdx
  406001:	jmp    0x405c50
  406006:	cmp    dx,0x1
  40600a:	lea    rax,[rip+0x1095c]        # 0x41696d
  406011:	lea    rdx,[rip+0x10952]        # 0x41696a
  406018:	cmovne rax,rdx
  40601c:	jmp    0x405c50
  406021:	cmp    dx,0x1
  406025:	lea    rax,[rip+0x108cf]        # 0x4168fb
  40602c:	lea    rdx,[rip+0x108ce]        # 0x416901
  406033:	cmovne rax,rdx
  406037:	jmp    0x405c50
  40603c:	cmp    dx,0x1
  406040:	lea    rax,[rip+0x107b6]        # 0x4167fd
  406047:	lea    rdx,[rip+0x107b6]        # 0x416804
  40604e:	cmovne rax,rdx
  406052:	jmp    0x405c50
  406057:	cmp    dx,0x1
  40605b:	lea    rax,[rip+0x1077d]        # 0x4167df
  406062:	lea    rdx,[rip+0x1077c]        # 0x4167e5
  406069:	cmovne rax,rdx
  40606d:	jmp    0x405c50
  406072:	cmp    dx,0x1
  406076:	lea    rax,[rip+0x10c97]        # 0x416d14
  40607d:	lea    rdx,[rip+0x10c96]        # 0x416d1a
  406084:	cmovne rax,rdx
  406088:	jmp    0x405c50
  40608d:	cmp    dx,0x1
  406091:	lea    rax,[rip+0x10aa4]        # 0x416b3c
  406098:	lea    rdx,[rip+0x10aa3]        # 0x416b42
  40609f:	cmovne rax,rdx
  4060a3:	jmp    0x405c50
  4060a8:	cmp    dx,0x1
  4060ac:	lea    rax,[rip+0x1083f]        # 0x4168f2
  4060b3:	lea    rdx,[rip+0x1083e]        # 0x4168f8
  4060ba:	cmovne rax,rdx
  4060be:	jmp    0x405c50
  4060c3:	cmp    dx,0x1
  4060c7:	lea    rax,[rip+0x10a24]        # 0x416af2
  4060ce:	je     0x405c50
  4060d4:	cmp    dx,0x2
  4060d8:	lea    rax,[rip+0x10a19]        # 0x416af8
  4060df:	lea    rdx,[rip+0x10a18]        # 0x416afe
  4060e6:	cmovne rax,rdx
  4060ea:	jmp    0x405c50
  4060ef:	cmp    dx,0x1
  4060f3:	lea    rax,[rip+0x10916]        # 0x416a10
  4060fa:	je     0x405c50
  406100:	cmp    dx,0x2
  406104:	lea    rax,[rip+0x1090b]        # 0x416a16
  40610b:	lea    rdx,[rip+0x1090a]        # 0x416a1c
  406112:	cmovne rax,rdx
  406116:	jmp    0x405c50
  40611b:	cmp    dx,0x2
  40611f:	lea    rax,[rip+0x10c1e]        # 0x416d44
  406126:	je     0x405c50
  40612c:	cmp    dx,0x1f
  406130:	lea    rax,[rip+0x10c03]        # 0x416d3a
  406137:	je     0x405c50
  40613d:	cmp    dx,0x1
  406141:	lea    rax,[rip+0x10be4]        # 0x416d2c
  406148:	lea    rdx,[rip+0x10c02]        # 0x416d51
  40614f:	cmovne rax,rdx
  406153:	jmp    0x405c50
  406158:	cmp    dx,0x1
  40615c:	lea    rax,[rip+0x1048a]        # 0x4165ed
  406163:	lea    rdx,[rip+0x10489]        # 0x4165f3
  40616a:	cmovne rax,rdx
  40616e:	jmp    0x405c50
  406173:	cmp    dx,0x2
  406177:	lea    rax,[rip+0x10856]        # 0x4169d4
  40617e:	je     0x405c50
  406184:	cmp    dx,0x1f
  406188:	lea    rax,[rip+0x1083c]        # 0x4169cb
  40618f:	je     0x405c50
  406195:	cmp    dx,0x1
  406199:	lea    rax,[rip+0x10825]        # 0x4169c5
  4061a0:	lea    rdx,[rip+0x1081b]        # 0x4169c2
  4061a7:	cmovne rax,rdx
  4061ab:	jmp    0x405c50
  4061b0:	cmp    dx,0x1
  4061b4:	lea    rax,[rip+0x1053a]        # 0x4166f5
  4061bb:	lea    rdx,[rip+0x1053a]        # 0x4166fc
  4061c2:	cmovne rax,rdx
  4061c6:	jmp    0x405c50
  4061cb:	cmp    dx,0x1
  4061cf:	lea    rax,[rip+0x10a3f]        # 0x416c15
  4061d6:	lea    rdx,[rip+0x10a3e]        # 0x416c1b
  4061dd:	cmovne rax,rdx
  4061e1:	jmp    0x405c50
  4061e6:	cmp    dx,0x1
  4061ea:	lea    rax,[rip+0x10b18]        # 0x416d09
  4061f1:	lea    rdx,[rip+0x10b18]        # 0x416d10
  4061f8:	cmovne rax,rdx
  4061fc:	jmp    0x405c50
  406201:	cmp    dx,0x1
  406205:	lea    rax,[rip+0x109fa]        # 0x416c06
  40620c:	je     0x405c50
  406212:	cmp    dx,0x2
  406216:	lea    rax,[rip+0x109ef]        # 0x416c0c
  40621d:	lea    rdx,[rip+0x109ee]        # 0x416c12
  406224:	cmovne rax,rdx
  406228:	jmp    0x405c50
  40622d:	cmp    dx,0x1
  406231:	lea    rax,[rip+0x10878]        # 0x416ab0
  406238:	lea    rdx,[rip+0x10878]        # 0x416ab7
  40623f:	cmovne rax,rdx
  406243:	jmp    0x405c50
  406248:	cmp    dx,0x1
  40624c:	lea    rax,[rip+0x107e9]        # 0x416a3c
  406253:	lea    rdx,[rip+0x107e9]        # 0x416a43
  40625a:	cmovne rax,rdx
  40625e:	jmp    0x405c50
  406263:	cmp    dx,0x1
  406267:	lea    rax,[rip+0x106a5]        # 0x416913
  40626e:	lea    rdx,[rip+0x106a4]        # 0x416919
  406275:	cmovne rax,rdx
  406279:	jmp    0x405c50
  40627e:	cmp    dx,0x1
  406282:	lea    rax,[rip+0x10451]        # 0x4166da
  406289:	lea    rdx,[rip+0x10450]        # 0x4166e0
  406290:	cmovne rax,rdx
  406294:	jmp    0x405c50
  406299:	cmp    dx,0x1
  40629d:	lea    rax,[rip+0x107b5]        # 0x416a59
  4062a4:	lea    rdx,[rip+0x107b4]        # 0x416a5f
  4062ab:	cmovne rax,rdx
  4062af:	jmp    0x405c50
  4062b4:	cmp    dx,0x1
  4062b8:	lea    rax,[rip+0x10424]        # 0x4166e3
  4062bf:	lea    rdx,[rip+0x10423]        # 0x4166e9
  4062c6:	cmovne rax,rdx
  4062ca:	jmp    0x405c50
  4062cf:	cmp    dx,0x1
  4062d3:	lea    rax,[rip+0x10b3b]        # 0x416e15
  4062da:	lea    rdx,[rip+0x10b3a]        # 0x416e1b
  4062e1:	cmovne rax,rdx
  4062e5:	jmp    0x405c50
  4062ea:	cmp    dx,0x2
  4062ee:	lea    rax,[rip+0x10a87]        # 0x416d7c
  4062f5:	lea    rdx,[rip+0x10a7d]        # 0x416d79
  4062fc:	cmovne rax,rdx
  406300:	jmp    0x405c50
  406305:	cmp    dx,0x2
  406309:	je     0x406325
  40630b:	jbe    0x4072bf
  406311:	cmp    dx,0x1e
  406315:	je     0x4072d1
  40631b:	cmp    dx,0x1f
  40631f:	jne    0x4072c5
  406325:	lea    rax,[rip+0x107bd]        # 0x416ae9
  40632c:	jmp    0x405c50
  406331:	cmp    dx,0x1
  406335:	lea    rax,[rip+0x108be]        # 0x416bfa
  40633c:	lea    rdx,[rip+0x108bd]        # 0x416c00
  406343:	cmovne rax,rdx
  406347:	jmp    0x405c50
  40634c:	cmp    dx,0x1
  406350:	lea    rax,[rip+0x10778]        # 0x416acf
  406357:	lea    rdx,[rip+0x10777]        # 0x416ad5
  40635e:	cmovne rax,rdx
  406362:	jmp    0x405c50
  406367:	cmp    dx,0x1
  40636b:	lea    rax,[rip+0x102f0]        # 0x416662
  406372:	lea    rdx,[rip+0x102ef]        # 0x416668
  406379:	cmovne rax,rdx
  40637d:	jmp    0x405c50
  406382:	cmp    dx,0x1
  406386:	lea    rax,[rip+0x10711]        # 0x416a9e
  40638d:	lea    rdx,[rip+0x10710]        # 0x416aa4
  406394:	cmovne rax,rdx
  406398:	jmp    0x405c50
  40639d:	cmp    dx,0x1
  4063a1:	lea    rax,[rip+0x10656]        # 0x4169fe
  4063a8:	lea    rdx,[rip+0x10655]        # 0x416a04
  4063af:	cmovne rax,rdx
  4063b3:	jmp    0x405c50
  4063b8:	cmp    dx,0x1
  4063bc:	lea    rax,[rip+0x109a4]        # 0x416d67
  4063c3:	lea    rdx,[rip+0x109a3]        # 0x416d6d
  4063ca:	cmovne rax,rdx
  4063ce:	jmp    0x405c50
  4063d3:	cmp    dx,0x1
  4063d7:	lea    rax,[rip+0x10977]        # 0x416d55
  4063de:	lea    rdx,[rip+0x10976]        # 0x416d5b
  4063e5:	cmovne rax,rdx
  4063e9:	jmp    0x405c50
  4063ee:	cmp    dx,0x1
  4063f2:	lea    rax,[rip+0x10726]        # 0x416b1f
  4063f9:	lea    rdx,[rip+0x10725]        # 0x416b25
  406400:	cmovne rax,rdx
  406404:	jmp    0x405c50
  406409:	cmp    dx,0x1
  40640d:	lea    rax,[rip+0x1054d]        # 0x416961
  406414:	lea    rdx,[rip+0x1054c]        # 0x416967
  40641b:	cmovne rax,rdx
  40641f:	jmp    0x405c50
  406424:	cmp    dx,0x1
  406428:	lea    rax,[rip+0x1072e]        # 0x416b5d
  40642f:	je     0x405c50
  406435:	cmp    dx,0x2
  406439:	lea    rax,[rip+0x10723]        # 0x416b63
  406440:	lea    rdx,[rip+0x10722]        # 0x416b69
  406447:	cmovne rax,rdx
  40644b:	jmp    0x405c50
  406450:	cmp    dx,0x1
  406454:	lea    rax,[rip+0x1025e]        # 0x4166b9
  40645b:	je     0x405c50
  406461:	cmp    dx,0x2
  406465:	lea    rax,[rip+0x10253]        # 0x4166bf
  40646c:	lea    rdx,[rip+0x10252]        # 0x4166c5
  406473:	cmovne rax,rdx
  406477:	jmp    0x405c50
  40647c:	cmp    dx,0x1
  406480:	lea    rax,[rip+0x108d7]        # 0x416d5e
  406487:	lea    rdx,[rip+0x108d6]        # 0x416d64
  40648e:	cmovne rax,rdx
  406492:	jmp    0x405c50
  406497:	cmp    dx,0x2
  40649b:	lea    rax,[rip+0x1094c]        # 0x416dee
  4064a2:	je     0x405c50
  4064a8:	cmp    dx,0x1e
  4064ac:	lea    rax,[rip+0x1092f]        # 0x416de2
  4064b3:	je     0x405c50
  4064b9:	cmp    dx,0x1
  4064bd:	lea    rax,[rip+0x10918]        # 0x416ddc
  4064c4:	lea    rdx,[rip+0x1090e]        # 0x416dd9
  4064cb:	cmovne rax,rdx
  4064cf:	jmp    0x405c50
  4064d4:	cmp    dx,0x1
  4064d8:	lea    rax,[rip+0x108d0]        # 0x416daf
  4064df:	lea    rdx,[rip+0x108cf]        # 0x416db5
  4064e6:	cmovne rax,rdx
  4064ea:	jmp    0x405c50
  4064ef:	cmp    dx,0x1
  4064f3:	lea    rax,[rip+0x107f7]        # 0x416cf1
  4064fa:	lea    rdx,[rip+0x107f6]        # 0x416cf7
  406501:	cmovne rax,rdx
  406505:	jmp    0x405c50
  40650a:	cmp    dx,0x1
  40650e:	lea    rax,[rip+0x1053b]        # 0x416a50
  406515:	lea    rdx,[rip+0x1053a]        # 0x416a56
  40651c:	cmovne rax,rdx
  406520:	jmp    0x405c50
  406525:	cmp    dx,0x1
  406529:	lea    rax,[rip+0x104ef]        # 0x416a1f
  406530:	lea    rdx,[rip+0x104ee]        # 0x416a25
  406537:	cmovne rax,rdx
  40653b:	jmp    0x405c50
  406540:	cmp    dx,0x1
  406544:	lea    rax,[rip+0x10544]        # 0x416a8f
  40654b:	je     0x405c50
  406551:	cmp    dx,0x2
  406555:	lea    rax,[rip+0x10539]        # 0x416a95
  40655c:	lea    rdx,[rip+0x10538]        # 0x416a9b
  406563:	cmovne rax,rdx
  406567:	jmp    0x405c50
  40656c:	cmp    dx,0x1
  406570:	lea    rax,[rip+0x10886]        # 0x416dfd
  406577:	lea    rdx,[rip+0x10804]        # 0x416d82
  40657e:	cmovne rax,rdx
  406582:	jmp    0x405c50
  406587:	cmp    dx,0x1
  40658b:	lea    rax,[rip+0x10372]        # 0x416904
  406592:	je     0x405c50
  406598:	cmp    dx,0x2
  40659c:	lea    rax,[rip+0x10367]        # 0x41690a
  4065a3:	lea    rdx,[rip+0x10366]        # 0x416910
  4065aa:	cmovne rax,rdx
  4065ae:	jmp    0x405c50
  4065b3:	cmp    dx,0x1f
  4065b7:	ja     0x406dbb
  4065bd:	lea    rax,[rip+0x10ad4]        # 0x417098
  4065c4:	movzx  edx,dx
  4065c7:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4065cb:	add    rax,rdx
  4065ce:	jmp    rax
  4065d0:	cmp    dx,0x1
  4065d4:	lea    rax,[rip+0x104cc]        # 0x416aa7
  4065db:	lea    rdx,[rip+0x104cb]        # 0x416aad
  4065e2:	cmovne rax,rdx
  4065e6:	jmp    0x405c50
  4065eb:	cmp    dx,0x1
  4065ef:	lea    rax,[rip+0x10394]        # 0x41698a
  4065f6:	lea    rdx,[rip+0x10393]        # 0x416990
  4065fd:	cmovne rax,rdx
  406601:	jmp    0x405c50
  406606:	cmp    dx,0x1
  40660a:	lea    rax,[rip+0x1026f]        # 0x416880
  406611:	lea    rdx,[rip+0x1026e]        # 0x416886
  406618:	cmovne rax,rdx
  40661c:	jmp    0x405c50
  406621:	cmp    dx,0x1
  406625:	lea    rax,[rip+0x102f0]        # 0x41691c
  40662c:	lea    rdx,[rip+0x102ef]        # 0x416922
  406633:	cmovne rax,rdx
  406637:	jmp    0x405c50
  40663c:	cmp    dx,0x1
  406640:	lea    rax,[rip+0xff89]        # 0x4165d0
  406647:	lea    rdx,[rip+0xff88]        # 0x4165d6
  40664e:	cmovne rax,rdx
  406652:	jmp    0x405c50
  406657:	cmp    dx,0x1
  40665b:	lea    rax,[rip+0x1037e]        # 0x4169e0
  406662:	lea    rdx,[rip+0x1030a]        # 0x416973
  406669:	cmovne rax,rdx
  40666d:	jmp    0x405c50
  406672:	cmp    dx,0x1
  406676:	lea    rax,[rip+0x107aa]        # 0x416e27
  40667d:	lea    rdx,[rip+0x107a9]        # 0x416e2d
  406684:	cmovne rax,rdx
  406688:	jmp    0x405c50
  40668d:	cmp    dx,0x1
  406691:	lea    rax,[rip+0x1076b]        # 0x416e03
  406698:	lea    rdx,[rip+0x1076a]        # 0x416e09
  40669f:	cmovne rax,rdx
  4066a3:	jmp    0x405c50
  4066a8:	cmp    dx,0x1
  4066ac:	lea    rax,[rip+0x106ea]        # 0x416d9d
  4066b3:	lea    rdx,[rip+0x106e9]        # 0x416da3
  4066ba:	cmovne rax,rdx
  4066be:	jmp    0x405c50
  4066c3:	cmp    dx,0x1
  4066c7:	lea    rax,[rip+0x106c6]        # 0x416d94
  4066ce:	lea    rdx,[rip+0x106c5]        # 0x416d9a
  4066d5:	cmovne rax,rdx
  4066d9:	jmp    0x405c50
  4066de:	cmp    dx,0x1
  4066e2:	lea    rax,[rip+0x105fd]        # 0x416ce6
  4066e9:	lea    rdx,[rip+0x105fd]        # 0x416ced
  4066f0:	cmovne rax,rdx
  4066f4:	jmp    0x405c50
  4066f9:	cmp    dx,0x1
  4066fd:	lea    rax,[rip+0x10382]        # 0x416a86
  406704:	lea    rdx,[rip+0x10381]        # 0x416a8c
  40670b:	cmovne rax,rdx
  40670f:	jmp    0x405c50
  406714:	cmp    dx,0x1
  406718:	lea    rax,[rip+0x1051e]        # 0x416c3d
  40671f:	je     0x405c50
  406725:	lea    rax,[rip+0x1050d]        # 0x416c39
  40672c:	jb     0x405c50
  406732:	cmp    dx,0x2
  406736:	lea    rax,[rip+0x1050b]        # 0x416c48
  40673d:	je     0x405c50
  406743:	cmp    dx,0x1f
  406747:	lea    rax,[rip+0x104f6]        # 0x416c44
  40674e:	lea    rdx,[rip+0x104fa]        # 0x416c4f
  406755:	cmovne rax,rdx
  406759:	jmp    0x405c50
  40675e:	cmp    dx,0x1
  406762:	lea    rax,[rip+0xff3e]        # 0x4166a7
  406769:	lea    rdx,[rip+0xff3d]        # 0x4166ad
  406770:	cmovne rax,rdx
  406774:	jmp    0x405c50
  406779:	cmp    dx,0x2
  40677d:	lea    rax,[rip+0xff08]        # 0x41668c
  406784:	je     0x405c50
  40678a:	jbe    0x4072f3
  406790:	cmp    dx,0x1d
  406794:	lea    rax,[rip+0xfee5]        # 0x416680
  40679b:	je     0x405c50
  4067a1:	cmp    dx,0x1e
  4067a5:	lea    rax,[rip+0xfebf]        # 0x41666b
  4067ac:	je     0x405c50
  4067b2:	lea    rax,[rip+0xfee2]        # 0x41669b
  4067b9:	jmp    0x405c50
  4067be:	cmp    dx,0x1
  4067c2:	lea    rax,[rip+0xfe90]        # 0x416659
  4067c9:	lea    rdx,[rip+0xfe8f]        # 0x41665f
  4067d0:	cmovne rax,rdx
  4067d4:	jmp    0x405c50
  4067d9:	cmp    dx,0x1
  4067dd:	lea    rax,[rip+0x10628]        # 0x416e0c
  4067e4:	lea    rdx,[rip+0x10627]        # 0x416e12
  4067eb:	cmovne rax,rdx
  4067ef:	jmp    0x405c50
  4067f4:	cmp    dx,0x1
  4067f8:	lea    rax,[rip+0x1008a]        # 0x416889
  4067ff:	lea    rdx,[rip+0x10089]        # 0x41688f
  406806:	cmovne rax,rdx
  40680a:	jmp    0x405c50
  40680f:	cmp    dx,0x1
  406813:	lea    rax,[rip+0x10506]        # 0x416d20
  40681a:	lea    rdx,[rip+0x104fc]        # 0x416d1d
  406821:	cmovne rax,rdx
  406825:	jmp    0x405c50
  40682a:	cmp    dx,0x1
  40682e:	lea    rax,[rip+0x1023f]        # 0x416a74
  406835:	lea    rdx,[rip+0x1023e]        # 0x416a7a
  40683c:	cmovne rax,rdx
  406840:	jmp    0x405c50
  406845:	cmp    dx,0x1
  406849:	lea    rax,[rip+0x1021b]        # 0x416a6b
  406850:	lea    rdx,[rip+0x1021a]        # 0x416a71
  406857:	cmovne rax,rdx
  40685b:	jmp    0x405c50
  406860:	cmp    dx,0x1
  406864:	lea    rax,[rip+0x1000c]        # 0x416877
  40686b:	lea    rdx,[rip+0x1000b]        # 0x41687d
  406872:	cmovne rax,rdx
  406876:	jmp    0x405c50
  40687b:	cmp    dx,0x1
  40687f:	lea    rax,[rip+0x103a1]        # 0x416c27
  406886:	lea    rdx,[rip+0x103a0]        # 0x416c2d
  40688d:	cmovne rax,rdx
  406891:	jmp    0x405c50
  406896:	cmp    dx,0x1
  40689a:	lea    rax,[rip+0xfe0f]        # 0x4166b0
  4068a1:	lea    rdx,[rip+0xfe0e]        # 0x4166b6
  4068a8:	cmovne rax,rdx
  4068ac:	jmp    0x405c50
  4068b1:	cmp    dx,0x1
  4068b5:	lea    rax,[rip+0x10505]        # 0x416dc1
  4068bc:	lea    rdx,[rip+0x10504]        # 0x416dc7
  4068c3:	cmovne rax,rdx
  4068c7:	jmp    0x405c50
  4068cc:	cmp    dx,0x1
  4068d0:	lea    rax,[rip+0x100e2]        # 0x4169b9
  4068d7:	lea    rdx,[rip+0x100e1]        # 0x4169bf
  4068de:	cmovne rax,rdx
  4068e2:	jmp    0x405c50
  4068e7:	cmp    dx,0x1
  4068eb:	lea    rax,[rip+0x104d8]        # 0x416dca
  4068f2:	je     0x405c50
  4068f8:	cmp    dx,0x2
  4068fc:	lea    rax,[rip+0x104cd]        # 0x416dd0
  406903:	lea    rdx,[rip+0x104cc]        # 0x416dd6
  40690a:	cmovne rax,rdx
  40690e:	jmp    0x405c50
  406913:	cmp    dx,0x1
  406917:	lea    rax,[rip+0x10488]        # 0x416da6
  40691e:	lea    rdx,[rip+0x10487]        # 0x416dac
  406925:	cmovne rax,rdx
  406929:	jmp    0x405c50
  40692e:	cmp    dx,0x1
  406932:	lea    rax,[rip+0x10437]        # 0x416d70
  406939:	lea    rdx,[rip+0x10436]        # 0x416d76
  406940:	cmovne rax,rdx
  406944:	jmp    0x405c50
  406949:	cmp    dx,0x1
  40694d:	lea    rax,[rip+0x103a6]        # 0x416cfa
  406954:	je     0x405c50
  40695a:	cmp    dx,0x2
  40695e:	lea    rax,[rip+0x1039b]        # 0x416d00
  406965:	lea    rdx,[rip+0x1039a]        # 0x416d06
  40696c:	cmovne rax,rdx
  406970:	jmp    0x405c50
  406975:	cmp    dx,0x1
  406979:	lea    rax,[rip+0xfc59]        # 0x4165d9
  406980:	lea    rdx,[rip+0xfc58]        # 0x4165df
  406987:	cmovne rax,rdx
  40698b:	jmp    0x405c50
  406990:	cmp    dx,0x1
  406994:	lea    rax,[rip+0x10283]        # 0x416c1e
  40699b:	lea    rdx,[rip+0x10282]        # 0x416c24
  4069a2:	cmovne rax,rdx
  4069a6:	jmp    0x405c50
  4069ab:	cmp    dx,0x1f
  4069af:	ja     0x4070a3
  4069b5:	lea    rax,[rip+0x1075c]        # 0x417118
  4069bc:	movzx  edx,dx
  4069bf:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4069c3:	add    rax,rdx
  4069c6:	jmp    rax
  4069c8:	cmp    dx,0x1
  4069cc:	lea    rax,[rip+0x101c6]        # 0x416b99
  4069d3:	je     0x405c50
  4069d9:	cmp    dx,0x2
  4069dd:	lea    rax,[rip+0x101bb]        # 0x416b9f
  4069e4:	lea    rdx,[rip+0x101ba]        # 0x416ba5
  4069eb:	cmovne rax,rdx
  4069ef:	jmp    0x405c50
  4069f4:	cmp    dx,0x1
  4069f8:	lea    rax,[rip+0x10182]        # 0x416b81
  4069ff:	je     0x405c50
  406a05:	cmp    dx,0x2
  406a09:	lea    rax,[rip+0x10177]        # 0x416b87
  406a10:	lea    rdx,[rip+0x10176]        # 0x416b8d
  406a17:	cmovne rax,rdx
  406a1b:	jmp    0x405c50
  406a20:	cmp    dx,0x1
  406a24:	lea    rax,[rip+0x10165]        # 0x416b90
  406a2b:	lea    rdx,[rip+0x10164]        # 0x416b96
  406a32:	cmovne rax,rdx
  406a36:	jmp    0x405c50
  406a3b:	cmp    dx,0x1
  406a3f:	lea    rax,[rip+0x10108]        # 0x416b4e
  406a46:	je     0x405c50
  406a4c:	cmp    dx,0x2
  406a50:	lea    rax,[rip+0x100fd]        # 0x416b54
  406a57:	lea    rdx,[rip+0x100fc]        # 0x416b5a
  406a5e:	cmovne rax,rdx
  406a62:	jmp    0x405c50
  406a67:	cmp    dx,0x1
  406a6b:	lea    rax,[rip+0x100d3]        # 0x416b45
  406a72:	lea    rdx,[rip+0x100d2]        # 0x416b4b
  406a79:	cmovne rax,rdx
  406a7d:	jmp    0x405c50
  406a82:	cmp    dx,0x2
  406a86:	lea    rax,[rip+0x10080]        # 0x416b0d
  406a8d:	je     0x405c50
  406a93:	jbe    0x4072dd
  406a99:	cmp    dx,0x1e
  406a9d:	lea    rax,[rip+0x10066]        # 0x416b0a
  406aa4:	je     0x405c50
  406aaa:	cmp    dx,0x1f
  406aae:	lea    rax,[rip+0x1004c]        # 0x416b01
  406ab5:	je     0x405c50
  406abb:	lea    rax,[rip+0x10051]        # 0x416b13
  406ac2:	jmp    0x405c50
  406ac7:	cmp    dx,0x2
  406acb:	lea    rax,[rip+0xfd1c]        # 0x4167ee
  406ad2:	je     0x405c50
  406ad8:	cmp    dx,0x3
  406adc:	lea    rax,[rip+0xfd11]        # 0x4167f4
  406ae3:	je     0x405c50
  406ae9:	cmp    dx,0x1
  406aed:	lea    rax,[rip+0xfcf4]        # 0x4167e8
  406af4:	lea    rdx,[rip+0xfcff]        # 0x4167fa
  406afb:	cmovne rax,rdx
  406aff:	jmp    0x405c50
  406b04:	cmp    dx,0x1
  406b08:	lea    rax,[rip+0xff38]        # 0x416a47
  406b0f:	lea    rdx,[rip+0xff37]        # 0x416a4d
  406b16:	cmovne rax,rdx
  406b1a:	jmp    0x405c50
  406b1f:	cmp    dx,0x1
  406b23:	lea    rax,[rip+0xfecb]        # 0x4169f5
  406b2a:	lea    rdx,[rip+0xfeca]        # 0x4169fb
  406b31:	cmovne rax,rdx
  406b35:	jmp    0x405c50
  406b3a:	cmp    dx,0x1
  406b3e:	lea    rax,[rip+0xfea1]        # 0x4169e6
  406b45:	je     0x405c50
  406b4b:	cmp    dx,0x2
  406b4f:	lea    rax,[rip+0xfe96]        # 0x4169ec
  406b56:	lea    rdx,[rip+0xfe95]        # 0x4169f2
  406b5d:	cmovne rax,rdx
  406b61:	jmp    0x405c50
  406b66:	cmp    dx,0x1
  406b6a:	lea    rax,[rip+0xfe36]        # 0x4169a7
  406b71:	lea    rdx,[rip+0xfe35]        # 0x4169ad
  406b78:	cmovne rax,rdx
  406b7c:	jmp    0x405c50
  406b81:	cmp    dx,0x1
  406b85:	lea    rax,[rip+0xfe07]        # 0x416993
  406b8c:	lea    rdx,[rip+0xfe06]        # 0x416999
  406b93:	cmovne rax,rdx
  406b97:	jmp    0x405c50
  406b9c:	cmp    dx,0x1
  406ba0:	lea    rax,[rip+0xfdda]        # 0x416981
  406ba7:	lea    rdx,[rip+0xfdd9]        # 0x416987
  406bae:	cmovne rax,rdx
  406bb2:	jmp    0x405c50
  406bb7:	cmp    dx,0xf
  406bbb:	ja     0x40728f
  406bc1:	lea    rax,[rip+0x105d0]        # 0x417198
  406bc8:	movzx  edx,dx
  406bcb:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406bcf:	add    rax,rdx
  406bd2:	jmp    rax
  406bd4:	cmp    dx,0x1
  406bd8:	lea    rax,[rip+0xfcb3]        # 0x416892
  406bdf:	lea    rdx,[rip+0xfcb2]        # 0x416898
  406be6:	cmovne rax,rdx
  406bea:	jmp    0x405c50
  406bef:	cmp    dx,0x15
  406bf3:	ja     0x407277
  406bf9:	lea    rax,[rip+0x105d8]        # 0x4171d8
  406c00:	movzx  edx,dx
  406c03:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406c07:	add    rax,rdx
  406c0a:	jmp    rax
  406c0c:	cmp    dx,0x12
  406c10:	ja     0x40729b
  406c16:	lea    rax,[rip+0x10613]        # 0x417230
  406c1d:	movzx  edx,dx
  406c20:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406c24:	add    rax,rdx
  406c27:	jmp    rax
  406c29:	cmp    dx,0x1
  406c2d:	lea    rax,[rip+0xfd12]        # 0x416946
  406c34:	lea    rdx,[rip+0xfd11]        # 0x41694c
  406c3b:	cmovne rax,rdx
  406c3f:	jmp    0x405c50
  406c44:	cmp    dx,0x1
  406c48:	lea    rax,[rip+0xfb7c]        # 0x4167cb
  406c4f:	lea    rdx,[rip+0xfb7b]        # 0x4167d1
  406c56:	cmovne rax,rdx
  406c5a:	jmp    0x405c50
  406c5f:	cmp    dx,0x1
  406c63:	lea    rax,[rip+0xfb58]        # 0x4167c2
  406c6a:	lea    rdx,[rip+0xfb57]        # 0x4167c8
  406c71:	cmovne rax,rdx
  406c75:	jmp    0x405c50
  406c7a:	cmp    dx,0x1f
  406c7e:	ja     0x406d8b
  406c84:	lea    rax,[rip+0x105f1]        # 0x41727c
  406c8b:	movzx  edx,dx
  406c8e:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406c92:	add    rax,rdx
  406c95:	jmp    rax
  406c97:	cmp    dx,0x1
  406c9b:	lea    rax,[rip+0xfa4a]        # 0x4166ec
  406ca2:	lea    rdx,[rip+0xfa49]        # 0x4166f2
  406ca9:	cmovne rax,rdx
  406cad:	jmp    0x405c50
  406cb2:	cmp    dx,0x1
  406cb6:	lea    rax,[rip+0xfa14]        # 0x4166d1
  406cbd:	lea    rdx,[rip+0xfa13]        # 0x4166d7
  406cc4:	cmovne rax,rdx
  406cc8:	jmp    0x405c50
  406ccd:	cmp    dx,0x10
  406cd1:	ja     0x40726b
  406cd7:	lea    rax,[rip+0x1061e]        # 0x4172fc
  406cde:	movzx  edx,dx
  406ce1:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406ce5:	add    rax,rdx
  406ce8:	jmp    rax
  406cea:	cmp    dx,0x5
  406cee:	ja     0x406d97
  406cf4:	lea    rax,[rip+0x10645]        # 0x417340
  406cfb:	movzx  edx,dx
  406cfe:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406d02:	add    rax,rdx
  406d05:	jmp    rax
  406d07:	lea    rax,[rip+0xfab2]        # 0x4167c0
  406d0e:	jmp    0x405c50
  406d13:	lea    rax,[rip+0xf9e6]        # 0x416700
  406d1a:	jmp    0x405c50
  406d1f:	lea    rax,[rip+0xf9e0]        # 0x416706
  406d26:	jmp    0x405c50
  406d2b:	lea    rax,[rip+0xfbf9]        # 0x41692b
  406d32:	jmp    0x405c50
  406d37:	lea    rax,[rip+0xfbe7]        # 0x416925
  406d3e:	jmp    0x405c50
  406d43:	lea    rax,[rip+0xf9c2]        # 0x41670c
  406d4a:	jmp    0x405c50
  406d4f:	lea    rax,[rip+0xfbdb]        # 0x416931
  406d56:	jmp    0x405c50
  406d5b:	lea    rax,[rip+0xfbdb]        # 0x41693d
  406d62:	jmp    0x405c50
  406d67:	lea    rax,[rip+0xfbc9]        # 0x416937
  406d6e:	jmp    0x405c50
  406d73:	lea    rax,[rip+0xf99e]        # 0x416718
  406d7a:	jmp    0x405c50
  406d7f:	lea    rax,[rip+0xf98c]        # 0x416712
  406d86:	jmp    0x405c50
  406d8b:	lea    rax,[rip+0xf98c]        # 0x41671e
  406d92:	jmp    0x405c50
  406d97:	lea    rax,[rip+0xfba5]        # 0x416943
  406d9e:	jmp    0x405c50
  406da3:	lea    rax,[rip+0xfe07]        # 0x416bb1
  406daa:	jmp    0x405c50
  406daf:	lea    rax,[rip+0xfdf5]        # 0x416bab
  406db6:	jmp    0x405c50
  406dbb:	lea    rax,[rip+0xfde6]        # 0x416ba8
  406dc2:	jmp    0x405c50
  406dc7:	lea    rax,[rip+0xfe1e]        # 0x416bec
  406dce:	jmp    0x405c50
  406dd3:	lea    rax,[rip+0xfe16]        # 0x416bf0
  406dda:	jmp    0x405c50
  406ddf:	lea    rax,[rip+0xfdff]        # 0x416be5
  406de6:	jmp    0x405c50
  406deb:	lea    rax,[rip+0xfde8]        # 0x416bda
  406df2:	jmp    0x405c50
  406df7:	lea    rax,[rip+0xfdd5]        # 0x416bd3
  406dfe:	jmp    0x405c50
  406e03:	lea    rax,[rip+0xfdbe]        # 0x416bc8
  406e0a:	jmp    0x405c50
  406e0f:	lea    rax,[rip+0xfdab]        # 0x416bc1
  406e16:	jmp    0x405c50
  406e1b:	lea    rax,[rip+0xfd95]        # 0x416bb7
  406e22:	jmp    0x405c50
  406e27:	lea    rax,[rip+0xfda1]        # 0x416bcf
  406e2e:	jmp    0x405c50
  406e33:	lea    rax,[rip+0xfda7]        # 0x416be1
  406e3a:	jmp    0x405c50
  406e3f:	lea    rax,[rip+0xfa55]        # 0x41689b
  406e46:	jmp    0x405c50
  406e4b:	lea    rax,[rip+0xfa9a]        # 0x4168ec
  406e52:	jmp    0x405c50
  406e57:	lea    rax,[rip+0xfa88]        # 0x4168e6
  406e5e:	jmp    0x405c50
  406e63:	lea    rax,[rip+0xf9f2]        # 0x41685c
  406e6a:	jmp    0x405c50
  406e6f:	lea    rax,[rip+0xf9e0]        # 0x416856
  406e76:	jmp    0x405c50
  406e7b:	lea    rax,[rip+0xf9ce]        # 0x416850
  406e82:	jmp    0x405c50
  406e87:	lea    rax,[rip+0xf9bc]        # 0x41684a
  406e8e:	jmp    0x405c50
  406e93:	lea    rax,[rip+0xf9aa]        # 0x416844
  406e9a:	jmp    0x405c50
  406e9f:	lea    rax,[rip+0xf998]        # 0x41683e
  406ea6:	jmp    0x405c50
  406eab:	lea    rax,[rip+0xf986]        # 0x416838
  406eb2:	jmp    0x405c50
  406eb7:	lea    rax,[rip+0xf974]        # 0x416832
  406ebe:	jmp    0x405c50
  406ec3:	lea    rax,[rip+0xf962]        # 0x41682c
  406eca:	jmp    0x405c50
  406ecf:	lea    rax,[rip+0xf950]        # 0x416826
  406ed6:	jmp    0x405c50
  406edb:	lea    rax,[rip+0xf93e]        # 0x416820
  406ee2:	jmp    0x405c50
  406ee7:	lea    rax,[rip+0xf92c]        # 0x41681a
  406eee:	jmp    0x405c50
  406ef3:	lea    rax,[rip+0xf91a]        # 0x416814
  406efa:	jmp    0x405c50
  406eff:	lea    rax,[rip+0xf908]        # 0x41680e
  406f06:	jmp    0x405c50
  406f0b:	lea    rax,[rip+0xf8f6]        # 0x416808
  406f12:	jmp    0x405c50
  406f17:	lea    rax,[rip+0xfd9b]        # 0x416cb9
  406f1e:	jmp    0x405c50
  406f23:	lea    rax,[rip+0xfd89]        # 0x416cb3
  406f2a:	jmp    0x405c50
  406f2f:	lea    rax,[rip+0xfd77]        # 0x416cad
  406f36:	jmp    0x405c50
  406f3b:	lea    rax,[rip+0xfd65]        # 0x416ca7
  406f42:	jmp    0x405c50
  406f47:	lea    rax,[rip+0xfd53]        # 0x416ca1
  406f4e:	jmp    0x405c50
  406f53:	lea    rax,[rip+0xfd41]        # 0x416c9b
  406f5a:	jmp    0x405c50
  406f5f:	lea    rax,[rip+0xfd2f]        # 0x416c95
  406f66:	jmp    0x405c50
  406f6b:	lea    rax,[rip+0xfd1d]        # 0x416c8f
  406f72:	jmp    0x405c50
  406f77:	lea    rax,[rip+0xfd0b]        # 0x416c89
  406f7e:	jmp    0x405c50
  406f83:	lea    rax,[rip+0xfcf9]        # 0x416c83
  406f8a:	jmp    0x405c50
  406f8f:	lea    rax,[rip+0xfce7]        # 0x416c7d
  406f96:	jmp    0x405c50
  406f9b:	lea    rax,[rip+0xfcd5]        # 0x416c77
  406fa2:	jmp    0x405c50
  406fa7:	lea    rax,[rip+0xfcbc]        # 0x416c6a
  406fae:	jmp    0x405c50
  406fb3:	lea    rax,[rip+0xfcaa]        # 0x416c64
  406fba:	jmp    0x405c50
  406fbf:	lea    rax,[rip+0xfc98]        # 0x416c5e
  406fc6:	jmp    0x405c50
  406fcb:	lea    rax,[rip+0xfcff]        # 0x416cd1
  406fd2:	jmp    0x405c50
  406fd7:	lea    rax,[rip+0xfced]        # 0x416ccb
  406fde:	jmp    0x405c50
  406fe3:	lea    rax,[rip+0xfcdb]        # 0x416cc5
  406fea:	jmp    0x405c50
  406fef:	lea    rax,[rip+0xfcc9]        # 0x416cbf
  406ff6:	jmp    0x405c50
  406ffb:	lea    rax,[rip+0xf8b1]        # 0x4168b3
  407002:	jmp    0x405c50
  407007:	lea    rax,[rip+0xf89f]        # 0x4168ad
  40700e:	jmp    0x405c50
  407013:	lea    rax,[rip+0xf88d]        # 0x4168a7
  40701a:	jmp    0x405c50
  40701f:	lea    rax,[rip+0xf87b]        # 0x4168a1
  407026:	jmp    0x405c50
  40702b:	lea    rax,[rip+0xf8ae]        # 0x4168e0
  407032:	jmp    0x405c50
  407037:	lea    rax,[rip+0xf89c]        # 0x4168da
  40703e:	jmp    0x405c50
  407043:	lea    rax,[rip+0xf88a]        # 0x4168d4
  40704a:	jmp    0x405c50
  40704f:	lea    rax,[rip+0xf878]        # 0x4168ce
  407056:	jmp    0x405c50
  40705b:	lea    rax,[rip+0xf866]        # 0x4168c8
  407062:	jmp    0x405c50
  407067:	lea    rax,[rip+0xf854]        # 0x4168c2
  40706e:	jmp    0x405c50
  407073:	lea    rax,[rip+0xf845]        # 0x4168bf
  40707a:	jmp    0x405c50
  40707f:	lea    rax,[rip+0xf833]        # 0x4168b9
  407086:	jmp    0x405c50
  40708b:	lea    rax,[rip+0xf6aa]        # 0x41673c
  407092:	jmp    0x405c50
  407097:	lea    rax,[rip+0xf68f]        # 0x41672d
  40709e:	jmp    0x405c50
  4070a3:	lea    rax,[rip+0xf680]        # 0x41672a
  4070aa:	jmp    0x405c50
  4070af:	lea    rax,[rip+0xf683]        # 0x416739
  4070b6:	jmp    0x405c50
  4070bb:	lea    rax,[rip+0xf692]        # 0x416754
  4070c2:	jmp    0x405c50
  4070c7:	lea    rax,[rip+0xf6ce]        # 0x41679c
  4070ce:	jmp    0x405c50
  4070d3:	lea    rax,[rip+0xf6c2]        # 0x41679c
  4070da:	jmp    0x405c50
  4070df:	lea    rax,[rip+0xf6bf]        # 0x4167a5
  4070e6:	jmp    0x405c50
  4070eb:	lea    rax,[rip+0xf68c]        # 0x41677e
  4070f2:	jmp    0x405c50
  4070f7:	lea    rax,[rip+0xf64a]        # 0x416748
  4070fe:	jmp    0x405c50
  407103:	lea    rax,[rip+0xfbd3]        # 0x416cdd
  40710a:	jmp    0x405c50
  40710f:	lea    rax,[rip+0xfbc1]        # 0x416cd7
  407116:	jmp    0x405c50
  40711b:	lea    rax,[rip+0xf746]        # 0x416868
  407122:	jmp    0x405c50
  407127:	lea    rax,[rip+0xf734]        # 0x416862
  40712e:	jmp    0x405c50
  407133:	lea    rax,[rip+0xf734]        # 0x41686e
  40713a:	jmp    0x405c50
  40713f:	lea    rax,[rip+0xf50a]        # 0x416650
  407146:	jmp    0x405c50
  40714b:	lea    rax,[rip+0xf61d]        # 0x41676f
  407152:	jmp    0x405c50
  407157:	lea    rax,[rip+0xf5e4]        # 0x416742
  40715e:	jmp    0x405c50
  407163:	lea    rax,[rip+0xf647]        # 0x4167b1
  40716a:	jmp    0x405c50
  40716f:	lea    rax,[rip+0xf617]        # 0x41678d
  407176:	jmp    0x405c50
  40717b:	lea    rax,[rip+0xf5cc]        # 0x41674e
  407182:	jmp    0x405c50
  407187:	lea    rax,[rip+0xf611]        # 0x41679f
  40718e:	jmp    0x405c50
  407193:	lea    rax,[rip+0xf599]        # 0x416733
  40719a:	jmp    0x405c50
  40719f:	lea    rax,[rip+0xf5ba]        # 0x416760
  4071a6:	jmp    0x405c50
  4071ab:	lea    rax,[rip+0xf498]        # 0x41664a
  4071b2:	jmp    0x405c50
  4071b7:	lea    rax,[rip+0xf486]        # 0x416644
  4071be:	jmp    0x405c50
  4071c3:	lea    rax,[rip+0xf474]        # 0x41663e
  4071ca:	jmp    0x405c50
  4071cf:	lea    rax,[rip+0xf462]        # 0x416638
  4071d6:	jmp    0x405c50
  4071db:	lea    rax,[rip+0xf450]        # 0x416632
  4071e2:	jmp    0x405c50
  4071e7:	lea    rax,[rip+0xf43e]        # 0x41662c
  4071ee:	jmp    0x405c50
  4071f3:	lea    rax,[rip+0xf42c]        # 0x416626
  4071fa:	jmp    0x405c50
  4071ff:	lea    rax,[rip+0xf41a]        # 0x416620
  407206:	jmp    0x405c50
  40720b:	lea    rax,[rip+0xf408]        # 0x41661a
  407212:	jmp    0x405c50
  407217:	lea    rax,[rip+0xf3f6]        # 0x416614
  40721e:	jmp    0x405c50
  407223:	lea    rax,[rip+0xf3e4]        # 0x41660e
  40722a:	jmp    0x405c50
  40722f:	lea    rax,[rip+0xf3d2]        # 0x416608
  407236:	jmp    0x405c50
  40723b:	lea    rax,[rip+0xf3c0]        # 0x416602
  407242:	jmp    0x405c50
  407247:	lea    rax,[rip+0xf3ae]        # 0x4165fc
  40724e:	jmp    0x405c50
  407253:	lea    rax,[rip+0xf39c]        # 0x4165f6
  40725a:	jmp    0x405c50
  40725f:	lea    rax,[rip+0xf957]        # 0x416bbd
  407266:	jmp    0x405c50
  40726b:	lea    rax,[rip+0xf3e4]        # 0x416656
  407272:	jmp    0x405c50
  407277:	lea    rax,[rip+0xfa65]        # 0x416ce3
  40727e:	jmp    0x405c50
  407283:	lea    rax,[rip+0xf4af]        # 0x416739
  40728a:	jmp    0x405c50
  40728f:	lea    rax,[rip+0xf629]        # 0x4168bf
  407296:	jmp    0x405c50
  40729b:	lea    rax,[rip+0xf5d2]        # 0x416874
  4072a2:	jmp    0x405c50
  4072a7:	nop    WORD PTR [rax+rax*1+0x0]
  4072b0:	mov    BYTE PTR [rdx],0x0
  4072b3:	lea    rax,[rip+0x14f86]        # 0x41c240
  4072ba:	jmp    0x405c50
  4072bf:	cmp    dx,0x1
  4072c3:	je     0x4072d1
  4072c5:	lea    rax,[rip+0xf823]        # 0x416aef
  4072cc:	jmp    0x405c50
  4072d1:	lea    rax,[rip+0xf80b]        # 0x416ae3
  4072d8:	jmp    0x405c50
  4072dd:	cmp    dx,0x1
  4072e1:	lea    rax,[rip+0xf81c]        # 0x416b04
  4072e8:	je     0x405c50
  4072ee:	jmp    0x406abb
  4072f3:	cmp    dx,0x1
  4072f7:	lea    rax,[rip+0xf376]        # 0x416674
  4072fe:	je     0x405c50
  407304:	jmp    0x4067b2
  407309:	nop    DWORD PTR [rax+0x0]
  407310:	push   rbx
  407311:	sub    rsp,0x20
  407315:	cmp    ecx,0x5
  407318:	ja     0x4073f0
  40731e:	xor    edx,edx
  407320:	call   0x404c00
  407325:	mov    edx,0x3b
  40732a:	mov    rcx,rax
  40732d:	mov    rbx,rax
  407330:	call   0x4113d8
  407335:	test   rax,rax
  407338:	je     0x407349
  40733a:	xor    edx,edx
  40733c:	mov    ecx,0x2
  407341:	call   0x404c00
  407346:	mov    rbx,rax
  407349:	lea    rcx,[rip+0xad30]        # 0x412080
  407350:	call   0x407630
  407355:	test   eax,eax
  407357:	jne    0x407438
  40735d:	mov    eax,DWORD PTR [rip+0x153c5]        # 0x41c728
  407363:	test   eax,eax
  407365:	je     0x40737e
  407367:	lea    rdx,[rip+0x14fd2]        # 0x41c340
  40736e:	mov    rcx,rbx
  407371:	call   0x4113d0
  407376:	test   eax,eax
  407378:	je     0x407420
  40737e:	lea    rcx,[rip+0x153bb]        # 0x41c740
  407385:	mov    r8d,0x1ae
  40738b:	mov    rdx,rbx
  40738e:	call   0x4113a8
  407393:	mov    BYTE PTR [rip+0x15554],0x0        # 0x41c8ee
  40739a:	mov    DWORD PTR [rip+0x1554c],0x0        # 0x41c8f0
  4073a4:	mov    edx,0x2
  4073a9:	lea    rcx,[rip+0xffffffffffffe6d0]        # 0x405a80
  4073b0:	call   QWORD PTR [rip+0x180d2]        # 0x41f488
  4073b6:	mov    eax,DWORD PTR [rip+0x15534]        # 0x41c8f0
  4073bc:	test   eax,eax
  4073be:	jne    0x407400
  4073c0:	lea    rcx,[rip+0xacb9]        # 0x412080
  4073c7:	call   0x4076a0
  4073cc:	test   eax,eax
  4073ce:	jne    0x407438
  4073d0:	mov    ecx,DWORD PTR [rip+0x1551a]        # 0x41c8f0
  4073d6:	test   ecx,ecx
  4073d8:	je     0x4073f0
  4073da:	movzx  ecx,cx
  4073dd:	add    rsp,0x20
  4073e1:	pop    rbx
  4073e2:	jmp    0x405bb0
  4073e7:	nop    WORD PTR [rax+rax*1+0x0]
  4073f0:	xor    eax,eax
  4073f2:	add    rsp,0x20
  4073f6:	pop    rbx
  4073f7:	ret    
  4073f8:	nop    DWORD PTR [rax+rax*1+0x0]
  407400:	lea    rcx,[rip+0x14f39]        # 0x41c340
  407407:	mov    rdx,rbx
  40740a:	mov    DWORD PTR [rip+0x15318],eax        # 0x41c728
  407410:	call   0x4113c8
  407415:	jmp    0x4073c0
  407417:	nop    WORD PTR [rax+rax*1+0x0]
  407420:	lea    rcx,[rip+0xac59]        # 0x412080
  407427:	call   0x4076a0
  40742c:	test   eax,eax
  40742e:	jne    0x407438
  407430:	mov    ecx,DWORD PTR [rip+0x152f2]        # 0x41c728
  407436:	jmp    0x4073d6
  407438:	call   0x4114b0
  40743d:	nop
  40743e:	xchg   ax,ax
  407440:	push   rbx
  407441:	sub    rsp,0x20
  407445:	lea    rcx,[rip+0xff0c]        # 0x417358
  40744c:	mov    rbx,rdx
  40744f:	call   0x411450
  407454:	test   rax,rax
  407457:	je     0x40745e
  407459:	cmp    BYTE PTR [rax],0x0
  40745c:	jne    0x40748d
  40745e:	mov    rcx,rbx
  407461:	call   0x411450
  407466:	test   rax,rax
  407469:	je     0x407470
  40746b:	cmp    BYTE PTR [rax],0x0
  40746e:	jne    0x40748d
  407470:	lea    rcx,[rip+0xfee8]        # 0x41735f
  407477:	call   0x411450
  40747c:	test   rax,rax
  40747f:	je     0x407493
  407481:	cmp    BYTE PTR [rax],0x0
  407484:	mov    edx,0x0
  407489:	cmove  rax,rdx
  40748d:	add    rsp,0x20
  407491:	pop    rbx
  407492:	ret    
  407493:	xor    eax,eax
  407495:	jmp    0x40748d
  407497:	nop    WORD PTR [rax+rax*1+0x0]
  4074a0:	jmp    0x407440
  4074a2:	nop    DWORD PTR [rax+0x0]
  4074a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074b0:	sub    rsp,0x28
  4074b4:	call   QWORD PTR [rip+0x18036]        # 0x41f4f0
  4074ba:	movzx  ecx,ax
  4074bd:	add    rsp,0x28
  4074c1:	jmp    0x405bb0
  4074c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074d0:	push   rsi
  4074d1:	push   rbx
  4074d2:	sub    rsp,0x28
  4074d6:	mov    ebx,ecx
  4074d8:	mov    rsi,rdx
  4074db:	call   0x407310
  4074e0:	test   rax,rax
  4074e3:	je     0x4074f0
  4074e5:	add    rsp,0x28
  4074e9:	pop    rbx
  4074ea:	pop    rsi
  4074eb:	ret    
  4074ec:	nop    DWORD PTR [rax+0x0]
  4074f0:	mov    rdx,rsi
  4074f3:	mov    ecx,ebx
  4074f5:	call   0x407440
  4074fa:	test   rax,rax
  4074fd:	jne    0x4074e5
  4074ff:	add    rsp,0x28
  407503:	pop    rbx
  407504:	pop    rsi
  407505:	jmp    0x4074b0
  407507:	nop
  407508:	nop
  407509:	nop
  40750a:	nop
  40750b:	nop
  40750c:	nop
  40750d:	nop
  40750e:	nop
  40750f:	nop
  407510:	push   rdi
  407511:	push   rsi
  407512:	push   rbx
  407513:	sub    rsp,0x20
  407517:	mov    eax,DWORD PTR [rcx+0x8]
  40751a:	cmp    eax,DWORD PTR [rcx+0xc]
  40751d:	mov    rbx,rcx
  407520:	je     0x407570
  407522:	xor    r9d,r9d
  407525:	xor    r8d,r8d
  407528:	xor    ecx,ecx
  40752a:	mov    edx,0x1
  40752f:	call   QWORD PTR [rip+0x17f3b]        # 0x41f470
  407535:	cmp    rax,0xffffffffffffffff
  407539:	je     0x407600
  40753f:	mov    ecx,DWORD PTR [rbx+0x8]
  407542:	mov    r8d,DWORD PTR [rbx+0xc]
  407546:	mov    edx,ecx
  407548:	add    edx,DWORD PTR [rbx+0x10]
  40754b:	mov    r9d,edx
  40754e:	sub    r9d,r8d
  407551:	cmp    edx,r8d
  407554:	mov    r8,QWORD PTR [rbx]
  407557:	cmovae rdx,r9
  40755b:	add    ecx,0x1
  40755e:	mov    QWORD PTR [r8+rdx*8],rax
  407562:	mov    DWORD PTR [rbx+0x8],ecx
  407565:	add    rsp,0x20
  407569:	pop    rbx
  40756a:	pop    rsi
  40756b:	pop    rdi
  40756c:	ret    
  40756d:	nop    DWORD PTR [rax]
  407570:	lea    edx,[rax+rax*1+0x1]
  407574:	mov    rcx,QWORD PTR [rcx]
  407577:	mov    rsi,rdx
  40757a:	shl    rdx,0x3
  40757e:	call   0x4113f0
  407583:	test   rax,rax
  407586:	je     0x407600
  407588:	mov    r8d,DWORD PTR [rbx+0x10]
  40758c:	test   r8d,r8d
  40758f:	je     0x4075ec
  407591:	mov    r9d,DWORD PTR [rbx+0x8]
  407595:	mov    edi,DWORD PTR [rbx+0xc]
  407598:	lea    r11d,[r9+r8*1]
  40759c:	cmp    edi,r11d
  40759f:	jae    0x4075c4
  4075a1:	sub    r11d,edi
  4075a4:	je     0x4075c4
  4075a6:	xor    edx,edx
  4075a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4075b0:	mov    r10,QWORD PTR [rax+rdx*8]
  4075b4:	lea    ecx,[rdi+rdx*1]
  4075b7:	add    rdx,0x1
  4075bb:	cmp    r11d,edx
  4075be:	mov    QWORD PTR [rax+rcx*8],r10
  4075c2:	ja     0x4075b0
  4075c4:	xor    edx,edx
  4075c6:	test   r9d,r9d
  4075c9:	je     0x4075e5
  4075cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4075d0:	lea    ecx,[r8+rdx*1]
  4075d4:	mov    rcx,QWORD PTR [rax+rcx*8]
  4075d8:	mov    QWORD PTR [rax+rdx*8],rcx
  4075dc:	add    rdx,0x1
  4075e0:	cmp    r9d,edx
  4075e3:	ja     0x4075d0
  4075e5:	mov    DWORD PTR [rbx+0x10],0x0
  4075ec:	mov    QWORD PTR [rbx],rax
  4075ef:	mov    DWORD PTR [rbx+0xc],esi
  4075f2:	jmp    0x407522
  4075f7:	nop    WORD PTR [rax+rax*1+0x0]
  407600:	mov    rax,0xffffffffffffffff
  407607:	add    rsp,0x20
  40760b:	pop    rbx
  40760c:	pop    rsi
  40760d:	pop    rdi
  40760e:	ret    
  40760f:	nop
  407610:	push   rbx
  407611:	sub    rsp,0x20
  407615:	mov    rbx,rcx
  407618:	lea    rcx,[rcx+0x8]
  40761c:	call   QWORD PTR [rip+0x17ede]        # 0x41f500
  407622:	mov    DWORD PTR [rbx],0x1
  407628:	add    rsp,0x20
  40762c:	pop    rbx
  40762d:	ret    
  40762e:	xchg   ax,ax
  407630:	push   rsi
  407631:	push   rbx
  407632:	sub    rsp,0x28
  407636:	mov    eax,DWORD PTR [rcx]
  407638:	mov    rbx,rcx
  40763b:	test   eax,eax
  40763d:	je     0x407655
  40763f:	lea    rsi,[rbx+0x8]
  407643:	mov    rcx,rsi
  407646:	call   QWORD PTR [rip+0x17e34]        # 0x41f480
  40764c:	xor    eax,eax
  40764e:	add    rsp,0x28
  407652:	pop    rbx
  407653:	pop    rsi
  407654:	ret    
  407655:	lock add DWORD PTR [rcx+0x4],0x1
  40765a:	je     0x407680
  40765c:	mov    eax,DWORD PTR [rcx]
  40765e:	mov    rsi,QWORD PTR [rip+0x17efb]        # 0x41f560
  407665:	test   eax,eax
  407667:	jne    0x40763f
  407669:	nop    DWORD PTR [rax+0x0]
  407670:	xor    ecx,ecx
  407672:	call   rsi
  407674:	mov    eax,DWORD PTR [rbx]
  407676:	test   eax,eax
  407678:	je     0x407670
  40767a:	jmp    0x40763f
  40767c:	nop    DWORD PTR [rax+0x0]
  407680:	lea    rsi,[rcx+0x8]
  407684:	mov    rcx,rsi
  407687:	call   QWORD PTR [rip+0x17e73]        # 0x41f500
  40768d:	mov    DWORD PTR [rbx],0x1
  407693:	jmp    0x407643
  407695:	nop
  407696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076a0:	sub    rsp,0x28
  4076a4:	mov    edx,DWORD PTR [rcx]
  4076a6:	mov    eax,0x16
  4076ab:	test   edx,edx
  4076ad:	jne    0x4076b4
  4076af:	add    rsp,0x28
  4076b3:	ret    
  4076b4:	add    rcx,0x8
  4076b8:	call   QWORD PTR [rip+0x17e52]        # 0x41f510
  4076be:	xor    eax,eax
  4076c0:	add    rsp,0x28
  4076c4:	ret    
  4076c5:	nop
  4076c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076d0:	push   rbx
  4076d1:	sub    rsp,0x20
  4076d5:	mov    edx,DWORD PTR [rcx]
  4076d7:	mov    eax,0x16
  4076dc:	test   edx,edx
  4076de:	jne    0x4076f0
  4076e0:	add    rsp,0x20
  4076e4:	pop    rbx
  4076e5:	ret    
  4076e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076f0:	mov    rbx,rcx
  4076f3:	lea    rcx,[rcx+0x8]
  4076f7:	call   QWORD PTR [rip+0x17d7b]        # 0x41f478
  4076fd:	xor    eax,eax
  4076ff:	mov    DWORD PTR [rbx],0x0
  407705:	add    rsp,0x20
  407709:	pop    rbx
  40770a:	ret    
  40770b:	nop    DWORD PTR [rax+rax*1+0x0]
  407710:	push   rbx
  407711:	sub    rsp,0x20
  407715:	mov    rbx,rcx
  407718:	lea    rcx,[rcx+0x8]
  40771c:	call   QWORD PTR [rip+0x17dde]        # 0x41f500
  407722:	mov    QWORD PTR [rbx+0x30],0x0
  40772a:	mov    DWORD PTR [rbx+0x38],0x0
  407731:	mov    DWORD PTR [rbx+0x3c],0x0
  407738:	mov    DWORD PTR [rbx+0x40],0x0
  40773f:	mov    QWORD PTR [rbx+0x48],0x0
  407747:	mov    DWORD PTR [rbx+0x50],0x0
  40774e:	mov    DWORD PTR [rbx+0x54],0x0
  407755:	mov    DWORD PTR [rbx+0x58],0x0
  40775c:	mov    DWORD PTR [rbx+0x60],0x0
  407763:	mov    DWORD PTR [rbx],0x1
  407769:	add    rsp,0x20
  40776d:	pop    rbx
  40776e:	ret    
  40776f:	nop
  407770:	push   r12
  407772:	push   rbp
  407773:	push   rdi
  407774:	push   rsi
  407775:	push   rbx
  407776:	sub    rsp,0x20
  40777a:	mov    eax,DWORD PTR [rcx]
  40777c:	mov    rbx,rcx
  40777f:	test   eax,eax
  407781:	je     0x4077c0
  407783:	lea    rsi,[rbx+0x8]
  407787:	mov    rcx,rsi
  40778a:	mov    rbp,QWORD PTR [rip+0x17cef]        # 0x41f480
  407791:	call   rbp
  407793:	mov    eax,DWORD PTR [rbx+0x60]
  407796:	mov    r12,QWORD PTR [rip+0x17d73]        # 0x41f510
  40779d:	test   eax,eax
  40779f:	js     0x407800
  4077a1:	add    eax,0x1
  4077a4:	mov    rcx,rsi
  4077a7:	mov    DWORD PTR [rbx+0x60],eax
  4077aa:	call   r12
  4077ad:	xor    eax,eax
  4077af:	add    rsp,0x20
  4077b3:	pop    rbx
  4077b4:	pop    rsi
  4077b5:	pop    rdi
  4077b6:	pop    rbp
  4077b7:	pop    r12
  4077b9:	ret    
  4077ba:	nop    WORD PTR [rax+rax*1+0x0]
  4077c0:	lock add DWORD PTR [rcx+0x4],0x1
  4077c5:	je     0x407880
  4077cb:	mov    eax,DWORD PTR [rcx]
  4077cd:	mov    rdi,QWORD PTR [rip+0x17d8c]        # 0x41f560
  4077d4:	test   eax,eax
  4077d6:	jne    0x407783
  4077d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4077e0:	xor    ecx,ecx
  4077e2:	call   rdi
  4077e4:	mov    eax,DWORD PTR [rbx]
  4077e6:	test   eax,eax
  4077e8:	jne    0x407783
  4077ea:	xor    ecx,ecx
  4077ec:	call   rdi
  4077ee:	mov    eax,DWORD PTR [rbx]
  4077f0:	test   eax,eax
  4077f2:	je     0x4077e0
  4077f4:	jmp    0x407783
  4077f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407800:	lea    rcx,[rbx+0x30]
  407804:	call   0x407510
  407809:	cmp    rax,0xffffffffffffffff
  40780d:	mov    rdi,rax
  407810:	je     0x407850
  407812:	mov    rcx,rsi
  407815:	call   r12
  407818:	mov    edx,0xffffffff
  40781d:	mov    rcx,rdi
  407820:	call   QWORD PTR [rip+0x17d6a]        # 0x41f590
  407826:	cmp    eax,0x102
  40782b:	je     0x407846
  40782d:	cmp    eax,0xffffffff
  407830:	je     0x407846
  407832:	mov    rcx,rdi
  407835:	call   QWORD PTR [rip+0x17c2d]        # 0x41f468
  40783b:	mov    eax,DWORD PTR [rbx+0x60]
  40783e:	test   eax,eax
  407840:	jg     0x4077ad
  407846:	call   0x4114b0
  40784b:	nop    DWORD PTR [rax+rax*1+0x0]
  407850:	mov    rdi,QWORD PTR [rip+0x17d09]        # 0x41f560
  407857:	nop    WORD PTR [rax+rax*1+0x0]
  407860:	mov    rcx,rsi
  407863:	call   r12
  407866:	mov    ecx,0x1
  40786b:	call   rdi
  40786d:	mov    rcx,rsi
  407870:	call   rbp
  407872:	mov    eax,DWORD PTR [rbx+0x60]
  407875:	test   eax,eax
  407877:	js     0x407860
  407879:	jmp    0x4077a1
  40787e:	xchg   ax,ax
  407880:	lea    rsi,[rcx+0x8]
  407884:	mov    rcx,rsi
  407887:	call   QWORD PTR [rip+0x17c73]        # 0x41f500
  40788d:	mov    QWORD PTR [rbx+0x30],0x0
  407895:	mov    DWORD PTR [rbx+0x38],0x0
  40789c:	mov    DWORD PTR [rbx+0x3c],0x0
  4078a3:	mov    DWORD PTR [rbx+0x40],0x0
  4078aa:	mov    QWORD PTR [rbx+0x48],0x0
  4078b2:	mov    DWORD PTR [rbx+0x50],0x0
  4078b9:	mov    DWORD PTR [rbx+0x54],0x0
  4078c0:	mov    DWORD PTR [rbx+0x58],0x0
  4078c7:	mov    DWORD PTR [rbx+0x60],0x0
  4078ce:	mov    DWORD PTR [rbx],0x1
  4078d4:	jmp    0x407787
  4078d9:	nop    DWORD PTR [rax+0x0]
  4078e0:	push   r12
  4078e2:	push   rbp
  4078e3:	push   rdi
  4078e4:	push   rsi
  4078e5:	push   rbx
  4078e6:	sub    rsp,0x20
  4078ea:	mov    eax,DWORD PTR [rcx]
  4078ec:	mov    rbx,rcx
  4078ef:	test   eax,eax
  4078f1:	je     0x4079a3
  4078f7:	lea    rsi,[rbx+0x8]
  4078fb:	mov    rcx,rsi
  4078fe:	mov    rbp,QWORD PTR [rip+0x17b7b]        # 0x41f480
  407905:	call   rbp
  407907:	mov    edx,DWORD PTR [rbx+0x60]
  40790a:	mov    r12,QWORD PTR [rip+0x17bff]        # 0x41f510
  407911:	test   edx,edx
  407913:	je     0x407989
  407915:	lea    rcx,[rbx+0x48]
  407919:	call   0x407510
  40791e:	cmp    rax,0xffffffffffffffff
  407922:	mov    rdi,rax
  407925:	je     0x407960
  407927:	mov    rcx,rsi
  40792a:	call   QWORD PTR [rip+0x17be0]        # 0x41f510
  407930:	mov    edx,0xffffffff
  407935:	mov    rcx,rdi
  407938:	call   QWORD PTR [rip+0x17c52]        # 0x41f590
  40793e:	cmp    eax,0x102
  407943:	je     0x407959
  407945:	cmp    eax,0xffffffff
  407948:	je     0x407959
  40794a:	mov    rcx,rdi
  40794d:	call   QWORD PTR [rip+0x17b15]        # 0x41f468
  407953:	cmp    DWORD PTR [rbx+0x60],0xffffffff
  407957:	je     0x407996
  407959:	call   0x4114b0
  40795e:	xchg   ax,ax
  407960:	mov    rdi,QWORD PTR [rip+0x17bf9]        # 0x41f560
  407967:	mov    r12,QWORD PTR [rip+0x17ba2]        # 0x41f510
  40796e:	xchg   ax,ax
  407970:	mov    rcx,rsi
  407973:	call   r12
  407976:	mov    ecx,0x1
  40797b:	call   rdi
  40797d:	mov    rcx,rsi
  407980:	call   rbp
  407982:	mov    eax,DWORD PTR [rbx+0x60]
  407985:	test   eax,eax
  407987:	jne    0x407970
  407989:	mov    DWORD PTR [rbx+0x60],0xffffffff
  407990:	mov    rcx,rsi
  407993:	call   r12
  407996:	xor    eax,eax
  407998:	add    rsp,0x20
  40799c:	pop    rbx
  40799d:	pop    rsi
  40799e:	pop    rdi
  40799f:	pop    rbp
  4079a0:	pop    r12
  4079a2:	ret    
  4079a3:	lock add DWORD PTR [rcx+0x4],0x1
  4079a8:	je     0x4079e0
  4079aa:	mov    eax,DWORD PTR [rcx]
  4079ac:	mov    rdi,QWORD PTR [rip+0x17bad]        # 0x41f560
  4079b3:	test   eax,eax
  4079b5:	jne    0x4078f7
  4079bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4079c0:	xor    ecx,ecx
  4079c2:	call   rdi
  4079c4:	mov    eax,DWORD PTR [rbx]
  4079c6:	test   eax,eax
  4079c8:	jne    0x4078f7
  4079ce:	xor    ecx,ecx
  4079d0:	call   rdi
  4079d2:	mov    eax,DWORD PTR [rbx]
  4079d4:	test   eax,eax
  4079d6:	je     0x4079c0
  4079d8:	jmp    0x4078f7
  4079dd:	nop    DWORD PTR [rax]
  4079e0:	lea    rsi,[rcx+0x8]
  4079e4:	mov    rcx,rsi
  4079e7:	call   QWORD PTR [rip+0x17b13]        # 0x41f500
  4079ed:	mov    QWORD PTR [rbx+0x30],0x0
  4079f5:	mov    DWORD PTR [rbx+0x38],0x0
  4079fc:	mov    DWORD PTR [rbx+0x3c],0x0
  407a03:	mov    DWORD PTR [rbx+0x40],0x0
  407a0a:	mov    QWORD PTR [rbx+0x48],0x0
  407a12:	mov    DWORD PTR [rbx+0x50],0x0
  407a19:	mov    DWORD PTR [rbx+0x54],0x0
  407a20:	mov    DWORD PTR [rbx+0x58],0x0
  407a27:	mov    DWORD PTR [rbx+0x60],0x0
  407a2e:	mov    DWORD PTR [rbx],0x1
  407a34:	jmp    0x4078fb
  407a39:	nop    DWORD PTR [rax+0x0]
  407a40:	push   rbp
  407a41:	push   rdi
  407a42:	push   rsi
  407a43:	push   rbx
  407a44:	sub    rsp,0x28
  407a48:	mov    edx,DWORD PTR [rcx]
  407a4a:	mov    eax,0x16
  407a4f:	test   edx,edx
  407a51:	jne    0x407a60
  407a53:	add    rsp,0x28
  407a57:	pop    rbx
  407a58:	pop    rsi
  407a59:	pop    rdi
  407a5a:	pop    rbp
  407a5b:	ret    
  407a5c:	nop    DWORD PTR [rax+0x0]
  407a60:	lea    rdi,[rcx+0x8]
  407a64:	mov    rbx,rcx
  407a67:	mov    rcx,rdi
  407a6a:	call   QWORD PTR [rip+0x17a10]        # 0x41f480
  407a70:	mov    eax,DWORD PTR [rbx+0x60]
  407a73:	test   eax,eax
  407a75:	js     0x407aa0
  407a77:	je     0x407b40
  407a7d:	sub    eax,0x1
  407a80:	test   eax,eax
  407a82:	mov    DWORD PTR [rbx+0x60],eax
  407a85:	je     0x407ab0
  407a87:	mov    rcx,rdi
  407a8a:	call   QWORD PTR [rip+0x17a80]        # 0x41f510
  407a90:	xor    eax,eax
  407a92:	add    rsp,0x28
  407a96:	pop    rbx
  407a97:	pop    rsi
  407a98:	pop    rdi
  407a99:	pop    rbp
  407a9a:	ret    
  407a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  407aa0:	cmp    eax,0xffffffff
  407aa3:	jne    0x407b53
  407aa9:	mov    DWORD PTR [rbx+0x60],0x0
  407ab0:	mov    eax,DWORD PTR [rbx+0x50]
  407ab3:	test   eax,eax
  407ab5:	je     0x407af0
  407ab7:	mov    edx,DWORD PTR [rbx+0x58]
  407aba:	mov    rax,QWORD PTR [rbx+0x48]
  407abe:	mov    DWORD PTR [rbx+0x60],0xffffffff
  407ac5:	mov    rcx,QWORD PTR [rax+rdx*8]
  407ac9:	call   QWORD PTR [rip+0x17a79]        # 0x41f548
  407acf:	mov    eax,DWORD PTR [rbx+0x58]
  407ad2:	sub    DWORD PTR [rbx+0x50],0x1
  407ad6:	lea    edx,[rax+0x1]
  407ad9:	mov    DWORD PTR [rbx+0x58],edx
  407adc:	je     0x407ae3
  407ade:	cmp    edx,DWORD PTR [rbx+0x54]
  407ae1:	jne    0x407a87
  407ae3:	mov    DWORD PTR [rbx+0x58],0x0
  407aea:	jmp    0x407a87
  407aec:	nop    DWORD PTR [rax+0x0]
  407af0:	mov    eax,DWORD PTR [rbx+0x38]
  407af3:	xor    esi,esi
  407af5:	mov    rbp,QWORD PTR [rip+0x17a4c]        # 0x41f548
  407afc:	test   eax,eax
  407afe:	mov    DWORD PTR [rbx+0x60],eax
  407b01:	je     0x407b27
  407b03:	mov    eax,esi
  407b05:	add    eax,DWORD PTR [rbx+0x40]
  407b08:	mov    edx,DWORD PTR [rbx+0x3c]
  407b0b:	mov    ecx,eax
  407b0d:	sub    ecx,edx
  407b0f:	cmp    eax,edx
  407b11:	mov    rdx,QWORD PTR [rbx+0x30]
  407b15:	cmovae rax,rcx
  407b19:	add    esi,0x1
  407b1c:	mov    rcx,QWORD PTR [rdx+rax*8]
  407b20:	call   rbp
  407b22:	cmp    esi,DWORD PTR [rbx+0x38]
  407b25:	jb     0x407b03
  407b27:	mov    DWORD PTR [rbx+0x38],0x0
  407b2e:	mov    DWORD PTR [rbx+0x40],0x0
  407b35:	jmp    0x407a87
  407b3a:	nop    WORD PTR [rax+rax*1+0x0]
  407b40:	mov    rcx,rdi
  407b43:	call   QWORD PTR [rip+0x179c7]        # 0x41f510
  407b49:	mov    eax,0x1
  407b4e:	jmp    0x407a53
  407b53:	call   0x4114b0
  407b58:	nop
  407b59:	nop    DWORD PTR [rax+0x0]
  407b60:	push   rbx
  407b61:	sub    rsp,0x30
  407b65:	mov    edx,DWORD PTR [rcx]
  407b67:	mov    eax,0x16
  407b6c:	test   edx,edx
  407b6e:	jne    0x407b80
  407b70:	add    rsp,0x30
  407b74:	pop    rbx
  407b75:	ret    
  407b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b80:	mov    eax,DWORD PTR [rcx+0x60]
  407b83:	test   eax,eax
  407b85:	je     0x407b92
  407b87:	mov    eax,0x10
  407b8c:	add    rsp,0x30
  407b90:	pop    rbx
  407b91:	ret    
  407b92:	mov    rbx,rcx
  407b95:	mov    DWORD PTR [rsp+0x2c],eax
  407b99:	lea    rcx,[rcx+0x8]
  407b9d:	call   QWORD PTR [rip+0x178d5]        # 0x41f478
  407ba3:	mov    rcx,QWORD PTR [rbx+0x30]
  407ba7:	mov    eax,DWORD PTR [rsp+0x2c]
  407bab:	test   rcx,rcx
  407bae:	je     0x407bb9
  407bb0:	call   0x411468
  407bb5:	mov    eax,DWORD PTR [rsp+0x2c]
  407bb9:	mov    rcx,QWORD PTR [rbx+0x48]
  407bbd:	test   rcx,rcx
  407bc0:	je     0x407bcf
  407bc2:	mov    DWORD PTR [rsp+0x2c],eax
  407bc6:	call   0x411468
  407bcb:	mov    eax,DWORD PTR [rsp+0x2c]
  407bcf:	mov    DWORD PTR [rbx],0x0
  407bd5:	jmp    0x407b70
  407bd7:	nop    WORD PTR [rax+rax*1+0x0]
  407be0:	push   rbx
  407be1:	sub    rsp,0x20
  407be5:	mov    rbx,rcx
  407be8:	mov    DWORD PTR [rcx+0x8],0x0
  407bef:	mov    DWORD PTR [rcx+0xc],0x0
  407bf6:	lea    rcx,[rcx+0x10]
  407bfa:	call   QWORD PTR [rip+0x17900]        # 0x41f500
  407c00:	mov    DWORD PTR [rbx],0x1
  407c06:	add    rsp,0x20
  407c0a:	pop    rbx
  407c0b:	ret    
  407c0c:	nop    DWORD PTR [rax+0x0]
  407c10:	push   rsi
  407c11:	push   rbx
  407c12:	sub    rsp,0x28
  407c16:	mov    eax,DWORD PTR [rcx]
  407c18:	mov    rbx,rcx
  407c1b:	test   eax,eax
  407c1d:	je     0x407c60
  407c1f:	call   QWORD PTR [rip+0x17883]        # 0x41f4a8
  407c25:	cmp    DWORD PTR [rbx+0x8],eax
  407c28:	mov    esi,eax
  407c2a:	je     0x407c39
  407c2c:	lea    rcx,[rbx+0x10]
  407c30:	call   QWORD PTR [rip+0x1784a]        # 0x41f480
  407c36:	mov    DWORD PTR [rbx+0x8],esi
  407c39:	mov    edx,DWORD PTR [rbx+0xc]
  407c3c:	mov    eax,0xb
  407c41:	add    edx,0x1
  407c44:	jne    0x407c50
  407c46:	add    rsp,0x28
  407c4a:	pop    rbx
  407c4b:	pop    rsi
  407c4c:	ret    
  407c4d:	nop    DWORD PTR [rax]
  407c50:	xor    al,al
  407c52:	mov    DWORD PTR [rbx+0xc],edx
  407c55:	add    rsp,0x28
  407c59:	pop    rbx
  407c5a:	pop    rsi
  407c5b:	ret    
  407c5c:	nop    DWORD PTR [rax+0x0]
  407c60:	mov    al,0x1
  407c62:	lock xadd DWORD PTR [rcx+0x4],eax
  407c67:	cmp    eax,0xffffffff
  407c6a:	je     0x407ca0
  407c6c:	mov    eax,DWORD PTR [rcx]
  407c6e:	mov    rsi,QWORD PTR [rip+0x178eb]        # 0x41f560
  407c75:	test   eax,eax
  407c77:	jne    0x407c1f
  407c79:	nop    DWORD PTR [rax+0x0]
  407c80:	xor    ecx,ecx
  407c82:	call   rsi
  407c84:	mov    eax,DWORD PTR [rbx]
  407c86:	test   eax,eax
  407c88:	jne    0x407c1f
  407c8a:	xor    ecx,ecx
  407c8c:	call   rsi
  407c8e:	mov    eax,DWORD PTR [rbx]
  407c90:	test   eax,eax
  407c92:	je     0x407c80
  407c94:	jmp    0x407c1f
  407c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ca0:	mov    DWORD PTR [rcx+0x8],0x0
  407ca7:	mov    DWORD PTR [rcx+0xc],0x0
  407cae:	lea    rcx,[rcx+0x10]
  407cb2:	call   QWORD PTR [rip+0x17848]        # 0x41f500
  407cb8:	mov    DWORD PTR [rbx],0x1
  407cbe:	jmp    0x407c1f
  407cc3:	nop    DWORD PTR [rax]
  407cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407cd0:	push   rdi
  407cd1:	push   rsi
  407cd2:	push   rbx
  407cd3:	sub    rsp,0x20
  407cd7:	mov    edi,DWORD PTR [rcx+0x8]
  407cda:	mov    esi,0x1
  407cdf:	mov    rbx,rcx
  407ce2:	call   QWORD PTR [rip+0x177c0]        # 0x41f4a8
  407ce8:	cmp    edi,eax
  407cea:	je     0x407d00
  407cec:	mov    eax,esi
  407cee:	add    rsp,0x20
  407cf2:	pop    rbx
  407cf3:	pop    rsi
  407cf4:	pop    rdi
  407cf5:	ret    
  407cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d00:	mov    eax,DWORD PTR [rbx+0xc]
  407d03:	mov    sil,0x16
  407d06:	test   eax,eax
  407d08:	je     0x407cec
  407d0a:	sub    eax,0x1
  407d0d:	xor    sil,sil
  407d10:	test   eax,eax
  407d12:	mov    DWORD PTR [rbx+0xc],eax
  407d15:	jne    0x407cec
  407d17:	mov    DWORD PTR [rbx+0x8],0x0
  407d1e:	lea    rcx,[rbx+0x10]
  407d22:	call   QWORD PTR [rip+0x177e8]        # 0x41f510
  407d28:	jmp    0x407cec
  407d2a:	nop    WORD PTR [rax+rax*1+0x0]
  407d30:	push   rbx
  407d31:	sub    rsp,0x20
  407d35:	mov    edx,DWORD PTR [rcx+0x8]
  407d38:	mov    eax,0x10
  407d3d:	test   edx,edx
  407d3f:	je     0x407d50
  407d41:	add    rsp,0x20
  407d45:	pop    rbx
  407d46:	ret    
  407d47:	nop    WORD PTR [rax+rax*1+0x0]
  407d50:	mov    rbx,rcx
  407d53:	lea    rcx,[rcx+0x10]
  407d57:	call   QWORD PTR [rip+0x1771b]        # 0x41f478
  407d5d:	xor    eax,eax
  407d5f:	mov    DWORD PTR [rbx],0x0
  407d65:	add    rsp,0x20
  407d69:	pop    rbx
  407d6a:	ret    
  407d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  407d70:	push   rdi
  407d71:	push   rsi
  407d72:	push   rbx
  407d73:	sub    rsp,0x20
  407d77:	mov    eax,DWORD PTR [rcx]
  407d79:	test   eax,eax
  407d7b:	jle    0x407d85
  407d7d:	add    rsp,0x20
  407d81:	pop    rbx
  407d82:	pop    rsi
  407d83:	pop    rdi
  407d84:	ret    
  407d85:	lea    rax,[rcx+0x4]
  407d89:	mov    rsi,rdx
  407d8c:	mov    rbx,rcx
  407d8f:	lock add DWORD PTR [rax],0x1
  407d93:	je     0x407de1
  407d95:	lock sub DWORD PTR [rax],0x1
  407d99:	mov    eax,DWORD PTR [rcx]
  407d9b:	mov    rsi,QWORD PTR [rip+0x177be]        # 0x41f560
  407da2:	test   eax,eax
  407da4:	jns    0x407dba
  407da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407db0:	xor    ecx,ecx
  407db2:	call   rsi
  407db4:	mov    eax,DWORD PTR [rbx]
  407db6:	test   eax,eax
  407db8:	js     0x407db0
  407dba:	mov    eax,DWORD PTR [rbx]
  407dbc:	test   eax,eax
  407dbe:	jg     0x407d7d
  407dc0:	lea    rsi,[rbx+0x8]
  407dc4:	mov    rcx,rsi
  407dc7:	call   QWORD PTR [rip+0x176b3]        # 0x41f480
  407dcd:	mov    rcx,rsi
  407dd0:	call   QWORD PTR [rip+0x1773a]        # 0x41f510
  407dd6:	mov    eax,DWORD PTR [rbx]
  407dd8:	test   eax,eax
  407dda:	jg     0x407d7d
  407ddc:	call   0x4114b0
  407de1:	lea    rdi,[rcx+0x8]
  407de5:	mov    rcx,rdi
  407de8:	call   QWORD PTR [rip+0x17712]        # 0x41f500
  407dee:	mov    rcx,rdi
  407df1:	call   QWORD PTR [rip+0x17689]        # 0x41f480
  407df7:	mov    DWORD PTR [rbx],0x0
  407dfd:	call   rsi
  407dff:	mov    rax,QWORD PTR [rip+0x1770a]        # 0x41f510
  407e06:	mov    rcx,rdi
  407e09:	mov    DWORD PTR [rbx],0x1
  407e0f:	add    rsp,0x20
  407e13:	pop    rbx
  407e14:	pop    rsi
  407e15:	pop    rdi
  407e16:	rex.W jmp rax
  407e19:	nop
  407e1a:	nop
  407e1b:	nop
  407e1c:	nop
  407e1d:	nop
  407e1e:	nop
  407e1f:	nop
  407e20:	push   rbx
  407e21:	sub    rsp,0x20
  407e25:	movzx  ebx,cx
  407e28:	mov    ecx,ebx
  407e2a:	call   0x40a720
  407e2f:	test   eax,eax
  407e31:	js     0x407e40
  407e33:	add    rsp,0x20
  407e37:	pop    rbx
  407e38:	ret    
  407e39:	nop    DWORD PTR [rax+0x0]
  407e40:	mov    edx,0x20
  407e45:	mov    ecx,ebx
  407e47:	call   0x411438
  407e4c:	test   eax,eax
  407e4e:	sete   al
  407e51:	movzx  eax,al
  407e54:	add    rsp,0x20
  407e58:	pop    rbx
  407e59:	ret    
  407e5a:	nop    WORD PTR [rax+rax*1+0x0]
  407e60:	push   rsi
  407e61:	push   rbx
  407e62:	sub    rsp,0x28
  407e66:	mov    rbx,rdx
  407e69:	mov    rdx,QWORD PTR [rdx]
  407e6c:	mov    rsi,rcx
  407e6f:	lea    rax,[rbx+0x14]
  407e73:	cmp    rdx,rax
  407e76:	je     0x407ea0
  407e78:	mov    QWORD PTR [rcx],rdx
  407e7b:	mov    rax,QWORD PTR [rbx+0x8]
  407e7f:	mov    QWORD PTR [rsi+0x8],rax
  407e83:	movzx  eax,BYTE PTR [rbx+0x10]
  407e87:	test   al,al
  407e89:	mov    BYTE PTR [rsi+0x10],al
  407e8c:	je     0x407e96
  407e8e:	movzx  eax,WORD PTR [rbx+0x12]
  407e92:	mov    WORD PTR [rsi+0x12],ax
  407e96:	add    rsp,0x28
  407e9a:	pop    rbx
  407e9b:	pop    rsi
  407e9c:	ret    
  407e9d:	nop    DWORD PTR [rax]
  407ea0:	lea    r9,[rcx+0x14]
  407ea4:	mov    r8,QWORD PTR [rbx+0x8]
  407ea8:	mov    rcx,r9
  407eab:	call   0x411418
  407eb0:	mov    QWORD PTR [rsi],rax
  407eb3:	jmp    0x407e7b
  407eb5:	nop
  407eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ec0:	lea    rdx,[rip+0xf4b9]        # 0x417380
  407ec7:	mov    eax,ecx
  407ec9:	and    ecx,0x1f
  407ecc:	shr    al,0x5
  407ecf:	and    eax,0x7
  407ed2:	mov    eax,DWORD PTR [rdx+rax*4]
  407ed5:	shr    eax,cl
  407ed7:	and    eax,0x1
  407eda:	ret    
  407edb:	nop
  407edc:	nop
  407edd:	nop
  407ede:	nop
  407edf:	nop
  407ee0:	push   rbp
  407ee1:	push   rsi
  407ee2:	push   rbx
  407ee3:	mov    rbp,rsp
  407ee6:	sub    rsp,0x40
  407eea:	movabs rax,0x1fffffffffffffff
  407ef4:	cmp    r8,rax
  407ef7:	mov    rsi,rcx
  407efa:	jbe    0x407f05
  407efc:	xor    eax,eax
  407efe:	mov    rsp,rbp
  407f01:	pop    rbx
  407f02:	pop    rsi
  407f03:	pop    rbp
  407f04:	ret    
  407f05:	lea    rcx,[r8*8+0x0]
  407f0d:	cmp    rcx,0xfaf
  407f14:	jbe    0x407fd3
  407f1a:	mov    QWORD PTR [rbp-0x18],r9
  407f1e:	mov    QWORD PTR [rbp-0x10],r8
  407f22:	mov    QWORD PTR [rbp-0x8],rdx
  407f26:	call   0x40a790
  407f2b:	mov    r9,QWORD PTR [rbp-0x18]
  407f2f:	mov    r8,QWORD PTR [rbp-0x10]
  407f33:	mov    rdx,QWORD PTR [rbp-0x8]
  407f37:	test   rax,rax
  407f3a:	je     0x407efc
  407f3c:	xor    r10d,r10d
  407f3f:	cmp    r8,0x2
  407f43:	mov    QWORD PTR [rax+0x8],0x1
  407f4b:	mov    ebx,0x2
  407f50:	jbe    0x407f86
  407f52:	movzx  r11d,BYTE PTR [rdx+rbx*1-0x1]
  407f58:	cmp    BYTE PTR [rdx+r10*1],r11b
  407f5c:	jne    0x407f71
  407f5e:	jmp    0x408000
  407f63:	sub    r10,QWORD PTR [rax+r10*8]
  407f67:	cmp    BYTE PTR [rdx+r10*1],r11b
  407f6b:	je     0x408000
  407f71:	test   r10,r10
  407f74:	jne    0x407f63
  407f76:	mov    QWORD PTR [rax+rbx*8],rbx
  407f7a:	xor    r10d,r10d
  407f7d:	add    rbx,0x1
  407f81:	cmp    rbx,r8
  407f84:	jne    0x407f52
  407f86:	mov    QWORD PTR [r9],0x0
  407f8d:	movzx  r11d,BYTE PTR [rsi]
  407f91:	mov    rbx,rsi
  407f94:	xor    r10d,r10d
  407f97:	nop    WORD PTR [rax+rax*1+0x0]
  407fa0:	test   r11b,r11b
  407fa3:	je     0x407fbf
  407fa5:	cmp    BYTE PTR [rdx+r10*1],r11b
  407fa9:	je     0x408013
  407fab:	test   r10,r10
  407fae:	je     0x407ff0
  407fb0:	mov    rcx,QWORD PTR [rax+r10*8]
  407fb4:	add    rsi,rcx
  407fb7:	sub    r10,rcx
  407fba:	test   r11b,r11b
  407fbd:	jne    0x407fa5
  407fbf:	mov    rcx,rax
  407fc2:	call   0x40a810
  407fc7:	mov    eax,0x1
  407fcc:	mov    rsp,rbp
  407fcf:	pop    rbx
  407fd0:	pop    rsi
  407fd1:	pop    rbp
  407fd2:	ret    
  407fd3:	lea    rax,[rcx+0x2e]
  407fd7:	and    rax,0xfffffffffffffff0
  407fdb:	call   0x40c560
  407fe0:	sub    rsp,rax
  407fe3:	lea    rax,[rsp+0x30]
  407fe8:	jmp    0x407f37
  407fed:	nop    DWORD PTR [rax]
  407ff0:	movzx  r11d,BYTE PTR [rbx+0x1]
  407ff5:	add    rsi,0x1
  407ff9:	add    rbx,0x1
  407ffd:	jmp    0x407fa0
  407fff:	nop
  408000:	add    r10,0x1
  408004:	mov    rcx,rbx
  408007:	sub    rcx,r10
  40800a:	mov    QWORD PTR [rax+rbx*8],rcx
  40800e:	jmp    0x407f7d
  408013:	add    r10,0x1
  408017:	lea    rcx,[rbx+0x1]
  40801b:	cmp    r8,r10
  40801e:	je     0x40802d
  408020:	movzx  r11d,BYTE PTR [rbx+0x1]
  408025:	mov    rbx,rcx
  408028:	jmp    0x407fa0
  40802d:	mov    rcx,rax
  408030:	mov    QWORD PTR [r9],rsi
  408033:	call   0x40a810
  408038:	mov    eax,0x1
  40803d:	jmp    0x407fcc
  40803f:	nop
  408040:	push   rbp
  408041:	push   r15
  408043:	push   r14
  408045:	push   r13
  408047:	push   r12
  408049:	push   rdi
  40804a:	push   rsi
  40804b:	push   rbx
  40804c:	sub    rsp,0xd8
  408053:	lea    rbp,[rsp+0x80]
  40805b:	mov    rdi,rcx
  40805e:	mov    rcx,rdx
  408061:	mov    rbx,rdx
  408064:	mov    QWORD PTR [rbp+0xb0],r8
  40806b:	call   0x40a890
  408070:	mov    rsi,rax
  408073:	mov    QWORD PTR [rbp-0x48],rax
  408077:	movabs rax,0x492492492492492
  408081:	cmp    rsi,rax
  408084:	jbe    0x408099
  408086:	xor    eax,eax
  408088:	lea    rsp,[rbp+0x58]
  40808c:	pop    rbx
  40808d:	pop    rsi
  40808e:	pop    rdi
  40808f:	pop    r12
  408091:	pop    r13
  408093:	pop    r14
  408095:	pop    r15
  408097:	pop    rbp
  408098:	ret    
  408099:	mov    rcx,QWORD PTR [rbp-0x48]
  40809d:	mov    rax,rcx
  4080a0:	shl    rcx,0x6
  4080a4:	shl    rax,0x3
  4080a8:	sub    rcx,rax
  4080ab:	cmp    rcx,0xfaf
  4080b2:	jbe    0x408237
  4080b8:	call   0x40a790
  4080bd:	mov    rsi,rax
  4080c0:	test   rsi,rsi
  4080c3:	je     0x408086
  4080c5:	mov    QWORD PTR [rbp+0x20],rbx
  4080c9:	mov    BYTE PTR [rbp+0x10],0x0
  4080cd:	lea    rbx,[rsi+0x14]
  4080d1:	mov    DWORD PTR [rbp+0x14],0x0
  4080d8:	mov    BYTE PTR [rbp+0x18],0x0
  4080dc:	mov    r13,QWORD PTR [rip+0x1059d]        # 0x418680
  4080e3:	mov    r12,QWORD PTR [rip+0x106d6]        # 0x4187c0
  4080ea:	jmp    0x408177
  4080ef:	nop
  4080f0:	mov    rcx,QWORD PTR [rbp+0x20]
  4080f4:	movzx  eax,BYTE PTR [rcx]
  4080f7:	mov    edx,eax
  4080f9:	and    eax,0x1f
  4080fc:	shr    dl,0x5
  4080ff:	and    edx,0x7
  408102:	mov    edx,DWORD PTR [r12+rdx*4]
  408106:	bt     edx,eax
  408109:	jae    0x408251
  40810f:	mov    QWORD PTR [rbp+0x28],0x1
  408117:	movsx  ax,BYTE PTR [rcx]
  40811b:	mov    BYTE PTR [rbp+0x30],0x1
  40811f:	mov    BYTE PTR [rbp+0x18],0x1
  408123:	mov    WORD PTR [rbp+0x32],ax
  408127:	cmp    WORD PTR [rbp+0x32],0x0
  40812c:	je     0x408299
  408132:	lea    r14,[rbp+0x10]
  408136:	mov    eax,0x1
  40813b:	mov    rdx,QWORD PTR [rbp+0x20]
  40813f:	add    r14,0x24
  408143:	cmp    rdx,r14
  408146:	je     0x40821e
  40814c:	mov    QWORD PTR [rbx-0x14],rdx
  408150:	mov    rdx,QWORD PTR [rbp+0x28]
  408154:	test   al,al
  408156:	mov    BYTE PTR [rbx-0x4],al
  408159:	mov    QWORD PTR [rbx-0xc],rdx
  40815d:	je     0x408167
  40815f:	movzx  eax,WORD PTR [rbp+0x32]
  408163:	mov    WORD PTR [rbx-0x2],ax
  408167:	mov    rax,QWORD PTR [rbp+0x28]
  40816b:	add    QWORD PTR [rbp+0x20],rax
  40816f:	add    rbx,0x30
  408173:	mov    BYTE PTR [rbp+0x18],0x0
  408177:	cmp    BYTE PTR [rbp+0x10],0x0
  40817b:	lea    r14,[rbp+0x10]
  40817f:	je     0x4080f0
  408185:	mov    rax,QWORD PTR [r13+0x0]
  408189:	mov    r15,QWORD PTR [rbp+0x20]
  40818d:	movsxd rdx,DWORD PTR [rax]
  408190:	mov    rcx,r15
  408193:	call   0x4027b0
  408198:	lea    rcx,[r14+0x22]
  40819c:	lea    r9,[r14+0x4]
  4081a0:	mov    r8,rax
  4081a3:	mov    rdx,r15
  4081a6:	call   0x404520
  4081ab:	cmp    rax,0xffffffffffffffff
  4081af:	mov    QWORD PTR [rbp+0x28],rax
  4081b3:	je     0x40826f
  4081b9:	cmp    rax,0xfffffffffffffffe
  4081bd:	je     0x408286
  4081c3:	test   rax,rax
  4081c6:	jne    0x4081e8
  4081c8:	mov    rax,QWORD PTR [rbp+0x20]
  4081cc:	mov    QWORD PTR [rbp+0x28],0x1
  4081d4:	cmp    BYTE PTR [rax],0x0
  4081d7:	jne    0x4089d8
  4081dd:	cmp    WORD PTR [rbp+0x32],0x0
  4081e2:	jne    0x4089ba
  4081e8:	lea    rcx,[r14+0x4]
  4081ec:	mov    BYTE PTR [rbp+0x30],0x1
  4081f0:	call   0x404630
  4081f5:	test   eax,eax
  4081f7:	je     0x4081fd
  4081f9:	mov    BYTE PTR [rbp+0x10],0x0
  4081fd:	movzx  eax,BYTE PTR [rbp+0x30]
  408201:	mov    BYTE PTR [rbp+0x18],0x1
  408205:	test   al,al
  408207:	jne    0x408127
  40820d:	mov    rdx,QWORD PTR [rbp+0x20]
  408211:	add    r14,0x24
  408215:	cmp    rdx,r14
  408218:	jne    0x40814c
  40821e:	mov    r8,QWORD PTR [rbp+0x28]
  408222:	mov    rcx,rbx
  408225:	call   0x411418
  40822a:	mov    QWORD PTR [rbx-0x14],rbx
  40822e:	movzx  eax,BYTE PTR [rbp+0x30]
  408232:	jmp    0x408150
  408237:	lea    rax,[rcx+0x2e]
  40823b:	and    rax,0xfffffffffffffff0
  40823f:	call   0x40c560
  408244:	sub    rsp,rax
  408247:	lea    rsi,[rsp+0x30]
  40824c:	jmp    0x4080c0
  408251:	lea    r14,[rbp+0x10]
  408255:	lea    rcx,[r14+0x4]
  408259:	call   0x404630
  40825e:	test   eax,eax
  408260:	je     0x408967
  408266:	mov    BYTE PTR [rbp+0x10],0x1
  40826a:	jmp    0x408185
  40826f:	mov    QWORD PTR [rbp+0x28],0x1
  408277:	mov    BYTE PTR [rbp+0x30],0x0
  40827b:	mov    BYTE PTR [rbp+0x18],0x1
  40827f:	xor    eax,eax
  408281:	jmp    0x40813b
  408286:	mov    rcx,QWORD PTR [rbp+0x20]
  40828a:	call   0x4113b8
  40828f:	mov    BYTE PTR [rbp+0x30],0x0
  408293:	mov    QWORD PTR [rbp+0x28],rax
  408297:	jmp    0x40827b
  408299:	mov    rax,QWORD PTR [rbp-0x48]
  40829d:	lea    r12,[rax+rax*2]
  4082a1:	shl    r12,0x4
  4082a5:	add    r12,rsi
  4082a8:	cmp    rax,0x2
  4082ac:	mov    QWORD PTR [r12+0x8],0x1
  4082b5:	jbe    0x40836b
  4082bb:	lea    r14,[rsi+0x40]
  4082bf:	mov    QWORD PTR [rbp+0xa0],rdi
  4082c6:	xor    r13d,r13d
  4082c9:	mov    rdi,r12
  4082cc:	mov    ebx,0x2
  4082d1:	mov    r15,rax
  4082d4:	mov    r12,rsi
  4082d7:	nop    WORD PTR [rax+rax*1+0x0]
  4082e0:	movzx  esi,BYTE PTR [r14]
  4082e4:	jmp    0x408313
  4082e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4082f0:	cmp    BYTE PTR [rax+0x10],0x0
  4082f4:	je     0x408324
  4082f6:	movzx  eax,WORD PTR [rax+0x12]
  4082fa:	cmp    WORD PTR [r14+0x2],ax
  4082ff:	sete   al
  408302:	test   al,al
  408304:	jne    0x408343
  408306:	test   r13,r13
  408309:	je     0x408720
  40830f:	sub    r13,QWORD PTR [rdi+r13*8]
  408313:	lea    rax,[r13+r13*2+0x0]
  408318:	shl    rax,0x4
  40831c:	add    rax,r12
  40831f:	test   sil,sil
  408322:	jne    0x4082f0
  408324:	mov    r8,QWORD PTR [r14-0x8]
  408328:	cmp    r8,QWORD PTR [rax+0x8]
  40832c:	jne    0x408306
  40832e:	mov    rcx,QWORD PTR [r14-0x10]
  408332:	mov    rdx,QWORD PTR [rax]
  408335:	call   0x411420
  40833a:	test   eax,eax
  40833c:	sete   al
  40833f:	test   al,al
  408341:	je     0x408306
  408343:	add    r13,0x1
  408347:	mov    rax,rbx
  40834a:	sub    rax,r13
  40834d:	mov    QWORD PTR [rdi+rbx*8],rax
  408351:	add    rbx,0x1
  408355:	add    r14,0x30
  408359:	cmp    rbx,r15
  40835c:	jne    0x4082e0
  40835e:	mov    rsi,r12
  408361:	mov    r12,rdi
  408364:	mov    rdi,QWORD PTR [rbp+0xa0]
  40836b:	mov    rax,QWORD PTR [rbp+0xb0]
  408372:	lea    r13,[rbp-0x30]
  408376:	mov    QWORD PTR [rbp-0x20],rdi
  40837a:	mov    QWORD PTR [rbp+0x20],rdi
  40837e:	mov    BYTE PTR [rbp-0x30],0x0
  408382:	xor    ebx,ebx
  408384:	mov    DWORD PTR [rbp-0x2c],0x0
  40838b:	mov    BYTE PTR [rbp-0x28],0x0
  40838f:	xor    edi,edi
  408391:	mov    QWORD PTR [rax],0x0
  408398:	lea    rax,[rbp+0x10]
  40839c:	mov    BYTE PTR [rbp+0x10],0x0
  4083a0:	mov    DWORD PTR [rbp+0x14],0x0
  4083a7:	mov    BYTE PTR [rbp+0x18],0x0
  4083ab:	mov    QWORD PTR [rbp-0x50],rax
  4083af:	lea    rax,[rbp+0x14]
  4083b3:	mov    QWORD PTR [rbp-0x38],rsi
  4083b7:	mov    QWORD PTR [rbp-0x58],r12
  4083bb:	mov    QWORD PTR [rbp-0x60],rax
  4083bf:	lea    rax,[r13+0x4]
  4083c3:	mov    QWORD PTR [rbp-0x40],rax
  4083c7:	nop    WORD PTR [rax+rax*1+0x0]
  4083d0:	test   bl,bl
  4083d2:	je     0x408585
  4083d8:	movzx  ebx,BYTE PTR [rbp+0x30]
  4083dc:	test   bl,bl
  4083de:	jne    0x4085d9
  4083e4:	lea    rax,[rdi+rdi*2]
  4083e8:	shl    rax,0x4
  4083ec:	add    rax,QWORD PTR [rbp-0x38]
  4083f0:	mov    r8,QWORD PTR [rax+0x8]
  4083f4:	xor    ebx,ebx
  4083f6:	cmp    r8,QWORD PTR [rbp+0x28]
  4083fa:	je     0x408550
  408400:	test   rdi,rdi
  408403:	je     0x4086d4
  408409:	mov    rax,QWORD PTR [rbp-0x58]
  40840d:	movzx  r12d,BYTE PTR [rbp-0x28]
  408412:	mov    rbx,QWORD PTR [rax+rdi*8]
  408416:	sub    rdi,rbx
  408419:	test   rbx,rbx
  40841c:	je     0x408710
  408422:	test   r12b,r12b
  408425:	mov    r15,QWORD PTR [rip+0x10254]        # 0x418680
  40842c:	mov    r14,QWORD PTR [rip+0x1038d]        # 0x4187c0
  408433:	je     0x408458
  408435:	movzx  r12d,BYTE PTR [rbp-0x10]
  40843a:	test   r12b,r12b
  40843d:	jne    0x40849c
  40843f:	mov    rax,QWORD PTR [rbp-0x18]
  408443:	add    QWORD PTR [rbp-0x20],rax
  408447:	sub    rbx,0x1
  40844b:	mov    BYTE PTR [rbp-0x28],0x0
  40844f:	je     0x408710
  408455:	xor    r12d,r12d
  408458:	cmp    BYTE PTR [rbp-0x30],0x0
  40845c:	jne    0x4084c5
  40845e:	mov    rcx,QWORD PTR [rbp-0x20]
  408462:	movzx  eax,BYTE PTR [rcx]
  408465:	mov    edx,eax
  408467:	and    eax,0x1f
  40846a:	shr    dl,0x5
  40846d:	and    edx,0x7
  408470:	mov    edx,DWORD PTR [r14+rdx*4]
  408474:	bt     edx,eax
  408477:	jae    0x4084b0
  408479:	mov    QWORD PTR [rbp-0x18],0x1
  408481:	movsx  ax,BYTE PTR [rcx]
  408485:	mov    r12d,0x1
  40848b:	mov    BYTE PTR [rbp-0x10],0x1
  40848f:	mov    WORD PTR [rbp-0xe],ax
  408493:	test   r12b,r12b
  408496:	mov    BYTE PTR [rbp-0x28],0x1
  40849a:	je     0x40843f
  40849c:	cmp    WORD PTR [rbp-0xe],0x0
  4084a1:	jne    0x40843f
  4084a3:	call   0x4114b0
  4084a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4084b0:	mov    rcx,QWORD PTR [rbp-0x40]
  4084b4:	call   0x404630
  4084b9:	test   eax,eax
  4084bb:	je     0x408730
  4084c1:	mov    BYTE PTR [rbp-0x30],0x1
  4084c5:	mov    rax,QWORD PTR [r15]
  4084c8:	mov    rsi,QWORD PTR [rbp-0x20]
  4084cc:	movsxd rdx,DWORD PTR [rax]
  4084cf:	mov    rcx,rsi
  4084d2:	call   0x4027b0
  4084d7:	lea    rcx,[r13+0x22]
  4084db:	lea    r9,[r13+0x4]
  4084df:	mov    r8,rax
  4084e2:	mov    rdx,rsi
  4084e5:	call   0x404520
  4084ea:	cmp    rax,0xffffffffffffffff
  4084ee:	mov    QWORD PTR [rbp-0x18],rax
  4084f2:	je     0x408600
  4084f8:	cmp    rax,0xfffffffffffffffe
  4084fc:	je     0x408611
  408502:	test   rax,rax
  408505:	jne    0x408527
  408507:	mov    rax,QWORD PTR [rbp-0x20]
  40850b:	mov    QWORD PTR [rbp-0x18],0x1
  408513:	cmp    BYTE PTR [rax],0x0
  408516:	jne    0x4087e0
  40851c:	cmp    WORD PTR [rbp-0xe],0x0
  408521:	jne    0x4087c0
  408527:	lea    rcx,[r13+0x4]
  40852b:	mov    BYTE PTR [rbp-0x10],0x1
  40852f:	call   0x404630
  408534:	test   eax,eax
  408536:	je     0x40853c
  408538:	mov    BYTE PTR [rbp-0x30],0x0
  40853c:	movzx  r12d,BYTE PTR [rbp-0x10]
  408541:	jmp    0x408493
  408546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408550:	mov    rdx,QWORD PTR [rbp+0x20]
  408554:	mov    rcx,QWORD PTR [rax]
  408557:	call   0x411420
  40855c:	test   eax,eax
  40855e:	sete   bl
  408561:	test   bl,bl
  408563:	je     0x408400
  408569:	add    rdi,0x1
  40856d:	mov    rax,QWORD PTR [rbp+0x28]
  408571:	add    QWORD PTR [rbp+0x20],rax
  408575:	cmp    rdi,QWORD PTR [rbp-0x48]
  408579:	mov    BYTE PTR [rbp+0x18],0x0
  40857d:	je     0x408985
  408583:	xor    ebx,ebx
  408585:	cmp    BYTE PTR [rbp+0x10],0x0
  408589:	jne    0x408645
  40858f:	mov    rcx,QWORD PTR [rbp+0x20]
  408593:	mov    rsi,QWORD PTR [rip+0x10226]        # 0x4187c0
  40859a:	movzx  eax,BYTE PTR [rcx]
  40859d:	mov    edx,eax
  40859f:	and    eax,0x1f
  4085a2:	shr    dl,0x5
  4085a5:	and    edx,0x7
  4085a8:	mov    edx,DWORD PTR [rsi+rdx*4]
  4085ab:	bt     edx,eax
  4085ae:	jae    0x408630
  4085b4:	mov    QWORD PTR [rbp+0x28],0x1
  4085bc:	movsx  ax,BYTE PTR [rcx]
  4085c0:	mov    ebx,0x1
  4085c5:	mov    BYTE PTR [rbp+0x30],0x1
  4085c9:	mov    WORD PTR [rbp+0x32],ax
  4085cd:	test   bl,bl
  4085cf:	mov    BYTE PTR [rbp+0x18],0x1
  4085d3:	je     0x4083e4
  4085d9:	movzx  edx,WORD PTR [rbp+0x32]
  4085dd:	test   dx,dx
  4085e0:	jne    0x4088c4
  4085e6:	mov    rsi,QWORD PTR [rbp-0x38]
  4085ea:	mov    rcx,rsi
  4085ed:	call   0x40a810
  4085f2:	mov    eax,0x1
  4085f7:	jmp    0x408088
  4085fc:	nop    DWORD PTR [rax+0x0]
  408600:	mov    QWORD PTR [rbp-0x18],0x1
  408608:	mov    BYTE PTR [rbp-0x10],0x0
  40860c:	jmp    0x408493
  408611:	mov    rcx,QWORD PTR [rbp-0x20]
  408615:	call   0x4113b8
  40861a:	mov    BYTE PTR [rbp-0x10],0x0
  40861e:	mov    QWORD PTR [rbp-0x18],rax
  408622:	jmp    0x408493
  408627:	nop    WORD PTR [rax+rax*1+0x0]
  408630:	mov    rcx,QWORD PTR [rbp-0x60]
  408634:	call   0x404630
  408639:	test   eax,eax
  40863b:	je     0x4088e6
  408641:	mov    BYTE PTR [rbp+0x10],0x1
  408645:	mov    rax,QWORD PTR [rip+0x10034]        # 0x418680
  40864c:	mov    r14,QWORD PTR [rbp+0x20]
  408650:	mov    rax,QWORD PTR [rax]
  408653:	mov    rcx,r14
  408656:	movsxd rdx,DWORD PTR [rax]
  408659:	call   0x4027b0
  40865e:	mov    r8,rax
  408661:	mov    rax,QWORD PTR [rbp-0x50]
  408665:	mov    rdx,r14
  408668:	lea    rcx,[rax+0x22]
  40866c:	lea    r9,[rax+0x4]
  408670:	call   0x404520
  408675:	cmp    rax,0xffffffffffffffff
  408679:	mov    QWORD PTR [rbp+0x28],rax
  40867d:	je     0x408800
  408683:	cmp    rax,0xfffffffffffffffe
  408687:	je     0x4088ae
  40868d:	test   rax,rax
  408690:	jne    0x4086b2
  408692:	mov    rax,QWORD PTR [rbp+0x20]
  408696:	mov    QWORD PTR [rbp+0x28],0x1
  40869e:	cmp    BYTE PTR [rax],0x0
  4086a1:	jne    0x408922
  4086a7:	cmp    WORD PTR [rbp+0x32],0x0
  4086ac:	jne    0x408904
  4086b2:	mov    rax,QWORD PTR [rbp-0x50]
  4086b6:	mov    BYTE PTR [rbp+0x30],0x1
  4086ba:	lea    rcx,[rax+0x4]
  4086be:	call   0x404630
  4086c3:	test   eax,eax
  4086c5:	je     0x4086cb
  4086c7:	mov    BYTE PTR [rbp+0x10],0x0
  4086cb:	movzx  ebx,BYTE PTR [rbp+0x30]
  4086cf:	jmp    0x4085cd
  4086d4:	movzx  r14d,BYTE PTR [rbp-0x28]
  4086d9:	test   r14b,r14b
  4086dc:	je     0x408750
  4086de:	movzx  r14d,BYTE PTR [rbp-0x10]
  4086e3:	test   r14b,r14b
  4086e6:	jne    0x4087a7
  4086ec:	mov    rax,QWORD PTR [rbp-0x18]
  4086f0:	mov    BYTE PTR [rbp-0x28],0x0
  4086f4:	add    QWORD PTR [rbp-0x20],rax
  4086f8:	mov    BYTE PTR [rbp+0x18],0x0
  4086fc:	mov    rax,QWORD PTR [rbp+0x28]
  408700:	add    QWORD PTR [rbp+0x20],rax
  408704:	jmp    0x408585
  408709:	nop    DWORD PTR [rax+0x0]
  408710:	movzx  ebx,BYTE PTR [rbp+0x18]
  408714:	jmp    0x4083d0
  408719:	nop    DWORD PTR [rax+0x0]
  408720:	mov    QWORD PTR [rdi+rbx*8],rbx
  408724:	jmp    0x408351
  408729:	nop    DWORD PTR [rax+0x0]
  408730:	lea    rdx,[rip+0xec69]        # 0x4173a0
  408737:	lea    rcx,[rip+0xec6c]        # 0x4173aa
  40873e:	mov    r8d,0x96
  408744:	call   0x40ca90
  408749:	jmp    0x4084c1
  40874e:	xchg   ax,ax
  408750:	cmp    BYTE PTR [rbp-0x30],0x0
  408754:	jne    0x408826
  40875a:	mov    rcx,QWORD PTR [rbp-0x20]
  40875e:	mov    r8,QWORD PTR [rip+0x1005b]        # 0x4187c0
  408765:	movzx  eax,BYTE PTR [rcx]
  408768:	mov    edx,eax
  40876a:	and    eax,0x1f
  40876d:	shr    dl,0x5
  408770:	and    edx,0x7
  408773:	mov    edx,DWORD PTR [r8+rdx*4]
  408777:	bt     edx,eax
  40877a:	jae    0x408811
  408780:	mov    QWORD PTR [rbp-0x18],0x1
  408788:	movsx  ax,BYTE PTR [rcx]
  40878c:	mov    r14d,0x1
  408792:	mov    BYTE PTR [rbp-0x10],0x1
  408796:	mov    WORD PTR [rbp-0xe],ax
  40879a:	test   r14b,r14b
  40879d:	mov    BYTE PTR [rbp-0x28],0x1
  4087a1:	je     0x4086ec
  4087a7:	cmp    WORD PTR [rbp-0xe],0x0
  4087ac:	jne    0x4086ec
  4087b2:	jmp    0x4084a3
  4087b7:	nop    WORD PTR [rax+rax*1+0x0]
  4087c0:	lea    rdx,[rip+0xebd9]        # 0x4173a0
  4087c7:	lea    rcx,[rip+0xec0a]        # 0x4173d8
  4087ce:	mov    r8d,0xb3
  4087d4:	call   0x40ca90
  4087d9:	jmp    0x408527
  4087de:	xchg   ax,ax
  4087e0:	lea    rdx,[rip+0xebb9]        # 0x4173a0
  4087e7:	lea    rcx,[rip+0xebd3]        # 0x4173c1
  4087ee:	mov    r8d,0xb2
  4087f4:	call   0x40ca90
  4087f9:	jmp    0x40851c
  4087fe:	xchg   ax,ax
  408800:	mov    QWORD PTR [rbp+0x28],0x1
  408808:	mov    BYTE PTR [rbp+0x30],0x0
  40880c:	jmp    0x4085cd
  408811:	mov    rcx,QWORD PTR [rbp-0x40]
  408815:	call   0x404630
  40881a:	test   eax,eax
  40881c:	je     0x40899c
  408822:	mov    BYTE PTR [rbp-0x30],0x1
  408826:	mov    rax,QWORD PTR [rip+0xfe53]        # 0x418680
  40882d:	mov    r15,QWORD PTR [rbp-0x20]
  408831:	mov    rax,QWORD PTR [rax]
  408834:	mov    rcx,r15
  408837:	movsxd rdx,DWORD PTR [rax]
  40883a:	call   0x4027b0
  40883f:	lea    rcx,[r13+0x22]
  408843:	lea    r9,[r13+0x4]
  408847:	mov    r8,rax
  40884a:	mov    rdx,r15
  40884d:	call   0x404520
  408852:	cmp    rax,0xffffffffffffffff
  408856:	mov    QWORD PTR [rbp-0x18],rax
  40885a:	je     0x408940
  408860:	cmp    rax,0xfffffffffffffffe
  408864:	je     0x408951
  40886a:	test   rax,rax
  40886d:	jne    0x40888f
  40886f:	mov    rax,QWORD PTR [rbp-0x20]
  408873:	mov    QWORD PTR [rbp-0x18],0x1
  40887b:	cmp    BYTE PTR [rax],0x0
  40887e:	jne    0x4089f6
  408884:	cmp    WORD PTR [rbp-0xe],0x0
  408889:	jne    0x408a1a
  40888f:	lea    rcx,[r13+0x4]
  408893:	mov    BYTE PTR [rbp-0x10],0x1
  408897:	call   0x404630
  40889c:	test   eax,eax
  40889e:	je     0x4088a4
  4088a0:	mov    BYTE PTR [rbp-0x30],0x0
  4088a4:	movzx  r14d,BYTE PTR [rbp-0x10]
  4088a9:	jmp    0x40879a
  4088ae:	mov    rcx,QWORD PTR [rbp+0x20]
  4088b2:	call   0x4113b8
  4088b7:	mov    BYTE PTR [rbp+0x30],0x0
  4088bb:	mov    QWORD PTR [rbp+0x28],rax
  4088bf:	jmp    0x4085cd
  4088c4:	lea    rax,[rdi+rdi*2]
  4088c8:	shl    rax,0x4
  4088cc:	add    rax,QWORD PTR [rbp-0x38]
  4088d0:	cmp    BYTE PTR [rax+0x10],0x0
  4088d4:	je     0x4083f0
  4088da:	cmp    dx,WORD PTR [rax+0x12]
  4088de:	sete   bl
  4088e1:	jmp    0x408561
  4088e6:	lea    rdx,[rip+0xeab3]        # 0x4173a0
  4088ed:	lea    rcx,[rip+0xeab6]        # 0x4173aa
  4088f4:	mov    r8d,0x96
  4088fa:	call   0x40ca90
  4088ff:	jmp    0x408641
  408904:	lea    rdx,[rip+0xea95]        # 0x4173a0
  40890b:	lea    rcx,[rip+0xeac6]        # 0x4173d8
  408912:	mov    r8d,0xb3
  408918:	call   0x40ca90
  40891d:	jmp    0x4086b2
  408922:	lea    rdx,[rip+0xea77]        # 0x4173a0
  408929:	lea    rcx,[rip+0xea91]        # 0x4173c1
  408930:	mov    r8d,0xb2
  408936:	call   0x40ca90
  40893b:	jmp    0x4086a7
  408940:	mov    QWORD PTR [rbp-0x18],0x1
  408948:	mov    BYTE PTR [rbp-0x10],0x0
  40894c:	jmp    0x40879a
  408951:	mov    rcx,QWORD PTR [rbp-0x20]
  408955:	call   0x4113b8
  40895a:	mov    BYTE PTR [rbp-0x10],0x0
  40895e:	mov    QWORD PTR [rbp-0x18],rax
  408962:	jmp    0x40879a
  408967:	lea    rdx,[rip+0xea32]        # 0x4173a0
  40896e:	lea    rcx,[rip+0xea35]        # 0x4173aa
  408975:	mov    r8d,0x96
  40897b:	call   0x40ca90
  408980:	jmp    0x408266
  408985:	mov    rax,QWORD PTR [rbp-0x20]
  408989:	mov    rdi,QWORD PTR [rbp+0xb0]
  408990:	mov    rsi,QWORD PTR [rbp-0x38]
  408994:	mov    QWORD PTR [rdi],rax
  408997:	jmp    0x4085ea
  40899c:	lea    rdx,[rip+0xe9fd]        # 0x4173a0
  4089a3:	lea    rcx,[rip+0xea00]        # 0x4173aa
  4089aa:	mov    r8d,0x96
  4089b0:	call   0x40ca90
  4089b5:	jmp    0x408822
  4089ba:	lea    rdx,[rip+0xe9df]        # 0x4173a0
  4089c1:	lea    rcx,[rip+0xea10]        # 0x4173d8
  4089c8:	mov    r8d,0xb3
  4089ce:	call   0x40ca90
  4089d3:	jmp    0x4081e8
  4089d8:	lea    rdx,[rip+0xe9c1]        # 0x4173a0
  4089df:	lea    rcx,[rip+0xe9db]        # 0x4173c1
  4089e6:	mov    r8d,0xb2
  4089ec:	call   0x40ca90
  4089f1:	jmp    0x4081dd
  4089f6:	lea    rdx,[rip+0xe9a3]        # 0x4173a0
  4089fd:	lea    rcx,[rip+0xe9bd]        # 0x4173c1
  408a04:	mov    r8d,0xb2
  408a0a:	call   0x40ca90
  408a0f:	cmp    WORD PTR [rbp-0xe],0x0
  408a14:	je     0x40888f
  408a1a:	lea    rdx,[rip+0xe97f]        # 0x4173a0
  408a21:	lea    rcx,[rip+0xe9b0]        # 0x4173d8
  408a28:	mov    r8d,0xb3
  408a2e:	call   0x40ca90
  408a33:	jmp    0x40888f
  408a38:	nop    DWORD PTR [rax+rax*1+0x0]
  408a40:	push   r15
  408a42:	push   r14
  408a44:	push   r13
  408a46:	push   r12
  408a48:	push   rbp
  408a49:	push   rdi
  408a4a:	push   rsi
  408a4b:	push   rbx
  408a4c:	sub    rsp,0x1a8
  408a53:	mov    rbp,QWORD PTR [rip+0xfc26]        # 0x418680
  408a5a:	mov    QWORD PTR [rsp+0x1f0],rcx
  408a62:	mov    r14,rdx
  408a65:	mov    rax,QWORD PTR [rbp+0x0]
  408a69:	cmp    DWORD PTR [rax],0x1
  408a6c:	jle    0x408d60
  408a72:	movsx  ax,BYTE PTR [rdx]
  408a76:	mov    QWORD PTR [rsp+0x70],rdx
  408a7b:	mov    rsi,QWORD PTR [rip+0xfd3e]        # 0x4187c0
  408a82:	mov    BYTE PTR [rsp+0x60],0x0
  408a87:	mov    DWORD PTR [rsp+0x64],0x0
  408a8f:	mov    BYTE PTR [rsp+0x68],0x0
  408a94:	mov    edx,eax
  408a96:	mov    ecx,eax
  408a98:	shr    dl,0x5
  408a9b:	and    ecx,0x1f
  408a9e:	and    edx,0x7
  408aa1:	mov    edx,DWORD PTR [rsi+rdx*4]
  408aa4:	bt     edx,ecx
  408aa7:	jae    0x408e40
  408aad:	mov    QWORD PTR [rsp+0x78],0x1
  408ab6:	mov    WORD PTR [rsp+0x82],ax
  408abe:	mov    BYTE PTR [rsp+0x80],0x1
  408ac6:	mov    BYTE PTR [rsp+0x68],0x1
  408acb:	cmp    WORD PTR [rsp+0x82],0x0
  408ad4:	je     0x408f00
  408ada:	mov    rax,QWORD PTR [rsp+0x1f0]
  408ae2:	lea    r12,[rsp+0x160]
  408aea:	lea    r13,[rsp+0x120]
  408af2:	mov    QWORD PTR [rsp+0xb0],r14
  408afa:	mov    BYTE PTR [rsp+0xa0],0x0
  408b02:	xor    edi,edi
  408b04:	mov    DWORD PTR [rsp+0xa4],0x0
  408b0f:	mov    BYTE PTR [rsp+0xa8],0x0
  408b17:	mov    QWORD PTR [rsp+0xf0],rax
  408b1f:	lea    rax,[r12+0x4]
  408b24:	mov    BYTE PTR [rsp+0xe0],0x0
  408b2c:	mov    DWORD PTR [rsp+0xe4],0x0
  408b37:	mov    BYTE PTR [rsp+0xe8],0x0
  408b3f:	mov    QWORD PTR [rsp+0x40],rax
  408b44:	lea    rax,[rsp+0xa0]
  408b4c:	mov    QWORD PTR [rsp+0x28],0x0
  408b55:	mov    QWORD PTR [rsp+0x20],0x0
  408b5e:	mov    BYTE PTR [rsp+0x3f],0x1
  408b63:	mov    QWORD PTR [rsp+0x30],rax
  408b68:	lea    rax,[rsp+0xa4]
  408b70:	mov    QWORD PTR [rsp+0x1f8],r14
  408b78:	mov    QWORD PTR [rsp+0x50],rax
  408b7d:	lea    rax,[rsp+0xe0]
  408b85:	mov    QWORD PTR [rsp+0x48],rax
  408b8a:	cmp    BYTE PTR [rsp+0xe0],0x0
  408b92:	jne    0x408c2e
  408b98:	mov    rcx,QWORD PTR [rsp+0xf0]
  408ba0:	movzx  eax,BYTE PTR [rcx]
  408ba3:	mov    edx,eax
  408ba5:	and    eax,0x1f
  408ba8:	shr    dl,0x5
  408bab:	and    edx,0x7
  408bae:	mov    edx,DWORD PTR [rsi+rdx*4]
  408bb1:	bt     edx,eax
  408bb4:	jae    0x408c10
  408bb6:	mov    QWORD PTR [rsp+0xf8],0x1
  408bc2:	movsx  ax,BYTE PTR [rcx]
  408bc6:	mov    BYTE PTR [rsp+0x100],0x1
  408bce:	mov    BYTE PTR [rsp+0xe8],0x1
  408bd6:	mov    WORD PTR [rsp+0x102],ax
  408bde:	cmp    WORD PTR [rsp+0x102],0x0
  408be7:	jne    0x408f8a
  408bed:	nop    DWORD PTR [rax]
  408bf0:	xor    eax,eax
  408bf2:	add    rsp,0x1a8
  408bf9:	pop    rbx
  408bfa:	pop    rsi
  408bfb:	pop    rdi
  408bfc:	pop    rbp
  408bfd:	pop    r12
  408bff:	pop    r13
  408c01:	pop    r14
  408c03:	pop    r15
  408c05:	ret    
  408c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c10:	mov    rax,QWORD PTR [rsp+0x48]
  408c15:	lea    rcx,[rax+0x4]
  408c19:	call   0x404630
  408c1e:	test   eax,eax
  408c20:	je     0x409bfc
  408c26:	mov    BYTE PTR [rsp+0xe0],0x1
  408c2e:	mov    rax,QWORD PTR [rbp+0x0]
  408c32:	mov    rbx,QWORD PTR [rsp+0xf0]
  408c3a:	movsxd rdx,DWORD PTR [rax]
  408c3d:	mov    rcx,rbx
  408c40:	call   0x4027b0
  408c45:	mov    r8,rax
  408c48:	mov    rax,QWORD PTR [rsp+0x48]
  408c4d:	mov    rdx,rbx
  408c50:	lea    rcx,[rax+0x22]
  408c54:	lea    r9,[rax+0x4]
  408c58:	call   0x404520
  408c5d:	cmp    rax,0xffffffffffffffff
  408c61:	mov    QWORD PTR [rsp+0xf8],rax
  408c69:	je     0x409a10
  408c6f:	cmp    rax,0xfffffffffffffffe
  408c73:	je     0x408f0d
  408c79:	test   rax,rax
  408c7c:	jne    0x408caa
  408c7e:	mov    rax,QWORD PTR [rsp+0xf0]
  408c86:	mov    QWORD PTR [rsp+0xf8],0x1
  408c92:	cmp    BYTE PTR [rax],0x0
  408c95:	jne    0x409c5a
  408c9b:	cmp    WORD PTR [rsp+0x102],0x0
  408ca4:	jne    0x409c3c
  408caa:	mov    rax,QWORD PTR [rsp+0x48]
  408caf:	mov    BYTE PTR [rsp+0x100],0x1
  408cb7:	lea    rcx,[rax+0x4]
  408cbb:	call   0x404630
  408cc0:	test   eax,eax
  408cc2:	je     0x408ccc
  408cc4:	mov    BYTE PTR [rsp+0xe0],0x0
  408ccc:	movzx  eax,BYTE PTR [rsp+0x100]
  408cd4:	mov    BYTE PTR [rsp+0xe8],0x1
  408cdc:	test   al,al
  408cde:	jne    0x408bde
  408ce4:	cmp    QWORD PTR [rsp+0x28],0x9
  408cea:	jbe    0x408f3e
  408cf0:	cmp    BYTE PTR [rsp+0x3f],0x0
  408cf5:	je     0x408f3e
  408cfb:	mov    rax,QWORD PTR [rsp+0x28]
  408d00:	lea    rax,[rax+rax*4]
  408d04:	cmp    QWORD PTR [rsp+0x20],rax
  408d09:	jae    0x408fd0
  408d0f:	mov    rbx,QWORD PTR [rsp+0x20]
  408d14:	mov    BYTE PTR [rsp+0x3f],0x1
  408d19:	mov    QWORD PTR [rsp+0x20],rdi
  408d1e:	add    rbx,0x1
  408d22:	mov    r8,QWORD PTR [rsp+0xf8]
  408d2a:	cmp    r8,QWORD PTR [rsp+0x78]
  408d2f:	je     0x409742
  408d35:	mov    rdi,QWORD PTR [rsp+0x20]
  408d3a:	add    QWORD PTR [rsp+0xf0],r8
  408d42:	mov    BYTE PTR [rsp+0xe8],0x0
  408d4a:	add    QWORD PTR [rsp+0x28],0x1
  408d50:	mov    QWORD PTR [rsp+0x20],rbx
  408d55:	jmp    0x408b8a
  408d5a:	nop    WORD PTR [rax+rax*1+0x0]
  408d60:	movzx  r12d,BYTE PTR [rdx]
  408d64:	mov    rax,QWORD PTR [rsp+0x1f0]
  408d6c:	test   r12b,r12b
  408d6f:	je     0x408bf2
  408d75:	cmp    BYTE PTR [rax],0x0
  408d78:	je     0x408bf0
  408d7e:	mov    rax,QWORD PTR [rsp+0x1f0]
  408d86:	lea    rsi,[rsp+0x160]
  408d8e:	mov    rbp,rdx
  408d91:	xor    r13d,r13d
  408d94:	xor    r15d,r15d
  408d97:	xor    edi,edi
  408d99:	mov    QWORD PTR [rsp+0x20],rsi
  408d9e:	lea    rbx,[rax+0x1]
  408da2:	mov    eax,0x1
  408da7:	cmp    rdi,0x9
  408dab:	lea    rsi,[rbx-0x1]
  408daf:	jbe    0x408e10
  408db1:	test   al,al
  408db3:	je     0x408e10
  408db5:	lea    rax,[rdi+rdi*4]
  408db9:	cmp    r15,rax
  408dbc:	jb     0x4096d2
  408dc2:	test   rbp,rbp
  408dc5:	je     0x408de5
  408dc7:	mov    rdx,r15
  408dca:	mov    rcx,rbp
  408dcd:	sub    rdx,r13
  408dd0:	mov    r13,r15
  408dd3:	call   0x40c910
  408dd8:	add    rbp,rax
  408ddb:	cmp    BYTE PTR [rbp+0x0],0x0
  408ddf:	jne    0x4096d2
  408de5:	mov    rcx,r14
  408de8:	call   0x4113b8
  408ded:	mov    r9,QWORD PTR [rsp+0x20]
  408df2:	mov    r8,rax
  408df5:	mov    rdx,r14
  408df8:	mov    rcx,rsi
  408dfb:	call   0x407ee0
  408e00:	test   al,al
  408e02:	jne    0x409d0b
  408e08:	xor    ebp,ebp
  408e0a:	xor    eax,eax
  408e0c:	nop    DWORD PTR [rax+0x0]
  408e10:	add    rdi,0x1
  408e14:	cmp    r12b,BYTE PTR [rbx-0x1]
  408e18:	lea    r8,[r15+0x1]
  408e1c:	je     0x4096e9
  408e22:	cmp    BYTE PTR [rbx],0x0
  408e25:	je     0x408bf0
  408e2b:	add    rbx,0x1
  408e2f:	mov    r15,r8
  408e32:	jmp    0x408da7
  408e37:	nop    WORD PTR [rax+rax*1+0x0]
  408e40:	lea    rbx,[rsp+0x60]
  408e45:	lea    rcx,[rbx+0x4]
  408e49:	call   0x404630
  408e4e:	test   eax,eax
  408e50:	je     0x408f51
  408e56:	mov    rax,QWORD PTR [rbp+0x0]
  408e5a:	mov    rdi,QWORD PTR [rsp+0x70]
  408e5f:	mov    BYTE PTR [rsp+0x60],0x1
  408e64:	movsxd rdx,DWORD PTR [rax]
  408e67:	mov    rcx,rdi
  408e6a:	call   0x4027b0
  408e6f:	lea    rcx,[rbx+0x22]
  408e73:	lea    r9,[rbx+0x4]
  408e77:	mov    r8,rax
  408e7a:	mov    rdx,rdi
  408e7d:	call   0x404520
  408e82:	cmp    rax,0xffffffffffffffff
  408e86:	mov    QWORD PTR [rsp+0x78],rax
  408e8b:	je     0x408f6f
  408e91:	cmp    rax,0xfffffffffffffffe
  408e95:	je     0x409be0
  408e9b:	test   rax,rax
  408e9e:	jne    0x408ec6
  408ea0:	mov    rax,QWORD PTR [rsp+0x70]
  408ea5:	mov    QWORD PTR [rsp+0x78],0x1
  408eae:	cmp    BYTE PTR [rax],0x0
  408eb1:	jne    0x409b84
  408eb7:	cmp    WORD PTR [rsp+0x82],0x0
  408ec0:	jne    0x409b66
  408ec6:	lea    rcx,[rbx+0x4]
  408eca:	mov    BYTE PTR [rsp+0x80],0x1
  408ed2:	call   0x404630
  408ed7:	test   eax,eax
  408ed9:	je     0x408ee0
  408edb:	mov    BYTE PTR [rsp+0x60],0x0
  408ee0:	movzx  eax,BYTE PTR [rsp+0x80]
  408ee8:	mov    BYTE PTR [rsp+0x68],0x1
  408eed:	test   al,al
  408eef:	je     0x408ada
  408ef5:	jmp    0x408acb
  408efa:	nop    WORD PTR [rax+rax*1+0x0]
  408f00:	mov    rax,QWORD PTR [rsp+0x1f0]
  408f08:	jmp    0x408bf2
  408f0d:	mov    rcx,QWORD PTR [rsp+0xf0]
  408f15:	call   0x4113b8
  408f1a:	mov    BYTE PTR [rsp+0x100],0x0
  408f22:	mov    QWORD PTR [rsp+0xf8],rax
  408f2a:	cmp    QWORD PTR [rsp+0x28],0x9
  408f30:	mov    BYTE PTR [rsp+0xe8],0x1
  408f38:	ja     0x408cf0
  408f3e:	mov    rbx,QWORD PTR [rsp+0x20]
  408f43:	mov    QWORD PTR [rsp+0x20],rdi
  408f48:	add    rbx,0x1
  408f4c:	jmp    0x408d22
  408f51:	lea    rdx,[rip+0xe448]        # 0x4173a0
  408f58:	lea    rcx,[rip+0xe44b]        # 0x4173aa
  408f5f:	mov    r8d,0x96
  408f65:	call   0x40ca90
  408f6a:	jmp    0x408e56
  408f6f:	mov    QWORD PTR [rsp+0x78],0x1
  408f78:	mov    BYTE PTR [rsp+0x80],0x0
  408f80:	mov    BYTE PTR [rsp+0x68],0x1
  408f85:	jmp    0x408ada
  408f8a:	cmp    QWORD PTR [rsp+0x28],0x9
  408f90:	jbe    0x409bc6
  408f96:	cmp    BYTE PTR [rsp+0x3f],0x0
  408f9b:	je     0x409bc6
  408fa1:	mov    rax,QWORD PTR [rsp+0x28]
  408fa6:	lea    rax,[rax+rax*4]
  408faa:	cmp    QWORD PTR [rsp+0x20],rax
  408faf:	jae    0x408fd0
  408fb1:	mov    rbx,QWORD PTR [rsp+0x20]
  408fb6:	mov    BYTE PTR [rsp+0x3f],0x1
  408fbb:	mov    QWORD PTR [rsp+0x20],rdi
  408fc0:	add    rbx,0x1
  408fc4:	jmp    0x4090e9
  408fc9:	nop    DWORD PTR [rax+0x0]
  408fd0:	mov    r14,QWORD PTR [rsp+0x20]
  408fd5:	sub    r14,rdi
  408fd8:	je     0x4098d2
  408fde:	movzx  edi,BYTE PTR [rsp+0xa8]
  408fe6:	test   dil,dil
  408fe9:	je     0x409028
  408feb:	movzx  edi,BYTE PTR [rsp+0xc0]
  408ff3:	test   dil,dil
  408ff6:	jne    0x40908e
  408ffc:	mov    rbx,QWORD PTR [rsp+0xb8]
  409004:	add    rbx,QWORD PTR [rsp+0xb0]
  40900c:	xor    edi,edi
  40900e:	sub    r14,0x1
  409012:	mov    BYTE PTR [rsp+0xa8],0x0
  40901a:	mov    QWORD PTR [rsp+0xb0],rbx
  409022:	je     0x409911
  409028:	cmp    BYTE PTR [rsp+0xa0],0x0
  409030:	jne    0x40959a
  409036:	mov    rcx,QWORD PTR [rsp+0xb0]
  40903e:	movzx  eax,BYTE PTR [rcx]
  409041:	mov    edx,eax
  409043:	and    eax,0x1f
  409046:	shr    dl,0x5
  409049:	and    edx,0x7
  40904c:	mov    edx,DWORD PTR [rsi+rdx*4]
  40904f:	bt     edx,eax
  409052:	jae    0x409580
  409058:	mov    QWORD PTR [rsp+0xb8],0x1
  409064:	movsx  ax,BYTE PTR [rcx]
  409068:	mov    edi,0x1
  40906d:	mov    BYTE PTR [rsp+0xc0],0x1
  409075:	mov    WORD PTR [rsp+0xc2],ax
  40907d:	test   dil,dil
  409080:	mov    BYTE PTR [rsp+0xa8],0x1
  409088:	je     0x408ffc
  40908e:	cmp    WORD PTR [rsp+0xc2],0x0
  409097:	jne    0x408ffc
  40909d:	cmp    BYTE PTR [rsp+0xa8],0x0
  4090a5:	je     0x409909
  4090ab:	mov    rdx,QWORD PTR [rsp+0x1f8]
  4090b3:	mov    rcx,QWORD PTR [rsp+0x1f0]
  4090bb:	mov    r8,r12
  4090be:	call   0x408040
  4090c3:	test   al,al
  4090c5:	jne    0x409d0b
  4090cb:	movzx  eax,BYTE PTR [rsp+0x100]
  4090d3:	mov    BYTE PTR [rsp+0x3f],0x0
  4090d8:	mov    rdi,QWORD PTR [rsp+0x20]
  4090dd:	test   al,al
  4090df:	lea    rbx,[rdi+0x1]
  4090e3:	je     0x408d22
  4090e9:	cmp    BYTE PTR [rsp+0x80],0x0
  4090f1:	je     0x408d22
  4090f7:	movzx  eax,WORD PTR [rsp+0x82]
  4090ff:	cmp    WORD PTR [rsp+0x102],ax
  409107:	sete   dil
  40910b:	test   dil,dil
  40910e:	je     0x409490
  409114:	mov    rax,QWORD PTR [rsp+0xe0]
  40911c:	mov    rdx,QWORD PTR [rsp+0x100]
  409124:	mov    BYTE PTR [rsp+0x160],0x0
  40912c:	mov    DWORD PTR [rsp+0x164],0x0
  409137:	mov    BYTE PTR [rsp+0x168],0x0
  40913f:	mov    QWORD PTR [rsp+0x120],rax
  409147:	mov    rax,QWORD PTR [rsp+0xe8]
  40914f:	mov    QWORD PTR [rsp+0x140],rdx
  409157:	mov    rdx,QWORD PTR [rsp+0x108]
  40915f:	mov    QWORD PTR [rsp+0x128],rax
  409167:	mov    rax,QWORD PTR [rsp+0xf0]
  40916f:	mov    QWORD PTR [rsp+0x148],rdx
  409177:	mov    rdx,QWORD PTR [rsp+0x110]
  40917f:	mov    BYTE PTR [rsp+0x128],0x0
  409187:	mov    QWORD PTR [rsp+0x130],rax
  40918f:	mov    rax,QWORD PTR [rsp+0xf8]
  409197:	add    QWORD PTR [rsp+0x130],rax
  40919f:	mov    QWORD PTR [rsp+0x150],rdx
  4091a7:	mov    rdx,QWORD PTR [rsp+0x118]
  4091af:	mov    QWORD PTR [rsp+0x138],rax
  4091b7:	mov    rax,QWORD PTR [rsp+0x1f8]
  4091bf:	mov    QWORD PTR [rsp+0x158],rdx
  4091c7:	mov    QWORD PTR [rsp+0x170],rax
  4091cf:	movsx  ax,BYTE PTR [rax]
  4091d3:	mov    edx,eax
  4091d5:	mov    ecx,eax
  4091d7:	shr    dl,0x5
  4091da:	and    ecx,0x1f
  4091dd:	and    edx,0x7
  4091e0:	mov    edx,DWORD PTR [rsi+rdx*4]
  4091e3:	bt     edx,ecx
  4091e6:	jae    0x4097c0
  4091ec:	mov    QWORD PTR [rsp+0x178],0x1
  4091f8:	mov    WORD PTR [rsp+0x182],ax
  409200:	mov    BYTE PTR [rsp+0x180],0x1
  409208:	mov    BYTE PTR [rsp+0x168],0x1
  409210:	cmp    WORD PTR [rsp+0x182],0x0
  409219:	je     0x409b61
  40921f:	nop
  409220:	mov    rax,QWORD PTR [rsp+0x178]
  409228:	add    QWORD PTR [rsp+0x170],rax
  409230:	add    rbx,0x1
  409234:	mov    BYTE PTR [rsp+0x168],0x0
  40923c:	nop    DWORD PTR [rax+0x0]
  409240:	cmp    BYTE PTR [rsp+0x160],0x0
  409248:	jne    0x4092ca
  40924e:	mov    rcx,QWORD PTR [rsp+0x170]
  409256:	movzx  eax,BYTE PTR [rcx]
  409259:	mov    edx,eax
  40925b:	and    eax,0x1f
  40925e:	shr    dl,0x5
  409261:	and    edx,0x7
  409264:	mov    edx,DWORD PTR [rsi+rdx*4]
  409267:	bt     edx,eax
  40926a:	jae    0x4092b0
  40926c:	mov    QWORD PTR [rsp+0x178],0x1
  409278:	movsx  ax,BYTE PTR [rcx]
  40927c:	mov    BYTE PTR [rsp+0x180],0x1
  409284:	mov    BYTE PTR [rsp+0x168],0x1
  40928c:	mov    WORD PTR [rsp+0x182],ax
  409294:	cmp    WORD PTR [rsp+0x182],0x0
  40929d:	jne    0x409379
  4092a3:	mov    rax,QWORD PTR [rsp+0xf0]
  4092ab:	jmp    0x408bf2
  4092b0:	mov    rcx,QWORD PTR [rsp+0x40]
  4092b5:	call   0x404630
  4092ba:	test   eax,eax
  4092bc:	je     0x409780
  4092c2:	mov    BYTE PTR [rsp+0x160],0x1
  4092ca:	mov    rax,QWORD PTR [rbp+0x0]
  4092ce:	mov    r14,QWORD PTR [rsp+0x170]
  4092d6:	movsxd rdx,DWORD PTR [rax]
  4092d9:	mov    rcx,r14
  4092dc:	call   0x4027b0
  4092e1:	lea    rcx,[r12+0x22]
  4092e6:	lea    r9,[r12+0x4]
  4092eb:	mov    r8,rax
  4092ee:	mov    rdx,r14
  4092f1:	call   0x404520
  4092f6:	cmp    rax,0xffffffffffffffff
  4092fa:	mov    QWORD PTR [rsp+0x178],rax
  409302:	je     0x409645
  409308:	cmp    rax,0xfffffffffffffffe
  40930c:	je     0x409690
  409312:	test   rax,rax
  409315:	jne    0x409343
  409317:	mov    rax,QWORD PTR [rsp+0x170]
  40931f:	mov    QWORD PTR [rsp+0x178],0x1
  40932b:	cmp    BYTE PTR [rax],0x0
  40932e:	jne    0x409990
  409334:	cmp    WORD PTR [rsp+0x182],0x0
  40933d:	jne    0x409970
  409343:	lea    rcx,[r12+0x4]
  409348:	mov    BYTE PTR [rsp+0x180],0x1
  409350:	call   0x404630
  409355:	test   eax,eax
  409357:	je     0x409361
  409359:	mov    BYTE PTR [rsp+0x160],0x0
  409361:	movzx  eax,BYTE PTR [rsp+0x180]
  409369:	mov    BYTE PTR [rsp+0x168],0x1
  409371:	test   al,al
  409373:	jne    0x409294
  409379:	movzx  r14d,BYTE PTR [rsp+0x128]
  409382:	test   r14b,r14b
  409385:	je     0x4093f5
  409387:	movzx  r14d,BYTE PTR [rsp+0x140]
  409390:	test   r14b,r14b
  409393:	jne    0x409455
  409399:	mov    r8,QWORD PTR [rsp+0x138]
  4093a1:	cmp    r8,QWORD PTR [rsp+0x178]
  4093a9:	mov    eax,edi
  4093ab:	je     0x409560
  4093b1:	test   al,al
  4093b3:	lea    rdx,[rbx+0x1]
  4093b7:	jne    0x409490
  4093bd:	mov    rax,QWORD PTR [rsp+0x138]
  4093c5:	mov    BYTE PTR [rsp+0x128],0x0
  4093cd:	mov    rbx,rdx
  4093d0:	add    QWORD PTR [rsp+0x130],rax
  4093d8:	mov    BYTE PTR [rsp+0x168],0x0
  4093e0:	mov    rax,QWORD PTR [rsp+0x178]
  4093e8:	add    QWORD PTR [rsp+0x170],rax
  4093f0:	jmp    0x409240
  4093f5:	cmp    BYTE PTR [rsp+0x120],0x0
  4093fd:	jne    0x4094b9
  409403:	mov    rcx,QWORD PTR [rsp+0x130]
  40940b:	movzx  eax,BYTE PTR [rcx]
  40940e:	mov    edx,eax
  409410:	and    eax,0x1f
  409413:	shr    dl,0x5
  409416:	and    edx,0x7
  409419:	mov    edx,DWORD PTR [rsi+rdx*4]
  40941c:	bt     edx,eax
  40941f:	jae    0x4094a0
  409421:	mov    QWORD PTR [rsp+0x138],0x1
  40942d:	movsx  ax,BYTE PTR [rcx]
  409431:	mov    r14d,edi
  409434:	mov    BYTE PTR [rsp+0x140],0x1
  40943c:	mov    WORD PTR [rsp+0x142],ax
  409444:	test   r14b,r14b
  409447:	mov    BYTE PTR [rsp+0x128],0x1
  40944f:	je     0x409399
  409455:	movzx  eax,WORD PTR [rsp+0x142]
  40945d:	test   ax,ax
  409460:	je     0x408bf0
  409466:	cmp    BYTE PTR [rsp+0x180],0x0
  40946e:	je     0x409399
  409474:	cmp    ax,WORD PTR [rsp+0x182]
  40947c:	lea    rdx,[rbx+0x1]
  409480:	setne  al
  409483:	test   al,al
  409485:	je     0x4093bd
  40948b:	nop    DWORD PTR [rax+rax*1+0x0]
  409490:	mov    r8,QWORD PTR [rsp+0xf8]
  409498:	jmp    0x408d35
  40949d:	nop    DWORD PTR [rax]
  4094a0:	lea    rcx,[r13+0x4]
  4094a4:	call   0x404630
  4094a9:	test   eax,eax
  4094ab:	je     0x4097a0
  4094b1:	mov    BYTE PTR [rsp+0x120],0x1
  4094b9:	mov    rax,QWORD PTR [rbp+0x0]
  4094bd:	mov    r15,QWORD PTR [rsp+0x130]
  4094c5:	movsxd rdx,DWORD PTR [rax]
  4094c8:	mov    rcx,r15
  4094cb:	call   0x4027b0
  4094d0:	lea    rcx,[r13+0x22]
  4094d4:	lea    r9,[r13+0x4]
  4094d8:	mov    r8,rax
  4094db:	mov    rdx,r15
  4094de:	call   0x404520
  4094e3:	cmp    rax,0xffffffffffffffff
  4094e7:	mov    QWORD PTR [rsp+0x138],rax
  4094ef:	je     0x409670
  4094f5:	cmp    rax,0xfffffffffffffffe
  4094f9:	je     0x4096b0
  4094ff:	test   rax,rax
  409502:	jne    0x409530
  409504:	mov    rax,QWORD PTR [rsp+0x130]
  40950c:	mov    QWORD PTR [rsp+0x138],0x1
  409518:	cmp    BYTE PTR [rax],0x0
  40951b:	jne    0x4099d0
  409521:	cmp    WORD PTR [rsp+0x142],0x0
  40952a:	jne    0x4099b0
  409530:	lea    rcx,[r13+0x4]
  409534:	mov    BYTE PTR [rsp+0x140],0x1
  40953c:	call   0x404630
  409541:	test   eax,eax
  409543:	je     0x40954d
  409545:	mov    BYTE PTR [rsp+0x120],0x0
  40954d:	movzx  r14d,BYTE PTR [rsp+0x140]
  409556:	jmp    0x409444
  40955b:	nop    DWORD PTR [rax+rax*1+0x0]
  409560:	mov    rdx,QWORD PTR [rsp+0x170]
  409568:	mov    rcx,QWORD PTR [rsp+0x130]
  409570:	call   0x411420
  409575:	test   eax,eax
  409577:	setne  al
  40957a:	jmp    0x4093b1
  40957f:	nop
  409580:	mov    rcx,QWORD PTR [rsp+0x50]
  409585:	call   0x404630
  40958a:	test   eax,eax
  40958c:	je     0x4099f0
  409592:	mov    BYTE PTR [rsp+0xa0],0x1
  40959a:	mov    rax,QWORD PTR [rbp+0x0]
  40959e:	mov    rbx,QWORD PTR [rsp+0xb0]
  4095a6:	movsxd rdx,DWORD PTR [rax]
  4095a9:	mov    rcx,rbx
  4095ac:	call   0x4027b0
  4095b1:	mov    r8,rax
  4095b4:	mov    rax,QWORD PTR [rsp+0x30]
  4095b9:	mov    rdx,rbx
  4095bc:	lea    rcx,[rax+0x22]
  4095c0:	lea    r9,[rax+0x4]
  4095c4:	call   0x404520
  4095c9:	cmp    rax,0xffffffffffffffff
  4095cd:	mov    QWORD PTR [rsp+0xb8],rax
  4095d5:	je     0x409760
  4095db:	cmp    rax,0xfffffffffffffffe
  4095df:	je     0x4098b0
  4095e5:	test   rax,rax
  4095e8:	jne    0x409616
  4095ea:	mov    rax,QWORD PTR [rsp+0xb0]
  4095f2:	mov    QWORD PTR [rsp+0xb8],0x1
  4095fe:	cmp    BYTE PTR [rax],0x0
  409601:	jne    0x409b0c
  409607:	cmp    WORD PTR [rsp+0xc2],0x0
  409610:	jne    0x409aee
  409616:	mov    rax,QWORD PTR [rsp+0x30]
  40961b:	mov    BYTE PTR [rsp+0xc0],0x1
  409623:	lea    rcx,[rax+0x4]
  409627:	call   0x404630
  40962c:	test   eax,eax
  40962e:	je     0x409638
  409630:	mov    BYTE PTR [rsp+0xa0],0x0
  409638:	movzx  edi,BYTE PTR [rsp+0xc0]
  409640:	jmp    0x40907d
  409645:	mov    QWORD PTR [rsp+0x178],0x1
  409651:	mov    BYTE PTR [rsp+0x180],0x0
  409659:	mov    BYTE PTR [rsp+0x168],0x1
  409661:	jmp    0x409379
  409666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409670:	mov    QWORD PTR [rsp+0x138],0x1
  40967c:	mov    BYTE PTR [rsp+0x140],0x0
  409684:	jmp    0x409444
  409689:	nop    DWORD PTR [rax+0x0]
  409690:	mov    rcx,QWORD PTR [rsp+0x170]
  409698:	call   0x4113b8
  40969d:	mov    BYTE PTR [rsp+0x180],0x0
  4096a5:	mov    QWORD PTR [rsp+0x178],rax
  4096ad:	jmp    0x409659
  4096af:	nop
  4096b0:	mov    rcx,QWORD PTR [rsp+0x130]
  4096b8:	call   0x4113b8
  4096bd:	mov    BYTE PTR [rsp+0x140],0x0
  4096c5:	mov    QWORD PTR [rsp+0x138],rax
  4096cd:	jmp    0x409444
  4096d2:	add    rdi,0x1
  4096d6:	cmp    r12b,BYTE PTR [rbx-0x1]
  4096da:	mov    eax,0x1
  4096df:	lea    r8,[r15+0x1]
  4096e3:	jne    0x408e22
  4096e9:	movzx  edx,BYTE PTR [r14+0x1]
  4096ee:	test   dl,dl
  4096f0:	je     0x40973a
  4096f2:	movzx  ecx,BYTE PTR [rbx]
  4096f5:	test   cl,cl
  4096f7:	je     0x408bf0
  4096fd:	cmp    dl,cl
  4096ff:	lea    r8,[r15+0x2]
  409703:	jne    0x408e2b
  409709:	neg    r15
  40970c:	lea    rdx,[r14+r15*1]
  409710:	add    r15,rsi
  409713:	jmp    0x409730
  409715:	movzx  r10d,BYTE PTR [r15+r8*1]
  40971a:	test   r10b,r10b
  40971d:	je     0x408bf0
  409723:	add    r8,0x1
  409727:	cmp    r9b,r10b
  40972a:	jne    0x408e2b
  409730:	movzx  r9d,BYTE PTR [rdx+r8*1]
  409735:	test   r9b,r9b
  409738:	jne    0x409715
  40973a:	mov    rax,rsi
  40973d:	jmp    0x408bf2
  409742:	mov    rdx,QWORD PTR [rsp+0x70]
  409747:	mov    rcx,QWORD PTR [rsp+0xf0]
  40974f:	call   0x411420
  409754:	test   eax,eax
  409756:	sete   dil
  40975a:	jmp    0x40910b
  40975f:	nop
  409760:	mov    QWORD PTR [rsp+0xb8],0x1
  40976c:	mov    BYTE PTR [rsp+0xc0],0x0
  409774:	jmp    0x40907d
  409779:	nop    DWORD PTR [rax+0x0]
  409780:	lea    rdx,[rip+0xdc19]        # 0x4173a0
  409787:	lea    rcx,[rip+0xdc1c]        # 0x4173aa
  40978e:	mov    r8d,0x96
  409794:	call   0x40ca90
  409799:	jmp    0x4092c2
  40979e:	xchg   ax,ax
  4097a0:	lea    rdx,[rip+0xdbf9]        # 0x4173a0
  4097a7:	lea    rcx,[rip+0xdbfc]        # 0x4173aa
  4097ae:	mov    r8d,0x96
  4097b4:	call   0x40ca90
  4097b9:	jmp    0x4094b1
  4097be:	xchg   ax,ax
  4097c0:	mov    rcx,QWORD PTR [rsp+0x40]
  4097c5:	call   0x404630
  4097ca:	test   eax,eax
  4097cc:	je     0x409b2a
  4097d2:	mov    rax,QWORD PTR [rbp+0x0]
  4097d6:	mov    r10,QWORD PTR [rsp+0x170]
  4097de:	mov    BYTE PTR [rsp+0x160],0x1
  4097e6:	movsxd rdx,DWORD PTR [rax]
  4097e9:	mov    rcx,r10
  4097ec:	mov    QWORD PTR [rsp+0x58],r10
  4097f1:	call   0x4027b0
  4097f6:	mov    r10,QWORD PTR [rsp+0x58]
  4097fb:	mov    r9,QWORD PTR [rsp+0x40]
  409800:	lea    rcx,[r12+0x22]
  409805:	mov    r8,rax
  409808:	mov    rdx,r10
  40980b:	call   0x404520
  409810:	cmp    rax,0xffffffffffffffff
  409814:	mov    QWORD PTR [rsp+0x178],rax
  40981c:	je     0x409b48
  409822:	cmp    rax,0xfffffffffffffffe
  409826:	je     0x409c1a
  40982c:	test   rax,rax
  40982f:	jne    0x409872
  409831:	mov    rax,QWORD PTR [rsp+0x170]
  409839:	mov    QWORD PTR [rsp+0x178],0x1
  409845:	cmp    BYTE PTR [rax],0x0
  409848:	jne    0x409c93
  40984e:	cmp    WORD PTR [rsp+0x182],0x0
  409857:	je     0x409872
  409859:	lea    rdx,[rip+0xdb40]        # 0x4173a0
  409860:	lea    rcx,[rip+0xdb71]        # 0x4173d8
  409867:	mov    r8d,0xb3
  40986d:	call   0x40ca90
  409872:	mov    rcx,QWORD PTR [rsp+0x40]
  409877:	mov    BYTE PTR [rsp+0x180],0x1
  40987f:	call   0x404630
  409884:	test   eax,eax
  409886:	je     0x409890
  409888:	mov    BYTE PTR [rsp+0x160],0x0
  409890:	movzx  eax,BYTE PTR [rsp+0x180]
  409898:	mov    BYTE PTR [rsp+0x168],0x1
  4098a0:	test   al,al
  4098a2:	je     0x409220
  4098a8:	jmp    0x409210
  4098ad:	nop    DWORD PTR [rax]
  4098b0:	mov    rcx,QWORD PTR [rsp+0xb0]
  4098b8:	call   0x4113b8
  4098bd:	mov    BYTE PTR [rsp+0xc0],0x0
  4098c5:	mov    QWORD PTR [rsp+0xb8],rax
  4098cd:	jmp    0x40907d
  4098d2:	cmp    BYTE PTR [rsp+0xa8],0x0
  4098da:	je     0x409909
  4098dc:	movzx  eax,BYTE PTR [rsp+0xc0]
  4098e4:	test   al,al
  4098e6:	je     0x4098f7
  4098e8:	cmp    WORD PTR [rsp+0xc2],0x0
  4098f1:	je     0x4090ab
  4098f7:	movzx  eax,BYTE PTR [rsp+0x100]
  4098ff:	mov    BYTE PTR [rsp+0x3f],0x1
  409904:	jmp    0x4090d8
  409909:	mov    rbx,QWORD PTR [rsp+0xb0]
  409911:	cmp    BYTE PTR [rsp+0xa0],0x0
  409919:	jne    0x409a4b
  40991f:	movzx  eax,BYTE PTR [rbx]
  409922:	mov    edx,eax
  409924:	and    eax,0x1f
  409927:	shr    dl,0x5
  40992a:	and    edx,0x7
  40992d:	mov    edx,DWORD PTR [rsi+rdx*4]
  409930:	bt     edx,eax
  409933:	jae    0x409a29
  409939:	mov    QWORD PTR [rsp+0xb8],0x1
  409945:	movsx  ax,BYTE PTR [rbx]
  409949:	mov    BYTE PTR [rsp+0xc0],0x1
  409951:	mov    WORD PTR [rsp+0xc2],ax
  409959:	mov    eax,0x1
  40995e:	mov    BYTE PTR [rsp+0xa8],0x1
  409966:	jmp    0x4098e4
  40996b:	nop    DWORD PTR [rax+rax*1+0x0]
  409970:	lea    rdx,[rip+0xda29]        # 0x4173a0
  409977:	lea    rcx,[rip+0xda5a]        # 0x4173d8
  40997e:	mov    r8d,0xb3
  409984:	call   0x40ca90
  409989:	jmp    0x409343
  40998e:	xchg   ax,ax
  409990:	lea    rdx,[rip+0xda09]        # 0x4173a0
  409997:	lea    rcx,[rip+0xda23]        # 0x4173c1
  40999e:	mov    r8d,0xb2
  4099a4:	call   0x40ca90
  4099a9:	jmp    0x409334
  4099ae:	xchg   ax,ax
  4099b0:	lea    rdx,[rip+0xd9e9]        # 0x4173a0
  4099b7:	lea    rcx,[rip+0xda1a]        # 0x4173d8
  4099be:	mov    r8d,0xb3
  4099c4:	call   0x40ca90
  4099c9:	jmp    0x409530
  4099ce:	xchg   ax,ax
  4099d0:	lea    rdx,[rip+0xd9c9]        # 0x4173a0
  4099d7:	lea    rcx,[rip+0xd9e3]        # 0x4173c1
  4099de:	mov    r8d,0xb2
  4099e4:	call   0x40ca90
  4099e9:	jmp    0x409521
  4099ee:	xchg   ax,ax
  4099f0:	lea    rdx,[rip+0xd9a9]        # 0x4173a0
  4099f7:	lea    rcx,[rip+0xd9ac]        # 0x4173aa
  4099fe:	mov    r8d,0x96
  409a04:	call   0x40ca90
  409a09:	jmp    0x409592
  409a0e:	xchg   ax,ax
  409a10:	mov    QWORD PTR [rsp+0xf8],0x1
  409a1c:	mov    BYTE PTR [rsp+0x100],0x0
  409a24:	jmp    0x408f2a
  409a29:	mov    rcx,QWORD PTR [rsp+0x50]
  409a2e:	call   0x404630
  409a33:	test   eax,eax
  409a35:	je     0x409cb1
  409a3b:	mov    rbx,QWORD PTR [rsp+0xb0]
  409a43:	mov    BYTE PTR [rsp+0xa0],0x1
  409a4b:	mov    rax,QWORD PTR [rbp+0x0]
  409a4f:	mov    rcx,rbx
  409a52:	movsxd rdx,DWORD PTR [rax]
  409a55:	call   0x4027b0
  409a5a:	mov    r8,rax
  409a5d:	mov    rax,QWORD PTR [rsp+0x30]
  409a62:	mov    rdx,rbx
  409a65:	lea    rcx,[rax+0x22]
  409a69:	lea    r9,[rax+0x4]
  409a6d:	call   0x404520
  409a72:	cmp    rax,0xffffffffffffffff
  409a76:	mov    QWORD PTR [rsp+0xb8],rax
  409a7e:	je     0x409c78
  409a84:	cmp    rax,0xfffffffffffffffe
  409a88:	je     0x409ba2
  409a8e:	test   rax,rax
  409a91:	jne    0x409abf
  409a93:	mov    rax,QWORD PTR [rsp+0xb0]
  409a9b:	mov    QWORD PTR [rsp+0xb8],0x1
  409aa7:	cmp    BYTE PTR [rax],0x0
  409aaa:	jne    0x409ced
  409ab0:	cmp    WORD PTR [rsp+0xc2],0x0
  409ab9:	jne    0x409ccf
  409abf:	mov    rax,QWORD PTR [rsp+0x30]
  409ac4:	mov    BYTE PTR [rsp+0xc0],0x1
  409acc:	lea    rcx,[rax+0x4]
  409ad0:	call   0x404630
  409ad5:	test   eax,eax
  409ad7:	je     0x409ae1
  409ad9:	mov    BYTE PTR [rsp+0xa0],0x0
  409ae1:	movzx  eax,BYTE PTR [rsp+0xc0]
  409ae9:	jmp    0x40995e
  409aee:	lea    rdx,[rip+0xd8ab]        # 0x4173a0
  409af5:	lea    rcx,[rip+0xd8dc]        # 0x4173d8
  409afc:	mov    r8d,0xb3
  409b02:	call   0x40ca90
  409b07:	jmp    0x409616
  409b0c:	lea    rdx,[rip+0xd88d]        # 0x4173a0
  409b13:	lea    rcx,[rip+0xd8a7]        # 0x4173c1
  409b1a:	mov    r8d,0xb2
  409b20:	call   0x40ca90
  409b25:	jmp    0x409607
  409b2a:	lea    rdx,[rip+0xd86f]        # 0x4173a0
  409b31:	lea    rcx,[rip+0xd872]        # 0x4173aa
  409b38:	mov    r8d,0x96
  409b3e:	call   0x40ca90
  409b43:	jmp    0x4097d2
  409b48:	mov    QWORD PTR [rsp+0x178],0x1
  409b54:	mov    BYTE PTR [rsp+0x180],0x0
  409b5c:	jmp    0x409220
  409b61:	call   0x4114b0
  409b66:	lea    rdx,[rip+0xd833]        # 0x4173a0
  409b6d:	lea    rcx,[rip+0xd864]        # 0x4173d8
  409b74:	mov    r8d,0xb3
  409b7a:	call   0x40ca90
  409b7f:	jmp    0x408ec6
  409b84:	lea    rdx,[rip+0xd815]        # 0x4173a0
  409b8b:	lea    rcx,[rip+0xd82f]        # 0x4173c1
  409b92:	mov    r8d,0xb2
  409b98:	call   0x40ca90
  409b9d:	jmp    0x408eb7
  409ba2:	mov    rcx,QWORD PTR [rsp+0xb0]
  409baa:	call   0x4113b8
  409baf:	mov    BYTE PTR [rsp+0xc0],0x0
  409bb7:	mov    QWORD PTR [rsp+0xb8],rax
  409bbf:	xor    eax,eax
  409bc1:	jmp    0x40995e
  409bc6:	mov    rbx,QWORD PTR [rsp+0x20]
  409bcb:	mov    QWORD PTR [rsp+0x20],rdi
  409bd0:	add    rbx,0x1
  409bd4:	jmp    0x4090e9
  409bd9:	nop    DWORD PTR [rax+0x0]
  409be0:	mov    rcx,QWORD PTR [rsp+0x70]
  409be5:	call   0x4113b8
  409bea:	mov    BYTE PTR [rsp+0x80],0x0
  409bf2:	mov    QWORD PTR [rsp+0x78],rax
  409bf7:	jmp    0x408f80
  409bfc:	lea    rdx,[rip+0xd79d]        # 0x4173a0
  409c03:	lea    rcx,[rip+0xd7a0]        # 0x4173aa
  409c0a:	mov    r8d,0x96
  409c10:	call   0x40ca90
  409c15:	jmp    0x408c26
  409c1a:	mov    rcx,QWORD PTR [rsp+0x170]
  409c22:	call   0x4113b8
  409c27:	mov    BYTE PTR [rsp+0x180],0x0
  409c2f:	mov    QWORD PTR [rsp+0x178],rax
  409c37:	jmp    0x409220
  409c3c:	lea    rdx,[rip+0xd75d]        # 0x4173a0
  409c43:	lea    rcx,[rip+0xd78e]        # 0x4173d8
  409c4a:	mov    r8d,0xb3
  409c50:	call   0x40ca90
  409c55:	jmp    0x408caa
  409c5a:	lea    rdx,[rip+0xd73f]        # 0x4173a0
  409c61:	lea    rcx,[rip+0xd759]        # 0x4173c1
  409c68:	mov    r8d,0xb2
  409c6e:	call   0x40ca90
  409c73:	jmp    0x408c9b
  409c78:	mov    QWORD PTR [rsp+0xb8],0x1
  409c84:	mov    BYTE PTR [rsp+0xc0],0x0
  409c8c:	xor    eax,eax
  409c8e:	jmp    0x40995e
  409c93:	lea    rdx,[rip+0xd706]        # 0x4173a0
  409c9a:	lea    rcx,[rip+0xd720]        # 0x4173c1
  409ca1:	mov    r8d,0xb2
  409ca7:	call   0x40ca90
  409cac:	jmp    0x40984e
  409cb1:	lea    rdx,[rip+0xd6e8]        # 0x4173a0
  409cb8:	lea    rcx,[rip+0xd6eb]        # 0x4173aa
  409cbf:	mov    r8d,0x96
  409cc5:	call   0x40ca90
  409cca:	jmp    0x409a3b
  409ccf:	lea    rdx,[rip+0xd6ca]        # 0x4173a0
  409cd6:	lea    rcx,[rip+0xd6fb]        # 0x4173d8
  409cdd:	mov    r8d,0xb3
  409ce3:	call   0x40ca90
  409ce8:	jmp    0x409abf
  409ced:	lea    rdx,[rip+0xd6ac]        # 0x4173a0
  409cf4:	lea    rcx,[rip+0xd6c6]        # 0x4173c1
  409cfb:	mov    r8d,0xb2
  409d01:	call   0x40ca90
  409d06:	jmp    0x409ab0
  409d0b:	mov    rax,QWORD PTR [rsp+0x160]
  409d13:	jmp    0x408bf2
  409d18:	nop
  409d19:	nop
  409d1a:	nop
  409d1b:	nop
  409d1c:	nop
  409d1d:	nop
  409d1e:	nop
  409d1f:	nop
  409d20:	push   r15
  409d22:	push   r14
  409d24:	mov    eax,0x1058
  409d29:	push   r13
  409d2b:	push   r12
  409d2d:	push   rbp
  409d2e:	push   rdi
  409d2f:	push   rsi
  409d30:	push   rbx
  409d31:	call   0x40c560
  409d36:	sub    rsp,rax
  409d39:	xor    esi,esi
  409d3b:	mov    rdi,r8
  409d3e:	mov    r15,rdx
  409d41:	mov    QWORD PTR [rsp+0x10a0],rcx
  409d49:	mov    QWORD PTR [rsp+0x10b8],r9
  409d51:	xor    r8d,r8d
  409d54:	xor    r9d,r9d
  409d57:	xor    edx,edx
  409d59:	mov    QWORD PTR [rsp+0x20],0x0
  409d62:	mov    rcx,rdi
  409d65:	call   0x40b038
  409d6a:	mov    rax,QWORD PTR [rsp+0x10a0]
  409d72:	test   r15,r15
  409d75:	mov    QWORD PTR [rsp+0x38],r15
  409d7a:	lea    rbx,[rsp+0x50]
  409d7f:	lea    r12,[rsp+0x40]
  409d84:	mov    QWORD PTR [rsp+0x30],rax
  409d89:	je     0x409fa0
  409d8f:	lea    r14,[rsp+0x38]
  409d94:	lea    r13,[rsp+0x30]
  409d99:	lea    rbp,[rsp+0x48]
  409d9e:	jmp    0x409db3
  409da0:	mov    rax,QWORD PTR [rsp+0x40]
  409da5:	sub    rax,rbx
  409da8:	add    rsi,rax
  409dab:	cmp    QWORD PTR [rsp+0x38],0x0
  409db1:	je     0x409e00
  409db3:	mov    QWORD PTR [rsp+0x20],rbp
  409db8:	mov    r9,r12
  409dbb:	mov    r8,r14
  409dbe:	mov    rdx,r13
  409dc1:	mov    rcx,rdi
  409dc4:	mov    QWORD PTR [rsp+0x40],rbx
  409dc9:	mov    QWORD PTR [rsp+0x48],0x1000
  409dd2:	call   0x40b038
  409dd7:	cmp    rax,0xffffffffffffffff
  409ddb:	jne    0x409da0
  409ddd:	call   QWORD PTR [rip+0x1582d]        # 0x41f610
  409de3:	cmp    DWORD PTR [rax],0x7
  409de6:	je     0x409da0
  409de8:	call   QWORD PTR [rip+0x15822]        # 0x41f610
  409dee:	cmp    DWORD PTR [rax],0x16
  409df1:	jne    0x409f43
  409df7:	nop    WORD PTR [rax+rax*1+0x0]
  409e00:	xor    r8d,r8d
  409e03:	xor    edx,edx
  409e05:	mov    QWORD PTR [rsp+0x20],rbp
  409e0a:	mov    r9,r12
  409e0d:	mov    rcx,rdi
  409e10:	mov    QWORD PTR [rsp+0x40],rbx
  409e15:	mov    QWORD PTR [rsp+0x48],0x1000
  409e1e:	call   0x40b038
  409e23:	cmp    rax,0xffffffffffffffff
  409e27:	je     0x409f43
  409e2d:	mov    rax,QWORD PTR [rsp+0x40]
  409e32:	sub    rax,rbx
  409e35:	add    rsi,rax
  409e38:	je     0x409f50
  409e3e:	mov    rax,QWORD PTR [rsp+0x10b8]
  409e46:	mov    r13,QWORD PTR [rax]
  409e49:	test   r13,r13
  409e4c:	je     0x409f23
  409e52:	mov    rax,QWORD PTR [rsp+0x10c0]
  409e5a:	cmp    rsi,QWORD PTR [rax]
  409e5d:	ja     0x409f23
  409e63:	mov    QWORD PTR [rsp+0x20],0x0
  409e6c:	xor    r9d,r9d
  409e6f:	xor    r8d,r8d
  409e72:	xor    edx,edx
  409e74:	mov    rcx,rdi
  409e77:	lea    r14,[rsp+0x38]
  409e7c:	call   0x40b038
  409e81:	mov    rax,QWORD PTR [rsp+0x10a0]
  409e89:	mov    QWORD PTR [rsp+0x40],r15
  409e8e:	mov    QWORD PTR [rsp+0x48],r13
  409e93:	mov    QWORD PTR [rsp+0x50],rsi
  409e98:	mov    QWORD PTR [rsp+0x38],rax
  409e9d:	jmp    0x409ec5
  409e9f:	nop
  409ea0:	mov    QWORD PTR [rsp+0x20],rbx
  409ea5:	mov    r9,rbp
  409ea8:	mov    r8,r12
  409eab:	mov    rdx,r14
  409eae:	mov    rcx,rdi
  409eb1:	call   0x40b038
  409eb6:	cmp    rax,0xffffffffffffffff
  409eba:	je     0x409f63
  409ec0:	mov    r15,QWORD PTR [rsp+0x40]
  409ec5:	test   r15,r15
  409ec8:	jne    0x409ea0
  409eca:	xor    r8d,r8d
  409ecd:	xor    edx,edx
  409ecf:	mov    QWORD PTR [rsp+0x20],rbx
  409ed4:	mov    r9,rbp
  409ed7:	mov    rcx,rdi
  409eda:	call   0x40b038
  409edf:	cmp    rax,0xffffffffffffffff
  409ee3:	je     0x409f72
  409ee9:	cmp    QWORD PTR [rsp+0x50],0x0
  409eef:	jne    0x409faa
  409ef5:	mov    rax,QWORD PTR [rsp+0x10b8]
  409efd:	xor    ebx,ebx
  409eff:	mov    QWORD PTR [rax],r13
  409f02:	mov    rax,QWORD PTR [rsp+0x10c0]
  409f0a:	mov    QWORD PTR [rax],rsi
  409f0d:	mov    eax,ebx
  409f0f:	add    rsp,0x1058
  409f16:	pop    rbx
  409f17:	pop    rsi
  409f18:	pop    rdi
  409f19:	pop    rbp
  409f1a:	pop    r12
  409f1c:	pop    r13
  409f1e:	pop    r14
  409f20:	pop    r15
  409f22:	ret    
  409f23:	mov    rcx,rsi
  409f26:	call   0x411428
  409f2b:	test   rax,rax
  409f2e:	mov    r13,rax
  409f31:	jne    0x409e63
  409f37:	call   QWORD PTR [rip+0x156d3]        # 0x41f610
  409f3d:	mov    DWORD PTR [rax],0xc
  409f43:	mov    ebx,0xffffffff
  409f48:	jmp    0x409f0d
  409f4a:	nop    WORD PTR [rax+rax*1+0x0]
  409f50:	mov    rax,QWORD PTR [rsp+0x10c0]
  409f58:	xor    ebx,ebx
  409f5a:	mov    QWORD PTR [rax],0x0
  409f61:	jmp    0x409f0d
  409f63:	call   QWORD PTR [rip+0x156a7]        # 0x41f610
  409f69:	cmp    DWORD PTR [rax],0x16
  409f6c:	je     0x409eca
  409f72:	mov    rax,QWORD PTR [rsp+0x10b8]
  409f7a:	mov    ebx,0xffffffff
  409f7f:	cmp    QWORD PTR [rax],r13
  409f82:	je     0x409f0d
  409f84:	mov    rsi,QWORD PTR [rip+0x15685]        # 0x41f610
  409f8b:	call   rsi
  409f8d:	mov    edi,DWORD PTR [rax]
  409f8f:	mov    rcx,r13
  409f92:	call   0x411468
  409f97:	call   rsi
  409f99:	mov    DWORD PTR [rax],edi
  409f9b:	jmp    0x409f0d
  409fa0:	lea    rbp,[rsp+0x48]
  409fa5:	jmp    0x409e00
  409faa:	call   0x4114b0
  409faf:	nop
  409fb0:	push   r15
  409fb2:	push   r14
  409fb4:	push   r13
  409fb6:	push   r12
  409fb8:	push   rbp
  409fb9:	push   rdi
  409fba:	push   rsi
  409fbb:	push   rbx
  409fbc:	sub    rsp,0x68
  409fc0:	mov    rbp,rdx
  409fc3:	mov    QWORD PTR [rsp+0x40],rcx
  409fc8:	call   0x4113b8
  409fcd:	cmp    rax,0x33333333
  409fd3:	mov    rdi,rax
  409fd6:	mov    QWORD PTR [rsp+0x48],rax
  409fdb:	lea    rax,[rax+rax*4]
  409fdf:	cmovbe rdi,rax
  409fe3:	lea    rsi,[rdi+0x1]
  409fe7:	mov    rcx,rsi
  409fea:	call   0x411428
  409fef:	test   rax,rax
  409ff2:	mov    rbx,rax
  409ff5:	je     0x40a19b
  409ffb:	mov    QWORD PTR [rsp+0x20],0x0
  40a004:	xor    r9d,r9d
  40a007:	xor    r8d,r8d
  40a00a:	xor    edx,edx
  40a00c:	mov    rcx,rbp
  40a00f:	lea    r12,[rsp+0x50]
  40a014:	call   0x40b038
  40a019:	lea    rax,[rsp+0x48]
  40a01e:	mov    QWORD PTR [rsp+0x50],rbx
  40a023:	mov    QWORD PTR [rsp+0x58],rdi
  40a028:	lea    r13,[rsp+0x58]
  40a02d:	mov    QWORD PTR [rsp+0x30],rax
  40a032:	lea    rax,[rsp+0x40]
  40a037:	mov    QWORD PTR [rsp+0x38],rax
  40a03c:	jmp    0x40a0a1
  40a03e:	xchg   ax,ax
  40a040:	mov    rdi,QWORD PTR [rip+0x155c9]        # 0x41f610
  40a047:	call   rdi
  40a049:	cmp    DWORD PTR [rax],0x16
  40a04c:	je     0x40a11e
  40a052:	call   rdi
  40a054:	cmp    DWORD PTR [rax],0x7
  40a057:	jne    0x40a178
  40a05d:	mov    r15,QWORD PTR [rsp+0x50]
  40a062:	lea    r14,[rsi+rsi*1]
  40a066:	sub    r15,rbx
  40a069:	cmp    rsi,r14
  40a06c:	jae    0x40a170
  40a072:	mov    rdx,r14
  40a075:	mov    rcx,rbx
  40a078:	call   0x4113f0
  40a07d:	test   rax,rax
  40a080:	je     0x40a170
  40a086:	lea    rdx,[rax+r15*1]
  40a08a:	mov    rsi,r14
  40a08d:	mov    rbx,rax
  40a090:	mov    QWORD PTR [rsp+0x50],rdx
  40a095:	lea    rdx,[r14-0x1]
  40a099:	sub    rdx,r15
  40a09c:	mov    QWORD PTR [rsp+0x58],rdx
  40a0a1:	mov    r8,QWORD PTR [rsp+0x30]
  40a0a6:	mov    rdx,QWORD PTR [rsp+0x38]
  40a0ab:	mov    r9,r12
  40a0ae:	mov    QWORD PTR [rsp+0x20],r13
  40a0b3:	mov    rcx,rbp
  40a0b6:	call   0x40b038
  40a0bb:	cmp    rax,0xffffffffffffffff
  40a0bf:	je     0x40a040
  40a0c5:	jmp    0x40a11e
  40a0c7:	nop    WORD PTR [rax+rax*1+0x0]
  40a0d0:	mov    rdi,QWORD PTR [rip+0x15539]        # 0x41f610
  40a0d7:	call   rdi
  40a0d9:	cmp    DWORD PTR [rax],0x7
  40a0dc:	jne    0x40a178
  40a0e2:	mov    r14,QWORD PTR [rsp+0x50]
  40a0e7:	lea    r15,[rsi+rsi*1]
  40a0eb:	sub    r14,rbx
  40a0ee:	cmp    rsi,r15
  40a0f1:	jae    0x40a170
  40a0f3:	mov    rdx,r15
  40a0f6:	mov    rcx,rbx
  40a0f9:	call   0x4113f0
  40a0fe:	test   rax,rax
  40a101:	je     0x40a170
  40a103:	lea    rdx,[rax+r14*1]
  40a107:	mov    rsi,r15
  40a10a:	mov    rbx,rax
  40a10d:	mov    QWORD PTR [rsp+0x50],rdx
  40a112:	lea    rdx,[r15-0x1]
  40a116:	sub    rdx,r14
  40a119:	mov    QWORD PTR [rsp+0x58],rdx
  40a11e:	xor    r8d,r8d
  40a121:	xor    edx,edx
  40a123:	mov    QWORD PTR [rsp+0x20],r13
  40a128:	mov    r9,r12
  40a12b:	mov    rcx,rbp
  40a12e:	call   0x40b038
  40a133:	cmp    rax,0xffffffffffffffff
  40a137:	je     0x40a0d0
  40a139:	mov    rax,QWORD PTR [rsp+0x50]
  40a13e:	lea    rdx,[rax+0x1]
  40a142:	mov    QWORD PTR [rsp+0x50],rdx
  40a147:	mov    BYTE PTR [rax],0x0
  40a14a:	mov    rax,rbx
  40a14d:	mov    rdx,QWORD PTR [rsp+0x50]
  40a152:	sub    rdx,rbx
  40a155:	cmp    rdx,rsi
  40a158:	jae    0x40a18a
  40a15a:	mov    rcx,rbx
  40a15d:	call   0x4113f0
  40a162:	test   rax,rax
  40a165:	cmove  rax,rbx
  40a169:	jmp    0x40a18a
  40a16b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a170:	call   rdi
  40a172:	mov    DWORD PTR [rax],0xc
  40a178:	call   rdi
  40a17a:	mov    esi,DWORD PTR [rax]
  40a17c:	mov    rcx,rbx
  40a17f:	call   0x411468
  40a184:	call   rdi
  40a186:	mov    DWORD PTR [rax],esi
  40a188:	xor    eax,eax
  40a18a:	add    rsp,0x68
  40a18e:	pop    rbx
  40a18f:	pop    rsi
  40a190:	pop    rdi
  40a191:	pop    rbp
  40a192:	pop    r12
  40a194:	pop    r13
  40a196:	pop    r14
  40a198:	pop    r15
  40a19a:	ret    
  40a19b:	call   QWORD PTR [rip+0x1546f]        # 0x41f610
  40a1a1:	mov    DWORD PTR [rax],0xc
  40a1a7:	xor    eax,eax
  40a1a9:	jmp    0x40a18a
  40a1ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1b0:	push   rdi
  40a1b1:	push   rsi
  40a1b2:	push   rbx
  40a1b3:	sub    rsp,0x20
  40a1b7:	cmp    BYTE PTR [rcx],0x0
  40a1ba:	mov    rbx,rcx
  40a1bd:	mov    rdi,rdx
  40a1c0:	mov    rsi,r8
  40a1c3:	je     0x40a1d4
  40a1c5:	mov    rdx,r8
  40a1c8:	mov    rcx,rdi
  40a1cb:	call   0x4058d0
  40a1d0:	test   eax,eax
  40a1d2:	jne    0x40a1f0
  40a1d4:	mov    rcx,rbx
  40a1d7:	call   0x411378
  40a1dc:	test   rax,rax
  40a1df:	mov    rbx,rax
  40a1e2:	je     0x40a240
  40a1e4:	mov    rax,rbx
  40a1e7:	add    rsp,0x20
  40a1eb:	pop    rbx
  40a1ec:	pop    rsi
  40a1ed:	pop    rdi
  40a1ee:	ret    
  40a1ef:	nop
  40a1f0:	mov    rcx,rsi
  40a1f3:	mov    rdx,rdi
  40a1f6:	call   0x40b028
  40a1fb:	cmp    rax,0xffffffffffffffff
  40a1ff:	mov    rsi,rax
  40a202:	je     0x40a24e
  40a204:	mov    rcx,rbx
  40a207:	mov    rdx,rax
  40a20a:	call   0x409fb0
  40a20f:	test   rax,rax
  40a212:	mov    rbx,rax
  40a215:	je     0x40a252
  40a217:	mov    rcx,rsi
  40a21a:	call   0x40b030
  40a21f:	test   eax,eax
  40a221:	jns    0x40a1e4
  40a223:	mov    rsi,QWORD PTR [rip+0x153e6]        # 0x41f610
  40a22a:	call   rsi
  40a22c:	mov    edi,DWORD PTR [rax]
  40a22e:	mov    rcx,rbx
  40a231:	xor    ebx,ebx
  40a233:	call   0x411468
  40a238:	call   rsi
  40a23a:	mov    DWORD PTR [rax],edi
  40a23c:	jmp    0x40a1e4
  40a23e:	xchg   ax,ax
  40a240:	call   QWORD PTR [rip+0x153ca]        # 0x41f610
  40a246:	mov    DWORD PTR [rax],0xc
  40a24c:	jmp    0x40a1e4
  40a24e:	xor    ebx,ebx
  40a250:	jmp    0x40a1e4
  40a252:	mov    rbx,QWORD PTR [rip+0x153b7]        # 0x41f610
  40a259:	call   rbx
  40a25b:	mov    edi,DWORD PTR [rax]
  40a25d:	mov    rcx,rsi
  40a260:	call   0x40b030
  40a265:	call   rbx
  40a267:	xor    ebx,ebx
  40a269:	mov    DWORD PTR [rax],edi
  40a26b:	jmp    0x40a1e4
  40a270:	ret    
  40a271:	nop    DWORD PTR [rax+rax*1+0x0]
  40a276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a280:	sub    rsp,0x28
  40a284:	mov    eax,DWORD PTR [rip+0x12676]        # 0x41c900
  40a28a:	test   eax,eax
  40a28c:	jne    0x40a2a5
  40a28e:	lea    rcx,[rip+0xffffffffffffffdb]        # 0x40a270
  40a295:	call   QWORD PTR [rip+0x7ead]        # 0x412148
  40a29b:	mov    DWORD PTR [rip+0x1265b],0x1        # 0x41c900
  40a2a5:	add    rsp,0x28
  40a2a9:	ret    
  40a2aa:	nop
  40a2ab:	nop
  40a2ac:	nop
  40a2ad:	nop
  40a2ae:	nop
  40a2af:	nop
  40a2b0:	push   rbx
  40a2b1:	sub    rsp,0x20
  40a2b5:	cmp    ecx,0xd
  40a2b8:	je     0x40a2d0
  40a2ba:	mov    ebx,ecx
  40a2bc:	call   0x40a280
  40a2c1:	mov    ecx,ebx
  40a2c3:	add    rsp,0x20
  40a2c7:	pop    rbx
  40a2c8:	jmp    0x4113f8
  40a2cd:	nop    DWORD PTR [rax]
  40a2d0:	add    rsp,0x20
  40a2d4:	pop    rbx
  40a2d5:	jmp    0x40a6d0
  40a2da:	nop
  40a2db:	nop
  40a2dc:	nop
  40a2dd:	nop
  40a2de:	nop
  40a2df:	nop
  40a2e0:	push   rsi
  40a2e1:	push   rbx
  40a2e2:	sub    rsp,0x28
  40a2e6:	cmp    ecx,0xd
  40a2e9:	jne    0x40a300
  40a2eb:	mov    rax,QWORD PTR [rip+0x1276e]        # 0x41ca60
  40a2f2:	mov    QWORD PTR [rip+0x12767],rdx        # 0x41ca60
  40a2f9:	add    rsp,0x28
  40a2fd:	pop    rbx
  40a2fe:	pop    rsi
  40a2ff:	ret    
  40a300:	mov    rsi,rdx
  40a303:	mov    ebx,ecx
  40a305:	call   0x40a280
  40a30a:	mov    rdx,rsi
  40a30d:	mov    ecx,ebx
  40a30f:	add    rsp,0x28
  40a313:	pop    rbx
  40a314:	pop    rsi
  40a315:	jmp    0x4113e0
  40a31a:	nop    WORD PTR [rax+rax*1+0x0]
  40a320:	push   rbx
  40a321:	sub    rsp,0x20
  40a325:	lea    rdx,[rip+0xfffffffffffffff4]        # 0x40a320
  40a32c:	movsxd rbx,ecx
  40a32f:	mov    ecx,ebx
  40a331:	call   0x40a2e0
  40a336:	cmp    ebx,0x16
  40a339:	ja     0x40a349
  40a33b:	lea    rax,[rip+0x126be]        # 0x41ca00
  40a342:	mov    DWORD PTR [rax+rbx*4],0x1
  40a349:	add    rsp,0x20
  40a34d:	pop    rbx
  40a34e:	ret    
  40a34f:	nop
  40a350:	xor    eax,eax
  40a352:	cmp    edx,0x16
  40a355:	ja     0x40a368
  40a357:	cmp    edx,0x6
  40a35a:	mov    al,0x16
  40a35c:	cmove  edx,eax
  40a35f:	mov    eax,DWORD PTR [rcx]
  40a361:	mov    ecx,edx
  40a363:	shr    eax,cl
  40a365:	and    eax,0x1
  40a368:	repz ret 
  40a36a:	nop    WORD PTR [rax+rax*1+0x0]
  40a370:	xor    eax,eax
  40a372:	mov    DWORD PTR [rcx],0x0
  40a378:	ret    
  40a379:	nop    DWORD PTR [rax+0x0]
  40a380:	sub    rsp,0x28
  40a384:	cmp    edx,0x16
  40a387:	mov    r8,rcx
  40a38a:	ja     0x40a3b0
  40a38c:	cmp    edx,0x6
  40a38f:	mov    eax,0x400000
  40a394:	je     0x40a39f
  40a396:	mov    eax,0x1
  40a39b:	mov    ecx,edx
  40a39d:	shl    eax,cl
  40a39f:	or     DWORD PTR [r8],eax
  40a3a2:	xor    eax,eax
  40a3a4:	add    rsp,0x28
  40a3a8:	ret    
  40a3a9:	nop    DWORD PTR [rax+0x0]
  40a3b0:	call   QWORD PTR [rip+0x1525a]        # 0x41f610
  40a3b6:	mov    DWORD PTR [rax],0x16
  40a3bc:	mov    eax,0xffffffff
  40a3c1:	jmp    0x40a3a4
  40a3c3:	nop    DWORD PTR [rax]
  40a3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3d0:	sub    rsp,0x28
  40a3d4:	cmp    edx,0x16
  40a3d7:	mov    r8,rcx
  40a3da:	ja     0x40a400
  40a3dc:	cmp    edx,0x6
  40a3df:	mov    eax,0xffbfffff
  40a3e4:	je     0x40a3ef
  40a3e6:	mov    eax,0xfffffffe
  40a3eb:	mov    ecx,edx
  40a3ed:	rol    eax,cl
  40a3ef:	and    DWORD PTR [r8],eax
  40a3f2:	xor    eax,eax
  40a3f4:	add    rsp,0x28
  40a3f8:	ret    
  40a3f9:	nop    DWORD PTR [rax+0x0]
  40a400:	call   QWORD PTR [rip+0x1520a]        # 0x41f610
  40a406:	mov    DWORD PTR [rax],0x16
  40a40c:	mov    eax,0xffffffff
  40a411:	jmp    0x40a3f4
  40a413:	nop    DWORD PTR [rax]
  40a416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a420:	xor    eax,eax
  40a422:	mov    DWORD PTR [rcx],0x7fffbf
  40a428:	ret    
  40a429:	nop    DWORD PTR [rax+0x0]
  40a430:	lea    r8,[rip+0x125c9]        # 0x41ca00
  40a437:	xor    edx,edx
  40a439:	mov    r9d,0x1
  40a43f:	mov    r10,rcx
  40a442:	xor    ecx,ecx
  40a444:	movsxd rax,ecx
  40a447:	mov    eax,DWORD PTR [r8+rax*4]
  40a44b:	test   eax,eax
  40a44d:	je     0x40a456
  40a44f:	mov    eax,r9d
  40a452:	shl    eax,cl
  40a454:	or     edx,eax
  40a456:	add    ecx,0x1
  40a459:	cmp    ecx,0x17
  40a45c:	jne    0x40a444
  40a45e:	mov    DWORD PTR [r10],edx
  40a461:	xor    eax,eax
  40a463:	ret    
  40a464:	xchg   ax,ax
  40a466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a470:	push   r14
  40a472:	push   r13
  40a474:	push   r12
  40a476:	push   rbp
  40a477:	push   rdi
  40a478:	push   rsi
  40a479:	push   rbx
  40a47a:	add    rsp,0xffffffffffffff80
  40a47e:	test   r8,r8
  40a481:	je     0x40a48c
  40a483:	mov    eax,DWORD PTR [rip+0x125d3]        # 0x41ca5c
  40a489:	mov    DWORD PTR [r8],eax
  40a48c:	test   rdx,rdx
  40a48f:	je     0x40a4d0
  40a491:	cmp    ecx,0x1
  40a494:	je     0x40a630
  40a49a:	cmp    ecx,0x2
  40a49d:	je     0x40a4e1
  40a49f:	test   ecx,ecx
  40a4a1:	je     0x40a640
  40a4a7:	call   QWORD PTR [rip+0x15163]        # 0x41f610
  40a4ad:	mov    DWORD PTR [rax],0x16
  40a4b3:	mov    eax,0xffffffff
  40a4b8:	sub    rsp,0xffffffffffffff80
  40a4bc:	pop    rbx
  40a4bd:	pop    rsi
  40a4be:	pop    rdi
  40a4bf:	pop    rbp
  40a4c0:	pop    r12
  40a4c2:	pop    r13
  40a4c4:	pop    r14
  40a4c6:	ret    
  40a4c7:	nop    WORD PTR [rax+rax*1+0x0]
  40a4d0:	xor    eax,eax
  40a4d2:	sub    rsp,0xffffffffffffff80
  40a4d6:	pop    rbx
  40a4d7:	pop    rsi
  40a4d8:	pop    rdi
  40a4d9:	pop    rbp
  40a4da:	pop    r12
  40a4dc:	pop    r13
  40a4de:	pop    r14
  40a4e0:	ret    
  40a4e1:	mov    esi,DWORD PTR [rdx]
  40a4e3:	mov    ecx,DWORD PTR [rip+0x12573]        # 0x41ca5c
  40a4e9:	not    esi
  40a4eb:	mov    eax,esi
  40a4ed:	and    eax,ecx
  40a4ef:	mov    edx,DWORD PTR [rip+0x12567]        # 0x41ca5c
  40a4f5:	mov    esi,DWORD PTR [rip+0x12561]        # 0x41ca5c
  40a4fb:	mov    ebp,eax
  40a4fd:	not    ebp
  40a4ff:	not    esi
  40a501:	and    ebp,edx
  40a503:	and    esi,eax
  40a505:	je     0x40a570
  40a507:	xor    ebx,ebx
  40a509:	mov    r12d,0x1
  40a50f:	jmp    0x40a519
  40a511:	add    ebx,0x1
  40a514:	cmp    ebx,0x17
  40a517:	je     0x40a570
  40a519:	bt     esi,ebx
  40a51c:	jae    0x40a511
  40a51e:	lea    rax,[rip+0x124db]        # 0x41ca00
  40a525:	lea    rdx,[rip+0xfffffffffffffdf4]        # 0x40a320
  40a52c:	movsxd rdi,ebx
  40a52f:	mov    ecx,ebx
  40a531:	mov    DWORD PTR [rax+rdi*4],0x0
  40a538:	call   0x40a2e0
  40a53d:	lea    rdx,[rip+0x123fc]        # 0x41c940
  40a544:	cmp    rax,0xffffffffffffffff
  40a548:	mov    QWORD PTR [rdx+rdi*8],rax
  40a54c:	je     0x40a511
  40a54e:	mov    eax,DWORD PTR [rip+0x12508]        # 0x41ca5c
  40a554:	mov    ecx,ebx
  40a556:	mov    edx,r12d
  40a559:	shl    edx,cl
  40a55b:	add    ebx,0x1
  40a55e:	or     eax,edx
  40a560:	cmp    ebx,0x17
  40a563:	mov    DWORD PTR [rip+0x124f3],eax        # 0x41ca5c
  40a569:	jne    0x40a519
  40a56b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a570:	xor    ebx,ebx
  40a572:	test   ebp,ebp
  40a574:	lea    r14,[rip+0xfffffffffffffda5]        # 0x40a320
  40a57b:	mov    r13d,0x1
  40a581:	jne    0x40a5a7
  40a583:	jmp    0x40a4d0
  40a588:	nop    DWORD PTR [rax+rax*1+0x0]
  40a590:	mov    DWORD PTR [rsp+rbx*4+0x20],0x0
  40a598:	add    rbx,0x1
  40a59c:	lea    rsi,[rsp+0x20]
  40a5a1:	cmp    rbx,0x17
  40a5a5:	je     0x40a607
  40a5a7:	bt     ebp,ebx
  40a5aa:	jae    0x40a590
  40a5ac:	lea    rax,[rip+0x1238d]        # 0x41c940
  40a5b3:	movsxd r12,ebx
  40a5b6:	mov    ecx,ebx
  40a5b8:	mov    rdx,QWORD PTR [rax+r12*8]
  40a5bc:	call   0x40a2e0
  40a5c1:	cmp    rax,r14
  40a5c4:	jne    0x40a64f
  40a5ca:	lea    r8,[rip+0x1242f]        # 0x41ca00
  40a5d1:	mov    ecx,ebx
  40a5d3:	mov    edx,r13d
  40a5d6:	shl    edx,cl
  40a5d8:	lea    rsi,[rsp+0x20]
  40a5dd:	mov    eax,DWORD PTR [r8+r12*4]
  40a5e1:	not    edx
  40a5e3:	mov    DWORD PTR [rsp+rbx*4+0x20],eax
  40a5e7:	mov    eax,DWORD PTR [rip+0x1246f]        # 0x41ca5c
  40a5ed:	add    rbx,0x1
  40a5f1:	and    eax,edx
  40a5f3:	cmp    rbx,0x17
  40a5f7:	mov    DWORD PTR [rip+0x1245f],eax        # 0x41ca5c
  40a5fd:	mov    DWORD PTR [r8+r12*4],0x0
  40a605:	jne    0x40a5a7
  40a607:	xor    bl,bl
  40a609:	jmp    0x40a61e
  40a60b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a610:	add    rbx,0x1
  40a614:	cmp    rbx,0x17
  40a618:	je     0x40a4d0
  40a61e:	mov    eax,DWORD PTR [rsi+rbx*4]
  40a621:	test   eax,eax
  40a623:	je     0x40a610
  40a625:	mov    ecx,ebx
  40a627:	call   0x40a2b0
  40a62c:	jmp    0x40a610
  40a62e:	xchg   ax,ax
  40a630:	mov    eax,DWORD PTR [rdx]
  40a632:	jmp    0x40a4ef
  40a637:	nop    WORD PTR [rax+rax*1+0x0]
  40a640:	mov    esi,DWORD PTR [rip+0x12416]        # 0x41ca5c
  40a646:	mov    eax,DWORD PTR [rdx]
  40a648:	or     eax,esi
  40a64a:	jmp    0x40a4ef
  40a64f:	call   0x4114b0
  40a654:	nop
  40a655:	nop
  40a656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a660:	sub    rsp,0x28
  40a664:	cmp    ecx,0x16
  40a667:	ja     0x40a6a0
  40a669:	cmp    rdx,0xffffffffffffffff
  40a66d:	je     0x40a6a0
  40a66f:	cmp    ecx,0x6
  40a672:	mov    eax,0x16
  40a677:	cmove  ecx,eax
  40a67a:	mov    eax,DWORD PTR [rip+0x123dc]        # 0x41ca5c
  40a680:	bt     eax,ecx
  40a683:	jae    0x40a6c0
  40a685:	lea    r8,[rip+0x122b4]        # 0x41c940
  40a68c:	movsxd rcx,ecx
  40a68f:	mov    rax,QWORD PTR [r8+rcx*8]
  40a693:	mov    QWORD PTR [r8+rcx*8],rdx
  40a697:	add    rsp,0x28
  40a69b:	ret    
  40a69c:	nop    DWORD PTR [rax+0x0]
  40a6a0:	call   QWORD PTR [rip+0x14f6a]        # 0x41f610
  40a6a6:	mov    DWORD PTR [rax],0x16
  40a6ac:	mov    rax,0xffffffffffffffff
  40a6b3:	add    rsp,0x28
  40a6b7:	ret    
  40a6b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a6c0:	add    rsp,0x28
  40a6c4:	jmp    0x40a2e0
  40a6c9:	nop    DWORD PTR [rax+0x0]
  40a6d0:	sub    rsp,0x28
  40a6d4:	mov    eax,DWORD PTR [rip+0x12382]        # 0x41ca5c
  40a6da:	test   ah,0x20
  40a6dd:	jne    0x40a700
  40a6df:	mov    rax,QWORD PTR [rip+0x1237a]        # 0x41ca60
  40a6e6:	test   rax,rax
  40a6e9:	je     0x40a711
  40a6eb:	cmp    rax,0x1
  40a6ef:	je     0x40a6f8
  40a6f1:	mov    ecx,0xd
  40a6f6:	call   rax
  40a6f8:	xor    eax,eax
  40a6fa:	add    rsp,0x28
  40a6fe:	ret    
  40a6ff:	nop
  40a700:	xor    eax,eax
  40a702:	mov    DWORD PTR [rip+0x12328],0x1        # 0x41ca34
  40a70c:	add    rsp,0x28
  40a710:	ret    
  40a711:	mov    ecx,0x8d
  40a716:	call   0x4114a0
  40a71b:	nop
  40a71c:	nop
  40a71d:	nop
  40a71e:	nop
  40a71f:	nop
  40a720:	push   rbx
  40a721:	sub    rsp,0x20
  40a725:	mov    ebx,ecx
  40a727:	call   0x405960
  40a72c:	cmp    BYTE PTR [rax],0x55
  40a72f:	je     0x40a740
  40a731:	test   bx,bx
  40a734:	jne    0x40a770
  40a736:	xor    eax,eax
  40a738:	add    rsp,0x20
  40a73c:	pop    rbx
  40a73d:	ret    
  40a73e:	xchg   ax,ax
  40a740:	cmp    BYTE PTR [rax+0x1],0x54
  40a744:	jne    0x40a731
  40a746:	cmp    BYTE PTR [rax+0x2],0x46
  40a74a:	jne    0x40a731
  40a74c:	cmp    BYTE PTR [rax+0x3],0x2d
  40a750:	jne    0x40a731
  40a752:	cmp    BYTE PTR [rax+0x4],0x38
  40a756:	jne    0x40a731
  40a758:	cmp    BYTE PTR [rax+0x5],0x0
  40a75c:	jne    0x40a731
  40a75e:	movzx  ecx,bx
  40a761:	mov    rdx,rax
  40a764:	add    rsp,0x20
  40a768:	pop    rbx
  40a769:	jmp    0x40ab80
  40a76e:	xchg   ax,ax
  40a770:	movzx  ecx,bx
  40a773:	mov    edx,0x157
  40a778:	call   0x411438
  40a77d:	cmp    eax,0x1
  40a780:	sbb    eax,eax
  40a782:	or     eax,0x1
  40a785:	add    rsp,0x20
  40a789:	pop    rbx
  40a78a:	ret    
  40a78b:	nop
  40a78c:	nop
  40a78d:	nop
  40a78e:	nop
  40a78f:	nop
  40a790:	sub    rsp,0x28
  40a794:	mov    rax,rcx
  40a797:	lea    rcx,[rcx+0x10]
  40a79b:	cmp    rax,rcx
  40a79e:	ja     0x40a800
  40a7a0:	call   0x411428
  40a7a5:	test   rax,rax
  40a7a8:	mov    r8,rax
  40a7ab:	je     0x40a800
  40a7ad:	lea    rcx,[rax+0x10]
  40a7b1:	mov    DWORD PTR [rax+0xc],0x1415fb4a
  40a7b8:	movabs rdx,0xff00ff00ff00ff01
  40a7c2:	mov    rax,rcx
  40a7c5:	mul    rdx
  40a7c8:	shr    rdx,0x8
  40a7cc:	mov    rax,rdx
  40a7cf:	shl    rax,0x8
  40a7d3:	add    rdx,rax
  40a7d6:	mov    rax,rcx
  40a7d9:	sub    rax,rdx
  40a7dc:	mov    rdx,rax
  40a7df:	lea    rax,[rip+0x1229a]        # 0x41ca80
  40a7e6:	mov    r9,QWORD PTR [rax+rdx*8]
  40a7ea:	mov    QWORD PTR [rax+rdx*8],rcx
  40a7ee:	mov    rax,rcx
  40a7f1:	mov    QWORD PTR [r8],r9
  40a7f4:	add    rsp,0x28
  40a7f8:	ret    
  40a7f9:	nop    DWORD PTR [rax+0x0]
  40a800:	xor    eax,eax
  40a802:	add    rsp,0x28
  40a806:	ret    
  40a807:	nop    WORD PTR [rax+rax*1+0x0]
  40a810:	test   rcx,rcx
  40a813:	je     0x40a81e
  40a815:	cmp    DWORD PTR [rcx-0x4],0x1415fb4a
  40a81c:	je     0x40a820
  40a81e:	repz ret 
  40a820:	mov    rax,rcx
  40a823:	movabs rdx,0xff00ff00ff00ff01
  40a82d:	mul    rdx
  40a830:	shr    rdx,0x8
  40a834:	mov    rax,rdx
  40a837:	shl    rax,0x8
  40a83b:	add    rdx,rax
  40a83e:	mov    rax,rcx
  40a841:	sub    rax,rdx
  40a844:	mov    rdx,rax
  40a847:	lea    rax,[rip+0x12232]        # 0x41ca80
  40a84e:	mov    r8,QWORD PTR [rax+rdx*8]
  40a852:	test   r8,r8
  40a855:	je     0x40a81e
  40a857:	cmp    rcx,r8
  40a85a:	jne    0x40a868
  40a85c:	jmp    0x40a887
  40a85e:	xchg   ax,ax
  40a860:	cmp    rcx,rdx
  40a863:	je     0x40a873
  40a865:	mov    r8,rdx
  40a868:	mov    rdx,QWORD PTR [r8-0x10]
  40a86c:	test   rdx,rdx
  40a86f:	jne    0x40a860
  40a871:	jmp    0x40a81e
  40a873:	sub    r8,0x10
  40a877:	mov    rax,QWORD PTR [rcx-0x10]
  40a87b:	sub    rcx,0x10
  40a87f:	mov    QWORD PTR [r8],rax
  40a882:	jmp    0x411468
  40a887:	lea    r8,[rax+rdx*8]
  40a88b:	jmp    0x40a877
  40a88d:	nop
  40a88e:	nop
  40a88f:	nop
  40a890:	push   r13
  40a892:	push   r12
  40a894:	push   rbp
  40a895:	push   rdi
  40a896:	push   rsi
  40a897:	push   rbx
  40a898:	sub    rsp,0x68
  40a89c:	mov    rdi,QWORD PTR [rip+0xdddd]        # 0x418680
  40a8a3:	mov    rax,QWORD PTR [rdi]
  40a8a6:	cmp    DWORD PTR [rax],0x1
  40a8a9:	jle    0x40aa60
  40a8af:	lea    rsi,[rsp+0x20]
  40a8b4:	mov    rbp,QWORD PTR [rip+0xdf05]        # 0x4187c0
  40a8bb:	mov    QWORD PTR [rsp+0x30],rcx
  40a8c0:	mov    BYTE PTR [rsp+0x20],0x0
  40a8c5:	mov    DWORD PTR [rsp+0x24],0x0
  40a8cd:	xor    ebx,ebx
  40a8cf:	lea    r12,[rsi+0x4]
  40a8d3:	mov    BYTE PTR [rsp+0x28],0x0
  40a8d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a8e0:	cmp    BYTE PTR [rsp+0x20],0x0
  40a8e5:	jne    0x40a955
  40a8e7:	mov    rcx,QWORD PTR [rsp+0x30]
  40a8ec:	movzx  eax,BYTE PTR [rcx]
  40a8ef:	mov    edx,eax
  40a8f1:	and    eax,0x1f
  40a8f4:	shr    dl,0x5
  40a8f7:	and    edx,0x7
  40a8fa:	mov    edx,DWORD PTR [rbp+rdx*4+0x0]
  40a8fe:	bt     edx,eax
  40a901:	jae    0x40a940
  40a903:	mov    QWORD PTR [rsp+0x38],0x1
  40a90c:	movsx  ax,BYTE PTR [rcx]
  40a910:	mov    BYTE PTR [rsp+0x40],0x1
  40a915:	mov    WORD PTR [rsp+0x42],ax
  40a91a:	cmp    WORD PTR [rsp+0x42],0x0
  40a920:	jne    0x40aa14
  40a926:	mov    rax,rbx
  40a929:	add    rsp,0x68
  40a92d:	pop    rbx
  40a92e:	pop    rsi
  40a92f:	pop    rdi
  40a930:	pop    rbp
  40a931:	pop    r12
  40a933:	pop    r13
  40a935:	ret    
  40a936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a940:	mov    rcx,r12
  40a943:	call   0x404630
  40a948:	test   eax,eax
  40a94a:	je     0x40aa72
  40a950:	mov    BYTE PTR [rsp+0x20],0x1
  40a955:	mov    rax,QWORD PTR [rdi]
  40a958:	mov    r13,QWORD PTR [rsp+0x30]
  40a95d:	movsxd rdx,DWORD PTR [rax]
  40a960:	mov    rcx,r13
  40a963:	call   0x4027b0
  40a968:	lea    rcx,[rsi+0x22]
  40a96c:	lea    r9,[rsi+0x4]
  40a970:	mov    r8,rax
  40a973:	mov    rdx,r13
  40a976:	call   0x404520
  40a97b:	cmp    rax,0xffffffffffffffff
  40a97f:	mov    QWORD PTR [rsp+0x38],rax
  40a984:	je     0x40aa30
  40a98a:	cmp    rax,0xfffffffffffffffe
  40a98e:	je     0x40aa40
  40a994:	test   rax,rax
  40a997:	jne    0x40a9f0
  40a999:	mov    rax,QWORD PTR [rsp+0x30]
  40a99e:	mov    QWORD PTR [rsp+0x38],0x1
  40a9a7:	cmp    BYTE PTR [rax],0x0
  40a9aa:	je     0x40a9c5
  40a9ac:	lea    rdx,[rip+0xca3d]        # 0x4173f0
  40a9b3:	lea    rcx,[rip+0xca57]        # 0x417411
  40a9ba:	mov    r8d,0xb2
  40a9c0:	call   0x40ca90
  40a9c5:	cmp    WORD PTR [rsp+0x42],0x0
  40a9cb:	je     0x40a9f0
  40a9cd:	lea    rdx,[rip+0xca1c]        # 0x4173f0
  40a9d4:	lea    rcx,[rip+0xca4d]        # 0x417428
  40a9db:	mov    r8d,0xb3
  40a9e1:	call   0x40ca90
  40a9e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a9f0:	lea    rcx,[rsi+0x4]
  40a9f4:	mov    BYTE PTR [rsp+0x40],0x1
  40a9f9:	call   0x404630
  40a9fe:	test   eax,eax
  40aa00:	je     0x40aa07
  40aa02:	mov    BYTE PTR [rsp+0x20],0x0
  40aa07:	movzx  eax,BYTE PTR [rsp+0x40]
  40aa0c:	test   al,al
  40aa0e:	jne    0x40a91a
  40aa14:	mov    rax,QWORD PTR [rsp+0x38]
  40aa19:	add    rbx,0x1
  40aa1d:	add    QWORD PTR [rsp+0x30],rax
  40aa22:	mov    BYTE PTR [rsp+0x28],0x0
  40aa27:	jmp    0x40a8e0
  40aa2c:	nop    DWORD PTR [rax+0x0]
  40aa30:	mov    QWORD PTR [rsp+0x38],0x1
  40aa39:	mov    BYTE PTR [rsp+0x40],0x0
  40aa3e:	jmp    0x40aa14
  40aa40:	mov    rcx,QWORD PTR [rsp+0x30]
  40aa45:	call   0x4113b8
  40aa4a:	mov    BYTE PTR [rsp+0x40],0x0
  40aa4f:	mov    QWORD PTR [rsp+0x38],rax
  40aa54:	jmp    0x40aa14
  40aa56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa60:	call   0x4113b8
  40aa65:	add    rsp,0x68
  40aa69:	pop    rbx
  40aa6a:	pop    rsi
  40aa6b:	pop    rdi
  40aa6c:	pop    rbp
  40aa6d:	pop    r12
  40aa6f:	pop    r13
  40aa71:	ret    
  40aa72:	lea    rdx,[rip+0xc977]        # 0x4173f0
  40aa79:	lea    rcx,[rip+0xc97a]        # 0x4173fa
  40aa80:	mov    r8d,0x96
  40aa86:	call   0x40ca90
  40aa8b:	jmp    0x40a950
  40aa90:	sub    rsp,0x28
  40aa94:	movzx  r10d,BYTE PTR [rcx+0x6]
  40aa99:	xor    eax,eax
  40aa9b:	mov    r11d,DWORD PTR [rsp+0x50]
  40aaa0:	cmp    r10b,r8b
  40aaa3:	je     0x40aab0
  40aaa5:	add    rsp,0x28
  40aaa9:	ret    
  40aaaa:	nop    WORD PTR [rax+rax*1+0x0]
  40aab0:	test   r10b,r10b
  40aab3:	mov    al,0x1
  40aab5:	je     0x40aaa5
  40aab7:	xor    al,al
  40aab9:	cmp    r9b,BYTE PTR [rcx+0x7]
  40aabd:	jne    0x40aaa5
  40aabf:	test   r9b,r9b
  40aac2:	mov    al,0x1
  40aac4:	je     0x40aaa5
  40aac6:	xor    al,al
  40aac8:	cmp    r11b,BYTE PTR [rcx+0x8]
  40aacc:	jne    0x40aaa5
  40aace:	test   r11b,r11b
  40aad1:	mov    al,0x1
  40aad3:	je     0x40aaa5
  40aad5:	add    rdx,0x9
  40aad9:	add    rcx,0x9
  40aadd:	call   0x4113d0
  40aae2:	test   eax,eax
  40aae4:	sete   al
  40aae7:	movzx  eax,al
  40aaea:	jmp    0x40aaa5
  40aaec:	nop    DWORD PTR [rax+0x0]
  40aaf0:	push   rsi
  40aaf1:	push   rbx
  40aaf2:	sub    rsp,0x28
  40aaf6:	movzx  r10d,BYTE PTR [rcx+0x4]
  40aafb:	xor    eax,eax
  40aafd:	mov    r11d,DWORD PTR [rsp+0x60]
  40ab02:	mov    ebx,DWORD PTR [rsp+0x68]
  40ab06:	mov    esi,DWORD PTR [rsp+0x70]
  40ab0a:	cmp    r10b,r8b
  40ab0d:	je     0x40ab20
  40ab0f:	add    rsp,0x28
  40ab13:	pop    rbx
  40ab14:	pop    rsi
  40ab15:	ret    
  40ab16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ab20:	test   r10b,r10b
  40ab23:	mov    al,0x1
  40ab25:	je     0x40ab0f
  40ab27:	xor    al,al
  40ab29:	cmp    r9b,BYTE PTR [rcx+0x5]
  40ab2d:	jne    0x40ab0f
  40ab2f:	test   r9b,r9b
  40ab32:	mov    al,0x1
  40ab34:	je     0x40ab0f
  40ab36:	xor    al,al
  40ab38:	cmp    r11b,BYTE PTR [rcx+0x6]
  40ab3c:	jne    0x40ab0f
  40ab3e:	test   r11b,r11b
  40ab41:	mov    al,0x1
  40ab43:	je     0x40ab0f
  40ab45:	xor    al,al
  40ab47:	cmp    bl,BYTE PTR [rcx+0x7]
  40ab4a:	jne    0x40ab0f
  40ab4c:	test   bl,bl
  40ab4e:	mov    al,0x1
  40ab50:	je     0x40ab0f
  40ab52:	xor    al,al
  40ab54:	cmp    sil,BYTE PTR [rcx+0x8]
  40ab58:	jne    0x40ab0f
  40ab5a:	test   sil,sil
  40ab5d:	mov    al,0x1
  40ab5f:	je     0x40ab0f
  40ab61:	add    rdx,0x9
  40ab65:	add    rcx,0x9
  40ab69:	call   0x4113d0
  40ab6e:	test   eax,eax
  40ab70:	sete   al
  40ab73:	movzx  eax,al
  40ab76:	jmp    0x40ab0f
  40ab78:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab80:	push   rbx
  40ab81:	sub    rsp,0x40
  40ab85:	mov    eax,ecx
  40ab87:	shr    eax,0x9
  40ab8a:	cmp    eax,0xf7
  40ab8f:	ja     0x40ac50
  40ab95:	lea    r8,[rip+0xc8e4]        # 0x417480
  40ab9c:	movsx  eax,BYTE PTR [r8+rax*1]
  40aba1:	test   eax,eax
  40aba3:	js     0x40abd1
  40aba5:	mov    r8d,ecx
  40aba8:	shl    eax,0x6
  40abab:	shr    r8d,0x3
  40abaf:	and    r8d,0x3f
  40abb3:	add    eax,r8d
  40abb6:	lea    r8,[rip+0xc9c3]        # 0x417580
  40abbd:	movzx  r8d,BYTE PTR [r8+rax*1]
  40abc2:	mov    eax,ecx
  40abc4:	and    eax,0x7
  40abc7:	bt     r8d,eax
  40abcb:	jb     0x40ac75
  40abd1:	cmp    ecx,0x10ff
  40abd7:	ja     0x40ac57
  40abd9:	lea    eax,[rcx-0xa1]
  40abdf:	cmp    eax,0xfebf
  40abe4:	ja     0x40ad60
  40abea:	cmp    ecx,0x20a9
  40abf0:	je     0x40ad60
  40abf6:	mov    rbx,rdx
  40abf9:	movzx  edx,BYTE PTR [rdx]
  40abfc:	cmp    dl,0x45
  40abff:	je     0x40ada0
  40ac05:	cmp    dl,0x47
  40ac08:	je     0x40ae80
  40ac0e:	cmp    dl,0x42
  40ac11:	je     0x40ae30
  40ac17:	cmp    dl,0x43
  40ac1a:	mov    eax,0x1
  40ac1f:	je     0x40af10
  40ac25:	cmp    dl,0x4a
  40ac28:	jne    0x40ac6f
  40ac2a:	cmp    BYTE PTR [rbx+0x1],0x4f
  40ac2e:	jne    0x40ac6f
  40ac30:	cmp    BYTE PTR [rbx+0x2],0x48
  40ac34:	jne    0x40ac6f
  40ac36:	cmp    BYTE PTR [rbx+0x3],0x41
  40ac3a:	jne    0x40ac6f
  40ac3c:	cmp    BYTE PTR [rbx+0x4],0x42
  40ac40:	jne    0x40ac6f
  40ac42:	cmp    BYTE PTR [rbx+0x5],0x1
  40ac46:	sbb    eax,eax
  40ac48:	not    eax
  40ac4a:	add    eax,0x2
  40ac4d:	jmp    0x40ac6f
  40ac4f:	nop
  40ac50:	cmp    eax,0x700
  40ac55:	je     0x40ac90
  40ac57:	lea    eax,[rcx-0x2329]
  40ac5d:	cmp    eax,0x1
  40ac60:	jbe    0x40ac6a
  40ac62:	cmp    ecx,0x115f
  40ac68:	ja     0x40acb0
  40ac6a:	mov    eax,0x2
  40ac6f:	add    rsp,0x40
  40ac73:	pop    rbx
  40ac74:	ret    
  40ac75:	sub    ecx,0x1
  40ac78:	xor    eax,eax
  40ac7a:	cmp    ecx,0x9e
  40ac80:	setbe  al
  40ac83:	neg    eax
  40ac85:	add    rsp,0x40
  40ac89:	pop    rbx
  40ac8a:	ret    
  40ac8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac90:	cmp    ecx,0xe00ff
  40ac96:	jbe    0x40ad70
  40ac9c:	xor    ax,ax
  40ac9f:	cmp    ecx,0xe01ef
  40aca5:	ja     0x40ac57
  40aca7:	jmp    0x40ac6f
  40aca9:	nop    DWORD PTR [rax+0x0]
  40acb0:	lea    eax,[rcx-0x2e80]
  40acb6:	cmp    eax,0x764f
  40acbb:	ja     0x40acd7
  40acbd:	cmp    ecx,0x303f
  40acc3:	je     0x40acd7
  40acc5:	lea    r8d,[rcx-0x4dc0]
  40accc:	mov    eax,0x2
  40acd1:	cmp    r8d,0x3f
  40acd5:	ja     0x40ac6f
  40acd7:	lea    r8d,[rcx-0xac00]
  40acde:	mov    eax,0x2
  40ace3:	cmp    r8d,0x2ba3
  40acea:	jbe    0x40ac6f
  40acec:	lea    r8d,[rcx-0xf900]
  40acf3:	cmp    r8d,0x1ff
  40acfa:	jbe    0x40ac6f
  40ad00:	lea    r8d,[rcx-0xfe10]
  40ad07:	cmp    r8d,0xf
  40ad0b:	jbe    0x40ac6f
  40ad11:	lea    r8d,[rcx-0xfe30]
  40ad18:	cmp    r8d,0x3f
  40ad1c:	jbe    0x40ac6f
  40ad22:	lea    r8d,[rcx-0xff00]
  40ad29:	cmp    r8d,0x60
  40ad2d:	jbe    0x40ac6f
  40ad33:	lea    r8d,[rcx-0xffe0]
  40ad3a:	cmp    r8d,0x6
  40ad3e:	jbe    0x40ac6f
  40ad44:	lea    r8d,[rcx-0x20000]
  40ad4b:	cmp    r8d,0x1ffff
  40ad52:	jbe    0x40ac6f
  40ad58:	jmp    0x40abd9
  40ad5d:	nop    DWORD PTR [rax]
  40ad60:	mov    eax,0x1
  40ad65:	add    rsp,0x40
  40ad69:	pop    rbx
  40ad6a:	ret    
  40ad6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad70:	cmp    ecx,0xe001f
  40ad76:	ja     0x40ae20
  40ad7c:	cmp    ecx,0xe0001
  40ad82:	sete   r8b
  40ad86:	xor    eax,eax
  40ad88:	test   r8b,r8b
  40ad8b:	je     0x40ac57
  40ad91:	jmp    0x40ac6f
  40ad96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ada0:	cmp    BYTE PTR [rbx+0x1],0x55
  40ada4:	mov    eax,0x1
  40ada9:	jne    0x40ac6f
  40adaf:	cmp    BYTE PTR [rbx+0x2],0x43
  40adb3:	je     0x40aeb8
  40adb9:	cmp    BYTE PTR [rbx+0x2],0x43
  40adbd:	je     0x40afb1
  40adc3:	cmp    BYTE PTR [rbx+0x2],0x43
  40adc7:	mov    eax,0x1
  40adcc:	jne    0x40ac6f
  40add2:	cmp    BYTE PTR [rbx+0x3],0x2d
  40add6:	jne    0x40ac6f
  40addc:	lea    rdx,[rip+0xc677]        # 0x41745a
  40ade3:	mov    DWORD PTR [rsp+0x30],0x0
  40adeb:	mov    DWORD PTR [rsp+0x28],0x0
  40adf3:	mov    DWORD PTR [rsp+0x20],0x0
  40adfb:	mov    r9d,0x52
  40ae01:	mov    r8d,0x4b
  40ae07:	mov    rcx,rbx
  40ae0a:	call   0x40aaf0
  40ae0f:	cmp    eax,0x1
  40ae12:	sbb    eax,eax
  40ae14:	add    eax,0x2
  40ae17:	jmp    0x40ac6f
  40ae1c:	nop    DWORD PTR [rax+0x0]
  40ae20:	cmp    ecx,0xe007f
  40ae26:	setbe  r8b
  40ae2a:	jmp    0x40ad86
  40ae2f:	nop
  40ae30:	cmp    BYTE PTR [rbx+0x1],0x49
  40ae34:	mov    eax,0x1
  40ae39:	jne    0x40ac6f
  40ae3f:	cmp    BYTE PTR [rbx+0x2],0x47
  40ae43:	jne    0x40ac6f
  40ae49:	cmp    BYTE PTR [rbx+0x3],0x35
  40ae4d:	jne    0x40ac6f
  40ae53:	mov    DWORD PTR [rsp+0x30],0x0
  40ae5b:	mov    DWORD PTR [rsp+0x28],0x0
  40ae63:	xor    r9d,r9d
  40ae66:	mov    DWORD PTR [rsp+0x20],0x0
  40ae6e:	xor    r8d,r8d
  40ae71:	lea    rdx,[rip+0xc5dd]        # 0x417455
  40ae78:	jmp    0x40ae07
  40ae7a:	nop    WORD PTR [rax+rax*1+0x0]
  40ae80:	cmp    BYTE PTR [rbx+0x1],0x42
  40ae84:	mov    eax,0x1
  40ae89:	jne    0x40ac6f
  40ae8f:	cmp    BYTE PTR [rbx+0x2],0x32
  40ae93:	je     0x40af60
  40ae99:	cmp    BYTE PTR [rbx+0x2],0x4b
  40ae9d:	mov    eax,0x1
  40aea2:	jne    0x40ac6f
  40aea8:	cmp    BYTE PTR [rbx+0x3],0x1
  40aeac:	sbb    eax,eax
  40aeae:	not    eax
  40aeb0:	add    eax,0x2
  40aeb3:	jmp    0x40ac6f
  40aeb8:	cmp    BYTE PTR [rbx+0x3],0x2d
  40aebc:	jne    0x40adb9
  40aec2:	lea    rdx,[rip+0xc577]        # 0x417440
  40aec9:	mov    DWORD PTR [rsp+0x30],0x0
  40aed1:	mov    DWORD PTR [rsp+0x28],0x0
  40aed9:	mov    DWORD PTR [rsp+0x20],0x0
  40aee1:	mov    r9d,0x50
  40aee7:	mov    r8d,0x4a
  40aeed:	mov    rcx,rbx
  40aef0:	call   0x40aaf0
  40aef5:	mov    edx,eax
  40aef7:	mov    eax,0x2
  40aefc:	test   edx,edx
  40aefe:	jne    0x40ac6f
  40af04:	jmp    0x40adb9
  40af09:	nop    DWORD PTR [rax+0x0]
  40af10:	cmp    BYTE PTR [rbx+0x1],0x50
  40af14:	jne    0x40ac6f
  40af1a:	cmp    BYTE PTR [rbx+0x2],0x39
  40af1e:	jne    0x40ac6f
  40af24:	cmp    BYTE PTR [rbx+0x3],0x34
  40af28:	jne    0x40ac6f
  40af2e:	mov    DWORD PTR [rsp+0x30],0x0
  40af36:	mov    DWORD PTR [rsp+0x28],0x0
  40af3e:	xor    r9d,r9d
  40af41:	mov    DWORD PTR [rsp+0x20],0x0
  40af49:	mov    r8d,0x39
  40af4f:	lea    rdx,[rip+0xc50b]        # 0x417461
  40af56:	jmp    0x40ae07
  40af5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40af60:	cmp    BYTE PTR [rbx+0x3],0x33
  40af64:	jne    0x40ae99
  40af6a:	lea    rdx,[rip+0xc4d6]        # 0x417447
  40af71:	mov    DWORD PTR [rsp+0x30],0x0
  40af79:	mov    DWORD PTR [rsp+0x28],0x0
  40af81:	mov    DWORD PTR [rsp+0x20],0x0
  40af89:	mov    r9d,0x32
  40af8f:	mov    r8d,0x31
  40af95:	mov    rcx,rbx
  40af98:	call   0x40aaf0
  40af9d:	mov    edx,eax
  40af9f:	mov    eax,0x2
  40afa4:	test   edx,edx
  40afa6:	jne    0x40ac6f
  40afac:	jmp    0x40ae99
  40afb1:	cmp    BYTE PTR [rbx+0x3],0x2d
  40afb5:	jne    0x40adc3
  40afbb:	cmp    BYTE PTR [rbx+0x4],0x54
  40afbf:	jne    0x40adc3
  40afc5:	cmp    BYTE PTR [rbx+0x5],0x57
  40afc9:	jne    0x40adc3
  40afcf:	lea    rdx,[rip+0xc478]        # 0x41744e
  40afd6:	xor    r9d,r9d
  40afd9:	xor    r8d,r8d
  40afdc:	mov    DWORD PTR [rsp+0x20],0x0
  40afe4:	mov    rcx,rbx
  40afe7:	call   0x40aa90
  40afec:	mov    edx,eax
  40afee:	mov    eax,0x2
  40aff3:	test   edx,edx
  40aff5:	jne    0x40ac6f
  40affb:	jmp    0x40adc3
  40b000:	jmp    QWORD PTR [rip+0x14432]        # 0x41f438
  40b006:	nop
  40b007:	nop
  40b008:	jmp    QWORD PTR [rip+0x14422]        # 0x41f430
  40b00e:	nop
  40b00f:	nop
  40b010:	jmp    QWORD PTR [rip+0x14412]        # 0x41f428
  40b016:	nop
  40b017:	nop
  40b018:	jmp    QWORD PTR [rip+0x14402]        # 0x41f420
  40b01e:	nop
  40b01f:	nop
  40b020:	jmp    QWORD PTR [rip+0x143f2]        # 0x41f418
  40b026:	nop
  40b027:	nop
  40b028:	jmp    QWORD PTR [rip+0x1442a]        # 0x41f458
  40b02e:	nop
  40b02f:	nop
  40b030:	jmp    QWORD PTR [rip+0x1441a]        # 0x41f450
  40b036:	nop
  40b037:	nop
  40b038:	jmp    QWORD PTR [rip+0x1440a]        # 0x41f448
  40b03e:	nop
  40b03f:	nop
  40b040:	push   rbx
  40b041:	sub    rsp,0x30
  40b045:	mov    rbx,rcx
  40b048:	mov    rcx,QWORD PTR [rip+0x136c1]        # 0x41e710
  40b04f:	call   0x40b5f0
  40b054:	cmp    rax,0xffffffffffffffff
  40b058:	mov    QWORD PTR [rsp+0x20],rax
  40b05d:	je     0x40b0d5
  40b05f:	mov    ecx,0x8
  40b064:	call   0x4114d0
  40b069:	mov    rcx,QWORD PTR [rip+0x136a0]        # 0x41e710
  40b070:	call   0x40b5f0
  40b075:	mov    rcx,QWORD PTR [rip+0x1369c]        # 0x41e718
  40b07c:	mov    QWORD PTR [rsp+0x20],rax
  40b081:	call   0x40b5f0
  40b086:	lea    rdx,[rsp+0x20]
  40b08b:	lea    r8,[rsp+0x28]
  40b090:	mov    rcx,rbx
  40b093:	mov    QWORD PTR [rsp+0x28],rax
  40b098:	call   0x411530
  40b09d:	mov    rcx,QWORD PTR [rsp+0x20]
  40b0a2:	mov    rbx,rax
  40b0a5:	call   0x40b600
  40b0aa:	mov    rcx,QWORD PTR [rsp+0x28]
  40b0af:	mov    QWORD PTR [rip+0x1365a],rax        # 0x41e710
  40b0b6:	call   0x40b600
  40b0bb:	mov    ecx,0x8
  40b0c0:	mov    QWORD PTR [rip+0x13651],rax        # 0x41e718
  40b0c7:	call   0x4114b8
  40b0cc:	mov    rax,rbx
  40b0cf:	add    rsp,0x30
  40b0d3:	pop    rbx
  40b0d4:	ret    
  40b0d5:	mov    rax,QWORD PTR [rip+0xd5d4]        # 0x4186b0
  40b0dc:	mov    rcx,rbx
  40b0df:	call   QWORD PTR [rax]
  40b0e1:	add    rsp,0x30
  40b0e5:	pop    rbx
  40b0e6:	ret    
  40b0e7:	nop    WORD PTR [rax+rax*1+0x0]
  40b0f0:	sub    rsp,0x28
  40b0f4:	call   0x40b040
  40b0f9:	test   rax,rax
  40b0fc:	sete   al
  40b0ff:	movzx  eax,al
  40b102:	neg    eax
  40b104:	add    rsp,0x28
  40b108:	ret    
  40b109:	nop
  40b10a:	nop
  40b10b:	nop
  40b10c:	nop
  40b10d:	nop
  40b10e:	nop
  40b10f:	nop
  40b110:	sub    rsp,0x28
  40b114:	mov    rax,QWORD PTR [rip+0x6fa5]        # 0x4120c0
  40b11b:	mov    rax,QWORD PTR [rax]
  40b11e:	test   rax,rax
  40b121:	je     0x40b140
  40b123:	call   rax
  40b125:	mov    rax,QWORD PTR [rip+0x6f94]        # 0x4120c0
  40b12c:	lea    rdx,[rax+0x8]
  40b130:	mov    rax,QWORD PTR [rax+0x8]
  40b134:	mov    QWORD PTR [rip+0x6f85],rdx        # 0x4120c0
  40b13b:	test   rax,rax
  40b13e:	jne    0x40b123
  40b140:	add    rsp,0x28
  40b144:	ret    
  40b145:	nop
  40b146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b150:	push   rsi
  40b151:	push   rbx
  40b152:	sub    rsp,0x28
  40b156:	mov    rsi,QWORD PTR [rip+0xd4c3]        # 0x418620
  40b15d:	mov    rax,QWORD PTR [rsi]
  40b160:	cmp    eax,0xffffffff
  40b163:	mov    ebx,eax
  40b165:	je     0x40b190
  40b167:	test   ebx,ebx
  40b169:	je     0x40b17a
  40b16b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b170:	mov    eax,ebx
  40b172:	call   QWORD PTR [rsi+rax*8]
  40b175:	sub    ebx,0x1
  40b178:	jne    0x40b170
  40b17a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x40b110
  40b181:	add    rsp,0x28
  40b185:	pop    rbx
  40b186:	pop    rsi
  40b187:	jmp    0x40b0f0
  40b18c:	nop    DWORD PTR [rax+0x0]
  40b190:	xor    ebx,ebx
  40b192:	jmp    0x40b196
  40b194:	mov    ebx,eax
  40b196:	lea    edx,[rbx+0x1]
  40b199:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40b19e:	mov    rax,rdx
  40b1a1:	jne    0x40b194
  40b1a3:	jmp    0x40b167
  40b1a5:	nop
  40b1a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b1b0:	mov    eax,DWORD PTR [rip+0x1210a]        # 0x41d2c0
  40b1b6:	test   eax,eax
  40b1b8:	je     0x40b1c0
  40b1ba:	repz ret 
  40b1bc:	nop    DWORD PTR [rax+0x0]
  40b1c0:	mov    DWORD PTR [rip+0x120f6],0x1        # 0x41d2c0
  40b1ca:	jmp    0x40b150
  40b1cc:	nop
  40b1cd:	nop
  40b1ce:	nop
  40b1cf:	nop
  40b1d0:	mov    rax,QWORD PTR [rip+0x14401]        # 0x41f5d8
  40b1d7:	rex.W jmp rax
  40b1da:	nop
  40b1db:	nop
  40b1dc:	nop
  40b1dd:	nop
  40b1de:	nop
  40b1df:	nop
  40b1e0:	xor    eax,eax
  40b1e2:	ret    
  40b1e3:	nop
  40b1e4:	nop
  40b1e5:	nop
  40b1e6:	nop
  40b1e7:	nop
  40b1e8:	nop
  40b1e9:	nop
  40b1ea:	nop
  40b1eb:	nop
  40b1ec:	nop
  40b1ed:	nop
  40b1ee:	nop
  40b1ef:	nop
  40b1f0:	push   r12
  40b1f2:	push   rbp
  40b1f3:	push   rdi
  40b1f4:	push   rsi
  40b1f5:	push   rbx
  40b1f6:	sub    rsp,0x40
  40b1fa:	mov    rbx,QWORD PTR [rip+0x6f5f]        # 0x412160
  40b201:	movabs rax,0x2b992ddfa232
  40b20b:	mov    QWORD PTR [rsp+0x20],0x0
  40b214:	cmp    rbx,rax
  40b217:	je     0x40b230
  40b219:	not    rbx
  40b21c:	mov    QWORD PTR [rip+0x6f4d],rbx        # 0x412170
  40b223:	add    rsp,0x40
  40b227:	pop    rbx
  40b228:	pop    rsi
  40b229:	pop    rdi
  40b22a:	pop    rbp
  40b22b:	pop    r12
  40b22d:	ret    
  40b22e:	xchg   ax,ax
  40b230:	lea    rcx,[rsp+0x20]
  40b235:	call   QWORD PTR [rip+0x142ad]        # 0x41f4e8
  40b23b:	mov    r12,QWORD PTR [rsp+0x20]
  40b240:	call   QWORD PTR [rip+0x1425a]        # 0x41f4a0
  40b246:	mov    ebp,eax
  40b248:	call   QWORD PTR [rip+0x1425a]        # 0x41f4a8
  40b24e:	mov    edi,eax
  40b250:	call   QWORD PTR [rip+0x142a2]        # 0x41f4f8
  40b256:	lea    rcx,[rsp+0x30]
  40b25b:	mov    esi,eax
  40b25d:	call   QWORD PTR [rip+0x142bd]        # 0x41f520
  40b263:	xor    r12,QWORD PTR [rsp+0x30]
  40b268:	mov    edx,edi
  40b26a:	movabs rax,0xffffffffffff
  40b274:	xor    rbp,r12
  40b277:	mov    rdi,rbp
  40b27a:	xor    rdi,rdx
  40b27d:	mov    edx,esi
  40b27f:	xor    rdi,rdx
  40b282:	mov    rsi,rdi
  40b285:	and    rsi,rax
  40b288:	cmp    rsi,rbx
  40b28b:	je     0x40b2b0
  40b28d:	mov    rax,rsi
  40b290:	not    rax
  40b293:	mov    QWORD PTR [rip+0x6ec6],rsi        # 0x412160
  40b29a:	mov    QWORD PTR [rip+0x6ecf],rax        # 0x412170
  40b2a1:	add    rsp,0x40
  40b2a5:	pop    rbx
  40b2a6:	pop    rsi
  40b2a7:	pop    rdi
  40b2a8:	pop    rbp
  40b2a9:	pop    r12
  40b2ab:	ret    
  40b2ac:	nop    DWORD PTR [rax+0x0]
  40b2b0:	movabs rax,0xffffd466d2205dcc
  40b2ba:	movabs rsi,0x2b992ddfa233
  40b2c4:	jmp    0x40b293
  40b2c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b2d0:	push   rbp
  40b2d1:	push   rsi
  40b2d2:	push   rbx
  40b2d3:	mov    rbp,rsp
  40b2d6:	sub    rsp,0x70
  40b2da:	mov    rsi,rcx
  40b2dd:	lea    rcx,[rip+0x1201c]        # 0x41d300
  40b2e4:	call   QWORD PTR [rip+0x14246]        # 0x41f530
  40b2ea:	mov    rbx,QWORD PTR [rip+0x12107]        # 0x41d3f8
  40b2f1:	xor    r8d,r8d
  40b2f4:	lea    rdx,[rbp-0x28]
  40b2f8:	mov    rcx,rbx
  40b2fb:	call   QWORD PTR [rip+0x14237]        # 0x41f538
  40b301:	test   rax,rax
  40b304:	mov    r9,rax
  40b307:	je     0x40b3b0
  40b30d:	lea    rax,[rbp-0x20]
  40b311:	mov    QWORD PTR [rsp+0x38],0x0
  40b31a:	mov    r8,rbx
  40b31d:	mov    rdx,QWORD PTR [rbp-0x28]
  40b321:	xor    ecx,ecx
  40b323:	mov    QWORD PTR [rsp+0x30],rax
  40b328:	lea    rax,[rbp-0x18]
  40b32c:	mov    QWORD PTR [rsp+0x28],rax
  40b331:	lea    rax,[rip+0x11fc8]        # 0x41d300
  40b338:	mov    QWORD PTR [rsp+0x20],rax
  40b33d:	call   QWORD PTR [rip+0x141fd]        # 0x41f540
  40b343:	mov    rax,QWORD PTR [rip+0x120ae]        # 0x41d3f8
  40b34a:	xor    ecx,ecx
  40b34c:	mov    QWORD PTR [rip+0x1202d],rsi        # 0x41d380
  40b353:	mov    DWORD PTR [rip+0x124a3],0xc0000409        # 0x41d800
  40b35d:	mov    DWORD PTR [rip+0x1249d],0x1        # 0x41d804
  40b367:	mov    QWORD PTR [rip+0x124a2],rax        # 0x41d810
  40b36e:	mov    rax,QWORD PTR [rip+0x6deb]        # 0x412160
  40b375:	mov    QWORD PTR [rbp-0x10],rax
  40b379:	mov    rax,QWORD PTR [rip+0x6df0]        # 0x412170
  40b380:	mov    QWORD PTR [rbp-0x8],rax
  40b384:	call   QWORD PTR [rip+0x141ce]        # 0x41f558
  40b38a:	lea    rcx,[rip+0xcaef]        # 0x417e80
  40b391:	call   QWORD PTR [rip+0x141e1]        # 0x41f578
  40b397:	call   QWORD PTR [rip+0x140fb]        # 0x41f498
  40b39d:	mov    edx,0xc0000409
  40b3a2:	mov    rcx,rax
  40b3a5:	call   QWORD PTR [rip+0x141bd]        # 0x41f568
  40b3ab:	call   0x4114b0
  40b3b0:	mov    rax,QWORD PTR [rbp+0x18]
  40b3b4:	mov    QWORD PTR [rip+0x1203d],rax        # 0x41d3f8
  40b3bb:	lea    rax,[rbp+0x8]
  40b3bf:	mov    QWORD PTR [rip+0x11fd2],rax        # 0x41d398
  40b3c6:	jmp    0x40b343
  40b3cb:	nop
  40b3cc:	nop
  40b3cd:	nop
  40b3ce:	nop
  40b3cf:	nop
  40b3d0:	sub    rsp,0x28
  40b3d4:	test   edx,edx
  40b3d6:	je     0x40b3f0
  40b3d8:	cmp    edx,0x3
  40b3db:	je     0x40b3f0
  40b3dd:	mov    eax,0x1
  40b3e2:	add    rsp,0x28
  40b3e6:	ret    
  40b3e7:	nop    WORD PTR [rax+rax*1+0x0]
  40b3f0:	call   0x40c0e0
  40b3f5:	mov    eax,0x1
  40b3fa:	add    rsp,0x28
  40b3fe:	ret    
  40b3ff:	nop
  40b400:	push   rsi
  40b401:	push   rbx
  40b402:	sub    rsp,0x28
  40b406:	mov    rax,QWORD PTR [rip+0xd1f3]        # 0x418600
  40b40d:	cmp    DWORD PTR [rax],0x2
  40b410:	je     0x40b418
  40b412:	mov    DWORD PTR [rax],0x2
  40b418:	cmp    edx,0x2
  40b41b:	je     0x40b430
  40b41d:	cmp    edx,0x1
  40b420:	je     0x40b462
  40b422:	mov    eax,0x1
  40b427:	add    rsp,0x28
  40b42b:	pop    rbx
  40b42c:	pop    rsi
  40b42d:	ret    
  40b42e:	xchg   ax,ax
  40b430:	lea    rbx,[rip+0x15c29]        # 0x421060
  40b437:	lea    rsi,[rip+0x15c22]        # 0x421060
  40b43e:	cmp    rbx,rsi
  40b441:	je     0x40b422
  40b443:	mov    rax,QWORD PTR [rbx]
  40b446:	test   rax,rax
  40b449:	je     0x40b44d
  40b44b:	call   rax
  40b44d:	add    rbx,0x8
  40b451:	cmp    rbx,rsi
  40b454:	jne    0x40b443
  40b456:	mov    eax,0x1
  40b45b:	add    rsp,0x28
  40b45f:	pop    rbx
  40b460:	pop    rsi
  40b461:	ret    
  40b462:	call   0x40c0e0
  40b467:	jmp    0x40b422
  40b469:	nop    DWORD PTR [rax+0x0]
  40b470:	xor    eax,eax
  40b472:	ret    
  40b473:	nop
  40b474:	nop
  40b475:	nop
  40b476:	nop
  40b477:	nop
  40b478:	nop
  40b479:	nop
  40b47a:	nop
  40b47b:	nop
  40b47c:	nop
  40b47d:	nop
  40b47e:	nop
  40b47f:	nop
  40b480:	sub    rsp,0x58
  40b484:	mov    rax,QWORD PTR [rip+0x12455]        # 0x41d8e0
  40b48b:	test   rax,rax
  40b48e:	je     0x40b4bc
  40b490:	movsd  xmm0,QWORD PTR [rsp+0x80]
  40b499:	mov    DWORD PTR [rsp+0x20],ecx
  40b49d:	lea    rcx,[rsp+0x20]
  40b4a2:	mov    QWORD PTR [rsp+0x28],rdx
  40b4a7:	movsd  QWORD PTR [rsp+0x30],xmm2
  40b4ad:	movsd  QWORD PTR [rsp+0x38],xmm3
  40b4b3:	movsd  QWORD PTR [rsp+0x40],xmm0
  40b4b9:	call   rax
  40b4bb:	nop
  40b4bc:	add    rsp,0x58
  40b4c0:	ret    
  40b4c1:	nop    DWORD PTR [rax+rax*1+0x0]
  40b4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b4d0:	mov    QWORD PTR [rip+0x12409],rcx        # 0x41d8e0
  40b4d7:	jmp    0x411508
  40b4dc:	nop    DWORD PTR [rax+0x0]
  40b4e0:	push   rsi
  40b4e1:	push   rbx
  40b4e2:	sub    rsp,0x78
  40b4e6:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40b4eb:	movaps XMMWORD PTR [rsp+0x50],xmm7
  40b4f0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  40b4f6:	cmp    DWORD PTR [rcx],0x6
  40b4f9:	ja     0x40b5d0
  40b4ff:	mov    edx,DWORD PTR [rcx]
  40b501:	lea    rax,[rip+0xcabc]        # 0x417fc4
  40b508:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40b50c:	add    rax,rdx
  40b50f:	jmp    rax
  40b511:	lea    rbx,[rip+0xc988]        # 0x417ea0
  40b518:	nop    DWORD PTR [rax+rax*1+0x0]
  40b520:	movsd  xmm8,QWORD PTR [rcx+0x20]
  40b526:	mov    rsi,QWORD PTR [rcx+0x8]
  40b52a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40b52f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  40b534:	call   0x411520
  40b539:	movsd  QWORD PTR [rsp+0x30],xmm8
  40b540:	lea    rcx,[rax+0x60]
  40b544:	lea    rdx,[rip+0xca4d]        # 0x417f98
  40b54b:	movsd  QWORD PTR [rsp+0x28],xmm7
  40b551:	mov    r9,rsi
  40b554:	mov    r8,rbx
  40b557:	movsd  QWORD PTR [rsp+0x20],xmm6
  40b55d:	call   0x411480
  40b562:	nop
  40b563:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  40b568:	xor    eax,eax
  40b56a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  40b56f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  40b575:	add    rsp,0x78
  40b579:	pop    rbx
  40b57a:	pop    rsi
  40b57b:	ret    
  40b57c:	nop    DWORD PTR [rax+0x0]
  40b580:	lea    rbx,[rip+0xc938]        # 0x417ebf
  40b587:	jmp    0x40b520
  40b589:	nop    DWORD PTR [rax+0x0]
  40b590:	lea    rbx,[rip+0xc949]        # 0x417ee0
  40b597:	jmp    0x40b520
  40b599:	nop    DWORD PTR [rax+0x0]
  40b5a0:	lea    rbx,[rip+0xc9a9]        # 0x417f50
  40b5a7:	jmp    0x40b520
  40b5ac:	nop    DWORD PTR [rax+0x0]
  40b5b0:	lea    rbx,[rip+0xc971]        # 0x417f28
  40b5b7:	jmp    0x40b520
  40b5bc:	nop    DWORD PTR [rax+0x0]
  40b5c0:	lea    rbx,[rip+0xc939]        # 0x417f00
  40b5c7:	jmp    0x40b520
  40b5cc:	nop    DWORD PTR [rax+0x0]
  40b5d0:	lea    rbx,[rip+0xc9af]        # 0x417f86
  40b5d7:	jmp    0x40b520
  40b5dc:	nop
  40b5dd:	nop
  40b5de:	nop
  40b5df:	nop
  40b5e0:	fninit 
  40b5e2:	ret    
  40b5e3:	nop
  40b5e4:	nop
  40b5e5:	nop
  40b5e6:	nop
  40b5e7:	nop
  40b5e8:	nop
  40b5e9:	nop
  40b5ea:	nop
  40b5eb:	nop
  40b5ec:	nop
  40b5ed:	nop
  40b5ee:	nop
  40b5ef:	nop
  40b5f0:	mov    rax,rcx
  40b5f3:	ret    
  40b5f4:	xchg   ax,ax
  40b5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b600:	mov    rax,rcx
  40b603:	ret    
  40b604:	nop
  40b605:	nop
  40b606:	nop
  40b607:	nop
  40b608:	nop
  40b609:	nop
  40b60a:	nop
  40b60b:	nop
  40b60c:	nop
  40b60d:	nop
  40b60e:	nop
  40b60f:	nop
  40b610:	push   rsi
  40b611:	push   rbx
  40b612:	sub    rsp,0x38
  40b616:	lea    rax,[rsp+0x58]
  40b61b:	mov    rbx,rcx
  40b61e:	mov    QWORD PTR [rsp+0x58],rdx
  40b623:	mov    QWORD PTR [rsp+0x60],r8
  40b628:	mov    QWORD PTR [rsp+0x68],r9
  40b62d:	mov    QWORD PTR [rsp+0x28],rax
  40b632:	call   0x411520
  40b637:	lea    rcx,[rip+0xc9a2]        # 0x417fe0
  40b63e:	lea    r9,[rax+0x60]
  40b642:	mov    r8d,0x1b
  40b648:	mov    edx,0x1
  40b64d:	call   0x411458
  40b652:	mov    rsi,QWORD PTR [rsp+0x28]
  40b657:	call   0x411520
  40b65c:	lea    rcx,[rax+0x60]
  40b660:	mov    rdx,rbx
  40b663:	mov    r8,rsi
  40b666:	call   0x411390
  40b66b:	call   0x4114b0
  40b670:	nop
  40b671:	nop    DWORD PTR [rax+rax*1+0x0]
  40b676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b680:	push   r13
  40b682:	push   r12
  40b684:	push   rbp
  40b685:	push   rdi
  40b686:	push   rsi
  40b687:	push   rbx
  40b688:	sub    rsp,0x58
  40b68c:	movsxd rbp,DWORD PTR [rip+0x12271]        # 0x41d904
  40b693:	mov    rbx,rcx
  40b696:	mov    rsi,rdx
  40b699:	mov    rdi,r8
  40b69c:	test   ebp,ebp
  40b69e:	jle    0x40b79a
  40b6a4:	mov    rax,QWORD PTR [rip+0x1225d]        # 0x41d908
  40b6ab:	xor    r9d,r9d
  40b6ae:	add    rax,0x8
  40b6b2:	mov    r10,QWORD PTR [rax]
  40b6b5:	cmp    rbx,r10
  40b6b8:	jb     0x40b6ce
  40b6ba:	mov    rdx,QWORD PTR [rax+0x8]
  40b6be:	mov    r11d,DWORD PTR [rdx+0x8]
  40b6c2:	add    r10,r11
  40b6c5:	cmp    rbx,r10
  40b6c8:	jb     0x40b780
  40b6ce:	add    r9d,0x1
  40b6d2:	add    rax,0x18
  40b6d6:	cmp    r9d,ebp
  40b6d9:	jne    0x40b6b2
  40b6db:	mov    rcx,rbx
  40b6de:	call   0x40c2f0
  40b6e3:	test   rax,rax
  40b6e6:	mov    r12,rax
  40b6e9:	je     0x40b7d2
  40b6ef:	lea    rbp,[rbp+rbp*2+0x0]
  40b6f4:	shl    rbp,0x3
  40b6f8:	mov    r13,rbp
  40b6fb:	add    r13,QWORD PTR [rip+0x12206]        # 0x41d908
  40b702:	mov    QWORD PTR [r13+0x10],rax
  40b706:	mov    DWORD PTR [r13+0x0],0x0
  40b70e:	call   0x40c410
  40b713:	mov    edx,DWORD PTR [r12+0xc]
  40b718:	mov    r8d,0x30
  40b71e:	add    rax,rdx
  40b721:	lea    rdx,[rsp+0x20]
  40b726:	mov    QWORD PTR [r13+0x8],rax
  40b72a:	mov    rax,QWORD PTR [rip+0x121d7]        # 0x41d908
  40b731:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  40b736:	call   QWORD PTR [rip+0x13e4c]        # 0x41f588
  40b73c:	test   rax,rax
  40b73f:	je     0x40b7b5
  40b741:	mov    eax,DWORD PTR [rsp+0x44]
  40b745:	lea    edx,[rax-0x4]
  40b748:	and    edx,0xfffffffb
  40b74b:	je     0x40b779
  40b74d:	sub    eax,0x40
  40b750:	and    eax,0xffffffbf
  40b753:	je     0x40b779
  40b755:	mov    r9,rbp
  40b758:	add    r9,QWORD PTR [rip+0x121a9]        # 0x41d908
  40b75f:	mov    r8d,0x40
  40b765:	mov    rdx,QWORD PTR [rsp+0x38]
  40b76a:	mov    rcx,QWORD PTR [rsp+0x20]
  40b76f:	call   QWORD PTR [rip+0x13e0b]        # 0x41f580
  40b775:	test   eax,eax
  40b777:	je     0x40b7a1
  40b779:	add    DWORD PTR [rip+0x12184],0x1        # 0x41d904
  40b780:	mov    r8,rdi
  40b783:	mov    rdx,rsi
  40b786:	mov    rcx,rbx
  40b789:	add    rsp,0x58
  40b78d:	pop    rbx
  40b78e:	pop    rsi
  40b78f:	pop    rdi
  40b790:	pop    rbp
  40b791:	pop    r12
  40b793:	pop    r13
  40b795:	jmp    0x411418
  40b79a:	xor    ebp,ebp
  40b79c:	jmp    0x40b6db
  40b7a1:	call   QWORD PTR [rip+0x13d11]        # 0x41f4b8
  40b7a7:	lea    rcx,[rip+0xc8aa]        # 0x418058
  40b7ae:	mov    edx,eax
  40b7b0:	call   0x40b610
  40b7b5:	mov    rax,QWORD PTR [rip+0x1214c]        # 0x41d908
  40b7bc:	mov    edx,DWORD PTR [r12+0x8]
  40b7c1:	lea    rcx,[rip+0xc858]        # 0x418020
  40b7c8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40b7cd:	call   0x40b610
  40b7d2:	lea    rcx,[rip+0xc827]        # 0x418000
  40b7d9:	mov    rdx,rbx
  40b7dc:	call   0x40b610
  40b7e1:	nop
  40b7e2:	nop    DWORD PTR [rax+0x0]
  40b7e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b7f0:	push   rbp
  40b7f1:	push   r14
  40b7f3:	push   r13
  40b7f5:	push   r12
  40b7f7:	push   rdi
  40b7f8:	push   rsi
  40b7f9:	push   rbx
  40b7fa:	mov    rbp,rsp
  40b7fd:	sub    rsp,0x60
  40b801:	mov    ebx,DWORD PTR [rip+0x120f9]        # 0x41d900
  40b807:	test   ebx,ebx
  40b809:	je     0x40b820
  40b80b:	mov    rsp,rbp
  40b80e:	pop    rbx
  40b80f:	pop    rsi
  40b810:	pop    rdi
  40b811:	pop    r12
  40b813:	pop    r13
  40b815:	pop    r14
  40b817:	pop    rbp
  40b818:	ret    
  40b819:	nop    DWORD PTR [rax+0x0]
  40b820:	mov    DWORD PTR [rip+0x120d6],0x1        # 0x41d900
  40b82a:	call   0x40c340
  40b82f:	cdqe   
  40b831:	lea    rax,[rax+rax*2]
  40b835:	lea    rax,[rax*8+0x1e]
  40b83d:	and    rax,0xfffffffffffffff0
  40b841:	call   0x40c560
  40b846:	mov    rsi,QWORD PTR [rip+0xcde3]        # 0x418630
  40b84d:	mov    rbx,QWORD PTR [rip+0xcdec]        # 0x418640
  40b854:	sub    rsp,rax
  40b857:	mov    DWORD PTR [rip+0x120a3],0x0        # 0x41d904
  40b861:	lea    rax,[rsp+0x20]
  40b866:	mov    QWORD PTR [rip+0x1209b],rax        # 0x41d908
  40b86d:	mov    rax,rsi
  40b870:	sub    rax,rbx
  40b873:	cmp    rax,0x7
  40b877:	jle    0x40b80b
  40b879:	cmp    rax,0xb
  40b87d:	jle    0x40b8a5
  40b87f:	mov    r11d,DWORD PTR [rbx]
  40b882:	test   r11d,r11d
  40b885:	jne    0x40b9d0
  40b88b:	mov    r10d,DWORD PTR [rbx+0x4]
  40b88f:	test   r10d,r10d
  40b892:	jne    0x40b9d0
  40b898:	mov    r9d,DWORD PTR [rbx+0x8]
  40b89c:	test   r9d,r9d
  40b89f:	jne    0x40b8bc
  40b8a1:	add    rbx,0xc
  40b8a5:	mov    r8d,DWORD PTR [rbx]
  40b8a8:	test   r8d,r8d
  40b8ab:	jne    0x40b9d0
  40b8b1:	mov    ecx,DWORD PTR [rbx+0x4]
  40b8b4:	test   ecx,ecx
  40b8b6:	jne    0x40b9d0
  40b8bc:	mov    edx,DWORD PTR [rbx+0x8]
  40b8bf:	cmp    edx,0x1
  40b8c2:	jne    0x40badc
  40b8c8:	add    rbx,0xc
  40b8cc:	cmp    rbx,rsi
  40b8cf:	jae    0x40b80b
  40b8d5:	mov    r12,QWORD PTR [rip+0xcd84]        # 0x418660
  40b8dc:	lea    r13,[rbp-0x30]
  40b8e0:	movabs r14,0xffffffff00000000
  40b8ea:	mov    ecx,DWORD PTR [rbx+0x4]
  40b8ed:	mov    eax,DWORD PTR [rbx]
  40b8ef:	movzx  edx,BYTE PTR [rbx+0x8]
  40b8f3:	add    rax,r12
  40b8f6:	add    rcx,r12
  40b8f9:	cmp    edx,0x10
  40b8fc:	mov    r8,QWORD PTR [rax]
  40b8ff:	je     0x40ba46
  40b905:	jbe    0x40ba0d
  40b90b:	cmp    edx,0x20
  40b90e:	je     0x40ba8f
  40b914:	cmp    edx,0x40
  40b917:	jne    0x40ba7b
  40b91d:	sub    r8,rax
  40b920:	mov    rdx,r13
  40b923:	mov    rdi,r13
  40b926:	mov    rax,r8
  40b929:	add    rax,QWORD PTR [rcx]
  40b92c:	mov    r8d,0x8
  40b932:	mov    QWORD PTR [rbp-0x30],rax
  40b936:	call   0x40b680
  40b93b:	add    rbx,0xc
  40b93f:	cmp    rbx,rsi
  40b942:	jb     0x40b8ea
  40b944:	mov    eax,DWORD PTR [rip+0x11fba]        # 0x41d904
  40b94a:	xor    ebx,ebx
  40b94c:	xor    esi,esi
  40b94e:	test   eax,eax
  40b950:	jle    0x40b80b
  40b956:	mov    r14,QWORD PTR [rip+0x13c2b]        # 0x41f588
  40b95d:	lea    r13,[rbp-0x34]
  40b961:	mov    r12,QWORD PTR [rip+0x13c18]        # 0x41f580
  40b968:	jmp    0x40b983
  40b96a:	nop    WORD PTR [rax+rax*1+0x0]
  40b970:	add    esi,0x1
  40b973:	add    rbx,0x18
  40b977:	cmp    esi,DWORD PTR [rip+0x11f87]        # 0x41d904
  40b97d:	jge    0x40b80b
  40b983:	mov    rax,rbx
  40b986:	add    rax,QWORD PTR [rip+0x11f7b]        # 0x41d908
  40b98d:	mov    edx,DWORD PTR [rax]
  40b98f:	test   edx,edx
  40b991:	je     0x40b970
  40b993:	mov    rcx,QWORD PTR [rax+0x8]
  40b997:	mov    r8d,0x30
  40b99d:	mov    rdx,rdi
  40b9a0:	call   r14
  40b9a3:	test   rax,rax
  40b9a6:	je     0x40babe
  40b9ac:	mov    rax,QWORD PTR [rip+0x11f55]        # 0x41d908
  40b9b3:	mov    r9,r13
  40b9b6:	mov    rdx,QWORD PTR [rbp-0x18]
  40b9ba:	mov    rcx,QWORD PTR [rbp-0x30]
  40b9be:	mov    r8d,DWORD PTR [rax+rbx*1]
  40b9c2:	call   r12
  40b9c5:	jmp    0x40b970
  40b9c7:	nop    WORD PTR [rax+rax*1+0x0]
  40b9d0:	cmp    rbx,rsi
  40b9d3:	jae    0x40b80b
  40b9d9:	mov    r12,QWORD PTR [rip+0xcc80]        # 0x418660
  40b9e0:	lea    rdi,[rbp-0x30]
  40b9e4:	mov    ecx,DWORD PTR [rbx+0x4]
  40b9e7:	mov    eax,DWORD PTR [rbx]
  40b9e9:	mov    r8d,0x4
  40b9ef:	mov    rdx,rdi
  40b9f2:	add    rbx,0x8
  40b9f6:	add    rcx,r12
  40b9f9:	add    eax,DWORD PTR [rcx]
  40b9fb:	mov    DWORD PTR [rbp-0x30],eax
  40b9fe:	call   0x40b680
  40ba03:	cmp    rbx,rsi
  40ba06:	jb     0x40b9e4
  40ba08:	jmp    0x40b944
  40ba0d:	cmp    edx,0x8
  40ba10:	jne    0x40ba7b
  40ba12:	movzx  edx,BYTE PTR [rcx]
  40ba15:	mov    rdi,r13
  40ba18:	mov    r10,rdx
  40ba1b:	or     r10,0xffffffffffffff00
  40ba22:	test   dl,dl
  40ba24:	cmovs  rdx,r10
  40ba28:	sub    rdx,rax
  40ba2b:	lea    rax,[r8+rdx*1]
  40ba2f:	mov    r8d,0x1
  40ba35:	mov    rdx,r13
  40ba38:	mov    QWORD PTR [rbp-0x30],rax
  40ba3c:	call   0x40b680
  40ba41:	jmp    0x40b93b
  40ba46:	movzx  edx,WORD PTR [rcx]
  40ba49:	mov    rdi,r13
  40ba4c:	mov    r10,rdx
  40ba4f:	or     r10,0xffffffffffff0000
  40ba56:	test   dx,dx
  40ba59:	cmovs  rdx,r10
  40ba5d:	sub    rdx,rax
  40ba60:	lea    rax,[r8+rdx*1]
  40ba64:	mov    r8d,0x2
  40ba6a:	mov    rdx,r13
  40ba6d:	mov    QWORD PTR [rbp-0x30],rax
  40ba71:	call   0x40b680
  40ba76:	jmp    0x40b93b
  40ba7b:	lea    rcx,[rip+0xc636]        # 0x4180b8
  40ba82:	mov    QWORD PTR [rbp-0x30],0x0
  40ba8a:	call   0x40b610
  40ba8f:	mov    edx,DWORD PTR [rcx]
  40ba91:	mov    rdi,r13
  40ba94:	mov    r10,rdx
  40ba97:	or     r10,r14
  40ba9a:	test   edx,edx
  40ba9c:	cmovs  rdx,r10
  40baa0:	sub    rdx,rax
  40baa3:	lea    rax,[r8+rdx*1]
  40baa7:	mov    r8d,0x4
  40baad:	mov    rdx,r13
  40bab0:	mov    QWORD PTR [rbp-0x30],rax
  40bab4:	call   0x40b680
  40bab9:	jmp    0x40b93b
  40babe:	add    rbx,QWORD PTR [rip+0x11e43]        # 0x41d908
  40bac5:	lea    rcx,[rip+0xc554]        # 0x418020
  40bacc:	mov    rax,QWORD PTR [rbx+0x10]
  40bad0:	mov    r8,QWORD PTR [rbx+0x8]
  40bad4:	mov    edx,DWORD PTR [rax+0x8]
  40bad7:	call   0x40b610
  40badc:	lea    rcx,[rip+0xc59d]        # 0x418080
  40bae3:	call   0x40b610
  40bae8:	nop
  40bae9:	nop
  40baea:	nop
  40baeb:	nop
  40baec:	nop
  40baed:	nop
  40baee:	nop
  40baef:	nop
  40baf0:	sub    rsp,0x28
  40baf4:	mov    eax,DWORD PTR [rcx]
  40baf6:	cmp    eax,0xc0000091
  40bafb:	ja     0x40bb60
  40bafd:	cmp    eax,0xc000008d
  40bb02:	jae    0x40bb7f
  40bb04:	cmp    eax,0xc0000008
  40bb09:	je     0x40bc20
  40bb0f:	ja     0x40bbf0
  40bb15:	cmp    eax,0x80000002
  40bb1a:	je     0x40bc20
  40bb20:	cmp    eax,0xc0000005
  40bb25:	jne    0x40bbfe
  40bb2b:	xor    edx,edx
  40bb2d:	mov    ecx,0xb
  40bb32:	call   0x4113e0
  40bb37:	cmp    rax,0x1
  40bb3b:	je     0x40bc80
  40bb41:	test   rax,rax
  40bb44:	je     0x40bc60
  40bb4a:	mov    ecx,0xb
  40bb4f:	call   rax
  40bb51:	xor    eax,eax
  40bb53:	add    rsp,0x28
  40bb57:	ret    
  40bb58:	nop    DWORD PTR [rax+rax*1+0x0]
  40bb60:	cmp    eax,0xc0000094
  40bb65:	je     0x40bc30
  40bb6b:	ja     0x40bbb0
  40bb6d:	cmp    eax,0xc0000092
  40bb72:	je     0x40bc20
  40bb78:	cmp    eax,0xc0000093
  40bb7d:	jne    0x40bbfe
  40bb7f:	xor    edx,edx
  40bb81:	mov    ecx,0x8
  40bb86:	call   0x4113e0
  40bb8b:	cmp    rax,0x1
  40bb8f:	mov    rdx,rax
  40bb92:	je     0x40bc08
  40bb94:	test   rdx,rdx
  40bb97:	mov    eax,0x1
  40bb9c:	je     0x40bb53
  40bb9e:	mov    ecx,0x8
  40bba3:	call   rdx
  40bba5:	xor    eax,eax
  40bba7:	add    rsp,0x28
  40bbab:	ret    
  40bbac:	nop    DWORD PTR [rax+0x0]
  40bbb0:	cmp    eax,0xc0000095
  40bbb5:	je     0x40bc20
  40bbb7:	cmp    eax,0xc0000096
  40bbbc:	jne    0x40bbfe
  40bbbe:	xor    edx,edx
  40bbc0:	mov    ecx,0x4
  40bbc5:	call   0x4113e0
  40bbca:	cmp    rax,0x1
  40bbce:	je     0x40bc6a
  40bbd4:	test   rax,rax
  40bbd7:	je     0x40bc60
  40bbdd:	mov    ecx,0x4
  40bbe2:	call   rax
  40bbe4:	xor    eax,eax
  40bbe6:	jmp    0x40bb53
  40bbeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40bbf0:	cmp    eax,0xc000001d
  40bbf5:	je     0x40bbbe
  40bbf7:	cmp    eax,0xc000008c
  40bbfc:	je     0x40bc20
  40bbfe:	mov    eax,0x1
  40bc03:	add    rsp,0x28
  40bc07:	ret    
  40bc08:	mov    edx,0x1
  40bc0d:	mov    ecx,0x8
  40bc12:	call   0x4113e0
  40bc17:	call   0x40b5e0
  40bc1c:	nop    DWORD PTR [rax+0x0]
  40bc20:	xor    eax,eax
  40bc22:	add    rsp,0x28
  40bc26:	ret    
  40bc27:	nop    WORD PTR [rax+rax*1+0x0]
  40bc30:	xor    edx,edx
  40bc32:	mov    ecx,0x8
  40bc37:	call   0x4113e0
  40bc3c:	cmp    rax,0x1
  40bc40:	mov    rdx,rax
  40bc43:	jne    0x40bb94
  40bc49:	mov    edx,0x1
  40bc4e:	mov    ecx,0x8
  40bc53:	call   0x4113e0
  40bc58:	xor    eax,eax
  40bc5a:	jmp    0x40bb53
  40bc5f:	nop
  40bc60:	mov    eax,0x4
  40bc65:	add    rsp,0x28
  40bc69:	ret    
  40bc6a:	mov    edx,0x1
  40bc6f:	mov    ecx,0x4
  40bc74:	call   0x4113e0
  40bc79:	xor    eax,eax
  40bc7b:	jmp    0x40bb53
  40bc80:	mov    edx,0x1
  40bc85:	mov    ecx,0xb
  40bc8a:	call   0x4113e0
  40bc8f:	xor    eax,eax
  40bc91:	jmp    0x40bb53
  40bc96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bca0:	push   r12
  40bca2:	push   rbp
  40bca3:	push   rdi
  40bca4:	push   rsi
  40bca5:	push   rbx
  40bca6:	sub    rsp,0x20
  40bcaa:	call   0x40c410
  40bcaf:	mov    rbp,rax
  40bcb2:	mov    eax,DWORD PTR [rip+0x11c90]        # 0x41d948
  40bcb8:	test   eax,eax
  40bcba:	jne    0x40bce1
  40bcbc:	test   rbp,rbp
  40bcbf:	je     0x40bce1
  40bcc1:	lea    rcx,[rip+0xc428]        # 0x4180f0
  40bcc8:	mov    DWORD PTR [rip+0x11c76],0x1        # 0x41d948
  40bcd2:	call   0x40c250
  40bcd7:	test   rax,rax
  40bcda:	je     0x40bcf0
  40bcdc:	mov    eax,0x1
  40bce1:	add    rsp,0x20
  40bce5:	pop    rbx
  40bce6:	pop    rsi
  40bce7:	pop    rdi
  40bce8:	pop    rbp
  40bce9:	pop    r12
  40bceb:	ret    
  40bcec:	nop    DWORD PTR [rax+0x0]
  40bcf0:	lea    rbx,[rip+0x11d89]        # 0x41da80
  40bcf7:	mov    ecx,0x30
  40bcfc:	lea    rdx,[rip+0x11c7d]        # 0x41d980
  40bd03:	lea    r12,[rip+0xfffffffffffffde6]        # 0x40baf0
  40bd0a:	xor    esi,esi
  40bd0c:	mov    rdi,rbx
  40bd0f:	rep stos QWORD PTR es:[rdi],rax
  40bd12:	mov    rdi,rdx
  40bd15:	sub    r12,rbp
  40bd18:	mov    cl,0x20
  40bd1a:	rep stos QWORD PTR es:[rdi],rax
  40bd1d:	mov    rdi,rdx
  40bd20:	jmp    0x40bd50
  40bd22:	mov    BYTE PTR [rdi],0x9
  40bd25:	mov    DWORD PTR [rdi+0x4],r12d
  40bd29:	add    rsi,0x1
  40bd2d:	mov    edx,DWORD PTR [rax+0xc]
  40bd30:	add    rbx,0xc
  40bd34:	mov    DWORD PTR [rbx-0xc],edx
  40bd37:	add    edx,DWORD PTR [rax+0x8]
  40bd3a:	mov    rax,rdi
  40bd3d:	sub    rax,rbp
  40bd40:	add    rdi,0x8
  40bd44:	mov    DWORD PTR [rbx-0x4],eax
  40bd47:	mov    DWORD PTR [rbx-0x8],edx
  40bd4a:	cmp    rsi,0x20
  40bd4e:	je     0x40bd85
  40bd50:	mov    rcx,rsi
  40bd53:	call   0x40c380
  40bd58:	test   rax,rax
  40bd5b:	jne    0x40bd22
  40bd5d:	test   rsi,rsi
  40bd60:	je     0x40bcdc
  40bd66:	mov    edx,esi
  40bd68:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd70:	mov    r8,rbp
  40bd73:	lea    rcx,[rip+0x11d06]        # 0x41da80
  40bd7a:	call   QWORD PTR [rip+0x137a8]        # 0x41f528
  40bd80:	jmp    0x40bcdc
  40bd85:	mov    edx,0x20
  40bd8a:	jmp    0x40bd70
  40bd8c:	nop    DWORD PTR [rax+0x0]
  40bd90:	push   rbx
  40bd91:	sub    rsp,0x20
  40bd95:	mov    rdx,QWORD PTR [rcx]
  40bd98:	mov    eax,DWORD PTR [rdx]
  40bd9a:	mov    r8d,eax
  40bd9d:	and    r8d,0x20ffffff
  40bda4:	cmp    r8d,0x20474343
  40bdab:	je     0x40beb0
  40bdb1:	cmp    eax,0xc0000091
  40bdb6:	mov    rbx,rcx
  40bdb9:	ja     0x40be40
  40bdbf:	cmp    eax,0xc000008d
  40bdc4:	jae    0x40be57
  40bdca:	cmp    eax,0xc0000008
  40bdcf:	je     0x40be03
  40bdd1:	ja     0x40be10
  40bdd3:	cmp    eax,0x80000002
  40bdd8:	je     0x40be03
  40bdda:	cmp    eax,0xc0000005
  40bddf:	jne    0x40be22
  40bde1:	xor    edx,edx
  40bde3:	mov    ecx,0xb
  40bde8:	call   0x4113e0
  40bded:	cmp    rax,0x1
  40bdf1:	je     0x40bf20
  40bdf7:	test   rax,rax
  40bdfa:	je     0x40be22
  40bdfc:	mov    ecx,0xb
  40be01:	call   rax
  40be03:	mov    eax,0xffffffff
  40be08:	add    rsp,0x20
  40be0c:	pop    rbx
  40be0d:	ret    
  40be0e:	xchg   ax,ax
  40be10:	cmp    eax,0xc000001d
  40be15:	je     0x40bed6
  40be1b:	cmp    eax,0xc000008c
  40be20:	je     0x40be03
  40be22:	mov    rax,QWORD PTR [rip+0x11b17]        # 0x41d940
  40be29:	test   rax,rax
  40be2c:	je     0x40be08
  40be2e:	mov    rcx,rbx
  40be31:	add    rsp,0x20
  40be35:	pop    rbx
  40be36:	rex.W jmp rax
  40be39:	nop    DWORD PTR [rax+0x0]
  40be40:	cmp    eax,0xc0000094
  40be45:	je     0x40be82
  40be47:	ja     0x40bec0
  40be49:	cmp    eax,0xc0000092
  40be4e:	je     0x40be03
  40be50:	cmp    eax,0xc0000093
  40be55:	jne    0x40be22
  40be57:	xor    edx,edx
  40be59:	mov    ecx,0x8
  40be5e:	call   0x4113e0
  40be63:	cmp    rax,0x1
  40be67:	jne    0x40be94
  40be69:	mov    edx,0x1
  40be6e:	mov    ecx,0x8
  40be73:	call   0x4113e0
  40be78:	call   0x40b5e0
  40be7d:	jmp    0x40be03
  40be82:	xor    edx,edx
  40be84:	mov    ecx,0x8
  40be89:	call   0x4113e0
  40be8e:	cmp    rax,0x1
  40be92:	je     0x40bf02
  40be94:	test   rax,rax
  40be97:	je     0x40be22
  40be99:	mov    ecx,0x8
  40be9e:	call   rax
  40bea0:	mov    eax,0xffffffff
  40bea5:	jmp    0x40be08
  40beaa:	nop    WORD PTR [rax+rax*1+0x0]
  40beb0:	test   BYTE PTR [rdx+0x4],0x1
  40beb4:	jne    0x40bdb1
  40beba:	jmp    0x40be03
  40bebf:	nop
  40bec0:	cmp    eax,0xc0000095
  40bec5:	je     0x40be03
  40becb:	cmp    eax,0xc0000096
  40bed0:	jne    0x40be22
  40bed6:	xor    edx,edx
  40bed8:	mov    ecx,0x4
  40bedd:	call   0x4113e0
  40bee2:	cmp    rax,0x1
  40bee6:	je     0x40bf34
  40bee8:	test   rax,rax
  40beeb:	je     0x40be22
  40bef1:	mov    ecx,0x4
  40bef6:	call   rax
  40bef8:	mov    eax,0xffffffff
  40befd:	jmp    0x40be08
  40bf02:	mov    edx,0x1
  40bf07:	mov    ecx,0x8
  40bf0c:	call   0x4113e0
  40bf11:	jmp    0x40be03
  40bf16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bf20:	mov    edx,0x1
  40bf25:	mov    ecx,0xb
  40bf2a:	call   0x4113e0
  40bf2f:	jmp    0x40be03
  40bf34:	mov    edx,0x1
  40bf39:	mov    ecx,0x4
  40bf3e:	call   0x4113e0
  40bf43:	jmp    0x40be03
  40bf48:	nop
  40bf49:	nop
  40bf4a:	nop
  40bf4b:	nop
  40bf4c:	nop
  40bf4d:	nop
  40bf4e:	nop
  40bf4f:	nop
  40bf50:	push   rbp
  40bf51:	push   rdi
  40bf52:	push   rsi
  40bf53:	push   rbx
  40bf54:	sub    rsp,0x28
  40bf58:	lea    rcx,[rip+0x11cc1]        # 0x41dc20
  40bf5f:	call   QWORD PTR [rip+0x1351b]        # 0x41f480
  40bf65:	mov    rbx,QWORD PTR [rip+0x11c94]        # 0x41dc00
  40bf6c:	test   rbx,rbx
  40bf6f:	je     0x40bfa4
  40bf71:	mov    rbp,QWORD PTR [rip+0x135f8]        # 0x41f570
  40bf78:	mov    rdi,QWORD PTR [rip+0x13539]        # 0x41f4b8
  40bf7f:	nop
  40bf80:	mov    ecx,DWORD PTR [rbx]
  40bf82:	call   rbp
  40bf84:	mov    rsi,rax
  40bf87:	call   rdi
  40bf89:	test   eax,eax
  40bf8b:	jne    0x40bf9b
  40bf8d:	test   rsi,rsi
  40bf90:	je     0x40bf9b
  40bf92:	mov    rax,QWORD PTR [rbx+0x8]
  40bf96:	mov    rcx,rsi
  40bf99:	call   rax
  40bf9b:	mov    rbx,QWORD PTR [rbx+0x10]
  40bf9f:	test   rbx,rbx
  40bfa2:	jne    0x40bf80
  40bfa4:	mov    rax,QWORD PTR [rip+0x13565]        # 0x41f510
  40bfab:	lea    rcx,[rip+0x11c6e]        # 0x41dc20
  40bfb2:	add    rsp,0x28
  40bfb6:	pop    rbx
  40bfb7:	pop    rsi
  40bfb8:	pop    rdi
  40bfb9:	pop    rbp
  40bfba:	rex.W jmp rax
  40bfbd:	nop    DWORD PTR [rax]
  40bfc0:	push   rdi
  40bfc1:	push   rsi
  40bfc2:	push   rbx
  40bfc3:	sub    rsp,0x20
  40bfc7:	mov    eax,DWORD PTR [rip+0x11c3b]        # 0x41dc08
  40bfcd:	test   eax,eax
  40bfcf:	jne    0x40bfe0
  40bfd1:	add    rsp,0x20
  40bfd5:	pop    rbx
  40bfd6:	pop    rsi
  40bfd7:	pop    rdi
  40bfd8:	ret    
  40bfd9:	nop    DWORD PTR [rax+0x0]
  40bfe0:	mov    rsi,rdx
  40bfe3:	mov    edi,ecx
  40bfe5:	mov    edx,0x18
  40bfea:	mov    ecx,0x1
  40bfef:	call   0x4114a8
  40bff4:	test   rax,rax
  40bff7:	mov    rbx,rax
  40bffa:	je     0x40c038
  40bffc:	mov    DWORD PTR [rax],edi
  40bffe:	mov    QWORD PTR [rax+0x8],rsi
  40c002:	lea    rcx,[rip+0x11c17]        # 0x41dc20
  40c009:	call   QWORD PTR [rip+0x13471]        # 0x41f480
  40c00f:	mov    rax,QWORD PTR [rip+0x11bea]        # 0x41dc00
  40c016:	lea    rcx,[rip+0x11c03]        # 0x41dc20
  40c01d:	mov    QWORD PTR [rip+0x11bdc],rbx        # 0x41dc00
  40c024:	mov    QWORD PTR [rbx+0x10],rax
  40c028:	call   QWORD PTR [rip+0x134e2]        # 0x41f510
  40c02e:	xor    eax,eax
  40c030:	add    rsp,0x20
  40c034:	pop    rbx
  40c035:	pop    rsi
  40c036:	pop    rdi
  40c037:	ret    
  40c038:	mov    eax,0xffffffff
  40c03d:	jmp    0x40bfd1
  40c03f:	nop
  40c040:	push   rbx
  40c041:	sub    rsp,0x20
  40c045:	mov    eax,DWORD PTR [rip+0x11bbd]        # 0x41dc08
  40c04b:	test   eax,eax
  40c04d:	jne    0x40c060
  40c04f:	xor    eax,eax
  40c051:	add    rsp,0x20
  40c055:	pop    rbx
  40c056:	ret    
  40c057:	nop    WORD PTR [rax+rax*1+0x0]
  40c060:	mov    ebx,ecx
  40c062:	lea    rcx,[rip+0x11bb7]        # 0x41dc20
  40c069:	call   QWORD PTR [rip+0x13411]        # 0x41f480
  40c06f:	mov    rdx,QWORD PTR [rip+0x11b8a]        # 0x41dc00
  40c076:	test   rdx,rdx
  40c079:	je     0x40c097
  40c07b:	mov    eax,DWORD PTR [rdx]
  40c07d:	cmp    eax,ebx
  40c07f:	jne    0x40c08e
  40c081:	jmp    0x40c0cf
  40c083:	mov    r8d,DWORD PTR [rax]
  40c086:	cmp    r8d,ebx
  40c089:	je     0x40c0b0
  40c08b:	mov    rdx,rax
  40c08e:	mov    rax,QWORD PTR [rdx+0x10]
  40c092:	test   rax,rax
  40c095:	jne    0x40c083
  40c097:	lea    rcx,[rip+0x11b82]        # 0x41dc20
  40c09e:	call   QWORD PTR [rip+0x1346c]        # 0x41f510
  40c0a4:	xor    eax,eax
  40c0a6:	add    rsp,0x20
  40c0aa:	pop    rbx
  40c0ab:	ret    
  40c0ac:	nop    DWORD PTR [rax+0x0]
  40c0b0:	mov    rcx,rax
  40c0b3:	mov    rax,QWORD PTR [rax+0x10]
  40c0b7:	mov    QWORD PTR [rdx+0x10],rax
  40c0bb:	call   0x411468
  40c0c0:	lea    rcx,[rip+0x11b59]        # 0x41dc20
  40c0c7:	call   QWORD PTR [rip+0x13443]        # 0x41f510
  40c0cd:	jmp    0x40c0a4
  40c0cf:	mov    rax,QWORD PTR [rdx+0x10]
  40c0d3:	mov    rcx,rdx
  40c0d6:	mov    QWORD PTR [rip+0x11b23],rax        # 0x41dc00
  40c0dd:	jmp    0x40c0bb
  40c0df:	nop
  40c0e0:	push   rbx
  40c0e1:	sub    rsp,0x20
  40c0e5:	cmp    edx,0x1
  40c0e8:	je     0x40c180
  40c0ee:	jb     0x40c120
  40c0f0:	cmp    edx,0x2
  40c0f3:	je     0x40c110
  40c0f5:	cmp    edx,0x3
  40c0f8:	jne    0x40c115
  40c0fa:	mov    eax,DWORD PTR [rip+0x11b08]        # 0x41dc08
  40c100:	test   eax,eax
  40c102:	je     0x40c115
  40c104:	call   0x40bf50
  40c109:	jmp    0x40c115
  40c10b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c110:	call   0x40b5e0
  40c115:	mov    eax,0x1
  40c11a:	add    rsp,0x20
  40c11e:	pop    rbx
  40c11f:	ret    
  40c120:	mov    eax,DWORD PTR [rip+0x11ae2]        # 0x41dc08
  40c126:	test   eax,eax
  40c128:	jne    0x40c1b0
  40c12e:	mov    eax,DWORD PTR [rip+0x11ad4]        # 0x41dc08
  40c134:	cmp    eax,0x1
  40c137:	jne    0x40c115
  40c139:	mov    rcx,QWORD PTR [rip+0x11ac0]        # 0x41dc00
  40c140:	test   rcx,rcx
  40c143:	je     0x40c156
  40c145:	mov    rbx,QWORD PTR [rcx+0x10]
  40c149:	call   0x411468
  40c14e:	test   rbx,rbx
  40c151:	mov    rcx,rbx
  40c154:	jne    0x40c145
  40c156:	lea    rcx,[rip+0x11ac3]        # 0x41dc20
  40c15d:	mov    QWORD PTR [rip+0x11a98],0x0        # 0x41dc00
  40c168:	mov    DWORD PTR [rip+0x11a96],0x0        # 0x41dc08
  40c172:	call   QWORD PTR [rip+0x13300]        # 0x41f478
  40c178:	jmp    0x40c115
  40c17a:	nop    WORD PTR [rax+rax*1+0x0]
  40c180:	mov    eax,DWORD PTR [rip+0x11a82]        # 0x41dc08
  40c186:	test   eax,eax
  40c188:	je     0x40c1a0
  40c18a:	mov    eax,0x1
  40c18f:	mov    DWORD PTR [rip+0x11a6f],0x1        # 0x41dc08
  40c199:	add    rsp,0x20
  40c19d:	pop    rbx
  40c19e:	ret    
  40c19f:	nop
  40c1a0:	lea    rcx,[rip+0x11a79]        # 0x41dc20
  40c1a7:	call   QWORD PTR [rip+0x13353]        # 0x41f500
  40c1ad:	jmp    0x40c18a
  40c1af:	nop
  40c1b0:	call   0x40bf50
  40c1b5:	jmp    0x40c12e
  40c1ba:	nop
  40c1bb:	nop
  40c1bc:	nop
  40c1bd:	nop
  40c1be:	nop
  40c1bf:	nop
  40c1c0:	movsxd rax,DWORD PTR [rcx+0x3c]
  40c1c4:	add    rcx,rax
  40c1c7:	xor    eax,eax
  40c1c9:	cmp    DWORD PTR [rcx],0x4550
  40c1cf:	je     0x40c1d3
  40c1d1:	repz ret 
  40c1d3:	xor    eax,eax
  40c1d5:	cmp    WORD PTR [rcx+0x18],0x20b
  40c1db:	sete   al
  40c1de:	ret    
  40c1df:	nop
  40c1e0:	cmp    WORD PTR [rcx],0x5a4d
  40c1e5:	je     0x40c1f0
  40c1e7:	xor    eax,eax
  40c1e9:	ret    
  40c1ea:	nop    WORD PTR [rax+rax*1+0x0]
  40c1f0:	jmp    0x40c1c0
  40c1f2:	nop    DWORD PTR [rax+0x0]
  40c1f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c200:	movsxd rax,DWORD PTR [rcx+0x3c]
  40c204:	add    rcx,rax
  40c207:	movzx  eax,WORD PTR [rcx+0x14]
  40c20b:	lea    rax,[rcx+rax*1+0x18]
  40c210:	movzx  ecx,WORD PTR [rcx+0x6]
  40c214:	test   ecx,ecx
  40c216:	je     0x40c241
  40c218:	sub    ecx,0x1
  40c21b:	lea    rcx,[rcx+rcx*4]
  40c21f:	lea    r9,[rax+rcx*8+0x28]
  40c224:	mov    r8d,DWORD PTR [rax+0xc]
  40c228:	cmp    r8,rdx
  40c22b:	mov    rcx,r8
  40c22e:	ja     0x40c238
  40c230:	add    ecx,DWORD PTR [rax+0x8]
  40c233:	cmp    rdx,rcx
  40c236:	jb     0x40c243
  40c238:	add    rax,0x28
  40c23c:	cmp    rax,r9
  40c23f:	jne    0x40c224
  40c241:	xor    eax,eax
  40c243:	repz ret 
  40c245:	nop
  40c246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c250:	push   rdi
  40c251:	push   rsi
  40c252:	push   rbx
  40c253:	sub    rsp,0x20
  40c257:	mov    rsi,rcx
  40c25a:	call   0x4113b8
  40c25f:	cmp    rax,0x8
  40c263:	ja     0x40c280
  40c265:	mov    rbx,QWORD PTR [rip+0xc3f4]        # 0x418660
  40c26c:	xor    edi,edi
  40c26e:	cmp    WORD PTR [rbx],0x5a4d
  40c273:	je     0x40c290
  40c275:	mov    rax,rdi
  40c278:	add    rsp,0x20
  40c27c:	pop    rbx
  40c27d:	pop    rsi
  40c27e:	pop    rdi
  40c27f:	ret    
  40c280:	xor    edi,edi
  40c282:	mov    rax,rdi
  40c285:	add    rsp,0x20
  40c289:	pop    rbx
  40c28a:	pop    rsi
  40c28b:	pop    rdi
  40c28c:	ret    
  40c28d:	nop    DWORD PTR [rax]
  40c290:	mov    rcx,rbx
  40c293:	call   0x40c1c0
  40c298:	test   eax,eax
  40c29a:	je     0x40c275
  40c29c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  40c2a0:	add    rdx,rbx
  40c2a3:	movzx  eax,WORD PTR [rdx+0x14]
  40c2a7:	lea    rbx,[rdx+rax*1+0x18]
  40c2ac:	movzx  eax,WORD PTR [rdx+0x6]
  40c2b0:	test   eax,eax
  40c2b2:	je     0x40c275
  40c2b4:	sub    eax,0x1
  40c2b7:	lea    rax,[rax+rax*4]
  40c2bb:	lea    rdi,[rbx+rax*8+0x28]
  40c2c0:	jmp    0x40c2cb
  40c2c2:	add    rbx,0x28
  40c2c6:	cmp    rbx,rdi
  40c2c9:	je     0x40c280
  40c2cb:	mov    r8d,0x8
  40c2d1:	mov    rdx,rsi
  40c2d4:	mov    rcx,rbx
  40c2d7:	call   0x4113b0
  40c2dc:	test   eax,eax
  40c2de:	jne    0x40c2c2
  40c2e0:	mov    rdi,rbx
  40c2e3:	mov    rax,rdi
  40c2e6:	add    rsp,0x20
  40c2ea:	pop    rbx
  40c2eb:	pop    rsi
  40c2ec:	pop    rdi
  40c2ed:	ret    
  40c2ee:	xchg   ax,ax
  40c2f0:	push   rsi
  40c2f1:	push   rbx
  40c2f2:	sub    rsp,0x28
  40c2f6:	mov    rbx,QWORD PTR [rip+0xc363]        # 0x418660
  40c2fd:	cmp    WORD PTR [rbx],0x5a4d
  40c302:	je     0x40c310
  40c304:	xor    eax,eax
  40c306:	add    rsp,0x28
  40c30a:	pop    rbx
  40c30b:	pop    rsi
  40c30c:	ret    
  40c30d:	nop    DWORD PTR [rax]
  40c310:	mov    rsi,rcx
  40c313:	mov    rcx,rbx
  40c316:	call   0x40c1c0
  40c31b:	test   eax,eax
  40c31d:	je     0x40c304
  40c31f:	sub    rsi,rbx
  40c322:	mov    rcx,rbx
  40c325:	mov    rdx,rsi
  40c328:	add    rsp,0x28
  40c32c:	pop    rbx
  40c32d:	pop    rsi
  40c32e:	jmp    0x40c200
  40c333:	nop    DWORD PTR [rax]
  40c336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c340:	push   rbx
  40c341:	sub    rsp,0x20
  40c345:	mov    rbx,QWORD PTR [rip+0xc314]        # 0x418660
  40c34c:	xor    eax,eax
  40c34e:	cmp    WORD PTR [rbx],0x5a4d
  40c353:	je     0x40c360
  40c355:	add    rsp,0x20
  40c359:	pop    rbx
  40c35a:	ret    
  40c35b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c360:	mov    rcx,rbx
  40c363:	call   0x40c1c0
  40c368:	test   eax,eax
  40c36a:	je     0x40c355
  40c36c:	movsxd rax,DWORD PTR [rbx+0x3c]
  40c370:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  40c375:	add    rsp,0x20
  40c379:	pop    rbx
  40c37a:	ret    
  40c37b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c380:	push   rdi
  40c381:	push   rsi
  40c382:	push   rbx
  40c383:	sub    rsp,0x20
  40c387:	mov    rsi,QWORD PTR [rip+0xc2d2]        # 0x418660
  40c38e:	xor    edi,edi
  40c390:	mov    rbx,rcx
  40c393:	cmp    WORD PTR [rsi],0x5a4d
  40c398:	je     0x40c3a5
  40c39a:	mov    rax,rdi
  40c39d:	add    rsp,0x20
  40c3a1:	pop    rbx
  40c3a2:	pop    rsi
  40c3a3:	pop    rdi
  40c3a4:	ret    
  40c3a5:	mov    rcx,rsi
  40c3a8:	call   0x40c1c0
  40c3ad:	test   eax,eax
  40c3af:	je     0x40c39a
  40c3b1:	movsxd rax,DWORD PTR [rsi+0x3c]
  40c3b5:	add    rsi,rax
  40c3b8:	movzx  eax,WORD PTR [rsi+0x14]
  40c3bc:	lea    rdx,[rsi+rax*1+0x18]
  40c3c1:	movzx  eax,WORD PTR [rsi+0x6]
  40c3c5:	test   eax,eax
  40c3c7:	je     0x40c39a
  40c3c9:	sub    eax,0x1
  40c3cc:	lea    rax,[rax+rax*4]
  40c3d0:	lea    rax,[rdx+rax*8+0x28]
  40c3d5:	test   BYTE PTR [rdx+0x27],0x20
  40c3d9:	je     0x40c3e4
  40c3db:	test   rbx,rbx
  40c3de:	je     0x40c400
  40c3e0:	sub    rbx,0x1
  40c3e4:	add    rdx,0x28
  40c3e8:	cmp    rdx,rax
  40c3eb:	jne    0x40c3d5
  40c3ed:	xor    edi,edi
  40c3ef:	mov    rax,rdi
  40c3f2:	add    rsp,0x20
  40c3f6:	pop    rbx
  40c3f7:	pop    rsi
  40c3f8:	pop    rdi
  40c3f9:	ret    
  40c3fa:	nop    WORD PTR [rax+rax*1+0x0]
  40c400:	mov    rdi,rdx
  40c403:	mov    rax,rdi
  40c406:	add    rsp,0x20
  40c40a:	pop    rbx
  40c40b:	pop    rsi
  40c40c:	pop    rdi
  40c40d:	ret    
  40c40e:	xchg   ax,ax
  40c410:	push   rsi
  40c411:	push   rbx
  40c412:	sub    rsp,0x28
  40c416:	mov    rsi,QWORD PTR [rip+0xc243]        # 0x418660
  40c41d:	xor    ebx,ebx
  40c41f:	cmp    WORD PTR [rsi],0x5a4d
  40c424:	je     0x40c430
  40c426:	mov    rax,rbx
  40c429:	add    rsp,0x28
  40c42d:	pop    rbx
  40c42e:	pop    rsi
  40c42f:	ret    
  40c430:	mov    rcx,rsi
  40c433:	call   0x40c1c0
  40c438:	test   eax,eax
  40c43a:	cmovne rbx,rsi
  40c43e:	mov    rax,rbx
  40c441:	add    rsp,0x28
  40c445:	pop    rbx
  40c446:	pop    rsi
  40c447:	ret    
  40c448:	nop    DWORD PTR [rax+rax*1+0x0]
  40c450:	push   rsi
  40c451:	push   rbx
  40c452:	sub    rsp,0x28
  40c456:	mov    rbx,QWORD PTR [rip+0xc203]        # 0x418660
  40c45d:	xor    eax,eax
  40c45f:	cmp    WORD PTR [rbx],0x5a4d
  40c464:	je     0x40c470
  40c466:	add    rsp,0x28
  40c46a:	pop    rbx
  40c46b:	pop    rsi
  40c46c:	ret    
  40c46d:	nop    DWORD PTR [rax]
  40c470:	mov    rsi,rcx
  40c473:	mov    rcx,rbx
  40c476:	call   0x40c1c0
  40c47b:	test   eax,eax
  40c47d:	je     0x40c466
  40c47f:	sub    rsi,rbx
  40c482:	mov    rcx,rbx
  40c485:	mov    rdx,rsi
  40c488:	call   0x40c200
  40c48d:	test   rax,rax
  40c490:	je     0x40c4a1
  40c492:	mov    eax,DWORD PTR [rax+0x24]
  40c495:	not    eax
  40c497:	shr    eax,0x1f
  40c49a:	add    rsp,0x28
  40c49e:	pop    rbx
  40c49f:	pop    rsi
  40c4a0:	ret    
  40c4a1:	xor    eax,eax
  40c4a3:	jmp    0x40c466
  40c4a5:	nop
  40c4a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c4b0:	push   rbp
  40c4b1:	push   rdi
  40c4b2:	push   rsi
  40c4b3:	push   rbx
  40c4b4:	sub    rsp,0x28
  40c4b8:	mov    rdi,QWORD PTR [rip+0xc1a1]        # 0x418660
  40c4bf:	xor    ebp,ebp
  40c4c1:	mov    esi,ecx
  40c4c3:	cmp    WORD PTR [rdi],0x5a4d
  40c4c8:	je     0x40c4e0
  40c4ca:	mov    rax,rbp
  40c4cd:	add    rsp,0x28
  40c4d1:	pop    rbx
  40c4d2:	pop    rsi
  40c4d3:	pop    rdi
  40c4d4:	pop    rbp
  40c4d5:	ret    
  40c4d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c4e0:	mov    rcx,rdi
  40c4e3:	call   0x40c1c0
  40c4e8:	test   eax,eax
  40c4ea:	je     0x40c4ca
  40c4ec:	movsxd rax,DWORD PTR [rdi+0x3c]
  40c4f0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  40c4f7:	test   edx,edx
  40c4f9:	je     0x40c4ca
  40c4fb:	mov    ebx,edx
  40c4fd:	mov    rcx,rdi
  40c500:	mov    rdx,rbx
  40c503:	call   0x40c200
  40c508:	test   rax,rax
  40c50b:	je     0x40c4ca
  40c50d:	add    rbx,rdi
  40c510:	mov    rdx,rbx
  40c513:	jne    0x40c527
  40c515:	jmp    0x40c4ca
  40c517:	nop    WORD PTR [rax+rax*1+0x0]
  40c520:	sub    esi,0x1
  40c523:	add    rdx,0x14
  40c527:	mov    ecx,DWORD PTR [rdx+0x4]
  40c52a:	test   ecx,ecx
  40c52c:	jne    0x40c535
  40c52e:	mov    eax,DWORD PTR [rdx+0xc]
  40c531:	test   eax,eax
  40c533:	je     0x40c550
  40c535:	test   esi,esi
  40c537:	jg     0x40c520
  40c539:	mov    ebp,DWORD PTR [rdx+0xc]
  40c53c:	add    rbp,rdi
  40c53f:	mov    rax,rbp
  40c542:	add    rsp,0x28
  40c546:	pop    rbx
  40c547:	pop    rsi
  40c548:	pop    rdi
  40c549:	pop    rbp
  40c54a:	ret    
  40c54b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c550:	xor    ebp,ebp
  40c552:	mov    rax,rbp
  40c555:	add    rsp,0x28
  40c559:	pop    rbx
  40c55a:	pop    rsi
  40c55b:	pop    rdi
  40c55c:	pop    rbp
  40c55d:	ret    
  40c55e:	nop
  40c55f:	nop
  40c560:	push   rcx
  40c561:	push   rax
  40c562:	cmp    rax,0x1000
  40c568:	lea    rcx,[rsp+0x18]
  40c56d:	jb     0x40c588
  40c56f:	sub    rcx,0x1000
  40c576:	or     QWORD PTR [rcx],0x0
  40c57a:	sub    rax,0x1000
  40c580:	cmp    rax,0x1000
  40c586:	ja     0x40c56f
  40c588:	sub    rcx,rax
  40c58b:	or     QWORD PTR [rcx],0x0
  40c58f:	pop    rax
  40c590:	pop    rcx
  40c591:	ret    
  40c592:	nop
  40c593:	nop
  40c594:	nop
  40c595:	nop
  40c596:	nop
  40c597:	nop
  40c598:	nop
  40c599:	nop
  40c59a:	nop
  40c59b:	nop
  40c59c:	nop
  40c59d:	nop
  40c59e:	nop
  40c59f:	nop
  40c5a0:	push   rbp
  40c5a1:	push   rdi
  40c5a2:	push   rsi
  40c5a3:	push   rbx
  40c5a4:	sub    rsp,0x48
  40c5a8:	test   rdx,rdx
  40c5ab:	je     0x40c6d3
  40c5b1:	test   r8,r8
  40c5b4:	je     0x40c6e0
  40c5ba:	mov    eax,DWORD PTR [r9]
  40c5bd:	mov    DWORD PTR [r9],0x0
  40c5c4:	mov    DWORD PTR [rsp+0x30],eax
  40c5c8:	movzx  eax,BYTE PTR [rdx]
  40c5cb:	test   al,al
  40c5cd:	je     0x40c670
  40c5d3:	cmp    DWORD PTR [rsp+0x98],0x1
  40c5db:	mov    rsi,r9
  40c5de:	mov    rdi,r8
  40c5e1:	mov    rbx,rdx
  40c5e4:	mov    rbp,rcx
  40c5e7:	jbe    0x40c650
  40c5e9:	cmp    BYTE PTR [rsp+0x30],0x0
  40c5ee:	jne    0x40c680
  40c5f4:	movzx  edx,al
  40c5f7:	mov    ecx,DWORD PTR [rsp+0x90]
  40c5fe:	call   QWORD PTR [rip+0x12f04]        # 0x41f508
  40c604:	test   eax,eax
  40c606:	je     0x40c650
  40c608:	cmp    rdi,0x1
  40c60c:	jbe    0x40c6fc
  40c612:	mov    DWORD PTR [rsp+0x28],0x1
  40c61a:	mov    QWORD PTR [rsp+0x20],rbp
  40c61f:	mov    r9d,0x2
  40c625:	mov    r8,rbx
  40c628:	mov    edx,0x8
  40c62d:	mov    ecx,DWORD PTR [rsp+0x90]
  40c634:	call   QWORD PTR [rip+0x12ede]        # 0x41f518
  40c63a:	test   eax,eax
  40c63c:	je     0x40c6e7
  40c642:	mov    eax,0x2
  40c647:	add    rsp,0x48
  40c64b:	pop    rbx
  40c64c:	pop    rsi
  40c64d:	pop    rdi
  40c64e:	pop    rbp
  40c64f:	ret    
  40c650:	mov    eax,DWORD PTR [rsp+0x90]
  40c657:	test   eax,eax
  40c659:	jne    0x40c6a0
  40c65b:	movzx  eax,BYTE PTR [rbx]
  40c65e:	mov    WORD PTR [rbp+0x0],ax
  40c662:	mov    eax,0x1
  40c667:	add    rsp,0x48
  40c66b:	pop    rbx
  40c66c:	pop    rsi
  40c66d:	pop    rdi
  40c66e:	pop    rbp
  40c66f:	ret    
  40c670:	xor    edx,edx
  40c672:	xor    eax,eax
  40c674:	mov    WORD PTR [rcx],dx
  40c677:	add    rsp,0x48
  40c67b:	pop    rbx
  40c67c:	pop    rsi
  40c67d:	pop    rdi
  40c67e:	pop    rbp
  40c67f:	ret    
  40c680:	mov    BYTE PTR [rsp+0x31],al
  40c684:	mov    DWORD PTR [rsp+0x28],0x1
  40c68c:	mov    r9d,0x2
  40c692:	mov    QWORD PTR [rsp+0x20],rcx
  40c697:	lea    r8,[rsp+0x30]
  40c69c:	jmp    0x40c628
  40c69e:	xchg   ax,ax
  40c6a0:	mov    DWORD PTR [rsp+0x28],0x1
  40c6a8:	mov    QWORD PTR [rsp+0x20],rbp
  40c6ad:	mov    r9d,0x1
  40c6b3:	mov    r8,rbx
  40c6b6:	mov    edx,0x8
  40c6bb:	mov    ecx,DWORD PTR [rsp+0x90]
  40c6c2:	call   QWORD PTR [rip+0x12e50]        # 0x41f518
  40c6c8:	test   eax,eax
  40c6ca:	je     0x40c6e7
  40c6cc:	mov    eax,0x1
  40c6d1:	jmp    0x40c677
  40c6d3:	xor    eax,eax
  40c6d5:	add    rsp,0x48
  40c6d9:	pop    rbx
  40c6da:	pop    rsi
  40c6db:	pop    rdi
  40c6dc:	pop    rbp
  40c6dd:	ret    
  40c6de:	xchg   ax,ax
  40c6e0:	mov    eax,0xfffffffe
  40c6e5:	jmp    0x40c677
  40c6e7:	call   0x4114f0
  40c6ec:	mov    DWORD PTR [rax],0x2a
  40c6f2:	mov    eax,0xffffffff
  40c6f7:	jmp    0x40c677
  40c6fc:	movzx  eax,BYTE PTR [rbx]
  40c6ff:	mov    BYTE PTR [rsi],al
  40c701:	mov    eax,0xfffffffe
  40c706:	jmp    0x40c677
  40c70b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c710:	push   rbp
  40c711:	push   rdi
  40c712:	push   rsi
  40c713:	push   rbx
  40c714:	sub    rsp,0x58
  40c718:	xor    eax,eax
  40c71a:	mov    WORD PTR [rsp+0x4e],ax
  40c71f:	lea    rax,[rsp+0x4e]
  40c724:	test   rcx,rcx
  40c727:	mov    rbx,rcx
  40c72a:	mov    rsi,r9
  40c72d:	mov    rdi,rdx
  40c730:	cmove  rbx,rax
  40c734:	mov    rax,QWORD PTR [rip+0xbf45]        # 0x418680
  40c73b:	mov    QWORD PTR [rsp+0x38],r8
  40c740:	mov    rax,QWORD PTR [rax]
  40c743:	mov    ebp,DWORD PTR [rax]
  40c745:	call   0x411538
  40c74a:	mov    r8,QWORD PTR [rsp+0x38]
  40c74f:	lea    r9,[rip+0x11522]        # 0x41dc78
  40c756:	test   rsi,rsi
  40c759:	mov    DWORD PTR [rsp+0x28],ebp
  40c75d:	mov    DWORD PTR [rsp+0x20],eax
  40c761:	mov    rdx,rdi
  40c764:	cmovne r9,rsi
  40c768:	mov    rcx,rbx
  40c76b:	call   0x40c5a0
  40c770:	cdqe   
  40c772:	add    rsp,0x58
  40c776:	pop    rbx
  40c777:	pop    rsi
  40c778:	pop    rdi
  40c779:	pop    rbp
  40c77a:	ret    
  40c77b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c780:	push   r15
  40c782:	push   r14
  40c784:	push   r13
  40c786:	push   r12
  40c788:	push   rbp
  40c789:	push   rdi
  40c78a:	push   rsi
  40c78b:	push   rbx
  40c78c:	sub    rsp,0x48
  40c790:	lea    rax,[rip+0x114dd]        # 0x41dc74
  40c797:	test   r9,r9
  40c79a:	mov    rdi,r9
  40c79d:	mov    r13,rdx
  40c7a0:	cmove  rdi,rax
  40c7a4:	mov    r14,rcx
  40c7a7:	mov    rsi,r8
  40c7aa:	call   0x411538
  40c7af:	mov    r12d,eax
  40c7b2:	mov    rax,QWORD PTR [rip+0xbec7]        # 0x418680
  40c7b9:	test   r13,r13
  40c7bc:	mov    rax,QWORD PTR [rax]
  40c7bf:	mov    ebp,DWORD PTR [rax]
  40c7c1:	je     0x40c845
  40c7c7:	mov    rdx,QWORD PTR [r13+0x0]
  40c7cb:	test   rdx,rdx
  40c7ce:	je     0x40c845
  40c7d0:	test   r14,r14
  40c7d3:	je     0x40c850
  40c7d5:	xor    ebx,ebx
  40c7d7:	test   rsi,rsi
  40c7da:	jne    0x40c7fa
  40c7dc:	jmp    0x40c845
  40c7de:	xchg   ax,ax
  40c7e0:	movsxd r10,eax
  40c7e3:	add    r14,0x2
  40c7e7:	mov    rdx,r10
  40c7ea:	add    rdx,QWORD PTR [r13+0x0]
  40c7ee:	add    rbx,r10
  40c7f1:	cmp    rsi,rbx
  40c7f4:	mov    QWORD PTR [r13+0x0],rdx
  40c7f8:	jbe    0x40c840
  40c7fa:	mov    r8,rsi
  40c7fd:	mov    DWORD PTR [rsp+0x28],ebp
  40c801:	mov    DWORD PTR [rsp+0x20],r12d
  40c806:	sub    r8,rbx
  40c809:	mov    r9,rdi
  40c80c:	mov    rcx,r14
  40c80f:	call   0x40c5a0
  40c814:	cmp    eax,0x0
  40c817:	jg     0x40c7e0
  40c819:	jne    0x40c840
  40c81b:	cmp    rbx,rsi
  40c81e:	jae    0x40c840
  40c820:	mov    QWORD PTR [r13+0x0],0x0
  40c828:	mov    rax,rbx
  40c82b:	add    rsp,0x48
  40c82f:	pop    rbx
  40c830:	pop    rsi
  40c831:	pop    rdi
  40c832:	pop    rbp
  40c833:	pop    r12
  40c835:	pop    r13
  40c837:	pop    r14
  40c839:	pop    r15
  40c83b:	ret    
  40c83c:	xor    ebx,ebx
  40c83e:	xchg   ax,ax
  40c840:	mov    rax,rbx
  40c843:	jmp    0x40c82b
  40c845:	xor    eax,eax
  40c847:	jmp    0x40c82b
  40c849:	nop    DWORD PTR [rax+0x0]
  40c850:	xor    eax,eax
  40c852:	test   rsi,rsi
  40c855:	mov    WORD PTR [rsp+0x3e],ax
  40c85a:	je     0x40c83c
  40c85c:	mov    r15d,ebp
  40c85f:	xor    ebx,ebx
  40c861:	lea    r14,[rsp+0x3e]
  40c866:	jmp    0x40c885
  40c868:	nop    DWORD PTR [rax+rax*1+0x0]
  40c870:	cdqe   
  40c872:	mov    rdx,rax
  40c875:	add    rdx,QWORD PTR [r13+0x0]
  40c879:	add    rbx,rax
  40c87c:	cmp    rsi,rbx
  40c87f:	mov    QWORD PTR [r13+0x0],rdx
  40c883:	jbe    0x40c840
  40c885:	mov    DWORD PTR [rsp+0x28],ebp
  40c889:	mov    DWORD PTR [rsp+0x20],r12d
  40c88e:	mov    r9,rdi
  40c891:	mov    r8,r15
  40c894:	mov    rcx,r14
  40c897:	call   0x40c5a0
  40c89c:	test   eax,eax
  40c89e:	jg     0x40c870
  40c8a0:	jmp    0x40c840
  40c8a2:	nop    DWORD PTR [rax+0x0]
  40c8a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c8b0:	push   rbp
  40c8b1:	push   rdi
  40c8b2:	push   rsi
  40c8b3:	push   rbx
  40c8b4:	sub    rsp,0x48
  40c8b8:	xor    eax,eax
  40c8ba:	mov    WORD PTR [rsp+0x3e],ax
  40c8bf:	mov    rax,QWORD PTR [rip+0xbdba]        # 0x418680
  40c8c6:	mov    rbx,r8
  40c8c9:	mov    rsi,rcx
  40c8cc:	mov    rdi,rdx
  40c8cf:	mov    rax,QWORD PTR [rax]
  40c8d2:	mov    ebp,DWORD PTR [rax]
  40c8d4:	call   0x411538
  40c8d9:	lea    r9,[rip+0x11390]        # 0x41dc70
  40c8e0:	test   rbx,rbx
  40c8e3:	lea    rcx,[rsp+0x3e]
  40c8e8:	mov    DWORD PTR [rsp+0x28],ebp
  40c8ec:	mov    DWORD PTR [rsp+0x20],eax
  40c8f0:	mov    r8,rdi
  40c8f3:	cmovne r9,rbx
  40c8f7:	mov    rdx,rsi
  40c8fa:	call   0x40c5a0
  40c8ff:	cdqe   
  40c901:	add    rsp,0x48
  40c905:	pop    rbx
  40c906:	pop    rsi
  40c907:	pop    rdi
  40c908:	pop    rbp
  40c909:	ret    
  40c90a:	nop
  40c90b:	nop
  40c90c:	nop
  40c90d:	nop
  40c90e:	nop
  40c90f:	nop
  40c910:	test   rdx,rdx
  40c913:	mov    r8,rcx
  40c916:	je     0x40c942
  40c918:	cmp    BYTE PTR [rcx],0x0
  40c91b:	jne    0x40c925
  40c91d:	jmp    0x40c942
  40c91f:	nop
  40c920:	cmp    BYTE PTR [rcx],0x0
  40c923:	je     0x40c940
  40c925:	add    rcx,0x1
  40c929:	mov    rax,rcx
  40c92c:	sub    rax,r8
  40c92f:	cmp    rax,rdx
  40c932:	jb     0x40c920
  40c934:	repz ret 
  40c936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c940:	repz ret 
  40c942:	xor    eax,eax
  40c944:	ret    
  40c945:	nop
  40c946:	nop
  40c947:	nop
  40c948:	nop
  40c949:	nop
  40c94a:	nop
  40c94b:	nop
  40c94c:	nop
  40c94d:	nop
  40c94e:	nop
  40c94f:	nop
  40c950:	push   r12
  40c952:	push   rbp
  40c953:	push   rdi
  40c954:	push   rsi
  40c955:	push   rbx
  40c956:	sub    rsp,0x250
  40c95d:	mov    rbx,rdx
  40c960:	mov    rsi,rcx
  40c963:	mov    ecx,0x4000
  40c968:	mov    r12d,r8d
  40c96b:	call   0x411428
  40c970:	test   rbx,rbx
  40c973:	mov    rbp,rax
  40c976:	je     0x40ca40
  40c97c:	cmp    WORD PTR [rbx],0x0
  40c980:	lea    rax,[rip+0xb779]        # 0x418100
  40c987:	cmove  rbx,rax
  40c98b:	test   rsi,rsi
  40c98e:	je     0x40ca31
  40c994:	cmp    WORD PTR [rsi],0x0
  40c998:	lea    rax,[rip+0xb775]        # 0x418114
  40c99f:	cmove  rsi,rax
  40c9a3:	lea    rdi,[rsp+0x40]
  40c9a8:	xor    ecx,ecx
  40c9aa:	mov    r8d,0x104
  40c9b0:	mov    rdx,rdi
  40c9b3:	call   QWORD PTR [rip+0x12b0f]        # 0x41f4c8
  40c9b9:	test   eax,eax
  40c9bb:	je     0x40ca20
  40c9bd:	lea    r8,[rip+0xb754]        # 0x418118
  40c9c4:	mov    QWORD PTR [rsp+0x30],rsi
  40c9c9:	mov    DWORD PTR [rsp+0x28],r12d
  40c9ce:	mov    QWORD PTR [rsp+0x20],rbx
  40c9d3:	mov    r9,rdi
  40c9d6:	mov    edx,0x1fff
  40c9db:	mov    rcx,rbp
  40c9de:	call   0x4114c0
  40c9e3:	mov    rax,QWORD PTR [rip+0xbde6]        # 0x4187d0
  40c9ea:	mov    eax,DWORD PTR [rax]
  40c9ec:	test   eax,eax
  40c9ee:	je     0x40ca65
  40c9f0:	xor    ecx,ecx
  40c9f2:	mov    r9d,0x12012
  40c9f8:	lea    r8,[rip+0xb7b1]        # 0x4181b0
  40c9ff:	mov    rdx,rbp
  40ca02:	call   QWORD PTR [rip+0x12da0]        # 0x41f7a8
  40ca08:	cmp    eax,0x3
  40ca0b:	je     0x40ca51
  40ca0d:	cmp    eax,0x5
  40ca10:	jne    0x40ca4c
  40ca12:	add    rsp,0x250
  40ca19:	pop    rbx
  40ca1a:	pop    rsi
  40ca1b:	pop    rdi
  40ca1c:	pop    rbp
  40ca1d:	pop    r12
  40ca1f:	ret    
  40ca20:	lea    rdx,[rip+0xb6d9]        # 0x418100
  40ca27:	mov    rcx,rdi
  40ca2a:	call   0x411388
  40ca2f:	jmp    0x40c9bd
  40ca31:	lea    rsi,[rip+0xb6dc]        # 0x418114
  40ca38:	jmp    0x40c9a3
  40ca3d:	nop    DWORD PTR [rax]
  40ca40:	lea    rbx,[rip+0xb6b9]        # 0x418100
  40ca47:	jmp    0x40c98b
  40ca4c:	call   0x4114b0
  40ca51:	mov    ecx,0x16
  40ca56:	call   0x4113f8
  40ca5b:	mov    ecx,0x3
  40ca60:	call   0x4114e8
  40ca65:	call   0x411520
  40ca6a:	lea    rdx,[rip+0xb72f]        # 0x4181a0
  40ca71:	lea    rcx,[rax+0x60]
  40ca75:	mov    r8,rbp
  40ca78:	call   0x411460
  40ca7d:	call   0x4114b0
  40ca82:	nop
  40ca83:	nop    DWORD PTR [rax]
  40ca86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ca90:	push   rbp
  40ca91:	push   rdi
  40ca92:	push   rsi
  40ca93:	push   rbx
  40ca94:	sub    rsp,0x38
  40ca98:	mov    rdi,rdx
  40ca9b:	mov    DWORD PTR [rsp+0x2c],r8d
  40caa0:	mov    rbp,rcx
  40caa3:	call   0x4113b8
  40caa8:	lea    rcx,[rax+rax*1+0x2]
  40caad:	call   0x411428
  40cab2:	mov    rcx,rdi
  40cab5:	mov    rsi,rax
  40cab8:	call   0x4113b8
  40cabd:	lea    rcx,[rax+rax*1+0x2]
  40cac2:	call   0x411428
  40cac7:	movzx  r9d,BYTE PTR [rbp+0x0]
  40cacc:	xor    r10d,r10d
  40cacf:	mov    rbx,rax
  40cad2:	mov    r8d,DWORD PTR [rsp+0x2c]
  40cad7:	test   r9b,r9b
  40cada:	je     0x40caf7
  40cadc:	nop    DWORD PTR [rax+0x0]
  40cae0:	mov    WORD PTR [rsi+r10*2],r9w
  40cae5:	add    r10,0x1
  40cae9:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  40caef:	test   r9b,r9b
  40caf2:	jne    0x40cae0
  40caf4:	add    r10,r10
  40caf7:	movzx  r9d,BYTE PTR [rdi]
  40cafb:	xor    edx,edx
  40cafd:	mov    WORD PTR [rsi+r10*1],dx
  40cb02:	xor    r10d,r10d
  40cb05:	test   r9b,r9b
  40cb08:	je     0x40cb26
  40cb0a:	nop    WORD PTR [rax+rax*1+0x0]
  40cb10:	mov    WORD PTR [rbx+r10*2],r9w
  40cb15:	add    r10,0x1
  40cb19:	movzx  r9d,BYTE PTR [rdi+r10*1]
  40cb1e:	test   r9b,r9b
  40cb21:	jne    0x40cb10
  40cb23:	add    r10,r10
  40cb26:	xor    eax,eax
  40cb28:	mov    rdx,rbx
  40cb2b:	mov    rcx,rsi
  40cb2e:	mov    WORD PTR [rbx+r10*1],ax
  40cb33:	call   0x40c950
  40cb38:	mov    rcx,rsi
  40cb3b:	call   0x411468
  40cb40:	mov    rcx,rbx
  40cb43:	add    rsp,0x38
  40cb47:	pop    rbx
  40cb48:	pop    rsi
  40cb49:	pop    rdi
  40cb4a:	pop    rbp
  40cb4b:	jmp    0x411468
  40cb50:	sub    rsp,0x38
  40cb54:	mov    r9,rdx
  40cb57:	mov    QWORD PTR [rsp+0x20],r8
  40cb5c:	mov    rdx,rcx
  40cb5f:	xor    r8d,r8d
  40cb62:	mov    ecx,0x6000
  40cb67:	call   0x40e3e0
  40cb6c:	add    rsp,0x38
  40cb70:	ret    
  40cb71:	nop
  40cb72:	nop
  40cb73:	nop
  40cb74:	nop
  40cb75:	nop
  40cb76:	nop
  40cb77:	nop
  40cb78:	nop
  40cb79:	nop
  40cb7a:	nop
  40cb7b:	nop
  40cb7c:	nop
  40cb7d:	nop
  40cb7e:	nop
  40cb7f:	nop
  40cb80:	push   rbx
  40cb81:	sub    rsp,0x30
  40cb85:	mov    rbx,rcx
  40cb88:	mov    r9,rdx
  40cb8b:	mov    QWORD PTR [rsp+0x20],r8
  40cb90:	mov    rdx,rcx
  40cb93:	xor    r8d,r8d
  40cb96:	mov    ecx,0x4000
  40cb9b:	call   0x40e3e0
  40cba0:	movsxd rdx,eax
  40cba3:	mov    BYTE PTR [rbx+rdx*1],0x0
  40cba7:	add    rsp,0x30
  40cbab:	pop    rbx
  40cbac:	ret    
  40cbad:	nop
  40cbae:	nop
  40cbaf:	nop
  40cbb0:	sub    rsp,0x58
  40cbb4:	mov    rax,QWORD PTR [rdx]
  40cbb7:	mov    r11,rdx
  40cbba:	mov    edx,DWORD PTR [rdx+0x8]
  40cbbd:	mov    r10,rdx
  40cbc0:	and    r10w,0x7fff
  40cbc6:	jne    0x40cbe4
  40cbc8:	mov    rdx,rax
  40cbcb:	shr    rdx,0x20
  40cbcf:	or     eax,edx
  40cbd1:	jne    0x40cc50
  40cbd3:	mov    DWORD PTR [rsp+0x44],0x0
  40cbdb:	movzx  eax,WORD PTR [r11+0x8]
  40cbe0:	xor    edx,edx
  40cbe2:	jmp    0x40cc0b
  40cbe4:	cmp    r10w,0x7fff
  40cbea:	je     0x40cc70
  40cbf0:	movzx  eax,WORD PTR [r11+0x8]
  40cbf5:	mov    DWORD PTR [rsp+0x44],0x1
  40cbfd:	mov    edx,eax
  40cbff:	and    edx,0x7fff
  40cc05:	sub    edx,0x403e
  40cc0b:	and    eax,0x8000
  40cc10:	mov    r10,QWORD PTR [rsp+0x80]
  40cc18:	mov    DWORD PTR [r10],eax
  40cc1b:	lea    rax,[rsp+0x48]
  40cc20:	mov    QWORD PTR [rsp+0x30],r9
  40cc25:	mov    DWORD PTR [rsp+0x20],ecx
  40cc29:	lea    r9,[rsp+0x44]
  40cc2e:	lea    rcx,[rip+0x54db]        # 0x412110
  40cc35:	mov    DWORD PTR [rsp+0x28],r8d
  40cc3a:	mov    QWORD PTR [rsp+0x38],rax
  40cc3f:	mov    r8,r11
  40cc42:	call   0x40f060
  40cc47:	add    rsp,0x58
  40cc4b:	ret    
  40cc4c:	nop    DWORD PTR [rax+0x0]
  40cc50:	test   edx,edx
  40cc52:	js     0x40cbf0
  40cc54:	mov    DWORD PTR [rsp+0x44],0x2
  40cc5c:	movzx  eax,WORD PTR [r11+0x8]
  40cc61:	mov    edx,0xffffbfc3
  40cc66:	jmp    0x40cc0b
  40cc68:	nop    DWORD PTR [rax+rax*1+0x0]
  40cc70:	mov    rdx,rax
  40cc73:	shr    rdx,0x20
  40cc77:	and    edx,0x7fffffff
  40cc7d:	or     edx,eax
  40cc7f:	jne    0x40cc95
  40cc81:	mov    DWORD PTR [rsp+0x44],0x3
  40cc89:	movzx  eax,WORD PTR [r11+0x8]
  40cc8e:	xor    edx,edx
  40cc90:	jmp    0x40cc0b
  40cc95:	mov    DWORD PTR [rsp+0x44],0x4
  40cc9d:	xor    edx,edx
  40cc9f:	xor    eax,eax
  40cca1:	jmp    0x40cc10
  40cca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ccb0:	push   rbx
  40ccb1:	sub    rsp,0x20
  40ccb5:	mov    rbx,rdx
  40ccb8:	mov    edx,DWORD PTR [rdx+0x8]
  40ccbb:	test   dh,0x40
  40ccbe:	jne    0x40ccc8
  40ccc0:	mov    eax,DWORD PTR [rbx+0x24]
  40ccc3:	cmp    DWORD PTR [rbx+0x28],eax
  40ccc6:	jle    0x40ccda
  40ccc8:	and    dh,0x20
  40cccb:	jne    0x40ccf0
  40cccd:	movsxd rax,DWORD PTR [rbx+0x24]
  40ccd1:	mov    rdx,QWORD PTR [rbx]
  40ccd4:	mov    BYTE PTR [rdx+rax*1],cl
  40ccd7:	mov    eax,DWORD PTR [rbx+0x24]
  40ccda:	add    eax,0x1
  40ccdd:	mov    DWORD PTR [rbx+0x24],eax
  40cce0:	add    rsp,0x20
  40cce4:	pop    rbx
  40cce5:	ret    
  40cce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ccf0:	mov    rdx,QWORD PTR [rbx]
  40ccf3:	call   0x411478
  40ccf8:	mov    eax,DWORD PTR [rbx+0x24]
  40ccfb:	add    eax,0x1
  40ccfe:	mov    DWORD PTR [rbx+0x24],eax
  40cd01:	add    rsp,0x20
  40cd05:	pop    rbx
  40cd06:	ret    
  40cd07:	nop    WORD PTR [rax+rax*1+0x0]
  40cd10:	push   r14
  40cd12:	push   r13
  40cd14:	push   r12
  40cd16:	push   rbp
  40cd17:	push   rdi
  40cd18:	push   rsi
  40cd19:	push   rbx
  40cd1a:	sub    rsp,0x40
  40cd1e:	lea    r14,[rsp+0x2c]
  40cd23:	lea    r13,[rsp+0x30]
  40cd28:	mov    ebx,edx
  40cd2a:	mov    rsi,r8
  40cd2d:	xor    edx,edx
  40cd2f:	mov    r12,rcx
  40cd32:	mov    r8,r14
  40cd35:	mov    rcx,r13
  40cd38:	call   0x4111d0
  40cd3d:	mov    ebp,DWORD PTR [rsi+0x10]
  40cd40:	cmp    ebp,ebx
  40cd42:	jge    0x40cde9
  40cd48:	test   ebp,ebp
  40cd4a:	js     0x40cde9
  40cd50:	mov    eax,DWORD PTR [rsi+0xc]
  40cd53:	cmp    ebp,eax
  40cd55:	jge    0x40cdf6
  40cd5b:	sub    eax,ebp
  40cd5d:	test   eax,eax
  40cd5f:	mov    DWORD PTR [rsi+0xc],eax
  40cd62:	jle    0x40cd70
  40cd64:	test   BYTE PTR [rsi+0x9],0x4
  40cd68:	je     0x40ce02
  40cd6e:	xchg   ax,ax
  40cd70:	test   ebp,ebp
  40cd72:	jle    0x40cdcd
  40cd74:	add    r12,0x2
  40cd78:	movzx  edx,WORD PTR [r12-0x2]
  40cd7e:	mov    r8,r14
  40cd81:	mov    rcx,r13
  40cd84:	call   0x4111d0
  40cd89:	test   eax,eax
  40cd8b:	jle    0x40cdcd
  40cd8d:	sub    eax,0x1
  40cd90:	mov    rbx,r13
  40cd93:	lea    rdi,[r13+rax*1+0x1]
  40cd98:	nop    DWORD PTR [rax+rax*1+0x0]
  40cda0:	add    rbx,0x1
  40cda4:	movsx  ecx,BYTE PTR [rbx-0x1]
  40cda8:	mov    rdx,rsi
  40cdab:	call   0x40ccb0
  40cdb0:	cmp    rbx,rdi
  40cdb3:	jne    0x40cda0
  40cdb5:	sub    ebp,0x1
  40cdb8:	jmp    0x40cd70
  40cdba:	nop    WORD PTR [rax+rax*1+0x0]
  40cdc0:	mov    rdx,rsi
  40cdc3:	mov    ecx,0x20
  40cdc8:	call   0x40ccb0
  40cdcd:	mov    eax,DWORD PTR [rsi+0xc]
  40cdd0:	lea    edx,[rax-0x1]
  40cdd3:	test   eax,eax
  40cdd5:	mov    DWORD PTR [rsi+0xc],edx
  40cdd8:	jg     0x40cdc0
  40cdda:	add    rsp,0x40
  40cdde:	pop    rbx
  40cddf:	pop    rsi
  40cde0:	pop    rdi
  40cde1:	pop    rbp
  40cde2:	pop    r12
  40cde4:	pop    r13
  40cde6:	pop    r14
  40cde8:	ret    
  40cde9:	mov    eax,DWORD PTR [rsi+0xc]
  40cdec:	mov    ebp,ebx
  40cdee:	cmp    ebp,eax
  40cdf0:	jl     0x40cd5b
  40cdf6:	mov    DWORD PTR [rsi+0xc],0xffffffff
  40cdfd:	jmp    0x40cd70
  40ce02:	sub    eax,0x1
  40ce05:	mov    DWORD PTR [rsi+0xc],eax
  40ce08:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce10:	mov    rdx,rsi
  40ce13:	mov    ecx,0x20
  40ce18:	call   0x40ccb0
  40ce1d:	mov    eax,DWORD PTR [rsi+0xc]
  40ce20:	lea    edx,[rax-0x1]
  40ce23:	test   eax,eax
  40ce25:	mov    DWORD PTR [rsi+0xc],edx
  40ce28:	jne    0x40ce10
  40ce2a:	jmp    0x40cd70
  40ce2f:	nop
  40ce30:	push   rdi
  40ce31:	push   rsi
  40ce32:	push   rbx
  40ce33:	sub    rsp,0x20
  40ce37:	mov    edi,DWORD PTR [r8+0x10]
  40ce3b:	mov    rsi,rcx
  40ce3e:	mov    rbx,r8
  40ce41:	cmp    edi,edx
  40ce43:	jge    0x40cec0
  40ce45:	test   edi,edi
  40ce47:	js     0x40cec0
  40ce49:	mov    eax,DWORD PTR [rbx+0xc]
  40ce4c:	cmp    edi,eax
  40ce4e:	jge    0x40cec9
  40ce50:	sub    eax,edi
  40ce52:	test   eax,eax
  40ce54:	mov    DWORD PTR [rbx+0xc],eax
  40ce57:	jle    0x40cf22
  40ce5d:	test   BYTE PTR [rbx+0x9],0x4
  40ce61:	jne    0x40cef0
  40ce67:	sub    eax,0x1
  40ce6a:	mov    DWORD PTR [rbx+0xc],eax
  40ce6d:	nop    DWORD PTR [rax]
  40ce70:	mov    rdx,rbx
  40ce73:	mov    ecx,0x20
  40ce78:	call   0x40ccb0
  40ce7d:	mov    eax,DWORD PTR [rbx+0xc]
  40ce80:	mov    edx,eax
  40ce82:	sub    eax,0x1
  40ce85:	test   edx,edx
  40ce87:	mov    DWORD PTR [rbx+0xc],eax
  40ce8a:	jne    0x40ce70
  40ce8c:	test   edi,edi
  40ce8e:	lea    edx,[rdi-0x1]
  40ce91:	je     0x40cf10
  40ce93:	lea    rdi,[rsi+rdx*1+0x1]
  40ce98:	nop    DWORD PTR [rax+rax*1+0x0]
  40cea0:	add    rsi,0x1
  40cea4:	movsx  ecx,BYTE PTR [rsi-0x1]
  40cea8:	mov    rdx,rbx
  40ceab:	call   0x40ccb0
  40ceb0:	cmp    rsi,rdi
  40ceb3:	jne    0x40cea0
  40ceb5:	jmp    0x40cf0d
  40ceb7:	nop    WORD PTR [rax+rax*1+0x0]
  40cec0:	mov    eax,DWORD PTR [rbx+0xc]
  40cec3:	mov    edi,edx
  40cec5:	cmp    edi,eax
  40cec7:	jl     0x40ce50
  40cec9:	test   edi,edi
  40cecb:	mov    DWORD PTR [rbx+0xc],0xffffffff
  40ced2:	lea    edx,[rdi-0x1]
  40ced5:	jne    0x40ce93
  40ced7:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  40cede:	add    rsp,0x20
  40cee2:	pop    rbx
  40cee3:	pop    rsi
  40cee4:	pop    rdi
  40cee5:	ret    
  40cee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cef0:	test   edi,edi
  40cef2:	lea    edx,[rdi-0x1]
  40cef5:	jne    0x40ce93
  40cef7:	sub    eax,0x1
  40cefa:	mov    DWORD PTR [rbx+0xc],eax
  40cefd:	nop    DWORD PTR [rax]
  40cf00:	mov    rdx,rbx
  40cf03:	mov    ecx,0x20
  40cf08:	call   0x40ccb0
  40cf0d:	mov    eax,DWORD PTR [rbx+0xc]
  40cf10:	lea    edx,[rax-0x1]
  40cf13:	test   eax,eax
  40cf15:	mov    DWORD PTR [rbx+0xc],edx
  40cf18:	jg     0x40cf00
  40cf1a:	add    rsp,0x20
  40cf1e:	pop    rbx
  40cf1f:	pop    rsi
  40cf20:	pop    rdi
  40cf21:	ret    
  40cf22:	test   edi,edi
  40cf24:	lea    edx,[rdi-0x1]
  40cf27:	jne    0x40ce93
  40cf2d:	sub    eax,0x1
  40cf30:	mov    DWORD PTR [rbx+0xc],eax
  40cf33:	jmp    0x40cede
  40cf35:	nop
  40cf36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf40:	sub    rsp,0x38
  40cf44:	test   ecx,ecx
  40cf46:	mov    DWORD PTR [r8+0x10],0xffffffff
  40cf4e:	je     0x40cf94
  40cf50:	lea    rcx,[rsp+0x20]
  40cf55:	mov    r11d,DWORD PTR [r8+0x8]
  40cf59:	mov    BYTE PTR [rsp+0x20],0x2d
  40cf5e:	lea    r10,[rcx+0x1]
  40cf62:	and    r11d,0x20
  40cf66:	xor    r9d,r9d
  40cf69:	movzx  eax,BYTE PTR [rdx+r9*1]
  40cf6e:	and    eax,0xffffffdf
  40cf71:	or     eax,r11d
  40cf74:	mov    BYTE PTR [r10+r9*1],al
  40cf78:	add    r9,0x1
  40cf7c:	cmp    r9,0x3
  40cf80:	jne    0x40cf69
  40cf82:	lea    rdx,[r10+0x3]
  40cf86:	sub    rdx,rcx
  40cf89:	call   0x40ce30
  40cf8e:	nop
  40cf8f:	add    rsp,0x38
  40cf93:	ret    
  40cf94:	mov    r11d,DWORD PTR [r8+0x8]
  40cf98:	test   r11d,0x100
  40cf9f:	je     0x40cfb1
  40cfa1:	lea    rcx,[rsp+0x20]
  40cfa6:	mov    BYTE PTR [rsp+0x20],0x2b
  40cfab:	lea    r10,[rcx+0x1]
  40cfaf:	jmp    0x40cf62
  40cfb1:	test   r11b,0x40
  40cfb5:	je     0x40cfd0
  40cfb7:	lea    rcx,[rsp+0x20]
  40cfbc:	mov    BYTE PTR [rsp+0x20],0x20
  40cfc1:	lea    r10,[rcx+0x1]
  40cfc5:	jmp    0x40cf62
  40cfc7:	nop    WORD PTR [rax+rax*1+0x0]
  40cfd0:	lea    rcx,[rsp+0x20]
  40cfd5:	mov    r10,rcx
  40cfd8:	jmp    0x40cf62
  40cfda:	nop    WORD PTR [rax+rax*1+0x0]
  40cfe0:	push   rbp
  40cfe1:	push   r12
  40cfe3:	push   rdi
  40cfe4:	push   rsi
  40cfe5:	push   rbx
  40cfe6:	mov    rbp,rsp
  40cfe9:	sub    rsp,0x30
  40cfed:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  40cff1:	mov    rsi,rcx
  40cff4:	je     0x40d090
  40cffa:	movzx  edx,WORD PTR [rcx+0x18]
  40cffe:	test   dx,dx
  40d001:	je     0x40d062
  40d003:	movsxd rax,DWORD PTR [rsi+0x14]
  40d007:	mov    r12,rsp
  40d00a:	add    rax,0xf
  40d00e:	and    rax,0xfffffffffffffff0
  40d012:	call   0x40c560
  40d017:	sub    rsp,rax
  40d01a:	lea    r8,[rbp-0x4]
  40d01e:	mov    DWORD PTR [rbp-0x4],0x0
  40d025:	lea    rbx,[rsp+0x20]
  40d02a:	mov    rcx,rbx
  40d02d:	call   0x4111d0
  40d032:	test   eax,eax
  40d034:	jle    0x40d080
  40d036:	sub    eax,0x1
  40d039:	lea    rdi,[rbx+rax*1+0x1]
  40d03e:	xchg   ax,ax
  40d040:	add    rbx,0x1
  40d044:	movsx  ecx,BYTE PTR [rbx-0x1]
  40d048:	mov    rdx,rsi
  40d04b:	call   0x40ccb0
  40d050:	cmp    rbx,rdi
  40d053:	jne    0x40d040
  40d055:	mov    rsp,r12
  40d058:	mov    rsp,rbp
  40d05b:	pop    rbx
  40d05c:	pop    rsi
  40d05d:	pop    rdi
  40d05e:	pop    r12
  40d060:	pop    rbp
  40d061:	ret    
  40d062:	mov    rdx,rsi
  40d065:	mov    ecx,0x2e
  40d06a:	call   0x40ccb0
  40d06f:	nop
  40d070:	mov    rsp,rbp
  40d073:	pop    rbx
  40d074:	pop    rsi
  40d075:	pop    rdi
  40d076:	pop    r12
  40d078:	pop    rbp
  40d079:	ret    
  40d07a:	nop    WORD PTR [rax+rax*1+0x0]
  40d080:	mov    rdx,rsi
  40d083:	mov    ecx,0x2e
  40d088:	call   0x40ccb0
  40d08d:	jmp    0x40d055
  40d08f:	nop
  40d090:	mov    DWORD PTR [rbp-0x4],0x0
  40d097:	call   0x411430
  40d09c:	mov    rdx,QWORD PTR [rax]
  40d09f:	lea    rcx,[rbp-0x6]
  40d0a3:	lea    r9,[rbp-0x4]
  40d0a7:	mov    r8d,0x10
  40d0ad:	call   0x40c710
  40d0b2:	test   eax,eax
  40d0b4:	jle    0x40d0c6
  40d0b6:	movzx  edx,WORD PTR [rbp-0x6]
  40d0ba:	mov    WORD PTR [rsi+0x18],dx
  40d0be:	mov    DWORD PTR [rsi+0x14],eax
  40d0c1:	jmp    0x40cffe
  40d0c6:	movzx  edx,WORD PTR [rsi+0x18]
  40d0ca:	jmp    0x40d0be
  40d0cc:	nop    DWORD PTR [rax+0x0]
  40d0d0:	push   r12
  40d0d2:	push   rbp
  40d0d3:	push   rdi
  40d0d4:	push   rsi
  40d0d5:	push   rbx
  40d0d6:	sub    rsp,0x20
  40d0da:	mov    esi,r8d
  40d0dd:	mov    ebp,ecx
  40d0df:	mov    rdi,rdx
  40d0e2:	test   esi,esi
  40d0e4:	mov    rbx,r9
  40d0e7:	mov    r8d,DWORD PTR [r9+0xc]
  40d0eb:	jle    0x40d2c2
  40d0f1:	cmp    esi,r8d
  40d0f4:	jg     0x40d230
  40d0fa:	sub    r8d,esi
  40d0fd:	mov    DWORD PTR [r9+0xc],r8d
  40d101:	test   r8d,r8d
  40d104:	js     0x40d230
  40d10a:	mov    eax,DWORD PTR [rbx+0x10]
  40d10d:	cmp    eax,r8d
  40d110:	jge    0x40d230
  40d116:	sub    r8d,eax
  40d119:	test   r8d,r8d
  40d11c:	mov    DWORD PTR [rbx+0xc],r8d
  40d120:	jle    0x40d23d
  40d126:	test   eax,eax
  40d128:	jle    0x40d375
  40d12e:	sub    r8d,0x1
  40d132:	test   esi,esi
  40d134:	mov    DWORD PTR [rbx+0xc],r8d
  40d138:	jle    0x40d144
  40d13a:	test   BYTE PTR [rbx+0x9],0x10
  40d13e:	jne    0x40d24f
  40d144:	test   r8d,r8d
  40d147:	jle    0x40d18d
  40d149:	test   ebp,ebp
  40d14b:	jne    0x40d15b
  40d14d:	mov    eax,DWORD PTR [rbx+0x8]
  40d150:	test   eax,0x1c0
  40d155:	je     0x40d355
  40d15b:	sub    r8d,0x1
  40d15f:	test   r8d,r8d
  40d162:	mov    DWORD PTR [rbx+0xc],r8d
  40d166:	jle    0x40d18d
  40d168:	test   DWORD PTR [rbx+0x8],0x600
  40d16f:	jne    0x40d18d
  40d171:	jmp    0x40d180
  40d173:	mov    rdx,rbx
  40d176:	mov    ecx,0x20
  40d17b:	call   0x40ccb0
  40d180:	mov    eax,DWORD PTR [rbx+0xc]
  40d183:	lea    edx,[rax-0x1]
  40d186:	test   eax,eax
  40d188:	mov    DWORD PTR [rbx+0xc],edx
  40d18b:	jg     0x40d173
  40d18d:	test   ebp,ebp
  40d18f:	jne    0x40d2b0
  40d195:	mov    eax,DWORD PTR [rbx+0x8]
  40d198:	test   ah,0x1
  40d19b:	jne    0x40d2e0
  40d1a1:	test   al,0x40
  40d1a3:	jne    0x40d363
  40d1a9:	mov    edx,DWORD PTR [rbx+0xc]
  40d1ac:	test   edx,edx
  40d1ae:	jle    0x40d1c3
  40d1b0:	mov    eax,DWORD PTR [rbx+0x8]
  40d1b3:	and    eax,0x600
  40d1b8:	cmp    eax,0x200
  40d1bd:	je     0x40d2f2
  40d1c3:	test   esi,esi
  40d1c5:	jle    0x40d322
  40d1cb:	lea    r12,[rbx+0x20]
  40d1cf:	mov    ebp,0x55555556
  40d1d4:	movzx  eax,BYTE PTR [rdi]
  40d1d7:	mov    ecx,0x30
  40d1dc:	test   al,al
  40d1de:	je     0x40d1e7
  40d1e0:	add    rdi,0x1
  40d1e4:	movsx  ecx,al
  40d1e7:	mov    rdx,rbx
  40d1ea:	call   0x40ccb0
  40d1ef:	sub    esi,0x1
  40d1f2:	je     0x40d410
  40d1f8:	test   BYTE PTR [rbx+0x9],0x10
  40d1fc:	je     0x40d1d4
  40d1fe:	cmp    WORD PTR [rbx+0x20],0x0
  40d203:	je     0x40d1d4
  40d205:	mov    eax,esi
  40d207:	imul   ebp
  40d209:	mov    eax,esi
  40d20b:	sar    eax,0x1f
  40d20e:	sub    edx,eax
  40d210:	lea    eax,[rdx+rdx*2]
  40d213:	cmp    esi,eax
  40d215:	jne    0x40d1d4
  40d217:	mov    r8,rbx
  40d21a:	mov    edx,0x1
  40d21f:	mov    rcx,r12
  40d222:	call   0x40cd10
  40d227:	jmp    0x40d1d4
  40d229:	nop    DWORD PTR [rax+0x0]
  40d230:	mov    DWORD PTR [rbx+0xc],0xffffffff
  40d237:	mov    r8d,0xffffffff
  40d23d:	test   esi,esi
  40d23f:	jle    0x40d18d
  40d245:	test   BYTE PTR [rbx+0x9],0x10
  40d249:	je     0x40d18d
  40d24f:	cmp    WORD PTR [rbx+0x20],0x0
  40d254:	je     0x40d144
  40d25a:	lea    ecx,[rsi+0x2]
  40d25d:	mov    edx,0x55555556
  40d262:	mov    eax,ecx
  40d264:	sar    ecx,0x1f
  40d267:	imul   edx
  40d269:	sub    edx,ecx
  40d26b:	cmp    edx,0x1
  40d26e:	jle    0x40d144
  40d274:	test   r8d,r8d
  40d277:	jle    0x40d18d
  40d27d:	mov    eax,r8d
  40d280:	sub    eax,edx
  40d282:	add    eax,0x1
  40d285:	jmp    0x40d299
  40d287:	nop    WORD PTR [rax+rax*1+0x0]
  40d290:	test   r8d,r8d
  40d293:	je     0x40d404
  40d299:	sub    r8d,0x1
  40d29d:	cmp    r8d,eax
  40d2a0:	jne    0x40d290
  40d2a2:	mov    DWORD PTR [rbx+0xc],r8d
  40d2a6:	jmp    0x40d144
  40d2ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d2b0:	mov    rdx,rbx
  40d2b3:	mov    ecx,0x2d
  40d2b8:	call   0x40ccb0
  40d2bd:	jmp    0x40d1a9
  40d2c2:	test   r8d,r8d
  40d2c5:	jle    0x40d101
  40d2cb:	sub    r8d,0x1
  40d2cf:	mov    DWORD PTR [r9+0xc],r8d
  40d2d3:	jmp    0x40d10a
  40d2d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d2e0:	mov    rdx,rbx
  40d2e3:	mov    ecx,0x2b
  40d2e8:	call   0x40ccb0
  40d2ed:	jmp    0x40d1a9
  40d2f2:	sub    edx,0x1
  40d2f5:	mov    DWORD PTR [rbx+0xc],edx
  40d2f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d300:	mov    rdx,rbx
  40d303:	mov    ecx,0x30
  40d308:	call   0x40ccb0
  40d30d:	mov    eax,DWORD PTR [rbx+0xc]
  40d310:	lea    edx,[rax-0x1]
  40d313:	test   eax,eax
  40d315:	mov    DWORD PTR [rbx+0xc],edx
  40d318:	jg     0x40d300
  40d31a:	test   esi,esi
  40d31c:	jg     0x40d1cb
  40d322:	mov    rdx,rbx
  40d325:	mov    ecx,0x30
  40d32a:	call   0x40ccb0
  40d32f:	mov    eax,DWORD PTR [rbx+0x10]
  40d332:	test   eax,eax
  40d334:	jg     0x40d3a2
  40d336:	test   BYTE PTR [rbx+0x9],0x8
  40d33a:	jne    0x40d3a2
  40d33c:	test   esi,esi
  40d33e:	jne    0x40d3e6
  40d344:	sub    eax,0x1
  40d347:	mov    DWORD PTR [rbx+0x10],eax
  40d34a:	add    rsp,0x20
  40d34e:	pop    rbx
  40d34f:	pop    rsi
  40d350:	pop    rdi
  40d351:	pop    rbp
  40d352:	pop    r12
  40d354:	ret    
  40d355:	test   ah,0x6
  40d358:	je     0x40d180
  40d35e:	jmp    0x40d198
  40d363:	mov    rdx,rbx
  40d366:	mov    ecx,0x20
  40d36b:	call   0x40ccb0
  40d370:	jmp    0x40d1a9
  40d375:	mov    eax,DWORD PTR [rbx+0x8]
  40d378:	test   ah,0x8
  40d37b:	jne    0x40d12e
  40d381:	test   esi,esi
  40d383:	jle    0x40d149
  40d389:	test   ah,0x10
  40d38c:	je     0x40d149
  40d392:	cmp    WORD PTR [rbx+0x20],0x0
  40d397:	jne    0x40d25a
  40d39d:	jmp    0x40d149
  40d3a2:	mov    rcx,rbx
  40d3a5:	call   0x40cfe0
  40d3aa:	test   esi,esi
  40d3ac:	je     0x40d3cb
  40d3ae:	jmp    0x40d3e3
  40d3b0:	movzx  eax,BYTE PTR [rdi]
  40d3b3:	mov    ecx,0x30
  40d3b8:	test   al,al
  40d3ba:	je     0x40d3c3
  40d3bc:	add    rdi,0x1
  40d3c0:	movsx  ecx,al
  40d3c3:	mov    rdx,rbx
  40d3c6:	call   0x40ccb0
  40d3cb:	mov    eax,DWORD PTR [rbx+0x10]
  40d3ce:	lea    edx,[rax-0x1]
  40d3d1:	test   eax,eax
  40d3d3:	mov    DWORD PTR [rbx+0x10],edx
  40d3d6:	jg     0x40d3b0
  40d3d8:	add    rsp,0x20
  40d3dc:	pop    rbx
  40d3dd:	pop    rsi
  40d3de:	pop    rdi
  40d3df:	pop    rbp
  40d3e0:	pop    r12
  40d3e2:	ret    
  40d3e3:	mov    eax,DWORD PTR [rbx+0x10]
  40d3e6:	add    eax,esi
  40d3e8:	mov    DWORD PTR [rbx+0x10],eax
  40d3eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d3f0:	mov    rdx,rbx
  40d3f3:	mov    ecx,0x30
  40d3f8:	call   0x40ccb0
  40d3fd:	add    esi,0x1
  40d400:	jne    0x40d3f0
  40d402:	jmp    0x40d3cb
  40d404:	mov    DWORD PTR [rbx+0xc],0x0
  40d40b:	jmp    0x40d18d
  40d410:	mov    eax,DWORD PTR [rbx+0x10]
  40d413:	test   eax,eax
  40d415:	jle    0x40d421
  40d417:	mov    rcx,rbx
  40d41a:	call   0x40cfe0
  40d41f:	jmp    0x40d3cb
  40d421:	test   BYTE PTR [rbx+0x9],0x8
  40d425:	jne    0x40d417
  40d427:	jmp    0x40d344
  40d42c:	nop    DWORD PTR [rax+0x0]
  40d430:	push   rsi
  40d431:	push   rbx
  40d432:	sub    rsp,0x68
  40d436:	mov    r8d,DWORD PTR [rdx+0x10]
  40d43a:	fld    TBYTE PTR [rcx]
  40d43c:	mov    rbx,rdx
  40d43f:	test   r8d,r8d
  40d442:	js     0x40d4e0
  40d448:	lea    rdx,[rsp+0x30]
  40d44d:	lea    r9,[rsp+0x4c]
  40d452:	mov    ecx,0x3
  40d457:	fstp   TBYTE PTR [rsp+0x50]
  40d45b:	mov    rax,QWORD PTR [rsp+0x50]
  40d460:	mov    QWORD PTR [rsp+0x30],rax
  40d465:	mov    rax,QWORD PTR [rsp+0x58]
  40d46a:	mov    QWORD PTR [rsp+0x38],rax
  40d46f:	lea    rax,[rsp+0x48]
  40d474:	mov    QWORD PTR [rsp+0x20],rax
  40d479:	call   0x40cbb0
  40d47e:	mov    r8d,DWORD PTR [rsp+0x4c]
  40d483:	mov    rsi,rax
  40d486:	cmp    r8d,0xffff8000
  40d48d:	je     0x40d4f2
  40d48f:	mov    ecx,DWORD PTR [rsp+0x48]
  40d493:	mov    rdx,rax
  40d496:	mov    r9,rbx
  40d499:	call   0x40d0d0
  40d49e:	mov    eax,DWORD PTR [rbx+0xc]
  40d4a1:	lea    edx,[rax-0x1]
  40d4a4:	test   eax,eax
  40d4a6:	mov    DWORD PTR [rbx+0xc],edx
  40d4a9:	jle    0x40d4ce
  40d4ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d4b0:	mov    rdx,rbx
  40d4b3:	mov    ecx,0x20
  40d4b8:	call   0x40ccb0
  40d4bd:	mov    r8d,DWORD PTR [rbx+0xc]
  40d4c1:	lea    r9d,[r8-0x1]
  40d4c5:	test   r8d,r8d
  40d4c8:	mov    DWORD PTR [rbx+0xc],r9d
  40d4cc:	jg     0x40d4b0
  40d4ce:	mov    rcx,rsi
  40d4d1:	call   0x40eec0
  40d4d6:	nop
  40d4d7:	add    rsp,0x68
  40d4db:	pop    rbx
  40d4dc:	pop    rsi
  40d4dd:	ret    
  40d4de:	xchg   ax,ax
  40d4e0:	mov    DWORD PTR [rdx+0x10],0x6
  40d4e7:	mov    r8d,0x6
  40d4ed:	jmp    0x40d448
  40d4f2:	mov    ecx,DWORD PTR [rsp+0x48]
  40d4f6:	mov    r8,rbx
  40d4f9:	mov    rdx,rax
  40d4fc:	call   0x40cf40
  40d501:	mov    rcx,rsi
  40d504:	call   0x40eec0
  40d509:	nop
  40d50a:	add    rsp,0x68
  40d50e:	pop    rbx
  40d50f:	pop    rsi
  40d510:	ret    
  40d511:	nop    DWORD PTR [rax+rax*1+0x0]
  40d516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d520:	push   rbp
  40d521:	push   r13
  40d523:	push   r12
  40d525:	push   rdi
  40d526:	push   rsi
  40d527:	push   rbx
  40d528:	sub    rsp,0x28
  40d52c:	lea    rbp,[rsp+0x80]
  40d534:	mov    ebx,DWORD PTR [rdx+0x10]
  40d537:	mov    r11d,DWORD PTR [rdx+0x8]
  40d53b:	mov    r8d,0x0
  40d541:	mov    rsi,rdx
  40d544:	test   ebx,ebx
  40d546:	cmovns r8d,ebx
  40d54a:	add    r8d,0x17
  40d54e:	test   r11d,0x1000
  40d555:	je     0x40d562
  40d557:	cmp    WORD PTR [rdx+0x20],0x0
  40d55c:	jne    0x40d752
  40d562:	movsxd r13,DWORD PTR [rsi+0xc]
  40d566:	movsxd rax,r8d
  40d569:	cmp    r8d,r13d
  40d56c:	cmovl  rax,r13
  40d570:	add    rax,0x1e
  40d574:	and    rax,0xfffffffffffffff0
  40d578:	call   0x40c560
  40d57d:	sub    rsp,rax
  40d580:	test   r11b,0x80
  40d584:	lea    r12,[rsp+0x20]
  40d589:	je     0x40d59c
  40d58b:	test   rcx,rcx
  40d58e:	js     0x40d7e0
  40d594:	and    r11b,0x7f
  40d598:	mov    DWORD PTR [rsi+0x8],r11d
  40d59c:	test   rcx,rcx
  40d59f:	je     0x40d7e8
  40d5a5:	mov    r10d,r11d
  40d5a8:	mov    r8,r12
  40d5ab:	movabs r9,0xcccccccccccccccd
  40d5b5:	and    r10d,0x1000
  40d5bc:	jmp    0x40d5f3
  40d5be:	xchg   ax,ax
  40d5c0:	cmp    r12,rdi
  40d5c3:	je     0x40d5f0
  40d5c5:	test   r10d,r10d
  40d5c8:	je     0x40d5f0
  40d5ca:	cmp    WORD PTR [rsi+0x20],0x0
  40d5cf:	je     0x40d5f0
  40d5d1:	mov    rax,rdi
  40d5d4:	sub    rax,r12
  40d5d7:	cqo    
  40d5d9:	shr    rdx,0x3e
  40d5dd:	add    rax,rdx
  40d5e0:	and    eax,0x3
  40d5e3:	sub    rax,rdx
  40d5e6:	cmp    rax,0x3
  40d5ea:	je     0x40d730
  40d5f0:	mov    r8,rdi
  40d5f3:	mov    rax,rcx
  40d5f6:	lea    rdi,[r8+0x1]
  40d5fa:	mul    r9
  40d5fd:	shr    rdx,0x3
  40d601:	lea    rax,[rdx+rdx*4]
  40d605:	add    rax,rax
  40d608:	sub    rcx,rax
  40d60b:	add    ecx,0x30
  40d60e:	test   rdx,rdx
  40d611:	mov    BYTE PTR [r8],cl
  40d614:	mov    rcx,rdx
  40d617:	jne    0x40d5c0
  40d619:	test   ebx,ebx
  40d61b:	jle    0x40d655
  40d61d:	mov    rax,r12
  40d620:	sub    rax,rdi
  40d623:	add    eax,ebx
  40d625:	test   eax,eax
  40d627:	jle    0x40d655
  40d629:	sub    eax,0x1
  40d62c:	mov    rdx,rax
  40d62f:	lea    rcx,[rdi+rax*1+0x1]
  40d634:	mov    rax,rdi
  40d637:	nop    WORD PTR [rax+rax*1+0x0]
  40d640:	add    rax,0x1
  40d644:	mov    BYTE PTR [rax-0x1],0x30
  40d648:	cmp    rax,rcx
  40d64b:	jne    0x40d640
  40d64d:	movsxd rax,edx
  40d650:	lea    rdi,[rdi+rax*1+0x1]
  40d655:	cmp    r12,rdi
  40d658:	jne    0x40d665
  40d65a:	test   ebx,ebx
  40d65c:	je     0x40d665
  40d65e:	mov    BYTE PTR [rdi],0x30
  40d661:	add    rdi,0x1
  40d665:	test   r13d,r13d
  40d668:	jle    0x40d6ce
  40d66a:	mov    rax,r12
  40d66d:	sub    rax,rdi
  40d670:	add    r13d,eax
  40d673:	test   r13d,r13d
  40d676:	mov    DWORD PTR [rsi+0xc],r13d
  40d67a:	jle    0x40d6ce
  40d67c:	test   r11d,0x1c0
  40d683:	je     0x40d68d
  40d685:	sub    r13d,0x1
  40d689:	mov    DWORD PTR [rsi+0xc],r13d
  40d68d:	test   ebx,ebx
  40d68f:	js     0x40d790
  40d695:	test   r11d,0x400
  40d69c:	jne    0x40d6ce
  40d69e:	mov    eax,DWORD PTR [rsi+0xc]
  40d6a1:	lea    edx,[rax-0x1]
  40d6a4:	test   eax,eax
  40d6a6:	mov    DWORD PTR [rsi+0xc],edx
  40d6a9:	jle    0x40d6ce
  40d6ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d6b0:	mov    rdx,rsi
  40d6b3:	mov    ecx,0x20
  40d6b8:	call   0x40ccb0
  40d6bd:	mov    eax,DWORD PTR [rsi+0xc]
  40d6c0:	lea    edx,[rax-0x1]
  40d6c3:	test   eax,eax
  40d6c5:	mov    DWORD PTR [rsi+0xc],edx
  40d6c8:	jg     0x40d6b0
  40d6ca:	mov    r11d,DWORD PTR [rsi+0x8]
  40d6ce:	test   r11b,0x80
  40d6d2:	je     0x40d740
  40d6d4:	lea    rbx,[rdi+0x1]
  40d6d8:	mov    BYTE PTR [rdi],0x2d
  40d6db:	cmp    r12,rbx
  40d6de:	jae    0x40d70e
  40d6e0:	sub    rbx,0x1
  40d6e4:	movsx  ecx,BYTE PTR [rbx]
  40d6e7:	mov    rdx,rsi
  40d6ea:	call   0x40ccb0
  40d6ef:	cmp    rbx,r12
  40d6f2:	jne    0x40d6e0
  40d6f4:	mov    eax,DWORD PTR [rsi+0xc]
  40d6f7:	lea    edx,[rax-0x1]
  40d6fa:	test   eax,eax
  40d6fc:	mov    DWORD PTR [rsi+0xc],edx
  40d6ff:	jle    0x40d71b
  40d701:	mov    rdx,rsi
  40d704:	mov    ecx,0x20
  40d709:	call   0x40ccb0
  40d70e:	mov    eax,DWORD PTR [rsi+0xc]
  40d711:	lea    edx,[rax-0x1]
  40d714:	test   eax,eax
  40d716:	mov    DWORD PTR [rsi+0xc],edx
  40d719:	jg     0x40d701
  40d71b:	lea    rsp,[rbp-0x58]
  40d71f:	pop    rbx
  40d720:	pop    rsi
  40d721:	pop    rdi
  40d722:	pop    r12
  40d724:	pop    r13
  40d726:	pop    rbp
  40d727:	ret    
  40d728:	nop    DWORD PTR [rax+rax*1+0x0]
  40d730:	lea    rdi,[r8+0x2]
  40d734:	mov    BYTE PTR [r8+0x1],0x2c
  40d739:	jmp    0x40d5f0
  40d73e:	xchg   ax,ax
  40d740:	test   r11d,0x100
  40d747:	je     0x40d770
  40d749:	lea    rbx,[rdi+0x1]
  40d74d:	mov    BYTE PTR [rdi],0x2b
  40d750:	jmp    0x40d6db
  40d752:	mov    eax,r8d
  40d755:	mov    edx,0x55555556
  40d75a:	imul   edx
  40d75c:	mov    eax,r8d
  40d75f:	sar    eax,0x1f
  40d762:	sub    edx,eax
  40d764:	add    r8d,edx
  40d767:	jmp    0x40d562
  40d76c:	nop    DWORD PTR [rax+0x0]
  40d770:	and    r11d,0x40
  40d774:	mov    rbx,rdi
  40d777:	je     0x40d6db
  40d77d:	add    rbx,0x1
  40d781:	mov    BYTE PTR [rdi],0x20
  40d784:	jmp    0x40d6db
  40d789:	nop    DWORD PTR [rax+0x0]
  40d790:	mov    eax,r11d
  40d793:	and    eax,0x600
  40d798:	cmp    eax,0x200
  40d79d:	jne    0x40d695
  40d7a3:	mov    eax,DWORD PTR [rsi+0xc]
  40d7a6:	lea    ecx,[rax-0x1]
  40d7a9:	test   eax,eax
  40d7ab:	mov    DWORD PTR [rsi+0xc],ecx
  40d7ae:	jle    0x40d6ce
  40d7b4:	lea    rdx,[rdi+rcx*1+0x1]
  40d7b9:	mov    rax,rdi
  40d7bc:	nop    DWORD PTR [rax+0x0]
  40d7c0:	add    rax,0x1
  40d7c4:	mov    BYTE PTR [rax-0x1],0x30
  40d7c8:	cmp    rax,rdx
  40d7cb:	jne    0x40d7c0
  40d7cd:	lea    rdi,[rdi+rcx*1+0x1]
  40d7d2:	mov    DWORD PTR [rsi+0xc],0xffffffff
  40d7d9:	jmp    0x40d6ce
  40d7de:	xchg   ax,ax
  40d7e0:	neg    rcx
  40d7e3:	jmp    0x40d59c
  40d7e8:	mov    rdi,r12
  40d7eb:	jmp    0x40d619
  40d7f0:	push   rdi
  40d7f1:	push   rsi
  40d7f2:	push   rbx
  40d7f3:	sub    rsp,0x20
  40d7f7:	mov    rsi,r9
  40d7fa:	lea    r9d,[r8-0x1]
  40d7fe:	mov    r8d,0x66666667
  40d804:	mov    r10,rdx
  40d807:	mov    eax,r9d
  40d80a:	movsxd rbx,r9d
  40d80d:	sar    r9d,0x1f
  40d811:	imul   r8d
  40d814:	sar    edx,0x2
  40d817:	mov    r8d,edx
  40d81a:	sub    r8d,r9d
  40d81d:	mov    r9d,0x1
  40d823:	je     0x40d84b
  40d825:	mov    r11d,0x66666667
  40d82b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d830:	mov    eax,r8d
  40d833:	sar    r8d,0x1f
  40d837:	add    r9d,0x1
  40d83b:	imul   r11d
  40d83e:	mov    eax,edx
  40d840:	sar    eax,0x2
  40d843:	sub    eax,r8d
  40d846:	mov    r8d,eax
  40d849:	jne    0x40d830
  40d84b:	mov    edi,DWORD PTR [rsi+0x2c]
  40d84e:	mov    eax,DWORD PTR [rsi+0xc]
  40d851:	cmp    r9d,edi
  40d854:	cmovge edi,r9d
  40d858:	lea    edx,[rdi+0x2]
  40d85b:	cmp    eax,edx
  40d85d:	jg     0x40d8b2
  40d85f:	mov    DWORD PTR [rsi+0xc],0xffffffff
  40d866:	mov    r9,rsi
  40d869:	mov    rdx,r10
  40d86c:	mov    r8d,0x1
  40d872:	call   0x40d0d0
  40d877:	mov    ecx,DWORD PTR [rsi+0x8]
  40d87a:	mov    eax,DWORD PTR [rsi+0x2c]
  40d87d:	mov    rdx,rsi
  40d880:	mov    DWORD PTR [rsi+0x10],eax
  40d883:	mov    eax,ecx
  40d885:	and    ecx,0x20
  40d888:	or     eax,0x1c0
  40d88d:	or     ecx,0x45
  40d890:	mov    DWORD PTR [rsi+0x8],eax
  40d893:	call   0x40ccb0
  40d898:	lea    r9d,[rdi+0x1]
  40d89c:	add    DWORD PTR [rsi+0xc],r9d
  40d8a0:	mov    rdx,rsi
  40d8a3:	mov    rcx,rbx
  40d8a6:	add    rsp,0x20
  40d8aa:	pop    rbx
  40d8ab:	pop    rsi
  40d8ac:	pop    rdi
  40d8ad:	jmp    0x40d520
  40d8b2:	sub    eax,edx
  40d8b4:	mov    DWORD PTR [rsi+0xc],eax
  40d8b7:	jmp    0x40d866
  40d8b9:	nop    DWORD PTR [rax+0x0]
  40d8c0:	push   rsi
  40d8c1:	push   rbx
  40d8c2:	sub    rsp,0x68
  40d8c6:	mov    eax,DWORD PTR [rdx+0x10]
  40d8c9:	fld    TBYTE PTR [rcx]
  40d8cb:	mov    rbx,rdx
  40d8ce:	test   eax,eax
  40d8d0:	lea    r8d,[rax+0x1]
  40d8d4:	js     0x40d940
  40d8d6:	lea    rdx,[rsp+0x30]
  40d8db:	lea    r9,[rsp+0x4c]
  40d8e0:	mov    ecx,0x2
  40d8e5:	fstp   TBYTE PTR [rsp+0x50]
  40d8e9:	mov    rax,QWORD PTR [rsp+0x50]
  40d8ee:	mov    QWORD PTR [rsp+0x30],rax
  40d8f3:	mov    rax,QWORD PTR [rsp+0x58]
  40d8f8:	mov    QWORD PTR [rsp+0x38],rax
  40d8fd:	lea    rax,[rsp+0x48]
  40d902:	mov    QWORD PTR [rsp+0x20],rax
  40d907:	call   0x40cbb0
  40d90c:	mov    r8d,DWORD PTR [rsp+0x4c]
  40d911:	mov    rsi,rax
  40d914:	cmp    r8d,0xffff8000
  40d91b:	je     0x40d950
  40d91d:	mov    ecx,DWORD PTR [rsp+0x48]
  40d921:	mov    r9,rbx
  40d924:	mov    rdx,rax
  40d927:	call   0x40d7f0
  40d92c:	mov    rcx,rsi
  40d92f:	call   0x40eec0
  40d934:	nop
  40d935:	add    rsp,0x68
  40d939:	pop    rbx
  40d93a:	pop    rsi
  40d93b:	ret    
  40d93c:	nop    DWORD PTR [rax+0x0]
  40d940:	mov    DWORD PTR [rdx+0x10],0x6
  40d947:	mov    r8d,0x7
  40d94d:	jmp    0x40d8d6
  40d94f:	nop
  40d950:	mov    ecx,DWORD PTR [rsp+0x48]
  40d954:	mov    r8,rbx
  40d957:	mov    rdx,rax
  40d95a:	call   0x40cf40
  40d95f:	mov    rcx,rsi
  40d962:	call   0x40eec0
  40d967:	nop
  40d968:	add    rsp,0x68
  40d96c:	pop    rbx
  40d96d:	pop    rsi
  40d96e:	ret    
  40d96f:	nop
  40d970:	push   rsi
  40d971:	push   rbx
  40d972:	sub    rsp,0x78
  40d976:	mov    r8d,DWORD PTR [rdx+0x10]
  40d97a:	fld    TBYTE PTR [rcx]
  40d97c:	mov    rbx,rdx
  40d97f:	test   r8d,r8d
  40d982:	js     0x40dac0
  40d988:	je     0x40daa0
  40d98e:	lea    rdx,[rsp+0x40]
  40d993:	lea    r9,[rsp+0x5c]
  40d998:	mov    ecx,0x2
  40d99d:	fstp   TBYTE PTR [rsp+0x60]
  40d9a1:	mov    rax,QWORD PTR [rsp+0x60]
  40d9a6:	mov    QWORD PTR [rsp+0x40],rax
  40d9ab:	mov    rax,QWORD PTR [rsp+0x68]
  40d9b0:	mov    QWORD PTR [rsp+0x48],rax
  40d9b5:	lea    rax,[rsp+0x58]
  40d9ba:	mov    QWORD PTR [rsp+0x20],rax
  40d9bf:	call   0x40cbb0
  40d9c4:	mov    r8d,DWORD PTR [rsp+0x5c]
  40d9c9:	mov    rsi,rax
  40d9cc:	cmp    r8d,0xffff8000
  40d9d3:	je     0x40dae0
  40d9d9:	cmp    r8d,0xfffffffd
  40d9dd:	jl     0x40da60
  40d9e3:	mov    eax,DWORD PTR [rbx+0x10]
  40d9e6:	cmp    r8d,eax
  40d9e9:	jg     0x40da60
  40d9eb:	test   BYTE PTR [rbx+0x9],0x8
  40d9ef:	jne    0x40dad2
  40d9f5:	mov    rcx,rsi
  40d9f8:	mov    DWORD PTR [rsp+0x3c],r8d
  40d9fd:	call   0x4113b8
  40da02:	mov    r8d,DWORD PTR [rsp+0x3c]
  40da07:	sub    eax,r8d
  40da0a:	test   eax,eax
  40da0c:	mov    DWORD PTR [rbx+0x10],eax
  40da0f:	js     0x40daf1
  40da15:	mov    ecx,DWORD PTR [rsp+0x58]
  40da19:	mov    rdx,rsi
  40da1c:	mov    r9,rbx
  40da1f:	call   0x40d0d0
  40da24:	mov    eax,DWORD PTR [rbx+0xc]
  40da27:	lea    edx,[rax-0x1]
  40da2a:	test   eax,eax
  40da2c:	mov    DWORD PTR [rbx+0xc],edx
  40da2f:	jle    0x40da8d
  40da31:	mov    rdx,rbx
  40da34:	mov    ecx,0x20
  40da39:	call   0x40ccb0
  40da3e:	mov    r8d,DWORD PTR [rbx+0xc]
  40da42:	lea    r9d,[r8-0x1]
  40da46:	test   r8d,r8d
  40da49:	mov    DWORD PTR [rbx+0xc],r9d
  40da4d:	jg     0x40da31
  40da4f:	mov    rcx,rsi
  40da52:	call   0x40eec0
  40da57:	nop
  40da58:	add    rsp,0x78
  40da5c:	pop    rbx
  40da5d:	pop    rsi
  40da5e:	ret    
  40da5f:	nop
  40da60:	test   BYTE PTR [rbx+0x9],0x8
  40da64:	jne    0x40dab2
  40da66:	mov    rcx,rsi
  40da69:	mov    DWORD PTR [rsp+0x3c],r8d
  40da6e:	call   0x4113b8
  40da73:	mov    r8d,DWORD PTR [rsp+0x3c]
  40da78:	sub    eax,0x1
  40da7b:	mov    DWORD PTR [rbx+0x10],eax
  40da7e:	mov    ecx,DWORD PTR [rsp+0x58]
  40da82:	mov    r9,rbx
  40da85:	mov    rdx,rsi
  40da88:	call   0x40d7f0
  40da8d:	mov    rcx,rsi
  40da90:	call   0x40eec0
  40da95:	nop
  40da96:	add    rsp,0x78
  40da9a:	pop    rbx
  40da9b:	pop    rsi
  40da9c:	ret    
  40da9d:	nop    DWORD PTR [rax]
  40daa0:	mov    DWORD PTR [rdx+0x10],0x1
  40daa7:	mov    r8d,0x1
  40daad:	jmp    0x40d98e
  40dab2:	sub    DWORD PTR [rbx+0x10],0x1
  40dab6:	jmp    0x40da7e
  40dab8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dac0:	mov    DWORD PTR [rdx+0x10],0x6
  40dac7:	mov    r8d,0x6
  40dacd:	jmp    0x40d98e
  40dad2:	sub    eax,r8d
  40dad5:	mov    DWORD PTR [rbx+0x10],eax
  40dad8:	jmp    0x40da15
  40dadd:	nop    DWORD PTR [rax]
  40dae0:	mov    ecx,DWORD PTR [rsp+0x58]
  40dae4:	mov    r8,rbx
  40dae7:	mov    rdx,rax
  40daea:	call   0x40cf40
  40daef:	jmp    0x40da8d
  40daf1:	mov    edx,DWORD PTR [rbx+0xc]
  40daf4:	test   edx,edx
  40daf6:	jle    0x40da15
  40dafc:	add    eax,edx
  40dafe:	mov    DWORD PTR [rbx+0xc],eax
  40db01:	jmp    0x40da15
  40db06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db10:	push   rbp
  40db11:	push   r14
  40db13:	push   r13
  40db15:	push   r12
  40db17:	push   rdi
  40db18:	push   rsi
  40db19:	push   rbx
  40db1a:	mov    rbp,rsp
  40db1d:	sub    rsp,0x20
  40db21:	mov    r10d,0x12
  40db27:	mov    eax,0x18
  40db2c:	cmp    ecx,0x6f
  40db2f:	mov    rbx,r8
  40db32:	mov    r8d,DWORD PTR [r8+0x10]
  40db36:	mov    r11d,ecx
  40db39:	setne  cl
  40db3c:	mov    edi,DWORD PTR [rbx+0x8]
  40db3f:	movzx  ecx,cl
  40db42:	cmovne eax,r10d
  40db46:	mov    r10b,0x0
  40db49:	add    ecx,0x3
  40db4c:	test   r8d,r8d
  40db4f:	mov    r9,rdx
  40db52:	cmovns r10d,r8d
  40db56:	add    r10d,eax
  40db59:	test   edi,0x1000
  40db5f:	je     0x40db6c
  40db61:	cmp    WORD PTR [rbx+0x20],0x0
  40db66:	jne    0x40dd33
  40db6c:	movsxd r12,DWORD PTR [rbx+0xc]
  40db70:	movsxd rax,r10d
  40db73:	cmp    r10d,r12d
  40db76:	cmovl  rax,r12
  40db7a:	add    rax,0x1e
  40db7e:	and    rax,0xfffffffffffffff0
  40db82:	call   0x40c560
  40db87:	xor    edx,edx
  40db89:	sub    rsp,rax
  40db8c:	cmp    r11d,0x6f
  40db90:	lea    rsi,[rsp+0x20]
  40db95:	setne  dl
  40db98:	test   r9,r9
  40db9b:	lea    edx,[rdx*8+0x7]
  40dba2:	mov    r10,rsi
  40dba5:	je     0x40de52
  40dbab:	mov    r13d,r11d
  40dbae:	and    r13d,0x20
  40dbb2:	jmp    0x40dbc0
  40dbb4:	shr    r9,cl
  40dbb7:	mov    BYTE PTR [r10-0x1],r14b
  40dbbb:	test   r9,r9
  40dbbe:	je     0x40dbe5
  40dbc0:	mov    eax,edx
  40dbc2:	add    r10,0x1
  40dbc6:	and    eax,r9d
  40dbc9:	lea    r14d,[rax+0x30]
  40dbcd:	cmp    r14b,0x39
  40dbd1:	jbe    0x40dbb4
  40dbd3:	add    eax,0x37
  40dbd6:	shr    r9,cl
  40dbd9:	or     eax,r13d
  40dbdc:	test   r9,r9
  40dbdf:	mov    BYTE PTR [r10-0x1],al
  40dbe3:	jne    0x40dbc0
  40dbe5:	cmp    rsi,r10
  40dbe8:	je     0x40de52
  40dbee:	test   r8d,r8d
  40dbf1:	jle    0x40ddb2
  40dbf7:	mov    rax,rsi
  40dbfa:	sub    rax,r10
  40dbfd:	add    eax,r8d
  40dc00:	test   eax,eax
  40dc02:	jle    0x40ddb2
  40dc08:	sub    eax,0x1
  40dc0b:	mov    rdx,rax
  40dc0e:	lea    rcx,[r10+rax*1+0x1]
  40dc13:	mov    rax,r10
  40dc16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc20:	add    rax,0x1
  40dc24:	mov    BYTE PTR [rax-0x1],0x30
  40dc28:	cmp    rax,rcx
  40dc2b:	jne    0x40dc20
  40dc2d:	movsxd rax,edx
  40dc30:	lea    r10,[r10+rax*1+0x1]
  40dc35:	cmp    rsi,r10
  40dc38:	jne    0x40dc50
  40dc3a:	test   r8d,r8d
  40dc3d:	je     0x40dc50
  40dc3f:	mov    BYTE PTR [r10],0x30
  40dc43:	add    r10,0x1
  40dc47:	nop    WORD PTR [rax+rax*1+0x0]
  40dc50:	mov    rax,r10
  40dc53:	sub    rax,rsi
  40dc56:	cmp    r12d,eax
  40dc59:	jle    0x40dd80
  40dc5f:	sub    r12d,eax
  40dc62:	test   r12d,r12d
  40dc65:	mov    DWORD PTR [rbx+0xc],r12d
  40dc69:	jle    0x40deb7
  40dc6f:	cmp    r11d,0x6f
  40dc73:	mov    edx,DWORD PTR [rbx+0x8]
  40dc76:	je     0x40de40
  40dc7c:	test   dh,0x8
  40dc7f:	je     0x40de00
  40dc85:	lea    r13d,[r12-0x2]
  40dc8a:	test   r13d,r13d
  40dc8d:	jle    0x40dc98
  40dc8f:	test   r8d,r8d
  40dc92:	js     0x40dd4d
  40dc98:	test   r13d,r13d
  40dc9b:	mov    BYTE PTR [r10],r11b
  40dc9e:	lea    rdi,[r10+0x2]
  40dca2:	mov    BYTE PTR [r10+0x1],0x30
  40dca7:	jle    0x40dda8
  40dcad:	and    dh,0x4
  40dcb0:	jne    0x40ddd3
  40dcb6:	lea    r14d,[r13-0x1]
  40dcba:	mov    r12d,r14d
  40dcbd:	nop    DWORD PTR [rax]
  40dcc0:	sub    r12d,0x1
  40dcc4:	mov    rdx,rbx
  40dcc7:	mov    ecx,0x20
  40dccc:	call   0x40ccb0
  40dcd1:	lea    eax,[r12+0x1]
  40dcd6:	test   eax,eax
  40dcd8:	jg     0x40dcc0
  40dcda:	test   r14d,r14d
  40dcdd:	lea    r13d,[r14-0x1]
  40dce1:	mov    r12d,0x0
  40dce7:	cmovns r12d,r14d
  40dceb:	sub    r13d,r12d
  40dcee:	cmp    rsi,rdi
  40dcf1:	jb     0x40dde0
  40dcf7:	nop    WORD PTR [rax+rax*1+0x0]
  40dd00:	test   r13d,r13d
  40dd03:	lea    esi,[r13-0x1]
  40dd07:	jle    0x40dd25
  40dd09:	nop    DWORD PTR [rax+0x0]
  40dd10:	mov    rdx,rbx
  40dd13:	mov    ecx,0x20
  40dd18:	sub    esi,0x1
  40dd1b:	call   0x40ccb0
  40dd20:	cmp    esi,0xffffffff
  40dd23:	jne    0x40dd10
  40dd25:	mov    rsp,rbp
  40dd28:	pop    rbx
  40dd29:	pop    rsi
  40dd2a:	pop    rdi
  40dd2b:	pop    r12
  40dd2d:	pop    r13
  40dd2f:	pop    r14
  40dd31:	pop    rbp
  40dd32:	ret    
  40dd33:	mov    eax,r10d
  40dd36:	mov    edx,0x55555556
  40dd3b:	imul   edx
  40dd3d:	mov    eax,r10d
  40dd40:	sar    eax,0x1f
  40dd43:	sub    edx,eax
  40dd45:	add    r10d,edx
  40dd48:	jmp    0x40db6c
  40dd4d:	mov    eax,edx
  40dd4f:	and    eax,0x600
  40dd54:	cmp    eax,0x200
  40dd59:	je     0x40de60
  40dd5f:	mov    r12d,r13d
  40dd62:	test   dh,0x8
  40dd65:	mov    r13d,r12d
  40dd68:	mov    rdi,r10
  40dd6b:	je     0x40dcad
  40dd71:	mov    r13d,r12d
  40dd74:	jmp    0x40dc98
  40dd79:	nop    DWORD PTR [rax+0x0]
  40dd80:	mov    DWORD PTR [rbx+0xc],0xffffffff
  40dd87:	mov    r13d,0xffffffff
  40dd8d:	cmp    r11d,0x6f
  40dd91:	je     0x40dda5
  40dd93:	mov    edx,DWORD PTR [rbx+0x8]
  40dd96:	mov    eax,edx
  40dd98:	and    eax,0x800
  40dd9d:	test   eax,eax
  40dd9f:	jne    0x40dc98
  40dda5:	mov    rdi,r10
  40dda8:	cmp    rsi,rdi
  40ddab:	jb     0x40dde0
  40ddad:	jmp    0x40dd25
  40ddb2:	cmp    r11d,0x6f
  40ddb6:	jne    0x40dc35
  40ddbc:	test   BYTE PTR [rbx+0x9],0x8
  40ddc0:	je     0x40dc35
  40ddc6:	mov    BYTE PTR [r10],0x30
  40ddca:	add    r10,0x1
  40ddce:	jmp    0x40dc35
  40ddd3:	cmp    rsi,rdi
  40ddd6:	jae    0x40debf
  40dddc:	nop    DWORD PTR [rax+0x0]
  40dde0:	sub    rdi,0x1
  40dde4:	movsx  ecx,BYTE PTR [rdi]
  40dde7:	mov    rdx,rbx
  40ddea:	call   0x40ccb0
  40ddef:	cmp    rsi,rdi
  40ddf2:	jb     0x40dde0
  40ddf4:	jmp    0x40dd00
  40ddf9:	nop    DWORD PTR [rax+0x0]
  40de00:	test   r8d,r8d
  40de03:	jns    0x40dd62
  40de09:	mov    eax,edx
  40de0b:	and    eax,0x600
  40de10:	cmp    eax,0x200
  40de15:	je     0x40deae
  40de1b:	cmp    r11d,0x6f
  40de1f:	jne    0x40dd62
  40de25:	and    dh,0x4
  40de28:	jne    0x40de4a
  40de2a:	lea    r14d,[r12-0x1]
  40de2f:	mov    rdi,r10
  40de32:	jmp    0x40dcba
  40de37:	nop    WORD PTR [rax+rax*1+0x0]
  40de40:	test   r8d,r8d
  40de43:	js     0x40de09
  40de45:	and    dh,0x4
  40de48:	je     0x40de2a
  40de4a:	mov    rdi,r10
  40de4d:	mov    r13d,r12d
  40de50:	jmp    0x40ddef
  40de52:	and    edi,0xfffff7ff
  40de58:	mov    DWORD PTR [rbx+0x8],edi
  40de5b:	jmp    0x40dbee
  40de60:	lea    r8d,[r12-0x3]
  40de65:	mov    r12d,r8d
  40de68:	mov    eax,r12d
  40de6b:	lea    rcx,[r10+rax*1+0x1]
  40de70:	mov    rax,r10
  40de73:	add    rax,0x1
  40de77:	mov    BYTE PTR [rax-0x1],0x30
  40de7b:	cmp    rax,rcx
  40de7e:	jne    0x40de73
  40de80:	movsxd rax,r8d
  40de83:	cmp    r11d,0x6f
  40de87:	lea    r10,[r10+rax*1+0x1]
  40de8c:	je     0x40dea0
  40de8e:	mov    eax,edx
  40de90:	mov    r13d,0xffffffff
  40de96:	and    eax,0x800
  40de9b:	jmp    0x40dd9d
  40dea0:	mov    rdi,r10
  40dea3:	mov    r13d,0xffffffff
  40dea9:	jmp    0x40dda8
  40deae:	sub    r12d,0x1
  40deb2:	mov    r8d,r12d
  40deb5:	jmp    0x40de68
  40deb7:	mov    r13d,r12d
  40deba:	jmp    0x40dd8d
  40debf:	lea    esi,[r13-0x1]
  40dec3:	jmp    0x40dd10
  40dec8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ded0:	push   r13
  40ded2:	push   r12
  40ded4:	push   rbp
  40ded5:	push   rdi
  40ded6:	push   rsi
  40ded7:	push   rbx
  40ded8:	sub    rsp,0x68
  40dedc:	mov    r9,QWORD PTR [rcx]
  40dedf:	mov    r10d,DWORD PTR [rcx+0x8]
  40dee3:	mov    rbx,rdx
  40dee6:	mov    rax,r9
  40dee9:	mov    QWORD PTR [rsp+0x30],r9
  40deee:	mov    DWORD PTR [rsp+0x38],r10d
  40def3:	shr    rax,0x20
  40def7:	mov    r8,r10
  40defa:	and    eax,0x7fffffff
  40deff:	or     r9d,eax
  40df02:	lea    eax,[r10+r10*1]
  40df06:	mov    edx,r9d
  40df09:	neg    edx
  40df0b:	and    eax,0xfffe
  40df10:	or     edx,r9d
  40df13:	shr    edx,0x1f
  40df16:	or     edx,eax
  40df18:	mov    eax,0xfffe
  40df1d:	sub    eax,edx
  40df1f:	sar    eax,0x10
  40df22:	test   eax,eax
  40df24:	jne    0x40e310
  40df2a:	movzx  esi,WORD PTR [rsp+0x38]
  40df2f:	mov    ecx,esi
  40df31:	and    ecx,0x8000
  40df37:	je     0x40df40
  40df39:	or     DWORD PTR [rbx+0x8],0x80
  40df40:	and    r8w,0x7fff
  40df46:	cmp    r8w,0x7fff
  40df4c:	jne    0x40df70
  40df4e:	test   r9d,r9d
  40df51:	jne    0x40df70
  40df53:	lea    rdx,[rip+0xa28a]        # 0x4181e4
  40df5a:	mov    r8,rbx
  40df5d:	call   0x40cf40
  40df62:	jmp    0x40e2e5
  40df67:	nop    WORD PTR [rax+rax*1+0x0]
  40df70:	and    si,0x7fff
  40df75:	jne    0x40e0a0
  40df7b:	mov    rax,QWORD PTR [rsp+0x30]
  40df80:	test   rax,rax
  40df83:	jne    0x40e32f
  40df89:	mov    r9d,DWORD PTR [rbx+0x10]
  40df8d:	cmp    r9d,0xe
  40df91:	jbe    0x40e3ac
  40df97:	xor    esi,esi
  40df99:	mov    r8d,DWORD PTR [rbx+0x8]
  40df9d:	lea    rbp,[rsp+0x40]
  40dfa2:	test   r9d,r9d
  40dfa5:	jle    0x40e3bc
  40dfab:	lea    rax,[rbp+0x1]
  40dfaf:	mov    BYTE PTR [rsp+0x40],0x2e
  40dfb4:	mov    r10d,DWORD PTR [rbx+0xc]
  40dfb8:	lea    rdi,[rax+0x1]
  40dfbc:	mov    BYTE PTR [rax],0x30
  40dfbf:	mov    r12d,0x2
  40dfc5:	test   r10d,r10d
  40dfc8:	jg     0x40e1cc
  40dfce:	xchg   ax,ax
  40dfd0:	test   r8b,0x80
  40dfd4:	jne    0x40e290
  40dfda:	test   r8d,0x100
  40dfe1:	jne    0x40e380
  40dfe7:	and    r8d,0x40
  40dfeb:	jne    0x40e392
  40dff1:	mov    rdx,rbx
  40dff4:	mov    ecx,0x30
  40dff9:	call   0x40ccb0
  40dffe:	mov    ecx,DWORD PTR [rbx+0x8]
  40e001:	mov    rdx,rbx
  40e004:	and    ecx,0x20
  40e007:	or     ecx,0x58
  40e00a:	call   0x40ccb0
  40e00f:	mov    eax,DWORD PTR [rbx+0xc]
  40e012:	test   eax,eax
  40e014:	jle    0x40e03c
  40e016:	test   BYTE PTR [rbx+0x9],0x2
  40e01a:	je     0x40e03c
  40e01c:	sub    eax,0x1
  40e01f:	mov    DWORD PTR [rbx+0xc],eax
  40e022:	mov    rdx,rbx
  40e025:	mov    ecx,0x30
  40e02a:	call   0x40ccb0
  40e02f:	mov    eax,DWORD PTR [rbx+0xc]
  40e032:	lea    edx,[rax-0x1]
  40e035:	test   eax,eax
  40e037:	mov    DWORD PTR [rbx+0xc],edx
  40e03a:	jg     0x40e022
  40e03c:	cmp    rdi,rbp
  40e03f:	lea    r13,[rsp+0x2e]
  40e044:	ja     0x40e079
  40e046:	jmp    0x40e2af
  40e04b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e050:	movzx  eax,WORD PTR [rbx+0x20]
  40e054:	test   ax,ax
  40e057:	mov    WORD PTR [rsp+0x2e],ax
  40e05c:	je     0x40e070
  40e05e:	mov    r8,rbx
  40e061:	mov    edx,0x1
  40e066:	mov    rcx,r13
  40e069:	call   0x40cd10
  40e06e:	xchg   ax,ax
  40e070:	cmp    rdi,rbp
  40e073:	je     0x40e2af
  40e079:	sub    rdi,0x1
  40e07d:	movsx  ecx,BYTE PTR [rdi]
  40e080:	cmp    ecx,0x2e
  40e083:	je     0x40e2f2
  40e089:	cmp    ecx,0x2c
  40e08c:	je     0x40e050
  40e08e:	mov    rdx,rbx
  40e091:	call   0x40ccb0
  40e096:	jmp    0x40e070
  40e098:	nop    DWORD PTR [rax+rax*1+0x0]
  40e0a0:	mov    r9d,DWORD PTR [rbx+0x10]
  40e0a4:	sub    si,0x3fff
  40e0a9:	mov    rax,QWORD PTR [rsp+0x30]
  40e0ae:	cmp    r9d,0xe
  40e0b2:	ja     0x40e35d
  40e0b8:	test   rax,rax
  40e0bb:	js     0x40e0c5
  40e0bd:	nop    DWORD PTR [rax]
  40e0c0:	add    rax,rax
  40e0c3:	jns    0x40e0c0
  40e0c5:	mov    ecx,0xe
  40e0ca:	mov    edx,0x4
  40e0cf:	shr    rax,1
  40e0d2:	sub    ecx,r9d
  40e0d5:	shl    ecx,0x2
  40e0d8:	shl    rdx,cl
  40e0db:	add    rax,rdx
  40e0de:	js     0x40e3a4
  40e0e4:	add    rax,rax
  40e0e7:	mov    ecx,0xf
  40e0ec:	sub    ecx,r9d
  40e0ef:	shl    ecx,0x2
  40e0f2:	shr    rax,cl
  40e0f5:	mov    r8d,DWORD PTR [rbx+0x8]
  40e0f9:	lea    rbp,[rsp+0x40]
  40e0fe:	mov    rdi,rbp
  40e101:	mov    r11d,r8d
  40e104:	mov    r10d,r8d
  40e107:	and    r11d,0x800
  40e10e:	and    r10d,0x20
  40e112:	jmp    0x40e143
  40e114:	mov    ecx,DWORD PTR [rbx+0x10]
  40e117:	test   ecx,ecx
  40e119:	jle    0x40e121
  40e11b:	sub    ecx,0x1
  40e11e:	mov    DWORD PTR [rbx+0x10],ecx
  40e121:	shr    rax,0x4
  40e125:	mov    r9,rdi
  40e128:	test   edx,edx
  40e12a:	je     0x40e194
  40e12c:	cmp    edx,0x9
  40e12f:	lea    rdi,[r9+0x1]
  40e133:	jle    0x40e1a7
  40e135:	add    edx,0x37
  40e138:	or     edx,r10d
  40e13b:	mov    BYTE PTR [r9],dl
  40e13e:	test   rax,rax
  40e141:	je     0x40e1b0
  40e143:	mov    edx,eax
  40e145:	and    edx,0xf
  40e148:	cmp    edx,eax
  40e14a:	jne    0x40e114
  40e14c:	cmp    rdi,rbp
  40e14f:	ja     0x40e162
  40e151:	test   r11d,r11d
  40e154:	jne    0x40e162
  40e156:	mov    r12d,DWORD PTR [rbx+0x10]
  40e15a:	mov    r9,rdi
  40e15d:	test   r12d,r12d
  40e160:	jle    0x40e169
  40e162:	lea    r9,[rdi+0x1]
  40e166:	mov    BYTE PTR [rdi],0x2e
  40e169:	cmp    rax,0x1
  40e16d:	jbe    0x40e379
  40e173:	lea    ecx,[rsi-0x1]
  40e176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e180:	shr    rax,1
  40e183:	mov    esi,ecx
  40e185:	cmp    rax,0x1
  40e189:	lea    ecx,[rsi-0x1]
  40e18c:	jne    0x40e180
  40e18e:	xor    al,al
  40e190:	test   edx,edx
  40e192:	jne    0x40e12c
  40e194:	cmp    r9,rbp
  40e197:	ja     0x40e1a3
  40e199:	mov    ecx,DWORD PTR [rbx+0x10]
  40e19c:	mov    rdi,r9
  40e19f:	test   ecx,ecx
  40e1a1:	js     0x40e13e
  40e1a3:	lea    rdi,[r9+0x1]
  40e1a7:	add    edx,0x30
  40e1aa:	jmp    0x40e13b
  40e1ac:	nop    DWORD PTR [rax+0x0]
  40e1b0:	cmp    rdi,rbp
  40e1b3:	je     0x40e3b3
  40e1b9:	mov    r10d,DWORD PTR [rbx+0xc]
  40e1bd:	mov    r12d,0x2
  40e1c3:	test   r10d,r10d
  40e1c6:	jle    0x40dfd0
  40e1cc:	mov    edx,DWORD PTR [rbx+0x10]
  40e1cf:	mov    rax,rdi
  40e1d2:	movsx  r11d,si
  40e1d6:	sub    rax,rbp
  40e1d9:	lea    ecx,[rdx+rax*1]
  40e1dc:	test   edx,edx
  40e1de:	mov    edx,r8d
  40e1e1:	cmovg  eax,ecx
  40e1e4:	and    edx,0x1c0
  40e1ea:	mov    ecx,0x66666667
  40e1ef:	cmp    edx,0x1
  40e1f2:	sbb    edx,edx
  40e1f4:	lea    r9d,[rax+rdx*1+0x6]
  40e1f9:	mov    eax,r11d
  40e1fc:	imul   ecx
  40e1fe:	mov    eax,r11d
  40e201:	sar    eax,0x1f
  40e204:	mov    ecx,edx
  40e206:	sar    ecx,0x2
  40e209:	sub    ecx,eax
  40e20b:	je     0x40e230
  40e20d:	mov    r11d,0x66666667
  40e213:	mov    eax,ecx
  40e215:	sar    ecx,0x1f
  40e218:	add    r9d,0x1
  40e21c:	imul   r11d
  40e21f:	add    r12d,0x1
  40e223:	sar    edx,0x2
  40e226:	sub    edx,ecx
  40e228:	mov    ecx,edx
  40e22a:	jne    0x40e213
  40e22c:	movsx  r12d,r12w
  40e230:	cmp    r10d,r9d
  40e233:	jle    0x40e300
  40e239:	sub    r10d,r9d
  40e23c:	test   r8d,0x600
  40e243:	jne    0x40e370
  40e249:	lea    eax,[r10-0x1]
  40e24d:	test   r10d,r10d
  40e250:	mov    DWORD PTR [rbx+0xc],eax
  40e253:	jle    0x40dfd0
  40e259:	nop    DWORD PTR [rax+0x0]
  40e260:	mov    rdx,rbx
  40e263:	mov    ecx,0x20
  40e268:	call   0x40ccb0
  40e26d:	mov    eax,DWORD PTR [rbx+0xc]
  40e270:	lea    edx,[rax-0x1]
  40e273:	test   eax,eax
  40e275:	mov    DWORD PTR [rbx+0xc],edx
  40e278:	jg     0x40e260
  40e27a:	mov    r8d,DWORD PTR [rbx+0x8]
  40e27e:	test   r8b,0x80
  40e282:	je     0x40dfda
  40e288:	nop    DWORD PTR [rax+rax*1+0x0]
  40e290:	mov    rdx,rbx
  40e293:	mov    ecx,0x2d
  40e298:	call   0x40ccb0
  40e29d:	jmp    0x40dff1
  40e2a2:	mov    rdx,rbx
  40e2a5:	mov    ecx,0x30
  40e2aa:	call   0x40ccb0
  40e2af:	mov    eax,DWORD PTR [rbx+0x10]
  40e2b2:	lea    edx,[rax-0x1]
  40e2b5:	test   eax,eax
  40e2b7:	mov    DWORD PTR [rbx+0x10],edx
  40e2ba:	jg     0x40e2a2
  40e2bc:	mov    ecx,DWORD PTR [rbx+0x8]
  40e2bf:	mov    rdx,rbx
  40e2c2:	and    ecx,0x20
  40e2c5:	or     ecx,0x50
  40e2c8:	call   0x40ccb0
  40e2cd:	add    DWORD PTR [rbx+0xc],r12d
  40e2d1:	or     DWORD PTR [rbx+0x8],0x1c0
  40e2d8:	movsx  rcx,si
  40e2dc:	mov    rdx,rbx
  40e2df:	call   0x40d520
  40e2e4:	nop
  40e2e5:	add    rsp,0x68
  40e2e9:	pop    rbx
  40e2ea:	pop    rsi
  40e2eb:	pop    rdi
  40e2ec:	pop    rbp
  40e2ed:	pop    r12
  40e2ef:	pop    r13
  40e2f1:	ret    
  40e2f2:	mov    rcx,rbx
  40e2f5:	call   0x40cfe0
  40e2fa:	jmp    0x40e070
  40e2ff:	nop
  40e300:	mov    DWORD PTR [rbx+0xc],0xffffffff
  40e307:	jmp    0x40dfd0
  40e30c:	nop    DWORD PTR [rax+0x0]
  40e310:	lea    rdx,[rip+0x9ec9]        # 0x4181e0
  40e317:	mov    r8,rbx
  40e31a:	xor    ecx,ecx
  40e31c:	call   0x40cf40
  40e321:	nop
  40e322:	add    rsp,0x68
  40e326:	pop    rbx
  40e327:	pop    rsi
  40e328:	pop    rdi
  40e329:	pop    rbp
  40e32a:	pop    r12
  40e32c:	pop    r13
  40e32e:	ret    
  40e32f:	js     0x40e3d1
  40e335:	mov    edx,0xffffc001
  40e33a:	nop    WORD PTR [rax+rax*1+0x0]
  40e340:	mov    esi,edx
  40e342:	sub    edx,0x1
  40e345:	add    rax,rax
  40e348:	jns    0x40e340
  40e34a:	mov    r9d,DWORD PTR [rbx+0x10]
  40e34e:	cmp    r9d,0xe
  40e352:	jbe    0x40e0c5
  40e358:	jmp    0x40e0f5
  40e35d:	test   rax,rax
  40e360:	jne    0x40e0f5
  40e366:	jmp    0x40df99
  40e36b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e370:	mov    DWORD PTR [rbx+0xc],r10d
  40e374:	jmp    0x40dfd0
  40e379:	xor    eax,eax
  40e37b:	jmp    0x40e128
  40e380:	mov    rdx,rbx
  40e383:	mov    ecx,0x2b
  40e388:	call   0x40ccb0
  40e38d:	jmp    0x40dff1
  40e392:	mov    rdx,rbx
  40e395:	mov    ecx,0x20
  40e39a:	call   0x40ccb0
  40e39f:	jmp    0x40dff1
  40e3a4:	add    esi,0x1
  40e3a7:	jmp    0x40e0e7
  40e3ac:	xor    eax,eax
  40e3ae:	jmp    0x40e0c0
  40e3b3:	mov    r9d,DWORD PTR [rbx+0x10]
  40e3b7:	jmp    0x40dfa2
  40e3bc:	test   r8d,0x800
  40e3c3:	mov    rax,rbp
  40e3c6:	je     0x40dfb4
  40e3cc:	jmp    0x40dfab
  40e3d1:	mov    esi,0xffffc002
  40e3d6:	jmp    0x40e34a
  40e3db:	nop    DWORD PTR [rax+rax*1+0x0]
  40e3e0:	push   r15
  40e3e2:	push   r14
  40e3e4:	push   r13
  40e3e6:	push   r12
  40e3e8:	push   rbp
  40e3e9:	push   rdi
  40e3ea:	push   rsi
  40e3eb:	push   rbx
  40e3ec:	sub    rsp,0xb8
  40e3f3:	mov    r13,QWORD PTR [rsp+0x120]
  40e3fb:	mov    r15d,ecx
  40e3fe:	mov    rdi,rdx
  40e401:	mov    esi,r8d
  40e404:	mov    rbx,r9
  40e407:	and    r15d,0x6000
  40e40e:	call   0x4114f0
  40e413:	mov    eax,DWORD PTR [rax]
  40e415:	lea    rcx,[rip+0x9de1]        # 0x4181fd
  40e41c:	xor    edx,edx
  40e41e:	mov    QWORD PTR [rsp+0x80],rdi
  40e426:	mov    DWORD PTR [rsp+0x88],r15d
  40e42e:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  40e439:	mov    DWORD PTR [rsp+0x90],0xffffffff
  40e444:	mov    DWORD PTR [rsp+0x34],eax
  40e448:	xor    eax,eax
  40e44a:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  40e455:	mov    WORD PTR [rsp+0x98],ax
  40e45d:	mov    DWORD PTR [rsp+0x9c],0x0
  40e468:	mov    WORD PTR [rsp+0xa0],dx
  40e470:	mov    DWORD PTR [rsp+0xa4],0x0
  40e47b:	mov    DWORD PTR [rsp+0xa8],esi
  40e482:	call   0x411450
  40e487:	test   rax,rax
  40e48a:	je     0x40e49c
  40e48c:	movsx  edx,BYTE PTR [rax]
  40e48f:	mov    eax,0x2
  40e494:	sub    edx,0x30
  40e497:	cmp    edx,0x2
  40e49a:	jbe    0x40e4a9
  40e49c:	call   0x411630
  40e4a1:	and    eax,0x1
  40e4a4:	neg    eax
  40e4a6:	add    eax,0x3
  40e4a9:	lea    rdi,[rsp+0x70]
  40e4ae:	mov    DWORD PTR [rsp+0xac],eax
  40e4b5:	movzx  eax,BYTE PTR [rbx]
  40e4b8:	lea    rsi,[rsp+0x6e]
  40e4bd:	lea    r12,[rsp+0x80]
  40e4c5:	lea    rbp,[rip+0x9d48]        # 0x418214
  40e4cc:	mov    QWORD PTR [rsp+0x28],rdi
  40e4d1:	lea    rdi,[rsp+0x50]
  40e4d6:	mov    QWORD PTR [rsp+0x38],rsi
  40e4db:	mov    QWORD PTR [rsp+0x20],rdi
  40e4e0:	mov    edi,r15d
  40e4e3:	or     edi,0x200
  40e4e9:	mov    DWORD PTR [rsp+0x48],edi
  40e4ed:	nop    DWORD PTR [rax]
  40e4f0:	movsx  ecx,al
  40e4f3:	lea    rsi,[rbx+0x1]
  40e4f7:	test   ecx,ecx
  40e4f9:	je     0x40e57a
  40e4fb:	cmp    ecx,0x25
  40e4fe:	jne    0x40e560
  40e500:	movzx  eax,BYTE PTR [rbx+0x1]
  40e504:	xor    r10d,r10d
  40e507:	xor    r14d,r14d
  40e50a:	mov    DWORD PTR [rsp+0x88],r15d
  40e512:	mov    DWORD PTR [rsp+0x90],0xffffffff
  40e51d:	mov    rdi,rsi
  40e520:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  40e52b:	lea    r11,[r12+0xc]
  40e530:	test   al,al
  40e532:	je     0x40e6db
  40e538:	lea    edx,[rax-0x20]
  40e53b:	lea    rbx,[rdi+0x1]
  40e53f:	movsx  ecx,al
  40e542:	cmp    dl,0x5a
  40e545:	ja     0x40eb50
  40e54b:	movzx  edx,dl
  40e54e:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  40e553:	add    rdx,rbp
  40e556:	jmp    rdx
  40e558:	nop    DWORD PTR [rax+rax*1+0x0]
  40e560:	mov    rdx,r12
  40e563:	call   0x40ccb0
  40e568:	movzx  eax,BYTE PTR [rbx+0x1]
  40e56c:	mov    rbx,rsi
  40e56f:	lea    rsi,[rbx+0x1]
  40e573:	movsx  ecx,al
  40e576:	test   ecx,ecx
  40e578:	jne    0x40e4fb
  40e57a:	mov    eax,DWORD PTR [rsp+0xa4]
  40e581:	add    rsp,0xb8
  40e588:	pop    rbx
  40e589:	pop    rsi
  40e58a:	pop    rdi
  40e58b:	pop    rbp
  40e58c:	pop    r12
  40e58e:	pop    r13
  40e590:	pop    r14
  40e592:	pop    r15
  40e594:	ret    
  40e595:	sub    r10d,0x2
  40e599:	mov    rax,r13
  40e59c:	cmp    r10d,0x1
  40e5a0:	jbe    0x40eb93
  40e5a6:	mov    rsi,QWORD PTR [rax]
  40e5a9:	add    r13,0x8
  40e5ad:	test   rsi,rsi
  40e5b0:	je     0x40e675
  40e5b6:	mov    rcx,rsi
  40e5b9:	call   0x4113b8
  40e5be:	mov    edx,eax
  40e5c0:	mov    r8,r12
  40e5c3:	mov    rcx,rsi
  40e5c6:	call   0x40ce30
  40e5cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e5d0:	movzx  eax,BYTE PTR [rbx]
  40e5d3:	jmp    0x40e4f0
  40e5d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e5e0:	test   r14d,r14d
  40e5e3:	jne    0x40e5f3
  40e5e5:	cmp    DWORD PTR [rsp+0x88],r15d
  40e5ed:	je     0x40ed5b
  40e5f3:	mov    rdx,QWORD PTR [r13+0x0]
  40e5f7:	lea    rsi,[r13+0x8]
  40e5fb:	mov    r8,r12
  40e5fe:	mov    ecx,0x78
  40e603:	mov    QWORD PTR [rsp+0x78],0x0
  40e60c:	mov    r13,rsi
  40e60f:	mov    QWORD PTR [rsp+0x70],rdx
  40e614:	call   0x40db10
  40e619:	jmp    0x40e5d0
  40e61b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e620:	cmp    r10d,0x5
  40e624:	mov    rax,QWORD PTR [r13+0x0]
  40e628:	je     0x40ec9a
  40e62e:	cmp    r10d,0x1
  40e632:	je     0x40ed24
  40e638:	cmp    r10d,0x2
  40e63c:	je     0x40e648
  40e63e:	cmp    r10d,0x3
  40e642:	je     0x40edcc
  40e648:	mov    edx,DWORD PTR [rsp+0xa4]
  40e64f:	add    r13,0x8
  40e653:	mov    DWORD PTR [rax],edx
  40e655:	jmp    0x40e5d0
  40e65a:	nop    WORD PTR [rax+rax*1+0x0]
  40e660:	mov    ecx,DWORD PTR [rsp+0x34]
  40e664:	call   0x4113c0
  40e669:	test   rax,rax
  40e66c:	mov    rsi,rax
  40e66f:	jne    0x40e5b6
  40e675:	mov    edx,0x6
  40e67a:	lea    rsi,[rip+0x9b75]        # 0x4181f6
  40e681:	jmp    0x40e5c0
  40e686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e690:	movzx  eax,BYTE PTR [rdi+0x1]
  40e694:	mov    r10d,0x2
  40e69a:	mov    r14d,0x4
  40e6a0:	cmp    al,0x6c
  40e6a2:	jne    0x40e6d0
  40e6a4:	lea    rbx,[rdi+0x2]
  40e6a8:	movzx  eax,BYTE PTR [rdi+0x2]
  40e6ac:	mov    r10d,0x3
  40e6b2:	mov    r14d,0x4
  40e6b8:	jmp    0x40e6d0
  40e6ba:	nop    WORD PTR [rax+rax*1+0x0]
  40e6c0:	movzx  eax,BYTE PTR [rdi+0x1]
  40e6c4:	mov    r10d,0x3
  40e6ca:	mov    r14d,0x4
  40e6d0:	test   al,al
  40e6d2:	mov    rdi,rbx
  40e6d5:	jne    0x40e538
  40e6db:	mov    rbx,rdi
  40e6de:	jmp    0x40e4f0
  40e6e3:	mov    eax,DWORD PTR [rsp+0x88]
  40e6ea:	mov    rdx,r13
  40e6ed:	add    r13,0x8
  40e6f1:	or     eax,0x20
  40e6f4:	test   al,0x4
  40e6f6:	mov    DWORD PTR [rsp+0x88],eax
  40e6fd:	je     0x40e95b
  40e703:	mov    rax,QWORD PTR [rdx]
  40e706:	mov    rcx,QWORD PTR [rsp+0x20]
  40e70b:	mov    rdx,r12
  40e70e:	fld    TBYTE PTR [rax]
  40e710:	fstp   TBYTE PTR [rsp+0x50]
  40e714:	call   0x40d970
  40e719:	jmp    0x40e5d0
  40e71e:	xchg   ax,ax
  40e720:	movzx  eax,BYTE PTR [rdi+0x1]
  40e724:	mov    r10d,0x1
  40e72a:	mov    r14d,0x4
  40e730:	cmp    al,0x68
  40e732:	jne    0x40e6d0
  40e734:	lea    rbx,[rdi+0x2]
  40e738:	movzx  eax,BYTE PTR [rdi+0x2]
  40e73c:	mov    r10d,0x5
  40e742:	mov    r14d,0x4
  40e748:	jmp    0x40e6d0
  40e74a:	nop    WORD PTR [rax+rax*1+0x0]
  40e750:	mov    eax,DWORD PTR [rsp+0x88]
  40e757:	mov    rdx,r13
  40e75a:	add    r13,0x8
  40e75e:	or     eax,0x20
  40e761:	test   al,0x4
  40e763:	mov    DWORD PTR [rsp+0x88],eax
  40e76a:	je     0x40e989
  40e770:	mov    rax,QWORD PTR [rdx]
  40e773:	mov    rcx,QWORD PTR [rsp+0x20]
  40e778:	mov    rdx,r12
  40e77b:	fld    TBYTE PTR [rax]
  40e77d:	fstp   TBYTE PTR [rsp+0x50]
  40e781:	call   0x40d430
  40e786:	jmp    0x40e5d0
  40e78b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e790:	mov    eax,DWORD PTR [rsp+0x88]
  40e797:	mov    rdx,r13
  40e79a:	add    r13,0x8
  40e79e:	or     eax,0x20
  40e7a1:	test   al,0x4
  40e7a3:	mov    DWORD PTR [rsp+0x88],eax
  40e7aa:	je     0x40e9b7
  40e7b0:	mov    rax,QWORD PTR [rdx]
  40e7b3:	mov    rcx,QWORD PTR [rsp+0x20]
  40e7b8:	mov    rdx,r12
  40e7bb:	fld    TBYTE PTR [rax]
  40e7bd:	fstp   TBYTE PTR [rsp+0x50]
  40e7c1:	call   0x40d8c0
  40e7c6:	jmp    0x40e5d0
  40e7cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e7d0:	cmp    r10d,0x3
  40e7d4:	je     0x40ecac
  40e7da:	cmp    r10d,0x2
  40e7de:	je     0x40ed49
  40e7e4:	mov    eax,DWORD PTR [r13+0x0]
  40e7e8:	cmp    r10d,0x1
  40e7ec:	lea    rdx,[r13+0x8]
  40e7f0:	mov    QWORD PTR [rsp+0x70],rax
  40e7f5:	je     0x40ed8b
  40e7fb:	cmp    r10d,0x5
  40e7ff:	mov    r13,rdx
  40e802:	je     0x40ede0
  40e808:	cmp    ecx,0x75
  40e80b:	je     0x40ecec
  40e811:	mov    r8,r12
  40e814:	mov    rdx,rax
  40e817:	call   0x40db10
  40e81c:	jmp    0x40e5d0
  40e821:	sub    r10d,0x2
  40e825:	mov    rax,r13
  40e828:	mov    DWORD PTR [rsp+0x90],0xffffffff
  40e833:	cmp    r10d,0x1
  40e837:	jbe    0x40e9db
  40e83d:	mov    eax,DWORD PTR [rax]
  40e83f:	mov    rcx,QWORD PTR [rsp+0x28]
  40e844:	mov    r8,r12
  40e847:	mov    edx,0x1
  40e84c:	add    r13,0x8
  40e850:	mov    BYTE PTR [rsp+0x70],al
  40e854:	call   0x40ce30
  40e859:	jmp    0x40e5d0
  40e85e:	xchg   ax,ax
  40e860:	mov    eax,DWORD PTR [rsp+0x88]
  40e867:	mov    rdx,r13
  40e86a:	add    r13,0x8
  40e86e:	or     eax,0x20
  40e871:	test   al,0x4
  40e873:	mov    DWORD PTR [rsp+0x88],eax
  40e87a:	je     0x40ea18
  40e880:	mov    rax,QWORD PTR [rdx]
  40e883:	mov    rcx,QWORD PTR [rsp+0x20]
  40e888:	mov    rdx,r12
  40e88b:	fld    TBYTE PTR [rax]
  40e88d:	fstp   TBYTE PTR [rsp+0x50]
  40e891:	call   0x40ded0
  40e896:	jmp    0x40e5d0
  40e89b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e8a0:	or     DWORD PTR [rsp+0x88],0x80
  40e8ab:	cmp    r10d,0x3
  40e8af:	je     0x40ec88
  40e8b5:	cmp    r10d,0x2
  40e8b9:	je     0x40ed37
  40e8bf:	movsxd rcx,DWORD PTR [r13+0x0]
  40e8c3:	cmp    r10d,0x1
  40e8c7:	lea    rax,[r13+0x8]
  40e8cb:	mov    QWORD PTR [rsp+0x70],rcx
  40e8d0:	je     0x40ed9d
  40e8d6:	cmp    r10d,0x5
  40e8da:	mov    r13,rax
  40e8dd:	je     0x40edef
  40e8e3:	mov    rax,rcx
  40e8e6:	mov    rdx,r12
  40e8e9:	sar    rax,0x3f
  40e8ed:	mov    QWORD PTR [rsp+0x78],rax
  40e8f2:	call   0x40d520
  40e8f7:	jmp    0x40e5d0
  40e8fc:	nop    DWORD PTR [rax+0x0]
  40e900:	or     DWORD PTR [rsp+0x88],0x4
  40e908:	movzx  eax,BYTE PTR [rdi+0x1]
  40e90c:	mov    r14d,0x4
  40e912:	jmp    0x40e6d0
  40e917:	nop    WORD PTR [rax+rax*1+0x0]
  40e920:	movzx  eax,BYTE PTR [rdi+0x1]
  40e924:	cmp    al,0x36
  40e926:	je     0x40ec68
  40e92c:	cmp    al,0x33
  40e92e:	je     0x40ecfc
  40e934:	mov    r10d,0x3
  40e93a:	mov    r14d,0x4
  40e940:	jmp    0x40e6d0
  40e945:	mov    eax,DWORD PTR [rsp+0x88]
  40e94c:	mov    rdx,r13
  40e94f:	add    r13,0x8
  40e953:	test   al,0x4
  40e955:	jne    0x40e703
  40e95b:	mov    rcx,QWORD PTR [rsp+0x20]
  40e960:	fld    QWORD PTR [rdx]
  40e962:	mov    rdx,r12
  40e965:	fstp   TBYTE PTR [rsp+0x50]
  40e969:	call   0x40d970
  40e96e:	jmp    0x40e5d0
  40e973:	mov    eax,DWORD PTR [rsp+0x88]
  40e97a:	mov    rdx,r13
  40e97d:	add    r13,0x8
  40e981:	test   al,0x4
  40e983:	jne    0x40e770
  40e989:	mov    rcx,QWORD PTR [rsp+0x20]
  40e98e:	fld    QWORD PTR [rdx]
  40e990:	mov    rdx,r12
  40e993:	fstp   TBYTE PTR [rsp+0x50]
  40e997:	call   0x40d430
  40e99c:	jmp    0x40e5d0
  40e9a1:	mov    eax,DWORD PTR [rsp+0x88]
  40e9a8:	mov    rdx,r13
  40e9ab:	add    r13,0x8
  40e9af:	test   al,0x4
  40e9b1:	jne    0x40e7b0
  40e9b7:	mov    rcx,QWORD PTR [rsp+0x20]
  40e9bc:	fld    QWORD PTR [rdx]
  40e9be:	mov    rdx,r12
  40e9c1:	fstp   TBYTE PTR [rsp+0x50]
  40e9c5:	call   0x40d8c0
  40e9ca:	jmp    0x40e5d0
  40e9cf:	nop
  40e9d0:	mov    DWORD PTR [rsp+0x90],0xffffffff
  40e9db:	mov    eax,DWORD PTR [r13+0x0]
  40e9df:	mov    rcx,QWORD PTR [rsp+0x28]
  40e9e4:	lea    rsi,[r13+0x8]
  40e9e8:	mov    r8,r12
  40e9eb:	mov    edx,0x1
  40e9f0:	mov    r13,rsi
  40e9f3:	mov    WORD PTR [rsp+0x70],ax
  40e9f8:	call   0x40cd10
  40e9fd:	jmp    0x40e5d0
  40ea02:	mov    eax,DWORD PTR [rsp+0x88]
  40ea09:	mov    rdx,r13
  40ea0c:	add    r13,0x8
  40ea10:	test   al,0x4
  40ea12:	jne    0x40e880
  40ea18:	mov    rcx,QWORD PTR [rsp+0x20]
  40ea1d:	fld    QWORD PTR [rdx]
  40ea1f:	mov    rdx,r12
  40ea22:	fstp   TBYTE PTR [rsp+0x50]
  40ea26:	call   0x40ded0
  40ea2b:	jmp    0x40e5d0
  40ea30:	test   r14d,r14d
  40ea33:	jne    0x40ebd0
  40ea39:	or     DWORD PTR [rsp+0x88],0x200
  40ea44:	movzx  eax,BYTE PTR [rdi+0x1]
  40ea48:	jmp    0x40e6d0
  40ea4d:	nop    DWORD PTR [rax]
  40ea50:	cmp    r14d,0x1
  40ea54:	jbe    0x40ecbe
  40ea5a:	movzx  eax,BYTE PTR [rdi+0x1]
  40ea5e:	mov    r14d,0x4
  40ea64:	jmp    0x40e6d0
  40ea69:	nop    DWORD PTR [rax+0x0]
  40ea70:	test   r14d,r14d
  40ea73:	jne    0x40eaf9
  40ea79:	or     DWORD PTR [rsp+0x88],0x400
  40ea84:	movzx  eax,BYTE PTR [rdi+0x1]
  40ea88:	jmp    0x40e6d0
  40ea8d:	nop    DWORD PTR [rax]
  40ea90:	test   r14d,r14d
  40ea93:	jne    0x40eaf9
  40ea95:	or     DWORD PTR [rsp+0x88],0x100
  40eaa0:	movzx  eax,BYTE PTR [rdi+0x1]
  40eaa4:	jmp    0x40e6d0
  40eaa9:	nop    DWORD PTR [rax+0x0]
  40eab0:	test   r14d,r14d
  40eab3:	jne    0x40eaf9
  40eab5:	or     DWORD PTR [rsp+0x88],0x800
  40eac0:	movzx  eax,BYTE PTR [rdi+0x1]
  40eac4:	jmp    0x40e6d0
  40eac9:	nop    DWORD PTR [rax+0x0]
  40ead0:	test   r14d,r14d
  40ead3:	jne    0x40eaf9
  40ead5:	or     DWORD PTR [rsp+0x88],0x40
  40eadd:	movzx  eax,BYTE PTR [rdi+0x1]
  40eae1:	jmp    0x40e6d0
  40eae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eaf0:	test   r14d,r14d
  40eaf3:	je     0x40ec02
  40eaf9:	movzx  eax,BYTE PTR [rdi+0x1]
  40eafd:	jmp    0x40e6d0
  40eb02:	mov    rdx,r12
  40eb05:	call   0x40ccb0
  40eb0a:	jmp    0x40e5d0
  40eb0f:	nop
  40eb10:	test   r11,r11
  40eb13:	je     0x40ea5a
  40eb19:	test   r14d,0xfffffffd
  40eb20:	jne    0x40ebf0
  40eb26:	mov    eax,DWORD PTR [r13+0x0]
  40eb2a:	lea    rdx,[r13+0x8]
  40eb2e:	test   eax,eax
  40eb30:	mov    DWORD PTR [r11],eax
  40eb33:	js     0x40edb0
  40eb39:	movzx  eax,BYTE PTR [rdi+0x1]
  40eb3d:	mov    r13,rdx
  40eb40:	xor    r11d,r11d
  40eb43:	jmp    0x40e6d0
  40eb48:	nop    DWORD PTR [rax+rax*1+0x0]
  40eb50:	sub    eax,0x30
  40eb53:	cmp    al,0x9
  40eb55:	ja     0x40ed76
  40eb5b:	cmp    r14d,0x3
  40eb5f:	ja     0x40ed76
  40eb65:	test   r14d,r14d
  40eb68:	jne    0x40ebda
  40eb6a:	mov    r14d,0x1
  40eb70:	test   r11,r11
  40eb73:	je     0x40eaf9
  40eb75:	mov    eax,DWORD PTR [r11]
  40eb78:	test   eax,eax
  40eb7a:	js     0x40ecdd
  40eb80:	lea    eax,[rax+rax*4]
  40eb83:	lea    eax,[rcx+rax*2-0x30]
  40eb87:	mov    DWORD PTR [r11],eax
  40eb8a:	movzx  eax,BYTE PTR [rdi+0x1]
  40eb8e:	jmp    0x40e6d0
  40eb93:	mov    rsi,QWORD PTR [r13+0x0]
  40eb97:	lea    rax,[rip+0x964a]        # 0x4181e8
  40eb9e:	lea    rdi,[r13+0x8]
  40eba2:	mov    r13,rdi
  40eba5:	test   rsi,rsi
  40eba8:	cmove  rsi,rax
  40ebac:	mov    rcx,rsi
  40ebaf:	call   0x411380
  40ebb4:	mov    r8,r12
  40ebb7:	mov    edx,eax
  40ebb9:	mov    rcx,rsi
  40ebbc:	call   0x40cd10
  40ebc1:	jmp    0x40e5d0
  40ebc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ebd0:	cmp    r14d,0x3
  40ebd4:	ja     0x40ed76
  40ebda:	cmp    r14d,0x2
  40ebde:	mov    eax,0x3
  40ebe3:	cmove  r14d,eax
  40ebe7:	jmp    0x40eb70
  40ebe9:	nop    DWORD PTR [rax+0x0]
  40ebf0:	movzx  eax,BYTE PTR [rdi+0x1]
  40ebf4:	xor    r11d,r11d
  40ebf7:	mov    r14d,0x4
  40ebfd:	jmp    0x40e6d0
  40ec02:	mov    DWORD PTR [rsp+0x4c],r10d
  40ec07:	mov    QWORD PTR [rsp+0x40],r11
  40ec0c:	or     DWORD PTR [rsp+0x88],0x1000
  40ec17:	mov    DWORD PTR [rsp+0x70],0x0
  40ec1f:	call   0x411430
  40ec24:	mov    r9,QWORD PTR [rsp+0x28]
  40ec29:	mov    rdx,QWORD PTR [rax+0x8]
  40ec2d:	mov    r8d,0x10
  40ec33:	mov    rcx,QWORD PTR [rsp+0x38]
  40ec38:	call   0x40c710
  40ec3d:	test   eax,eax
  40ec3f:	mov    r11,QWORD PTR [rsp+0x40]
  40ec44:	mov    r10d,DWORD PTR [rsp+0x4c]
  40ec49:	jle    0x40ec58
  40ec4b:	movzx  edx,WORD PTR [rsp+0x6e]
  40ec50:	mov    WORD PTR [rsp+0xa0],dx
  40ec58:	mov    DWORD PTR [rsp+0x9c],eax
  40ec5f:	movzx  eax,BYTE PTR [rdi+0x1]
  40ec63:	jmp    0x40e6d0
  40ec68:	cmp    BYTE PTR [rdi+0x2],0x34
  40ec6c:	je     0x40edff
  40ec72:	mov    eax,0x36
  40ec77:	mov    r10d,0x3
  40ec7d:	mov    r14d,0x4
  40ec83:	jmp    0x40e6d0
  40ec88:	mov    rcx,QWORD PTR [r13+0x0]
  40ec8c:	add    r13,0x8
  40ec90:	mov    QWORD PTR [rsp+0x70],rcx
  40ec95:	jmp    0x40e8e3
  40ec9a:	mov    edx,DWORD PTR [rsp+0xa4]
  40eca1:	add    r13,0x8
  40eca5:	mov    BYTE PTR [rax],dl
  40eca7:	jmp    0x40e5d0
  40ecac:	mov    rax,QWORD PTR [r13+0x0]
  40ecb0:	add    r13,0x8
  40ecb4:	mov    QWORD PTR [rsp+0x70],rax
  40ecb9:	jmp    0x40e808
  40ecbe:	mov    DWORD PTR [rsp+0x90],0x0
  40ecc9:	movzx  eax,BYTE PTR [rdi+0x1]
  40eccd:	lea    r11,[r12+0x10]
  40ecd2:	mov    r14d,0x2
  40ecd8:	jmp    0x40e6d0
  40ecdd:	sub    ecx,0x30
  40ece0:	movzx  eax,BYTE PTR [rdi+0x1]
  40ece4:	mov    DWORD PTR [r11],ecx
  40ece7:	jmp    0x40e6d0
  40ecec:	mov    rdx,r12
  40ecef:	mov    rcx,rax
  40ecf2:	call   0x40d520
  40ecf7:	jmp    0x40e5d0
  40ecfc:	cmp    BYTE PTR [rdi+0x2],0x32
  40ed00:	mov    eax,0x33
  40ed05:	jne    0x40e934
  40ed0b:	lea    rbx,[rdi+0x3]
  40ed0f:	movzx  eax,BYTE PTR [rdi+0x3]
  40ed13:	mov    r10d,0x2
  40ed19:	mov    r14d,0x4
  40ed1f:	jmp    0x40e6d0
  40ed24:	mov    edx,DWORD PTR [rsp+0xa4]
  40ed2b:	add    r13,0x8
  40ed2f:	mov    WORD PTR [rax],dx
  40ed32:	jmp    0x40e5d0
  40ed37:	movsxd rcx,DWORD PTR [r13+0x0]
  40ed3b:	add    r13,0x8
  40ed3f:	mov    QWORD PTR [rsp+0x70],rcx
  40ed44:	jmp    0x40e8e3
  40ed49:	mov    eax,DWORD PTR [r13+0x0]
  40ed4d:	add    r13,0x8
  40ed51:	mov    QWORD PTR [rsp+0x70],rax
  40ed56:	jmp    0x40e808
  40ed5b:	mov    eax,DWORD PTR [rsp+0x48]
  40ed5f:	mov    DWORD PTR [rsp+0x90],0x10
  40ed6a:	mov    DWORD PTR [rsp+0x88],eax
  40ed71:	jmp    0x40e5f3
  40ed76:	mov    rdx,r12
  40ed79:	mov    ecx,0x25
  40ed7e:	mov    rbx,rsi
  40ed81:	call   0x40ccb0
  40ed86:	jmp    0x40e5d0
  40ed8b:	movzx  eax,WORD PTR [rsp+0x70]
  40ed90:	mov    r13,rdx
  40ed93:	mov    QWORD PTR [rsp+0x70],rax
  40ed98:	jmp    0x40e808
  40ed9d:	movsx  rcx,WORD PTR [rsp+0x70]
  40eda3:	mov    r13,rax
  40eda6:	mov    QWORD PTR [rsp+0x70],rcx
  40edab:	jmp    0x40e8e3
  40edb0:	test   r14d,r14d
  40edb3:	jne    0x40ee18
  40edb5:	or     DWORD PTR [rsp+0x88],0x400
  40edc0:	neg    DWORD PTR [rsp+0x8c]
  40edc7:	jmp    0x40eb39
  40edcc:	movsxd rdx,DWORD PTR [rsp+0xa4]
  40edd4:	add    r13,0x8
  40edd8:	mov    QWORD PTR [rax],rdx
  40eddb:	jmp    0x40e5d0
  40ede0:	movzx  eax,BYTE PTR [rsp+0x70]
  40ede5:	mov    QWORD PTR [rsp+0x70],rax
  40edea:	jmp    0x40e808
  40edef:	movsx  rcx,BYTE PTR [rsp+0x70]
  40edf5:	mov    QWORD PTR [rsp+0x70],rcx
  40edfa:	jmp    0x40e8e3
  40edff:	lea    rbx,[rdi+0x3]
  40ee03:	movzx  eax,BYTE PTR [rdi+0x3]
  40ee07:	mov    r10d,0x3
  40ee0d:	mov    r14d,0x4
  40ee13:	jmp    0x40e6d0
  40ee18:	mov    DWORD PTR [rsp+0x90],0xffffffff
  40ee23:	movzx  eax,BYTE PTR [rdi+0x1]
  40ee27:	mov    r13,rdx
  40ee2a:	xor    r11d,r11d
  40ee2d:	jmp    0x40e6d0
  40ee32:	nop
  40ee33:	nop
  40ee34:	nop
  40ee35:	nop
  40ee36:	nop
  40ee37:	nop
  40ee38:	nop
  40ee39:	nop
  40ee3a:	nop
  40ee3b:	nop
  40ee3c:	nop
  40ee3d:	nop
  40ee3e:	nop
  40ee3f:	nop
  40ee40:	push   rbx
  40ee41:	sub    rsp,0x20
  40ee45:	xor    ebx,ebx
  40ee47:	cmp    ecx,0x1b
  40ee4a:	jle    0x40ee5d
  40ee4c:	mov    eax,0x4
  40ee51:	add    eax,eax
  40ee53:	add    ebx,0x1
  40ee56:	lea    edx,[rax+0x17]
  40ee59:	cmp    edx,ecx
  40ee5b:	jl     0x40ee51
  40ee5d:	mov    ecx,ebx
  40ee5f:	call   0x410730
  40ee64:	mov    DWORD PTR [rax],ebx
  40ee66:	add    rax,0x4
  40ee6a:	add    rsp,0x20
  40ee6e:	pop    rbx
  40ee6f:	ret    
  40ee70:	push   rsi
  40ee71:	push   rbx
  40ee72:	sub    rsp,0x28
  40ee76:	mov    rbx,rcx
  40ee79:	mov    ecx,r8d
  40ee7c:	mov    rsi,rdx
  40ee7f:	call   0x40ee40
  40ee84:	movzx  ecx,BYTE PTR [rbx]
  40ee87:	lea    r8,[rbx+0x1]
  40ee8b:	test   cl,cl
  40ee8d:	mov    BYTE PTR [rax],cl
  40ee8f:	mov    rcx,rax
  40ee92:	je     0x40eea9
  40ee94:	add    r8,0x1
  40ee98:	movzx  r9d,BYTE PTR [r8-0x1]
  40ee9d:	add    rcx,0x1
  40eea1:	test   r9b,r9b
  40eea4:	mov    BYTE PTR [rcx],r9b
  40eea7:	jne    0x40ee94
  40eea9:	test   rsi,rsi
  40eeac:	je     0x40eeb1
  40eeae:	mov    QWORD PTR [rsi],rcx
  40eeb1:	add    rsp,0x28
  40eeb5:	pop    rbx
  40eeb6:	pop    rsi
  40eeb7:	ret    
  40eeb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40eec0:	mov    edx,0x1
  40eec5:	mov    rax,rcx
  40eec8:	mov    ecx,DWORD PTR [rcx-0x4]
  40eecb:	shl    edx,cl
  40eecd:	mov    DWORD PTR [rax+0x4],ecx
  40eed0:	lea    rcx,[rax-0x4]
  40eed4:	mov    DWORD PTR [rax+0x8],edx
  40eed7:	jmp    0x410840
  40eedc:	nop    DWORD PTR [rax+0x0]
  40eee0:	push   r15
  40eee2:	push   r14
  40eee4:	push   r13
  40eee6:	push   r12
  40eee8:	push   rbp
  40eee9:	push   rdi
  40eeea:	push   rsi
  40eeeb:	push   rbx
  40eeec:	sub    rsp,0x38
  40eef0:	xor    eax,eax
  40eef2:	mov    edi,DWORD PTR [rdx+0x14]
  40eef5:	cmp    edi,DWORD PTR [rcx+0x14]
  40eef8:	mov    r15,rdx
  40eefb:	jg     0x40f049
  40ef01:	sub    edi,0x1
  40ef04:	lea    rbx,[rdx+0x18]
  40ef08:	lea    r12,[rcx+0x18]
  40ef0c:	movsxd r13,edi
  40ef0f:	xor    edx,edx
  40ef11:	shl    r13,0x2
  40ef15:	lea    rbp,[rbx+r13*1]
  40ef19:	add    r13,r12
  40ef1c:	mov    eax,DWORD PTR [rbp+0x0]
  40ef1f:	lea    r8d,[rax+0x1]
  40ef23:	mov    eax,DWORD PTR [r13+0x0]
  40ef27:	div    r8d
  40ef2a:	test   eax,eax
  40ef2c:	mov    r14d,eax
  40ef2f:	mov    DWORD PTR [rsp+0x2c],eax
  40ef33:	je     0x40efc7
  40ef39:	mov    edx,eax
  40ef3b:	mov    rsi,rbx
  40ef3e:	mov    r11,r12
  40ef41:	xor    eax,eax
  40ef43:	xor    r10d,r10d
  40ef46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ef50:	add    rsi,0x4
  40ef54:	mov    r8d,DWORD PTR [rsi-0x4]
  40ef58:	mov    r9d,DWORD PTR [r11]
  40ef5b:	add    r11,0x4
  40ef5f:	imul   r8,rdx
  40ef63:	add    r8,rax
  40ef66:	mov    rax,r8
  40ef69:	mov    r8d,r8d
  40ef6c:	sub    r9,r8
  40ef6f:	shr    rax,0x20
  40ef73:	sub    r9,r10
  40ef76:	mov    r10,r9
  40ef79:	mov    DWORD PTR [r11-0x4],r9d
  40ef7d:	shr    r10,0x20
  40ef81:	and    r10d,0x1
  40ef85:	cmp    rbp,rsi
  40ef88:	jae    0x40ef50
  40ef8a:	mov    r11d,DWORD PTR [r13+0x0]
  40ef8e:	test   r11d,r11d
  40ef91:	jne    0x40efc7
  40ef93:	lea    rax,[r13-0x4]
  40ef97:	cmp    r12,rax
  40ef9a:	jae    0x40efc4
  40ef9c:	mov    r10d,DWORD PTR [r13-0x4]
  40efa0:	test   r10d,r10d
  40efa3:	je     0x40efb8
  40efa5:	jmp    0x40efc4
  40efa7:	nop    WORD PTR [rax+rax*1+0x0]
  40efb0:	mov    r9d,DWORD PTR [rax]
  40efb3:	test   r9d,r9d
  40efb6:	jne    0x40efc4
  40efb8:	sub    rax,0x4
  40efbc:	sub    edi,0x1
  40efbf:	cmp    r12,rax
  40efc2:	jb     0x40efb0
  40efc4:	mov    DWORD PTR [rcx+0x14],edi
  40efc7:	mov    rdx,r15
  40efca:	mov    rsi,rcx
  40efcd:	call   0x410d60
  40efd2:	test   eax,eax
  40efd4:	js     0x40f045
  40efd6:	lea    eax,[r14+0x1]
  40efda:	mov    rcx,r12
  40efdd:	xor    edx,edx
  40efdf:	mov    DWORD PTR [rsp+0x2c],eax
  40efe3:	add    rbx,0x4
  40efe7:	mov    eax,DWORD PTR [rcx]
  40efe9:	mov    r8d,DWORD PTR [rbx-0x4]
  40efed:	add    rcx,0x4
  40eff1:	sub    rax,r8
  40eff4:	sub    rax,rdx
  40eff7:	mov    rdx,rax
  40effa:	mov    DWORD PTR [rcx-0x4],eax
  40effd:	shr    rdx,0x20
  40f001:	and    edx,0x1
  40f004:	cmp    rbp,rbx
  40f007:	jae    0x40efe3
  40f009:	movsxd rax,edi
  40f00c:	lea    rdx,[r12+rax*4]
  40f010:	mov    r8d,DWORD PTR [rdx]
  40f013:	test   r8d,r8d
  40f016:	jne    0x40f045
  40f018:	lea    rax,[rdx-0x4]
  40f01c:	cmp    r12,rax
  40f01f:	jae    0x40f042
  40f021:	mov    ecx,DWORD PTR [rdx-0x4]
  40f024:	test   ecx,ecx
  40f026:	je     0x40f036
  40f028:	jmp    0x40f042
  40f02a:	nop    WORD PTR [rax+rax*1+0x0]
  40f030:	mov    edx,DWORD PTR [rax]
  40f032:	test   edx,edx
  40f034:	jne    0x40f042
  40f036:	sub    rax,0x4
  40f03a:	sub    edi,0x1
  40f03d:	cmp    r12,rax
  40f040:	jb     0x40f030
  40f042:	mov    DWORD PTR [rsi+0x14],edi
  40f045:	mov    eax,DWORD PTR [rsp+0x2c]
  40f049:	add    rsp,0x38
  40f04d:	pop    rbx
  40f04e:	pop    rsi
  40f04f:	pop    rdi
  40f050:	pop    rbp
  40f051:	pop    r12
  40f053:	pop    r13
  40f055:	pop    r14
  40f057:	pop    r15
  40f059:	ret    
  40f05a:	nop
  40f05b:	nop
  40f05c:	nop
  40f05d:	nop
  40f05e:	nop
  40f05f:	nop
  40f060:	push   r15
  40f062:	push   r14
  40f064:	push   r13
  40f066:	push   r12
  40f068:	push   rbp
  40f069:	push   rdi
  40f06a:	push   rsi
  40f06b:	push   rbx
  40f06c:	sub    rsp,0xb8
  40f073:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  40f07b:	mov    r12d,DWORD PTR [r9]
  40f07e:	mov    eax,r12d
  40f081:	and    eax,0xffffffcf
  40f084:	mov    DWORD PTR [r9],eax
  40f087:	mov    eax,r12d
  40f08a:	and    eax,0x7
  40f08d:	cmp    eax,0x4
  40f090:	ja     0x4104c3
  40f096:	mov    r13d,edx
  40f099:	lea    rdx,[rip+0x92f0]        # 0x418390
  40f0a0:	mov    QWORD PTR [rsp+0x28],r9
  40f0a5:	mov    r15,r8
  40f0a8:	mov    rbp,rcx
  40f0ab:	movsxd rax,DWORD PTR [rdx+rax*4]
  40f0af:	add    rdx,rax
  40f0b2:	jmp    rdx
  40f0b4:	mov    edi,DWORD PTR [rcx]
  40f0b6:	xor    ecx,ecx
  40f0b8:	cmp    edi,0x20
  40f0bb:	jle    0x40f0cb
  40f0bd:	mov    eax,0x20
  40f0c2:	add    eax,eax
  40f0c4:	add    ecx,0x1
  40f0c7:	cmp    edi,eax
  40f0c9:	jg     0x40f0c2
  40f0cb:	call   0x410730
  40f0d0:	mov    rsi,rax
  40f0d3:	lea    eax,[rdi-0x1]
  40f0d6:	lea    r9,[rsi+0x18]
  40f0da:	sar    eax,0x5
  40f0dd:	cdqe   
  40f0df:	mov    rdx,r9
  40f0e2:	lea    r11,[r15+rax*4]
  40f0e6:	mov    rax,r15
  40f0e9:	nop    DWORD PTR [rax+0x0]
  40f0f0:	mov    ecx,DWORD PTR [rax]
  40f0f2:	add    rax,0x4
  40f0f6:	add    rdx,0x4
  40f0fa:	cmp    r11,rax
  40f0fd:	mov    DWORD PTR [rdx-0x4],ecx
  40f100:	jae    0x40f0f0
  40f102:	sub    rdx,r9
  40f105:	sar    rdx,0x2
  40f109:	mov    r14d,edx
  40f10c:	movsxd rdx,edx
  40f10f:	lea    rax,[r9+rdx*4-0x4]
  40f114:	jmp    0x40f12f
  40f116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f120:	sub    rax,0x4
  40f124:	test   edx,edx
  40f126:	mov    r14d,edx
  40f129:	je     0x40f630
  40f12f:	mov    r8d,DWORD PTR [rax]
  40f132:	lea    edx,[r14-0x1]
  40f136:	test   r8d,r8d
  40f139:	je     0x40f120
  40f13b:	movsxd rdx,edx
  40f13e:	mov    DWORD PTR [rsi+0x14],r14d
  40f142:	shl    r14d,0x5
  40f146:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  40f14b:	xor    eax,0x1f
  40f14e:	sub    r14d,eax
  40f151:	mov    rcx,rsi
  40f154:	call   0x4105d0
  40f159:	test   eax,eax
  40f15b:	mov    DWORD PTR [rsp+0x9c],eax
  40f162:	mov    r11d,r13d
  40f165:	jne    0x40f640
  40f16b:	mov    ecx,DWORD PTR [rsi+0x14]
  40f16e:	test   ecx,ecx
  40f170:	jne    0x40f220
  40f176:	mov    rcx,rsi
  40f179:	call   0x410840
  40f17e:	mov    rax,QWORD PTR [rsp+0x130]
  40f186:	mov    rdx,QWORD PTR [rsp+0x138]
  40f18e:	lea    rcx,[rip+0x91f8]        # 0x41838d
  40f195:	mov    r8d,0x1
  40f19b:	mov    DWORD PTR [rax],0x1
  40f1a1:	call   0x40ee70
  40f1a6:	nop
  40f1a7:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  40f1af:	add    rsp,0xb8
  40f1b6:	pop    rbx
  40f1b7:	pop    rsi
  40f1b8:	pop    rdi
  40f1b9:	pop    rbp
  40f1ba:	pop    r12
  40f1bc:	pop    r13
  40f1be:	pop    r14
  40f1c0:	pop    r15
  40f1c2:	ret    
  40f1c3:	mov    rax,QWORD PTR [rsp+0x130]
  40f1cb:	mov    rdx,QWORD PTR [rsp+0x138]
  40f1d3:	lea    rcx,[rip+0x91af]        # 0x418389
  40f1da:	mov    r8d,0x3
  40f1e0:	mov    DWORD PTR [rax],0xffff8000
  40f1e6:	call   0x40ee70
  40f1eb:	jmp    0x40f1a7
  40f1ed:	nop    DWORD PTR [rax]
  40f1f0:	mov    rax,QWORD PTR [rsp+0x130]
  40f1f8:	mov    rdx,QWORD PTR [rsp+0x138]
  40f200:	lea    rcx,[rip+0x9179]        # 0x418380
  40f207:	mov    r8d,0x8
  40f20d:	mov    DWORD PTR [rax],0xffff8000
  40f213:	call   0x40ee70
  40f218:	jmp    0x40f1a7
  40f21a:	nop    WORD PTR [rax+rax*1+0x0]
  40f220:	lea    rdx,[rsp+0x9c]
  40f228:	mov    rcx,rsi
  40f22b:	mov    DWORD PTR [rsp+0x30],r11d
  40f230:	call   0x410ef0
  40f235:	movq   rdx,xmm0
  40f23a:	movq   r9,xmm0
  40f23f:	mov    r11d,DWORD PTR [rsp+0x30]
  40f244:	pxor   xmm0,xmm0
  40f248:	shr    rdx,0x20
  40f24c:	mov    r9d,r9d
  40f24f:	and    edx,0xfffff
  40f255:	lea    ecx,[r11+r14*1-0x1]
  40f25a:	or     edx,0x3ff00000
  40f260:	mov    rax,rdx
  40f263:	cvtsi2sd xmm0,ecx
  40f267:	shl    rax,0x20
  40f26b:	mov    ebx,ecx
  40f26d:	or     r9,rax
  40f270:	sar    ebx,0x1f
  40f273:	mov    QWORD PTR [rsp+0x30],r9
  40f278:	mov    eax,ebx
  40f27a:	movsd  xmm1,QWORD PTR [rsp+0x30]
  40f280:	xor    eax,ecx
  40f282:	sub    eax,ebx
  40f284:	subsd  xmm1,QWORD PTR [rip+0x911c]        # 0x4183a8
  40f28c:	sub    eax,0x435
  40f291:	test   eax,eax
  40f293:	mulsd  xmm0,QWORD PTR [rip+0x9125]        # 0x4183c0
  40f29b:	mulsd  xmm1,QWORD PTR [rip+0x910d]        # 0x4183b0
  40f2a3:	addsd  xmm1,QWORD PTR [rip+0x910d]        # 0x4183b8
  40f2ab:	addsd  xmm1,xmm0
  40f2af:	jle    0x40f2c5
  40f2b1:	pxor   xmm0,xmm0
  40f2b5:	cvtsi2sd xmm0,eax
  40f2b9:	mulsd  xmm0,QWORD PTR [rip+0x9107]        # 0x4183c8
  40f2c1:	addsd  xmm1,xmm0
  40f2c5:	cvttsd2si eax,xmm1
  40f2c9:	pxor   xmm6,xmm6
  40f2cd:	ucomisd xmm6,xmm1
  40f2d1:	mov    DWORD PTR [rsp+0x30],eax
  40f2d5:	ja     0x40fb63
  40f2db:	mov    eax,ecx
  40f2dd:	mov    r9d,r9d
  40f2e0:	mov    DWORD PTR [rsp+0x6c],0x1
  40f2e8:	shl    eax,0x14
  40f2eb:	add    eax,edx
  40f2ed:	shl    rax,0x20
  40f2f1:	or     r9,rax
  40f2f4:	cmp    DWORD PTR [rsp+0x30],0x16
  40f2f9:	mov    QWORD PTR [rsp+0x80],r9
  40f301:	ja     0x40f330
  40f303:	movsxd rax,DWORD PTR [rsp+0x30]
  40f308:	mov    rdx,QWORD PTR [rip+0x9401]        # 0x418710
  40f30f:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  40f314:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  40f31d:	jbe    0x40f680
  40f323:	sub    DWORD PTR [rsp+0x30],0x1
  40f328:	mov    DWORD PTR [rsp+0x6c],0x0
  40f330:	mov    eax,r14d
  40f333:	mov    DWORD PTR [rsp+0x50],0x0
  40f33b:	sub    eax,ecx
  40f33d:	sub    eax,0x1
  40f340:	mov    DWORD PTR [rsp+0x40],eax
  40f344:	js     0x40fb50
  40f34a:	mov    eax,DWORD PTR [rsp+0x30]
  40f34e:	test   eax,eax
  40f350:	js     0x40fb30
  40f356:	add    DWORD PTR [rsp+0x40],eax
  40f35a:	mov    DWORD PTR [rsp+0x88],eax
  40f361:	mov    DWORD PTR [rsp+0x58],0x0
  40f369:	cmp    DWORD PTR [rsp+0x120],0x9
  40f371:	ja     0x40f660
  40f377:	cmp    DWORD PTR [rsp+0x120],0x5
  40f37f:	jle    0x40f66b
  40f385:	sub    DWORD PTR [rsp+0x120],0x4
  40f38d:	xor    eax,eax
  40f38f:	cmp    DWORD PTR [rsp+0x120],0x3
  40f397:	je     0x40fd24
  40f39d:	jle    0x40fa83
  40f3a3:	cmp    DWORD PTR [rsp+0x120],0x4
  40f3ab:	mov    DWORD PTR [rsp+0x60],0x1
  40f3b3:	je     0x40f690
  40f3b9:	cmp    DWORD PTR [rsp+0x120],0x5
  40f3c1:	jne    0x40fa99
  40f3c7:	mov    ebx,DWORD PTR [rsp+0x30]
  40f3cb:	add    ebx,DWORD PTR [rsp+0x128]
  40f3d2:	mov    DWORD PTR [rsp+0x8c],ebx
  40f3d9:	add    ebx,0x1
  40f3dc:	test   ebx,ebx
  40f3de:	mov    DWORD PTR [rsp+0x68],ebx
  40f3e2:	mov    ecx,ebx
  40f3e4:	jle    0x40ff60
  40f3ea:	cmp    ebx,0xe
  40f3ed:	mov    DWORD PTR [rsp+0x9c],ebx
  40f3f4:	setbe  bl
  40f3f7:	and    ebx,eax
  40f3f9:	mov    QWORD PTR [rsp+0x78],r9
  40f3fe:	mov    DWORD PTR [rsp+0x70],r11d
  40f403:	call   0x40ee40
  40f408:	mov    QWORD PTR [rsp+0x48],rax
  40f40d:	mov    eax,DWORD PTR [rbp+0xc]
  40f410:	mov    r11d,DWORD PTR [rsp+0x70]
  40f415:	mov    r9,QWORD PTR [rsp+0x78]
  40f41a:	sub    eax,0x1
  40f41d:	mov    DWORD PTR [rsp+0x38],eax
  40f421:	je     0x40f448
  40f423:	mov    ecx,DWORD PTR [rsp+0x38]
  40f427:	mov    eax,0x2
  40f42c:	test   ecx,ecx
  40f42e:	cmovns eax,ecx
  40f431:	and    r12d,0x8
  40f435:	mov    DWORD PTR [rsp+0x38],eax
  40f439:	je     0x40f448
  40f43b:	mov    eax,0x3
  40f440:	sub    eax,DWORD PTR [rsp+0x38]
  40f444:	mov    DWORD PTR [rsp+0x38],eax
  40f448:	test   bl,bl
  40f44a:	je     0x40f740
  40f450:	mov    eax,DWORD PTR [rsp+0x38]
  40f454:	or     eax,DWORD PTR [rsp+0x30]
  40f458:	jne    0x40f740
  40f45e:	mov    eax,DWORD PTR [rsp+0x6c]
  40f462:	mov    DWORD PTR [rsp+0x9c],0x0
  40f46d:	movsd  xmm4,QWORD PTR [rsp+0x80]
  40f476:	test   eax,eax
  40f478:	je     0x40f48c
  40f47a:	movsd  xmm0,QWORD PTR [rip+0x8f56]        # 0x4183d8
  40f482:	ucomisd xmm0,xmm4
  40f486:	ja     0x4102bb
  40f48c:	movapd xmm0,xmm4
  40f490:	mov    r12d,DWORD PTR [rsp+0x68]
  40f495:	addsd  xmm0,xmm4
  40f499:	addsd  xmm0,QWORD PTR [rip+0x8f4f]        # 0x4183f0
  40f4a1:	movq   rdx,xmm0
  40f4a6:	movq   rax,xmm0
  40f4ab:	shr    rdx,0x20
  40f4af:	mov    eax,eax
  40f4b1:	sub    edx,0x3400000
  40f4b7:	shl    rdx,0x20
  40f4bb:	or     rax,rdx
  40f4be:	test   r12d,r12d
  40f4c1:	je     0x40f6f7
  40f4c7:	mov    r9d,DWORD PTR [rsp+0x68]
  40f4cc:	movapd xmm0,xmm4
  40f4d0:	xor    ecx,ecx
  40f4d2:	mov    ebx,DWORD PTR [rsp+0x60]
  40f4d6:	lea    edx,[r9-0x1]
  40f4da:	movsxd rdx,edx
  40f4dd:	test   ebx,ebx
  40f4df:	je     0x410003
  40f4e5:	mov    r10,QWORD PTR [rip+0x9224]        # 0x418710
  40f4ec:	movsd  xmm1,QWORD PTR [rip+0x8f1c]        # 0x418410
  40f4f4:	mov    QWORD PTR [rsp+0x38],rax
  40f4f9:	cvttsd2si eax,xmm0
  40f4fd:	pxor   xmm2,xmm2
  40f501:	mov    DWORD PTR [rsp+0x9c],0x0
  40f50c:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  40f512:	mov    rdx,QWORD PTR [rsp+0x48]
  40f517:	mov    rbx,rdx
  40f51a:	add    rbx,0x1
  40f51e:	cvtsi2sd xmm2,eax
  40f522:	add    eax,0x30
  40f525:	mov    BYTE PTR [rdx],al
  40f527:	movsd  xmm5,QWORD PTR [rsp+0x38]
  40f52d:	subsd  xmm0,xmm2
  40f531:	subsd  xmm1,xmm5
  40f535:	ucomisd xmm1,xmm0
  40f539:	ja     0x40f5d4
  40f53f:	movsd  xmm5,QWORD PTR [rip+0x8e91]        # 0x4183d8
  40f547:	movapd xmm2,xmm5
  40f54b:	subsd  xmm2,xmm0
  40f54f:	ucomisd xmm1,xmm2
  40f553:	ja     0x4100d7
  40f559:	mov    eax,DWORD PTR [rsp+0x9c]
  40f560:	movsd  xmm3,QWORD PTR [rip+0x8e78]        # 0x4183e0
  40f568:	add    eax,0x1
  40f56b:	cmp    r9d,eax
  40f56e:	mov    DWORD PTR [rsp+0x9c],eax
  40f575:	jg     0x40f5ac
  40f577:	jmp    0x40f72e
  40f57c:	nop    DWORD PTR [rax+0x0]
  40f580:	movapd xmm2,xmm5
  40f584:	subsd  xmm2,xmm0
  40f588:	ucomisd xmm1,xmm2
  40f58c:	ja     0x4100d7
  40f592:	mov    eax,DWORD PTR [rsp+0x9c]
  40f599:	add    eax,0x1
  40f59c:	cmp    r9d,eax
  40f59f:	mov    DWORD PTR [rsp+0x9c],eax
  40f5a6:	jle    0x40f72e
  40f5ac:	mulsd  xmm0,xmm3
  40f5b0:	add    rbx,0x1
  40f5b4:	pxor   xmm2,xmm2
  40f5b8:	mulsd  xmm1,xmm3
  40f5bc:	cvttsd2si eax,xmm0
  40f5c0:	cvtsi2sd xmm2,eax
  40f5c4:	add    eax,0x30
  40f5c7:	mov    BYTE PTR [rbx-0x1],al
  40f5ca:	subsd  xmm0,xmm2
  40f5ce:	ucomisd xmm1,xmm0
  40f5d2:	jbe    0x40f580
  40f5d4:	ucomisd xmm0,xmm6
  40f5d8:	lea    ebp,[rcx+0x1]
  40f5db:	jp     0x40f5e3
  40f5dd:	je     0x40ff37
  40f5e3:	mov    r15d,0x10
  40f5e9:	nop    DWORD PTR [rax+0x0]
  40f5f0:	mov    rcx,rsi
  40f5f3:	call   0x410840
  40f5f8:	cmp    QWORD PTR [rsp+0x138],0x0
  40f601:	mov    rax,QWORD PTR [rsp+0x130]
  40f609:	mov    BYTE PTR [rbx],0x0
  40f60c:	mov    DWORD PTR [rax],ebp
  40f60e:	je     0x40f61b
  40f610:	mov    rax,QWORD PTR [rsp+0x138]
  40f618:	mov    QWORD PTR [rax],rbx
  40f61b:	mov    rax,QWORD PTR [rsp+0x28]
  40f620:	or     DWORD PTR [rax],r15d
  40f623:	mov    rax,QWORD PTR [rsp+0x48]
  40f628:	jmp    0x40f1a7
  40f62d:	nop    DWORD PTR [rax]
  40f630:	mov    DWORD PTR [rsi+0x14],0x0
  40f637:	jmp    0x40f151
  40f63c:	nop    DWORD PTR [rax+0x0]
  40f640:	mov    edx,eax
  40f642:	mov    rcx,rsi
  40f645:	call   0x4104d0
  40f64a:	mov    eax,DWORD PTR [rsp+0x9c]
  40f651:	lea    r11d,[r13+rax*1+0x0]
  40f656:	sub    r14d,eax
  40f659:	jmp    0x40f16b
  40f65e:	xchg   ax,ax
  40f660:	mov    DWORD PTR [rsp+0x120],0x0
  40f66b:	add    ecx,0x3fe
  40f671:	cmp    ecx,0x7f7
  40f677:	setbe  al
  40f67a:	jmp    0x40f38f
  40f67f:	nop
  40f680:	mov    DWORD PTR [rsp+0x6c],0x0
  40f688:	jmp    0x40f330
  40f68d:	nop    DWORD PTR [rax]
  40f690:	mov    edx,DWORD PTR [rsp+0x128]
  40f697:	test   edx,edx
  40f699:	jle    0x40ff4b
  40f69f:	cmp    DWORD PTR [rsp+0x128],0xe
  40f6a7:	setbe  bl
  40f6aa:	mov    ecx,DWORD PTR [rsp+0x128]
  40f6b1:	and    ebx,eax
  40f6b3:	mov    DWORD PTR [rsp+0x9c],ecx
  40f6ba:	mov    DWORD PTR [rsp+0x8c],ecx
  40f6c1:	mov    DWORD PTR [rsp+0x68],ecx
  40f6c5:	jmp    0x40f3f9
  40f6ca:	movapd xmm0,xmm4
  40f6ce:	addsd  xmm0,xmm4
  40f6d2:	addsd  xmm0,QWORD PTR [rip+0x8d16]        # 0x4183f0
  40f6da:	movq   rdx,xmm0
  40f6df:	movq   rax,xmm0
  40f6e4:	shr    rdx,0x20
  40f6e8:	mov    eax,eax
  40f6ea:	sub    edx,0x3400000
  40f6f0:	shl    rdx,0x20
  40f6f4:	or     rax,rdx
  40f6f7:	movapd xmm1,xmm4
  40f6fb:	mov    QWORD PTR [rsp+0x38],rax
  40f700:	movsd  xmm0,QWORD PTR [rsp+0x38]
  40f706:	subsd  xmm1,QWORD PTR [rip+0x8cea]        # 0x4183f8
  40f70e:	ucomisd xmm1,xmm0
  40f712:	ja     0x40fff4
  40f718:	movsd  xmm2,QWORD PTR [rip+0x8ce0]        # 0x418400
  40f720:	xorpd  xmm0,xmm2
  40f724:	ucomisd xmm0,xmm1
  40f728:	ja     0x40fb0d
  40f72e:	movq   r9,xmm4
  40f733:	mov    DWORD PTR [rsp+0x38],0x0
  40f73b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f740:	test   r11d,r11d
  40f743:	js     0x40f7e2
  40f749:	movsxd rax,DWORD PTR [rsp+0x30]
  40f74e:	cmp    eax,DWORD PTR [rbp+0x14]
  40f751:	jg     0x40f7e2
  40f757:	mov    ebx,DWORD PTR [rsp+0x68]
  40f75b:	mov    rdx,QWORD PTR [rip+0x8fae]        # 0x418710
  40f762:	test   ebx,ebx
  40f764:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  40f769:	jg     0x40fe73
  40f76f:	mov    eax,DWORD PTR [rsp+0x128]
  40f776:	shr    eax,0x1f
  40f779:	test   al,al
  40f77b:	je     0x40fe73
  40f781:	test   ebx,ebx
  40f783:	jne    0x40fb0d
  40f789:	mulsd  xmm2,QWORD PTR [rip+0x8c67]        # 0x4183f8
  40f791:	mov    QWORD PTR [rsp+0x38],r9
  40f796:	movsd  xmm5,QWORD PTR [rsp+0x38]
  40f79c:	ucomisd xmm2,xmm5
  40f7a0:	jae    0x40fb0d
  40f7a6:	mov    ebp,DWORD PTR [rsp+0x30]
  40f7aa:	xor    r12d,r12d
  40f7ad:	xor    edi,edi
  40f7af:	add    ebp,0x2
  40f7b2:	mov    rax,QWORD PTR [rsp+0x48]
  40f7b7:	mov    r15d,0x20
  40f7bd:	lea    rbx,[rax+0x1]
  40f7c1:	mov    BYTE PTR [rax],0x31
  40f7c4:	mov    rcx,r12
  40f7c7:	call   0x410840
  40f7cc:	test   rdi,rdi
  40f7cf:	je     0x40f5f0
  40f7d5:	mov    rcx,rdi
  40f7d8:	call   0x410840
  40f7dd:	jmp    0x40f5f0
  40f7e2:	mov    r9d,DWORD PTR [rsp+0x60]
  40f7e7:	test   r9d,r9d
  40f7ea:	je     0x40fcf0
  40f7f0:	mov    edx,DWORD PTR [rbp+0x4]
  40f7f3:	sub    edi,r14d
  40f7f6:	mov    ecx,r11d
  40f7f9:	lea    eax,[rdi+0x1]
  40f7fc:	sub    ecx,edi
  40f7fe:	cmp    ecx,edx
  40f800:	mov    DWORD PTR [rsp+0x9c],eax
  40f807:	jge    0x40f83c
  40f809:	mov    ebx,DWORD PTR [rsp+0x120]
  40f810:	lea    ecx,[rbx-0x3]
  40f813:	and    ecx,0xfffffffd
  40f816:	je     0x40f83c
  40f818:	mov    ebx,DWORD PTR [rsp+0x68]
  40f81c:	sub    r11d,edx
  40f81f:	lea    eax,[r11+0x1]
  40f823:	test   ebx,ebx
  40f825:	mov    DWORD PTR [rsp+0x9c],eax
  40f82c:	setg   cl
  40f82f:	cmp    ebx,eax
  40f831:	setl   dl
  40f834:	test   cl,dl
  40f836:	je     0x40ff7f
  40f83c:	cmp    DWORD PTR [rsp+0x120],0x1
  40f844:	jle    0x40ff7f
  40f84a:	mov    ebx,DWORD PTR [rsp+0x58]
  40f84e:	mov    eax,DWORD PTR [rsp+0x68]
  40f852:	mov    r12d,ebx
  40f855:	sub    eax,0x1
  40f858:	sub    r12d,eax
  40f85b:	cmp    ebx,eax
  40f85d:	jge    0x40f873
  40f85f:	mov    edx,eax
  40f861:	sub    edx,DWORD PTR [rsp+0x58]
  40f865:	xor    r12d,r12d
  40f868:	add    DWORD PTR [rsp+0x88],edx
  40f86f:	mov    DWORD PTR [rsp+0x58],eax
  40f873:	mov    eax,DWORD PTR [rsp+0x68]
  40f877:	test   eax,eax
  40f879:	js     0x410212
  40f87f:	mov    ebx,DWORD PTR [rsp+0x50]
  40f883:	mov    DWORD PTR [rsp+0x9c],eax
  40f88a:	mov    ecx,0x1
  40f88f:	add    DWORD PTR [rsp+0x50],eax
  40f893:	add    DWORD PTR [rsp+0x40],eax
  40f897:	call   0x410970
  40f89c:	mov    rdi,rax
  40f89f:	mov    ecx,DWORD PTR [rsp+0x40]
  40f8a3:	test   ecx,ecx
  40f8a5:	mov    eax,ecx
  40f8a7:	jle    0x40f8c5
  40f8a9:	test   ebx,ebx
  40f8ab:	jle    0x40f8c5
  40f8ad:	cmp    ecx,ebx
  40f8af:	cmovg  eax,ebx
  40f8b2:	sub    DWORD PTR [rsp+0x50],eax
  40f8b6:	sub    ecx,eax
  40f8b8:	mov    DWORD PTR [rsp+0x9c],eax
  40f8bf:	sub    ebx,eax
  40f8c1:	mov    DWORD PTR [rsp+0x40],ecx
  40f8c5:	mov    r8d,DWORD PTR [rsp+0x58]
  40f8ca:	test   r8d,r8d
  40f8cd:	jle    0x40f91b
  40f8cf:	mov    ecx,DWORD PTR [rsp+0x60]
  40f8d3:	test   ecx,ecx
  40f8d5:	je     0x40fd10
  40f8db:	test   r12d,r12d
  40f8de:	jle    0x40f90e
  40f8e0:	mov    rcx,rdi
  40f8e3:	mov    edx,r12d
  40f8e6:	call   0x410ad0
  40f8eb:	mov    rdx,rsi
  40f8ee:	mov    rcx,rax
  40f8f1:	mov    rdi,rax
  40f8f4:	call   0x4109a0
  40f8f9:	mov    rcx,rsi
  40f8fc:	mov    QWORD PTR [rsp+0x70],rax
  40f901:	call   0x410840
  40f906:	mov    rax,QWORD PTR [rsp+0x70]
  40f90b:	mov    rsi,rax
  40f90e:	mov    edx,DWORD PTR [rsp+0x58]
  40f912:	sub    edx,r12d
  40f915:	jne    0x40fd14
  40f91b:	mov    ecx,0x1
  40f920:	call   0x410970
  40f925:	mov    r12,rax
  40f928:	mov    eax,DWORD PTR [rsp+0x88]
  40f92f:	test   eax,eax
  40f931:	jle    0x40fa60
  40f937:	mov    rcx,r12
  40f93a:	mov    edx,eax
  40f93c:	call   0x410ad0
  40f941:	cmp    DWORD PTR [rsp+0x120],0x1
  40f949:	mov    r12,rax
  40f94c:	jg     0x40f958
  40f94e:	cmp    r14d,0x1
  40f952:	je     0x40fa1c
  40f958:	xor    ebp,ebp
  40f95a:	mov    eax,DWORD PTR [r12+0x14]
  40f95f:	sub    eax,0x1
  40f962:	cdqe   
  40f964:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  40f96a:	xor    eax,0x1f
  40f96d:	sub    eax,DWORD PTR [rsp+0x40]
  40f971:	mov    edx,DWORD PTR [rsp+0x50]
  40f975:	sub    eax,0x4
  40f978:	and    eax,0x1f
  40f97b:	add    edx,eax
  40f97d:	mov    r13d,eax
  40f980:	mov    DWORD PTR [rsp+0x9c],eax
  40f987:	test   edx,edx
  40f989:	mov    ecx,eax
  40f98b:	jle    0x40f99f
  40f98d:	mov    rcx,rsi
  40f990:	call   0x410c40
  40f995:	mov    ecx,DWORD PTR [rsp+0x9c]
  40f99c:	mov    rsi,rax
  40f99f:	mov    edx,DWORD PTR [rsp+0x40]
  40f9a3:	add    edx,ecx
  40f9a5:	test   edx,edx
  40f9a7:	jle    0x40f9b4
  40f9a9:	mov    rcx,r12
  40f9ac:	call   0x410c40
  40f9b1:	mov    r12,rax
  40f9b4:	mov    eax,DWORD PTR [rsp+0x6c]
  40f9b8:	test   eax,eax
  40f9ba:	jne    0x40fd31
  40f9c0:	mov    r14d,DWORD PTR [rsp+0x68]
  40f9c5:	test   r14d,r14d
  40f9c8:	jg     0x40fb81
  40f9ce:	cmp    DWORD PTR [rsp+0x120],0x2
  40f9d6:	jle    0x40fb81
  40f9dc:	mov    r11d,DWORD PTR [rsp+0x68]
  40f9e1:	test   r11d,r11d
  40f9e4:	jne    0x40fb12
  40f9ea:	xor    r8d,r8d
  40f9ed:	mov    rcx,r12
  40f9f0:	mov    edx,0x5
  40f9f5:	call   0x4108b0
  40f9fa:	mov    rcx,rsi
  40f9fd:	mov    rdx,rax
  40fa00:	mov    r12,rax
  40fa03:	call   0x410d60
  40fa08:	test   eax,eax
  40fa0a:	jle    0x40fb12
  40fa10:	mov    ebp,DWORD PTR [rsp+0x30]
  40fa14:	add    ebp,0x2
  40fa17:	jmp    0x40f7b2
  40fa1c:	mov    eax,DWORD PTR [rbp+0x4]
  40fa1f:	add    eax,0x1
  40fa22:	cmp    r13d,eax
  40fa25:	jle    0x40f958
  40fa2b:	add    DWORD PTR [rsp+0x50],0x1
  40fa30:	add    DWORD PTR [rsp+0x40],0x1
  40fa35:	mov    ebp,0x1
  40fa3a:	nop    WORD PTR [rax+rax*1+0x0]
  40fa40:	mov    edx,DWORD PTR [rsp+0x88]
  40fa47:	mov    eax,0x1f
  40fa4c:	test   edx,edx
  40fa4e:	je     0x40f96d
  40fa54:	jmp    0x40f95a
  40fa59:	nop    DWORD PTR [rax+0x0]
  40fa60:	cmp    DWORD PTR [rsp+0x120],0x1
  40fa68:	jg     0x40fa70
  40fa6a:	cmp    r14d,0x1
  40fa6e:	je     0x40fa74
  40fa70:	xor    ebp,ebp
  40fa72:	jmp    0x40fa40
  40fa74:	mov    eax,DWORD PTR [rbp+0x4]
  40fa77:	xor    ebp,ebp
  40fa79:	add    eax,0x1
  40fa7c:	cmp    r13d,eax
  40fa7f:	jle    0x40fa40
  40fa81:	jmp    0x40fa2b
  40fa83:	cmp    DWORD PTR [rsp+0x120],0x2
  40fa8b:	mov    DWORD PTR [rsp+0x60],0x0
  40fa93:	je     0x40f690
  40fa99:	pxor   xmm0,xmm0
  40fa9d:	mov    QWORD PTR [rsp+0x60],r9
  40faa2:	mov    DWORD PTR [rsp+0x68],r11d
  40faa7:	cvtsi2sd xmm0,edi
  40faab:	mulsd  xmm0,QWORD PTR [rip+0x891d]        # 0x4183d0
  40fab3:	cvttsd2si ecx,xmm0
  40fab7:	add    ecx,0x3
  40faba:	mov    DWORD PTR [rsp+0x9c],ecx
  40fac1:	call   0x40ee40
  40fac6:	mov    QWORD PTR [rsp+0x48],rax
  40facb:	mov    eax,DWORD PTR [rbp+0xc]
  40face:	mov    r11d,DWORD PTR [rsp+0x68]
  40fad3:	mov    r9,QWORD PTR [rsp+0x60]
  40fad8:	sub    eax,0x1
  40fadb:	mov    DWORD PTR [rsp+0x38],eax
  40fadf:	jne    0x40ff8d
  40fae5:	mov    eax,0xffffffff
  40faea:	mov    DWORD PTR [rsp+0x60],0x1
  40faf2:	mov    DWORD PTR [rsp+0x128],0x0
  40fafd:	mov    DWORD PTR [rsp+0x8c],eax
  40fb04:	mov    DWORD PTR [rsp+0x68],eax
  40fb08:	jmp    0x40f740
  40fb0d:	xor    r12d,r12d
  40fb10:	xor    edi,edi
  40fb12:	mov    ebp,DWORD PTR [rsp+0x128]
  40fb19:	mov    rbx,QWORD PTR [rsp+0x48]
  40fb1e:	mov    r15d,0x10
  40fb24:	neg    ebp
  40fb26:	jmp    0x40f7c4
  40fb2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fb30:	mov    eax,DWORD PTR [rsp+0x30]
  40fb34:	sub    DWORD PTR [rsp+0x50],eax
  40fb38:	mov    DWORD PTR [rsp+0x88],0x0
  40fb43:	neg    eax
  40fb45:	mov    DWORD PTR [rsp+0x58],eax
  40fb49:	jmp    0x40f369
  40fb4e:	xchg   ax,ax
  40fb50:	neg    eax
  40fb52:	mov    DWORD PTR [rsp+0x40],0x0
  40fb5a:	mov    DWORD PTR [rsp+0x50],eax
  40fb5e:	jmp    0x40f34a
  40fb63:	pxor   xmm0,xmm0
  40fb67:	cvtsi2sd xmm0,eax
  40fb6b:	ucomisd xmm0,xmm1
  40fb6f:	jp     0x40fb77
  40fb71:	je     0x40f2db
  40fb77:	sub    DWORD PTR [rsp+0x30],0x1
  40fb7c:	jmp    0x40f2db
  40fb81:	mov    r10d,DWORD PTR [rsp+0x60]
  40fb86:	test   r10d,r10d
  40fb89:	je     0x40fd90
  40fb8f:	lea    edx,[rbx+r13*1]
  40fb93:	test   edx,edx
  40fb95:	jle    0x40fba2
  40fb97:	mov    rcx,rdi
  40fb9a:	call   0x410c40
  40fb9f:	mov    rdi,rax
  40fba2:	test   ebp,ebp
  40fba4:	mov    r13,rdi
  40fba7:	jne    0x410245
  40fbad:	mov    DWORD PTR [rsp+0x9c],0x1
  40fbb8:	mov    rbx,QWORD PTR [rsp+0x48]
  40fbbd:	mov    QWORD PTR [rsp+0x40],r12
  40fbc2:	mov    QWORD PTR [rsp+0x50],r15
  40fbc7:	jmp    0x40fc8e
  40fbcc:	nop    DWORD PTR [rax+0x0]
  40fbd0:	mov    rcx,r8
  40fbd3:	call   0x410840
  40fbd8:	mov    eax,r12d
  40fbdb:	or     eax,DWORD PTR [rsp+0x120]
  40fbe2:	jne    0x40fbfa
  40fbe4:	mov    ecx,DWORD PTR [rsp+0x38]
  40fbe8:	test   ecx,ecx
  40fbea:	jne    0x40fbfa
  40fbec:	mov    rax,QWORD PTR [rsp+0x50]
  40fbf1:	test   BYTE PTR [rax],0x1
  40fbf4:	je     0x4103b5
  40fbfa:	test   r14d,r14d
  40fbfd:	js     0x410110
  40fc03:	or     r14d,DWORD PTR [rsp+0x120]
  40fc0b:	jne    0x40fc1b
  40fc0d:	mov    rax,QWORD PTR [rsp+0x50]
  40fc12:	test   BYTE PTR [rax],0x1
  40fc15:	je     0x410110
  40fc1b:	test   r12d,r12d
  40fc1e:	jle    0x40fc2b
  40fc20:	cmp    DWORD PTR [rsp+0x38],0x2
  40fc25:	jne    0x41031f
  40fc2b:	add    rbx,0x1
  40fc2f:	mov    BYTE PTR [rbx-0x1],bpl
  40fc33:	mov    eax,DWORD PTR [rsp+0x68]
  40fc37:	cmp    DWORD PTR [rsp+0x9c],eax
  40fc3e:	je     0x4102ab
  40fc44:	xor    r8d,r8d
  40fc47:	mov    rcx,rsi
  40fc4a:	mov    edx,0xa
  40fc4f:	call   0x4108b0
  40fc54:	xor    r8d,r8d
  40fc57:	cmp    rdi,r13
  40fc5a:	mov    rsi,rax
  40fc5d:	mov    edx,0xa
  40fc62:	mov    rcx,rdi
  40fc65:	je     0x40fd00
  40fc6b:	call   0x4108b0
  40fc70:	mov    rcx,r13
  40fc73:	xor    r8d,r8d
  40fc76:	mov    edx,0xa
  40fc7b:	mov    rdi,rax
  40fc7e:	call   0x4108b0
  40fc83:	mov    r13,rax
  40fc86:	add    DWORD PTR [rsp+0x9c],0x1
  40fc8e:	mov    r12,QWORD PTR [rsp+0x40]
  40fc93:	mov    rcx,rsi
  40fc96:	mov    rdx,r12
  40fc99:	call   0x40eee0
  40fc9e:	mov    rdx,rdi
  40fca1:	mov    rcx,rsi
  40fca4:	mov    r15d,eax
  40fca7:	lea    ebp,[rax+0x30]
  40fcaa:	call   0x410d60
  40fcaf:	mov    rcx,r12
  40fcb2:	mov    rdx,r13
  40fcb5:	mov    r14d,eax
  40fcb8:	call   0x410db0
  40fcbd:	mov    r9d,DWORD PTR [rax+0x10]
  40fcc1:	mov    r8,rax
  40fcc4:	mov    r12d,0x1
  40fcca:	test   r9d,r9d
  40fccd:	jne    0x40fbd0
  40fcd3:	mov    rdx,rax
  40fcd6:	mov    rcx,rsi
  40fcd9:	mov    QWORD PTR [rsp+0x58],rax
  40fcde:	call   0x410d60
  40fce3:	mov    r8,QWORD PTR [rsp+0x58]
  40fce8:	mov    r12d,eax
  40fceb:	jmp    0x40fbd0
  40fcf0:	mov    r12d,DWORD PTR [rsp+0x58]
  40fcf5:	mov    ebx,DWORD PTR [rsp+0x50]
  40fcf9:	xor    edi,edi
  40fcfb:	jmp    0x40f89f
  40fd00:	call   0x4108b0
  40fd05:	mov    rdi,rax
  40fd08:	mov    r13,rax
  40fd0b:	jmp    0x40fc86
  40fd10:	mov    edx,DWORD PTR [rsp+0x58]
  40fd14:	mov    rcx,rsi
  40fd17:	call   0x410ad0
  40fd1c:	mov    rsi,rax
  40fd1f:	jmp    0x40f91b
  40fd24:	mov    DWORD PTR [rsp+0x60],0x0
  40fd2c:	jmp    0x40f3c7
  40fd31:	mov    rdx,r12
  40fd34:	mov    rcx,rsi
  40fd37:	call   0x410d60
  40fd3c:	test   eax,eax
  40fd3e:	jns    0x40f9c0
  40fd44:	xor    r8d,r8d
  40fd47:	mov    rcx,rsi
  40fd4a:	mov    edx,0xa
  40fd4f:	sub    DWORD PTR [rsp+0x30],0x1
  40fd54:	call   0x4108b0
  40fd59:	mov    rsi,rax
  40fd5c:	mov    eax,DWORD PTR [rsp+0x60]
  40fd60:	test   eax,eax
  40fd62:	jne    0x410428
  40fd68:	mov    eax,DWORD PTR [rsp+0x8c]
  40fd6f:	test   eax,eax
  40fd71:	jg     0x40fd85
  40fd73:	cmp    DWORD PTR [rsp+0x120],0x2
  40fd7b:	mov    DWORD PTR [rsp+0x68],eax
  40fd7f:	jg     0x40f9dc
  40fd85:	mov    eax,DWORD PTR [rsp+0x8c]
  40fd8c:	mov    DWORD PTR [rsp+0x68],eax
  40fd90:	mov    DWORD PTR [rsp+0x9c],0x1
  40fd9b:	mov    rbx,QWORD PTR [rsp+0x48]
  40fda0:	mov    r13d,DWORD PTR [rsp+0x68]
  40fda5:	jmp    0x40fdcb
  40fda7:	nop    WORD PTR [rax+rax*1+0x0]
  40fdb0:	mov    rcx,rsi
  40fdb3:	xor    r8d,r8d
  40fdb6:	mov    edx,0xa
  40fdbb:	call   0x4108b0
  40fdc0:	add    DWORD PTR [rsp+0x9c],0x1
  40fdc8:	mov    rsi,rax
  40fdcb:	mov    rdx,r12
  40fdce:	mov    rcx,rsi
  40fdd1:	add    rbx,0x1
  40fdd5:	call   0x40eee0
  40fdda:	lea    ebp,[rax+0x30]
  40fddd:	mov    BYTE PTR [rbx-0x1],bpl
  40fde1:	cmp    DWORD PTR [rsp+0x9c],r13d
  40fde9:	jl     0x40fdb0
  40fdeb:	xor    r14d,r14d
  40fdee:	mov    eax,DWORD PTR [rsp+0x38]
  40fdf2:	test   eax,eax
  40fdf4:	je     0x4101bc
  40fdfa:	cmp    eax,0x2
  40fdfd:	je     0x4101ec
  40fe03:	cmp    DWORD PTR [rsi+0x14],0x1
  40fe07:	jle    0x410383
  40fe0d:	movzx  edx,BYTE PTR [rbx-0x1]
  40fe11:	mov    rcx,QWORD PTR [rsp+0x48]
  40fe16:	jmp    0x40fe30
  40fe18:	nop    DWORD PTR [rax+rax*1+0x0]
  40fe20:	cmp    rax,rcx
  40fe23:	je     0x40ffdc
  40fe29:	movzx  edx,BYTE PTR [rax-0x1]
  40fe2d:	mov    rbx,rax
  40fe30:	cmp    dl,0x39
  40fe33:	lea    rax,[rbx-0x1]
  40fe37:	je     0x40fe20
  40fe39:	add    edx,0x1
  40fe3c:	mov    r15d,0x20
  40fe42:	mov    BYTE PTR [rax],dl
  40fe44:	mov    rcx,r12
  40fe47:	call   0x410840
  40fe4c:	test   rdi,rdi
  40fe4f:	je     0x40ff3f
  40fe55:	cmp    r14,rdi
  40fe58:	je     0x40fe67
  40fe5a:	test   r14,r14
  40fe5d:	je     0x40fe67
  40fe5f:	mov    rcx,r14
  40fe62:	call   0x410840
  40fe67:	mov    ebp,DWORD PTR [rsp+0x30]
  40fe6b:	add    ebp,0x1
  40fe6e:	jmp    0x40f7d5
  40fe73:	mov    QWORD PTR [rsp+0x40],r9
  40fe78:	mov    rdi,QWORD PTR [rsp+0x48]
  40fe7d:	movsd  xmm0,QWORD PTR [rsp+0x40]
  40fe83:	mov    DWORD PTR [rsp+0x9c],0x1
  40fe8e:	movapd xmm1,xmm0
  40fe92:	mov    rbx,rdi
  40fe95:	add    rbx,0x1
  40fe99:	divsd  xmm1,xmm2
  40fe9d:	cvttsd2si eax,xmm1
  40fea1:	pxor   xmm1,xmm1
  40fea5:	cvtsi2sd xmm1,eax
  40fea9:	lea    edx,[rax+0x30]
  40feac:	mov    BYTE PTR [rdi],dl
  40feae:	mulsd  xmm1,xmm2
  40feb2:	subsd  xmm0,xmm1
  40feb6:	ucomisd xmm0,xmm6
  40feba:	jp     0x40febe
  40febc:	je     0x40ff30
  40febe:	mov    edx,DWORD PTR [rsp+0x9c]
  40fec5:	cmp    DWORD PTR [rsp+0x68],edx
  40fec9:	je     0x40ffb7
  40fecf:	movsd  xmm3,QWORD PTR [rip+0x8509]        # 0x4183e0
  40fed7:	movapd xmm4,xmm6
  40fedb:	mov    ecx,DWORD PTR [rsp+0x68]
  40fedf:	jmp    0x40fef0
  40fee1:	mov    edx,DWORD PTR [rsp+0x9c]
  40fee8:	cmp    ecx,edx
  40feea:	je     0x40ffb7
  40fef0:	mulsd  xmm0,xmm3
  40fef4:	add    edx,0x1
  40fef7:	add    rbx,0x1
  40fefb:	mov    DWORD PTR [rsp+0x9c],edx
  40ff02:	movapd xmm1,xmm0
  40ff06:	divsd  xmm1,xmm2
  40ff0a:	cvttsd2si eax,xmm1
  40ff0e:	pxor   xmm1,xmm1
  40ff12:	cvtsi2sd xmm1,eax
  40ff16:	lea    edx,[rax+0x30]
  40ff19:	mov    BYTE PTR [rbx-0x1],dl
  40ff1c:	mulsd  xmm1,xmm2
  40ff20:	subsd  xmm0,xmm1
  40ff24:	ucomisd xmm0,xmm6
  40ff28:	jp     0x40fee1
  40ff2a:	ucomisd xmm0,xmm4
  40ff2e:	jne    0x40fee1
  40ff30:	mov    ebp,DWORD PTR [rsp+0x30]
  40ff34:	add    ebp,0x1
  40ff37:	xor    r15d,r15d
  40ff3a:	jmp    0x40f5f0
  40ff3f:	mov    ebp,DWORD PTR [rsp+0x30]
  40ff43:	add    ebp,0x1
  40ff46:	jmp    0x40f5f0
  40ff4b:	mov    ebx,0x1
  40ff50:	mov    DWORD PTR [rsp+0x128],0x1
  40ff5b:	jmp    0x40f6aa
  40ff60:	cmp    DWORD PTR [rsp+0x68],0xe
  40ff65:	mov    DWORD PTR [rsp+0x9c],0x1
  40ff70:	mov    ecx,0x1
  40ff75:	setbe  bl
  40ff78:	and    ebx,eax
  40ff7a:	jmp    0x40f3f9
  40ff7f:	mov    r12d,DWORD PTR [rsp+0x58]
  40ff84:	mov    ebx,DWORD PTR [rsp+0x50]
  40ff88:	jmp    0x40f88a
  40ff8d:	mov    eax,0xffffffff
  40ff92:	xor    ebx,ebx
  40ff94:	mov    DWORD PTR [rsp+0x60],0x1
  40ff9c:	mov    DWORD PTR [rsp+0x8c],eax
  40ffa3:	mov    DWORD PTR [rsp+0x68],eax
  40ffa7:	mov    DWORD PTR [rsp+0x128],0x0
  40ffb2:	jmp    0x40f423
  40ffb7:	mov    r10d,DWORD PTR [rsp+0x38]
  40ffbc:	test   r10d,r10d
  40ffbf:	je     0x41027e
  40ffc5:	cmp    DWORD PTR [rsp+0x38],0x1
  40ffca:	je     0x410371
  40ffd0:	mov    ebp,DWORD PTR [rsp+0x30]
  40ffd4:	add    ebp,0x1
  40ffd7:	jmp    0x40f5e3
  40ffdc:	mov    rax,QWORD PTR [rsp+0x48]
  40ffe1:	add    DWORD PTR [rsp+0x30],0x1
  40ffe6:	mov    r15d,0x20
  40ffec:	mov    BYTE PTR [rax],0x31
  40ffef:	jmp    0x40fe44
  40fff4:	mov    ebp,0x2
  40fff9:	xor    r12d,r12d
  40fffc:	xor    edi,edi
  40fffe:	jmp    0x40f7b2
  410003:	mov    r10,QWORD PTR [rip+0x8706]        # 0x418710
  41000a:	mov    QWORD PTR [rsp+0x38],rax
  41000f:	movsd  xmm3,QWORD PTR [rsp+0x38]
  410015:	mov    DWORD PTR [rsp+0x9c],0x1
  410020:	mov    rbx,QWORD PTR [rsp+0x48]
  410025:	movsd  xmm1,QWORD PTR [rip+0x83b3]        # 0x4183e0
  41002d:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  410033:	jmp    0x410043
  410035:	mulsd  xmm0,xmm1
  410039:	add    edx,0x1
  41003c:	mov    DWORD PTR [rsp+0x9c],edx
  410043:	cvttsd2si eax,xmm0
  410047:	test   eax,eax
  410049:	je     0x410057
  41004b:	pxor   xmm2,xmm2
  41004f:	cvtsi2sd xmm2,eax
  410053:	subsd  xmm0,xmm2
  410057:	add    rbx,0x1
  41005b:	add    eax,0x30
  41005e:	mov    BYTE PTR [rbx-0x1],al
  410061:	mov    edx,DWORD PTR [rsp+0x9c]
  410068:	cmp    edx,r9d
  41006b:	jne    0x410035
  41006d:	movsd  xmm1,QWORD PTR [rip+0x839b]        # 0x418410
  410075:	movapd xmm2,xmm3
  410079:	addsd  xmm2,xmm1
  41007d:	ucomisd xmm0,xmm2
  410081:	ja     0x4100d7
  410083:	subsd  xmm1,xmm3
  410087:	ucomisd xmm1,xmm0
  41008b:	jbe    0x40f72e
  410091:	ucomisd xmm0,xmm6
  410095:	jp     0x41041d
  41009b:	jne    0x41041d
  4100a1:	xor    r15d,r15d
  4100a4:	jmp    0x4100b7
  4100a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4100b0:	movzx  eax,BYTE PTR [rbx-0x2]
  4100b4:	mov    rbx,rdx
  4100b7:	cmp    al,0x30
  4100b9:	lea    rdx,[rbx-0x1]
  4100bd:	je     0x4100b0
  4100bf:	lea    ebp,[rcx+0x1]
  4100c2:	jmp    0x40f5f0
  4100c7:	test   al,0x1
  4100c9:	mov    ecx,DWORD PTR [rsp+0x30]
  4100cd:	movzx  eax,BYTE PTR [rbx-0x1]
  4100d1:	je     0x41041d
  4100d7:	mov    r8,QWORD PTR [rsp+0x48]
  4100dc:	jmp    0x4100f0
  4100de:	xchg   ax,ax
  4100e0:	cmp    rdx,r8
  4100e3:	je     0x41022c
  4100e9:	movzx  eax,BYTE PTR [rdx-0x1]
  4100ed:	mov    rbx,rdx
  4100f0:	cmp    al,0x39
  4100f2:	lea    rdx,[rbx-0x1]
  4100f6:	je     0x4100e0
  4100f8:	mov    QWORD PTR [rsp+0x48],r8
  4100fd:	add    eax,0x1
  410100:	mov    BYTE PTR [rdx],al
  410102:	lea    ebp,[rcx+0x1]
  410105:	mov    r15d,0x20
  41010b:	jmp    0x40f5f0
  410110:	mov    edx,DWORD PTR [rsp+0x38]
  410114:	mov    eax,r12d
  410117:	mov    r14d,ebp
  41011a:	mov    r12,QWORD PTR [rsp+0x40]
  41011f:	test   edx,edx
  410121:	je     0x410351
  410127:	cmp    DWORD PTR [rsi+0x14],0x1
  41012b:	jle    0x410347
  410131:	cmp    DWORD PTR [rsp+0x38],0x2
  410136:	jne    0x410187
  410138:	jmp    0x410366
  41013d:	nop    DWORD PTR [rax]
  410140:	add    rbx,0x1
  410144:	xor    r8d,r8d
  410147:	mov    rcx,r13
  41014a:	mov    BYTE PTR [rbx-0x1],r14b
  41014e:	mov    edx,0xa
  410153:	call   0x4108b0
  410158:	cmp    rdi,r13
  41015b:	mov    rcx,rsi
  41015e:	mov    edx,0xa
  410163:	cmove  rdi,rax
  410167:	xor    r8d,r8d
  41016a:	mov    rbp,rax
  41016d:	call   0x4108b0
  410172:	mov    rdx,r12
  410175:	mov    rcx,rax
  410178:	mov    rsi,rax
  41017b:	call   0x40eee0
  410180:	lea    r14d,[rax+0x30]
  410184:	mov    r13,rbp
  410187:	mov    rdx,r13
  41018a:	mov    rcx,r12
  41018d:	call   0x410d60
  410192:	test   eax,eax
  410194:	jg     0x410140
  410196:	cmp    r14d,0x39
  41019a:	je     0x410396
  4101a0:	add    r14d,0x1
  4101a4:	mov    r15d,0x20
  4101aa:	mov    BYTE PTR [rbx],r14b
  4101ad:	mov    r14,rdi
  4101b0:	add    rbx,0x1
  4101b4:	mov    rdi,r13
  4101b7:	jmp    0x40fe44
  4101bc:	mov    rcx,rsi
  4101bf:	mov    edx,0x1
  4101c4:	call   0x410c40
  4101c9:	mov    rdx,r12
  4101cc:	mov    rcx,rax
  4101cf:	mov    rsi,rax
  4101d2:	call   0x410d60
  4101d7:	cmp    eax,0x0
  4101da:	jg     0x40fe0d
  4101e0:	jne    0x4101ec
  4101e2:	and    bpl,0x1
  4101e6:	jne    0x40fe0d
  4101ec:	cmp    DWORD PTR [rsi+0x14],0x1
  4101f0:	mov    r15d,0x10
  4101f6:	jg     0x410203
  4101f8:	jmp    0x41048d
  4101fd:	nop    DWORD PTR [rax]
  410200:	mov    rbx,rax
  410203:	cmp    BYTE PTR [rbx-0x1],0x30
  410207:	lea    rax,[rbx-0x1]
  41020b:	je     0x410200
  41020d:	jmp    0x40fe44
  410212:	mov    ebx,DWORD PTR [rsp+0x50]
  410216:	mov    DWORD PTR [rsp+0x9c],0x0
  410221:	xor    eax,eax
  410223:	sub    ebx,DWORD PTR [rsp+0x68]
  410227:	jmp    0x40f88a
  41022c:	mov    QWORD PTR [rsp+0x48],r8
  410231:	add    ecx,0x1
  410234:	mov    BYTE PTR [r8],0x30
  410238:	mov    rdx,r8
  41023b:	mov    eax,0x31
  410240:	jmp    0x410100
  410245:	mov    ecx,DWORD PTR [rdi+0x8]
  410248:	call   0x410730
  41024d:	lea    rcx,[rax+0x10]
  410251:	mov    rbx,rax
  410254:	movsxd rax,DWORD PTR [rdi+0x14]
  410258:	lea    rdx,[rdi+0x10]
  41025c:	lea    r8,[rax*4+0x8]
  410264:	call   0x411418
  410269:	mov    edx,0x1
  41026e:	mov    rcx,rbx
  410271:	call   0x410c40
  410276:	mov    r13,rax
  410279:	jmp    0x40fbad
  41027e:	addsd  xmm0,xmm0
  410282:	ucomisd xmm0,xmm2
  410286:	ja     0x410371
  41028c:	ucomisd xmm2,xmm0
  410290:	jp     0x410298
  410292:	je     0x4100c7
  410298:	movzx  eax,BYTE PTR [rbx-0x1]
  41029c:	mov    ecx,DWORD PTR [rsp+0x30]
  4102a0:	mov    r15d,0x10
  4102a6:	jmp    0x4100b7
  4102ab:	mov    r14,rdi
  4102ae:	mov    r12,QWORD PTR [rsp+0x40]
  4102b3:	mov    rdi,r13
  4102b6:	jmp    0x40fdee
  4102bb:	mov    eax,DWORD PTR [rsp+0x68]
  4102bf:	test   eax,eax
  4102c1:	je     0x40f6ca
  4102c7:	mov    r9d,DWORD PTR [rsp+0x8c]
  4102cf:	test   r9d,r9d
  4102d2:	jle    0x40f72e
  4102d8:	movsd  xmm0,QWORD PTR [rip+0x8100]        # 0x4183e0
  4102e0:	mov    ecx,0xffffffff
  4102e5:	movsd  xmm1,QWORD PTR [rip+0x80fb]        # 0x4183e8
  4102ed:	mulsd  xmm0,xmm4
  4102f1:	mulsd  xmm1,xmm0
  4102f5:	addsd  xmm1,QWORD PTR [rip+0x80f3]        # 0x4183f0
  4102fd:	movq   rdx,xmm1
  410302:	movq   rax,xmm1
  410307:	shr    rdx,0x20
  41030b:	mov    eax,eax
  41030d:	sub    edx,0x3400000
  410313:	shl    rdx,0x20
  410317:	or     rax,rdx
  41031a:	jmp    0x40f4d2
  41031f:	cmp    ebp,0x39
  410322:	mov    r12,QWORD PTR [rsp+0x40]
  410327:	mov    rax,rbx
  41032a:	je     0x410399
  41032c:	add    ebp,0x1
  41032f:	mov    r14,rdi
  410332:	add    rbx,0x1
  410336:	mov    BYTE PTR [rax],bpl
  410339:	mov    rdi,r13
  41033c:	mov    r15d,0x20
  410342:	jmp    0x40fe44
  410347:	cmp    DWORD PTR [rsi+0x18],0x0
  41034b:	jne    0x410131
  410351:	test   eax,eax
  410353:	jg     0x4103e9
  410359:	xor    r15d,r15d
  41035c:	cmp    DWORD PTR [rsi+0x14],0x1
  410360:	jle    0x410468
  410366:	mov    r15d,0x10
  41036c:	jmp    0x4101aa
  410371:	movzx  eax,BYTE PTR [rbx-0x1]
  410375:	mov    ecx,DWORD PTR [rsp+0x30]
  410379:	mov    r8,QWORD PTR [rsp+0x48]
  41037e:	jmp    0x4100f0
  410383:	mov    eax,DWORD PTR [rsi+0x18]
  410386:	test   eax,eax
  410388:	jne    0x40fe0d
  41038e:	xor    r15d,r15d
  410391:	jmp    0x410203
  410396:	mov    rax,rbx
  410399:	mov    r14,rdi
  41039c:	add    rbx,0x1
  4103a0:	mov    rdi,r13
  4103a3:	mov    BYTE PTR [rax],0x39
  4103a6:	mov    edx,0x39
  4103ab:	mov    rcx,QWORD PTR [rsp+0x48]
  4103b0:	jmp    0x40fe30
  4103b5:	cmp    ebp,0x39
  4103b8:	mov    r12,QWORD PTR [rsp+0x40]
  4103bd:	mov    rax,rbx
  4103c0:	je     0x410396
  4103c2:	test   r14d,r14d
  4103c5:	jle    0x4104a0
  4103cb:	mov    ebp,r15d
  4103ce:	mov    r15d,0x20
  4103d4:	add    ebp,0x31
  4103d7:	mov    r14,rdi
  4103da:	add    rbx,0x1
  4103de:	mov    BYTE PTR [rax],bpl
  4103e1:	mov    rdi,r13
  4103e4:	jmp    0x40fe44
  4103e9:	mov    rcx,rsi
  4103ec:	mov    edx,0x1
  4103f1:	call   0x410c40
  4103f6:	mov    rdx,r12
  4103f9:	mov    rcx,rax
  4103fc:	mov    rsi,rax
  4103ff:	call   0x410d60
  410404:	cmp    eax,0x0
  410407:	jle    0x41047a
  410409:	cmp    ebp,0x39
  41040c:	je     0x410396
  41040e:	lea    r14d,[rbp+0x1]
  410412:	mov    r15d,0x20
  410418:	jmp    0x41035c
  41041d:	mov    r15d,0x10
  410423:	jmp    0x4100b7
  410428:	xor    r8d,r8d
  41042b:	mov    rcx,rdi
  41042e:	mov    edx,0xa
  410433:	call   0x4108b0
  410438:	mov    rdi,rax
  41043b:	mov    eax,DWORD PTR [rsp+0x8c]
  410442:	test   eax,eax
  410444:	jg     0x410458
  410446:	cmp    DWORD PTR [rsp+0x120],0x2
  41044e:	mov    DWORD PTR [rsp+0x68],eax
  410452:	jg     0x40f9dc
  410458:	mov    eax,DWORD PTR [rsp+0x8c]
  41045f:	mov    DWORD PTR [rsp+0x68],eax
  410463:	jmp    0x40fb8f
  410468:	cmp    DWORD PTR [rsi+0x18],0x0
  41046c:	mov    eax,0x10
  410471:	cmovne r15d,eax
  410475:	jmp    0x4101aa
  41047a:	jne    0x410482
  41047c:	test   bpl,0x1
  410480:	jne    0x410409
  410482:	mov    r15d,0x20
  410488:	jmp    0x41035c
  41048d:	cmp    DWORD PTR [rsi+0x18],0x1
  410491:	sbb    r15d,r15d
  410494:	not    r15d
  410497:	and    r15d,0x10
  41049b:	jmp    0x410203
  4104a0:	cmp    DWORD PTR [rsi+0x14],0x1
  4104a4:	mov    r15d,0x10
  4104aa:	jg     0x4103d7
  4104b0:	cmp    DWORD PTR [rsi+0x18],0x1
  4104b4:	sbb    r15d,r15d
  4104b7:	not    r15d
  4104ba:	and    r15d,0x10
  4104be:	jmp    0x4103d7
  4104c3:	xor    eax,eax
  4104c5:	jmp    0x40f1a7
  4104ca:	nop
  4104cb:	nop
  4104cc:	nop
  4104cd:	nop
  4104ce:	nop
  4104cf:	nop
  4104d0:	push   rbp
  4104d1:	push   rdi
  4104d2:	push   rsi
  4104d3:	push   rbx
  4104d4:	mov    rsi,rcx
  4104d7:	lea    r10,[rcx+0x18]
  4104db:	movsxd rcx,DWORD PTR [rcx+0x14]
  4104df:	mov    eax,edx
  4104e1:	sar    eax,0x5
  4104e4:	cmp    eax,ecx
  4104e6:	jge    0x410570
  4104ec:	cdqe   
  4104ee:	and    edx,0x1f
  4104f1:	lea    rbx,[r10+rcx*4]
  4104f5:	lea    rdi,[r10+rax*4]
  4104f9:	je     0x410583
  4104ff:	mov    r9d,DWORD PTR [rdi]
  410502:	lea    r8,[rdi+0x4]
  410506:	mov    ebp,0x20
  41050b:	mov    ecx,edx
  41050d:	sub    ebp,edx
  41050f:	shr    r9d,cl
  410512:	cmp    rbx,r8
  410515:	jbe    0x4105c8
  41051b:	mov    r11,r10
  41051e:	xchg   ax,ax
  410520:	mov    eax,DWORD PTR [r8]
  410523:	mov    ecx,ebp
  410525:	add    r11,0x4
  410529:	add    r8,0x4
  41052d:	shl    eax,cl
  41052f:	mov    ecx,edx
  410531:	or     eax,r9d
  410534:	mov    DWORD PTR [r11-0x4],eax
  410538:	mov    r9d,DWORD PTR [r8-0x4]
  41053c:	shr    r9d,cl
  41053f:	cmp    rbx,r8
  410542:	ja     0x410520
  410544:	sub    rbx,rdi
  410547:	lea    rax,[rbx-0x5]
  41054b:	shr    rax,0x2
  41054f:	lea    rax,[r10+rax*4+0x4]
  410554:	test   r9d,r9d
  410557:	mov    DWORD PTR [rax],r9d
  41055a:	je     0x410560
  41055c:	add    rax,0x4
  410560:	sub    rax,r10
  410563:	shr    rax,0x2
  410567:	jmp    0x4105bc
  410569:	nop    DWORD PTR [rax+0x0]
  410570:	mov    DWORD PTR [rsi+0x14],0x0
  410577:	mov    DWORD PTR [rsi+0x18],0x0
  41057e:	pop    rbx
  41057f:	pop    rsi
  410580:	pop    rdi
  410581:	pop    rbp
  410582:	ret    
  410583:	cmp    rbx,rdi
  410586:	mov    rdx,r10
  410589:	mov    rax,rdi
  41058c:	jbe    0x410570
  41058e:	xchg   ax,ax
  410590:	add    rax,0x4
  410594:	mov    r8d,DWORD PTR [rax-0x4]
  410598:	add    rdx,0x4
  41059c:	cmp    rbx,rax
  41059f:	mov    DWORD PTR [rdx-0x4],r8d
  4105a3:	ja     0x410590
  4105a5:	not    rdi
  4105a8:	lea    rax,[rdi+rbx*1]
  4105ac:	shr    rax,0x2
  4105b0:	lea    rax,[rax*4+0x4]
  4105b8:	shr    rax,0x2
  4105bc:	test   eax,eax
  4105be:	mov    DWORD PTR [rsi+0x14],eax
  4105c1:	je     0x410577
  4105c3:	pop    rbx
  4105c4:	pop    rsi
  4105c5:	pop    rdi
  4105c6:	pop    rbp
  4105c7:	ret    
  4105c8:	mov    rax,r10
  4105cb:	jmp    0x410554
  4105cd:	nop    DWORD PTR [rax]
  4105d0:	movsxd rax,DWORD PTR [rcx+0x14]
  4105d4:	lea    rdx,[rcx+0x18]
  4105d8:	lea    r8,[rdx+rax*4]
  4105dc:	cmp    rdx,r8
  4105df:	jae    0x41060b
  4105e1:	mov    ecx,DWORD PTR [rcx+0x18]
  4105e4:	xor    eax,eax
  4105e6:	test   ecx,ecx
  4105e8:	je     0x4105f6
  4105ea:	jmp    0x410604
  4105ec:	nop    DWORD PTR [rax+0x0]
  4105f0:	mov    ecx,DWORD PTR [rdx]
  4105f2:	test   ecx,ecx
  4105f4:	jne    0x410604
  4105f6:	add    rdx,0x4
  4105fa:	add    eax,0x20
  4105fd:	cmp    r8,rdx
  410600:	ja     0x4105f0
  410602:	repz ret 
  410604:	tzcnt  ecx,ecx
  410608:	add    eax,ecx
  41060a:	ret    
  41060b:	xor    eax,eax
  41060d:	ret    
  41060e:	nop
  41060f:	nop
  410610:	push   rsi
  410611:	push   rbx
  410612:	sub    rsp,0x28
  410616:	mov    eax,DWORD PTR [rip+0xdff4]        # 0x41e610
  41061c:	movsxd rsi,ecx
  41061f:	cmp    eax,0x2
  410622:	je     0x41068d
  410624:	test   eax,eax
  410626:	je     0x410652
  410628:	cmp    eax,0x1
  41062b:	jne    0x41064b
  41062d:	mov    rbx,QWORD PTR [rip+0xef2c]        # 0x41f560
  410634:	mov    ecx,0x1
  410639:	call   rbx
  41063b:	mov    eax,DWORD PTR [rip+0xdfcf]        # 0x41e610
  410641:	cmp    eax,0x1
  410644:	je     0x410634
  410646:	cmp    eax,0x2
  410649:	je     0x41068d
  41064b:	add    rsp,0x28
  41064f:	pop    rbx
  410650:	pop    rsi
  410651:	ret    
  410652:	mov    al,0x1
  410654:	xchg   DWORD PTR [rip+0xdfb6],eax        # 0x41e610
  41065a:	test   eax,eax
  41065c:	jne    0x4106b0
  41065e:	lea    rcx,[rip+0xdfdb]        # 0x41e640
  410665:	mov    rbx,QWORD PTR [rip+0xee94]        # 0x41f500
  41066c:	call   rbx
  41066e:	lea    rcx,[rip+0xdff3]        # 0x41e668
  410675:	call   rbx
  410677:	lea    rcx,[rip+0x62]        # 0x4106e0
  41067e:	call   0x40b0f0
  410683:	mov    DWORD PTR [rip+0xdf83],0x2        # 0x41e610
  41068d:	lea    rdx,[rsi+rsi*4]
  410691:	lea    rax,[rip+0xdfa8]        # 0x41e640
  410698:	lea    rcx,[rax+rdx*8]
  41069c:	mov    rax,QWORD PTR [rip+0xeddd]        # 0x41f480
  4106a3:	add    rsp,0x28
  4106a7:	pop    rbx
  4106a8:	pop    rsi
  4106a9:	rex.W jmp rax
  4106ac:	nop    DWORD PTR [rax+0x0]
  4106b0:	cmp    eax,0x2
  4106b3:	je     0x4106d0
  4106b5:	mov    eax,DWORD PTR [rip+0xdf55]        # 0x41e610
  4106bb:	cmp    eax,0x1
  4106be:	je     0x41062d
  4106c4:	jmp    0x410646
  4106c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4106d0:	mov    DWORD PTR [rip+0xdf36],0x2        # 0x41e610
  4106da:	jmp    0x41068d
  4106dc:	nop    DWORD PTR [rax+0x0]
  4106e0:	push   rbx
  4106e1:	sub    rsp,0x20
  4106e5:	mov    eax,0x3
  4106ea:	xchg   DWORD PTR [rip+0xdf20],eax        # 0x41e610
  4106f0:	cmp    eax,0x2
  4106f3:	je     0x410700
  4106f5:	add    rsp,0x20
  4106f9:	pop    rbx
  4106fa:	ret    
  4106fb:	nop    DWORD PTR [rax+rax*1+0x0]
  410700:	mov    rbx,QWORD PTR [rip+0xed71]        # 0x41f478
  410707:	lea    rcx,[rip+0xdf32]        # 0x41e640
  41070e:	call   rbx
  410710:	lea    rcx,[rip+0xdf51]        # 0x41e668
  410717:	mov    rax,rbx
  41071a:	add    rsp,0x20
  41071e:	pop    rbx
  41071f:	rex.W jmp rax
  410722:	nop    DWORD PTR [rax+0x0]
  410726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410730:	push   rdi
  410731:	push   rsi
  410732:	push   rbx
  410733:	sub    rsp,0x20
  410737:	mov    ebx,ecx
  410739:	xor    ecx,ecx
  41073b:	call   0x410610
  410740:	cmp    ebx,0x9
  410743:	jg     0x410780
  410745:	lea    rdx,[rip+0xde74]        # 0x41e5c0
  41074c:	movsxd rcx,ebx
  41074f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  410753:	test   rdi,rdi
  410756:	je     0x4107e0
  41075c:	cmp    DWORD PTR [rip+0xdead],0x2        # 0x41e610
  410763:	mov    r8,QWORD PTR [rdi]
  410766:	mov    QWORD PTR [rdx+rcx*8],r8
  41076a:	jne    0x4107c6
  41076c:	lea    rcx,[rip+0xdecd]        # 0x41e640
  410773:	call   QWORD PTR [rip+0xed97]        # 0x41f510
  410779:	jmp    0x4107c6
  41077b:	nop    DWORD PTR [rax+rax*1+0x0]
  410780:	mov    eax,0x1
  410785:	mov    ecx,ebx
  410787:	shl    eax,cl
  410789:	mov    esi,eax
  41078b:	lea    eax,[rax-0x1]
  41078e:	cdqe   
  410790:	lea    rdx,[rax*4+0x27]
  410798:	shr    rdx,0x3
  41079c:	mov    edx,edx
  41079e:	lea    rcx,[rdx*8+0x0]
  4107a6:	call   0x411428
  4107ab:	test   rax,rax
  4107ae:	mov    rdi,rax
  4107b1:	je     0x41083a
  4107b7:	cmp    DWORD PTR [rip+0xde52],0x2        # 0x41e610
  4107be:	mov    DWORD PTR [rdi+0x8],ebx
  4107c1:	mov    DWORD PTR [rdi+0xc],esi
  4107c4:	je     0x41076c
  4107c6:	mov    DWORD PTR [rdi+0x14],0x0
  4107cd:	mov    DWORD PTR [rdi+0x10],0x0
  4107d4:	mov    rax,rdi
  4107d7:	add    rsp,0x20
  4107db:	pop    rbx
  4107dc:	pop    rsi
  4107dd:	pop    rdi
  4107de:	ret    
  4107df:	nop
  4107e0:	mov    ecx,ebx
  4107e2:	mov    eax,0x1
  4107e7:	mov    rdi,QWORD PTR [rip+0x1942]        # 0x412130
  4107ee:	shl    eax,cl
  4107f0:	lea    rcx,[rip+0xd4c9]        # 0x41dcc0
  4107f7:	lea    edx,[rax-0x1]
  4107fa:	mov    esi,eax
  4107fc:	mov    rax,rdi
  4107ff:	movsxd rdx,edx
  410802:	sub    rax,rcx
  410805:	lea    rdx,[rdx*4+0x27]
  41080d:	mov    rcx,rax
  410810:	sar    rcx,0x3
  410814:	shr    rdx,0x3
  410818:	mov    edx,edx
  41081a:	add    rcx,rdx
  41081d:	cmp    rcx,0x120
  410824:	ja     0x41079e
  41082a:	lea    rdx,[rdi+rdx*8]
  41082e:	mov    QWORD PTR [rip+0x18fb],rdx        # 0x412130
  410835:	jmp    0x4107b7
  41083a:	xor    eax,eax
  41083c:	jmp    0x4107d7
  41083e:	xchg   ax,ax
  410840:	push   rbx
  410841:	sub    rsp,0x20
  410845:	test   rcx,rcx
  410848:	je     0x410879
  41084a:	cmp    DWORD PTR [rcx+0x8],0x9
  41084e:	jg     0x410880
  410850:	mov    rbx,rcx
  410853:	xor    ecx,ecx
  410855:	call   0x410610
  41085a:	movsxd rdx,DWORD PTR [rbx+0x8]
  41085e:	lea    rax,[rip+0xdd5b]        # 0x41e5c0
  410865:	cmp    DWORD PTR [rip+0xdda4],0x2        # 0x41e610
  41086c:	mov    rcx,QWORD PTR [rax+rdx*8]
  410870:	mov    QWORD PTR [rax+rdx*8],rbx
  410874:	mov    QWORD PTR [rbx],rcx
  410877:	je     0x410890
  410879:	add    rsp,0x20
  41087d:	pop    rbx
  41087e:	ret    
  41087f:	nop
  410880:	add    rsp,0x20
  410884:	pop    rbx
  410885:	jmp    0x411468
  41088a:	nop    WORD PTR [rax+rax*1+0x0]
  410890:	mov    rax,QWORD PTR [rip+0xec79]        # 0x41f510
  410897:	lea    rcx,[rip+0xdda2]        # 0x41e640
  41089e:	add    rsp,0x20
  4108a2:	pop    rbx
  4108a3:	rex.W jmp rax
  4108a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4108b0:	push   rbp
  4108b1:	push   rdi
  4108b2:	push   rsi
  4108b3:	push   rbx
  4108b4:	sub    rsp,0x28
  4108b8:	mov    esi,DWORD PTR [rcx+0x14]
  4108bb:	xor    r9d,r9d
  4108be:	lea    r10,[rcx+0x18]
  4108c2:	mov    rdi,rcx
  4108c5:	movsxd rbx,r8d
  4108c8:	movsxd rdx,edx
  4108cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4108d0:	mov    eax,DWORD PTR [r10+r9*4]
  4108d4:	imul   rax,rdx
  4108d8:	add    rax,rbx
  4108db:	mov    rbx,rax
  4108de:	mov    DWORD PTR [r10+r9*4],eax
  4108e2:	add    r9,0x1
  4108e6:	shr    rbx,0x20
  4108ea:	cmp    esi,r9d
  4108ed:	jg     0x4108d0
  4108ef:	test   rbx,rbx
  4108f2:	mov    rax,rdi
  4108f5:	je     0x41090c
  4108f7:	cmp    esi,DWORD PTR [rdi+0xc]
  4108fa:	jge    0x410915
  4108fc:	movsxd rax,esi
  4108ff:	add    esi,0x1
  410902:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  410906:	mov    DWORD PTR [rdi+0x14],esi
  410909:	mov    rax,rdi
  41090c:	add    rsp,0x28
  410910:	pop    rbx
  410911:	pop    rsi
  410912:	pop    rdi
  410913:	pop    rbp
  410914:	ret    
  410915:	mov    eax,DWORD PTR [rdi+0x8]
  410918:	lea    ecx,[rax+0x1]
  41091b:	call   0x410730
  410920:	test   rax,rax
  410923:	mov    rbp,rax
  410926:	je     0x41095e
  410928:	lea    rcx,[rax+0x10]
  41092c:	movsxd rax,DWORD PTR [rdi+0x14]
  410930:	lea    rdx,[rdi+0x10]
  410934:	lea    r8,[rax*4+0x8]
  41093c:	call   0x411418
  410941:	mov    rcx,rdi
  410944:	mov    rdi,rbp
  410947:	call   0x410840
  41094c:	movsxd rax,esi
  41094f:	add    esi,0x1
  410952:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  410956:	mov    DWORD PTR [rdi+0x14],esi
  410959:	mov    rax,rdi
  41095c:	jmp    0x41090c
  41095e:	xor    eax,eax
  410960:	jmp    0x41090c
  410962:	nop    DWORD PTR [rax+0x0]
  410966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410970:	push   rbx
  410971:	sub    rsp,0x20
  410975:	mov    ebx,ecx
  410977:	mov    ecx,0x1
  41097c:	call   0x410730
  410981:	test   rax,rax
  410984:	je     0x410990
  410986:	mov    DWORD PTR [rax+0x18],ebx
  410989:	mov    DWORD PTR [rax+0x14],0x1
  410990:	add    rsp,0x20
  410994:	pop    rbx
  410995:	ret    
  410996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4109a0:	push   r14
  4109a2:	push   r13
  4109a4:	push   r12
  4109a6:	push   rbp
  4109a7:	push   rdi
  4109a8:	push   rsi
  4109a9:	push   rbx
  4109aa:	sub    rsp,0x20
  4109ae:	movsxd r13,DWORD PTR [rcx+0x14]
  4109b2:	movsxd rbx,DWORD PTR [rdx+0x14]
  4109b6:	mov    r12,rcx
  4109b9:	mov    r14,rdx
  4109bc:	cmp    r13d,ebx
  4109bf:	jl     0x410ac1
  4109c5:	mov    eax,ebx
  4109c7:	movsxd rbx,r13d
  4109ca:	movsxd r13,eax
  4109cd:	xor    eax,eax
  4109cf:	lea    esi,[rbx+r13*1]
  4109d3:	cmp    esi,DWORD PTR [r12+0xc]
  4109d8:	setg   al
  4109db:	add    eax,DWORD PTR [r12+0x8]
  4109e0:	mov    ecx,eax
  4109e2:	call   0x410730
  4109e7:	test   rax,rax
  4109ea:	je     0x410acc
  4109f0:	lea    rdi,[rax+0x18]
  4109f4:	movsxd rdx,esi
  4109f7:	lea    rbp,[rdi+rdx*4]
  4109fb:	mov    r8,rdi
  4109fe:	cmp    rdi,rbp
  410a01:	jae    0x410a13
  410a03:	mov    DWORD PTR [r8],0x0
  410a0a:	add    r8,0x4
  410a0e:	cmp    rbp,r8
  410a11:	ja     0x410a03
  410a13:	lea    rdx,[r14+0x18]
  410a17:	add    r12,0x18
  410a1b:	lea    rbx,[r12+rbx*4]
  410a1f:	lea    r13,[rdx+r13*4]
  410a23:	cmp    rdx,r13
  410a26:	jae    0x410a89
  410a28:	nop    DWORD PTR [rax+rax*1+0x0]
  410a30:	add    rdx,0x4
  410a34:	mov    r11d,DWORD PTR [rdx-0x4]
  410a38:	test   r11d,r11d
  410a3b:	je     0x410a80
  410a3d:	mov    r9,rdi
  410a40:	mov    r8,r12
  410a43:	xor    r10d,r10d
  410a46:	jmp    0x410a53
  410a48:	nop    DWORD PTR [rax+rax*1+0x0]
  410a50:	mov    r9,r14
  410a53:	add    r8,0x4
  410a57:	mov    ecx,DWORD PTR [r8-0x4]
  410a5b:	mov    r14d,DWORD PTR [r9]
  410a5e:	imul   rcx,r11
  410a62:	add    rcx,r14
  410a65:	lea    r14,[r9+0x4]
  410a69:	add    rcx,r10
  410a6c:	mov    r10,rcx
  410a6f:	mov    DWORD PTR [r14-0x4],ecx
  410a73:	shr    r10,0x20
  410a77:	cmp    rbx,r8
  410a7a:	ja     0x410a50
  410a7c:	mov    DWORD PTR [r9+0x4],r10d
  410a80:	add    rdi,0x4
  410a84:	cmp    r13,rdx
  410a87:	ja     0x410a30
  410a89:	test   esi,esi
  410a8b:	jle    0x410aaf
  410a8d:	mov    r8d,DWORD PTR [rbp-0x4]
  410a91:	lea    rdx,[rbp-0x4]
  410a95:	test   r8d,r8d
  410a98:	je     0x410aaa
  410a9a:	jmp    0x410aaf
  410a9c:	nop    DWORD PTR [rax+0x0]
  410aa0:	sub    rdx,0x4
  410aa4:	mov    ecx,DWORD PTR [rdx]
  410aa6:	test   ecx,ecx
  410aa8:	jne    0x410aaf
  410aaa:	sub    esi,0x1
  410aad:	jne    0x410aa0
  410aaf:	mov    DWORD PTR [rax+0x14],esi
  410ab2:	add    rsp,0x20
  410ab6:	pop    rbx
  410ab7:	pop    rsi
  410ab8:	pop    rdi
  410ab9:	pop    rbp
  410aba:	pop    r12
  410abc:	pop    r13
  410abe:	pop    r14
  410ac0:	ret    
  410ac1:	mov    r12,rdx
  410ac4:	mov    r14,rcx
  410ac7:	jmp    0x4109cd
  410acc:	xor    eax,eax
  410ace:	jmp    0x410ab2
  410ad0:	push   rbp
  410ad1:	push   rdi
  410ad2:	push   rsi
  410ad3:	push   rbx
  410ad4:	sub    rsp,0x28
  410ad8:	mov    eax,edx
  410ada:	mov    rbp,rcx
  410add:	mov    ebx,edx
  410adf:	and    eax,0x3
  410ae2:	jne    0x410b70
  410ae8:	sar    ebx,0x2
  410aeb:	mov    rax,rbp
  410aee:	test   ebx,ebx
  410af0:	je     0x410b3c
  410af2:	mov    rdi,QWORD PTR [rip+0xd187]        # 0x41dc80
  410af9:	test   rdi,rdi
  410afc:	jne    0x410b12
  410afe:	jmp    0x410bbd
  410b03:	sar    ebx,1
  410b05:	je     0x410b39
  410b07:	mov    rsi,QWORD PTR [rdi]
  410b0a:	test   rsi,rsi
  410b0d:	je     0x410b45
  410b0f:	mov    rdi,rsi
  410b12:	test   bl,0x1
  410b15:	je     0x410b03
  410b17:	mov    rdx,rdi
  410b1a:	mov    rcx,rbp
  410b1d:	call   0x4109a0
  410b22:	test   rax,rax
  410b25:	mov    rsi,rax
  410b28:	je     0x410b93
  410b2a:	mov    rcx,rbp
  410b2d:	mov    rbp,rsi
  410b30:	call   0x410840
  410b35:	sar    ebx,1
  410b37:	jne    0x410b07
  410b39:	mov    rax,rbp
  410b3c:	add    rsp,0x28
  410b40:	pop    rbx
  410b41:	pop    rsi
  410b42:	pop    rdi
  410b43:	pop    rbp
  410b44:	ret    
  410b45:	mov    ecx,0x1
  410b4a:	call   0x410610
  410b4f:	mov    rsi,QWORD PTR [rdi]
  410b52:	test   rsi,rsi
  410b55:	je     0x410b9e
  410b57:	cmp    DWORD PTR [rip+0xdab2],0x2        # 0x41e610
  410b5e:	jne    0x410b0f
  410b60:	lea    rcx,[rip+0xdb01]        # 0x41e668
  410b67:	call   QWORD PTR [rip+0xe9a3]        # 0x41f510
  410b6d:	jmp    0x410b0f
  410b6f:	nop
  410b70:	sub    eax,0x1
  410b73:	lea    rdx,[rip+0x78c6]        # 0x418440
  410b7a:	xor    r8d,r8d
  410b7d:	cdqe   
  410b7f:	mov    edx,DWORD PTR [rdx+rax*4]
  410b82:	call   0x4108b0
  410b87:	test   rax,rax
  410b8a:	mov    rbp,rax
  410b8d:	jne    0x410ae8
  410b93:	xor    eax,eax
  410b95:	add    rsp,0x28
  410b99:	pop    rbx
  410b9a:	pop    rsi
  410b9b:	pop    rdi
  410b9c:	pop    rbp
  410b9d:	ret    
  410b9e:	mov    rdx,rdi
  410ba1:	mov    rcx,rdi
  410ba4:	call   0x4109a0
  410ba9:	test   rax,rax
  410bac:	mov    rsi,rax
  410baf:	mov    QWORD PTR [rdi],rax
  410bb2:	je     0x410b93
  410bb4:	mov    QWORD PTR [rax],0x0
  410bbb:	jmp    0x410b57
  410bbd:	mov    ecx,0x1
  410bc2:	call   0x410610
  410bc7:	mov    rdi,QWORD PTR [rip+0xd0b2]        # 0x41dc80
  410bce:	test   rdi,rdi
  410bd1:	je     0x410bf2
  410bd3:	cmp    DWORD PTR [rip+0xda36],0x2        # 0x41e610
  410bda:	jne    0x410b12
  410be0:	lea    rcx,[rip+0xda81]        # 0x41e668
  410be7:	call   QWORD PTR [rip+0xe923]        # 0x41f510
  410bed:	jmp    0x410b12
  410bf2:	mov    ecx,0x1
  410bf7:	call   0x410730
  410bfc:	test   rax,rax
  410bff:	mov    rdi,rax
  410c02:	je     0x410c22
  410c04:	mov    DWORD PTR [rax+0x18],0x271
  410c0b:	mov    DWORD PTR [rax+0x14],0x1
  410c12:	mov    QWORD PTR [rip+0xd067],rax        # 0x41dc80
  410c19:	mov    QWORD PTR [rax],0x0
  410c20:	jmp    0x410bd3
  410c22:	mov    QWORD PTR [rip+0xd053],0x0        # 0x41dc80
  410c2d:	xor    eax,eax
  410c2f:	jmp    0x410b95
  410c34:	xchg   ax,ax
  410c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410c40:	push   r13
  410c42:	push   r12
  410c44:	push   rbp
  410c45:	push   rdi
  410c46:	push   rsi
  410c47:	push   rbx
  410c48:	sub    rsp,0x28
  410c4c:	mov    rdi,rcx
  410c4f:	mov    ebp,edx
  410c51:	mov    esi,edx
  410c53:	mov    r12d,DWORD PTR [rdi+0x14]
  410c57:	sar    ebp,0x5
  410c5a:	mov    eax,DWORD PTR [rdi+0xc]
  410c5d:	mov    ecx,DWORD PTR [rcx+0x8]
  410c60:	add    r12d,ebp
  410c63:	lea    ebx,[r12+0x1]
  410c68:	cmp    ebx,eax
  410c6a:	jle    0x410c79
  410c6c:	nop    DWORD PTR [rax+0x0]
  410c70:	add    eax,eax
  410c72:	add    ecx,0x1
  410c75:	cmp    ebx,eax
  410c77:	jg     0x410c70
  410c79:	call   0x410730
  410c7e:	test   rax,rax
  410c81:	mov    r13,rax
  410c84:	je     0x410d4f
  410c8a:	test   ebp,ebp
  410c8c:	lea    r8,[rax+0x18]
  410c90:	jle    0x410d47
  410c96:	lea    eax,[rbp-0x1]
  410c99:	lea    r9,[r8+rax*4+0x4]
  410c9e:	xchg   ax,ax
  410ca0:	add    r8,0x4
  410ca4:	mov    DWORD PTR [r8-0x4],0x0
  410cac:	cmp    r8,r9
  410caf:	jne    0x410ca0
  410cb1:	movsxd rax,DWORD PTR [rdi+0x14]
  410cb5:	lea    r8,[rdi+0x18]
  410cb9:	mov    edx,esi
  410cbb:	and    edx,0x1f
  410cbe:	lea    rbp,[r8+rax*4]
  410cc2:	je     0x410d30
  410cc4:	mov    eax,0x20
  410cc9:	xor    r11d,r11d
  410ccc:	sub    eax,edx
  410cce:	jmp    0x410cd3
  410cd0:	mov    r9,rsi
  410cd3:	mov    r10d,DWORD PTR [r8]
  410cd6:	mov    ecx,edx
  410cd8:	lea    rsi,[r9+0x4]
  410cdc:	add    r8,0x4
  410ce0:	shl    r10d,cl
  410ce3:	mov    ecx,eax
  410ce5:	or     r10d,r11d
  410ce8:	mov    DWORD PTR [rsi-0x4],r10d
  410cec:	mov    r11d,DWORD PTR [r8-0x4]
  410cf0:	shr    r11d,cl
  410cf3:	cmp    rbp,r8
  410cf6:	ja     0x410cd0
  410cf8:	add    r12d,0x2
  410cfc:	test   r11d,r11d
  410cff:	mov    DWORD PTR [r9+0x4],r11d
  410d03:	cmovne ebx,r12d
  410d07:	sub    ebx,0x1
  410d0a:	mov    rcx,rdi
  410d0d:	mov    DWORD PTR [r13+0x14],ebx
  410d11:	call   0x410840
  410d16:	mov    rax,r13
  410d19:	add    rsp,0x28
  410d1d:	pop    rbx
  410d1e:	pop    rsi
  410d1f:	pop    rdi
  410d20:	pop    rbp
  410d21:	pop    r12
  410d23:	pop    r13
  410d25:	ret    
  410d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410d30:	add    r8,0x4
  410d34:	mov    edx,DWORD PTR [r8-0x4]
  410d38:	add    r9,0x4
  410d3c:	cmp    rbp,r8
  410d3f:	mov    DWORD PTR [r9-0x4],edx
  410d43:	ja     0x410d30
  410d45:	jmp    0x410d07
  410d47:	mov    r9,r8
  410d4a:	jmp    0x410cb1
  410d4f:	xor    eax,eax
  410d51:	jmp    0x410d19
  410d53:	nop    DWORD PTR [rax]
  410d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410d60:	movsxd r8,DWORD PTR [rdx+0x14]
  410d64:	mov    eax,DWORD PTR [rcx+0x14]
  410d67:	sub    eax,r8d
  410d6a:	test   eax,eax
  410d6c:	jne    0x410da2
  410d6e:	shl    r8,0x2
  410d72:	add    rcx,0x18
  410d76:	lea    rax,[rcx+r8*1]
  410d7a:	lea    rdx,[rdx+r8*1+0x18]
  410d7f:	jmp    0x410d86
  410d81:	cmp    rcx,rax
  410d84:	jae    0x410da0
  410d86:	sub    rdx,0x4
  410d8a:	sub    rax,0x4
  410d8e:	mov    r9d,DWORD PTR [rdx]
  410d91:	cmp    DWORD PTR [rax],r9d
  410d94:	je     0x410d81
  410d96:	sbb    eax,eax
  410d98:	or     eax,0x1
  410d9b:	ret    
  410d9c:	nop    DWORD PTR [rax+0x0]
  410da0:	xor    eax,eax
  410da2:	repz ret 
  410da4:	xchg   ax,ax
  410da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410db0:	push   rdi
  410db1:	push   rsi
  410db2:	push   rbx
  410db3:	sub    rsp,0x20
  410db7:	mov    rsi,rcx
  410dba:	mov    rdi,rdx
  410dbd:	call   0x410d60
  410dc2:	test   eax,eax
  410dc4:	je     0x410eb0
  410dca:	mov    ebx,0x0
  410dcf:	js     0x410ed2
  410dd5:	mov    ecx,DWORD PTR [rsi+0x8]
  410dd8:	call   0x410730
  410ddd:	test   rax,rax
  410de0:	je     0x410ee2
  410de6:	movsxd rdx,DWORD PTR [rsi+0x14]
  410dea:	lea    rcx,[rsi+0x18]
  410dee:	mov    DWORD PTR [rax+0x10],ebx
  410df1:	lea    r10,[rdi+0x18]
  410df5:	xor    r9d,r9d
  410df8:	mov    rbx,rdx
  410dfb:	lea    rsi,[rcx+rdx*4]
  410dff:	movsxd rdx,DWORD PTR [rdi+0x14]
  410e03:	lea    rdi,[r10+rdx*4]
  410e07:	lea    rdx,[rax+0x18]
  410e0b:	nop    DWORD PTR [rax+rax*1+0x0]
  410e10:	add    rcx,0x4
  410e14:	add    r10,0x4
  410e18:	mov    r11d,DWORD PTR [r10-0x4]
  410e1c:	mov    r8d,DWORD PTR [rcx-0x4]
  410e20:	add    rdx,0x4
  410e24:	sub    r8,r11
  410e27:	sub    r8,r9
  410e2a:	mov    r9,r8
  410e2d:	mov    r11d,r8d
  410e30:	mov    DWORD PTR [rdx-0x4],r8d
  410e34:	shr    r9,0x20
  410e38:	and    r9d,0x1
  410e3c:	cmp    rdi,r10
  410e3f:	ja     0x410e10
  410e41:	cmp    rsi,rcx
  410e44:	mov    rdi,rdx
  410e47:	mov    r10,rcx
  410e4a:	jbe    0x410e86
  410e4c:	nop    DWORD PTR [rax+0x0]
  410e50:	add    rcx,0x4
  410e54:	mov    r8d,DWORD PTR [rcx-0x4]
  410e58:	add    rdx,0x4
  410e5c:	sub    r8,r9
  410e5f:	mov    r9,r8
  410e62:	mov    r11d,r8d
  410e65:	mov    DWORD PTR [rdx-0x4],r8d
  410e69:	shr    r9,0x20
  410e6d:	and    r9d,0x1
  410e71:	cmp    rsi,rcx
  410e74:	ja     0x410e50
  410e76:	not    r10
  410e79:	lea    rdx,[r10+rsi*1]
  410e7d:	shr    rdx,0x2
  410e81:	lea    rdx,[rdi+rdx*4+0x4]
  410e86:	sub    rdx,0x4
  410e8a:	test   r11d,r11d
  410e8d:	jne    0x410e9d
  410e8f:	nop
  410e90:	sub    rdx,0x4
  410e94:	mov    ecx,DWORD PTR [rdx]
  410e96:	sub    ebx,0x1
  410e99:	test   ecx,ecx
  410e9b:	je     0x410e90
  410e9d:	mov    DWORD PTR [rax+0x14],ebx
  410ea0:	add    rsp,0x20
  410ea4:	pop    rbx
  410ea5:	pop    rsi
  410ea6:	pop    rdi
  410ea7:	ret    
  410ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  410eb0:	xor    ecx,ecx
  410eb2:	call   0x410730
  410eb7:	test   rax,rax
  410eba:	je     0x410ee2
  410ebc:	mov    DWORD PTR [rax+0x14],0x1
  410ec3:	mov    DWORD PTR [rax+0x18],0x0
  410eca:	add    rsp,0x20
  410ece:	pop    rbx
  410ecf:	pop    rsi
  410ed0:	pop    rdi
  410ed1:	ret    
  410ed2:	mov    rax,rsi
  410ed5:	mov    bl,0x1
  410ed7:	mov    rsi,rdi
  410eda:	mov    rdi,rax
  410edd:	jmp    0x410dd5
  410ee2:	xor    eax,eax
  410ee4:	jmp    0x410ea0
  410ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410ef0:	push   rsi
  410ef1:	push   rbx
  410ef2:	sub    rsp,0x18
  410ef6:	movsxd rax,DWORD PTR [rcx+0x14]
  410efa:	lea    r10,[rcx+0x18]
  410efe:	mov    ecx,0x20
  410f03:	lea    r9,[r10+rax*4]
  410f07:	mov    eax,DWORD PTR [r9-0x4]
  410f0b:	lea    rbx,[r9-0x4]
  410f0f:	bsr    r8d,eax
  410f13:	xor    r8d,0x1f
  410f17:	sub    ecx,r8d
  410f1a:	cmp    r8d,0xa
  410f1e:	mov    DWORD PTR [rdx],ecx
  410f20:	jg     0x410f70
  410f22:	mov    ecx,0xb
  410f27:	mov    r11d,eax
  410f2a:	xor    esi,esi
  410f2c:	sub    ecx,r8d
  410f2f:	shr    r11d,cl
  410f32:	or     r11d,0x3ff00000
  410f39:	shl    r11,0x20
  410f3d:	cmp    r10,rbx
  410f40:	jae    0x410f48
  410f42:	mov    esi,DWORD PTR [r9-0x8]
  410f46:	shr    esi,cl
  410f48:	lea    ecx,[r8+0x15]
  410f4c:	shl    eax,cl
  410f4e:	mov    edx,eax
  410f50:	mov    eax,esi
  410f52:	or     eax,edx
  410f54:	or     rax,r11
  410f57:	mov    QWORD PTR [rsp+0x8],rax
  410f5c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  410f62:	add    rsp,0x18
  410f66:	pop    rbx
  410f67:	pop    rsi
  410f68:	ret    
  410f69:	nop    DWORD PTR [rax+0x0]
  410f70:	cmp    r10,rbx
  410f73:	jae    0x410fd0
  410f75:	mov    r11d,r8d
  410f78:	lea    rsi,[r9-0x8]
  410f7c:	mov    edx,DWORD PTR [r9-0x8]
  410f80:	sub    r11d,0xb
  410f84:	je     0x410ff2
  410f86:	mov    ebx,0x2b
  410f8b:	mov    ecx,r11d
  410f8e:	sub    ebx,r8d
  410f91:	shl    eax,cl
  410f93:	mov    r8d,edx
  410f96:	mov    ecx,ebx
  410f98:	shr    r8d,cl
  410f9b:	or     eax,r8d
  410f9e:	xor    r8d,r8d
  410fa1:	or     eax,0x3ff00000
  410fa6:	shl    rax,0x20
  410faa:	cmp    r10,rsi
  410fad:	jae    0x410fb6
  410faf:	mov    r8d,DWORD PTR [r9-0xc]
  410fb3:	shr    r8d,cl
  410fb6:	mov    ecx,r11d
  410fb9:	shl    edx,cl
  410fbb:	or     r8d,edx
  410fbe:	movabs rdx,0xffffffff00000000
  410fc8:	and    rax,rdx
  410fcb:	or     rax,r8
  410fce:	jmp    0x410f57
  410fd0:	mov    r11d,r8d
  410fd3:	sub    r11d,0xb
  410fd7:	je     0x410ff0
  410fd9:	mov    ecx,r11d
  410fdc:	xor    r8d,r8d
  410fdf:	xor    edx,edx
  410fe1:	shl    eax,cl
  410fe3:	or     eax,0x3ff00000
  410fe8:	shl    rax,0x20
  410fec:	jmp    0x410fb6
  410fee:	xchg   ax,ax
  410ff0:	xor    edx,edx
  410ff2:	or     eax,0x3ff00000
  410ff7:	shl    rax,0x20
  410ffb:	or     rax,rdx
  410ffe:	jmp    0x410f57
  411003:	nop    DWORD PTR [rax]
  411006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411010:	push   rdi
  411011:	push   rsi
  411012:	push   rbx
  411013:	sub    rsp,0x20
  411017:	mov    ecx,0x1
  41101c:	movq   rbx,xmm0
  411021:	mov    rdi,rdx
  411024:	mov    rsi,r8
  411027:	call   0x410730
  41102c:	test   rax,rax
  41102f:	je     0x411115
  411035:	mov    r9,rbx
  411038:	shr    r9,0x20
  41103c:	mov    r10d,r9d
  41103f:	and    r9d,0x7fffffff
  411046:	and    r10d,0xfffff
  41104d:	shr    r9d,0x14
  411051:	mov    edx,r10d
  411054:	or     edx,0x100000
  41105a:	test   r9d,r9d
  41105d:	cmovne r10d,edx
  411061:	test   ebx,ebx
  411063:	jne    0x4110a4
  411065:	xor    ecx,ecx
  411067:	mov    DWORD PTR [rax+0x14],0x1
  41106e:	mov    edx,0x1
  411073:	tzcnt  ecx,r10d
  411078:	shr    r10d,cl
  41107b:	test   r9d,r9d
  41107e:	lea    r11d,[rcx+0x20]
  411082:	mov    DWORD PTR [rax+0x18],r10d
  411086:	je     0x4110e3
  411088:	lea    edx,[r11+r9*1-0x433]
  411090:	mov    DWORD PTR [rdi],edx
  411092:	mov    edx,0x35
  411097:	sub    edx,r11d
  41109a:	mov    DWORD PTR [rsi],edx
  41109c:	add    rsp,0x20
  4110a0:	pop    rbx
  4110a1:	pop    rsi
  4110a2:	pop    rdi
  4110a3:	ret    
  4110a4:	xor    r11d,r11d
  4110a7:	tzcnt  r11d,ebx
  4110ac:	mov    ecx,r11d
  4110af:	shr    ebx,cl
  4110b1:	test   r11d,r11d
  4110b4:	je     0x411110
  4110b6:	mov    ecx,0x20
  4110bb:	mov    edx,r10d
  4110be:	sub    ecx,r11d
  4110c1:	shl    edx,cl
  4110c3:	mov    ecx,r11d
  4110c6:	or     ebx,edx
  4110c8:	shr    r10d,cl
  4110cb:	mov    DWORD PTR [rax+0x18],ebx
  4110ce:	cmp    r10d,0x1
  4110d2:	mov    DWORD PTR [rax+0x1c],r10d
  4110d6:	sbb    edx,edx
  4110d8:	add    edx,0x2
  4110db:	test   r9d,r9d
  4110de:	mov    DWORD PTR [rax+0x14],edx
  4110e1:	jne    0x411088
  4110e3:	movsxd rcx,edx
  4110e6:	shl    edx,0x5
  4110e9:	sub    r11d,0x432
  4110f0:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  4110f5:	mov    DWORD PTR [rdi],r11d
  4110f8:	xor    ecx,0x1f
  4110fb:	sub    edx,ecx
  4110fd:	mov    DWORD PTR [rsi],edx
  4110ff:	add    rsp,0x20
  411103:	pop    rbx
  411104:	pop    rsi
  411105:	pop    rdi
  411106:	ret    
  411107:	nop    WORD PTR [rax+rax*1+0x0]
  411110:	mov    DWORD PTR [rax+0x18],ebx
  411113:	jmp    0x4110ce
  411115:	xor    eax,eax
  411117:	jmp    0x41109c
  411119:	nop    DWORD PTR [rax+0x0]
  411120:	mov    rax,rcx
  411123:	lea    rcx,[rdx+0x1]
  411127:	movzx  edx,BYTE PTR [rdx]
  41112a:	test   dl,dl
  41112c:	mov    BYTE PTR [rax],dl
  41112e:	je     0x411142
  411130:	add    rcx,0x1
  411134:	movzx  edx,BYTE PTR [rcx-0x1]
  411138:	add    rax,0x1
  41113c:	test   dl,dl
  41113e:	mov    BYTE PTR [rax],dl
  411140:	jne    0x411130
  411142:	repz ret 
  411144:	nop
  411145:	nop
  411146:	nop
  411147:	nop
  411148:	nop
  411149:	nop
  41114a:	nop
  41114b:	nop
  41114c:	nop
  41114d:	nop
  41114e:	nop
  41114f:	nop
  411150:	sub    rsp,0x58
  411154:	test   r8d,r8d
  411157:	mov    eax,r8d
  41115a:	mov    WORD PTR [rsp+0x68],dx
  41115f:	jne    0x411174
  411161:	cmp    dx,0xff
  411166:	ja     0x4111ba
  411168:	mov    BYTE PTR [rcx],dl
  41116a:	mov    eax,0x1
  41116f:	add    rsp,0x58
  411173:	ret    
  411174:	lea    rdx,[rsp+0x4c]
  411179:	mov    DWORD PTR [rsp+0x28],r9d
  41117e:	mov    QWORD PTR [rsp+0x20],rcx
  411183:	mov    DWORD PTR [rsp+0x4c],0x0
  41118b:	mov    QWORD PTR [rsp+0x30],0x0
  411194:	mov    r9d,0x1
  41119a:	mov    QWORD PTR [rsp+0x38],rdx
  41119f:	lea    r8,[rsp+0x68]
  4111a4:	xor    edx,edx
  4111a6:	mov    ecx,eax
  4111a8:	call   QWORD PTR [rip+0xe3ea]        # 0x41f598
  4111ae:	test   eax,eax
  4111b0:	je     0x4111ba
  4111b2:	mov    edx,DWORD PTR [rsp+0x4c]
  4111b6:	test   edx,edx
  4111b8:	je     0x41116f
  4111ba:	call   0x4114f0
  4111bf:	mov    DWORD PTR [rax],0x2a
  4111c5:	mov    eax,0xffffffff
  4111ca:	add    rsp,0x58
  4111ce:	ret    
  4111cf:	nop
  4111d0:	push   rdi
  4111d1:	push   rsi
  4111d2:	push   rbx
  4111d3:	sub    rsp,0x30
  4111d7:	lea    rax,[rsp+0x20]
  4111dc:	test   rcx,rcx
  4111df:	mov    rbx,rcx
  4111e2:	mov    esi,edx
  4111e4:	cmove  rbx,rax
  4111e8:	mov    rax,QWORD PTR [rip+0x7491]        # 0x418680
  4111ef:	mov    rax,QWORD PTR [rax]
  4111f2:	mov    edi,DWORD PTR [rax]
  4111f4:	call   0x411538
  4111f9:	movzx  edx,si
  4111fc:	mov    r8d,eax
  4111ff:	mov    rcx,rbx
  411202:	mov    r9d,edi
  411205:	call   0x411150
  41120a:	cdqe   
  41120c:	add    rsp,0x30
  411210:	pop    rbx
  411211:	pop    rsi
  411212:	pop    rdi
  411213:	ret    
  411214:	xchg   ax,ax
  411216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411220:	push   r14
  411222:	push   r13
  411224:	push   r12
  411226:	push   rbp
  411227:	push   rdi
  411228:	push   rsi
  411229:	push   rbx
  41122a:	sub    rsp,0x30
  41122e:	mov    r13,rdx
  411231:	mov    rbx,rcx
  411234:	mov    rdi,r8
  411237:	call   0x411538
  41123c:	mov    ebp,eax
  41123e:	mov    rax,QWORD PTR [rip+0x743b]        # 0x418680
  411245:	mov    r14,QWORD PTR [r13+0x0]
  411249:	mov    rax,QWORD PTR [rax]
  41124c:	test   r14,r14
  41124f:	mov    r12d,DWORD PTR [rax]
  411252:	je     0x411340
  411258:	xor    esi,esi
  41125a:	test   rbx,rbx
  41125d:	je     0x4112f0
  411263:	test   rdi,rdi
  411266:	jne    0x411288
  411268:	jmp    0x4112b4
  41126a:	nop    WORD PTR [rax+rax*1+0x0]
  411270:	movsxd r10,eax
  411273:	add    rbx,r10
  411276:	add    rsi,r10
  411279:	cmp    BYTE PTR [rbx-0x1],0x0
  41127d:	je     0x4112d0
  41127f:	add    r14,0x2
  411283:	cmp    rdi,rsi
  411286:	jbe    0x4112b4
  411288:	movzx  edx,WORD PTR [r14]
  41128c:	mov    r9d,r12d
  41128f:	mov    r8d,ebp
  411292:	mov    rcx,rbx
  411295:	call   0x411150
  41129a:	test   eax,eax
  41129c:	jg     0x411270
  41129e:	mov    rax,0xffffffffffffffff
  4112a5:	add    rsp,0x30
  4112a9:	pop    rbx
  4112aa:	pop    rsi
  4112ab:	pop    rdi
  4112ac:	pop    rbp
  4112ad:	pop    r12
  4112af:	pop    r13
  4112b1:	pop    r14
  4112b3:	ret    
  4112b4:	mov    rax,rsi
  4112b7:	mov    QWORD PTR [r13+0x0],r14
  4112bb:	add    rsp,0x30
  4112bf:	pop    rbx
  4112c0:	pop    rsi
  4112c1:	pop    rdi
  4112c2:	pop    rbp
  4112c3:	pop    r12
  4112c5:	pop    r13
  4112c7:	pop    r14
  4112c9:	ret    
  4112ca:	nop    WORD PTR [rax+rax*1+0x0]
  4112d0:	lea    rax,[rsi-0x1]
  4112d4:	mov    QWORD PTR [r13+0x0],0x0
  4112dc:	add    rsp,0x30
  4112e0:	pop    rbx
  4112e1:	pop    rsi
  4112e2:	pop    rdi
  4112e3:	pop    rbp
  4112e4:	pop    r12
  4112e6:	pop    r13
  4112e8:	pop    r14
  4112ea:	ret    
  4112eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4112f0:	test   rdi,rdi
  4112f3:	lea    rbx,[rsp+0x20]
  4112f8:	jne    0x41131b
  4112fa:	jmp    0x411351
  4112fc:	nop    DWORD PTR [rax+0x0]
  411300:	movsxd rdx,eax
  411303:	sub    eax,0x1
  411306:	cdqe   
  411308:	add    rsi,rdx
  41130b:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  411310:	je     0x411359
  411312:	add    r14,0x2
  411316:	cmp    rdi,rsi
  411319:	jbe    0x411351
  41131b:	movzx  edx,WORD PTR [r14]
  41131f:	mov    r9d,r12d
  411322:	mov    r8d,ebp
  411325:	mov    rcx,rbx
  411328:	call   0x411150
  41132d:	test   eax,eax
  41132f:	jg     0x411300
  411331:	jmp    0x41129e
  411336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411340:	xor    eax,eax
  411342:	add    rsp,0x30
  411346:	pop    rbx
  411347:	pop    rsi
  411348:	pop    rdi
  411349:	pop    rbp
  41134a:	pop    r12
  41134c:	pop    r13
  41134e:	pop    r14
  411350:	ret    
  411351:	mov    rax,rsi
  411354:	jmp    0x4112a5
  411359:	lea    rax,[rsi-0x1]
  41135d:	jmp    0x4112a5
  411362:	nop
  411363:	nop
  411364:	nop
  411365:	nop
  411366:	nop
  411367:	nop
  411368:	nop
  411369:	nop
  41136a:	nop
  41136b:	nop
  41136c:	nop
  41136d:	nop
  41136e:	nop
  41136f:	nop
  411370:	jmp    QWORD PTR [rip+0xe422]        # 0x41f798
  411376:	nop
  411377:	nop
  411378:	jmp    QWORD PTR [rip+0xe412]        # 0x41f790
  41137e:	nop
  41137f:	nop
  411380:	jmp    QWORD PTR [rip+0xe402]        # 0x41f788
  411386:	nop
  411387:	nop
  411388:	jmp    QWORD PTR [rip+0xe3f2]        # 0x41f780
  41138e:	nop
  41138f:	nop
  411390:	jmp    QWORD PTR [rip+0xe3e2]        # 0x41f778
  411396:	nop
  411397:	nop
  411398:	jmp    QWORD PTR [rip+0xe3d2]        # 0x41f770
  41139e:	nop
  41139f:	nop
  4113a0:	jmp    QWORD PTR [rip+0xe3c2]        # 0x41f768
  4113a6:	nop
  4113a7:	nop
  4113a8:	jmp    QWORD PTR [rip+0xe3b2]        # 0x41f760
  4113ae:	nop
  4113af:	nop
  4113b0:	jmp    QWORD PTR [rip+0xe3a2]        # 0x41f758
  4113b6:	nop
  4113b7:	nop
  4113b8:	jmp    QWORD PTR [rip+0xe392]        # 0x41f750
  4113be:	nop
  4113bf:	nop
  4113c0:	jmp    QWORD PTR [rip+0xe382]        # 0x41f748
  4113c6:	nop
  4113c7:	nop
  4113c8:	jmp    QWORD PTR [rip+0xe372]        # 0x41f740
  4113ce:	nop
  4113cf:	nop
  4113d0:	jmp    QWORD PTR [rip+0xe362]        # 0x41f738
  4113d6:	nop
  4113d7:	nop
  4113d8:	jmp    QWORD PTR [rip+0xe352]        # 0x41f730
  4113de:	nop
  4113df:	nop
  4113e0:	jmp    QWORD PTR [rip+0xe342]        # 0x41f728
  4113e6:	nop
  4113e7:	nop
  4113e8:	jmp    QWORD PTR [rip+0xe332]        # 0x41f720
  4113ee:	nop
  4113ef:	nop
  4113f0:	jmp    QWORD PTR [rip+0xe322]        # 0x41f718
  4113f6:	nop
  4113f7:	nop
  4113f8:	jmp    QWORD PTR [rip+0xe312]        # 0x41f710
  4113fe:	nop
  4113ff:	nop
  411400:	jmp    QWORD PTR [rip+0xe302]        # 0x41f708
  411406:	nop
  411407:	nop
  411408:	jmp    QWORD PTR [rip+0xe2f2]        # 0x41f700
  41140e:	nop
  41140f:	nop
  411410:	jmp    QWORD PTR [rip+0xe2e2]        # 0x41f6f8
  411416:	nop
  411417:	nop
  411418:	jmp    QWORD PTR [rip+0xe2d2]        # 0x41f6f0
  41141e:	nop
  41141f:	nop
  411420:	jmp    QWORD PTR [rip+0xe2c2]        # 0x41f6e8
  411426:	nop
  411427:	nop
  411428:	jmp    QWORD PTR [rip+0xe2b2]        # 0x41f6e0
  41142e:	nop
  41142f:	nop
  411430:	jmp    QWORD PTR [rip+0xe2a2]        # 0x41f6d8
  411436:	nop
  411437:	nop
  411438:	jmp    QWORD PTR [rip+0xe292]        # 0x41f6d0
  41143e:	nop
  41143f:	nop
  411440:	jmp    QWORD PTR [rip+0xe282]        # 0x41f6c8
  411446:	nop
  411447:	nop
  411448:	jmp    QWORD PTR [rip+0xe272]        # 0x41f6c0
  41144e:	nop
  41144f:	nop
  411450:	jmp    QWORD PTR [rip+0xe262]        # 0x41f6b8
  411456:	nop
  411457:	nop
  411458:	jmp    QWORD PTR [rip+0xe252]        # 0x41f6b0
  41145e:	nop
  41145f:	nop
  411460:	jmp    QWORD PTR [rip+0xe242]        # 0x41f6a8
  411466:	nop
  411467:	nop
  411468:	jmp    QWORD PTR [rip+0xe232]        # 0x41f6a0
  41146e:	nop
  41146f:	nop
  411470:	jmp    QWORD PTR [rip+0xe222]        # 0x41f698
  411476:	nop
  411477:	nop
  411478:	jmp    QWORD PTR [rip+0xe212]        # 0x41f690
  41147e:	nop
  41147f:	nop
  411480:	jmp    QWORD PTR [rip+0xe202]        # 0x41f688
  411486:	nop
  411487:	nop
  411488:	jmp    QWORD PTR [rip+0xe1f2]        # 0x41f680
  41148e:	nop
  41148f:	nop
  411490:	jmp    QWORD PTR [rip+0xe1e2]        # 0x41f678
  411496:	nop
  411497:	nop
  411498:	jmp    QWORD PTR [rip+0xe1d2]        # 0x41f670
  41149e:	nop
  41149f:	nop
  4114a0:	jmp    QWORD PTR [rip+0xe1c2]        # 0x41f668
  4114a6:	nop
  4114a7:	nop
  4114a8:	jmp    QWORD PTR [rip+0xe1b2]        # 0x41f660
  4114ae:	nop
  4114af:	nop
  4114b0:	jmp    QWORD PTR [rip+0xe1a2]        # 0x41f658
  4114b6:	nop
  4114b7:	nop
  4114b8:	jmp    QWORD PTR [rip+0xe192]        # 0x41f650
  4114be:	nop
  4114bf:	nop
  4114c0:	jmp    QWORD PTR [rip+0xe182]        # 0x41f648
  4114c6:	nop
  4114c7:	nop
  4114c8:	jmp    QWORD PTR [rip+0xe172]        # 0x41f640
  4114ce:	nop
  4114cf:	nop
  4114d0:	jmp    QWORD PTR [rip+0xe162]        # 0x41f638
  4114d6:	nop
  4114d7:	nop
  4114d8:	jmp    QWORD PTR [rip+0xe152]        # 0x41f630
  4114de:	nop
  4114df:	nop
  4114e0:	jmp    QWORD PTR [rip+0xe142]        # 0x41f628
  4114e6:	nop
  4114e7:	nop
  4114e8:	jmp    QWORD PTR [rip+0xe12a]        # 0x41f618
  4114ee:	nop
  4114ef:	nop
  4114f0:	jmp    QWORD PTR [rip+0xe11a]        # 0x41f610
  4114f6:	nop
  4114f7:	nop
  4114f8:	jmp    QWORD PTR [rip+0xe10a]        # 0x41f608
  4114fe:	nop
  4114ff:	nop
  411500:	jmp    QWORD PTR [rip+0xe0fa]        # 0x41f600
  411506:	nop
  411507:	nop
  411508:	jmp    QWORD PTR [rip+0xe0e2]        # 0x41f5f0
  41150e:	nop
  41150f:	nop
  411510:	jmp    QWORD PTR [rip+0xe0d2]        # 0x41f5e8
  411516:	nop
  411517:	nop
  411518:	jmp    QWORD PTR [rip+0xe0ba]        # 0x41f5d8
  41151e:	nop
  41151f:	nop
  411520:	jmp    QWORD PTR [rip+0xe0aa]        # 0x41f5d0
  411526:	nop
  411527:	nop
  411528:	jmp    QWORD PTR [rip+0xe092]        # 0x41f5c0
  41152e:	nop
  41152f:	nop
  411530:	jmp    QWORD PTR [rip+0xe082]        # 0x41f5b8
  411536:	nop
  411537:	nop
  411538:	jmp    QWORD PTR [rip+0xe072]        # 0x41f5b0
  41153e:	nop
  41153f:	nop
  411540:	jmp    QWORD PTR [rip+0xe062]        # 0x41f5a8
  411546:	nop
  411547:	nop
  411548:	nop    DWORD PTR [rax+rax*1+0x0]
  411550:	mov    rax,QWORD PTR [rip+0xd169]        # 0x41e6c0
  411557:	ret    
  411558:	nop    DWORD PTR [rax+rax*1+0x0]
  411560:	mov    rax,rcx
  411563:	xchg   QWORD PTR [rip+0xd156],rax        # 0x41e6c0
  41156a:	ret    
  41156b:	nop
  41156c:	nop
  41156d:	nop
  41156e:	nop
  41156f:	nop
  411570:	mov    eax,DWORD PTR [rip+0xd15a]        # 0x41e6d0
  411576:	ret    
  411577:	nop    WORD PTR [rax+rax*1+0x0]
  411580:	mov    eax,ecx
  411582:	xchg   DWORD PTR [rip+0xd148],eax        # 0x41e6d0
  411588:	ret    
  411589:	nop    DWORD PTR [rax+0x0]
  411590:	push   rbx
  411591:	sub    rsp,0x20
  411595:	mov    ebx,ecx
  411597:	lea    rcx,[rip+0x7022]        # 0x4185c0
  41159e:	call   QWORD PTR [rip+0xdf2c]        # 0x41f4d0
  4115a4:	lea    rdx,[rip+0x702b]        # 0x4185d6
  4115ab:	mov    rcx,rax
  4115ae:	call   QWORD PTR [rip+0xdf24]        # 0x41f4d8
  4115b4:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x411580
  4115bb:	test   rax,rax
  4115be:	mov    ecx,ebx
  4115c0:	cmove  rax,rdx
  4115c4:	mov    QWORD PTR [rip+0xb8d],rax        # 0x412158
  4115cb:	add    rsp,0x20
  4115cf:	pop    rbx
  4115d0:	rex.W jmp rax
  4115d3:	nop    DWORD PTR [rax]
  4115d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4115e0:	sub    rsp,0x28
  4115e4:	lea    rcx,[rip+0x6fd5]        # 0x4185c0
  4115eb:	call   QWORD PTR [rip+0xdedf]        # 0x41f4d0
  4115f1:	lea    rdx,[rip+0x6ff1]        # 0x4185e9
  4115f8:	mov    rcx,rax
  4115fb:	call   QWORD PTR [rip+0xded7]        # 0x41f4d8
  411601:	lea    rdx,[rip+0xffffffffffffff68]        # 0x411570
  411608:	test   rax,rax
  41160b:	cmove  rax,rdx
  41160f:	mov    QWORD PTR [rip+0xb3a],rax        # 0x412150
  411616:	add    rsp,0x28
  41161a:	rex.W jmp rax
  41161d:	nop    DWORD PTR [rax]
  411620:	mov    rax,QWORD PTR [rip+0xb31]        # 0x412158
  411627:	rex.W jmp rax
  41162a:	nop    WORD PTR [rax+rax*1+0x0]
  411630:	mov    rax,QWORD PTR [rip+0xb19]        # 0x412150
  411637:	rex.W jmp rax
  41163a:	nop
  41163b:	nop
  41163c:	nop
  41163d:	nop
  41163e:	nop
  41163f:	nop
  411640:	jmp    QWORD PTR [rip+0xe162]        # 0x41f7a8
  411646:	nop
  411647:	nop
  411648:	nop    DWORD PTR [rax+rax*1+0x0]
  411650:	jmp    QWORD PTR [rip+0xdf42]        # 0x41f598
  411656:	nop
  411657:	nop
  411658:	jmp    QWORD PTR [rip+0xdf32]        # 0x41f590
  41165e:	nop
  41165f:	nop
  411660:	jmp    QWORD PTR [rip+0xdf22]        # 0x41f588
  411666:	nop
  411667:	nop
  411668:	jmp    QWORD PTR [rip+0xdf12]        # 0x41f580
  41166e:	nop
  41166f:	nop
  411670:	jmp    QWORD PTR [rip+0xdf02]        # 0x41f578
  411676:	nop
  411677:	nop
  411678:	jmp    QWORD PTR [rip+0xdef2]        # 0x41f570
  41167e:	nop
  41167f:	nop
  411680:	jmp    QWORD PTR [rip+0xdee2]        # 0x41f568
  411686:	nop
  411687:	nop
  411688:	jmp    QWORD PTR [rip+0xded2]        # 0x41f560
  41168e:	nop
  41168f:	nop
  411690:	jmp    QWORD PTR [rip+0xdec2]        # 0x41f558
  411696:	nop
  411697:	nop
  411698:	jmp    QWORD PTR [rip+0xdeb2]        # 0x41f550
  41169e:	nop
  41169f:	nop
  4116a0:	jmp    QWORD PTR [rip+0xdea2]        # 0x41f548
  4116a6:	nop
  4116a7:	nop
  4116a8:	jmp    QWORD PTR [rip+0xde92]        # 0x41f540
  4116ae:	nop
  4116af:	nop
  4116b0:	jmp    QWORD PTR [rip+0xde82]        # 0x41f538
  4116b6:	nop
  4116b7:	nop
  4116b8:	jmp    QWORD PTR [rip+0xde72]        # 0x41f530
  4116be:	nop
  4116bf:	nop
  4116c0:	jmp    QWORD PTR [rip+0xde62]        # 0x41f528
  4116c6:	nop
  4116c7:	nop
  4116c8:	jmp    QWORD PTR [rip+0xde52]        # 0x41f520
  4116ce:	nop
  4116cf:	nop
  4116d0:	jmp    QWORD PTR [rip+0xde42]        # 0x41f518
  4116d6:	nop
  4116d7:	nop
  4116d8:	jmp    QWORD PTR [rip+0xde32]        # 0x41f510
  4116de:	nop
  4116df:	nop
  4116e0:	jmp    QWORD PTR [rip+0xde22]        # 0x41f508
  4116e6:	nop
  4116e7:	nop
  4116e8:	jmp    QWORD PTR [rip+0xde12]        # 0x41f500
  4116ee:	nop
  4116ef:	nop
  4116f0:	jmp    QWORD PTR [rip+0xde02]        # 0x41f4f8
  4116f6:	nop
  4116f7:	nop
  4116f8:	jmp    QWORD PTR [rip+0xddf2]        # 0x41f4f0
  4116fe:	nop
  4116ff:	nop
  411700:	jmp    QWORD PTR [rip+0xdde2]        # 0x41f4e8
  411706:	nop
  411707:	nop
  411708:	jmp    QWORD PTR [rip+0xddd2]        # 0x41f4e0
  41170e:	nop
  41170f:	nop
  411710:	jmp    QWORD PTR [rip+0xddc2]        # 0x41f4d8
  411716:	nop
  411717:	nop
  411718:	jmp    QWORD PTR [rip+0xddb2]        # 0x41f4d0
  41171e:	nop
  41171f:	nop
  411720:	jmp    QWORD PTR [rip+0xdda2]        # 0x41f4c8
  411726:	nop
  411727:	nop
  411728:	jmp    QWORD PTR [rip+0xdd92]        # 0x41f4c0
  41172e:	nop
  41172f:	nop
  411730:	jmp    QWORD PTR [rip+0xdd82]        # 0x41f4b8
  411736:	nop
  411737:	nop
  411738:	jmp    QWORD PTR [rip+0xdd72]        # 0x41f4b0
  41173e:	nop
  41173f:	nop
  411740:	jmp    QWORD PTR [rip+0xdd62]        # 0x41f4a8
  411746:	nop
  411747:	nop
  411748:	jmp    QWORD PTR [rip+0xdd52]        # 0x41f4a0
  41174e:	nop
  41174f:	nop
  411750:	jmp    QWORD PTR [rip+0xdd42]        # 0x41f498
  411756:	nop
  411757:	nop
  411758:	jmp    QWORD PTR [rip+0xdd32]        # 0x41f490
  41175e:	nop
  41175f:	nop
  411760:	jmp    QWORD PTR [rip+0xdd22]        # 0x41f488
  411766:	nop
  411767:	nop
  411768:	jmp    QWORD PTR [rip+0xdd12]        # 0x41f480
  41176e:	nop
  41176f:	nop
  411770:	jmp    QWORD PTR [rip+0xdd02]        # 0x41f478
  411776:	nop
  411777:	nop
  411778:	jmp    QWORD PTR [rip+0xdcf2]        # 0x41f470
  41177e:	nop
  41177f:	nop
  411780:	jmp    QWORD PTR [rip+0xdce2]        # 0x41f468
  411786:	nop
  411787:	nop
  411788:	nop    DWORD PTR [rax+rax*1+0x0]
  411790:	push   r14
  411792:	push   r13
  411794:	push   r12
  411796:	push   rbp
  411797:	push   rdi
  411798:	push   rsi
  411799:	push   rbx
  41179a:	sub    rsp,0x30
  41179e:	xor    ebp,ebp
  4117a0:	xor    r13d,r13d
  4117a3:	xor    r12d,r12d
  4117a6:	mov    rbx,rdx
  4117a9:	mov    esi,ecx
  4117ab:	call   0x40b1b0
  4117b0:	lea    rcx,[rip+0x19ce]        # 0x413185
  4117b7:	call   0x411450
  4117bc:	lea    rcx,[rip+0x19cd]        # 0x413190
  4117c3:	mov    rdi,rax
  4117c6:	call   0x411450
  4117cb:	mov    rcx,QWORD PTR [rbx]
  4117ce:	mov    r14,rax
  4117d1:	mov    BYTE PTR [rip+0xa859],0x1        # 0x41c031
  4117d8:	mov    BYTE PTR [rip+0xa851],0x0        # 0x41c030
  4117df:	call   0x401980
  4117e4:	lea    rdx,[rip+0x19b3]        # 0x41319e
  4117eb:	xor    ecx,ecx
  4117ed:	call   0x404c00
  4117f2:	lea    rdx,[rip+0x1937]        # 0x413130
  4117f9:	lea    rcx,[rip+0x199f]        # 0x41319f
  411800:	call   0x40b020
  411805:	lea    rcx,[rip+0x1993]        # 0x41319f
  41180c:	call   0x40b000
  411811:	lea    rcx,[rip+0xfffffffffffeffa8]        # 0x4017c0
  411818:	call   0x40b0f0
  41181d:	nop    DWORD PTR [rax]
  411820:	lea    r9,[rip+0x2019]        # 0x413840
  411827:	lea    r8,[rip+0x19a9]        # 0x4131d7
  41182e:	mov    QWORD PTR [rsp+0x20],0x0
  411837:	mov    rdx,rbx
  41183a:	mov    ecx,esi
  41183c:	call   0x404440
  411841:	cmp    eax,0xffffffff
  411844:	je     0x41191c
  41184a:	cmp    eax,0x64
  41184d:	je     0x411900
  411853:	jle    0x411880
  411855:	cmp    eax,0x68
  411858:	je     0x4118f0
  41185e:	jle    0x4118d0
  411860:	cmp    eax,0x6e
  411863:	je     0x411910
  411869:	cmp    eax,0x73
  41186c:	jne    0x41188e
  41186e:	mov    r13d,0x1
  411874:	jmp    0x411820
  411876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411880:	cmp    eax,0x45
  411883:	je     0x411820
  411885:	cmp    eax,0x56
  411888:	je     0x4118e1
  41188a:	test   eax,eax
  41188c:	je     0x411820
  41188e:	mov    rax,QWORD PTR [rip+0x6f8b]        # 0x418820
  411895:	lea    rcx,[rip+0x1914]        # 0x4131b0
  41189c:	mov    rsi,QWORD PTR [rax]
  41189f:	call   0x40b010
  4118a4:	mov    rbx,rax
  4118a7:	call   QWORD PTR [rip+0xdd23]        # 0x41f5d0
  4118ad:	lea    rcx,[rax+0x60]
  4118b1:	mov    r8,rsi
  4118b4:	mov    rdx,rbx
  4118b7:	call   0x405060
  4118bc:	mov    ecx,0x1
  4118c1:	call   0x4114a0
  4118c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4118d0:	cmp    eax,0x65
  4118d3:	jne    0x41188e
  4118d5:	mov    BYTE PTR [rip+0xa754],0x1        # 0x41c030
  4118dc:	jmp    0x411820
  4118e1:	mov    ebp,0x1
  4118e6:	jmp    0x411820
  4118eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4118f0:	mov    r12d,0x1
  4118f6:	jmp    0x411820
  4118fb:	nop    DWORD PTR [rax+rax*1+0x0]
  411900:	mov    rax,QWORD PTR [rip+0x6f29]        # 0x418830
  411907:	mov    rdi,QWORD PTR [rax]
  41190a:	jmp    0x411820
  41190f:	nop
  411910:	mov    BYTE PTR [rip+0xa71a],0x0        # 0x41c031
  411917:	jmp    0x411820
  41191c:	test   bpl,bpl
  41191f:	jne    0x4119e0
  411925:	test   r12b,r12b
  411928:	jne    0x411af5
  41192e:	test   r13b,r13b
  411931:	mov    r12,QWORD PTR [rip+0x6f08]        # 0x418840
  411938:	jne    0x411a54
  41193e:	sub    esi,DWORD PTR [r12]
  411942:	cmp    esi,0x1
  411945:	je     0x41197e
  411947:	cmp    esi,0x2
  41194a:	je     0x41196f
  41194c:	test   esi,esi
  41194e:	je     0x411c29
  411954:	lea    rcx,[rip+0x1e70]        # 0x4137cb
  41195b:	call   0x40b010
  411960:	xor    edx,edx
  411962:	mov    r8,rax
  411965:	mov    ecx,0x1
  41196a:	call   0x4031c0
  41196f:	movsxd rax,DWORD PTR [r12]
  411973:	lea    edx,[rax+0x1]
  411976:	mov    rdi,QWORD PTR [rbx+rax*8]
  41197a:	mov    DWORD PTR [r12],edx
  41197e:	movsxd rax,DWORD PTR [r12]
  411982:	cmp    BYTE PTR [rip+0xa6a7],0x0        # 0x41c030
  411989:	lea    edx,[rax+0x1]
  41198c:	mov    rbx,QWORD PTR [rbx+rax*8]
  411990:	mov    DWORD PTR [r12],edx
  411994:	jne    0x411be8
  41199a:	test   rdi,rdi
  41199d:	je     0x411bd1
  4119a3:	cmp    BYTE PTR [rdi],0x0
  4119a6:	je     0x411bd1
  4119ac:	test   r14,r14
  4119af:	je     0x4119bb
  4119b1:	cmp    BYTE PTR [r14],0x0
  4119b5:	jne    0x411c50
  4119bb:	call   QWORD PTR [rip+0xdc0f]        # 0x41f5d0
  4119c1:	mov    rdx,rbx
  4119c4:	mov    rsi,rax
  4119c7:	mov    rcx,rdi
  4119ca:	call   0x40b018
  4119cf:	lea    rdx,[rsi+0x30]
  4119d3:	mov    rcx,rax
  4119d6:	call   0x405190
  4119db:	jmp    0x411aee
  4119e0:	mov    rax,QWORD PTR [rip+0x6e39]        # 0x418820
  4119e7:	mov    rcx,QWORD PTR [rax]
  4119ea:	call   0x4016e0
  4119ef:	lea    r9,[rip+0x17eb]        # 0x4131e1
  4119f6:	lea    r8,[rip+0x17a2]        # 0x41319f
  4119fd:	lea    rcx,[rip+0x17e6]        # 0x4131ea
  411a04:	mov    rdx,rax
  411a07:	call   0x405020
  411a0c:	lea    rcx,[rip+0x17ed]        # 0x413200
  411a13:	call   0x40b010
  411a18:	lea    rdx,[rip+0x18d9]        # 0x4132f8
  411a1f:	mov    rcx,rax
  411a22:	call   0x405020
  411a27:	lea    rcx,[rip+0x18df]        # 0x41330d
  411a2e:	call   0x4024a0
  411a33:	lea    rcx,[rip+0x18e2]        # 0x41331c
  411a3a:	mov    rbx,rax
  411a3d:	call   0x40b010
  411a42:	mov    rdx,rbx
  411a45:	mov    rcx,rax
  411a48:	call   0x405020
  411a4d:	xor    ecx,ecx
  411a4f:	call   0x4114a0
  411a54:	cmp    esi,DWORD PTR [r12]
  411a58:	jle    0x411ae1
  411a5e:	test   rdi,rdi
  411a61:	je     0x411a7b
  411a63:	cmp    BYTE PTR [rdi],0x0
  411a66:	je     0x411c49
  411a6c:	test   r14,r14
  411a6f:	je     0x411a7b
  411a71:	cmp    BYTE PTR [r14],0x0
  411a75:	jne    0x411c60
  411a7b:	mov    r13,QWORD PTR [rip+0xdb4e]        # 0x41f5d0
  411a82:	movsxd rax,DWORD PTR [r12]
  411a86:	cmp    BYTE PTR [rip+0xa5a3],0x0        # 0x41c030
  411a8d:	lea    edx,[rax+0x1]
  411a90:	mov    rbp,QWORD PTR [rbx+rax*8]
  411a94:	mov    DWORD PTR [r12],edx
  411a98:	jne    0x411c00
  411a9e:	call   r13
  411aa1:	test   rdi,rdi
  411aa4:	lea    r14,[rax+0x30]
  411aa8:	je     0x411bf8
  411aae:	mov    rcx,rdi
  411ab1:	mov    rdx,rbp
  411ab4:	call   0x40b018
  411ab9:	mov    rcx,rax
  411abc:	mov    rdx,r14
  411abf:	call   0x405190
  411ac4:	cmp    esi,DWORD PTR [r12]
  411ac8:	jle    0x411ae1
  411aca:	call   r13
  411acd:	lea    rdx,[rax+0x30]
  411ad1:	mov    ecx,0x20
  411ad6:	call   0x4050c0
  411adb:	cmp    esi,DWORD PTR [r12]
  411adf:	jg     0x411a82
  411ae1:	cmp    BYTE PTR [rip+0xa549],0x0        # 0x41c031
  411ae8:	jne    0x411c10
  411aee:	xor    ecx,ecx
  411af0:	call   0x4114a0
  411af5:	mov    rax,QWORD PTR [rip+0x6d24]        # 0x418820
  411afc:	lea    rcx,[rip+0x182d]        # 0x413330
  411b03:	mov    rbx,QWORD PTR [rax]
  411b06:	call   0x40b010
  411b0b:	mov    rcx,rax
  411b0e:	mov    r8,rbx
  411b11:	mov    rdx,rbx
  411b14:	lea    rbx,[rip+0x165e]        # 0x413179
  411b1b:	call   0x405020
  411b20:	lea    rcx,[rip+0x1853]        # 0x41337a
  411b27:	call   0x405020
  411b2c:	lea    rcx,[rip+0x184d]        # 0x413380
  411b33:	call   0x40b010
  411b38:	mov    rcx,rax
  411b3b:	call   0x405020
  411b40:	lea    rcx,[rip+0x1833]        # 0x41337a
  411b47:	call   0x405020
  411b4c:	lea    rcx,[rip+0x186d]        # 0x4133c0
  411b53:	call   0x40b010
  411b58:	mov    rcx,rax
  411b5b:	call   0x405020
  411b60:	lea    rcx,[rip+0x1813]        # 0x41337a
  411b67:	call   0x405020
  411b6c:	lea    rcx,[rip+0x1a3e]        # 0x4135b1
  411b73:	call   0x411450
  411b78:	test   rax,rax
  411b7b:	lea    rax,[rip+0x15ae]        # 0x413130
  411b82:	lea    rcx,[rip+0x1a37]        # 0x4135c0
  411b89:	cmove  rbx,rax
  411b8d:	call   0x40b010
  411b92:	mov    rdx,rbx
  411b95:	mov    rcx,rax
  411b98:	call   0x405020
  411b9d:	lea    rcx,[rip+0x17d6]        # 0x41337a
  411ba4:	call   0x405020
  411ba9:	call   QWORD PTR [rip+0xda21]        # 0x41f5d0
  411baf:	lea    rcx,[rip+0x1bea]        # 0x4137a0
  411bb6:	mov    rbx,rax
  411bb9:	call   0x40b010
  411bbe:	lea    rdx,[rbx+0x30]
  411bc2:	mov    rcx,rax
  411bc5:	call   0x405190
  411bca:	xor    ecx,ecx
  411bcc:	call   0x4114a0
  411bd1:	call   QWORD PTR [rip+0xd9f9]        # 0x41f5d0
  411bd7:	lea    rdx,[rax+0x30]
  411bdb:	mov    rcx,rbx
  411bde:	call   0x405190
  411be3:	jmp    0x411aee
  411be8:	mov    rcx,rbx
  411beb:	call   0x401530
  411bf0:	mov    rbx,rax
  411bf3:	jmp    0x41199a
  411bf8:	mov    rcx,rbp
  411bfb:	jmp    0x411abc
  411c00:	mov    rcx,rbp
  411c03:	call   0x401530
  411c08:	mov    rbp,rax
  411c0b:	jmp    0x411a9e
  411c10:	call   QWORD PTR [rip+0xd9ba]        # 0x41f5d0
  411c16:	lea    rdx,[rax+0x30]
  411c1a:	mov    ecx,0xa
  411c1f:	call   0x4050c0
  411c24:	jmp    0x411aee
  411c29:	lea    rcx,[rip+0x1bae]        # 0x4137de
  411c30:	call   0x40b010
  411c35:	xor    edx,edx
  411c37:	mov    r8,rax
  411c3a:	mov    ecx,0x1
  411c3f:	call   0x4031c0
  411c44:	jmp    0x41197e
  411c49:	xor    edi,edi
  411c4b:	jmp    0x411a7b
  411c50:	mov    rdx,r14
  411c53:	mov    rcx,rdi
  411c56:	call   0x40b020
  411c5b:	jmp    0x4119bb
  411c60:	mov    rdx,r14
  411c63:	mov    rcx,rdi
  411c66:	call   0x40b020
  411c6b:	jmp    0x411a7b
  411c70:	(bad)  
  411c71:	(bad)  
  411c72:	(bad)  
  411c73:	(bad)  
  411c74:	(bad)  
  411c75:	(bad)  
  411c76:	(bad)  
  411c77:	inc    DWORD PTR [rax]
  411c79:	add    BYTE PTR [rax],al
  411c7b:	add    BYTE PTR [rax],al
  411c7d:	add    BYTE PTR [rax],al
  411c7f:	add    bh,bh
  411c81:	(bad)  
  411c82:	(bad)  
  411c83:	(bad)  
  411c84:	(bad)  
  411c85:	(bad)  
  411c86:	(bad)  
  411c87:	inc    DWORD PTR [rax]
  411c89:	add    BYTE PTR [rax],al
  411c8b:	add    BYTE PTR [rax],al
  411c8d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000412000 <.data>:
  412000:	or     al,BYTE PTR [rax]
	...
  41200e:	add    BYTE PTR [rax],al
  412010:	add    DWORD PTR [rax],eax
	...
  41201e:	add    BYTE PTR [rax],al
  412020:	(bad)  
  412021:	add    BYTE PTR [rax],al
  412023:	add    BYTE PTR [rcx],al
  412025:	add    BYTE PTR [rax],al
  412027:	add    BYTE PTR [rcx],al
	...
  41203d:	add    BYTE PTR [rax],al
  41203f:	add    BYTE PTR [rbx+0x0],al
	...
  412082:	add    BYTE PTR [rax],al
  412084:	(bad)  
  412085:	(bad)  
  412086:	(bad)  
  412087:	inc    DWORD PTR [rax]
	...
  4120bd:	add    BYTE PTR [rax],al
  4120bf:	add    BYTE PTR [rax+0x411c],cl
	...
  4120cd:	add    BYTE PTR [rax],al
  4120cf:	add    bh,bh
  4120d1:	(bad)  
  4120d2:	(bad)  
  4120d3:	(bad)  
  4120d4:	(bad)  
  4120d5:	(bad)  
  4120d6:	(bad)  
  4120d7:	inc    DWORD PTR [rax]
  4120d9:	add    BYTE PTR [rax],al
  4120db:	add    BYTE PTR [rax],al
  4120dd:	add    BYTE PTR [rax],al
  4120df:	add    bh,bh
	...
  4120ed:	add    BYTE PTR [rax],al
  4120ef:	add    BYTE PTR [rdx],al
	...
  4120fd:	add    BYTE PTR [rax],al
  4120ff:	add    bh,bh
  412101:	(bad)  
  412102:	(bad)  
  412103:	inc    DWORD PTR [rax]
	...
  41210d:	add    BYTE PTR [rax],al
  41210f:	add    BYTE PTR [rax+0x0],al
  412112:	add    BYTE PTR [rax],al
  412114:	ret    
  412115:	mov    edi,0x3fc0ffff
  41211a:	add    BYTE PTR [rax],al
  41211c:	add    DWORD PTR [rax],eax
  41211e:	add    BYTE PTR [rax],al
  412120:	add    BYTE PTR [rax],al
  412122:	add    BYTE PTR [rax],al
  412124:	(bad)  
	...
  41212d:	add    BYTE PTR [rax],al
  41212f:	add    al,al
  412131:	fadd   QWORD PTR [rcx+0x0]
	...
  412140:	push   rax
  412141:	adc    eax,0x41
  412146:	add    BYTE PTR [rax],al
  412148:	(bad)  
  412149:	adc    eax,0x41
  41214e:	add    BYTE PTR [rax],al
  412150:	loopne 0x412167
  412152:	add    BYTE PTR [r8],al
  412155:	add    BYTE PTR [rax],al
  412157:	add    BYTE PTR [rax+0x4115],dl
  41215d:	add    BYTE PTR [rax],al
  41215f:	add    BYTE PTR [rdx],dh
  412161:	movabs ds:0x2b992ddf,al
  41216a:	add    BYTE PTR [rax],al
  41216c:	add    BYTE PTR [rax],al
  41216e:	add    BYTE PTR [rax],al
  412170:	int    0x5d
  412172:	and    dl,dl
  412174:	data16 (bad) 
  412176:	(bad)  
  412177:	inc    DWORD PTR [rax]
  412179:	add    BYTE PTR [rax],al
  41217b:	add    BYTE PTR [rax],al
  41217d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000413000 <.rdata>:
  413000:	(bad)  
  413001:	(bad)
  413006:	je     0x41307e
  413008:	pop    rsp
  413009:	xor    BYTE PTR [rcx],dh
  41300b:	xor    dh,BYTE PTR [rbx]
  41300d:	xor    al,0x35
  41300f:	ss (bad) 
  413011:	add    BYTE PTR [rax],al
  413013:	add    BYTE PTR [rdi-0x1a],ch
  413016:	(bad)  
  413017:	jmp    FWORD PTR [rdi-0x1a]
  41301a:	(bad)  
  41301b:	jmp    FWORD PTR [rdi-0x1a]
  41301e:	(bad)  
  41301f:	jmp    FWORD PTR [rdi-0x1a]
  413022:	(bad)  
  413023:	jmp    FWORD PTR [rdi-0x1a]
  413026:	(bad)  
  413027:	jmp    FWORD PTR [rdi-0x1a]
  41302a:	(bad)  
  41302b:	jmp    FWORD PTR [rdi-0x1a]
  41302e:	(bad)  
  41302f:	jmp    FWORD PTR [rdi-0x1a]
  413032:	(bad)  
  413033:	jmp    QWORD PTR [rcx-0x5e00011a]
  413039:	out    0xfe,al
  41303b:	jmp    QWORD PTR [rcx-0x5e00011a]
  413041:	out    0xfe,al
  413043:	jmp    QWORD PTR [rcx-0x5e00011a]
  413049:	out    0xfe,al
  41304b:	jmp    QWORD PTR [rcx-0x5e00011a]
  413051:	out    0xfe,al
  413053:	jmp    QWORD PTR [rcx-0x5e00011a]
  413059:	out    0xfe,al
  41305b:	jmp    QWORD PTR [rcx-0x5e00011a]
  413061:	out    0xfe,al
  413063:	jmp    QWORD PTR [rcx-0x5e00011a]
  413069:	out    0xfe,al
  41306b:	jmp    QWORD PTR [rcx-0x5e00011a]
  413071:	out    0xfe,al
  413073:	jmp    QWORD PTR [rcx-0x5e00011a]
  413079:	out    0xfe,al
  41307b:	jmp    QWORD PTR [rcx-0x5e00011a]
  413081:	out    0xfe,al
  413083:	jmp    QWORD PTR [rcx-0x5e00011a]
  413089:	out    0xfe,al
  41308b:	jmp    QWORD PTR [rcx-0x5e00011a]
  413091:	out    0xfe,al
  413093:	jmp    QWORD PTR [rcx-0x5e00011a]
  413099:	out    0xfe,al
  41309b:	jmp    QWORD PTR [rcx-0x5e00011a]
  4130a1:	out    0xfe,al
  4130a3:	jmp    QWORD PTR [rcx-0x5e00011a]
  4130a9:	out    0xfe,al
  4130ab:	jmp    QWORD PTR [rcx-0x5e00011a]
  4130b1:	out    0xfe,al
  4130b3:	jmp    QWORD PTR [rcx-0x5e00011a]
  4130b9:	out    0xfe,al
  4130bb:	jmp    QWORD PTR [rcx-0x5e00011a]
  4130c1:	out    0xfe,al
  4130c3:	jmp    QWORD PTR [rbx-0x1a]
  4130c6:	(bad)  
  4130c7:	jmp    QWORD PTR [rcx-0x5e00011a]
  4130cd:	out    0xfe,al
  4130cf:	jmp    QWORD PTR [rcx-0x5e00011a]
  4130d5:	out    0xfe,al
  4130d7:	call   QWORD PTR [rsi-0x1a]
  4130da:	(bad)  
  4130db:	dec    DWORD PTR [rcx-0x1a]
  4130de:	(bad)  
  4130df:	inc    DWORD PTR [rax-0x1a]
  4130e2:	(bad)  
  4130e3:	jmp    QWORD PTR [rcx-0x5e00011a]
  4130e9:	out    0xfe,al
  4130eb:	push   QWORD PTR [rbx]
  4130ed:	out    0xfe,al
  4130ef:	jmp    QWORD PTR [rcx-0x5e00011a]
  4130f5:	out    0xfe,al
  4130f7:	jmp    QWORD PTR [rcx-0x5e00011a]
  4130fd:	out    0xfe,al
  4130ff:	jmp    QWORD PTR [rcx-0x5e00011a]
  413105:	out    0xfe,al
  413107:	jmp    QWORD PTR [rcx+0x26fffee6]
  41310d:	out    0xfe,al
  41310f:	jmp    QWORD PTR [rcx-0x5e00011a]
  413115:	out    0xfe,al
  413117:	jmp    QWORD PTR [rcx+0x19fffee6]
  41311d:	out    0xfe,al
  41311f:	jmp    QWORD PTR [rcx+0xcfffee6]
  413125:	out    0xfe,al
  413127:	jmp    QWORD PTR [rcx-0x3500011a]
  41312d:	in     eax,0xfe
  41312f:	jmp    FWORD PTR [rdi]
  413131:	jae    0x413196
  413133:	jb     0x413196
  413135:	je     0x41319a
  413137:	push   0x65776a2f
  41313c:	(bad)  
  41313d:	ins    DWORD PTR es:[rdi],dx
  41313e:	js     0x4131a5
  413140:	sub    eax,0x6174636f
  413145:	jbe    0x4131ac
  413147:	(bad)  
  413148:	xor    al,0x2e
  41314a:	xor    ch,BYTE PTR [rsi]
  41314c:	xor    DWORD PTR [rdi],ebp
  41314e:	ja     0x413186
  413150:	xor    al,0x2d
  413152:	xor    esi,DWORD PTR [rdx]
  413154:	(bad)  
  413155:	jne    0x4131ca
  413157:	jb     0x413188
  413159:	js     0x413193
  41315b:	ss pop rdi
  41315d:	ss xor al,0x2d
  413160:	ja     0x413198
  413162:	xor    al,0x2d
  413164:	ins    DWORD PTR es:[rdi],dx
  413165:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  41316c:	jae    0x4131d6
  41316e:	(bad)  
  41316f:	jb     0x4131d6
  413171:	(bad)  
  413172:	ins    BYTE PTR es:[rdi],dx
  413173:	outs   dx,DWORD PTR ds:[rsi]
  413174:	movsxd esp,DWORD PTR [rcx+0x6c]
  413177:	add    BYTE PTR gs:[rax+0x6c],al
  41317b:	outs   dx,DWORD PTR ds:[rsi]
  41317c:	movsxd esp,DWORD PTR [rcx+0x6c]
  41317f:	gs imul esi,DWORD PTR fs:[rdx+0x40],0x58455400
  413188:	push   rsp
  413189:	rex.R
  41318a:	rex.WRXB
  41318b:	rex.WRB
  41318c:	rex.B
  41318d:	rex.WB
  41318e:	rex.WRX add BYTE PTR [rbp+r8*2+0x58],r10b
  413193:	push   rsp
  413194:	rex.R
  413195:	rex.WRXB
  413196:	rex.WRB
  413197:	rex.B
  413198:	rex.WB
  413199:	rex.WRX
  41319a:	rex.R
  41319b:	rex.WB push r10
  41319d:	add    BYTE PTR [rax],al
  41319f:	addr32 gs je 0x413217
  4131a3:	gs js  0x41321a
  4131a6:	sub    eax,0x746e7572
  4131ab:	imul   ebp,DWORD PTR [rbp+0x65],0x72540000
  4131b2:	jns    0x4131d4
  4131b4:	(bad)  
  4131b5:	and    eax,0x2d2d2073
  4131ba:	push   0x27706c65
  4131bf:	and    BYTE PTR [rsi+0x6f],ah
  4131c2:	jb     0x4131e4
  4131c4:	ins    DWORD PTR es:[rdi],dx
  4131c5:	outs   dx,DWORD PTR ds:[rsi]
  4131c6:	jb     0x41322d
  4131c8:	and    BYTE PTR [rcx+0x6e],ch
  4131cb:	outs   dx,WORD PTR ds:[rsi]
  4131cd:	jb     0x41323c
  4131cf:	(bad)  
  4131d0:	je     0x41323b
  4131d2:	outs   dx,DWORD PTR ds:[rsi]
  4131d3:	outs   dx,BYTE PTR ds:[rsi]
  4131d4:	or     al,BYTE PTR cs:[rax]
  4131d7:	sub    esp,DWORD PTR [rdx+rdi*1+0x65]
  4131db:	rex.RB push 0x56736e
  4131e1:	xor    BYTE PTR [rsi],ch
  4131e3:	xor    DWORD PTR [rcx],edi
  4131e5:	cs xor eax,0x2500312e
  4131eb:	jae    0x41320d
  4131ed:	sub    BYTE PTR [rdi+0x4e],al
  4131f0:	push   rbp
  4131f1:	and    BYTE PTR [rip+0x25202973],ah        # 0x25615b6a
  4131f7:	jae    0x413203
  4131f9:	add    BYTE PTR [rax],al
  4131fb:	add    BYTE PTR [rax],al
  4131fd:	add    BYTE PTR [rax],al
  4131ff:	add    BYTE PTR [rbx+0x6f],al
  413202:	jo     0x41327d
  413204:	jb     0x41326f
  413206:	addr32 push 0x43282074
  41320c:	sub    DWORD PTR [rax],esp
  41320e:	and    eax,0x72462073
  413213:	gs and BYTE PTR gs:[rbx+0x6f],dl
  413218:	data16 je 0x413292
  41321b:	(bad)  
  41321c:	jb     0x413283
  41321e:	and    BYTE PTR [rsi+0x6f],al
  413221:	jne    0x413291
  413223:	fs (bad) 
  413225:	je     0x413290
  413227:	outs   dx,DWORD PTR ds:[rsi]
  413228:	outs   dx,BYTE PTR ds:[rsi]
  413229:	sub    al,0x20
  41322b:	rex.WB outs dx,BYTE PTR ds:[rsi]
  41322d:	movsxd ebp,DWORD PTR [rsi]
  41322f:	or     cl,BYTE PTR [rcx+rbp*2+0x63]
  413233:	outs   dx,BYTE PTR gs:[rsi]
  413235:	jae    0x41329c
  413237:	and    BYTE PTR [rdi+0x50],al
  41323a:	rex.WR jbe 0x413270
  41323d:	sub    edi,DWORD PTR [rdx]
  41323f:	and    BYTE PTR [rdi+0x4e],al
  413242:	push   rbp
  413243:	and    BYTE PTR [rdi+0x50],al
  413246:	rex.WR and BYTE PTR [rsi+0x65],r14b
  41324a:	jb     0x4132bf
  41324c:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203320
  413253:	jb     0x413275
  413255:	ins    BYTE PTR es:[rdi],dx
  413256:	(bad)  
  413257:	je     0x4132be
  413259:	jb     0x41327b
  41325b:	cmp    al,0x68
  41325d:	je     0x4132d3
  41325f:	jo     0x41329b
  413261:	(bad)  
  413262:	(bad)  
  413263:	outs   dx,BYTE PTR ds:[esi]
  413265:	jne    0x413295
  413267:	outs   dx,DWORD PTR ds:[rsi]
  413268:	jb     0x4132d1
  41326a:	(bad)  
  41326b:	ins    BYTE PTR es:[rdi],dx
  41326c:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  413273:	(bad)  
  413274:	addr32 jo 0x4132e3
  413277:	cs push 0x3e6c6d74
  41327d:	or     dl,BYTE PTR [rax+rbp*2+0x69]
  413281:	jae    0x4132a3
  413283:	imul   esi,DWORD PTR [rbx+0x20],0x65657266
  41328a:	and    BYTE PTR [rbx+0x6f],dh
  41328d:	data16 je 0x413307
  413290:	(bad)  
  413291:	jb     0x4132f8
  413293:	cmp    ah,BYTE PTR [rax]
  413295:	jns    0x413306
  413297:	jne    0x4132b9
  413299:	(bad)  
  41329a:	jb     0x413301
  41329c:	and    BYTE PTR [rsi+0x72],ah
  41329f:	gs and BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4132a5:	movsxd ebp,DWORD PTR [rax+0x61]
  4132a8:	outs   dx,BYTE PTR ds:[rsi]
  4132a9:	and    BYTE PTR gs:[ecx+0x6e],ah
  4132ae:	and    BYTE PTR fs:[rdx+0x65],dh
  4132b2:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  4132ba:	je     0x413321
  4132bc:	and    BYTE PTR [rcx+0x74],ch
  4132bf:	or     dl,BYTE PTR cs:[rax+rbp*2+0x65]
  4132c4:	jb     0x41332b
  4132c6:	and    BYTE PTR [rcx+0x73],ch
  4132c9:	and    BYTE PTR [rsi+0x4f],cl
  4132cc:	and    BYTE PTR [rdi+0x41],dl
  4132cf:	push   rdx
  4132d0:	push   rdx
  4132d1:	rex.B
  4132d2:	rex.WRX push rsp
  4132d4:	pop    rcx
  4132d5:	sub    al,0x20
  4132d7:	je     0x413348
  4132d9:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4132dd:	and    BYTE PTR [rbp+0x78],ah
  4132e0:	je     0x413347
  4132e2:	outs   dx,BYTE PTR ds:[rsi]
  4132e3:	je     0x413305
  4132e5:	jo     0x41334c
  4132e7:	jb     0x413356
  4132e9:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x79622064
  4132f1:	and    BYTE PTR [rcx+riz*2+0x77],ch
  4132f5:	or     al,BYTE PTR cs:[rax]
  4132f8:	xor    DWORD PTR [rcx],edi
  4132fa:	cmp    DWORD PTR [rip+0x3939312d],esi        # 0x397a642d
  413300:	(bad)  
  413301:	sub    al,0x20
  413303:	xor    dh,BYTE PTR [rax]
  413305:	xor    BYTE PTR [rax],dh
  413307:	sub    eax,0x37303032
  41330c:	add    BYTE PTR [rbp+0x6c],dl
  41330f:	jb     0x41337a
  413311:	movsxd ebp,DWORD PTR [rax+0x20]
  413314:	rex.R jb 0x41337c
  413317:	jo     0x413389
  413319:	gs jb  0x41331c
  41331c:	push   rdi
  41331d:	jb     0x413388
  41331f:	je     0x413395
  413321:	outs   dx,BYTE PTR gs:[rsi]
  413323:	and    BYTE PTR [rdx+0x79],ah
  413326:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4b619f
  41332c:	add    BYTE PTR [rax],al
  41332e:	add    BYTE PTR [rax],al
  413330:	push   rbp
  413331:	jae    0x413394
  413333:	cmp    ah,BYTE PTR gs:[eax]
  413337:	and    eax,0x4f5b2073
  41333c:	push   rax
  41333d:	push   rsp
  41333e:	rex.WB
  41333f:	rex.WRXB
  413340:	rex.WRX pop rbp
  413342:	and    BYTE PTR [rbx+0x5b],bl
  413345:	push   rsp
  413346:	rex.RB pop r8
  413348:	push   rsp
  413349:	rex.R
  41334a:	rex.WRXB
  41334b:	rex.WRB
  41334c:	rex.B
  41334d:	rex.WB
  41334e:	rex.WRX pop rbp
  413350:	and    BYTE PTR [rbp+0x53],cl
  413353:	rex.RXB
  413354:	rex.WB
  413355:	rex.R pop rbp
  413357:	or     ch,BYTE PTR [rdi+0x72]
  41335a:	cmp    ah,BYTE PTR [rax]
  41335c:	and    BYTE PTR [rax],ah
  41335e:	and    BYTE PTR [rip+0x4f5b2073],ah        # 0x4f9c53d7
  413364:	push   rax
  413365:	push   rsp
  413366:	rex.WB
  413367:	rex.WRXB
  413368:	rex.WRX pop rbp
  41336a:	and    BYTE PTR [rip+0x4d5b2073],ch        # 0x4d9c53e3
  413370:	push   rbx
  413371:	rex.RXB
  413372:	rex.WB
  413373:	rex.R pop rbp
  413375:	cs cs or al,BYTE PTR cs:[rax]
  41337a:	or     al,BYTE PTR [rax]
  41337c:	add    BYTE PTR [rax],al
  41337e:	add    BYTE PTR [rax],al
  413380:	imul   r14d,DWORD PTR [rbx+0x70],0x2079616c
  413388:	outs   dx,BYTE PTR ds:[rsi]
  413389:	(bad)  
  41338a:	je     0x4133f5
  41338c:	jbe    0x4133f3
  41338e:	and    BYTE PTR [rcx+riz*2+0x6e],ch
  413392:	addr32 jne 0x4133f6
  413395:	and    BYTE PTR gs:[edx+esi*2+0x61],dh
  41339b:	outs   dx,BYTE PTR ds:[rsi]
  41339c:	jae    0x41340a
  41339e:	(bad)  
  41339f:	je     0x41340a
  4133a1:	outs   dx,DWORD PTR ds:[rsi]
  4133a2:	outs   dx,BYTE PTR ds:[rsi]
  4133a3:	and    BYTE PTR [rdi+0x66],ch
  4133a6:	and    BYTE PTR [rcx+0x20],ah
  4133a9:	je     0x413410
  4133ab:	js     0x413421
  4133ad:	jne    0x413410
  4133af:	ins    BYTE PTR es:[rdi],dx
  4133b0:	and    BYTE PTR [rbp+0x65],ch
  4133b3:	jae    0x413428
  4133b5:	(bad)  
  4133b6:	gs or  al,BYTE PTR cs:[eax]
  4133bb:	add    BYTE PTR [rax],al
  4133bd:	add    BYTE PTR [rax],al
  4133bf:	add    BYTE PTR [rax],ah
  4133c1:	and    BYTE PTR [rip+0x2d202c64],ch        # 0x2d61602b
  4133c7:	sub    eax,0x616d6f64
  4133cc:	imul   ebp,DWORD PTR [rsi+0x3d],0x54584554
  4133d3:	rex.R
  4133d4:	rex.WRXB
  4133d5:	rex.WRB
  4133d6:	rex.B
  4133d7:	rex.WB
  4133d8:	rex.WRX and BYTE PTR [rax],r12b
  4133db:	and    BYTE PTR [rdx+0x65],dh
  4133de:	je     0x413452
  4133e0:	imul   esp,DWORD PTR [rbp+0x76],0x72742065
  4133e7:	(bad)  
  4133e8:	outs   dx,BYTE PTR ds:[rsi]
  4133e9:	jae    0x413457
  4133eb:	(bad)  
  4133ec:	je     0x413453
  4133ee:	and    BYTE PTR fs:[rbp+0x65],ch
  4133f2:	jae    0x413467
  4133f4:	(bad)  
  4133f5:	addr32 gs jae 0x413419
  4133f9:	data16 jb 0x41346b
  4133fc:	ins    DWORD PTR es:[rdi],dx
  4133fd:	and    BYTE PTR [rbp+rax*2+0x58],dl
  413401:	push   rsp
  413402:	rex.R
  413403:	rex.WRXB
  413404:	rex.WRB
  413405:	rex.B
  413406:	rex.WB
  413407:	rex.WRX or r12b,BYTE PTR [rax]
  41340a:	and    BYTE PTR [rip+0x20202065],ch        # 0x20615475
  413410:	and    BYTE PTR [rax],ah
  413412:	and    BYTE PTR [rax],ah
  413414:	and    BYTE PTR [rax],ah
  413416:	and    BYTE PTR [rax],ah
  413418:	and    BYTE PTR [rax],ah
  41341a:	and    BYTE PTR [rax],ah
  41341c:	and    BYTE PTR [rax],ah
  41341e:	and    BYTE PTR [rax],ah
  413420:	and    BYTE PTR [rax],ah
  413422:	and    BYTE PTR [rax],ah
  413424:	and    BYTE PTR [rbp+0x6e],ah
  413427:	(bad)  
  413428:	(bad)  
  413429:	ins    BYTE PTR es:[rdi],dx
  41342a:	and    BYTE PTR gs:[rbp+0x78],ah
  41342e:	jo     0x413491
  413430:	outs   dx,BYTE PTR ds:[rsi]
  413431:	jae    0x41349c
  413433:	outs   dx,DWORD PTR ds:[rsi]
  413434:	outs   dx,BYTE PTR ds:[rsi]
  413435:	and    BYTE PTR [rdi+0x66],ch
  413438:	and    BYTE PTR [rbx+0x6f],dh
  41343b:	ins    DWORD PTR es:[rdi],dx
  41343c:	and    BYTE PTR gs:[rbp+0x73],ah
  413440:	movsxd esp,DWORD PTR [rcx+0x70]
  413443:	and    BYTE PTR gs:[rbx+0x65],dh
  413447:	jno    0x4134be
  413449:	outs   dx,BYTE PTR gs:[rsi]
  41344b:	movsxd esp,DWORD PTR [rbp+0x73]
  41344e:	or     ah,BYTE PTR [rax]
  413450:	and    BYTE PTR [rip+0x20202045],ch        # 0x2061549b
  413456:	and    BYTE PTR [rax],ah
  413458:	and    BYTE PTR [rax],ah
  41345a:	and    BYTE PTR [rax],ah
  41345c:	and    BYTE PTR [rax],ah
  41345e:	and    BYTE PTR [rax],ah
  413460:	and    BYTE PTR [rax],ah
  413462:	and    BYTE PTR [rax],ah
  413464:	and    BYTE PTR [rax],ah
  413466:	and    BYTE PTR [rax],ah
  413468:	and    BYTE PTR [rax],ah
  41346a:	and    BYTE PTR [rax],ch
  41346c:	imul   esp,DWORD PTR [rdi+0x6e],0x6465726f
  413473:	and    BYTE PTR [rsi+0x6f],ah
  413476:	jb     0x413498
  413478:	movsxd ebp,DWORD PTR [rdi+0x6d]
  41347b:	jo     0x4134de
  41347d:	je     0x4134e8
  41347f:	(bad)  
  413480:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x200a2979
  413488:	and    BYTE PTR [rip+0x2d202c68],ch        # 0x2d6160f6
  41348e:	sub    eax,0x706c6568
  413493:	and    BYTE PTR [rax],ah
  413495:	and    BYTE PTR [rax],ah
  413497:	and    BYTE PTR [rax],ah
  413499:	and    BYTE PTR [rax],ah
  41349b:	and    BYTE PTR [rax],ah
  41349d:	and    BYTE PTR [rax],ah
  41349f:	and    BYTE PTR [rax],ah
  4134a1:	and    BYTE PTR [rax],ah
  4134a3:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  4134ab:	je     0x413515
  4134ad:	imul   esi,DWORD PTR [rbx+0x20],0x706c6568
  4134b4:	and    BYTE PTR [rcx+0x6e],ah
  4134b7:	and    BYTE PTR fs:[rbp+0x78],ah
  4134bb:	imul   esi,DWORD PTR [rdx+rcx*1+0x20],0x206e2d20
  4134c3:	and    BYTE PTR [rax],ah
  4134c5:	and    BYTE PTR [rax],ah
  4134c7:	and    BYTE PTR [rax],ah
  4134c9:	and    BYTE PTR [rax],ah
  4134cb:	and    BYTE PTR [rax],ah
  4134cd:	and    BYTE PTR [rax],ah
  4134cf:	and    BYTE PTR [rax],ah
  4134d1:	and    BYTE PTR [rax],ah
  4134d3:	and    BYTE PTR [rax],ah
  4134d5:	and    BYTE PTR [rax],ah
  4134d7:	and    BYTE PTR [rax],ah
  4134d9:	and    BYTE PTR [rbx+0x75],dh
  4134dc:	jo     0x41354e
  4134de:	jb     0x413545
  4134e0:	jae    0x413555
  4134e2:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4134e6:	imul   ebp,DWORD PTR [rcx+rbp*2+0x6e],0x656e2067
  4134ee:	ja     0x41355c
  4134f0:	imul   ebp,DWORD PTR [rsi+0x65],0x2d20200a
  4134f7:	push   rsi
  4134f8:	sub    al,0x20
  4134fa:	sub    eax,0x7265762d
  4134ff:	jae    0x41356a
  413501:	outs   dx,DWORD PTR ds:[rsi]
  413502:	outs   dx,BYTE PTR ds:[rsi]
  413503:	and    BYTE PTR [rax],ah
  413505:	and    BYTE PTR [rax],ah
  413507:	and    BYTE PTR [rax],ah
  413509:	and    BYTE PTR [rax],ah
  41350b:	and    BYTE PTR [rax],ah
  41350d:	and    BYTE PTR [rax],ah
  41350f:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  413513:	jo     0x413581
  413515:	(bad)  
  413516:	jns    0x413538
  413518:	jbe    0x41357f
  41351a:	jb     0x41358f
  41351c:	imul   ebp,DWORD PTR [rdi+0x6e],0x666e6920
  413523:	outs   dx,DWORD PTR ds:[rsi]
  413524:	jb     0x413593
  413526:	(bad)  
  413527:	je     0x413592
  413529:	outs   dx,DWORD PTR ds:[rsi]
  41352a:	outs   dx,BYTE PTR ds:[rsi]
  41352b:	and    BYTE PTR [rcx+0x6e],ah
  41352e:	and    BYTE PTR fs:[rbp+0x78],ah
  413532:	imul   esi,DWORD PTR [rdx+rcx*1+0x20],0x45545b20
  41353a:	pop    rax
  41353b:	push   rsp
  41353c:	rex.R
  41353d:	rex.WRXB
  41353e:	rex.WRB
  41353f:	rex.B
  413540:	rex.WB
  413541:	rex.WRX pop rbp
  413543:	and    BYTE PTR [rbp+0x53],cl
  413546:	rex.RXB
  413547:	rex.WB
  413548:	and    BYTE PTR [rax],r12b
  41354b:	and    BYTE PTR [rax],ah
  41354d:	and    BYTE PTR [rax],ah
  41354f:	and    BYTE PTR [rax],ah
  413551:	jb     0x4135b8
  413553:	je     0x4135c7
  413555:	imul   esp,DWORD PTR [rbp+0x76],0x72742065
  41355c:	(bad)  
  41355d:	outs   dx,BYTE PTR ds:[rsi]
  41355e:	jae    0x4135cc
  413560:	(bad)  
  413561:	je     0x4135c8
  413563:	and    BYTE PTR fs:[rbp+0x65],ch
  413567:	jae    0x4135dc
  413569:	(bad)  
  41356a:	and    BYTE PTR gs:[ebx+0x6f],ah
  41356f:	jb     0x4135e3
  413571:	gs jae 0x4135e4
  413574:	outs   dx,DWORD PTR ds:[rsi]
  413575:	outs   dx,BYTE PTR ds:[rsi]
  413576:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x2020200a
  41357e:	and    BYTE PTR [rax],ah
  413580:	and    BYTE PTR [rax],ah
  413582:	and    BYTE PTR [rax],ah
  413584:	and    BYTE PTR [rax],ah
  413586:	and    BYTE PTR [rax],ah
  413588:	and    BYTE PTR [rax],ah
  41358a:	and    BYTE PTR [rax],ah
  41358c:	and    BYTE PTR [rax],ah
  41358e:	and    BYTE PTR [rax],ah
  413590:	and    BYTE PTR [rax],ah
  413592:	and    BYTE PTR [rax],ah
  413594:	and    BYTE PTR [rax],ah
  413596:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41359a:	rex.WRB push r11
  41359c:	rex.RXB
  41359d:	rex.WB
  41359e:	and    BYTE PTR [rsi+0x72],r12b
  4135a2:	outs   dx,DWORD PTR ds:[rsi]
  4135a3:	ins    DWORD PTR es:[rdi],dx
  4135a4:	and    BYTE PTR [rbp+rax*2+0x58],dl
  4135a8:	push   rsp
  4135a9:	rex.R
  4135aa:	rex.WRXB
  4135ab:	rex.WRB
  4135ac:	rex.B
  4135ad:	rex.WB
  4135ae:	rex.WRX or r8b,BYTE PTR [rax]
  4135b1:	rex.WB
  4135b2:	rex.WRX pop rdi
  4135b4:	rex.W
  4135b5:	rex.RB
  4135b6:	rex.WR push rax
  4135b8:	xor    cl,BYTE PTR [rbp+0x41]
  4135bb:	rex.WRX add BYTE PTR [rax],r8b
  4135be:	add    BYTE PTR [rax],al
  4135c0:	rex.WB
  4135c1:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  4135c6:	and    BYTE PTR [rbp+rax*2+0x58],dl
  4135ca:	push   rsp
  4135cb:	rex.R
  4135cc:	rex.WRXB
  4135cd:	rex.WRB
  4135ce:	rex.B
  4135cf:	rex.WB
  4135d0:	rex.WRX and BYTE PTR [rax+0x61],r14b
  4135d4:	jb     0x413637
  4135d6:	ins    DWORD PTR es:[rdi],dx
  4135d7:	gs je  0x41363f
  4135da:	jb     0x4135fc
  4135dc:	imul   esi,DWORD PTR [rbx+0x20],0x20746f6e
  4135e3:	imul   esi,DWORD PTR [esi+0x65],0x74202c6e
  4135eb:	push   0x6f642065
  4135f0:	ins    DWORD PTR es:[rdi],dx
  4135f1:	(bad)  
  4135f2:	imul   ebp,DWORD PTR [rsi+0x20],0x64207369
  4135f9:	gs je  0x413661
  4135fc:	jb     0x41366b
  4135fe:	imul   ebp,DWORD PTR [rsi+0x65],0x72662064
  413605:	outs   dx,DWORD PTR ds:[rsi]
  413606:	ins    DWORD PTR es:[rdi],dx
  413607:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41360b:	or     ah,BYTE PTR [rbp+0x6e]
  41360e:	jbe    0x413679
  413610:	jb     0x413681
  413612:	outs   dx,BYTE PTR ds:[rsi]
  413613:	ins    DWORD PTR es:[rdi],dx
  413614:	outs   dx,BYTE PTR gs:[rsi]
  413616:	je     0x413638
  413618:	jbe    0x41367b
  41361a:	jb     0x413685
  41361c:	(bad)  
  41361d:	(bad)  
  41361e:	ins    BYTE PTR es:[rdi],dx
  41361f:	and    BYTE PTR gs:[rbp+rax*2+0x58],dl
  413624:	push   rsp
  413625:	rex.R
  413626:	rex.WRXB
  413627:	rex.WRB
  413628:	rex.B
  413629:	rex.WB
  41362a:	rex.WRX
  41362b:	and    BYTE PTR cs:[rax],ah
  41362e:	rex.WB
  41362f:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  413634:	and    BYTE PTR [rbp+0x65],ch
  413637:	jae    0x4136ac
  413639:	(bad)  
  41363a:	and    BYTE PTR gs:[ebx+0x61],ah
  41363f:	je     0x4136a2
  413641:	ins    BYTE PTR es:[rdi],dx
  413642:	outs   dx,DWORD PTR ds:[rsi]
  413643:	and    BYTE PTR [ecx+0x73],ch
  413647:	and    BYTE PTR [rsi+0x6f],ch
  41364a:	je     0x41366c
  41364c:	outs   dx,WORD PTR ds:[rsi]
  41364e:	jne    0x4136be
  413650:	and    BYTE PTR fs:[rcx+0x6e],ch
  413654:	and    BYTE PTR [rax+rbp*2+0x65],dh
  413658:	or     dh,BYTE PTR [rdx+0x65]
  41365b:	addr32 jne 0x4136ca
  41365e:	(bad)  
  41365f:	jb     0x413681
  413661:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  413669:	jns    0x413697
  41366b:	and    BYTE PTR [rcx+0x6e],ah
  41366e:	outs   dx,DWORD PTR ds:[rsi]
  41366f:	je     0x4136d9
  413671:	gs jb  0x413694
  413674:	ins    BYTE PTR es:[rdi],dx
  413675:	outs   dx,DWORD PTR ds:[rsi]
  413676:	movsxd esp,DWORD PTR [rcx+0x74]
  413679:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e616320
  413680:	and    BYTE PTR [rdx+0x65],ah
  413683:	and    BYTE PTR [rbx+0x70],dh
  413686:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  41368a:	imul   esp,DWORD PTR [rbp+0x64],0x74697720
  413691:	push   0x65687420
  413696:	and    BYTE PTR [rbp+0x6e],ah
  413699:	jbe    0x413704
  41369b:	jb     0x41370c
  41369d:	outs   dx,BYTE PTR ds:[rsi]
  41369e:	ins    DWORD PTR es:[rdi],dx
  41369f:	outs   dx,BYTE PTR gs:[rsi]
  4136a1:	je     0x4136ad
  4136a3:	jbe    0x413706
  4136a5:	jb     0x413710
  4136a7:	(bad)  
  4136a8:	(bad)  
  4136a9:	ins    BYTE PTR es:[rdi],dx
  4136aa:	and    BYTE PTR gs:[rbp+rax*2+0x58],dl
  4136af:	push   rsp
  4136b0:	rex.R
  4136b1:	rex.WRXB
  4136b2:	rex.WRB
  4136b3:	rex.B
  4136b4:	rex.WB
  4136b5:	rex.WRX
  4136b6:	rex.R
  4136b7:	rex.WB push r10
  4136b9:	or     dl,BYTE PTR cs:[rdi+0x68]
  4136bd:	outs   dx,BYTE PTR gs:[rsi]
  4136bf:	and    BYTE PTR [rbp+0x73],dh
  4136c2:	gs and BYTE PTR fs:[rdi+0x69],dh
  4136c7:	je     0x413731
  4136c9:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4136cd:	and    BYTE PTR [rip+0x706f2073],ch        # 0x70b05746
  4136d3:	je     0x41373e
  4136d5:	outs   dx,DWORD PTR ds:[rsi]
  4136d6:	outs   dx,BYTE PTR ds:[rsi]
  4136d7:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4136db:	and    BYTE PTR [rax+0x72],dh
  4136de:	outs   dx,DWORD PTR ds:[rsi]
  4136df:	addr32 jb 0x413743
  4136e2:	ins    DWORD PTR es:[rdi],dx
  4136e3:	and    BYTE PTR [rdx+0x65],ah
  4136e6:	push   0x73657661
  4136eb:	and    BYTE PTR [rcx+rbp*2+0x6b],ch
  4136ef:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  4136f4:	and    BYTE PTR [rdi],ah
  4136f6:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  4136fa:	(bad)  
  4136fb:	and    BYTE PTR [rbx+0x6f],ah
  4136fe:	ins    DWORD PTR es:[rdi],dx
  4136ff:	ins    DWORD PTR es:[rdi],dx
  413700:	(bad)  
  413701:	outs   dx,BYTE PTR ds:[rsi]
  413702:	fs or  al,BYTE PTR cs:[rdx+0x75]
  413707:	je     0x413729
  413709:	imul   esi,DWORD PTR [rax+riz*1+0x64],0x2073656f
  413711:	outs   dx,BYTE PTR ds:[rsi]
  413712:	outs   dx,DWORD PTR ds:[rsi]
  413713:	je     0x413735
  413715:	jae    0x413780
  413717:	ins    DWORD PTR es:[rdi],dx
  413718:	jo     0x413786
  41371a:	jns    0x41373c
  41371c:	movsxd ebp,DWORD PTR [rdi+0x70]
  41371f:	jns    0x413741
  413721:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x75677261
  413729:	ins    DWORD PTR es:[rdi],dx
  41372a:	outs   dx,BYTE PTR gs:[rsi]
  41372c:	je     0x4137a1
  41372e:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  413732:	jae    0x4137a8
  413734:	outs   dx,DWORD PTR fs:[rsi]
  413736:	jne    0x4137ac
  413738:	and    BYTE PTR cs:[rax],ah
  41373b:	rex.WB outs dx,BYTE PTR ds:[rsi]
  41373d:	jae    0x4137b3
  41373f:	gs (bad) 
  413741:	and    BYTE PTR fs:[rax+rbp*2+0x6f],dh
  413746:	jae    0x4137ad
  413748:	and    BYTE PTR [rbp+0x65],ch
  41374b:	jae    0x4137c0
  41374d:	(bad)  
  41374e:	addr32 gs jae 0x41375c
  413752:	outs   dx,WORD PTR ds:[rsi]
  413754:	jne    0x4137c4
  413756:	and    BYTE PTR fs:[rcx+0x6e],ch
  41375a:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41375e:	and    BYTE PTR [rbx+0x65],dh
  413761:	ins    BYTE PTR es:[rdi],dx
  413762:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  413767:	and    BYTE PTR [rbx+0x61],ah
  41376a:	je     0x4137cd
  41376c:	ins    BYTE PTR es:[rdi],dx
  41376d:	outs   dx,DWORD PTR ds:[rsi]
  41376e:	and    BYTE PTR [ecx+0x72],ah
  413772:	and    BYTE PTR gs:[rdx+rsi*2+0x61],dh
  413777:	outs   dx,BYTE PTR ds:[rsi]
  413778:	jae    0x4137e6
  41377a:	(bad)  
  41377b:	je     0x4137e2
  41377d:	fs or  dl,BYTE PTR cs:[rbx+0x74]
  413782:	(bad)  
  413783:	outs   dx,BYTE PTR ds:[rsi]
  413784:	fs (bad) 
  413786:	jb     0x4137ec
  413788:	and    BYTE PTR [rbx+0x65],dh
  41378b:	(bad)  
  41378c:	jb     0x4137f1
  41378e:	push   0x72696420
  413793:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  413798:	jns    0x4137d4
  41379a:	and    BYTE PTR [rip+0xa73],ah        # 0x414213
  4137a0:	push   rdx
  4137a1:	gs jo  0x413813
  4137a4:	jb     0x41381a
  4137a6:	and    BYTE PTR [rdx+0x75],ah
  4137a9:	addr32 jae 0x4137cc
  4137ac:	je     0x41381d
  4137ae:	and    BYTE PTR [rdx+riz*2],bh
  4137b1:	jne    0x41381a
  4137b3:	sub    eax,0x2d756e67
  4137b8:	addr32 gs je 0x413830
  4137bc:	gs js  0x413833
  4137bf:	rex
  4137c0:	outs   dx,BYTE PTR ds:[esi]
  4137c2:	jne    0x4137f2
  4137c4:	outs   dx,DWORD PTR ds:[rsi]
  4137c5:	jb     0x41382e
  4137c7:	ds or  al,BYTE PTR cs:[rax]
  4137cb:	je     0x41383c
  4137cd:	outs   dx,DWORD PTR ds:[rsi]
  4137ce:	and    BYTE PTR [rbp+0x61],ch
  4137d1:	outs   dx,BYTE PTR ds:[rsi]
  4137d2:	jns    0x4137f4
  4137d4:	(bad)  
  4137d5:	jb     0x41383e
  4137d7:	jne    0x413846
  4137d9:	outs   dx,BYTE PTR gs:[rsi]
  4137db:	je     0x413850
  4137dd:	add    BYTE PTR [rbp+0x69],ch
  4137e0:	jae    0x413855
  4137e2:	imul   ebp,DWORD PTR [rsi+0x67],0x67726120
  4137e9:	jne    0x413858
  4137eb:	outs   dx,BYTE PTR gs:[rsi]
  4137ed:	je     0x413862
  4137ef:	add    BYTE PTR [rdi+rbp*2+0x6d],ah
  4137f3:	(bad)  
  4137f4:	imul   ebp,DWORD PTR [rsi+0x0],0x706c6568
  4137fb:	add    BYTE PTR [rbx+0x68],dh
  4137fe:	gs ins BYTE PTR es:[rdi],dx
  413800:	ins    BYTE PTR es:[rdi],dx
  413801:	sub    eax,0x69726373
  413806:	jo     0x41387c
  413808:	add    BYTE PTR [rsi+0x65],dh
  41380b:	jb     0x413880
  41380d:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
	...
  413840:	lock (bad) 
  413842:	add    BYTE PTR [r8],al
  413845:	add    BYTE PTR [rax],al
  413847:	add    BYTE PTR [rcx],al
	...
  413855:	add    BYTE PTR [rax],al
  413857:	add    BYTE PTR [rax+rax*1+0x0],ah
  41385b:	add    BYTE PTR [rax],al
  41385d:	add    BYTE PTR [rax],al
  41385f:	add    bh,dh
  413861:	(bad)  
  413862:	add    BYTE PTR [r8],al
	...
  413875:	add    BYTE PTR [rax],al
  413877:	add    BYTE PTR [rax+0x0],ch
  41387a:	add    BYTE PTR [rax],al
  41387c:	add    BYTE PTR [rax],al
  41387e:	add    BYTE PTR [rax],al
  413880:	cld    
  413881:	(bad)  
  413882:	add    BYTE PTR [r8],al
	...
  413895:	add    BYTE PTR [rax],al
  413897:	add    BYTE PTR [rbx+0x0],dh
  41389a:	add    BYTE PTR [rax],al
  41389c:	add    BYTE PTR [rax],al
  41389e:	add    BYTE PTR [rax],al
  4138a0:	or     DWORD PTR [rax],edi
  4138a2:	add    BYTE PTR [r8],al
	...
  4138b5:	add    BYTE PTR [rax],al
  4138b7:	add    BYTE PTR [rsi+0x0],dl
	...
  4138fe:	add    BYTE PTR [rax],al
  413900:	(bad)  
  413902:	jae    0x413969
  413904:	outs   dx,BYTE PTR ds:[rsi]
  413905:	(bad)  
  413906:	ins    DWORD PTR es:[rdi],dx
  413907:	gs movsxd eax,DWORD PTR cs:[rax]
  41390b:	add    BYTE PTR [rax],al
  41390d:	add    BYTE PTR [rax],al
  41390f:	add    BYTE PTR [rcx+0x6c],ah
  413912:	ins    BYTE PTR es:[rdi],dx
  413913:	pop    rdi
  413914:	jae    0x413982
  413916:	(bad)  
  413917:	jae    0x413981
  413919:	gs jae 0x41393c
  41391c:	jl     0x41399a
  41391e:	and    BYTE PTR [rcx],ah
  413920:	rex.WB push r11
  413922:	push   rbx
  413923:	rex.WR
  413924:	push   r11
  413926:	rex.W and BYTE PTR [rax],bpl
  413929:	sub    ch,BYTE PTR [rax]
  41392b:	jo     0x41394d
  41392d:	sub    eax,0x29293120
	...
  41393e:	add    BYTE PTR [rax],al
  413940:	ja     0x4139b4
  413942:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
  41394a:	jb     0x41394c
  41394c:	and    eax,0x41000073
  413951:	and    BYTE PTR [rsi+0x55],cl
  413954:	rex.WR
  413955:	rex.WR and BYTE PTR [rcx+0x72],r12b
  413959:	addr32 jbe 0x4139b7
  41395c:	xor    BYTE PTR [rbp+0x20],bl
  41395f:	ja     0x4139c2
  413961:	jae    0x413983
  413963:	jo     0x4139c6
  413965:	jae    0x4139da
  413967:	gs and BYTE PTR fs:[rax+rbp*2+0x72],dh
  41396d:	outs   dx,DWORD PTR ds:[rsi]
  41396e:	jne    0x4139d7
  413970:	push   0x206e6120
  413975:	gs js  0x4139dd
  413978:	movsxd esp,DWORD PTR [rax]
  41397a:	jae    0x4139f5
  41397c:	jae    0x4139f2
  41397e:	gs ins DWORD PTR es:[rdi],dx
  413980:	and    BYTE PTR [rbx+0x61],ah
  413983:	ins    BYTE PTR es:[rdi],dx
  413984:	ins    BYTE PTR es:[rdi],dx
  413985:	or     al,BYTE PTR cs:[rax]
  413988:	(bad)  
  413989:	cs ins BYTE PTR es:[rdi],dx
  41398b:	imul   esp,DWORD PTR [rdx+0x73],0x746c002f
  413992:	sub    eax,0x0
	...
  41399f:	add    BYTE PTR [rbp+0x62],ch
  4139a2:	jne    0x413a0d
  4139a4:	je     0x413a0b
  4139a6:	jb     0x4139d6
  4139a8:	push   0x73626d00
  4139ad:	imul   ebp,DWORD PTR [rsi+0x69],0x26282074
  4139b4:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x74733e2d
  4139bc:	(bad)  
  4139bd:	je     0x413a24
  4139bf:	sub    DWORD PTR [rax],eax
  4139c1:	sub    ch,BYTE PTR [rcx+0x74]
  4139c4:	gs jb  0x4139f4
  4139c7:	movsxd esi,DWORD PTR ds:[rbp+0x72]
  4139cb:	cs jo  0x413a42
  4139ce:	jb     0x4139f0
  4139d0:	cmp    eax,0x5c27203d
  4139d5:	xor    BYTE PTR [rdi],ah
  4139d7:	add    BYTE PTR [rcx+0x74],ch
  4139da:	gs jb  0x413a0a
  4139dd:	movsxd esi,DWORD PTR ds:[rbp+0x72]
  4139e1:	cs ja  0x413a47
  4139e4:	and    BYTE PTR [rip+0x30203d],bh        # 0x715a27
  4139ea:	and    eax,0x25282073
  4139ef:	jae    0x413a1a
  4139f1:	add    BYTE PTR [rbp+0x54],dl
  4139f4:	rex.RX sub eax,0x38
  4139fa:	add    BYTE PTR [rax],al
  4139fc:	add    BYTE PTR [rax],al
  4139fe:	add    BYTE PTR [rax],al
  413a00:	ins    DWORD PTR es:[rdi],dx
  413a01:	(bad)  
  413a02:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6d00682e
  413a0a:	(bad)  
  413a0c:	imul   ebp,DWORD PTR [rsi+0x69],0x26282074
  413a13:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x74733e2d
  413a1b:	(bad)  
  413a1c:	je     0x413a83
  413a1e:	sub    DWORD PTR [rax],eax
  413a20:	sub    ch,BYTE PTR [rcx+0x74]
  413a23:	gs jb  0x413a53
  413a26:	movsxd esi,DWORD PTR ds:[rbp+0x72]
  413a2a:	cs jo  0x413aa1
  413a2d:	jb     0x413a4f
  413a2f:	cmp    eax,0x5c27203d
  413a34:	xor    BYTE PTR [rdi],ah
  413a36:	add    BYTE PTR [rcx+0x74],ch
  413a39:	gs jb  0x413a69
  413a3c:	movsxd esi,DWORD PTR ds:[rbp+0x72]
  413a40:	cs ja  0x413aa6
  413a43:	and    BYTE PTR [rip+0x30203d],bh        # 0x715a86
  413a49:	add    BYTE PTR [rax],al
  413a4b:	add    BYTE PTR [rax],al
  413a4d:	add    BYTE PTR [rax],al
  413a4f:	add    BYTE PTR [rbp+0x65],ch
  413a52:	ins    DWORD PTR es:[rdi],dx
  413a53:	outs   dx,DWORD PTR ds:[rsi]
  413a54:	jb     0x413acf
  413a56:	and    BYTE PTR [rbp+0x78],ah
  413a59:	push   0x74737561
  413a5e:	gs add BYTE PTR fs:[rax],al
	...
  413a6e:	add    BYTE PTR [rax],al
  413a70:	push   rbp
  413a71:	outs   dx,BYTE PTR ds:[rsi]
  413a72:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  413a76:	outs   dx,BYTE PTR ds:[rsi]
  413a77:	and    BYTE PTR [rbx+0x79],dh
  413a7a:	jae    0x413af0
  413a7c:	gs ins DWORD PTR es:[rdi],dx
  413a7e:	and    BYTE PTR [rbp+0x72],ah
  413a81:	jb     0x413af2
  413a83:	jb     0x413a85
  413a85:	cmp    ah,BYTE PTR [rax]
  413a87:	and    eax,0x73250073
  413a8c:	cmp    ah,BYTE PTR [rax]
  413a8e:	add    BYTE PTR [rip+0x75253a73],ah        # 0x75667507
  413a94:	cmp    ah,BYTE PTR [rax]
  413a96:	add    BYTE PTR [rax],ah
  413a98:	add    BYTE PTR [rip+0x3a73],ah        # 0x417511
  413a9e:	add    BYTE PTR [rax],al
  413aa0:	push   rax
  413aa1:	rex.WRXB push r11
  413aa3:	rex.WB pop r8
  413aa5:	rex.WR pop rcx
  413aa7:	pop    rdi
  413aa8:	rex.XB
  413aa9:	rex.WRXB push r10
  413aab:	push   rdx
  413aac:	rex.RB
  413aad:	rex.XB push r12
  413aaf:	add    BYTE PTR [rip+0x2d],ch        # 0x413ae2
  413ab5:	add    BYTE PTR [rax],al
  413ab7:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f617530
  413abd:	jo     0x413b33
  413abf:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  413ac6:	(bad)  
  413ac7:	and    BYTE PTR [rcx+0x73],ch
  413aca:	and    BYTE PTR [rcx+0x6d],ah
  413acd:	(bad)  
  413ace:	imul   esp,DWORD PTR [rdi+0x75],0x3b73756f
  413ad5:	and    BYTE PTR [rax+0x6f],dh
  413ad8:	jae    0x413b4d
  413ada:	imul   esp,DWORD PTR [rdx+0x69],0x6974696c
  413ae1:	gs jae 0x413b1e
  413ae4:	add    BYTE PTR [rax],ah
  413ae6:	(bad)  
  413ae7:	sub    eax,0x2773252d
  413aec:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f617565
  413af2:	jo     0x413b68
  413af4:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  413afb:	(bad)  
  413afc:	and    BYTE PTR [rcx+0x73],ch
  413aff:	and    BYTE PTR [rcx+0x6d],ah
  413b02:	(bad)  
  413b03:	imul   esp,DWORD PTR [rdi+0x75],0xa73756f
  413b0a:	add    BYTE PTR [rax],al
  413b0c:	add    BYTE PTR [rax],al
  413b0e:	add    BYTE PTR [rax],al
  413b10:	and    eax,0x6f203a73
  413b15:	jo     0x413b8b
  413b17:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d2d2720
  413b1e:	and    eax,0x64202773
  413b23:	outs   dx,DWORD PTR ds:[rsi]
  413b24:	gs jae 0x413b95
  413b27:	(bad)  
  413b28:	je     0x413b4a
  413b2a:	(bad)  
  413b2b:	ins    BYTE PTR es:[rdi],dx
  413b2c:	ins    BYTE PTR es:[rdi],dx
  413b2d:	outs   dx,DWORD PTR ds:[rsi]
  413b2e:	ja     0x413b50
  413b30:	(bad)  
  413b31:	outs   dx,BYTE PTR ds:[rsi]
  413b32:	and    BYTE PTR [rcx+0x72],ah
  413b35:	addr32 jne 0x413ba5
  413b38:	outs   dx,BYTE PTR gs:[rsi]
  413b3a:	je     0x413b46
  413b3c:	add    BYTE PTR [rax],al
  413b3e:	add    BYTE PTR [rax],al
  413b40:	and    eax,0x6f203a73
  413b45:	jo     0x413bbb
  413b47:	imul   ebp,DWORD PTR [rdi+0x6e],0x63252720
  413b4e:	and    eax,0x64202773
  413b53:	outs   dx,DWORD PTR ds:[rsi]
  413b54:	gs jae 0x413bc5
  413b57:	(bad)  
  413b58:	je     0x413b7a
  413b5a:	(bad)  
  413b5b:	ins    BYTE PTR es:[rdi],dx
  413b5c:	ins    BYTE PTR es:[rdi],dx
  413b5d:	outs   dx,DWORD PTR ds:[rsi]
  413b5e:	ja     0x413b80
  413b60:	(bad)  
  413b61:	outs   dx,BYTE PTR ds:[rsi]
  413b62:	and    BYTE PTR [rcx+0x72],ah
  413b65:	addr32 jne 0x413bd5
  413b68:	outs   dx,BYTE PTR gs:[rsi]
  413b6a:	je     0x413b76
  413b6c:	add    BYTE PTR [rax],al
  413b6e:	add    BYTE PTR [rax],al
  413b70:	and    eax,0x6f203a73
  413b75:	jo     0x413beb
  413b77:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d2d2720
  413b7e:	and    eax,0x72202773
  413b83:	gs jno 0x413bfb
  413b86:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  413b8d:	and    BYTE PTR [rcx+0x72],ah
  413b90:	addr32 jne 0x413c00
  413b93:	outs   dx,BYTE PTR gs:[rsi]
  413b95:	je     0x413ba1
  413b97:	add    BYTE PTR [rip+0x75203a73],ah        # 0x75617610
  413b9d:	outs   dx,BYTE PTR ds:[rsi]
  413b9e:	jb     0x413c05
  413ba0:	movsxd ebp,DWORD PTR [rdi+0x67]
  413ba3:	outs   dx,BYTE PTR ds:[rsi]
  413ba4:	imul   edi,DWORD PTR [rdx+0x65],0x706f2064
  413bab:	je     0x413c16
  413bad:	outs   dx,DWORD PTR ds:[rsi]
  413bae:	outs   dx,BYTE PTR ds:[rsi]
  413baf:	and    BYTE PTR [rdi],ah
  413bb1:	sub    eax,0x2773252d
  413bb6:	or     al,BYTE PTR [rax]
  413bb8:	and    eax,0x75203a73
  413bbd:	outs   dx,BYTE PTR ds:[rsi]
  413bbe:	jb     0x413c25
  413bc0:	movsxd ebp,DWORD PTR [rdi+0x67]
  413bc3:	outs   dx,BYTE PTR ds:[rsi]
  413bc4:	imul   edi,DWORD PTR [rdx+0x65],0x706f2064
  413bcb:	je     0x413c36
  413bcd:	outs   dx,DWORD PTR ds:[rsi]
  413bce:	outs   dx,BYTE PTR ds:[rsi]
  413bcf:	and    BYTE PTR [rdi],ah
  413bd1:	and    eax,0x27732563
  413bd6:	or     al,BYTE PTR [rax]
  413bd8:	add    BYTE PTR [rip+0x69203a73],ah        # 0x69617651
  413bde:	outs   dx,BYTE PTR ds:[rsi]
  413bdf:	jbe    0x413c42
  413be1:	ins    BYTE PTR es:[rdi],dx
  413be2:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x6f697470
  413bea:	outs   dx,BYTE PTR ds:[rsi]
  413beb:	and    BYTE PTR [rip+0x2527202d],ch        # 0x25685c1e
  413bf1:	movsxd esp,DWORD PTR [rdi]
  413bf3:	or     al,BYTE PTR [rax]
  413bf5:	add    BYTE PTR [rax],al
  413bf7:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f617670
  413bfd:	jo     0x413c73
  413bff:	imul   ebp,DWORD PTR [rdi+0x6e],0x71657220
  413c06:	jne    0x413c71
  413c08:	jb     0x413c6f
  413c0a:	jae    0x413c2c
  413c0c:	(bad)  
  413c0d:	outs   dx,BYTE PTR ds:[rsi]
  413c0e:	and    BYTE PTR [rcx+0x72],ah
  413c11:	addr32 jne 0x413c81
  413c14:	outs   dx,BYTE PTR gs:[rsi]
  413c16:	je     0x413c38
  413c18:	sub    eax,0x2527202d
  413c1d:	movsxd esp,DWORD PTR [rdi]
  413c1f:	or     al,BYTE PTR [rax]
  413c21:	add    BYTE PTR [rax],al
  413c23:	add    BYTE PTR [rax],al
  413c25:	add    BYTE PTR [rax],al
  413c27:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f6176a0
  413c2d:	jo     0x413ca3
  413c2f:	imul   ebp,DWORD PTR [rdi+0x6e],0x572d2720
  413c36:	and    BYTE PTR [rip+0x69202773],ah        # 0x696163af
  413c3c:	jae    0x413c5e
  413c3e:	(bad)  
  413c3f:	ins    DWORD PTR es:[rdi],dx
  413c40:	(bad)  
  413c41:	imul   esp,DWORD PTR [rdi+0x75],0xa73756f
	...
  413c50:	and    eax,0x6f203a73
  413c55:	jo     0x413ccb
  413c57:	imul   ebp,DWORD PTR [rdi+0x6e],0x572d2720
  413c5e:	and    BYTE PTR [rip+0x64202773],ah        # 0x646163d7
  413c64:	outs   dx,DWORD PTR ds:[rsi]
  413c65:	gs jae 0x413cd6
  413c68:	(bad)  
  413c69:	je     0x413c8b
  413c6b:	(bad)  
  413c6c:	ins    BYTE PTR es:[rdi],dx
  413c6d:	ins    BYTE PTR es:[rdi],dx
  413c6e:	outs   dx,DWORD PTR ds:[rsi]
  413c6f:	ja     0x413c91
  413c71:	(bad)  
  413c72:	outs   dx,BYTE PTR ds:[rsi]
  413c73:	and    BYTE PTR [rcx+0x72],ah
  413c76:	addr32 jne 0x413ce6
  413c79:	outs   dx,BYTE PTR gs:[rsi]
  413c7b:	je     0x413c87
  413c7d:	add    BYTE PTR [rax],al
  413c7f:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f6176f8
  413c85:	jo     0x413cfb
  413c87:	imul   ebp,DWORD PTR [rdi+0x6e],0x572d2720
  413c8e:	and    BYTE PTR [rip+0x72202773],ah        # 0x72616407
  413c94:	gs jno 0x413d0c
  413c97:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  413c9e:	and    BYTE PTR [rcx+0x72],ah
  413ca1:	addr32 jne 0x413d11
  413ca4:	outs   dx,BYTE PTR gs:[rsi]
  413ca6:	je     0x413cb2
	...
  413cc0:	rex.WR
  413cc1:	rex.XB pop r15
  413cc3:	rex.XB
  413cc4:	rex.WRXB
  413cc5:	rex.WR
  413cc6:	rex.WR
  413cc7:	push   r12
  413cc9:	add    BYTE PTR [r11+rax*2+0x5f],r9b
  413cce:	rex.XB push r12
  413cd0:	pop    rcx
  413cd1:	push   rax
  413cd2:	add    BYTE PTR [r11+rax*2+0x5f],r9b
  413cd7:	rex.WRB
  413cd8:	rex.WRXB
  413cd9:	rex.WRX
  413cda:	rex.RB push r12
  413cdc:	push   r10
  413cde:	pop    rcx
  413cdf:	add    BYTE PTR [rbx+rax*2+0x5f],cl
  413ce3:	rex.WRX push rbp
  413ce5:	rex.WRB
  413ce6:	rex.RB push r10
  413ce8:	rex.WB
  413ce9:	add    BYTE PTR [r11+r8*2+0x5f],cl
  413cee:	push   rsp
  413cef:	rex.WB
  413cf0:	rex.WRB
  413cf1:	add    BYTE PTR [r11+rax*2+0x5f],r9b
  413cf6:	pop    rax
  413cf7:	pop    rax
  413cf8:	pop    rax
  413cf9:	add    BYTE PTR [rbx+rax*2+0x5f],cl
  413cfd:	rex.WRB
  413cfe:	rex.RB push r11
  413d00:	push   rbx
  413d01:	rex.B
  413d02:	rex.RXB
  413d03:	rex.RB push r11
  413d05:	add    BYTE PTR [rbx+0x0],al
	...
  413d10:	add    al,0x0
  413d12:	add    BYTE PTR [rax],al
  413d14:	add    eax,0x1000000
  413d19:	add    BYTE PTR [rax],al
  413d1b:	add    BYTE PTR [rbx],al
  413d1d:	add    BYTE PTR [rax],al
  413d1f:	add    cl,al
  413d21:	(bad)  
  413d22:	add    BYTE PTR [rax],al
  413d24:	rex.B
  413d25:	add    BYTE PTR [r13+0x2e],r10b
  413d29:	rex.B
  413d2a:	cs rex.RB
  413d2c:	add    BYTE PTR cs:[rcx+0x46],al
  413d30:	add    BYTE PTR [rcx+0x66],al
  413d33:	addr32 push 0x73696e61
  413d39:	je     0x413d9c
  413d3b:	outs   dx,BYTE PTR ds:[rsi]
  413d3c:	add    BYTE PTR [rcx+0x4c],al
  413d3f:	add    BYTE PTR [rcx+0x6c],al
  413d42:	(bad)
  413d47:	add    BYTE PTR [rcx+0x4d],al
  413d4a:	add    BYTE PTR [rcx+0x72],al
  413d4d:	ins    DWORD PTR es:[rdi],dx
  413d4e:	outs   dx,BYTE PTR gs:[rsi]
  413d50:	imul   esp,DWORD PTR [rcx+0x0],0x4e004e41
  413d57:	gs je  0x413dc2
  413d5a:	gs jb  0x413dc9
  413d5d:	(bad)  
  413d5e:	outs   dx,BYTE PTR ds:[rsi]
  413d5f:	fs jae 0x413d82
  413d62:	rex.B outs dx,BYTE PTR ds:[rsi]
  413d64:	je     0x413dcf
  413d66:	ins    BYTE PTR es:[rdi],dx
  413d67:	ins    BYTE PTR es:[rdi],dx
  413d68:	gs jae 0x413d6b
  413d6b:	push   r10
  413d6d:	add    BYTE PTR [rcx+0x72],al
  413d70:	outs   dx,BYTE PTR gs:[esi]
  413d73:	je     0x413dde
  413d75:	outs   dx,BYTE PTR ds:[rsi]
  413d76:	(bad)  
  413d77:	add    BYTE PTR [rcx+0x54],al
  413d7a:	add    BYTE PTR [rcx+0x75],al
  413d7d:	jae    0x413df3
  413d7f:	jb     0x413dea
  413d81:	(bad)  
  413d82:	add    BYTE PTR [rcx+0x55],al
  413d85:	add    BYTE PTR [rcx+0x75],al
  413d88:	jae    0x413dfe
  413d8a:	jb     0x413ded
  413d8c:	ins    BYTE PTR es:[rdi],dx
  413d8d:	imul   esp,DWORD PTR [rcx+0x0],0x41005a41
  413d94:	jp     0x413dfb
  413d96:	jb     0x413dfa
  413d98:	(bad)  
  413d99:	imul   ebp,DWORD PTR [rdx+0x61],0x4142006e
  413da0:	add    BYTE PTR [rdx+0x6f],al
  413da3:	jae    0x413e13
  413da5:	imul   esp,DWORD PTR [rcx+0x20],0x20646e61
  413dac:	rex.W
  413dad:	gs jb  0x413e2a
  413db0:	outs   dx,DWORD PTR gs:[esi]
  413db3:	jbe    0x413e1e
  413db5:	outs   dx,BYTE PTR ds:[rsi]
  413db6:	(bad)  
  413db7:	add    BYTE PTR [rdx+0x44],al
  413dba:	add    BYTE PTR [rdx+0x61],al
  413dbd:	outs   dx,BYTE PTR ds:[rsi]
  413dbe:	ins    BYTE PTR es:[edi],dx
  413dc0:	(bad)  
  413dc1:	fs gs jae 0x413e2d
  413dc5:	add    BYTE PTR [rdx+0x45],al
  413dc8:	add    BYTE PTR [rdx+0x65],al
  413dcb:	ins    BYTE PTR es:[rdi],dx
  413dcc:	imul   esi,DWORD PTR [ebp+0x6d],0x474200
  413dd4:	rex.X jne 0x413e43
  413dd7:	addr32 (bad) 
  413dd9:	jb     0x413e44
  413ddb:	(bad)  
  413ddc:	add    BYTE PTR [rdx+0x48],al
  413ddf:	add    BYTE PTR [rdx+0x61],al
  413de2:	push   0x6e696172
  413de7:	add    BYTE PTR [rdx+0x4e],al
  413dea:	add    BYTE PTR [rdx+0x72],al
  413ded:	jne    0x413e5d
  413def:	imul   esp,DWORD PTR gs:[rax],0x75726144
  413df6:	jae    0x413e6b
  413df8:	(bad)  
  413df9:	ins    BYTE PTR es:[rdi],dx
  413dfa:	(bad)  
  413dfb:	ins    DWORD PTR es:[rdi],dx
  413dfc:	add    BYTE PTR [rdx+0x4f],al
  413dff:	add    BYTE PTR [rdx+0x6f],al
  413e02:	ins    BYTE PTR es:[rdi],dx
  413e03:	imul   esi,DWORD PTR [rsi+0x69],0x52420061
  413e0a:	add    BYTE PTR [rdx+0x72],al
  413e0d:	(bad)  
  413e0e:	jp     0x413e79
  413e10:	ins    BYTE PTR es:[rdi],dx
  413e11:	add    BYTE PTR [rdx+0x54],al
  413e14:	add    BYTE PTR [rdx+0x68],al
  413e17:	jne    0x413e8d
  413e19:	(bad)  
  413e1a:	outs   dx,BYTE PTR ds:[rsi]
  413e1b:	add    BYTE PTR [rdx+0x59],al
  413e1e:	add    BYTE PTR [rdx+0x65],al
  413e21:	ins    BYTE PTR es:[rdi],dx
  413e22:	(bad)  
  413e23:	jb     0x413e9a
  413e25:	jae    0x413e27
  413e27:	rex.X pop rdx
  413e29:	add    BYTE PTR [rdx+0x65],al
  413e2c:	ins    BYTE PTR es:[rdi],dx
  413e2d:	imul   edi,DWORD PTR [rdx+0x65],0x414300
  413e34:	rex.XB (bad) 
  413e36:	outs   dx,BYTE PTR ds:[rsi]
  413e37:	(bad)  
  413e38:	fs (bad) 
  413e3a:	add    BYTE PTR [rbx+0x47],al
  413e3d:	add    BYTE PTR [rbx+0x6f],al
  413e40:	outs   dx,BYTE PTR ds:[rsi]
  413e41:	outs   dx,DWORD PTR ds:[esi]
  413e43:	add    BYTE PTR [rbx+0x48],al
  413e46:	add    BYTE PTR [rbx+0x77],dl
  413e49:	imul   esi,DWORD PTR [rdx+rdi*2+0x65],0x6e616c72
  413e51:	add    BYTE PTR fs:[rbx+0x49],al
  413e55:	add    BYTE PTR [rbx+0x6f],al
  413e58:	je     0x413ebf
  413e5a:	and    BYTE PTR [rdi+riz*1+0x49],ah
  413e5e:	jbe    0x413ecf
  413e60:	imul   esi,DWORD PTR [rdx+0x65],0x4c4300
  413e67:	rex.XB push 0x656c69
  413e6d:	rex.XB
  413e6e:	rex.WRB add BYTE PTR [r11+0x61],r8b
  413e72:	ins    DWORD PTR es:[rdi],dx
  413e73:	gs jb  0x413ee5
  413e76:	outs   dx,DWORD PTR ds:[rsi]
  413e77:	outs   dx,BYTE PTR ds:[rsi]
  413e78:	add    BYTE PTR [rbx+0x4e],al
  413e7b:	add    BYTE PTR [rax+0x65],dl
  413e7e:	outs   dx,DWORD PTR ds:[rsi]
  413e7f:	jo     0x413eed
  413e81:	gs (bad) 
  413e83:	jae    0x413ea5
  413e85:	push   rdx
  413e86:	gs jo  0x413efe
  413e89:	(bad)  
  413e8a:	ins    BYTE PTR es:[rdi],dx
  413e8b:	imul   esp,DWORD PTR [rbx+0x20],0x4320666f
  413e92:	push   0x616e69
  413e97:	rex.XB
  413e98:	rex.WRXB add BYTE PTR [r11+0x6f],r8b
  413e9c:	ins    BYTE PTR es:[rdi],dx
  413e9d:	outs   dx,DWORD PTR ds:[rsi]
  413e9e:	ins    DWORD PTR es:[rdi],dx
  413e9f:	(bad)  
  413ea0:	imul   esp,DWORD PTR [rcx+0x0],0x43005243
  413ea7:	outs   dx,DWORD PTR ds:[rsi]
  413ea8:	jae    0x413f1e
  413eaa:	(bad)  
  413eab:	and    BYTE PTR [rdx+0x69],dl
  413eae:	movsxd esp,DWORD PTR [rcx+0x0]
  413eb1:	rex.XB push r11
  413eb3:	add    BYTE PTR [rbx+0x65],dl
  413eb6:	jb     0x413f1a
  413eb8:	imul   esp,DWORD PTR [rcx+0x20],0x20646e61
  413ebf:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  413ec1:	outs   dx,BYTE PTR ds:[rsi]
  413ec2:	je     0x413f29
  413ec4:	outs   dx,BYTE PTR ds:[rsi]
  413ec5:	gs addr32 jb 0x413f38
  413ec9:	add    BYTE PTR [rbx+0x5a],al
  413ecc:	add    BYTE PTR [rbx+0x7a],al
  413ecf:	movsxd ebp,DWORD PTR gs:[rax+0x20]
  413ed3:	push   rdx
  413ed4:	gs jo  0x413f4c
  413ed7:	(bad)  
  413ed8:	ins    BYTE PTR es:[rdi],dx
  413ed9:	imul   esp,DWORD PTR [rbx+0x0],0x47004544
  413ee0:	gs jb  0x413f50
  413ee3:	(bad)  
  413ee4:	outs   dx,BYTE PTR ds:[rsi]
  413ee5:	jns    0x413ee7
  413ee7:	rex.R
  413ee8:	rex.WXB add BYTE PTR [r13+r12*2+0x6e],al
  413eed:	ins    DWORD PTR es:[rdi],dx
  413eee:	(bad)  
  413eef:	jb     0x413f5c
  413ef1:	add    BYTE PTR [rdi+rcx*2+0x0],al
  413ef5:	rex.R outs dx,DWORD PTR ds:[rsi]
  413ef7:	ins    DWORD PTR es:[rdi],dx
  413ef8:	imul   ebp,DWORD PTR [rsi+0x69],0x206e6163
  413eff:	push   rdx
  413f00:	gs jo  0x413f78
  413f03:	(bad)  
  413f04:	ins    BYTE PTR es:[rdi],dx
  413f05:	imul   esp,DWORD PTR [rbx+0x0],0x41005a44
  413f0c:	ins    BYTE PTR es:[rdi],dx
  413f0d:	addr32 gs jb 0x413f7a
  413f11:	(bad)  
  413f12:	add    BYTE PTR [rbp+0x43],al
  413f15:	add    BYTE PTR [rbp+0x63],al
  413f18:	jne    0x413f7b
  413f1a:	outs   dx,DWORD PTR fs:[rsi]
  413f1c:	jb     0x413f1e
  413f1e:	rex.RB
  413f1f:	add    BYTE PTR [r13+0x73],r8b
  413f23:	je     0x413f94
  413f25:	outs   dx,BYTE PTR ds:[rsi]
  413f26:	imul   esp,DWORD PTR [rcx+0x0],0x45004745
  413f2d:	addr32 jns 0x413fa0
  413f30:	je     0x413f32
  413f32:	rex.RB push r10
  413f34:	add    BYTE PTR [rbp+0x72],al
  413f37:	imul   esi,DWORD PTR [rdx+rsi*2+0x65],0x53450061
  413f3f:	add    BYTE PTR [rbx+0x70],dl
  413f42:	(bad)  
  413f43:	imul   ebp,DWORD PTR [rsi+0x0],0x45005445
  413f4a:	je     0x413fb4
  413f4c:	imul   ebp,DWORD PTR [rdi+0x70],0x46006169
  413f53:	rex.WB add BYTE PTR [r14+0x69],al
  413f57:	outs   dx,BYTE PTR ds:[rsi]
  413f58:	ins    BYTE PTR es:[rdi],dx
  413f59:	(bad)  
  413f5a:	outs   dx,BYTE PTR ds:[rsi]
  413f5b:	add    BYTE PTR fs:[rsi+0x4f],al
  413f5f:	add    BYTE PTR [rsi+0x61],al
  413f62:	jb     0x413fd3
  413f64:	and    BYTE PTR gs:[rcx+0x73],cl
  413f68:	ins    BYTE PTR es:[rdi],dx
  413f69:	(bad)  
  413f6a:	outs   dx,BYTE PTR ds:[rsi]
  413f6b:	fs jae 0x413f6e
  413f6e:	rex.RX push rdx
  413f70:	add    BYTE PTR [rsi+0x72],al
  413f73:	(bad)  
  413f74:	outs   dx,BYTE PTR ds:[rsi]
  413f75:	movsxd esp,DWORD PTR [rbp+0x0]
  413f78:	rex.RXB
  413f79:	rex.X add BYTE PTR [rbp+0x6e],dl
  413f7d:	imul   esi,DWORD PTR [rbp+riz*2+0x64],0x6e694b20
  413f85:	outs   dx,DWORD PTR fs:[esi]
  413f88:	ins    DWORD PTR es:[rdi],dx
  413f89:	add    BYTE PTR [rdi+0x44],al
  413f8c:	add    BYTE PTR [rbx+0x61],al
  413f8f:	jb     0x413ffa
  413f91:	(bad)
  413f96:	add    BYTE PTR [rdi+0x45],al
  413f99:	add    BYTE PTR [rdi+0x65],al
  413f9c:	outs   dx,DWORD PTR ds:[rsi]
  413f9d:	jb     0x414006
  413f9f:	imul   esp,DWORD PTR [rcx+0x0],0x47004c47
  413fa6:	jb     0x41400d
  413fa8:	outs   dx,BYTE PTR gs:[rsi]
  413faa:	ins    BYTE PTR es:[rdi],dx
  413fab:	(bad)  
  413fac:	outs   dx,BYTE PTR ds:[rsi]
  413fad:	add    BYTE PTR fs:[rdi+0x52],al
  413fb1:	add    BYTE PTR [rdi+0x72],al
  413fb4:	gs movsxd esp,DWORD PTR gs:[rbp+0x0]
  413fb9:	rex.RXB push r12
  413fbb:	add    BYTE PTR [rdi+0x75],al
  413fbe:	(bad)  
  413fbf:	je     0x414026
  413fc1:	ins    DWORD PTR es:[rdi],dx
  413fc2:	(bad)  
  413fc3:	ins    BYTE PTR es:[rdi],dx
  413fc4:	(bad)  
  413fc5:	add    BYTE PTR [rax+0x4b],cl
  413fc8:	add    BYTE PTR [rax+0x6f],cl
  413fcb:	outs   dx,BYTE PTR ds:[rsi]
  413fcc:	and    BYTE PTR [ebx+0x6f],cl
  413fd0:	outs   dx,BYTE PTR ds:[rsi]
  413fd1:	add    BYTE PTR [eax+0x6f],cl
  413fd5:	outs   dx,BYTE PTR ds:[rsi]
  413fd6:	and    BYTE PTR [ebx+0x6f],cl
  413fda:	outs   dx,BYTE PTR ds:[rsi]
  413fdb:	and    BYTE PTR [ebx+0x2e],dl
  413fdf:	rex.B
  413fe0:	cs push rdx
  413fe2:	add    BYTE PTR cs:[rax+0x4e],cl
  413fe6:	add    BYTE PTR [rax+0x6f],cl
  413fe9:	outs   dx,BYTE PTR ds:[rsi]
  413fea:	fs jne 0x41405f
  413fed:	(bad)  
  413fee:	jae    0x413ff0
  413ff0:	rex.W push rdx
  413ff2:	add    BYTE PTR [rbx+0x72],al
  413ff5:	outs   dx,DWORD PTR ds:[rsi]
  413ff6:	(bad)  
  413ff7:	je     0x414062
  413ff9:	(bad)  
  413ffa:	add    BYTE PTR [rax+0x54],cl
  413ffd:	add    BYTE PTR [rax+0x61],cl
  414000:	imul   esi,DWORD PTR [rcx+rbp*2+0x0],0x48005548
  414008:	jne    0x414078
  41400a:	addr32 (bad) 
  41400c:	jb     0x414087
  41400e:	add    BYTE PTR [rcx+0x44],cl
  414011:	add    BYTE PTR [rcx+0x6e],cl
  414014:	outs   dx,DWORD PTR fs:[rsi]
  414016:	outs   dx,BYTE PTR ds:[rsi]
  414017:	gs jae 0x414083
  41401a:	(bad)  
  41401b:	add    BYTE PTR [rcx+0x45],cl
  41401e:	add    BYTE PTR [rcx+0x72],cl
  414021:	gs ins BYTE PTR es:[rdi],dx
  414023:	(bad)  
  414024:	outs   dx,BYTE PTR ds:[rsi]
  414025:	add    BYTE PTR fs:[rcx+0x4c],cl
  414029:	add    BYTE PTR [rcx+0x73],cl
  41402c:	jb     0x41408f
  41402e:	gs ins BYTE PTR es:[rdi],dx
  414030:	add    BYTE PTR [rcx+0x4e],cl
  414033:	add    BYTE PTR [rcx+0x6e],cl
  414036:	imul   esp,DWORD PTR fs:[rcx+0x0],0x49005149
  41403e:	jb     0x4140a1
  414040:	jno    0x414042
  414042:	rex.WB push r10
  414044:	add    BYTE PTR [rcx+0x72],cl
  414047:	(bad)  
  414048:	outs   dx,BYTE PTR ds:[rsi]
  414049:	add    BYTE PTR [rcx+0x53],cl
  41404c:	add    BYTE PTR [rcx+0x63],cl
  41404f:	gs ins BYTE PTR es:[rdi],dx
  414051:	(bad)  
  414052:	outs   dx,BYTE PTR ds:[rsi]
  414053:	add    BYTE PTR fs:[rcx+0x54],cl
  414057:	add    BYTE PTR [rcx+0x74],cl
  41405a:	(bad)  
  41405b:	ins    BYTE PTR es:[rdi],dx
  41405c:	jns    0x41405e
  41405e:	rex.WX
  41405f:	rex.WRB add BYTE PTR [r10+0x61],r9b
  414063:	ins    DWORD PTR es:[rdi],dx
  414064:	(bad)  
  414065:	imul   esp,DWORD PTR [rbx+0x61],0x4f4a00
  41406c:	rex.WX outs dx,DWORD PTR ds:[rsi]
  41406e:	jb     0x4140d4
  414070:	(bad)  
  414071:	outs   dx,BYTE PTR ds:[rsi]
  414072:	add    BYTE PTR [rdx+0x50],cl
  414075:	add    BYTE PTR [rdx+0x61],cl
  414078:	jo     0x4140db
  41407a:	outs   dx,BYTE PTR ds:[rsi]
  41407b:	add    BYTE PTR [rbx+0x45],cl
  41407e:	add    BYTE PTR [rbx+0x65],cl
  414081:	outs   dx,BYTE PTR ds:[rsi]
  414082:	jns    0x4140e5
  414084:	add    BYTE PTR [rbx+0x47],cl
  414087:	add    BYTE PTR [rbx+0x79],cl
  41408a:	jb     0x4140f3
  41408c:	jns    0x414108
  41408e:	jae    0x414104
  414090:	(bad)  
  414091:	outs   dx,BYTE PTR ds:[rsi]
  414092:	add    BYTE PTR [rbx+0x48],cl
  414095:	add    BYTE PTR [rbx+0x61],al
  414098:	ins    DWORD PTR es:[rdi],dx
  414099:	(bad)  
  41409a:	outs   dx,DWORD PTR ds:[rsi]
  41409b:	imul   esp,DWORD PTR fs:[rcx+0x0],0x5300524b
  4140a3:	outs   dx,DWORD PTR ds:[rsi]
  4140a4:	jne    0x41411a
  4140a6:	push   0x726f4b20
  4140ab:	gs (bad) 
  4140ad:	add    BYTE PTR [rbx+0x57],cl
  4140b0:	add    BYTE PTR [rbx+0x75],cl
  4140b3:	ja     0x414116
  4140b5:	imul   esi,DWORD PTR [rax+rax*1+0x4b],0x614b005a
  4140bd:	jp     0x414120
  4140bf:	imul   ebp,DWORD PTR [rax+0x73],0x74
  4140c3:	(bad)  
  4140c4:	outs   dx,BYTE PTR ds:[rsi]
  4140c5:	add    BYTE PTR [rcx+rax*2+0x0],cl
  4140c9:	rex.WR (bad) 
  4140cb:	outs   dx,DWORD PTR ds:[rsi]
  4140cc:	jae    0x4140ce
  4140ce:	rex.WR
  4140cf:	add    BYTE PTR [rbp+r12*2+0x62],cl
  4140d4:	(bad)  
  4140d5:	outs   dx,BYTE PTR ds:[rsi]
  4140d6:	outs   dx,DWORD PTR ds:[rsi]
  4140d7:	outs   dx,BYTE PTR ds:[rsi]
  4140d8:	add    BYTE PTR [rcx+rcx*2+0x0],cl
  4140dc:	imul   r12,QWORD PTR [rbp+0x63],0x6e657468
  4140e4:	jae    0x41415a
  4140e6:	imul   ebp,DWORD PTR gs:[rsi+0x0],0x53004b4c
  4140ee:	jb     0x414159
  4140f0:	and    BYTE PTR [rcx+riz*2+0x6e],cl
  4140f4:	imul   esp,DWORD PTR [rcx+0x0],0x4c
  4140f8:	push   rsp
  4140f9:	add    BYTE PTR [rcx+rbp*2+0x74],cl
  4140fd:	push   0x696e6175
  414102:	(bad)  
  414103:	add    BYTE PTR [rbp+rdx*2+0x0],cl
  414107:	rex.WR jne 0x414182
  41410a:	gs ins DWORD PTR es:[rdi],dx
  41410c:	(bad)  
  41410d:	outs   dx,DWORD PTR ds:[rsi]
  41410e:	jne    0x414182
  414110:	add    BYTE PTR [esi+edx*2+0x0],cl
  414115:	rex.WR (bad) 
  414117:	je     0x41418f
  414119:	imul   esp,DWORD PTR [rcx+0x0],0x4c00594c
  414120:	imul   esp,DWORD PTR [rdx+0x79],0x414d0061
  414127:	add    BYTE PTR [rbp+0x6f],cl
  41412a:	jb     0x41419b
  41412c:	movsxd esp,DWORD PTR [rbx+0x6f]
  41412f:	add    BYTE PTR [rbp+0x43],cl
  414132:	add    BYTE PTR [rax+0x72],dl
  414135:	imul   ebp,DWORD PTR [rsi+0x63],0x6c617069
  41413c:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x4d20666f
  414144:	outs   dx,DWORD PTR ds:[rsi]
  414145:	outs   dx,BYTE PTR ds:[rsi]
  414146:	(bad)  
  414147:	movsxd ebp,DWORD PTR [rdi+0x0]
  41414a:	rex.WRB
  41414b:	add    BYTE PTR [rbp+0x6f],r9b
  41414f:	ins    BYTE PTR es:[rdi],dx
  414150:	fs (bad) 
  414152:	jbe    0x4141b5
  414154:	add    BYTE PTR [rbp+0x6f],cl
  414157:	ins    BYTE PTR es:[rdi],dx
  414158:	outs   dx,DWORD PTR fs:[rsi]
  41415a:	jbe    0x4141bd
  41415c:	add    BYTE PTR [rbp+0x45],cl
  41415f:	add    BYTE PTR [rbp+0x6f],cl
  414162:	outs   dx,BYTE PTR ds:[rsi]
  414163:	je     0x4141ca
  414165:	outs   dx,BYTE PTR ds:[rsi]
  414166:	gs addr32 jb 0x4141d9
  41416a:	add    BYTE PTR [rbp+0x4b],cl
  41416d:	add    BYTE PTR [rax],al
  41416f:	add    BYTE PTR [rsi+0x6f],al
  414172:	jb     0x4141e1
  414174:	gs jb  0x414197
  414177:	pop    rcx
  414178:	jne    0x4141e1
  41417a:	outs   dx,DWORD PTR ds:[rsi]
  41417b:	jae    0x4141e9
  41417d:	(bad)  
  41417e:	jbe    0x4141a0
  414180:	push   rdx
  414181:	gs jo  0x4141f9
  414184:	(bad)  
  414185:	ins    BYTE PTR es:[rdi],dx
  414186:	imul   esp,DWORD PTR [rbx+0x20],0x4d20666f
  41418d:	(bad)  
  41418e:	movsxd esp,DWORD PTR [rbp+0x64]
  414191:	outs   dx,DWORD PTR ds:[rsi]
  414192:	outs   dx,BYTE PTR ds:[rsi]
  414193:	imul   esp,DWORD PTR [rcx+0x0],0x4d004c4d
  41419a:	(bad)  
  41419b:	ins    BYTE PTR es:[rdi],dx
  41419c:	imul   eax,DWORD PTR [rax],0x4d004d4d
  4141a2:	jns    0x414205
  4141a4:	outs   dx,BYTE PTR ds:[rsi]
  4141a5:	ins    DWORD PTR es:[rdi],dx
  4141a6:	(bad)  
  4141a7:	jb     0x4141a9
  4141a9:	rex.WRB
  4141aa:	rex.WRX add BYTE PTR [rbp+0x6f],r9b
  4141ae:	outs   dx,BYTE PTR ds:[rsi]
  4141af:	outs   dx,DWORD PTR ds:[esi]
  4141b1:	ins    BYTE PTR es:[rdi],dx
  4141b2:	imul   esp,DWORD PTR [rcx+0x0],0x4d004f4d
  4141b9:	(bad)  
  4141ba:	movsxd esp,DWORD PTR [rcx+0x75]
  4141bd:	and    BYTE PTR [rbx+0x2e],dl
  4141c0:	rex.B
  4141c1:	cs push rdx
  4141c3:	add    BYTE PTR cs:[rbp+0x54],cl
  4141c7:	add    BYTE PTR [rbp+0x61],cl
  4141ca:	ins    BYTE PTR es:[rdi],dx
  4141cb:	je     0x41422e
  4141cd:	add    BYTE PTR [rbp+0x56],cl
  4141d0:	add    BYTE PTR [rbp+0x61],cl
  4141d3:	ins    BYTE PTR es:[rdi],dx
  4141d4:	imul   esi,DWORD PTR fs:[rsi+0x65],0x584d0073
  4141dc:	add    BYTE PTR [rbp+0x65],cl
  4141df:	js     0x41424a
  4141e1:	movsxd ebp,DWORD PTR [rdi+0x0]
  4141e4:	rex.WRB pop r9
  4141e6:	add    BYTE PTR [rbp+0x61],cl
  4141e9:	ins    BYTE PTR es:[rdi],dx
  4141ea:	(bad)  
  4141eb:	jns    0x414260
  4141ed:	imul   esp,DWORD PTR [rcx+0x0],0x4e00474e
  4141f4:	imul   esp,DWORD PTR [rdi+0x65],0x616972
  4141fb:	rex.WRX
  4141fc:	rex.WB add BYTE PTR [r14+0x69],cl
  414200:	movsxd esp,DWORD PTR [rcx+0x72]
  414203:	(bad)  
  414204:	addr32 jne 0x414268
  414207:	add    BYTE PTR [rsi+0x4c],cl
  41420a:	add    BYTE PTR [rsi+0x65],cl
  41420d:	je     0x414277
  41420f:	gs jb  0x41427e
  414212:	(bad)  
  414213:	outs   dx,BYTE PTR ds:[rsi]
  414214:	fs jae 0x414217
  414217:	rex.WRX
  414218:	rex.WRXB add BYTE PTR [r14+0x6f],r9b
  41421c:	jb     0x414295
  41421e:	(bad)  
  41421f:	jns    0x414221
  414221:	rex.WRX push rax
  414223:	add    BYTE PTR [rsi+0x65],cl
  414226:	jo     0x414289
  414228:	ins    BYTE PTR es:[rdi],dx
  414229:	add    BYTE PTR [rsi+0x5a],cl
  41422c:	add    BYTE PTR [rsi+0x65],cl
  41422f:	ja     0x414251
  414231:	pop    rdx
  414232:	gs (bad) 
  414234:	ins    BYTE PTR es:[rdi],dx
  414235:	(bad)  
  414236:	outs   dx,BYTE PTR ds:[rsi]
  414237:	add    BYTE PTR fs:[rdi+0x4d],cl
  41423b:	add    BYTE PTR [rdi+0x6d],cl
  41423e:	(bad)  
  41423f:	outs   dx,BYTE PTR ds:[rsi]
  414240:	add    BYTE PTR [rax+0x41],dl
  414243:	add    BYTE PTR [rax+0x61],dl
  414246:	outs   dx,BYTE PTR ds:[rsi]
  414247:	(bad)  
  414248:	ins    DWORD PTR es:[rdi],dx
  414249:	(bad)  
  41424a:	add    BYTE PTR [rax+0x45],dl
  41424d:	add    BYTE PTR [rax+0x65],dl
  414250:	jb     0x4142c7
  414252:	add    BYTE PTR [rax+0x48],dl
  414255:	add    BYTE PTR [rax+0x68],dl
  414258:	imul   ebp,DWORD PTR [rcx+rbp*2+0x70],0x656e6970
  414260:	jae    0x414262
  414262:	push   rax
  414263:	rex.WXB add BYTE PTR [r9+0x73],cl
  414267:	ins    BYTE PTR es:[rdi],dx
  414268:	(bad)  
  414269:	ins    DWORD PTR es:[rdi],dx
  41426a:	imul   esp,DWORD PTR [rbx+0x20],0x75706552
  414271:	(bad)  
  414272:	ins    BYTE PTR es:[rdi],dx
  414273:	imul   esp,DWORD PTR [rbx+0x20],0x5020666f
  41427a:	(bad)  
  41427b:	imul   ebp,DWORD PTR [rcx+0x73],0x74
  41427f:	(bad)  
  414280:	outs   dx,BYTE PTR ds:[rsi]
  414281:	add    BYTE PTR [rax+0x4c],dl
  414284:	add    BYTE PTR [rax+0x6f],dl
  414287:	ins    BYTE PTR es:[rdi],dx
  414288:	(bad)  
  414289:	outs   dx,BYTE PTR ds:[rsi]
  41428a:	add    BYTE PTR fs:[rax+0x52],dl
  41428e:	add    BYTE PTR [rax+0x75],dl
  414291:	gs jb  0x414308
  414294:	outs   dx,DWORD PTR ds:[rsi]
  414295:	and    BYTE PTR [rdx+0x69],dl
  414298:	movsxd ebp,DWORD PTR [rdi+0x0]
  41429b:	push   rax
  41429c:	push   rsp
  41429d:	add    BYTE PTR [rax+0x6f],dl
  4142a0:	jb     0x414316
  4142a2:	jne    0x41430b
  4142a4:	(bad)  
  4142a5:	ins    BYTE PTR es:[rdi],dx
  4142a6:	add    BYTE PTR [rax+0x59],dl
  4142a9:	add    BYTE PTR [rax+0x61],dl
  4142ac:	jb     0x41430f
  4142ae:	addr32 jne 0x414312
  4142b1:	jns    0x4142b3
  4142b3:	push   rcx
  4142b4:	add    BYTE PTR [r9+0x61],dl
  4142b8:	je     0x41431b
  4142ba:	jb     0x4142bc
  4142bc:	push   rdx
  4142bd:	add    BYTE PTR [r10+0x65],r10b
  4142c1:	jne    0x414331
  4142c3:	imul   ebp,DWORD PTR [rdi+0x6e],0x4f5200
  4142ca:	push   rdx
  4142cb:	outs   dx,DWORD PTR ds:[rsi]
  4142cc:	ins    DWORD PTR es:[rdi],dx
  4142cd:	(bad)  
  4142ce:	outs   dx,BYTE PTR ds:[rsi]
  4142cf:	imul   esp,DWORD PTR [rcx+0x0],0x53005352
  4142d6:	gs jb  0x41433b
  4142d9:	imul   esp,DWORD PTR [rcx+0x0],0x52005552
  4142e0:	jne    0x414355
  4142e2:	jae    0x41434d
  4142e4:	(bad)  
  4142e5:	add    BYTE PTR [rdx+0x57],dl
  4142e8:	add    BYTE PTR [rdx+0x77],dl
  4142eb:	(bad)  
  4142ec:	outs   dx,BYTE PTR ds:[rsi]
  4142ed:	fs (bad) 
  4142ef:	add    BYTE PTR [rbx+0x41],dl
  4142f2:	add    BYTE PTR [rbx+0x61],dl
  4142f5:	jne    0x41435b
  4142f7:	imul   esp,DWORD PTR [rax],0x62617241
  4142fd:	imul   esp,DWORD PTR [rcx+0x0],0x53004553
  414304:	ja     0x41436b
  414306:	fs outs dx,BYTE PTR gs:[rsi]
  414309:	add    BYTE PTR [rbx+0x47],dl
  41430c:	add    BYTE PTR [rbx+0x69],dl
  41430f:	outs   dx,BYTE PTR ds:[rsi]
  414310:	addr32 (bad) 
  414312:	jo     0x414383
  414314:	jb     0x41437b
  414316:	add    BYTE PTR [rbx+0x49],dl
  414319:	add    BYTE PTR [rbx+0x6c],dl
  41431c:	outs   dx,DWORD PTR ds:[rsi]
  41431d:	jbe    0x414384
  41431f:	outs   dx,BYTE PTR ds:[rsi]
  414320:	imul   esp,DWORD PTR [rcx+0x0],0x53004b53
  414327:	ins    BYTE PTR es:[rdi],dx
  414328:	outs   dx,DWORD PTR ds:[rsi]
  414329:	jbe    0x41438c
  41432b:	imul   eax,DWORD PTR [rax],0x53
  41432e:	rex.WRX add BYTE PTR [rbx+0x65],r10b
  414332:	outs   dx,BYTE PTR ds:[rsi]
  414333:	gs addr32 (bad) 
  414336:	ins    BYTE PTR es:[rdi],dx
  414337:	add    BYTE PTR [rbx+0x4f],dl
  41433a:	add    BYTE PTR [rbx+0x6f],dl
  41433d:	ins    DWORD PTR es:[rdi],dx
  41433e:	(bad)  
  41433f:	ins    BYTE PTR es:[rdi],dx
  414340:	imul   esp,DWORD PTR [rcx+0x0],0x53005253
  414347:	jne    0x4143bb
  414349:	imul   ebp,DWORD PTR [rsi+0x61],0x5300656d
  414350:	push   rsi
  414351:	add    BYTE PTR [rbp+0x6c],al
  414354:	and    BYTE PTR [rbx+0x61],dl
  414357:	ins    BYTE PTR es:[rdi],dx
  414358:	jbe    0x4143bb
  41435a:	outs   dx,DWORD PTR fs:[rsi]
  41435c:	jb     0x41435e
  41435e:	push   rbx
  41435f:	pop    rcx
  414360:	add    BYTE PTR [rbx+0x79],dl
  414363:	jb     0x4143ce
  414365:	(bad)  
  414366:	add    BYTE PTR [rax+rcx*2+0x0],dl
  41436a:	push   rsp
  41436b:	push   0x616c6961
  414370:	outs   dx,BYTE PTR ds:[rsi]
  414371:	add    BYTE PTR fs:[rdx+rcx*2+0x0],dl
  414376:	push   rsp
  414377:	(bad)  
  414378:	push   0x69
  41437a:	imul   ebp,DWORD PTR [rcx+0x73],0x74
  41437e:	(bad)  
  41437f:	outs   dx,BYTE PTR ds:[rsi]
  414380:	add    BYTE PTR [rbp+rcx*2+0x0],dl
  414384:	push   rsp
  414385:	jne    0x4143f9
  414387:	imul   ebp,DWORD PTR [rbp+0x65],0x6e
  41438b:	imul   esi,DWORD PTR [rbx+0x74],0x54006e61
  414392:	rex.WRX add BYTE PTR [rbp+r14*2+0x6e],r10b
  414397:	imul   esi,DWORD PTR [rbx+0x69],0x52540061
  41439e:	add    BYTE PTR [rbp+rsi*2+0x72],dl
  4143a2:	imul   esp,DWORD PTR [rbp+0x79],0x0
  4143a6:	push   rsp
  4143a7:	push   rsp
  4143a8:	add    BYTE PTR [rdx+rsi*2+0x69],dl
  4143ac:	outs   dx,BYTE PTR ds:[rsi]
  4143ad:	imul   esp,DWORD PTR [rcx+riz*2+0x64],0x646e6120
  4143b5:	and    BYTE PTR [rdi+rbp*2+0x62],dl
  4143b9:	(bad)  
  4143ba:	outs   dx,DWORD PTR ds:[esi]
  4143bc:	add    BYTE PTR [rdi+rdx*2+0x0],dl
  4143c0:	push   rsp
  4143c1:	(bad)  
  4143c2:	imul   esi,DWORD PTR [rdi+0x61],0x5a54006e
  4143c9:	add    BYTE PTR [rcx+riz*2+0x6e],dl
  4143cd:	jp     0x414430
  4143cf:	outs   dx,BYTE PTR ds:[rsi]
  4143d0:	imul   esp,DWORD PTR [rcx+0x0],0x55004155
  4143d7:	imul   esi,DWORD PTR [rdx+0x61],0x69
  4143db:	outs   dx,BYTE PTR ds:[rsi]
  4143dc:	add    BYTE PTR gs:[rbp+0x53],dl
  4143e0:	add    BYTE PTR [rbp+0x6e],dl
  4143e3:	imul   esi,DWORD PTR [rbp+riz*2+0x64],0x61745320
  4143eb:	je     0x414452
  4143ed:	jae    0x4143ef
  4143ef:	push   rbp
  4143f0:	pop    rcx
  4143f1:	add    BYTE PTR [rbp+0x72],dl
  4143f4:	jne    0x41445d
  4143f6:	jne    0x414459
  4143f8:	jns    0x4143fa
  4143fa:	push   rsi
  4143fb:	add    BYTE PTR [r14+0x61],dl
  4143ff:	je     0x41446a
  414401:	movsxd esp,DWORD PTR [rcx+0x6e]
  414404:	add    BYTE PTR [rsi+0x45],dl
  414407:	add    BYTE PTR [rsi+0x65],dl
  41440a:	outs   dx,BYTE PTR ds:[rsi]
  41440b:	gs jp  0x414483
  41440e:	gs ins BYTE PTR es:[rdi],dx
  414410:	(bad)  
  414411:	add    BYTE PTR [rsi+0x4e],dl
  414414:	add    BYTE PTR [rsi+0x69],dl
  414417:	gs je  0x41443a
  41441a:	rex.WRX (bad) 
  41441c:	ins    DWORD PTR es:[rdi],dx
  41441d:	add    BYTE PTR [rcx+0x45],bl
  414420:	add    BYTE PTR [rcx+0x65],bl
  414423:	ins    DWORD PTR es:[rdi],dx
  414424:	outs   dx,BYTE PTR gs:[rsi]
  414426:	add    BYTE PTR [rdx+0x41],bl
  414429:	add    BYTE PTR [rbx+0x6f],dl
  41442c:	jne    0x4144a2
  41442e:	push   0x72664120
  414433:	imul   esp,DWORD PTR [rbx+0x61],0x575a00
  41443a:	pop    rdx
  41443b:	imul   ebp,DWORD PTR [rbp+0x62],0x65776261
	...
  41447e:	add    BYTE PTR [rax],al
  414480:	and    al,0x3d
  414482:	add    BYTE PTR [r8],al
  414485:	add    BYTE PTR [rax],al
  414487:	add    BYTE PTR [rdi],ah
  414489:	cmp    eax,0x41
  41448e:	add    BYTE PTR [rax],al
  414490:	cs cmp eax,0x41
  414496:	add    BYTE PTR [rax],al
  414498:	xor    DWORD PTR [rip+0x41],edi        # 0x4144df
  41449e:	add    BYTE PTR [rax],al
  4144a0:	cmp    eax,0x413d
  4144a5:	add    BYTE PTR [rax],al
  4144a7:	add    BYTE PTR [rax+0x3d],al
  4144aa:	add    BYTE PTR [r8],al
  4144ad:	add    BYTE PTR [rax],al
  4144af:	add    BYTE PTR [rax+0x3d],cl
  4144b2:	add    BYTE PTR [r8],al
  4144b5:	add    BYTE PTR [rax],al
  4144b7:	add    BYTE PTR [rbx+0x3d],cl
  4144ba:	add    BYTE PTR [r8],al
  4144bd:	add    BYTE PTR [rax],al
  4144bf:	add    BYTE PTR [rbx+0x3d],dl
  4144c2:	add    BYTE PTR [r8],al
  4144c5:	add    BYTE PTR [rax],al
  4144c7:	add    BYTE PTR [rsi+0x3d],dl
  4144ca:	add    BYTE PTR [r8],al
  4144cd:	add    BYTE PTR [rax],al
  4144cf:	add    BYTE PTR [rbx+0x3d],ch
  4144d2:	add    BYTE PTR [r8],al
  4144d5:	add    BYTE PTR [rax],al
  4144d7:	add    BYTE PTR [rsi+0x3d],ch
  4144da:	add    BYTE PTR [r8],al
  4144dd:	add    BYTE PTR [rax],al
  4144df:	add    BYTE PTR [rax+0x3d],bh
  4144e2:	add    BYTE PTR [r8],al
  4144e5:	add    BYTE PTR [rax],al
  4144e7:	add    BYTE PTR [rbx+0x3d],bh
  4144ea:	add    BYTE PTR [r8],al
  4144ed:	add    BYTE PTR [rax],al
  4144ef:	add    BYTE PTR [rbx+0x413d],al
  4144f5:	add    BYTE PTR [rax],al
  4144f7:	add    BYTE PTR [rsi+0x413d],al
  4144fd:	add    BYTE PTR [rax],al
  4144ff:	add    BYTE PTR [rax+0x413d],dl
  414505:	add    BYTE PTR [rax],al
  414507:	add    BYTE PTR [rbx+0x413d],dl
  41450d:	add    BYTE PTR [rax],al
  41450f:	add    BYTE PTR [rsi+0x413d],bl
  414515:	add    BYTE PTR [rax],al
  414517:	add    BYTE PTR [rcx+0x413d],ah
  41451d:	add    BYTE PTR [rax],al
  41451f:	add    BYTE PTR [rax+0x413d],bh
  414525:	add    BYTE PTR [rax],al
  414527:	add    BYTE PTR [rbx+0x413d],bh
  41452d:	add    BYTE PTR [rax],al
  41452f:	add    dh,al
  414531:	cmp    eax,0x41
  414536:	add    BYTE PTR [rax],al
  414538:	leave  
  414539:	cmp    eax,0x41
  41453e:	add    BYTE PTR [rax],al
  414540:	sar    DWORD PTR [rip+0x41],1        # 0x414587
  414546:	add    BYTE PTR [rax],al
  414548:	(bad)  
  414549:	cmp    eax,0x41
  41454e:	add    BYTE PTR [rax],al
  414550:	fnstsw WORD PTR [rip+0x41]        # 0x414597
  414556:	add    BYTE PTR [rax],al
  414558:	loopne 0x414597
  41455a:	add    BYTE PTR [r8],al
  41455d:	add    BYTE PTR [rax],al
  41455f:	add    al,ch
  414561:	cmp    eax,0x41
  414566:	add    BYTE PTR [rax],al
  414568:	jmp    0x4145a7
  41456a:	add    BYTE PTR [r8],al
  41456d:	add    BYTE PTR [rax],al
  41456f:	add    ch,bh
  414571:	cmp    eax,0x41
  414576:	add    BYTE PTR [rax],al
  414578:	add    BYTE PTR [rsi],bh
  41457a:	add    BYTE PTR [r8],al
  41457d:	add    BYTE PTR [rax],al
  41457f:	add    BYTE PTR [rax],cl
  414581:	add    BYTE PTR ds:[r8],al
  414585:	add    BYTE PTR [rax],al
  414587:	add    BYTE PTR [rbx],cl
  414589:	add    BYTE PTR ds:[r8],al
  41458d:	add    BYTE PTR [rax],al
  41458f:	add    BYTE PTR [rdx],dl
  414591:	add    BYTE PTR ds:[r8],al
  414595:	add    BYTE PTR [rax],al
  414597:	add    BYTE PTR [rip+0x413e],dl        # 0x4186db
  41459d:	add    BYTE PTR [rax],al
  41459f:	add    BYTE PTR [rsi+rdi*1],bl
  4145a2:	add    BYTE PTR [r8],al
  4145a5:	add    BYTE PTR [rax],al
  4145a7:	add    BYTE PTR [rdi],bl
  4145a9:	add    BYTE PTR ds:[r8],al
  4145ad:	add    BYTE PTR [rax],al
  4145af:	add    BYTE PTR [rdi],ah
  4145b1:	add    BYTE PTR ds:[r8],al
  4145b5:	add    BYTE PTR [rax],al
  4145b7:	add    BYTE PTR [rdx],ch
  4145b9:	add    BYTE PTR ds:[r8],al
  4145bd:	add    BYTE PTR [rax],al
  4145bf:	add    BYTE PTR [rcx],dh
  4145c1:	add    BYTE PTR ds:[r8],al
  4145c5:	add    BYTE PTR [rax],al
  4145c7:	add    BYTE PTR [rsi+rdi*1],dh
  4145ca:	add    BYTE PTR [r8],al
  4145cd:	add    BYTE PTR [rax],al
  4145cf:	add    BYTE PTR [rbx],bh
  4145d1:	add    BYTE PTR ds:[r8],al
  4145d5:	add    BYTE PTR [rax],al
  4145d7:	add    BYTE PTR [rsi],bh
  4145d9:	add    BYTE PTR ds:[r8],al
  4145dd:	add    BYTE PTR [rax],al
  4145df:	add    BYTE PTR [rsi+rdi*1+0x41],al
  4145e3:	add    BYTE PTR [rax],al
  4145e5:	add    BYTE PTR [rax],al
  4145e7:	add    BYTE PTR [rdi+0x3e],al
  4145ea:	add    BYTE PTR [r8],al
  4145ed:	add    BYTE PTR [rax],al
  4145ef:	add    BYTE PTR [rbx+0x3e],dl
  4145f2:	add    BYTE PTR [r8],al
  4145f5:	add    BYTE PTR [rax],al
  4145f7:	add    BYTE PTR [rsi+0x3e],dl
  4145fa:	add    BYTE PTR [r8],al
  4145fd:	add    BYTE PTR [rax],al
  4145ff:	add    BYTE PTR [rsi+rdi*1+0x41],ah
  414603:	add    BYTE PTR [rax],al
  414605:	add    BYTE PTR [rax],al
  414607:	add    BYTE PTR [rdi+0x3e],ah
  41460a:	add    BYTE PTR [r8],al
  41460d:	add    BYTE PTR [rax],al
  41460f:	add    BYTE PTR [rbp+0x3e],ch
  414612:	add    BYTE PTR [r8],al
  414615:	add    BYTE PTR [rax],al
  414617:	add    BYTE PTR [rax+0x3e],dh
  41461a:	add    BYTE PTR [r8],al
  41461d:	add    BYTE PTR [rax],al
  41461f:	add    BYTE PTR [rcx+0x3e],bh
  414622:	add    BYTE PTR [r8],al
  414625:	add    BYTE PTR [rax],al
  414627:	add    BYTE PTR [rsi+rdi*1+0x41],bh
  41462b:	add    BYTE PTR [rax],al
  41462d:	add    BYTE PTR [rax],al
  41462f:	add    BYTE PTR [rdi+0x413e],dl
  414635:	add    BYTE PTR [rax],al
  414637:	add    BYTE PTR [rdx+0x413e],bl
  41463d:	add    BYTE PTR [rax],al
  41463f:	add    BYTE PTR [rbx+0x413e],ah
  414645:	add    BYTE PTR [rax],al
  414647:	add    BYTE PTR [rsi+0x413e],ah
  41464d:	add    BYTE PTR [rax],al
  41464f:	add    BYTE PTR [rcx+0x413e],dh
  414655:	add    BYTE PTR [rax],al
  414657:	add    BYTE PTR [rsi+rdi*1+0x41],dh
  41465e:	add    BYTE PTR [rax],al
  414660:	retf   0x413e
  414663:	add    BYTE PTR [rax],al
  414665:	add    BYTE PTR [rax],al
  414667:	add    ch,cl
  414669:	add    BYTE PTR ds:[r8],al
  41466d:	add    BYTE PTR [rax],al
  41466f:	add    ah,bl
  414671:	add    BYTE PTR ds:[r8],al
  414675:	add    BYTE PTR [rax],al
  414677:	add    bh,bl
  414679:	add    BYTE PTR ds:[r8],al
  41467d:	add    BYTE PTR [rax],al
  41467f:	add    bh,ah
  414681:	add    BYTE PTR ds:[r8],al
  414685:	add    BYTE PTR [rax],al
  414687:	add    dl,ch
  414689:	add    BYTE PTR ds:[r8],al
  41468d:	add    BYTE PTR [rax],al
  41468f:	add    dl,dh
  414691:	add    BYTE PTR ds:[r8],al
  414695:	add    BYTE PTR [rax],al
  414697:	add    ch,dh
  414699:	add    BYTE PTR ds:[r8],al
  41469d:	add    BYTE PTR [rax],al
  41469f:	add    BYTE PTR [rax],cl
  4146a1:	(bad)  
  4146a2:	add    BYTE PTR [r8],al
  4146a5:	add    BYTE PTR [rax],al
  4146a7:	add    BYTE PTR [rbx],cl
  4146a9:	(bad)  
  4146aa:	add    BYTE PTR [r8],al
  4146ad:	add    BYTE PTR [rax],al
  4146af:	add    BYTE PTR [rbx],dl
  4146b1:	(bad)  
  4146b2:	add    BYTE PTR [r8],al
  4146b5:	add    BYTE PTR [rax],al
  4146b7:	add    BYTE PTR [rsi],dl
  4146b9:	(bad)  
  4146ba:	add    BYTE PTR [r8],al
  4146bd:	add    BYTE PTR [rax],al
  4146bf:	add    BYTE PTR [rsi],bl
  4146c1:	(bad)  
  4146c2:	add    BYTE PTR [r8],al
  4146c5:	add    BYTE PTR [rax],al
  4146c7:	add    BYTE PTR [rcx],ah
  4146c9:	(bad)  
  4146ca:	add    BYTE PTR [r8],al
  4146cd:	add    BYTE PTR [rax],al
  4146cf:	add    BYTE PTR [rcx],ch
  4146d1:	(bad)  
  4146d2:	add    BYTE PTR [r8],al
  4146d5:	add    BYTE PTR [rax],al
  4146d7:	add    BYTE PTR [rdi+rdi*1],ch
  4146da:	add    BYTE PTR [r8],al
  4146dd:	add    BYTE PTR [rax],al
  4146df:	add    BYTE PTR [rdx],dh
  4146e1:	(bad)  
  4146e2:	add    BYTE PTR [r8],al
  4146e5:	add    BYTE PTR [rax],al
  4146e7:	add    BYTE PTR [rip+0x413f],dh        # 0x41882c
  4146ed:	add    BYTE PTR [rax],al
  4146ef:	add    BYTE PTR [rip+0x413f],bh        # 0x418834
  4146f5:	add    BYTE PTR [rax],al
  4146f7:	add    BYTE PTR [rax+0x3f],al
  4146fa:	add    BYTE PTR [r8],al
  4146fd:	add    BYTE PTR [rax],al
  4146ff:	add    BYTE PTR [rsi+0x3f],al
  414702:	add    BYTE PTR [r8],al
  414705:	add    BYTE PTR [rax],al
  414707:	add    BYTE PTR [rcx+0x3f],cl
  41470a:	add    BYTE PTR [r8],al
  41470d:	add    BYTE PTR [rax],al
  41470f:	add    BYTE PTR [rdx+0x3f],dl
  414712:	add    BYTE PTR [r8],al
  414715:	add    BYTE PTR [rax],al
  414717:	add    BYTE PTR [rbp+0x3f],dl
  41471a:	add    BYTE PTR [r8],al
  41471d:	add    BYTE PTR [rax],al
  41471f:	add    BYTE PTR [rbp+0x3f],bl
  414722:	add    BYTE PTR [r8],al
  414725:	add    BYTE PTR [rax],al
  414727:	add    BYTE PTR [rax+0x3f],ah
  41472a:	add    BYTE PTR [r8],al
  41472d:	add    BYTE PTR [rax],al
  41472f:	add    BYTE PTR [rsi+0x3f],ch
  414732:	add    BYTE PTR [r8],al
  414735:	add    BYTE PTR [rax],al
  414737:	add    BYTE PTR [rcx+0x3f],dh
  41473a:	add    BYTE PTR [r8],al
  41473d:	add    BYTE PTR [rax],al
  41473f:	add    BYTE PTR [rax+0x3f],bh
  414742:	add    BYTE PTR [r8],al
  414745:	add    BYTE PTR [rax],al
  414747:	add    BYTE PTR [rbx+0x3f],bh
  41474a:	add    BYTE PTR [r8],al
  41474d:	add    BYTE PTR [rax],al
  41474f:	add    BYTE PTR [rdx+0x413f],cl
  414755:	add    BYTE PTR [rax],al
  414757:	add    BYTE PTR [rbp+0x413f],cl
  41475d:	add    BYTE PTR [rax],al
  41475f:	add    BYTE PTR [rdi+0x413f],dl
  414765:	add    BYTE PTR [rax],al
  414767:	add    BYTE PTR [rdx+0x413f],bl
  41476d:	add    BYTE PTR [rax],al
  41476f:	add    BYTE PTR [rdx+0x413f],ah
  414775:	add    BYTE PTR [rax],al
  414777:	add    BYTE PTR [rbp+0x413f],ah
  41477d:	add    BYTE PTR [rax],al
  41477f:	add    BYTE PTR [rdi+0x413f],ch
  414785:	add    BYTE PTR [rax],al
  414787:	add    BYTE PTR [rdx+0x413f],dh
  41478d:	add    BYTE PTR [rax],al
  41478f:	add    BYTE PTR [rcx+0x413f],bh
  414795:	add    BYTE PTR [rax],al
  414797:	add    BYTE PTR [rdi+rdi*1+0x41],bh
  41479e:	add    BYTE PTR [rax],al
  4147a0:	(bad)  
  4147a1:	(bad)  
  4147a2:	add    BYTE PTR [r8],al
  4147a5:	add    BYTE PTR [rax],al
  4147a7:	add    cl,cl
  4147a9:	(bad)  
  4147aa:	add    BYTE PTR [r8],al
  4147ad:	add    BYTE PTR [rax],al
  4147af:	add    dh,al
  4147b1:	(bad)  
  4147b2:	add    BYTE PTR [r8],al
  4147b5:	add    BYTE PTR [rax],al
  4147b7:	add    bl,dl
  4147b9:	(bad)  
  4147ba:	add    BYTE PTR [r8],al
  4147bd:	add    BYTE PTR [rax],al
  4147bf:	add    ah,ah
  4147c1:	(bad)  
  4147c2:	add    BYTE PTR [r8],al
  4147c5:	add    BYTE PTR [rax],al
  4147c7:	add    bh,ah
  4147c9:	(bad)  
  4147ca:	add    BYTE PTR [r8],al
  4147cd:	add    BYTE PTR [rax],al
  4147cf:	add    al,dh
  4147d1:	(bad)  
  4147d2:	add    BYTE PTR [r8],al
  4147d5:	add    BYTE PTR [rax],al
  4147d7:	add    bl,dh
  4147d9:	(bad)  
  4147da:	add    BYTE PTR [r8],al
  4147dd:	add    BYTE PTR [rax],al
  4147df:	add    bl,bh
  4147e1:	(bad)  
  4147e2:	add    BYTE PTR [r8],al
  4147e5:	add    BYTE PTR [rax],al
  4147e7:	add    dh,bh
  4147e9:	(bad)  
  4147ea:	add    BYTE PTR [r8],al
  4147ed:	add    BYTE PTR [rax],al
  4147ef:	add    BYTE PTR [rax+rax*2],al
  4147f2:	add    BYTE PTR [r8],al
  4147f5:	add    BYTE PTR [rax],al
  4147f7:	add    BYTE PTR [rdi],al
  4147f9:	rex
  4147fa:	add    BYTE PTR [r8],al
  4147fd:	add    BYTE PTR [rax],al
  4147ff:	add    BYTE PTR [rdi],cl
  414801:	rex
  414802:	add    BYTE PTR [r8],al
  414805:	add    BYTE PTR [rax],al
  414807:	add    BYTE PTR [rdx],dl
  414809:	rex
  41480a:	add    BYTE PTR [r8],al
  41480d:	add    BYTE PTR [rax],al
  41480f:	add    BYTE PTR [rax+rax*2],bl
  414812:	add    BYTE PTR [r8],al
  414815:	add    BYTE PTR [rax],al
  414817:	add    BYTE PTR [rdi],bl
  414819:	rex
  41481a:	add    BYTE PTR [r8],al
  41481d:	add    BYTE PTR [rax],al
  41481f:	add    BYTE PTR [rdi],ah
  414821:	rex
  414822:	add    BYTE PTR [r8],al
  414825:	add    BYTE PTR [rax],al
  414827:	add    BYTE PTR [rdx],ch
  414829:	rex
  41482a:	add    BYTE PTR [r8],al
  41482d:	add    BYTE PTR [rax],al
  41482f:	add    BYTE PTR [rcx],dh
  414831:	rex
  414832:	add    BYTE PTR [r8],al
  414835:	add    BYTE PTR [rax],al
  414837:	add    BYTE PTR [rax+rax*2],dh
  41483a:	add    BYTE PTR [r8],al
  41483d:	add    BYTE PTR [rax],al
  41483f:	add    BYTE PTR [rdx],bh
  414841:	rex
  414842:	add    BYTE PTR [r8],al
  414845:	add    BYTE PTR [rax],al
  414847:	add    BYTE PTR [rip+0x4140],bh        # 0x41898d
  41484d:	add    BYTE PTR [rax],al
  41484f:	add    BYTE PTR [rdx+0x40],al
  414852:	add    BYTE PTR [r8],al
  414855:	add    BYTE PTR [rax],al
  414857:	add    BYTE PTR [rbp+0x40],al
  41485a:	add    BYTE PTR [r8],al
  41485d:	add    BYTE PTR [rax],al
  41485f:	add    BYTE PTR [rdx+0x40],cl
  414862:	add    BYTE PTR [r8],al
  414865:	add    BYTE PTR [rax],al
  414867:	add    BYTE PTR [rbp+0x40],cl
  41486a:	add    BYTE PTR [r8],al
  41486d:	add    BYTE PTR [rax],al
  41486f:	add    BYTE PTR [rbp+0x40],dl
  414872:	add    BYTE PTR [r8],al
  414875:	add    BYTE PTR [rax],al
  414877:	add    BYTE PTR [rax+0x40],bl
  41487a:	add    BYTE PTR [r8],al
  41487d:	add    BYTE PTR [rax],al
  41487f:	add    BYTE PTR [rsi+0x40],bl
  414882:	add    BYTE PTR [r8],al
  414885:	add    BYTE PTR [rax],al
  414887:	add    BYTE PTR [rcx+0x40],ah
  41488a:	add    BYTE PTR [r8],al
  41488d:	add    BYTE PTR [rax],al
  41488f:	add    BYTE PTR [rcx+0x40],ch
  414892:	add    BYTE PTR [r8],al
  414895:	add    BYTE PTR [rax],al
  414897:	add    BYTE PTR [rax+rax*2+0x41],ch
  41489b:	add    BYTE PTR [rax],al
  41489d:	add    BYTE PTR [rax],al
  41489f:	add    BYTE PTR [rbx+0x40],dh
  4148a2:	add    BYTE PTR [r8],al
  4148a5:	add    BYTE PTR [rax],al
  4148a7:	add    BYTE PTR [rsi+0x40],dh
  4148aa:	add    BYTE PTR [r8],al
  4148ad:	add    BYTE PTR [rax],al
  4148af:	add    BYTE PTR [rax+rax*2+0x41],bh
  4148b3:	add    BYTE PTR [rax],al
  4148b5:	add    BYTE PTR [rax],al
  4148b7:	add    BYTE PTR [rdi+0x40],bh
  4148ba:	add    BYTE PTR [r8],al
  4148bd:	add    BYTE PTR [rax],al
  4148bf:	add    BYTE PTR [rbp+0x4140],al
  4148c5:	add    BYTE PTR [rax],al
  4148c7:	add    BYTE PTR [rax+0x4140],cl
  4148cd:	add    BYTE PTR [rax],al
  4148cf:	add    BYTE PTR [rbx+0x4140],dl
  4148d5:	add    BYTE PTR [rax],al
  4148d7:	add    BYTE PTR [rsi+0x4140],dl
  4148dd:	add    BYTE PTR [rax],al
  4148df:	add    BYTE PTR [rdi+0x4140],bl
  4148e5:	add    BYTE PTR [rax],al
  4148e7:	add    BYTE PTR [rdx+0x4140],ah
  4148ed:	add    BYTE PTR [rax],al
  4148ef:	add    BYTE PTR [rsi+0x4140],ch
  4148f5:	add    BYTE PTR [rax],al
  4148f7:	add    BYTE PTR [rcx+0x4140],dh
  4148fd:	add    BYTE PTR [rax],al
  4148ff:	add    BYTE PTR [rax+0x4140],bh
  414905:	add    BYTE PTR [rax],al
  414907:	add    BYTE PTR [rbx+0x4140],bh
  41490d:	add    BYTE PTR [rax],al
  41490f:	add    dh,al
  414911:	rex
  414912:	add    BYTE PTR [r8],al
  414915:	add    BYTE PTR [rax],al
  414917:	add    cl,cl
  414919:	rex
  41491a:	add    BYTE PTR [r8],al
  41491d:	add    BYTE PTR [rax],al
  41491f:	add    dh,cl
  414921:	rex
  414922:	add    BYTE PTR [r8],al
  414925:	add    BYTE PTR [rax],al
  414927:	add    cl,dl
  414929:	rex
  41492a:	add    BYTE PTR [r8],al
  41492d:	add    BYTE PTR [rax],al
  41492f:	add    cl,bl
  414931:	rex
  414932:	add    BYTE PTR [r8],al
  414935:	add    BYTE PTR [rax],al
  414937:	add    ah,bl
  414939:	rex
  41493a:	add    BYTE PTR [r8],al
  41493d:	add    BYTE PTR [rax],al
  41493f:	add    dl,ch
  414941:	rex
  414942:	add    BYTE PTR [r8],al
  414945:	add    BYTE PTR [rax],al
  414947:	add    ch,ch
  414949:	rex
  41494a:	add    BYTE PTR [r8],al
  41494d:	add    BYTE PTR [rax],al
  41494f:	add    bh,dh
  414951:	rex
  414952:	add    BYTE PTR [r8],al
  414955:	add    BYTE PTR [rax],al
  414957:	add    dl,bh
  414959:	rex
  41495a:	add    BYTE PTR [r8],al
  41495d:	add    BYTE PTR [rax],al
  41495f:	add    BYTE PTR [rcx+rax*2],al
  414962:	add    BYTE PTR [r8],al
  414965:	add    BYTE PTR [rax],al
  414967:	add    BYTE PTR [rdi],al
  414969:	rex.B
  41496a:	add    BYTE PTR [r8],al
  41496d:	add    BYTE PTR [rax],al
  41496f:	add    BYTE PTR [rdx],dl
  414971:	rex.B
  414972:	add    BYTE PTR [r8],al
  414975:	add    BYTE PTR [rax],al
  414977:	add    BYTE PTR [rip+0x4141],dl        # 0x418abe
  41497d:	add    BYTE PTR [rax],al
  41497f:	add    BYTE PTR [rcx+rax*2],bl
  414982:	add    BYTE PTR [r8],al
  414985:	add    BYTE PTR [rax],al
  414987:	add    BYTE PTR [rdi],bl
  414989:	rex.B
  41498a:	add    BYTE PTR [r8],al
  41498d:	add    BYTE PTR [rax],al
  41498f:	add    BYTE PTR [rip+0x4141],ah        # 0x418ad6
  414995:	add    BYTE PTR [rax],al
  414997:	add    BYTE PTR [rax],ch
  414999:	rex.B
  41499a:	add    BYTE PTR [r8],al
  41499d:	add    BYTE PTR [rax],al
  41499f:	add    BYTE PTR [rax],dh
  4149a1:	rex.B
  4149a2:	add    BYTE PTR [r8],al
  4149a5:	add    BYTE PTR [rax],al
  4149a7:	add    BYTE PTR [rbx],dh
  4149a9:	rex.B
  4149aa:	add    BYTE PTR [r8],al
  4149ad:	add    BYTE PTR [rax],al
  4149af:	add    BYTE PTR [rdx+0x41],cl
  4149b2:	add    BYTE PTR [r8],al
  4149b5:	add    BYTE PTR [rax],al
  4149b7:	add    BYTE PTR [rbp+0x41],cl
  4149ba:	add    BYTE PTR [r8],al
  4149bd:	add    BYTE PTR [rax],al
  4149bf:	add    BYTE PTR [rdx+0x41],cl
  4149c2:	add    BYTE PTR [r8],al
  4149c5:	add    BYTE PTR [rax],al
  4149c7:	add    BYTE PTR [rbp+0x41],dl
  4149ca:	add    BYTE PTR [r8],al
  4149cd:	add    BYTE PTR [rax],al
  4149cf:	add    BYTE PTR [rbp+0x41],bl
  4149d2:	add    BYTE PTR [r8],al
  4149d5:	add    BYTE PTR [rax],al
  4149d7:	add    BYTE PTR [rax+0x41],ah
  4149da:	add    BYTE PTR [r8],al
  4149dd:	add    BYTE PTR [rax],al
  4149df:	add    BYTE PTR [rbx+0x41],ch
  4149e2:	add    BYTE PTR [r8],al
  4149e5:	add    BYTE PTR [rax],al
  4149e7:	add    BYTE PTR [rax+0x41],dh
  4149ea:	add    BYTE PTR [r8],al
  4149ed:	add    BYTE PTR [rax],al
  4149ef:	add    BYTE PTR [rsi+0x4141],dl
  4149f5:	add    BYTE PTR [rax],al
  4149f7:	add    BYTE PTR [rcx+0x4141],bl
  4149fd:	add    BYTE PTR [rax],al
  4149ff:	add    BYTE PTR [rsi+0x4141],bl
  414a05:	add    BYTE PTR [rax],al
  414a07:	add    BYTE PTR [rcx+0x4141],ah
  414a0d:	add    BYTE PTR [rax],al
  414a0f:	add    BYTE PTR [rcx+0x4141],ch
  414a15:	add    BYTE PTR [rax],al
  414a17:	add    BYTE PTR [rcx+rax*2+0x41],ch
  414a1e:	add    BYTE PTR [rax],al
  414a20:	mov    ch,0x41
  414a22:	add    BYTE PTR [r8],al
  414a25:	add    BYTE PTR [rax],al
  414a27:	add    BYTE PTR [rax+0x4141],bh
  414a2d:	add    BYTE PTR [rax],al
  414a2f:	add    ch,al
  414a31:	rex.B
  414a32:	add    BYTE PTR [r8],al
  414a35:	add    BYTE PTR [rax],al
  414a37:	add    al,cl
  414a39:	rex.B
  414a3a:	add    BYTE PTR [r8],al
  414a3d:	add    BYTE PTR [rax],al
  414a3f:	add    dh,cl
  414a41:	rex.B
  414a42:	add    BYTE PTR [r8],al
  414a45:	add    BYTE PTR [rax],al
  414a47:	add    cl,dl
  414a49:	rex.B
  414a4a:	add    BYTE PTR [r8],al
  414a4d:	add    BYTE PTR [rax],al
  414a4f:	add    dl,bl
  414a51:	rex.B
  414a52:	add    BYTE PTR [r8],al
  414a55:	add    BYTE PTR [rax],al
  414a57:	add    ch,bl
  414a59:	rex.B
  414a5a:	add    BYTE PTR [r8],al
  414a5d:	add    BYTE PTR [rax],al
  414a5f:	add    ah,ah
  414a61:	rex.B
  414a62:	add    BYTE PTR [r8],al
  414a65:	add    BYTE PTR [rax],al
  414a67:	add    bh,ah
  414a69:	rex.B
  414a6a:	add    BYTE PTR [r8],al
  414a6d:	add    BYTE PTR [rax],al
  414a6f:	add    al,dh
  414a71:	rex.B
  414a72:	add    BYTE PTR [r8],al
  414a75:	add    BYTE PTR [rax],al
  414a77:	add    bl,dh
  414a79:	rex.B
  414a7a:	add    BYTE PTR [r8],al
  414a7d:	add    BYTE PTR [rax],al
  414a7f:	add    bl,bh
  414a81:	rex.B
  414a82:	add    BYTE PTR [r8],al
  414a85:	add    BYTE PTR [rax],al
  414a87:	add    dh,bh
  414a89:	rex.B
  414a8a:	add    BYTE PTR [r8],al
  414a8d:	add    BYTE PTR [rax],al
  414a8f:	add    BYTE PTR [rax],cl
  414a91:	rex.X
  414a92:	add    BYTE PTR [r8],al
  414a95:	add    BYTE PTR [rax],al
  414a97:	add    BYTE PTR [rbx],cl
  414a99:	rex.X
  414a9a:	add    BYTE PTR [r8],al
  414a9d:	add    BYTE PTR [rax],al
  414a9f:	add    BYTE PTR [rdi],dl
  414aa1:	rex.X
  414aa2:	add    BYTE PTR [r8],al
  414aa5:	add    BYTE PTR [rax],al
  414aa7:	add    BYTE PTR [rdx],bl
  414aa9:	rex.X
  414aaa:	add    BYTE PTR [r8],al
  414aad:	add    BYTE PTR [rax],al
  414aaf:	add    BYTE PTR [rcx],ah
  414ab1:	rex.X
  414ab2:	add    BYTE PTR [r8],al
  414ab5:	add    BYTE PTR [rax],al
  414ab7:	add    BYTE PTR [rdx+rax*2],ah
  414aba:	add    BYTE PTR [r8],al
  414abd:	add    BYTE PTR [rax],al
  414abf:	add    BYTE PTR [rdx],ch
  414ac1:	rex.X
  414ac2:	add    BYTE PTR [r8],al
  414ac5:	add    BYTE PTR [rax],al
  414ac7:	add    BYTE PTR [rip+0x4142],ch        # 0x418c0f
  414acd:	add    BYTE PTR [rax],al
  414acf:	add    BYTE PTR [rcx],bh
  414ad1:	rex.X
  414ad2:	add    BYTE PTR [r8],al
  414ad5:	add    BYTE PTR [rax],al
  414ad7:	add    BYTE PTR [rdx+rax*2],bh
  414ada:	add    BYTE PTR [r8],al
  414add:	add    BYTE PTR [rax],al
  414adf:	add    BYTE PTR [rcx+0x42],al
  414ae2:	add    BYTE PTR [r8],al
  414ae5:	add    BYTE PTR [rax],al
  414ae7:	add    BYTE PTR [rdx+rax*2+0x41],al
  414aeb:	add    BYTE PTR [rax],al
  414aed:	add    BYTE PTR [rax],al
  414aef:	add    BYTE PTR [rbx+0x42],cl
  414af2:	add    BYTE PTR [r8],al
  414af5:	add    BYTE PTR [rax],al
  414af7:	add    BYTE PTR [rsi+0x42],cl
  414afa:	add    BYTE PTR [r8],al
  414afd:	add    BYTE PTR [rax],al
  414aff:	add    BYTE PTR [rbx+0x42],dl
  414b02:	add    BYTE PTR [r8],al
  414b05:	add    BYTE PTR [rax],al
  414b07:	add    BYTE PTR [rsi+0x42],dl
  414b0a:	add    BYTE PTR [r8],al
  414b0d:	add    BYTE PTR [rax],al
  414b0f:	add    BYTE PTR [rdx+0x42],ah
  414b12:	add    BYTE PTR [r8],al
  414b15:	add    BYTE PTR [rax],al
  414b17:	add    BYTE PTR [rbp+0x42],ah
  414b1a:	add    BYTE PTR [r8],al
  414b1d:	add    BYTE PTR [rax],al
  414b1f:	add    BYTE PTR [rdx+0x4142],al
  414b25:	add    BYTE PTR [rax],al
  414b27:	add    BYTE PTR [rbp+0x4142],al
  414b2d:	add    BYTE PTR [rax],al
  414b2f:	add    BYTE PTR [rdx+rax*2+0x41],cl
  414b36:	add    BYTE PTR [rax],al
  414b38:	pop    QWORD PTR [rdx+0x41]
  414b3b:	add    BYTE PTR [rax],al
  414b3d:	add    BYTE PTR [rax],al
  414b3f:	add    BYTE PTR [rbx+0x4142],bl
  414b45:	add    BYTE PTR [rax],al
  414b47:	add    BYTE PTR [rsi+0x4142],bl
  414b4d:	add    BYTE PTR [rax],al
  414b4f:	add    BYTE PTR [rdi+0x4142],ah
  414b55:	add    BYTE PTR [rax],al
  414b57:	add    BYTE PTR [rdx+0x4142],ch
  414b5d:	add    BYTE PTR [rax],al
  414b5f:	add    BYTE PTR [rbx+0x4142],dh
  414b65:	add    BYTE PTR [rax],al
  414b67:	add    BYTE PTR [rsi+0x4142],dh
  414b6d:	add    BYTE PTR [rax],al
  414b6f:	add    BYTE PTR [rdx+rax*2+0x41],bh
  414b76:	add    BYTE PTR [rax],al
  414b78:	mov    edi,0x4142
  414b7d:	add    BYTE PTR [rax],al
  414b7f:	add    bh,al
  414b81:	rex.X
  414b82:	add    BYTE PTR [r8],al
  414b85:	add    BYTE PTR [rax],al
  414b87:	add    dl,cl
  414b89:	rex.X
  414b8a:	add    BYTE PTR [r8],al
  414b8d:	add    BYTE PTR [rax],al
  414b8f:	add    dl,dl
  414b91:	rex.X
  414b92:	add    BYTE PTR [r8],al
  414b95:	add    BYTE PTR [rax],al
  414b97:	add    ch,dl
  414b99:	rex.X
  414b9a:	add    BYTE PTR [r8],al
  414b9d:	add    BYTE PTR [rax],al
  414b9f:	add    ah,bl
  414ba1:	rex.X
  414ba2:	add    BYTE PTR [r8],al
  414ba5:	add    BYTE PTR [rax],al
  414ba7:	add    bh,bl
  414ba9:	rex.X
  414baa:	add    BYTE PTR [r8],al
  414bad:	add    BYTE PTR [rax],al
  414baf:	add    dh,ah
  414bb1:	rex.X
  414bb2:	add    BYTE PTR [r8],al
  414bb5:	add    BYTE PTR [rax],al
  414bb7:	add    cl,ch
  414bb9:	rex.X
  414bba:	add    BYTE PTR [r8],al
  414bbd:	add    BYTE PTR [rax],al
  414bbf:	add    al,dh
  414bc1:	rex.X
  414bc2:	add    BYTE PTR [r8],al
  414bc5:	add    BYTE PTR [rax],al
  414bc7:	add    bl,dh
  414bc9:	rex.X
  414bca:	add    BYTE PTR [r8],al
  414bcd:	add    BYTE PTR [rax],al
  414bcf:	add    BYTE PTR [rax],al
  414bd1:	rex.XB
  414bd2:	add    BYTE PTR [r8],al
  414bd5:	add    BYTE PTR [rax],al
  414bd7:	add    BYTE PTR [rbx],al
  414bd9:	rex.XB
  414bda:	add    BYTE PTR [r8],al
  414bdd:	add    BYTE PTR [rax],al
  414bdf:	add    BYTE PTR [rdx],cl
  414be1:	rex.XB
  414be2:	add    BYTE PTR [r8],al
  414be5:	add    BYTE PTR [rax],al
  414be7:	add    BYTE PTR [rip+0x4143],cl        # 0x418d30
  414bed:	add    BYTE PTR [rax],al
  414bef:	add    BYTE PTR [rdi],dl
  414bf1:	rex.XB
  414bf2:	add    BYTE PTR [r8],al
  414bf5:	add    BYTE PTR [rax],al
  414bf7:	add    BYTE PTR [rdx],bl
  414bf9:	rex.XB
  414bfa:	add    BYTE PTR [r8],al
  414bfd:	add    BYTE PTR [rax],al
  414bff:	add    BYTE PTR [rbx],ah
  414c01:	rex.XB
  414c02:	add    BYTE PTR [r8],al
  414c05:	add    BYTE PTR [rax],al
  414c07:	add    BYTE PTR [rsi],ah
  414c09:	rex.XB
  414c0a:	add    BYTE PTR [r8],al
  414c0d:	add    BYTE PTR [rax],al
  414c0f:	add    BYTE PTR [rip+0x4143],ch        # 0x418d58
  414c15:	add    BYTE PTR [rax],al
  414c17:	add    BYTE PTR [rax],dh
  414c19:	rex.XB
  414c1a:	add    BYTE PTR [r8],al
  414c1d:	add    BYTE PTR [rax],al
  414c1f:	add    BYTE PTR [rax],bh
  414c21:	rex.XB
  414c22:	add    BYTE PTR [r8],al
  414c25:	add    BYTE PTR [rax],al
  414c27:	add    BYTE PTR [rbx],bh
  414c29:	rex.XB
  414c2a:	add    BYTE PTR [r8],al
  414c2d:	add    BYTE PTR [rax],al
  414c2f:	add    BYTE PTR [rbx+0x43],al
  414c32:	add    BYTE PTR [r8],al
  414c35:	add    BYTE PTR [rax],al
  414c37:	add    BYTE PTR [rsi+0x43],al
  414c3a:	add    BYTE PTR [r8],al
  414c3d:	add    BYTE PTR [rax],al
  414c3f:	add    BYTE PTR [rdi+0x43],cl
  414c42:	add    BYTE PTR [r8],al
  414c45:	add    BYTE PTR [rax],al
  414c47:	add    BYTE PTR [rdx+0x43],dl
  414c4a:	add    BYTE PTR [r8],al
  414c4d:	add    BYTE PTR [rax],al
  414c4f:	add    BYTE PTR [rsi+0x43],bl
  414c52:	add    BYTE PTR [r8],al
  414c55:	add    BYTE PTR [rax],al
  414c57:	add    BYTE PTR [rcx+0x43],ah
  414c5a:	add    BYTE PTR [r8],al
  414c5d:	add    BYTE PTR [rax],al
  414c5f:	add    BYTE PTR [rdi+0x43],ah
  414c62:	add    BYTE PTR [r8],al
  414c65:	add    BYTE PTR [rax],al
  414c67:	add    BYTE PTR [rdx+0x43],ch
  414c6a:	add    BYTE PTR [r8],al
  414c6d:	add    BYTE PTR [rax],al
  414c6f:	add    BYTE PTR [rbx+0x43],dh
  414c72:	add    BYTE PTR [r8],al
  414c75:	add    BYTE PTR [rax],al
  414c77:	add    BYTE PTR [rsi+0x43],dh
  414c7a:	add    BYTE PTR [r8],al
  414c7d:	add    BYTE PTR [rax],al
  414c7f:	add    BYTE PTR [rcx+0x4143],al
  414c85:	add    BYTE PTR [rax],al
  414c87:	add    BYTE PTR [rbx+rax*2+0x41],al
  414c8e:	add    BYTE PTR [rax],al
  414c90:	xchg   ecx,eax
  414c91:	rex.XB
  414c92:	add    BYTE PTR [r8],al
  414c95:	add    BYTE PTR [rax],al
  414c97:	add    BYTE PTR [rbx+rax*2+0x41],dl
  414c9e:	add    BYTE PTR [rax],al
  414ca0:	pushf  
  414ca1:	rex.XB
  414ca2:	add    BYTE PTR [r8],al
  414ca5:	add    BYTE PTR [rax],al
  414ca7:	add    BYTE PTR [rdi+0x4143],bl
  414cad:	add    BYTE PTR [rax],al
  414caf:	add    BYTE PTR [rsi+0x4143],ah
  414cb5:	add    BYTE PTR [rax],al
  414cb7:	add    BYTE PTR [rcx+0x4143],ch
  414cbd:	add    BYTE PTR [rax],al
  414cbf:	add    BYTE PTR [rbp+0x4143],bh
  414cc5:	add    BYTE PTR [rax],al
  414cc7:	add    al,al
  414cc9:	rex.XB
  414cca:	add    BYTE PTR [r8],al
  414ccd:	add    BYTE PTR [rax],al
  414ccf:	add    bh,al
  414cd1:	rex.XB
  414cd2:	add    BYTE PTR [r8],al
  414cd5:	add    BYTE PTR [rax],al
  414cd7:	add    dl,cl
  414cd9:	rex.XB
  414cda:	add    BYTE PTR [r8],al
  414cdd:	add    BYTE PTR [rax],al
  414cdf:	add    bl,dl
  414ce1:	rex.XB
  414ce2:	add    BYTE PTR [r8],al
  414ce5:	add    BYTE PTR [rax],al
  414ce7:	add    dh,dl
  414ce9:	rex.XB
  414cea:	add    BYTE PTR [r8],al
  414ced:	add    BYTE PTR [rax],al
  414cef:	add    dh,bl
  414cf1:	rex.XB
  414cf2:	add    BYTE PTR [r8],al
  414cf5:	add    BYTE PTR [rax],al
  414cf7:	add    cl,ah
  414cf9:	rex.XB
  414cfa:	add    BYTE PTR [r8],al
  414cfd:	add    BYTE PTR [rax],al
  414cff:	add    bh,ch
  414d01:	rex.XB
  414d02:	add    BYTE PTR [r8],al
  414d05:	add    BYTE PTR [rax],al
  414d07:	add    dl,dh
  414d09:	rex.XB
  414d0a:	add    BYTE PTR [r8],al
  414d0d:	add    BYTE PTR [rax],al
  414d0f:	add    dl,bh
  414d11:	rex.XB
  414d12:	add    BYTE PTR [r8],al
  414d15:	add    BYTE PTR [rax],al
  414d17:	add    ch,bh
  414d19:	rex.XB
  414d1a:	add    BYTE PTR [r8],al
  414d1d:	add    BYTE PTR [rax],al
  414d1f:	add    BYTE PTR [rip+0x4144],al        # 0x418e69
  414d25:	add    BYTE PTR [rax],al
  414d27:	add    BYTE PTR [rax],cl
  414d29:	rex.R
  414d2a:	add    BYTE PTR [r8],al
  414d2d:	add    BYTE PTR [rax],al
  414d2f:	add    BYTE PTR [rdx],dl
  414d31:	rex.R
  414d32:	add    BYTE PTR [r8],al
  414d35:	add    BYTE PTR [rax],al
  414d37:	add    BYTE PTR [rip+0x4144],dl        # 0x418e81
  414d3d:	add    BYTE PTR [rax],al
  414d3f:	add    BYTE PTR [rsi],bl
  414d41:	rex.R
  414d42:	add    BYTE PTR [r8],al
  414d45:	add    BYTE PTR [rax],al
  414d47:	add    BYTE PTR [rcx],ah
  414d49:	rex.R
  414d4a:	add    BYTE PTR [r8],al
  414d4d:	add    BYTE PTR [rax],al
  414d4f:	add    BYTE PTR [rdi],ah
  414d51:	rex.R
  414d52:	add    BYTE PTR [r8],al
  414d55:	add    BYTE PTR [rax],al
  414d57:	add    BYTE PTR [rdx],ch
  414d59:	rex.R
  414d5a:	add    BYTE PTR [r8],al
  414d5d:	add    BYTE PTR [rax],al
  414d5f:	add    BYTE PTR [rdi],dh
  414d61:	rex.R
  414d62:	add    BYTE PTR [r8],al
  414d65:	add    BYTE PTR [rax],al
  414d67:	add    BYTE PTR [rdx],bh
  414d69:	rex.R
  414d6a:	add    BYTE PTR [r8],al
  414d6d:	add    BYTE PTR [rax],al
  414d6f:	add    BYTE PTR [rcx+0x66],ah
  414d72:	add    BYTE PTR [rcx+0x66],al
  414d75:	jb     0x414de0
  414d77:	imul   esp,DWORD PTR [rcx+0x61],0x6e
  414d7b:	jae    0x414d7d
  414d7d:	(bad)  
  414d7e:	ins    DWORD PTR es:[rdi],dx
  414d7f:	add    BYTE PTR [rcx+0x6d],al
  414d82:	push   0x63697261
  414d87:	add    BYTE PTR [rcx+0x72],ah
  414d8a:	add    BYTE PTR [rcx+0x72],al
  414d8d:	(bad)  
  414d8e:	(bad)  
  414d8f:	imul   esp,DWORD PTR [rbx+0x0],0x6e7261
  414d96:	rex.WRB (bad) 
  414d98:	jo     0x414e0f
  414d9a:	fs jne 0x414e0b
  414d9d:	addr32 jne 0x414e0e
  414da0:	add    BYTE PTR [rcx+0x73],ah
  414da3:	add    BYTE PTR [rcx+0x73],al
  414da6:	jae    0x414e09
  414da8:	ins    DWORD PTR es:[rdi],dx
  414da9:	gs jae 0x414e11
  414dac:	add    BYTE PTR [rcx+0x7a],ah
  414daf:	rex movsxd edi,DWORD PTR [rcx+0x72]
  414db3:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x7a410063
  414dbb:	gs jb  0x414e27
  414dbe:	and    BYTE PTR [rax],ch
  414dc0:	rex.XB jns 0x414e35
  414dc3:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x61002963
  414dcb:	jp     0x414e0d
  414dcd:	ins    BYTE PTR es:[rdi],dx
  414dce:	(bad)  
  414dcf:	je     0x414e3a
  414dd1:	outs   dx,BYTE PTR ds:[rsi]
  414dd2:	add    BYTE PTR [rcx+0x7a],al
  414dd5:	gs jb  0x414e41
  414dd8:	and    BYTE PTR [rax],ch
  414dda:	rex.WR (bad) 
  414ddc:	je     0x414e47
  414dde:	outs   dx,BYTE PTR ds:[rsi]
  414ddf:	sub    DWORD PTR [rax],eax
  414de1:	(bad)  
  414de3:	add    BYTE PTR [rdx+0x61],al
  414de6:	jae    0x414e50
  414de8:	imul   ebp,DWORD PTR [rcx+0x72],0x0
  414dec:	(bad)  
  414ded:	add    BYTE PTR gs:[rdx+0x65],al
  414df1:	ins    BYTE PTR es:[rdi],dx
  414df2:	(bad)  
  414df3:	jb     0x414e6a
  414df5:	jae    0x414e60
  414df7:	(bad)  
  414df8:	outs   dx,BYTE PTR ds:[rsi]
  414df9:	add    BYTE PTR [rdx+0x65],ah
  414dfc:	jb     0x414dfe
  414dfe:	push   rsp
  414dff:	(bad)  
  414e00:	ins    DWORD PTR es:[rdi],dx
  414e01:	(bad)  
  414e02:	jp     0x414e6d
  414e04:	addr32 push 0x65620074
  414e0a:	jb     0x414e4c
  414e0c:	(bad)  
  414e0d:	jb     0x414e70
  414e0f:	(bad)  
  414e10:	imul   esp,DWORD PTR [rbx+0x0],0x616d6154
  414e17:	jp     0x414e82
  414e19:	addr32 push 0x41282074
  414e1f:	jb     0x414e82
  414e21:	(bad)  
  414e22:	imul   esp,DWORD PTR [rbx+0x29],0x72656200
  414e29:	rex ins BYTE PTR es:[rdi],dx
  414e2b:	(bad)  
  414e2c:	je     0x414e97
  414e2e:	outs   dx,BYTE PTR ds:[rsi]
  414e2f:	add    BYTE PTR [rcx+riz*2+0x6d],dl
  414e33:	(bad)  
  414e34:	jp     0x414e9f
  414e36:	addr32 push 0x4c282074
  414e3c:	(bad)  
  414e3d:	je     0x414ea8
  414e3f:	outs   dx,BYTE PTR ds:[rsi]
  414e40:	sub    DWORD PTR [rax],eax
  414e42:	(bad)  
  414e43:	add    BYTE PTR [edx+0x75],al
  414e47:	ins    BYTE PTR es:[rdi],dx
  414e48:	addr32 (bad) 
  414e4a:	jb     0x414eb5
  414e4c:	(bad)  
  414e4d:	outs   dx,BYTE PTR ds:[rsi]
  414e4e:	add    BYTE PTR [rdx+0x69],ah
  414e51:	outs   dx,BYTE PTR ds:[rsi]
  414e52:	add    BYTE PTR [rbp+0x64],al
  414e55:	outs   dx,DWORD PTR ds:[rsi]
  414e56:	add    BYTE PTR [rdx+0x6e],ah
  414e59:	add    BYTE PTR [rdx+0x65],al
  414e5c:	outs   dx,BYTE PTR ds:[rsi]
  414e5d:	addr32 (bad) 
  414e5f:	ins    BYTE PTR es:[rdi],dx
  414e60:	imul   eax,DWORD PTR [rax],0x425f6e62
  414e66:	add    BYTE PTR [rdx+0x65],r8b
  414e6a:	outs   dx,BYTE PTR ds:[rsi]
  414e6b:	addr32 (bad) 
  414e6d:	ins    BYTE PTR es:[rdi],dx
  414e6e:	imul   esp,DWORD PTR [rax],0x6e614228
  414e74:	ins    BYTE PTR es:[edi],dx
  414e76:	(bad)  
  414e77:	fs gs jae 0x414ee3
  414e7b:	sub    DWORD PTR [rax],eax
  414e7d:	(bad)  
  414e7e:	outs   dx,BYTE PTR ds:[rsi]
  414e7f:	pop    rdi
  414e80:	rex.WB
  414e81:	rex.WRX add BYTE PTR [rdx+0x65],r8b
  414e85:	outs   dx,BYTE PTR ds:[rsi]
  414e86:	addr32 (bad) 
  414e88:	ins    BYTE PTR es:[rdi],dx
  414e89:	imul   esp,DWORD PTR [rax],0x646e4928
  414e8f:	imul   esp,DWORD PTR [rcx+0x29],0x746e6200
  414e96:	add    BYTE PTR [rbx+0x75],dl
  414e99:	je     0x414f10
  414e9b:	add    BYTE PTR [rdx+0x6f],ah
  414e9e:	add    BYTE PTR [rcx+rbp*2+0x62],dl
  414ea2:	gs je  0x414f06
  414ea5:	outs   dx,BYTE PTR ds:[rsi]
  414ea6:	add    BYTE PTR [rdx+0x72],ah
  414ea9:	add    BYTE PTR [rdx+0x72],al
  414eac:	gs je  0x414f1e
  414eaf:	outs   dx,BYTE PTR ds:[rsi]
  414eb0:	add    BYTE PTR [rdx+0x73],ah
  414eb3:	add    BYTE PTR [rdx+0x53],al
  414eb6:	rex.X add BYTE PTR [rdx+0x73],spl
  414eba:	rex movsxd edi,DWORD PTR [rcx+0x72]
  414ebe:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x53420063
  414ec6:	rex.XB add BYTE PTR [r11+0x61],spl
  414eca:	add    BYTE PTR [rbx+0x61],al
  414ecd:	je     0x414f30
  414ecf:	ins    BYTE PTR es:[rdi],dx
  414ed0:	(bad)  
  414ed1:	outs   dx,BYTE PTR ds:[rsi]
  414ed2:	add    BYTE PTR [rbx+0x68],ah
  414ed5:	jb     0x414ed7
  414ed7:	rex.XB push 0x6b6f7265
  414edd:	gs add BYTE PTR gs:[rbx+0x6f],ah
  414ee2:	add    BYTE PTR [rbx+0x6f],al
  414ee5:	jb     0x414f5a
  414ee7:	imul   esp,DWORD PTR [rbx+0x61],0x7063006e
  414eee:	add    BYTE PTR gs:[rax+0x61],cl
  414ef2:	ja     0x414f55
  414ef4:	imul   ebp,DWORD PTR [rcx+0x61],0x7363006e
  414efb:	add    BYTE PTR [rbx+0x7a],al
  414efe:	movsxd ebp,DWORD PTR gs:[rax+0x0]
  414f02:	movsxd edi,DWORD PTR [rcx+0x0]
  414f05:	push   rdi
  414f06:	gs ins BYTE PTR es:[rdi],dx
  414f08:	jae    0x414f72
  414f0a:	add    BYTE PTR [rcx+riz*2+0x0],ah
  414f0e:	rex.R (bad) 
  414f10:	outs   dx,BYTE PTR ds:[rsi]
  414f11:	imul   esi,DWORD PTR [rbx+0x68],0x656400
  414f18:	rex.RXB
  414f19:	gs jb  0x414f89
  414f1c:	(bad)  
  414f1d:	outs   dx,BYTE PTR ds:[rsi]
  414f1e:	add    BYTE PTR [rbx+rsi*2+0x62],ah
  414f22:	add    BYTE PTR [rdi+rbp*2+0x77],cl
  414f26:	gs jb  0x414f49
  414f29:	push   rbx
  414f2a:	outs   dx,DWORD PTR ds:[rsi]
  414f2b:	jb     0x414f8f
  414f2d:	imul   esp,DWORD PTR [rcx+0x6e],0x766400
  414f34:	imul   r14d,DWORD PTR [rsi+0x65],0x65006968
  414f3c:	ins    BYTE PTR es:[rdi],dx
  414f3d:	add    BYTE PTR [rdi+0x72],al
  414f40:	gs imul eax,DWORD PTR gs:[rax],0x65
  414f45:	outs   dx,BYTE PTR ds:[rsi]
  414f46:	add    BYTE PTR [rbp+0x6e],al
  414f49:	ins    BYTE PTR es:[edi],dx
  414f4b:	imul   esi,DWORD PTR [rbx+0x68],0x736500
  414f52:	push   rbx
  414f53:	jo     0x414fb6
  414f55:	outs   dx,BYTE PTR ds:[rsi]
  414f56:	imul   esi,DWORD PTR [rbx+0x68],0x746500
  414f5d:	rex.RB jae 0x414fd4
  414f60:	outs   dx,DWORD PTR ds:[rsi]
  414f61:	outs   dx,BYTE PTR ds:[rsi]
  414f62:	imul   esp,DWORD PTR [rcx+0x6e],0x756500
  414f69:	rex.X (bad) 
  414f6b:	jae    0x414fde
  414f6d:	jne    0x414fd4
  414f6f:	add    BYTE PTR [rsi+0x61],ah
  414f72:	add    BYTE PTR [rsi+0x61],al
  414f75:	jb     0x414fea
  414f77:	imul   eax,DWORD PTR [rax],0x46006666
  414f7d:	jne    0x414feb
  414f7f:	data16 jne 0x414fee
  414f82:	fs add BYTE PTR gs:[rsi+0x69],ah
  414f87:	add    BYTE PTR [rsi+0x69],al
  414f8a:	outs   dx,BYTE PTR ds:[rsi]
  414f8b:	outs   dx,BYTE PTR ds:[rsi]
  414f8c:	imul   esi,DWORD PTR [rbx+0x68],0x6f6600
  414f93:	rex.RX (bad) 
  414f95:	jb     0x415006
  414f97:	gs jae 0x414fff
  414f9a:	add    BYTE PTR [rsi+0x72],ah
  414f9d:	add    BYTE PTR [rsi+0x72],al
  414fa0:	outs   dx,BYTE PTR gs:[rsi]
  414fa2:	movsxd ebp,DWORD PTR [rax+0x0]
  414fa5:	data16 jns 0x414fa8
  414fa8:	rex.RX jb 0x415014
  414fab:	jae    0x415016
  414fad:	(bad)  
  414fae:	outs   dx,BYTE PTR ds:[rsi]
  414faf:	add    BYTE PTR [rdi+0x61],ah
  414fb2:	add    BYTE PTR [rcx+0x52],cl
  414fb5:	add    BYTE PTR [r15+0x64],r12b
  414fb9:	add    BYTE PTR [rdi+0x61],al
  414fbc:	gs ins BYTE PTR es:[rdi],dx
  414fbe:	imul   esp,DWORD PTR [rbx+0x20],0x6f635328
  414fc5:	je     0x415033
  414fc7:	(bad)  
  414fc8:	outs   dx,BYTE PTR ds:[rsi]
  414fc9:	sub    DWORD PTR fs:[rax],eax
  414fcc:	push   rbx
  414fcd:	movsxd ebp,DWORD PTR [rdi+0x74]
  414fd0:	je     0x41503b
  414fd2:	jae    0x41503c
  414fd4:	and    BYTE PTR [rdi+0x61],al
  414fd7:	gs ins BYTE PTR es:[rdi],dx
  414fd9:	imul   esp,DWORD PTR [rbx+0x0],0x47006c67
  414fe0:	(bad)  
  414fe1:	ins    BYTE PTR es:[rdi],dx
  414fe2:	imul   esp,DWORD PTR [rbx+0x69],0x67006e61
  414fe9:	outs   dx,BYTE PTR ds:[rsi]
  414fea:	add    BYTE PTR [rdi+0x75],al
  414fed:	(bad)  
  414fee:	jb     0x415051
  414ff0:	outs   dx,BYTE PTR ds:[rsi]
  414ff1:	imul   eax,DWORD PTR [rax],0x777367
  414ff7:	rex.B ins BYTE PTR es:[rdi],dx
  414ff9:	jae    0x41505c
  414ffb:	je     0x415066
  414ffd:	(bad)  
  414ffe:	outs   dx,BYTE PTR ds:[rsi]
  414fff:	add    BYTE PTR [rdi+0x75],ah
  415002:	add    BYTE PTR [rdi+0x75],al
  415005:	push   0x61
  415007:	jb     0x41506a
  415009:	je     0x415074
  41500b:	add    BYTE PTR [rax+0x61],ch
  41500e:	add    BYTE PTR [rax+0x61],cl
  415011:	jne    0x415086
  415013:	(bad)  
  415014:	add    BYTE PTR [rax+0x65],ch
  415017:	add    BYTE PTR [rax+0x65],cl
  41501a:	(bad)
  41501f:	push   0x69480069
  415024:	outs   dx,BYTE PTR ds:[rsi]
  415025:	imul   eax,DWORD PTR fs:[rax],0x43007268
  41502c:	jb     0x41509d
  41502e:	(bad)  
  41502f:	je     0x41509a
  415031:	(bad)  
  415032:	outs   dx,BYTE PTR ds:[rsi]
  415033:	add    BYTE PTR [rax+0x73],ch
  415036:	(bad)  
  415037:	add    BYTE PTR [rbp+0x70],dl
  41503a:	jo     0x4150a1
  41503c:	jb     0x41505e
  41503e:	push   rbx
  41503f:	outs   dx,DWORD PTR ds:[rsi]
  415040:	jb     0x4150a4
  415042:	imul   esp,DWORD PTR [rcx+0x6e],0x756800
  415049:	rex.W jne 0x4150ba
  41504c:	addr32 (bad) 
  41504e:	jb     0x4150b9
  415050:	(bad)  
  415051:	outs   dx,BYTE PTR ds:[rsi]
  415052:	add    BYTE PTR [rax+0x79],ch
  415055:	add    BYTE PTR [rcx+0x72],al
  415058:	ins    DWORD PTR es:[rdi],dx
  415059:	outs   dx,BYTE PTR gs:[rsi]
  41505b:	imul   esp,DWORD PTR [rcx+0x6e],0x646900
  415062:	rex.WB outs dx,BYTE PTR ds:[rsi]
  415064:	outs   dx,DWORD PTR fs:[rsi]
  415066:	outs   dx,BYTE PTR ds:[rsi]
  415067:	gs jae 0x4150d3
  41506a:	(bad)  
  41506b:	outs   dx,BYTE PTR ds:[rsi]
  41506c:	add    BYTE PTR [rcx+0x67],ch
  41506f:	add    BYTE PTR [rcx+0x67],cl
  415072:	(bad)  
  415073:	outs   dx,DWORD PTR ds:[rsi]
  415074:	add    BYTE PTR [rcx+0x69],ch
  415077:	add    BYTE PTR [rcx+0x69],bl
  41507a:	add    BYTE PTR [rcx+0x73],ch
  41507d:	add    BYTE PTR [rcx+0x63],cl
  415080:	gs ins BYTE PTR es:[rdi],dx
  415082:	(bad)  
  415083:	outs   dx,BYTE PTR ds:[rsi]
  415084:	imul   esp,DWORD PTR fs:[rbx+0x0],0x49007469
  41508c:	je     0x4150ef
  41508e:	ins    BYTE PTR es:[rdi],dx
  41508f:	imul   esp,DWORD PTR [rcx+0x6e],0x756900
  415096:	rex.WB push r13
  415098:	rex.WXB add BYTE PTR [r10+0x61],bpl
  41509c:	add    BYTE PTR [rdx+0x61],cl
  41509f:	jo     0x415102
  4150a1:	outs   dx,BYTE PTR ds:[rsi]
  4150a2:	gs jae 0x41510a
  4150a5:	add    BYTE PTR [rbx+0x61],ch
  4150a8:	add    BYTE PTR [rdi+0x65],al
  4150ab:	outs   dx,DWORD PTR ds:[rsi]
  4150ac:	jb     0x415115
  4150ae:	imul   esp,DWORD PTR [rcx+0x6e],0x6b6b00
  4150b5:	rex.WXB (bad) 
  4150b7:	jp     0x41511a
  4150b9:	imul   ebp,DWORD PTR [rax+0x0],0x6b
  4150bd:	ins    BYTE PTR es:[rdi],dx
  4150be:	add    BYTE PTR [rdi+0x72],al
  4150c1:	gs outs dx,BYTE PTR gs:[rsi]
  4150c4:	ins    BYTE PTR es:[rdi],dx
  4150c5:	(bad)  
  4150c6:	outs   dx,BYTE PTR ds:[rsi]
  4150c7:	imul   esp,DWORD PTR fs:[rbx+0x0],0x43006d6b
  4150cf:	(bad)  
  4150d0:	ins    DWORD PTR es:[rdi],dx
  4150d1:	(bad)  
  4150d2:	outs   dx,DWORD PTR ds:[rsi]
  4150d3:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x6d684b00
  4150db:	gs jb  0x4150de
  4150de:	imul   ebp,DWORD PTR [rsi+0x0],0x4b
  4150e2:	(bad)  
  4150e3:	outs   dx,BYTE PTR ds:[rsi]
  4150e4:	outs   dx,BYTE PTR ds:[rsi]
  4150e5:	(bad)  
  4150e6:	fs (bad) 
  4150e8:	add    BYTE PTR [rbx+0x6f],ch
  4150eb:	add    BYTE PTR [rbx+0x6f],cl
  4150ee:	jb     0x415155
  4150f0:	(bad)  
  4150f1:	outs   dx,BYTE PTR ds:[rsi]
  4150f2:	add    BYTE PTR [rbx+0x6f],ch
  4150f5:	imul   eax,DWORD PTR [rax],0x4b
  4150f8:	outs   dx,DWORD PTR ds:[rsi]
  4150f9:	outs   dx,BYTE PTR ds:[rsi]
  4150fa:	imul   esp,DWORD PTR [rcx+0x6e],0x69
  4150fe:	add    BYTE PTR [rbx+0x72],ch
  415101:	add    BYTE PTR [rbx+0x61],cl
  415104:	outs   dx,BYTE PTR ds:[rsi]
  415105:	jne    0x415179
  415107:	imul   eax,DWORD PTR [rax],0x4b00736b
  41510d:	(bad)  
  41510e:	jae    0x415178
  415110:	ins    DWORD PTR es:[rdi],dx
  415111:	imul   esi,DWORD PTR [rdx+0x69],0x5f736b00
  415118:	rex.WB
  415119:	rex.WRX add BYTE PTR [rbx+0x61],r9b
  41511d:	jae    0x415187
  41511f:	ins    DWORD PTR es:[rdi],dx
  415120:	imul   esi,DWORD PTR [rdx+0x69],0x646e495f
  415127:	imul   esp,DWORD PTR [rcx+0x0],0x505f736b
  41512e:	rex.WXB add BYTE PTR [r11+0x61],cl
  415132:	jae    0x41519c
  415134:	ins    DWORD PTR es:[rdi],dx
  415135:	imul   esi,DWORD PTR [rdx+0x69],0x72412820
  41513c:	(bad)  
  41513d:	(bad)  
  41513e:	imul   esp,DWORD PTR [rbx+0x29],0x6b61505f
  415145:	imul   esi,DWORD PTR [rbx+0x74],0x6b006e61
  41514c:	jns    0x41514e
  41514e:	rex.WXB jns 0x4151c3
  415151:	addr32 jns 0x4151ce
  415154:	add    BYTE PTR [rcx+riz*2+0x0],ch
  415158:	rex.WR (bad) 
  41515a:	je     0x4151c5
  41515c:	outs   dx,BYTE PTR ds:[rsi]
  41515d:	add    BYTE PTR [rdx+riz*2+0x0],ch
  415161:	rex.WR jne 0x4151dc
  415164:	gs ins DWORD PTR es:[rdi],dx
  415166:	(bad)  
  415167:	outs   dx,DWORD PTR ds:[rsi]
  415168:	jne    0x4151dc
  41516a:	imul   esi,DWORD PTR [ebx+0x68],0x6f6c00
  415172:	rex.WR (bad) 
  415174:	outs   dx,DWORD PTR ds:[rsi]
  415175:	add    BYTE PTR [rsp+rsi*2+0x0],ch
  415179:	imul   r14,QWORD PTR [rax+rbp*2+0x75],0x61696e61
  415182:	outs   dx,BYTE PTR ds:[rsi]
  415183:	add    BYTE PTR [rsi+rsi*2+0x0],ch
  415187:	rex.WR (bad) 
  415189:	je     0x415201
  41518b:	imul   esp,DWORD PTR [rcx+0x6e],0x696d00
  415192:	rex.WRB (bad) 
  415194:	outs   dx,DWORD PTR ds:[rsi]
  415195:	jb     0x415200
  415197:	add    BYTE PTR [rbp+0x6b],ch
  41519a:	add    BYTE PTR [rsi+0x59],al
  41519d:	push   rdx
  41519e:	rex.WRXB and BYTE PTR [r13+0x61],r9b
  4151a2:	movsxd esp,DWORD PTR [rbp+0x64]
  4151a5:	outs   dx,DWORD PTR ds:[rsi]
  4151a6:	outs   dx,BYTE PTR ds:[rsi]
  4151a7:	imul   esp,DWORD PTR [rcx+0x6e],0x63614d00
  4151ae:	gs outs dx,DWORD PTR fs:[rsi]
  4151b1:	outs   dx,BYTE PTR ds:[rsi]
  4151b2:	imul   esp,DWORD PTR [rcx+0x6e],0x6c6d00
  4151b9:	rex.WRB (bad) 
  4151bb:	ins    BYTE PTR es:[rdi],dx
  4151bc:	(bad)  
  4151bd:	jns    0x415220
  4151bf:	ins    BYTE PTR es:[rdi],dx
  4151c0:	(bad)  
  4151c1:	ins    DWORD PTR es:[rdi],dx
  4151c2:	add    BYTE PTR [rbp+0x6e],ch
  4151c5:	add    BYTE PTR [rbp+0x6f],cl
  4151c8:	outs   dx,BYTE PTR ds:[rsi]
  4151c9:	outs   dx,DWORD PTR ds:[esi]
  4151cb:	ins    BYTE PTR es:[rdi],dx
  4151cc:	imul   esp,DWORD PTR [rcx+0x6e],0x696e6d00
  4151d3:	add    BYTE PTR [rbp+0x61],cl
  4151d6:	outs   dx,BYTE PTR ds:[rsi]
  4151d7:	imul   esi,DWORD PTR [rax+0x75],0x6d006972
  4151de:	outs   dx,DWORD PTR ds:[rsi]
  4151df:	push   0x686f4d00
  4151e4:	(bad)  
  4151e5:	ja     0x415252
  4151e7:	add    BYTE PTR [rbp+0x72],ch
  4151ea:	add    BYTE PTR [rbp+0x61],cl
  4151ed:	jb     0x415250
  4151ef:	je     0x415259
  4151f1:	imul   eax,DWORD PTR [rax],0x4d00736d
  4151f7:	(bad)  
  4151f8:	ins    BYTE PTR es:[rdi],dx
  4151f9:	(bad)  
  4151fa:	jns    0x4151fc
  4151fc:	ins    DWORD PTR es:[rdi],dx
  4151fd:	je     0x4151ff
  4151ff:	rex.WRB (bad) 
  415201:	ins    BYTE PTR es:[rdi],dx
  415202:	je     0x415269
  415204:	jae    0x41526b
  415206:	add    BYTE PTR [rbp+0x79],ch
  415209:	add    BYTE PTR [rdx+0x75],al
  41520c:	jb     0x41527b
  41520e:	gs jae 0x415276
  415211:	add    BYTE PTR [rsi+0x62],ch
  415214:	add    BYTE PTR [rsi+0x4f],cl
  415217:	push   rdx
  415218:	add    BYTE PTR [rsi+0x65],ch
  41521b:	add    BYTE PTR [rsi+0x65],cl
  41521e:	jo     0x415281
  415220:	ins    BYTE PTR es:[rdi],dx
  415221:	imul   eax,DWORD PTR [rax],0x63696e
  415227:	rex.WB (bad) 
  415229:	imul   esp,DWORD PTR [rdx+0x69],0x6c6e006f
  415230:	add    BYTE PTR [rbp+rsi*2+0x74],al
  415234:	movsxd ebp,DWORD PTR [rax+0x0]
  415237:	outs   dx,BYTE PTR ds:[rsi]
  415238:	outs   dx,BYTE PTR ds:[rsi]
  415239:	add    BYTE PTR [rsi+0x4f],cl
  41523c:	rex.WRX add BYTE PTR [rsi+0x6f],r13b
  415240:	add    BYTE PTR [rsi+0x6f],cl
  415243:	jb     0x4152bc
  415245:	imul   esp,DWORD PTR gs:[ecx+0x6e],0x6f736e00
  41524e:	add    BYTE PTR [rsi+0x6f],cl
  415251:	jb     0x4152c7
  415253:	push   0x206e7265
  415258:	push   rbx
  415259:	outs   dx,DWORD PTR ds:[rsi]
  41525a:	je     0x4152c4
  41525c:	outs   dx,DWORD PTR ds:[rsi]
  41525d:	add    BYTE PTR [rbx+0x65],dl
  415260:	jo     0x4152c7
  415262:	imul   eax,DWORD PTR fs:[rax],0x4f00636f
  415269:	movsxd esp,DWORD PTR [rbx+0x69]
  41526c:	je     0x4152cf
  41526e:	outs   dx,BYTE PTR ds:[rsi]
  41526f:	add    BYTE PTR [rdi+0x6d],ch
  415272:	add    BYTE PTR [rdi+0x72],cl
  415275:	outs   dx,DWORD PTR ds:[rsi]
  415276:	ins    DWORD PTR es:[rdi],dx
  415277:	outs   dx,DWORD PTR ds:[rsi]
  415278:	add    BYTE PTR [rdi+0x72],ch
  41527b:	add    BYTE PTR [rdi+0x72],cl
  41527e:	imul   edi,DWORD PTR [rcx+0x61],0x617000
  415285:	push   rax
  415286:	jne    0x4152f6
  415288:	push   0x61
  41528a:	(bad)  
  41528b:	imul   eax,DWORD PTR [rax],0x706170
  415291:	push   rax
  415292:	(bad)  
  415293:	jo     0x4152fe
  415295:	(bad)  
  415296:	ins    DWORD PTR es:[rdi],dx
  415297:	outs   dx,BYTE PTR gs:[rsi]
  415299:	je     0x415310
  41529b:	add    BYTE PTR [rax+0x6c],dh
  41529e:	add    BYTE PTR [rax+0x6f],dl
  4152a1:	ins    BYTE PTR es:[rdi],dx
  4152a2:	imul   esi,DWORD PTR [rbx+0x68],0x73727000
  4152a9:	add    BYTE PTR [rcx+riz*2+0x72],al
  4152ad:	imul   eax,DWORD PTR [rax],0x50007370
  4152b3:	(bad)  
  4152b4:	jae    0x41531e
  4152b6:	je     0x415327
  4152b8:	add    BYTE PTR [rax+0x74],dh
  4152bb:	add    BYTE PTR [rax+0x6f],dl
  4152be:	jb     0x415334
  4152c0:	jne    0x415329
  4152c2:	jne    0x415329
  4152c4:	jae    0x41532b
  4152c6:	add    BYTE PTR [rcx+0x75],dh
  4152c9:	add    BYTE PTR [rcx+0x75],dl
  4152cc:	movsxd ebp,DWORD PTR gs:[rax+0x75]
  4152d0:	(bad)  
  4152d1:	add    BYTE PTR [rcx+0x75],dh
  4152d4:	je     0x4152d6
  4152d6:	rex.WXB (bad) 
  4152d8:	imul   esp,DWORD PTR [rbx+0x68],0x72002765
  4152df:	ins    DWORD PTR es:[rdi],dx
  4152e0:	add    BYTE PTR [rdx+0x6f],dl
  4152e3:	ins    DWORD PTR es:[rdi],dx
  4152e4:	(bad)  
  4152e5:	outs   dx,BYTE PTR ds:[rsi]
  4152e6:	jae    0x415350
  4152e8:	add    BYTE PTR [rdx+0x6f],dh
  4152eb:	add    BYTE PTR [rdx+0x6f],dl
  4152ee:	ins    DWORD PTR es:[rdi],dx
  4152ef:	(bad)  
  4152f0:	outs   dx,BYTE PTR ds:[rsi]
  4152f1:	imul   esp,DWORD PTR [rcx+0x6e],0x757200
  4152f8:	push   rdx
  4152f9:	jne    0x41536e
  4152fb:	jae    0x415366
  4152fd:	(bad)  
  4152fe:	outs   dx,BYTE PTR ds:[rsi]
  4152ff:	add    BYTE PTR [rdx+0x77],dh
  415302:	add    BYTE PTR [rbx+0x69],cl
  415305:	outs   dx,BYTE PTR ds:[rsi]
  415306:	jns    0x415369
  415308:	jb     0x415381
  41530a:	(bad)  
  41530b:	outs   dx,BYTE PTR ds:[rsi]
  41530c:	fs (bad) 
  41530e:	add    BYTE PTR [rbx+0x61],dh
  415311:	add    BYTE PTR [rbx+0x61],dl
  415314:	outs   dx,BYTE PTR ds:[rsi]
  415315:	jae    0x415382
  415317:	jb     0x415382
  415319:	je     0x41531b
  41531b:	jae    0x41537e
  41531d:	push   0x6b615900
  415322:	jne    0x415398
  415324:	add    BYTE PTR [rbx+0x64],dh
  415327:	add    BYTE PTR [rbx+0x69],dl
  41532a:	outs   dx,BYTE PTR ds:[rsi]
  41532b:	fs push 0x65730069
  415331:	add    BYTE PTR [rbx+0x61],dl
  415334:	ins    DWORD PTR es:[rdi],dx
  415335:	imul   esp,DWORD PTR [rax],0x726f4e28
  41533b:	je     0x4153a5
  41533d:	gs jb  0x4153ae
  415340:	sub    DWORD PTR [rax],eax
  415342:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  415344:	jb     0x4153ba
  415346:	push   0x206e7265
  41534b:	push   rbx
  41534c:	(bad)  
  41534d:	ins    DWORD PTR es:[rdi],dx
  41534e:	imul   eax,DWORD PTR [rax],0x53006973
  415354:	imul   ebp,DWORD PTR [rsi+0x68],0x73656c61
  41535b:	add    BYTE PTR gs:[rbx+0x6b],dh
  41535f:	add    BYTE PTR [rbx+0x6c],dh
  415362:	add    BYTE PTR [rbx+0x6c],dl
  415365:	outs   dx,DWORD PTR ds:[rsi]
  415366:	jbe    0x4153cd
  415368:	outs   dx,BYTE PTR ds:[rsi]
  415369:	imul   esp,DWORD PTR [rcx+0x6e],0x616d7300
  415370:	add    BYTE PTR [rbx+0x61],dl
  415373:	ins    DWORD PTR es:[rdi],dx
  415374:	imul   esp,DWORD PTR [rax],0x756f5328
  41537a:	je     0x4153e4
  41537c:	gs jb  0x4153ed
  41537f:	sub    DWORD PTR [rax],eax
  415381:	push   rbx
  415382:	outs   dx,DWORD PTR ds:[rsi]
  415383:	jne    0x4153f9
  415385:	push   0x206e7265
  41538a:	push   rbx
  41538b:	(bad)  
  41538c:	ins    DWORD PTR es:[rdi],dx
  41538d:	imul   eax,DWORD PTR [rax],0x6a6d73
  415393:	push   rbx
  415394:	(bad)  
  415395:	ins    DWORD PTR es:[rdi],dx
  415396:	imul   esp,DWORD PTR [rax],0x6c754c28
  41539c:	sub    DWORD PTR gs:[rax],eax
  41539f:	rex.WR jne 0x41540e
  4153a2:	and    BYTE PTR gs:[rbx+0x61],dl
  4153a6:	ins    DWORD PTR es:[rdi],dx
  4153a7:	imul   eax,DWORD PTR [rax],0x6e6d73
  4153ad:	push   rbx
  4153ae:	(bad)  
  4153af:	ins    DWORD PTR es:[rdi],dx
  4153b0:	imul   esp,DWORD PTR [rax],0x616e4928
  4153b6:	jb     0x415421
  4153b8:	sub    DWORD PTR [rax],eax
  4153ba:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4153bc:	(bad)  
  4153bd:	jb     0x415428
  4153bf:	and    BYTE PTR [rbx+0x61],dl
  4153c2:	ins    DWORD PTR es:[rdi],dx
  4153c3:	imul   eax,DWORD PTR [rax],0x736d73
  4153c9:	push   rbx
  4153ca:	(bad)  
  4153cb:	ins    DWORD PTR es:[rdi],dx
  4153cc:	imul   esp,DWORD PTR [rax],0x6f6b5328
  4153d2:	ins    BYTE PTR es:[rdi],dx
  4153d3:	je     0x4153fe
  4153d5:	add    BYTE PTR [rbx+0x6b],dl
  4153d8:	outs   dx,DWORD PTR ds:[rsi]
  4153d9:	ins    BYTE PTR es:[rdi],dx
  4153da:	je     0x4153fc
  4153dc:	push   rbx
  4153dd:	(bad)  
  4153de:	ins    DWORD PTR es:[rdi],dx
  4153df:	imul   eax,DWORD PTR [rax],0x53006f73
  4153e5:	outs   dx,DWORD PTR ds:[rsi]
  4153e6:	ins    DWORD PTR es:[rdi],dx
  4153e7:	(bad)  
  4153e8:	ins    BYTE PTR es:[rdi],dx
  4153e9:	imul   eax,DWORD PTR [rax],0x41007173
  4153ef:	ins    BYTE PTR es:[rdi],dx
  4153f0:	(bad)
  4153f5:	outs   dx,BYTE PTR ds:[rsi]
  4153f6:	add    BYTE PTR [rbx+0x72],dh
  4153f9:	add    BYTE PTR [rbx+0x65],dl
  4153fc:	jb     0x415460
  4153fe:	imul   esp,DWORD PTR [rcx+0x6e],0x614c2820
  415405:	je     0x415470
  415407:	outs   dx,BYTE PTR ds:[rsi]
  415408:	sub    DWORD PTR [rax],eax
  41540a:	jae    0x41547e
  41540c:	rex movsxd edi,DWORD PTR [rcx+0x72]
  415410:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x52530063
  415418:	rex.X add BYTE PTR [rbx+0x77],sil
  41541c:	add    BYTE PTR [rbx+0x77],dl
  41541f:	(bad)  
  415420:	push   0x696c69
  415425:	jae    0x4154a0
  415427:	jb     0x415429
  415429:	push   rbx
  41542a:	jns    0x41549e
  41542c:	imul   esp,DWORD PTR [rcx+0x63],0x617400
  415433:	push   rsp
  415434:	(bad)  
  415435:	ins    DWORD PTR es:[rdi],dx
  415436:	imul   ebp,DWORD PTR [rax+rax*1+0x74],0x65540065
  41543e:	ins    BYTE PTR es:[rdi],dx
  41543f:	jne    0x4154a8
  415441:	jne    0x415443
  415443:	je     0x4154ac
  415445:	add    BYTE PTR [rcx+riz*2+0x6a],dl
  415449:	imul   ebp,DWORD PTR [rbx+0x0],0x54006874
  415450:	push   0x74006961
  415455:	imul   eax,DWORD PTR [rax],0x72676954
  41545b:	imul   ebp,DWORD PTR [rsi+0x79],0x6b740061
  415462:	add    BYTE PTR [rbp+rsi*2+0x72],dl
  415466:	imul   ebp,DWORD PTR [rbp+0x65],0x6e
  41546a:	add    BYTE PTR [rsp+rbp*2+0x0],dh
  41546e:	imul   r13d,DWORD PTR [rcx+r13*2+0x70],0x6f6e69
  415477:	je     0x4154e7
  415479:	add    BYTE PTR [rbx+rsi*2+0x77],dl
  41547d:	(bad)  
  41547e:	outs   dx,BYTE PTR ds:[rsi]
  41547f:	(bad)  
  415480:	add    BYTE PTR [rdx+rsi*2+0x0],dh
  415484:	push   rsp
  415485:	jne    0x4154f9
  415487:	imul   ebp,DWORD PTR [rcx+0x73],0x68
  41548b:	add    BYTE PTR [rbx+rsi*2+0x0],dh
  41548f:	push   rsp
  415490:	jae    0x415501
  415492:	outs   dx,BYTE PTR ds:[rsi]
  415493:	addr32 (bad) 
  415495:	add    BYTE PTR [rsp+rsi*2+0x0],dh
  415499:	push   rsp
  41549a:	(bad)  
  41549b:	je     0x4154fe
  41549d:	jb     0x41549f
  41549f:	jne    0x415508
  4154a1:	add    BYTE PTR [rbp+0x69],dl
  4154a4:	addr32 push 0x75007275
  4154aa:	imul   eax,DWORD PTR [rax],0x55
  4154ad:	imul   esi,DWORD PTR [rdx+0x61],0x69
  4154b1:	outs   dx,BYTE PTR ds:[rsi]
  4154b2:	imul   esp,DWORD PTR [rcx+0x6e],0x727500
  4154b9:	push   rbp
  4154ba:	jb     0x415520
  4154bc:	jne    0x4154be
  4154be:	jne    0x41553a
  4154c0:	add    BYTE PTR [rbp+0x7a],dl
  4154c3:	(bad)  
  4154c4:	imul   eax,DWORD PTR gs:[rax],0x55
  4154c8:	jp     0x41552c
  4154ca:	imul   esp,DWORD PTR gs:[rax],0x28
  4154ce:	rex.WR (bad) 
  4154d0:	je     0x41553b
  4154d2:	outs   dx,BYTE PTR ds:[rsi]
  4154d3:	sub    DWORD PTR [rax],eax
  4154d5:	jne    0x415551
  4154d7:	rex movsxd edi,DWORD PTR [rcx+0x72]
  4154db:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x7a550063
  4154e3:	(bad)  
  4154e4:	imul   esp,DWORD PTR gs:[rax],0x28
  4154e8:	rex.XB jns 0x41555d
  4154eb:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x76002963
  4154f3:	add    BYTE PTR gs:[rsi+0x65],dl
  4154f7:	outs   dx,BYTE PTR ds:[rsi]
  4154f8:	fs (bad) 
  4154fa:	add    BYTE PTR [rsi+0x69],dh
  4154fd:	add    BYTE PTR [rsi+0x69],dl
  415500:	gs je  0x415571
  415503:	(bad)  
  415504:	ins    DWORD PTR es:[rdi],dx
  415505:	gs jae 0x41556d
  415508:	add    BYTE PTR [rdi+0x65],dh
  41550b:	outs   dx,BYTE PTR ds:[rsi]
  41550c:	add    BYTE PTR [rbx+0x6f],dl
  41550f:	jb     0x415573
  415511:	imul   esp,DWORD PTR [rcx+0x6e],0x6f7700
  415518:	push   rdi
  415519:	outs   dx,DWORD PTR ds:[rsi]
  41551a:	ins    BYTE PTR es:[rdi],dx
  41551b:	outs   dx,DWORD PTR ds:[rsi]
  41551c:	data16 add BYTE PTR [rax+0x68],bh
  415520:	add    BYTE PTR [rax+0x68],bl
  415523:	outs   dx,DWORD PTR ds:[rsi]
  415524:	jae    0x415587
  415526:	add    BYTE PTR [rcx+0x69],bh
  415529:	add    BYTE PTR [rcx+0x69],bl
  41552c:	fs imul esi,DWORD PTR fs:[rbx+0x68],0x6f7900
  415535:	pop    rcx
  415536:	outs   dx,DWORD PTR ds:[rsi]
  415537:	jb     0x4155ae
  415539:	(bad)  
  41553b:	add    BYTE PTR [rdx+0x68],bh
  41553e:	add    BYTE PTR [rbx+0x68],al
  415541:	imul   ebp,DWORD PTR [rsi+0x65],0x7a006573
  415548:	jne    0x41554a
  41554a:	pop    rdx
  41554b:	jne    0x4155b9
  41554d:	jne    0x41554f
	...
  41557f:	add    BYTE PTR [rax+0x4d],dh
  415582:	add    BYTE PTR [r8],al
  415585:	add    BYTE PTR [rax],al
  415587:	add    BYTE PTR [rbx+0x4d],dh
  41558a:	add    BYTE PTR [r8],al
  41558d:	add    BYTE PTR [rax],al
  41558f:	add    BYTE PTR [rbp+0x4d],bh
  415592:	add    BYTE PTR [r8],al
  415595:	add    BYTE PTR [rax],al
  415597:	add    BYTE PTR [rax+0x414d],al
  41559d:	add    BYTE PTR [rax],al
  41559f:	add    BYTE PTR [rax+0x414d],cl
  4155a5:	add    BYTE PTR [rax],al
  4155a7:	add    BYTE PTR [rbx+0x414d],cl
  4155ad:	add    BYTE PTR [rax],al
  4155af:	add    BYTE PTR [rdx+0x414d],dl
  4155b5:	add    BYTE PTR [rax],al
  4155b7:	add    BYTE PTR [rsi+0x414d],dl
  4155bd:	add    BYTE PTR [rax],al
  4155bf:	add    BYTE PTR [rcx+0x414d],ah
  4155c5:	add    BYTE PTR [rax],al
  4155c7:	add    BYTE PTR [rbp+rcx*2+0x41],ah
  4155ce:	add    BYTE PTR [rax],al
  4155d0:	lods   eax,DWORD PTR ds:[rsi]
  4155d1:	rex.WRB
  4155d2:	add    BYTE PTR [r8],al
  4155d5:	add    BYTE PTR [rax],al
  4155d7:	add    BYTE PTR [rcx+0x414d],bh
  4155dd:	add    BYTE PTR [rax],al
  4155df:	add    dl,cl
  4155e1:	rex.WRB
  4155e2:	add    BYTE PTR [r8],al
  4155e5:	add    BYTE PTR [rax],al
  4155e7:	add    bl,dl
  4155e9:	rex.WRB
  4155ea:	add    BYTE PTR [r8],al
  4155ed:	add    BYTE PTR [rax],al
  4155ef:	add    cl,ah
  4155f1:	rex.WRB
  4155f2:	add    BYTE PTR [r8],al
  4155f5:	add    BYTE PTR [rax],al
  4155f7:	add    ah,ah
  4155f9:	rex.WRB
  4155fa:	add    BYTE PTR [r8],al
  4155fd:	add    BYTE PTR [rax],al
  4155ff:	add    ah,ch
  415601:	rex.WRB
  415602:	add    BYTE PTR [r8],al
  415605:	add    BYTE PTR [rax],al
  415607:	add    bh,ch
  415609:	rex.WRB
  41560a:	add    BYTE PTR [r8],al
  41560d:	add    BYTE PTR [rax],al
  41560f:	add    dl,bh
  415611:	rex.WRB
  415612:	add    BYTE PTR [r8],al
  415615:	add    BYTE PTR [rax],al
  415617:	add    dh,bh
  415619:	rex.WRB
  41561a:	add    BYTE PTR [r8],al
  41561d:	add    BYTE PTR [rax],al
  41561f:	add    BYTE PTR [rax],cl
  415621:	rex.WRX
  415622:	add    BYTE PTR [r8],al
  415625:	add    BYTE PTR [rax],al
  415627:	add    BYTE PTR [rbx],dl
  415629:	rex.WRX
  41562a:	add    BYTE PTR [r8],al
  41562d:	add    BYTE PTR [rax],al
  41562f:	add    BYTE PTR [rsi],ah
  415631:	rex.WRX
  415632:	add    BYTE PTR [r8],al
  415635:	add    BYTE PTR [rax],al
  415637:	add    BYTE PTR [rax],dh
  415639:	rex.WRX
  41563a:	add    BYTE PTR [r8],al
  41563d:	add    BYTE PTR [rax],al
  41563f:	add    BYTE PTR [rdx+0x4e],al
  415642:	add    BYTE PTR [r8],al
  415645:	add    BYTE PTR [rax],al
  415647:	add    BYTE PTR [rbp+0x4e],al
  41564a:	add    BYTE PTR [r8],al
  41564d:	add    BYTE PTR [rax],al
  41564f:	add    BYTE PTR [rdi+0x4e],cl
  415652:	add    BYTE PTR [r8],al
  415655:	add    BYTE PTR [rax],al
  415657:	add    BYTE PTR [rbx+0x4e],dl
  41565a:	add    BYTE PTR [r8],al
  41565d:	add    BYTE PTR [rax],al
  41565f:	add    BYTE PTR [rdi+0x4e],dl
  415662:	add    BYTE PTR [r8],al
  415665:	add    BYTE PTR [rax],al
  415667:	add    BYTE PTR [rdx+0x4e],bl
  41566a:	add    BYTE PTR [r8],al
  41566d:	add    BYTE PTR [rax],al
  41566f:	add    BYTE PTR [rdx+0x4e],ah
  415672:	add    BYTE PTR [r8],al
  415675:	add    BYTE PTR [rax],al
  415677:	add    BYTE PTR [rax+0x4e],ch
  41567a:	add    BYTE PTR [r8],al
  41567d:	add    BYTE PTR [rax],al
  41567f:	add    BYTE PTR [rbp+0x4e],bh
  415682:	add    BYTE PTR [r8],al
  415685:	add    BYTE PTR [rax],al
  415687:	add    BYTE PTR [rbx+0x414e],al
  41568d:	add    BYTE PTR [rax],al
  41568f:	add    BYTE PTR [rbx+0x414e],dl
  415695:	add    BYTE PTR [rax],al
  415697:	add    BYTE PTR [rdi+0x414e],dl
  41569d:	add    BYTE PTR [rax],al
  41569f:	add    BYTE PTR [rsi+rcx*2+0x41],bl
  4156a6:	add    BYTE PTR [rax],al
  4156a8:	lahf   
  4156a9:	rex.WRX
  4156aa:	add    BYTE PTR [r8],al
  4156ad:	add    BYTE PTR [rax],al
  4156af:	add    BYTE PTR [rdi+0x414e],ah
  4156b5:	add    BYTE PTR [rax],al
  4156b7:	add    BYTE PTR [rdx+0x414e],ch
  4156bd:	add    BYTE PTR [rax],al
  4156bf:	add    BYTE PTR [rcx+0x414e],dh
  4156c5:	add    BYTE PTR [rax],al
  4156c7:	add    BYTE PTR [rsi+rcx*2+0x41],dh
  4156ce:	add    BYTE PTR [rax],al
  4156d0:	mov    eax,0x414e
  4156d5:	add    BYTE PTR [rax],al
  4156d7:	add    ah,al
  4156d9:	rex.WRX
  4156da:	add    BYTE PTR [r8],al
  4156dd:	add    BYTE PTR [rax],al
  4156df:	add    al,cl
  4156e1:	rex.WRX
  4156e2:	add    BYTE PTR [r8],al
  4156e5:	add    BYTE PTR [rax],al
  4156e7:	add    bl,cl
  4156e9:	rex.WRX
  4156ea:	add    BYTE PTR [r8],al
  4156ed:	add    BYTE PTR [rax],al
  4156ef:	add    bl,dl
  4156f1:	rex.WRX
  4156f2:	add    BYTE PTR [r8],al
  4156f5:	add    BYTE PTR [rax],al
  4156f7:	add    bh,dl
  4156f9:	rex.WRX
  4156fa:	add    BYTE PTR [r8],al
  4156fd:	add    BYTE PTR [rax],al
  4156ff:	add    al,ah
  415701:	rex.WRX
  415702:	add    BYTE PTR [r8],al
  415705:	add    BYTE PTR [rax],al
  415707:	add    bl,ah
  415709:	rex.WRX
  41570a:	add    BYTE PTR [r8],al
  41570d:	add    BYTE PTR [rax],al
  41570f:	add    ah,ch
  415711:	rex.WRX
  415712:	add    BYTE PTR [r8],al
  415715:	add    BYTE PTR [rax],al
  415717:	add    al,dh
  415719:	rex.WRX
  41571a:	add    BYTE PTR [r8],al
  41571d:	add    BYTE PTR [rax],al
  41571f:	add    cl,bh
  415721:	rex.WRX
  415722:	add    BYTE PTR [r8],al
  415725:	add    BYTE PTR [rax],al
  415727:	add    ah,bh
  415729:	rex.WRX
  41572a:	add    BYTE PTR [r8],al
  41572d:	add    BYTE PTR [rax],al
  41572f:	add    BYTE PTR [rdx],al
  415731:	rex.WRXB
  415732:	add    BYTE PTR [r8],al
  415735:	add    BYTE PTR [rax],al
  415737:	add    BYTE PTR [rip+0x414f],al        # 0x41988c
  41573d:	add    BYTE PTR [rax],al
  41573f:	add    BYTE PTR [rbx],cl
  415741:	rex.WRXB
  415742:	add    BYTE PTR [r8],al
  415745:	add    BYTE PTR [rax],al
  415747:	add    BYTE PTR [rsi],cl
  415749:	rex.WRXB
  41574a:	add    BYTE PTR [r8],al
  41574d:	add    BYTE PTR [rax],al
  41574f:	add    BYTE PTR [rip+0x414f],dl        # 0x4198a4
  415755:	add    BYTE PTR [rax],al
  415757:	add    BYTE PTR [rax],bl
  415759:	rex.WRXB
  41575a:	add    BYTE PTR [r8],al
  41575d:	add    BYTE PTR [rax],al
  41575f:	add    BYTE PTR [rdi],bl
  415761:	rex.WRXB
  415762:	add    BYTE PTR [r8],al
  415765:	add    BYTE PTR [rax],al
  415767:	add    BYTE PTR [rbx],ah
  415769:	rex.WRXB
  41576a:	add    BYTE PTR [r8],al
  41576d:	add    BYTE PTR [rax],al
  41576f:	add    BYTE PTR [rcx],dh
  415771:	rex.WRXB
  415772:	add    BYTE PTR [r8],al
  415775:	add    BYTE PTR [rax],al
  415777:	add    BYTE PTR [rdi+rcx*2],dh
  41577a:	add    BYTE PTR [r8],al
  41577d:	add    BYTE PTR [rax],al
  41577f:	add    BYTE PTR [rbx],bh
  415781:	rex.WRXB
  415782:	add    BYTE PTR [r8],al
  415785:	add    BYTE PTR [rax],al
  415787:	add    BYTE PTR [rsi],bh
  415789:	rex.WRXB
  41578a:	add    BYTE PTR [r8],al
  41578d:	add    BYTE PTR [rax],al
  41578f:	add    BYTE PTR [rdi+rcx*2+0x41],al
  415793:	add    BYTE PTR [rax],al
  415795:	add    BYTE PTR [rax],al
  415797:	add    BYTE PTR [rdi+0x4f],al
  41579a:	add    BYTE PTR [r8],al
  41579d:	add    BYTE PTR [rax],al
  41579f:	add    BYTE PTR [rdi+0x4f],cl
  4157a2:	add    BYTE PTR [r8],al
  4157a5:	add    BYTE PTR [rax],al
  4157a7:	add    BYTE PTR [rdx+0x4f],dl
  4157aa:	add    BYTE PTR [r8],al
  4157ad:	add    BYTE PTR [rax],al
  4157af:	add    BYTE PTR [rdx+0x4f],bl
  4157b2:	add    BYTE PTR [r8],al
  4157b5:	add    BYTE PTR [rax],al
  4157b7:	add    BYTE PTR [rbp+0x4f],bl
  4157ba:	add    BYTE PTR [r8],al
  4157bd:	add    BYTE PTR [rax],al
  4157bf:	add    BYTE PTR [rsi+0x4f],ah
  4157c2:	add    BYTE PTR [r8],al
  4157c5:	add    BYTE PTR [rax],al
  4157c7:	add    BYTE PTR [rcx+0x4f],ch
  4157ca:	add    BYTE PTR [r8],al
  4157cd:	add    BYTE PTR [rax],al
  4157cf:	add    BYTE PTR [rax+0x4f],dh
  4157d2:	add    BYTE PTR [r8],al
  4157d5:	add    BYTE PTR [rax],al
  4157d7:	add    BYTE PTR [rbx+0x4f],dh
  4157da:	add    BYTE PTR [r8],al
  4157dd:	add    BYTE PTR [rax],al
  4157df:	add    BYTE PTR [rcx+0x4f],bh
  4157e2:	add    BYTE PTR [r8],al
  4157e5:	add    BYTE PTR [rax],al
  4157e7:	add    BYTE PTR [rdi+rcx*2+0x41],bh
  4157eb:	add    BYTE PTR [rax],al
  4157ed:	add    BYTE PTR [rax],al
  4157ef:	add    BYTE PTR [rbp+0x414f],al
  4157f5:	add    BYTE PTR [rax],al
  4157f7:	add    BYTE PTR [rax+0x414f],cl
  4157fd:	add    BYTE PTR [rax],al
  4157ff:	add    BYTE PTR [rax+0x414f],dl
  415805:	add    BYTE PTR [rax],al
  415807:	add    BYTE PTR [rbx+0x414f],dl
  41580d:	add    BYTE PTR [rax],al
  41580f:	add    BYTE PTR [rbx+0x414f],bl
  415815:	add    BYTE PTR [rax],al
  415817:	add    BYTE PTR [rsi+0x414f],bl
  41581d:	add    BYTE PTR [rax],al
  41581f:	add    BYTE PTR [rbp+0x414f],ah
  415825:	add    BYTE PTR [rax],al
  415827:	add    BYTE PTR [rax+0x414f],ch
  41582d:	add    BYTE PTR [rax],al
  41582f:	add    BYTE PTR [rax+0x414f],dh
  415835:	add    BYTE PTR [rax],al
  415837:	add    BYTE PTR [rbx+0x414f],dh
  41583d:	add    BYTE PTR [rax],al
  41583f:	add    BYTE PTR [rdi+0x414f],dh
  415845:	add    BYTE PTR [rax],al
  415847:	add    BYTE PTR [rdx+0x414f],bh
  41584d:	add    BYTE PTR [rax],al
  41584f:	add    BYTE PTR [rdi+0x414f],dh
  415855:	add    BYTE PTR [rax],al
  415857:	add    ah,cl
  415859:	rex.WRXB
  41585a:	add    BYTE PTR [r8],al
  41585d:	add    BYTE PTR [rax],al
  41585f:	add    ah,bl
  415861:	rex.WRXB
  415862:	add    BYTE PTR [r8],al
  415865:	add    BYTE PTR [rax],al
  415867:	add    bh,bl
  415869:	rex.WRXB
  41586a:	add    BYTE PTR [r8],al
  41586d:	add    BYTE PTR [rax],al
  41586f:	add    al,ch
  415871:	rex.WRXB
  415872:	add    BYTE PTR [r8],al
  415875:	add    BYTE PTR [rax],al
  415877:	add    bl,ch
  415879:	rex.WRXB
  41587a:	add    BYTE PTR [r8],al
  41587d:	add    BYTE PTR [rax],al
  41587f:	add    bl,dh
  415881:	rex.WRXB
  415882:	add    BYTE PTR [r8],al
  415885:	add    BYTE PTR [rax],al
  415887:	add    bh,dh
  415889:	rex.WRXB
  41588a:	add    BYTE PTR [r8],al
  41588d:	add    BYTE PTR [rax],al
  41588f:	add    BYTE PTR [rax],al
  415891:	push   rax
  415892:	add    BYTE PTR [r8],al
  415895:	add    BYTE PTR [rax],al
  415897:	add    BYTE PTR [rbx],al
  415899:	push   rax
  41589a:	add    BYTE PTR [r8],al
  41589d:	add    BYTE PTR [rax],al
  41589f:	add    BYTE PTR [rax+rdx*2],cl
  4158a2:	add    BYTE PTR [r8],al
  4158a5:	add    BYTE PTR [rax],al
  4158a7:	add    BYTE PTR [rdi],cl
  4158a9:	push   rax
  4158aa:	add    BYTE PTR [r8],al
  4158ad:	add    BYTE PTR [rax],al
  4158af:	add    BYTE PTR [rip+0x4150],dl        # 0x419a05
  4158b5:	add    BYTE PTR [rax],al
  4158b7:	add    BYTE PTR [rax],bl
  4158b9:	push   rax
  4158ba:	add    BYTE PTR [r8],al
  4158bd:	add    BYTE PTR [rax],al
  4158bf:	add    BYTE PTR [rdi],bl
  4158c1:	push   rax
  4158c2:	add    BYTE PTR [r8],al
  4158c5:	add    BYTE PTR [rax],al
  4158c7:	add    BYTE PTR [rdx],ah
  4158c9:	push   rax
  4158ca:	add    BYTE PTR [r8],al
  4158cd:	add    BYTE PTR [rax],al
  4158cf:	add    BYTE PTR [rax],ch
  4158d1:	push   rax
  4158d2:	add    BYTE PTR [r8],al
  4158d5:	add    BYTE PTR [rax],al
  4158d7:	add    BYTE PTR [rbx],ch
  4158d9:	push   rax
  4158da:	add    BYTE PTR [r8],al
  4158dd:	add    BYTE PTR [rax],al
  4158df:	add    BYTE PTR [rax+rdx*2],dh
  4158e2:	add    BYTE PTR [r8],al
  4158e5:	add    BYTE PTR [rax],al
  4158e7:	add    BYTE PTR [rax],bh
  4158e9:	push   rax
  4158ea:	add    BYTE PTR [r8],al
  4158ed:	add    BYTE PTR [rax],al
  4158ef:	add    BYTE PTR [rsi+0x50],al
  4158f2:	add    BYTE PTR [r8],al
  4158f5:	add    BYTE PTR [rax],al
  4158f7:	add    BYTE PTR [rcx+0x50],cl
  4158fa:	add    BYTE PTR [r8],al
  4158fd:	add    BYTE PTR [rax],al
  4158ff:	add    BYTE PTR [rbx+0x50],dl
  415902:	add    BYTE PTR [r8],al
  415905:	add    BYTE PTR [rax],al
  415907:	add    BYTE PTR [rsi+0x50],dl
  41590a:	add    BYTE PTR [r8],al
  41590d:	add    BYTE PTR [rax],al
  41590f:	add    BYTE PTR [rdi+0x50],bl
  415912:	add    BYTE PTR [r8],al
  415915:	add    BYTE PTR [rax],al
  415917:	add    BYTE PTR [rdx+0x50],ah
  41591a:	add    BYTE PTR [r8],al
  41591d:	add    BYTE PTR [rax],al
  41591f:	add    BYTE PTR [rbp+0x50],ch
  415922:	add    BYTE PTR [r8],al
  415925:	add    BYTE PTR [rax],al
  415927:	add    BYTE PTR [rax+0x50],dh
  41592a:	add    BYTE PTR [r8],al
  41592d:	add    BYTE PTR [rax],al
  41592f:	add    BYTE PTR [rbp+0x50],dh
  415932:	add    BYTE PTR [r8],al
  415935:	add    BYTE PTR [rax],al
  415937:	add    BYTE PTR [rax+0x50],bh
  41593a:	add    BYTE PTR [r8],al
  41593d:	add    BYTE PTR [rax],al
  41593f:	add    BYTE PTR [rbx+0x50],bh
  415942:	add    BYTE PTR [r8],al
  415945:	add    BYTE PTR [rax],al
  415947:	add    BYTE PTR [rsi+0x50],bh
  41594a:	add    BYTE PTR [r8],al
  41594d:	add    BYTE PTR [rax],al
  41594f:	add    BYTE PTR [rax+0x4150],cl
  415955:	add    BYTE PTR [rax],al
  415957:	add    BYTE PTR [rbx+0x4150],cl
  41595d:	add    BYTE PTR [rax],al
  41595f:	add    BYTE PTR [rbx+0x4150],dl
  415965:	add    BYTE PTR [rax],al
  415967:	add    BYTE PTR [rsi+0x4150],dl
  41596d:	add    BYTE PTR [rax],al
  41596f:	add    BYTE PTR [rdx+0x4150],bl
  415975:	add    BYTE PTR [rax],al
  415977:	add    BYTE PTR [rbp+0x4150],bl
  41597d:	add    BYTE PTR [rax],al
  41597f:	add    BYTE PTR [rsi+0x4150],ah
  415985:	add    BYTE PTR [rax],al
  415987:	add    BYTE PTR [rcx+0x4150],ch
  41598d:	add    BYTE PTR [rax],al
  41598f:	add    BYTE PTR [rdx+0x4150],dh
  415995:	add    BYTE PTR [rax],al
  415997:	add    BYTE PTR [rbp+0x4150],dh
  41599d:	add    BYTE PTR [rax],al
  41599f:	add    BYTE PTR [rax+rdx*2+0x41],bh
  4159a6:	add    BYTE PTR [rax],al
  4159a8:	mov    edi,0x4150
  4159ad:	add    BYTE PTR [rax],al
  4159af:	add    bl,cl
  4159b1:	push   rax
  4159b2:	add    BYTE PTR [r8],al
  4159b5:	add    BYTE PTR [rax],al
  4159b7:	add    dh,cl
  4159b9:	push   rax
  4159ba:	add    BYTE PTR [r8],al
  4159bd:	add    BYTE PTR [rax],al
  4159bf:	add    bl,cl
  4159c1:	push   rax
  4159c2:	add    BYTE PTR [r8],al
  4159c5:	add    BYTE PTR [rax],al
  4159c7:	add    al,bl
  4159c9:	push   rax
  4159ca:	add    BYTE PTR [r8],al
  4159cd:	add    BYTE PTR [rax],al
  4159cf:	add    dh,bl
  4159d1:	push   rax
  4159d2:	add    BYTE PTR [r8],al
  4159d5:	add    BYTE PTR [rax],al
  4159d7:	add    cl,ah
  4159d9:	push   rax
  4159da:	add    BYTE PTR [r8],al
  4159dd:	add    BYTE PTR [rax],al
  4159df:	add    cl,ch
  4159e1:	push   rax
  4159e2:	add    BYTE PTR [r8],al
  4159e5:	add    BYTE PTR [rax],al
  4159e7:	add    ah,ch
  4159e9:	push   rax
  4159ea:	add    BYTE PTR [r8],al
  4159ed:	add    BYTE PTR [rax],al
  4159ef:	add    bl,dh
  4159f1:	push   rax
  4159f2:	add    BYTE PTR [r8],al
  4159f5:	add    BYTE PTR [rax],al
  4159f7:	add    bh,dh
  4159f9:	push   rax
  4159fa:	add    BYTE PTR [r8],al
  4159fd:	add    BYTE PTR [rax],al
  4159ff:	add    bh,bh
  415a01:	push   rax
  415a02:	add    BYTE PTR [r8],al
  415a05:	add    BYTE PTR [rax],al
  415a07:	add    BYTE PTR [rdx],al
  415a09:	push   rcx
  415a0a:	add    BYTE PTR [r8],al
  415a0d:	add    BYTE PTR [rax],al
  415a0f:	add    BYTE PTR [rcx],cl
  415a11:	push   rcx
  415a12:	add    BYTE PTR [r8],al
  415a15:	add    BYTE PTR [rax],al
  415a17:	add    BYTE PTR [rcx+rdx*2],cl
  415a1a:	add    BYTE PTR [r8],al
  415a1d:	add    BYTE PTR [rax],al
  415a1f:	add    BYTE PTR [rip+0x4151],dl        # 0x419b76
  415a25:	add    BYTE PTR [rax],al
  415a27:	add    BYTE PTR [rbx],bl
  415a29:	push   rcx
  415a2a:	add    BYTE PTR [r8],al
  415a2d:	add    BYTE PTR [rax],al
  415a2f:	add    BYTE PTR [rdx],ch
  415a31:	push   rcx
  415a32:	add    BYTE PTR [r8],al
  415a35:	add    BYTE PTR [rax],al
  415a37:	add    BYTE PTR [rax],dh
  415a39:	push   rcx
  415a3a:	add    BYTE PTR [r8],al
  415a3d:	add    BYTE PTR [rax],al
  415a3f:	add    BYTE PTR [rbx+0x51],cl
  415a42:	add    BYTE PTR [r8],al
  415a45:	add    BYTE PTR [rax],al
  415a47:	add    BYTE PTR [rsi+0x51],cl
  415a4a:	add    BYTE PTR [r8],al
  415a4d:	add    BYTE PTR [rax],al
  415a4f:	add    BYTE PTR [rbp+0x51],dl
  415a52:	add    BYTE PTR [r8],al
  415a55:	add    BYTE PTR [rax],al
  415a57:	add    BYTE PTR [rax+0x51],bl
  415a5a:	add    BYTE PTR [r8],al
  415a5d:	add    BYTE PTR [rax],al
  415a5f:	add    BYTE PTR [rsi+0x51],bl
  415a62:	add    BYTE PTR [r8],al
  415a65:	add    BYTE PTR [rax],al
  415a67:	add    BYTE PTR [rcx+0x51],ah
  415a6a:	add    BYTE PTR [r8],al
  415a6d:	add    BYTE PTR [rax],al
  415a6f:	add    BYTE PTR [rdi+0x51],ch
  415a72:	add    BYTE PTR [r8],al
  415a75:	add    BYTE PTR [rax],al
  415a77:	add    BYTE PTR [rdx+0x51],dh
  415a7a:	add    BYTE PTR [r8],al
  415a7d:	add    BYTE PTR [rax],al
  415a7f:	add    BYTE PTR [rsi+0x51],dh
  415a82:	add    BYTE PTR [r8],al
  415a85:	add    BYTE PTR [rax],al
  415a87:	add    BYTE PTR [rcx+0x51],bh
  415a8a:	add    BYTE PTR [r8],al
  415a8d:	add    BYTE PTR [rax],al
  415a8f:	add    BYTE PTR [rcx+rdx*2+0x41],al
  415a96:	add    BYTE PTR [rax],al
  415a98:	xchg   DWORD PTR [rcx+0x41],edx
  415a9b:	add    BYTE PTR [rax],al
  415a9d:	add    BYTE PTR [rax],al
  415a9f:	add    BYTE PTR [rdi+0x4151],cl
  415aa5:	add    BYTE PTR [rax],al
  415aa7:	add    BYTE PTR [rdx+0x4151],dl
  415aad:	add    BYTE PTR [rax],al
  415aaf:	add    BYTE PTR [rax+0x4151],bl
  415ab5:	add    BYTE PTR [rax],al
  415ab7:	add    BYTE PTR [rbx+0x4151],bl
  415abd:	add    BYTE PTR [rax],al
  415abf:	add    BYTE PTR [rax+0x4151],bl
  415ac5:	add    BYTE PTR [rax],al
  415ac7:	add    BYTE PTR [rbx+0x4151],ch
  415acd:	add    BYTE PTR [rax],al
  415acf:	add    BYTE PTR [rsi+0x4151],dh
  415ad5:	add    BYTE PTR [rax],al
  415ad7:	add    BYTE PTR [rcx+0x4151],bh
  415add:	add    BYTE PTR [rax],al
  415adf:	add    bl,al
  415ae1:	push   rcx
  415ae2:	add    BYTE PTR [r8],al
  415ae5:	add    BYTE PTR [rax],al
  415ae7:	add    dh,al
  415ae9:	push   rcx
  415aea:	add    BYTE PTR [r8],al
  415aed:	add    BYTE PTR [rax],al
  415aef:	add    al,dl
  415af1:	push   rcx
  415af2:	add    BYTE PTR [r8],al
  415af5:	add    BYTE PTR [rax],al
  415af7:	add    ah,dl
  415af9:	push   rcx
  415afa:	add    BYTE PTR [r8],al
  415afd:	add    BYTE PTR [rax],al
  415aff:	add    ch,bl
  415b01:	push   rcx
  415b02:	add    BYTE PTR [r8],al
  415b05:	add    BYTE PTR [rax],al
  415b07:	add    cl,ah
  415b09:	push   rcx
  415b0a:	add    BYTE PTR [r8],al
  415b0d:	add    BYTE PTR [rax],al
  415b0f:	add    al,ch
  415b11:	push   rcx
  415b12:	add    BYTE PTR [r8],al
  415b15:	add    BYTE PTR [rax],al
  415b17:	add    bl,ch
  415b19:	push   rcx
  415b1a:	add    BYTE PTR [r8],al
  415b1d:	add    BYTE PTR [rax],al
  415b1f:	add    bl,dh
  415b21:	push   rcx
  415b22:	add    BYTE PTR [r8],al
  415b25:	add    BYTE PTR [rax],al
  415b27:	add    dh,dh
  415b29:	push   rcx
  415b2a:	add    BYTE PTR [r8],al
  415b2d:	add    BYTE PTR [rax],al
  415b2f:	add    ah,bh
  415b31:	push   rcx
  415b32:	add    BYTE PTR [r8],al
  415b35:	add    BYTE PTR [rax],al
  415b37:	add    bh,bh
  415b39:	push   rcx
  415b3a:	add    BYTE PTR [r8],al
  415b3d:	add    BYTE PTR [rax],al
  415b3f:	add    BYTE PTR [rdi],al
  415b41:	push   rdx
  415b42:	add    BYTE PTR [r8],al
  415b45:	add    BYTE PTR [rax],al
  415b47:	add    BYTE PTR [rdx],cl
  415b49:	push   rdx
  415b4a:	add    BYTE PTR [r8],al
  415b4d:	add    BYTE PTR [rax],al
  415b4f:	add    BYTE PTR [rdx],dl
  415b51:	push   rdx
  415b52:	add    BYTE PTR [r8],al
  415b55:	add    BYTE PTR [rax],al
  415b57:	add    BYTE PTR [rip+0x4152],dl        # 0x419caf
  415b5d:	add    BYTE PTR [rax],al
  415b5f:	add    BYTE PTR [rcx],bl
  415b61:	push   rdx
  415b62:	add    BYTE PTR [r8],al
  415b65:	add    BYTE PTR [rax],al
  415b67:	add    BYTE PTR [rdx+rdx*2],bl
  415b6a:	add    BYTE PTR [r8],al
  415b6d:	add    BYTE PTR [rax],al
  415b6f:	add    BYTE PTR [rbx],ah
  415b71:	push   rdx
  415b72:	add    BYTE PTR [r8],al
  415b75:	add    BYTE PTR [rax],al
  415b77:	add    BYTE PTR [rdi],ah
  415b79:	push   rdx
  415b7a:	add    BYTE PTR [r8],al
  415b7d:	add    BYTE PTR [rax],al
  415b7f:	add    BYTE PTR [rsi],ch
  415b81:	push   rdx
  415b82:	add    BYTE PTR [r8],al
  415b85:	add    BYTE PTR [rax],al
  415b87:	add    BYTE PTR [rcx],dh
  415b89:	push   rdx
  415b8a:	add    BYTE PTR [r8],al
  415b8d:	add    BYTE PTR [rax],al
  415b8f:	add    BYTE PTR [rdi],dh
  415b91:	push   rdx
  415b92:	add    BYTE PTR [r8],al
  415b95:	add    BYTE PTR [rax],al
  415b97:	add    BYTE PTR [rdx],bh
  415b99:	push   rdx
  415b9a:	add    BYTE PTR [r8],al
  415b9d:	add    BYTE PTR [rax],al
  415b9f:	add    BYTE PTR [rsi],bh
  415ba1:	push   rdx
  415ba2:	add    BYTE PTR [r8],al
  415ba5:	add    BYTE PTR [rax],al
  415ba7:	add    BYTE PTR [rcx+0x52],al
  415baa:	add    BYTE PTR [r8],al
  415bad:	add    BYTE PTR [rax],al
  415baf:	add    BYTE PTR [rbx+0x52],cl
  415bb2:	add    BYTE PTR [r8],al
  415bb5:	add    BYTE PTR [rax],al
  415bb7:	add    BYTE PTR [rdi+0x52],cl
  415bba:	add    BYTE PTR [r8],al
  415bbd:	add    BYTE PTR [rax],al
  415bbf:	add    BYTE PTR [rbx+0x52],cl
  415bc2:	add    BYTE PTR [r8],al
  415bc5:	add    BYTE PTR [rax],al
  415bc7:	add    BYTE PTR [rsi+0x52],bl
  415bca:	add    BYTE PTR [r8],al
  415bcd:	add    BYTE PTR [rax],al
  415bcf:	add    BYTE PTR [rbp+0x52],ah
  415bd2:	add    BYTE PTR [r8],al
  415bd5:	add    BYTE PTR [rax],al
  415bd7:	add    BYTE PTR [rax+0x52],ch
  415bda:	add    BYTE PTR [r8],al
  415bdd:	add    BYTE PTR [rax],al
  415bdf:	add    BYTE PTR [rax+0x52],dh
  415be2:	add    BYTE PTR [r8],al
  415be5:	add    BYTE PTR [rax],al
  415be7:	add    BYTE PTR [rbx+0x52],dh
  415bea:	add    BYTE PTR [r8],al
  415bed:	add    BYTE PTR [rax],al
  415bef:	add    BYTE PTR [rcx+0x52],bh
  415bf2:	add    BYTE PTR [r8],al
  415bf5:	add    BYTE PTR [rax],al
  415bf7:	add    BYTE PTR [rdx+rdx*2+0x41],bh
  415bfb:	add    BYTE PTR [rax],al
  415bfd:	add    BYTE PTR [rax],al
  415bff:	add    BYTE PTR [rdx+0x4152],al
  415c05:	add    BYTE PTR [rax],al
  415c07:	add    BYTE PTR [rbp+0x4152],al
  415c0d:	add    BYTE PTR [rax],al
  415c0f:	add    BYTE PTR [rbp+0x4152],cl
  415c15:	add    BYTE PTR [rax],al
  415c17:	add    BYTE PTR [rcx+0x4152],dl
  415c1d:	add    BYTE PTR [rax],al
  415c1f:	add    BYTE PTR [rdx+rdx*2+0x41],bl
  415c26:	add    BYTE PTR [rax],al
  415c28:	lahf   
  415c29:	push   rdx
  415c2a:	add    BYTE PTR [r8],al
  415c2d:	add    BYTE PTR [rax],al
  415c2f:	add    BYTE PTR [rsi+0x4152],ah
  415c35:	add    BYTE PTR [rax],al
  415c37:	add    BYTE PTR [rdx+0x4152],ch
  415c3d:	add    BYTE PTR [rax],al
  415c3f:	add    BYTE PTR [rdi+0x4152],ch
  415c45:	add    BYTE PTR [rax],al
  415c47:	add    BYTE PTR [rdx+0x4152],dh
  415c4d:	add    BYTE PTR [rax],al
  415c4f:	add    BYTE PTR [rcx+0x4152],bh
  415c55:	add    BYTE PTR [rax],al
  415c57:	add    BYTE PTR [rdx+rdx*2+0x41],bh
  415c5e:	add    BYTE PTR [rax],al
  415c60:	(bad)  
  415c61:	push   rdx
  415c62:	add    BYTE PTR [r8],al
  415c65:	add    BYTE PTR [rax],al
  415c67:	add    dl,cl
  415c69:	push   rdx
  415c6a:	add    BYTE PTR [r8],al
  415c6d:	add    BYTE PTR [rax],al
  415c6f:	add    dl,dl
  415c71:	push   rdx
  415c72:	add    BYTE PTR [r8],al
  415c75:	add    BYTE PTR [rax],al
  415c77:	add    dh,dl
  415c79:	push   rdx
  415c7a:	add    BYTE PTR [r8],al
  415c7d:	add    BYTE PTR [rax],al
  415c7f:	add    dh,bl
  415c81:	push   rdx
  415c82:	add    BYTE PTR [r8],al
  415c85:	add    BYTE PTR [rax],al
  415c87:	add    cl,ah
  415c89:	push   rdx
  415c8a:	add    BYTE PTR [r8],al
  415c8d:	add    BYTE PTR [rax],al
  415c8f:	add    cl,ch
  415c91:	push   rdx
  415c92:	add    BYTE PTR [r8],al
  415c95:	add    BYTE PTR [rax],al
  415c97:	add    ah,ch
  415c99:	push   rdx
  415c9a:	add    BYTE PTR [r8],al
  415c9d:	add    BYTE PTR [rax],al
  415c9f:	add    ch,dh
  415ca1:	push   rdx
  415ca2:	add    BYTE PTR [r8],al
  415ca5:	add    BYTE PTR [rax],al
  415ca7:	add    al,bh
  415ca9:	push   rdx
  415caa:	add    BYTE PTR [r8],al
  415cad:	add    BYTE PTR [rax],al
  415caf:	add    BYTE PTR [rax],al
  415cb1:	push   rbx
  415cb2:	add    BYTE PTR [r8],al
  415cb5:	add    BYTE PTR [rax],al
  415cb7:	add    BYTE PTR [rbx],al
  415cb9:	push   rbx
  415cba:	add    BYTE PTR [r8],al
  415cbd:	add    BYTE PTR [rax],al
  415cbf:	add    BYTE PTR [rdi],cl
  415cc1:	push   rbx
  415cc2:	add    BYTE PTR [r8],al
  415cc5:	add    BYTE PTR [rax],al
  415cc7:	add    BYTE PTR [rdx],dl
  415cc9:	push   rbx
  415cca:	add    BYTE PTR [r8],al
  415ccd:	add    BYTE PTR [rax],al
  415ccf:	add    BYTE PTR [rbx],bl
  415cd1:	push   rbx
  415cd2:	add    BYTE PTR [r8],al
  415cd5:	add    BYTE PTR [rax],al
  415cd7:	add    BYTE PTR [rdi],bl
  415cd9:	push   rbx
  415cda:	add    BYTE PTR [r8],al
  415cdd:	add    BYTE PTR [rax],al
  415cdf:	add    BYTE PTR [rip+0x4153],ah        # 0x419e38
  415ce5:	add    BYTE PTR [rax],al
  415ce7:	add    BYTE PTR [rax],ch
  415ce9:	push   rbx
  415cea:	add    BYTE PTR [r8],al
  415ced:	add    BYTE PTR [rax],al
  415cef:	add    BYTE PTR [rdi],ch
  415cf1:	push   rbx
  415cf2:	add    BYTE PTR [r8],al
  415cf5:	add    BYTE PTR [rax],al
  415cf7:	add    BYTE PTR [rdx],dh
  415cf9:	push   rbx
  415cfa:	add    BYTE PTR [r8],al
  415cfd:	add    BYTE PTR [rax],al
  415cff:	add    BYTE PTR [rdi],ch
  415d01:	push   rbx
  415d02:	add    BYTE PTR [r8],al
  415d05:	add    BYTE PTR [rax],al
  415d07:	add    BYTE PTR [rdx+0x53],al
  415d0a:	add    BYTE PTR [r8],al
  415d0d:	add    BYTE PTR [rax],al
  415d0f:	add    BYTE PTR [rax+0x53],dl
  415d12:	add    BYTE PTR [r8],al
  415d15:	add    BYTE PTR [rax],al
  415d17:	add    BYTE PTR [rbx+0x53],dl
  415d1a:	add    BYTE PTR [r8],al
  415d1d:	add    BYTE PTR [rax],al
  415d1f:	add    BYTE PTR [rbp+0x53],bl
  415d22:	add    BYTE PTR [r8],al
  415d25:	add    BYTE PTR [rax],al
  415d27:	add    BYTE PTR [rsi],ah
  415d29:	rex.XB
  415d2a:	add    BYTE PTR [r8],al
  415d2d:	add    BYTE PTR [rax],al
  415d2f:	add    BYTE PTR [rax+0x53],ah
  415d32:	add    BYTE PTR [r8],al
  415d35:	add    BYTE PTR [rax],al
  415d37:	add    BYTE PTR [rbx+0x53],ah
  415d3a:	add    BYTE PTR [r8],al
  415d3d:	add    BYTE PTR [rax],al
  415d3f:	add    BYTE PTR [rbp+0x53],ch
  415d42:	add    BYTE PTR [r8],al
  415d45:	add    BYTE PTR [rax],al
  415d47:	add    BYTE PTR [rcx+0x53],dh
  415d4a:	add    BYTE PTR [r8],al
  415d4d:	add    BYTE PTR [rax],al
  415d4f:	add    BYTE PTR [rbp+0x53],ch
  415d52:	add    BYTE PTR [r8],al
  415d55:	add    BYTE PTR [rax],al
  415d57:	add    BYTE PTR [rcx+0x4153],al
  415d5d:	add    BYTE PTR [rax],al
  415d5f:	add    BYTE PTR [rdi+0x4153],cl
  415d65:	add    BYTE PTR [rax],al
  415d67:	add    BYTE PTR [rbx+0x4153],dl
  415d6d:	add    BYTE PTR [rax],al
  415d6f:	add    BYTE PTR [rdi+0x4153],cl
  415d75:	add    BYTE PTR [rax],al
  415d77:	add    BYTE PTR [rdi+0x4153],bl
  415d7d:	add    BYTE PTR [rax],al
  415d7f:	add    BYTE PTR [rcx+0x4153],ch
  415d85:	add    BYTE PTR [rax],al
  415d87:	add    BYTE PTR [rbp+0x4153],ch
  415d8d:	add    BYTE PTR [rax],al
  415d8f:	add    BYTE PTR [rcx+0x4153],ch
  415d95:	add    BYTE PTR [rax],al
  415d97:	add    BYTE PTR [rdx+0x4153],bh
  415d9d:	add    BYTE PTR [rax],al
  415d9f:	add    ch,al
  415da1:	push   rbx
  415da2:	add    BYTE PTR [r8],al
  415da5:	add    BYTE PTR [rax],al
  415da7:	add    cl,cl
  415da9:	push   rbx
  415daa:	add    BYTE PTR [r8],al
  415dad:	add    BYTE PTR [rax],al
  415daf:	add    ch,al
  415db1:	push   rbx
  415db2:	add    BYTE PTR [r8],al
  415db5:	add    BYTE PTR [rax],al
  415db7:	add    dh,dl
  415db9:	push   rbx
  415dba:	add    BYTE PTR [r8],al
  415dbd:	add    BYTE PTR [rax],al
  415dbf:	add    cl,ah
  415dc1:	push   rbx
  415dc2:	add    BYTE PTR [r8],al
  415dc5:	add    BYTE PTR [rax],al
  415dc7:	add    ah,ah
  415dc9:	push   rbx
  415dca:	add    BYTE PTR [r8],al
  415dcd:	add    BYTE PTR [rax],al
  415dcf:	add    bl,ch
  415dd1:	push   rbx
  415dd2:	add    BYTE PTR [r8],al
  415dd5:	add    BYTE PTR [rax],al
  415dd7:	add    dh,ch
  415dd9:	push   rbx
  415dda:	add    BYTE PTR [r8],al
  415ddd:	add    BYTE PTR [rax],al
  415ddf:	add    bh,dh
  415de1:	push   rbx
  415de2:	add    BYTE PTR [r8],al
  415de5:	add    BYTE PTR [rax],al
  415de7:	add    dl,bh
  415de9:	push   rbx
  415dea:	add    BYTE PTR [r8],al
  415ded:	add    BYTE PTR [rax],al
  415def:	add    BYTE PTR [rdx],cl
  415df1:	push   rsp
  415df2:	add    BYTE PTR [r8],al
  415df5:	add    BYTE PTR [rax],al
  415df7:	add    BYTE PTR [rsi],dl
  415df9:	push   rsp
  415dfa:	add    BYTE PTR [r8],al
  415dfd:	add    BYTE PTR [rax],al
  415dff:	add    BYTE PTR [rdx],bl
  415e01:	push   rsp
  415e02:	add    BYTE PTR [r8],al
  415e05:	add    BYTE PTR [rax],al
  415e07:	add    BYTE PTR [rip+0x4154],bl        # 0x419f61
  415e0d:	add    BYTE PTR [rax],al
  415e0f:	add    BYTE PTR [rip+0x4154],ah        # 0x419f69
  415e15:	add    BYTE PTR [rax],al
  415e17:	add    BYTE PTR [rcx],ch
  415e19:	push   rsp
  415e1a:	add    BYTE PTR [r8],al
  415e1d:	add    BYTE PTR [rax],al
  415e1f:	add    BYTE PTR [rax],dh
  415e21:	push   rsp
  415e22:	add    BYTE PTR [r8],al
  415e25:	add    BYTE PTR [rax],al
  415e27:	add    BYTE PTR [rbx],dh
  415e29:	push   rsp
  415e2a:	add    BYTE PTR [r8],al
  415e2d:	add    BYTE PTR [rax],al
  415e2f:	add    BYTE PTR [rcx],bh
  415e31:	push   rsp
  415e32:	add    BYTE PTR [r8],al
  415e35:	add    BYTE PTR [rax],al
  415e37:	add    BYTE PTR [rsp+rdx*2],bh
  415e3a:	add    BYTE PTR [r8],al
  415e3d:	add    BYTE PTR [rax],al
  415e3f:	add    BYTE PTR [rbx+0x54],al
  415e42:	add    BYTE PTR [r8],al
  415e45:	add    BYTE PTR [rax],al
  415e47:	add    BYTE PTR [rsi+0x54],al
  415e4a:	add    BYTE PTR [r8],al
  415e4d:	add    BYTE PTR [rax],al
  415e4f:	add    BYTE PTR [rsp+rdx*2+0x41],cl
  415e53:	add    BYTE PTR [rax],al
  415e55:	add    BYTE PTR [rax],al
  415e57:	add    BYTE PTR [rdi+0x54],cl
  415e5a:	add    BYTE PTR [r8],al
  415e5d:	add    BYTE PTR [rax],al
  415e5f:	add    BYTE PTR [rsp+rdx*2+0x41],dl
  415e63:	add    BYTE PTR [rax],al
  415e65:	add    BYTE PTR [rax],al
  415e67:	add    BYTE PTR [rdi+0x54],dl
  415e6a:	add    BYTE PTR [r8],al
  415e6d:	add    BYTE PTR [rax],al
  415e6f:	add    BYTE PTR [rax+0x54],ah
  415e72:	add    BYTE PTR [r8],al
  415e75:	add    BYTE PTR [rax],al
  415e77:	add    BYTE PTR [rbx+0x54],ah
  415e7a:	add    BYTE PTR [r8],al
  415e7d:	add    BYTE PTR [rax],al
  415e7f:	add    BYTE PTR [rbx+0x54],ch
  415e82:	add    BYTE PTR [r8],al
  415e85:	add    BYTE PTR [rax],al
  415e87:	add    BYTE PTR [rsi+0x54],ch
  415e8a:	add    BYTE PTR [r8],al
  415e8d:	add    BYTE PTR [rax],al
  415e8f:	add    BYTE PTR [rdi+0x54],dh
  415e92:	add    BYTE PTR [r8],al
  415e95:	add    BYTE PTR [rax],al
  415e97:	add    BYTE PTR [rdx+0x54],bh
  415e9a:	add    BYTE PTR [r8],al
  415e9d:	add    BYTE PTR [rax],al
  415e9f:	add    BYTE PTR [rcx+0x4154],al
  415ea5:	add    BYTE PTR [rax],al
  415ea7:	add    BYTE PTR [rsp+rdx*2+0x41],al
  415eae:	add    BYTE PTR [rax],al
  415eb0:	mov    WORD PTR [rcx+rax*2+0x0],ss
  415eb4:	add    BYTE PTR [rax],al
  415eb6:	add    BYTE PTR [rax],al
  415eb8:	(bad)  
  415eb9:	push   rsp
  415eba:	add    BYTE PTR [r8],al
  415ebd:	add    BYTE PTR [rax],al
  415ebf:	add    BYTE PTR [rsi+0x4154],dl
  415ec5:	add    BYTE PTR [rax],al
  415ec7:	add    BYTE PTR [rcx+0x4154],bl
  415ecd:	add    BYTE PTR [rax],al
  415ecf:	add    BYTE PTR [rdi+0x4154],bl
  415ed5:	add    BYTE PTR [rax],al
  415ed7:	add    BYTE PTR [rdx+0x4154],ah
  415edd:	add    BYTE PTR [rax],al
  415edf:	add    BYTE PTR [rcx+0x4154],ch
  415ee5:	add    BYTE PTR [rax],al
  415ee7:	add    BYTE PTR [rsp+rdx*2+0x41],ch
  415eee:	add    BYTE PTR [rax],al
  415ef0:	mov    dh,0x54
  415ef2:	add    BYTE PTR [r8],al
  415ef5:	add    BYTE PTR [rax],al
  415ef7:	add    BYTE PTR [rcx+0x4154],bh
  415efd:	add    BYTE PTR [rax],al
  415eff:	add    BYTE PTR [rsi+0x4154],bh
  415f05:	add    BYTE PTR [rax],al
  415f07:	add    cl,al
  415f09:	push   rsp
  415f0a:	add    BYTE PTR [r8],al
  415f0d:	add    BYTE PTR [rax],al
  415f0f:	add    BYTE PTR [rsi+0x4154],bh
  415f15:	add    BYTE PTR [rax],al
  415f17:	add    bh,al
  415f19:	push   rsp
  415f1a:	add    BYTE PTR [r8],al
  415f1d:	add    BYTE PTR [rax],al
  415f1f:	add    ch,dl
  415f21:	push   rsp
  415f22:	add    BYTE PTR [r8],al
  415f25:	add    BYTE PTR [rax],al
  415f27:	add    cl,ah
  415f29:	push   rsp
  415f2a:	add    BYTE PTR [r8],al
  415f2d:	add    BYTE PTR [rax],al
  415f2f:	add    dl,dh
  415f31:	push   rsp
  415f32:	add    BYTE PTR [r8],al
  415f35:	add    BYTE PTR [rax],al
  415f37:	add    ch,dh
  415f39:	push   rsp
  415f3a:	add    BYTE PTR [r8],al
  415f3d:	add    BYTE PTR [rax],al
  415f3f:	add    bl,bh
  415f41:	push   rsp
  415f42:	add    BYTE PTR [r8],al
  415f45:	add    BYTE PTR [rax],al
  415f47:	add    dh,bh
  415f49:	push   rsp
  415f4a:	add    BYTE PTR [r8],al
  415f4d:	add    BYTE PTR [rax],al
  415f4f:	add    BYTE PTR [rcx],cl
  415f51:	push   rbp
  415f52:	add    BYTE PTR [r8],al
  415f55:	add    BYTE PTR [rax],al
  415f57:	add    BYTE PTR [rip+0x4155],cl        # 0x41a0b2
  415f5d:	add    BYTE PTR [rax],al
  415f5f:	add    BYTE PTR [rip+0x4155],dl        # 0x41a0ba
  415f65:	add    BYTE PTR [rax],al
  415f67:	add    BYTE PTR [rax],bl
  415f69:	push   rbp
  415f6a:	add    BYTE PTR [r8],al
  415f6d:	add    BYTE PTR [rax],al
  415f6f:	add    BYTE PTR [rsi],bl
  415f71:	push   rbp
  415f72:	add    BYTE PTR [r8],al
  415f75:	add    BYTE PTR [rax],al
  415f77:	add    BYTE PTR [rcx],ah
  415f79:	push   rbp
  415f7a:	add    BYTE PTR [r8],al
  415f7d:	add    BYTE PTR [rax],al
  415f7f:	add    BYTE PTR [rdi],ah
  415f81:	push   rbp
  415f82:	add    BYTE PTR [r8],al
  415f85:	add    BYTE PTR [rax],al
  415f87:	add    BYTE PTR [rdx],ch
  415f89:	push   rbp
  415f8a:	add    BYTE PTR [r8],al
  415f8d:	add    BYTE PTR [rax],al
  415f8f:	add    BYTE PTR [rdx],dh
  415f91:	push   rbp
  415f92:	add    BYTE PTR [r8],al
  415f95:	add    BYTE PTR [rax],al
  415f97:	add    BYTE PTR [rip+0x4155],dh        # 0x41a0f2
  415f9d:	add    BYTE PTR [rax],al
  415f9f:	add    BYTE PTR [rdx*2+0x41],bh
  415fa6:	add    BYTE PTR [rax],al
  415fa8:	(bad)  
  415fa9:	push   rbp
  415faa:	add    BYTE PTR [r8],al
  415fad:	add    BYTE PTR [rax],al
  415faf:	add    BYTE PTR [rdi+0x55],al
  415fb2:	add    BYTE PTR [r8],al
  415fb5:	add    BYTE PTR [rax],al
  415fb7:	add    BYTE PTR [rdx+0x55],cl
  415fba:	add    BYTE PTR [r8],al
  415fbd:	add    BYTE PTR [rax],al
  415fbf:	add    BYTE PTR [rbp+0x6e],dl
  415fc2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  415fc6:	outs   dx,BYTE PTR ds:[rsi]
  415fc7:	and    BYTE PTR [rbp+0x72],ah
  415fca:	jb     0x41603b
  415fcc:	jb     0x415fee
  415fce:	and    eax,0x64
	...
  415fdf:	add    BYTE PTR [rbx+0x75],dl
  415fe2:	movsxd esp,DWORD PTR [rbx+0x65]
  415fe5:	jae    0x41605a
  415fe7:	add    BYTE PTR [rbp+riz*2+0x78],dl
  415feb:	je     0x41600d
  415fed:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7562
  415ff4:	jae    0x41606f
  415ff6:	add    BYTE PTR [rsi+0x6f],cl
  415ff9:	and    BYTE PTR [rcx+riz*2+0x74],ah
  415ffd:	(bad)  
  415ffe:	and    BYTE PTR [rcx+0x76],ah
  416001:	(bad)  
  416002:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x4f00656c
  41600a:	jne    0x416080
  41600c:	and    BYTE PTR [rdi+0x66],ch
  41600f:	and    BYTE PTR [rbx+0x74],dh
  416012:	jb     0x416079
  416014:	(bad)  
  416015:	ins    DWORD PTR es:[rdi],dx
  416016:	jae    0x416038
  416018:	jb     0x41607f
  41601a:	jae    0x41608b
  41601c:	jne    0x416090
  41601e:	movsxd esp,DWORD PTR [rbp+0x73]
  416021:	add    BYTE PTR [rbp+riz*2+0x76],al
  416025:	imul   esp,DWORD PTR [rbx+0x65],0x746f6e20
  41602c:	and    BYTE PTR [rcx+0x20],ah
  41602f:	jae    0x4160a5
  416031:	jb     0x416098
  416033:	(bad)  
  416034:	ins    DWORD PTR es:[rdi],dx
  416035:	add    BYTE PTR [rcx+rbp*2+0x6d],dl
  416039:	gs jb  0x41605c
  41603c:	gs js  0x4160af
  41603f:	imul   esi,DWORD PTR [rdx+0x65],0x744f0064
  416046:	push   0x65207265
  41604b:	jb     0x4160bf
  41604d:	outs   dx,DWORD PTR ds:[rsi]
  41604e:	jb     0x416050
  416050:	push   rbx
  416051:	outs   dx,DWORD PTR ds:[rsi]
  416052:	movsxd ebp,DWORD PTR [rbx+0x65]
  416055:	je     0x416077
  416057:	je     0x4160d2
  416059:	jo     0x4160c0
  41605b:	and    BYTE PTR [rsi+0x6f],ch
  41605e:	je     0x416080
  416060:	jae    0x4160d7
  416062:	jo     0x4160d4
  416064:	outs   dx,DWORD PTR ds:[rsi]
  416065:	jb     0x4160db
  416067:	gs add BYTE PTR fs:[rax+0x72],dl
  41606c:	outs   dx,DWORD PTR ds:[rsi]
  41606d:	je     0x4160de
  41606f:	movsxd ebp,DWORD PTR [rdi+0x6c]
  416072:	and    BYTE PTR [rsi+0x61],ah
  416075:	ins    DWORD PTR es:[rdi],dx
  416076:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
  41607e:	jae    0x4160f5
  416080:	jo     0x4160f2
  416082:	outs   dx,DWORD PTR ds:[rsi]
  416083:	jb     0x4160f9
  416085:	gs add BYTE PTR fs:[rbx+0x61],al
  41608a:	outs   dx,BYTE PTR ds:[rsi]
  41608b:	outs   dx,BYTE PTR ds:[rsi]
  41608c:	outs   dx,DWORD PTR ds:[rsi]
  41608d:	je     0x4160af
  41608f:	jae    0x4160f6
  416091:	outs   dx,BYTE PTR ds:[rsi]
  416092:	and    BYTE PTR fs:[rcx+0x66],ah
  416096:	je     0x4160fd
  416098:	jb     0x4160ba
  41609a:	je     0x41610e
  41609c:	(bad)  
  41609d:	outs   dx,BYTE PTR ds:[rsi]
  41609e:	jae    0x416110
  4160a0:	outs   dx,DWORD PTR ds:[rsi]
  4160a1:	jb     0x416117
  4160a3:	and    BYTE PTR [rbp+0x6e],ah
  4160a6:	fs jo  0x416118
  4160a9:	imul   ebp,DWORD PTR [rsi+0x74],0x75687320
  4160b0:	je     0x416116
  4160b2:	outs   dx,DWORD PTR ds:[rsi]
  4160b3:	ja     0x416123
  4160b5:	add    BYTE PTR [rax],al
  4160b7:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
  4160bb:	and    BYTE PTR [rbp+0x61],ch
  4160be:	outs   dx,BYTE PTR ds:[rsi]
  4160bf:	jns    0x4160e1
  4160c1:	jb     0x416128
  4160c3:	data16 gs jb 0x41612c
  4160c7:	outs   dx,BYTE PTR ds:[rsi]
  4160c8:	movsxd esp,DWORD PTR [rbp+0x73]
  4160cb:	cmp    ah,BYTE PTR [rax]
  4160cd:	movsxd esp,DWORD PTR [rcx+0x6e]
  4160d0:	outs   dx,BYTE PTR ds:[rsi]
  4160d1:	outs   dx,DWORD PTR ds:[rsi]
  4160d2:	je     0x4160f4
  4160d4:	jae    0x416146
  4160d6:	ins    BYTE PTR es:[rdi],dx
  4160d7:	imul   esp,DWORD PTR [rbx+0x65],0x736f4800
  4160de:	je     0x416100
  4160e0:	imul   esi,DWORD PTR [rbx+0x20],0x6e776f64
  4160e7:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
  4160eb:	and    BYTE PTR [rbp+0x61],ch
  4160ee:	outs   dx,BYTE PTR ds:[rsi]
  4160ef:	jns    0x416111
  4160f1:	jo     0x416165
  4160f3:	outs   dx,DWORD PTR ds:[rsi]
  4160f4:	movsxd esp,DWORD PTR [rbp+0x73]
  4160f7:	jae    0x41615e
  4160f9:	jae    0x4160fb
  4160fb:	push   rsp
  4160fc:	outs   dx,DWORD PTR ds:[rsi]
  4160fd:	outs   dx,DWORD PTR ds:[rsi]
  4160fe:	and    BYTE PTR [rbp+0x61],ch
  416101:	outs   dx,BYTE PTR ds:[rsi]
  416102:	jns    0x416124
  416104:	jne    0x416179
  416106:	gs jb  0x41617c
  416109:	add    BYTE PTR [rcx+rbp*2+0x73],al
  41610d:	imul   esp,DWORD PTR [rax],0x71
  416110:	jne    0x416181
  416112:	je     0x416175
  416114:	and    BYTE PTR [rbp+0x78],ah
  416117:	movsxd esp,DWORD PTR [rbp+0x65]
  41611a:	fs gs add BYTE PTR fs:[rbx+0x74],dl
  416120:	(bad)  
  416121:	ins    BYTE PTR es:[rdi],dx
  416122:	and    BYTE PTR gs:[rsi+0x46],cl
  416126:	push   rbx
  416127:	and    BYTE PTR [rsi+0x69],ah
  41612a:	ins    BYTE PTR es:[rdi],dx
  41612b:	and    BYTE PTR gs:[rax+0x61],ch
  41612f:	outs   dx,BYTE PTR ds:[rsi]
  416130:	fs ins BYTE PTR es:[rdi],dx
  416132:	add    BYTE PTR gs:[rdi+0x62],cl
  416136:	push   0x65
  416138:	movsxd esi,DWORD PTR [rax+riz*1+0x69]
  41613c:	jae    0x41615e
  41613e:	jb     0x4161a5
  416140:	ins    DWORD PTR es:[rdi],dx
  416141:	outs   dx,DWORD PTR ds:[rsi]
  416142:	je     0x4161a9
  416144:	add    BYTE PTR [rdi+0x76],cl
  416147:	gs jb  0x4161b6
  41614a:	(bad)  
  41614b:	jo     0x4161bd
  41614d:	gs and BYTE PTR fs:[rdi+0x70],ch
  416152:	gs jb  0x4161b6
  416155:	je     0x4161c0
  416157:	outs   dx,DWORD PTR ds:[rsi]
  416158:	outs   dx,BYTE PTR ds:[rsi]
  416159:	and    BYTE PTR [rcx+0x62],ah
  41615c:	outs   dx,DWORD PTR ds:[rsi]
  41615d:	jb     0x4161d3
  41615f:	gs add BYTE PTR fs:[rax],al
  416163:	add    BYTE PTR [rax],al
  416165:	add    BYTE PTR [rax],al
  416167:	add    BYTE PTR [rdi+0x76],cl
  41616a:	gs jb  0x4161d9
  41616d:	(bad)  
  41616e:	jo     0x4161e0
  416170:	gs and BYTE PTR fs:[rcx+0x2f],cl
  416175:	rex.WRXB and BYTE PTR [r13+0x76],r12b
  416179:	outs   dx,BYTE PTR gs:[rsi]
  41617b:	je     0x41619d
  41617d:	outs   dx,DWORD PTR ds:[rsi]
  41617e:	(bad)  
  41617f:	push   0x65
  416181:	movsxd esi,DWORD PTR [rax+riz*1+0x6e]
  416185:	outs   dx,DWORD PTR ds:[rsi]
  416186:	je     0x4161a8
  416188:	imul   ebp,DWORD PTR [rsi+0x20],0x6e676973
  41618f:	(bad)  
  416190:	ins    BYTE PTR es:[rdi],dx
  416191:	gs and BYTE PTR fs:[rbx+0x74],dh
  416196:	(bad)  
  416197:	je     0x4161fe
  416199:	add    BYTE PTR [rax],al
  41619b:	add    BYTE PTR [rax],al
  41619d:	add    BYTE PTR [rax],al
  41619f:	add    BYTE PTR [rdi+0x76],cl
  4161a2:	gs jb  0x416211
  4161a5:	(bad)  
  4161a6:	jo     0x416218
  4161a8:	gs and BYTE PTR fs:[rdi+0x70],ch
  4161ad:	gs jb  0x416211
  4161b0:	je     0x41621b
  4161b2:	outs   dx,DWORD PTR ds:[rsi]
  4161b3:	outs   dx,BYTE PTR ds:[rsi]
  4161b4:	jae    0x4161d6
  4161b6:	ja     0x416221
  4161b8:	ins    BYTE PTR es:[rdi],dx
  4161b9:	ins    BYTE PTR es:[rdi],dx
  4161ba:	and    BYTE PTR [rbx+0x6f],ah
  4161bd:	ins    DWORD PTR es:[rdi],dx
  4161be:	jo     0x41622c
  4161c0:	gs je  0x416228
  4161c3:	and    BYTE PTR [rcx+riz*2+0x74],ch
  4161c7:	gs jb  0x4161ca
  4161ca:	add    BYTE PTR [rax],al
  4161cc:	add    BYTE PTR [rax],al
  4161ce:	add    BYTE PTR [rax],al
  4161d0:	rex.WRX
  4161d1:	gs je  0x41624b
  4161d4:	outs   dx,DWORD PTR ds:[rsi]
  4161d5:	jb     0x416242
  4161d7:	and    BYTE PTR [rbx+0x75],dh
  4161da:	(bad)  
  4161dc:	jns    0x416251
  4161de:	je     0x416245
  4161e0:	ins    DWORD PTR es:[rdi],dx
  4161e1:	and    BYTE PTR [rcx+0x73],ch
  4161e4:	and    BYTE PTR [rbp+0x6e],dh
  4161e7:	(bad)  
  4161e8:	jbe    0x41624b
  4161ea:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
  4161f2:	add    BYTE PTR [rax],al
  4161f4:	add    BYTE PTR [rax],al
  4161f6:	add    BYTE PTR [rax],al
  4161f8:	push   rdi
  4161f9:	imul   ebp,DWORD PTR [rsi+0x73],0x2e6b636f
  416200:	fs ins BYTE PTR es:[rdi],dx
  416202:	ins    BYTE PTR es:[rdi],dx
  416203:	and    BYTE PTR [rsi+0x65],dh
  416206:	jb     0x41627b
  416208:	imul   ebp,DWORD PTR [rdi+0x6e],0x74756f20
  41620f:	and    BYTE PTR [rdi+0x66],ch
  416212:	and    BYTE PTR [rdx+0x61],dh
  416215:	outs   dx,BYTE PTR ds:[rsi]
  416216:	add    BYTE PTR gs:[eax],al
  41621a:	add    BYTE PTR [rax],al
  41621c:	add    BYTE PTR [rax],al
  41621e:	add    BYTE PTR [rax],al
  416220:	push   rbx
  416221:	jne    0x416286
  416223:	movsxd esp,DWORD PTR [rbp+0x73]
  416226:	jae    0x41628e
  416228:	jne    0x416296
  41622a:	and    BYTE PTR [rdi+0x53],dl
  41622d:	push   r11
  41622f:	je     0x416292
  416231:	jb     0x4162a7
  416233:	jne    0x4162a5
  416235:	and    BYTE PTR [rsi+0x6f],ch
  416238:	je     0x41625a
  41623a:	jns    0x4162a1
  41623c:	je     0x41625e
  41623e:	jo     0x4162a5
  416240:	jb     0x4162a8
  416242:	outs   dx,DWORD PTR ds:[rsi]
  416243:	jb     0x4162b2
  416245:	gs add BYTE PTR fs:[rdi+0x72],al
  41624a:	(bad)  
  41624b:	movsxd esp,DWORD PTR [rbp+0x66]
  41624e:	jne    0x4162bc
  416250:	and    BYTE PTR [rbx+0x68],dh
  416253:	jne    0x4162c9
  416255:	outs   dx,DWORD PTR fs:[rsi]
  416257:	ja     0x4162c7
  416259:	and    BYTE PTR [rcx+0x6e],ch
  41625c:	and    BYTE PTR [rax+0x72],dh
  41625f:	outs   dx,DWORD PTR ds:[rsi]
  416260:	addr32 jb 0x4162c8
  416263:	jae    0x4162d8
  416265:	add    BYTE PTR [rsi+0x6f],cl
  416268:	and    BYTE PTR [rbp+0x6f],ch
  41626b:	jb     0x4162d2
  41626d:	and    BYTE PTR [rdx+0x65],dh
  416270:	jae    0x4162e7
  416272:	ins    BYTE PTR es:[rdi],dx
  416273:	je     0x4162e8
  416275:	add    BYTE PTR [rbx+0x61],al
  416278:	ins    BYTE PTR es:[rdi],dx
  416279:	ins    BYTE PTR es:[rdi],dx
  41627a:	and    BYTE PTR [rdi+0x61],dh
  41627d:	jae    0x41629f
  41627f:	movsxd esp,DWORD PTR [rcx+0x6e]
  416282:	movsxd esp,DWORD PTR [rbp+0x6c]
  416285:	gs add BYTE PTR fs:[rax+0x72],dl
  41628a:	outs   dx,DWORD PTR ds:[rsi]
  41628b:	movsxd esp,DWORD PTR [rbp+0x64]
  41628e:	jne    0x416302
  416290:	and    BYTE PTR gs:[rbx+0x61],ah
  416294:	ins    BYTE PTR es:[rdi],dx
  416295:	ins    BYTE PTR es:[rdi],dx
  416296:	and    BYTE PTR [rcx+riz*2+0x62],dh
  41629a:	ins    BYTE PTR es:[rdi],dx
  41629b:	and    BYTE PTR gs:[rcx+0x73],ch
  41629f:	and    BYTE PTR [rcx+0x6e],ch
  4162a2:	jbe    0x416305
  4162a4:	ins    BYTE PTR es:[rdi],dx
  4162a5:	imul   esp,DWORD PTR [rax+rax*1+0x53],0x69767265
  4162ad:	movsxd esp,DWORD PTR [rbp+0x20]
  4162b0:	jo     0x416324
  4162b2:	outs   dx,DWORD PTR ds:[rsi]
  4162b3:	jbe    0x41631e
  4162b5:	fs gs jb 0x4162d9
  4162b9:	imul   esi,DWORD PTR [rbx+0x20],0x61766e69
  4162c0:	ins    BYTE PTR es:[rdi],dx
  4162c1:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x53000000
  4162c9:	gs jb  0x416342
  4162cc:	imul   esp,DWORD PTR [rbx+0x65],0x6f727020
  4162d3:	jbe    0x41633e
  4162d5:	fs gs jb 0x4162f9
  4162d9:	data16 (bad) 
  4162db:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4162e3:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  4162ea:	imul   edi,DWORD PTR [rdx+0x65],0x73795300
  4162f1:	je     0x416358
  4162f3:	ins    DWORD PTR es:[rdi],dx
  4162f4:	and    BYTE PTR [rbx+0x61],ah
  4162f7:	ins    BYTE PTR es:[rdi],dx
  4162f8:	ins    BYTE PTR es:[rdi],dx
  4162f9:	and    BYTE PTR [rsi+0x61],ah
  4162fc:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x65530065
  416304:	jb     0x41637c
  416306:	imul   esp,DWORD PTR [rbx+0x65],0x746f6e20
  41630d:	and    BYTE PTR [rsi+0x6f],ah
  416310:	jne    0x416380
  416312:	add    BYTE PTR fs:[rbx+0x6c],al
  416316:	(bad)  
  416317:	jae    0x41638c
  416319:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  41631d:	and    BYTE PTR gs:[rsi+0x6f],ch
  416321:	je     0x416343
  416323:	outs   dx,WORD PTR ds:[rsi]
  416325:	jne    0x416395
  416327:	add    BYTE PTR fs:[rcx+riz*2+0x74],al
  41632c:	(bad)  
  41632d:	(bad)  
  41632f:	jae    0x416396
  416331:	and    BYTE PTR [rcx+0x75],dh
  416334:	gs jb  0x4163b0
  416337:	and    BYTE PTR [rdi+0x61],dh
  41633a:	jae    0x41635c
  41633c:	jb     0x4163a3
  41633e:	data16 jne 0x4163b4
  416341:	gs add BYTE PTR fs:[rax+0x6f],cl
  416346:	jae    0x4163bc
  416348:	and    BYTE PTR [rsi+0x6f],ch
  41634b:	je     0x41636d
  41634d:	outs   dx,WORD PTR ds:[rsi]
  41634f:	jne    0x4163bf
  416351:	add    BYTE PTR fs:[rax],al
  416354:	add    BYTE PTR [rax],al
  416356:	add    BYTE PTR [rax],al
  416358:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  41635a:	outs   dx,BYTE PTR ds:[rsi]
  41635b:	(bad)  
  41635c:	jne    0x4163d2
  41635e:	push   0x7469726f
  416363:	(bad)  
  416364:	je     0x4163cf
  416366:	jbe    0x4163cd
  416368:	and    BYTE PTR [rax+0x6f],ch
  41636b:	jae    0x4163e1
  41636d:	and    BYTE PTR [rsi+0x6f],ch
  416370:	je     0x416392
  416372:	outs   dx,WORD PTR ds:[rsi]
  416374:	jne    0x4163e4
  416376:	add    BYTE PTR fs:[rsi+0x6f],cl
  41637a:	outs   dx,BYTE PTR ds:[rsi]
  41637b:	jb     0x4163e2
  41637d:	movsxd ebp,DWORD PTR [rdi+0x76]
  416380:	gs jb  0x4163e4
  416383:	(bad)  
  416384:	ins    BYTE PTR es:[rdi],dx
  416385:	and    BYTE PTR gs:[rbp+0x72],ah
  416389:	jb     0x4163fa
  41638b:	jb     0x41638d
  41638d:	add    BYTE PTR [rax],al
  41638f:	add    BYTE PTR [rsi+0x61],dl
  416392:	ins    BYTE PTR es:[rdi],dx
  416393:	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x2c656d61
  41639b:	and    BYTE PTR [rsi+0x6f],ch
  41639e:	and    BYTE PTR [rcx+riz*2+0x74],ah
  4163a2:	(bad)  
  4163a3:	and    BYTE PTR [rdx+0x65],dh
  4163a6:	movsxd ebp,DWORD PTR [rdi+0x72]
  4163a9:	and    BYTE PTR fs:[rdi+0x66],ch
  4163ad:	and    BYTE PTR [rdx+0x65],dh
  4163b0:	jno    0x416427
  4163b2:	gs jae 0x416429
  4163b5:	gs and BYTE PTR fs:[rcx+rdi*2+0x70],dh
  4163bb:	add    BYTE PTR gs:[rsi+0x6f],cl
  4163bf:	and    BYTE PTR [rbp+0x65],ch
  4163c2:	jae    0x416437
  4163c4:	(bad)  
  4163c5:	and    BYTE PTR gs:[edi+0x66],ch
  4163ca:	and    BYTE PTR [rbp+riz*2+0x73],ah
  4163ce:	imul   esi,DWORD PTR [rdx+0x65],0x79742064
  4163d5:	jo     0x41643c
  4163d7:	add    BYTE PTR [rcx+0x64],cl
  4163da:	outs   dx,BYTE PTR gs:[rsi]
  4163dc:	je     0x416447
  4163de:	imul   sp,WORD PTR [rbp+0x72],0x7220
  4163e4:	gs ins DWORD PTR es:[rdi],dx
  4163e6:	outs   dx,DWORD PTR ds:[rsi]
  4163e7:	jbe    0x41644e
  4163e9:	add    BYTE PTR fs:[rcx+rbp*2+0x6e],cl
  4163ee:	imul   esp,DWORD PTR [rax],0x68
  4163f1:	(bad)  
  4163f2:	jae    0x416414
  4163f4:	(bad)  
  4163f5:	gs outs dx,BYTE PTR gs:[rsi]
  4163f8:	and    BYTE PTR [rbx+0x65],dh
  4163fb:	jbe    0x416462
  4163fd:	jb     0x416464
  4163ff:	add    BYTE PTR fs:[rbp+0x75],cl
  416403:	ins    BYTE PTR es:[rdi],dx
  416404:	je     0x41646f
  416406:	push   0x6120706f
  41640b:	je     0x416481
  41640d:	gs ins DWORD PTR es:[rdi],dx
  41640f:	jo     0x416485
  416411:	gs add BYTE PTR fs:[rdx+0x61],al
  416416:	and    BYTE PTR fs:[rbp+0x65],ch
  41641a:	jae    0x41648f
  41641c:	(bad)  
  41641d:	add    BYTE PTR gs:[ebx+0x74],dl
  416422:	(bad)  
  416423:	je     0x41648a
  416425:	and    BYTE PTR [rsi+0x6f],ch
  416428:	je     0x41644a
  41642a:	jb     0x416491
  41642c:	movsxd ebp,DWORD PTR [rdi+0x76]
  41642f:	gs jb  0x416493
  416432:	(bad)  
  416433:	ins    BYTE PTR es:[rdi],dx
  416434:	add    BYTE PTR gs:[rax],al
	...
  41643f:	add    BYTE PTR [rbx+0x50],al
  416442:	cmp    DWORD PTR [rbx],esi
  416444:	add    BYTE PTR ss:[rdi+0x42],al
  416448:	rex.WXB add BYTE PTR [r11+0x50],al
  41644c:	xor    DWORD PTR [rbx],esi
  41644e:	xor    DWORD PTR ss:[rax],eax
  416451:	rex.WX
  416452:	rex.WRXB
  416453:	rex.W
  416454:	rex.B
  416455:	rex.X add BYTE PTR [rbx+0x50],al
  416459:	xor    dh,BYTE PTR [rax]
  41645b:	xor    DWORD PTR [rdx],esi
  41645d:	(bad)  
  41645e:	add    BYTE PTR [rcx+0x53],al
  416461:	rex.XB
  416462:	rex.WB
  416463:	rex.WB add BYTE PTR [r11+0x50],al
  416467:	xor    dh,BYTE PTR [rax]
  416469:	cmp    BYTE PTR [rsi],dh
  41646b:	add    BYTE PTR ss:[rbx+0x4f],cl
  41646f:	rex.WB cmp BYTE PTR [rip+0x50430052],bpl        # 0x508464c8
  416476:	xor    dh,BYTE PTR [rax]
  416478:	cmp    DWORD PTR [rbx],esi
  41647a:	add    BYTE PTR ss:[rdi+0x42],al
  41647e:	xor    dh,BYTE PTR [rbx]
  416480:	xor    DWORD PTR [rdx],esi
  416482:	add    BYTE PTR [rbx+0x50],al
  416485:	xor    dh,BYTE PTR [rcx]
  416487:	cmp    BYTE PTR [rsi],dh
  416489:	add    BYTE PTR ss:[rbx+0x4f],cl
  41648d:	rex.WB cmp BYTE PTR [rip+0x43005552],bpl        # 0x4341b9e6
  416494:	push   rax
  416495:	xor    bh,BYTE PTR [rax]
  416497:	xor    eax,0x49003139
  41649c:	push   rbx
  41649d:	rex.WRXB sub rax,0x39353838
  4164a3:	sub    eax,0x50430031
  4164a8:	xor    bh,BYTE PTR [rax]
  4164aa:	xor    eax,0x49003239
  4164af:	push   rbx
  4164b0:	rex.WRXB sub rax,0x39353838
  4164b6:	sub    eax,0x50430032
  4164bb:	xor    bh,BYTE PTR [rax]
  4164bd:	xor    eax,0x49003339
  4164c2:	push   rbx
  4164c3:	rex.WRXB sub rax,0x39353838
  4164c9:	sub    eax,0x50430033
  4164ce:	xor    bh,BYTE PTR [rax]
  4164d0:	xor    eax,0x49003439
  4164d5:	push   rbx
  4164d6:	rex.WRXB sub rax,0x39353838
  4164dc:	sub    eax,0x50430034
  4164e1:	xor    bh,BYTE PTR [rax]
  4164e3:	xor    eax,0x49003539
  4164e8:	push   rbx
  4164e9:	rex.WRXB sub rax,0x39353838
  4164ef:	sub    eax,0x50430035
  4164f4:	xor    bh,BYTE PTR [rax]
  4164f6:	xor    eax,0x49003639
  4164fb:	push   rbx
  4164fc:	rex.WRXB sub rax,0x39353838
  416502:	sub    eax,0x50430036
  416507:	xor    bh,BYTE PTR [rax]
  416509:	xor    eax,0x49003739
  41650e:	push   rbx
  41650f:	rex.WRXB sub rax,0x39353838
  416515:	sub    eax,0x50430037
  41651a:	xor    bh,BYTE PTR [rax]
  41651c:	xor    eax,0x49003839
  416521:	push   rbx
  416522:	rex.WRXB sub rax,0x39353838
  416528:	sub    eax,0x50430038
  41652d:	xor    bh,BYTE PTR [rax]
  41652f:	xor    eax,0x49003939
  416534:	push   rbx
  416535:	rex.WRXB sub rax,0x39353838
  41653b:	sub    eax,0x50430039
  416540:	xor    bh,BYTE PTR [rax]
  416542:	xor    BYTE PTR ss:[rip+0x4f534900],dh        # 0x4f94ae49
  416549:	sub    eax,0x39353838
  41654e:	sub    eax,0x43003531
  416553:	push   rax
  416554:	xor    edi,DWORD PTR [rax]
  416556:	xor    eax,0x49003839
  41655b:	push   rbx
  41655c:	rex.WRXB sub rax,0x39353838
  416562:	sub    eax,0x50430038
  416567:	xor    eax,0x32333931
  41656c:	add    BYTE PTR [rbp+0x55],al
  41656f:	rex.XB sub eax,0x4300504a
  416575:	push   rax
  416576:	xor    eax,0x36333931
  41657b:	add    BYTE PTR [rdi+0x42],al
  41657e:	xor    dh,BYTE PTR [rbx]
  416580:	xor    DWORD PTR [rdx],esi
  416582:	add    BYTE PTR [rbx+0x50],al
  416585:	xor    eax,0x39343931
  41658a:	add    BYTE PTR [rbp+0x55],al
  41658d:	rex.XB sub eax,0x4300524b
  416593:	push   rax
  416594:	xor    eax,0x30353931
  416599:	add    BYTE PTR [rbp+0x55],al
  41659c:	rex.XB sub eax,0x43005754
  4165a2:	push   rax
  4165a3:	xor    eax,0x36333934
  4165a8:	add    BYTE PTR [rdi+0x42],al
  4165ab:	xor    DWORD PTR [rax],edi
  4165ad:	xor    BYTE PTR [rbx],dh
  4165af:	xor    BYTE PTR [rax],al
  4165b1:	rex.XB push r8
  4165b3:	ss xor eax,0x313030
  4165b9:	push   rbp
  4165ba:	push   rsp
  4165bb:	rex.RX sub eax,0x41000038
  4165c1:	push   rbx
  4165c2:	rex.XB
  4165c3:	rex.WB
  4165c4:	rex.WB add BYTE PTR [r11+0x50],al
  4165c8:	and    eax,0x50430073
  4165cd:	and    eax,0x66610075
  4165d2:	pop    rdi
  4165d3:	pop    rdx
  4165d4:	add    BYTE PTR [r9+0x66],spl
  4165d8:	add    BYTE PTR [rbx+0x71],dh
  4165db:	pop    rdi
  4165dc:	rex.B
  4165dd:	rex.WR add BYTE PTR [rbx+0x71],r14b
  4165e1:	add    BYTE PTR [rdi+0x73],ah
  4165e4:	ja     0x416645
  4165e6:	rex.RX push rdx
  4165e8:	add    BYTE PTR [rdi+0x73],ah
  4165eb:	ja     0x4165ed
  4165ed:	(bad)  
  4165ee:	ins    DWORD PTR es:[rdi],dx
  4165ef:	pop    rdi
  4165f0:	rex.RB push r12
  4165f2:	add    BYTE PTR [rcx+0x6d],ah
  4165f5:	add    BYTE PTR [rcx+0x72],ah
  4165f8:	pop    rdi
  4165f9:	push   rbx
  4165fa:	add    BYTE PTR [r9+0x72],spl
  4165fe:	pop    rdi
  4165ff:	rex.WB push r9
  416601:	add    BYTE PTR [rcx+0x72],ah
  416604:	pop    rdi
  416605:	rex.RB
  416606:	rex.RXB add BYTE PTR [r9+0x72],r12b
  41660a:	pop    rdi
  41660b:	rex.WR pop rcx
  41660d:	add    BYTE PTR [rcx+0x72],ah
  416610:	pop    rdi
  416611:	rex.R pop rdx
  416613:	add    BYTE PTR [rcx+0x72],ah
  416616:	pop    rdi
  416617:	rex.WRB
  416618:	add    BYTE PTR [r9+0x72],spl
  41661c:	pop    rdi
  41661d:	push   rsp
  41661e:	rex.WRX add BYTE PTR [rcx+0x72],r12b
  416622:	pop    rdi
  416623:	rex.WRXB
  416624:	rex.WRB add BYTE PTR [r9+0x72],r12b
  416628:	pop    rdi
  416629:	pop    rcx
  41662a:	add    BYTE PTR [r9+0x72],r12b
  41662e:	pop    rdi
  41662f:	push   rbx
  416630:	pop    rcx
  416631:	add    BYTE PTR [rcx+0x72],ah
  416634:	pop    rdi
  416635:	rex.WX
  416636:	rex.WRXB add BYTE PTR [r9+0x72],r12b
  41663a:	pop    rdi
  41663b:	rex.WR
  41663c:	rex.X add BYTE PTR [rcx+0x72],spl
  416640:	pop    rdi
  416641:	rex.WXB push r15
  416643:	add    BYTE PTR [rcx+0x72],ah
  416646:	pop    rdi
  416647:	rex.B
  416648:	add    BYTE PTR [r9+0x72],r12b
  41664c:	pop    rdi
  41664d:	rex.X
  41664e:	rex.W add BYTE PTR [rcx+0x72],spl
  416652:	pop    rdi
  416653:	push   rcx
  416654:	add    BYTE PTR [r9+0x72],spl
  416658:	add    BYTE PTR [rax+0x79],ch
  41665b:	pop    rdi
  41665c:	rex.B
  41665d:	rex.WRB add BYTE PTR [r8+0x79],r13b
  416661:	add    BYTE PTR [rcx+0x73],ah
  416664:	pop    rdi
  416665:	rex.WB
  416666:	rex.WRX add BYTE PTR [rcx+0x73],r12b
  41666a:	add    BYTE PTR [rcx+0x7a],ah
  41666d:	rex ins BYTE PTR es:[rdi],dx
  41666f:	(bad)  
  416670:	je     0x4166db
  416672:	outs   dx,BYTE PTR ds:[rsi]
  416673:	add    BYTE PTR [rcx+0x7a],ah
  416676:	pop    rdi
  416677:	pop    r10
  416679:	rex ins BYTE PTR es:[rdi],dx
  41667b:	(bad)  
  41667c:	je     0x4166e7
  41667e:	outs   dx,BYTE PTR ds:[rsi]
  41667f:	add    BYTE PTR [rcx+0x7a],ah
  416682:	rex movsxd edi,DWORD PTR [rcx+0x72]
  416686:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x7a610063
  41668e:	pop    rdi
  41668f:	pop    r10
  416691:	rex movsxd edi,DWORD PTR [rcx+0x72]
  416695:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x7a610063
  41669d:	add    BYTE PTR [rdx+0x61],ah
  4166a0:	pop    rdi
  4166a1:	push   rdx
  4166a2:	push   rbp
  4166a3:	add    BYTE PTR [rdx+0x61],ah
  4166a6:	add    BYTE PTR [rbp+0x75],ah
  4166a9:	pop    rdi
  4166aa:	rex.RB push r11
  4166ac:	add    BYTE PTR [rbp+0x75],ah
  4166af:	add    BYTE PTR [rdx+0x65],ah
  4166b2:	pop    rdi
  4166b3:	rex.X pop rcx
  4166b5:	add    BYTE PTR [rdx+0x65],ah
  4166b8:	add    BYTE PTR [rdx+0x6e],ah
  4166bb:	pop    rdi
  4166bc:	rex.WB
  4166bd:	rex.WRX add BYTE PTR [rdx+0x6e],r12b
  4166c1:	pop    rdi
  4166c2:	rex.X
  4166c3:	add    BYTE PTR [rdx+0x6e],r12b
  4166c7:	add    BYTE PTR [rdx+0x72],ah
  4166ca:	pop    rdi
  4166cb:	rex.RX push rdx
  4166cd:	add    BYTE PTR [rdx+0x72],ah
  4166d0:	add    BYTE PTR [rdx+0x67],ah
  4166d3:	pop    rdi
  4166d4:	rex.X
  4166d5:	rex.RXB add BYTE PTR [r10+0x67],r12b
  4166d9:	add    BYTE PTR [rbp+0x79],ch
  4166dc:	pop    rdi
  4166dd:	rex.WRB
  4166de:	rex.WRB add BYTE PTR [r13+0x79],r13b
  4166e2:	add    BYTE PTR [rbx+0x6d],ch
  4166e5:	pop    rdi
  4166e6:	rex.WXB
  4166e7:	rex.W add BYTE PTR [rbx+0x6d],bpl
  4166eb:	add    BYTE PTR [rbx+0x61],ah
  4166ee:	pop    rdi
  4166ef:	rex.RB push r11
  4166f1:	add    BYTE PTR [rbx+0x61],ah
  4166f4:	add    BYTE PTR [rbx+0x68],ah
  4166f7:	jb     0x416758
  4166f9:	push   rbp
  4166fa:	push   rbx
  4166fb:	add    BYTE PTR [rbx+0x68],ah
  4166fe:	jb     0x416700
  416700:	jp     0x41676a
  416702:	pop    rdi
  416703:	push   rsp
  416704:	push   rdi
  416705:	add    BYTE PTR [rdx+0x68],bh
  416708:	pop    rdi
  416709:	rex.XB
  41670a:	rex.WRX add BYTE PTR [rdx+0x68],r15b
  41670e:	pop    rdi
  41670f:	rex.W
  416710:	rex.WXB add BYTE PTR [r10+0x68],dil
  416714:	pop    rdi
  416715:	push   rbx
  416716:	rex.RXB add BYTE PTR [r10+0x68],r15b
  41671a:	pop    rdi
  41671b:	rex.WRB
  41671c:	rex.WRXB add BYTE PTR [r10+0x68],r15b
  416720:	add    BYTE PTR [rbx+0x6f],ah
  416723:	pop    rdi
  416724:	rex.RX push rdx
  416726:	add    BYTE PTR [rbx+0x6f],ah
  416729:	add    BYTE PTR [rax+0x72],ch
  41672c:	add    BYTE PTR [rax+0x72],ch
  41672f:	pop    rdi
  416730:	rex.W push rdx
  416732:	add    BYTE PTR [rax+0x72],ch
  416735:	pop    rdi
  416736:	rex.X
  416737:	add    BYTE PTR [r11+0x72],sil
  41673b:	add    BYTE PTR [rbx+0x72],dh
  41673e:	pop    rdi
  41673f:	rex.XB push r11
  416741:	add    BYTE PTR [rbx+0x72],dh
  416744:	pop    rdi
  416745:	push   rdx
  416746:	push   rbx
  416747:	add    BYTE PTR [rbx+0x72],dh
  41674a:	pop    rdi
  41674b:	rex.WRB
  41674c:	add    BYTE PTR [r11+0x72],r14b
  416750:	pop    rdi
  416751:	rex.X
  416752:	add    BYTE PTR [r11+0x72],sil
  416756:	rex movsxd edi,DWORD PTR [rcx+0x72]
  41675a:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x72730063
  416762:	pop    rdi
  416763:	rex.XB push r11
  416765:	rex movsxd edi,DWORD PTR [rcx+0x72]
  416769:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x72730063
  416771:	pop    rdi
  416772:	push   rdx
  416773:	push   rbx
  416774:	rex movsxd edi,DWORD PTR [rcx+0x72]
  416778:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x72730063
  416780:	pop    rdi
  416781:	rex.WRB
  416782:	rex.RB
  416783:	rex movsxd edi,DWORD PTR [rcx+0x72]
  416787:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x72730063
  41678f:	pop    rdi
  416790:	rex.X
  416791:	rex.B
  416792:	rex movsxd edi,DWORD PTR [rcx+0x72]
  416796:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x73620063
  41679e:	add    BYTE PTR [rdx+0x73],ah
  4167a1:	pop    rdi
  4167a2:	rex.X
  4167a3:	add    BYTE PTR [r10+0x73],spl
  4167a7:	rex movsxd edi,DWORD PTR [rcx+0x72]
  4167ab:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x73620063
  4167b3:	pop    rdi
  4167b4:	rex.X
  4167b5:	rex.B
  4167b6:	rex movsxd edi,DWORD PTR [rcx+0x72]
  4167ba:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x430063
  4167c2:	movsxd esi,DWORD PTR [rbx+0x5f]
  4167c5:	rex.XB pop r10
  4167c7:	add    BYTE PTR [rbx+0x73],ah
  4167ca:	add    BYTE PTR [rcx+riz*2+0x5f],ah
  4167ce:	rex.R
  4167cf:	rex.WXB add BYTE PTR [r9+r12*2+0x0],spl
  4167d4:	jo     0x416848
  4167d6:	jae    0x416837
  4167d8:	rex.B
  4167d9:	rex.RX add BYTE PTR [rax+0x72],r14b
  4167dd:	jae    0x4167df
  4167df:	fs jbe 0x416841
  4167e2:	rex.WRB push r14
  4167e4:	add    BYTE PTR [rsi+rsi*2+0x0],ah
  4167e8:	outs   dx,BYTE PTR ds:[rsi]
  4167e9:	ins    BYTE PTR es:[rdi],dx
  4167ea:	pop    rdi
  4167eb:	rex.WRX
  4167ec:	rex.WR add BYTE PTR [rsi+0x6c],r13b
  4167f0:	pop    rdi
  4167f1:	rex.X
  4167f2:	add    BYTE PTR [r14+0x6c],r13b
  4167f6:	pop    rdi
  4167f7:	push   rbx
  4167f8:	push   rdx
  4167f9:	add    BYTE PTR [rsi+0x6c],ch
  4167fc:	add    BYTE PTR [rdx+0x69],ah
  4167ff:	outs   dx,BYTE PTR ds:[rsi]
  416800:	pop    rdi
  416801:	rex.WRX
  416802:	rex.RXB add BYTE PTR [r10+0x69],r12b
  416806:	outs   dx,BYTE PTR ds:[rsi]
  416807:	add    BYTE PTR [rbp+0x6e],ah
  41680a:	pop    rdi
  41680b:	push   rbp
  41680c:	push   rbx
  41680d:	add    BYTE PTR [rbp+0x6e],ah
  416810:	pop    rdi
  416811:	rex.RXB
  416812:	rex.X add BYTE PTR [rbp+0x6e],spl
  416816:	pop    rdi
  416817:	push   r13
  416819:	add    BYTE PTR [rbp+0x6e],ah
  41681c:	pop    rdi
  41681d:	rex.XB
  41681e:	add    BYTE PTR [r13+0x6e],spl
  416822:	pop    rdi
  416823:	rex.WRX pop rdx
  416825:	add    BYTE PTR [rbp+0x6e],ah
  416828:	pop    rdi
  416829:	rex.WB
  41682a:	add    BYTE PTR [r13+0x6e],r12b
  41682e:	pop    rdi
  41682f:	pop    rdx
  416830:	add    BYTE PTR [r13+0x6e],spl
  416834:	pop    rdi
  416835:	rex.WX
  416836:	rex.WRB add BYTE PTR [r13+0x6e],r12b
  41683a:	pop    rdi
  41683b:	rex.RXB
  41683c:	add    BYTE PTR [rbp+0x6e],r12b
  416840:	pop    rdi
  416841:	rex.X pop rdx
  416843:	add    BYTE PTR [rbp+0x6e],ah
  416846:	pop    rdi
  416847:	push   rsp
  416848:	push   rsp
  416849:	add    BYTE PTR [rbp+0x6e],ah
  41684c:	pop    rdi
  41684d:	pop    rdx
  41684e:	push   rdi
  41684f:	add    BYTE PTR [rbp+0x6e],ah
  416852:	pop    rdi
  416853:	push   rax
  416854:	rex.W add BYTE PTR [rbp+0x6e],spl
  416858:	pop    rdi
  416859:	rex.WB
  41685a:	add    BYTE PTR [rbp+0x6e],r12b
  41685e:	pop    rdi
  41685f:	rex.W
  416860:	rex.WXB add BYTE PTR [r13+0x6e],spl
  416864:	pop    rdi
  416865:	rex.WB
  416866:	rex.WRX add BYTE PTR [rbp+0x6e],r12b
  41686a:	pop    rdi
  41686b:	rex.WRB pop r9
  41686d:	add    BYTE PTR [rbp+0x6e],ah
  416870:	pop    rdi
  416871:	push   rbx
  416872:	rex.RXB add BYTE PTR [r13+0x6e],r12b
  416876:	add    BYTE PTR [rbp+0x74],ah
  416879:	pop    rdi
  41687a:	rex.RB
  41687b:	add    BYTE PTR [r13+0x74],r12b
  41687f:	add    BYTE PTR [rsi+0x6f],ah
  416882:	pop    rdi
  416883:	rex.RX
  416884:	rex.WRXB add BYTE PTR [r14+0x6f],r12b
  416888:	add    BYTE PTR [rsi+0x61],ah
  41688b:	pop    rdi
  41688c:	rex.WB push r10
  41688e:	add    BYTE PTR [rsi+0x61],ah
  416891:	add    BYTE PTR [rsi+0x69],ah
  416894:	pop    rdi
  416895:	rex.RX
  416896:	rex.WB add BYTE PTR [r14+0x69],spl
  41689a:	add    BYTE PTR [rsi+0x72],ah
  41689d:	pop    rdi
  41689e:	rex.RX push rdx
  4168a0:	add    BYTE PTR [rsi+0x72],ah
  4168a3:	pop    rdi
  4168a4:	rex.X
  4168a5:	add    BYTE PTR [r14+0x72],r12b
  4168a9:	pop    rdi
  4168aa:	rex.XB
  4168ab:	add    BYTE PTR [r14+0x72],spl
  4168af:	pop    rdi
  4168b0:	rex.XB
  4168b1:	rex.W add BYTE PTR [rsi+0x72],spl
  4168b5:	pop    rdi
  4168b6:	rex.WR push rbp
  4168b8:	add    BYTE PTR [rsi+0x72],ah
  4168bb:	pop    rdi
  4168bc:	rex.WRB
  4168bd:	rex.XB add BYTE PTR [r14+0x72],spl
  4168c1:	add    BYTE PTR [rsi+0x72],ah
  4168c4:	pop    rdi
  4168c5:	push   rdx
  4168c6:	add    BYTE PTR [r14+0x72],r12b
  4168ca:	pop    rdi
  4168cb:	rex.XB
  4168cc:	rex.RXB add BYTE PTR [r14+0x72],r12b
  4168d0:	pop    rdi
  4168d1:	push   rbx
  4168d2:	rex.WRX add BYTE PTR [rsi+0x72],r12b
  4168d6:	pop    rdi
  4168d7:	rex.XB
  4168d8:	rex.WRB add BYTE PTR [r14+0x72],r12b
  4168dc:	pop    rdi
  4168dd:	rex.XB
  4168de:	rex.WB add BYTE PTR [r14+0x72],spl
  4168e2:	pop    rdi
  4168e3:	rex.WRB
  4168e4:	rex.WR add BYTE PTR [rsi+0x72],r12b
  4168e8:	pop    rdi
  4168e9:	rex.WRB
  4168ea:	add    BYTE PTR [r14+0x72],spl
  4168ee:	pop    rdi
  4168ef:	rex.W push rsp
  4168f1:	add    BYTE PTR [rsi+0x79],ah
  4168f4:	pop    rdi
  4168f5:	rex.WRX
  4168f6:	rex.WR add BYTE PTR [rsi+0x79],r12b
  4168fa:	add    BYTE PTR [rsi+0x66],ah
  4168fd:	pop    rdi
  4168fe:	rex.WRX
  4168ff:	rex.RXB add BYTE PTR [r14+0x66],r12b
  416903:	add    BYTE PTR [rdi+0x64],ah
  416906:	pop    rdi
  416907:	rex.RXB
  416908:	rex.X add BYTE PTR [rdi+0x61],spl
  41690c:	pop    rdi
  41690d:	rex.WB
  41690e:	add    BYTE PTR [r15+0x61],r12b
  416912:	add    BYTE PTR [rdi+0x6c],ah
  416915:	pop    rdi
  416916:	rex.RB push r11
  416918:	add    BYTE PTR [rdi+0x6c],ah
  41691b:	add    BYTE PTR [rbx+0x61],ch
  41691e:	pop    rdi
  41691f:	rex.RXB
  416920:	add    BYTE PTR [r11+0x61],r13b
  416924:	add    BYTE PTR [rbp+riz*2+0x5f],ah
  416928:	rex.R
  416929:	add    BYTE PTR [r13+riz*2+0x5f],r12b
  41692e:	rex.XB
  41692f:	rex.W add BYTE PTR [rbp+riz*2+0x5f],spl
  416934:	push   r12
  416936:	add    BYTE PTR [rbp+riz*2+0x5f],ah
  41693a:	rex.WR push rbp
  41693c:	add    BYTE PTR [rbp+riz*2+0x5f],ah
  416940:	rex.WR
  416941:	rex.WB add BYTE PTR [r13+riz*2+0x0],spl
  416946:	gs ins BYTE PTR es:[rdi],dx
  416948:	pop    rdi
  416949:	rex.RXB push r10
  41694b:	add    BYTE PTR [rbp+0x6c],ah
  41694e:	add    BYTE PTR [rbx+0x6c],ch
  416951:	pop    rdi
  416952:	rex.RXB
  416953:	rex.WR add BYTE PTR [rbx+0x6c],r13b
  416957:	add    BYTE PTR [rdi+0x6e],ah
  41695a:	pop    rdi
  41695b:	push   rax
  41695c:	pop    rcx
  41695d:	add    BYTE PTR [rdi+0x6e],ah
  416960:	add    BYTE PTR [rdi+0x75],ah
  416963:	pop    rdi
  416964:	rex.WB
  416965:	rex.WRX add BYTE PTR [rdi+0x75],r12b
  416969:	add    BYTE PTR [rax+0x61],ch
  41696c:	add    BYTE PTR [rax+0x61],ch
  41696f:	pop    rdi
  416970:	rex.WRX
  416971:	rex.RXB add BYTE PTR [r10+0x75],r15b
  416975:	add    BYTE PTR [rbx+0x70],ah
  416978:	gs pop rdi
  41697a:	push   rbp
  41697b:	push   rbx
  41697c:	add    BYTE PTR [rbx+0x70],ah
  41697f:	add    BYTE PTR gs:[rax+0x65],ch
  416983:	pop    rdi
  416984:	rex.WB
  416985:	rex.WR add BYTE PTR [rax+0x65],r13b
  416989:	add    BYTE PTR [rax+0x69],ch
  41698c:	pop    rdi
  41698d:	rex.WB
  41698e:	rex.WRX add BYTE PTR [rax+0x69],r13b
  416992:	add    BYTE PTR [rax+0x75],ch
  416995:	pop    rdi
  416996:	rex.W push rbp
  416998:	add    BYTE PTR [rax+0x75],ch
  41699b:	add    BYTE PTR [rsi+0x69],ch
  41699e:	movsxd ebx,DWORD PTR [rdi+0x4e]
  4169a1:	rex.RXB add BYTE PTR [r14+0x69],r13b
  4169a5:	movsxd eax,DWORD PTR [rax]
  4169a7:	imul   esi,DWORD PTR [rbx+0x5f],0x69005349
  4169ae:	jae    0x4169b0
  4169b0:	imul   esp,DWORD PTR [rdi+0x5f],0x6900474e
  4169b7:	add    BYTE PTR [ecx+0x64],ch
  4169bb:	pop    rdi
  4169bc:	rex.WB
  4169bd:	add    BYTE PTR [rcx+0x64],r13b
  4169c1:	add    BYTE PTR [rcx+0x75],ch
  4169c4:	add    BYTE PTR [rcx+0x75],ch
  4169c7:	pop    rdi
  4169c8:	rex.XB
  4169c9:	add    BYTE PTR [r9+0x75],bpl
  4169cd:	rex ins BYTE PTR es:[rdi],dx
  4169cf:	(bad)  
  4169d0:	je     0x416a3b
  4169d2:	outs   dx,BYTE PTR ds:[rsi]
  4169d3:	add    BYTE PTR [rcx+0x75],ch
  4169d6:	pop    rdi
  4169d7:	rex.XB
  4169d8:	rex.B
  4169d9:	rex ins BYTE PTR es:[rdi],dx
  4169db:	(bad)  
  4169dc:	je     0x416a47
  4169de:	outs   dx,BYTE PTR ds:[rsi]
  4169df:	add    BYTE PTR [rdx+0x75],bh
  4169e2:	pop    rdi
  4169e3:	pop    rdx
  4169e4:	add    BYTE PTR [r9+0x74],bpl
  4169e8:	pop    rdi
  4169e9:	rex.WB push r12
  4169eb:	add    BYTE PTR [rcx+0x74],ch
  4169ee:	pop    rdi
  4169ef:	rex.XB
  4169f0:	rex.W add BYTE PTR [rcx+0x74],bpl
  4169f4:	add    BYTE PTR [rdx+0x61],ch
  4169f7:	pop    rdi
  4169f8:	rex.WX push rax
  4169fa:	add    BYTE PTR [rdx+0x61],ch
  4169fd:	add    BYTE PTR [rbx+0x6e],ch
  416a00:	pop    rdi
  416a01:	rex.WB
  416a02:	rex.WRX add BYTE PTR [rbx+0x6e],r13b
  416a06:	add    BYTE PTR [rbx+0x72],ch
  416a09:	pop    rdi
  416a0a:	rex.WRX
  416a0b:	rex.RXB add BYTE PTR [r11+0x72],r13b
  416a0f:	add    BYTE PTR [rbx+0x73],ch
  416a12:	pop    rdi
  416a13:	push   rax
  416a14:	rex.WXB add BYTE PTR [r11+0x73],bpl
  416a18:	pop    rdi
  416a19:	rex.WB
  416a1a:	rex.WRX add BYTE PTR [rbx+0x73],r13b
  416a1e:	add    BYTE PTR [rbx+0x6b],ch
  416a21:	pop    rdi
  416a22:	rex.WXB pop r10
  416a24:	add    BYTE PTR [rbx+0x6b],ch
  416a27:	add    BYTE PTR [rcx+0x75],dh
  416a2a:	je     0x416a8b
  416a2c:	rex.RXB push r12
  416a2e:	add    BYTE PTR [rcx+0x75],dh
  416a31:	je     0x416a33
  416a33:	jb     0x416aac
  416a35:	pop    rdi
  416a36:	push   rdx
  416a37:	push   rdi
  416a38:	add    BYTE PTR [rdx+0x77],dh
  416a3b:	add    BYTE PTR [rbx+0x6f],ch
  416a3e:	imul   ebx,DWORD PTR [rdi+0x49],0x4e
  416a42:	add    BYTE PTR [rbx+0x6f],ch
  416a45:	imul   eax,DWORD PTR [rax],0x6b
  416a48:	outs   dx,DWORD PTR ds:[rsi]
  416a49:	pop    rdi
  416a4a:	rex.WXB push r10
  416a4c:	add    BYTE PTR [rbx+0x6f],ch
  416a4f:	add    BYTE PTR [rbx+0x79],ch
  416a52:	pop    rdi
  416a53:	rex.WXB
  416a54:	rex.RXB add BYTE PTR [r11+0x79],r13b
  416a58:	add    BYTE PTR [rdi+rbp*2+0x5f],ch
  416a5c:	rex.WR
  416a5d:	add    BYTE PTR [r15+rbp*2+0x0],bpl
  416a62:	ins    BYTE PTR es:[rdi],dx
  416a63:	(bad)  
  416a64:	pop    rdi
  416a65:	push   rsi
  416a66:	add    BYTE PTR [r9+riz*2+0x0],bpl
  416a6b:	ins    BYTE PTR es:[rdi],dx
  416a6c:	jbe    0x416acd
  416a6e:	rex.WR push rsi
  416a70:	add    BYTE PTR [rsi+rsi*2+0x0],ch
  416a74:	ins    BYTE PTR es:[rdi],dx
  416a75:	je     0x416ad6
  416a77:	rex.WR push rsp
  416a79:	add    BYTE PTR [rsp+rsi*2+0x0],ch
  416a7d:	ins    BYTE PTR es:[rdi],dx
  416a7e:	(bad)  
  416a7f:	pop    rdi
  416a80:	rex.WR push rbp
  416a82:	add    BYTE PTR [rdx+riz*2+0x0],ch
  416a86:	ins    DWORD PTR es:[rdi],dx
  416a87:	imul   ebx,DWORD PTR [rdi+0x4d],0x4b
  416a8b:	add    BYTE PTR [rbp+0x6b],ch
  416a8e:	add    BYTE PTR [rbp+0x73],ch
  416a91:	pop    rdi
  416a92:	rex.WRB pop r9
  416a94:	add    BYTE PTR [rbp+0x73],ch
  416a97:	pop    rdi
  416a98:	rex.X
  416a99:	rex.WRX add BYTE PTR [rbp+0x73],r13b
  416a9d:	add    BYTE PTR [rbp+0x6c],ch
  416aa0:	pop    rdi
  416aa1:	rex.WB
  416aa2:	rex.WRX add BYTE PTR [rbp+0x6c],r13b
  416aa6:	add    BYTE PTR [rbp+0x74],ch
  416aa9:	pop    rdi
  416aaa:	rex.WRB push r12
  416aac:	add    BYTE PTR [rbp+0x74],ch
  416aaf:	add    BYTE PTR [rbp+0x6e],ch
  416ab2:	imul   ebx,DWORD PTR [rdi+0x49],0x6e6d004e
  416ab9:	imul   eax,DWORD PTR [rax],0x4e5f696d
  416abf:	pop    rdx
  416ac0:	add    BYTE PTR [rbp+0x69],ch
  416ac3:	add    BYTE PTR [rcx+0x72],ah
  416ac6:	outs   dx,BYTE PTR ds:[rsi]
  416ac7:	pop    rdi
  416ac8:	rex.XB
  416ac9:	rex.WR add BYTE PTR [rcx+0x72],r12b
  416acd:	outs   dx,BYTE PTR ds:[rsi]
  416ace:	add    BYTE PTR [rbp+0x72],ch
  416ad1:	pop    rdi
  416ad2:	rex.WB
  416ad3:	rex.WRX add BYTE PTR [rbp+0x72],r13b
  416ad7:	add    BYTE PTR [rbp+0x6f],ch
  416ada:	push   0x41435f
  416adf:	ins    DWORD PTR es:[rdi],dx
  416ae0:	outs   dx,DWORD PTR ds:[rsi]
  416ae1:	push   0x5f6e6d00
  416ae6:	rex.WRB
  416ae7:	rex.WRX add BYTE PTR [rbp+0x6e],r13b
  416aeb:	pop    rdi
  416aec:	rex.XB
  416aed:	rex.WRX add BYTE PTR [rbp+0x6e],r13b
  416af1:	add    BYTE PTR [rsi+0x65],ch
  416af4:	pop    rdi
  416af5:	rex.WRX push rax
  416af7:	add    BYTE PTR [rsi+0x65],ch
  416afa:	pop    rdi
  416afb:	rex.WB
  416afc:	rex.WRX add BYTE PTR [rsi+0x65],r13b
  416b00:	add    BYTE PTR [rsi+0x62],ch
  416b03:	add    BYTE PTR [rsi+0x62],ch
  416b06:	pop    rdi
  416b07:	rex.WRX
  416b08:	rex.WRXB add BYTE PTR [r14+0x6e],r13b
  416b0c:	add    BYTE PTR [rsi+0x6e],ch
  416b0f:	pop    rdi
  416b10:	rex.WRX
  416b11:	rex.WRXB add BYTE PTR [r14+0x6f],r13b
  416b15:	add    BYTE PTR [rdi+0x63],ch
  416b18:	pop    rdi
  416b19:	rex.RX push rdx
  416b1b:	add    BYTE PTR [rdi+0x63],ch
  416b1e:	add    BYTE PTR [rdi+0x72],ch
  416b21:	pop    rdi
  416b22:	rex.WB
  416b23:	rex.WRX add BYTE PTR [rdi+0x72],r13b
  416b27:	add    BYTE PTR [rdi+0x6d],ch
  416b2a:	pop    rdi
  416b2b:	rex.RB push r12
  416b2d:	add    BYTE PTR [rdi+0x6d],ch
  416b30:	add    BYTE PTR [rax+0x61],dh
  416b33:	jo     0x416b94
  416b35:	rex.B
  416b36:	rex.WRX add BYTE PTR [rax+0x61],r14b
  416b3a:	jo     0x416b3c
  416b3c:	jo     0x416bb1
  416b3e:	pop    rdi
  416b3f:	rex.B
  416b40:	rex.RX add BYTE PTR [rax+0x73],r14b
  416b44:	add    BYTE PTR [rax+0x6c],dh
  416b47:	pop    rdi
  416b48:	push   rax
  416b49:	rex.WR add BYTE PTR [rax+0x6c],r14b
  416b4d:	add    BYTE PTR [rax+0x74],dh
  416b50:	pop    rdi
  416b51:	rex.X push rdx
  416b53:	add    BYTE PTR [rax+0x74],dh
  416b56:	pop    rdi
  416b57:	push   rax
  416b58:	push   rsp
  416b59:	add    BYTE PTR [rax+0x74],dh
  416b5c:	add    BYTE PTR [rax+0x61],dh
  416b5f:	pop    rdi
  416b60:	rex.WB
  416b61:	rex.WRX add BYTE PTR [rax+0x61],r14b
  416b65:	pop    rdi
  416b66:	push   rax
  416b67:	rex.WXB add BYTE PTR [r8+0x61],sil
  416b6b:	add    BYTE PTR [rcx+0x75],dh
  416b6e:	pop    rdi
  416b6f:	rex.X
  416b70:	rex.WRXB add BYTE PTR [r9+0x75],r14b
  416b74:	pop    rdi
  416b75:	rex.RB
  416b76:	rex.XB add BYTE PTR [r9+0x75],sil
  416b7a:	pop    rdi
  416b7b:	push   rax
  416b7c:	add    BYTE PTR [r9+0x75],r14b
  416b80:	add    BYTE PTR [rdx+0x6f],dh
  416b83:	pop    rdi
  416b84:	push   rdx
  416b85:	rex.WRXB add BYTE PTR [r10+0x6f],r14b
  416b89:	pop    rdi
  416b8a:	rex.WRB
  416b8b:	add    BYTE PTR [rdx+0x6f],r14b
  416b8f:	add    BYTE PTR [rdx+0x6d],dh
  416b92:	pop    rdi
  416b93:	rex.XB
  416b94:	rex.W add BYTE PTR [rdx+0x6d],sil
  416b98:	add    BYTE PTR [rdx+0x75],dh
  416b9b:	pop    rdi
  416b9c:	push   rdx
  416b9d:	push   rbp
  416b9e:	add    BYTE PTR [rdx+0x75],dh
  416ba1:	pop    rdi
  416ba2:	rex.WRB
  416ba3:	add    BYTE PTR [rdx+0x75],r14b
  416ba7:	add    BYTE PTR [rbx+0x65],dh
  416baa:	add    BYTE PTR [rbx+0x65],dh
  416bad:	pop    rdi
  416bae:	rex.WRX
  416baf:	rex.WRXB add BYTE PTR [r11+0x65],r14b
  416bb3:	pop    rdi
  416bb4:	push   rbx
  416bb5:	add    BYTE PTR [r11+0x65],r14b
  416bb9:	pop    rdi
  416bba:	rex.RX
  416bbb:	rex.WB add BYTE PTR [r11+0x6d],sil
  416bbf:	push   0x0
  416bc1:	jae    0x416c30
  416bc3:	push   0x5f
  416bc5:	rex.WRX
  416bc6:	rex.WRXB add BYTE PTR [r11+0x6d],r14b
  416bca:	push   0x5f
  416bcc:	push   rbx
  416bcd:	add    BYTE PTR [r11+0x6d],r14b
  416bd1:	(bad)  
  416bd2:	add    BYTE PTR [rbx+0x6d],dh
  416bd5:	(bad)  
  416bd6:	pop    rdi
  416bd7:	rex.WRX
  416bd8:	rex.WRXB add BYTE PTR [r11+0x6d],r14b
  416bdc:	(bad)  
  416bdd:	pop    rdi
  416bde:	push   rbx
  416bdf:	add    BYTE PTR [r11+0x6d],r14b
  416be3:	jae    0x416be5
  416be5:	jae    0x416c54
  416be7:	jae    0x416c48
  416be9:	rex.RX
  416bea:	rex.WB add BYTE PTR [r11+0x6d],sil
  416bee:	outs   dx,BYTE PTR ds:[rsi]
  416bef:	add    BYTE PTR [rbx+0x6d],dh
  416bf2:	outs   dx,BYTE PTR ds:[rsi]
  416bf3:	pop    rdi
  416bf4:	rex.RX
  416bf5:	rex.WB add BYTE PTR [r9+0x6f],dil
  416bf9:	add    BYTE PTR [rbx+0x61],dh
  416bfc:	pop    rdi
  416bfd:	rex.WB
  416bfe:	rex.WRX add BYTE PTR [rbx+0x61],r14b
  416c02:	add    BYTE PTR [rdi+0x64],ah
  416c05:	add    BYTE PTR [rbx+0x64],dh
  416c08:	pop    rdi
  416c09:	rex.WB
  416c0a:	rex.WRX add BYTE PTR [rbx+0x64],r14b
  416c0e:	pop    rdi
  416c0f:	push   rax
  416c10:	rex.WXB add BYTE PTR [r11+0x64],sil
  416c14:	add    BYTE PTR [rbx+0x69],dh
  416c17:	pop    rdi
  416c18:	rex.WR
  416c19:	rex.WXB add BYTE PTR [r11+0x69],sil
  416c1d:	add    BYTE PTR [rbx+0x6b],dh
  416c20:	pop    rdi
  416c21:	push   rbx
  416c22:	rex.WXB add BYTE PTR [r11+0x6b],sil
  416c26:	add    BYTE PTR [rbx+0x6c],dh
  416c29:	pop    rdi
  416c2a:	push   rbx
  416c2b:	rex.WB add BYTE PTR [r11+0x6c],sil
  416c2f:	add    BYTE PTR [rbx+0x6f],dh
  416c32:	pop    rdi
  416c33:	push   rbx
  416c34:	rex.WRXB add BYTE PTR [r11+0x6f],r14b
  416c38:	add    BYTE PTR [rax+0x73],ch
  416c3b:	(bad)  
  416c3c:	add    BYTE PTR [rax+0x73],ch
  416c3f:	(bad)  
  416c40:	pop    rdi
  416c41:	rex.R
  416c42:	add    BYTE PTR [r11+rsi*2+0x62],r12b
  416c47:	add    BYTE PTR [rbx+rsi*2+0x62],ah
  416c4b:	pop    rdi
  416c4c:	rex.R
  416c4d:	add    BYTE PTR [r15+0x65],r14b
  416c51:	outs   dx,BYTE PTR ds:[rsi]
  416c52:	add    BYTE PTR [rsi+0x73],ch
  416c55:	outs   dx,DWORD PTR ds:[rsi]
  416c56:	pop    rdi
  416c57:	pop    rdx
  416c58:	add    BYTE PTR [r14+0x73],bpl
  416c5c:	outs   dx,DWORD PTR ds:[rsi]
  416c5d:	add    BYTE PTR [rbp+0x73],ah
  416c60:	pop    rdi
  416c61:	rex.RB push r11
  416c63:	add    BYTE PTR [rbp+0x73],ah
  416c66:	pop    rdi
  416c67:	rex.WRB pop r8
  416c69:	add    BYTE PTR [rbp+0x73],ah
  416c6c:	pop    rdi
  416c6d:	rex.RB push r11
  416c6f:	rex ins DWORD PTR es:[rdi],dx
  416c71:	outs   dx,DWORD PTR ds:[rsi]
  416c72:	fs gs jb 0x416ce4
  416c76:	add    BYTE PTR [rbp+0x73],ah
  416c79:	pop    rdi
  416c7a:	rex.RXB push r12
  416c7c:	add    BYTE PTR [rbp+0x73],ah
  416c7f:	pop    rdi
  416c80:	rex.XB push r10
  416c82:	add    BYTE PTR [rbp+0x73],ah
  416c85:	pop    rdi
  416c86:	push   rax
  416c87:	add    BYTE PTR [r13+0x73],spl
  416c8b:	pop    rdi
  416c8c:	rex.R
  416c8d:	rex.WRXB add BYTE PTR [r13+0x73],r12b
  416c91:	pop    rdi
  416c92:	push   rsi
  416c93:	add    BYTE PTR [r13+0x73],r12b
  416c97:	pop    rdi
  416c98:	rex.XB
  416c99:	rex.WRXB add BYTE PTR [r13+0x73],r12b
  416c9d:	pop    rdi
  416c9e:	push   rax
  416c9f:	add    BYTE PTR [r13+0x73],r12b
  416ca3:	pop    rdi
  416ca4:	push   r10
  416ca6:	add    BYTE PTR [rbp+0x73],ah
  416ca9:	pop    rdi
  416caa:	rex.RB
  416cab:	rex.XB add BYTE PTR [r13+0x73],spl
  416caf:	pop    rdi
  416cb0:	rex.XB
  416cb1:	rex.WR add BYTE PTR [rbp+0x73],r12b
  416cb5:	pop    rdi
  416cb6:	push   rbp
  416cb7:	pop    rcx
  416cb8:	add    BYTE PTR [rbp+0x73],ah
  416cbb:	pop    rdi
  416cbc:	push   rax
  416cbd:	pop    rcx
  416cbe:	add    BYTE PTR [rbp+0x73],ah
  416cc1:	pop    rdi
  416cc2:	rex.X
  416cc3:	rex.WRXB add BYTE PTR [r13+0x73],r12b
  416cc7:	pop    rdi
  416cc8:	push   rbx
  416cc9:	push   rsi
  416cca:	add    BYTE PTR [rbp+0x73],ah
  416ccd:	pop    rdi
  416cce:	rex.W
  416ccf:	rex.WRX add BYTE PTR [rbp+0x73],r12b
  416cd3:	pop    rdi
  416cd4:	rex.WRX
  416cd5:	rex.WB add BYTE PTR [r13+0x73],spl
  416cd9:	pop    rdi
  416cda:	push   rax
  416cdb:	push   rdx
  416cdc:	add    BYTE PTR [rbp+0x73],ah
  416cdf:	pop    rdi
  416ce0:	push   rbp
  416ce1:	push   rbx
  416ce2:	add    BYTE PTR [rbp+0x73],ah
  416ce5:	add    BYTE PTR [rdx+0x6e],ah
  416ce8:	je     0x416d49
  416cea:	push   rsp
  416ceb:	pop    rdx
  416cec:	add    BYTE PTR [rdx+0x6e],ah
  416cef:	je     0x416cf1
  416cf1:	jae    0x416d6a
  416cf3:	pop    rdi
  416cf4:	rex.WXB
  416cf5:	add    BYTE PTR [r11+0x77],r14b
  416cf9:	add    BYTE PTR [rbx+0x76],dh
  416cfc:	pop    rdi
  416cfd:	push   rbx
  416cfe:	add    BYTE PTR [r11+0x76],r14b
  416d02:	pop    rdi
  416d03:	rex.RX
  416d04:	rex.WB add BYTE PTR [r11+0x76],sil
  416d08:	add    BYTE PTR [rbx+0x79],dh
  416d0b:	jb     0x416d6c
  416d0d:	push   rbx
  416d0e:	pop    rcx
  416d0f:	add    BYTE PTR [rbx+0x79],dh
  416d12:	jb     0x416d14
  416d14:	je     0x416d82
  416d16:	pop    rdi
  416d17:	push   rax
  416d18:	rex.W add BYTE PTR [rsp+rbp*2+0x0],sil
  416d1d:	je     0x416d86
  416d1f:	add    BYTE PTR [rdi+riz*2+0x5f],dh
  416d23:	push   rsp
  416d24:	rex.WX add BYTE PTR [rcx+0x6f],dil
  416d28:	pop    rdi
  416d29:	rex.WRX
  416d2a:	rex.RXB add BYTE PTR [r10+0x65],r12b
  416d2e:	jb     0x416d8f
  416d30:	rex.WRB
  416d31:	rex.B
  416d32:	rex (bad) 
  416d34:	jb     0x416d97
  416d36:	(bad)  
  416d37:	imul   esp,DWORD PTR [rbx+0x0],0x40726562
  416d3e:	ins    BYTE PTR es:[rdi],dx
  416d3f:	(bad)  
  416d40:	je     0x416dab
  416d42:	outs   dx,BYTE PTR ds:[rsi]
  416d43:	add    BYTE PTR [rdx+0x65],ah
  416d46:	jb     0x416da7
  416d48:	rex.R pop rdx
  416d4a:	rex ins BYTE PTR es:[rdi],dx
  416d4c:	(bad)  
  416d4d:	je     0x416db8
  416d4f:	outs   dx,BYTE PTR ds:[rsi]
  416d50:	add    BYTE PTR [rdx+0x65],ah
  416d53:	jb     0x416d55
  416d55:	je     0x416db8
  416d57:	pop    rdi
  416d58:	rex.WB
  416d59:	rex.WRX add BYTE PTR [rcx+r12*2+0x0],r14b
  416d5e:	je     0x416dd4
  416d60:	pop    rdi
  416d61:	push   rdx
  416d62:	push   rbp
  416d63:	add    BYTE PTR [rsp+rsi*2+0x0],dh
  416d67:	je     0x416dce
  416d69:	pop    rdi
  416d6a:	rex.WB
  416d6b:	rex.WRX add BYTE PTR [rbp+r12*2+0x0],r14b
  416d70:	je     0x416dda
  416d72:	pop    rdi
  416d73:	push   rsp
  416d74:	rex.W add BYTE PTR [rax+rbp*2+0x0],sil
  416d79:	(bad)  
  416d7a:	outs   dx,DWORD PTR ds:[rsi]
  416d7b:	add    BYTE PTR [rdx+0x6f],ah
  416d7e:	pop    rdi
  416d7f:	rex.X push rsp
  416d81:	add    BYTE PTR [rcx+0x69],bh
  416d84:	add    BYTE PTR [rcx+rbp*2+0x5f],dh
  416d88:	rex.RB push r12
  416d8a:	add    BYTE PTR [rcx+rbp*2+0x5f],dh
  416d8e:	rex.RB push r10
  416d90:	add    BYTE PTR [rcx+rbp*2+0x0],dh
  416d94:	je     0x416e09
  416d96:	pop    rdi
  416d97:	pop    rdx
  416d98:	add    BYTE PTR [r11+rsi*2+0x0],sil
  416d9d:	je     0x416e0d
  416d9f:	pop    rdi
  416da0:	pop    rdx
  416da1:	add    BYTE PTR [r14+rbp*2+0x0],sil
  416da6:	je     0x416e1a
  416da8:	pop    rdi
  416da9:	push   rsp
  416daa:	push   rdx
  416dab:	add    BYTE PTR [rdx+rsi*2+0x0],dh
  416daf:	je     0x416e1c
  416db1:	pop    rdi
  416db2:	push   rsp
  416db3:	rex.WRB add BYTE PTR [r11+rbp*2+0x0],r14b
  416db8:	jne    0x416e21
  416dba:	pop    rdi
  416dbb:	rex.XB
  416dbc:	rex.WRX add BYTE PTR [rbp+0x67],r14b
  416dc0:	add    BYTE PTR [rbp+0x6b],dh
  416dc3:	pop    rdi
  416dc4:	push   rbp
  416dc5:	add    BYTE PTR [r13+0x6b],sil
  416dc9:	add    BYTE PTR [rbp+0x72],dh
  416dcc:	pop    rdi
  416dcd:	push   rax
  416dce:	rex.WXB add BYTE PTR [r13+0x72],sil
  416dd2:	pop    rdi
  416dd3:	rex.WB
  416dd4:	rex.WRX add BYTE PTR [rbp+0x72],r14b
  416dd8:	add    BYTE PTR [rbp+0x7a],dh
  416ddb:	add    BYTE PTR [rbp+0x7a],dh
  416dde:	pop    rdi
  416ddf:	push   rbp
  416de0:	pop    rdx
  416de1:	add    BYTE PTR [rbp+0x7a],dh
  416de4:	rex movsxd edi,DWORD PTR [rcx+0x72]
  416de8:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x7a750063
  416df0:	pop    rdi
  416df1:	push   rbp
  416df2:	pop    rdx
  416df3:	rex movsxd edi,DWORD PTR [rcx+0x72]
  416df7:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x69790063
  416dff:	pop    rdi
  416e00:	rex.WB
  416e01:	rex.WR add BYTE PTR [rsi+0x65],r14b
  416e05:	pop    rdi
  416e06:	pop    rdx
  416e07:	add    BYTE PTR [r14+0x65],sil
  416e0b:	add    BYTE PTR [rsi+0x69],dh
  416e0e:	pop    rdi
  416e0f:	push   rsi
  416e10:	rex.WRX add BYTE PTR [rsi+0x69],r14b
  416e14:	add    BYTE PTR [rbx+0x79],ah
  416e17:	pop    rdi
  416e18:	rex.RXB
  416e19:	rex.X add BYTE PTR [rbx+0x79],spl
  416e1d:	add    BYTE PTR [rdi+0x6f],dh
  416e20:	pop    rdi
  416e21:	push   rbx
  416e22:	rex.WRX add BYTE PTR [rdi+0x6f],r14b
  416e26:	add    BYTE PTR [rax+0x68],bh
  416e29:	pop    rdi
  416e2a:	pop    rdx
  416e2b:	add    BYTE PTR [r8+0x68],dil
  416e2f:	add    BYTE PTR [rbx+0x61],dh
  416e32:	push   0x55525f
  416e37:	jae    0x416e9a
  416e39:	push   0x5f696900
  416e3e:	rex.XB
  416e3f:	rex.WRX add BYTE PTR [rcx+0x69],r13b
  416e43:	add    BYTE PTR [rdi+0x45],al
  416e46:	push   rsp
  416e47:	push   rsp
  416e48:	rex.RB pop r8
  416e4a:	push   rsp
  416e4b:	pop    rdi
  416e4c:	rex.WRB push r13
  416e4e:	rex.WB add BYTE PTR [r15+0x7dfffefe],sil
  416e55:	(bad)  
  416e56:	(bad)  
  416e57:	jmp    QWORD PTR [rdx-0x2]
  416e5a:	(bad)  
  416e5b:	inc    DWORD PTR [rdi-0x2]
  416e5e:	(bad)  
  416e5f:	jmp    FWORD PTR [rdx]
  416e61:	(bad)  
  416e62:	(bad)  
  416e63:	dec    DWORD PTR [rdi]
  416e65:	(bad)  
  416e66:	(bad)  
  416e67:	push   rsp
  416e69:	std    
  416e6a:	(bad)  
  416e6b:	call   FWORD PTR [rdx-0x26000102]
  416e71:	std    
  416e72:	(bad)  
  416e73:	(bad)  
  416e74:	mov    esp,0x9ffffefd
  416e79:	std    
  416e7a:	(bad)  
  416e7b:	inc    DWORD PTR [rbp+rdi*8-0x2980002]
  416e82:	(bad)  
  416e83:	dec    DWORD PTR [rbp+rdi*8-0x2]
  416e87:	push   QWORD PTR [rcx]
  416e89:	std    
  416e8a:	(bad)  
  416e8b:	call   QWORD PTR [rsi]
  416e8d:	std    
  416e8e:	(bad)  
  416e8f:	(bad)  
  416e90:	(bad)  
  416e91:	cld    
  416e92:	(bad)  
  416e93:	dec    edi
  416e95:	cld    
  416e96:	(bad)  
  416e97:	push   QWORD PTR [rsp+rdi*8-0x3880002]
  416e9e:	(bad)  
  416e9f:	push   QWORD PTR [rdx]
  416ea1:	cld    
  416ea2:	(bad)  
  416ea3:	call   QWORD PTR [rdi]
  416ea5:	cld    
  416ea6:	(bad)  
  416ea7:	(bad)  
  416ea8:	jmp    0x416ea5
  416eaa:	(bad)  
  416eab:	call   rax
  416ead:	sti    
  416eae:	(bad)  
  416eaf:	jmp    QWORD PTR [rbx+rdi*8-0x4870002]
  416eb6:	(bad)  
  416eb7:	call   FWORD PTR [rbx-0x5]
  416eba:	(bad)  
  416ebb:	inc    DWORD PTR [rax-0x5]
  416ebe:	(bad)  
  416ebf:	jmp    QWORD PTR [rip+0xfffffffff9fffefb]        # 0xfffffffffa416dc0
  416ec5:	cli    
  416ec6:	(bad)  
  416ec7:	(bad)  
  416ec8:	fdivp  st(2),st
  416eca:	(bad)  
  416ecb:	inc    ebx
  416ecd:	cli    
  416ece:	(bad)  
  416ecf:	call   QWORD PTR [rdi+0x7cfffefa]
  416ed5:	cli    
  416ed6:	(bad)  
  416ed7:	jmp    QWORD PTR [rcx-0x6]
  416eda:	(bad)  
  416edb:	inc    DWORD PTR [rsi-0x6]
  416ede:	(bad)  
  416edf:	jmp    FWORD PTR [rbx]
  416ee1:	cli    
  416ee2:	(bad)  
  416ee3:	call   QWORD PTR [rax]
  416ee5:	cli    
  416ee6:	(bad)  
  416ee7:	push   rbp
  416ee9:	stc    
  416eea:	(bad)  
  416eeb:	(bad)  
  416eec:	(bad)  
  416eee:	(bad)  
  416eef:	(bad)  
  416ef0:	mov    edi,0xa4fffef9
  416ef5:	stc    
  416ef6:	(bad)  
  416ef7:	dec    DWORD PTR [rcx+0x6efffef9]
  416efd:	stc    
  416efe:	(bad)  
  416eff:	jmp    FWORD PTR [rcx]
  416f01:	stc    
  416f02:	(bad)  
  416f03:	dec    DWORD PTR [rsi]
  416f05:	stc    
  416f06:	(bad)  
  416f07:	inc    esp
  416f09:	clc    
  416f0a:	(bad)  
  416f0b:	jmp    FWORD PTR [rcx-0x71000108]
  416f11:	clc    
  416f12:	(bad)  
  416f13:	push   QWORD PTR [rbx-0x8]
  416f16:	(bad)  
  416f17:	call   FWORD PTR [rax-0x8]
  416f1a:	(bad)  
  416f1b:	(bad)  
  416f1c:	cmp    eax,0x22fffef8
  416f21:	clc    
  416f22:	(bad)  
  416f23:	inc    DWORD PTR [rdi]
  416f25:	clc    
  416f26:	(bad)  
  416f27:	(bad)  
  416f28:	in     al,dx
  416f29:	idiv   esi
  416f2b:	call   rcx
  416f2d:	idiv   esi
  416f2f:	push   QWORD PTR [rsi-0x64000109]
  416f35:	idiv   esi
  416f37:	inc    DWORD PTR [rax+0x63fffef7]
  416f3d:	idiv   esi
  416f3f:	push   QWORD PTR [rdi]
  416f41:	idiv   esi
  416f43:	call   FWORD PTR [rdi+rsi*8]
  416f46:	(bad)  
  416f47:	push   rax
  416f49:	idiv   dh
  416f4b:	call   rbp
  416f4d:	idiv   dh
  416f4f:	(bad)  
  416f50:	mov    edx,0x9ffffef6
  416f55:	idiv   dh
  416f57:	inc    DWORD PTR [rsi+rsi*8-0x9b80002]
  416f5e:	(bad)  
  416f5f:	jmp    FWORD PTR [rsi+rsi*8]
  416f62:	(bad)  
  416f63:	inc    DWORD PTR [rax]
  416f65:	idiv   dh
  416f67:	call   rsp
  416f69:	cmc    
  416f6a:	(bad)  
  416f6b:	(bad)  
  416f6c:	mov    ecx,0x9efffef5
  416f71:	cmc    
  416f72:	(bad)  
  416f73:	inc    DWORD PTR [rbx+0x68fffef5]
  416f79:	cmc    
  416f7a:	(bad)  
  416f7b:	dec    DWORD PTR [rbp-0xb]
  416f7e:	(bad)  
  416f7f:	push   QWORD PTR [rdx]
  416f81:	cmc    
  416f82:	(bad)  
  416f83:	call   QWORD PTR [rdi]
  416f85:	cmc    
  416f86:	(bad)  
  416f87:	(bad)  
  416f88:	cld    
  416f89:	hlt    
  416f8a:	(bad)  
  416f8b:	jmp    rcx
  416f8d:	hlt    
  416f8e:	(bad)  
  416f8f:	push   QWORD PTR [rbp-0x6500010c]
  416f95:	hlt    
  416f96:	(bad)  
  416f97:	(bad)  
  416f98:	jg     0x416f8e
  416f9a:	(bad)  
  416f9b:	jmp    QWORD PTR [rsp+rsi*8-0x2]
  416f9f:	dec    DWORD PTR [rcx-0xc]
  416fa2:	(bad)  
  416fa3:	jmp    FWORD PTR [rsi]
  416fa5:	hlt    
  416fa6:	(bad)  
  416fa7:	call   QWORD PTR [rbx]
  416fa9:	hlt    
  416faa:	(bad)  
  416fab:	(bad)  
  416fac:	clc    
  416fad:	repz (bad) 
  416faf:	(bad)  
  416fb0:	(bad)  
  416fb2:	(bad)  
  416fb3:	push   QWORD PTR [rcx-0x6900010d]
  416fb9:	repz (bad) 
  416fbb:	(bad)  
  416fbc:	jnp    0x416fb1
  416fbe:	(bad)  
  416fbf:	jmp    QWORD PTR [rax-0xd]
  416fc2:	(bad)  
  416fc3:	jmp    QWORD PTR [rbx]
  416fc5:	repz (bad) 
  416fc7:	dec    DWORD PTR [rax]
  416fc9:	repz (bad) 
  416fcb:	dec    ebx
  416fcd:	repnz (bad) 
  416fcf:	call   FWORD PTR [rdi+0x73fffef2]
  416fd5:	repnz (bad) 
  416fd7:	call   FWORD PTR [rax-0xe]
  416fda:	(bad)  
  416fdb:	(bad)  
  416fdc:	cmp    eax,0x22fffef2
  416fe1:	repnz (bad) 
  416fe3:	inc    DWORD PTR [rdi]
  416fe5:	repnz (bad) 
  416fe7:	(bad)  
  416fe8:	in     al,dx
  416fe9:	icebp  
  416fea:	(bad)  
  416feb:	call   rcx
  416fed:	icebp  
  416fee:	(bad)  
  416fef:	push   QWORD PTR [rsi-0x6400010f]
  416ff5:	icebp  
  416ff6:	(bad)  
  416ff7:	inc    DWORD PTR [rax+0x43fffef1]
  416ffd:	icebp  
  416ffe:	(bad)  
  416fff:	jmp    FWORD PTR [rax]
  417001:	icebp  
  417002:	(bad)  
  417003:	dec    DWORD PTR [rip+0xfffffffff2fffef1]        # 0xfffffffff3416efa
  417009:	lock (bad) 
  41700b:	call   rdi
  41700d:	lock (bad) 
  41700f:	(bad)  
  417010:	mov    esp,0xa1fffef0
  417015:	lock (bad) 
  417017:	inc    DWORD PTR [rsi+0x5afffef0]
  41701d:	lock (bad) 
  41701f:	(bad)  
  417020:	(bad)  
  417021:	lock (bad) 
  417023:	jmp    QWORD PTR [rax+rsi*8]
  417026:	(bad)  
  417027:	dec    DWORD PTR [rcx]
  417029:	lock (bad) 
  41702b:	(bad)  
  41702c:	out    dx,al
  41702d:	out    dx,eax
  41702e:	(bad)  
  41702f:	call   rbx
  417031:	out    dx,eax
  417032:	(bad)  
  417033:	(bad)  
  417034:	mov    eax,0x9dfffeef
  417039:	out    dx,eax
  41703a:	(bad)  
  41703b:	push   QWORD PTR [rdi-0x7d000102]
  417041:	out    dx,eax
  417042:	(bad)  
  417043:	push   QWORD PTR [rdi+0x67fffefe]
  417049:	out    dx,eax
  41704a:	(bad)  
  41704b:	push   QWORD PTR [rdi+0x4cfffefe]
  417051:	out    dx,eax
  417052:	(bad)  
  417053:	push   QWORD PTR [rcx]
  417055:	out    dx,eax
  417056:	(bad)  
  417057:	call   QWORD PTR [rsi]
  417059:	out    dx,eax
  41705a:	(bad)  
  41705b:	(bad)  
  41705c:	sti    
  41705d:	out    dx,al
  41705e:	(bad)  
  41705f:	jmp    rax
  417061:	out    dx,al
  417062:	(bad)  
  417063:	inc    ebp
  417065:	out    dx,al
  417066:	(bad)  
  417067:	jmp    FWORD PTR [rdx-0x70000112]
  41706d:	out    dx,al
  41706e:	(bad)  
  41706f:	push   QWORD PTR [rsi+rbp*8-0x2]
  417073:	push   QWORD PTR [rdi-0x48000102]
  417079:	(bad)  
  41707a:	(bad)  
  41707b:	push   QWORD PTR [rdi+0x5cfffefe]
  417081:	out    dx,al
  417082:	(bad)  
  417083:	push   QWORD PTR [rdi-0x48000102]
  417089:	(bad)  
  41708a:	(bad)  
  41708b:	push   QWORD PTR [rdi-0x48000102]
  417091:	(bad)  
  417092:	(bad)  
  417093:	inc    DWORD PTR [rsi+rbp*8-0x2]
  417097:	jmp    QWORD PTR [rbx]
  417099:	std    
  41709a:	(bad)  
  41709b:	call   QWORD PTR [rdi]
  41709d:	std    
  41709e:	(bad)  
  41709f:	dec    DWORD PTR [rbx]
  4170a1:	std    
  4170a2:	(bad)  
  4170a3:	inc    DWORD PTR [rbx+0x77fffefd]
  4170a9:	std    
  4170aa:	(bad)  
  4170ab:	jmp    FWORD PTR [rbx-0x3]
  4170ae:	(bad)  
  4170af:	call   FWORD PTR [rdi-0x3]
  4170b2:	(bad)  
  4170b3:	call   QWORD PTR [rbx-0x3]
  4170b6:	(bad)  
  4170b7:	inc    DWORD PTR [rdi-0x3]
  4170ba:	(bad)  
  4170bb:	(bad)  
  4170bc:	cmp    edi,ebp
  4170be:	(bad)  
  4170bf:	jmp    QWORD PTR [rbx]
  4170c1:	std    
  4170c2:	(bad)  
  4170c3:	jmp    QWORD PTR [rbx]
  4170c5:	std    
  4170c6:	(bad)  
  4170c7:	jmp    QWORD PTR [rbx]
  4170c9:	std    
  4170ca:	(bad)  
  4170cb:	jmp    QWORD PTR [rbx]
  4170cd:	std    
  4170ce:	(bad)  
  4170cf:	jmp    QWORD PTR [rbx]
  4170d1:	std    
  4170d2:	(bad)  
  4170d3:	jmp    QWORD PTR [rbx]
  4170d5:	std    
  4170d6:	(bad)  
  4170d7:	jmp    QWORD PTR [rbx]
  4170d9:	std    
  4170da:	(bad)  
  4170db:	jmp    QWORD PTR [rbx]
  4170dd:	std    
  4170de:	(bad)  
  4170df:	jmp    QWORD PTR [rbx]
  4170e1:	std    
  4170e2:	(bad)  
  4170e3:	jmp    QWORD PTR [rbx]
  4170e5:	std    
  4170e6:	(bad)  
  4170e7:	jmp    QWORD PTR [rbx]
  4170e9:	std    
  4170ea:	(bad)  
  4170eb:	jmp    QWORD PTR [rbx]
  4170ed:	std    
  4170ee:	(bad)  
  4170ef:	jmp    QWORD PTR [rbx]
  4170f1:	std    
  4170f2:	(bad)  
  4170f3:	jmp    QWORD PTR [rbx]
  4170f5:	std    
  4170f6:	(bad)  
  4170f7:	jmp    QWORD PTR [rbx]
  4170f9:	std    
  4170fa:	(bad)  
  4170fb:	jmp    QWORD PTR [rbx]
  4170fd:	std    
  4170fe:	(bad)  
  4170ff:	jmp    QWORD PTR [rbx]
  417101:	std    
  417102:	(bad)  
  417103:	jmp    QWORD PTR [rbx]
  417105:	std    
  417106:	(bad)  
  417107:	jmp    FWORD PTR [rdi]
  417109:	std    
  41710a:	(bad)  
  41710b:	call   FWORD PTR [rbx-0x70000103]
  417111:	std    
  417112:	(bad)  
  417113:	inc    edi
  417115:	add    edi,edi
  417117:	dec    DWORD PTR [rbx+0x7ffffeff]
  41711d:	(bad)  
  41711e:	(bad)  
  41711f:	push   QWORD PTR [rbx-0x1]
  417122:	(bad)  
  417123:	inc    DWORD PTR [rdi+0x7bffff00]
  417129:	add    bh,bh
  41712b:	jmp    FWORD PTR [rdi+0x0]
  41712e:	(bad)  
  41712f:	jmp    QWORD PTR [rbx+0x0]
  417132:	(bad)  
  417133:	call   QWORD PTR [rdi+0x0]
  417136:	(bad)  
  417137:	dec    DWORD PTR [rbx+0x0]
  41713a:	(bad)  
  41713b:	(bad)  
  41713c:	(bad)  
  41713d:	add    bh,bh
  41713f:	push   QWORD PTR [rbx]
  417141:	add    bh,bh
  417143:	(bad)  
  417144:	(bad)  
  417146:	(bad)  
  417147:	call   rbx
  417149:	(bad)  
  41714a:	(bad)  
  41714b:	dec    DWORD PTR [rbx-0x74000101]
  417151:	(bad)  
  417152:	(bad)  
  417153:	dec    DWORD PTR [rbx-0x74000101]
  417159:	(bad)  
  41715a:	(bad)  
  41715b:	dec    DWORD PTR [rbx-0x74000101]
  417161:	(bad)  
  417162:	(bad)  
  417163:	dec    DWORD PTR [rbx-0x74000101]
  417169:	(bad)  
  41716a:	(bad)  
  41716b:	dec    DWORD PTR [rbx-0x74000101]
  417171:	(bad)  
  417172:	(bad)  
  417173:	dec    DWORD PTR [rbx-0x74000101]
  417179:	(bad)  
  41717a:	(bad)  
  41717b:	inc    edi
  41717d:	(bad)  
  41717e:	(bad)  
  41717f:	(bad)  
  417180:	mov    ebx,0xa3fffeff
  417185:	(bad)  
  417186:	(bad)  
  417187:	call   QWORD PTR [rdi-0x74000101]
  41718d:	(bad)  
  41718e:	(bad)  
  41718f:	jmp    FWORD PTR [rdi+0x6bfffeff]
  417195:	add    edi,edi
  417197:	push   rdi
  417199:	add    bh,bh
  41719b:	jmp    QWORD PTR [rdi-0x78000104]
  4171a1:	(bad)  
  4171a2:	(bad)  
  4171a3:	(bad)  
  4171a4:	jnp    0x4171a4
  4171a6:	(bad)  
  4171a7:	jmp    FWORD PTR [rdi-0x2]
  4171aa:	(bad)  
  4171ab:	jmp    QWORD PTR [rbx-0x2]
  4171ae:	(bad)  
  4171af:	jmp    rdi
  4171b1:	(bad)  
  4171b2:	(bad)  
  4171b3:	(bad)  
  4171b4:	(bad)  
  4171b6:	(bad)  
  4171b7:	dec    edi
  4171b9:	(bad)  
  4171ba:	(bad)  
  4171bb:	inc    ebx
  4171bd:	(bad)  
  4171be:	(bad)  
  4171bf:	push   QWORD PTR [rdi-0x54000102]
  4171c5:	(bad)  
  4171c6:	(bad)  
  4171c7:	call   FWORD PTR [rdi-0x6c000102]
  4171cd:	(bad)  
  4171ce:	(bad)  
  4171cf:	(bad)  
  4171d0:	mov    edi,0xb3fffefc
  4171d5:	cld    
  4171d6:	(bad)  
  4171d7:	call   FWORD PTR [rdi-0x18000100]
  4171dd:	std    
  4171de:	(bad)  
  4171df:	(bad)  
  4171e0:	(bad)  
  4171e2:	(bad)  
  4171e3:	dec    edi
  4171e5:	std    
  4171e6:	(bad)  
  4171e7:	inc    ebx
  4171e9:	std    
  4171ea:	(bad)  
  4171eb:	push   QWORD PTR [rdi-0x54000103]
  4171f1:	std    
  4171f2:	(bad)  
  4171f3:	call   FWORD PTR [rdi-0x6c000103]
  4171f9:	std    
  4171fa:	(bad)  
  4171fb:	inc    DWORD PTR [rdi+0x7bfffefd]
  417201:	std    
  417202:	(bad)  
  417203:	jmp    FWORD PTR [rdi-0x3]
  417206:	(bad)  
  417207:	jmp    QWORD PTR [rbx-0x3]
  41720a:	(bad)  
  41720b:	call   QWORD PTR [rdi-0x3]
  41720e:	(bad)  
  41720f:	dec    DWORD PTR [rbx-0x3]
  417212:	(bad)  
  417213:	(bad)  
  417214:	(bad)  
  417215:	std    
  417216:	(bad)  
  417217:	call   QWORD PTR [rdi]
  417219:	(bad)  
  41721a:	(bad)  
  41721b:	dec    DWORD PTR [rbx]
  41721d:	(bad)  
  41721e:	(bad)  
  41721f:	(bad)  
  417220:	(bad)  
  417221:	std    
  417222:	(bad)  
  417223:	push   rbx
  417225:	std    
  417226:	(bad)  
  417227:	push   QWORD PTR [rdi]
  417229:	(bad)  
  41722a:	(bad)  
  41722b:	jmp    FWORD PTR [rbx]
  41722d:	(bad)  
  41722e:	(bad)  
  41722f:	jmp    FWORD PTR [rbx+0x0]
  417232:	(bad)  
  417233:	(bad)  
  417234:	(bad)  
  417236:	(bad)  
  417237:	dec    edi
  417239:	cld    
  41723a:	(bad)  
  41723b:	inc    ebx
  41723d:	cld    
  41723e:	(bad)  
  41723f:	push   QWORD PTR [rdi-0x54000104]
  417245:	cld    
  417246:	(bad)  
  417247:	call   FWORD PTR [rdi-0x6c000104]
  41724d:	cld    
  41724e:	(bad)  
  41724f:	inc    DWORD PTR [rdi+0x7bfffefc]
  417255:	cld    
  417256:	(bad)  
  417257:	jmp    FWORD PTR [rdi-0x4]
  41725a:	(bad)  
  41725b:	jmp    QWORD PTR [rbx-0x4]
  41725e:	(bad)  
  41725f:	call   QWORD PTR [rdi-0x4]
  417262:	(bad)  
  417263:	dec    DWORD PTR [rbx-0x4]
  417266:	(bad)  
  417267:	(bad)  
  417268:	(bad)  
  417269:	cld    
  41726a:	(bad)  
  41726b:	push   QWORD PTR [rbx]
  41726d:	cld    
  41726e:	(bad)  
  41726f:	push   rdi
  417271:	(bad)  
  417272:	(bad)  
  417273:	(bad)  
  417274:	jmp    0x417274
  417276:	(bad)  
  417277:	inc    DWORD PTR [rbx]
  417279:	(bad)  
  41727a:	(bad)  
  41727b:	jmp    QWORD PTR [rbx-0x68000106]
  417281:	cli    
  417282:	(bad)  
  417283:	jmp    QWORD PTR [rbx-0x38000106]
  417289:	cli    
  41728a:	(bad)  
  41728b:	inc    DWORD PTR [rbx]
  41728d:	sti    
  41728e:	(bad)  
  41728f:	push   rdi
  417291:	cli    
  417292:	(bad)  
  417293:	dec    DWORD PTR [rdi]
  417295:	sti    
  417296:	(bad)  
  417297:	dec    DWORD PTR [rdi]
  417299:	sti    
  41729a:	(bad)  
  41729b:	dec    DWORD PTR [rdi]
  41729d:	sti    
  41729e:	(bad)  
  41729f:	dec    DWORD PTR [rdi]
  4172a1:	sti    
  4172a2:	(bad)  
  4172a3:	dec    DWORD PTR [rdi]
  4172a5:	sti    
  4172a6:	(bad)  
  4172a7:	dec    DWORD PTR [rdi]
  4172a9:	sti    
  4172aa:	(bad)  
  4172ab:	dec    DWORD PTR [rdi]
  4172ad:	sti    
  4172ae:	(bad)  
  4172af:	dec    DWORD PTR [rdi]
  4172b1:	sti    
  4172b2:	(bad)  
  4172b3:	dec    DWORD PTR [rdi]
  4172b5:	sti    
  4172b6:	(bad)  
  4172b7:	dec    DWORD PTR [rdi]
  4172b9:	sti    
  4172ba:	(bad)  
  4172bb:	dec    DWORD PTR [rdi]
  4172bd:	sti    
  4172be:	(bad)  
  4172bf:	dec    DWORD PTR [rdi]
  4172c1:	sti    
  4172c2:	(bad)  
  4172c3:	dec    DWORD PTR [rdi]
  4172c5:	sti    
  4172c6:	(bad)  
  4172c7:	dec    DWORD PTR [rdi]
  4172c9:	sti    
  4172ca:	(bad)  
  4172cb:	dec    DWORD PTR [rdi]
  4172cd:	sti    
  4172ce:	(bad)  
  4172cf:	dec    DWORD PTR [rdi]
  4172d1:	sti    
  4172d2:	(bad)  
  4172d3:	dec    DWORD PTR [rdi]
  4172d5:	sti    
  4172d6:	(bad)  
  4172d7:	dec    DWORD PTR [rdi]
  4172d9:	sti    
  4172da:	(bad)  
  4172db:	dec    DWORD PTR [rdi]
  4172dd:	sti    
  4172de:	(bad)  
  4172df:	dec    DWORD PTR [rdi]
  4172e1:	sti    
  4172e2:	(bad)  
  4172e3:	dec    DWORD PTR [rdi]
  4172e5:	sti    
  4172e6:	(bad)  
  4172e7:	dec    DWORD PTR [rdi]
  4172e9:	sti    
  4172ea:	(bad)  
  4172eb:	dec    DWORD PTR [rdi]
  4172ed:	sti    
  4172ee:	(bad)  
  4172ef:	dec    DWORD PTR [rdi]
  4172f1:	sti    
  4172f2:	(bad)  
  4172f3:	dec    DWORD PTR [rdi]
  4172f5:	sti    
  4172f6:	(bad)  
  4172f7:	call   QWORD PTR [rdi+0x6ffffefa]
  4172fd:	(bad)  
  4172fe:	(bad)  
  4172ff:	call   QWORD PTR [rdi-0x1]
  417302:	(bad)  
  417303:	dec    DWORD PTR [rbx-0x1]
  417306:	(bad)  
  417307:	(bad)  
  417308:	(bad)  
  417309:	(bad)  
  41730a:	(bad)  
  41730b:	push   QWORD PTR [rbx]
  41730d:	(bad)  
  41730e:	(bad)  
  41730f:	jmp    QWORD PTR [rdi]
  417311:	(bad)  
  417312:	(bad)  
  417313:	call   FWORD PTR [rbx]
  417315:	(bad)  
  417316:	(bad)  
  417317:	dec    DWORD PTR [rdi]
  417319:	(bad)  
  41731a:	(bad)  
  41731b:	inc    DWORD PTR [rbx]
  41731d:	(bad)  
  41731e:	(bad)  
  41731f:	push   rdi
  417321:	(bad)  
  417322:	(bad)  
  417323:	(bad)  
  417324:	jmp    0x417324
  417326:	(bad)  
  417327:	(bad)  
  417328:	(bad)  
  41732a:	(bad)  
  41732b:	call   rbx
  41732d:	(bad)  
  41732e:	(bad)  
  41732f:	inc    edi
  417331:	(bad)  
  417332:	(bad)  
  417333:	(bad)  
  417334:	mov    ebx,0xaffffefe
  417339:	(bad)  
  41733a:	(bad)  
  41733b:	inc    DWORD PTR [rbx-0x2]
  41733e:	(bad)  
  41733f:	call   QWORD PTR [rdi-0x6]
  417342:	(bad)  
  417343:	push   rdi
  417345:	stc    
  417346:	(bad)  
  417347:	(bad)  
  417348:	jmp    0x417343
  41734a:	(bad)  
  41734b:	dec    DWORD PTR [rdi]
  41734d:	cli    
  41734e:	(bad)  
  41734f:	jmp    QWORD PTR [rdi]
  417351:	cli    
  417352:	(bad)  
  417353:	call   FWORD PTR [rbx]
  417355:	cli    
  417356:	(bad)  
  417357:	dec    DWORD PTR [rbx+rax*2+0x5f]
  41735b:	rex.B
  41735c:	rex.WR
  41735d:	rex.WR add BYTE PTR [rcx+rax*2+0x4e],r9b
  417362:	rex.RXB add BYTE PTR [r8],r8b
	...
  417381:	sbb    al,BYTE PTR [rax]
  417383:	add    bh,ch
  417385:	(bad)  
  417386:	(bad)  
  417387:	(bad)  
  417388:	(bad)  
  417389:	(bad)  
  41738a:	(bad)  
  41738b:	(bad)  
  41738c:	(bad)  
  41738d:	(bad)  
  41738e:	(bad)  
  41738f:	jg     0x417391
	...
  41739d:	add    BYTE PTR [rax],al
  41739f:	add    BYTE PTR [rbp+0x62],ch
  4173a2:	jne    0x41740d
  4173a4:	je     0x41740b
  4173a6:	jb     0x4173d6
  4173a8:	push   0x73626d00
  4173ad:	imul   ebp,DWORD PTR [rsi+0x69],0x26282074
  4173b4:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x74733e2d
  4173bc:	(bad)  
  4173bd:	je     0x417424
  4173bf:	sub    DWORD PTR [rax],eax
  4173c1:	sub    ch,BYTE PTR [rcx+0x74]
  4173c4:	gs jb  0x4173f4
  4173c7:	movsxd esi,DWORD PTR ds:[rbp+0x72]
  4173cb:	cs jo  0x417442
  4173ce:	jb     0x4173f0
  4173d0:	cmp    eax,0x5c27203d
  4173d5:	xor    BYTE PTR [rdi],ah
  4173d7:	add    BYTE PTR [rcx+0x74],ch
  4173da:	gs jb  0x41740a
  4173dd:	movsxd esi,DWORD PTR ds:[rbp+0x72]
  4173e1:	cs ja  0x417447
  4173e4:	and    BYTE PTR [rip+0x30203d],bh        # 0x719427
  4173ea:	add    BYTE PTR [rax],al
  4173ec:	add    BYTE PTR [rax],al
  4173ee:	add    BYTE PTR [rax],al
  4173f0:	ins    DWORD PTR es:[rdi],dx
  4173f1:	(bad)  
  4173f2:	jne    0x41745d
  4173f4:	je     0x41745b
  4173f6:	jb     0x417426
  4173f8:	push   0x73626d00
  4173fd:	imul   ebp,DWORD PTR [rsi+0x69],0x26282074
  417404:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x74733e2d
  41740c:	(bad)  
  41740d:	je     0x417474
  41740f:	sub    DWORD PTR [rax],eax
  417411:	sub    ch,BYTE PTR [rcx+0x74]
  417414:	gs jb  0x417444
  417417:	movsxd esi,DWORD PTR ds:[rbp+0x72]
  41741b:	cs jo  0x417492
  41741e:	jb     0x417440
  417420:	cmp    eax,0x5c27203d
  417425:	xor    BYTE PTR [rdi],ah
  417427:	add    BYTE PTR [rcx+0x74],ch
  41742a:	gs jb  0x41745a
  41742d:	movsxd esi,DWORD PTR ds:[rbp+0x72]
  417431:	cs ja  0x417497
  417434:	and    BYTE PTR [rip+0x30203d],bh        # 0x719477
  41743a:	add    BYTE PTR [rax],al
  41743c:	add    BYTE PTR [rax],al
  41743e:	add    BYTE PTR [rax],al
  417440:	rex.RB push r13
  417442:	rex.XB sub eax,0x4700504a
  417448:	rex.X xor sil,BYTE PTR [rbx]
  41744b:	xor    DWORD PTR [rdx],esi
  41744d:	add    BYTE PTR [rbp+0x55],al
  417450:	rex.XB sub eax,0x42005754
  417456:	rex.WB
  417457:	rex.RXB xor eax,0x43554500
  41745d:	sub    eax,0x4300524b
  417462:	push   rax
  417463:	cmp    DWORD PTR [rcx+rdi*1],esi
	...
  41747e:	add    BYTE PTR [rax],al
  417480:	add    BYTE PTR [rcx],al
  417482:	add    al,BYTE PTR [rbx]
  417484:	add    al,0x5
  417486:	(bad)  
  417487:	(bad)  
  417488:	or     BYTE PTR [rcx],cl
  41748a:	dec    DWORD PTR [rdx]
  41748c:	or     ecx,DWORD PTR [rcx*1-0xf101]
  417493:	(bad)  
  417494:	(bad)  
  417495:	dec    DWORD PTR [rdi]
  417497:	call   QWORD PTR [rax]
  417499:	(bad)  
  41749a:	(bad)  
  41749b:	(bad)  
  41749c:	(bad)  
  41749d:	(bad)  
  41749e:	(bad)  
  41749f:	(bad)  
  4174a0:	(bad)  
  4174a1:	(bad)  
  4174a2:	(bad)  
  4174a3:	(bad)  
  4174a4:	(bad)  
  4174a5:	(bad)  
  4174a6:	(bad)  
  4174a7:	(bad)  
  4174a8:	(bad)  
  4174a9:	(bad)  
  4174aa:	(bad)  
  4174ab:	(bad)  
  4174ac:	(bad)  
  4174ad:	(bad)  
  4174ae:	(bad)  
  4174af:	(bad)  
  4174b0:	(bad)  
  4174b1:	(bad)  
  4174b2:	(bad)  
  4174b3:	(bad)  
  4174b4:	(bad)  
  4174b5:	(bad)  
  4174b6:	(bad)  
  4174b7:	(bad)  
  4174b8:	(bad)  
  4174b9:	(bad)  
  4174ba:	(bad)  
  4174bb:	(bad)  
  4174bc:	(bad)  
  4174bd:	(bad)  
  4174be:	(bad)  
  4174bf:	(bad)  
  4174c0:	(bad)  
  4174c1:	(bad)  
  4174c2:	(bad)  
  4174c3:	(bad)  
  4174c4:	(bad)  
  4174c5:	(bad)  
  4174c6:	(bad)  
  4174c7:	(bad)  
  4174c8:	(bad)  
  4174c9:	(bad)  
  4174ca:	(bad)  
  4174cb:	(bad)  
  4174cc:	(bad)  
  4174cd:	(bad)  
  4174ce:	(bad)  
  4174cf:	(bad)  
  4174d0:	(bad)  
  4174d1:	(bad)  
  4174d2:	call   QWORD PTR [rcx]
  4174d4:	adc    dl,BYTE PTR [rbx]
  4174d6:	(bad)  
  4174d7:	(bad)  
  4174d8:	(bad)  
  4174d9:	(bad)  
  4174da:	(bad)  
  4174db:	(bad)  
  4174dc:	(bad)  
  4174dd:	(bad)  
  4174de:	(bad)  
  4174df:	(bad)  
  4174e0:	(bad)  
  4174e1:	(bad)  
  4174e2:	(bad)  
  4174e3:	(bad)  
  4174e4:	(bad)  
  4174e5:	(bad)  
  4174e6:	(bad)  
  4174e7:	(bad)  
  4174e8:	(bad)  
  4174e9:	(bad)  
  4174ea:	(bad)  
  4174eb:	(bad)  
  4174ec:	(bad)  
  4174ed:	(bad)  
  4174ee:	(bad)  
  4174ef:	(bad)  
  4174f0:	(bad)  
  4174f1:	(bad)  
  4174f2:	(bad)  
  4174f3:	(bad)  
  4174f4:	(bad)  
  4174f5:	(bad)  
  4174f6:	(bad)  
  4174f7:	(bad)  
  4174f8:	(bad)  
  4174f9:	(bad)  
  4174fa:	(bad)  
  4174fb:	(bad)  
  4174fc:	call   QWORD PTR [rdi+rdi*8]
  4174ff:	adc    eax,0xffff1716
  417504:	call   FWORD PTR [rax]
  417506:	(bad)  
  417507:	call   FWORD PTR [rcx]
  417509:	sbb    bl,BYTE PTR [rbx]
  41750b:	sbb    al,0xff
  41750d:	(bad)  
  41750e:	(bad)  
  41750f:	(bad)  
  417510:	(bad)  
  417511:	(bad)  
  417512:	(bad)  
  417513:	(bad)  
  417514:	(bad)  
  417515:	(bad)  
  417516:	(bad)  
  417517:	(bad)  
  417518:	(bad)  
  417519:	(bad)  
  41751a:	(bad)  
  41751b:	(bad)  
  41751c:	(bad)  
  41751d:	(bad)  
  41751e:	(bad)  
  41751f:	(bad)  
  417520:	(bad)  
  417521:	(bad)  
  417522:	(bad)  
  417523:	(bad)  
  417524:	(bad)  
  417525:	(bad)  
  417526:	(bad)  
  417527:	(bad)  
  417528:	(bad)  
  417529:	(bad)  
  41752a:	(bad)  
  41752b:	(bad)  
  41752c:	(bad)  
  41752d:	(bad)  
  41752e:	(bad)  
  41752f:	(bad)  
  417530:	(bad)  
  417531:	(bad)  
  417532:	(bad)  
  417533:	(bad)  
  417534:	call   FWORD PTR [rip+0xffffffffffff1eff]        # 0x409439
  41753a:	(bad)  
  41753b:	(bad)  
  41753c:	(bad)  
  41753d:	(bad)  
  41753e:	(bad)  
  41753f:	(bad)  
  417540:	(bad)  
  417541:	(bad)  
  417542:	(bad)  
  417543:	(bad)  
  417544:	(bad)  
  417545:	(bad)  
  417546:	(bad)  
  417547:	(bad)  
  417548:	(bad)  
  417549:	(bad)  
  41754a:	(bad)  
  41754b:	(bad)  
  41754c:	(bad)  
  41754d:	(bad)  
  41754e:	(bad)  
  41754f:	(bad)  
  417550:	(bad)  
  417551:	(bad)  
  417552:	(bad)  
  417553:	(bad)  
  417554:	(bad)  
  417555:	(bad)  
  417556:	(bad)  
  417557:	(bad)  
  417558:	(bad)  
  417559:	(bad)  
  41755a:	(bad)  
  41755b:	(bad)  
  41755c:	(bad)  
  41755d:	call   FWORD PTR [rdi]
  41755f:	(bad)  
  417560:	(bad)  
  417561:	(bad)  
  417562:	(bad)  
  417563:	(bad)  
  417564:	(bad)  
  417565:	(bad)  
  417566:	(bad)  
  417567:	jmp    QWORD PTR [rax]
  417569:	and    edi,edi
  41756b:	(bad)  
  41756c:	jmp    QWORD PTR [rdx]
  41756e:	(bad)  
  41756f:	(bad)  
  417570:	(bad)  
  417571:	(bad)  
  417572:	(bad)  
  417573:	jmp    QWORD PTR [rbx]
  417575:	(bad)  
  417576:	(bad)  
  417577:	inc    DWORD PTR [rax]
  417579:	add    BYTE PTR [rax],al
  41757b:	add    BYTE PTR [rax],al
  41757d:	add    BYTE PTR [rax],al
  41757f:	add    bh,bh
  417581:	(bad)  
  417582:	(bad)  
  417583:	inc    DWORD PTR [rax]
	...
  41758d:	add    BYTE PTR [rax],al
  41758f:	cmp    bh,0xff
  417592:	(bad)  
  417593:	inc    DWORD PTR [rax]
  417595:	and    BYTE PTR [rax],al
	...
  4175df:	add    bh,bh
  4175e1:	(bad)  
  4175e2:	(bad)  
  4175e3:	(bad)  
  4175e4:	(bad)  
  4175e5:	(bad)  
  4175e6:	(bad)  
  4175e7:	(bad)  
  4175e8:	(bad)  
  4175e9:	(bad)  
  4175ea:	(bad)  
  4175eb:	(bad)  
  4175ec:	(bad)  
  4175ed:	inc    DWORD PTR [rax]
	...
  41760f:	add    al,bh
  417611:	add    eax,DWORD PTR [rax]
	...
  41762f:	add    BYTE PTR [rax],al
  417631:	add    dh,bh
  417633:	(bad)  
  417634:	(bad)  
  417635:	(bad)  
  417636:	(bad)  
  417637:	mov    edi,0xb6
  41763c:	add    BYTE PTR [rax],al
  41763e:	add    BYTE PTR [rax],al
  417640:	(bad)  
  417641:	add    bh,bh
  417643:	(bad)  
  417644:	add    BYTE PTR [rax],al
  417646:	add    BYTE PTR [rax],al
  417648:	add    al,bh
  41764a:	(bad)  
  41764b:	inc    DWORD PTR [rax]
  41764d:	add    BYTE PTR [rcx],al
	...
  417657:	add    BYTE PTR [rax],al
  417659:	add    al,al
  41765b:	mov    edi,0x3d9f
  417660:	add    BYTE PTR [rax+0x2],al
  417666:	(bad)  
  417667:	(bad)  
  417668:	inc    DWORD PTR [rdi]
	...
  417672:	add    BYTE PTR [rax],al
  417674:	sar    bh,0x1
  417677:	add    BYTE PTR [rax],al
  417679:	add    BYTE PTR [rax],al
  41767b:	add    BYTE PTR [rax],al
  41767d:	clc    
  41767e:	sldt   WORD PTR [rax]
  417681:	add    al,al
  417683:	sti    
  417684:	out    dx,eax
  417685:	add    BYTE PTR ds:[rax],al
  417688:	add    BYTE PTR [rax],al
  41768a:	add    BYTE PTR [rsi],cl
	...
  41769c:	clc    
  41769d:	(bad)  
  41769e:	(bad)  
  41769f:	inc    DWORD PTR [rdi]
  4176a1:	add    BYTE PTR [rax],al
  4176a3:	add    BYTE PTR [rax],al
  4176a5:	add    BYTE PTR [rax],al
  4176a7:	adc    al,0xfe
  4176a9:	and    esi,edi
  4176ab:	add    BYTE PTR [rax+rax*1],cl
  4176ae:	add    BYTE PTR [rax],al
  4176b0:	add    al,BYTE PTR [rax]
  4176b2:	add    BYTE PTR [rax],al
  4176b4:	add    BYTE PTR [rax],al
  4176b6:	add    BYTE PTR [rax],dl
  4176b8:	(bad)  
  4176b9:	and    BYTE PTR [rax],al
  4176bb:	add    BYTE PTR [rax+rax*1],cl
  4176be:	add    BYTE PTR [rax],al
  4176c0:	(bad)  
  4176c1:	add    BYTE PTR [rax],al
  4176c3:	add    BYTE PTR [rax],al
  4176c5:	add    BYTE PTR [rax],al
  4176c7:	adc    BYTE PTR [rsi+0x239],al
  4176cd:	add    BYTE PTR [rbx],ah
  4176cf:	add    BYTE PTR [rsi],al
  4176d1:	add    BYTE PTR [rax],al
  4176d3:	add    BYTE PTR [rax],al
  4176d5:	add    BYTE PTR [rax],al
  4176d7:	adc    BYTE PTR [rsi+0xc000021],bh
  4176dd:	add    BYTE PTR [rax],al
  4176df:	add    BYTE PTR [rdx],al
  4176e1:	add    BYTE PTR [rax],al
  4176e3:	add    BYTE PTR [rax],al
  4176e5:	add    BYTE PTR [rax],al
  4176e7:	nop
  4176e8:	(bad)  
  4176e9:	and    BYTE PTR [rax+0x0],al
  4176ec:	or     al,0x0
  4176ee:	add    BYTE PTR [rax],al
  4176f0:	add    al,0x0
  4176f2:	add    BYTE PTR [rax],al
  4176f4:	add    BYTE PTR [rax],al
  4176f6:	add    BYTE PTR [rax],al
  4176f8:	add    DWORD PTR [rax],esp
  4176fa:	add    BYTE PTR [rax],al
  4176fc:	add    BYTE PTR [rax],al
  4176fe:	add    BYTE PTR [rax],al
  417700:	add    DWORD PTR [rax],eax
  417702:	add    BYTE PTR [rax],al
  417704:	add    BYTE PTR [rax],al
  417706:	add    al,al
  417708:	sar    DWORD PTR [rip+0xc0060],0x0        # 0x4d776f
  41770f:	add    BYTE PTR [rdx],al
  417711:	add    BYTE PTR [rax],al
  417713:	add    BYTE PTR [rax],al
  417715:	add    BYTE PTR [rax],al
  417717:	adc    BYTE PTR [rax],al
  417719:	xor    BYTE PTR [rax],al
  41771b:	add    BYTE PTR [rax+rax*1],cl
  41771e:	add    BYTE PTR [rax],al
  417720:	add    al,BYTE PTR [rax]
  417722:	add    BYTE PTR [rax],al
  417724:	add    BYTE PTR [rax],al
  417726:	add    BYTE PTR [rax],al
  417728:	(bad)  
  417729:	and    BYTE PTR [rax],al
  41772b:	add    BYTE PTR [rax+rax*1],cl
	...
  417736:	add    BYTE PTR [rax],al
  417738:	add    BYTE PTR [rsp+rbx*2],al
	...
  417743:	add    BYTE PTR [rax],al
  417745:	add    dl,dh
  417747:	(bad)  
  417748:	cmp    BYTE PTR [rdi+0x0],0x0
	...
  417754:	add    BYTE PTR [rax],al
  417756:	repnz sbb eax,DWORD PTR [rax]
  417759:	(bad)  
	...
  417762:	add    BYTE PTR [rbx],al
  417764:	add    BYTE PTR [rax],al
  417766:	movabs al,ds:0xfe00000000000002
  41776f:	jg     0x417750
  417771:	loopne 0x417772
  417773:	(bad)  
  417774:	(bad)  
  417775:	(bad)  
  417776:	call   FWORD PTR [rdi]
  417778:	add    BYTE PTR [rax],al
	...
  417783:	add    BYTE PTR [rax],al
  417785:	loopne 0x417784
  417787:	data16 add BYTE PTR [rax],al
  41778a:	add    bl,al
  41778c:	add    DWORD PTR [rax],eax
  41778e:	(bad)  
  41778f:	add    BYTE PTR [rax+riz*1+0x0],ah
  417793:	and    BYTE PTR [rax],al
	...
  4177e9:	add    BYTE PTR [rax],al
  4177eb:	loopne 0x4177ed
	...
  417821:	add    BYTE PTR [rax+rax*1],bl
  417824:	add    BYTE PTR [rax],al
  417826:	sbb    al,0x0
  417828:	add    BYTE PTR [rax],al
  41782a:	or     al,0x0
  41782c:	add    BYTE PTR [rax],al
  41782e:	or     al,0x0
  417830:	add    BYTE PTR [rax],al
  417832:	add    BYTE PTR [rax],al
  417834:	add    BYTE PTR [rax],al
  417836:	mov    al,0x3f
  417838:	rex dec BYTE PTR [rdi]
  41783b:	and    BYTE PTR [rax],al
  41783d:	add    BYTE PTR [rax],al
  41783f:	add    BYTE PTR [rax],al
  417841:	js     0x417843
	...
  417853:	add    BYTE PTR [rax],al
  417855:	add    al,BYTE PTR [rax]
	...
  417863:	add    BYTE PTR [rdi+0xe0401],al
	...
  417881:	add    BYTE PTR [rax+0x9],al
  417887:	add    BYTE PTR [rax],al
  417889:	add    BYTE PTR [rax+0x7f],al
  41788c:	in     eax,0x1f
  41788e:	clc    
  41788f:	lahf   
  417890:	add    BYTE PTR [rax],al
  417892:	add    BYTE PTR [rax],al
  417894:	add    BYTE PTR [rax],al
  417896:	(bad)  
  417897:	jg     0x417899
  417899:	add    BYTE PTR [rax],al
  41789b:	add    BYTE PTR [rax],al
  41789d:	add    BYTE PTR [rax],al
  41789f:	add    BYTE PTR [rdi],cl
  4178a1:	add    BYTE PTR [rax],al
  4178a3:	add    BYTE PTR [rax],al
  4178a5:	add    al,dl
  4178a7:	(bad)  
  4178a8:	add    al,0x0
  4178aa:	add    BYTE PTR [rax],al
  4178ac:	add    al,bh
  4178ae:	sldt   WORD PTR [rbx]
  4178b1:	add    BYTE PTR [rax],al
  4178b3:	add    BYTE PTR [rbx+rdi*1],bh
  4178b6:	add    BYTE PTR [rax],al
  4178b8:	add    BYTE PTR [rax],al
  4178ba:	add    BYTE PTR [rax],al
  4178bc:	rex movabs ds:0xf000000000000003,eax
  4178c6:	iret   
	...
  4178d7:	add    BYTE PTR [rax],al
  4178d9:	add    bh,dh
  4178db:	(bad)  
  4178dc:	std    
  4178dd:	and    DWORD PTR [rax],edx
  4178df:	add    eax,DWORD PTR [rax]
	...
  4178f5:	add    BYTE PTR [rax],al
  4178f7:	add    bh,bh
  4178f9:	(bad)  
  4178fa:	(bad)  
  4178fb:	(bad)  
  4178fc:	(bad)  
  4178fd:	(bad)  
  4178fe:	(bad)  
  4178ff:	lock add al,bh
  417902:	add    BYTE PTR [rax],al
  417904:	add    BYTE PTR [rax+rax*1+0x0],bh
  417908:	add    BYTE PTR [rax],al
  41790a:	add    BYTE PTR [rax],al
  41790c:	(bad)  
	...
  41791a:	(bad)  
  41791b:	(bad)  
  41791c:	(bad)  
  41791d:	inc    DWORD PTR [rcx]
	...
  41795b:	add    BYTE PTR [rax],al
  41795d:	add    BYTE PTR [rbx],0x0
	...
  41796c:	add    BYTE PTR [rax],al
  41796e:	add    BYTE PTR [rax+0x0],al
	...
  41797c:	(bad)  
  41797d:	(bad)  
  41797e:	(bad)  
  41797f:	inc    DWORD PTR [rax]
  417981:	add    BYTE PTR [rax],al
  417983:	add    BYTE PTR [rax],al
  417985:	cmp    al,0x0
	...
  417993:	(bad)  
	...
  4179cc:	add    BYTE PTR [rax+0x3ff7],al
  4179d2:	add    al,al
	...
  4179dc:	add    BYTE PTR [rax],al
  4179de:	add    eax,DWORD PTR [rax]
	...
  417a00:	or     BYTE PTR [rax],r8b
  417a03:	add    BYTE PTR [rax+0x0],ah
	...
  417a16:	add    BYTE PTR [rax],al
  417a18:	adc    BYTE PTR [rax],al
  417a1a:	add    BYTE PTR [rax],al
  417a1c:	(bad)  
  417a1d:	inc    DWORD PTR [rbx]
  417a1f:	add    BYTE PTR [rax],al
  417a21:	add    BYTE PTR [rax],al
  417a23:	add    al,al
  417a25:	(bad)  
  417a26:	add    BYTE PTR [rax],al
  417a28:	cmp    bh,0x3
  417a2b:	add    BYTE PTR [rax],al
  417a2d:	add    BYTE PTR [rax],al
  417a2f:	add    BYTE PTR [rdi],al
  417a31:	add    BYTE PTR [rax],al
  417a33:	add    BYTE PTR [rax],al
  417a35:	add    al,cl
  417a37:	adc    eax,DWORD PTR [rax]
  417a39:	add    BYTE PTR [rax],al
  417a3b:	add    BYTE PTR [rax],ah
	...
  417a45:	jle    0x417aad
  417a47:	add    BYTE PTR [rax],cl
  417a49:	adc    BYTE PTR [rax],al
  417a4b:	add    BYTE PTR [rax],al
  417a4d:	add    BYTE PTR [rax],al
  417a4f:	adc    BYTE PTR [rax],al
  417a51:	add    BYTE PTR [rax],al
  417a53:	add    BYTE PTR [rax],al
  417a55:	add    BYTE PTR [rbp+0x2c1],bl
  417a5b:	add    BYTE PTR [rax],al
  417a5d:	xor    BYTE PTR [rax+0x0],al
	...
  417a7c:	and    BYTE PTR [rcx],ah
	...
  417aa2:	add    BYTE PTR [rax+0x0],al
	...
  417abd:	add    BYTE PTR [rax],al
  417abf:	add    bh,bh
  417ac1:	inc    DWORD PTR [rax]
  417ac3:	add    bh,bh
  417ac5:	inc    DWORD PTR [rax]
	...
  417adf:	add    BYTE PTR [rax],0x0
	...
  417afe:	add    BYTE PTR [rsi],cl
	...
  417b3c:	add    BYTE PTR [rax],al
  417b3e:	add    BYTE PTR [rax],ah
	...
  417b5c:	add    DWORD PTR [rax],eax
	...
  417b6e:	rol    BYTE PTR [rdi],0x0
	...
  417b7d:	add    BYTE PTR [rax],al
  417b7f:	add    BYTE PTR [rsi-0x10],ch
  417b82:	add    BYTE PTR [rax],al
  417b84:	add    BYTE PTR [rax],al
  417b86:	add    BYTE PTR [rdi+0x0],al
	...
  417b9c:	(bad)  
	...
  417bbd:	add    BYTE PTR [rax],al
  417bbf:	add    BYTE PTR [rdx],al
  417bc1:	add    BYTE PTR [rax],al
  417bc3:	add    BYTE PTR [rax],al
  417bc5:	add    BYTE PTR [rax],al
  417bc7:	(bad)  
  417bc8:	jg     0x417bca
  417bca:	add    BYTE PTR [rax],al
  417bcc:	add    BYTE PTR [rax],al
  417bce:	add    BYTE PTR [rax+0x3],al
  417bd4:	add    BYTE PTR [rax],al
  417bd6:	js     0x417bfe
	...
  417be0:	(bad)  
  417be1:	add    BYTE PTR [rax],al
  417be3:	add    BYTE PTR [rax+0x1fef],al
  417be9:	add    BYTE PTR [rax],al
  417beb:	add    BYTE PTR [rax],al
  417bed:	add    BYTE PTR [rax],cl
  417bef:	add    BYTE PTR [rbx],al
  417bf1:	add    BYTE PTR [rax],al
  417bf3:	add    BYTE PTR [rax],al
  417bf5:	add    al,al
  417bf7:	jg     0x417bf9
  417bf9:	sbb    al,0x0
	...
  417c03:	add    BYTE PTR [rax],al
  417c05:	adc    bl,0x0
	...
  417c18:	add    BYTE PTR [rax],al
  417c1a:	add    BYTE PTR [rax+0x7f8],al
  417c20:	add    eax,DWORD PTR [rax]
  417c22:	add    BYTE PTR [rax],al
  417c24:	add    BYTE PTR [rax],al
  417c26:	add    BYTE PTR [rax],dl
  417c28:	add    DWORD PTR [rax],eax
  417c2a:	add    BYTE PTR [rax],al
  417c2c:	rcr    BYTE PTR [rdi],0x1f
	...
  417c53:	add    BYTE PTR [rax],al
  417c55:	add    al,bh
  417c57:	test   DWORD PTR [rip+0x0],ecx        # 0x417c5d
	...
  417c75:	add    BYTE PTR [rax+rsi*4],bh
  417c78:	add    DWORD PTR [rax],eax
  417c7a:	add    BYTE PTR [rax],dh
	...
  417c84:	add    BYTE PTR [rax],al
  417c86:	clc    
  417c87:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  417c88:	add    DWORD PTR [rax],eax
	...
  417c92:	add    BYTE PTR [rax],al
  417c94:	add    BYTE PTR [rax],ch
  417c96:	mov    edi,0x0
	...
  417ca3:	loopne 0x417c61
  417ca5:	sldt   WORD PTR [rax]
	...
  417cdc:	add    BYTE PTR [rax],al
  417cde:	(bad)  
  417cdf:	add    BYTE PTR [rax],al
  417ce1:	add    BYTE PTR [rax],al
  417ce3:	add    BYTE PTR [rax],al
  417ce5:	add    BYTE PTR [rdi+0x0],bh
	...
  417d30:	add    BYTE PTR [rax+0x7],al
	...
  417d52:	add    BYTE PTR [rax+0xf],ah
	...
  417da9:	add    BYTE PTR [rax],al
  417dab:	add    BYTE PTR [rax-0x180007fd],al
  417db1:	sldt   WORD PTR [rax]
  417db4:	add    BYTE PTR [rax+rax*1],bh
	...
  417dc7:	add    BYTE PTR [rax+rax*1],bl
	...
  417dfe:	add    BYTE PTR [rax],al
  417e00:	(bad)  
  417e01:	(bad)  
  417e02:	(bad)  
  417e03:	(bad)  
  417e04:	(bad)  
  417e05:	(bad)  
  417e06:	jg     0x417e00
  417e08:	(bad)  
  417e09:	(bad)  
  417e0a:	(bad)  
  417e0b:	(bad)  
  417e0c:	call   FWORD PTR [rdi]
  417e0e:	and    BYTE PTR [rax],al
  417e10:	adc    BYTE PTR [rax],al
  417e12:	add    al,bh
  417e14:	(bad)  
  417e15:	inc    DWORD PTR [rax]
	...
  417e57:	add    BYTE PTR [rax],al
  417e59:	add    BYTE PTR [rdi+0x0],bh
	...
  417e80:	add    al,bl
  417e82:	add    BYTE PTR [r8],al
  417e85:	add    BYTE PTR [rax],al
  417e87:	add    BYTE PTR [rax],al
  417e89:	rol    DWORD PTR [rcx+0x0],cl
  417e8c:	add    BYTE PTR [rax],al
  417e8e:	add    BYTE PTR [rax],al
  417e90:	add    BYTE PTR [rax+rax*2+0x0],dh
	...
  417e9f:	add    BYTE PTR [rcx+0x72],al
  417ea2:	addr32 jne 0x417f12
  417ea5:	outs   dx,BYTE PTR gs:[rsi]
  417ea7:	je     0x417ec9
  417ea9:	outs   dx,DWORD PTR fs:[rsi]
  417eab:	ins    DWORD PTR es:[rdi],dx
  417eac:	(bad)  
  417ead:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  417eb4:	jb     0x417ed6
  417eb6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  417eba:	rex.B
  417ebb:	rex.WB
  417ebc:	rex.WRX sub QWORD PTR [rax],r8
  417ebf:	rex.B jb 0x417f29
  417ec2:	jne    0x417f31
  417ec4:	outs   dx,BYTE PTR gs:[rsi]
  417ec6:	je     0x417ee8
  417ec8:	jae    0x417f33
  417eca:	outs   dx,BYTE PTR ds:[rsi]
  417ecb:	addr32 jne 0x417f3a
  417ece:	(bad)  
  417ecf:	jb     0x417f3a
  417ed1:	je     0x417f4c
  417ed3:	and    BYTE PTR [rax],ch
  417ed5:	push   rbx
  417ed6:	rex.WB
  417ed7:	rex.RXB
  417ed8:	rex.WRX sub QWORD PTR [rax],r8
  417edb:	add    BYTE PTR [rax],al
  417edd:	add    BYTE PTR [rax],al
  417edf:	add    BYTE PTR [rdi+0x76],cl
  417ee2:	gs jb  0x417f4b
  417ee5:	ins    BYTE PTR es:[rdi],dx
  417ee6:	outs   dx,DWORD PTR ds:[rsi]
  417ee7:	ja     0x417f09
  417ee9:	jb     0x417f4c
  417eeb:	outs   dx,BYTE PTR ds:[rsi]
  417eec:	and    BYTE PTR gs:[ebp+0x72],ah
  417ef1:	jb     0x417f62
  417ef3:	jb     0x417f15
  417ef5:	sub    BYTE PTR [rdi+0x56],cl
  417ef8:	rex.RB push r10
  417efa:	rex.RX
  417efb:	rex.WR
  417efc:	rex.WRXB push r15
  417efe:	sub    DWORD PTR [rax],eax
  417f00:	push   rax
  417f01:	(bad)  
  417f02:	jb     0x417f78
  417f04:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  417f0b:	jae    0x417f2d
  417f0d:	outs   dx,DWORD PTR ds:[rsi]
  417f0e:	data16 and BYTE PTR [rbx+0x69],dh
  417f12:	outs   dx,BYTE PTR ds:[esi]
  417f14:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  417f1b:	and    BYTE PTR gs:[rax],ch
  417f1e:	push   rax
  417f1f:	rex.WR
  417f20:	rex.WRXB push r11
  417f22:	push   rbx
  417f23:	sub    DWORD PTR [rax],eax
  417f25:	add    BYTE PTR [rax],al
  417f27:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  417f2b:	(bad)  
  417f2c:	ins    BYTE PTR es:[rdi],dx
  417f2d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  417f31:	jae    0x417f53
  417f33:	outs   dx,DWORD PTR ds:[rsi]
  417f34:	data16 and BYTE PTR [rbx+0x69],dh
  417f38:	outs   dx,BYTE PTR ds:[esi]
  417f3a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  417f41:	and    BYTE PTR gs:[rax],ch
  417f44:	push   rsp
  417f45:	rex.WR
  417f46:	rex.WRXB push r11
  417f48:	push   rbx
  417f49:	sub    DWORD PTR [rax],eax
  417f4b:	add    BYTE PTR [rax],al
  417f4d:	add    BYTE PTR [rax],al
  417f4f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  417f53:	and    BYTE PTR [rdx+0x65],dh
  417f56:	jae    0x417fcd
  417f58:	ins    BYTE PTR es:[rdi],dx
  417f59:	je     0x417f7b
  417f5b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  417f62:	jae    0x417fd1
  417f64:	(bad)  
  417f65:	ins    BYTE PTR es:[rdi],dx
  417f66:	ins    BYTE PTR es:[rdi],dx
  417f67:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  417f6b:	(bad)  
  417f6c:	and    BYTE PTR gs:[rdx+0x65],dh
  417f70:	jo     0x417fe4
  417f72:	gs jae 0x417fda
  417f75:	outs   dx,BYTE PTR ds:[rsi]
  417f76:	je     0x417fdd
  417f78:	and    BYTE PTR fs:[rax],ch
  417f7b:	push   rbp
  417f7c:	rex.WRX
  417f7d:	rex.R
  417f7e:	rex.RB push r10
  417f80:	rex.RX
  417f81:	rex.WR
  417f82:	rex.WRXB push r15
  417f84:	sub    DWORD PTR [rax],eax
  417f86:	push   rbp
  417f87:	outs   dx,BYTE PTR ds:[rsi]
  417f88:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  417f8c:	outs   dx,BYTE PTR ds:[rsi]
  417f8d:	and    BYTE PTR [rbp+0x72],ah
  417f90:	jb     0x418001
  417f92:	jb     0x417f94
  417f94:	add    BYTE PTR [rax],al
  417f96:	add    BYTE PTR [rax],al
  417f98:	pop    rdi
  417f99:	ins    DWORD PTR es:[rdi],dx
  417f9a:	(bad)  
  417f9b:	je     0x418005
  417f9d:	gs jb  0x418012
  417fa0:	sub    BYTE PTR [rcx],ch
  417fa2:	cmp    ah,BYTE PTR [rax]
  417fa4:	and    eax,0x6e692073
  417fa9:	and    BYTE PTR [rip+0x67252873],ah        # 0x6766a822
  417faf:	sub    al,0x20
  417fb1:	and    eax,0x20202967
  417fb6:	sub    BYTE PTR [rdx+0x65],dh
  417fb9:	je     0x418031
  417fbb:	(bad)  
  417fbc:	ins    BYTE PTR es:[rdi],dx
  417fbd:	cmp    eax,0xa296725
  417fc2:	add    BYTE PTR [rax],al
  417fc4:	or     al,0x36
  417fc6:	(bad)  
  417fc7:	dec    DWORD PTR [rbp+0x35]
  417fca:	(bad)  
  417fcb:	(bad)  
  417fcc:	mov    esp,0xccffff35
  417fd1:	xor    eax,0x35dcffff
  417fd6:	(bad)  
  417fd7:	(bad)  
  417fd8:	in     al,dx
  417fd9:	xor    eax,0x35fcffff
  417fde:	(bad)  
  417fdf:	dec    DWORD PTR [rbp+0x69]
  417fe2:	outs   dx,BYTE PTR ds:[rsi]
  417fe3:	addr32 ja 0x418013
  417fe6:	ja     0x41801e
  417fe8:	xor    al,0x20
  417fea:	jb     0x418061
  417fec:	outs   dx,BYTE PTR ds:[rsi]
  417fed:	je     0x418058
  417fef:	ins    DWORD PTR es:[rdi],dx
  417ff0:	and    BYTE PTR gs:[rsi+0x61],ah
  417ff4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  417ffc:	add    BYTE PTR [rax],al
  417ffe:	add    BYTE PTR [rax],al
  418000:	rex.B
  418001:	fs fs jb 0x41806a
  418005:	jae    0x41807a
  418007:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a9a07d
  41800d:	jae    0x41802f
  41800f:	outs   dx,BYTE PTR ds:[rsi]
  418010:	outs   dx,DWORD PTR ds:[rsi]
  418011:	and    BYTE PTR [rcx+0x6d],ch
  418014:	(bad)  
  418015:	addr32 gs sub eax,0x74636573
  41801c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  418023:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  41802a:	jne    0x418091
  41802c:	jb     0x4180a7
  41802e:	and    BYTE PTR [rsi+0x61],ah
  418031:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  418039:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a3a0a3
  41803f:	je     0x4180a6
  418041:	jae    0x418063
  418043:	(bad)  
  418044:	je     0x418066
  418046:	(bad)  
  418047:	fs fs jb 0x4180b0
  41804b:	jae    0x4180c0
  41804d:	and    BYTE PTR [rip+0x70],ah        # 0x4180c3
  418053:	add    BYTE PTR [rax],al
  418055:	add    BYTE PTR [rax],al
  418057:	add    BYTE PTR [rax],ah
  418059:	and    BYTE PTR [rsi+0x69],dl
  41805c:	jb     0x4180d2
  41805e:	jne    0x4180c1
  418060:	ins    BYTE PTR es:[rdi],dx
  418061:	push   rax
  418062:	jb     0x4180d3
  418064:	je     0x4180cb
  418066:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  41806a:	(bad)  
  41806b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  418073:	push   0x646f6320
  418078:	and    BYTE PTR gs:[rax],dh
  41807b:	js     0x4180a2
  41807d:	js     0x41807f
  41807f:	add    BYTE PTR [rax],ah
  418081:	and    BYTE PTR [rbp+0x6e],dl
  418084:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  418088:	outs   dx,BYTE PTR ds:[rsi]
  418089:	and    BYTE PTR [rax+0x73],dh
  41808c:	gs jne 0x4180f3
  41808f:	outs   dx,DWORD PTR ds:[rsi]
  418090:	and    BYTE PTR [rdx+0x65],dh
  418093:	ins    BYTE PTR es:[rdi],dx
  418094:	outs   dx,DWORD PTR ds:[rsi]
  418095:	movsxd esp,DWORD PTR [rcx+0x74]
  418098:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  41809f:	je     0x418110
  4180a1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4180a4:	and    BYTE PTR [rsi+0x65],dh
  4180a7:	jb     0x41811c
  4180a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4180b0:	or     al,BYTE PTR [rax]
  4180b2:	add    BYTE PTR [rax],al
  4180b4:	add    BYTE PTR [rax],al
  4180b6:	add    BYTE PTR [rax],al
  4180b8:	and    BYTE PTR [rax],ah
  4180ba:	push   rbp
  4180bb:	outs   dx,BYTE PTR ds:[rsi]
  4180bc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4180c0:	outs   dx,BYTE PTR ds:[rsi]
  4180c1:	and    BYTE PTR [rax+0x73],dh
  4180c4:	gs jne 0x41812b
  4180c7:	outs   dx,DWORD PTR ds:[rsi]
  4180c8:	and    BYTE PTR [rdx+0x65],dh
  4180cb:	ins    BYTE PTR es:[rdi],dx
  4180cc:	outs   dx,DWORD PTR ds:[rsi]
  4180cd:	movsxd esp,DWORD PTR [rcx+0x74]
  4180d0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4180d7:	and    BYTE PTR [rbx+0x69],dh
  4180da:	jp     0x418141
  4180dc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4baf46
	...
  4180ee:	add    BYTE PTR [rax],al
  4180f0:	cs jo  0x418157
  4180f3:	(bad)  
  4180f4:	je     0x418157
	...
  4180fe:	add    BYTE PTR [rax],al
  418100:	cmp    al,0x0
  418102:	jne    0x418104
  418104:	outs   dx,BYTE PTR ds:[rsi]
  418105:	add    BYTE PTR [rbx+0x0],ch
  418108:	outs   dx,BYTE PTR ds:[rsi]
  418109:	add    BYTE PTR [rdi+0x0],ch
  41810c:	ja     0x41810e
  41810e:	outs   dx,BYTE PTR ds:[rsi]
  41810f:	add    BYTE PTR [rsi],bh
  418111:	add    BYTE PTR [rax],al
  418113:	add    BYTE PTR [rdi],bh
  418115:	add    BYTE PTR [rax],al
  418117:	add    BYTE PTR [rcx+0x0],al
  41811a:	jae    0x41811c
  41811c:	jae    0x41811e
  41811e:	add    BYTE PTR gs:[rdx+0x0],dh
  418122:	je     0x418124
  418124:	imul   eax,DWORD PTR [rax],0x6e006f
  41812a:	and    BYTE PTR [rax],al
  41812c:	data16 add BYTE PTR [rcx+0x0],ah
  418130:	imul   eax,DWORD PTR [rax],0x65006c
  418136:	add    BYTE PTR fs:[rcx],ah
  418139:	add    BYTE PTR [rdx],cl
  41813b:	add    BYTE PTR [rdx],cl
  41813d:	add    BYTE PTR [rax+0x0],dl
  418140:	jb     0x418142
  418142:	outs   dx,DWORD PTR ds:[rsi]
  418143:	add    BYTE PTR [rdi+0x0],ah
  418146:	jb     0x418148
  418148:	(bad)  
  418149:	add    BYTE PTR [rbp+0x0],ch
  41814c:	cmp    al,BYTE PTR [rax]
  41814e:	and    BYTE PTR [rax],al
  418150:	and    eax,0x73007700
  418155:	add    BYTE PTR [rdx],cl
  418157:	add    BYTE PTR [rsi+0x0],al
  41815a:	imul   eax,DWORD PTR [rax],0x65006c
  418160:	cmp    al,BYTE PTR [rax]
  418162:	and    BYTE PTR [rax],al
  418164:	and    eax,0x73007700
  418169:	add    BYTE PTR [rax+rax*1],ch
  41816c:	and    BYTE PTR [rax],al
  41816e:	rex.WR add BYTE PTR [rcx+0x0],r13b
  418172:	outs   dx,BYTE PTR ds:[rsi]
  418173:	add    BYTE PTR [rbp+0x0],ah
  418176:	and    BYTE PTR [rax],al
  418178:	and    eax,0xa007500
  41817d:	add    BYTE PTR [rdx],cl
  41817f:	add    BYTE PTR [rbp+0x0],al
  418182:	js     0x418184
  418184:	jo     0x418186
  418186:	jb     0x418188
  418188:	add    BYTE PTR gs:[rbx+0x0],dh
  41818c:	jae    0x41818e
  41818e:	imul   eax,DWORD PTR [rax],0x6e006f
  418194:	cmp    al,BYTE PTR [rax]
  418196:	and    BYTE PTR [rax],al
  418198:	and    eax,0x73007700
  41819d:	add    BYTE PTR [rax],al
  41819f:	add    BYTE PTR [rip+0x73007700],ah        # 0x7341f8a5
  4181a5:	add    BYTE PTR [rdx],cl
	...
  4181af:	add    BYTE PTR [rbp+0x0],cl
  4181b2:	imul   eax,DWORD PTR [rax],0x47006e
  4181b8:	push   rdi
  4181b9:	add    BYTE PTR [rax],ah
  4181bb:	add    BYTE PTR [rdx+0x0],dl
  4181be:	jne    0x4181c0
  4181c0:	outs   dx,BYTE PTR ds:[rsi]
  4181c1:	add    BYTE PTR [rax+rax*1+0x69],dh
  4181c5:	add    BYTE PTR [rbp+0x0],ch
  4181c8:	add    BYTE PTR gs:[rax],ah
  4181cb:	add    BYTE PTR [rcx+0x0],al
  4181ce:	jae    0x4181d0
  4181d0:	jae    0x4181d2
  4181d2:	add    BYTE PTR gs:[rdx+0x0],dh
  4181d6:	je     0x4181d8
  4181d8:	imul   eax,DWORD PTR [rax],0x6e006f
  4181de:	add    BYTE PTR [rax],al
  4181e0:	rex.WRX (bad) 
  4181e2:	rex.WRX add BYTE PTR [rcx+0x6e],r9b
  4181e6:	data16 add BYTE PTR [rax],ch
  4181e9:	add    BYTE PTR [rsi+0x0],ch
  4181ec:	jne    0x4181ee
  4181ee:	ins    BYTE PTR es:[rdi],dx
  4181ef:	add    BYTE PTR [rax+rax*1+0x29],ch
  4181f3:	add    BYTE PTR [rax],al
  4181f5:	add    BYTE PTR [rax],ch
  4181f7:	outs   dx,BYTE PTR ds:[rsi]
  4181f8:	jne    0x418266
  4181fa:	ins    BYTE PTR es:[rdi],dx
  4181fb:	sub    DWORD PTR [rax],eax
  4181fd:	push   rax
  4181fe:	push   rdx
  4181ff:	rex.WB
  418200:	rex.WRX push rsp
  418202:	rex.RX pop rdi
  418204:	rex.RB pop r8
  418206:	push   rax
  418207:	rex.WRXB
  418208:	rex.WRX
  418209:	rex.RB
  41820a:	rex.WRX push rsp
  41820c:	pop    rdi
  41820d:	rex.R
  41820e:	rex.WB
  41820f:	rex.RXB
  418210:	rex.WB push r12
  418212:	push   rbx
  418213:	add    BYTE PTR [rax+rbp*2+0x693cffff],bh
  41821a:	(bad)  
  41821b:	(bad)  
  41821c:	cmp    al,0x69
  41821e:	(bad)  
  41821f:	call   FWORD PTR [rax+rbp*2+0x693cffff]
  418226:	(bad)  
  418227:	(bad)  
  418228:	out    dx,al
  418229:	push   0x693cffff
  41822e:	(bad)  
  41822f:	(bad)  
  418230:	fsubr  QWORD PTR [rax-0x1]
  418233:	(bad)  
  418234:	cmp    al,0x69
  418236:	(bad)  
  418237:	(bad)  
  418238:	cmp    al,0x69
  41823a:	(bad)  
  41823b:	(bad)  
  41823c:	cld    
  41823d:	push   0x687cffff
  418242:	(bad)  
  418243:	(bad)  
  418244:	cmp    al,0x69
  418246:	(bad)  
  418247:	call   FWORD PTR [rax+rbp*2-0x1]
  41824b:	(bad)  
  41824c:	cmp    al,0x68
  41824e:	(bad)  
  41824f:	(bad)  
  418250:	cmp    al,0x69
  418252:	(bad)  
  418253:	call   FWORD PTR [rax+rbp*2]
  418256:	(bad)  
  418257:	(bad)  
  418258:	cmp    al,0x69
  41825a:	(bad)  
  41825b:	(bad)  
  41825c:	cmp    al,0x69
  41825e:	(bad)  
  41825f:	(bad)  
  418260:	cmp    al,0x69
  418262:	(bad)  
  418263:	(bad)  
  418264:	cmp    al,0x69
  418266:	(bad)  
  418267:	(bad)  
  418268:	cmp    al,0x69
  41826a:	(bad)  
  41826b:	(bad)  
  41826c:	cmp    al,0x69
  41826e:	(bad)  
  41826f:	(bad)  
  418270:	cmp    al,0x69
  418272:	(bad)  
  418273:	(bad)  
  418274:	cmp    al,0x69
  418276:	(bad)  
  418277:	(bad)  
  418278:	cmp    al,0x69
  41827a:	(bad)  
  41827b:	(bad)  
  41827c:	cmp    al,0x69
  41827e:	(bad)  
  41827f:	(bad)  
  418280:	cmp    al,0x69
  418282:	(bad)  
  418283:	(bad)  
  418284:	cmp    al,0x69
  418286:	(bad)  
  418287:	(bad)  
  418288:	cmp    al,0x69
  41828a:	(bad)  
  41828b:	(bad)  
  41828c:	cmp    al,0x69
  41828e:	(bad)  
  41828f:	(bad)  
  418290:	cmp    al,0x69
  418292:	(bad)  
  418293:	(bad)  
  418294:	cmp    al,0x69
  418296:	(bad)  
  418297:	(bad)  
  418298:	out    dx,al
  418299:	addr32 (bad) 
  41829b:	(bad)  
  41829c:	cmp    al,0x69
  41829e:	(bad)  
  41829f:	(bad)  
  4182a0:	mov    esp,0x3cffff67
  4182a5:	imul   edi,edi,0xff678dff
  4182ab:	call   FWORD PTR [rdi+0x67]
  4182ae:	(bad)  
  4182af:	push   QWORD PTR [rcx]
  4182b1:	addr32 (bad) 
  4182b3:	(bad)  
  4182b4:	cmp    al,0x69
  4182b6:	(bad)  
  4182b7:	dec    DWORD PTR [rdi+riz*2]
  4182ba:	(bad)  
  4182bb:	(bad)  
  4182bc:	cmp    al,0x69
  4182be:	(bad)  
  4182bf:	(bad)  
  4182c0:	cmp    al,0x69
  4182c2:	(bad)  
  4182c3:	(bad)  
  4182c4:	in     al,dx
  4182c5:	data16 (bad) 
  4182c7:	(bad)  
  4182c8:	cmp    al,0x69
  4182ca:	(bad)  
  4182cb:	(bad)  
  4182cc:	cmp    al,0x69
  4182ce:	(bad)  
  4182cf:	(bad)  
  4182d0:	cmp    al,0x69
  4182d2:	(bad)  
  4182d3:	(bad)  
  4182d4:	cmp    al,0x69
  4182d6:	(bad)  
  4182d7:	(bad)  
  4182d8:	cmp    al,0x69
  4182da:	(bad)  
  4182db:	(bad)  
  4182dc:	cmp    al,0x69
  4182de:	(bad)  
  4182df:	(bad)  
  4182e0:	jg     0x41834b
  4182e2:	(bad)  
  4182e3:	(bad)  
  4182e4:	cmp    al,0x69
  4182e6:	(bad)  
  4182e7:	(bad)  
  4182e8:	cmp    al,0x69
  4182ea:	(bad)  
  4182eb:	(bad)  
  4182ec:	cmp    al,0x69
  4182ee:	(bad)  
  4182ef:	(bad)  
  4182f0:	cmp    al,0x69
  4182f2:	(bad)  
  4182f3:	(bad)  
  4182f4:	mov    esp,0x3cffff65
  4182f9:	imul   edi,edi,0xff693cff
  4182ff:	(bad)  
  418300:	cmp    al,0x69
  418302:	(bad)  
  418303:	(bad)  
  418304:	cmp    al,0x69
  418306:	(bad)  
  418307:	(bad)  
  418308:	cmp    al,0x69
  41830a:	(bad)  
  41830b:	(bad)  
  41830c:	cmp    al,0x69
  41830e:	(bad)  
  41830f:	(bad)  
  418310:	cmp    al,0x69
  418312:	(bad)  
  418313:	(bad)  
  418314:	cmp    al,0x69
  418316:	(bad)  
  418317:	dec    DWORD PTR [rsi+riz*2-0x1]
  41831b:	(bad)  
  41831c:	cmp    al,0x69
  41831e:	(bad)  
  41831f:	dec    DWORD PTR [rip+0xffffffff8cffff66]        # 0xffffffff8d41828b
  418325:	data16 (bad) 
  418327:	(bad)  
  418328:	jl     0x41838f
  41832a:	(bad)  
  41832b:	(bad)  
  41832c:	cmp    al,0x65
  41832e:	(bad)  
  41832f:	dec    edi
  418331:	fs (bad) 
  418333:	dec    DWORD PTR [riz*2+0x668cffff]
  41833a:	(bad)  
  41833b:	jmp    FWORD PTR [rsp+riz*2+0x693cffff]
  418342:	(bad)  
  418343:	(bad)  
  418344:	jl     0x4183aa
  418346:	(bad)  
  418347:	dec    DWORD PTR [rsp+riz*2-0x1]
  41834b:	dec    DWORD PTR [rsp+riz*2]
  41834e:	(bad)  
  41834f:	(bad)  
  418350:	mov    esp,0xccffff65
  418355:	movsxd edi,edi
  418357:	(bad)  
  418358:	cmp    al,0x69
  41835a:	(bad)  
  41835b:	(bad)  
  41835c:	cmp    al,0x69
  41835e:	(bad)  
  41835f:	inc    DWORD PTR [rcx-0x5300009d]
  418365:	fs (bad) 
  418367:	(bad)  
  418368:	mov    esp,0x3cffff65
  41836d:	imul   edi,edi,0xff693cff
  418373:	(bad)  
  418374:	mov    esp,0x3cffff65
  418379:	imul   edi,edi,0xff64acff
  41837f:	dec    DWORD PTR [rcx+0x6e]
  418382:	imul   bp,WORD PTR [rsi+0x69],0x7974
  418388:	add    BYTE PTR [rsi+0x61],cl
  41838b:	rex.WRX add BYTE PTR [rax],r14b
  41838e:	add    BYTE PTR [rax],al
  418390:	out    dx,al
  418391:	ins    DWORD PTR es:[rdi],dx
  418392:	(bad)  
  418393:	jmp    QWORD PTR [rbp*2+0x6d24ffff]
  41839a:	(bad)  
  41839b:	jmp    QWORD PTR [rax+0x6e]
  41839e:	(bad)  
  41839f:	push   QWORD PTR [rbx]
  4183a1:	outs   dx,BYTE PTR ds:[rsi]
  4183a2:	(bad)  
  4183a3:	inc    DWORD PTR [rax]
	...
  4183ad:	add    al,bh
  4183af:	(bad)  
  4183b0:	(bad)  
  4183b1:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4183b3:	movsxd esp,DWORD PTR [rdi-0x4cc02d79]
  4183b9:	enter  0x8b60,0x28
  4183bd:	mov    al,dh
  4183bf:	(bad)  
  4183c0:	sti    
  4183c1:	jns    0x418362
  4183c3:	push   rax
  4183c4:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  4183c8:	add    al,0xfa
  4183ca:	jge    0x418369
  4183cc:	(bad)  
  4183cd:	sub    eax,0x5a323c94
  4183d2:	rex.RXB push r13
  4183d4:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  4183d8:	add    BYTE PTR [rax],al
  4183da:	add    BYTE PTR [rax],al
  4183dc:	add    BYTE PTR [rax],al
  4183de:	lock (bad) 
  4183e0:	add    BYTE PTR [rax],al
  4183e2:	add    BYTE PTR [rax],al
  4183e4:	add    BYTE PTR [rax],al
  4183e6:	and    al,0x40
  4183e8:	add    BYTE PTR [rax],al
  4183ea:	add    BYTE PTR [rax],al
  4183ec:	add    BYTE PTR [rax],al
  4183ee:	or     BYTE PTR [rax+0x0],al
  4183f1:	add    BYTE PTR [rax],al
  4183f3:	add    BYTE PTR [rax],al
  4183f5:	add    BYTE PTR [rax+rax*2],bl
  4183f8:	add    BYTE PTR [rax],al
  4183fa:	add    BYTE PTR [rax],al
  4183fc:	add    BYTE PTR [rax],al
  4183fe:	adc    al,0x40
  418400:	add    BYTE PTR [rax],al
  418402:	add    BYTE PTR [rax],al
  418404:	add    BYTE PTR [rax],al
  418406:	add    BYTE PTR [rax+0x0],al
	...
  418414:	add    BYTE PTR [rax],al
  418416:	loopne 0x418457
	...
  418440:	add    eax,0x19000000
  418445:	add    BYTE PTR [rax],al
  418447:	add    BYTE PTR [rbp+0x0],bh
	...
  418486:	lock (bad) 
  418488:	add    BYTE PTR [rax],al
  41848a:	add    BYTE PTR [rax],al
  41848c:	add    BYTE PTR [rax],al
  41848e:	and    al,0x40
  418490:	add    BYTE PTR [rax],al
  418492:	add    BYTE PTR [rax],al
  418494:	add    BYTE PTR [rax],al
  418496:	pop    rcx
  418497:	add    BYTE PTR [rax],al
  41849a:	add    BYTE PTR [rax],al
  41849c:	add    BYTE PTR [rax-0x71],al
  41849f:	add    BYTE PTR [rax],al
  4184a2:	add    BYTE PTR [rax],al
  4184a4:	add    BYTE PTR [rax+0x40c3],cl
  4184aa:	add    BYTE PTR [rax],al
  4184ac:	add    BYTE PTR [rdx-0x8],ch
  4184af:	add    BYTE PTR [rax],al
  4184b2:	add    BYTE PTR [rax],al
  4184b4:	add    BYTE PTR [rsi+rbp*1+0x41],0x0
  4184bc:	rcl    BYTE PTR [rdx],1
  4184be:	movsxd eax,DWORD PTR [rcx+0x0]
  4184c1:	add    BYTE PTR [rax],al
  4184c3:	add    BYTE PTR [rdi+rdx*8+0x4197],al
  4184ca:	add    BYTE PTR [rax],al
  4184cc:	gs int 0xcd
  4184cf:	add    BYTE PTR [r8],al
  4184d2:	add    BYTE PTR [rax],ah
  4184d4:	pop    rdi
  4184d5:	movabs al,ds:0x4876e80000004202
  4184de:	(bad)  
  4184df:	rex.X add BYTE PTR [rax],al
  4184e2:	add    BYTE PTR [rdx+0x426d1a94],ah
  4184e8:	add    BYTE PTR [rax],al
  4184ea:	rex in eax,0x9c
  4184ed:	xor    BYTE PTR [rdx-0x6fffffbe],ah
  4184f3:	(bad)  
  4184f4:	(bad)  
  4184f5:	mov    esp,0x42d6
  4184fa:	xor    al,0x26
  4184fc:	cmc    
  4184fd:	imul   ecx,DWORD PTR [rbx+rax*2],0x0
  418501:	and    al,0x37
  418504:	jns    0x4184c9
  418506:	rex.B
  418507:	rex.XB add BYTE PTR [r8+0x345785d8],spl
  41850e:	jbe    0x418553
  418510:	add    al,cl
  418512:	rex.WRX
  418513:	ins    DWORD PTR es:[edi],dx
  418515:	shr    DWORD PTR [rbx-0x6ec2ffbd],0x60
  41851c:	in     al,0x58
  41851e:	loope  0x418563
  418520:	rex mov WORD PTR [rbp+0x15af1d78],?
  418527:	rex.R push rax
  418529:	out    dx,eax
  41852a:	loop   0x418502
  41852c:	in     al,0x1a
  41852e:	rex.WXB
  41852f:	rex.R xchg edx,eax
  418531:	(bad)  
  418532:	rex.WRB (bad) 
  418534:	iret   
  418535:	lock add BYTE PTR [rax+rax*1+0x0],0x0
  41853b:	add    BYTE PTR [rax],al
  41853d:	add    BYTE PTR [rax],al
  41853f:	add    BYTE PTR [rcx+rcx*4-0x2d4d6828],bh
  418546:	pushf  
  418547:	cmp    al,0x33
  418549:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41854a:	test   al,0xd5
  41854c:	and    esi,esi
  41854e:	cmp    QWORD PTR [rip+0xfffffffffd44f4a7],rdi        # 0xfffffffffd8679fc
  418555:	shld   DWORD PTR [rdx],esi,cl
  418558:	popf   
  418559:	xchg   edi,eax
  41855a:	mov    edi,cs
  41855c:	or     BYTE PTR [rdx+0x6f43255b],bh
  418562:	lods   al,BYTE PTR ds:[rsi]
  418563:	sub    BYTE PTR fs:[rsi],al
  418566:	enter  0xa,0x0
	...
  41857e:	add    BYTE PTR [rax],al
  418580:	add    BYTE PTR [rax-0x3c86c820],al
  418586:	rex.B
  418587:	rex.XB (bad) 
  418589:	outs   dx,BYTE PTR ds:[rsi]
  41858a:	add    eax,0x93b8b5b5
  41858f:	rex.RX cmc 
  418591:	stc    
  418592:	(bad)  
  418593:	jmp    0x4d79d49b
  418598:	xor    bl,BYTE PTR [rip+0x7748f930]        # 0x778a7ece
  41859e:	(bad)  
  41859f:	pop    rdx
  4185a0:	cmp    al,0xbf
  4185a2:	jae    0x418623
  4185a4:	fisttp QWORD PTR [rdi+0x15]
  4185a7:	jne    0x4185a9
	...
  4185bd:	add    BYTE PTR [rax],al
  4185bf:	add    BYTE PTR [rbp+0x0],ch
  4185c2:	jae    0x4185c4
  4185c4:	jbe    0x4185c6
  4185c6:	movsxd eax,DWORD PTR [rax]
  4185c8:	jb     0x4185ca
  4185ca:	je     0x4185cc
  4185cc:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
  4185d1:	add    BYTE PTR [rax+rax*1+0x0],ch
  4185d5:	add    BYTE PTR [rdi+0x73],bl
  4185d8:	gs je  0x41863a
  4185db:	outs   dx,DWORD PTR ds:[rsi]
  4185dc:	jne    0x418652
  4185de:	jo     0x418655
  4185e0:	je     0x418641
  4185e2:	outs   dx,WORD PTR ds:[rsi]
  4185e4:	jb     0x418653
  4185e6:	(bad)  
  4185e7:	je     0x4185e9
  4185e9:	pop    rdi
  4185ea:	addr32 gs je 0x41864d
  4185ee:	outs   dx,DWORD PTR ds:[rsi]
  4185ef:	jne    0x418665
  4185f1:	jo     0x418668
  4185f3:	je     0x418654
  4185f5:	outs   dx,WORD PTR ds:[rsi]
  4185f7:	jb     0x418666
  4185f9:	(bad)  
  4185fa:	je     0x4185fc
  4185fc:	add    BYTE PTR [rax],al
  4185fe:	add    BYTE PTR [rax],al
  418600:	lock and BYTE PTR [rcx+0x0],al
	...
  418610:	add    BYTE PTR [rcx],ah
  418612:	add    BYTE PTR [r8],al
	...
  41861d:	add    BYTE PTR [rax],al
  41861f:	add    BYTE PTR [rax+0x1c],dh
  418622:	add    BYTE PTR [r8],al
	...
  41862d:	add    BYTE PTR [rax],al
  41862f:	add    BYTE PTR [rax-0x6f],dh
  418632:	add    BYTE PTR [r8],al
	...
  41863d:	add    BYTE PTR [rax],al
  41863f:	add    BYTE PTR [rax-0x6f],dh
  418642:	add    BYTE PTR [r8],al
	...
  41864d:	add    BYTE PTR [rax],al
  41864f:	add    BYTE PTR [rax+0x417e],dl
	...
  418661:	add    BYTE PTR [rax+0x0],al
	...
  418670:	enter  0x41f5,0x0
	...
  418680:	loopne 0x418677
  418682:	add    BYTE PTR [r8],al
	...
  41868d:	add    BYTE PTR [rax],al
  41868f:	add    al,bh
  418691:	cmc    
  418692:	add    BYTE PTR [r8],al
	...
  41869d:	add    BYTE PTR [rax],al
  41869f:	add    BYTE PTR [rax],ah
  4186a1:	test   BYTE PTR [rcx+0x0],0x0
	...
  4186ad:	add    BYTE PTR [rax],al
  4186af:	add    BYTE PTR [rax-0xa],al
  4186b2:	add    BYTE PTR [r8],al
	...
  4186bd:	add    BYTE PTR [rax],al
  4186bf:	add    BYTE PTR [rax-0x27],al
  4186c2:	add    BYTE PTR [r8],al
	...
  4186cd:	add    BYTE PTR [rax],al
  4186cf:	add    BYTE PTR [rax],ch
  4186d1:	out    0x41,eax
	...
  4186df:	add    BYTE PTR [rax],ah
  4186e1:	out    0x41,eax
	...
  4186ef:	add    BYTE PTR [rax],dl
  4186f1:	out    0x41,eax
	...
  4186ff:	add    BYTE PTR [rax],bl
  418701:	out    0x41,eax
	...
  41870f:	add    BYTE PTR [rax+0x4184],al
	...
  418721:	adc    BYTE PTR [rdx+0x0],al
	...
  418730:	adc    BYTE PTR [rax],dl
  418732:	rex.X add BYTE PTR [rax],al
	...
  41873d:	add    BYTE PTR [rax],al
  41873f:	add    BYTE PTR [rax],bl
  418741:	adc    BYTE PTR [rdx+0x0],al
	...
  418750:	xor    BYTE PTR [rax],dl
  418752:	rex.X add BYTE PTR [rax],al
	...
  41875d:	add    BYTE PTR [rax],al
  41875f:	add    al,dl
  418761:	rol    BYTE PTR [rcx+0x0],cl
	...
  418770:	adc    cl,bl
  418772:	add    BYTE PTR [r8],al
	...
  41877d:	add    BYTE PTR [rax],al
  41877f:	add    BYTE PTR [rax+0x40bd],dl
	...
  41878d:	add    BYTE PTR [rax],al
  41878f:	add    al,ah
  418791:	mov    ah,0x40
	...
  41879f:	add    al,al
  4187a1:	fadd   DWORD PTR [rcx+0x0]
	...
  4187b0:	rcl    BYTE PTR [rdi],0x40
	...
  4187bf:	add    BYTE PTR [rax+0x4173],al
	...
  4187cd:	add    BYTE PTR [rax],al
  4187cf:	add    al,dh
  4187d1:	fadd   DWORD PTR [rcx+0x0]
	...
  4187e0:	loopne 0x4187b4
  4187e2:	add    BYTE PTR [r8],al
	...
  4187ed:	add    BYTE PTR [rax],al
  4187ef:	add    al,bl
  4187f1:	fadd   DWORD PTR [rcx+0x0]
	...
  418800:	(bad)  
  418801:	fadd   DWORD PTR [rcx+0x0]
	...
  418810:	rcr    al,1
  418812:	add    BYTE PTR [r8],al
	...
  41881d:	add    BYTE PTR [rax],al
  41881f:	add    BYTE PTR [rax-0x40],dl
  418822:	add    BYTE PTR [r8],al
	...
  41882d:	add    BYTE PTR [rax],al
  41882f:	add    BYTE PTR [rax],cl
  418831:	out    0x41,eax
	...
  41883f:	add    BYTE PTR [rax],ch
  418841:	and    BYTE PTR [rcx+0x0],al
	...
  418850:	rex.RXB
  418851:	rex.XB
  418852:	rex.XB cmp spl,BYTE PTR [r8]
  418855:	sub    BYTE PTR [rdi+0x4e],al
  418858:	push   rbp
  418859:	sub    DWORD PTR [rax],esp
  41885b:	xor    al,0x2e
  41885d:	cmp    DWORD PTR [rsi],ebp
  41885f:	xor    al,0x0
	...
  41886d:	add    BYTE PTR [rax],al
  41886f:	add    BYTE PTR [rdi+0x43],al
  418872:	rex.XB cmp spl,BYTE PTR [r8]
  418875:	sub    BYTE PTR [rdi+0x4e],al
  418878:	push   rbp
  418879:	sub    DWORD PTR [rax],esp
  41887b:	xor    al,0x2e
  41887d:	cmp    DWORD PTR [rsi],ebp
  41887f:	xor    al,0x0
	...
  41888d:	add    BYTE PTR [rax],al
  41888f:	add    BYTE PTR [rdi+0x43],al
  418892:	rex.XB cmp spl,BYTE PTR [r8]
  418895:	sub    BYTE PTR [rdi+0x4e],al
  418898:	push   rbp
  418899:	sub    DWORD PTR [rax],esp
  41889b:	xor    al,0x2e
  41889d:	cmp    DWORD PTR [rsi],ebp
  41889f:	xor    al,0x0
	...
  4188ad:	add    BYTE PTR [rax],al
  4188af:	add    BYTE PTR [rdi+0x43],al
  4188b2:	rex.XB cmp spl,BYTE PTR [r8]
  4188b5:	sub    BYTE PTR [rdi+0x4e],al
  4188b8:	push   rbp
  4188b9:	sub    DWORD PTR [rax],esp
  4188bb:	xor    al,0x2e
  4188bd:	cmp    DWORD PTR [rsi],ebp
  4188bf:	xor    al,0x0
	...
  4188cd:	add    BYTE PTR [rax],al
  4188cf:	add    BYTE PTR [rdi+0x43],al
  4188d2:	rex.XB cmp spl,BYTE PTR [r8]
  4188d5:	sub    BYTE PTR [rdi+0x4e],al
  4188d8:	push   rbp
  4188d9:	sub    DWORD PTR [rax],esp
  4188db:	xor    al,0x2e
  4188dd:	cmp    DWORD PTR [rsi],ebp
  4188df:	xor    al,0x0
	...
  4188ed:	add    BYTE PTR [rax],al
  4188ef:	add    BYTE PTR [rdi+0x43],al
  4188f2:	rex.XB cmp spl,BYTE PTR [r8]
  4188f5:	sub    BYTE PTR [rdi+0x4e],al
  4188f8:	push   rbp
  4188f9:	sub    DWORD PTR [rax],esp
  4188fb:	xor    al,0x2e
  4188fd:	cmp    DWORD PTR [rsi],ebp
  4188ff:	xor    al,0x0
	...
  41890d:	add    BYTE PTR [rax],al
  41890f:	add    BYTE PTR [rdi+0x43],al
  418912:	rex.XB cmp spl,BYTE PTR [r8]
  418915:	sub    BYTE PTR [rdi+0x4e],al
  418918:	push   rbp
  418919:	sub    DWORD PTR [rax],esp
  41891b:	xor    al,0x2e
  41891d:	cmp    DWORD PTR [rsi],ebp
  41891f:	xor    al,0x0
	...
  41892d:	add    BYTE PTR [rax],al
  41892f:	add    BYTE PTR [rdi+0x43],al
  418932:	rex.XB cmp spl,BYTE PTR [r8]
  418935:	sub    BYTE PTR [rdi+0x4e],al
  418938:	push   rbp
  418939:	sub    DWORD PTR [rax],esp
  41893b:	xor    al,0x2e
  41893d:	cmp    DWORD PTR [rsi],ebp
  41893f:	xor    al,0x0
	...
  41894d:	add    BYTE PTR [rax],al
  41894f:	add    BYTE PTR [rdi+0x43],al
  418952:	rex.XB cmp spl,BYTE PTR [r8]
  418955:	sub    BYTE PTR [rdi+0x4e],al
  418958:	push   rbp
  418959:	sub    DWORD PTR [rax],esp
  41895b:	xor    al,0x2e
  41895d:	cmp    DWORD PTR [rsi],ebp
  41895f:	xor    al,0x0
	...
  41896d:	add    BYTE PTR [rax],al
  41896f:	add    BYTE PTR [rdi+0x43],al
  418972:	rex.XB cmp spl,BYTE PTR [r8]
  418975:	sub    BYTE PTR [rdi+0x4e],al
  418978:	push   rbp
  418979:	sub    DWORD PTR [rax],esp
  41897b:	xor    al,0x2e
  41897d:	cmp    DWORD PTR [rsi],ebp
  41897f:	xor    al,0x0
	...
  41898d:	add    BYTE PTR [rax],al
  41898f:	add    BYTE PTR [rdi+0x43],al
  418992:	rex.XB cmp spl,BYTE PTR [r8]
  418995:	sub    BYTE PTR [rdi+0x4e],al
  418998:	push   rbp
  418999:	sub    DWORD PTR [rax],esp
  41899b:	xor    al,0x2e
  41899d:	cmp    DWORD PTR [rsi],ebp
  41899f:	xor    al,0x0
	...
  4189ad:	add    BYTE PTR [rax],al
  4189af:	add    BYTE PTR [rdi+0x43],al
  4189b2:	rex.XB cmp spl,BYTE PTR [r8]
  4189b5:	sub    BYTE PTR [rdi+0x4e],al
  4189b8:	push   rbp
  4189b9:	sub    DWORD PTR [rax],esp
  4189bb:	xor    al,0x2e
  4189bd:	cmp    DWORD PTR [rsi],ebp
  4189bf:	xor    al,0x0
	...
  4189cd:	add    BYTE PTR [rax],al
  4189cf:	add    BYTE PTR [rdi+0x43],al
  4189d2:	rex.XB cmp spl,BYTE PTR [r8]
  4189d5:	sub    BYTE PTR [rdi+0x4e],al
  4189d8:	push   rbp
  4189d9:	sub    DWORD PTR [rax],esp
  4189db:	xor    al,0x2e
  4189dd:	cmp    DWORD PTR [rsi],ebp
  4189df:	xor    al,0x0
	...
  4189ed:	add    BYTE PTR [rax],al
  4189ef:	add    BYTE PTR [rdi+0x43],al
  4189f2:	rex.XB cmp spl,BYTE PTR [r8]
  4189f5:	sub    BYTE PTR [rdi+0x4e],al
  4189f8:	push   rbp
  4189f9:	sub    DWORD PTR [rax],esp
  4189fb:	xor    al,0x2e
  4189fd:	cmp    DWORD PTR [rsi],ebp
  4189ff:	xor    al,0x0
	...
  418a0d:	add    BYTE PTR [rax],al
  418a0f:	add    BYTE PTR [rdi+0x43],al
  418a12:	rex.XB cmp spl,BYTE PTR [r8]
  418a15:	sub    BYTE PTR [rdi+0x4e],al
  418a18:	push   rbp
  418a19:	sub    DWORD PTR [rax],esp
  418a1b:	xor    al,0x2e
  418a1d:	cmp    DWORD PTR [rsi],ebp
  418a1f:	xor    al,0x0
	...
  418a2d:	add    BYTE PTR [rax],al
  418a2f:	add    BYTE PTR [rdi+0x43],al
  418a32:	rex.XB cmp spl,BYTE PTR [r8]
  418a35:	sub    BYTE PTR [rdi+0x4e],al
  418a38:	push   rbp
  418a39:	sub    DWORD PTR [rax],esp
  418a3b:	xor    al,0x2e
  418a3d:	cmp    DWORD PTR [rsi],ebp
  418a3f:	xor    al,0x0
	...
  418a4d:	add    BYTE PTR [rax],al
  418a4f:	add    BYTE PTR [rdi+0x43],al
  418a52:	rex.XB cmp spl,BYTE PTR [r8]
  418a55:	sub    BYTE PTR [rdi+0x4e],al
  418a58:	push   rbp
  418a59:	sub    DWORD PTR [rax],esp
  418a5b:	xor    al,0x2e
  418a5d:	cmp    DWORD PTR [rsi],ebp
  418a5f:	xor    al,0x0
	...
  418a6d:	add    BYTE PTR [rax],al
  418a6f:	add    BYTE PTR [rdi+0x43],al
  418a72:	rex.XB cmp spl,BYTE PTR [r8]
  418a75:	sub    BYTE PTR [rdi+0x4e],al
  418a78:	push   rbp
  418a79:	sub    DWORD PTR [rax],esp
  418a7b:	xor    al,0x2e
  418a7d:	cmp    DWORD PTR [rsi],ebp
  418a7f:	xor    al,0x0
	...
  418a8d:	add    BYTE PTR [rax],al
  418a8f:	add    BYTE PTR [rdi+0x43],al
  418a92:	rex.XB cmp spl,BYTE PTR [r8]
  418a95:	sub    BYTE PTR [rdi+0x4e],al
  418a98:	push   rbp
  418a99:	sub    DWORD PTR [rax],esp
  418a9b:	xor    al,0x2e
  418a9d:	cmp    DWORD PTR [rsi],ebp
  418a9f:	xor    al,0x0
	...
  418aad:	add    BYTE PTR [rax],al
  418aaf:	add    BYTE PTR [rdi+0x43],al
  418ab2:	rex.XB cmp spl,BYTE PTR [r8]
  418ab5:	sub    BYTE PTR [rdi+0x4e],al
  418ab8:	push   rbp
  418ab9:	sub    DWORD PTR [rax],esp
  418abb:	xor    al,0x2e
  418abd:	cmp    DWORD PTR [rsi],ebp
  418abf:	xor    al,0x0
	...
  418acd:	add    BYTE PTR [rax],al
  418acf:	add    BYTE PTR [rdi+0x43],al
  418ad2:	rex.XB cmp spl,BYTE PTR [r8]
  418ad5:	sub    BYTE PTR [rdi+0x4e],al
  418ad8:	push   rbp
  418ad9:	sub    DWORD PTR [rax],esp
  418adb:	xor    al,0x2e
  418add:	cmp    DWORD PTR [rsi],ebp
  418adf:	xor    al,0x0
	...
  418aed:	add    BYTE PTR [rax],al
  418aef:	add    BYTE PTR [rdi+0x43],al
  418af2:	rex.XB cmp spl,BYTE PTR [r8]
  418af5:	sub    BYTE PTR [rdi+0x4e],al
  418af8:	push   rbp
  418af9:	sub    DWORD PTR [rax],esp
  418afb:	xor    al,0x2e
  418afd:	cmp    DWORD PTR [rsi],ebp
  418aff:	xor    al,0x0
	...
  418b0d:	add    BYTE PTR [rax],al
  418b0f:	add    BYTE PTR [rdi+0x43],al
  418b12:	rex.XB cmp spl,BYTE PTR [r8]
  418b15:	sub    BYTE PTR [rdi+0x4e],al
  418b18:	push   rbp
  418b19:	sub    DWORD PTR [rax],esp
  418b1b:	xor    al,0x2e
  418b1d:	cmp    DWORD PTR [rsi],ebp
  418b1f:	xor    al,0x0
	...
  418b2d:	add    BYTE PTR [rax],al
  418b2f:	add    BYTE PTR [rdi+0x43],al
  418b32:	rex.XB cmp spl,BYTE PTR [r8]
  418b35:	sub    BYTE PTR [rdi+0x4e],al
  418b38:	push   rbp
  418b39:	sub    DWORD PTR [rax],esp
  418b3b:	xor    al,0x2e
  418b3d:	cmp    DWORD PTR [rsi],ebp
  418b3f:	xor    al,0x0
	...
  418b4d:	add    BYTE PTR [rax],al
  418b4f:	add    BYTE PTR [rdi+0x43],al
  418b52:	rex.XB cmp spl,BYTE PTR [r8]
  418b55:	sub    BYTE PTR [rdi+0x4e],al
  418b58:	push   rbp
  418b59:	sub    DWORD PTR [rax],esp
  418b5b:	xor    al,0x2e
  418b5d:	cmp    DWORD PTR [rsi],ebp
  418b5f:	xor    al,0x0
	...
  418b6d:	add    BYTE PTR [rax],al
  418b6f:	add    BYTE PTR [rdi+0x43],al
  418b72:	rex.XB cmp spl,BYTE PTR [r8]
  418b75:	sub    BYTE PTR [rdi+0x4e],al
  418b78:	push   rbp
  418b79:	sub    DWORD PTR [rax],esp
  418b7b:	xor    al,0x2e
  418b7d:	cmp    DWORD PTR [rsi],ebp
  418b7f:	xor    al,0x0
	...
  418b8d:	add    BYTE PTR [rax],al
  418b8f:	add    BYTE PTR [rdi+0x43],al
  418b92:	rex.XB cmp spl,BYTE PTR [r8]
  418b95:	sub    BYTE PTR [rdi+0x4e],al
  418b98:	push   rbp
  418b99:	sub    DWORD PTR [rax],esp
  418b9b:	xor    al,0x2e
  418b9d:	cmp    DWORD PTR [rsi],ebp
  418b9f:	xor    al,0x0
	...
  418bad:	add    BYTE PTR [rax],al
  418baf:	add    BYTE PTR [rdi+0x43],al
  418bb2:	rex.XB cmp spl,BYTE PTR [r8]
  418bb5:	sub    BYTE PTR [rdi+0x4e],al
  418bb8:	push   rbp
  418bb9:	sub    DWORD PTR [rax],esp
  418bbb:	xor    al,0x2e
  418bbd:	cmp    DWORD PTR [rsi],ebp
  418bbf:	xor    al,0x0
	...
  418bcd:	add    BYTE PTR [rax],al
  418bcf:	add    BYTE PTR [rdi+0x43],al
  418bd2:	rex.XB cmp spl,BYTE PTR [r8]
  418bd5:	sub    BYTE PTR [rdi+0x4e],al
  418bd8:	push   rbp
  418bd9:	sub    DWORD PTR [rax],esp
  418bdb:	xor    al,0x2e
  418bdd:	cmp    DWORD PTR [rsi],ebp
  418bdf:	xor    al,0x0
	...
  418bed:	add    BYTE PTR [rax],al
  418bef:	add    BYTE PTR [rdi+0x43],al
  418bf2:	rex.XB cmp spl,BYTE PTR [r8]
  418bf5:	sub    BYTE PTR [rdi+0x4e],al
  418bf8:	push   rbp
  418bf9:	sub    DWORD PTR [rax],esp
  418bfb:	xor    al,0x2e
  418bfd:	cmp    DWORD PTR [rsi],ebp
  418bff:	xor    al,0x0
	...
  418c0d:	add    BYTE PTR [rax],al
  418c0f:	add    BYTE PTR [rdi+0x43],al
  418c12:	rex.XB cmp spl,BYTE PTR [r8]
  418c15:	sub    BYTE PTR [rdi+0x4e],al
  418c18:	push   rbp
  418c19:	sub    DWORD PTR [rax],esp
  418c1b:	xor    al,0x2e
  418c1d:	cmp    DWORD PTR [rsi],ebp
  418c1f:	xor    al,0x0
	...
  418c2d:	add    BYTE PTR [rax],al
  418c2f:	add    BYTE PTR [rdi+0x43],al
  418c32:	rex.XB cmp spl,BYTE PTR [r8]
  418c35:	sub    BYTE PTR [rdi+0x4e],al
  418c38:	push   rbp
  418c39:	sub    DWORD PTR [rax],esp
  418c3b:	xor    al,0x2e
  418c3d:	cmp    DWORD PTR [rsi],ebp
  418c3f:	xor    al,0x0
	...
  418c4d:	add    BYTE PTR [rax],al
  418c4f:	add    BYTE PTR [rdi+0x43],al
  418c52:	rex.XB cmp spl,BYTE PTR [r8]
  418c55:	sub    BYTE PTR [rdi+0x4e],al
  418c58:	push   rbp
  418c59:	sub    DWORD PTR [rax],esp
  418c5b:	xor    al,0x2e
  418c5d:	cmp    DWORD PTR [rsi],ebp
  418c5f:	xor    al,0x0
	...
  418c6d:	add    BYTE PTR [rax],al
  418c6f:	add    BYTE PTR [rdi+0x43],al
  418c72:	rex.XB cmp spl,BYTE PTR [r8]
  418c75:	sub    BYTE PTR [rdi+0x4e],al
  418c78:	push   rbp
  418c79:	sub    DWORD PTR [rax],esp
  418c7b:	xor    al,0x2e
  418c7d:	cmp    DWORD PTR [rsi],ebp
  418c7f:	xor    al,0x0
	...
  418c8d:	add    BYTE PTR [rax],al
  418c8f:	add    BYTE PTR [rdi+0x43],al
  418c92:	rex.XB cmp spl,BYTE PTR [r8]
  418c95:	sub    BYTE PTR [rdi+0x4e],al
  418c98:	push   rbp
  418c99:	sub    DWORD PTR [rax],esp
  418c9b:	xor    al,0x2e
  418c9d:	cmp    DWORD PTR [rsi],ebp
  418c9f:	xor    al,0x0
	...
  418cad:	add    BYTE PTR [rax],al
  418caf:	add    BYTE PTR [rdi+0x43],al
  418cb2:	rex.XB cmp spl,BYTE PTR [r8]
  418cb5:	sub    BYTE PTR [rdi+0x4e],al
  418cb8:	push   rbp
  418cb9:	sub    DWORD PTR [rax],esp
  418cbb:	xor    al,0x2e
  418cbd:	cmp    DWORD PTR [rsi],ebp
  418cbf:	xor    al,0x0
	...
  418ccd:	add    BYTE PTR [rax],al
  418ccf:	add    BYTE PTR [rdi+0x43],al
  418cd2:	rex.XB cmp spl,BYTE PTR [r8]
  418cd5:	sub    BYTE PTR [rdi+0x4e],al
  418cd8:	push   rbp
  418cd9:	sub    DWORD PTR [rax],esp
  418cdb:	xor    al,0x2e
  418cdd:	cmp    DWORD PTR [rsi],ebp
  418cdf:	xor    al,0x0
	...
  418ced:	add    BYTE PTR [rax],al
  418cef:	add    BYTE PTR [rdi+0x43],al
  418cf2:	rex.XB cmp spl,BYTE PTR [r8]
  418cf5:	sub    BYTE PTR [rdi+0x4e],al
  418cf8:	push   rbp
  418cf9:	sub    DWORD PTR [rax],esp
  418cfb:	xor    al,0x2e
  418cfd:	cmp    DWORD PTR [rsi],ebp
  418cff:	xor    al,0x0
	...
  418d0d:	add    BYTE PTR [rax],al
  418d0f:	add    BYTE PTR [rdi+0x43],al
  418d12:	rex.XB cmp spl,BYTE PTR [r8]
  418d15:	sub    BYTE PTR [rdi+0x4e],al
  418d18:	push   rbp
  418d19:	sub    DWORD PTR [rax],esp
  418d1b:	xor    al,0x2e
  418d1d:	cmp    DWORD PTR [rsi],ebp
  418d1f:	xor    al,0x0
	...
  418d2d:	add    BYTE PTR [rax],al
  418d2f:	add    BYTE PTR [rdi+0x43],al
  418d32:	rex.XB cmp spl,BYTE PTR [r8]
  418d35:	sub    BYTE PTR [rdi+0x4e],al
  418d38:	push   rbp
  418d39:	sub    DWORD PTR [rax],esp
  418d3b:	xor    al,0x2e
  418d3d:	cmp    DWORD PTR [rsi],ebp
  418d3f:	xor    al,0x0
	...
  418d4d:	add    BYTE PTR [rax],al
  418d4f:	add    BYTE PTR [rdi+0x43],al
  418d52:	rex.XB cmp spl,BYTE PTR [r8]
  418d55:	sub    BYTE PTR [rdi+0x4e],al
  418d58:	push   rbp
  418d59:	sub    DWORD PTR [rax],esp
  418d5b:	xor    al,0x2e
  418d5d:	cmp    DWORD PTR [rsi],ebp
  418d5f:	xor    al,0x0
	...
  418d6d:	add    BYTE PTR [rax],al
  418d6f:	add    BYTE PTR [rdi+0x43],al
  418d72:	rex.XB cmp spl,BYTE PTR [r8]
  418d75:	sub    BYTE PTR [rdi+0x4e],al
  418d78:	push   rbp
  418d79:	sub    DWORD PTR [rax],esp
  418d7b:	xor    al,0x2e
  418d7d:	cmp    DWORD PTR [rsi],ebp
  418d7f:	xor    al,0x0
	...
  418d8d:	add    BYTE PTR [rax],al
  418d8f:	add    BYTE PTR [rdi+0x43],al
  418d92:	rex.XB cmp spl,BYTE PTR [r8]
  418d95:	sub    BYTE PTR [rdi+0x4e],al
  418d98:	push   rbp
  418d99:	sub    DWORD PTR [rax],esp
  418d9b:	xor    al,0x2e
  418d9d:	cmp    DWORD PTR [rsi],ebp
  418d9f:	xor    al,0x0
	...
  418dad:	add    BYTE PTR [rax],al
  418daf:	add    BYTE PTR [rdi+0x43],al
  418db2:	rex.XB cmp spl,BYTE PTR [r8]
  418db5:	sub    BYTE PTR [rdi+0x4e],al
  418db8:	push   rbp
  418db9:	sub    DWORD PTR [rax],esp
  418dbb:	xor    al,0x2e
  418dbd:	cmp    DWORD PTR [rsi],ebp
  418dbf:	xor    al,0x0
	...
  418dcd:	add    BYTE PTR [rax],al
  418dcf:	add    BYTE PTR [rdi+0x43],al
  418dd2:	rex.XB cmp spl,BYTE PTR [r8]
  418dd5:	sub    BYTE PTR [rdi+0x4e],al
  418dd8:	push   rbp
  418dd9:	sub    DWORD PTR [rax],esp
  418ddb:	xor    al,0x2e
  418ddd:	cmp    DWORD PTR [rsi],ebp
  418ddf:	xor    al,0x0
	...
  418ded:	add    BYTE PTR [rax],al
  418def:	add    BYTE PTR [rdi+0x43],al
  418df2:	rex.XB cmp spl,BYTE PTR [r8]
  418df5:	sub    BYTE PTR [rdi+0x4e],al
  418df8:	push   rbp
  418df9:	sub    DWORD PTR [rax],esp
  418dfb:	xor    al,0x2e
  418dfd:	cmp    DWORD PTR [rsi],ebp
  418dff:	xor    al,0x0
	...
  418e0d:	add    BYTE PTR [rax],al
  418e0f:	add    BYTE PTR [rdi+0x43],al
  418e12:	rex.XB cmp spl,BYTE PTR [r8]
  418e15:	sub    BYTE PTR [rdi+0x4e],al
  418e18:	push   rbp
  418e19:	sub    DWORD PTR [rax],esp
  418e1b:	xor    al,0x2e
  418e1d:	cmp    DWORD PTR [rsi],ebp
  418e1f:	xor    al,0x0
	...
  418e2d:	add    BYTE PTR [rax],al
  418e2f:	add    BYTE PTR [rdi+0x43],al
  418e32:	rex.XB cmp spl,BYTE PTR [r8]
  418e35:	sub    BYTE PTR [rdi+0x4e],al
  418e38:	push   rbp
  418e39:	sub    DWORD PTR [rax],esp
  418e3b:	xor    al,0x2e
  418e3d:	cmp    DWORD PTR [rsi],ebp
  418e3f:	xor    al,0x0
	...
  418e4d:	add    BYTE PTR [rax],al
  418e4f:	add    BYTE PTR [rdi+0x43],al
  418e52:	rex.XB cmp spl,BYTE PTR [r8]
  418e55:	sub    BYTE PTR [rdi+0x4e],al
  418e58:	push   rbp
  418e59:	sub    DWORD PTR [rax],esp
  418e5b:	xor    al,0x2e
  418e5d:	cmp    DWORD PTR [rsi],ebp
  418e5f:	xor    al,0x0
	...
  418e6d:	add    BYTE PTR [rax],al
  418e6f:	add    BYTE PTR [rdi+0x43],al
  418e72:	rex.XB cmp spl,BYTE PTR [r8]
  418e75:	sub    BYTE PTR [rdi+0x4e],al
  418e78:	push   rbp
  418e79:	sub    DWORD PTR [rax],esp
  418e7b:	xor    al,0x2e
  418e7d:	cmp    DWORD PTR [rsi],ebp
  418e7f:	xor    al,0x0
	...
  418e8d:	add    BYTE PTR [rax],al
  418e8f:	add    BYTE PTR [rdi+0x43],al
  418e92:	rex.XB cmp spl,BYTE PTR [r8]
  418e95:	sub    BYTE PTR [rdi+0x4e],al
  418e98:	push   rbp
  418e99:	sub    DWORD PTR [rax],esp
  418e9b:	xor    al,0x2e
  418e9d:	cmp    DWORD PTR [rsi],ebp
  418e9f:	xor    al,0x0
	...
  418ead:	add    BYTE PTR [rax],al
  418eaf:	add    BYTE PTR [rdi+0x43],al
  418eb2:	rex.XB cmp spl,BYTE PTR [r8]
  418eb5:	sub    BYTE PTR [rdi+0x4e],al
  418eb8:	push   rbp
  418eb9:	sub    DWORD PTR [rax],esp
  418ebb:	xor    al,0x2e
  418ebd:	cmp    DWORD PTR [rsi],ebp
  418ebf:	xor    al,0x0
	...
  418ecd:	add    BYTE PTR [rax],al
  418ecf:	add    BYTE PTR [rdi+0x43],al
  418ed2:	rex.XB cmp spl,BYTE PTR [r8]
  418ed5:	sub    BYTE PTR [rdi+0x4e],al
  418ed8:	push   rbp
  418ed9:	sub    DWORD PTR [rax],esp
  418edb:	xor    al,0x2e
  418edd:	cmp    DWORD PTR [rsi],ebp
  418edf:	xor    al,0x0
	...
  418eed:	add    BYTE PTR [rax],al
  418eef:	add    BYTE PTR [rdi+0x43],al
  418ef2:	rex.XB cmp spl,BYTE PTR [r8]
  418ef5:	sub    BYTE PTR [rdi+0x4e],al
  418ef8:	push   rbp
  418ef9:	sub    DWORD PTR [rax],esp
  418efb:	xor    al,0x2e
  418efd:	cmp    DWORD PTR [rsi],ebp
  418eff:	xor    al,0x0
	...
  418f0d:	add    BYTE PTR [rax],al
  418f0f:	add    BYTE PTR [rdi+0x43],al
  418f12:	rex.XB cmp spl,BYTE PTR [r8]
  418f15:	sub    BYTE PTR [rdi+0x4e],al
  418f18:	push   rbp
  418f19:	sub    DWORD PTR [rax],esp
  418f1b:	xor    al,0x2e
  418f1d:	cmp    DWORD PTR [rsi],ebp
  418f1f:	xor    al,0x0
	...
  418f2d:	add    BYTE PTR [rax],al
  418f2f:	add    BYTE PTR [rdi+0x43],al
  418f32:	rex.XB cmp spl,BYTE PTR [r8]
  418f35:	sub    BYTE PTR [rdi+0x4e],al
  418f38:	push   rbp
  418f39:	sub    DWORD PTR [rax],esp
  418f3b:	xor    al,0x2e
  418f3d:	cmp    DWORD PTR [rsi],ebp
  418f3f:	xor    al,0x0
	...
  418f4d:	add    BYTE PTR [rax],al
  418f4f:	add    BYTE PTR [rdi+0x43],al
  418f52:	rex.XB cmp spl,BYTE PTR [r8]
  418f55:	sub    BYTE PTR [rdi+0x4e],al
  418f58:	push   rbp
  418f59:	sub    DWORD PTR [rax],esp
  418f5b:	xor    al,0x2e
  418f5d:	cmp    DWORD PTR [rsi],ebp
  418f5f:	xor    al,0x0
	...
  418f6d:	add    BYTE PTR [rax],al
  418f6f:	add    BYTE PTR [rdi+0x43],al
  418f72:	rex.XB cmp spl,BYTE PTR [r8]
  418f75:	sub    BYTE PTR [rdi+0x4e],al
  418f78:	push   rbp
  418f79:	sub    DWORD PTR [rax],esp
  418f7b:	xor    al,0x2e
  418f7d:	cmp    DWORD PTR [rsi],ebp
  418f7f:	xor    al,0x0
	...
  418f8d:	add    BYTE PTR [rax],al
  418f8f:	add    BYTE PTR [rdi+0x43],al
  418f92:	rex.XB cmp spl,BYTE PTR [r8]
  418f95:	sub    BYTE PTR [rdi+0x4e],al
  418f98:	push   rbp
  418f99:	sub    DWORD PTR [rax],esp
  418f9b:	xor    al,0x2e
  418f9d:	cmp    DWORD PTR [rsi],ebp
  418f9f:	xor    al,0x0
	...
  418fad:	add    BYTE PTR [rax],al
  418faf:	add    BYTE PTR [rdi+0x43],al
  418fb2:	rex.XB cmp spl,BYTE PTR [r8]
  418fb5:	sub    BYTE PTR [rdi+0x4e],al
  418fb8:	push   rbp
  418fb9:	sub    DWORD PTR [rax],esp
  418fbb:	xor    al,0x2e
  418fbd:	cmp    DWORD PTR [rsi],ebp
  418fbf:	xor    al,0x0
	...
  418fcd:	add    BYTE PTR [rax],al
  418fcf:	add    BYTE PTR [rdi+0x43],al
  418fd2:	rex.XB cmp spl,BYTE PTR [r8]
  418fd5:	sub    BYTE PTR [rdi+0x4e],al
  418fd8:	push   rbp
  418fd9:	sub    DWORD PTR [rax],esp
  418fdb:	xor    al,0x2e
  418fdd:	cmp    DWORD PTR [rsi],ebp
  418fdf:	xor    al,0x0
	...
  418fed:	add    BYTE PTR [rax],al
  418fef:	add    BYTE PTR [rdi+0x43],al
  418ff2:	rex.XB cmp spl,BYTE PTR [r8]
  418ff5:	sub    BYTE PTR [rdi+0x4e],al
  418ff8:	push   rbp
  418ff9:	sub    DWORD PTR [rax],esp
  418ffb:	xor    al,0x2e
  418ffd:	cmp    DWORD PTR [rsi],ebp
  418fff:	xor    al,0x0
	...
  41900d:	add    BYTE PTR [rax],al
  41900f:	add    BYTE PTR [rdi+0x43],al
  419012:	rex.XB cmp spl,BYTE PTR [r8]
  419015:	sub    BYTE PTR [rdi+0x4e],al
  419018:	push   rbp
  419019:	sub    DWORD PTR [rax],esp
  41901b:	xor    al,0x2e
  41901d:	cmp    DWORD PTR [rsi],ebp
  41901f:	xor    al,0x0
	...
  41902d:	add    BYTE PTR [rax],al
  41902f:	add    BYTE PTR [rdi+0x43],al
  419032:	rex.XB cmp spl,BYTE PTR [r8]
  419035:	sub    BYTE PTR [rdi+0x4e],al
  419038:	push   rbp
  419039:	sub    DWORD PTR [rax],esp
  41903b:	xor    al,0x2e
  41903d:	cmp    DWORD PTR [rsi],ebp
  41903f:	xor    al,0x0
	...
  41904d:	add    BYTE PTR [rax],al
  41904f:	add    BYTE PTR [rdi+0x43],al
  419052:	rex.XB cmp spl,BYTE PTR [r8]
  419055:	sub    BYTE PTR [rdi+0x4e],al
  419058:	push   rbp
  419059:	sub    DWORD PTR [rax],esp
  41905b:	xor    al,0x2e
  41905d:	cmp    DWORD PTR [rsi],ebp
  41905f:	xor    al,0x0
	...
  41906d:	add    BYTE PTR [rax],al
  41906f:	add    BYTE PTR [rdi+0x43],al
  419072:	rex.XB cmp spl,BYTE PTR [r8]
  419075:	sub    BYTE PTR [rdi+0x4e],al
  419078:	push   rbp
  419079:	sub    DWORD PTR [rax],esp
  41907b:	xor    al,0x2e
  41907d:	cmp    DWORD PTR [rsi],ebp
  41907f:	xor    al,0x0
	...
  41908d:	add    BYTE PTR [rax],al
  41908f:	add    BYTE PTR [rdi+0x43],al
  419092:	rex.XB cmp spl,BYTE PTR [r8]
  419095:	sub    BYTE PTR [rdi+0x4e],al
  419098:	push   rbp
  419099:	sub    DWORD PTR [rax],esp
  41909b:	xor    al,0x2e
  41909d:	cmp    DWORD PTR [rsi],ebp
  41909f:	xor    al,0x0
	...
  4190ad:	add    BYTE PTR [rax],al
  4190af:	add    BYTE PTR [rdi+0x43],al
  4190b2:	rex.XB cmp spl,BYTE PTR [r8]
  4190b5:	sub    BYTE PTR [rdi+0x4e],al
  4190b8:	push   rbp
  4190b9:	sub    DWORD PTR [rax],esp
  4190bb:	xor    al,0x2e
  4190bd:	cmp    DWORD PTR [rsi],ebp
  4190bf:	xor    al,0x0
	...
  4190cd:	add    BYTE PTR [rax],al
  4190cf:	add    BYTE PTR [rdi+0x43],al
  4190d2:	rex.XB cmp spl,BYTE PTR [r8]
  4190d5:	sub    BYTE PTR [rdi+0x4e],al
  4190d8:	push   rbp
  4190d9:	sub    DWORD PTR [rax],esp
  4190db:	xor    al,0x2e
  4190dd:	cmp    DWORD PTR [rsi],ebp
  4190df:	xor    al,0x0
	...
  4190ed:	add    BYTE PTR [rax],al
  4190ef:	add    BYTE PTR [rdi+0x43],al
  4190f2:	rex.XB cmp spl,BYTE PTR [r8]
  4190f5:	sub    BYTE PTR [rdi+0x4e],al
  4190f8:	push   rbp
  4190f9:	sub    DWORD PTR [rax],esp
  4190fb:	xor    al,0x2e
  4190fd:	cmp    DWORD PTR [rsi],ebp
  4190ff:	xor    al,0x0
	...
  41910d:	add    BYTE PTR [rax],al
  41910f:	add    BYTE PTR [rdi+0x43],al
  419112:	rex.XB cmp spl,BYTE PTR [r8]
  419115:	sub    BYTE PTR [rdi+0x4e],al
  419118:	push   rbp
  419119:	sub    DWORD PTR [rax],esp
  41911b:	xor    al,0x2e
  41911d:	cmp    DWORD PTR [rsi],ebp
  41911f:	xor    al,0x0
	...
  41912d:	add    BYTE PTR [rax],al
  41912f:	add    BYTE PTR [rdi+0x43],al
  419132:	rex.XB cmp spl,BYTE PTR [r8]
  419135:	sub    BYTE PTR [rdi+0x4e],al
  419138:	push   rbp
  419139:	sub    DWORD PTR [rax],esp
  41913b:	xor    al,0x2e
  41913d:	cmp    DWORD PTR [rsi],ebp
  41913f:	xor    al,0x0
	...
  41914d:	add    BYTE PTR [rax],al
  41914f:	add    BYTE PTR [rdi+0x43],al
  419152:	rex.XB cmp spl,BYTE PTR [r8]
  419155:	sub    BYTE PTR [rdi+0x4e],al
  419158:	push   rbp
  419159:	sub    DWORD PTR [rax],esp
  41915b:	xor    al,0x2e
  41915d:	cmp    DWORD PTR [rsi],ebp
  41915f:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000041a000 <.pdata>:
  41a000:	add    BYTE PTR [rax],dl
  41a002:	add    BYTE PTR [rax],al
  41a004:	add    DWORD PTR [rax],edx
  41a006:	add    BYTE PTR [rax],al
  41a008:	add    BYTE PTR [rax+0x10100001],dh
  41a00e:	add    BYTE PTR [rax],al
  41a010:	push   rcx
  41a011:	adc    DWORD PTR [rax],eax
  41a013:	add    BYTE PTR [rax+rsi*4],al
  41a016:	add    DWORD PTR [rax],eax
  41a018:	(bad)  
  41a019:	adc    DWORD PTR [rax],eax
  41a01b:	add    BYTE PTR [rsi+0xc000011],ch
  41a021:	mov    al,0x1
  41a023:	add    BYTE PTR [rax-0x31ffffef],dh
  41a029:	adc    al,0x0
  41a02b:	add    BYTE PTR [rax+rsi*4],dl
  41a02e:	add    DWORD PTR [rax],eax
  41a030:	rcl    BYTE PTR [rax+rax*1],1
  41a033:	add    dl,dh
  41a035:	adc    al,0x0
  41a037:	add    BYTE PTR [rax],ch
  41a039:	mov    al,0x1
  41a03b:	add    BYTE PTR [rax],al
  41a03d:	adc    eax,0x15220000
  41a042:	add    BYTE PTR [rax],al
  41a044:	rex.W mov al,0x1
  41a047:	add    BYTE PTR [rax],dh
  41a049:	adc    eax,0x16db0000
  41a04e:	add    BYTE PTR [rax],al
  41a050:	push   0xffffffffe00001b0
  41a055:	(bad)  
  41a056:	add    BYTE PTR [rax],al
  41a058:	mov    edx,0x88000017
  41a05d:	mov    al,0x1
  41a05f:	add    al,al
  41a061:	(bad)  
  41a062:	add    BYTE PTR [rax],al
  41a064:	jno    0x41a07e
  41a066:	add    BYTE PTR [rax],al
  41a068:	nop
  41a069:	mov    al,0x1
  41a06b:	add    BYTE PTR [rax+0x5a000018],al
  41a071:	sbb    DWORD PTR [rax],eax
  41a073:	add    BYTE PTR [rax+rsi*4+0x19600001],bl
  41a07a:	add    BYTE PTR [rax],al
  41a07c:	sbb    DWORD PTR [eax],eax
  41a07f:	add    BYTE PTR [rax+0x700001b0],ch
  41a085:	sbb    DWORD PTR [rax],eax
  41a087:	add    BYTE PTR [rdx+0x19],bh
  41a08a:	add    BYTE PTR [rax],al
  41a08c:	lods   al,BYTE PTR ds:[rsi]
  41a08d:	mov    al,0x1
  41a08f:	add    BYTE PTR [rax+0x13000019],al
  41a095:	sbb    al,BYTE PTR [rax]
  41a097:	add    BYTE PTR [rax+0x200001b0],dh
  41a09d:	sbb    al,BYTE PTR [rax]
  41a09f:	add    BYTE PTR [rcx-0x43ffffdc],bl
  41a0a5:	mov    al,0x1
  41a0a7:	add    BYTE PTR [rax+0x14000024],ah
  41a0ad:	and    eax,0xb0d40000
  41a0b2:	add    DWORD PTR [rax],eax
  41a0b4:	and    BYTE PTR [rip+0x27a80000],ah        # 0x27e9a0ba
  41a0ba:	add    BYTE PTR [rax],al
  41a0bc:	loopne 0x41a06e
  41a0be:	add    DWORD PTR [rax],eax
  41a0c0:	mov    al,0x27
  41a0c2:	add    BYTE PTR [rax],al
  41a0c4:	(bad)  
  41a0c5:	(bad)  
  41a0c6:	add    BYTE PTR [rax],al
  41a0c8:	hlt    
  41a0c9:	mov    al,0x1
  41a0cb:	add    al,dh
  41a0cd:	(bad)  
  41a0ce:	add    BYTE PTR [rax],al
  41a0d0:	fs add BYTE PTR cs:[rax],al
  41a0d4:	add    BYTE PTR [rcx+0x2e700001],dh
  41a0da:	add    BYTE PTR [rax],al
  41a0dc:	fwait
  41a0dd:	add    BYTE PTR cs:[rax],al
  41a0e0:	adc    al,0xb1
  41a0e2:	add    DWORD PTR [rax],eax
  41a0e4:	movabs al,ds:0x1c00002ec600002e
  41a0ed:	mov    cl,0x1
  41a0ef:	add    al,dl
  41a0f1:	add    BYTE PTR cs:[rax],al
  41a0f4:	cli    
  41a0f5:	add    BYTE PTR cs:[rax],al
  41a0f8:	and    al,0xb1
  41a0fa:	add    DWORD PTR [rax],eax
  41a0fc:	add    BYTE PTR [rdi],ch
  41a0fe:	add    BYTE PTR [rax],al
  41a100:	rex.XB (bad) 
  41a102:	add    BYTE PTR [rax],al
  41a104:	sub    al,0xb1
  41a106:	add    DWORD PTR [rax],eax
  41a108:	push   rax
  41a109:	(bad)  
  41a10a:	add    BYTE PTR [rax],al
  41a10c:	js     0x41a13d
  41a10e:	add    BYTE PTR [rax],al
  41a110:	xor    al,0xb1
  41a112:	add    DWORD PTR [rax],eax
  41a114:	sub    BYTE PTR [rdi],0x0
  41a117:	add    BYTE PTR [rbp+0x4000002f],ch
  41a11d:	mov    cl,0x1
  41a11f:	add    BYTE PTR [rax-0x12ffffd1],dh
  41a125:	(bad)  
  41a126:	add    BYTE PTR [rax],al
  41a128:	rex.W mov cl,0x1
  41a12b:	add    al,dh
  41a12d:	(bad)  
  41a12e:	add    BYTE PTR [rax],al
  41a130:	and    esi,DWORD PTR [rax]
  41a132:	add    BYTE PTR [rax],al
  41a134:	push   rax
  41a135:	mov    cl,0x1
  41a137:	add    BYTE PTR [rax],dh
  41a139:	xor    BYTE PTR [rax],al
  41a13b:	add    BYTE PTR [rcx+0x30],ah
  41a13e:	add    BYTE PTR [rax],al
  41a140:	pop    rax
  41a141:	mov    cl,0x1
  41a143:	add    BYTE PTR [rax+0x30],dh
  41a146:	add    BYTE PTR [rax],al
  41a148:	movabs eax,ds:0xb00001b160000030
  41a151:	xor    BYTE PTR [rax],al
  41a153:	add    BYTE PTR [rcx+0x31],ch
  41a156:	add    BYTE PTR [rax],al
  41a158:	push   0x700001b1
  41a15d:	xor    DWORD PTR [rax],eax
  41a15f:	add    BYTE PTR [rsi+0x78000031],dh
  41a165:	mov    cl,0x1
  41a167:	add    al,al
  41a169:	xor    DWORD PTR [rax],eax
  41a16b:	add    BYTE PTR [rip+0xffffffff80000032],dh        # 0xffffffff8041a1a3
  41a171:	mov    cl,0x1
  41a173:	add    BYTE PTR [rax+0x32],al
  41a176:	add    BYTE PTR [rax],al
  41a178:	xor    r8,QWORD PTR [rax]
  41a17b:	add    BYTE PTR [rax+0x500001b1],dl
  41a181:	xor    eax,DWORD PTR [rax]
  41a183:	add    BYTE PTR [rcx],ah
  41a185:	xor    al,0x0
  41a187:	add    BYTE PTR [rcx+rsi*4+0x34300001],ah
  41a18e:	add    BYTE PTR [rax],al
  41a190:	mov    DWORD PTR [rbx+0x0],eax
  41a193:	add    BYTE PTR [rax-0x6ffffe4f],bh
  41a199:	rex.XB add BYTE PTR [r8],al
  41a19c:	add    eax,0xd0000044
  41a1a1:	mov    cl,0x1
  41a1a3:	add    BYTE PTR [rax],dl
  41a1a5:	add    BYTE PTR [rax],r8b
  41a1a8:	cmp    al,BYTE PTR [rax+rax*1+0x0]
  41a1ac:	fdiv   DWORD PTR [rcx+0x44400001]
  41a1b2:	add    BYTE PTR [rax],al
  41a1b4:	push   0xffffffffe0000044
  41a1b9:	mov    cl,0x1
  41a1bb:	add    BYTE PTR [rax+0x44],dh
  41a1be:	add    BYTE PTR [rax],al
  41a1c0:	movabs ds:0xb00001b1e8000044,al
  41a1c9:	add    BYTE PTR [rax],r8b
  41a1cc:	fadd   DWORD PTR [rax+rax*1+0x0]
  41a1d0:	lock mov cl,0x1
  41a1d3:	add    al,ah
  41a1d5:	add    BYTE PTR [rax],r8b
  41a1d8:	adc    al,BYTE PTR [rbp+0x0]
  41a1db:	add    al,bh
  41a1dd:	mov    cl,0x1
  41a1df:	add    BYTE PTR [rax],ah
  41a1e1:	add    BYTE PTR [r8],r8b
  41a1e4:	and    al,0x46
  41a1e6:	add    BYTE PTR [rax],al
  41a1e8:	add    BYTE PTR [rdx+0x46300001],dh
  41a1ee:	add    BYTE PTR [rax],al
  41a1f0:	rex.RX
  41a1f1:	rex.RX add BYTE PTR [rax],r8b
  41a1f4:	adc    al,0xb2
  41a1f6:	add    DWORD PTR [rax],eax
  41a1f8:	push   rax
  41a1f9:	rex.RX add BYTE PTR [rax],r8b
  41a1fc:	test   DWORD PTR [rsi+0x0],0x1b21800
  41a203:	add    BYTE PTR [rax],al
  41a205:	rex.RXB add BYTE PTR [r8],r8b
  41a208:	sbb    eax,0x1c000047
  41a20d:	mov    dl,0x1
  41a20f:	add    BYTE PTR [rax],ah
  41a211:	rex.RXB add BYTE PTR [r8],r8b
  41a214:	adc    eax,0x24000048
  41a219:	mov    dl,0x1
  41a21b:	add    BYTE PTR [rax],ah
  41a21d:	rex.W add BYTE PTR [rax],al
  41a220:	mov    bl,0x4b
  41a222:	add    BYTE PTR [rax],al
  41a224:	cmp    al,0xb2
  41a226:	add    DWORD PTR [rax],eax
  41a228:	ror    BYTE PTR [rbx+0x0],0x0
  41a22c:	dec    DWORD PTR [rbx+0x0]
  41a22f:	add    BYTE PTR [rdx+rsi*4+0x1],dl
  41a233:	add    BYTE PTR [rax],al
  41a235:	rex.WR add BYTE PTR [rax],r8b
  41a238:	rex.WRXB add BYTE PTR [r8d],r8b
  41a23c:	pop    rsp
  41a23d:	mov    dl,0x1
  41a23f:	add    BYTE PTR [rax+0x4f],dh
  41a242:	add    BYTE PTR [rax],al
  41a244:	(bad)  
  41a245:	push   rax
  41a246:	add    BYTE PTR [rax],al
  41a248:	jo     0x41a1fc
  41a24a:	add    DWORD PTR [rax],eax
  41a24c:	and    BYTE PTR [rax+0x0],dl
  41a24f:	add    BYTE PTR [rsi+0x50],bl
  41a252:	add    BYTE PTR [rax],al
  41a254:	jl     0x41a208
  41a256:	add    DWORD PTR [rax],eax
  41a258:	(bad)  
  41a259:	push   rax
  41a25a:	add    BYTE PTR [rax],al
  41a25c:	(bad)  
  41a25d:	push   rax
  41a25e:	add    BYTE PTR [rax],al
  41a260:	mov    BYTE PTR [rdx+0x50900001],dh
  41a266:	add    BYTE PTR [rax],al
  41a268:	mov    bh,0x50
  41a26a:	add    BYTE PTR [rax],al
  41a26c:	nop
  41a26d:	mov    dl,0x1
  41a26f:	add    al,al
  41a271:	push   rax
  41a272:	add    BYTE PTR [rax],al
  41a274:	imul   edx,DWORD PTR [rcx+0x0],0x1b29c00
  41a27b:	add    BYTE PTR [rax+0x51],dh
  41a27e:	add    BYTE PTR [rax],al
  41a280:	lea    edx,[rcx+0x0]
  41a283:	add    BYTE PTR [rax-0x6ffffe4e],ch
  41a289:	push   rcx
  41a28a:	add    BYTE PTR [rax],al
  41a28c:	cmp    dl,BYTE PTR [rdx+0x0]
  41a28f:	add    BYTE PTR [rax+0x400001b2],dh
  41a295:	push   rdx
  41a296:	add    BYTE PTR [rax],al
  41a298:	jmp    0xffffffffbc41a2ef
  41a29d:	mov    dl,0x1
  41a29f:	add    al,dh
  41a2a1:	push   rdx
  41a2a2:	add    BYTE PTR [rax],al
  41a2a4:	mov    ch,0x53
  41a2a6:	add    BYTE PTR [rax],al
  41a2a8:	enter  0x1b2,0x0
  41a2ac:	rcl    BYTE PTR [rbx+0x0],0x0
  41a2b0:	lock push rbx
  41a2b2:	add    BYTE PTR [rax],al
  41a2b4:	fdiv   DWORD PTR [rdx+0x53f00001]
  41a2ba:	add    BYTE PTR [rax],al
  41a2bc:	(bad)  
  41a2bd:	push   rsp
  41a2be:	add    BYTE PTR [rax],al
  41a2c0:	loopne 0x41a274
  41a2c2:	add    DWORD PTR [rax],eax
  41a2c4:	loopne 0x41a31a
  41a2c6:	add    BYTE PTR [rax],al
  41a2c8:	enter  0x58,0x0
  41a2cc:	in     al,dx
  41a2cd:	mov    dl,0x1
  41a2cf:	add    al,dl
  41a2d1:	pop    rax
  41a2d2:	add    BYTE PTR [rax],al
  41a2d4:	(bad)  
  41a2d5:	pop    rcx
  41a2d6:	add    BYTE PTR [rax],al
  41a2d8:	lock mov dl,0x1
  41a2db:	add    BYTE PTR [rax],dh
  41a2dd:	pop    rcx
  41a2de:	add    BYTE PTR [rax],al
  41a2e0:	pop    rcx
  41a2e1:	pop    rcx
  41a2e2:	add    BYTE PTR [rax],al
  41a2e4:	hlt    
  41a2e5:	mov    dl,0x1
  41a2e7:	add    BYTE PTR [rax+0x59],ah
  41a2ea:	add    BYTE PTR [rax],al
  41a2ec:	je     0x41a348
  41a2ee:	add    BYTE PTR [rax],al
  41a2f0:	cld    
  41a2f1:	mov    dl,0x1
  41a2f3:	add    BYTE PTR [rax-0x5bffffa6],al
  41a2f9:	pop    rbx
  41a2fa:	add    BYTE PTR [rax],al
  41a2fc:	or     BYTE PTR [rbx+0x5bb00001],dh
  41a302:	add    BYTE PTR [rax],al
  41a304:	or     DWORD PTR [rbx+0x0],esi
  41a307:	add    BYTE PTR [rax],bl
  41a309:	mov    bl,0x1
  41a30b:	add    BYTE PTR [rax],dl
  41a30d:	jae    0x41a30f
  41a30f:	add    BYTE PTR [rsi],bh
  41a311:	je     0x41a313
  41a313:	add    BYTE PTR [rax],ah
  41a315:	mov    bl,0x1
  41a317:	add    BYTE PTR [rax+0x74],al
  41a31a:	add    BYTE PTR [rax],al
  41a31c:	xchg   edi,eax
  41a31d:	je     0x41a31f
  41a31f:	add    BYTE PTR [rax],ch
  41a321:	mov    bl,0x1
  41a323:	add    BYTE PTR [rax-0x5dffff8c],ah
  41a329:	je     0x41a32b
  41a32b:	add    BYTE PTR [rax],dh
  41a32d:	mov    bl,0x1
  41a32f:	add    BYTE PTR [rax-0x39ffff8c],dh
  41a335:	je     0x41a337
  41a337:	add    BYTE PTR [rbx+rsi*4],dh
  41a33a:	add    DWORD PTR [rax],eax
  41a33c:	shl    BYTE PTR [rax+rax*1+0x0],1
  41a340:	(bad)  
  41a341:	jne    0x41a343
  41a343:	add    BYTE PTR [rbx+rsi*4],bh
  41a346:	add    DWORD PTR [rax],eax
  41a348:	adc    BYTE PTR [rbp+0x0],dh
  41a34b:	add    BYTE PTR [rdi],cl
  41a34d:	jbe    0x41a34f
  41a34f:	add    BYTE PTR [rax-0x4d],cl
  41a352:	add    DWORD PTR [rax],eax
  41a354:	adc    BYTE PTR [rsi+0x0],dh
  41a357:	add    BYTE PTR [rsi],ch
  41a359:	jbe    0x41a35b
  41a35b:	add    BYTE PTR [rbx+rsi*4+0x1],dl
  41a35f:	add    BYTE PTR [rax],dh
  41a361:	jbe    0x41a363
  41a363:	add    BYTE PTR [rbp+0x5c000076],dl
  41a369:	mov    bl,0x1
  41a36b:	add    BYTE PTR [rax-0x3affff8a],ah
  41a371:	jbe    0x41a373
  41a373:	add    BYTE PTR [rax-0x4d],ch
  41a376:	add    DWORD PTR [rax],eax
  41a378:	shl    BYTE PTR [rsi+0x0],1
  41a37b:	add    BYTE PTR [rbx],cl
  41a37d:	ja     0x41a37f
  41a37f:	add    BYTE PTR [rax-0x4d],dh
  41a382:	add    DWORD PTR [rax],eax
  41a384:	adc    BYTE PTR [rdi+0x0],dh
  41a387:	add    BYTE PTR [rdi+0x77],ch
  41a38a:	add    BYTE PTR [rax],al
  41a38c:	js     0x41a341
  41a38e:	add    DWORD PTR [rax],eax
  41a390:	jo     0x41a409
  41a392:	add    BYTE PTR [rax],al
  41a394:	fnstcw WORD PTR [rax+0x0]
  41a397:	add    BYTE PTR [rax-0x1ffffe4d],al
  41a39d:	js     0x41a39f
  41a39f:	add    BYTE PTR [rcx],bh
  41a3a1:	jp     0x41a3a3
  41a3a3:	add    BYTE PTR [rax+0x400001b3],dl
  41a3a9:	jp     0x41a3ab
  41a3ab:	add    BYTE PTR [rcx+0x7b],bl
  41a3ae:	add    BYTE PTR [rax],al
  41a3b0:	movabs al,ds:0xd700007b600001b3
  41a3b9:	jnp    0x41a3bb
  41a3bb:	add    BYTE PTR [rax-0x1ffffe4d],dh
  41a3c1:	jnp    0x41a3c3
  41a3c3:	add    BYTE PTR [rsp+rdi*2],cl
  41a3c6:	add    BYTE PTR [rax],al
  41a3c8:	mov    eax,0x100001b3
  41a3cd:	jl     0x41a3cf
  41a3cf:	add    bl,al
  41a3d1:	jl     0x41a3d3
  41a3d3:	add    al,al
  41a3d5:	mov    bl,0x1
  41a3d7:	add    al,dl
  41a3d9:	jl     0x41a3db
  41a3db:	add    BYTE PTR [rdx],ch
  41a3dd:	jge    0x41a3df
  41a3df:	add    ah,cl
  41a3e1:	mov    bl,0x1
  41a3e3:	add    BYTE PTR [rax],dh
  41a3e5:	jge    0x41a3e7
  41a3e7:	add    BYTE PTR [rbx+0x7d],ch
  41a3ea:	add    BYTE PTR [rax],al
  41a3ec:	fdiv   DWORD PTR [rbx+0x7d700001]
  41a3f2:	add    BYTE PTR [rax],al
  41a3f4:	sbb    DWORD PTR [rsi+0x0],edi
  41a3f7:	add    al,ah
  41a3f9:	mov    bl,0x1
  41a3fb:	add    BYTE PTR [rax],ah
  41a3fd:	jle    0x41a3ff
  41a3ff:	add    BYTE PTR [rdx+0x7e],bl
  41a402:	add    BYTE PTR [rax],al
  41a404:	in     al,dx
  41a405:	mov    bl,0x1
  41a407:	add    BYTE PTR [rax+0x7e],ah
  41a40a:	add    BYTE PTR [rax],al
  41a40c:	mov    ch,0x7e
  41a40e:	add    BYTE PTR [rax],al
  41a410:	hlt    
  41a411:	mov    bl,0x1
  41a413:	add    al,al
  41a415:	jle    0x41a417
  41a417:	add    bl,bl
  41a419:	jle    0x41a41b
  41a41b:	add    BYTE PTR [rax],al
  41a41d:	mov    ah,0x1
  41a41f:	add    al,ah
  41a421:	jle    0x41a423
  41a423:	add    BYTE PTR [rdi],bh
  41a425:	add    BYTE PTR [rax],0x0
  41a428:	add    al,0xb4
  41a42a:	add    DWORD PTR [rax],eax
  41a42c:	rex add BYTE PTR [rax],0x0
  41a430:	cmp    BYTE PTR [rdx-0x4bec0000],cl
  41a436:	add    DWORD PTR [rax],eax
  41a438:	mov    al,BYTE PTR [rax]
  41a43b:	add    BYTE PTR [rax],bl
  41a43d:	popf   
  41a43e:	add    BYTE PTR [rax],al
  41a440:	xor    BYTE PTR [rcx+rax*1+0x9d2000],dh
  41a447:	add    BYTE PTR [rax+0x4800009f],dh
  41a44d:	mov    ah,0x1
  41a44f:	add    BYTE PTR [rax-0x54ffff61],dh
  41a455:	movabs eax,ds:0xa1b00001b4600000
  41a45e:	add    BYTE PTR [rax],al
  41a460:	jo     0x41a404
  41a462:	add    BYTE PTR [rax],al
  41a464:	js     0x41a41a
  41a466:	add    DWORD PTR [rax],eax
  41a468:	jo     0x41a40c
  41a46a:	add    BYTE PTR [rax],al
  41a46c:	jno    0x41a410
  41a46e:	add    BYTE PTR [rax],al
  41a470:	test   BYTE PTR [rcx+rax*1+0xa28000],dh
  41a477:	add    BYTE PTR [rdx-0x77ffff5e],ch
  41a47d:	mov    ah,0x1
  41a47f:	add    BYTE PTR [rax-0x25ffff5e],dh
  41a485:	movabs ds:0xa2e00001b4900000,al
  41a48e:	add    BYTE PTR [rax],al
  41a490:	sbb    ah,BYTE PTR [rbx-0x4b680000]
  41a496:	add    DWORD PTR [rax],eax
  41a498:	and    BYTE PTR [rbx-0x5cb10000],ah
  41a49e:	add    BYTE PTR [rax],al
  41a4a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41a4a1:	mov    ah,0x1
  41a4a3:	add    BYTE PTR [rax-0x5d],dl
  41a4a6:	add    BYTE PTR [rax],al
  41a4a8:	push   0xffffffffffffffa3
  41a4aa:	add    BYTE PTR [rax],al
  41a4ac:	lods   al,BYTE PTR ds:[rsi]
  41a4ad:	mov    ah,0x1
  41a4af:	add    BYTE PTR [rax-0x5d],dh
  41a4b2:	add    BYTE PTR [rax],al
  41a4b4:	jns    0x41a459
  41a4b6:	add    BYTE PTR [rax],al
  41a4b8:	mov    al,0xb4
  41a4ba:	add    DWORD PTR [rax],eax
  41a4bc:	and    BYTE PTR [rbx-0x5c3d0000],0x0
  41a4c3:	add    BYTE PTR [rsp+rsi*4-0x5c2fffff],dh
  41a4ca:	add    BYTE PTR [rax],al
  41a4cc:	adc    esp,DWORD PTR [rax+rax*1+0x1b4bc00]
  41a4d3:	add    BYTE PTR [rax],ah
  41a4d5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41a4d6:	add    BYTE PTR [rax],al
  41a4d8:	sub    DWORD PTR [rax+rax*1+0x1b4c400],esp
  41a4df:	add    BYTE PTR [rax],dh
  41a4e1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41a4e2:	add    BYTE PTR [rax],al
  41a4e4:	movs   BYTE PTR es:[rdi],BYTE PTR fs:[rsi]
  41a4e6:	add    BYTE PTR [rax],al
  41a4e8:	enter  0x1b4,0x0
  41a4ec:	jo     0x41a492
  41a4ee:	add    BYTE PTR [rax],al
  41a4f0:	push   rbp
  41a4f1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41a4f2:	add    BYTE PTR [rax],al
  41a4f4:	int3   
  41a4f5:	mov    ah,0x1
  41a4f7:	add    BYTE PTR [rax-0x5a],ah
  41a4fa:	add    BYTE PTR [rax],al
  41a4fc:	leave  
  41a4fd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41a4fe:	add    BYTE PTR [rax],al
  41a500:	loopne 0x41a4b6
  41a502:	add    DWORD PTR [rax],eax
  41a504:	shl    BYTE PTR [rsi-0x58e40000],1
  41a50a:	add    BYTE PTR [rax],al
  41a50c:	call   0x2041a6c5
  41a511:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41a512:	add    BYTE PTR [rax],al
  41a514:	mov    esp,DWORD PTR [rdi-0x4b100000]
  41a51a:	add    DWORD PTR [rax],eax
  41a51c:	nop
  41a51d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41a51e:	add    BYTE PTR [rax],al
  41a520:	(bad)  
  41a521:	test   al,0x0
  41a523:	add    al,bh
  41a525:	mov    ah,0x1
  41a527:	add    BYTE PTR [rax],dl
  41a529:	test   al,0x0
  41a52b:	add    BYTE PTR [rbp+0xa8],cl
  41a531:	mov    ch,0x1
  41a533:	add    BYTE PTR [rax-0x6fffff58],dl
  41a539:	stos   BYTE PTR es:[rdi],al
  41a53a:	add    BYTE PTR [rax],al
  41a53c:	add    al,0xb5
  41a53e:	add    DWORD PTR [rax],eax
  41a540:	nop
  41a541:	stos   BYTE PTR es:[rdi],al
  41a542:	add    BYTE PTR [rax],al
  41a544:	in     al,dx
  41a545:	stos   BYTE PTR es:[rdi],al
  41a546:	add    BYTE PTR [rax],al
  41a548:	sbb    BYTE PTR [rbp-0x550fffff],dh
  41a54e:	add    BYTE PTR [rax],al
  41a550:	js     0x41a4fd
  41a552:	add    BYTE PTR [rax],al
  41a554:	and    BYTE PTR [rbp-0x547fffff],dh
  41a55a:	add    BYTE PTR [rax],al
  41a55c:	add    BYTE PTR [rax-0x4ad40000],dh
  41a562:	add    DWORD PTR [rax],eax
  41a564:	mov    al,0x0
  41a567:	add    bh,ah
  41a569:	mov    al,0x0
  41a56b:	add    BYTE PTR [rsi*4-0x4f0fffff],dh
  41a572:	add    BYTE PTR [rax],al
  41a574:	or     DWORD PTR [rcx-0x4ac40000],esi
  41a57a:	add    DWORD PTR [rax],eax
  41a57c:	adc    BYTE PTR [rcx-0x4ebb0000],dh
  41a582:	add    BYTE PTR [rax],al
  41a584:	rex.R mov bpl,0x1
  41a587:	add    BYTE PTR [rax-0x4f],dl
  41a58a:	add    BYTE PTR [rax],al
  41a58c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41a58d:	mov    cl,0x0
  41a58f:	add    BYTE PTR [rbp+rsi*4+0x1],cl
  41a593:	add    BYTE PTR [rax-0x33ffff4f],dh
  41a599:	mov    cl,0x0
  41a59b:	add    BYTE PTR [rax-0x4b],bl
  41a59e:	add    DWORD PTR [rax],eax
  41a5a0:	shl    BYTE PTR [rcx-0x4e260000],1
  41a5a6:	add    BYTE PTR [rax],al
  41a5a8:	pop    rsp
  41a5a9:	mov    ch,0x1
  41a5ab:	add    al,ah
  41a5ad:	mov    cl,0x0
  41a5af:	add    bl,ah
  41a5b1:	mov    cl,0x0
  41a5b3:	add    BYTE PTR [rax-0x4b],ah
  41a5b6:	add    DWORD PTR [rax],eax
  41a5b8:	lock mov cl,0x0
  41a5bb:	add    dh,al
  41a5bd:	mov    dl,0x0
  41a5bf:	add    BYTE PTR [rbp+rsi*4+0x1],ah
  41a5c3:	add    al,dl
  41a5c5:	mov    dl,0x0
  41a5c7:	add    bl,cl
  41a5c9:	mov    bl,0x0
  41a5cb:	add    BYTE PTR [rbp+rsi*4+0x1],dh
  41a5cf:	add    al,dl
  41a5d1:	mov    bl,0x0
  41a5d3:	add    bh,bh
  41a5d5:	mov    bl,0x0
  41a5d7:	add    BYTE PTR [rbp+rsi*4-0x4bffffff],al
  41a5de:	add    BYTE PTR [rax],al
  41a5e0:	imul   esi,DWORD PTR [rax+rax*1+0x1b58c00],0xb47000
  41a5eb:	add    BYTE PTR [rbx-0x4c],dh
  41a5ee:	add    BYTE PTR [rax],al
  41a5f0:	cwde   
  41a5f1:	mov    ch,0x1
  41a5f3:	add    BYTE PTR [rax-0x3effff4c],al
  41a5f9:	mov    ah,0x0
  41a5fb:	add    BYTE PTR [rbp+rsi*4-0x4b2fffff],bl
  41a602:	add    BYTE PTR [rax],al
  41a604:	fdiv   QWORD PTR [rax+rax*1+0x1b5a400]
  41a60b:	add    al,ah
  41a60d:	mov    ah,0x0
  41a60f:	add    ah,bl
  41a611:	mov    ch,0x0
  41a613:	add    BYTE PTR [rax-0x1ffffe4b],ch
  41a619:	mov    ch,0x0
  41a61b:	add    bl,ah
  41a61d:	mov    ch,0x0
  41a61f:	add    al,al
  41a621:	mov    ch,0x1
  41a623:	add    al,dh
  41a625:	mov    ch,0x0
  41a627:	add    ah,dh
  41a629:	mov    ch,0x0
  41a62b:	add    ah,al
  41a62d:	mov    ch,0x1
  41a62f:	add    BYTE PTR [rax],al
  41a631:	mov    dh,0x0
  41a633:	add    BYTE PTR [rsi+rsi*4],al
  41a636:	add    BYTE PTR [rax],al
  41a638:	enter  0x1b5,0x0
  41a63c:	adc    BYTE PTR [rsi-0x498f0000],dh
  41a642:	add    BYTE PTR [rax],al
  41a644:	int3   
  41a645:	mov    ch,0x1
  41a647:	add    BYTE PTR [rax-0x1dffff4a],al
  41a64d:	mov    bh,0x0
  41a64f:	add    al,bl
  41a651:	mov    ch,0x1
  41a653:	add    al,dh
  41a655:	mov    bh,0x0
  41a657:	add    cl,ch
  41a659:	mov    edx,0xb5ec0000
  41a65e:	add    DWORD PTR [rax],eax
  41a660:	lock mov edx,0xbc960000
  41a666:	add    BYTE PTR [rax],al
  41a668:	add    al,0xb6
  41a66a:	add    DWORD PTR [rax],eax
  41a66c:	movabs al,ds:0xc0000bd8c0000bc
  41a675:	mov    dh,0x1
  41a677:	add    BYTE PTR [rax+0x480000bd],dl
  41a67d:	mov    edi,0xb61c0000
  41a682:	add    DWORD PTR [rax],eax
  41a684:	push   rax
  41a685:	mov    edi,0xbfbd0000
  41a68a:	add    BYTE PTR [rax],al
  41a68c:	and    al,0xb6
  41a68e:	add    DWORD PTR [rax],eax
  41a690:	sar    BYTE PTR [rdi-0x3fc10000],0x0
  41a697:	add    BYTE PTR [rsi+rsi*4],dh
  41a69a:	add    DWORD PTR [rax],eax
  41a69c:	rex rol BYTE PTR [rax],0x0
  41a6a0:	ffreep st(0)
  41a6a2:	add    BYTE PTR [rax],al
  41a6a4:	mov    sil,0x1
  41a6a7:	add    al,ah
  41a6a9:	rol    BYTE PTR [rax],0x0
  41a6ac:	mov    edx,0x480000c1
  41a6b1:	mov    dh,0x1
  41a6b3:	add    al,al
  41a6b5:	rol    DWORD PTR [rax],0x0
  41a6b8:	ffreep st(1)
  41a6ba:	add    BYTE PTR [rax],al
  41a6bc:	push   rax
  41a6bd:	mov    dh,0x1
  41a6bf:	add    al,ah
  41a6c1:	rol    DWORD PTR [rax],0x0
  41a6c4:	repnz rol DWORD PTR [rax],0x0
  41a6c8:	push   rsp
  41a6c9:	mov    dh,0x1
  41a6cb:	add    BYTE PTR [rax],al
  41a6cd:	ret    0x0
  41a6d0:	rex.RB ret 0x0
  41a6d4:	pop    rax
  41a6d5:	mov    dh,0x1
  41a6d7:	add    BYTE PTR [rax-0x3e],dl
  41a6da:	add    BYTE PTR [rax],al
  41a6dc:	out    dx,al
  41a6dd:	ret    0x0
  41a6e0:	pop    rsp
  41a6e1:	mov    dh,0x1
  41a6e3:	add    al,dh
  41a6e5:	ret    0x0
  41a6e8:	xor    eax,ebx
  41a6ea:	add    BYTE PTR [rax],al
  41a6ec:	push   0x400001b6
  41a6f1:	ret    
  41a6f2:	add    BYTE PTR [rax],al
  41a6f4:	jnp    0x41a6b9
  41a6f6:	add    BYTE PTR [rax],al
  41a6f8:	je     0x41a6b0
  41a6fa:	add    DWORD PTR [rax],eax
  41a6fc:	add    bl,0x0
  41a6ff:	add    BYTE PTR [rsi],cl
  41a701:	(bad)  
  41a702:	add    BYTE PTR [rax],al
  41a704:	jl     0x41a6bc
  41a706:	add    DWORD PTR [rax],eax
  41a708:	adc    ah,al
  41a70a:	add    BYTE PTR [rax],al
  41a70c:	rex.W (bad) 
  41a70e:	add    BYTE PTR [rax],al
  41a710:	mov    BYTE PTR [rsi-0x3bafffff],dh
  41a716:	add    BYTE PTR [rax],al
  41a718:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41a719:	(bad)  
  41a71a:	add    BYTE PTR [rax],al
  41a71c:	xchg   esp,eax
  41a71d:	mov    dh,0x1
  41a71f:	add    BYTE PTR [rax+0x5e0000c4],dh
  41a725:	(bad)
  41a728:	movabs al,ds:0xb0000c5a00001b6
  41a731:	mov    DWORD PTR [rax],0x1b6b000
  41a737:	add    BYTE PTR [rax],dl
  41a739:	mov    DWORD PTR [rax],0xc77b00
  41a73f:	add    al,al
  41a741:	mov    dh,0x1
  41a743:	add    BYTE PTR [rax-0x5dffff39],al
  41a749:	enter  0x0,0xd0
  41a74d:	mov    dh,0x1
  41a74f:	add    BYTE PTR [rax+0xa0000c8],dh
  41a755:	leave  
  41a756:	add    BYTE PTR [rax],al
  41a758:	call   0x1041a913
  41a75d:	leave  
  41a75e:	add    BYTE PTR [rax],al
  41a760:	rex.RB leave 
  41a762:	add    BYTE PTR [rax],al
  41a764:	clc    
  41a765:	mov    dh,0x1
  41a767:	add    BYTE PTR [rax-0x37],dl
  41a76a:	add    BYTE PTR [rax],al
  41a76c:	or     edx,0x0
  41a76f:	add    ah,bh
  41a771:	mov    dh,0x1
  41a773:	add    BYTE PTR [rax+0x500000ca],dl
  41a779:	retf   
  41a77a:	add    BYTE PTR [rax],al
  41a77c:	adc    BYTE PTR [rdi-0x34afffff],dh
  41a782:	add    BYTE PTR [rax],al
  41a784:	jno    0x41a751
  41a786:	add    BYTE PTR [rax],al
  41a788:	and    BYTE PTR [rdi-0x347fffff],dh
  41a78e:	add    BYTE PTR [rax],al
  41a790:	lods   eax,DWORD PTR ds:[rsi]
  41a791:	retf   
  41a792:	add    BYTE PTR [rax],al
  41a794:	sub    BYTE PTR [rdi-0x344fffff],dh
  41a79a:	add    BYTE PTR [rax],al
  41a79c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41a79d:	int3   
  41a79e:	add    BYTE PTR [rax],al
  41a7a0:	xor    BYTE PTR [rdi-0x334fffff],dh
  41a7a6:	add    BYTE PTR [rax],al
  41a7a8:	(bad)  
  41a7a9:	int    0x0
  41a7ab:	add    BYTE PTR [rax],bh
  41a7ad:	mov    bh,0x1
  41a7af:	add    BYTE PTR [rax],dl
  41a7b1:	int    0x0
  41a7b3:	add    BYTE PTR [rdi],ch
  41a7b5:	(bad)  
  41a7b6:	add    BYTE PTR [rax],al
  41a7b8:	mov    dil,0x1
  41a7bb:	add    BYTE PTR [rax],dh
  41a7bd:	(bad)  
  41a7be:	add    BYTE PTR [rax],al
  41a7c0:	xor    eax,0x540000cf
  41a7c5:	mov    bh,0x1
  41a7c7:	add    BYTE PTR [rax-0x31],al
  41a7ca:	add    BYTE PTR [rax],al
  41a7cc:	fcmove st,st(7)
  41a7ce:	add    BYTE PTR [rax],al
  41a7d0:	(bad)  
  41a7d1:	mov    bh,0x1
  41a7d3:	add    al,ah
  41a7d5:	iret   
  41a7d6:	add    BYTE PTR [rax],al
  41a7d8:	int3   
  41a7d9:	rol    BYTE PTR [rax],1
  41a7db:	add    BYTE PTR [rax-0x49],ch
  41a7de:	add    DWORD PTR [rax],eax
  41a7e0:	rcl    al,1
  41a7e2:	add    BYTE PTR [rax],al
  41a7e4:	sub    al,0xd4
  41a7e6:	add    BYTE PTR [rax],al
  41a7e8:	jl     0x41a7a1
  41a7ea:	add    DWORD PTR [rax],eax
  41a7ec:	xor    ah,dl
  41a7ee:	add    BYTE PTR [rax],al
  41a7f0:	adc    ebp,edx
  41a7f2:	add    BYTE PTR [rax],al
  41a7f4:	mov    WORD PTR [rdi-0x2adfffff],?
  41a7fa:	add    BYTE PTR [rax],al
  41a7fc:	lock xlat BYTE PTR ds:[rbx]
  41a7fe:	add    BYTE PTR [rax],al
  41a800:	cwde   
  41a801:	mov    bh,0x1
  41a803:	add    al,dh
  41a805:	xlat   BYTE PTR ds:[rbx]
  41a806:	add    BYTE PTR [rax],al
  41a808:	mov    ecx,0xac0000d8
  41a80d:	mov    bh,0x1
  41a80f:	add    al,al
  41a811:	fadd   DWORD PTR [rax]
  41a813:	add    BYTE PTR [rdi-0x27],ch
  41a816:	add    BYTE PTR [rax],al
  41a818:	mov    eax,0x700001b7
  41a81d:	fld    DWORD PTR [rax]
  41a81f:	add    BYTE PTR [rsi],al
  41a821:	fild   DWORD PTR [rax]
  41a823:	add    ah,al
  41a825:	mov    bh,0x1
  41a827:	add    BYTE PTR [rax],dl
  41a829:	fild   DWORD PTR [rax]
  41a82b:	add    al,cl
  41a82d:	fiadd  WORD PTR [rax]
  41a82f:	add    al,dl
  41a831:	mov    bh,0x1
  41a833:	add    al,dl
  41a835:	fiadd  WORD PTR [rax]
  41a837:	add    bl,bl
  41a839:	jrcxz  0x41a83b
  41a83b:	add    al,ch
  41a83d:	mov    bh,0x1
  41a83f:	add    al,ah
  41a841:	jrcxz  0x41a843
  41a843:	add    BYTE PTR [rdx],dh
  41a845:	out    dx,al
  41a846:	add    BYTE PTR [rax],al
  41a848:	cld    
  41a849:	mov    bh,0x1
  41a84b:	add    BYTE PTR [rax-0x12],al
  41a84e:	add    BYTE PTR [rax],al
  41a850:	jo     0x41a840
  41a852:	add    BYTE PTR [rax],al
  41a854:	adc    al,0xb8
  41a856:	add    DWORD PTR [rax],eax
  41a858:	jo     0x41a848
  41a85a:	add    BYTE PTR [rax],al
  41a85c:	mov    eax,0x1c0000ee
  41a861:	mov    eax,0xeec00001
  41a866:	add    BYTE PTR [rax],al
  41a868:	fsub   st(6),st
  41a86a:	add    BYTE PTR [rax],al
  41a86c:	sub    BYTE PTR [rax-0x111fffff],bh
  41a872:	add    BYTE PTR [rax],al
  41a874:	pop    rdx
  41a875:	lock add BYTE PTR [rax],al
  41a878:	sub    al,0xb8
  41a87a:	add    DWORD PTR [rax],eax
  41a87c:	(bad)  
  41a87d:	lock add BYTE PTR [rax],al
  41a880:	retf   0x104
  41a883:	add    BYTE PTR [rax+rdi*4+0x1],al
  41a887:	add    al,dl
  41a889:	add    al,0x1
  41a88b:	add    ch,cl
  41a88d:	add    eax,0xb8600001
  41a892:	add    DWORD PTR [rax],eax
  41a894:	rol    BYTE PTR [rip+0x60e0001],1        # 0x64fa89b
  41a89a:	add    DWORD PTR [rax],eax
  41a89c:	ins    BYTE PTR es:[rdi],dx
  41a89d:	mov    eax,0x6100001
  41a8a2:	add    DWORD PTR [rax],eax
  41a8a4:	fadd   QWORD PTR [rsi]
  41a8a6:	add    DWORD PTR [rax],eax
  41a8a8:	jo     0x41a862
  41a8aa:	add    DWORD PTR [rax],eax
  41a8ac:	loopne 0x41a8b4
  41a8ae:	add    DWORD PTR [rax],eax
  41a8b0:	and    al,BYTE PTR [rdi]
  41a8b2:	add    DWORD PTR [rax],eax
  41a8b4:	jl     0x41a86e
  41a8b6:	add    DWORD PTR [rax],eax
  41a8b8:	xor    BYTE PTR [rdi],al
  41a8ba:	add    DWORD PTR [rax],eax
  41a8bc:	or     BYTE PTR ds:[rcx],al
  41a8bf:	add    BYTE PTR [rax+rdi*4+0x8400001],al
  41a8c6:	add    DWORD PTR [rax],eax
  41a8c8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41a8c9:	or     BYTE PTR [rcx],al
  41a8cb:	add    BYTE PTR [rax-0x4ffffe48],dl
  41a8d1:	or     BYTE PTR [rcx],al
  41a8d3:	add    BYTE PTR [rdx+0x9],ah
  41a8d6:	add    DWORD PTR [rax],eax
  41a8d8:	cwde   
  41a8d9:	mov    eax,0x9700001
  41a8de:	add    DWORD PTR [rax],eax
  41a8e0:	xchg   esi,eax
  41a8e1:	or     DWORD PTR [rcx],eax
  41a8e3:	add    BYTE PTR [rax-0x5ffffe48],ch
  41a8e9:	or     DWORD PTR [rcx],eax
  41a8eb:	add    al,dl
  41a8ed:	or     al,BYTE PTR [rcx]
  41a8ef:	add    BYTE PTR [rax-0x2ffffe48],dh
  41a8f5:	or     al,BYTE PTR [rcx]
  41a8f7:	add    BYTE PTR [rsp+rcx*1],dh
  41a8fa:	add    DWORD PTR [rax],eax
  41a8fc:	(bad)  
  41a8fd:	mov    eax,0xc400001
  41a902:	add    DWORD PTR [rax],eax
  41a904:	push   rbx
  41a905:	or     eax,0xb8d40001
  41a90a:	add    DWORD PTR [rax],eax
  41a90c:	(bad)  
  41a90d:	or     eax,0xda40001
  41a912:	add    DWORD PTR [rax],eax
  41a914:	call   0xffffffffb041aad1
  41a919:	or     eax,0xee60001
  41a91e:	add    DWORD PTR [rax],eax
  41a920:	in     al,dx
  41a921:	mov    eax,0xef00001
  41a926:	add    DWORD PTR [rax],eax
  41a928:	add    edx,DWORD PTR [rax]
  41a92a:	add    DWORD PTR [rax],eax
  41a92c:	clc    
  41a92d:	mov    eax,0x10100001
  41a932:	add    DWORD PTR [rax],eax
  41a934:	sbb    DWORD PTR [rcx],edx
  41a936:	add    DWORD PTR [rax],eax
  41a938:	add    al,0xb9
  41a93a:	add    DWORD PTR [rax],eax
  41a93c:	and    BYTE PTR [rcx],dl
  41a93e:	add    DWORD PTR [rax],eax
  41a940:	adc    DWORD PTR [rcx],r8d
  41a943:	add    BYTE PTR [rax],dl
  41a945:	mov    ecx,0x11500001
  41a94a:	add    DWORD PTR [rax],eax
  41a94c:	iret   
  41a94d:	adc    DWORD PTR [rcx],eax
  41a94f:	add    BYTE PTR [rcx+rdi*4],dl
  41a952:	add    DWORD PTR [rax],eax
  41a954:	rcl    BYTE PTR [rcx],1
  41a956:	add    DWORD PTR [rax],eax
  41a958:	adc    al,0x12
  41a95a:	add    DWORD PTR [rax],eax
  41a95c:	sbb    al,0xb9
  41a95e:	add    DWORD PTR [rax],eax
  41a960:	and    BYTE PTR [rdx],dl
  41a962:	add    DWORD PTR [rax],eax
  41a964:	(bad)  
  41a966:	add    DWORD PTR [rax],eax
  41a968:	sub    BYTE PTR [rcx+0x15500001],bh
  41a96e:	add    DWORD PTR [rax],eax
  41a970:	pop    rax
  41a971:	adc    eax,0xb93c0001
  41a976:	add    DWORD PTR [rax],eax
  41a978:	(bad)  
  41a979:	adc    eax,0x156b0001
  41a97e:	add    DWORD PTR [rax],eax
  41a980:	rex mov ecx,0x15700001
  41a986:	add    DWORD PTR [rax],eax
  41a988:	ja     0x41a99f
  41a98a:	add    DWORD PTR [rax],eax
  41a98c:	rex.R mov ecx,0x15800001
  41a992:	add    DWORD PTR [rax],eax
  41a994:	mov    DWORD PTR [rip+0xffffffffb9480001],edx        # 0xffffffffb989a99b
  41a99a:	add    DWORD PTR [rax],eax
  41a99c:	nop
  41a99d:	adc    eax,0x15d30001
  41a9a2:	add    DWORD PTR [rax],eax
  41a9a4:	rex.WR movabs rcx,0x161d000115e00001
  41a9ae:	add    DWORD PTR [rax],eax
  41a9b0:	push   rsp
  41a9b1:	mov    ecx,0x16200001
  41a9b6:	add    DWORD PTR [rax],eax
  41a9b8:	sub    dl,BYTE PTR [rsi]
  41a9ba:	add    DWORD PTR [rax],eax
  41a9bc:	pop    rsp
  41a9bd:	mov    ecx,0x16300001
  41a9c2:	add    DWORD PTR [rax],eax
  41a9c4:	cmp    dl,BYTE PTR [rsi]
  41a9c6:	add    DWORD PTR [rax],eax
  41a9c8:	(bad)  
  41a9c9:	mov    ecx,0x17900001
  41a9ce:	add    DWORD PTR [rax],eax
  41a9d0:	jo     0x41a9ee
  41a9d2:	add    DWORD PTR [rax],eax
  41a9d4:	je     0x41a986
  41a9d6:	add    DWORD PTR [rax],eax

Disassembly of section .xdata:

000000000041b000 <.xdata>:
  41b000:	add    DWORD PTR [rax],eax
  41b002:	add    BYTE PTR [rax],al
  41b004:	add    DWORD PTR [rcx+rax*1],eax
  41b007:	add    BYTE PTR [rdx+rax*2],al
  41b00a:	add    BYTE PTR [rax],al
  41b00c:	add    DWORD PTR [rcx+rax*1],eax
  41b00f:	add    BYTE PTR [rdx+riz*2],al
  41b012:	add    BYTE PTR [rax],al
  41b014:	add    DWORD PTR [rdi],ecx
  41b016:	or     BYTE PTR [rax],al
  41b018:	lgdt   [rbx]
  41b01b:	add    BYTE PTR [rax],cl
  41b01d:	xor    BYTE PTR [rdi],al
  41b01f:	(bad)  
  41b020:	(bad)  
  41b021:	jo     0x41b028
  41b023:	push   rax
  41b024:	add    al,0xc0
  41b026:	add    dl,al
  41b028:	or     DWORD PTR [rcx+rax*1],eax
  41b02b:	add    BYTE PTR [rdx+rax*2],al
  41b02e:	add    BYTE PTR [rax],al
  41b030:	rex adc eax,0x10001
  41b036:	add    BYTE PTR [rax],al
  41b038:	(bad)  
  41b039:	adc    al,0x0
  41b03b:	add    ah,ch
  41b03d:	adc    al,0x0
  41b03f:	add    BYTE PTR [rax-0x13ffff43],dl
  41b045:	adc    al,0x0
  41b047:	add    BYTE PTR [rcx],cl
  41b049:	add    al,0x1
  41b04b:	add    BYTE PTR [rdx+rax*2],al
  41b04e:	add    BYTE PTR [rax],al
  41b050:	rex adc eax,0x10001
  41b056:	add    BYTE PTR [rax],al
  41b058:	add    al,0x15
  41b05a:	add    BYTE PTR [rax],al
  41b05c:	sbb    al,0x15
  41b05e:	add    BYTE PTR [rax],al
  41b060:	nop
  41b061:	mov    ebp,0x151c0000
  41b066:	add    BYTE PTR [rax],al
  41b068:	add    DWORD PTR [rdi],eax
  41b06a:	add    al,0x0
  41b06c:	(bad)  
  41b06d:	xor    al,BYTE PTR [rbx]
  41b06f:	xor    BYTE PTR [rdx],al
  41b071:	(bad)  
  41b072:	add    DWORD PTR [rax+0x1],esi
  41b075:	(bad)  
  41b076:	or     BYTE PTR [rax],al
  41b078:	(bad)  
  41b079:	push   rdx
  41b07a:	or     dh,BYTE PTR [rax]
  41b07c:	or     DWORD PTR [rax+0x8],esp
  41b07f:	jo     0x41b088
  41b081:	push   rax
  41b082:	(bad)  
  41b083:	rol    BYTE PTR [rax+rdx*8],0x2
  41b087:	loopne 0x41b08a
  41b089:	add    al,0x1
  41b08b:	add    BYTE PTR [rdx+riz*2],al
  41b08e:	add    BYTE PTR [rax],al
  41b090:	add    DWORD PTR [rdi],eax
  41b092:	add    al,0x0
  41b094:	(bad)  
  41b095:	xor    al,BYTE PTR [rbx]
  41b097:	xor    BYTE PTR [rdx],al
  41b099:	(bad)  
  41b09a:	add    DWORD PTR [rax+0x1],esi
  41b09d:	(bad)  
  41b09e:	add    al,0x0
  41b0a0:	(bad)  
  41b0a1:	xor    al,BYTE PTR [rbx]
  41b0a3:	xor    BYTE PTR [rdx],al
  41b0a5:	(bad)  
  41b0a6:	add    DWORD PTR [rax+0x1],esi
  41b0a9:	add    BYTE PTR [rax],al
  41b0ab:	add    BYTE PTR [rcx],al
  41b0ad:	add    BYTE PTR [rax],al
  41b0af:	add    BYTE PTR [rcx],al
  41b0b1:	(bad)  
  41b0b2:	add    al,0x0
  41b0b4:	(bad)  
  41b0b5:	xor    al,BYTE PTR [rbx]
  41b0b7:	xor    BYTE PTR [rdx],al
  41b0b9:	(bad)  
  41b0ba:	add    DWORD PTR [rax+0x1],esi
  41b0bd:	adc    ecx,DWORD PTR [rdx]
  41b0bf:	add    BYTE PTR [rbx],dl
  41b0c1:	add    DWORD PTR [rcx],ebx
  41b0c3:	add    BYTE PTR [rax+rsi*1],cl
  41b0c6:	or     esp,DWORD PTR [rax+0xa]
  41b0c9:	jo     0x41b0d4
  41b0cb:	push   rax
  41b0cc:	or     al,al
  41b0ce:	(bad)  
  41b0cf:	rol    BYTE PTR [rax+riz*8],1
  41b0d2:	add    dh,al
  41b0d4:	add    DWORD PTR [rdi],eax
  41b0d6:	add    al,0x0
  41b0d8:	(bad)  
  41b0d9:	xor    al,BYTE PTR [rbx]
  41b0db:	xor    BYTE PTR [rdx],al
  41b0dd:	(bad)  
  41b0de:	add    DWORD PTR [rax+0x1],esi
  41b0e1:	(bad)  
  41b0e2:	or     BYTE PTR [rax],al
  41b0e4:	(bad)  
  41b0e5:	push   rdx
  41b0e6:	or     dh,BYTE PTR [rax]
  41b0e8:	or     DWORD PTR [rax+0x8],esp
  41b0eb:	jo     0x41b0f4
  41b0ed:	push   rax
  41b0ee:	(bad)  
  41b0ef:	rol    BYTE PTR [rax+rdx*8],0x2
  41b0f3:	loopne 0x41b0f6
  41b0f5:	(bad)  
  41b0f6:	add    eax,DWORD PTR [rax]
  41b0f8:	(bad)  
  41b0f9:	rex.X add sil,BYTE PTR [rax]
  41b0fc:	add    DWORD PTR [rax+0x0],esp
  41b0ff:	add    BYTE PTR [rcx],al
  41b101:	(bad)  
  41b102:	or     BYTE PTR [rax],al
  41b104:	(bad)  
  41b105:	ror    BYTE PTR [rdx],cl
  41b107:	xor    BYTE PTR [rcx],cl
  41b109:	(bad)  
  41b10a:	or     BYTE PTR [rax+0x7],dh
  41b10d:	push   rax
  41b10e:	(bad)  
  41b10f:	rol    BYTE PTR [rax+rdx*8],0x2
  41b113:	loopne 0x41b116
  41b115:	add    al,0x1
  41b117:	add    BYTE PTR [rdx+rax*2],al
  41b11a:	add    BYTE PTR [rax],al
  41b11c:	add    DWORD PTR [rcx+rax*1],eax
  41b11f:	add    BYTE PTR [rdx+rax*2],al
  41b122:	add    BYTE PTR [rax],al
  41b124:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b12c
  41b12a:	add    DWORD PTR [rax],esi
  41b12c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b134
  41b132:	add    DWORD PTR [rax],esi
  41b134:	add    DWORD PTR [rsi],eax
  41b136:	add    eax,DWORD PTR [rax]
  41b138:	(bad)  
  41b139:	rex.X add sil,BYTE PTR [rax]
  41b13c:	add    DWORD PTR [rax+0x0],esp
  41b13f:	add    BYTE PTR [rcx],al
  41b141:	add    eax,0x32050002
  41b146:	add    DWORD PTR [rax],esi
  41b148:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b150
  41b14e:	add    DWORD PTR [rax],esi
  41b150:	add    DWORD PTR [rip+0x52050002],eax        # 0x5246b158
  41b156:	add    DWORD PTR [rax],esi
  41b158:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b160
  41b15e:	add    DWORD PTR [rax],esi
  41b160:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b168
  41b166:	add    DWORD PTR [rax],esi
  41b168:	add    DWORD PTR [rdx],ecx
  41b16a:	(bad)  
  41b16b:	add    BYTE PTR [rdx],cl
  41b16d:	xor    al,BYTE PTR [rsi]
  41b16f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1b5d5
  41b175:	push   rax
  41b176:	add    al,al
  41b178:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b180
  41b17e:	add    DWORD PTR [rax],esi
  41b180:	add    DWORD PTR [rax],ecx
  41b182:	add    eax,0x4620800
  41b187:	xor    BYTE PTR [rbx],al
  41b189:	(bad)  
  41b18a:	add    dh,BYTE PTR [rax+0x1]
  41b18d:	push   rax
  41b18e:	add    BYTE PTR [rax],al
  41b190:	add    DWORD PTR [rdi+rax*1],ecx
  41b193:	add    BYTE PTR [rdx+riz*2],cl
  41b196:	or     BYTE PTR [rax],dh
  41b198:	(bad)  
  41b199:	(bad)  
  41b19a:	(bad)  
  41b19b:	jo     0x41b1a2
  41b19d:	push   rax
  41b19e:	add    al,0xc0
  41b1a0:	add    dl,al
  41b1a2:	add    BYTE PTR [rax],al
  41b1a4:	add    DWORD PTR [rdx],ecx
  41b1a6:	(bad)  
  41b1a7:	add    BYTE PTR [rdx],cl
  41b1a9:	xor    BYTE PTR [rcx],cl
  41b1ab:	(bad)  
  41b1ac:	or     BYTE PTR [rax+0x7],dh
  41b1af:	push   rax
  41b1b0:	(bad)  
  41b1b1:	rol    BYTE PTR [rax+rdx*8],0x2
  41b1b5:	loopne 0x41b1b7
  41b1b7:	add    BYTE PTR [rcx],al
  41b1b9:	adc    BYTE PTR [rcx],cl
  41b1bb:	add    BYTE PTR [rax],dl
  41b1bd:	ret    0x300c
  41b1c0:	or     esp,DWORD PTR [rax+0xa]
  41b1c3:	jo     0x41b1ce
  41b1c5:	push   rax
  41b1c6:	or     al,al
  41b1c8:	(bad)  
  41b1c9:	rol    BYTE PTR [rax+riz*8],1
  41b1cc:	add    dh,al
  41b1ce:	add    BYTE PTR [rax],al
  41b1d0:	add    DWORD PTR [rcx+rax*1],eax
  41b1d3:	add    BYTE PTR [rdx+rax*4],al
  41b1d6:	add    BYTE PTR [rax],al
  41b1d8:	add    DWORD PTR [rcx+rax*1],eax
  41b1db:	add    BYTE PTR [rdx+rax*4],al
  41b1de:	add    BYTE PTR [rax],al
  41b1e0:	add    DWORD PTR [rcx+rax*1],eax
  41b1e3:	add    BYTE PTR [rdx+rax*4],al
  41b1e6:	add    BYTE PTR [rax],al
  41b1e8:	add    DWORD PTR [rcx+rax*1],eax
  41b1eb:	add    BYTE PTR [rdx+rax*4],al
  41b1ee:	add    BYTE PTR [rax],al
  41b1f0:	add    DWORD PTR [rcx+rax*1],eax
  41b1f3:	add    BYTE PTR [rdx+rax*4],al
  41b1f6:	add    BYTE PTR [rax],al
  41b1f8:	add    DWORD PTR [rcx+rax*1],eax
  41b1fb:	add    BYTE PTR [rdx+rax*4],al
  41b1fe:	add    BYTE PTR [rax],al
  41b200:	add    DWORD PTR [rdi+rax*1],ecx
  41b203:	add    BYTE PTR [rdx+riz*2],cl
  41b206:	or     BYTE PTR [rax],dh
  41b208:	(bad)  
  41b209:	(bad)  
  41b20a:	(bad)  
  41b20b:	jo     0x41b212
  41b20d:	push   rax
  41b20e:	add    al,0xc0
  41b210:	add    dl,al
  41b212:	add    BYTE PTR [rax],al
  41b214:	add    DWORD PTR [rax],eax
  41b216:	add    BYTE PTR [rax],al
  41b218:	add    DWORD PTR [rax],eax
  41b21a:	add    BYTE PTR [rax],al
  41b21c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b224
  41b222:	add    DWORD PTR [rax],esi
  41b224:	add    DWORD PTR [rax],edx
  41b226:	or     DWORD PTR [rax],eax
  41b228:	adc    BYTE PTR [rdx+0xc],al
  41b22b:	xor    BYTE PTR [rbx],cl
  41b22d:	(bad)  
  41b22e:	or     dh,BYTE PTR [rax+0x9]
  41b231:	push   rax
  41b232:	or     al,al
  41b234:	(bad)  
  41b235:	rol    BYTE PTR [rax+riz*8],1
  41b238:	add    dh,al
  41b23a:	add    BYTE PTR [rax],al
  41b23c:	add    DWORD PTR [rbx],edx
  41b23e:	or     al,BYTE PTR [rax]
  41b240:	adc    eax,DWORD PTR [rcx]
  41b242:	xor    eax,0xb300c00
  41b247:	(bad)  
  41b248:	or     dh,BYTE PTR [rax+0x9]
  41b24b:	push   rax
  41b24c:	or     al,al
  41b24e:	(bad)  
  41b24f:	rol    BYTE PTR [rax+riz*8],1
  41b252:	add    dh,al
  41b254:	add    DWORD PTR [rcx+rax*1],eax
  41b257:	add    BYTE PTR [rdx+rax*2],al
  41b25a:	add    BYTE PTR [rax],al
  41b25c:	add    DWORD PTR [rdi+rax*1],ecx
  41b25f:	add    BYTE PTR [rdx+rax*2],cl
  41b262:	or     BYTE PTR [rax],dh
  41b264:	(bad)  
  41b265:	(bad)  
  41b266:	(bad)  
  41b267:	jo     0x41b26e
  41b269:	push   rax
  41b26a:	add    al,0xc0
  41b26c:	add    dl,al
  41b26e:	add    BYTE PTR [rax],al
  41b270:	add    DWORD PTR [rdi],eax
  41b272:	add    al,0x0
  41b274:	(bad)  
  41b275:	xor    al,BYTE PTR [rbx]
  41b277:	xor    BYTE PTR [rdx],al
  41b279:	(bad)  
  41b27a:	add    DWORD PTR [rax+0x1],esi
  41b27d:	(bad)  
  41b27e:	add    eax,DWORD PTR [rax]
  41b280:	(bad)  
  41b281:	(bad)  
  41b283:	xor    BYTE PTR [rcx],al
  41b285:	(bad)  
  41b286:	add    BYTE PTR [rax],al
  41b288:	add    DWORD PTR [rcx+rax*1],eax
  41b28b:	add    BYTE PTR [rdx+riz*2],al
  41b28e:	add    BYTE PTR [rax],al
  41b290:	add    DWORD PTR [rsi],eax
  41b292:	add    eax,DWORD PTR [rax]
  41b294:	(bad)  
  41b295:	rex.X add sil,BYTE PTR [rax]
  41b298:	add    DWORD PTR [rax+0x0],esp
  41b29b:	add    BYTE PTR [rcx],al
  41b29d:	(bad)  
  41b29e:	add    eax,DWORD PTR [rax]
  41b2a0:	(bad)  
  41b2a1:	rex.X add sil,BYTE PTR [rax]
  41b2a4:	add    DWORD PTR [rax+0x0],esp
  41b2a7:	add    BYTE PTR [rcx],al
  41b2a9:	add    eax,0x32050002
  41b2ae:	add    DWORD PTR [rax],esi
  41b2b0:	add    DWORD PTR [rsi],eax
  41b2b2:	add    eax,DWORD PTR [rax]
  41b2b4:	(bad)  
  41b2b5:	rex.X add sil,BYTE PTR [rax]
  41b2b8:	add    DWORD PTR [rax+0x0],esp
  41b2bb:	add    BYTE PTR [rcx],al
  41b2bd:	(bad)  
  41b2be:	add    eax,DWORD PTR [rax]
  41b2c0:	(bad)  
  41b2c1:	rex.X add sil,BYTE PTR [rax]
  41b2c4:	add    DWORD PTR [rax+0x0],esp
  41b2c7:	add    BYTE PTR [rcx],al
  41b2c9:	or     BYTE PTR [rip+0x4420800],al        # 0x483bacf
  41b2cf:	xor    BYTE PTR [rbx],al
  41b2d1:	(bad)  
  41b2d2:	add    dh,BYTE PTR [rax+0x1]
  41b2d5:	push   rax
  41b2d6:	add    BYTE PTR [rax],al
  41b2d8:	add    DWORD PTR [rcx+rax*1],eax
  41b2db:	add    BYTE PTR [rdx+riz*2],al
  41b2de:	add    BYTE PTR [rax],al
  41b2e0:	add    DWORD PTR [rdi],eax
  41b2e2:	add    al,0x0
  41b2e4:	(bad)  
  41b2e5:	xor    al,BYTE PTR [rbx]
  41b2e7:	xor    BYTE PTR [rdx],al
  41b2e9:	(bad)  
  41b2ea:	add    DWORD PTR [rax+0x1],esi
  41b2ed:	add    BYTE PTR [rax],al
  41b2ef:	add    BYTE PTR [rcx],al
  41b2f1:	add    BYTE PTR [rax],al
  41b2f3:	add    BYTE PTR [rcx],al
  41b2f5:	add    al,0x1
  41b2f7:	add    BYTE PTR [rdx+riz*2],al
  41b2fa:	add    BYTE PTR [rax],al
  41b2fc:	add    DWORD PTR [rsi],eax
  41b2fe:	add    eax,DWORD PTR [rax]
  41b300:	(bad)  
  41b301:	rex.X add sil,BYTE PTR [rax]
  41b304:	add    DWORD PTR [rax+0x0],esp
  41b307:	add    BYTE PTR [rcx],al
  41b309:	or     al,BYTE PTR [rip+0x1c010a00]        # 0x1c42bd0f
  41b30f:	add    BYTE PTR [rbx],al
  41b311:	xor    BYTE PTR [rdx],al
  41b313:	(bad)  
  41b314:	add    DWORD PTR [rax+0x0],esi
  41b317:	add    BYTE PTR [rcx],al
  41b319:	add    eax,0x32050002
  41b31e:	add    DWORD PTR [rax],esi
  41b320:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b328
  41b326:	add    DWORD PTR [rax],esi
  41b328:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b330
  41b32e:	add    DWORD PTR [rax],esi
  41b330:	add    DWORD PTR [rax],eax
  41b332:	add    BYTE PTR [rax],al
  41b334:	add    DWORD PTR [rcx+rax*1],eax
  41b337:	add    BYTE PTR [rdx+rax*2],al
  41b33a:	add    BYTE PTR [rax],al
  41b33c:	add    DWORD PTR [rsi],eax
  41b33e:	add    eax,DWORD PTR [rax]
  41b340:	(bad)  
  41b341:	rex.X add sil,BYTE PTR [rax]
  41b344:	add    DWORD PTR [rax+0x0],esp
  41b347:	add    BYTE PTR [rcx],al
  41b349:	(bad)  
  41b34a:	add    al,0x0
  41b34c:	(bad)  
  41b34d:	xor    al,BYTE PTR [rbx]
  41b34f:	xor    BYTE PTR [rdx],al
  41b351:	(bad)  
  41b352:	add    DWORD PTR [rax+0x1],esi
  41b355:	add    eax,0x32050002
  41b35a:	add    DWORD PTR [rax],esi
  41b35c:	add    DWORD PTR [rsi],eax
  41b35e:	add    eax,DWORD PTR [rax]
  41b360:	(bad)  
  41b361:	rex.X add sil,BYTE PTR [rax]
  41b364:	add    DWORD PTR [rax+0x0],esp
  41b367:	add    BYTE PTR [rcx],al
  41b369:	add    al,0x1
  41b36b:	add    BYTE PTR [rdx+rax*2],al
  41b36e:	add    BYTE PTR [rax],al
  41b370:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b378
  41b376:	add    DWORD PTR [rax],esi
  41b378:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b380
  41b37e:	add    DWORD PTR [rax],esi
  41b380:	add    DWORD PTR [rdx],ecx
  41b382:	(bad)  
  41b383:	add    BYTE PTR [rdx],cl
  41b385:	xor    al,BYTE PTR [rsi]
  41b387:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1b7ed
  41b38d:	push   rax
  41b38e:	add    al,al
  41b390:	add    DWORD PTR [rdx],ecx
  41b392:	(bad)  
  41b393:	add    BYTE PTR [rdx],cl
  41b395:	xor    al,BYTE PTR [rsi]
  41b397:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1b7fd
  41b39d:	push   rax
  41b39e:	add    al,al
  41b3a0:	add    DWORD PTR [rax],ecx
  41b3a2:	add    eax,0x4420800
  41b3a7:	xor    BYTE PTR [rbx],al
  41b3a9:	(bad)  
  41b3aa:	add    dh,BYTE PTR [rax+0x1]
  41b3ad:	push   rax
  41b3ae:	add    BYTE PTR [rax],al
  41b3b0:	add    DWORD PTR [rip+0x52050002],eax        # 0x5246b3b8
  41b3b6:	add    DWORD PTR [rax],esi
  41b3b8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b3c0
  41b3be:	add    DWORD PTR [rax],esi
  41b3c0:	add    DWORD PTR [rsi],eax
  41b3c2:	add    eax,DWORD PTR [rax]
  41b3c4:	(bad)  
  41b3c5:	rex.X add sil,BYTE PTR [rax]
  41b3c8:	add    DWORD PTR [rax+0x0],esp
  41b3cb:	add    BYTE PTR [rcx],al
  41b3cd:	(bad)  
  41b3ce:	add    al,0x0
  41b3d0:	(bad)  
  41b3d1:	xor    al,BYTE PTR [rbx]
  41b3d3:	xor    BYTE PTR [rdx],al
  41b3d5:	(bad)  
  41b3d6:	add    DWORD PTR [rax+0x1],esi
  41b3d9:	add    eax,0x32050002
  41b3de:	add    DWORD PTR [rax],esi
  41b3e0:	add    DWORD PTR [rdi],eax
  41b3e2:	add    al,0x0
  41b3e4:	(bad)  
  41b3e5:	xor    al,BYTE PTR [rbx]
  41b3e7:	xor    BYTE PTR [rdx],al
  41b3e9:	(bad)  
  41b3ea:	add    DWORD PTR [rax+0x1],esi
  41b3ed:	add    eax,0x32050002
  41b3f2:	add    DWORD PTR [rax],esi
  41b3f4:	add    DWORD PTR [rsi],eax
  41b3f6:	add    eax,DWORD PTR [rax]
  41b3f8:	(bad)  
  41b3f9:	rex.X add sil,BYTE PTR [rax]
  41b3fc:	add    DWORD PTR [rax+0x0],esp
  41b3ff:	add    BYTE PTR [rcx],al
  41b401:	add    BYTE PTR [rax],al
  41b403:	add    BYTE PTR [rcx],al
  41b405:	or     al,BYTE PTR [rip+0x6720a05]        # 0x6b3be10
  41b40b:	add    eax,DWORD PTR [rbx]
  41b40d:	xor    BYTE PTR [rdx],al
  41b40f:	(bad)  
  41b410:	add    DWORD PTR [rax+0x0],edx
  41b413:	add    BYTE PTR [rcx],al
  41b415:	sbb    ecx,DWORD PTR [rbx]
  41b417:	test   DWORD PTR [rbx],ebx
  41b419:	add    edx,DWORD PTR [rbx]
  41b41b:	add    DWORD PTR [rbx],ebx
  41b41d:	add    BYTE PTR [rax+rsi*1],cl
  41b420:	or     esp,DWORD PTR [rax+0xa]
  41b423:	jo     0x41b42e
  41b425:	rol    BYTE PTR [rdi],0xd0
  41b428:	add    eax,0x1f003e0
  41b42d:	push   rax
  41b42e:	add    BYTE PTR [rax],al
  41b430:	add    DWORD PTR [rbx],edx
  41b432:	or     al,BYTE PTR [rax]
  41b434:	adc    eax,DWORD PTR [rcx]
  41b436:	xor    eax,0xb300c00
  41b43b:	(bad)  
  41b43c:	or     dh,BYTE PTR [rax+0x9]
  41b43f:	push   rax
  41b440:	or     al,al
  41b442:	(bad)  
  41b443:	rol    BYTE PTR [rax+riz*8],1
  41b446:	add    dh,al
  41b448:	add    DWORD PTR [rcx],ebx
  41b44a:	or     al,BYTE PTR [rax]
  41b44c:	sbb    DWORD PTR [rcx],eax
  41b44e:	or     eax,DWORD PTR [rdx]
  41b450:	adc    DWORD PTR [rax],esi
  41b452:	adc    BYTE PTR [rax+0xf],ah
  41b455:	jo     0x41b465
  41b457:	push   rax
  41b458:	or     eax,0x4d00bc0
  41b45d:	loopne 0x41b461
  41b45f:	lock add DWORD PTR [rax],edx
  41b462:	or     DWORD PTR [rax],eax
  41b464:	adc    dl,al
  41b466:	or     al,0x30
  41b468:	or     esp,DWORD PTR [rax+0xa]
  41b46b:	jo     0x41b476
  41b46d:	push   rax
  41b46e:	or     al,al
  41b470:	(bad)  
  41b471:	rol    BYTE PTR [rax+riz*8],1
  41b474:	add    dh,al
  41b476:	add    BYTE PTR [rax],al
  41b478:	add    DWORD PTR [rdi],eax
  41b47a:	add    al,0x0
  41b47c:	(bad)  
  41b47d:	xor    al,BYTE PTR [rbx]
  41b47f:	xor    BYTE PTR [rdx],al
  41b481:	(bad)  
  41b482:	add    DWORD PTR [rax+0x1],esi
  41b485:	add    BYTE PTR [rax],al
  41b487:	add    BYTE PTR [rcx],al
  41b489:	add    al,0x1
  41b48b:	add    BYTE PTR [rdx+rax*2],al
  41b48e:	add    BYTE PTR [rax],al
  41b490:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b498
  41b496:	add    DWORD PTR [rax],esi
  41b498:	add    DWORD PTR [rsi],eax
  41b49a:	add    eax,DWORD PTR [rax]
  41b49c:	(bad)  
  41b49d:	rex.X add sil,BYTE PTR [rax]
  41b4a0:	add    DWORD PTR [rax+0x0],esp
  41b4a3:	add    BYTE PTR [rcx],al
  41b4a5:	add    eax,0x32050002
  41b4aa:	add    DWORD PTR [rax],esi
  41b4ac:	add    DWORD PTR [rax],eax
  41b4ae:	add    BYTE PTR [rax],al
  41b4b0:	add    DWORD PTR [rax],eax
  41b4b2:	add    BYTE PTR [rax],al
  41b4b4:	add    DWORD PTR [rcx+rax*1],eax
  41b4b7:	add    BYTE PTR [rdx+rax*2],al
  41b4ba:	add    BYTE PTR [rax],al
  41b4bc:	add    DWORD PTR [rcx+rax*1],eax
  41b4bf:	add    BYTE PTR [rdx+rax*2],al
  41b4c2:	add    BYTE PTR [rax],al
  41b4c4:	add    DWORD PTR [rax],eax
  41b4c6:	add    BYTE PTR [rax],al
  41b4c8:	add    DWORD PTR [rax],eax
  41b4ca:	add    BYTE PTR [rax],al
  41b4cc:	add    DWORD PTR [rsi],ecx
  41b4ce:	or     BYTE PTR [rax],al
  41b4d0:	(bad)  
  41b4d1:	repnz or dh,BYTE PTR [rax]
  41b4d4:	or     DWORD PTR [rax+0x8],esp
  41b4d7:	jo     0x41b4e0
  41b4d9:	push   rax
  41b4da:	(bad)  
  41b4db:	rol    BYTE PTR [rax+rdx*8],0x2
  41b4df:	loopne 0x41b4e2
  41b4e1:	add    al,0x1
  41b4e3:	add    BYTE PTR [rdx+rax*2],al
  41b4e6:	add    BYTE PTR [rax],al
  41b4e8:	add    DWORD PTR [rcx+rax*1],eax
  41b4eb:	add    BYTE PTR [rdx+rax*2],al
  41b4ee:	add    BYTE PTR [rax],al
  41b4f0:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b4f8
  41b4f6:	add    DWORD PTR [rax],esi
  41b4f8:	add    DWORD PTR [rcx+rax*1],eax
  41b4fb:	add    BYTE PTR [rdx+rax*2],al
  41b4fe:	add    BYTE PTR [rax],al
  41b500:	add    DWORD PTR [rax],eax
  41b502:	add    BYTE PTR [rax],al
  41b504:	add    DWORD PTR [rdi+rax*1],ecx
  41b507:	add    BYTE PTR [rdx+rax*8],cl
  41b50a:	or     BYTE PTR [rax],dh
  41b50c:	(bad)  
  41b50d:	(bad)  
  41b50e:	(bad)  
  41b50f:	jo     0x41b516
  41b511:	push   rax
  41b512:	add    al,0xc0
  41b514:	add    dl,al
  41b516:	add    BYTE PTR [rax],al
  41b518:	add    DWORD PTR [rcx+rax*1],eax
  41b51b:	add    BYTE PTR [rdx+rax*2],al
  41b51e:	add    BYTE PTR [rax],al
  41b520:	add    DWORD PTR [rsi],eax
  41b522:	add    eax,DWORD PTR [rax]
  41b524:	(bad)  
  41b525:	rex.X add sil,BYTE PTR [rax]
  41b528:	add    DWORD PTR [rax+0x0],esp
  41b52b:	add    BYTE PTR [rcx],al
  41b52d:	add    eax,0x72050002
  41b532:	add    DWORD PTR [rax],esi
  41b534:	add    DWORD PTR [rip+0x52050002],eax        # 0x5246b53c
  41b53a:	add    DWORD PTR [rax],esi
  41b53c:	add    DWORD PTR [rcx+rax*1],eax
  41b53f:	add    BYTE PTR [rdx+rax*2],al
  41b542:	add    BYTE PTR [rax],al
  41b544:	add    DWORD PTR [rcx+rax*1],eax
  41b547:	add    BYTE PTR [rdx+rax*2],al
  41b54a:	add    BYTE PTR [rax],al
  41b54c:	add    DWORD PTR [rsi],eax
  41b54e:	add    eax,DWORD PTR [rax]
  41b550:	(bad)  
  41b551:	rex.X add sil,BYTE PTR [rax]
  41b554:	add    DWORD PTR [rax+0x0],esp
  41b557:	add    BYTE PTR [rcx],al
  41b559:	add    BYTE PTR [rax],al
  41b55b:	add    BYTE PTR [rcx],al
  41b55d:	add    BYTE PTR [rax],al
  41b55f:	add    BYTE PTR [rcx],al
  41b561:	add    BYTE PTR [rax],al
  41b563:	add    BYTE PTR [rcx],al
  41b565:	or     al,BYTE PTR [rsi]
  41b567:	add    BYTE PTR [rdx],cl
  41b569:	jb     0x41b571
  41b56b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1b9d1
  41b571:	push   rax
  41b572:	add    al,al
  41b574:	add    DWORD PTR [rdx],ecx
  41b576:	add    eax,0x6d20a05
  41b57b:	add    eax,DWORD PTR [rbx]
  41b57d:	xor    BYTE PTR [rdx],al
  41b57f:	(bad)  
  41b580:	add    DWORD PTR [rax+0x0],edx
  41b583:	add    BYTE PTR [rcx],al
  41b585:	add    al,0x1
  41b587:	add    BYTE PTR [rdx+rax*2],al
  41b58a:	add    BYTE PTR [rax],al
  41b58c:	add    DWORD PTR [rsi],eax
  41b58e:	add    eax,DWORD PTR [rax]
  41b590:	(bad)  
  41b591:	rex.X add sil,BYTE PTR [rax]
  41b594:	add    DWORD PTR [rax+0x0],esp
  41b597:	add    BYTE PTR [rcx],al
  41b599:	add    BYTE PTR [rax],al
  41b59b:	add    BYTE PTR [rcx],al
  41b59d:	add    al,0x1
  41b59f:	add    BYTE PTR [rdx+riz*4],al
  41b5a2:	add    BYTE PTR [rax],al
  41b5a4:	add    DWORD PTR [rax],eax
  41b5a6:	add    BYTE PTR [rax],al
  41b5a8:	add    DWORD PTR [rsi],edx
  41b5aa:	or     DWORD PTR [rax],eax
  41b5ac:	(bad)  
  41b5ad:	mov    BYTE PTR [rsi],al
  41b5af:	add    BYTE PTR [rax],dl
  41b5b1:	js     0x41b5b8
  41b5b3:	add    BYTE PTR [rbx],cl
  41b5b5:	push   0xffffffffe2060004
  41b5ba:	add    dh,BYTE PTR [rax]
  41b5bc:	add    DWORD PTR [rax+0x0],esp
  41b5bf:	add    BYTE PTR [rcx],al
  41b5c1:	add    BYTE PTR [rax],al
  41b5c3:	add    BYTE PTR [rcx],al
  41b5c5:	add    BYTE PTR [rax],al
  41b5c7:	add    BYTE PTR [rcx],al
  41b5c9:	add    BYTE PTR [rax],al
  41b5cb:	add    BYTE PTR [rcx],al
  41b5cd:	(bad)  
  41b5ce:	add    eax,DWORD PTR [rax]
  41b5d0:	(bad)  
  41b5d1:	(bad)  
  41b5d3:	xor    BYTE PTR [rcx],al
  41b5d5:	(bad)  
  41b5d6:	add    BYTE PTR [rax],al
  41b5d8:	add    DWORD PTR [rdi+rax*1],ecx
  41b5db:	add    BYTE PTR [rdx+riz*4],cl
  41b5de:	or     BYTE PTR [rax],dh
  41b5e0:	(bad)  
  41b5e1:	(bad)  
  41b5e2:	(bad)  
  41b5e3:	jo     0x41b5ea
  41b5e5:	push   rax
  41b5e6:	add    al,0xc0
  41b5e8:	add    dl,al
  41b5ea:	add    BYTE PTR [rax],al
  41b5ec:	add    DWORD PTR [rcx],edx
  41b5ee:	or     DWORD PTR [rip+0x30db211],eax        # 0x34f6805
  41b5f4:	or     dh,BYTE PTR [rax]
  41b5f6:	or     DWORD PTR [rax+0x8],esp
  41b5f9:	jo     0x41b602
  41b5fb:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x221b9d2
  41b602:	add    BYTE PTR [rax],al
  41b604:	add    DWORD PTR [rcx+rax*1],eax
  41b607:	add    BYTE PTR [rdx+rax*2],al
  41b60a:	add    BYTE PTR [rax],al
  41b60c:	add    DWORD PTR [rdx],ecx
  41b60e:	(bad)  
  41b60f:	add    BYTE PTR [rdx],cl
  41b611:	xor    al,BYTE PTR [rsi]
  41b613:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1ba79
  41b619:	push   rax
  41b61a:	add    al,al
  41b61c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b624
  41b622:	add    DWORD PTR [rax],esi
  41b624:	add    DWORD PTR [rax],ecx
  41b626:	add    eax,0x4420800
  41b62b:	xor    BYTE PTR [rbx],al
  41b62d:	(bad)  
  41b62e:	add    dh,BYTE PTR [rax+0x1]
  41b631:	push   rax
  41b632:	add    BYTE PTR [rax],al
  41b634:	add    DWORD PTR [rdi],eax
  41b636:	add    al,0x0
  41b638:	(bad)  
  41b639:	xor    al,BYTE PTR [rbx]
  41b63b:	xor    BYTE PTR [rdx],al
  41b63d:	(bad)  
  41b63e:	add    DWORD PTR [rax+0x1],esi
  41b641:	add    eax,0x32050002
  41b646:	add    DWORD PTR [rax],esi
  41b648:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b650
  41b64e:	add    DWORD PTR [rax],esi
  41b650:	add    DWORD PTR [rax],eax
  41b652:	add    BYTE PTR [rax],al
  41b654:	add    DWORD PTR [rax],eax
  41b656:	add    BYTE PTR [rax],al
  41b658:	add    DWORD PTR [rax],eax
  41b65a:	add    BYTE PTR [rax],al
  41b65c:	add    DWORD PTR [rdi],eax
  41b65e:	add    al,0x0
  41b660:	(bad)  
  41b661:	xor    al,BYTE PTR [rbx]
  41b663:	xor    BYTE PTR [rdx],al
  41b665:	(bad)  
  41b666:	add    DWORD PTR [rax+0x1],esi
  41b669:	(bad)  
  41b66a:	add    eax,DWORD PTR [rax]
  41b66c:	(bad)  
  41b66d:	rex.X add sil,BYTE PTR [rax]
  41b670:	add    DWORD PTR [rax+0x0],esp
  41b673:	add    BYTE PTR [rcx],al
  41b675:	add    eax,0x32050002
  41b67a:	add    DWORD PTR [rax],esi
  41b67c:	add    DWORD PTR [rdi],eax
  41b67e:	add    al,0x0
  41b680:	(bad)  
  41b681:	xor    al,BYTE PTR [rbx]
  41b683:	xor    BYTE PTR [rdx],al
  41b685:	(bad)  
  41b686:	add    DWORD PTR [rax+0x1],esi
  41b689:	(bad)  
  41b68a:	add    eax,DWORD PTR [rax]
  41b68c:	(bad)  
  41b68d:	rex.X add sil,BYTE PTR [rax]
  41b690:	add    DWORD PTR [rax+0x0],esp
  41b693:	add    BYTE PTR [rcx],al
  41b695:	(bad)  
  41b696:	add    eax,DWORD PTR [rax]
  41b698:	(bad)  
  41b699:	rex.X add sil,BYTE PTR [rax]
  41b69c:	add    DWORD PTR [rax+0x0],esp
  41b69f:	add    BYTE PTR [rcx],al
  41b6a1:	or     BYTE PTR [rip+0x4420800],al        # 0x483bea7
  41b6a7:	xor    BYTE PTR [rbx],al
  41b6a9:	(bad)  
  41b6aa:	add    dh,BYTE PTR [rax+0x1]
  41b6ad:	push   rax
  41b6ae:	add    BYTE PTR [rax],al
  41b6b0:	add    DWORD PTR [rax],ecx
  41b6b2:	add    eax,0x4820800
  41b6b7:	xor    BYTE PTR [rbx],al
  41b6b9:	(bad)  
  41b6ba:	add    dh,BYTE PTR [rax+0x1]
  41b6bd:	push   rax
  41b6be:	add    BYTE PTR [rax],al
  41b6c0:	add    DWORD PTR [rax],ecx
  41b6c2:	add    eax,0x4a20800
  41b6c7:	xor    BYTE PTR [rbx],al
  41b6c9:	(bad)  
  41b6ca:	add    dh,BYTE PTR [rax+0x1]
  41b6cd:	push   rax
  41b6ce:	add    BYTE PTR [rax],al
  41b6d0:	add    DWORD PTR [rax],edx
  41b6d2:	or     DWORD PTR [rax],eax
  41b6d4:	adc    BYTE PTR [rdx+0x600b300c],al
  41b6da:	or     dh,BYTE PTR [rax+0x9]
  41b6dd:	push   rax
  41b6de:	or     al,al
  41b6e0:	(bad)  
  41b6e1:	rol    BYTE PTR [rax+riz*8],1
  41b6e4:	add    dh,al
  41b6e6:	add    BYTE PTR [rax],al
  41b6e8:	add    DWORD PTR [rax],ecx
  41b6ea:	add    eax,0x4820800
  41b6ef:	xor    BYTE PTR [rbx],al
  41b6f1:	(bad)  
  41b6f2:	add    dh,BYTE PTR [rax+0x1]
  41b6f5:	push   rax
  41b6f6:	add    BYTE PTR [rax],al
  41b6f8:	add    DWORD PTR [rax],eax
  41b6fa:	add    BYTE PTR [rax],al
  41b6fc:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x14eb709
  41b702:	rex.WX add BYTE PTR [rsi],al
  41b705:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1bb6b
  41b70b:	push   rax
  41b70c:	add    al,al
  41b70e:	add    BYTE PTR [rax],al
  41b710:	add    DWORD PTR [rax],ecx
  41b712:	add    eax,0x4620800
  41b717:	xor    BYTE PTR [rbx],al
  41b719:	(bad)  
  41b71a:	add    dh,BYTE PTR [rax+0x1]
  41b71d:	push   rax
  41b71e:	add    BYTE PTR [rax],al
  41b720:	add    DWORD PTR [rcx+rax*1],eax
  41b723:	add    BYTE PTR [rdx+riz*2],al
  41b726:	add    BYTE PTR [rax],al
  41b728:	add    DWORD PTR [rip+0x52050002],eax        # 0x5246b730
  41b72e:	add    DWORD PTR [rax],esi
  41b730:	add    DWORD PTR [rcx+rax*1],eax
  41b733:	add    BYTE PTR [rdx+riz*4],al
  41b736:	add    BYTE PTR [rax],al
  41b738:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b740
  41b73e:	add    DWORD PTR [rax],esi
  41b740:	add    DWORD PTR [rsi],ecx
  41b742:	or     BYTE PTR [rax],al
  41b744:	(bad)  
  41b745:	jb     0x41b751
  41b747:	xor    BYTE PTR [rcx],cl
  41b749:	(bad)  
  41b74a:	or     BYTE PTR [rax+0x7],dh
  41b74d:	push   rax
  41b74e:	(bad)  
  41b74f:	rol    BYTE PTR [rax+rdx*8],0x2
  41b753:	loopne 0x41b756
  41b755:	(bad)  
  41b756:	add    al,0x0
  41b758:	(bad)  
  41b759:	xor    al,BYTE PTR [rbx]
  41b75b:	xor    BYTE PTR [rdx],al
  41b75d:	(bad)  
  41b75e:	add    DWORD PTR [rax+0x1],esi
  41b761:	add    al,0x1
  41b763:	add    BYTE PTR [rdx+riz*2],al
  41b766:	add    BYTE PTR [rax],al
  41b768:	add    DWORD PTR [rip+0x520d0507],ecx        # 0x524ebc75
  41b76e:	or     DWORD PTR [rbx],eax
  41b770:	(bad)  
  41b771:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1bbd7
  41b777:	rol    BYTE PTR [rcx],0x50
  41b77a:	add    BYTE PTR [rax],al
  41b77c:	add    DWORD PTR [rdx],ecx
  41b77e:	(bad)  
  41b77f:	add    BYTE PTR [rdx],cl
  41b781:	xor    al,BYTE PTR [rsi]
  41b783:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1bbe9
  41b789:	push   rax
  41b78a:	add    al,al
  41b78c:	add    DWORD PTR [rsi],eax
  41b78e:	add    eax,DWORD PTR [rax]
  41b790:	(bad)  
  41b791:	ret    0x3002
  41b794:	add    DWORD PTR [rax+0x0],esp
  41b797:	add    BYTE PTR [rcx],al
  41b799:	adc    al,0x8
  41b79b:	test   DWORD PTR [rbx+rax*1],edx
  41b79e:	or     al,0x42
  41b7a0:	or     BYTE PTR [rax],dh
  41b7a2:	(bad)  
  41b7a3:	(bad)  
  41b7a4:	(bad)  
  41b7a5:	jo     0x41b7ac
  41b7a7:	rol    BYTE PTR [rbx],0xd0
  41b7aa:	add    DWORD PTR [rax+0x1],edx
  41b7ad:	(bad)  
  41b7ae:	add    al,0x0
  41b7b0:	(bad)  
  41b7b1:	xor    al,BYTE PTR [rbx]
  41b7b3:	xor    BYTE PTR [rdx],al
  41b7b5:	(bad)  
  41b7b6:	add    DWORD PTR [rax+0x1],esi
  41b7b9:	(bad)  
  41b7ba:	add    eax,DWORD PTR [rax]
  41b7bc:	(bad)  
  41b7bd:	ret    0x3002
  41b7c0:	add    DWORD PTR [rax+0x0],esp
  41b7c3:	add    BYTE PTR [rcx],al
  41b7c5:	(bad)  
  41b7c6:	add    eax,DWORD PTR [rax]
  41b7c8:	(bad)  
  41b7c9:	loop   0x41b7cd
  41b7cb:	xor    BYTE PTR [rcx],al
  41b7cd:	(bad)  
  41b7ce:	add    BYTE PTR [rax],al
  41b7d0:	add    DWORD PTR [rcx],edx
  41b7d2:	or     DWORD PTR [rip+0x30d3211],eax        # 0x34ee9e9
  41b7d8:	or     dh,BYTE PTR [rax]
  41b7da:	or     DWORD PTR [rax+0x8],esp
  41b7dd:	jo     0x41b7e6
  41b7df:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x221bbb6
  41b7e6:	add    BYTE PTR [rax],al
  41b7e8:	add    DWORD PTR [rdi+rax*1],ecx
  41b7eb:	add    BYTE PTR [rdx+rax*8],cl
  41b7ee:	or     BYTE PTR [rax],dh
  41b7f0:	(bad)  
  41b7f1:	(bad)  
  41b7f2:	(bad)  
  41b7f3:	jo     0x41b7fa
  41b7f5:	push   rax
  41b7f6:	add    al,0xc0
  41b7f8:	add    dl,al
  41b7fa:	add    BYTE PTR [rax],al
  41b7fc:	add    DWORD PTR [rbx],edx
  41b7fe:	or     al,BYTE PTR [rax]
  41b800:	adc    eax,DWORD PTR [rcx]
  41b802:	(bad)  
  41b803:	add    BYTE PTR [rax+rsi*1],cl
  41b806:	or     esp,DWORD PTR [rax+0xa]
  41b809:	jo     0x41b814
  41b80b:	push   rax
  41b80c:	or     al,al
  41b80e:	(bad)  
  41b80f:	rol    BYTE PTR [rax+riz*8],1
  41b812:	add    dh,al
  41b814:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b81c
  41b81a:	add    DWORD PTR [rax],esi
  41b81c:	add    DWORD PTR [rsi],eax
  41b81e:	add    eax,DWORD PTR [rax]
  41b820:	(bad)  
  41b821:	rex.X add sil,BYTE PTR [rax]
  41b824:	add    DWORD PTR [rax+0x0],esp
  41b827:	add    BYTE PTR [rcx],al
  41b829:	add    BYTE PTR [rax],al
  41b82b:	add    BYTE PTR [rcx],al
  41b82d:	adc    BYTE PTR [rcx],cl
  41b82f:	add    BYTE PTR [rax],dl
  41b831:	(bad)  
  41b832:	or     al,0x30
  41b834:	or     esp,DWORD PTR [rax+0xa]
  41b837:	jo     0x41b842
  41b839:	push   rax
  41b83a:	or     al,al
  41b83c:	(bad)  
  41b83d:	rol    BYTE PTR [rax+riz*8],1
  41b840:	add    dh,al
  41b842:	add    BYTE PTR [rax],al
  41b844:	add    DWORD PTR [rbx],ebx
  41b846:	or     al,0x0
  41b848:	sbb    ebp,DWORD PTR [rax+0xa]
  41b84b:	add    BYTE PTR [rbx],dl
  41b84d:	add    DWORD PTR [rdi],edx
  41b84f:	add    BYTE PTR [rax+rsi*1],cl
  41b852:	or     esp,DWORD PTR [rax+0xa]
  41b855:	jo     0x41b860
  41b857:	push   rax
  41b858:	or     al,al
  41b85a:	(bad)  
  41b85b:	rol    BYTE PTR [rax+riz*8],1
  41b85e:	add    dh,al
  41b860:	add    DWORD PTR [rsp+rax*1],eax
  41b863:	add    BYTE PTR [rax+rsi*1],al
  41b866:	add    esp,DWORD PTR [rax+0x2]
  41b869:	jo     0x41b86c
  41b86b:	push   rax
  41b86c:	add    DWORD PTR [rax],eax
  41b86e:	add    BYTE PTR [rax],al
  41b870:	add    DWORD PTR [rsi],eax
  41b872:	add    eax,DWORD PTR [rax]
  41b874:	(bad)  
  41b875:	rex.X add sil,BYTE PTR [rax]
  41b878:	add    DWORD PTR [rax+0x0],esp
  41b87b:	add    BYTE PTR [rcx],al
  41b87d:	add    eax,0x32050002
  41b882:	add    DWORD PTR [rax],esi
  41b884:	add    DWORD PTR [rdi],eax
  41b886:	add    al,0x0
  41b888:	(bad)  
  41b889:	xor    al,BYTE PTR [rbx]
  41b88b:	xor    BYTE PTR [rdx],al
  41b88d:	(bad)  
  41b88e:	add    DWORD PTR [rax+0x1],esi
  41b891:	add    eax,0x32050002
  41b896:	add    DWORD PTR [rax],esi
  41b898:	add    DWORD PTR [rax],ecx
  41b89a:	add    eax,0x4420800
  41b89f:	xor    BYTE PTR [rbx],al
  41b8a1:	(bad)  
  41b8a2:	add    dh,BYTE PTR [rax+0x1]
  41b8a5:	push   rax
  41b8a6:	add    BYTE PTR [rax],al
  41b8a8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246b8b0
  41b8ae:	add    DWORD PTR [rax],esi
  41b8b0:	add    DWORD PTR [rsi],ecx
  41b8b2:	or     BYTE PTR [rax],al
  41b8b4:	(bad)  
  41b8b5:	xor    cl,BYTE PTR [rdx]
  41b8b7:	xor    BYTE PTR [rcx],cl
  41b8b9:	(bad)  
  41b8ba:	or     BYTE PTR [rax+0x7],dh
  41b8bd:	push   rax
  41b8be:	(bad)  
  41b8bf:	rol    BYTE PTR [rax+rdx*8],0x2
  41b8c3:	loopne 0x41b8c6
  41b8c5:	or     BYTE PTR [rip+0x4420800],al        # 0x483c0cb
  41b8cb:	xor    BYTE PTR [rbx],al
  41b8cd:	(bad)  
  41b8ce:	add    dh,BYTE PTR [rax+0x1]
  41b8d1:	push   rax
  41b8d2:	add    BYTE PTR [rax],al
  41b8d4:	add    DWORD PTR [rdi+rax*1],ecx
  41b8d7:	add    BYTE PTR [rdx+rax*2],cl
  41b8da:	or     BYTE PTR [rax],dh
  41b8dc:	(bad)  
  41b8dd:	(bad)  
  41b8de:	(bad)  
  41b8df:	jo     0x41b8e6
  41b8e1:	push   rax
  41b8e2:	add    al,0xc0
  41b8e4:	add    dl,al
  41b8e6:	add    BYTE PTR [rax],al
  41b8e8:	add    DWORD PTR [rax],eax
  41b8ea:	add    BYTE PTR [rax],al
  41b8ec:	add    DWORD PTR [rdi],eax
  41b8ee:	add    al,0x0
  41b8f0:	(bad)  
  41b8f1:	xor    al,BYTE PTR [rbx]
  41b8f3:	xor    BYTE PTR [rdx],al
  41b8f5:	(bad)  
  41b8f6:	add    DWORD PTR [rax+0x1],esi
  41b8f9:	(bad)  
  41b8fa:	add    eax,DWORD PTR [rax]
  41b8fc:	(bad)  
  41b8fd:	and    al,BYTE PTR [rdx]
  41b8ff:	xor    BYTE PTR [rcx],al
  41b901:	(bad)  
  41b902:	add    BYTE PTR [rax],al
  41b904:	add    DWORD PTR [rdi],eax
  41b906:	add    al,0x0
  41b908:	(bad)  
  41b909:	xor    al,BYTE PTR [rbx]
  41b90b:	xor    BYTE PTR [rdx],al
  41b90d:	(bad)  
  41b90e:	add    DWORD PTR [rax+0x1],esi
  41b911:	add    BYTE PTR [rax],al
  41b913:	add    BYTE PTR [rcx],al
  41b915:	add    al,0x1
  41b917:	add    BYTE PTR [rdx+riz*4],al
  41b91a:	add    BYTE PTR [rax],al
  41b91c:	add    DWORD PTR [rdi],eax
  41b91e:	add    al,0x0
  41b920:	(bad)  
  41b921:	push   rdx
  41b922:	add    esi,DWORD PTR [rax]
  41b924:	add    ah,BYTE PTR [rax+0x1]
  41b927:	jo     0x41b92a
  41b929:	(bad)  
  41b92a:	or     BYTE PTR [rax],al
  41b92c:	(bad)  
  41b92d:	push   rdx
  41b92e:	or     dh,BYTE PTR [rax]
  41b930:	or     DWORD PTR [rax+0x8],esp
  41b933:	jo     0x41b93c
  41b935:	push   rax
  41b936:	(bad)  
  41b937:	rol    BYTE PTR [rax+rdx*8],0x2
  41b93b:	loopne 0x41b93e
  41b93d:	add    BYTE PTR [rax],al
  41b93f:	add    BYTE PTR [rcx],al
  41b941:	add    BYTE PTR [rax],al
  41b943:	add    BYTE PTR [rcx],al
  41b945:	add    BYTE PTR [rax],al
  41b947:	add    BYTE PTR [rcx],al
  41b949:	add    BYTE PTR [rax],al
  41b94b:	add    BYTE PTR [rcx],al
  41b94d:	add    eax,0x32050002
  41b952:	add    DWORD PTR [rax],esi
  41b954:	add    DWORD PTR [rcx+rax*1],eax
  41b957:	add    BYTE PTR [rdx+rax*2],al
  41b95a:	add    BYTE PTR [rax],al
  41b95c:	add    DWORD PTR [rax],eax
  41b95e:	add    BYTE PTR [rax],al
  41b960:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000041c000 <.bss>:
	...

Disassembly of section .idata:

000000000041f000 <.idata>:
  41f000:	js     0x41eff2
  41f002:	add    DWORD PTR [rax],eax
	...
  41f00c:	rex.WR inc BYTE PTR [rcx]
  41f00f:	add    BYTE PTR [rax],bl
  41f011:	hlt    
  41f012:	add    DWORD PTR [rax],eax
  41f014:	test   al,0xf0
  41f016:	add    DWORD PTR [rax],eax
	...
  41f020:	push   0x480001fe
  41f025:	hlt    
  41f026:	add    DWORD PTR [rax],eax
  41f028:	enter  0x1f0,0x0
	...
  41f034:	adc    al,0xff
  41f036:	add    DWORD PTR [rax],eax
  41f038:	push   0x80001f4
  41f03d:	repnz add DWORD PTR [rax],eax
	...
  41f048:	and    BYTE PTR [rax],al
  41f04a:	add    al,BYTE PTR [rax]
  41f04c:	test   al,0xf5
  41f04e:	add    DWORD PTR [rax],eax
  41f050:	or     ah,dh
  41f052:	add    DWORD PTR [rax],eax
	...
  41f05c:	xor    BYTE PTR [rax],al
  41f05e:	add    al,BYTE PTR [rax]
  41f060:	test   al,0xf7
  41f062:	add    DWORD PTR [rax],eax
	...
  41f078:	mov    eax,0x1f7
  41f07d:	add    BYTE PTR [rax],al
  41f07f:	add    ah,dl
  41f081:	test   DWORD PTR [rcx],0x0
  41f087:	add    al,ch
  41f089:	test   DWORD PTR [rcx],0x0
  41f08f:	add    ah,bh
  41f091:	test   DWORD PTR [rcx],0x0
  41f097:	add    BYTE PTR [rax],dl
  41f099:	clc    
  41f09a:	add    DWORD PTR [rax],eax
	...
  41f0a8:	sub    al,bh
  41f0aa:	add    DWORD PTR [rax],eax
  41f0ac:	add    BYTE PTR [rax],al
  41f0ae:	add    BYTE PTR [rax],al
  41f0b0:	xor    al,0xf8
  41f0b2:	add    DWORD PTR [rax],eax
  41f0b4:	add    BYTE PTR [rax],al
  41f0b6:	add    BYTE PTR [rax],al
  41f0b8:	rex.W clc 
  41f0ba:	add    DWORD PTR [rax],eax
	...
  41f0c8:	pop    rax
  41f0c9:	clc    
  41f0ca:	add    DWORD PTR [rax],eax
  41f0cc:	add    BYTE PTR [rax],al
  41f0ce:	add    BYTE PTR [rax],al
  41f0d0:	data16 clc 
  41f0d2:	add    DWORD PTR [rax],eax
  41f0d4:	add    BYTE PTR [rax],al
  41f0d6:	add    BYTE PTR [rax],al
  41f0d8:	jbe    0x41f0d2
  41f0da:	add    DWORD PTR [rax],eax
  41f0dc:	add    BYTE PTR [rax],al
  41f0de:	add    BYTE PTR [rax],al
  41f0e0:	mov    ?,eax
  41f0e2:	add    DWORD PTR [rax],eax
  41f0e4:	add    BYTE PTR [rax],al
  41f0e6:	add    BYTE PTR [rax],al
  41f0e8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41f0e9:	clc    
  41f0ea:	add    DWORD PTR [rax],eax
  41f0ec:	add    BYTE PTR [rax],al
  41f0ee:	add    BYTE PTR [rax],al
  41f0f0:	mov    esp,0x1f8
  41f0f5:	add    BYTE PTR [rax],al
  41f0f7:	add    dh,al
  41f0f9:	clc    
  41f0fa:	add    DWORD PTR [rax],eax
  41f0fc:	add    BYTE PTR [rax],al
  41f0fe:	add    BYTE PTR [rax],al
  41f100:	(bad)  
  41f102:	add    DWORD PTR [rax],eax
  41f104:	add    BYTE PTR [rax],al
  41f106:	add    BYTE PTR [rax],al
  41f108:	lock clc 
  41f10a:	add    DWORD PTR [rax],eax
  41f10c:	add    BYTE PTR [rax],al
  41f10e:	add    BYTE PTR [rax],al
  41f110:	(bad)  
  41f111:	stc    
  41f112:	add    DWORD PTR [rax],eax
  41f114:	add    BYTE PTR [rax],al
  41f116:	add    BYTE PTR [rax],al
  41f118:	adc    al,0xf9
  41f11a:	add    DWORD PTR [rax],eax
  41f11c:	add    BYTE PTR [rax],al
  41f11e:	add    BYTE PTR [rax],al
  41f120:	and    al,0xf9
  41f122:	add    DWORD PTR [rax],eax
  41f124:	add    BYTE PTR [rax],al
  41f126:	add    BYTE PTR [rax],al
  41f128:	ss stc 
  41f12a:	add    DWORD PTR [rax],eax
  41f12c:	add    BYTE PTR [rax],al
  41f12e:	add    BYTE PTR [rax],al
  41f130:	rex.WR stc 
  41f132:	add    DWORD PTR [rax],eax
  41f134:	add    BYTE PTR [rax],al
  41f136:	add    BYTE PTR [rax],al
  41f138:	(bad)  
  41f139:	stc    
  41f13a:	add    DWORD PTR [rax],eax
  41f13c:	add    BYTE PTR [rax],al
  41f13e:	add    BYTE PTR [rax],al
  41f140:	jb     0x41f13b
  41f142:	add    DWORD PTR [rax],eax
  41f144:	add    BYTE PTR [rax],al
  41f146:	add    BYTE PTR [rax],al
  41f148:	test   cl,bh
  41f14a:	add    DWORD PTR [rax],eax
  41f14c:	add    BYTE PTR [rax],al
  41f14e:	add    BYTE PTR [rax],al
  41f150:	sahf   
  41f151:	stc    
  41f152:	add    DWORD PTR [rax],eax
  41f154:	add    BYTE PTR [rax],al
  41f156:	add    BYTE PTR [rax],al
  41f158:	mov    al,0xf9
  41f15a:	add    DWORD PTR [rax],eax
  41f15c:	add    BYTE PTR [rax],al
  41f15e:	add    BYTE PTR [rax],al
  41f160:	sar    cl,0x1
  41f163:	add    BYTE PTR [rax],al
  41f165:	add    BYTE PTR [rax],al
  41f167:	add    ah,bl
  41f169:	stc    
  41f16a:	add    DWORD PTR [rax],eax
  41f16c:	add    BYTE PTR [rax],al
  41f16e:	add    BYTE PTR [rax],al
  41f170:	lock stc 
  41f172:	add    DWORD PTR [rax],eax
  41f174:	add    BYTE PTR [rax],al
  41f176:	add    BYTE PTR [rax],al
  41f178:	or     dl,bh
  41f17a:	add    DWORD PTR [rax],eax
  41f17c:	add    BYTE PTR [rax],al
  41f17e:	add    BYTE PTR [rax],al
  41f180:	(bad)  
  41f181:	cli    
  41f182:	add    DWORD PTR [rax],eax
  41f184:	add    BYTE PTR [rax],al
  41f186:	add    BYTE PTR [rax],al
  41f188:	cmp    dl,bh
  41f18a:	add    DWORD PTR [rax],eax
  41f18c:	add    BYTE PTR [rax],al
  41f18e:	add    BYTE PTR [rax],al
  41f190:	rex.WRX cli 
  41f192:	add    DWORD PTR [rax],eax
  41f194:	add    BYTE PTR [rax],al
  41f196:	add    BYTE PTR [rax],al
  41f198:	(bad)  
  41f199:	cli    
  41f19a:	add    DWORD PTR [rax],eax
  41f19c:	add    BYTE PTR [rax],al
  41f19e:	add    BYTE PTR [rax],al
  41f1a0:	jl     0x41f19c
  41f1a2:	add    DWORD PTR [rax],eax
  41f1a4:	add    BYTE PTR [rax],al
  41f1a6:	add    BYTE PTR [rax],al
  41f1a8:	nop
  41f1a9:	cli    
  41f1aa:	add    DWORD PTR [rax],eax
  41f1ac:	add    BYTE PTR [rax],al
  41f1ae:	add    BYTE PTR [rax],al
  41f1b0:	pushf  
  41f1b1:	cli    
  41f1b2:	add    DWORD PTR [rax],eax
  41f1b4:	add    BYTE PTR [rax],al
  41f1b6:	add    BYTE PTR [rax],al
  41f1b8:	lods   al,BYTE PTR ds:[rsi]
  41f1b9:	cli    
  41f1ba:	add    DWORD PTR [rax],eax
  41f1bc:	add    BYTE PTR [rax],al
  41f1be:	add    BYTE PTR [rax],al
  41f1c0:	retf   0x1fa
  41f1c3:	add    BYTE PTR [rax],al
  41f1c5:	add    BYTE PTR [rax],al
  41f1c7:	add    dl,dl
  41f1c9:	cli    
  41f1ca:	add    DWORD PTR [rax],eax
  41f1cc:	add    BYTE PTR [rax],al
  41f1ce:	add    BYTE PTR [rax],al
  41f1d0:	out    0xfa,al
  41f1d2:	add    DWORD PTR [rax],eax
  41f1d4:	add    BYTE PTR [rax],al
  41f1d6:	add    BYTE PTR [rax],al
  41f1d8:	hlt    
  41f1d9:	cli    
  41f1da:	add    DWORD PTR [rax],eax
  41f1dc:	add    BYTE PTR [rax],al
  41f1de:	add    BYTE PTR [rax],al
  41f1e0:	adc    bl,bh
  41f1e2:	add    DWORD PTR [rax],eax
  41f1e4:	add    BYTE PTR [rax],al
  41f1e6:	add    BYTE PTR [rax],al
  41f1e8:	and    bh,bl
  41f1ea:	add    DWORD PTR [rax],eax
  41f1ec:	add    BYTE PTR [rax],al
  41f1ee:	add    BYTE PTR [rax],al
  41f1f0:	xor    bh,bl
  41f1f2:	add    DWORD PTR [rax],eax
  41f1f4:	add    BYTE PTR [rax],al
  41f1f6:	add    BYTE PTR [rax],al
  41f1f8:	rex.W sti 
  41f1fa:	add    DWORD PTR [rax],eax
	...
  41f208:	pop    rsi
  41f209:	sti    
  41f20a:	add    DWORD PTR [rax],eax
  41f20c:	add    BYTE PTR [rax],al
  41f20e:	add    BYTE PTR [rax],al
  41f210:	jbe    0x41f20d
  41f212:	add    DWORD PTR [rax],eax
  41f214:	add    BYTE PTR [rax],al
  41f216:	add    BYTE PTR [rax],al
  41f218:	mov    ebx,?
  41f21a:	add    DWORD PTR [rax],eax
  41f21c:	add    BYTE PTR [rax],al
  41f21e:	add    BYTE PTR [rax],al
  41f220:	(bad)  
  41f221:	sti    
  41f222:	add    DWORD PTR [rax],eax
  41f224:	add    BYTE PTR [rax],al
  41f226:	add    BYTE PTR [rax],al
  41f228:	stos   BYTE PTR es:[rdi],al
  41f229:	sti    
  41f22a:	add    DWORD PTR [rax],eax
  41f22c:	add    BYTE PTR [rax],al
  41f22e:	add    BYTE PTR [rax],al
  41f230:	mov    dh,0xfb
  41f232:	add    DWORD PTR [rax],eax
  41f234:	add    BYTE PTR [rax],al
  41f236:	add    BYTE PTR [rax],al
  41f238:	(bad)  
  41f239:	sti    
  41f23a:	add    DWORD PTR [rax],eax
  41f23c:	add    BYTE PTR [rax],al
  41f23e:	add    BYTE PTR [rax],al
  41f240:	(bad)  
  41f241:	sti    
  41f242:	add    DWORD PTR [rax],eax
  41f244:	add    BYTE PTR [rax],al
  41f246:	add    BYTE PTR [rax],al
  41f248:	in     al,0xfb
  41f24a:	add    DWORD PTR [rax],eax
  41f24c:	add    BYTE PTR [rax],al
  41f24e:	add    BYTE PTR [rax],al
  41f250:	idiv   bl
  41f252:	add    DWORD PTR [rax],eax
  41f254:	add    BYTE PTR [rax],al
  41f256:	add    BYTE PTR [rax],al
  41f258:	or     bh,ah
  41f25a:	add    DWORD PTR [rax],eax
  41f25c:	add    BYTE PTR [rax],al
  41f25e:	add    BYTE PTR [rax],al
  41f260:	adc    al,0xfc
  41f262:	add    DWORD PTR [rax],eax
  41f264:	add    BYTE PTR [rax],al
  41f266:	add    BYTE PTR [rax],al
  41f268:	and    bh,ah
  41f26a:	add    DWORD PTR [rax],eax
  41f26c:	add    BYTE PTR [rax],al
  41f26e:	add    BYTE PTR [rax],al
  41f270:	sub    al,0xfc
  41f272:	add    DWORD PTR [rax],eax
  41f274:	add    BYTE PTR [rax],al
  41f276:	add    BYTE PTR [rax],al
  41f278:	ss cld 
  41f27a:	add    DWORD PTR [rax],eax
  41f27c:	add    BYTE PTR [rax],al
  41f27e:	add    BYTE PTR [rax],al
  41f280:	ds cld 
  41f282:	add    DWORD PTR [rax],eax
  41f284:	add    BYTE PTR [rax],al
  41f286:	add    BYTE PTR [rax],al
  41f288:	rex.W cld 
  41f28a:	add    DWORD PTR [rax],eax
  41f28c:	add    BYTE PTR [rax],al
  41f28e:	add    BYTE PTR [rax],al
  41f290:	pop    rdx
  41f291:	cld    
  41f292:	add    DWORD PTR [rax],eax
  41f294:	add    BYTE PTR [rax],al
  41f296:	add    BYTE PTR [rax],al
  41f298:	data16 cld 
  41f29a:	add    DWORD PTR [rax],eax
  41f29c:	add    BYTE PTR [rax],al
  41f29e:	add    BYTE PTR [rax],al
  41f2a0:	outs   dx,BYTE PTR ds:[rsi]
  41f2a1:	cld    
  41f2a2:	add    DWORD PTR [rax],eax
  41f2a4:	add    BYTE PTR [rax],al
  41f2a6:	add    BYTE PTR [rax],al
  41f2a8:	js     0x41f2a6
  41f2aa:	add    DWORD PTR [rax],eax
  41f2ac:	add    BYTE PTR [rax],al
  41f2ae:	add    BYTE PTR [rax],al
  41f2b0:	xchg   ah,bh
  41f2b2:	add    DWORD PTR [rax],eax
  41f2b4:	add    BYTE PTR [rax],al
  41f2b6:	add    BYTE PTR [rax],al
  41f2b8:	nop
  41f2b9:	cld    
  41f2ba:	add    DWORD PTR [rax],eax
  41f2bc:	add    BYTE PTR [rax],al
  41f2be:	add    BYTE PTR [rax],al
  41f2c0:	cwde   
  41f2c1:	cld    
  41f2c2:	add    DWORD PTR [rax],eax
  41f2c4:	add    BYTE PTR [rax],al
  41f2c6:	add    BYTE PTR [rax],al
  41f2c8:	movabs ds:0xaa000000000001fc,al
  41f2d1:	cld    
  41f2d2:	add    DWORD PTR [rax],eax
  41f2d4:	add    BYTE PTR [rax],al
  41f2d6:	add    BYTE PTR [rax],al
  41f2d8:	mov    ah,0xfc
  41f2da:	add    DWORD PTR [rax],eax
  41f2dc:	add    BYTE PTR [rax],al
  41f2de:	add    BYTE PTR [rax],al
  41f2e0:	mov    esi,0x1fc
  41f2e5:	add    BYTE PTR [rax],al
  41f2e7:	add    al,cl
  41f2e9:	cld    
  41f2ea:	add    DWORD PTR [rax],eax
  41f2ec:	add    BYTE PTR [rax],al
  41f2ee:	add    BYTE PTR [rax],al
  41f2f0:	sar    ah,cl
  41f2f2:	add    DWORD PTR [rax],eax
  41f2f4:	add    BYTE PTR [rax],al
  41f2f6:	add    BYTE PTR [rax],al
  41f2f8:	(bad)  
  41f2fa:	add    DWORD PTR [rax],eax
  41f2fc:	add    BYTE PTR [rax],al
  41f2fe:	add    BYTE PTR [rax],al
  41f300:	loop   0x41f2fe
  41f302:	add    DWORD PTR [rax],eax
  41f304:	add    BYTE PTR [rax],al
  41f306:	add    BYTE PTR [rax],al
  41f308:	(bad)  
  41f309:	cld    
  41f30a:	add    DWORD PTR [rax],eax
  41f30c:	add    BYTE PTR [rax],al
  41f30e:	add    BYTE PTR [rax],al
  41f310:	idiv   ah
  41f312:	add    DWORD PTR [rax],eax
  41f314:	add    BYTE PTR [rax],al
  41f316:	add    BYTE PTR [rax],al
  41f318:	add    ch,bh
  41f31a:	add    DWORD PTR [rax],eax
  41f31c:	add    BYTE PTR [rax],al
  41f31e:	add    BYTE PTR [rax],al
  41f320:	or     bh,ch
  41f322:	add    DWORD PTR [rax],eax
  41f324:	add    BYTE PTR [rax],al
  41f326:	add    BYTE PTR [rax],al
  41f328:	adc    al,0xfd
  41f32a:	add    DWORD PTR [rax],eax
  41f32c:	add    BYTE PTR [rax],al
  41f32e:	add    BYTE PTR [rax],al
  41f330:	(bad)  
  41f331:	std    
  41f332:	add    DWORD PTR [rax],eax
  41f334:	add    BYTE PTR [rax],al
  41f336:	add    BYTE PTR [rax],al
  41f338:	sub    bh,ch
  41f33a:	add    DWORD PTR [rax],eax
  41f33c:	add    BYTE PTR [rax],al
  41f33e:	add    BYTE PTR [rax],al
  41f340:	cmp    ch,bh
  41f342:	add    DWORD PTR [rax],eax
  41f344:	add    BYTE PTR [rax],al
  41f346:	add    BYTE PTR [rax],al
  41f348:	rex.X std 
  41f34a:	add    DWORD PTR [rax],eax
  41f34c:	add    BYTE PTR [rax],al
  41f34e:	add    BYTE PTR [rax],al
  41f350:	rex.WR std 
  41f352:	add    DWORD PTR [rax],eax
  41f354:	add    BYTE PTR [rax],al
  41f356:	add    BYTE PTR [rax],al
  41f358:	push   rsi
  41f359:	std    
  41f35a:	add    DWORD PTR [rax],eax
  41f35c:	add    BYTE PTR [rax],al
  41f35e:	add    BYTE PTR [rax],al
  41f360:	(bad)  
  41f361:	std    
  41f362:	add    DWORD PTR [rax],eax
  41f364:	add    BYTE PTR [rax],al
  41f366:	add    BYTE PTR [rax],al
  41f368:	push   0xfffffffffffffffd
  41f36a:	add    DWORD PTR [rax],eax
  41f36c:	add    BYTE PTR [rax],al
  41f36e:	add    BYTE PTR [rax],al
  41f370:	jb     0x41f36f
  41f372:	add    DWORD PTR [rax],eax
  41f374:	add    BYTE PTR [rax],al
  41f376:	add    BYTE PTR [rax],al
  41f378:	jp     0x41f377
  41f37a:	add    DWORD PTR [rax],eax
  41f37c:	add    BYTE PTR [rax],al
  41f37e:	add    BYTE PTR [rax],al
  41f380:	test   ch,bh
  41f382:	add    DWORD PTR [rax],eax
  41f384:	add    BYTE PTR [rax],al
  41f386:	add    BYTE PTR [rax],al
  41f388:	nop
  41f389:	std    
  41f38a:	add    DWORD PTR [rax],eax
  41f38c:	add    BYTE PTR [rax],al
  41f38e:	add    BYTE PTR [rax],al
  41f390:	(bad)  
  41f391:	std    
  41f392:	add    DWORD PTR [rax],eax
  41f394:	add    BYTE PTR [rax],al
  41f396:	add    BYTE PTR [rax],al
  41f398:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41f399:	std    
  41f39a:	add    DWORD PTR [rax],eax
  41f39c:	add    BYTE PTR [rax],al
  41f39e:	add    BYTE PTR [rax],al
  41f3a0:	scas   al,BYTE PTR es:[rdi]
  41f3a1:	std    
  41f3a2:	add    DWORD PTR [rax],eax
  41f3a4:	add    BYTE PTR [rax],al
  41f3a6:	add    BYTE PTR [rax],al
  41f3a8:	mov    eax,0x1fd
  41f3ad:	add    BYTE PTR [rax],al
  41f3af:	add    ah,al
  41f3b1:	std    
  41f3b2:	add    DWORD PTR [rax],eax
  41f3b4:	add    BYTE PTR [rax],al
  41f3b6:	add    BYTE PTR [rax],al
  41f3b8:	(bad)  
  41f3b9:	std    
  41f3ba:	add    DWORD PTR [rax],eax
  41f3bc:	add    BYTE PTR [rax],al
  41f3be:	add    BYTE PTR [rax],al
  41f3c0:	fdivr  st,st(5)
  41f3c2:	add    DWORD PTR [rax],eax
  41f3c4:	add    BYTE PTR [rax],al
  41f3c6:	add    BYTE PTR [rax],al
  41f3c8:	loop   0x41f3c7
  41f3ca:	add    DWORD PTR [rax],eax
  41f3cc:	add    BYTE PTR [rax],al
  41f3ce:	add    BYTE PTR [rax],al
  41f3d0:	in     al,dx
  41f3d1:	std    
  41f3d2:	add    DWORD PTR [rax],eax
  41f3d4:	add    BYTE PTR [rax],al
  41f3d6:	add    BYTE PTR [rax],al
  41f3d8:	idiv   ch
  41f3da:	add    DWORD PTR [rax],eax
  41f3dc:	add    BYTE PTR [rax],al
  41f3de:	add    BYTE PTR [rax],al
  41f3e0:	add    bh,dh
  41f3e2:	add    DWORD PTR [rax],eax
  41f3e4:	add    BYTE PTR [rax],al
  41f3e6:	add    BYTE PTR [rax],al
  41f3e8:	or     al,0xfe
  41f3ea:	add    DWORD PTR [rax],eax
  41f3ec:	add    BYTE PTR [rax],al
  41f3ee:	add    BYTE PTR [rax],al
  41f3f0:	(bad)  
  41f3f1:	inc    BYTE PTR [rcx]
  41f3f3:	add    BYTE PTR [rax],al
  41f3f5:	add    BYTE PTR [rax],al
  41f3f7:	add    BYTE PTR [rax],ah
  41f3f9:	inc    BYTE PTR [rcx]
	...
  41f407:	add    BYTE PTR [rdx],ch
  41f409:	inc    BYTE PTR [rcx]
	...
  41f417:	add    BYTE PTR [rax+0x1f7],bh
  41f41d:	add    BYTE PTR [rax],al
  41f41f:	add    ah,dl
  41f421:	test   DWORD PTR [rcx],0x0
  41f427:	add    al,ch
  41f429:	test   DWORD PTR [rcx],0x0
  41f42f:	add    ah,bh
  41f431:	test   DWORD PTR [rcx],0x0
  41f437:	add    BYTE PTR [rax],dl
  41f439:	clc    
  41f43a:	add    DWORD PTR [rax],eax
	...
  41f448:	sub    al,bh
  41f44a:	add    DWORD PTR [rax],eax
  41f44c:	add    BYTE PTR [rax],al
  41f44e:	add    BYTE PTR [rax],al
  41f450:	xor    al,0xf8
  41f452:	add    DWORD PTR [rax],eax
  41f454:	add    BYTE PTR [rax],al
  41f456:	add    BYTE PTR [rax],al
  41f458:	rex.W clc 
  41f45a:	add    DWORD PTR [rax],eax
	...
  41f468:	pop    rax
  41f469:	clc    
  41f46a:	add    DWORD PTR [rax],eax
  41f46c:	add    BYTE PTR [rax],al
  41f46e:	add    BYTE PTR [rax],al
  41f470:	data16 clc 
  41f472:	add    DWORD PTR [rax],eax
  41f474:	add    BYTE PTR [rax],al
  41f476:	add    BYTE PTR [rax],al
  41f478:	jbe    0x41f472
  41f47a:	add    DWORD PTR [rax],eax
  41f47c:	add    BYTE PTR [rax],al
  41f47e:	add    BYTE PTR [rax],al
  41f480:	mov    ?,eax
  41f482:	add    DWORD PTR [rax],eax
  41f484:	add    BYTE PTR [rax],al
  41f486:	add    BYTE PTR [rax],al
  41f488:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41f489:	clc    
  41f48a:	add    DWORD PTR [rax],eax
  41f48c:	add    BYTE PTR [rax],al
  41f48e:	add    BYTE PTR [rax],al
  41f490:	mov    esp,0x1f8
  41f495:	add    BYTE PTR [rax],al
  41f497:	add    dh,al
  41f499:	clc    
  41f49a:	add    DWORD PTR [rax],eax
  41f49c:	add    BYTE PTR [rax],al
  41f49e:	add    BYTE PTR [rax],al
  41f4a0:	(bad)  
  41f4a2:	add    DWORD PTR [rax],eax
  41f4a4:	add    BYTE PTR [rax],al
  41f4a6:	add    BYTE PTR [rax],al
  41f4a8:	lock clc 
  41f4aa:	add    DWORD PTR [rax],eax
  41f4ac:	add    BYTE PTR [rax],al
  41f4ae:	add    BYTE PTR [rax],al
  41f4b0:	(bad)  
  41f4b1:	stc    
  41f4b2:	add    DWORD PTR [rax],eax
  41f4b4:	add    BYTE PTR [rax],al
  41f4b6:	add    BYTE PTR [rax],al
  41f4b8:	adc    al,0xf9
  41f4ba:	add    DWORD PTR [rax],eax
  41f4bc:	add    BYTE PTR [rax],al
  41f4be:	add    BYTE PTR [rax],al
  41f4c0:	and    al,0xf9
  41f4c2:	add    DWORD PTR [rax],eax
  41f4c4:	add    BYTE PTR [rax],al
  41f4c6:	add    BYTE PTR [rax],al
  41f4c8:	ss stc 
  41f4ca:	add    DWORD PTR [rax],eax
  41f4cc:	add    BYTE PTR [rax],al
  41f4ce:	add    BYTE PTR [rax],al
  41f4d0:	rex.WR stc 
  41f4d2:	add    DWORD PTR [rax],eax
  41f4d4:	add    BYTE PTR [rax],al
  41f4d6:	add    BYTE PTR [rax],al
  41f4d8:	(bad)  
  41f4d9:	stc    
  41f4da:	add    DWORD PTR [rax],eax
  41f4dc:	add    BYTE PTR [rax],al
  41f4de:	add    BYTE PTR [rax],al
  41f4e0:	jb     0x41f4db
  41f4e2:	add    DWORD PTR [rax],eax
  41f4e4:	add    BYTE PTR [rax],al
  41f4e6:	add    BYTE PTR [rax],al
  41f4e8:	test   cl,bh
  41f4ea:	add    DWORD PTR [rax],eax
  41f4ec:	add    BYTE PTR [rax],al
  41f4ee:	add    BYTE PTR [rax],al
  41f4f0:	sahf   
  41f4f1:	stc    
  41f4f2:	add    DWORD PTR [rax],eax
  41f4f4:	add    BYTE PTR [rax],al
  41f4f6:	add    BYTE PTR [rax],al
  41f4f8:	mov    al,0xf9
  41f4fa:	add    DWORD PTR [rax],eax
  41f4fc:	add    BYTE PTR [rax],al
  41f4fe:	add    BYTE PTR [rax],al
  41f500:	sar    cl,0x1
  41f503:	add    BYTE PTR [rax],al
  41f505:	add    BYTE PTR [rax],al
  41f507:	add    ah,bl
  41f509:	stc    
  41f50a:	add    DWORD PTR [rax],eax
  41f50c:	add    BYTE PTR [rax],al
  41f50e:	add    BYTE PTR [rax],al
  41f510:	lock stc 
  41f512:	add    DWORD PTR [rax],eax
  41f514:	add    BYTE PTR [rax],al
  41f516:	add    BYTE PTR [rax],al
  41f518:	or     dl,bh
  41f51a:	add    DWORD PTR [rax],eax
  41f51c:	add    BYTE PTR [rax],al
  41f51e:	add    BYTE PTR [rax],al
  41f520:	(bad)  
  41f521:	cli    
  41f522:	add    DWORD PTR [rax],eax
  41f524:	add    BYTE PTR [rax],al
  41f526:	add    BYTE PTR [rax],al
  41f528:	cmp    dl,bh
  41f52a:	add    DWORD PTR [rax],eax
  41f52c:	add    BYTE PTR [rax],al
  41f52e:	add    BYTE PTR [rax],al
  41f530:	rex.WRX cli 
  41f532:	add    DWORD PTR [rax],eax
  41f534:	add    BYTE PTR [rax],al
  41f536:	add    BYTE PTR [rax],al
  41f538:	(bad)  
  41f539:	cli    
  41f53a:	add    DWORD PTR [rax],eax
  41f53c:	add    BYTE PTR [rax],al
  41f53e:	add    BYTE PTR [rax],al
  41f540:	jl     0x41f53c
  41f542:	add    DWORD PTR [rax],eax
  41f544:	add    BYTE PTR [rax],al
  41f546:	add    BYTE PTR [rax],al
  41f548:	nop
  41f549:	cli    
  41f54a:	add    DWORD PTR [rax],eax
  41f54c:	add    BYTE PTR [rax],al
  41f54e:	add    BYTE PTR [rax],al
  41f550:	pushf  
  41f551:	cli    
  41f552:	add    DWORD PTR [rax],eax
  41f554:	add    BYTE PTR [rax],al
  41f556:	add    BYTE PTR [rax],al
  41f558:	lods   al,BYTE PTR ds:[rsi]
  41f559:	cli    
  41f55a:	add    DWORD PTR [rax],eax
  41f55c:	add    BYTE PTR [rax],al
  41f55e:	add    BYTE PTR [rax],al
  41f560:	retf   0x1fa
  41f563:	add    BYTE PTR [rax],al
  41f565:	add    BYTE PTR [rax],al
  41f567:	add    dl,dl
  41f569:	cli    
  41f56a:	add    DWORD PTR [rax],eax
  41f56c:	add    BYTE PTR [rax],al
  41f56e:	add    BYTE PTR [rax],al
  41f570:	out    0xfa,al
  41f572:	add    DWORD PTR [rax],eax
  41f574:	add    BYTE PTR [rax],al
  41f576:	add    BYTE PTR [rax],al
  41f578:	hlt    
  41f579:	cli    
  41f57a:	add    DWORD PTR [rax],eax
  41f57c:	add    BYTE PTR [rax],al
  41f57e:	add    BYTE PTR [rax],al
  41f580:	adc    bl,bh
  41f582:	add    DWORD PTR [rax],eax
  41f584:	add    BYTE PTR [rax],al
  41f586:	add    BYTE PTR [rax],al
  41f588:	and    bh,bl
  41f58a:	add    DWORD PTR [rax],eax
  41f58c:	add    BYTE PTR [rax],al
  41f58e:	add    BYTE PTR [rax],al
  41f590:	xor    bh,bl
  41f592:	add    DWORD PTR [rax],eax
  41f594:	add    BYTE PTR [rax],al
  41f596:	add    BYTE PTR [rax],al
  41f598:	rex.W sti 
  41f59a:	add    DWORD PTR [rax],eax
	...
  41f5a8:	pop    rsi
  41f5a9:	sti    
  41f5aa:	add    DWORD PTR [rax],eax
  41f5ac:	add    BYTE PTR [rax],al
  41f5ae:	add    BYTE PTR [rax],al
  41f5b0:	jbe    0x41f5ad
  41f5b2:	add    DWORD PTR [rax],eax
  41f5b4:	add    BYTE PTR [rax],al
  41f5b6:	add    BYTE PTR [rax],al
  41f5b8:	mov    ebx,?
  41f5ba:	add    DWORD PTR [rax],eax
  41f5bc:	add    BYTE PTR [rax],al
  41f5be:	add    BYTE PTR [rax],al
  41f5c0:	(bad)  
  41f5c1:	sti    
  41f5c2:	add    DWORD PTR [rax],eax
  41f5c4:	add    BYTE PTR [rax],al
  41f5c6:	add    BYTE PTR [rax],al
  41f5c8:	stos   BYTE PTR es:[rdi],al
  41f5c9:	sti    
  41f5ca:	add    DWORD PTR [rax],eax
  41f5cc:	add    BYTE PTR [rax],al
  41f5ce:	add    BYTE PTR [rax],al
  41f5d0:	mov    dh,0xfb
  41f5d2:	add    DWORD PTR [rax],eax
  41f5d4:	add    BYTE PTR [rax],al
  41f5d6:	add    BYTE PTR [rax],al
  41f5d8:	(bad)  
  41f5d9:	sti    
  41f5da:	add    DWORD PTR [rax],eax
  41f5dc:	add    BYTE PTR [rax],al
  41f5de:	add    BYTE PTR [rax],al
  41f5e0:	(bad)  
  41f5e1:	sti    
  41f5e2:	add    DWORD PTR [rax],eax
  41f5e4:	add    BYTE PTR [rax],al
  41f5e6:	add    BYTE PTR [rax],al
  41f5e8:	in     al,0xfb
  41f5ea:	add    DWORD PTR [rax],eax
  41f5ec:	add    BYTE PTR [rax],al
  41f5ee:	add    BYTE PTR [rax],al
  41f5f0:	idiv   bl
  41f5f2:	add    DWORD PTR [rax],eax
  41f5f4:	add    BYTE PTR [rax],al
  41f5f6:	add    BYTE PTR [rax],al
  41f5f8:	or     bh,ah
  41f5fa:	add    DWORD PTR [rax],eax
  41f5fc:	add    BYTE PTR [rax],al
  41f5fe:	add    BYTE PTR [rax],al
  41f600:	adc    al,0xfc
  41f602:	add    DWORD PTR [rax],eax
  41f604:	add    BYTE PTR [rax],al
  41f606:	add    BYTE PTR [rax],al
  41f608:	and    bh,ah
  41f60a:	add    DWORD PTR [rax],eax
  41f60c:	add    BYTE PTR [rax],al
  41f60e:	add    BYTE PTR [rax],al
  41f610:	sub    al,0xfc
  41f612:	add    DWORD PTR [rax],eax
  41f614:	add    BYTE PTR [rax],al
  41f616:	add    BYTE PTR [rax],al
  41f618:	ss cld 
  41f61a:	add    DWORD PTR [rax],eax
  41f61c:	add    BYTE PTR [rax],al
  41f61e:	add    BYTE PTR [rax],al
  41f620:	ds cld 
  41f622:	add    DWORD PTR [rax],eax
  41f624:	add    BYTE PTR [rax],al
  41f626:	add    BYTE PTR [rax],al
  41f628:	rex.W cld 
  41f62a:	add    DWORD PTR [rax],eax
  41f62c:	add    BYTE PTR [rax],al
  41f62e:	add    BYTE PTR [rax],al
  41f630:	pop    rdx
  41f631:	cld    
  41f632:	add    DWORD PTR [rax],eax
  41f634:	add    BYTE PTR [rax],al
  41f636:	add    BYTE PTR [rax],al
  41f638:	data16 cld 
  41f63a:	add    DWORD PTR [rax],eax
  41f63c:	add    BYTE PTR [rax],al
  41f63e:	add    BYTE PTR [rax],al
  41f640:	outs   dx,BYTE PTR ds:[rsi]
  41f641:	cld    
  41f642:	add    DWORD PTR [rax],eax
  41f644:	add    BYTE PTR [rax],al
  41f646:	add    BYTE PTR [rax],al
  41f648:	js     0x41f646
  41f64a:	add    DWORD PTR [rax],eax
  41f64c:	add    BYTE PTR [rax],al
  41f64e:	add    BYTE PTR [rax],al
  41f650:	xchg   ah,bh
  41f652:	add    DWORD PTR [rax],eax
  41f654:	add    BYTE PTR [rax],al
  41f656:	add    BYTE PTR [rax],al
  41f658:	nop
  41f659:	cld    
  41f65a:	add    DWORD PTR [rax],eax
  41f65c:	add    BYTE PTR [rax],al
  41f65e:	add    BYTE PTR [rax],al
  41f660:	cwde   
  41f661:	cld    
  41f662:	add    DWORD PTR [rax],eax
  41f664:	add    BYTE PTR [rax],al
  41f666:	add    BYTE PTR [rax],al
  41f668:	movabs ds:0xaa000000000001fc,al
  41f671:	cld    
  41f672:	add    DWORD PTR [rax],eax
  41f674:	add    BYTE PTR [rax],al
  41f676:	add    BYTE PTR [rax],al
  41f678:	mov    ah,0xfc
  41f67a:	add    DWORD PTR [rax],eax
  41f67c:	add    BYTE PTR [rax],al
  41f67e:	add    BYTE PTR [rax],al
  41f680:	mov    esi,0x1fc
  41f685:	add    BYTE PTR [rax],al
  41f687:	add    al,cl
  41f689:	cld    
  41f68a:	add    DWORD PTR [rax],eax
  41f68c:	add    BYTE PTR [rax],al
  41f68e:	add    BYTE PTR [rax],al
  41f690:	sar    ah,cl
  41f692:	add    DWORD PTR [rax],eax
  41f694:	add    BYTE PTR [rax],al
  41f696:	add    BYTE PTR [rax],al
  41f698:	(bad)  
  41f69a:	add    DWORD PTR [rax],eax
  41f69c:	add    BYTE PTR [rax],al
  41f69e:	add    BYTE PTR [rax],al
  41f6a0:	loop   0x41f69e
  41f6a2:	add    DWORD PTR [rax],eax
  41f6a4:	add    BYTE PTR [rax],al
  41f6a6:	add    BYTE PTR [rax],al
  41f6a8:	(bad)  
  41f6a9:	cld    
  41f6aa:	add    DWORD PTR [rax],eax
  41f6ac:	add    BYTE PTR [rax],al
  41f6ae:	add    BYTE PTR [rax],al
  41f6b0:	idiv   ah
  41f6b2:	add    DWORD PTR [rax],eax
  41f6b4:	add    BYTE PTR [rax],al
  41f6b6:	add    BYTE PTR [rax],al
  41f6b8:	add    ch,bh
  41f6ba:	add    DWORD PTR [rax],eax
  41f6bc:	add    BYTE PTR [rax],al
  41f6be:	add    BYTE PTR [rax],al
  41f6c0:	or     bh,ch
  41f6c2:	add    DWORD PTR [rax],eax
  41f6c4:	add    BYTE PTR [rax],al
  41f6c6:	add    BYTE PTR [rax],al
  41f6c8:	adc    al,0xfd
  41f6ca:	add    DWORD PTR [rax],eax
  41f6cc:	add    BYTE PTR [rax],al
  41f6ce:	add    BYTE PTR [rax],al
  41f6d0:	(bad)  
  41f6d1:	std    
  41f6d2:	add    DWORD PTR [rax],eax
  41f6d4:	add    BYTE PTR [rax],al
  41f6d6:	add    BYTE PTR [rax],al
  41f6d8:	sub    bh,ch
  41f6da:	add    DWORD PTR [rax],eax
  41f6dc:	add    BYTE PTR [rax],al
  41f6de:	add    BYTE PTR [rax],al
  41f6e0:	cmp    ch,bh
  41f6e2:	add    DWORD PTR [rax],eax
  41f6e4:	add    BYTE PTR [rax],al
  41f6e6:	add    BYTE PTR [rax],al
  41f6e8:	rex.X std 
  41f6ea:	add    DWORD PTR [rax],eax
  41f6ec:	add    BYTE PTR [rax],al
  41f6ee:	add    BYTE PTR [rax],al
  41f6f0:	rex.WR std 
  41f6f2:	add    DWORD PTR [rax],eax
  41f6f4:	add    BYTE PTR [rax],al
  41f6f6:	add    BYTE PTR [rax],al
  41f6f8:	push   rsi
  41f6f9:	std    
  41f6fa:	add    DWORD PTR [rax],eax
  41f6fc:	add    BYTE PTR [rax],al
  41f6fe:	add    BYTE PTR [rax],al
  41f700:	(bad)  
  41f701:	std    
  41f702:	add    DWORD PTR [rax],eax
  41f704:	add    BYTE PTR [rax],al
  41f706:	add    BYTE PTR [rax],al
  41f708:	push   0xfffffffffffffffd
  41f70a:	add    DWORD PTR [rax],eax
  41f70c:	add    BYTE PTR [rax],al
  41f70e:	add    BYTE PTR [rax],al
  41f710:	jb     0x41f70f
  41f712:	add    DWORD PTR [rax],eax
  41f714:	add    BYTE PTR [rax],al
  41f716:	add    BYTE PTR [rax],al
  41f718:	jp     0x41f717
  41f71a:	add    DWORD PTR [rax],eax
  41f71c:	add    BYTE PTR [rax],al
  41f71e:	add    BYTE PTR [rax],al
  41f720:	test   ch,bh
  41f722:	add    DWORD PTR [rax],eax
  41f724:	add    BYTE PTR [rax],al
  41f726:	add    BYTE PTR [rax],al
  41f728:	nop
  41f729:	std    
  41f72a:	add    DWORD PTR [rax],eax
  41f72c:	add    BYTE PTR [rax],al
  41f72e:	add    BYTE PTR [rax],al
  41f730:	(bad)  
  41f731:	std    
  41f732:	add    DWORD PTR [rax],eax
  41f734:	add    BYTE PTR [rax],al
  41f736:	add    BYTE PTR [rax],al
  41f738:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41f739:	std    
  41f73a:	add    DWORD PTR [rax],eax
  41f73c:	add    BYTE PTR [rax],al
  41f73e:	add    BYTE PTR [rax],al
  41f740:	scas   al,BYTE PTR es:[rdi]
  41f741:	std    
  41f742:	add    DWORD PTR [rax],eax
  41f744:	add    BYTE PTR [rax],al
  41f746:	add    BYTE PTR [rax],al
  41f748:	mov    eax,0x1fd
  41f74d:	add    BYTE PTR [rax],al
  41f74f:	add    ah,al
  41f751:	std    
  41f752:	add    DWORD PTR [rax],eax
  41f754:	add    BYTE PTR [rax],al
  41f756:	add    BYTE PTR [rax],al
  41f758:	(bad)  
  41f759:	std    
  41f75a:	add    DWORD PTR [rax],eax
  41f75c:	add    BYTE PTR [rax],al
  41f75e:	add    BYTE PTR [rax],al
  41f760:	fdivr  st,st(5)
  41f762:	add    DWORD PTR [rax],eax
  41f764:	add    BYTE PTR [rax],al
  41f766:	add    BYTE PTR [rax],al
  41f768:	loop   0x41f767
  41f76a:	add    DWORD PTR [rax],eax
  41f76c:	add    BYTE PTR [rax],al
  41f76e:	add    BYTE PTR [rax],al
  41f770:	in     al,dx
  41f771:	std    
  41f772:	add    DWORD PTR [rax],eax
  41f774:	add    BYTE PTR [rax],al
  41f776:	add    BYTE PTR [rax],al
  41f778:	idiv   ch
  41f77a:	add    DWORD PTR [rax],eax
  41f77c:	add    BYTE PTR [rax],al
  41f77e:	add    BYTE PTR [rax],al
  41f780:	add    bh,dh
  41f782:	add    DWORD PTR [rax],eax
  41f784:	add    BYTE PTR [rax],al
  41f786:	add    BYTE PTR [rax],al
  41f788:	or     al,0xfe
  41f78a:	add    DWORD PTR [rax],eax
  41f78c:	add    BYTE PTR [rax],al
  41f78e:	add    BYTE PTR [rax],al
  41f790:	(bad)  
  41f791:	inc    BYTE PTR [rcx]
  41f793:	add    BYTE PTR [rax],al
  41f795:	add    BYTE PTR [rax],al
  41f797:	add    BYTE PTR [rax],ah
  41f799:	inc    BYTE PTR [rcx]
	...
  41f7a7:	add    BYTE PTR [rdx],ch
  41f7a9:	inc    BYTE PTR [rcx]
	...
  41f7b7:	add    BYTE PTR [rsi],bl
  41f7b9:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  41f7bd:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  41f7c4:	outs   dx,BYTE PTR ds:[rsi]
  41f7c5:	fs je  0x41f82d
  41f7c8:	js     0x41f83e
  41f7ca:	outs   dx,DWORD PTR fs:[rsi]
  41f7cc:	ins    DWORD PTR es:[rdi],dx
  41f7cd:	(bad)  
  41f7ce:	imul   ebp,DWORD PTR [rsi+0x0],0x22000000
  41f7d5:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  41f7d9:	imul   ebp,DWORD PTR [rsi+0x74],0x67645f6c
  41f7e0:	gs je  0x41f857
  41f7e3:	gs js  0x41f85a
  41f7e6:	add    BYTE PTR [rax],al
  41f7e8:	add    BYTE PTR es:[rcx+rbp*2+0x62],ch
  41f7ed:	imul   ebp,DWORD PTR [rsi+0x74],0x65675f6c
  41f7f4:	je     0x41f86a
  41f7f6:	gs js  0x41f86d
  41f7f9:	add    BYTE PTR [rax],al
  41f7fb:	add    BYTE PTR [rbx+0x0],al
  41f7fe:	ins    BYTE PTR es:[rdi],dx
  41f7ff:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  41f806:	jae    0x41f878
  41f808:	jb     0x41f873
  41f80a:	outs   dx,BYTE PTR ds:[rsi]
  41f80b:	je     0x41f873
  41f80d:	add    BYTE PTR [rax],al
  41f80f:	add    BYTE PTR [rbp+0x0],al
  41f812:	ins    BYTE PTR es:[rdi],dx
  41f813:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  41f81a:	je     0x41f881
  41f81c:	js     0x41f892
  41f81e:	outs   dx,DWORD PTR fs:[rsi]
  41f820:	ins    DWORD PTR es:[rdi],dx
  41f821:	(bad)  
  41f822:	imul   ebp,DWORD PTR [rsi+0x0],0x5000000
  41f829:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  41f82d:	imul   esp,DWORD PTR [rbx+0x6f],0x766e
  41f834:	(bad)  
  41f835:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  41f839:	imul   esp,DWORD PTR [rbx+0x6f],0x635f766e
  41f840:	ins    BYTE PTR es:[rdi],dx
  41f841:	outs   dx,DWORD PTR ds:[rsi]
  41f842:	jae    0x41f8a9
  41f844:	add    BYTE PTR [rax],al
  41f846:	add    BYTE PTR [rax],al
  41f848:	(bad)  
  41f849:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  41f84d:	imul   esp,DWORD PTR [rbx+0x6f],0x6f5f766e
  41f854:	jo     0x41f8bb
  41f856:	outs   dx,BYTE PTR ds:[rsi]
  41f857:	add    BYTE PTR [rbp+0x0],dl
  41f85a:	rex.XB ins BYTE PTR es:[rdi],dx
  41f85c:	outs   dx,DWORD PTR ds:[rsi]
  41f85d:	jae    0x41f8c4
  41f85f:	rex.W (bad) 
  41f861:	outs   dx,BYTE PTR ds:[rsi]
  41f862:	fs ins BYTE PTR es:[rdi],dx
  41f864:	add    BYTE PTR gs:[rsi+0x65724300],al
  41f86b:	(bad)  
  41f86c:	je     0x41f8d3
  41f86e:	rex.RB jbe 0x41f8d6
  41f871:	outs   dx,BYTE PTR ds:[rsi]
  41f872:	je     0x41f8b5
  41f874:	add    BYTE PTR [rax],al
  41f876:	fadd   DWORD PTR [rax]
  41f878:	rex.R
  41f879:	gs ins BYTE PTR es:[rdi],dx
  41f87b:	gs je  0x41f8e3
  41f87e:	rex.XB jb 0x41f8ea
  41f881:	je     0x41f8ec
  41f883:	movsxd esp,DWORD PTR [rcx+0x6c]
  41f886:	push   rbx
  41f887:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41f88c:	outs   dx,BYTE PTR ds:[rsi]
  41f88d:	add    al,bh
  41f88f:	add    BYTE PTR [rbp+0x6e],al
  41f892:	je     0x41f8f9
  41f894:	jb     0x41f8d9
  41f896:	jb     0x41f901
  41f898:	je     0x41f903
  41f89a:	movsxd esp,DWORD PTR [rcx+0x6c]
  41f89d:	push   rbx
  41f89e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41f8a3:	outs   dx,BYTE PTR ds:[rsi]
  41f8a4:	add    BYTE PTR [rax],al
  41f8a6:	sbb    BYTE PTR [rcx],al
  41f8a8:	rex.RB outs dx,BYTE PTR ds:[rsi]
  41f8aa:	jne    0x41f919
  41f8ac:	push   rbx
  41f8ad:	jns    0x41f922
  41f8af:	je     0x41f916
  41f8b1:	ins    DWORD PTR es:[rdi],dx
  41f8b2:	rex.WR outs dx,DWORD PTR ds:[rsi]
  41f8b4:	movsxd esp,DWORD PTR [rcx+0x6c]
  41f8b7:	gs jae 0x41f8fb
  41f8ba:	add    BYTE PTR [rax],al
  41f8bc:	je     0x41f8bf
  41f8be:	rex.RXB
  41f8bf:	gs je  0x41f903
  41f8c2:	rex.XB push r8
  41f8c4:	add    BYTE PTR [rax],al
  41f8c6:	int    0x1
  41f8c8:	rex.RXB
  41f8c9:	gs je  0x41f90f
  41f8cc:	jne    0x41f940
  41f8ce:	jb     0x41f935
  41f8d0:	outs   dx,BYTE PTR ds:[rsi]
  41f8d1:	je     0x41f923
  41f8d3:	jb     0x41f944
  41f8d5:	movsxd esp,DWORD PTR [rbp+0x73]
  41f8d8:	jae    0x41f8da
  41f8da:	(bad)  
  41f8db:	add    DWORD PTR [rdi+0x65],eax
  41f8de:	je     0x41f923
  41f8e0:	jne    0x41f954
  41f8e2:	jb     0x41f949
  41f8e4:	outs   dx,BYTE PTR ds:[rsi]
  41f8e5:	je     0x41f937
  41f8e7:	jb     0x41f958
  41f8e9:	movsxd esp,DWORD PTR [rbp+0x73]
  41f8ec:	jae    0x41f937
  41f8ee:	fs add dl,dl
  41f8f1:	add    DWORD PTR [rdi+0x65],eax
  41f8f4:	je     0x41f939
  41f8f6:	jne    0x41f96a
  41f8f8:	jb     0x41f95f
  41f8fa:	outs   dx,BYTE PTR ds:[rsi]
  41f8fb:	je     0x41f951
  41f8fd:	push   0x64616572
  41f902:	rex.WB
  41f903:	add    BYTE PTR fs:[rax],al
  41f906:	add    al,BYTE PTR [rdx]
  41f908:	rex.RXB
  41f909:	gs je  0x41f952
  41f90c:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
  41f914:	adc    BYTE PTR [rdx],al
  41f916:	rex.RXB
  41f917:	gs je  0x41f966
  41f91a:	(bad)  
  41f91b:	jae    0x41f991
  41f91d:	rex.RB jb 0x41f992
  41f920:	outs   dx,DWORD PTR ds:[rsi]
  41f921:	jb     0x41f923
  41f923:	add    BYTE PTR [rbx],dl
  41f925:	add    al,BYTE PTR [rdi+0x65]
  41f928:	je     0x41f976
  41f92a:	outs   dx,DWORD PTR ds:[rsi]
  41f92b:	movsxd esp,DWORD PTR [rcx+0x6c]
  41f92e:	rex.WB outs dx,BYTE PTR gs:[rsi]
  41f931:	outs   dx,WORD PTR ds:[rsi]
  41f933:	add    BYTE PTR [r8],al
  41f936:	and    eax,DWORD PTR [rdx]
  41f938:	rex.RXB
  41f939:	gs je  0x41f989
  41f93c:	outs   dx,DWORD PTR ds:[rsi]
  41f93d:	fs jne 0x41f9ac
  41f940:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
  41f94a:	add    BYTE PTR [rax],al
  41f94c:	(bad)  
  41f94d:	add    al,BYTE PTR [rdi+0x65]
  41f950:	je     0x41f99f
  41f952:	outs   dx,DWORD PTR ds:[rsi]
  41f953:	fs jne 0x41f9c2
  41f956:	gs rex.W (bad) 
  41f959:	outs   dx,BYTE PTR ds:[rsi]
  41f95a:	fs ins BYTE PTR es:[rdi],dx
  41f95c:	gs push rdi
  41f95e:	add    BYTE PTR [rax],al
  41f960:	push   rsi
  41f961:	add    al,BYTE PTR [rdi+0x65]
  41f964:	je     0x41f9b6
  41f966:	jb     0x41f9d7
  41f968:	movsxd eax,DWORD PTR [rcx+0x64]
  41f96b:	fs jb  0x41f9d3
  41f96e:	jae    0x41f9e3
  41f970:	add    BYTE PTR [rax],al
  41f972:	jae    0x41f976
  41f974:	rex.RXB
  41f975:	gs je  0x41f9cb
  41f978:	je     0x41f9db
  41f97a:	jb     0x41f9f0
  41f97c:	jne    0x41f9ee
  41f97e:	rex.WB outs dx,BYTE PTR ds:[rsi]
  41f980:	outs   dx,WORD PTR ds:[rsi]
  41f982:	add    BYTE PTR [r10+0x74654702],cl
  41f989:	push   rbx
  41f98a:	jns    0x41f9ff
  41f98c:	je     0x41f9f3
  41f98e:	ins    DWORD PTR es:[rdi],dx
  41f98f:	push   rsp
  41f990:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  41f997:	ins    BYTE PTR es:[rdi],dx
  41f998:	gs push rsp
  41f99a:	imul   ebp,DWORD PTR [rbp+0x65],0x47029e00
  41f9a1:	gs je  0x41f9f8
  41f9a4:	push   0x64616572
  41f9a9:	rex.WR outs dx,DWORD PTR ds:[rsi]
  41f9ab:	movsxd esp,DWORD PTR [rcx+0x6c]
  41f9ae:	add    BYTE PTR gs:[rbp+0x74654702],ah
  41f9b5:	push   rsp
  41f9b6:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  41f9bd:	je     0x41f9bf
  41f9bf:	add    cl,bh
  41f9c1:	add    cl,BYTE PTR [rcx+0x6e]
  41f9c4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  41f9cc:	rex.XB jb 0x41fa38
  41f9cf:	je     0x41fa3a
  41f9d1:	movsxd esp,DWORD PTR [rcx+0x6c]
  41f9d4:	push   rbx
  41f9d5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41f9da:	outs   dx,BYTE PTR ds:[rsi]
  41f9db:	add    BYTE PTR [rax],dl
  41f9dd:	add    ecx,DWORD PTR [rcx+0x73]
  41f9e0:	rex.R
  41f9e1:	rex.X
  41f9e2:	rex.XB push r11
  41f9e4:	rex.WR
  41f9e5:	gs (bad) 
  41f9e7:	fs rex.X jns 0x41fa5f
  41f9eb:	gs rex.RB js 0x41f9ef
  41f9ef:	add    BYTE PTR [rbx+0x3],cl
  41f9f2:	rex.WR
  41f9f3:	gs (bad) 
  41f9f5:	jbe    0x41fa5c
  41f9f7:	rex.XB jb 0x41fa63
  41f9fa:	je     0x41fa65
  41f9fc:	movsxd esp,DWORD PTR [rcx+0x6c]
  41f9ff:	push   rbx
  41fa00:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41fa05:	outs   dx,BYTE PTR ds:[rsi]
  41fa06:	add    BYTE PTR [rax],al
  41fa08:	jp     0x41fa0d
  41fa0a:	rex.WRB jne 0x41fa79
  41fa0d:	je     0x41fa78
  41fa0f:	rex.X jns 0x41fa86
  41fa12:	gs push rsp
  41fa14:	outs   dx,DWORD PTR ds:[rsi]
  41fa15:	push   rdi
  41fa16:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
  41fa1e:	mov    ebx,0x65755103
  41fa23:	jb     0x41fa9e
  41fa25:	push   rax
  41fa26:	gs jb  0x41fa8f
  41fa29:	outs   dx,DWORD PTR ds:[rsi]
  41fa2a:	jb     0x41fa99
  41fa2c:	(bad)  
  41fa2d:	outs   dx,BYTE PTR ds:[rsi]
  41fa2e:	movsxd esp,DWORD PTR [rbp+0x43]
  41fa31:	outs   dx,DWORD PTR ds:[rsi]
  41fa32:	jne    0x41faa2
  41fa34:	je     0x41fa9b
  41fa36:	jb     0x41fa38
  41fa38:	add    DWORD PTR [rdx+rdx*2],eax
  41fa3b:	je     0x41faa9
  41fa3d:	rex.B
  41fa3e:	fs fs rex.RX jne 0x41fab1
  41fa43:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  41fa47:	outs   dx,BYTE PTR ds:[rsi]
  41fa48:	push   rsp
  41fa49:	(bad)  
  41fa4a:	(bad)  
  41fa4b:	ins    BYTE PTR es:[rdi],dx
  41fa4c:	add    BYTE PTR gs:[rdx],al
  41fa4f:	add    al,0x52
  41fa51:	je     0x41fabf
  41fa53:	rex.XB (bad) 
  41fa55:	jo     0x41facb
  41fa57:	jne    0x41facb
  41fa59:	rex.XB outs dx,DWORD PTR gs:[rsi]
  41fa5c:	outs   dx,BYTE PTR ds:[rsi]
  41fa5d:	je     0x41fac4
  41fa5f:	js     0x41fad5
  41fa61:	add    BYTE PTR [rcx],cl
  41fa63:	add    al,0x52
  41fa65:	je     0x41fad3
  41fa67:	rex.WR outs dx,DWORD PTR ds:[rsi]
  41fa69:	outs   dx,DWORD PTR ds:[rsi]
  41fa6a:	imul   esi,DWORD PTR [rbp+0x70],0x46
  41fa6e:	jne    0x41fade
  41fa70:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  41fa74:	outs   dx,BYTE PTR ds:[rsi]
  41fa75:	rex.RB outs dx,BYTE PTR ds:[rsi]
  41fa77:	je     0x41faeb
  41fa79:	jns    0x41fa7b
  41fa7b:	add    BYTE PTR [rax],dl
  41fa7d:	add    al,0x52
  41fa7f:	je     0x41faed
  41fa81:	push   rsi
  41fa82:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  41fa89:	outs   dx,BYTE PTR ds:[rsi]
  41fa8a:	ja     0x41faf5
  41fa8c:	outs   dx,BYTE PTR ds:[rsi]
  41fa8d:	add    BYTE PTR fs:[rax],al
  41fa90:	push   rbx
  41fa91:	add    al,0x53
  41fa93:	gs je  0x41fadb
  41fa96:	jbe    0x41fafd
  41fa98:	outs   dx,BYTE PTR ds:[rsi]
  41fa99:	je     0x41fa9b
  41fa9b:	add    BYTE PTR [rsp+rax*1+0x53],ch
  41fa9f:	gs je  0x41faee
  41faa2:	(bad)  
  41faa3:	jae    0x41fb19
  41faa5:	rex.RB jb 0x41fb1a
  41faa8:	outs   dx,DWORD PTR ds:[rsi]
  41faa9:	jb     0x41faab
  41faab:	add    BYTE PTR [rdi+0x74655304],bl
  41fab1:	push   rbp
  41fab2:	outs   dx,BYTE PTR ds:[rsi]
  41fab3:	push   0x6c646e61
  41fab8:	gs fs rex.RB js 0x41fb20
  41fabd:	gs jo  0x41fb34
  41fac0:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  41fac7:	gs jb  0x41faca
  41faca:	lods   al,BYTE PTR ds:[rsi]
  41facb:	add    al,0x53
  41facd:	ins    BYTE PTR es:[rdi],dx
  41face:	gs gs jo 0x41fad2
  41fad2:	mov    edx,0x72655404
  41fad7:	ins    DWORD PTR es:[rdi],dx
  41fad8:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  41fadf:	outs   dx,DWORD PTR ds:[rsi]
  41fae0:	movsxd esp,DWORD PTR [rbp+0x73]
  41fae3:	jae    0x41fae5
  41fae5:	add    cl,al
  41fae7:	add    al,0x54
  41fae9:	ins    BYTE PTR es:[rdi],dx
  41faea:	jae    0x41fb33
  41faec:	gs je  0x41fb45
  41faef:	(bad)  
  41faf0:	ins    BYTE PTR es:[rdi],dx
  41faf1:	jne    0x41fb58
  41faf3:	add    dh,cl
  41faf5:	add    al,0x55
  41faf7:	outs   dx,BYTE PTR ds:[rsi]
  41faf8:	push   0x6c646e61
  41fafd:	gs fs rex.RB js 0x41fb65
  41fb02:	gs jo  0x41fb79
  41fb05:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  41fb0c:	gs jb  0x41fb0f
  41fb0f:	add    ah,ch
  41fb11:	add    al,0x56
  41fb13:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  41fb1a:	jb     0x41fb8b
  41fb1c:	je     0x41fb83
  41fb1e:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  41fb22:	out    dx,al
  41fb23:	add    al,0x56
  41fb25:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  41fb2c:	jne    0x41fb93
  41fb2e:	jb     0x41fba9
  41fb30:	add    BYTE PTR [rax],al
  41fb32:	test   BYTE PTR [rdi+rdx*2],0x61
  41fb36:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
  41fb3e:	ins    BYTE PTR es:[edi],dx
  41fb40:	gs rex.WRXB (bad) 
  41fb43:	push   0x65
  41fb45:	movsxd esi,DWORD PTR [rax+rax*1+0xe]
  41fb49:	add    eax,0x65646957
  41fb4e:	rex.XB push 0x6f547261
  41fb54:	rex.WRB jne 0x41fbc3
  41fb57:	je     0x41fbc2
  41fb59:	rex.X jns 0x41fbd0
  41fb5c:	add    BYTE PTR gs:[rdi],dh
  41fb5f:	add    BYTE PTR [rdi+0x5f],bl
  41fb62:	rex.XB pop r15
  41fb64:	jae    0x41fbd6
  41fb66:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  41fb6a:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  41fb71:	ins    BYTE PTR es:[rdi],dx
  41fb72:	gs jb  0x41fb75
  41fb75:	add    BYTE PTR [rdi],bh
  41fb77:	add    BYTE PTR [rdi+0x5f],bl
  41fb7a:	pop    rdi
  41fb7b:	ins    BYTE PTR es:[rdi],dx
  41fb7c:	movsxd ebx,DWORD PTR [rdi+0x63]
  41fb7f:	outs   dx,DWORD PTR ds:[rsi]
  41fb80:	fs gs jo 0x41fbe5
  41fb84:	addr32 gs pop rdi
  41fb87:	data16 jne 0x41fbf8
  41fb8a:	movsxd eax,DWORD PTR [rax]
  41fb8c:	rex.WRX add BYTE PTR [rdi+0x5f],r11b
  41fb90:	fs ins BYTE PTR es:[rdi],dx
  41fb92:	ins    BYTE PTR es:[rdi],dx
  41fb93:	outs   dx,DWORD PTR ds:[rsi]
  41fb94:	outs   dx,BYTE PTR ds:[rsi]
  41fb95:	gs js  0x41fc01
  41fb98:	je     0x41fb9a
  41fb9a:	push   rcx
  41fb9b:	add    BYTE PTR [rdi+0x5f],bl
  41fb9e:	addr32 gs je 0x41fc0f
  41fba2:	(bad)  
  41fba3:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  41fbaa:	push   rdx
  41fbab:	add    BYTE PTR [rdi+0x5f],bl
  41fbae:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  41fbb5:	add    BYTE PTR [rbx+0x0],dl
  41fbb8:	pop    rdi
  41fbb9:	pop    rdi
  41fbba:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  41fbc1:	movsxd eax,DWORD PTR [rax]
  41fbc3:	add    BYTE PTR [rdx+0x0],bl
  41fbc6:	pop    rdi
  41fbc7:	pop    rdi
  41fbc8:	ins    BYTE PTR es:[rdi],dx
  41fbc9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41fbcc:	jbe    0x41fc2d
  41fbce:	imul   ebp,DWORD PTR [rsi+0x69],0x5b000074
  41fbd5:	add    BYTE PTR [rdi+0x5f],bl
  41fbd8:	ins    DWORD PTR es:[rdi],dx
  41fbd9:	(bad)  
  41fbda:	pop    rdi
  41fbdb:	movsxd esi,DWORD PTR [rbp+0x72]
  41fbde:	pop    rdi
  41fbdf:	ins    DWORD PTR es:[rdi],dx
  41fbe0:	(bad)  
  41fbe1:	js     0x41fbe3
  41fbe3:	add    BYTE PTR [rax+0x0],ah
  41fbe6:	pop    rdi
  41fbe7:	pop    rdi
  41fbe8:	jae    0x41fc4f
  41fbea:	je     0x41fc4b
  41fbec:	(bad)  
  41fbed:	jo     0x41fc5f
  41fbef:	pop    rdi
  41fbf0:	je     0x41fc6b
  41fbf2:	jo     0x41fc59
  41fbf4:	add    BYTE PTR [rax],al
  41fbf6:	(bad)  
  41fbf7:	add    BYTE PTR [rdi+0x5f],bl
  41fbfa:	jae    0x41fc61
  41fbfc:	je     0x41fc73
  41fbfe:	jae    0x41fc65
  41fc00:	jb     0x41fc6f
  41fc02:	(bad)  
  41fc03:	je     0x41fc6d
  41fc05:	gs jb  0x41fc7a
  41fc08:	add    BYTE PTR [rax],al
  41fc0a:	jno    0x41fc0c
  41fc0c:	pop    rdi
  41fc0d:	(bad)  
  41fc0e:	movsxd ebp,DWORD PTR [rbp+0x64]
  41fc11:	ins    BYTE PTR es:[rdi],dx
  41fc12:	outs   dx,BYTE PTR ds:[rsi]
  41fc13:	add    BYTE PTR [rax+0x0],bh
  41fc16:	pop    rdi
  41fc17:	(bad)  
  41fc18:	ins    DWORD PTR es:[rdi],dx
  41fc19:	jae    0x41fc82
  41fc1b:	pop    rdi
  41fc1c:	gs js  0x41fc88
  41fc1f:	je     0x41fc21
  41fc21:	add    BYTE PTR [rdx+0x65635f00],cl
  41fc27:	js     0x41fc92
  41fc29:	je     0x41fc2b
  41fc2b:	add    BYTE PTR [rdx+0x72655f00],bh
  41fc31:	jb     0x41fca1
  41fc33:	outs   dx,DWORD PTR ds:[rsi]
  41fc34:	add    BYTE PTR [rax],al
  41fc36:	ret    
  41fc37:	add    BYTE PTR [rdi+0x65],bl
  41fc3a:	js     0x41fca5
  41fc3c:	je     0x41fc3e
  41fc3e:	fiadd  DWORD PTR [rax]
  41fc40:	pop    rdi
  41fc41:	ins    WORD PTR es:[rdi],dx
  41fc43:	outs   dx,DWORD PTR ds:[rsi]
  41fc44:	fs add BYTE PTR gs:[rax],al
  41fc48:	cli    
  41fc49:	add    BYTE PTR [rdi+0x67],bl
  41fc4c:	gs je  0x41fcae
  41fc4f:	outs   dx,DWORD PTR ds:[rsi]
  41fc50:	jae    0x41fcb8
  41fc52:	push   0x6c646e61
  41fc57:	add    BYTE PTR gs:[rax],al
  41fc5a:	sbb    al,BYTE PTR [rcx]
  41fc5c:	pop    rdi
  41fc5d:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  41fc64:	ins    DWORD PTR es:[rdi],dx
  41fc65:	add    BYTE PTR [rax+0x6f6c5f01],al
  41fc6b:	movsxd ebp,DWORD PTR [rbx+0x0]
  41fc6e:	and    eax,0x6e6f5f02
  41fc73:	gs js  0x41fcdf
  41fc76:	je     0x41fc78
  41fc78:	movsxd eax,DWORD PTR [rdx]
  41fc7a:	pop    rdi
  41fc7b:	jae    0x41fceb
  41fc7d:	ja     0x41fcef
  41fc7f:	jb     0x41fcea
  41fc81:	outs   dx,BYTE PTR ds:[rsi]
  41fc82:	je     0x41fcea
  41fc84:	add    BYTE PTR [rax],al
  41fc86:	(bad)
  41fc8a:	outs   dx,BYTE PTR ds:[rsi]
  41fc8b:	ins    BYTE PTR es:[rdi],dx
  41fc8c:	outs   dx,DWORD PTR ds:[rsi]
  41fc8d:	movsxd ebp,DWORD PTR [rbx+0x0]
  41fc90:	jg     0x41fc95
  41fc92:	(bad)  
  41fc93:	(bad)  
  41fc94:	outs   dx,DWORD PTR ds:[rsi]
  41fc95:	jb     0x41fd0b
  41fc97:	add    BYTE PTR [rax+0x6c616303],dl
  41fc9d:	ins    BYTE PTR es:[rdi],dx
  41fc9e:	outs   dx,DWORD PTR ds:[rsi]
  41fc9f:	movsxd eax,DWORD PTR [rax]
  41fca1:	add    BYTE PTR [rbp+0x69786503],bl
  41fca7:	je     0x41fca9
  41fca9:	add    BYTE PTR [rcx+0x6c636603],ah
  41fcaf:	outs   dx,DWORD PTR ds:[rsi]
  41fcb0:	jae    0x41fd17
  41fcb2:	add    BYTE PTR [rax],al
  41fcb4:	movabs ds:0x726f7272656603,eax
  41fcbd:	add    BYTE PTR [rbx+rax*1+0x756c6666],ah
  41fcc4:	jae    0x41fd2e
  41fcc6:	add    BYTE PTR [rax],al
  41fcc8:	mov    al,0x3
  41fcca:	data16 jo 0x41fd3f
  41fccd:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  41fcd4:	data16 jo 0x41fd4c
  41fcd7:	je     0x41fd3c
  41fcd9:	add    BYTE PTR [rbx+0x75706603],dh
  41fcdf:	je     0x41fd54
  41fce1:	add    BYTE PTR [rdi+0x65726603],dh
  41fce7:	add    BYTE PTR gs:[rax],al
  41fcea:	rol    BYTE PTR [rbx],0x66
  41fced:	ja     0x41fd5f
  41fcef:	jb     0x41fd5a
  41fcf1:	outs   dx,BYTE PTR ds:[rsi]
  41fcf2:	je     0x41fd5a
  41fcf4:	add    BYTE PTR [rax],al
  41fcf6:	ret    0x6603
  41fcf9:	ja     0x41fd6d
  41fcfb:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c700
  41fd03:	gs je  0x41fd6b
  41fd06:	outs   dx,BYTE PTR ds:[rsi]
  41fd07:	jbe    0x41fd09
  41fd09:	add    dh,cl
  41fd0b:	add    ebp,DWORD PTR [rcx+0x73]
  41fd0e:	(bad)  
  41fd0f:	ins    BYTE PTR es:[rdi],dx
  41fd10:	outs   dx,BYTE PTR ds:[rsi]
  41fd11:	jne    0x41fd80
  41fd13:	add    bh,dl
  41fd15:	add    ebp,DWORD PTR [rcx+0x73]
  41fd18:	jae    0x41fd8a
  41fd1a:	(bad)  
  41fd1b:	movsxd esp,DWORD PTR [rbp+0x0]
  41fd1e:	fld    QWORD PTR [rbx]
  41fd20:	imul   esi,DWORD PTR [rbx+0x77],0x70797463
  41fd27:	add    BYTE PTR gs:[rax],al
  41fd2a:	(bad)  
  41fd2b:	add    ebp,DWORD PTR [rdi+rbp*2+0x63]
  41fd2f:	(bad)  
  41fd30:	ins    BYTE PTR es:[rdi],dx
  41fd31:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  41fd35:	jbe    0x41fd37
  41fd37:	add    al,dh
  41fd39:	add    ebp,DWORD PTR [rbp+0x61]
  41fd3c:	ins    BYTE PTR es:[rdi],dx
  41fd3d:	ins    BYTE PTR es:[rdi],dx
  41fd3e:	outs   dx,DWORD PTR ds:[rsi]
  41fd3f:	movsxd eax,DWORD PTR [rax]
  41fd41:	add    bh,dh
  41fd43:	add    ebp,DWORD PTR [rbp+0x65]
  41fd46:	ins    DWORD PTR es:[rdi],dx
  41fd47:	movsxd ebp,DWORD PTR [rbp+0x70]
  41fd4a:	add    BYTE PTR [rax],al
  41fd4c:	clc    
  41fd4d:	add    ebp,DWORD PTR [rbp+0x65]
  41fd50:	ins    DWORD PTR es:[rdi],dx
  41fd51:	movsxd esi,DWORD PTR [rax+0x79]
  41fd54:	add    BYTE PTR [rax],al
  41fd56:	stc    
  41fd57:	add    ebp,DWORD PTR [rbp+0x65]
  41fd5a:	ins    DWORD PTR es:[rdi],dx
  41fd5b:	ins    DWORD PTR es:[rdi],dx
  41fd5c:	outs   dx,DWORD PTR ds:[rsi]
  41fd5d:	jbe    0x41fdc4
  41fd5f:	add    dl,bh
  41fd61:	add    ebp,DWORD PTR [rbp+0x65]
  41fd64:	ins    DWORD PTR es:[rdi],dx
  41fd65:	jae    0x41fdcc
  41fd67:	je     0x41fd69
  41fd69:	add    BYTE PTR [rip+0x74757004],al        # 0x74b76d73
  41fd6f:	jae    0x41fd71
  41fd71:	add    BYTE PTR [rdx],cl
  41fd73:	add    al,0x72
  41fd75:	(bad)  
  41fd76:	imul   esi,DWORD PTR [rbx+0x65],0x72040c00
  41fd7d:	gs (bad) 
  41fd7f:	ins    BYTE PTR es:[rdi],dx
  41fd80:	ins    BYTE PTR es:[rdi],dx
  41fd81:	outs   dx,DWORD PTR ds:[rsi]
  41fd82:	movsxd eax,DWORD PTR [rax]
  41fd84:	adc    al,0x4
  41fd86:	jae    0x41fded
  41fd88:	je     0x41fdf6
  41fd8a:	outs   dx,DWORD PTR ds:[rsi]
  41fd8b:	movsxd esp,DWORD PTR [rcx+0x6c]
  41fd8e:	add    BYTE PTR gs:[rsi],dl
  41fd91:	add    al,0x73
  41fd93:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  41fd9a:	and    eax,DWORD PTR [rbx+rsi*2]
  41fd9d:	je     0x41fe11
  41fd9f:	movsxd ebp,DWORD PTR [rax+0x72]
  41fda2:	add    BYTE PTR [rax],al
  41fda4:	and    al,0x4
  41fda6:	jae    0x41fe1c
  41fda8:	jb     0x41fe0d
  41fdaa:	ins    DWORD PTR es:[rdi],dx
  41fdab:	jo     0x41fdad
  41fdad:	add    BYTE PTR [rsi],ah
  41fdaf:	add    al,0x73
  41fdb1:	je     0x41fe25
  41fdb3:	movsxd esi,DWORD PTR [rax+0x79]
  41fdb6:	add    BYTE PTR [rax],al
  41fdb8:	sub    DWORD PTR [rbx+rsi*2],eax
  41fdbb:	je     0x41fe2f
  41fdbd:	gs jb  0x41fe32
  41fdc0:	outs   dx,DWORD PTR ds:[rsi]
  41fdc1:	jb     0x41fdc3
  41fdc3:	add    BYTE PTR [rbx],ch
  41fdc5:	add    al,0x73
  41fdc7:	je     0x41fe3b
  41fdc9:	ins    BYTE PTR es:[rdi],dx
  41fdca:	outs   dx,BYTE PTR gs:[rsi]
  41fdcc:	add    BYTE PTR [rax],al
  41fdce:	cs add al,0x73
  41fdd1:	je     0x41fe45
  41fdd3:	outs   dx,BYTE PTR ds:[rsi]
  41fdd4:	movsxd ebp,DWORD PTR [rbp+0x70]
  41fdd7:	add    BYTE PTR [rdi],ch
  41fdd9:	add    al,0x73
  41fddb:	je     0x41fe4f
  41fddd:	outs   dx,BYTE PTR ds:[rsi]
  41fdde:	movsxd esi,DWORD PTR [rax+0x79]
  41fde1:	add    BYTE PTR [rdx],dh
  41fde3:	add    al,0x73
  41fde5:	je     0x41fe59
  41fde7:	jb     0x41fe4c
  41fde9:	push   0x4390072
  41fdee:	jae    0x41fe64
  41fdf0:	jb     0x41fe66
  41fdf2:	outs   dx,DWORD PTR ds:[rsi]
  41fdf3:	jne    0x41fe61
  41fdf5:	add    BYTE PTR [rsi+0x4],cl
  41fdf8:	jbe    0x41fe60
  41fdfa:	jo     0x41fe6e
  41fdfc:	imul   ebp,DWORD PTR [rsi+0x74],0x5d000066
  41fe03:	add    al,0x77
  41fe05:	movsxd esi,DWORD PTR [rbx+0x63]
  41fe08:	jo     0x41fe83
  41fe0a:	add    BYTE PTR [rax],al
  41fe0c:	(bad)  
  41fe0d:	add    al,0x77
  41fe0f:	movsxd esi,DWORD PTR [rbx+0x6c]
  41fe12:	outs   dx,BYTE PTR gs:[rsi]
  41fe14:	add    BYTE PTR [rax],al
  41fe16:	mov    esi,0x74735f04
  41fe1b:	jb     0x41fe81
  41fe1d:	jne    0x41fe8f
  41fe1f:	add    al,ch
  41fe21:	add    al,0x5f
  41fe23:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
  41fe2a:	lock add DWORD PTR [rbp+0x65],ecx
  41fe2e:	jae    0x41fea3
  41fe30:	(bad)  
  41fe31:	rex.X outs dx,DWORD PTR gs:[esi]
  41fe35:	js     0x41fe8e
  41fe37:	add    BYTE PTR [rax],al
  41fe39:	lock add DWORD PTR [rax],eax
  41fe3c:	add    al,dh
  41fe3e:	add    DWORD PTR [rax],eax
  41fe40:	add    al,dh
  41fe42:	add    DWORD PTR [rax],eax
  41fe44:	add    al,dh
  41fe46:	add    DWORD PTR [rax],eax
  41fe48:	add    al,dh
  41fe4a:	add    DWORD PTR [rax],eax
  41fe4c:	ins    BYTE PTR es:[rdi],dx
  41fe4d:	imul   esp,DWORD PTR [rdx+0x69],0x2d6c746e
  41fe54:	cmp    BYTE PTR [rsi],ch
  41fe56:	fs ins BYTE PTR es:[rdi],dx
  41fe58:	ins    BYTE PTR es:[rdi],dx
  41fe59:	add    BYTE PTR [rax],al
  41fe5b:	add    BYTE PTR [rax+rsi*8],dl
  41fe5e:	add    DWORD PTR [rax],eax
  41fe60:	adc    al,0xf0
  41fe62:	add    DWORD PTR [rax],eax
  41fe64:	adc    al,0xf0
  41fe66:	add    DWORD PTR [rax],eax
  41fe68:	ins    BYTE PTR es:[rdi],dx
  41fe69:	imul   esp,DWORD PTR [rdx+0x69],0x766e6f63
  41fe70:	sub    eax,0x6c642e32
  41fe75:	ins    BYTE PTR es:[rdi],dx
  41fe76:	add    BYTE PTR [rax],al
  41fe78:	sub    al,dh
  41fe7a:	add    DWORD PTR [rax],eax
  41fe7c:	sub    al,dh
  41fe7e:	add    DWORD PTR [rax],eax
  41fe80:	sub    al,dh
  41fe82:	add    DWORD PTR [rax],eax
  41fe84:	sub    al,dh
  41fe86:	add    DWORD PTR [rax],eax
  41fe88:	sub    al,dh
  41fe8a:	add    DWORD PTR [rax],eax
  41fe8c:	sub    al,dh
  41fe8e:	add    DWORD PTR [rax],eax
  41fe90:	sub    al,dh
  41fe92:	add    DWORD PTR [rax],eax
  41fe94:	sub    al,dh
  41fe96:	add    DWORD PTR [rax],eax
  41fe98:	sub    al,dh
  41fe9a:	add    DWORD PTR [rax],eax
  41fe9c:	sub    al,dh
  41fe9e:	add    DWORD PTR [rax],eax
  41fea0:	sub    al,dh
  41fea2:	add    DWORD PTR [rax],eax
  41fea4:	sub    al,dh
  41fea6:	add    DWORD PTR [rax],eax
  41fea8:	sub    al,dh
  41feaa:	add    DWORD PTR [rax],eax
  41feac:	sub    al,dh
  41feae:	add    DWORD PTR [rax],eax
  41feb0:	sub    al,dh
  41feb2:	add    DWORD PTR [rax],eax
  41feb4:	sub    al,dh
  41feb6:	add    DWORD PTR [rax],eax
  41feb8:	sub    al,dh
  41feba:	add    DWORD PTR [rax],eax
  41febc:	sub    al,dh
  41febe:	add    DWORD PTR [rax],eax
  41fec0:	sub    al,dh
  41fec2:	add    DWORD PTR [rax],eax
  41fec4:	sub    al,dh
  41fec6:	add    DWORD PTR [rax],eax
  41fec8:	sub    al,dh
  41feca:	add    DWORD PTR [rax],eax
  41fecc:	sub    al,dh
  41fece:	add    DWORD PTR [rax],eax
  41fed0:	sub    al,dh
  41fed2:	add    DWORD PTR [rax],eax
  41fed4:	sub    al,dh
  41fed6:	add    DWORD PTR [rax],eax
  41fed8:	sub    al,dh
  41feda:	add    DWORD PTR [rax],eax
  41fedc:	sub    al,dh
  41fede:	add    DWORD PTR [rax],eax
  41fee0:	sub    al,dh
  41fee2:	add    DWORD PTR [rax],eax
  41fee4:	sub    al,dh
  41fee6:	add    DWORD PTR [rax],eax
  41fee8:	sub    al,dh
  41feea:	add    DWORD PTR [rax],eax
  41feec:	sub    al,dh
  41feee:	add    DWORD PTR [rax],eax
  41fef0:	sub    al,dh
  41fef2:	add    DWORD PTR [rax],eax
  41fef4:	sub    al,dh
  41fef6:	add    DWORD PTR [rax],eax
  41fef8:	sub    al,dh
  41fefa:	add    DWORD PTR [rax],eax
  41fefc:	sub    al,dh
  41fefe:	add    DWORD PTR [rax],eax
  41ff00:	sub    al,dh
  41ff02:	add    DWORD PTR [rax],eax
  41ff04:	sub    al,dh
  41ff06:	add    DWORD PTR [rax],eax
  41ff08:	sub    al,dh
  41ff0a:	add    DWORD PTR [rax],eax
  41ff0c:	sub    al,dh
  41ff0e:	add    DWORD PTR [rax],eax
  41ff10:	sub    al,dh
  41ff12:	add    DWORD PTR [rax],eax
  41ff14:	rex.WXB
  41ff15:	rex.RB push r10
  41ff17:	rex.WRX
  41ff18:	rex.RB
  41ff19:	xor    r14,QWORD PTR [rdx]
  41ff1c:	cs fs ins BYTE PTR es:[rdi],dx
  41ff1f:	ins    BYTE PTR es:[rdi],dx
  41ff20:	add    BYTE PTR [rax],al
  41ff22:	add    BYTE PTR [rax],al
  41ff24:	cmp    al,0xf0
  41ff26:	add    DWORD PTR [rax],eax
  41ff28:	cmp    al,0xf0
  41ff2a:	add    DWORD PTR [rax],eax
  41ff2c:	cmp    al,0xf0
  41ff2e:	add    DWORD PTR [rax],eax
  41ff30:	cmp    al,0xf0
  41ff32:	add    DWORD PTR [rax],eax
  41ff34:	cmp    al,0xf0
  41ff36:	add    DWORD PTR [rax],eax
  41ff38:	cmp    al,0xf0
  41ff3a:	add    DWORD PTR [rax],eax
  41ff3c:	cmp    al,0xf0
  41ff3e:	add    DWORD PTR [rax],eax
  41ff40:	cmp    al,0xf0
  41ff42:	add    DWORD PTR [rax],eax
  41ff44:	cmp    al,0xf0
  41ff46:	add    DWORD PTR [rax],eax
  41ff48:	cmp    al,0xf0
  41ff4a:	add    DWORD PTR [rax],eax
  41ff4c:	cmp    al,0xf0
  41ff4e:	add    DWORD PTR [rax],eax
  41ff50:	cmp    al,0xf0
  41ff52:	add    DWORD PTR [rax],eax
  41ff54:	cmp    al,0xf0
  41ff56:	add    DWORD PTR [rax],eax
  41ff58:	cmp    al,0xf0
  41ff5a:	add    DWORD PTR [rax],eax
  41ff5c:	cmp    al,0xf0
  41ff5e:	add    DWORD PTR [rax],eax
  41ff60:	cmp    al,0xf0
  41ff62:	add    DWORD PTR [rax],eax
  41ff64:	cmp    al,0xf0
  41ff66:	add    DWORD PTR [rax],eax
  41ff68:	cmp    al,0xf0
  41ff6a:	add    DWORD PTR [rax],eax
  41ff6c:	cmp    al,0xf0
  41ff6e:	add    DWORD PTR [rax],eax
  41ff70:	cmp    al,0xf0
  41ff72:	add    DWORD PTR [rax],eax
  41ff74:	cmp    al,0xf0
  41ff76:	add    DWORD PTR [rax],eax
  41ff78:	cmp    al,0xf0
  41ff7a:	add    DWORD PTR [rax],eax
  41ff7c:	cmp    al,0xf0
  41ff7e:	add    DWORD PTR [rax],eax
  41ff80:	cmp    al,0xf0
  41ff82:	add    DWORD PTR [rax],eax
  41ff84:	cmp    al,0xf0
  41ff86:	add    DWORD PTR [rax],eax
  41ff88:	cmp    al,0xf0
  41ff8a:	add    DWORD PTR [rax],eax
  41ff8c:	cmp    al,0xf0
  41ff8e:	add    DWORD PTR [rax],eax
  41ff90:	cmp    al,0xf0
  41ff92:	add    DWORD PTR [rax],eax
  41ff94:	cmp    al,0xf0
  41ff96:	add    DWORD PTR [rax],eax
  41ff98:	cmp    al,0xf0
  41ff9a:	add    DWORD PTR [rax],eax
  41ff9c:	cmp    al,0xf0
  41ff9e:	add    DWORD PTR [rax],eax
  41ffa0:	cmp    al,0xf0
  41ffa2:	add    DWORD PTR [rax],eax
  41ffa4:	cmp    al,0xf0
  41ffa6:	add    DWORD PTR [rax],eax
  41ffa8:	cmp    al,0xf0
  41ffaa:	add    DWORD PTR [rax],eax
  41ffac:	cmp    al,0xf0
  41ffae:	add    DWORD PTR [rax],eax
  41ffb0:	cmp    al,0xf0
  41ffb2:	add    DWORD PTR [rax],eax
  41ffb4:	cmp    al,0xf0
  41ffb6:	add    DWORD PTR [rax],eax
  41ffb8:	cmp    al,0xf0
  41ffba:	add    DWORD PTR [rax],eax
  41ffbc:	cmp    al,0xf0
  41ffbe:	add    DWORD PTR [rax],eax
  41ffc0:	cmp    al,0xf0
  41ffc2:	add    DWORD PTR [rax],eax
  41ffc4:	cmp    al,0xf0
  41ffc6:	add    DWORD PTR [rax],eax
  41ffc8:	cmp    al,0xf0
  41ffca:	add    DWORD PTR [rax],eax
  41ffcc:	cmp    al,0xf0
  41ffce:	add    DWORD PTR [rax],eax
  41ffd0:	cmp    al,0xf0
  41ffd2:	add    DWORD PTR [rax],eax
  41ffd4:	cmp    al,0xf0
  41ffd6:	add    DWORD PTR [rax],eax
  41ffd8:	cmp    al,0xf0
  41ffda:	add    DWORD PTR [rax],eax
  41ffdc:	cmp    al,0xf0
  41ffde:	add    DWORD PTR [rax],eax
  41ffe0:	cmp    al,0xf0
  41ffe2:	add    DWORD PTR [rax],eax
  41ffe4:	cmp    al,0xf0
  41ffe6:	add    DWORD PTR [rax],eax
  41ffe8:	cmp    al,0xf0
  41ffea:	add    DWORD PTR [rax],eax
  41ffec:	cmp    al,0xf0
  41ffee:	add    DWORD PTR [rax],eax
  41fff0:	cmp    al,0xf0
  41fff2:	add    DWORD PTR [rax],eax
  41fff4:	cmp    al,0xf0
  41fff6:	add    DWORD PTR [rax],eax
  41fff8:	cmp    al,0xf0
  41fffa:	add    DWORD PTR [rax],eax
  41fffc:	cmp    al,0xf0
  41fffe:	add    DWORD PTR [rax],eax
  420000:	cmp    al,0xf0
  420002:	add    DWORD PTR [rax],eax
  420004:	cmp    al,0xf0
  420006:	add    DWORD PTR [rax],eax
  420008:	cmp    al,0xf0
  42000a:	add    DWORD PTR [rax],eax
  42000c:	cmp    al,0xf0
  42000e:	add    DWORD PTR [rax],eax
  420010:	cmp    al,0xf0
  420012:	add    DWORD PTR [rax],eax
  420014:	cmp    al,0xf0
  420016:	add    DWORD PTR [rax],eax
  420018:	cmp    al,0xf0
  42001a:	add    DWORD PTR [rax],eax
  42001c:	cmp    al,0xf0
  42001e:	add    DWORD PTR [rax],eax
  420020:	ins    DWORD PTR es:[rdi],dx
  420021:	jae    0x420099
  420023:	movsxd esi,DWORD PTR [rdx+0x74]
  420026:	cs fs ins BYTE PTR es:[rdi],dx
  420029:	ins    BYTE PTR es:[rdi],dx
  42002a:	add    BYTE PTR [rax],al
  42002c:	push   rax
  42002d:	lock add DWORD PTR [rax],eax
  420030:	push   rbp
  420031:	push   rbx
  420032:	rex.RB push r10
  420034:	xor    esi,DWORD PTR [rdx]
  420036:	cs fs ins BYTE PTR es:[rdi],dx
  420039:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000421000 <.CRT>:
	...
  421008:	(bad)  
  421009:	adc    DWORD PTR [rax+0x0],eax
	...
  421020:	adc    BYTE PTR [rax],dl
  421022:	add    BYTE PTR [rax],al
  421025:	add    BYTE PTR [rax],al
  421027:	add    al,dl
  421029:	mov    cl,0x40
	...
  42103f:	add    BYTE PTR [rax],al
  421041:	mov    ah,0x40
  421043:	add    BYTE PTR [rax],al
  421045:	add    BYTE PTR [rax],al
  421047:	add    al,dl
  421049:	mov    bl,0x40
	...

Disassembly of section .tls:

0000000000422000 <.tls>:
	...
  422020:	add    BYTE PTR [rax],ah
  422022:	rex.X add BYTE PTR [rax],al
  422025:	add    BYTE PTR [rax],al
  422027:	add    BYTE PTR [rax+0x20],ah
  42202a:	rex.X add BYTE PTR [rax],al
  42202d:	add    BYTE PTR [rax],al
  42202f:	add    ah,bl
  422031:	fadd   DWORD PTR [rcx+0x0]
  422034:	add    BYTE PTR [rax],al
  422036:	add    BYTE PTR [rax],al
  422038:	adc    BYTE PTR [rdx+0x0],al
	...

Disassembly of section .rsrc:

0000000000423000 <.rsrc>:
	...
  42300c:	add    BYTE PTR [rax],al
  42300e:	add    DWORD PTR [rax],eax
  423010:	adc    BYTE PTR [rax],al
  423012:	add    BYTE PTR [rax],al
  423014:	sbb    BYTE PTR [rax],al
  423016:	add    BYTE PTR [rax+0x0],al
	...
  423024:	add    BYTE PTR [rax],al
  423026:	add    DWORD PTR [rax],eax
  423028:	add    DWORD PTR [rax],eax
  42302a:	add    BYTE PTR [rax],al
  42302c:	xor    BYTE PTR [rax],al
  42302e:	add    BYTE PTR [rax+0x0],al
	...
  42303c:	add    BYTE PTR [rax],al
  42303e:	add    DWORD PTR [rax],eax
  423040:	or     DWORD PTR [rax+rax*1],eax
  423043:	add    BYTE PTR [rax+0x0],cl
  423046:	add    BYTE PTR [rax],al
  423048:	pop    rax
  423049:	xor    BYTE PTR [rdx],al
  42304b:	add    BYTE PTR [rax+0x5],cl
  423051:	add    BYTE PTR [rax],al
  423053:	add    BYTE PTR [rax],al
  423055:	add    BYTE PTR [rax],al
  423057:	add    BYTE PTR [rax+0x3405],cl
  42305d:	add    BYTE PTR [rsi+0x0],dl
  423060:	push   rbx
  423061:	add    BYTE PTR [rdi+0x0],bl
  423064:	push   rsi
  423065:	add    BYTE PTR [rbp+0x0],al
  423068:	push   rdx
  423069:	add    BYTE PTR [rbx+0x0],dl
  42306c:	rex.WB add BYTE PTR [r15+0x0],cl
  423070:	rex.WRX add BYTE PTR [rdi+0x0],r11b
  423074:	rex.WB add BYTE PTR [r14+0x0],cl
  423078:	rex.RX add BYTE PTR [rdi+0x0],r9b
  42307c:	add    BYTE PTR [rax],al
  42307e:	add    BYTE PTR [rax],al
  423080:	mov    ebp,0xfeef04
  423085:	add    BYTE PTR [rcx],al
  423087:	add    BYTE PTR [rbx],dl
  423089:	add    BYTE PTR [rax],al
  42308b:	add    BYTE PTR [rax],al
  42308d:	add    BYTE PTR [rip+0x1300],al        # 0x424393
  423093:	add    BYTE PTR [rax],al
  423095:	add    BYTE PTR [rip+0x3f00],al        # 0x426f9b
  42309b:	add    BYTE PTR [rax],al
  42309d:	add    BYTE PTR [rax],al
  42309f:	add    BYTE PTR [rax+rax*1],al
  4230a2:	add    DWORD PTR [rax],eax
  4230a4:	add    DWORD PTR [rax],eax
	...
  4230b2:	add    BYTE PTR [rax],al
  4230b4:	out    0x4,al
  4230b6:	add    BYTE PTR [rax],al
  4230b8:	add    DWORD PTR [rax],eax
  4230ba:	push   rbx
  4230bb:	add    BYTE PTR [rax+rax*1+0x72],dh
  4230bf:	add    BYTE PTR [rcx+0x0],ch
  4230c2:	outs   dx,BYTE PTR ds:[rsi]
  4230c3:	add    BYTE PTR [rdi+0x0],ah
  4230c6:	rex.RX add BYTE PTR [rcx+0x0],r13b
  4230ca:	ins    BYTE PTR es:[rdi],dx
  4230cb:	add    BYTE PTR [rbp+0x0],ah
  4230ce:	rex.WB add BYTE PTR [r14+0x0],bpl
  4230d2:	data16 add BYTE PTR [rdi+0x0],ch
  4230d6:	add    BYTE PTR [rax],al
  4230d8:	ret    0x4
  4230db:	add    BYTE PTR [rcx],al
  4230dd:	add    BYTE PTR [rax],dh
  4230df:	add    BYTE PTR [rax+rax*1],dh
  4230e2:	xor    BYTE PTR [rax],al
  4230e4:	cmp    DWORD PTR [rax],eax
  4230e6:	xor    BYTE PTR [rax],al
  4230e8:	xor    BYTE PTR [rax],al
  4230ea:	xor    BYTE PTR [rax],al
  4230ec:	xor    BYTE PTR [rax],al
  4230ee:	add    BYTE PTR [rax],al
  4230f0:	sbb    al,0x2
  4230f2:	add    al,BYTE PTR [rcx]
  4230f4:	add    DWORD PTR [rax],eax
  4230f6:	rex.XB add BYTE PTR [r15+0x0],bpl
  4230fa:	ins    DWORD PTR es:[rdi],dx
  4230fb:	add    BYTE PTR [rbp+0x0],ch
  4230fe:	add    BYTE PTR gs:[rsi+0x0],ch
  423102:	je     0x423104
  423104:	jae    0x423106
  423106:	add    BYTE PTR [rax],al
  423108:	push   rsp
  423109:	add    BYTE PTR [rax+0x0],ch
  42310c:	imul   eax,DWORD PTR [rax],0x200073
  423112:	jo     0x423114
  423114:	jb     0x423116
  423116:	outs   dx,DWORD PTR ds:[rsi]
  423117:	add    BYTE PTR [rdi+0x0],ah
  42311a:	jb     0x42311c
  42311c:	(bad)  
  42311d:	add    BYTE PTR [rbp+0x0],ch
  423120:	and    BYTE PTR [rax],al
  423122:	imul   eax,DWORD PTR [rax],0x200073
  423128:	data16 add BYTE PTR [rdx+0x0],dh
  42312c:	add    BYTE PTR gs:[rbp+0x0],ah
  423130:	and    BYTE PTR [rax],al
  423132:	jae    0x423134
  423134:	outs   dx,DWORD PTR ds:[rsi]
  423135:	add    BYTE PTR [rsi+0x0],ah
  423138:	je     0x42313a
  42313a:	ja     0x42313c
  42313c:	(bad)  
  42313d:	add    BYTE PTR [rdx+0x0],dh
  423140:	add    BYTE PTR gs:[rdx],bh
  423143:	add    BYTE PTR [rax],ah
  423145:	add    BYTE PTR [rcx+0x0],bh
  423148:	outs   dx,DWORD PTR ds:[rsi]
  423149:	add    BYTE PTR [rbp+0x0],dh
  42314c:	and    BYTE PTR [rax],al
  42314e:	movsxd eax,DWORD PTR [rax]
  423150:	(bad)  
  423151:	add    BYTE PTR [rsi+0x0],ch
  423154:	and    BYTE PTR [rax],al
  423156:	jb     0x423158
  423158:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
  42315d:	add    BYTE PTR [rbx+0x0],dh
  423160:	je     0x423162
  423162:	jb     0x423164
  423164:	imul   eax,DWORD PTR [rax],0x750062
  42316a:	je     0x42316c
  42316c:	add    BYTE PTR gs:[rax],ah
  42316f:	add    BYTE PTR [rcx+0x0],ch
  423172:	je     0x423174
  423174:	and    BYTE PTR [rax],al
  423176:	(bad)  
  423177:	add    BYTE PTR [rsi+0x0],ch
  42317a:	add    BYTE PTR fs:[rdi],ch
  42317d:	add    BYTE PTR [rdi+0x0],ch
  423180:	jb     0x423182
  423182:	and    BYTE PTR [rax],al
  423184:	ins    DWORD PTR es:[rdi],dx
  423185:	add    BYTE PTR [rdi+0x0],ch
  423188:	add    BYTE PTR fs:[rcx+0x0],ch
  42318c:	data16 add BYTE PTR [rcx+0x0],bh
  423190:	and    BYTE PTR [rax],al
  423192:	imul   eax,DWORD PTR [rax],0x200074
  423198:	jne    0x42319a
  42319a:	outs   dx,BYTE PTR ds:[rsi]
  42319b:	add    BYTE PTR [rax+rax*1+0x65],ah
  42319f:	add    BYTE PTR [rdx+0x0],dh
  4231a2:	and    BYTE PTR [rax],al
  4231a4:	je     0x4231a6
  4231a6:	push   0x20006500
  4231ab:	add    BYTE PTR [rax+rax*1+0x65],dh
  4231af:	add    BYTE PTR [rdx+0x0],dh
  4231b2:	ins    DWORD PTR es:[rdi],dx
  4231b3:	add    BYTE PTR [rbx+0x0],dh
  4231b6:	and    BYTE PTR [rax],al
  4231b8:	outs   dx,DWORD PTR ds:[rsi]
  4231b9:	add    BYTE PTR [rsi+0x0],ah
  4231bc:	and    BYTE PTR [rax],al
  4231be:	je     0x4231c0
  4231c0:	push   0x20006500
  4231c5:	add    BYTE PTR [rdi+0x0],al
  4231c8:	rex.WRX add BYTE PTR [rbp+0x0],r10b
  4231cc:	and    BYTE PTR [rax],al
  4231ce:	rex.RXB add BYTE PTR [r13+0x0],r12b
  4231d2:	outs   dx,BYTE PTR ds:[rsi]
  4231d3:	add    BYTE PTR [rbp+0x0],ah
  4231d6:	jb     0x4231d8
  4231d8:	(bad)  
  4231d9:	add    BYTE PTR [rax+rax*1+0x20],ch
  4231dd:	add    BYTE PTR [rax+0x0],dl
  4231e0:	jne    0x4231e2
  4231e2:	(bad)  
  4231e3:	add    BYTE PTR [rax+rax*1+0x69],ch
  4231e7:	add    BYTE PTR [rbx+0x0],ah
  4231ea:	and    BYTE PTR [rax],al
  4231ec:	rex.WR add BYTE PTR [rcx+0x0],r13b
  4231f0:	movsxd eax,DWORD PTR [rax]
  4231f2:	add    BYTE PTR gs:[rsi+0x0],ch
  4231f6:	jae    0x4231f8
  4231f8:	add    BYTE PTR gs:[rsi],ch
  4231fb:	add    BYTE PTR [rax],ah
  4231fd:	add    BYTE PTR [rcx+0x0],bl
  423200:	outs   dx,DWORD PTR ds:[rsi]
  423201:	add    BYTE PTR [rbp+0x0],dh
  423204:	and    BYTE PTR [rax],al
  423206:	jae    0x423208
  423208:	push   0x75006f00
  42320d:	add    BYTE PTR [rax+rax*1+0x64],ch
  423211:	add    BYTE PTR [rax],ah
  423213:	add    BYTE PTR [rax+0x0],ch
  423216:	(bad)  
  423217:	add    BYTE PTR [rsi+0x0],dh
  42321a:	add    BYTE PTR gs:[rax],ah
  42321d:	add    BYTE PTR [rdx+0x0],dh
  423220:	add    BYTE PTR gs:[rbx+0x0],ah
  423224:	add    BYTE PTR gs:[rcx+0x0],ch
  423228:	jbe    0x42322a
  42322a:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
  42322f:	add    BYTE PTR [rcx+0x0],ah
  423232:	and    BYTE PTR [rax],al
  423234:	movsxd eax,DWORD PTR [rax]
  423236:	outs   dx,DWORD PTR ds:[rsi]
  423237:	add    BYTE PTR [rax+0x0],dh
  42323a:	jns    0x42323c
  42323c:	and    BYTE PTR [rax],al
  42323e:	outs   dx,DWORD PTR ds:[rsi]
  42323f:	add    BYTE PTR [rsi+0x0],ah
  423242:	and    BYTE PTR [rax],al
  423244:	je     0x423246
  423246:	push   0x20006500
  42324b:	add    BYTE PTR [rdi+0x0],al
  42324e:	rex.WRX add BYTE PTR [rbp+0x0],r10b
  423252:	and    BYTE PTR [rax],al
  423254:	rex.RXB add BYTE PTR [r13+0x0],r12b
  423258:	outs   dx,BYTE PTR ds:[rsi]
  423259:	add    BYTE PTR [rbp+0x0],ah
  42325c:	jb     0x42325e
  42325e:	(bad)  
  42325f:	add    BYTE PTR [rax+rax*1+0x20],ch
  423263:	add    BYTE PTR [rax+0x0],dl
  423266:	jne    0x423268
  423268:	(bad)  
  423269:	add    BYTE PTR [rax+rax*1+0x69],ch
  42326d:	add    BYTE PTR [rbx+0x0],ah
  423270:	and    BYTE PTR [rax],al
  423272:	rex.WR add BYTE PTR [rcx+0x0],r13b
  423276:	movsxd eax,DWORD PTR [rax]
  423278:	add    BYTE PTR gs:[rsi+0x0],ch
  42327c:	jae    0x42327e
  42327e:	add    BYTE PTR gs:[rax],ah
  423281:	add    BYTE PTR [rcx+0x0],ah
  423284:	ins    BYTE PTR es:[rdi],dx
  423285:	add    BYTE PTR [rdi+0x0],ch
  423288:	outs   dx,BYTE PTR ds:[rsi]
  423289:	add    BYTE PTR [rdi+0x0],ah
  42328c:	and    BYTE PTR [rax],al
  42328e:	ja     0x423290
  423290:	imul   eax,DWORD PTR [rax],0x680074
  423296:	and    BYTE PTR [rax],al
  423298:	je     0x42329a
  42329a:	push   0x73006900
  42329f:	add    BYTE PTR [rax],ah
  4232a1:	add    BYTE PTR [rax+0x0],dh
  4232a4:	jb     0x4232a6
  4232a6:	outs   dx,DWORD PTR ds:[rsi]
  4232a7:	add    BYTE PTR [rdi+0x0],ah
  4232aa:	jb     0x4232ac
  4232ac:	(bad)  
  4232ad:	add    BYTE PTR [rbp+0x0],ch
  4232b0:	add    BYTE PTR cs:[rax],ah
  4232b3:	add    BYTE PTR [rcx+0x0],cl
  4232b6:	data16 add BYTE PTR [rax],ah
  4232b9:	add    BYTE PTR [rsi+0x0],ch
  4232bc:	outs   dx,DWORD PTR ds:[rsi]
  4232bd:	add    BYTE PTR [rax+rax*1+0x2c],dh
  4232c1:	add    BYTE PTR [rax],ah
  4232c3:	add    BYTE PTR [rbx+0x0],dh
  4232c6:	add    BYTE PTR gs:[rbp+0x0],ah
  4232ca:	and    BYTE PTR [rax],al
  4232cc:	cmp    al,0x0
  4232ce:	push   0x74007400
  4232d3:	add    BYTE PTR [rax+0x0],dh
  4232d6:	cmp    al,BYTE PTR [rax]
  4232d8:	(bad)  
  4232d9:	add    BYTE PTR [rdi],ch
  4232db:	add    BYTE PTR [rdi+0x0],dh
  4232de:	ja     0x4232e0
  4232e0:	ja     0x4232e2
  4232e2:	add    BYTE PTR cs:[rdi+0x0],ah
  4232e6:	outs   dx,BYTE PTR ds:[rsi]
  4232e7:	add    BYTE PTR [rbp+0x0],dh
  4232ea:	add    BYTE PTR cs:[rdi+0x0],ch
  4232ee:	jb     0x4232f0
  4232f0:	add    BYTE PTR [edi],ch
  4232f3:	add    BYTE PTR [rax+rax*1+0x69],ch
  4232f7:	add    BYTE PTR [rbx+0x0],ah
  4232fa:	add    BYTE PTR gs:[rsi+0x0],ch
  4232fe:	jae    0x423300
  423300:	add    BYTE PTR gs:[rbx+0x0],dh
  423304:	(bad)  
  423305:	add    BYTE PTR [rsi],bh
  423307:	add    BYTE PTR [rsi],ch
  423309:	add    BYTE PTR [rax],al
  42330b:	add    BYTE PTR [rdx+0x0],dl
  42330e:	sbb    DWORD PTR [rax],eax
  423310:	add    DWORD PTR [rax],eax
  423312:	rex.XB add BYTE PTR [r15+0x0],bpl
  423316:	ins    DWORD PTR es:[rdi],dx
  423317:	add    BYTE PTR [rax+0x0],dh
  42331a:	(bad)  
  42331b:	add    BYTE PTR [rsi+0x0],ch
  42331e:	jns    0x423320
  423320:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  423324:	ins    DWORD PTR es:[rdi],dx
  423325:	add    BYTE PTR [rbp+0x0],ah
  423328:	add    BYTE PTR [rax],al
  42332a:	add    BYTE PTR [rax],al
  42332c:	rex.RX add BYTE PTR [rdx+0x0],r14b
  423330:	add    BYTE PTR gs:[rbp+0x0],ah
  423334:	and    BYTE PTR [rax],al
  423336:	push   rbx
  423337:	add    BYTE PTR [rdi+0x0],ch
  42333a:	data16 add BYTE PTR [rax+rax*1+0x77],dh
  42333f:	add    BYTE PTR [rcx+0x0],ah
  423342:	jb     0x423344
  423344:	add    BYTE PTR gs:[rax],ah
  423347:	add    BYTE PTR [rsi+0x0],al
  42334a:	outs   dx,DWORD PTR ds:[rsi]
  42334b:	add    BYTE PTR [rbp+0x0],dh
  42334e:	outs   dx,BYTE PTR ds:[rsi]
  42334f:	add    BYTE PTR [rax+rax*1+0x61],ah
  423353:	add    BYTE PTR [rax+rax*1+0x69],dh
  423357:	add    BYTE PTR [rdi+0x0],ch
  42335a:	outs   dx,BYTE PTR ds:[rsi]
  42335b:	add    BYTE PTR [rax],al
  42335d:	add    BYTE PTR [rax],al
  42335f:	add    BYTE PTR [rax+rax*1+0x10042],ch
  423366:	rex.RX add BYTE PTR [rcx+0x0],r13b
  42336a:	ins    BYTE PTR es:[rdi],dx
  42336b:	add    BYTE PTR [rbp+0x0],ah
  42336e:	add    BYTE PTR [rbp+0x0],r12b
  423372:	jae    0x423374
  423374:	movsxd eax,DWORD PTR [rax]
  423376:	jb     0x423378
  423378:	imul   eax,DWORD PTR [rax],0x740070
  42337e:	imul   eax,DWORD PTR [rax],0x6e006f
  423384:	add    BYTE PTR [rax],al
  423386:	add    BYTE PTR [rax],al
  423388:	rex.RXB add BYTE PTR [r8+0x0],r10b
  42338c:	rex.WR add BYTE PTR [rbp+0x0],r12b
  423390:	add    BYTE PTR fs:[rax],ah
  423393:	add    BYTE PTR [rax+0x0],dh
  423396:	jb     0x423398
  423398:	outs   dx,DWORD PTR ds:[rsi]
  423399:	add    BYTE PTR [rdi+0x0],ah
  42339c:	jb     0x42339e
  42339e:	(bad)  
  42339f:	add    BYTE PTR [rbp+0x0],ch
  4233a2:	and    BYTE PTR [rax],al
  4233a4:	data16 add BYTE PTR [rdi+0x0],ch
  4233a8:	jb     0x4233aa
  4233aa:	and    BYTE PTR [rax],al
  4233ac:	push   rdi
  4233ad:	add    BYTE PTR [rcx+0x0],ch
  4233b0:	outs   dx,BYTE PTR ds:[rsi]
  4233b1:	add    BYTE PTR [rax+rax*1+0x6f],ah
  4233b5:	add    BYTE PTR [rdi+0x0],dh
  4233b8:	jae    0x4233ba
  4233ba:	and    BYTE PTR [rax],al
  4233bc:	rex.WRX add BYTE PTR [rax+r8*1+0x2f],r10b
  4233c1:	add    BYTE PTR [rdx],dh
  4233c3:	add    BYTE PTR [rax],dh
  4233c5:	add    BYTE PTR [rax],dh
  4233c7:	add    BYTE PTR [rax],dh
  4233c9:	add    BYTE PTR [rdi],ch
  4233cb:	add    BYTE PTR [rax+0x0],bl
  4233ce:	push   rax
  4233cf:	add    BYTE PTR [rdi],ch
  4233d1:	add    BYTE PTR [rsi+0x0],dl
  4233d4:	imul   eax,DWORD PTR [rax],0x740073
  4233da:	(bad)  
  4233db:	add    BYTE PTR [rdi],ch
  4233dd:	add    BYTE PTR [rdi],dh
  4233df:	add    BYTE PTR [rax],ah
  4233e1:	add    BYTE PTR [rcx+0x0],ah
  4233e4:	outs   dx,BYTE PTR ds:[rsi]
  4233e5:	add    BYTE PTR [rax+rax*1+0x20],ah
  4233e9:	add    BYTE PTR [rdi+0x0],dl
  4233ec:	imul   eax,DWORD PTR [rax],0x64006e
  4233f2:	outs   dx,DWORD PTR ds:[rsi]
  4233f3:	add    BYTE PTR [rdi+0x0],dh
  4233f6:	jae    0x4233f8
  4233f8:	and    BYTE PTR [rax],al
  4233fa:	cmp    DWORD PTR [rax],eax
  4233fc:	xor    eax,0x39002f00
  423401:	add    BYTE PTR [rax],bh
  423403:	add    BYTE PTR [rdi],ch
  423405:	add    BYTE PTR [rbp+0x0],cl
  423408:	add    BYTE PTR [r8],r8b
  42340b:	add    BYTE PTR [rdx],dh
  42340d:	add    BYTE PTR [rcx],cl
  42340f:	add    BYTE PTR [rcx],al
  423411:	add    BYTE PTR [rsi+0x0],al
  423414:	imul   eax,DWORD PTR [rax],0x65006c
  42341a:	push   rsi
  42341b:	add    BYTE PTR [rbp+0x0],ah
  42341e:	jb     0x423420
  423420:	jae    0x423422
  423422:	imul   eax,DWORD PTR [rax],0x6e006f
  423428:	add    BYTE PTR [rax],al
  42342a:	add    BYTE PTR [rax],al
  42342c:	xor    BYTE PTR [rax],al
  42342e:	add    BYTE PTR cs:[rcx],dh
  423431:	add    BYTE PTR [rcx],bh
  423433:	add    BYTE PTR [rsi],ch
  423435:	add    BYTE PTR [rip+0x31002e00],dh        # 0x3142623b
  42343b:	add    BYTE PTR [rax],al
  42343d:	add    BYTE PTR [rax],al
  42343f:	add    BYTE PTR [rax+rax*1],ch
  423442:	(bad)  
  423443:	add    BYTE PTR [rcx],al
  423445:	add    BYTE PTR [rcx+0x0],cl
  423448:	outs   dx,BYTE PTR ds:[rsi]
  423449:	add    BYTE PTR [rax+rax*1+0x65],dh
  42344d:	add    BYTE PTR [rdx+0x0],dh
  423450:	outs   dx,BYTE PTR ds:[rsi]
  423451:	add    BYTE PTR [rcx+0x0],ah
  423454:	ins    BYTE PTR es:[rdi],dx
  423455:	add    BYTE PTR [rsi+0x0],cl
  423458:	(bad)  
  423459:	add    BYTE PTR [rbp+0x0],ch
  42345c:	add    BYTE PTR gs:[rax],al
  42345f:	add    BYTE PTR [rdx],ch
  423461:	add    BYTE PTR [rsi],ch
  423463:	add    BYTE PTR [rbp+0x0],ah
  423466:	js     0x423468
  423468:	add    BYTE PTR gs:[rax],al
  42346b:	add    BYTE PTR [rax+rax*1+0x18],dl
  42346f:	add    BYTE PTR [rcx],al
  423471:	add    BYTE PTR [rax+rax*1+0x65],cl
  423475:	add    BYTE PTR [rdi+0x0],ah
  423478:	(bad)  
  423479:	add    BYTE PTR [rax+rax*1+0x43],ch
  42347d:	add    BYTE PTR [rdi+0x0],ch
  423480:	jo     0x423482
  423482:	jns    0x423484
  423484:	jb     0x423486
  423486:	imul   eax,DWORD PTR [rax],0x680067
  42348c:	je     0x42348e
  42348e:	add    BYTE PTR [rax],al
  423490:	rex.XB add BYTE PTR [r15+0x0],bpl
  423494:	jo     0x423496
  423496:	jns    0x423498
  423498:	jb     0x42349a
  42349a:	imul   eax,DWORD PTR [rax],0x680067
  4234a0:	je     0x4234a2
  4234a2:	and    BYTE PTR [rax],al
  4234a4:	sub    BYTE PTR [rax],al
  4234a6:	rex.XB add BYTE PTR [r9],bpl
  4234a9:	add    BYTE PTR [rax],ah
  4234ab:	add    BYTE PTR [rcx],dh
  4234ad:	add    BYTE PTR [rcx],bh
  4234af:	add    BYTE PTR [rcx],bh
  4234b1:	add    BYTE PTR [rip+0x32002d00],dh        # 0x324261b7
  4234b7:	add    BYTE PTR [rax],dh
  4234b9:	add    BYTE PTR [rcx],dh
  4234bb:	add    BYTE PTR [rbx],dh
  4234bd:	add    BYTE PTR [rax],al
  4234bf:	add    BYTE PTR [rdx],ch
  4234c1:	add    BYTE PTR [rcx],al
  4234c3:	add    BYTE PTR [rcx],al
  4234c5:	add    BYTE PTR [rax+rax*1+0x65],cl
  4234c9:	add    BYTE PTR [rdi+0x0],ah
  4234cc:	(bad)  
  4234cd:	add    BYTE PTR [rax+rax*1+0x54],ch
  4234d1:	add    BYTE PTR [rdx+0x0],dh
  4234d4:	(bad)  
  4234d5:	add    BYTE PTR [rax+rax*1+0x65],ah
  4234d9:	add    BYTE PTR [rbp+0x0],ch
  4234dc:	(bad)  
  4234dd:	add    BYTE PTR [rdx+0x0],dh
  4234e0:	imul   eax,DWORD PTR [rax],0x73
	...
  4234eb:	add    BYTE PTR [rax+rax*1],dh
  4234ee:	(bad)  
  4234ef:	add    BYTE PTR [rcx],al
  4234f1:	add    BYTE PTR [rdi+0x0],cl
  4234f4:	jb     0x4234f6
  4234f6:	imul   eax,DWORD PTR [rax],0x690067
  4234fc:	outs   dx,BYTE PTR ds:[rsi]
  4234fd:	add    BYTE PTR [rcx+0x0],ah
  423500:	ins    BYTE PTR es:[rdi],dx
  423501:	add    BYTE PTR [rsi+0x0],al
  423504:	imul   eax,DWORD PTR [rax],0x65006c
  42350a:	outs   dx,BYTE PTR ds:[rsi]
  42350b:	add    BYTE PTR [rcx+0x0],ah
  42350e:	ins    DWORD PTR es:[rdi],dx
  42350f:	add    BYTE PTR [rbp+0x0],ah
  423512:	add    BYTE PTR [rax],al
  423514:	sub    al,BYTE PTR [rax]
  423516:	add    BYTE PTR cs:[rbp+0x0],ah
  42351a:	js     0x42351c
  42351c:	add    BYTE PTR gs:[rax],al
  42351f:	add    BYTE PTR [rax+rax*1+0x12],al
  423523:	add    BYTE PTR [rcx],al
  423525:	add    BYTE PTR [rax+0x0],dl
  423528:	jb     0x42352a
  42352a:	outs   dx,DWORD PTR ds:[rsi]
  42352b:	add    BYTE PTR [rax+rax*1+0x75],ah
  42352f:	add    BYTE PTR [rbx+0x0],ah
  423532:	je     0x423534
  423534:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  423538:	ins    DWORD PTR es:[rdi],dx
  423539:	add    BYTE PTR [rbp+0x0],ah
  42353c:	add    BYTE PTR [rax],al
  42353e:	add    BYTE PTR [rax],al
  423540:	add    BYTE PTR [ebp+0x0],ah
  423544:	je     0x423546
  423546:	je     0x423548
  423548:	add    BYTE PTR gs:[rax+0x0],bh
  42354c:	je     0x42354e
  42354e:	and    BYTE PTR [rax],al
  423550:	jne    0x423552
  423552:	je     0x423554
  423554:	imul   eax,DWORD PTR [rax],0x69006c
  42355a:	je     0x42355c
  42355c:	imul   eax,DWORD PTR [rax],0x730065
  423562:	add    BYTE PTR [rax],al
  423564:	add    BYTE PTR ss:[rcx],cl
  423567:	add    BYTE PTR [rcx],al
  423569:	add    BYTE PTR [rax+0x0],dl
  42356c:	jb     0x42356e
  42356e:	outs   dx,DWORD PTR ds:[rsi]
  42356f:	add    BYTE PTR [rax+rax*1+0x75],ah
  423573:	add    BYTE PTR [rbx+0x0],ah
  423576:	je     0x423578
  423578:	push   rsi
  423579:	add    BYTE PTR [rbp+0x0],ah
  42357c:	jb     0x42357e
  42357e:	jae    0x423580
  423580:	imul   eax,DWORD PTR [rax],0x6e006f
  423586:	add    BYTE PTR [rax],al
  423588:	xor    BYTE PTR [rax],al
  42358a:	add    BYTE PTR cs:[rcx],dh
  42358d:	add    BYTE PTR [rcx],bh
  42358f:	add    BYTE PTR [rsi],ch
  423591:	add    BYTE PTR [rip+0x31002e00],dh        # 0x31426397
  423597:	add    BYTE PTR [rax],al
  423599:	add    BYTE PTR [rax],al
  42359b:	add    BYTE PTR [rax+rax*1+0x0],al
  42359f:	add    BYTE PTR [rcx],al
  4235a1:	add    BYTE PTR [rsi+0x0],dl
  4235a4:	(bad)  
  4235a5:	add    BYTE PTR [rdx+0x0],dh
  4235a8:	rex.RX add BYTE PTR [rcx+0x0],r13b
  4235ac:	ins    BYTE PTR es:[rdi],dx
  4235ad:	add    BYTE PTR [rbp+0x0],ah
  4235b0:	rex.WB add BYTE PTR [r14+0x0],bpl
  4235b4:	data16 add BYTE PTR [rdi+0x0],ch
  4235b8:	add    BYTE PTR [rax],al
  4235ba:	add    BYTE PTR [rax],al
  4235bc:	and    al,0x0
  4235be:	add    al,0x0
  4235c0:	add    BYTE PTR [rax],al
  4235c2:	push   rsp
  4235c3:	add    BYTE PTR [rdx+0x0],dh
  4235c6:	(bad)  
  4235c7:	add    BYTE PTR [rsi+0x0],ch
  4235ca:	jae    0x4235cc
  4235cc:	ins    BYTE PTR es:[rdi],dx
  4235cd:	add    BYTE PTR [rcx+0x0],ah
  4235d0:	je     0x4235d2
  4235d2:	imul   eax,DWORD PTR [rax],0x6e006f
  4235d8:	add    BYTE PTR [rax],al
  4235da:	add    BYTE PTR [rax],al
  4235dc:	or     DWORD PTR [rax+rax*1],eax
	...
