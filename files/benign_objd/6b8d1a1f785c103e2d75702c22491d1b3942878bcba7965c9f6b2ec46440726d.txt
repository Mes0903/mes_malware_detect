
6b8d1a1f785c103e2d75702c22491d1b3942878bcba7965c9f6b2ec46440726d.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    rax,rsp
   14000100b:	mov    QWORD PTR [rax+0x8],rbx
   14000100f:	mov    QWORD PTR [rax+0x10],rsi
   140001013:	mov    QWORD PTR [rax+0x20],rdi
   140001017:	push   rbp
   140001018:	push   r14
   14000101a:	push   r15
   14000101c:	lea    rbp,[rax-0x5f]
   140001020:	sub    rsp,0xa0
   140001027:	mov    r10d,ecx
   14000102a:	lea    rdi,[rbp-0x19]
   14000102e:	xor    esi,esi
   140001030:	lea    r9,[rbp+0x77]
   140001034:	xor    eax,eax
   140001036:	mov    DWORD PTR [rbp+0x77],esi
   140001039:	lea    r8,[rbp-0x19]
   14000103d:	lea    ecx,[rsi+0x58]
   140001040:	rep stos BYTE PTR es:[rdi],al
   140001042:	mov    ecx,r10d
   140001045:	call   0x140001c7c
   14000104a:	lea    ebx,[rsi+0x1]
   14000104d:	test   eax,eax
   14000104f:	je     0x1400010b6
   140001051:	cmp    DWORD PTR [rbp-0x19],ebx
   140001054:	jne    0x14000108c
   140001056:	mov    r14d,0x3e9
   14000105c:	mov    ecx,r14d
   14000105f:	call   0x140002cdc
   140001064:	mov    ecx,ebx
   140001066:	mov    rdi,rax
   140001069:	call   0x140007858
   14000106e:	mov    rcx,rax
   140001071:	mov    rdx,rdi
   140001074:	call   0x1400039e8
   140001079:	add    r14d,ebx
   14000107c:	cmp    r14d,0x414
   140001083:	jbe    0x14000105c
   140001085:	mov    ebx,esi
   140001087:	jmp    0x14000123f
   14000108c:	mov    eax,DWORD PTR [rbp+0x77]
   14000108f:	mov    r9,QWORD PTR [rbp-0x1]
   140001093:	mov    r8d,DWORD PTR [rbp+0x33]
   140001097:	mov    rdx,QWORD PTR [rbp-0x9]
   14000109b:	mov    rcx,QWORD PTR [rbp-0x11]
   14000109f:	mov    DWORD PTR [rsp+0x28],eax
   1400010a3:	mov    eax,DWORD PTR [rbp+0x37]
   1400010a6:	mov    DWORD PTR [rsp+0x20],eax
   1400010aa:	mov    DWORD PTR [rbp+0x2f],ebx
   1400010ad:	call   0x14000503c
   1400010b2:	test   eax,eax
   1400010b4:	jne    0x1400010d2
   1400010b6:	mov    ecx,0x2
   1400010bb:	call   0x140007858
   1400010c0:	mov    rcx,rax
   1400010c3:	mov    edx,0x20001
   1400010c8:	call   0x140002a20
   1400010cd:	jmp    0x14000123f
   1400010d2:	call   QWORD PTR [rip+0x7070]        # 0x140008148
   1400010d8:	mov    r14d,0x2
   1400010de:	cmp    eax,0x4c3
   1400010e3:	je     0x1400010f7
   1400010e5:	cmp    eax,0x50010001
   1400010ea:	je     0x140001191
   1400010f0:	cmp    eax,0xa0010001
   1400010f5:	jne    0x14000110f
   1400010f7:	mov    ecx,r14d
   1400010fa:	mov    DWORD PTR [rbp+0x2f],esi
   1400010fd:	call   0x140007858
   140001102:	mov    rcx,rax
   140001105:	mov    edx,0x20004
   14000110a:	call   0x140002a20
   14000110f:	lea    rcx,[rbp-0x19]
   140001113:	call   0x140001298
   140001118:	mov    r15d,eax
   14000111b:	cmp    eax,ebx
   14000111d:	jne    0x14000124c
   140001123:	cmp    QWORD PTR [rbp+0xf],rsi
   140001127:	je     0x1400011cd
   14000112d:	mov    ecx,ebx
   14000112f:	cmp    QWORD PTR [rbp+0x7],rsi
   140001133:	je     0x140001199
   140001135:	call   0x140007858
   14000113a:	mov    rcx,rax
   14000113d:	lea    rdx,[rip+0x72ec]        # 0x140008430
   140001144:	call   0x1400039e8
   140001149:	xor    r8d,r8d
   14000114c:	mov    edx,0x98
   140001151:	call   0x140002d14
   140001156:	mov    ecx,ebx
   140001158:	mov    rdi,rax
   14000115b:	call   0x140007858
   140001160:	mov    rcx,rax
   140001163:	mov    r9,rdi
   140001166:	mov    rax,QWORD PTR [rbp+0xf]
   14000116a:	mov    r8d,ebx
   14000116d:	mov    QWORD PTR [rsp+0x30],rax
   140001172:	mov    edx,r14d
   140001175:	mov    rax,QWORD PTR [rbp+0x7]
   140001179:	mov    QWORD PTR [rsp+0x28],rax
   14000117e:	mov    rax,QWORD PTR [rbp+0x17]
   140001182:	mov    QWORD PTR [rsp+0x20],rax
   140001187:	call   0x140003d2c
   14000118c:	jmp    0x140001261
   140001191:	mov    DWORD PTR [rbp+0x2f],esi
   140001194:	jmp    0x14000110f
   140001199:	call   0x140007858
   14000119e:	mov    rcx,rax
   1400011a1:	lea    rdx,[rip+0x7288]        # 0x140008430
   1400011a8:	call   0x1400039e8
   1400011ad:	xor    r8d,r8d
   1400011b0:	mov    edx,0x97
   1400011b5:	call   0x140002d14
   1400011ba:	mov    ecx,ebx
   1400011bc:	mov    rdi,rax
   1400011bf:	call   0x140007858
   1400011c4:	mov    rcx,rax
   1400011c7:	mov    rax,QWORD PTR [rbp+0xf]
   1400011cb:	jmp    0x140001207
   1400011cd:	cmp    QWORD PTR [rbp+0x7],rsi
   1400011d1:	je     0x140001224
   1400011d3:	mov    ecx,ebx
   1400011d5:	call   0x140007858
   1400011da:	mov    rcx,rax
   1400011dd:	lea    rdx,[rip+0x724c]        # 0x140008430
   1400011e4:	call   0x1400039e8
   1400011e9:	xor    r8d,r8d
   1400011ec:	mov    edx,0x96
   1400011f1:	call   0x140002d14
   1400011f6:	mov    ecx,ebx
   1400011f8:	mov    rdi,rax
   1400011fb:	call   0x140007858
   140001200:	mov    rcx,rax
   140001203:	mov    rax,QWORD PTR [rbp+0x7]
   140001207:	mov    QWORD PTR [rsp+0x28],rax
   14000120c:	mov    r9,rdi
   14000120f:	mov    rax,QWORD PTR [rbp+0x17]
   140001213:	mov    r8d,ebx
   140001216:	mov    edx,ebx
   140001218:	mov    QWORD PTR [rsp+0x20],rax
   14000121d:	call   0x140003d2c
   140001222:	jmp    0x140001261
   140001224:	mov    ecx,0x42b
   140001229:	call   QWORD PTR [rip+0x6e69]        # 0x140008098
   14000122f:	mov    ecx,r14d
   140001232:	call   0x140007858
   140001237:	mov    rcx,rax
   14000123a:	call   0x1400029e0
   14000123f:	lea    rcx,[rbp-0x19]
   140001243:	call   0x14000228c
   140001248:	mov    eax,ebx
   14000124a:	jmp    0x140001273
   14000124c:	mov    ecx,r14d
   14000124f:	call   0x140007858
   140001254:	mov    rcx,rax
   140001257:	mov    edx,0x20001
   14000125c:	call   0x140002a20
   140001261:	lea    rcx,[rbp-0x19]
   140001265:	call   0x14000228c
   14000126a:	cmp    r15d,ebx
   14000126d:	setne  sil
   140001271:	mov    eax,esi
   140001273:	lea    r11,[rsp+0xa0]
   14000127b:	mov    rbx,QWORD PTR [r11+0x20]
   14000127f:	mov    rsi,QWORD PTR [r11+0x28]
   140001283:	mov    rdi,QWORD PTR [r11+0x38]
   140001287:	mov    rsp,r11
   14000128a:	pop    r15
   14000128c:	pop    r14
   14000128e:	pop    rbp
   14000128f:	ret    
   140001290:	int3   
   140001291:	int3   
   140001292:	int3   
   140001293:	int3   
   140001294:	int3   
   140001295:	int3   
   140001296:	int3   
   140001297:	int3   
   140001298:	rex push rbp
   14000129a:	push   rbx
   14000129b:	push   rsi
   14000129c:	push   rdi
   14000129d:	push   r12
   14000129f:	push   r14
   1400012a1:	mov    rbp,rsp
   1400012a4:	sub    rsp,0x58
   1400012a8:	and    QWORD PTR [rbp+0x48],0x0
   1400012ad:	xor    edi,edi
   1400012af:	and    DWORD PTR [rbp+0x38],edi
   1400012b2:	mov    rbx,rcx
   1400012b5:	and    QWORD PTR [rbp+0x40],0x0
   1400012ba:	mov    QWORD PTR [rbp+0x50],rdi
   1400012be:	test   rcx,rcx
   1400012c1:	je     0x140001419
   1400012c7:	call   0x140001440
   1400012cc:	test   eax,eax
   1400012ce:	je     0x140001429
   1400012d4:	mov    rdx,QWORD PTR [rbx+0x28]
   1400012d8:	test   rdx,rdx
   1400012db:	je     0x1400012e9
   1400012dd:	mov    rcx,QWORD PTR [rbx+0x8]
   1400012e1:	call   QWORD PTR [rip+0x6d19]        # 0x140008000
   1400012e7:	jmp    0x140001300
   1400012e9:	mov    rdx,QWORD PTR [rbx+0x20]
   1400012ed:	test   rdx,rdx
   1400012f0:	je     0x140001419
   1400012f6:	mov    rcx,QWORD PTR [rbx+0x8]
   1400012fa:	call   QWORD PTR [rip+0x6d10]        # 0x140008010
   140001300:	mov    r14,rax
   140001303:	test   rax,rax
   140001306:	je     0x140001424
   14000130c:	call   QWORD PTR [rip+0x6e3e]        # 0x140008150
   140001312:	lea    r8,[rbp+0x40]
   140001316:	mov    edx,0x8
   14000131b:	mov    rcx,rax
   14000131e:	call   QWORD PTR [rip+0x6ce4]        # 0x140008008
   140001324:	mov    r12d,0x1
   14000132a:	mov    esi,eax
   14000132c:	cmp    eax,r12d
   14000132f:	jne    0x1400013d7
   140001335:	mov    rcx,QWORD PTR [rbp+0x40]
   140001339:	lea    rax,[rbp+0x38]
   14000133d:	xor    r9d,r9d
   140001340:	mov    QWORD PTR [rsp+0x20],rax
   140001345:	xor    r8d,r8d
   140001348:	mov    edx,r12d
   14000134b:	xor    esi,esi
   14000134d:	call   QWORD PTR [rip+0x6cc5]        # 0x140008018
   140001353:	call   QWORD PTR [rip+0x6def]        # 0x140008148
   140001359:	cmp    eax,0x7a
   14000135c:	jne    0x1400013db
   14000135e:	mov    ecx,DWORD PTR [rbp+0x38]
   140001361:	inc    ecx
   140001363:	call   0x14000444c
   140001368:	mov    QWORD PTR [rbp+0x50],rax
   14000136c:	mov    rdi,rax
   14000136f:	test   rax,rax
   140001372:	je     0x1400013db
   140001374:	mov    r9d,DWORD PTR [rbp+0x38]
   140001378:	lea    rax,[rbp+0x38]
   14000137c:	mov    rcx,QWORD PTR [rbp+0x40]
   140001380:	mov    r8,rdi
   140001383:	mov    edx,r12d
   140001386:	mov    QWORD PTR [rsp+0x20],rax
   14000138b:	call   QWORD PTR [rip+0x6c87]        # 0x140008018
   140001391:	mov    esi,eax
   140001393:	cmp    eax,r12d
   140001396:	jne    0x1400013d7
   140001398:	mov    rax,QWORD PTR [rbx+0x38]
   14000139c:	xor    r8d,r8d
   14000139f:	and    QWORD PTR [rsp+0x40],r8
   1400013a4:	mov    rcx,r14
   1400013a7:	mov    r9d,DWORD PTR [rbx+0x40]
   1400013ab:	movzx  edx,WORD PTR [rbx+0x44]
   1400013af:	mov    QWORD PTR [rbp+0x48],rax
   1400013b3:	lea    rax,[rbp+0x48]
   1400013b7:	mov    QWORD PTR [rsp+0x38],rax
   1400013bc:	and    DWORD PTR [rsp+0x30],r8d
   1400013c1:	mov    rax,QWORD PTR [rdi]
   1400013c4:	mov    WORD PTR [rsp+0x28],r12w
   1400013ca:	mov    QWORD PTR [rsp+0x20],rax
   1400013cf:	call   QWORD PTR [rip+0x6c73]        # 0x140008048
   1400013d5:	mov    esi,eax
   1400013d7:	test   esi,esi
   1400013d9:	jne    0x1400013e0
   1400013db:	call   0x140002874
   1400013e0:	mov    rcx,QWORD PTR [rbp+0x40]
   1400013e4:	test   rcx,rcx
   1400013e7:	je     0x1400013ef
   1400013e9:	call   QWORD PTR [rip+0x6c89]        # 0x140008078
   1400013ef:	test   rdi,rdi
   1400013f2:	je     0x1400013fd
   1400013f4:	lea    rcx,[rbp+0x50]
   1400013f8:	call   0x140004370
   1400013fd:	cmp    QWORD PTR [rbx+0x28],0x0
   140001402:	mov    rcx,r14
   140001405:	je     0x14000140f
   140001407:	call   QWORD PTR [rip+0x6c23]        # 0x140008030
   14000140d:	jmp    0x140001415
   14000140f:	call   QWORD PTR [rip+0x6c53]        # 0x140008068
   140001415:	mov    eax,esi
   140001417:	jmp    0x14000142b
   140001419:	mov    ecx,0x42b
   14000141e:	call   QWORD PTR [rip+0x6c74]        # 0x140008098
   140001424:	call   0x140002874
   140001429:	xor    eax,eax
   14000142b:	add    rsp,0x58
   14000142f:	pop    r14
   140001431:	pop    r12
   140001433:	pop    rdi
   140001434:	pop    rsi
   140001435:	pop    rbx
   140001436:	pop    rbp
   140001437:	ret    
   140001438:	int3   
   140001439:	int3   
   14000143a:	int3   
   14000143b:	int3   
   14000143c:	int3   
   14000143d:	int3   
   14000143e:	int3   
   14000143f:	int3   
   140001440:	mov    rax,rsp
   140001443:	mov    QWORD PTR [rax+0x10],rbx
   140001447:	mov    QWORD PTR [rax+0x18],rsi
   14000144b:	mov    QWORD PTR [rax+0x20],rdi
   14000144f:	push   rbp
   140001450:	push   r12
   140001452:	push   r13
   140001454:	push   r14
   140001456:	push   r15
   140001458:	lea    rbp,[rax-0x3c8]
   14000145f:	sub    rsp,0x4a0
   140001466:	mov    rax,QWORD PTR [rip+0x8b9b]        # 0x14000a008
   14000146d:	xor    rax,rsp
   140001470:	mov    QWORD PTR [rbp+0x390],rax
   140001477:	xor    r12d,r12d
   14000147a:	mov    rsi,rcx
   14000147d:	mov    edi,0x1fc
   140001482:	mov    DWORD PTR [rsp+0x40],r12d
   140001487:	mov    r8d,edi
   14000148a:	mov    QWORD PTR [rsp+0x58],r12
   14000148f:	xor    edx,edx
   140001491:	mov    QWORD PTR [rsp+0x48],r12
   140001496:	lea    rcx,[rbp-0x6c]
   14000149a:	mov    QWORD PTR [rsp+0x50],r12
   14000149f:	mov    r13d,r12d
   1400014a2:	mov    DWORD PTR [rbp-0x70],r12d
   1400014a6:	call   0x140007916
   1400014ab:	mov    r8d,edi
   1400014ae:	mov    DWORD PTR [rbp+0x190],r12d
   1400014b5:	xor    edx,edx
   1400014b7:	lea    rcx,[rbp+0x194]
   1400014be:	call   0x140007916
   1400014c3:	test   rsi,rsi
   1400014c6:	jne    0x1400014df
   1400014c8:	mov    ecx,0x42b
   1400014cd:	call   QWORD PTR [rip+0x6bc5]        # 0x140008098
   1400014d3:	call   0x140002874
   1400014d8:	xor    eax,eax
   1400014da:	jmp    0x140001985
   1400014df:	mov    rdi,QWORD PTR [rsi+0x8]
   1400014e3:	test   rdi,rdi
   1400014e6:	je     0x140001512
   1400014e8:	mov    rcx,rdi
   1400014eb:	call   0x1400046cc
   1400014f0:	test   eax,eax
   1400014f2:	jne    0x140001512
   1400014f4:	mov    r8,rdi
   1400014f7:	lea    rdx,[rip+0x6f3a]        # 0x140008438
   1400014fe:	lea    ecx,[rax+0x2]
   140001501:	call   0x140002738
   140001506:	test   eax,eax
   140001508:	je     0x1400014d3
   14000150a:	call   0x14000267c
   14000150f:	mov    rdi,rax
   140001512:	lea    r8,[rsp+0x58]
   140001517:	mov    rdx,0xffffffff80000002
   14000151e:	mov    rcx,rdi
   140001521:	call   QWORD PTR [rip+0x6b11]        # 0x140008038
   140001527:	test   eax,eax
   140001529:	je     0x14000152f
   14000152b:	mov    ecx,eax
   14000152d:	jmp    0x1400014cd
   14000152f:	mov    rcx,QWORD PTR [rsp+0x58]
   140001534:	lea    rax,[rsp+0x48]
   140001539:	mov    r9d,0x20019
   14000153f:	mov    QWORD PTR [rsp+0x20],rax
   140001544:	xor    r8d,r8d
   140001547:	lea    rdx,[rip+0x6f02]        # 0x140008450
   14000154e:	call   QWORD PTR [rip+0x6aec]        # 0x140008040
   140001554:	test   eax,eax
   140001556:	je     0x14000157f
   140001558:	mov    ecx,eax
   14000155a:	cmp    eax,0x2
   14000155d:	jne    0x140001564
   14000155f:	mov    ecx,0x3f7
   140001564:	call   QWORD PTR [rip+0x6b2e]        # 0x140008098
   14000156a:	call   0x140002874
   14000156f:	mov    rcx,QWORD PTR [rsp+0x58]
   140001574:	call   QWORD PTR [rip+0x6ade]        # 0x140008058
   14000157a:	jmp    0x1400014d8
   14000157f:	xor    edx,edx
   140001581:	mov    DWORD PTR [rsp+0x64],r12d
   140001586:	cmp    QWORD PTR [rsi+0x20],rdx
   14000158a:	lea    rdi,[rbp-0x70]
   14000158e:	mov    eax,edx
   140001590:	mov    DWORD PTR [rsp+0x40],0x100
   140001598:	setne  al
   14000159b:	mov    DWORD PTR [rsp+0x6c],edx
   14000159f:	cmp    QWORD PTR [rsi+0x28],rdx
   1400015a3:	lea    r9,[rsp+0x40]
   1400015a8:	mov    DWORD PTR [rsp+0x68],eax
   1400015ac:	lea    r8,[rbp-0x70]
   1400015b0:	mov    eax,edx
   1400015b2:	mov    ecx,0x200
   1400015b7:	setne  al
   1400015ba:	mov    r14d,r12d
   1400015bd:	mov    DWORD PTR [rsp+0x60],eax
   1400015c1:	mov    ebx,r12d
   1400015c4:	xor    eax,eax
   1400015c6:	mov    r15d,r12d
   1400015c9:	rep stos BYTE PTR es:[rdi],al
   1400015cb:	mov    rcx,QWORD PTR [rsp+0x48]
   1400015d0:	lea    rax,[rsp+0x70]
   1400015d5:	mov    QWORD PTR [rsp+0x38],rax
   1400015da:	mov    QWORD PTR [rsp+0x30],rdx
   1400015df:	mov    QWORD PTR [rsp+0x28],rdx
   1400015e4:	mov    QWORD PTR [rsp+0x20],rdx
   1400015e9:	call   QWORD PTR [rip+0x6a61]        # 0x140008050
   1400015ef:	movsxd rcx,DWORD PTR [rsp+0x68]
   1400015f4:	movsxd rdi,DWORD PTR [rsp+0x60]
   1400015f9:	mov    QWORD PTR [rsp+0x78],rcx
   1400015fe:	mov    QWORD PTR [rbp-0x80],rdi
   140001602:	mov    edx,0x1
   140001607:	test   eax,eax
   140001609:	jne    0x140001906
   14000160f:	cmp    rcx,rdx
   140001612:	jne    0x140001632
   140001614:	mov    rcx,QWORD PTR [rsi+0x20]
   140001618:	mov    r8d,edx
   14000161b:	lea    rdx,[rbp-0x70]
   14000161f:	xor    r9d,r9d
   140001622:	call   0x140003904
   140001627:	test   eax,eax
   140001629:	mov    edx,0x1
   14000162e:	cmove  r15d,edx
   140001632:	cmp    rdi,rdx
   140001635:	jne    0x1400017b0
   14000163b:	test   r12d,r12d
   14000163e:	jne    0x1400017b0
   140001644:	mov    rcx,QWORD PTR [rsp+0x48]
   140001649:	lea    rax,[rsp+0x50]
   14000164e:	mov    r9d,0x20019
   140001654:	mov    QWORD PTR [rsp+0x20],rax
   140001659:	xor    r8d,r8d
   14000165c:	lea    rdx,[rbp-0x70]
   140001660:	call   QWORD PTR [rip+0x69da]        # 0x140008040
   140001666:	test   eax,eax
   140001668:	jne    0x140001906
   14000166e:	xor    ebx,ebx
   140001670:	mov    DWORD PTR [rsp+0x40],0x100
   140001678:	lea    rdi,[rbp+0x190]
   14000167f:	mov    ecx,0x200
   140001684:	rep stos BYTE PTR es:[rdi],al
   140001686:	mov    rcx,QWORD PTR [rsp+0x50]
   14000168b:	lea    rax,[rsp+0x70]
   140001690:	mov    QWORD PTR [rsp+0x38],rax
   140001695:	lea    r9,[rsp+0x40]
   14000169a:	and    QWORD PTR [rsp+0x30],rbx
   14000169f:	lea    r8,[rbp+0x190]
   1400016a6:	and    QWORD PTR [rsp+0x28],rbx
   1400016ab:	xor    edx,edx
   1400016ad:	and    QWORD PTR [rsp+0x20],rbx
   1400016b2:	call   QWORD PTR [rip+0x6998]        # 0x140008050
   1400016b8:	test   eax,eax
   1400016ba:	jne    0x140001733
   1400016bc:	mov    rcx,QWORD PTR [rsi+0x28]
   1400016c0:	lea    edi,[rax+0x1]
   1400016c3:	mov    r8d,edi
   1400016c6:	lea    rdx,[rbp+0x190]
   1400016cd:	xor    r9d,r9d
   1400016d0:	call   0x140003904
   1400016d5:	test   eax,eax
   1400016d7:	je     0x14000172e
   1400016d9:	add    ebx,edi
   1400016db:	mov    DWORD PTR [rsp+0x40],0x100
   1400016e3:	xor    eax,eax
   1400016e5:	lea    rdi,[rbp+0x190]
   1400016ec:	mov    ecx,0x200
   1400016f1:	lea    r9,[rsp+0x40]
   1400016f6:	rep stos BYTE PTR es:[rdi],al
   1400016f8:	mov    rcx,QWORD PTR [rsp+0x50]
   1400016fd:	lea    rax,[rsp+0x70]
   140001702:	mov    QWORD PTR [rsp+0x38],rax
   140001707:	lea    r8,[rbp+0x190]
   14000170e:	and    QWORD PTR [rsp+0x30],r13
   140001713:	mov    edx,ebx
   140001715:	and    QWORD PTR [rsp+0x28],r13
   14000171a:	and    QWORD PTR [rsp+0x20],r13
   14000171f:	call   QWORD PTR [rip+0x692b]        # 0x140008050
   140001725:	cmp    eax,0x103
   14000172a:	je     0x140001740
   14000172c:	jmp    0x1400016b8
   14000172e:	mov    r12d,edi
   140001731:	jmp    0x140001745
   140001733:	mov    ecx,eax
   140001735:	call   QWORD PTR [rip+0x695d]        # 0x140008098
   14000173b:	call   0x140002874
   140001740:	mov    edi,0x1
   140001745:	mov    rcx,QWORD PTR [rsp+0x50]
   14000174a:	call   QWORD PTR [rip+0x6908]        # 0x140008058
   140001750:	and    QWORD PTR [rsp+0x50],r13
   140001755:	xor    ebx,ebx
   140001757:	cmp    r12d,edi
   14000175a:	jne    0x1400017d4
   14000175c:	mov    rax,QWORD PTR [rsp+0x78]
   140001761:	test   rax,rax
   140001764:	je     0x140001839
   14000176a:	cmp    rax,rdi
   14000176d:	jne    0x14000178f
   14000176f:	cmp    r15d,edi
   140001772:	jne    0x14000178f
   140001774:	mov    rcx,QWORD PTR [rsi+0x20]
   140001778:	lea    rdx,[rbp-0x70]
   14000177c:	xor    r9d,r9d
   14000177f:	mov    r8d,edi
   140001782:	call   0x140003904
   140001787:	test   eax,eax
   140001789:	je     0x140001839
   14000178f:	xor    r8d,r8d
   140001792:	mov    edx,0xa1
   140001797:	call   0x140002d14
   14000179c:	mov    rdx,rax
   14000179f:	lea    r8,[rbp-0x70]
   1400017a3:	mov    ecx,edi
   1400017a5:	call   0x140002738
   1400017aa:	mov    DWORD PTR [rsp+0x6c],edi
   1400017ae:	jmp    0x1400017d4
   1400017b0:	cmp    r15d,edx
   1400017b3:	jne    0x1400017cf
   1400017b5:	test   rdi,rdi
   1400017b8:	mov    edi,0x1
   1400017bd:	je     0x14000191c
   1400017c3:	cmp    DWORD PTR [rsp+0x6c],edi
   1400017c7:	je     0x14000186d
   1400017cd:	jmp    0x1400017d4
   1400017cf:	mov    edi,0x1
   1400017d4:	mov    edx,DWORD PTR [rsp+0x64]
   1400017d8:	lea    r9,[rsp+0x40]
   1400017dd:	add    edx,edi
   1400017df:	mov    DWORD PTR [rsp+0x40],0x100
   1400017e7:	xor    eax,eax
   1400017e9:	mov    DWORD PTR [rsp+0x64],edx
   1400017ed:	lea    rdi,[rbp-0x70]
   1400017f1:	mov    ecx,0x200
   1400017f6:	rep stos BYTE PTR es:[rdi],al
   1400017f8:	mov    rcx,QWORD PTR [rsp+0x48]
   1400017fd:	lea    rax,[rsp+0x70]
   140001802:	mov    QWORD PTR [rsp+0x38],rax
   140001807:	lea    r8,[rbp-0x70]
   14000180b:	and    QWORD PTR [rsp+0x30],r13
   140001810:	and    QWORD PTR [rsp+0x28],r13
   140001815:	and    QWORD PTR [rsp+0x20],r13
   14000181a:	call   QWORD PTR [rip+0x6830]        # 0x140008050
   140001820:	cmp    eax,0x103
   140001825:	je     0x140001924
   14000182b:	mov    rcx,QWORD PTR [rsp+0x78]
   140001830:	mov    rdi,QWORD PTR [rbp-0x80]
   140001834:	jmp    0x140001602
   140001839:	lea    rax,[rbp+0x190]
   140001840:	mov    ecx,0x3
   140001845:	lea    r9,[rbp-0x70]
   140001849:	mov    QWORD PTR [rsp+0x20],rax
   14000184e:	lea    r8,[rip+0x6bfb]        # 0x140008450
   140001855:	mov    r14d,edi
   140001858:	lea    rdx,[rip+0x6c49]        # 0x1400084a8
   14000185f:	call   0x140002738
   140001864:	test   eax,eax
   140001866:	jne    0x140001874
   140001868:	call   0x140002874
   14000186d:	mov    ebx,edi
   14000186f:	jmp    0x140001929
   140001874:	call   0x14000267c
   140001879:	lea    rcx,[rsp+0x50]
   14000187e:	mov    r9d,edi
   140001881:	mov    QWORD PTR [rsp+0x20],rcx
   140001886:	xor    r8d,r8d
   140001889:	mov    rcx,QWORD PTR [rsp+0x58]
   14000188e:	mov    rdx,rax
   140001891:	call   QWORD PTR [rip+0x67a9]        # 0x140008040
   140001897:	test   eax,eax
   140001899:	je     0x1400018a5
   14000189b:	mov    ecx,eax
   14000189d:	call   QWORD PTR [rip+0x67f5]        # 0x140008098
   1400018a3:	jmp    0x140001868
   1400018a5:	and    QWORD PTR [rsp+0x28],rbx
   1400018aa:	lea    rdx,[rip+0x6c0f]        # 0x1400084c0
   1400018b1:	mov    rcx,QWORD PTR [rsp+0x50]
   1400018b6:	xor    r9d,r9d
   1400018b9:	and    QWORD PTR [rsp+0x20],rbx
   1400018be:	xor    r8d,r8d
   1400018c1:	call   QWORD PTR [rip+0x6761]        # 0x140008028
   1400018c7:	mov    rcx,QWORD PTR [rsp+0x50]
   1400018cc:	mov    edi,eax
   1400018ce:	test   eax,0xfffffffd
   1400018d3:	je     0x1400018f2
   1400018d5:	call   QWORD PTR [rip+0x677d]        # 0x140008058
   1400018db:	mov    ecx,edi
   1400018dd:	call   QWORD PTR [rip+0x67b5]        # 0x140008098
   1400018e3:	call   0x140002874
   1400018e8:	mov    edi,0x1
   1400018ed:	jmp    0x14000186d
   1400018f2:	call   QWORD PTR [rip+0x6760]        # 0x140008058
   1400018f8:	test   edi,edi
   1400018fa:	mov    edi,0x1
   1400018ff:	jne    0x140001929
   140001901:	mov    r13d,edi
   140001904:	jmp    0x140001929
   140001906:	mov    edi,0x1
   14000190b:	mov    ecx,eax
   14000190d:	mov    ebx,edi
   14000190f:	call   QWORD PTR [rip+0x6783]        # 0x140008098
   140001915:	call   0x140002874
   14000191a:	jmp    0x140001929
   14000191c:	mov    r13d,edi
   14000191f:	mov    r14d,edi
   140001922:	jmp    0x140001929
   140001924:	mov    edi,0x1
   140001929:	mov    rcx,QWORD PTR [rsp+0x48]
   14000192e:	call   QWORD PTR [rip+0x6724]        # 0x140008058
   140001934:	and    QWORD PTR [rsp+0x48],0x0
   14000193a:	cmp    ebx,edi
   14000193c:	je     0x14000156f
   140001942:	test   r14d,r14d
   140001945:	jne    0x140001a8c
   14000194b:	mov    eax,DWORD PTR [rsp+0x68]
   14000194f:	cmp    eax,edi
   140001951:	jne    0x140001a5c
   140001957:	test   r15d,r15d
   14000195a:	jne    0x1400019b5
   14000195c:	xor    r8d,r8d
   14000195f:	mov    edx,0x99
   140001964:	call   0x140002d14
   140001969:	mov    r8,QWORD PTR [rsi+0x20]
   14000196d:	mov    rdx,rax
   140001970:	mov    ecx,edi
   140001972:	call   0x140002738
   140001977:	mov    rcx,QWORD PTR [rsp+0x58]
   14000197c:	call   QWORD PTR [rip+0x66d6]        # 0x140008058
   140001982:	mov    eax,r14d
   140001985:	mov    rcx,QWORD PTR [rbp+0x390]
   14000198c:	xor    rcx,rsp
   14000198f:	call   0x140007340
   140001994:	lea    r11,[rsp+0x4a0]
   14000199c:	mov    rbx,QWORD PTR [r11+0x38]
   1400019a0:	mov    rsi,QWORD PTR [r11+0x40]
   1400019a4:	mov    rdi,QWORD PTR [r11+0x48]
   1400019a8:	mov    rsp,r11
   1400019ab:	pop    r15
   1400019ad:	pop    r14
   1400019af:	pop    r13
   1400019b1:	pop    r12
   1400019b3:	pop    rbp
   1400019b4:	ret    
   1400019b5:	cmp    DWORD PTR [rsp+0x60],edi
   1400019b9:	jne    0x140001977
   1400019bb:	cmp    r15d,edi
   1400019be:	jne    0x140001977
   1400019c0:	test   r12d,r12d
   1400019c3:	jne    0x140001977
   1400019c5:	mov    r9,QWORD PTR [rsi+0x20]
   1400019c9:	lea    r8,[rip+0x6a80]        # 0x140008450
   1400019d0:	lea    rdx,[rip+0x6b09]        # 0x1400084e0
   1400019d7:	lea    ecx,[r12+0x2]
   1400019dc:	call   0x140002738
   1400019e1:	test   eax,eax
   1400019e3:	je     0x1400014d3
   1400019e9:	call   0x14000267c
   1400019ee:	lea    rcx,[rsp+0x48]
   1400019f3:	mov    r9d,0x20006
   1400019f9:	mov    QWORD PTR [rsp+0x20],rcx
   1400019fe:	xor    r8d,r8d
   140001a01:	mov    rcx,QWORD PTR [rsp+0x58]
   140001a06:	mov    rdx,rax
   140001a09:	call   QWORD PTR [rip+0x6631]        # 0x140008040
   140001a0f:	test   eax,eax
   140001a11:	jne    0x140001558
   140001a17:	mov    rdx,QWORD PTR [rsi+0x28]
   140001a1b:	mov    rcx,QWORD PTR [rsp+0x48]
   140001a20:	call   0x140001ac0
   140001a25:	test   eax,eax
   140001a27:	jne    0x140001a3e
   140001a29:	mov    rcx,QWORD PTR [rsp+0x58]
   140001a2e:	call   QWORD PTR [rip+0x6624]        # 0x140008058
   140001a34:	mov    rcx,QWORD PTR [rsp+0x48]
   140001a39:	jmp    0x140001574
   140001a3e:	mov    rcx,QWORD PTR [rsp+0x50]
   140001a43:	mov    r14d,edi
   140001a46:	call   QWORD PTR [rip+0x660c]        # 0x140008058
   140001a4c:	mov    rcx,QWORD PTR [rsp+0x48]
   140001a51:	call   QWORD PTR [rip+0x6601]        # 0x140008058
   140001a57:	jmp    0x140001977
   140001a5c:	test   eax,eax
   140001a5e:	jne    0x140001977
   140001a64:	cmp    DWORD PTR [rsp+0x60],edi
   140001a68:	jne    0x140001977
   140001a6e:	test   r12d,r12d
   140001a71:	jne    0x140001977
   140001a77:	xor    r8d,r8d
   140001a7a:	mov    edx,0xa0
   140001a7f:	call   0x140002d14
   140001a84:	mov    rcx,rax
   140001a87:	call   0x1400026bc
   140001a8c:	cmp    r14d,edi
   140001a8f:	jne    0x140001977
   140001a95:	test   r13d,r13d
   140001a98:	jne    0x140001977
   140001a9e:	xor    r8d,r8d
   140001aa1:	mov    edx,0xa6
   140001aa6:	call   0x140002d14
   140001aab:	mov    rcx,rax
   140001aae:	call   0x1400026bc
   140001ab3:	jmp    0x1400014d8
   140001ab8:	int3   
   140001ab9:	int3   
   140001aba:	int3   
   140001abb:	int3   
   140001abc:	int3   
   140001abd:	int3   
   140001abe:	int3   
   140001abf:	int3   
   140001ac0:	rex push rbp
   140001ac2:	push   rbx
   140001ac3:	push   rsi
   140001ac4:	push   rdi
   140001ac5:	push   r13
   140001ac7:	push   r14
   140001ac9:	push   r15
   140001acb:	mov    rbp,rsp
   140001ace:	sub    rsp,0x60
   140001ad2:	and    DWORD PTR [rbp+0x40],0x0
   140001ad6:	mov    rdi,rdx
   140001ad9:	and    DWORD PTR [rbp+0x50],0x0
   140001add:	mov    r14,rcx
   140001ae0:	and    QWORD PTR [rbp+0x58],0x0
   140001ae5:	test   rcx,rcx
   140001ae8:	je     0x140001c55
   140001aee:	test   rdx,rdx
   140001af1:	je     0x140001c55
   140001af7:	lea    r13,[rip+0x69f2]        # 0x1400084f0
   140001afe:	test   r13,r13
   140001b01:	jne    0x140001b07
   140001b03:	xor    eax,eax
   140001b05:	jmp    0x140001b10
   140001b07:	mov    rcx,r13
   140001b0a:	call   QWORD PTR [rip+0x6600]        # 0x140008110
   140001b10:	lea    r15d,[rax+0x2]
   140001b14:	lea    esi,[r15+r15*1]
   140001b18:	mov    ecx,esi
   140001b1a:	call   0x14000444c
   140001b1f:	mov    QWORD PTR [rbp-0x10],rax
   140001b23:	mov    rbx,rax
   140001b26:	test   rax,rax
   140001b29:	je     0x140001c60
   140001b2f:	mov    r8d,r15d
   140001b32:	mov    rdx,r13
   140001b35:	mov    rcx,rax
   140001b38:	call   0x14000376c
   140001b3d:	lea    rax,[rbp+0x50]
   140001b41:	xor    r8d,r8d
   140001b44:	mov    QWORD PTR [rsp+0x40],rax
   140001b49:	lea    r9,[rip+0x69ec]        # 0x14000853c
   140001b50:	lea    rax,[rbp+0x58]
   140001b54:	mov    rdx,rdi
   140001b57:	mov    QWORD PTR [rsp+0x38],rax
   140001b5c:	mov    rcx,r14
   140001b5f:	and    QWORD PTR [rsp+0x30],0x0
   140001b65:	mov    DWORD PTR [rsp+0x28],0x20006
   140001b6d:	and    DWORD PTR [rsp+0x20],0x0
   140001b72:	call   QWORD PTR [rip+0x64a8]        # 0x140008020
   140001b78:	test   eax,eax
   140001b7a:	je     0x140001b97
   140001b7c:	mov    ecx,eax
   140001b7e:	call   QWORD PTR [rip+0x6514]        # 0x140008098
   140001b84:	call   0x140002874
   140001b89:	lea    rcx,[rbp-0x10]
   140001b8d:	call   0x140004370
   140001b92:	jmp    0x140001c65
   140001b97:	mov    rcx,QWORD PTR [rbp+0x58]
   140001b9b:	lea    rdx,[rip+0x699e]        # 0x140008540
   140001ba2:	mov    DWORD PTR [rsp+0x28],esi
   140001ba6:	mov    r9d,0x2
   140001bac:	xor    r8d,r8d
   140001baf:	mov    QWORD PTR [rsp+0x20],rbx
   140001bb4:	call   QWORD PTR [rip+0x64a6]        # 0x140008060
   140001bba:	test   eax,eax
   140001bbc:	je     0x140001bdc
   140001bbe:	mov    ecx,eax
   140001bc0:	call   QWORD PTR [rip+0x64d2]        # 0x140008098
   140001bc6:	call   0x140002874
   140001bcb:	mov    rcx,QWORD PTR [rbp+0x58]
   140001bcf:	call   QWORD PTR [rip+0x6483]        # 0x140008058
   140001bd5:	and    QWORD PTR [rbp+0x58],0x0
   140001bda:	jmp    0x140001b89
   140001bdc:	mov    rcx,QWORD PTR [rbp+0x58]
   140001be0:	lea    rax,[rbp+0x40]
   140001be4:	mov    ebx,0x4
   140001be9:	mov    DWORD PTR [rbp+0x40],0x7
   140001bf0:	mov    DWORD PTR [rsp+0x28],ebx
   140001bf4:	lea    rdx,[rip+0x696d]        # 0x140008568
   140001bfb:	mov    r9d,ebx
   140001bfe:	mov    QWORD PTR [rsp+0x20],rax
   140001c03:	xor    r8d,r8d
   140001c06:	call   QWORD PTR [rip+0x6454]        # 0x140008060
   140001c0c:	test   eax,eax
   140001c0e:	jne    0x140001bbe
   140001c10:	mov    rcx,QWORD PTR [rbp+0x58]
   140001c14:	lea    rax,[rbp+0x40]
   140001c18:	lea    edi,[rbx-0x3]
   140001c1b:	mov    DWORD PTR [rsp+0x28],ebx
   140001c1f:	mov    r9d,ebx
   140001c22:	mov    DWORD PTR [rbp+0x40],edi
   140001c25:	xor    r8d,r8d
   140001c28:	mov    QWORD PTR [rsp+0x20],rax
   140001c2d:	lea    rdx,[rip+0x688c]        # 0x1400084c0
   140001c34:	call   QWORD PTR [rip+0x6426]        # 0x140008060
   140001c3a:	test   eax,eax
   140001c3c:	jne    0x140001bbe
   140001c3e:	mov    rcx,QWORD PTR [rbp+0x58]
   140001c42:	call   QWORD PTR [rip+0x6410]        # 0x140008058
   140001c48:	lea    rcx,[rbp-0x10]
   140001c4c:	call   0x140004370
   140001c51:	mov    eax,edi
   140001c53:	jmp    0x140001c67
   140001c55:	mov    ecx,0x57
   140001c5a:	call   QWORD PTR [rip+0x6438]        # 0x140008098
   140001c60:	call   0x140002874
   140001c65:	xor    eax,eax
   140001c67:	add    rsp,0x60
   140001c6b:	pop    r15
   140001c6d:	pop    r14
   140001c6f:	pop    r13
   140001c71:	pop    rdi
   140001c72:	pop    rsi
   140001c73:	pop    rbx
   140001c74:	pop    rbp
   140001c75:	ret    
   140001c76:	int3   
   140001c77:	int3   
   140001c78:	int3   
   140001c79:	int3   
   140001c7a:	int3   
   140001c7b:	int3   
   140001c7c:	mov    QWORD PTR [rsp+0x8],rbx
   140001c81:	push   rbp
   140001c82:	push   rsi
   140001c83:	push   rdi
   140001c84:	push   r12
   140001c86:	push   r13
   140001c88:	push   r14
   140001c8a:	push   r15
   140001c8c:	lea    rbp,[rsp-0x380]
   140001c94:	sub    rsp,0x480
   140001c9b:	mov    rax,QWORD PTR [rip+0x8366]        # 0x14000a008
   140001ca2:	xor    rax,rsp
   140001ca5:	mov    QWORD PTR [rbp+0x370],rax
   140001cac:	mov    r15d,ecx
   140001caf:	lea    rdi,[rsp+0x30]
   140001cb4:	xor    eax,eax
   140001cb6:	lea    r14,[rip+0x691b]        # 0x1400085d8
   140001cbd:	mov    rbx,r8
   140001cc0:	mov    r13,rdx
   140001cc3:	mov    ecx,0x438
   140001cc8:	mov    rdx,r14
   140001ccb:	rep stos BYTE PTR es:[rdi],al
   140001ccd:	lea    esi,[rax+0x8]
   140001cd0:	mov    r12,r9
   140001cd3:	mov    r8d,esi
   140001cd6:	lea    rcx,[rsp+0x30]
   140001cdb:	call   0x1400036e4
   140001ce0:	lea    rax,[rip+0x68f9]        # 0x1400085e0
   140001ce7:	mov    QWORD PTR [rsp+0x40],0x20000
   140001cf0:	lea    edi,[rsi-0x7]
   140001cf3:	mov    QWORD PTR [rsp+0x50],rax
   140001cf8:	mov    r8d,esi
   140001cfb:	mov    DWORD PTR [rsp+0x48],edi
   140001cff:	mov    rdx,r14
   140001d02:	mov    DWORD PTR [rsp+0x38],0xa
   140001d0a:	lea    rcx,[rbp-0x58]
   140001d0e:	mov    QWORD PTR [rsp+0x68],rbx
   140001d13:	call   0x1400036e4
   140001d18:	lea    rax,[rip+0x68c5]        # 0x1400085e4
   140001d1f:	mov    DWORD PTR [rbp-0x40],edi
   140001d22:	mov    r8d,esi
   140001d25:	mov    QWORD PTR [rbp-0x38],rax
   140001d29:	mov    rdx,r14
   140001d2c:	mov    QWORD PTR [rbp-0x48],0x100c0
   140001d34:	lea    rcx,[rbp+0x20]
   140001d38:	mov    DWORD PTR [rbp-0x50],edi
   140001d3b:	call   0x1400036e4
   140001d40:	lea    rax,[rip+0x68a1]        # 0x1400085e8
   140001d47:	mov    DWORD PTR [rbp+0x38],edi
   140001d4a:	mov    r8d,esi
   140001d4d:	mov    QWORD PTR [rbp+0x40],rax
   140001d51:	mov    rdx,r14
   140001d54:	mov    QWORD PTR [rbp+0x30],0x100c0
   140001d5c:	lea    rcx,[rbp+0x98]
   140001d63:	mov    DWORD PTR [rbp+0x28],edi
   140001d66:	call   0x1400036e4
   140001d6b:	lea    rax,[rip+0x687a]        # 0x1400085ec
   140001d72:	mov    DWORD PTR [rbp+0xb0],edi
   140001d78:	mov    r8d,esi
   140001d7b:	mov    QWORD PTR [rbp+0xb8],rax
   140001d82:	mov    rdx,r14
   140001d85:	mov    QWORD PTR [rbp+0xa8],0x10010
   140001d90:	lea    rcx,[rbp+0x110]
   140001d97:	mov    DWORD PTR [rbp+0xa0],edi
   140001d9d:	call   0x1400036e4
   140001da2:	lea    rax,[rip+0x6847]        # 0x1400085f0
   140001da9:	mov    DWORD PTR [rbp+0x128],edi
   140001daf:	mov    r8d,esi
   140001db2:	mov    QWORD PTR [rbp+0x130],rax
   140001db9:	mov    rdx,r14
   140001dbc:	mov    QWORD PTR [rbp+0x120],0x100c0
   140001dc7:	lea    rcx,[rbp+0x188]
   140001dce:	mov    DWORD PTR [rbp+0x118],edi
   140001dd4:	call   0x1400036e4
   140001dd9:	lea    edx,[rsi+0x62]
   140001ddc:	mov    DWORD PTR [rbp+0x1a0],edi
   140001de2:	lea    r8d,[rsi-0x6]
   140001de6:	mov    QWORD PTR [rbp+0x198],0x900c2
   140001df1:	mov    DWORD PTR [rbp+0x190],edi
   140001df7:	call   0x140002d14
   140001dfc:	xor    esi,esi
   140001dfe:	mov    r14,rax
   140001e01:	test   rax,rax
   140001e04:	jne    0x140001e0a
   140001e06:	mov    edi,esi
   140001e08:	jmp    0x140001e15
   140001e0a:	mov    rcx,rax
   140001e0d:	call   QWORD PTR [rip+0x62fd]        # 0x140008110
   140001e13:	mov    edi,eax
   140001e15:	lea    rax,[rip+0x6774]        # 0x140008590
   140001e1c:	test   rax,rax
   140001e1f:	jne    0x140001e25
   140001e21:	mov    eax,esi
   140001e23:	jmp    0x140001e2e
   140001e25:	mov    rcx,rax
   140001e28:	call   QWORD PTR [rip+0x62e2]        # 0x140008110
   140001e2e:	lea    esi,[rdi+0x1]
   140001e31:	add    esi,eax
   140001e33:	lea    ecx,[rsi+rsi*1]
   140001e36:	call   0x14000444c
   140001e3b:	mov    rdi,rax
   140001e3e:	xor    eax,eax
   140001e40:	test   rdi,rdi
   140001e43:	je     0x140001e68
   140001e45:	mov    r8d,esi
   140001e48:	mov    WORD PTR [rdi],ax
   140001e4b:	mov    rdx,r14
   140001e4e:	mov    rcx,rdi
   140001e51:	call   0x14000376c
   140001e56:	mov    r8d,esi
   140001e59:	lea    rdx,[rip+0x6730]        # 0x140008590
   140001e60:	mov    rcx,rdi
   140001e63:	call   0x140003810
   140001e68:	lea    rax,[rip+0x6785]        # 0x1400085f4
   140001e6f:	mov    QWORD PTR [rbp+0x1b8],rdi
   140001e76:	mov    esi,0x8
   140001e7b:	mov    QWORD PTR [rbp+0x1a8],rax
   140001e82:	mov    r8d,esi
   140001e85:	lea    rdx,[rip+0x674c]        # 0x1400085d8
   140001e8c:	lea    rcx,[rbp+0x200]
   140001e93:	call   0x1400036e4
   140001e98:	lea    rax,[rip+0x6759]        # 0x1400085f8
   140001e9f:	mov    QWORD PTR [rbp+0x210],0x100c0
   140001eaa:	lea    r14d,[rsi-0x7]
   140001eae:	mov    QWORD PTR [rbp+0x220],rax
   140001eb5:	mov    r8d,esi
   140001eb8:	mov    DWORD PTR [rbp+0x218],r14d
   140001ebf:	lea    rdx,[rip+0x6712]        # 0x1400085d8
   140001ec6:	mov    DWORD PTR [rbp+0x208],r14d
   140001ecd:	lea    rcx,[rbp+0x278]
   140001ed4:	call   0x1400036e4
   140001ed9:	lea    rax,[rip+0x6720]        # 0x140008600
   140001ee0:	mov    DWORD PTR [rbp+0x290],r14d
   140001ee7:	lea    rdi,[rbx+0x40]
   140001eeb:	mov    QWORD PTR [rbp+0x298],rax
   140001ef2:	mov    r8d,esi
   140001ef5:	mov    QWORD PTR [rbp+0x288],0x80000
   140001f00:	lea    rdx,[rip+0x66d1]        # 0x1400085d8
   140001f07:	mov    DWORD PTR [rbp+0x280],0x3
   140001f11:	lea    rcx,[rbp+0x2f0]
   140001f18:	mov    QWORD PTR [rbp+0x2b0],rdi
   140001f1f:	call   0x1400036e4
   140001f24:	lea    rax,[rip+0x66dd]        # 0x140008608
   140001f2b:	mov    DWORD PTR [rbp+0x308],r14d
   140001f32:	mov    QWORD PTR [rbp+0x310],rax
   140001f39:	mov    rdx,r13
   140001f3c:	lea    rax,[rsp+0x30]
   140001f41:	mov    QWORD PTR [rbp+0x300],0x900c0
   140001f4c:	mov    ecx,r15d
   140001f4f:	mov    QWORD PTR [rsp+0x20],rax
   140001f54:	mov    DWORD PTR [rbp+0x2f8],r14d
   140001f5b:	call   0x140006428
   140001f60:	xor    esi,esi
   140001f62:	test   eax,eax
   140001f64:	je     0x140002259
   140001f6a:	cmp    DWORD PTR [rbx],r14d
   140001f6d:	jne    0x140001fa0
   140001f6f:	lea    ecx,[rsi+0x2]
   140001f72:	cmp    r15d,ecx
   140001f75:	jle    0x1400021cb
   140001f7b:	mov    ecx,0x800401e4
   140001f80:	call   QWORD PTR [rip+0x6112]        # 0x140008098
   140001f86:	mov    edx,0xa3
   140001f8b:	xor    r8d,r8d
   140001f8e:	call   0x140002d14
   140001f93:	mov    rcx,rax
   140001f96:	call   0x1400026bc
   140001f9b:	jmp    0x140002259
   140001fa0:	mov    eax,DWORD PTR [rdi]
   140001fa2:	sub    eax,r14d
   140001fa5:	cmp    eax,0x3e7
   140001faa:	ja     0x14000222b
   140001fb0:	mov    rax,QWORD PTR [rbp+0x1c0]
   140001fb7:	lea    rdi,[rbx+0x18]
   140001fbb:	mov    rcx,QWORD PTR [rbp+0x58]
   140001fbf:	mov    rdx,QWORD PTR [rbp-0x20]
   140001fc3:	mov    r8,QWORD PTR [rbp+0xd0]
   140001fca:	mov    QWORD PTR [rbx+0x30],rax
   140001fce:	mov    rax,QWORD PTR [rbp+0x148]
   140001fd5:	mov    QWORD PTR [rbx+0x20],rax
   140001fd9:	mov    rax,QWORD PTR [rbp+0x238]
   140001fe0:	mov    QWORD PTR [rbx+0x28],rax
   140001fe4:	mov    rax,QWORD PTR [rbp+0x328]
   140001feb:	mov    QWORD PTR [rbx+0x38],rax
   140001fef:	mov    QWORD PTR [rbx+0x8],rdx
   140001ff3:	mov    QWORD PTR [rbx+0x10],rcx
   140001ff7:	mov    QWORD PTR [rdi],r8
   140001ffa:	test   rcx,rcx
   140001ffd:	je     0x140002019
   140001fff:	test   rdx,rdx
   140002002:	jne    0x140002019
   140002004:	mov    ecx,0x800401e4
   140002009:	call   QWORD PTR [rip+0x6089]        # 0x140008098
   14000200f:	mov    edx,0x9a
   140002014:	jmp    0x140001f8b
   140002019:	test   r8,r8
   14000201c:	je     0x14000202d
   14000201e:	test   rcx,rcx
   140002021:	jne    0x14000202d
   140002023:	mov    edx,0x9b
   140002028:	jmp    0x140001f8b
   14000202d:	test   rdx,rdx
   140002030:	je     0x1400020d4
   140002036:	mov    r15d,0xfe
   14000203c:	mov    r13d,0x1fc
   140002042:	test   rcx,rcx
   140002045:	jne    0x140002066
   140002047:	mov    ecx,r13d
   14000204a:	mov    DWORD PTR [rbx+0x4c],r15d
   14000204e:	call   0x14000444c
   140002053:	mov    QWORD PTR [rbx+0x10],rax
   140002057:	test   rax,rax
   14000205a:	jne    0x140002071
   14000205c:	call   0x140002874
   140002061:	jmp    0x140002259
   140002066:	call   QWORD PTR [rip+0x60a4]        # 0x140008110
   14000206c:	inc    eax
   14000206e:	mov    DWORD PTR [rbx+0x4c],eax
   140002071:	cmp    QWORD PTR [rdi],rsi
   140002074:	jne    0x14000208e
   140002076:	mov    DWORD PTR [r12],r14d
   14000207a:	mov    ecx,r13d
   14000207d:	mov    DWORD PTR [rbx+0x50],r15d
   140002081:	call   0x14000444c
   140002086:	mov    QWORD PTR [rdi],rax
   140002089:	test   rax,rax
   14000208c:	je     0x14000205c
   14000208e:	cmp    DWORD PTR [rbp+0xb4],esi
   140002094:	je     0x1400020d4
   140002096:	lea    rdx,[rip+0x656f]        # 0x14000860c
   14000209d:	mov    rcx,QWORD PTR [rdi]
   1400020a0:	cmp    QWORD PTR [rbp+0xd0],rsi
   1400020a7:	jne    0x1400020b4
   1400020a9:	mov    r8d,DWORD PTR [rbx+0x50]
   1400020ad:	call   0x14000376c
   1400020b2:	jmp    0x1400020d4
   1400020b4:	call   0x140003994
   1400020b9:	test   eax,eax
   1400020bb:	jne    0x1400020d4
   1400020bd:	mov    edx,r13d
   1400020c0:	mov    rcx,rdi
   1400020c3:	call   0x1400044ec
   1400020c8:	test   eax,eax
   1400020ca:	je     0x14000205c
   1400020cc:	mov    DWORD PTR [r12],r14d
   1400020d0:	mov    DWORD PTR [rbx+0x50],r15d
   1400020d4:	mov    rax,QWORD PTR [rbx+0x28]
   1400020d8:	test   rax,rax
   1400020db:	jne    0x140002119
   1400020dd:	cmp    QWORD PTR [rbx+0x20],rsi
   1400020e1:	jne    0x1400020f0
   1400020e3:	lea    rdx,[rip+0x7f4e]        # 0x14000a038
   1400020ea:	mov    QWORD PTR [rbx+0x20],rdx
   1400020ee:	jmp    0x14000210e
   1400020f0:	test   rax,rax
   1400020f3:	jne    0x140002119
   1400020f5:	mov    rcx,QWORD PTR [rbx+0x20]
   1400020f9:	test   rcx,rcx
   1400020fc:	je     0x140002119
   1400020fe:	lea    rdx,[rip+0x7f33]        # 0x14000a038
   140002105:	call   0x140003994
   14000210a:	test   eax,eax
   14000210c:	jne    0x140002119
   14000210e:	lea    rax,[rip+0x7f0b]        # 0x14000a020
   140002115:	mov    QWORD PTR [rbx+0x28],rax
   140002119:	mov    rcx,QWORD PTR [rbx+0x20]
   14000211d:	test   rcx,rcx
   140002120:	je     0x140002142
   140002122:	xor    r9d,r9d
   140002125:	lea    rdx,[rip+0x64e4]        # 0x140008610
   14000212c:	mov    r8d,r14d
   14000212f:	call   0x140003904
   140002134:	test   eax,eax
   140002136:	jne    0x140002142
   140002138:	mov    edx,0xa7
   14000213d:	jmp    0x140001f8b
   140002142:	xor    r8d,r8d
   140002145:	lea    edx,[r8+0x65]
   140002149:	call   0x140002d14
   14000214e:	mov    rcx,QWORD PTR [rbx+0x30]
   140002152:	mov    rdx,rax
   140002155:	call   0x140003994
   14000215a:	test   eax,eax
   14000215c:	je     0x1400021c6
   14000215e:	xor    r8d,r8d
   140002161:	lea    edx,[r8+0x68]
   140002165:	call   0x140002d14
   14000216a:	mov    rcx,QWORD PTR [rbx+0x30]
   14000216e:	mov    rdx,rax
   140002171:	call   0x140003994
   140002176:	test   eax,eax
   140002178:	je     0x1400021e7
   14000217a:	xor    r8d,r8d
   14000217d:	lea    edx,[r8+0x66]
   140002181:	call   0x140002d14
   140002186:	mov    rcx,QWORD PTR [rbx+0x30]
   14000218a:	mov    rdx,rax
   14000218d:	call   0x140003994
   140002192:	test   eax,eax
   140002194:	je     0x140002201
   140002196:	xor    r8d,r8d
   140002199:	lea    edx,[r8+0x67]
   14000219d:	call   0x140002d14
   1400021a2:	mov    rcx,QWORD PTR [rbx+0x30]
   1400021a6:	mov    rdx,rax
   1400021a9:	call   0x140003994
   1400021ae:	test   eax,eax
   1400021b0:	je     0x140002220
   1400021b2:	mov    rcx,QWORD PTR [rbx+0x30]
   1400021b6:	lea    rdx,[rip+0x646b]        # 0x140008628
   1400021bd:	call   0x140003994
   1400021c2:	test   eax,eax
   1400021c4:	jne    0x1400021d3
   1400021c6:	mov    WORD PTR [rbx+0x44],r14w
   1400021cb:	mov    eax,r14d
   1400021ce:	jmp    0x14000225b
   1400021d3:	mov    rcx,QWORD PTR [rbx+0x30]
   1400021d7:	lea    rdx,[rip+0x645a]        # 0x140008638
   1400021de:	call   0x140003994
   1400021e3:	test   eax,eax
   1400021e5:	jne    0x1400021ed
   1400021e7:	mov    WORD PTR [rbx+0x44],si
   1400021eb:	jmp    0x1400021cb
   1400021ed:	mov    rcx,QWORD PTR [rbx+0x30]
   1400021f1:	lea    rdx,[rip+0x6450]        # 0x140008648
   1400021f8:	call   0x140003994
   1400021fd:	test   eax,eax
   1400021ff:	jne    0x14000220c
   140002201:	mov    ecx,0x2
   140002206:	mov    WORD PTR [rbx+0x44],cx
   14000220a:	jmp    0x1400021cb
   14000220c:	mov    rcx,QWORD PTR [rbx+0x30]
   140002210:	lea    rdx,[rip+0x6441]        # 0x140008658
   140002217:	call   0x140003994
   14000221c:	test   eax,eax
   14000221e:	jne    0x1400021cb
   140002220:	mov    eax,0x4
   140002225:	mov    WORD PTR [rbx+0x44],ax
   140002229:	jmp    0x1400021cb
   14000222b:	xor    r8d,r8d
   14000222e:	mov    edx,0xa5
   140002233:	call   0x140002d14
   140002238:	mov    rdx,rax
   14000223b:	mov    r9d,0x3e8
   140002241:	mov    r8d,r14d
   140002244:	mov    ecx,0x2
   140002249:	call   0x140002738
   14000224e:	mov    ecx,0x800401e4
   140002253:	call   QWORD PTR [rip+0x5e3f]        # 0x140008098
   140002259:	xor    eax,eax
   14000225b:	mov    rcx,QWORD PTR [rbp+0x370]
   140002262:	xor    rcx,rsp
   140002265:	call   0x140007340
   14000226a:	mov    rbx,QWORD PTR [rsp+0x4c0]
   140002272:	add    rsp,0x480
   140002279:	pop    r15
   14000227b:	pop    r14
   14000227d:	pop    r13
   14000227f:	pop    r12
   140002281:	pop    rdi
   140002282:	pop    rsi
   140002283:	pop    rbp
   140002284:	ret    
   140002285:	int3   
   140002286:	int3   
   140002287:	int3   
   140002288:	int3   
   140002289:	int3   
   14000228a:	int3   
   14000228b:	int3   
   14000228c:	rex push rbx
   14000228e:	sub    rsp,0x20
   140002292:	cmp    DWORD PTR [rcx+0x48],0x1
   140002296:	mov    rbx,rcx
   140002299:	jne    0x1400022a4
   14000229b:	mov    rcx,QWORD PTR [rcx+0x8]
   14000229f:	call   0x140004f68
   1400022a4:	lea    rcx,[rbx+0x8]
   1400022a8:	call   0x140004370
   1400022ad:	lea    rcx,[rbx+0x10]
   1400022b1:	call   0x140004370
   1400022b6:	lea    rcx,[rbx+0x18]
   1400022ba:	call   0x140004370
   1400022bf:	lea    rcx,[rbx+0x30]
   1400022c3:	call   0x140004370
   1400022c8:	lea    rcx,[rbx+0x38]
   1400022cc:	call   0x140004370
   1400022d1:	lea    rcx,[rbx+0x20]
   1400022d5:	lea    rax,[rip+0x7d5c]        # 0x14000a038
   1400022dc:	cmp    QWORD PTR [rcx],rax
   1400022df:	je     0x1400022e6
   1400022e1:	call   0x140004370
   1400022e6:	lea    rcx,[rbx+0x28]
   1400022ea:	lea    rdx,[rip+0x7d2f]        # 0x14000a020
   1400022f1:	cmp    QWORD PTR [rcx],rdx
   1400022f4:	je     0x1400022fb
   1400022f6:	call   0x140004370
   1400022fb:	mov    eax,0x1
   140002300:	add    rsp,0x20
   140002304:	pop    rbx
   140002305:	ret    
   140002306:	int3   
   140002307:	int3   
   140002308:	int3   
   140002309:	int3   
   14000230a:	int3   
   14000230b:	int3   
   14000230c:	rex push rbx
   14000230e:	sub    rsp,0x20
   140002312:	cmp    DWORD PTR [rip+0x83fb],0x1        # 0x14000a714
   140002319:	jne    0x140002344
   14000231b:	mov    rcx,QWORD PTR [rip+0x83e6]        # 0x14000a708
   140002322:	test   rcx,rcx
   140002325:	je     0x140002333
   140002327:	cmp    DWORD PTR [rcx],0x9
   14000232a:	jne    0x140002333
   14000232c:	mov    eax,0x1
   140002331:	jmp    0x140002378
   140002333:	call   QWORD PTR [rip+0x5e0f]        # 0x140008148
   140002339:	test   eax,eax
   14000233b:	jne    0x140002376
   14000233d:	mov    ecx,0x42b
   140002342:	jmp    0x140002370
   140002344:	xor    ebx,ebx
   140002346:	cmp    QWORD PTR [rip+0x83bb],rbx        # 0x14000a708
   14000234d:	jne    0x140002333
   14000234f:	lea    ecx,[rbx+0x18]
   140002352:	call   0x14000444c
   140002357:	test   rax,rax
   14000235a:	jne    0x14000237e
   14000235c:	mov    QWORD PTR [rip+0x83a5],rbx        # 0x14000a708
   140002363:	call   QWORD PTR [rip+0x5ddf]        # 0x140008148
   140002369:	test   eax,eax
   14000236b:	jne    0x140002376
   14000236d:	lea    ecx,[rax+0x8]
   140002370:	call   QWORD PTR [rip+0x5d22]        # 0x140008098
   140002376:	xor    eax,eax
   140002378:	add    rsp,0x20
   14000237c:	pop    rbx
   14000237d:	ret    
   14000237e:	mov    QWORD PTR [rax],0x9
   140002385:	mov    QWORD PTR [rax+0x8],rbx
   140002389:	mov    QWORD PTR [rax+0x10],rbx
   14000238d:	mov    QWORD PTR [rip+0x8374],rax        # 0x14000a708
   140002394:	cmp    DWORD PTR [rax],0x9
   140002397:	jne    0x140002363
   140002399:	lea    rdx,[rip+0x630c]        # 0x1400086ac
   1400023a0:	mov    rcx,rax
   1400023a3:	call   0x140006ad8
   1400023a8:	test   eax,eax
   1400023aa:	jne    0x140002363
   1400023ac:	call   0x140006d14
   1400023b1:	cmp    eax,0x1
   1400023b4:	jne    0x140002363
   1400023b6:	call   0x140006d14
   1400023bb:	cmp    eax,0x2
   1400023be:	jne    0x140002363
   1400023c0:	call   0x140006d14
   1400023c5:	cmp    eax,0x3
   1400023c8:	jne    0x140002363
   1400023ca:	xor    ecx,ecx
   1400023cc:	mov    DWORD PTR [rip+0x833e],0x1        # 0x14000a714
   1400023d6:	call   QWORD PTR [rip+0x5dac]        # 0x140008188
   1400023dc:	test   ax,ax
   1400023df:	setne  bl
   1400023e2:	mov    eax,ebx
   1400023e4:	jmp    0x140002378
   1400023e6:	int3   
   1400023e7:	int3   
   1400023e8:	int3   
   1400023e9:	int3   
   1400023ea:	int3   
   1400023eb:	int3   
   1400023ec:	rex push rbx
   1400023ee:	sub    rsp,0x20
   1400023f2:	cmp    DWORD PTR [rip+0x831b],0x0        # 0x14000a714
   1400023f9:	mov    ebx,ecx
   1400023fb:	je     0x140002447
   1400023fd:	mov    edx,0x3
   140002402:	call   0x140006e24
   140002407:	cmp    eax,ebx
   140002409:	jbe    0x140002447
   14000240b:	mov    r8d,ebx
   14000240e:	call   0x140006fa8
   140002413:	test   eax,eax
   140002415:	je     0x140002447
   140002417:	mov    r8d,ebx
   14000241a:	call   0x140006e6c
   14000241f:	mov    rbx,rax
   140002422:	test   rax,rax
   140002425:	je     0x140002447
   140002427:	mov    r8d,0x7
   14000242d:	lea    rdx,[rip+0x6270]        # 0x1400086a4
   140002434:	mov    rcx,rax
   140002437:	call   QWORD PTR [rip+0x5f0b]        # 0x140008348
   14000243d:	test   eax,eax
   14000243f:	jne    0x140002447
   140002441:	mov    rax,QWORD PTR [rbx+0x10]
   140002445:	jmp    0x140002449
   140002447:	xor    eax,eax
   140002449:	add    rsp,0x20
   14000244d:	pop    rbx
   14000244e:	ret    
   14000244f:	int3   
   140002450:	int3   
   140002451:	int3   
   140002452:	int3   
   140002453:	int3   
   140002454:	int3   
   140002455:	int3   
   140002456:	int3   
   140002457:	int3   
   140002458:	mov    QWORD PTR [rsp+0x8],rbx
   14000245d:	mov    QWORD PTR [rsp+0x18],rbp
   140002462:	push   rsi
   140002463:	push   rdi
   140002464:	push   r14
   140002466:	sub    rsp,0x20
   14000246a:	mov    r14d,r9d
   14000246d:	mov    edi,r8d
   140002470:	mov    rsi,rdx
   140002473:	mov    ebp,ecx
   140002475:	test   rdx,rdx
   140002478:	jne    0x140002486
   14000247a:	test   r8d,r8d
   14000247d:	jne    0x140002486
   14000247f:	xor    eax,eax
   140002481:	jmp    0x140002660
   140002486:	call   0x14000230c
   14000248b:	test   eax,eax
   14000248d:	je     0x14000247f
   14000248f:	mov    edx,0x3
   140002494:	call   0x140006e24
   140002499:	mov    r10d,eax
   14000249c:	cmp    eax,ebp
   14000249e:	ja     0x1400024e0
   1400024a0:	mov    rcx,QWORD PTR [rip+0x8261]        # 0x14000a708
   1400024a7:	xor    r8d,r8d
   1400024aa:	call   0x1400067b8
   1400024af:	test   rax,rax
   1400024b2:	je     0x14000247f
   1400024b4:	cmp    DWORD PTR [rax+0x4],0x10000
   1400024bb:	je     0x1400024c6
   1400024bd:	cmp    DWORD PTR [rax+0x4],0x80000
   1400024c4:	jne    0x14000247f
   1400024c6:	mov    rcx,QWORD PTR [rax+0x10]
   1400024ca:	test   rcx,rcx
   1400024cd:	je     0x14000247f
   1400024cf:	mov    edx,ebp
   1400024d1:	sub    edx,r10d
   1400024d4:	inc    edx
   1400024d6:	call   0x140006dc8
   1400024db:	cmp    eax,0xffffffff
   1400024de:	je     0x14000247f
   1400024e0:	mov    r8d,ebp
   1400024e3:	call   0x140006fa8
   1400024e8:	test   eax,eax
   1400024ea:	je     0x14000258f
   1400024f0:	mov    r8d,ebp
   1400024f3:	call   0x140006e6c
   1400024f8:	mov    rbx,rax
   1400024fb:	test   rax,rax
   1400024fe:	je     0x14000247f
   140002504:	mov    r8d,0x7
   14000250a:	lea    rdx,[rip+0x6193]        # 0x1400086a4
   140002511:	mov    rcx,rbx
   140002514:	call   QWORD PTR [rip+0x5e2e]        # 0x140008348
   14000251a:	test   eax,eax
   14000251c:	jne    0x14000247f
   140002522:	test   rsi,rsi
   140002525:	je     0x140002533
   140002527:	mov    rcx,rsi
   14000252a:	call   QWORD PTR [rip+0x5be0]        # 0x140008110
   140002530:	lea    edi,[rax+0x1]
   140002533:	mov    ecx,DWORD PTR [rbx+0x8]
   140002536:	cmp    edi,ecx
   140002538:	ja     0x140002549
   14000253a:	cmp    edi,0x100
   140002540:	jbe    0x140002569
   140002542:	lea    eax,[rdi+rdi*1]
   140002545:	cmp    eax,ecx
   140002547:	jae    0x140002569
   140002549:	test   ecx,ecx
   14000254b:	jne    0x140002636
   140002551:	lea    ecx,[rdi+rdi*1]
   140002554:	call   0x14000444c
   140002559:	mov    QWORD PTR [rbx+0x10],rax
   14000255d:	test   rax,rax
   140002560:	je     0x14000247f
   140002566:	mov    DWORD PTR [rbx+0x8],edi
   140002569:	mov    rcx,QWORD PTR [rbx+0x10]
   14000256d:	test   rcx,rcx
   140002570:	je     0x14000247f
   140002576:	test   rsi,rsi
   140002579:	je     0x140002649
   14000257f:	mov    r8d,edi
   140002582:	mov    rdx,rsi
   140002585:	call   0x14000376c
   14000258a:	jmp    0x14000265c
   14000258f:	mov    ecx,0x18
   140002594:	call   0x14000444c
   140002599:	mov    QWORD PTR [rsp+0x48],rax
   14000259e:	mov    rbx,rax
   1400025a1:	test   rax,rax
   1400025a4:	je     0x14000247f
   1400025aa:	and    DWORD PTR [rax+0x8],0x0
   1400025ae:	lea    rdx,[rip+0x60ef]        # 0x1400086a4
   1400025b5:	and    QWORD PTR [rax+0x10],0x0
   1400025ba:	mov    r8d,0x7
   1400025c0:	mov    rcx,rax
   1400025c3:	call   0x1400036e4
   1400025c8:	mov    rcx,QWORD PTR [rip+0x8139]        # 0x14000a708
   1400025cf:	xor    r8d,r8d
   1400025d2:	lea    edx,[r8+0x3]
   1400025d6:	call   0x1400067b8
   1400025db:	test   rax,rax
   1400025de:	je     0x14000261d
   1400025e0:	cmp    DWORD PTR [rax+0x4],0x80000
   1400025e7:	jne    0x14000261d
   1400025e9:	mov    rcx,QWORD PTR [rax+0x10]
   1400025ed:	xor    r8d,r8d
   1400025f0:	mov    edx,ebp
   1400025f2:	call   0x1400067b8
   1400025f7:	test   rax,rax
   1400025fa:	je     0x14000261d
   1400025fc:	test   DWORD PTR [rax+0x4],0xfffeffff
   140002603:	jne    0x14000261d
   140002605:	cmp    DWORD PTR [rax+0x4],0x0
   140002609:	jne    0x140002612
   14000260b:	mov    DWORD PTR [rax+0x4],0x10000
   140002612:	mov    QWORD PTR [rax+0x10],rbx
   140002616:	mov    eax,0x1
   14000261b:	jmp    0x14000261f
   14000261d:	xor    eax,eax
   14000261f:	test   eax,eax
   140002621:	jne    0x140002504
   140002627:	lea    rcx,[rsp+0x48]
   14000262c:	call   0x140004370
   140002631:	jmp    0x14000247f
   140002636:	lea    edx,[rdi+rdi*1]
   140002639:	lea    rcx,[rbx+0x10]
   14000263d:	call   0x1400044ec
   140002642:	test   eax,eax
   140002644:	jmp    0x140002560
   140002649:	cmp    r14d,0x1
   14000264d:	jne    0x14000265c
   14000264f:	mov    r8d,edi
   140002652:	xor    edx,edx
   140002654:	add    r8,r8
   140002657:	call   0x140007916
   14000265c:	mov    rax,QWORD PTR [rbx+0x10]
   140002660:	mov    rbx,QWORD PTR [rsp+0x40]
   140002665:	mov    rbp,QWORD PTR [rsp+0x50]
   14000266a:	add    rsp,0x20
   14000266e:	pop    r14
   140002670:	pop    rdi
   140002671:	pop    rsi
   140002672:	ret    
   140002673:	int3   
   140002674:	int3   
   140002675:	int3   
   140002676:	int3   
   140002677:	int3   
   140002678:	int3   
   140002679:	int3   
   14000267a:	int3   
   14000267b:	int3   
   14000267c:	mov    rcx,QWORD PTR [rip+0x8085]        # 0x14000a708
   140002683:	xor    eax,eax
   140002685:	test   rcx,rcx
   140002688:	je     0x1400026ab
   14000268a:	cmp    DWORD PTR [rcx],0x9
   14000268d:	jne    0x1400026ab
   14000268f:	cmp    DWORD PTR [rcx+0x4],eax
   140002692:	jbe    0x1400026b2
   140002694:	mov    rdx,QWORD PTR [rcx+0x8]
   140002698:	test   rdx,rdx
   14000269b:	je     0x1400026b2
   14000269d:	cmp    DWORD PTR [rdx+0x4],0x20000
   1400026a4:	jne    0x1400026b2
   1400026a6:	mov    rax,QWORD PTR [rdx+0x10]
   1400026aa:	ret    
   1400026ab:	lea    rax,[rip+0x5ffa]        # 0x1400086ac
   1400026b2:	ret    
   1400026b3:	int3   
   1400026b4:	int3   
   1400026b5:	int3   
   1400026b6:	int3   
   1400026b7:	int3   
   1400026b8:	int3   
   1400026b9:	int3   
   1400026ba:	int3   
   1400026bb:	int3   
   1400026bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400026c1:	push   rdi
   1400026c2:	sub    rsp,0x20
   1400026c6:	mov    rbx,rcx
   1400026c9:	call   QWORD PTR [rip+0x5a79]        # 0x140008148
   1400026cf:	mov    edi,eax
   1400026d1:	test   rbx,rbx
   1400026d4:	jne    0x1400026ed
   1400026d6:	call   QWORD PTR [rip+0x5a6c]        # 0x140008148
   1400026dc:	test   eax,eax
   1400026de:	jne    0x1400026e9
   1400026e0:	lea    ecx,[rbx+0x57]
   1400026e3:	call   QWORD PTR [rip+0x59af]        # 0x140008098
   1400026e9:	xor    eax,eax
   1400026eb:	jmp    0x140002727
   1400026ed:	call   0x14000230c
   1400026f2:	test   eax,eax
   1400026f4:	je     0x1400026e9
   1400026f6:	mov    rcx,QWORD PTR [rip+0x800b]        # 0x14000a708
   1400026fd:	mov    r8,rbx
   140002700:	xor    edx,edx
   140002702:	call   0x140006ed4
   140002707:	test   eax,eax
   140002709:	jne    0x14000271a
   14000270b:	call   QWORD PTR [rip+0x5a37]        # 0x140008148
   140002711:	test   eax,eax
   140002713:	jne    0x1400026e9
   140002715:	lea    ecx,[rax+0x8]
   140002718:	jmp    0x1400026e3
   14000271a:	mov    ecx,edi
   14000271c:	call   QWORD PTR [rip+0x5976]        # 0x140008098
   140002722:	mov    eax,0x1
   140002727:	mov    rbx,QWORD PTR [rsp+0x30]
   14000272c:	add    rsp,0x20
   140002730:	pop    rdi
   140002731:	ret    
   140002732:	int3   
   140002733:	int3   
   140002734:	int3   
   140002735:	int3   
   140002736:	int3   
   140002737:	int3   
   140002738:	mov    QWORD PTR [rsp+0x10],rdx
   14000273d:	mov    QWORD PTR [rsp+0x18],r8
   140002742:	mov    QWORD PTR [rsp+0x20],r9
   140002747:	push   rbx
   140002748:	push   rbp
   140002749:	push   rsi
   14000274a:	push   rdi
   14000274b:	push   r12
   14000274d:	push   r14
   14000274f:	sub    rsp,0x38
   140002753:	xor    r14d,r14d
   140002756:	mov    ebp,r14d
   140002759:	test   rdx,rdx
   14000275c:	jne    0x140002774
   14000275e:	call   QWORD PTR [rip+0x59e4]        # 0x140008148
   140002764:	test   eax,eax
   140002766:	jne    0x14000285c
   14000276c:	lea    ecx,[rax+0x57]
   14000276f:	jmp    0x140002856
   140002774:	test   ecx,ecx
   140002776:	jne    0x14000278a
   140002778:	mov    rcx,rdx
   14000277b:	call   0x1400026bc
   140002780:	mov    eax,0x1
   140002785:	jmp    0x14000285e
   14000278a:	lea    r12,[rsp+0x80]
   140002792:	test   r12,r12
   140002795:	je     0x140002847
   14000279b:	xor    edx,edx
   14000279d:	add    ebp,0x100
   1400027a3:	mov    r9d,0x1
   1400027a9:	mov    r8d,ebp
   1400027ac:	lea    ecx,[rdx+0x5]
   1400027af:	call   0x140002458
   1400027b4:	mov    rdi,rax
   1400027b7:	test   rax,rax
   1400027ba:	je     0x140002838
   1400027bc:	lea    rcx,[rbp-0x1]
   1400027c0:	mov    ebx,r14d
   1400027c3:	cmp    rcx,0x7ffffffe
   1400027ca:	mov    edx,0x80070057
   1400027cf:	cmova  ebx,edx
   1400027d2:	test   ebx,ebx
   1400027d4:	js     0x140002811
   1400027d6:	mov    r8,QWORD PTR [rsp+0x78]
   1400027db:	lea    rsi,[rbp-0x1]
   1400027df:	mov    rdx,rsi
   1400027e2:	mov    r9,r12
   1400027e5:	mov    rcx,rax
   1400027e8:	mov    ebx,r14d
   1400027eb:	call   QWORD PTR [rip+0x5b5f]        # 0x140008350
   1400027f1:	test   eax,eax
   1400027f3:	js     0x140002805
   1400027f5:	cdqe   
   1400027f7:	cmp    rax,rsi
   1400027fa:	ja     0x140002805
   1400027fc:	jne    0x140002819
   1400027fe:	mov    WORD PTR [rdi+rsi*2],r14w
   140002803:	jmp    0x140002819
   140002805:	mov    WORD PTR [rdi+rsi*2],r14w
   14000280a:	mov    ebx,0x8007007a
   14000280f:	jmp    0x140002819
   140002811:	test   ebp,ebp
   140002813:	je     0x140002819
   140002815:	mov    WORD PTR [rax],r14w
   140002819:	cmp    ebx,0x8007007a
   14000281f:	je     0x14000278a
   140002825:	test   ebx,ebx
   140002827:	jns    0x14000282e
   140002829:	movzx  ecx,bx
   14000282c:	jmp    0x140002856
   14000282e:	mov    rcx,rdi
   140002831:	call   0x1400026bc
   140002836:	jmp    0x14000285e
   140002838:	call   QWORD PTR [rip+0x590a]        # 0x140008148
   14000283e:	test   eax,eax
   140002840:	jne    0x14000285c
   140002842:	lea    ecx,[rax+0x8]
   140002845:	jmp    0x140002856
   140002847:	call   QWORD PTR [rip+0x58fb]        # 0x140008148
   14000284d:	test   eax,eax
   14000284f:	jne    0x14000285c
   140002851:	mov    ecx,0x42b
   140002856:	call   QWORD PTR [rip+0x583c]        # 0x140008098
   14000285c:	xor    eax,eax
   14000285e:	add    rsp,0x38
   140002862:	pop    r14
   140002864:	pop    r12
   140002866:	pop    rdi
   140002867:	pop    rsi
   140002868:	pop    rbp
   140002869:	pop    rbx
   14000286a:	ret    
   14000286b:	int3   
   14000286c:	int3   
   14000286d:	int3   
   14000286e:	int3   
   14000286f:	int3   
   140002870:	int3   
   140002871:	int3   
   140002872:	int3   
   140002873:	int3   
   140002874:	rex push rbx
   140002876:	sub    rsp,0x40
   14000287a:	xor    ebx,ebx
   14000287c:	mov    QWORD PTR [rsp+0x50],rbx
   140002881:	call   0x14000230c
   140002886:	test   eax,eax
   140002888:	je     0x14000290f
   14000288e:	call   QWORD PTR [rip+0x58b4]        # 0x140008148
   140002894:	mov    QWORD PTR [rsp+0x30],rbx
   140002899:	xor    r9d,r9d
   14000289c:	mov    r8d,eax
   14000289f:	mov    DWORD PTR [rsp+0x28],ebx
   1400028a3:	lea    rax,[rsp+0x50]
   1400028a8:	xor    edx,edx
   1400028aa:	mov    ecx,0x1300
   1400028af:	mov    QWORD PTR [rsp+0x20],rax
   1400028b4:	call   QWORD PTR [rip+0x58c6]        # 0x140008180
   1400028ba:	mov    rcx,QWORD PTR [rsp+0x50]
   1400028bf:	test   eax,eax
   1400028c1:	je     0x1400028de
   1400028c3:	test   rcx,rcx
   1400028c6:	je     0x1400028fc
   1400028c8:	call   0x1400026bc
   1400028cd:	mov    rcx,QWORD PTR [rsp+0x50]
   1400028d2:	mov    ebx,eax
   1400028d4:	call   QWORD PTR [rip+0x589e]        # 0x140008178
   1400028da:	mov    eax,ebx
   1400028dc:	jmp    0x140002911
   1400028de:	test   rcx,rcx
   1400028e1:	je     0x1400028fc
   1400028e3:	call   QWORD PTR [rip+0x588f]        # 0x140008178
   1400028e9:	call   QWORD PTR [rip+0x5859]        # 0x140008148
   1400028ef:	test   eax,eax
   1400028f1:	jne    0x1400028fc
   1400028f3:	lea    ecx,[rax+0x8]
   1400028f6:	call   QWORD PTR [rip+0x579c]        # 0x140008098
   1400028fc:	call   QWORD PTR [rip+0x5846]        # 0x140008148
   140002902:	test   eax,eax
   140002904:	jne    0x14000290f
   140002906:	lea    ecx,[rax+0x8]
   140002909:	call   QWORD PTR [rip+0x5789]        # 0x140008098
   14000290f:	xor    eax,eax
   140002911:	add    rsp,0x40
   140002915:	pop    rbx
   140002916:	ret    
   140002917:	int3   
   140002918:	int3   
   140002919:	int3   
   14000291a:	int3   
   14000291b:	int3   
   14000291c:	int3   
   14000291d:	int3   
   14000291e:	int3   
   14000291f:	int3   
   140002920:	mov    QWORD PTR [rsp+0x10],rbx
   140002925:	mov    QWORD PTR [rsp+0x18],rsi
   14000292a:	push   rdi
   14000292b:	sub    rsp,0x30
   14000292f:	and    DWORD PTR [rsp+0x40],0x0
   140002934:	mov    ebx,0x100
   140002939:	mov    r8d,ebx
   14000293c:	mov    r9d,0x1
   140002942:	xor    edx,edx
   140002944:	xor    ecx,ecx
   140002946:	call   0x140002458
   14000294b:	mov    rdi,rax
   14000294e:	test   rax,rax
   140002951:	jne    0x14000295a
   140002953:	mov    eax,0x8
   140002958:	jmp    0x1400029c7
   14000295a:	mov    r9d,0x1
   140002960:	mov    r8d,ebx
   140002963:	mov    ecx,r9d
   140002966:	xor    edx,edx
   140002968:	call   0x140002458
   14000296d:	mov    rsi,rax
   140002970:	test   rax,rax
   140002973:	je     0x140002953
   140002975:	mov    rcx,rax
   140002978:	call   0x1400045f4
   14000297d:	movsxd rbx,eax
   140002980:	mov    rcx,rdi
   140002983:	shr    rbx,1
   140002986:	dec    ebx
   140002988:	call   0x1400045f4
   14000298d:	movsxd r8,eax
   140002990:	lea    rcx,[rsp+0x40]
   140002995:	shr    r8,1
   140002998:	mov    r9,rsi
   14000299b:	dec    r8d
   14000299e:	mov    DWORD PTR [rsp+0x20],ebx
   1400029a2:	mov    rdx,rdi
   1400029a5:	call   QWORD PTR [rip+0x582d]        # 0x1400081d8
   1400029ab:	test   eax,eax
   1400029ad:	jne    0x1400029c7
   1400029af:	mov    rcx,rdi
   1400029b2:	call   0x1400026bc
   1400029b7:	mov    ecx,DWORD PTR [rsp+0x40]
   1400029bb:	test   eax,eax
   1400029bd:	mov    edx,0x8
   1400029c2:	cmove  ecx,edx
   1400029c5:	mov    eax,ecx
   1400029c7:	mov    rbx,QWORD PTR [rsp+0x48]
   1400029cc:	mov    rsi,QWORD PTR [rsp+0x50]
   1400029d1:	add    rsp,0x30
   1400029d5:	pop    rdi
   1400029d6:	ret    
   1400029d7:	int3   
   1400029d8:	int3   
   1400029d9:	int3   
   1400029da:	int3   
   1400029db:	int3   
   1400029dc:	int3   
   1400029dd:	int3   
   1400029de:	int3   
   1400029df:	int3   
   1400029e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400029e5:	push   rdi
   1400029e6:	sub    rsp,0x20
   1400029ea:	mov    rdi,rcx
   1400029ed:	call   0x140002874
   1400029f2:	xor    ebx,ebx
   1400029f4:	test   eax,eax
   1400029f6:	je     0x140002a0f
   1400029f8:	call   0x14000267c
   1400029fd:	mov    rdx,rax
   140002a00:	mov    rcx,rdi
   140002a03:	call   0x1400039e8
   140002a08:	test   eax,eax
   140002a0a:	setne  bl
   140002a0d:	mov    eax,ebx
   140002a0f:	mov    rbx,QWORD PTR [rsp+0x30]
   140002a14:	add    rsp,0x20
   140002a18:	pop    rdi
   140002a19:	ret    
   140002a1a:	int3   
   140002a1b:	int3   
   140002a1c:	int3   
   140002a1d:	int3   
   140002a1e:	int3   
   140002a1f:	int3   
   140002a20:	mov    QWORD PTR [rsp+0x8],rbx
   140002a25:	mov    QWORD PTR [rsp+0x10],rsi
   140002a2a:	push   rdi
   140002a2b:	sub    rsp,0x30
   140002a2f:	mov    ebx,edx
   140002a31:	mov    rdi,rcx
   140002a34:	test   rcx,rcx
   140002a37:	je     0x140002ab1
   140002a39:	test   edx,0xf0000
   140002a3f:	je     0x140002ab1
   140002a41:	bt     edx,0x10
   140002a45:	jae    0x140002a4c
   140002a47:	call   0x140002874
   140002a4c:	mov    esi,0x1
   140002a51:	test   sil,bl
   140002a54:	je     0x140002a5d
   140002a56:	mov    ecx,0x1389
   140002a5b:	jmp    0x140002a7f
   140002a5d:	test   bl,0x4
   140002a60:	je     0x140002a69
   140002a62:	mov    ecx,0x138a
   140002a67:	jmp    0x140002a7f
   140002a69:	test   bl,0x2
   140002a6c:	je     0x140002a75
   140002a6e:	mov    ecx,0x138c
   140002a73:	jmp    0x140002a7f
   140002a75:	test   bl,0x8
   140002a78:	je     0x140002a9d
   140002a7a:	mov    ecx,0x138b
   140002a7f:	call   0x140002cdc
   140002a84:	lea    r9,[rip+0x5be5]        # 0x140008670
   140002a8b:	mov    QWORD PTR [rsp+0x20],rax
   140002a90:	mov    r8d,esi
   140002a93:	mov    edx,esi
   140002a95:	mov    rcx,rdi
   140002a98:	call   0x140003d2c
   140002a9d:	call   0x14000267c
   140002aa2:	mov    rdx,rax
   140002aa5:	mov    rcx,rdi
   140002aa8:	call   0x1400039e8
   140002aad:	mov    eax,esi
   140002aaf:	jmp    0x140002ac6
   140002ab1:	call   QWORD PTR [rip+0x5691]        # 0x140008148
   140002ab7:	test   eax,eax
   140002ab9:	jne    0x140002ac4
   140002abb:	lea    ecx,[rax+0x57]
   140002abe:	call   QWORD PTR [rip+0x55d4]        # 0x140008098
   140002ac4:	xor    eax,eax
   140002ac6:	mov    rbx,QWORD PTR [rsp+0x40]
   140002acb:	mov    rsi,QWORD PTR [rsp+0x48]
   140002ad0:	add    rsp,0x30
   140002ad4:	pop    rdi
   140002ad5:	ret    
   140002ad6:	int3   
   140002ad7:	int3   
   140002ad8:	int3   
   140002ad9:	int3   
   140002ada:	int3   
   140002adb:	int3   
   140002adc:	mov    QWORD PTR [rsp+0x18],rbx
   140002ae1:	push   rdi
   140002ae2:	sub    rsp,0x20
   140002ae6:	mov    rax,QWORD PTR [rip+0x7c1b]        # 0x14000a708
   140002aed:	test   rax,rax
   140002af0:	je     0x140002bf7
   140002af6:	cmp    DWORD PTR [rax],0x9
   140002af9:	jne    0x140002bf7
   140002aff:	mov    edx,0x3
   140002b04:	call   0x140006e24
   140002b09:	test   eax,eax
   140002b0b:	je     0x140002bda
   140002b11:	lea    ebx,[rax-0x1]
   140002b14:	mov    edi,eax
   140002b16:	mov    r8d,ebx
   140002b19:	call   0x140006fa8
   140002b1e:	cmp    eax,0x10000
   140002b23:	jne    0x140002bce
   140002b29:	mov    r8d,ebx
   140002b2c:	call   0x140006e6c
   140002b31:	mov    QWORD PTR [rsp+0x30],rax
   140002b36:	test   rax,rax
   140002b39:	je     0x140002bce
   140002b3f:	lea    rcx,[rax+0x10]
   140002b43:	call   0x140004370
   140002b48:	lea    rcx,[rsp+0x30]
   140002b4d:	call   0x140004370
   140002b52:	mov    rcx,QWORD PTR [rip+0x7baf]        # 0x14000a708
   140002b59:	xor    r8d,r8d
   140002b5c:	lea    edx,[r8+0x3]
   140002b60:	call   0x1400067b8
   140002b65:	test   rax,rax
   140002b68:	je     0x140002bce
   140002b6a:	cmp    DWORD PTR [rax+0x4],0x80000
   140002b71:	jne    0x140002bce
   140002b73:	mov    r10,QWORD PTR [rax+0x10]
   140002b77:	lea    r8,[rsp+0x30]
   140002b7c:	and    QWORD PTR [rsp+0x30],0x0
   140002b82:	mov    rcx,r10
   140002b85:	mov    edx,ebx
   140002b87:	call   0x1400067b8
   140002b8c:	mov    QWORD PTR [rsp+0x38],rax
   140002b91:	mov    rcx,rax
   140002b94:	test   rax,rax
   140002b97:	je     0x140002bce
   140002b99:	mov    rdx,QWORD PTR [rsp+0x30]
   140002b9e:	mov    rax,QWORD PTR [rax+0x18]
   140002ba2:	test   rdx,rdx
   140002ba5:	je     0x140002bad
   140002ba7:	mov    QWORD PTR [rdx+0x18],rax
   140002bab:	jmp    0x140002bb1
   140002bad:	mov    QWORD PTR [r10+0x8],rax
   140002bb1:	cmp    rcx,QWORD PTR [r10+0x10]
   140002bb5:	jne    0x140002bbb
   140002bb7:	mov    QWORD PTR [r10+0x10],rdx
   140002bbb:	dec    DWORD PTR [r10+0x4]
   140002bbf:	call   0x140006894
   140002bc4:	lea    rcx,[rsp+0x38]
   140002bc9:	call   0x140004370
   140002bce:	dec    ebx
   140002bd0:	sub    rdi,0x1
   140002bd4:	jne    0x140002b16
   140002bda:	mov    rcx,QWORD PTR [rip+0x7b27]        # 0x14000a708
   140002be1:	test   rcx,rcx
   140002be4:	je     0x140002bf7
   140002be6:	cmp    DWORD PTR [rcx],0x9
   140002be9:	jne    0x140002bf7
   140002beb:	lea    rcx,[rip+0x7b16]        # 0x14000a708
   140002bf2:	call   0x140006a5c
   140002bf7:	cmp    DWORD PTR [rip+0x7b12],0x1        # 0x14000a710
   140002bfe:	jne    0x140002c06
   140002c00:	call   QWORD PTR [rip+0x5672]        # 0x140008278
   140002c06:	mov    eax,0x1
   140002c0b:	mov    rbx,QWORD PTR [rsp+0x40]
   140002c10:	add    rsp,0x20
   140002c14:	pop    rdi
   140002c15:	ret    
   140002c16:	int3   
   140002c17:	int3   
   140002c18:	int3   
   140002c19:	int3   
   140002c1a:	int3   
   140002c1b:	int3   
   140002c1c:	sub    rsp,0x158
   140002c23:	mov    rax,QWORD PTR [rip+0x73de]        # 0x14000a008
   140002c2a:	xor    rax,rsp
   140002c2d:	mov    QWORD PTR [rsp+0x140],rax
   140002c35:	xor    edx,edx
   140002c37:	lea    rcx,[rsp+0x20]
   140002c3c:	mov    r8d,0x11c
   140002c42:	call   0x140007916
   140002c47:	movzx  eax,WORD PTR [rip+0x7ab6]        # 0x14000a704
   140002c4e:	mov    r8b,0x3
   140002c51:	mov    edx,0x2
   140002c56:	mov    WORD PTR [rsp+0x134],ax
   140002c5e:	xor    ecx,ecx
   140002c60:	mov    DWORD PTR [rsp+0x20],0x11c
   140002c68:	mov    DWORD PTR [rsp+0x24],0x5
   140002c70:	mov    DWORD PTR [rsp+0x28],0x1
   140002c78:	call   QWORD PTR [rip+0x56fa]        # 0x140008378
   140002c7e:	mov    r8b,0x3
   140002c81:	mov    edx,0x1
   140002c86:	mov    rcx,rax
   140002c89:	call   QWORD PTR [rip+0x56e9]        # 0x140008378
   140002c8f:	mov    r8b,0x3
   140002c92:	mov    edx,0x20
   140002c97:	mov    rcx,rax
   140002c9a:	call   QWORD PTR [rip+0x56d8]        # 0x140008378
   140002ca0:	mov    edx,0x3
   140002ca5:	lea    rcx,[rsp+0x20]
   140002caa:	mov    r8,rax
   140002cad:	call   QWORD PTR [rip+0x56cd]        # 0x140008380
   140002cb3:	xor    ecx,ecx
   140002cb5:	test   eax,eax
   140002cb7:	setns  cl
   140002cba:	mov    eax,ecx
   140002cbc:	mov    rcx,QWORD PTR [rsp+0x140]
   140002cc4:	xor    rcx,rsp
   140002cc7:	call   0x140007340
   140002ccc:	add    rsp,0x158
   140002cd3:	ret    
   140002cd4:	int3   
   140002cd5:	int3   
   140002cd6:	int3   
   140002cd7:	int3   
   140002cd8:	int3   
   140002cd9:	int3   
   140002cda:	int3   
   140002cdb:	int3   
   140002cdc:	mov    r8d,DWORD PTR [rip+0x7a1d]        # 0x14000a700
   140002ce3:	mov    eax,0xcccccccd
   140002ce8:	inc    r8d
   140002ceb:	mul    r8d
   140002cee:	mov    DWORD PTR [rip+0x7a0b],r8d        # 0x14000a700
   140002cf5:	shr    edx,0x3
   140002cf8:	lea    eax,[rdx+rdx*4]
   140002cfb:	mov    edx,ecx
   140002cfd:	add    eax,eax
   140002cff:	sub    r8d,eax
   140002d02:	add    r8d,0x4
   140002d06:	jmp    0x140002d14
   140002d0b:	int3   
   140002d0c:	int3   
   140002d0d:	int3   
   140002d0e:	int3   
   140002d0f:	int3   
   140002d10:	int3   
   140002d11:	int3   
   140002d12:	int3   
   140002d13:	int3   
   140002d14:	mov    rax,rsp
   140002d17:	mov    QWORD PTR [rax+0x10],rbx
   140002d1b:	mov    QWORD PTR [rax+0x18],rbp
   140002d1f:	mov    QWORD PTR [rax+0x8],rcx
   140002d23:	push   rsi
   140002d24:	push   rdi
   140002d25:	push   r14
   140002d27:	sub    rsp,0x40
   140002d2b:	xor    ebx,ebx
   140002d2d:	mov    r14d,r8d
   140002d30:	mov    QWORD PTR [rax+0x8],rbx
   140002d34:	mov    ebp,edx
   140002d36:	test   edx,edx
   140002d38:	jne    0x140002d50
   140002d3a:	call   QWORD PTR [rip+0x5408]        # 0x140008148
   140002d40:	test   eax,eax
   140002d42:	jne    0x140002f39
   140002d48:	lea    ecx,[rbp+0x57]
   140002d4b:	jmp    0x140002f33
   140002d50:	call   0x14000230c
   140002d55:	test   eax,eax
   140002d57:	je     0x140002f39
   140002d5d:	mov    edx,0x1
   140002d62:	call   0x140006e24
   140002d67:	mov    r10d,eax
   140002d6a:	cmp    eax,r14d
   140002d6d:	ja     0x140002ddb
   140002d6f:	mov    rax,QWORD PTR [rip+0x7992]        # 0x14000a708
   140002d76:	test   rax,rax
   140002d79:	je     0x140002f26
   140002d7f:	cmp    DWORD PTR [rax],0x9
   140002d82:	jne    0x140002f26
   140002d88:	cmp    DWORD PTR [rax+0x4],edx
   140002d8b:	jbe    0x140002f26
   140002d91:	mov    rax,QWORD PTR [rax+0x8]
   140002d95:	mov    rcx,QWORD PTR [rax+0x18]
   140002d99:	test   rcx,rcx
   140002d9c:	je     0x140002f26
   140002da2:	cmp    DWORD PTR [rcx+0x4],0x10000
   140002da9:	je     0x140002db8
   140002dab:	cmp    DWORD PTR [rcx+0x4],0x80000
   140002db2:	jne    0x140002f26
   140002db8:	mov    rcx,QWORD PTR [rcx+0x10]
   140002dbc:	test   rcx,rcx
   140002dbf:	je     0x140002f26
   140002dc5:	mov    edx,r14d
   140002dc8:	sub    edx,r10d
   140002dcb:	inc    edx
   140002dcd:	call   0x140006dc8
   140002dd2:	cmp    eax,0xffffffff
   140002dd5:	je     0x140002f26
   140002ddb:	mov    edi,0x80
   140002de0:	xor    edx,edx
   140002de2:	add    edi,edi
   140002de4:	mov    r9d,0x1
   140002dea:	mov    r8d,edi
   140002ded:	lea    ecx,[rdx+0x4]
   140002df0:	call   0x140002458
   140002df5:	mov    rsi,rax
   140002df8:	test   rax,rax
   140002dfb:	je     0x140002f26
   140002e01:	mov    r9d,edi
   140002e04:	mov    r8,rax
   140002e07:	mov    edx,ebp
   140002e09:	xor    ecx,ecx
   140002e0b:	call   QWORD PTR [rip+0x5417]        # 0x140008228
   140002e11:	mov    edx,eax
   140002e13:	test   eax,eax
   140002e15:	jne    0x140002e62
   140002e17:	call   QWORD PTR [rip+0x532b]        # 0x140008148
   140002e1d:	cmp    eax,0x716
   140002e22:	jne    0x140002f39
   140002e28:	mov    QWORD PTR [rsp+0x30],rbx
   140002e2d:	lea    rax,[rsp+0x60]
   140002e32:	mov    DWORD PTR [rsp+0x28],ebx
   140002e36:	xor    r9d,r9d
   140002e39:	mov    r8d,ebp
   140002e3c:	mov    QWORD PTR [rsp+0x20],rax
   140002e41:	xor    edx,edx
   140002e43:	mov    ecx,0xb00
   140002e48:	call   QWORD PTR [rip+0x5332]        # 0x140008180
   140002e4e:	mov    edx,eax
   140002e50:	test   eax,eax
   140002e52:	je     0x140002f39
   140002e58:	mov    rcx,QWORD PTR [rsp+0x60]
   140002e5d:	mov    rsi,rcx
   140002e60:	jmp    0x140002e67
   140002e62:	mov    rcx,QWORD PTR [rsp+0x60]
   140002e67:	lea    eax,[rdi-0x1]
   140002e6a:	cmp    edx,eax
   140002e6c:	jae    0x140002de0
   140002e72:	mov    rdx,QWORD PTR [rip+0x788f]        # 0x14000a708
   140002e79:	test   rdx,rdx
   140002e7c:	je     0x140002ebd
   140002e7e:	cmp    DWORD PTR [rdx],0x9
   140002e81:	jne    0x140002ebd
   140002e83:	cmp    DWORD PTR [rdx+0x4],0x1
   140002e87:	jbe    0x140002ebd
   140002e89:	mov    rax,QWORD PTR [rdx+0x8]
   140002e8d:	mov    r9,QWORD PTR [rax+0x18]
   140002e91:	test   r9,r9
   140002e94:	je     0x140002ebd
   140002e96:	cmp    DWORD PTR [r9+0x4],0x80000
   140002e9e:	jne    0x140002ebd
   140002ea0:	mov    rcx,QWORD PTR [r9+0x10]
   140002ea4:	mov    r8,rsi
   140002ea7:	mov    edx,r14d
   140002eaa:	call   0x140006ed4
   140002eaf:	mov    rcx,QWORD PTR [rsp+0x60]
   140002eb4:	mov    rdx,QWORD PTR [rip+0x784d]        # 0x14000a708
   140002ebb:	jmp    0x140002ebf
   140002ebd:	mov    eax,ebx
   140002ebf:	test   eax,eax
   140002ec1:	je     0x140002f26
   140002ec3:	test   rcx,rcx
   140002ec6:	je     0x140002eda
   140002ec8:	call   QWORD PTR [rip+0x52aa]        # 0x140008178
   140002ece:	mov    rdx,QWORD PTR [rip+0x7833]        # 0x14000a708
   140002ed5:	mov    QWORD PTR [rsp+0x60],rbx
   140002eda:	test   rdx,rdx
   140002edd:	je     0x140002f21
   140002edf:	cmp    DWORD PTR [rdx],0x9
   140002ee2:	jne    0x140002f21
   140002ee4:	cmp    DWORD PTR [rdx+0x4],0x1
   140002ee8:	jbe    0x140002f21
   140002eea:	mov    rax,QWORD PTR [rdx+0x8]
   140002eee:	mov    rcx,QWORD PTR [rax+0x18]
   140002ef2:	test   rcx,rcx
   140002ef5:	je     0x140002f21
   140002ef7:	cmp    DWORD PTR [rcx+0x4],0x80000
   140002efe:	jne    0x140002f21
   140002f00:	mov    rcx,QWORD PTR [rcx+0x10]
   140002f04:	xor    r8d,r8d
   140002f07:	mov    edx,r14d
   140002f0a:	call   0x1400067b8
   140002f0f:	test   rax,rax
   140002f12:	je     0x140002f21
   140002f14:	cmp    DWORD PTR [rax+0x4],0x20000
   140002f1b:	jne    0x140002f21
   140002f1d:	mov    rbx,QWORD PTR [rax+0x10]
   140002f21:	mov    rax,rbx
   140002f24:	jmp    0x140002f40
   140002f26:	call   QWORD PTR [rip+0x521c]        # 0x140008148
   140002f2c:	test   eax,eax
   140002f2e:	jne    0x140002f39
   140002f30:	lea    ecx,[rax+0x8]
   140002f33:	call   QWORD PTR [rip+0x515f]        # 0x140008098
   140002f39:	lea    rax,[rip+0x576c]        # 0x1400086ac
   140002f40:	mov    rbx,QWORD PTR [rsp+0x68]
   140002f45:	mov    rbp,QWORD PTR [rsp+0x70]
   140002f4a:	add    rsp,0x40
   140002f4e:	pop    r14
   140002f50:	pop    rdi
   140002f51:	pop    rsi
   140002f52:	ret    
   140002f53:	int3   
   140002f54:	int3   
   140002f55:	int3   
   140002f56:	int3   
   140002f57:	int3   
   140002f58:	int3   
   140002f59:	int3   
   140002f5a:	int3   
   140002f5b:	int3   
   140002f5c:	rex push rbx
   140002f5e:	sub    rsp,0x30
   140002f62:	and    QWORD PTR [rsp+0x40],0x0
   140002f68:	mov    rbx,rcx
   140002f6b:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140002f70:	test   rcx,rcx
   140002f73:	je     0x140002fed
   140002f75:	call   QWORD PTR [rip+0x5195]        # 0x140008110
   140002f7b:	test   eax,eax
   140002f7d:	je     0x140002fed
   140002f7f:	call   0x14000230c
   140002f84:	test   eax,eax
   140002f86:	je     0x140003000
   140002f88:	xor    r9d,r9d
   140002f8b:	xor    r8d,r8d
   140002f8e:	mov    rdx,rbx
   140002f91:	xor    ecx,ecx
   140002f93:	call   0x140002458
   140002f98:	mov    rbx,rax
   140002f9b:	test   rax,rax
   140002f9e:	jne    0x140002faf
   140002fa0:	call   QWORD PTR [rip+0x51a2]        # 0x140008148
   140002fa6:	test   eax,eax
   140002fa8:	jne    0x140003000
   140002faa:	lea    ecx,[rbx+0x8]
   140002fad:	jmp    0x140002ffa
   140002faf:	call   QWORD PTR [rip+0x53a3]        # 0x140008358
   140002fb5:	lea    rdx,[rsp+0x40]
   140002fba:	mov    rcx,rbx
   140002fbd:	and    DWORD PTR [rax],0x0
   140002fc0:	call   QWORD PTR [rip+0x530a]        # 0x1400082d0
   140002fc6:	movaps xmm6,xmm0
   140002fc9:	call   QWORD PTR [rip+0x5389]        # 0x140008358
   140002fcf:	cmp    DWORD PTR [rax],0x22
   140002fd2:	je     0x140002fed
   140002fd4:	mov    rcx,QWORD PTR [rsp+0x40]
   140002fd9:	test   rcx,rcx
   140002fdc:	je     0x140002fe8
   140002fde:	call   QWORD PTR [rip+0x512c]        # 0x140008110
   140002fe4:	test   eax,eax
   140002fe6:	jne    0x140002fed
   140002fe8:	movaps xmm0,xmm6
   140002feb:	jmp    0x140003003
   140002fed:	call   QWORD PTR [rip+0x5155]        # 0x140008148
   140002ff3:	test   eax,eax
   140002ff5:	jne    0x140003000
   140002ff7:	lea    ecx,[rax+0x57]
   140002ffa:	call   QWORD PTR [rip+0x5098]        # 0x140008098
   140003000:	xorps  xmm0,xmm0
   140003003:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140003008:	add    rsp,0x30
   14000300c:	pop    rbx
   14000300d:	ret    
   14000300e:	int3   
   14000300f:	int3   
   140003010:	int3   
   140003011:	int3   
   140003012:	int3   
   140003013:	int3   
   140003014:	rex push rbx
   140003016:	sub    rsp,0x20
   14000301a:	and    QWORD PTR [rsp+0x40],0x0
   140003020:	mov    rbx,rcx
   140003023:	test   rcx,rcx
   140003026:	je     0x1400030c7
   14000302c:	call   0x14000230c
   140003031:	test   eax,eax
   140003033:	je     0x1400030da
   140003039:	xor    r9d,r9d
   14000303c:	xor    r8d,r8d
   14000303f:	mov    rdx,rbx
   140003042:	xor    ecx,ecx
   140003044:	call   0x140002458
   140003049:	mov    rbx,rax
   14000304c:	test   rax,rax
   14000304f:	jne    0x140003060
   140003051:	call   QWORD PTR [rip+0x50f1]        # 0x140008148
   140003057:	test   eax,eax
   140003059:	jne    0x1400030da
   14000305b:	lea    ecx,[rbx+0x8]
   14000305e:	jmp    0x1400030d4
   140003060:	xor    edx,edx
   140003062:	mov    rcx,rax
   140003065:	call   0x1400034a0
   14000306a:	mov    rcx,rbx
   14000306d:	call   QWORD PTR [rip+0x509d]        # 0x140008110
   140003073:	test   eax,eax
   140003075:	je     0x1400030c7
   140003077:	call   QWORD PTR [rip+0x52db]        # 0x140008358
   14000307d:	mov    r8d,0xa
   140003083:	lea    rdx,[rsp+0x40]
   140003088:	mov    rcx,rbx
   14000308b:	and    DWORD PTR [rax],0x0
   14000308e:	cmp    WORD PTR [rbx],0x2d
   140003092:	jne    0x14000309c
   140003094:	call   QWORD PTR [rip+0x522e]        # 0x1400082c8
   14000309a:	jmp    0x1400030a2
   14000309c:	call   QWORD PTR [rip+0x521e]        # 0x1400082c0
   1400030a2:	mov    ebx,eax
   1400030a4:	call   QWORD PTR [rip+0x52ae]        # 0x140008358
   1400030aa:	cmp    DWORD PTR [rax],0x22
   1400030ad:	je     0x1400030c7
   1400030af:	mov    rcx,QWORD PTR [rsp+0x40]
   1400030b4:	test   rcx,rcx
   1400030b7:	je     0x1400030c3
   1400030b9:	call   QWORD PTR [rip+0x5051]        # 0x140008110
   1400030bf:	test   eax,eax
   1400030c1:	jne    0x1400030c7
   1400030c3:	mov    eax,ebx
   1400030c5:	jmp    0x1400030dc
   1400030c7:	call   QWORD PTR [rip+0x507b]        # 0x140008148
   1400030cd:	test   eax,eax
   1400030cf:	jne    0x1400030da
   1400030d1:	lea    ecx,[rax+0x57]
   1400030d4:	call   QWORD PTR [rip+0x4fbe]        # 0x140008098
   1400030da:	xor    eax,eax
   1400030dc:	add    rsp,0x20
   1400030e0:	pop    rbx
   1400030e1:	ret    
   1400030e2:	int3   
   1400030e3:	int3   
   1400030e4:	int3   
   1400030e5:	int3   
   1400030e6:	int3   
   1400030e7:	int3   
   1400030e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400030ed:	push   rdi
   1400030ee:	sub    rsp,0x20
   1400030f2:	and    QWORD PTR [rsp+0x48],0x0
   1400030f8:	mov    edi,r8d
   1400030fb:	test   rcx,rcx
   1400030fe:	je     0x1400031a0
   140003104:	mov    rdx,rcx
   140003107:	xor    r9d,r9d
   14000310a:	xor    ecx,ecx
   14000310c:	xor    r8d,r8d
   14000310f:	call   0x140002458
   140003114:	mov    rbx,rax
   140003117:	test   rax,rax
   14000311a:	jne    0x14000312f
   14000311c:	call   QWORD PTR [rip+0x5026]        # 0x140008148
   140003122:	test   eax,eax
   140003124:	jne    0x1400031b3
   14000312a:	lea    ecx,[rbx+0x8]
   14000312d:	jmp    0x1400031ad
   14000312f:	xor    edx,edx
   140003131:	mov    rcx,rax
   140003134:	call   0x1400034a0
   140003139:	mov    rcx,rbx
   14000313c:	call   QWORD PTR [rip+0x4fce]        # 0x140008110
   140003142:	test   eax,eax
   140003144:	je     0x1400031b3
   140003146:	test   edi,edi
   140003148:	jne    0x140003150
   14000314a:	cmp    WORD PTR [rbx],0x2d
   14000314e:	je     0x1400031b3
   140003150:	call   QWORD PTR [rip+0x5202]        # 0x140008358
   140003156:	mov    r8d,0xa
   14000315c:	lea    rdx,[rsp+0x48]
   140003161:	mov    rcx,rbx
   140003164:	and    DWORD PTR [rax],0x0
   140003167:	cmp    edi,0x1
   14000316a:	jne    0x140003174
   14000316c:	call   QWORD PTR [rip+0x5156]        # 0x1400082c8
   140003172:	jmp    0x14000317a
   140003174:	call   QWORD PTR [rip+0x5146]        # 0x1400082c0
   14000317a:	call   QWORD PTR [rip+0x51d8]        # 0x140008358
   140003180:	cmp    DWORD PTR [rax],0x22
   140003183:	je     0x1400031b3
   140003185:	mov    rcx,QWORD PTR [rsp+0x48]
   14000318a:	test   rcx,rcx
   14000318d:	je     0x140003199
   14000318f:	call   QWORD PTR [rip+0x4f7b]        # 0x140008110
   140003195:	test   eax,eax
   140003197:	jne    0x1400031b3
   140003199:	mov    eax,0x1
   14000319e:	jmp    0x1400031b5
   1400031a0:	call   QWORD PTR [rip+0x4fa2]        # 0x140008148
   1400031a6:	test   eax,eax
   1400031a8:	jne    0x1400031b3
   1400031aa:	lea    ecx,[rax+0x57]
   1400031ad:	call   QWORD PTR [rip+0x4ee5]        # 0x140008098
   1400031b3:	xor    eax,eax
   1400031b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400031ba:	add    rsp,0x20
   1400031be:	pop    rdi
   1400031bf:	ret    
   1400031c0:	int3   
   1400031c1:	int3   
   1400031c2:	int3   
   1400031c3:	int3   
   1400031c4:	int3   
   1400031c5:	int3   
   1400031c6:	int3   
   1400031c7:	int3   
   1400031c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400031cd:	push   rdi
   1400031ce:	sub    rsp,0x20
   1400031d2:	movzx  edi,dx
   1400031d5:	mov    rbx,rcx
   1400031d8:	test   rcx,rcx
   1400031db:	jne    0x1400031ec
   1400031dd:	call   QWORD PTR [rip+0x4f65]        # 0x140008148
   1400031e3:	test   eax,eax
   1400031e5:	jne    0x14000321b
   1400031e7:	lea    ecx,[rbx+0x57]
   1400031ea:	jmp    0x140003215
   1400031ec:	call   QWORD PTR [rip+0x4f1e]        # 0x140008110
   1400031f2:	cmp    eax,0x1
   1400031f5:	jb     0x140003210
   1400031f7:	movzx  edx,di
   1400031fa:	mov    rcx,rbx
   1400031fd:	call   QWORD PTR [rip+0x4fe5]        # 0x1400081e8
   140003203:	test   rax,rax
   140003206:	je     0x140003210
   140003208:	sub    rax,rbx
   14000320b:	sar    rax,1
   14000320e:	jmp    0x14000321e
   140003210:	mov    ecx,0x490
   140003215:	call   QWORD PTR [rip+0x4e7d]        # 0x140008098
   14000321b:	or     eax,0xffffffff
   14000321e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003223:	add    rsp,0x20
   140003227:	pop    rdi
   140003228:	ret    
   140003229:	int3   
   14000322a:	int3   
   14000322b:	int3   
   14000322c:	int3   
   14000322d:	int3   
   14000322e:	int3   
   14000322f:	int3   
   140003230:	mov    QWORD PTR [rsp+0x8],rbx
   140003235:	mov    QWORD PTR [rsp+0x10],rbp
   14000323a:	mov    QWORD PTR [rsp+0x18],rsi
   14000323f:	push   rdi
   140003240:	push   r12
   140003242:	push   r13
   140003244:	push   r14
   140003246:	push   r15
   140003248:	sub    rsp,0x20
   14000324c:	xor    ebx,ebx
   14000324e:	mov    r15d,r8d
   140003251:	mov    rdi,rdx
   140003254:	mov    rsi,rcx
   140003257:	test   rcx,rcx
   14000325a:	je     0x14000331b
   140003260:	test   rdx,rdx
   140003263:	je     0x14000331b
   140003269:	mov    rcx,rdx
   14000326c:	call   QWORD PTR [rip+0x4e9e]        # 0x140008110
   140003272:	lea    r14d,[rbx+0x1]
   140003276:	xor    edx,edx
   140003278:	mov    r9d,r14d
   14000327b:	xor    ecx,ecx
   14000327d:	lea    r12d,[rax+0x4]
   140003281:	mov    r8d,r12d
   140003284:	call   0x140002458
   140003289:	mov    rbp,rax
   14000328c:	test   rax,rax
   14000328f:	jne    0x1400032a7
   140003291:	call   QWORD PTR [rip+0x4eb1]        # 0x140008148
   140003297:	test   eax,eax
   140003299:	jne    0x14000332e
   14000329f:	lea    ecx,[rax+0x8]
   1400032a2:	jmp    0x140003328
   1400032a7:	mov    rcx,rsi
   1400032aa:	call   QWORD PTR [rip+0x4e60]        # 0x140008110
   1400032b0:	mov    r9d,r14d
   1400032b3:	xor    edx,edx
   1400032b5:	mov    ecx,r14d
   1400032b8:	lea    r13d,[rax+0x4]
   1400032bc:	mov    r8d,r13d
   1400032bf:	call   0x140002458
   1400032c4:	mov    r14,rax
   1400032c7:	test   rax,rax
   1400032ca:	je     0x140003291
   1400032cc:	mov    edx,r12d
   1400032cf:	lea    r8,[rip+0x53a2]        # 0x140008678
   1400032d6:	mov    r9,rdi
   1400032d9:	mov    rcx,rbp
   1400032dc:	call   0x14000464c
   1400032e1:	test   eax,eax
   1400032e3:	jns    0x1400032ea
   1400032e5:	movzx  ecx,ax
   1400032e8:	jmp    0x140003328
   1400032ea:	mov    edx,r13d
   1400032ed:	lea    r8,[rip+0x5384]        # 0x140008678
   1400032f4:	mov    r9,rsi
   1400032f7:	mov    rcx,r14
   1400032fa:	call   0x14000464c
   1400032ff:	test   eax,eax
   140003301:	js     0x1400032e5
   140003303:	mov    r8d,r15d
   140003306:	mov    rdx,r14
   140003309:	mov    rcx,rbp
   14000330c:	call   0x1400033fc
   140003311:	cmp    eax,0xffffffff
   140003314:	setne  bl
   140003317:	mov    eax,ebx
   140003319:	jmp    0x140003330
   14000331b:	call   QWORD PTR [rip+0x4e27]        # 0x140008148
   140003321:	test   eax,eax
   140003323:	jne    0x14000332e
   140003325:	lea    ecx,[rax+0x57]
   140003328:	call   QWORD PTR [rip+0x4d6a]        # 0x140008098
   14000332e:	xor    eax,eax
   140003330:	mov    rbx,QWORD PTR [rsp+0x50]
   140003335:	mov    rbp,QWORD PTR [rsp+0x58]
   14000333a:	mov    rsi,QWORD PTR [rsp+0x60]
   14000333f:	add    rsp,0x20
   140003343:	pop    r15
   140003345:	pop    r14
   140003347:	pop    r13
   140003349:	pop    r12
   14000334b:	pop    rdi
   14000334c:	ret    
   14000334d:	int3   
   14000334e:	int3   
   14000334f:	int3   
   140003350:	int3   
   140003351:	int3   
   140003352:	int3   
   140003353:	int3   
   140003354:	mov    QWORD PTR [rsp+0x8],rbx
   140003359:	mov    QWORD PTR [rsp+0x10],rbp
   14000335e:	mov    QWORD PTR [rsp+0x18],rsi
   140003363:	push   rdi
   140003364:	sub    rsp,0x20
   140003368:	xor    ebx,ebx
   14000336a:	mov    rdi,rdx
   14000336d:	mov    rbp,rcx
   140003370:	test   rcx,rcx
   140003373:	je     0x1400033c8
   140003375:	test   rdx,rdx
   140003378:	je     0x1400033c8
   14000337a:	mov    rcx,rdx
   14000337d:	call   QWORD PTR [rip+0x4d8d]        # 0x140008110
   140003383:	mov    esi,eax
   140003385:	test   eax,eax
   140003387:	je     0x1400033c1
   140003389:	mov    rcx,rbp
   14000338c:	call   QWORD PTR [rip+0x4d7e]        # 0x140008110
   140003392:	test   eax,eax
   140003394:	je     0x1400033c1
   140003396:	mov    rcx,rbp
   140003399:	call   QWORD PTR [rip+0x4d71]        # 0x140008110
   14000339f:	test   eax,eax
   1400033a1:	je     0x1400033c1
   1400033a3:	test   esi,esi
   1400033a5:	je     0x1400033c1
   1400033a7:	movzx  edx,WORD PTR [rdi]
   1400033aa:	mov    rcx,rbp
   1400033ad:	call   0x1400031c8
   1400033b2:	cmp    eax,0xffffffff
   1400033b5:	jne    0x1400033de
   1400033b7:	inc    ebx
   1400033b9:	add    rdi,0x2
   1400033bd:	cmp    ebx,esi
   1400033bf:	jb     0x1400033a7
   1400033c1:	mov    ecx,0x490
   1400033c6:	jmp    0x1400033d5
   1400033c8:	call   QWORD PTR [rip+0x4d7a]        # 0x140008148
   1400033ce:	test   eax,eax
   1400033d0:	jne    0x1400033db
   1400033d2:	lea    ecx,[rax+0x57]
   1400033d5:	call   QWORD PTR [rip+0x4cbd]        # 0x140008098
   1400033db:	or     eax,0xffffffff
   1400033de:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033e3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400033e8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400033ed:	add    rsp,0x20
   1400033f1:	pop    rdi
   1400033f2:	ret    
   1400033f3:	int3   
   1400033f4:	int3   
   1400033f5:	int3   
   1400033f6:	int3   
   1400033f7:	int3   
   1400033f8:	int3   
   1400033f9:	int3   
   1400033fa:	int3   
   1400033fb:	int3   
   1400033fc:	mov    QWORD PTR [rsp+0x8],rbx
   140003401:	mov    QWORD PTR [rsp+0x10],rbp
   140003406:	mov    QWORD PTR [rsp+0x18],rsi
   14000340b:	push   rdi
   14000340c:	sub    rsp,0x20
   140003410:	mov    ebp,r8d
   140003413:	mov    rdi,rdx
   140003416:	mov    rbx,rcx
   140003419:	test   rcx,rcx
   14000341c:	je     0x14000346e
   14000341e:	test   rdx,rdx
   140003421:	je     0x14000346e
   140003423:	call   QWORD PTR [rip+0x4ce7]        # 0x140008110
   140003429:	mov    rcx,rdi
   14000342c:	mov    esi,eax
   14000342e:	call   QWORD PTR [rip+0x4cdc]        # 0x140008110
   140003434:	test   eax,eax
   140003436:	je     0x14000345f
   140003438:	cmp    esi,0x1
   14000343b:	jb     0x14000345f
   14000343d:	cmp    esi,eax
   14000343f:	jb     0x14000345f
   140003441:	mov    rdx,rdi
   140003444:	mov    rcx,rbx
   140003447:	cmp    ebp,0x1
   14000344a:	jne    0x140003454
   14000344c:	call   QWORD PTR [rip+0x4dae]        # 0x140008200
   140003452:	jmp    0x14000345a
   140003454:	call   QWORD PTR [rip+0x4d9e]        # 0x1400081f8
   14000345a:	test   rax,rax
   14000345d:	jne    0x140003466
   14000345f:	mov    ecx,0x490
   140003464:	jmp    0x14000347b
   140003466:	sub    rax,rbx
   140003469:	sar    rax,1
   14000346c:	jmp    0x140003484
   14000346e:	call   QWORD PTR [rip+0x4cd4]        # 0x140008148
   140003474:	test   eax,eax
   140003476:	jne    0x140003481
   140003478:	lea    ecx,[rax+0x57]
   14000347b:	call   QWORD PTR [rip+0x4c17]        # 0x140008098
   140003481:	or     eax,0xffffffff
   140003484:	mov    rbx,QWORD PTR [rsp+0x30]
   140003489:	mov    rbp,QWORD PTR [rsp+0x38]
   14000348e:	mov    rsi,QWORD PTR [rsp+0x40]
   140003493:	add    rsp,0x20
   140003497:	pop    rdi
   140003498:	ret    
   140003499:	int3   
   14000349a:	int3   
   14000349b:	int3   
   14000349c:	int3   
   14000349d:	int3   
   14000349e:	int3   
   14000349f:	int3   
   1400034a0:	mov    QWORD PTR [rsp+0x18],rbx
   1400034a5:	push   rbp
   1400034a6:	push   rsi
   1400034a7:	push   rdi
   1400034a8:	push   r14
   1400034aa:	push   r15
   1400034ac:	sub    rsp,0x30
   1400034b0:	mov    rax,QWORD PTR [rip+0x6b51]        # 0x14000a008
   1400034b7:	xor    rax,rsp
   1400034ba:	mov    QWORD PTR [rsp+0x28],rax
   1400034bf:	mov    eax,DWORD PTR [rip+0x51bf]        # 0x140008684
   1400034c5:	xor    r15d,r15d
   1400034c8:	mov    DWORD PTR [rsp+0x20],eax
   1400034cc:	mov    rbp,rdx
   1400034cf:	movzx  eax,WORD PTR [rip+0x51b2]        # 0x140008688
   1400034d6:	mov    rdi,rcx
   1400034d9:	mov    WORD PTR [rsp+0x24],ax
   1400034de:	mov    esi,r15d
   1400034e1:	test   rcx,rcx
   1400034e4:	je     0x140003593
   1400034ea:	call   QWORD PTR [rip+0x4c20]        # 0x140008110
   1400034f0:	test   eax,eax
   1400034f2:	je     0x140003593
   1400034f8:	test   rbp,rbp
   1400034fb:	je     0x14000350a
   1400034fd:	mov    rcx,rbp
   140003500:	call   QWORD PTR [rip+0x4c0a]        # 0x140008110
   140003506:	test   eax,eax
   140003508:	jne    0x14000350f
   14000350a:	lea    rbp,[rsp+0x20]
   14000350f:	mov    rbx,rdi
   140003512:	cmp    WORD PTR [rdi],r15w
   140003516:	je     0x140003533
   140003518:	movzx  edx,WORD PTR [rbx]
   14000351b:	mov    rcx,rbp
   14000351e:	call   QWORD PTR [rip+0x4ccc]        # 0x1400081f0
   140003524:	test   rax,rax
   140003527:	je     0x140003533
   140003529:	add    rbx,0x2
   14000352d:	cmp    WORD PTR [rbx],r15w
   140003531:	jne    0x140003518
   140003533:	movzx  eax,WORD PTR [rbx]
   140003536:	mov    r14,rbx
   140003539:	test   ax,ax
   14000353c:	je     0x140003571
   14000353e:	movzx  edx,ax
   140003541:	mov    rcx,rbp
   140003544:	call   QWORD PTR [rip+0x4ca6]        # 0x1400081f0
   14000354a:	test   rax,rax
   14000354d:	je     0x140003559
   14000354f:	test   rsi,rsi
   140003552:	jne    0x14000355c
   140003554:	mov    rsi,rbx
   140003557:	jmp    0x14000355c
   140003559:	mov    rsi,r15
   14000355c:	add    rbx,0x2
   140003560:	movzx  eax,WORD PTR [rbx]
   140003563:	test   ax,ax
   140003566:	jne    0x14000353e
   140003568:	test   rsi,rsi
   14000356b:	je     0x140003571
   14000356d:	mov    WORD PTR [rsi],r15w
   140003571:	cmp    r14,rdi
   140003574:	jbe    0x14000358e
   140003576:	mov    rcx,r14
   140003579:	call   QWORD PTR [rip+0x4b91]        # 0x140008110
   14000357f:	mov    rdx,r14
   140003582:	mov    rcx,rdi
   140003585:	lea    r8d,[rax+0x1]
   140003589:	call   0x14000376c
   14000358e:	mov    rax,rdi
   140003591:	jmp    0x14000359a
   140003593:	lea    rax,[rip+0x5112]        # 0x1400086ac
   14000359a:	mov    rcx,QWORD PTR [rsp+0x28]
   14000359f:	xor    rcx,rsp
   1400035a2:	call   0x140007340
   1400035a7:	mov    rbx,QWORD PTR [rsp+0x70]
   1400035ac:	add    rsp,0x30
   1400035b0:	pop    r15
   1400035b2:	pop    r14
   1400035b4:	pop    rdi
   1400035b5:	pop    rsi
   1400035b6:	pop    rbp
   1400035b7:	ret    
   1400035b8:	int3   
   1400035b9:	int3   
   1400035ba:	int3   
   1400035bb:	int3   
   1400035bc:	int3   
   1400035bd:	int3   
   1400035be:	int3   
   1400035bf:	int3   
   1400035c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400035c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400035ca:	push   rdi
   1400035cb:	sub    rsp,0x20
   1400035cf:	xor    ebx,ebx
   1400035d1:	mov    rsi,rdx
   1400035d4:	mov    rdi,rcx
   1400035d7:	cmp    rcx,0xffffffffffffffff
   1400035db:	je     0x1400035fd
   1400035dd:	call   QWORD PTR [rip+0x4b85]        # 0x140008168
   1400035e3:	cmp    eax,0x2
   1400035e6:	jne    0x1400035fd
   1400035e8:	mov    rdx,rsi
   1400035eb:	mov    rcx,rdi
   1400035ee:	call   QWORD PTR [rip+0x4b6c]        # 0x140008160
   1400035f4:	test   eax,eax
   1400035f6:	je     0x1400035fd
   1400035f8:	mov    ebx,0x1
   1400035fd:	mov    rsi,QWORD PTR [rsp+0x38]
   140003602:	mov    eax,ebx
   140003604:	mov    rbx,QWORD PTR [rsp+0x30]
   140003609:	add    rsp,0x20
   14000360d:	pop    rdi
   14000360e:	ret    
   14000360f:	int3   
   140003610:	int3   
   140003611:	int3   
   140003612:	int3   
   140003613:	int3   
   140003614:	int3   
   140003615:	int3   
   140003616:	int3   
   140003617:	int3   
   140003618:	mov    QWORD PTR [rsp+0x10],rbx
   14000361d:	mov    QWORD PTR [rsp+0x18],rsi
   140003622:	push   rdi
   140003623:	sub    rsp,0x20
   140003627:	xor    ebx,ebx
   140003629:	mov    DWORD PTR [rsp+0x30],ebx
   14000362d:	test   rcx,rcx
   140003630:	jne    0x140003645
   140003632:	call   QWORD PTR [rip+0x4b10]        # 0x140008148
   140003638:	test   eax,eax
   14000363a:	jne    0x1400036c9
   140003640:	lea    ecx,[rbx+0x57]
   140003643:	jmp    0x1400036c3
   140003645:	call   QWORD PTR [rip+0x4c6d]        # 0x1400082b8
   14000364b:	mov    edi,eax
   14000364d:	call   QWORD PTR [rip+0x4d05]        # 0x140008358
   140003653:	mov    ecx,edi
   140003655:	mov    DWORD PTR [rax],ebx
   140003657:	call   QWORD PTR [rip+0x4c53]        # 0x1400082b0
   14000365d:	mov    rsi,rax
   140003660:	cmp    rax,0xffffffffffffffff
   140003664:	je     0x1400036be
   140003666:	call   QWORD PTR [rip+0x4cec]        # 0x140008358
   14000366c:	cmp    DWORD PTR [rax],0x9
   14000366f:	je     0x1400036be
   140003671:	mov    rcx,rsi
   140003674:	call   QWORD PTR [rip+0x4aee]        # 0x140008168
   14000367a:	cmp    eax,0x2
   14000367d:	jne    0x1400036c9
   14000367f:	test   edi,edi
   140003681:	je     0x14000369b
   140003683:	sub    edi,0x1
   140003686:	je     0x140003694
   140003688:	cmp    edi,0x1
   14000368b:	jne    0x1400036ba
   14000368d:	mov    ecx,0xfffffff4
   140003692:	jmp    0x1400036a0
   140003694:	mov    ecx,0xfffffff5
   140003699:	jmp    0x1400036a0
   14000369b:	mov    ecx,0xfffffff6
   1400036a0:	call   QWORD PTR [rip+0x4a7a]        # 0x140008120
   1400036a6:	test   rax,rax
   1400036a9:	je     0x1400036ba
   1400036ab:	lea    rdx,[rsp+0x30]
   1400036b0:	mov    rcx,rax
   1400036b3:	call   0x1400035c0
   1400036b8:	mov    ebx,eax
   1400036ba:	mov    eax,ebx
   1400036bc:	jmp    0x1400036cb
   1400036be:	mov    ecx,0x6
   1400036c3:	call   QWORD PTR [rip+0x49cf]        # 0x140008098
   1400036c9:	xor    eax,eax
   1400036cb:	mov    rbx,QWORD PTR [rsp+0x38]
   1400036d0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400036d5:	add    rsp,0x20
   1400036d9:	pop    rdi
   1400036da:	ret    
   1400036db:	int3   
   1400036dc:	int3   
   1400036dd:	int3   
   1400036de:	int3   
   1400036df:	int3   
   1400036e0:	int3   
   1400036e1:	int3   
   1400036e2:	int3   
   1400036e3:	int3   
   1400036e4:	sub    rsp,0x28
   1400036e8:	test   rcx,rcx
   1400036eb:	je     0x140003757
   1400036ed:	test   rdx,rdx
   1400036f0:	je     0x140003757
   1400036f2:	movsxd r9,r8d
   1400036f5:	mov    eax,0x80070057
   1400036fa:	xor    r8d,r8d
   1400036fd:	cmp    r9,0x7fffffff
   140003704:	cmova  r8d,eax
   140003708:	test   r8d,r8d
   14000370b:	js     0x140003745
   14000370d:	mov    r10d,0x7ffffffe
   140003713:	xor    r8d,r8d
   140003716:	sub    r10,r9
   140003719:	sub    rdx,rcx
   14000371c:	lea    rax,[r10+r9*1]
   140003720:	test   rax,rax
   140003723:	je     0x140003737
   140003725:	mov    al,BYTE PTR [rdx+rcx*1]
   140003728:	test   al,al
   14000372a:	je     0x140003737
   14000372c:	mov    BYTE PTR [rcx],al
   14000372e:	inc    rcx
   140003731:	sub    r9,0x1
   140003735:	jne    0x14000371c
   140003737:	test   r9,r9
   14000373a:	jne    0x140003745
   14000373c:	dec    rcx
   14000373f:	mov    r8d,0x8007007a
   140003745:	mov    BYTE PTR [rcx],0x0
   140003748:	test   r8d,r8d
   14000374b:	jns    0x14000375e
   14000374d:	movzx  ecx,r8w
   140003751:	call   QWORD PTR [rip+0x4941]        # 0x140008098
   140003757:	xor    eax,eax
   140003759:	add    rsp,0x28
   14000375d:	ret    
   14000375e:	mov    eax,0x1
   140003763:	jmp    0x140003759
   140003765:	int3   
   140003766:	int3   
   140003767:	int3   
   140003768:	int3   
   140003769:	int3   
   14000376a:	int3   
   14000376b:	int3   
   14000376c:	rex push rbx
   14000376e:	sub    rsp,0x20
   140003772:	xor    ebx,ebx
   140003774:	mov    r9,rdx
   140003777:	test   rcx,rcx
   14000377a:	je     0x1400037f8
   14000377c:	test   rdx,rdx
   14000377f:	je     0x1400037f8
   140003781:	test   r8d,r8d
   140003784:	jle    0x1400037f8
   140003786:	movsxd r8,r8d
   140003789:	mov    r10d,0x7ffffffe
   14000378f:	mov    edx,ebx
   140003791:	mov    r11d,0x80070057
   140003797:	lea    rax,[r8-0x1]
   14000379b:	cmp    rax,r10
   14000379e:	cmova  edx,r11d
   1400037a2:	test   edx,edx
   1400037a4:	js     0x1400037e3
   1400037a6:	mov    edx,ebx
   1400037a8:	test   r8,r8
   1400037ab:	je     0x1400037d8
   1400037ad:	sub    r10,r8
   1400037b0:	sub    r9,rcx
   1400037b3:	lea    rax,[r10+r8*1]
   1400037b7:	test   rax,rax
   1400037ba:	je     0x1400037d3
   1400037bc:	movzx  eax,WORD PTR [r9+rcx*1]
   1400037c1:	test   ax,ax
   1400037c4:	je     0x1400037d3
   1400037c6:	mov    WORD PTR [rcx],ax
   1400037c9:	add    rcx,0x2
   1400037cd:	sub    r8,0x1
   1400037d1:	jne    0x1400037b3
   1400037d3:	test   r8,r8
   1400037d6:	jne    0x1400037e8
   1400037d8:	sub    rcx,0x2
   1400037dc:	mov    edx,0x8007007a
   1400037e1:	jmp    0x1400037e8
   1400037e3:	test   r8,r8
   1400037e6:	je     0x1400037eb
   1400037e8:	mov    WORD PTR [rcx],bx
   1400037eb:	test   edx,edx
   1400037ed:	jns    0x140003800
   1400037ef:	movzx  ecx,dx
   1400037f2:	call   QWORD PTR [rip+0x48a0]        # 0x140008098
   1400037f8:	xor    eax,eax
   1400037fa:	add    rsp,0x20
   1400037fe:	pop    rbx
   1400037ff:	ret    
   140003800:	mov    eax,0x1
   140003805:	jmp    0x1400037fa
   140003807:	int3   
   140003808:	int3   
   140003809:	int3   
   14000380a:	int3   
   14000380b:	int3   
   14000380c:	int3   
   14000380d:	int3   
   14000380e:	int3   
   14000380f:	int3   
   140003810:	mov    QWORD PTR [rsp+0x8],rbx
   140003815:	push   rdi
   140003816:	sub    rsp,0x20
   14000381a:	xor    edi,edi
   14000381c:	mov    r11,rdx
   14000381f:	mov    rbx,rcx
   140003822:	test   rcx,rcx
   140003825:	je     0x1400038ef
   14000382b:	test   rdx,rdx
   14000382e:	je     0x1400038ef
   140003834:	test   r8d,r8d
   140003837:	jle    0x1400038ef
   14000383d:	movsxd r10,r8d
   140003840:	mov    edx,edi
   140003842:	mov    r8d,0x80070057
   140003848:	lea    rax,[r10-0x1]
   14000384c:	cmp    rax,0x7ffffffe
   140003852:	cmova  edx,r8d
   140003856:	test   edx,edx
   140003858:	js     0x140003883
   14000385a:	mov    rax,r10
   14000385d:	mov    edx,edi
   14000385f:	test   r10,r10
   140003862:	je     0x140003880
   140003864:	cmp    WORD PTR [rcx],di
   140003867:	je     0x140003873
   140003869:	add    rcx,0x2
   14000386d:	sub    rax,0x1
   140003871:	jne    0x140003864
   140003873:	test   rax,rax
   140003876:	je     0x140003880
   140003878:	mov    r9,r10
   14000387b:	sub    r9,rax
   14000387e:	jmp    0x140003886
   140003880:	mov    edx,r8d
   140003883:	mov    r9,rdi
   140003886:	test   edx,edx
   140003888:	js     0x1400038e6
   14000388a:	mov    r8,r10
   14000388d:	lea    rcx,[rbx+r9*2]
   140003891:	mov    edx,edi
   140003893:	sub    r8,r9
   140003896:	je     0x1400038cf
   140003898:	mov    rax,r8
   14000389b:	sub    rax,r10
   14000389e:	lea    r10,[r9+0x7ffffffe]
   1400038a5:	add    r10,rax
   1400038a8:	sub    r11,rcx
   1400038ab:	test   r10,r10
   1400038ae:	je     0x1400038ca
   1400038b0:	movzx  eax,WORD PTR [r11+rcx*1]
   1400038b5:	test   ax,ax
   1400038b8:	je     0x1400038ca
   1400038ba:	mov    WORD PTR [rcx],ax
   1400038bd:	dec    r10
   1400038c0:	add    rcx,0x2
   1400038c4:	sub    r8,0x1
   1400038c8:	jne    0x1400038ab
   1400038ca:	test   r8,r8
   1400038cd:	jne    0x1400038d8
   1400038cf:	sub    rcx,0x2
   1400038d3:	mov    edx,0x8007007a
   1400038d8:	mov    WORD PTR [rcx],di
   1400038db:	test   edx,edx
   1400038dd:	js     0x1400038e6
   1400038df:	mov    eax,0x1
   1400038e4:	jmp    0x1400038f1
   1400038e6:	movzx  ecx,dx
   1400038e9:	call   QWORD PTR [rip+0x47a9]        # 0x140008098
   1400038ef:	xor    eax,eax
   1400038f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038f6:	add    rsp,0x20
   1400038fa:	pop    rdi
   1400038fb:	ret    
   1400038fc:	int3   
   1400038fd:	int3   
   1400038fe:	int3   
   1400038ff:	int3   
   140003900:	int3   
   140003901:	int3   
   140003902:	int3   
   140003903:	int3   
   140003904:	mov    QWORD PTR [rsp+0x8],rbx
   140003909:	mov    QWORD PTR [rsp+0x10],rbp
   14000390e:	mov    QWORD PTR [rsp+0x18],rsi
   140003913:	push   rdi
   140003914:	sub    rsp,0x30
   140003918:	xor    ebx,ebx
   14000391a:	mov    edi,r9d
   14000391d:	mov    rsi,rdx
   140003920:	mov    rbp,rcx
   140003923:	test   rcx,rcx
   140003926:	je     0x140003961
   140003928:	test   rdx,rdx
   14000392b:	je     0x140003961
   14000392d:	or     eax,0xffffffff
   140003930:	test   r9d,r9d
   140003933:	cmove  edi,eax
   140003936:	cmp    r8d,0x1
   14000393a:	sete   bl
   14000393d:	call   QWORD PTR [rip+0x47bd]        # 0x140008100
   140003943:	mov    DWORD PTR [rsp+0x28],edi
   140003947:	mov    r9d,edi
   14000394a:	mov    ecx,eax
   14000394c:	mov    QWORD PTR [rsp+0x20],rsi
   140003951:	mov    r8,rbp
   140003954:	mov    edx,ebx
   140003956:	call   QWORD PTR [rip+0x47ac]        # 0x140008108
   14000395c:	sub    eax,0x2
   14000395f:	jmp    0x140003976
   140003961:	call   QWORD PTR [rip+0x47e1]        # 0x140008148
   140003967:	test   eax,eax
   140003969:	jne    0x140003974
   14000396b:	lea    ecx,[rax+0x57]
   14000396e:	call   QWORD PTR [rip+0x4724]        # 0x140008098
   140003974:	xor    eax,eax
   140003976:	mov    rbx,QWORD PTR [rsp+0x40]
   14000397b:	mov    rbp,QWORD PTR [rsp+0x48]
   140003980:	mov    rsi,QWORD PTR [rsp+0x50]
   140003985:	add    rsp,0x30
   140003989:	pop    rdi
   14000398a:	ret    
   14000398b:	int3   
   14000398c:	int3   
   14000398d:	int3   
   14000398e:	int3   
   14000398f:	int3   
   140003990:	int3   
   140003991:	int3   
   140003992:	int3   
   140003993:	int3   
   140003994:	sub    rsp,0x38
   140003998:	test   rcx,rcx
   14000399b:	je     0x1400039c5
   14000399d:	test   rdx,rdx
   1400039a0:	je     0x1400039c5
   1400039a2:	or     r9d,0xffffffff
   1400039a6:	mov    r8,rcx
   1400039a9:	mov    DWORD PTR [rsp+0x28],r9d
   1400039ae:	mov    QWORD PTR [rsp+0x20],rdx
   1400039b3:	lea    edx,[r9+0x2]
   1400039b7:	lea    ecx,[rdx+0x7e]
   1400039ba:	call   QWORD PTR [rip+0x4748]        # 0x140008108
   1400039c0:	sub    eax,0x2
   1400039c3:	jmp    0x1400039da
   1400039c5:	call   QWORD PTR [rip+0x477d]        # 0x140008148
   1400039cb:	test   eax,eax
   1400039cd:	jne    0x1400039d8
   1400039cf:	lea    ecx,[rax+0x57]
   1400039d2:	call   QWORD PTR [rip+0x46c0]        # 0x140008098
   1400039d8:	xor    eax,eax
   1400039da:	add    rsp,0x38
   1400039de:	ret    
   1400039df:	int3   
   1400039e0:	int3   
   1400039e1:	int3   
   1400039e2:	int3   
   1400039e3:	int3   
   1400039e4:	int3   
   1400039e5:	int3   
   1400039e6:	int3   
   1400039e7:	int3   
   1400039e8:	mov    rax,rsp
   1400039eb:	mov    QWORD PTR [rax+0x10],rbx
   1400039ef:	mov    QWORD PTR [rax+0x18],rbp
   1400039f3:	mov    QWORD PTR [rax+0x20],rsi
   1400039f7:	push   rdi
   1400039f8:	push   r12
   1400039fa:	push   r13
   1400039fc:	push   r14
   1400039fe:	push   r15
   140003a00:	sub    rsp,0x40
   140003a04:	xor    r12d,r12d
   140003a07:	mov    rsi,rdx
   140003a0a:	mov    DWORD PTR [rax+0x8],r12d
   140003a0e:	mov    rdi,rcx
   140003a11:	test   rcx,rcx
   140003a14:	je     0x140003cf0
   140003a1a:	test   rdx,rdx
   140003a1d:	je     0x140003cf0
   140003a23:	call   0x140003618
   140003a28:	lea    r13d,[r12+0x1]
   140003a2d:	cmp    eax,r13d
   140003a30:	jne    0x140003b5b
   140003a36:	mov    ecx,r13d
   140003a39:	call   0x140007858
   140003a3e:	lea    r15d,[r12+0x2]
   140003a43:	cmp    rdi,rax
   140003a46:	jne    0x140003a4f
   140003a48:	mov    ecx,0xfffffff5
   140003a4d:	jmp    0x140003a65
   140003a4f:	mov    ecx,r15d
   140003a52:	call   0x140007858
   140003a57:	cmp    rdi,rax
   140003a5a:	jne    0x140003b43
   140003a60:	mov    ecx,0xfffffff4
   140003a65:	call   QWORD PTR [rip+0x46b5]        # 0x140008120
   140003a6b:	mov    rcx,rsi
   140003a6e:	mov    DWORD PTR [rsp+0x70],r12d
   140003a73:	mov    r14,rax
   140003a76:	call   QWORD PTR [rip+0x4694]        # 0x140008110
   140003a7c:	lea    r9,[rsp+0x70]
   140003a81:	mov    QWORD PTR [rsp+0x20],r12
   140003a86:	mov    r8d,eax
   140003a89:	mov    rdx,rsi
   140003a8c:	mov    rcx,r14
   140003a8f:	mov    ebx,eax
   140003a91:	call   QWORD PTR [rip+0x4659]        # 0x1400080f0
   140003a97:	test   eax,eax
   140003a99:	je     0x140003aa1
   140003a9b:	cmp    ebx,DWORD PTR [rsp+0x70]
   140003a9f:	je     0x140003afd
   140003aa1:	call   QWORD PTR [rip+0x46a1]        # 0x140008148
   140003aa7:	cmp    eax,0x8
   140003aaa:	jne    0x140003b24
   140003aac:	mov    rcx,rsi
   140003aaf:	call   QWORD PTR [rip+0x465b]        # 0x140008110
   140003ab5:	mov    ebp,eax
   140003ab7:	mov    ebx,r12d
   140003aba:	test   eax,eax
   140003abc:	je     0x140003afd
   140003abe:	mov    eax,0x400
   140003ac3:	mov    edi,ebp
   140003ac5:	mov    QWORD PTR [rsp+0x20],r12
   140003aca:	sub    edi,ebx
   140003acc:	lea    r9,[rsp+0x70]
   140003ad1:	cmp    edi,eax
   140003ad3:	mov    rcx,r14
   140003ad6:	cmova  edi,eax
   140003ad9:	mov    eax,ebx
   140003adb:	mov    r8d,edi
   140003ade:	lea    rdx,[rsi+rax*2]
   140003ae2:	call   QWORD PTR [rip+0x4608]        # 0x1400080f0
   140003ae8:	test   eax,eax
   140003aea:	je     0x140003b05
   140003aec:	cmp    edi,DWORD PTR [rsp+0x70]
   140003af0:	jne    0x140003b05
   140003af2:	mov    eax,0x400
   140003af7:	add    ebx,eax
   140003af9:	cmp    ebx,ebp
   140003afb:	jb     0x140003ac3
   140003afd:	mov    eax,r13d
   140003b00:	jmp    0x140003d05
   140003b05:	mov    ecx,r15d
   140003b08:	call   0x140007858
   140003b0d:	mov    rcx,rax
   140003b10:	call   0x1400029e0
   140003b15:	call   0x140002adc
   140003b1a:	mov    ecx,r13d
   140003b1d:	call   QWORD PTR [rip+0x45c5]        # 0x1400080e8
   140003b23:	int3   
   140003b24:	mov    ecx,r15d
   140003b27:	call   0x140007858
   140003b2c:	mov    rcx,rax
   140003b2f:	call   0x1400029e0
   140003b34:	call   0x140002adc
   140003b39:	mov    ecx,r13d
   140003b3c:	call   QWORD PTR [rip+0x45a6]        # 0x1400080e8
   140003b42:	int3   
   140003b43:	call   QWORD PTR [rip+0x45ff]        # 0x140008148
   140003b49:	test   eax,eax
   140003b4b:	jne    0x140003d03
   140003b51:	mov    ecx,0x42b
   140003b56:	jmp    0x140003cfd
   140003b5b:	mov    rcx,rsi
   140003b5e:	call   QWORD PTR [rip+0x45ac]        # 0x140008110
   140003b64:	xor    edx,edx
   140003b66:	lea    rcx,[rip+0x6a93]        # 0x14000a600
   140003b6d:	mov    r8d,0x100
   140003b73:	mov    r14d,eax
   140003b76:	call   0x140007916
   140003b7b:	mov    ebp,r12d
   140003b7e:	test   r14d,r14d
   140003b81:	je     0x140003afd
   140003b87:	mov    eax,0xff
   140003b8c:	mov    DWORD PTR [rsp+0x70],r12d
   140003b91:	mov    ebx,r14d
   140003b94:	sub    ebx,ebp
   140003b96:	cmp    ebx,eax
   140003b98:	cmova  ebx,eax
   140003b9b:	mov    eax,ebp
   140003b9d:	lea    r15,[rsi+rax*2]
   140003ba1:	call   QWORD PTR [rip+0x4539]        # 0x1400080e0
   140003ba7:	mov    QWORD PTR [rsp+0x38],r12
   140003bac:	mov    r9d,ebx
   140003baf:	mov    QWORD PTR [rsp+0x30],r12
   140003bb4:	mov    ecx,eax
   140003bb6:	mov    DWORD PTR [rsp+0x28],r12d
   140003bbb:	mov    r8,r15
   140003bbe:	xor    edx,edx
   140003bc0:	mov    QWORD PTR [rsp+0x20],r12
   140003bc5:	call   QWORD PTR [rip+0x45a5]        # 0x140008170
   140003bcb:	mov    DWORD PTR [rsp+0x70],eax
   140003bcf:	test   eax,eax
   140003bd1:	je     0x140003cd1
   140003bd7:	cmp    eax,0xff
   140003bdc:	jbe    0x140003c2d
   140003bde:	add    eax,0xffffff01
   140003be3:	cmp    eax,0x3
   140003be6:	jbe    0x140003bee
   140003be8:	shr    eax,1
   140003bea:	sub    ebx,eax
   140003bec:	jmp    0x140003bf0
   140003bee:	dec    ebx
   140003bf0:	mov    DWORD PTR [rsp+0x70],r12d
   140003bf5:	test   ebx,ebx
   140003bf7:	jne    0x140003ba1
   140003bf9:	call   QWORD PTR [rip+0x4549]        # 0x140008148
   140003bff:	test   eax,eax
   140003c01:	jne    0x140003c0e
   140003c03:	mov    ecx,0x42b
   140003c08:	call   QWORD PTR [rip+0x448a]        # 0x140008098
   140003c0e:	mov    ecx,r13d
   140003c11:	call   0x140007858
   140003c16:	mov    rcx,rax
   140003c19:	call   0x1400029e0
   140003c1e:	call   0x140002adc
   140003c23:	mov    ecx,r13d
   140003c26:	call   QWORD PTR [rip+0x44bc]        # 0x1400080e8
   140003c2c:	int3   
   140003c2d:	cmp    eax,ebx
   140003c2f:	lea    rcx,[rip+0x69ca]        # 0x14000a600
   140003c36:	mov    r8d,0x100
   140003c3c:	cmovb  ebx,eax
   140003c3f:	xor    edx,edx
   140003c41:	call   0x140007916
   140003c46:	call   QWORD PTR [rip+0x4494]        # 0x1400080e0
   140003c4c:	mov    QWORD PTR [rsp+0x38],r12
   140003c51:	mov    r9d,ebx
   140003c54:	mov    ecx,eax
   140003c56:	mov    QWORD PTR [rsp+0x30],r12
   140003c5b:	lea    rax,[rip+0x699e]        # 0x14000a600
   140003c62:	mov    DWORD PTR [rsp+0x28],0xff
   140003c6a:	mov    r8,r15
   140003c6d:	mov    QWORD PTR [rsp+0x20],rax
   140003c72:	xor    edx,edx
   140003c74:	call   QWORD PTR [rip+0x44f6]        # 0x140008170
   140003c7a:	mov    DWORD PTR [rsp+0x70],eax
   140003c7e:	test   eax,eax
   140003c80:	je     0x140003cb2
   140003c82:	lea    r8,[rip+0x6977]        # 0x14000a600
   140003c89:	mov    rcx,rdi
   140003c8c:	lea    rdx,[rip+0x49f9]        # 0x14000868c
   140003c93:	add    ebp,ebx
   140003c95:	call   QWORD PTR [rip+0x460d]        # 0x1400082a8
   140003c9b:	mov    rcx,rdi
   140003c9e:	call   QWORD PTR [rip+0x45fc]        # 0x1400082a0
   140003ca4:	cmp    r14d,ebp
   140003ca7:	jbe    0x140003afd
   140003cad:	jmp    0x140003b87
   140003cb2:	mov    ecx,r13d
   140003cb5:	call   0x140007858
   140003cba:	mov    rcx,rax
   140003cbd:	call   0x1400029e0
   140003cc2:	call   0x140002adc
   140003cc7:	mov    ecx,r13d
   140003cca:	call   QWORD PTR [rip+0x4418]        # 0x1400080e8
   140003cd0:	int3   
   140003cd1:	mov    ecx,r13d
   140003cd4:	call   0x140007858
   140003cd9:	mov    rcx,rax
   140003cdc:	call   0x1400029e0
   140003ce1:	call   0x140002adc
   140003ce6:	mov    ecx,r13d
   140003ce9:	call   QWORD PTR [rip+0x43f9]        # 0x1400080e8
   140003cef:	int3   
   140003cf0:	call   QWORD PTR [rip+0x4452]        # 0x140008148
   140003cf6:	test   eax,eax
   140003cf8:	jne    0x140003d03
   140003cfa:	lea    ecx,[rax+0x57]
   140003cfd:	call   QWORD PTR [rip+0x4395]        # 0x140008098
   140003d03:	xor    eax,eax
   140003d05:	lea    r11,[rsp+0x40]
   140003d0a:	mov    rbx,QWORD PTR [r11+0x38]
   140003d0e:	mov    rbp,QWORD PTR [r11+0x40]
   140003d12:	mov    rsi,QWORD PTR [r11+0x48]
   140003d16:	mov    rsp,r11
   140003d19:	pop    r15
   140003d1b:	pop    r14
   140003d1d:	pop    r13
   140003d1f:	pop    r12
   140003d21:	pop    rdi
   140003d22:	ret    
   140003d23:	int3   
   140003d24:	int3   
   140003d25:	int3   
   140003d26:	int3   
   140003d27:	int3   
   140003d28:	int3   
   140003d29:	int3   
   140003d2a:	int3   
   140003d2b:	int3   
   140003d2c:	mov    QWORD PTR [rsp+0x20],r9
   140003d31:	push   rbx
   140003d32:	push   rbp
   140003d33:	push   rsi
   140003d34:	push   rdi
   140003d35:	push   r14
   140003d37:	push   r15
   140003d39:	sub    rsp,0x58
   140003d3d:	xor    r15d,r15d
   140003d40:	mov    r14,rcx
   140003d43:	test   r9,r9
   140003d46:	je     0x140003f0b
   140003d4c:	test   rcx,rcx
   140003d4f:	je     0x140003f0b
   140003d55:	test   edx,edx
   140003d57:	jne    0x140003d66
   140003d59:	mov    rdx,r9
   140003d5c:	call   0x1400039e8
   140003d61:	jmp    0x140003f20
   140003d66:	test   r8d,r8d
   140003d69:	jne    0x140003e56
   140003d6f:	or     ebx,0xffffffff
   140003d72:	mov    esi,r15d
   140003d75:	lea    rax,[rsp+0xb0]
   140003d7d:	mov    QWORD PTR [rsp+0x40],rax
   140003d82:	test   rax,rax
   140003d85:	je     0x140003e3e
   140003d8b:	mov    ecx,0x1000
   140003d90:	mov    eax,0x800
   140003d95:	cmp    ebx,0xffffffff
   140003d98:	mov    r9d,0x1
   140003d9e:	cmove  eax,ecx
   140003da1:	xor    edx,edx
   140003da3:	add    esi,eax
   140003da5:	mov    r8d,esi
   140003da8:	lea    ecx,[rdx+0x3]
   140003dab:	call   0x140002458
   140003db0:	mov    rdi,rax
   140003db3:	test   rax,rax
   140003db6:	je     0x140003e28
   140003db8:	mov    rdx,QWORD PTR [rsp+0xa8]
   140003dc0:	lea    ecx,[rsi-0x1]
   140003dc3:	lea    rax,[rsp+0x40]
   140003dc8:	xor    r9d,r9d
   140003dcb:	mov    QWORD PTR [rsp+0x30],rax
   140003dd0:	xor    r8d,r8d
   140003dd3:	mov    DWORD PTR [rsp+0x28],ecx
   140003dd7:	mov    ecx,0x400
   140003ddc:	mov    QWORD PTR [rsp+0x20],rdi
   140003de1:	call   QWORD PTR [rip+0x4399]        # 0x140008180
   140003de7:	mov    ebx,eax
   140003de9:	test   eax,eax
   140003deb:	jne    0x140003e06
   140003ded:	call   QWORD PTR [rip+0x4355]        # 0x140008148
   140003df3:	test   eax,eax
   140003df5:	je     0x140003e1e
   140003df7:	call   QWORD PTR [rip+0x434b]        # 0x140008148
   140003dfd:	cmp    eax,0x7a
   140003e00:	jne    0x140003f1e
   140003e06:	mov    QWORD PTR [rsp+0x40],r15
   140003e0b:	test   ebx,ebx
   140003e0d:	je     0x140003d75
   140003e13:	mov    rdx,rdi
   140003e16:	mov    rcx,r14
   140003e19:	jmp    0x140003d5c
   140003e1e:	mov    eax,0x1
   140003e23:	jmp    0x140003f20
   140003e28:	call   QWORD PTR [rip+0x431a]        # 0x140008148
   140003e2e:	test   eax,eax
   140003e30:	jne    0x140003f1e
   140003e36:	lea    ecx,[rax+0x8]
   140003e39:	jmp    0x140003f18
   140003e3e:	call   QWORD PTR [rip+0x4304]        # 0x140008148
   140003e44:	test   eax,eax
   140003e46:	jne    0x140003f1e
   140003e4c:	mov    ecx,0x42b
   140003e51:	jmp    0x140003f18
   140003e56:	mov    ebp,r15d
   140003e59:	lea    rax,[rsp+0xb0]
   140003e61:	mov    QWORD PTR [rsp+0x40],rax
   140003e66:	test   rax,rax
   140003e69:	je     0x140003e3e
   140003e6b:	xor    edx,edx
   140003e6d:	add    ebp,0x800
   140003e73:	mov    r9d,0x1
   140003e79:	mov    r8d,ebp
   140003e7c:	lea    ecx,[rdx+0x3]
   140003e7f:	call   0x140002458
   140003e84:	mov    rdi,rax
   140003e87:	test   rax,rax
   140003e8a:	je     0x140003e28
   140003e8c:	lea    rax,[rbp-0x1]
   140003e90:	mov    ebx,r15d
   140003e93:	cmp    rax,0x7ffffffe
   140003e99:	mov    edx,0x80070057
   140003e9e:	cmova  ebx,edx
   140003ea1:	test   ebx,ebx
   140003ea3:	js     0x140003ee5
   140003ea5:	mov    r9,QWORD PTR [rsp+0x40]
   140003eaa:	lea    rsi,[rbp-0x1]
   140003eae:	mov    r8,QWORD PTR [rsp+0xa8]
   140003eb6:	mov    rdx,rsi
   140003eb9:	mov    rcx,rdi
   140003ebc:	mov    ebx,r15d
   140003ebf:	call   QWORD PTR [rip+0x448b]        # 0x140008350
   140003ec5:	test   eax,eax
   140003ec7:	js     0x140003ed9
   140003ec9:	cdqe   
   140003ecb:	cmp    rax,rsi
   140003ece:	ja     0x140003ed9
   140003ed0:	jne    0x140003eed
   140003ed2:	mov    WORD PTR [rdi+rsi*2],r15w
   140003ed7:	jmp    0x140003eed
   140003ed9:	mov    WORD PTR [rdi+rsi*2],r15w
   140003ede:	mov    ebx,0x8007007a
   140003ee3:	jmp    0x140003eed
   140003ee5:	test   ebp,ebp
   140003ee7:	je     0x140003eed
   140003ee9:	mov    WORD PTR [rdi],r15w
   140003eed:	mov    QWORD PTR [rsp+0x40],r15
   140003ef2:	cmp    ebx,0x8007007a
   140003ef8:	je     0x140003e59
   140003efe:	test   ebx,ebx
   140003f00:	jns    0x140003e13
   140003f06:	movzx  ecx,bx
   140003f09:	jmp    0x140003f18
   140003f0b:	call   QWORD PTR [rip+0x4237]        # 0x140008148
   140003f11:	test   eax,eax
   140003f13:	jne    0x140003f1e
   140003f15:	lea    ecx,[rax+0x57]
   140003f18:	call   QWORD PTR [rip+0x417a]        # 0x140008098
   140003f1e:	xor    eax,eax
   140003f20:	add    rsp,0x58
   140003f24:	pop    r15
   140003f26:	pop    r14
   140003f28:	pop    rdi
   140003f29:	pop    rsi
   140003f2a:	pop    rbp
   140003f2b:	pop    rbx
   140003f2c:	ret    
   140003f2d:	int3   
   140003f2e:	int3   
   140003f2f:	int3   
   140003f30:	int3   
   140003f31:	int3   
   140003f32:	int3   
   140003f33:	int3   
   140003f34:	mov    QWORD PTR [rsp+0x8],rbx
   140003f39:	mov    QWORD PTR [rsp+0x10],rbp
   140003f3e:	mov    QWORD PTR [rsp+0x18],rsi
   140003f43:	push   rdi
   140003f44:	sub    rsp,0x30
   140003f48:	xor    ebx,ebx
   140003f4a:	mov    rsi,r8
   140003f4d:	mov    rdi,rdx
   140003f50:	mov    rbp,rcx
   140003f53:	test   rcx,rcx
   140003f56:	je     0x14000401f
   140003f5c:	test   r8,r8
   140003f5f:	je     0x14000401f
   140003f65:	test   rdx,rdx
   140003f68:	jne    0x140003f73
   140003f6a:	cmp    DWORD PTR [r8],ebx
   140003f6d:	jne    0x14000401f
   140003f73:	mov    eax,DWORD PTR [r8]
   140003f76:	test   eax,eax
   140003f78:	je     0x140003f86
   140003f7a:	cmp    eax,0x1
   140003f7d:	jbe    0x140004004
   140003f83:	lea    ebx,[rax-0x1]
   140003f86:	test   rdx,rdx
   140003f89:	je     0x140003fa0
   140003f8b:	test   ebx,ebx
   140003f8d:	je     0x140003fa0
   140003f8f:	lea    r8d,[rbx+0x1]
   140003f93:	xor    edx,edx
   140003f95:	add    r8,r8
   140003f98:	mov    rcx,rdi
   140003f9b:	call   0x140007916
   140003fa0:	or     eax,0xffffffff
   140003fa3:	test   ebx,ebx
   140003fa5:	je     0x140003fb5
   140003fa7:	mov    rcx,rbp
   140003faa:	call   QWORD PTR [rip+0x4168]        # 0x140008118
   140003fb0:	cmp    eax,ebx
   140003fb2:	cmovg  eax,ebx
   140003fb5:	xor    edx,edx
   140003fb7:	mov    DWORD PTR [rsp+0x28],ebx
   140003fbb:	mov    r9d,eax
   140003fbe:	mov    QWORD PTR [rsp+0x20],rdi
   140003fc3:	mov    r8,rbp
   140003fc6:	lea    ecx,[rdx+0x1]
   140003fc9:	call   QWORD PTR [rip+0x4109]        # 0x1400080d8
   140003fcf:	test   eax,eax
   140003fd1:	jne    0x14000401b
   140003fd3:	call   QWORD PTR [rip+0x416f]        # 0x140008148
   140003fd9:	test   eax,eax
   140003fdb:	jne    0x140003fe8
   140003fdd:	mov    ecx,0x42b
   140003fe2:	call   QWORD PTR [rip+0x40b0]        # 0x140008098
   140003fe8:	test   rdi,rdi
   140003feb:	je     0x140004032
   140003fed:	test   ebx,ebx
   140003fef:	je     0x140004032
   140003ff1:	lea    r8d,[rbx+0x1]
   140003ff5:	xor    edx,edx
   140003ff7:	add    r8,r8
   140003ffa:	mov    rcx,rdi
   140003ffd:	call   0x140007916
   140004002:	jmp    0x140004032
   140004004:	mov    r8,rax
   140004007:	xor    edx,edx
   140004009:	add    r8,r8
   14000400c:	mov    rcx,rdi
   14000400f:	call   0x140007916
   140004014:	mov    eax,0x1
   140004019:	jmp    0x140004034
   14000401b:	mov    DWORD PTR [rsi],eax
   14000401d:	jmp    0x140004014
   14000401f:	call   QWORD PTR [rip+0x4123]        # 0x140008148
   140004025:	test   eax,eax
   140004027:	jne    0x140004032
   140004029:	lea    ecx,[rax+0x57]
   14000402c:	call   QWORD PTR [rip+0x4066]        # 0x140008098
   140004032:	xor    eax,eax
   140004034:	mov    rbx,QWORD PTR [rsp+0x40]
   140004039:	mov    rbp,QWORD PTR [rsp+0x48]
   14000403e:	mov    rsi,QWORD PTR [rsp+0x50]
   140004043:	add    rsp,0x30
   140004047:	pop    rdi
   140004048:	ret    
   140004049:	int3   
   14000404a:	int3   
   14000404b:	int3   
   14000404c:	int3   
   14000404d:	int3   
   14000404e:	int3   
   14000404f:	int3   
   140004050:	mov    QWORD PTR [rsp+0x10],rbx
   140004055:	mov    QWORD PTR [rsp+0x18],rsi
   14000405a:	mov    QWORD PTR [rsp+0x20],rdi
   14000405f:	push   rbp
   140004060:	push   r12
   140004062:	push   r13
   140004064:	push   r14
   140004066:	push   r15
   140004068:	mov    rbp,rsp
   14000406b:	sub    rsp,0x80
   140004072:	mov    rax,QWORD PTR [rip+0x5f8f]        # 0x14000a008
   140004079:	xor    rax,rsp
   14000407c:	mov    QWORD PTR [rbp-0x10],rax
   140004080:	xor    r12d,r12d
   140004083:	xor    eax,eax
   140004085:	mov    DWORD PTR [rbp-0x48],r12d
   140004089:	mov    r15d,edx
   14000408c:	mov    DWORD PTR [rbp-0x4c],r12d
   140004090:	mov    r14,rcx
   140004093:	mov    DWORD PTR [rbp-0x40],r12d
   140004097:	mov    edi,r12d
   14000409a:	mov    WORD PTR [rbp-0x20],r12w
   14000409f:	mov    QWORD PTR [rbp-0x1e],rax
   1400040a3:	mov    DWORD PTR [rbp-0x38],r12d
   1400040a7:	mov    QWORD PTR [rbp-0x34],rax
   1400040ab:	mov    QWORD PTR [rbp-0x2c],rax
   1400040af:	test   rcx,rcx
   1400040b2:	jne    0x1400040d0
   1400040b4:	call   QWORD PTR [rip+0x408e]        # 0x140008148
   1400040ba:	test   eax,eax
   1400040bc:	jne    0x14000433b
   1400040c2:	lea    ecx,[rax+0x57]
   1400040c5:	call   QWORD PTR [rip+0x3fcd]        # 0x140008098
   1400040cb:	jmp    0x14000433b
   1400040d0:	mov    ecx,0xfffffff6
   1400040d5:	call   QWORD PTR [rip+0x4045]        # 0x140008120
   1400040db:	mov    rbx,rax
   1400040de:	test   rax,rax
   1400040e1:	je     0x14000433b
   1400040e7:	lea    rdx,[rbp-0x40]
   1400040eb:	mov    rcx,rax
   1400040ee:	call   0x1400035c0
   1400040f3:	test   eax,eax
   1400040f5:	mov    esi,r12d
   1400040f8:	mov    r13d,0x1
   1400040fe:	sete   sil
   140004102:	test   esi,esi
   140004104:	jne    0x14000411a
   140004106:	mov    edx,r13d
   140004109:	mov    rcx,rbx
   14000410c:	call   QWORD PTR [rip+0x3fbe]        # 0x1400080d0
   140004112:	test   eax,eax
   140004114:	je     0x14000433b
   14000411a:	xor    eax,eax
   14000411c:	movsxd rsi,esi
   14000411f:	mov    QWORD PTR [rbp-0x20],rax
   140004123:	mov    WORD PTR [rbp-0x18],ax
   140004127:	mov    QWORD PTR [rbp-0x38],rax
   14000412b:	mov    QWORD PTR [rbp-0x30],rax
   14000412f:	mov    DWORD PTR [rbp-0x28],eax
   140004132:	mov    QWORD PTR [rsp+0x20],r12
   140004137:	lea    r9,[rbp-0x48]
   14000413b:	mov    r8d,r13d
   14000413e:	mov    rcx,rbx
   140004141:	cmp    rsi,r13
   140004144:	jne    0x14000418a
   140004146:	lea    rdx,[rbp-0x50]
   14000414a:	call   QWORD PTR [rip+0x3f78]        # 0x1400080c8
   140004150:	test   eax,eax
   140004152:	je     0x14000433b
   140004158:	cmp    DWORD PTR [rbp-0x48],r12d
   14000415c:	je     0x1400042da
   140004162:	mov    al,BYTE PTR [rbp-0x50]
   140004165:	lea    r8,[rbp-0x48]
   140004169:	lea    rdx,[rbp-0x38]
   14000416d:	mov    BYTE PTR [rbp-0x20],al
   140004170:	lea    rcx,[rbp-0x20]
   140004174:	mov    DWORD PTR [rbp-0x48],0xa
   14000417b:	call   0x140003f34
   140004180:	movzx  ecx,WORD PTR [rbp-0x38]
   140004184:	mov    WORD PTR [rbp-0x44],cx
   140004188:	jmp    0x1400041a0
   14000418a:	lea    rdx,[rbp-0x44]
   14000418e:	call   QWORD PTR [rip+0x3f2c]        # 0x1400080c0
   140004194:	test   eax,eax
   140004196:	je     0x14000432f
   14000419c:	movzx  ecx,WORD PTR [rbp-0x44]
   1400041a0:	cmp    cx,0xd
   1400041a4:	je     0x1400042da
   1400041aa:	mov    eax,0x8
   1400041af:	cmp    cx,ax
   1400041b2:	jne    0x14000427a
   1400041b8:	test   edi,edi
   1400041ba:	je     0x140004132
   1400041c0:	mov    r9d,eax
   1400041c3:	lea    r8,[rip+0x44c6]        # 0x140008690
   1400041ca:	lea    edx,[rax+0x2]
   1400041cd:	lea    rcx,[rbp-0x38]
   1400041d1:	call   0x14000464c
   1400041d6:	mov    ecx,0xfffffff5
   1400041db:	call   QWORD PTR [rip+0x3f3f]        # 0x140008120
   1400041e1:	lea    r9,[rbp-0x4c]
   1400041e5:	mov    QWORD PTR [rsp+0x20],r12
   1400041ea:	mov    rcx,rax
   1400041ed:	lea    rdx,[rbp-0x38]
   1400041f1:	mov    r8d,r13d
   1400041f4:	call   QWORD PTR [rip+0x3ef6]        # 0x1400080f0
   1400041fa:	xor    r9d,r9d
   1400041fd:	lea    r8,[rip+0x448c]        # 0x140008690
   140004204:	lea    rcx,[rbp-0x38]
   140004208:	lea    edx,[r9+0xa]
   14000420c:	call   0x14000464c
   140004211:	mov    ecx,0xfffffff5
   140004216:	call   QWORD PTR [rip+0x3f04]        # 0x140008120
   14000421c:	lea    r9,[rbp-0x4c]
   140004220:	mov    QWORD PTR [rsp+0x20],r12
   140004225:	mov    rcx,rax
   140004228:	lea    rdx,[rbp-0x38]
   14000422c:	mov    r8d,r13d
   14000422f:	call   QWORD PTR [rip+0x3ebb]        # 0x1400080f0
   140004235:	mov    r9d,0x8
   14000423b:	lea    r8,[rip+0x444e]        # 0x140008690
   140004242:	lea    rcx,[rbp-0x38]
   140004246:	lea    edx,[r9+0x2]
   14000424a:	call   0x14000464c
   14000424f:	mov    ecx,0xfffffff5
   140004254:	call   QWORD PTR [rip+0x3ec6]        # 0x140008120
   14000425a:	lea    r9,[rbp-0x4c]
   14000425e:	mov    QWORD PTR [rsp+0x20],r12
   140004263:	mov    rcx,rax
   140004266:	lea    rdx,[rbp-0x38]
   14000426a:	mov    r8d,r13d
   14000426d:	call   QWORD PTR [rip+0x3e7d]        # 0x1400080f0
   140004273:	dec    edi
   140004275:	jmp    0x140004132
   14000427a:	lea    eax,[r15-0x1]
   14000427e:	cmp    edi,eax
   140004280:	jne    0x140004296
   140004282:	mov    ecx,0xfffffff5
   140004287:	call   QWORD PTR [rip+0x3e93]        # 0x140008120
   14000428d:	lea    rdx,[rip+0x4404]        # 0x140008698
   140004294:	jmp    0x1400042c0
   140004296:	mov    eax,0xa
   14000429b:	cmp    cx,ax
   14000429e:	je     0x140004132
   1400042a4:	mov    eax,edi
   1400042a6:	add    edi,r13d
   1400042a9:	mov    WORD PTR [r14+rax*2],cx
   1400042ae:	mov    ecx,0xfffffff5
   1400042b3:	call   QWORD PTR [rip+0x3e67]        # 0x140008120
   1400042b9:	lea    rdx,[rip+0x434c]        # 0x14000860c
   1400042c0:	mov    r8d,r13d
   1400042c3:	mov    QWORD PTR [rsp+0x20],r12
   1400042c8:	lea    r9,[rbp-0x4c]
   1400042cc:	mov    rcx,rax
   1400042cf:	call   QWORD PTR [rip+0x3e1b]        # 0x1400080f0
   1400042d5:	jmp    0x140004132
   1400042da:	mov    edx,DWORD PTR [rbp-0x40]
   1400042dd:	mov    rcx,rbx
   1400042e0:	mov    eax,edi
   1400042e2:	mov    WORD PTR [r14+rax*2],r12w
   1400042e7:	call   QWORD PTR [rip+0x3de3]        # 0x1400080d0
   1400042ed:	mov    r8d,0xa
   1400042f3:	lea    rdx,[rip+0x43a2]        # 0x14000869c
   1400042fa:	lea    rcx,[rbp-0x38]
   1400042fe:	call   0x14000376c
   140004303:	mov    ecx,0xfffffff5
   140004308:	call   QWORD PTR [rip+0x3e12]        # 0x140008120
   14000430e:	lea    r9,[rbp-0x4c]
   140004312:	mov    QWORD PTR [rsp+0x20],r12
   140004317:	mov    rcx,rax
   14000431a:	lea    rdx,[rbp-0x38]
   14000431e:	mov    r8d,0x2
   140004324:	call   QWORD PTR [rip+0x3dc6]        # 0x1400080f0
   14000432a:	mov    eax,r13d
   14000432d:	jmp    0x14000433d
   14000432f:	mov    edx,DWORD PTR [rbp-0x40]
   140004332:	mov    rcx,rbx
   140004335:	call   QWORD PTR [rip+0x3d95]        # 0x1400080d0
   14000433b:	xor    eax,eax
   14000433d:	mov    rcx,QWORD PTR [rbp-0x10]
   140004341:	xor    rcx,rsp
   140004344:	call   0x140007340
   140004349:	lea    r11,[rsp+0x80]
   140004351:	mov    rbx,QWORD PTR [r11+0x38]
   140004355:	mov    rsi,QWORD PTR [r11+0x40]
   140004359:	mov    rdi,QWORD PTR [r11+0x48]
   14000435d:	mov    rsp,r11
   140004360:	pop    r15
   140004362:	pop    r14
   140004364:	pop    r13
   140004366:	pop    r12
   140004368:	pop    rbp
   140004369:	ret    
   14000436a:	int3   
   14000436b:	int3   
   14000436c:	int3   
   14000436d:	int3   
   14000436e:	int3   
   14000436f:	int3   
   140004370:	mov    QWORD PTR [rsp+0x8],rbx
   140004375:	push   rdi
   140004376:	sub    rsp,0x20
   14000437a:	mov    rbx,rcx
   14000437d:	test   rcx,rcx
   140004380:	jne    0x140004399
   140004382:	call   QWORD PTR [rip+0x3dc0]        # 0x140008148
   140004388:	test   eax,eax
   14000438a:	jne    0x140004395
   14000438c:	lea    ecx,[rbx+0x57]
   14000438f:	call   QWORD PTR [rip+0x3d03]        # 0x140008098
   140004395:	xor    eax,eax
   140004397:	jmp    0x1400043e7
   140004399:	cmp    QWORD PTR [rcx],0x0
   14000439d:	jne    0x1400043a6
   14000439f:	mov    eax,0x1
   1400043a4:	jmp    0x1400043e7
   1400043a6:	call   QWORD PTR [rip+0x3d0c]        # 0x1400080b8
   1400043ac:	mov    rdi,rax
   1400043af:	test   rax,rax
   1400043b2:	je     0x140004395
   1400043b4:	mov    rcx,QWORD PTR [rbx]
   1400043b7:	call   0x1400045f4
   1400043bc:	cmp    eax,0xffffffff
   1400043bf:	jne    0x1400043c8
   1400043c1:	mov    ecx,0x80004003
   1400043c6:	jmp    0x14000438f
   1400043c8:	mov    rcx,QWORD PTR [rbx]
   1400043cb:	xor    edx,edx
   1400043cd:	movsxd r8,eax
   1400043d0:	call   0x140007916
   1400043d5:	mov    r8,QWORD PTR [rbx]
   1400043d8:	xor    edx,edx
   1400043da:	mov    rcx,rdi
   1400043dd:	call   QWORD PTR [rip+0x3ccd]        # 0x1400080b0
   1400043e3:	and    QWORD PTR [rbx],0x0
   1400043e7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400043ec:	add    rsp,0x20
   1400043f0:	pop    rdi
   1400043f1:	ret    
   1400043f2:	int3   
   1400043f3:	int3   
   1400043f4:	int3   
   1400043f5:	int3   
   1400043f6:	int3   
   1400043f7:	int3   
   1400043f8:	rex push rbx
   1400043fa:	sub    rsp,0x20
   1400043fe:	mov    rbx,rcx
   140004401:	test   rcx,rcx
   140004404:	jne    0x140004415
   140004406:	call   QWORD PTR [rip+0x3d3c]        # 0x140008148
   14000440c:	test   eax,eax
   14000440e:	jne    0x14000443b
   140004410:	lea    ecx,[rbx+0x57]
   140004413:	jmp    0x140004435
   140004415:	call   QWORD PTR [rip+0x3c9d]        # 0x1400080b8
   14000441b:	test   rax,rax
   14000441e:	je     0x14000443b
   140004420:	mov    r8,rbx
   140004423:	xor    edx,edx
   140004425:	mov    rcx,rax
   140004428:	call   QWORD PTR [rip+0x3c7a]        # 0x1400080a8
   14000442e:	test   eax,eax
   140004430:	jne    0x14000443d
   140004432:	lea    ecx,[rax+0x6]
   140004435:	call   QWORD PTR [rip+0x3c5d]        # 0x140008098
   14000443b:	xor    eax,eax
   14000443d:	add    rsp,0x20
   140004441:	pop    rbx
   140004442:	ret    
   140004443:	int3   
   140004444:	int3   
   140004445:	int3   
   140004446:	int3   
   140004447:	int3   
   140004448:	int3   
   140004449:	int3   
   14000444a:	int3   
   14000444b:	int3   
   14000444c:	rex push rbx
   14000444e:	sub    rsp,0x30
   140004452:	mov    ebx,ecx
   140004454:	test   ecx,ecx
   140004456:	jne    0x14000446f
   140004458:	call   QWORD PTR [rip+0x3cea]        # 0x140008148
   14000445e:	test   eax,eax
   140004460:	jne    0x14000446b
   140004462:	lea    ecx,[rax+0x57]
   140004465:	call   QWORD PTR [rip+0x3c2d]        # 0x140008098
   14000446b:	xor    eax,eax
   14000446d:	jmp    0x1400044e0
   14000446f:	call   QWORD PTR [rip+0x3c43]        # 0x1400080b8
   140004475:	test   rax,rax
   140004478:	je     0x14000446b
   14000447a:	mov    r8,rbx
   14000447d:	mov    edx,0xc
   140004482:	mov    rcx,rax
   140004485:	call   QWORD PTR [rip+0x3c15]        # 0x1400080a0
   14000448b:	mov    QWORD PTR [rsp+0x20],rax
   140004490:	jmp    0x1400044e0
   140004492:	cmp    eax,0xc0000017
   140004497:	jne    0x1400044b0
   140004499:	call   QWORD PTR [rip+0x3ca9]        # 0x140008148
   14000449f:	test   eax,eax
   1400044a1:	jne    0x1400044ac
   1400044a3:	lea    ecx,[rax+0x8]
   1400044a6:	call   QWORD PTR [rip+0x3bec]        # 0x140008098
   1400044ac:	xor    eax,eax
   1400044ae:	jmp    0x1400044e0
   1400044b0:	cmp    eax,0xc0000005
   1400044b5:	jne    0x1400044cb
   1400044b7:	mov    ecx,0x570
   1400044bc:	call   QWORD PTR [rip+0x3bd6]        # 0x140008098
   1400044c2:	call   0x140002874
   1400044c7:	xor    eax,eax
   1400044c9:	jmp    0x1400044e0
   1400044cb:	call   QWORD PTR [rip+0x3c77]        # 0x140008148
   1400044d1:	test   eax,eax
   1400044d3:	jne    0x1400044de
   1400044d5:	lea    ecx,[rax+0x8]
   1400044d8:	call   QWORD PTR [rip+0x3bba]        # 0x140008098
   1400044de:	xor    eax,eax
   1400044e0:	add    rsp,0x30
   1400044e4:	pop    rbx
   1400044e5:	ret    
   1400044e6:	int3   
   1400044e7:	int3   
   1400044e8:	int3   
   1400044e9:	int3   
   1400044ea:	int3   
   1400044eb:	int3   
   1400044ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400044f1:	push   rdi
   1400044f2:	sub    rsp,0x20
   1400044f6:	mov    edi,edx
   1400044f8:	mov    rbx,rcx
   1400044fb:	test   rcx,rcx
   1400044fe:	je     0x1400045cc
   140004504:	mov    rcx,QWORD PTR [rcx]
   140004507:	test   rcx,rcx
   14000450a:	je     0x1400045cc
   140004510:	test   edx,edx
   140004512:	jne    0x140004521
   140004514:	mov    rcx,rbx
   140004517:	call   0x140004370
   14000451c:	jmp    0x1400045e1
   140004521:	call   0x1400043f8
   140004526:	test   eax,eax
   140004528:	jne    0x140004533
   14000452a:	and    QWORD PTR [rbx],0x0
   14000452e:	jmp    0x1400045df
   140004533:	call   QWORD PTR [rip+0x3b7f]        # 0x1400080b8
   140004539:	test   rax,rax
   14000453c:	je     0x1400045df
   140004542:	mov    r9,rdi
   140004545:	mov    r8,QWORD PTR [rbx]
   140004548:	mov    edx,0xc
   14000454d:	mov    rcx,rax
   140004550:	call   QWORD PTR [rip+0x3c02]        # 0x140008158
   140004556:	test   rax,rax
   140004559:	jne    0x140004572
   14000455b:	call   QWORD PTR [rip+0x3be7]        # 0x140008148
   140004561:	test   eax,eax
   140004563:	jne    0x14000456e
   140004565:	lea    ecx,[rax+0x8]
   140004568:	call   QWORD PTR [rip+0x3b2a]        # 0x140008098
   14000456e:	xor    eax,eax
   140004570:	jmp    0x1400045e1
   140004572:	mov    QWORD PTR [rbx],rax
   140004575:	mov    eax,0x1
   14000457a:	jmp    0x1400045e1
   14000457c:	cmp    eax,0xc0000017
   140004581:	jne    0x14000459a
   140004583:	call   QWORD PTR [rip+0x3bbf]        # 0x140008148
   140004589:	test   eax,eax
   14000458b:	jne    0x140004596
   14000458d:	lea    ecx,[rax+0x8]
   140004590:	call   QWORD PTR [rip+0x3b02]        # 0x140008098
   140004596:	xor    eax,eax
   140004598:	jmp    0x1400045e1
   14000459a:	cmp    eax,0xc0000005
   14000459f:	jne    0x1400045b5
   1400045a1:	mov    ecx,0x570
   1400045a6:	call   QWORD PTR [rip+0x3aec]        # 0x140008098
   1400045ac:	call   0x140002874
   1400045b1:	xor    eax,eax
   1400045b3:	jmp    0x1400045e1
   1400045b5:	call   QWORD PTR [rip+0x3b8d]        # 0x140008148
   1400045bb:	test   eax,eax
   1400045bd:	jne    0x1400045c8
   1400045bf:	lea    ecx,[rax+0x8]
   1400045c2:	call   QWORD PTR [rip+0x3ad0]        # 0x140008098
   1400045c8:	xor    eax,eax
   1400045ca:	jmp    0x1400045e1
   1400045cc:	call   QWORD PTR [rip+0x3b76]        # 0x140008148
   1400045d2:	test   eax,eax
   1400045d4:	jne    0x1400045df
   1400045d6:	lea    ecx,[rax+0x57]
   1400045d9:	call   QWORD PTR [rip+0x3ab9]        # 0x140008098
   1400045df:	xor    eax,eax
   1400045e1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045e6:	add    rsp,0x20
   1400045ea:	pop    rdi
   1400045eb:	ret    
   1400045ec:	int3   
   1400045ed:	int3   
   1400045ee:	int3   
   1400045ef:	int3   
   1400045f0:	int3   
   1400045f1:	int3   
   1400045f2:	int3   
   1400045f3:	int3   
   1400045f4:	rex push rbx
   1400045f6:	sub    rsp,0x20
   1400045fa:	mov    rbx,rcx
   1400045fd:	test   rcx,rcx
   140004600:	jne    0x14000461e
   140004602:	call   QWORD PTR [rip+0x3b40]        # 0x140008148
   140004608:	test   eax,eax
   14000460a:	jne    0x140004615
   14000460c:	lea    ecx,[rbx+0x57]
   14000460f:	call   QWORD PTR [rip+0x3a83]        # 0x140008098
   140004615:	or     eax,0xffffffff
   140004618:	add    rsp,0x20
   14000461c:	pop    rbx
   14000461d:	ret    
   14000461e:	call   0x1400043f8
   140004623:	test   eax,eax
   140004625:	je     0x140004615
   140004627:	call   QWORD PTR [rip+0x3a8b]        # 0x1400080b8
   14000462d:	test   rax,rax
   140004630:	je     0x140004615
   140004632:	mov    r8,rbx
   140004635:	xor    edx,edx
   140004637:	mov    rcx,rax
   14000463a:	add    rsp,0x20
   14000463e:	pop    rbx
   14000463f:	rex.W jmp QWORD PTR [rip+0x3a4a]        # 0x140008090
   140004646:	int3   
   140004647:	int3   
   140004648:	int3   
   140004649:	int3   
   14000464a:	int3   
   14000464b:	int3   
   14000464c:	mov    QWORD PTR [rsp+0x18],r8
   140004651:	mov    QWORD PTR [rsp+0x20],r9
   140004656:	push   rbx
   140004657:	push   rbp
   140004658:	push   rsi
   140004659:	push   rdi
   14000465a:	sub    rsp,0x28
   14000465e:	xor    ebp,ebp
   140004660:	lea    rax,[rdx-0x1]
   140004664:	cmp    rax,0x7ffffffe
   14000466a:	mov    rsi,rcx
   14000466d:	mov    edi,ebp
   14000466f:	mov    ecx,0x80070057
   140004674:	cmova  edi,ecx
   140004677:	test   edi,edi
   140004679:	js     0x1400046b0
   14000467b:	lea    rbx,[rdx-0x1]
   14000467f:	mov    rcx,rsi
   140004682:	mov    rdx,rbx
   140004685:	lea    r9,[rsp+0x68]
   14000468a:	mov    edi,ebp
   14000468c:	call   QWORD PTR [rip+0x3cbe]        # 0x140008350
   140004692:	test   eax,eax
   140004694:	js     0x1400046a5
   140004696:	cdqe   
   140004698:	cmp    rax,rbx
   14000469b:	ja     0x1400046a5
   14000469d:	jne    0x1400046b8
   14000469f:	mov    WORD PTR [rsi+rbx*2],bp
   1400046a3:	jmp    0x1400046b8
   1400046a5:	mov    WORD PTR [rsi+rbx*2],bp
   1400046a9:	mov    edi,0x8007007a
   1400046ae:	jmp    0x1400046b8
   1400046b0:	test   rdx,rdx
   1400046b3:	je     0x1400046b8
   1400046b5:	mov    WORD PTR [rsi],bp
   1400046b8:	mov    eax,edi
   1400046ba:	add    rsp,0x28
   1400046be:	pop    rdi
   1400046bf:	pop    rsi
   1400046c0:	pop    rbp
   1400046c1:	pop    rbx
   1400046c2:	ret    
   1400046c3:	int3   
   1400046c4:	int3   
   1400046c5:	int3   
   1400046c6:	int3   
   1400046c7:	int3   
   1400046c8:	int3   
   1400046c9:	int3   
   1400046ca:	int3   
   1400046cb:	int3   
   1400046cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400046d1:	push   rdi
   1400046d2:	sub    rsp,0x20
   1400046d6:	xor    ebx,ebx
   1400046d8:	mov    rdi,rcx
   1400046db:	test   rcx,rcx
   1400046de:	jne    0x1400046f7
   1400046e0:	call   QWORD PTR [rip+0x3a62]        # 0x140008148
   1400046e6:	test   eax,eax
   1400046e8:	jne    0x1400046f3
   1400046ea:	lea    ecx,[rdi+0x57]
   1400046ed:	call   QWORD PTR [rip+0x39a5]        # 0x140008098
   1400046f3:	xor    eax,eax
   1400046f5:	jmp    0x140004722
   1400046f7:	call   QWORD PTR [rip+0x3a13]        # 0x140008110
   1400046fd:	mov    r9d,0x2
   140004703:	cmp    eax,r9d
   140004706:	jbe    0x1400046f3
   140004708:	lea    r8d,[r9-0x1]
   14000470c:	mov    rcx,rdi
   14000470f:	lea    rdx,[rip+0x3f9a]        # 0x1400086b0
   140004716:	call   0x140003904
   14000471b:	test   eax,eax
   14000471d:	sete   bl
   140004720:	mov    eax,ebx
   140004722:	mov    rbx,QWORD PTR [rsp+0x30]
   140004727:	add    rsp,0x20
   14000472b:	pop    rdi
   14000472c:	ret    
   14000472d:	int3   
   14000472e:	int3   
   14000472f:	int3   
   140004730:	int3   
   140004731:	int3   
   140004732:	int3   
   140004733:	int3   
   140004734:	mov    QWORD PTR [rsp+0x10],rbx
   140004739:	mov    QWORD PTR [rsp+0x18],rsi
   14000473e:	mov    QWORD PTR [rsp+0x20],rdi
   140004743:	push   rbp
   140004744:	push   r14
   140004746:	push   r15
   140004748:	mov    rbp,rsp
   14000474b:	sub    rsp,0x20
   14000474f:	mov    rsi,rcx
   140004752:	xor    ebx,ebx
   140004754:	xor    ecx,ecx
   140004756:	mov    DWORD PTR [rbp+0x20],ebx
   140004759:	call   QWORD PTR [rip+0x3939]        # 0x140008098
   14000475f:	test   rsi,rsi
   140004762:	je     0x1400048e9
   140004768:	mov    rcx,rsi
   14000476b:	call   QWORD PTR [rip+0x399f]        # 0x140008110
   140004771:	test   eax,eax
   140004773:	je     0x1400048e9
   140004779:	lea    r14d,[rbx+0x4]
   14000477d:	xor    edx,edx
   14000477f:	mov    ecx,r14d
   140004782:	lea    r8,[rbp+0x20]
   140004786:	call   QWORD PTR [rip+0x38fc]        # 0x140008088
   14000478c:	call   QWORD PTR [rip+0x39b6]        # 0x140008148
   140004792:	cmp    eax,0xea
   140004797:	je     0x1400047a0
   140004799:	xor    eax,eax
   14000479b:	jmp    0x1400048ee
   1400047a0:	mov    r8d,DWORD PTR [rbp+0x20]
   1400047a4:	mov    edi,0x1
   1400047a9:	mov    r9d,edi
   1400047ac:	xor    edx,edx
   1400047ae:	lea    ecx,[rdi+0xd]
   1400047b1:	call   0x140002458
   1400047b6:	mov    r15,rax
   1400047b9:	test   rax,rax
   1400047bc:	jne    0x1400047d3
   1400047be:	call   QWORD PTR [rip+0x3984]        # 0x140008148
   1400047c4:	test   eax,eax
   1400047c6:	jne    0x140004799
   1400047c8:	lea    ecx,[rdi+0x7]
   1400047cb:	call   QWORD PTR [rip+0x38c7]        # 0x140008098
   1400047d1:	jmp    0x140004799
   1400047d3:	lea    r8,[rbp+0x20]
   1400047d7:	mov    rdx,rax
   1400047da:	mov    ecx,r14d
   1400047dd:	call   QWORD PTR [rip+0x38a5]        # 0x140008088
   1400047e3:	test   eax,eax
   1400047e5:	je     0x140004799
   1400047e7:	xor    r9d,r9d
   1400047ea:	mov    r8d,edi
   1400047ed:	mov    rdx,rsi
   1400047f0:	mov    rcx,r15
   1400047f3:	call   0x140003904
   1400047f8:	test   eax,eax
   1400047fa:	jne    0x140004803
   1400047fc:	mov    eax,edi
   1400047fe:	jmp    0x1400048ee
   140004803:	mov    rcx,rsi
   140004806:	call   0x140004a10
   14000480b:	xor    edx,edx
   14000480d:	mov    DWORD PTR [rbp+0x20],ebx
   140004810:	lea    r8,[rbp+0x20]
   140004814:	cmp    eax,edi
   140004816:	jne    0x14000488f
   140004818:	mov    rcx,rsi
   14000481b:	call   0x140004aec
   140004820:	test   eax,eax
   140004822:	je     0x140004799
   140004828:	mov    r8d,DWORD PTR [rbp+0x20]
   14000482c:	xor    edx,edx
   14000482e:	mov    r9d,edi
   140004831:	lea    ecx,[rdx+0xf]
   140004834:	call   0x140002458
   140004839:	mov    r14,rax
   14000483c:	test   rax,rax
   14000483f:	je     0x140004799
   140004845:	lea    r8,[rbp+0x20]
   140004849:	mov    rdx,rax
   14000484c:	mov    rcx,rsi
   14000484f:	call   0x140004aec
   140004854:	test   eax,eax
   140004856:	je     0x140004799
   14000485c:	xor    r9d,r9d
   14000485f:	mov    r8d,edi
   140004862:	mov    rdx,r14
   140004865:	mov    rcx,r15
   140004868:	call   0x140003904
   14000486d:	test   eax,eax
   14000486f:	je     0x1400047fc
   140004871:	lea    rdx,[rip+0x3e40]        # 0x1400086b8
   140004878:	mov    r8d,edi
   14000487b:	xor    r9d,r9d
   14000487e:	mov    rcx,r14
   140004881:	call   0x140003904
   140004886:	test   eax,eax
   140004888:	sete   bl
   14000488b:	mov    eax,ebx
   14000488d:	jmp    0x1400048ee
   14000488f:	mov    r15d,0x7
   140004895:	mov    ecx,r15d
   140004898:	call   QWORD PTR [rip+0x37ea]        # 0x140008088
   14000489e:	call   QWORD PTR [rip+0x38a4]        # 0x140008148
   1400048a4:	cmp    eax,0xea
   1400048a9:	jne    0x140004799
   1400048af:	mov    r8d,DWORD PTR [rbp+0x20]
   1400048b3:	xor    edx,edx
   1400048b5:	mov    r9d,edi
   1400048b8:	lea    ecx,[rdx+0xe]
   1400048bb:	call   0x140002458
   1400048c0:	mov    r14,rax
   1400048c3:	test   rax,rax
   1400048c6:	je     0x140004799
   1400048cc:	lea    r8,[rbp+0x20]
   1400048d0:	mov    rdx,rax
   1400048d3:	mov    ecx,r15d
   1400048d6:	call   QWORD PTR [rip+0x37ac]        # 0x140008088
   1400048dc:	test   eax,eax
   1400048de:	je     0x140004799
   1400048e4:	mov    rdx,rsi
   1400048e7:	jmp    0x140004878
   1400048e9:	mov    eax,0x1
   1400048ee:	mov    rbx,QWORD PTR [rsp+0x48]
   1400048f3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400048f8:	mov    rdi,QWORD PTR [rsp+0x58]
   1400048fd:	add    rsp,0x20
   140004901:	pop    r15
   140004903:	pop    r14
   140004905:	pop    rbp
   140004906:	ret    
   140004907:	int3   
   140004908:	int3   
   140004909:	int3   
   14000490a:	int3   
   14000490b:	int3   
   14000490c:	int3   
   14000490d:	int3   
   14000490e:	int3   
   14000490f:	int3   
   140004910:	mov    QWORD PTR [rsp+0x10],rbx
   140004915:	push   rdi
   140004916:	sub    rsp,0x70
   14000491a:	mov    rax,QWORD PTR [rip+0x56e7]        # 0x14000a008
   140004921:	xor    rax,rsp
   140004924:	mov    QWORD PTR [rsp+0x60],rax
   140004929:	movups xmm0,XMMWORD PTR [rip+0x3da0]        # 0x1400086d0
   140004930:	xor    ebx,ebx
   140004932:	mov    rdi,rcx
   140004935:	movups xmm1,XMMWORD PTR [rip+0x3da4]        # 0x1400086e0
   14000493c:	movups XMMWORD PTR [rsp+0x28],xmm0
   140004941:	movups xmm0,XMMWORD PTR [rip+0x3da8]        # 0x1400086f0
   140004948:	movups XMMWORD PTR [rsp+0x38],xmm1
   14000494d:	movsd  xmm1,QWORD PTR [rip+0x3dab]        # 0x140008700
   140004955:	movsd  QWORD PTR [rsp+0x58],xmm1
   14000495b:	movups XMMWORD PTR [rsp+0x48],xmm0
   140004960:	test   rcx,rcx
   140004963:	je     0x1400049ea
   140004969:	call   QWORD PTR [rip+0x37a1]        # 0x140008110
   14000496f:	test   eax,eax
   140004971:	je     0x1400049ea
   140004973:	mov    rcx,rdi
   140004976:	call   0x140004a10
   14000497b:	mov    rcx,rdi
   14000497e:	cmp    eax,0x1
   140004981:	jne    0x1400049ce
   140004983:	lea    r8,[rsp+0x20]
   140004988:	mov    DWORD PTR [rsp+0x20],ebx
   14000498c:	xor    edx,edx
   14000498e:	call   0x140004aec
   140004993:	test   eax,eax
   140004995:	jne    0x14000499b
   140004997:	xor    eax,eax
   140004999:	jmp    0x1400049ef
   14000499b:	mov    r8d,DWORD PTR [rsp+0x20]
   1400049a0:	xor    edx,edx
   1400049a2:	mov    r9d,0x1
   1400049a8:	lea    ecx,[rdx+0xf]
   1400049ab:	call   0x140002458
   1400049b0:	test   rax,rax
   1400049b3:	je     0x140004997
   1400049b5:	lea    r8,[rsp+0x20]
   1400049ba:	mov    rdx,rax
   1400049bd:	mov    rcx,rdi
   1400049c0:	call   0x140004aec
   1400049c5:	test   eax,eax
   1400049c7:	setne  bl
   1400049ca:	mov    eax,ebx
   1400049cc:	jmp    0x1400049ef
   1400049ce:	lea    rdx,[rsp+0x28]
   1400049d3:	call   0x140003354
   1400049d8:	cmp    eax,0xffffffff
   1400049db:	je     0x1400049ea
   1400049dd:	mov    ecx,0x35
   1400049e2:	call   QWORD PTR [rip+0x36b0]        # 0x140008098
   1400049e8:	jmp    0x140004997
   1400049ea:	mov    eax,0x1
   1400049ef:	mov    rcx,QWORD PTR [rsp+0x60]
   1400049f4:	xor    rcx,rsp
   1400049f7:	call   0x140007340
   1400049fc:	mov    rbx,QWORD PTR [rsp+0x88]
   140004a04:	add    rsp,0x70
   140004a08:	pop    rdi
   140004a09:	ret    
   140004a0a:	int3   
   140004a0b:	int3   
   140004a0c:	int3   
   140004a0d:	int3   
   140004a0e:	int3   
   140004a0f:	int3   
   140004a10:	mov    QWORD PTR [rsp+0x10],rbx
   140004a15:	push   rdi
   140004a16:	sub    rsp,0x40
   140004a1a:	mov    rax,QWORD PTR [rip+0x55e7]        # 0x14000a008
   140004a21:	xor    rax,rsp
   140004a24:	mov    QWORD PTR [rsp+0x30],rax
   140004a29:	xor    ebx,ebx
   140004a2b:	mov    rdi,rcx
   140004a2e:	test   rcx,rcx
   140004a31:	je     0x140004abf
   140004a37:	call   QWORD PTR [rip+0x36d3]        # 0x140008110
   140004a3d:	test   eax,eax
   140004a3f:	je     0x140004abf
   140004a41:	xor    r9d,r9d
   140004a44:	lea    ecx,[rbx+0x10]
   140004a47:	xor    r8d,r8d
   140004a4a:	mov    rdx,rdi
   140004a4d:	call   0x140002458
   140004a52:	test   rax,rax
   140004a55:	jne    0x140004a66
   140004a57:	call   QWORD PTR [rip+0x36eb]        # 0x140008148
   140004a5d:	test   eax,eax
   140004a5f:	jne    0x140004aca
   140004a61:	lea    ecx,[rbx+0x8]
   140004a64:	jmp    0x140004ac4
   140004a66:	lea    rdx,[rip+0x3c9b]        # 0x140008708
   140004a6d:	mov    rcx,rax
   140004a70:	call   QWORD PTR [rip+0x381a]        # 0x140008290
   140004a76:	mov    rdi,rax
   140004a79:	test   rax,rax
   140004a7c:	je     0x140004abf
   140004a7e:	xor    r8d,r8d
   140004a81:	mov    rcx,rdi
   140004a84:	call   0x1400030e8
   140004a89:	test   eax,eax
   140004a8b:	je     0x140004aca
   140004a8d:	mov    rcx,rdi
   140004a90:	call   0x140003014
   140004a95:	cmp    eax,0xff
   140004a9a:	ja     0x140004aca
   140004a9c:	lea    rdx,[rip+0x3c65]        # 0x140008708
   140004aa3:	xor    ecx,ecx
   140004aa5:	inc    ebx
   140004aa7:	call   QWORD PTR [rip+0x37e3]        # 0x140008290
   140004aad:	mov    rdi,rax
   140004ab0:	test   rax,rax
   140004ab3:	jne    0x140004a7e
   140004ab5:	cmp    ebx,0x4
   140004ab8:	jne    0x140004abf
   140004aba:	lea    eax,[rdi+0x1]
   140004abd:	jmp    0x140004acc
   140004abf:	mov    ecx,0x254f
   140004ac4:	call   QWORD PTR [rip+0x35ce]        # 0x140008098
   140004aca:	xor    eax,eax
   140004acc:	mov    rcx,QWORD PTR [rsp+0x30]
   140004ad1:	xor    rcx,rsp
   140004ad4:	call   0x140007340
   140004ad9:	mov    rbx,QWORD PTR [rsp+0x58]
   140004ade:	add    rsp,0x40
   140004ae2:	pop    rdi
   140004ae3:	ret    
   140004ae4:	int3   
   140004ae5:	int3   
   140004ae6:	int3   
   140004ae7:	int3   
   140004ae8:	int3   
   140004ae9:	int3   
   140004aea:	int3   
   140004aeb:	int3   
   140004aec:	rex push rbp
   140004aee:	push   rbx
   140004aef:	push   rsi
   140004af0:	push   rdi
   140004af1:	push   r14
   140004af3:	lea    rbp,[rsp-0x980]
   140004afb:	sub    rsp,0xa80
   140004b02:	mov    rax,QWORD PTR [rip+0x54ff]        # 0x14000a008
   140004b09:	xor    rax,rsp
   140004b0c:	mov    QWORD PTR [rbp+0x970],rax
   140004b13:	xor    ebx,ebx
   140004b15:	mov    rsi,r8
   140004b18:	mov    r14,rdx
   140004b1b:	mov    QWORD PTR [rsp+0x40],rbx
   140004b20:	mov    rdi,rcx
   140004b23:	mov    DWORD PTR [rsp+0x48],ebx
   140004b27:	xor    edx,edx
   140004b29:	lea    rcx,[rsp+0x4c]
   140004b2e:	lea    r8d,[rbx+0x2c]
   140004b32:	call   0x140007916
   140004b37:	mov    WORD PTR [rbp+0x962],bx
   140004b3e:	test   rdi,rdi
   140004b41:	je     0x140004c6e
   140004b47:	test   rsi,rsi
   140004b4a:	je     0x140004c6e
   140004b50:	cmp    DWORD PTR [rsi],ebx
   140004b52:	je     0x140004b66
   140004b54:	cmp    DWORD PTR [rsi],0x2
   140004b57:	jb     0x140004c6e
   140004b5d:	test   r14,r14
   140004b60:	je     0x140004c6e
   140004b66:	cmp    DWORD PTR [rip+0x5ba4],ebx        # 0x14000a710
   140004b6c:	jne    0x140004b98
   140004b6e:	mov    ecx,0x202
   140004b73:	lea    rdx,[rbp-0x80]
   140004b77:	call   QWORD PTR [rip+0x36e3]        # 0x140008260
   140004b7d:	test   eax,eax
   140004b7f:	je     0x140004b8e
   140004b81:	call   QWORD PTR [rip+0x36e1]        # 0x140008268
   140004b87:	mov    ecx,eax
   140004b89:	jmp    0x140004c7b
   140004b8e:	mov    DWORD PTR [rip+0x5b78],0x1        # 0x14000a710
   140004b98:	lea    r9,[rsp+0x40]
   140004b9d:	xor    edx,edx
   140004b9f:	lea    r8,[rsp+0x48]
   140004ba4:	mov    rcx,rdi
   140004ba7:	call   QWORD PTR [rip+0x36c3]        # 0x140008270
   140004bad:	test   eax,eax
   140004baf:	jne    0x140004c81
   140004bb5:	mov    rdi,QWORD PTR [rsp+0x40]
   140004bba:	jmp    0x140004c11
   140004bbc:	mov    WORD PTR [rbp+0x160],bx
   140004bc3:	lea    rax,[rbp+0x120]
   140004bca:	mov    edx,DWORD PTR [rdi+0x10]
   140004bcd:	lea    r8,[rbp+0x160]
   140004bd4:	mov    rcx,QWORD PTR [rdi+0x20]
   140004bd8:	mov    r9d,0x401
   140004bde:	mov    DWORD PTR [rsp+0x30],0x4
   140004be6:	mov    DWORD PTR [rsp+0x28],0x20
   140004bee:	mov    QWORD PTR [rsp+0x20],rax
   140004bf3:	call   QWORD PTR [rip+0x3687]        # 0x140008280
   140004bf9:	test   eax,eax
   140004bfb:	je     0x140004c18
   140004bfd:	cmp    eax,0x2afc
   140004c02:	jne    0x140004c0d
   140004c04:	cmp    WORD PTR [rbp+0x160],bx
   140004c0b:	jne    0x140004c18
   140004c0d:	mov    rdi,QWORD PTR [rdi+0x28]
   140004c11:	test   rdi,rdi
   140004c14:	jne    0x140004bbc
   140004c16:	jmp    0x140004c5f
   140004c18:	lea    rdx,[rip+0x3ae9]        # 0x140008708
   140004c1f:	lea    rcx,[rbp+0x160]
   140004c26:	call   QWORD PTR [rip+0x3664]        # 0x140008290
   140004c2c:	mov    rdi,rax
   140004c2f:	test   rax,rax
   140004c32:	je     0x140004c3f
   140004c34:	mov    rcx,rax
   140004c37:	call   QWORD PTR [rip+0x34d3]        # 0x140008110
   140004c3d:	mov    ebx,eax
   140004c3f:	lea    eax,[rbx+0x1]
   140004c42:	cmp    DWORD PTR [rsi],eax
   140004c44:	jae    0x140004c4f
   140004c46:	mov    DWORD PTR [rsi],eax
   140004c48:	mov    ebx,0x1
   140004c4d:	jmp    0x140004c5f
   140004c4f:	mov    r8d,DWORD PTR [rsi]
   140004c52:	mov    rdx,rdi
   140004c55:	mov    rcx,r14
   140004c58:	call   0x14000376c
   140004c5d:	mov    ebx,eax
   140004c5f:	mov    rcx,QWORD PTR [rsp+0x40]
   140004c64:	call   QWORD PTR [rip+0x35ee]        # 0x140008258
   140004c6a:	mov    eax,ebx
   140004c6c:	jmp    0x140004c83
   140004c6e:	call   QWORD PTR [rip+0x34d4]        # 0x140008148
   140004c74:	test   eax,eax
   140004c76:	jne    0x140004c81
   140004c78:	lea    ecx,[rax+0x57]
   140004c7b:	call   QWORD PTR [rip+0x3417]        # 0x140008098
   140004c81:	xor    eax,eax
   140004c83:	mov    rcx,QWORD PTR [rbp+0x970]
   140004c8a:	xor    rcx,rsp
   140004c8d:	call   0x140007340
   140004c92:	add    rsp,0xa80
   140004c99:	pop    r14
   140004c9b:	pop    rdi
   140004c9c:	pop    rsi
   140004c9d:	pop    rbx
   140004c9e:	pop    rbp
   140004c9f:	ret    
   140004ca0:	int3   
   140004ca1:	int3   
   140004ca2:	int3   
   140004ca3:	int3   
   140004ca4:	int3   
   140004ca5:	int3   
   140004ca6:	int3   
   140004ca7:	int3   
   140004ca8:	mov    QWORD PTR [rsp+0x10],rbx
   140004cad:	push   rdi
   140004cae:	sub    rsp,0x20
   140004cb2:	xor    ebx,ebx
   140004cb4:	mov    rdi,rcx
   140004cb7:	mov    QWORD PTR [rsp+0x30],rbx
   140004cbc:	test   rcx,rcx
   140004cbf:	je     0x140004d05
   140004cc1:	call   QWORD PTR [rip+0x3449]        # 0x140008110
   140004cc7:	test   eax,eax
   140004cc9:	je     0x140004d05
   140004ccb:	mov    rcx,rdi
   140004cce:	call   0x1400046cc
   140004cd3:	test   eax,eax
   140004cd5:	jne    0x140004d12
   140004cd7:	mov    r8,rdi
   140004cda:	lea    rdx,[rip+0x3757]        # 0x140008438
   140004ce1:	lea    ecx,[rbx+0x1]
   140004ce4:	call   0x140002738
   140004ce9:	test   eax,eax
   140004ceb:	jne    0x140004d1c
   140004ced:	call   QWORD PTR [rip+0x3455]        # 0x140008148
   140004cf3:	test   eax,eax
   140004cf5:	jne    0x140004d00
   140004cf7:	lea    ecx,[rax+0x8]
   140004cfa:	call   QWORD PTR [rip+0x3398]        # 0x140008098
   140004d00:	call   0x140002874
   140004d05:	xor    eax,eax
   140004d07:	mov    rbx,QWORD PTR [rsp+0x38]
   140004d0c:	add    rsp,0x20
   140004d10:	pop    rdi
   140004d11:	ret    
   140004d12:	mov    rcx,rdi
   140004d15:	call   0x1400026bc
   140004d1a:	jmp    0x140004ce9
   140004d1c:	call   0x14000267c
   140004d21:	mov    ecx,0xd
   140004d26:	test   rax,rax
   140004d29:	jne    0x140004d32
   140004d2b:	call   0x1400023ec
   140004d30:	jmp    0x140004d40
   140004d32:	xor    r9d,r9d
   140004d35:	xor    r8d,r8d
   140004d38:	mov    rdx,rax
   140004d3b:	call   0x140002458
   140004d40:	test   rax,rax
   140004d43:	je     0x140004ced
   140004d45:	lea    r8,[rsp+0x30]
   140004d4a:	mov    edx,0x65
   140004d4f:	mov    rcx,rax
   140004d52:	call   QWORD PTR [rip+0x3650]        # 0x1400083a8
   140004d58:	test   eax,eax
   140004d5a:	jne    0x140004d05
   140004d5c:	mov    rcx,QWORD PTR [rsp+0x30]
   140004d61:	test   DWORD PTR [rcx+0x18],0x1000
   140004d68:	je     0x140004d79
   140004d6a:	mov    eax,DWORD PTR [rcx+0x10]
   140004d6d:	and    eax,0xf
   140004d70:	imul   ebx,eax,0x3e8
   140004d76:	add    ebx,DWORD PTR [rcx+0x14]
   140004d79:	call   QWORD PTR [rip+0x35e9]        # 0x140008368
   140004d7f:	mov    eax,ebx
   140004d81:	jmp    0x140004d07
   140004d83:	int3   
   140004d84:	int3   
   140004d85:	int3   
   140004d86:	int3   
   140004d87:	int3   
   140004d88:	int3   
   140004d89:	int3   
   140004d8a:	int3   
   140004d8b:	int3   
   140004d8c:	mov    QWORD PTR [rsp+0x8],rbx
   140004d91:	mov    QWORD PTR [rsp+0x10],rbp
   140004d96:	mov    QWORD PTR [rsp+0x18],rsi
   140004d9b:	push   rdi
   140004d9c:	sub    rsp,0x50
   140004da0:	mov    rbp,r8
   140004da3:	mov    rsi,rdx
   140004da6:	mov    rbx,rcx
   140004da9:	test   rcx,rcx
   140004dac:	je     0x140004f16
   140004db2:	call   0x140004734
   140004db7:	cmp    eax,0x1
   140004dba:	je     0x140004f16
   140004dc0:	mov    rcx,rbx
   140004dc3:	call   0x1400046cc
   140004dc8:	cmp    eax,0x1
   140004dcb:	jne    0x140004dd1
   140004dcd:	add    rbx,0x4
   140004dd1:	mov    rcx,rbx
   140004dd4:	call   0x140004910
   140004dd9:	test   eax,eax
   140004ddb:	jne    0x140004ded
   140004ddd:	call   0x140002874
   140004de2:	call   QWORD PTR [rip+0x3360]        # 0x140008148
   140004de8:	jmp    0x140004f4d
   140004ded:	lea    rcx,[rip+0x391c]        # 0x140008710
   140004df4:	call   QWORD PTR [rip+0x3316]        # 0x140008110
   140004dfa:	mov    r8,rbx
   140004dfd:	test   eax,eax
   140004dff:	je     0x140004e1b
   140004e01:	lea    r9,[rip+0x3908]        # 0x140008710
   140004e08:	mov    ecx,0x2
   140004e0d:	lea    rdx,[rip+0x390c]        # 0x140008720
   140004e14:	call   0x140002738
   140004e19:	jmp    0x140004e2c
   140004e1b:	lea    rdx,[rip+0x3616]        # 0x140008438
   140004e22:	mov    ecx,0x1
   140004e27:	call   0x140002738
   140004e2c:	test   eax,eax
   140004e2e:	jne    0x140004e51
   140004e30:	call   QWORD PTR [rip+0x3312]        # 0x140008148
   140004e36:	mov    ebx,0x8
   140004e3b:	test   eax,eax
   140004e3d:	jne    0x140004e47
   140004e3f:	mov    ecx,ebx
   140004e41:	call   QWORD PTR [rip+0x3251]        # 0x140008098
   140004e47:	call   0x140002874
   140004e4c:	jmp    0x140004f47
   140004e51:	call   0x14000267c
   140004e56:	mov    ecx,0x12
   140004e5b:	test   rax,rax
   140004e5e:	jne    0x140004e67
   140004e60:	call   0x1400023ec
   140004e65:	jmp    0x140004e75
   140004e67:	xor    r9d,r9d
   140004e6a:	xor    r8d,r8d
   140004e6d:	mov    rdx,rax
   140004e70:	call   0x140002458
   140004e75:	mov    rdi,rax
   140004e78:	test   rax,rax
   140004e7b:	je     0x140004e30
   140004e7d:	xor    edx,edx
   140004e7f:	lea    rcx,[rsp+0x20]
   140004e84:	lea    r8d,[rdx+0x30]
   140004e88:	call   0x140007916
   140004e8d:	and    DWORD PTR [rsp+0x24],0x0
   140004e92:	lea    rcx,[rsp+0x20]
   140004e97:	and    QWORD PTR [rsp+0x48],0x0
   140004e9d:	xor    r9d,r9d
   140004ea0:	and    QWORD PTR [rsp+0x30],0x0
   140004ea6:	mov    r8,rsi
   140004ea9:	mov    rdx,rbp
   140004eac:	mov    QWORD PTR [rsp+0x38],rdi
   140004eb1:	call   QWORD PTR [rip+0x3311]        # 0x1400081c8
   140004eb7:	mov    edi,eax
   140004eb9:	test   eax,eax
   140004ebb:	je     0x140004eda
   140004ebd:	cmp    eax,0x4b8
   140004ec2:	je     0x140004ed3
   140004ec4:	mov    ecx,eax
   140004ec6:	call   QWORD PTR [rip+0x31cc]        # 0x140008098
   140004ecc:	call   0x140002874
   140004ed1:	jmp    0x140004f12
   140004ed3:	call   0x140002920
   140004ed8:	jmp    0x140004f12
   140004eda:	xor    ecx,ecx
   140004edc:	xor    edi,edi
   140004ede:	call   QWORD PTR [rip+0x31b4]        # 0x140008098
   140004ee4:	mov    rcx,rbx
   140004ee7:	call   0x140004ca8
   140004eec:	cmp    eax,0x1388
   140004ef1:	jae    0x140004f12
   140004ef3:	mov    rcx,rbx
   140004ef6:	call   0x140004f68
   140004efb:	mov    ecx,0x1580
   140004f00:	call   0x140002cdc
   140004f05:	mov    rcx,rax
   140004f08:	call   0x1400026bc
   140004f0d:	mov    edi,0x4b8
   140004f12:	mov    eax,edi
   140004f14:	jmp    0x140004f4d
   140004f16:	test   rsi,rsi
   140004f19:	je     0x140004f4b
   140004f1b:	mov    rcx,rsi
   140004f1e:	call   QWORD PTR [rip+0x31ec]        # 0x140008110
   140004f24:	test   eax,eax
   140004f26:	je     0x140004f4b
   140004f28:	mov    ecx,0x157e
   140004f2d:	call   0x140002cdc
   140004f32:	mov    rcx,rax
   140004f35:	call   0x1400026bc
   140004f3a:	mov    ebx,0xa0010001
   140004f3f:	mov    ecx,ebx
   140004f41:	call   QWORD PTR [rip+0x3151]        # 0x140008098
   140004f47:	mov    eax,ebx
   140004f49:	jmp    0x140004f4d
   140004f4b:	xor    eax,eax
   140004f4d:	mov    rbx,QWORD PTR [rsp+0x60]
   140004f52:	mov    rbp,QWORD PTR [rsp+0x68]
   140004f57:	mov    rsi,QWORD PTR [rsp+0x70]
   140004f5c:	add    rsp,0x50
   140004f60:	pop    rdi
   140004f61:	ret    
   140004f62:	int3   
   140004f63:	int3   
   140004f64:	int3   
   140004f65:	int3   
   140004f66:	int3   
   140004f67:	int3   
   140004f68:	rex push rbx
   140004f6a:	sub    rsp,0x20
   140004f6e:	mov    rbx,rcx
   140004f71:	test   rcx,rcx
   140004f74:	je     0x14000502a
   140004f7a:	call   QWORD PTR [rip+0x3190]        # 0x140008110
   140004f80:	test   eax,eax
   140004f82:	je     0x14000502a
   140004f88:	mov    rcx,rbx
   140004f8b:	call   0x1400046cc
   140004f90:	cmp    eax,0x1
   140004f93:	jne    0x140004f99
   140004f95:	add    rbx,0x4
   140004f99:	lea    r9,[rip+0x3770]        # 0x140008710
   140004fa0:	mov    r8,rbx
   140004fa3:	lea    rdx,[rip+0x3776]        # 0x140008720
   140004faa:	mov    ecx,0x2
   140004faf:	call   0x140002738
   140004fb4:	test   eax,eax
   140004fb6:	jne    0x140004fd1
   140004fb8:	call   QWORD PTR [rip+0x318a]        # 0x140008148
   140004fbe:	mov    ebx,0x8
   140004fc3:	test   eax,eax
   140004fc5:	jne    0x14000502c
   140004fc7:	mov    ecx,ebx
   140004fc9:	call   QWORD PTR [rip+0x30c9]        # 0x140008098
   140004fcf:	jmp    0x14000502c
   140004fd1:	call   0x14000267c
   140004fd6:	mov    ecx,0x12
   140004fdb:	test   rax,rax
   140004fde:	jne    0x140004fe7
   140004fe0:	call   0x1400023ec
   140004fe5:	jmp    0x140004ff5
   140004fe7:	xor    r9d,r9d
   140004fea:	xor    r8d,r8d
   140004fed:	mov    rdx,rax
   140004ff0:	call   0x140002458
   140004ff5:	test   rax,rax
   140004ff8:	je     0x140004fb8
   140004ffa:	xor    edx,edx
   140004ffc:	mov    rcx,rax
   140004fff:	lea    r8d,[rdx+0x1]
   140005003:	call   QWORD PTR [rip+0x31c7]        # 0x1400081d0
   140005009:	mov    ebx,eax
   14000500b:	test   eax,eax
   14000500d:	je     0x140005024
   14000500f:	cmp    eax,0x4b8
   140005014:	je     0x14000501d
   140005016:	call   0x140002874
   14000501b:	jmp    0x14000502c
   14000501d:	call   0x140002920
   140005022:	jmp    0x14000502c
   140005024:	xor    ebx,ebx
   140005026:	xor    ecx,ecx
   140005028:	jmp    0x140004fc9
   14000502a:	xor    ebx,ebx
   14000502c:	mov    eax,ebx
   14000502e:	add    rsp,0x20
   140005032:	pop    rbx
   140005033:	ret    
   140005034:	int3   
   140005035:	int3   
   140005036:	int3   
   140005037:	int3   
   140005038:	int3   
   140005039:	int3   
   14000503a:	int3   
   14000503b:	int3   
   14000503c:	mov    QWORD PTR [rsp+0x8],rbx
   140005041:	mov    QWORD PTR [rsp+0x10],rbp
   140005046:	mov    DWORD PTR [rsp+0x18],r8d
   14000504b:	push   rsi
   14000504c:	push   rdi
   14000504d:	push   r12
   14000504f:	push   r13
   140005051:	push   r14
   140005053:	sub    rsp,0x60
   140005057:	mov    rsi,rcx
   14000505a:	mov    r13,r9
   14000505d:	xor    ecx,ecx
   14000505f:	mov    r14,rdx
   140005062:	call   QWORD PTR [rip+0x3030]        # 0x140008098
   140005068:	test   rsi,rsi
   14000506b:	je     0x140005437
   140005071:	mov    rcx,rsi
   140005074:	call   QWORD PTR [rip+0x3096]        # 0x140008110
   14000507a:	test   eax,eax
   14000507c:	je     0x140005437
   140005082:	mov    edi,0x1
   140005087:	cmp    DWORD PTR [rsp+0xb8],edi
   14000508e:	jne    0x1400050cd
   140005090:	test   r14,r14
   140005093:	je     0x1400050ae
   140005095:	cmp    DWORD PTR [rsp+0xa0],0x2
   14000509d:	jb     0x1400050ae
   14000509f:	test   r13,r13
   1400050a2:	je     0x1400050ae
   1400050a4:	cmp    DWORD PTR [rsp+0xb0],0x2
   1400050ac:	jae    0x1400050cd
   1400050ae:	call   QWORD PTR [rip+0x3094]        # 0x140008148
   1400050b4:	test   eax,eax
   1400050b6:	jne    0x1400050c1
   1400050b8:	lea    ecx,[rax+0x57]
   1400050bb:	call   QWORD PTR [rip+0x2fd7]        # 0x140008098
   1400050c1:	call   0x140002874
   1400050c6:	xor    eax,eax
   1400050c8:	jmp    0x14000543c
   1400050cd:	mov    rcx,rsi
   1400050d0:	mov    rbx,rsi
   1400050d3:	call   0x1400046cc
   1400050d8:	cmp    eax,edi
   1400050da:	jne    0x1400050e0
   1400050dc:	lea    rbx,[rsi+0x4]
   1400050e0:	cmp    DWORD PTR [rsp+0xb8],edi
   1400050e7:	jne    0x140005119
   1400050e9:	test   r13,r13
   1400050ec:	je     0x140005119
   1400050ee:	xor    r9d,r9d
   1400050f1:	lea    rdx,[rip+0x3514]        # 0x14000860c
   1400050f8:	mov    r8d,edi
   1400050fb:	mov    rcx,r13
   1400050fe:	call   0x140003904
   140005103:	test   eax,eax
   140005105:	jne    0x140005119
   140005107:	mov    rcx,rbx
   14000510a:	call   0x140004910
   14000510f:	test   eax,eax
   140005111:	jne    0x14000536c
   140005117:	jmp    0x1400050c1
   140005119:	mov    rcx,rbx
   14000511c:	xor    r12d,r12d
   14000511f:	call   0x140004910
   140005124:	test   eax,eax
   140005126:	je     0x1400050c1
   140005128:	test   r14,r14
   14000512b:	je     0x14000516b
   14000512d:	mov    rcx,r14
   140005130:	call   QWORD PTR [rip+0x2fda]        # 0x140008110
   140005136:	test   eax,eax
   140005138:	je     0x14000516b
   14000513a:	xor    r8d,r8d
   14000513d:	mov    rdx,r14
   140005140:	cmp    DWORD PTR [rsp+0xb8],r8d
   140005148:	mov    rcx,rsi
   14000514b:	cmove  r8,r13
   14000514f:	call   0x140004d8c
   140005154:	mov    ebx,eax
   140005156:	cmp    DWORD PTR [rsp+0xb8],edi
   14000515d:	jne    0x1400052cb
   140005163:	mov    r12d,edi
   140005166:	jmp    0x1400052cb
   14000516b:	mov    rcx,rsi
   14000516e:	mov    r12d,edi
   140005171:	call   0x140004734
   140005176:	cmp    eax,edi
   140005178:	je     0x1400052c9
   14000517e:	mov    rcx,rsi
   140005181:	mov    rbp,rsi
   140005184:	call   0x1400046cc
   140005189:	cmp    eax,edi
   14000518b:	jne    0x140005191
   14000518d:	lea    rbp,[rsi+0x4]
   140005191:	mov    rcx,rbp
   140005194:	call   0x140004910
   140005199:	test   eax,eax
   14000519b:	jne    0x1400051af
   14000519d:	call   0x140002874
   1400051a2:	call   QWORD PTR [rip+0x2fa0]        # 0x140008148
   1400051a8:	mov    ebx,eax
   1400051aa:	jmp    0x1400052cb
   1400051af:	lea    rcx,[rip+0x355a]        # 0x140008710
   1400051b6:	call   QWORD PTR [rip+0x2f54]        # 0x140008110
   1400051bc:	mov    r8,rbp
   1400051bf:	test   eax,eax
   1400051c1:	je     0x1400051dd
   1400051c3:	lea    r9,[rip+0x3546]        # 0x140008710
   1400051ca:	mov    ecx,0x2
   1400051cf:	lea    rdx,[rip+0x354a]        # 0x140008720
   1400051d6:	call   0x140002738
   1400051db:	jmp    0x1400051eb
   1400051dd:	lea    rdx,[rip+0x3254]        # 0x140008438
   1400051e4:	mov    ecx,edi
   1400051e6:	call   0x140002738
   1400051eb:	test   eax,eax
   1400051ed:	jne    0x140005210
   1400051ef:	call   QWORD PTR [rip+0x2f53]        # 0x140008148
   1400051f5:	mov    ebx,0x8
   1400051fa:	test   eax,eax
   1400051fc:	jne    0x140005206
   1400051fe:	mov    ecx,ebx
   140005200:	call   QWORD PTR [rip+0x2e92]        # 0x140008098
   140005206:	call   0x140002874
   14000520b:	jmp    0x1400052cb
   140005210:	call   0x14000267c
   140005215:	mov    ecx,0x12
   14000521a:	test   rax,rax
   14000521d:	jne    0x140005226
   14000521f:	call   0x1400023ec
   140005224:	jmp    0x140005234
   140005226:	xor    r9d,r9d
   140005229:	xor    r8d,r8d
   14000522c:	mov    rdx,rax
   14000522f:	call   0x140002458
   140005234:	mov    rbx,rax
   140005237:	test   rax,rax
   14000523a:	je     0x1400051ef
   14000523c:	xor    edx,edx
   14000523e:	lea    rcx,[rsp+0x30]
   140005243:	lea    r8d,[rdx+0x30]
   140005247:	call   0x140007916
   14000524c:	xor    eax,eax
   14000524e:	mov    QWORD PTR [rsp+0x48],rbx
   140005253:	xor    r9d,r9d
   140005256:	mov    DWORD PTR [rsp+0x34],eax
   14000525a:	xor    r8d,r8d
   14000525d:	mov    QWORD PTR [rsp+0x58],rax
   140005262:	xor    edx,edx
   140005264:	mov    QWORD PTR [rsp+0x40],rax
   140005269:	lea    rcx,[rsp+0x30]
   14000526e:	call   QWORD PTR [rip+0x2f54]        # 0x1400081c8
   140005274:	mov    ebx,eax
   140005276:	test   eax,eax
   140005278:	je     0x14000528f
   14000527a:	cmp    eax,0x4b8
   14000527f:	je     0x140005288
   140005281:	mov    ecx,eax
   140005283:	jmp    0x140005200
   140005288:	call   0x140002920
   14000528d:	jmp    0x1400052cb
   14000528f:	xor    ecx,ecx
   140005291:	xor    ebx,ebx
   140005293:	call   QWORD PTR [rip+0x2dff]        # 0x140008098
   140005299:	mov    rcx,rbp
   14000529c:	call   0x140004ca8
   1400052a1:	cmp    eax,0x1388
   1400052a6:	jae    0x1400052cb
   1400052a8:	mov    rcx,rbp
   1400052ab:	call   0x140004f68
   1400052b0:	mov    ecx,0x1580
   1400052b5:	call   0x140002cdc
   1400052ba:	mov    rcx,rax
   1400052bd:	call   0x1400026bc
   1400052c2:	mov    ebx,0x4b8
   1400052c7:	jmp    0x1400052cb
   1400052c9:	xor    ebx,ebx
   1400052cb:	cmp    ebx,0x55
   1400052ce:	jne    0x1400052e2
   1400052d0:	mov    ecx,0x50010001
   1400052d5:	call   QWORD PTR [rip+0x2dbd]        # 0x140008098
   1400052db:	mov    eax,edi
   1400052dd:	jmp    0x14000543c
   1400052e2:	test   ebx,ebx
   1400052e4:	jne    0x1400052ef
   1400052e6:	cmp    r12d,edi
   1400052e9:	je     0x1400052d0
   1400052eb:	xor    ecx,ecx
   1400052ed:	jmp    0x1400052d5
   1400052ef:	cmp    ebx,0x34
   1400052f2:	je     0x14000541a
   1400052f8:	cmp    ebx,0x56
   1400052fb:	je     0x14000535e
   1400052fd:	cmp    ebx,0x4be
   140005303:	je     0x14000541a
   140005309:	cmp    ebx,0x4c3
   14000530f:	je     0x140005354
   140005311:	cmp    ebx,0x4ce
   140005317:	jbe    0x1400050c1
   14000531d:	cmp    ebx,0x4d1
   140005323:	jbe    0x14000541a
   140005329:	cmp    ebx,0x52e
   14000532f:	je     0x14000535e
   140005331:	mov    esi,0xa0010001
   140005336:	cmp    ebx,esi
   140005338:	jne    0x1400050c1
   14000533e:	mov    ecx,0x157e
   140005343:	call   0x140002cdc
   140005348:	mov    rcx,rax
   14000534b:	call   0x1400026bc
   140005350:	mov    ecx,esi
   140005352:	jmp    0x1400052d5
   140005354:	mov    ecx,0x4c3
   140005359:	jmp    0x1400052d5
   14000535e:	cmp    DWORD PTR [rsp+0xb8],0x0
   140005366:	je     0x1400050c6
   14000536c:	mov    rcx,r14
   14000536f:	call   QWORD PTR [rip+0x2d9b]        # 0x140008110
   140005375:	test   eax,eax
   140005377:	jne    0x140005395
   140005379:	lea    r8,[rsp+0xa0]
   140005381:	mov    rdx,r14
   140005384:	lea    ecx,[rax+0x2]
   140005387:	call   QWORD PTR [rip+0x2e83]        # 0x140008210
   14000538d:	test   al,al
   14000538f:	je     0x1400050c1
   140005395:	mov    ecx,0x157d
   14000539a:	call   0x140002cdc
   14000539f:	mov    ecx,edi
   1400053a1:	mov    rbx,rax
   1400053a4:	call   0x140007858
   1400053a9:	mov    rcx,rax
   1400053ac:	mov    QWORD PTR [rsp+0x20],r14
   1400053b1:	mov    r9,rbx
   1400053b4:	mov    r8d,edi
   1400053b7:	mov    edx,edi
   1400053b9:	call   0x140003d2c
   1400053be:	mov    edx,DWORD PTR [rsp+0xb0]
   1400053c5:	mov    rcx,r13
   1400053c8:	call   0x140004050
   1400053cd:	mov    r8,r13
   1400053d0:	mov    rdx,r14
   1400053d3:	mov    rcx,rsi
   1400053d6:	call   0x140004d8c
   1400053db:	mov    ebx,eax
   1400053dd:	test   eax,eax
   1400053df:	je     0x1400052db
   1400053e5:	cmp    eax,0x34
   1400053e8:	je     0x14000541a
   1400053ea:	cmp    eax,0x4be
   1400053ef:	je     0x14000541a
   1400053f1:	cmp    eax,0x4c3
   1400053f6:	je     0x140005354
   1400053fc:	cmp    eax,0x4ce
   140005401:	jbe    0x1400050c1
   140005407:	cmp    eax,0x4d1
   14000540c:	jbe    0x14000541a
   14000540e:	mov    esi,0xa0010001
   140005413:	cmp    eax,esi
   140005415:	jmp    0x140005338
   14000541a:	mov    ecx,0x4c6
   14000541f:	call   QWORD PTR [rip+0x2c73]        # 0x140008098
   140005425:	call   0x140002874
   14000542a:	mov    ecx,ebx
   14000542c:	call   QWORD PTR [rip+0x2c66]        # 0x140008098
   140005432:	jmp    0x1400050c6
   140005437:	mov    eax,0x1
   14000543c:	lea    r11,[rsp+0x60]
   140005441:	mov    rbx,QWORD PTR [r11+0x30]
   140005445:	mov    rbp,QWORD PTR [r11+0x38]
   140005449:	mov    rsp,r11
   14000544c:	pop    r14
   14000544e:	pop    r13
   140005450:	pop    r12
   140005452:	pop    rdi
   140005453:	pop    rsi
   140005454:	ret    
   140005455:	int3   
   140005456:	int3   
   140005457:	int3   
   140005458:	int3   
   140005459:	int3   
   14000545a:	int3   
   14000545b:	int3   
   14000545c:	mov    QWORD PTR [rsp+0x8],rbx
   140005461:	push   rbp
   140005462:	push   rsi
   140005463:	push   rdi
   140005464:	push   r12
   140005466:	push   r13
   140005468:	push   r14
   14000546a:	push   r15
   14000546c:	mov    rbp,rsp
   14000546f:	sub    rsp,0x50
   140005473:	xor    r15d,r15d
   140005476:	mov    rsi,rcx
   140005479:	xor    ecx,ecx
   14000547b:	mov    DWORD PTR [rbp+0x58],r15d
   14000547f:	mov    DWORD PTR [rbp+0x48],r15d
   140005483:	mov    DWORD PTR [rbp+0x50],r15d
   140005487:	mov    QWORD PTR [rbp-0x20],r15
   14000548b:	mov    QWORD PTR [rbp-0x10],r15
   14000548f:	call   QWORD PTR [rip+0x2c03]        # 0x140008098
   140005495:	mov    ebx,0x104
   14000549a:	lea    r12d,[r15+0x1]
   14000549e:	mov    edx,ebx
   1400054a0:	lea    r13d,[r15+0x7]
   1400054a4:	mov    eax,r15d
   1400054a7:	neg    eax
   1400054a9:	mov    r9d,r12d
   1400054ac:	mov    ecx,r13d
   1400054af:	sbb    eax,eax
   1400054b1:	and    eax,ebx
   1400054b3:	add    edx,eax
   1400054b5:	mov    DWORD PTR [rbp+0x48],edx
   1400054b8:	mov    r8d,edx
   1400054bb:	xor    edx,edx
   1400054bd:	call   0x140002458
   1400054c2:	mov    rdi,rax
   1400054c5:	test   rax,rax
   1400054c8:	je     0x1400056cb
   1400054ce:	mov    r8d,DWORD PTR [rbp+0x48]
   1400054d2:	mov    rdx,rax
   1400054d5:	xor    ecx,ecx
   1400054d7:	call   QWORD PTR [rip+0x2ba3]        # 0x140008080
   1400054dd:	test   eax,eax
   1400054df:	je     0x1400056de
   1400054e5:	mov    edx,DWORD PTR [rbp+0x48]
   1400054e8:	lea    ecx,[rdx-0x1]
   1400054eb:	cmp    eax,ecx
   1400054ed:	jae    0x1400054a7
   1400054ef:	lea    r8,[rbp+0x58]
   1400054f3:	mov    rdx,rdi
   1400054f6:	mov    ecx,r12d
   1400054f9:	call   QWORD PTR [rip+0x2d41]        # 0x140008240
   1400054ff:	mov    DWORD PTR [rbp+0x48],eax
   140005502:	test   eax,eax
   140005504:	jne    0x14000552a
   140005506:	call   QWORD PTR [rip+0x2c3c]        # 0x140008148
   14000550c:	test   eax,eax
   14000550e:	jne    0x1400056de
   140005514:	call   QWORD PTR [rip+0x2c2e]        # 0x140008148
   14000551a:	test   eax,eax
   14000551c:	jne    0x1400056de
   140005522:	lea    ecx,[rax+0x57]
   140005525:	jmp    0x1400056d8
   14000552a:	add    eax,0xa
   14000552d:	mov    ecx,eax
   14000552f:	mov    DWORD PTR [rbp+0x48],eax
   140005532:	call   0x14000444c
   140005537:	mov    QWORD PTR [rbp-0x18],rax
   14000553b:	mov    rbx,rax
   14000553e:	test   rax,rax
   140005541:	je     0x1400056de
   140005547:	mov    r9d,DWORD PTR [rbp+0x48]
   14000554b:	xor    r8d,r8d
   14000554e:	mov    rdx,rdi
   140005551:	mov    QWORD PTR [rsp+0x20],rax
   140005556:	lea    ecx,[r8+0x3]
   14000555a:	call   QWORD PTR [rip+0x2cd8]        # 0x140008238
   140005560:	test   eax,eax
   140005562:	jne    0x140005572
   140005564:	lea    rcx,[rbp-0x18]
   140005568:	call   0x140004370
   14000556d:	jmp    0x1400056de
   140005572:	lea    r9,[rbp+0x50]
   140005576:	mov    rcx,rbx
   140005579:	lea    r8,[rbp-0x10]
   14000557d:	lea    rdx,[rip+0x31ac]        # 0x140008730
   140005584:	call   QWORD PTR [rip+0x2cbe]        # 0x140008248
   14000558a:	test   eax,eax
   14000558c:	je     0x140005564
   14000558e:	xor    edx,edx
   140005590:	mov    r9d,r12d
   140005593:	mov    ecx,r13d
   140005596:	lea    r8d,[rdx+0x40]
   14000559a:	call   0x140002458
   14000559f:	test   DWORD PTR [rbp+0x50],0xfffffffc
   1400055a6:	mov    r14,rax
   1400055a9:	mov    QWORD PTR [rbp-0x20],r15
   1400055ad:	mov    edi,r15d
   1400055b0:	jbe    0x140005564
   1400055b2:	mov    rdx,QWORD PTR [rbp-0x10]
   1400055b6:	mov    r8d,edi
   1400055b9:	movzx  ecx,WORD PTR [rdx+r8*4+0x2]
   1400055bf:	movzx  r9d,WORD PTR [rdx+r8*4]
   1400055c4:	lea    r8,[rip+0x31a5]        # 0x140008770
   1400055cb:	mov    DWORD PTR [rsp+0x20],ecx
   1400055cf:	mov    edx,0x40
   1400055d4:	mov    rcx,r14
   1400055d7:	call   0x14000464c
   1400055dc:	lea    r9,[rbp+0x48]
   1400055e0:	mov    rdx,r14
   1400055e3:	lea    r8,[rbp-0x20]
   1400055e7:	mov    rcx,rbx
   1400055ea:	call   QWORD PTR [rip+0x2c58]        # 0x140008248
   1400055f0:	test   eax,eax
   1400055f2:	jne    0x14000560a
   1400055f4:	mov    eax,DWORD PTR [rbp+0x50]
   1400055f7:	add    edi,r12d
   1400055fa:	shr    eax,0x2
   1400055fd:	mov    rcx,r15
   140005600:	mov    QWORD PTR [rbp-0x20],rcx
   140005604:	cmp    edi,eax
   140005606:	jb     0x1400055b2
   140005608:	jmp    0x14000560e
   14000560a:	mov    rcx,QWORD PTR [rbp-0x20]
   14000560e:	test   rcx,rcx
   140005611:	je     0x140005564
   140005617:	call   QWORD PTR [rip+0x2af3]        # 0x140008110
   14000561d:	cmp    eax,0x4
   140005620:	ja     0x140005643
   140005622:	lea    rcx,[rbp-0x18]
   140005626:	call   0x140004370
   14000562b:	call   QWORD PTR [rip+0x2b17]        # 0x140008148
   140005631:	test   eax,eax
   140005633:	jne    0x1400056de
   140005639:	mov    ecx,0x42b
   14000563e:	jmp    0x1400056d8
   140005643:	mov    rcx,QWORD PTR [rbp-0x20]
   140005647:	lea    rdx,[rip+0x3172]        # 0x1400087c0
   14000564e:	mov    r8d,r12d
   140005651:	call   0x1400033fc
   140005656:	cmp    eax,0xffffffff
   140005659:	je     0x140005684
   14000565b:	mov    rcx,QWORD PTR [rbp-0x20]
   14000565f:	call   QWORD PTR [rip+0x2aab]        # 0x140008110
   140005665:	lea    rcx,[rip+0x3154]        # 0x1400087c0
   14000566c:	movsxd rbx,eax
   14000566f:	call   QWORD PTR [rip+0x2a9b]        # 0x140008110
   140005675:	movsxd rcx,eax
   140005678:	mov    rax,QWORD PTR [rbp-0x20]
   14000567c:	sub    rbx,rcx
   14000567f:	mov    WORD PTR [rax+rbx*2],r15w
   140005684:	test   rsi,rsi
   140005687:	je     0x140005715
   14000568d:	mov    rcx,QWORD PTR [rbp-0x20]
   140005691:	call   QWORD PTR [rip+0x2a79]        # 0x140008110
   140005697:	mov    rcx,rsi
   14000569a:	mov    ebx,eax
   14000569c:	call   QWORD PTR [rip+0x2a6e]        # 0x140008110
   1400056a2:	mov    r9d,r12d
   1400056a5:	xor    edx,edx
   1400056a7:	mov    ecx,r13d
   1400056aa:	lea    r8d,[rax+0xb]
   1400056ae:	add    r8d,ebx
   1400056b1:	mov    DWORD PTR [rbp+0x48],r8d
   1400056b5:	call   0x140002458
   1400056ba:	mov    rbx,rax
   1400056bd:	test   rax,rax
   1400056c0:	jne    0x1400056f8
   1400056c2:	lea    rcx,[rbp-0x18]
   1400056c6:	call   0x140004370
   1400056cb:	call   QWORD PTR [rip+0x2a77]        # 0x140008148
   1400056d1:	test   eax,eax
   1400056d3:	jne    0x1400056de
   1400056d5:	lea    ecx,[rax+0x8]
   1400056d8:	call   QWORD PTR [rip+0x29ba]        # 0x140008098
   1400056de:	xor    eax,eax
   1400056e0:	mov    rbx,QWORD PTR [rsp+0x90]
   1400056e8:	add    rsp,0x50
   1400056ec:	pop    r15
   1400056ee:	pop    r14
   1400056f0:	pop    r13
   1400056f2:	pop    r12
   1400056f4:	pop    rdi
   1400056f5:	pop    rsi
   1400056f6:	pop    rbp
   1400056f7:	ret    
   1400056f8:	mov    edx,DWORD PTR [rbp+0x48]
   1400056fb:	lea    r8,[rip+0x30ce]        # 0x1400087d0
   140005702:	mov    r9,QWORD PTR [rbp-0x20]
   140005706:	mov    rcx,rax
   140005709:	mov    QWORD PTR [rsp+0x20],rsi
   14000570e:	call   0x14000464c
   140005713:	jmp    0x14000573b
   140005715:	mov    rdx,QWORD PTR [rbp-0x20]
   140005719:	mov    ecx,r13d
   14000571c:	test   rdx,rdx
   14000571f:	jne    0x140005728
   140005721:	call   0x1400023ec
   140005726:	jmp    0x140005733
   140005728:	xor    r9d,r9d
   14000572b:	xor    r8d,r8d
   14000572e:	call   0x140002458
   140005733:	mov    rbx,rax
   140005736:	test   rax,rax
   140005739:	je     0x1400056c2
   14000573b:	mov    rcx,rbx
   14000573e:	mov    QWORD PTR [rbp-0x20],rbx
   140005742:	call   QWORD PTR [rip+0x2ad8]        # 0x140008220
   140005748:	mov    edi,0x50
   14000574d:	mov    r9d,r12d
   140005750:	mov    r8d,edi
   140005753:	xor    edx,edx
   140005755:	lea    ecx,[rdi-0x45]
   140005758:	call   0x140002458
   14000575d:	mov    rbx,rax
   140005760:	test   rax,rax
   140005763:	je     0x1400056c2
   140005769:	mov    ecx,0x15ed
   14000576e:	call   0x140002cdc
   140005773:	mov    r9,QWORD PTR [rbp-0x20]
   140005777:	mov    r8,rax
   14000577a:	mov    edx,edi
   14000577c:	mov    rcx,rbx
   14000577f:	call   0x14000464c
   140005784:	lea    rcx,[rbp-0x18]
   140005788:	call   0x140004370
   14000578d:	mov    rax,rbx
   140005790:	jmp    0x1400056e0
   140005795:	int3   
   140005796:	int3   
   140005797:	int3   
   140005798:	int3   
   140005799:	int3   
   14000579a:	int3   
   14000579b:	int3   
   14000579c:	mov    QWORD PTR [rsp+0x8],rbx
   1400057a1:	mov    QWORD PTR [rsp+0x10],rsi
   1400057a6:	push   rdi
   1400057a7:	sub    rsp,0x20
   1400057ab:	mov    rdi,rcx
   1400057ae:	xor    ecx,ecx
   1400057b0:	call   QWORD PTR [rip+0x28e2]        # 0x140008098
   1400057b6:	test   rdi,rdi
   1400057b9:	je     0x140005832
   1400057bb:	mov    edx,0x7c
   1400057c0:	mov    rcx,rdi
   1400057c3:	call   0x1400031c8
   1400057c8:	mov    ebx,eax
   1400057ca:	cmp    eax,0xffffffff
   1400057cd:	jne    0x1400057e2
   1400057cf:	xor    ecx,ecx
   1400057d1:	call   QWORD PTR [rip+0x28c1]        # 0x140008098
   1400057d7:	mov    rcx,rdi
   1400057da:	call   QWORD PTR [rip+0x2930]        # 0x140008110
   1400057e0:	mov    ebx,eax
   1400057e2:	xor    edx,edx
   1400057e4:	lea    r8d,[rbx+0x5]
   1400057e8:	lea    ecx,[rdx+0xc]
   1400057eb:	lea    r9d,[rdx+0x1]
   1400057ef:	call   0x140002458
   1400057f4:	mov    rsi,rax
   1400057f7:	test   rax,rax
   1400057fa:	jne    0x14000580b
   1400057fc:	call   QWORD PTR [rip+0x2946]        # 0x140008148
   140005802:	test   eax,eax
   140005804:	jne    0x140005845
   140005806:	lea    ecx,[rsi+0x8]
   140005809:	jmp    0x14000583f
   14000580b:	lea    r8d,[rbx+0x1]
   14000580f:	mov    rcx,rax
   140005812:	lea    rdx,[rip+0x2fc3]        # 0x1400087dc
   140005819:	call   0x14000376c
   14000581e:	lea    r8d,[rbx+0x2]
   140005822:	mov    rdx,rdi
   140005825:	mov    rcx,rsi
   140005828:	call   0x140003810
   14000582d:	mov    rax,rsi
   140005830:	jmp    0x140005847
   140005832:	call   QWORD PTR [rip+0x2910]        # 0x140008148
   140005838:	test   eax,eax
   14000583a:	jne    0x140005845
   14000583c:	lea    ecx,[rax+0x57]
   14000583f:	call   QWORD PTR [rip+0x2853]        # 0x140008098
   140005845:	xor    eax,eax
   140005847:	mov    rbx,QWORD PTR [rsp+0x30]
   14000584c:	mov    rsi,QWORD PTR [rsp+0x38]
   140005851:	add    rsp,0x20
   140005855:	pop    rdi
   140005856:	ret    
   140005857:	int3   
   140005858:	int3   
   140005859:	int3   
   14000585a:	int3   
   14000585b:	int3   
   14000585c:	int3   
   14000585d:	int3   
   14000585e:	int3   
   14000585f:	int3   
   140005860:	mov    QWORD PTR [rsp+0x8],rbx
   140005865:	mov    QWORD PTR [rsp+0x10],rbp
   14000586a:	mov    QWORD PTR [rsp+0x18],rsi
   14000586f:	push   rdi
   140005870:	push   r12
   140005872:	push   r13
   140005874:	push   r14
   140005876:	push   r15
   140005878:	sub    rsp,0x30
   14000587c:	mov    r14,rcx
   14000587f:	xor    r13d,r13d
   140005882:	xor    ecx,ecx
   140005884:	mov    r12d,r13d
   140005887:	mov    rbx,r8
   14000588a:	call   QWORD PTR [rip+0x2808]        # 0x140008098
   140005890:	test   rbx,rbx
   140005893:	jne    0x1400058ab
   140005895:	call   QWORD PTR [rip+0x28ad]        # 0x140008148
   14000589b:	test   eax,eax
   14000589d:	jne    0x140005b25
   1400058a3:	lea    ecx,[rax+0x57]
   1400058a6:	jmp    0x140005b1f
   1400058ab:	test   r14,r14
   1400058ae:	je     0x140005895
   1400058b0:	or     DWORD PTR [r14],0xffffffff
   1400058b4:	mov    r15d,r13d
   1400058b7:	add    rbx,0x58
   1400058bb:	lea    rbp,[rbx-0x58]
   1400058bf:	test   rbp,rbp
   1400058c2:	je     0x140005b10
   1400058c8:	call   QWORD PTR [rip+0x2832]        # 0x140008100
   1400058ce:	or     DWORD PTR [rsp+0x28],0xffffffff
   1400058d3:	or     r9d,0xffffffff
   1400058d7:	mov    ecx,eax
   1400058d9:	mov    r8,rbp
   1400058dc:	lea    rax,[rip+0x2efd]        # 0x1400087e0
   1400058e3:	mov    QWORD PTR [rsp+0x20],rax
   1400058e8:	lea    edx,[r9+0x2]
   1400058ec:	call   QWORD PTR [rip+0x2806]        # 0x1400080f8
   1400058f2:	add    eax,0xfffffffe
   1400058f5:	jne    0x140005895
   1400058f7:	mov    rdi,QWORD PTR [rbx-0x48]
   1400058fb:	cmp    DWORD PTR [rbx],r13d
   1400058fe:	jne    0x140005895
   140005900:	cmp    QWORD PTR [rbx+0x8],r13
   140005904:	jne    0x140005895
   140005906:	cmp    QWORD PTR [rbx+0x10],r13
   14000590a:	jne    0x140005895
   14000590c:	cmp    QWORD PTR [rbx+0x18],r13
   140005910:	jne    0x140005895
   140005912:	mov    rsi,rdi
   140005915:	and    esi,0x40000
   14000591b:	jne    0x140005938
   14000591d:	mov    rcx,QWORD PTR [rbx-0x38]
   140005921:	test   rcx,rcx
   140005924:	je     0x140005895
   14000592a:	call   QWORD PTR [rip+0x27e0]        # 0x140008110
   140005930:	test   eax,eax
   140005932:	je     0x140005895
   140005938:	mov    rax,rdi
   14000593b:	and    eax,0x20000
   140005940:	je     0x14000594c
   140005942:	cmp    DWORD PTR [rbx-0x50],0xa
   140005946:	jne    0x140005895
   14000594c:	test   rax,rax
   14000594f:	je     0x140005961
   140005951:	cmp    r12d,0x1
   140005955:	je     0x140005895
   14000595b:	mov    r12d,0x1
   140005961:	test   rsi,rsi
   140005964:	je     0x140005973
   140005966:	cmp    DWORD PTR [r14],0xffffffff
   14000596a:	jne    0x140005895
   140005970:	mov    DWORD PTR [r14],r15d
   140005973:	mov    ecx,0x60000
   140005978:	mov    rax,rdi
   14000597b:	and    rax,rcx
   14000597e:	cmp    rax,rcx
   140005981:	je     0x140005895
   140005987:	mov    eax,DWORD PTR [rbx-0x50]
   14000598a:	cmp    eax,0x1
   14000598d:	je     0x140005a54
   140005993:	jbe    0x140005895
   140005999:	cmp    eax,0x3
   14000599c:	jbe    0x1400059f7
   14000599e:	cmp    eax,0x6
   1400059a1:	jbe    0x140005b09
   1400059a7:	cmp    eax,0x8
   1400059aa:	jbe    0x1400059f7
   1400059ac:	cmp    eax,0x9
   1400059af:	je     0x1400059da
   1400059b1:	cmp    eax,0xa
   1400059b4:	jne    0x140005895
   1400059ba:	test   dil,0xf
   1400059be:	jne    0x140005895
   1400059c4:	test   rdi,0xfff0
   1400059cb:	jne    0x140005895
   1400059d1:	test   rdi,0xffffffffffedffff
   1400059d8:	jmp    0x140005a49
   1400059da:	cmp    QWORD PTR [rbx-0x10],r13
   1400059de:	je     0x140005895
   1400059e4:	cmp    QWORD PTR [rbx-0x8],r13
   1400059e8:	jne    0x140005aed
   1400059ee:	mov    QWORD PTR [rbx-0x8],rbp
   1400059f2:	jmp    0x140005aed
   1400059f7:	test   dil,0x2
   1400059fb:	jne    0x140005b09
   140005a01:	test   rdi,0x10040
   140005a08:	jne    0x140005895
   140005a0e:	test   dil,dil
   140005a11:	js     0x140005895
   140005a17:	mov    rax,QWORD PTR [rbx-0x20]
   140005a1b:	test   rax,rax
   140005a1e:	je     0x140005895
   140005a24:	test   dil,0x1
   140005a28:	je     0x140005a3b
   140005a2a:	mov    rax,QWORD PTR [rax]
   140005a2d:	test   rax,rax
   140005a30:	je     0x140005895
   140005a36:	cmp    DWORD PTR [rax],0x9
   140005a39:	jmp    0x140005a49
   140005a3b:	cmp    DWORD PTR [rbx-0x40],0x1
   140005a3f:	ja     0x140005895
   140005a45:	test   dil,0x20
   140005a49:	jne    0x140005895
   140005a4f:	jmp    0x140005aed
   140005a54:	mov    r8,rdi
   140005a57:	and    r8d,0x10000
   140005a5e:	je     0x140005a8b
   140005a60:	mov    rax,rdi
   140005a63:	and    eax,0x1
   140005a66:	jne    0x140005895
   140005a6c:	cmp    QWORD PTR [rbx-0x20],r13
   140005a70:	jne    0x140005895
   140005a76:	test   r13b,r13b
   140005a79:	jne    0x140005895
   140005a7f:	cmp    DWORD PTR [rbx-0x18],0x1
   140005a83:	je     0x140005895
   140005a89:	jmp    0x140005ab5
   140005a8b:	mov    rcx,QWORD PTR [rbx-0x20]
   140005a8f:	test   rcx,rcx
   140005a92:	je     0x140005895
   140005a98:	mov    rax,rdi
   140005a9b:	and    eax,0x1
   140005a9e:	je     0x140005ab5
   140005aa0:	mov    rdx,QWORD PTR [rcx]
   140005aa3:	test   rdx,rdx
   140005aa6:	je     0x140005895
   140005aac:	cmp    DWORD PTR [rdx],0x9
   140005aaf:	jne    0x140005895
   140005ab5:	test   dil,0x2
   140005ab9:	je     0x140005ac5
   140005abb:	cmp    QWORD PTR [rbx-0x28],r13
   140005abf:	je     0x140005895
   140005ac5:	test   rax,rax
   140005ac8:	jne    0x140005aed
   140005aca:	cmp    DWORD PTR [rbx-0x40],0x1
   140005ace:	jne    0x140005895
   140005ad4:	test   dil,0x20
   140005ad8:	jne    0x140005895
   140005ade:	test   r8,r8
   140005ae1:	jne    0x140005aed
   140005ae3:	cmp    DWORD PTR [rbx-0x18],0x2
   140005ae7:	jb     0x140005895
   140005aed:	mov    DWORD PTR [rbx-0x3c],r13d
   140005af1:	inc    r15d
   140005af4:	add    rbx,0x78
   140005af8:	cmp    r15d,0x9
   140005afc:	jb     0x1400058bb
   140005b02:	mov    eax,0x1
   140005b07:	jmp    0x140005b27
   140005b09:	mov    ecx,0x78
   140005b0e:	jmp    0x140005b1f
   140005b10:	call   QWORD PTR [rip+0x2632]        # 0x140008148
   140005b16:	test   eax,eax
   140005b18:	jne    0x140005b25
   140005b1a:	mov    ecx,0x42b
   140005b1f:	call   QWORD PTR [rip+0x2573]        # 0x140008098
   140005b25:	xor    eax,eax
   140005b27:	mov    rbx,QWORD PTR [rsp+0x60]
   140005b2c:	mov    rbp,QWORD PTR [rsp+0x68]
   140005b31:	mov    rsi,QWORD PTR [rsp+0x70]
   140005b36:	add    rsp,0x30
   140005b3a:	pop    r15
   140005b3c:	pop    r14
   140005b3e:	pop    r13
   140005b40:	pop    r12
   140005b42:	pop    rdi
   140005b43:	ret    
   140005b44:	int3   
   140005b45:	int3   
   140005b46:	int3   
   140005b47:	int3   
   140005b48:	int3   
   140005b49:	int3   
   140005b4a:	int3   
   140005b4b:	int3   
   140005b4c:	mov    QWORD PTR [rsp+0x8],rbx
   140005b51:	push   rbp
   140005b52:	push   rsi
   140005b53:	push   rdi
   140005b54:	push   r12
   140005b56:	push   r13
   140005b58:	push   r14
   140005b5a:	push   r15
   140005b5c:	sub    rsp,0x60
   140005b60:	and    DWORD PTR [rsp+0xb8],0x0
   140005b68:	mov    rdi,rcx
   140005b6b:	and    DWORD PTR [rsp+0xb0],0x0
   140005b73:	xor    ecx,ecx
   140005b75:	movaps XMMWORD PTR [rsp+0x50],xmm6
   140005b7a:	mov    r15,r8
   140005b7d:	movaps XMMWORD PTR [rsp+0x40],xmm7
   140005b82:	mov    rsi,rdx
   140005b85:	xorps  xmm7,xmm7
   140005b88:	xorps  xmm6,xmm6
   140005b8b:	call   QWORD PTR [rip+0x2507]        # 0x140008098
   140005b91:	test   r15,r15
   140005b94:	je     0x140005c40
   140005b9a:	mov    rbp,QWORD PTR [r15+0x10]
   140005b9e:	mov    r14,QWORD PTR [r15+0x8]
   140005ba2:	test   rbp,rbp
   140005ba5:	je     0x140005c40
   140005bab:	test   r14,r14
   140005bae:	je     0x140005c40
   140005bb4:	mov    rcx,QWORD PTR [rbp+0x30]
   140005bb8:	mov    eax,DWORD PTR [rbp+0x8]
   140005bbb:	mov    rbx,QWORD PTR [rbp+0x38]
   140005bbf:	mov    r13,QWORD PTR [rbp+0x10]
   140005bc3:	mov    r12d,DWORD PTR [rbp+0x40]
   140005bc7:	mov    QWORD PTR [rsp+0x30],rcx
   140005bcc:	cmp    eax,0xa
   140005bcf:	je     0x140005c34
   140005bd1:	test   rsi,rsi
   140005bd4:	jne    0x140005c34
   140005bd6:	test   r13b,0x10
   140005bda:	jne    0x140005c34
   140005bdc:	test   rdi,rdi
   140005bdf:	je     0x140005c0d
   140005be1:	mov    rcx,rdi
   140005be4:	call   QWORD PTR [rip+0x2526]        # 0x140008110
   140005bea:	test   eax,eax
   140005bec:	je     0x140005c0d
   140005bee:	mov    ecx,0x15eb
   140005bf3:	call   0x140002cdc
   140005bf8:	mov    r8,rdi
   140005bfb:	mov    r9,r14
   140005bfe:	mov    rdx,rax
   140005c01:	mov    ecx,0x2
   140005c06:	call   0x140002738
   140005c0b:	jmp    0x140005c27
   140005c0d:	call   QWORD PTR [rip+0x2535]        # 0x140008148
   140005c13:	test   eax,eax
   140005c15:	jne    0x140005c22
   140005c17:	mov    ecx,0x42b
   140005c1c:	call   QWORD PTR [rip+0x2476]        # 0x140008098
   140005c22:	call   0x140002874
   140005c27:	mov    ecx,0x800401e4
   140005c2c:	call   QWORD PTR [rip+0x2466]        # 0x140008098
   140005c32:	jmp    0x140005c58
   140005c34:	test   rdi,rdi
   140005c37:	jne    0x140005c7c
   140005c39:	bt     r13,0x12
   140005c3e:	jb     0x140005c88
   140005c40:	call   QWORD PTR [rip+0x2502]        # 0x140008148
   140005c46:	test   eax,eax
   140005c48:	jne    0x140005c53
   140005c4a:	lea    ecx,[rax+0x57]
   140005c4d:	call   QWORD PTR [rip+0x2445]        # 0x140008098
   140005c53:	call   0x140002874
   140005c58:	xor    eax,eax
   140005c5a:	mov    rbx,QWORD PTR [rsp+0xa0]
   140005c62:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   140005c67:	movaps xmm7,XMMWORD PTR [rsp+0x40]
   140005c6c:	add    rsp,0x60
   140005c70:	pop    r15
   140005c72:	pop    r14
   140005c74:	pop    r13
   140005c76:	pop    r12
   140005c78:	pop    rdi
   140005c79:	pop    rsi
   140005c7a:	pop    rbp
   140005c7b:	ret    
   140005c7c:	cmp    QWORD PTR [rbp+0x28],0x0
   140005c81:	je     0x140005c8c
   140005c83:	cmp    eax,0x9
   140005c86:	je     0x140005c8c
   140005c88:	mov    rdi,QWORD PTR [rbp+0x28]
   140005c8c:	cmp    eax,0x1
   140005c8f:	je     0x140005f55
   140005c95:	jbe    0x140005c40
   140005c97:	cmp    eax,0x3
   140005c9a:	jbe    0x140005e41
   140005ca0:	cmp    eax,0x6
   140005ca3:	jbe    0x140005fab
   140005ca9:	cmp    eax,0x8
   140005cac:	jbe    0x140005d0d
   140005cae:	cmp    eax,0x9
   140005cb1:	je     0x140005cec
   140005cb3:	cmp    eax,0xa
   140005cb6:	jne    0x140005c40
   140005cb8:	test   rsi,rsi
   140005cbb:	je     0x140005ce1
   140005cbd:	test   rdi,rdi
   140005cc0:	je     0x140005c0d
   140005cc6:	mov    rcx,rdi
   140005cc9:	call   QWORD PTR [rip+0x2441]        # 0x140008110
   140005ccf:	test   eax,eax
   140005cd1:	je     0x140005c0d
   140005cd7:	mov    ecx,0x15f3
   140005cdc:	jmp    0x140005bf3
   140005ce1:	mov    DWORD PTR [rbx],0x1
   140005ce7:	jmp    0x140005fab
   140005cec:	mov    rbx,QWORD PTR [rbp+0x48]
   140005cf0:	mov    rcx,rbx
   140005cf3:	call   QWORD PTR [rip+0x26bf]        # 0x1400083b8
   140005cf9:	mov    r8,QWORD PTR [rbp+0x50]
   140005cfd:	mov    r9,r15
   140005d00:	mov    rdx,rsi
   140005d03:	mov    rcx,rdi
   140005d06:	call   rbx
   140005d08:	jmp    0x140005c5a
   140005d0d:	test   rsi,rsi
   140005d10:	je     0x140005fab
   140005d16:	mov    rcx,rsi
   140005d19:	call   0x140002f5c
   140005d1e:	call   QWORD PTR [rip+0x2424]        # 0x140008148
   140005d24:	test   eax,eax
   140005d26:	je     0x140005d74
   140005d28:	test   r13b,0x10
   140005d2c:	je     0x140005d39
   140005d2e:	cmp    DWORD PTR [r15+0x4],0xffffffff
   140005d33:	jne    0x140005f22
   140005d39:	test   rdi,rdi
   140005d3c:	je     0x140005d55
   140005d3e:	mov    rcx,rdi
   140005d41:	call   QWORD PTR [rip+0x23c9]        # 0x140008110
   140005d47:	test   eax,eax
   140005d49:	je     0x140005d55
   140005d4b:	mov    ecx,0x15e3
   140005d50:	jmp    0x140005bf3
   140005d55:	mov    ecx,0x15f1
   140005d5a:	call   0x140002cdc
   140005d5f:	mov    rdx,rax
   140005d62:	mov    r8,r14
   140005d65:	mov    ecx,0x1
   140005d6a:	call   0x140002738
   140005d6f:	jmp    0x140005c27
   140005d74:	cmp    DWORD PTR [rbp+0x8],0x7
   140005d78:	mov    rcx,rsi
   140005d7b:	jne    0x140005d8b
   140005d7d:	call   0x140002f5c
   140005d82:	xorps  xmm7,xmm7
   140005d85:	cvtsd2ss xmm7,xmm0
   140005d89:	jmp    0x140005d93
   140005d8b:	call   0x140002f5c
   140005d90:	movaps xmm6,xmm0
   140005d93:	test   r13b,0x1
   140005d97:	je     0x140005e29
   140005d9d:	mov    eax,DWORD PTR [rbp+0x10]
   140005da0:	bt     rax,0xe
   140005da5:	jae    0x140005def
   140005da7:	mov    rcx,QWORD PTR [rbx]
   140005daa:	xor    r9d,r9d
   140005dad:	cmp    DWORD PTR [rbp+0x8],0x7
   140005db1:	jne    0x140005dcb
   140005db3:	movss  DWORD PTR [rsp+0xb0],xmm7
   140005dbc:	lea    r8,[rsp+0xb0]
   140005dc4:	mov    edx,0x60000
   140005dc9:	jmp    0x140005de1
   140005dcb:	movsd  QWORD PTR [rsp+0xb0],xmm6
   140005dd4:	lea    r8,[rsp+0xb0]
   140005ddc:	mov    edx,0x70000
   140005de1:	call   0x140006914
   140005de6:	cmp    eax,0xffffffff
   140005de9:	jne    0x140005fab
   140005def:	cmp    DWORD PTR [rbp+0x8],0x7
   140005df3:	mov    rcx,QWORD PTR [rbx]
   140005df6:	jne    0x140005e02
   140005df8:	movaps xmm1,xmm7
   140005dfb:	call   0x140006c3c
   140005e00:	jmp    0x140005e0a
   140005e02:	movaps xmm1,xmm6
   140005e05:	call   0x140006ca8
   140005e0a:	cmp    eax,0xffffffff
   140005e0d:	jne    0x140005fab
   140005e13:	call   QWORD PTR [rip+0x232f]        # 0x140008148
   140005e19:	test   eax,eax
   140005e1b:	jne    0x140005c53
   140005e21:	lea    ecx,[rax+0x8]
   140005e24:	jmp    0x140005c4d
   140005e29:	cmp    DWORD PTR [rbp+0x8],0x7
   140005e2d:	jne    0x140005e38
   140005e2f:	movss  DWORD PTR [rbx],xmm7
   140005e33:	jmp    0x140005fab
   140005e38:	movsd  QWORD PTR [rbx],xmm6
   140005e3c:	jmp    0x140005fab
   140005e41:	xor    r12d,r12d
   140005e44:	cmp    eax,0x2
   140005e47:	sete   r12b
   140005e4b:	test   rsi,rsi
   140005e4e:	je     0x140005fab
   140005e54:	mov    rcx,rsi
   140005e57:	call   QWORD PTR [rip+0x22b3]        # 0x140008110
   140005e5d:	test   eax,eax
   140005e5f:	je     0x140005f15
   140005e65:	mov    r8d,r12d
   140005e68:	mov    rcx,rsi
   140005e6b:	call   0x1400030e8
   140005e70:	test   eax,eax
   140005e72:	je     0x140005f15
   140005e78:	mov    rcx,rsi
   140005e7b:	call   0x140003014
   140005e80:	cmp    r12d,0x1
   140005e84:	jne    0x140005e91
   140005e86:	mov    edi,DWORD PTR [rsp+0xb0]
   140005e8d:	mov    esi,eax
   140005e8f:	jmp    0x140005e9a
   140005e91:	mov    esi,DWORD PTR [rsp+0xb8]
   140005e98:	mov    edi,eax
   140005e9a:	test   r13b,0x1
   140005e9e:	je     0x140005f07
   140005ea0:	mov    ecx,DWORD PTR [rbp+0x10]
   140005ea3:	bt     rcx,0xe
   140005ea8:	jae    0x140005ee6
   140005eaa:	mov    rcx,QWORD PTR [rbx]
   140005ead:	lea    r8,[rsp+0xb0]
   140005eb5:	xor    r9d,r9d
   140005eb8:	cmp    r12d,0x1
   140005ebc:	jne    0x140005ecc
   140005ebe:	mov    DWORD PTR [rsp+0xb0],esi
   140005ec5:	mov    edx,0x30000
   140005eca:	jmp    0x140005ed8
   140005ecc:	mov    DWORD PTR [rsp+0xb0],edi
   140005ed3:	mov    edx,0x40000
   140005ed8:	call   0x140006914
   140005edd:	cmp    eax,0xffffffff
   140005ee0:	jne    0x140005fab
   140005ee6:	mov    rcx,QWORD PTR [rbx]
   140005ee9:	cmp    r12d,0x1
   140005eed:	jne    0x140005efb
   140005eef:	mov    edx,esi
   140005ef1:	call   0x140006b6c
   140005ef6:	jmp    0x140005e0a
   140005efb:	mov    edx,edi
   140005efd:	call   0x140006bd4
   140005f02:	jmp    0x140005e0a
   140005f07:	cmp    r12d,0x1
   140005f0b:	cmove  edi,esi
   140005f0e:	mov    DWORD PTR [rbx],edi
   140005f10:	jmp    0x140005fab
   140005f15:	test   r13b,0x10
   140005f19:	je     0x140005f2f
   140005f1b:	cmp    DWORD PTR [r15+0x4],0xffffffff
   140005f20:	je     0x140005f2f
   140005f22:	mov    eax,0x1
   140005f27:	mov    DWORD PTR [r15],eax
   140005f2a:	jmp    0x140005c5a
   140005f2f:	test   rdi,rdi
   140005f32:	je     0x140005f4b
   140005f34:	mov    rcx,rdi
   140005f37:	call   QWORD PTR [rip+0x21d3]        # 0x140008110
   140005f3d:	test   eax,eax
   140005f3f:	je     0x140005f4b
   140005f41:	mov    ecx,0x15e2
   140005f46:	jmp    0x140005bf3
   140005f4b:	mov    ecx,0x15f0
   140005f50:	jmp    0x140005d5a
   140005f55:	test   rsi,rsi
   140005f58:	je     0x140005fa0
   140005f5a:	test   r13b,0x42
   140005f5e:	je     0x140005fa0
   140005f60:	xor    r9d,r9d
   140005f63:	xor    r8d,r8d
   140005f66:	mov    rdx,rsi
   140005f69:	lea    ecx,[r9+0xa]
   140005f6d:	call   0x140002458
   140005f72:	test   rax,rax
   140005f75:	je     0x140005e13
   140005f7b:	lea    rdx,[rip+0x2702]        # 0x140008684
   140005f82:	mov    rcx,rax
   140005f85:	call   0x1400034a0
   140005f8a:	mov    rsi,rax
   140005f8d:	call   QWORD PTR [rip+0x21b5]        # 0x140008148
   140005f93:	test   eax,eax
   140005f95:	jne    0x140005c53
   140005f9b:	mov    rcx,QWORD PTR [rsp+0x30]
   140005fa0:	test   r13b,0x2
   140005fa4:	je     0x140006015
   140005fa6:	test   rsi,rsi
   140005fa9:	jne    0x140005fb5
   140005fab:	mov    eax,0x1
   140005fb0:	jmp    0x140005c5a
   140005fb5:	mov    rdx,rcx
   140005fb8:	mov    r8d,0x1
   140005fbe:	mov    rcx,rsi
   140005fc1:	call   0x140003230
   140005fc6:	test   eax,eax
   140005fc8:	jne    0x140006015
   140005fca:	test   rdi,rdi
   140005fcd:	je     0x140006003
   140005fcf:	mov    rcx,rdi
   140005fd2:	call   QWORD PTR [rip+0x2138]        # 0x140008110
   140005fd8:	test   eax,eax
   140005fda:	je     0x140006003
   140005fdc:	mov    ecx,0x15e1
   140005fe1:	call   0x140002cdc
   140005fe6:	mov    rdx,rax
   140005fe9:	mov    QWORD PTR [rsp+0x20],r14
   140005fee:	mov    r9,rdi
   140005ff1:	mov    r8,rsi
   140005ff4:	mov    ecx,0x3
   140005ff9:	call   0x140002738
   140005ffe:	jmp    0x140005c27
   140006003:	mov    ecx,0x15ec
   140006008:	call   0x140002cdc
   14000600d:	mov    r8,rsi
   140006010:	jmp    0x140005bfb
   140006015:	test   rsi,rsi
   140006018:	je     0x140005fab
   14000601a:	test   r13b,r13b
   14000601d:	jns    0x140006052
   14000601f:	mov    rcx,rsi
   140006022:	call   QWORD PTR [rip+0x20e8]        # 0x140008110
   140006028:	test   eax,eax
   14000602a:	jne    0x140006052
   14000602c:	test   rdi,rdi
   14000602f:	je     0x140006048
   140006031:	mov    rcx,rdi
   140006034:	call   QWORD PTR [rip+0x20d6]        # 0x140008110
   14000603a:	test   eax,eax
   14000603c:	je     0x140006048
   14000603e:	mov    ecx,0x15ee
   140006043:	jmp    0x140005bf3
   140006048:	mov    ecx,0x15ef
   14000604d:	jmp    0x140005d5a
   140006052:	test   r13b,0x1
   140006056:	je     0x140006091
   140006058:	mov    eax,DWORD PTR [rbp+0x10]
   14000605b:	bt     rax,0xe
   140006060:	jae    0x140006081
   140006062:	mov    rcx,QWORD PTR [rbx]
   140006065:	mov    r9d,0x1
   14000606b:	mov    r8,rsi
   14000606e:	mov    edx,0x20000
   140006073:	call   0x140006914
   140006078:	cmp    eax,0xffffffff
   14000607b:	jne    0x140005fab
   140006081:	mov    rcx,QWORD PTR [rbx]
   140006084:	mov    rdx,rsi
   140006087:	call   0x140006ad8
   14000608c:	jmp    0x140005e0a
   140006091:	test   r12d,r12d
   140006094:	je     0x1400060fb
   140006096:	mov    rcx,rsi
   140006099:	call   QWORD PTR [rip+0x2071]        # 0x140008110
   14000609f:	cmp    eax,r12d
   1400060a2:	jl     0x1400060fb
   1400060a4:	test   rdi,rdi
   1400060a7:	je     0x1400060da
   1400060a9:	mov    rcx,rdi
   1400060ac:	call   QWORD PTR [rip+0x205e]        # 0x140008110
   1400060b2:	test   eax,eax
   1400060b4:	je     0x1400060da
   1400060b6:	mov    ecx,0x15f4
   1400060bb:	call   0x140002cdc
   1400060c0:	mov    rdx,rax
   1400060c3:	lea    r9d,[r12-0x1]
   1400060c8:	mov    r8,rdi
   1400060cb:	mov    ecx,0x2
   1400060d0:	call   0x140002738
   1400060d5:	jmp    0x140005c27
   1400060da:	mov    ecx,0x15f2
   1400060df:	call   0x140002cdc
   1400060e4:	mov    rdx,rax
   1400060e7:	lea    r8d,[r12-0x1]
   1400060ec:	mov    ecx,0x1
   1400060f1:	call   0x140002738
   1400060f6:	jmp    0x140005c27
   1400060fb:	bt     r13,0x10
   140006100:	jae    0x140006128
   140006102:	mov    rcx,rsi
   140006105:	call   QWORD PTR [rip+0x2005]        # 0x140008110
   14000610b:	lea    r12d,[rax+0x1]
   14000610f:	lea    ecx,[r12+r12*1]
   140006113:	call   0x14000444c
   140006118:	mov    rbx,rax
   14000611b:	test   rax,rax
   14000611e:	je     0x140005e13
   140006124:	mov    QWORD PTR [rbp+0x38],rax
   140006128:	mov    r8d,r12d
   14000612b:	mov    rdx,rsi
   14000612e:	mov    rcx,rbx
   140006131:	call   0x14000376c
   140006136:	jmp    0x140005fab
   14000613b:	int3   
   14000613c:	int3   
   14000613d:	int3   
   14000613e:	int3   
   14000613f:	int3   
   140006140:	int3   
   140006141:	int3   
   140006142:	int3   
   140006143:	int3   
   140006144:	mov    QWORD PTR [rsp+0x8],rbx
   140006149:	mov    QWORD PTR [rsp+0x10],rsi
   14000614e:	mov    QWORD PTR [rsp+0x18],rdi
   140006153:	push   r14
   140006155:	sub    rsp,0x20
   140006159:	xor    ecx,ecx
   14000615b:	mov    r14,r8
   14000615e:	mov    rbx,rdx
   140006161:	call   QWORD PTR [rip+0x1f31]        # 0x140008098
   140006167:	test   rbx,rbx
   14000616a:	je     0x140006219
   140006170:	test   r14,r14
   140006173:	je     0x140006219
   140006179:	xor    ecx,ecx
   14000617b:	call   QWORD PTR [rip+0x1f17]        # 0x140008098
   140006181:	mov    rcx,r14
   140006184:	call   QWORD PTR [rip+0x1f86]        # 0x140008110
   14000618a:	cmp    eax,0x1
   14000618d:	jle    0x1400061f0
   14000618f:	movzx  edx,WORD PTR [r14]
   140006193:	lea    rcx,[rip+0x264e]        # 0x1400087e8
   14000619a:	call   0x1400031c8
   14000619f:	cmp    eax,0xffffffff
   1400061a2:	je     0x1400061f0
   1400061a4:	xor    edi,edi
   1400061a6:	add    rbx,0x20
   1400061aa:	lea    rax,[rbx-0x20]
   1400061ae:	test   rax,rax
   1400061b1:	je     0x1400061fb
   1400061b3:	mov    esi,DWORD PTR [rbx-0x10]
   1400061b6:	mov    rcx,QWORD PTR [rbx]
   1400061b9:	shr    rsi,0x14
   1400061bd:	not    esi
   1400061bf:	and    esi,0x1
   1400061c2:	test   rcx,rcx
   1400061c5:	je     0x1400061e5
   1400061c7:	call   QWORD PTR [rip+0x1f43]        # 0x140008110
   1400061cd:	test   eax,eax
   1400061cf:	jle    0x1400061e5
   1400061d1:	mov    rdx,QWORD PTR [rbx]
   1400061d4:	lea    rcx,[r14+0x2]
   1400061d8:	mov    r8d,esi
   1400061db:	call   0x140003230
   1400061e0:	cmp    eax,0x1
   1400061e3:	je     0x1400061f7
   1400061e5:	inc    edi
   1400061e7:	add    rbx,0x78
   1400061eb:	cmp    edi,0x9
   1400061ee:	jb     0x1400061aa
   1400061f0:	mov    ecx,0x490
   1400061f5:	jmp    0x140006226
   1400061f7:	mov    eax,edi
   1400061f9:	jmp    0x14000622f
   1400061fb:	call   QWORD PTR [rip+0x1f47]        # 0x140008148
   140006201:	test   eax,eax
   140006203:	jne    0x140006210
   140006205:	mov    ecx,0x42b
   14000620a:	call   QWORD PTR [rip+0x1e88]        # 0x140008098
   140006210:	call   0x140002874
   140006215:	xor    eax,eax
   140006217:	jmp    0x14000622f
   140006219:	call   QWORD PTR [rip+0x1f29]        # 0x140008148
   14000621f:	test   eax,eax
   140006221:	jne    0x14000622c
   140006223:	lea    ecx,[rax+0x57]
   140006226:	call   QWORD PTR [rip+0x1e6c]        # 0x140008098
   14000622c:	or     eax,0xffffffff
   14000622f:	mov    rbx,QWORD PTR [rsp+0x30]
   140006234:	mov    rsi,QWORD PTR [rsp+0x38]
   140006239:	mov    rdi,QWORD PTR [rsp+0x40]
   14000623e:	add    rsp,0x20
   140006242:	pop    r14
   140006244:	ret    
   140006245:	int3   
   140006246:	int3   
   140006247:	int3   
   140006248:	int3   
   140006249:	int3   
   14000624a:	int3   
   14000624b:	int3   
   14000624c:	mov    rax,rsp
   14000624f:	mov    QWORD PTR [rax+0x8],rbp
   140006253:	mov    QWORD PTR [rax+0x10],rsi
   140006257:	mov    QWORD PTR [rax+0x18],rdi
   14000625b:	mov    QWORD PTR [rax+0x20],r14
   14000625f:	push   r15
   140006261:	sub    rsp,0x20
   140006265:	xor    ecx,ecx
   140006267:	mov    rdi,r9
   14000626a:	mov    rsi,r8
   14000626d:	mov    r15,rdx
   140006270:	call   QWORD PTR [rip+0x1e22]        # 0x140008098
   140006276:	test   r15,r15
   140006279:	je     0x14000633f
   14000627f:	test   rsi,rsi
   140006282:	je     0x14000633f
   140006288:	test   rdi,rdi
   14000628b:	je     0x14000633f
   140006291:	and    QWORD PTR [rdi],0x0
   140006295:	mov    edx,0x3a
   14000629a:	and    QWORD PTR [rdi+0x8],0x0
   14000629f:	mov    rcx,rsi
   1400062a2:	call   0x1400031c8
   1400062a7:	movsxd rbp,eax
   1400062aa:	cmp    ebp,0xffffffff
   1400062ad:	je     0x140006352
   1400062b3:	mov    rcx,rsi
   1400062b6:	call   QWORD PTR [rip+0x1e54]        # 0x140008110
   1400062bc:	xor    edx,edx
   1400062be:	lea    r8d,[rbp+0x5]
   1400062c2:	mov    r14d,eax
   1400062c5:	sub    r14d,ebp
   1400062c8:	dec    r14d
   1400062cb:	lea    ecx,[rdx+0x8]
   1400062ce:	lea    r9d,[rdx+0x1]
   1400062d2:	call   0x140002458
   1400062d7:	mov    QWORD PTR [rdi],rax
   1400062da:	test   rax,rax
   1400062dd:	jne    0x1400062ee
   1400062df:	call   QWORD PTR [rip+0x1e63]        # 0x140008148
   1400062e5:	test   eax,eax
   1400062e7:	jne    0x140006352
   1400062e9:	lea    ecx,[rax+0x8]
   1400062ec:	jmp    0x14000634c
   1400062ee:	xor    edx,edx
   1400062f0:	lea    r8d,[r14+0x5]
   1400062f4:	lea    ecx,[rdx+0x9]
   1400062f7:	lea    r9d,[rdx+0x1]
   1400062fb:	call   0x140002458
   140006300:	mov    QWORD PTR [rdi+0x8],rax
   140006304:	test   rax,rax
   140006307:	je     0x1400062df
   140006309:	mov    rcx,QWORD PTR [rdi]
   14000630c:	lea    r8d,[rbp+0x1]
   140006310:	mov    rdx,rsi
   140006313:	call   0x14000376c
   140006318:	test   r14d,r14d
   14000631b:	je     0x140006332
   14000631d:	mov    rcx,QWORD PTR [rdi+0x8]
   140006321:	lea    rdx,[rsi+0x2]
   140006325:	lea    rdx,[rdx+rbp*2]
   140006329:	lea    r8d,[r14+0x1]
   14000632d:	call   0x14000376c
   140006332:	mov    r8,QWORD PTR [rdi]
   140006335:	mov    rdx,r15
   140006338:	call   0x140006144
   14000633d:	jmp    0x140006355
   14000633f:	call   QWORD PTR [rip+0x1e03]        # 0x140008148
   140006345:	test   eax,eax
   140006347:	jne    0x140006352
   140006349:	lea    ecx,[rax+0x57]
   14000634c:	call   QWORD PTR [rip+0x1d46]        # 0x140008098
   140006352:	or     eax,0xffffffff
   140006355:	mov    rbp,QWORD PTR [rsp+0x30]
   14000635a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000635f:	mov    rdi,QWORD PTR [rsp+0x40]
   140006364:	mov    r14,QWORD PTR [rsp+0x48]
   140006369:	add    rsp,0x20
   14000636d:	pop    r15
   14000636f:	ret    
   140006370:	int3   
   140006371:	int3   
   140006372:	int3   
   140006373:	int3   
   140006374:	int3   
   140006375:	int3   
   140006376:	int3   
   140006377:	int3   
   140006378:	mov    QWORD PTR [rsp+0x8],rbx
   14000637d:	mov    QWORD PTR [rsp+0x10],rbp
   140006382:	mov    QWORD PTR [rsp+0x18],rsi
   140006387:	push   rdi
   140006388:	sub    rsp,0x20
   14000638c:	mov    rbx,rdx
   14000638f:	test   rdx,rdx
   140006392:	je     0x140006408
   140006394:	call   QWORD PTR [rip+0x1dae]        # 0x140008148
   14000639a:	mov    ebp,eax
   14000639c:	call   0x14000267c
   1400063a1:	mov    ecx,0x7
   1400063a6:	test   rax,rax
   1400063a9:	jne    0x1400063b2
   1400063ab:	call   0x1400023ec
   1400063b0:	jmp    0x1400063c0
   1400063b2:	xor    r9d,r9d
   1400063b5:	xor    r8d,r8d
   1400063b8:	mov    rdx,rax
   1400063bb:	call   0x140002458
   1400063c0:	mov    rdi,rax
   1400063c3:	test   rax,rax
   1400063c6:	je     0x140006408
   1400063c8:	add    rbx,0x38
   1400063cc:	mov    esi,0x9
   1400063d1:	cmp    QWORD PTR [rbx],0x0
   1400063d5:	je     0x1400063e9
   1400063d7:	mov    eax,DWORD PTR [rbx-0x28]
   1400063da:	bt     rax,0x10
   1400063df:	jae    0x1400063e9
   1400063e1:	mov    rcx,rbx
   1400063e4:	call   0x140004370
   1400063e9:	add    rbx,0x78
   1400063ed:	sub    rsi,0x1
   1400063f1:	jne    0x1400063d1
   1400063f3:	mov    rcx,rdi
   1400063f6:	call   0x1400026bc
   1400063fb:	mov    ecx,ebp
   1400063fd:	call   QWORD PTR [rip+0x1c95]        # 0x140008098
   140006403:	lea    eax,[rsi+0x1]
   140006406:	jmp    0x14000640a
   140006408:	xor    eax,eax
   14000640a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000640f:	mov    rbp,QWORD PTR [rsp+0x38]
   140006414:	mov    rsi,QWORD PTR [rsp+0x40]
   140006419:	add    rsp,0x20
   14000641d:	pop    rdi
   14000641e:	ret    
   14000641f:	int3   
   140006420:	int3   
   140006421:	int3   
   140006422:	int3   
   140006423:	int3   
   140006424:	int3   
   140006425:	int3   
   140006426:	int3   
   140006427:	int3   
   140006428:	mov    DWORD PTR [rsp+0x20],r9d
   14000642d:	mov    DWORD PTR [rsp+0x18],r8d
   140006432:	mov    QWORD PTR [rsp+0x10],rdx
   140006437:	push   rbp
   140006438:	push   rbx
   140006439:	push   rsi
   14000643a:	push   rdi
   14000643b:	push   r12
   14000643d:	push   r13
   14000643f:	push   r14
   140006441:	push   r15
   140006443:	mov    rbp,rsp
   140006446:	sub    rsp,0x68
   14000644a:	and    DWORD PTR [rbp+0x60],0x0
   14000644e:	mov    r13d,ecx
   140006451:	xor    ecx,ecx
   140006453:	mov    rsi,rdx
   140006456:	call   QWORD PTR [rip+0x1c3c]        # 0x140008098
   14000645c:	test   r13d,r13d
   14000645f:	je     0x14000678d
   140006465:	test   rsi,rsi
   140006468:	je     0x14000678d
   14000646e:	mov    rbx,QWORD PTR [rbp+0x68]
   140006472:	test   rbx,rbx
   140006475:	je     0x14000678d
   14000647b:	call   0x140002c1c
   140006480:	test   eax,eax
   140006482:	jne    0x1400064a6
   140006484:	mov    ecx,0x157f
   140006489:	call   0x140002cdc
   14000648e:	mov    rcx,rax
   140006491:	call   0x1400026bc
   140006496:	mov    ecx,0x47e
   14000649b:	call   QWORD PTR [rip+0x1bf7]        # 0x140008098
   1400064a1:	jmp    0x14000679d
   1400064a6:	call   0x14000230c
   1400064ab:	test   eax,eax
   1400064ad:	je     0x140006798
   1400064b3:	xor    ecx,ecx
   1400064b5:	call   0x14000545c
   1400064ba:	mov    r15,rax
   1400064bd:	test   rax,rax
   1400064c0:	je     0x140006798
   1400064c6:	mov    r8,rbx
   1400064c9:	lea    rcx,[rbp+0x60]
   1400064cd:	call   0x140005860
   1400064d2:	test   eax,eax
   1400064d4:	je     0x140006798
   1400064da:	and    DWORD PTR [rbp+0x58],0x0
   1400064de:	mov    r12d,0x1
   1400064e4:	mov    edx,r12d
   1400064e7:	mov    DWORD PTR [rbp+0x48],edx
   1400064ea:	cmp    r13d,r12d
   1400064ed:	jbe    0x1400066aa
   1400064f3:	mov    eax,edx
   1400064f5:	mov    r12d,0x2
   1400064fb:	mov    rdi,QWORD PTR [rsi+rax*8]
   1400064ff:	lea    eax,[rdx+0x1]
   140006502:	cmp    eax,r13d
   140006505:	jae    0x14000650d
   140006507:	mov    r14,QWORD PTR [rsi+rax*8]
   14000650b:	jmp    0x140006510
   14000650d:	xor    r14d,r14d
   140006510:	mov    r8,rdi
   140006513:	mov    rdx,rbx
   140006516:	call   0x140006144
   14000651b:	cmp    eax,0xffffffff
   14000651e:	jne    0x140006555
   140006520:	lea    r9,[rbp-0x38]
   140006524:	mov    r8,rdi
   140006527:	mov    rdx,rbx
   14000652a:	call   0x14000624c
   14000652f:	cmp    eax,0xffffffff
   140006532:	jne    0x140006547
   140006534:	mov    eax,DWORD PTR [rbp+0x60]
   140006537:	cmp    eax,0xffffffff
   14000653a:	je     0x140006622
   140006540:	mov    r14,rdi
   140006543:	xor    edi,edi
   140006545:	jmp    0x14000654f
   140006547:	mov    rdi,QWORD PTR [rbp-0x38]
   14000654b:	mov    r14,QWORD PTR [rbp-0x30]
   14000654f:	mov    r12d,0x1
   140006555:	cdqe   
   140006557:	imul   rsi,rax,0x78
   14000655b:	add    rsi,rbx
   14000655e:	je     0x1400066e0
   140006564:	test   r14,r14
   140006567:	je     0x1400065af
   140006569:	cmp    r12d,0x2
   14000656d:	jne    0x1400065af
   14000656f:	mov    ecx,DWORD PTR [rsi+0x8]
   140006572:	lea    eax,[rcx-0x7]
   140006575:	cmp    eax,r12d
   140006578:	jbe    0x140006582
   14000657a:	lea    eax,[rcx-0x1]
   14000657d:	cmp    eax,r12d
   140006580:	ja     0x1400065a6
   140006582:	mov    r8,r14
   140006585:	mov    rdx,rbx
   140006588:	call   0x140006144
   14000658d:	cmp    eax,0xffffffff
   140006590:	jne    0x1400065a6
   140006592:	lea    r9,[rbp-0x38]
   140006596:	mov    r8,r14
   140006599:	mov    rdx,rbx
   14000659c:	call   0x14000624c
   1400065a1:	cmp    eax,0xffffffff
   1400065a4:	je     0x1400065af
   1400065a6:	mov    r12d,0x1
   1400065ac:	xor    r14d,r14d
   1400065af:	mov    eax,DWORD PTR [rbp+0x60]
   1400065b2:	lea    r8,[rbp-0x28]
   1400065b6:	mov    rdx,r14
   1400065b9:	mov    DWORD PTR [rbp-0x24],eax
   1400065bc:	mov    rcx,rdi
   1400065bf:	mov    QWORD PTR [rbp-0x18],rsi
   1400065c3:	mov    DWORD PTR [rbp-0x28],r12d
   1400065c7:	mov    QWORD PTR [rbp-0x20],r15
   1400065cb:	call   0x140005b4c
   1400065d0:	mov    r8d,DWORD PTR [rbp-0x28]
   1400065d4:	test   eax,eax
   1400065d6:	je     0x140006720
   1400065dc:	mov    eax,DWORD PTR [rsi+0x18]
   1400065df:	test   eax,eax
   1400065e1:	je     0x1400065e8
   1400065e3:	cmp    eax,DWORD PTR [rsi+0x1c]
   1400065e6:	je     0x14000664f
   1400065e8:	mov    eax,DWORD PTR [rsi+0x10]
   1400065eb:	mov    r12d,0x1
   1400065f1:	add    DWORD PTR [rsi+0x1c],r12d
   1400065f5:	and    eax,0x20000
   1400065fa:	mov    ecx,DWORD PTR [rbp+0x58]
   1400065fd:	test   rax,rax
   140006600:	mov    edx,DWORD PTR [rbp+0x48]
   140006603:	cmovne ecx,r12d
   140006607:	add    edx,r8d
   14000660a:	mov    DWORD PTR [rbp+0x58],ecx
   14000660d:	mov    DWORD PTR [rbp+0x48],edx
   140006610:	cmp    edx,r13d
   140006613:	jae    0x1400066a6
   140006619:	mov    rsi,QWORD PTR [rbp+0x50]
   14000661d:	jmp    0x1400064f3
   140006622:	mov    ecx,0x15e7
   140006627:	call   0x140002cdc
   14000662c:	mov    ecx,r12d
   14000662f:	mov    r9,r15
   140006632:	mov    r8,rdi
   140006635:	mov    rdx,rax
   140006638:	call   0x140002738
   14000663d:	mov    rdx,rbx
   140006640:	call   0x140006378
   140006645:	mov    ecx,0x800401e4
   14000664a:	jmp    0x14000649b
   14000664f:	test   rdi,rdi
   140006652:	je     0x140006686
   140006654:	mov    rcx,rdi
   140006657:	call   QWORD PTR [rip+0x1ab3]        # 0x140008110
   14000665d:	test   eax,eax
   14000665f:	je     0x140006686
   140006661:	mov    ecx,0x15e5
   140006666:	call   0x140002cdc
   14000666b:	mov    r9d,DWORD PTR [rsi+0x18]
   14000666f:	mov    rdx,rax
   140006672:	mov    r8,rdi
   140006675:	mov    QWORD PTR [rsp+0x20],r15
   14000667a:	mov    ecx,0x3
   14000667f:	call   0x140002738
   140006684:	jmp    0x14000663d
   140006686:	mov    ecx,0x15ea
   14000668b:	call   0x140002cdc
   140006690:	mov    r8d,DWORD PTR [rsi+0x18]
   140006694:	mov    rdx,rax
   140006697:	mov    r9,r15
   14000669a:	mov    ecx,0x2
   14000669f:	call   0x140002738
   1400066a4:	jmp    0x14000663d
   1400066a6:	test   ecx,ecx
   1400066a8:	jne    0x1400066d0
   1400066aa:	xor    edx,edx
   1400066ac:	mov    rcx,rbx
   1400066af:	test   rcx,rcx
   1400066b2:	je     0x140006706
   1400066b4:	mov    eax,DWORD PTR [rcx+0x10]
   1400066b7:	bt     rax,0x13
   1400066bc:	jae    0x1400066c4
   1400066be:	cmp    DWORD PTR [rcx+0x1c],0x0
   1400066c2:	je     0x1400066f8
   1400066c4:	add    edx,r12d
   1400066c7:	add    rcx,0x78
   1400066cb:	cmp    edx,0x9
   1400066ce:	jb     0x1400066af
   1400066d0:	xor    ecx,ecx
   1400066d2:	call   QWORD PTR [rip+0x19c0]        # 0x140008098
   1400066d8:	mov    eax,r12d
   1400066db:	jmp    0x14000679f
   1400066e0:	call   QWORD PTR [rip+0x1a62]        # 0x140008148
   1400066e6:	test   eax,eax
   1400066e8:	jne    0x140006798
   1400066ee:	mov    ecx,0x42b
   1400066f3:	jmp    0x140006792
   1400066f8:	cmp    QWORD PTR [rcx+0x20],0x0
   1400066fd:	jne    0x140006754
   1400066ff:	bt     rax,0x12
   140006704:	jb     0x14000672a
   140006706:	call   QWORD PTR [rip+0x1a3c]        # 0x140008148
   14000670c:	test   eax,eax
   14000670e:	jne    0x14000671b
   140006710:	mov    ecx,0x42b
   140006715:	call   QWORD PTR [rip+0x197d]        # 0x140008098
   14000671b:	call   0x140002874
   140006720:	mov    rdx,rbx
   140006723:	call   0x140006378
   140006728:	jmp    0x14000679d
   14000672a:	mov    rdi,QWORD PTR [rcx+0x28]
   14000672e:	test   rdi,rdi
   140006731:	je     0x140006770
   140006733:	mov    rcx,rdi
   140006736:	call   QWORD PTR [rip+0x19d4]        # 0x140008110
   14000673c:	test   eax,eax
   14000673e:	je     0x140006770
   140006740:	mov    ecx,0x15e4
   140006745:	call   0x140002cdc
   14000674a:	mov    ecx,0x2
   14000674f:	jmp    0x14000662f
   140006754:	mov    rdi,QWORD PTR [rcx+0x28]
   140006758:	test   rdi,rdi
   14000675b:	jne    0x140006733
   14000675d:	mov    rcx,QWORD PTR [rcx+0x20]
   140006761:	call   0x14000579c
   140006766:	mov    rdi,rax
   140006769:	test   rax,rax
   14000676c:	jne    0x140006733
   14000676e:	jmp    0x14000671b
   140006770:	mov    ecx,0x15e8
   140006775:	call   0x140002cdc
   14000677a:	mov    rdx,rax
   14000677d:	mov    r8,r15
   140006780:	mov    ecx,r12d
   140006783:	call   0x140002738
   140006788:	jmp    0x14000663d
   14000678d:	mov    ecx,0x57
   140006792:	call   QWORD PTR [rip+0x1900]        # 0x140008098
   140006798:	call   0x140002874
   14000679d:	xor    eax,eax
   14000679f:	add    rsp,0x68
   1400067a3:	pop    r15
   1400067a5:	pop    r14
   1400067a7:	pop    r13
   1400067a9:	pop    r12
   1400067ab:	pop    rdi
   1400067ac:	pop    rsi
   1400067ad:	pop    rbx
   1400067ae:	pop    rbp
   1400067af:	ret    
   1400067b0:	int3   
   1400067b1:	int3   
   1400067b2:	int3   
   1400067b3:	int3   
   1400067b4:	int3   
   1400067b5:	int3   
   1400067b6:	int3   
   1400067b7:	int3   
   1400067b8:	mov    r9,r8
   1400067bb:	test   rcx,rcx
   1400067be:	je     0x1400067ee
   1400067c0:	cmp    DWORD PTR [rcx],0x9
   1400067c3:	jne    0x1400067ee
   1400067c5:	cmp    DWORD PTR [rcx+0x4],edx
   1400067c8:	jbe    0x1400067ee
   1400067ca:	mov    rax,QWORD PTR [rcx+0x8]
   1400067ce:	xor    r8d,r8d
   1400067d1:	cmp    edx,0x1
   1400067d4:	jb     0x1400067e5
   1400067d6:	mov    ecx,edx
   1400067d8:	mov    r8,rax
   1400067db:	mov    rax,QWORD PTR [rax+0x18]
   1400067df:	sub    rcx,0x1
   1400067e3:	jne    0x1400067d8
   1400067e5:	test   r9,r9
   1400067e8:	je     0x1400067f0
   1400067ea:	mov    QWORD PTR [r9],r8
   1400067ed:	ret    
   1400067ee:	xor    eax,eax
   1400067f0:	ret    
   1400067f1:	int3   
   1400067f2:	int3   
   1400067f3:	int3   
   1400067f4:	int3   
   1400067f5:	int3   
   1400067f6:	int3   
   1400067f7:	int3   
   1400067f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400067fd:	mov    QWORD PTR [rsp+0x10],rbp
   140006802:	mov    QWORD PTR [rsp+0x18],rsi
   140006807:	push   rdi
   140006808:	sub    rsp,0x20
   14000680c:	mov    rdi,r9
   14000680f:	mov    esi,r8d
   140006812:	mov    ebp,edx
   140006814:	mov    rbx,rcx
   140006817:	test   rcx,rcx
   14000681a:	je     0x140006875
   14000681c:	cmp    DWORD PTR [rcx],0x9
   14000681f:	jne    0x140006875
   140006821:	cmp    DWORD PTR [rcx+0x4],0xffffffff
   140006825:	je     0x140006875
   140006827:	mov    ecx,0x20
   14000682c:	call   0x14000444c
   140006831:	mov    rcx,rax
   140006834:	test   rax,rax
   140006837:	je     0x140006875
   140006839:	and    QWORD PTR [rax+0x18],0x0
   14000683e:	mov    DWORD PTR [rax+0x4],ebp
   140006841:	mov    DWORD PTR [rax+0x8],esi
   140006844:	mov    QWORD PTR [rax+0x10],rdi
   140006848:	mov    DWORD PTR [rax],0x63
   14000684e:	inc    DWORD PTR [rbx+0x4]
   140006851:	cmp    QWORD PTR [rbx+0x8],0x0
   140006856:	jne    0x140006862
   140006858:	mov    QWORD PTR [rbx+0x10],rax
   14000685c:	mov    QWORD PTR [rbx+0x8],rax
   140006860:	jmp    0x14000686e
   140006862:	mov    rax,QWORD PTR [rbx+0x10]
   140006866:	mov    QWORD PTR [rax+0x18],rcx
   14000686a:	mov    QWORD PTR [rbx+0x10],rcx
   14000686e:	mov    eax,DWORD PTR [rbx+0x4]
   140006871:	dec    eax
   140006873:	jmp    0x140006878
   140006875:	or     eax,0xffffffff
   140006878:	mov    rbx,QWORD PTR [rsp+0x30]
   14000687d:	mov    rbp,QWORD PTR [rsp+0x38]
   140006882:	mov    rsi,QWORD PTR [rsp+0x40]
   140006887:	add    rsp,0x20
   14000688b:	pop    rdi
   14000688c:	ret    
   14000688d:	int3   
   14000688e:	int3   
   14000688f:	int3   
   140006890:	int3   
   140006891:	int3   
   140006892:	int3   
   140006893:	int3   
   140006894:	test   rcx,rcx
   140006897:	je     0x14000690d
   140006899:	push   rbx
   14000689a:	sub    rsp,0x20
   14000689e:	mov    edx,DWORD PTR [rcx+0x4]
   1400068a1:	cmp    edx,0x70000
   1400068a7:	ja     0x1400068be
   1400068a9:	add    edx,0xfffe0000
   1400068af:	cmp    edx,0x50000
   1400068b5:	ja     0x140006908
   1400068b7:	test   dx,dx
   1400068ba:	je     0x1400068db
   1400068bc:	jmp    0x140006908
   1400068be:	cmp    edx,0x80000
   1400068c4:	je     0x1400068e6
   1400068c6:	lea    eax,[rdx-0x90000]
   1400068cc:	test   eax,0xfffcffff
   1400068d1:	jne    0x140006908
   1400068d3:	cmp    edx,0xc0000
   1400068d9:	je     0x140006908
   1400068db:	add    rcx,0x10
   1400068df:	call   0x140004370
   1400068e4:	jmp    0x140006908
   1400068e6:	lea    rbx,[rcx+0x10]
   1400068ea:	mov    rcx,QWORD PTR [rbx]
   1400068ed:	test   rcx,rcx
   1400068f0:	je     0x140006904
   1400068f2:	cmp    DWORD PTR [rcx],0x9
   1400068f5:	jne    0x140006904
   1400068f7:	call   0x1400069f4
   1400068fc:	mov    rcx,rbx
   1400068ff:	call   0x140004370
   140006904:	and    QWORD PTR [rbx],0x0
   140006908:	add    rsp,0x20
   14000690c:	pop    rbx
   14000690d:	ret    
   14000690e:	int3   
   14000690f:	int3   
   140006910:	int3   
   140006911:	int3   
   140006912:	int3   
   140006913:	int3   
   140006914:	mov    QWORD PTR [rsp+0x8],rbx
   140006919:	mov    QWORD PTR [rsp+0x10],rbp
   14000691e:	mov    QWORD PTR [rsp+0x18],rsi
   140006923:	push   rdi
   140006924:	push   r14
   140006926:	push   r15
   140006928:	sub    rsp,0x20
   14000692c:	mov    r15d,r9d
   14000692f:	mov    r14,r8
   140006932:	mov    esi,edx
   140006934:	mov    rbp,rcx
   140006937:	test   rcx,rcx
   14000693a:	je     0x1400069cc
   140006940:	cmp    DWORD PTR [rcx],0x9
   140006943:	jne    0x1400069cc
   140006949:	mov    rdi,QWORD PTR [rcx+0x8]
   14000694d:	xor    ebx,ebx
   14000694f:	cmp    DWORD PTR [rcx+0x4],ebx
   140006952:	jbe    0x1400069cc
   140006954:	cmp    DWORD PTR [rdi+0x4],esi
   140006957:	jne    0x1400069c1
   140006959:	cmp    esi,0x20000
   14000695f:	je     0x1400069ab
   140006961:	cmp    esi,0x30000
   140006967:	je     0x1400069a0
   140006969:	cmp    esi,0x40000
   14000696f:	je     0x1400069a0
   140006971:	cmp    esi,0x60000
   140006977:	je     0x140006992
   140006979:	cmp    esi,0x70000
   14000697f:	jne    0x1400069c1
   140006981:	mov    rax,QWORD PTR [rdi+0x10]
   140006985:	movsd  xmm0,QWORD PTR [rax]
   140006989:	ucomisd xmm0,QWORD PTR [r14]
   14000698e:	jp     0x1400069c1
   140006990:	jmp    0x1400069bf
   140006992:	mov    rax,QWORD PTR [rdi+0x10]
   140006996:	movss  xmm0,DWORD PTR [rax]
   14000699a:	ucomiss xmm0,DWORD PTR [r14]
   14000699e:	jmp    0x14000698e
   1400069a0:	mov    rcx,QWORD PTR [rdi+0x10]
   1400069a4:	mov    eax,DWORD PTR [r14]
   1400069a7:	cmp    DWORD PTR [rcx],eax
   1400069a9:	jmp    0x1400069bf
   1400069ab:	mov    rcx,QWORD PTR [rdi+0x10]
   1400069af:	xor    r9d,r9d
   1400069b2:	mov    r8d,r15d
   1400069b5:	mov    rdx,r14
   1400069b8:	call   0x140003904
   1400069bd:	test   eax,eax
   1400069bf:	je     0x1400069e8
   1400069c1:	mov    rdi,QWORD PTR [rdi+0x18]
   1400069c5:	inc    ebx
   1400069c7:	cmp    ebx,DWORD PTR [rbp+0x4]
   1400069ca:	jb     0x140006954
   1400069cc:	or     eax,0xffffffff
   1400069cf:	mov    rbx,QWORD PTR [rsp+0x40]
   1400069d4:	mov    rbp,QWORD PTR [rsp+0x48]
   1400069d9:	mov    rsi,QWORD PTR [rsp+0x50]
   1400069de:	add    rsp,0x20
   1400069e2:	pop    r15
   1400069e4:	pop    r14
   1400069e6:	pop    rdi
   1400069e7:	ret    
   1400069e8:	mov    eax,ebx
   1400069ea:	jmp    0x1400069cf
   1400069ec:	int3   
   1400069ed:	int3   
   1400069ee:	int3   
   1400069ef:	int3   
   1400069f0:	int3   
   1400069f1:	int3   
   1400069f2:	int3   
   1400069f3:	int3   
   1400069f4:	test   rcx,rcx
   1400069f7:	je     0x140006a54
   1400069f9:	mov    QWORD PTR [rsp+0x10],rbx
   1400069fe:	push   rdi
   1400069ff:	sub    rsp,0x20
   140006a03:	cmp    DWORD PTR [rcx],0x9
   140006a06:	mov    rdi,rcx
   140006a09:	jne    0x140006a4a
   140006a0b:	mov    rax,QWORD PTR [rcx+0x8]
   140006a0f:	mov    QWORD PTR [rsp+0x30],rax
   140006a14:	test   rax,rax
   140006a17:	je     0x140006a3c
   140006a19:	mov    rbx,QWORD PTR [rax+0x18]
   140006a1d:	mov    rcx,rax
   140006a20:	call   0x140006894
   140006a25:	lea    rcx,[rsp+0x30]
   140006a2a:	call   0x140004370
   140006a2f:	mov    QWORD PTR [rsp+0x30],rbx
   140006a34:	mov    rax,rbx
   140006a37:	test   rbx,rbx
   140006a3a:	jne    0x140006a19
   140006a3c:	and    DWORD PTR [rdi+0x4],0x0
   140006a40:	and    QWORD PTR [rdi+0x8],0x0
   140006a45:	and    QWORD PTR [rdi+0x10],0x0
   140006a4a:	mov    rbx,QWORD PTR [rsp+0x38]
   140006a4f:	add    rsp,0x20
   140006a53:	pop    rdi
   140006a54:	ret    
   140006a55:	int3   
   140006a56:	int3   
   140006a57:	int3   
   140006a58:	int3   
   140006a59:	int3   
   140006a5a:	int3   
   140006a5b:	int3   
   140006a5c:	mov    QWORD PTR [rsp+0x10],rbx
   140006a61:	mov    QWORD PTR [rsp+0x18],rsi
   140006a66:	push   rdi
   140006a67:	sub    rsp,0x20
   140006a6b:	mov    rdi,QWORD PTR [rcx]
   140006a6e:	mov    rsi,rcx
   140006a71:	test   rdi,rdi
   140006a74:	je     0x140006aba
   140006a76:	cmp    DWORD PTR [rdi],0x9
   140006a79:	jne    0x140006aba
   140006a7b:	mov    rax,QWORD PTR [rdi+0x8]
   140006a7f:	mov    QWORD PTR [rsp+0x30],rax
   140006a84:	test   rax,rax
   140006a87:	je     0x140006aac
   140006a89:	mov    rbx,QWORD PTR [rax+0x18]
   140006a8d:	mov    rcx,rax
   140006a90:	call   0x140006894
   140006a95:	lea    rcx,[rsp+0x30]
   140006a9a:	call   0x140004370
   140006a9f:	mov    QWORD PTR [rsp+0x30],rbx
   140006aa4:	mov    rax,rbx
   140006aa7:	test   rbx,rbx
   140006aaa:	jne    0x140006a89
   140006aac:	and    DWORD PTR [rdi+0x4],0x0
   140006ab0:	and    QWORD PTR [rdi+0x8],0x0
   140006ab5:	and    QWORD PTR [rdi+0x10],0x0
   140006aba:	mov    rcx,rsi
   140006abd:	mov    rbx,QWORD PTR [rsp+0x38]
   140006ac2:	mov    rsi,QWORD PTR [rsp+0x40]
   140006ac7:	add    rsp,0x20
   140006acb:	pop    rdi
   140006acc:	jmp    0x140004370
   140006ad1:	int3   
   140006ad2:	int3   
   140006ad3:	int3   
   140006ad4:	int3   
   140006ad5:	int3   
   140006ad6:	int3   
   140006ad7:	int3   
   140006ad8:	mov    QWORD PTR [rsp+0x10],rbx
   140006add:	mov    QWORD PTR [rsp+0x18],rbp
   140006ae2:	push   rsi
   140006ae3:	push   rdi
   140006ae4:	push   r14
   140006ae6:	sub    rsp,0x20
   140006aea:	mov    rbp,rdx
   140006aed:	mov    rbx,rcx
   140006af0:	test   rcx,rcx
   140006af3:	je     0x140006b4f
   140006af5:	cmp    DWORD PTR [rcx],0x9
   140006af8:	jne    0x140006b4f
   140006afa:	mov    rcx,rdx
   140006afd:	call   QWORD PTR [rip+0x160d]        # 0x140008110
   140006b03:	lea    edi,[rax+0x1]
   140006b06:	lea    r14d,[rdi+rdi*1]
   140006b0a:	mov    ecx,r14d
   140006b0d:	call   0x14000444c
   140006b12:	mov    QWORD PTR [rsp+0x40],rax
   140006b17:	mov    rsi,rax
   140006b1a:	test   rax,rax
   140006b1d:	je     0x140006b4f
   140006b1f:	mov    r8d,edi
   140006b22:	mov    rdx,rbp
   140006b25:	mov    rcx,rax
   140006b28:	call   0x14000376c
   140006b2d:	mov    r9,rsi
   140006b30:	mov    r8d,r14d
   140006b33:	mov    edx,0x20000
   140006b38:	mov    rcx,rbx
   140006b3b:	call   0x1400067f8
   140006b40:	cmp    eax,0xffffffff
   140006b43:	jne    0x140006b52
   140006b45:	lea    rcx,[rsp+0x40]
   140006b4a:	call   0x140004370
   140006b4f:	or     eax,0xffffffff
   140006b52:	mov    rbx,QWORD PTR [rsp+0x48]
   140006b57:	mov    rbp,QWORD PTR [rsp+0x50]
   140006b5c:	add    rsp,0x20
   140006b60:	pop    r14
   140006b62:	pop    rdi
   140006b63:	pop    rsi
   140006b64:	ret    
   140006b65:	int3   
   140006b66:	int3   
   140006b67:	int3   
   140006b68:	int3   
   140006b69:	int3   
   140006b6a:	int3   
   140006b6b:	int3   
   140006b6c:	mov    QWORD PTR [rsp+0x10],rbx
   140006b71:	push   rdi
   140006b72:	sub    rsp,0x20
   140006b76:	mov    edi,edx
   140006b78:	mov    rbx,rcx
   140006b7b:	test   rcx,rcx
   140006b7e:	je     0x140006bc0
   140006b80:	cmp    DWORD PTR [rcx],0x9
   140006b83:	jne    0x140006bc0
   140006b85:	mov    ecx,0x4
   140006b8a:	call   0x14000444c
   140006b8f:	mov    QWORD PTR [rsp+0x30],rax
   140006b94:	test   rax,rax
   140006b97:	je     0x140006bc0
   140006b99:	mov    r9,rax
   140006b9c:	mov    DWORD PTR [rax],edi
   140006b9e:	mov    edx,0x30000
   140006ba3:	mov    r8d,0x4
   140006ba9:	mov    rcx,rbx
   140006bac:	call   0x1400067f8
   140006bb1:	cmp    eax,0xffffffff
   140006bb4:	jne    0x140006bc3
   140006bb6:	lea    rcx,[rsp+0x30]
   140006bbb:	call   0x140004370
   140006bc0:	or     eax,0xffffffff
   140006bc3:	mov    rbx,QWORD PTR [rsp+0x38]
   140006bc8:	add    rsp,0x20
   140006bcc:	pop    rdi
   140006bcd:	ret    
   140006bce:	int3   
   140006bcf:	int3   
   140006bd0:	int3   
   140006bd1:	int3   
   140006bd2:	int3   
   140006bd3:	int3   
   140006bd4:	mov    QWORD PTR [rsp+0x10],rbx
   140006bd9:	push   rdi
   140006bda:	sub    rsp,0x20
   140006bde:	mov    edi,edx
   140006be0:	mov    rbx,rcx
   140006be3:	test   rcx,rcx
   140006be6:	je     0x140006c28
   140006be8:	cmp    DWORD PTR [rcx],0x9
   140006beb:	jne    0x140006c28
   140006bed:	mov    ecx,0x4
   140006bf2:	call   0x14000444c
   140006bf7:	mov    QWORD PTR [rsp+0x30],rax
   140006bfc:	test   rax,rax
   140006bff:	je     0x140006c28
   140006c01:	mov    r9,rax
   140006c04:	mov    DWORD PTR [rax],edi
   140006c06:	mov    edx,0x40000
   140006c0b:	mov    r8d,0x4
   140006c11:	mov    rcx,rbx
   140006c14:	call   0x1400067f8
   140006c19:	cmp    eax,0xffffffff
   140006c1c:	jne    0x140006c2b
   140006c1e:	lea    rcx,[rsp+0x30]
   140006c23:	call   0x140004370
   140006c28:	or     eax,0xffffffff
   140006c2b:	mov    rbx,QWORD PTR [rsp+0x38]
   140006c30:	add    rsp,0x20
   140006c34:	pop    rdi
   140006c35:	ret    
   140006c36:	int3   
   140006c37:	int3   
   140006c38:	int3   
   140006c39:	int3   
   140006c3a:	int3   
   140006c3b:	int3   
   140006c3c:	rex push rbx
   140006c3e:	sub    rsp,0x30
   140006c42:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140006c47:	movaps xmm6,xmm1
   140006c4a:	mov    rbx,rcx
   140006c4d:	test   rcx,rcx
   140006c50:	je     0x140006c94
   140006c52:	cmp    DWORD PTR [rcx],0x9
   140006c55:	jne    0x140006c94
   140006c57:	mov    ecx,0x4
   140006c5c:	call   0x14000444c
   140006c61:	mov    QWORD PTR [rsp+0x40],rax
   140006c66:	test   rax,rax
   140006c69:	je     0x140006c94
   140006c6b:	mov    r9,rax
   140006c6e:	movss  DWORD PTR [rax],xmm6
   140006c72:	mov    edx,0x60000
   140006c77:	mov    r8d,0x4
   140006c7d:	mov    rcx,rbx
   140006c80:	call   0x1400067f8
   140006c85:	cmp    eax,0xffffffff
   140006c88:	jne    0x140006c97
   140006c8a:	lea    rcx,[rsp+0x40]
   140006c8f:	call   0x140004370
   140006c94:	or     eax,0xffffffff
   140006c97:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140006c9c:	add    rsp,0x30
   140006ca0:	pop    rbx
   140006ca1:	ret    
   140006ca2:	int3   
   140006ca3:	int3   
   140006ca4:	int3   
   140006ca5:	int3   
   140006ca6:	int3   
   140006ca7:	int3   
   140006ca8:	rex push rbx
   140006caa:	sub    rsp,0x30
   140006cae:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140006cb3:	movaps xmm6,xmm1
   140006cb6:	mov    rbx,rcx
   140006cb9:	test   rcx,rcx
   140006cbc:	je     0x140006d00
   140006cbe:	cmp    DWORD PTR [rcx],0x9
   140006cc1:	jne    0x140006d00
   140006cc3:	mov    ecx,0x8
   140006cc8:	call   0x14000444c
   140006ccd:	mov    QWORD PTR [rsp+0x40],rax
   140006cd2:	test   rax,rax
   140006cd5:	je     0x140006d00
   140006cd7:	mov    r9,rax
   140006cda:	movsd  QWORD PTR [rax],xmm6
   140006cde:	mov    edx,0x70000
   140006ce3:	mov    r8d,0x8
   140006ce9:	mov    rcx,rbx
   140006cec:	call   0x1400067f8
   140006cf1:	cmp    eax,0xffffffff
   140006cf4:	jne    0x140006d03
   140006cf6:	lea    rcx,[rsp+0x40]
   140006cfb:	call   0x140004370
   140006d00:	or     eax,0xffffffff
   140006d03:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140006d08:	add    rsp,0x30
   140006d0c:	pop    rbx
   140006d0d:	ret    
   140006d0e:	int3   
   140006d0f:	int3   
   140006d10:	int3   
   140006d11:	int3   
   140006d12:	int3   
   140006d13:	int3   
   140006d14:	mov    QWORD PTR [rsp+0x10],rbx
   140006d19:	mov    QWORD PTR [rsp+0x18],rsi
   140006d1e:	mov    QWORD PTR [rsp+0x8],rcx
   140006d23:	push   rdi
   140006d24:	sub    rsp,0x20
   140006d28:	mov    rsi,QWORD PTR [rip+0x39d9]        # 0x14000a708
   140006d2f:	xor    edi,edi
   140006d31:	test   rsi,rsi
   140006d34:	je     0x140006dad
   140006d36:	cmp    DWORD PTR [rsi],0x9
   140006d39:	jne    0x140006dad
   140006d3b:	lea    ecx,[rdi+0x18]
   140006d3e:	call   0x14000444c
   140006d43:	mov    rbx,rax
   140006d46:	test   rax,rax
   140006d49:	je     0x140006dad
   140006d4b:	mov    QWORD PTR [rax],0x9
   140006d52:	cmp    DWORD PTR [rax],0x9
   140006d55:	mov    QWORD PTR [rax+0x8],rdi
   140006d59:	mov    QWORD PTR [rax+0x10],rdi
   140006d5d:	mov    QWORD PTR [rsp+0x30],rax
   140006d62:	jne    0x140006dad
   140006d64:	xor    r9d,r9d
   140006d67:	xor    r8d,r8d
   140006d6a:	xor    edx,edx
   140006d6c:	mov    rcx,rbx
   140006d6f:	call   0x1400067f8
   140006d74:	cmp    eax,0xffffffff
   140006d77:	je     0x140006d80
   140006d79:	inc    edi
   140006d7b:	cmp    edi,0x3
   140006d7e:	jb     0x140006d64
   140006d80:	cmp    edi,0x3
   140006d83:	jne    0x140006d9e
   140006d85:	mov    r9,rbx
   140006d88:	lea    r8d,[rdi+0x5]
   140006d8c:	mov    edx,0x80000
   140006d91:	mov    rcx,rsi
   140006d94:	call   0x1400067f8
   140006d99:	cmp    eax,0xffffffff
   140006d9c:	jne    0x140006db0
   140006d9e:	cmp    DWORD PTR [rbx],0x9
   140006da1:	jne    0x140006dad
   140006da3:	lea    rcx,[rsp+0x30]
   140006da8:	call   0x140006a5c
   140006dad:	or     eax,0xffffffff
   140006db0:	mov    rbx,QWORD PTR [rsp+0x38]
   140006db5:	mov    rsi,QWORD PTR [rsp+0x40]
   140006dba:	add    rsp,0x20
   140006dbe:	pop    rdi
   140006dbf:	ret    
   140006dc0:	int3   
   140006dc1:	int3   
   140006dc2:	int3   
   140006dc3:	int3   
   140006dc4:	int3   
   140006dc5:	int3   
   140006dc6:	int3   
   140006dc7:	int3   
   140006dc8:	mov    QWORD PTR [rsp+0x8],rbx
   140006dcd:	mov    QWORD PTR [rsp+0x10],rsi
   140006dd2:	push   rdi
   140006dd3:	sub    rsp,0x20
   140006dd7:	xor    ebx,ebx
   140006dd9:	mov    esi,edx
   140006ddb:	mov    rdi,rcx
   140006dde:	test   rcx,rcx
   140006de1:	je     0x140006e0b
   140006de3:	cmp    DWORD PTR [rcx],0x9
   140006de6:	jne    0x140006e0b
   140006de8:	test   edx,edx
   140006dea:	je     0x140006e07
   140006dec:	xor    r9d,r9d
   140006def:	xor    r8d,r8d
   140006df2:	xor    edx,edx
   140006df4:	mov    rcx,rdi
   140006df7:	call   0x1400067f8
   140006dfc:	cmp    eax,0xffffffff
   140006dff:	je     0x140006e07
   140006e01:	inc    ebx
   140006e03:	cmp    ebx,esi
   140006e05:	jb     0x140006dec
   140006e07:	mov    eax,ebx
   140006e09:	jmp    0x140006e0e
   140006e0b:	or     eax,0xffffffff
   140006e0e:	mov    rbx,QWORD PTR [rsp+0x30]
   140006e13:	mov    rsi,QWORD PTR [rsp+0x38]
   140006e18:	add    rsp,0x20
   140006e1c:	pop    rdi
   140006e1d:	ret    
   140006e1e:	int3   
   140006e1f:	int3   
   140006e20:	int3   
   140006e21:	int3   
   140006e22:	int3   
   140006e23:	int3   
   140006e24:	sub    rsp,0x28
   140006e28:	mov    rcx,QWORD PTR [rip+0x38d9]        # 0x14000a708
   140006e2f:	xor    r8d,r8d
   140006e32:	call   0x1400067b8
   140006e37:	xor    ecx,ecx
   140006e39:	test   rax,rax
   140006e3c:	je     0x140006e5c
   140006e3e:	cmp    DWORD PTR [rax+0x4],0x80000
   140006e45:	jne    0x140006e5c
   140006e47:	mov    rax,QWORD PTR [rax+0x10]
   140006e4b:	test   rax,rax
   140006e4e:	je     0x140006e58
   140006e50:	cmp    DWORD PTR [rax],0x9
   140006e53:	jne    0x140006e58
   140006e55:	mov    ecx,DWORD PTR [rax+0x4]
   140006e58:	mov    eax,ecx
   140006e5a:	jmp    0x140006e5e
   140006e5c:	xor    eax,eax
   140006e5e:	add    rsp,0x28
   140006e62:	ret    
   140006e63:	int3   
   140006e64:	int3   
   140006e65:	int3   
   140006e66:	int3   
   140006e67:	int3   
   140006e68:	int3   
   140006e69:	int3   
   140006e6a:	int3   
   140006e6b:	int3   
   140006e6c:	sub    rsp,0x28
   140006e70:	mov    rcx,QWORD PTR [rip+0x3891]        # 0x14000a708
   140006e77:	mov    r11d,r8d
   140006e7a:	xor    r8d,r8d
   140006e7d:	lea    edx,[r8+0x3]
   140006e81:	call   0x1400067b8
   140006e86:	xor    r10d,r10d
   140006e89:	test   rax,rax
   140006e8c:	je     0x140006ec6
   140006e8e:	cmp    DWORD PTR [rax+0x4],0x80000
   140006e95:	jne    0x140006ec6
   140006e97:	mov    rcx,QWORD PTR [rax+0x10]
   140006e9b:	xor    r8d,r8d
   140006e9e:	mov    edx,r11d
   140006ea1:	call   0x1400067b8
   140006ea6:	test   rax,rax
   140006ea9:	je     0x140006ec1
   140006eab:	cmp    DWORD PTR [rax+0x4],0x10000
   140006eb2:	je     0x140006ebd
   140006eb4:	cmp    DWORD PTR [rax+0x4],0x80000
   140006ebb:	jne    0x140006ec1
   140006ebd:	mov    r10,QWORD PTR [rax+0x10]
   140006ec1:	mov    rax,r10
   140006ec4:	jmp    0x140006ec8
   140006ec6:	xor    eax,eax
   140006ec8:	add    rsp,0x28
   140006ecc:	ret    
   140006ecd:	int3   
   140006ece:	int3   
   140006ecf:	int3   
   140006ed0:	int3   
   140006ed1:	int3   
   140006ed2:	int3   
   140006ed3:	int3   
   140006ed4:	mov    rax,rsp
   140006ed7:	mov    QWORD PTR [rax+0x8],rbx
   140006edb:	mov    QWORD PTR [rax+0x10],rbp
   140006edf:	mov    QWORD PTR [rax+0x18],rsi
   140006ee3:	mov    QWORD PTR [rax+0x20],rdi
   140006ee7:	push   r14
   140006ee9:	sub    rsp,0x20
   140006eed:	mov    r14,r8
   140006ef0:	xor    r8d,r8d
   140006ef3:	call   0x1400067b8
   140006ef8:	mov    rdi,rax
   140006efb:	test   rax,rax
   140006efe:	jne    0x140006f07
   140006f00:	xor    eax,eax
   140006f02:	jmp    0x140006f87
   140006f07:	test   DWORD PTR [rax+0x4],0xfffdffff
   140006f0e:	jne    0x140006f00
   140006f10:	mov    rcx,r14
   140006f13:	call   QWORD PTR [rip+0x11f7]        # 0x140008110
   140006f19:	cmp    DWORD PTR [rdi+0x4],0x0
   140006f1d:	lea    esi,[rax+0x1]
   140006f20:	jne    0x140006f41
   140006f22:	lea    ebx,[rsi+rsi*1]
   140006f25:	mov    ecx,ebx
   140006f27:	call   0x14000444c
   140006f2c:	mov    QWORD PTR [rdi+0x10],rax
   140006f30:	test   rax,rax
   140006f33:	je     0x140006f00
   140006f35:	mov    DWORD PTR [rdi+0x4],0x20000
   140006f3c:	mov    DWORD PTR [rdi+0x8],ebx
   140006f3f:	jmp    0x140006f73
   140006f41:	mov    eax,DWORD PTR [rdi+0x8]
   140006f44:	mov    ecx,esi
   140006f46:	add    rcx,rcx
   140006f49:	cmp    rax,rcx
   140006f4c:	jae    0x140006f73
   140006f4e:	lea    rbx,[rdi+0x10]
   140006f52:	mov    rcx,rbx
   140006f55:	call   0x140004370
   140006f5a:	and    QWORD PTR [rbx],0x0
   140006f5e:	lea    ebp,[rsi+rsi*1]
   140006f61:	mov    ecx,ebp
   140006f63:	call   0x14000444c
   140006f68:	mov    QWORD PTR [rbx],rax
   140006f6b:	test   rax,rax
   140006f6e:	je     0x140006f00
   140006f70:	mov    DWORD PTR [rdi+0x8],ebp
   140006f73:	mov    rcx,QWORD PTR [rdi+0x10]
   140006f77:	mov    r8d,esi
   140006f7a:	mov    rdx,r14
   140006f7d:	call   0x14000376c
   140006f82:	mov    eax,0x1
   140006f87:	mov    rbx,QWORD PTR [rsp+0x30]
   140006f8c:	mov    rbp,QWORD PTR [rsp+0x38]
   140006f91:	mov    rsi,QWORD PTR [rsp+0x40]
   140006f96:	mov    rdi,QWORD PTR [rsp+0x48]
   140006f9b:	add    rsp,0x20
   140006f9f:	pop    r14
   140006fa1:	ret    
   140006fa2:	int3   
   140006fa3:	int3   
   140006fa4:	int3   
   140006fa5:	int3   
   140006fa6:	int3   
   140006fa7:	int3   
   140006fa8:	sub    rsp,0x28
   140006fac:	mov    rcx,QWORD PTR [rip+0x3755]        # 0x14000a708
   140006fb3:	mov    r11d,r8d
   140006fb6:	xor    r8d,r8d
   140006fb9:	lea    edx,[r8+0x3]
   140006fbd:	call   0x1400067b8
   140006fc2:	xor    r10d,r10d
   140006fc5:	test   rax,rax
   140006fc8:	je     0x140006ff0
   140006fca:	cmp    DWORD PTR [rax+0x4],0x80000
   140006fd1:	jne    0x140006ff0
   140006fd3:	mov    rcx,QWORD PTR [rax+0x10]
   140006fd7:	xor    r8d,r8d
   140006fda:	mov    edx,r11d
   140006fdd:	call   0x1400067b8
   140006fe2:	test   rax,rax
   140006fe5:	je     0x140006feb
   140006fe7:	mov    r10d,DWORD PTR [rax+0x4]
   140006feb:	mov    eax,r10d
   140006fee:	jmp    0x140006ff2
   140006ff0:	xor    eax,eax
   140006ff2:	add    rsp,0x28
   140006ff6:	ret    
   140006ff7:	int3   
   140006ff8:	int3   
   140006ff9:	int3   
   140006ffa:	int3   
   140006ffb:	int3   
   140006ffc:	int3   
   140006ffd:	int3   
   140006ffe:	int3   
   140006fff:	int3   
   140007000:	sub    rsp,0x28
   140007004:	mov    eax,0x5a4d
   140007009:	cmp    WORD PTR [rip+0xffffffffffff8ff0],ax        # 0x140000000
   140007010:	je     0x140007016
   140007012:	xor    eax,eax
   140007014:	jmp    0x140007065
   140007016:	movsxd rcx,DWORD PTR [rip+0xffffffffffff901f]        # 0x14000003c
   14000701d:	lea    rax,[rip+0xffffffffffff8fdc]        # 0x140000000
   140007024:	add    rcx,rax
   140007027:	cmp    DWORD PTR [rcx],0x4550
   14000702d:	jne    0x140007012
   14000702f:	movzx  eax,WORD PTR [rcx+0x18]
   140007033:	cmp    eax,0x10b
   140007038:	je     0x140007054
   14000703a:	cmp    eax,0x20b
   14000703f:	jne    0x140007012
   140007041:	xor    eax,eax
   140007043:	cmp    DWORD PTR [rcx+0x84],0xe
   14000704a:	jbe    0x140007065
   14000704c:	cmp    DWORD PTR [rcx+0xf8],eax
   140007052:	jmp    0x140007062
   140007054:	xor    eax,eax
   140007056:	cmp    DWORD PTR [rcx+0x74],0xe
   14000705a:	jbe    0x140007065
   14000705c:	cmp    DWORD PTR [rcx+0xe8],eax
   140007062:	setne  al
   140007065:	mov    ecx,0x1
   14000706a:	mov    DWORD PTR [rip+0x3000],eax        # 0x14000a070
   140007070:	call   0x140007438
   140007075:	mov    ecx,eax
   140007077:	call   QWORD PTR [rip+0x12a3]        # 0x140008320
   14000707d:	mov    rcx,QWORD PTR [rip+0x1214]        # 0x140008298
   140007084:	or     rax,0xffffffffffffffff
   140007088:	mov    QWORD PTR [rip+0x3689],rax        # 0x14000a718
   14000708f:	mov    QWORD PTR [rip+0x368a],rax        # 0x14000a720
   140007096:	mov    eax,DWORD PTR [rip+0x2fe8]        # 0x14000a084
   14000709c:	mov    DWORD PTR [rcx],eax
   14000709e:	mov    rcx,QWORD PTR [rip+0x123b]        # 0x1400082e0
   1400070a5:	mov    eax,DWORD PTR [rip+0x2fcd]        # 0x14000a078
   1400070ab:	mov    DWORD PTR [rcx],eax
   1400070ad:	call   0x140007650
   1400070b2:	cmp    DWORD PTR [rip+0x2f47],0x0        # 0x14000a000
   1400070b9:	jne    0x1400070c8
   1400070bb:	lea    rcx,[rip+0x58e]        # 0x140007650
   1400070c2:	call   QWORD PTR [rip+0x1238]        # 0x140008300
   1400070c8:	xor    eax,eax
   1400070ca:	add    rsp,0x28
   1400070ce:	ret    
   1400070cf:	int3   
   1400070d0:	int3   
   1400070d1:	int3   
   1400070d2:	int3   
   1400070d3:	int3   
   1400070d4:	int3   
   1400070d5:	int3   
   1400070d6:	int3   
   1400070d7:	int3   
   1400070d8:	int3   
   1400070d9:	int3   
   1400070da:	int3   
   1400070db:	int3   
   1400070dc:	int3   
   1400070dd:	int3   
   1400070de:	int3   
   1400070df:	int3   
   1400070e0:	sub    rsp,0x38
   1400070e4:	mov    eax,DWORD PTR [rip+0x2f96]        # 0x14000a080
   1400070ea:	lea    r8,[rip+0x2f77]        # 0x14000a068
   1400070f1:	mov    r9d,DWORD PTR [rip+0x2f84]        # 0x14000a07c
   1400070f8:	lea    rdx,[rip+0x2f61]        # 0x14000a060
   1400070ff:	mov    DWORD PTR [rip+0x2f6f],eax        # 0x14000a074
   140007105:	lea    rcx,[rip+0x2f4c]        # 0x14000a058
   14000710c:	lea    rax,[rip+0x2f61]        # 0x14000a074
   140007113:	mov    QWORD PTR [rsp+0x20],rax
   140007118:	call   QWORD PTR [rip+0x120a]        # 0x140008328
   14000711e:	mov    DWORD PTR [rip+0x2f38],eax        # 0x14000a05c
   140007124:	add    rsp,0x38
   140007128:	ret    
   140007129:	int3   
   14000712a:	int3   
   14000712b:	int3   
   14000712c:	int3   
   14000712d:	int3   
   14000712e:	int3   
   14000712f:	int3   
   140007130:	mov    rax,rsp
   140007133:	mov    QWORD PTR [rax+0x8],rbx
   140007137:	mov    QWORD PTR [rax+0x10],rsi
   14000713b:	mov    QWORD PTR [rax+0x18],rdi
   14000713f:	mov    QWORD PTR [rax+0x20],r12
   140007143:	push   r14
   140007145:	sub    rsp,0x30
   140007149:	mov    rax,QWORD PTR gs:0x30
   140007152:	mov    rbx,QWORD PTR [rax+0x8]
   140007156:	xor    r14d,r14d
   140007159:	xor    eax,eax
   14000715b:	lock cmpxchg QWORD PTR [rip+0x35c4],rbx        # 0x14000a728
   140007164:	je     0x140007182
   140007166:	cmp    rax,rbx
   140007169:	jne    0x140007175
   14000716b:	mov    ebx,0x1
   140007170:	mov    r14d,ebx
   140007173:	jmp    0x140007187
   140007175:	mov    ecx,0x3e8
   14000717a:	call   QWORD PTR [rip+0xfc0]        # 0x140008140
   140007180:	jmp    0x140007159
   140007182:	mov    ebx,0x1
   140007187:	mov    eax,DWORD PTR [rip+0x35a3]        # 0x14000a730
   14000718d:	cmp    eax,ebx
   14000718f:	jne    0x14000719d
   140007191:	mov    ecx,0x1f
   140007196:	call   0x140007484
   14000719b:	jmp    0x140007206
   14000719d:	mov    eax,DWORD PTR [rip+0x358d]        # 0x14000a730
   1400071a3:	test   eax,eax
   1400071a5:	jne    0x140007200
   1400071a7:	mov    DWORD PTR [rip+0x3583],ebx        # 0x14000a730
   1400071ad:	lea    r12,[rip+0x1244]        # 0x1400083f8
   1400071b4:	lea    rdi,[rip+0x1225]        # 0x1400083e0
   1400071bb:	mov    QWORD PTR [rsp+0x28],rdi
   1400071c0:	mov    DWORD PTR [rsp+0x20],eax
   1400071c4:	cmp    rdi,r12
   1400071c7:	jae    0x1400071f2
   1400071c9:	test   eax,eax
   1400071cb:	jne    0x1400071f6
   1400071cd:	mov    rsi,QWORD PTR [rdi]
   1400071d0:	test   rsi,rsi
   1400071d3:	je     0x1400071e7
   1400071d5:	mov    rcx,rsi
   1400071d8:	mov    rax,QWORD PTR [rip+0x11d9]        # 0x1400083b8
   1400071df:	call   rax
   1400071e1:	call   rsi
   1400071e3:	mov    DWORD PTR [rsp+0x20],eax
   1400071e7:	add    rdi,0x8
   1400071eb:	mov    QWORD PTR [rsp+0x28],rdi
   1400071f0:	jmp    0x1400071c4
   1400071f2:	test   eax,eax
   1400071f4:	je     0x140007206
   1400071f6:	mov    eax,0xff
   1400071fb:	jmp    0x1400072e7
   140007200:	mov    DWORD PTR [rip+0x2e4e],ebx        # 0x14000a054
   140007206:	mov    eax,DWORD PTR [rip+0x3524]        # 0x14000a730
   14000720c:	cmp    eax,ebx
   14000720e:	jne    0x14000722d
   140007210:	lea    rdx,[rip+0x11c1]        # 0x1400083d8
   140007217:	lea    rcx,[rip+0x11aa]        # 0x1400083c8
   14000721e:	call   0x14000765a
   140007223:	mov    DWORD PTR [rip+0x3503],0x2        # 0x14000a730
   14000722d:	test   r14d,r14d
   140007230:	jne    0x14000723b
   140007232:	xor    eax,eax
   140007234:	xchg   QWORD PTR [rip+0x34ed],rax        # 0x14000a728
   14000723b:	cmp    QWORD PTR [rip+0x34f5],0x0        # 0x14000a738
   140007243:	je     0x140007273
   140007245:	lea    rcx,[rip+0x34ec]        # 0x14000a738
   14000724c:	call   0x1400074e0
   140007251:	test   eax,eax
   140007253:	je     0x140007273
   140007255:	mov    rbx,QWORD PTR [rip+0x34dc]        # 0x14000a738
   14000725c:	mov    rcx,rbx
   14000725f:	mov    rax,QWORD PTR [rip+0x1152]        # 0x1400083b8
   140007266:	call   rax
   140007268:	xor    r8d,r8d
   14000726b:	lea    edx,[r8+0x2]
   14000726f:	xor    ecx,ecx
   140007271:	call   rbx
   140007273:	mov    r8,QWORD PTR [rip+0x2dee]        # 0x14000a068
   14000727a:	mov    rdx,QWORD PTR [rip+0x2ddf]        # 0x14000a060
   140007281:	mov    ecx,DWORD PTR [rip+0x2dd1]        # 0x14000a058
   140007287:	call   0x140001008
   14000728c:	mov    DWORD PTR [rip+0x2dbe],eax        # 0x14000a050
   140007292:	cmp    DWORD PTR [rip+0x2dd7],0x0        # 0x14000a070
   140007299:	jne    0x1400072a3
   14000729b:	mov    ecx,eax
   14000729d:	call   QWORD PTR [rip+0x1075]        # 0x140008318
   1400072a3:	cmp    DWORD PTR [rip+0x2daa],0x0        # 0x14000a054
   1400072aa:	jne    0x1400072b8
   1400072ac:	call   QWORD PTR [rip+0x1056]        # 0x140008308
   1400072b2:	mov    eax,DWORD PTR [rip+0x2d98]        # 0x14000a050
   1400072b8:	jmp    0x1400072e7
   1400072ba:	mov    DWORD PTR [rip+0x2d90],eax        # 0x14000a050
   1400072c0:	cmp    DWORD PTR [rip+0x2da9],0x0        # 0x14000a070
   1400072c7:	jne    0x1400072d2
   1400072c9:	mov    ecx,eax
   1400072cb:	call   QWORD PTR [rip+0x103f]        # 0x140008310
   1400072d1:	int3   
   1400072d2:	cmp    DWORD PTR [rip+0x2d7b],0x0        # 0x14000a054
   1400072d9:	jne    0x1400072e7
   1400072db:	call   QWORD PTR [rip+0x1027]        # 0x140008308
   1400072e1:	mov    eax,DWORD PTR [rip+0x2d69]        # 0x14000a050
   1400072e7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400072ec:	mov    rsi,QWORD PTR [rsp+0x48]
   1400072f1:	mov    rdi,QWORD PTR [rsp+0x50]
   1400072f6:	mov    r12,QWORD PTR [rsp+0x58]
   1400072fb:	add    rsp,0x30
   1400072ff:	pop    r14
   140007301:	ret    
   140007302:	int3   
   140007303:	int3   
   140007304:	int3   
   140007305:	int3   
   140007306:	int3   
   140007307:	int3   
   140007308:	int3   
   140007309:	int3   
   14000730a:	int3   
   14000730b:	int3   
   14000730c:	int3   
   14000730d:	int3   
   14000730e:	int3   
   14000730f:	int3   
   140007310:	sub    rsp,0x28
   140007314:	call   0x140007574
   140007319:	add    rsp,0x28
   14000731d:	jmp    0x140007130
   140007322:	int3   
   140007323:	int3   
   140007324:	int3   
   140007325:	int3   
   140007326:	int3   
   140007327:	int3   
   140007328:	int3   
   140007329:	int3   
   14000732a:	int3   
   14000732b:	int3   
   14000732c:	int3   
   14000732d:	int3   
   14000732e:	int3   
   14000732f:	int3   
   140007330:	int3   
   140007331:	int3   
   140007332:	int3   
   140007333:	int3   
   140007334:	int3   
   140007335:	int3   
   140007336:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007340:	cmp    rcx,QWORD PTR [rip+0x2cc1]        # 0x14000a008
   140007347:	jne    0x140007359
   140007349:	rol    rcx,0x10
   14000734d:	test   cx,0xffff
   140007352:	jne    0x140007355
   140007354:	ret    
   140007355:	ror    rcx,0x10
   140007359:	jmp    0x1400076d0
   14000735e:	int3   
   14000735f:	int3   
   140007360:	int3   
   140007361:	int3   
   140007362:	int3   
   140007363:	int3   
   140007364:	int3   
   140007365:	int3   
   140007366:	int3   
   140007367:	int3   
   140007368:	int3   
   140007369:	int3   
   14000736a:	int3   
   14000736b:	int3   
   14000736c:	int3   
   14000736d:	int3   
   14000736e:	int3   
   14000736f:	int3   
   140007370:	sub    rsp,0x28
   140007374:	mov    rax,QWORD PTR [rcx]
   140007377:	cmp    DWORD PTR [rax],0xe06d7363
   14000737d:	jne    0x1400073a2
   14000737f:	cmp    DWORD PTR [rax+0x18],0x4
   140007383:	jne    0x1400073a2
   140007385:	mov    ecx,DWORD PTR [rax+0x20]
   140007388:	lea    eax,[rcx-0x19930520]
   14000738e:	cmp    eax,0x2
   140007391:	jbe    0x14000739b
   140007393:	cmp    ecx,0x1994000
   140007399:	jne    0x1400073a2
   14000739b:	call   QWORD PTR [rip+0xf37]        # 0x1400082d8
   1400073a1:	int3   
   1400073a2:	xor    eax,eax
   1400073a4:	add    rsp,0x28
   1400073a8:	ret    
   1400073a9:	int3   
   1400073aa:	int3   
   1400073ab:	int3   
   1400073ac:	int3   
   1400073ad:	int3   
   1400073ae:	int3   
   1400073af:	int3   
   1400073b0:	sub    rsp,0x28
   1400073b4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140007370
   1400073bb:	call   QWORD PTR [rip+0xd77]        # 0x140008138
   1400073c1:	xor    eax,eax
   1400073c3:	add    rsp,0x28
   1400073c7:	ret    
   1400073c8:	int3   
   1400073c9:	int3   
   1400073ca:	int3   
   1400073cb:	int3   
   1400073cc:	int3   
   1400073cd:	int3   
   1400073ce:	jmp    QWORD PTR [rip+0xf64]        # 0x140008338
   1400073d4:	int3   
   1400073d5:	int3   
   1400073d6:	int3   
   1400073d7:	int3   
   1400073d8:	int3   
   1400073d9:	int3   
   1400073da:	int3   
   1400073db:	int3   
   1400073dc:	sub    rsp,0x18
   1400073e0:	xor    edx,edx
   1400073e2:	lea    rax,[rcx-0x1]
   1400073e6:	cmp    rax,0xfffffffffffffffd
   1400073ea:	ja     0x140007428
   1400073ec:	mov    eax,0x5a4d
   1400073f1:	cmp    WORD PTR [rcx],ax
   1400073f4:	jne    0x140007420
   1400073f6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400073f9:	jl     0x140007420
   1400073fb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140007402:	jae    0x140007420
   140007404:	movsxd rax,DWORD PTR [rcx+0x3c]
   140007408:	add    rax,rcx
   14000740b:	mov    QWORD PTR [rsp],rax
   14000740f:	cmp    DWORD PTR [rax],0x4550
   140007415:	cmovne rax,rdx
   140007419:	mov    rdx,rax
   14000741c:	mov    QWORD PTR [rsp],rax
   140007420:	jmp    0x140007428
   140007422:	xor    edx,edx
   140007424:	mov    QWORD PTR [rsp],rdx
   140007428:	mov    rax,rdx
   14000742b:	add    rsp,0x18
   14000742f:	ret    
   140007430:	int3   
   140007431:	int3   
   140007432:	int3   
   140007433:	int3   
   140007434:	int3   
   140007435:	int3   
   140007436:	int3   
   140007437:	int3   
   140007438:	rex push rbx
   14000743a:	sub    rsp,0x20
   14000743e:	mov    ebx,ecx
   140007440:	xor    ecx,ecx
   140007442:	call   QWORD PTR [rip+0xce8]        # 0x140008130
   140007448:	test   rax,rax
   14000744b:	je     0x140007475
   14000744d:	mov    rcx,rax
   140007450:	call   0x1400073dc
   140007455:	test   rax,rax
   140007458:	je     0x140007475
   14000745a:	mov    ecx,0x2
   14000745f:	cmp    WORD PTR [rax+0x5c],cx
   140007463:	jne    0x140007469
   140007465:	mov    eax,ecx
   140007467:	jmp    0x140007477
   140007469:	cmp    WORD PTR [rax+0x5c],0x3
   14000746e:	mov    eax,0x1
   140007473:	je     0x140007477
   140007475:	mov    eax,ebx
   140007477:	add    rsp,0x20
   14000747b:	pop    rbx
   14000747c:	ret    
   14000747d:	int3   
   14000747e:	int3   
   14000747f:	int3   
   140007480:	int3   
   140007481:	int3   
   140007482:	int3   
   140007483:	int3   
   140007484:	jmp    QWORD PTR [rip+0xea6]        # 0x140008330
   14000748a:	int3   
   14000748b:	int3   
   14000748c:	int3   
   14000748d:	int3   
   14000748e:	int3   
   14000748f:	int3   
   140007490:	movsxd r8,DWORD PTR [rcx+0x3c]
   140007494:	xor    r9d,r9d
   140007497:	add    r8,rcx
   14000749a:	mov    r10,rdx
   14000749d:	movzx  eax,WORD PTR [r8+0x14]
   1400074a2:	movzx  r11d,WORD PTR [r8+0x6]
   1400074a7:	add    rax,0x18
   1400074ab:	add    rax,r8
   1400074ae:	test   r11d,r11d
   1400074b1:	je     0x1400074d1
   1400074b3:	mov    edx,DWORD PTR [rax+0xc]
   1400074b6:	cmp    r10,rdx
   1400074b9:	jb     0x1400074c5
   1400074bb:	mov    ecx,DWORD PTR [rax+0x8]
   1400074be:	add    ecx,edx
   1400074c0:	cmp    r10,rcx
   1400074c3:	jb     0x1400074d3
   1400074c5:	inc    r9d
   1400074c8:	add    rax,0x28
   1400074cc:	cmp    r9d,r11d
   1400074cf:	jb     0x1400074b3
   1400074d1:	xor    eax,eax
   1400074d3:	ret    
   1400074d4:	int3   
   1400074d5:	int3   
   1400074d6:	int3   
   1400074d7:	int3   
   1400074d8:	int3   
   1400074d9:	int3   
   1400074da:	int3   
   1400074db:	int3   
   1400074dc:	int3   
   1400074dd:	int3   
   1400074de:	int3   
   1400074df:	int3   
   1400074e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400074e5:	push   rdi
   1400074e6:	sub    rsp,0x20
   1400074ea:	mov    rbx,rcx
   1400074ed:	lea    rdi,[rip+0xffffffffffff8b0c]        # 0x140000000
   1400074f4:	mov    rcx,rdi
   1400074f7:	call   0x140007540
   1400074fc:	test   eax,eax
   1400074fe:	je     0x140007522
   140007500:	sub    rbx,rdi
   140007503:	mov    rdx,rbx
   140007506:	mov    rcx,rdi
   140007509:	call   0x140007490
   14000750e:	test   rax,rax
   140007511:	je     0x140007522
   140007513:	mov    eax,DWORD PTR [rax+0x24]
   140007516:	shr    eax,0x1f
   140007519:	not    eax
   14000751b:	and    eax,0x1
   14000751e:	jmp    0x140007522
   140007520:	xor    eax,eax
   140007522:	mov    rbx,QWORD PTR [rsp+0x30]
   140007527:	add    rsp,0x20
   14000752b:	pop    rdi
   14000752c:	ret    
   14000752d:	int3   
   14000752e:	int3   
   14000752f:	int3   
   140007530:	int3   
   140007531:	int3   
   140007532:	int3   
   140007533:	int3   
   140007534:	int3   
   140007535:	int3   
   140007536:	int3   
   140007537:	int3   
   140007538:	int3   
   140007539:	int3   
   14000753a:	int3   
   14000753b:	int3   
   14000753c:	int3   
   14000753d:	int3   
   14000753e:	int3   
   14000753f:	int3   
   140007540:	mov    rax,rcx
   140007543:	mov    ecx,0x5a4d
   140007548:	cmp    WORD PTR [rax],cx
   14000754b:	je     0x140007550
   14000754d:	xor    eax,eax
   14000754f:	ret    
   140007550:	movsxd rcx,DWORD PTR [rax+0x3c]
   140007554:	add    rcx,rax
   140007557:	xor    eax,eax
   140007559:	cmp    DWORD PTR [rcx],0x4550
   14000755f:	jne    0x14000756d
   140007561:	mov    edx,0x20b
   140007566:	cmp    WORD PTR [rcx+0x18],dx
   14000756a:	sete   al
   14000756d:	ret    
   14000756e:	int3   
   14000756f:	int3   
   140007570:	int3   
   140007571:	int3   
   140007572:	int3   
   140007573:	int3   
   140007574:	mov    QWORD PTR [rsp+0x20],rbx
   140007579:	push   rbp
   14000757a:	mov    rbp,rsp
   14000757d:	sub    rsp,0x20
   140007581:	and    QWORD PTR [rbp+0x18],0x0
   140007586:	movabs rbx,0x2b992ddfa232
   140007590:	mov    rax,QWORD PTR [rip+0x2a71]        # 0x14000a008
   140007597:	cmp    rax,rbx
   14000759a:	jne    0x14000762f
   1400075a0:	lea    rcx,[rbp+0x18]
   1400075a4:	call   QWORD PTR [rip+0xbf6]        # 0x1400081a0
   1400075aa:	mov    rax,QWORD PTR [rbp+0x18]
   1400075ae:	mov    QWORD PTR [rbp+0x10],rax
   1400075b2:	call   QWORD PTR [rip+0xc00]        # 0x1400081b8
   1400075b8:	mov    eax,eax
   1400075ba:	xor    QWORD PTR [rbp+0x10],rax
   1400075be:	call   QWORD PTR [rip+0xbd4]        # 0x140008198
   1400075c4:	mov    eax,eax
   1400075c6:	xor    QWORD PTR [rbp+0x10],rax
   1400075ca:	call   QWORD PTR [rip+0xbd8]        # 0x1400081a8
   1400075d0:	mov    eax,eax
   1400075d2:	shl    rax,0x18
   1400075d6:	xor    QWORD PTR [rbp+0x10],rax
   1400075da:	call   QWORD PTR [rip+0xbc8]        # 0x1400081a8
   1400075e0:	mov    eax,eax
   1400075e2:	lea    rcx,[rbp+0x10]
   1400075e6:	xor    rax,QWORD PTR [rbp+0x10]
   1400075ea:	xor    rax,rcx
   1400075ed:	lea    rcx,[rbp+0x20]
   1400075f1:	mov    QWORD PTR [rbp+0x10],rax
   1400075f5:	call   QWORD PTR [rip+0xb2d]        # 0x140008128
   1400075fb:	mov    eax,DWORD PTR [rbp+0x20]
   1400075fe:	movabs rcx,0xffffffffffff
   140007608:	shl    rax,0x20
   14000760c:	xor    rax,QWORD PTR [rbp+0x20]
   140007610:	xor    rax,QWORD PTR [rbp+0x10]
   140007614:	and    rax,rcx
   140007617:	movabs rcx,0x2b992ddfa233
   140007621:	cmp    rax,rbx
   140007624:	cmove  rax,rcx
   140007628:	mov    QWORD PTR [rip+0x29d9],rax        # 0x14000a008
   14000762f:	mov    rbx,QWORD PTR [rsp+0x48]
   140007634:	not    rax
   140007637:	mov    QWORD PTR [rip+0x29d2],rax        # 0x14000a010
   14000763e:	add    rsp,0x20
   140007642:	pop    rbp
   140007643:	ret    
   140007644:	int3   
   140007645:	int3   
   140007646:	int3   
   140007647:	int3   
   140007648:	int3   
   140007649:	int3   
   14000764a:	int3   
   14000764b:	int3   
   14000764c:	int3   
   14000764d:	int3   
   14000764e:	int3   
   14000764f:	int3   
   140007650:	xor    eax,eax
   140007652:	ret    
   140007653:	int3   
   140007654:	int3   
   140007655:	int3   
   140007656:	int3   
   140007657:	int3   
   140007658:	int3   
   140007659:	int3   
   14000765a:	jmp    QWORD PTR [rip+0xc98]        # 0x1400082f8
   140007660:	int3   
   140007661:	int3   
   140007662:	int3   
   140007663:	int3   
   140007664:	int3   
   140007665:	int3   
   140007666:	jmp    QWORD PTR [rip+0xc84]        # 0x1400082f0
   14000766c:	int3   
   14000766d:	int3   
   14000766e:	int3   
   14000766f:	int3   
   140007670:	int3   
   140007671:	int3   
   140007672:	int3   
   140007673:	int3   
   140007674:	int3   
   140007675:	int3   
   140007676:	int3   
   140007677:	int3   
   140007678:	int3   
   140007679:	int3   
   14000767a:	int3   
   14000767b:	int3   
   14000767c:	int3   
   14000767d:	int3   
   14000767e:	int3   
   14000767f:	int3   
   140007680:	ret    0x0
   140007683:	int3   
   140007684:	int3   
   140007685:	int3   
   140007686:	int3   
   140007687:	int3   
   140007688:	int3   
   140007689:	int3   
   14000768a:	int3   
   14000768b:	int3   
   14000768c:	rex push rbx
   14000768e:	sub    rsp,0x20
   140007692:	mov    rbx,rcx
   140007695:	xor    ecx,ecx
   140007697:	call   QWORD PTR [rip+0xa9b]        # 0x140008138
   14000769d:	mov    rcx,rbx
   1400076a0:	call   QWORD PTR [rip+0xb0a]        # 0x1400081b0
   1400076a6:	call   QWORD PTR [rip+0xaa4]        # 0x140008150
   1400076ac:	mov    rcx,rax
   1400076af:	mov    edx,0xc0000409
   1400076b4:	add    rsp,0x20
   1400076b8:	pop    rbx
   1400076b9:	rex.W jmp QWORD PTR [rip+0xad0]        # 0x140008190
   1400076c0:	int3   
   1400076c1:	int3   
   1400076c2:	int3   
   1400076c3:	int3   
   1400076c4:	int3   
   1400076c5:	int3   
   1400076c6:	int3   
   1400076c7:	int3   
   1400076c8:	int3   
   1400076c9:	int3   
   1400076ca:	int3   
   1400076cb:	int3   
   1400076cc:	int3   
   1400076cd:	int3   
   1400076ce:	int3   
   1400076cf:	int3   
   1400076d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400076d5:	sub    rsp,0x88
   1400076dc:	lea    rcx,[rip+0x2a4d]        # 0x14000a130
   1400076e3:	call   QWORD PTR [rip+0xcaf]        # 0x140008398
   1400076e9:	mov    rax,QWORD PTR [rip+0x2b38]        # 0x14000a228
   1400076f0:	mov    QWORD PTR [rsp+0x48],rax
   1400076f5:	xor    r8d,r8d
   1400076f8:	lea    rdx,[rsp+0x50]
   1400076fd:	mov    rcx,QWORD PTR [rsp+0x48]
   140007702:	call   QWORD PTR [rip+0xc88]        # 0x140008390
   140007708:	mov    QWORD PTR [rsp+0x40],rax
   14000770d:	cmp    QWORD PTR [rsp+0x40],0x0
   140007713:	je     0x140007757
   140007715:	mov    QWORD PTR [rsp+0x38],0x0
   14000771e:	lea    rax,[rsp+0x58]
   140007723:	mov    QWORD PTR [rsp+0x30],rax
   140007728:	lea    rax,[rsp+0x60]
   14000772d:	mov    QWORD PTR [rsp+0x28],rax
   140007732:	lea    rax,[rip+0x29f7]        # 0x14000a130
   140007739:	mov    QWORD PTR [rsp+0x20],rax
   14000773e:	mov    r9,QWORD PTR [rsp+0x40]
   140007743:	mov    r8,QWORD PTR [rsp+0x48]
   140007748:	mov    rdx,QWORD PTR [rsp+0x50]
   14000774d:	xor    ecx,ecx
   14000774f:	call   QWORD PTR [rip+0xc33]        # 0x140008388
   140007755:	jmp    0x14000777a
   140007757:	mov    rax,QWORD PTR [rip+0x2a6a]        # 0x14000a1c8
   14000775e:	mov    rax,QWORD PTR [rax]
   140007761:	mov    QWORD PTR [rip+0x2ac0],rax        # 0x14000a228
   140007768:	mov    rax,QWORD PTR [rip+0x2a59]        # 0x14000a1c8
   14000776f:	add    rax,0x8
   140007773:	mov    QWORD PTR [rip+0x2a4e],rax        # 0x14000a1c8
   14000777a:	mov    rax,QWORD PTR [rip+0x2aa7]        # 0x14000a228
   140007781:	mov    QWORD PTR [rip+0x2918],rax        # 0x14000a0a0
   140007788:	mov    rax,QWORD PTR [rsp+0x90]
   140007790:	mov    QWORD PTR [rip+0x2a19],rax        # 0x14000a1b0
   140007797:	mov    DWORD PTR [rip+0x28ef],0xc0000409        # 0x14000a090
   1400077a1:	mov    DWORD PTR [rip+0x28e9],0x1        # 0x14000a094
   1400077ab:	mov    DWORD PTR [rip+0x28f3],0x3        # 0x14000a0a8
   1400077b5:	mov    eax,0x8
   1400077ba:	imul   rax,rax,0x0
   1400077be:	lea    rcx,[rip+0x28eb]        # 0x14000a0b0
   1400077c5:	mov    QWORD PTR [rcx+rax*1],0x2
   1400077cd:	mov    eax,0x8
   1400077d2:	imul   rax,rax,0x1
   1400077d6:	lea    rcx,[rip+0x28d3]        # 0x14000a0b0
   1400077dd:	mov    rdx,QWORD PTR [rip+0x2824]        # 0x14000a008
   1400077e4:	mov    QWORD PTR [rcx+rax*1],rdx
   1400077e8:	mov    eax,0x8
   1400077ed:	imul   rax,rax,0x2
   1400077f1:	lea    rcx,[rip+0x28b8]        # 0x14000a0b0
   1400077f8:	mov    rdx,QWORD PTR [rip+0x2811]        # 0x14000a010
   1400077ff:	mov    QWORD PTR [rcx+rax*1],rdx
   140007803:	mov    eax,0x8
   140007808:	imul   rax,rax,0x0
   14000780c:	mov    rcx,QWORD PTR [rip+0x27f5]        # 0x14000a008
   140007813:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140007818:	mov    eax,0x8
   14000781d:	imul   rax,rax,0x1
   140007821:	mov    rcx,QWORD PTR [rip+0x27e8]        # 0x14000a010
   140007828:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000782d:	lea    rcx,[rip+0xbec]        # 0x140008420
   140007834:	call   0x14000768c
   140007839:	add    rsp,0x88
   140007840:	ret    
   140007841:	int3   
   140007842:	int3   
   140007843:	int3   
   140007844:	int3   
   140007845:	int3   
   140007846:	int3   
   140007847:	int3   
   140007848:	int3   
   140007849:	int3   
   14000784a:	int3   
   14000784b:	int3   
   14000784c:	int3   
   14000784d:	int3   
   14000784e:	int3   
   14000784f:	int3   
   140007850:	int3   
   140007851:	int3   
   140007852:	int3   
   140007853:	int3   
   140007854:	int3   
   140007855:	int3   
   140007856:	int3   
   140007857:	int3   
   140007858:	rex push rbx
   14000785a:	sub    rsp,0x20
   14000785e:	mov    ebx,ecx
   140007860:	call   0x14000787c
   140007865:	lea    rdx,[rbx+rbx*2]
   140007869:	shl    rdx,0x4
   14000786d:	add    rax,rdx
   140007870:	add    rsp,0x20
   140007874:	pop    rbx
   140007875:	ret    
   140007876:	int3   
   140007877:	int3   
   140007878:	int3   
   140007879:	int3   
   14000787a:	int3   
   14000787b:	int3   
   14000787c:	jmp    QWORD PTR [rip+0xabe]        # 0x140008340
   140007882:	int3   
   140007883:	int3   
   140007884:	int3   
   140007885:	int3   
   140007886:	int3   
   140007887:	int3   
   140007888:	sub    rsp,0x28
   14000788c:	mov    r8,QWORD PTR [r9+0x38]
   140007890:	mov    rcx,rdx
   140007893:	mov    rdx,r9
   140007896:	call   0x1400078ac
   14000789b:	mov    eax,0x1
   1400078a0:	add    rsp,0x28
   1400078a4:	ret    
   1400078a5:	int3   
   1400078a6:	int3   
   1400078a7:	int3   
   1400078a8:	int3   
   1400078a9:	int3   
   1400078aa:	int3   
   1400078ab:	int3   
   1400078ac:	rex push rbx
   1400078ae:	sub    rsp,0x20
   1400078b2:	mov    r11d,DWORD PTR [r8]
   1400078b5:	mov    rbx,rdx
   1400078b8:	and    r11d,0xfffffff8
   1400078bc:	mov    r9,rcx
   1400078bf:	test   BYTE PTR [r8],0x4
   1400078c3:	mov    r10,rcx
   1400078c6:	je     0x1400078db
   1400078c8:	mov    eax,DWORD PTR [r8+0x8]
   1400078cc:	movsxd r10,DWORD PTR [r8+0x4]
   1400078d0:	neg    eax
   1400078d2:	add    r10,rcx
   1400078d5:	movsxd rcx,eax
   1400078d8:	and    r10,rcx
   1400078db:	movsxd rax,r11d
   1400078de:	mov    rdx,QWORD PTR [rax+r10*1]
   1400078e2:	mov    rax,QWORD PTR [rbx+0x10]
   1400078e6:	mov    ecx,DWORD PTR [rax+0x8]
   1400078e9:	add    rcx,QWORD PTR [rbx+0x8]
   1400078ed:	test   BYTE PTR [rcx+0x3],0xf
   1400078f1:	je     0x1400078ff
   1400078f3:	movzx  eax,BYTE PTR [rcx+0x3]
   1400078f7:	and    eax,0xfffffff0
   1400078fa:	cdqe   
   1400078fc:	add    r9,rax
   1400078ff:	xor    r9,rdx
   140007902:	mov    rcx,r9
   140007905:	add    rsp,0x20
   140007909:	pop    rbx
   14000790a:	jmp    0x140007340
   14000790f:	int3   
   140007910:	int3   
   140007911:	int3   
   140007912:	int3   
   140007913:	int3   
   140007914:	int3   
   140007915:	int3   
   140007916:	jmp    QWORD PTR [rip+0x9cc]        # 0x1400082e8
   14000791c:	int3   
   14000791d:	int3   
   14000791e:	int3   
   14000791f:	int3   
   140007920:	int3   
   140007921:	int3   
   140007922:	int3   
   140007923:	int3   
   140007924:	int3   
   140007925:	int3   
   140007926:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007930:	jmp    rax
   140007932:	int3   
   140007933:	int3   
   140007934:	int3   
   140007935:	int3   
   140007936:	int3   
   140007937:	int3   
   140007938:	int3   
   140007939:	int3   
   14000793a:	int3   
   14000793b:	int3   
   14000793c:	int3   
   14000793d:	int3   
   14000793e:	int3   
   14000793f:	int3   
   140007940:	int3   
   140007941:	int3   
   140007942:	int3   
   140007943:	int3   
   140007944:	int3   
   140007945:	int3   
   140007946:	rex push rbp
   140007948:	sub    rsp,0x20
   14000794c:	mov    rbp,rdx
   14000794f:	mov    rax,QWORD PTR [rcx]
   140007952:	mov    rdx,rcx
   140007955:	mov    ecx,DWORD PTR [rax]
   140007957:	call   0x1400073ce
   14000795c:	nop
   14000795d:	add    rsp,0x20
   140007961:	pop    rbp
   140007962:	ret    
   140007963:	int3   
   140007964:	int3   
   140007965:	int3   
   140007966:	int3   
   140007967:	int3   
   140007968:	int3   
   140007969:	int3   
   14000796a:	int3   
   14000796b:	int3   
   14000796c:	int3   
   14000796d:	int3   
   14000796e:	int3   
   14000796f:	int3   
   140007970:	rex push rbp
   140007972:	sub    rsp,0x20
   140007976:	mov    rbp,rdx
   140007979:	mov    rax,QWORD PTR [rcx]
   14000797c:	xor    ecx,ecx
   14000797e:	cmp    DWORD PTR [rax],0xc0000005
   140007984:	sete   cl
   140007987:	mov    eax,ecx
   140007989:	add    rsp,0x20
   14000798d:	pop    rbp
   14000798e:	ret    
   14000798f:	int3   

Disassembly of section .rdata:

0000000140008000 <.rdata>:
   140008000:	jo     0x140007f96
   140008002:	add    BYTE PTR [rax],al
   140008004:	add    BYTE PTR [rax],al
   140008006:	add    BYTE PTR [rax],al
   140008008:	mov    BYTE PTR [rax+rax*1+0x0],dl
   14000800f:	add    BYTE PTR [rsp+rdx*4+0x0],bl
   140008016:	add    BYTE PTR [rax],al
   140008018:	lods   al,BYTE PTR ds:[rsi]
   140008019:	xchg   esp,eax
   14000801a:	add    BYTE PTR [rax],al
   14000801c:	add    BYTE PTR [rax],al
   14000801e:	add    BYTE PTR [rax],al
   140008020:	ret    0x94
   140008023:	add    BYTE PTR [rax],al
   140008025:	add    BYTE PTR [rax],al
   140008027:	add    ah,dl
   140008029:	xchg   esp,eax
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	add    BYTE PTR [rax],al
   14000802e:	add    BYTE PTR [rax],al
   140008030:	call   0x1400080c9
   140008035:	add    BYTE PTR [rax],al
   140008037:	add    BYTE PTR [rax],al
   140008039:	xchg   ebp,eax
   14000803a:	add    BYTE PTR [rax],al
   14000803c:	add    BYTE PTR [rax],al
   14000803e:	add    BYTE PTR [rax],al
   140008040:	(bad)  
   140008041:	xchg   ebp,eax
   140008042:	add    BYTE PTR [rax],al
   140008044:	add    BYTE PTR [rax],al
   140008046:	add    BYTE PTR [rax],al
   140008048:	es xchg ebp,eax
   14000804a:	add    BYTE PTR [rax],al
   14000804c:	add    BYTE PTR [rax],al
   14000804e:	add    BYTE PTR [rax],al
   140008050:	ss xchg ebp,eax
   140008052:	add    BYTE PTR [rax],al
   140008054:	add    BYTE PTR [rax],al
   140008056:	add    BYTE PTR [rax],al
   140008058:	rex.RX xchg ebp,eax
   14000805a:	add    BYTE PTR [rax],al
   14000805c:	add    BYTE PTR [rax],al
   14000805e:	add    BYTE PTR [rax],al
   140008060:	push   rsp
   140008061:	xchg   ebp,eax
   140008062:	add    BYTE PTR [rax],al
   140008064:	add    BYTE PTR [rax],al
   140008066:	add    BYTE PTR [rax],al
   140008068:	xchg   bp,ax
	...
   140008076:	add    BYTE PTR [rax],al
   140008078:	mov    eax,0x95
   14000807d:	add    BYTE PTR [rax],al
   14000807f:	add    BYTE PTR [rbx+rbx*4],dh
   140008082:	add    BYTE PTR [rax],al
   140008084:	add    BYTE PTR [rax],al
   140008086:	add    BYTE PTR [rax],al
   140008088:	(bad)  
   140008089:	fwait
   14000808a:	add    BYTE PTR [rax],al
   14000808c:	add    BYTE PTR [rax],al
   14000808e:	add    BYTE PTR [rax],al
   140008090:	adc    bl,BYTE PTR [rbx+0x0]
   140008096:	add    BYTE PTR [rax],al
   140008098:	test   al,0x95
   14000809a:	add    BYTE PTR [rax],al
   14000809c:	add    BYTE PTR [rax],al
   14000809e:	add    BYTE PTR [rax],al
   1400080a0:	clc    
   1400080a1:	(bad)  
   1400080a2:	add    BYTE PTR [rax],al
   1400080a4:	add    BYTE PTR [rax],al
   1400080a6:	add    BYTE PTR [rax],al
   1400080a8:	call   0x140008147
   1400080ad:	add    BYTE PTR [rax],al
   1400080af:	add    ah,bl
   1400080b1:	(bad)  
   1400080b2:	add    BYTE PTR [rax],al
   1400080b4:	add    BYTE PTR [rax],al
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	retf   0x9a
   1400080bb:	add    BYTE PTR [rax],al
   1400080bd:	add    BYTE PTR [rax],al
   1400080bf:	add    BYTE PTR [rdx+0x9a],bh
   1400080c5:	add    BYTE PTR [rax],al
   1400080c7:	add    BYTE PTR [rsi+0x9a],ch
   1400080cd:	add    BYTE PTR [rax],al
   1400080cf:	add    BYTE PTR [rdx+rbx*4+0x0],bl
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	xchg   BYTE PTR [rdx+0x0],bl
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	jo     0x14000807c
   1400080e2:	add    BYTE PTR [rax],al
   1400080e4:	add    BYTE PTR [rax],al
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	(bad)  
   1400080e9:	(bad)  
   1400080ea:	add    BYTE PTR [rax],al
   1400080ec:	add    BYTE PTR [rax],al
   1400080ee:	add    BYTE PTR [rax],al
   1400080f0:	push   rdx
   1400080f1:	(bad)  
   1400080f2:	add    BYTE PTR [rax],al
   1400080f4:	add    BYTE PTR [rax],al
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	rex (bad) 
   1400080fa:	add    BYTE PTR [rax],al
   1400080fc:	add    BYTE PTR [rax],al
   1400080fe:	add    BYTE PTR [rax],al
   140008100:	cs (bad) 
   140008102:	add    BYTE PTR [rax],al
   140008104:	add    BYTE PTR [rax],al
   140008106:	add    BYTE PTR [rax],al
   140008108:	sbb    al,0x9a
   14000810a:	add    BYTE PTR [rax],al
   14000810c:	add    BYTE PTR [rax],al
   14000810e:	add    BYTE PTR [rax],al
   140008110:	adc    BYTE PTR [rdx+0x0],bl
   140008116:	add    BYTE PTR [rax],al
   140008118:	add    al,0x9a
   14000811a:	add    BYTE PTR [rax],al
   14000811c:	add    BYTE PTR [rax],al
   14000811e:	add    BYTE PTR [rax],al
   140008120:	hlt    
   140008121:	cdq    
   140008122:	add    BYTE PTR [rax],al
   140008124:	add    BYTE PTR [rax],al
   140008126:	add    BYTE PTR [rax],al
   140008128:	(bad)  
   140008129:	cwde   
   14000812a:	add    BYTE PTR [rax],al
   14000812c:	add    BYTE PTR [rax],al
   14000812e:	add    BYTE PTR [rax],al
   140008130:	(bad)  
   140008131:	cwde   
   140008132:	add    BYTE PTR [rax],al
   140008134:	add    BYTE PTR [rax],al
   140008136:	add    BYTE PTR [rax],al
   140008138:	mov    eax,0x98
   14000813d:	add    BYTE PTR [rax],al
   14000813f:	add    BYTE PTR [rax+0x98],dh
   140008145:	add    BYTE PTR [rax],al
   140008147:	add    BYTE PTR [rax+0x95],bl
   14000814d:	add    BYTE PTR [rax],al
   14000814f:	add    BYTE PTR [rbp+rdx*4+0x0],al
   140008156:	add    BYTE PTR [rax],al
   140008158:	add    al,0x9b
   14000815a:	add    BYTE PTR [rax],al
   14000815c:	add    BYTE PTR [rax],al
   14000815e:	add    BYTE PTR [rax],al
   140008160:	loop   0x1400080fb
   140008162:	add    BYTE PTR [rax],al
   140008164:	add    BYTE PTR [rax],al
   140008166:	add    BYTE PTR [rax],al
   140008168:	(bad)  
   140008169:	cdq    
   14000816a:	add    BYTE PTR [rax],al
   14000816c:	add    BYTE PTR [rax],al
   14000816e:	add    BYTE PTR [rax],al
   140008170:	mov    esi,0x99
   140008175:	add    BYTE PTR [rax],al
   140008177:	add    BYTE PTR [rdx+0x99],dh
   14000817d:	add    BYTE PTR [rax],al
   14000817f:	add    BYTE PTR [rax+0x99],ah
   140008185:	add    BYTE PTR [rax],al
   140008187:	add    BYTE PTR [rdx+0x99],cl
   14000818d:	add    BYTE PTR [rax],al
   14000818f:	add    BYTE PTR [rsi-0x67],dh
   140008192:	add    BYTE PTR [rax],al
   140008194:	add    BYTE PTR [rax],al
   140008196:	add    BYTE PTR [rax],al
   140008198:	sbb    bl,BYTE PTR [rcx+0x0]
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	xor    BYTE PTR [rcx+0x0],bl
   1400081a6:	add    BYTE PTR [rax],al
   1400081a8:	rex.WX cqo 
   1400081aa:	add    BYTE PTR [rax],al
   1400081ac:	add    BYTE PTR [rax],al
   1400081ae:	add    BYTE PTR [rax],al
   1400081b0:	pop    rdx
   1400081b1:	cdq    
   1400081b2:	add    BYTE PTR [rax],al
   1400081b4:	add    BYTE PTR [rax],al
   1400081b6:	add    BYTE PTR [rax],al
   1400081b8:	add    al,0x99
	...
   1400081c6:	add    BYTE PTR [rax],al
   1400081c8:	push   rdx
   1400081c9:	xchg   edi,eax
   1400081ca:	add    BYTE PTR [rax],al
   1400081cc:	add    BYTE PTR [rax],al
   1400081ce:	add    BYTE PTR [rax],al
   1400081d0:	push   0x97
   1400081d5:	add    BYTE PTR [rax],al
   1400081d7:	add    BYTE PTR [rsi],bh
   1400081d9:	xchg   edi,eax
	...
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	(bad)  
   1400081e9:	xchg   edi,eax
   1400081ea:	add    BYTE PTR [rax],al
   1400081ec:	add    BYTE PTR [rax],al
   1400081ee:	add    BYTE PTR [rax],al
   1400081f0:	rcl    BYTE PTR [rdi+0x0],cl
   1400081f6:	add    BYTE PTR [rax],al
   1400081f8:	call   0x140008294
   1400081fd:	add    BYTE PTR [rax],al
   1400081ff:	add    ah,bl
   140008201:	xchg   edi,eax
	...
   14000820e:	add    BYTE PTR [rax],al
   140008210:	push   rax
   140008211:	cwde   
	...
   14000821e:	add    BYTE PTR [rax],al
   140008220:	and    al,0x97
   140008222:	add    BYTE PTR [rax],al
   140008224:	add    BYTE PTR [rax],al
   140008226:	add    BYTE PTR [rax],al
   140008228:	(bad)  
   140008229:	xchg   edi,eax
	...
   140008236:	add    BYTE PTR [rax],al
   140008238:	sbb    bl,BYTE PTR [rax+0x0]
   14000823e:	add    BYTE PTR [rax],al
   140008240:	(bad)  
   140008241:	xchg   edi,eax
   140008242:	add    BYTE PTR [rax],al
   140008244:	add    BYTE PTR [rax],al
   140008246:	add    BYTE PTR [rax],al
   140008248:	xor    bl,BYTE PTR [rax+0x0]
	...
   140008256:	add    BYTE PTR [rax],al
   140008258:	stos   BYTE PTR es:[rdi],al
   140008259:	xchg   edi,eax
   14000825a:	add    BYTE PTR [rax],al
   14000825c:	add    BYTE PTR [rax],al
   14000825e:	add    BYTE PTR [rax],al
   140008260:	jae    0x140008262
   140008262:	add    BYTE PTR [rax],al
   140008264:	add    BYTE PTR [rax],al
   140008266:	add    BYTE PTR [rax+0x6f],al
   14000826c:	add    BYTE PTR [rax],al
   14000826e:	add    BYTE PTR [rax+0x978a],al
   140008274:	add    BYTE PTR [rax],al
   140008276:	add    BYTE PTR [rax],al
   140008278:	je     0x14000827a
   14000827a:	add    BYTE PTR [rax],al
   14000827c:	add    BYTE PTR [rax],al
   14000827e:	add    BYTE PTR [rax+0x979a],al
	...
   140008290:	retf   0x9b
   140008293:	add    BYTE PTR [rax],al
   140008295:	add    BYTE PTR [rax],al
   140008297:	add    BYTE PTR [rsi-0x6a],ah
   14000829a:	add    BYTE PTR [rax],al
   14000829c:	add    BYTE PTR [rax],al
   14000829e:	add    BYTE PTR [rax],al
   1400082a0:	rcr    BYTE PTR [rbx+0x0],0x0
   1400082a7:	add    BYTE PTR [rsi+0x9b],dh
   1400082ad:	add    BYTE PTR [rax],al
   1400082af:	add    BYTE PTR [rbx+rbx*4+0x0],ah
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	(bad)  
   1400082b9:	fwait
   1400082ba:	add    BYTE PTR [rax],al
   1400082bc:	add    BYTE PTR [rax],al
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	nop
   1400082c1:	fwait
   1400082c2:	add    BYTE PTR [rax],al
   1400082c4:	add    BYTE PTR [rax],al
   1400082c6:	add    BYTE PTR [rax],al
   1400082c8:	xchg   BYTE PTR [rbx+0x0],bl
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	jl     0x14000826d
   1400082d2:	add    BYTE PTR [rax],al
   1400082d4:	add    BYTE PTR [rax],al
   1400082d6:	add    BYTE PTR [rax],al
   1400082d8:	jl     0x140008270
   1400082da:	add    BYTE PTR [rax],al
   1400082dc:	add    BYTE PTR [rax],al
   1400082de:	add    BYTE PTR [rax],al
   1400082e0:	jo     0x140008278
   1400082e2:	add    BYTE PTR [rax],al
   1400082e4:	add    BYTE PTR [rax],al
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	(bad)  
   1400082e9:	fwait
   1400082ea:	add    BYTE PTR [rax],al
   1400082ec:	add    BYTE PTR [rax],al
   1400082ee:	add    BYTE PTR [rax],al
   1400082f0:	rex.WRX xchg rsi,rax
   1400082f2:	add    BYTE PTR [rax],al
   1400082f4:	add    BYTE PTR [rax],al
   1400082f6:	add    BYTE PTR [rax],al
   1400082f8:	rex.X xchg esi,eax
   1400082fa:	add    BYTE PTR [rax],al
   1400082fc:	add    BYTE PTR [rax],al
   1400082fe:	add    BYTE PTR [rax],al
   140008300:	cs xchg esi,eax
   140008302:	add    BYTE PTR [rax],al
   140008304:	add    BYTE PTR [rax],al
   140008306:	add    BYTE PTR [rax],al
   140008308:	and    al,0x96
   14000830a:	add    BYTE PTR [rax],al
   14000830c:	add    BYTE PTR [rax],al
   14000830e:	add    BYTE PTR [rax],al
   140008310:	sbb    al,0x96
   140008312:	add    BYTE PTR [rax],al
   140008314:	add    BYTE PTR [rax],al
   140008316:	add    BYTE PTR [rax],al
   140008318:	adc    al,0x96
   14000831a:	add    BYTE PTR [rax],al
   14000831c:	add    BYTE PTR [rax],al
   14000831e:	add    BYTE PTR [rax],al
   140008320:	add    dl,BYTE PTR [rsi+0x0]
   140008326:	add    BYTE PTR [rax],al
   140008328:	lock xchg ebp,eax
   14000832a:	add    BYTE PTR [rax],al
   14000832c:	add    BYTE PTR [rax],al
   14000832e:	add    BYTE PTR [rax],al
   140008330:	loop   0x1400082c7
   140008332:	add    BYTE PTR [rax],al
   140008334:	add    BYTE PTR [rax],al
   140008336:	add    BYTE PTR [rax],al
   140008338:	(bad)  
   140008339:	xchg   ebp,eax
   14000833a:	add    BYTE PTR [rax],al
   14000833c:	add    BYTE PTR [rax],al
   14000833e:	add    BYTE PTR [rax],al
   140008340:	rex.WX
   140008341:	fwait
   140008342:	add    BYTE PTR [rax],al
   140008344:	add    BYTE PTR [rax],al
   140008346:	add    BYTE PTR [rax],al
   140008348:	pop    rax
   140008349:	fwait
   14000834a:	add    BYTE PTR [rax],al
   14000834c:	add    BYTE PTR [rax],al
   14000834e:	add    BYTE PTR [rax],al
   140008350:	fs fwait
   140008352:	add    BYTE PTR [rax],al
   140008354:	add    BYTE PTR [rax],al
   140008356:	add    BYTE PTR [rax],al
   140008358:	jb     0x1400082f5
	...
   140008366:	add    BYTE PTR [rax],al
   140008368:	outs   dx,BYTE PTR ds:[rsi]
   140008369:	cwde   
	...
   140008376:	add    BYTE PTR [rax],al
   140008378:	ficom  WORD PTR [rsi+0x0]
   14000837e:	add    BYTE PTR [rax],al
   140008380:	hlt    
   140008381:	xchg   esi,eax
   140008382:	add    BYTE PTR [rax],al
   140008384:	add    BYTE PTR [rax],al
   140008386:	add    BYTE PTR [rax],al
   140008388:	retf   0x96
   14000838b:	add    BYTE PTR [rax],al
   14000838d:	add    BYTE PTR [rax],al
   14000838f:	add    BYTE PTR [rax+0x96],dh
   140008395:	add    BYTE PTR [rax],al
   140008397:	add    BYTE PTR [rsi+rdx*4+0x0],bl
	...
   1400083a6:	add    BYTE PTR [rax],al
   1400083a8:	nop
   1400083a9:	cwde   
	...
   1400083b6:	add    BYTE PTR [rax],al
   1400083b8:	xor    BYTE PTR [rsi+0x0],0x40
   1400083bc:	add    DWORD PTR [rax],eax
   1400083be:	add    BYTE PTR [rax],al
   1400083c0:	xor    BYTE PTR [rcx+0x0],bh
   1400083c3:	rex add DWORD PTR [rax],eax
	...
   1400083ce:	add    BYTE PTR [rax],al
   1400083d0:	loopne 0x140008442
   1400083d2:	add    BYTE PTR [rax+0x1],al
	...
   1400083e9:	jo     0x1400083eb
   1400083eb:	rex add DWORD PTR [rax],eax
   1400083ee:	add    BYTE PTR [rax],al
   1400083f0:	mov    al,0x73
   1400083f2:	add    BYTE PTR [rax+0x1],al
	...
   140008401:	jo     0x140008403
   140008403:	add    al,ah
   140008405:	jo     0x140008407
   140008407:	add    BYTE PTR [rax],dl
   140008409:	jae    0x14000840b
   14000840b:	add    BYTE PTR [rax+0x73],dh
   14000840e:	add    BYTE PTR [rax],al
   140008410:	mov    al,0x73
   140008412:	add    BYTE PTR [rax],al
   140008414:	push   rax
   140008415:	jbe    0x140008417
   140008417:	add    BYTE PTR [rax-0x2fffff8a],al
   14000841d:	jbe    0x14000841f
   14000841f:	add    BYTE PTR [rax+0x14000a0],dl
   140008425:	add    BYTE PTR [rax],al
   140008427:	add    BYTE PTR [rax],dh
   140008429:	movabs eax,ds:0xa000000014000
   140008432:	add    BYTE PTR [rax],al
   140008434:	add    BYTE PTR [rax],al
   140008436:	add    BYTE PTR [rax],al
   140008438:	pop    rsp
   140008439:	add    BYTE PTR [rax+rax*1+0x25],bl
   14000843d:	add    BYTE PTR [rbx+0x0],dh
	...
   140008450:	push   rbx
   140008451:	add    BYTE PTR [rcx+0x0],bl
   140008454:	push   rbx
   140008455:	add    BYTE PTR [rax+rax*1+0x45],dl
   140008459:	add    BYTE PTR [rbp+0x0],cl
   14000845c:	pop    rsp
   14000845d:	add    BYTE PTR [rbx+0x0],al
   140008460:	jne    0x140008462
   140008462:	jb     0x140008464
   140008464:	jb     0x140008466
   140008466:	add    BYTE PTR gs:[rsi+0x0],ch
   14000846a:	je     0x14000846c
   14000846c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140008470:	outs   dx,BYTE PTR ds:[rsi]
   140008471:	add    BYTE PTR [rax+rax*1+0x72],dh
   140008475:	add    BYTE PTR [rdi+0x0],ch
   140008478:	ins    BYTE PTR es:[rdi],dx
   140008479:	add    BYTE PTR [rbx+0x0],dl
   14000847c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   140008481:	add    BYTE PTR [rbx+0x0],dl
   140008484:	add    BYTE PTR gs:[rdx+0x0],dh
   140008488:	jbe    0x14000848a
   14000848a:	imul   eax,DWORD PTR [rax],0x650063
   140008490:	jae    0x140008492
   140008492:	pop    rsp
   140008493:	add    BYTE PTR [rbp+0x0],al
   140008496:	jbe    0x140008498
   140008498:	add    BYTE PTR gs:[rsi+0x0],ch
   14000849c:	je     0x14000849e
   14000849e:	rex.WR add BYTE PTR [rdi+0x0],r13b
   1400084a2:	add    BYTE PTR [eax],al
   1400084a5:	add    BYTE PTR [rax],al
   1400084a7:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c00f7ad
   1400084ad:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c00f7b3
   1400084b3:	add    BYTE PTR [rip+0x7300],ah        # 0x14000f7b9
   1400084b9:	add    BYTE PTR [rax],al
   1400084bb:	add    BYTE PTR [rax],al
   1400084bd:	add    BYTE PTR [rax],al
   1400084bf:	add    BYTE PTR [rbx+0x0],al
   1400084c2:	jne    0x1400084c4
   1400084c4:	jae    0x1400084c6
   1400084c6:	je     0x1400084c8
   1400084c8:	outs   dx,DWORD PTR ds:[rsi]
   1400084c9:	add    BYTE PTR [rbp+0x0],ch
   1400084cc:	push   rbx
   1400084cd:	add    BYTE PTR [rdi+0x0],ch
   1400084d0:	jne    0x1400084d2
   1400084d2:	jb     0x1400084d4
   1400084d4:	movsxd eax,DWORD PTR [rax]
   1400084d6:	add    BYTE PTR gs:[rax],al
   1400084d9:	add    BYTE PTR [rax],al
   1400084db:	add    BYTE PTR [rax],al
   1400084dd:	add    BYTE PTR [rax],al
   1400084df:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c00f7e5
   1400084e5:	add    BYTE PTR [rip+0x7300],ah        # 0x14000f7eb
   1400084eb:	add    BYTE PTR [rax],al
   1400084ed:	add    BYTE PTR [rax],al
   1400084ef:	add    BYTE PTR [rip+0x79005300],ah        # 0x1b900d7f5
   1400084f5:	add    BYTE PTR [rbx+0x0],dh
   1400084f8:	je     0x1400084fa
   1400084fa:	add    BYTE PTR gs:[rbp+0x0],ch
   1400084fe:	push   rdx
   1400084ff:	add    BYTE PTR [rdi+0x0],ch
   140008502:	outs   dx,DWORD PTR ds:[rsi]
   140008503:	add    BYTE PTR [rax+rax*1+0x25],dh
   140008507:	add    BYTE PTR [rax+rax*1+0x53],bl
   14000850b:	add    BYTE PTR [rcx+0x0],bh
   14000850e:	jae    0x140008510
   140008510:	je     0x140008512
   140008512:	add    BYTE PTR gs:[rbp+0x0],ch
   140008516:	xor    eax,DWORD PTR [rax]
   140008518:	xor    al,BYTE PTR [rax]
   14000851a:	pop    rsp
   14000851b:	add    BYTE PTR [rbp+0x0],al
   14000851e:	jbe    0x140008520
   140008520:	add    BYTE PTR gs:[rsi+0x0],ch
   140008524:	je     0x140008526
   140008526:	rex.XB add BYTE PTR [r10+0x0],sil
   14000852a:	add    BYTE PTR gs:[rcx+0x0],ah
   14000852e:	je     0x140008530
   140008530:	add    BYTE PTR gs:[rsi],ch
   140008533:	add    BYTE PTR [rbp+0x0],ah
   140008536:	js     0x140008538
   140008538:	add    BYTE PTR gs:[rax],al
   14000853b:	add    BYTE PTR [rax],al
   14000853d:	add    BYTE PTR [rax],al
   14000853f:	add    BYTE PTR [rbp+0x0],al
   140008542:	jbe    0x140008544
   140008544:	add    BYTE PTR gs:[rsi+0x0],ch
   140008548:	je     0x14000854a
   14000854a:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14000854e:	jae    0x140008550
   140008550:	jae    0x140008552
   140008552:	(bad)  
   140008553:	add    BYTE PTR [rdi+0x0],ah
   140008556:	add    BYTE PTR gs:[rsi+0x0],al
   14000855a:	imul   eax,DWORD PTR [rax],0x65006c
	...
   140008568:	push   rsp
   140008569:	add    BYTE PTR [rcx+0x0],bh
   14000856c:	jo     0x14000856e
   14000856e:	add    BYTE PTR gs:[rbx+0x0],dh
   140008572:	push   rbx
   140008573:	add    BYTE PTR [rbp+0x0],dh
   140008576:	jo     0x140008578
   140008578:	jo     0x14000857a
   14000857a:	outs   dx,DWORD PTR ds:[rsi]
   14000857b:	add    BYTE PTR [rdx+0x0],dh
   14000857e:	je     0x140008580
   140008580:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
	...
   14000858d:	add    BYTE PTR [rax],al
   14000858f:	add    BYTE PTR [rax+rax*1+0x65],bh
   140008593:	add    BYTE PTR [rdx+0x0],dh
   140008596:	jb     0x140008598
   140008598:	outs   dx,DWORD PTR ds:[rsi]
   140008599:	add    BYTE PTR [rdx+0x0],dh
   14000859c:	jl     0x14000859e
   14000859e:	imul   eax,DWORD PTR [rax],0x66006e
   1400085a4:	outs   dx,DWORD PTR ds:[rsi]
   1400085a5:	add    BYTE PTR [rdx+0x0],dh
   1400085a8:	ins    DWORD PTR es:[rdi],dx
   1400085a9:	add    BYTE PTR [rcx+0x0],ah
   1400085ac:	je     0x1400085ae
   1400085ae:	imul   eax,DWORD PTR [rax],0x6e006f
   1400085b4:	jl     0x1400085b6
   1400085b6:	ja     0x1400085b8
   1400085b8:	(bad)  
   1400085b9:	add    BYTE PTR [rdx+0x0],dh
   1400085bc:	outs   dx,BYTE PTR ds:[rsi]
   1400085bd:	add    BYTE PTR [rcx+0x0],ch
   1400085c0:	outs   dx,BYTE PTR ds:[rsi]
   1400085c1:	add    BYTE PTR [rdi+0x0],ah
   1400085c4:	jl     0x1400085c6
   1400085c6:	jae    0x1400085c8
   1400085c8:	jne    0x1400085ca
   1400085ca:	movsxd eax,DWORD PTR [rax]
   1400085cc:	movsxd eax,DWORD PTR [rax]
   1400085ce:	add    BYTE PTR gs:[rbx+0x0],dh
   1400085d2:	jae    0x1400085d4
   1400085d4:	add    BYTE PTR [rax],al
   1400085d6:	add    BYTE PTR [rax],al
   1400085d8:	push   rax
   1400085d9:	push   r10
   1400085db:	push   rbx
   1400085dc:	rex.RB push r10
   1400085de:	xor    al,BYTE PTR [rax]
   1400085e0:	(bad)  
   1400085e1:	add    BYTE PTR [rax],al
   1400085e3:	add    BYTE PTR [rbx+0x0],dh
   1400085e6:	add    BYTE PTR [rax],al
   1400085e8:	jne    0x1400085ea
   1400085ea:	add    BYTE PTR [rax],al
   1400085ec:	jo     0x1400085ee
   1400085ee:	add    BYTE PTR [rax],al
   1400085f0:	ins    BYTE PTR es:[rdi],dx
   1400085f1:	add    BYTE PTR [rax],al
   1400085f3:	add    BYTE PTR [rax+rax*1+0x0],dh
   1400085f7:	add    BYTE PTR [rbx+0x0],dh
   1400085fa:	outs   dx,DWORD PTR ds:[rsi]
   1400085fb:	add    BYTE PTR [rax],al
   1400085fd:	add    BYTE PTR [rax],al
   1400085ff:	add    BYTE PTR [rcx+0x0],ch
   140008602:	add    BYTE PTR fs:[rax],al
   140008605:	add    BYTE PTR [rax],al
   140008607:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000860b:	add    BYTE PTR [rdx],ch
   14000860d:	add    BYTE PTR [rax],al
   14000860f:	add    BYTE PTR [rbx+0x0],dh
   140008612:	add    BYTE PTR gs:[rbx+0x0],ah
   140008616:	jne    0x140008618
   140008618:	jb     0x14000861a
   14000861a:	imul   eax,DWORD PTR [rax],0x790074
	...
   140008628:	add    BYTE PTR [r10+0x0],r10b
   14000862c:	push   rdx
   14000862d:	add    BYTE PTR [rdi+0x0],cl
   140008630:	push   rdx
   140008631:	add    BYTE PTR [rax],al
   140008633:	add    BYTE PTR [rax],al
   140008635:	add    BYTE PTR [rax],al
   140008637:	add    BYTE PTR [rbx+0x0],dl
   14000863a:	push   rbp
   14000863b:	add    BYTE PTR [rbx+0x0],al
   14000863e:	rex.XB add BYTE PTR [r13+0x0],al
   140008642:	push   rbx
   140008643:	add    BYTE PTR [rbx+0x0],dl
   140008646:	add    BYTE PTR [rax],al
   140008648:	push   rdi
   140008649:	add    BYTE PTR [rcx+0x0],al
   14000864c:	push   rdx
   14000864d:	add    BYTE PTR [rsi+0x0],cl
   140008650:	rex.WB add BYTE PTR [r14+0x0],cl
   140008654:	rex.RXB add BYTE PTR [r8],r8b
   140008657:	add    BYTE PTR [rcx+0x0],cl
   14000865a:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000865e:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140008662:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140008666:	push   rsp
   140008667:	add    BYTE PTR [rcx+0x0],cl
   14000866a:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000866e:	add    BYTE PTR [rax],al
   140008670:	and    eax,0x20007300
   140008675:	add    BYTE PTR [rax],al
   140008677:	add    BYTE PTR [rax+rax*1+0x25],bh
   14000867b:	add    BYTE PTR [rbx+0x0],dh
   14000867e:	jl     0x140008680
   140008680:	add    BYTE PTR [rax],al
   140008682:	add    BYTE PTR [rax],al
   140008684:	and    BYTE PTR [rax],al
   140008686:	or     DWORD PTR [rax],eax
   140008688:	add    BYTE PTR [rax],al
   14000868a:	add    BYTE PTR [rax],al
   14000868c:	and    eax,0x25000073
   140008691:	add    BYTE PTR [rbx+0x0],ah
   140008694:	add    BYTE PTR [rax],al
   140008696:	add    BYTE PTR [rax],al
   140008698:	(bad)  
   140008699:	add    BYTE PTR [rax],al
   14000869b:	add    BYTE PTR [rdx],cl
   14000869d:	add    BYTE PTR [rdx],cl
   14000869f:	add    BYTE PTR [rax],al
   1400086a1:	add    BYTE PTR [rax],al
   1400086a3:	add    BYTE PTR [rdx+0x55],al
   1400086a6:	rex.RX
   1400086a7:	rex.RX
   1400086a8:	rex.RB push r10
   1400086aa:	add    BYTE PTR [rax],al
   1400086ac:	add    BYTE PTR [rax],al
   1400086ae:	add    BYTE PTR [rax],al
   1400086b0:	pop    rsp
   1400086b1:	add    BYTE PTR [rax+rax*1+0x0],bl
   1400086b5:	add    BYTE PTR [rax],al
   1400086b7:	add    BYTE PTR [rax+rax*1+0x6f],ch
   1400086bb:	add    BYTE PTR [rbx+0x0],ah
   1400086be:	(bad)  
   1400086bf:	add    BYTE PTR [rax+rax*1+0x68],ch
   1400086c3:	add    BYTE PTR [rdi+0x0],ch
   1400086c6:	jae    0x1400086c8
   1400086c8:	je     0x1400086ca
   1400086ca:	add    BYTE PTR [rax],al
   1400086cc:	add    BYTE PTR [rax],al
   1400086ce:	add    BYTE PTR [rax],al
   1400086d0:	and    BYTE PTR [rax],al
   1400086d2:	pop    rsp
   1400086d3:	add    BYTE PTR [rdi],ch
   1400086d5:	add    BYTE PTR [rbx+0x0],bl
   1400086d8:	pop    rbp
   1400086d9:	add    BYTE PTR [rdx],bh
   1400086db:	add    BYTE PTR [rax+rax*1+0x3c],bh
   1400086df:	add    BYTE PTR [rsi],bh
   1400086e1:	add    BYTE PTR [rbx],ch
   1400086e3:	add    BYTE PTR [rip+0x2c003b00],bh        # 0x16c00c1e9
   1400086e9:	add    BYTE PTR [rdi],bh
   1400086eb:	add    BYTE PTR [rax+rax*1],ah
   1400086ee:	and    eax,DWORD PTR [rax]
   1400086f0:	sub    BYTE PTR [rax],al
   1400086f2:	sub    DWORD PTR [rax],eax
   1400086f4:	and    DWORD PTR [rax],eax
   1400086f6:	add    BYTE PTR [rsi+0x0],bl
   1400086fa:	and    al,BYTE PTR [rax]
   1400086fc:	(bad)  
   1400086fd:	add    BYTE PTR [rbx+0x0],bh
   140008700:	jge    0x140008702
   140008702:	sub    al,BYTE PTR [rax]
   140008704:	and    eax,0x2e000000
   140008709:	add    BYTE PTR [rax],al
   14000870b:	add    BYTE PTR [rax],al
   14000870d:	add    BYTE PTR [rax],al
   14000870f:	add    BYTE PTR [rcx+0x0],cl
   140008712:	push   rax
   140008713:	add    BYTE PTR [rbx+0x0],al
   140008716:	and    al,0x0
	...
   140008720:	pop    rsp
   140008721:	add    BYTE PTR [rax+rax*1+0x25],bl
   140008725:	add    BYTE PTR [rbx+0x0],dh
   140008728:	pop    rsp
   140008729:	add    BYTE PTR [rip+0x7300],ah        # 0x14000fa2f
   14000872f:	add    BYTE PTR [rax+rax*1+0x56],bl
   140008733:	add    BYTE PTR [rcx+0x0],ah
   140008736:	jb     0x140008738
   140008738:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000873c:	ins    BYTE PTR es:[rdi],dx
   14000873d:	add    BYTE PTR [rbp+0x0],ah
   140008740:	rex.WB add BYTE PTR [r14+0x0],bpl
   140008744:	data16 add BYTE PTR [rdi+0x0],ch
   140008748:	pop    rsp
   140008749:	add    BYTE PTR [rax+rax*1+0x72],dl
   14000874d:	add    BYTE PTR [rcx+0x0],ah
   140008750:	outs   dx,BYTE PTR ds:[rsi]
   140008751:	add    BYTE PTR [rbx+0x0],dh
   140008754:	ins    BYTE PTR es:[rdi],dx
   140008755:	add    BYTE PTR [rcx+0x0],ah
   140008758:	je     0x14000875a
   14000875a:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   140008770:	pop    rsp
   140008771:	add    BYTE PTR [rbx+0x0],dl
   140008774:	je     0x140008776
   140008776:	jb     0x140008778
   140008778:	imul   eax,DWORD PTR [rax],0x67006e
   14000877e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140008782:	ins    BYTE PTR es:[rdi],dx
   140008783:	add    BYTE PTR [rbp+0x0],ah
   140008786:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000878a:	data16 add BYTE PTR [rdi+0x0],ch
   14000878e:	pop    rsp
   14000878f:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400b795
   140008795:	add    BYTE PTR [rax+0x0],bh
   140008798:	and    eax,0x34003000
   14000879d:	add    BYTE PTR [rax+0x0],bh
   1400087a0:	pop    rsp
   1400087a1:	add    BYTE PTR [rcx+0x0],cl
   1400087a4:	outs   dx,BYTE PTR ds:[rsi]
   1400087a5:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400087a9:	add    BYTE PTR [rdx+0x0],dh
   1400087ac:	outs   dx,BYTE PTR ds:[rsi]
   1400087ad:	add    BYTE PTR [rcx+0x0],ah
   1400087b0:	ins    BYTE PTR es:[rdi],dx
   1400087b1:	add    BYTE PTR [rsi+0x0],cl
   1400087b4:	(bad)  
   1400087b5:	add    BYTE PTR [rbp+0x0],ch
   1400087b8:	add    BYTE PTR gs:[rax],al
   1400087bb:	add    BYTE PTR [rax],al
   1400087bd:	add    BYTE PTR [rax],al
   1400087bf:	add    BYTE PTR [rsi],ch
   1400087c1:	add    BYTE PTR [rbp+0x0],al
   1400087c4:	pop    rax
   1400087c5:	add    BYTE PTR [rbp+0x0],al
	...
   1400087d0:	and    eax,0x20007300
   1400087d5:	add    BYTE PTR [rip+0x7300],ah        # 0x14000fadb
   1400087db:	add    BYTE PTR [rdi],ch
   1400087dd:	add    BYTE PTR [rax],al
   1400087df:	add    BYTE PTR [rax+0x41],dl
   1400087e2:	push   rdx
   1400087e3:	push   rbx
   1400087e4:	rex.RB push r10
   1400087e6:	xor    al,BYTE PTR [rax]
   1400087e8:	sub    eax,0x2f00
   1400087ed:	add    BYTE PTR [rax],al
   1400087ef:	add    BYTE PTR [rax],al
   1400087f1:	add    BYTE PTR [rax],al
   1400087f3:	add    BYTE PTR [rdi+0x39],cl
   1400087f6:	lahf   
   1400087f7:	push   rbp
   1400087f8:	add    BYTE PTR [rax],al
   1400087fa:	add    BYTE PTR [rax],al
   1400087fc:	add    al,BYTE PTR [rax]
   1400087fe:	add    BYTE PTR [rax],al
   140008800:	and    eax,0xf0000000
   140008805:	mov    BYTE PTR [rax],al
   140008807:	add    al,dh
   140008809:	jbe    0x14000880b
   14000880b:	add    BYTE PTR [rax],al
   14000880d:	add    BYTE PTR [rax],al
   14000880f:	add    BYTE PTR [rdi+0x39],cl
   140008812:	lahf   
   140008813:	push   rbp
   140008814:	add    BYTE PTR [rax],al
   140008816:	add    BYTE PTR [rax],al
   140008818:	or     eax,0xe0000000
   14000881d:	add    DWORD PTR [rax],eax
   14000881f:	add    BYTE PTR [rcx+rcx*4],ch
   140008822:	add    BYTE PTR [rax],al
   140008824:	sub    al,0x77
	...
   14000884e:	add    BYTE PTR [rax],al
   140008850:	movabs al,ds:0x0
	...
   1400088a5:	add    BYTE PTR [rax],al
   1400088a7:	add    BYTE PTR [rax],cl
   1400088a9:	movabs al,ds:0x14000
	...
   1400088be:	add    BYTE PTR [rax],al
   1400088c0:	mov    eax,0x1400083
   1400088c5:	add    BYTE PTR [rax],al
   1400088c7:	add    al,al
   1400088c9:	add    DWORD PTR [rax],0x40
   1400088cc:	add    DWORD PTR [rax],eax
   1400088ce:	add    BYTE PTR [rax],al
   1400088d0:	add    BYTE PTR [rax+rax*1+0x140],al
   1400088d7:	add    BYTE PTR [rax],cl
	...
   1400088e1:	xor    eax,0x0
	...
   1400088ee:	add    BYTE PTR [rax],al
   1400088f0:	push   rdx
   1400088f1:	push   rbx
   1400088f2:	rex.R push rbx
   1400088f4:	ins    DWORD PTR es:[rdi],dx
   1400088f5:	or     BYTE PTR [rbp+0x71],dh
   1400088f8:	cmp    al,0xab
   1400088fa:	jmp    0x163a93844
   1400088ff:	add    BYTE PTR [rdx+0x196293e],bl
   140008905:	add    BYTE PTR [rax],al
   140008907:	add    BYTE PTR [rbp+0x76],ah
   14000890a:	movsxd esi,DWORD PTR [rdx+0x65]
   14000890d:	(bad)  
   14000890e:	je     0x140008975
   140008910:	cs jo  0x140008977
   140008913:	(bad)  
	...
   14000892c:	rex.RXB
   14000892d:	rex.XB push r12
   14000892f:	rex.WR add BYTE PTR [rax],r10b
   140008932:	add    BYTE PTR [rax],al
   140008934:	sbb    al,0x69
   140008936:	add    BYTE PTR [rax],al
   140008938:	cs je  0x1400089a0
   14000893b:	js     0x1400089b1
   14000893d:	and    al,0x6d
   14000893f:	outs   dx,BYTE PTR ds:[rsi]
   140008940:	add    BYTE PTR [rax],al
   140008942:	add    BYTE PTR [rax],al
   140008944:	and    BYTE PTR [rcx+0x0],bh
   140008947:	add    BYTE PTR [rdx],dl
   140008949:	add    BYTE PTR [rax],al
   14000894b:	add    BYTE PTR [rsi],ch
   14000894d:	je     0x1400089b4
   14000894f:	js     0x1400089c5
   140008951:	and    al,0x6d
   140008953:	outs   dx,BYTE PTR ds:[rsi]
   140008954:	and    al,0x30
   140008956:	xor    BYTE PTR [rax],al
   140008958:	rex jns 0x14000895b
   14000895b:	add    BYTE PTR [rax+0x0],dl
   14000895e:	add    BYTE PTR [rax],al
   140008960:	cs je  0x1400089c8
   140008963:	js     0x1400089d9
   140008965:	and    al,0x78
   140008967:	add    BYTE PTR [rax],al
   140008969:	add    BYTE PTR [rax],0x0
   14000896c:	mov    eax,0x2e000003
   140008971:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140008979:	add    BYTE PTR [rax],al
   14000897b:	add    BYTE PTR [rax+0x10000083],bh
   140008981:	add    BYTE PTR [rax],al
   140008983:	add    BYTE PTR [rsi],ch
   140008985:	xor    BYTE PTR [rax],dh
   140008987:	movsxd esp,DWORD PTR [rsi+0x67]
   14000898a:	add    BYTE PTR [rax],al
   14000898c:	enter  0x83,0x0
   140008990:	or     BYTE PTR [rax],al
   140008992:	add    BYTE PTR [rax],al
   140008994:	cs rex.XB push r10
   140008997:	push   rsp
   140008998:	and    al,0x58
   14000899a:	rex.XB
   14000899b:	add    BYTE PTR [r8],al
   14000899e:	add    BYTE PTR [rax],al
   1400089a0:	rol    BYTE PTR [rbx+0x80000],1
   1400089a6:	add    BYTE PTR [rax],al
   1400089a8:	cs rex.XB push r10
   1400089ab:	push   rsp
   1400089ac:	and    al,0x58
   1400089ae:	rex.XB
   1400089af:	rex.B
   1400089b0:	add    BYTE PTR [r8],al
   1400089b3:	add    al,bl
   1400089b5:	add    DWORD PTR [rax],0x0
   1400089b8:	or     BYTE PTR [rax],al
   1400089ba:	add    BYTE PTR [rax],al
   1400089bc:	cs rex.XB push r10
   1400089bf:	push   rsp
   1400089c0:	and    al,0x58
   1400089c2:	rex.XB pop r10
   1400089c4:	add    BYTE PTR [rax],al
   1400089c6:	add    BYTE PTR [rax],al
   1400089c8:	loopne 0x14000894d
   1400089ca:	add    BYTE PTR [rax],al
   1400089cc:	or     BYTE PTR [rax],al
   1400089ce:	add    BYTE PTR [rax],al
   1400089d0:	cs rex.XB push r10
   1400089d3:	push   rsp
   1400089d4:	and    al,0x58
   1400089d6:	rex.WB
   1400089d7:	add    BYTE PTR [r8],al
   1400089da:	add    BYTE PTR [rax],al
   1400089dc:	call   0x148008a64
   1400089e1:	add    BYTE PTR [rax],al
   1400089e3:	add    BYTE PTR [rsi],ch
   1400089e5:	rex.XB push r10
   1400089e7:	push   rsp
   1400089e8:	and    al,0x58
   1400089ea:	rex.WB
   1400089eb:	rex.B
   1400089ec:	add    BYTE PTR [r8],al
   1400089ef:	add    al,dh
   1400089f1:	add    DWORD PTR [rax],0x0
   1400089f4:	or     BYTE PTR [rax],al
   1400089f6:	add    BYTE PTR [rax],al
   1400089f8:	cs rex.XB push r10
   1400089fb:	push   rsp
   1400089fc:	and    al,0x58
   1400089fe:	rex.WB pop r9
   140008a00:	add    BYTE PTR [rax],al
   140008a02:	add    BYTE PTR [rax],al
   140008a04:	clc    
   140008a05:	add    DWORD PTR [rax],0x0
   140008a08:	or     BYTE PTR [rax],al
   140008a0a:	add    BYTE PTR [rax],al
   140008a0c:	cs rex.XB push r10
   140008a0f:	push   rsp
   140008a10:	and    al,0x58
   140008a12:	rex.WB pop r10
   140008a14:	add    BYTE PTR [rax],al
   140008a16:	add    BYTE PTR [rax],al
   140008a18:	add    BYTE PTR [rax+rax*1+0x2000],al
   140008a1f:	add    BYTE PTR [rsi],ch
   140008a21:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140008a29:	add    BYTE PTR [rax],al
   140008a2b:	add    BYTE PTR [rax],ah
   140008a2d:	test   BYTE PTR [rax],al
   140008a2f:	add    al,dl
   140008a31:	add    al,0x0
   140008a33:	add    BYTE PTR [rsi],ch
   140008a35:	jb     0x140008a9b
   140008a37:	(bad)  
   140008a38:	je     0x140008a9b
   140008a3a:	add    BYTE PTR [rax],al
   140008a3c:	lock mov BYTE PTR [rax],al
   140008a3f:	add    BYTE PTR [rdx+rax*1],bl
   140008a42:	add    BYTE PTR [rax],al
   140008a44:	cs jb  0x140008aab
   140008a47:	(bad)  
   140008a48:	je     0x140008aab
   140008a4a:	and    al,0x7a
   140008a4c:	jp     0x140008ac8
   140008a4e:	fs (bad) 
   140008a50:	add    BYTE PTR [eax],al
   140008a53:	add    BYTE PTR [rax],dl
   140008a55:	mov    eax,DWORD PTR [rax]
   140008a57:	add    BYTE PTR [rsp+rax*1+0x782e0000],ah
   140008a5e:	fs (bad) 
   140008a60:	je     0x140008ac3
   140008a62:	add    BYTE PTR [rax],al
   140008a64:	mov    ah,0x8f
   140008a66:	add    BYTE PTR [rax],al
   140008a68:	lock add BYTE PTR [rax],al
   140008a6b:	add    BYTE PTR [rsi],ch
   140008a6d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140008a75:	add    BYTE PTR [rax],al
   140008a77:	add    BYTE PTR [rax+rdx*4+0x140000],ah
   140008a7e:	add    BYTE PTR [rax],al
   140008a80:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140008a89:	add    BYTE PTR [rax],al
   140008a8b:	add    BYTE PTR [rax-0x47ffff70],bh
   140008a91:	add    eax,DWORD PTR [rax]
   140008a93:	add    BYTE PTR [rsi],ch
   140008a95:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   140008a9d:	add    BYTE PTR [rax],al
   140008a9f:	add    BYTE PTR [rax-0x6c],dh
   140008aa2:	add    BYTE PTR [rax],al
   140008aa4:	outs   dx,BYTE PTR ds:[rsi]
   140008aa5:	(bad)  
   140008aa6:	add    BYTE PTR [rax],al
   140008aa8:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   140008ab1:	add    BYTE PTR [rax],al
   140008ab3:	add    BYTE PTR [rax],al
   140008ab5:	movabs al,ds:0x642e000000500000
   140008abe:	(bad)  
   140008abf:	je     0x140008b22
   140008ac1:	add    BYTE PTR [rax],al
   140008ac3:	add    BYTE PTR [rax-0x60],dl
   140008ac6:	add    BYTE PTR [rax],al
   140008ac8:	hlt    
   140008ac9:	(bad)  
   140008aca:	add    BYTE PTR [rax],al
   140008acc:	cs (bad) 
   140008acf:	jae    0x140008ad1
   140008ad1:	add    BYTE PTR [rax],al
   140008ad3:	add    BYTE PTR [rax],al
   140008ad5:	mov    al,0x0
   140008ad7:	add    BYTE PTR [rsp+rax*1+0x0],dh
   140008adb:	add    BYTE PTR [rsi],ch
   140008add:	jo     0x140008b43
   140008adf:	(bad)  
   140008ae0:	je     0x140008b43
   140008ae2:	add    BYTE PTR [rax],al
   140008ae4:	add    al,al
   140008ae6:	add    BYTE PTR [rax],al
   140008ae8:	lock add BYTE PTR [rax],al
   140008aeb:	add    BYTE PTR [rsi],ch
   140008aed:	jb     0x140008b62
   140008aef:	jb     0x140008b54
   140008af1:	and    al,0x30
   140008af3:	xor    DWORD PTR [rax],eax
   140008af5:	add    BYTE PTR [rax],al
   140008af7:	add    al,dh
   140008af9:	rol    BYTE PTR [rax],0x0
   140008afc:	add    BYTE PTR [rdi],0x0
   140008aff:	add    BYTE PTR [rsi],ch
   140008b01:	jb     0x140008b76
   140008b03:	jb     0x140008b68
   140008b05:	and    al,0x30
   140008b07:	xor    al,BYTE PTR [rax]
   140008b09:	add    BYTE PTR [rax],al
   140008b0b:	add    BYTE PTR [rax],al
   140008b0d:	add    BYTE PTR [rax],al
   140008b0f:	add    BYTE PTR [rcx],al
   140008b11:	(bad)  
   140008b12:	or     eax,DWORD PTR [rax]
   140008b14:	(bad)  
   140008b15:	je     0x140008b32
   140008b17:	add    BYTE PTR [rdi],bl
   140008b19:	sbb    DWORD PTR fs:[rax],eax
   140008b1c:	(bad)  
   140008b1d:	xor    al,0x18
   140008b1f:	add    BYTE PTR [rdi],bl
   140008b21:	add    DWORD PTR [rax+rax*1],edx
   140008b24:	adc    al,0xf0
   140008b26:	adc    ah,al
   140008b28:	adc    BYTE PTR [rax+0x0],dl
   140008b2b:	add    BYTE PTR [rcx],al
   140008b2d:	adc    BYTE PTR [rdi],al
   140008b2f:	add    BYTE PTR [rax],dl
   140008b31:	movabs ds:0x60047005c007e009,al
   140008b3a:	add    esi,DWORD PTR [rax]
   140008b3c:	add    dl,BYTE PTR [rax+0x0]
   140008b3f:	add    BYTE PTR [rcx],bl
   140008b41:	(bad)  
   140008b42:	or     eax,0x9d742600
   140008b47:	add    BYTE PTR [rsi],ah
   140008b49:	fs pushf 
   140008b4b:	add    BYTE PTR [rsi],ah
   140008b4d:	xor    al,0x9b
   140008b4f:	add    BYTE PTR [rsi],ah
   140008b51:	add    DWORD PTR [rax+rax*1-0x1fe90fe8],edx
   140008b58:	adc    al,0xd0
   140008b5a:	adc    al,al
   140008b5c:	adc    BYTE PTR [rax+0x0],dl
   140008b5f:	add    BYTE PTR [rax-0x6fffff88],cl
   140008b65:	add    al,0x0
   140008b67:	add    BYTE PTR [rcx],al
   140008b69:	adc    cl,BYTE PTR [rax]
   140008b6b:	add    BYTE PTR [rdx],dl
   140008b6d:	mov    dl,0xb
   140008b6f:	lock or eax,esp
   140008b72:	(bad)  
   140008b73:	rol    BYTE PTR [rip+0x3600470],1        # 0x143608fe9
   140008b79:	xor    BYTE PTR [rdx],al
   140008b7b:	push   rax
   140008b7c:	sbb    DWORD PTR [rax],esi
   140008b7e:	or     eax,DWORD PTR [rax]
   140008b80:	(bad)  
   140008b81:	xor    al,0x98
   140008b83:	add    BYTE PTR [rdi],bl
   140008b85:	add    DWORD PTR [rax+0xef01000],edx
   140008b8b:	loopne 0x140008b99
   140008b8d:	ror    BYTE PTR [rdx],1
   140008b8f:	ror    BYTE PTR [rax],0x70
   140008b92:	(bad)  
   140008b93:	(bad)  
   140008b94:	(bad)  
   140008b95:	push   rax
   140008b96:	add    BYTE PTR [rax],al
   140008b98:	mov    BYTE PTR [rax+0x0],bh
   140008b9b:	add    BYTE PTR [rax+0x4],dh
   140008b9e:	add    BYTE PTR [rax],al
   140008ba0:	add    DWORD PTR [rsi],eax
   140008ba2:	add    al,BYTE PTR [rax]
   140008ba4:	(bad)  
   140008ba5:	xor    al,BYTE PTR [rdx]
   140008ba7:	xor    BYTE PTR [rcx],al
   140008ba9:	adc    cl,BYTE PTR [rax]
   140008bab:	add    BYTE PTR [rdx],dl
   140008bad:	push   rsp
   140008bae:	or     al,BYTE PTR [rax]
   140008bb0:	adc    dh,BYTE PTR [rax+rcx*1]
   140008bb3:	add    BYTE PTR [rdx],dl
   140008bb5:	xor    cl,BYTE PTR [rsi]
   140008bb7:	loopne 0x140008bc5
   140008bb9:	jo     0x140008bc6
   140008bbb:	(bad)  
   140008bbc:	add    DWORD PTR [rdx],ecx
   140008bbe:	add    al,0x0
   140008bc0:	or     dh,BYTE PTR [rsi+rax*1]
   140008bc3:	add    BYTE PTR [rdx],cl
   140008bc5:	xor    al,BYTE PTR [rsi]
   140008bc7:	jo     0x140008bca
   140008bc9:	sbb    eax,DWORD PTR [rdi]
   140008bcb:	add    BYTE PTR [rbx],bl
   140008bcd:	(bad)  
   140008bce:	(bad)  
   140008bcf:	loopne 0x140008be6
   140008bd1:	rcl    BYTE PTR [rbx],0x70
   140008bd4:	adc    ah,BYTE PTR [rax+0x11]
   140008bd7:	push   rax
   140008bd8:	adc    BYTE PTR [rax],dh
   140008bda:	add    BYTE PTR [rax],al
   140008bdc:	add    DWORD PTR [rsi],eax
   140008bde:	add    al,BYTE PTR [rax]
   140008be0:	(bad)  
   140008be1:	jb     0x140008be5
   140008be3:	xor    BYTE PTR [rcx],al
   140008be5:	clts   
   140008be7:	add    BYTE PTR [rdi],cl
   140008be9:	or     al,BYTE PTR fs:[rax]
   140008bec:	sysenter 
   140008bee:	or     DWORD PTR [rax],eax
   140008bf0:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140008bf3:	jo     0x140008bf6
   140008bf5:	clts   
   140008bf7:	add    BYTE PTR [rdi],cl
   140008bf9:	or     DWORD PTR fs:[rax],eax
   140008bfc:	sysenter 
   140008bfe:	or     BYTE PTR [rax],al
   140008c00:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140008c03:	jo     0x140008c06
   140008c05:	or     al,BYTE PTR [rax+rax*1]
   140008c08:	or     dh,BYTE PTR [rax+rcx*1]
   140008c0b:	add    BYTE PTR [rdx],cl
   140008c0d:	xor    al,BYTE PTR [rsi]
   140008c0f:	jo     0x140008c2a
   140008c11:	sbb    DWORD PTR [rdx],eax
   140008c13:	add    BYTE PTR [rdi],al
   140008c15:	add    DWORD PTR [rbx],ebp
   140008c17:	add    BYTE PTR [rax+0x40000078],cl
   140008c1d:	add    DWORD PTR [rax],eax
   140008c1f:	add    BYTE PTR [rcx],al
   140008c21:	(bad)  
   140008c22:	or     BYTE PTR [rax],al
   140008c24:	(bad)  
   140008c25:	push   rsp
   140008c26:	(bad)  
   140008c27:	add    BYTE PTR [rdi],dl
   140008c29:	xor    al,0xd
   140008c2b:	add    BYTE PTR [rdi],dl
   140008c2d:	jb     0x140008c42
   140008c2f:	loopne 0x140008c42
   140008c31:	jo     0x140008c43
   140008c33:	(bad)  
   140008c34:	add    DWORD PTR [rsp+rax*1],edx
   140008c37:	add    BYTE PTR [rax+rbp*2],dl
   140008c3a:	add    al,BYTE PTR [rax]
   140008c3c:	(bad)  
   140008c3d:	push   rdx
   140008c3e:	add    dh,BYTE PTR [rax]
   140008c40:	add    DWORD PTR [rsp+rcx*1],ebx
   140008c43:	add    BYTE PTR [rsp+riz*2],bl
   140008c46:	or     al,0x0
   140008c48:	sbb    al,0x54
   140008c4a:	or     eax,DWORD PTR [rax]
   140008c4c:	sbb    al,0x34
   140008c4e:	or     al,BYTE PTR [rax]
   140008c50:	sbb    al,0x32
   140008c52:	sbb    al,dh
   140008c54:	(bad)  
   140008c55:	loopne 0x140008c6b
   140008c57:	rcl    BYTE PTR [rdx],1
   140008c59:	rcl    BYTE PTR [rax],0x70
   140008c5c:	add    DWORD PTR [rax+rcx*1],edx
   140008c5f:	add    BYTE PTR [rsp+riz*2],dl
   140008c62:	or     BYTE PTR [rax],al
   140008c64:	adc    al,0x54
   140008c66:	(bad)  
   140008c67:	add    BYTE PTR [rsp+rsi*1],dl
   140008c6a:	(bad)  
   140008c6b:	add    BYTE PTR [rdx+rsi*1],dl
   140008c6e:	adc    BYTE PTR [rax+0x19],dh
   140008c71:	(bad)  
   140008c72:	or     BYTE PTR [rax],al
   140008c74:	adc    BYTE PTR [rsi+rcx*1],dh
   140008c77:	add    BYTE PTR [rax],dl
   140008c79:	push   rdx
   140008c7a:	or     al,0xf0
   140008c7c:	or     ah,al
   140008c7e:	or     BYTE PTR [rax+0x7],dh
   140008c81:	(bad)  
   140008c82:	(bad)  
   140008c83:	push   rax
   140008c84:	mov    BYTE PTR [rax+0x0],bh
   140008c87:	add    BYTE PTR [rax],ch
   140008c89:	add    BYTE PTR [rax],al
   140008c8b:	add    BYTE PTR [rcx],al
   140008c8d:	clts   
   140008c8f:	add    BYTE PTR [rdi],cl
   140008c91:	fs (bad) 
   140008c93:	add    BYTE PTR [rdi],cl
   140008c95:	xor    al,0x6
   140008c97:	add    BYTE PTR [rdi],cl
   140008c99:	xor    cl,BYTE PTR [rbx]
   140008c9b:	jo     0x140008c9e
   140008c9d:	clts   
   140008c9f:	add    BYTE PTR [rdi],cl
   140008ca1:	or     BYTE PTR fs:[rax],al
   140008ca4:	sysenter 
   140008ca6:	(bad)  
   140008ca7:	add    BYTE PTR [rdi],cl
   140008ca9:	xor    cl,BYTE PTR [rbx]
   140008cab:	jo     0x140008cae
   140008cad:	add    al,0x1
   140008caf:	add    BYTE PTR [rdx+rax*2],al
   140008cb2:	add    BYTE PTR [rax],al
   140008cb4:	add    DWORD PTR [rax+rcx*1],edx
   140008cb7:	add    BYTE PTR [rsp+riz*2],dl
   140008cba:	or     al,BYTE PTR [rax]
   140008cbc:	adc    al,0x54
   140008cbe:	or     DWORD PTR [rax],eax
   140008cc0:	adc    al,0x34
   140008cc2:	or     BYTE PTR [rax],al
   140008cc4:	adc    al,0x52
   140008cc6:	adc    BYTE PTR [rax+0x1],dh
   140008cc9:	add    al,0x1
   140008ccb:	add    BYTE PTR [rdx+riz*2],al
   140008cce:	add    BYTE PTR [rax],al
   140008cd0:	add    DWORD PTR [rsp+rcx*1],ebx
   140008cd3:	add    BYTE PTR [rsp+riz*2],bl
   140008cd6:	adc    DWORD PTR [rax],eax
   140008cd8:	sbb    al,0x54
   140008cda:	adc    BYTE PTR [rax],al
   140008cdc:	sbb    al,0x34
   140008cde:	ltr    WORD PTR [rdx+rsi*2]
   140008ce2:	sbb    al,dh
   140008ce4:	(bad)  
   140008ce5:	loopne 0x140008cfb
   140008ce7:	rcl    BYTE PTR [rdx],1
   140008ce9:	rcl    BYTE PTR [rax],0x70
   140008cec:	add    DWORD PTR [rcx],edx
   140008cee:	(bad)  
   140008cef:	add    BYTE PTR [rcx],dl
   140008cf1:	movabs ds:0x60087009e00bf00d,al
   140008cfa:	(bad)  
   140008cfb:	push   rax
   140008cfc:	(bad)  
   140008cfd:	xor    BYTE PTR [rax],al
   140008cff:	add    BYTE PTR [rcx],bl
   140008d01:	xor    BYTE PTR [rax+rax*1],cl
   140008d04:	and    dh,BYTE PTR [rcx+rbx*1+0x0]
   140008d08:	and    ah,BYTE PTR [rax+rbx*1+0x0]
   140008d0c:	and    dh,BYTE PTR [rdi+rdx*1]
   140008d0f:	add    BYTE PTR [rdx],ah
   140008d11:	repnz sbb al,dh
   140008d14:	(bad)  
   140008d15:	loopne 0x140008d2b
   140008d17:	rcl    BYTE PTR [rdx],1
   140008d19:	rcl    BYTE PTR [rax],0x50
   140008d1c:	mov    BYTE PTR [rax+0x0],bh
   140008d1f:	add    BYTE PTR [rax+0x0],dh
   140008d22:	add    BYTE PTR [rax],al
   140008d24:	or     DWORD PTR [rsi],eax
   140008d26:	add    al,BYTE PTR [rax]
   140008d28:	(bad)  
   140008d29:	push   rdx
   140008d2a:	add    dh,BYTE PTR [rax]
   140008d2c:	data16 jbe 0x140008d2f
   140008d2f:	add    BYTE PTR [rcx],al
   140008d31:	add    BYTE PTR [rax],al
   140008d33:	add    BYTE PTR [rdx+0x44],bh
   140008d36:	add    BYTE PTR [rax],al
   140008d38:	nop
   140008d39:	add    BYTE PTR [rax],r8b
   140008d3c:	add    DWORD PTR [rax],eax
   140008d3e:	add    BYTE PTR [rax],al
   140008d40:	xchg   edx,eax
   140008d41:	add    BYTE PTR [rax],r8b
   140008d44:	or     DWORD PTR [rdx],ecx
   140008d46:	add    al,0x0
   140008d48:	or     dh,BYTE PTR [rsi+rax*1]
   140008d4b:	add    BYTE PTR [rdx],cl
   140008d4d:	xor    al,BYTE PTR [rsi]
   140008d4f:	jo     0x140008db7
   140008d51:	jbe    0x140008d53
   140008d53:	add    BYTE PTR [rcx],al
   140008d55:	add    BYTE PTR [rax],al
   140008d57:	add    BYTE PTR [rdx+0x45],al
   140008d5a:	add    BYTE PTR [rax],al
   140008d5c:	jne    0x140008da3
   140008d5e:	add    BYTE PTR [rax],al
   140008d60:	add    DWORD PTR [rax],eax
   140008d62:	add    BYTE PTR [rax],al
   140008d64:	jl     0x140008dab
   140008d66:	add    BYTE PTR [rax],al
   140008d68:	add    DWORD PTR [rdx],edx
   140008d6a:	add    eax,0xe421200
   140008d6f:	jo     0x140008d7e
   140008d71:	(bad)  
   140008d72:	or     al,0x50
   140008d74:	or     esi,DWORD PTR [rax]
   140008d76:	add    BYTE PTR [rax],al
   140008d78:	add    DWORD PTR [rbx],ebx
   140008d7a:	or     al,BYTE PTR [rax]
   140008d7c:	sbb    esi,DWORD PTR [rbx+rcx*1+0x0]
   140008d80:	sbb    esp,DWORD PTR [rdx+rcx*1+0x0]
   140008d84:	sbb    esi,DWORD PTR [rcx+rcx*1]
   140008d87:	add    BYTE PTR [rbx],bl
   140008d89:	xor    dl,BYTE PTR [rax+rsi*8]
   140008d8c:	adc    ah,al
   140008d8e:	adc    BYTE PTR [rax+0x19],dl
   140008d91:	sbb    DWORD PTR [rax+rax*1],eax
   140008d94:	or     dh,BYTE PTR [rcx+rdx*1]
   140008d97:	add    BYTE PTR [rdx],cl
   140008d99:	rol    BYTE PTR [rsi],cl
   140008d9b:	jo     0x140008d25
   140008d9d:	js     0x140008d9f
   140008d9f:	add    BYTE PTR [rax+0x0],ah
   140008da2:	add    BYTE PTR [rax],al
   140008da4:	sbb    DWORD PTR [rcx],ebx
   140008da6:	add    al,0x0
   140008da8:	or     dh,BYTE PTR [rbx+rcx*1]
   140008dab:	add    BYTE PTR [rdx],cl
   140008dad:	jb     0x140008db5
   140008daf:	jo     0x140008d39
   140008db1:	js     0x140008db3
   140008db3:	add    BYTE PTR [rax],dh
   140008db5:	add    BYTE PTR [rax],al
   140008db7:	add    BYTE PTR [rcx],bl
   140008db9:	(bad)  
   140008dba:	(bad)  
   140008dbb:	add    BYTE PTR [rsi],dl
   140008dbd:	add    DWORD PTR [rax+0x1],edx
   140008dc0:	(bad)  
   140008dc1:	loopne 0x140008dc8
   140008dc3:	jo     0x140008dc9
   140008dc5:	(bad)  
   140008dc6:	add    esi,DWORD PTR [rax]
   140008dc8:	add    dl,BYTE PTR [rax+0x0]
   140008dcb:	add    BYTE PTR [rax+0x70000078],cl
   140008dd1:	or     al,BYTE PTR [rax]
   140008dd3:	add    BYTE PTR [rcx],al
   140008dd5:	or     al,BYTE PTR [rax+rax*1]
   140008dd8:	or     dh,BYTE PTR [rdi+rax*1]
   140008ddb:	add    BYTE PTR [rdx],cl
   140008ddd:	xor    al,BYTE PTR [rsi]
   140008ddf:	jo     0x140008de2
   140008de1:	adc    al,0x8
   140008de3:	add    BYTE PTR [rsp+riz*2],dl
   140008de6:	(bad)  
   140008de7:	add    BYTE PTR [rsp+rdx*2],dl
   140008dea:	or     eax,0xc341400
   140008def:	add    BYTE PTR [rdx+rdx*4],dl
   140008df2:	adc    BYTE PTR [rax+0x1],dh
   140008df5:	sbb    ecx,DWORD PTR [rdx]
   140008df7:	add    BYTE PTR [rbx],bl
   140008df9:	push   rsp
   140008dfa:	adc    eax,DWORD PTR [rax]
   140008dfc:	sbb    esi,DWORD PTR [rdx+rdx*1]
   140008dff:	add    BYTE PTR [rbx],bl
   140008e01:	mov    dl,0x17
   140008e03:	loopne 0x140008e1a
   140008e05:	rcl    BYTE PTR [rbx],1
   140008e07:	rcl    BYTE PTR [rcx],0x70
   140008e0a:	adc    BYTE PTR [rax+0x1],ah
   140008e0d:	(bad)  
   140008e0e:	or     al,BYTE PTR [rax]
   140008e10:	(bad)  
   140008e11:	xor    al,0x12
   140008e13:	add    BYTE PTR [rdi],dl
   140008e15:	xchg   edx,eax
   140008e16:	adc    al,dh
   140008e18:	(bad)  
   140008e19:	loopne 0x140008e27
   140008e1b:	ror    BYTE PTR [rdx],1
   140008e1d:	ror    BYTE PTR [rax],0x70
   140008e20:	(bad)  
   140008e21:	(bad)  
   140008e22:	(bad)  
   140008e23:	push   rax
   140008e24:	add    DWORD PTR [rsp+rcx*1],ebx
   140008e27:	add    BYTE PTR [rsp+riz*2],bl
   140008e2a:	(bad)  
   140008e2b:	add    BYTE PTR [rsp+rdx*2],bl
   140008e2e:	or     eax,0xc341c00
   140008e33:	add    BYTE PTR [rdx+rdx*2],bl
   140008e36:	sbb    al,dh
   140008e38:	(bad)  
   140008e39:	loopne 0x140008e4f
   140008e3b:	rcl    BYTE PTR [rdx],1
   140008e3d:	rcl    BYTE PTR [rax],0x70
   140008e40:	add    DWORD PTR [rsi],esi
   140008e42:	(bad)  
   140008e43:	add    BYTE PTR [rsi],dh
   140008e45:	js     0x140008e4b
   140008e47:	add    BYTE PTR [rsi],ch
   140008e49:	push   0x34140005
   140008e4e:	adc    al,0x0
   140008e50:	adc    al,0xb2
   140008e52:	adc    al,dh
   140008e54:	(bad)  
   140008e55:	loopne 0x140008e63
   140008e57:	ror    BYTE PTR [rdx],1
   140008e59:	ror    BYTE PTR [rax],0x70
   140008e5c:	(bad)  
   140008e5d:	(bad)  
   140008e5e:	(bad)  
   140008e5f:	push   rax
   140008e60:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b4158e6e
   140008e66:	or     BYTE PTR [rax],al
   140008e68:	adc    eax,0x15000764
   140008e6d:	xor    al,0x6
   140008e6f:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e09fa7
   140008e75:	sbb    DWORD PTR [rdx],ecx
   140008e77:	add    BYTE PTR [rcx],bl
   140008e79:	in     al,0x9
   140008e7b:	add    BYTE PTR [rcx],bl
   140008e7d:	je     0x140008e87
   140008e7f:	add    BYTE PTR [rcx],bl
   140008e81:	fs (bad) 
   140008e83:	add    BYTE PTR [rcx],bl
   140008e85:	push   rsp
   140008e86:	(bad)  
   140008e87:	add    BYTE PTR [rcx],bl
   140008e89:	xor    dl,BYTE PTR [rip+0x92201f0]        # 0x14922907f
   140008e8f:	add    BYTE PTR [rdx],ah
   140008e91:	ret    0xf01b
   140008e94:	sbb    eax,esp
   140008e96:	(bad)  
   140008e97:	rcl    BYTE PTR [rip+0x127013c0],1        # 0x15270a25d
   140008e9d:	(bad)  
   140008e9e:	adc    DWORD PTR [rax],esi
   140008ea0:	adc    BYTE PTR [rax+0x0],dl
   140008ea3:	add    BYTE PTR [rcx],al
   140008ea5:	or     al,BYTE PTR [rdx]
   140008ea7:	add    BYTE PTR [rdx],cl
   140008ea9:	xor    al,BYTE PTR [rsi]
   140008eab:	xor    BYTE PTR [rcx],al
   140008ead:	sbb    BYTE PTR [rdx],cl
   140008eaf:	add    BYTE PTR [rax],bl
   140008eb1:	or     al,BYTE PTR fs:[rax]
   140008eb4:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140008eb8:	sbb    BYTE PTR [rax+rcx*1],dh
   140008ebb:	add    BYTE PTR [rax],bl
   140008ebd:	xor    dl,BYTE PTR [rax+rsi*8]
   140008ec0:	adc    ah,al
   140008ec2:	adc    BYTE PTR [rax+0x1],dh
   140008ec5:	(bad)  
   140008ec7:	add    BYTE PTR [rdi],cl
   140008ec9:	xor    al,0x7
   140008ecb:	add    BYTE PTR [rdi],cl
   140008ecd:	xor    cl,BYTE PTR [rbx]
   140008ecf:	jo     0x140008ed2
   140008ed1:	adc    cl,BYTE PTR [rax]
   140008ed3:	add    BYTE PTR [rdx],dl
   140008ed5:	push   rsp
   140008ed6:	or     al,BYTE PTR [rax]
   140008ed8:	adc    dh,BYTE PTR [rcx+rcx*1]
   140008edb:	add    BYTE PTR [rdx],dl
   140008edd:	xor    cl,BYTE PTR [rsi]
   140008edf:	loopne 0x140008eed
   140008ee1:	jo     0x140008eee
   140008ee3:	(bad)  
   140008ee4:	add    DWORD PTR [rbx],ecx
   140008ee6:	add    al,0x0
   140008ee8:	or     ebp,DWORD PTR [rax+0x2]
   140008eeb:	add    BYTE PTR [rsi],al
   140008eed:	push   rdx
   140008eee:	add    dh,BYTE PTR [rax]
   140008ef0:	add    DWORD PTR [rsi+rax*1],edx
   140008ef3:	add    BYTE PTR [rsp+riz*2],dl
   140008ef6:	or     BYTE PTR [rax],al
   140008ef8:	adc    al,0x34
   140008efa:	(bad)  
   140008efb:	add    BYTE PTR [rdx+rsi*1],dl
   140008efe:	adc    BYTE PTR [rax+0x1],dh
   140008f01:	sbb    DWORD PTR [rdx],ecx
   140008f03:	add    BYTE PTR [rcx],bl
   140008f05:	je     0x140008f10
   140008f07:	add    BYTE PTR [rcx],bl
   140008f09:	or     BYTE PTR fs:[rax],al
   140008f0c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140008f10:	sbb    DWORD PTR [rsi+rax*1],esi
   140008f13:	add    BYTE PTR [rcx],bl
   140008f15:	xor    dl,BYTE PTR [rip+0xa1909e0]        # 0x14a1998fb
   140008f1b:	add    BYTE PTR [rcx],bl
   140008f1d:	(bad)  
   140008f1e:	or     eax,DWORD PTR [rax]
   140008f20:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140008f24:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140008f28:	sbb    DWORD PTR [rax+rcx*1],esi
   140008f2b:	add    BYTE PTR [rcx],bl
   140008f2d:	push   rdx
   140008f2e:	adc    eax,0x7666e0
   140008f33:	add    BYTE PTR [rcx],al
   140008f35:	add    BYTE PTR [rax],al
   140008f37:	add    BYTE PTR [rcx+0x71],cl
   140008f3a:	add    BYTE PTR [rax],al
   140008f3c:	mov    edx,0x46000072
   140008f41:	jns    0x140008f43
   140008f43:	add    BYTE PTR [rdx+0x1000072],bh
   140008f49:	add    BYTE PTR [rax],al
   140008f4b:	add    BYTE PTR [rcx],cl
   140008f4d:	add    al,0x1
   140008f4f:	add    BYTE PTR [rdx+riz*1],al
   140008f52:	add    BYTE PTR [rax],al
   140008f54:	data16 jbe 0x140008f57
   140008f57:	add    BYTE PTR [rcx],al
   140008f59:	add    BYTE PTR [rax],al
   140008f5b:	add    ah,ch
   140008f5d:	jae    0x140008f5f
   140008f5f:	add    BYTE PTR [rdx],ah
   140008f61:	je     0x140008f63
   140008f63:	add    BYTE PTR [rcx],al
   140008f65:	add    BYTE PTR [rax],al
   140008f67:	add    BYTE PTR [rdx],ah
   140008f69:	je     0x140008f6b
   140008f6b:	add    BYTE PTR [rcx],cl
   140008f6d:	or     al,BYTE PTR [rax+rax*1]
   140008f70:	or     dh,BYTE PTR [rsi+rax*1]
   140008f73:	add    BYTE PTR [rdx],cl
   140008f75:	xor    al,BYTE PTR [rsi]
   140008f77:	jo     0x140008fdf
   140008f79:	jbe    0x140008f7b
   140008f7b:	add    BYTE PTR [rcx],al
   140008f7d:	add    BYTE PTR [rax],al
   140008f7f:	add    ch,ch
   140008f81:	je     0x140008f83
   140008f83:	add    BYTE PTR [rax],ah
   140008f85:	jne    0x140008f87
   140008f87:	add    BYTE PTR [rax+0x79],dh
   140008f8a:	add    BYTE PTR [rax],al
   140008f8c:	and    BYTE PTR [rbp+0x0],dh
   140008f8f:	add    BYTE PTR [rcx],al
   140008f91:	(bad)  
   140008f92:	add    al,BYTE PTR [rax]
   140008f94:	(bad)  
   140008f95:	xor    al,BYTE PTR [rdx]
   140008f97:	push   rax
   140008f98:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d8fa2
   140008f9e:	or     DWORD PTR [rax],eax
   140008fa0:	or     eax,0x1500632
   140008fa5:	or     al,0x2
   140008fa7:	add    BYTE PTR [rcx+rax*1],cl
   140008faa:	adc    DWORD PTR [rax],eax
   140008fac:	add    BYTE PTR [rax],al
   140008fae:	add    BYTE PTR [rax],al
   140008fb0:	add    DWORD PTR [rax],eax
   140008fb2:	add    BYTE PTR [rax],al
   140008fb4:	mov    eax,0x90
   140008fb9:	add    BYTE PTR [rax],al
   140008fbb:	add    BYTE PTR [rax],al
   140008fbd:	add    BYTE PTR [rax],al
   140008fbf:	add    BYTE PTR [rsi-0x6b],dh
   140008fc2:	add    BYTE PTR [rax],al
   140008fc4:	add    BYTE PTR [rax-0x6ed00000],al
	...
   140008fd2:	add    BYTE PTR [rax],al
   140008fd4:	(bad)  
   140008fd5:	xchg   ebp,eax
   140008fd6:	add    BYTE PTR [rax],al
   140008fd8:	js     0x140008f5a
   140008fda:	add    BYTE PTR [rax],al
   140008fdc:	xchg   rbx,rax
	...
   140008fe6:	add    BYTE PTR [rax],al
   140008fe8:	nop
   140008fe9:	xchg   esi,eax
   140008fea:	add    BYTE PTR [rax],al
   140008fec:	nop
   140008fed:	(bad)  
   140008fee:	add    BYTE PTR [rax],al
   140008ff0:	xor    BYTE PTR [rax+rax*1+0x0],dl
   140008ff7:	add    BYTE PTR [rax],al
   140008ff9:	add    BYTE PTR [rax],al
   140008ffb:	add    BYTE PTR [rdi+rdx*4],cl
   140008ffe:	add    BYTE PTR [rax],al
   140009000:	js     0x140008f85
   140009002:	add    BYTE PTR [rax],al
   140009004:	fcom   DWORD PTR [rdx+0x0]
   14000900a:	add    BYTE PTR [rax],al
   14000900c:	add    BYTE PTR [rax],al
   14000900e:	add    BYTE PTR [rax],al
   140009010:	xor    dl,BYTE PTR [rdi-0x7de00000]
   140009016:	add    BYTE PTR [rax],al
   140009018:	adc    BYTE PTR [rdx+0x0],0x0
   14000901f:	add    BYTE PTR [rax],al
   140009021:	add    BYTE PTR [rax],al
   140009023:	add    BYTE PTR [rdx-0x37ffff69],al
   140009029:	add    DWORD PTR [rax],0x931000
	...
   140009037:	add    BYTE PTR [rdx+0x58000097],bh
   14000903d:	(bad)  
   14000903e:	add    BYTE PTR [rax],al
   140009040:	movabs al,ds:0x92
   140009049:	add    BYTE PTR [rax],al
   14000904b:	add    dl,dh
   14000904d:	xchg   edi,eax
   14000904e:	add    BYTE PTR [rax],al
   140009050:	call   0x1300090d6
   140009055:	xchg   edx,eax
	...
   14000905e:	add    BYTE PTR [rax],al
   140009060:	rex.R cwde 
   140009062:	add    BYTE PTR [rax],al
   140009064:	cmp    BYTE PTR [rdx-0x6d380000],al
	...
   140009072:	add    BYTE PTR [rax],al
   140009074:	(bad)  
   140009075:	cwde   
   140009076:	add    BYTE PTR [rax],al
   140009078:	adc    BYTE PTR [rdx-0x6be00000],al
	...
   140009086:	add    BYTE PTR [rax],al
   140009088:	(bad)  
   140009089:	cwde   
   14000908a:	add    BYTE PTR [rax],al
   14000908c:	push   0x60000083
   140009091:	xchg   esp,eax
	...
   14000909a:	add    BYTE PTR [rax],al
   14000909c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000909d:	cwde   
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	test   al,0x83
	...
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	jo     0x14000904e
   1400090ba:	add    BYTE PTR [rax],al
   1400090bc:	add    BYTE PTR [rax],al
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	mov    BYTE PTR [rax+rax*1+0x0],dl
   1400090c7:	add    BYTE PTR [rsp+rdx*4+0x0],bl
   1400090ce:	add    BYTE PTR [rax],al
   1400090d0:	lods   al,BYTE PTR ds:[rsi]
   1400090d1:	xchg   esp,eax
   1400090d2:	add    BYTE PTR [rax],al
   1400090d4:	add    BYTE PTR [rax],al
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	ret    0x94
   1400090db:	add    BYTE PTR [rax],al
   1400090dd:	add    BYTE PTR [rax],al
   1400090df:	add    ah,dl
   1400090e1:	xchg   esp,eax
   1400090e2:	add    BYTE PTR [rax],al
   1400090e4:	add    BYTE PTR [rax],al
   1400090e6:	add    BYTE PTR [rax],al
   1400090e8:	call   0x140009181
   1400090ed:	add    BYTE PTR [rax],al
   1400090ef:	add    BYTE PTR [rax],al
   1400090f1:	xchg   ebp,eax
   1400090f2:	add    BYTE PTR [rax],al
   1400090f4:	add    BYTE PTR [rax],al
   1400090f6:	add    BYTE PTR [rax],al
   1400090f8:	(bad)  
   1400090f9:	xchg   ebp,eax
   1400090fa:	add    BYTE PTR [rax],al
   1400090fc:	add    BYTE PTR [rax],al
   1400090fe:	add    BYTE PTR [rax],al
   140009100:	es xchg ebp,eax
   140009102:	add    BYTE PTR [rax],al
   140009104:	add    BYTE PTR [rax],al
   140009106:	add    BYTE PTR [rax],al
   140009108:	ss xchg ebp,eax
   14000910a:	add    BYTE PTR [rax],al
   14000910c:	add    BYTE PTR [rax],al
   14000910e:	add    BYTE PTR [rax],al
   140009110:	rex.RX xchg ebp,eax
   140009112:	add    BYTE PTR [rax],al
   140009114:	add    BYTE PTR [rax],al
   140009116:	add    BYTE PTR [rax],al
   140009118:	push   rsp
   140009119:	xchg   ebp,eax
   14000911a:	add    BYTE PTR [rax],al
   14000911c:	add    BYTE PTR [rax],al
   14000911e:	add    BYTE PTR [rax],al
   140009120:	xchg   bp,ax
	...
   14000912e:	add    BYTE PTR [rax],al
   140009130:	mov    eax,0x95
   140009135:	add    BYTE PTR [rax],al
   140009137:	add    BYTE PTR [rbx+rbx*4],dh
   14000913a:	add    BYTE PTR [rax],al
   14000913c:	add    BYTE PTR [rax],al
   14000913e:	add    BYTE PTR [rax],al
   140009140:	(bad)  
   140009141:	fwait
   140009142:	add    BYTE PTR [rax],al
   140009144:	add    BYTE PTR [rax],al
   140009146:	add    BYTE PTR [rax],al
   140009148:	adc    bl,BYTE PTR [rbx+0x0]
   14000914e:	add    BYTE PTR [rax],al
   140009150:	test   al,0x95
   140009152:	add    BYTE PTR [rax],al
   140009154:	add    BYTE PTR [rax],al
   140009156:	add    BYTE PTR [rax],al
   140009158:	clc    
   140009159:	(bad)  
   14000915a:	add    BYTE PTR [rax],al
   14000915c:	add    BYTE PTR [rax],al
   14000915e:	add    BYTE PTR [rax],al
   140009160:	call   0x1400091ff
   140009165:	add    BYTE PTR [rax],al
   140009167:	add    ah,bl
   140009169:	(bad)  
   14000916a:	add    BYTE PTR [rax],al
   14000916c:	add    BYTE PTR [rax],al
   14000916e:	add    BYTE PTR [rax],al
   140009170:	retf   0x9a
   140009173:	add    BYTE PTR [rax],al
   140009175:	add    BYTE PTR [rax],al
   140009177:	add    BYTE PTR [rdx+0x9a],bh
   14000917d:	add    BYTE PTR [rax],al
   14000917f:	add    BYTE PTR [rsi+0x9a],ch
   140009185:	add    BYTE PTR [rax],al
   140009187:	add    BYTE PTR [rdx+rbx*4+0x0],bl
   14000918e:	add    BYTE PTR [rax],al
   140009190:	xchg   BYTE PTR [rdx+0x0],bl
   140009196:	add    BYTE PTR [rax],al
   140009198:	jo     0x140009134
   14000919a:	add    BYTE PTR [rax],al
   14000919c:	add    BYTE PTR [rax],al
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	(bad)  
   1400091a1:	(bad)  
   1400091a2:	add    BYTE PTR [rax],al
   1400091a4:	add    BYTE PTR [rax],al
   1400091a6:	add    BYTE PTR [rax],al
   1400091a8:	push   rdx
   1400091a9:	(bad)  
   1400091aa:	add    BYTE PTR [rax],al
   1400091ac:	add    BYTE PTR [rax],al
   1400091ae:	add    BYTE PTR [rax],al
   1400091b0:	rex (bad) 
   1400091b2:	add    BYTE PTR [rax],al
   1400091b4:	add    BYTE PTR [rax],al
   1400091b6:	add    BYTE PTR [rax],al
   1400091b8:	cs (bad) 
   1400091ba:	add    BYTE PTR [rax],al
   1400091bc:	add    BYTE PTR [rax],al
   1400091be:	add    BYTE PTR [rax],al
   1400091c0:	sbb    al,0x9a
   1400091c2:	add    BYTE PTR [rax],al
   1400091c4:	add    BYTE PTR [rax],al
   1400091c6:	add    BYTE PTR [rax],al
   1400091c8:	adc    BYTE PTR [rdx+0x0],bl
   1400091ce:	add    BYTE PTR [rax],al
   1400091d0:	add    al,0x9a
   1400091d2:	add    BYTE PTR [rax],al
   1400091d4:	add    BYTE PTR [rax],al
   1400091d6:	add    BYTE PTR [rax],al
   1400091d8:	hlt    
   1400091d9:	cdq    
   1400091da:	add    BYTE PTR [rax],al
   1400091dc:	add    BYTE PTR [rax],al
   1400091de:	add    BYTE PTR [rax],al
   1400091e0:	(bad)  
   1400091e1:	cwde   
   1400091e2:	add    BYTE PTR [rax],al
   1400091e4:	add    BYTE PTR [rax],al
   1400091e6:	add    BYTE PTR [rax],al
   1400091e8:	(bad)  
   1400091e9:	cwde   
   1400091ea:	add    BYTE PTR [rax],al
   1400091ec:	add    BYTE PTR [rax],al
   1400091ee:	add    BYTE PTR [rax],al
   1400091f0:	mov    eax,0x98
   1400091f5:	add    BYTE PTR [rax],al
   1400091f7:	add    BYTE PTR [rax+0x98],dh
   1400091fd:	add    BYTE PTR [rax],al
   1400091ff:	add    BYTE PTR [rax+0x95],bl
   140009205:	add    BYTE PTR [rax],al
   140009207:	add    BYTE PTR [rbp+rdx*4+0x0],al
   14000920e:	add    BYTE PTR [rax],al
   140009210:	add    al,0x9b
   140009212:	add    BYTE PTR [rax],al
   140009214:	add    BYTE PTR [rax],al
   140009216:	add    BYTE PTR [rax],al
   140009218:	loop   0x1400091b3
   14000921a:	add    BYTE PTR [rax],al
   14000921c:	add    BYTE PTR [rax],al
   14000921e:	add    BYTE PTR [rax],al
   140009220:	(bad)  
   140009221:	cdq    
   140009222:	add    BYTE PTR [rax],al
   140009224:	add    BYTE PTR [rax],al
   140009226:	add    BYTE PTR [rax],al
   140009228:	mov    esi,0x99
   14000922d:	add    BYTE PTR [rax],al
   14000922f:	add    BYTE PTR [rdx+0x99],dh
   140009235:	add    BYTE PTR [rax],al
   140009237:	add    BYTE PTR [rax+0x99],ah
   14000923d:	add    BYTE PTR [rax],al
   14000923f:	add    BYTE PTR [rdx+0x99],cl
   140009245:	add    BYTE PTR [rax],al
   140009247:	add    BYTE PTR [rsi-0x67],dh
   14000924a:	add    BYTE PTR [rax],al
   14000924c:	add    BYTE PTR [rax],al
   14000924e:	add    BYTE PTR [rax],al
   140009250:	sbb    bl,BYTE PTR [rcx+0x0]
   140009256:	add    BYTE PTR [rax],al
   140009258:	xor    BYTE PTR [rcx+0x0],bl
   14000925e:	add    BYTE PTR [rax],al
   140009260:	rex.WX cqo 
   140009262:	add    BYTE PTR [rax],al
   140009264:	add    BYTE PTR [rax],al
   140009266:	add    BYTE PTR [rax],al
   140009268:	pop    rdx
   140009269:	cdq    
   14000926a:	add    BYTE PTR [rax],al
   14000926c:	add    BYTE PTR [rax],al
   14000926e:	add    BYTE PTR [rax],al
   140009270:	add    al,0x99
	...
   14000927e:	add    BYTE PTR [rax],al
   140009280:	push   rdx
   140009281:	xchg   edi,eax
   140009282:	add    BYTE PTR [rax],al
   140009284:	add    BYTE PTR [rax],al
   140009286:	add    BYTE PTR [rax],al
   140009288:	push   0x97
   14000928d:	add    BYTE PTR [rax],al
   14000928f:	add    BYTE PTR [rsi],bh
   140009291:	xchg   edi,eax
	...
   14000929e:	add    BYTE PTR [rax],al
   1400092a0:	(bad)  
   1400092a1:	xchg   edi,eax
   1400092a2:	add    BYTE PTR [rax],al
   1400092a4:	add    BYTE PTR [rax],al
   1400092a6:	add    BYTE PTR [rax],al
   1400092a8:	rcl    BYTE PTR [rdi+0x0],cl
   1400092ae:	add    BYTE PTR [rax],al
   1400092b0:	call   0x14000934c
   1400092b5:	add    BYTE PTR [rax],al
   1400092b7:	add    ah,bl
   1400092b9:	xchg   edi,eax
	...
   1400092c6:	add    BYTE PTR [rax],al
   1400092c8:	push   rax
   1400092c9:	cwde   
	...
   1400092d6:	add    BYTE PTR [rax],al
   1400092d8:	and    al,0x97
   1400092da:	add    BYTE PTR [rax],al
   1400092dc:	add    BYTE PTR [rax],al
   1400092de:	add    BYTE PTR [rax],al
   1400092e0:	(bad)  
   1400092e1:	xchg   edi,eax
	...
   1400092ee:	add    BYTE PTR [rax],al
   1400092f0:	sbb    bl,BYTE PTR [rax+0x0]
   1400092f6:	add    BYTE PTR [rax],al
   1400092f8:	(bad)  
   1400092f9:	xchg   edi,eax
   1400092fa:	add    BYTE PTR [rax],al
   1400092fc:	add    BYTE PTR [rax],al
   1400092fe:	add    BYTE PTR [rax],al
   140009300:	xor    bl,BYTE PTR [rax+0x0]
	...
   14000930e:	add    BYTE PTR [rax],al
   140009310:	stos   BYTE PTR es:[rdi],al
   140009311:	xchg   edi,eax
   140009312:	add    BYTE PTR [rax],al
   140009314:	add    BYTE PTR [rax],al
   140009316:	add    BYTE PTR [rax],al
   140009318:	jae    0x14000931a
   14000931a:	add    BYTE PTR [rax],al
   14000931c:	add    BYTE PTR [rax],al
   14000931e:	add    BYTE PTR [rax+0x6f],al
   140009324:	add    BYTE PTR [rax],al
   140009326:	add    BYTE PTR [rax+0x978a],al
   14000932c:	add    BYTE PTR [rax],al
   14000932e:	add    BYTE PTR [rax],al
   140009330:	je     0x140009332
   140009332:	add    BYTE PTR [rax],al
   140009334:	add    BYTE PTR [rax],al
   140009336:	add    BYTE PTR [rax+0x979a],al
	...
   140009348:	retf   0x9b
   14000934b:	add    BYTE PTR [rax],al
   14000934d:	add    BYTE PTR [rax],al
   14000934f:	add    BYTE PTR [rsi-0x6a],ah
   140009352:	add    BYTE PTR [rax],al
   140009354:	add    BYTE PTR [rax],al
   140009356:	add    BYTE PTR [rax],al
   140009358:	rcr    BYTE PTR [rbx+0x0],0x0
   14000935f:	add    BYTE PTR [rsi+0x9b],dh
   140009365:	add    BYTE PTR [rax],al
   140009367:	add    BYTE PTR [rbx+rbx*4+0x0],ah
   14000936e:	add    BYTE PTR [rax],al
   140009370:	(bad)  
   140009371:	fwait
   140009372:	add    BYTE PTR [rax],al
   140009374:	add    BYTE PTR [rax],al
   140009376:	add    BYTE PTR [rax],al
   140009378:	nop
   140009379:	fwait
   14000937a:	add    BYTE PTR [rax],al
   14000937c:	add    BYTE PTR [rax],al
   14000937e:	add    BYTE PTR [rax],al
   140009380:	xchg   BYTE PTR [rbx+0x0],bl
   140009386:	add    BYTE PTR [rax],al
   140009388:	jl     0x140009325
   14000938a:	add    BYTE PTR [rax],al
   14000938c:	add    BYTE PTR [rax],al
   14000938e:	add    BYTE PTR [rax],al
   140009390:	jl     0x140009328
   140009392:	add    BYTE PTR [rax],al
   140009394:	add    BYTE PTR [rax],al
   140009396:	add    BYTE PTR [rax],al
   140009398:	jo     0x140009330
   14000939a:	add    BYTE PTR [rax],al
   14000939c:	add    BYTE PTR [rax],al
   14000939e:	add    BYTE PTR [rax],al
   1400093a0:	(bad)  
   1400093a1:	fwait
   1400093a2:	add    BYTE PTR [rax],al
   1400093a4:	add    BYTE PTR [rax],al
   1400093a6:	add    BYTE PTR [rax],al
   1400093a8:	rex.WRX xchg rsi,rax
   1400093aa:	add    BYTE PTR [rax],al
   1400093ac:	add    BYTE PTR [rax],al
   1400093ae:	add    BYTE PTR [rax],al
   1400093b0:	rex.X xchg esi,eax
   1400093b2:	add    BYTE PTR [rax],al
   1400093b4:	add    BYTE PTR [rax],al
   1400093b6:	add    BYTE PTR [rax],al
   1400093b8:	cs xchg esi,eax
   1400093ba:	add    BYTE PTR [rax],al
   1400093bc:	add    BYTE PTR [rax],al
   1400093be:	add    BYTE PTR [rax],al
   1400093c0:	and    al,0x96
   1400093c2:	add    BYTE PTR [rax],al
   1400093c4:	add    BYTE PTR [rax],al
   1400093c6:	add    BYTE PTR [rax],al
   1400093c8:	sbb    al,0x96
   1400093ca:	add    BYTE PTR [rax],al
   1400093cc:	add    BYTE PTR [rax],al
   1400093ce:	add    BYTE PTR [rax],al
   1400093d0:	adc    al,0x96
   1400093d2:	add    BYTE PTR [rax],al
   1400093d4:	add    BYTE PTR [rax],al
   1400093d6:	add    BYTE PTR [rax],al
   1400093d8:	add    dl,BYTE PTR [rsi+0x0]
   1400093de:	add    BYTE PTR [rax],al
   1400093e0:	lock xchg ebp,eax
   1400093e2:	add    BYTE PTR [rax],al
   1400093e4:	add    BYTE PTR [rax],al
   1400093e6:	add    BYTE PTR [rax],al
   1400093e8:	loop   0x14000937f
   1400093ea:	add    BYTE PTR [rax],al
   1400093ec:	add    BYTE PTR [rax],al
   1400093ee:	add    BYTE PTR [rax],al
   1400093f0:	(bad)  
   1400093f1:	xchg   ebp,eax
   1400093f2:	add    BYTE PTR [rax],al
   1400093f4:	add    BYTE PTR [rax],al
   1400093f6:	add    BYTE PTR [rax],al
   1400093f8:	rex.WX
   1400093f9:	fwait
   1400093fa:	add    BYTE PTR [rax],al
   1400093fc:	add    BYTE PTR [rax],al
   1400093fe:	add    BYTE PTR [rax],al
   140009400:	pop    rax
   140009401:	fwait
   140009402:	add    BYTE PTR [rax],al
   140009404:	add    BYTE PTR [rax],al
   140009406:	add    BYTE PTR [rax],al
   140009408:	fs fwait
   14000940a:	add    BYTE PTR [rax],al
   14000940c:	add    BYTE PTR [rax],al
   14000940e:	add    BYTE PTR [rax],al
   140009410:	jb     0x1400093ad
	...
   14000941e:	add    BYTE PTR [rax],al
   140009420:	outs   dx,BYTE PTR ds:[rsi]
   140009421:	cwde   
	...
   14000942e:	add    BYTE PTR [rax],al
   140009430:	ficom  WORD PTR [rsi+0x0]
   140009436:	add    BYTE PTR [rax],al
   140009438:	hlt    
   140009439:	xchg   esi,eax
   14000943a:	add    BYTE PTR [rax],al
   14000943c:	add    BYTE PTR [rax],al
   14000943e:	add    BYTE PTR [rax],al
   140009440:	retf   0x96
   140009443:	add    BYTE PTR [rax],al
   140009445:	add    BYTE PTR [rax],al
   140009447:	add    BYTE PTR [rax+0x96],dh
   14000944d:	add    BYTE PTR [rax],al
   14000944f:	add    BYTE PTR [rsi+rdx*4+0x0],bl
	...
   14000945e:	add    BYTE PTR [rax],al
   140009460:	nop
   140009461:	cwde   
	...
   14000946e:	add    BYTE PTR [rax],al
   140009470:	test   al,0x2
   140009472:	push   rdx
   140009473:	imul   esi,DWORD PTR gs:[ebx+0x74],0x76457265
   14000947c:	outs   dx,BYTE PTR gs:[rsi]
   14000947e:	je     0x1400094d3
   140009480:	outs   dx,DWORD PTR ds:[rsi]
   140009481:	jne    0x1400094f5
   140009483:	movsxd esp,DWORD PTR [rbp+0x57]
   140009486:	add    BYTE PTR [rax],al
   140009488:	adc    eax,DWORD PTR [rdx]
   14000948a:	rex.WRXB jo 0x1400094f2
   14000948d:	outs   dx,BYTE PTR ds:[rsi]
   14000948e:	push   rax
   14000948f:	jb     0x140009500
   140009491:	movsxd esp,DWORD PTR [rbp+0x73]
   140009494:	jae    0x1400094ea
   140009496:	outs   dx,DWORD PTR ds:[rsi]
   140009497:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   14000949b:	add    BYTE PTR [rdx],dl
   14000949d:	add    cl,BYTE PTR [rdi+0x70]
   1400094a0:	outs   dx,BYTE PTR gs:[rsi]
   1400094a2:	rex.RB jbe 0x14000950a
   1400094a5:	outs   dx,BYTE PTR ds:[rsi]
   1400094a6:	je     0x1400094f4
   1400094a8:	outs   dx,DWORD PTR ds:[rsi]
   1400094a9:	addr32 push rdi
   1400094ab:	add    BYTE PTR [rdi+0x1],ch
   1400094ae:	rex.RXB
   1400094af:	gs je  0x140009506
   1400094b2:	outs   dx,DWORD PTR ds:[rsi]
   1400094b3:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   1400094b7:	outs   dx,BYTE PTR ds:[rsi]
   1400094b8:	outs   dx,WORD PTR ds:[rsi]
   1400094ba:	jb     0x140009529
   1400094bc:	(bad)  
   1400094bd:	je     0x140009528
   1400094bf:	outs   dx,DWORD PTR ds:[rsi]
   1400094c0:	outs   dx,BYTE PTR ds:[rsi]
   1400094c1:	add    BYTE PTR [rsi+0x2],bl
   1400094c4:	push   rdx
   1400094c5:	gs addr32 rex.XB jb 0x14000952f
   1400094ca:	(bad)  
   1400094cb:	je     0x140009532
   1400094cd:	rex.WXB
   1400094ce:	gs jns 0x140009516
   1400094d1:	js     0x14000952a
   1400094d3:	add    BYTE PTR [rbx+0x67655202],dl
   1400094d9:	push   rcx
   1400094da:	jne    0x140009541
   1400094dc:	jb     0x140009557
   1400094de:	push   rsi
   1400094df:	(bad)  
   1400094e0:	ins    BYTE PTR es:[rdi],dx
   1400094e1:	jne    0x140009548
   1400094e3:	rex.RB js 0x14000953d
   1400094e6:	add    BYTE PTR [rax],al
   1400094e8:	jmp    0x1400094ea
   1400094ea:	rex.R
   1400094eb:	gs jb  0x140009553
   1400094ee:	imul   esi,DWORD PTR [ebx+0x74],0x76457265
   1400094f6:	outs   dx,BYTE PTR gs:[rsi]
   1400094f8:	je     0x14000954d
   1400094fa:	outs   dx,DWORD PTR ds:[rsi]
   1400094fb:	jne    0x14000956f
   1400094fd:	movsxd esp,DWORD PTR [rbp+0x0]
   140009500:	pop    rcx
   140009501:	add    dl,BYTE PTR [rdx+0x65]
   140009504:	rex.XB outs dx,DWORD PTR ds:[esi]
   140009507:	outs   dx,BYTE PTR ds:[rsi]
   140009508:	outs   dx,BYTE PTR ds:[rsi]
   140009509:	movsxd esi,DWORD PTR gs:[rdx+rdx*2+0x65]
   14000950e:	imul   esi,DWORD PTR [ebx+0x74],0x577972
   140009516:	xchg   BYTE PTR [rdx],al
   140009518:	push   rdx
   140009519:	gs addr32 rex.WRXB jo 0x140009583
   14000951e:	outs   dx,BYTE PTR ds:[rsi]
   14000951f:	rex.WXB
   140009520:	gs jns 0x140009568
   140009523:	js     0x14000957c
   140009525:	add    BYTE PTR [rax+0x70655202],bh
   14000952b:	outs   dx,DWORD PTR ds:[rsi]
   14000952c:	jb     0x1400095a2
   14000952e:	rex.RB jbe 0x140009596
   140009531:	outs   dx,BYTE PTR ds:[rsi]
   140009532:	je     0x14000958b
   140009534:	add    BYTE PTR [rax],al
   140009536:	je     0x14000953a
   140009538:	push   rdx
   140009539:	rex.RB outs dx,BYTE PTR gs:[esi]
   14000953d:	jne    0x1400095ac
   14000953f:	rex.WXB
   140009540:	gs jns 0x140009588
   140009543:	js     0x14000959c
   140009545:	add    BYTE PTR [rbp+0x2],dl
   140009548:	push   rdx
   140009549:	gs rex.XB ins BYTE PTR es:[edi],dx
   14000954d:	outs   dx,DWORD PTR ds:[rsi]
   14000954e:	jae    0x1400095b5
   140009550:	rex.WXB
   140009551:	gs jns 0x140009554
   140009554:	movabs ds:0x5674655367655202,eax
   14000955d:	(bad)  
   14000955e:	ins    BYTE PTR es:[rdi],dx
   14000955f:	jne    0x1400095c6
   140009561:	rex.RB js 0x1400095bb
   140009564:	add    BYTE PTR [rax],al
   140009566:	add    BYTE PTR fs:[rbx+0x6c],al
   14000956a:	outs   dx,DWORD PTR ds:[rsi]
   14000956b:	jae    0x1400095d2
   14000956d:	rex.RB jbe 0x1400095d5
   140009570:	outs   dx,BYTE PTR ds:[rsi]
   140009571:	je     0x1400095bf
   140009573:	outs   dx,DWORD PTR ds:[rsi]
   140009574:	add    BYTE PTR [ecx+0x44],al
   140009578:	push   rsi
   140009579:	push   r8
   14000957b:	xor    rsi,QWORD PTR [r10]
   14000957e:	cs fs ins BYTE PTR es:[rdi],dx
   140009581:	ins    BYTE PTR es:[rdi],dx
   140009582:	add    BYTE PTR [rax],al
   140009584:	adc    BYTE PTR [rdx],al
   140009586:	rex.RXB
   140009587:	gs je  0x1400095cd
   14000958a:	jne    0x1400095fe
   14000958c:	jb     0x1400095f3
   14000958e:	outs   dx,BYTE PTR ds:[rsi]
   14000958f:	je     0x1400095e1
   140009591:	jb     0x140009602
   140009593:	movsxd esp,DWORD PTR [rbp+0x73]
   140009596:	jae    0x140009598
   140009598:	push   rdi
   140009599:	add    al,BYTE PTR [rdi+0x65]
   14000959c:	je     0x1400095ea
   14000959e:	(bad)  
   14000959f:	jae    0x140009615
   1400095a1:	rex.RB jb 0x140009616
   1400095a4:	outs   dx,DWORD PTR ds:[rsi]
   1400095a5:	jb     0x1400095a7
   1400095a7:	add    BYTE PTR [rbx],ah
   1400095a9:	add    eax,0x4c746553
   1400095ae:	(bad)  
   1400095af:	jae    0x140009625
   1400095b1:	rex.RB jb 0x140009626
   1400095b4:	outs   dx,DWORD PTR ds:[rsi]
   1400095b5:	jb     0x1400095b7
   1400095b7:	add    BYTE PTR [rbp+0x0],bh
   1400095ba:	rex.XB ins BYTE PTR es:[rdi],dx
   1400095bc:	outs   dx,DWORD PTR ds:[rsi]
   1400095bd:	jae    0x140009624
   1400095bf:	rex.W (bad) 
   1400095c1:	outs   dx,BYTE PTR ds:[rsi]
   1400095c2:	fs ins BYTE PTR es:[rdi],dx
   1400095c4:	add    BYTE PTR gs:[rbx+0x45],cl
   1400095c8:	push   rdx
   1400095c9:	rex.WRX
   1400095ca:	rex.RB
   1400095cb:	xor    r14,QWORD PTR [rdx]
   1400095ce:	cs fs ins BYTE PTR es:[rdi],dx
   1400095d1:	ins    BYTE PTR es:[rdi],dx
   1400095d2:	add    BYTE PTR [rax],al
   1400095d4:	push   rbp
   1400095d5:	add    BYTE PTR [rdi+0x58],bl
   1400095d8:	movsxd esi,DWORD PTR [rax+0x74]
   1400095db:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   1400095e4:	pop    rdi
   1400095e5:	(bad)  
   1400095e6:	ins    DWORD PTR es:[rdi],dx
   1400095e7:	jae    0x140009650
   1400095e9:	pop    rdi
   1400095ea:	gs js  0x140009656
   1400095ed:	je     0x1400095ef
   1400095ef:	add    BYTE PTR [rbp+0x775f5f00],bl
   1400095f5:	addr32 gs je 0x140009666
   1400095f9:	(bad)  
   1400095fa:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140009601:	add    BYTE PTR [rsi+0x735f5f00],cl
   140009607:	gs je  0x140009669
   14000960a:	(bad)  
   14000960b:	jo     0x14000967d
   14000960d:	pop    rdi
   14000960e:	je     0x140009689
   140009610:	jo     0x140009677
   140009612:	add    BYTE PTR [rax],al
   140009614:	xor    al,BYTE PTR [riz*2+0x746978]
   14000961b:	add    BYTE PTR [rsi],cl
   14000961d:	add    DWORD PTR [rdi+0x65],ebx
   140009620:	js     0x14000968b
   140009622:	je     0x140009624
   140009624:	rol    DWORD PTR [rax],0x5f
   140009627:	movsxd esp,DWORD PTR [rbp+0x78]
   14000962a:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140009632:	jae    0x140009699
   140009634:	je     0x1400096ab
   140009636:	jae    0x14000969d
   140009638:	jb     0x1400096a7
   14000963a:	(bad)  
   14000963b:	je     0x1400096a5
   14000963d:	gs jb  0x1400096b2
   140009640:	add    BYTE PTR [rax],al
   140009642:	jge    0x140009645
   140009644:	pop    rdi
   140009645:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000964c:	ins    DWORD PTR es:[rdi],dx
   14000964d:	add    BYTE PTR [rdi+0x0],dl
   140009650:	pop    rdi
   140009651:	pop    rdi
   140009652:	rex.XB pop r15
   140009654:	jae    0x1400096c6
   140009656:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000965a:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140009661:	ins    BYTE PTR es:[rdi],dx
   140009662:	gs jb  0x140009665
   140009665:	add    BYTE PTR [rdi],ah
   140009667:	add    DWORD PTR [rdi+0x66],ebx
   14000966a:	ins    DWORD PTR es:[rdi],dx
   14000966b:	outs   dx,DWORD PTR ds:[rsi]
   14000966c:	fs add BYTE PTR gs:[rax],al
   140009670:	rol    BYTE PTR [rax],cl
   140009672:	pop    rdi
   140009673:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140009676:	ins    DWORD PTR es:[rdi],dx
   140009677:	outs   dx,DWORD PTR ds:[rsi]
   140009678:	fs add BYTE PTR gs:[rax],al
   14000967c:	(bad)  
   14000967d:	add    BYTE PTR [rdi],bh
   14000967f:	je     0x1400096e6
   140009681:	jb     0x1400096f0
   140009683:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000968a:	pop    rcx
   14000968b:	pop    r8
   14000968d:	pop    rax
   14000968e:	pop    rdx
   14000968f:	add    BYTE PTR [rbp+0x73],ch
   140009692:	jbe    0x1400096f7
   140009694:	jb     0x14000970a
   140009696:	cs fs ins BYTE PTR es:[rdi],dx
   140009699:	ins    BYTE PTR es:[rdi],dx
   14000969a:	add    BYTE PTR [rax],al
   14000969c:	mov    BYTE PTR [rdx],0x52
   14000969f:	je     0x14000970d
   1400096a1:	rex.XB (bad) 
   1400096a3:	jo     0x140009719
   1400096a5:	jne    0x140009719
   1400096a7:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400096aa:	outs   dx,BYTE PTR ds:[rsi]
   1400096ab:	je     0x140009712
   1400096ad:	js     0x140009723
   1400096af:	add    BYTE PTR [rdi+0x4],dh
   1400096b2:	push   rdx
   1400096b3:	je     0x140009721
   1400096b5:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400096b7:	outs   dx,DWORD PTR ds:[rsi]
   1400096b8:	imul   esi,DWORD PTR [rbp+0x70],0x46
   1400096bc:	jne    0x14000972c
   1400096be:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400096c2:	outs   dx,BYTE PTR ds:[rsi]
   1400096c3:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400096c5:	je     0x140009739
   1400096c7:	jns    0x1400096c9
   1400096c9:	add    BYTE PTR [rbx+0x6c745205],cl
   1400096cf:	push   rsi
   1400096d0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400096d7:	outs   dx,BYTE PTR ds:[rsi]
   1400096d8:	ja     0x140009743
   1400096da:	outs   dx,BYTE PTR ds:[rsi]
   1400096db:	add    BYTE PTR fs:[rax],al
   1400096de:	sbb    eax,0x72655606
   1400096e3:	push   rbx
   1400096e4:	gs je  0x14000972a
   1400096e7:	outs   dx,DWORD PTR ds:[rsi]
   1400096e8:	outs   dx,BYTE PTR ds:[rsi]
   1400096e9:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x73614d6e
   1400096f2:	imul   eax,DWORD PTR [rax],0xffffff8a
   1400096f5:	add    eax,0x566c7452
   1400096fa:	gs jb  0x140009766
   1400096fd:	data16 jns 0x140009756
   140009700:	gs jb  0x140009776
   140009703:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f666e49
   14000970a:	add    BYTE PTR [rax],al
   14000970c:	outs   dx,BYTE PTR ds:[rsi]
   14000970d:	je     0x140009773
   14000970f:	ins    BYTE PTR es:[rdi],dx
   140009710:	ins    BYTE PTR es:[rdi],dx
   140009711:	cs fs ins BYTE PTR es:[rdi],dx
   140009714:	ins    BYTE PTR es:[rdi],dx
   140009715:	add    BYTE PTR [rbx+0x2],al
   140009718:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000971a:	(bad)  
   14000971b:	fs push rbx
   14000971d:	je     0x140009791
   14000971f:	imul   ebp,DWORD PTR [rsi+0x67],0x3c0057
   140009726:	rex.XB push 0x70557261
   14000972c:	jo     0x140009793
   14000972e:	jb     0x140009787
   140009730:	add    BYTE PTR [rax],al
   140009732:	push   rbp
   140009733:	push   rbx
   140009734:	rex.RB push r10
   140009736:	xor    esi,DWORD PTR [rdx]
   140009738:	cs fs ins BYTE PTR es:[rdi],dx
   14000973b:	ins    BYTE PTR es:[rdi],dx
   14000973c:	add    BYTE PTR [rax],al
   14000973e:	xor    BYTE PTR [rax],al
   140009740:	push   rdi
   140009741:	rex.WRX
   140009742:	gs je  0x14000978c
   140009745:	gs je  0x140009794
   140009748:	(bad)  
   140009749:	jae    0x1400097bf
   14000974b:	rex.RB jb 0x1400097c0
   14000974e:	outs   dx,DWORD PTR ds:[rsi]
   14000974f:	jb     0x1400097a8
   140009751:	add    BYTE PTR [rip+0x654e5700],cl        # 0x1a54eee57
   140009757:	je     0x14000979a
   140009759:	fs rex.XB outs dx,DWORD PTR fs:[rsi]
   14000975d:	outs   dx,BYTE PTR ds:[rsi]
   14000975e:	outs   dx,BYTE PTR ds:[rsi]
   14000975f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140009764:	outs   dx,BYTE PTR ds:[rsi]
   140009765:	xor    dl,BYTE PTR [rdi+0x0]
   140009768:	adc    eax,DWORD PTR [rax]
   14000976a:	push   rdi
   14000976b:	rex.WRX
   14000976c:	gs je  0x1400097b2
   14000976f:	(bad)  
   140009770:	outs   dx,BYTE PTR ds:[rsi]
   140009771:	movsxd esp,DWORD PTR [rbp+0x6c]
   140009774:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009776:	outs   dx,BYTE PTR ds:[rsi]
   140009777:	outs   dx,BYTE PTR ds:[rsi]
   140009778:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000977d:	outs   dx,BYTE PTR ds:[rsi]
   14000977e:	xor    dl,BYTE PTR [rdi+0x0]
   140009781:	add    BYTE PTR [rbp+0x50],cl
   140009784:	push   rdx
   140009785:	cs fs ins BYTE PTR es:[rdi],dx
   140009788:	ins    BYTE PTR es:[rdi],dx
   140009789:	add    BYTE PTR [rdi],al
   14000978b:	add    BYTE PTR [rdi+0x65],al
   14000978e:	je     0x1400097d1
   140009790:	fs fs jb 0x1400097dd
   140009794:	outs   dx,BYTE PTR ds:[rsi]
   140009795:	outs   dx,WORD PTR ds:[rsi]
   140009797:	push   rdi
   140009798:	add    BYTE PTR [rax],al
   14000979a:	or     DWORD PTR [rax],eax
   14000979c:	rex.RXB
   14000979d:	gs je  0x1400097ee
   1400097a0:	(bad)  
   1400097a1:	ins    DWORD PTR es:[rdi],dx
   1400097a2:	rex.WB outs dx,BYTE PTR gs:[rsi]
   1400097a5:	outs   dx,WORD PTR ds:[rsi]
   1400097a7:	push   rdi
   1400097a8:	add    BYTE PTR [rax],al
   1400097aa:	add    al,BYTE PTR [rax]
   1400097ac:	rex.RX jb 0x140009814
   1400097af:	gs rex.B
   1400097b1:	fs fs jb 0x1400097fe
   1400097b5:	outs   dx,BYTE PTR ds:[rsi]
   1400097b6:	outs   dx,WORD PTR ds:[rsi]
   1400097b8:	push   rdi
   1400097b9:	add    BYTE PTR [rdi+0x53],dl
   1400097bc:	xor    bl,BYTE PTR [rdi+0x33]
   1400097bf:	xor    ch,BYTE PTR [rsi]
   1400097c1:	fs ins BYTE PTR es:[rdi],dx
   1400097c3:	ins    BYTE PTR es:[rdi],dx
   1400097c4:	add    BYTE PTR [rax],al
   1400097c6:	sbb    eax,DWORD PTR [rcx]
   1400097c8:	push   rbx
   1400097c9:	je     0x14000983d
   1400097cb:	rex.XB push 0x574972
   1400097d1:	add    BYTE PTR [rsi],bl
   1400097d3:	add    DWORD PTR [rbx+0x74],edx
   1400097d6:	jb     0x14000981b
   1400097d8:	push   0x4f005772
   1400097dd:	add    DWORD PTR [rbx+0x74],edx
   1400097e0:	jb     0x140009835
   1400097e2:	je     0x140009856
   1400097e4:	rex.WB push r15
   1400097e6:	add    BYTE PTR [rax],al
   1400097e8:	push   rdx
   1400097e9:	add    DWORD PTR [rbx+0x74],edx
   1400097ec:	jb     0x140009841
   1400097ee:	je     0x140009862
   1400097f0:	push   rdi
   1400097f1:	add    BYTE PTR [rbx+0x48],dl
   1400097f4:	rex.WR push rdi
   1400097f6:	push   r8
   1400097f8:	rex.WB
   1400097f9:	cs fs ins BYTE PTR es:[rdi],dx
   1400097fc:	ins    BYTE PTR es:[rdi],dx
   1400097fd:	add    BYTE PTR [rsi],al
   1400097ff:	add    BYTE PTR [rdi+0x65],al
   140009802:	je     0x14000984a
   140009804:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   14000980c:	outs   dx,DWORD PTR ds:[rsi]
   14000980d:	outs   dx,BYTE PTR ds:[rsi]
   14000980e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009810:	outs   dx,WORD PTR ds:[rsi]
   140009812:	push   rbx
   140009813:	imul   edi,DWORD PTR [rdx+0x65],0x577845
   14000981a:	add    eax,DWORD PTR [rax]
   14000981c:	rex.RXB
   14000981d:	gs je  0x140009866
   140009820:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   140009828:	outs   dx,DWORD PTR ds:[rsi]
   140009829:	outs   dx,BYTE PTR ds:[rsi]
   14000982a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000982c:	outs   dx,WORD PTR ds:[rsi]
   14000982e:	rex.RB js 0x140009888
   140009831:	add    BYTE PTR [rax],dl
   140009833:	add    BYTE PTR [rsi+0x65],dl
   140009836:	jb     0x140009889
   140009838:	jne    0x14000989f
   14000983a:	jb     0x1400098b5
   14000983c:	push   rsi
   14000983d:	(bad)  
   14000983e:	ins    BYTE PTR es:[rdi],dx
   14000983f:	jne    0x1400098a6
   140009841:	push   rdi
   140009842:	add    BYTE PTR [rax],al
   140009844:	push   rsi
   140009845:	rex.RB push r10
   140009847:	push   rbx
   140009848:	rex.WB
   140009849:	rex.WRXB
   14000984a:	rex.WRX
   14000984b:	cs fs ins BYTE PTR es:[rdi],dx
   14000984e:	ins    BYTE PTR es:[rdi],dx
   14000984f:	add    BYTE PTR [rcx],bl
   140009851:	add    BYTE PTR [rdi+0x65],al
   140009854:	je     0x1400098ab
   140009856:	jae    0x1400098bd
   140009858:	jb     0x1400098a8
   14000985a:	(bad)  
   14000985b:	ins    DWORD PTR es:[rdi],dx
   14000985c:	gs rex.RB js 0x1400098b7
   140009860:	add    BYTE PTR [rax],al
   140009862:	push   rbx
   140009863:	jae    0x1400098d5
   140009865:	imul   eax,DWORD PTR [rbx+0x6c],0x6c642e69
   14000986c:	ins    BYTE PTR es:[rdi],dx
   14000986d:	add    BYTE PTR [rcx],al
   14000986f:	add    BYTE PTR [rsi+0x65],cl
   140009872:	je     0x1400098b5
   140009874:	jo     0x1400098df
   140009876:	rex.X jne 0x1400098df
   140009879:	data16 gs jb 0x1400098c3
   14000987d:	jb     0x1400098e4
   14000987f:	add    BYTE PTR gs:[rax],al
   140009882:	outs   dx,BYTE PTR ds:[rsi]
   140009883:	gs je  0x1400098fb
   140009886:	je     0x1400098f1
   140009888:	ins    BYTE PTR es:[rdi],dx
   140009889:	jae    0x1400098b9
   14000988b:	fs ins BYTE PTR es:[rdi],dx
   14000988d:	ins    BYTE PTR es:[rdi],dx
   14000988e:	add    BYTE PTR [rax],al
   140009890:	and    BYTE PTR [rax],al
   140009892:	rex.WRX
   140009893:	gs je  0x1400098e9
   140009896:	gs jb  0x14000990f
   140009899:	gs jb  0x1400098e3
   14000989c:	gs je  0x1400098e8
   14000989f:	outs   dx,BYTE PTR ds:[rsi]
   1400098a0:	outs   dx,WORD PTR ds:[rsi]
   1400098a2:	add    BYTE PTR [rax],al
   1400098a4:	jae    0x140009918
   1400098a6:	jbe    0x14000990b
   1400098a8:	ins    BYTE PTR es:[rdi],dx
   1400098a9:	imul   ebp,DWORD PTR [rsi],0x6c6c64
   1400098af:	add    BYTE PTR [rbp+0x5],ch
   1400098b2:	push   rbx
   1400098b3:	ins    BYTE PTR es:[rdi],dx
   1400098b4:	gs gs jo 0x1400098b8
   1400098b8:	pop    rsi
   1400098b9:	add    eax,0x55746553
   1400098be:	outs   dx,BYTE PTR ds:[rsi]
   1400098bf:	push   0x6c646e61
   1400098c4:	gs fs rex.RB js 0x14000992c
   1400098c9:	gs jo  0x140009940
   1400098cc:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400098d3:	gs jb  0x1400098d6
   1400098d6:	outs   dx,BYTE PTR ds:[rsi]
   1400098d7:	add    al,BYTE PTR [rdi+0x65]
   1400098da:	je     0x140009929
   1400098dc:	outs   dx,DWORD PTR ds:[rsi]
   1400098dd:	fs jne 0x14000994c
   1400098e0:	gs rex.W (bad) 
   1400098e3:	outs   dx,BYTE PTR ds:[rsi]
   1400098e4:	fs ins BYTE PTR es:[rdi],dx
   1400098e6:	gs push rdi
   1400098e8:	add    BYTE PTR [rax],al
   1400098ea:	ss add al,0x51
   1400098ed:	jne    0x140009954
   1400098ef:	jb     0x14000996a
   1400098f1:	push   rax
   1400098f2:	gs jb  0x14000995b
   1400098f5:	outs   dx,DWORD PTR ds:[rsi]
   1400098f6:	jb     0x140009965
   1400098f8:	(bad)  
   1400098f9:	outs   dx,BYTE PTR ds:[rsi]
   1400098fa:	movsxd esp,DWORD PTR [rbp+0x43]
   1400098fd:	outs   dx,DWORD PTR ds:[rsi]
   1400098fe:	jne    0x14000996e
   140009900:	je     0x140009967
   140009902:	jb     0x140009904
   140009904:	adc    DWORD PTR [rdx],eax
   140009906:	rex.RXB
   140009907:	gs je  0x14000994d
   14000990a:	jne    0x14000997e
   14000990c:	jb     0x140009973
   14000990e:	outs   dx,BYTE PTR ds:[rsi]
   14000990f:	je     0x140009961
   140009911:	jb     0x140009982
   140009913:	movsxd esp,DWORD PTR [rbp+0x73]
   140009916:	jae    0x140009961
   140009918:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b465e021
   14000991f:	rex.XB jne 0x140009994
   140009922:	jb     0x140009989
   140009924:	outs   dx,BYTE PTR ds:[rsi]
   140009925:	je     0x14000997b
   140009927:	push   0x64616572
   14000992c:	rex.WB
   14000992d:	add    BYTE PTR fs:[rax],al
   140009930:	loopne 0x140009934
   140009932:	rex.RXB
   140009933:	gs je  0x140009989
   140009936:	jns    0x1400099ab
   140009938:	je     0x14000999f
   14000993a:	ins    DWORD PTR es:[rdi],dx
   14000993b:	push   rsp
   14000993c:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140009943:	ins    BYTE PTR es:[rdi],dx
   140009944:	gs push rsp
   140009946:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   14000994d:	gs je  0x1400099a4
   140009950:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140009957:	je     0x140009959
   140009959:	add    BYTE PTR [rsi+0x686e5505],bl
   14000995f:	(bad)  
   140009960:	outs   dx,BYTE PTR ds:[rsi]
   140009961:	fs ins BYTE PTR es:[rdi],dx
   140009963:	gs fs rex.RB js 0x1400099cb
   140009968:	gs jo  0x1400099df
   14000996b:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140009972:	gs jb  0x140009975
   140009975:	add    BYTE PTR [rbp+rax*1+0x54],bh
   140009979:	gs jb  0x1400099e9
   14000997c:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140009983:	outs   dx,DWORD PTR ds:[rsi]
   140009984:	movsxd esp,DWORD PTR [rbp+0x73]
   140009987:	jae    0x140009989
   140009989:	add    BYTE PTR [rbx+0x5],dl
   14000998c:	push   rbx
   14000998d:	gs je  0x1400099e4
   140009990:	push   0x64616572
   140009995:	push   rbp
   140009996:	rex.WB
   140009997:	rex.WR (bad) 
   140009999:	outs   dx,BYTE PTR ds:[rsi]
   14000999a:	addr32 jne 0x1400099fe
   14000999d:	add    BYTE PTR gs:[eax+0x726f4601],ah
   1400099a5:	ins    DWORD PTR es:[rdi],dx
   1400099a6:	(bad)  
   1400099a7:	je     0x1400099f6
   1400099a9:	gs jae 0x140009a1f
   1400099ac:	(bad)  
   1400099ad:	addr32 gs push rdi
   1400099b0:	add    BYTE PTR [rax],al
   1400099b2:	mov    ecx,0x636f4c03
   1400099b7:	(bad)  
   1400099b8:	ins    BYTE PTR es:[rdi],dx
   1400099b9:	rex.RX jb 0x140009a21
   1400099bc:	gs add ah,ch
   1400099bf:	add    eax,0x65646957
   1400099c4:	rex.XB push 0x6f547261
   1400099ca:	rex.WRB jne 0x140009a39
   1400099cd:	je     0x140009a38
   1400099cf:	rex.X jns 0x140009a46
   1400099d2:	add    BYTE PTR gs:[rsi+0x2],al
   1400099d6:	rex.RXB
   1400099d7:	gs je  0x140009a20
   1400099da:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   1400099e2:	cmc    
   1400099e3:	add    DWORD PTR [rdi+0x65],eax
   1400099e6:	je     0x140009a2b
   1400099e8:	outs   dx,DWORD PTR ds:[rsi]
   1400099e9:	outs   dx,BYTE PTR ds:[rsi]
   1400099ea:	jae    0x140009a5b
   1400099ec:	ins    BYTE PTR es:[rdi],dx
   1400099ed:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   1400099f0:	fs add BYTE PTR gs:[rax],al
   1400099f4:	leave  
   1400099f5:	add    al,BYTE PTR [rdi+0x65]
   1400099f8:	je     0x140009a4d
   1400099fa:	je     0x140009a60
   1400099fc:	rex.W (bad) 
   1400099fe:	outs   dx,BYTE PTR ds:[rsi]
   1400099ff:	fs ins BYTE PTR es:[rdi],dx
   140009a01:	add    BYTE PTR gs:[rax],al
   140009a04:	sub    eax,0x74736c06
   140009a09:	jb     0x140009a77
   140009a0b:	outs   dx,BYTE PTR gs:[rsi]
   140009a0d:	add    BYTE PTR [r8],al
   140009a10:	cs (bad) 
   140009a12:	ins    BYTE PTR es:[rdi],dx
   140009a13:	jae    0x140009a89
   140009a15:	jb     0x140009a83
   140009a17:	outs   dx,BYTE PTR gs:[rsi]
   140009a19:	push   rdi
   140009a1a:	add    BYTE PTR [rax],al
   140009a1c:	xchg   ecx,eax
   140009a1d:	add    BYTE PTR [rbx+0x6f],al
   140009a20:	ins    DWORD PTR es:[rdi],dx
   140009a21:	jo     0x140009a84
   140009a23:	jb     0x140009a8a
   140009a25:	push   rbx
   140009a26:	je     0x140009a9a
   140009a28:	imul   ebp,DWORD PTR [rsi+0x67],0xf5000057
   140009a2f:	add    al,BYTE PTR [rdi+0x65]
   140009a32:	je     0x140009a88
   140009a34:	push   0x64616572
   140009a39:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140009a3b:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009a3e:	add    BYTE PTR gs:[rsi+0x6d6f4300],cl
   140009a45:	jo     0x140009aa8
   140009a47:	jb     0x140009aae
   140009a49:	push   rbx
   140009a4a:	je     0x140009abe
   140009a4c:	imul   ebp,DWORD PTR [rsi+0x67],0xff000041
   140009a53:	add    eax,0x74697257
   140009a58:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140009a5b:	outs   dx,BYTE PTR ds:[rsi]
   140009a5c:	jae    0x140009acd
   140009a5e:	ins    BYTE PTR es:[rdi],dx
   140009a5f:	gs push rdi
   140009a61:	add    BYTE PTR [rdi+0x1],dl
   140009a64:	rex.RB js 0x140009ad0
   140009a67:	je     0x140009ab9
   140009a69:	jb     0x140009ada
   140009a6b:	movsxd esp,DWORD PTR [rbp+0x73]
   140009a6e:	jae    0x140009a70
   140009a70:	stc    
   140009a71:	add    DWORD PTR [rdi+0x65],eax
   140009a74:	je     0x140009ab9
   140009a76:	outs   dx,DWORD PTR ds:[rsi]
   140009a77:	outs   dx,BYTE PTR ds:[rsi]
   140009a78:	jae    0x140009ae9
   140009a7a:	ins    BYTE PTR es:[rdi],dx
   140009a7b:	gs rex.WRXB jne 0x140009af3
   140009a7f:	jo     0x140009af6
   140009a81:	je     0x140009ac6
   140009a83:	push   rax
   140009a84:	add    BYTE PTR [rax],al
   140009a86:	fadd   DWORD PTR [rbx]
   140009a88:	rex.WRB jne 0x140009af7
   140009a8b:	je     0x140009af6
   140009a8d:	rex.X jns 0x140009b04
   140009a90:	gs push rsp
   140009a92:	outs   dx,DWORD PTR ds:[rsi]
   140009a93:	push   rdi
   140009a94:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   140009a9c:	jmp    0x140009aa2
   140009a9e:	push   rbx
   140009a9f:	gs je  0x140009ae5
   140009aa2:	outs   dx,DWORD PTR ds:[rsi]
   140009aa3:	outs   dx,BYTE PTR ds:[rsi]
   140009aa4:	jae    0x140009b15
   140009aa6:	ins    BYTE PTR es:[rdi],dx
   140009aa7:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140009aaa:	fs add BYTE PTR gs:[rax],al
   140009aae:	pop    rsp
   140009aaf:	add    al,0x52
   140009ab1:	gs (bad) 
   140009ab3:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x52045a00
   140009abd:	gs (bad) 
   140009abf:	rex.XB outs dx,DWORD PTR fs:[rsi]
   140009ac2:	outs   dx,BYTE PTR ds:[rsi]
   140009ac3:	jae    0x140009b34
   140009ac5:	ins    BYTE PTR es:[rdi],dx
   140009ac6:	gs push rdi
   140009ac8:	add    BYTE PTR [rax],al
   140009aca:	stos   DWORD PTR es:[rdi],eax
   140009acb:	add    al,BYTE PTR [rdi+0x65]
   140009ace:	je     0x140009b20
   140009ad0:	jb     0x140009b41
   140009ad2:	movsxd esp,DWORD PTR [rbp+0x73]
   140009ad5:	jae    0x140009b1f
   140009ad7:	gs (bad) 
   140009ad9:	jo     0x140009adb
   140009adb:	add    BYTE PTR [rax+0x3],al
   140009ade:	rex.W
   140009adf:	gs (bad) 
   140009ae1:	jo     0x140009b29
   140009ae3:	jb     0x140009b4a
   140009ae5:	add    BYTE PTR gs:[rax],al
   140009ae8:	add    rcx,QWORD PTR [rax+0x65]
   140009aec:	(bad)  
   140009aed:	jo     0x140009b45
   140009aef:	(bad)  
   140009af0:	ins    BYTE PTR es:[rdi],dx
   140009af1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x3c000065
   140009af9:	add    ecx,DWORD PTR [rax+0x65]
   140009afc:	(bad)  
   140009afd:	jo     0x140009b40
   140009aff:	ins    BYTE PTR es:[rdi],dx
   140009b00:	ins    BYTE PTR es:[rdi],dx
   140009b01:	outs   dx,DWORD PTR ds:[rsi]
   140009b02:	movsxd eax,DWORD PTR [rax]
   140009b04:	rex.XB add ecx,DWORD PTR [r8+0x65]
   140009b08:	(bad)  
   140009b09:	jo     0x140009b5d
   140009b0b:	gs rex.B ins BYTE PTR es:[rdi],dx
   140009b0e:	ins    BYTE PTR es:[rdi],dx
   140009b0f:	outs   dx,DWORD PTR ds:[rsi]
   140009b10:	movsxd eax,DWORD PTR [rax]
   140009b12:	add    r9d,DWORD PTR [r8+0x65]
   140009b16:	(bad)  
   140009b17:	jo     0x140009b6c
   140009b19:	imul   edi,DWORD PTR [rdx+0x65],0x1d70000
   140009b20:	rex.RXB
   140009b21:	gs je  0x140009b67
   140009b24:	outs   dx,DWORD PTR ds:[rsi]
   140009b25:	ins    DWORD PTR es:[rdi],dx
   140009b26:	jo     0x140009b9d
   140009b28:	je     0x140009b8f
   140009b2a:	jb     0x140009b7a
   140009b2c:	(bad)  
   140009b2d:	ins    DWORD PTR es:[rdi],dx
   140009b2e:	gs rex.RB js 0x140009b89
   140009b32:	add    BYTE PTR [rax],al
   140009b34:	push   0x2
   140009b36:	rex.RXB
   140009b37:	gs je  0x140009b87
   140009b3a:	outs   dx,DWORD PTR ds:[rsi]
   140009b3b:	fs jne 0x140009baa
   140009b3e:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   140009b48:	add    BYTE PTR [rax],al
   140009b4a:	add    DWORD PTR [rax],0x6f695f5f
   140009b50:	(bad)  
   140009b51:	pop    rdi
   140009b52:	data16 jne 0x140009bc3
   140009b55:	movsxd eax,DWORD PTR [rax]
   140009b57:	add    BYTE PTR [rdx+0x656d5f02],al
   140009b5d:	ins    DWORD PTR es:[rdi],dx
   140009b5e:	imul   esp,DWORD PTR [rbx+0x6d],0x69000070
   140009b65:	add    ebx,DWORD PTR [rdi+0x76]
   140009b68:	jae    0x140009bd8
   140009b6a:	ja     0x140009bdc
   140009b6c:	jb     0x140009bd7
   140009b6e:	outs   dx,BYTE PTR ds:[rsi]
   140009b6f:	je     0x140009bd7
   140009b71:	add    BYTE PTR [rip+0x72655f01],al        # 0x1b265fa78
   140009b77:	jb     0x140009be7
   140009b79:	outs   dx,DWORD PTR ds:[rsi]
   140009b7a:	add    BYTE PTR [rax],al
   140009b7c:	adc    eax,0x73637705
   140009b81:	je     0x140009bf2
   140009b83:	add    BYTE PTR fs:[rax],al
   140009b86:	sbb    BYTE PTR [rip+0x74736377],al        # 0x1b473ff03
   140009b8c:	outs   dx,DWORD PTR ds:[rsi]
   140009b8d:	ins    BYTE PTR es:[rdi],dx
   140009b8e:	add    BYTE PTR [rax],al
   140009b90:	sbb    eax,DWORD PTR [rip+0x74736377]        # 0x1b473ff0d
   140009b96:	outs   dx,DWORD PTR ds:[rsi]
   140009b97:	jne    0x140009c05
   140009b99:	add    BYTE PTR [rbx],bl
   140009b9b:	add    DWORD PTR [rdi+0x66],ebx
   140009b9e:	imul   ebp,DWORD PTR [rbp+riz*2+0x6e],0x155006f
   140009ba6:	pop    rdi
   140009ba7:	addr32 gs je 0x140009c0a
   140009bab:	outs   dx,DWORD PTR ds:[rsi]
   140009bac:	jae    0x140009c14
   140009bae:	push   0x6c646e61
   140009bb3:	add    BYTE PTR gs:[rax],al
   140009bb6:	rex.RB add al,0x66
   140009bb9:	jo     0x140009c2d
   140009bbb:	imul   ebp,DWORD PTR [rsi+0x74],0x4390066
   140009bc2:	data16 data16 ins BYTE PTR es:[rdi],dx
   140009bc5:	jne    0x140009c3a
   140009bc7:	push   0x5160000
   140009bcc:	ja     0x140009c31
   140009bce:	jae    0x140009c44
   140009bd0:	outs   dx,DWORD PTR ds:[rsi]
   140009bd1:	imul   eax,DWORD PTR [rax],0x0
   140009bd4:	xchg   esi,eax
   140009bd5:	add    al,0x6d
   140009bd7:	gs ins DWORD PTR es:[rdi],dx
   140009bd9:	jae    0x140009c40
   140009bdb:	je     0x140009bdd
	...

Disassembly of section .data:

000000014000a000 <.data>:
   14000a000:	add    DWORD PTR [rax],eax
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	add    BYTE PTR [rax],al
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	int    0x5d
   14000a012:	and    dl,dl
   14000a014:	data16 (bad) 
   14000a016:	(bad)  
   14000a017:	inc    DWORD PTR [rax]
   14000a019:	add    BYTE PTR [rax],al
   14000a01b:	add    BYTE PTR [rax],al
   14000a01d:	add    BYTE PTR [rax],al
   14000a01f:	add    BYTE PTR [rbp+0x0],al
   14000a022:	jbe    0x14000a024
   14000a024:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a028:	je     0x14000a02a
   14000a02a:	rex.XB add BYTE PTR [r10+0x0],sil
   14000a02e:	add    BYTE PTR gs:[rcx+0x0],ah
   14000a032:	je     0x14000a034
   14000a034:	add    BYTE PTR gs:[rax],al
   14000a037:	add    BYTE PTR [rcx+0x0],al
   14000a03a:	jo     0x14000a03c
   14000a03c:	jo     0x14000a03e
   14000a03e:	ins    BYTE PTR es:[rdi],dx
   14000a03f:	add    BYTE PTR [rcx+0x0],ch
   14000a042:	movsxd eax,DWORD PTR [rax]
   14000a044:	(bad)  
   14000a045:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000a049:	add    BYTE PTR [rdi+0x0],ch
   14000a04c:	outs   dx,BYTE PTR ds:[rsi]
	...

Disassembly of section .pdata:

000000014000b000 <.pdata>:
   14000b000:	or     BYTE PTR [rax],dl
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	nop
   14000b005:	adc    al,BYTE PTR [rax]
   14000b007:	add    BYTE PTR [rax],dl
   14000b009:	mov    eax,DWORD PTR [rax]
   14000b00b:	add    BYTE PTR [rax+0x38000012],bl
   14000b011:	adc    al,0x0
   14000b013:	add    BYTE PTR [rbx+rcx*4],ch
   14000b016:	add    BYTE PTR [rax],al
   14000b018:	adc    al,0x0
   14000b01b:	add    BYTE PTR [rax+0x4000001a],bh
   14000b021:	mov    eax,DWORD PTR [rax]
   14000b023:	add    al,al
   14000b025:	sbb    al,BYTE PTR [rax]
   14000b027:	add    BYTE PTR [rsi+0x1c],dh
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	push   0x7c00008b
   14000b031:	sbb    al,0x0
   14000b033:	add    BYTE PTR [rbp+0x7c000022],al
   14000b039:	mov    eax,DWORD PTR [rax]
   14000b03b:	add    BYTE PTR [rdx+riz*1+0x23060000],cl
   14000b042:	add    BYTE PTR [rax],al
   14000b044:	movabs al,ds:0xe60000230c00008b
   14000b04d:	and    eax,DWORD PTR [rax]
   14000b04f:	add    BYTE PTR [rax-0x13ffff75],ah
   14000b055:	and    eax,DWORD PTR [rax]
   14000b057:	add    BYTE PTR [rdi+0x24],cl
   14000b05a:	add    BYTE PTR [rax],al
   14000b05c:	movabs al,ds:0x730000245800008b
   14000b065:	add    BYTE PTR es:[rax],al
   14000b068:	test   al,0x8b
   14000b06a:	add    BYTE PTR [rax],al
   14000b06c:	mov    esp,0x32000026
   14000b071:	(bad)  
   14000b072:	add    BYTE PTR [rax],al
   14000b074:	mov    esp,0x3800008b
   14000b079:	(bad)  
   14000b07a:	add    BYTE PTR [rax],al
   14000b07c:	imul   ebp,DWORD PTR [rax],0x0
   14000b07f:	add    al,cl
   14000b081:	mov    eax,DWORD PTR [rax]
   14000b083:	add    BYTE PTR [rax+rbp*1+0x0],dh
   14000b087:	add    BYTE PTR [rdi],dl
   14000b089:	sub    DWORD PTR [rax],eax
   14000b08b:	add    ah,bl
   14000b08d:	mov    eax,DWORD PTR [rax]
   14000b08f:	add    BYTE PTR [rax],ah
   14000b091:	sub    DWORD PTR [rax],eax
   14000b093:	add    bh,dl
   14000b095:	sub    DWORD PTR [rax],eax
   14000b097:	add    ah,ah
   14000b099:	mov    eax,DWORD PTR [rax]
   14000b09b:	add    al,ah
   14000b09d:	sub    DWORD PTR [rax],eax
   14000b09f:	add    BYTE PTR [rdx],bl
   14000b0a1:	sub    al,BYTE PTR [rax]
   14000b0a3:	add    BYTE PTR [rbx+rcx*4+0x2a200000],bh
   14000b0aa:	add    BYTE PTR [rax],al
   14000b0ac:	(bad)  
   14000b0ad:	sub    al,BYTE PTR [rax]
   14000b0af:	add    ah,dh
   14000b0b1:	mov    eax,DWORD PTR [rax]
   14000b0b3:	add    ah,bl
   14000b0b5:	sub    al,BYTE PTR [rax]
   14000b0b7:	add    BYTE PTR [rsi],dl
   14000b0b9:	sub    al,0x0
   14000b0bb:	add    BYTE PTR [rsp+rcx*4],al
   14000b0be:	add    BYTE PTR [rax],al
   14000b0c0:	sbb    al,0x2c
   14000b0c2:	add    BYTE PTR [rax],al
   14000b0c4:	(bad)  
   14000b0c5:	sub    al,0x0
   14000b0c7:	add    BYTE PTR [rax],dl
   14000b0c9:	mov    WORD PTR [rax],es
   14000b0cb:	add    BYTE PTR [rbp*1+0x2f530000],dl
   14000b0d2:	add    BYTE PTR [rax],al
   14000b0d4:	and    BYTE PTR [rax+rax*1+0x2f5c00],cl
   14000b0db:	add    BYTE PTR [rsi],cl
   14000b0dd:	xor    BYTE PTR [rax],al
   14000b0df:	add    BYTE PTR [rsp+rcx*4],dh
   14000b0e2:	add    BYTE PTR [rax],al
   14000b0e4:	adc    al,0x30
   14000b0e6:	add    BYTE PTR [rax],al
   14000b0e8:	loop   0x14000b11a
   14000b0ea:	add    BYTE PTR [rax],al
   14000b0ec:	movabs al,ds:0xc0000030e800008b
   14000b0f5:	xor    DWORD PTR [rax],eax
   14000b0f7:	add    BYTE PTR [rbx+rcx*4+0x31c80000],bh
   14000b0fe:	add    BYTE PTR [rax],al
   14000b100:	sub    DWORD PTR [rdx],esi
   14000b102:	add    BYTE PTR [rax],al
   14000b104:	mov    esp,0x3000008b
   14000b109:	xor    al,BYTE PTR [rax]
   14000b10b:	add    BYTE PTR [rbp+0x33],cl
   14000b10e:	add    BYTE PTR [rax],al
   14000b110:	rex mov WORD PTR [rax],es
   14000b113:	add    BYTE PTR [rbx+rsi*1+0x0],dl
   14000b117:	add    bl,dh
   14000b119:	xor    eax,DWORD PTR [rax]
   14000b11b:	add    BYTE PTR [rsp+rcx*4+0x0],bl
   14000b11f:	add    ah,bh
   14000b121:	xor    eax,DWORD PTR [rax]
   14000b123:	add    BYTE PTR [rcx+0x5c000034],bl
   14000b129:	mov    WORD PTR [rax],es
   14000b12b:	add    BYTE PTR [rax-0x47ffffcc],ah
   14000b131:	xor    eax,0x8c700000
   14000b136:	add    BYTE PTR [rax],al
   14000b138:	shl    BYTE PTR [rip+0x360f0000],0x0        # 0x1760fb13f
   14000b13f:	add    BYTE PTR [rsp+rcx*4+0x36180000],cl
   14000b146:	add    BYTE PTR [rax],al
   14000b148:	(bad)  [rsi]
   14000b14a:	add    BYTE PTR [rax],al
   14000b14c:	pushf  
   14000b14d:	mov    WORD PTR [rax],es
   14000b14f:	add    ah,ah
   14000b151:	add    BYTE PTR ss:[rax],al
   14000b154:	gs (bad) 
   14000b156:	add    BYTE PTR [rax],al
   14000b158:	lods   al,BYTE PTR ds:[rsi]
   14000b159:	mov    WORD PTR [rax],es
   14000b15b:	add    BYTE PTR [rdi+rsi*1+0x0],ch
   14000b15f:	add    BYTE PTR [rdi],al
   14000b161:	cmp    BYTE PTR [rax],al
   14000b163:	add    BYTE PTR [rax+0x1000008b],ah
   14000b169:	cmp    BYTE PTR [rax],al
   14000b16b:	add    ah,bh
   14000b16d:	cmp    BYTE PTR [rax],al
   14000b16f:	add    BYTE PTR [rbx+rcx*4+0x39040000],bh
   14000b176:	add    BYTE PTR [rax],al
   14000b178:	mov    edi,DWORD PTR [rcx]
   14000b17a:	add    BYTE PTR [rax],al
   14000b17c:	mov    ah,0x8c
   14000b17e:	add    BYTE PTR [rax],al
   14000b180:	xchg   esp,eax
   14000b181:	cmp    DWORD PTR [rax],eax
   14000b183:	add    bh,bl
   14000b185:	cmp    DWORD PTR [rax],eax
   14000b187:	add    al,cl
   14000b189:	mov    WORD PTR [rax],es
   14000b18b:	add    al,ch
   14000b18d:	cmp    DWORD PTR [rax],eax
   14000b18f:	add    BYTE PTR [rbx],ah
   14000b191:	cmp    eax,0x8cd00000
   14000b196:	add    BYTE PTR [rax],al
   14000b198:	sub    al,0x3d
   14000b19a:	add    BYTE PTR [rax],al
   14000b19c:	sub    eax,0xec00003f
   14000b1a1:	mov    WORD PTR [rax],es
   14000b1a3:	add    BYTE PTR [rdi+rdi*1],dh
   14000b1a6:	add    BYTE PTR [rax],al
   14000b1a8:	rex.WB
   14000b1a9:	add    BYTE PTR [rax],al
   14000b1ac:	mov    ah,0x8c
   14000b1ae:	add    BYTE PTR [rax],al
   14000b1b0:	push   rax
   14000b1b1:	add    BYTE PTR [rax],al
   14000b1b4:	push   0x43
   14000b1b6:	add    BYTE PTR [rax],al
   14000b1b8:	add    BYTE PTR [rbp+0x43700000],cl
   14000b1be:	add    BYTE PTR [rax],al
   14000b1c0:	repnz rex.XB add BYTE PTR [r8],al
   14000b1c4:	mov    esp,0xf800008b
   14000b1c9:	rex.XB add BYTE PTR [r8],al
   14000b1cc:	rex.XB
   14000b1cd:	add    BYTE PTR [rax],r8b
   14000b1d0:	movabs al,ds:0xe60000444c00008b
   14000b1d9:	add    BYTE PTR [rax],r8b
   14000b1dc:	and    al,0x8d
   14000b1de:	add    BYTE PTR [rax],al
   14000b1e0:	in     al,dx
   14000b1e1:	add    BYTE PTR [rax],r8b
   14000b1e4:	in     al,dx
   14000b1e5:	add    BYTE PTR [r8],r8b
   14000b1e8:	lea    r8d,[rax]
   14000b1eb:	add    ah,dh
   14000b1ed:	add    BYTE PTR [r8],r8b
   14000b1f0:	rex.RX
   14000b1f1:	rex.RX add BYTE PTR [rax],r8b
   14000b1f4:	movabs al,ds:0xc30000464c00008b
   14000b1fd:	rex.RX add BYTE PTR [rax],r8b
   14000b200:	push   0xffffffffcc00008d
   14000b205:	rex.RX add BYTE PTR [rax],r8b
   14000b208:	sub    eax,0xbc000047
   14000b20d:	mov    eax,DWORD PTR [rax]
   14000b20f:	add    BYTE PTR [rdi+rax*2],dh
   14000b212:	add    BYTE PTR [rax],al
   14000b214:	(bad)  
   14000b215:	rex.WB add BYTE PTR [r8],al
   14000b218:	js     0x14000b1a7
   14000b21a:	add    BYTE PTR [rax],al
   14000b21c:	adc    BYTE PTR [rcx+0x0],cl
   14000b21f:	add    BYTE PTR [rdx],cl
   14000b221:	rex.WX add BYTE PTR [rax],al
   14000b224:	nop
   14000b225:	lea    eax,[rax]
   14000b227:	add    BYTE PTR [rax],dl
   14000b229:	rex.WX add BYTE PTR [rax],al
   14000b22c:	in     al,0x4a
   14000b22e:	add    BYTE PTR [rax],al
   14000b230:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b231:	lea    eax,[rax]
   14000b233:	add    ah,ch
   14000b235:	rex.WX add BYTE PTR [rax],al
   14000b238:	movabs al,ds:0xa800008db800004c
   14000b241:	rex.WR add BYTE PTR [rax],r8b
   14000b244:	or     DWORD PTR [rbp+0x0],0x0
   14000b248:	(bad)  
   14000b249:	lea    eax,[rax]
   14000b24b:	add    BYTE PTR [rbp+rcx*2+0x4f620000],cl
   14000b252:	add    BYTE PTR [rax],al
   14000b254:	loopne 0x14000b1e3
   14000b256:	add    BYTE PTR [rax],al
   14000b258:	push   0x3400004f
   14000b25d:	push   rax
   14000b25e:	add    BYTE PTR [rax],al
   14000b260:	movabs al,ds:0x550000503c00008b
   14000b269:	push   rsp
   14000b26a:	add    BYTE PTR [rax],al
   14000b26c:	hlt    
   14000b26d:	lea    eax,[rax]
   14000b26f:	add    BYTE PTR [rsp+rdx*2+0x0],bl
   14000b273:	add    BYTE PTR [rbp+0xc000057],dl
   14000b279:	mov    es,WORD PTR [rax]
   14000b27b:	add    BYTE PTR [rdi+rdx*2+0x58570000],bl
   14000b282:	add    BYTE PTR [rax],al
   14000b284:	mov    WORD PTR [rax+rax*1+0x586000],cs
   14000b28b:	add    BYTE PTR [rbx+rbx*2+0x0],al
   14000b28f:	add    BYTE PTR [rsi+rcx*4],ah
   14000b292:	add    BYTE PTR [rax],al
   14000b294:	rex.WR pop rbx
   14000b296:	add    BYTE PTR [rax],al
   14000b298:	cmp    esp,DWORD PTR [rcx+0x0]
   14000b29b:	add    BYTE PTR [rax-0x72],al
   14000b29e:	add    BYTE PTR [rax],al
   14000b2a0:	rex.R (bad) 
   14000b2a2:	add    BYTE PTR [rax],al
   14000b2a4:	rex.RB (bad) 
   14000b2a6:	add    BYTE PTR [rax],al
   14000b2a8:	(bad)  
   14000b2a9:	mov    es,WORD PTR [rax]
   14000b2ab:	add    BYTE PTR [rdx+riz*2+0x0],cl
   14000b2af:	add    BYTE PTR [rax+0x63],dh
   14000b2b2:	add    BYTE PTR [rax],al
   14000b2b4:	je     0x14000b244
   14000b2b6:	add    BYTE PTR [rax],al
   14000b2b8:	js     0x14000b31d
   14000b2ba:	add    BYTE PTR [rax],al
   14000b2bc:	(bad)  
   14000b2bd:	add    BYTE PTR fs:[rax],al
   14000b2c0:	pop    rsp
   14000b2c1:	mov    WORD PTR [rax],es
   14000b2c3:	add    BYTE PTR [rax],ch
   14000b2c5:	add    BYTE PTR fs:[rax],al
   14000b2c8:	mov    al,0x67
   14000b2ca:	add    BYTE PTR [rax],al
   14000b2cc:	mov    WORD PTR [rsi+0x67f80000],cs
   14000b2d2:	add    BYTE PTR [rax],al
   14000b2d4:	lea    ebp,[rax+0x0]
   14000b2d7:	add    BYTE PTR [rsp+rcx*4+0x0],bl
   14000b2db:	add    BYTE PTR [rax+rbp*2+0x690e0000],dl
   14000b2e2:	add    BYTE PTR [rax],al
   14000b2e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b2e5:	mov    es,WORD PTR [rax]
   14000b2e7:	add    BYTE PTR [rcx+rbp*2],dl
   14000b2ea:	add    BYTE PTR [rax],al
   14000b2ec:	in     al,dx
   14000b2ed:	imul   eax,DWORD PTR [rax],0x8eac00
   14000b2f3:	add    ah,dh
   14000b2f5:	imul   eax,DWORD PTR [rax],0x6a5500
   14000b2fb:	add    ah,al
   14000b2fd:	mov    es,WORD PTR [rax]
   14000b2ff:	add    BYTE PTR [rdx+rbp*2+0x0],bl
   14000b303:	add    cl,dl
   14000b305:	push   0x0
   14000b307:	add    BYTE PTR [rsp+rcx*4+0x6ad80000],bl
   14000b30e:	add    BYTE PTR [rax],al
   14000b310:	imul   eax,DWORD PTR gs:[rax],0x0
   14000b314:	ror    BYTE PTR [rsi+0x6b6c0000],1
   14000b31a:	add    BYTE PTR [rax],al
   14000b31c:	(bad)  
   14000b31d:	imul   eax,DWORD PTR [rax],0x0
   14000b320:	(bad)  
   14000b321:	lea    eax,[rax]
   14000b323:	add    ah,dl
   14000b325:	imul   eax,DWORD PTR [rax],0x0
   14000b328:	ss ins BYTE PTR es:[rdi],dx
   14000b32a:	add    BYTE PTR [rax],al
   14000b32c:	(bad)  
   14000b32d:	lea    eax,[rax]
   14000b32f:	add    BYTE PTR [rsp+rbp*2],bh
   14000b332:	add    BYTE PTR [rax],al
   14000b334:	movabs ds:0xa800008ee400006c,al
   14000b33d:	ins    BYTE PTR es:[rdi],dx
   14000b33e:	add    BYTE PTR [rax],al
   14000b340:	(bad)  
   14000b341:	ins    DWORD PTR es:[rdi],dx
   14000b342:	add    BYTE PTR [rax],al
   14000b344:	in     al,0x8e
   14000b346:	add    BYTE PTR [rax],al
   14000b348:	adc    al,0x6d
   14000b34a:	add    BYTE PTR [rax],al
   14000b34c:	shr    BYTE PTR [rbp+0x0],0x0
   14000b350:	lock mov es,WORD PTR [rax]
   14000b353:	add    al,cl
   14000b355:	ins    DWORD PTR es:[rdi],dx
   14000b356:	add    BYTE PTR [rax],al
   14000b358:	(bad)  
   14000b359:	outs   dx,BYTE PTR ds:[rsi]
   14000b35a:	add    BYTE PTR [rax],al
   14000b35c:	mov    WORD PTR [rax+rax*1+0x6e2400],cs
   14000b363:	add    BYTE PTR [rbx+0x6e],ah
   14000b366:	add    BYTE PTR [rax],al
   14000b368:	lods   al,BYTE PTR ds:[rsi]
   14000b369:	mov    WORD PTR [rax],es
   14000b36b:	add    BYTE PTR [rsi+rbp*2+0x0],ch
   14000b36f:	add    ch,cl
   14000b371:	outs   dx,BYTE PTR ds:[rsi]
   14000b372:	add    BYTE PTR [rax],al
   14000b374:	lods   al,BYTE PTR ds:[rsi]
   14000b375:	mov    WORD PTR [rax],es
   14000b377:	add    ah,dl
   14000b379:	outs   dx,BYTE PTR ds:[rsi]
   14000b37a:	add    BYTE PTR [rax],al
   14000b37c:	movabs ds:0xa800008f0000006f,al
   14000b385:	outs   dx,DWORD PTR ds:[rsi]
   14000b386:	add    BYTE PTR [rax],al
   14000b388:	imul   DWORD PTR [rdi+0x0]
   14000b38b:	add    BYTE PTR [rsp+rcx*4+0x70000000],ch
   14000b392:	add    BYTE PTR [rax],al
   14000b394:	iret   
   14000b395:	jo     0x14000b397
   14000b397:	add    BYTE PTR [rsp+rcx*4+0x70e00000],ch
   14000b39e:	add    BYTE PTR [rax],al
   14000b3a0:	sub    DWORD PTR [rcx+0x0],esi
   14000b3a3:	add    al,cl
   14000b3a5:	mov    WORD PTR [rax],es
   14000b3a7:	add    BYTE PTR [rax],dh
   14000b3a9:	jno    0x14000b3ab
   14000b3ab:	add    BYTE PTR [rdx],al
   14000b3ad:	jae    0x14000b3af
   14000b3af:	add    BYTE PTR [rax],bl
   14000b3b1:	pop    QWORD PTR [rax]
   14000b3b3:	add    BYTE PTR [rax],dl
   14000b3b5:	jae    0x14000b3b7
   14000b3b7:	add    BYTE PTR [rdx],ah
   14000b3b9:	jae    0x14000b3bb
   14000b3bb:	add    BYTE PTR [rsp+rcx*4+0x73400000],ch
   14000b3c2:	add    BYTE PTR [rax],al
   14000b3c4:	pop    rsi
   14000b3c5:	jae    0x14000b3c7
   14000b3c7:	add    BYTE PTR [rax-0x71],cl
   14000b3ca:	add    BYTE PTR [rax],al
   14000b3cc:	jo     0x14000b441
   14000b3ce:	add    BYTE PTR [rax],al
   14000b3d0:	test   eax,0xac000073
   14000b3d5:	mov    WORD PTR [rax],es
   14000b3d7:	add    BYTE PTR [rax-0x37ffff8d],dh
   14000b3dd:	jae    0x14000b3df
   14000b3df:	add    BYTE PTR [rsp+rcx*4+0x73dc0000],ch
   14000b3e6:	add    BYTE PTR [rax],al
   14000b3e8:	xor    BYTE PTR [rax+rax*1+0x0],dh
   14000b3ec:	rex.WR pop QWORD PTR [rax]
   14000b3ef:	add    BYTE PTR [rax],bh
   14000b3f1:	je     0x14000b3f3
   14000b3f3:	add    BYTE PTR [rbp+0x74],bh
   14000b3f6:	add    BYTE PTR [rax],al
   14000b3f8:	movabs al,ds:0x2d000074e000008b
   14000b401:	jne    0x14000b403
   14000b403:	add    BYTE PTR [rdi+rcx*4+0x0],ch
   14000b407:	add    BYTE PTR [rbp+rsi*2+0x0],dh
   14000b40b:	add    BYTE PTR [rsi+rsi*2+0x0],al
   14000b40f:	add    BYTE PTR [rax-0x73ffff71],bl
   14000b415:	jbe    0x14000b417
   14000b417:	add    al,al
   14000b419:	jbe    0x14000b41b
   14000b41b:	add    BYTE PTR [rax-0x2fffff75],ah
   14000b421:	jbe    0x14000b423
   14000b423:	add    BYTE PTR [rcx+0x78],al
   14000b426:	add    BYTE PTR [rax],al
   14000b428:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b429:	pop    QWORD PTR [rax]
   14000b42b:	add    BYTE PTR [rax+0x78],bl
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	jbe    0x14000b4aa
   14000b432:	add    BYTE PTR [rax],al
   14000b434:	movabs al,ds:0xa50000788800008b
   14000b43d:	js     0x14000b43f
   14000b43f:	add    BYTE PTR [rsp+rcx*4+0x78ac0000],ch
   14000b446:	add    BYTE PTR [rax],al
   14000b448:	vmwrite rax,QWORD PTR [rax]
   14000b44b:	add    BYTE PTR [rax+0x3000008b],ah
   14000b451:	jns    0x14000b453
   14000b453:	add    BYTE PTR [rdx],dh
   14000b455:	jns    0x14000b457
   14000b457:	add    BYTE PTR [rax+0x4600008f],dh
   14000b45d:	jns    0x14000b45f
   14000b45f:	add    BYTE PTR [rcx+rdi*2+0x0],ah
   14000b463:	add    BYTE PTR [rax+0x7000008f],dl
   14000b469:	jns    0x14000b46b
   14000b46b:	add    BYTE PTR [rax-0x6fffff87],dl
   14000b471:	pop    QWORD PTR [rax]
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c00c:	add    DWORD PTR [rax],eax
   14000c00e:	add    al,BYTE PTR [rax]
   14000c010:	call   0x16880c015
   14000c015:	add    BYTE PTR [rax],al
   14000c017:	adc    BYTE PTR [rax],0x0
   14000c01a:	add    BYTE PTR [rax],al
   14000c01c:	add    BYTE PTR [rax],al
   14000c01f:	sbb    BYTE PTR [rax],0x0
   14000c022:	add    BYTE PTR [rax],al
   14000c024:	pop    rax
   14000c025:	add    BYTE PTR [rax],al
   14000c027:	add    BYTE PTR [rax],0x0
	...
   14000c036:	add    DWORD PTR [rax],eax
   14000c038:	add    DWORD PTR [rax],eax
   14000c03a:	add    BYTE PTR [rax],al
   14000c03c:	jo     0x14000c03e
   14000c03e:	add    BYTE PTR [rax+0x0],al
	...
   14000c04c:	add    BYTE PTR [rax],al
   14000c04e:	add    DWORD PTR [rax],eax
   14000c050:	add    DWORD PTR [rax],eax
   14000c052:	add    BYTE PTR [rax],al
   14000c054:	mov    BYTE PTR [rax],al
   14000c056:	add    BYTE PTR [rax+0x0],al
	...
   14000c064:	add    BYTE PTR [rax],al
   14000c066:	add    DWORD PTR [rax],eax
   14000c068:	add    DWORD PTR [rax],eax
   14000c06a:	add    BYTE PTR [rax],al
   14000c06c:	movabs al,ds:0x800000
	...
   14000c07d:	add    BYTE PTR [rcx],al
   14000c07f:	add    BYTE PTR [rcx],cl
   14000c081:	add    al,0x0
   14000c083:	add    BYTE PTR [rax+0x0],bh
	...
   14000c095:	add    BYTE PTR [rcx],al
   14000c097:	add    BYTE PTR [rcx],cl
   14000c099:	add    al,0x0
   14000c09b:	add    al,cl
	...
   14000c0ad:	add    BYTE PTR [rcx],al
   14000c0af:	add    BYTE PTR [rcx],cl
   14000c0b1:	add    al,0x0
   14000c0b3:	add    al,bl
   14000c0b5:	add    BYTE PTR [rax],al
   14000c0b7:	add    BYTE PTR [rax-0x2fffff39],ah
	...
   14000c0c5:	add    BYTE PTR [rax],al
   14000c0c7:	add    al,al
   14000c0c9:	ret    
   14000c0ca:	add    BYTE PTR [rax],al
   14000c0cc:	fadd   QWORD PTR [rbx]
	...
   14000c0d6:	add    BYTE PTR [rax],al
   14000c0d8:	lock rol BYTE PTR [rax],0x0
   14000c0dc:	leave  
   14000c0dd:	add    al,BYTE PTR [rax]
	...
   14000c0e7:	add    BYTE PTR [rbx],al
   14000c0e9:	add    BYTE PTR [rbp+0x0],cl
   14000c0ec:	push   rbp
   14000c0ed:	add    BYTE PTR [rcx+0x0],cl
   14000c0f0:	cmp    al,0x3f
   14000c0f2:	js     0x14000c161
   14000c0f4:	ins    BYTE PTR es:[rdi],dx
   14000c0f5:	and    BYTE PTR [rsi+0x65],dh
   14000c0f8:	jb     0x14000c16d
   14000c0fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c101:	xor    BYTE PTR [rdx],ah
   14000c103:	and    BYTE PTR [rbp+0x6e],ah
   14000c106:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000c109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000c110:	rex.RX sub eax,0x73202238
   14000c116:	je     0x14000c179
   14000c118:	outs   dx,BYTE PTR ds:[rsi]
   14000c119:	fs (bad) 
   14000c11b:	ins    BYTE PTR es:[rdi],dx
   14000c11c:	outs   dx,DWORD PTR ds:[rsi]
   14000c11d:	outs   dx,BYTE PTR ds:[rsi]
   14000c11e:	gs cmp eax,0x73657922
   14000c124:	and    bh,BYTE PTR [rdi]
   14000c126:	ds or  eax,0x2d213c0a
   14000c12c:	sub    eax,0x706f4320
   14000c131:	jns    0x14000c1a5
   14000c133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000c13a:	sub    DWORD PTR [rax],esp
   14000c13c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c144:	je     0x14000c166
   14000c146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c148:	jb     0x14000c1ba
   14000c14a:	outs   dx,DWORD PTR ds:[rsi]
   14000c14b:	jb     0x14000c1ae
   14000c14d:	je     0x14000c1b8
   14000c14f:	outs   dx,DWORD PTR ds:[rsi]
   14000c150:	outs   dx,BYTE PTR ds:[rsi]
   14000c151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0dff84
   14000c157:	cmp    al,0x61
   14000c159:	jae    0x14000c1ce
   14000c15b:	gs ins DWORD PTR es:[rdi],dx
   14000c15d:	(bad)  
   14000c15e:	ins    BYTE PTR es:[rdi],dx
   14000c15f:	jns    0x14000c181
   14000c161:	js     0x14000c1d0
   14000c163:	ins    BYTE PTR es:[rdi],dx
   14000c164:	outs   dx,BYTE PTR ds:[rsi]
   14000c165:	jae    0x14000c1a4
   14000c167:	and    dh,BYTE PTR [rbp+0x72]
   14000c16a:	outs   dx,BYTE PTR ds:[rsi]
   14000c16b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c16e:	push   0x73616d65
   14000c173:	sub    eax,0x7263696d
   14000c178:	outs   dx,DWORD PTR ds:[rsi]
   14000c179:	jae    0x14000c1ea
   14000c17b:	data16 je 0x14000c1ab
   14000c17e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c181:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c184:	ins    DWORD PTR es:[rdi],dx
   14000c185:	cs jbe 0x14000c1b9
   14000c188:	and    ah,BYTE PTR [rax]
   14000c18a:	ins    DWORD PTR es:[rdi],dx
   14000c18b:	(bad)  
   14000c18c:	outs   dx,BYTE PTR ds:[rsi]
   14000c18d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000c194:	jb     0x14000c209
   14000c196:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c19d:	xor    BYTE PTR [rdx],ah
   14000c19f:	ds or  eax,0x73613c0a
   14000c1a5:	jae    0x14000c20c
   14000c1a7:	ins    DWORD PTR es:[rdi],dx
   14000c1a8:	(bad)  
   14000c1a9:	ins    BYTE PTR es:[rdi],dx
   14000c1aa:	jns    0x14000c1f5
   14000c1ac:	fs outs dx,BYTE PTR gs:[rsi]
   14000c1af:	je     0x14000c21a
   14000c1b1:	je     0x14000c22c
   14000c1b3:	or     eax,0x2020200a
   14000c1b8:	and    BYTE PTR [rsi+0x65],dh
   14000c1bb:	jb     0x14000c230
   14000c1bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000c1c4:	xor    DWORD PTR [rsi],ebp
   14000c1c6:	xor    BYTE PTR [rsi],ch
   14000c1c8:	xor    BYTE PTR [rdx],ah
   14000c1ca:	or     eax,0x2020200a
   14000c1cf:	and    BYTE PTR [rax+0x72],dh
   14000c1d2:	outs   dx,DWORD PTR ds:[rsi]
   14000c1d3:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c1d6:	jae    0x14000c247
   14000c1d8:	jb     0x14000c21b
   14000c1da:	jb     0x14000c23f
   14000c1dc:	push   0x63657469
   14000c1e1:	je     0x14000c258
   14000c1e3:	jb     0x14000c24a
   14000c1e5:	cmp    eax,0x646d6122
   14000c1ea:	ss xor al,0x22
   14000c1ed:	or     eax,0x2020200a
   14000c1f2:	and    BYTE PTR [rsi+0x61],ch
   14000c1f5:	ins    DWORD PTR es:[rdi],dx
   14000c1f6:	gs cmp eax,0x63694d22
   14000c1fc:	jb     0x14000c26d
   14000c1fe:	jae    0x14000c26f
   14000c200:	data16 je 0x14000c231
   14000c203:	push   rdi
   14000c204:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000c20b:	rex.XB ins DWORD PTR es:[rdi],dx
   14000c20d:	fs ins BYTE PTR es:[rdi],dx
   14000c20f:	imul   ebp,DWORD PTR [rsi+0x65],0x6576452e
   14000c216:	outs   dx,BYTE PTR ds:[rsi]
   14000c217:	je     0x14000c25c
   14000c219:	jb     0x14000c280
   14000c21b:	(bad)  
   14000c21c:	je     0x14000c283
   14000c21e:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020e22e
   14000c224:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000c228:	gs cmp eax,0x6e697722
   14000c22e:	xor    esi,DWORD PTR [rdx]
   14000c230:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3ef140
   14000c236:	or     bh,BYTE PTR [rsp+riz*2]
   14000c239:	gs jae 0x14000c29f
   14000c23c:	jb     0x14000c2a7
   14000c23e:	jo     0x14000c2b4
   14000c240:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576453e
   14000c247:	outs   dx,BYTE PTR ds:[rsi]
   14000c248:	je     0x14000c26a
   14000c24a:	rex.XB jb 0x14000c2b2
   14000c24d:	(bad)  
   14000c24e:	je     0x14000c2b5
   14000c250:	and    BYTE PTR [rip+0x65724320],ch        # 0x1a5730576
   14000c256:	(bad)  
   14000c257:	je     0x14000c2be
   14000c259:	jae    0x14000c27b
   14000c25b:	(bad)  
   14000c25c:	and    BYTE PTR [rbx+0x75],ah
   14000c25f:	jae    0x14000c2d5
   14000c261:	outs   dx,DWORD PTR ds:[rsi]
   14000c262:	ins    DWORD PTR es:[rdi],dx
   14000c263:	and    BYTE PTR [rbp+0x76],ah
   14000c266:	outs   dx,BYTE PTR gs:[rsi]
   14000c268:	je     0x14000c28a
   14000c26a:	imul   ebp,DWORD PTR [rsi+0x20],0x65206e61
   14000c271:	jbe    0x14000c2d8
   14000c273:	outs   dx,BYTE PTR ds:[rsi]
   14000c274:	je     0x14000c296
   14000c276:	ins    BYTE PTR es:[rdi],dx
   14000c277:	outs   dx,DWORD PTR ds:[rsi]
   14000c278:	addr32 cmp al,0x2f
   14000c27b:	fs gs jae 0x14000c2e2
   14000c27f:	jb     0x14000c2ea
   14000c281:	jo     0x14000c2f7
   14000c283:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14000c28a:	or     bh,BYTE PTR [rsp+rsi*2]
   14000c28d:	jb     0x14000c304
   14000c28f:	jae    0x14000c305
   14000c291:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c293:	outs   dx,WORD PTR ds:[rsi]
   14000c295:	and    BYTE PTR [rax+0x6d],bh
   14000c298:	ins    BYTE PTR es:[rdi],dx
   14000c299:	outs   dx,BYTE PTR ds:[rsi]
   14000c29a:	jae    0x14000c2d9
   14000c29c:	and    dh,BYTE PTR [rbp+0x72]
   14000c29f:	outs   dx,BYTE PTR ds:[rsi]
   14000c2a0:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c2a3:	push   0x73616d65
   14000c2a8:	sub    eax,0x7263696d
   14000c2ad:	outs   dx,DWORD PTR ds:[rsi]
   14000c2ae:	jae    0x14000c31f
   14000c2b0:	data16 je 0x14000c2e0
   14000c2b3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c2b6:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c2b9:	ins    DWORD PTR es:[rdi],dx
   14000c2ba:	cs jbe 0x14000c2f0
   14000c2bd:	and    bh,BYTE PTR [rsi]
   14000c2bf:	or     eax,0x2020200a
   14000c2c4:	and    BYTE PTR [rbx+rsi*2],bh
   14000c2c7:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000c2cb:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000c2d3:	and    BYTE PTR [rax],ah
   14000c2d5:	and    BYTE PTR [rax],ah
   14000c2d7:	and    BYTE PTR [rax],ah
   14000c2d9:	cmp    al,0x72
   14000c2db:	gs jno 0x14000c353
   14000c2de:	gs jae 0x14000c355
   14000c2e1:	gs fs push rax
   14000c2e4:	jb     0x14000c34f
   14000c2e6:	jbe    0x14000c351
   14000c2e8:	ins    BYTE PTR es:[rdi],dx
   14000c2e9:	gs addr32 gs jae 0x14000c32c
   14000c2ee:	or     eax,0x2020200a
   14000c2f3:	and    BYTE PTR [rax],ah
   14000c2f5:	and    BYTE PTR [rax],ah
   14000c2f7:	and    BYTE PTR [rax],ah
   14000c2f9:	and    BYTE PTR [rax],ah
   14000c2fb:	and    BYTE PTR [rdx+rsi*2],bh
   14000c2fe:	gs jno 0x14000c376
   14000c301:	gs jae 0x14000c378
   14000c304:	gs fs rex.RB js 0x14000c36e
   14000c309:	movsxd esi,DWORD PTR [rbp+0x74]
   14000c30c:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000c313:	ins    BYTE PTR es:[rdi],dx
   14000c314:	or     eax,0x2020200a
   14000c319:	and    BYTE PTR [rax],ah
   14000c31b:	and    BYTE PTR [rax],ah
   14000c31d:	and    BYTE PTR [rax],ah
   14000c31f:	and    BYTE PTR [rax],ah
   14000c321:	and    BYTE PTR [rax],ah
   14000c323:	and    BYTE PTR [rax],ah
   14000c325:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000c329:	gs ins BYTE PTR es:[rdi],dx
   14000c32b:	cmp    eax,0x49736122
   14000c330:	outs   dx,BYTE PTR ds:[rsi]
   14000c331:	jbe    0x14000c3a2
   14000c333:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000c337:	or     eax,0x2020200a
   14000c33c:	and    BYTE PTR [rax],ah
   14000c33e:	and    BYTE PTR [rax],ah
   14000c340:	and    BYTE PTR [rax],ah
   14000c342:	and    BYTE PTR [rax],ah
   14000c344:	and    BYTE PTR [rax],ah
   14000c346:	and    BYTE PTR [rax],ah
   14000c348:	and    BYTE PTR [rbp+0x69],dh
   14000c34b:	movsxd esp,DWORD PTR [r11+0x65]
   14000c34f:	jae    0x14000c3c4
   14000c351:	cmp    eax,0x6c616622
   14000c356:	jae    0x14000c3bd
   14000c358:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020e368
   14000c35e:	and    BYTE PTR [rax],ah
   14000c360:	and    BYTE PTR [rax],ah
   14000c362:	and    BYTE PTR [rax],ah
   14000c364:	and    BYTE PTR [rax],ah
   14000c366:	and    BYTE PTR [rdi],ch
   14000c368:	ds or  eax,0x2020200a
   14000c36e:	and    BYTE PTR [rax],ah
   14000c370:	and    BYTE PTR [rax],ah
   14000c372:	and    BYTE PTR [rdi+rbp*1],bh
   14000c375:	jb     0x14000c3dc
   14000c377:	jno    0x14000c3ee
   14000c379:	gs jae 0x14000c3f0
   14000c37c:	gs fs push rax
   14000c37f:	jb     0x14000c3ea
   14000c381:	jbe    0x14000c3ec
   14000c383:	ins    BYTE PTR es:[rdi],dx
   14000c384:	gs addr32 gs jae 0x14000c3c7
   14000c389:	or     eax,0x2020200a
   14000c38e:	and    BYTE PTR [rdi+rbp*1],bh
   14000c391:	jae    0x14000c3f8
   14000c393:	movsxd esi,DWORD PTR [rbp+0x72]
   14000c396:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000c39e:	je     0x14000c412
   14000c3a0:	jne    0x14000c415
   14000c3a2:	je     0x14000c3ed
   14000c3a4:	outs   dx,BYTE PTR ds:[rsi]
   14000c3a5:	outs   dx,WORD PTR ds:[rsi]
   14000c3a7:	ds or  eax,0x612f3c0a
   14000c3ad:	jae    0x14000c422
   14000c3af:	gs ins DWORD PTR es:[rdi],dx
   14000c3b1:	(bad)  
   14000c3b2:	ins    BYTE PTR es:[rdi],dx
   14000c3b3:	jns    0x14000c3f3
   14000c3b5:	or     eax,0xa0d0a
   14000c3ba:	add    BYTE PTR [rax],al
   14000c3bc:	add    BYTE PTR [rax],al
   14000c3be:	add    BYTE PTR [rax],al
   14000c3c0:	fadd   QWORD PTR [rbx]
   14000c3c2:	xor    al,0x0
   14000c3c4:	add    BYTE PTR [rax],al
   14000c3c6:	push   rsi
   14000c3c7:	add    BYTE PTR [rbx+0x0],dl
   14000c3ca:	pop    rdi
   14000c3cb:	add    BYTE PTR [rsi+0x0],dl
   14000c3ce:	add    BYTE PTR [r10+0x0],r10b
   14000c3d2:	push   rbx
   14000c3d3:	add    BYTE PTR [rcx+0x0],cl
   14000c3d6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000c3da:	pop    rdi
   14000c3db:	add    BYTE PTR [rcx+0x0],cl
   14000c3de:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000c3e2:	rex.WRXB add BYTE PTR [r8],r8b
   14000c3e5:	add    BYTE PTR [rax],al
   14000c3e7:	add    BYTE PTR [rbp+0xfeef04],bh
   14000c3ed:	add    BYTE PTR [rcx],al
   14000c3ef:	add    BYTE PTR [rax],al
   14000c3f1:	add    BYTE PTR [rdx],cl
   14000c3f3:	add    BYTE PTR [rax],al
   14000c3f5:	add    BYTE PTR [rax],bpl
   14000c3f8:	add    BYTE PTR [rax],al
   14000c3fa:	or     al,BYTE PTR [rax]
   14000c3fc:	add    BYTE PTR [rax+0x0],al
   14000c3ff:	sub    BYTE PTR [rdi],bh
   14000c401:	add    BYTE PTR [rax],al
   14000c403:	add    BYTE PTR [rax],al
   14000c405:	add    BYTE PTR [rax],al
   14000c407:	add    BYTE PTR [rax+rax*1],al
   14000c40a:	add    al,0x0
   14000c40c:	add    DWORD PTR [rax],eax
	...
   14000c41a:	add    BYTE PTR [rax],al
   14000c41c:	cmp    al,BYTE PTR [rbx]
   14000c41e:	add    BYTE PTR [rax],al
   14000c420:	add    DWORD PTR [rax],eax
   14000c422:	push   rbx
   14000c423:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000c427:	add    BYTE PTR [rcx+0x0],ch
   14000c42a:	outs   dx,BYTE PTR ds:[rsi]
   14000c42b:	add    BYTE PTR [rdi+0x0],ah
   14000c42e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c432:	ins    BYTE PTR es:[rdi],dx
   14000c433:	add    BYTE PTR [rbp+0x0],ah
   14000c436:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c43a:	data16 add BYTE PTR [rdi+0x0],ch
   14000c43e:	add    BYTE PTR [rax],al
   14000c440:	(bad)  
   14000c441:	add    eax,DWORD PTR [rax]
   14000c443:	add    BYTE PTR [rcx],al
   14000c445:	add    BYTE PTR [rax],dh
   14000c447:	add    BYTE PTR [rax+rax*1],dh
   14000c44a:	xor    BYTE PTR [rax],al
   14000c44c:	cmp    DWORD PTR [rax],eax
   14000c44e:	xor    BYTE PTR [rax],al
   14000c450:	xor    al,0x0
   14000c452:	rex.X add BYTE PTR [rax],sil
   14000c455:	add    BYTE PTR [rax],al
   14000c457:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c45b:	add    BYTE PTR [rcx],al
   14000c45d:	add    BYTE PTR [rbx+0x0],al
   14000c460:	outs   dx,DWORD PTR ds:[rsi]
   14000c461:	add    BYTE PTR [rbp+0x0],ch
   14000c464:	jo     0x14000c466
   14000c466:	(bad)  
   14000c467:	add    BYTE PTR [rsi+0x0],ch
   14000c46a:	jns    0x14000c46c
   14000c46c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c470:	ins    DWORD PTR es:[rdi],dx
   14000c471:	add    BYTE PTR [rbp+0x0],ah
   14000c474:	add    BYTE PTR [rax],al
   14000c476:	add    BYTE PTR [rax],al
   14000c478:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c47c:	movsxd eax,DWORD PTR [rax]
   14000c47e:	jb     0x14000c480
   14000c480:	outs   dx,DWORD PTR ds:[rsi]
   14000c481:	add    BYTE PTR [rbx+0x0],dh
   14000c484:	outs   dx,DWORD PTR ds:[rsi]
   14000c485:	add    BYTE PTR [rsi+0x0],ah
   14000c488:	je     0x14000c48a
   14000c48a:	and    BYTE PTR [rax],al
   14000c48c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c490:	jb     0x14000c492
   14000c492:	jo     0x14000c494
   14000c494:	outs   dx,DWORD PTR ds:[rsi]
   14000c495:	add    BYTE PTR [rdx+0x0],dh
   14000c498:	(bad)  
   14000c499:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c49d:	add    BYTE PTR [rdi+0x0],ch
   14000c4a0:	outs   dx,BYTE PTR ds:[rsi]
   14000c4a1:	add    BYTE PTR [rax],al
   14000c4a3:	add    BYTE PTR [rax+rax*1+0x10036],dl
   14000c4aa:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c4ae:	ins    BYTE PTR es:[rdi],dx
   14000c4af:	add    BYTE PTR [rbp+0x0],ah
   14000c4b2:	add    BYTE PTR [rbp+0x0],r12b
   14000c4b6:	jae    0x14000c4b8
   14000c4b8:	movsxd eax,DWORD PTR [rax]
   14000c4ba:	jb     0x14000c4bc
   14000c4bc:	imul   eax,DWORD PTR [rax],0x740070
   14000c4c2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c4c8:	add    BYTE PTR [rax],al
   14000c4ca:	add    BYTE PTR [rax],al
   14000c4cc:	add    BYTE PTR [r14+0x0],r14b
   14000c4d0:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c4d4:	je     0x14000c4d6
   14000c4d6:	and    BYTE PTR [rax],al
   14000c4d8:	rex.XB add BYTE PTR [r10+0x0],sil
   14000c4dc:	add    BYTE PTR gs:[rcx+0x0],ah
   14000c4e0:	je     0x14000c4e2
   14000c4e2:	add    BYTE PTR gs:[rax],ah
   14000c4e5:	add    BYTE PTR [rip+0x43002000],ch        # 0x18300e4eb
   14000c4eb:	add    BYTE PTR [rdx+0x0],dh
   14000c4ee:	add    BYTE PTR gs:[rcx+0x0],ah
   14000c4f2:	je     0x14000c4f4
   14000c4f4:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c4f8:	and    BYTE PTR [rax],al
   14000c4fa:	(bad)  
   14000c4fb:	add    BYTE PTR [rax],ah
   14000c4fd:	add    BYTE PTR [rbx+0x0],ah
   14000c500:	jne    0x14000c502
   14000c502:	jae    0x14000c504
   14000c504:	je     0x14000c506
   14000c506:	outs   dx,DWORD PTR ds:[rsi]
   14000c507:	add    BYTE PTR [rbp+0x0],ch
   14000c50a:	and    BYTE PTR [rax],al
   14000c50c:	add    BYTE PTR gs:[rsi+0x0],dh
   14000c510:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c514:	je     0x14000c516
   14000c516:	and    BYTE PTR [rax],al
   14000c518:	imul   eax,DWORD PTR [rax],0x20006e
   14000c51e:	(bad)  
   14000c51f:	add    BYTE PTR [rsi+0x0],ch
   14000c522:	and    BYTE PTR [rax],al
   14000c524:	add    BYTE PTR gs:[rsi+0x0],dh
   14000c528:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c52c:	je     0x14000c52e
   14000c52e:	and    BYTE PTR [rax],al
   14000c530:	ins    BYTE PTR es:[rdi],dx
   14000c531:	add    BYTE PTR [rdi+0x0],ch
   14000c534:	add    BYTE PTR [eax],al
   14000c537:	add    BYTE PTR [rsi+0x0],ah
   14000c53a:	and    eax,DWORD PTR [rax]
   14000c53c:	add    DWORD PTR [rax],eax
   14000c53e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c542:	ins    BYTE PTR es:[rdi],dx
   14000c543:	add    BYTE PTR [rbp+0x0],ah
   14000c546:	push   rsi
   14000c547:	add    BYTE PTR [rbp+0x0],ah
   14000c54a:	jb     0x14000c54c
   14000c54c:	jae    0x14000c54e
   14000c54e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c554:	add    BYTE PTR [rax],al
   14000c556:	add    BYTE PTR [rax],al
   14000c558:	xor    DWORD PTR [rax],eax
   14000c55a:	xor    BYTE PTR [rax],al
   14000c55c:	add    BYTE PTR cs:[rax],dh
   14000c55f:	add    BYTE PTR [rsi],ch
   14000c561:	add    BYTE PTR [rcx],dh
   14000c563:	add    BYTE PTR [rax],dh
   14000c565:	add    BYTE PTR [rdx],dh
   14000c567:	add    BYTE PTR [rax+rax*1],dh
   14000c56a:	xor    BYTE PTR [rax],al
   14000c56c:	add    BYTE PTR cs:[rcx],dh
   14000c56f:	add    BYTE PTR [rsi],dh
   14000c571:	add    BYTE PTR [rbx],dh
   14000c573:	add    BYTE PTR [rax],bh
   14000c575:	add    BYTE PTR [rax+rax*1],dh
   14000c578:	and    BYTE PTR [rax],al
   14000c57a:	sub    BYTE PTR [rax],al
   14000c57c:	je     0x14000c57e
   14000c57e:	push   0x2e003100
   14000c583:	add    BYTE PTR [rcx],dh
   14000c585:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700f58b
   14000c58b:	add    BYTE PTR [rax],dh
   14000c58d:	add    BYTE PTR [rcx],bh
   14000c58f:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700f695
   14000c595:	add    BYTE PTR [rax],dh
   14000c597:	add    BYTE PTR [rax],dh
   14000c599:	add    BYTE PTR [rcx],ch
   14000c59b:	add    BYTE PTR [rax],al
   14000c59d:	add    BYTE PTR [rax],al
   14000c59f:	add    BYTE PTR [rax+0x0],al
   14000c5a2:	adc    BYTE PTR [rax],al
   14000c5a4:	add    DWORD PTR [rax],eax
   14000c5a6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c5aa:	je     0x14000c5ac
   14000c5ac:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c5b0:	outs   dx,BYTE PTR ds:[rsi]
   14000c5b1:	add    BYTE PTR [rcx+0x0],ah
   14000c5b4:	ins    BYTE PTR es:[rdi],dx
   14000c5b5:	add    BYTE PTR [rsi+0x0],cl
   14000c5b8:	(bad)  
   14000c5b9:	add    BYTE PTR [rbp+0x0],ch
   14000c5bc:	add    BYTE PTR gs:[rax],al
   14000c5bf:	add    BYTE PTR [rbp+0x0],ah
   14000c5c2:	jbe    0x14000c5c4
   14000c5c4:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c5c8:	je     0x14000c5ca
   14000c5ca:	movsxd eax,DWORD PTR [rax]
   14000c5cc:	jb     0x14000c5ce
   14000c5ce:	add    BYTE PTR gs:[rcx+0x0],ah
   14000c5d2:	je     0x14000c5d4
   14000c5d4:	add    BYTE PTR gs:[rsi],ch
   14000c5d7:	add    BYTE PTR [rbp+0x0],ah
   14000c5da:	js     0x14000c5dc
   14000c5dc:	add    BYTE PTR gs:[rax],al
   14000c5df:	add    BYTE PTR [rax+0x1002e00],al
   14000c5e5:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c5e9:	add    BYTE PTR [rdi+0x0],ah
   14000c5ec:	(bad)  
   14000c5ed:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c5f1:	add    BYTE PTR [rdi+0x0],ch
   14000c5f4:	jo     0x14000c5f6
   14000c5f6:	jns    0x14000c5f8
   14000c5f8:	jb     0x14000c5fa
   14000c5fa:	imul   eax,DWORD PTR [rax],0x680067
   14000c600:	je     0x14000c602
   14000c602:	add    BYTE PTR [rax],al
   14000c604:	test   eax,0x4d002000
   14000c609:	add    BYTE PTR [rcx+0x0],ch
   14000c60c:	movsxd eax,DWORD PTR [rax]
   14000c60e:	jb     0x14000c610
   14000c610:	outs   dx,DWORD PTR ds:[rsi]
   14000c611:	add    BYTE PTR [rbx+0x0],dh
   14000c614:	outs   dx,DWORD PTR ds:[rsi]
   14000c615:	add    BYTE PTR [rsi+0x0],ah
   14000c618:	je     0x14000c61a
   14000c61a:	and    BYTE PTR [rax],al
   14000c61c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c620:	jb     0x14000c622
   14000c622:	jo     0x14000c624
   14000c624:	outs   dx,DWORD PTR ds:[rsi]
   14000c625:	add    BYTE PTR [rdx+0x0],dh
   14000c628:	(bad)  
   14000c629:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c62d:	add    BYTE PTR [rdi+0x0],ch
   14000c630:	outs   dx,BYTE PTR ds:[rsi]
   14000c631:	add    BYTE PTR [rsi],ch
   14000c633:	add    BYTE PTR [rax],ah
   14000c635:	add    BYTE PTR [rcx+0x0],al
   14000c638:	ins    BYTE PTR es:[rdi],dx
   14000c639:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c63d:	add    BYTE PTR [rdx+0x0],dh
   14000c640:	imul   eax,DWORD PTR [rax],0x680067
   14000c646:	je     0x14000c648
   14000c648:	jae    0x14000c64a
   14000c64a:	and    BYTE PTR [rax],al
   14000c64c:	jb     0x14000c64e
   14000c64e:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c652:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c656:	jbe    0x14000c658
   14000c658:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000c65d:	add    BYTE PTR [rax],al
   14000c65f:	add    BYTE PTR [rdx+0x0],al
   14000c662:	or     eax,0x4f000100
   14000c667:	add    BYTE PTR [rdx+0x0],dh
   14000c66a:	imul   eax,DWORD PTR [rax],0x690067
   14000c670:	outs   dx,BYTE PTR ds:[rsi]
   14000c671:	add    BYTE PTR [rcx+0x0],ah
   14000c674:	ins    BYTE PTR es:[rdi],dx
   14000c675:	add    BYTE PTR [rsi+0x0],al
   14000c678:	imul   eax,DWORD PTR [rax],0x65006c
   14000c67e:	outs   dx,BYTE PTR ds:[rsi]
   14000c67f:	add    BYTE PTR [rcx+0x0],ah
   14000c682:	ins    DWORD PTR es:[rdi],dx
   14000c683:	add    BYTE PTR [rbp+0x0],ah
   14000c686:	add    BYTE PTR [rax],al
   14000c688:	add    BYTE PTR gs:[rsi+0x0],dh
   14000c68c:	movsxd eax,DWORD PTR [rax]
   14000c68e:	jb     0x14000c690
   14000c690:	add    BYTE PTR gs:[rcx+0x0],ah
   14000c694:	je     0x14000c696
   14000c696:	add    BYTE PTR gs:[rsi],ch
   14000c699:	add    BYTE PTR [rbp+0x0],ah
   14000c69c:	js     0x14000c69e
   14000c69e:	add    BYTE PTR gs:[rax],al
   14000c6a1:	add    BYTE PTR [rax],al
   14000c6a3:	add    BYTE PTR [rdx+0x0],ch
   14000c6a6:	and    eax,0x50000100
   14000c6ab:	add    BYTE PTR [rdx+0x0],dh
   14000c6ae:	outs   dx,DWORD PTR ds:[rsi]
   14000c6af:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c6b3:	add    BYTE PTR [rbx+0x0],ah
   14000c6b6:	je     0x14000c6b8
   14000c6b8:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c6bc:	ins    DWORD PTR es:[rdi],dx
   14000c6bd:	add    BYTE PTR [rbp+0x0],ah
   14000c6c0:	add    BYTE PTR [rax],al
   14000c6c2:	add    BYTE PTR [rax],al
   14000c6c4:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c6c8:	movsxd eax,DWORD PTR [rax]
   14000c6ca:	jb     0x14000c6cc
   14000c6cc:	outs   dx,DWORD PTR ds:[rsi]
   14000c6cd:	add    BYTE PTR [rbx+0x0],dh
   14000c6d0:	outs   dx,DWORD PTR ds:[rsi]
   14000c6d1:	add    BYTE PTR [rsi+0x0],ah
   14000c6d4:	je     0x14000c6d6
   14000c6d6:	scas   al,BYTE PTR es:[rdi]
   14000c6d7:	add    BYTE PTR [rax],ah
   14000c6d9:	add    BYTE PTR [rdi+0x0],dl
   14000c6dc:	imul   eax,DWORD PTR [rax],0x64006e
   14000c6e2:	outs   dx,DWORD PTR ds:[rsi]
   14000c6e3:	add    BYTE PTR [rdi+0x0],dh
   14000c6e6:	jae    0x14000c6e8
   14000c6e8:	scas   al,BYTE PTR es:[rdi]
   14000c6e9:	add    BYTE PTR [rax],ah
   14000c6eb:	add    BYTE PTR [rdi+0x0],cl
   14000c6ee:	jo     0x14000c6f0
   14000c6f0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c6f4:	(bad)  
   14000c6f5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c6f9:	add    BYTE PTR [rsi+0x0],ch
   14000c6fc:	add    BYTE PTR [eax],ah
   14000c6ff:	add    BYTE PTR [rbx+0x0],dl
   14000c702:	jns    0x14000c704
   14000c704:	jae    0x14000c706
   14000c706:	je     0x14000c708
   14000c708:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c70c:	add    BYTE PTR [rax],al
   14000c70e:	add    BYTE PTR [rax],al
   14000c710:	rex.RX add BYTE PTR [rcx],r10b
   14000c713:	add    BYTE PTR [rcx],al
   14000c715:	add    BYTE PTR [rax+0x0],dl
   14000c718:	jb     0x14000c71a
   14000c71a:	outs   dx,DWORD PTR ds:[rsi]
   14000c71b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c71f:	add    BYTE PTR [rbx+0x0],ah
   14000c722:	je     0x14000c724
   14000c724:	push   rsi
   14000c725:	add    BYTE PTR [rbp+0x0],ah
   14000c728:	jb     0x14000c72a
   14000c72a:	jae    0x14000c72c
   14000c72c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c732:	add    BYTE PTR [rax],al
   14000c734:	xor    DWORD PTR [rax],eax
   14000c736:	xor    BYTE PTR [rax],al
   14000c738:	add    BYTE PTR cs:[rax],dh
   14000c73b:	add    BYTE PTR [rsi],ch
   14000c73d:	add    BYTE PTR [rcx],dh
   14000c73f:	add    BYTE PTR [rax],dh
   14000c741:	add    BYTE PTR [rdx],dh
   14000c743:	add    BYTE PTR [rax+rax*1],dh
   14000c746:	xor    BYTE PTR [rax],al
   14000c748:	add    BYTE PTR cs:[rcx],dh
   14000c74b:	add    BYTE PTR [rsi],dh
   14000c74d:	add    BYTE PTR [rbx],dh
   14000c74f:	add    BYTE PTR [rax],bh
   14000c751:	add    BYTE PTR [rax+rax*1],dh
   14000c754:	add    BYTE PTR [rax],al
   14000c756:	add    BYTE PTR [rax],al
   14000c758:	add    BYTE PTR [rax],r8b
   14000c75b:	add    BYTE PTR [rcx],al
   14000c75d:	add    BYTE PTR [rsi+0x0],dl
   14000c760:	(bad)  
   14000c761:	add    BYTE PTR [rdx+0x0],dh
   14000c764:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c768:	ins    BYTE PTR es:[rdi],dx
   14000c769:	add    BYTE PTR [rbp+0x0],ah
   14000c76c:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c770:	data16 add BYTE PTR [rdi+0x0],ch
   14000c774:	add    BYTE PTR [rax],al
   14000c776:	add    BYTE PTR [rax],al
   14000c778:	and    al,0x0
   14000c77a:	add    al,0x0
   14000c77c:	add    BYTE PTR [rax],al
   14000c77e:	push   rsp
   14000c77f:	add    BYTE PTR [rdx+0x0],dh
   14000c782:	(bad)  
   14000c783:	add    BYTE PTR [rsi+0x0],ch
   14000c786:	jae    0x14000c788
   14000c788:	ins    BYTE PTR es:[rdi],dx
   14000c789:	add    BYTE PTR [rcx+0x0],ah
   14000c78c:	je     0x14000c78e
   14000c78e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c794:	add    BYTE PTR [rax],al
   14000c796:	add    BYTE PTR [rax],al
   14000c798:	or     DWORD PTR [rax+rsi*4],eax
   14000c79b:	add    al,0x0
   14000c79d:	add    BYTE PTR [rax],al
   14000c79f:	add    ch,cl
   14000c7a1:	dec    ch
   14000c7a3:	(bad)  
   14000c7a4:	rol    BYTE PTR [rax],1
   14000c7a6:	add    BYTE PTR [rax],al
   14000c7a8:	add    BYTE PTR [rax],al
   14000c7aa:	add    DWORD PTR [rax],eax
   14000c7ac:	add    BYTE PTR [rax],al
   14000c7ae:	add    BYTE PTR [rax],al
   14000c7b0:	adc    DWORD PTR [rax],eax
   14000c7b2:	add    BYTE PTR [rax],al
   14000c7b4:	add    BYTE PTR [rax],al
   14000c7b6:	add    BYTE PTR [rax],al
   14000c7b8:	add    al,BYTE PTR [rax]
   14000c7ba:	add    BYTE PTR [rax],al
   14000c7bc:	cmp    ebx,DWORD PTR [rdi-0x51d13a8e]
   14000c7c2:	xchg   esi,eax
   14000c7c3:	or     ah,cl
   14000c7c5:	lock mov bh,0xac
   14000c7c8:	xchg   ebx,eax
   14000c7c9:	js     0x14000c81f
   14000c7cb:	test   DWORD PTR [rbp+0x7365dc3b],0xdfc39433
   14000c7d5:	rol    DWORD PTR [rax+0x61],1
   14000c7d8:	mov    dh,0xe8
   14000c7da:	loop   0x14000c7b0
	...
   14000c7f4:	mov    BYTE PTR [rax],al
   14000c7f6:	add    BYTE PTR [rax],al
   14000c7f8:	(bad)  
   14000c7f9:	add    BYTE PTR [rax],al
   14000c7fb:	add    BYTE PTR [rax+0x8000000],bl
   14000c801:	add    BYTE PTR [rax],al
   14000c803:	add    BYTE PTR [rax+0xe000000],ah
   14000c809:	add    BYTE PTR [rax],al
   14000c80b:	add    BYTE PTR [rax+0xc000000],dh
	...
   14000c819:	add    BYTE PTR [rax],al
   14000c81b:	add    al,al
   14000c81d:	add    BYTE PTR [rax],al
   14000c81f:	add    BYTE PTR [rax+rax*1],cl
   14000c822:	add    BYTE PTR [rax],al
   14000c824:	add    BYTE PTR [rax],al
   14000c826:	add    BYTE PTR [rax],al
   14000c828:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000c82c:	rex.WB add BYTE PTR [r8],al
	...
   14000c837:	add    BYTE PTR [rax],dl
   14000c839:	add    BYTE PTR [rax],al
   14000c83b:	add    BYTE PTR [rax],bl
   14000c83d:	add    BYTE PTR [rax],al
   14000c83f:	add    BYTE PTR [rbp+0x0],cl
   14000c842:	push   rbp
   14000c843:	add    BYTE PTR [rcx+0x0],cl
	...
   14000c84e:	add    BYTE PTR [rax],al
   14000c850:	(bad)  
   14000c851:	add    BYTE PTR [rax],al
   14000c853:	add    BYTE PTR [rbx],cl
   14000c855:	add    BYTE PTR [rax],al
   14000c857:	add    BYTE PTR [rax],dl
   14000c859:	add    BYTE PTR [rax],al
   14000c85b:	add    BYTE PTR [rax],al
   14000c85d:	add    BYTE PTR [rax],al
   14000c85f:	add    BYTE PTR [rbp+0x0],ah
   14000c862:	outs   dx,BYTE PTR ds:[rsi]
   14000c863:	add    BYTE PTR [rip+0x53005500],ch        # 0x193011d69
   14000c869:	add    BYTE PTR [rax],al
   14000c86b:	add    BYTE PTR [rax],al
   14000c86d:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000d000 <.reloc>:
   14000d000:	add    BYTE PTR [rax+0x200000],al
   14000d006:	add    BYTE PTR [rax],al
   14000d008:	mov    eax,0xd0a3c0a3
   14000d00d:	movabs ds:0xa428a420a3f0a3e8,eax
   14000d016:	test   al,0xa8
   14000d018:	shr    BYTE PTR [rax-0x572f5738],0x0
	...
