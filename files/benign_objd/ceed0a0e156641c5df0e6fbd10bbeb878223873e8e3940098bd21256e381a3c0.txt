
ceed0a0e156641c5df0e6fbd10bbeb878223873e8e3940098bd21256e381a3c0.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x4805]        # 0x405820
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x4806]        # 0x405830
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x4809]        # 0x405840
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x47cc]        # 0x405810
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x467f]        # 0x4056d0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x47a1]        # 0x405800
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x403e40
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x402da0
  401081:	mov    rdx,QWORD PTR [rip+0x46d8]        # 0x405760
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x46be]        # 0x405750
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x4724]        # 0x4057c0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x465b]        # 0x405700
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x402980
  4010af:	mov    rax,QWORD PTR [rip+0x45ca]        # 0x405680
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x403e40
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x1b59]        # 0x402c80
  401127:	call   0x402c70
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4685]        # 0x4057f0
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x4615]        # 0x4057b0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x403e58
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x463a]        # 0x405800
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x453b]        # 0x405730
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x81d6]        # 0x4093d8
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x4517]        # 0x405740
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x445c]        # 0x4056c0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x402f90
  40127d:	lea    rcx,[rip+0x22ac]        # 0x403530
  401284:	call   QWORD PTR [rip+0x8146]        # 0x4093d0
  40128a:	mov    rdx,QWORD PTR [rip+0x448f]        # 0x405720
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x403440
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x403e80
  4012a5:	call   0x402d80
  4012aa:	mov    rax,QWORD PTR [rip+0x441f]        # 0x4056d0
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x4431]        # 0x4056f0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 0x404000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x403d98
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x403d60
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x403d98
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x403d90
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x402950
  4013bb:	mov    rax,QWORD PTR [rip+0x431e]        # 0x4056e0
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x40189a
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x403e28
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x4309]        # 0x405740
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x403e30
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x431d]        # 0x405780
  401463:	mov    rcx,QWORD PTR [rip+0x4306]        # 0x405770
  40146a:	call   0x403e08
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7ee7]        # 0x409380
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x42f9]        # 0x4057a0
  4014a7:	mov    rcx,QWORD PTR [rip+0x42e2]        # 0x405790
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x403e08
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x403db8
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x4325]        # 0x405800
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x402990
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x42f5]        # 0x405800
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x402990
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbp
  401531:	mov    rbp,rsp
  401534:	sub    rsp,0x20
  401538:	mov    QWORD PTR [rbp+0x10],rcx
  40153c:	mov    rax,QWORD PTR [rip+0x7eed]        # 0x409430
  401543:	call   rax
  401545:	add    rax,0x60
  401549:	mov    r8,QWORD PTR [rbp+0x10]
  40154d:	lea    rdx,[rip+0x3aac]        # 0x405000
  401554:	mov    rcx,rax
  401557:	call   0x403db0
  40155c:	mov    rax,QWORD PTR [rip+0x7ecd]        # 0x409430
  401563:	call   rax
  401565:	add    rax,0x60
  401569:	mov    r9,rax
  40156c:	mov    r8d,0x21
  401572:	mov    edx,0x1
  401577:	lea    rcx,[rip+0x3aca]        # 0x405048
  40157e:	call   0x403da0
  401583:	mov    rax,QWORD PTR [rip+0x7ea6]        # 0x409430
  40158a:	call   rax
  40158c:	add    rax,0x60
  401590:	mov    r9,rax
  401593:	mov    r8d,0x2a
  401599:	mov    edx,0x1
  40159e:	lea    rcx,[rip+0x3acb]        # 0x405070
  4015a5:	call   0x403da0
  4015aa:	mov    rax,QWORD PTR [rip+0x7e7f]        # 0x409430
  4015b1:	call   rax
  4015b3:	add    rax,0x60
  4015b7:	mov    r9,rax
  4015ba:	mov    r8d,0x2e
  4015c0:	mov    edx,0x1
  4015c5:	lea    rcx,[rip+0x3ad4]        # 0x4050a0
  4015cc:	call   0x403da0
  4015d1:	mov    rax,QWORD PTR [rip+0x7e58]        # 0x409430
  4015d8:	call   rax
  4015da:	add    rax,0x60
  4015de:	mov    r9,rax
  4015e1:	mov    r8d,0x2d
  4015e7:	mov    edx,0x1
  4015ec:	lea    rcx,[rip+0x3add]        # 0x4050d0
  4015f3:	call   0x403da0
  4015f8:	mov    rax,QWORD PTR [rip+0x7e31]        # 0x409430
  4015ff:	call   rax
  401601:	add    rax,0x60
  401605:	mov    r9,rax
  401608:	mov    r8d,0x3c
  40160e:	mov    edx,0x1
  401613:	lea    rcx,[rip+0x3ae6]        # 0x405100
  40161a:	call   0x403da0
  40161f:	mov    rax,QWORD PTR [rip+0x7e0a]        # 0x409430
  401626:	call   rax
  401628:	add    rax,0x60
  40162c:	mov    r9,rax
  40162f:	mov    r8d,0x26
  401635:	mov    edx,0x1
  40163a:	lea    rcx,[rip+0x3aff]        # 0x405140
  401641:	call   0x403da0
  401646:	mov    rax,QWORD PTR [rip+0x7de3]        # 0x409430
  40164d:	call   rax
  40164f:	add    rax,0x60
  401653:	mov    r9,rax
  401656:	mov    r8d,0x29
  40165c:	mov    edx,0x1
  401661:	lea    rcx,[rip+0x3b00]        # 0x405168
  401668:	call   0x403da0
  40166d:	mov    rax,QWORD PTR [rip+0x7dbc]        # 0x409430
  401674:	call   rax
  401676:	add    rax,0x60
  40167a:	mov    r9,rax
  40167d:	mov    r8d,0x41
  401683:	mov    edx,0x1
  401688:	lea    rcx,[rip+0x3b09]        # 0x405198
  40168f:	call   0x403da0
  401694:	mov    rax,QWORD PTR [rip+0x7d95]        # 0x409430
  40169b:	call   rax
  40169d:	add    rax,0x60
  4016a1:	lea    rdx,[rip+0x3b38]        # 0x4051e0
  4016a8:	mov    rcx,rax
  4016ab:	call   0x403db0
  4016b0:	mov    ecx,0x1
  4016b5:	call   0x403db8
  4016ba:	nop
  4016bb:	push   rbp
  4016bc:	mov    rbp,rsp
  4016bf:	sub    rsp,0x30
  4016c3:	mov    QWORD PTR [rbp+0x10],rcx
  4016c7:	mov    QWORD PTR [rbp+0x18],rdx
  4016cb:	mov    DWORD PTR [rbp+0x20],r8d
  4016cf:	mov    QWORD PTR [rbp+0x28],r9
  4016d3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4016da:	mov    rax,QWORD PTR [rbp+0x18]
  4016de:	mov    eax,DWORD PTR [rax]
  4016e0:	cdqe   
  4016e2:	lea    rdx,[rax*8+0x0]
  4016ea:	mov    rax,QWORD PTR [rbp+0x28]
  4016ee:	add    rax,rdx
  4016f1:	mov    rax,QWORD PTR [rax]
  4016f4:	add    rax,0x2
  4016f8:	movzx  eax,BYTE PTR [rax]
  4016fb:	movsx  eax,al
  4016fe:	sub    eax,0x30
  401701:	cmp    eax,0x9
  401704:	ja     0x40174d
  401706:	mov    rax,QWORD PTR [rbp+0x18]
  40170a:	mov    eax,DWORD PTR [rax]
  40170c:	cdqe   
  40170e:	lea    rdx,[rax*8+0x0]
  401716:	mov    rax,QWORD PTR [rbp+0x28]
  40171a:	add    rax,rdx
  40171d:	mov    rax,QWORD PTR [rax]
  401720:	lea    rcx,[rax+0x2]
  401724:	lea    rax,[rbp-0x10]
  401728:	mov    r8d,0xa
  40172e:	mov    rdx,rax
  401731:	call   0x403d48
  401736:	mov    DWORD PTR [rbp-0x4],eax
  401739:	mov    rax,QWORD PTR [rbp+0x18]
  40173d:	mov    eax,DWORD PTR [rax]
  40173f:	lea    edx,[rax+0x1]
  401742:	mov    rax,QWORD PTR [rbp+0x18]
  401746:	mov    DWORD PTR [rax],edx
  401748:	jmp    0x4017fd
  40174d:	mov    rax,QWORD PTR [rbp+0x18]
  401751:	mov    eax,DWORD PTR [rax]
  401753:	cdqe   
  401755:	lea    rdx,[rax*8+0x0]
  40175d:	mov    rax,QWORD PTR [rbp+0x28]
  401761:	add    rax,rdx
  401764:	mov    rax,QWORD PTR [rax]
  401767:	add    rax,0x2
  40176b:	movzx  eax,BYTE PTR [rax]
  40176e:	test   al,al
  401770:	jne    0x401780
  401772:	mov    rax,QWORD PTR [rbp+0x18]
  401776:	mov    eax,DWORD PTR [rax]
  401778:	add    eax,0x1
  40177b:	cmp    eax,DWORD PTR [rbp+0x20]
  40177e:	jl     0x40178b
  401780:	mov    rcx,QWORD PTR [rbp+0x10]
  401784:	call   0x401530
  401789:	jmp    0x4017fd
  40178b:	mov    rax,QWORD PTR [rbp+0x18]
  40178f:	mov    eax,DWORD PTR [rax]
  401791:	cdqe   
  401793:	add    rax,0x1
  401797:	lea    rdx,[rax*8+0x0]
  40179f:	mov    rax,QWORD PTR [rbp+0x28]
  4017a3:	add    rax,rdx
  4017a6:	mov    rax,QWORD PTR [rax]
  4017a9:	lea    rdx,[rbp-0x10]
  4017ad:	mov    r8d,0x0
  4017b3:	mov    rcx,rax
  4017b6:	call   0x403d48
  4017bb:	mov    DWORD PTR [rbp-0x4],eax
  4017be:	mov    rax,QWORD PTR [rbp+0x18]
  4017c2:	mov    eax,DWORD PTR [rax]
  4017c4:	cdqe   
  4017c6:	add    rax,0x1
  4017ca:	lea    rdx,[rax*8+0x0]
  4017d2:	mov    rax,QWORD PTR [rbp+0x28]
  4017d6:	add    rax,rdx
  4017d9:	mov    rdx,QWORD PTR [rax]
  4017dc:	mov    rax,QWORD PTR [rbp-0x10]
  4017e0:	cmp    rdx,rax
  4017e3:	jne    0x4017ee
  4017e5:	mov    rcx,QWORD PTR [rbp+0x10]
  4017e9:	call   0x401530
  4017ee:	mov    rax,QWORD PTR [rbp+0x18]
  4017f2:	mov    eax,DWORD PTR [rax]
  4017f4:	lea    edx,[rax+0x2]
  4017f7:	mov    rax,QWORD PTR [rbp+0x18]
  4017fb:	mov    DWORD PTR [rax],edx
  4017fd:	mov    rax,QWORD PTR [rbp-0x10]
  401801:	test   rax,rax
  401804:	je     0x401874
  401806:	mov    rax,QWORD PTR [rbp-0x10]
  40180a:	movzx  eax,BYTE PTR [rax]
  40180d:	test   al,al
  40180f:	je     0x401874
  401811:	mov    rax,QWORD PTR [rbp-0x10]
  401815:	add    rax,0x1
  401819:	movzx  eax,BYTE PTR [rax]
  40181c:	test   al,al
  40181e:	jne    0x401874
  401820:	mov    rax,QWORD PTR [rbp-0x10]
  401824:	movzx  eax,BYTE PTR [rax]
  401827:	movsx  eax,al
  40182a:	sub    eax,0x47
  40182d:	cmp    eax,0x26
  401830:	ja     0x401867
  401832:	mov    eax,eax
  401834:	lea    rdx,[rax*4+0x0]
  40183c:	lea    rax,[rip+0x39e1]        # 0x405224
  401843:	mov    eax,DWORD PTR [rdx+rax*1]
  401846:	movsxd rdx,eax
  401849:	lea    rax,[rip+0x39d4]        # 0x405224
  401850:	add    rax,rdx
  401853:	jmp    rax
  401855:	shl    DWORD PTR [rbp-0x4],0x1e
  401859:	jmp    0x401872
  40185b:	shl    DWORD PTR [rbp-0x4],0x14
  40185f:	jmp    0x401872
  401861:	shl    DWORD PTR [rbp-0x4],0xa
  401865:	jmp    0x401872
  401867:	mov    rcx,QWORD PTR [rbp+0x10]
  40186b:	call   0x401530
  401870:	jmp    0x401891
  401872:	jmp    0x401891
  401874:	mov    rax,QWORD PTR [rbp-0x10]
  401878:	test   rax,rax
  40187b:	je     0x401891
  40187d:	mov    rax,QWORD PTR [rbp-0x10]
  401881:	movzx  eax,BYTE PTR [rax]
  401884:	test   al,al
  401886:	je     0x401891
  401888:	mov    rcx,QWORD PTR [rbp+0x10]
  40188c:	call   0x401530
  401891:	mov    eax,DWORD PTR [rbp-0x4]
  401894:	add    rsp,0x30
  401898:	pop    rbp
  401899:	ret    
  40189a:	push   rbp
  40189b:	push   rbx
  40189c:	mov    eax,0x2138
  4018a1:	call   0x403d00
  4018a6:	sub    rsp,rax
  4018a9:	lea    rbp,[rsp+0x80]
  4018b1:	mov    DWORD PTR [rbp+0x20d0],ecx
  4018b7:	mov    QWORD PTR [rbp+0x20d8],rdx
  4018be:	call   0x402950
  4018c3:	mov    QWORD PTR [rbp+0x20a0],0x400
  4018ce:	mov    QWORD PTR [rbp+0x2058],0x0
  4018d9:	mov    DWORD PTR [rbp+0x2024],0x1
  4018e3:	mov    DWORD PTR [rbp+0x2088],0xffffffff
  4018ed:	mov    DWORD PTR [rbp+0x2084],0x0
  4018f7:	mov    DWORD PTR [rbp+0x207c],0x0
  401901:	mov    DWORD PTR [rbp+0x2078],0x0
  40190b:	mov    DWORD PTR [rbp+0x2074],0x0
  401915:	mov    DWORD PTR [rbp+0x2070],0x0
  40191f:	mov    DWORD PTR [rbp+0x206c],0x0
  401929:	mov    DWORD PTR [rbp+0x2068],0x0
  401933:	mov    DWORD PTR [rbp+0x2060],0x40000000
  40193d:	mov    DWORD PTR [rbp-0x2c],0x0
  401944:	mov    rax,QWORD PTR [rbp+0x20d8]
  40194b:	mov    rax,QWORD PTR [rax]
  40194e:	mov    edx,0x2f
  401953:	mov    rcx,rax
  401956:	call   0x403d50
  40195b:	mov    QWORD PTR [rbp+0x20a8],rax
  401962:	cmp    QWORD PTR [rbp+0x20a8],0x0
  40196a:	je     0x401976
  40196c:	add    QWORD PTR [rbp+0x20a8],0x1
  401974:	jmp    0x401987
  401976:	mov    rax,QWORD PTR [rbp+0x20d8]
  40197d:	mov    rax,QWORD PTR [rax]
  401980:	mov    QWORD PTR [rbp+0x20a8],rax
  401987:	jmp    0x401b49
  40198c:	mov    eax,DWORD PTR [rbp+0x2024]
  401992:	cdqe   
  401994:	lea    rdx,[rax*8+0x0]
  40199c:	mov    rax,QWORD PTR [rbp+0x20d8]
  4019a3:	add    rax,rdx
  4019a6:	mov    rax,QWORD PTR [rax]
  4019a9:	lea    rdx,[rip+0x3910]        # 0x4052c0
  4019b0:	mov    rcx,rax
  4019b3:	call   0x403d68
  4019b8:	test   eax,eax
  4019ba:	jne    0x4019da
  4019bc:	mov    DWORD PTR [rbp+0x207c],0x1
  4019c6:	mov    eax,DWORD PTR [rbp+0x2024]
  4019cc:	add    eax,0x1
  4019cf:	mov    DWORD PTR [rbp+0x2024],eax
  4019d5:	jmp    0x401b49
  4019da:	mov    eax,DWORD PTR [rbp+0x2024]
  4019e0:	cdqe   
  4019e2:	lea    rdx,[rax*8+0x0]
  4019ea:	mov    rax,QWORD PTR [rbp+0x20d8]
  4019f1:	add    rax,rdx
  4019f4:	mov    rax,QWORD PTR [rax]
  4019f7:	lea    rdx,[rip+0x38c5]        # 0x4052c3
  4019fe:	mov    rcx,rax
  401a01:	call   0x403d68
  401a06:	test   eax,eax
  401a08:	jne    0x401a3e
  401a0a:	mov    rax,QWORD PTR [rbp+0x20a8]
  401a11:	mov    DWORD PTR [rsp+0x20],0xe
  401a19:	mov    r9d,0x8
  401a1f:	mov    r8d,0x1
  401a25:	mov    rdx,rax
  401a28:	lea    rcx,[rip+0x3899]        # 0x4052c8
  401a2f:	call   0x403d80
  401a34:	mov    ecx,0x0
  401a39:	call   0x403db8
  401a3e:	mov    eax,DWORD PTR [rbp+0x2024]
  401a44:	cdqe   
  401a46:	lea    rdx,[rax*8+0x0]
  401a4e:	mov    rax,QWORD PTR [rbp+0x20d8]
  401a55:	add    rax,rdx
  401a58:	mov    rax,QWORD PTR [rax]
  401a5b:	lea    rdx,[rip+0x388b]        # 0x4052ed
  401a62:	mov    rcx,rax
  401a65:	call   0x403d68
  401a6a:	test   eax,eax
  401a6c:	jne    0x401a89
  401a6e:	mov    DWORD PTR [rbp-0x2c],0x1
  401a75:	mov    eax,DWORD PTR [rbp+0x2024]
  401a7b:	add    eax,0x1
  401a7e:	mov    DWORD PTR [rbp+0x2024],eax
  401a84:	jmp    0x401b49
  401a89:	mov    eax,DWORD PTR [rbp+0x2024]
  401a8f:	cdqe   
  401a91:	lea    rdx,[rax*8+0x0]
  401a99:	mov    rax,QWORD PTR [rbp+0x20d8]
  401aa0:	add    rax,rdx
  401aa3:	mov    rax,QWORD PTR [rax]
  401aa6:	add    rax,0x1
  401aaa:	movzx  eax,BYTE PTR [rax]
  401aad:	cmp    al,0x62
  401aaf:	jne    0x401ae3
  401ab1:	mov    rcx,QWORD PTR [rbp+0x20d8]
  401ab8:	lea    rdx,[rbp+0x2024]
  401abf:	mov    rax,QWORD PTR [rbp+0x20a8]
  401ac6:	mov    r9,rcx
  401ac9:	mov    r8d,DWORD PTR [rbp+0x20d0]
  401ad0:	mov    rcx,rax
  401ad3:	call   0x4016bb
  401ad8:	cdqe   
  401ada:	mov    QWORD PTR [rbp+0x20a0],rax
  401ae1:	jmp    0x401b49
  401ae3:	mov    eax,DWORD PTR [rbp+0x2024]
  401ae9:	cdqe   
  401aeb:	lea    rdx,[rax*8+0x0]
  401af3:	mov    rax,QWORD PTR [rbp+0x20d8]
  401afa:	add    rax,rdx
  401afd:	mov    rax,QWORD PTR [rax]
  401b00:	add    rax,0x1
  401b04:	movzx  eax,BYTE PTR [rax]
  401b07:	cmp    al,0x6d
  401b09:	jne    0x401b3a
  401b0b:	mov    rcx,QWORD PTR [rbp+0x20d8]
  401b12:	lea    rdx,[rbp+0x2024]
  401b19:	mov    rax,QWORD PTR [rbp+0x20a8]
  401b20:	mov    r9,rcx
  401b23:	mov    r8d,DWORD PTR [rbp+0x20d0]
  401b2a:	mov    rcx,rax
  401b2d:	call   0x4016bb
  401b32:	mov    DWORD PTR [rbp+0x2060],eax
  401b38:	jmp    0x401b49
  401b3a:	mov    rax,QWORD PTR [rbp+0x20a8]
  401b41:	mov    rcx,rax
  401b44:	call   0x401530
  401b49:	mov    eax,DWORD PTR [rbp+0x2024]
  401b4f:	cmp    eax,DWORD PTR [rbp+0x20d0]
  401b55:	jge    0x401b7f
  401b57:	mov    eax,DWORD PTR [rbp+0x2024]
  401b5d:	cdqe   
  401b5f:	lea    rdx,[rax*8+0x0]
  401b67:	mov    rax,QWORD PTR [rbp+0x20d8]
  401b6e:	add    rax,rdx
  401b71:	mov    rax,QWORD PTR [rax]
  401b74:	movzx  eax,BYTE PTR [rax]
  401b77:	cmp    al,0x2d
  401b79:	je     0x40198c
  401b7f:	mov    eax,DWORD PTR [rbp+0x2024]
  401b85:	cmp    eax,DWORD PTR [rbp+0x20d0]
  401b8b:	jl     0x401b9c
  401b8d:	mov    rax,QWORD PTR [rbp+0x20a8]
  401b94:	mov    rcx,rax
  401b97:	call   0x401530
  401b9c:	mov    eax,DWORD PTR [rbp+0x2024]
  401ba2:	lea    edx,[rax+0x1]
  401ba5:	mov    DWORD PTR [rbp+0x2024],edx
  401bab:	cdqe   
  401bad:	lea    rdx,[rax*8+0x0]
  401bb5:	mov    rax,QWORD PTR [rbp+0x20d8]
  401bbc:	add    rax,rdx
  401bbf:	mov    rax,QWORD PTR [rax]
  401bc2:	mov    QWORD PTR [rbp+0x2050],rax
  401bc9:	mov    ecx,DWORD PTR [rbp+0x2078]
  401bcf:	mov    rdx,QWORD PTR [rbp+0x2050]
  401bd6:	lea    rax,[rbp+0xfe0]
  401bdd:	mov    r8d,ecx
  401be0:	mov    rcx,rax
  401be3:	call   0x403d70
  401be8:	mov    rdx,QWORD PTR [rbp+0x2050]
  401bef:	lea    rax,[rbp+0xfe0]
  401bf6:	mov    rcx,rax
  401bf9:	call   0x403d68
  401bfe:	mov    DWORD PTR [rbp+0x204c],eax
  401c04:	lea    rax,[rbp+0xfe0]
  401c0b:	mov    r8d,0x0
  401c11:	mov    edx,0x8000
  401c16:	mov    rcx,rax
  401c19:	mov    rax,QWORD PTR [rip+0x7888]        # 0x4094a8
  401c20:	call   rax
  401c22:	mov    DWORD PTR [rbp+0x208c],eax
  401c28:	cmp    DWORD PTR [rbp+0x208c],0x0
  401c2f:	jns    0x401c4a
  401c31:	lea    rax,[rbp+0xfe0]
  401c38:	mov    rcx,rax
  401c3b:	call   0x403d88
  401c40:	mov    ecx,0x1
  401c45:	call   0x403db8
  401c4a:	lea    rdx,[rbp+0x1fe0]
  401c51:	mov    eax,DWORD PTR [rbp+0x208c]
  401c57:	mov    ecx,eax
  401c59:	mov    rax,QWORD PTR [rip+0x7820]        # 0x409480
  401c60:	call   rax
  401c62:	test   eax,eax
  401c64:	jns    0x401c7c
  401c66:	lea    rcx,[rip+0x3690]        # 0x4052fd
  401c6d:	call   0x403d88
  401c72:	mov    ecx,0x1
  401c77:	call   0x403db8
  401c7c:	mov    rax,QWORD PTR [rbp+0x1ff8]
  401c83:	mov    DWORD PTR [rbp+0x2064],eax
  401c89:	mov    eax,DWORD PTR [rbp+0x2064]
  401c8f:	mov    DWORD PTR [rbp+0x2048],eax
  401c95:	cmp    DWORD PTR [rbp+0x207c],0x0
  401c9c:	je     0x401cc4
  401c9e:	mov    rax,QWORD PTR [rip+0x778b]        # 0x409430
  401ca5:	call   rax
  401ca7:	add    rax,0x60
  401cab:	lea    rdx,[rbp+0xfe0]
  401cb2:	mov    r8,rdx
  401cb5:	lea    rdx,[rip+0x3647]        # 0x405303
  401cbc:	mov    rcx,rax
  401cbf:	call   0x403db0
  401cc4:	mov    eax,DWORD PTR [rbp+0x2024]
  401cca:	cmp    eax,DWORD PTR [rbp+0x20d0]
  401cd0:	jl     0x401ce1
  401cd2:	mov    rax,QWORD PTR [rbp+0x20a8]
  401cd9:	mov    rcx,rax
  401cdc:	call   0x401530
  401ce1:	mov    eax,DWORD PTR [rbp+0x2024]
  401ce7:	lea    edx,[rax+0x1]
  401cea:	mov    DWORD PTR [rbp+0x2024],edx
  401cf0:	cdqe   
  401cf2:	lea    rdx,[rax*8+0x0]
  401cfa:	mov    rax,QWORD PTR [rbp+0x20d8]
  401d01:	add    rax,rdx
  401d04:	mov    rax,QWORD PTR [rax]
  401d07:	mov    QWORD PTR [rbp+0x2040],rax
  401d0e:	mov    ecx,DWORD PTR [rbp+0x2074]
  401d14:	mov    rdx,QWORD PTR [rbp+0x2040]
  401d1b:	lea    rax,[rbp-0x20]
  401d1f:	mov    r8d,ecx
  401d22:	mov    rcx,rax
  401d25:	call   0x403d70
  401d2a:	mov    rdx,QWORD PTR [rbp+0x2040]
  401d31:	lea    rax,[rbp-0x20]
  401d35:	mov    rcx,rax
  401d38:	call   0x403d68
  401d3d:	mov    DWORD PTR [rbp+0x203c],eax
  401d43:	lea    rax,[rbp-0x20]
  401d47:	mov    r8d,0x1b6
  401d4d:	mov    edx,0x8302
  401d52:	mov    rcx,rax
  401d55:	mov    rax,QWORD PTR [rip+0x774c]        # 0x4094a8
  401d5c:	call   rax
  401d5e:	mov    DWORD PTR [rbp+0x2088],eax
  401d64:	cmp    DWORD PTR [rbp+0x2088],0x0
  401d6b:	jns    0x401d83
  401d6d:	lea    rax,[rbp-0x20]
  401d71:	mov    rcx,rax
  401d74:	call   0x403d88
  401d79:	mov    ecx,0x1
  401d7e:	call   0x403db8
  401d83:	cmp    DWORD PTR [rbp+0x207c],0x0
  401d8a:	je     0x401daf
  401d8c:	mov    rax,QWORD PTR [rip+0x769d]        # 0x409430
  401d93:	call   rax
  401d95:	add    rax,0x60
  401d99:	lea    rdx,[rbp-0x20]
  401d9d:	mov    r8,rdx
  401da0:	lea    rdx,[rip+0x3562]        # 0x405309
  401da7:	mov    rcx,rax
  401daa:	call   0x403db0
  401daf:	mov    eax,DWORD PTR [rbp+0x2024]
  401db5:	cmp    eax,DWORD PTR [rbp+0x20d0]
  401dbb:	jge    0x401dcc
  401dbd:	mov    rax,QWORD PTR [rbp+0x20a8]
  401dc4:	mov    rcx,rax
  401dc7:	call   0x401530
  401dcc:	mov    rax,QWORD PTR [rbp+0x20a0]
  401dd3:	mov    rcx,rax
  401dd6:	call   0x403d98
  401ddb:	mov    QWORD PTR [rbp+0x2058],rax
  401de2:	jmp    0x402428
  401de7:	mov    rax,QWORD PTR [rbp+0x20a0]
  401dee:	mov    QWORD PTR [rbp+0x2098],rax
  401df5:	cmp    DWORD PTR [rbp+0x203c],0x0
  401dfc:	je     0x401e1f
  401dfe:	mov    eax,DWORD PTR [rbp+0x2060]
  401e04:	sub    eax,DWORD PTR [rbp+0x2068]
  401e0a:	mov    rdx,QWORD PTR [rbp+0x2098]
  401e11:	cmp    eax,edx
  401e13:	cmovg  eax,edx
  401e16:	cdqe   
  401e18:	mov    QWORD PTR [rbp+0x2098],rax
  401e1f:	cmp    DWORD PTR [rbp+0x2070],0x0
  401e26:	je     0x401e69
  401e28:	mov    rax,QWORD PTR [rbp+0x2098]
  401e2f:	mov    edx,eax
  401e31:	mov    eax,DWORD PTR [rbp+0x2070]
  401e37:	cmp    edx,eax
  401e39:	cmovle eax,edx
  401e3c:	cdqe   
  401e3e:	mov    QWORD PTR [rbp+0x2098],rax
  401e45:	mov    eax,DWORD PTR [rbp+0x2070]
  401e4b:	mov    rdx,QWORD PTR [rbp+0x2098]
  401e52:	sub    eax,edx
  401e54:	mov    DWORD PTR [rbp+0x2070],eax
  401e5a:	mov    DWORD PTR [rbp+0x2080],0x0
  401e64:	jmp    0x401fab
  401e69:	mov    eax,DWORD PTR [rbp+0x206c]
  401e6f:	cmp    eax,DWORD PTR [rbp+0x2064]
  401e75:	jge    0x401f84
  401e7b:	mov    eax,DWORD PTR [rbp+0x2064]
  401e81:	sub    eax,DWORD PTR [rbp+0x206c]
  401e87:	mov    rdx,QWORD PTR [rbp+0x2098]
  401e8e:	cmp    eax,edx
  401e90:	cmovg  eax,edx
  401e93:	cdqe   
  401e95:	mov    QWORD PTR [rbp+0x2098],rax
  401e9c:	mov    rax,QWORD PTR [rbp+0x2098]
  401ea3:	mov    ecx,eax
  401ea5:	mov    rdx,QWORD PTR [rbp+0x2058]
  401eac:	mov    eax,DWORD PTR [rbp+0x208c]
  401eb2:	mov    r8d,ecx
  401eb5:	mov    ecx,eax
  401eb7:	mov    rax,QWORD PTR [rip+0x75f2]        # 0x4094b0
  401ebe:	call   rax
  401ec0:	cdqe   
  401ec2:	mov    QWORD PTR [rbp+0x2030],rax
  401ec9:	cmp    QWORD PTR [rbp+0x2030],0x0
  401ed1:	jns    0x401ee9
  401ed3:	lea    rcx,[rip+0x3435]        # 0x40530f
  401eda:	call   0x403d88
  401edf:	mov    ecx,0x1
  401ee4:	call   0x403db8
  401ee9:	mov    rax,QWORD PTR [rbp+0x2030]
  401ef0:	cmp    rax,QWORD PTR [rbp+0x2098]
  401ef7:	je     0x401f29
  401ef9:	mov    rax,QWORD PTR [rip+0x7530]        # 0x409430
  401f00:	call   rax
  401f02:	add    rax,0x60
  401f06:	lea    rdx,[rbp+0xfe0]
  401f0d:	mov    r8,rdx
  401f10:	lea    rdx,[rip+0x33fd]        # 0x405314
  401f17:	mov    rcx,rax
  401f1a:	call   0x403db0
  401f1f:	mov    ecx,0x1
  401f24:	call   0x403db8
  401f29:	mov    QWORD PTR [rbp+0x2090],0x0
  401f34:	jmp    0x401f58
  401f36:	mov    rdx,QWORD PTR [rbp+0x2058]
  401f3d:	mov    rax,QWORD PTR [rbp+0x2090]
  401f44:	add    rax,rdx
  401f47:	movzx  eax,BYTE PTR [rax]
  401f4a:	test   al,al
  401f4c:	je     0x401f50
  401f4e:	jmp    0x401f68
  401f50:	add    QWORD PTR [rbp+0x2090],0x1
  401f58:	mov    rax,QWORD PTR [rbp+0x2090]
  401f5f:	cmp    rax,QWORD PTR [rbp+0x2098]
  401f66:	jb     0x401f36
  401f68:	mov    rax,QWORD PTR [rbp+0x2090]
  401f6f:	cmp    rax,QWORD PTR [rbp+0x2098]
  401f76:	setb   al
  401f79:	movzx  eax,al
  401f7c:	mov    DWORD PTR [rbp+0x2080],eax
  401f82:	jmp    0x401fab
  401f84:	mov    QWORD PTR [rbp+0x2098],0x0
  401f8f:	mov    eax,DWORD PTR [rbp+0x2048]
  401f95:	sub    eax,DWORD PTR [rbp+0x2064]
  401f9b:	mov    DWORD PTR [rbp+0x2070],eax
  401fa1:	mov    DWORD PTR [rbp+0x2080],0x0
  401fab:	cmp    DWORD PTR [rbp+0x2080],0x0
  401fb2:	je     0x40208e
  401fb8:	cmp    DWORD PTR [rbp+0x2084],0x0
  401fbf:	je     0x401ff8
  401fc1:	mov    eax,DWORD PTR [rbp+0x2068]
  401fc7:	movsxd rdx,eax
  401fca:	mov    eax,DWORD PTR [rbp+0x2088]
  401fd0:	mov    r8d,0x0
  401fd6:	mov    ecx,eax
  401fd8:	call   0x403df8
  401fdd:	test   rax,rax
  401fe0:	jns    0x401ff8
  401fe2:	lea    rcx,[rip+0x333b]        # 0x405324
  401fe9:	call   0x403d88
  401fee:	mov    ecx,0x1
  401ff3:	call   0x403db8
  401ff8:	mov    rax,QWORD PTR [rbp+0x2098]
  401fff:	mov    ecx,eax
  402001:	mov    rdx,QWORD PTR [rbp+0x2058]
  402008:	mov    eax,DWORD PTR [rbp+0x2088]
  40200e:	mov    r8d,ecx
  402011:	mov    ecx,eax
  402013:	mov    rax,QWORD PTR [rip+0x74a6]        # 0x4094c0
  40201a:	call   rax
  40201c:	cdqe   
  40201e:	mov    QWORD PTR [rbp+0x2030],rax
  402025:	cmp    QWORD PTR [rbp+0x2030],0x0
  40202d:	jns    0x402045
  40202f:	lea    rcx,[rip+0x32f6]        # 0x40532c
  402036:	call   0x403d88
  40203b:	mov    ecx,0x1
  402040:	call   0x403db8
  402045:	mov    rax,QWORD PTR [rbp+0x2030]
  40204c:	cmp    rax,QWORD PTR [rbp+0x2098]
  402053:	je     0x402082
  402055:	mov    rax,QWORD PTR [rip+0x73d4]        # 0x409430
  40205c:	call   rax
  40205e:	add    rax,0x60
  402062:	lea    rdx,[rbp-0x20]
  402066:	mov    r8,rdx
  402069:	lea    rdx,[rip+0x32c2]        # 0x405332
  402070:	mov    rcx,rax
  402073:	call   0x403db0
  402078:	mov    ecx,0x1
  40207d:	call   0x403db8
  402082:	mov    DWORD PTR [rbp+0x2084],0x0
  40208c:	jmp    0x402098
  40208e:	mov    DWORD PTR [rbp+0x2084],0x1
  402098:	mov    rax,QWORD PTR [rbp+0x2098]
  40209f:	mov    edx,eax
  4020a1:	mov    eax,DWORD PTR [rbp+0x206c]
  4020a7:	add    eax,edx
  4020a9:	mov    DWORD PTR [rbp+0x206c],eax
  4020af:	mov    eax,DWORD PTR [rbp+0x206c]
  4020b5:	cmp    eax,DWORD PTR [rbp+0x2064]
  4020bb:	jne    0x40224d
  4020c1:	mov    eax,DWORD PTR [rbp+0x208c]
  4020c7:	mov    ecx,eax
  4020c9:	mov    rax,QWORD PTR [rip+0x7398]        # 0x409468
  4020d0:	call   rax
  4020d2:	cmp    DWORD PTR [rbp+0x204c],0x0
  4020d9:	jne    0x4020f7
  4020db:	mov    rax,QWORD PTR [rbp+0x2098]
  4020e2:	mov    edx,eax
  4020e4:	mov    eax,DWORD PTR [rbp+0x2068]
  4020ea:	add    eax,edx
  4020ec:	mov    DWORD PTR [rbp+0x2068],eax
  4020f2:	jmp    0x40243a
  4020f7:	add    DWORD PTR [rbp+0x2078],0x1
  4020fe:	mov    ecx,DWORD PTR [rbp+0x2078]
  402104:	mov    rdx,QWORD PTR [rbp+0x2050]
  40210b:	lea    rax,[rbp+0xfe0]
  402112:	mov    r8d,ecx
  402115:	mov    rcx,rax
  402118:	call   0x403d70
  40211d:	lea    rax,[rbp+0xfe0]
  402124:	mov    r8d,0x0
  40212a:	mov    edx,0x8000
  40212f:	mov    rcx,rax
  402132:	mov    rax,QWORD PTR [rip+0x736f]        # 0x4094a8
  402139:	call   rax
  40213b:	mov    DWORD PTR [rbp+0x208c],eax
  402141:	cmp    DWORD PTR [rbp+0x208c],0x0
  402148:	jns    0x402176
  40214a:	mov    rax,QWORD PTR [rip+0x731f]        # 0x409470
  402151:	call   rax
  402153:	mov    eax,DWORD PTR [rax]
  402155:	cmp    eax,0x2
  402158:	jne    0x402176
  40215a:	mov    rax,QWORD PTR [rbp+0x2098]
  402161:	mov    edx,eax
  402163:	mov    eax,DWORD PTR [rbp+0x2068]
  402169:	add    eax,edx
  40216b:	mov    DWORD PTR [rbp+0x2068],eax
  402171:	jmp    0x40243a
  402176:	cmp    DWORD PTR [rbp+0x208c],0x0
  40217d:	jns    0x402198
  40217f:	lea    rax,[rbp+0xfe0]
  402186:	mov    rcx,rax
  402189:	call   0x403d88
  40218e:	mov    ecx,0x1
  402193:	call   0x403db8
  402198:	lea    rdx,[rbp+0x1fe0]
  40219f:	mov    eax,DWORD PTR [rbp+0x208c]
  4021a5:	mov    ecx,eax
  4021a7:	mov    rax,QWORD PTR [rip+0x72d2]        # 0x409480
  4021ae:	call   rax
  4021b0:	test   eax,eax
  4021b2:	jns    0x4021ca
  4021b4:	lea    rcx,[rip+0x3142]        # 0x4052fd
  4021bb:	call   0x403d88
  4021c0:	mov    ecx,0x1
  4021c5:	call   0x403db8
  4021ca:	mov    rax,QWORD PTR [rbp+0x1ff8]
  4021d1:	mov    DWORD PTR [rbp+0x2064],eax
  4021d7:	mov    eax,DWORD PTR [rbp+0x2064]
  4021dd:	cmp    eax,DWORD PTR [rbp+0x2048]
  4021e3:	jle    0x402214
  4021e5:	mov    ebx,DWORD PTR [rbp+0x2048]
  4021eb:	mov    rax,QWORD PTR [rip+0x723e]        # 0x409430
  4021f2:	call   rax
  4021f4:	add    rax,0x60
  4021f8:	lea    rdx,[rbp+0xfe0]
  4021ff:	mov    r9d,ebx
  402202:	mov    r8,rdx
  402205:	lea    rdx,[rip+0x313c]        # 0x405348
  40220c:	mov    rcx,rax
  40220f:	call   0x403db0
  402214:	mov    DWORD PTR [rbp+0x206c],0x0
  40221e:	cmp    DWORD PTR [rbp+0x207c],0x0
  402225:	je     0x40224d
  402227:	mov    rax,QWORD PTR [rip+0x7202]        # 0x409430
  40222e:	call   rax
  402230:	add    rax,0x60
  402234:	lea    rdx,[rbp+0xfe0]
  40223b:	mov    r8,rdx
  40223e:	lea    rdx,[rip+0x30be]        # 0x405303
  402245:	mov    rcx,rax
  402248:	call   0x403db0
  40224d:	mov    rax,QWORD PTR [rbp+0x2098]
  402254:	mov    edx,eax
  402256:	mov    eax,DWORD PTR [rbp+0x2068]
  40225c:	add    eax,edx
  40225e:	mov    DWORD PTR [rbp+0x2068],eax
  402264:	cmp    DWORD PTR [rbp+0x203c],0x0
  40226b:	je     0x402428
  402271:	mov    eax,DWORD PTR [rbp+0x2068]
  402277:	cmp    eax,DWORD PTR [rbp+0x2060]
  40227d:	jne    0x402428
  402283:	cmp    DWORD PTR [rbp+0x2074],0x0
  40228a:	jne    0x402374
  402290:	mov    eax,DWORD PTR [rbp+0x2060]
  402296:	sub    eax,0x1
  402299:	movsxd rdx,eax
  40229c:	mov    eax,DWORD PTR [rbp+0x2088]
  4022a2:	mov    r8d,0x0
  4022a8:	mov    ecx,eax
  4022aa:	call   0x403df8
  4022af:	test   rax,rax
  4022b2:	jns    0x4022ca
  4022b4:	lea    rcx,[rip+0x30b0]        # 0x40536b
  4022bb:	call   0x403d88
  4022c0:	mov    ecx,0x1
  4022c5:	call   0x403db8
  4022ca:	mov    rdx,QWORD PTR [rbp+0x2058]
  4022d1:	mov    eax,DWORD PTR [rbp+0x2088]
  4022d7:	mov    r8d,0x1
  4022dd:	mov    ecx,eax
  4022df:	mov    rax,QWORD PTR [rip+0x71ca]        # 0x4094b0
  4022e6:	call   rax
  4022e8:	test   eax,eax
  4022ea:	jns    0x402302
  4022ec:	lea    rcx,[rip+0x301c]        # 0x40530f
  4022f3:	call   0x403d88
  4022f8:	mov    ecx,0x1
  4022fd:	call   0x403db8
  402302:	mov    eax,DWORD PTR [rbp+0x2060]
  402308:	sub    eax,0x1
  40230b:	movsxd rdx,eax
  40230e:	mov    eax,DWORD PTR [rbp+0x2088]
  402314:	mov    r8d,0x0
  40231a:	mov    ecx,eax
  40231c:	call   0x403df8
  402321:	test   rax,rax
  402324:	jns    0x40233c
  402326:	lea    rcx,[rip+0x2ff7]        # 0x405324
  40232d:	call   0x403d88
  402332:	mov    ecx,0x1
  402337:	call   0x403db8
  40233c:	mov    rdx,QWORD PTR [rbp+0x2058]
  402343:	mov    eax,DWORD PTR [rbp+0x2088]
  402349:	mov    r8d,0x1
  40234f:	mov    ecx,eax
  402351:	mov    rax,QWORD PTR [rip+0x7168]        # 0x4094c0
  402358:	call   rax
  40235a:	test   eax,eax
  40235c:	jns    0x402374
  40235e:	lea    rcx,[rip+0x2fc7]        # 0x40532c
  402365:	call   0x403d88
  40236a:	mov    ecx,0x1
  40236f:	call   0x403db8
  402374:	mov    eax,DWORD PTR [rbp+0x2088]
  40237a:	mov    ecx,eax
  40237c:	mov    rax,QWORD PTR [rip+0x70e5]        # 0x409468
  402383:	call   rax
  402385:	add    DWORD PTR [rbp+0x2074],0x1
  40238c:	mov    ecx,DWORD PTR [rbp+0x2074]
  402392:	mov    rdx,QWORD PTR [rbp+0x2040]
  402399:	lea    rax,[rbp-0x20]
  40239d:	mov    r8d,ecx
  4023a0:	mov    rcx,rax
  4023a3:	call   0x403d70
  4023a8:	lea    rax,[rbp-0x20]
  4023ac:	mov    r8d,0x1b6
  4023b2:	mov    edx,0x8302
  4023b7:	mov    rcx,rax
  4023ba:	mov    rax,QWORD PTR [rip+0x70e7]        # 0x4094a8
  4023c1:	call   rax
  4023c3:	mov    DWORD PTR [rbp+0x2088],eax
  4023c9:	cmp    DWORD PTR [rbp+0x2088],0x0
  4023d0:	jns    0x4023e8
  4023d2:	lea    rax,[rbp-0x20]
  4023d6:	mov    rcx,rax
  4023d9:	call   0x403d88
  4023de:	mov    ecx,0x1
  4023e3:	call   0x403db8
  4023e8:	mov    DWORD PTR [rbp+0x2068],0x0
  4023f2:	mov    DWORD PTR [rbp+0x2084],0x0
  4023fc:	cmp    DWORD PTR [rbp+0x207c],0x0
  402403:	je     0x402428
  402405:	mov    rax,QWORD PTR [rip+0x7024]        # 0x409430
  40240c:	call   rax
  40240e:	add    rax,0x60
  402412:	lea    rdx,[rbp-0x20]
  402416:	mov    r8,rdx
  402419:	lea    rdx,[rip+0x2ee9]        # 0x405309
  402420:	mov    rcx,rax
  402423:	call   0x403db0
  402428:	mov    eax,DWORD PTR [rbp+0x206c]
  40242e:	cmp    eax,DWORD PTR [rbp+0x2048]
  402434:	jl     0x401de7
  40243a:	cmp    DWORD PTR [rbp+0x2084],0x0
  402441:	je     0x40252b
  402447:	mov    eax,DWORD PTR [rbp+0x2068]
  40244d:	sub    eax,0x1
  402450:	movsxd rdx,eax
  402453:	mov    eax,DWORD PTR [rbp+0x2088]
  402459:	mov    r8d,0x0
  40245f:	mov    ecx,eax
  402461:	call   0x403df8
  402466:	test   rax,rax
  402469:	jns    0x402481
  40246b:	lea    rcx,[rip+0x2eb2]        # 0x405324
  402472:	call   0x403d88
  402477:	mov    ecx,0x1
  40247c:	call   0x403db8
  402481:	mov    rdx,QWORD PTR [rbp+0x2058]
  402488:	mov    eax,DWORD PTR [rbp+0x2088]
  40248e:	mov    r8d,0x1
  402494:	mov    ecx,eax
  402496:	mov    rax,QWORD PTR [rip+0x7013]        # 0x4094b0
  40249d:	call   rax
  40249f:	test   eax,eax
  4024a1:	jns    0x4024b9
  4024a3:	lea    rcx,[rip+0x2e65]        # 0x40530f
  4024aa:	call   0x403d88
  4024af:	mov    ecx,0x1
  4024b4:	call   0x403db8
  4024b9:	mov    eax,DWORD PTR [rbp+0x2068]
  4024bf:	sub    eax,0x1
  4024c2:	movsxd rdx,eax
  4024c5:	mov    eax,DWORD PTR [rbp+0x2088]
  4024cb:	mov    r8d,0x0
  4024d1:	mov    ecx,eax
  4024d3:	call   0x403df8
  4024d8:	test   rax,rax
  4024db:	jns    0x4024f3
  4024dd:	lea    rcx,[rip+0x2e40]        # 0x405324
  4024e4:	call   0x403d88
  4024e9:	mov    ecx,0x1
  4024ee:	call   0x403db8
  4024f3:	mov    rdx,QWORD PTR [rbp+0x2058]
  4024fa:	mov    eax,DWORD PTR [rbp+0x2088]
  402500:	mov    r8d,0x1
  402506:	mov    ecx,eax
  402508:	mov    rax,QWORD PTR [rip+0x6fb1]        # 0x4094c0
  40250f:	call   rax
  402511:	test   eax,eax
  402513:	jns    0x40252b
  402515:	lea    rcx,[rip+0x2e10]        # 0x40532c
  40251c:	call   0x403d88
  402521:	mov    ecx,0x1
  402526:	call   0x403db8
  40252b:	mov    eax,DWORD PTR [rbp+0x2088]
  402531:	mov    ecx,eax
  402533:	mov    rax,QWORD PTR [rip+0x6f2e]        # 0x409468
  40253a:	call   rax
  40253c:	call   0x402770
  402541:	mov    rax,QWORD PTR [rip+0x3118]        # 0x405660
  402548:	mov    eax,DWORD PTR [rax]
  40254a:	mov    ecx,eax
  40254c:	call   0x402790
  402551:	mov    DWORD PTR [rbp+0x202c],eax
  402557:	cmp    DWORD PTR [rbp+0x202c],0x0
  40255e:	jns    0x402576
  402560:	lea    rcx,[rip+0x2e0e]        # 0x405375
  402567:	call   0x403d88
  40256c:	mov    ecx,0x1
  402571:	call   0x403db8
  402576:	mov    eax,DWORD PTR [rbp-0x2c]
  402579:	test   eax,eax
  40257b:	je     0x4025b6
  40257d:	lea    rdx,[rbp-0x2c]
  402581:	mov    eax,DWORD PTR [rbp+0x202c]
  402587:	mov    r8,rdx
  40258a:	lea    rdx,[rip+0x2dee]        # 0x40537f
  402591:	mov    ecx,eax
  402593:	call   0x402788
  402598:	test   eax,eax
  40259a:	jns    0x402629
  4025a0:	lea    rcx,[rip+0x2de7]        # 0x40538e
  4025a7:	call   0x403d88
  4025ac:	mov    ecx,0x1
  4025b1:	call   0x403db8
  4025b6:	mov    eax,DWORD PTR [rbp+0x202c]
  4025bc:	mov    r8d,0x0
  4025c2:	mov    edx,0x0
  4025c7:	mov    ecx,eax
  4025c9:	call   0x402780
  4025ce:	test   eax,eax
  4025d0:	jns    0x4025e8
  4025d2:	lea    rcx,[rip+0x2dbc]        # 0x405395
  4025d9:	call   0x403d88
  4025de:	mov    ecx,0x1
  4025e3:	call   0x403db8
  4025e8:	mov    eax,DWORD PTR [rbp+0x2060]
  4025ee:	cdqe   
  4025f0:	mov    QWORD PTR [rbp-0x28],rax
  4025f4:	lea    rdx,[rbp-0x28]
  4025f8:	mov    eax,DWORD PTR [rbp+0x202c]
  4025fe:	mov    r8,rdx
  402601:	lea    rdx,[rip+0x2da0]        # 0x4053a8
  402608:	mov    ecx,eax
  40260a:	call   0x402788
  40260f:	test   eax,eax
  402611:	jns    0x402629
  402613:	lea    rcx,[rip+0x2d74]        # 0x40538e
  40261a:	call   0x403d88
  40261f:	mov    ecx,0x1
  402624:	call   0x403db8
  402629:	lea    rax,[rbp-0x30]
  40262d:	mov    rdx,rax
  402630:	mov    ecx,0x0
  402635:	call   0x4027d0
  40263a:	mov    eax,DWORD PTR [rbp-0x30]
  40263d:	test   eax,eax
  40263f:	je     0x402670
  402641:	lea    rdx,[rbp-0x48]
  402645:	lea    rax,[rbp-0x40]
  402649:	mov    r8,rdx
  40264c:	mov    rdx,rax
  40264f:	mov    ecx,0x0
  402654:	call   0x4027c0
  402659:	mov    r8d,0x0
  40265f:	mov    edx,0x0
  402664:	mov    ecx,0x0
  402669:	call   0x4027b0
  40266e:	jmp    0x40268f
  402670:	lea    rdx,[rbp-0x48]
  402674:	lea    rax,[rbp-0x40]
  402678:	mov    rcx,rax
  40267b:	call   0x4027c8
  402680:	mov    edx,0x0
  402685:	mov    ecx,0x0
  40268a:	call   0x4027b8
  40268f:	mov    r8d,0xe
  402695:	mov    edx,0x8
  40269a:	mov    ecx,0x1
  40269f:	call   0x402778
  4026a4:	mov    edx,DWORD PTR [rbp+0x202c]
  4026aa:	mov    rax,QWORD PTR [rbp+0x2040]
  4026b1:	mov    r8d,edx
  4026b4:	mov    edx,0x1
  4026b9:	mov    rcx,rax
  4026bc:	call   0x4027a0
  4026c1:	mov    DWORD PTR [rbp+0x2028],eax
  4026c7:	mov    eax,DWORD PTR [rbp-0x30]
  4026ca:	test   eax,eax
  4026cc:	je     0x4026e8
  4026ce:	mov    rdx,QWORD PTR [rbp-0x48]
  4026d2:	mov    rax,QWORD PTR [rbp-0x40]
  4026d6:	mov    r8,rdx
  4026d9:	mov    rdx,rax
  4026dc:	mov    ecx,0x0
  4026e1:	call   0x4027b0
  4026e6:	jmp    0x4026f8
  4026e8:	mov    rdx,QWORD PTR [rbp-0x48]
  4026ec:	mov    rax,QWORD PTR [rbp-0x40]
  4026f0:	mov    rcx,rax
  4026f3:	call   0x4027b8
  4026f8:	cmp    DWORD PTR [rbp+0x2028],0x0
  4026ff:	js     0x402728
  402701:	mov    eax,DWORD PTR [rbp+0x2028]
  402707:	mov    ecx,eax
  402709:	call   0x4027a8
  40270e:	test   eax,eax
  402710:	jns    0x402728
  402712:	lea    rcx,[rip+0x2c9e]        # 0x4053b7
  402719:	call   0x403d88
  40271e:	mov    ecx,0x1
  402723:	call   0x403db8
  402728:	mov    eax,DWORD PTR [rbp+0x202c]
  40272e:	mov    ecx,eax
  402730:	call   0x402798
  402735:	test   eax,eax
  402737:	jns    0x40274f
  402739:	lea    rcx,[rip+0x2c80]        # 0x4053c0
  402740:	call   0x403d88
  402745:	mov    ecx,0x1
  40274a:	call   0x403db8
  40274f:	mov    rax,QWORD PTR [rbp+0x2058]
  402756:	mov    rcx,rax
  402759:	call   0x403da8
  40275e:	mov    eax,0x0
  402763:	add    rsp,0x2138
  40276a:	pop    rbx
  40276b:	pop    rbp
  40276c:	ret    
  40276d:	nop
  40276e:	nop
  40276f:	nop
  402770:	jmp    QWORD PTR [rip+0x6bca]        # 0x409340
  402776:	nop
  402777:	nop
  402778:	jmp    QWORD PTR [rip+0x6bba]        # 0x409338
  40277e:	nop
  40277f:	nop
  402780:	jmp    QWORD PTR [rip+0x6baa]        # 0x409330
  402786:	nop
  402787:	nop
  402788:	jmp    QWORD PTR [rip+0x6b9a]        # 0x409328
  40278e:	nop
  40278f:	nop
  402790:	jmp    QWORD PTR [rip+0x6b8a]        # 0x409320
  402796:	nop
  402797:	nop
  402798:	jmp    QWORD PTR [rip+0x6b7a]        # 0x409318
  40279e:	nop
  40279f:	nop
  4027a0:	jmp    QWORD PTR [rip+0x6b62]        # 0x409308
  4027a6:	nop
  4027a7:	nop
  4027a8:	jmp    QWORD PTR [rip+0x6b52]        # 0x409300
  4027ae:	nop
  4027af:	nop
  4027b0:	jmp    QWORD PTR [rip+0x6b42]        # 0x4092f8
  4027b6:	nop
  4027b7:	nop
  4027b8:	jmp    QWORD PTR [rip+0x6b32]        # 0x4092f0
  4027be:	nop
  4027bf:	nop
  4027c0:	jmp    QWORD PTR [rip+0x6b22]        # 0x4092e8
  4027c6:	nop
  4027c7:	nop
  4027c8:	jmp    QWORD PTR [rip+0x6b12]        # 0x4092e0
  4027ce:	nop
  4027cf:	nop
  4027d0:	jmp    QWORD PTR [rip+0x6b02]        # 0x4092d8
  4027d6:	nop
  4027d7:	nop
  4027d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4027e0:	push   rbx
  4027e1:	sub    rsp,0x30
  4027e5:	mov    rbx,rcx
  4027e8:	mov    rcx,QWORD PTR [rip+0x6221]        # 0x408a10
  4027ef:	call   0x402d90
  4027f4:	cmp    rax,0xffffffffffffffff
  4027f8:	mov    QWORD PTR [rsp+0x20],rax
  4027fd:	je     0x402875
  4027ff:	mov    ecx,0x8
  402804:	call   0x403e00
  402809:	mov    rcx,QWORD PTR [rip+0x6200]        # 0x408a10
  402810:	call   0x402d90
  402815:	mov    rcx,QWORD PTR [rip+0x61fc]        # 0x408a18
  40281c:	mov    QWORD PTR [rsp+0x20],rax
  402821:	call   0x402d90
  402826:	lea    rdx,[rsp+0x20]
  40282b:	lea    r8,[rsp+0x28]
  402830:	mov    rcx,rbx
  402833:	mov    QWORD PTR [rsp+0x28],rax
  402838:	call   0x403e60
  40283d:	mov    rcx,QWORD PTR [rsp+0x20]
  402842:	mov    rbx,rax
  402845:	call   0x402da0
  40284a:	mov    rcx,QWORD PTR [rsp+0x28]
  40284f:	mov    QWORD PTR [rip+0x61ba],rax        # 0x408a10
  402856:	call   0x402da0
  40285b:	mov    ecx,0x8
  402860:	mov    QWORD PTR [rip+0x61b1],rax        # 0x408a18
  402867:	call   0x403dd8
  40286c:	mov    rax,rbx
  40286f:	add    rsp,0x30
  402873:	pop    rbx
  402874:	ret    
  402875:	mov    rax,QWORD PTR [rip+0x2e94]        # 0x405710
  40287c:	mov    rcx,rbx
  40287f:	call   QWORD PTR [rax]
  402881:	add    rsp,0x30
  402885:	pop    rbx
  402886:	ret    
  402887:	nop    WORD PTR [rax+rax*1+0x0]
  402890:	sub    rsp,0x28
  402894:	call   0x4027e0
  402899:	test   rax,rax
  40289c:	sete   al
  40289f:	movzx  eax,al
  4028a2:	neg    eax
  4028a4:	add    rsp,0x28
  4028a8:	ret    
  4028a9:	nop
  4028aa:	nop
  4028ab:	nop
  4028ac:	nop
  4028ad:	nop
  4028ae:	nop
  4028af:	nop
  4028b0:	sub    rsp,0x28
  4028b4:	mov    rax,QWORD PTR [rip+0x1755]        # 0x404010
  4028bb:	mov    rax,QWORD PTR [rax]
  4028be:	test   rax,rax
  4028c1:	je     0x4028e0
  4028c3:	call   rax
  4028c5:	mov    rax,QWORD PTR [rip+0x1744]        # 0x404010
  4028cc:	lea    rdx,[rax+0x8]
  4028d0:	mov    rax,QWORD PTR [rax+0x8]
  4028d4:	mov    QWORD PTR [rip+0x1735],rdx        # 0x404010
  4028db:	test   rax,rax
  4028de:	jne    0x4028c3
  4028e0:	add    rsp,0x28
  4028e4:	ret    
  4028e5:	nop
  4028e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028f0:	push   rsi
  4028f1:	push   rbx
  4028f2:	sub    rsp,0x28
  4028f6:	mov    rsi,QWORD PTR [rip+0x2d93]        # 0x405690
  4028fd:	mov    rax,QWORD PTR [rsi]
  402900:	cmp    eax,0xffffffff
  402903:	mov    ebx,eax
  402905:	je     0x402930
  402907:	test   ebx,ebx
  402909:	je     0x40291a
  40290b:	nop    DWORD PTR [rax+rax*1+0x0]
  402910:	mov    eax,ebx
  402912:	call   QWORD PTR [rsi+rax*8]
  402915:	sub    ebx,0x1
  402918:	jne    0x402910
  40291a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x4028b0
  402921:	add    rsp,0x28
  402925:	pop    rbx
  402926:	pop    rsi
  402927:	jmp    0x402890
  40292c:	nop    DWORD PTR [rax+0x0]
  402930:	xor    ebx,ebx
  402932:	jmp    0x402936
  402934:	mov    ebx,eax
  402936:	lea    edx,[rbx+0x1]
  402939:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40293e:	mov    rax,rdx
  402941:	jne    0x402934
  402943:	jmp    0x402907
  402945:	nop
  402946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402950:	mov    eax,DWORD PTR [rip+0x56da]        # 0x408030
  402956:	test   eax,eax
  402958:	je     0x402960
  40295a:	repz ret 
  40295c:	nop    DWORD PTR [rax+0x0]
  402960:	mov    DWORD PTR [rip+0x56c6],0x1        # 0x408030
  40296a:	jmp    0x4028f0
  40296c:	nop
  40296d:	nop
  40296e:	nop
  40296f:	nop
  402970:	mov    rax,QWORD PTR [rip+0x6ac1]        # 0x409438
  402977:	rex.W jmp rax
  40297a:	nop
  40297b:	nop
  40297c:	nop
  40297d:	nop
  40297e:	nop
  40297f:	nop
  402980:	xor    eax,eax
  402982:	ret    
  402983:	nop
  402984:	nop
  402985:	nop
  402986:	nop
  402987:	nop
  402988:	nop
  402989:	nop
  40298a:	nop
  40298b:	nop
  40298c:	nop
  40298d:	nop
  40298e:	nop
  40298f:	nop
  402990:	push   r12
  402992:	push   rbp
  402993:	push   rdi
  402994:	push   rsi
  402995:	push   rbx
  402996:	sub    rsp,0x40
  40299a:	mov    rbx,QWORD PTR [rip+0x16cf]        # 0x404070
  4029a1:	movabs rax,0x2b992ddfa232
  4029ab:	mov    QWORD PTR [rsp+0x20],0x0
  4029b4:	cmp    rbx,rax
  4029b7:	je     0x4029d0
  4029b9:	not    rbx
  4029bc:	mov    QWORD PTR [rip+0x16bd],rbx        # 0x404080
  4029c3:	add    rsp,0x40
  4029c7:	pop    rbx
  4029c8:	pop    rsi
  4029c9:	pop    rdi
  4029ca:	pop    rbp
  4029cb:	pop    r12
  4029cd:	ret    
  4029ce:	xchg   ax,ax
  4029d0:	lea    rcx,[rsp+0x20]
  4029d5:	call   QWORD PTR [rip+0x69ad]        # 0x409388
  4029db:	mov    r12,QWORD PTR [rsp+0x20]
  4029e0:	call   QWORD PTR [rip+0x6982]        # 0x409368
  4029e6:	mov    ebp,eax
  4029e8:	call   QWORD PTR [rip+0x6982]        # 0x409370
  4029ee:	mov    edi,eax
  4029f0:	call   QWORD PTR [rip+0x699a]        # 0x409390
  4029f6:	lea    rcx,[rsp+0x30]
  4029fb:	mov    esi,eax
  4029fd:	call   QWORD PTR [rip+0x69a5]        # 0x4093a8
  402a03:	xor    r12,QWORD PTR [rsp+0x30]
  402a08:	mov    edx,edi
  402a0a:	movabs rax,0xffffffffffff
  402a14:	xor    rbp,r12
  402a17:	mov    rdi,rbp
  402a1a:	xor    rdi,rdx
  402a1d:	mov    edx,esi
  402a1f:	xor    rdi,rdx
  402a22:	mov    rsi,rdi
  402a25:	and    rsi,rax
  402a28:	cmp    rsi,rbx
  402a2b:	je     0x402a50
  402a2d:	mov    rax,rsi
  402a30:	not    rax
  402a33:	mov    QWORD PTR [rip+0x1636],rsi        # 0x404070
  402a3a:	mov    QWORD PTR [rip+0x163f],rax        # 0x404080
  402a41:	add    rsp,0x40
  402a45:	pop    rbx
  402a46:	pop    rsi
  402a47:	pop    rdi
  402a48:	pop    rbp
  402a49:	pop    r12
  402a4b:	ret    
  402a4c:	nop    DWORD PTR [rax+0x0]
  402a50:	movabs rax,0xffffd466d2205dcc
  402a5a:	movabs rsi,0x2b992ddfa233
  402a64:	jmp    0x402a33
  402a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a70:	push   rbp
  402a71:	push   rsi
  402a72:	push   rbx
  402a73:	mov    rbp,rsp
  402a76:	sub    rsp,0x70
  402a7a:	mov    rsi,rcx
  402a7d:	lea    rcx,[rip+0x55fc]        # 0x408080
  402a84:	call   QWORD PTR [rip+0x692e]        # 0x4093b8
  402a8a:	mov    rbx,QWORD PTR [rip+0x56e7]        # 0x408178
  402a91:	xor    r8d,r8d
  402a94:	lea    rdx,[rbp-0x28]
  402a98:	mov    rcx,rbx
  402a9b:	call   QWORD PTR [rip+0x691f]        # 0x4093c0
  402aa1:	test   rax,rax
  402aa4:	mov    r9,rax
  402aa7:	je     0x402b50
  402aad:	lea    rax,[rbp-0x20]
  402ab1:	mov    QWORD PTR [rsp+0x38],0x0
  402aba:	mov    r8,rbx
  402abd:	mov    rdx,QWORD PTR [rbp-0x28]
  402ac1:	xor    ecx,ecx
  402ac3:	mov    QWORD PTR [rsp+0x30],rax
  402ac8:	lea    rax,[rbp-0x18]
  402acc:	mov    QWORD PTR [rsp+0x28],rax
  402ad1:	lea    rax,[rip+0x55a8]        # 0x408080
  402ad8:	mov    QWORD PTR [rsp+0x20],rax
  402add:	call   QWORD PTR [rip+0x68e5]        # 0x4093c8
  402ae3:	mov    rax,QWORD PTR [rip+0x568e]        # 0x408178
  402aea:	xor    ecx,ecx
  402aec:	mov    QWORD PTR [rip+0x560d],rsi        # 0x408100
  402af3:	mov    DWORD PTR [rip+0x5a83],0xc0000409        # 0x408580
  402afd:	mov    DWORD PTR [rip+0x5a7d],0x1        # 0x408584
  402b07:	mov    QWORD PTR [rip+0x5a82],rax        # 0x408590
  402b0e:	mov    rax,QWORD PTR [rip+0x155b]        # 0x404070
  402b15:	mov    QWORD PTR [rbp-0x10],rax
  402b19:	mov    rax,QWORD PTR [rip+0x1560]        # 0x404080
  402b20:	mov    QWORD PTR [rbp-0x8],rax
  402b24:	call   QWORD PTR [rip+0x68a6]        # 0x4093d0
  402b2a:	lea    rcx,[rip+0x289f]        # 0x4053d0
  402b31:	call   QWORD PTR [rip+0x68b9]        # 0x4093f0
  402b37:	call   QWORD PTR [rip+0x6823]        # 0x409360
  402b3d:	mov    edx,0xc0000409
  402b42:	mov    rcx,rax
  402b45:	call   QWORD PTR [rip+0x6895]        # 0x4093e0
  402b4b:	call   0x403dc8
  402b50:	mov    rax,QWORD PTR [rbp+0x18]
  402b54:	mov    QWORD PTR [rip+0x561d],rax        # 0x408178
  402b5b:	lea    rax,[rbp+0x8]
  402b5f:	mov    QWORD PTR [rip+0x55b2],rax        # 0x408118
  402b66:	jmp    0x402ae3
  402b6b:	nop
  402b6c:	nop
  402b6d:	nop
  402b6e:	nop
  402b6f:	nop
  402b70:	sub    rsp,0x28
  402b74:	test   edx,edx
  402b76:	je     0x402b90
  402b78:	cmp    edx,0x3
  402b7b:	je     0x402b90
  402b7d:	mov    eax,0x1
  402b82:	add    rsp,0x28
  402b86:	ret    
  402b87:	nop    WORD PTR [rax+rax*1+0x0]
  402b90:	call   0x403880
  402b95:	mov    eax,0x1
  402b9a:	add    rsp,0x28
  402b9e:	ret    
  402b9f:	nop
  402ba0:	push   rsi
  402ba1:	push   rbx
  402ba2:	sub    rsp,0x28
  402ba6:	mov    rax,QWORD PTR [rip+0x2ac3]        # 0x405670
  402bad:	cmp    DWORD PTR [rax],0x2
  402bb0:	je     0x402bb8
  402bb2:	mov    DWORD PTR [rax],0x2
  402bb8:	cmp    edx,0x2
  402bbb:	je     0x402bd0
  402bbd:	cmp    edx,0x1
  402bc0:	je     0x402c02
  402bc2:	mov    eax,0x1
  402bc7:	add    rsp,0x28
  402bcb:	pop    rbx
  402bcc:	pop    rsi
  402bcd:	ret    
  402bce:	xchg   ax,ax
  402bd0:	lea    rbx,[rip+0x7489]        # 0x40a060
  402bd7:	lea    rsi,[rip+0x7482]        # 0x40a060
  402bde:	cmp    rbx,rsi
  402be1:	je     0x402bc2
  402be3:	mov    rax,QWORD PTR [rbx]
  402be6:	test   rax,rax
  402be9:	je     0x402bed
  402beb:	call   rax
  402bed:	add    rbx,0x8
  402bf1:	cmp    rbx,rsi
  402bf4:	jne    0x402be3
  402bf6:	mov    eax,0x1
  402bfb:	add    rsp,0x28
  402bff:	pop    rbx
  402c00:	pop    rsi
  402c01:	ret    
  402c02:	call   0x403880
  402c07:	jmp    0x402bc2
  402c09:	nop    DWORD PTR [rax+0x0]
  402c10:	xor    eax,eax
  402c12:	ret    
  402c13:	nop
  402c14:	nop
  402c15:	nop
  402c16:	nop
  402c17:	nop
  402c18:	nop
  402c19:	nop
  402c1a:	nop
  402c1b:	nop
  402c1c:	nop
  402c1d:	nop
  402c1e:	nop
  402c1f:	nop
  402c20:	sub    rsp,0x58
  402c24:	mov    rax,QWORD PTR [rip+0x5a35]        # 0x408660
  402c2b:	test   rax,rax
  402c2e:	je     0x402c5c
  402c30:	movsd  xmm0,QWORD PTR [rsp+0x80]
  402c39:	mov    DWORD PTR [rsp+0x20],ecx
  402c3d:	lea    rcx,[rsp+0x20]
  402c42:	mov    QWORD PTR [rsp+0x28],rdx
  402c47:	movsd  QWORD PTR [rsp+0x30],xmm2
  402c4d:	movsd  QWORD PTR [rsp+0x38],xmm3
  402c53:	movsd  QWORD PTR [rsp+0x40],xmm0
  402c59:	call   rax
  402c5b:	nop
  402c5c:	add    rsp,0x58
  402c60:	ret    
  402c61:	nop    DWORD PTR [rax+rax*1+0x0]
  402c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c70:	mov    QWORD PTR [rip+0x59e9],rcx        # 0x408660
  402c77:	jmp    0x403e38
  402c7c:	nop    DWORD PTR [rax+0x0]
  402c80:	push   rsi
  402c81:	push   rbx
  402c82:	sub    rsp,0x78
  402c86:	movaps XMMWORD PTR [rsp+0x40],xmm6
  402c8b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  402c90:	movaps XMMWORD PTR [rsp+0x60],xmm8
  402c96:	cmp    DWORD PTR [rcx],0x6
  402c99:	ja     0x402d70
  402c9f:	mov    edx,DWORD PTR [rcx]
  402ca1:	lea    rax,[rip+0x286c]        # 0x405514
  402ca8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  402cac:	add    rax,rdx
  402caf:	jmp    rax
  402cb1:	lea    rbx,[rip+0x2738]        # 0x4053f0
  402cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  402cc0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  402cc6:	mov    rsi,QWORD PTR [rcx+0x8]
  402cca:	movsd  xmm7,QWORD PTR [rcx+0x18]
  402ccf:	movsd  xmm6,QWORD PTR [rcx+0x10]
  402cd4:	call   0x403e50
  402cd9:	movsd  QWORD PTR [rsp+0x30],xmm8
  402ce0:	lea    rcx,[rax+0x60]
  402ce4:	lea    rdx,[rip+0x27fd]        # 0x4054e8
  402ceb:	movsd  QWORD PTR [rsp+0x28],xmm7
  402cf1:	mov    r9,rsi
  402cf4:	mov    r8,rbx
  402cf7:	movsd  QWORD PTR [rsp+0x20],xmm6
  402cfd:	call   0x403db0
  402d02:	nop
  402d03:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  402d08:	xor    eax,eax
  402d0a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  402d0f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  402d15:	add    rsp,0x78
  402d19:	pop    rbx
  402d1a:	pop    rsi
  402d1b:	ret    
  402d1c:	nop    DWORD PTR [rax+0x0]
  402d20:	lea    rbx,[rip+0x26e8]        # 0x40540f
  402d27:	jmp    0x402cc0
  402d29:	nop    DWORD PTR [rax+0x0]
  402d30:	lea    rbx,[rip+0x26f9]        # 0x405430
  402d37:	jmp    0x402cc0
  402d39:	nop    DWORD PTR [rax+0x0]
  402d40:	lea    rbx,[rip+0x2759]        # 0x4054a0
  402d47:	jmp    0x402cc0
  402d4c:	nop    DWORD PTR [rax+0x0]
  402d50:	lea    rbx,[rip+0x2721]        # 0x405478
  402d57:	jmp    0x402cc0
  402d5c:	nop    DWORD PTR [rax+0x0]
  402d60:	lea    rbx,[rip+0x26e9]        # 0x405450
  402d67:	jmp    0x402cc0
  402d6c:	nop    DWORD PTR [rax+0x0]
  402d70:	lea    rbx,[rip+0x275f]        # 0x4054d6
  402d77:	jmp    0x402cc0
  402d7c:	nop
  402d7d:	nop
  402d7e:	nop
  402d7f:	nop
  402d80:	fninit 
  402d82:	ret    
  402d83:	nop
  402d84:	nop
  402d85:	nop
  402d86:	nop
  402d87:	nop
  402d88:	nop
  402d89:	nop
  402d8a:	nop
  402d8b:	nop
  402d8c:	nop
  402d8d:	nop
  402d8e:	nop
  402d8f:	nop
  402d90:	mov    rax,rcx
  402d93:	ret    
  402d94:	xchg   ax,ax
  402d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402da0:	mov    rax,rcx
  402da3:	ret    
  402da4:	nop
  402da5:	nop
  402da6:	nop
  402da7:	nop
  402da8:	nop
  402da9:	nop
  402daa:	nop
  402dab:	nop
  402dac:	nop
  402dad:	nop
  402dae:	nop
  402daf:	nop
  402db0:	push   rsi
  402db1:	push   rbx
  402db2:	sub    rsp,0x38
  402db6:	lea    rax,[rsp+0x58]
  402dbb:	mov    rbx,rcx
  402dbe:	mov    QWORD PTR [rsp+0x58],rdx
  402dc3:	mov    QWORD PTR [rsp+0x60],r8
  402dc8:	mov    QWORD PTR [rsp+0x68],r9
  402dcd:	mov    QWORD PTR [rsp+0x28],rax
  402dd2:	call   0x403e50
  402dd7:	lea    rcx,[rip+0x2752]        # 0x405530
  402dde:	lea    r9,[rax+0x60]
  402de2:	mov    r8d,0x1b
  402de8:	mov    edx,0x1
  402ded:	call   0x403da0
  402df2:	mov    rsi,QWORD PTR [rsp+0x28]
  402df7:	call   0x403e50
  402dfc:	lea    rcx,[rax+0x60]
  402e00:	mov    rdx,rbx
  402e03:	mov    r8,rsi
  402e06:	call   0x403d40
  402e0b:	call   0x403dc8
  402e10:	nop
  402e11:	nop    DWORD PTR [rax+rax*1+0x0]
  402e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e20:	push   r13
  402e22:	push   r12
  402e24:	push   rbp
  402e25:	push   rdi
  402e26:	push   rsi
  402e27:	push   rbx
  402e28:	sub    rsp,0x58
  402e2c:	movsxd rbp,DWORD PTR [rip+0x5851]        # 0x408684
  402e33:	mov    rbx,rcx
  402e36:	mov    rsi,rdx
  402e39:	mov    rdi,r8
  402e3c:	test   ebp,ebp
  402e3e:	jle    0x402f3a
  402e44:	mov    rax,QWORD PTR [rip+0x583d]        # 0x408688
  402e4b:	xor    r9d,r9d
  402e4e:	add    rax,0x8
  402e52:	mov    r10,QWORD PTR [rax]
  402e55:	cmp    rbx,r10
  402e58:	jb     0x402e6e
  402e5a:	mov    rdx,QWORD PTR [rax+0x8]
  402e5e:	mov    r11d,DWORD PTR [rdx+0x8]
  402e62:	add    r10,r11
  402e65:	cmp    rbx,r10
  402e68:	jb     0x402f20
  402e6e:	add    r9d,0x1
  402e72:	add    rax,0x18
  402e76:	cmp    r9d,ebp
  402e79:	jne    0x402e52
  402e7b:	mov    rcx,rbx
  402e7e:	call   0x403a90
  402e83:	test   rax,rax
  402e86:	mov    r12,rax
  402e89:	je     0x402f72
  402e8f:	lea    rbp,[rbp+rbp*2+0x0]
  402e94:	shl    rbp,0x3
  402e98:	mov    r13,rbp
  402e9b:	add    r13,QWORD PTR [rip+0x57e6]        # 0x408688
  402ea2:	mov    QWORD PTR [r13+0x10],rax
  402ea6:	mov    DWORD PTR [r13+0x0],0x0
  402eae:	call   0x403bb0
  402eb3:	mov    edx,DWORD PTR [r12+0xc]
  402eb8:	mov    r8d,0x30
  402ebe:	add    rax,rdx
  402ec1:	lea    rdx,[rsp+0x20]
  402ec6:	mov    QWORD PTR [r13+0x8],rax
  402eca:	mov    rax,QWORD PTR [rip+0x57b7]        # 0x408688
  402ed1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  402ed6:	call   QWORD PTR [rip+0x6524]        # 0x409400
  402edc:	test   rax,rax
  402edf:	je     0x402f55
  402ee1:	mov    eax,DWORD PTR [rsp+0x44]
  402ee5:	lea    edx,[rax-0x4]
  402ee8:	and    edx,0xfffffffb
  402eeb:	je     0x402f19
  402eed:	sub    eax,0x40
  402ef0:	and    eax,0xffffffbf
  402ef3:	je     0x402f19
  402ef5:	mov    r9,rbp
  402ef8:	add    r9,QWORD PTR [rip+0x5789]        # 0x408688
  402eff:	mov    r8d,0x40
  402f05:	mov    rdx,QWORD PTR [rsp+0x38]
  402f0a:	mov    rcx,QWORD PTR [rsp+0x20]
  402f0f:	call   QWORD PTR [rip+0x64e3]        # 0x4093f8
  402f15:	test   eax,eax
  402f17:	je     0x402f41
  402f19:	add    DWORD PTR [rip+0x5764],0x1        # 0x408684
  402f20:	mov    r8,rdi
  402f23:	mov    rdx,rsi
  402f26:	mov    rcx,rbx
  402f29:	add    rsp,0x58
  402f2d:	pop    rbx
  402f2e:	pop    rsi
  402f2f:	pop    rdi
  402f30:	pop    rbp
  402f31:	pop    r12
  402f33:	pop    r13
  402f35:	jmp    0x403d90
  402f3a:	xor    ebp,ebp
  402f3c:	jmp    0x402e7b
  402f41:	call   QWORD PTR [rip+0x6431]        # 0x409378
  402f47:	lea    rcx,[rip+0x265a]        # 0x4055a8
  402f4e:	mov    edx,eax
  402f50:	call   0x402db0
  402f55:	mov    rax,QWORD PTR [rip+0x572c]        # 0x408688
  402f5c:	mov    edx,DWORD PTR [r12+0x8]
  402f61:	lea    rcx,[rip+0x2608]        # 0x405570
  402f68:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  402f6d:	call   0x402db0
  402f72:	lea    rcx,[rip+0x25d7]        # 0x405550
  402f79:	mov    rdx,rbx
  402f7c:	call   0x402db0
  402f81:	nop
  402f82:	nop    DWORD PTR [rax+0x0]
  402f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f90:	push   rbp
  402f91:	push   r14
  402f93:	push   r13
  402f95:	push   r12
  402f97:	push   rdi
  402f98:	push   rsi
  402f99:	push   rbx
  402f9a:	mov    rbp,rsp
  402f9d:	sub    rsp,0x60
  402fa1:	mov    ebx,DWORD PTR [rip+0x56d9]        # 0x408680
  402fa7:	test   ebx,ebx
  402fa9:	je     0x402fc0
  402fab:	mov    rsp,rbp
  402fae:	pop    rbx
  402faf:	pop    rsi
  402fb0:	pop    rdi
  402fb1:	pop    r12
  402fb3:	pop    r13
  402fb5:	pop    r14
  402fb7:	pop    rbp
  402fb8:	ret    
  402fb9:	nop    DWORD PTR [rax+0x0]
  402fc0:	mov    DWORD PTR [rip+0x56b6],0x1        # 0x408680
  402fca:	call   0x403ae0
  402fcf:	cdqe   
  402fd1:	lea    rax,[rax+rax*2]
  402fd5:	lea    rax,[rax*8+0x1e]
  402fdd:	and    rax,0xfffffffffffffff0
  402fe1:	call   0x403d00
  402fe6:	mov    rsi,QWORD PTR [rip+0x26b3]        # 0x4056a0
  402fed:	mov    rbx,QWORD PTR [rip+0x26bc]        # 0x4056b0
  402ff4:	sub    rsp,rax
  402ff7:	mov    DWORD PTR [rip+0x5683],0x0        # 0x408684
  403001:	lea    rax,[rsp+0x20]
  403006:	mov    QWORD PTR [rip+0x567b],rax        # 0x408688
  40300d:	mov    rax,rsi
  403010:	sub    rax,rbx
  403013:	cmp    rax,0x7
  403017:	jle    0x402fab
  403019:	cmp    rax,0xb
  40301d:	jle    0x403045
  40301f:	mov    r11d,DWORD PTR [rbx]
  403022:	test   r11d,r11d
  403025:	jne    0x403170
  40302b:	mov    r10d,DWORD PTR [rbx+0x4]
  40302f:	test   r10d,r10d
  403032:	jne    0x403170
  403038:	mov    r9d,DWORD PTR [rbx+0x8]
  40303c:	test   r9d,r9d
  40303f:	jne    0x40305c
  403041:	add    rbx,0xc
  403045:	mov    r8d,DWORD PTR [rbx]
  403048:	test   r8d,r8d
  40304b:	jne    0x403170
  403051:	mov    ecx,DWORD PTR [rbx+0x4]
  403054:	test   ecx,ecx
  403056:	jne    0x403170
  40305c:	mov    edx,DWORD PTR [rbx+0x8]
  40305f:	cmp    edx,0x1
  403062:	jne    0x40327c
  403068:	add    rbx,0xc
  40306c:	cmp    rbx,rsi
  40306f:	jae    0x402fab
  403075:	mov    r12,QWORD PTR [rip+0x2654]        # 0x4056d0
  40307c:	lea    r13,[rbp-0x30]
  403080:	movabs r14,0xffffffff00000000
  40308a:	mov    ecx,DWORD PTR [rbx+0x4]
  40308d:	mov    eax,DWORD PTR [rbx]
  40308f:	movzx  edx,BYTE PTR [rbx+0x8]
  403093:	add    rax,r12
  403096:	add    rcx,r12
  403099:	cmp    edx,0x10
  40309c:	mov    r8,QWORD PTR [rax]
  40309f:	je     0x4031e6
  4030a5:	jbe    0x4031ad
  4030ab:	cmp    edx,0x20
  4030ae:	je     0x40322f
  4030b4:	cmp    edx,0x40
  4030b7:	jne    0x40321b
  4030bd:	sub    r8,rax
  4030c0:	mov    rdx,r13
  4030c3:	mov    rdi,r13
  4030c6:	mov    rax,r8
  4030c9:	add    rax,QWORD PTR [rcx]
  4030cc:	mov    r8d,0x8
  4030d2:	mov    QWORD PTR [rbp-0x30],rax
  4030d6:	call   0x402e20
  4030db:	add    rbx,0xc
  4030df:	cmp    rbx,rsi
  4030e2:	jb     0x40308a
  4030e4:	mov    eax,DWORD PTR [rip+0x559a]        # 0x408684
  4030ea:	xor    ebx,ebx
  4030ec:	xor    esi,esi
  4030ee:	test   eax,eax
  4030f0:	jle    0x402fab
  4030f6:	mov    r14,QWORD PTR [rip+0x6303]        # 0x409400
  4030fd:	lea    r13,[rbp-0x34]
  403101:	mov    r12,QWORD PTR [rip+0x62f0]        # 0x4093f8
  403108:	jmp    0x403123
  40310a:	nop    WORD PTR [rax+rax*1+0x0]
  403110:	add    esi,0x1
  403113:	add    rbx,0x18
  403117:	cmp    esi,DWORD PTR [rip+0x5567]        # 0x408684
  40311d:	jge    0x402fab
  403123:	mov    rax,rbx
  403126:	add    rax,QWORD PTR [rip+0x555b]        # 0x408688
  40312d:	mov    edx,DWORD PTR [rax]
  40312f:	test   edx,edx
  403131:	je     0x403110
  403133:	mov    rcx,QWORD PTR [rax+0x8]
  403137:	mov    r8d,0x30
  40313d:	mov    rdx,rdi
  403140:	call   r14
  403143:	test   rax,rax
  403146:	je     0x40325e
  40314c:	mov    rax,QWORD PTR [rip+0x5535]        # 0x408688
  403153:	mov    r9,r13
  403156:	mov    rdx,QWORD PTR [rbp-0x18]
  40315a:	mov    rcx,QWORD PTR [rbp-0x30]
  40315e:	mov    r8d,DWORD PTR [rax+rbx*1]
  403162:	call   r12
  403165:	jmp    0x403110
  403167:	nop    WORD PTR [rax+rax*1+0x0]
  403170:	cmp    rbx,rsi
  403173:	jae    0x402fab
  403179:	mov    r12,QWORD PTR [rip+0x2550]        # 0x4056d0
  403180:	lea    rdi,[rbp-0x30]
  403184:	mov    ecx,DWORD PTR [rbx+0x4]
  403187:	mov    eax,DWORD PTR [rbx]
  403189:	mov    r8d,0x4
  40318f:	mov    rdx,rdi
  403192:	add    rbx,0x8
  403196:	add    rcx,r12
  403199:	add    eax,DWORD PTR [rcx]
  40319b:	mov    DWORD PTR [rbp-0x30],eax
  40319e:	call   0x402e20
  4031a3:	cmp    rbx,rsi
  4031a6:	jb     0x403184
  4031a8:	jmp    0x4030e4
  4031ad:	cmp    edx,0x8
  4031b0:	jne    0x40321b
  4031b2:	movzx  edx,BYTE PTR [rcx]
  4031b5:	mov    rdi,r13
  4031b8:	mov    r10,rdx
  4031bb:	or     r10,0xffffffffffffff00
  4031c2:	test   dl,dl
  4031c4:	cmovs  rdx,r10
  4031c8:	sub    rdx,rax
  4031cb:	lea    rax,[r8+rdx*1]
  4031cf:	mov    r8d,0x1
  4031d5:	mov    rdx,r13
  4031d8:	mov    QWORD PTR [rbp-0x30],rax
  4031dc:	call   0x402e20
  4031e1:	jmp    0x4030db
  4031e6:	movzx  edx,WORD PTR [rcx]
  4031e9:	mov    rdi,r13
  4031ec:	mov    r10,rdx
  4031ef:	or     r10,0xffffffffffff0000
  4031f6:	test   dx,dx
  4031f9:	cmovs  rdx,r10
  4031fd:	sub    rdx,rax
  403200:	lea    rax,[r8+rdx*1]
  403204:	mov    r8d,0x2
  40320a:	mov    rdx,r13
  40320d:	mov    QWORD PTR [rbp-0x30],rax
  403211:	call   0x402e20
  403216:	jmp    0x4030db
  40321b:	lea    rcx,[rip+0x23e6]        # 0x405608
  403222:	mov    QWORD PTR [rbp-0x30],0x0
  40322a:	call   0x402db0
  40322f:	mov    edx,DWORD PTR [rcx]
  403231:	mov    rdi,r13
  403234:	mov    r10,rdx
  403237:	or     r10,r14
  40323a:	test   edx,edx
  40323c:	cmovs  rdx,r10
  403240:	sub    rdx,rax
  403243:	lea    rax,[r8+rdx*1]
  403247:	mov    r8d,0x4
  40324d:	mov    rdx,r13
  403250:	mov    QWORD PTR [rbp-0x30],rax
  403254:	call   0x402e20
  403259:	jmp    0x4030db
  40325e:	add    rbx,QWORD PTR [rip+0x5423]        # 0x408688
  403265:	lea    rcx,[rip+0x2304]        # 0x405570
  40326c:	mov    rax,QWORD PTR [rbx+0x10]
  403270:	mov    r8,QWORD PTR [rbx+0x8]
  403274:	mov    edx,DWORD PTR [rax+0x8]
  403277:	call   0x402db0
  40327c:	lea    rcx,[rip+0x234d]        # 0x4055d0
  403283:	call   0x402db0
  403288:	nop
  403289:	nop
  40328a:	nop
  40328b:	nop
  40328c:	nop
  40328d:	nop
  40328e:	nop
  40328f:	nop
  403290:	sub    rsp,0x28
  403294:	mov    eax,DWORD PTR [rcx]
  403296:	cmp    eax,0xc0000091
  40329b:	ja     0x403300
  40329d:	cmp    eax,0xc000008d
  4032a2:	jae    0x40331f
  4032a4:	cmp    eax,0xc0000008
  4032a9:	je     0x4033c0
  4032af:	ja     0x403390
  4032b5:	cmp    eax,0x80000002
  4032ba:	je     0x4033c0
  4032c0:	cmp    eax,0xc0000005
  4032c5:	jne    0x40339e
  4032cb:	xor    edx,edx
  4032cd:	mov    ecx,0xb
  4032d2:	call   0x403d78
  4032d7:	cmp    rax,0x1
  4032db:	je     0x403420
  4032e1:	test   rax,rax
  4032e4:	je     0x403400
  4032ea:	mov    ecx,0xb
  4032ef:	call   rax
  4032f1:	xor    eax,eax
  4032f3:	add    rsp,0x28
  4032f7:	ret    
  4032f8:	nop    DWORD PTR [rax+rax*1+0x0]
  403300:	cmp    eax,0xc0000094
  403305:	je     0x4033d0
  40330b:	ja     0x403350
  40330d:	cmp    eax,0xc0000092
  403312:	je     0x4033c0
  403318:	cmp    eax,0xc0000093
  40331d:	jne    0x40339e
  40331f:	xor    edx,edx
  403321:	mov    ecx,0x8
  403326:	call   0x403d78
  40332b:	cmp    rax,0x1
  40332f:	mov    rdx,rax
  403332:	je     0x4033a8
  403334:	test   rdx,rdx
  403337:	mov    eax,0x1
  40333c:	je     0x4032f3
  40333e:	mov    ecx,0x8
  403343:	call   rdx
  403345:	xor    eax,eax
  403347:	add    rsp,0x28
  40334b:	ret    
  40334c:	nop    DWORD PTR [rax+0x0]
  403350:	cmp    eax,0xc0000095
  403355:	je     0x4033c0
  403357:	cmp    eax,0xc0000096
  40335c:	jne    0x40339e
  40335e:	xor    edx,edx
  403360:	mov    ecx,0x4
  403365:	call   0x403d78
  40336a:	cmp    rax,0x1
  40336e:	je     0x40340a
  403374:	test   rax,rax
  403377:	je     0x403400
  40337d:	mov    ecx,0x4
  403382:	call   rax
  403384:	xor    eax,eax
  403386:	jmp    0x4032f3
  40338b:	nop    DWORD PTR [rax+rax*1+0x0]
  403390:	cmp    eax,0xc000001d
  403395:	je     0x40335e
  403397:	cmp    eax,0xc000008c
  40339c:	je     0x4033c0
  40339e:	mov    eax,0x1
  4033a3:	add    rsp,0x28
  4033a7:	ret    
  4033a8:	mov    edx,0x1
  4033ad:	mov    ecx,0x8
  4033b2:	call   0x403d78
  4033b7:	call   0x402d80
  4033bc:	nop    DWORD PTR [rax+0x0]
  4033c0:	xor    eax,eax
  4033c2:	add    rsp,0x28
  4033c6:	ret    
  4033c7:	nop    WORD PTR [rax+rax*1+0x0]
  4033d0:	xor    edx,edx
  4033d2:	mov    ecx,0x8
  4033d7:	call   0x403d78
  4033dc:	cmp    rax,0x1
  4033e0:	mov    rdx,rax
  4033e3:	jne    0x403334
  4033e9:	mov    edx,0x1
  4033ee:	mov    ecx,0x8
  4033f3:	call   0x403d78
  4033f8:	xor    eax,eax
  4033fa:	jmp    0x4032f3
  4033ff:	nop
  403400:	mov    eax,0x4
  403405:	add    rsp,0x28
  403409:	ret    
  40340a:	mov    edx,0x1
  40340f:	mov    ecx,0x4
  403414:	call   0x403d78
  403419:	xor    eax,eax
  40341b:	jmp    0x4032f3
  403420:	mov    edx,0x1
  403425:	mov    ecx,0xb
  40342a:	call   0x403d78
  40342f:	xor    eax,eax
  403431:	jmp    0x4032f3
  403436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403440:	push   r12
  403442:	push   rbp
  403443:	push   rdi
  403444:	push   rsi
  403445:	push   rbx
  403446:	sub    rsp,0x20
  40344a:	call   0x403bb0
  40344f:	mov    rbp,rax
  403452:	mov    eax,DWORD PTR [rip+0x5270]        # 0x4086c8
  403458:	test   eax,eax
  40345a:	jne    0x403481
  40345c:	test   rbp,rbp
  40345f:	je     0x403481
  403461:	lea    rcx,[rip+0x21d8]        # 0x405640
  403468:	mov    DWORD PTR [rip+0x5256],0x1        # 0x4086c8
  403472:	call   0x4039f0
  403477:	test   rax,rax
  40347a:	je     0x403490
  40347c:	mov    eax,0x1
  403481:	add    rsp,0x20
  403485:	pop    rbx
  403486:	pop    rsi
  403487:	pop    rdi
  403488:	pop    rbp
  403489:	pop    r12
  40348b:	ret    
  40348c:	nop    DWORD PTR [rax+0x0]
  403490:	lea    rbx,[rip+0x5369]        # 0x408800
  403497:	mov    ecx,0x30
  40349c:	lea    rdx,[rip+0x525d]        # 0x408700
  4034a3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x403290
  4034aa:	xor    esi,esi
  4034ac:	mov    rdi,rbx
  4034af:	rep stos QWORD PTR es:[rdi],rax
  4034b2:	mov    rdi,rdx
  4034b5:	sub    r12,rbp
  4034b8:	mov    cl,0x20
  4034ba:	rep stos QWORD PTR es:[rdi],rax
  4034bd:	mov    rdi,rdx
  4034c0:	jmp    0x4034f0
  4034c2:	mov    BYTE PTR [rdi],0x9
  4034c5:	mov    DWORD PTR [rdi+0x4],r12d
  4034c9:	add    rsi,0x1
  4034cd:	mov    edx,DWORD PTR [rax+0xc]
  4034d0:	add    rbx,0xc
  4034d4:	mov    DWORD PTR [rbx-0xc],edx
  4034d7:	add    edx,DWORD PTR [rax+0x8]
  4034da:	mov    rax,rdi
  4034dd:	sub    rax,rbp
  4034e0:	add    rdi,0x8
  4034e4:	mov    DWORD PTR [rbx-0x4],eax
  4034e7:	mov    DWORD PTR [rbx-0x8],edx
  4034ea:	cmp    rsi,0x20
  4034ee:	je     0x403525
  4034f0:	mov    rcx,rsi
  4034f3:	call   0x403b20
  4034f8:	test   rax,rax
  4034fb:	jne    0x4034c2
  4034fd:	test   rsi,rsi
  403500:	je     0x40347c
  403506:	mov    edx,esi
  403508:	nop    DWORD PTR [rax+rax*1+0x0]
  403510:	mov    r8,rbp
  403513:	lea    rcx,[rip+0x52e6]        # 0x408800
  40351a:	call   QWORD PTR [rip+0x5e90]        # 0x4093b0
  403520:	jmp    0x40347c
  403525:	mov    edx,0x20
  40352a:	jmp    0x403510
  40352c:	nop    DWORD PTR [rax+0x0]
  403530:	push   rbx
  403531:	sub    rsp,0x20
  403535:	mov    rdx,QWORD PTR [rcx]
  403538:	mov    eax,DWORD PTR [rdx]
  40353a:	mov    r8d,eax
  40353d:	and    r8d,0x20ffffff
  403544:	cmp    r8d,0x20474343
  40354b:	je     0x403650
  403551:	cmp    eax,0xc0000091
  403556:	mov    rbx,rcx
  403559:	ja     0x4035e0
  40355f:	cmp    eax,0xc000008d
  403564:	jae    0x4035f7
  40356a:	cmp    eax,0xc0000008
  40356f:	je     0x4035a3
  403571:	ja     0x4035b0
  403573:	cmp    eax,0x80000002
  403578:	je     0x4035a3
  40357a:	cmp    eax,0xc0000005
  40357f:	jne    0x4035c2
  403581:	xor    edx,edx
  403583:	mov    ecx,0xb
  403588:	call   0x403d78
  40358d:	cmp    rax,0x1
  403591:	je     0x4036c0
  403597:	test   rax,rax
  40359a:	je     0x4035c2
  40359c:	mov    ecx,0xb
  4035a1:	call   rax
  4035a3:	mov    eax,0xffffffff
  4035a8:	add    rsp,0x20
  4035ac:	pop    rbx
  4035ad:	ret    
  4035ae:	xchg   ax,ax
  4035b0:	cmp    eax,0xc000001d
  4035b5:	je     0x403676
  4035bb:	cmp    eax,0xc000008c
  4035c0:	je     0x4035a3
  4035c2:	mov    rax,QWORD PTR [rip+0x50f7]        # 0x4086c0
  4035c9:	test   rax,rax
  4035cc:	je     0x4035a8
  4035ce:	mov    rcx,rbx
  4035d1:	add    rsp,0x20
  4035d5:	pop    rbx
  4035d6:	rex.W jmp rax
  4035d9:	nop    DWORD PTR [rax+0x0]
  4035e0:	cmp    eax,0xc0000094
  4035e5:	je     0x403622
  4035e7:	ja     0x403660
  4035e9:	cmp    eax,0xc0000092
  4035ee:	je     0x4035a3
  4035f0:	cmp    eax,0xc0000093
  4035f5:	jne    0x4035c2
  4035f7:	xor    edx,edx
  4035f9:	mov    ecx,0x8
  4035fe:	call   0x403d78
  403603:	cmp    rax,0x1
  403607:	jne    0x403634
  403609:	mov    edx,0x1
  40360e:	mov    ecx,0x8
  403613:	call   0x403d78
  403618:	call   0x402d80
  40361d:	jmp    0x4035a3
  403622:	xor    edx,edx
  403624:	mov    ecx,0x8
  403629:	call   0x403d78
  40362e:	cmp    rax,0x1
  403632:	je     0x4036a2
  403634:	test   rax,rax
  403637:	je     0x4035c2
  403639:	mov    ecx,0x8
  40363e:	call   rax
  403640:	mov    eax,0xffffffff
  403645:	jmp    0x4035a8
  40364a:	nop    WORD PTR [rax+rax*1+0x0]
  403650:	test   BYTE PTR [rdx+0x4],0x1
  403654:	jne    0x403551
  40365a:	jmp    0x4035a3
  40365f:	nop
  403660:	cmp    eax,0xc0000095
  403665:	je     0x4035a3
  40366b:	cmp    eax,0xc0000096
  403670:	jne    0x4035c2
  403676:	xor    edx,edx
  403678:	mov    ecx,0x4
  40367d:	call   0x403d78
  403682:	cmp    rax,0x1
  403686:	je     0x4036d4
  403688:	test   rax,rax
  40368b:	je     0x4035c2
  403691:	mov    ecx,0x4
  403696:	call   rax
  403698:	mov    eax,0xffffffff
  40369d:	jmp    0x4035a8
  4036a2:	mov    edx,0x1
  4036a7:	mov    ecx,0x8
  4036ac:	call   0x403d78
  4036b1:	jmp    0x4035a3
  4036b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036c0:	mov    edx,0x1
  4036c5:	mov    ecx,0xb
  4036ca:	call   0x403d78
  4036cf:	jmp    0x4035a3
  4036d4:	mov    edx,0x1
  4036d9:	mov    ecx,0x4
  4036de:	call   0x403d78
  4036e3:	jmp    0x4035a3
  4036e8:	nop
  4036e9:	nop
  4036ea:	nop
  4036eb:	nop
  4036ec:	nop
  4036ed:	nop
  4036ee:	nop
  4036ef:	nop
  4036f0:	push   rbp
  4036f1:	push   rdi
  4036f2:	push   rsi
  4036f3:	push   rbx
  4036f4:	sub    rsp,0x28
  4036f8:	lea    rcx,[rip+0x52a1]        # 0x4089a0
  4036ff:	call   QWORD PTR [rip+0x5c53]        # 0x409358
  403705:	mov    rbx,QWORD PTR [rip+0x5274]        # 0x408980
  40370c:	test   rbx,rbx
  40370f:	je     0x403744
  403711:	mov    rbp,QWORD PTR [rip+0x5cd0]        # 0x4093e8
  403718:	mov    rdi,QWORD PTR [rip+0x5c59]        # 0x409378
  40371f:	nop
  403720:	mov    ecx,DWORD PTR [rbx]
  403722:	call   rbp
  403724:	mov    rsi,rax
  403727:	call   rdi
  403729:	test   eax,eax
  40372b:	jne    0x40373b
  40372d:	test   rsi,rsi
  403730:	je     0x40373b
  403732:	mov    rax,QWORD PTR [rbx+0x8]
  403736:	mov    rcx,rsi
  403739:	call   rax
  40373b:	mov    rbx,QWORD PTR [rbx+0x10]
  40373f:	test   rbx,rbx
  403742:	jne    0x403720
  403744:	mov    rax,QWORD PTR [rip+0x5c55]        # 0x4093a0
  40374b:	lea    rcx,[rip+0x524e]        # 0x4089a0
  403752:	add    rsp,0x28
  403756:	pop    rbx
  403757:	pop    rsi
  403758:	pop    rdi
  403759:	pop    rbp
  40375a:	rex.W jmp rax
  40375d:	nop    DWORD PTR [rax]
  403760:	push   rdi
  403761:	push   rsi
  403762:	push   rbx
  403763:	sub    rsp,0x20
  403767:	mov    eax,DWORD PTR [rip+0x521b]        # 0x408988
  40376d:	test   eax,eax
  40376f:	jne    0x403780
  403771:	add    rsp,0x20
  403775:	pop    rbx
  403776:	pop    rsi
  403777:	pop    rdi
  403778:	ret    
  403779:	nop    DWORD PTR [rax+0x0]
  403780:	mov    rsi,rdx
  403783:	mov    edi,ecx
  403785:	mov    edx,0x18
  40378a:	mov    ecx,0x1
  40378f:	call   0x403dc0
  403794:	test   rax,rax
  403797:	mov    rbx,rax
  40379a:	je     0x4037d8
  40379c:	mov    DWORD PTR [rax],edi
  40379e:	mov    QWORD PTR [rax+0x8],rsi
  4037a2:	lea    rcx,[rip+0x51f7]        # 0x4089a0
  4037a9:	call   QWORD PTR [rip+0x5ba9]        # 0x409358
  4037af:	mov    rax,QWORD PTR [rip+0x51ca]        # 0x408980
  4037b6:	lea    rcx,[rip+0x51e3]        # 0x4089a0
  4037bd:	mov    QWORD PTR [rip+0x51bc],rbx        # 0x408980
  4037c4:	mov    QWORD PTR [rbx+0x10],rax
  4037c8:	call   QWORD PTR [rip+0x5bd2]        # 0x4093a0
  4037ce:	xor    eax,eax
  4037d0:	add    rsp,0x20
  4037d4:	pop    rbx
  4037d5:	pop    rsi
  4037d6:	pop    rdi
  4037d7:	ret    
  4037d8:	mov    eax,0xffffffff
  4037dd:	jmp    0x403771
  4037df:	nop
  4037e0:	push   rbx
  4037e1:	sub    rsp,0x20
  4037e5:	mov    eax,DWORD PTR [rip+0x519d]        # 0x408988
  4037eb:	test   eax,eax
  4037ed:	jne    0x403800
  4037ef:	xor    eax,eax
  4037f1:	add    rsp,0x20
  4037f5:	pop    rbx
  4037f6:	ret    
  4037f7:	nop    WORD PTR [rax+rax*1+0x0]
  403800:	mov    ebx,ecx
  403802:	lea    rcx,[rip+0x5197]        # 0x4089a0
  403809:	call   QWORD PTR [rip+0x5b49]        # 0x409358
  40380f:	mov    rdx,QWORD PTR [rip+0x516a]        # 0x408980
  403816:	test   rdx,rdx
  403819:	je     0x403837
  40381b:	mov    eax,DWORD PTR [rdx]
  40381d:	cmp    eax,ebx
  40381f:	jne    0x40382e
  403821:	jmp    0x40386f
  403823:	mov    r8d,DWORD PTR [rax]
  403826:	cmp    r8d,ebx
  403829:	je     0x403850
  40382b:	mov    rdx,rax
  40382e:	mov    rax,QWORD PTR [rdx+0x10]
  403832:	test   rax,rax
  403835:	jne    0x403823
  403837:	lea    rcx,[rip+0x5162]        # 0x4089a0
  40383e:	call   QWORD PTR [rip+0x5b5c]        # 0x4093a0
  403844:	xor    eax,eax
  403846:	add    rsp,0x20
  40384a:	pop    rbx
  40384b:	ret    
  40384c:	nop    DWORD PTR [rax+0x0]
  403850:	mov    rcx,rax
  403853:	mov    rax,QWORD PTR [rax+0x10]
  403857:	mov    QWORD PTR [rdx+0x10],rax
  40385b:	call   0x403da8
  403860:	lea    rcx,[rip+0x5139]        # 0x4089a0
  403867:	call   QWORD PTR [rip+0x5b33]        # 0x4093a0
  40386d:	jmp    0x403844
  40386f:	mov    rax,QWORD PTR [rdx+0x10]
  403873:	mov    rcx,rdx
  403876:	mov    QWORD PTR [rip+0x5103],rax        # 0x408980
  40387d:	jmp    0x40385b
  40387f:	nop
  403880:	push   rbx
  403881:	sub    rsp,0x20
  403885:	cmp    edx,0x1
  403888:	je     0x403920
  40388e:	jb     0x4038c0
  403890:	cmp    edx,0x2
  403893:	je     0x4038b0
  403895:	cmp    edx,0x3
  403898:	jne    0x4038b5
  40389a:	mov    eax,DWORD PTR [rip+0x50e8]        # 0x408988
  4038a0:	test   eax,eax
  4038a2:	je     0x4038b5
  4038a4:	call   0x4036f0
  4038a9:	jmp    0x4038b5
  4038ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4038b0:	call   0x402d80
  4038b5:	mov    eax,0x1
  4038ba:	add    rsp,0x20
  4038be:	pop    rbx
  4038bf:	ret    
  4038c0:	mov    eax,DWORD PTR [rip+0x50c2]        # 0x408988
  4038c6:	test   eax,eax
  4038c8:	jne    0x403950
  4038ce:	mov    eax,DWORD PTR [rip+0x50b4]        # 0x408988
  4038d4:	cmp    eax,0x1
  4038d7:	jne    0x4038b5
  4038d9:	mov    rcx,QWORD PTR [rip+0x50a0]        # 0x408980
  4038e0:	test   rcx,rcx
  4038e3:	je     0x4038f6
  4038e5:	mov    rbx,QWORD PTR [rcx+0x10]
  4038e9:	call   0x403da8
  4038ee:	test   rbx,rbx
  4038f1:	mov    rcx,rbx
  4038f4:	jne    0x4038e5
  4038f6:	lea    rcx,[rip+0x50a3]        # 0x4089a0
  4038fd:	mov    QWORD PTR [rip+0x5078],0x0        # 0x408980
  403908:	mov    DWORD PTR [rip+0x5076],0x0        # 0x408988
  403912:	call   QWORD PTR [rip+0x5a38]        # 0x409350
  403918:	jmp    0x4038b5
  40391a:	nop    WORD PTR [rax+rax*1+0x0]
  403920:	mov    eax,DWORD PTR [rip+0x5062]        # 0x408988
  403926:	test   eax,eax
  403928:	je     0x403940
  40392a:	mov    eax,0x1
  40392f:	mov    DWORD PTR [rip+0x504f],0x1        # 0x408988
  403939:	add    rsp,0x20
  40393d:	pop    rbx
  40393e:	ret    
  40393f:	nop
  403940:	lea    rcx,[rip+0x5059]        # 0x4089a0
  403947:	call   QWORD PTR [rip+0x5a4b]        # 0x409398
  40394d:	jmp    0x40392a
  40394f:	nop
  403950:	call   0x4036f0
  403955:	jmp    0x4038ce
  40395a:	nop
  40395b:	nop
  40395c:	nop
  40395d:	nop
  40395e:	nop
  40395f:	nop
  403960:	movsxd rax,DWORD PTR [rcx+0x3c]
  403964:	add    rcx,rax
  403967:	xor    eax,eax
  403969:	cmp    DWORD PTR [rcx],0x4550
  40396f:	je     0x403973
  403971:	repz ret 
  403973:	xor    eax,eax
  403975:	cmp    WORD PTR [rcx+0x18],0x20b
  40397b:	sete   al
  40397e:	ret    
  40397f:	nop
  403980:	cmp    WORD PTR [rcx],0x5a4d
  403985:	je     0x403990
  403987:	xor    eax,eax
  403989:	ret    
  40398a:	nop    WORD PTR [rax+rax*1+0x0]
  403990:	jmp    0x403960
  403992:	nop    DWORD PTR [rax+0x0]
  403996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039a0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4039a4:	add    rcx,rax
  4039a7:	movzx  eax,WORD PTR [rcx+0x14]
  4039ab:	lea    rax,[rcx+rax*1+0x18]
  4039b0:	movzx  ecx,WORD PTR [rcx+0x6]
  4039b4:	test   ecx,ecx
  4039b6:	je     0x4039e1
  4039b8:	sub    ecx,0x1
  4039bb:	lea    rcx,[rcx+rcx*4]
  4039bf:	lea    r9,[rax+rcx*8+0x28]
  4039c4:	mov    r8d,DWORD PTR [rax+0xc]
  4039c8:	cmp    r8,rdx
  4039cb:	mov    rcx,r8
  4039ce:	ja     0x4039d8
  4039d0:	add    ecx,DWORD PTR [rax+0x8]
  4039d3:	cmp    rdx,rcx
  4039d6:	jb     0x4039e3
  4039d8:	add    rax,0x28
  4039dc:	cmp    rax,r9
  4039df:	jne    0x4039c4
  4039e1:	xor    eax,eax
  4039e3:	repz ret 
  4039e5:	nop
  4039e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039f0:	push   rdi
  4039f1:	push   rsi
  4039f2:	push   rbx
  4039f3:	sub    rsp,0x20
  4039f7:	mov    rsi,rcx
  4039fa:	call   0x403d60
  4039ff:	cmp    rax,0x8
  403a03:	ja     0x403a20
  403a05:	mov    rbx,QWORD PTR [rip+0x1cc4]        # 0x4056d0
  403a0c:	xor    edi,edi
  403a0e:	cmp    WORD PTR [rbx],0x5a4d
  403a13:	je     0x403a30
  403a15:	mov    rax,rdi
  403a18:	add    rsp,0x20
  403a1c:	pop    rbx
  403a1d:	pop    rsi
  403a1e:	pop    rdi
  403a1f:	ret    
  403a20:	xor    edi,edi
  403a22:	mov    rax,rdi
  403a25:	add    rsp,0x20
  403a29:	pop    rbx
  403a2a:	pop    rsi
  403a2b:	pop    rdi
  403a2c:	ret    
  403a2d:	nop    DWORD PTR [rax]
  403a30:	mov    rcx,rbx
  403a33:	call   0x403960
  403a38:	test   eax,eax
  403a3a:	je     0x403a15
  403a3c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  403a40:	add    rdx,rbx
  403a43:	movzx  eax,WORD PTR [rdx+0x14]
  403a47:	lea    rbx,[rdx+rax*1+0x18]
  403a4c:	movzx  eax,WORD PTR [rdx+0x6]
  403a50:	test   eax,eax
  403a52:	je     0x403a15
  403a54:	sub    eax,0x1
  403a57:	lea    rax,[rax+rax*4]
  403a5b:	lea    rdi,[rbx+rax*8+0x28]
  403a60:	jmp    0x403a6b
  403a62:	add    rbx,0x28
  403a66:	cmp    rbx,rdi
  403a69:	je     0x403a20
  403a6b:	mov    r8d,0x8
  403a71:	mov    rdx,rsi
  403a74:	mov    rcx,rbx
  403a77:	call   0x403d58
  403a7c:	test   eax,eax
  403a7e:	jne    0x403a62
  403a80:	mov    rdi,rbx
  403a83:	mov    rax,rdi
  403a86:	add    rsp,0x20
  403a8a:	pop    rbx
  403a8b:	pop    rsi
  403a8c:	pop    rdi
  403a8d:	ret    
  403a8e:	xchg   ax,ax
  403a90:	push   rsi
  403a91:	push   rbx
  403a92:	sub    rsp,0x28
  403a96:	mov    rbx,QWORD PTR [rip+0x1c33]        # 0x4056d0
  403a9d:	cmp    WORD PTR [rbx],0x5a4d
  403aa2:	je     0x403ab0
  403aa4:	xor    eax,eax
  403aa6:	add    rsp,0x28
  403aaa:	pop    rbx
  403aab:	pop    rsi
  403aac:	ret    
  403aad:	nop    DWORD PTR [rax]
  403ab0:	mov    rsi,rcx
  403ab3:	mov    rcx,rbx
  403ab6:	call   0x403960
  403abb:	test   eax,eax
  403abd:	je     0x403aa4
  403abf:	sub    rsi,rbx
  403ac2:	mov    rcx,rbx
  403ac5:	mov    rdx,rsi
  403ac8:	add    rsp,0x28
  403acc:	pop    rbx
  403acd:	pop    rsi
  403ace:	jmp    0x4039a0
  403ad3:	nop    DWORD PTR [rax]
  403ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ae0:	push   rbx
  403ae1:	sub    rsp,0x20
  403ae5:	mov    rbx,QWORD PTR [rip+0x1be4]        # 0x4056d0
  403aec:	xor    eax,eax
  403aee:	cmp    WORD PTR [rbx],0x5a4d
  403af3:	je     0x403b00
  403af5:	add    rsp,0x20
  403af9:	pop    rbx
  403afa:	ret    
  403afb:	nop    DWORD PTR [rax+rax*1+0x0]
  403b00:	mov    rcx,rbx
  403b03:	call   0x403960
  403b08:	test   eax,eax
  403b0a:	je     0x403af5
  403b0c:	movsxd rax,DWORD PTR [rbx+0x3c]
  403b10:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  403b15:	add    rsp,0x20
  403b19:	pop    rbx
  403b1a:	ret    
  403b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  403b20:	push   rdi
  403b21:	push   rsi
  403b22:	push   rbx
  403b23:	sub    rsp,0x20
  403b27:	mov    rsi,QWORD PTR [rip+0x1ba2]        # 0x4056d0
  403b2e:	xor    edi,edi
  403b30:	mov    rbx,rcx
  403b33:	cmp    WORD PTR [rsi],0x5a4d
  403b38:	je     0x403b45
  403b3a:	mov    rax,rdi
  403b3d:	add    rsp,0x20
  403b41:	pop    rbx
  403b42:	pop    rsi
  403b43:	pop    rdi
  403b44:	ret    
  403b45:	mov    rcx,rsi
  403b48:	call   0x403960
  403b4d:	test   eax,eax
  403b4f:	je     0x403b3a
  403b51:	movsxd rax,DWORD PTR [rsi+0x3c]
  403b55:	add    rsi,rax
  403b58:	movzx  eax,WORD PTR [rsi+0x14]
  403b5c:	lea    rdx,[rsi+rax*1+0x18]
  403b61:	movzx  eax,WORD PTR [rsi+0x6]
  403b65:	test   eax,eax
  403b67:	je     0x403b3a
  403b69:	sub    eax,0x1
  403b6c:	lea    rax,[rax+rax*4]
  403b70:	lea    rax,[rdx+rax*8+0x28]
  403b75:	test   BYTE PTR [rdx+0x27],0x20
  403b79:	je     0x403b84
  403b7b:	test   rbx,rbx
  403b7e:	je     0x403ba0
  403b80:	sub    rbx,0x1
  403b84:	add    rdx,0x28
  403b88:	cmp    rdx,rax
  403b8b:	jne    0x403b75
  403b8d:	xor    edi,edi
  403b8f:	mov    rax,rdi
  403b92:	add    rsp,0x20
  403b96:	pop    rbx
  403b97:	pop    rsi
  403b98:	pop    rdi
  403b99:	ret    
  403b9a:	nop    WORD PTR [rax+rax*1+0x0]
  403ba0:	mov    rdi,rdx
  403ba3:	mov    rax,rdi
  403ba6:	add    rsp,0x20
  403baa:	pop    rbx
  403bab:	pop    rsi
  403bac:	pop    rdi
  403bad:	ret    
  403bae:	xchg   ax,ax
  403bb0:	push   rsi
  403bb1:	push   rbx
  403bb2:	sub    rsp,0x28
  403bb6:	mov    rsi,QWORD PTR [rip+0x1b13]        # 0x4056d0
  403bbd:	xor    ebx,ebx
  403bbf:	cmp    WORD PTR [rsi],0x5a4d
  403bc4:	je     0x403bd0
  403bc6:	mov    rax,rbx
  403bc9:	add    rsp,0x28
  403bcd:	pop    rbx
  403bce:	pop    rsi
  403bcf:	ret    
  403bd0:	mov    rcx,rsi
  403bd3:	call   0x403960
  403bd8:	test   eax,eax
  403bda:	cmovne rbx,rsi
  403bde:	mov    rax,rbx
  403be1:	add    rsp,0x28
  403be5:	pop    rbx
  403be6:	pop    rsi
  403be7:	ret    
  403be8:	nop    DWORD PTR [rax+rax*1+0x0]
  403bf0:	push   rsi
  403bf1:	push   rbx
  403bf2:	sub    rsp,0x28
  403bf6:	mov    rbx,QWORD PTR [rip+0x1ad3]        # 0x4056d0
  403bfd:	xor    eax,eax
  403bff:	cmp    WORD PTR [rbx],0x5a4d
  403c04:	je     0x403c10
  403c06:	add    rsp,0x28
  403c0a:	pop    rbx
  403c0b:	pop    rsi
  403c0c:	ret    
  403c0d:	nop    DWORD PTR [rax]
  403c10:	mov    rsi,rcx
  403c13:	mov    rcx,rbx
  403c16:	call   0x403960
  403c1b:	test   eax,eax
  403c1d:	je     0x403c06
  403c1f:	sub    rsi,rbx
  403c22:	mov    rcx,rbx
  403c25:	mov    rdx,rsi
  403c28:	call   0x4039a0
  403c2d:	test   rax,rax
  403c30:	je     0x403c41
  403c32:	mov    eax,DWORD PTR [rax+0x24]
  403c35:	not    eax
  403c37:	shr    eax,0x1f
  403c3a:	add    rsp,0x28
  403c3e:	pop    rbx
  403c3f:	pop    rsi
  403c40:	ret    
  403c41:	xor    eax,eax
  403c43:	jmp    0x403c06
  403c45:	nop
  403c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c50:	push   rbp
  403c51:	push   rdi
  403c52:	push   rsi
  403c53:	push   rbx
  403c54:	sub    rsp,0x28
  403c58:	mov    rdi,QWORD PTR [rip+0x1a71]        # 0x4056d0
  403c5f:	xor    ebp,ebp
  403c61:	mov    esi,ecx
  403c63:	cmp    WORD PTR [rdi],0x5a4d
  403c68:	je     0x403c80
  403c6a:	mov    rax,rbp
  403c6d:	add    rsp,0x28
  403c71:	pop    rbx
  403c72:	pop    rsi
  403c73:	pop    rdi
  403c74:	pop    rbp
  403c75:	ret    
  403c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c80:	mov    rcx,rdi
  403c83:	call   0x403960
  403c88:	test   eax,eax
  403c8a:	je     0x403c6a
  403c8c:	movsxd rax,DWORD PTR [rdi+0x3c]
  403c90:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  403c97:	test   edx,edx
  403c99:	je     0x403c6a
  403c9b:	mov    ebx,edx
  403c9d:	mov    rcx,rdi
  403ca0:	mov    rdx,rbx
  403ca3:	call   0x4039a0
  403ca8:	test   rax,rax
  403cab:	je     0x403c6a
  403cad:	add    rbx,rdi
  403cb0:	mov    rdx,rbx
  403cb3:	jne    0x403cc7
  403cb5:	jmp    0x403c6a
  403cb7:	nop    WORD PTR [rax+rax*1+0x0]
  403cc0:	sub    esi,0x1
  403cc3:	add    rdx,0x14
  403cc7:	mov    ecx,DWORD PTR [rdx+0x4]
  403cca:	test   ecx,ecx
  403ccc:	jne    0x403cd5
  403cce:	mov    eax,DWORD PTR [rdx+0xc]
  403cd1:	test   eax,eax
  403cd3:	je     0x403cf0
  403cd5:	test   esi,esi
  403cd7:	jg     0x403cc0
  403cd9:	mov    ebp,DWORD PTR [rdx+0xc]
  403cdc:	add    rbp,rdi
  403cdf:	mov    rax,rbp
  403ce2:	add    rsp,0x28
  403ce6:	pop    rbx
  403ce7:	pop    rsi
  403ce8:	pop    rdi
  403ce9:	pop    rbp
  403cea:	ret    
  403ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  403cf0:	xor    ebp,ebp
  403cf2:	mov    rax,rbp
  403cf5:	add    rsp,0x28
  403cf9:	pop    rbx
  403cfa:	pop    rsi
  403cfb:	pop    rdi
  403cfc:	pop    rbp
  403cfd:	ret    
  403cfe:	nop
  403cff:	nop
  403d00:	push   rcx
  403d01:	push   rax
  403d02:	cmp    rax,0x1000
  403d08:	lea    rcx,[rsp+0x18]
  403d0d:	jb     0x403d28
  403d0f:	sub    rcx,0x1000
  403d16:	or     QWORD PTR [rcx],0x0
  403d1a:	sub    rax,0x1000
  403d20:	cmp    rax,0x1000
  403d26:	ja     0x403d0f
  403d28:	sub    rcx,rax
  403d2b:	or     QWORD PTR [rcx],0x0
  403d2f:	pop    rax
  403d30:	pop    rcx
  403d31:	ret    
  403d32:	nop
  403d33:	nop
  403d34:	nop
  403d35:	nop
  403d36:	nop
  403d37:	nop
  403d38:	nop
  403d39:	nop
  403d3a:	nop
  403d3b:	nop
  403d3c:	nop
  403d3d:	nop
  403d3e:	nop
  403d3f:	nop
  403d40:	jmp    QWORD PTR [rip+0x580a]        # 0x409550
  403d46:	nop
  403d47:	nop
  403d48:	jmp    QWORD PTR [rip+0x57fa]        # 0x409548
  403d4e:	nop
  403d4f:	nop
  403d50:	jmp    QWORD PTR [rip+0x57ea]        # 0x409540
  403d56:	nop
  403d57:	nop
  403d58:	jmp    QWORD PTR [rip+0x57da]        # 0x409538
  403d5e:	nop
  403d5f:	nop
  403d60:	jmp    QWORD PTR [rip+0x57ca]        # 0x409530
  403d66:	nop
  403d67:	nop
  403d68:	jmp    QWORD PTR [rip+0x57ba]        # 0x409528
  403d6e:	nop
  403d6f:	nop
  403d70:	jmp    QWORD PTR [rip+0x57aa]        # 0x409520
  403d76:	nop
  403d77:	nop
  403d78:	jmp    QWORD PTR [rip+0x579a]        # 0x409518
  403d7e:	nop
  403d7f:	nop
  403d80:	jmp    QWORD PTR [rip+0x578a]        # 0x409510
  403d86:	nop
  403d87:	nop
  403d88:	jmp    QWORD PTR [rip+0x577a]        # 0x409508
  403d8e:	nop
  403d8f:	nop
  403d90:	jmp    QWORD PTR [rip+0x576a]        # 0x409500
  403d96:	nop
  403d97:	nop
  403d98:	jmp    QWORD PTR [rip+0x575a]        # 0x4094f8
  403d9e:	nop
  403d9f:	nop
  403da0:	jmp    QWORD PTR [rip+0x574a]        # 0x4094f0
  403da6:	nop
  403da7:	nop
  403da8:	jmp    QWORD PTR [rip+0x573a]        # 0x4094e8
  403dae:	nop
  403daf:	nop
  403db0:	jmp    QWORD PTR [rip+0x572a]        # 0x4094e0
  403db6:	nop
  403db7:	nop
  403db8:	jmp    QWORD PTR [rip+0x571a]        # 0x4094d8
  403dbe:	nop
  403dbf:	nop
  403dc0:	jmp    QWORD PTR [rip+0x570a]        # 0x4094d0
  403dc6:	nop
  403dc7:	nop
  403dc8:	jmp    QWORD PTR [rip+0x56fa]        # 0x4094c8
  403dce:	nop
  403dcf:	nop
  403dd0:	jmp    QWORD PTR [rip+0x56ea]        # 0x4094c0
  403dd6:	nop
  403dd7:	nop
  403dd8:	jmp    QWORD PTR [rip+0x56da]        # 0x4094b8
  403dde:	nop
  403ddf:	nop
  403de0:	jmp    QWORD PTR [rip+0x56ca]        # 0x4094b0
  403de6:	nop
  403de7:	nop
  403de8:	jmp    QWORD PTR [rip+0x56ba]        # 0x4094a8
  403dee:	nop
  403def:	nop
  403df0:	jmp    QWORD PTR [rip+0x56aa]        # 0x4094a0
  403df6:	nop
  403df7:	nop
  403df8:	jmp    QWORD PTR [rip+0x569a]        # 0x409498
  403dfe:	nop
  403dff:	nop
  403e00:	jmp    QWORD PTR [rip+0x568a]        # 0x409490
  403e06:	nop
  403e07:	nop
  403e08:	jmp    QWORD PTR [rip+0x567a]        # 0x409488
  403e0e:	nop
  403e0f:	nop
  403e10:	jmp    QWORD PTR [rip+0x566a]        # 0x409480
  403e16:	nop
  403e17:	nop
  403e18:	jmp    QWORD PTR [rip+0x5652]        # 0x409470
  403e1e:	nop
  403e1f:	nop
  403e20:	jmp    QWORD PTR [rip+0x5642]        # 0x409468
  403e26:	nop
  403e27:	nop
  403e28:	jmp    QWORD PTR [rip+0x5632]        # 0x409460
  403e2e:	nop
  403e2f:	nop
  403e30:	jmp    QWORD PTR [rip+0x5622]        # 0x409458
  403e36:	nop
  403e37:	nop
  403e38:	jmp    QWORD PTR [rip+0x560a]        # 0x409448
  403e3e:	nop
  403e3f:	nop
  403e40:	jmp    QWORD PTR [rip+0x55fa]        # 0x409440
  403e46:	nop
  403e47:	nop
  403e48:	jmp    QWORD PTR [rip+0x55ea]        # 0x409438
  403e4e:	nop
  403e4f:	nop
  403e50:	jmp    QWORD PTR [rip+0x55da]        # 0x409430
  403e56:	nop
  403e57:	nop
  403e58:	jmp    QWORD PTR [rip+0x55c2]        # 0x409420
  403e5e:	nop
  403e5f:	nop
  403e60:	jmp    QWORD PTR [rip+0x55b2]        # 0x409418
  403e66:	nop
  403e67:	nop
  403e68:	jmp    QWORD PTR [rip+0x55a2]        # 0x409410
  403e6e:	nop
  403e6f:	nop
  403e70:	mov    rax,QWORD PTR [rip+0x4b79]        # 0x4089f0
  403e77:	ret    
  403e78:	nop    DWORD PTR [rax+rax*1+0x0]
  403e80:	mov    rax,rcx
  403e83:	xchg   QWORD PTR [rip+0x4b66],rax        # 0x4089f0
  403e8a:	ret    
  403e8b:	nop
  403e8c:	nop
  403e8d:	nop
  403e8e:	nop
  403e8f:	nop
  403e90:	jmp    QWORD PTR [rip+0x556a]        # 0x409400
  403e96:	nop
  403e97:	nop
  403e98:	jmp    QWORD PTR [rip+0x555a]        # 0x4093f8
  403e9e:	nop
  403e9f:	nop
  403ea0:	jmp    QWORD PTR [rip+0x554a]        # 0x4093f0
  403ea6:	nop
  403ea7:	nop
  403ea8:	jmp    QWORD PTR [rip+0x553a]        # 0x4093e8
  403eae:	nop
  403eaf:	nop
  403eb0:	jmp    QWORD PTR [rip+0x552a]        # 0x4093e0
  403eb6:	nop
  403eb7:	nop
  403eb8:	jmp    QWORD PTR [rip+0x551a]        # 0x4093d8
  403ebe:	nop
  403ebf:	nop
  403ec0:	jmp    QWORD PTR [rip+0x550a]        # 0x4093d0
  403ec6:	nop
  403ec7:	nop
  403ec8:	jmp    QWORD PTR [rip+0x54fa]        # 0x4093c8
  403ece:	nop
  403ecf:	nop
  403ed0:	jmp    QWORD PTR [rip+0x54ea]        # 0x4093c0
  403ed6:	nop
  403ed7:	nop
  403ed8:	jmp    QWORD PTR [rip+0x54da]        # 0x4093b8
  403ede:	nop
  403edf:	nop
  403ee0:	jmp    QWORD PTR [rip+0x54ca]        # 0x4093b0
  403ee6:	nop
  403ee7:	nop
  403ee8:	jmp    QWORD PTR [rip+0x54ba]        # 0x4093a8
  403eee:	nop
  403eef:	nop
  403ef0:	jmp    QWORD PTR [rip+0x54aa]        # 0x4093a0
  403ef6:	nop
  403ef7:	nop
  403ef8:	jmp    QWORD PTR [rip+0x549a]        # 0x409398
  403efe:	nop
  403eff:	nop
  403f00:	jmp    QWORD PTR [rip+0x548a]        # 0x409390
  403f06:	nop
  403f07:	nop
  403f08:	jmp    QWORD PTR [rip+0x547a]        # 0x409388
  403f0e:	nop
  403f0f:	nop
  403f10:	jmp    QWORD PTR [rip+0x546a]        # 0x409380
  403f16:	nop
  403f17:	nop
  403f18:	jmp    QWORD PTR [rip+0x545a]        # 0x409378
  403f1e:	nop
  403f1f:	nop
  403f20:	jmp    QWORD PTR [rip+0x544a]        # 0x409370
  403f26:	nop
  403f27:	nop
  403f28:	jmp    QWORD PTR [rip+0x543a]        # 0x409368
  403f2e:	nop
  403f2f:	nop
  403f30:	jmp    QWORD PTR [rip+0x542a]        # 0x409360
  403f36:	nop
  403f37:	nop
  403f38:	jmp    QWORD PTR [rip+0x541a]        # 0x409358
  403f3e:	nop
  403f3f:	nop
  403f40:	jmp    QWORD PTR [rip+0x540a]        # 0x409350
  403f46:	nop
  403f47:	nop
  403f48:	nop    DWORD PTR [rax+rax*1+0x0]
  403f50:	(bad)  
  403f51:	(bad)  
  403f52:	(bad)  
  403f53:	(bad)  
  403f54:	(bad)  
  403f55:	(bad)  
  403f56:	(bad)  
  403f57:	inc    DWORD PTR [rax]
  403f59:	add    BYTE PTR [rax],al
  403f5b:	add    BYTE PTR [rax],al
  403f5d:	add    BYTE PTR [rax],al
  403f5f:	add    bh,bh
  403f61:	(bad)  
  403f62:	(bad)  
  403f63:	(bad)  
  403f64:	(bad)  
  403f65:	(bad)  
  403f66:	(bad)  
  403f67:	inc    DWORD PTR [rax]
  403f69:	add    BYTE PTR [rax],al
  403f6b:	add    BYTE PTR [rax],al
  403f6d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	push   0x403f
	...
  40401d:	add    BYTE PTR [rax],al
  40401f:	add    bh,bh
  404021:	(bad)  
  404022:	(bad)  
  404023:	(bad)  
  404024:	(bad)  
  404025:	(bad)  
  404026:	(bad)  
  404027:	inc    DWORD PTR [rax]
  404029:	add    BYTE PTR [rax],al
  40402b:	add    BYTE PTR [rax],al
  40402d:	add    BYTE PTR [rax],al
  40402f:	add    bh,bh
	...
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    BYTE PTR [rdx],al
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    bh,bh
  404051:	(bad)  
  404052:	(bad)  
  404053:	inc    DWORD PTR [rax]
	...
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    BYTE PTR [rax+0x3e],dh
  404062:	add    BYTE PTR [rax],al
  404065:	add    BYTE PTR [rax],al
  404067:	add    BYTE PTR [rax+0x403e],al
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    BYTE PTR [rdx],dh
  404071:	movabs ds:0x2b992ddf,al
  40407a:	add    BYTE PTR [rax],al
  40407c:	add    BYTE PTR [rax],al
  40407e:	add    BYTE PTR [rax],al
  404080:	int    0x5d
  404082:	and    dl,dl
  404084:	data16 (bad) 
  404086:	(bad)  
  404087:	inc    DWORD PTR [rax]
  404089:	add    BYTE PTR [rax],al
  40408b:	add    BYTE PTR [rax],al
  40408d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	jne    0x405075
  405002:	(bad)  
  405003:	cmp    ah,BYTE PTR gs:[eax]
  405007:	and    eax,0x2d5b2073
  40500c:	jbe    0x40506b
  40500e:	and    BYTE PTR [rbx+0x2d],bl
  405011:	push   rsi
  405012:	pop    rbp
  405013:	and    BYTE PTR [rbx+0x2d],bl
  405016:	pop    rbx
  405017:	(bad)  
  405018:	jl     0x405087
  40501a:	pop    rbp
  40501b:	and    BYTE PTR [rsi+0x5b],cl
  40501e:	addr32 jl 0x40508e
  405021:	jl     0x40508e
  405023:	pop    rbp
  405024:	pop    rbp
  405025:	and    BYTE PTR [rbx+0x2d],bl
  405028:	data16 (bad) 
  40502a:	ins    DWORD PTR es:[rdi],dx
  40502b:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x735f6f74
  405033:	movsxd esi,DWORD PTR gs:[rdx]
  405036:	pop    rbp
  405037:	and    BYTE PTR [rbx+0x52],dl
  40503a:	and    BYTE PTR [r11+r10*2+0x54],al
  40503f:	or     al,BYTE PTR [rax]
  405041:	add    BYTE PTR [rax],al
  405043:	add    BYTE PTR [rax],al
  405045:	add    BYTE PTR [rax],al
  405047:	add    BYTE PTR [rax],ah
  405049:	and    BYTE PTR [rax],ah
  40504b:	sub    eax,0x20202076
  405050:	and    BYTE PTR [rax],ah
  405052:	push   rax
  405053:	jb     0x4050c4
  405055:	fs jne 0x4050bb
  405058:	and    BYTE PTR gs:[rsi+0x65],dh
  40505c:	jb     0x4050c0
  40505e:	outs   dx,DWORD PTR ds:[rsi]
  40505f:	jae    0x4050c6
  405061:	and    BYTE PTR [rdi+0x75],ch
  405064:	je     0x4050d6
  405066:	jne    0x4050dc
  405068:	or     al,BYTE PTR [rax]
  40506a:	add    BYTE PTR [rax],al
  40506c:	add    BYTE PTR [rax],al
  40506e:	add    BYTE PTR [rax],al
  405070:	and    BYTE PTR [rax],ah
  405072:	and    BYTE PTR [rip+0x20202056],ch        # 0x206070ce
  405078:	and    BYTE PTR [rax],ah
  40507a:	push   rax
  40507b:	jb     0x4050e6
  40507d:	outs   dx,BYTE PTR ds:[rsi]
  40507e:	je     0x4050a0
  405080:	(bad)  
  405081:	and    BYTE PTR [rsi+0x65],dh
  405084:	jb     0x4050f9
  405086:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d756e20
  40508d:	(bad)  
  40508e:	gs jb  0x4050b1
  405091:	(bad)  
  405092:	outs   dx,BYTE PTR ds:[rsi]
  405093:	and    BYTE PTR fs:[rbp+0x78],ah
  405097:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x0
  40509f:	add    BYTE PTR [rax],ah
  4050a1:	and    BYTE PTR [rax],ah
  4050a3:	sub    eax,0x204e2062
  4050a8:	and    BYTE PTR [rax],ah
  4050aa:	push   rsp
  4050ab:	push   0x2f492065
  4050b0:	rex.WRXB and BYTE PTR [r10+0x6c],r12b
  4050b4:	outs   dx,DWORD PTR ds:[rsi]
  4050b5:	movsxd ebp,DWORD PTR [rbx+0x20]
  4050b8:	jae    0x405123
  4050ba:	jp     0x405121
  4050bc:	sub    al,0x20
  4050be:	fs gs data16 (bad) 
  4050c2:	jne    0x405130
  4050c4:	je     0x405139
  4050c6:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4050ca:	xor    DWORD PTR [rbx+0x42],ebp
  4050cd:	or     al,BYTE PTR [rax]
  4050cf:	add    BYTE PTR [rax],ah
  4050d1:	and    BYTE PTR [rax],ah
  4050d3:	sub    eax,0x204e206d
  4050d8:	and    BYTE PTR [rax],ah
  4050da:	push   rsp
  4050db:	push   0x65642065
  4050e0:	jae    0x405156
  4050e2:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
  4050e9:	and    BYTE PTR [rbp+0x65],ch
  4050ec:	ins    DWORD PTR es:[rdi],dx
  4050ed:	(bad)  
  4050ee:	gs jb  0x405111
  4050f1:	jae    0x40515c
  4050f3:	jp     0x40515a
  4050f5:	and    BYTE PTR [rdi+0x72],ch
  4050f8:	and    BYTE PTR [rcx],dh
  4050fa:	rex.RXB
  4050fb:	rex.X or al,BYTE PTR [rax]
  4050fe:	add    BYTE PTR [rax],al
  405100:	and    BYTE PTR [rax],ah
  405102:	and    BYTE PTR [rip+0x696d6166],ch        # 0x69adb26e
  405108:	ins    BYTE PTR es:[rdi],dx
  405109:	jns    0x40516a
  40510b:	je     0x40517c
  40510d:	pop    rdi
  40510e:	jae    0x405175
  405110:	movsxd esi,DWORD PTR [rdx]
  405112:	and    BYTE PTR [rax],ah
  405114:	and    BYTE PTR [rbx+0x68],al
  405117:	(bad)  
  405118:	outs   dx,BYTE PTR ds:[rsi]
  405119:	and    BYTE PTR gs:[esi+0x69],ah
  40511e:	ins    BYTE PTR es:[rdi],dx
  40511f:	and    BYTE PTR gs:[rdx+rsi*2+0x69],ah
  405124:	jbe    0x40518b
  405126:	jb     0x405148
  405128:	data16 jb 0x40519a
  40512b:	ins    DWORD PTR es:[rdi],dx
  40512c:	and    BYTE PTR [rsi+0x61],ah
  40512f:	ins    DWORD PTR es:[rdi],dx
  405130:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x73206f74
  405138:	movsxd esi,DWORD PTR gs:[rdx]
  40513b:	or     al,BYTE PTR [rax]
  40513d:	add    BYTE PTR [rax],al
  40513f:	add    BYTE PTR [rax],ah
  405141:	and    BYTE PTR [rax],ah
  405143:	push   rbx
  405144:	push   rdx
  405145:	rex.XB and BYTE PTR [r8],spl
  405148:	and    BYTE PTR [rax],ah
  40514a:	push   rsp
  40514b:	push   0x616e2065
  405150:	ins    DWORD PTR es:[rdi],dx
  405151:	and    BYTE PTR gs:[rdi+0x66],ch
  405155:	and    BYTE PTR [rax+rbp*2+0x65],dh
  405159:	and    BYTE PTR [rbx+0x6f],dh
  40515c:	jne    0x4051d0
  40515e:	movsxd esp,DWORD PTR [rbp+0x20]
  405161:	imul   bp,WORD PTR [rbp+riz*2+0xa],0x0
  405168:	and    BYTE PTR [rax],ah
  40516a:	and    BYTE PTR [rbx+rdx*2+0x54],al
  40516e:	or     DWORD PTR [rax+rbp*2+0x65],edx
  405172:	and    BYTE PTR [rsi+0x61],ch
  405175:	ins    DWORD PTR es:[rdi],dx
  405176:	and    BYTE PTR gs:[rdi+0x66],ch
  40517a:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40517e:	and    BYTE PTR [rbp+riz*2+0x73],ah
  405182:	je     0x4051ed
  405184:	outs   dx,BYTE PTR ds:[rsi]
  405185:	(bad)  
  405186:	je     0x4051f1
  405188:	outs   dx,DWORD PTR ds:[rsi]
  405189:	outs   dx,BYTE PTR ds:[rsi]
  40518a:	and    BYTE PTR [rsi+0x69],ah
  40518d:	ins    BYTE PTR es:[rdi],dx
  40518e:	gs jae 0x40519b
  405191:	add    BYTE PTR [rax],al
  405193:	add    BYTE PTR [rax],al
  405195:	add    BYTE PTR [rax],al
  405197:	add    BYTE PTR [rbx+0x69],dl
  40519a:	jp     0x405201
  40519c:	jae    0x4051be
  40519e:	ins    DWORD PTR es:[rdi],dx
  40519f:	(bad)  
  4051a0:	jns    0x4051c2
  4051a2:	(bad)  
  4051a3:	and    BYTE PTR gs:[rbx+0x75],dh
  4051a7:	data16 imul di,WORD PTR [rax+0x65],0x2064
  4051ae:	ja     0x405219
  4051b0:	je     0x40521a
  4051b2:	and    BYTE PTR [rax+0x67],ah
  4051b5:	(bad)  
  4051b6:	and    BYTE PTR [rsi+0x6f],ah
  4051b9:	jb     0x4051db
  4051bb:	rex.RXB
  4051bc:	rex.X sub al,0x20
  4051bf:	(bad)  
  4051c0:	ins    DWORD PTR es:[rdi],dx
  4051c1:	(bad)  
  4051c2:	and    BYTE PTR [rsi+0x6f],ah
  4051c5:	jb     0x4051e7
  4051c7:	rex.WRB
  4051c8:	rex.X and BYTE PTR [rdi+0x72],bpl
  4051cc:	and    BYTE PTR [rax+0x6b],ah
  4051cf:	(bad)  
  4051d0:	and    BYTE PTR [rsi+0x6f],ah
  4051d3:	jb     0x4051f5
  4051d5:	imul   eax,DWORD PTR [rdx+0x2e],0xa
  4051d9:	add    BYTE PTR [rax],al
  4051db:	add    BYTE PTR [rax],al
  4051dd:	add    BYTE PTR [rax],al
  4051df:	add    BYTE PTR [rsi+0x69],al
  4051e2:	ins    BYTE PTR es:[rdi],dx
  4051e3:	and    BYTE PTR gs:[rsi+0x61],ah
  4051e7:	ins    DWORD PTR es:[rdi],dx
  4051e8:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x656d616e
  4051f0:	jae    0x405212
  4051f2:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  4051f9:	and    BYTE PTR [rcx+0x6e],ah
  4051fc:	and    BYTE PTR [rcx+0x6e],ch
  4051ff:	je     0x405266
  405201:	addr32 gs jb 0x405225
  405205:	jo     0x405279
  405207:	imul   ebp,DWORD PTR [rsi+0x74],0x6f662066
  40520e:	jb     0x40527d
  405210:	(bad)  
  405211:	je     0x405233
  405213:	jae    0x40528a
  405215:	movsxd ebp,DWORD PTR [rax+0x20]
  405218:	(bad)  
  405219:	jae    0x40523b
  40521b:	(bad)  
  40521c:	and    eax,0xa276425
  405221:	add    BYTE PTR [rax],al
  405223:	add    BYTE PTR [rcx],dh
  405225:	(bad)  
  405226:	(bad)  
  405227:	inc    DWORD PTR [rbx-0x3a]
  40522a:	(bad)  
  40522b:	inc    DWORD PTR [rbx-0x3a]
  40522e:	(bad)  
  40522f:	inc    DWORD PTR [rbx-0x3a]
  405232:	(bad)  
  405233:	inc    DWORD PTR [rbx-0x3a]
  405236:	(bad)  
  405237:	inc    DWORD PTR [rbx-0x3a]
  40523a:	(bad)  
  40523b:	push   QWORD PTR [rdi]
  40523d:	(bad)  
  40523e:	(bad)  
  40523f:	inc    DWORD PTR [rbx-0x3a]
  405242:	(bad)  
  405243:	inc    DWORD PTR [rbx-0x3a]
  405246:	(bad)  
  405247:	inc    DWORD PTR [rbx-0x3a]
  40524a:	(bad)  
  40524b:	inc    DWORD PTR [rbx-0x3a]
  40524e:	(bad)  
  40524f:	inc    DWORD PTR [rbx-0x3a]
  405252:	(bad)  
  405253:	inc    DWORD PTR [rbx-0x3a]
  405256:	(bad)  
  405257:	inc    DWORD PTR [rbx-0x3a]
  40525a:	(bad)  
  40525b:	inc    DWORD PTR [rbx-0x3a]
  40525e:	(bad)  
  40525f:	inc    DWORD PTR [rbx-0x3a]
  405262:	(bad)  
  405263:	inc    DWORD PTR [rbx-0x3a]
  405266:	(bad)  
  405267:	inc    DWORD PTR [rbx-0x3a]
  40526a:	(bad)  
  40526b:	inc    DWORD PTR [rbx-0x3a]
  40526e:	(bad)  
  40526f:	inc    DWORD PTR [rbx-0x3a]
  405272:	(bad)  
  405273:	inc    DWORD PTR [rbx-0x3a]
  405276:	(bad)  
  405277:	inc    DWORD PTR [rbx-0x3a]
  40527a:	(bad)  
  40527b:	inc    DWORD PTR [rbx-0x3a]
  40527e:	(bad)  
  40527f:	inc    DWORD PTR [rbx-0x3a]
  405282:	(bad)  
  405283:	inc    DWORD PTR [rbx-0x3a]
  405286:	(bad)  
  405287:	inc    DWORD PTR [rbx-0x3a]
  40528a:	(bad)  
  40528b:	inc    DWORD PTR [rbx-0x3a]
  40528e:	(bad)  
  40528f:	inc    DWORD PTR [rbx-0x3a]
  405292:	(bad)  
  405293:	inc    DWORD PTR [rbx-0x3a]
  405296:	(bad)  
  405297:	inc    DWORD PTR [rbx-0x3a]
  40529a:	(bad)  
  40529b:	inc    DWORD PTR [rbx-0x3a]
  40529e:	(bad)  
  40529f:	inc    DWORD PTR [rbx-0x3a]
  4052a2:	(bad)  
  4052a3:	push   QWORD PTR [rcx]
  4052a5:	(bad)  
  4052a6:	(bad)  
  4052a7:	inc    DWORD PTR [rbx-0x3a]
  4052aa:	(bad)  
  4052ab:	inc    DWORD PTR [rbx-0x3a]
  4052ae:	(bad)  
  4052af:	inc    DWORD PTR [rbx-0x3a]
  4052b2:	(bad)  
  4052b3:	(bad)  
  4052b4:	cmp    eax,0x43ffffc6
  4052b9:	(bad)  
  4052ba:	(bad)  
  4052bb:	push   QWORD PTR [rdi]
  4052bd:	(bad)  
  4052be:	(bad)  
  4052bf:	jmp    FWORD PTR [rip+0x562d0076]        # 0x566d533b
  4052c5:	add    BYTE PTR [rax],al
  4052c7:	add    BYTE PTR [rax+rbp*2+0x69],dl
  4052cb:	jae    0x4052ed
  4052cd:	imul   esi,DWORD PTR [rbx+0x20],0x76207325
  4052d4:	gs jb  0x40534a
  4052d7:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e752520
  4052de:	and    eax,0x65722075
  4052e3:	ins    BYTE PTR es:[rdi],dx
  4052e4:	gs (bad) 
  4052e6:	jae    0x40534d
  4052e8:	and    BYTE PTR [rip+0x2d000a75],ah        # 0x2d405d63
  4052ee:	data16 (bad) 
  4052f0:	ins    DWORD PTR es:[rdi],dx
  4052f1:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x735f6f74
  4052f9:	movsxd esi,DWORD PTR gs:[rdx]
  4052fc:	add    BYTE PTR [rsi+0x73],ah
  4052ff:	je     0x405362
  405301:	je     0x405303
  405303:	cmp    al,0x20
  405305:	and    eax,0x3e000a73
  40530a:	and    BYTE PTR [rip+0x72000a73],ah        # 0x72405d83
  405310:	gs (bad) 
  405312:	add    BYTE PTR fs:[rip+0x73203a73],ah        # 0x73608d8c
  405319:	push   0x2074726f
  40531e:	jb     0x405385
  405320:	(bad)  
  405321:	or     al,BYTE PTR fs:[rax]
  405324:	rex.W
  405325:	rex.R ins BYTE PTR es:[rdi],dx
  405327:	jae    0x40538e
  405329:	imul   eax,DWORD PTR gs:[rax],0x77
  40532d:	jb     0x405398
  40532f:	je     0x405396
  405331:	add    BYTE PTR [rip+0x73203a73],ah        # 0x73608daa
  405337:	push   0x2074726f
  40533c:	ja     0x4053b0
  40533e:	imul   esi,DWORD PTR [rbp+riz*2+0xa],0x0
  405346:	add    BYTE PTR [rax],al
  405348:	and    eax,0x6d203a73
  40534d:	gs ins DWORD PTR es:[rdi],dx
  40534f:	(bad)  
  405350:	gs jb  0x405373
  405353:	je     0x4053c7
  405355:	jne    0x4053c5
  405357:	movsxd esp,DWORD PTR [rcx+0x74]
  40535a:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  405360:	and    eax,0x6220756c
  405365:	jns    0x4053db
  405367:	gs jae 0x405374
  40536a:	add    BYTE PTR [rax+0x44],cl
  40536d:	rex.W
  40536e:	rex.R ins BYTE PTR es:[rdi],dx
  405370:	jae    0x4053d7
  405372:	imul   eax,DWORD PTR gs:[rax],0x48
  405376:	xor    eax,0x65726350
  40537b:	(bad)  
  40537c:	je     0x4053e3
  40537e:	add    BYTE PTR [rsi+0x61],ah
  405381:	ins    DWORD PTR es:[rdi],dx
  405382:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x735f6f74
  40538a:	movsxd esi,DWORD PTR gs:[rdx]
  40538d:	add    BYTE PTR [rax+0x35],cl
  405390:	push   rax
  405391:	jae    0x4053f8
  405393:	je     0x405395
  405395:	xor    rax,0x74657350
  40539b:	pop    rdi
  40539c:	data16 (bad) 
  40539e:	jo     0x40540c
  4053a0:	pop    rdi
  4053a1:	data16 (bad) 
  4053a3:	ins    DWORD PTR es:[rdi],dx
  4053a4:	imul   ebp,DWORD PTR [rcx+rdi*2+0x0],0x696d6166
  4053ac:	ins    BYTE PTR es:[rdi],dx
  4053ad:	jns    0x40540e
  4053af:	outs   dx,BYTE PTR ds:[rsi]
  4053b0:	gs ja  0x405426
  4053b3:	imul   edi,DWORD PTR [rdx+0x65],0x46354800
  4053ba:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  4053be:	add    BYTE PTR gs:[rax+0x35],cl
  4053c2:	push   rax
  4053c3:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  4053c7:	add    BYTE PTR gs:[rax],al
  4053ca:	add    BYTE PTR [rax],al
  4053cc:	add    BYTE PTR [rax],al
  4053ce:	add    BYTE PTR [rax],al
  4053d0:	add    BYTE PTR [rbp+0x40],0x0
  4053d7:	add    BYTE PTR [rax+0x4080],al
  4053dd:	add    BYTE PTR [rax],al
  4053df:	add    BYTE PTR [rax+0x402b],ah
	...
  4053ed:	add    BYTE PTR [rax],al
  4053ef:	add    BYTE PTR [rcx+0x72],al
  4053f2:	addr32 jne 0x405462
  4053f5:	outs   dx,BYTE PTR gs:[rsi]
  4053f7:	je     0x405419
  4053f9:	outs   dx,DWORD PTR fs:[rsi]
  4053fb:	ins    DWORD PTR es:[rdi],dx
  4053fc:	(bad)  
  4053fd:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  405404:	jb     0x405426
  405406:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40540a:	rex.B
  40540b:	rex.WB
  40540c:	rex.WRX sub QWORD PTR [rax],r8
  40540f:	rex.B jb 0x405479
  405412:	jne    0x405481
  405414:	outs   dx,BYTE PTR gs:[rsi]
  405416:	je     0x405438
  405418:	jae    0x405483
  40541a:	outs   dx,BYTE PTR ds:[rsi]
  40541b:	addr32 jne 0x40548a
  40541e:	(bad)  
  40541f:	jb     0x40548a
  405421:	je     0x40549c
  405423:	and    BYTE PTR [rax],ch
  405425:	push   rbx
  405426:	rex.WB
  405427:	rex.RXB
  405428:	rex.WRX sub QWORD PTR [rax],r8
  40542b:	add    BYTE PTR [rax],al
  40542d:	add    BYTE PTR [rax],al
  40542f:	add    BYTE PTR [rdi+0x76],cl
  405432:	gs jb  0x40549b
  405435:	ins    BYTE PTR es:[rdi],dx
  405436:	outs   dx,DWORD PTR ds:[rsi]
  405437:	ja     0x405459
  405439:	jb     0x40549c
  40543b:	outs   dx,BYTE PTR ds:[rsi]
  40543c:	and    BYTE PTR gs:[ebp+0x72],ah
  405441:	jb     0x4054b2
  405443:	jb     0x405465
  405445:	sub    BYTE PTR [rdi+0x56],cl
  405448:	rex.RB push r10
  40544a:	rex.RX
  40544b:	rex.WR
  40544c:	rex.WRXB push r15
  40544e:	sub    DWORD PTR [rax],eax
  405450:	push   rax
  405451:	(bad)  
  405452:	jb     0x4054c8
  405454:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40545b:	jae    0x40547d
  40545d:	outs   dx,DWORD PTR ds:[rsi]
  40545e:	data16 and BYTE PTR [rbx+0x69],dh
  405462:	outs   dx,BYTE PTR ds:[esi]
  405464:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40546b:	and    BYTE PTR gs:[rax],ch
  40546e:	push   rax
  40546f:	rex.WR
  405470:	rex.WRXB push r11
  405472:	push   rbx
  405473:	sub    DWORD PTR [rax],eax
  405475:	add    BYTE PTR [rax],al
  405477:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40547b:	(bad)  
  40547c:	ins    BYTE PTR es:[rdi],dx
  40547d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  405481:	jae    0x4054a3
  405483:	outs   dx,DWORD PTR ds:[rsi]
  405484:	data16 and BYTE PTR [rbx+0x69],dh
  405488:	outs   dx,BYTE PTR ds:[esi]
  40548a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405491:	and    BYTE PTR gs:[rax],ch
  405494:	push   rsp
  405495:	rex.WR
  405496:	rex.WRXB push r11
  405498:	push   rbx
  405499:	sub    DWORD PTR [rax],eax
  40549b:	add    BYTE PTR [rax],al
  40549d:	add    BYTE PTR [rax],al
  40549f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4054a3:	and    BYTE PTR [rdx+0x65],dh
  4054a6:	jae    0x40551d
  4054a8:	ins    BYTE PTR es:[rdi],dx
  4054a9:	je     0x4054cb
  4054ab:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  4054b2:	jae    0x405521
  4054b4:	(bad)  
  4054b5:	ins    BYTE PTR es:[rdi],dx
  4054b6:	ins    BYTE PTR es:[rdi],dx
  4054b7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4054bb:	(bad)  
  4054bc:	and    BYTE PTR gs:[rdx+0x65],dh
  4054c0:	jo     0x405534
  4054c2:	gs jae 0x40552a
  4054c5:	outs   dx,BYTE PTR ds:[rsi]
  4054c6:	je     0x40552d
  4054c8:	and    BYTE PTR fs:[rax],ch
  4054cb:	push   rbp
  4054cc:	rex.WRX
  4054cd:	rex.R
  4054ce:	rex.RB push r10
  4054d0:	rex.RX
  4054d1:	rex.WR
  4054d2:	rex.WRXB push r15
  4054d4:	sub    DWORD PTR [rax],eax
  4054d6:	push   rbp
  4054d7:	outs   dx,BYTE PTR ds:[rsi]
  4054d8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4054dc:	outs   dx,BYTE PTR ds:[rsi]
  4054dd:	and    BYTE PTR [rbp+0x72],ah
  4054e0:	jb     0x405551
  4054e2:	jb     0x4054e4
  4054e4:	add    BYTE PTR [rax],al
  4054e6:	add    BYTE PTR [rax],al
  4054e8:	pop    rdi
  4054e9:	ins    DWORD PTR es:[rdi],dx
  4054ea:	(bad)  
  4054eb:	je     0x405555
  4054ed:	gs jb  0x405562
  4054f0:	sub    BYTE PTR [rcx],ch
  4054f2:	cmp    ah,BYTE PTR [rax]
  4054f4:	and    eax,0x6e692073
  4054f9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657d72
  4054ff:	sub    al,0x20
  405501:	and    eax,0x20202967
  405506:	sub    BYTE PTR [rdx+0x65],dh
  405509:	je     0x405581
  40550b:	(bad)  
  40550c:	ins    BYTE PTR es:[rdi],dx
  40550d:	cmp    eax,0xa296725
  405512:	add    BYTE PTR [rax],al
  405514:	pop    rsp
  405515:	fdivr  st,st(7)
  405517:	call   FWORD PTR [rbp+0xcffffd7]
  40551d:	fdivr  st,st(7)
  40551f:	call   FWORD PTR [rax+rbx*8]
  405522:	(bad)  
  405523:	jmp    FWORD PTR [rax+rbx*8]
  405526:	(bad)  
  405527:	(bad)  
  405528:	cmp    al,0xd8
  40552a:	(bad)  
  40552b:	dec    DWORD PTR [rax+rbx*8-0x1]
  40552f:	dec    DWORD PTR [rbp+0x69]
  405532:	outs   dx,BYTE PTR ds:[rsi]
  405533:	addr32 ja 0x405563
  405536:	ja     0x40556e
  405538:	xor    al,0x20
  40553a:	jb     0x4055b1
  40553c:	outs   dx,BYTE PTR ds:[rsi]
  40553d:	je     0x4055a8
  40553f:	ins    DWORD PTR es:[rdi],dx
  405540:	and    BYTE PTR gs:[rsi+0x61],ah
  405544:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40554c:	add    BYTE PTR [rax],al
  40554e:	add    BYTE PTR [rax],al
  405550:	rex.B
  405551:	fs fs jb 0x4055ba
  405555:	jae    0x4055ca
  405557:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a875cd
  40555d:	jae    0x40557f
  40555f:	outs   dx,BYTE PTR ds:[rsi]
  405560:	outs   dx,DWORD PTR ds:[rsi]
  405561:	and    BYTE PTR [rcx+0x6d],ch
  405564:	(bad)  
  405565:	addr32 gs sub eax,0x74636573
  40556c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  405573:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40557a:	jne    0x4055e1
  40557c:	jb     0x4055f7
  40557e:	and    BYTE PTR [rsi+0x61],ah
  405581:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  405589:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a275f3
  40558f:	je     0x4055f6
  405591:	jae    0x4055b3
  405593:	(bad)  
  405594:	je     0x4055b6
  405596:	(bad)  
  405597:	fs fs jb 0x405600
  40559b:	jae    0x405610
  40559d:	and    BYTE PTR [rip+0x70],ah        # 0x405613
  4055a3:	add    BYTE PTR [rax],al
  4055a5:	add    BYTE PTR [rax],al
  4055a7:	add    BYTE PTR [rax],ah
  4055a9:	and    BYTE PTR [rsi+0x69],dl
  4055ac:	jb     0x405622
  4055ae:	jne    0x405611
  4055b0:	ins    BYTE PTR es:[rdi],dx
  4055b1:	push   rax
  4055b2:	jb     0x405623
  4055b4:	je     0x40561b
  4055b6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  4055ba:	(bad)  
  4055bb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  4055c3:	push   0x646f6320
  4055c8:	and    BYTE PTR gs:[rax],dh
  4055cb:	js     0x4055f2
  4055cd:	js     0x4055cf
  4055cf:	add    BYTE PTR [rax],ah
  4055d1:	and    BYTE PTR [rbp+0x6e],dl
  4055d4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4055d8:	outs   dx,BYTE PTR ds:[rsi]
  4055d9:	and    BYTE PTR [rax+0x73],dh
  4055dc:	gs jne 0x405643
  4055df:	outs   dx,DWORD PTR ds:[rsi]
  4055e0:	and    BYTE PTR [rdx+0x65],dh
  4055e3:	ins    BYTE PTR es:[rdi],dx
  4055e4:	outs   dx,DWORD PTR ds:[rsi]
  4055e5:	movsxd esp,DWORD PTR [rcx+0x74]
  4055e8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  4055ef:	je     0x405660
  4055f1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4055f4:	and    BYTE PTR [rsi+0x65],dh
  4055f7:	jb     0x40566c
  4055f9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  405600:	or     al,BYTE PTR [rax]
  405602:	add    BYTE PTR [rax],al
  405604:	add    BYTE PTR [rax],al
  405606:	add    BYTE PTR [rax],al
  405608:	and    BYTE PTR [rax],ah
  40560a:	push   rbp
  40560b:	outs   dx,BYTE PTR ds:[rsi]
  40560c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405610:	outs   dx,BYTE PTR ds:[rsi]
  405611:	and    BYTE PTR [rax+0x73],dh
  405614:	gs jne 0x40567b
  405617:	outs   dx,DWORD PTR ds:[rsi]
  405618:	and    BYTE PTR [rdx+0x65],dh
  40561b:	ins    BYTE PTR es:[rdi],dx
  40561c:	outs   dx,DWORD PTR ds:[rsi]
  40561d:	movsxd esp,DWORD PTR [rcx+0x74]
  405620:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  405627:	and    BYTE PTR [rbx+0x69],dh
  40562a:	jp     0x405691
  40562c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a8496
	...
  40563e:	add    BYTE PTR [rax],al
  405640:	cs jo  0x4056a7
  405643:	(bad)  
  405644:	je     0x4056a7
	...
  40564e:	add    BYTE PTR [rax],al
  405650:	nop
  405651:	(bad)  
	...
  40565e:	add    BYTE PTR [rax],al
  405660:	adc    BYTE PTR [rbx+0x40],dl
	...
  40566e:	add    BYTE PTR [rax],al
  405670:	rex
  405671:	rex
  405672:	add    BYTE PTR [rax],al
	...
  40567d:	add    BYTE PTR [rax],al
  40567f:	add    BYTE PTR [rax+0x40],dl
  405682:	add    BYTE PTR [rax],al
	...
  40568d:	add    BYTE PTR [rax],al
  40568f:	add    BYTE PTR [rax+0x3f],dl
  405692:	add    BYTE PTR [rax],al
	...
  40569d:	add    BYTE PTR [rax],al
  40569f:	add    al,cl
  4056a1:	pop    rbx
  4056a2:	add    BYTE PTR [rax],al
	...
  4056ad:	add    BYTE PTR [rax],al
  4056af:	add    BYTE PTR [rax+0x405b],dh
	...
  4056bd:	add    BYTE PTR [rax],al
  4056bf:	add    al,ah
  4056c1:	push   rbx
  4056c2:	add    BYTE PTR [rax],al
	...
  4056d1:	add    BYTE PTR [rax+0x0],al
	...
  4056e0:	sub    BYTE PTR [rax+rax*2+0x0],dl
	...
  4056ef:	add    BYTE PTR [rax-0x6c],dl
  4056f2:	add    BYTE PTR [rax],al
	...
  4056fd:	add    BYTE PTR [rax],al
  4056ff:	add    BYTE PTR [rax-0x6c],bh
  405702:	add    BYTE PTR [rax],al
	...
  40570d:	add    BYTE PTR [rax],al
  40570f:	add    BYTE PTR [rax+0x4094],ah
	...
  40571d:	add    BYTE PTR [rax],al
  40571f:	add    al,al
  405721:	xchg   BYTE PTR [rax+0x0],al
	...
  405730:	sub    BYTE PTR [rdx+0x40],cl
	...
  40573e:	add    BYTE PTR [rax],al
  405740:	and    BYTE PTR [rdx+0x40],cl
	...
  40574e:	add    BYTE PTR [rax],al
  405750:	adc    BYTE PTR [rdx+0x40],cl
	...
  40575e:	add    BYTE PTR [rax],al
  405760:	sbb    BYTE PTR [rdx+0x40],cl
	...
  40576e:	add    BYTE PTR [rax],al
  405770:	add    BYTE PTR [rax+0x40],ah
	...
  40577e:	add    BYTE PTR [rax],al
  405780:	adc    BYTE PTR [rax+0x40],ah
	...
  40578e:	add    BYTE PTR [rax],al
  405790:	sbb    BYTE PTR [rax+0x40],ah
	...
  40579e:	add    BYTE PTR [rax],al
  4057a0:	xor    BYTE PTR [rax+0x40],ah
	...
  4057ae:	add    BYTE PTR [rax],al
  4057b0:	rex add BYTE PTR [rax+0x0],0x0
	...
  4057bd:	add    BYTE PTR [rax],al
  4057bf:	add    BYTE PTR [rax+0x4086],dl
	...
  4057cd:	add    BYTE PTR [rax],al
  4057cf:	add    BYTE PTR [rax],dh
  4057d1:	xor    eax,0x40
	...
  4057de:	add    BYTE PTR [rax],al
  4057e0:	sub    BYTE PTR [rax+rax*2],0x0
	...
  4057f0:	xchg   BYTE PTR [rax+0x0],al
	...
  405800:	jo     0x405788
  405802:	add    BYTE PTR [rax],al
	...
  40580d:	add    BYTE PTR [rax],al
  40580f:	add    BYTE PTR [rax-0x80],dl
  405812:	add    BYTE PTR [rax],al
	...
  40581d:	add    BYTE PTR [rax],al
  40581f:	add    BYTE PTR [rax-0x7a],bl
  405822:	add    BYTE PTR [rax],al
	...
  40582d:	add    BYTE PTR [rax],al
  40582f:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  40583f:	add    BYTE PTR [rax-0x7a],dl
  405842:	add    BYTE PTR [rax],al
	...
  40584d:	add    BYTE PTR [rax],al
  40584f:	add    BYTE PTR [rdi+0x43],al
  405852:	rex.XB cmp spl,BYTE PTR [r8]
  405855:	sub    BYTE PTR [rdi+0x4e],al
  405858:	push   rbp
  405859:	sub    DWORD PTR [rax],esp
  40585b:	xor    al,0x2e
  40585d:	cmp    DWORD PTR [rsi],ebp
  40585f:	xor    al,0x0
	...
  40586d:	add    BYTE PTR [rax],al
  40586f:	add    BYTE PTR [rdi+0x43],al
  405872:	rex.XB cmp spl,BYTE PTR [r8]
  405875:	sub    BYTE PTR [rdi+0x4e],al
  405878:	push   rbp
  405879:	sub    DWORD PTR [rax],esp
  40587b:	xor    al,0x2e
  40587d:	cmp    DWORD PTR [rsi],ebp
  40587f:	xor    al,0x0
	...
  40588d:	add    BYTE PTR [rax],al
  40588f:	add    BYTE PTR [rdi+0x43],al
  405892:	rex.XB cmp spl,BYTE PTR [r8]
  405895:	sub    BYTE PTR [rdi+0x4e],al
  405898:	push   rbp
  405899:	sub    DWORD PTR [rax],esp
  40589b:	xor    al,0x2e
  40589d:	cmp    DWORD PTR [rsi],ebp
  40589f:	xor    al,0x0
	...
  4058ad:	add    BYTE PTR [rax],al
  4058af:	add    BYTE PTR [rdi+0x43],al
  4058b2:	rex.XB cmp spl,BYTE PTR [r8]
  4058b5:	sub    BYTE PTR [rdi+0x4e],al
  4058b8:	push   rbp
  4058b9:	sub    DWORD PTR [rax],esp
  4058bb:	xor    al,0x2e
  4058bd:	cmp    DWORD PTR [rsi],ebp
  4058bf:	xor    al,0x0
	...
  4058cd:	add    BYTE PTR [rax],al
  4058cf:	add    BYTE PTR [rdi+0x43],al
  4058d2:	rex.XB cmp spl,BYTE PTR [r8]
  4058d5:	sub    BYTE PTR [rdi+0x4e],al
  4058d8:	push   rbp
  4058d9:	sub    DWORD PTR [rax],esp
  4058db:	xor    al,0x2e
  4058dd:	cmp    DWORD PTR [rsi],ebp
  4058df:	xor    al,0x0
	...
  4058ed:	add    BYTE PTR [rax],al
  4058ef:	add    BYTE PTR [rdi+0x43],al
  4058f2:	rex.XB cmp spl,BYTE PTR [r8]
  4058f5:	sub    BYTE PTR [rdi+0x4e],al
  4058f8:	push   rbp
  4058f9:	sub    DWORD PTR [rax],esp
  4058fb:	xor    al,0x2e
  4058fd:	cmp    DWORD PTR [rsi],ebp
  4058ff:	xor    al,0x0
	...
  40590d:	add    BYTE PTR [rax],al
  40590f:	add    BYTE PTR [rdi+0x43],al
  405912:	rex.XB cmp spl,BYTE PTR [r8]
  405915:	sub    BYTE PTR [rdi+0x4e],al
  405918:	push   rbp
  405919:	sub    DWORD PTR [rax],esp
  40591b:	xor    al,0x2e
  40591d:	cmp    DWORD PTR [rsi],ebp
  40591f:	xor    al,0x0
	...
  40592d:	add    BYTE PTR [rax],al
  40592f:	add    BYTE PTR [rdi+0x43],al
  405932:	rex.XB cmp spl,BYTE PTR [r8]
  405935:	sub    BYTE PTR [rdi+0x4e],al
  405938:	push   rbp
  405939:	sub    DWORD PTR [rax],esp
  40593b:	xor    al,0x2e
  40593d:	cmp    DWORD PTR [rsi],ebp
  40593f:	xor    al,0x0
	...
  40594d:	add    BYTE PTR [rax],al
  40594f:	add    BYTE PTR [rdi+0x43],al
  405952:	rex.XB cmp spl,BYTE PTR [r8]
  405955:	sub    BYTE PTR [rdi+0x4e],al
  405958:	push   rbp
  405959:	sub    DWORD PTR [rax],esp
  40595b:	xor    al,0x2e
  40595d:	cmp    DWORD PTR [rsi],ebp
  40595f:	xor    al,0x0
	...
  40596d:	add    BYTE PTR [rax],al
  40596f:	add    BYTE PTR [rdi+0x43],al
  405972:	rex.XB cmp spl,BYTE PTR [r8]
  405975:	sub    BYTE PTR [rdi+0x4e],al
  405978:	push   rbp
  405979:	sub    DWORD PTR [rax],esp
  40597b:	xor    al,0x2e
  40597d:	cmp    DWORD PTR [rsi],ebp
  40597f:	xor    al,0x0
	...
  40598d:	add    BYTE PTR [rax],al
  40598f:	add    BYTE PTR [rdi+0x43],al
  405992:	rex.XB cmp spl,BYTE PTR [r8]
  405995:	sub    BYTE PTR [rdi+0x4e],al
  405998:	push   rbp
  405999:	sub    DWORD PTR [rax],esp
  40599b:	xor    al,0x2e
  40599d:	cmp    DWORD PTR [rsi],ebp
  40599f:	xor    al,0x0
	...
  4059ad:	add    BYTE PTR [rax],al
  4059af:	add    BYTE PTR [rdi+0x43],al
  4059b2:	rex.XB cmp spl,BYTE PTR [r8]
  4059b5:	sub    BYTE PTR [rdi+0x4e],al
  4059b8:	push   rbp
  4059b9:	sub    DWORD PTR [rax],esp
  4059bb:	xor    al,0x2e
  4059bd:	cmp    DWORD PTR [rsi],ebp
  4059bf:	xor    al,0x0
	...
  4059cd:	add    BYTE PTR [rax],al
  4059cf:	add    BYTE PTR [rdi+0x43],al
  4059d2:	rex.XB cmp spl,BYTE PTR [r8]
  4059d5:	sub    BYTE PTR [rdi+0x4e],al
  4059d8:	push   rbp
  4059d9:	sub    DWORD PTR [rax],esp
  4059db:	xor    al,0x2e
  4059dd:	cmp    DWORD PTR [rsi],ebp
  4059df:	xor    al,0x0
	...
  4059ed:	add    BYTE PTR [rax],al
  4059ef:	add    BYTE PTR [rdi+0x43],al
  4059f2:	rex.XB cmp spl,BYTE PTR [r8]
  4059f5:	sub    BYTE PTR [rdi+0x4e],al
  4059f8:	push   rbp
  4059f9:	sub    DWORD PTR [rax],esp
  4059fb:	xor    al,0x2e
  4059fd:	cmp    DWORD PTR [rsi],ebp
  4059ff:	xor    al,0x0
	...
  405a0d:	add    BYTE PTR [rax],al
  405a0f:	add    BYTE PTR [rdi+0x43],al
  405a12:	rex.XB cmp spl,BYTE PTR [r8]
  405a15:	sub    BYTE PTR [rdi+0x4e],al
  405a18:	push   rbp
  405a19:	sub    DWORD PTR [rax],esp
  405a1b:	xor    al,0x2e
  405a1d:	cmp    DWORD PTR [rsi],ebp
  405a1f:	xor    al,0x0
	...
  405a2d:	add    BYTE PTR [rax],al
  405a2f:	add    BYTE PTR [rdi+0x43],al
  405a32:	rex.XB cmp spl,BYTE PTR [r8]
  405a35:	sub    BYTE PTR [rdi+0x4e],al
  405a38:	push   rbp
  405a39:	sub    DWORD PTR [rax],esp
  405a3b:	xor    al,0x2e
  405a3d:	cmp    DWORD PTR [rsi],ebp
  405a3f:	xor    al,0x0
	...
  405a4d:	add    BYTE PTR [rax],al
  405a4f:	add    BYTE PTR [rdi+0x43],al
  405a52:	rex.XB cmp spl,BYTE PTR [r8]
  405a55:	sub    BYTE PTR [rdi+0x4e],al
  405a58:	push   rbp
  405a59:	sub    DWORD PTR [rax],esp
  405a5b:	xor    al,0x2e
  405a5d:	cmp    DWORD PTR [rsi],ebp
  405a5f:	xor    al,0x0
	...
  405a6d:	add    BYTE PTR [rax],al
  405a6f:	add    BYTE PTR [rdi+0x43],al
  405a72:	rex.XB cmp spl,BYTE PTR [r8]
  405a75:	sub    BYTE PTR [rdi+0x4e],al
  405a78:	push   rbp
  405a79:	sub    DWORD PTR [rax],esp
  405a7b:	xor    al,0x2e
  405a7d:	cmp    DWORD PTR [rsi],ebp
  405a7f:	xor    al,0x0
	...
  405a8d:	add    BYTE PTR [rax],al
  405a8f:	add    BYTE PTR [rdi+0x43],al
  405a92:	rex.XB cmp spl,BYTE PTR [r8]
  405a95:	sub    BYTE PTR [rdi+0x4e],al
  405a98:	push   rbp
  405a99:	sub    DWORD PTR [rax],esp
  405a9b:	xor    al,0x2e
  405a9d:	cmp    DWORD PTR [rsi],ebp
  405a9f:	xor    al,0x0
	...
  405aad:	add    BYTE PTR [rax],al
  405aaf:	add    BYTE PTR [rdi+0x43],al
  405ab2:	rex.XB cmp spl,BYTE PTR [r8]
  405ab5:	sub    BYTE PTR [rdi+0x4e],al
  405ab8:	push   rbp
  405ab9:	sub    DWORD PTR [rax],esp
  405abb:	xor    al,0x2e
  405abd:	cmp    DWORD PTR [rsi],ebp
  405abf:	xor    al,0x0
	...
  405acd:	add    BYTE PTR [rax],al
  405acf:	add    BYTE PTR [rdi+0x43],al
  405ad2:	rex.XB cmp spl,BYTE PTR [r8]
  405ad5:	sub    BYTE PTR [rdi+0x4e],al
  405ad8:	push   rbp
  405ad9:	sub    DWORD PTR [rax],esp
  405adb:	xor    al,0x2e
  405add:	cmp    DWORD PTR [rsi],ebp
  405adf:	xor    al,0x0
	...
  405aed:	add    BYTE PTR [rax],al
  405aef:	add    BYTE PTR [rdi+0x43],al
  405af2:	rex.XB cmp spl,BYTE PTR [r8]
  405af5:	sub    BYTE PTR [rdi+0x4e],al
  405af8:	push   rbp
  405af9:	sub    DWORD PTR [rax],esp
  405afb:	xor    al,0x2e
  405afd:	cmp    DWORD PTR [rsi],ebp
  405aff:	xor    al,0x0
	...
  405b0d:	add    BYTE PTR [rax],al
  405b0f:	add    BYTE PTR [rdi+0x43],al
  405b12:	rex.XB cmp spl,BYTE PTR [r8]
  405b15:	sub    BYTE PTR [rdi+0x4e],al
  405b18:	push   rbp
  405b19:	sub    DWORD PTR [rax],esp
  405b1b:	xor    al,0x2e
  405b1d:	cmp    DWORD PTR [rsi],ebp
  405b1f:	xor    al,0x0
	...
  405b2d:	add    BYTE PTR [rax],al
  405b2f:	add    BYTE PTR [rdi+0x43],al
  405b32:	rex.XB cmp spl,BYTE PTR [r8]
  405b35:	sub    BYTE PTR [rdi+0x4e],al
  405b38:	push   rbp
  405b39:	sub    DWORD PTR [rax],esp
  405b3b:	xor    al,0x2e
  405b3d:	cmp    DWORD PTR [rsi],ebp
  405b3f:	xor    al,0x0
	...
  405b4d:	add    BYTE PTR [rax],al
  405b4f:	add    BYTE PTR [rdi+0x43],al
  405b52:	rex.XB cmp spl,BYTE PTR [r8]
  405b55:	sub    BYTE PTR [rdi+0x4e],al
  405b58:	push   rbp
  405b59:	sub    DWORD PTR [rax],esp
  405b5b:	xor    al,0x2e
  405b5d:	cmp    DWORD PTR [rsi],ebp
  405b5f:	xor    al,0x0
	...
  405b6d:	add    BYTE PTR [rax],al
  405b6f:	add    BYTE PTR [rdi+0x43],al
  405b72:	rex.XB cmp spl,BYTE PTR [r8]
  405b75:	sub    BYTE PTR [rdi+0x4e],al
  405b78:	push   rbp
  405b79:	sub    DWORD PTR [rax],esp
  405b7b:	xor    al,0x2e
  405b7d:	cmp    DWORD PTR [rsi],ebp
  405b7f:	xor    al,0x0
	...
  405b8d:	add    BYTE PTR [rax],al
  405b8f:	add    BYTE PTR [rdi+0x43],al
  405b92:	rex.XB cmp spl,BYTE PTR [r8]
  405b95:	sub    BYTE PTR [rdi+0x4e],al
  405b98:	push   rbp
  405b99:	sub    DWORD PTR [rax],esp
  405b9b:	xor    al,0x2e
  405b9d:	cmp    DWORD PTR [rsi],ebp
  405b9f:	xor    al,0x0
	...
  405bb5:	add    BYTE PTR [rax],al
  405bb7:	add    BYTE PTR [rcx],al
  405bb9:	add    BYTE PTR [rax],al
  405bbb:	add    BYTE PTR [rax],dl
  405bbd:	xchg   ebx,eax
  405bbe:	add    BYTE PTR [rax],al
  405bc0:	(bad)  
  405bc1:	push   rsi
  405bc2:	add    BYTE PTR [rax],al
  405bc4:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax],dh
  406049:	adc    eax,0x16bb0000
  40604e:	add    BYTE PTR [rax],al
  406050:	push   0xffffffffbb000070
  406055:	(bad)  
  406056:	add    BYTE PTR [rax],al
  406058:	(bad)  
  406059:	sbb    BYTE PTR [rax],al
  40605b:	add    BYTE PTR [rax+rsi*2+0x0],dh
  40605f:	add    BYTE PTR [rdx+0x6d000018],bl
  406065:	(bad)  
  406066:	add    BYTE PTR [rax],al
  406068:	xor    BYTE PTR [rax+0x0],0x0
  40606c:	loopne 0x406095
  40606e:	add    BYTE PTR [rax],al
  406070:	xchg   DWORD PTR [rax],ebp
  406072:	add    BYTE PTR [rax],al
  406074:	nop
  406075:	jo     0x406077
  406077:	add    BYTE PTR [rax-0x56ffffd8],dl
  40607d:	sub    BYTE PTR [rax],al
  40607f:	add    BYTE PTR [rax-0x4fffff90],bl
  406085:	sub    BYTE PTR [rax],al
  406087:	add    ch,ah
  406089:	sub    BYTE PTR [rax],al
  40608b:	add    BYTE PTR [rax-0xfffff90],ah
  406091:	sub    BYTE PTR [rax],al
  406093:	add    BYTE PTR [rbp+0x29],al
  406096:	add    BYTE PTR [rax],al
  406098:	test   al,0x70
  40609a:	add    BYTE PTR [rax],al
  40609c:	push   rax
  40609d:	sub    DWORD PTR [rax],eax
  40609f:	add    BYTE PTR [rcx+rbp*1+0x0],ch
  4060a3:	add    BYTE PTR [rax+rsi*2+0x29700000],dh
  4060aa:	add    BYTE PTR [rax],al
  4060ac:	jp     0x4060d7
  4060ae:	add    BYTE PTR [rax],al
  4060b0:	mov    eax,0x80000070
  4060b5:	sub    DWORD PTR [rax],eax
  4060b7:	add    BYTE PTR [rbx-0x43ffffd7],al
  4060bd:	jo     0x4060bf
  4060bf:	add    BYTE PTR [rax+0x66000029],dl
  4060c5:	sub    al,BYTE PTR [rax]
  4060c7:	add    al,al
  4060c9:	jo     0x4060cb
  4060cb:	add    BYTE PTR [rax+0x2a],dh
  4060ce:	add    BYTE PTR [rax],al
  4060d0:	imul   ebp,DWORD PTR [rbx],0x0
  4060d3:	add    al,dl
  4060d5:	jo     0x4060d7
  4060d7:	add    BYTE PTR [rax+0x2b],dh
  4060da:	add    BYTE PTR [rax],al
  4060dc:	lahf   
  4060dd:	sub    eax,DWORD PTR [rax]
  4060df:	add    al,ah
  4060e1:	jo     0x4060e3
  4060e3:	add    BYTE PTR [rax+0x900002b],ah
  4060e9:	sub    al,0x0
  4060eb:	add    al,ch
  4060ed:	jo     0x4060ef
  4060ef:	add    BYTE PTR [rax],dl
  4060f1:	sub    al,0x0
  4060f3:	add    BYTE PTR [rbx],dl
  4060f5:	sub    al,0x0
  4060f7:	add    ah,dh
  4060f9:	jo     0x4060fb
  4060fb:	add    BYTE PTR [rax],ah
  4060fd:	sub    al,0x0
  4060ff:	add    BYTE PTR [rcx+0x2c],ah
  406102:	add    BYTE PTR [rax],al
  406104:	clc    
  406105:	jo     0x406107
  406107:	add    BYTE PTR [rax+0x2c],dh
  40610a:	add    BYTE PTR [rax],al
  40610c:	jl     0x40613a
  40610e:	add    BYTE PTR [rax],al
  406110:	add    BYTE PTR [rcx+0x0],dh
  406113:	add    BYTE PTR [rax+0x7c00002c],al
  406119:	sub    eax,0x71040000
  40611e:	add    BYTE PTR [rax],al
  406120:	sub    BYTE PTR [rip+0x2d830000],0x0        # 0x2dc36127
  406127:	add    BYTE PTR [rcx+rsi*2],bl
  40612a:	add    BYTE PTR [rax],al
  40612c:	nop
  40612d:	sub    eax,0x2d940000
  406132:	add    BYTE PTR [rax],al
  406134:	and    BYTE PTR [rcx+0x0],dh
  406137:	add    BYTE PTR [rax-0x5bffffd3],ah
  40613d:	sub    eax,0x71240000
  406142:	add    BYTE PTR [rax],al
  406144:	mov    al,0x2d
  406146:	add    BYTE PTR [rax],al
  406148:	adc    DWORD PTR [rsi],ebp
  40614a:	add    BYTE PTR [rax],al
  40614c:	sub    BYTE PTR [rcx+0x0],dh
  40614f:	add    BYTE PTR [rax],ah
  406151:	add    BYTE PTR cs:[rax],al
  406154:	(bad)  
  406155:	(bad)  
  406156:	add    BYTE PTR [rax],al
  406158:	xor    al,0x71
  40615a:	add    BYTE PTR [rax],al
  40615c:	nop
  40615d:	(bad)  
  40615e:	add    BYTE PTR [rax],al
  406160:	mov    DWORD PTR [rdx],esi
  406162:	add    BYTE PTR [rax],al
  406164:	rex.W jno 0x406167
  406167:	add    BYTE PTR [rax+0x36000032],dl
  40616d:	xor    al,0x0
  40616f:	add    BYTE PTR [rax+0x71],ah
  406172:	add    BYTE PTR [rax],al
  406174:	xor    al,0x0
  406177:	add    BYTE PTR [rsi*1+0x71680000],ch
  40617e:	add    BYTE PTR [rax],al
  406180:	xor    BYTE PTR [rip+0x36e80000],dh        # 0x37286186
  406186:	add    BYTE PTR [rax],al
  406188:	js     0x4061fb
  40618a:	add    BYTE PTR [rax],al
  40618c:	lock add BYTE PTR ss:[rax],al
  406190:	pop    rbp
  406191:	(bad)  
  406192:	add    BYTE PTR [rax],al
  406194:	xor    BYTE PTR [rcx+0x0],0x0
  406198:	(bad)  
  406199:	(bad)  
  40619a:	add    BYTE PTR [rax],al
  40619c:	fbstp  TBYTE PTR [rdi]
  40619e:	add    BYTE PTR [rax],al
  4061a0:	nop
  4061a1:	jno    0x4061a3
  4061a3:	add    al,ah
  4061a5:	(bad)  
  4061a6:	add    BYTE PTR [rax],al
  4061a8:	jg     0x4061e2
  4061aa:	add    BYTE PTR [rax],al
  4061ac:	pushf  
  4061ad:	jno    0x4061af
  4061af:	add    BYTE PTR [rax+0x5a000038],al
  4061b5:	cmp    DWORD PTR [rax],eax
  4061b7:	add    BYTE PTR [rcx+rsi*2+0x39600000],ah
  4061be:	add    BYTE PTR [rax],al
  4061c0:	jg     0x4061fb
  4061c2:	add    BYTE PTR [rax],al
  4061c4:	lods   al,BYTE PTR ds:[rsi]
  4061c5:	jno    0x4061c7
  4061c7:	add    BYTE PTR [rax-0x6dffffc7],al
  4061cd:	cmp    DWORD PTR [rax],eax
  4061cf:	add    BYTE PTR [rax-0x5fffff8f],dh
  4061d5:	cmp    DWORD PTR [rax],eax
  4061d7:	add    ch,ah
  4061d9:	cmp    DWORD PTR [rax],eax
  4061db:	add    BYTE PTR [rcx+rsi*2+0x39f00000],dh
  4061e2:	add    BYTE PTR [rax],al
  4061e4:	mov    ?,WORD PTR [rdx]
  4061e6:	add    BYTE PTR [rax],al
  4061e8:	mov    eax,0x90000071
  4061ed:	cmp    al,BYTE PTR [rax]
  4061ef:	add    bl,dl
  4061f1:	cmp    al,BYTE PTR [rax]
  4061f3:	add    ah,al
  4061f5:	jno    0x4061f7
  4061f7:	add    al,ah
  4061f9:	cmp    al,BYTE PTR [rax]
  4061fb:	add    BYTE PTR [rbx],bl
  4061fd:	cmp    eax,DWORD PTR [rax]
  4061ff:	add    al,dl
  406201:	jno    0x406203
  406203:	add    BYTE PTR [rax],ah
  406205:	cmp    eax,DWORD PTR [rax]
  406207:	add    BYTE PTR [rsi-0x27ffffc5],ch
  40620d:	jno    0x40620f
  40620f:	add    BYTE PTR [rax-0x17ffffc5],dh
  406215:	cmp    eax,DWORD PTR [rax]
  406217:	add    ah,ah
  406219:	jno    0x40621b
  40621b:	add    al,dh
  40621d:	cmp    eax,DWORD PTR [rax]
  40621f:	add    BYTE PTR [rbp+0x3c],al
  406222:	add    BYTE PTR [rax],al
  406224:	lock jno 0x406227
  406227:	add    BYTE PTR [rax+0x3c],dl
  40622a:	add    BYTE PTR [rax],al
  40622c:	(bad)  
  40622d:	cmp    al,0x0
  40622f:	add    ah,bh
  406231:	jno    0x406233
  406233:	add    BYTE PTR [rax+0x3e],dh
  406236:	add    BYTE PTR [rax],al
  406238:	js     0x406278
  40623a:	add    BYTE PTR [rax],al
  40623c:	or     al,0x72
  40623e:	add    BYTE PTR [rax],al
  406240:	cmp    BYTE PTR [rsi],0x0
  406243:	add    BYTE PTR [rbx+0x1000003e],cl
  406249:	jb     0x40624b
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	push   0x100003e
  407035:	add    BYTE PTR [rax],al
  407037:	add    ah,dl
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    BYTE PTR [rax],dh
  407041:	xor    eax,0x14ec0000
  407046:	add    BYTE PTR [rax],al
  407048:	or     DWORD PTR [rcx+rax*1],eax
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	push   0x100003e
  407055:	add    BYTE PTR [rax],al
  407057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40705e:	add    BYTE PTR [rax],al
  407060:	xor    BYTE PTR [rip+0x151c0000],dh        # 0x155c7066
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rax],ecx
  40706a:	add    eax,DWORD PTR [rip+0x3043208]        # 0x344a278
  407070:	add    DWORD PTR [rax+0x0],edx
  407073:	add    BYTE PTR [rcx],al
  407075:	or     BYTE PTR [rbx],al
  407077:	add    eax,0x3045208
  40707c:	add    DWORD PTR [rax+0x0],edx
  40707f:	add    BYTE PTR [rcx],al
  407081:	(bad)  
  407082:	add    eax,0xf031785
  407087:	add    DWORD PTR [rdi],esp
  407089:	add    al,0x2
  40708b:	xor    BYTE PTR [rcx],al
  40708d:	push   rax
  40708e:	add    BYTE PTR [rax],al
  407090:	add    DWORD PTR [rip+0x52050002],eax        # 0x52457098
  407096:	add    DWORD PTR [rax],esi
  407098:	add    DWORD PTR [rcx+rax*1],eax
  40709b:	add    BYTE PTR [rdx+rax*2],al
  40709e:	add    BYTE PTR [rax],al
  4070a0:	add    DWORD PTR [rcx+rax*1],eax
  4070a3:	add    BYTE PTR [rdx+rax*2],al
  4070a6:	add    BYTE PTR [rax],al
  4070a8:	add    DWORD PTR [rsi],eax
  4070aa:	add    eax,DWORD PTR [rax]
  4070ac:	(bad)  
  4070ad:	rex.X add sil,BYTE PTR [rax]
  4070b0:	add    DWORD PTR [rax+0x0],esp
  4070b3:	add    BYTE PTR [rcx],al
  4070b5:	add    BYTE PTR [rax],al
  4070b7:	add    BYTE PTR [rcx],al
  4070b9:	add    BYTE PTR [rax],al
  4070bb:	add    BYTE PTR [rcx],al
  4070bd:	add    BYTE PTR [rax],al
  4070bf:	add    BYTE PTR [rcx],al
  4070c1:	or     al,BYTE PTR [rsi]
  4070c3:	add    BYTE PTR [rdx],cl
  4070c5:	jb     0x4070cd
  4070c7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0752d
  4070cd:	push   rax
  4070ce:	add    al,al
  4070d0:	add    DWORD PTR [rdx],ecx
  4070d2:	add    eax,0x6d20a05
  4070d7:	add    eax,DWORD PTR [rbx]
  4070d9:	xor    BYTE PTR [rdx],al
  4070db:	(bad)  
  4070dc:	add    DWORD PTR [rax+0x0],edx
  4070df:	add    BYTE PTR [rcx],al
  4070e1:	add    al,0x1
  4070e3:	add    BYTE PTR [rdx+rax*2],al
  4070e6:	add    BYTE PTR [rax],al
  4070e8:	add    DWORD PTR [rsi],eax
  4070ea:	add    eax,DWORD PTR [rax]
  4070ec:	(bad)  
  4070ed:	rex.X add sil,BYTE PTR [rax]
  4070f0:	add    DWORD PTR [rax+0x0],esp
  4070f3:	add    BYTE PTR [rcx],al
  4070f5:	add    BYTE PTR [rax],al
  4070f7:	add    BYTE PTR [rcx],al
  4070f9:	add    al,0x1
  4070fb:	add    BYTE PTR [rdx+riz*4],al
  4070fe:	add    BYTE PTR [rax],al
  407100:	add    DWORD PTR [rax],eax
  407102:	add    BYTE PTR [rax],al
  407104:	add    DWORD PTR [rsi],edx
  407106:	or     DWORD PTR [rax],eax
  407108:	(bad)  
  407109:	mov    BYTE PTR [rsi],al
  40710b:	add    BYTE PTR [rax],dl
  40710d:	js     0x407114
  40710f:	add    BYTE PTR [rbx],cl
  407111:	push   0xffffffffe2060004
  407116:	add    dh,BYTE PTR [rax]
  407118:	add    DWORD PTR [rax+0x0],esp
  40711b:	add    BYTE PTR [rcx],al
  40711d:	add    BYTE PTR [rax],al
  40711f:	add    BYTE PTR [rcx],al
  407121:	add    BYTE PTR [rax],al
  407123:	add    BYTE PTR [rcx],al
  407125:	add    BYTE PTR [rax],al
  407127:	add    BYTE PTR [rcx],al
  407129:	(bad)  
  40712a:	add    eax,DWORD PTR [rax]
  40712c:	(bad)  
  40712d:	(bad)  
  40712f:	xor    BYTE PTR [rcx],al
  407131:	(bad)  
  407132:	add    BYTE PTR [rax],al
  407134:	add    DWORD PTR [rdi+rax*1],ecx
  407137:	add    BYTE PTR [rdx+riz*4],cl
  40713a:	or     BYTE PTR [rax],dh
  40713c:	(bad)  
  40713d:	(bad)  
  40713e:	(bad)  
  40713f:	jo     0x407146
  407141:	push   rax
  407142:	add    al,0xc0
  407144:	add    dl,al
  407146:	add    BYTE PTR [rax],al
  407148:	add    DWORD PTR [rcx],edx
  40714a:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e2361
  407150:	or     dh,BYTE PTR [rax]
  407152:	or     DWORD PTR [rax+0x8],esp
  407155:	jo     0x40715e
  407157:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220752e
  40715e:	add    BYTE PTR [rax],al
  407160:	add    DWORD PTR [rcx+rax*1],eax
  407163:	add    BYTE PTR [rdx+rax*2],al
  407166:	add    BYTE PTR [rax],al
  407168:	add    DWORD PTR [rdx],ecx
  40716a:	(bad)  
  40716b:	add    BYTE PTR [rdx],cl
  40716d:	xor    al,BYTE PTR [rsi]
  40716f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b075d5
  407175:	push   rax
  407176:	add    al,al
  407178:	add    DWORD PTR [rip+0x32050002],eax        # 0x32457180
  40717e:	add    DWORD PTR [rax],esi
  407180:	add    DWORD PTR [rax],ecx
  407182:	add    eax,0x4420800
  407187:	xor    BYTE PTR [rbx],al
  407189:	(bad)  
  40718a:	add    dh,BYTE PTR [rax+0x1]
  40718d:	push   rax
  40718e:	add    BYTE PTR [rax],al
  407190:	add    DWORD PTR [rdi],eax
  407192:	add    al,0x0
  407194:	(bad)  
  407195:	xor    al,BYTE PTR [rbx]
  407197:	xor    BYTE PTR [rdx],al
  407199:	(bad)  
  40719a:	add    DWORD PTR [rax+0x1],esi
  40719d:	add    eax,0x32050002
  4071a2:	add    DWORD PTR [rax],esi
  4071a4:	add    DWORD PTR [rip+0x32050002],eax        # 0x324571ac
  4071aa:	add    DWORD PTR [rax],esi
  4071ac:	add    DWORD PTR [rax],eax
  4071ae:	add    BYTE PTR [rax],al
  4071b0:	add    DWORD PTR [rax],eax
  4071b2:	add    BYTE PTR [rax],al
  4071b4:	add    DWORD PTR [rax],eax
  4071b6:	add    BYTE PTR [rax],al
  4071b8:	add    DWORD PTR [rdi],eax
  4071ba:	add    al,0x0
  4071bc:	(bad)  
  4071bd:	xor    al,BYTE PTR [rbx]
  4071bf:	xor    BYTE PTR [rdx],al
  4071c1:	(bad)  
  4071c2:	add    DWORD PTR [rax+0x1],esi
  4071c5:	(bad)  
  4071c6:	add    eax,DWORD PTR [rax]
  4071c8:	(bad)  
  4071c9:	rex.X add sil,BYTE PTR [rax]
  4071cc:	add    DWORD PTR [rax+0x0],esp
  4071cf:	add    BYTE PTR [rcx],al
  4071d1:	add    eax,0x32050002
  4071d6:	add    DWORD PTR [rax],esi
  4071d8:	add    DWORD PTR [rdi],eax
  4071da:	add    al,0x0
  4071dc:	(bad)  
  4071dd:	xor    al,BYTE PTR [rbx]
  4071df:	xor    BYTE PTR [rdx],al
  4071e1:	(bad)  
  4071e2:	add    DWORD PTR [rax+0x1],esi
  4071e5:	(bad)  
  4071e6:	add    eax,DWORD PTR [rax]
  4071e8:	(bad)  
  4071e9:	rex.X add sil,BYTE PTR [rax]
  4071ec:	add    DWORD PTR [rax+0x0],esp
  4071ef:	add    BYTE PTR [rcx],al
  4071f1:	(bad)  
  4071f2:	add    eax,DWORD PTR [rax]
  4071f4:	(bad)  
  4071f5:	rex.X add sil,BYTE PTR [rax]
  4071f8:	add    DWORD PTR [rax+0x0],esp
  4071fb:	add    BYTE PTR [rcx],al
  4071fd:	or     BYTE PTR [rip+0x4420800],al        # 0x4827a03
  407203:	xor    BYTE PTR [rbx],al
  407205:	(bad)  
  407206:	add    dh,BYTE PTR [rax+0x1]
  407209:	push   rax
  40720a:	add    BYTE PTR [rax],al
  40720c:	add    DWORD PTR [rax],eax
  40720e:	add    BYTE PTR [rax],al
  407210:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	push   rax
  409001:	nop
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	xor    BYTE PTR [rdx-0x6d280000],bl
  409012:	add    BYTE PTR [rax],al
  409014:	enter  0x90,0x0
	...
  409020:	pushf  
  409021:	(bad)  
  409022:	add    BYTE PTR [rax],al
  409024:	push   rax
  409025:	xchg   ebx,eax
  409026:	add    BYTE PTR [rax],al
  409028:	mov    BYTE PTR [rcx+0x0],dl
  40902e:	add    BYTE PTR [rax],al
  409030:	add    BYTE PTR [rax],al
  409032:	add    BYTE PTR [rax],al
  409034:	push   rax
  409035:	fwait
  409036:	add    BYTE PTR [rax],al
  409038:	adc    BYTE PTR [rax+rax*1+0x0],dl
	...
  40904f:	add    BYTE PTR [rax-0x6b],ah
  409052:	add    BYTE PTR [rax],al
  409054:	add    BYTE PTR [rax],al
  409056:	add    BYTE PTR [rax],al
  409058:	jo     0x408fef
  40905a:	add    BYTE PTR [rax],al
  40905c:	add    BYTE PTR [rax],al
  40905e:	add    BYTE PTR [rax],al
  409060:	adc    BYTE PTR [rbp+0x0],0x0
  409067:	add    BYTE PTR [rax+0x95],dl
  40906d:	add    BYTE PTR [rax],al
  40906f:	add    BYTE PTR [rax+0x95],ah
  409075:	add    BYTE PTR [rax],al
  409077:	add    BYTE PTR [rax+0x95],dh
  40907d:	add    BYTE PTR [rax],al
  40907f:	add    BYTE PTR [rbp+rdx*4+0x0],bh
  409086:	add    BYTE PTR [rax],al
  409088:	enter  0x95,0x0
  40908c:	add    BYTE PTR [rax],al
  40908e:	add    BYTE PTR [rax],al
  409090:	in     al,0x95
  409092:	add    BYTE PTR [rax],al
  409094:	add    BYTE PTR [rax],al
  409096:	add    BYTE PTR [rax],al
  409098:	lock xchg ebp,eax
  40909a:	add    BYTE PTR [rax],al
  40909c:	add    BYTE PTR [rax],al
  40909e:	add    BYTE PTR [rax],al
  4090a0:	cld    
  4090a1:	xchg   ebp,eax
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	add    BYTE PTR [rax],al
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	or     BYTE PTR [rsi+0x0],dl
  4090ae:	add    BYTE PTR [rax],al
  4090b0:	and    BYTE PTR [rsi+0x0],dl
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	xor    al,0x96
	...
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	rex xchg esi,eax
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	add    BYTE PTR [rax],al
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	pop    rax
  4090d1:	xchg   esi,eax
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	add    BYTE PTR [rax],al
  4090d6:	add    BYTE PTR [rax],al
  4090d8:	jo     0x409070
  4090da:	add    BYTE PTR [rax],al
  4090dc:	add    BYTE PTR [rax],al
  4090de:	add    BYTE PTR [rax],al
  4090e0:	test   BYTE PTR [rsi+0x0],dl
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	(bad)  
  4090e9:	xchg   esi,eax
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	add    BYTE PTR [rax],al
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	mov    al,0x96
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	add    BYTE PTR [rax],al
  4090f6:	add    BYTE PTR [rax],al
  4090f8:	rcl    BYTE PTR [rsi+0x0],0x0
  4090ff:	add    dl,dl
  409101:	xchg   esi,eax
  409102:	add    BYTE PTR [rax],al
  409104:	add    BYTE PTR [rax],al
  409106:	add    BYTE PTR [rax],al
  409108:	in     al,dx
  409109:	xchg   esi,eax
  40910a:	add    BYTE PTR [rax],al
  40910c:	add    BYTE PTR [rax],al
  40910e:	add    BYTE PTR [rax],al
  409110:	cld    
  409111:	xchg   esi,eax
  409112:	add    BYTE PTR [rax],al
  409114:	add    BYTE PTR [rax],al
  409116:	add    BYTE PTR [rax],al
  409118:	sbb    BYTE PTR [rdi+0x0],dl
  40911e:	add    BYTE PTR [rax],al
  409120:	xor    BYTE PTR [rdi+0x0],dl
  409126:	add    BYTE PTR [rax],al
  409128:	rex.WX xchg rdi,rax
  40912a:	add    BYTE PTR [rax],al
  40912c:	add    BYTE PTR [rax],al
  40912e:	add    BYTE PTR [rax],al
  409130:	(bad)  
  409131:	xchg   edi,eax
  409132:	add    BYTE PTR [rax],al
  409134:	add    BYTE PTR [rax],al
  409136:	add    BYTE PTR [rax],al
  409138:	je     0x4090d1
  40913a:	add    BYTE PTR [rax],al
  40913c:	add    BYTE PTR [rax],al
  40913e:	add    BYTE PTR [rax],al
  409140:	mov    ss,WORD PTR [rdi+0x0]
  409146:	add    BYTE PTR [rax],al
  409148:	movabs ds:0xc000000000000097,al
  409151:	xchg   edi,eax
  409152:	add    BYTE PTR [rax],al
  409154:	add    BYTE PTR [rax],al
  409156:	add    BYTE PTR [rax],al
  409158:	enter  0x97,0x0
  40915c:	add    BYTE PTR [rax],al
  40915e:	add    BYTE PTR [rax],al
  409160:	fcom   QWORD PTR [rdi+0x0]
  409166:	add    BYTE PTR [rax],al
  409168:	(bad)  
  409169:	xchg   edi,eax
  40916a:	add    BYTE PTR [rax],al
  40916c:	add    BYTE PTR [rax],al
  40916e:	add    BYTE PTR [rax],al
  409170:	(bad)  
  409171:	cwde   
  409172:	add    BYTE PTR [rax],al
  409174:	add    BYTE PTR [rax],al
  409176:	add    BYTE PTR [rax],al
  409178:	sbb    BYTE PTR [rax+0x0],bl
	...
  409186:	add    BYTE PTR [rax],al
  409188:	sub    BYTE PTR [rax+0x0],bl
  40918e:	add    BYTE PTR [rax],al
  409190:	rex cwde 
  409192:	add    BYTE PTR [rax],al
  409194:	add    BYTE PTR [rax],al
  409196:	add    BYTE PTR [rax],al
  409198:	rex.WRX cdqe 
  40919a:	add    BYTE PTR [rax],al
  40919c:	add    BYTE PTR [rax],al
  40919e:	add    BYTE PTR [rax],al
  4091a0:	pop    rsi
  4091a1:	cwde   
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	add    BYTE PTR [rax],al
  4091a6:	add    BYTE PTR [rax],al
  4091a8:	push   0xffffffffffffff98
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	add    BYTE PTR [rax],al
  4091ae:	add    BYTE PTR [rax],al
  4091b0:	js     0x40914a
  4091b2:	add    BYTE PTR [rax],al
  4091b4:	add    BYTE PTR [rax],al
  4091b6:	add    BYTE PTR [rax],al
  4091b8:	mov    BYTE PTR [rax+0x0],bl
  4091be:	add    BYTE PTR [rax],al
  4091c0:	(bad)  
  4091c1:	cwde   
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	add    BYTE PTR [rax],al
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	scas   al,BYTE PTR es:[rdi]
  4091c9:	cwde   
  4091ca:	add    BYTE PTR [rax],al
  4091cc:	add    BYTE PTR [rax],al
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	mov    eax,0x98
  4091d5:	add    BYTE PTR [rax],al
  4091d7:	add    dh,al
  4091d9:	cwde   
  4091da:	add    BYTE PTR [rax],al
  4091dc:	add    BYTE PTR [rax],al
  4091de:	add    BYTE PTR [rax],al
  4091e0:	rcr    BYTE PTR [rax+0x0],1
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	ficomp DWORD PTR [rax+0x0]
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	in     al,0x98
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	add    BYTE PTR [rax],al
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	out    dx,al
  4091f9:	cwde   
  4091fa:	add    BYTE PTR [rax],al
  4091fc:	add    BYTE PTR [rax],al
  4091fe:	add    BYTE PTR [rax],al
  409200:	cli    
  409201:	cwde   
  409202:	add    BYTE PTR [rax],al
  409204:	add    BYTE PTR [rax],al
  409206:	add    BYTE PTR [rax],al
  409208:	(bad)  
  409209:	cdq    
  40920a:	add    BYTE PTR [rax],al
  40920c:	add    BYTE PTR [rax],al
  40920e:	add    BYTE PTR [rax],al
  409210:	(bad)  
  409211:	cdq    
  409212:	add    BYTE PTR [rax],al
  409214:	add    BYTE PTR [rax],al
  409216:	add    BYTE PTR [rax],al
  409218:	sbb    bl,BYTE PTR [rcx+0x0]
  40921e:	add    BYTE PTR [rax],al
  409220:	and    al,0x99
  409222:	add    BYTE PTR [rax],al
  409224:	add    BYTE PTR [rax],al
  409226:	add    BYTE PTR [rax],al
  409228:	sub    al,0x99
  40922a:	add    BYTE PTR [rax],al
  40922c:	add    BYTE PTR [rax],al
  40922e:	add    BYTE PTR [rax],al
  409230:	xor    al,0x99
  409232:	add    BYTE PTR [rax],al
  409234:	add    BYTE PTR [rax],al
  409236:	add    BYTE PTR [rax],al
  409238:	ds cdq 
  40923a:	add    BYTE PTR [rax],al
  40923c:	add    BYTE PTR [rax],al
  40923e:	add    BYTE PTR [rax],al
  409240:	cqo    
  409242:	add    BYTE PTR [rax],al
  409244:	add    BYTE PTR [rax],al
  409246:	add    BYTE PTR [rax],al
  409248:	push   rax
  409249:	cdq    
  40924a:	add    BYTE PTR [rax],al
  40924c:	add    BYTE PTR [rax],al
  40924e:	add    BYTE PTR [rax],al
  409250:	pop    rdx
  409251:	cdq    
  409252:	add    BYTE PTR [rax],al
  409254:	add    BYTE PTR [rax],al
  409256:	add    BYTE PTR [rax],al
  409258:	(bad)  
  409259:	cdq    
  40925a:	add    BYTE PTR [rax],al
  40925c:	add    BYTE PTR [rax],al
  40925e:	add    BYTE PTR [rax],al
  409260:	ins    BYTE PTR es:[rdi],dx
  409261:	cdq    
  409262:	add    BYTE PTR [rax],al
  409264:	add    BYTE PTR [rax],al
  409266:	add    BYTE PTR [rax],al
  409268:	je     0x409203
  40926a:	add    BYTE PTR [rax],al
  40926c:	add    BYTE PTR [rax],al
  40926e:	add    BYTE PTR [rax],al
  409270:	jle    0x40920b
  409272:	add    BYTE PTR [rax],al
  409274:	add    BYTE PTR [rax],al
  409276:	add    BYTE PTR [rax],al
  409278:	mov    BYTE PTR [rcx+0x0],bl
  40927e:	add    BYTE PTR [rax],al
  409280:	xchg   edx,eax
  409281:	cdq    
  409282:	add    BYTE PTR [rax],al
  409284:	add    BYTE PTR [rax],al
  409286:	add    BYTE PTR [rax],al
  409288:	pushf  
  409289:	cdq    
  40928a:	add    BYTE PTR [rax],al
  40928c:	add    BYTE PTR [rax],al
  40928e:	add    BYTE PTR [rax],al
  409290:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409291:	cdq    
  409292:	add    BYTE PTR [rax],al
  409294:	add    BYTE PTR [rax],al
  409296:	add    BYTE PTR [rax],al
  409298:	mov    al,0x99
  40929a:	add    BYTE PTR [rax],al
  40929c:	add    BYTE PTR [rax],al
  40929e:	add    BYTE PTR [rax],al
  4092a0:	mov    edx,0x99
  4092a5:	add    BYTE PTR [rax],al
  4092a7:	add    ah,al
  4092a9:	cdq    
  4092aa:	add    BYTE PTR [rax],al
  4092ac:	add    BYTE PTR [rax],al
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	(bad)  
  4092b1:	cdq    
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	add    BYTE PTR [rax],al
  4092b6:	add    BYTE PTR [rax],al
  4092b8:	fcomp  DWORD PTR [rcx+0x0]
  4092be:	add    BYTE PTR [rax],al
  4092c0:	loop   0x40925b
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	add    BYTE PTR [rax],al
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	in     al,dx
  4092c9:	cdq    
	...
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	(bad)  
  4092d9:	xchg   ebp,eax
  4092da:	add    BYTE PTR [rax],al
  4092dc:	add    BYTE PTR [rax],al
  4092de:	add    BYTE PTR [rax],al
  4092e0:	jo     0x409277
  4092e2:	add    BYTE PTR [rax],al
  4092e4:	add    BYTE PTR [rax],al
  4092e6:	add    BYTE PTR [rax],al
  4092e8:	adc    BYTE PTR [rbp+0x0],0x0
  4092ef:	add    BYTE PTR [rax+0x95],dl
  4092f5:	add    BYTE PTR [rax],al
  4092f7:	add    BYTE PTR [rax+0x95],ah
  4092fd:	add    BYTE PTR [rax],al
  4092ff:	add    BYTE PTR [rax+0x95],dh
  409305:	add    BYTE PTR [rax],al
  409307:	add    BYTE PTR [rbp+rdx*4+0x0],bh
  40930e:	add    BYTE PTR [rax],al
  409310:	enter  0x95,0x0
  409314:	add    BYTE PTR [rax],al
  409316:	add    BYTE PTR [rax],al
  409318:	in     al,0x95
  40931a:	add    BYTE PTR [rax],al
  40931c:	add    BYTE PTR [rax],al
  40931e:	add    BYTE PTR [rax],al
  409320:	lock xchg ebp,eax
  409322:	add    BYTE PTR [rax],al
  409324:	add    BYTE PTR [rax],al
  409326:	add    BYTE PTR [rax],al
  409328:	cld    
  409329:	xchg   ebp,eax
  40932a:	add    BYTE PTR [rax],al
  40932c:	add    BYTE PTR [rax],al
  40932e:	add    BYTE PTR [rax],al
  409330:	or     BYTE PTR [rsi+0x0],dl
  409336:	add    BYTE PTR [rax],al
  409338:	and    BYTE PTR [rsi+0x0],dl
  40933e:	add    BYTE PTR [rax],al
  409340:	xor    al,0x96
	...
  40934e:	add    BYTE PTR [rax],al
  409350:	rex xchg esi,eax
  409352:	add    BYTE PTR [rax],al
  409354:	add    BYTE PTR [rax],al
  409356:	add    BYTE PTR [rax],al
  409358:	pop    rax
  409359:	xchg   esi,eax
  40935a:	add    BYTE PTR [rax],al
  40935c:	add    BYTE PTR [rax],al
  40935e:	add    BYTE PTR [rax],al
  409360:	jo     0x4092f8
  409362:	add    BYTE PTR [rax],al
  409364:	add    BYTE PTR [rax],al
  409366:	add    BYTE PTR [rax],al
  409368:	test   BYTE PTR [rsi+0x0],dl
  40936e:	add    BYTE PTR [rax],al
  409370:	(bad)  
  409371:	xchg   esi,eax
  409372:	add    BYTE PTR [rax],al
  409374:	add    BYTE PTR [rax],al
  409376:	add    BYTE PTR [rax],al
  409378:	mov    al,0x96
  40937a:	add    BYTE PTR [rax],al
  40937c:	add    BYTE PTR [rax],al
  40937e:	add    BYTE PTR [rax],al
  409380:	rcl    BYTE PTR [rsi+0x0],0x0
  409387:	add    dl,dl
  409389:	xchg   esi,eax
  40938a:	add    BYTE PTR [rax],al
  40938c:	add    BYTE PTR [rax],al
  40938e:	add    BYTE PTR [rax],al
  409390:	in     al,dx
  409391:	xchg   esi,eax
  409392:	add    BYTE PTR [rax],al
  409394:	add    BYTE PTR [rax],al
  409396:	add    BYTE PTR [rax],al
  409398:	cld    
  409399:	xchg   esi,eax
  40939a:	add    BYTE PTR [rax],al
  40939c:	add    BYTE PTR [rax],al
  40939e:	add    BYTE PTR [rax],al
  4093a0:	sbb    BYTE PTR [rdi+0x0],dl
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	xor    BYTE PTR [rdi+0x0],dl
  4093ae:	add    BYTE PTR [rax],al
  4093b0:	rex.WX xchg rdi,rax
  4093b2:	add    BYTE PTR [rax],al
  4093b4:	add    BYTE PTR [rax],al
  4093b6:	add    BYTE PTR [rax],al
  4093b8:	(bad)  
  4093b9:	xchg   edi,eax
  4093ba:	add    BYTE PTR [rax],al
  4093bc:	add    BYTE PTR [rax],al
  4093be:	add    BYTE PTR [rax],al
  4093c0:	je     0x409359
  4093c2:	add    BYTE PTR [rax],al
  4093c4:	add    BYTE PTR [rax],al
  4093c6:	add    BYTE PTR [rax],al
  4093c8:	mov    ss,WORD PTR [rdi+0x0]
  4093ce:	add    BYTE PTR [rax],al
  4093d0:	movabs ds:0xc000000000000097,al
  4093d9:	xchg   edi,eax
  4093da:	add    BYTE PTR [rax],al
  4093dc:	add    BYTE PTR [rax],al
  4093de:	add    BYTE PTR [rax],al
  4093e0:	enter  0x97,0x0
  4093e4:	add    BYTE PTR [rax],al
  4093e6:	add    BYTE PTR [rax],al
  4093e8:	fcom   QWORD PTR [rdi+0x0]
  4093ee:	add    BYTE PTR [rax],al
  4093f0:	(bad)  
  4093f1:	xchg   edi,eax
  4093f2:	add    BYTE PTR [rax],al
  4093f4:	add    BYTE PTR [rax],al
  4093f6:	add    BYTE PTR [rax],al
  4093f8:	(bad)  
  4093f9:	cwde   
  4093fa:	add    BYTE PTR [rax],al
  4093fc:	add    BYTE PTR [rax],al
  4093fe:	add    BYTE PTR [rax],al
  409400:	sbb    BYTE PTR [rax+0x0],bl
	...
  40940e:	add    BYTE PTR [rax],al
  409410:	sub    BYTE PTR [rax+0x0],bl
  409416:	add    BYTE PTR [rax],al
  409418:	rex cwde 
  40941a:	add    BYTE PTR [rax],al
  40941c:	add    BYTE PTR [rax],al
  40941e:	add    BYTE PTR [rax],al
  409420:	rex.WRX cdqe 
  409422:	add    BYTE PTR [rax],al
  409424:	add    BYTE PTR [rax],al
  409426:	add    BYTE PTR [rax],al
  409428:	pop    rsi
  409429:	cwde   
  40942a:	add    BYTE PTR [rax],al
  40942c:	add    BYTE PTR [rax],al
  40942e:	add    BYTE PTR [rax],al
  409430:	push   0xffffffffffffff98
  409432:	add    BYTE PTR [rax],al
  409434:	add    BYTE PTR [rax],al
  409436:	add    BYTE PTR [rax],al
  409438:	js     0x4093d2
  40943a:	add    BYTE PTR [rax],al
  40943c:	add    BYTE PTR [rax],al
  40943e:	add    BYTE PTR [rax],al
  409440:	mov    BYTE PTR [rax+0x0],bl
  409446:	add    BYTE PTR [rax],al
  409448:	(bad)  
  409449:	cwde   
  40944a:	add    BYTE PTR [rax],al
  40944c:	add    BYTE PTR [rax],al
  40944e:	add    BYTE PTR [rax],al
  409450:	scas   al,BYTE PTR es:[rdi]
  409451:	cwde   
  409452:	add    BYTE PTR [rax],al
  409454:	add    BYTE PTR [rax],al
  409456:	add    BYTE PTR [rax],al
  409458:	mov    eax,0x98
  40945d:	add    BYTE PTR [rax],al
  40945f:	add    dh,al
  409461:	cwde   
  409462:	add    BYTE PTR [rax],al
  409464:	add    BYTE PTR [rax],al
  409466:	add    BYTE PTR [rax],al
  409468:	rcr    BYTE PTR [rax+0x0],1
  40946e:	add    BYTE PTR [rax],al
  409470:	ficomp DWORD PTR [rax+0x0]
  409476:	add    BYTE PTR [rax],al
  409478:	in     al,0x98
  40947a:	add    BYTE PTR [rax],al
  40947c:	add    BYTE PTR [rax],al
  40947e:	add    BYTE PTR [rax],al
  409480:	out    dx,al
  409481:	cwde   
  409482:	add    BYTE PTR [rax],al
  409484:	add    BYTE PTR [rax],al
  409486:	add    BYTE PTR [rax],al
  409488:	cli    
  409489:	cwde   
  40948a:	add    BYTE PTR [rax],al
  40948c:	add    BYTE PTR [rax],al
  40948e:	add    BYTE PTR [rax],al
  409490:	(bad)  
  409491:	cdq    
  409492:	add    BYTE PTR [rax],al
  409494:	add    BYTE PTR [rax],al
  409496:	add    BYTE PTR [rax],al
  409498:	(bad)  
  409499:	cdq    
  40949a:	add    BYTE PTR [rax],al
  40949c:	add    BYTE PTR [rax],al
  40949e:	add    BYTE PTR [rax],al
  4094a0:	sbb    bl,BYTE PTR [rcx+0x0]
  4094a6:	add    BYTE PTR [rax],al
  4094a8:	and    al,0x99
  4094aa:	add    BYTE PTR [rax],al
  4094ac:	add    BYTE PTR [rax],al
  4094ae:	add    BYTE PTR [rax],al
  4094b0:	sub    al,0x99
  4094b2:	add    BYTE PTR [rax],al
  4094b4:	add    BYTE PTR [rax],al
  4094b6:	add    BYTE PTR [rax],al
  4094b8:	xor    al,0x99
  4094ba:	add    BYTE PTR [rax],al
  4094bc:	add    BYTE PTR [rax],al
  4094be:	add    BYTE PTR [rax],al
  4094c0:	ds cdq 
  4094c2:	add    BYTE PTR [rax],al
  4094c4:	add    BYTE PTR [rax],al
  4094c6:	add    BYTE PTR [rax],al
  4094c8:	cqo    
  4094ca:	add    BYTE PTR [rax],al
  4094cc:	add    BYTE PTR [rax],al
  4094ce:	add    BYTE PTR [rax],al
  4094d0:	push   rax
  4094d1:	cdq    
  4094d2:	add    BYTE PTR [rax],al
  4094d4:	add    BYTE PTR [rax],al
  4094d6:	add    BYTE PTR [rax],al
  4094d8:	pop    rdx
  4094d9:	cdq    
  4094da:	add    BYTE PTR [rax],al
  4094dc:	add    BYTE PTR [rax],al
  4094de:	add    BYTE PTR [rax],al
  4094e0:	(bad)  
  4094e1:	cdq    
  4094e2:	add    BYTE PTR [rax],al
  4094e4:	add    BYTE PTR [rax],al
  4094e6:	add    BYTE PTR [rax],al
  4094e8:	ins    BYTE PTR es:[rdi],dx
  4094e9:	cdq    
  4094ea:	add    BYTE PTR [rax],al
  4094ec:	add    BYTE PTR [rax],al
  4094ee:	add    BYTE PTR [rax],al
  4094f0:	je     0x40948b
  4094f2:	add    BYTE PTR [rax],al
  4094f4:	add    BYTE PTR [rax],al
  4094f6:	add    BYTE PTR [rax],al
  4094f8:	jle    0x409493
  4094fa:	add    BYTE PTR [rax],al
  4094fc:	add    BYTE PTR [rax],al
  4094fe:	add    BYTE PTR [rax],al
  409500:	mov    BYTE PTR [rcx+0x0],bl
  409506:	add    BYTE PTR [rax],al
  409508:	xchg   edx,eax
  409509:	cdq    
  40950a:	add    BYTE PTR [rax],al
  40950c:	add    BYTE PTR [rax],al
  40950e:	add    BYTE PTR [rax],al
  409510:	pushf  
  409511:	cdq    
  409512:	add    BYTE PTR [rax],al
  409514:	add    BYTE PTR [rax],al
  409516:	add    BYTE PTR [rax],al
  409518:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409519:	cdq    
  40951a:	add    BYTE PTR [rax],al
  40951c:	add    BYTE PTR [rax],al
  40951e:	add    BYTE PTR [rax],al
  409520:	mov    al,0x99
  409522:	add    BYTE PTR [rax],al
  409524:	add    BYTE PTR [rax],al
  409526:	add    BYTE PTR [rax],al
  409528:	mov    edx,0x99
  40952d:	add    BYTE PTR [rax],al
  40952f:	add    ah,al
  409531:	cdq    
  409532:	add    BYTE PTR [rax],al
  409534:	add    BYTE PTR [rax],al
  409536:	add    BYTE PTR [rax],al
  409538:	(bad)  
  409539:	cdq    
  40953a:	add    BYTE PTR [rax],al
  40953c:	add    BYTE PTR [rax],al
  40953e:	add    BYTE PTR [rax],al
  409540:	fcomp  DWORD PTR [rcx+0x0]
  409546:	add    BYTE PTR [rax],al
  409548:	loop   0x4094e3
  40954a:	add    BYTE PTR [rax],al
  40954c:	add    BYTE PTR [rax],al
  40954e:	add    BYTE PTR [rax],al
  409550:	in     al,dx
  409551:	cdq    
	...
  40955e:	add    BYTE PTR [rax],al
  409560:	(bad)  
  409561:	add    DWORD PTR [rax+0x35],ecx
  409564:	rex.RB (bad) 
  409566:	jne    0x4095dc
  409568:	outs   dx,DWORD PTR ds:[rsi]
  409569:	pop    rdi
  40956a:	imul   esi,DWORD PTR [rbx+0x5f],0xf1003276
  409571:	add    DWORD PTR [rax+0x35],ecx
  409574:	rex.RB
  409575:	addr32 gs je 0x4095d8
  409579:	(bad)  
  40957a:	jne    0x4095f0
  40957c:	outs   dx,DWORD PTR ds:[rsi]
  40957d:	xor    DWORD PTR [rax],eax
  40957f:	add    dl,dh
  409581:	add    DWORD PTR [rax+0x35],ecx
  409584:	rex.RB
  409585:	addr32 gs je 0x4095e8
  409589:	(bad)  
  40958a:	jne    0x409600
  40958c:	outs   dx,DWORD PTR ds:[rsi]
  40958d:	xor    al,BYTE PTR [rax]
  40958f:	add    bh,bh
  409591:	add    DWORD PTR [rax+0x35],ecx
  409594:	rex.RB jae 0x4095fc
  409597:	je     0x4095f8
  409599:	(bad)  
  40959a:	jne    0x409610
  40959c:	outs   dx,DWORD PTR ds:[rsi]
  40959d:	xor    DWORD PTR [rax],eax
  40959f:	add    BYTE PTR [rax],al
  4095a1:	add    cl,BYTE PTR [rax+0x35]
  4095a4:	rex.RB jae 0x40960c
  4095a7:	je     0x409608
  4095a9:	(bad)  
  4095aa:	jne    0x409620
  4095ac:	outs   dx,DWORD PTR ds:[rsi]
  4095ad:	xor    al,BYTE PTR [rax]
  4095af:	add    dl,ch
  4095b1:	add    cl,BYTE PTR [rax+0x35]
  4095b4:	movsxd r13d,DWORD PTR [rdi+r13*2+0x73]
  4095b9:	add    BYTE PTR gs:[rax],al
  4095bc:	std    
  4095bd:	add    cl,BYTE PTR [rax+0x35]
  4095c0:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4095c2:	jo     0x409629
  4095c4:	outs   dx,BYTE PTR ds:[rsi]
  4095c5:	add    BYTE PTR [rax],al
  4095c7:	add    BYTE PTR [rdi+0x50354805],al
  4095cd:	pop    rdi
  4095ce:	rex.XB
  4095cf:	rex.WR push rbx
  4095d1:	pop    rdi
  4095d2:	rex.RX
  4095d3:	rex.WB
  4095d4:	rex.WR
  4095d5:	rex.RB pop r15
  4095d7:	rex.B
  4095d8:	rex.XB
  4095d9:	rex.XB
  4095da:	rex.RB push r11
  4095dc:	push   rbx
  4095dd:	pop    rdi
  4095de:	rex.WB
  4095df:	rex.R pop rdi
  4095e1:	add    BYTE PTR [eax],al
  4095e4:	cmc    
  4095e5:	add    eax,0x63503548
  4095ea:	ins    BYTE PTR es:[rdi],dx
  4095eb:	outs   dx,DWORD PTR ds:[rsi]
  4095ec:	jae    0x409653
  4095ee:	add    BYTE PTR [rax],al
  4095f0:	stc    
  4095f1:	add    eax,0x63503548
  4095f6:	jb     0x40965d
  4095f8:	(bad)  
  4095f9:	je     0x409660
  4095fb:	add    BYTE PTR [rdi+0x6],cl
  4095fe:	xor    rax,0x74657350
  409604:	add    BYTE PTR [rax],al
  409606:	add    BYTE PTR [rax],al
  409608:	push   0x6
  40960a:	xor    rax,0x74657350
  409610:	pop    rdi
  409611:	data16 (bad) 
  409613:	jo     0x409681
  409615:	pop    rdi
  409616:	data16 (bad) 
  409618:	ins    DWORD PTR es:[rdi],dx
  409619:	imul   ebp,DWORD PTR [rcx+rdi*2+0x0],0xa0000000
  409621:	or     DWORD PTR [rax+0x35],ecx
  409624:	movsxd ebp,DWORD PTR [rax+0x65]
  409627:	movsxd ebp,DWORD PTR [rbx+0x5f]
  40962a:	jbe    0x409691
  40962c:	jb     0x4096a1
  40962e:	imul   ebp,DWORD PTR [rdi+0x6e],0xa7000000
  409635:	or     DWORD PTR [rax+0x35],ecx
  409638:	outs   dx,DWORD PTR ds:[rsi]
  409639:	jo     0x4096a0
  40963b:	outs   dx,BYTE PTR ds:[rsi]
  40963c:	add    BYTE PTR [rax],al
  40963e:	add    BYTE PTR [rax],al
  409640:	fadd   DWORD PTR [rax]
  409642:	rex.R
  409643:	gs ins BYTE PTR es:[rdi],dx
  409645:	gs je  0x4096ad
  409648:	rex.XB jb 0x4096b4
  40964b:	je     0x4096b6
  40964d:	movsxd esp,DWORD PTR [rcx+0x6c]
  409650:	push   rbx
  409651:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409656:	outs   dx,BYTE PTR ds:[rsi]
  409657:	add    al,bh
  409659:	add    BYTE PTR [rbp+0x6e],al
  40965c:	je     0x4096c3
  40965e:	jb     0x4096a3
  409660:	jb     0x4096cb
  409662:	je     0x4096cd
  409664:	movsxd esp,DWORD PTR [rcx+0x6c]
  409667:	push   rbx
  409668:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40966d:	outs   dx,BYTE PTR ds:[rsi]
  40966e:	add    BYTE PTR [rax],al
  409670:	int    0x1
  409672:	rex.RXB
  409673:	gs je  0x4096b9
  409676:	jne    0x4096ea
  409678:	jb     0x4096df
  40967a:	outs   dx,BYTE PTR ds:[rsi]
  40967b:	je     0x4096cd
  40967d:	jb     0x4096ee
  40967f:	movsxd esp,DWORD PTR [rbp+0x73]
  409682:	jae    0x409684
  409684:	(bad)  
  409685:	add    DWORD PTR [rdi+0x65],eax
  409688:	je     0x4096cd
  40968a:	jne    0x4096fe
  40968c:	jb     0x4096f3
  40968e:	outs   dx,BYTE PTR ds:[rsi]
  40968f:	je     0x4096e1
  409691:	jb     0x409702
  409693:	movsxd esp,DWORD PTR [rbp+0x73]
  409696:	jae    0x4096e1
  409698:	fs add dl,dl
  40969b:	add    DWORD PTR [rdi+0x65],eax
  40969e:	je     0x4096e3
  4096a0:	jne    0x409714
  4096a2:	jb     0x409709
  4096a4:	outs   dx,BYTE PTR ds:[rsi]
  4096a5:	je     0x4096fb
  4096a7:	push   0x64616572
  4096ac:	rex.WB
  4096ad:	add    BYTE PTR fs:[rax],al
  4096b0:	adc    BYTE PTR [rdx],al
  4096b2:	rex.RXB
  4096b3:	gs je  0x409702
  4096b6:	(bad)  
  4096b7:	jae    0x40972d
  4096b9:	rex.RB jb 0x40972e
  4096bc:	outs   dx,DWORD PTR ds:[rsi]
  4096bd:	jb     0x4096bf
  4096bf:	add    BYTE PTR [rbx+0x2],dh
  4096c2:	rex.RXB
  4096c3:	gs je  0x409719
  4096c6:	je     0x409729
  4096c8:	jb     0x40973e
  4096ca:	jne    0x40973c
  4096cc:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4096ce:	outs   dx,WORD PTR ds:[rsi]
  4096d0:	add    BYTE PTR [r10+0x74654702],cl
  4096d7:	push   rbx
  4096d8:	jns    0x40974d
  4096da:	je     0x409741
  4096dc:	ins    DWORD PTR es:[rdi],dx
  4096dd:	push   rsp
  4096de:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  4096e5:	ins    BYTE PTR es:[rdi],dx
  4096e6:	gs push rsp
  4096e8:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  4096ef:	gs je  0x409746
  4096f2:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4096f9:	je     0x4096fb
  4096fb:	add    cl,bh
  4096fd:	add    cl,BYTE PTR [rcx+0x6e]
  409700:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  409708:	rex.XB jb 0x409774
  40970b:	je     0x409776
  40970d:	movsxd esp,DWORD PTR [rcx+0x6c]
  409710:	push   rbx
  409711:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409716:	outs   dx,BYTE PTR ds:[rsi]
  409717:	add    BYTE PTR [rbx+0x3],cl
  40971a:	rex.WR
  40971b:	gs (bad) 
  40971d:	jbe    0x409784
  40971f:	rex.XB jb 0x40978b
  409722:	je     0x40978d
  409724:	movsxd esp,DWORD PTR [rcx+0x6c]
  409727:	push   rbx
  409728:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40972d:	outs   dx,BYTE PTR ds:[rsi]
  40972e:	add    BYTE PTR [rax],al
  409730:	mov    ebx,0x65755103
  409735:	jb     0x4097b0
  409737:	push   rax
  409738:	gs jb  0x4097a1
  40973b:	outs   dx,DWORD PTR ds:[rsi]
  40973c:	jb     0x4097ab
  40973e:	(bad)  
  40973f:	outs   dx,BYTE PTR ds:[rsi]
  409740:	movsxd esp,DWORD PTR [rbp+0x43]
  409743:	outs   dx,DWORD PTR ds:[rsi]
  409744:	jne    0x4097b4
  409746:	je     0x4097ad
  409748:	jb     0x40974a
  40974a:	add    DWORD PTR [rdx+rdx*2],eax
  40974d:	je     0x4097bb
  40974f:	rex.B
  409750:	fs fs rex.RX jne 0x4097c3
  409755:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409759:	outs   dx,BYTE PTR ds:[rsi]
  40975a:	push   rsp
  40975b:	(bad)  
  40975c:	(bad)  
  40975d:	ins    BYTE PTR es:[rdi],dx
  40975e:	add    BYTE PTR gs:[rdx],al
  409761:	add    al,0x52
  409763:	je     0x4097d1
  409765:	rex.XB (bad) 
  409767:	jo     0x4097dd
  409769:	jne    0x4097dd
  40976b:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40976e:	outs   dx,BYTE PTR ds:[rsi]
  40976f:	je     0x4097d6
  409771:	js     0x4097e7
  409773:	add    BYTE PTR [rcx],cl
  409775:	add    al,0x52
  409777:	je     0x4097e5
  409779:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40977b:	outs   dx,DWORD PTR ds:[rsi]
  40977c:	imul   esi,DWORD PTR [rbp+0x70],0x46
  409780:	jne    0x4097f0
  409782:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409786:	outs   dx,BYTE PTR ds:[rsi]
  409787:	rex.RB outs dx,BYTE PTR ds:[rsi]
  409789:	je     0x4097fd
  40978b:	jns    0x40978d
  40978d:	add    BYTE PTR [rax],dl
  40978f:	add    al,0x52
  409791:	je     0x4097ff
  409793:	push   rsi
  409794:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40979b:	outs   dx,BYTE PTR ds:[rsi]
  40979c:	ja     0x409807
  40979e:	outs   dx,BYTE PTR ds:[rsi]
  40979f:	add    BYTE PTR fs:[rax],al
  4097a2:	lahf   
  4097a3:	add    al,0x53
  4097a5:	gs je  0x4097fd
  4097a8:	outs   dx,BYTE PTR ds:[rsi]
  4097a9:	push   0x6c646e61
  4097ae:	gs fs rex.RB js 0x409816
  4097b3:	gs jo  0x40982a
  4097b6:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4097bd:	gs jb  0x4097c0
  4097c0:	lods   al,BYTE PTR ds:[rsi]
  4097c1:	add    al,0x53
  4097c3:	ins    BYTE PTR es:[rdi],dx
  4097c4:	gs gs jo 0x4097c8
  4097c8:	mov    edx,0x72655404
  4097cd:	ins    DWORD PTR es:[rdi],dx
  4097ce:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  4097d5:	outs   dx,DWORD PTR ds:[rsi]
  4097d6:	movsxd esp,DWORD PTR [rbp+0x73]
  4097d9:	jae    0x4097db
  4097db:	add    cl,al
  4097dd:	add    al,0x54
  4097df:	ins    BYTE PTR es:[rdi],dx
  4097e0:	jae    0x409829
  4097e2:	gs je  0x40983b
  4097e5:	(bad)  
  4097e6:	ins    BYTE PTR es:[rdi],dx
  4097e7:	jne    0x40984e
  4097e9:	add    dh,cl
  4097eb:	add    al,0x55
  4097ed:	outs   dx,BYTE PTR ds:[rsi]
  4097ee:	push   0x6c646e61
  4097f3:	gs fs rex.RB js 0x40985b
  4097f8:	gs jo  0x40986f
  4097fb:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409802:	gs jb  0x409805
  409805:	add    ah,ch
  409807:	add    al,0x56
  409809:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  409810:	jb     0x409881
  409812:	je     0x409879
  409814:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  409818:	out    dx,al
  409819:	add    al,0x56
  40981b:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  409822:	jne    0x409889
  409824:	jb     0x40989f
  409826:	add    BYTE PTR [rax],al
  409828:	(bad)  
  409829:	add    BYTE PTR [rdi+0x5f],bl
  40982c:	rex.XB pop r15
  40982e:	jae    0x4098a0
  409830:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409834:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40983b:	ins    BYTE PTR es:[rdi],dx
  40983c:	gs jb  0x40983f
  40983f:	add    BYTE PTR [rsi+0x0],cl
  409842:	pop    rdi
  409843:	pop    rdi
  409844:	fs ins BYTE PTR es:[rdi],dx
  409846:	ins    BYTE PTR es:[rdi],dx
  409847:	outs   dx,DWORD PTR ds:[rsi]
  409848:	outs   dx,BYTE PTR ds:[rsi]
  409849:	gs js  0x4098b5
  40984c:	je     0x40984e
  40984e:	push   rcx
  40984f:	add    BYTE PTR [rdi+0x5f],bl
  409852:	addr32 gs je 0x4098c3
  409856:	(bad)  
  409857:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40985e:	push   rdx
  40985f:	add    BYTE PTR [rdi+0x5f],bl
  409862:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  409869:	add    BYTE PTR [rbx+0x0],dl
  40986c:	pop    rdi
  40986d:	pop    rdi
  40986e:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  409875:	movsxd eax,DWORD PTR [rax]
  409877:	add    BYTE PTR [rdx+0x0],bl
  40987a:	pop    rdi
  40987b:	pop    rdi
  40987c:	ins    BYTE PTR es:[rdi],dx
  40987d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  409880:	jbe    0x4098e1
  409882:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  409889:	add    BYTE PTR [rdi+0x5f],bl
  40988c:	jae    0x4098f3
  40988e:	je     0x4098ef
  409890:	(bad)  
  409891:	jo     0x409903
  409893:	pop    rdi
  409894:	je     0x40990f
  409896:	jo     0x4098fd
  409898:	add    BYTE PTR [rax],al
  40989a:	(bad)  
  40989b:	add    BYTE PTR [rdi+0x5f],bl
  40989e:	jae    0x409905
  4098a0:	je     0x409917
  4098a2:	jae    0x409909
  4098a4:	jb     0x409913
  4098a6:	(bad)  
  4098a7:	je     0x409911
  4098a9:	gs jb  0x40991e
  4098ac:	add    BYTE PTR [rax],al
  4098ae:	jno    0x4098b0
  4098b0:	pop    rdi
  4098b1:	(bad)  
  4098b2:	movsxd ebp,DWORD PTR [rbp+0x64]
  4098b5:	ins    BYTE PTR es:[rdi],dx
  4098b6:	outs   dx,BYTE PTR ds:[rsi]
  4098b7:	add    BYTE PTR [rax+0x0],bh
  4098ba:	pop    rdi
  4098bb:	(bad)  
  4098bc:	ins    DWORD PTR es:[rdi],dx
  4098bd:	jae    0x409926
  4098bf:	pop    rdi
  4098c0:	gs js  0x40992c
  4098c3:	je     0x4098c5
  4098c5:	add    BYTE PTR [rdx+0x65635f00],cl
  4098cb:	js     0x409936
  4098cd:	je     0x4098cf
  4098cf:	add    BYTE PTR [rax+rax*1+0x6f6c635f],dl
  4098d6:	jae    0x40993d
  4098d8:	add    BYTE PTR [rax],al
  4098da:	mov    edx,0x72655f00
  4098df:	jb     0x40994f
  4098e1:	outs   dx,DWORD PTR ds:[rsi]
  4098e2:	add    BYTE PTR [rax],al
  4098e4:	fiadd  DWORD PTR [rax]
  4098e6:	pop    rdi
  4098e7:	ins    WORD PTR es:[rdi],dx
  4098e9:	outs   dx,DWORD PTR ds:[rsi]
  4098ea:	fs add BYTE PTR gs:[rax],al
  4098ee:	call   0x73a6f7f3
  4098f3:	je     0x409956
  4098f5:	je     0x40992d
  4098f7:	xor    al,0x0
  4098f9:	add    BYTE PTR [rdx],bl
  4098fb:	add    DWORD PTR [rdi+0x69],ebx
  4098fe:	outs   dx,BYTE PTR ds:[rsi]
  4098ff:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x80006d72
  409907:	add    DWORD PTR [rdi+0x6c],ebx
  40990a:	outs   dx,DWORD PTR ds:[rsi]
  40990b:	movsxd ebp,DWORD PTR [rbx+0x0]
  40990e:	mov    DWORD PTR [rcx],eax
  409910:	pop    rdi
  409911:	ins    BYTE PTR es:[rdi],dx
  409912:	jae    0x409979
  409914:	imul   ebp,DWORD PTR gs:[rcx+0x36],0x34
  409919:	add    BYTE PTR [rip+0x6e6f5f02],ah        # 0x6eaff821
  40991f:	gs js  0x40998b
  409922:	je     0x409924
  409924:	add    bl,BYTE PTR es:[rdi+0x6f]
  409928:	jo     0x40998f
  40992a:	outs   dx,BYTE PTR ds:[rsi]
  40992b:	add    BYTE PTR [rbx],bh
  40992d:	add    bl,BYTE PTR [rdi+0x72]
  409930:	gs (bad) 
  409932:	fs add ah,al
  409935:	add    bl,BYTE PTR [rdi+0x75]
  409938:	outs   dx,BYTE PTR ds:[rsi]
  409939:	ins    BYTE PTR es:[rdi],dx
  40993a:	outs   dx,DWORD PTR ds:[rsi]
  40993b:	movsxd ebp,DWORD PTR [rbx+0x0]
  40993e:	pop    rax
  40993f:	add    ebx,DWORD PTR [rdi+0x77]
  409942:	jb     0x4099ad
  409944:	je     0x4099ab
  409946:	add    BYTE PTR [rax],al
  409948:	jg     0x40994d
  40994a:	(bad)  
  40994b:	(bad)  
  40994c:	outs   dx,DWORD PTR ds:[rsi]
  40994d:	jb     0x4099c3
  40994f:	add    BYTE PTR [rax+0x6c616303],dl
  409955:	ins    BYTE PTR es:[rdi],dx
  409956:	outs   dx,DWORD PTR ds:[rsi]
  409957:	movsxd eax,DWORD PTR [rax]
  409959:	add    BYTE PTR [rbp+0x69786503],bl
  40995f:	je     0x409961
  409961:	add    BYTE PTR [rax+0x72706603],dh
  409967:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  40996e:	data16 jb 0x4099d6
  409971:	add    BYTE PTR gs:[rax],al
  409974:	ret    0x6603
  409977:	ja     0x4099eb
  409979:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  409981:	(bad)  
  409982:	ins    BYTE PTR es:[rdi],dx
  409983:	ins    BYTE PTR es:[rdi],dx
  409984:	outs   dx,DWORD PTR ds:[rsi]
  409985:	movsxd eax,DWORD PTR [rax]
  409987:	add    al,bh
  409989:	add    ebp,DWORD PTR [rbp+0x65]
  40998c:	ins    DWORD PTR es:[rdi],dx
  40998d:	movsxd esi,DWORD PTR [rax+0x79]
  409990:	add    BYTE PTR [rax],al
  409992:	inc    BYTE PTR [rbx]
  409994:	jo     0x4099fb
  409996:	jb     0x409a0a
  409998:	outs   dx,DWORD PTR ds:[rsi]
  409999:	jb     0x40999b
  40999b:	add    BYTE PTR [rcx],al
  40999d:	add    al,0x70
  40999f:	jb     0x409a0a
  4099a1:	outs   dx,BYTE PTR ds:[rsi]
  4099a2:	je     0x409a0a
  4099a4:	add    BYTE PTR [rax],al
  4099a6:	(bad)  
  4099a7:	add    al,0x73
  4099a9:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  4099b0:	sbb    eax,DWORD PTR [rbx+rsi*2]
  4099b3:	jo     0x409a27
  4099b5:	imul   ebp,DWORD PTR [rsi+0x74],0x4240066
  4099bc:	jae    0x409a32
  4099be:	jb     0x409a23
  4099c0:	ins    DWORD PTR es:[rdi],dx
  4099c1:	jo     0x4099c3
  4099c3:	add    BYTE PTR [rbx],ch
  4099c5:	add    al,0x73
  4099c7:	je     0x409a3b
  4099c9:	ins    BYTE PTR es:[rdi],dx
  4099ca:	outs   dx,BYTE PTR gs:[rsi]
  4099cc:	add    BYTE PTR [rax],al
  4099ce:	cs add al,0x73
  4099d1:	je     0x409a45
  4099d3:	outs   dx,BYTE PTR ds:[rsi]
  4099d4:	movsxd ebp,DWORD PTR [rbp+0x70]
  4099d7:	add    BYTE PTR [rdx],dh
  4099d9:	add    al,0x73
  4099db:	je     0x409a4f
  4099dd:	jb     0x409a42
  4099df:	push   0x4380072
  4099e4:	jae    0x409a5a
  4099e6:	jb     0x409a5c
  4099e8:	outs   dx,DWORD PTR ds:[rsi]
  4099e9:	ins    BYTE PTR es:[rdi],dx
  4099ea:	add    BYTE PTR [rax],al
  4099ec:	rex.WRX add al,0x76
  4099ef:	data16 jo 0x409a64
  4099f2:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  4099f9:	nop
  4099fa:	add    BYTE PTR [rax],al
  4099fc:	add    BYTE PTR [rax-0x70000000],dl
  409a02:	add    BYTE PTR [rax],al
  409a04:	add    BYTE PTR [rax-0x70000000],dl
  409a0a:	add    BYTE PTR [rax],al
  409a0c:	add    BYTE PTR [rax-0x70000000],dl
  409a12:	add    BYTE PTR [rax],al
  409a14:	add    BYTE PTR [rax-0x70000000],dl
  409a1a:	add    BYTE PTR [rax],al
  409a1c:	add    BYTE PTR [rax-0x70000000],dl
  409a22:	add    BYTE PTR [rax],al
  409a24:	add    BYTE PTR [rax-0x70000000],dl
  409a2a:	add    BYTE PTR [rax],al
  409a2c:	add    BYTE PTR [rax+0x696c0000],dl
  409a32:	(bad)  
  409a33:	push   0x2d356664
  409a38:	cmp    DWORD PTR [rsi],ebp
  409a3a:	fs ins BYTE PTR es:[rdi],dx
  409a3c:	ins    BYTE PTR es:[rdi],dx
  409a3d:	add    BYTE PTR [rax],al
  409a3f:	add    BYTE PTR [rax+rdx*4],dl
  409a42:	add    BYTE PTR [rax],al
  409a44:	adc    al,0x90
  409a46:	add    BYTE PTR [rax],al
  409a48:	adc    al,0x90
  409a4a:	add    BYTE PTR [rax],al
  409a4c:	adc    al,0x90
  409a4e:	add    BYTE PTR [rax],al
  409a50:	adc    al,0x90
  409a52:	add    BYTE PTR [rax],al
  409a54:	adc    al,0x90
  409a56:	add    BYTE PTR [rax],al
  409a58:	adc    al,0x90
  409a5a:	add    BYTE PTR [rax],al
  409a5c:	adc    al,0x90
  409a5e:	add    BYTE PTR [rax],al
  409a60:	adc    al,0x90
  409a62:	add    BYTE PTR [rax],al
  409a64:	adc    al,0x90
  409a66:	add    BYTE PTR [rax],al
  409a68:	adc    al,0x90
  409a6a:	add    BYTE PTR [rax],al
  409a6c:	adc    al,0x90
  409a6e:	add    BYTE PTR [rax],al
  409a70:	adc    al,0x90
  409a72:	add    BYTE PTR [rax],al
  409a74:	adc    al,0x90
  409a76:	add    BYTE PTR [rax],al
  409a78:	adc    al,0x90
  409a7a:	add    BYTE PTR [rax],al
  409a7c:	adc    al,0x90
  409a7e:	add    BYTE PTR [rax],al
  409a80:	adc    al,0x90
  409a82:	add    BYTE PTR [rax],al
  409a84:	adc    al,0x90
  409a86:	add    BYTE PTR [rax],al
  409a88:	adc    al,0x90
  409a8a:	add    BYTE PTR [rax],al
  409a8c:	adc    al,0x90
  409a8e:	add    BYTE PTR [rax],al
  409a90:	adc    al,0x90
  409a92:	add    BYTE PTR [rax],al
  409a94:	adc    al,0x90
  409a96:	add    BYTE PTR [rax],al
  409a98:	adc    al,0x90
  409a9a:	add    BYTE PTR [rax],al
  409a9c:	rex.WXB
  409a9d:	rex.RB push r10
  409a9f:	rex.WRX
  409aa0:	rex.RB
  409aa1:	xor    r14,QWORD PTR [rdx]
  409aa4:	cs fs ins BYTE PTR es:[rdi],dx
  409aa7:	ins    BYTE PTR es:[rdi],dx
  409aa8:	add    BYTE PTR [rax],al
  409aaa:	add    BYTE PTR [rax],al
  409aac:	sub    BYTE PTR [rax-0x6fd80000],dl
  409ab2:	add    BYTE PTR [rax],al
  409ab4:	sub    BYTE PTR [rax-0x6fd80000],dl
  409aba:	add    BYTE PTR [rax],al
  409abc:	sub    BYTE PTR [rax-0x6fd80000],dl
  409ac2:	add    BYTE PTR [rax],al
  409ac4:	sub    BYTE PTR [rax-0x6fd80000],dl
  409aca:	add    BYTE PTR [rax],al
  409acc:	sub    BYTE PTR [rax-0x6fd80000],dl
  409ad2:	add    BYTE PTR [rax],al
  409ad4:	sub    BYTE PTR [rax-0x6fd80000],dl
  409ada:	add    BYTE PTR [rax],al
  409adc:	sub    BYTE PTR [rax-0x6fd80000],dl
  409ae2:	add    BYTE PTR [rax],al
  409ae4:	sub    BYTE PTR [rax-0x6fd80000],dl
  409aea:	add    BYTE PTR [rax],al
  409aec:	sub    BYTE PTR [rax-0x6fd80000],dl
  409af2:	add    BYTE PTR [rax],al
  409af4:	sub    BYTE PTR [rax-0x6fd80000],dl
  409afa:	add    BYTE PTR [rax],al
  409afc:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b02:	add    BYTE PTR [rax],al
  409b04:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b0a:	add    BYTE PTR [rax],al
  409b0c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b12:	add    BYTE PTR [rax],al
  409b14:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b1a:	add    BYTE PTR [rax],al
  409b1c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b22:	add    BYTE PTR [rax],al
  409b24:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b2a:	add    BYTE PTR [rax],al
  409b2c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b32:	add    BYTE PTR [rax],al
  409b34:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b3a:	add    BYTE PTR [rax],al
  409b3c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b42:	add    BYTE PTR [rax],al
  409b44:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b4a:	add    BYTE PTR [rax],al
  409b4c:	sub    BYTE PTR [rax+0x736d0000],dl
  409b52:	jbe    0x409bb7
  409b54:	jb     0x409bca
  409b56:	cs fs ins BYTE PTR es:[rdi],dx
  409b59:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax+0x29],dh
  40a02a:	add    BYTE PTR [rax],al
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rax+0x402b],ah
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax+0x2b],dh
  40a04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...
