
e97fde1aa1260261577d81203a2a0b1b666e7774b44f42be89c84065d93e89e6.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x22ba5]        # 0x423bc0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x22ba6]        # 0x423bd0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x22ba9]        # 0x423be0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x22b6c]        # 0x423bb0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x229ef]        # 0x423a40
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x22b41]        # 0x423ba0
  40105f:	mov    DWORD PTR [rip+0x25fa3],edx        # 0x427008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x40a998
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x4095f0
  401081:	mov    rdx,QWORD PTR [rip+0x22a48]        # 0x423ad0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x22a2e]        # 0x423ac0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x22a94]        # 0x423b30
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x229cb]        # 0x423a70
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x4091d0
  4010af:	mov    rax,QWORD PTR [rip+0x2293a]        # 0x4239f0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x40a998
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x83a9]        # 0x4094d0
  401127:	call   0x4094c0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x229f5]        # 0x423b60
  40116b:	lea    r8,[rip+0x25ea6]        # 0x427018
  401172:	lea    rdx,[rip+0x25ea7]        # 0x427020
  401179:	lea    rcx,[rip+0x25ea8]        # 0x427028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x25e78],eax        # 0x427000
  401188:	lea    rax,[rip+0x25e71]        # 0x427000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x22985]        # 0x423b20
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x40a9b0
  4011a3:	mov    DWORD PTR [rip+0x25e67],eax        # 0x427010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x229da]        # 0x423ba0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x228ab]        # 0x423aa0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x271ba]        # 0x4283bc
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x22887]        # 0x423ab0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x25dba],0x1        # 0x427004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x227cc]        # 0x423a30
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x4097e0
  40127d:	lea    rcx,[rip+0x8afc]        # 0x409d80
  401284:	call   QWORD PTR [rip+0x2712a]        # 0x4283b4
  40128a:	mov    rdx,QWORD PTR [rip+0x227ff]        # 0x423a90
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x409c90
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x40a9e0
  4012a5:	call   0x4095d0
  4012aa:	mov    rax,QWORD PTR [rip+0x2278f]        # 0x423a40
  4012b1:	mov    QWORD PTR [rip+0x26a10],rax        # 0x427cc8
  4012b8:	mov    rax,QWORD PTR [rip+0x227a1]        # 0x423a60
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x269a9],rax        # 0x427cc0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x9cca],eax        # 0x40b000
  401336:	mov    r12d,DWORD PTR [rip+0x25ceb]        # 0x427028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x40a880
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x25cc2]        # 0x427020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x40a820
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x40a880
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x40a870
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x25c6a],rbp        # 0x427020
  4013b6:	call   0x4091a0
  4013bb:	mov    rax,QWORD PTR [rip+0x2268e]        # 0x423a50
  4013c2:	mov    rdx,QWORD PTR [rip+0x25c4f]        # 0x427018
  4013c9:	mov    ecx,DWORD PTR [rip+0x25c59]        # 0x427028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x25c3c]        # 0x427018
  4013dc:	mov    rdx,QWORD PTR [rip+0x25c3d]        # 0x427020
  4013e3:	call   0x40aaf0
  4013e8:	mov    ecx,DWORD PTR [rip+0x25c1a]        # 0x427008
  4013ee:	mov    DWORD PTR [rip+0x25c18],eax        # 0x42700c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x25c02]        # 0x427004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x40a978
  40140b:	mov    eax,DWORD PTR [rip+0x25bfb]        # 0x42700c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x22679]        # 0x423ab0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x40a980
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x2268d]        # 0x423af0
  401463:	mov    rcx,QWORD PTR [rip+0x22676]        # 0x423ae0
  40146a:	call   0x40a968
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x26ecb]        # 0x428364
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x22669]        # 0x423b10
  4014a7:	mov    rcx,QWORD PTR [rip+0x22652]        # 0x423b00
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x40a968
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x40a930
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x226c5]        # 0x423ba0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x4091e0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x22695]        # 0x423ba0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x4091e0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rsi
  401531:	push   rbx
  401532:	mov    eax,0x1058
  401537:	call   0x40a550
  40153c:	sub    rsp,rax
  40153f:	lea    rbx,[rsp+0x50]
  401544:	mov    r9,rdx
  401547:	lea    rdx,[rip+0x12ab2]        # 0x414000
  40154e:	mov    rsi,r8
  401551:	mov    r8,rcx
  401554:	mov    rcx,rbx
  401557:	call   0x40a848
  40155c:	mov    rdx,rbx
  40155f:	mov    r9d,DWORD PTR [rdx]
  401562:	add    rdx,0x4
  401566:	lea    eax,[r9-0x1010101]
  40156d:	not    r9d
  401570:	and    eax,r9d
  401573:	and    eax,0x80808080
  401578:	je     0x40155f
  40157a:	mov    ecx,eax
  40157c:	mov    r10,QWORD PTR [rip+0x225ed]        # 0x423b70
  401583:	lea    r9,[rsi+0x1]
  401587:	shr    ecx,0x10
  40158a:	test   eax,0x8080
  40158f:	cmove  eax,ecx
  401592:	lea    rcx,[rdx+0x2]
  401596:	cmove  rdx,rcx
  40159a:	movzx  ecx,BYTE PTR [rsi]
  40159d:	add    al,al
  40159f:	sbb    rdx,0x3
  4015a3:	test   BYTE PTR [r10+rcx*2],0xac
  4015a8:	mov    rax,rcx
  4015ab:	jne    0x4015da
  4015ad:	nop    DWORD PTR [rax]
  4015b0:	xor    eax,eax
  4015b2:	add    rsp,0x1058
  4015b9:	pop    rbx
  4015ba:	pop    rsi
  4015bb:	ret    
  4015bc:	nop    DWORD PTR [rax+0x0]
  4015c0:	add    r9,0x1
  4015c4:	movzx  r8d,BYTE PTR [r9-0x1]
  4015c9:	add    rdx,0x1
  4015cd:	mov    BYTE PTR [rdx-0x1],al
  4015d0:	test   BYTE PTR [r10+r8*2],0xac
  4015d5:	mov    rax,r8
  4015d8:	je     0x4015b0
  4015da:	cmp    al,0x22
  4015dc:	jne    0x4015c0
  4015de:	mov    BYTE PTR [rdx],0x0
  4015e1:	lea    rdx,[rsp+0x20]
  4015e6:	mov    rcx,rbx
  4015e9:	call   0x40a590
  4015ee:	mov    edx,eax
  4015f0:	xor    eax,eax
  4015f2:	test   edx,edx
  4015f4:	jne    0x4015b2
  4015f6:	movzx  eax,WORD PTR [rsp+0x26]
  4015fb:	and    ax,0xf000
  4015ff:	cmp    ax,0x8000
  401603:	sete   al
  401606:	movzx  eax,al
  401609:	add    rsp,0x1058
  401610:	pop    rbx
  401611:	pop    rsi
  401612:	ret    
  401613:	nop    DWORD PTR [rax]
  401616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401620:	push   rbp
  401621:	push   rdi
  401622:	mov    eax,0x1068
  401627:	push   rsi
  401628:	push   rbx
  401629:	call   0x40a550
  40162e:	sub    rsp,rax
  401631:	mov    rax,QWORD PTR [rip+0x225b8]        # 0x423bf0
  401638:	movsxd r9,DWORD PTR [rip+0x259fd]        # 0x42703c
  40163f:	lea    rdx,[rip+0x129d2]        # 0x414018
  401646:	add    r9,QWORD PTR [rip+0x266fb]        # 0x427d48
  40164d:	lea    rbx,[rsp+0x60]
  401652:	mov    r8,QWORD PTR [rax]
  401655:	mov    rcx,rbx
  401658:	call   0x40a848
  40165d:	mov    r8d,0x1a4
  401663:	mov    edx,0x301
  401668:	mov    rcx,rbx
  40166b:	call   0x40a7e0
  401670:	test   eax,eax
  401672:	mov    esi,eax
  401674:	js     0x401702
  40167a:	mov    rax,QWORD PTR [rip+0x225ef]        # 0x423c70
  401681:	mov    eax,DWORD PTR [rax]
  401683:	test   eax,eax
  401685:	jne    0x4016e0
  401687:	lea    rdx,[rip+0x129b7]        # 0x414045
  40168e:	mov    ecx,esi
  401690:	call   0x408e60
  401695:	mov    rbx,rax
  401698:	mov    rax,QWORD PTR [rip+0x22581]        # 0x423c20
  40169f:	mov    r9,QWORD PTR [rip+0x266a2]        # 0x427d48
  4016a6:	cmp    QWORD PTR [rax],0x0
  4016aa:	je     0x401750
  4016b0:	mov    rax,QWORD PTR [rip+0x22559]        # 0x423c10
  4016b7:	mov    r8,QWORD PTR [rax]
  4016ba:	lea    rdx,[rip+0x2117f]        # 0x422840
  4016c1:	mov    rcx,rbx
  4016c4:	call   0x40a908
  4016c9:	mov    rax,rbx
  4016cc:	add    rsp,0x1068
  4016d3:	pop    rbx
  4016d4:	pop    rsi
  4016d5:	pop    rdi
  4016d6:	pop    rbp
  4016d7:	ret    
  4016d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4016e0:	mov    rbx,QWORD PTR [rip+0x26661]        # 0x427d48
  4016e7:	call   QWORD PTR [rip+0x26d27]        # 0x428414
  4016ed:	lea    rdx,[rip+0x12945]        # 0x414039
  4016f4:	lea    rcx,[rax+0x60]
  4016f8:	mov    r8,rbx
  4016fb:	call   0x40a908
  401700:	jmp    0x401687
  401702:	mov    rdi,QWORD PTR [rip+0x26d4b]        # 0x428454
  401709:	call   rdi
  40170b:	cmp    DWORD PTR [rax],0x2
  40170e:	je     0x401760
  401710:	call   rdi
  401712:	mov    ecx,DWORD PTR [rax]
  401714:	call   0x408fc0
  401719:	mov    rbp,rax
  40171c:	call   rdi
  40171e:	mov    esi,DWORD PTR [rax]
  401720:	call   QWORD PTR [rip+0x26cee]        # 0x428414
  401726:	lea    rdx,[rip+0x128f1]        # 0x41401e
  40172d:	lea    rcx,[rax+0x60]
  401731:	mov    QWORD PTR [rsp+0x20],rbx
  401736:	mov    r9,rbp
  401739:	mov    r8d,esi
  40173c:	call   0x40a908
  401741:	mov    ecx,0x1
  401746:	call   0x40a930
  40174b:	nop    DWORD PTR [rax+rax*1+0x0]
  401750:	lea    r8,[rip+0x128b0]        # 0x414007
  401757:	jmp    0x4016ba
  40175c:	nop    DWORD PTR [rax+0x0]
  401760:	lea    rcx,[rbx+0x1]
  401764:	mov    edx,0x2f
  401769:	lea    rbp,[rsp+0x30]
  40176e:	call   0x40a840
  401773:	test   rax,rax
  401776:	mov    rsi,rax
  401779:	jne    0x401799
  40177b:	jmp    0x4017b5
  40177d:	nop    DWORD PTR [rax]
  401780:	lea    rcx,[rsi+0x1]
  401784:	mov    BYTE PTR [rsi],0x2f
  401787:	mov    edx,0x2f
  40178c:	call   0x40a840
  401791:	test   rax,rax
  401794:	mov    rsi,rax
  401797:	je     0x4017b5
  401799:	mov    BYTE PTR [rsi],0x0
  40179c:	mov    rdx,rbp
  40179f:	mov    rcx,rbx
  4017a2:	call   0x40a590
  4017a7:	test   eax,eax
  4017a9:	jns    0x401780
  4017ab:	mov    rcx,rbx
  4017ae:	call   0x40a7d8
  4017b3:	jmp    0x401780
  4017b5:	mov    r8d,0x1a4
  4017bb:	mov    edx,0x301
  4017c0:	mov    rcx,rbx
  4017c3:	call   0x40a7e0
  4017c8:	test   eax,eax
  4017ca:	mov    esi,eax
  4017cc:	jns    0x40167a
  4017d2:	jmp    0x401710
  4017d7:	nop    WORD PTR [rax+rax*1+0x0]
  4017e0:	push   rdi
  4017e1:	push   rsi
  4017e2:	push   rbx
  4017e3:	sub    rsp,0x60
  4017e7:	lea    rdx,[rsp+0x30]
  4017ec:	mov    rbx,rcx
  4017ef:	call   0x40a590
  4017f4:	test   eax,eax
  4017f6:	je     0x401813
  4017f8:	mov    rax,QWORD PTR [rip+0x22471]        # 0x423c70
  4017ff:	mov    edx,DWORD PTR [rax]
  401801:	test   edx,edx
  401803:	jne    0x401890
  401809:	xor    eax,eax
  40180b:	add    rsp,0x60
  40180f:	pop    rbx
  401810:	pop    rsi
  401811:	pop    rdi
  401812:	ret    
  401813:	mov    eax,DWORD PTR [rsp+0x44]
  401817:	test   eax,eax
  401819:	je     0x401809
  40181b:	add    eax,0x1
  40181e:	xor    edx,edx
  401820:	mov    rcx,rbx
  401823:	cdqe   
  401825:	mov    QWORD PTR [rip+0x264c4],rax        # 0x427cf0
  40182c:	call   0x40a7e0
  401831:	mov    rdx,QWORD PTR [rip+0x257f8]        # 0x427030
  401838:	add    rdx,QWORD PTR [rip+0x264b1]        # 0x427cf0
  40183f:	mov    DWORD PTR [rip+0x264f3],eax        # 0x427d38
  401845:	sub    rdx,0x1
  401849:	test   eax,eax
  40184b:	mov    QWORD PTR [rip+0x257de],rdx        # 0x427030
  401852:	js     0x4018d0
  401854:	lea    rdx,[rip+0x12830]        # 0x41408b
  40185b:	mov    ecx,eax
  40185d:	call   0x408e60
  401862:	mov    rsi,rax
  401865:	mov    rcx,rax
  401868:	mov    DWORD PTR [rip+0x26476],0x0        # 0x427ce8
  401872:	call   0x4025f0
  401877:	mov    rcx,rsi
  40187a:	mov    rbx,rax
  40187d:	call   0x40a928
  401882:	mov    rax,rbx
  401885:	add    rsp,0x60
  401889:	pop    rbx
  40188a:	pop    rsi
  40188b:	pop    rdi
  40188c:	ret    
  40188d:	nop    DWORD PTR [rax]
  401890:	mov    rsi,QWORD PTR [rip+0x26bbd]        # 0x428454
  401897:	call   rsi
  401899:	mov    ecx,DWORD PTR [rax]
  40189b:	call   0x408fc0
  4018a0:	mov    rdi,rax
  4018a3:	call   rsi
  4018a5:	mov    esi,DWORD PTR [rax]
  4018a7:	call   QWORD PTR [rip+0x26b67]        # 0x428414
  4018ad:	lea    rdx,[rip+0x12793]        # 0x414047
  4018b4:	lea    rcx,[rax+0x60]
  4018b8:	mov    QWORD PTR [rsp+0x20],rbx
  4018bd:	mov    r9,rdi
  4018c0:	mov    r8d,esi
  4018c3:	call   0x40a908
  4018c8:	jmp    0x401809
  4018cd:	nop    DWORD PTR [rax]
  4018d0:	mov    rax,QWORD PTR [rip+0x22399]        # 0x423c70
  4018d7:	mov    eax,DWORD PTR [rax]
  4018d9:	test   eax,eax
  4018db:	je     0x401809
  4018e1:	mov    rsi,QWORD PTR [rip+0x26b6c]        # 0x428454
  4018e8:	call   rsi
  4018ea:	mov    ecx,DWORD PTR [rax]
  4018ec:	call   0x408fc0
  4018f1:	mov    rdi,rax
  4018f4:	call   rsi
  4018f6:	mov    esi,DWORD PTR [rax]
  4018f8:	call   QWORD PTR [rip+0x26b16]        # 0x428414
  4018fe:	lea    rdx,[rip+0x12763]        # 0x414068
  401905:	lea    rcx,[rax+0x60]
  401909:	mov    QWORD PTR [rsp+0x20],rbx
  40190e:	mov    r9,rdi
  401911:	mov    r8d,esi
  401914:	call   0x40a908
  401919:	xor    eax,eax
  40191b:	jmp    0x40180b
  401920:	push   r15
  401922:	push   r14
  401924:	push   r13
  401926:	push   r12
  401928:	push   rbp
  401929:	push   rdi
  40192a:	push   rsi
  40192b:	push   rbx
  40192c:	sub    rsp,0x38
  401930:	mov    edx,0x38
  401935:	mov    ecx,0x10d
  40193a:	call   0x408f20
  40193f:	lea    rdx,[rip+0x263ba]        # 0x427d00
  401946:	mov    rbp,rax
  401949:	mov    ecx,0x7
  40194e:	xor    eax,eax
  401950:	lea    r9,[rip+0x12736]        # 0x41408d
  401957:	mov    r8d,0x1
  40195d:	mov    rdi,rdx
  401960:	rep stos QWORD PTR es:[rdi],rax
  401963:	lea    rax,[rip+0x12732]        # 0x41409c
  40196a:	lea    rcx,[rip+0x20eaf]        # 0x422820
  401971:	mov    QWORD PTR [rsp+0x20],rax
  401976:	call   0x4026f0
  40197b:	mov    r12,QWORD PTR [rip+0x2229e]        # 0x423c20
  401982:	mov    rax,QWORD PTR [r12]
  401986:	test   rax,rax
  401989:	je     0x40199e
  40198b:	movzx  eax,BYTE PTR [rax]
  40198e:	cmp    al,0x2a
  401990:	je     0x401a8e
  401996:	test   al,al
  401998:	je     0x401a8e
  40199e:	lea    rdi,[rip+0x969b]        # 0x40b040
  4019a5:	mov    r14,QWORD PTR [rip+0x221e4]        # 0x423b90
  4019ac:	lea    r13,[rip+0xc8dd]        # 0x40e290
  4019b3:	jmp    0x4019cf
  4019b5:	mov    eax,DWORD PTR [rdi+0x1c]
  4019b8:	test   al,0x8
  4019ba:	je     0x4019d6
  4019bc:	or     ah,0x80
  4019bf:	mov    DWORD PTR [rdi+0x1c],eax
  4019c2:	add    rdi,0x38
  4019c6:	cmp    rdi,r13
  4019c9:	je     0x401a7d
  4019cf:	mov    eax,DWORD PTR [r14]
  4019d2:	test   eax,eax
  4019d4:	jne    0x4019b5
  4019d6:	cmp    QWORD PTR [r12],0x0
  4019db:	mov    rbx,QWORD PTR [rdi+0x20]
  4019df:	mov    r15d,DWORD PTR [rdi+0x18]
  4019e3:	je     0x401a14
  4019e5:	mov    rsi,QWORD PTR [rdi+0x10]
  4019e9:	test   rsi,rsi
  4019ec:	jne    0x401a00
  4019ee:	jmp    0x401a14
  4019f0:	mov    rdx,QWORD PTR [r12]
  4019f4:	xor    r8d,r8d
  4019f7:	call   0x408920
  4019fc:	test   eax,eax
  4019fe:	je     0x401a70
  401a00:	add    rsi,0x8
  401a04:	mov    rcx,QWORD PTR [rsi-0x8]
  401a08:	test   rcx,rcx
  401a0b:	jne    0x4019f0
  401a0d:	mov    eax,DWORD PTR [rdi+0x1c]
  401a10:	test   al,0x1
  401a12:	je     0x4019bc
  401a14:	test   r15d,r15d
  401a17:	jle    0x4019c2
  401a19:	lea    eax,[r15-0x1]
  401a1d:	lea    rax,[rax+rax*2+0x3]
  401a22:	lea    rsi,[rbx+rax*8]
  401a26:	jmp    0x401a39
  401a28:	nop    DWORD PTR [rax+rax*1+0x0]
  401a30:	add    rbx,0x18
  401a34:	cmp    rbx,rsi
  401a37:	je     0x4019c2
  401a39:	mov    eax,DWORD PTR [rbx]
  401a3b:	lea    ecx,[rax-0x1]
  401a3e:	cmp    ecx,0x1
  401a41:	ja     0x401a30
  401a43:	mov    QWORD PTR [rbx+0x10],rbp
  401a47:	mov    rax,QWORD PTR [rdi]
  401a4a:	lea    r15,[rbp+0x38]
  401a4e:	mov    rcx,QWORD PTR [rbx+0x8]
  401a52:	lea    r9,[rip+0x12650]        # 0x4140a9
  401a59:	mov    rdx,rbp
  401a5c:	xor    r8d,r8d
  401a5f:	mov    rbp,r15
  401a62:	mov    QWORD PTR [rsp+0x20],rax
  401a67:	call   0x4026f0
  401a6c:	jmp    0x401a30
  401a6e:	xchg   ax,ax
  401a70:	mov    eax,DWORD PTR [rdi+0x1c]
  401a73:	test   al,0x1
  401a75:	jne    0x4019bc
  401a7b:	jmp    0x401a14
  401a7d:	add    rsp,0x38
  401a81:	pop    rbx
  401a82:	pop    rsi
  401a83:	pop    rdi
  401a84:	pop    rbp
  401a85:	pop    r12
  401a87:	pop    r13
  401a89:	pop    r14
  401a8b:	pop    r15
  401a8d:	ret    
  401a8e:	mov    QWORD PTR [r12],0x0
  401a96:	jmp    0x40199e
  401a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  401aa0:	push   rbp
  401aa1:	push   rdi
  401aa2:	push   rsi
  401aa3:	push   rbx
  401aa4:	sub    rsp,0x38
  401aa8:	mov    esi,ecx
  401aaa:	mov    rcx,QWORD PTR [rdx]
  401aad:	mov    rbx,rdx
  401ab0:	call   0x408e80
  401ab5:	cmp    esi,0x1
  401ab8:	je     0x401b00
  401aba:	cmp    esi,0x2
  401abd:	jne    0x401b42
  401ac3:	mov    rsi,QWORD PTR [rbx+0x8]
  401ac7:	lea    rdi,[rip+0x125e7]        # 0x4140b5
  401ace:	mov    ecx,0x3
  401ad3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401ad5:	je     0x401d23
  401adb:	mov    rsi,QWORD PTR [rip+0x26932]        # 0x428414
  401ae2:	call   rsi
  401ae4:	mov    rcx,QWORD PTR [rbx+0x8]
  401ae8:	lea    rdx,[rip+0x1259c]        # 0x41408b
  401aef:	mov    r8,rax
  401af2:	call   0x408e70
  401af7:	test   rax,rax
  401afa:	je     0x401ce1
  401b00:	call   0x402a70
  401b05:	mov    rax,QWORD PTR [rip+0x22154]        # 0x423c60
  401b0c:	mov    rdx,QWORD PTR [rip+0x2205d]        # 0x423b70
  401b13:	mov    rcx,QWORD PTR [rax]
  401b16:	movzx  r8d,BYTE PTR [rcx]
  401b1a:	test   BYTE PTR [rdx+r8*2],0x4
  401b1f:	mov    rax,r8
  401b22:	jne    0x401b70
  401b24:	sub    eax,0x41
  401b27:	cmp    al,0x33
  401b29:	ja     0x401cc2
  401b2f:	lea    rdx,[rip+0x1260a]        # 0x414140
  401b36:	movzx  eax,al
  401b39:	movsxd rax,DWORD PTR [rdx+rax*4]
  401b3d:	add    rdx,rax
  401b40:	jmp    rdx
  401b42:	call   QWORD PTR [rip+0x268cc]        # 0x428414
  401b48:	lea    rcx,[rip+0x12591]        # 0x4140e0
  401b4f:	lea    r9,[rax+0x60]
  401b53:	mov    r8d,0x30
  401b59:	mov    edx,0x1
  401b5e:	call   0x40a8e0
  401b63:	mov    ecx,0x1
  401b68:	call   0x40a930
  401b6d:	nop    DWORD PTR [rax]
  401b70:	call   0x40a940
  401b75:	mov    rdx,QWORD PTR [rip+0x220f4]        # 0x423c70
  401b7c:	cmp    eax,0x4
  401b7f:	mov    DWORD PTR [rdx],eax
  401b81:	jbe    0x401baa
  401b83:	mov    DWORD PTR [rdx],0x5
  401b89:	call   QWORD PTR [rip+0x26885]        # 0x428414
  401b8f:	lea    rcx,[rip+0x12582]        # 0x414118
  401b96:	lea    r9,[rax+0x60]
  401b9a:	mov    r8d,0x1e
  401ba0:	mov    edx,0x1
  401ba5:	call   0x40a8e0
  401baa:	mov    r8,QWORD PTR [rip+0x2204f]        # 0x423c00
  401bb1:	mov    rcx,QWORD PTR [r8]
  401bb4:	cmp    BYTE PTR [rcx],0x2e
  401bb7:	jne    0x401bec
  401bb9:	movzx  edx,BYTE PTR [rcx+0x1]
  401bbd:	cmp    dl,0x2f
  401bc0:	jne    0x401cd4
  401bc6:	lea    rax,[rcx+0x2]
  401bca:	jmp    0x401be1
  401bcc:	nop    DWORD PTR [rax+0x0]
  401bd0:	lea    rax,[rax+0x2]
  401bd4:	movzx  edx,BYTE PTR [rax-0x1]
  401bd8:	cmp    dl,0x2f
  401bdb:	jne    0x401cd4
  401be1:	mov    QWORD PTR [r8],rax
  401be4:	cmp    BYTE PTR [rax],0x2e
  401be7:	mov    rcx,rax
  401bea:	je     0x401bd0
  401bec:	call   0x40a820
  401bf1:	mov    DWORD PTR [rip+0x25445],eax        # 0x42703c
  401bf7:	call   0x401920
  401bfc:	lea    rdx,[rip+0x12534]        # 0x414137
  401c03:	xor    ecx,ecx
  401c05:	call   0x40a7e8
  401c0a:	mov    edx,0x1
  401c0f:	mov    ecx,0xf
  401c14:	mov    QWORD PTR [rip+0x260c5],rax        # 0x427ce0
  401c1b:	call   0x40a850
  401c20:	mov    edx,0x1
  401c25:	mov    ecx,0xf
  401c2a:	call   0x40a850
  401c2f:	mov    edx,0x1
  401c34:	mov    ecx,0xf
  401c39:	call   0x40a850
  401c3e:	mov    edx,0x1
  401c43:	mov    ecx,0xf
  401c48:	call   0x40a850
  401c4d:	mov    edx,0x1
  401c52:	mov    ecx,0xf
  401c57:	add    rsp,0x38
  401c5b:	pop    rbx
  401c5c:	pop    rsi
  401c5d:	pop    rdi
  401c5e:	pop    rbp
  401c5f:	jmp    0x40a850
  401c64:	mov    rax,QWORD PTR [rip+0x22005]        # 0x423c70
  401c6b:	mov    DWORD PTR [rax],0x4
  401c71:	jmp    0x401baa
  401c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c80:	mov    rax,QWORD PTR [rip+0x21fe9]        # 0x423c70
  401c87:	mov    DWORD PTR [rax],0x0
  401c8d:	jmp    0x401baa
  401c92:	mov    rax,QWORD PTR [rip+0x21fd7]        # 0x423c70
  401c99:	mov    DWORD PTR [rax],0x1
  401c9f:	jmp    0x401baa
  401ca4:	mov    rdx,QWORD PTR [rip+0x21fc5]        # 0x423c70
  401cab:	jmp    0x401b83
  401cb0:	mov    rax,QWORD PTR [rip+0x21fb9]        # 0x423c70
  401cb7:	mov    DWORD PTR [rax],0x2
  401cbd:	jmp    0x401baa
  401cc2:	mov    rax,QWORD PTR [rip+0x21fa7]        # 0x423c70
  401cc9:	mov    DWORD PTR [rax],0x3
  401ccf:	jmp    0x401baa
  401cd4:	test   dl,dl
  401cd6:	jne    0x401bec
  401cdc:	jmp    0x401bf7
  401ce1:	mov    rbp,QWORD PTR [rbx+0x8]
  401ce5:	mov    rbx,QWORD PTR [rip+0x26768]        # 0x428454
  401cec:	call   rbx
  401cee:	mov    ecx,DWORD PTR [rax]
  401cf0:	call   0x408fc0
  401cf5:	mov    rdi,rax
  401cf8:	call   rbx
  401cfa:	mov    ebx,DWORD PTR [rax]
  401cfc:	call   rsi
  401cfe:	lea    rdx,[rip+0x123b3]        # 0x4140b8
  401d05:	lea    rcx,[rax+0x60]
  401d09:	mov    QWORD PTR [rsp+0x20],rbp
  401d0e:	mov    r9,rdi
  401d11:	mov    r8d,ebx
  401d14:	call   0x40a908
  401d19:	mov    ecx,0x1
  401d1e:	call   0x40a930
  401d23:	call   0x40aab0
  401d28:	nop
  401d29:	nop    DWORD PTR [rax+0x0]
  401d30:	push   r15
  401d32:	push   r14
  401d34:	push   r13
  401d36:	push   r12
  401d38:	push   rbp
  401d39:	push   rdi
  401d3a:	push   rsi
  401d3b:	push   rbx
  401d3c:	sub    rsp,0xa8
  401d43:	mov    rax,QWORD PTR [rip+0x25ffe]        # 0x427d48
  401d4a:	mov    edx,0x4
  401d4f:	mov    QWORD PTR [rsp+0x58],rax
  401d54:	mov    rcx,rax
  401d57:	call   QWORD PTR [rip+0x266d7]        # 0x428434
  401d5d:	test   eax,eax
  401d5f:	jne    0x402365
  401d65:	mov    rcx,QWORD PTR [rip+0x25fdc]        # 0x427d48
  401d6c:	call   0x4017e0
  401d71:	test   rax,rax
  401d74:	mov    QWORD PTR [rip+0x25fc5],rax        # 0x427d40
  401d7b:	je     0x40213a
  401d81:	mov    rax,QWORD PTR [rip+0x21ee8]        # 0x423c70
  401d88:	cmp    DWORD PTR [rax],0x2
  401d8b:	ja     0x4022bd
  401d91:	lea    rax,[rip+0x92a8]        # 0x40b040
  401d98:	mov    QWORD PTR [rsp+0x48],rax
  401d9d:	lea    rax,[rip+0x25fa4]        # 0x427d48
  401da4:	mov    QWORD PTR [rsp+0x50],rax
  401da9:	lea    rax,[rsp+0x70]
  401dae:	mov    QWORD PTR [rsp+0x68],rax
  401db3:	mov    rax,QWORD PTR [rsp+0x50]
  401db8:	mov    rsi,QWORD PTR [rax]
  401dbb:	mov    rax,QWORD PTR [rsp+0x48]
  401dc0:	test   DWORD PTR [rax+0x1c],0x8002
  401dc7:	mov    rbx,QWORD PTR [rax+0x8]
  401dcb:	jne    0x402048
  401dd1:	test   rbx,rbx
  401dd4:	je     0x401e19
  401dd6:	cmp    BYTE PTR [rsi],0x2e
  401dd9:	je     0x401de9
  401ddb:	jmp    0x401e07
  401ddd:	nop    DWORD PTR [rax]
  401de0:	add    rsi,0x2
  401de4:	cmp    BYTE PTR [rsi],0x2e
  401de7:	jne    0x401e07
  401de9:	cmp    BYTE PTR [rsi+0x1],0x2f
  401ded:	je     0x401de0
  401def:	jmp    0x401e07
  401df1:	mov    rcx,rbx
  401df4:	call   0x40a820
  401df9:	lea    rbx,[rbx+rax*1+0x1]
  401dfe:	cmp    BYTE PTR [rbx],0x0
  401e01:	je     0x402048
  401e07:	xor    r8d,r8d
  401e0a:	mov    rdx,rsi
  401e0d:	mov    rcx,rbx
  401e10:	call   0x408920
  401e15:	test   eax,eax
  401e17:	jne    0x401df1
  401e19:	mov    rax,QWORD PTR [rsp+0x48]
  401e1e:	mov    rbx,QWORD PTR [rax+0x20]
  401e22:	mov    eax,DWORD PTR [rax+0x18]
  401e25:	test   eax,eax
  401e27:	jle    0x401e7d
  401e29:	sub    eax,0x1
  401e2c:	lea    rax,[rax+rax*2+0x3]
  401e31:	lea    rsi,[rbx+rax*8]
  401e35:	mov    eax,DWORD PTR [rbx]
  401e37:	cmp    eax,0x1
  401e3a:	je     0x40214e
  401e40:	jb     0x402048
  401e46:	cmp    eax,0x2
  401e49:	je     0x402179
  401e4f:	cmp    eax,0x3
  401e52:	jne    0x401e74
  401e54:	mov    rax,QWORD PTR [rsp+0x50]
  401e59:	mov    rcx,QWORD PTR [rbx+0x8]
  401e5d:	mov    r8,QWORD PTR [rip+0x25edc]        # 0x427d40
  401e64:	mov    rdx,QWORD PTR [rax]
  401e67:	call   0x4029e0
  401e6c:	test   eax,eax
  401e6e:	jne    0x402048
  401e74:	add    rbx,0x18
  401e78:	cmp    rbx,rsi
  401e7b:	jne    0x401e35
  401e7d:	mov    rax,QWORD PTR [rip+0x21dec]        # 0x423c70
  401e84:	cmp    DWORD PTR [rax],0x1
  401e87:	jbe    0x401eb5
  401e89:	mov    rax,QWORD PTR [rsp+0x50]
  401e8e:	mov    rsi,QWORD PTR [rax]
  401e91:	mov    rax,QWORD PTR [rsp+0x48]
  401e96:	mov    rbx,QWORD PTR [rax]
  401e99:	call   QWORD PTR [rip+0x26575]        # 0x428414
  401e9f:	lea    rdx,[rip+0x123aa]        # 0x414250
  401ea6:	lea    rcx,[rax+0x60]
  401eaa:	mov    r9,rsi
  401ead:	mov    r8,rbx
  401eb0:	call   0x40a908
  401eb5:	mov    rax,QWORD PTR [rsp+0x48]
  401eba:	mov    eax,DWORD PTR [rax+0x1c]
  401ebd:	test   al,0x8
  401ebf:	jne    0x40233a
  401ec5:	mov    rdi,QWORD PTR [rip+0x25e14]        # 0x427ce0
  401ecc:	test   al,0x4
  401ece:	mov    QWORD PTR [rsp+0x60],rdi
  401ed3:	mov    rdi,QWORD PTR [rsp+0x50]
  401ed8:	mov    rsi,QWORD PTR [rdi]
  401edb:	jne    0x4021b5
  401ee1:	mov    rax,QWORD PTR [rsp+0x48]
  401ee6:	mov    rcx,QWORD PTR [rsp+0x60]
  401eeb:	mov    rdi,QWORD PTR [rax+0x28]
  401eef:	call   0x40a820
  401ef4:	mov    rcx,QWORD PTR [rsp+0x58]
  401ef9:	mov    rbx,rax
  401efc:	lea    rsi,[rdi+0x8]
  401f00:	call   0x40a820
  401f05:	mov    rcx,QWORD PTR [rdi]
  401f08:	lea    rbx,[rbx+rax*1+0x23]
  401f0d:	mov    rdi,rbx
  401f10:	test   rcx,rcx
  401f13:	je     0x4022b5
  401f19:	nop    DWORD PTR [rax+0x0]
  401f20:	add    rsi,0x8
  401f24:	call   0x40a820
  401f29:	mov    rcx,QWORD PTR [rsi-0x8]
  401f2d:	lea    rdi,[rdi+rax*1+0x18]
  401f32:	test   rcx,rcx
  401f35:	jne    0x401f20
  401f37:	mov    r12,rdi
  401f3a:	sub    r12,rbx
  401f3d:	mov    rcx,rdi
  401f40:	call   0x408ef0
  401f45:	mov    r15,rax
  401f48:	mov    rax,QWORD PTR [rsp+0x48]
  401f4d:	mov    rax,QWORD PTR [rax+0x28]
  401f51:	lea    rcx,[rax+0x8]
  401f55:	mov    rax,QWORD PTR [rax]
  401f58:	mov    QWORD PTR [rsp+0x40],rcx
  401f5d:	movzx  edx,BYTE PTR [rax]
  401f60:	lea    rcx,[rax+0x1]
  401f64:	mov    rax,r15
  401f67:	test   dl,dl
  401f69:	je     0x401f83
  401f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  401f70:	add    rax,0x1
  401f74:	add    rcx,0x1
  401f78:	mov    BYTE PTR [rax-0x1],dl
  401f7b:	movzx  edx,BYTE PTR [rcx-0x1]
  401f7f:	test   dl,dl
  401f81:	jne    0x401f70
  401f83:	add    QWORD PTR [rsp+0x40],0x8
  401f89:	mov    rdx,QWORD PTR [rsp+0x40]
  401f8e:	mov    r13,QWORD PTR [rdx-0x8]
  401f92:	test   r13,r13
  401f95:	je     0x402001
  401f97:	lea    rbp,[rax+0x1]
  401f9b:	mov    r8,r15
  401f9e:	mov    BYTE PTR [rax],0x20
  401fa1:	mov    rdx,r13
  401fa4:	sub    r8,rbp
  401fa7:	mov    rcx,rbp
  401faa:	add    r8,r12
  401fad:	call   0x402830
  401fb2:	test   rax,rax
  401fb5:	jne    0x4021a4
  401fbb:	mov    rbx,rdi
  401fbe:	xchg   ax,ax
  401fc0:	add    rbx,0x64
  401fc4:	mov    r14,rbp
  401fc7:	mov    rcx,r15
  401fca:	lea    rsi,[r12+rbx*1]
  401fce:	sub    r14,r15
  401fd1:	mov    rdx,rbx
  401fd4:	call   0x408f70
  401fd9:	sub    rsi,rdi
  401fdc:	lea    rbp,[rax+r14*1]
  401fe0:	mov    rdx,r13
  401fe3:	mov    r8,rsi
  401fe6:	mov    r15,rax
  401fe9:	sub    r8,r14
  401fec:	mov    rcx,rbp
  401fef:	call   0x402830
  401ff4:	test   rax,rax
  401ff7:	je     0x401fc0
  401ff9:	mov    r12,rsi
  401ffc:	mov    rdi,rbx
  401fff:	jmp    0x401f83
  402001:	mov    rdi,QWORD PTR [rsp+0x60]
  402006:	mov    r8,QWORD PTR [rsp+0x58]
  40200b:	lea    rdx,[rip+0x1230e]        # 0x414320
  402012:	mov    rcx,rax
  402015:	mov    QWORD PTR [rsp+0x30],rdi
  40201a:	mov    QWORD PTR [rsp+0x28],rdi
  40201f:	mov    r9,rdi
  402022:	mov    QWORD PTR [rsp+0x20],rdi
  402027:	call   0x40a848
  40202c:	mov    rcx,r15
  40202f:	call   0x40a808
  402034:	mov    rcx,r15
  402037:	call   0x40a8f0
  40203c:	mov    rax,QWORD PTR [rip+0x25c9d]        # 0x427ce0
  402043:	mov    QWORD PTR [rsp+0x58],rax
  402048:	add    QWORD PTR [rsp+0x48],0x38
  40204e:	lea    rax,[rip+0xc23b]        # 0x40e290
  402055:	mov    rdi,QWORD PTR [rsp+0x48]
  40205a:	cmp    rdi,rax
  40205d:	jne    0x401db3
  402063:	mov    rcx,QWORD PTR [rip+0x25c76]        # 0x427ce0
  40206a:	xor    edx,edx
  40206c:	call   0x40a7e0
  402071:	test   eax,eax
  402073:	mov    edi,eax
  402075:	js     0x4023b7
  40207b:	lea    rdx,[rip+0x12009]        # 0x41408b
  402082:	mov    ecx,eax
  402084:	xor    esi,esi
  402086:	call   0x408e60
  40208b:	mov    r12,QWORD PTR [rip+0x25cae]        # 0x427d40
  402092:	mov    rbp,rax
  402095:	mov    rcx,rbp
  402098:	call   0x40a8d8
  40209d:	cmp    eax,0xffffffff
  4020a0:	je     0x4020c5
  4020a2:	test   rsi,rsi
  4020a5:	movzx  ebx,al
  4020a8:	je     0x402402
  4020ae:	mov    rdx,rsi
  4020b1:	mov    ecx,ebx
  4020b3:	call   0x40a860
  4020b8:	mov    rcx,rbp
  4020bb:	call   0x40a8d8
  4020c0:	cmp    eax,0xffffffff
  4020c3:	jne    0x4020a2
  4020c5:	test   rsi,rsi
  4020c8:	je     0x40210b
  4020ca:	mov    rcx,rsi
  4020cd:	lea    r15,[rip+0x25c2c]        # 0x427d00
  4020d4:	call   0x40a928
  4020d9:	lea    rax,[rsp+0x70]
  4020de:	mov    rdx,QWORD PTR [rip+0x25c5b]        # 0x427d40
  4020e5:	mov    DWORD PTR [rsp+0x20],0x0
  4020ed:	mov    r8d,0x1
  4020f3:	mov    rcx,r15
  4020f6:	mov    r9,rax
  4020f9:	mov    QWORD PTR [rsp+0x40],rax
  4020fe:	call   0x408620
  402103:	test   eax,eax
  402105:	je     0x40248d
  40210b:	mov    rcx,rbp
  40210e:	call   0x40a928
  402113:	mov    ecx,edi
  402115:	call   0x40a7b0
  40211a:	mov    ecx,edi
  40211c:	call   0x40a7b0
  402121:	mov    rcx,QWORD PTR [rip+0x25bb8]        # 0x427ce0
  402128:	call   0x40a7f0
  40212d:	mov    rcx,QWORD PTR [rip+0x25c0c]        # 0x427d40
  402134:	call   0x40a8f0
  402139:	nop
  40213a:	add    rsp,0xa8
  402141:	pop    rbx
  402142:	pop    rsi
  402143:	pop    rdi
  402144:	pop    rbp
  402145:	pop    r12
  402147:	pop    r13
  402149:	pop    r14
  40214b:	pop    r15
  40214d:	ret    
  40214e:	mov    rcx,QWORD PTR [rbx+0x10]
  402152:	mov    rdx,QWORD PTR [rip+0x25be7]        # 0x427d40
  402159:	xor    r9d,r9d
  40215c:	xor    r8d,r8d
  40215f:	mov    DWORD PTR [rsp+0x20],0x0
  402167:	call   0x408620
  40216c:	test   eax,eax
  40216e:	jne    0x402048
  402174:	jmp    0x401e74
  402179:	mov    rcx,QWORD PTR [rbx+0x10]
  40217d:	mov    rdx,QWORD PTR [rip+0x25bbc]        # 0x427d40
  402184:	xor    r9d,r9d
  402187:	xor    r8d,r8d
  40218a:	mov    DWORD PTR [rsp+0x20],0x0
  402192:	call   0x408620
  402197:	test   eax,eax
  402199:	jne    0x401e74
  40219f:	jmp    0x402048
  4021a4:	mov    rsi,r12
  4021a7:	mov    rbx,rdi
  4021aa:	mov    r12,rsi
  4021ad:	mov    rdi,rbx
  4021b0:	jmp    0x401f83
  4021b5:	mov    rax,QWORD PTR [rip+0x21a84]        # 0x423c40
  4021bc:	mov    rcx,QWORD PTR [rax]
  4021bf:	call   0x40a820
  4021c4:	mov    rcx,rsi
  4021c7:	mov    rbp,rax
  4021ca:	call   0x40a820
  4021cf:	mov    rcx,QWORD PTR [rsp+0x58]
  4021d4:	mov    rdi,rax
  4021d7:	call   0x40a820
  4021dc:	mov    rcx,QWORD PTR [rsp+0x60]
  4021e1:	mov    rbx,rax
  4021e4:	call   0x40a820
  4021e9:	lea    rcx,[rbp+rdi*1+0x3d]
  4021ee:	add    rcx,rbx
  4021f1:	add    rcx,rax
  4021f4:	call   0x408ef0
  4021f9:	mov    r15,rax
  4021fc:	mov    rax,QWORD PTR [rip+0x21a3d]        # 0x423c40
  402203:	mov    rcx,r15
  402206:	mov    rbx,QWORD PTR [rax]
  402209:	mov    rdx,rbx
  40220c:	call   0x40a830
  402211:	mov    rcx,rbx
  402214:	call   0x40a820
  402219:	lea    rbx,[r15+rax*1]
  40221d:	movabs rax,0x697869662f2e2e2f
  402227:	mov    rdx,QWORD PTR [rsp+0x68]
  40222c:	mov    rcx,r15
  40222f:	mov    QWORD PTR [rbx],rax
  402232:	movabs rax,0x2f736564756c636e
  40223c:	mov    DWORD PTR [rbx+0x18],0x6578652e
  402243:	mov    QWORD PTR [rbx+0x8],rax
  402247:	movabs rax,0x786966796c707061
  402251:	mov    BYTE PTR [rbx+0x1c],0x0
  402255:	mov    QWORD PTR [rbx+0x10],rax
  402259:	call   0x40a590
  40225e:	cmp    eax,0xffffffff
  402261:	je     0x4022fa
  402267:	mov    rcx,rbx
  40226a:	lea    rdi,[rip+0x8dcf]        # 0x40b040
  402271:	call   0x40a820
  402276:	mov    r8,QWORD PTR [rsp+0x48]
  40227b:	lea    rcx,[rbx+rax*1]
  40227f:	mov    rax,QWORD PTR [rsp+0x60]
  402284:	lea    rdx,[rip+0x11fdb]        # 0x414266
  40228b:	mov    r9,rsi
  40228e:	sub    r8,rdi
  402291:	mov    QWORD PTR [rsp+0x28],rax
  402296:	mov    rax,QWORD PTR [rsp+0x58]
  40229b:	sar    r8,0x3
  40229f:	imul   r8d,r8d,0xb6db6db7
  4022a6:	mov    QWORD PTR [rsp+0x20],rax
  4022ab:	call   0x40a848
  4022b0:	jmp    0x40202c
  4022b5:	xor    r12d,r12d
  4022b8:	jmp    0x401f3d
  4022bd:	mov    eax,DWORD PTR [rip+0x24d75]        # 0x427038
  4022c3:	test   eax,eax
  4022c5:	je     0x401d91
  4022cb:	mov    rsi,QWORD PTR [rip+0x25a76]        # 0x427d48
  4022d2:	mov    rbx,QWORD PTR [rip+0x25a17]        # 0x427cf0
  4022d9:	call   QWORD PTR [rip+0x26135]        # 0x428414
  4022df:	lea    rdx,[rip+0x11f5b]        # 0x414241
  4022e6:	lea    rcx,[rax+0x60]
  4022ea:	mov    r9,rsi
  4022ed:	mov    r8d,ebx
  4022f0:	call   0x40a908
  4022f5:	jmp    0x401d91
  4022fa:	movabs rax,0x697869662f2e2e2f
  402304:	mov    DWORD PTR [rbx],0x2e2e2f
  40230a:	mov    DWORD PTR [rbx+0x1b],0x6578652e
  402311:	mov    QWORD PTR [rbx+0x3],rax
  402315:	movabs rax,0x2f736564756c636e
  40231f:	mov    BYTE PTR [rbx+0x1f],0x0
  402323:	mov    QWORD PTR [rbx+0xb],rax
  402327:	movabs rax,0x786966796c707061
  402331:	mov    QWORD PTR [rbx+0x13],rax
  402335:	jmp    0x402267
  40233a:	mov    rax,QWORD PTR [rsp+0x48]
  40233f:	mov    rax,QWORD PTR [rax+0x28]
  402343:	mov    rbx,QWORD PTR [rax]
  402346:	test   rbx,rbx
  402349:	je     0x402354
  40234b:	cmp    BYTE PTR [rbx],0x0
  40234e:	jne    0x402445
  402354:	mov    rcx,QWORD PTR [rip+0x259e5]        # 0x427d40
  40235b:	call   0x40a8f0
  402360:	jmp    0x40213a
  402365:	call   QWORD PTR [rip+0x260e9]        # 0x428454
  40236b:	mov    ebx,DWORD PTR [rax]
  40236d:	mov    ecx,ebx
  40236f:	call   0x408fc0
  402374:	xor    ecx,ecx
  402376:	mov    edx,0x1000
  40237b:	mov    rbp,rax
  40237e:	call   0x40a7c8
  402383:	mov    rsi,QWORD PTR [rip+0x259be]        # 0x427d48
  40238a:	mov    rdi,rax
  40238d:	call   QWORD PTR [rip+0x26081]        # 0x428414
  402393:	lea    rdx,[rip+0x11e7e]        # 0x414218
  40239a:	lea    rcx,[rax+0x60]
  40239e:	mov    QWORD PTR [rsp+0x28],rbp
  4023a3:	mov    DWORD PTR [rsp+0x20],ebx
  4023a7:	mov    r9,rdi
  4023aa:	mov    r8,rsi
  4023ad:	call   0x40a908
  4023b2:	jmp    0x40213a
  4023b7:	mov    rbx,QWORD PTR [rip+0x26096]        # 0x428454
  4023be:	call   rbx
  4023c0:	cmp    DWORD PTR [rax],0x2
  4023c3:	je     0x402354
  4023c5:	mov    rdi,QWORD PTR [rip+0x25914]        # 0x427ce0
  4023cc:	call   rbx
  4023ce:	mov    ecx,DWORD PTR [rax]
  4023d0:	call   0x408fc0
  4023d5:	mov    rsi,rax
  4023d8:	call   rbx
  4023da:	mov    ebx,DWORD PTR [rax]
  4023dc:	call   QWORD PTR [rip+0x26032]        # 0x428414
  4023e2:	lea    rdx,[rip+0x11e97]        # 0x414280
  4023e9:	lea    rcx,[rax+0x60]
  4023ed:	mov    QWORD PTR [rsp+0x20],rdi
  4023f2:	mov    r9,rsi
  4023f5:	mov    r8d,ebx
  4023f8:	call   0x40a908
  4023fd:	jmp    0x402354
  402402:	movzx  eax,BYTE PTR [r12]
  402407:	cmp    ebx,eax
  402409:	je     0x40243c
  40240b:	call   0x401620
  402410:	mov    rcx,QWORD PTR [rip+0x25929]        # 0x427d40
  402417:	mov    rsi,rax
  40241a:	cmp    r12,rcx
  40241d:	je     0x4020ae
  402423:	mov    rdx,r12
  402426:	mov    r9,rax
  402429:	mov    r8d,0x1
  40242f:	sub    rdx,rcx
  402432:	call   0x40a8e0
  402437:	jmp    0x4020ae
  40243c:	add    r12,0x1
  402440:	jmp    0x402095
  402445:	call   0x401620
  40244a:	mov    rcx,rbx
  40244d:	mov    rsi,rax
  402450:	call   0x40a820
  402455:	mov    r9,rsi
  402458:	mov    rdi,rax
  40245b:	mov    r8d,0x1
  402461:	mov    rdx,rax
  402464:	mov    rcx,rbx
  402467:	call   0x40a8e0
  40246c:	cmp    BYTE PTR [rbx+rdi*1-0x1],0xa
  402471:	je     0x402480
  402473:	mov    rdx,rsi
  402476:	mov    ecx,0xa
  40247b:	call   0x40a900
  402480:	mov    rcx,rsi
  402483:	call   0x40a928
  402488:	jmp    0x402354
  40248d:	mov    rbx,QWORD PTR [rip+0x258b4]        # 0x427d48
  402494:	mov    edx,0x2f
  402499:	mov    r14,QWORD PTR [rip+0x258a0]        # 0x427d40
  4024a0:	mov    rcx,rbx
  4024a3:	call   0x40a810
  4024a8:	mov    rsi,rax
  4024ab:	mov    rax,QWORD PTR [rip+0x217be]        # 0x423c70
  4024b2:	cmp    DWORD PTR [rax],0x1
  4024b5:	jbe    0x4024d0
  4024b7:	call   QWORD PTR [rip+0x25f57]        # 0x428414
  4024bd:	lea    rdx,[rip+0x11de8]        # 0x4142ac
  4024c4:	lea    rcx,[rax+0x60]
  4024c8:	mov    r8,rbx
  4024cb:	call   0x40a908
  4024d0:	test   rsi,rsi
  4024d3:	je     0x4025da
  4024d9:	mov    BYTE PTR [rsi],0x0
  4024dc:	mov    r13,QWORD PTR [rip+0x25f31]        # 0x428414
  4024e3:	movsxd rax,DWORD PTR [rsp+0x70]
  4024e8:	add    r14,rax
  4024eb:	cmp    BYTE PTR [r14],0x22
  4024ef:	je     0x4024fb
  4024f1:	add    r14,0x1
  4024f5:	cmp    BYTE PTR [r14],0x22
  4024f9:	jne    0x4024f1
  4024fb:	mov    rax,QWORD PTR [rip+0x2174e]        # 0x423c50
  402502:	mov    r8,r14
  402505:	mov    rdx,rbx
  402508:	mov    rcx,QWORD PTR [rax]
  40250b:	call   0x401530
  402510:	test   eax,eax
  402512:	jne    0x402540
  402514:	mov    r9,QWORD PTR [rsp+0x40]
  402519:	mov    DWORD PTR [rsp+0x20],0x0
  402521:	mov    r8d,0x1
  402527:	mov    rdx,r14
  40252a:	mov    rcx,r15
  40252d:	call   0x408620
  402532:	test   eax,eax
  402534:	je     0x4024e3
  402536:	jmp    0x40210b
  40253b:	nop    DWORD PTR [rax+rax*1+0x0]
  402540:	mov    rax,QWORD PTR [rip+0x21709]        # 0x423c50
  402547:	lea    rcx,[rip+0x11d75]        # 0x4142c3
  40254e:	mov    r8,rbx
  402551:	mov    rsi,r14
  402554:	mov    rdx,QWORD PTR [rax]
  402557:	call   0x40a868
  40255c:	cmp    BYTE PTR [r14],0x22
  402560:	je     0x4025d1
  402562:	mov    r12,r13
  402565:	add    rsi,0x1
  402569:	call   r13
  40256c:	movsx  ecx,BYTE PTR [rsi-0x1]
  402570:	lea    rdx,[rax+0x30]
  402574:	call   0x40a860
  402579:	cmp    BYTE PTR [rsi],0x22
  40257c:	jne    0x402565
  40257e:	mov    rax,QWORD PTR [rip+0x2166b]        # 0x423bf0
  402585:	lea    rcx,[rip+0x11d3f]        # 0x4142cb
  40258c:	mov    r8,rbx
  40258f:	mov    rdx,QWORD PTR [rax]
  402592:	call   0x40a868
  402597:	cmp    BYTE PTR [r14],0x22
  40259b:	je     0x4025b8
  40259d:	add    r14,0x1
  4025a1:	call   r12
  4025a4:	movsx  ecx,BYTE PTR [r14-0x1]
  4025a9:	lea    rdx,[rax+0x30]
  4025ad:	call   0x40a860
  4025b2:	cmp    BYTE PTR [r14],0x22
  4025b6:	jne    0x40259d
  4025b8:	call   r12
  4025bb:	lea    rdx,[rax+0x30]
  4025bf:	mov    ecx,0xa
  4025c4:	mov    r14,rsi
  4025c7:	call   0x40a860
  4025cc:	jmp    0x402514
  4025d1:	mov    r12,QWORD PTR [rip+0x25e3c]        # 0x428414
  4025d8:	jmp    0x40257e
  4025da:	lea    rbx,[rip+0x11c2f]        # 0x414210
  4025e1:	jmp    0x4024dc
  4025e6:	nop
  4025e7:	nop
  4025e8:	nop
  4025e9:	nop
  4025ea:	nop
  4025eb:	nop
  4025ec:	nop
  4025ed:	nop
  4025ee:	nop
  4025ef:	nop
  4025f0:	push   r12
  4025f2:	push   rbp
  4025f3:	push   rdi
  4025f4:	push   rsi
  4025f5:	push   rbx
  4025f6:	sub    rsp,0x30
  4025fa:	test   rcx,rcx
  4025fd:	je     0x4026e8
  402603:	mov    rbp,rcx
  402606:	xor    edi,edi
  402608:	mov    ebx,0xffffffff
  40260d:	xor    r12d,r12d
  402610:	jmp    0x402654
  402612:	lea    rcx,[r12+rdi*1]
  402616:	mov    r9,rbp
  402619:	mov    edx,0x1
  40261e:	call   0x40a8f8
  402623:	test   rax,rax
  402626:	mov    rsi,rax
  402629:	jne    0x402643
  40262b:	mov    rcx,rbp
  40262e:	call   0x40a920
  402633:	test   eax,eax
  402635:	jne    0x402684
  402637:	mov    rcx,rbp
  40263a:	call   0x40a918
  40263f:	test   eax,eax
  402641:	jne    0x4026a0
  402643:	mov    rcx,rbp
  402646:	sub    ebx,esi
  402648:	add    rdi,rsi
  40264b:	call   0x40a920
  402650:	test   eax,eax
  402652:	jne    0x402684
  402654:	cmp    ebx,0x3ff
  40265a:	movsxd r8,ebx
  40265d:	jg     0x402612
  40265f:	add    ebx,0x1000
  402665:	mov    rcx,r12
  402668:	movsxd r8,ebx
  40266b:	lea    rdx,[rdi+r8*1+0x1]
  402670:	mov    QWORD PTR [rsp+0x28],r8
  402675:	call   0x408f70
  40267a:	mov    r8,QWORD PTR [rsp+0x28]
  40267f:	mov    r12,rax
  402682:	jmp    0x402612
  402684:	lea    rdx,[rdi+0x1]
  402688:	mov    rcx,r12
  40268b:	call   0x408f70
  402690:	mov    BYTE PTR [rax+rdi*1],0x0
  402694:	add    rsp,0x30
  402698:	pop    rbx
  402699:	pop    rsi
  40269a:	pop    rdi
  40269b:	pop    rbp
  40269c:	pop    r12
  40269e:	ret    
  40269f:	nop
  4026a0:	call   QWORD PTR [rip+0x25dae]        # 0x428454
  4026a6:	mov    ebx,DWORD PTR [rax]
  4026a8:	cmp    ebx,0x15
  4026ab:	je     0x4026d3
  4026ad:	mov    ecx,ebx
  4026af:	call   0x408fc0
  4026b4:	mov    rsi,rax
  4026b7:	call   QWORD PTR [rip+0x25d57]        # 0x428414
  4026bd:	lea    rdx,[rip+0x2027c]        # 0x422940
  4026c4:	lea    rcx,[rax+0x60]
  4026c8:	mov    r9,rsi
  4026cb:	mov    r8d,ebx
  4026ce:	call   0x40a908
  4026d3:	mov    rcx,r12
  4026d6:	call   0x40a8f0
  4026db:	xor    eax,eax
  4026dd:	add    rsp,0x30
  4026e1:	pop    rbx
  4026e2:	pop    rsi
  4026e3:	pop    rdi
  4026e4:	pop    rbp
  4026e5:	pop    r12
  4026e7:	ret    
  4026e8:	xor    eax,eax
  4026ea:	jmp    0x402694
  4026ec:	nop    DWORD PTR [rax+0x0]
  4026f0:	push   rbp
  4026f1:	push   rdi
  4026f2:	push   rsi
  4026f3:	push   rbx
  4026f4:	sub    rsp,0x438
  4026fb:	cmp    r8d,0x1
  4026ff:	mov    rsi,rdx
  402702:	mov    rbx,rcx
  402705:	sbb    r8d,r8d
  402708:	mov    rdx,rcx
  40270b:	mov    rcx,rsi
  40270e:	and    r8d,0x8
  402712:	mov    rdi,r9
  402715:	add    r8d,0x5
  402719:	call   0x4084c0
  40271e:	test   eax,eax
  402720:	jne    0x40272e
  402722:	add    rsp,0x438
  402729:	pop    rbx
  40272a:	pop    rsi
  40272b:	pop    rdi
  40272c:	pop    rbp
  40272d:	ret    
  40272e:	lea    rbp,[rsp+0x30]
  402733:	mov    r9d,0x400
  402739:	mov    rdx,rsi
  40273c:	mov    ecx,eax
  40273e:	mov    r8,rbp
  402741:	call   0x408840
  402746:	call   QWORD PTR [rip+0x25cc8]        # 0x428414
  40274c:	mov    r9,QWORD PTR [rsp+0x480]
  402754:	lea    rcx,[rax+0x60]
  402758:	lea    rdx,[rip+0x20221]        # 0x422980
  40275f:	mov    QWORD PTR [rsp+0x28],rbp
  402764:	mov    QWORD PTR [rsp+0x20],rbx
  402769:	mov    r8,rdi
  40276c:	call   0x40a908
  402771:	mov    ecx,0x1
  402776:	call   0x40a930
  40277b:	nop
  40277c:	nop    DWORD PTR [rax+0x0]
  402780:	push   rbp
  402781:	push   rdi
  402782:	push   rsi
  402783:	push   rbx
  402784:	sub    rsp,0x38
  402788:	mov    rbp,QWORD PTR [rip+0x214a1]        # 0x423c30
  40278f:	cmp    QWORD PTR [rbp+0x0],0x0
  402794:	je     0x402820
  40279a:	mov    eax,DWORD PTR [rip+0x248a0]        # 0x427040
  4027a0:	mov    rdi,r8
  4027a3:	mov    rbx,rdx
  4027a6:	mov    rsi,rcx
  4027a9:	test   eax,eax
  4027ab:	je     0x4027d0
  4027ad:	lea    rax,[rip+0x248ec]        # 0x4270a0
  4027b4:	mov    QWORD PTR [rsi],rax
  4027b7:	lea    rax,[rip+0x248a2]        # 0x427060
  4027be:	mov    QWORD PTR [rbx],rax
  4027c1:	mov    eax,0x1
  4027c6:	add    rsp,0x38
  4027ca:	pop    rbx
  4027cb:	pop    rsi
  4027cc:	pop    rdi
  4027cd:	pop    rbp
  4027ce:	ret    
  4027cf:	nop
  4027d0:	lea    r9,[rip+0x20186]        # 0x42295d
  4027d7:	lea    rdx,[rip+0x248c2]        # 0x4270a0
  4027de:	lea    rcx,[rip+0x201fb]        # 0x4229e0
  4027e5:	mov    QWORD PTR [rsp+0x20],r8
  4027ea:	mov    r8d,0x1
  4027f0:	call   0x4026f0
  4027f5:	mov    QWORD PTR [rsp+0x20],rdi
  4027fa:	mov    rcx,QWORD PTR [rbp+0x0]
  4027fe:	lea    r9,[rip+0x20166]        # 0x42296b
  402805:	lea    rdx,[rip+0x24854]        # 0x427060
  40280c:	mov    r8d,0x1
  402812:	call   0x4026f0
  402817:	add    DWORD PTR [rip+0x24822],0x1        # 0x427040
  40281e:	jmp    0x4027ad
  402820:	xor    eax,eax
  402822:	add    rsp,0x38
  402826:	pop    rbx
  402827:	pop    rsi
  402828:	pop    rdi
  402829:	pop    rbp
  40282a:	ret    
  40282b:	nop    DWORD PTR [rax+rax*1+0x0]
  402830:	push   r12
  402832:	push   rbp
  402833:	push   rdi
  402834:	push   rsi
  402835:	push   rbx
  402836:	sub    rsp,0x20
  40283a:	mov    rsi,rdx
  40283d:	mov    rdi,rcx
  402840:	mov    rcx,rdx
  402843:	mov    rbp,r8
  402846:	lea    r12,[r8-0x1]
  40284a:	call   0x40a820
  40284f:	lea    rbx,[rax+0x3]
  402853:	lea    rax,[rsi-0x1]
  402857:	jmp    0x402864
  402859:	nop    DWORD PTR [rax+0x0]
  402860:	add    rbx,0x4
  402864:	lea    rcx,[rax+0x1]
  402868:	mov    edx,0x27
  40286d:	call   0x40a840
  402872:	test   rax,rax
  402875:	jne    0x402860
  402877:	cmp    r12,rbx
  40287a:	jb     0x4028cc
  40287c:	lea    rdx,[rdi+0x1]
  402880:	sub    rbp,0x7
  402884:	mov    BYTE PTR [rdi],0x27
  402887:	mov    rax,rdx
  40288a:	sub    rax,rdi
  40288d:	cmp    r12,rax
  402890:	jbe    0x4028cc
  402892:	movzx  ecx,BYTE PTR [rsi]
  402895:	lea    rax,[rdx+0x1]
  402899:	test   cl,cl
  40289b:	mov    BYTE PTR [rdx],cl
  40289d:	je     0x4028e0
  40289f:	cmp    cl,0x27
  4028a2:	jne    0x4028ba
  4028a4:	sub    rax,rdi
  4028a7:	cmp    rax,rbp
  4028aa:	jae    0x4028cc
  4028ac:	lea    rax,[rdx+0x4]
  4028b0:	mov    DWORD PTR [rdx],0x27275c27
  4028b6:	mov    BYTE PTR [rdx+0x4],0x0
  4028ba:	mov    rdx,rax
  4028bd:	add    rsi,0x1
  4028c1:	mov    rax,rdx
  4028c4:	sub    rax,rdi
  4028c7:	cmp    r12,rax
  4028ca:	ja     0x402892
  4028cc:	xor    eax,eax
  4028ce:	add    rsp,0x20
  4028d2:	pop    rbx
  4028d3:	pop    rsi
  4028d4:	pop    rdi
  4028d5:	pop    rbp
  4028d6:	pop    r12
  4028d8:	ret    
  4028d9:	nop    DWORD PTR [rax+0x0]
  4028e0:	mov    BYTE PTR [rdx],0x27
  4028e3:	mov    BYTE PTR [rdx+0x1],0x0
  4028e7:	add    rsp,0x20
  4028eb:	pop    rbx
  4028ec:	pop    rsi
  4028ed:	pop    rdi
  4028ee:	pop    rbp
  4028ef:	pop    r12
  4028f1:	ret    
  4028f2:	nop
  4028f3:	nop
  4028f4:	nop
  4028f5:	nop
  4028f6:	nop
  4028f7:	nop
  4028f8:	nop
  4028f9:	nop
  4028fa:	nop
  4028fb:	nop
  4028fc:	nop
  4028fd:	nop
  4028fe:	nop
  4028ff:	nop
  402900:	xor    eax,eax
  402902:	ret    
  402903:	nop    DWORD PTR [rax]
  402906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402910:	push   rdi
  402911:	push   rsi
  402912:	push   rbx
  402913:	sub    rsp,0x50
  402917:	lea    r8,[rip+0x20122]        # 0x422a40
  40291e:	mov    rbx,rdx
  402921:	lea    rcx,[rsp+0x30]
  402926:	lea    rdx,[rsp+0x38]
  40292b:	lea    rdi,[rsp+0x40]
  402930:	call   0x402780
  402935:	test   eax,eax
  402937:	je     0x402989
  402939:	mov    rcx,QWORD PTR [rsp+0x30]
  40293e:	mov    DWORD PTR [rsp+0x20],0x0
  402946:	mov    r9,rdi
  402949:	mov    r8d,0x2
  40294f:	mov    rdx,rbx
  402952:	call   0x408620
  402957:	test   eax,eax
  402959:	jne    0x402989
  40295b:	movsxd rsi,DWORD PTR [rsp+0x44]
  402960:	add    rsi,rbx
  402963:	mov    rax,rsi
  402966:	jmp    0x402976
  402968:	nop    DWORD PTR [rax+rax*1+0x0]
  402970:	cmp    BYTE PTR [rax-0x1],0x5c
  402974:	jne    0x4029a0
  402976:	lea    rcx,[rax+0x1]
  40297a:	mov    edx,0xa
  40297f:	call   0x40a840
  402984:	test   rax,rax
  402987:	jne    0x402970
  402989:	mov    eax,0x1
  40298e:	add    rsp,0x50
  402992:	pop    rbx
  402993:	pop    rsi
  402994:	pop    rdi
  402995:	ret    
  402996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029a0:	mov    rcx,QWORD PTR [rsp+0x38]
  4029a5:	mov    DWORD PTR [rsp+0x20],0x1
  4029ad:	mov    r9,rdi
  4029b0:	mov    r8d,0x1
  4029b6:	mov    rdx,rsi
  4029b9:	mov    rbx,rax
  4029bc:	call   0x408620
  4029c1:	test   eax,eax
  4029c3:	jne    0x402989
  4029c5:	movsxd rcx,DWORD PTR [rsp+0x44]
  4029ca:	mov    rdx,rbx
  4029cd:	sub    rdx,rsi
  4029d0:	cmp    rcx,rdx
  4029d3:	jg     0x402939
  4029d9:	jmp    0x40298e
  4029db:	nop    DWORD PTR [rax+rax*1+0x0]
  4029e0:	push   rdi
  4029e1:	push   rsi
  4029e2:	push   rbx
  4029e3:	sub    rsp,0x20
  4029e7:	mov    rbx,rcx
  4029ea:	mov    rsi,rdx
  4029ed:	mov    rdx,rcx
  4029f0:	mov    rcx,QWORD PTR [rip+0x105c9]        # 0x412fc0
  4029f7:	mov    rdi,r8
  4029fa:	call   0x40a838
  4029ff:	test   eax,eax
  402a01:	je     0x402a40
  402a03:	mov    rcx,QWORD PTR [rip+0x105c6]        # 0x412fd0
  402a0a:	mov    rdx,rbx
  402a0d:	call   0x40a838
  402a12:	test   eax,eax
  402a14:	je     0x402a5b
  402a16:	call   QWORD PTR [rip+0x259f8]        # 0x428414
  402a1c:	lea    rdx,[rip+0x20035]        # 0x422a58
  402a23:	lea    rcx,[rax+0x60]
  402a27:	mov    r8,rbx
  402a2a:	call   0x40a908
  402a2f:	mov    ecx,0x3
  402a34:	call   0x40a930
  402a39:	nop    DWORD PTR [rax+0x0]
  402a40:	lea    rax,[rip+0x10579]        # 0x412fc0
  402a47:	mov    rax,QWORD PTR [rax+0x8]
  402a4b:	mov    rdx,rdi
  402a4e:	mov    rcx,rsi
  402a51:	add    rsp,0x20
  402a55:	pop    rbx
  402a56:	pop    rsi
  402a57:	pop    rdi
  402a58:	rex.W jmp rax
  402a5b:	lea    rax,[rip+0x1056e]        # 0x412fd0
  402a62:	jmp    0x402a47
  402a64:	nop
  402a65:	nop
  402a66:	nop
  402a67:	nop
  402a68:	nop
  402a69:	nop
  402a6a:	nop
  402a6b:	nop
  402a6c:	nop
  402a6d:	nop
  402a6e:	nop
  402a6f:	nop
  402a70:	push   rdi
  402a71:	push   rsi
  402a72:	sub    rsp,0x28
  402a76:	lea    rcx,[rip+0x2011c]        # 0x422b99
  402a7d:	call   0x40a8d0
  402a82:	test   rax,rax
  402a85:	mov    QWORD PTR [rip+0x24694],rax        # 0x427120
  402a8c:	je     0x402b7c
  402a92:	lea    rcx,[rip+0x200f8]        # 0x422b91
  402a99:	call   0x40a8d0
  402a9e:	test   rax,rax
  402aa1:	mov    QWORD PTR [rip+0x24670],rax        # 0x427118
  402aa8:	je     0x402bb8
  402aae:	lea    rcx,[rip+0x200d5]        # 0x422b8a
  402ab5:	call   0x40a8d0
  402aba:	test   rax,rax
  402abd:	mov    QWORD PTR [rip+0x2464c],rax        # 0x427110
  402ac4:	je     0x402bac
  402aca:	lea    rcx,[rip+0x200b3]        # 0x422b84
  402ad1:	call   0x40a8d0
  402ad6:	test   rax,rax
  402ad9:	mov    QWORD PTR [rip+0x24628],rax        # 0x427108
  402ae0:	je     0x402ba0
  402ae6:	lea    rcx,[rip+0x2008f]        # 0x422b7c
  402aed:	call   0x40a8d0
  402af2:	test   rax,rax
  402af5:	mov    QWORD PTR [rip+0x24604],rax        # 0x427100
  402afc:	je     0x402b94
  402b02:	lea    rcx,[rip+0x20067]        # 0x422b70
  402b09:	call   0x40a8d0
  402b0e:	lea    rcx,[rip+0x20053]        # 0x422b68
  402b15:	mov    QWORD PTR [rip+0x245dc],rax        # 0x4270f8
  402b1c:	call   0x40a8d0
  402b21:	lea    rcx,[rip+0x20036]        # 0x422b5e
  402b28:	mov    QWORD PTR [rip+0x245c1],rax        # 0x4270f0
  402b2f:	call   0x40a8d0
  402b34:	test   rax,rax
  402b37:	mov    QWORD PTR [rip+0x245aa],rax        # 0x4270e8
  402b3e:	je     0x402b88
  402b40:	lea    rcx,[rip+0x2000d]        # 0x422b54
  402b47:	call   0x40a8d0
  402b4c:	test   rax,rax
  402b4f:	mov    QWORD PTR [rip+0x2458a],rax        # 0x4270e0
  402b56:	je     0x402b75
  402b58:	lea    rdi,[rip+0x1ff97]        # 0x422af6
  402b5f:	mov    ecx,0x5
  402b64:	mov    rsi,rax
  402b67:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402b69:	jne    0x402b75
  402b6b:	mov    DWORD PTR [rip+0x245b3],0x1        # 0x427128
  402b75:	add    rsp,0x28
  402b79:	pop    rsi
  402b7a:	pop    rdi
  402b7b:	ret    
  402b7c:	lea    rcx,[rip+0x20016]        # 0x422b99
  402b83:	call   0x40ac60
  402b88:	lea    rcx,[rip+0x1ffcf]        # 0x422b5e
  402b8f:	call   0x40ac60
  402b94:	lea    rcx,[rip+0x1ffe1]        # 0x422b7c
  402b9b:	call   0x40ac60
  402ba0:	lea    rcx,[rip+0x1ffdd]        # 0x422b84
  402ba7:	call   0x40ac60
  402bac:	lea    rcx,[rip+0x1ffd7]        # 0x422b8a
  402bb3:	call   0x40ac60
  402bb8:	lea    rcx,[rip+0x1ffd2]        # 0x422b91
  402bbf:	call   0x40ac60
  402bc4:	nop
  402bc5:	nop
  402bc6:	nop
  402bc7:	nop
  402bc8:	nop
  402bc9:	nop
  402bca:	nop
  402bcb:	nop
  402bcc:	nop
  402bcd:	nop
  402bce:	nop
  402bcf:	nop
  402bd0:	push   rsi
  402bd1:	push   rbx
  402bd2:	mov    r11,QWORD PTR [rdx]
  402bd5:	mov    r10,QWORD PTR [rsp+0x40]
  402bda:	mov    eax,0xb
  402bdf:	cmp    r11,r8
  402be2:	je     0x402c82
  402be8:	lea    rax,[r11+0x1]
  402bec:	mov    QWORD PTR [rdx],rax
  402bef:	mov    eax,DWORD PTR [rsp+0x38]
  402bf3:	shl    eax,0xf
  402bf6:	sar    eax,0x1f
  402bf9:	and    eax,0xb
  402bfc:	test   r9,r9
  402bff:	je     0x402c85
  402c05:	movzx  edx,cl
  402c08:	movzx  ecx,BYTE PTR [r11]
  402c0c:	movsx  edx,BYTE PTR [r9+rdx*1]
  402c11:	movzx  r8d,BYTE PTR [r9+rcx*1]
  402c16:	cmp    r8d,edx
  402c19:	jb     0x402c82
  402c1b:	mov    r11d,0x1
  402c21:	jmp    0x402c50
  402c23:	mov    eax,edx
  402c25:	mov    esi,r11d
  402c28:	add    edx,0x1
  402c2b:	movzx  ecx,BYTE PTR [r9+rax*1]
  402c30:	mov    rax,rcx
  402c33:	and    ecx,0x7
  402c36:	shr    rax,0x3
  402c3a:	shl    esi,cl
  402c3c:	and    eax,0x1f
  402c3f:	mov    ecx,esi
  402c41:	add    rax,r10
  402c44:	movzx  ebx,BYTE PTR [rax]
  402c47:	or     ecx,ebx
  402c49:	cmp    r8d,edx
  402c4c:	mov    BYTE PTR [rax],cl
  402c4e:	jb     0x402c80
  402c50:	test   r9,r9
  402c53:	jne    0x402c23
  402c55:	mov    eax,edx
  402c57:	mov    ecx,edx
  402c59:	mov    esi,r11d
  402c5c:	sar    eax,0x3
  402c5f:	and    ecx,0x7
  402c62:	add    edx,0x1
  402c65:	cdqe   
  402c67:	shl    esi,cl
  402c69:	add    rax,r10
  402c6c:	mov    ecx,esi
  402c6e:	movzx  ebx,BYTE PTR [rax]
  402c71:	or     ecx,ebx
  402c73:	cmp    r8d,edx
  402c76:	mov    BYTE PTR [rax],cl
  402c78:	jae    0x402c50
  402c7a:	nop    WORD PTR [rax+rax*1+0x0]
  402c80:	xor    eax,eax
  402c82:	pop    rbx
  402c83:	pop    rsi
  402c84:	ret    
  402c85:	movsx  edx,cl
  402c88:	movzx  r8d,BYTE PTR [r11]
  402c8c:	jmp    0x402c16
  402c8e:	xchg   ax,ax
  402c90:	push   rdi
  402c91:	push   rsi
  402c92:	push   rbx
  402c93:	sub    rsp,0x30
  402c97:	mov    rax,QWORD PTR [rcx]
  402c9a:	lea    r9,[rax+0x1]
  402c9e:	mov    QWORD PTR [rsp+0x28],r9
  402ca3:	cmp    BYTE PTR [rax],0x1d
  402ca6:	ja     0x402d10
  402ca8:	movzx  r11d,BYTE PTR [rax]
  402cac:	lea    r10,[rip+0x1ff0d]        # 0x422bc0
  402cb3:	mov    rsi,r8
  402cb6:	mov    rbx,rcx
  402cb9:	movsxd r11,DWORD PTR [r10+r11*4]
  402cbd:	add    r10,r11
  402cc0:	jmp    r10
  402cc3:	movzx  edi,BYTE PTR [rax+0x1]
  402cc7:	lea    rcx,[rsp+0x28]
  402ccc:	call   0x402e20
  402cd1:	lea    rcx,[rsi+rdi*8]
  402cd5:	movzx  edx,BYTE PTR [rcx]
  402cd8:	mov    r8d,edx
  402cdb:	and    r8d,0x3
  402cdf:	cmp    r8b,0x3
  402ce3:	je     0x402d80
  402ce9:	test   al,al
  402ceb:	je     0x402d10
  402ced:	mov    r9,QWORD PTR [rsp+0x28]
  402cf2:	mov    eax,0x1
  402cf7:	mov    QWORD PTR [rbx],r9
  402cfa:	add    rsp,0x30
  402cfe:	pop    rbx
  402cff:	pop    rsi
  402d00:	pop    rdi
  402d01:	ret    
  402d02:	movzx  eax,BYTE PTR [rax+0x1]
  402d06:	test   BYTE PTR [r8+rax*8],0x3
  402d0b:	jne    0x402cf2
  402d0d:	nop    DWORD PTR [rax]
  402d10:	xor    eax,eax
  402d12:	add    rsp,0x30
  402d16:	pop    rbx
  402d17:	pop    rsi
  402d18:	pop    rdi
  402d19:	ret    
  402d1a:	nop    WORD PTR [rax+rax*1+0x0]
  402d20:	lea    rcx,[rax+0x3]
  402d24:	mov    QWORD PTR [rsp+0x28],rcx
  402d29:	movsx  edx,BYTE PTR [rax+0x4]
  402d2d:	movzx  r8d,BYTE PTR [rax+0x3]
  402d32:	shl    edx,0x8
  402d35:	add    edx,r8d
  402d38:	jne    0x402d10
  402d3a:	mov    QWORD PTR [rsp+0x28],r9
  402d3f:	movsx  r9d,BYTE PTR [rax+0x2]
  402d44:	movzx  edx,BYTE PTR [rax+0x1]
  402d48:	shl    r9d,0x8
  402d4c:	add    r9d,edx
  402d4f:	movsxd r9,r9d
  402d52:	add    r9,rcx
  402d55:	jmp    0x402cf2
  402d57:	nop    WORD PTR [rax+rax*1+0x0]
  402d60:	movsx  ecx,BYTE PTR [rax+0x2]
  402d64:	movzx  edx,BYTE PTR [rax+0x1]
  402d68:	add    rax,0x3
  402d6c:	shl    ecx,0x8
  402d6f:	add    edx,ecx
  402d71:	js     0x402d10
  402d73:	movsxd rdx,edx
  402d76:	lea    r9,[rax+rdx*1]
  402d7a:	jmp    0x402cf2
  402d7f:	nop
  402d80:	mov    r8d,eax
  402d83:	and    edx,0xfffffffc
  402d86:	and    r8d,0x3
  402d8a:	or     edx,r8d
  402d8d:	mov    BYTE PTR [rcx],dl
  402d8f:	jmp    0x402ce9
  402d94:	xchg   ax,ax
  402d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402da0:	push   rdi
  402da1:	push   rsi
  402da2:	push   rbx
  402da3:	sub    rsp,0x30
  402da7:	lea    rsi,[rsp+0x28]
  402dac:	mov    rdi,rdx
  402daf:	mov    rbx,r8
  402db2:	mov    QWORD PTR [rsp+0x28],rcx
  402db7:	mov    rax,rcx
  402dba:	nop    WORD PTR [rax+rax*1+0x0]
  402dc0:	cmp    rdi,rax
  402dc3:	jbe    0x402df6
  402dc5:	cmp    BYTE PTR [rax],0xf
  402dc8:	jne    0x402e03
  402dca:	lea    rcx,[rax+0x1]
  402dce:	mov    QWORD PTR [rsp+0x28],rcx
  402dd3:	movsx  r9d,BYTE PTR [rax+0x2]
  402dd8:	movzx  r10d,BYTE PTR [rax+0x1]
  402ddd:	shl    r9d,0x8
  402de1:	add    r9d,r10d
  402de4:	movsxd r9,r9d
  402de7:	lea    rax,[rax+r9*1+0x3]
  402dec:	cmp    rdi,rax
  402def:	mov    QWORD PTR [rsp+0x28],rax
  402df4:	ja     0x402dc5
  402df6:	mov    eax,0x1
  402dfb:	add    rsp,0x30
  402dff:	pop    rbx
  402e00:	pop    rsi
  402e01:	pop    rdi
  402e02:	ret    
  402e03:	mov    r8,rbx
  402e06:	mov    rdx,rdi
  402e09:	mov    rcx,rsi
  402e0c:	call   0x402c90
  402e11:	test   al,al
  402e13:	je     0x402dfb
  402e15:	mov    rax,QWORD PTR [rsp+0x28]
  402e1a:	jmp    0x402dc0
  402e1c:	nop    DWORD PTR [rax+0x0]
  402e20:	push   r12
  402e22:	push   rbp
  402e23:	push   rdi
  402e24:	push   rsi
  402e25:	push   rbx
  402e26:	sub    rsp,0x30
  402e2a:	mov    rax,QWORD PTR [rcx]
  402e2d:	mov    rbp,rcx
  402e30:	lea    r12,[rsp+0x28]
  402e35:	mov    rdi,rdx
  402e38:	mov    rsi,r8
  402e3b:	lea    rcx,[rax+0x2]
  402e3f:	mov    QWORD PTR [rsp+0x28],rcx
  402e44:	cmp    rdi,rcx
  402e47:	jbe    0x402f10
  402e4d:	movzx  eax,BYTE PTR [rcx]
  402e50:	cmp    al,0x7
  402e52:	je     0x402f40
  402e58:	cmp    al,0xf
  402e5a:	jne    0x402f20
  402e60:	lea    rax,[rcx+0x1]
  402e64:	add    rcx,0x3
  402e68:	mov    QWORD PTR [rsp+0x28],rax
  402e6d:	movsx  ebx,BYTE PTR [rcx-0x1]
  402e71:	movzx  eax,BYTE PTR [rcx-0x2]
  402e75:	mov    QWORD PTR [rsp+0x28],rcx
  402e7a:	shl    ebx,0x8
  402e7d:	add    eax,ebx
  402e7f:	js     0x402e44
  402e81:	movsxd rbx,eax
  402e84:	cmp    BYTE PTR [rcx+rbx*1-0x3],0xe
  402e89:	lea    rdx,[rcx+rbx*1-0x3]
  402e8e:	je     0x402f04
  402e90:	movsx  ebx,BYTE PTR [rcx-0x1]
  402e94:	movzx  eax,BYTE PTR [rcx-0x2]
  402e98:	mov    r8,rsi
  402e9b:	shl    ebx,0x8
  402e9e:	add    ebx,eax
  402ea0:	movsxd rbx,ebx
  402ea3:	lea    rdx,[rcx+rbx*1]
  402ea7:	call   0x402da0
  402eac:	test   al,al
  402eae:	je     0x402f10
  402eb0:	mov    rcx,rbx
  402eb3:	add    rcx,QWORD PTR [rsp+0x28]
  402eb8:	mov    QWORD PTR [rsp+0x28],rcx
  402ebd:	jmp    0x402e44
  402ebf:	nop
  402ec0:	mov    rdx,rbx
  402ec3:	add    rdx,QWORD PTR [rsp+0x28]
  402ec8:	mov    QWORD PTR [rsp+0x28],rdx
  402ecd:	cmp    BYTE PTR [rdx],0xf
  402ed0:	jne    0x402f60
  402ed6:	lea    rax,[rdx+0x1]
  402eda:	lea    rcx,[rdx+0x3]
  402ede:	mov    QWORD PTR [rsp+0x28],rax
  402ee3:	movsx  ebx,BYTE PTR [rdx+0x2]
  402ee7:	movzx  eax,BYTE PTR [rdx+0x1]
  402eeb:	mov    QWORD PTR [rsp+0x28],rcx
  402ef0:	shl    ebx,0x8
  402ef3:	add    ebx,eax
  402ef5:	movsxd rbx,ebx
  402ef8:	cmp    BYTE PTR [rcx+rbx*1-0x3],0xe
  402efd:	jne    0x402f70
  402eff:	lea    rdx,[rcx+rbx*1-0x3]
  402f04:	mov    r8,rsi
  402f07:	call   0x402da0
  402f0c:	test   al,al
  402f0e:	jne    0x402ec0
  402f10:	xor    eax,eax
  402f12:	add    rsp,0x30
  402f16:	pop    rbx
  402f17:	pop    rsi
  402f18:	pop    rdi
  402f19:	pop    rbp
  402f1a:	pop    r12
  402f1c:	ret    
  402f1d:	nop    DWORD PTR [rax]
  402f20:	mov    r8,rsi
  402f23:	mov    rdx,rdi
  402f26:	mov    rcx,r12
  402f29:	call   0x402c90
  402f2e:	test   al,al
  402f30:	je     0x402f10
  402f32:	mov    rcx,QWORD PTR [rsp+0x28]
  402f37:	jmp    0x402e44
  402f3c:	nop    DWORD PTR [rax+0x0]
  402f40:	add    rcx,0x2
  402f44:	mov    eax,0x1
  402f49:	mov    QWORD PTR [rbp+0x0],rcx
  402f4d:	add    rsp,0x30
  402f51:	pop    rbx
  402f52:	pop    rsi
  402f53:	pop    rdi
  402f54:	pop    rbp
  402f55:	pop    r12
  402f57:	ret    
  402f58:	nop    DWORD PTR [rax+rax*1+0x0]
  402f60:	mov    rcx,rdx
  402f63:	jmp    0x402e90
  402f68:	nop    DWORD PTR [rax+rax*1+0x0]
  402f70:	mov    QWORD PTR [rsp+0x28],rdx
  402f75:	mov    rcx,rdx
  402f78:	jmp    0x402e90
  402f7d:	nop    DWORD PTR [rax]
  402f80:	push   rbp
  402f81:	push   r15
  402f83:	push   r14
  402f85:	push   r13
  402f87:	push   r12
  402f89:	push   rdi
  402f8a:	push   rsi
  402f8b:	push   rbx
  402f8c:	sub    rsp,0x48
  402f90:	lea    rbp,[rsp+0x80]
  402f98:	mov    rbx,QWORD PTR [rcx+0x18]
  402f9c:	mov    r13,QWORD PTR [rcx]
  402f9f:	xor    eax,eax
  402fa1:	mov    r12d,DWORD PTR [rcx+0xc]
  402fa5:	mov    rsi,rcx
  402fa8:	sub    rsp,0x40
  402fac:	lea    rdx,[rsp+0x20]
  402fb1:	lea    r15,[rip+0x1fc80]        # 0x422c38
  402fb8:	xor    r9d,r9d
  402fbb:	lea    rdi,[rbx+0x8]
  402fbf:	mov    rcx,rbx
  402fc2:	mov    QWORD PTR [rbx],0x0
  402fc9:	mov    QWORD PTR [rbx+0xf8],0x0
  402fd4:	mov    r8d,0x5
  402fda:	mov    r14d,0x1
  402fe0:	and    rdi,0xfffffffffffffff8
  402fe4:	add    r12,r13
  402fe7:	mov    r10d,0xff
  402fed:	sub    rcx,rdi
  402ff0:	add    ecx,0x100
  402ff6:	shr    ecx,0x3
  402ff9:	rep stos QWORD PTR es:[rdi],rax
  402ffc:	lea    rdi,[rbx+0x100]
  403003:	movzx  eax,BYTE PTR [rsi+0x30]
  403007:	or     eax,0x8
  40300a:	and    eax,0xfffffffe
  40300d:	mov    BYTE PTR [rsi+0x30],al
  403010:	cmp    r13,r12
  403013:	je     0x403033
  403015:	movzx  eax,BYTE PTR [r13+0x0]
  40301a:	cmp    al,0x1
  40301c:	je     0x403033
  40301e:	cmp    al,0x1d
  403020:	lea    r11,[r13+0x1]
  403024:	ja     0x403324
  40302a:	movsxd rax,DWORD PTR [r15+rax*4]
  40302e:	add    rax,r15
  403031:	jmp    rax
  403033:	test   r9d,r9d
  403036:	je     0x403061
  403038:	movzx  ecx,BYTE PTR [rsi+0x30]
  40303c:	mov    eax,ecx
  40303e:	and    ecx,0xfffffffe
  403041:	and    eax,0x1
  403044:	or     r14d,eax
  403047:	lea    eax,[r9-0x1]
  40304b:	or     r14d,ecx
  40304e:	mov    BYTE PTR [rsi+0x30],r14b
  403052:	mov    r9,rax
  403055:	mov    r13,QWORD PTR [rdx+rax*8]
  403059:	mov    r14d,0x1
  40305f:	jmp    0x403010
  403061:	movzx  edx,BYTE PTR [rsi+0x30]
  403065:	mov    eax,edx
  403067:	and    edx,0xfffffffe
  40306a:	and    eax,0x1
  40306d:	or     r14d,eax
  403070:	xor    eax,eax
  403072:	or     r14d,edx
  403075:	mov    BYTE PTR [rsi+0x30],r14b
  403079:	lea    rsp,[rbp-0x38]
  40307d:	pop    rbx
  40307e:	pop    rsi
  40307f:	pop    rdi
  403080:	pop    r12
  403082:	pop    r13
  403084:	pop    r14
  403086:	pop    r15
  403088:	pop    rbp
  403089:	ret    
  40308a:	nop    WORD PTR [rax+rax*1+0x0]
  403090:	add    r13,0x5
  403094:	jmp    0x403010
  403099:	nop    DWORD PTR [rax+0x0]
  4030a0:	mov    BYTE PTR [rbp-0x41],0x0
  4030a4:	movsx  eax,BYTE PTR [r11+0x1]
  4030a9:	movzx  ecx,BYTE PTR [r11]
  4030ad:	lea    r13,[r11+0x2]
  4030b1:	shl    eax,0x8
  4030b4:	add    eax,ecx
  4030b6:	cdqe   
  4030b8:	add    rax,r13
  4030bb:	cmp    r12,rax
  4030be:	mov    QWORD PTR [rbp-0x50],rax
  4030c2:	jbe    0x403329
  4030c8:	cmp    r8d,r9d
  4030cb:	je     0x403343
  4030d1:	mov    rcx,QWORD PTR [rbp-0x50]
  4030d5:	mov    eax,r9d
  4030d8:	add    r9d,0x1
  4030dc:	mov    QWORD PTR [rdx+rax*8],rcx
  4030e0:	add    r11,0x4
  4030e4:	cmp    BYTE PTR [rbp-0x41],0x0
  4030e8:	cmovne r13,r11
  4030ec:	jmp    0x403010
  4030f1:	mov    r13,r11
  4030f4:	jmp    0x403010
  4030f9:	nop    DWORD PTR [rax+0x0]
  403100:	lea    r11,[rip+0x240b9]        # 0x4271c0
  403107:	xor    ecx,ecx
  403109:	nop    DWORD PTR [rax+0x0]
  403110:	cmp    BYTE PTR [r11+rcx*1],0x1
  403115:	je     0x40311b
  403117:	mov    BYTE PTR [rbx+rcx*1],0x1
  40311b:	add    rcx,0x1
  40311f:	cmp    rcx,0x100
  403126:	jne    0x403110
  403128:	mov    r13,r12
  40312b:	xor    r14d,r14d
  40312e:	jmp    0x403010
  403133:	xor    eax,eax
  403135:	lea    r11,[rip+0x24084]        # 0x4271c0
  40313c:	jmp    0x40314c
  40313e:	xchg   ax,ax
  403140:	add    rax,0x1
  403144:	cmp    rax,0x100
  40314a:	je     0x403128
  40314c:	cmp    BYTE PTR [r11+rax*1],0x1
  403151:	jne    0x403140
  403153:	mov    BYTE PTR [rbx+rax*1],0x1
  403157:	jmp    0x403140
  403159:	nop    DWORD PTR [rax+0x0]
  403160:	movsx  eax,BYTE PTR [r13+0x4]
  403165:	movzx  ecx,BYTE PTR [r13+0x3]
  40316a:	shl    eax,0x8
  40316d:	add    eax,ecx
  40316f:	jne    0x403090
  403175:	mov    BYTE PTR [rbp-0x41],0x1
  403179:	jmp    0x4030a4
  40317e:	xchg   ax,ax
  403180:	movsx  eax,BYTE PTR [r13+0x2]
  403185:	movzx  ecx,BYTE PTR [r13+0x1]
  40318a:	shl    eax,0x8
  40318d:	add    eax,ecx
  40318f:	movsxd rcx,eax
  403192:	test   eax,eax
  403194:	lea    r13,[r13+rcx*1+0x3]
  403199:	jg     0x403010
  40319f:	movzx  eax,BYTE PTR [r13+0x0]
  4031a4:	cmp    al,0x15
  4031a6:	je     0x4031b0
  4031a8:	cmp    al,0xf
  4031aa:	jne    0x403010
  4031b0:	movsx  ecx,BYTE PTR [r13+0x2]
  4031b5:	movzx  eax,BYTE PTR [r13+0x1]
  4031ba:	shl    ecx,0x8
  4031bd:	add    eax,ecx
  4031bf:	test   r9d,r9d
  4031c2:	cdqe   
  4031c4:	lea    r13,[r13+rax*1+0x3]
  4031c9:	je     0x403010
  4031cf:	lea    ecx,[r9-0x1]
  4031d3:	cmp    QWORD PTR [rdx+rcx*8],r13
  4031d7:	cmove  r9d,ecx
  4031db:	jmp    0x403010
  4031e0:	or     BYTE PTR [rsi+0x30],0x1
  4031e4:	xor    eax,eax
  4031e6:	jmp    0x403079
  4031eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4031f0:	add    r13,0x3
  4031f4:	jmp    0x403010
  4031f9:	nop    DWORD PTR [rax+0x0]
  403200:	movzx  ecx,BYTE PTR [r13+0x1]
  403205:	shl    ecx,0x3
  403208:	cmp    ecx,0xff
  40320e:	jg     0x4033aa
  403214:	mov    r14d,r10d
  403217:	movsxd r11,ecx
  40321a:	sub    r14d,ecx
  40321d:	lea    rax,[rbx+r11*1]
  403221:	lea    rcx,[r11+r14*1+0x1]
  403226:	add    rcx,rbx
  403229:	nop    DWORD PTR [rax+0x0]
  403230:	mov    BYTE PTR [rax],0x1
  403233:	add    rax,0x1
  403237:	cmp    rax,rcx
  40323a:	jne    0x403230
  40323c:	movzx  eax,BYTE PTR [r13+0x1]
  403241:	shl    eax,0x3
  403244:	sub    eax,0x1
  403247:	add    r13,0x2
  40324b:	cmp    eax,0xffffffff
  40324e:	je     0x403128
  403254:	movsxd r11,eax
  403257:	add    r11,rbx
  40325a:	nop    WORD PTR [rax+rax*1+0x0]
  403260:	mov    ecx,eax
  403262:	sar    ecx,0x3
  403265:	movsxd rcx,ecx
  403268:	movzx  r14d,BYTE PTR [r13+rcx*1+0x0]
  40326e:	mov    ecx,eax
  403270:	and    ecx,0x7
  403273:	bt     r14d,ecx
  403277:	jb     0x40327d
  403279:	mov    BYTE PTR [r11],0x1
  40327d:	sub    eax,0x1
  403280:	sub    r11,0x1
  403284:	cmp    eax,0xffffffff
  403287:	jne    0x403260
  403289:	jmp    0x403128
  40328e:	xchg   ax,ax
  403290:	movzx  eax,BYTE PTR [r13+0x1]
  403295:	lea    r11,[r13+0x2]
  403299:	lea    eax,[rax*8-0x1]
  4032a0:	cmp    eax,0xffffffff
  4032a3:	je     0x403128
  4032a9:	movsxd r13,eax
  4032ac:	add    r13,rbx
  4032af:	nop
  4032b0:	mov    ecx,eax
  4032b2:	sar    ecx,0x3
  4032b5:	movsxd rcx,ecx
  4032b8:	movzx  r14d,BYTE PTR [r11+rcx*1]
  4032bd:	mov    ecx,eax
  4032bf:	and    ecx,0x7
  4032c2:	bt     r14d,ecx
  4032c6:	jae    0x4032cd
  4032c8:	mov    BYTE PTR [r13+0x0],0x1
  4032cd:	sub    eax,0x1
  4032d0:	sub    r13,0x1
  4032d4:	cmp    eax,0xffffffff
  4032d7:	jne    0x4032b0
  4032d9:	jmp    0x403128
  4032de:	xchg   ax,ax
  4032e0:	movzx  ecx,BYTE PTR [rbx+0xa]
  4032e4:	mov    rax,rbx
  4032e7:	nop    WORD PTR [rax+rax*1+0x0]
  4032f0:	mov    BYTE PTR [rax],0x1
  4032f3:	add    rax,0x1
  4032f7:	cmp    rax,rdi
  4032fa:	jne    0x4032f0
  4032fc:	test   BYTE PTR [rsi+0x10],0x40
  403300:	jne    0x403332
  403302:	mov    BYTE PTR [rbx+0xa],cl
  403305:	mov    r13,r12
  403308:	xor    r14d,r14d
  40330b:	jmp    0x403010
  403310:	movzx  eax,BYTE PTR [r13+0x2]
  403315:	xor    r14d,r14d
  403318:	mov    r13,r12
  40331b:	mov    BYTE PTR [rbx+rax*1],0x1
  40331f:	jmp    0x403010
  403324:	call   0x40a948
  403329:	or     BYTE PTR [rsi+0x30],0x1
  40332d:	jmp    0x4030e0
  403332:	test   BYTE PTR [rsi+0x30],0x1
  403336:	je     0x403128
  40333c:	xor    eax,eax
  40333e:	jmp    0x403079
  403343:	mov    eax,DWORD PTR [rip+0xfcc7]        # 0x413010
  403349:	lea    ecx,[rax+rax*8]
  40334c:	lea    eax,[rax+rcx*2]
  40334f:	cmp    r8d,eax
  403352:	ja     0x4033b1
  403354:	lea    eax,[r8+r8*1]
  403358:	mov    DWORD PTR [rbp-0x60],r9d
  40335c:	mov    DWORD PTR [rbp-0x5c],r10d
  403360:	mov    QWORD PTR [rbp-0x58],r11
  403364:	mov    DWORD PTR [rbp-0x48],eax
  403367:	lea    rax,[rax*8+0x1e]
  40336f:	shr    rax,0x4
  403373:	shl    rax,0x4
  403377:	call   0x40a550
  40337c:	sub    rsp,rax
  40337f:	shl    r8,0x3
  403383:	lea    rcx,[rsp+0x20]
  403388:	call   0x40a870
  40338d:	test   rax,rax
  403390:	mov    rdx,rax
  403393:	je     0x4033b1
  403395:	mov    r8d,DWORD PTR [rbp-0x48]
  403399:	mov    r9d,DWORD PTR [rbp-0x60]
  40339d:	mov    r10d,DWORD PTR [rbp-0x5c]
  4033a1:	mov    r11,QWORD PTR [rbp-0x58]
  4033a5:	jmp    0x4030d1
  4033aa:	mov    eax,ecx
  4033ac:	jmp    0x403244
  4033b1:	mov    eax,0xfffffffe
  4033b6:	jmp    0x403079
  4033bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4033c0:	push   rbp
  4033c1:	push   r15
  4033c3:	push   r14
  4033c5:	push   r13
  4033c7:	push   r12
  4033c9:	push   rdi
  4033ca:	push   rsi
  4033cb:	push   rbx
  4033cc:	sub    rsp,0x138
  4033d3:	lea    rbp,[rsp+0x80]
  4033db:	mov    eax,DWORD PTR [rcx+0xc]
  4033de:	mov    r14,QWORD PTR [rcx]
  4033e1:	sub    rsp,0x40
  4033e5:	mov    r10,r9
  4033e8:	mov    QWORD PTR [rbp+0x100],rcx
  4033ef:	mov    QWORD PTR [rbp+0x108],rdx
  4033f6:	mov    DWORD PTR [rbp+0x110],r8d
  4033fd:	lea    rsi,[rsp+0x20]
  403402:	movsxd r9,DWORD PTR [rbp+0x138]
  403409:	add    rax,r14
  40340c:	mov    QWORD PTR [rbp+0x90],rax
  403413:	mov    rax,QWORD PTR [rcx+0x20]
  403417:	mov    QWORD PTR [rbp+0x28],rax
  40341b:	mov    rax,QWORD PTR [rcx+0x28]
  40341f:	lea    rdi,[rax+0x1]
  403423:	test   rax,rax
  403426:	mov    QWORD PTR [rbp+0x48],rax
  40342a:	mov    QWORD PTR [rbp+0x50],rdi
  40342e:	jne    0x404878
  403434:	mov    QWORD PTR [rbp-0x28],0x0
  40343c:	mov    QWORD PTR [rbp-0x20],0x0
  403444:	xor    r15d,r15d
  403447:	mov    QWORD PTR [rbp+0x0],0x0
  40344f:	mov    QWORD PTR [rbp+0x8],0x0
  403457:	xor    r12d,r12d
  40345a:	mov    QWORD PTR [rbp+0x30],0x0
  403462:	mov    QWORD PTR [rbp+0x38],0x0
  40346a:	xor    edi,edi
  40346c:	mov    ebx,DWORD PTR [rbp+0x128]
  403472:	test   ebx,ebx
  403474:	js     0x404ded
  40347a:	mov    eax,DWORD PTR [rbp+0x110]
  403480:	add    eax,DWORD PTR [rbp+0x120]
  403486:	cmp    DWORD PTR [rbp+0x128],eax
  40348c:	jg     0x404ded
  403492:	mov    rax,QWORD PTR [rbp+0x48]
  403496:	lea    r8,[rax*8+0x0]
  40349e:	xor    eax,eax
  4034a0:	cmp    QWORD PTR [rbp+0x50],0x1
  4034a5:	jbe    0x4034e3
  4034a7:	mov    r11,QWORD PTR [rbp+0x38]
  4034ab:	mov    rbx,QWORD PTR [rbp+0x30]
  4034af:	nop
  4034b0:	lea    rdx,[rip+0x23ce1]        # 0x427198
  4034b7:	mov    QWORD PTR [rbx+rax*1+0x8],rdx
  4034bc:	mov    QWORD PTR [r11+rax*1+0x8],rdx
  4034c1:	mov    QWORD PTR [r12+rax*1+0x8],rdx
  4034c6:	mov    QWORD PTR [rdi+rax*1+0x8],rdx
  4034cb:	add    rax,0x8
  4034cf:	lea    rcx,[r15+rax*1]
  4034d3:	movzx  edx,BYTE PTR [rcx]
  4034d6:	or     edx,0x3
  4034d9:	and    edx,0xffffffe3
  4034dc:	cmp    rax,r8
  4034df:	mov    BYTE PTR [rcx],dl
  4034e1:	jne    0x4034b0
  4034e3:	mov    r11d,DWORD PTR [rbp+0x120]
  4034ea:	test   r11d,r11d
  4034ed:	jne    0x4046bc
  4034f3:	cmp    QWORD PTR [rbp+0x108],0x0
  4034fb:	je     0x4046bc
  403501:	mov    eax,DWORD PTR [rbp+0x110]
  403507:	mov    r10,QWORD PTR [rbp+0x108]
  40350e:	mov    QWORD PTR [rbp+0x78],0x0
  403516:	mov    QWORD PTR [rbp+0x20],0x0
  40351e:	mov    DWORD PTR [rbp+0x110],0x0
  403528:	mov    QWORD PTR [rbp+0x108],0x0
  403533:	mov    DWORD PTR [rbp+0x120],eax
  403539:	xor    eax,eax
  40353b:	movsxd rdx,DWORD PTR [rbp+0x120]
  403542:	cmp    DWORD PTR [rbp+0x110],r9d
  403549:	lea    rbx,[r10+rdx*1]
  40354d:	mov    QWORD PTR [rbp+0x18],rbx
  403551:	jl     0x4047b2
  403557:	add    r9,QWORD PTR [rbp+0x108]
  40355e:	test   al,al
  403560:	movsxd rax,DWORD PTR [rbp+0x128]
  403567:	mov    QWORD PTR [rbp+0x88],r10
  40356e:	mov    QWORD PTR [rbp+0x68],r9
  403572:	mov    QWORD PTR [rbp-0x18],rax
  403576:	je     0x4047dc
  40357c:	mov    r11,rax
  40357f:	mov    rax,QWORD PTR [rbp+0x68]
  403583:	add    r11,QWORD PTR [rbp+0x108]
  40358a:	mov    QWORD PTR [rbp+0x98],rax
  403591:	mov    rax,QWORD PTR [rbp+0x48]
  403595:	xor    ebx,ebx
  403597:	mov    DWORD PTR [rbp+0x60],0x5
  40359e:	mov    DWORD PTR [rbp+0x70],0x0
  4035a5:	mov    QWORD PTR [rbp+0x58],0x0
  4035ad:	mov    r9d,0x100
  4035b3:	mov    DWORD PTR [rbp+0x44],0x0
  4035ba:	mov    r13d,0x101
  4035c0:	mov    QWORD PTR [rbp-0x10],0x0
  4035c8:	shl    rax,0x3
  4035cc:	mov    QWORD PTR [rbp-0x8],rax
  4035d0:	lea    rax,[r10-0x1]
  4035d4:	mov    QWORD PTR [rbp+0x10],rax
  4035d8:	lea    rax,[rbp+0xa8]
  4035df:	mov    QWORD PTR [rbp-0x30],rax
  4035e3:	cmp    r14,QWORD PTR [rbp+0x90]
  4035ea:	je     0x4036a0
  4035f0:	movzx  edx,BYTE PTR [r14]
  4035f4:	lea    rax,[r14+0x1]
  4035f8:	mov    QWORD PTR [rbp+0x80],rax
  4035ff:	cmp    dl,0x1d
  403602:	ja     0x404931
  403608:	lea    rcx,[rip+0x1f6a1]        # 0x422cb0
  40360f:	movzx  eax,dl
  403612:	movsxd rax,DWORD PTR [rcx+rax*4]
  403616:	add    rax,rcx
  403619:	jmp    rax
  40361b:	movsxd r8,r8d
  40361e:	mov    r11,QWORD PTR [rbp-0x38]
  403622:	add    rdx,r8
  403625:	cmp    QWORD PTR [rbp+0x90],rax
  40362c:	mov    QWORD PTR [rbp+0xa8],rdx
  403633:	je     0x403a2e
  403639:	movzx  ecx,BYTE PTR [rax]
  40363c:	cmp    cl,0x2
  40363f:	je     0x404b5e
  403645:	cmp    cl,0xa
  403648:	jne    0x40365c
  40364a:	mov    r8,QWORD PTR [rbp+0x100]
  403651:	cmp    BYTE PTR [r8+0x30],0x0
  403656:	js     0x404e9c
  40365c:	cmp    cl,0x4
  40365f:	je     0x404f32
  403665:	cmp    BYTE PTR [r14],0x11
  403669:	je     0x403a32
  40366f:	mov    BYTE PTR [r14],0xd
  403673:	mov    rcx,QWORD PTR [rbp+0x80]
  40367a:	movsx  eax,BYTE PTR [rcx+0x1]
  40367e:	movzx  edx,BYTE PTR [rcx]
  403681:	shl    eax,0x8
  403684:	add    eax,edx
  403686:	cdqe   
  403688:	lea    r14,[rcx+rax*1+0x2]
  40368d:	cmp    r14,QWORD PTR [rbp+0x90]
  403694:	jne    0x4035f0
  40369a:	nop    WORD PTR [rax+rax*1+0x0]
  4036a0:	cmp    r11,QWORD PTR [rbp+0x88]
  4036a7:	je     0x40386d
  4036ad:	mov    r8,QWORD PTR [rbp+0x58]
  4036b1:	mov    rdx,QWORD PTR [rbp+0x78]
  4036b5:	mov    r9d,DWORD PTR [rbp+0x110]
  4036bc:	cmp    r8,rdx
  4036bf:	setbe  dl
  4036c2:	cmp    QWORD PTR [rbp+0x108],r8
  4036c9:	setbe  al
  4036cc:	and    eax,edx
  4036ce:	test   r9d,r9d
  4036d1:	mov    r9,QWORD PTR [rbp+0x68]
  4036d5:	setne  dl
  4036d8:	and    edx,eax
  4036da:	xor    edx,0x1
  4036dd:	cmp    QWORD PTR [rbp+0x98],r9
  4036e4:	sete   cl
  4036e7:	cmp    dl,cl
  4036e9:	je     0x4047f7
  4036ef:	cmp    r11,r8
  4036f2:	seta   dl
  4036f5:	test   ebx,ebx
  4036f7:	je     0x40518e
  4036fd:	test   dl,dl
  4036ff:	jne    0x40370c
  403701:	mov    ecx,DWORD PTR [rbp+0x44]
  403704:	test   ecx,ecx
  403706:	jne    0x403e18
  40370c:	cmp    QWORD PTR [rbp+0x50],0x1
  403711:	jbe    0x40373e
  403713:	mov    rcx,QWORD PTR [rbp+0x8]
  403717:	mov    r8,QWORD PTR [rbp+0x0]
  40371b:	xor    eax,eax
  40371d:	mov    r9,QWORD PTR [rbp-0x8]
  403721:	mov    rdx,QWORD PTR [rdi+rax*1+0x8]
  403726:	mov    QWORD PTR [rcx+rax*1+0x8],rdx
  40372b:	mov    rdx,QWORD PTR [r12+rax*1+0x8]
  403730:	mov    QWORD PTR [r8+rax*1+0x8],rdx
  403735:	add    rax,0x8
  403739:	cmp    rax,r9
  40373c:	jne    0x403721
  40373e:	mov    QWORD PTR [rbp+0x58],r11
  403742:	mov    DWORD PTR [rbp+0x44],0x1
  403749:	jmp    0x403e18
  40374e:	cmp    r11,QWORD PTR [rbp+0x98]
  403755:	jne    0x403789
  403757:	cmp    QWORD PTR [rbp+0x88],r11
  40375e:	je     0x404df7
  403764:	cmp    r10,QWORD PTR [rbp+0x88]
  40376b:	mov    QWORD PTR [rbp+0x98],r10
  403772:	mov    r11,r10
  403775:	je     0x403e10
  40377b:	mov    rax,QWORD PTR [rbp+0x88]
  403782:	mov    QWORD PTR [rbp+0x98],rax
  403789:	mov    rax,QWORD PTR [rbp+0x100]
  403790:	mov    edx,DWORD PTR [rax+0x10]
  403793:	test   dl,0x40
  403796:	jne    0x404da3
  40379c:	mov    rcx,QWORD PTR [rbp+0x28]
  4037a0:	test   rcx,rcx
  4037a3:	je     0x405229
  4037a9:	movzx  eax,BYTE PTR [r11]
  4037ad:	movzx  eax,BYTE PTR [rcx+rax*1]
  4037b1:	cmp    al,0xa
  4037b3:	je     0x403e10
  4037b9:	and    edx,0x80
  4037bf:	je     0x4037c9
  4037c1:	test   al,al
  4037c3:	je     0x403e10
  4037c9:	mov    eax,DWORD PTR [rbp+0x70]
  4037cc:	test   eax,eax
  4037ce:	jne    0x4037ee
  4037d0:	cmp    r13d,r9d
  4037d3:	mov    eax,r13d
  4037d6:	ja     0x4037e7
  4037d8:	mov    edx,eax
  4037da:	add    eax,0x1
  4037dd:	or     BYTE PTR [r15+rdx*8],0x18
  4037e2:	cmp    r9d,eax
  4037e5:	jae    0x4037d8
  4037e7:	mov    DWORD PTR [rbp+0x70],0x1
  4037ee:	add    r11,0x1
  4037f2:	mov    r14,QWORD PTR [rbp+0x80]
  4037f9:	jmp    0x4035e3
  4037fe:	mov    eax,DWORD PTR [rbp+0x44]
  403801:	test   eax,eax
  403803:	je     0x404ded
  403809:	mov    r11,QWORD PTR [rbp+0x58]
  40380d:	mov    rsi,QWORD PTR [rbp+0x78]
  403811:	cmp    r11,rsi
  403814:	setbe  dl
  403817:	cmp    QWORD PTR [rbp+0x108],r11
  40381e:	setbe  al
  403821:	and    eax,edx
  403823:	test   al,al
  403825:	mov    rax,QWORD PTR [rbp+0x88]
  40382c:	cmovne rax,QWORD PTR [rbp+0x68]
  403831:	cmp    QWORD PTR [rbp+0x50],0x1
  403836:	mov    QWORD PTR [rbp+0x98],rax
  40383d:	jbe    0x40386d
  40383f:	mov    rcx,QWORD PTR [rbp+0x8]
  403843:	mov    r8,QWORD PTR [rbp+0x0]
  403847:	xor    eax,eax
  403849:	mov    r9,QWORD PTR [rbp-0x8]
  40384d:	nop    DWORD PTR [rax]
  403850:	mov    rdx,QWORD PTR [rcx+rax*1+0x8]
  403855:	mov    QWORD PTR [rdi+rax*1+0x8],rdx
  40385a:	mov    rdx,QWORD PTR [r8+rax*1+0x8]
  40385f:	mov    QWORD PTR [r12+rax*1+0x8],rdx
  403864:	add    rax,0x8
  403868:	cmp    r9,rax
  40386b:	jne    0x403850
  40386d:	cmp    QWORD PTR [rbp+0x130],0x0
  403875:	je     0x40477b
  40387b:	mov    rax,QWORD PTR [rbp+0x100]
  403882:	movzx  eax,BYTE PTR [rax+0x30]
  403886:	test   al,0x10
  403888:	jne    0x40477b
  40388e:	and    eax,0x6
  403891:	je     0x404ab7
  403897:	cmp    al,0x2
  403899:	mov    rax,QWORD PTR [rbp+0x130]
  4038a0:	je     0x404e0a
  4038a6:	mov    ebx,DWORD PTR [rax]
  4038a8:	test   ebx,ebx
  4038aa:	je     0x40477b
  4038b0:	mov    rax,QWORD PTR [rbp+0x130]
  4038b7:	mov    rdx,r11
  4038ba:	mov    rbx,QWORD PTR [rbp+0x98]
  4038c1:	sub    rdx,r10
  4038c4:	mov    rcx,QWORD PTR [rbp+0x68]
  4038c8:	add    edx,DWORD PTR [rbp+0x110]
  4038ce:	mov    rsi,QWORD PTR [rax+0x8]
  4038d2:	mov    eax,DWORD PTR [rbp+0x128]
  4038d8:	mov    DWORD PTR [rsi],eax
  4038da:	mov    rax,QWORD PTR [rbp+0x130]
  4038e1:	mov    r13,QWORD PTR [rax+0x10]
  4038e5:	mov    eax,r11d
  4038e8:	sub    eax,DWORD PTR [rbp+0x108]
  4038ee:	cmp    rbx,rcx
  4038f1:	mov    rbx,QWORD PTR [rbp+0x50]
  4038f5:	cmovne eax,edx
  4038f8:	mov    DWORD PTR [r13+0x0],eax
  4038fc:	mov    rax,QWORD PTR [rbp+0x130]
  403903:	mov    eax,DWORD PTR [rax]
  403905:	cmp    rax,rbx
  403908:	mov    rdx,rax
  40390b:	cmova  rax,rbx
  40390f:	cmp    rax,0x1
  403913:	jbe    0x40473f
  403919:	lea    rax,[rip+0x23878]        # 0x427198
  403920:	mov    QWORD PTR [rbp+0x80],r11
  403927:	mov    ecx,0x4
  40392c:	mov    r8d,0x2
  403932:	mov    QWORD PTR [rbp+0x88],r12
  403939:	mov    r9,rbx
  40393c:	mov    QWORD PTR [rbp+0x90],rax
  403943:	mov    r11d,DWORD PTR [rbp+0x110]
  40394a:	jmp    0x4039b6
  40394c:	nop    DWORD PTR [rax+0x0]
  403950:	test   bl,bl
  403952:	je     0x403a08
  403958:	sub    rax,QWORD PTR [rbp+0x108]
  40395f:	lea    r12,[r13+rcx*1+0x0]
  403964:	mov    DWORD PTR [r15],eax
  403967:	cmp    QWORD PTR [rbp+0x108],rdx
  40396e:	ja     0x403a1e
  403974:	cmp    rdx,QWORD PTR [rbp+0x78]
  403978:	mov    eax,edx
  40397a:	setbe  bl
  40397d:	sub    eax,DWORD PTR [rbp+0x108]
  403983:	test   bl,bl
  403985:	je     0x403a1e
  40398b:	mov    DWORD PTR [r12],eax
  40398f:	mov    rax,QWORD PTR [rbp+0x130]
  403996:	add    rcx,0x4
  40399a:	lea    rbx,[r8+0x1]
  40399e:	mov    eax,DWORD PTR [rax]
  4039a0:	cmp    rax,r9
  4039a3:	mov    rdx,rax
  4039a6:	cmova  rax,r9
  4039aa:	cmp    rax,r8
  4039ad:	jbe    0x404738
  4039b3:	mov    r8,rbx
  4039b6:	mov    rax,QWORD PTR [rdi+rcx*2]
  4039ba:	cmp    rax,QWORD PTR [rbp+0x90]
  4039c1:	je     0x404c44
  4039c7:	mov    rbx,QWORD PTR [rbp+0x88]
  4039ce:	mov    rdx,QWORD PTR [rbx+rcx*2]
  4039d2:	lea    rbx,[rip+0x237bf]        # 0x427198
  4039d9:	cmp    rdx,rbx
  4039dc:	je     0x404c44
  4039e2:	test   r11d,r11d
  4039e5:	lea    r15,[rsi+rcx*1]
  4039e9:	setne  bl
  4039ec:	cmp    QWORD PTR [rbp+0x108],rax
  4039f3:	setbe  r14b
  4039f7:	cmp    rax,QWORD PTR [rbp+0x78]
  4039fb:	setbe  r12b
  4039ff:	test   r14b,r12b
  403a02:	jne    0x403950
  403a08:	sub    rax,r10
  403a0b:	lea    r12,[r13+rcx*1+0x0]
  403a10:	add    eax,r11d
  403a13:	test   bl,bl
  403a15:	mov    DWORD PTR [r15],eax
  403a18:	jne    0x403967
  403a1e:	sub    rdx,r10
  403a21:	lea    eax,[r11+rdx*1]
  403a25:	jmp    0x40398b
  403a2a:	mov    r9d,DWORD PTR [rbp-0x38]
  403a2e:	mov    BYTE PTR [r14],0x11
  403a32:	lea    eax,[rbx-0x3]
  403a35:	lea    ecx,[rbx-0x4]
  403a38:	mov    eax,DWORD PTR [rsi+rax*8]
  403a3b:	mov    r8d,DWORD PTR [rsi+rcx*8]
  403a3f:	cmp    eax,r8d
  403a42:	jb     0x405180
  403a48:	mov    QWORD PTR [rbp+0x70],r11
  403a4c:	sub    ebx,0x7
  403a4f:	mov    r11,QWORD PTR [rbp-0x20]
  403a53:	mov    r14,QWORD PTR [rbp-0x28]
  403a57:	jmp    0x403a62
  403a59:	nop    DWORD PTR [rax+0x0]
  403a60:	mov    ebx,edx
  403a62:	lea    ecx,[rbx+0x2]
  403a65:	mov    edx,eax
  403a67:	sub    eax,0x1
  403a6a:	cmp    r8d,eax
  403a6d:	mov    rcx,QWORD PTR [rsi+rcx*8]
  403a71:	mov    QWORD PTR [r14+rdx*8],rcx
  403a75:	mov    ecx,ebx
  403a77:	mov    rcx,QWORD PTR [rsi+rcx*8]
  403a7b:	mov    QWORD PTR [r11+rdx*8],rcx
  403a7f:	lea    edx,[rbx-0x3]
  403a82:	jbe    0x403a60
  403a84:	mov    r11,QWORD PTR [rbp+0x70]
  403a88:	mov    DWORD PTR [rbp+0x70],0x0
  403a8f:	jmp    0x403673
  403a94:	jne    0x4037f2
  403a9a:	mov    BYTE PTR [r14+0x3],0x0
  403a9f:	mov    BYTE PTR [r14+0x4],0x0
  403aa4:	movsx  eax,BYTE PTR [r14+0x2]
  403aa9:	movzx  edx,BYTE PTR [r14+0x1]
  403aae:	shl    eax,0x8
  403ab1:	add    eax,edx
  403ab3:	mov    rdx,QWORD PTR [rbp+0x90]
  403aba:	mov    DWORD PTR [rbp-0x38],eax
  403abd:	lea    rax,[r14+0x3]
  403ac1:	cmp    rdx,rax
  403ac4:	mov    QWORD PTR [rbp+0x80],rax
  403acb:	mov    QWORD PTR [rbp+0xa8],rax
  403ad2:	jbe    0x403b10
  403ad4:	movzx  eax,BYTE PTR [r14+0x3]
  403ad9:	test   al,al
  403adb:	jne    0x404c59
  403ae1:	add    r14,0x4
  403ae5:	mov    rcx,rdx
  403ae8:	jmp    0x403b01
  403aea:	nop    WORD PTR [rax+rax*1+0x0]
  403af0:	add    r14,0x1
  403af4:	movzx  eax,BYTE PTR [r14-0x1]
  403af9:	test   al,al
  403afb:	jne    0x404c60
  403b01:	cmp    r14,rcx
  403b04:	mov    rdx,r14
  403b07:	mov    QWORD PTR [rbp+0xa8],r14
  403b0e:	jne    0x403af0
  403b10:	lea    eax,[r9+0x1]
  403b14:	mov    r8d,DWORD PTR [rbp+0x60]
  403b18:	mov    rdx,rsi
  403b1b:	sub    eax,r13d
  403b1e:	lea    r14d,[rax+rax*2+0x4]
  403b23:	mov    esi,r14d
  403b26:	mov    eax,r8d
  403b29:	sub    eax,ebx
  403b2b:	cmp    eax,esi
  403b2d:	jb     0x40480a
  403b33:	cmp    r13d,r9d
  403b36:	mov    DWORD PTR [rbp+0x60],r8d
  403b3a:	mov    rsi,rdx
  403b3d:	ja     0x403b70
  403b3f:	mov    eax,r13d
  403b42:	mov    ecx,eax
  403b44:	mov    edx,ebx
  403b46:	add    eax,0x1
  403b49:	mov    r8,QWORD PTR [rdi+rcx*8]
  403b4d:	mov    r14,QWORD PTR [r12+rcx*8]
  403b51:	mov    rcx,QWORD PTR [r15+rcx*8]
  403b55:	mov    QWORD PTR [rsi+rdx*8],r8
  403b59:	lea    edx,[rbx+0x2]
  403b5c:	lea    r8d,[rbx+0x1]
  403b60:	add    ebx,0x3
  403b63:	cmp    eax,r9d
  403b66:	mov    QWORD PTR [rsi+r8*8],r14
  403b6a:	mov    QWORD PTR [rsi+rdx*8],rcx
  403b6e:	jbe    0x403b42
  403b70:	mov    eax,ebx
  403b72:	movsxd rdx,DWORD PTR [rbp-0x38]
  403b76:	mov    r8,QWORD PTR [rbp+0x80]
  403b7d:	mov    DWORD PTR [rsi+rax*8],r13d
  403b81:	lea    eax,[rbx+0x1]
  403b84:	lea    ecx,[rbx+0x2]
  403b87:	mov    DWORD PTR [rsi+rax*8],r9d
  403b8b:	lea    eax,[rbx+0x3]
  403b8e:	mov    r14,r8
  403b91:	add    rdx,r8
  403b94:	add    ebx,0x4
  403b97:	mov    QWORD PTR [rsi+rcx*8],rdx
  403b9b:	mov    QWORD PTR [rsi+rax*8],r11
  403b9f:	jmp    0x4035e3
  403ba4:	mov    r14d,DWORD PTR [rbp+0x110]
  403bab:	mov    rax,r10
  403bae:	test   r14d,r14d
  403bb1:	cmovne rax,QWORD PTR [rbp+0x108]
  403bb9:	cmp    rax,r11
  403bbc:	je     0x403e10
  403bc2:	mov    r8d,DWORD PTR [rbp+0x120]
  403bc9:	test   r8d,r8d
  403bcc:	je     0x403e10
  403bd2:	cmp    r11,QWORD PTR [rbp+0x18]
  403bd6:	je     0x403e10
  403bdc:	lea    rax,[r11-0x1]
  403be0:	cmp    QWORD PTR [rbp+0x78],rax
  403be4:	je     0x40528f
  403bea:	cmp    r11,r10
  403bed:	je     0x405282
  403bf3:	movzx  edx,BYTE PTR [r11-0x1]
  403bf8:	lea    rax,[rip+0x235c1]        # 0x4271c0
  403bff:	cmp    BYTE PTR [rax+rdx*1],0x1
  403c03:	sete   cl
  403c06:	cmp    r11,QWORD PTR [rbp+0x78]
  403c0a:	je     0x405279
  403c10:	cmp    r11,QWORD PTR [rbp+0x10]
  403c14:	je     0x40526c
  403c1a:	movzx  edx,BYTE PTR [r11]
  403c1e:	cmp    BYTE PTR [rax+rdx*1],0x1
  403c22:	sete   al
  403c25:	cmp    cl,al
  403c27:	jne    0x403e10
  403c2d:	jmp    0x4037f2
  403c32:	movsx  eax,BYTE PTR [r14+0x2]
  403c37:	movzx  edx,BYTE PTR [r14+0x1]
  403c3c:	add    r14,0x3
  403c40:	mov    r8d,DWORD PTR [rbp+0x60]
  403c44:	shl    eax,0x8
  403c47:	add    eax,edx
  403c49:	mov    rdx,rsi
  403c4c:	mov    DWORD PTR [rbp-0x38],eax
  403c4f:	lea    eax,[r9+0x1]
  403c53:	sub    eax,r13d
  403c56:	lea    eax,[rax+rax*2+0x4]
  403c5a:	mov    DWORD PTR [rbp+0x80],eax
  403c60:	mov    eax,r8d
  403c63:	sub    eax,ebx
  403c65:	cmp    eax,DWORD PTR [rbp+0x80]
  403c6b:	jb     0x404936
  403c71:	cmp    r13d,r9d
  403c74:	mov    DWORD PTR [rbp+0x60],r8d
  403c78:	mov    rsi,rdx
  403c7b:	ja     0x403cc5
  403c7d:	mov    eax,r13d
  403c80:	mov    QWORD PTR [rbp+0x118],r10
  403c87:	nop    WORD PTR [rax+rax*1+0x0]
  403c90:	mov    ecx,eax
  403c92:	mov    edx,ebx
  403c94:	add    eax,0x1
  403c97:	mov    r8,QWORD PTR [rdi+rcx*8]
  403c9b:	mov    r10,QWORD PTR [r12+rcx*8]
  403c9f:	mov    rcx,QWORD PTR [r15+rcx*8]
  403ca3:	mov    QWORD PTR [rsi+rdx*8],r8
  403ca7:	lea    edx,[rbx+0x2]
  403caa:	lea    r8d,[rbx+0x1]
  403cae:	add    ebx,0x3
  403cb1:	cmp    r9d,eax
  403cb4:	mov    QWORD PTR [rsi+r8*8],r10
  403cb8:	mov    QWORD PTR [rsi+rdx*8],rcx
  403cbc:	jae    0x403c90
  403cbe:	mov    r10,QWORD PTR [rbp+0x118]
  403cc5:	mov    eax,ebx
  403cc7:	lea    edx,[rbx+0x3]
  403cca:	lea    ecx,[rbx+0x2]
  403ccd:	mov    DWORD PTR [rsi+rax*8],r13d
  403cd1:	lea    eax,[rbx+0x1]
  403cd4:	add    ebx,0x4
  403cd7:	mov    DWORD PTR [rsi+rax*8],r9d
  403cdb:	movsxd rax,DWORD PTR [rbp-0x38]
  403cdf:	add    rax,r14
  403ce2:	mov    QWORD PTR [rsi+rcx*8],rax
  403ce6:	mov    eax,edx
  403ce8:	mov    QWORD PTR [rsi+rax*8],0x0
  403cf0:	jmp    0x4035e3
  403cf5:	movsx  eax,BYTE PTR [r14+0x4]
  403cfa:	movzx  edx,BYTE PTR [r14+0x3]
  403cff:	shl    eax,0x8
  403d02:	add    eax,edx
  403d04:	cmp    eax,0x0
  403d07:	jle    0x403a94
  403d0d:	sub    eax,0x1
  403d10:	add    r14,0x5
  403d14:	mov    BYTE PTR [r14-0x2],al
  403d18:	sar    eax,0x8
  403d1b:	mov    BYTE PTR [r14-0x1],al
  403d1f:	jmp    0x4035e3
  403d24:	lea    eax,[r9+0x1]
  403d28:	mov    r8d,DWORD PTR [rbp+0x60]
  403d2c:	mov    rdx,rsi
  403d2f:	sub    eax,r13d
  403d32:	lea    r14d,[rax+rax*2+0x4]
  403d37:	mov    eax,r8d
  403d3a:	sub    eax,ebx
  403d3c:	cmp    eax,r14d
  403d3f:	jb     0x404a0c
  403d45:	cmp    r13d,r9d
  403d48:	mov    DWORD PTR [rbp+0x60],r8d
  403d4c:	mov    rsi,rdx
  403d4f:	ja     0x403d82
  403d51:	mov    eax,r13d
  403d54:	mov    ecx,eax
  403d56:	mov    edx,ebx
  403d58:	add    eax,0x1
  403d5b:	mov    r8,QWORD PTR [rdi+rcx*8]
  403d5f:	mov    r14,QWORD PTR [r12+rcx*8]
  403d63:	mov    rcx,QWORD PTR [r15+rcx*8]
  403d67:	mov    QWORD PTR [rsi+rdx*8],r8
  403d6b:	lea    edx,[rbx+0x2]
  403d6e:	lea    r8d,[rbx+0x1]
  403d72:	add    ebx,0x3
  403d75:	cmp    r9d,eax
  403d78:	mov    QWORD PTR [rsi+r8*8],r14
  403d7c:	mov    QWORD PTR [rsi+rdx*8],rcx
  403d80:	jae    0x403d54
  403d82:	mov    eax,ebx
  403d84:	lea    edx,[rbx+0x2]
  403d87:	mov    DWORD PTR [rsi+rax*8],r13d
  403d8b:	lea    eax,[rbx+0x1]
  403d8e:	mov    DWORD PTR [rsi+rax*8],r9d
  403d92:	lea    eax,[rbx+0x3]
  403d95:	mov    QWORD PTR [rsi+rdx*8],0x0
  403d9d:	add    ebx,0x4
  403da0:	mov    QWORD PTR [rsi+rax*8],0x0
  403da8:	jmp    0x403673
  403dad:	movsx  eax,BYTE PTR [r14+0x2]
  403db2:	movzx  r8d,BYTE PTR [r14+0x1]
  403db7:	lea    rdx,[r14+0x3]
  403dbb:	mov    QWORD PTR [rbp-0x38],r11
  403dbf:	mov    r11,QWORD PTR [rbp+0x90]
  403dc6:	shl    eax,0x8
  403dc9:	add    r8d,eax
  403dcc:	mov    rax,rdx
  403dcf:	jmp    0x403dea
  403dd1:	lea    rcx,[rax+0x6]
  403dd5:	cmp    r11,rcx
  403dd8:	jbe    0x40361b
  403dde:	cmp    BYTE PTR [rax],0x13
  403de1:	jne    0x40361b
  403de7:	mov    rax,rcx
  403dea:	lea    rcx,[rax+0x2]
  403dee:	cmp    r11,rcx
  403df1:	jbe    0x403dd1
  403df3:	movzx  ecx,BYTE PTR [rax]
  403df6:	sub    ecx,0x6
  403df9:	cmp    cl,0x1
  403dfc:	ja     0x403dd1
  403dfe:	lea    rcx,[rax+0x3]
  403e02:	jmp    0x403de7
  403e04:	cmp    r11,QWORD PTR [rbp+0x18]
  403e08:	je     0x4037f2
  403e0e:	xchg   ax,ax
  403e10:	test   ebx,ebx
  403e12:	je     0x4037fe
  403e18:	lea    eax,[rbx-0x1]
  403e1b:	lea    edx,[rbx-0x4]
  403e1e:	mov    rax,QWORD PTR [rsi+rax*8]
  403e22:	mov    r13d,DWORD PTR [rsi+rdx*8]
  403e26:	test   rax,rax
  403e29:	cmovne r11,rax
  403e2d:	lea    eax,[rbx-0x2]
  403e30:	mov    r14,QWORD PTR [rsi+rax*8]
  403e34:	lea    eax,[rbx-0x3]
  403e37:	mov    r9d,DWORD PTR [rsi+rax*8]
  403e3b:	cmp    r9d,r13d
  403e3e:	jb     0x404731
  403e44:	sub    ebx,0x7
  403e47:	mov    eax,r9d
  403e4a:	jmp    0x403e52
  403e4c:	nop    DWORD PTR [rax+0x0]
  403e50:	mov    ebx,edx
  403e52:	lea    ecx,[rbx+0x2]
  403e55:	mov    edx,eax
  403e57:	sub    eax,0x1
  403e5a:	cmp    r13d,eax
  403e5d:	mov    rcx,QWORD PTR [rsi+rcx*8]
  403e61:	mov    QWORD PTR [r15+rdx*8],rcx
  403e65:	lea    ecx,[rbx+0x1]
  403e68:	mov    rcx,QWORD PTR [rsi+rcx*8]
  403e6c:	mov    QWORD PTR [r12+rdx*8],rcx
  403e70:	mov    ecx,ebx
  403e72:	mov    rcx,QWORD PTR [rsi+rcx*8]
  403e76:	mov    QWORD PTR [rdi+rdx*8],rcx
  403e7a:	lea    edx,[rbx-0x3]
  403e7d:	jbe    0x403e50
  403e7f:	test   r14,r14
  403e82:	je     0x403e10
  403e84:	cmp    QWORD PTR [rbp+0x90],r14
  403e8b:	jbe    0x403ed2
  403e8d:	movzx  eax,BYTE PTR [r14]
  403e91:	cmp    al,0x12
  403e93:	ja     0x4046f3
  403e99:	cmp    al,0x11
  403e9b:	jae    0x403ea1
  403e9d:	cmp    al,0xd
  403e9f:	jne    0x403ed2
  403ea1:	lea    rax,[r14+0x1]
  403ea5:	mov    QWORD PTR [rbp+0xa8],rax
  403eac:	movsx  eax,BYTE PTR [r14+0x2]
  403eb1:	movzx  edx,BYTE PTR [r14+0x1]
  403eb6:	shl    eax,0x8
  403eb9:	add    eax,edx
  403ebb:	cdqe   
  403ebd:	lea    rax,[r14+rax*1+0x3]
  403ec2:	mov    QWORD PTR [rbp+0xa8],rax
  403ec9:	cmp    BYTE PTR [rax],0xf
  403ecc:	je     0x403e10
  403ed2:	cmp    r11,QWORD PTR [rbp+0x78]
  403ed6:	ja     0x404190
  403edc:	cmp    QWORD PTR [rbp+0x108],r11
  403ee3:	ja     0x404190
  403ee9:	mov    rax,QWORD PTR [rbp+0x68]
  403eed:	mov    DWORD PTR [rbp+0x70],0x0
  403ef4:	mov    QWORD PTR [rbp+0x98],rax
  403efb:	jmp    0x4035e3
  403f00:	mov    eax,DWORD PTR [rbp+0x110]
  403f06:	test   eax,eax
  403f08:	mov    rax,r10
  403f0b:	cmovne rax,QWORD PTR [rbp+0x108]
  403f13:	cmp    r11,rax
  403f16:	je     0x4037f2
  403f1c:	mov    eax,DWORD PTR [rbp+0x120]
  403f22:	test   eax,eax
  403f24:	jne    0x403e10
  403f2a:	jmp    0x4037f2
  403f2f:	mov    eax,DWORD PTR [rbp+0x110]
  403f35:	test   eax,eax
  403f37:	mov    rax,r10
  403f3a:	cmovne rax,QWORD PTR [rbp+0x108]
  403f42:	cmp    rax,r11
  403f45:	je     0x4037f2
  403f4b:	mov    eax,DWORD PTR [rbp+0x120]
  403f51:	test   eax,eax
  403f53:	je     0x4037f2
  403f59:	cmp    r11,QWORD PTR [rbp+0x18]
  403f5d:	je     0x4037f2
  403f63:	lea    rax,[r11-0x1]
  403f67:	cmp    QWORD PTR [rbp+0x78],rax
  403f6b:	je     0x405263
  403f71:	cmp    r11,r10
  403f74:	je     0x405256
  403f7a:	movzx  edx,BYTE PTR [r11-0x1]
  403f7f:	lea    rax,[rip+0x2323a]        # 0x4271c0
  403f86:	cmp    BYTE PTR [rax+rdx*1],0x1
  403f8a:	sete   cl
  403f8d:	cmp    r11,QWORD PTR [rbp+0x78]
  403f91:	je     0x40524d
  403f97:	cmp    r11,QWORD PTR [rbp+0x10]
  403f9b:	je     0x405240
  403fa1:	movzx  edx,BYTE PTR [r11]
  403fa5:	cmp    BYTE PTR [rax+rdx*1],0x1
  403fa9:	mov    r14,QWORD PTR [rbp+0x80]
  403fb0:	sete   al
  403fb3:	cmp    cl,al
  403fb5:	jne    0x4035e3
  403fbb:	jmp    0x403e10
  403fc0:	cmp    r11,QWORD PTR [rbp+0x18]
  403fc4:	je     0x404fcc
  403fca:	cmp    r11,QWORD PTR [rbp+0x78]
  403fce:	je     0x404fc0
  403fd4:	cmp    BYTE PTR [r11],0xa
  403fd8:	sete   al
  403fdb:	test   al,al
  403fdd:	je     0x403e10
  403fe3:	jmp    0x40401a
  403fe5:	mov    edx,DWORD PTR [rbp+0x110]
  403feb:	mov    rax,r10
  403fee:	test   edx,edx
  403ff0:	cmovne rax,QWORD PTR [rbp+0x108]
  403ff8:	cmp    r11,rax
  403ffb:	je     0x404aa1
  404001:	mov    eax,DWORD PTR [rbp+0x120]
  404007:	test   eax,eax
  404009:	je     0x404aa1
  40400f:	cmp    BYTE PTR [r11-0x1],0xa
  404014:	jne    0x403e10
  40401a:	mov    rax,QWORD PTR [rbp+0x100]
  404021:	cmp    BYTE PTR [rax+0x30],0x0
  404025:	js     0x4037f2
  40402b:	jmp    0x403e10
  404030:	movzx  edx,BYTE PTR [r14+0x1]
  404035:	mov    rax,QWORD PTR [rdi+rdx*8]
  404039:	mov    rcx,rax
  40403c:	mov    QWORD PTR [rbp-0x40],rax
  404040:	lea    rax,[rip+0x23151]        # 0x427198
  404047:	cmp    rcx,rax
  40404a:	je     0x403e10
  404050:	mov    rdx,QWORD PTR [r12+rdx*8]
  404054:	cmp    rdx,rax
  404057:	mov    QWORD PTR [rbp-0x38],rdx
  40405b:	je     0x403e10
  404061:	mov    r8d,DWORD PTR [rbp+0x110]
  404068:	mov    rax,rcx
  40406b:	test   r8d,r8d
  40406e:	setne  dl
  404071:	cmp    QWORD PTR [rbp+0x108],rcx
  404078:	setbe  cl
  40407b:	cmp    rax,QWORD PTR [rbp+0x78]
  40407f:	setbe  al
  404082:	test   cl,al
  404084:	je     0x404c20
  40408a:	test   dl,dl
  40408c:	je     0x404c28
  404092:	xor    edx,edx
  404094:	mov    r8,QWORD PTR [rbp-0x38]
  404098:	cmp    QWORD PTR [rbp+0x108],r8
  40409f:	mov    DWORD PTR [rbp-0x48],r13d
  4040a3:	mov    r13,QWORD PTR [rbp-0x40]
  4040a7:	mov    QWORD PTR [rbp-0x40],r14
  4040ab:	setbe  cl
  4040ae:	cmp    r8,QWORD PTR [rbp+0x78]
  4040b2:	setbe  al
  4040b5:	and    eax,ecx
  4040b7:	cmp    al,dl
  4040b9:	mov    rdx,QWORD PTR [rbp+0x68]
  4040bd:	cmovne rdx,r8
  4040c1:	mov    QWORD PTR [rbp+0x80],rdx
  4040c8:	cmp    r13,QWORD PTR [rbp+0x80]
  4040cf:	je     0x404ea6
  4040d5:	cmp    r11,QWORD PTR [rbp+0x98]
  4040dc:	jne    0x404c95
  4040e2:	cmp    QWORD PTR [rbp+0x88],r11
  4040e9:	je     0x404df7
  4040ef:	cmp    r10,QWORD PTR [rbp+0x88]
  4040f6:	jne    0x404c84
  4040fc:	mov    QWORD PTR [rbp+0x98],r10
  404103:	mov    r11,r10
  404106:	jmp    0x403e10
  40410b:	movzx  eax,BYTE PTR [r14+0x1]
  404110:	mov    rdx,QWORD PTR [rbp+0x30]
  404114:	shl    rax,0x3
  404118:	add    rdx,rax
  40411b:	mov    QWORD PTR [rbp+0x80],rdx
  404122:	lea    rdx,[r15+rax*1]
  404126:	add    rax,r12
  404129:	mov    rcx,QWORD PTR [rax]
  40412c:	test   BYTE PTR [rdx],0x3
  40412f:	jne    0x404a85
  404135:	mov    r8,QWORD PTR [rbp+0x80]
  40413c:	and    BYTE PTR [rdx],0xfb
  40413f:	cmp    r13d,r9d
  404142:	mov    QWORD PTR [rax],r11
  404145:	movzx  edx,BYTE PTR [r14+0x1]
  40414a:	mov    QWORD PTR [r8],rcx
  40414d:	je     0x404169
  40414f:	mov    r9d,edx
  404152:	jmp    0x404163
  404154:	movzx  eax,r9b
  404158:	test   BYTE PTR [r15+rax*8],0x4
  40415d:	jne    0x404dc9
  404163:	sub    r9b,0x1
  404167:	jne    0x404154
  404169:	mov    r9d,0x100
  40416f:	mov    r13d,0x101
  404175:	cmp    r14,QWORD PTR [rbp-0x10]
  404179:	je     0x404d4b
  40417f:	test   BYTE PTR [r15+rdx*8],0x8
  404184:	je     0x404d4b
  40418a:	add    r14,0x3
  40418e:	xchg   ax,ax
  404190:	mov    DWORD PTR [rbp+0x70],0x0
  404197:	jmp    0x4035e3
  40419c:	mov    rax,QWORD PTR [rbp+0x80]
  4041a3:	mov    QWORD PTR [rbp+0xa8],rax
  4041aa:	movzx  eax,BYTE PTR [r14+0x1]
  4041af:	shl    rax,0x3
  4041b3:	lea    r9,[r15+rax*1]
  4041b7:	movzx  ecx,BYTE PTR [r9]
  4041bb:	and    ecx,0x3
  4041be:	cmp    cl,0x3
  4041c1:	je     0x404ed9
  4041c7:	mov    rdx,QWORD PTR [rbp+0x38]
  4041cb:	add    rdx,rax
  4041ce:	add    rax,rdi
  4041d1:	test   cl,cl
  4041d3:	mov    rcx,QWORD PTR [rax]
  4041d6:	je     0x4041e6
  4041d8:	lea    r8,[rip+0x22fb9]        # 0x427198
  4041df:	cmp    rcx,r8
  4041e2:	cmove  rcx,r11
  4041e6:	or     BYTE PTR [r9],0x4
  4041ea:	mov    QWORD PTR [rax],r11
  4041ed:	movzx  eax,BYTE PTR [r14+0x1]
  4041f2:	mov    QWORD PTR [rdx],rcx
  4041f5:	mov    DWORD PTR [rbp+0x70],0x0
  4041fc:	and    BYTE PTR [r15+rax*8],0xf7
  404201:	cmp    r13d,0x101
  404208:	movzx  r9d,BYTE PTR [r14+0x1]
  40420d:	cmove  r13d,r9d
  404211:	add    r14,0x3
  404215:	mov    QWORD PTR [rbp-0x10],r14
  404219:	jmp    0x4035e3
  40421e:	mov    r14d,DWORD PTR [rbp+0x110]
  404225:	mov    rax,r10
  404228:	test   r14d,r14d
  40422b:	cmovne rax,QWORD PTR [rbp+0x108]
  404233:	cmp    r11,rax
  404236:	je     0x403e10
  40423c:	mov    r8d,DWORD PTR [rbp+0x120]
  404243:	test   r8d,r8d
  404246:	je     0x403e10
  40424c:	lea    rax,[r11-0x1]
  404250:	cmp    QWORD PTR [rbp+0x78],rax
  404254:	je     0x4051f5
  40425a:	cmp    r11,r10
  40425d:	je     0x4051e8
  404263:	movzx  edx,BYTE PTR [r11-0x1]
  404268:	lea    rax,[rip+0x22f51]        # 0x4271c0
  40426f:	cmp    BYTE PTR [rax+rdx*1],0x1
  404273:	jne    0x403e10
  404279:	cmp    r11,QWORD PTR [rbp+0x18]
  40427d:	je     0x4037f2
  404283:	cmp    r11,QWORD PTR [rbp+0x78]
  404287:	je     0x405320
  40428d:	cmp    r11,QWORD PTR [rbp+0x10]
  404291:	je     0x4052fb
  404297:	movzx  edx,BYTE PTR [r11]
  40429b:	jmp    0x404639
  4042a0:	cmp    QWORD PTR [rbp+0x28],0x0
  4042a5:	lea    rdx,[r14+0x2]
  4042a9:	movzx  eax,BYTE PTR [r14+0x1]
  4042ae:	mov    rcx,r11
  4042b1:	je     0x404bd0
  4042b7:	mov    r8,QWORD PTR [rbp+0x98]
  4042be:	mov    DWORD PTR [rbp+0x80],r9d
  4042c5:	cmp    r11,r8
  4042c8:	je     0x404dd2
  4042ce:	movzx  ecx,BYTE PTR [rcx]
  4042d1:	mov    r9,QWORD PTR [rbp+0x28]
  4042d5:	lea    r14,[rdx+0x1]
  4042d9:	movzx  edx,BYTE PTR [rdx]
  4042dc:	add    r11,0x1
  4042e0:	cmp    BYTE PTR [r9+rcx*1],dl
  4042e4:	jne    0x4051d3
  4042ea:	sub    eax,0x1
  4042ed:	jne    0x404a7a
  4042f3:	mov    r9d,DWORD PTR [rbp+0x80]
  4042fa:	mov    QWORD PTR [rbp+0x98],r8
  404301:	mov    eax,DWORD PTR [rbp+0x70]
  404304:	test   eax,eax
  404306:	jne    0x4035e3
  40430c:	cmp    r13d,r9d
  40430f:	ja     0x404323
  404311:	mov    eax,r13d
  404314:	mov    edx,eax
  404316:	add    eax,0x1
  404319:	or     BYTE PTR [r15+rdx*8],0x18
  40431e:	cmp    r9d,eax
  404321:	jae    0x404314
  404323:	mov    DWORD PTR [rbp+0x70],0x1
  40432a:	jmp    0x4035e3
  40432f:	cmp    dl,0x5
  404332:	sete   dl
  404335:	cmp    r11,QWORD PTR [rbp+0x98]
  40433c:	mov    BYTE PTR [rbp-0x38],dl
  40433f:	jne    0x40436b
  404341:	mov    rax,QWORD PTR [rbp+0x88]
  404348:	cmp    rax,r11
  40434b:	je     0x404df7
  404351:	cmp    r10,rax
  404354:	mov    QWORD PTR [rbp+0x98],r10
  40435b:	mov    r11,r10
  40435e:	je     0x403e10
  404364:	mov    QWORD PTR [rbp+0x98],rax
  40436b:	mov    rcx,QWORD PTR [rbp+0x28]
  40436f:	test   rcx,rcx
  404372:	je     0x4051b8
  404378:	movzx  eax,BYTE PTR [r11]
  40437c:	movzx  eax,BYTE PTR [rcx+rax*1]
  404380:	movzx  r14d,BYTE PTR [r14+0x1]
  404385:	movzx  ecx,al
  404388:	lea    r8d,[r14*8+0x0]
  404390:	cmp    ecx,r8d
  404393:	jae    0x4043c4
  404395:	mov    ecx,eax
  404397:	mov    r8,QWORD PTR [rbp+0x80]
  40439e:	and    eax,0x7
  4043a1:	shr    cl,0x3
  4043a4:	add    rcx,0x1
  4043a8:	and    ecx,0x3f
  4043ab:	movzx  r8d,BYTE PTR [r8+rcx*1]
  4043b0:	mov    ecx,eax
  4043b2:	mov    eax,edx
  4043b4:	xor    eax,0x1
  4043b7:	sar    r8d,cl
  4043ba:	and    r8d,0x1
  4043be:	cmovne edx,eax
  4043c1:	mov    BYTE PTR [rbp-0x38],dl
  4043c4:	cmp    BYTE PTR [rbp-0x38],0x0
  4043c8:	je     0x403e10
  4043ce:	mov    eax,DWORD PTR [rbp+0x70]
  4043d1:	test   eax,eax
  4043d3:	jne    0x4043f3
  4043d5:	cmp    r13d,r9d
  4043d8:	mov    eax,r13d
  4043db:	ja     0x4043ec
  4043dd:	mov    edx,eax
  4043df:	add    eax,0x1
  4043e2:	or     BYTE PTR [r15+rdx*8],0x18
  4043e7:	cmp    r9d,eax
  4043ea:	jae    0x4043dd
  4043ec:	mov    DWORD PTR [rbp+0x70],0x1
  4043f3:	add    r14d,0x1
  4043f7:	add    r11,0x1
  4043fb:	movsxd r14,r14d
  4043fe:	add    r14,QWORD PTR [rbp+0x80]
  404405:	jmp    0x4035e3
  40440a:	lea    eax,[r9+0x1]
  40440e:	mov    r8d,DWORD PTR [rbp+0x60]
  404412:	mov    rdx,rsi
  404415:	sub    eax,r13d
  404418:	lea    r14d,[rax+rax*2+0x4]
  40441d:	mov    eax,r8d
  404420:	sub    eax,ebx
  404422:	cmp    eax,r14d
  404425:	jb     0x4049a6
  40442b:	cmp    r13d,r9d
  40442e:	mov    DWORD PTR [rbp+0x60],r8d
  404432:	mov    rsi,rdx
  404435:	ja     0x40446e
  404437:	mov    eax,r13d
  40443a:	nop    WORD PTR [rax+rax*1+0x0]
  404440:	mov    ecx,eax
  404442:	mov    edx,ebx
  404444:	add    eax,0x1
  404447:	mov    r8,QWORD PTR [rdi+rcx*8]
  40444b:	mov    r14,QWORD PTR [r12+rcx*8]
  40444f:	mov    rcx,QWORD PTR [r15+rcx*8]
  404453:	mov    QWORD PTR [rsi+rdx*8],r8
  404457:	lea    edx,[rbx+0x2]
  40445a:	lea    r8d,[rbx+0x1]
  40445e:	add    ebx,0x3
  404461:	cmp    r9d,eax
  404464:	mov    QWORD PTR [rsi+r8*8],r14
  404468:	mov    QWORD PTR [rsi+rdx*8],rcx
  40446c:	jae    0x404440
  40446e:	mov    eax,ebx
  404470:	lea    edx,[rbx+0x2]
  404473:	mov    r14,QWORD PTR [rbp+0x80]
  40447a:	mov    DWORD PTR [rsi+rax*8],r13d
  40447e:	lea    eax,[rbx+0x1]
  404481:	mov    DWORD PTR [rsi+rax*8],r9d
  404485:	lea    eax,[rbx+0x3]
  404488:	mov    QWORD PTR [rsi+rdx*8],0x0
  404490:	add    ebx,0x4
  404493:	mov    QWORD PTR [rsi+rax*8],0x0
  40449b:	jmp    0x4035e3
  4044a0:	cmp    r11,QWORD PTR [rbp+0x98]
  4044a7:	jne    0x4044db
  4044a9:	cmp    QWORD PTR [rbp+0x88],r11
  4044b0:	je     0x404df7
  4044b6:	cmp    r10,QWORD PTR [rbp+0x88]
  4044bd:	mov    QWORD PTR [rbp+0x98],r10
  4044c4:	mov    r11,r10
  4044c7:	je     0x403e10
  4044cd:	mov    rax,QWORD PTR [rbp+0x88]
  4044d4:	mov    QWORD PTR [rbp+0x98],rax
  4044db:	cmp    r11,QWORD PTR [rbp+0x78]
  4044df:	je     0x4051c1
  4044e5:	cmp    r11,QWORD PTR [rbp+0x10]
  4044e9:	je     0x40520f
  4044ef:	movzx  eax,BYTE PTR [r11]
  4044f3:	lea    rdx,[rip+0x22cc6]        # 0x4271c0
  4044fa:	cmp    BYTE PTR [rdx+rax*1],0x1
  4044fe:	je     0x403e10
  404504:	mov    edx,DWORD PTR [rbp+0x70]
  404507:	test   edx,edx
  404509:	jne    0x4037ee
  40450f:	cmp    r13d,r9d
  404512:	mov    eax,r13d
  404515:	ja     0x4037e7
  40451b:	mov    edx,eax
  40451d:	add    eax,0x1
  404520:	or     BYTE PTR [r15+rdx*8],0x18
  404525:	cmp    r9d,eax
  404528:	jae    0x40451b
  40452a:	jmp    0x4037e7
  40452f:	cmp    r11,QWORD PTR [rbp+0x98]
  404536:	jne    0x40456a
  404538:	cmp    QWORD PTR [rbp+0x88],r11
  40453f:	je     0x404df7
  404545:	cmp    r10,QWORD PTR [rbp+0x88]
  40454c:	mov    QWORD PTR [rbp+0x98],r10
  404553:	mov    r11,r10
  404556:	je     0x403e10
  40455c:	mov    rax,QWORD PTR [rbp+0x88]
  404563:	mov    QWORD PTR [rbp+0x98],rax
  40456a:	cmp    r11,QWORD PTR [rbp+0x78]
  40456e:	je     0x4051ca
  404574:	cmp    r11,QWORD PTR [rbp+0x10]
  404578:	je     0x40521c
  40457e:	movzx  eax,BYTE PTR [r11]
  404582:	lea    rdx,[rip+0x22c37]        # 0x4271c0
  404589:	cmp    BYTE PTR [rdx+rax*1],0x1
  40458d:	jne    0x403e10
  404593:	mov    ecx,DWORD PTR [rbp+0x70]
  404596:	test   ecx,ecx
  404598:	jne    0x4037ee
  40459e:	cmp    r13d,r9d
  4045a1:	mov    eax,r13d
  4045a4:	ja     0x4037e7
  4045aa:	mov    edx,eax
  4045ac:	add    eax,0x1
  4045af:	or     BYTE PTR [r15+rdx*8],0x18
  4045b4:	cmp    r9d,eax
  4045b7:	jae    0x4045aa
  4045b9:	jmp    0x4037e7
  4045be:	xchg   ax,ax
  4045c0:	cmp    r11,QWORD PTR [rbp+0x18]
  4045c4:	je     0x403e10
  4045ca:	cmp    r11,QWORD PTR [rbp+0x78]
  4045ce:	je     0x404ed0
  4045d4:	cmp    r11,QWORD PTR [rbp+0x10]
  4045d8:	je     0x4050f5
  4045de:	movzx  edx,BYTE PTR [r11]
  4045e2:	lea    rax,[rip+0x22bd7]        # 0x4271c0
  4045e9:	cmp    BYTE PTR [rax+rdx*1],0x1
  4045ed:	jne    0x403e10
  4045f3:	mov    ecx,DWORD PTR [rbp+0x110]
  4045f9:	mov    rdx,r10
  4045fc:	test   ecx,ecx
  4045fe:	cmovne rdx,QWORD PTR [rbp+0x108]
  404606:	cmp    r11,rdx
  404609:	je     0x4037f2
  40460f:	mov    edx,DWORD PTR [rbp+0x120]
  404615:	test   edx,edx
  404617:	je     0x4037f2
  40461d:	lea    rdx,[r11-0x1]
  404621:	cmp    QWORD PTR [rbp+0x78],rdx
  404625:	je     0x405320
  40462b:	cmp    r11,r10
  40462e:	je     0x4052fb
  404634:	movzx  edx,BYTE PTR [r11-0x1]
  404639:	cmp    BYTE PTR [rax+rdx*1],0x1
  40463d:	mov    r14,QWORD PTR [rbp+0x80]
  404644:	jne    0x4035e3
  40464a:	jmp    0x403e10
  40464f:	nop
  404650:	movsx  eax,BYTE PTR [r14+0x2]
  404655:	movzx  edx,BYTE PTR [r14+0x1]
  40465a:	shl    eax,0x8
  40465d:	add    eax,edx
  40465f:	cdqe   
  404661:	lea    rcx,[r14+rax*1+0x3]
  404666:	add    r14,0x5
  40466a:	mov    QWORD PTR [rbp+0xa8],rcx
  404671:	movsx  eax,BYTE PTR [r14-0x1]
  404676:	movzx  edx,BYTE PTR [r14-0x2]
  40467b:	shl    eax,0x8
  40467e:	add    eax,edx
  404680:	mov    BYTE PTR [rcx],al
  404682:	mov    rdx,QWORD PTR [rbp+0xa8]
  404689:	sar    eax,0x8
  40468c:	mov    BYTE PTR [rdx+0x1],al
  40468f:	jmp    0x4035e3
  404694:	movsx  edx,BYTE PTR [r14+0x4]
  404699:	movzx  eax,BYTE PTR [r14+0x3]
  40469e:	shl    edx,0x8
  4046a1:	add    eax,edx
  4046a3:	je     0x404a98
  4046a9:	sub    eax,0x1
  4046ac:	mov    BYTE PTR [r14+0x3],al
  4046b0:	sar    eax,0x8
  4046b3:	mov    BYTE PTR [r14+0x4],al
  4046b7:	jmp    0x403673
  4046bc:	movsxd rax,DWORD PTR [rbp+0x110]
  4046c3:	mov    rbx,rax
  4046c6:	mov    QWORD PTR [rbp+0x20],rax
  4046ca:	mov    eax,DWORD PTR [rbp+0x110]
  4046d0:	cmp    DWORD PTR [rbp+0x128],eax
  4046d6:	setle  dl
  4046d9:	test   eax,eax
  4046db:	setg   al
  4046de:	and    eax,edx
  4046e0:	mov    rdx,QWORD PTR [rbp+0x108]
  4046e7:	add    rbx,rdx
  4046ea:	mov    QWORD PTR [rbp+0x78],rbx
  4046ee:	jmp    0x40353b
  4046f3:	cmp    al,0x16
  4046f5:	jne    0x403ed2
  4046fb:	lea    rax,[r14+0x1]
  4046ff:	mov    QWORD PTR [rbp+0xa8],rax
  404706:	movsx  eax,BYTE PTR [r14+0x2]
  40470b:	movzx  edx,BYTE PTR [r14+0x1]
  404710:	shl    eax,0x8
  404713:	add    eax,edx
  404715:	cdqe   
  404717:	lea    rax,[r14+rax*1+0x3]
  40471c:	mov    QWORD PTR [rbp+0xa8],rax
  404723:	cmp    BYTE PTR [rax],0x15
  404726:	jne    0x403ed2
  40472c:	jmp    0x403e10
  404731:	mov    ebx,edx
  404733:	jmp    0x403e7f
  404738:	mov    r11,QWORD PTR [rbp+0x80]
  40473f:	mov    rax,QWORD PTR [rbp+0x50]
  404743:	cmp    edx,eax
  404745:	mov    ecx,eax
  404747:	jbe    0x40477b
  404749:	cdqe   
  40474b:	mov    rdx,QWORD PTR [rbp+0x130]
  404752:	shl    rax,0x2
  404756:	add    r13,rax
  404759:	add    rsi,rax
  40475c:	xor    eax,eax
  40475e:	xchg   ax,ax
  404760:	mov    DWORD PTR [r13+rax*1+0x0],0xffffffff
  404769:	add    ecx,0x1
  40476c:	mov    DWORD PTR [rsi+rax*1],0xffffffff
  404773:	add    rax,0x4
  404777:	cmp    ecx,DWORD PTR [rdx]
  404779:	jb     0x404760
  40477b:	mov    rax,r11
  40477e:	mov    rdx,r10
  404781:	sub    rax,QWORD PTR [rbp-0x18]
  404785:	sub    rdx,QWORD PTR [rbp+0x20]
  404789:	mov    rsi,QWORD PTR [rbp+0x68]
  40478d:	cmp    QWORD PTR [rbp+0x98],rsi
  404794:	cmove  rdx,QWORD PTR [rbp+0x108]
  40479c:	sub    eax,edx
  40479e:	lea    rsp,[rbp+0xb8]
  4047a5:	pop    rbx
  4047a6:	pop    rsi
  4047a7:	pop    rdi
  4047a8:	pop    r12
  4047aa:	pop    r13
  4047ac:	pop    r14
  4047ae:	pop    r15
  4047b0:	pop    rbp
  4047b1:	ret    
  4047b2:	sub    r9,QWORD PTR [rbp+0x20]
  4047b6:	test   al,al
  4047b8:	movsxd rax,DWORD PTR [rbp+0x128]
  4047bf:	lea    rbx,[r10+r9*1]
  4047c3:	mov    QWORD PTR [rbp-0x18],rax
  4047c7:	mov    QWORD PTR [rbp+0x88],rbx
  4047ce:	mov    rbx,QWORD PTR [rbp+0x78]
  4047d2:	mov    QWORD PTR [rbp+0x68],rbx
  4047d6:	jne    0x40357c
  4047dc:	sub    rax,QWORD PTR [rbp+0x20]
  4047e0:	lea    r11,[r10+rax*1]
  4047e4:	mov    rax,QWORD PTR [rbp+0x88]
  4047eb:	mov    QWORD PTR [rbp+0x98],rax
  4047f2:	jmp    0x403591
  4047f7:	mov    rcx,QWORD PTR [rbp+0x68]
  4047fb:	cmp    QWORD PTR [rbp+0x98],rcx
  404802:	setne  dl
  404805:	jmp    0x4036f5
  40480a:	mov    eax,DWORD PTR [rip+0xe800]        # 0x413010
  404810:	mov    QWORD PTR [rbp-0x48],r10
  404814:	mov    DWORD PTR [rbp-0x40],r9d
  404818:	mov    QWORD PTR [rbp+0x60],r11
  40481c:	lea    ecx,[rax+rax*8]
  40481f:	lea    eax,[rax+rcx*2]
  404822:	cmp    eax,r8d
  404825:	jb     0x40499c
  40482b:	lea    eax,[r8+r8*1]
  40482f:	mov    r14,rax
  404832:	lea    rax,[rax*8+0x1e]
  40483a:	shr    rax,0x4
  40483e:	shl    rax,0x4
  404842:	call   0x40a550
  404847:	sub    rsp,rax
  40484a:	shl    r8,0x3
  40484e:	lea    rcx,[rsp+0x20]
  404853:	call   0x40a870
  404858:	test   rax,rax
  40485b:	mov    rdx,rax
  40485e:	mov    r11,QWORD PTR [rbp+0x60]
  404862:	mov    r9d,DWORD PTR [rbp-0x40]
  404866:	mov    r10,QWORD PTR [rbp-0x48]
  40486a:	je     0x40499c
  404870:	mov    r8d,r14d
  404873:	jmp    0x403b26
  404878:	lea    rdx,[rdi*8+0x1e]
  404880:	and    rdx,0xfffffffffffffff0
  404884:	mov    rax,rdx
  404887:	call   0x40a550
  40488c:	sub    rsp,rax
  40488f:	mov    rax,rdx
  404892:	lea    rdi,[rsp+0x20]
  404897:	call   0x40a550
  40489c:	sub    rsp,rax
  40489f:	mov    rax,rdx
  4048a2:	lea    r12,[rsp+0x20]
  4048a7:	call   0x40a550
  4048ac:	sub    rsp,rax
  4048af:	lea    rax,[rsp+0x20]
  4048b4:	mov    QWORD PTR [rbp+0x38],rax
  4048b8:	mov    rax,rdx
  4048bb:	call   0x40a550
  4048c0:	sub    rsp,rax
  4048c3:	lea    rax,[rsp+0x20]
  4048c8:	mov    QWORD PTR [rbp+0x30],rax
  4048cc:	mov    rax,rdx
  4048cf:	call   0x40a550
  4048d4:	sub    rsp,rax
  4048d7:	lea    rax,[rsp+0x20]
  4048dc:	mov    QWORD PTR [rbp+0x8],rax
  4048e0:	mov    rax,rdx
  4048e3:	call   0x40a550
  4048e8:	sub    rsp,rax
  4048eb:	lea    rax,[rsp+0x20]
  4048f0:	mov    QWORD PTR [rbp+0x0],rax
  4048f4:	mov    rax,rdx
  4048f7:	call   0x40a550
  4048fc:	sub    rsp,rax
  4048ff:	mov    rax,rdx
  404902:	lea    r15,[rsp+0x20]
  404907:	call   0x40a550
  40490c:	sub    rsp,rax
  40490f:	lea    rax,[rsp+0x20]
  404914:	mov    QWORD PTR [rbp-0x20],rax
  404918:	mov    rax,rdx
  40491b:	call   0x40a550
  404920:	sub    rsp,rax
  404923:	lea    rax,[rsp+0x20]
  404928:	mov    QWORD PTR [rbp-0x28],rax
  40492c:	jmp    0x40346c
  404931:	call   0x40a948
  404936:	mov    eax,DWORD PTR [rip+0xe6d4]        # 0x413010
  40493c:	mov    QWORD PTR [rbp-0x48],r10
  404940:	mov    DWORD PTR [rbp-0x40],r9d
  404944:	mov    QWORD PTR [rbp+0x60],r11
  404948:	lea    ecx,[rax+rax*8]
  40494b:	lea    eax,[rax+rcx*2]
  40494e:	cmp    eax,r8d
  404951:	jb     0x40499c
  404953:	lea    eax,[r8+r8*1]
  404957:	mov    rsi,rax
  40495a:	lea    rax,[rax*8+0x1e]
  404962:	shr    rax,0x4
  404966:	shl    rax,0x4
  40496a:	call   0x40a550
  40496f:	sub    rsp,rax
  404972:	shl    r8,0x3
  404976:	lea    rcx,[rsp+0x20]
  40497b:	call   0x40a870
  404980:	test   rax,rax
  404983:	mov    rdx,rax
  404986:	je     0x40499c
  404988:	mov    r8d,esi
  40498b:	mov    r10,QWORD PTR [rbp-0x48]
  40498f:	mov    r9d,DWORD PTR [rbp-0x40]
  404993:	mov    r11,QWORD PTR [rbp+0x60]
  404997:	jmp    0x403c60
  40499c:	mov    eax,0xfffffffe
  4049a1:	jmp    0x40479e
  4049a6:	mov    eax,DWORD PTR [rip+0xe664]        # 0x413010
  4049ac:	mov    QWORD PTR [rbp-0x40],r10
  4049b0:	mov    DWORD PTR [rbp-0x38],r9d
  4049b4:	mov    QWORD PTR [rbp+0x60],r11
  4049b8:	lea    ecx,[rax+rax*8]
  4049bb:	lea    eax,[rax+rcx*2]
  4049be:	cmp    r8d,eax
  4049c1:	ja     0x40499c
  4049c3:	lea    eax,[r8+r8*1]
  4049c7:	mov    rsi,rax
  4049ca:	lea    rax,[rax*8+0x1e]
  4049d2:	shr    rax,0x4
  4049d6:	shl    rax,0x4
  4049da:	call   0x40a550
  4049df:	sub    rsp,rax
  4049e2:	shl    r8,0x3
  4049e6:	lea    rcx,[rsp+0x20]
  4049eb:	call   0x40a870
  4049f0:	test   rax,rax
  4049f3:	mov    rdx,rax
  4049f6:	je     0x40499c
  4049f8:	mov    r8d,esi
  4049fb:	mov    r10,QWORD PTR [rbp-0x40]
  4049ff:	mov    r9d,DWORD PTR [rbp-0x38]
  404a03:	mov    r11,QWORD PTR [rbp+0x60]
  404a07:	jmp    0x40441d
  404a0c:	mov    eax,DWORD PTR [rip+0xe5fe]        # 0x413010
  404a12:	mov    QWORD PTR [rbp-0x40],r10
  404a16:	mov    DWORD PTR [rbp-0x38],r9d
  404a1a:	mov    QWORD PTR [rbp+0x60],r11
  404a1e:	lea    ecx,[rax+rax*8]
  404a21:	lea    eax,[rax+rcx*2]
  404a24:	cmp    r8d,eax
  404a27:	ja     0x40499c
  404a2d:	lea    eax,[r8+r8*1]
  404a31:	mov    rsi,rax
  404a34:	lea    rax,[rax*8+0x1e]
  404a3c:	shr    rax,0x4
  404a40:	shl    rax,0x4
  404a44:	call   0x40a550
  404a49:	sub    rsp,rax
  404a4c:	shl    r8,0x3
  404a50:	lea    rcx,[rsp+0x20]
  404a55:	call   0x40a870
  404a5a:	test   rax,rax
  404a5d:	mov    rdx,rax
  404a60:	je     0x40499c
  404a66:	mov    r8d,esi
  404a69:	mov    r10,QWORD PTR [rbp-0x40]
  404a6d:	mov    r9d,DWORD PTR [rbp-0x38]
  404a71:	mov    r11,QWORD PTR [rbp+0x60]
  404a75:	jmp    0x403d37
  404a7a:	mov    rdx,r14
  404a7d:	mov    rcx,r11
  404a80:	jmp    0x4042c5
  404a85:	lea    r8,[rip+0x2270c]        # 0x427198
  404a8c:	cmp    rcx,r8
  404a8f:	cmove  rcx,r11
  404a93:	jmp    0x404135
  404a98:	add    r14,0x5
  404a9c:	jmp    0x4035e3
  404aa1:	mov    rax,QWORD PTR [rbp+0x100]
  404aa8:	test   BYTE PTR [rax+0x30],0x20
  404aac:	je     0x4037f2
  404ab2:	jmp    0x403e10
  404ab7:	mov    rax,QWORD PTR [rbp+0x48]
  404abb:	mov    rsi,QWORD PTR [rbp+0x130]
  404ac2:	mov    edx,0x1e
  404ac7:	mov    QWORD PTR [rbp+0x88],r10
  404ace:	mov    QWORD PTR [rbp+0x90],r11
  404ad5:	add    rax,0x2
  404ad9:	cmp    rax,0x1e
  404add:	cmovb  rax,rdx
  404ae1:	mov    DWORD PTR [rsi],eax
  404ae3:	mov    ebx,eax
  404ae5:	mov    eax,eax
  404ae7:	lea    r13,[rax*4+0x0]
  404aef:	mov    rcx,r13
  404af2:	call   0x40a880
  404af7:	mov    rsi,rax
  404afa:	mov    rax,QWORD PTR [rbp+0x130]
  404b01:	mov    rcx,r13
  404b04:	mov    QWORD PTR [rax+0x8],rsi
  404b08:	call   0x40a880
  404b0d:	mov    rdx,QWORD PTR [rbp+0x130]
  404b14:	test   rsi,rsi
  404b17:	mov    QWORD PTR [rdx+0x10],rax
  404b1b:	je     0x40499c
  404b21:	test   rax,rax
  404b24:	mov    r11,QWORD PTR [rbp+0x90]
  404b2b:	mov    r10,QWORD PTR [rbp+0x88]
  404b32:	je     0x40499c
  404b38:	mov    rax,QWORD PTR [rbp+0x100]
  404b3f:	mov    rsi,QWORD PTR [rbp+0x100]
  404b46:	movzx  eax,BYTE PTR [rax+0x30]
  404b4a:	mov    BYTE PTR [rbp+0x90],al
  404b50:	and    eax,0xfffffff9
  404b53:	or     eax,0x2
  404b56:	mov    BYTE PTR [rsi+0x30],al
  404b59:	jmp    0x4038a8
  404b5e:	movzx  eax,BYTE PTR [rax+0x2]
  404b62:	movzx  ecx,BYTE PTR [rdx+0x3]
  404b66:	cmp    cl,0x2
  404b69:	je     0x4051aa
  404b6f:	lea    r8d,[rcx-0x4]
  404b73:	cmp    r8b,0x1
  404b77:	ja     0x403665
  404b7d:	cmp    cl,0x5
  404b80:	movzx  r8d,al
  404b84:	sete   BYTE PTR [rbp-0x38]
  404b88:	movzx  ecx,BYTE PTR [rbp-0x38]
  404b8c:	mov    DWORD PTR [rbp-0x40],ecx
  404b8f:	movzx  ecx,BYTE PTR [rdx+0x4]
  404b93:	shl    ecx,0x3
  404b96:	cmp    r8d,ecx
  404b99:	jae    0x404bc0
  404b9b:	mov    ecx,eax
  404b9d:	and    eax,0x7
  404ba0:	shr    cl,0x3
  404ba3:	add    rcx,0x5
  404ba7:	and    ecx,0x3f
  404baa:	movzx  edx,BYTE PTR [rdx+rcx*1]
  404bae:	bt     edx,eax
  404bb1:	jae    0x404bc0
  404bb3:	movzx  eax,BYTE PTR [rbp-0x38]
  404bb7:	xor    eax,0x1
  404bba:	movzx  eax,al
  404bbd:	mov    DWORD PTR [rbp-0x40],eax
  404bc0:	mov    eax,DWORD PTR [rbp-0x40]
  404bc3:	test   eax,eax
  404bc5:	jne    0x403665
  404bcb:	jmp    0x403a2e
  404bd0:	cmp    r11,QWORD PTR [rbp+0x98]
  404bd7:	je     0x404c04
  404bd9:	lea    r14,[rdx+0x1]
  404bdd:	movzx  edx,BYTE PTR [rdx]
  404be0:	add    r11,0x1
  404be4:	cmp    BYTE PTR [rcx],dl
  404be6:	jne    0x403e10
  404bec:	sub    eax,0x1
  404bef:	je     0x404301
  404bf5:	mov    rdx,r14
  404bf8:	cmp    r11,QWORD PTR [rbp+0x98]
  404bff:	mov    rcx,r11
  404c02:	jne    0x404bd9
  404c04:	mov    rcx,QWORD PTR [rbp+0x88]
  404c0b:	cmp    r11,rcx
  404c0e:	je     0x403e10
  404c14:	mov    QWORD PTR [rbp+0x98],rcx
  404c1b:	mov    r11,r10
  404c1e:	jmp    0x404bf8
  404c20:	test   dl,dl
  404c22:	jne    0x404094
  404c28:	mov    rax,QWORD PTR [rbp-0x38]
  404c2c:	mov    DWORD PTR [rbp-0x48],r13d
  404c30:	mov    r13,QWORD PTR [rbp-0x40]
  404c34:	mov    QWORD PTR [rbp-0x40],r14
  404c38:	mov    QWORD PTR [rbp+0x80],rax
  404c3f:	jmp    0x4040c8
  404c44:	mov    DWORD PTR [r13+rcx*1+0x0],0xffffffff
  404c4d:	mov    DWORD PTR [rsi+rcx*1],0xffffffff
  404c54:	jmp    0x40398f
  404c59:	mov    rdx,QWORD PTR [rbp+0x80]
  404c60:	cmp    al,0x6
  404c62:	jne    0x403b10
  404c68:	movzx  eax,BYTE PTR [rdx+0x1]
  404c6c:	movzx  r9d,BYTE PTR [rdx+0x2]
  404c71:	add    r9d,eax
  404c74:	cmp    r13d,0x101
  404c7b:	cmove  r13d,eax
  404c7f:	jmp    0x403b10
  404c84:	mov    rax,QWORD PTR [rbp+0x88]
  404c8b:	mov    r11,r10
  404c8e:	mov    QWORD PTR [rbp+0x98],rax
  404c95:	mov    rax,QWORD PTR [rbp+0x98]
  404c9c:	mov    r14,QWORD PTR [rbp+0x80]
  404ca3:	mov    rcx,QWORD PTR [rbp+0x28]
  404ca7:	sub    rax,r11
  404caa:	sub    r14,r13
  404cad:	movsxd rdx,eax
  404cb0:	cmp    rdx,r14
  404cb3:	cmovle r14d,eax
  404cb7:	test   rcx,rcx
  404cba:	je     0x405140
  404cc0:	test   r14d,r14d
  404cc3:	je     0x405318
  404cc9:	movzx  eax,BYTE PTR [r13+0x0]
  404cce:	movzx  edx,BYTE PTR [r11]
  404cd2:	movzx  eax,BYTE PTR [rcx+rax*1]
  404cd6:	cmp    BYTE PTR [rcx+rdx*1],al
  404cd9:	jne    0x403e10
  404cdf:	lea    r8d,[r14-0x1]
  404ce3:	xor    eax,eax
  404ce5:	mov    DWORD PTR [rbp-0x50],r14d
  404ce9:	mov    rdx,rcx
  404cec:	jmp    0x404d0e
  404cee:	xchg   ax,ax
  404cf0:	movzx  ecx,BYTE PTR [r13+rax*1+0x1]
  404cf6:	movzx  r14d,BYTE PTR [r11+rax*1+0x1]
  404cfc:	add    rax,0x1
  404d00:	movzx  ecx,BYTE PTR [rdx+rcx*1]
  404d04:	cmp    BYTE PTR [rdx+r14*1],cl
  404d08:	jne    0x403e10
  404d0e:	cmp    rax,r8
  404d11:	jne    0x404cf0
  404d13:	movsxd r14,DWORD PTR [rbp-0x50]
  404d17:	mov    ecx,DWORD PTR [rbp+0x70]
  404d1a:	add    r11,r14
  404d1d:	add    r13,r14
  404d20:	test   ecx,ecx
  404d22:	jne    0x4040c8
  404d28:	mov    eax,DWORD PTR [rbp-0x48]
  404d2b:	cmp    eax,r9d
  404d2e:	ja     0x404d3f
  404d30:	mov    edx,eax
  404d32:	add    eax,0x1
  404d35:	or     BYTE PTR [r15+rdx*8],0x18
  404d3a:	cmp    r9d,eax
  404d3d:	jae    0x404d30
  404d3f:	mov    DWORD PTR [rbp+0x70],0x1
  404d46:	jmp    0x4040c8
  404d4b:	lea    rcx,[r14+0x3]
  404d4f:	cmp    QWORD PTR [rbp+0x90],rcx
  404d56:	jbe    0x404d94
  404d58:	lea    rax,[r14+0x4]
  404d5c:	mov    QWORD PTR [rbp+0xa8],rax
  404d63:	movzx  eax,BYTE PTR [r14+0x3]
  404d68:	cmp    al,0x13
  404d6a:	ja     0x404d8c
  404d6c:	cmp    al,0x11
  404d6e:	jae    0x404d74
  404d70:	cmp    al,0xd
  404d72:	jne    0x404d94
  404d74:	movsx  eax,BYTE PTR [r14+0x5]
  404d79:	movzx  edx,BYTE PTR [r14+0x4]
  404d7e:	shl    eax,0x8
  404d81:	add    edx,eax
  404d83:	lea    rax,[r14+0x6]
  404d87:	jmp    0x404ff5
  404d8c:	cmp    al,0x16
  404d8e:	je     0x404fe2
  404d94:	mov    r14,rcx
  404d97:	mov    DWORD PTR [rbp+0x70],0x0
  404d9e:	jmp    0x4035e3
  404da3:	and    edx,0x80
  404da9:	je     0x4037c9
  404daf:	mov    rdx,QWORD PTR [rbp+0x28]
  404db3:	test   rdx,rdx
  404db6:	je     0x4051df
  404dbc:	movzx  eax,BYTE PTR [r11]
  404dc0:	movzx  eax,BYTE PTR [rdx+rax*1]
  404dc4:	jmp    0x4037c1
  404dc9:	movzx  r9d,r9b
  404dcd:	jmp    0x404175
  404dd2:	mov    rcx,QWORD PTR [rbp+0x88]
  404dd9:	cmp    r11,rcx
  404ddc:	je     0x4051d3
  404de2:	mov    r8,rcx
  404de5:	mov    r11,r10
  404de8:	jmp    0x404a7d
  404ded:	mov    eax,0xffffffff
  404df2:	jmp    0x40479e
  404df7:	mov    rax,QWORD PTR [rbp+0x88]
  404dfe:	mov    QWORD PTR [rbp+0x98],rax
  404e05:	jmp    0x403e10
  404e0a:	mov    edx,DWORD PTR [rax]
  404e0c:	mov    rax,QWORD PTR [rbp+0x48]
  404e10:	add    rax,0x2
  404e14:	cmp    rdx,rax
  404e17:	mov    rbx,rdx
  404e1a:	jae    0x4038a8
  404e20:	mov    rsi,QWORD PTR [rbp+0x130]
  404e27:	mov    eax,DWORD PTR [rbp+0x50]
  404e2a:	mov    QWORD PTR [rbp+0x88],r10
  404e31:	mov    QWORD PTR [rbp+0x90],r11
  404e38:	add    eax,0x1
  404e3b:	mov    rcx,QWORD PTR [rsi+0x8]
  404e3f:	lea    rdx,[rax*4+0x0]
  404e47:	mov    DWORD PTR [rsi],eax
  404e49:	call   0x40a858
  404e4e:	mov    rsi,QWORD PTR [rbp+0x130]
  404e55:	mov    edx,DWORD PTR [rsi]
  404e57:	mov    rcx,QWORD PTR [rsi+0x10]
  404e5b:	mov    QWORD PTR [rsi+0x8],rax
  404e5f:	shl    rdx,0x2
  404e63:	call   0x40a858
  404e68:	mov    rsi,QWORD PTR [rbp+0x130]
  404e6f:	test   rax,rax
  404e72:	mov    QWORD PTR [rsi+0x10],rax
  404e76:	je     0x40499c
  404e7c:	cmp    QWORD PTR [rsi+0x8],0x0
  404e81:	je     0x40499c
  404e87:	mov    ebx,DWORD PTR [rsi]
  404e89:	mov    r10,QWORD PTR [rbp+0x88]
  404e90:	mov    r11,QWORD PTR [rbp+0x90]
  404e97:	jmp    0x4038a8
  404e9c:	mov    eax,0xa
  404ea1:	jmp    0x404b62
  404ea6:	cmp    QWORD PTR [rbp+0x88],r13
  404ead:	je     0x4051fe
  404eb3:	cmp    r13,QWORD PTR [rbp-0x38]
  404eb7:	je     0x4051fe
  404ebd:	mov    rax,QWORD PTR [rbp-0x38]
  404ec1:	mov    r13,r10
  404ec4:	mov    QWORD PTR [rbp+0x80],rax
  404ecb:	jmp    0x4040c8
  404ed0:	movzx  edx,BYTE PTR [r10]
  404ed4:	jmp    0x4045e2
  404ed9:	mov    rdx,QWORD PTR [rbp+0x90]
  404ee0:	mov    rcx,QWORD PTR [rbp-0x30]
  404ee4:	mov    r8,r15
  404ee7:	mov    QWORD PTR [rbp-0x10],r10
  404eeb:	mov    QWORD PTR [rbp+0x70],r11
  404eef:	mov    QWORD PTR [rbp+0x80],r9
  404ef6:	call   0x402e20
  404efb:	mov    r9,QWORD PTR [rbp+0x80]
  404f02:	and    eax,0x3
  404f05:	mov    r10,QWORD PTR [rbp-0x10]
  404f09:	mov    r11,QWORD PTR [rbp+0x70]
  404f0d:	movzx  edx,BYTE PTR [r9]
  404f11:	and    edx,0xfffffffc
  404f14:	or     eax,edx
  404f16:	mov    BYTE PTR [r9],al
  404f19:	movzx  eax,BYTE PTR [r14+0x1]
  404f1e:	shl    rax,0x3
  404f22:	lea    r9,[r15+rax*1]
  404f26:	movzx  ecx,BYTE PTR [r9]
  404f2a:	and    ecx,0x3
  404f2d:	jmp    0x4041c7
  404f32:	movzx  ecx,BYTE PTR [rdx+0x3]
  404f36:	cmp    cl,0x2
  404f39:	je     0x405102
  404f3f:	cmp    cl,0x5
  404f42:	je     0x405298
  404f48:	cmp    cl,0x4
  404f4b:	jne    0x403665
  404f51:	movzx  ecx,BYTE PTR [rax+0x1]
  404f55:	test   ecx,ecx
  404f57:	mov    DWORD PTR [rbp-0x48],ecx
  404f5a:	je     0x403a2e
  404f60:	movzx  ecx,BYTE PTR [rdx+0x4]
  404f64:	test   ecx,ecx
  404f66:	mov    DWORD PTR [rbp-0x40],ecx
  404f69:	je     0x405308
  404f6f:	movzx  ecx,BYTE PTR [rax+0x2]
  404f73:	test   BYTE PTR [rdx+0x5],cl
  404f76:	jne    0x405308
  404f7c:	xor    r8d,r8d
  404f7f:	xor    ecx,ecx
  404f81:	mov    DWORD PTR [rbp-0x38],r9d
  404f85:	add    ecx,0x1
  404f88:	cmp    ecx,DWORD PTR [rbp-0x48]
  404f8b:	je     0x403a2a
  404f91:	cmp    ecx,DWORD PTR [rbp-0x40]
  404f94:	je     0x403a2a
  404f9a:	movzx  r9d,BYTE PTR [rdx+r8*1+0x6]
  404fa0:	and    r9b,BYTE PTR [rax+r8*1+0x3]
  404fa5:	add    r8,0x1
  404fa9:	test   r9b,r9b
  404fac:	je     0x404f85
  404fae:	mov    r9d,DWORD PTR [rbp-0x38]
  404fb2:	jmp    0x40530a
  404fb7:	nop    WORD PTR [rax+rax*1+0x0]
  404fc0:	cmp    BYTE PTR [r10],0xa
  404fc4:	sete   al
  404fc7:	jmp    0x403fdb
  404fcc:	mov    rax,QWORD PTR [rbp+0x100]
  404fd3:	test   BYTE PTR [rax+0x30],0x40
  404fd7:	je     0x4037f2
  404fdd:	jmp    0x403e10
  404fe2:	movsx  eax,BYTE PTR [r14+0x5]
  404fe7:	movzx  edx,BYTE PTR [r14+0x4]
  404fec:	shl    eax,0x8
  404fef:	add    edx,eax
  404ff1:	lea    rax,[r14+0x8]
  404ff5:	movsxd r8,edx
  404ff8:	add    rax,r8
  404ffb:	test   edx,edx
  404ffd:	mov    QWORD PTR [rbp+0xa8],rax
  405004:	jns    0x404d94
  40500a:	cmp    BYTE PTR [rax],0xf
  40500d:	jne    0x404d94
  405013:	cmp    BYTE PTR [rax+0x3],0x6
  405017:	jne    0x404d94
  40501d:	movzx  edx,BYTE PTR [rax+0x4]
  405021:	cmp    dl,BYTE PTR [r14+0x1]
  405025:	jne    0x404d94
  40502b:	lea    rcx,[r15+rdx*8]
  40502f:	movzx  edx,BYTE PTR [rcx]
  405032:	test   dl,0x10
  405035:	jne    0x405392
  40503b:	lea    rdx,[rax+0x1]
  40503f:	add    rax,0x3
  405043:	mov    QWORD PTR [rbp+0xa8],rdx
  40504a:	movsx  edx,BYTE PTR [rax-0x1]
  40504e:	movzx  ecx,BYTE PTR [rax-0x2]
  405052:	mov    QWORD PTR [rbp+0x70],rax
  405056:	mov    QWORD PTR [rbp+0xa8],rax
  40505d:	lea    eax,[r9+0x1]
  405061:	shl    edx,0x8
  405064:	sub    eax,r13d
  405067:	add    edx,ecx
  405069:	lea    eax,[rax+rax*2+0x4]
  40506d:	mov    DWORD PTR [rbp+0x80],edx
  405073:	mov    edx,DWORD PTR [rbp+0x60]
  405076:	mov    DWORD PTR [rbp-0x38],eax
  405079:	mov    eax,edx
  40507b:	sub    eax,ebx
  40507d:	cmp    eax,DWORD PTR [rbp-0x38]
  405080:	jae    0x405329
  405086:	mov    eax,DWORD PTR [rip+0xdf84]        # 0x413010
  40508c:	mov    QWORD PTR [rbp-0x48],r10
  405090:	mov    DWORD PTR [rbp-0x40],r9d
  405094:	mov    QWORD PTR [rbp+0x60],r11
  405098:	lea    ecx,[rax+rax*8]
  40509b:	lea    eax,[rax+rcx*2]
  40509e:	cmp    eax,edx
  4050a0:	jb     0x40499c
  4050a6:	lea    eax,[rdx+rdx*1]
  4050a9:	mov    r14,rax
  4050ac:	lea    rax,[rax*8+0x1e]
  4050b4:	shr    rax,0x4
  4050b8:	shl    rax,0x4
  4050bc:	call   0x40a550
  4050c1:	sub    rsp,rax
  4050c4:	mov    r8d,edx
  4050c7:	mov    rdx,rsi
  4050ca:	lea    rcx,[rsp+0x20]
  4050cf:	shl    r8,0x3
  4050d3:	call   0x40a870
  4050d8:	test   rax,rax
  4050db:	mov    rsi,rax
  4050de:	je     0x40499c
  4050e4:	mov    edx,r14d
  4050e7:	mov    r10,QWORD PTR [rbp-0x48]
  4050eb:	mov    r9d,DWORD PTR [rbp-0x40]
  4050ef:	mov    r11,QWORD PTR [rbp+0x60]
  4050f3:	jmp    0x405079
  4050f5:	mov    rax,QWORD PTR [rbp+0x78]
  4050f9:	movzx  edx,BYTE PTR [rax-0x1]
  4050fd:	jmp    0x4045e2
  405102:	movzx  ecx,BYTE PTR [rax+0x1]
  405106:	movzx  r8d,BYTE PTR [rdx+0x5]
  40510b:	shl    ecx,0x3
  40510e:	mov    edx,r8d
  405111:	cmp    ecx,r8d
  405114:	jle    0x403a2e
  40511a:	mov    ecx,r8d
  40511d:	and    edx,0x7
  405120:	shr    cl,0x3
  405123:	add    rcx,0x2
  405127:	and    ecx,0x3f
  40512a:	movzx  eax,BYTE PTR [rax+rcx*1]
  40512e:	bt     eax,edx
  405131:	jb     0x403665
  405137:	jmp    0x403a2e
  40513c:	nop    DWORD PTR [rax+0x0]
  405140:	movsxd r14,r14d
  405143:	mov    rcx,r11
  405146:	mov    rdx,r13
  405149:	mov    r8,r14
  40514c:	mov    QWORD PTR [rbp-0x58],r10
  405150:	mov    DWORD PTR [rbp+0x40],r9d
  405154:	mov    QWORD PTR [rbp-0x50],r11
  405158:	call   0x40a878
  40515d:	test   eax,eax
  40515f:	mov    r11,QWORD PTR [rbp-0x50]
  405163:	mov    r9d,DWORD PTR [rbp+0x40]
  405167:	mov    r10,QWORD PTR [rbp-0x58]
  40516b:	je     0x404d17
  405171:	jmp    0x403e10
  405176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405180:	mov    ebx,ecx
  405182:	mov    DWORD PTR [rbp+0x70],0x0
  405189:	jmp    0x403673
  40518e:	test   dl,dl
  405190:	jne    0x40386d
  405196:	mov    edx,DWORD PTR [rbp+0x44]
  405199:	test   edx,edx
  40519b:	je     0x40386d
  4051a1:	mov    r11,QWORD PTR [rbp+0x58]
  4051a5:	jmp    0x403823
  4051aa:	cmp    al,BYTE PTR [rdx+0x5]
  4051ad:	jne    0x403a2e
  4051b3:	jmp    0x403665
  4051b8:	movzx  eax,BYTE PTR [r11]
  4051bc:	jmp    0x404380
  4051c1:	movzx  eax,BYTE PTR [r10]
  4051c5:	jmp    0x4044f3
  4051ca:	movzx  eax,BYTE PTR [r10]
  4051ce:	jmp    0x404582
  4051d3:	mov    QWORD PTR [rbp+0x98],r8
  4051da:	jmp    0x403e10
  4051df:	movzx  eax,BYTE PTR [r11]
  4051e3:	jmp    0x4037c1
  4051e8:	mov    rax,QWORD PTR [rbp+0x78]
  4051ec:	movzx  edx,BYTE PTR [rax-0x1]
  4051f0:	jmp    0x404268
  4051f5:	movzx  edx,BYTE PTR [r10]
  4051f9:	jmp    0x404268
  4051fe:	mov    r14,QWORD PTR [rbp-0x40]
  405202:	mov    r13d,DWORD PTR [rbp-0x48]
  405206:	add    r14,0x2
  40520a:	jmp    0x4035e3
  40520f:	mov    rax,QWORD PTR [rbp+0x78]
  405213:	movzx  eax,BYTE PTR [rax-0x1]
  405217:	jmp    0x4044f3
  40521c:	mov    rax,QWORD PTR [rbp+0x78]
  405220:	movzx  eax,BYTE PTR [rax-0x1]
  405224:	jmp    0x404582
  405229:	movzx  eax,BYTE PTR [r11]
  40522d:	cmp    al,0xa
  40522f:	jne    0x4037b9
  405235:	jmp    0x403e10
  40523a:	nop    WORD PTR [rax+rax*1+0x0]
  405240:	mov    rdx,QWORD PTR [rbp+0x78]
  405244:	movzx  edx,BYTE PTR [rdx-0x1]
  405248:	jmp    0x403fa5
  40524d:	movzx  edx,BYTE PTR [r10]
  405251:	jmp    0x403fa5
  405256:	mov    rax,QWORD PTR [rbp+0x78]
  40525a:	movzx  edx,BYTE PTR [rax-0x1]
  40525e:	jmp    0x403f7f
  405263:	movzx  edx,BYTE PTR [r10]
  405267:	jmp    0x403f7f
  40526c:	mov    rdx,QWORD PTR [rbp+0x78]
  405270:	movzx  edx,BYTE PTR [rdx-0x1]
  405274:	jmp    0x403c1e
  405279:	movzx  edx,BYTE PTR [r10]
  40527d:	jmp    0x403c1e
  405282:	mov    rax,QWORD PTR [rbp+0x78]
  405286:	movzx  edx,BYTE PTR [rax-0x1]
  40528a:	jmp    0x403bf8
  40528f:	movzx  edx,BYTE PTR [r10]
  405293:	jmp    0x403bf8
  405298:	movzx  ecx,BYTE PTR [rax+0x1]
  40529c:	test   ecx,ecx
  40529e:	mov    DWORD PTR [rbp-0x40],ecx
  4052a1:	je     0x403a2e
  4052a7:	xor    ecx,ecx
  4052a9:	mov    QWORD PTR [rbp-0x48],r11
  4052ad:	jmp    0x4052ce
  4052af:	movzx  r11d,BYTE PTR [rdx+rcx*1+0x5]
  4052b5:	not    r11d
  4052b8:	test   r11d,r8d
  4052bb:	jne    0x4052e6
  4052bd:	lea    r8d,[rcx+0x1]
  4052c1:	add    rcx,0x1
  4052c5:	cmp    DWORD PTR [rbp-0x40],ecx
  4052c8:	mov    DWORD PTR [rbp-0x38],r8d
  4052cc:	jle    0x4052e6
  4052ce:	movzx  r8d,BYTE PTR [rax+rcx*1+0x2]
  4052d4:	mov    DWORD PTR [rbp-0x38],ecx
  4052d7:	test   r8b,r8b
  4052da:	je     0x4052bd
  4052dc:	movzx  r11d,BYTE PTR [rdx+0x4]
  4052e1:	cmp    r11d,ecx
  4052e4:	jg     0x4052af
  4052e6:	mov    edx,DWORD PTR [rbp-0x40]
  4052e9:	cmp    DWORD PTR [rbp-0x38],edx
  4052ec:	mov    r11,QWORD PTR [rbp-0x48]
  4052f0:	jne    0x403665
  4052f6:	jmp    0x403a2e
  4052fb:	mov    rdx,QWORD PTR [rbp+0x78]
  4052ff:	movzx  edx,BYTE PTR [rdx-0x1]
  405303:	jmp    0x404639
  405308:	xor    ecx,ecx
  40530a:	cmp    DWORD PTR [rbp-0x40],ecx
  40530d:	jne    0x403665
  405313:	jmp    0x403a2e
  405318:	xor    r14d,r14d
  40531b:	jmp    0x404d17
  405320:	movzx  edx,BYTE PTR [r10]
  405324:	jmp    0x404639
  405329:	cmp    r13d,r9d
  40532c:	mov    DWORD PTR [rbp+0x60],edx
  40532f:	ja     0x405362
  405331:	mov    eax,r13d
  405334:	mov    ecx,eax
  405336:	mov    edx,ebx
  405338:	add    eax,0x1
  40533b:	mov    r8,QWORD PTR [rdi+rcx*8]
  40533f:	mov    r14,QWORD PTR [r12+rcx*8]
  405343:	mov    rcx,QWORD PTR [r15+rcx*8]
  405347:	mov    QWORD PTR [rsi+rdx*8],r8
  40534b:	lea    edx,[rbx+0x2]
  40534e:	lea    r8d,[rbx+0x1]
  405352:	add    ebx,0x3
  405355:	cmp    r9d,eax
  405358:	mov    QWORD PTR [rsi+r8*8],r14
  40535c:	mov    QWORD PTR [rsi+rdx*8],rcx
  405360:	jae    0x405334
  405362:	mov    eax,ebx
  405364:	lea    edx,[rbx+0x3]
  405367:	lea    ecx,[rbx+0x2]
  40536a:	mov    DWORD PTR [rsi+rax*8],r13d
  40536e:	lea    eax,[rbx+0x1]
  405371:	add    ebx,0x4
  405374:	mov    DWORD PTR [rsi+rax*8],r9d
  405378:	movsxd rax,DWORD PTR [rbp+0x80]
  40537f:	add    rax,QWORD PTR [rbp+0x70]
  405383:	mov    QWORD PTR [rsi+rcx*8],rax
  405387:	mov    eax,edx
  405389:	mov    QWORD PTR [rsi+rax*8],r11
  40538d:	jmp    0x403e10
  405392:	and    edx,0xffffffef
  405395:	mov    BYTE PTR [rcx],dl
  405397:	movzx  r8d,BYTE PTR [r14+0x1]
  40539c:	movzx  r14d,BYTE PTR [r14+0x2]
  4053a1:	add    r14d,r8d
  4053a4:	cmp    r14d,r8d
  4053a7:	jbe    0x40503b
  4053ad:	mov    rcx,QWORD PTR [rbp+0x38]
  4053b1:	mov    edx,r8d
  4053b4:	mov    rcx,QWORD PTR [rcx+rdx*8]
  4053b8:	mov    QWORD PTR [rbp+0x80],rcx
  4053bf:	mov    QWORD PTR [rdi+rdx*8],rcx
  4053c3:	mov    rcx,QWORD PTR [rbp+0x30]
  4053c7:	mov    rcx,QWORD PTR [rcx+rdx*8]
  4053cb:	cmp    QWORD PTR [rbp+0x80],rcx
  4053d2:	ja     0x4053d8
  4053d4:	mov    QWORD PTR [r12+rdx*8],rcx
  4053d8:	add    r8d,0x1
  4053dc:	cmp    r8d,r14d
  4053df:	jne    0x4053ad
  4053e1:	jmp    0x40503b
  4053e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053f0:	push   r15
  4053f2:	push   r14
  4053f4:	push   r13
  4053f6:	push   r12
  4053f8:	push   rbp
  4053f9:	push   rdi
  4053fa:	push   rsi
  4053fb:	push   rbx
  4053fc:	sub    rsp,0x68
  405400:	mov    ebp,DWORD PTR [rsp+0xd0]
  405407:	mov    ebx,DWORD PTR [rsp+0xd8]
  40540e:	mov    esi,DWORD PTR [rsp+0xe0]
  405415:	mov    r14,QWORD PTR [rcx+0x18]
  405419:	mov    r15,QWORD PTR [rcx+0x20]
  40541d:	add    ebp,r8d
  405420:	cmp    ebx,ebp
  405422:	lea    eax,[rbx+rsi*1]
  405425:	jg     0x405548
  40542b:	mov    edi,ebx
  40542d:	shr    edi,0x1f
  405430:	test   dil,dil
  405433:	jne    0x405548
  405439:	test   eax,eax
  40543b:	js     0x405700
  405441:	mov    edi,ebp
  405443:	sub    edi,ebx
  405445:	cmp    ebp,eax
  405447:	cmovl  esi,edi
  40544a:	test   esi,esi
  40544c:	jle    0x40546b
  40544e:	mov    eax,DWORD PTR [rcx+0xc]
  405451:	test   eax,eax
  405453:	je     0x40546b
  405455:	mov    rax,QWORD PTR [rcx]
  405458:	movzx  eax,BYTE PTR [rax]
  40545b:	cmp    al,0xb
  40545d:	je     0x405713
  405463:	cmp    al,0x9
  405465:	je     0x405709
  40546b:	test   r14,r14
  40546e:	mov    QWORD PTR [rsp+0x48],r9
  405473:	mov    r12d,r8d
  405476:	mov    QWORD PTR [rsp+0x50],rdx
  40547b:	mov    rdi,rcx
  40547e:	je     0x40548a
  405480:	test   BYTE PTR [rcx+0x30],0x8
  405484:	je     0x4056e0
  40548a:	test   r14,r14
  40548d:	movsxd rax,r12d
  405490:	setne  r13b
  405494:	mov    QWORD PTR [rsp+0x58],rax
  405499:	nop    DWORD PTR [rax+0x0]
  4054a0:	cmp    ebx,ebp
  4054a2:	jge    0x405560
  4054a8:	test   r13b,r13b
  4054ab:	je     0x405560
  4054b1:	test   BYTE PTR [rdi+0x30],0x1
  4054b5:	jne    0x40557b
  4054bb:	test   esi,esi
  4054bd:	jle    0x405650
  4054c3:	cmp    ebx,r12d
  4054c6:	jge    0x405600
  4054cc:	lea    eax,[rbx+rsi*1]
  4054cf:	cmp    r12d,eax
  4054d2:	jg     0x4056a0
  4054d8:	mov    r8d,ebx
  4054db:	movsxd rcx,ebx
  4054de:	add    rcx,QWORD PTR [rsp+0x50]
  4054e3:	sub    r8d,r12d
  4054e6:	add    r8d,esi
  4054e9:	test   r15,r15
  4054ec:	je     0x405725
  4054f2:	cmp    esi,r8d
  4054f5:	jle    0x405731
  4054fb:	movzx  eax,BYTE PTR [rcx]
  4054fe:	lea    rdx,[rcx+0x1]
  405502:	movzx  eax,BYTE PTR [r15+rax*1]
  405507:	cmp    BYTE PTR [r14+rax*1],0x0
  40550c:	mov    eax,esi
  40550e:	je     0x405528
  405510:	jmp    0x405743
  405515:	movzx  ecx,BYTE PTR [rdx]
  405518:	add    rdx,0x1
  40551c:	movzx  ecx,BYTE PTR [r15+rcx*1]
  405521:	cmp    BYTE PTR [r14+rcx*1],0x0
  405526:	jne    0x405530
  405528:	sub    eax,0x1
  40552b:	cmp    eax,r8d
  40552e:	jg     0x405515
  405530:	sub    esi,eax
  405532:	mov    edx,eax
  405534:	add    ebx,esi
  405536:	not    edx
  405538:	shr    edx,0x1f
  40553b:	cmp    ebx,ebp
  40553d:	sete   cl
  405540:	test   cl,dl
  405542:	je     0x405691
  405548:	mov    eax,0xffffffff
  40554d:	add    rsp,0x68
  405551:	pop    rbx
  405552:	pop    rsi
  405553:	pop    rdi
  405554:	pop    rbp
  405555:	pop    r12
  405557:	pop    r13
  405559:	pop    r14
  40555b:	pop    r15
  40555d:	ret    
  40555e:	xchg   ax,ax
  405560:	mov    eax,esi
  405562:	not    eax
  405564:	shr    eax,0x1f
  405567:	cmp    ebx,ebp
  405569:	sete   dl
  40556c:	test   dl,al
  40556e:	je     0x40557b
  405570:	test   r13b,r13b
  405573:	je     0x40557b
  405575:	test   BYTE PTR [rdi+0x30],0x1
  405579:	je     0x405548
  40557b:	mov    eax,DWORD PTR [rsp+0xf0]
  405582:	mov    r9,QWORD PTR [rsp+0x48]
  405587:	mov    r8d,r12d
  40558a:	mov    rdx,QWORD PTR [rsp+0x50]
  40558f:	mov    DWORD PTR [rsp+0x28],ebx
  405593:	mov    rcx,rdi
  405596:	mov    DWORD PTR [rsp+0x38],eax
  40559a:	mov    rax,QWORD PTR [rsp+0xe8]
  4055a2:	mov    QWORD PTR [rsp+0x30],rax
  4055a7:	mov    eax,DWORD PTR [rsp+0xd0]
  4055ae:	mov    DWORD PTR [rsp+0x20],eax
  4055b2:	call   0x4033c0
  4055b7:	test   eax,eax
  4055b9:	jns    0x4056d2
  4055bf:	cmp    eax,0xfffffffe
  4055c2:	je     0x4056f0
  4055c8:	cmp    esi,0x0
  4055cb:	je     0x405548
  4055d1:	jle    0x4055f0
  4055d3:	sub    esi,0x1
  4055d6:	add    ebx,0x1
  4055d9:	jmp    0x4054a0
  4055de:	xchg   ax,ax
  4055e0:	test   esi,esi
  4055e2:	je     0x405548
  4055e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4055f0:	add    esi,0x1
  4055f3:	sub    ebx,0x1
  4055f6:	jmp    0x4054a0
  4055fb:	nop    DWORD PTR [rax+rax*1+0x0]
  405600:	movsxd rcx,ebx
  405603:	sub    rcx,QWORD PTR [rsp+0x58]
  405608:	xor    r8d,r8d
  40560b:	add    rcx,QWORD PTR [rsp+0x48]
  405610:	test   r15,r15
  405613:	jne    0x4054fb
  405619:	xor    eax,eax
  40561b:	movzx  r8d,BYTE PTR [rcx]
  40561f:	add    rcx,0x1
  405623:	mov    edx,esi
  405625:	cmp    BYTE PTR [r14+r8*1],0x0
  40562a:	je     0x405644
  40562c:	jmp    0x405731
  405631:	movzx  r8d,BYTE PTR [rcx]
  405635:	add    rcx,0x1
  405639:	cmp    BYTE PTR [r14+r8*1],0x0
  40563e:	jne    0x40573a
  405644:	sub    edx,0x1
  405647:	cmp    edx,eax
  405649:	jne    0x405631
  40564b:	jmp    0x405530
  405650:	cmp    ebx,r12d
  405653:	jge    0x4056c0
  405655:	test   r12d,r12d
  405658:	je     0x4056c0
  40565a:	mov    rdx,QWORD PTR [rsp+0x50]
  40565f:	movsxd rax,ebx
  405662:	movzx  eax,BYTE PTR [rdx+rax*1]
  405666:	test   r15,r15
  405669:	je     0x405670
  40566b:	movzx  eax,BYTE PTR [r15+rax*1]
  405670:	cmp    BYTE PTR [r14+rax*1],0x0
  405675:	je     0x4055e0
  40567b:	mov    eax,esi
  40567d:	mov    edx,eax
  40567f:	not    edx
  405681:	shr    edx,0x1f
  405684:	cmp    ebx,ebp
  405686:	sete   cl
  405689:	test   cl,dl
  40568b:	jne    0x405548
  405691:	mov    esi,eax
  405693:	jmp    0x40557b
  405698:	nop    DWORD PTR [rax+rax*1+0x0]
  4056a0:	movsxd rcx,ebx
  4056a3:	xor    r8d,r8d
  4056a6:	add    rcx,QWORD PTR [rsp+0x50]
  4056ab:	test   r15,r15
  4056ae:	jne    0x4054fb
  4056b4:	jmp    0x405619
  4056b9:	nop    DWORD PTR [rax+0x0]
  4056c0:	mov    eax,ebx
  4056c2:	mov    rdx,QWORD PTR [rsp+0x48]
  4056c7:	sub    eax,r12d
  4056ca:	cdqe   
  4056cc:	movzx  eax,BYTE PTR [rdx+rax*1]
  4056d0:	jmp    0x405666
  4056d2:	mov    eax,ebx
  4056d4:	jmp    0x40554d
  4056d9:	nop    DWORD PTR [rax+0x0]
  4056e0:	call   0x402f80
  4056e5:	cmp    eax,0xfffffffe
  4056e8:	jne    0x40548a
  4056ee:	xchg   ax,ax
  4056f0:	mov    eax,0xfffffffe
  4056f5:	jmp    0x40554d
  4056fa:	nop    WORD PTR [rax+rax*1+0x0]
  405700:	mov    esi,ebx
  405702:	neg    esi
  405704:	jmp    0x40546b
  405709:	cmp    BYTE PTR [rcx+0x30],0x0
  40570d:	js     0x40546b
  405713:	test   ebx,ebx
  405715:	jne    0x405548
  40571b:	mov    esi,0x1
  405720:	jmp    0x40546b
  405725:	cmp    esi,r8d
  405728:	mov    eax,r8d
  40572b:	jg     0x40561b
  405731:	mov    eax,esi
  405733:	xor    esi,esi
  405735:	jmp    0x405532
  40573a:	mov    eax,edx
  40573c:	sub    esi,eax
  40573e:	jmp    0x405532
  405743:	xor    esi,esi
  405745:	jmp    0x405532
  40574a:	nop    WORD PTR [rax+rax*1+0x0]
  405750:	push   r15
  405752:	push   r14
  405754:	push   r13
  405756:	push   r12
  405758:	push   rbp
  405759:	push   rdi
  40575a:	push   rsi
  40575b:	push   rbx
  40575c:	sub    rsp,0x158
  405763:	mov    rax,QWORD PTR [r9+0x20]
  405767:	mov    QWORD PTR [rsp+0x1a0],rcx
  40576f:	mov    QWORD PTR [rsp+0xc8],rcx
  405777:	mov    ecx,0x280
  40577c:	mov    rsi,rdx
  40577f:	mov    DWORD PTR [rsp+0x1b0],r8d
  405787:	mov    r14,r9
  40578a:	mov    QWORD PTR [rsp+0x38],rax
  40578f:	call   0x40a880
  405794:	test   rax,rax
  405797:	mov    QWORD PTR [rsp+0x40],rax
  40579c:	je     0x405890
  4057a2:	mov    r9d,DWORD PTR [rip+0x21997]        # 0x427140
  4057a9:	mov    eax,DWORD PTR [rsp+0x1b0]
  4057b0:	and    BYTE PTR [r14+0x30],0x97
  4057b5:	mov    DWORD PTR [r14+0xc],0x0
  4057bd:	mov    QWORD PTR [r14+0x28],0x0
  4057c5:	test   r9d,r9d
  4057c8:	mov    DWORD PTR [r14+0x10],eax
  4057cc:	je     0x4058f0
  4057d2:	mov    r8d,DWORD PTR [r14+0x8]
  4057d6:	test   r8d,r8d
  4057d9:	je     0x4058b0
  4057df:	mov    rcx,QWORD PTR [rsp+0x1a0]
  4057e7:	mov    rbx,QWORD PTR [r14]
  4057ea:	add    rsi,QWORD PTR [rsp+0x1a0]
  4057f2:	mov    rax,QWORD PTR [rip+0x22d2b]        # 0x428524
  4057f9:	xor    r15d,r15d
  4057fc:	mov    QWORD PTR [rsp+0x1b8],r14
  405804:	mov    rbp,QWORD PTR [rsp+0x1b8]
  40580c:	xor    r13d,r13d
  40580f:	mov    DWORD PTR [rsp+0x50],0x0
  405817:	mov    DWORD PTR [rsp+0x70],0x20
  40581f:	mov    r14,rbx
  405822:	mov    DWORD PTR [rsp+0x54],0x0
  40582a:	mov    QWORD PTR [rsp+0x58],rax
  40582f:	mov    r12,r15
  405832:	mov    QWORD PTR [rsp+0x48],rsi
  405837:	cmp    QWORD PTR [rsp+0x48],rcx
  40583c:	je     0x406b58
  405842:	mov    rdi,QWORD PTR [rsp+0x38]
  405847:	lea    rax,[rcx+0x1]
  40584b:	mov    QWORD PTR [rsp+0xc8],rax
  405853:	movzx  esi,BYTE PTR [rcx]
  405856:	test   rdi,rdi
  405859:	je     0x40585f
  40585b:	movzx  esi,BYTE PTR [rdi+rsi*1]
  40585f:	lea    edx,[rsi-0xa]
  405862:	cmp    dl,0x72
  405865:	ja     0x405a42
  40586b:	lea    r8,[rip+0x1d502]        # 0x422d74
  405872:	movzx  edx,dl
  405875:	movsxd rdx,DWORD PTR [r8+rdx*4]
  405879:	add    r8,rdx
  40587c:	jmp    r8
  40587f:	mov    rcx,QWORD PTR [rsp+0x40]
  405884:	call   0x40a8f0
  405889:	nop    DWORD PTR [rax+0x0]
  405890:	mov    eax,0xc
  405895:	add    rsp,0x158
  40589c:	pop    rbx
  40589d:	pop    rsi
  40589e:	pop    rdi
  40589f:	pop    rbp
  4058a0:	pop    r12
  4058a2:	pop    r13
  4058a4:	pop    r14
  4058a6:	pop    r15
  4058a8:	ret    
  4058a9:	nop    DWORD PTR [rax+0x0]
  4058b0:	mov    rcx,QWORD PTR [r14]
  4058b3:	test   rcx,rcx
  4058b6:	je     0x40698f
  4058bc:	mov    edx,0x20
  4058c1:	call   0x40a858
  4058c6:	mov    QWORD PTR [r14],rax
  4058c9:	mov    rbx,rax
  4058cc:	test   rbx,rbx
  4058cf:	je     0x40587f
  4058d1:	mov    DWORD PTR [r14+0x8],0x20
  4058d9:	mov    rcx,QWORD PTR [rsp+0xc8]
  4058e1:	jmp    0x4057ea
  4058e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058f0:	lea    rbx,[rip+0x218c9]        # 0x4271c0
  4058f7:	mov    ecx,0x20
  4058fc:	xor    eax,eax
  4058fe:	xor    ebp,ebp
  405900:	mov    rdi,rbx
  405903:	rep stos QWORD PTR es:[rdi],rax
  405906:	mov    rdi,QWORD PTR [rip+0x22bf7]        # 0x428504
  40590d:	nop    DWORD PTR [rax]
  405910:	mov    ecx,ebp
  405912:	call   rdi
  405914:	test   eax,eax
  405916:	je     0x40591c
  405918:	mov    BYTE PTR [rbx+rbp*1],0x1
  40591c:	add    rbp,0x1
  405920:	cmp    rbp,0x100
  405927:	jne    0x405910
  405929:	mov    BYTE PTR [rip+0x218ef],0x1        # 0x42721f
  405930:	mov    r8d,DWORD PTR [r14+0x8]
  405934:	mov    DWORD PTR [rip+0x21802],0x1        # 0x427140
  40593e:	test   r8d,r8d
  405941:	je     0x4058b0
  405947:	jmp    0x4057df
  40594c:	mov    edx,DWORD PTR [rsp+0x1b0]
  405953:	and    edx,0x1200
  405959:	cmp    edx,0x1200
  40595f:	jne    0x405a42
  405965:	mov    rsi,QWORD PTR [rsp+0x48]
  40596a:	cmp    rsi,rax
  40596d:	je     0x406d4e
  405973:	lea    rcx,[rax+0x1]
  405977:	lea    r9,[rsi+0x1]
  40597b:	mov    edi,0xffffffff
  405980:	mov    edx,0x7b
  405985:	mov    r8,QWORD PTR [rsp+0x38]
  40598a:	jmp    0x4059d8
  40598c:	nop    DWORD PTR [rax+0x0]
  405990:	test   r8,r8
  405993:	mov    QWORD PTR [rsp+0xc8],rcx
  40599b:	movzx  edx,BYTE PTR [rcx-0x1]
  40599f:	je     0x4059a6
  4059a1:	movzx  edx,BYTE PTR [r8+rdx*1]
  4059a6:	lea    r10d,[rdx-0x30]
  4059aa:	cmp    r10b,0x9
  4059ae:	ja     0x407125
  4059b4:	cmp    edi,0x7fff
  4059ba:	jg     0x4059d4
  4059bc:	xor    r10d,r10d
  4059bf:	cmp    edi,0xffffffff
  4059c2:	je     0x4059cb
  4059c4:	lea    r10d,[rdi+rdi*4]
  4059c8:	add    r10d,r10d
  4059cb:	movzx  r11d,dl
  4059cf:	lea    edi,[r10+r11*1-0x30]
  4059d4:	add    rcx,0x1
  4059d8:	cmp    rcx,r9
  4059db:	jne    0x405990
  4059dd:	mov    r9d,edi
  4059e0:	xor    ecx,ecx
  4059e2:	mov    r8d,r9d
  4059e5:	shr    r8d,0x1f
  4059e9:	test   r8b,r8b
  4059ec:	jne    0x406d4e
  4059f2:	test   cl,cl
  4059f4:	jne    0x406d4e
  4059fa:	mov    ecx,DWORD PTR [rsp+0x1b0]
  405a01:	and    ecx,0x1000
  405a07:	jne    0x407254
  405a0d:	cmp    dl,0x5c
  405a10:	je     0x407224
  405a16:	test   DWORD PTR [rsp+0x1b0],0x200000
  405a21:	je     0x407f7b
  405a27:	mov    QWORD PTR [rsp+0xc8],rax
  405a2f:	mov    esi,0x7b
  405a34:	mov    rax,QWORD PTR [rsp+0x38]
  405a39:	test   rax,rax
  405a3c:	je     0x405a42
  405a3e:	movzx  esi,BYTE PTR [rax+rsi*1]
  405a42:	test   r12,r12
  405a45:	je     0x405aba
  405a47:	movzx  edx,BYTE PTR [r12]
  405a4c:	mov    rax,rdx
  405a4f:	lea    rdx,[r12+rdx*1+0x1]
  405a54:	cmp    rbx,rdx
  405a57:	jne    0x405aba
  405a59:	cmp    al,0xff
  405a5b:	je     0x405aba
  405a5d:	mov    rdx,QWORD PTR [rsp+0xc8]
  405a65:	movzx  eax,BYTE PTR [rdx]
  405a68:	cmp    al,0x2a
  405a6a:	je     0x405aba
  405a6c:	cmp    al,0x5e
  405a6e:	je     0x405aba
  405a70:	test   BYTE PTR [rsp+0x1b0],0x2
  405a78:	je     0x406ed4
  405a7e:	cmp    al,0x5c
  405a80:	je     0x405aac
  405a82:	test   DWORD PTR [rsp+0x1b0],0x200
  405a8d:	je     0x405aa4
  405a8f:	test   DWORD PTR [rsp+0x1b0],0x1000
  405a9a:	je     0x40720a
  405aa0:	cmp    al,0x7b
  405aa2:	je     0x405aba
  405aa4:	mov    rdi,rbx
  405aa7:	jmp    0x405cd4
  405aac:	movzx  ecx,BYTE PTR [rdx+0x1]
  405ab0:	cmp    cl,0x3f
  405ab3:	je     0x405aba
  405ab5:	cmp    cl,0x2b
  405ab8:	jne    0x405a82
  405aba:	mov    rdi,QWORD PTR [rbp+0x0]
  405abe:	mov    r13,rbx
  405ac1:	jmp    0x405b04
  405ac3:	mov    DWORD PTR [rbp+0x8],edx
  405ac6:	mov    rcx,rdi
  405ac9:	call   0x40a858
  405ace:	test   rax,rax
  405ad1:	mov    QWORD PTR [rbp+0x0],rax
  405ad5:	je     0x405890
  405adb:	cmp    rax,rdi
  405ade:	je     0x405b01
  405ae0:	mov    rdx,rax
  405ae3:	sub    rdx,rdi
  405ae6:	lea    rcx,[r15+rdx*1]
  405aea:	add    rbx,rdx
  405aed:	add    r14,rdx
  405af0:	test   r15,r15
  405af3:	cmovne r15,rcx
  405af7:	add    rdx,r13
  405afa:	test   r13,r13
  405afd:	cmovne r13,rdx
  405b01:	mov    rdi,rax
  405b04:	mov    edx,DWORD PTR [rbp+0x8]
  405b07:	mov    rax,rbx
  405b0a:	sub    rax,rdi
  405b0d:	add    eax,0x2
  405b10:	cmp    eax,edx
  405b12:	jbe    0x405cc5
  405b18:	cmp    edx,0x10000
  405b1e:	je     0x405b40
  405b20:	add    edx,edx
  405b22:	cmp    edx,0x10000
  405b28:	jbe    0x405ac3
  405b2a:	mov    DWORD PTR [rbp+0x8],0x10000
  405b31:	mov    edx,0x10000
  405b36:	jmp    0x405ac6
  405b38:	nop    DWORD PTR [rax+rax*1+0x0]
  405b40:	mov    eax,0xf
  405b45:	jmp    0x405895
  405b4a:	test   DWORD PTR [rsp+0x1b0],0x402
  405b55:	jne    0x405a42
  405b5b:	test   r13,r13
  405b5e:	je     0x406c27
  405b64:	mov    r8d,DWORD PTR [rsp+0x1b0]
  405b6c:	mov    rax,QWORD PTR [rsp+0xc8]
  405b74:	xor    ecx,ecx
  405b76:	mov    r10,QWORD PTR [rsp+0x48]
  405b7b:	mov    r9,QWORD PTR [rsp+0x38]
  405b80:	xor    edi,edi
  405b82:	and    r8d,0x2
  405b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b90:	cmp    sil,0x2b
  405b94:	setne  dl
  405b97:	or     edi,edx
  405b99:	cmp    sil,0x3f
  405b9d:	setne  dl
  405ba0:	or     ecx,edx
  405ba2:	cmp    r10,rax
  405ba5:	je     0x405bef
  405ba7:	lea    rdx,[rax+0x1]
  405bab:	test   r9,r9
  405bae:	mov    QWORD PTR [rsp+0xc8],rdx
  405bb6:	movzx  esi,BYTE PTR [rax]
  405bb9:	je     0x405bc0
  405bbb:	movzx  esi,BYTE PTR [r9+rsi*1]
  405bc0:	cmp    sil,0x2a
  405bc4:	je     0x405cbd
  405bca:	test   r8d,r8d
  405bcd:	jne    0x405c80
  405bd3:	cmp    sil,0x3f
  405bd7:	je     0x405cbd
  405bdd:	cmp    sil,0x2b
  405be1:	je     0x405cbd
  405be7:	mov    QWORD PTR [rsp+0xc8],rax
  405bef:	test   r13,r13
  405bf2:	je     0x4062da
  405bf8:	test   cl,cl
  405bfa:	je     0x406a22
  405c00:	mov    rsi,QWORD PTR [rbp+0x0]
  405c04:	jmp    0x405c4a
  405c06:	mov    DWORD PTR [rbp+0x8],eax
  405c09:	mov    edx,eax
  405c0b:	mov    rcx,QWORD PTR [rbp+0x0]
  405c0f:	call   0x40a858
  405c14:	test   rax,rax
  405c17:	mov    QWORD PTR [rbp+0x0],rax
  405c1b:	je     0x405890
  405c21:	cmp    rax,rsi
  405c24:	je     0x405c47
  405c26:	mov    rdx,rax
  405c29:	sub    rdx,rsi
  405c2c:	lea    rcx,[r15+rdx*1]
  405c30:	add    rbx,rdx
  405c33:	add    r14,rdx
  405c36:	test   r15,r15
  405c39:	cmovne r15,rcx
  405c3d:	add    rdx,r13
  405c40:	test   r13,r13
  405c43:	cmovne r13,rdx
  405c47:	mov    rsi,rax
  405c4a:	mov    eax,DWORD PTR [rbp+0x8]
  405c4d:	mov    rdx,rbx
  405c50:	sub    rdx,rsi
  405c53:	add    edx,0x3
  405c56:	cmp    edx,eax
  405c58:	jbe    0x406da0
  405c5e:	cmp    eax,0x10000
  405c63:	je     0x405b40
  405c69:	add    eax,eax
  405c6b:	cmp    eax,0x10000
  405c70:	jbe    0x405c06
  405c72:	mov    DWORD PTR [rbp+0x8],0x10000
  405c79:	mov    edx,0x10000
  405c7e:	jmp    0x405c0b
  405c80:	cmp    sil,0x5c
  405c84:	jne    0x405be7
  405c8a:	cmp    r10,rdx
  405c8d:	je     0x406de9
  405c93:	lea    rdx,[rax+0x2]
  405c97:	test   r9,r9
  405c9a:	mov    QWORD PTR [rsp+0xc8],rdx
  405ca2:	movzx  esi,BYTE PTR [rax+0x1]
  405ca6:	je     0x405cad
  405ca8:	movzx  esi,BYTE PTR [r9+rsi*1]
  405cad:	cmp    sil,0x3f
  405cb1:	je     0x405cbd
  405cb3:	cmp    sil,0x2b
  405cb7:	jne    0x405be7
  405cbd:	mov    rax,rdx
  405cc0:	jmp    0x405b90
  405cc5:	lea    rdi,[rbx+0x2]
  405cc9:	lea    r12,[rbx+0x1]
  405ccd:	mov    BYTE PTR [rbx],0x2
  405cd0:	mov    BYTE PTR [rbx+0x1],0x0
  405cd4:	mov    rbx,QWORD PTR [rbp+0x0]
  405cd8:	jmp    0x405d2f
  405cda:	nop    WORD PTR [rax+rax*1+0x0]
  405ce0:	mov    DWORD PTR [rbp+0x8],eax
  405ce3:	mov    edx,eax
  405ce5:	mov    rcx,rbx
  405ce8:	call   0x40a858
  405ced:	test   rax,rax
  405cf0:	mov    QWORD PTR [rbp+0x0],rax
  405cf4:	je     0x405890
  405cfa:	cmp    rax,rbx
  405cfd:	je     0x405d2c
  405cff:	mov    rdx,rax
  405d02:	sub    rdx,rbx
  405d05:	lea    rcx,[r15+rdx*1]
  405d09:	add    rdi,rdx
  405d0c:	add    r14,rdx
  405d0f:	test   r15,r15
  405d12:	cmovne r15,rcx
  405d16:	lea    rcx,[r13+rdx*1+0x0]
  405d1b:	test   r13,r13
  405d1e:	cmovne r13,rcx
  405d22:	add    rdx,r12
  405d25:	test   r12,r12
  405d28:	cmovne r12,rdx
  405d2c:	mov    rbx,rax
  405d2f:	mov    eax,DWORD PTR [rbp+0x8]
  405d32:	mov    rdx,rdi
  405d35:	sub    rdx,rbx
  405d38:	add    edx,0x1
  405d3b:	cmp    edx,eax
  405d3d:	jbe    0x4062ce
  405d43:	cmp    eax,0x10000
  405d48:	je     0x405b40
  405d4e:	add    eax,eax
  405d50:	cmp    eax,0x10000
  405d55:	jbe    0x405ce0
  405d57:	mov    DWORD PTR [rbp+0x8],0x10000
  405d5e:	mov    edx,0x10000
  405d63:	jmp    0x405ce5
  405d65:	mov    rsi,QWORD PTR [rbp+0x0]
  405d69:	mov    r13,rbx
  405d6c:	jmp    0x405dbf
  405d6e:	xchg   ax,ax
  405d70:	mov    DWORD PTR [rbp+0x8],eax
  405d73:	mov    edx,eax
  405d75:	mov    rcx,rsi
  405d78:	call   0x40a858
  405d7d:	test   rax,rax
  405d80:	mov    QWORD PTR [rbp+0x0],rax
  405d84:	je     0x405890
  405d8a:	cmp    rax,rsi
  405d8d:	je     0x405dbc
  405d8f:	mov    rdx,rax
  405d92:	sub    rdx,rsi
  405d95:	lea    rcx,[r15+rdx*1]
  405d99:	add    rbx,rdx
  405d9c:	add    r14,rdx
  405d9f:	test   r15,r15
  405da2:	cmovne r15,rcx
  405da6:	lea    rcx,[r13+rdx*1+0x0]
  405dab:	test   r13,r13
  405dae:	cmovne r13,rcx
  405db2:	add    rdx,r12
  405db5:	test   r12,r12
  405db8:	cmovne r12,rdx
  405dbc:	mov    rsi,rax
  405dbf:	mov    eax,DWORD PTR [rbp+0x8]
  405dc2:	mov    rdx,rbx
  405dc5:	sub    rdx,rsi
  405dc8:	add    edx,0x1
  405dcb:	cmp    edx,eax
  405dcd:	jbe    0x406b30
  405dd3:	cmp    eax,0x10000
  405dd8:	je     0x405b40
  405dde:	add    eax,eax
  405de0:	cmp    eax,0x10000
  405de5:	jbe    0x405d70
  405de7:	mov    DWORD PTR [rbp+0x8],0x10000
  405dee:	mov    edx,0x10000
  405df3:	jmp    0x405d75
  405df5:	cmp    QWORD PTR [rsp+0x48],rax
  405dfa:	je     0x407524
  405e00:	mov    rsi,QWORD PTR [rbp+0x0]
  405e04:	jmp    0x405e51
  405e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e10:	mov    DWORD PTR [rbp+0x8],edx
  405e13:	mov    rcx,rsi
  405e16:	call   0x40a858
  405e1b:	test   rax,rax
  405e1e:	mov    QWORD PTR [rbp+0x0],rax
  405e22:	je     0x405890
  405e28:	cmp    rax,rsi
  405e2b:	je     0x405e4e
  405e2d:	mov    rdx,rax
  405e30:	sub    rdx,rsi
  405e33:	lea    rcx,[r15+rdx*1]
  405e37:	add    rbx,rdx
  405e3a:	add    r14,rdx
  405e3d:	test   r15,r15
  405e40:	cmovne r15,rcx
  405e44:	add    rdx,r12
  405e47:	test   r12,r12
  405e4a:	cmovne r12,rdx
  405e4e:	mov    rsi,rax
  405e51:	mov    edx,DWORD PTR [rbp+0x8]
  405e54:	mov    rax,rbx
  405e57:	sub    rax,rsi
  405e5a:	add    eax,0x22
  405e5d:	cmp    eax,edx
  405e5f:	jbe    0x406aa3
  405e65:	cmp    edx,0x10000
  405e6b:	je     0x405b40
  405e71:	add    edx,edx
  405e73:	cmp    edx,0x10000
  405e79:	jbe    0x405e10
  405e7b:	mov    DWORD PTR [rbp+0x8],0x10000
  405e82:	mov    edx,0x10000
  405e87:	jmp    0x405e13
  405e89:	cmp    QWORD PTR [rsp+0x48],rax
  405e8e:	je     0x406de9
  405e94:	lea    rax,[rcx+0x2]
  405e98:	mov    QWORD PTR [rsp+0xc8],rax
  405ea0:	movzx  esi,BYTE PTR [rcx+0x1]
  405ea4:	lea    edx,[rsi-0x27]
  405ea7:	cmp    dl,0x55
  405eaa:	ja     0x405a34
  405eb0:	movzx  ecx,dl
  405eb3:	lea    rdx,[rip+0x1d086]        # 0x422f40
  405eba:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  405ebe:	add    rdx,rcx
  405ec1:	jmp    rdx
  405ec3:	mov    rdi,QWORD PTR [rsp+0x1a0]
  405ecb:	lea    rdx,[rdi+0x1]
  405ecf:	cmp    rax,rdx
  405ed2:	je     0x405f1b
  405ed4:	test   BYTE PTR [rsp+0x1b0],0x8
  405edc:	jne    0x405f1b
  405ede:	lea    rax,[rcx-0x1]
  405ee2:	cmp    QWORD PTR [rsp+0x1a0],rax
  405eea:	jae    0x405ef6
  405eec:	cmp    BYTE PTR [rcx-0x2],0x5c
  405ef0:	je     0x407333
  405ef6:	movzx  eax,BYTE PTR [rcx-0x1]
  405efa:	cmp    al,0x28
  405efc:	je     0x406d86
  405f02:	cmp    al,0x7c
  405f04:	jne    0x405a42
  405f0a:	test   DWORD PTR [rsp+0x1b0],0x8000
  405f15:	je     0x405a42
  405f1b:	mov    rsi,QWORD PTR [rbp+0x0]
  405f1f:	jmp    0x405f71
  405f21:	mov    DWORD PTR [rbp+0x8],eax
  405f24:	mov    edx,eax
  405f26:	mov    rcx,QWORD PTR [rbp+0x0]
  405f2a:	call   0x40a858
  405f2f:	test   rax,rax
  405f32:	mov    QWORD PTR [rbp+0x0],rax
  405f36:	je     0x405890
  405f3c:	cmp    rax,rsi
  405f3f:	je     0x405f6e
  405f41:	mov    rdx,rax
  405f44:	sub    rdx,rsi
  405f47:	lea    rcx,[r15+rdx*1]
  405f4b:	add    rbx,rdx
  405f4e:	add    r14,rdx
  405f51:	test   r15,r15
  405f54:	cmovne r15,rcx
  405f58:	lea    rcx,[r13+rdx*1+0x0]
  405f5d:	test   r13,r13
  405f60:	cmovne r13,rcx
  405f64:	add    rdx,r12
  405f67:	test   r12,r12
  405f6a:	cmovne r12,rdx
  405f6e:	mov    rsi,rax
  405f71:	mov    eax,DWORD PTR [rbp+0x8]
  405f74:	mov    rdx,rbx
  405f77:	sub    rdx,rsi
  405f7a:	add    edx,0x1
  405f7d:	cmp    edx,eax
  405f7f:	jbe    0x406b44
  405f85:	cmp    eax,0x10000
  405f8a:	je     0x405b40
  405f90:	add    eax,eax
  405f92:	cmp    eax,0x10000
  405f97:	jbe    0x405f21
  405f99:	mov    DWORD PTR [rbp+0x8],0x10000
  405fa0:	mov    edx,0x10000
  405fa5:	jmp    0x405f26
  405faa:	test   DWORD PTR [rsp+0x1b0],0x8000
  405fb5:	je     0x405a42
  405fbb:	mov    esi,0x7c
  405fc0:	test   DWORD PTR [rsp+0x1b0],0x400
  405fcb:	jne    0x405a42
  405fd1:	mov    rsi,QWORD PTR [rbp+0x0]
  405fd5:	jmp    0x406010
  405fd7:	mov    DWORD PTR [rbp+0x8],eax
  405fda:	mov    edx,eax
  405fdc:	mov    rcx,QWORD PTR [rbp+0x0]
  405fe0:	call   0x40a858
  405fe5:	test   rax,rax
  405fe8:	mov    QWORD PTR [rbp+0x0],rax
  405fec:	je     0x405890
  405ff2:	cmp    rax,rsi
  405ff5:	je     0x40600d
  405ff7:	mov    rdx,rax
  405ffa:	sub    rdx,rsi
  405ffd:	add    rbx,rdx
  406000:	add    r14,rdx
  406003:	add    rdx,r15
  406006:	test   r15,r15
  406009:	cmovne r15,rdx
  40600d:	mov    rsi,rax
  406010:	mov    eax,DWORD PTR [rbp+0x8]
  406013:	mov    rdx,rbx
  406016:	sub    rdx,rsi
  406019:	add    edx,0x3
  40601c:	cmp    edx,eax
  40601e:	jbe    0x406c8e
  406024:	cmp    eax,0x10000
  406029:	je     0x405b40
  40602f:	add    eax,eax
  406031:	cmp    eax,0x10000
  406036:	jbe    0x405fd7
  406038:	mov    DWORD PTR [rbp+0x8],0x10000
  40603f:	mov    edx,0x10000
  406044:	jmp    0x405fdc
  406046:	test   DWORD PTR [rsp+0x1b0],0x800
  406051:	jne    0x405fc0
  406057:	jmp    0x405a42
  40605c:	cmp    QWORD PTR [rsp+0x48],rax
  406061:	je     0x4060b9
  406063:	test   BYTE PTR [rsp+0x1b0],0x8
  40606b:	jne    0x4060b9
  40606d:	movzx  edx,BYTE PTR [rcx+0x1]
  406071:	lea    rax,[rcx+0x2]
  406075:	cmp    dl,0x5c
  406078:	sete   r8b
  40607c:	cmp    QWORD PTR [rsp+0x48],rax
  406081:	ja     0x4069a4
  406087:	test   DWORD PTR [rsp+0x1b0],0x2000
  406092:	je     0x406bfd
  406098:	xor    eax,eax
  40609a:	cmp    dl,0x29
  40609d:	je     0x4060b9
  40609f:	test   DWORD PTR [rsp+0x1b0],0x8000
  4060aa:	je     0x406eba
  4060b0:	cmp    dl,0x7c
  4060b3:	jne    0x405a42
  4060b9:	mov    rsi,QWORD PTR [rbp+0x0]
  4060bd:	jmp    0x40610e
  4060bf:	mov    DWORD PTR [rbp+0x8],eax
  4060c2:	mov    edx,eax
  4060c4:	mov    rcx,rsi
  4060c7:	call   0x40a858
  4060cc:	test   rax,rax
  4060cf:	mov    QWORD PTR [rbp+0x0],rax
  4060d3:	je     0x405890
  4060d9:	cmp    rax,rsi
  4060dc:	je     0x40610b
  4060de:	mov    rdx,rax
  4060e1:	sub    rdx,rsi
  4060e4:	lea    rcx,[r15+rdx*1]
  4060e8:	add    rbx,rdx
  4060eb:	add    r14,rdx
  4060ee:	test   r15,r15
  4060f1:	cmovne r15,rcx
  4060f5:	lea    rcx,[r13+rdx*1+0x0]
  4060fa:	test   r13,r13
  4060fd:	cmovne r13,rcx
  406101:	add    rdx,r12
  406104:	test   r12,r12
  406107:	cmovne r12,rdx
  40610b:	mov    rsi,rax
  40610e:	mov    eax,DWORD PTR [rbp+0x8]
  406111:	mov    rdx,rbx
  406114:	sub    rdx,rsi
  406117:	add    edx,0x1
  40611a:	cmp    edx,eax
  40611c:	jbe    0x406c13
  406122:	cmp    eax,0x10000
  406127:	je     0x405b40
  40612d:	add    eax,eax
  40612f:	cmp    eax,0x10000
  406134:	jbe    0x4060bf
  406136:	mov    DWORD PTR [rbp+0x8],0x10000
  40613d:	mov    edx,0x10000
  406142:	jmp    0x4060c4
  406144:	test   DWORD PTR [rsp+0x1b0],0x2000
  40614f:	je     0x405a42
  406155:	add    QWORD PTR [rbp+0x28],0x1
  40615a:	add    DWORD PTR [rsp+0x54],0x1
  40615f:	mov    esi,DWORD PTR [rsp+0x70]
  406163:	cmp    DWORD PTR [rsp+0x50],esi
  406167:	je     0x407017
  40616d:	mov    eax,DWORD PTR [rsp+0x50]
  406171:	mov    rsi,QWORD PTR [rsp+0x40]
  406176:	mov    rdx,r14
  406179:	lea    rax,[rax+rax*4]
  40617d:	lea    rax,[rsi+rax*4]
  406181:	mov    rsi,QWORD PTR [rbp+0x0]
  406185:	sub    rdx,rsi
  406188:	test   r15,r15
  40618b:	mov    DWORD PTR [rax],edx
  40618d:	je     0x407010
  406193:	mov    rdx,r15
  406196:	sub    rdx,rsi
  406199:	add    edx,0x1
  40619c:	mov    edi,DWORD PTR [rsp+0x54]
  4061a0:	mov    DWORD PTR [rax+0x4],edx
  4061a3:	mov    rdx,rbx
  4061a6:	sub    rdx,rsi
  4061a9:	mov    DWORD PTR [rax+0xc],edx
  4061ac:	cmp    edi,0xff
  4061b2:	mov    DWORD PTR [rax+0x10],edi
  4061b5:	ja     0x406a04
  4061bb:	add    edx,0x2
  4061be:	mov    DWORD PTR [rax+0x8],edx
  4061c1:	jmp    0x4061ef
  4061c3:	mov    DWORD PTR [rbp+0x8],eax
  4061c6:	mov    edx,eax
  4061c8:	mov    rcx,QWORD PTR [rbp+0x0]
  4061cc:	call   0x40a858
  4061d1:	test   rax,rax
  4061d4:	mov    QWORD PTR [rbp+0x0],rax
  4061d8:	je     0x405890
  4061de:	cmp    rax,rsi
  4061e1:	je     0x4061ec
  4061e3:	mov    rdx,rax
  4061e6:	sub    rdx,rsi
  4061e9:	add    rbx,rdx
  4061ec:	mov    rsi,rax
  4061ef:	mov    eax,DWORD PTR [rbp+0x8]
  4061f2:	mov    rdx,rbx
  4061f5:	sub    rdx,rsi
  4061f8:	add    edx,0x3
  4061fb:	cmp    edx,eax
  4061fd:	jbe    0x4069f1
  406203:	cmp    eax,0x10000
  406208:	je     0x405b40
  40620e:	add    eax,eax
  406210:	cmp    eax,0x10000
  406215:	jbe    0x4061c3
  406217:	mov    DWORD PTR [rbp+0x8],0x10000
  40621e:	mov    edx,0x10000
  406223:	jmp    0x4061c8
  406225:	test   DWORD PTR [rsp+0x1b0],0x2000
  406230:	je     0x405a42
  406236:	test   r15,r15
  406239:	je     0x406c67
  40623f:	mov    rsi,QWORD PTR [rbp+0x0]
  406243:	jmp    0x406295
  406245:	mov    DWORD PTR [rbp+0x8],eax
  406248:	mov    edx,eax
  40624a:	mov    rcx,QWORD PTR [rbp+0x0]
  40624e:	call   0x40a858
  406253:	test   rax,rax
  406256:	mov    QWORD PTR [rbp+0x0],rax
  40625a:	je     0x405890
  406260:	cmp    rax,rsi
  406263:	je     0x406292
  406265:	mov    rdx,rax
  406268:	sub    rdx,rsi
  40626b:	lea    rcx,[r15+rdx*1]
  40626f:	add    rbx,rdx
  406272:	add    r14,rdx
  406275:	test   r15,r15
  406278:	cmovne r15,rcx
  40627c:	lea    rcx,[r13+rdx*1+0x0]
  406281:	test   r13,r13
  406284:	cmovne r13,rcx
  406288:	add    rdx,r12
  40628b:	test   r12,r12
  40628e:	cmovne r12,rdx
  406292:	mov    rsi,rax
  406295:	mov    eax,DWORD PTR [rbp+0x8]
  406298:	mov    rdx,rbx
  40629b:	sub    rdx,rsi
  40629e:	add    edx,0x1
  4062a1:	cmp    edx,eax
  4062a3:	jbe    0x406c48
  4062a9:	cmp    eax,0x10000
  4062ae:	je     0x405b40
  4062b4:	add    eax,eax
  4062b6:	cmp    eax,0x10000
  4062bb:	jbe    0x406245
  4062bd:	mov    DWORD PTR [rbp+0x8],0x10000
  4062c4:	mov    edx,0x10000
  4062c9:	jmp    0x40624a
  4062ce:	mov    BYTE PTR [rdi],sil
  4062d1:	add    BYTE PTR [r12],0x1
  4062d6:	lea    rbx,[rdi+0x1]
  4062da:	mov    rcx,QWORD PTR [rsp+0xc8]
  4062e2:	jmp    0x405837
  4062e7:	test   DWORD PTR [rsp+0x1b0],0x2000
  4062f2:	jne    0x405a34
  4062f8:	mov    ecx,DWORD PTR [rsp+0x50]
  4062fc:	test   ecx,ecx
  4062fe:	jne    0x406f1c
  406304:	test   DWORD PTR [rsp+0x1b0],0x20000
  40630f:	jne    0x405a34
  406315:	mov    rcx,QWORD PTR [rsp+0x40]
  40631a:	call   0x40a8f0
  40631f:	mov    eax,0x10
  406324:	jmp    0x405895
  406329:	nop    DWORD PTR [rax+0x0]
  406330:	test   DWORD PTR [rsp+0x1b0],0x2000
  40633b:	jne    0x405a34
  406341:	jmp    0x406155
  406346:	test   DWORD PTR [rsp+0x1b0],0x8400
  406351:	jne    0x405a34
  406357:	jmp    0x405fbb
  40635c:	mov    edx,DWORD PTR [rsp+0x1b0]
  406363:	and    edx,0x1200
  406369:	cmp    edx,0x200
  40636f:	jne    0x405a2f
  406375:	jmp    0x405965
  40637a:	nop    WORD PTR [rax+rax*1+0x0]
  406380:	test   DWORD PTR [rsp+0x1b0],0x80000
  40638b:	jne    0x405a42
  406391:	mov    rsi,QWORD PTR [rbp+0x0]
  406395:	mov    r13,rbx
  406398:	jmp    0x4063ea
  40639a:	mov    DWORD PTR [rbp+0x8],eax
  40639d:	mov    edx,eax
  40639f:	mov    rcx,QWORD PTR [rbp+0x0]
  4063a3:	call   0x40a858
  4063a8:	test   rax,rax
  4063ab:	mov    QWORD PTR [rbp+0x0],rax
  4063af:	je     0x405890
  4063b5:	cmp    rax,rsi
  4063b8:	je     0x4063e7
  4063ba:	mov    rdx,rax
  4063bd:	sub    rdx,rsi
  4063c0:	lea    rcx,[r15+rdx*1]
  4063c4:	add    rbx,rdx
  4063c7:	add    r14,rdx
  4063ca:	test   r15,r15
  4063cd:	cmovne r15,rcx
  4063d1:	lea    rcx,[r13+rdx*1+0x0]
  4063d6:	test   r13,r13
  4063d9:	cmovne r13,rcx
  4063dd:	add    rdx,r12
  4063e0:	test   r12,r12
  4063e3:	cmovne r12,rdx
  4063e7:	mov    rsi,rax
  4063ea:	mov    eax,DWORD PTR [rbp+0x8]
  4063ed:	mov    rdx,rbx
  4063f0:	sub    rdx,rsi
  4063f3:	add    edx,0x1
  4063f6:	cmp    edx,eax
  4063f8:	jbe    0x408248
  4063fe:	cmp    eax,0x10000
  406403:	je     0x405b40
  406409:	add    eax,eax
  40640b:	cmp    eax,0x10000
  406410:	jbe    0x40639a
  406412:	mov    DWORD PTR [rbp+0x8],0x10000
  406419:	mov    edx,0x10000
  40641e:	jmp    0x40639f
  406423:	test   DWORD PTR [rsp+0x1b0],0x80000
  40642e:	jne    0x405a42
  406434:	mov    rsi,QWORD PTR [rbp+0x0]
  406438:	jmp    0x406489
  40643a:	mov    DWORD PTR [rbp+0x8],eax
  40643d:	mov    edx,eax
  40643f:	mov    rcx,rsi
  406442:	call   0x40a858
  406447:	test   rax,rax
  40644a:	mov    QWORD PTR [rbp+0x0],rax
  40644e:	je     0x405890
  406454:	cmp    rax,rsi
  406457:	je     0x406486
  406459:	mov    rdx,rax
  40645c:	sub    rdx,rsi
  40645f:	lea    rcx,[r15+rdx*1]
  406463:	add    rbx,rdx
  406466:	add    r14,rdx
  406469:	test   r15,r15
  40646c:	cmovne r15,rcx
  406470:	lea    rcx,[r13+rdx*1+0x0]
  406475:	test   r13,r13
  406478:	cmovne r13,rcx
  40647c:	add    rdx,r12
  40647f:	test   r12,r12
  406482:	cmovne r12,rdx
  406486:	mov    rsi,rax
  406489:	mov    eax,DWORD PTR [rbp+0x8]
  40648c:	mov    rdx,rbx
  40648f:	sub    rdx,rsi
  406492:	add    edx,0x1
  406495:	cmp    edx,eax
  406497:	jbe    0x407fdc
  40649d:	cmp    eax,0x10000
  4064a2:	je     0x405b40
  4064a8:	add    eax,eax
  4064aa:	cmp    eax,0x10000
  4064af:	jbe    0x40643a
  4064b1:	mov    DWORD PTR [rbp+0x8],0x10000
  4064b8:	mov    edx,0x10000
  4064bd:	jmp    0x40643f
  4064bf:	test   DWORD PTR [rsp+0x1b0],0x80000
  4064ca:	jne    0x405a42
  4064d0:	mov    rsi,QWORD PTR [rbp+0x0]
  4064d4:	jmp    0x406525
  4064d6:	mov    DWORD PTR [rbp+0x8],eax
  4064d9:	mov    edx,eax
  4064db:	mov    rcx,rsi
  4064de:	call   0x40a858
  4064e3:	test   rax,rax
  4064e6:	mov    QWORD PTR [rbp+0x0],rax
  4064ea:	je     0x405890
  4064f0:	cmp    rax,rsi
  4064f3:	je     0x406522
  4064f5:	mov    rdx,rax
  4064f8:	sub    rdx,rsi
  4064fb:	lea    rcx,[r15+rdx*1]
  4064ff:	add    rbx,rdx
  406502:	add    r14,rdx
  406505:	test   r15,r15
  406508:	cmovne r15,rcx
  40650c:	lea    rcx,[r13+rdx*1+0x0]
  406511:	test   r13,r13
  406514:	cmovne r13,rcx
  406518:	add    rdx,r12
  40651b:	test   r12,r12
  40651e:	cmovne r12,rdx
  406522:	mov    rsi,rax
  406525:	mov    eax,DWORD PTR [rbp+0x8]
  406528:	mov    rdx,rbx
  40652b:	sub    rdx,rsi
  40652e:	add    edx,0x1
  406531:	cmp    edx,eax
  406533:	jbe    0x407fc8
  406539:	cmp    eax,0x10000
  40653e:	je     0x405b40
  406544:	add    eax,eax
  406546:	cmp    eax,0x10000
  40654b:	jbe    0x4064d6
  40654d:	mov    DWORD PTR [rbp+0x8],0x10000
  406554:	mov    edx,0x10000
  406559:	jmp    0x4064db
  40655b:	test   DWORD PTR [rsp+0x1b0],0x80000
  406566:	jne    0x405a42
  40656c:	mov    rsi,QWORD PTR [rbp+0x0]
  406570:	mov    r13,rbx
  406573:	jmp    0x4065c4
  406575:	mov    DWORD PTR [rbp+0x8],eax
  406578:	mov    edx,eax
  40657a:	mov    rcx,rsi
  40657d:	call   0x40a858
  406582:	test   rax,rax
  406585:	mov    QWORD PTR [rbp+0x0],rax
  406589:	je     0x405890
  40658f:	cmp    rax,rsi
  406592:	je     0x4065c1
  406594:	mov    rdx,rax
  406597:	sub    rdx,rsi
  40659a:	lea    rcx,[r15+rdx*1]
  40659e:	add    rbx,rdx
  4065a1:	add    r14,rdx
  4065a4:	test   r15,r15
  4065a7:	cmovne r15,rcx
  4065ab:	lea    rcx,[r13+rdx*1+0x0]
  4065b0:	test   r13,r13
  4065b3:	cmovne r13,rcx
  4065b7:	add    rdx,r12
  4065ba:	test   r12,r12
  4065bd:	cmovne r12,rdx
  4065c1:	mov    rsi,rax
  4065c4:	mov    eax,DWORD PTR [rbp+0x8]
  4065c7:	mov    rdx,rbx
  4065ca:	sub    rdx,rsi
  4065cd:	add    edx,0x1
  4065d0:	cmp    edx,eax
  4065d2:	jbe    0x407fb4
  4065d8:	cmp    eax,0x10000
  4065dd:	je     0x405b40
  4065e3:	add    eax,eax
  4065e5:	cmp    eax,0x10000
  4065ea:	jbe    0x406575
  4065ec:	mov    DWORD PTR [rbp+0x8],0x10000
  4065f3:	mov    edx,0x10000
  4065f8:	jmp    0x40657a
  4065fa:	test   DWORD PTR [rsp+0x1b0],0x80000
  406605:	jne    0x405a42
  40660b:	mov    rsi,QWORD PTR [rbp+0x0]
  40660f:	jmp    0x406660
  406611:	mov    DWORD PTR [rbp+0x8],eax
  406614:	mov    edx,eax
  406616:	mov    rcx,rsi
  406619:	call   0x40a858
  40661e:	test   rax,rax
  406621:	mov    QWORD PTR [rbp+0x0],rax
  406625:	je     0x405890
  40662b:	cmp    rax,rsi
  40662e:	je     0x40665d
  406630:	mov    rdx,rax
  406633:	sub    rdx,rsi
  406636:	lea    rcx,[r15+rdx*1]
  40663a:	add    rbx,rdx
  40663d:	add    r14,rdx
  406640:	test   r15,r15
  406643:	cmovne r15,rcx
  406647:	lea    rcx,[r13+rdx*1+0x0]
  40664c:	test   r13,r13
  40664f:	cmovne r13,rcx
  406653:	add    rdx,r12
  406656:	test   r12,r12
  406659:	cmovne r12,rdx
  40665d:	mov    rsi,rax
  406660:	mov    eax,DWORD PTR [rbp+0x8]
  406663:	mov    rdx,rbx
  406666:	sub    rdx,rsi
  406669:	add    edx,0x1
  40666c:	cmp    edx,eax
  40666e:	jbe    0x407fa0
  406674:	cmp    eax,0x10000
  406679:	je     0x405b40
  40667f:	add    eax,eax
  406681:	cmp    eax,0x10000
  406686:	jbe    0x406611
  406688:	mov    DWORD PTR [rbp+0x8],0x10000
  40668f:	mov    edx,0x10000
  406694:	jmp    0x406616
  406696:	test   DWORD PTR [rsp+0x1b0],0x80000
  4066a1:	jne    0x405a42
  4066a7:	mov    rsi,QWORD PTR [rbp+0x0]
  4066ab:	jmp    0x4066fc
  4066ad:	mov    DWORD PTR [rbp+0x8],eax
  4066b0:	mov    edx,eax
  4066b2:	mov    rcx,rsi
  4066b5:	call   0x40a858
  4066ba:	test   rax,rax
  4066bd:	mov    QWORD PTR [rbp+0x0],rax
  4066c1:	je     0x405890
  4066c7:	cmp    rax,rsi
  4066ca:	je     0x4066f9
  4066cc:	mov    rdx,rax
  4066cf:	sub    rdx,rsi
  4066d2:	lea    rcx,[r15+rdx*1]
  4066d6:	add    rbx,rdx
  4066d9:	add    r14,rdx
  4066dc:	test   r15,r15
  4066df:	cmovne r15,rcx
  4066e3:	lea    rcx,[r13+rdx*1+0x0]
  4066e8:	test   r13,r13
  4066eb:	cmovne r13,rcx
  4066ef:	add    rdx,r12
  4066f2:	test   r12,r12
  4066f5:	cmovne r12,rdx
  4066f9:	mov    rsi,rax
  4066fc:	mov    eax,DWORD PTR [rbp+0x8]
  4066ff:	mov    rdx,rbx
  406702:	sub    rdx,rsi
  406705:	add    edx,0x1
  406708:	cmp    edx,eax
  40670a:	jbe    0x408018
  406710:	cmp    eax,0x10000
  406715:	je     0x405b40
  40671b:	add    eax,eax
  40671d:	cmp    eax,0x10000
  406722:	jbe    0x4066ad
  406724:	mov    DWORD PTR [rbp+0x8],0x10000
  40672b:	mov    edx,0x10000
  406730:	jmp    0x4066b2
  406732:	test   DWORD PTR [rsp+0x1b0],0x80000
  40673d:	jne    0x405a42
  406743:	mov    rsi,QWORD PTR [rbp+0x0]
  406747:	jmp    0x406798
  406749:	mov    DWORD PTR [rbp+0x8],eax
  40674c:	mov    edx,eax
  40674e:	mov    rcx,rsi
  406751:	call   0x40a858
  406756:	test   rax,rax
  406759:	mov    QWORD PTR [rbp+0x0],rax
  40675d:	je     0x405890
  406763:	cmp    rax,rsi
  406766:	je     0x406795
  406768:	mov    rdx,rax
  40676b:	sub    rdx,rsi
  40676e:	lea    rcx,[r15+rdx*1]
  406772:	add    rbx,rdx
  406775:	add    r14,rdx
  406778:	test   r15,r15
  40677b:	cmovne r15,rcx
  40677f:	lea    rcx,[r13+rdx*1+0x0]
  406784:	test   r13,r13
  406787:	cmovne r13,rcx
  40678b:	add    rdx,r12
  40678e:	test   r12,r12
  406791:	cmovne r12,rdx
  406795:	mov    rsi,rax
  406798:	mov    eax,DWORD PTR [rbp+0x8]
  40679b:	mov    rdx,rbx
  40679e:	sub    rdx,rsi
  4067a1:	add    edx,0x1
  4067a4:	cmp    edx,eax
  4067a6:	jbe    0x407ff0
  4067ac:	cmp    eax,0x10000
  4067b1:	je     0x405b40
  4067b7:	add    eax,eax
  4067b9:	cmp    eax,0x10000
  4067be:	jbe    0x406749
  4067c0:	mov    DWORD PTR [rbp+0x8],0x10000
  4067c7:	mov    edx,0x10000
  4067cc:	jmp    0x40674e
  4067ce:	test   DWORD PTR [rsp+0x1b0],0x4000
  4067d9:	jne    0x405a42
  4067df:	lea    edi,[rsi-0x30]
  4067e2:	movzx  ecx,dil
  4067e6:	cmp    DWORD PTR [rsp+0x54],ecx
  4067ea:	jb     0x408004
  4067f0:	mov    edx,DWORD PTR [rsp+0x50]
  4067f4:	sub    edx,0x1
  4067f7:	js     0x406830
  4067f9:	movsxd rax,edx
  4067fc:	mov    r11,QWORD PTR [rsp+0x40]
  406801:	lea    rax,[rax+rax*4]
  406805:	shl    rax,0x2
  406809:	cmp    ecx,DWORD PTR [r11+rax*1+0x10]
  40680e:	je     0x405a42
  406814:	lea    rax,[r11+rax*1-0x4]
  406819:	jmp    0x406828
  40681b:	sub    rax,0x14
  40681f:	cmp    ecx,DWORD PTR [rax+0x14]
  406822:	je     0x405a42
  406828:	sub    edx,0x1
  40682b:	cmp    edx,0xffffffff
  40682e:	jne    0x40681b
  406830:	mov    rsi,QWORD PTR [rbp+0x0]
  406834:	mov    eax,DWORD PTR [rbp+0x8]
  406837:	mov    rdx,rbx
  40683a:	mov    r13,rbx
  40683d:	sub    rdx,rsi
  406840:	add    edx,0x2
  406843:	cmp    edx,eax
  406845:	jbe    0x4068be
  406847:	cmp    eax,0x10000
  40684c:	je     0x405b40
  406852:	add    eax,eax
  406854:	cmp    eax,0x10000
  406859:	ja     0x40774a
  40685f:	mov    DWORD PTR [rbp+0x8],eax
  406862:	mov    edx,eax
  406864:	mov    rcx,rsi
  406867:	call   0x40a858
  40686c:	test   rax,rax
  40686f:	mov    QWORD PTR [rbp+0x0],rax
  406873:	je     0x405890
  406879:	cmp    rax,rsi
  40687c:	je     0x4068ab
  40687e:	mov    rdx,rax
  406881:	sub    rdx,rsi
  406884:	lea    rcx,[r15+rdx*1]
  406888:	add    rbx,rdx
  40688b:	add    r14,rdx
  40688e:	test   r15,r15
  406891:	cmovne r15,rcx
  406895:	lea    rcx,[r13+rdx*1+0x0]
  40689a:	test   r13,r13
  40689d:	cmovne r13,rcx
  4068a1:	add    rdx,r12
  4068a4:	test   r12,r12
  4068a7:	cmovne r12,rdx
  4068ab:	mov    rsi,rax
  4068ae:	mov    rdx,rbx
  4068b1:	mov    eax,DWORD PTR [rbp+0x8]
  4068b4:	sub    rdx,rsi
  4068b7:	add    edx,0x2
  4068ba:	cmp    edx,eax
  4068bc:	ja     0x406847
  4068be:	mov    BYTE PTR [rbx],0x8
  4068c1:	mov    BYTE PTR [rbx+0x1],dil
  4068c5:	add    rbx,0x2
  4068c9:	mov    rcx,QWORD PTR [rsp+0xc8]
  4068d1:	jmp    0x405837
  4068d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068e0:	test   BYTE PTR [rsp+0x1b0],0x2
  4068e8:	jne    0x405b5b
  4068ee:	jmp    0x405a34
  4068f3:	test   DWORD PTR [rsp+0x1b0],0x80000
  4068fe:	jne    0x405a42
  406904:	mov    rsi,QWORD PTR [rbp+0x0]
  406908:	jmp    0x406959
  40690a:	mov    DWORD PTR [rbp+0x8],eax
  40690d:	mov    edx,eax
  40690f:	mov    rcx,rsi
  406912:	call   0x40a858
  406917:	test   rax,rax
  40691a:	mov    QWORD PTR [rbp+0x0],rax
  40691e:	je     0x405890
  406924:	cmp    rax,rsi
  406927:	je     0x406956
  406929:	mov    rdx,rax
  40692c:	sub    rdx,rsi
  40692f:	lea    rcx,[r15+rdx*1]
  406933:	add    rbx,rdx
  406936:	add    r14,rdx
  406939:	test   r15,r15
  40693c:	cmovne r15,rcx
  406940:	lea    rcx,[r13+rdx*1+0x0]
  406945:	test   r13,r13
  406948:	cmovne r13,rcx
  40694c:	add    rdx,r12
  40694f:	test   r12,r12
  406952:	cmovne r12,rdx
  406956:	mov    rsi,rax
  406959:	mov    eax,DWORD PTR [rbp+0x8]
  40695c:	mov    rdx,rbx
  40695f:	sub    rdx,rsi
  406962:	add    edx,0x1
  406965:	cmp    edx,eax
  406967:	jbe    0x407f67
  40696d:	cmp    eax,0x10000
  406972:	je     0x405b40
  406978:	add    eax,eax
  40697a:	cmp    eax,0x10000
  40697f:	jbe    0x40690a
  406981:	mov    DWORD PTR [rbp+0x8],0x10000
  406988:	mov    edx,0x10000
  40698d:	jmp    0x40690f
  40698f:	mov    ecx,0x20
  406994:	call   0x40a880
  406999:	mov    QWORD PTR [r14],rax
  40699c:	mov    rbx,rax
  40699f:	jmp    0x4058cc
  4069a4:	test   DWORD PTR [rsp+0x1b0],0x2000
  4069af:	jne    0x40609a
  4069b5:	test   r8b,r8b
  4069b8:	je     0x406bfd
  4069be:	test   rax,rax
  4069c1:	je     0x406bfd
  4069c7:	movzx  eax,BYTE PTR [rcx+0x2]
  4069cb:	cmp    al,0x29
  4069cd:	je     0x4060b9
  4069d3:	test   DWORD PTR [rsp+0x1b0],0x8000
  4069de:	jne    0x405a42
  4069e4:	cmp    al,0x7c
  4069e6:	je     0x4060b9
  4069ec:	jmp    0x405a42
  4069f1:	movzx  eax,BYTE PTR [rsp+0x54]
  4069f6:	mov    BYTE PTR [rbx],0x6
  4069f9:	add    rbx,0x3
  4069fd:	mov    BYTE PTR [rbx-0x1],0x0
  406a01:	mov    BYTE PTR [rbx-0x2],al
  406a04:	add    DWORD PTR [rsp+0x50],0x1
  406a09:	mov    rcx,QWORD PTR [rsp+0xc8]
  406a11:	mov    r14,rbx
  406a14:	xor    r15d,r15d
  406a17:	xor    r13d,r13d
  406a1a:	xor    r12d,r12d
  406a1d:	jmp    0x405837
  406a22:	xor    esi,esi
  406a24:	mov    r12,QWORD PTR [rbp+0x0]
  406a28:	jmp    0x406a6d
  406a2a:	mov    DWORD PTR [rbp+0x8],eax
  406a2d:	mov    edx,eax
  406a2f:	mov    rcx,r12
  406a32:	call   0x40a858
  406a37:	test   rax,rax
  406a3a:	mov    QWORD PTR [rbp+0x0],rax
  406a3e:	je     0x405890
  406a44:	cmp    rax,r12
  406a47:	je     0x406a6a
  406a49:	mov    rdx,rax
  406a4c:	sub    rdx,r12
  406a4f:	lea    rcx,[r15+rdx*1]
  406a53:	add    rbx,rdx
  406a56:	add    r14,rdx
  406a59:	test   r15,r15
  406a5c:	cmovne r15,rcx
  406a60:	add    rdx,r13
  406a63:	test   r13,r13
  406a66:	cmovne r13,rdx
  406a6a:	mov    r12,rax
  406a6d:	mov    eax,DWORD PTR [rbp+0x8]
  406a70:	mov    rdx,rbx
  406a73:	sub    rdx,r12
  406a76:	add    edx,0x3
  406a79:	cmp    edx,eax
  406a7b:	jbe    0x406dfd
  406a81:	cmp    eax,0x10000
  406a86:	je     0x405b40
  406a8c:	add    eax,eax
  406a8e:	cmp    eax,0x10000
  406a93:	jbe    0x406a2a
  406a95:	mov    DWORD PTR [rbp+0x8],0x10000
  406a9c:	mov    edx,0x10000
  406aa1:	jmp    0x406a2f
  406aa3:	mov    r13,rbx
  406aa6:	jmp    0x406af8
  406aa8:	mov    DWORD PTR [rbp+0x8],edx
  406aab:	mov    rcx,rsi
  406aae:	call   0x40a858
  406ab3:	test   rax,rax
  406ab6:	mov    QWORD PTR [rbp+0x0],rax
  406aba:	je     0x405890
  406ac0:	cmp    rax,rsi
  406ac3:	je     0x406af2
  406ac5:	mov    rdx,rax
  406ac8:	sub    rdx,rsi
  406acb:	lea    rcx,[r15+rdx*1]
  406acf:	add    rbx,rdx
  406ad2:	add    r14,rdx
  406ad5:	test   r15,r15
  406ad8:	cmovne r15,rcx
  406adc:	lea    rcx,[r13+rdx*1+0x0]
  406ae1:	test   r13,r13
  406ae4:	cmovne r13,rcx
  406ae8:	add    rdx,r12
  406aeb:	test   r12,r12
  406aee:	cmovne r12,rdx
  406af2:	mov    edx,DWORD PTR [rbp+0x8]
  406af5:	mov    rsi,rax
  406af8:	mov    rax,rbx
  406afb:	sub    rax,rsi
  406afe:	add    eax,0x1
  406b01:	cmp    eax,edx
  406b03:	jbe    0x407050
  406b09:	cmp    edx,0x10000
  406b0f:	je     0x405b40
  406b15:	add    edx,edx
  406b17:	cmp    edx,0x10000
  406b1d:	jbe    0x406aa8
  406b1f:	mov    DWORD PTR [rbp+0x8],0x10000
  406b26:	mov    edx,0x10000
  406b2b:	jmp    0x406aab
  406b30:	mov    BYTE PTR [rbx],0x3
  406b33:	add    rbx,0x1
  406b37:	mov    rcx,QWORD PTR [rsp+0xc8]
  406b3f:	jmp    0x405837
  406b44:	mov    BYTE PTR [rbx],0x9
  406b47:	add    rbx,0x1
  406b4b:	mov    rcx,QWORD PTR [rsp+0xc8]
  406b53:	jmp    0x405837
  406b58:	test   r15,r15
  406b5b:	mov    r14,rbp
  406b5e:	je     0x406b78
  406b60:	mov    rax,rbx
  406b63:	mov    BYTE PTR [r15],0xe
  406b67:	sub    rax,r15
  406b6a:	sub    eax,0x3
  406b6d:	mov    BYTE PTR [r15+0x1],al
  406b71:	sar    eax,0x8
  406b74:	mov    BYTE PTR [r15+0x2],al
  406b78:	mov    eax,DWORD PTR [rsp+0x50]
  406b7c:	test   eax,eax
  406b7e:	jne    0x406ee9
  406b84:	test   DWORD PTR [rsp+0x1b0],0x40000
  406b8f:	je     0x406f04
  406b95:	mov    rsi,QWORD PTR [r14]
  406b98:	jmp    0x406bc5
  406b9a:	mov    DWORD PTR [r14+0x8],eax
  406b9e:	mov    edx,eax
  406ba0:	mov    rcx,rsi
  406ba3:	call   0x40a858
  406ba8:	test   rax,rax
  406bab:	mov    QWORD PTR [r14],rax
  406bae:	je     0x405890
  406bb4:	cmp    rax,rsi
  406bb7:	je     0x406bc2
  406bb9:	mov    rdx,rax
  406bbc:	sub    rdx,rsi
  406bbf:	add    rbx,rdx
  406bc2:	mov    rsi,rax
  406bc5:	mov    eax,DWORD PTR [r14+0x8]
  406bc9:	mov    rdx,rbx
  406bcc:	sub    rdx,rsi
  406bcf:	add    edx,0x1
  406bd2:	cmp    edx,eax
  406bd4:	jbe    0x406efd
  406bda:	cmp    eax,0x10000
  406bdf:	je     0x405b40
  406be5:	add    eax,eax
  406be7:	cmp    eax,0x10000
  406bec:	jbe    0x406b9a
  406bee:	mov    DWORD PTR [r14+0x8],0x10000
  406bf6:	mov    edx,0x10000
  406bfb:	jmp    0x406ba0
  406bfd:	test   DWORD PTR [rsp+0x1b0],0x8000
  406c08:	jne    0x4060b0
  406c0e:	jmp    0x405a42
  406c13:	mov    BYTE PTR [rbx],0xa
  406c16:	add    rbx,0x1
  406c1a:	mov    rcx,QWORD PTR [rsp+0xc8]
  406c22:	jmp    0x405837
  406c27:	test   BYTE PTR [rsp+0x1b0],0x20
  406c2f:	jne    0x407f34
  406c35:	test   BYTE PTR [rsp+0x1b0],0x10
  406c3d:	je     0x405a42
  406c43:	jmp    0x405b64
  406c48:	mov    rax,rbx
  406c4b:	mov    BYTE PTR [rbx],0x14
  406c4e:	mov    BYTE PTR [r15],0xe
  406c52:	sub    rax,r15
  406c55:	add    rbx,0x1
  406c59:	sub    eax,0x3
  406c5c:	mov    BYTE PTR [r15+0x1],al
  406c60:	sar    eax,0x8
  406c63:	mov    BYTE PTR [r15+0x2],al
  406c67:	mov    edx,DWORD PTR [rsp+0x50]
  406c6b:	test   edx,edx
  406c6d:	jne    0x406f25
  406c73:	test   DWORD PTR [rsp+0x1b0],0x20000
  406c7e:	je     0x406315
  406c84:	mov    esi,0x29
  406c89:	jmp    0x405a42
  406c8e:	mov    eax,ebx
  406c90:	lea    rsi,[rbx+0x3]
  406c94:	sub    eax,r14d
  406c97:	cmp    r14,rbx
  406c9a:	lea    edx,[rax+0x3]
  406c9d:	je     0x406cae
  406c9f:	sub    rbx,0x1
  406ca3:	movzx  eax,BYTE PTR [rbx]
  406ca6:	cmp    rbx,r14
  406ca9:	mov    BYTE PTR [rbx+0x3],al
  406cac:	jne    0x406c9f
  406cae:	mov    BYTE PTR [r14+0x1],dl
  406cb2:	sar    edx,0x8
  406cb5:	test   r15,r15
  406cb8:	mov    BYTE PTR [r14],0xf
  406cbc:	mov    BYTE PTR [r14+0x2],dl
  406cc0:	je     0x406cda
  406cc2:	mov    rax,rsi
  406cc5:	mov    BYTE PTR [r15],0xe
  406cc9:	sub    rax,r15
  406ccc:	sub    eax,0x3
  406ccf:	mov    BYTE PTR [r15+0x1],al
  406cd3:	sar    eax,0x8
  406cd6:	mov    BYTE PTR [r15+0x2],al
  406cda:	mov    rbx,QWORD PTR [rbp+0x0]
  406cde:	mov    r15,rsi
  406ce1:	jmp    0x406d18
  406ce3:	mov    DWORD PTR [rbp+0x8],eax
  406ce6:	mov    edx,eax
  406ce8:	mov    rcx,rbx
  406ceb:	call   0x40a858
  406cf0:	test   rax,rax
  406cf3:	mov    QWORD PTR [rbp+0x0],rax
  406cf7:	je     0x405890
  406cfd:	cmp    rax,rbx
  406d00:	je     0x406d15
  406d02:	mov    rdx,rax
  406d05:	sub    rdx,rbx
  406d08:	add    rsi,rdx
  406d0b:	add    rdx,r15
  406d0e:	test   r15,r15
  406d11:	cmovne r15,rdx
  406d15:	mov    rbx,rax
  406d18:	mov    eax,DWORD PTR [rbp+0x8]
  406d1b:	mov    rdx,rsi
  406d1e:	sub    rdx,rbx
  406d21:	add    edx,0x3
  406d24:	cmp    edx,eax
  406d26:	jbe    0x4077eb
  406d2c:	cmp    eax,0x10000
  406d31:	je     0x405b40
  406d37:	add    eax,eax
  406d39:	cmp    eax,0x10000
  406d3e:	jbe    0x406ce3
  406d40:	mov    DWORD PTR [rbp+0x8],0x10000
  406d47:	mov    edx,0x10000
  406d4c:	jmp    0x406ce8
  406d4e:	test   DWORD PTR [rsp+0x1b0],0x200000
  406d59:	je     0x407f7b
  406d5f:	mov    ecx,DWORD PTR [rsp+0x1b0]
  406d66:	and    ecx,0x1000
  406d6c:	test   ecx,ecx
  406d6e:	mov    QWORD PTR [rsp+0xc8],rax
  406d76:	mov    esi,0x7b
  406d7b:	jne    0x405a42
  406d81:	jmp    0x405a2f
  406d86:	test   DWORD PTR [rsp+0x1b0],0x2000
  406d91:	jne    0x405f1b
  406d97:	jmp    0x405a42
  406d9c:	nop    DWORD PTR [rax+0x0]
  406da0:	mov    rsi,QWORD PTR [rsp+0x38]
  406da5:	mov    rax,QWORD PTR [rsp+0xc8]
  406dad:	test   rsi,rsi
  406db0:	je     0x408042
  406db6:	movzx  edx,BYTE PTR [rax-0x2]
  406dba:	movsx  ecx,BYTE PTR [rsi+rdx*1]
  406dbe:	movsx  edx,BYTE PTR [rsi+0x2e]
  406dc2:	cmp    ecx,edx
  406dc4:	je     0x407350
  406dca:	mov    eax,r13d
  406dcd:	mov    BYTE PTR [rbx],0x12
  406dd0:	xor    esi,esi
  406dd2:	sub    eax,ebx
  406dd4:	sub    eax,0x6
  406dd7:	mov    BYTE PTR [rbx+0x1],al
  406dda:	sar    eax,0x8
  406ddd:	mov    BYTE PTR [rbx+0x2],al
  406de0:	add    rbx,0x3
  406de4:	jmp    0x406a24
  406de9:	mov    rcx,QWORD PTR [rsp+0x40]
  406dee:	call   0x40a8f0
  406df3:	mov    eax,0x5
  406df8:	jmp    0x405895
  406dfd:	mov    edx,ebx
  406dff:	lea    r12,[rbx+0x3]
  406e03:	sub    edx,r13d
  406e06:	cmp    sil,0x1
  406e0a:	sbb    ecx,ecx
  406e0c:	add    ecx,0x10
  406e0f:	cmp    r13,rbx
  406e12:	je     0x406e23
  406e14:	sub    rbx,0x1
  406e18:	movzx  eax,BYTE PTR [rbx]
  406e1b:	cmp    rbx,r13
  406e1e:	mov    BYTE PTR [rbx+0x3],al
  406e21:	jne    0x406e14
  406e23:	mov    BYTE PTR [r13+0x1],dl
  406e27:	sar    edx,0x8
  406e2a:	test   dil,dil
  406e2d:	mov    BYTE PTR [r13+0x0],cl
  406e31:	mov    BYTE PTR [r13+0x2],dl
  406e35:	jne    0x406ffd
  406e3b:	mov    rbx,QWORD PTR [rbp+0x0]
  406e3f:	jmp    0x406e84
  406e41:	mov    DWORD PTR [rbp+0x8],eax
  406e44:	mov    edx,eax
  406e46:	mov    rcx,rbx
  406e49:	call   0x40a858
  406e4e:	test   rax,rax
  406e51:	mov    QWORD PTR [rbp+0x0],rax
  406e55:	je     0x405890
  406e5b:	cmp    rax,rbx
  406e5e:	je     0x406e81
  406e60:	mov    rdx,rax
  406e63:	sub    rdx,rbx
  406e66:	lea    rcx,[r15+rdx*1]
  406e6a:	add    r12,rdx
  406e6d:	add    r14,rdx
  406e70:	test   r15,r15
  406e73:	cmovne r15,rcx
  406e77:	add    rdx,r13
  406e7a:	test   r13,r13
  406e7d:	cmovne r13,rdx
  406e81:	mov    rbx,rax
  406e84:	mov    eax,DWORD PTR [rbp+0x8]
  406e87:	mov    rdx,r12
  406e8a:	sub    rdx,rbx
  406e8d:	add    edx,0x3
  406e90:	cmp    edx,eax
  406e92:	jbe    0x4071ce
  406e98:	cmp    eax,0x10000
  406e9d:	je     0x405b40
  406ea3:	add    eax,eax
  406ea5:	cmp    eax,0x10000
  406eaa:	jbe    0x406e41
  406eac:	mov    DWORD PTR [rbp+0x8],0x10000
  406eb3:	mov    edx,0x10000
  406eb8:	jmp    0x406e46
  406eba:	test   rax,rax
  406ebd:	je     0x405a42
  406ec3:	test   r8b,r8b
  406ec6:	je     0x405a42
  406ecc:	movzx  eax,BYTE PTR [rax]
  406ecf:	jmp    0x4069e4
  406ed4:	cmp    al,0x3f
  406ed6:	je     0x405aba
  406edc:	cmp    al,0x2b
  406ede:	jne    0x405a82
  406ee4:	jmp    0x405aba
  406ee9:	mov    rcx,QWORD PTR [rsp+0x40]
  406eee:	call   0x40a8f0
  406ef3:	mov    eax,0x8
  406ef8:	jmp    0x405895
  406efd:	mov    BYTE PTR [rbx],0x1
  406f00:	add    rbx,0x1
  406f04:	mov    rcx,QWORD PTR [rsp+0x40]
  406f09:	call   0x40a8f0
  406f0e:	sub    rbx,QWORD PTR [r14]
  406f11:	xor    eax,eax
  406f13:	mov    DWORD PTR [r14+0xc],ebx
  406f17:	jmp    0x405895
  406f1c:	test   r15,r15
  406f1f:	jne    0x40623f
  406f25:	sub    DWORD PTR [rsp+0x50],0x1
  406f2a:	mov    rsi,QWORD PTR [rsp+0x40]
  406f2f:	xor    r15d,r15d
  406f32:	mov    eax,DWORD PTR [rsp+0x50]
  406f36:	mov    rcx,QWORD PTR [rbp+0x0]
  406f3a:	lea    rax,[rax+rax*4]
  406f3e:	lea    rdx,[rsi+rax*4]
  406f42:	movsxd rax,DWORD PTR [rdx]
  406f45:	lea    r14,[rcx+rax*1]
  406f49:	movsxd rax,DWORD PTR [rdx+0x4]
  406f4d:	test   eax,eax
  406f4f:	je     0x406f56
  406f51:	lea    r15,[rcx+rax*1-0x1]
  406f56:	movsxd rax,DWORD PTR [rdx+0xc]
  406f5a:	mov    edi,DWORD PTR [rdx+0x10]
  406f5d:	cmp    edi,0xff
  406f63:	lea    r13,[rcx+rax*1]
  406f67:	ja     0x4071be
  406f6d:	movzx  r12d,BYTE PTR [rsp+0x54]
  406f73:	movsxd rax,DWORD PTR [rdx+0x8]
  406f77:	sub    r12d,edi
  406f7a:	mov    BYTE PTR [rcx+rax*1],r12b
  406f7e:	mov    rsi,QWORD PTR [rbp+0x0]
  406f82:	jmp    0x406fc7
  406f84:	mov    DWORD PTR [rbp+0x8],eax
  406f87:	mov    edx,eax
  406f89:	mov    rcx,rsi
  406f8c:	call   0x40a858
  406f91:	test   rax,rax
  406f94:	mov    QWORD PTR [rbp+0x0],rax
  406f98:	je     0x405890
  406f9e:	cmp    rax,rsi
  406fa1:	je     0x406fc4
  406fa3:	mov    rdx,rax
  406fa6:	sub    rdx,rsi
  406fa9:	lea    rcx,[r15+rdx*1]
  406fad:	add    rbx,rdx
  406fb0:	add    r14,rdx
  406fb3:	test   r15,r15
  406fb6:	cmovne r15,rcx
  406fba:	add    rdx,r13
  406fbd:	test   r13,r13
  406fc0:	cmovne r13,rdx
  406fc4:	mov    rsi,rax
  406fc7:	mov    eax,DWORD PTR [rbp+0x8]
  406fca:	mov    rdx,rbx
  406fcd:	sub    rdx,rsi
  406fd0:	add    edx,0x3
  406fd3:	cmp    edx,eax
  406fd5:	jbe    0x407f48
  406fdb:	cmp    eax,0x10000
  406fe0:	je     0x405b40
  406fe6:	add    eax,eax
  406fe8:	cmp    eax,0x10000
  406fed:	jbe    0x406f84
  406fef:	mov    DWORD PTR [rbp+0x8],0x10000
  406ff6:	mov    edx,0x10000
  406ffb:	jmp    0x406f89
  406ffd:	mov    rbx,r12
  407000:	mov    rcx,QWORD PTR [rsp+0xc8]
  407008:	xor    r12d,r12d
  40700b:	jmp    0x405837
  407010:	xor    edx,edx
  407012:	jmp    0x40619c
  407017:	mov    eax,DWORD PTR [rsp+0x50]
  40701b:	mov    rcx,QWORD PTR [rsp+0x40]
  407020:	add    eax,eax
  407022:	lea    rdx,[rax+rax*4]
  407026:	mov    DWORD PTR [rsp+0x70],eax
  40702a:	shl    rdx,0x2
  40702e:	call   0x40a858
  407033:	test   rax,rax
  407036:	mov    QWORD PTR [rsp+0x40],rax
  40703b:	jne    0x40616d
  407041:	jmp    0x405890
  407046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407050:	lea    rax,[rbx+0x1]
  407054:	mov    QWORD PTR [rsp+0x60],rax
  407059:	mov    rax,QWORD PTR [rsp+0xc8]
  407061:	cmp    BYTE PTR [rax],0x5e
  407064:	sete   al
  407067:	add    eax,0x4
  40706a:	mov    BYTE PTR [rbx],al
  40706c:	mov    rax,QWORD PTR [rsp+0xc8]
  407074:	cmp    BYTE PTR [rax],0x5e
  407077:	mov    QWORD PTR [rsp+0x68],rax
  40707c:	jne    0x407091
  40707e:	add    QWORD PTR [rsp+0x68],0x1
  407084:	mov    rax,QWORD PTR [rsp+0x68]
  407089:	mov    QWORD PTR [rsp+0xc8],rax
  407091:	mov    rbx,QWORD PTR [rbp+0x0]
  407095:	mov    rsi,QWORD PTR [rsp+0x60]
  40709a:	jmp    0x4070ec
  40709c:	mov    DWORD PTR [rbp+0x8],eax
  40709f:	mov    edx,eax
  4070a1:	mov    rcx,QWORD PTR [rbp+0x0]
  4070a5:	call   0x40a858
  4070aa:	test   rax,rax
  4070ad:	mov    QWORD PTR [rbp+0x0],rax
  4070b1:	je     0x405890
  4070b7:	cmp    rax,rbx
  4070ba:	je     0x4070e9
  4070bc:	mov    rdx,rax
  4070bf:	sub    rdx,rbx
  4070c2:	lea    rcx,[r15+rdx*1]
  4070c6:	add    rsi,rdx
  4070c9:	add    r14,rdx
  4070cc:	test   r15,r15
  4070cf:	cmovne r15,rcx
  4070d3:	lea    rcx,[r13+rdx*1+0x0]
  4070d8:	test   r13,r13
  4070db:	cmovne r13,rcx
  4070df:	add    rdx,r12
  4070e2:	test   r12,r12
  4070e5:	cmovne r12,rdx
  4070e9:	mov    rbx,rax
  4070ec:	mov    eax,DWORD PTR [rbp+0x8]
  4070ef:	mov    rdx,rsi
  4070f2:	sub    rdx,rbx
  4070f5:	add    edx,0x1
  4070f8:	cmp    edx,eax
  4070fa:	jbe    0x4073b3
  407100:	cmp    eax,0x10000
  407105:	je     0x405b40
  40710b:	add    eax,eax
  40710d:	cmp    eax,0x10000
  407112:	jbe    0x40709c
  407114:	mov    DWORD PTR [rbp+0x8],0x10000
  40711b:	mov    edx,0x10000
  407120:	jmp    0x4070a1
  407125:	cmp    dl,0x2c
  407128:	jne    0x4059dd
  40712e:	add    rcx,0x1
  407132:	mov    r8d,0xffffffff
  407138:	mov    r11,QWORD PTR [rsp+0x38]
  40713d:	jmp    0x407186
  40713f:	nop
  407140:	test   r11,r11
  407143:	mov    QWORD PTR [rsp+0xc8],rcx
  40714b:	movzx  edx,BYTE PTR [rcx-0x1]
  40714f:	je     0x407156
  407151:	movzx  edx,BYTE PTR [r11+rdx*1]
  407156:	lea    r10d,[rdx-0x30]
  40715a:	cmp    r10b,0x9
  40715e:	ja     0x40718b
  407160:	cmp    r8d,0x7fff
  407167:	jg     0x407182
  407169:	xor    r10d,r10d
  40716c:	cmp    r8d,0xffffffff
  407170:	je     0x407179
  407172:	lea    r10d,[r8+r8*4]
  407176:	add    r10d,r10d
  407179:	movzx  r8d,dl
  40717d:	lea    r8d,[r10+r8*1-0x30]
  407182:	add    rcx,0x1
  407186:	cmp    rcx,r9
  407189:	jne    0x407140
  40718b:	cmp    r8d,0xffffffff
  40718f:	je     0x40802c
  407195:	cmp    edi,r8d
  407198:	mov    r9d,edi
  40719b:	mov    edi,r8d
  40719e:	setg   cl
  4071a1:	jmp    0x4059e2
  4071a6:	mov    BYTE PTR [r13+0x1],cl
  4071aa:	sar    ecx,0x8
  4071ad:	mov    BYTE PTR [r13+0x0],0x17
  4071b2:	mov    BYTE PTR [r13+0x2],cl
  4071b6:	mov    BYTE PTR [r13+0x3],dil
  4071ba:	mov    BYTE PTR [r13+0x4],r8b
  4071be:	mov    rcx,QWORD PTR [rsp+0xc8]
  4071c6:	xor    r12d,r12d
  4071c9:	jmp    0x405837
  4071ce:	cmp    r13,r12
  4071d1:	lea    rbx,[r12+0x3]
  4071d6:	je     0x4071eb
  4071d8:	sub    r12,0x1
  4071dc:	movzx  eax,BYTE PTR [r12]
  4071e1:	cmp    r12,r13
  4071e4:	mov    BYTE PTR [r12+0x3],al
  4071e9:	jne    0x4071d8
  4071eb:	mov    BYTE PTR [r13+0x0],0x13
  4071f0:	mov    BYTE PTR [r13+0x1],0x3
  4071f5:	xor    r12d,r12d
  4071f8:	mov    BYTE PTR [r13+0x2],0x0
  4071fd:	mov    rcx,QWORD PTR [rsp+0xc8]
  407205:	jmp    0x405837
  40720a:	cmp    al,0x5c
  40720c:	mov    rdi,rbx
  40720f:	jne    0x405cd4
  407215:	cmp    BYTE PTR [rdx+0x1],0x7b
  407219:	jne    0x405cd4
  40721f:	jmp    0x405aba
  407224:	mov    rdx,QWORD PTR [rsp+0xc8]
  40722c:	cmp    rdx,QWORD PTR [rsp+0x48]
  407231:	je     0x405a16
  407237:	mov    rsi,QWORD PTR [rsp+0x38]
  40723c:	lea    r8,[rdx+0x1]
  407240:	mov    QWORD PTR [rsp+0xc8],r8
  407248:	movzx  edx,BYTE PTR [rdx]
  40724b:	test   rsi,rsi
  40724e:	je     0x407254
  407250:	movzx  edx,BYTE PTR [rsi+rdx*1]
  407254:	cmp    dl,0x7d
  407257:	jne    0x406d4e
  40725d:	test   r13,r13
  407260:	je     0x407f0c
  407266:	cmp    edi,0x7fff
  40726c:	jg     0x407ef8
  407272:	test   edi,edi
  407274:	jne    0x408050
  40727a:	mov    rsi,QWORD PTR [rbp+0x0]
  40727e:	jmp    0x4072e3
  407280:	cmp    eax,0x10000
  407285:	je     0x405b40
  40728b:	add    eax,eax
  40728d:	cmp    eax,0x10000
  407292:	mov    DWORD PTR [rbp+0x8],eax
  407295:	mov    edx,eax
  407297:	jbe    0x4072a5
  407299:	mov    DWORD PTR [rbp+0x8],0x10000
  4072a0:	mov    edx,0x10000
  4072a5:	mov    rcx,rsi
  4072a8:	call   0x40a858
  4072ad:	test   rax,rax
  4072b0:	mov    QWORD PTR [rbp+0x0],rax
  4072b4:	je     0x405890
  4072ba:	cmp    rax,rsi
  4072bd:	je     0x4072e0
  4072bf:	mov    rdx,rax
  4072c2:	sub    rdx,rsi
  4072c5:	lea    rcx,[r15+rdx*1]
  4072c9:	add    rbx,rdx
  4072cc:	add    r14,rdx
  4072cf:	test   r15,r15
  4072d2:	cmovne r15,rcx
  4072d6:	add    rdx,r13
  4072d9:	test   r13,r13
  4072dc:	cmovne r13,rdx
  4072e0:	mov    rsi,rax
  4072e3:	mov    eax,DWORD PTR [rbp+0x8]
  4072e6:	mov    rdx,rbx
  4072e9:	sub    rdx,rsi
  4072ec:	add    edx,0x3
  4072ef:	cmp    edx,eax
  4072f1:	ja     0x407280
  4072f3:	mov    eax,ebx
  4072f5:	lea    rdx,[rbx+0x3]
  4072f9:	sub    eax,r13d
  4072fc:	cmp    r13,rbx
  4072ff:	je     0x407310
  407301:	sub    rbx,0x1
  407305:	movzx  ecx,BYTE PTR [rbx]
  407308:	cmp    rbx,r13
  40730b:	mov    BYTE PTR [rbx+0x3],cl
  40730e:	jne    0x407301
  407310:	mov    BYTE PTR [r13+0x1],al
  407314:	sar    eax,0x8
  407317:	mov    BYTE PTR [r13+0x0],0xd
  40731c:	mov    BYTE PTR [r13+0x2],al
  407320:	mov    rbx,rdx
  407323:	mov    rcx,QWORD PTR [rsp+0xc8]
  40732b:	xor    r12d,r12d
  40732e:	jmp    0x405837
  407333:	movzx  eax,BYTE PTR [rcx-0x1]
  407337:	cmp    al,0x28
  407339:	je     0x405f1b
  40733f:	cmp    al,0x7c
  407341:	jne    0x405a42
  407347:	jmp    0x405f1b
  40734c:	nop    DWORD PTR [rax+0x0]
  407350:	test   dil,0x1
  407354:	je     0x406dca
  40735a:	cmp    rax,QWORD PTR [rsp+0x48]
  40735f:	jae    0x406dca
  407365:	mov    rsi,QWORD PTR [rsp+0x38]
  40736a:	test   rsi,rsi
  40736d:	je     0x407805
  407373:	movzx  eax,BYTE PTR [rax]
  407376:	movsx  edx,BYTE PTR [rsi+rax*1]
  40737a:	movsx  eax,BYTE PTR [rsi+0xa]
  40737e:	cmp    edx,eax
  407380:	jne    0x406dca
  407386:	test   BYTE PTR [rsp+0x1b0],0x40
  40738e:	jne    0x406dca
  407394:	mov    rax,r13
  407397:	mov    BYTE PTR [rbx],0xd
  40739a:	mov    esi,0x1
  40739f:	sub    rax,rbx
  4073a2:	sub    eax,0x3
  4073a5:	mov    BYTE PTR [rbx+0x1],al
  4073a8:	sar    eax,0x8
  4073ab:	mov    BYTE PTR [rbx+0x2],al
  4073ae:	jmp    0x406de0
  4073b3:	lea    rbx,[rsi+0x1]
  4073b7:	mov    BYTE PTR [rsi],0x20
  4073ba:	mov    QWORD PTR [rsi+0x1],0x0
  4073c2:	mov    QWORD PTR [rsp+0x60],rsi
  4073c7:	mov    QWORD PTR [rbx+0x8],0x0
  4073cf:	mov    QWORD PTR [rbx+0x10],0x0
  4073d7:	mov    QWORD PTR [rbx+0x18],0x0
  4073df:	cmp    BYTE PTR [rsi-0x1],0x5
  4073e3:	je     0x4081de
  4073e9:	mov    QWORD PTR [rsp+0xa8],r13
  4073f1:	mov    QWORD PTR [rsp+0xb0],r14
  4073f9:	mov    edi,0xffffffff
  4073fe:	mov    QWORD PTR [rsp+0x1b8],rbp
  407406:	mov    rax,QWORD PTR [rsp+0xc8]
  40740e:	xor    esi,esi
  407410:	mov    r14,QWORD PTR [rsp+0x60]
  407415:	mov    r13,QWORD PTR [rsp+0x38]
  40741a:	mov    rbp,QWORD PTR [rsp+0x48]
  40741f:	mov    QWORD PTR [rsp+0xa0],r12
  407427:	mov    r12d,edi
  40742a:	mov    QWORD PTR [rsp+0xb8],r15
  407432:	cmp    rbp,rax
  407435:	je     0x407524
  40743b:	lea    rcx,[rax+0x1]
  40743f:	test   r13,r13
  407442:	mov    QWORD PTR [rsp+0xc8],rcx
  40744a:	movzx  r8d,BYTE PTR [rax]
  40744e:	je     0x407456
  407450:	movzx  r8d,BYTE PTR [r13+r8*1+0x0]
  407456:	cmp    r8b,0x5c
  40745a:	jne    0x40746a
  40745c:	test   BYTE PTR [rsp+0x1b0],0x1
  407464:	jne    0x4077a0
  40746a:	cmp    r8b,0x5d
  40746e:	je     0x407655
  407474:	cmp    r8b,0x2d
  407478:	jne    0x407540
  40747e:	test   sil,sil
  407481:	je     0x40798f
  407487:	cmp    BYTE PTR [rax+0x1],0x5d
  40748b:	jne    0x407812
  407491:	mov    edx,0x5d
  407496:	lea    r9,[rax-0x1]
  40749a:	cmp    QWORD PTR [rsp+0x1a0],r9
  4074a2:	ja     0x4074ae
  4074a4:	cmp    BYTE PTR [rax-0x1],0x5b
  4074a8:	je     0x407544
  4074ae:	lea    r9,[rax-0x2]
  4074b2:	cmp    QWORD PTR [rsp+0x1a0],r9
  4074ba:	ja     0x4074c6
  4074bc:	cmp    BYTE PTR [rax-0x2],0x5b
  4074c0:	je     0x407826
  4074c6:	cmp    dl,0x5d
  4074c9:	jne    0x40775b
  4074cf:	test   BYTE PTR [rsp+0x1b0],0x4
  4074d7:	je     0x4074f4
  4074d9:	cmp    r8b,0x5b
  4074dd:	mov    edx,0x5d
  4074e2:	sete   r10b
  4074e6:	cmp    dl,0x2e
  4074e9:	jne    0x4074f4
  4074eb:	test   r10b,r10b
  4074ee:	jne    0x407874
  4074f4:	mov    eax,r8d
  4074f7:	mov    ecx,r8d
  4074fa:	mov    edx,0x1
  4074ff:	shr    al,0x3
  407502:	and    ecx,0x7
  407505:	movzx  r12d,r8b
  407509:	movzx  eax,al
  40750c:	shl    edx,cl
  40750e:	or     BYTE PTR [rbx+rax*1],dl
  407511:	mov    rax,QWORD PTR [rsp+0xc8]
  407519:	xor    esi,esi
  40751b:	cmp    rbp,rax
  40751e:	jne    0x40743b
  407524:	mov    rcx,QWORD PTR [rsp+0x40]
  407529:	call   0x40a8f0
  40752e:	mov    eax,0x7
  407533:	jmp    0x405895
  407538:	nop    DWORD PTR [rax+rax*1+0x0]
  407540:	movzx  edx,BYTE PTR [rax+0x1]
  407544:	cmp    dl,0x2d
  407547:	je     0x4076ed
  40754d:	test   BYTE PTR [rsp+0x1b0],0x4
  407555:	je     0x4074f4
  407557:	cmp    r8b,0x5b
  40755b:	sete   r9b
  40755f:	cmp    dl,0x3a
  407562:	mov    r10d,r9d
  407565:	jne    0x407570
  407567:	test   r9b,r9b
  40756a:	jne    0x407998
  407570:	cmp    dl,0x3d
  407573:	jne    0x4074e6
  407579:	test   r9b,r9b
  40757c:	je     0x4074e6
  407582:	cmp    rbp,rcx
  407585:	je     0x407985
  40758b:	add    rax,0x2
  40758f:	cmp    rbp,rax
  407592:	mov    QWORD PTR [rsp+0xc8],rax
  40759a:	je     0x407524
  40759c:	xor    edx,edx
  40759e:	jmp    0x4075cb
  4075a0:	cmp    rbp,r8
  4075a3:	je     0x40795d
  4075a9:	cmp    dl,0x4
  4075ac:	ja     0x4076e0
  4075b2:	movzx  eax,dl
  4075b5:	add    edx,0x1
  4075b8:	mov    BYTE PTR [rsp+rax*1+0xd0],cl
  4075bf:	cmp    rbp,r8
  4075c2:	mov    rax,r8
  4075c5:	je     0x407985
  4075cb:	lea    r8,[rax+0x1]
  4075cf:	test   r13,r13
  4075d2:	mov    QWORD PTR [rsp+0xc8],r8
  4075da:	movzx  ecx,BYTE PTR [r8-0x1]
  4075df:	je     0x4075e7
  4075e1:	movzx  ecx,BYTE PTR [r13+rcx*1+0x0]
  4075e7:	cmp    cl,0x3d
  4075ea:	jne    0x4075a0
  4075ec:	cmp    BYTE PTR [r8],0x5d
  4075f0:	jne    0x4075a0
  4075f2:	movzx  ecx,dl
  4075f5:	mov    r9,r8
  4075f8:	mov    BYTE PTR [rsp+rcx*1+0xd0],0x0
  407600:	movzx  ecx,BYTE PTR [rsp+0xd0]
  407608:	test   cl,cl
  40760a:	je     0x407849
  407610:	cmp    dl,0x1
  407613:	jne    0x407835
  407619:	cmp    rbp,r8
  40761c:	je     0x407985
  407622:	add    rax,0x2
  407626:	mov    edx,0x1
  40762b:	mov    QWORD PTR [rsp+0xc8],rax
  407633:	mov    eax,ecx
  407635:	and    ecx,0x7
  407638:	shr    al,0x3
  40763b:	shl    edx,cl
  40763d:	movzx  eax,al
  407640:	or     BYTE PTR [rbx+rax*1],dl
  407643:	mov    rax,QWORD PTR [rsp+0xc8]
  40764b:	mov    esi,0x1
  407650:	jmp    0x407432
  407655:	mov    rdi,QWORD PTR [rsp+0x68]
  40765a:	lea    rdx,[rdi+0x1]
  40765e:	cmp    rcx,rdx
  407661:	je     0x407540
  407667:	mov    rax,QWORD PTR [rsp+0x60]
  40766c:	mov    r12,QWORD PTR [rsp+0xa0]
  407674:	mov    r13,QWORD PTR [rsp+0xa8]
  40767c:	mov    r14,QWORD PTR [rsp+0xb0]
  407684:	mov    r15,QWORD PTR [rsp+0xb8]
  40768c:	mov    rbp,QWORD PTR [rsp+0x1b8]
  407694:	movzx  eax,BYTE PTR [rax]
  407697:	test   al,al
  407699:	je     0x407ed7
  40769f:	movzx  edx,al
  4076a2:	sub    eax,0x1
  4076a5:	cmp    BYTE PTR [rbx+rdx*1-0x1],0x0
  4076aa:	jne    0x4076d0
  4076ac:	mov    rsi,QWORD PTR [rsp+0x60]
  4076b1:	test   al,al
  4076b3:	mov    BYTE PTR [rsi],al
  4076b5:	je     0x407ede
  4076bb:	movzx  edx,al
  4076be:	sub    eax,0x1
  4076c1:	cmp    BYTE PTR [rbx+rdx*1-0x1],0x0
  4076c6:	je     0x4076ac
  4076c8:	mov    rcx,QWORD PTR [rsp+0xc8]
  4076d0:	add    rbx,rdx
  4076d3:	jmp    0x405837
  4076d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4076e0:	mov    BYTE PTR [rsp+0xd0],0x0
  4076e8:	jmp    0x4075bf
  4076ed:	cmp    BYTE PTR [rax+0x2],0x5d
  4076f1:	je     0x4074f4
  4076f7:	cmp    rbp,rcx
  4076fa:	je     0x407985
  407700:	add    rax,0x2
  407704:	lea    rdx,[rsp+0xc8]
  40770c:	movzx  ecx,r8b
  407710:	mov    QWORD PTR [rsp+0xc8],rax
  407718:	mov    eax,DWORD PTR [rsp+0x1b0]
  40771f:	mov    r9,r13
  407722:	mov    QWORD PTR [rsp+0x28],rbx
  407727:	mov    r8,rbp
  40772a:	mov    DWORD PTR [rsp+0x20],eax
  40772e:	call   0x402bd0
  407733:	test   eax,eax
  407735:	jne    0x407785
  407737:	mov    rax,QWORD PTR [rsp+0xc8]
  40773f:	mov    r12d,0xffffffff
  407745:	jmp    0x407432
  40774a:	mov    DWORD PTR [rbp+0x8],0x10000
  407751:	mov    edx,0x10000
  407756:	jmp    0x406864
  40775b:	mov    eax,DWORD PTR [rsp+0x1b0]
  407762:	lea    rdx,[rsp+0xc8]
  40776a:	mov    QWORD PTR [rsp+0x28],rbx
  40776f:	mov    r9,r13
  407772:	mov    r8,rbp
  407775:	mov    ecx,r12d
  407778:	mov    DWORD PTR [rsp+0x20],eax
  40777c:	call   0x402bd0
  407781:	test   eax,eax
  407783:	je     0x407737
  407785:	mov    rcx,QWORD PTR [rsp+0x40]
  40778a:	mov    edi,eax
  40778c:	call   0x40a8f0
  407791:	mov    eax,edi
  407793:	jmp    0x405895
  407798:	nop    DWORD PTR [rax+rax*1+0x0]
  4077a0:	cmp    rbp,rcx
  4077a3:	je     0x406de9
  4077a9:	lea    rdx,[rax+0x2]
  4077ad:	test   r13,r13
  4077b0:	mov    QWORD PTR [rsp+0xc8],rdx
  4077b8:	movzx  r12d,BYTE PTR [rax+0x1]
  4077bd:	je     0x4077c5
  4077bf:	movzx  r12d,BYTE PTR [r13+r12*1+0x0]
  4077c5:	mov    eax,r12d
  4077c8:	mov    ecx,r12d
  4077cb:	mov    edx,0x1
  4077d0:	shr    al,0x3
  4077d3:	and    ecx,0x7
  4077d6:	movzx  eax,al
  4077d9:	shl    edx,cl
  4077db:	or     BYTE PTR [rbx+rax*1],dl
  4077de:	mov    rax,QWORD PTR [rsp+0xc8]
  4077e6:	jmp    0x407432
  4077eb:	lea    rbx,[rsi+0x3]
  4077ef:	mov    rcx,QWORD PTR [rsp+0xc8]
  4077f7:	xor    r13d,r13d
  4077fa:	xor    r12d,r12d
  4077fd:	mov    r14,rbx
  407800:	jmp    0x405837
  407805:	movsx  edx,BYTE PTR [rax]
  407808:	mov    eax,0xa
  40780d:	jmp    0x40737e
  407812:	mov    rcx,QWORD PTR [rsp+0x40]
  407817:	call   0x40a8f0
  40781c:	mov    eax,0xb
  407821:	jmp    0x405895
  407826:	cmp    BYTE PTR [rax-0x1],0x5e
  40782a:	jne    0x4074c6
  407830:	jmp    0x407544
  407835:	mov    rcx,QWORD PTR [rsp+0x40]
  40783a:	call   0x40a8f0
  40783f:	mov    eax,0x3
  407844:	jmp    0x405895
  407849:	mov    r8,r9
  40784c:	movzx  eax,dl
  40784f:	or     BYTE PTR [r14+0xc],0x8
  407854:	or     BYTE PTR [r14+0x8],0x20
  407859:	not    rax
  40785c:	mov    r12d,0x3d
  407862:	xor    esi,esi
  407864:	add    rax,r8
  407867:	mov    QWORD PTR [rsp+0xc8],rax
  40786f:	jmp    0x407432
  407874:	cmp    rbp,rcx
  407877:	je     0x407985
  40787d:	add    rax,0x2
  407881:	cmp    rbp,rax
  407884:	mov    QWORD PTR [rsp+0xc8],rax
  40788c:	je     0x407524
  407892:	xor    edx,edx
  407894:	jmp    0x4078ca
  407896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4078a0:	cmp    rbp,r8
  4078a3:	je     0x4081f8
  4078a9:	test   dl,dl
  4078ab:	js     0x407950
  4078b1:	movzx  eax,dl
  4078b4:	add    edx,0x1
  4078b7:	mov    BYTE PTR [rsp+rax*1+0xd0],cl
  4078be:	cmp    rbp,r8
  4078c1:	mov    rax,r8
  4078c4:	je     0x407985
  4078ca:	lea    r8,[rax+0x1]
  4078ce:	test   r13,r13
  4078d1:	mov    QWORD PTR [rsp+0xc8],r8
  4078d9:	movzx  ecx,BYTE PTR [r8-0x1]
  4078de:	je     0x4078e6
  4078e0:	movzx  ecx,BYTE PTR [r13+rcx*1+0x0]
  4078e6:	cmp    cl,0x2e
  4078e9:	jne    0x4078a0
  4078eb:	cmp    BYTE PTR [r8],0x5d
  4078ef:	jne    0x4078a0
  4078f1:	movzx  ecx,dl
  4078f4:	mov    BYTE PTR [rsp+rcx*1+0xd0],0x0
  4078fc:	mov    rcx,r8
  4078ff:	movzx  r12d,BYTE PTR [rsp+0xd0]
  407908:	test   r12b,r12b
  40790b:	je     0x408243
  407911:	cmp    dl,0x1
  407914:	jne    0x407835
  40791a:	cmp    rbp,r8
  40791d:	je     0x407985
  40791f:	add    rax,0x2
  407923:	mov    ecx,r12d
  407926:	mov    edx,0x1
  40792b:	mov    QWORD PTR [rsp+0xc8],rax
  407933:	mov    eax,r12d
  407936:	and    ecx,0x7
  407939:	shr    al,0x3
  40793c:	shl    edx,cl
  40793e:	movzx  eax,al
  407941:	or     BYTE PTR [rbx+rax*1],dl
  407944:	jmp    0x407511
  407949:	nop    DWORD PTR [rax+0x0]
  407950:	mov    BYTE PTR [rsp+0xd0],0x0
  407958:	jmp    0x4078be
  40795d:	movzx  r9d,dl
  407961:	cmp    cl,0x3d
  407964:	mov    BYTE PTR [rsp+r9*1+0xd0],0x0
  40796d:	jne    0x40784c
  407973:	cmp    BYTE PTR [rax+0x1],0x5d
  407977:	jne    0x40784c
  40797d:	mov    r9,rbp
  407980:	jmp    0x407600
  407985:	mov    eax,0xe
  40798a:	jmp    0x405895
  40798f:	movzx  edx,BYTE PTR [rax+0x1]
  407993:	jmp    0x407496
  407998:	cmp    rbp,rcx
  40799b:	je     0x407985
  40799d:	add    rax,0x2
  4079a1:	cmp    rbp,rax
  4079a4:	mov    QWORD PTR [rsp+0xc8],rax
  4079ac:	je     0x407524
  4079b2:	xor    edx,edx
  4079b4:	jmp    0x4079e7
  4079b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4079c0:	cmp    rbp,r8
  4079c3:	je     0x407e9d
  4079c9:	cmp    dl,0x5
  4079cc:	ja     0x407e44
  4079d2:	movzx  eax,dl
  4079d5:	add    edx,0x1
  4079d8:	mov    BYTE PTR [rsp+rax*1+0xd0],cl
  4079df:	cmp    rbp,r8
  4079e2:	mov    rax,r8
  4079e5:	je     0x407985
  4079e7:	lea    r8,[rax+0x1]
  4079eb:	test   r13,r13
  4079ee:	mov    QWORD PTR [rsp+0xc8],r8
  4079f6:	movzx  ecx,BYTE PTR [r8-0x1]
  4079fb:	je     0x407a03
  4079fd:	movzx  ecx,BYTE PTR [r13+rcx*1+0x0]
  407a03:	cmp    cl,0x3a
  407a06:	jne    0x4079c0
  407a08:	cmp    BYTE PTR [r8],0x5d
  407a0c:	jne    0x4079c0
  407a0e:	movzx  edx,dl
  407a11:	mov    BYTE PTR [rsp+rdx*1+0xd0],0x0
  407a19:	lea    rdx,[rsp+0xd0]
  407a21:	lea    rdi,[rip+0x1b300]        # 0x422d28
  407a28:	mov    ecx,0x6
  407a2d:	mov    rsi,rdx
  407a30:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407a32:	lea    rdi,[rip+0x1b2f5]        # 0x422d2e
  407a39:	setb   cl
  407a3c:	seta   r9b
  407a40:	sub    r9d,ecx
  407a43:	mov    ecx,0x6
  407a48:	movsx  esi,r9b
  407a4c:	mov    r11d,esi
  407a4f:	mov    DWORD PTR [rsp+0x94],esi
  407a56:	mov    rsi,rdx
  407a59:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407a5b:	lea    rdi,[rip+0x1b2d2]        # 0x422d34
  407a62:	setb   cl
  407a65:	seta   r9b
  407a69:	sub    r9d,ecx
  407a6c:	mov    ecx,0x6
  407a71:	movsx  esi,r9b
  407a75:	mov    DWORD PTR [rsp+0x74],esi
  407a79:	mov    rsi,rdx
  407a7c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407a7e:	mov    rsi,rdx
  407a81:	setb   cl
  407a84:	seta   r9b
  407a88:	sub    r9d,ecx
  407a8b:	mov    ecx,0x6
  407a90:	movsx  edi,r9b
  407a94:	mov    DWORD PTR [rsp+0x78],edi
  407a98:	lea    rdi,[rip+0x1b29b]        # 0x422d3a
  407a9f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407aa1:	lea    rdi,[rip+0x1b298]        # 0x422d40
  407aa8:	mov    rsi,rdx
  407aab:	setb   cl
  407aae:	seta   r9b
  407ab2:	sub    r9d,ecx
  407ab5:	movsx  ecx,r9b
  407ab9:	mov    DWORD PTR [rsp+0x7c],ecx
  407abd:	mov    ecx,0x6
  407ac2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407ac4:	lea    rdi,[rip+0x1b27b]        # 0x422d46
  407acb:	mov    rsi,rdx
  407ace:	setb   cl
  407ad1:	seta   r9b
  407ad5:	sub    r9d,ecx
  407ad8:	mov    ecx,0x6
  407add:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407adf:	movsx  r10d,r9b
  407ae3:	lea    rdi,[rip+0x1b262]        # 0x422d4c
  407aea:	mov    rsi,rdx
  407aed:	setb   cl
  407af0:	seta   r9b
  407af4:	mov    DWORD PTR [rsp+0x80],r10d
  407afc:	sub    r9d,ecx
  407aff:	mov    ecx,0x6
  407b04:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407b06:	movsx  r9d,r9b
  407b0a:	lea    rdi,[rip+0x1b241]        # 0x422d52
  407b11:	mov    rsi,rdx
  407b14:	setb   cl
  407b17:	mov    DWORD PTR [rsp+0x84],r9d
  407b1f:	seta   r9b
  407b23:	sub    r9d,ecx
  407b26:	mov    ecx,0x6
  407b2b:	movsx  r9d,r9b
  407b2f:	test   r9d,r9d
  407b32:	sete   BYTE PTR [rsp+0x92]
  407b3a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407b3c:	lea    rdi,[rip+0x1b215]        # 0x422d58
  407b43:	mov    rsi,rdx
  407b46:	seta   r10b
  407b4a:	setb   cl
  407b4d:	mov    r15d,r10d
  407b50:	sub    r15d,ecx
  407b53:	mov    ecx,0x6
  407b58:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407b5a:	mov    rsi,rdx
  407b5d:	movsx  r15d,r15b
  407b61:	seta   r10b
  407b65:	setb   cl
  407b68:	mov    DWORD PTR [rsp+0x88],r15d
  407b70:	mov    edi,r10d
  407b73:	sub    edi,ecx
  407b75:	mov    ecx,0x6
  407b7a:	movsx  edi,dil
  407b7e:	mov    DWORD PTR [rsp+0x8c],edi
  407b85:	lea    rdi,[rip+0x1b1d2]        # 0x422d5e
  407b8c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407b8e:	lea    rdi,[rip+0x1b1cf]        # 0x422d64
  407b95:	mov    rsi,rdx
  407b98:	setb   cl
  407b9b:	seta   r15b
  407b9f:	sub    r15d,ecx
  407ba2:	mov    ecx,0x6
  407ba7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407ba9:	lea    rdi,[rip+0x1b1ba]        # 0x422d6a
  407bb0:	mov    rsi,rdx
  407bb3:	movsx  r15d,r15b
  407bb7:	setb   cl
  407bba:	seta   r10b
  407bbe:	sub    r10d,ecx
  407bc1:	mov    ecx,0x7
  407bc6:	movsx  r10d,r10b
  407bca:	test   r10d,r10d
  407bcd:	sete   BYTE PTR [rsp+0x93]
  407bd5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407bd7:	mov    ecx,DWORD PTR [rsp+0x74]
  407bdb:	mov    esi,DWORD PTR [rsp+0x84]
  407be2:	setb   dl
  407be5:	seta   dil
  407be9:	sub    edi,edx
  407beb:	test   ecx,ecx
  407bed:	movsx  edi,dil
  407bf1:	setne  cl
  407bf4:	test   r10d,r10d
  407bf7:	mov    r10d,DWORD PTR [rsp+0x88]
  407bff:	setne  dl
  407c02:	and    ecx,edx
  407c04:	test   r9d,r9d
  407c07:	mov    r9d,DWORD PTR [rsp+0x80]
  407c0f:	setne  dl
  407c12:	and    ecx,edx
  407c14:	test   r9d,r9d
  407c17:	setne  dl
  407c1a:	and    ecx,edx
  407c1c:	test   r11d,r11d
  407c1f:	mov    r11d,DWORD PTR [rsp+0x8c]
  407c27:	setne  dl
  407c2a:	and    ecx,edx
  407c2c:	test   edi,edi
  407c2e:	setne  dl
  407c31:	and    ecx,edx
  407c33:	test   r15d,r15d
  407c36:	setne  dl
  407c39:	and    ecx,edx
  407c3b:	test   r10d,r10d
  407c3e:	setne  dl
  407c41:	and    ecx,edx
  407c43:	test   r11d,r11d
  407c46:	setne  dl
  407c49:	and    ecx,edx
  407c4b:	test   esi,esi
  407c4d:	setne  dl
  407c50:	and    edx,ecx
  407c52:	mov    ecx,DWORD PTR [rsp+0x7c]
  407c56:	test   ecx,ecx
  407c58:	setne  cl
  407c5b:	test   dl,cl
  407c5d:	je     0x407c6b
  407c5f:	mov    edx,DWORD PTR [rsp+0x78]
  407c63:	test   edx,edx
  407c65:	jne    0x407e89
  407c6b:	cmp    rbp,r8
  407c6e:	je     0x407985
  407c74:	add    rax,0x2
  407c78:	cmp    rbp,rax
  407c7b:	mov    QWORD PTR [rsp+0xc8],rax
  407c83:	je     0x407524
  407c89:	mov    rax,QWORD PTR [rip+0x208a4]        # 0x428534
  407c90:	xor    esi,esi
  407c92:	mov    QWORD PTR [rsp+0x98],rax
  407c9a:	jmp    0x407d72
  407c9f:	mov    ecx,esi
  407ca1:	mov    rax,QWORD PTR [rsp+0x58]
  407ca6:	call   rax
  407ca8:	test   eax,eax
  407caa:	je     0x407e04
  407cb0:	mov    ecx,esi
  407cb2:	call   QWORD PTR [rip+0x2087c]        # 0x428534
  407cb8:	test   eax,eax
  407cba:	jne    0x407e04
  407cc0:	mov    eax,esi
  407cc2:	mov    ecx,esi
  407cc4:	mov    edx,0x1
  407cc9:	shr    al,0x3
  407ccc:	and    ecx,0x7
  407ccf:	movzx  eax,al
  407cd2:	shl    edx,cl
  407cd4:	or     BYTE PTR [rbx+rax*1],dl
  407cd7:	mov    r8d,DWORD PTR [rsp+0x8c]
  407cdf:	test   r8d,r8d
  407ce2:	jne    0x407cf0
  407ce4:	mov    ecx,esi
  407ce6:	call   QWORD PTR [rip+0x20840]        # 0x42852c
  407cec:	test   eax,eax
  407cee:	jne    0x407d2b
  407cf0:	test   r15d,r15d
  407cf3:	jne    0x407d05
  407cf5:	mov    ecx,esi
  407cf7:	mov    rax,QWORD PTR [rsp+0x98]
  407cff:	call   rax
  407d01:	test   eax,eax
  407d03:	jne    0x407d2b
  407d05:	cmp    BYTE PTR [rsp+0x93],0x0
  407d0d:	je     0x407d1b
  407d0f:	mov    ecx,esi
  407d11:	call   QWORD PTR [rip+0x20825]        # 0x42853c
  407d17:	test   eax,eax
  407d19:	jne    0x407d2b
  407d1b:	test   edi,edi
  407d1d:	jne    0x407d42
  407d1f:	mov    ecx,esi
  407d21:	call   QWORD PTR [rip+0x2081d]        # 0x428544
  407d27:	test   eax,eax
  407d29:	je     0x407d42
  407d2b:	mov    eax,esi
  407d2d:	mov    ecx,esi
  407d2f:	mov    edx,0x1
  407d34:	shr    al,0x3
  407d37:	and    ecx,0x7
  407d3a:	movzx  eax,al
  407d3d:	shl    edx,cl
  407d3f:	or     BYTE PTR [rbx+rax*1],dl
  407d42:	test   r13,r13
  407d45:	je     0x407d63
  407d47:	cmp    BYTE PTR [rsp+0x93],0x0
  407d4f:	jne    0x407e51
  407d55:	cmp    BYTE PTR [rsp+0x92],0x0
  407d5d:	jne    0x407e51
  407d63:	add    esi,0x1
  407d66:	cmp    esi,0x100
  407d6c:	je     0x407643
  407d72:	mov    eax,DWORD PTR [rsp+0x94]
  407d79:	test   eax,eax
  407d7b:	jne    0x407d89
  407d7d:	mov    ecx,esi
  407d7f:	call   QWORD PTR [rip+0x2077f]        # 0x428504
  407d85:	test   eax,eax
  407d87:	jne    0x407dc3
  407d89:	mov    eax,DWORD PTR [rsp+0x74]
  407d8d:	test   eax,eax
  407d8f:	jne    0x407d9d
  407d91:	mov    ecx,esi
  407d93:	call   QWORD PTR [rip+0x20773]        # 0x42850c
  407d99:	test   eax,eax
  407d9b:	jne    0x407dc3
  407d9d:	mov    eax,DWORD PTR [rsp+0x78]
  407da1:	test   eax,eax
  407da3:	jne    0x407daf
  407da5:	cmp    esi,0x9
  407da8:	je     0x407dc3
  407daa:	cmp    esi,0x20
  407dad:	je     0x407dc3
  407daf:	mov    eax,DWORD PTR [rsp+0x7c]
  407db3:	test   eax,eax
  407db5:	jne    0x407dda
  407db7:	mov    ecx,esi
  407db9:	call   QWORD PTR [rip+0x20755]        # 0x428514
  407dbf:	test   eax,eax
  407dc1:	je     0x407dda
  407dc3:	mov    eax,esi
  407dc5:	mov    ecx,esi
  407dc7:	mov    edx,0x1
  407dcc:	shr    al,0x3
  407dcf:	and    ecx,0x7
  407dd2:	movzx  eax,al
  407dd5:	shl    edx,cl
  407dd7:	or     BYTE PTR [rbx+rax*1],dl
  407dda:	mov    r11d,DWORD PTR [rsp+0x80]
  407de2:	test   r11d,r11d
  407de5:	jne    0x407df3
  407de7:	lea    eax,[rsi-0x30]
  407dea:	cmp    eax,0x9
  407ded:	jbe    0x407cc0
  407df3:	mov    r10d,DWORD PTR [rsp+0x84]
  407dfb:	test   r10d,r10d
  407dfe:	je     0x407c9f
  407e04:	cmp    BYTE PTR [rsp+0x92],0x0
  407e0c:	je     0x407e1e
  407e0e:	mov    ecx,esi
  407e10:	call   QWORD PTR [rip+0x20706]        # 0x42851c
  407e16:	test   eax,eax
  407e18:	jne    0x407cc0
  407e1e:	mov    r9d,DWORD PTR [rsp+0x88]
  407e26:	test   r9d,r9d
  407e29:	jne    0x407cd7
  407e2f:	mov    ecx,esi
  407e31:	call   QWORD PTR [rip+0x206ed]        # 0x428524
  407e37:	test   eax,eax
  407e39:	je     0x407cd7
  407e3f:	jmp    0x407cc0
  407e44:	mov    BYTE PTR [rsp+0xd0],0x0
  407e4c:	jmp    0x4079df
  407e51:	mov    ecx,esi
  407e53:	call   QWORD PTR [rip+0x206e3]        # 0x42853c
  407e59:	test   eax,eax
  407e5b:	jne    0x407e6d
  407e5d:	mov    ecx,esi
  407e5f:	call   QWORD PTR [rip+0x206b7]        # 0x42851c
  407e65:	test   eax,eax
  407e67:	je     0x407d63
  407e6d:	mov    eax,esi
  407e6f:	mov    ecx,esi
  407e71:	mov    edx,0x1
  407e76:	shr    al,0x3
  407e79:	and    ecx,0x7
  407e7c:	movzx  eax,al
  407e7f:	shl    edx,cl
  407e81:	or     BYTE PTR [rbx+rax*1],dl
  407e84:	jmp    0x407d63
  407e89:	mov    rcx,QWORD PTR [rsp+0x40]
  407e8e:	call   0x40a8f0
  407e93:	mov    eax,0x4
  407e98:	jmp    0x405895
  407e9d:	movzx  r9d,dl
  407ea1:	cmp    cl,0x3a
  407ea4:	mov    BYTE PTR [rsp+r9*1+0xd0],0x0
  407ead:	je     0x407eed
  407eaf:	movzx  eax,dl
  407eb2:	or     BYTE PTR [r14+0xc],0x8
  407eb7:	or     BYTE PTR [r14+0x8],0x4
  407ebc:	not    rax
  407ebf:	mov    r12d,0x3a
  407ec5:	xor    esi,esi
  407ec7:	add    rax,r8
  407eca:	mov    QWORD PTR [rsp+0xc8],rax
  407ed2:	jmp    0x407432
  407ed7:	xor    edx,edx
  407ed9:	jmp    0x4076d0
  407ede:	mov    rcx,QWORD PTR [rsp+0xc8]
  407ee6:	xor    edx,edx
  407ee8:	jmp    0x4076d0
  407eed:	cmp    BYTE PTR [rax+0x1],0x5d
  407ef1:	jne    0x407eaf
  407ef3:	jmp    0x407a19
  407ef8:	mov    rcx,QWORD PTR [rsp+0x40]
  407efd:	call   0x40a8f0
  407f02:	mov    eax,0xa
  407f07:	jmp    0x405895
  407f0c:	mov    edx,DWORD PTR [rsp+0x1b0]
  407f13:	and    edx,0x200020
  407f19:	cmp    edx,0x20
  407f1c:	je     0x407f34
  407f1e:	test   BYTE PTR [rsp+0x1b0],0x10
  407f26:	je     0x406d6c
  407f2c:	mov    r13,rbx
  407f2f:	jmp    0x407266
  407f34:	mov    rcx,QWORD PTR [rsp+0x40]
  407f39:	call   0x40a8f0
  407f3e:	mov    eax,0xd
  407f43:	jmp    0x405895
  407f48:	mov    BYTE PTR [rbx+0x2],r12b
  407f4c:	mov    BYTE PTR [rbx],0x7
  407f4f:	xor    r12d,r12d
  407f52:	mov    BYTE PTR [rbx+0x1],dil
  407f56:	add    rbx,0x3
  407f5a:	mov    rcx,QWORD PTR [rsp+0xc8]
  407f62:	jmp    0x405837
  407f67:	mov    BYTE PTR [rbx],0xc
  407f6a:	add    rbx,0x1
  407f6e:	mov    rcx,QWORD PTR [rsp+0xc8]
  407f76:	jmp    0x405837
  407f7b:	mov    rcx,QWORD PTR [rsp+0x40]
  407f80:	call   0x40a8f0
  407f85:	mov    rax,QWORD PTR [rsp+0x48]
  407f8a:	cmp    QWORD PTR [rsp+0xc8],rax
  407f92:	setne  al
  407f95:	movzx  eax,al
  407f98:	add    eax,0x9
  407f9b:	jmp    0x405895
  407fa0:	mov    BYTE PTR [rbx],0x1d
  407fa3:	add    rbx,0x1
  407fa7:	mov    rcx,QWORD PTR [rsp+0xc8]
  407faf:	jmp    0x405837
  407fb4:	mov    BYTE PTR [rbx],0x19
  407fb7:	add    rbx,0x1
  407fbb:	mov    rcx,QWORD PTR [rsp+0xc8]
  407fc3:	jmp    0x405837
  407fc8:	mov    BYTE PTR [rbx],0xb
  407fcb:	add    rbx,0x1
  407fcf:	mov    rcx,QWORD PTR [rsp+0xc8]
  407fd7:	jmp    0x405837
  407fdc:	mov    BYTE PTR [rbx],0x1c
  407fdf:	add    rbx,0x1
  407fe3:	mov    rcx,QWORD PTR [rsp+0xc8]
  407feb:	jmp    0x405837
  407ff0:	mov    BYTE PTR [rbx],0x1a
  407ff3:	add    rbx,0x1
  407ff7:	mov    rcx,QWORD PTR [rsp+0xc8]
  407fff:	jmp    0x405837
  408004:	mov    rcx,QWORD PTR [rsp+0x40]
  408009:	call   0x40a8f0
  40800e:	mov    eax,0x6
  408013:	jmp    0x405895
  408018:	mov    BYTE PTR [rbx],0x1b
  40801b:	add    rbx,0x1
  40801f:	mov    rcx,QWORD PTR [rsp+0xc8]
  408027:	jmp    0x405837
  40802c:	cmp    edi,0x7fff
  408032:	mov    r9d,edi
  408035:	mov    edi,0x7fff
  40803a:	setg   cl
  40803d:	jmp    0x4059e2
  408042:	movsx  ecx,BYTE PTR [rax-0x2]
  408046:	mov    edx,0x2e
  40804b:	jmp    0x406dc2
  408050:	cmp    edi,0x1
  408053:	mov    eax,0xa
  408058:	mov    esi,0x14
  40805d:	cmovle esi,eax
  408060:	mov    r12,QWORD PTR [rbp+0x0]
  408064:	jmp    0x4080de
  408066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408070:	cmp    eax,0x10000
  408075:	je     0x405b40
  40807b:	add    eax,eax
  40807d:	cmp    eax,0x10000
  408082:	mov    DWORD PTR [rbp+0x8],eax
  408085:	mov    edx,eax
  408087:	jbe    0x408095
  408089:	mov    DWORD PTR [rbp+0x8],0x10000
  408090:	mov    edx,0x10000
  408095:	mov    rcx,QWORD PTR [rbp+0x0]
  408099:	mov    DWORD PTR [rsp+0x60],r9d
  40809e:	call   0x40a858
  4080a3:	test   rax,rax
  4080a6:	mov    QWORD PTR [rbp+0x0],rax
  4080aa:	je     0x405890
  4080b0:	cmp    rax,r12
  4080b3:	mov    r9d,DWORD PTR [rsp+0x60]
  4080b8:	je     0x4080db
  4080ba:	mov    rdx,rax
  4080bd:	sub    rdx,r12
  4080c0:	lea    rcx,[r15+rdx*1]
  4080c4:	add    rbx,rdx
  4080c7:	add    r14,rdx
  4080ca:	test   r15,r15
  4080cd:	cmovne r15,rcx
  4080d1:	add    rdx,r13
  4080d4:	test   r13,r13
  4080d7:	cmovne r13,rdx
  4080db:	mov    r12,rax
  4080de:	mov    eax,DWORD PTR [rbp+0x8]
  4080e1:	mov    rdx,rbx
  4080e4:	sub    rdx,r12
  4080e7:	add    edx,esi
  4080e9:	cmp    edx,eax
  4080eb:	ja     0x408070
  4080ed:	xor    eax,eax
  4080ef:	cmp    edi,0x1
  4080f2:	mov    ecx,ebx
  4080f4:	setg   al
  4080f7:	sub    ecx,r13d
  4080fa:	cmp    r13,rbx
  4080fd:	lea    rax,[rax+rax*4+0x5]
  408102:	mov    rdx,rbx
  408105:	lea    ecx,[rcx+rax*1-0x3]
  408109:	lea    rax,[rbx+0x5]
  40810d:	je     0x408120
  40810f:	sub    rbx,0x1
  408113:	movzx  r8d,BYTE PTR [rbx]
  408117:	cmp    rbx,r13
  40811a:	mov    BYTE PTR [rbx+0x5],r8b
  40811e:	jne    0x40810f
  408120:	lea    rbx,[rdx+0xa]
  408124:	mov    BYTE PTR [r13+0x1],cl
  408128:	mov    r8d,r9d
  40812b:	sar    ecx,0x8
  40812e:	mov    BYTE PTR [r13+0x3],r9b
  408132:	sar    r9d,0x8
  408136:	cmp    rax,r13
  408139:	mov    BYTE PTR [r13+0x2],cl
  40813d:	mov    BYTE PTR [r13+0x0],0x15
  408142:	mov    BYTE PTR [r13+0x4],r9b
  408146:	mov    rcx,rbx
  408149:	je     0x40815f
  40814b:	sub    rax,0x1
  40814f:	movzx  r10d,BYTE PTR [rax]
  408153:	sub    rcx,0x1
  408157:	cmp    rax,r13
  40815a:	mov    BYTE PTR [rcx],r10b
  40815d:	jne    0x40814b
  40815f:	cmp    edi,0x1
  408162:	mov    BYTE PTR [r13+0x0],0x17
  408167:	mov    BYTE PTR [r13+0x1],0x5
  40816c:	mov    BYTE PTR [r13+0x2],0x0
  408171:	mov    BYTE PTR [r13+0x3],r8b
  408175:	mov    BYTE PTR [r13+0x4],r9b
  408179:	jle    0x4071be
  40817f:	mov    eax,r13d
  408182:	sub    edi,0x1
  408185:	mov    BYTE PTR [rdx+0xa],0x16
  408189:	sub    eax,ebx
  40818b:	mov    r8d,edi
  40818e:	mov    BYTE PTR [rdx+0xd],dil
  408192:	add    eax,0x2
  408195:	sar    r8d,0x8
  408199:	lea    rbx,[rdx+0x14]
  40819d:	mov    BYTE PTR [rdx+0xb],al
  4081a0:	sar    eax,0x8
  4081a3:	mov    BYTE PTR [rdx+0xe],r8b
  4081a7:	mov    BYTE PTR [rdx+0xc],al
  4081aa:	lea    rax,[rdx+0xf]
  4081ae:	mov    rcx,rax
  4081b1:	sub    rcx,r13
  4081b4:	cmp    rax,r13
  4081b7:	je     0x4071a6
  4081bd:	mov    r9d,r8d
  4081c0:	mov    rdx,rbx
  4081c3:	sub    rax,0x1
  4081c7:	sub    rdx,0x1
  4081cb:	mov    BYTE PTR [rdx],r9b
  4081ce:	cmp    rax,r13
  4081d1:	je     0x4071a6
  4081d7:	movzx  r9d,BYTE PTR [rax-0x1]
  4081dc:	jmp    0x4081c3
  4081de:	test   DWORD PTR [rsp+0x1b0],0x100
  4081e9:	je     0x4073e9
  4081ef:	or     BYTE PTR [rsi+0x2],0x4
  4081f3:	jmp    0x4073e9
  4081f8:	movzx  r9d,dl
  4081fc:	cmp    cl,0x2e
  4081ff:	mov    BYTE PTR [rsp+r9*1+0xd0],0x0
  408208:	je     0x408235
  40820a:	cmp    dl,0xff
  40820d:	je     0x408220
  40820f:	movzx  eax,dl
  408212:	not    rax
  408215:	add    rax,r8
  408218:	mov    QWORD PTR [rsp+0xc8],rax
  408220:	or     BYTE PTR [r14+0xc],0x8
  408225:	or     BYTE PTR [r14+0x6],0x40
  40822a:	mov    r12d,0x2e
  408230:	jmp    0x407511
  408235:	cmp    BYTE PTR [rax+0x1],0x5d
  408239:	jne    0x40820a
  40823b:	mov    rcx,rbp
  40823e:	jmp    0x4078ff
  408243:	mov    r8,rcx
  408246:	jmp    0x40820a
  408248:	mov    BYTE PTR [rbx],0x18
  40824b:	add    rbx,0x1
  40824f:	mov    rcx,QWORD PTR [rsp+0xc8]
  408257:	jmp    0x405837
  40825c:	nop    DWORD PTR [rax+0x0]
  408260:	mov    eax,DWORD PTR [rip+0x1faea]        # 0x427d50
  408266:	mov    DWORD PTR [rip+0x1fae4],ecx        # 0x427d50
  40826c:	ret    
  40826d:	nop    DWORD PTR [rax]
  408270:	jmp    0x402f80
  408275:	nop
  408276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408280:	test   r8d,r8d
  408283:	jne    0x4082a0
  408285:	and    BYTE PTR [rcx+0x30],0xf9
  408289:	mov    DWORD PTR [rdx],0x0
  40828f:	mov    QWORD PTR [rdx+0x10],0x0
  408297:	mov    QWORD PTR [rdx+0x8],0x0
  40829f:	ret    
  4082a0:	movzx  eax,BYTE PTR [rcx+0x30]
  4082a4:	and    eax,0xfffffff9
  4082a7:	or     eax,0x2
  4082aa:	mov    BYTE PTR [rcx+0x30],al
  4082ad:	mov    rax,QWORD PTR [rsp+0x28]
  4082b2:	mov    DWORD PTR [rdx],r8d
  4082b5:	mov    QWORD PTR [rdx+0x8],r9
  4082b9:	mov    QWORD PTR [rdx+0x10],rax
  4082bd:	ret    
  4082be:	xchg   ax,ax
  4082c0:	sub    rsp,0x58
  4082c4:	mov    rax,QWORD PTR [rsp+0x88]
  4082cc:	mov    DWORD PTR [rsp+0x40],r8d
  4082d1:	mov    DWORD PTR [rsp+0x28],r9d
  4082d6:	mov    r9,rdx
  4082d9:	mov    DWORD PTR [rsp+0x20],r8d
  4082de:	xor    edx,edx
  4082e0:	xor    r8d,r8d
  4082e3:	mov    QWORD PTR [rsp+0x38],rax
  4082e8:	mov    eax,DWORD PTR [rsp+0x80]
  4082ef:	mov    DWORD PTR [rsp+0x30],eax
  4082f3:	call   0x4053f0
  4082f8:	add    rsp,0x58
  4082fc:	ret    
  4082fd:	nop    DWORD PTR [rax]
  408300:	jmp    0x4053f0
  408305:	nop
  408306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408310:	sub    rsp,0x48
  408314:	mov    rax,QWORD PTR [rsp+0x70]
  408319:	mov    DWORD PTR [rsp+0x38],r8d
  40831e:	mov    DWORD PTR [rsp+0x28],r9d
  408323:	mov    r9,rdx
  408326:	mov    DWORD PTR [rsp+0x20],r8d
  40832b:	xor    edx,edx
  40832d:	xor    r8d,r8d
  408330:	mov    QWORD PTR [rsp+0x30],rax
  408335:	call   0x4033c0
  40833a:	add    rsp,0x48
  40833e:	ret    
  40833f:	nop
  408340:	jmp    0x4033c0
  408345:	nop
  408346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408350:	sub    rsp,0x28
  408354:	movzx  eax,BYTE PTR [r8+0x30]
  408359:	mov    r9,r8
  40835c:	and    eax,0xffffffe9
  40835f:	or     eax,0xffffff80
  408362:	mov    BYTE PTR [r8+0x30],al
  408366:	mov    r8d,DWORD PTR [rip+0x1f9e3]        # 0x427d50
  40836d:	call   0x405750
  408372:	test   eax,eax
  408374:	je     0x408390
  408376:	lea    rdx,[rip+0x1aec3]        # 0x423240
  40837d:	cdqe   
  40837f:	mov    rax,QWORD PTR [rdx+rax*8]
  408383:	add    rsp,0x28
  408387:	ret    
  408388:	nop    DWORD PTR [rax+rax*1+0x0]
  408390:	xor    eax,eax
  408392:	add    rsp,0x28
  408396:	ret    
  408397:	nop    WORD PTR [rax+rax*1+0x0]
  4083a0:	push   rbx
  4083a1:	sub    rsp,0x20
  4083a5:	test   rcx,rcx
  4083a8:	je     0x408400
  4083aa:	cmp    QWORD PTR [rip+0x1edae],0x0        # 0x427160
  4083b2:	mov    rbx,rcx
  4083b5:	je     0x408420
  4083b7:	mov    rcx,rbx
  4083ba:	or     BYTE PTR [rip+0x1edcf],0x80        # 0x427190
  4083c1:	call   0x40a820
  4083c6:	mov    r8d,DWORD PTR [rip+0x1f983]        # 0x427d50
  4083cd:	lea    r9,[rip+0x1ed8c]        # 0x427160
  4083d4:	mov    rdx,rax
  4083d7:	mov    rcx,rbx
  4083da:	call   0x405750
  4083df:	test   eax,eax
  4083e1:	je     0x408463
  4083e7:	lea    rdx,[rip+0x1ae52]        # 0x423240
  4083ee:	cdqe   
  4083f0:	mov    rax,QWORD PTR [rdx+rax*8]
  4083f4:	add    rsp,0x20
  4083f8:	pop    rbx
  4083f9:	ret    
  4083fa:	nop    WORD PTR [rax+rax*1+0x0]
  408400:	cmp    QWORD PTR [rip+0x1ed58],0x0        # 0x427160
  408408:	lea    rax,[rip+0x1ac89]        # 0x423098
  40840f:	cmovne rax,rcx
  408413:	add    rsp,0x20
  408417:	pop    rbx
  408418:	ret    
  408419:	nop    DWORD PTR [rax+0x0]
  408420:	mov    ecx,0xc8
  408425:	call   0x40a880
  40842a:	test   rax,rax
  40842d:	mov    QWORD PTR [rip+0x1ed2c],rax        # 0x427160
  408434:	je     0x40845a
  408436:	mov    ecx,0x100
  40843b:	mov    DWORD PTR [rip+0x1ed23],0xc8        # 0x427168
  408445:	call   0x40a880
  40844a:	test   rax,rax
  40844d:	mov    QWORD PTR [rip+0x1ed24],rax        # 0x427178
  408454:	jne    0x4083b7
  40845a:	lea    rax,[rip+0x1ac56]        # 0x4230b7
  408461:	jmp    0x4083f4
  408463:	xor    eax,eax
  408465:	jmp    0x4083f4
  408467:	nop    WORD PTR [rax+rax*1+0x0]
  408470:	push   rbx
  408471:	sub    rsp,0x50
  408475:	mov    rbx,rcx
  408478:	call   0x40a820
  40847d:	lea    rcx,[rip+0x1ecdc]        # 0x427160
  408484:	mov    DWORD PTR [rsp+0x40],eax
  408488:	mov    QWORD PTR [rsp+0x38],0x0
  408491:	mov    DWORD PTR [rsp+0x30],eax
  408495:	mov    DWORD PTR [rsp+0x28],0x0
  40849d:	mov    r9,rbx
  4084a0:	mov    DWORD PTR [rsp+0x20],eax
  4084a4:	xor    r8d,r8d
  4084a7:	xor    edx,edx
  4084a9:	call   0x4053f0
  4084ae:	not    eax
  4084b0:	shr    eax,0x1f
  4084b3:	add    rsp,0x50
  4084b7:	pop    rbx
  4084b8:	ret    
  4084b9:	nop    DWORD PTR [rax+0x0]
  4084c0:	push   r14
  4084c2:	push   r13
  4084c4:	push   r12
  4084c6:	push   rbp
  4084c7:	push   rdi
  4084c8:	push   rsi
  4084c9:	push   rbx
  4084ca:	sub    rsp,0x20
  4084ce:	mov    eax,r8d
  4084d1:	mov    rdi,rcx
  4084d4:	mov    ebp,r8d
  4084d7:	and    eax,0x1
  4084da:	mov    QWORD PTR [rcx],0x0
  4084e1:	mov    DWORD PTR [rcx+0x8],0x0
  4084e8:	cmp    eax,0x1
  4084eb:	mov    DWORD PTR [rcx+0xc],0x0
  4084f2:	mov    ecx,0x100
  4084f7:	sbb    r12d,r12d
  4084fa:	mov    r13,rdx
  4084fd:	and    r12d,0xfffd4fca
  408504:	call   0x40a880
  408509:	add    r12d,0x3b2fc
  408510:	test   bpl,0x2
  408514:	mov    QWORD PTR [rdi+0x18],rax
  408518:	jne    0x4085b4
  40851e:	mov    QWORD PTR [rdi+0x20],0x0
  408526:	test   bpl,0x4
  40852a:	jne    0x4085a0
  40852c:	and    BYTE PTR [rdi+0x30],0x7f
  408530:	movzx  eax,BYTE PTR [rdi+0x30]
  408534:	shr    ebp,0x3
  408537:	mov    rcx,r13
  40853a:	and    ebp,0x1
  40853d:	mov    ebx,0x8
  408542:	shl    ebp,0x4
  408545:	and    eax,0xffffffef
  408548:	or     ebp,eax
  40854a:	mov    BYTE PTR [rdi+0x30],bpl
  40854e:	call   0x40a820
  408553:	mov    r9,rdi
  408556:	mov    r8d,r12d
  408559:	mov    rdx,rax
  40855c:	mov    rcx,r13
  40855f:	call   0x405750
  408564:	cmp    eax,0x10
  408567:	je     0x408589
  408569:	test   eax,eax
  40856b:	mov    ebx,eax
  40856d:	jne    0x408589
  40856f:	xor    ebx,ebx
  408571:	cmp    QWORD PTR [rdi+0x18],0x0
  408576:	je     0x408589
  408578:	mov    rcx,rdi
  40857b:	call   0x402f80
  408580:	cmp    eax,0xfffffffe
  408583:	je     0x40860a
  408589:	mov    eax,ebx
  40858b:	add    rsp,0x20
  40858f:	pop    rbx
  408590:	pop    rsi
  408591:	pop    rdi
  408592:	pop    rbp
  408593:	pop    r12
  408595:	pop    r13
  408597:	pop    r14
  408599:	ret    
  40859a:	nop    WORD PTR [rax+rax*1+0x0]
  4085a0:	and    r12d,0xffffffbf
  4085a4:	or     BYTE PTR [rdi+0x30],0x80
  4085a8:	or     r12d,0x100
  4085af:	jmp    0x408530
  4085b4:	mov    ecx,0x100
  4085b9:	mov    ebx,0xc
  4085be:	call   0x40a880
  4085c3:	test   rax,rax
  4085c6:	mov    QWORD PTR [rdi+0x20],rax
  4085ca:	je     0x408589
  4085cc:	mov    rsi,rax
  4085cf:	xor    ebx,ebx
  4085d1:	mov    r14,QWORD PTR [rip+0x1ff64]        # 0x42853c
  4085d8:	jmp    0x4085e4
  4085da:	nop    WORD PTR [rax+rax*1+0x0]
  4085e0:	mov    rsi,QWORD PTR [rdi+0x20]
  4085e4:	mov    ecx,ebx
  4085e6:	add    rsi,rbx
  4085e9:	call   r14
  4085ec:	lea    edx,[rbx+0x20]
  4085ef:	test   eax,eax
  4085f1:	mov    eax,edx
  4085f3:	cmove  eax,ebx
  4085f6:	add    rbx,0x1
  4085fa:	cmp    rbx,0x100
  408601:	mov    BYTE PTR [rsi],al
  408603:	jne    0x4085e0
  408605:	jmp    0x408526
  40860a:	mov    rcx,QWORD PTR [rdi+0x18]
  40860e:	call   0x40a8f0
  408613:	mov    QWORD PTR [rdi+0x18],0x0
  40861b:	jmp    0x408589
  408620:	push   r13
  408622:	push   r12
  408624:	push   rbp
  408625:	push   rdi
  408626:	push   rsi
  408627:	push   rbx
  408628:	sub    rsp,0xb8
  40862f:	mov    ebx,DWORD PTR [rsp+0x110]
  408636:	mov    rdi,r8
  408639:	mov    rsi,rcx
  40863c:	mov    rcx,rdx
  40863f:	mov    rbp,rdx
  408642:	mov    r12,r9
  408645:	call   0x40a820
  40864a:	test   rdi,rdi
  40864d:	mov    r13,rax
  408650:	je     0x408770
  408656:	test   BYTE PTR [rsi+0x30],0x10
  40865a:	jne    0x408770
  408660:	mov    rax,QWORD PTR [rsi]
  408663:	mov    edx,ebx
  408665:	shr    ebx,1
  408667:	and    edx,0x1
  40866a:	and    ebx,0x1
  40866d:	lea    rcx,[rdi*8+0x0]
  408675:	shl    edx,0x5
  408678:	shl    ebx,0x6
  40867b:	mov    DWORD PTR [rsp+0x50],edi
  40867f:	mov    QWORD PTR [rsp+0x70],rax
  408684:	mov    rax,QWORD PTR [rsi+0x8]
  408688:	mov    QWORD PTR [rsp+0x78],rax
  40868d:	mov    rax,QWORD PTR [rsi+0x10]
  408691:	mov    QWORD PTR [rsp+0x80],rax
  408699:	mov    rax,QWORD PTR [rsi+0x18]
  40869d:	mov    QWORD PTR [rsp+0x88],rax
  4086a5:	mov    rax,QWORD PTR [rsi+0x20]
  4086a9:	mov    QWORD PTR [rsp+0x90],rax
  4086b1:	mov    rax,QWORD PTR [rsi+0x28]
  4086b5:	mov    QWORD PTR [rsp+0x98],rax
  4086bd:	mov    rax,QWORD PTR [rsi+0x30]
  4086c1:	mov    QWORD PTR [rsp+0xa0],rax
  4086c9:	and    eax,0xffffffdf
  4086cc:	or     eax,edx
  4086ce:	and    eax,0xffffffb9
  4086d1:	or     eax,ebx
  4086d3:	or     eax,0x4
  4086d6:	mov    BYTE PTR [rsp+0xa0],al
  4086dd:	call   0x40a880
  4086e2:	test   rax,rax
  4086e5:	mov    QWORD PTR [rsp+0x58],rax
  4086ea:	je     0x408833
  4086f0:	lea    rax,[rax+rdi*4]
  4086f4:	lea    rcx,[rsp+0x70]
  4086f9:	xor    r8d,r8d
  4086fc:	xor    edx,edx
  4086fe:	mov    DWORD PTR [rsp+0x40],r13d
  408703:	mov    DWORD PTR [rsp+0x30],r13d
  408708:	mov    QWORD PTR [rsp+0x60],rax
  40870d:	lea    rax,[rsp+0x50]
  408712:	mov    DWORD PTR [rsp+0x28],0x0
  40871a:	mov    DWORD PTR [rsp+0x20],r13d
  40871f:	mov    r9,rbp
  408722:	mov    QWORD PTR [rsp+0x38],rax
  408727:	call   0x4053f0
  40872c:	test   eax,eax
  40872e:	mov    ebx,eax
  408730:	mov    rcx,QWORD PTR [rsp+0x58]
  408735:	js     0x40875f
  408737:	mov    r8,QWORD PTR [rsp+0x60]
  40873c:	xor    edx,edx
  40873e:	xor    r10d,r10d
  408741:	mov    eax,DWORD PTR [rcx+rdx*4]
  408744:	lea    r11,[r12+rdx*8]
  408748:	mov    DWORD PTR [r11],eax
  40874b:	mov    edx,DWORD PTR [r8+rdx*4]
  40874f:	mov    DWORD PTR [r11+0x4],edx
  408753:	lea    edx,[r10+0x1]
  408757:	cmp    rdi,rdx
  40875a:	mov    r10,rdx
  40875d:	ja     0x408741
  40875f:	call   0x40a8f0
  408764:	jmp    0x40881e
  408769:	nop    DWORD PTR [rax+0x0]
  408770:	mov    rax,QWORD PTR [rsi]
  408773:	mov    r10,QWORD PTR [rsi+0x30]
  408777:	lea    rcx,[rsp+0x70]
  40877c:	mov    DWORD PTR [rsp+0x40],r13d
  408781:	mov    QWORD PTR [rsp+0x38],0x0
  40878a:	mov    r9,rbp
  40878d:	mov    DWORD PTR [rsp+0x30],r13d
  408792:	mov    DWORD PTR [rsp+0x28],0x0
  40879a:	xor    edx,edx
  40879c:	mov    QWORD PTR [rsp+0x70],rax
  4087a1:	mov    rax,QWORD PTR [rsi+0x8]
  4087a5:	mov    QWORD PTR [rsp+0xa0],r10
  4087ad:	and    r10d,0xffffffdf
  4087b1:	mov    DWORD PTR [rsp+0x20],r13d
  4087b6:	mov    QWORD PTR [rsp+0x78],rax
  4087bb:	mov    rax,QWORD PTR [rsi+0x10]
  4087bf:	mov    QWORD PTR [rsp+0x80],rax
  4087c7:	mov    rax,QWORD PTR [rsi+0x18]
  4087cb:	mov    QWORD PTR [rsp+0x88],rax
  4087d3:	mov    rax,QWORD PTR [rsi+0x20]
  4087d7:	mov    QWORD PTR [rsp+0x90],rax
  4087df:	mov    rax,QWORD PTR [rsi+0x28]
  4087e3:	mov    QWORD PTR [rsp+0x98],rax
  4087eb:	mov    eax,ebx
  4087ed:	shr    ebx,1
  4087ef:	and    eax,0x1
  4087f2:	and    ebx,0x1
  4087f5:	shl    eax,0x5
  4087f8:	shl    ebx,0x6
  4087fb:	or     r10d,eax
  4087fe:	mov    r8d,ebx
  408801:	mov    ebx,r10d
  408804:	and    ebx,0xffffffb9
  408807:	or     ebx,r8d
  40880a:	xor    r8d,r8d
  40880d:	or     ebx,0x4
  408810:	mov    BYTE PTR [rsp+0xa0],bl
  408817:	call   0x4053f0
  40881c:	mov    ebx,eax
  40881e:	mov    eax,ebx
  408820:	shr    eax,0x1f
  408823:	add    rsp,0xb8
  40882a:	pop    rbx
  40882b:	pop    rsi
  40882c:	pop    rdi
  40882d:	pop    rbp
  40882e:	pop    r12
  408830:	pop    r13
  408832:	ret    
  408833:	mov    eax,0x1
  408838:	jmp    0x408823
  40883a:	nop    WORD PTR [rax+rax*1+0x0]
  408840:	push   rbp
  408841:	push   rdi
  408842:	push   rsi
  408843:	push   rbx
  408844:	sub    rsp,0x28
  408848:	cmp    ecx,0x10
  40884b:	mov    rbp,r8
  40884e:	mov    rsi,r9
  408851:	ja     0x4088b1
  408853:	lea    rdx,[rip+0x1a9e6]        # 0x423240
  40885a:	movsxd rax,ecx
  40885d:	mov    rdi,QWORD PTR [rdx+rax*8]
  408861:	mov    rcx,rdi
  408864:	call   0x40a820
  408869:	test   rsi,rsi
  40886c:	lea    rbx,[rax+0x1]
  408870:	je     0x408885
  408872:	cmp    rbx,rsi
  408875:	ja     0x408891
  408877:	mov    r8,rbx
  40887a:	mov    rdx,rdi
  40887d:	mov    rcx,rbp
  408880:	call   0x40a870
  408885:	mov    rax,rbx
  408888:	add    rsp,0x28
  40888c:	pop    rbx
  40888d:	pop    rsi
  40888e:	pop    rdi
  40888f:	pop    rbp
  408890:	ret    
  408891:	lea    r8,[rsi-0x1]
  408895:	mov    rdx,rdi
  408898:	mov    rcx,rbp
  40889b:	call   0x40a870
  4088a0:	mov    rax,rbx
  4088a3:	mov    BYTE PTR [rbp+rsi*1-0x1],0x0
  4088a8:	add    rsp,0x28
  4088ac:	pop    rbx
  4088ad:	pop    rsi
  4088ae:	pop    rdi
  4088af:	pop    rbp
  4088b0:	ret    
  4088b1:	call   0x40a948
  4088b6:	nop
  4088b7:	nop    WORD PTR [rax+rax*1+0x0]
  4088c0:	push   rbx
  4088c1:	sub    rsp,0x20
  4088c5:	mov    rbx,rcx
  4088c8:	mov    rcx,QWORD PTR [rcx]
  4088cb:	call   0x40a8f0
  4088d0:	mov    rcx,QWORD PTR [rbx+0x18]
  4088d4:	mov    QWORD PTR [rbx],0x0
  4088db:	mov    DWORD PTR [rbx+0x8],0x0
  4088e2:	mov    DWORD PTR [rbx+0xc],0x0
  4088e9:	call   0x40a8f0
  4088ee:	and    BYTE PTR [rbx+0x30],0xf7
  4088f2:	mov    rcx,QWORD PTR [rbx+0x20]
  4088f6:	mov    QWORD PTR [rbx+0x18],0x0
  4088fe:	call   0x40a8f0
  408903:	mov    QWORD PTR [rbx+0x20],0x0
  40890b:	add    rsp,0x20
  40890f:	pop    rbx
  408910:	ret    
  408911:	nop
  408912:	nop
  408913:	nop
  408914:	nop
  408915:	nop
  408916:	nop
  408917:	nop
  408918:	nop
  408919:	nop
  40891a:	nop
  40891b:	nop
  40891c:	nop
  40891d:	nop
  40891e:	nop
  40891f:	nop
  408920:	push   r15
  408922:	push   r14
  408924:	push   r13
  408926:	push   r12
  408928:	push   rbp
  408929:	push   rdi
  40892a:	push   rsi
  40892b:	push   rbx
  40892c:	sub    rsp,0x38
  408930:	mov    r15,rdx
  408933:	movzx  edx,BYTE PTR [rcx]
  408936:	lea    rax,[rcx+0x1]
  40893a:	test   dl,dl
  40893c:	je     0x408e0d
  408942:	mov    r9d,r8d
  408945:	mov    r11d,r8d
  408948:	mov    r14,QWORD PTR [rip+0x1b231]        # 0x423b80
  40894f:	shr    r9d,0x2
  408953:	shr    r11d,1
  408956:	mov    ebx,r8d
  408959:	mov    edi,r9d
  40895c:	xor    r11d,0x1
  408960:	mov    r13d,r8d
  408963:	and    edi,0x1
  408966:	and    ebx,0x10
  408969:	mov    r12,r15
  40896c:	mov    BYTE PTR [rsp+0x2d],dil
  408971:	mov    edi,r8d
  408974:	and    r11d,0x1
  408978:	and    edi,0x1
  40897b:	and    r13d,0x1
  40897f:	mov    DWORD PTR [rsp+0x28],edi
  408983:	and    edi,0x1
  408986:	mov    BYTE PTR [rsp+0x2e],dil
  40898b:	test   ebx,ebx
  40898d:	je     0x408a03
  40898f:	mov    r9,QWORD PTR [rip+0x1b1ea]        # 0x423b80
  408996:	movzx  edx,BYTE PTR [r9+rdx*1]
  40899b:	cmp    dl,0x3f
  40899e:	je     0x408ba0
  4089a4:	jbe    0x408d50
  4089aa:	cmp    dl,0x5b
  4089ad:	je     0x408a1b
  4089af:	cmp    dl,0x5c
  4089b2:	je     0x408c09
  4089b8:	movzx  ecx,BYTE PTR [r12]
  4089bd:	movzx  ecx,BYTE PTR [r9+rcx*1]
  4089c2:	cmp    edx,ecx
  4089c4:	jne    0x408ae0
  4089ca:	mov    rcx,rax
  4089cd:	movzx  edx,BYTE PTR [rcx]
  4089d0:	add    r12,0x1
  4089d4:	lea    rax,[rcx+0x1]
  4089d8:	test   dl,dl
  4089da:	jne    0x40898b
  4089dc:	movzx  edx,BYTE PTR [r12]
  4089e1:	xor    eax,eax
  4089e3:	test   dl,dl
  4089e5:	je     0x408ae5
  4089eb:	cmp    dl,0x2f
  4089ee:	sete   al
  4089f1:	shr    r8d,0x3
  4089f5:	and    eax,r8d
  4089f8:	xor    eax,0x1
  4089fb:	movzx  eax,al
  4089fe:	jmp    0x408ae5
  408a03:	cmp    dl,0x3f
  408a06:	je     0x408ba0
  408a0c:	jbe    0x408c41
  408a12:	cmp    dl,0x5b
  408a15:	jne    0x408c00
  408a1b:	movzx  esi,BYTE PTR [r12]
  408a20:	test   sil,sil
  408a23:	je     0x408ae0
  408a29:	cmp    sil,0x2e
  408a2d:	jne    0x408a3a
  408a2f:	cmp    BYTE PTR [rsp+0x2d],0x0
  408a34:	jne    0x408da3
  408a3a:	movzx  edx,BYTE PTR [rcx+0x1]
  408a3e:	mov    rbp,QWORD PTR [rip+0x1b13b]        # 0x423b80
  408a45:	movsxd rdi,esi
  408a48:	cmp    dl,0x5e
  408a4b:	sete   r9b
  408a4f:	cmp    dl,0x21
  408a52:	sete   dl
  408a55:	add    rcx,0x2
  408a59:	or     r9b,dl
  408a5c:	cmovne rax,rcx
  408a60:	mov    BYTE PTR [rsp+0x2f],r9b
  408a65:	lea    rcx,[rax+0x1]
  408a69:	movzx  eax,BYTE PTR [rax]
  408a6c:	nop    DWORD PTR [rax+0x0]
  408a70:	cmp    al,0x5c
  408a72:	jne    0x408a7d
  408a74:	test   r11b,r11b
  408a77:	jne    0x408b83
  408a7d:	movzx  edx,al
  408a80:	mov    r10,rcx
  408a83:	test   ebx,ebx
  408a85:	je     0x408b22
  408a8b:	test   al,al
  408a8d:	movzx  edx,BYTE PTR [r14+rdx*1]
  408a92:	je     0x408ae0
  408a94:	movzx  eax,BYTE PTR [r10]
  408a98:	lea    rcx,[r10+0x1]
  408a9c:	movzx  eax,BYTE PTR [r14+rax*1]
  408aa1:	cmp    al,0x2f
  408aa3:	jne    0x408aaa
  408aa5:	test   r13b,r13b
  408aa8:	jne    0x408ae0
  408aaa:	cmp    al,0x2d
  408aac:	movzx  r9d,dl
  408ab0:	je     0x408b40
  408ab6:	test   ebx,ebx
  408ab8:	je     0x408b33
  408aba:	cmp    dl,BYTE PTR [rbp+rdi*1+0x0]
  408abe:	movzx  r10d,BYTE PTR [rbp+rdi*1+0x0]
  408ac4:	ja     0x408acb
  408ac6:	cmp    r10d,r9d
  408ac9:	jle    0x408b04
  408acb:	cmp    al,0x5d
  408acd:	jne    0x408a70
  408acf:	cmp    BYTE PTR [rsp+0x2f],0x0
  408ad4:	jne    0x4089cd
  408ada:	nop    WORD PTR [rax+rax*1+0x0]
  408ae0:	mov    eax,0x1
  408ae5:	add    rsp,0x38
  408ae9:	pop    rbx
  408aea:	pop    rsi
  408aeb:	pop    rdi
  408aec:	pop    rbp
  408aed:	pop    r12
  408aef:	pop    r13
  408af1:	pop    r14
  408af3:	pop    r15
  408af5:	ret    
  408af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b00:	add    rcx,0x1
  408b04:	cmp    al,0x5d
  408b06:	je     0x408df4
  408b0c:	test   al,al
  408b0e:	je     0x408ae0
  408b10:	movzx  eax,BYTE PTR [rcx]
  408b13:	cmp    al,0x5c
  408b15:	jne    0x408b00
  408b17:	test   r11b,r11b
  408b1a:	je     0x408b00
  408b1c:	add    rcx,0x2
  408b20:	jmp    0x408b0c
  408b22:	test   al,al
  408b24:	je     0x408ae0
  408b26:	lea    rcx,[r10+0x1]
  408b2a:	movzx  eax,BYTE PTR [r10]
  408b2e:	jmp    0x408aa1
  408b33:	cmp    esi,edx
  408b35:	mov    r10d,esi
  408b38:	jl     0x408acb
  408b3a:	jmp    0x408ac6
  408b3c:	nop    DWORD PTR [rax+0x0]
  408b40:	movzx  r9d,BYTE PTR [r10+0x1]
  408b45:	cmp    r9b,0x5d
  408b49:	je     0x408b90
  408b4b:	cmp    r9b,0x5c
  408b4f:	jne    0x408b5a
  408b51:	test   r11b,r11b
  408b54:	jne    0x408d95
  408b5a:	lea    rax,[r10+0x2]
  408b5e:	test   r9b,r9b
  408b61:	je     0x408ae0
  408b67:	test   ebx,ebx
  408b69:	je     0x408b77
  408b6b:	mov    rcx,QWORD PTR [rip+0x1b00e]        # 0x423b80
  408b72:	movzx  r9d,BYTE PTR [rcx+r9*1]
  408b77:	lea    rcx,[rax+0x1]
  408b7b:	movzx  eax,BYTE PTR [rax]
  408b7e:	jmp    0x408ab6
  408b83:	lea    r10,[rcx+0x1]
  408b87:	movzx  edx,BYTE PTR [rcx]
  408b8a:	jmp    0x408a83
  408b8f:	nop
  408b90:	movzx  r9d,dl
  408b94:	jmp    0x408ab6
  408b99:	nop    DWORD PTR [rax+0x0]
  408ba0:	movzx  edx,BYTE PTR [r12]
  408ba5:	test   dl,dl
  408ba7:	je     0x408ae0
  408bad:	cmp    dl,0x2f
  408bb0:	jne    0x408bbd
  408bb2:	cmp    BYTE PTR [rsp+0x2e],0x0
  408bb7:	jne    0x408ae0
  408bbd:	cmp    dl,0x2e
  408bc0:	jne    0x4089ca
  408bc6:	cmp    BYTE PTR [rsp+0x2d],0x0
  408bcb:	je     0x4089ca
  408bd1:	cmp    r12,r15
  408bd4:	je     0x408ae0
  408bda:	mov    ecx,DWORD PTR [rsp+0x28]
  408bde:	test   ecx,ecx
  408be0:	je     0x4089ca
  408be6:	cmp    BYTE PTR [r12-0x1],0x2f
  408bec:	jne    0x4089ca
  408bf2:	jmp    0x408ae0
  408bf7:	nop    WORD PTR [rax+rax*1+0x0]
  408c00:	cmp    dl,0x5c
  408c03:	jne    0x408e15
  408c09:	test   r8b,0x2
  408c0d:	jne    0x408d60
  408c13:	test   ebx,ebx
  408c15:	lea    rdx,[rcx+0x2]
  408c19:	movzx  eax,BYTE PTR [rcx+0x1]
  408c1d:	je     0x408d80
  408c23:	mov    r9,QWORD PTR [rip+0x1af56]        # 0x423b80
  408c2a:	mov    rcx,rdx
  408c2d:	movzx  eax,BYTE PTR [r9+rax*1]
  408c32:	movzx  edx,BYTE PTR [r12]
  408c37:	movzx  edx,BYTE PTR [r9+rdx*1]
  408c3c:	jmp    0x408d88
  408c41:	cmp    dl,0x2a
  408c44:	jne    0x408e15
  408c4a:	test   r8b,0x4
  408c4e:	mov    rdi,r12
  408c51:	je     0x408c5e
  408c53:	cmp    BYTE PTR [r12],0x2e
  408c58:	je     0x408dd0
  408c5e:	movzx  esi,BYTE PTR [rcx+0x1]
  408c62:	lea    rdx,[rcx+0x2]
  408c66:	cmp    sil,0x2a
  408c6a:	je     0x408c72
  408c6c:	cmp    sil,0x3f
  408c70:	jne    0x408caf
  408c72:	mov    eax,r8d
  408c75:	and    eax,0x1
  408c78:	nop    DWORD PTR [rax+rax*1+0x0]
  408c80:	test   eax,eax
  408c82:	je     0x408c8d
  408c84:	cmp    BYTE PTR [rdi],0x2f
  408c87:	je     0x408ae0
  408c8d:	cmp    sil,0x3f
  408c91:	je     0x408d40
  408c97:	add    rdx,0x1
  408c9b:	movzx  esi,BYTE PTR [rdx-0x1]
  408c9f:	add    rdi,0x1
  408ca3:	cmp    sil,0x2a
  408ca7:	je     0x408c80
  408ca9:	cmp    sil,0x3f
  408cad:	je     0x408c80
  408caf:	xor    eax,eax
  408cb1:	test   sil,sil
  408cb4:	je     0x408ae5
  408cba:	cmp    sil,0x5c
  408cbe:	jne    0x408cca
  408cc0:	test   r8b,0x2
  408cc4:	je     0x408e04
  408cca:	movzx  r12d,sil
  408cce:	test   ebx,ebx
  408cd0:	je     0x408cde
  408cd2:	mov    rax,QWORD PTR [rip+0x1aea7]        # 0x423b80
  408cd9:	movzx  r12d,BYTE PTR [rax+r12*1]
  408cde:	movzx  eax,BYTE PTR [rdi]
  408ce1:	lea    rbp,[rdx-0x1]
  408ce5:	test   al,al
  408ce7:	je     0x408ae0
  408ced:	mov    r14d,r8d
  408cf0:	mov    r13,QWORD PTR [rip+0x1ae89]        # 0x423b80
  408cf7:	and    r14d,0xfffffffb
  408cfb:	jmp    0x408d0f
  408cfd:	nop    DWORD PTR [rax]
  408d00:	add    rdi,0x1
  408d04:	movzx  eax,BYTE PTR [rdi]
  408d07:	test   al,al
  408d09:	je     0x408ae0
  408d0f:	cmp    sil,0x5b
  408d13:	je     0x408d26
  408d15:	test   ebx,ebx
  408d17:	je     0x408d21
  408d19:	cdqe   
  408d1b:	movzx  eax,BYTE PTR [r13+rax*1+0x0]
  408d21:	cmp    eax,r12d
  408d24:	jne    0x408d00
  408d26:	mov    r8d,r14d
  408d29:	mov    rdx,rdi
  408d2c:	mov    rcx,rbp
  408d2f:	call   0x408920
  408d34:	test   eax,eax
  408d36:	jne    0x408d00
  408d38:	jmp    0x408ae5
  408d3d:	nop    DWORD PTR [rax]
  408d40:	cmp    BYTE PTR [rdi],0x0
  408d43:	jne    0x408c97
  408d49:	jmp    0x408ae0
  408d4e:	xchg   ax,ax
  408d50:	cmp    dl,0x2a
  408d53:	je     0x408c4a
  408d59:	jmp    0x4089b8
  408d5e:	xchg   ax,ax
  408d60:	test   ebx,ebx
  408d62:	mov    rcx,rax
  408d65:	mov    eax,0x5c
  408d6a:	je     0x408d83
  408d6c:	mov    r9,QWORD PTR [rip+0x1ae0d]        # 0x423b80
  408d73:	jmp    0x408c32
  408d78:	nop    DWORD PTR [rax+rax*1+0x0]
  408d80:	mov    rcx,rdx
  408d83:	movzx  edx,BYTE PTR [r12]
  408d88:	cmp    edx,eax
  408d8a:	je     0x4089cd
  408d90:	jmp    0x408ae0
  408d95:	lea    rax,[r10+0x3]
  408d99:	movzx  r9d,BYTE PTR [r10+0x2]
  408d9e:	jmp    0x408b5e
  408da3:	cmp    r12,r15
  408da6:	je     0x408ae0
  408dac:	mov    edx,DWORD PTR [rsp+0x28]
  408db0:	test   edx,edx
  408db2:	je     0x408a3a
  408db8:	cmp    BYTE PTR [r12-0x1],0x2f
  408dbe:	jne    0x408a3a
  408dc4:	jmp    0x408ae0
  408dc9:	nop    DWORD PTR [rax+0x0]
  408dd0:	cmp    r12,r15
  408dd3:	je     0x408ae0
  408dd9:	test   r8b,0x1
  408ddd:	je     0x408c5e
  408de3:	cmp    BYTE PTR [r12-0x1],0x2f
  408de9:	jne    0x408c5e
  408def:	jmp    0x408ae0
  408df4:	cmp    BYTE PTR [rsp+0x2f],0x0
  408df9:	je     0x4089cd
  408dff:	jmp    0x408ae0
  408e04:	movzx  r12d,BYTE PTR [rdx]
  408e08:	jmp    0x408cce
  408e0d:	mov    r12,r15
  408e10:	jmp    0x4089dc
  408e15:	movzx  ecx,BYTE PTR [r12]
  408e1a:	jmp    0x4089c2
  408e1f:	nop
  408e20:	ret    
  408e21:	nop    DWORD PTR [rax+rax*1+0x0]
  408e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e30:	push   rbx
  408e31:	sub    rsp,0x20
  408e35:	mov    rbx,QWORD PTR [rip+0x1f5d8]        # 0x428414
  408e3c:	call   rbx
  408e3e:	call   rbx
  408e40:	mov    rax,rbx
  408e43:	add    rsp,0x20
  408e47:	pop    rbx
  408e48:	rex.W jmp rax
  408e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  408e50:	jmp    0x40a910
  408e55:	nop
  408e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e60:	jmp    0x40a7b8
  408e65:	nop
  408e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e70:	jmp    0x40a8e8
  408e75:	nop
  408e76:	nop
  408e77:	nop
  408e78:	nop
  408e79:	nop
  408e7a:	nop
  408e7b:	nop
  408e7c:	nop
  408e7d:	nop
  408e7e:	nop
  408e7f:	nop
  408e80:	mov    QWORD PTR [rip+0xa199],rcx        # 0x413020
  408e87:	ret    
  408e88:	nop    DWORD PTR [rax+rax*1+0x0]
  408e90:	push   rdi
  408e91:	push   rsi
  408e92:	push   rbx
  408e93:	sub    rsp,0x30
  408e97:	mov    rsi,QWORD PTR [rip+0xa182]        # 0x413020
  408e9e:	lea    rax,[rip+0x1a85b]        # 0x423700
  408ea5:	lea    rbx,[rip+0x1a857]        # 0x423703
  408eac:	mov    rdi,rcx
  408eaf:	cmp    BYTE PTR [rsi],0x0
  408eb2:	cmovne rbx,rax
  408eb6:	call   QWORD PTR [rip+0x1f558]        # 0x428414
  408ebc:	lea    rdx,[rip+0x1a845]        # 0x423708
  408ec3:	lea    rcx,[rax+0x60]
  408ec7:	mov    DWORD PTR [rsp+0x20],edi
  408ecb:	mov    r9,rbx
  408ece:	mov    r8,rsi
  408ed1:	call   0x40a908
  408ed6:	mov    ecx,0x1
  408edb:	call   0x409010
  408ee0:	nop
  408ee1:	nop    DWORD PTR [rax+rax*1+0x0]
  408ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ef0:	push   rbx
  408ef1:	sub    rsp,0x20
  408ef5:	mov    eax,0x1
  408efa:	test   rcx,rcx
  408efd:	mov    rbx,rcx
  408f00:	cmove  rbx,rax
  408f04:	mov    rcx,rbx
  408f07:	call   0x40a880
  408f0c:	test   rax,rax
  408f0f:	je     0x408f17
  408f11:	add    rsp,0x20
  408f15:	pop    rbx
  408f16:	ret    
  408f17:	mov    rcx,rbx
  408f1a:	call   0x408e90
  408f1f:	nop
  408f20:	push   rsi
  408f21:	push   rbx
  408f22:	sub    rsp,0x28
  408f26:	test   rcx,rcx
  408f29:	mov    rbx,rcx
  408f2c:	mov    rsi,rdx
  408f2f:	je     0x408f50
  408f31:	test   rdx,rdx
  408f34:	je     0x408f50
  408f36:	mov    rdx,rsi
  408f39:	mov    rcx,rbx
  408f3c:	call   0x40a938
  408f41:	test   rax,rax
  408f44:	je     0x408f5c
  408f46:	add    rsp,0x28
  408f4a:	pop    rbx
  408f4b:	pop    rsi
  408f4c:	ret    
  408f4d:	nop    DWORD PTR [rax]
  408f50:	mov    esi,0x1
  408f55:	mov    ebx,0x1
  408f5a:	jmp    0x408f36
  408f5c:	mov    rcx,rsi
  408f5f:	imul   rcx,rbx
  408f63:	call   0x408e90
  408f68:	nop
  408f69:	nop    DWORD PTR [rax+0x0]
  408f70:	push   rbx
  408f71:	sub    rsp,0x20
  408f75:	mov    eax,0x1
  408f7a:	test   rdx,rdx
  408f7d:	mov    rbx,rdx
  408f80:	cmove  rbx,rax
  408f84:	test   rcx,rcx
  408f87:	je     0x408fa0
  408f89:	mov    rdx,rbx
  408f8c:	call   0x40a858
  408f91:	test   rax,rax
  408f94:	je     0x408faa
  408f96:	add    rsp,0x20
  408f9a:	pop    rbx
  408f9b:	ret    
  408f9c:	nop    DWORD PTR [rax+0x0]
  408fa0:	mov    rcx,rbx
  408fa3:	call   0x40a880
  408fa8:	jmp    0x408f91
  408faa:	mov    rcx,rbx
  408fad:	call   0x408e90
  408fb2:	nop
  408fb3:	nop
  408fb4:	nop
  408fb5:	nop
  408fb6:	nop
  408fb7:	nop
  408fb8:	nop
  408fb9:	nop
  408fba:	nop
  408fbb:	nop
  408fbc:	nop
  408fbd:	nop
  408fbe:	nop
  408fbf:	nop
  408fc0:	push   rbx
  408fc1:	sub    rsp,0x20
  408fc5:	mov    ebx,ecx
  408fc7:	call   0x40a828
  408fcc:	test   rax,rax
  408fcf:	je     0x408fe0
  408fd1:	add    rsp,0x20
  408fd5:	pop    rbx
  408fd6:	ret    
  408fd7:	nop    WORD PTR [rax+rax*1+0x0]
  408fe0:	lea    rdx,[rip+0x1a759]        # 0x423740
  408fe7:	lea    rcx,[rip+0x1e2d2]        # 0x4272c0
  408fee:	mov    r8d,ebx
  408ff1:	call   0x40a848
  408ff6:	lea    rax,[rip+0x1e2c3]        # 0x4272c0
  408ffd:	add    rsp,0x20
  409001:	pop    rbx
  409002:	ret    
  409003:	nop
  409004:	nop
  409005:	nop
  409006:	nop
  409007:	nop
  409008:	nop
  409009:	nop
  40900a:	nop
  40900b:	nop
  40900c:	nop
  40900d:	nop
  40900e:	nop
  40900f:	nop
  409010:	sub    rsp,0x38
  409014:	mov    rax,QWORD PTR [rip+0x1ed3d]        # 0x427d58
  40901b:	test   rax,rax
  40901e:	je     0x40902a
  409020:	mov    DWORD PTR [rsp+0x2c],ecx
  409024:	call   rax
  409026:	mov    ecx,DWORD PTR [rsp+0x2c]
  40902a:	call   0x40a930
  40902f:	nop
  409030:	push   rbx
  409031:	sub    rsp,0x30
  409035:	mov    rbx,rcx
  409038:	mov    rcx,QWORD PTR [rip+0x1ed21]        # 0x427d60
  40903f:	call   0x4095e0
  409044:	cmp    rax,0xffffffffffffffff
  409048:	mov    QWORD PTR [rsp+0x20],rax
  40904d:	je     0x4090c5
  40904f:	mov    ecx,0x8
  409054:	call   0x40a960
  409059:	mov    rcx,QWORD PTR [rip+0x1ed00]        # 0x427d60
  409060:	call   0x4095e0
  409065:	mov    rcx,QWORD PTR [rip+0x1ecfc]        # 0x427d68
  40906c:	mov    QWORD PTR [rsp+0x20],rax
  409071:	call   0x4095e0
  409076:	lea    rdx,[rsp+0x20]
  40907b:	lea    r8,[rsp+0x28]
  409080:	mov    rcx,rbx
  409083:	mov    QWORD PTR [rsp+0x28],rax
  409088:	call   0x40a9b8
  40908d:	mov    rcx,QWORD PTR [rsp+0x20]
  409092:	mov    rbx,rax
  409095:	call   0x4095f0
  40909a:	mov    rcx,QWORD PTR [rsp+0x28]
  40909f:	mov    QWORD PTR [rip+0x1ecba],rax        # 0x427d60
  4090a6:	call   0x4095f0
  4090ab:	mov    ecx,0x8
  4090b0:	mov    QWORD PTR [rip+0x1ecb1],rax        # 0x427d68
  4090b7:	call   0x40a950
  4090bc:	mov    rax,rbx
  4090bf:	add    rsp,0x30
  4090c3:	pop    rbx
  4090c4:	ret    
  4090c5:	mov    rax,QWORD PTR [rip+0x1a9b4]        # 0x423a80
  4090cc:	mov    rcx,rbx
  4090cf:	call   QWORD PTR [rax]
  4090d1:	add    rsp,0x30
  4090d5:	pop    rbx
  4090d6:	ret    
  4090d7:	nop    WORD PTR [rax+rax*1+0x0]
  4090e0:	sub    rsp,0x28
  4090e4:	call   0x409030
  4090e9:	test   rax,rax
  4090ec:	sete   al
  4090ef:	movzx  eax,al
  4090f2:	neg    eax
  4090f4:	add    rsp,0x28
  4090f8:	ret    
  4090f9:	nop
  4090fa:	nop
  4090fb:	nop
  4090fc:	nop
  4090fd:	nop
  4090fe:	nop
  4090ff:	nop
  409100:	sub    rsp,0x28
  409104:	mov    rax,QWORD PTR [rip+0x9f25]        # 0x413030
  40910b:	mov    rax,QWORD PTR [rax]
  40910e:	test   rax,rax
  409111:	je     0x409130
  409113:	call   rax
  409115:	mov    rax,QWORD PTR [rip+0x9f14]        # 0x413030
  40911c:	lea    rdx,[rax+0x8]
  409120:	mov    rax,QWORD PTR [rax+0x8]
  409124:	mov    QWORD PTR [rip+0x9f05],rdx        # 0x413030
  40912b:	test   rax,rax
  40912e:	jne    0x409113
  409130:	add    rsp,0x28
  409134:	ret    
  409135:	nop
  409136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409140:	push   rsi
  409141:	push   rbx
  409142:	sub    rsp,0x28
  409146:	mov    rsi,QWORD PTR [rip+0x1a8b3]        # 0x423a00
  40914d:	mov    rax,QWORD PTR [rsi]
  409150:	cmp    eax,0xffffffff
  409153:	mov    ebx,eax
  409155:	je     0x409180
  409157:	test   ebx,ebx
  409159:	je     0x40916a
  40915b:	nop    DWORD PTR [rax+rax*1+0x0]
  409160:	mov    eax,ebx
  409162:	call   QWORD PTR [rsi+rax*8]
  409165:	sub    ebx,0x1
  409168:	jne    0x409160
  40916a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x409100
  409171:	add    rsp,0x28
  409175:	pop    rbx
  409176:	pop    rsi
  409177:	jmp    0x4090e0
  40917c:	nop    DWORD PTR [rax+0x0]
  409180:	xor    ebx,ebx
  409182:	jmp    0x409186
  409184:	mov    ebx,eax
  409186:	lea    edx,[rbx+0x1]
  409189:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40918e:	mov    rax,rdx
  409191:	jne    0x409184
  409193:	jmp    0x409157
  409195:	nop
  409196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4091a0:	mov    eax,DWORD PTR [rip+0x1e15a]        # 0x427300
  4091a6:	test   eax,eax
  4091a8:	je     0x4091b0
  4091aa:	repz ret 
  4091ac:	nop    DWORD PTR [rax+0x0]
  4091b0:	mov    DWORD PTR [rip+0x1e146],0x1        # 0x427300
  4091ba:	jmp    0x409140
  4091bc:	nop
  4091bd:	nop
  4091be:	nop
  4091bf:	nop
  4091c0:	mov    rax,QWORD PTR [rip+0x1f255]        # 0x42841c
  4091c7:	rex.W jmp rax
  4091ca:	nop
  4091cb:	nop
  4091cc:	nop
  4091cd:	nop
  4091ce:	nop
  4091cf:	nop
  4091d0:	xor    eax,eax
  4091d2:	ret    
  4091d3:	nop
  4091d4:	nop
  4091d5:	nop
  4091d6:	nop
  4091d7:	nop
  4091d8:	nop
  4091d9:	nop
  4091da:	nop
  4091db:	nop
  4091dc:	nop
  4091dd:	nop
  4091de:	nop
  4091df:	nop
  4091e0:	push   r12
  4091e2:	push   rbp
  4091e3:	push   rdi
  4091e4:	push   rsi
  4091e5:	push   rbx
  4091e6:	sub    rsp,0x40
  4091ea:	mov    rbx,QWORD PTR [rip+0x9eaf]        # 0x4130a0
  4091f1:	movabs rax,0x2b992ddfa232
  4091fb:	mov    QWORD PTR [rsp+0x20],0x0
  409204:	cmp    rbx,rax
  409207:	je     0x409220
  409209:	not    rbx
  40920c:	mov    QWORD PTR [rip+0x9e9d],rbx        # 0x4130b0
  409213:	add    rsp,0x40
  409217:	pop    rbx
  409218:	pop    rsi
  409219:	pop    rdi
  40921a:	pop    rbp
  40921b:	pop    r12
  40921d:	ret    
  40921e:	xchg   ax,ax
  409220:	lea    rcx,[rsp+0x20]
  409225:	call   QWORD PTR [rip+0x1f141]        # 0x42836c
  40922b:	mov    r12,QWORD PTR [rsp+0x20]
  409230:	call   QWORD PTR [rip+0x1f116]        # 0x42834c
  409236:	mov    ebp,eax
  409238:	call   QWORD PTR [rip+0x1f116]        # 0x428354
  40923e:	mov    edi,eax
  409240:	call   QWORD PTR [rip+0x1f12e]        # 0x428374
  409246:	lea    rcx,[rsp+0x30]
  40924b:	mov    esi,eax
  40924d:	call   QWORD PTR [rip+0x1f139]        # 0x42838c
  409253:	xor    r12,QWORD PTR [rsp+0x30]
  409258:	mov    edx,edi
  40925a:	movabs rax,0xffffffffffff
  409264:	xor    rbp,r12
  409267:	mov    rdi,rbp
  40926a:	xor    rdi,rdx
  40926d:	mov    edx,esi
  40926f:	xor    rdi,rdx
  409272:	mov    rsi,rdi
  409275:	and    rsi,rax
  409278:	cmp    rsi,rbx
  40927b:	je     0x4092a0
  40927d:	mov    rax,rsi
  409280:	not    rax
  409283:	mov    QWORD PTR [rip+0x9e16],rsi        # 0x4130a0
  40928a:	mov    QWORD PTR [rip+0x9e1f],rax        # 0x4130b0
  409291:	add    rsp,0x40
  409295:	pop    rbx
  409296:	pop    rsi
  409297:	pop    rdi
  409298:	pop    rbp
  409299:	pop    r12
  40929b:	ret    
  40929c:	nop    DWORD PTR [rax+0x0]
  4092a0:	movabs rax,0xffffd466d2205dcc
  4092aa:	movabs rsi,0x2b992ddfa233
  4092b4:	jmp    0x409283
  4092b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4092c0:	push   rbp
  4092c1:	push   rsi
  4092c2:	push   rbx
  4092c3:	mov    rbp,rsp
  4092c6:	sub    rsp,0x70
  4092ca:	mov    rsi,rcx
  4092cd:	lea    rcx,[rip+0x1e06c]        # 0x427340
  4092d4:	call   QWORD PTR [rip+0x1f0c2]        # 0x42839c
  4092da:	mov    rbx,QWORD PTR [rip+0x1e157]        # 0x427438
  4092e1:	xor    r8d,r8d
  4092e4:	lea    rdx,[rbp-0x28]
  4092e8:	mov    rcx,rbx
  4092eb:	call   QWORD PTR [rip+0x1f0b3]        # 0x4283a4
  4092f1:	test   rax,rax
  4092f4:	mov    r9,rax
  4092f7:	je     0x4093a0
  4092fd:	lea    rax,[rbp-0x20]
  409301:	mov    QWORD PTR [rsp+0x38],0x0
  40930a:	mov    r8,rbx
  40930d:	mov    rdx,QWORD PTR [rbp-0x28]
  409311:	xor    ecx,ecx
  409313:	mov    QWORD PTR [rsp+0x30],rax
  409318:	lea    rax,[rbp-0x18]
  40931c:	mov    QWORD PTR [rsp+0x28],rax
  409321:	lea    rax,[rip+0x1e018]        # 0x427340
  409328:	mov    QWORD PTR [rsp+0x20],rax
  40932d:	call   QWORD PTR [rip+0x1f079]        # 0x4283ac
  409333:	mov    rax,QWORD PTR [rip+0x1e0fe]        # 0x427438
  40933a:	xor    ecx,ecx
  40933c:	mov    QWORD PTR [rip+0x1e07d],rsi        # 0x4273c0
  409343:	mov    DWORD PTR [rip+0x1e4f3],0xc0000409        # 0x427840
  40934d:	mov    DWORD PTR [rip+0x1e4ed],0x1        # 0x427844
  409357:	mov    QWORD PTR [rip+0x1e4f2],rax        # 0x427850
  40935e:	mov    rax,QWORD PTR [rip+0x9d3b]        # 0x4130a0
  409365:	mov    QWORD PTR [rbp-0x10],rax
  409369:	mov    rax,QWORD PTR [rip+0x9d40]        # 0x4130b0
  409370:	mov    QWORD PTR [rbp-0x8],rax
  409374:	call   QWORD PTR [rip+0x1f03a]        # 0x4283b4
  40937a:	lea    rcx,[rip+0x1a3df]        # 0x423760
  409381:	call   QWORD PTR [rip+0x1f04d]        # 0x4283d4
  409387:	call   QWORD PTR [rip+0x1efb7]        # 0x428344
  40938d:	mov    edx,0xc0000409
  409392:	mov    rcx,rax
  409395:	call   QWORD PTR [rip+0x1f029]        # 0x4283c4
  40939b:	call   0x40a948
  4093a0:	mov    rax,QWORD PTR [rbp+0x18]
  4093a4:	mov    QWORD PTR [rip+0x1e08d],rax        # 0x427438
  4093ab:	lea    rax,[rbp+0x8]
  4093af:	mov    QWORD PTR [rip+0x1e022],rax        # 0x4273d8
  4093b6:	jmp    0x409333
  4093bb:	nop
  4093bc:	nop
  4093bd:	nop
  4093be:	nop
  4093bf:	nop
  4093c0:	sub    rsp,0x28
  4093c4:	test   edx,edx
  4093c6:	je     0x4093e0
  4093c8:	cmp    edx,0x3
  4093cb:	je     0x4093e0
  4093cd:	mov    eax,0x1
  4093d2:	add    rsp,0x28
  4093d6:	ret    
  4093d7:	nop    WORD PTR [rax+rax*1+0x0]
  4093e0:	call   0x40a0d0
  4093e5:	mov    eax,0x1
  4093ea:	add    rsp,0x28
  4093ee:	ret    
  4093ef:	nop
  4093f0:	push   rsi
  4093f1:	push   rbx
  4093f2:	sub    rsp,0x28
  4093f6:	mov    rax,QWORD PTR [rip+0x1a5e3]        # 0x4239e0
  4093fd:	cmp    DWORD PTR [rax],0x2
  409400:	je     0x409408
  409402:	mov    DWORD PTR [rax],0x2
  409408:	cmp    edx,0x2
  40940b:	je     0x409420
  40940d:	cmp    edx,0x1
  409410:	je     0x409452
  409412:	mov    eax,0x1
  409417:	add    rsp,0x28
  40941b:	pop    rbx
  40941c:	pop    rsi
  40941d:	ret    
  40941e:	xchg   ax,ax
  409420:	lea    rbx,[rip+0x1fc39]        # 0x429060
  409427:	lea    rsi,[rip+0x1fc32]        # 0x429060
  40942e:	cmp    rbx,rsi
  409431:	je     0x409412
  409433:	mov    rax,QWORD PTR [rbx]
  409436:	test   rax,rax
  409439:	je     0x40943d
  40943b:	call   rax
  40943d:	add    rbx,0x8
  409441:	cmp    rbx,rsi
  409444:	jne    0x409433
  409446:	mov    eax,0x1
  40944b:	add    rsp,0x28
  40944f:	pop    rbx
  409450:	pop    rsi
  409451:	ret    
  409452:	call   0x40a0d0
  409457:	jmp    0x409412
  409459:	nop    DWORD PTR [rax+0x0]
  409460:	xor    eax,eax
  409462:	ret    
  409463:	nop
  409464:	nop
  409465:	nop
  409466:	nop
  409467:	nop
  409468:	nop
  409469:	nop
  40946a:	nop
  40946b:	nop
  40946c:	nop
  40946d:	nop
  40946e:	nop
  40946f:	nop
  409470:	sub    rsp,0x58
  409474:	mov    rax,QWORD PTR [rip+0x1e4a5]        # 0x427920
  40947b:	test   rax,rax
  40947e:	je     0x4094ac
  409480:	movsd  xmm0,QWORD PTR [rsp+0x80]
  409489:	mov    DWORD PTR [rsp+0x20],ecx
  40948d:	lea    rcx,[rsp+0x20]
  409492:	mov    QWORD PTR [rsp+0x28],rdx
  409497:	movsd  QWORD PTR [rsp+0x30],xmm2
  40949d:	movsd  QWORD PTR [rsp+0x38],xmm3
  4094a3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4094a9:	call   rax
  4094ab:	nop
  4094ac:	add    rsp,0x58
  4094b0:	ret    
  4094b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4094b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4094c0:	mov    QWORD PTR [rip+0x1e459],rcx        # 0x427920
  4094c7:	jmp    0x40a990
  4094cc:	nop    DWORD PTR [rax+0x0]
  4094d0:	push   rsi
  4094d1:	push   rbx
  4094d2:	sub    rsp,0x78
  4094d6:	movaps XMMWORD PTR [rsp+0x40],xmm6
  4094db:	movaps XMMWORD PTR [rsp+0x50],xmm7
  4094e0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  4094e6:	cmp    DWORD PTR [rcx],0x6
  4094e9:	ja     0x4095c0
  4094ef:	mov    edx,DWORD PTR [rcx]
  4094f1:	lea    rax,[rip+0x1a3ac]        # 0x4238a4
  4094f8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4094fc:	add    rax,rdx
  4094ff:	jmp    rax
  409501:	lea    rbx,[rip+0x1a278]        # 0x423780
  409508:	nop    DWORD PTR [rax+rax*1+0x0]
  409510:	movsd  xmm8,QWORD PTR [rcx+0x20]
  409516:	mov    rsi,QWORD PTR [rcx+0x8]
  40951a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40951f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  409524:	call   0x40a9a8
  409529:	movsd  QWORD PTR [rsp+0x30],xmm8
  409530:	lea    rcx,[rax+0x60]
  409534:	lea    rdx,[rip+0x1a33d]        # 0x423878
  40953b:	movsd  QWORD PTR [rsp+0x28],xmm7
  409541:	mov    r9,rsi
  409544:	mov    r8,rbx
  409547:	movsd  QWORD PTR [rsp+0x20],xmm6
  40954d:	call   0x40a908
  409552:	nop
  409553:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  409558:	xor    eax,eax
  40955a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  40955f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  409565:	add    rsp,0x78
  409569:	pop    rbx
  40956a:	pop    rsi
  40956b:	ret    
  40956c:	nop    DWORD PTR [rax+0x0]
  409570:	lea    rbx,[rip+0x1a228]        # 0x42379f
  409577:	jmp    0x409510
  409579:	nop    DWORD PTR [rax+0x0]
  409580:	lea    rbx,[rip+0x1a239]        # 0x4237c0
  409587:	jmp    0x409510
  409589:	nop    DWORD PTR [rax+0x0]
  409590:	lea    rbx,[rip+0x1a299]        # 0x423830
  409597:	jmp    0x409510
  40959c:	nop    DWORD PTR [rax+0x0]
  4095a0:	lea    rbx,[rip+0x1a261]        # 0x423808
  4095a7:	jmp    0x409510
  4095ac:	nop    DWORD PTR [rax+0x0]
  4095b0:	lea    rbx,[rip+0x1a229]        # 0x4237e0
  4095b7:	jmp    0x409510
  4095bc:	nop    DWORD PTR [rax+0x0]
  4095c0:	lea    rbx,[rip+0x1a29f]        # 0x423866
  4095c7:	jmp    0x409510
  4095cc:	nop
  4095cd:	nop
  4095ce:	nop
  4095cf:	nop
  4095d0:	fninit 
  4095d2:	ret    
  4095d3:	nop
  4095d4:	nop
  4095d5:	nop
  4095d6:	nop
  4095d7:	nop
  4095d8:	nop
  4095d9:	nop
  4095da:	nop
  4095db:	nop
  4095dc:	nop
  4095dd:	nop
  4095de:	nop
  4095df:	nop
  4095e0:	mov    rax,rcx
  4095e3:	ret    
  4095e4:	xchg   ax,ax
  4095e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4095f0:	mov    rax,rcx
  4095f3:	ret    
  4095f4:	nop
  4095f5:	nop
  4095f6:	nop
  4095f7:	nop
  4095f8:	nop
  4095f9:	nop
  4095fa:	nop
  4095fb:	nop
  4095fc:	nop
  4095fd:	nop
  4095fe:	nop
  4095ff:	nop
  409600:	push   rsi
  409601:	push   rbx
  409602:	sub    rsp,0x38
  409606:	lea    rax,[rsp+0x58]
  40960b:	mov    rbx,rcx
  40960e:	mov    QWORD PTR [rsp+0x58],rdx
  409613:	mov    QWORD PTR [rsp+0x60],r8
  409618:	mov    QWORD PTR [rsp+0x68],r9
  40961d:	mov    QWORD PTR [rsp+0x28],rax
  409622:	call   0x40a9a8
  409627:	lea    rcx,[rip+0x1a292]        # 0x4238c0
  40962e:	lea    r9,[rax+0x60]
  409632:	mov    r8d,0x1b
  409638:	mov    edx,0x1
  40963d:	call   0x40a8e0
  409642:	mov    rsi,QWORD PTR [rsp+0x28]
  409647:	call   0x40a9a8
  40964c:	lea    rcx,[rax+0x60]
  409650:	mov    rdx,rbx
  409653:	mov    r8,rsi
  409656:	call   0x40a800
  40965b:	call   0x40a948
  409660:	nop
  409661:	nop    DWORD PTR [rax+rax*1+0x0]
  409666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409670:	push   r13
  409672:	push   r12
  409674:	push   rbp
  409675:	push   rdi
  409676:	push   rsi
  409677:	push   rbx
  409678:	sub    rsp,0x58
  40967c:	movsxd rbp,DWORD PTR [rip+0x1e2c1]        # 0x427944
  409683:	mov    rbx,rcx
  409686:	mov    rsi,rdx
  409689:	mov    rdi,r8
  40968c:	test   ebp,ebp
  40968e:	jle    0x40978a
  409694:	mov    rax,QWORD PTR [rip+0x1e2ad]        # 0x427948
  40969b:	xor    r9d,r9d
  40969e:	add    rax,0x8
  4096a2:	mov    r10,QWORD PTR [rax]
  4096a5:	cmp    rbx,r10
  4096a8:	jb     0x4096be
  4096aa:	mov    rdx,QWORD PTR [rax+0x8]
  4096ae:	mov    r11d,DWORD PTR [rdx+0x8]
  4096b2:	add    r10,r11
  4096b5:	cmp    rbx,r10
  4096b8:	jb     0x409770
  4096be:	add    r9d,0x1
  4096c2:	add    rax,0x18
  4096c6:	cmp    r9d,ebp
  4096c9:	jne    0x4096a2
  4096cb:	mov    rcx,rbx
  4096ce:	call   0x40a2e0
  4096d3:	test   rax,rax
  4096d6:	mov    r12,rax
  4096d9:	je     0x4097c2
  4096df:	lea    rbp,[rbp+rbp*2+0x0]
  4096e4:	shl    rbp,0x3
  4096e8:	mov    r13,rbp
  4096eb:	add    r13,QWORD PTR [rip+0x1e256]        # 0x427948
  4096f2:	mov    QWORD PTR [r13+0x10],rax
  4096f6:	mov    DWORD PTR [r13+0x0],0x0
  4096fe:	call   0x40a400
  409703:	mov    edx,DWORD PTR [r12+0xc]
  409708:	mov    r8d,0x30
  40970e:	add    rax,rdx
  409711:	lea    rdx,[rsp+0x20]
  409716:	mov    QWORD PTR [r13+0x8],rax
  40971a:	mov    rax,QWORD PTR [rip+0x1e227]        # 0x427948
  409721:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  409726:	call   QWORD PTR [rip+0x1ecb8]        # 0x4283e4
  40972c:	test   rax,rax
  40972f:	je     0x4097a5
  409731:	mov    eax,DWORD PTR [rsp+0x44]
  409735:	lea    edx,[rax-0x4]
  409738:	and    edx,0xfffffffb
  40973b:	je     0x409769
  40973d:	sub    eax,0x40
  409740:	and    eax,0xffffffbf
  409743:	je     0x409769
  409745:	mov    r9,rbp
  409748:	add    r9,QWORD PTR [rip+0x1e1f9]        # 0x427948
  40974f:	mov    r8d,0x40
  409755:	mov    rdx,QWORD PTR [rsp+0x38]
  40975a:	mov    rcx,QWORD PTR [rsp+0x20]
  40975f:	call   QWORD PTR [rip+0x1ec77]        # 0x4283dc
  409765:	test   eax,eax
  409767:	je     0x409791
  409769:	add    DWORD PTR [rip+0x1e1d4],0x1        # 0x427944
  409770:	mov    r8,rdi
  409773:	mov    rdx,rsi
  409776:	mov    rcx,rbx
  409779:	add    rsp,0x58
  40977d:	pop    rbx
  40977e:	pop    rsi
  40977f:	pop    rdi
  409780:	pop    rbp
  409781:	pop    r12
  409783:	pop    r13
  409785:	jmp    0x40a870
  40978a:	xor    ebp,ebp
  40978c:	jmp    0x4096cb
  409791:	call   QWORD PTR [rip+0x1ebc5]        # 0x42835c
  409797:	lea    rcx,[rip+0x1a19a]        # 0x423938
  40979e:	mov    edx,eax
  4097a0:	call   0x409600
  4097a5:	mov    rax,QWORD PTR [rip+0x1e19c]        # 0x427948
  4097ac:	mov    edx,DWORD PTR [r12+0x8]
  4097b1:	lea    rcx,[rip+0x1a148]        # 0x423900
  4097b8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  4097bd:	call   0x409600
  4097c2:	lea    rcx,[rip+0x1a117]        # 0x4238e0
  4097c9:	mov    rdx,rbx
  4097cc:	call   0x409600
  4097d1:	nop
  4097d2:	nop    DWORD PTR [rax+0x0]
  4097d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4097e0:	push   rbp
  4097e1:	push   r14
  4097e3:	push   r13
  4097e5:	push   r12
  4097e7:	push   rdi
  4097e8:	push   rsi
  4097e9:	push   rbx
  4097ea:	mov    rbp,rsp
  4097ed:	sub    rsp,0x60
  4097f1:	mov    ebx,DWORD PTR [rip+0x1e149]        # 0x427940
  4097f7:	test   ebx,ebx
  4097f9:	je     0x409810
  4097fb:	mov    rsp,rbp
  4097fe:	pop    rbx
  4097ff:	pop    rsi
  409800:	pop    rdi
  409801:	pop    r12
  409803:	pop    r13
  409805:	pop    r14
  409807:	pop    rbp
  409808:	ret    
  409809:	nop    DWORD PTR [rax+0x0]
  409810:	mov    DWORD PTR [rip+0x1e126],0x1        # 0x427940
  40981a:	call   0x40a330
  40981f:	cdqe   
  409821:	lea    rax,[rax+rax*2]
  409825:	lea    rax,[rax*8+0x1e]
  40982d:	and    rax,0xfffffffffffffff0
  409831:	call   0x40a550
  409836:	mov    rsi,QWORD PTR [rip+0x1a1d3]        # 0x423a10
  40983d:	mov    rbx,QWORD PTR [rip+0x1a1dc]        # 0x423a20
  409844:	sub    rsp,rax
  409847:	mov    DWORD PTR [rip+0x1e0f3],0x0        # 0x427944
  409851:	lea    rax,[rsp+0x20]
  409856:	mov    QWORD PTR [rip+0x1e0eb],rax        # 0x427948
  40985d:	mov    rax,rsi
  409860:	sub    rax,rbx
  409863:	cmp    rax,0x7
  409867:	jle    0x4097fb
  409869:	cmp    rax,0xb
  40986d:	jle    0x409895
  40986f:	mov    r11d,DWORD PTR [rbx]
  409872:	test   r11d,r11d
  409875:	jne    0x4099c0
  40987b:	mov    r10d,DWORD PTR [rbx+0x4]
  40987f:	test   r10d,r10d
  409882:	jne    0x4099c0
  409888:	mov    r9d,DWORD PTR [rbx+0x8]
  40988c:	test   r9d,r9d
  40988f:	jne    0x4098ac
  409891:	add    rbx,0xc
  409895:	mov    r8d,DWORD PTR [rbx]
  409898:	test   r8d,r8d
  40989b:	jne    0x4099c0
  4098a1:	mov    ecx,DWORD PTR [rbx+0x4]
  4098a4:	test   ecx,ecx
  4098a6:	jne    0x4099c0
  4098ac:	mov    edx,DWORD PTR [rbx+0x8]
  4098af:	cmp    edx,0x1
  4098b2:	jne    0x409acc
  4098b8:	add    rbx,0xc
  4098bc:	cmp    rbx,rsi
  4098bf:	jae    0x4097fb
  4098c5:	mov    r12,QWORD PTR [rip+0x1a174]        # 0x423a40
  4098cc:	lea    r13,[rbp-0x30]
  4098d0:	movabs r14,0xffffffff00000000
  4098da:	mov    ecx,DWORD PTR [rbx+0x4]
  4098dd:	mov    eax,DWORD PTR [rbx]
  4098df:	movzx  edx,BYTE PTR [rbx+0x8]
  4098e3:	add    rax,r12
  4098e6:	add    rcx,r12
  4098e9:	cmp    edx,0x10
  4098ec:	mov    r8,QWORD PTR [rax]
  4098ef:	je     0x409a36
  4098f5:	jbe    0x4099fd
  4098fb:	cmp    edx,0x20
  4098fe:	je     0x409a7f
  409904:	cmp    edx,0x40
  409907:	jne    0x409a6b
  40990d:	sub    r8,rax
  409910:	mov    rdx,r13
  409913:	mov    rdi,r13
  409916:	mov    rax,r8
  409919:	add    rax,QWORD PTR [rcx]
  40991c:	mov    r8d,0x8
  409922:	mov    QWORD PTR [rbp-0x30],rax
  409926:	call   0x409670
  40992b:	add    rbx,0xc
  40992f:	cmp    rbx,rsi
  409932:	jb     0x4098da
  409934:	mov    eax,DWORD PTR [rip+0x1e00a]        # 0x427944
  40993a:	xor    ebx,ebx
  40993c:	xor    esi,esi
  40993e:	test   eax,eax
  409940:	jle    0x4097fb
  409946:	mov    r14,QWORD PTR [rip+0x1ea97]        # 0x4283e4
  40994d:	lea    r13,[rbp-0x34]
  409951:	mov    r12,QWORD PTR [rip+0x1ea84]        # 0x4283dc
  409958:	jmp    0x409973
  40995a:	nop    WORD PTR [rax+rax*1+0x0]
  409960:	add    esi,0x1
  409963:	add    rbx,0x18
  409967:	cmp    esi,DWORD PTR [rip+0x1dfd7]        # 0x427944
  40996d:	jge    0x4097fb
  409973:	mov    rax,rbx
  409976:	add    rax,QWORD PTR [rip+0x1dfcb]        # 0x427948
  40997d:	mov    edx,DWORD PTR [rax]
  40997f:	test   edx,edx
  409981:	je     0x409960
  409983:	mov    rcx,QWORD PTR [rax+0x8]
  409987:	mov    r8d,0x30
  40998d:	mov    rdx,rdi
  409990:	call   r14
  409993:	test   rax,rax
  409996:	je     0x409aae
  40999c:	mov    rax,QWORD PTR [rip+0x1dfa5]        # 0x427948
  4099a3:	mov    r9,r13
  4099a6:	mov    rdx,QWORD PTR [rbp-0x18]
  4099aa:	mov    rcx,QWORD PTR [rbp-0x30]
  4099ae:	mov    r8d,DWORD PTR [rax+rbx*1]
  4099b2:	call   r12
  4099b5:	jmp    0x409960
  4099b7:	nop    WORD PTR [rax+rax*1+0x0]
  4099c0:	cmp    rbx,rsi
  4099c3:	jae    0x4097fb
  4099c9:	mov    r12,QWORD PTR [rip+0x1a070]        # 0x423a40
  4099d0:	lea    rdi,[rbp-0x30]
  4099d4:	mov    ecx,DWORD PTR [rbx+0x4]
  4099d7:	mov    eax,DWORD PTR [rbx]
  4099d9:	mov    r8d,0x4
  4099df:	mov    rdx,rdi
  4099e2:	add    rbx,0x8
  4099e6:	add    rcx,r12
  4099e9:	add    eax,DWORD PTR [rcx]
  4099eb:	mov    DWORD PTR [rbp-0x30],eax
  4099ee:	call   0x409670
  4099f3:	cmp    rbx,rsi
  4099f6:	jb     0x4099d4
  4099f8:	jmp    0x409934
  4099fd:	cmp    edx,0x8
  409a00:	jne    0x409a6b
  409a02:	movzx  edx,BYTE PTR [rcx]
  409a05:	mov    rdi,r13
  409a08:	mov    r10,rdx
  409a0b:	or     r10,0xffffffffffffff00
  409a12:	test   dl,dl
  409a14:	cmovs  rdx,r10
  409a18:	sub    rdx,rax
  409a1b:	lea    rax,[r8+rdx*1]
  409a1f:	mov    r8d,0x1
  409a25:	mov    rdx,r13
  409a28:	mov    QWORD PTR [rbp-0x30],rax
  409a2c:	call   0x409670
  409a31:	jmp    0x40992b
  409a36:	movzx  edx,WORD PTR [rcx]
  409a39:	mov    rdi,r13
  409a3c:	mov    r10,rdx
  409a3f:	or     r10,0xffffffffffff0000
  409a46:	test   dx,dx
  409a49:	cmovs  rdx,r10
  409a4d:	sub    rdx,rax
  409a50:	lea    rax,[r8+rdx*1]
  409a54:	mov    r8d,0x2
  409a5a:	mov    rdx,r13
  409a5d:	mov    QWORD PTR [rbp-0x30],rax
  409a61:	call   0x409670
  409a66:	jmp    0x40992b
  409a6b:	lea    rcx,[rip+0x19f26]        # 0x423998
  409a72:	mov    QWORD PTR [rbp-0x30],0x0
  409a7a:	call   0x409600
  409a7f:	mov    edx,DWORD PTR [rcx]
  409a81:	mov    rdi,r13
  409a84:	mov    r10,rdx
  409a87:	or     r10,r14
  409a8a:	test   edx,edx
  409a8c:	cmovs  rdx,r10
  409a90:	sub    rdx,rax
  409a93:	lea    rax,[r8+rdx*1]
  409a97:	mov    r8d,0x4
  409a9d:	mov    rdx,r13
  409aa0:	mov    QWORD PTR [rbp-0x30],rax
  409aa4:	call   0x409670
  409aa9:	jmp    0x40992b
  409aae:	add    rbx,QWORD PTR [rip+0x1de93]        # 0x427948
  409ab5:	lea    rcx,[rip+0x19e44]        # 0x423900
  409abc:	mov    rax,QWORD PTR [rbx+0x10]
  409ac0:	mov    r8,QWORD PTR [rbx+0x8]
  409ac4:	mov    edx,DWORD PTR [rax+0x8]
  409ac7:	call   0x409600
  409acc:	lea    rcx,[rip+0x19e8d]        # 0x423960
  409ad3:	call   0x409600
  409ad8:	nop
  409ad9:	nop
  409ada:	nop
  409adb:	nop
  409adc:	nop
  409add:	nop
  409ade:	nop
  409adf:	nop
  409ae0:	sub    rsp,0x28
  409ae4:	mov    eax,DWORD PTR [rcx]
  409ae6:	cmp    eax,0xc0000091
  409aeb:	ja     0x409b50
  409aed:	cmp    eax,0xc000008d
  409af2:	jae    0x409b6f
  409af4:	cmp    eax,0xc0000008
  409af9:	je     0x409c10
  409aff:	ja     0x409be0
  409b05:	cmp    eax,0x80000002
  409b0a:	je     0x409c10
  409b10:	cmp    eax,0xc0000005
  409b15:	jne    0x409bee
  409b1b:	xor    edx,edx
  409b1d:	mov    ecx,0xb
  409b22:	call   0x40a850
  409b27:	cmp    rax,0x1
  409b2b:	je     0x409c70
  409b31:	test   rax,rax
  409b34:	je     0x409c50
  409b3a:	mov    ecx,0xb
  409b3f:	call   rax
  409b41:	xor    eax,eax
  409b43:	add    rsp,0x28
  409b47:	ret    
  409b48:	nop    DWORD PTR [rax+rax*1+0x0]
  409b50:	cmp    eax,0xc0000094
  409b55:	je     0x409c20
  409b5b:	ja     0x409ba0
  409b5d:	cmp    eax,0xc0000092
  409b62:	je     0x409c10
  409b68:	cmp    eax,0xc0000093
  409b6d:	jne    0x409bee
  409b6f:	xor    edx,edx
  409b71:	mov    ecx,0x8
  409b76:	call   0x40a850
  409b7b:	cmp    rax,0x1
  409b7f:	mov    rdx,rax
  409b82:	je     0x409bf8
  409b84:	test   rdx,rdx
  409b87:	mov    eax,0x1
  409b8c:	je     0x409b43
  409b8e:	mov    ecx,0x8
  409b93:	call   rdx
  409b95:	xor    eax,eax
  409b97:	add    rsp,0x28
  409b9b:	ret    
  409b9c:	nop    DWORD PTR [rax+0x0]
  409ba0:	cmp    eax,0xc0000095
  409ba5:	je     0x409c10
  409ba7:	cmp    eax,0xc0000096
  409bac:	jne    0x409bee
  409bae:	xor    edx,edx
  409bb0:	mov    ecx,0x4
  409bb5:	call   0x40a850
  409bba:	cmp    rax,0x1
  409bbe:	je     0x409c5a
  409bc4:	test   rax,rax
  409bc7:	je     0x409c50
  409bcd:	mov    ecx,0x4
  409bd2:	call   rax
  409bd4:	xor    eax,eax
  409bd6:	jmp    0x409b43
  409bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  409be0:	cmp    eax,0xc000001d
  409be5:	je     0x409bae
  409be7:	cmp    eax,0xc000008c
  409bec:	je     0x409c10
  409bee:	mov    eax,0x1
  409bf3:	add    rsp,0x28
  409bf7:	ret    
  409bf8:	mov    edx,0x1
  409bfd:	mov    ecx,0x8
  409c02:	call   0x40a850
  409c07:	call   0x4095d0
  409c0c:	nop    DWORD PTR [rax+0x0]
  409c10:	xor    eax,eax
  409c12:	add    rsp,0x28
  409c16:	ret    
  409c17:	nop    WORD PTR [rax+rax*1+0x0]
  409c20:	xor    edx,edx
  409c22:	mov    ecx,0x8
  409c27:	call   0x40a850
  409c2c:	cmp    rax,0x1
  409c30:	mov    rdx,rax
  409c33:	jne    0x409b84
  409c39:	mov    edx,0x1
  409c3e:	mov    ecx,0x8
  409c43:	call   0x40a850
  409c48:	xor    eax,eax
  409c4a:	jmp    0x409b43
  409c4f:	nop
  409c50:	mov    eax,0x4
  409c55:	add    rsp,0x28
  409c59:	ret    
  409c5a:	mov    edx,0x1
  409c5f:	mov    ecx,0x4
  409c64:	call   0x40a850
  409c69:	xor    eax,eax
  409c6b:	jmp    0x409b43
  409c70:	mov    edx,0x1
  409c75:	mov    ecx,0xb
  409c7a:	call   0x40a850
  409c7f:	xor    eax,eax
  409c81:	jmp    0x409b43
  409c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c90:	push   r12
  409c92:	push   rbp
  409c93:	push   rdi
  409c94:	push   rsi
  409c95:	push   rbx
  409c96:	sub    rsp,0x20
  409c9a:	call   0x40a400
  409c9f:	mov    rbp,rax
  409ca2:	mov    eax,DWORD PTR [rip+0x1dce0]        # 0x427988
  409ca8:	test   eax,eax
  409caa:	jne    0x409cd1
  409cac:	test   rbp,rbp
  409caf:	je     0x409cd1
  409cb1:	lea    rcx,[rip+0x19d18]        # 0x4239d0
  409cb8:	mov    DWORD PTR [rip+0x1dcc6],0x1        # 0x427988
  409cc2:	call   0x40a240
  409cc7:	test   rax,rax
  409cca:	je     0x409ce0
  409ccc:	mov    eax,0x1
  409cd1:	add    rsp,0x20
  409cd5:	pop    rbx
  409cd6:	pop    rsi
  409cd7:	pop    rdi
  409cd8:	pop    rbp
  409cd9:	pop    r12
  409cdb:	ret    
  409cdc:	nop    DWORD PTR [rax+0x0]
  409ce0:	lea    rbx,[rip+0x1ddd9]        # 0x427ac0
  409ce7:	mov    ecx,0x30
  409cec:	lea    rdx,[rip+0x1dccd]        # 0x4279c0
  409cf3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x409ae0
  409cfa:	xor    esi,esi
  409cfc:	mov    rdi,rbx
  409cff:	rep stos QWORD PTR es:[rdi],rax
  409d02:	mov    rdi,rdx
  409d05:	sub    r12,rbp
  409d08:	mov    cl,0x20
  409d0a:	rep stos QWORD PTR es:[rdi],rax
  409d0d:	mov    rdi,rdx
  409d10:	jmp    0x409d40
  409d12:	mov    BYTE PTR [rdi],0x9
  409d15:	mov    DWORD PTR [rdi+0x4],r12d
  409d19:	add    rsi,0x1
  409d1d:	mov    edx,DWORD PTR [rax+0xc]
  409d20:	add    rbx,0xc
  409d24:	mov    DWORD PTR [rbx-0xc],edx
  409d27:	add    edx,DWORD PTR [rax+0x8]
  409d2a:	mov    rax,rdi
  409d2d:	sub    rax,rbp
  409d30:	add    rdi,0x8
  409d34:	mov    DWORD PTR [rbx-0x4],eax
  409d37:	mov    DWORD PTR [rbx-0x8],edx
  409d3a:	cmp    rsi,0x20
  409d3e:	je     0x409d75
  409d40:	mov    rcx,rsi
  409d43:	call   0x40a370
  409d48:	test   rax,rax
  409d4b:	jne    0x409d12
  409d4d:	test   rsi,rsi
  409d50:	je     0x409ccc
  409d56:	mov    edx,esi
  409d58:	nop    DWORD PTR [rax+rax*1+0x0]
  409d60:	mov    r8,rbp
  409d63:	lea    rcx,[rip+0x1dd56]        # 0x427ac0
  409d6a:	call   QWORD PTR [rip+0x1e624]        # 0x428394
  409d70:	jmp    0x409ccc
  409d75:	mov    edx,0x20
  409d7a:	jmp    0x409d60
  409d7c:	nop    DWORD PTR [rax+0x0]
  409d80:	push   rbx
  409d81:	sub    rsp,0x20
  409d85:	mov    rdx,QWORD PTR [rcx]
  409d88:	mov    eax,DWORD PTR [rdx]
  409d8a:	mov    r8d,eax
  409d8d:	and    r8d,0x20ffffff
  409d94:	cmp    r8d,0x20474343
  409d9b:	je     0x409ea0
  409da1:	cmp    eax,0xc0000091
  409da6:	mov    rbx,rcx
  409da9:	ja     0x409e30
  409daf:	cmp    eax,0xc000008d
  409db4:	jae    0x409e47
  409dba:	cmp    eax,0xc0000008
  409dbf:	je     0x409df3
  409dc1:	ja     0x409e00
  409dc3:	cmp    eax,0x80000002
  409dc8:	je     0x409df3
  409dca:	cmp    eax,0xc0000005
  409dcf:	jne    0x409e12
  409dd1:	xor    edx,edx
  409dd3:	mov    ecx,0xb
  409dd8:	call   0x40a850
  409ddd:	cmp    rax,0x1
  409de1:	je     0x409f10
  409de7:	test   rax,rax
  409dea:	je     0x409e12
  409dec:	mov    ecx,0xb
  409df1:	call   rax
  409df3:	mov    eax,0xffffffff
  409df8:	add    rsp,0x20
  409dfc:	pop    rbx
  409dfd:	ret    
  409dfe:	xchg   ax,ax
  409e00:	cmp    eax,0xc000001d
  409e05:	je     0x409ec6
  409e0b:	cmp    eax,0xc000008c
  409e10:	je     0x409df3
  409e12:	mov    rax,QWORD PTR [rip+0x1db67]        # 0x427980
  409e19:	test   rax,rax
  409e1c:	je     0x409df8
  409e1e:	mov    rcx,rbx
  409e21:	add    rsp,0x20
  409e25:	pop    rbx
  409e26:	rex.W jmp rax
  409e29:	nop    DWORD PTR [rax+0x0]
  409e30:	cmp    eax,0xc0000094
  409e35:	je     0x409e72
  409e37:	ja     0x409eb0
  409e39:	cmp    eax,0xc0000092
  409e3e:	je     0x409df3
  409e40:	cmp    eax,0xc0000093
  409e45:	jne    0x409e12
  409e47:	xor    edx,edx
  409e49:	mov    ecx,0x8
  409e4e:	call   0x40a850
  409e53:	cmp    rax,0x1
  409e57:	jne    0x409e84
  409e59:	mov    edx,0x1
  409e5e:	mov    ecx,0x8
  409e63:	call   0x40a850
  409e68:	call   0x4095d0
  409e6d:	jmp    0x409df3
  409e72:	xor    edx,edx
  409e74:	mov    ecx,0x8
  409e79:	call   0x40a850
  409e7e:	cmp    rax,0x1
  409e82:	je     0x409ef2
  409e84:	test   rax,rax
  409e87:	je     0x409e12
  409e89:	mov    ecx,0x8
  409e8e:	call   rax
  409e90:	mov    eax,0xffffffff
  409e95:	jmp    0x409df8
  409e9a:	nop    WORD PTR [rax+rax*1+0x0]
  409ea0:	test   BYTE PTR [rdx+0x4],0x1
  409ea4:	jne    0x409da1
  409eaa:	jmp    0x409df3
  409eaf:	nop
  409eb0:	cmp    eax,0xc0000095
  409eb5:	je     0x409df3
  409ebb:	cmp    eax,0xc0000096
  409ec0:	jne    0x409e12
  409ec6:	xor    edx,edx
  409ec8:	mov    ecx,0x4
  409ecd:	call   0x40a850
  409ed2:	cmp    rax,0x1
  409ed6:	je     0x409f24
  409ed8:	test   rax,rax
  409edb:	je     0x409e12
  409ee1:	mov    ecx,0x4
  409ee6:	call   rax
  409ee8:	mov    eax,0xffffffff
  409eed:	jmp    0x409df8
  409ef2:	mov    edx,0x1
  409ef7:	mov    ecx,0x8
  409efc:	call   0x40a850
  409f01:	jmp    0x409df3
  409f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f10:	mov    edx,0x1
  409f15:	mov    ecx,0xb
  409f1a:	call   0x40a850
  409f1f:	jmp    0x409df3
  409f24:	mov    edx,0x1
  409f29:	mov    ecx,0x4
  409f2e:	call   0x40a850
  409f33:	jmp    0x409df3
  409f38:	nop
  409f39:	nop
  409f3a:	nop
  409f3b:	nop
  409f3c:	nop
  409f3d:	nop
  409f3e:	nop
  409f3f:	nop
  409f40:	push   rbp
  409f41:	push   rdi
  409f42:	push   rsi
  409f43:	push   rbx
  409f44:	sub    rsp,0x28
  409f48:	lea    rcx,[rip+0x1dd11]        # 0x427c60
  409f4f:	call   QWORD PTR [rip+0x1e3e7]        # 0x42833c
  409f55:	mov    rbx,QWORD PTR [rip+0x1dce4]        # 0x427c40
  409f5c:	test   rbx,rbx
  409f5f:	je     0x409f94
  409f61:	mov    rbp,QWORD PTR [rip+0x1e464]        # 0x4283cc
  409f68:	mov    rdi,QWORD PTR [rip+0x1e3ed]        # 0x42835c
  409f6f:	nop
  409f70:	mov    ecx,DWORD PTR [rbx]
  409f72:	call   rbp
  409f74:	mov    rsi,rax
  409f77:	call   rdi
  409f79:	test   eax,eax
  409f7b:	jne    0x409f8b
  409f7d:	test   rsi,rsi
  409f80:	je     0x409f8b
  409f82:	mov    rax,QWORD PTR [rbx+0x8]
  409f86:	mov    rcx,rsi
  409f89:	call   rax
  409f8b:	mov    rbx,QWORD PTR [rbx+0x10]
  409f8f:	test   rbx,rbx
  409f92:	jne    0x409f70
  409f94:	mov    rax,QWORD PTR [rip+0x1e3e9]        # 0x428384
  409f9b:	lea    rcx,[rip+0x1dcbe]        # 0x427c60
  409fa2:	add    rsp,0x28
  409fa6:	pop    rbx
  409fa7:	pop    rsi
  409fa8:	pop    rdi
  409fa9:	pop    rbp
  409faa:	rex.W jmp rax
  409fad:	nop    DWORD PTR [rax]
  409fb0:	push   rdi
  409fb1:	push   rsi
  409fb2:	push   rbx
  409fb3:	sub    rsp,0x20
  409fb7:	mov    eax,DWORD PTR [rip+0x1dc8b]        # 0x427c48
  409fbd:	test   eax,eax
  409fbf:	jne    0x409fd0
  409fc1:	add    rsp,0x20
  409fc5:	pop    rbx
  409fc6:	pop    rsi
  409fc7:	pop    rdi
  409fc8:	ret    
  409fc9:	nop    DWORD PTR [rax+0x0]
  409fd0:	mov    rsi,rdx
  409fd3:	mov    edi,ecx
  409fd5:	mov    edx,0x18
  409fda:	mov    ecx,0x1
  409fdf:	call   0x40a938
  409fe4:	test   rax,rax
  409fe7:	mov    rbx,rax
  409fea:	je     0x40a028
  409fec:	mov    DWORD PTR [rax],edi
  409fee:	mov    QWORD PTR [rax+0x8],rsi
  409ff2:	lea    rcx,[rip+0x1dc67]        # 0x427c60
  409ff9:	call   QWORD PTR [rip+0x1e33d]        # 0x42833c
  409fff:	mov    rax,QWORD PTR [rip+0x1dc3a]        # 0x427c40
  40a006:	lea    rcx,[rip+0x1dc53]        # 0x427c60
  40a00d:	mov    QWORD PTR [rip+0x1dc2c],rbx        # 0x427c40
  40a014:	mov    QWORD PTR [rbx+0x10],rax
  40a018:	call   QWORD PTR [rip+0x1e366]        # 0x428384
  40a01e:	xor    eax,eax
  40a020:	add    rsp,0x20
  40a024:	pop    rbx
  40a025:	pop    rsi
  40a026:	pop    rdi
  40a027:	ret    
  40a028:	mov    eax,0xffffffff
  40a02d:	jmp    0x409fc1
  40a02f:	nop
  40a030:	push   rbx
  40a031:	sub    rsp,0x20
  40a035:	mov    eax,DWORD PTR [rip+0x1dc0d]        # 0x427c48
  40a03b:	test   eax,eax
  40a03d:	jne    0x40a050
  40a03f:	xor    eax,eax
  40a041:	add    rsp,0x20
  40a045:	pop    rbx
  40a046:	ret    
  40a047:	nop    WORD PTR [rax+rax*1+0x0]
  40a050:	mov    ebx,ecx
  40a052:	lea    rcx,[rip+0x1dc07]        # 0x427c60
  40a059:	call   QWORD PTR [rip+0x1e2dd]        # 0x42833c
  40a05f:	mov    rdx,QWORD PTR [rip+0x1dbda]        # 0x427c40
  40a066:	test   rdx,rdx
  40a069:	je     0x40a087
  40a06b:	mov    eax,DWORD PTR [rdx]
  40a06d:	cmp    eax,ebx
  40a06f:	jne    0x40a07e
  40a071:	jmp    0x40a0bf
  40a073:	mov    r8d,DWORD PTR [rax]
  40a076:	cmp    r8d,ebx
  40a079:	je     0x40a0a0
  40a07b:	mov    rdx,rax
  40a07e:	mov    rax,QWORD PTR [rdx+0x10]
  40a082:	test   rax,rax
  40a085:	jne    0x40a073
  40a087:	lea    rcx,[rip+0x1dbd2]        # 0x427c60
  40a08e:	call   QWORD PTR [rip+0x1e2f0]        # 0x428384
  40a094:	xor    eax,eax
  40a096:	add    rsp,0x20
  40a09a:	pop    rbx
  40a09b:	ret    
  40a09c:	nop    DWORD PTR [rax+0x0]
  40a0a0:	mov    rcx,rax
  40a0a3:	mov    rax,QWORD PTR [rax+0x10]
  40a0a7:	mov    QWORD PTR [rdx+0x10],rax
  40a0ab:	call   0x40a8f0
  40a0b0:	lea    rcx,[rip+0x1dba9]        # 0x427c60
  40a0b7:	call   QWORD PTR [rip+0x1e2c7]        # 0x428384
  40a0bd:	jmp    0x40a094
  40a0bf:	mov    rax,QWORD PTR [rdx+0x10]
  40a0c3:	mov    rcx,rdx
  40a0c6:	mov    QWORD PTR [rip+0x1db73],rax        # 0x427c40
  40a0cd:	jmp    0x40a0ab
  40a0cf:	nop
  40a0d0:	push   rbx
  40a0d1:	sub    rsp,0x20
  40a0d5:	cmp    edx,0x1
  40a0d8:	je     0x40a170
  40a0de:	jb     0x40a110
  40a0e0:	cmp    edx,0x2
  40a0e3:	je     0x40a100
  40a0e5:	cmp    edx,0x3
  40a0e8:	jne    0x40a105
  40a0ea:	mov    eax,DWORD PTR [rip+0x1db58]        # 0x427c48
  40a0f0:	test   eax,eax
  40a0f2:	je     0x40a105
  40a0f4:	call   0x409f40
  40a0f9:	jmp    0x40a105
  40a0fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a100:	call   0x4095d0
  40a105:	mov    eax,0x1
  40a10a:	add    rsp,0x20
  40a10e:	pop    rbx
  40a10f:	ret    
  40a110:	mov    eax,DWORD PTR [rip+0x1db32]        # 0x427c48
  40a116:	test   eax,eax
  40a118:	jne    0x40a1a0
  40a11e:	mov    eax,DWORD PTR [rip+0x1db24]        # 0x427c48
  40a124:	cmp    eax,0x1
  40a127:	jne    0x40a105
  40a129:	mov    rcx,QWORD PTR [rip+0x1db10]        # 0x427c40
  40a130:	test   rcx,rcx
  40a133:	je     0x40a146
  40a135:	mov    rbx,QWORD PTR [rcx+0x10]
  40a139:	call   0x40a8f0
  40a13e:	test   rbx,rbx
  40a141:	mov    rcx,rbx
  40a144:	jne    0x40a135
  40a146:	lea    rcx,[rip+0x1db13]        # 0x427c60
  40a14d:	mov    QWORD PTR [rip+0x1dae8],0x0        # 0x427c40
  40a158:	mov    DWORD PTR [rip+0x1dae6],0x0        # 0x427c48
  40a162:	call   QWORD PTR [rip+0x1e1cc]        # 0x428334
  40a168:	jmp    0x40a105
  40a16a:	nop    WORD PTR [rax+rax*1+0x0]
  40a170:	mov    eax,DWORD PTR [rip+0x1dad2]        # 0x427c48
  40a176:	test   eax,eax
  40a178:	je     0x40a190
  40a17a:	mov    eax,0x1
  40a17f:	mov    DWORD PTR [rip+0x1dabf],0x1        # 0x427c48
  40a189:	add    rsp,0x20
  40a18d:	pop    rbx
  40a18e:	ret    
  40a18f:	nop
  40a190:	lea    rcx,[rip+0x1dac9]        # 0x427c60
  40a197:	call   QWORD PTR [rip+0x1e1df]        # 0x42837c
  40a19d:	jmp    0x40a17a
  40a19f:	nop
  40a1a0:	call   0x409f40
  40a1a5:	jmp    0x40a11e
  40a1aa:	nop
  40a1ab:	nop
  40a1ac:	nop
  40a1ad:	nop
  40a1ae:	nop
  40a1af:	nop
  40a1b0:	movsxd rax,DWORD PTR [rcx+0x3c]
  40a1b4:	add    rcx,rax
  40a1b7:	xor    eax,eax
  40a1b9:	cmp    DWORD PTR [rcx],0x4550
  40a1bf:	je     0x40a1c3
  40a1c1:	repz ret 
  40a1c3:	xor    eax,eax
  40a1c5:	cmp    WORD PTR [rcx+0x18],0x20b
  40a1cb:	sete   al
  40a1ce:	ret    
  40a1cf:	nop
  40a1d0:	cmp    WORD PTR [rcx],0x5a4d
  40a1d5:	je     0x40a1e0
  40a1d7:	xor    eax,eax
  40a1d9:	ret    
  40a1da:	nop    WORD PTR [rax+rax*1+0x0]
  40a1e0:	jmp    0x40a1b0
  40a1e2:	nop    DWORD PTR [rax+0x0]
  40a1e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a1f0:	movsxd rax,DWORD PTR [rcx+0x3c]
  40a1f4:	add    rcx,rax
  40a1f7:	movzx  eax,WORD PTR [rcx+0x14]
  40a1fb:	lea    rax,[rcx+rax*1+0x18]
  40a200:	movzx  ecx,WORD PTR [rcx+0x6]
  40a204:	test   ecx,ecx
  40a206:	je     0x40a231
  40a208:	sub    ecx,0x1
  40a20b:	lea    rcx,[rcx+rcx*4]
  40a20f:	lea    r9,[rax+rcx*8+0x28]
  40a214:	mov    r8d,DWORD PTR [rax+0xc]
  40a218:	cmp    r8,rdx
  40a21b:	mov    rcx,r8
  40a21e:	ja     0x40a228
  40a220:	add    ecx,DWORD PTR [rax+0x8]
  40a223:	cmp    rdx,rcx
  40a226:	jb     0x40a233
  40a228:	add    rax,0x28
  40a22c:	cmp    rax,r9
  40a22f:	jne    0x40a214
  40a231:	xor    eax,eax
  40a233:	repz ret 
  40a235:	nop
  40a236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a240:	push   rdi
  40a241:	push   rsi
  40a242:	push   rbx
  40a243:	sub    rsp,0x20
  40a247:	mov    rsi,rcx
  40a24a:	call   0x40a820
  40a24f:	cmp    rax,0x8
  40a253:	ja     0x40a270
  40a255:	mov    rbx,QWORD PTR [rip+0x197e4]        # 0x423a40
  40a25c:	xor    edi,edi
  40a25e:	cmp    WORD PTR [rbx],0x5a4d
  40a263:	je     0x40a280
  40a265:	mov    rax,rdi
  40a268:	add    rsp,0x20
  40a26c:	pop    rbx
  40a26d:	pop    rsi
  40a26e:	pop    rdi
  40a26f:	ret    
  40a270:	xor    edi,edi
  40a272:	mov    rax,rdi
  40a275:	add    rsp,0x20
  40a279:	pop    rbx
  40a27a:	pop    rsi
  40a27b:	pop    rdi
  40a27c:	ret    
  40a27d:	nop    DWORD PTR [rax]
  40a280:	mov    rcx,rbx
  40a283:	call   0x40a1b0
  40a288:	test   eax,eax
  40a28a:	je     0x40a265
  40a28c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  40a290:	add    rdx,rbx
  40a293:	movzx  eax,WORD PTR [rdx+0x14]
  40a297:	lea    rbx,[rdx+rax*1+0x18]
  40a29c:	movzx  eax,WORD PTR [rdx+0x6]
  40a2a0:	test   eax,eax
  40a2a2:	je     0x40a265
  40a2a4:	sub    eax,0x1
  40a2a7:	lea    rax,[rax+rax*4]
  40a2ab:	lea    rdi,[rbx+rax*8+0x28]
  40a2b0:	jmp    0x40a2bb
  40a2b2:	add    rbx,0x28
  40a2b6:	cmp    rbx,rdi
  40a2b9:	je     0x40a270
  40a2bb:	mov    r8d,0x8
  40a2c1:	mov    rdx,rsi
  40a2c4:	mov    rcx,rbx
  40a2c7:	call   0x40a818
  40a2cc:	test   eax,eax
  40a2ce:	jne    0x40a2b2
  40a2d0:	mov    rdi,rbx
  40a2d3:	mov    rax,rdi
  40a2d6:	add    rsp,0x20
  40a2da:	pop    rbx
  40a2db:	pop    rsi
  40a2dc:	pop    rdi
  40a2dd:	ret    
  40a2de:	xchg   ax,ax
  40a2e0:	push   rsi
  40a2e1:	push   rbx
  40a2e2:	sub    rsp,0x28
  40a2e6:	mov    rbx,QWORD PTR [rip+0x19753]        # 0x423a40
  40a2ed:	cmp    WORD PTR [rbx],0x5a4d
  40a2f2:	je     0x40a300
  40a2f4:	xor    eax,eax
  40a2f6:	add    rsp,0x28
  40a2fa:	pop    rbx
  40a2fb:	pop    rsi
  40a2fc:	ret    
  40a2fd:	nop    DWORD PTR [rax]
  40a300:	mov    rsi,rcx
  40a303:	mov    rcx,rbx
  40a306:	call   0x40a1b0
  40a30b:	test   eax,eax
  40a30d:	je     0x40a2f4
  40a30f:	sub    rsi,rbx
  40a312:	mov    rcx,rbx
  40a315:	mov    rdx,rsi
  40a318:	add    rsp,0x28
  40a31c:	pop    rbx
  40a31d:	pop    rsi
  40a31e:	jmp    0x40a1f0
  40a323:	nop    DWORD PTR [rax]
  40a326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a330:	push   rbx
  40a331:	sub    rsp,0x20
  40a335:	mov    rbx,QWORD PTR [rip+0x19704]        # 0x423a40
  40a33c:	xor    eax,eax
  40a33e:	cmp    WORD PTR [rbx],0x5a4d
  40a343:	je     0x40a350
  40a345:	add    rsp,0x20
  40a349:	pop    rbx
  40a34a:	ret    
  40a34b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a350:	mov    rcx,rbx
  40a353:	call   0x40a1b0
  40a358:	test   eax,eax
  40a35a:	je     0x40a345
  40a35c:	movsxd rax,DWORD PTR [rbx+0x3c]
  40a360:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  40a365:	add    rsp,0x20
  40a369:	pop    rbx
  40a36a:	ret    
  40a36b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a370:	push   rdi
  40a371:	push   rsi
  40a372:	push   rbx
  40a373:	sub    rsp,0x20
  40a377:	mov    rsi,QWORD PTR [rip+0x196c2]        # 0x423a40
  40a37e:	xor    edi,edi
  40a380:	mov    rbx,rcx
  40a383:	cmp    WORD PTR [rsi],0x5a4d
  40a388:	je     0x40a395
  40a38a:	mov    rax,rdi
  40a38d:	add    rsp,0x20
  40a391:	pop    rbx
  40a392:	pop    rsi
  40a393:	pop    rdi
  40a394:	ret    
  40a395:	mov    rcx,rsi
  40a398:	call   0x40a1b0
  40a39d:	test   eax,eax
  40a39f:	je     0x40a38a
  40a3a1:	movsxd rax,DWORD PTR [rsi+0x3c]
  40a3a5:	add    rsi,rax
  40a3a8:	movzx  eax,WORD PTR [rsi+0x14]
  40a3ac:	lea    rdx,[rsi+rax*1+0x18]
  40a3b1:	movzx  eax,WORD PTR [rsi+0x6]
  40a3b5:	test   eax,eax
  40a3b7:	je     0x40a38a
  40a3b9:	sub    eax,0x1
  40a3bc:	lea    rax,[rax+rax*4]
  40a3c0:	lea    rax,[rdx+rax*8+0x28]
  40a3c5:	test   BYTE PTR [rdx+0x27],0x20
  40a3c9:	je     0x40a3d4
  40a3cb:	test   rbx,rbx
  40a3ce:	je     0x40a3f0
  40a3d0:	sub    rbx,0x1
  40a3d4:	add    rdx,0x28
  40a3d8:	cmp    rdx,rax
  40a3db:	jne    0x40a3c5
  40a3dd:	xor    edi,edi
  40a3df:	mov    rax,rdi
  40a3e2:	add    rsp,0x20
  40a3e6:	pop    rbx
  40a3e7:	pop    rsi
  40a3e8:	pop    rdi
  40a3e9:	ret    
  40a3ea:	nop    WORD PTR [rax+rax*1+0x0]
  40a3f0:	mov    rdi,rdx
  40a3f3:	mov    rax,rdi
  40a3f6:	add    rsp,0x20
  40a3fa:	pop    rbx
  40a3fb:	pop    rsi
  40a3fc:	pop    rdi
  40a3fd:	ret    
  40a3fe:	xchg   ax,ax
  40a400:	push   rsi
  40a401:	push   rbx
  40a402:	sub    rsp,0x28
  40a406:	mov    rsi,QWORD PTR [rip+0x19633]        # 0x423a40
  40a40d:	xor    ebx,ebx
  40a40f:	cmp    WORD PTR [rsi],0x5a4d
  40a414:	je     0x40a420
  40a416:	mov    rax,rbx
  40a419:	add    rsp,0x28
  40a41d:	pop    rbx
  40a41e:	pop    rsi
  40a41f:	ret    
  40a420:	mov    rcx,rsi
  40a423:	call   0x40a1b0
  40a428:	test   eax,eax
  40a42a:	cmovne rbx,rsi
  40a42e:	mov    rax,rbx
  40a431:	add    rsp,0x28
  40a435:	pop    rbx
  40a436:	pop    rsi
  40a437:	ret    
  40a438:	nop    DWORD PTR [rax+rax*1+0x0]
  40a440:	push   rsi
  40a441:	push   rbx
  40a442:	sub    rsp,0x28
  40a446:	mov    rbx,QWORD PTR [rip+0x195f3]        # 0x423a40
  40a44d:	xor    eax,eax
  40a44f:	cmp    WORD PTR [rbx],0x5a4d
  40a454:	je     0x40a460
  40a456:	add    rsp,0x28
  40a45a:	pop    rbx
  40a45b:	pop    rsi
  40a45c:	ret    
  40a45d:	nop    DWORD PTR [rax]
  40a460:	mov    rsi,rcx
  40a463:	mov    rcx,rbx
  40a466:	call   0x40a1b0
  40a46b:	test   eax,eax
  40a46d:	je     0x40a456
  40a46f:	sub    rsi,rbx
  40a472:	mov    rcx,rbx
  40a475:	mov    rdx,rsi
  40a478:	call   0x40a1f0
  40a47d:	test   rax,rax
  40a480:	je     0x40a491
  40a482:	mov    eax,DWORD PTR [rax+0x24]
  40a485:	not    eax
  40a487:	shr    eax,0x1f
  40a48a:	add    rsp,0x28
  40a48e:	pop    rbx
  40a48f:	pop    rsi
  40a490:	ret    
  40a491:	xor    eax,eax
  40a493:	jmp    0x40a456
  40a495:	nop
  40a496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4a0:	push   rbp
  40a4a1:	push   rdi
  40a4a2:	push   rsi
  40a4a3:	push   rbx
  40a4a4:	sub    rsp,0x28
  40a4a8:	mov    rdi,QWORD PTR [rip+0x19591]        # 0x423a40
  40a4af:	xor    ebp,ebp
  40a4b1:	mov    esi,ecx
  40a4b3:	cmp    WORD PTR [rdi],0x5a4d
  40a4b8:	je     0x40a4d0
  40a4ba:	mov    rax,rbp
  40a4bd:	add    rsp,0x28
  40a4c1:	pop    rbx
  40a4c2:	pop    rsi
  40a4c3:	pop    rdi
  40a4c4:	pop    rbp
  40a4c5:	ret    
  40a4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4d0:	mov    rcx,rdi
  40a4d3:	call   0x40a1b0
  40a4d8:	test   eax,eax
  40a4da:	je     0x40a4ba
  40a4dc:	movsxd rax,DWORD PTR [rdi+0x3c]
  40a4e0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  40a4e7:	test   edx,edx
  40a4e9:	je     0x40a4ba
  40a4eb:	mov    ebx,edx
  40a4ed:	mov    rcx,rdi
  40a4f0:	mov    rdx,rbx
  40a4f3:	call   0x40a1f0
  40a4f8:	test   rax,rax
  40a4fb:	je     0x40a4ba
  40a4fd:	add    rbx,rdi
  40a500:	mov    rdx,rbx
  40a503:	jne    0x40a517
  40a505:	jmp    0x40a4ba
  40a507:	nop    WORD PTR [rax+rax*1+0x0]
  40a510:	sub    esi,0x1
  40a513:	add    rdx,0x14
  40a517:	mov    ecx,DWORD PTR [rdx+0x4]
  40a51a:	test   ecx,ecx
  40a51c:	jne    0x40a525
  40a51e:	mov    eax,DWORD PTR [rdx+0xc]
  40a521:	test   eax,eax
  40a523:	je     0x40a540
  40a525:	test   esi,esi
  40a527:	jg     0x40a510
  40a529:	mov    ebp,DWORD PTR [rdx+0xc]
  40a52c:	add    rbp,rdi
  40a52f:	mov    rax,rbp
  40a532:	add    rsp,0x28
  40a536:	pop    rbx
  40a537:	pop    rsi
  40a538:	pop    rdi
  40a539:	pop    rbp
  40a53a:	ret    
  40a53b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a540:	xor    ebp,ebp
  40a542:	mov    rax,rbp
  40a545:	add    rsp,0x28
  40a549:	pop    rbx
  40a54a:	pop    rsi
  40a54b:	pop    rdi
  40a54c:	pop    rbp
  40a54d:	ret    
  40a54e:	nop
  40a54f:	nop
  40a550:	push   rcx
  40a551:	push   rax
  40a552:	cmp    rax,0x1000
  40a558:	lea    rcx,[rsp+0x18]
  40a55d:	jb     0x40a578
  40a55f:	sub    rcx,0x1000
  40a566:	or     QWORD PTR [rcx],0x0
  40a56a:	sub    rax,0x1000
  40a570:	cmp    rax,0x1000
  40a576:	ja     0x40a55f
  40a578:	sub    rcx,rax
  40a57b:	or     QWORD PTR [rcx],0x0
  40a57f:	pop    rax
  40a580:	pop    rcx
  40a581:	ret    
  40a582:	nop
  40a583:	nop
  40a584:	nop
  40a585:	nop
  40a586:	nop
  40a587:	nop
  40a588:	nop
  40a589:	nop
  40a58a:	nop
  40a58b:	nop
  40a58c:	nop
  40a58d:	nop
  40a58e:	nop
  40a58f:	nop
  40a590:	push   r12
  40a592:	push   rbp
  40a593:	push   rdi
  40a594:	push   rsi
  40a595:	push   rbx
  40a596:	sub    rsp,0x60
  40a59a:	test   rcx,rcx
  40a59d:	mov    rsi,rcx
  40a5a0:	mov    rbx,rdx
  40a5a3:	je     0x40a5f2
  40a5a5:	movzx  ebp,BYTE PTR [rcx]
  40a5a8:	test   bpl,bpl
  40a5ab:	je     0x40a5f2
  40a5ad:	call   0x40a820
  40a5b2:	cmp    eax,0x1
  40a5b5:	mov    rdi,rax
  40a5b8:	jle    0x40a5f2
  40a5ba:	lea    eax,[rax-0x2]
  40a5bd:	cmp    eax,0x1
  40a5c0:	jbe    0x40a750
  40a5c6:	cmp    bpl,0x2f
  40a5ca:	je     0x40a674
  40a5d0:	cmp    bpl,0x5c
  40a5d4:	je     0x40a674
  40a5da:	movsxd rbp,edi
  40a5dd:	movzx  eax,BYTE PTR [rsi+rbp*1-0x1]
  40a5e2:	cmp    al,0x5c
  40a5e4:	je     0x40a700
  40a5ea:	cmp    al,0x2f
  40a5ec:	je     0x40a700
  40a5f2:	lea    rdx,[rsp+0x20]
  40a5f7:	mov    rcx,rsi
  40a5fa:	call   0x40a7f8
  40a5ff:	mov    ebp,eax
  40a601:	cmp    ebp,0xffffffff
  40a604:	je     0x40a780
  40a60a:	mov    eax,DWORD PTR [rsp+0x20]
  40a60e:	mov    DWORD PTR [rbx],eax
  40a610:	movzx  eax,WORD PTR [rsp+0x24]
  40a615:	mov    WORD PTR [rbx+0x4],ax
  40a619:	movzx  eax,WORD PTR [rsp+0x26]
  40a61e:	mov    WORD PTR [rbx+0x6],ax
  40a622:	movzx  eax,WORD PTR [rsp+0x28]
  40a627:	mov    WORD PTR [rbx+0x8],ax
  40a62b:	movzx  eax,WORD PTR [rsp+0x2a]
  40a630:	mov    WORD PTR [rbx+0xa],ax
  40a634:	movzx  eax,WORD PTR [rsp+0x2c]
  40a639:	mov    WORD PTR [rbx+0xc],ax
  40a63d:	mov    eax,DWORD PTR [rsp+0x30]
  40a641:	mov    DWORD PTR [rbx+0x10],eax
  40a644:	mov    rax,QWORD PTR [rsp+0x38]
  40a649:	mov    DWORD PTR [rbx+0x14],eax
  40a64c:	mov    rax,QWORD PTR [rsp+0x40]
  40a651:	mov    QWORD PTR [rbx+0x18],rax
  40a655:	mov    rax,QWORD PTR [rsp+0x48]
  40a65a:	mov    QWORD PTR [rbx+0x20],rax
  40a65e:	mov    rax,QWORD PTR [rsp+0x50]
  40a663:	mov    QWORD PTR [rbx+0x28],rax
  40a667:	mov    eax,ebp
  40a669:	add    rsp,0x60
  40a66d:	pop    rbx
  40a66e:	pop    rsi
  40a66f:	pop    rdi
  40a670:	pop    rbp
  40a671:	pop    r12
  40a673:	ret    
  40a674:	movzx  eax,BYTE PTR [rsi+0x1]
  40a678:	cmp    al,0x2f
  40a67a:	je     0x40a684
  40a67c:	cmp    al,0x5c
  40a67e:	jne    0x40a5da
  40a684:	movzx  ecx,BYTE PTR [rsi+0x2]
  40a688:	lea    rdx,[rsi+0x2]
  40a68c:	cmp    cl,0x5c
  40a68f:	jne    0x40a6b0
  40a691:	jmp    0x40a760
  40a696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a6a0:	add    rdx,0x1
  40a6a4:	movzx  ecx,BYTE PTR [rdx]
  40a6a7:	cmp    cl,0x5c
  40a6aa:	je     0x40a760
  40a6b0:	test   cl,cl
  40a6b2:	je     0x40a760
  40a6b8:	cmp    cl,0x2f
  40a6bb:	jne    0x40a6a0
  40a6bd:	add    rdx,0x1
  40a6c1:	movzx  eax,BYTE PTR [rdx]
  40a6c4:	test   al,al
  40a6c6:	je     0x40a5f2
  40a6cc:	cmp    al,0x5c
  40a6ce:	je     0x40a6f1
  40a6d0:	cmp    al,0x2f
  40a6d2:	je     0x40a6f1
  40a6d4:	add    rdx,0x1
  40a6d8:	movzx  ecx,BYTE PTR [rdx]
  40a6db:	cmp    cl,0x5c
  40a6de:	je     0x40a770
  40a6e4:	test   cl,cl
  40a6e6:	je     0x40a770
  40a6ec:	cmp    cl,0x2f
  40a6ef:	jne    0x40a6d4
  40a6f1:	cmp    BYTE PTR [rdx+0x1],0x0
  40a6f5:	jne    0x40a5da
  40a6fb:	jmp    0x40a5f2
  40a700:	mov    rcx,rbp
  40a703:	call   0x40a880
  40a708:	lea    r8d,[rdi-0x1]
  40a70c:	mov    rdx,rsi
  40a70f:	mov    rcx,rax
  40a712:	mov    r12,rax
  40a715:	movsxd r8,r8d
  40a718:	call   0x40a870
  40a71d:	lea    rdx,[rsp+0x20]
  40a722:	mov    rcx,r12
  40a725:	mov    BYTE PTR [r12+rbp*1-0x1],0x0
  40a72b:	call   0x40a7f8
  40a730:	cmp    rsi,r12
  40a733:	mov    ebp,eax
  40a735:	je     0x40a601
  40a73b:	mov    rcx,r12
  40a73e:	call   0x40a8f0
  40a743:	jmp    0x40a601
  40a748:	nop    DWORD PTR [rax+rax*1+0x0]
  40a750:	cmp    BYTE PTR [rsi+0x1],0x3a
  40a754:	jne    0x40a5c6
  40a75a:	jmp    0x40a5f2
  40a75f:	nop
  40a760:	test   cl,cl
  40a762:	je     0x40a6c1
  40a768:	jmp    0x40a6bd
  40a76d:	nop    DWORD PTR [rax]
  40a770:	test   cl,cl
  40a772:	je     0x40a5f2
  40a778:	jmp    0x40a6f1
  40a77d:	nop    DWORD PTR [rax]
  40a780:	lea    rdi,[rbx+0x8]
  40a784:	mov    QWORD PTR [rbx],0x0
  40a78b:	mov    QWORD PTR [rbx+0x28],0x0
  40a793:	xor    eax,eax
  40a795:	and    rdi,0xfffffffffffffff8
  40a799:	sub    rbx,rdi
  40a79c:	lea    ecx,[rbx+0x30]
  40a79f:	shr    ecx,0x3
  40a7a2:	rep stos QWORD PTR es:[rdi],rax
  40a7a5:	jmp    0x40a667
  40a7aa:	nop
  40a7ab:	nop
  40a7ac:	nop
  40a7ad:	nop
  40a7ae:	nop
  40a7af:	nop
  40a7b0:	jmp    QWORD PTR [rip+0x1de66]        # 0x42861c
  40a7b6:	nop
  40a7b7:	nop
  40a7b8:	jmp    QWORD PTR [rip+0x1de56]        # 0x428614
  40a7be:	nop
  40a7bf:	nop
  40a7c0:	jmp    QWORD PTR [rip+0x1de46]        # 0x42860c
  40a7c6:	nop
  40a7c7:	nop
  40a7c8:	jmp    QWORD PTR [rip+0x1de36]        # 0x428604
  40a7ce:	nop
  40a7cf:	nop
  40a7d0:	jmp    QWORD PTR [rip+0x1de26]        # 0x4285fc
  40a7d6:	nop
  40a7d7:	nop
  40a7d8:	jmp    QWORD PTR [rip+0x1de16]        # 0x4285f4
  40a7de:	nop
  40a7df:	nop
  40a7e0:	jmp    QWORD PTR [rip+0x1de06]        # 0x4285ec
  40a7e6:	nop
  40a7e7:	nop
  40a7e8:	jmp    QWORD PTR [rip+0x1ddf6]        # 0x4285e4
  40a7ee:	nop
  40a7ef:	nop
  40a7f0:	jmp    QWORD PTR [rip+0x1dde6]        # 0x4285dc
  40a7f6:	nop
  40a7f7:	nop
  40a7f8:	jmp    QWORD PTR [rip+0x1ddd6]        # 0x4285d4
  40a7fe:	nop
  40a7ff:	nop
  40a800:	jmp    QWORD PTR [rip+0x1ddc6]        # 0x4285cc
  40a806:	nop
  40a807:	nop
  40a808:	jmp    QWORD PTR [rip+0x1ddb6]        # 0x4285c4
  40a80e:	nop
  40a80f:	nop
  40a810:	jmp    QWORD PTR [rip+0x1dda6]        # 0x4285bc
  40a816:	nop
  40a817:	nop
  40a818:	jmp    QWORD PTR [rip+0x1dd96]        # 0x4285b4
  40a81e:	nop
  40a81f:	nop
  40a820:	jmp    QWORD PTR [rip+0x1dd86]        # 0x4285ac
  40a826:	nop
  40a827:	nop
  40a828:	jmp    QWORD PTR [rip+0x1dd76]        # 0x4285a4
  40a82e:	nop
  40a82f:	nop
  40a830:	jmp    QWORD PTR [rip+0x1dd66]        # 0x42859c
  40a836:	nop
  40a837:	nop
  40a838:	jmp    QWORD PTR [rip+0x1dd56]        # 0x428594
  40a83e:	nop
  40a83f:	nop
  40a840:	jmp    QWORD PTR [rip+0x1dd46]        # 0x42858c
  40a846:	nop
  40a847:	nop
  40a848:	jmp    QWORD PTR [rip+0x1dd36]        # 0x428584
  40a84e:	nop
  40a84f:	nop
  40a850:	jmp    QWORD PTR [rip+0x1dd26]        # 0x42857c
  40a856:	nop
  40a857:	nop
  40a858:	jmp    QWORD PTR [rip+0x1dd16]        # 0x428574
  40a85e:	nop
  40a85f:	nop
  40a860:	jmp    QWORD PTR [rip+0x1dd06]        # 0x42856c
  40a866:	nop
  40a867:	nop
  40a868:	jmp    QWORD PTR [rip+0x1dcf6]        # 0x428564
  40a86e:	nop
  40a86f:	nop
  40a870:	jmp    QWORD PTR [rip+0x1dce6]        # 0x42855c
  40a876:	nop
  40a877:	nop
  40a878:	jmp    QWORD PTR [rip+0x1dcd6]        # 0x428554
  40a87e:	nop
  40a87f:	nop
  40a880:	jmp    QWORD PTR [rip+0x1dcc6]        # 0x42854c
  40a886:	nop
  40a887:	nop
  40a888:	jmp    QWORD PTR [rip+0x1dcb6]        # 0x428544
  40a88e:	nop
  40a88f:	nop
  40a890:	jmp    QWORD PTR [rip+0x1dca6]        # 0x42853c
  40a896:	nop
  40a897:	nop
  40a898:	jmp    QWORD PTR [rip+0x1dc96]        # 0x428534
  40a89e:	nop
  40a89f:	nop
  40a8a0:	jmp    QWORD PTR [rip+0x1dc86]        # 0x42852c
  40a8a6:	nop
  40a8a7:	nop
  40a8a8:	jmp    QWORD PTR [rip+0x1dc76]        # 0x428524
  40a8ae:	nop
  40a8af:	nop
  40a8b0:	jmp    QWORD PTR [rip+0x1dc66]        # 0x42851c
  40a8b6:	nop
  40a8b7:	nop
  40a8b8:	jmp    QWORD PTR [rip+0x1dc56]        # 0x428514
  40a8be:	nop
  40a8bf:	nop
  40a8c0:	jmp    QWORD PTR [rip+0x1dc46]        # 0x42850c
  40a8c6:	nop
  40a8c7:	nop
  40a8c8:	jmp    QWORD PTR [rip+0x1dc36]        # 0x428504
  40a8ce:	nop
  40a8cf:	nop
  40a8d0:	jmp    QWORD PTR [rip+0x1dc26]        # 0x4284fc
  40a8d6:	nop
  40a8d7:	nop
  40a8d8:	jmp    QWORD PTR [rip+0x1dc16]        # 0x4284f4
  40a8de:	nop
  40a8df:	nop
  40a8e0:	jmp    QWORD PTR [rip+0x1dc06]        # 0x4284ec
  40a8e6:	nop
  40a8e7:	nop
  40a8e8:	jmp    QWORD PTR [rip+0x1dbf6]        # 0x4284e4
  40a8ee:	nop
  40a8ef:	nop
  40a8f0:	jmp    QWORD PTR [rip+0x1dbe6]        # 0x4284dc
  40a8f6:	nop
  40a8f7:	nop
  40a8f8:	jmp    QWORD PTR [rip+0x1dbd6]        # 0x4284d4
  40a8fe:	nop
  40a8ff:	nop
  40a900:	jmp    QWORD PTR [rip+0x1dbc6]        # 0x4284cc
  40a906:	nop
  40a907:	nop
  40a908:	jmp    QWORD PTR [rip+0x1dbb6]        # 0x4284c4
  40a90e:	nop
  40a90f:	nop
  40a910:	jmp    QWORD PTR [rip+0x1dba6]        # 0x4284bc
  40a916:	nop
  40a917:	nop
  40a918:	jmp    QWORD PTR [rip+0x1db96]        # 0x4284b4
  40a91e:	nop
  40a91f:	nop
  40a920:	jmp    QWORD PTR [rip+0x1db86]        # 0x4284ac
  40a926:	nop
  40a927:	nop
  40a928:	jmp    QWORD PTR [rip+0x1db76]        # 0x4284a4
  40a92e:	nop
  40a92f:	nop
  40a930:	jmp    QWORD PTR [rip+0x1db66]        # 0x42849c
  40a936:	nop
  40a937:	nop
  40a938:	jmp    QWORD PTR [rip+0x1db56]        # 0x428494
  40a93e:	nop
  40a93f:	nop
  40a940:	jmp    QWORD PTR [rip+0x1db46]        # 0x42848c
  40a946:	nop
  40a947:	nop
  40a948:	jmp    QWORD PTR [rip+0x1db36]        # 0x428484
  40a94e:	nop
  40a94f:	nop
  40a950:	jmp    QWORD PTR [rip+0x1db26]        # 0x42847c
  40a956:	nop
  40a957:	nop
  40a958:	jmp    QWORD PTR [rip+0x1db16]        # 0x428474
  40a95e:	nop
  40a95f:	nop
  40a960:	jmp    QWORD PTR [rip+0x1db06]        # 0x42846c
  40a966:	nop
  40a967:	nop
  40a968:	jmp    QWORD PTR [rip+0x1daf6]        # 0x428464
  40a96e:	nop
  40a96f:	nop
  40a970:	jmp    QWORD PTR [rip+0x1dade]        # 0x428454
  40a976:	nop
  40a977:	nop
  40a978:	jmp    QWORD PTR [rip+0x1dace]        # 0x42844c
  40a97e:	nop
  40a97f:	nop
  40a980:	jmp    QWORD PTR [rip+0x1dabe]        # 0x428444
  40a986:	nop
  40a987:	nop
  40a988:	jmp    QWORD PTR [rip+0x1daa6]        # 0x428434
  40a98e:	nop
  40a98f:	nop
  40a990:	jmp    QWORD PTR [rip+0x1da96]        # 0x42842c
  40a996:	nop
  40a997:	nop
  40a998:	jmp    QWORD PTR [rip+0x1da86]        # 0x428424
  40a99e:	nop
  40a99f:	nop
  40a9a0:	jmp    QWORD PTR [rip+0x1da76]        # 0x42841c
  40a9a6:	nop
  40a9a7:	nop
  40a9a8:	jmp    QWORD PTR [rip+0x1da66]        # 0x428414
  40a9ae:	nop
  40a9af:	nop
  40a9b0:	jmp    QWORD PTR [rip+0x1da4e]        # 0x428404
  40a9b6:	nop
  40a9b7:	nop
  40a9b8:	jmp    QWORD PTR [rip+0x1da3e]        # 0x4283fc
  40a9be:	nop
  40a9bf:	nop
  40a9c0:	jmp    QWORD PTR [rip+0x1da2e]        # 0x4283f4
  40a9c6:	nop
  40a9c7:	nop
  40a9c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a9d0:	mov    rax,QWORD PTR [rip+0x1d2d9]        # 0x427cb0
  40a9d7:	ret    
  40a9d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a9e0:	mov    rax,rcx
  40a9e3:	xchg   QWORD PTR [rip+0x1d2c6],rax        # 0x427cb0
  40a9ea:	ret    
  40a9eb:	nop
  40a9ec:	nop
  40a9ed:	nop
  40a9ee:	nop
  40a9ef:	nop
  40a9f0:	jmp    QWORD PTR [rip+0x1d9ee]        # 0x4283e4
  40a9f6:	nop
  40a9f7:	nop
  40a9f8:	jmp    QWORD PTR [rip+0x1d9de]        # 0x4283dc
  40a9fe:	nop
  40a9ff:	nop
  40aa00:	jmp    QWORD PTR [rip+0x1d9ce]        # 0x4283d4
  40aa06:	nop
  40aa07:	nop
  40aa08:	jmp    QWORD PTR [rip+0x1d9be]        # 0x4283cc
  40aa0e:	nop
  40aa0f:	nop
  40aa10:	jmp    QWORD PTR [rip+0x1d9ae]        # 0x4283c4
  40aa16:	nop
  40aa17:	nop
  40aa18:	jmp    QWORD PTR [rip+0x1d99e]        # 0x4283bc
  40aa1e:	nop
  40aa1f:	nop
  40aa20:	jmp    QWORD PTR [rip+0x1d98e]        # 0x4283b4
  40aa26:	nop
  40aa27:	nop
  40aa28:	jmp    QWORD PTR [rip+0x1d97e]        # 0x4283ac
  40aa2e:	nop
  40aa2f:	nop
  40aa30:	jmp    QWORD PTR [rip+0x1d96e]        # 0x4283a4
  40aa36:	nop
  40aa37:	nop
  40aa38:	jmp    QWORD PTR [rip+0x1d95e]        # 0x42839c
  40aa3e:	nop
  40aa3f:	nop
  40aa40:	jmp    QWORD PTR [rip+0x1d94e]        # 0x428394
  40aa46:	nop
  40aa47:	nop
  40aa48:	jmp    QWORD PTR [rip+0x1d93e]        # 0x42838c
  40aa4e:	nop
  40aa4f:	nop
  40aa50:	jmp    QWORD PTR [rip+0x1d92e]        # 0x428384
  40aa56:	nop
  40aa57:	nop
  40aa58:	jmp    QWORD PTR [rip+0x1d91e]        # 0x42837c
  40aa5e:	nop
  40aa5f:	nop
  40aa60:	jmp    QWORD PTR [rip+0x1d90e]        # 0x428374
  40aa66:	nop
  40aa67:	nop
  40aa68:	jmp    QWORD PTR [rip+0x1d8fe]        # 0x42836c
  40aa6e:	nop
  40aa6f:	nop
  40aa70:	jmp    QWORD PTR [rip+0x1d8ee]        # 0x428364
  40aa76:	nop
  40aa77:	nop
  40aa78:	jmp    QWORD PTR [rip+0x1d8de]        # 0x42835c
  40aa7e:	nop
  40aa7f:	nop
  40aa80:	jmp    QWORD PTR [rip+0x1d8ce]        # 0x428354
  40aa86:	nop
  40aa87:	nop
  40aa88:	jmp    QWORD PTR [rip+0x1d8be]        # 0x42834c
  40aa8e:	nop
  40aa8f:	nop
  40aa90:	jmp    QWORD PTR [rip+0x1d8ae]        # 0x428344
  40aa96:	nop
  40aa97:	nop
  40aa98:	jmp    QWORD PTR [rip+0x1d89e]        # 0x42833c
  40aa9e:	nop
  40aa9f:	nop
  40aaa0:	jmp    QWORD PTR [rip+0x1d88e]        # 0x428334
  40aaa6:	nop
  40aaa7:	nop
  40aaa8:	nop    DWORD PTR [rax+rax*1+0x0]
  40aab0:	push   rbx
  40aab1:	sub    rsp,0x420
  40aab8:	lea    rbx,[rsp+0x20]
  40aabd:	call   0x401920
  40aac2:	lea    r8,[rip+0x17e47]        # 0x422910
  40aac9:	lea    rdx,[rip+0x9873]        # 0x414343
  40aad0:	mov    rcx,rbx
  40aad3:	call   0x40a848
  40aad8:	mov    rcx,rbx
  40aadb:	call   0x40a808
  40aae0:	mov    ecx,eax
  40aae2:	call   0x40a930
  40aae7:	nop
  40aae8:	nop
  40aae9:	nop
  40aaea:	nop
  40aaeb:	nop
  40aaec:	nop
  40aaed:	nop
  40aaee:	nop
  40aaef:	nop
  40aaf0:	push   rdi
  40aaf1:	push   rsi
  40aaf2:	push   rbx
  40aaf3:	sub    rsp,0x20
  40aaf7:	mov    ebx,ecx
  40aaf9:	mov    rsi,rdx
  40aafc:	call   0x4091a0
  40ab01:	mov    rdx,rsi
  40ab04:	mov    ecx,ebx
  40ab06:	call   0x401aa0
  40ab0b:	mov    rsi,QWORD PTR [rip+0x1d902]        # 0x428414
  40ab12:	call   rsi
  40ab14:	lea    rcx,[rax+0x60]
  40ab18:	call   0x40a7c0
  40ab1d:	mov    ecx,eax
  40ab1f:	call   0x40a7d0
  40ab24:	mov    DWORD PTR [rip+0x1c50e],eax        # 0x427038
  40ab2a:	call   rsi
  40ab2c:	mov    rcx,rax
  40ab2f:	call   0x4025f0
  40ab34:	mov    rbx,rax
  40ab37:	call   rsi
  40ab39:	lea    rdx,[rip+0x954b]        # 0x41408b
  40ab40:	lea    rcx,[rip+0x978d]        # 0x4142d4
  40ab47:	mov    r8,rax
  40ab4a:	call   0x408e70
  40ab4f:	test   rbx,rbx
  40ab52:	je     0x40ac2d
  40ab58:	mov    rdi,QWORD PTR [rip+0x19011]        # 0x423b70
  40ab5f:	nop
  40ab60:	movzx  edx,BYTE PTR [rbx]
  40ab63:	test   BYTE PTR [rdi+rdx*2],0x40
  40ab67:	mov    rax,rdx
  40ab6a:	jne    0x40abe0
  40ab6c:	cmp    dl,0x2e
  40ab6f:	je     0x40ab7e
  40ab71:	jmp    0x40abf0
  40ab73:	add    rbx,0x2
  40ab77:	movzx  eax,BYTE PTR [rbx]
  40ab7a:	cmp    al,0x2e
  40ab7c:	jne    0x40abf0
  40ab7e:	cmp    BYTE PTR [rbx+0x1],0x2f
  40ab82:	je     0x40ab73
  40ab84:	mov    edx,0xa
  40ab89:	mov    rcx,rbx
  40ab8c:	mov    QWORD PTR [rip+0x1d1b5],rbx        # 0x427d48
  40ab93:	call   0x40a840
  40ab98:	test   rax,rax
  40ab9b:	mov    rsi,rbx
  40ab9e:	je     0x40ac10
  40aba0:	cmp    rax,rsi
  40aba3:	lea    rbx,[rax+0x1]
  40aba7:	jbe    0x40ac23
  40aba9:	movzx  edx,BYTE PTR [rax-0x1]
  40abad:	test   BYTE PTR [rdi+rdx*2],0x40
  40abb1:	je     0x40ac23
  40abb3:	sub    rax,0x1
  40abb7:	cmp    rax,rsi
  40abba:	je     0x40ab60
  40abbc:	movzx  edx,BYTE PTR [rax-0x1]
  40abc0:	test   BYTE PTR [rdi+rdx*2],0x40
  40abc4:	jne    0x40abb3
  40abc6:	cmp    BYTE PTR [rsi],0x23
  40abc9:	je     0x40ab60
  40abcb:	mov    BYTE PTR [rax],0x0
  40abce:	call   0x401d30
  40abd3:	movzx  edx,BYTE PTR [rbx]
  40abd6:	test   BYTE PTR [rdi+rdx*2],0x40
  40abda:	mov    rax,rdx
  40abdd:	je     0x40ab6c
  40abdf:	nop
  40abe0:	add    rbx,0x1
  40abe4:	jmp    0x40ab60
  40abe9:	nop    DWORD PTR [rax+0x0]
  40abf0:	test   al,al
  40abf2:	jne    0x40ab84
  40abf4:	mov    rcx,QWORD PTR [rip+0x1d0e5]        # 0x427ce0
  40abfb:	call   0x40a7f0
  40ac00:	xor    ecx,ecx
  40ac02:	call   0x40a930
  40ac07:	nop    WORD PTR [rax+rax*1+0x0]
  40ac10:	mov    rcx,rbx
  40ac13:	call   0x40a820
  40ac18:	add    rax,rbx
  40ac1b:	cmp    rax,rsi
  40ac1e:	mov    rbx,rax
  40ac21:	ja     0x40aba9
  40ac23:	cmp    rax,rsi
  40ac26:	jne    0x40abc6
  40ac28:	jmp    0x40ab60
  40ac2d:	call   rsi
  40ac2f:	lea    rcx,[rip+0x96aa]        # 0x4142e0
  40ac36:	lea    r9,[rax+0x60]
  40ac3a:	mov    r8d,0x20
  40ac40:	mov    edx,0x1
  40ac45:	call   0x40a8e0
  40ac4a:	mov    ecx,0x1
  40ac4f:	call   0x40a930
  40ac54:	nop
  40ac55:	nop
  40ac56:	nop
  40ac57:	nop
  40ac58:	nop
  40ac59:	nop
  40ac5a:	nop
  40ac5b:	nop
  40ac5c:	nop
  40ac5d:	nop
  40ac5e:	nop
  40ac5f:	nop
  40ac60:	push   rsi
  40ac61:	push   rbx
  40ac62:	sub    rsp,0x28
  40ac66:	mov    rbx,QWORD PTR [rip+0x1d7a7]        # 0x428414
  40ac6d:	mov    rsi,rcx
  40ac70:	call   rbx
  40ac72:	lea    rdx,[rip+0x17e87]        # 0x422b00
  40ac79:	lea    rcx,[rax+0x60]
  40ac7d:	mov    r8,rsi
  40ac80:	call   0x40a908
  40ac85:	call   rbx
  40ac87:	lea    r8,[rip+0x17e32]        # 0x422ac0
  40ac8e:	lea    rcx,[rax+0x60]
  40ac92:	lea    rdx,[rip+0x17e62]        # 0x422afb
  40ac99:	call   0x40a908
  40ac9e:	call   rbx
  40aca0:	lea    r8,[rip+0x17e28]        # 0x422acf
  40aca7:	lea    rcx,[rax+0x60]
  40acab:	lea    rdx,[rip+0x17e49]        # 0x422afb
  40acb2:	call   0x40a908
  40acb7:	call   rbx
  40acb9:	lea    r8,[rip+0x17e17]        # 0x422ad7
  40acc0:	lea    rcx,[rax+0x60]
  40acc4:	lea    rdx,[rip+0x17e30]        # 0x422afb
  40accb:	call   0x40a908
  40acd0:	call   rbx
  40acd2:	lea    r8,[rip+0x17e05]        # 0x422ade
  40acd9:	lea    rcx,[rax+0x60]
  40acdd:	lea    rdx,[rip+0x17e17]        # 0x422afb
  40ace4:	call   0x40a908
  40ace9:	call   rbx
  40aceb:	lea    r8,[rip+0x17df2]        # 0x422ae4
  40acf2:	lea    rcx,[rax+0x60]
  40acf6:	lea    rdx,[rip+0x17dfe]        # 0x422afb
  40acfd:	call   0x40a908
  40ad02:	call   rbx
  40ad04:	lea    r8,[rip+0x17de1]        # 0x422aec
  40ad0b:	lea    rcx,[rax+0x60]
  40ad0f:	lea    rdx,[rip+0x17de5]        # 0x422afb
  40ad16:	call   0x40a908
  40ad1b:	mov    ecx,0x1
  40ad20:	call   0x40a930
  40ad25:	nop
  40ad26:	nop
  40ad27:	nop
  40ad28:	nop
  40ad29:	nop
  40ad2a:	nop
  40ad2b:	nop
  40ad2c:	nop
  40ad2d:	nop
  40ad2e:	nop
  40ad2f:	nop
  40ad30:	(bad)  
  40ad31:	(bad)  
  40ad32:	(bad)  
  40ad33:	(bad)  
  40ad34:	(bad)  
  40ad35:	(bad)  
  40ad36:	(bad)  
  40ad37:	inc    DWORD PTR [rax]
  40ad39:	add    BYTE PTR [rax],al
  40ad3b:	add    BYTE PTR [rax],al
  40ad3d:	add    BYTE PTR [rax],al
  40ad3f:	add    bh,bh
  40ad41:	(bad)  
  40ad42:	(bad)  
  40ad43:	(bad)  
  40ad44:	(bad)  
  40ad45:	(bad)  
  40ad46:	(bad)  
  40ad47:	inc    DWORD PTR [rax]
  40ad49:	add    BYTE PTR [rax],al
  40ad4b:	add    BYTE PTR [rax],al
  40ad4d:	add    BYTE PTR [rax],al
	...
