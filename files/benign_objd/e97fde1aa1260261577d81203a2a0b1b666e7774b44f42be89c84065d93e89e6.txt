
e97fde1aa1260261577d81203a2a0b1b666e7774b44f42be89c84065d93e89e6.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x22ba5]        # 0x423bc0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x22ba6]        # 0x423bd0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x22ba9]        # 0x423be0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x22b6c]        # 0x423bb0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x229ef]        # 0x423a40
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x22b41]        # 0x423ba0
  40105f:	mov    DWORD PTR [rip+0x25fa3],edx        # 0x427008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x40a998
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x4095f0
  401081:	mov    rdx,QWORD PTR [rip+0x22a48]        # 0x423ad0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x22a2e]        # 0x423ac0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x22a94]        # 0x423b30
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x229cb]        # 0x423a70
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x4091d0
  4010af:	mov    rax,QWORD PTR [rip+0x2293a]        # 0x4239f0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x40a998
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x83a9]        # 0x4094d0
  401127:	call   0x4094c0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x229f5]        # 0x423b60
  40116b:	lea    r8,[rip+0x25ea6]        # 0x427018
  401172:	lea    rdx,[rip+0x25ea7]        # 0x427020
  401179:	lea    rcx,[rip+0x25ea8]        # 0x427028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x25e78],eax        # 0x427000
  401188:	lea    rax,[rip+0x25e71]        # 0x427000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x22985]        # 0x423b20
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x40a9b0
  4011a3:	mov    DWORD PTR [rip+0x25e67],eax        # 0x427010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x229da]        # 0x423ba0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x228ab]        # 0x423aa0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x271ba]        # 0x4283bc
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x22887]        # 0x423ab0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x25dba],0x1        # 0x427004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x227cc]        # 0x423a30
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x4097e0
  40127d:	lea    rcx,[rip+0x8afc]        # 0x409d80
  401284:	call   QWORD PTR [rip+0x2712a]        # 0x4283b4
  40128a:	mov    rdx,QWORD PTR [rip+0x227ff]        # 0x423a90
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x409c90
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x40a9e0
  4012a5:	call   0x4095d0
  4012aa:	mov    rax,QWORD PTR [rip+0x2278f]        # 0x423a40
  4012b1:	mov    QWORD PTR [rip+0x26a10],rax        # 0x427cc8
  4012b8:	mov    rax,QWORD PTR [rip+0x227a1]        # 0x423a60
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x269a9],rax        # 0x427cc0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x9cca],eax        # 0x40b000
  401336:	mov    r12d,DWORD PTR [rip+0x25ceb]        # 0x427028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x40a880
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x25cc2]        # 0x427020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x40a820
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x40a880
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x40a870
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x25c6a],rbp        # 0x427020
  4013b6:	call   0x4091a0
  4013bb:	mov    rax,QWORD PTR [rip+0x2268e]        # 0x423a50
  4013c2:	mov    rdx,QWORD PTR [rip+0x25c4f]        # 0x427018
  4013c9:	mov    ecx,DWORD PTR [rip+0x25c59]        # 0x427028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x25c3c]        # 0x427018
  4013dc:	mov    rdx,QWORD PTR [rip+0x25c3d]        # 0x427020
  4013e3:	call   0x40aaf0
  4013e8:	mov    ecx,DWORD PTR [rip+0x25c1a]        # 0x427008
  4013ee:	mov    DWORD PTR [rip+0x25c18],eax        # 0x42700c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x25c02]        # 0x427004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x40a978
  40140b:	mov    eax,DWORD PTR [rip+0x25bfb]        # 0x42700c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x22679]        # 0x423ab0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x40a980
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x2268d]        # 0x423af0
  401463:	mov    rcx,QWORD PTR [rip+0x22676]        # 0x423ae0
  40146a:	call   0x40a968
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x26ecb]        # 0x428364
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x22669]        # 0x423b10
  4014a7:	mov    rcx,QWORD PTR [rip+0x22652]        # 0x423b00
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x40a968
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x40a930
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x226c5]        # 0x423ba0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x4091e0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x22695]        # 0x423ba0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x4091e0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rsi
  401531:	push   rbx
  401532:	mov    eax,0x1058
  401537:	call   0x40a550
  40153c:	sub    rsp,rax
  40153f:	lea    rbx,[rsp+0x50]
  401544:	mov    r9,rdx
  401547:	lea    rdx,[rip+0x12ab2]        # 0x414000
  40154e:	mov    rsi,r8
  401551:	mov    r8,rcx
  401554:	mov    rcx,rbx
  401557:	call   0x40a848
  40155c:	mov    rdx,rbx
  40155f:	mov    r9d,DWORD PTR [rdx]
  401562:	add    rdx,0x4
  401566:	lea    eax,[r9-0x1010101]
  40156d:	not    r9d
  401570:	and    eax,r9d
  401573:	and    eax,0x80808080
  401578:	je     0x40155f
  40157a:	mov    ecx,eax
  40157c:	mov    r10,QWORD PTR [rip+0x225ed]        # 0x423b70
  401583:	lea    r9,[rsi+0x1]
  401587:	shr    ecx,0x10
  40158a:	test   eax,0x8080
  40158f:	cmove  eax,ecx
  401592:	lea    rcx,[rdx+0x2]
  401596:	cmove  rdx,rcx
  40159a:	movzx  ecx,BYTE PTR [rsi]
  40159d:	add    al,al
  40159f:	sbb    rdx,0x3
  4015a3:	test   BYTE PTR [r10+rcx*2],0xac
  4015a8:	mov    rax,rcx
  4015ab:	jne    0x4015da
  4015ad:	nop    DWORD PTR [rax]
  4015b0:	xor    eax,eax
  4015b2:	add    rsp,0x1058
  4015b9:	pop    rbx
  4015ba:	pop    rsi
  4015bb:	ret    
  4015bc:	nop    DWORD PTR [rax+0x0]
  4015c0:	add    r9,0x1
  4015c4:	movzx  r8d,BYTE PTR [r9-0x1]
  4015c9:	add    rdx,0x1
  4015cd:	mov    BYTE PTR [rdx-0x1],al
  4015d0:	test   BYTE PTR [r10+r8*2],0xac
  4015d5:	mov    rax,r8
  4015d8:	je     0x4015b0
  4015da:	cmp    al,0x22
  4015dc:	jne    0x4015c0
  4015de:	mov    BYTE PTR [rdx],0x0
  4015e1:	lea    rdx,[rsp+0x20]
  4015e6:	mov    rcx,rbx
  4015e9:	call   0x40a590
  4015ee:	mov    edx,eax
  4015f0:	xor    eax,eax
  4015f2:	test   edx,edx
  4015f4:	jne    0x4015b2
  4015f6:	movzx  eax,WORD PTR [rsp+0x26]
  4015fb:	and    ax,0xf000
  4015ff:	cmp    ax,0x8000
  401603:	sete   al
  401606:	movzx  eax,al
  401609:	add    rsp,0x1058
  401610:	pop    rbx
  401611:	pop    rsi
  401612:	ret    
  401613:	nop    DWORD PTR [rax]
  401616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401620:	push   rbp
  401621:	push   rdi
  401622:	mov    eax,0x1068
  401627:	push   rsi
  401628:	push   rbx
  401629:	call   0x40a550
  40162e:	sub    rsp,rax
  401631:	mov    rax,QWORD PTR [rip+0x225b8]        # 0x423bf0
  401638:	movsxd r9,DWORD PTR [rip+0x259fd]        # 0x42703c
  40163f:	lea    rdx,[rip+0x129d2]        # 0x414018
  401646:	add    r9,QWORD PTR [rip+0x266fb]        # 0x427d48
  40164d:	lea    rbx,[rsp+0x60]
  401652:	mov    r8,QWORD PTR [rax]
  401655:	mov    rcx,rbx
  401658:	call   0x40a848
  40165d:	mov    r8d,0x1a4
  401663:	mov    edx,0x301
  401668:	mov    rcx,rbx
  40166b:	call   0x40a7e0
  401670:	test   eax,eax
  401672:	mov    esi,eax
  401674:	js     0x401702
  40167a:	mov    rax,QWORD PTR [rip+0x225ef]        # 0x423c70
  401681:	mov    eax,DWORD PTR [rax]
  401683:	test   eax,eax
  401685:	jne    0x4016e0
  401687:	lea    rdx,[rip+0x129b7]        # 0x414045
  40168e:	mov    ecx,esi
  401690:	call   0x408e60
  401695:	mov    rbx,rax
  401698:	mov    rax,QWORD PTR [rip+0x22581]        # 0x423c20
  40169f:	mov    r9,QWORD PTR [rip+0x266a2]        # 0x427d48
  4016a6:	cmp    QWORD PTR [rax],0x0
  4016aa:	je     0x401750
  4016b0:	mov    rax,QWORD PTR [rip+0x22559]        # 0x423c10
  4016b7:	mov    r8,QWORD PTR [rax]
  4016ba:	lea    rdx,[rip+0x2117f]        # 0x422840
  4016c1:	mov    rcx,rbx
  4016c4:	call   0x40a908
  4016c9:	mov    rax,rbx
  4016cc:	add    rsp,0x1068
  4016d3:	pop    rbx
  4016d4:	pop    rsi
  4016d5:	pop    rdi
  4016d6:	pop    rbp
  4016d7:	ret    
  4016d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4016e0:	mov    rbx,QWORD PTR [rip+0x26661]        # 0x427d48
  4016e7:	call   QWORD PTR [rip+0x26d27]        # 0x428414
  4016ed:	lea    rdx,[rip+0x12945]        # 0x414039
  4016f4:	lea    rcx,[rax+0x60]
  4016f8:	mov    r8,rbx
  4016fb:	call   0x40a908
  401700:	jmp    0x401687
  401702:	mov    rdi,QWORD PTR [rip+0x26d4b]        # 0x428454
  401709:	call   rdi
  40170b:	cmp    DWORD PTR [rax],0x2
  40170e:	je     0x401760
  401710:	call   rdi
  401712:	mov    ecx,DWORD PTR [rax]
  401714:	call   0x408fc0
  401719:	mov    rbp,rax
  40171c:	call   rdi
  40171e:	mov    esi,DWORD PTR [rax]
  401720:	call   QWORD PTR [rip+0x26cee]        # 0x428414
  401726:	lea    rdx,[rip+0x128f1]        # 0x41401e
  40172d:	lea    rcx,[rax+0x60]
  401731:	mov    QWORD PTR [rsp+0x20],rbx
  401736:	mov    r9,rbp
  401739:	mov    r8d,esi
  40173c:	call   0x40a908
  401741:	mov    ecx,0x1
  401746:	call   0x40a930
  40174b:	nop    DWORD PTR [rax+rax*1+0x0]
  401750:	lea    r8,[rip+0x128b0]        # 0x414007
  401757:	jmp    0x4016ba
  40175c:	nop    DWORD PTR [rax+0x0]
  401760:	lea    rcx,[rbx+0x1]
  401764:	mov    edx,0x2f
  401769:	lea    rbp,[rsp+0x30]
  40176e:	call   0x40a840
  401773:	test   rax,rax
  401776:	mov    rsi,rax
  401779:	jne    0x401799
  40177b:	jmp    0x4017b5
  40177d:	nop    DWORD PTR [rax]
  401780:	lea    rcx,[rsi+0x1]
  401784:	mov    BYTE PTR [rsi],0x2f
  401787:	mov    edx,0x2f
  40178c:	call   0x40a840
  401791:	test   rax,rax
  401794:	mov    rsi,rax
  401797:	je     0x4017b5
  401799:	mov    BYTE PTR [rsi],0x0
  40179c:	mov    rdx,rbp
  40179f:	mov    rcx,rbx
  4017a2:	call   0x40a590
  4017a7:	test   eax,eax
  4017a9:	jns    0x401780
  4017ab:	mov    rcx,rbx
  4017ae:	call   0x40a7d8
  4017b3:	jmp    0x401780
  4017b5:	mov    r8d,0x1a4
  4017bb:	mov    edx,0x301
  4017c0:	mov    rcx,rbx
  4017c3:	call   0x40a7e0
  4017c8:	test   eax,eax
  4017ca:	mov    esi,eax
  4017cc:	jns    0x40167a
  4017d2:	jmp    0x401710
  4017d7:	nop    WORD PTR [rax+rax*1+0x0]
  4017e0:	push   rdi
  4017e1:	push   rsi
  4017e2:	push   rbx
  4017e3:	sub    rsp,0x60
  4017e7:	lea    rdx,[rsp+0x30]
  4017ec:	mov    rbx,rcx
  4017ef:	call   0x40a590
  4017f4:	test   eax,eax
  4017f6:	je     0x401813
  4017f8:	mov    rax,QWORD PTR [rip+0x22471]        # 0x423c70
  4017ff:	mov    edx,DWORD PTR [rax]
  401801:	test   edx,edx
  401803:	jne    0x401890
  401809:	xor    eax,eax
  40180b:	add    rsp,0x60
  40180f:	pop    rbx
  401810:	pop    rsi
  401811:	pop    rdi
  401812:	ret    
  401813:	mov    eax,DWORD PTR [rsp+0x44]
  401817:	test   eax,eax
  401819:	je     0x401809
  40181b:	add    eax,0x1
  40181e:	xor    edx,edx
  401820:	mov    rcx,rbx
  401823:	cdqe   
  401825:	mov    QWORD PTR [rip+0x264c4],rax        # 0x427cf0
  40182c:	call   0x40a7e0
  401831:	mov    rdx,QWORD PTR [rip+0x257f8]        # 0x427030
  401838:	add    rdx,QWORD PTR [rip+0x264b1]        # 0x427cf0
  40183f:	mov    DWORD PTR [rip+0x264f3],eax        # 0x427d38
  401845:	sub    rdx,0x1
  401849:	test   eax,eax
  40184b:	mov    QWORD PTR [rip+0x257de],rdx        # 0x427030
  401852:	js     0x4018d0
  401854:	lea    rdx,[rip+0x12830]        # 0x41408b
  40185b:	mov    ecx,eax
  40185d:	call   0x408e60
  401862:	mov    rsi,rax
  401865:	mov    rcx,rax
  401868:	mov    DWORD PTR [rip+0x26476],0x0        # 0x427ce8
  401872:	call   0x4025f0
  401877:	mov    rcx,rsi
  40187a:	mov    rbx,rax
  40187d:	call   0x40a928
  401882:	mov    rax,rbx
  401885:	add    rsp,0x60
  401889:	pop    rbx
  40188a:	pop    rsi
  40188b:	pop    rdi
  40188c:	ret    
  40188d:	nop    DWORD PTR [rax]
  401890:	mov    rsi,QWORD PTR [rip+0x26bbd]        # 0x428454
  401897:	call   rsi
  401899:	mov    ecx,DWORD PTR [rax]
  40189b:	call   0x408fc0
  4018a0:	mov    rdi,rax
  4018a3:	call   rsi
  4018a5:	mov    esi,DWORD PTR [rax]
  4018a7:	call   QWORD PTR [rip+0x26b67]        # 0x428414
  4018ad:	lea    rdx,[rip+0x12793]        # 0x414047
  4018b4:	lea    rcx,[rax+0x60]
  4018b8:	mov    QWORD PTR [rsp+0x20],rbx
  4018bd:	mov    r9,rdi
  4018c0:	mov    r8d,esi
  4018c3:	call   0x40a908
  4018c8:	jmp    0x401809
  4018cd:	nop    DWORD PTR [rax]
  4018d0:	mov    rax,QWORD PTR [rip+0x22399]        # 0x423c70
  4018d7:	mov    eax,DWORD PTR [rax]
  4018d9:	test   eax,eax
  4018db:	je     0x401809
  4018e1:	mov    rsi,QWORD PTR [rip+0x26b6c]        # 0x428454
  4018e8:	call   rsi
  4018ea:	mov    ecx,DWORD PTR [rax]
  4018ec:	call   0x408fc0
  4018f1:	mov    rdi,rax
  4018f4:	call   rsi
  4018f6:	mov    esi,DWORD PTR [rax]
  4018f8:	call   QWORD PTR [rip+0x26b16]        # 0x428414
  4018fe:	lea    rdx,[rip+0x12763]        # 0x414068
  401905:	lea    rcx,[rax+0x60]
  401909:	mov    QWORD PTR [rsp+0x20],rbx
  40190e:	mov    r9,rdi
  401911:	mov    r8d,esi
  401914:	call   0x40a908
  401919:	xor    eax,eax
  40191b:	jmp    0x40180b
  401920:	push   r15
  401922:	push   r14
  401924:	push   r13
  401926:	push   r12
  401928:	push   rbp
  401929:	push   rdi
  40192a:	push   rsi
  40192b:	push   rbx
  40192c:	sub    rsp,0x38
  401930:	mov    edx,0x38
  401935:	mov    ecx,0x10d
  40193a:	call   0x408f20
  40193f:	lea    rdx,[rip+0x263ba]        # 0x427d00
  401946:	mov    rbp,rax
  401949:	mov    ecx,0x7
  40194e:	xor    eax,eax
  401950:	lea    r9,[rip+0x12736]        # 0x41408d
  401957:	mov    r8d,0x1
  40195d:	mov    rdi,rdx
  401960:	rep stos QWORD PTR es:[rdi],rax
  401963:	lea    rax,[rip+0x12732]        # 0x41409c
  40196a:	lea    rcx,[rip+0x20eaf]        # 0x422820
  401971:	mov    QWORD PTR [rsp+0x20],rax
  401976:	call   0x4026f0
  40197b:	mov    r12,QWORD PTR [rip+0x2229e]        # 0x423c20
  401982:	mov    rax,QWORD PTR [r12]
  401986:	test   rax,rax
  401989:	je     0x40199e
  40198b:	movzx  eax,BYTE PTR [rax]
  40198e:	cmp    al,0x2a
  401990:	je     0x401a8e
  401996:	test   al,al
  401998:	je     0x401a8e
  40199e:	lea    rdi,[rip+0x969b]        # 0x40b040
  4019a5:	mov    r14,QWORD PTR [rip+0x221e4]        # 0x423b90
  4019ac:	lea    r13,[rip+0xc8dd]        # 0x40e290
  4019b3:	jmp    0x4019cf
  4019b5:	mov    eax,DWORD PTR [rdi+0x1c]
  4019b8:	test   al,0x8
  4019ba:	je     0x4019d6
  4019bc:	or     ah,0x80
  4019bf:	mov    DWORD PTR [rdi+0x1c],eax
  4019c2:	add    rdi,0x38
  4019c6:	cmp    rdi,r13
  4019c9:	je     0x401a7d
  4019cf:	mov    eax,DWORD PTR [r14]
  4019d2:	test   eax,eax
  4019d4:	jne    0x4019b5
  4019d6:	cmp    QWORD PTR [r12],0x0
  4019db:	mov    rbx,QWORD PTR [rdi+0x20]
  4019df:	mov    r15d,DWORD PTR [rdi+0x18]
  4019e3:	je     0x401a14
  4019e5:	mov    rsi,QWORD PTR [rdi+0x10]
  4019e9:	test   rsi,rsi
  4019ec:	jne    0x401a00
  4019ee:	jmp    0x401a14
  4019f0:	mov    rdx,QWORD PTR [r12]
  4019f4:	xor    r8d,r8d
  4019f7:	call   0x408920
  4019fc:	test   eax,eax
  4019fe:	je     0x401a70
  401a00:	add    rsi,0x8
  401a04:	mov    rcx,QWORD PTR [rsi-0x8]
  401a08:	test   rcx,rcx
  401a0b:	jne    0x4019f0
  401a0d:	mov    eax,DWORD PTR [rdi+0x1c]
  401a10:	test   al,0x1
  401a12:	je     0x4019bc
  401a14:	test   r15d,r15d
  401a17:	jle    0x4019c2
  401a19:	lea    eax,[r15-0x1]
  401a1d:	lea    rax,[rax+rax*2+0x3]
  401a22:	lea    rsi,[rbx+rax*8]
  401a26:	jmp    0x401a39
  401a28:	nop    DWORD PTR [rax+rax*1+0x0]
  401a30:	add    rbx,0x18
  401a34:	cmp    rbx,rsi
  401a37:	je     0x4019c2
  401a39:	mov    eax,DWORD PTR [rbx]
  401a3b:	lea    ecx,[rax-0x1]
  401a3e:	cmp    ecx,0x1
  401a41:	ja     0x401a30
  401a43:	mov    QWORD PTR [rbx+0x10],rbp
  401a47:	mov    rax,QWORD PTR [rdi]
  401a4a:	lea    r15,[rbp+0x38]
  401a4e:	mov    rcx,QWORD PTR [rbx+0x8]
  401a52:	lea    r9,[rip+0x12650]        # 0x4140a9
  401a59:	mov    rdx,rbp
  401a5c:	xor    r8d,r8d
  401a5f:	mov    rbp,r15
  401a62:	mov    QWORD PTR [rsp+0x20],rax
  401a67:	call   0x4026f0
  401a6c:	jmp    0x401a30
  401a6e:	xchg   ax,ax
  401a70:	mov    eax,DWORD PTR [rdi+0x1c]
  401a73:	test   al,0x1
  401a75:	jne    0x4019bc
  401a7b:	jmp    0x401a14
  401a7d:	add    rsp,0x38
  401a81:	pop    rbx
  401a82:	pop    rsi
  401a83:	pop    rdi
  401a84:	pop    rbp
  401a85:	pop    r12
  401a87:	pop    r13
  401a89:	pop    r14
  401a8b:	pop    r15
  401a8d:	ret    
  401a8e:	mov    QWORD PTR [r12],0x0
  401a96:	jmp    0x40199e
  401a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  401aa0:	push   rbp
  401aa1:	push   rdi
  401aa2:	push   rsi
  401aa3:	push   rbx
  401aa4:	sub    rsp,0x38
  401aa8:	mov    esi,ecx
  401aaa:	mov    rcx,QWORD PTR [rdx]
  401aad:	mov    rbx,rdx
  401ab0:	call   0x408e80
  401ab5:	cmp    esi,0x1
  401ab8:	je     0x401b00
  401aba:	cmp    esi,0x2
  401abd:	jne    0x401b42
  401ac3:	mov    rsi,QWORD PTR [rbx+0x8]
  401ac7:	lea    rdi,[rip+0x125e7]        # 0x4140b5
  401ace:	mov    ecx,0x3
  401ad3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401ad5:	je     0x401d23
  401adb:	mov    rsi,QWORD PTR [rip+0x26932]        # 0x428414
  401ae2:	call   rsi
  401ae4:	mov    rcx,QWORD PTR [rbx+0x8]
  401ae8:	lea    rdx,[rip+0x1259c]        # 0x41408b
  401aef:	mov    r8,rax
  401af2:	call   0x408e70
  401af7:	test   rax,rax
  401afa:	je     0x401ce1
  401b00:	call   0x402a70
  401b05:	mov    rax,QWORD PTR [rip+0x22154]        # 0x423c60
  401b0c:	mov    rdx,QWORD PTR [rip+0x2205d]        # 0x423b70
  401b13:	mov    rcx,QWORD PTR [rax]
  401b16:	movzx  r8d,BYTE PTR [rcx]
  401b1a:	test   BYTE PTR [rdx+r8*2],0x4
  401b1f:	mov    rax,r8
  401b22:	jne    0x401b70
  401b24:	sub    eax,0x41
  401b27:	cmp    al,0x33
  401b29:	ja     0x401cc2
  401b2f:	lea    rdx,[rip+0x1260a]        # 0x414140
  401b36:	movzx  eax,al
  401b39:	movsxd rax,DWORD PTR [rdx+rax*4]
  401b3d:	add    rdx,rax
  401b40:	jmp    rdx
  401b42:	call   QWORD PTR [rip+0x268cc]        # 0x428414
  401b48:	lea    rcx,[rip+0x12591]        # 0x4140e0
  401b4f:	lea    r9,[rax+0x60]
  401b53:	mov    r8d,0x30
  401b59:	mov    edx,0x1
  401b5e:	call   0x40a8e0
  401b63:	mov    ecx,0x1
  401b68:	call   0x40a930
  401b6d:	nop    DWORD PTR [rax]
  401b70:	call   0x40a940
  401b75:	mov    rdx,QWORD PTR [rip+0x220f4]        # 0x423c70
  401b7c:	cmp    eax,0x4
  401b7f:	mov    DWORD PTR [rdx],eax
  401b81:	jbe    0x401baa
  401b83:	mov    DWORD PTR [rdx],0x5
  401b89:	call   QWORD PTR [rip+0x26885]        # 0x428414
  401b8f:	lea    rcx,[rip+0x12582]        # 0x414118
  401b96:	lea    r9,[rax+0x60]
  401b9a:	mov    r8d,0x1e
  401ba0:	mov    edx,0x1
  401ba5:	call   0x40a8e0
  401baa:	mov    r8,QWORD PTR [rip+0x2204f]        # 0x423c00
  401bb1:	mov    rcx,QWORD PTR [r8]
  401bb4:	cmp    BYTE PTR [rcx],0x2e
  401bb7:	jne    0x401bec
  401bb9:	movzx  edx,BYTE PTR [rcx+0x1]
  401bbd:	cmp    dl,0x2f
  401bc0:	jne    0x401cd4
  401bc6:	lea    rax,[rcx+0x2]
  401bca:	jmp    0x401be1
  401bcc:	nop    DWORD PTR [rax+0x0]
  401bd0:	lea    rax,[rax+0x2]
  401bd4:	movzx  edx,BYTE PTR [rax-0x1]
  401bd8:	cmp    dl,0x2f
  401bdb:	jne    0x401cd4
  401be1:	mov    QWORD PTR [r8],rax
  401be4:	cmp    BYTE PTR [rax],0x2e
  401be7:	mov    rcx,rax
  401bea:	je     0x401bd0
  401bec:	call   0x40a820
  401bf1:	mov    DWORD PTR [rip+0x25445],eax        # 0x42703c
  401bf7:	call   0x401920
  401bfc:	lea    rdx,[rip+0x12534]        # 0x414137
  401c03:	xor    ecx,ecx
  401c05:	call   0x40a7e8
  401c0a:	mov    edx,0x1
  401c0f:	mov    ecx,0xf
  401c14:	mov    QWORD PTR [rip+0x260c5],rax        # 0x427ce0
  401c1b:	call   0x40a850
  401c20:	mov    edx,0x1
  401c25:	mov    ecx,0xf
  401c2a:	call   0x40a850
  401c2f:	mov    edx,0x1
  401c34:	mov    ecx,0xf
  401c39:	call   0x40a850
  401c3e:	mov    edx,0x1
  401c43:	mov    ecx,0xf
  401c48:	call   0x40a850
  401c4d:	mov    edx,0x1
  401c52:	mov    ecx,0xf
  401c57:	add    rsp,0x38
  401c5b:	pop    rbx
  401c5c:	pop    rsi
  401c5d:	pop    rdi
  401c5e:	pop    rbp
  401c5f:	jmp    0x40a850
  401c64:	mov    rax,QWORD PTR [rip+0x22005]        # 0x423c70
  401c6b:	mov    DWORD PTR [rax],0x4
  401c71:	jmp    0x401baa
  401c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c80:	mov    rax,QWORD PTR [rip+0x21fe9]        # 0x423c70
  401c87:	mov    DWORD PTR [rax],0x0
  401c8d:	jmp    0x401baa
  401c92:	mov    rax,QWORD PTR [rip+0x21fd7]        # 0x423c70
  401c99:	mov    DWORD PTR [rax],0x1
  401c9f:	jmp    0x401baa
  401ca4:	mov    rdx,QWORD PTR [rip+0x21fc5]        # 0x423c70
  401cab:	jmp    0x401b83
  401cb0:	mov    rax,QWORD PTR [rip+0x21fb9]        # 0x423c70
  401cb7:	mov    DWORD PTR [rax],0x2
  401cbd:	jmp    0x401baa
  401cc2:	mov    rax,QWORD PTR [rip+0x21fa7]        # 0x423c70
  401cc9:	mov    DWORD PTR [rax],0x3
  401ccf:	jmp    0x401baa
  401cd4:	test   dl,dl
  401cd6:	jne    0x401bec
  401cdc:	jmp    0x401bf7
  401ce1:	mov    rbp,QWORD PTR [rbx+0x8]
  401ce5:	mov    rbx,QWORD PTR [rip+0x26768]        # 0x428454
  401cec:	call   rbx
  401cee:	mov    ecx,DWORD PTR [rax]
  401cf0:	call   0x408fc0
  401cf5:	mov    rdi,rax
  401cf8:	call   rbx
  401cfa:	mov    ebx,DWORD PTR [rax]
  401cfc:	call   rsi
  401cfe:	lea    rdx,[rip+0x123b3]        # 0x4140b8
  401d05:	lea    rcx,[rax+0x60]
  401d09:	mov    QWORD PTR [rsp+0x20],rbp
  401d0e:	mov    r9,rdi
  401d11:	mov    r8d,ebx
  401d14:	call   0x40a908
  401d19:	mov    ecx,0x1
  401d1e:	call   0x40a930
  401d23:	call   0x40aab0
  401d28:	nop
  401d29:	nop    DWORD PTR [rax+0x0]
  401d30:	push   r15
  401d32:	push   r14
  401d34:	push   r13
  401d36:	push   r12
  401d38:	push   rbp
  401d39:	push   rdi
  401d3a:	push   rsi
  401d3b:	push   rbx
  401d3c:	sub    rsp,0xa8
  401d43:	mov    rax,QWORD PTR [rip+0x25ffe]        # 0x427d48
  401d4a:	mov    edx,0x4
  401d4f:	mov    QWORD PTR [rsp+0x58],rax
  401d54:	mov    rcx,rax
  401d57:	call   QWORD PTR [rip+0x266d7]        # 0x428434
  401d5d:	test   eax,eax
  401d5f:	jne    0x402365
  401d65:	mov    rcx,QWORD PTR [rip+0x25fdc]        # 0x427d48
  401d6c:	call   0x4017e0
  401d71:	test   rax,rax
  401d74:	mov    QWORD PTR [rip+0x25fc5],rax        # 0x427d40
  401d7b:	je     0x40213a
  401d81:	mov    rax,QWORD PTR [rip+0x21ee8]        # 0x423c70
  401d88:	cmp    DWORD PTR [rax],0x2
  401d8b:	ja     0x4022bd
  401d91:	lea    rax,[rip+0x92a8]        # 0x40b040
  401d98:	mov    QWORD PTR [rsp+0x48],rax
  401d9d:	lea    rax,[rip+0x25fa4]        # 0x427d48
  401da4:	mov    QWORD PTR [rsp+0x50],rax
  401da9:	lea    rax,[rsp+0x70]
  401dae:	mov    QWORD PTR [rsp+0x68],rax
  401db3:	mov    rax,QWORD PTR [rsp+0x50]
  401db8:	mov    rsi,QWORD PTR [rax]
  401dbb:	mov    rax,QWORD PTR [rsp+0x48]
  401dc0:	test   DWORD PTR [rax+0x1c],0x8002
  401dc7:	mov    rbx,QWORD PTR [rax+0x8]
  401dcb:	jne    0x402048
  401dd1:	test   rbx,rbx
  401dd4:	je     0x401e19
  401dd6:	cmp    BYTE PTR [rsi],0x2e
  401dd9:	je     0x401de9
  401ddb:	jmp    0x401e07
  401ddd:	nop    DWORD PTR [rax]
  401de0:	add    rsi,0x2
  401de4:	cmp    BYTE PTR [rsi],0x2e
  401de7:	jne    0x401e07
  401de9:	cmp    BYTE PTR [rsi+0x1],0x2f
  401ded:	je     0x401de0
  401def:	jmp    0x401e07
  401df1:	mov    rcx,rbx
  401df4:	call   0x40a820
  401df9:	lea    rbx,[rbx+rax*1+0x1]
  401dfe:	cmp    BYTE PTR [rbx],0x0
  401e01:	je     0x402048
  401e07:	xor    r8d,r8d
  401e0a:	mov    rdx,rsi
  401e0d:	mov    rcx,rbx
  401e10:	call   0x408920
  401e15:	test   eax,eax
  401e17:	jne    0x401df1
  401e19:	mov    rax,QWORD PTR [rsp+0x48]
  401e1e:	mov    rbx,QWORD PTR [rax+0x20]
  401e22:	mov    eax,DWORD PTR [rax+0x18]
  401e25:	test   eax,eax
  401e27:	jle    0x401e7d
  401e29:	sub    eax,0x1
  401e2c:	lea    rax,[rax+rax*2+0x3]
  401e31:	lea    rsi,[rbx+rax*8]
  401e35:	mov    eax,DWORD PTR [rbx]
  401e37:	cmp    eax,0x1
  401e3a:	je     0x40214e
  401e40:	jb     0x402048
  401e46:	cmp    eax,0x2
  401e49:	je     0x402179
  401e4f:	cmp    eax,0x3
  401e52:	jne    0x401e74
  401e54:	mov    rax,QWORD PTR [rsp+0x50]
  401e59:	mov    rcx,QWORD PTR [rbx+0x8]
  401e5d:	mov    r8,QWORD PTR [rip+0x25edc]        # 0x427d40
  401e64:	mov    rdx,QWORD PTR [rax]
  401e67:	call   0x4029e0
  401e6c:	test   eax,eax
  401e6e:	jne    0x402048
  401e74:	add    rbx,0x18
  401e78:	cmp    rbx,rsi
  401e7b:	jne    0x401e35
  401e7d:	mov    rax,QWORD PTR [rip+0x21dec]        # 0x423c70
  401e84:	cmp    DWORD PTR [rax],0x1
  401e87:	jbe    0x401eb5
  401e89:	mov    rax,QWORD PTR [rsp+0x50]
  401e8e:	mov    rsi,QWORD PTR [rax]
  401e91:	mov    rax,QWORD PTR [rsp+0x48]
  401e96:	mov    rbx,QWORD PTR [rax]
  401e99:	call   QWORD PTR [rip+0x26575]        # 0x428414
  401e9f:	lea    rdx,[rip+0x123aa]        # 0x414250
  401ea6:	lea    rcx,[rax+0x60]
  401eaa:	mov    r9,rsi
  401ead:	mov    r8,rbx
  401eb0:	call   0x40a908
  401eb5:	mov    rax,QWORD PTR [rsp+0x48]
  401eba:	mov    eax,DWORD PTR [rax+0x1c]
  401ebd:	test   al,0x8
  401ebf:	jne    0x40233a
  401ec5:	mov    rdi,QWORD PTR [rip+0x25e14]        # 0x427ce0
  401ecc:	test   al,0x4
  401ece:	mov    QWORD PTR [rsp+0x60],rdi
  401ed3:	mov    rdi,QWORD PTR [rsp+0x50]
  401ed8:	mov    rsi,QWORD PTR [rdi]
  401edb:	jne    0x4021b5
  401ee1:	mov    rax,QWORD PTR [rsp+0x48]
  401ee6:	mov    rcx,QWORD PTR [rsp+0x60]
  401eeb:	mov    rdi,QWORD PTR [rax+0x28]
  401eef:	call   0x40a820
  401ef4:	mov    rcx,QWORD PTR [rsp+0x58]
  401ef9:	mov    rbx,rax
  401efc:	lea    rsi,[rdi+0x8]
  401f00:	call   0x40a820
  401f05:	mov    rcx,QWORD PTR [rdi]
  401f08:	lea    rbx,[rbx+rax*1+0x23]
  401f0d:	mov    rdi,rbx
  401f10:	test   rcx,rcx
  401f13:	je     0x4022b5
  401f19:	nop    DWORD PTR [rax+0x0]
  401f20:	add    rsi,0x8
  401f24:	call   0x40a820
  401f29:	mov    rcx,QWORD PTR [rsi-0x8]
  401f2d:	lea    rdi,[rdi+rax*1+0x18]
  401f32:	test   rcx,rcx
  401f35:	jne    0x401f20
  401f37:	mov    r12,rdi
  401f3a:	sub    r12,rbx
  401f3d:	mov    rcx,rdi
  401f40:	call   0x408ef0
  401f45:	mov    r15,rax
  401f48:	mov    rax,QWORD PTR [rsp+0x48]
  401f4d:	mov    rax,QWORD PTR [rax+0x28]
  401f51:	lea    rcx,[rax+0x8]
  401f55:	mov    rax,QWORD PTR [rax]
  401f58:	mov    QWORD PTR [rsp+0x40],rcx
  401f5d:	movzx  edx,BYTE PTR [rax]
  401f60:	lea    rcx,[rax+0x1]
  401f64:	mov    rax,r15
  401f67:	test   dl,dl
  401f69:	je     0x401f83
  401f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  401f70:	add    rax,0x1
  401f74:	add    rcx,0x1
  401f78:	mov    BYTE PTR [rax-0x1],dl
  401f7b:	movzx  edx,BYTE PTR [rcx-0x1]
  401f7f:	test   dl,dl
  401f81:	jne    0x401f70
  401f83:	add    QWORD PTR [rsp+0x40],0x8
  401f89:	mov    rdx,QWORD PTR [rsp+0x40]
  401f8e:	mov    r13,QWORD PTR [rdx-0x8]
  401f92:	test   r13,r13
  401f95:	je     0x402001
  401f97:	lea    rbp,[rax+0x1]
  401f9b:	mov    r8,r15
  401f9e:	mov    BYTE PTR [rax],0x20
  401fa1:	mov    rdx,r13
  401fa4:	sub    r8,rbp
  401fa7:	mov    rcx,rbp
  401faa:	add    r8,r12
  401fad:	call   0x402830
  401fb2:	test   rax,rax
  401fb5:	jne    0x4021a4
  401fbb:	mov    rbx,rdi
  401fbe:	xchg   ax,ax
  401fc0:	add    rbx,0x64
  401fc4:	mov    r14,rbp
  401fc7:	mov    rcx,r15
  401fca:	lea    rsi,[r12+rbx*1]
  401fce:	sub    r14,r15
  401fd1:	mov    rdx,rbx
  401fd4:	call   0x408f70
  401fd9:	sub    rsi,rdi
  401fdc:	lea    rbp,[rax+r14*1]
  401fe0:	mov    rdx,r13
  401fe3:	mov    r8,rsi
  401fe6:	mov    r15,rax
  401fe9:	sub    r8,r14
  401fec:	mov    rcx,rbp
  401fef:	call   0x402830
  401ff4:	test   rax,rax
  401ff7:	je     0x401fc0
  401ff9:	mov    r12,rsi
  401ffc:	mov    rdi,rbx
  401fff:	jmp    0x401f83
  402001:	mov    rdi,QWORD PTR [rsp+0x60]
  402006:	mov    r8,QWORD PTR [rsp+0x58]
  40200b:	lea    rdx,[rip+0x1230e]        # 0x414320
  402012:	mov    rcx,rax
  402015:	mov    QWORD PTR [rsp+0x30],rdi
  40201a:	mov    QWORD PTR [rsp+0x28],rdi
  40201f:	mov    r9,rdi
  402022:	mov    QWORD PTR [rsp+0x20],rdi
  402027:	call   0x40a848
  40202c:	mov    rcx,r15
  40202f:	call   0x40a808
  402034:	mov    rcx,r15
  402037:	call   0x40a8f0
  40203c:	mov    rax,QWORD PTR [rip+0x25c9d]        # 0x427ce0
  402043:	mov    QWORD PTR [rsp+0x58],rax
  402048:	add    QWORD PTR [rsp+0x48],0x38
  40204e:	lea    rax,[rip+0xc23b]        # 0x40e290
  402055:	mov    rdi,QWORD PTR [rsp+0x48]
  40205a:	cmp    rdi,rax
  40205d:	jne    0x401db3
  402063:	mov    rcx,QWORD PTR [rip+0x25c76]        # 0x427ce0
  40206a:	xor    edx,edx
  40206c:	call   0x40a7e0
  402071:	test   eax,eax
  402073:	mov    edi,eax
  402075:	js     0x4023b7
  40207b:	lea    rdx,[rip+0x12009]        # 0x41408b
  402082:	mov    ecx,eax
  402084:	xor    esi,esi
  402086:	call   0x408e60
  40208b:	mov    r12,QWORD PTR [rip+0x25cae]        # 0x427d40
  402092:	mov    rbp,rax
  402095:	mov    rcx,rbp
  402098:	call   0x40a8d8
  40209d:	cmp    eax,0xffffffff
  4020a0:	je     0x4020c5
  4020a2:	test   rsi,rsi
  4020a5:	movzx  ebx,al
  4020a8:	je     0x402402
  4020ae:	mov    rdx,rsi
  4020b1:	mov    ecx,ebx
  4020b3:	call   0x40a860
  4020b8:	mov    rcx,rbp
  4020bb:	call   0x40a8d8
  4020c0:	cmp    eax,0xffffffff
  4020c3:	jne    0x4020a2
  4020c5:	test   rsi,rsi
  4020c8:	je     0x40210b
  4020ca:	mov    rcx,rsi
  4020cd:	lea    r15,[rip+0x25c2c]        # 0x427d00
  4020d4:	call   0x40a928
  4020d9:	lea    rax,[rsp+0x70]
  4020de:	mov    rdx,QWORD PTR [rip+0x25c5b]        # 0x427d40
  4020e5:	mov    DWORD PTR [rsp+0x20],0x0
  4020ed:	mov    r8d,0x1
  4020f3:	mov    rcx,r15
  4020f6:	mov    r9,rax
  4020f9:	mov    QWORD PTR [rsp+0x40],rax
  4020fe:	call   0x408620
  402103:	test   eax,eax
  402105:	je     0x40248d
  40210b:	mov    rcx,rbp
  40210e:	call   0x40a928
  402113:	mov    ecx,edi
  402115:	call   0x40a7b0
  40211a:	mov    ecx,edi
  40211c:	call   0x40a7b0
  402121:	mov    rcx,QWORD PTR [rip+0x25bb8]        # 0x427ce0
  402128:	call   0x40a7f0
  40212d:	mov    rcx,QWORD PTR [rip+0x25c0c]        # 0x427d40
  402134:	call   0x40a8f0
  402139:	nop
  40213a:	add    rsp,0xa8
  402141:	pop    rbx
  402142:	pop    rsi
  402143:	pop    rdi
  402144:	pop    rbp
  402145:	pop    r12
  402147:	pop    r13
  402149:	pop    r14
  40214b:	pop    r15
  40214d:	ret    
  40214e:	mov    rcx,QWORD PTR [rbx+0x10]
  402152:	mov    rdx,QWORD PTR [rip+0x25be7]        # 0x427d40
  402159:	xor    r9d,r9d
  40215c:	xor    r8d,r8d
  40215f:	mov    DWORD PTR [rsp+0x20],0x0
  402167:	call   0x408620
  40216c:	test   eax,eax
  40216e:	jne    0x402048
  402174:	jmp    0x401e74
  402179:	mov    rcx,QWORD PTR [rbx+0x10]
  40217d:	mov    rdx,QWORD PTR [rip+0x25bbc]        # 0x427d40
  402184:	xor    r9d,r9d
  402187:	xor    r8d,r8d
  40218a:	mov    DWORD PTR [rsp+0x20],0x0
  402192:	call   0x408620
  402197:	test   eax,eax
  402199:	jne    0x401e74
  40219f:	jmp    0x402048
  4021a4:	mov    rsi,r12
  4021a7:	mov    rbx,rdi
  4021aa:	mov    r12,rsi
  4021ad:	mov    rdi,rbx
  4021b0:	jmp    0x401f83
  4021b5:	mov    rax,QWORD PTR [rip+0x21a84]        # 0x423c40
  4021bc:	mov    rcx,QWORD PTR [rax]
  4021bf:	call   0x40a820
  4021c4:	mov    rcx,rsi
  4021c7:	mov    rbp,rax
  4021ca:	call   0x40a820
  4021cf:	mov    rcx,QWORD PTR [rsp+0x58]
  4021d4:	mov    rdi,rax
  4021d7:	call   0x40a820
  4021dc:	mov    rcx,QWORD PTR [rsp+0x60]
  4021e1:	mov    rbx,rax
  4021e4:	call   0x40a820
  4021e9:	lea    rcx,[rbp+rdi*1+0x3d]
  4021ee:	add    rcx,rbx
  4021f1:	add    rcx,rax
  4021f4:	call   0x408ef0
  4021f9:	mov    r15,rax
  4021fc:	mov    rax,QWORD PTR [rip+0x21a3d]        # 0x423c40
  402203:	mov    rcx,r15
  402206:	mov    rbx,QWORD PTR [rax]
  402209:	mov    rdx,rbx
  40220c:	call   0x40a830
  402211:	mov    rcx,rbx
  402214:	call   0x40a820
  402219:	lea    rbx,[r15+rax*1]
  40221d:	movabs rax,0x697869662f2e2e2f
  402227:	mov    rdx,QWORD PTR [rsp+0x68]
  40222c:	mov    rcx,r15
  40222f:	mov    QWORD PTR [rbx],rax
  402232:	movabs rax,0x2f736564756c636e
  40223c:	mov    DWORD PTR [rbx+0x18],0x6578652e
  402243:	mov    QWORD PTR [rbx+0x8],rax
  402247:	movabs rax,0x786966796c707061
  402251:	mov    BYTE PTR [rbx+0x1c],0x0
  402255:	mov    QWORD PTR [rbx+0x10],rax
  402259:	call   0x40a590
  40225e:	cmp    eax,0xffffffff
  402261:	je     0x4022fa
  402267:	mov    rcx,rbx
  40226a:	lea    rdi,[rip+0x8dcf]        # 0x40b040
  402271:	call   0x40a820
  402276:	mov    r8,QWORD PTR [rsp+0x48]
  40227b:	lea    rcx,[rbx+rax*1]
  40227f:	mov    rax,QWORD PTR [rsp+0x60]
  402284:	lea    rdx,[rip+0x11fdb]        # 0x414266
  40228b:	mov    r9,rsi
  40228e:	sub    r8,rdi
  402291:	mov    QWORD PTR [rsp+0x28],rax
  402296:	mov    rax,QWORD PTR [rsp+0x58]
  40229b:	sar    r8,0x3
  40229f:	imul   r8d,r8d,0xb6db6db7
  4022a6:	mov    QWORD PTR [rsp+0x20],rax
  4022ab:	call   0x40a848
  4022b0:	jmp    0x40202c
  4022b5:	xor    r12d,r12d
  4022b8:	jmp    0x401f3d
  4022bd:	mov    eax,DWORD PTR [rip+0x24d75]        # 0x427038
  4022c3:	test   eax,eax
  4022c5:	je     0x401d91
  4022cb:	mov    rsi,QWORD PTR [rip+0x25a76]        # 0x427d48
  4022d2:	mov    rbx,QWORD PTR [rip+0x25a17]        # 0x427cf0
  4022d9:	call   QWORD PTR [rip+0x26135]        # 0x428414
  4022df:	lea    rdx,[rip+0x11f5b]        # 0x414241
  4022e6:	lea    rcx,[rax+0x60]
  4022ea:	mov    r9,rsi
  4022ed:	mov    r8d,ebx
  4022f0:	call   0x40a908
  4022f5:	jmp    0x401d91
  4022fa:	movabs rax,0x697869662f2e2e2f
  402304:	mov    DWORD PTR [rbx],0x2e2e2f
  40230a:	mov    DWORD PTR [rbx+0x1b],0x6578652e
  402311:	mov    QWORD PTR [rbx+0x3],rax
  402315:	movabs rax,0x2f736564756c636e
  40231f:	mov    BYTE PTR [rbx+0x1f],0x0
  402323:	mov    QWORD PTR [rbx+0xb],rax
  402327:	movabs rax,0x786966796c707061
  402331:	mov    QWORD PTR [rbx+0x13],rax
  402335:	jmp    0x402267
  40233a:	mov    rax,QWORD PTR [rsp+0x48]
  40233f:	mov    rax,QWORD PTR [rax+0x28]
  402343:	mov    rbx,QWORD PTR [rax]
  402346:	test   rbx,rbx
  402349:	je     0x402354
  40234b:	cmp    BYTE PTR [rbx],0x0
  40234e:	jne    0x402445
  402354:	mov    rcx,QWORD PTR [rip+0x259e5]        # 0x427d40
  40235b:	call   0x40a8f0
  402360:	jmp    0x40213a
  402365:	call   QWORD PTR [rip+0x260e9]        # 0x428454
  40236b:	mov    ebx,DWORD PTR [rax]
  40236d:	mov    ecx,ebx
  40236f:	call   0x408fc0
  402374:	xor    ecx,ecx
  402376:	mov    edx,0x1000
  40237b:	mov    rbp,rax
  40237e:	call   0x40a7c8
  402383:	mov    rsi,QWORD PTR [rip+0x259be]        # 0x427d48
  40238a:	mov    rdi,rax
  40238d:	call   QWORD PTR [rip+0x26081]        # 0x428414
  402393:	lea    rdx,[rip+0x11e7e]        # 0x414218
  40239a:	lea    rcx,[rax+0x60]
  40239e:	mov    QWORD PTR [rsp+0x28],rbp
  4023a3:	mov    DWORD PTR [rsp+0x20],ebx
  4023a7:	mov    r9,rdi
  4023aa:	mov    r8,rsi
  4023ad:	call   0x40a908
  4023b2:	jmp    0x40213a
  4023b7:	mov    rbx,QWORD PTR [rip+0x26096]        # 0x428454
  4023be:	call   rbx
  4023c0:	cmp    DWORD PTR [rax],0x2
  4023c3:	je     0x402354
  4023c5:	mov    rdi,QWORD PTR [rip+0x25914]        # 0x427ce0
  4023cc:	call   rbx
  4023ce:	mov    ecx,DWORD PTR [rax]
  4023d0:	call   0x408fc0
  4023d5:	mov    rsi,rax
  4023d8:	call   rbx
  4023da:	mov    ebx,DWORD PTR [rax]
  4023dc:	call   QWORD PTR [rip+0x26032]        # 0x428414
  4023e2:	lea    rdx,[rip+0x11e97]        # 0x414280
  4023e9:	lea    rcx,[rax+0x60]
  4023ed:	mov    QWORD PTR [rsp+0x20],rdi
  4023f2:	mov    r9,rsi
  4023f5:	mov    r8d,ebx
  4023f8:	call   0x40a908
  4023fd:	jmp    0x402354
  402402:	movzx  eax,BYTE PTR [r12]
  402407:	cmp    ebx,eax
  402409:	je     0x40243c
  40240b:	call   0x401620
  402410:	mov    rcx,QWORD PTR [rip+0x25929]        # 0x427d40
  402417:	mov    rsi,rax
  40241a:	cmp    r12,rcx
  40241d:	je     0x4020ae
  402423:	mov    rdx,r12
  402426:	mov    r9,rax
  402429:	mov    r8d,0x1
  40242f:	sub    rdx,rcx
  402432:	call   0x40a8e0
  402437:	jmp    0x4020ae
  40243c:	add    r12,0x1
  402440:	jmp    0x402095
  402445:	call   0x401620
  40244a:	mov    rcx,rbx
  40244d:	mov    rsi,rax
  402450:	call   0x40a820
  402455:	mov    r9,rsi
  402458:	mov    rdi,rax
  40245b:	mov    r8d,0x1
  402461:	mov    rdx,rax
  402464:	mov    rcx,rbx
  402467:	call   0x40a8e0
  40246c:	cmp    BYTE PTR [rbx+rdi*1-0x1],0xa
  402471:	je     0x402480
  402473:	mov    rdx,rsi
  402476:	mov    ecx,0xa
  40247b:	call   0x40a900
  402480:	mov    rcx,rsi
  402483:	call   0x40a928
  402488:	jmp    0x402354
  40248d:	mov    rbx,QWORD PTR [rip+0x258b4]        # 0x427d48
  402494:	mov    edx,0x2f
  402499:	mov    r14,QWORD PTR [rip+0x258a0]        # 0x427d40
  4024a0:	mov    rcx,rbx
  4024a3:	call   0x40a810
  4024a8:	mov    rsi,rax
  4024ab:	mov    rax,QWORD PTR [rip+0x217be]        # 0x423c70
  4024b2:	cmp    DWORD PTR [rax],0x1
  4024b5:	jbe    0x4024d0
  4024b7:	call   QWORD PTR [rip+0x25f57]        # 0x428414
  4024bd:	lea    rdx,[rip+0x11de8]        # 0x4142ac
  4024c4:	lea    rcx,[rax+0x60]
  4024c8:	mov    r8,rbx
  4024cb:	call   0x40a908
  4024d0:	test   rsi,rsi
  4024d3:	je     0x4025da
  4024d9:	mov    BYTE PTR [rsi],0x0
  4024dc:	mov    r13,QWORD PTR [rip+0x25f31]        # 0x428414
  4024e3:	movsxd rax,DWORD PTR [rsp+0x70]
  4024e8:	add    r14,rax
  4024eb:	cmp    BYTE PTR [r14],0x22
  4024ef:	je     0x4024fb
  4024f1:	add    r14,0x1
  4024f5:	cmp    BYTE PTR [r14],0x22
  4024f9:	jne    0x4024f1
  4024fb:	mov    rax,QWORD PTR [rip+0x2174e]        # 0x423c50
  402502:	mov    r8,r14
  402505:	mov    rdx,rbx
  402508:	mov    rcx,QWORD PTR [rax]
  40250b:	call   0x401530
  402510:	test   eax,eax
  402512:	jne    0x402540
  402514:	mov    r9,QWORD PTR [rsp+0x40]
  402519:	mov    DWORD PTR [rsp+0x20],0x0
  402521:	mov    r8d,0x1
  402527:	mov    rdx,r14
  40252a:	mov    rcx,r15
  40252d:	call   0x408620
  402532:	test   eax,eax
  402534:	je     0x4024e3
  402536:	jmp    0x40210b
  40253b:	nop    DWORD PTR [rax+rax*1+0x0]
  402540:	mov    rax,QWORD PTR [rip+0x21709]        # 0x423c50
  402547:	lea    rcx,[rip+0x11d75]        # 0x4142c3
  40254e:	mov    r8,rbx
  402551:	mov    rsi,r14
  402554:	mov    rdx,QWORD PTR [rax]
  402557:	call   0x40a868
  40255c:	cmp    BYTE PTR [r14],0x22
  402560:	je     0x4025d1
  402562:	mov    r12,r13
  402565:	add    rsi,0x1
  402569:	call   r13
  40256c:	movsx  ecx,BYTE PTR [rsi-0x1]
  402570:	lea    rdx,[rax+0x30]
  402574:	call   0x40a860
  402579:	cmp    BYTE PTR [rsi],0x22
  40257c:	jne    0x402565
  40257e:	mov    rax,QWORD PTR [rip+0x2166b]        # 0x423bf0
  402585:	lea    rcx,[rip+0x11d3f]        # 0x4142cb
  40258c:	mov    r8,rbx
  40258f:	mov    rdx,QWORD PTR [rax]
  402592:	call   0x40a868
  402597:	cmp    BYTE PTR [r14],0x22
  40259b:	je     0x4025b8
  40259d:	add    r14,0x1
  4025a1:	call   r12
  4025a4:	movsx  ecx,BYTE PTR [r14-0x1]
  4025a9:	lea    rdx,[rax+0x30]
  4025ad:	call   0x40a860
  4025b2:	cmp    BYTE PTR [r14],0x22
  4025b6:	jne    0x40259d
  4025b8:	call   r12
  4025bb:	lea    rdx,[rax+0x30]
  4025bf:	mov    ecx,0xa
  4025c4:	mov    r14,rsi
  4025c7:	call   0x40a860
  4025cc:	jmp    0x402514
  4025d1:	mov    r12,QWORD PTR [rip+0x25e3c]        # 0x428414
  4025d8:	jmp    0x40257e
  4025da:	lea    rbx,[rip+0x11c2f]        # 0x414210
  4025e1:	jmp    0x4024dc
  4025e6:	nop
  4025e7:	nop
  4025e8:	nop
  4025e9:	nop
  4025ea:	nop
  4025eb:	nop
  4025ec:	nop
  4025ed:	nop
  4025ee:	nop
  4025ef:	nop
  4025f0:	push   r12
  4025f2:	push   rbp
  4025f3:	push   rdi
  4025f4:	push   rsi
  4025f5:	push   rbx
  4025f6:	sub    rsp,0x30
  4025fa:	test   rcx,rcx
  4025fd:	je     0x4026e8
  402603:	mov    rbp,rcx
  402606:	xor    edi,edi
  402608:	mov    ebx,0xffffffff
  40260d:	xor    r12d,r12d
  402610:	jmp    0x402654
  402612:	lea    rcx,[r12+rdi*1]
  402616:	mov    r9,rbp
  402619:	mov    edx,0x1
  40261e:	call   0x40a8f8
  402623:	test   rax,rax
  402626:	mov    rsi,rax
  402629:	jne    0x402643
  40262b:	mov    rcx,rbp
  40262e:	call   0x40a920
  402633:	test   eax,eax
  402635:	jne    0x402684
  402637:	mov    rcx,rbp
  40263a:	call   0x40a918
  40263f:	test   eax,eax
  402641:	jne    0x4026a0
  402643:	mov    rcx,rbp
  402646:	sub    ebx,esi
  402648:	add    rdi,rsi
  40264b:	call   0x40a920
  402650:	test   eax,eax
  402652:	jne    0x402684
  402654:	cmp    ebx,0x3ff
  40265a:	movsxd r8,ebx
  40265d:	jg     0x402612
  40265f:	add    ebx,0x1000
  402665:	mov    rcx,r12
  402668:	movsxd r8,ebx
  40266b:	lea    rdx,[rdi+r8*1+0x1]
  402670:	mov    QWORD PTR [rsp+0x28],r8
  402675:	call   0x408f70
  40267a:	mov    r8,QWORD PTR [rsp+0x28]
  40267f:	mov    r12,rax
  402682:	jmp    0x402612
  402684:	lea    rdx,[rdi+0x1]
  402688:	mov    rcx,r12
  40268b:	call   0x408f70
  402690:	mov    BYTE PTR [rax+rdi*1],0x0
  402694:	add    rsp,0x30
  402698:	pop    rbx
  402699:	pop    rsi
  40269a:	pop    rdi
  40269b:	pop    rbp
  40269c:	pop    r12
  40269e:	ret    
  40269f:	nop
  4026a0:	call   QWORD PTR [rip+0x25dae]        # 0x428454
  4026a6:	mov    ebx,DWORD PTR [rax]
  4026a8:	cmp    ebx,0x15
  4026ab:	je     0x4026d3
  4026ad:	mov    ecx,ebx
  4026af:	call   0x408fc0
  4026b4:	mov    rsi,rax
  4026b7:	call   QWORD PTR [rip+0x25d57]        # 0x428414
  4026bd:	lea    rdx,[rip+0x2027c]        # 0x422940
  4026c4:	lea    rcx,[rax+0x60]
  4026c8:	mov    r9,rsi
  4026cb:	mov    r8d,ebx
  4026ce:	call   0x40a908
  4026d3:	mov    rcx,r12
  4026d6:	call   0x40a8f0
  4026db:	xor    eax,eax
  4026dd:	add    rsp,0x30
  4026e1:	pop    rbx
  4026e2:	pop    rsi
  4026e3:	pop    rdi
  4026e4:	pop    rbp
  4026e5:	pop    r12
  4026e7:	ret    
  4026e8:	xor    eax,eax
  4026ea:	jmp    0x402694
  4026ec:	nop    DWORD PTR [rax+0x0]
  4026f0:	push   rbp
  4026f1:	push   rdi
  4026f2:	push   rsi
  4026f3:	push   rbx
  4026f4:	sub    rsp,0x438
  4026fb:	cmp    r8d,0x1
  4026ff:	mov    rsi,rdx
  402702:	mov    rbx,rcx
  402705:	sbb    r8d,r8d
  402708:	mov    rdx,rcx
  40270b:	mov    rcx,rsi
  40270e:	and    r8d,0x8
  402712:	mov    rdi,r9
  402715:	add    r8d,0x5
  402719:	call   0x4084c0
  40271e:	test   eax,eax
  402720:	jne    0x40272e
  402722:	add    rsp,0x438
  402729:	pop    rbx
  40272a:	pop    rsi
  40272b:	pop    rdi
  40272c:	pop    rbp
  40272d:	ret    
  40272e:	lea    rbp,[rsp+0x30]
  402733:	mov    r9d,0x400
  402739:	mov    rdx,rsi
  40273c:	mov    ecx,eax
  40273e:	mov    r8,rbp
  402741:	call   0x408840
  402746:	call   QWORD PTR [rip+0x25cc8]        # 0x428414
  40274c:	mov    r9,QWORD PTR [rsp+0x480]
  402754:	lea    rcx,[rax+0x60]
  402758:	lea    rdx,[rip+0x20221]        # 0x422980
  40275f:	mov    QWORD PTR [rsp+0x28],rbp
  402764:	mov    QWORD PTR [rsp+0x20],rbx
  402769:	mov    r8,rdi
  40276c:	call   0x40a908
  402771:	mov    ecx,0x1
  402776:	call   0x40a930
  40277b:	nop
  40277c:	nop    DWORD PTR [rax+0x0]
  402780:	push   rbp
  402781:	push   rdi
  402782:	push   rsi
  402783:	push   rbx
  402784:	sub    rsp,0x38
  402788:	mov    rbp,QWORD PTR [rip+0x214a1]        # 0x423c30
  40278f:	cmp    QWORD PTR [rbp+0x0],0x0
  402794:	je     0x402820
  40279a:	mov    eax,DWORD PTR [rip+0x248a0]        # 0x427040
  4027a0:	mov    rdi,r8
  4027a3:	mov    rbx,rdx
  4027a6:	mov    rsi,rcx
  4027a9:	test   eax,eax
  4027ab:	je     0x4027d0
  4027ad:	lea    rax,[rip+0x248ec]        # 0x4270a0
  4027b4:	mov    QWORD PTR [rsi],rax
  4027b7:	lea    rax,[rip+0x248a2]        # 0x427060
  4027be:	mov    QWORD PTR [rbx],rax
  4027c1:	mov    eax,0x1
  4027c6:	add    rsp,0x38
  4027ca:	pop    rbx
  4027cb:	pop    rsi
  4027cc:	pop    rdi
  4027cd:	pop    rbp
  4027ce:	ret    
  4027cf:	nop
  4027d0:	lea    r9,[rip+0x20186]        # 0x42295d
  4027d7:	lea    rdx,[rip+0x248c2]        # 0x4270a0
  4027de:	lea    rcx,[rip+0x201fb]        # 0x4229e0
  4027e5:	mov    QWORD PTR [rsp+0x20],r8
  4027ea:	mov    r8d,0x1
  4027f0:	call   0x4026f0
  4027f5:	mov    QWORD PTR [rsp+0x20],rdi
  4027fa:	mov    rcx,QWORD PTR [rbp+0x0]
  4027fe:	lea    r9,[rip+0x20166]        # 0x42296b
  402805:	lea    rdx,[rip+0x24854]        # 0x427060
  40280c:	mov    r8d,0x1
  402812:	call   0x4026f0
  402817:	add    DWORD PTR [rip+0x24822],0x1        # 0x427040
  40281e:	jmp    0x4027ad
  402820:	xor    eax,eax
  402822:	add    rsp,0x38
  402826:	pop    rbx
  402827:	pop    rsi
  402828:	pop    rdi
  402829:	pop    rbp
  40282a:	ret    
  40282b:	nop    DWORD PTR [rax+rax*1+0x0]
  402830:	push   r12
  402832:	push   rbp
  402833:	push   rdi
  402834:	push   rsi
  402835:	push   rbx
  402836:	sub    rsp,0x20
  40283a:	mov    rsi,rdx
  40283d:	mov    rdi,rcx
  402840:	mov    rcx,rdx
  402843:	mov    rbp,r8
  402846:	lea    r12,[r8-0x1]
  40284a:	call   0x40a820
  40284f:	lea    rbx,[rax+0x3]
  402853:	lea    rax,[rsi-0x1]
  402857:	jmp    0x402864
  402859:	nop    DWORD PTR [rax+0x0]
  402860:	add    rbx,0x4
  402864:	lea    rcx,[rax+0x1]
  402868:	mov    edx,0x27
  40286d:	call   0x40a840
  402872:	test   rax,rax
  402875:	jne    0x402860
  402877:	cmp    r12,rbx
  40287a:	jb     0x4028cc
  40287c:	lea    rdx,[rdi+0x1]
  402880:	sub    rbp,0x7
  402884:	mov    BYTE PTR [rdi],0x27
  402887:	mov    rax,rdx
  40288a:	sub    rax,rdi
  40288d:	cmp    r12,rax
  402890:	jbe    0x4028cc
  402892:	movzx  ecx,BYTE PTR [rsi]
  402895:	lea    rax,[rdx+0x1]
  402899:	test   cl,cl
  40289b:	mov    BYTE PTR [rdx],cl
  40289d:	je     0x4028e0
  40289f:	cmp    cl,0x27
  4028a2:	jne    0x4028ba
  4028a4:	sub    rax,rdi
  4028a7:	cmp    rax,rbp
  4028aa:	jae    0x4028cc
  4028ac:	lea    rax,[rdx+0x4]
  4028b0:	mov    DWORD PTR [rdx],0x27275c27
  4028b6:	mov    BYTE PTR [rdx+0x4],0x0
  4028ba:	mov    rdx,rax
  4028bd:	add    rsi,0x1
  4028c1:	mov    rax,rdx
  4028c4:	sub    rax,rdi
  4028c7:	cmp    r12,rax
  4028ca:	ja     0x402892
  4028cc:	xor    eax,eax
  4028ce:	add    rsp,0x20
  4028d2:	pop    rbx
  4028d3:	pop    rsi
  4028d4:	pop    rdi
  4028d5:	pop    rbp
  4028d6:	pop    r12
  4028d8:	ret    
  4028d9:	nop    DWORD PTR [rax+0x0]
  4028e0:	mov    BYTE PTR [rdx],0x27
  4028e3:	mov    BYTE PTR [rdx+0x1],0x0
  4028e7:	add    rsp,0x20
  4028eb:	pop    rbx
  4028ec:	pop    rsi
  4028ed:	pop    rdi
  4028ee:	pop    rbp
  4028ef:	pop    r12
  4028f1:	ret    
  4028f2:	nop
  4028f3:	nop
  4028f4:	nop
  4028f5:	nop
  4028f6:	nop
  4028f7:	nop
  4028f8:	nop
  4028f9:	nop
  4028fa:	nop
  4028fb:	nop
  4028fc:	nop
  4028fd:	nop
  4028fe:	nop
  4028ff:	nop
  402900:	xor    eax,eax
  402902:	ret    
  402903:	nop    DWORD PTR [rax]
  402906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402910:	push   rdi
  402911:	push   rsi
  402912:	push   rbx
  402913:	sub    rsp,0x50
  402917:	lea    r8,[rip+0x20122]        # 0x422a40
  40291e:	mov    rbx,rdx
  402921:	lea    rcx,[rsp+0x30]
  402926:	lea    rdx,[rsp+0x38]
  40292b:	lea    rdi,[rsp+0x40]
  402930:	call   0x402780
  402935:	test   eax,eax
  402937:	je     0x402989
  402939:	mov    rcx,QWORD PTR [rsp+0x30]
  40293e:	mov    DWORD PTR [rsp+0x20],0x0
  402946:	mov    r9,rdi
  402949:	mov    r8d,0x2
  40294f:	mov    rdx,rbx
  402952:	call   0x408620
  402957:	test   eax,eax
  402959:	jne    0x402989
  40295b:	movsxd rsi,DWORD PTR [rsp+0x44]
  402960:	add    rsi,rbx
  402963:	mov    rax,rsi
  402966:	jmp    0x402976
  402968:	nop    DWORD PTR [rax+rax*1+0x0]
  402970:	cmp    BYTE PTR [rax-0x1],0x5c
  402974:	jne    0x4029a0
  402976:	lea    rcx,[rax+0x1]
  40297a:	mov    edx,0xa
  40297f:	call   0x40a840
  402984:	test   rax,rax
  402987:	jne    0x402970
  402989:	mov    eax,0x1
  40298e:	add    rsp,0x50
  402992:	pop    rbx
  402993:	pop    rsi
  402994:	pop    rdi
  402995:	ret    
  402996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029a0:	mov    rcx,QWORD PTR [rsp+0x38]
  4029a5:	mov    DWORD PTR [rsp+0x20],0x1
  4029ad:	mov    r9,rdi
  4029b0:	mov    r8d,0x1
  4029b6:	mov    rdx,rsi
  4029b9:	mov    rbx,rax
  4029bc:	call   0x408620
  4029c1:	test   eax,eax
  4029c3:	jne    0x402989
  4029c5:	movsxd rcx,DWORD PTR [rsp+0x44]
  4029ca:	mov    rdx,rbx
  4029cd:	sub    rdx,rsi
  4029d0:	cmp    rcx,rdx
  4029d3:	jg     0x402939
  4029d9:	jmp    0x40298e
  4029db:	nop    DWORD PTR [rax+rax*1+0x0]
  4029e0:	push   rdi
  4029e1:	push   rsi
  4029e2:	push   rbx
  4029e3:	sub    rsp,0x20
  4029e7:	mov    rbx,rcx
  4029ea:	mov    rsi,rdx
  4029ed:	mov    rdx,rcx
  4029f0:	mov    rcx,QWORD PTR [rip+0x105c9]        # 0x412fc0
  4029f7:	mov    rdi,r8
  4029fa:	call   0x40a838
  4029ff:	test   eax,eax
  402a01:	je     0x402a40
  402a03:	mov    rcx,QWORD PTR [rip+0x105c6]        # 0x412fd0
  402a0a:	mov    rdx,rbx
  402a0d:	call   0x40a838
  402a12:	test   eax,eax
  402a14:	je     0x402a5b
  402a16:	call   QWORD PTR [rip+0x259f8]        # 0x428414
  402a1c:	lea    rdx,[rip+0x20035]        # 0x422a58
  402a23:	lea    rcx,[rax+0x60]
  402a27:	mov    r8,rbx
  402a2a:	call   0x40a908
  402a2f:	mov    ecx,0x3
  402a34:	call   0x40a930
  402a39:	nop    DWORD PTR [rax+0x0]
  402a40:	lea    rax,[rip+0x10579]        # 0x412fc0
  402a47:	mov    rax,QWORD PTR [rax+0x8]
  402a4b:	mov    rdx,rdi
  402a4e:	mov    rcx,rsi
  402a51:	add    rsp,0x20
  402a55:	pop    rbx
  402a56:	pop    rsi
  402a57:	pop    rdi
  402a58:	rex.W jmp rax
  402a5b:	lea    rax,[rip+0x1056e]        # 0x412fd0
  402a62:	jmp    0x402a47
  402a64:	nop
  402a65:	nop
  402a66:	nop
  402a67:	nop
  402a68:	nop
  402a69:	nop
  402a6a:	nop
  402a6b:	nop
  402a6c:	nop
  402a6d:	nop
  402a6e:	nop
  402a6f:	nop
  402a70:	push   rdi
  402a71:	push   rsi
  402a72:	sub    rsp,0x28
  402a76:	lea    rcx,[rip+0x2011c]        # 0x422b99
  402a7d:	call   0x40a8d0
  402a82:	test   rax,rax
  402a85:	mov    QWORD PTR [rip+0x24694],rax        # 0x427120
  402a8c:	je     0x402b7c
  402a92:	lea    rcx,[rip+0x200f8]        # 0x422b91
  402a99:	call   0x40a8d0
  402a9e:	test   rax,rax
  402aa1:	mov    QWORD PTR [rip+0x24670],rax        # 0x427118
  402aa8:	je     0x402bb8
  402aae:	lea    rcx,[rip+0x200d5]        # 0x422b8a
  402ab5:	call   0x40a8d0
  402aba:	test   rax,rax
  402abd:	mov    QWORD PTR [rip+0x2464c],rax        # 0x427110
  402ac4:	je     0x402bac
  402aca:	lea    rcx,[rip+0x200b3]        # 0x422b84
  402ad1:	call   0x40a8d0
  402ad6:	test   rax,rax
  402ad9:	mov    QWORD PTR [rip+0x24628],rax        # 0x427108
  402ae0:	je     0x402ba0
  402ae6:	lea    rcx,[rip+0x2008f]        # 0x422b7c
  402aed:	call   0x40a8d0
  402af2:	test   rax,rax
  402af5:	mov    QWORD PTR [rip+0x24604],rax        # 0x427100
  402afc:	je     0x402b94
  402b02:	lea    rcx,[rip+0x20067]        # 0x422b70
  402b09:	call   0x40a8d0
  402b0e:	lea    rcx,[rip+0x20053]        # 0x422b68
  402b15:	mov    QWORD PTR [rip+0x245dc],rax        # 0x4270f8
  402b1c:	call   0x40a8d0
  402b21:	lea    rcx,[rip+0x20036]        # 0x422b5e
  402b28:	mov    QWORD PTR [rip+0x245c1],rax        # 0x4270f0
  402b2f:	call   0x40a8d0
  402b34:	test   rax,rax
  402b37:	mov    QWORD PTR [rip+0x245aa],rax        # 0x4270e8
  402b3e:	je     0x402b88
  402b40:	lea    rcx,[rip+0x2000d]        # 0x422b54
  402b47:	call   0x40a8d0
  402b4c:	test   rax,rax
  402b4f:	mov    QWORD PTR [rip+0x2458a],rax        # 0x4270e0
  402b56:	je     0x402b75
  402b58:	lea    rdi,[rip+0x1ff97]        # 0x422af6
  402b5f:	mov    ecx,0x5
  402b64:	mov    rsi,rax
  402b67:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402b69:	jne    0x402b75
  402b6b:	mov    DWORD PTR [rip+0x245b3],0x1        # 0x427128
  402b75:	add    rsp,0x28
  402b79:	pop    rsi
  402b7a:	pop    rdi
  402b7b:	ret    
  402b7c:	lea    rcx,[rip+0x20016]        # 0x422b99
  402b83:	call   0x40ac60
  402b88:	lea    rcx,[rip+0x1ffcf]        # 0x422b5e
  402b8f:	call   0x40ac60
  402b94:	lea    rcx,[rip+0x1ffe1]        # 0x422b7c
  402b9b:	call   0x40ac60
  402ba0:	lea    rcx,[rip+0x1ffdd]        # 0x422b84
  402ba7:	call   0x40ac60
  402bac:	lea    rcx,[rip+0x1ffd7]        # 0x422b8a
  402bb3:	call   0x40ac60
  402bb8:	lea    rcx,[rip+0x1ffd2]        # 0x422b91
  402bbf:	call   0x40ac60
  402bc4:	nop
  402bc5:	nop
  402bc6:	nop
  402bc7:	nop
  402bc8:	nop
  402bc9:	nop
  402bca:	nop
  402bcb:	nop
  402bcc:	nop
  402bcd:	nop
  402bce:	nop
  402bcf:	nop
  402bd0:	push   rsi
  402bd1:	push   rbx
  402bd2:	mov    r11,QWORD PTR [rdx]
  402bd5:	mov    r10,QWORD PTR [rsp+0x40]
  402bda:	mov    eax,0xb
  402bdf:	cmp    r11,r8
  402be2:	je     0x402c82
  402be8:	lea    rax,[r11+0x1]
  402bec:	mov    QWORD PTR [rdx],rax
  402bef:	mov    eax,DWORD PTR [rsp+0x38]
  402bf3:	shl    eax,0xf
  402bf6:	sar    eax,0x1f
  402bf9:	and    eax,0xb
  402bfc:	test   r9,r9
  402bff:	je     0x402c85
  402c05:	movzx  edx,cl
  402c08:	movzx  ecx,BYTE PTR [r11]
  402c0c:	movsx  edx,BYTE PTR [r9+rdx*1]
  402c11:	movzx  r8d,BYTE PTR [r9+rcx*1]
  402c16:	cmp    r8d,edx
  402c19:	jb     0x402c82
  402c1b:	mov    r11d,0x1
  402c21:	jmp    0x402c50
  402c23:	mov    eax,edx
  402c25:	mov    esi,r11d
  402c28:	add    edx,0x1
  402c2b:	movzx  ecx,BYTE PTR [r9+rax*1]
  402c30:	mov    rax,rcx
  402c33:	and    ecx,0x7
  402c36:	shr    rax,0x3
  402c3a:	shl    esi,cl
  402c3c:	and    eax,0x1f
  402c3f:	mov    ecx,esi
  402c41:	add    rax,r10
  402c44:	movzx  ebx,BYTE PTR [rax]
  402c47:	or     ecx,ebx
  402c49:	cmp    r8d,edx
  402c4c:	mov    BYTE PTR [rax],cl
  402c4e:	jb     0x402c80
  402c50:	test   r9,r9
  402c53:	jne    0x402c23
  402c55:	mov    eax,edx
  402c57:	mov    ecx,edx
  402c59:	mov    esi,r11d
  402c5c:	sar    eax,0x3
  402c5f:	and    ecx,0x7
  402c62:	add    edx,0x1
  402c65:	cdqe   
  402c67:	shl    esi,cl
  402c69:	add    rax,r10
  402c6c:	mov    ecx,esi
  402c6e:	movzx  ebx,BYTE PTR [rax]
  402c71:	or     ecx,ebx
  402c73:	cmp    r8d,edx
  402c76:	mov    BYTE PTR [rax],cl
  402c78:	jae    0x402c50
  402c7a:	nop    WORD PTR [rax+rax*1+0x0]
  402c80:	xor    eax,eax
  402c82:	pop    rbx
  402c83:	pop    rsi
  402c84:	ret    
  402c85:	movsx  edx,cl
  402c88:	movzx  r8d,BYTE PTR [r11]
  402c8c:	jmp    0x402c16
  402c8e:	xchg   ax,ax
  402c90:	push   rdi
  402c91:	push   rsi
  402c92:	push   rbx
  402c93:	sub    rsp,0x30
  402c97:	mov    rax,QWORD PTR [rcx]
  402c9a:	lea    r9,[rax+0x1]
  402c9e:	mov    QWORD PTR [rsp+0x28],r9
  402ca3:	cmp    BYTE PTR [rax],0x1d
  402ca6:	ja     0x402d10
  402ca8:	movzx  r11d,BYTE PTR [rax]
  402cac:	lea    r10,[rip+0x1ff0d]        # 0x422bc0
  402cb3:	mov    rsi,r8
  402cb6:	mov    rbx,rcx
  402cb9:	movsxd r11,DWORD PTR [r10+r11*4]
  402cbd:	add    r10,r11
  402cc0:	jmp    r10
  402cc3:	movzx  edi,BYTE PTR [rax+0x1]
  402cc7:	lea    rcx,[rsp+0x28]
  402ccc:	call   0x402e20
  402cd1:	lea    rcx,[rsi+rdi*8]
  402cd5:	movzx  edx,BYTE PTR [rcx]
  402cd8:	mov    r8d,edx
  402cdb:	and    r8d,0x3
  402cdf:	cmp    r8b,0x3
  402ce3:	je     0x402d80
  402ce9:	test   al,al
  402ceb:	je     0x402d10
  402ced:	mov    r9,QWORD PTR [rsp+0x28]
  402cf2:	mov    eax,0x1
  402cf7:	mov    QWORD PTR [rbx],r9
  402cfa:	add    rsp,0x30
  402cfe:	pop    rbx
  402cff:	pop    rsi
  402d00:	pop    rdi
  402d01:	ret    
  402d02:	movzx  eax,BYTE PTR [rax+0x1]
  402d06:	test   BYTE PTR [r8+rax*8],0x3
  402d0b:	jne    0x402cf2
  402d0d:	nop    DWORD PTR [rax]
  402d10:	xor    eax,eax
  402d12:	add    rsp,0x30
  402d16:	pop    rbx
  402d17:	pop    rsi
  402d18:	pop    rdi
  402d19:	ret    
  402d1a:	nop    WORD PTR [rax+rax*1+0x0]
  402d20:	lea    rcx,[rax+0x3]
  402d24:	mov    QWORD PTR [rsp+0x28],rcx
  402d29:	movsx  edx,BYTE PTR [rax+0x4]
  402d2d:	movzx  r8d,BYTE PTR [rax+0x3]
  402d32:	shl    edx,0x8
  402d35:	add    edx,r8d
  402d38:	jne    0x402d10
  402d3a:	mov    QWORD PTR [rsp+0x28],r9
  402d3f:	movsx  r9d,BYTE PTR [rax+0x2]
  402d44:	movzx  edx,BYTE PTR [rax+0x1]
  402d48:	shl    r9d,0x8
  402d4c:	add    r9d,edx
  402d4f:	movsxd r9,r9d
  402d52:	add    r9,rcx
  402d55:	jmp    0x402cf2
  402d57:	nop    WORD PTR [rax+rax*1+0x0]
  402d60:	movsx  ecx,BYTE PTR [rax+0x2]
  402d64:	movzx  edx,BYTE PTR [rax+0x1]
  402d68:	add    rax,0x3
  402d6c:	shl    ecx,0x8
  402d6f:	add    edx,ecx
  402d71:	js     0x402d10
  402d73:	movsxd rdx,edx
  402d76:	lea    r9,[rax+rdx*1]
  402d7a:	jmp    0x402cf2
  402d7f:	nop
  402d80:	mov    r8d,eax
  402d83:	and    edx,0xfffffffc
  402d86:	and    r8d,0x3
  402d8a:	or     edx,r8d
  402d8d:	mov    BYTE PTR [rcx],dl
  402d8f:	jmp    0x402ce9
  402d94:	xchg   ax,ax
  402d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402da0:	push   rdi
  402da1:	push   rsi
  402da2:	push   rbx
  402da3:	sub    rsp,0x30
  402da7:	lea    rsi,[rsp+0x28]
  402dac:	mov    rdi,rdx
  402daf:	mov    rbx,r8
  402db2:	mov    QWORD PTR [rsp+0x28],rcx
  402db7:	mov    rax,rcx
  402dba:	nop    WORD PTR [rax+rax*1+0x0]
  402dc0:	cmp    rdi,rax
  402dc3:	jbe    0x402df6
  402dc5:	cmp    BYTE PTR [rax],0xf
  402dc8:	jne    0x402e03
  402dca:	lea    rcx,[rax+0x1]
  402dce:	mov    QWORD PTR [rsp+0x28],rcx
  402dd3:	movsx  r9d,BYTE PTR [rax+0x2]
  402dd8:	movzx  r10d,BYTE PTR [rax+0x1]
  402ddd:	shl    r9d,0x8
  402de1:	add    r9d,r10d
  402de4:	movsxd r9,r9d
  402de7:	lea    rax,[rax+r9*1+0x3]
  402dec:	cmp    rdi,rax
  402def:	mov    QWORD PTR [rsp+0x28],rax
  402df4:	ja     0x402dc5
  402df6:	mov    eax,0x1
  402dfb:	add    rsp,0x30
  402dff:	pop    rbx
  402e00:	pop    rsi
  402e01:	pop    rdi
  402e02:	ret    
  402e03:	mov    r8,rbx
  402e06:	mov    rdx,rdi
  402e09:	mov    rcx,rsi
  402e0c:	call   0x402c90
  402e11:	test   al,al
  402e13:	je     0x402dfb
  402e15:	mov    rax,QWORD PTR [rsp+0x28]
  402e1a:	jmp    0x402dc0
  402e1c:	nop    DWORD PTR [rax+0x0]
  402e20:	push   r12
  402e22:	push   rbp
  402e23:	push   rdi
  402e24:	push   rsi
  402e25:	push   rbx
  402e26:	sub    rsp,0x30
  402e2a:	mov    rax,QWORD PTR [rcx]
  402e2d:	mov    rbp,rcx
  402e30:	lea    r12,[rsp+0x28]
  402e35:	mov    rdi,rdx
  402e38:	mov    rsi,r8
  402e3b:	lea    rcx,[rax+0x2]
  402e3f:	mov    QWORD PTR [rsp+0x28],rcx
  402e44:	cmp    rdi,rcx
  402e47:	jbe    0x402f10
  402e4d:	movzx  eax,BYTE PTR [rcx]
  402e50:	cmp    al,0x7
  402e52:	je     0x402f40
  402e58:	cmp    al,0xf
  402e5a:	jne    0x402f20
  402e60:	lea    rax,[rcx+0x1]
  402e64:	add    rcx,0x3
  402e68:	mov    QWORD PTR [rsp+0x28],rax
  402e6d:	movsx  ebx,BYTE PTR [rcx-0x1]
  402e71:	movzx  eax,BYTE PTR [rcx-0x2]
  402e75:	mov    QWORD PTR [rsp+0x28],rcx
  402e7a:	shl    ebx,0x8
  402e7d:	add    eax,ebx
  402e7f:	js     0x402e44
  402e81:	movsxd rbx,eax
  402e84:	cmp    BYTE PTR [rcx+rbx*1-0x3],0xe
  402e89:	lea    rdx,[rcx+rbx*1-0x3]
  402e8e:	je     0x402f04
  402e90:	movsx  ebx,BYTE PTR [rcx-0x1]
  402e94:	movzx  eax,BYTE PTR [rcx-0x2]
  402e98:	mov    r8,rsi
  402e9b:	shl    ebx,0x8
  402e9e:	add    ebx,eax
  402ea0:	movsxd rbx,ebx
  402ea3:	lea    rdx,[rcx+rbx*1]
  402ea7:	call   0x402da0
  402eac:	test   al,al
  402eae:	je     0x402f10
  402eb0:	mov    rcx,rbx
  402eb3:	add    rcx,QWORD PTR [rsp+0x28]
  402eb8:	mov    QWORD PTR [rsp+0x28],rcx
  402ebd:	jmp    0x402e44
  402ebf:	nop
  402ec0:	mov    rdx,rbx
  402ec3:	add    rdx,QWORD PTR [rsp+0x28]
  402ec8:	mov    QWORD PTR [rsp+0x28],rdx
  402ecd:	cmp    BYTE PTR [rdx],0xf
  402ed0:	jne    0x402f60
  402ed6:	lea    rax,[rdx+0x1]
  402eda:	lea    rcx,[rdx+0x3]
  402ede:	mov    QWORD PTR [rsp+0x28],rax
  402ee3:	movsx  ebx,BYTE PTR [rdx+0x2]
  402ee7:	movzx  eax,BYTE PTR [rdx+0x1]
  402eeb:	mov    QWORD PTR [rsp+0x28],rcx
  402ef0:	shl    ebx,0x8
  402ef3:	add    ebx,eax
  402ef5:	movsxd rbx,ebx
  402ef8:	cmp    BYTE PTR [rcx+rbx*1-0x3],0xe
  402efd:	jne    0x402f70
  402eff:	lea    rdx,[rcx+rbx*1-0x3]
  402f04:	mov    r8,rsi
  402f07:	call   0x402da0
  402f0c:	test   al,al
  402f0e:	jne    0x402ec0
  402f10:	xor    eax,eax
  402f12:	add    rsp,0x30
  402f16:	pop    rbx
  402f17:	pop    rsi
  402f18:	pop    rdi
  402f19:	pop    rbp
  402f1a:	pop    r12
  402f1c:	ret    
  402f1d:	nop    DWORD PTR [rax]
  402f20:	mov    r8,rsi
  402f23:	mov    rdx,rdi
  402f26:	mov    rcx,r12
  402f29:	call   0x402c90
  402f2e:	test   al,al
  402f30:	je     0x402f10
  402f32:	mov    rcx,QWORD PTR [rsp+0x28]
  402f37:	jmp    0x402e44
  402f3c:	nop    DWORD PTR [rax+0x0]
  402f40:	add    rcx,0x2
  402f44:	mov    eax,0x1
  402f49:	mov    QWORD PTR [rbp+0x0],rcx
  402f4d:	add    rsp,0x30
  402f51:	pop    rbx
  402f52:	pop    rsi
  402f53:	pop    rdi
  402f54:	pop    rbp
  402f55:	pop    r12
  402f57:	ret    
  402f58:	nop    DWORD PTR [rax+rax*1+0x0]
  402f60:	mov    rcx,rdx
  402f63:	jmp    0x402e90
  402f68:	nop    DWORD PTR [rax+rax*1+0x0]
  402f70:	mov    QWORD PTR [rsp+0x28],rdx
  402f75:	mov    rcx,rdx
  402f78:	jmp    0x402e90
  402f7d:	nop    DWORD PTR [rax]
  402f80:	push   rbp
  402f81:	push   r15
  402f83:	push   r14
  402f85:	push   r13
  402f87:	push   r12
  402f89:	push   rdi
  402f8a:	push   rsi
  402f8b:	push   rbx
  402f8c:	sub    rsp,0x48
  402f90:	lea    rbp,[rsp+0x80]
  402f98:	mov    rbx,QWORD PTR [rcx+0x18]
  402f9c:	mov    r13,QWORD PTR [rcx]
  402f9f:	xor    eax,eax
  402fa1:	mov    r12d,DWORD PTR [rcx+0xc]
  402fa5:	mov    rsi,rcx
  402fa8:	sub    rsp,0x40
  402fac:	lea    rdx,[rsp+0x20]
  402fb1:	lea    r15,[rip+0x1fc80]        # 0x422c38
  402fb8:	xor    r9d,r9d
  402fbb:	lea    rdi,[rbx+0x8]
  402fbf:	mov    rcx,rbx
  402fc2:	mov    QWORD PTR [rbx],0x0
  402fc9:	mov    QWORD PTR [rbx+0xf8],0x0
  402fd4:	mov    r8d,0x5
  402fda:	mov    r14d,0x1
  402fe0:	and    rdi,0xfffffffffffffff8
  402fe4:	add    r12,r13
  402fe7:	mov    r10d,0xff
  402fed:	sub    rcx,rdi
  402ff0:	add    ecx,0x100
  402ff6:	shr    ecx,0x3
  402ff9:	rep stos QWORD PTR es:[rdi],rax
  402ffc:	lea    rdi,[rbx+0x100]
  403003:	movzx  eax,BYTE PTR [rsi+0x30]
  403007:	or     eax,0x8
  40300a:	and    eax,0xfffffffe
  40300d:	mov    BYTE PTR [rsi+0x30],al
  403010:	cmp    r13,r12
  403013:	je     0x403033
  403015:	movzx  eax,BYTE PTR [r13+0x0]
  40301a:	cmp    al,0x1
  40301c:	je     0x403033
  40301e:	cmp    al,0x1d
  403020:	lea    r11,[r13+0x1]
  403024:	ja     0x403324
  40302a:	movsxd rax,DWORD PTR [r15+rax*4]
  40302e:	add    rax,r15
  403031:	jmp    rax
  403033:	test   r9d,r9d
  403036:	je     0x403061
  403038:	movzx  ecx,BYTE PTR [rsi+0x30]
  40303c:	mov    eax,ecx
  40303e:	and    ecx,0xfffffffe
  403041:	and    eax,0x1
  403044:	or     r14d,eax
  403047:	lea    eax,[r9-0x1]
  40304b:	or     r14d,ecx
  40304e:	mov    BYTE PTR [rsi+0x30],r14b
  403052:	mov    r9,rax
  403055:	mov    r13,QWORD PTR [rdx+rax*8]
  403059:	mov    r14d,0x1
  40305f:	jmp    0x403010
  403061:	movzx  edx,BYTE PTR [rsi+0x30]
  403065:	mov    eax,edx
  403067:	and    edx,0xfffffffe
  40306a:	and    eax,0x1
  40306d:	or     r14d,eax
  403070:	xor    eax,eax
  403072:	or     r14d,edx
  403075:	mov    BYTE PTR [rsi+0x30],r14b
  403079:	lea    rsp,[rbp-0x38]
  40307d:	pop    rbx
  40307e:	pop    rsi
  40307f:	pop    rdi
  403080:	pop    r12
  403082:	pop    r13
  403084:	pop    r14
  403086:	pop    r15
  403088:	pop    rbp
  403089:	ret    
  40308a:	nop    WORD PTR [rax+rax*1+0x0]
  403090:	add    r13,0x5
  403094:	jmp    0x403010
  403099:	nop    DWORD PTR [rax+0x0]
  4030a0:	mov    BYTE PTR [rbp-0x41],0x0
  4030a4:	movsx  eax,BYTE PTR [r11+0x1]
  4030a9:	movzx  ecx,BYTE PTR [r11]
  4030ad:	lea    r13,[r11+0x2]
  4030b1:	shl    eax,0x8
  4030b4:	add    eax,ecx
  4030b6:	cdqe   
  4030b8:	add    rax,r13
  4030bb:	cmp    r12,rax
  4030be:	mov    QWORD PTR [rbp-0x50],rax
  4030c2:	jbe    0x403329
  4030c8:	cmp    r8d,r9d
  4030cb:	je     0x403343
  4030d1:	mov    rcx,QWORD PTR [rbp-0x50]
  4030d5:	mov    eax,r9d
  4030d8:	add    r9d,0x1
  4030dc:	mov    QWORD PTR [rdx+rax*8],rcx
  4030e0:	add    r11,0x4
  4030e4:	cmp    BYTE PTR [rbp-0x41],0x0
  4030e8:	cmovne r13,r11
  4030ec:	jmp    0x403010
  4030f1:	mov    r13,r11
  4030f4:	jmp    0x403010
  4030f9:	nop    DWORD PTR [rax+0x0]
  403100:	lea    r11,[rip+0x240b9]        # 0x4271c0
  403107:	xor    ecx,ecx
  403109:	nop    DWORD PTR [rax+0x0]
  403110:	cmp    BYTE PTR [r11+rcx*1],0x1
  403115:	je     0x40311b
  403117:	mov    BYTE PTR [rbx+rcx*1],0x1
  40311b:	add    rcx,0x1
  40311f:	cmp    rcx,0x100
  403126:	jne    0x403110
  403128:	mov    r13,r12
  40312b:	xor    r14d,r14d
  40312e:	jmp    0x403010
  403133:	xor    eax,eax
  403135:	lea    r11,[rip+0x24084]        # 0x4271c0
  40313c:	jmp    0x40314c
  40313e:	xchg   ax,ax
  403140:	add    rax,0x1
  403144:	cmp    rax,0x100
  40314a:	je     0x403128
  40314c:	cmp    BYTE PTR [r11+rax*1],0x1
  403151:	jne    0x403140
  403153:	mov    BYTE PTR [rbx+rax*1],0x1
  403157:	jmp    0x403140
  403159:	nop    DWORD PTR [rax+0x0]
  403160:	movsx  eax,BYTE PTR [r13+0x4]
  403165:	movzx  ecx,BYTE PTR [r13+0x3]
  40316a:	shl    eax,0x8
  40316d:	add    eax,ecx
  40316f:	jne    0x403090
  403175:	mov    BYTE PTR [rbp-0x41],0x1
  403179:	jmp    0x4030a4
  40317e:	xchg   ax,ax
  403180:	movsx  eax,BYTE PTR [r13+0x2]
  403185:	movzx  ecx,BYTE PTR [r13+0x1]
  40318a:	shl    eax,0x8
  40318d:	add    eax,ecx
  40318f:	movsxd rcx,eax
  403192:	test   eax,eax
  403194:	lea    r13,[r13+rcx*1+0x3]
  403199:	jg     0x403010
  40319f:	movzx  eax,BYTE PTR [r13+0x0]
  4031a4:	cmp    al,0x15
  4031a6:	je     0x4031b0
  4031a8:	cmp    al,0xf
  4031aa:	jne    0x403010
  4031b0:	movsx  ecx,BYTE PTR [r13+0x2]
  4031b5:	movzx  eax,BYTE PTR [r13+0x1]
  4031ba:	shl    ecx,0x8
  4031bd:	add    eax,ecx
  4031bf:	test   r9d,r9d
  4031c2:	cdqe   
  4031c4:	lea    r13,[r13+rax*1+0x3]
  4031c9:	je     0x403010
  4031cf:	lea    ecx,[r9-0x1]
  4031d3:	cmp    QWORD PTR [rdx+rcx*8],r13
  4031d7:	cmove  r9d,ecx
  4031db:	jmp    0x403010
  4031e0:	or     BYTE PTR [rsi+0x30],0x1
  4031e4:	xor    eax,eax
  4031e6:	jmp    0x403079
  4031eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4031f0:	add    r13,0x3
  4031f4:	jmp    0x403010
  4031f9:	nop    DWORD PTR [rax+0x0]
  403200:	movzx  ecx,BYTE PTR [r13+0x1]
  403205:	shl    ecx,0x3
  403208:	cmp    ecx,0xff
  40320e:	jg     0x4033aa
  403214:	mov    r14d,r10d
  403217:	movsxd r11,ecx
  40321a:	sub    r14d,ecx
  40321d:	lea    rax,[rbx+r11*1]
  403221:	lea    rcx,[r11+r14*1+0x1]
  403226:	add    rcx,rbx
  403229:	nop    DWORD PTR [rax+0x0]
  403230:	mov    BYTE PTR [rax],0x1
  403233:	add    rax,0x1
  403237:	cmp    rax,rcx
  40323a:	jne    0x403230
  40323c:	movzx  eax,BYTE PTR [r13+0x1]
  403241:	shl    eax,0x3
  403244:	sub    eax,0x1
  403247:	add    r13,0x2
  40324b:	cmp    eax,0xffffffff
  40324e:	je     0x403128
  403254:	movsxd r11,eax
  403257:	add    r11,rbx
  40325a:	nop    WORD PTR [rax+rax*1+0x0]
  403260:	mov    ecx,eax
  403262:	sar    ecx,0x3
  403265:	movsxd rcx,ecx
  403268:	movzx  r14d,BYTE PTR [r13+rcx*1+0x0]
  40326e:	mov    ecx,eax
  403270:	and    ecx,0x7
  403273:	bt     r14d,ecx
  403277:	jb     0x40327d
  403279:	mov    BYTE PTR [r11],0x1
  40327d:	sub    eax,0x1
  403280:	sub    r11,0x1
  403284:	cmp    eax,0xffffffff
  403287:	jne    0x403260
  403289:	jmp    0x403128
  40328e:	xchg   ax,ax
  403290:	movzx  eax,BYTE PTR [r13+0x1]
  403295:	lea    r11,[r13+0x2]
  403299:	lea    eax,[rax*8-0x1]
  4032a0:	cmp    eax,0xffffffff
  4032a3:	je     0x403128
  4032a9:	movsxd r13,eax
  4032ac:	add    r13,rbx
  4032af:	nop
  4032b0:	mov    ecx,eax
  4032b2:	sar    ecx,0x3
  4032b5:	movsxd rcx,ecx
  4032b8:	movzx  r14d,BYTE PTR [r11+rcx*1]
  4032bd:	mov    ecx,eax
  4032bf:	and    ecx,0x7
  4032c2:	bt     r14d,ecx
  4032c6:	jae    0x4032cd
  4032c8:	mov    BYTE PTR [r13+0x0],0x1
  4032cd:	sub    eax,0x1
  4032d0:	sub    r13,0x1
  4032d4:	cmp    eax,0xffffffff
  4032d7:	jne    0x4032b0
  4032d9:	jmp    0x403128
  4032de:	xchg   ax,ax
  4032e0:	movzx  ecx,BYTE PTR [rbx+0xa]
  4032e4:	mov    rax,rbx
  4032e7:	nop    WORD PTR [rax+rax*1+0x0]
  4032f0:	mov    BYTE PTR [rax],0x1
  4032f3:	add    rax,0x1
  4032f7:	cmp    rax,rdi
  4032fa:	jne    0x4032f0
  4032fc:	test   BYTE PTR [rsi+0x10],0x40
  403300:	jne    0x403332
  403302:	mov    BYTE PTR [rbx+0xa],cl
  403305:	mov    r13,r12
  403308:	xor    r14d,r14d
  40330b:	jmp    0x403010
  403310:	movzx  eax,BYTE PTR [r13+0x2]
  403315:	xor    r14d,r14d
  403318:	mov    r13,r12
  40331b:	mov    BYTE PTR [rbx+rax*1],0x1
  40331f:	jmp    0x403010
  403324:	call   0x40a948
  403329:	or     BYTE PTR [rsi+0x30],0x1
  40332d:	jmp    0x4030e0
  403332:	test   BYTE PTR [rsi+0x30],0x1
  403336:	je     0x403128
  40333c:	xor    eax,eax
  40333e:	jmp    0x403079
  403343:	mov    eax,DWORD PTR [rip+0xfcc7]        # 0x413010
  403349:	lea    ecx,[rax+rax*8]
  40334c:	lea    eax,[rax+rcx*2]
  40334f:	cmp    r8d,eax
  403352:	ja     0x4033b1
  403354:	lea    eax,[r8+r8*1]
  403358:	mov    DWORD PTR [rbp-0x60],r9d
  40335c:	mov    DWORD PTR [rbp-0x5c],r10d
  403360:	mov    QWORD PTR [rbp-0x58],r11
  403364:	mov    DWORD PTR [rbp-0x48],eax
  403367:	lea    rax,[rax*8+0x1e]
  40336f:	shr    rax,0x4
  403373:	shl    rax,0x4
  403377:	call   0x40a550
  40337c:	sub    rsp,rax
  40337f:	shl    r8,0x3
  403383:	lea    rcx,[rsp+0x20]
  403388:	call   0x40a870
  40338d:	test   rax,rax
  403390:	mov    rdx,rax
  403393:	je     0x4033b1
  403395:	mov    r8d,DWORD PTR [rbp-0x48]
  403399:	mov    r9d,DWORD PTR [rbp-0x60]
  40339d:	mov    r10d,DWORD PTR [rbp-0x5c]
  4033a1:	mov    r11,QWORD PTR [rbp-0x58]
  4033a5:	jmp    0x4030d1
  4033aa:	mov    eax,ecx
  4033ac:	jmp    0x403244
  4033b1:	mov    eax,0xfffffffe
  4033b6:	jmp    0x403079
  4033bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4033c0:	push   rbp
  4033c1:	push   r15
  4033c3:	push   r14
  4033c5:	push   r13
  4033c7:	push   r12
  4033c9:	push   rdi
  4033ca:	push   rsi
  4033cb:	push   rbx
  4033cc:	sub    rsp,0x138
  4033d3:	lea    rbp,[rsp+0x80]
  4033db:	mov    eax,DWORD PTR [rcx+0xc]
  4033de:	mov    r14,QWORD PTR [rcx]
  4033e1:	sub    rsp,0x40
  4033e5:	mov    r10,r9
  4033e8:	mov    QWORD PTR [rbp+0x100],rcx
  4033ef:	mov    QWORD PTR [rbp+0x108],rdx
  4033f6:	mov    DWORD PTR [rbp+0x110],r8d
  4033fd:	lea    rsi,[rsp+0x20]
  403402:	movsxd r9,DWORD PTR [rbp+0x138]
  403409:	add    rax,r14
  40340c:	mov    QWORD PTR [rbp+0x90],rax
  403413:	mov    rax,QWORD PTR [rcx+0x20]
  403417:	mov    QWORD PTR [rbp+0x28],rax
  40341b:	mov    rax,QWORD PTR [rcx+0x28]
  40341f:	lea    rdi,[rax+0x1]
  403423:	test   rax,rax
  403426:	mov    QWORD PTR [rbp+0x48],rax
  40342a:	mov    QWORD PTR [rbp+0x50],rdi
  40342e:	jne    0x404878
  403434:	mov    QWORD PTR [rbp-0x28],0x0
  40343c:	mov    QWORD PTR [rbp-0x20],0x0
  403444:	xor    r15d,r15d
  403447:	mov    QWORD PTR [rbp+0x0],0x0
  40344f:	mov    QWORD PTR [rbp+0x8],0x0
  403457:	xor    r12d,r12d
  40345a:	mov    QWORD PTR [rbp+0x30],0x0
  403462:	mov    QWORD PTR [rbp+0x38],0x0
  40346a:	xor    edi,edi
  40346c:	mov    ebx,DWORD PTR [rbp+0x128]
  403472:	test   ebx,ebx
  403474:	js     0x404ded
  40347a:	mov    eax,DWORD PTR [rbp+0x110]
  403480:	add    eax,DWORD PTR [rbp+0x120]
  403486:	cmp    DWORD PTR [rbp+0x128],eax
  40348c:	jg     0x404ded
  403492:	mov    rax,QWORD PTR [rbp+0x48]
  403496:	lea    r8,[rax*8+0x0]
  40349e:	xor    eax,eax
  4034a0:	cmp    QWORD PTR [rbp+0x50],0x1
  4034a5:	jbe    0x4034e3
  4034a7:	mov    r11,QWORD PTR [rbp+0x38]
  4034ab:	mov    rbx,QWORD PTR [rbp+0x30]
  4034af:	nop
  4034b0:	lea    rdx,[rip+0x23ce1]        # 0x427198
  4034b7:	mov    QWORD PTR [rbx+rax*1+0x8],rdx
  4034bc:	mov    QWORD PTR [r11+rax*1+0x8],rdx
  4034c1:	mov    QWORD PTR [r12+rax*1+0x8],rdx
  4034c6:	mov    QWORD PTR [rdi+rax*1+0x8],rdx
  4034cb:	add    rax,0x8
  4034cf:	lea    rcx,[r15+rax*1]
  4034d3:	movzx  edx,BYTE PTR [rcx]
  4034d6:	or     edx,0x3
  4034d9:	and    edx,0xffffffe3
  4034dc:	cmp    rax,r8
  4034df:	mov    BYTE PTR [rcx],dl
  4034e1:	jne    0x4034b0
  4034e3:	mov    r11d,DWORD PTR [rbp+0x120]
  4034ea:	test   r11d,r11d
  4034ed:	jne    0x4046bc
  4034f3:	cmp    QWORD PTR [rbp+0x108],0x0
  4034fb:	je     0x4046bc
  403501:	mov    eax,DWORD PTR [rbp+0x110]
  403507:	mov    r10,QWORD PTR [rbp+0x108]
  40350e:	mov    QWORD PTR [rbp+0x78],0x0
  403516:	mov    QWORD PTR [rbp+0x20],0x0
  40351e:	mov    DWORD PTR [rbp+0x110],0x0
  403528:	mov    QWORD PTR [rbp+0x108],0x0
  403533:	mov    DWORD PTR [rbp+0x120],eax
  403539:	xor    eax,eax
  40353b:	movsxd rdx,DWORD PTR [rbp+0x120]
  403542:	cmp    DWORD PTR [rbp+0x110],r9d
  403549:	lea    rbx,[r10+rdx*1]
  40354d:	mov    QWORD PTR [rbp+0x18],rbx
  403551:	jl     0x4047b2
  403557:	add    r9,QWORD PTR [rbp+0x108]
  40355e:	test   al,al
  403560:	movsxd rax,DWORD PTR [rbp+0x128]
  403567:	mov    QWORD PTR [rbp+0x88],r10
  40356e:	mov    QWORD PTR [rbp+0x68],r9
  403572:	mov    QWORD PTR [rbp-0x18],rax
  403576:	je     0x4047dc
  40357c:	mov    r11,rax
  40357f:	mov    rax,QWORD PTR [rbp+0x68]
  403583:	add    r11,QWORD PTR [rbp+0x108]
  40358a:	mov    QWORD PTR [rbp+0x98],rax
  403591:	mov    rax,QWORD PTR [rbp+0x48]
  403595:	xor    ebx,ebx
  403597:	mov    DWORD PTR [rbp+0x60],0x5
  40359e:	mov    DWORD PTR [rbp+0x70],0x0
  4035a5:	mov    QWORD PTR [rbp+0x58],0x0
  4035ad:	mov    r9d,0x100
  4035b3:	mov    DWORD PTR [rbp+0x44],0x0
  4035ba:	mov    r13d,0x101
  4035c0:	mov    QWORD PTR [rbp-0x10],0x0
  4035c8:	shl    rax,0x3
  4035cc:	mov    QWORD PTR [rbp-0x8],rax
  4035d0:	lea    rax,[r10-0x1]
  4035d4:	mov    QWORD PTR [rbp+0x10],rax
  4035d8:	lea    rax,[rbp+0xa8]
  4035df:	mov    QWORD PTR [rbp-0x30],rax
  4035e3:	cmp    r14,QWORD PTR [rbp+0x90]
  4035ea:	je     0x4036a0
  4035f0:	movzx  edx,BYTE PTR [r14]
  4035f4:	lea    rax,[r14+0x1]
  4035f8:	mov    QWORD PTR [rbp+0x80],rax
  4035ff:	cmp    dl,0x1d
  403602:	ja     0x404931
  403608:	lea    rcx,[rip+0x1f6a1]        # 0x422cb0
  40360f:	movzx  eax,dl
  403612:	movsxd rax,DWORD PTR [rcx+rax*4]
  403616:	add    rax,rcx
  403619:	jmp    rax
  40361b:	movsxd r8,r8d
  40361e:	mov    r11,QWORD PTR [rbp-0x38]
  403622:	add    rdx,r8
  403625:	cmp    QWORD PTR [rbp+0x90],rax
  40362c:	mov    QWORD PTR [rbp+0xa8],rdx
  403633:	je     0x403a2e
  403639:	movzx  ecx,BYTE PTR [rax]
  40363c:	cmp    cl,0x2
  40363f:	je     0x404b5e
  403645:	cmp    cl,0xa
  403648:	jne    0x40365c
  40364a:	mov    r8,QWORD PTR [rbp+0x100]
  403651:	cmp    BYTE PTR [r8+0x30],0x0
  403656:	js     0x404e9c
  40365c:	cmp    cl,0x4
  40365f:	je     0x404f32
  403665:	cmp    BYTE PTR [r14],0x11
  403669:	je     0x403a32
  40366f:	mov    BYTE PTR [r14],0xd
  403673:	mov    rcx,QWORD PTR [rbp+0x80]
  40367a:	movsx  eax,BYTE PTR [rcx+0x1]
  40367e:	movzx  edx,BYTE PTR [rcx]
  403681:	shl    eax,0x8
  403684:	add    eax,edx
  403686:	cdqe   
  403688:	lea    r14,[rcx+rax*1+0x2]
  40368d:	cmp    r14,QWORD PTR [rbp+0x90]
  403694:	jne    0x4035f0
  40369a:	nop    WORD PTR [rax+rax*1+0x0]
  4036a0:	cmp    r11,QWORD PTR [rbp+0x88]
  4036a7:	je     0x40386d
  4036ad:	mov    r8,QWORD PTR [rbp+0x58]
  4036b1:	mov    rdx,QWORD PTR [rbp+0x78]
  4036b5:	mov    r9d,DWORD PTR [rbp+0x110]
  4036bc:	cmp    r8,rdx
  4036bf:	setbe  dl
  4036c2:	cmp    QWORD PTR [rbp+0x108],r8
  4036c9:	setbe  al
  4036cc:	and    eax,edx
  4036ce:	test   r9d,r9d
  4036d1:	mov    r9,QWORD PTR [rbp+0x68]
  4036d5:	setne  dl
  4036d8:	and    edx,eax
  4036da:	xor    edx,0x1
  4036dd:	cmp    QWORD PTR [rbp+0x98],r9
  4036e4:	sete   cl
  4036e7:	cmp    dl,cl
  4036e9:	je     0x4047f7
  4036ef:	cmp    r11,r8
  4036f2:	seta   dl
  4036f5:	test   ebx,ebx
  4036f7:	je     0x40518e
  4036fd:	test   dl,dl
  4036ff:	jne    0x40370c
  403701:	mov    ecx,DWORD PTR [rbp+0x44]
  403704:	test   ecx,ecx
  403706:	jne    0x403e18
  40370c:	cmp    QWORD PTR [rbp+0x50],0x1
  403711:	jbe    0x40373e
  403713:	mov    rcx,QWORD PTR [rbp+0x8]
  403717:	mov    r8,QWORD PTR [rbp+0x0]
  40371b:	xor    eax,eax
  40371d:	mov    r9,QWORD PTR [rbp-0x8]
  403721:	mov    rdx,QWORD PTR [rdi+rax*1+0x8]
  403726:	mov    QWORD PTR [rcx+rax*1+0x8],rdx
  40372b:	mov    rdx,QWORD PTR [r12+rax*1+0x8]
  403730:	mov    QWORD PTR [r8+rax*1+0x8],rdx
  403735:	add    rax,0x8
  403739:	cmp    rax,r9
  40373c:	jne    0x403721
  40373e:	mov    QWORD PTR [rbp+0x58],r11
  403742:	mov    DWORD PTR [rbp+0x44],0x1
  403749:	jmp    0x403e18
  40374e:	cmp    r11,QWORD PTR [rbp+0x98]
  403755:	jne    0x403789
  403757:	cmp    QWORD PTR [rbp+0x88],r11
  40375e:	je     0x404df7
  403764:	cmp    r10,QWORD PTR [rbp+0x88]
  40376b:	mov    QWORD PTR [rbp+0x98],r10
  403772:	mov    r11,r10
  403775:	je     0x403e10
  40377b:	mov    rax,QWORD PTR [rbp+0x88]
  403782:	mov    QWORD PTR [rbp+0x98],rax
  403789:	mov    rax,QWORD PTR [rbp+0x100]
  403790:	mov    edx,DWORD PTR [rax+0x10]
  403793:	test   dl,0x40
  403796:	jne    0x404da3
  40379c:	mov    rcx,QWORD PTR [rbp+0x28]
  4037a0:	test   rcx,rcx
  4037a3:	je     0x405229
  4037a9:	movzx  eax,BYTE PTR [r11]
  4037ad:	movzx  eax,BYTE PTR [rcx+rax*1]
  4037b1:	cmp    al,0xa
  4037b3:	je     0x403e10
  4037b9:	and    edx,0x80
  4037bf:	je     0x4037c9
  4037c1:	test   al,al
  4037c3:	je     0x403e10
  4037c9:	mov    eax,DWORD PTR [rbp+0x70]
  4037cc:	test   eax,eax
  4037ce:	jne    0x4037ee
  4037d0:	cmp    r13d,r9d
  4037d3:	mov    eax,r13d
  4037d6:	ja     0x4037e7
  4037d8:	mov    edx,eax
  4037da:	add    eax,0x1
  4037dd:	or     BYTE PTR [r15+rdx*8],0x18
  4037e2:	cmp    r9d,eax
  4037e5:	jae    0x4037d8
  4037e7:	mov    DWORD PTR [rbp+0x70],0x1
  4037ee:	add    r11,0x1
  4037f2:	mov    r14,QWORD PTR [rbp+0x80]
  4037f9:	jmp    0x4035e3
  4037fe:	mov    eax,DWORD PTR [rbp+0x44]
  403801:	test   eax,eax
  403803:	je     0x404ded
  403809:	mov    r11,QWORD PTR [rbp+0x58]
  40380d:	mov    rsi,QWORD PTR [rbp+0x78]
  403811:	cmp    r11,rsi
  403814:	setbe  dl
  403817:	cmp    QWORD PTR [rbp+0x108],r11
  40381e:	setbe  al
  403821:	and    eax,edx
  403823:	test   al,al
  403825:	mov    rax,QWORD PTR [rbp+0x88]
  40382c:	cmovne rax,QWORD PTR [rbp+0x68]
  403831:	cmp    QWORD PTR [rbp+0x50],0x1
  403836:	mov    QWORD PTR [rbp+0x98],rax
  40383d:	jbe    0x40386d
  40383f:	mov    rcx,QWORD PTR [rbp+0x8]
  403843:	mov    r8,QWORD PTR [rbp+0x0]
  403847:	xor    eax,eax
  403849:	mov    r9,QWORD PTR [rbp-0x8]
  40384d:	nop    DWORD PTR [rax]
  403850:	mov    rdx,QWORD PTR [rcx+rax*1+0x8]
  403855:	mov    QWORD PTR [rdi+rax*1+0x8],rdx
  40385a:	mov    rdx,QWORD PTR [r8+rax*1+0x8]
  40385f:	mov    QWORD PTR [r12+rax*1+0x8],rdx
  403864:	add    rax,0x8
  403868:	cmp    r9,rax
  40386b:	jne    0x403850
  40386d:	cmp    QWORD PTR [rbp+0x130],0x0
  403875:	je     0x40477b
  40387b:	mov    rax,QWORD PTR [rbp+0x100]
  403882:	movzx  eax,BYTE PTR [rax+0x30]
  403886:	test   al,0x10
  403888:	jne    0x40477b
  40388e:	and    eax,0x6
  403891:	je     0x404ab7
  403897:	cmp    al,0x2
  403899:	mov    rax,QWORD PTR [rbp+0x130]
  4038a0:	je     0x404e0a
  4038a6:	mov    ebx,DWORD PTR [rax]
  4038a8:	test   ebx,ebx
  4038aa:	je     0x40477b
  4038b0:	mov    rax,QWORD PTR [rbp+0x130]
  4038b7:	mov    rdx,r11
  4038ba:	mov    rbx,QWORD PTR [rbp+0x98]
  4038c1:	sub    rdx,r10
  4038c4:	mov    rcx,QWORD PTR [rbp+0x68]
  4038c8:	add    edx,DWORD PTR [rbp+0x110]
  4038ce:	mov    rsi,QWORD PTR [rax+0x8]
  4038d2:	mov    eax,DWORD PTR [rbp+0x128]
  4038d8:	mov    DWORD PTR [rsi],eax
  4038da:	mov    rax,QWORD PTR [rbp+0x130]
  4038e1:	mov    r13,QWORD PTR [rax+0x10]
  4038e5:	mov    eax,r11d
  4038e8:	sub    eax,DWORD PTR [rbp+0x108]
  4038ee:	cmp    rbx,rcx
  4038f1:	mov    rbx,QWORD PTR [rbp+0x50]
  4038f5:	cmovne eax,edx
  4038f8:	mov    DWORD PTR [r13+0x0],eax
  4038fc:	mov    rax,QWORD PTR [rbp+0x130]
  403903:	mov    eax,DWORD PTR [rax]
  403905:	cmp    rax,rbx
  403908:	mov    rdx,rax
  40390b:	cmova  rax,rbx
  40390f:	cmp    rax,0x1
  403913:	jbe    0x40473f
  403919:	lea    rax,[rip+0x23878]        # 0x427198
  403920:	mov    QWORD PTR [rbp+0x80],r11
  403927:	mov    ecx,0x4
  40392c:	mov    r8d,0x2
  403932:	mov    QWORD PTR [rbp+0x88],r12
  403939:	mov    r9,rbx
  40393c:	mov    QWORD PTR [rbp+0x90],rax
  403943:	mov    r11d,DWORD PTR [rbp+0x110]
  40394a:	jmp    0x4039b6
  40394c:	nop    DWORD PTR [rax+0x0]
  403950:	test   bl,bl
  403952:	je     0x403a08
  403958:	sub    rax,QWORD PTR [rbp+0x108]
  40395f:	lea    r12,[r13+rcx*1+0x0]
  403964:	mov    DWORD PTR [r15],eax
  403967:	cmp    QWORD PTR [rbp+0x108],rdx
  40396e:	ja     0x403a1e
  403974:	cmp    rdx,QWORD PTR [rbp+0x78]
  403978:	mov    eax,edx
  40397a:	setbe  bl
  40397d:	sub    eax,DWORD PTR [rbp+0x108]
  403983:	test   bl,bl
  403985:	je     0x403a1e
  40398b:	mov    DWORD PTR [r12],eax
  40398f:	mov    rax,QWORD PTR [rbp+0x130]
  403996:	add    rcx,0x4
  40399a:	lea    rbx,[r8+0x1]
  40399e:	mov    eax,DWORD PTR [rax]
  4039a0:	cmp    rax,r9
  4039a3:	mov    rdx,rax
  4039a6:	cmova  rax,r9
  4039aa:	cmp    rax,r8
  4039ad:	jbe    0x404738
  4039b3:	mov    r8,rbx
  4039b6:	mov    rax,QWORD PTR [rdi+rcx*2]
  4039ba:	cmp    rax,QWORD PTR [rbp+0x90]
  4039c1:	je     0x404c44
  4039c7:	mov    rbx,QWORD PTR [rbp+0x88]
  4039ce:	mov    rdx,QWORD PTR [rbx+rcx*2]
  4039d2:	lea    rbx,[rip+0x237bf]        # 0x427198
  4039d9:	cmp    rdx,rbx
  4039dc:	je     0x404c44
  4039e2:	test   r11d,r11d
  4039e5:	lea    r15,[rsi+rcx*1]
  4039e9:	setne  bl
  4039ec:	cmp    QWORD PTR [rbp+0x108],rax
  4039f3:	setbe  r14b
  4039f7:	cmp    rax,QWORD PTR [rbp+0x78]
  4039fb:	setbe  r12b
  4039ff:	test   r14b,r12b
  403a02:	jne    0x403950
  403a08:	sub    rax,r10
  403a0b:	lea    r12,[r13+rcx*1+0x0]
  403a10:	add    eax,r11d
  403a13:	test   bl,bl
  403a15:	mov    DWORD PTR [r15],eax
  403a18:	jne    0x403967
  403a1e:	sub    rdx,r10
  403a21:	lea    eax,[r11+rdx*1]
  403a25:	jmp    0x40398b
  403a2a:	mov    r9d,DWORD PTR [rbp-0x38]
  403a2e:	mov    BYTE PTR [r14],0x11
  403a32:	lea    eax,[rbx-0x3]
  403a35:	lea    ecx,[rbx-0x4]
  403a38:	mov    eax,DWORD PTR [rsi+rax*8]
  403a3b:	mov    r8d,DWORD PTR [rsi+rcx*8]
  403a3f:	cmp    eax,r8d
  403a42:	jb     0x405180
  403a48:	mov    QWORD PTR [rbp+0x70],r11
  403a4c:	sub    ebx,0x7
  403a4f:	mov    r11,QWORD PTR [rbp-0x20]
  403a53:	mov    r14,QWORD PTR [rbp-0x28]
  403a57:	jmp    0x403a62
  403a59:	nop    DWORD PTR [rax+0x0]
  403a60:	mov    ebx,edx
  403a62:	lea    ecx,[rbx+0x2]
  403a65:	mov    edx,eax
  403a67:	sub    eax,0x1
  403a6a:	cmp    r8d,eax
  403a6d:	mov    rcx,QWORD PTR [rsi+rcx*8]
  403a71:	mov    QWORD PTR [r14+rdx*8],rcx
  403a75:	mov    ecx,ebx
  403a77:	mov    rcx,QWORD PTR [rsi+rcx*8]
  403a7b:	mov    QWORD PTR [r11+rdx*8],rcx
  403a7f:	lea    edx,[rbx-0x3]
  403a82:	jbe    0x403a60
  403a84:	mov    r11,QWORD PTR [rbp+0x70]
  403a88:	mov    DWORD PTR [rbp+0x70],0x0
  403a8f:	jmp    0x403673
  403a94:	jne    0x4037f2
  403a9a:	mov    BYTE PTR [r14+0x3],0x0
  403a9f:	mov    BYTE PTR [r14+0x4],0x0
  403aa4:	movsx  eax,BYTE PTR [r14+0x2]
  403aa9:	movzx  edx,BYTE PTR [r14+0x1]
  403aae:	shl    eax,0x8
  403ab1:	add    eax,edx
  403ab3:	mov    rdx,QWORD PTR [rbp+0x90]
  403aba:	mov    DWORD PTR [rbp-0x38],eax
  403abd:	lea    rax,[r14+0x3]
  403ac1:	cmp    rdx,rax
  403ac4:	mov    QWORD PTR [rbp+0x80],rax
  403acb:	mov    QWORD PTR [rbp+0xa8],rax
  403ad2:	jbe    0x403b10
  403ad4:	movzx  eax,BYTE PTR [r14+0x3]
  403ad9:	test   al,al
  403adb:	jne    0x404c59
  403ae1:	add    r14,0x4
  403ae5:	mov    rcx,rdx
  403ae8:	jmp    0x403b01
  403aea:	nop    WORD PTR [rax+rax*1+0x0]
  403af0:	add    r14,0x1
  403af4:	movzx  eax,BYTE PTR [r14-0x1]
  403af9:	test   al,al
  403afb:	jne    0x404c60
  403b01:	cmp    r14,rcx
  403b04:	mov    rdx,r14
  403b07:	mov    QWORD PTR [rbp+0xa8],r14
  403b0e:	jne    0x403af0
  403b10:	lea    eax,[r9+0x1]
  403b14:	mov    r8d,DWORD PTR [rbp+0x60]
  403b18:	mov    rdx,rsi
  403b1b:	sub    eax,r13d
  403b1e:	lea    r14d,[rax+rax*2+0x4]
  403b23:	mov    esi,r14d
  403b26:	mov    eax,r8d
  403b29:	sub    eax,ebx
  403b2b:	cmp    eax,esi
  403b2d:	jb     0x40480a
  403b33:	cmp    r13d,r9d
  403b36:	mov    DWORD PTR [rbp+0x60],r8d
  403b3a:	mov    rsi,rdx
  403b3d:	ja     0x403b70
  403b3f:	mov    eax,r13d
  403b42:	mov    ecx,eax
  403b44:	mov    edx,ebx
  403b46:	add    eax,0x1
  403b49:	mov    r8,QWORD PTR [rdi+rcx*8]
  403b4d:	mov    r14,QWORD PTR [r12+rcx*8]
  403b51:	mov    rcx,QWORD PTR [r15+rcx*8]
  403b55:	mov    QWORD PTR [rsi+rdx*8],r8
  403b59:	lea    edx,[rbx+0x2]
  403b5c:	lea    r8d,[rbx+0x1]
  403b60:	add    ebx,0x3
  403b63:	cmp    eax,r9d
  403b66:	mov    QWORD PTR [rsi+r8*8],r14
  403b6a:	mov    QWORD PTR [rsi+rdx*8],rcx
  403b6e:	jbe    0x403b42
  403b70:	mov    eax,ebx
  403b72:	movsxd rdx,DWORD PTR [rbp-0x38]
  403b76:	mov    r8,QWORD PTR [rbp+0x80]
  403b7d:	mov    DWORD PTR [rsi+rax*8],r13d
  403b81:	lea    eax,[rbx+0x1]
  403b84:	lea    ecx,[rbx+0x2]
  403b87:	mov    DWORD PTR [rsi+rax*8],r9d
  403b8b:	lea    eax,[rbx+0x3]
  403b8e:	mov    r14,r8
  403b91:	add    rdx,r8
  403b94:	add    ebx,0x4
  403b97:	mov    QWORD PTR [rsi+rcx*8],rdx
  403b9b:	mov    QWORD PTR [rsi+rax*8],r11
  403b9f:	jmp    0x4035e3
  403ba4:	mov    r14d,DWORD PTR [rbp+0x110]
  403bab:	mov    rax,r10
  403bae:	test   r14d,r14d
  403bb1:	cmovne rax,QWORD PTR [rbp+0x108]
  403bb9:	cmp    rax,r11
  403bbc:	je     0x403e10
  403bc2:	mov    r8d,DWORD PTR [rbp+0x120]
  403bc9:	test   r8d,r8d
  403bcc:	je     0x403e10
  403bd2:	cmp    r11,QWORD PTR [rbp+0x18]
  403bd6:	je     0x403e10
  403bdc:	lea    rax,[r11-0x1]
  403be0:	cmp    QWORD PTR [rbp+0x78],rax
  403be4:	je     0x40528f
  403bea:	cmp    r11,r10
  403bed:	je     0x405282
  403bf3:	movzx  edx,BYTE PTR [r11-0x1]
  403bf8:	lea    rax,[rip+0x235c1]        # 0x4271c0
  403bff:	cmp    BYTE PTR [rax+rdx*1],0x1
  403c03:	sete   cl
  403c06:	cmp    r11,QWORD PTR [rbp+0x78]
  403c0a:	je     0x405279
  403c10:	cmp    r11,QWORD PTR [rbp+0x10]
  403c14:	je     0x40526c
  403c1a:	movzx  edx,BYTE PTR [r11]
  403c1e:	cmp    BYTE PTR [rax+rdx*1],0x1
  403c22:	sete   al
  403c25:	cmp    cl,al
  403c27:	jne    0x403e10
  403c2d:	jmp    0x4037f2
  403c32:	movsx  eax,BYTE PTR [r14+0x2]
  403c37:	movzx  edx,BYTE PTR [r14+0x1]
  403c3c:	add    r14,0x3
  403c40:	mov    r8d,DWORD PTR [rbp+0x60]
  403c44:	shl    eax,0x8
  403c47:	add    eax,edx
  403c49:	mov    rdx,rsi
  403c4c:	mov    DWORD PTR [rbp-0x38],eax
  403c4f:	lea    eax,[r9+0x1]
  403c53:	sub    eax,r13d
  403c56:	lea    eax,[rax+rax*2+0x4]
  403c5a:	mov    DWORD PTR [rbp+0x80],eax
  403c60:	mov    eax,r8d
  403c63:	sub    eax,ebx
  403c65:	cmp    eax,DWORD PTR [rbp+0x80]
  403c6b:	jb     0x404936
  403c71:	cmp    r13d,r9d
  403c74:	mov    DWORD PTR [rbp+0x60],r8d
  403c78:	mov    rsi,rdx
  403c7b:	ja     0x403cc5
  403c7d:	mov    eax,r13d
  403c80:	mov    QWORD PTR [rbp+0x118],r10
  403c87:	nop    WORD PTR [rax+rax*1+0x0]
  403c90:	mov    ecx,eax
  403c92:	mov    edx,ebx
  403c94:	add    eax,0x1
  403c97:	mov    r8,QWORD PTR [rdi+rcx*8]
  403c9b:	mov    r10,QWORD PTR [r12+rcx*8]
  403c9f:	mov    rcx,QWORD PTR [r15+rcx*8]
  403ca3:	mov    QWORD PTR [rsi+rdx*8],r8
  403ca7:	lea    edx,[rbx+0x2]
  403caa:	lea    r8d,[rbx+0x1]
  403cae:	add    ebx,0x3
  403cb1:	cmp    r9d,eax
  403cb4:	mov    QWORD PTR [rsi+r8*8],r10
  403cb8:	mov    QWORD PTR [rsi+rdx*8],rcx
  403cbc:	jae    0x403c90
  403cbe:	mov    r10,QWORD PTR [rbp+0x118]
  403cc5:	mov    eax,ebx
  403cc7:	lea    edx,[rbx+0x3]
  403cca:	lea    ecx,[rbx+0x2]
  403ccd:	mov    DWORD PTR [rsi+rax*8],r13d
  403cd1:	lea    eax,[rbx+0x1]
  403cd4:	add    ebx,0x4
  403cd7:	mov    DWORD PTR [rsi+rax*8],r9d
  403cdb:	movsxd rax,DWORD PTR [rbp-0x38]
  403cdf:	add    rax,r14
  403ce2:	mov    QWORD PTR [rsi+rcx*8],rax
  403ce6:	mov    eax,edx
  403ce8:	mov    QWORD PTR [rsi+rax*8],0x0
  403cf0:	jmp    0x4035e3
  403cf5:	movsx  eax,BYTE PTR [r14+0x4]
  403cfa:	movzx  edx,BYTE PTR [r14+0x3]
  403cff:	shl    eax,0x8
  403d02:	add    eax,edx
  403d04:	cmp    eax,0x0
  403d07:	jle    0x403a94
  403d0d:	sub    eax,0x1
  403d10:	add    r14,0x5
  403d14:	mov    BYTE PTR [r14-0x2],al
  403d18:	sar    eax,0x8
  403d1b:	mov    BYTE PTR [r14-0x1],al
  403d1f:	jmp    0x4035e3
  403d24:	lea    eax,[r9+0x1]
  403d28:	mov    r8d,DWORD PTR [rbp+0x60]
  403d2c:	mov    rdx,rsi
  403d2f:	sub    eax,r13d
  403d32:	lea    r14d,[rax+rax*2+0x4]
  403d37:	mov    eax,r8d
  403d3a:	sub    eax,ebx
  403d3c:	cmp    eax,r14d
  403d3f:	jb     0x404a0c
  403d45:	cmp    r13d,r9d
  403d48:	mov    DWORD PTR [rbp+0x60],r8d
  403d4c:	mov    rsi,rdx
  403d4f:	ja     0x403d82
  403d51:	mov    eax,r13d
  403d54:	mov    ecx,eax
  403d56:	mov    edx,ebx
  403d58:	add    eax,0x1
  403d5b:	mov    r8,QWORD PTR [rdi+rcx*8]
  403d5f:	mov    r14,QWORD PTR [r12+rcx*8]
  403d63:	mov    rcx,QWORD PTR [r15+rcx*8]
  403d67:	mov    QWORD PTR [rsi+rdx*8],r8
  403d6b:	lea    edx,[rbx+0x2]
  403d6e:	lea    r8d,[rbx+0x1]
  403d72:	add    ebx,0x3
  403d75:	cmp    r9d,eax
  403d78:	mov    QWORD PTR [rsi+r8*8],r14
  403d7c:	mov    QWORD PTR [rsi+rdx*8],rcx
  403d80:	jae    0x403d54
  403d82:	mov    eax,ebx
  403d84:	lea    edx,[rbx+0x2]
  403d87:	mov    DWORD PTR [rsi+rax*8],r13d
  403d8b:	lea    eax,[rbx+0x1]
  403d8e:	mov    DWORD PTR [rsi+rax*8],r9d
  403d92:	lea    eax,[rbx+0x3]
  403d95:	mov    QWORD PTR [rsi+rdx*8],0x0
  403d9d:	add    ebx,0x4
  403da0:	mov    QWORD PTR [rsi+rax*8],0x0
  403da8:	jmp    0x403673
  403dad:	movsx  eax,BYTE PTR [r14+0x2]
  403db2:	movzx  r8d,BYTE PTR [r14+0x1]
  403db7:	lea    rdx,[r14+0x3]
  403dbb:	mov    QWORD PTR [rbp-0x38],r11
  403dbf:	mov    r11,QWORD PTR [rbp+0x90]
  403dc6:	shl    eax,0x8
  403dc9:	add    r8d,eax
  403dcc:	mov    rax,rdx
  403dcf:	jmp    0x403dea
  403dd1:	lea    rcx,[rax+0x6]
  403dd5:	cmp    r11,rcx
  403dd8:	jbe    0x40361b
  403dde:	cmp    BYTE PTR [rax],0x13
  403de1:	jne    0x40361b
  403de7:	mov    rax,rcx
  403dea:	lea    rcx,[rax+0x2]
  403dee:	cmp    r11,rcx
  403df1:	jbe    0x403dd1
  403df3:	movzx  ecx,BYTE PTR [rax]
  403df6:	sub    ecx,0x6
  403df9:	cmp    cl,0x1
  403dfc:	ja     0x403dd1
  403dfe:	lea    rcx,[rax+0x3]
  403e02:	jmp    0x403de7
  403e04:	cmp    r11,QWORD PTR [rbp+0x18]
  403e08:	je     0x4037f2
  403e0e:	xchg   ax,ax
  403e10:	test   ebx,ebx
  403e12:	je     0x4037fe
  403e18:	lea    eax,[rbx-0x1]
  403e1b:	lea    edx,[rbx-0x4]
  403e1e:	mov    rax,QWORD PTR [rsi+rax*8]
  403e22:	mov    r13d,DWORD PTR [rsi+rdx*8]
  403e26:	test   rax,rax
  403e29:	cmovne r11,rax
  403e2d:	lea    eax,[rbx-0x2]
  403e30:	mov    r14,QWORD PTR [rsi+rax*8]
  403e34:	lea    eax,[rbx-0x3]
  403e37:	mov    r9d,DWORD PTR [rsi+rax*8]
  403e3b:	cmp    r9d,r13d
  403e3e:	jb     0x404731
  403e44:	sub    ebx,0x7
  403e47:	mov    eax,r9d
  403e4a:	jmp    0x403e52
  403e4c:	nop    DWORD PTR [rax+0x0]
  403e50:	mov    ebx,edx
  403e52:	lea    ecx,[rbx+0x2]
  403e55:	mov    edx,eax
  403e57:	sub    eax,0x1
  403e5a:	cmp    r13d,eax
  403e5d:	mov    rcx,QWORD PTR [rsi+rcx*8]
  403e61:	mov    QWORD PTR [r15+rdx*8],rcx
  403e65:	lea    ecx,[rbx+0x1]
  403e68:	mov    rcx,QWORD PTR [rsi+rcx*8]
  403e6c:	mov    QWORD PTR [r12+rdx*8],rcx
  403e70:	mov    ecx,ebx
  403e72:	mov    rcx,QWORD PTR [rsi+rcx*8]
  403e76:	mov    QWORD PTR [rdi+rdx*8],rcx
  403e7a:	lea    edx,[rbx-0x3]
  403e7d:	jbe    0x403e50
  403e7f:	test   r14,r14
  403e82:	je     0x403e10
  403e84:	cmp    QWORD PTR [rbp+0x90],r14
  403e8b:	jbe    0x403ed2
  403e8d:	movzx  eax,BYTE PTR [r14]
  403e91:	cmp    al,0x12
  403e93:	ja     0x4046f3
  403e99:	cmp    al,0x11
  403e9b:	jae    0x403ea1
  403e9d:	cmp    al,0xd
  403e9f:	jne    0x403ed2
  403ea1:	lea    rax,[r14+0x1]
  403ea5:	mov    QWORD PTR [rbp+0xa8],rax
  403eac:	movsx  eax,BYTE PTR [r14+0x2]
  403eb1:	movzx  edx,BYTE PTR [r14+0x1]
  403eb6:	shl    eax,0x8
  403eb9:	add    eax,edx
  403ebb:	cdqe   
  403ebd:	lea    rax,[r14+rax*1+0x3]
  403ec2:	mov    QWORD PTR [rbp+0xa8],rax
  403ec9:	cmp    BYTE PTR [rax],0xf
  403ecc:	je     0x403e10
  403ed2:	cmp    r11,QWORD PTR [rbp+0x78]
  403ed6:	ja     0x404190
  403edc:	cmp    QWORD PTR [rbp+0x108],r11
  403ee3:	ja     0x404190
  403ee9:	mov    rax,QWORD PTR [rbp+0x68]
  403eed:	mov    DWORD PTR [rbp+0x70],0x0
  403ef4:	mov    QWORD PTR [rbp+0x98],rax
  403efb:	jmp    0x4035e3
  403f00:	mov    eax,DWORD PTR [rbp+0x110]
  403f06:	test   eax,eax
  403f08:	mov    rax,r10
  403f0b:	cmovne rax,QWORD PTR [rbp+0x108]
  403f13:	cmp    r11,rax
  403f16:	je     0x4037f2
  403f1c:	mov    eax,DWORD PTR [rbp+0x120]
  403f22:	test   eax,eax
  403f24:	jne    0x403e10
  403f2a:	jmp    0x4037f2
  403f2f:	mov    eax,DWORD PTR [rbp+0x110]
  403f35:	test   eax,eax
  403f37:	mov    rax,r10
  403f3a:	cmovne rax,QWORD PTR [rbp+0x108]
  403f42:	cmp    rax,r11
  403f45:	je     0x4037f2
  403f4b:	mov    eax,DWORD PTR [rbp+0x120]
  403f51:	test   eax,eax
  403f53:	je     0x4037f2
  403f59:	cmp    r11,QWORD PTR [rbp+0x18]
  403f5d:	je     0x4037f2
  403f63:	lea    rax,[r11-0x1]
  403f67:	cmp    QWORD PTR [rbp+0x78],rax
  403f6b:	je     0x405263
  403f71:	cmp    r11,r10
  403f74:	je     0x405256
  403f7a:	movzx  edx,BYTE PTR [r11-0x1]
  403f7f:	lea    rax,[rip+0x2323a]        # 0x4271c0
  403f86:	cmp    BYTE PTR [rax+rdx*1],0x1
  403f8a:	sete   cl
  403f8d:	cmp    r11,QWORD PTR [rbp+0x78]
  403f91:	je     0x40524d
  403f97:	cmp    r11,QWORD PTR [rbp+0x10]
  403f9b:	je     0x405240
  403fa1:	movzx  edx,BYTE PTR [r11]
  403fa5:	cmp    BYTE PTR [rax+rdx*1],0x1
  403fa9:	mov    r14,QWORD PTR [rbp+0x80]
  403fb0:	sete   al
  403fb3:	cmp    cl,al
  403fb5:	jne    0x4035e3
  403fbb:	jmp    0x403e10
  403fc0:	cmp    r11,QWORD PTR [rbp+0x18]
  403fc4:	je     0x404fcc
  403fca:	cmp    r11,QWORD PTR [rbp+0x78]
  403fce:	je     0x404fc0
  403fd4:	cmp    BYTE PTR [r11],0xa
  403fd8:	sete   al
  403fdb:	test   al,al
  403fdd:	je     0x403e10
  403fe3:	jmp    0x40401a
  403fe5:	mov    edx,DWORD PTR [rbp+0x110]
  403feb:	mov    rax,r10
  403fee:	test   edx,edx
  403ff0:	cmovne rax,QWORD PTR [rbp+0x108]
  403ff8:	cmp    r11,rax
  403ffb:	je     0x404aa1
  404001:	mov    eax,DWORD PTR [rbp+0x120]
  404007:	test   eax,eax
  404009:	je     0x404aa1
  40400f:	cmp    BYTE PTR [r11-0x1],0xa
  404014:	jne    0x403e10
  40401a:	mov    rax,QWORD PTR [rbp+0x100]
  404021:	cmp    BYTE PTR [rax+0x30],0x0
  404025:	js     0x4037f2
  40402b:	jmp    0x403e10
  404030:	movzx  edx,BYTE PTR [r14+0x1]
  404035:	mov    rax,QWORD PTR [rdi+rdx*8]
  404039:	mov    rcx,rax
  40403c:	mov    QWORD PTR [rbp-0x40],rax
  404040:	lea    rax,[rip+0x23151]        # 0x427198
  404047:	cmp    rcx,rax
  40404a:	je     0x403e10
  404050:	mov    rdx,QWORD PTR [r12+rdx*8]
  404054:	cmp    rdx,rax
  404057:	mov    QWORD PTR [rbp-0x38],rdx
  40405b:	je     0x403e10
  404061:	mov    r8d,DWORD PTR [rbp+0x110]
  404068:	mov    rax,rcx
  40406b:	test   r8d,r8d
  40406e:	setne  dl
  404071:	cmp    QWORD PTR [rbp+0x108],rcx
  404078:	setbe  cl
  40407b:	cmp    rax,QWORD PTR [rbp+0x78]
  40407f:	setbe  al
  404082:	test   cl,al
  404084:	je     0x404c20
  40408a:	test   dl,dl
  40408c:	je     0x404c28
  404092:	xor    edx,edx
  404094:	mov    r8,QWORD PTR [rbp-0x38]
  404098:	cmp    QWORD PTR [rbp+0x108],r8
  40409f:	mov    DWORD PTR [rbp-0x48],r13d
  4040a3:	mov    r13,QWORD PTR [rbp-0x40]
  4040a7:	mov    QWORD PTR [rbp-0x40],r14
  4040ab:	setbe  cl
  4040ae:	cmp    r8,QWORD PTR [rbp+0x78]
  4040b2:	setbe  al
  4040b5:	and    eax,ecx
  4040b7:	cmp    al,dl
  4040b9:	mov    rdx,QWORD PTR [rbp+0x68]
  4040bd:	cmovne rdx,r8
  4040c1:	mov    QWORD PTR [rbp+0x80],rdx
  4040c8:	cmp    r13,QWORD PTR [rbp+0x80]
  4040cf:	je     0x404ea6
  4040d5:	cmp    r11,QWORD PTR [rbp+0x98]
  4040dc:	jne    0x404c95
  4040e2:	cmp    QWORD PTR [rbp+0x88],r11
  4040e9:	je     0x404df7
  4040ef:	cmp    r10,QWORD PTR [rbp+0x88]
  4040f6:	jne    0x404c84
  4040fc:	mov    QWORD PTR [rbp+0x98],r10
  404103:	mov    r11,r10
  404106:	jmp    0x403e10
  40410b:	movzx  eax,BYTE PTR [r14+0x1]
  404110:	mov    rdx,QWORD PTR [rbp+0x30]
  404114:	shl    rax,0x3
  404118:	add    rdx,rax
  40411b:	mov    QWORD PTR [rbp+0x80],rdx
  404122:	lea    rdx,[r15+rax*1]
  404126:	add    rax,r12
  404129:	mov    rcx,QWORD PTR [rax]
  40412c:	test   BYTE PTR [rdx],0x3
  40412f:	jne    0x404a85
  404135:	mov    r8,QWORD PTR [rbp+0x80]
  40413c:	and    BYTE PTR [rdx],0xfb
  40413f:	cmp    r13d,r9d
  404142:	mov    QWORD PTR [rax],r11
  404145:	movzx  edx,BYTE PTR [r14+0x1]
  40414a:	mov    QWORD PTR [r8],rcx
  40414d:	je     0x404169
  40414f:	mov    r9d,edx
  404152:	jmp    0x404163
  404154:	movzx  eax,r9b
  404158:	test   BYTE PTR [r15+rax*8],0x4
  40415d:	jne    0x404dc9
  404163:	sub    r9b,0x1
  404167:	jne    0x404154
  404169:	mov    r9d,0x100
  40416f:	mov    r13d,0x101
  404175:	cmp    r14,QWORD PTR [rbp-0x10]
  404179:	je     0x404d4b
  40417f:	test   BYTE PTR [r15+rdx*8],0x8
  404184:	je     0x404d4b
  40418a:	add    r14,0x3
  40418e:	xchg   ax,ax
  404190:	mov    DWORD PTR [rbp+0x70],0x0
  404197:	jmp    0x4035e3
  40419c:	mov    rax,QWORD PTR [rbp+0x80]
  4041a3:	mov    QWORD PTR [rbp+0xa8],rax
  4041aa:	movzx  eax,BYTE PTR [r14+0x1]
  4041af:	shl    rax,0x3
  4041b3:	lea    r9,[r15+rax*1]
  4041b7:	movzx  ecx,BYTE PTR [r9]
  4041bb:	and    ecx,0x3
  4041be:	cmp    cl,0x3
  4041c1:	je     0x404ed9
  4041c7:	mov    rdx,QWORD PTR [rbp+0x38]
  4041cb:	add    rdx,rax
  4041ce:	add    rax,rdi
  4041d1:	test   cl,cl
  4041d3:	mov    rcx,QWORD PTR [rax]
  4041d6:	je     0x4041e6
  4041d8:	lea    r8,[rip+0x22fb9]        # 0x427198
  4041df:	cmp    rcx,r8
  4041e2:	cmove  rcx,r11
  4041e6:	or     BYTE PTR [r9],0x4
  4041ea:	mov    QWORD PTR [rax],r11
  4041ed:	movzx  eax,BYTE PTR [r14+0x1]
  4041f2:	mov    QWORD PTR [rdx],rcx
  4041f5:	mov    DWORD PTR [rbp+0x70],0x0
  4041fc:	and    BYTE PTR [r15+rax*8],0xf7
  404201:	cmp    r13d,0x101
  404208:	movzx  r9d,BYTE PTR [r14+0x1]
  40420d:	cmove  r13d,r9d
  404211:	add    r14,0x3
  404215:	mov    QWORD PTR [rbp-0x10],r14
  404219:	jmp    0x4035e3
  40421e:	mov    r14d,DWORD PTR [rbp+0x110]
  404225:	mov    rax,r10
  404228:	test   r14d,r14d
  40422b:	cmovne rax,QWORD PTR [rbp+0x108]
  404233:	cmp    r11,rax
  404236:	je     0x403e10
  40423c:	mov    r8d,DWORD PTR [rbp+0x120]
  404243:	test   r8d,r8d
  404246:	je     0x403e10
  40424c:	lea    rax,[r11-0x1]
  404250:	cmp    QWORD PTR [rbp+0x78],rax
  404254:	je     0x4051f5
  40425a:	cmp    r11,r10
  40425d:	je     0x4051e8
  404263:	movzx  edx,BYTE PTR [r11-0x1]
  404268:	lea    rax,[rip+0x22f51]        # 0x4271c0
  40426f:	cmp    BYTE PTR [rax+rdx*1],0x1
  404273:	jne    0x403e10
  404279:	cmp    r11,QWORD PTR [rbp+0x18]
  40427d:	je     0x4037f2
  404283:	cmp    r11,QWORD PTR [rbp+0x78]
  404287:	je     0x405320
  40428d:	cmp    r11,QWORD PTR [rbp+0x10]
  404291:	je     0x4052fb
  404297:	movzx  edx,BYTE PTR [r11]
  40429b:	jmp    0x404639
  4042a0:	cmp    QWORD PTR [rbp+0x28],0x0
  4042a5:	lea    rdx,[r14+0x2]
  4042a9:	movzx  eax,BYTE PTR [r14+0x1]
  4042ae:	mov    rcx,r11
  4042b1:	je     0x404bd0
  4042b7:	mov    r8,QWORD PTR [rbp+0x98]
  4042be:	mov    DWORD PTR [rbp+0x80],r9d
  4042c5:	cmp    r11,r8
  4042c8:	je     0x404dd2
  4042ce:	movzx  ecx,BYTE PTR [rcx]
  4042d1:	mov    r9,QWORD PTR [rbp+0x28]
  4042d5:	lea    r14,[rdx+0x1]
  4042d9:	movzx  edx,BYTE PTR [rdx]
  4042dc:	add    r11,0x1
  4042e0:	cmp    BYTE PTR [r9+rcx*1],dl
  4042e4:	jne    0x4051d3
  4042ea:	sub    eax,0x1
  4042ed:	jne    0x404a7a
  4042f3:	mov    r9d,DWORD PTR [rbp+0x80]
  4042fa:	mov    QWORD PTR [rbp+0x98],r8
  404301:	mov    eax,DWORD PTR [rbp+0x70]
  404304:	test   eax,eax
  404306:	jne    0x4035e3
  40430c:	cmp    r13d,r9d
  40430f:	ja     0x404323
  404311:	mov    eax,r13d
  404314:	mov    edx,eax
  404316:	add    eax,0x1
  404319:	or     BYTE PTR [r15+rdx*8],0x18
  40431e:	cmp    r9d,eax
  404321:	jae    0x404314
  404323:	mov    DWORD PTR [rbp+0x70],0x1
  40432a:	jmp    0x4035e3
  40432f:	cmp    dl,0x5
  404332:	sete   dl
  404335:	cmp    r11,QWORD PTR [rbp+0x98]
  40433c:	mov    BYTE PTR [rbp-0x38],dl
  40433f:	jne    0x40436b
  404341:	mov    rax,QWORD PTR [rbp+0x88]
  404348:	cmp    rax,r11
  40434b:	je     0x404df7
  404351:	cmp    r10,rax
  404354:	mov    QWORD PTR [rbp+0x98],r10
  40435b:	mov    r11,r10
  40435e:	je     0x403e10
  404364:	mov    QWORD PTR [rbp+0x98],rax
  40436b:	mov    rcx,QWORD PTR [rbp+0x28]
  40436f:	test   rcx,rcx
  404372:	je     0x4051b8
  404378:	movzx  eax,BYTE PTR [r11]
  40437c:	movzx  eax,BYTE PTR [rcx+rax*1]
  404380:	movzx  r14d,BYTE PTR [r14+0x1]
  404385:	movzx  ecx,al
  404388:	lea    r8d,[r14*8+0x0]
  404390:	cmp    ecx,r8d
  404393:	jae    0x4043c4
  404395:	mov    ecx,eax
  404397:	mov    r8,QWORD PTR [rbp+0x80]
  40439e:	and    eax,0x7
  4043a1:	shr    cl,0x3
  4043a4:	add    rcx,0x1
  4043a8:	and    ecx,0x3f
  4043ab:	movzx  r8d,BYTE PTR [r8+rcx*1]
  4043b0:	mov    ecx,eax
  4043b2:	mov    eax,edx
  4043b4:	xor    eax,0x1
  4043b7:	sar    r8d,cl
  4043ba:	and    r8d,0x1
  4043be:	cmovne edx,eax
  4043c1:	mov    BYTE PTR [rbp-0x38],dl
  4043c4:	cmp    BYTE PTR [rbp-0x38],0x0
  4043c8:	je     0x403e10
  4043ce:	mov    eax,DWORD PTR [rbp+0x70]
  4043d1:	test   eax,eax
  4043d3:	jne    0x4043f3
  4043d5:	cmp    r13d,r9d
  4043d8:	mov    eax,r13d
  4043db:	ja     0x4043ec
  4043dd:	mov    edx,eax
  4043df:	add    eax,0x1
  4043e2:	or     BYTE PTR [r15+rdx*8],0x18
  4043e7:	cmp    r9d,eax
  4043ea:	jae    0x4043dd
  4043ec:	mov    DWORD PTR [rbp+0x70],0x1
  4043f3:	add    r14d,0x1
  4043f7:	add    r11,0x1
  4043fb:	movsxd r14,r14d
  4043fe:	add    r14,QWORD PTR [rbp+0x80]
  404405:	jmp    0x4035e3
  40440a:	lea    eax,[r9+0x1]
  40440e:	mov    r8d,DWORD PTR [rbp+0x60]
  404412:	mov    rdx,rsi
  404415:	sub    eax,r13d
  404418:	lea    r14d,[rax+rax*2+0x4]
  40441d:	mov    eax,r8d
  404420:	sub    eax,ebx
  404422:	cmp    eax,r14d
  404425:	jb     0x4049a6
  40442b:	cmp    r13d,r9d
  40442e:	mov    DWORD PTR [rbp+0x60],r8d
  404432:	mov    rsi,rdx
  404435:	ja     0x40446e
  404437:	mov    eax,r13d
  40443a:	nop    WORD PTR [rax+rax*1+0x0]
  404440:	mov    ecx,eax
  404442:	mov    edx,ebx
  404444:	add    eax,0x1
  404447:	mov    r8,QWORD PTR [rdi+rcx*8]
  40444b:	mov    r14,QWORD PTR [r12+rcx*8]
  40444f:	mov    rcx,QWORD PTR [r15+rcx*8]
  404453:	mov    QWORD PTR [rsi+rdx*8],r8
  404457:	lea    edx,[rbx+0x2]
  40445a:	lea    r8d,[rbx+0x1]
  40445e:	add    ebx,0x3
  404461:	cmp    r9d,eax
  404464:	mov    QWORD PTR [rsi+r8*8],r14
  404468:	mov    QWORD PTR [rsi+rdx*8],rcx
  40446c:	jae    0x404440
  40446e:	mov    eax,ebx
  404470:	lea    edx,[rbx+0x2]
  404473:	mov    r14,QWORD PTR [rbp+0x80]
  40447a:	mov    DWORD PTR [rsi+rax*8],r13d
  40447e:	lea    eax,[rbx+0x1]
  404481:	mov    DWORD PTR [rsi+rax*8],r9d
  404485:	lea    eax,[rbx+0x3]
  404488:	mov    QWORD PTR [rsi+rdx*8],0x0
  404490:	add    ebx,0x4
  404493:	mov    QWORD PTR [rsi+rax*8],0x0
  40449b:	jmp    0x4035e3
  4044a0:	cmp    r11,QWORD PTR [rbp+0x98]
  4044a7:	jne    0x4044db
  4044a9:	cmp    QWORD PTR [rbp+0x88],r11
  4044b0:	je     0x404df7
  4044b6:	cmp    r10,QWORD PTR [rbp+0x88]
  4044bd:	mov    QWORD PTR [rbp+0x98],r10
  4044c4:	mov    r11,r10
  4044c7:	je     0x403e10
  4044cd:	mov    rax,QWORD PTR [rbp+0x88]
  4044d4:	mov    QWORD PTR [rbp+0x98],rax
  4044db:	cmp    r11,QWORD PTR [rbp+0x78]
  4044df:	je     0x4051c1
  4044e5:	cmp    r11,QWORD PTR [rbp+0x10]
  4044e9:	je     0x40520f
  4044ef:	movzx  eax,BYTE PTR [r11]
  4044f3:	lea    rdx,[rip+0x22cc6]        # 0x4271c0
  4044fa:	cmp    BYTE PTR [rdx+rax*1],0x1
  4044fe:	je     0x403e10
  404504:	mov    edx,DWORD PTR [rbp+0x70]
  404507:	test   edx,edx
  404509:	jne    0x4037ee
  40450f:	cmp    r13d,r9d
  404512:	mov    eax,r13d
  404515:	ja     0x4037e7
  40451b:	mov    edx,eax
  40451d:	add    eax,0x1
  404520:	or     BYTE PTR [r15+rdx*8],0x18
  404525:	cmp    r9d,eax
  404528:	jae    0x40451b
  40452a:	jmp    0x4037e7
  40452f:	cmp    r11,QWORD PTR [rbp+0x98]
  404536:	jne    0x40456a
  404538:	cmp    QWORD PTR [rbp+0x88],r11
  40453f:	je     0x404df7
  404545:	cmp    r10,QWORD PTR [rbp+0x88]
  40454c:	mov    QWORD PTR [rbp+0x98],r10
  404553:	mov    r11,r10
  404556:	je     0x403e10
  40455c:	mov    rax,QWORD PTR [rbp+0x88]
  404563:	mov    QWORD PTR [rbp+0x98],rax
  40456a:	cmp    r11,QWORD PTR [rbp+0x78]
  40456e:	je     0x4051ca
  404574:	cmp    r11,QWORD PTR [rbp+0x10]
  404578:	je     0x40521c
  40457e:	movzx  eax,BYTE PTR [r11]
  404582:	lea    rdx,[rip+0x22c37]        # 0x4271c0
  404589:	cmp    BYTE PTR [rdx+rax*1],0x1
  40458d:	jne    0x403e10
  404593:	mov    ecx,DWORD PTR [rbp+0x70]
  404596:	test   ecx,ecx
  404598:	jne    0x4037ee
  40459e:	cmp    r13d,r9d
  4045a1:	mov    eax,r13d
  4045a4:	ja     0x4037e7
  4045aa:	mov    edx,eax
  4045ac:	add    eax,0x1
  4045af:	or     BYTE PTR [r15+rdx*8],0x18
  4045b4:	cmp    r9d,eax
  4045b7:	jae    0x4045aa
  4045b9:	jmp    0x4037e7
  4045be:	xchg   ax,ax
  4045c0:	cmp    r11,QWORD PTR [rbp+0x18]
  4045c4:	je     0x403e10
  4045ca:	cmp    r11,QWORD PTR [rbp+0x78]
  4045ce:	je     0x404ed0
  4045d4:	cmp    r11,QWORD PTR [rbp+0x10]
  4045d8:	je     0x4050f5
  4045de:	movzx  edx,BYTE PTR [r11]
  4045e2:	lea    rax,[rip+0x22bd7]        # 0x4271c0
  4045e9:	cmp    BYTE PTR [rax+rdx*1],0x1
  4045ed:	jne    0x403e10
  4045f3:	mov    ecx,DWORD PTR [rbp+0x110]
  4045f9:	mov    rdx,r10
  4045fc:	test   ecx,ecx
  4045fe:	cmovne rdx,QWORD PTR [rbp+0x108]
  404606:	cmp    r11,rdx
  404609:	je     0x4037f2
  40460f:	mov    edx,DWORD PTR [rbp+0x120]
  404615:	test   edx,edx
  404617:	je     0x4037f2
  40461d:	lea    rdx,[r11-0x1]
  404621:	cmp    QWORD PTR [rbp+0x78],rdx
  404625:	je     0x405320
  40462b:	cmp    r11,r10
  40462e:	je     0x4052fb
  404634:	movzx  edx,BYTE PTR [r11-0x1]
  404639:	cmp    BYTE PTR [rax+rdx*1],0x1
  40463d:	mov    r14,QWORD PTR [rbp+0x80]
  404644:	jne    0x4035e3
  40464a:	jmp    0x403e10
  40464f:	nop
  404650:	movsx  eax,BYTE PTR [r14+0x2]
  404655:	movzx  edx,BYTE PTR [r14+0x1]
  40465a:	shl    eax,0x8
  40465d:	add    eax,edx
  40465f:	cdqe   
  404661:	lea    rcx,[r14+rax*1+0x3]
  404666:	add    r14,0x5
  40466a:	mov    QWORD PTR [rbp+0xa8],rcx
  404671:	movsx  eax,BYTE PTR [r14-0x1]
  404676:	movzx  edx,BYTE PTR [r14-0x2]
  40467b:	shl    eax,0x8
  40467e:	add    eax,edx
  404680:	mov    BYTE PTR [rcx],al
  404682:	mov    rdx,QWORD PTR [rbp+0xa8]
  404689:	sar    eax,0x8
  40468c:	mov    BYTE PTR [rdx+0x1],al
  40468f:	jmp    0x4035e3
  404694:	movsx  edx,BYTE PTR [r14+0x4]
  404699:	movzx  eax,BYTE PTR [r14+0x3]
  40469e:	shl    edx,0x8
  4046a1:	add    eax,edx
  4046a3:	je     0x404a98
  4046a9:	sub    eax,0x1
  4046ac:	mov    BYTE PTR [r14+0x3],al
  4046b0:	sar    eax,0x8
  4046b3:	mov    BYTE PTR [r14+0x4],al
  4046b7:	jmp    0x403673
  4046bc:	movsxd rax,DWORD PTR [rbp+0x110]
  4046c3:	mov    rbx,rax
  4046c6:	mov    QWORD PTR [rbp+0x20],rax
  4046ca:	mov    eax,DWORD PTR [rbp+0x110]
  4046d0:	cmp    DWORD PTR [rbp+0x128],eax
  4046d6:	setle  dl
  4046d9:	test   eax,eax
  4046db:	setg   al
  4046de:	and    eax,edx
  4046e0:	mov    rdx,QWORD PTR [rbp+0x108]
  4046e7:	add    rbx,rdx
  4046ea:	mov    QWORD PTR [rbp+0x78],rbx
  4046ee:	jmp    0x40353b
  4046f3:	cmp    al,0x16
  4046f5:	jne    0x403ed2
  4046fb:	lea    rax,[r14+0x1]
  4046ff:	mov    QWORD PTR [rbp+0xa8],rax
  404706:	movsx  eax,BYTE PTR [r14+0x2]
  40470b:	movzx  edx,BYTE PTR [r14+0x1]
  404710:	shl    eax,0x8
  404713:	add    eax,edx
  404715:	cdqe   
  404717:	lea    rax,[r14+rax*1+0x3]
  40471c:	mov    QWORD PTR [rbp+0xa8],rax
  404723:	cmp    BYTE PTR [rax],0x15
  404726:	jne    0x403ed2
  40472c:	jmp    0x403e10
  404731:	mov    ebx,edx
  404733:	jmp    0x403e7f
  404738:	mov    r11,QWORD PTR [rbp+0x80]
  40473f:	mov    rax,QWORD PTR [rbp+0x50]
  404743:	cmp    edx,eax
  404745:	mov    ecx,eax
  404747:	jbe    0x40477b
  404749:	cdqe   
  40474b:	mov    rdx,QWORD PTR [rbp+0x130]
  404752:	shl    rax,0x2
  404756:	add    r13,rax
  404759:	add    rsi,rax
  40475c:	xor    eax,eax
  40475e:	xchg   ax,ax
  404760:	mov    DWORD PTR [r13+rax*1+0x0],0xffffffff
  404769:	add    ecx,0x1
  40476c:	mov    DWORD PTR [rsi+rax*1],0xffffffff
  404773:	add    rax,0x4
  404777:	cmp    ecx,DWORD PTR [rdx]
  404779:	jb     0x404760
  40477b:	mov    rax,r11
  40477e:	mov    rdx,r10
  404781:	sub    rax,QWORD PTR [rbp-0x18]
  404785:	sub    rdx,QWORD PTR [rbp+0x20]
  404789:	mov    rsi,QWORD PTR [rbp+0x68]
  40478d:	cmp    QWORD PTR [rbp+0x98],rsi
  404794:	cmove  rdx,QWORD PTR [rbp+0x108]
  40479c:	sub    eax,edx
  40479e:	lea    rsp,[rbp+0xb8]
  4047a5:	pop    rbx
  4047a6:	pop    rsi
  4047a7:	pop    rdi
  4047a8:	pop    r12
  4047aa:	pop    r13
  4047ac:	pop    r14
  4047ae:	pop    r15
  4047b0:	pop    rbp
  4047b1:	ret    
  4047b2:	sub    r9,QWORD PTR [rbp+0x20]
  4047b6:	test   al,al
  4047b8:	movsxd rax,DWORD PTR [rbp+0x128]
  4047bf:	lea    rbx,[r10+r9*1]
  4047c3:	mov    QWORD PTR [rbp-0x18],rax
  4047c7:	mov    QWORD PTR [rbp+0x88],rbx
  4047ce:	mov    rbx,QWORD PTR [rbp+0x78]
  4047d2:	mov    QWORD PTR [rbp+0x68],rbx
  4047d6:	jne    0x40357c
  4047dc:	sub    rax,QWORD PTR [rbp+0x20]
  4047e0:	lea    r11,[r10+rax*1]
  4047e4:	mov    rax,QWORD PTR [rbp+0x88]
  4047eb:	mov    QWORD PTR [rbp+0x98],rax
  4047f2:	jmp    0x403591
  4047f7:	mov    rcx,QWORD PTR [rbp+0x68]
  4047fb:	cmp    QWORD PTR [rbp+0x98],rcx
  404802:	setne  dl
  404805:	jmp    0x4036f5
  40480a:	mov    eax,DWORD PTR [rip+0xe800]        # 0x413010
  404810:	mov    QWORD PTR [rbp-0x48],r10
  404814:	mov    DWORD PTR [rbp-0x40],r9d
  404818:	mov    QWORD PTR [rbp+0x60],r11
  40481c:	lea    ecx,[rax+rax*8]
  40481f:	lea    eax,[rax+rcx*2]
  404822:	cmp    eax,r8d
  404825:	jb     0x40499c
  40482b:	lea    eax,[r8+r8*1]
  40482f:	mov    r14,rax
  404832:	lea    rax,[rax*8+0x1e]
  40483a:	shr    rax,0x4
  40483e:	shl    rax,0x4
  404842:	call   0x40a550
  404847:	sub    rsp,rax
  40484a:	shl    r8,0x3
  40484e:	lea    rcx,[rsp+0x20]
  404853:	call   0x40a870
  404858:	test   rax,rax
  40485b:	mov    rdx,rax
  40485e:	mov    r11,QWORD PTR [rbp+0x60]
  404862:	mov    r9d,DWORD PTR [rbp-0x40]
  404866:	mov    r10,QWORD PTR [rbp-0x48]
  40486a:	je     0x40499c
  404870:	mov    r8d,r14d
  404873:	jmp    0x403b26
  404878:	lea    rdx,[rdi*8+0x1e]
  404880:	and    rdx,0xfffffffffffffff0
  404884:	mov    rax,rdx
  404887:	call   0x40a550
  40488c:	sub    rsp,rax
  40488f:	mov    rax,rdx
  404892:	lea    rdi,[rsp+0x20]
  404897:	call   0x40a550
  40489c:	sub    rsp,rax
  40489f:	mov    rax,rdx
  4048a2:	lea    r12,[rsp+0x20]
  4048a7:	call   0x40a550
  4048ac:	sub    rsp,rax
  4048af:	lea    rax,[rsp+0x20]
  4048b4:	mov    QWORD PTR [rbp+0x38],rax
  4048b8:	mov    rax,rdx
  4048bb:	call   0x40a550
  4048c0:	sub    rsp,rax
  4048c3:	lea    rax,[rsp+0x20]
  4048c8:	mov    QWORD PTR [rbp+0x30],rax
  4048cc:	mov    rax,rdx
  4048cf:	call   0x40a550
  4048d4:	sub    rsp,rax
  4048d7:	lea    rax,[rsp+0x20]
  4048dc:	mov    QWORD PTR [rbp+0x8],rax
  4048e0:	mov    rax,rdx
  4048e3:	call   0x40a550
  4048e8:	sub    rsp,rax
  4048eb:	lea    rax,[rsp+0x20]
  4048f0:	mov    QWORD PTR [rbp+0x0],rax
  4048f4:	mov    rax,rdx
  4048f7:	call   0x40a550
  4048fc:	sub    rsp,rax
  4048ff:	mov    rax,rdx
  404902:	lea    r15,[rsp+0x20]
  404907:	call   0x40a550
  40490c:	sub    rsp,rax
  40490f:	lea    rax,[rsp+0x20]
  404914:	mov    QWORD PTR [rbp-0x20],rax
  404918:	mov    rax,rdx
  40491b:	call   0x40a550
  404920:	sub    rsp,rax
  404923:	lea    rax,[rsp+0x20]
  404928:	mov    QWORD PTR [rbp-0x28],rax
  40492c:	jmp    0x40346c
  404931:	call   0x40a948
  404936:	mov    eax,DWORD PTR [rip+0xe6d4]        # 0x413010
  40493c:	mov    QWORD PTR [rbp-0x48],r10
  404940:	mov    DWORD PTR [rbp-0x40],r9d
  404944:	mov    QWORD PTR [rbp+0x60],r11
  404948:	lea    ecx,[rax+rax*8]
  40494b:	lea    eax,[rax+rcx*2]
  40494e:	cmp    eax,r8d
  404951:	jb     0x40499c
  404953:	lea    eax,[r8+r8*1]
  404957:	mov    rsi,rax
  40495a:	lea    rax,[rax*8+0x1e]
  404962:	shr    rax,0x4
  404966:	shl    rax,0x4
  40496a:	call   0x40a550
  40496f:	sub    rsp,rax
  404972:	shl    r8,0x3
  404976:	lea    rcx,[rsp+0x20]
  40497b:	call   0x40a870
  404980:	test   rax,rax
  404983:	mov    rdx,rax
  404986:	je     0x40499c
  404988:	mov    r8d,esi
  40498b:	mov    r10,QWORD PTR [rbp-0x48]
  40498f:	mov    r9d,DWORD PTR [rbp-0x40]
  404993:	mov    r11,QWORD PTR [rbp+0x60]
  404997:	jmp    0x403c60
  40499c:	mov    eax,0xfffffffe
  4049a1:	jmp    0x40479e
  4049a6:	mov    eax,DWORD PTR [rip+0xe664]        # 0x413010
  4049ac:	mov    QWORD PTR [rbp-0x40],r10
  4049b0:	mov    DWORD PTR [rbp-0x38],r9d
  4049b4:	mov    QWORD PTR [rbp+0x60],r11
  4049b8:	lea    ecx,[rax+rax*8]
  4049bb:	lea    eax,[rax+rcx*2]
  4049be:	cmp    r8d,eax
  4049c1:	ja     0x40499c
  4049c3:	lea    eax,[r8+r8*1]
  4049c7:	mov    rsi,rax
  4049ca:	lea    rax,[rax*8+0x1e]
  4049d2:	shr    rax,0x4
  4049d6:	shl    rax,0x4
  4049da:	call   0x40a550
  4049df:	sub    rsp,rax
  4049e2:	shl    r8,0x3
  4049e6:	lea    rcx,[rsp+0x20]
  4049eb:	call   0x40a870
  4049f0:	test   rax,rax
  4049f3:	mov    rdx,rax
  4049f6:	je     0x40499c
  4049f8:	mov    r8d,esi
  4049fb:	mov    r10,QWORD PTR [rbp-0x40]
  4049ff:	mov    r9d,DWORD PTR [rbp-0x38]
  404a03:	mov    r11,QWORD PTR [rbp+0x60]
  404a07:	jmp    0x40441d
  404a0c:	mov    eax,DWORD PTR [rip+0xe5fe]        # 0x413010
  404a12:	mov    QWORD PTR [rbp-0x40],r10
  404a16:	mov    DWORD PTR [rbp-0x38],r9d
  404a1a:	mov    QWORD PTR [rbp+0x60],r11
  404a1e:	lea    ecx,[rax+rax*8]
  404a21:	lea    eax,[rax+rcx*2]
  404a24:	cmp    r8d,eax
  404a27:	ja     0x40499c
  404a2d:	lea    eax,[r8+r8*1]
  404a31:	mov    rsi,rax
  404a34:	lea    rax,[rax*8+0x1e]
  404a3c:	shr    rax,0x4
  404a40:	shl    rax,0x4
  404a44:	call   0x40a550
  404a49:	sub    rsp,rax
  404a4c:	shl    r8,0x3
  404a50:	lea    rcx,[rsp+0x20]
  404a55:	call   0x40a870
  404a5a:	test   rax,rax
  404a5d:	mov    rdx,rax
  404a60:	je     0x40499c
  404a66:	mov    r8d,esi
  404a69:	mov    r10,QWORD PTR [rbp-0x40]
  404a6d:	mov    r9d,DWORD PTR [rbp-0x38]
  404a71:	mov    r11,QWORD PTR [rbp+0x60]
  404a75:	jmp    0x403d37
  404a7a:	mov    rdx,r14
  404a7d:	mov    rcx,r11
  404a80:	jmp    0x4042c5
  404a85:	lea    r8,[rip+0x2270c]        # 0x427198
  404a8c:	cmp    rcx,r8
  404a8f:	cmove  rcx,r11
  404a93:	jmp    0x404135
  404a98:	add    r14,0x5
  404a9c:	jmp    0x4035e3
  404aa1:	mov    rax,QWORD PTR [rbp+0x100]
  404aa8:	test   BYTE PTR [rax+0x30],0x20
  404aac:	je     0x4037f2
  404ab2:	jmp    0x403e10
  404ab7:	mov    rax,QWORD PTR [rbp+0x48]
  404abb:	mov    rsi,QWORD PTR [rbp+0x130]
  404ac2:	mov    edx,0x1e
  404ac7:	mov    QWORD PTR [rbp+0x88],r10
  404ace:	mov    QWORD PTR [rbp+0x90],r11
  404ad5:	add    rax,0x2
  404ad9:	cmp    rax,0x1e
  404add:	cmovb  rax,rdx
  404ae1:	mov    DWORD PTR [rsi],eax
  404ae3:	mov    ebx,eax
  404ae5:	mov    eax,eax
  404ae7:	lea    r13,[rax*4+0x0]
  404aef:	mov    rcx,r13
  404af2:	call   0x40a880
  404af7:	mov    rsi,rax
  404afa:	mov    rax,QWORD PTR [rbp+0x130]
  404b01:	mov    rcx,r13
  404b04:	mov    QWORD PTR [rax+0x8],rsi
  404b08:	call   0x40a880
  404b0d:	mov    rdx,QWORD PTR [rbp+0x130]
  404b14:	test   rsi,rsi
  404b17:	mov    QWORD PTR [rdx+0x10],rax
  404b1b:	je     0x40499c
  404b21:	test   rax,rax
  404b24:	mov    r11,QWORD PTR [rbp+0x90]
  404b2b:	mov    r10,QWORD PTR [rbp+0x88]
  404b32:	je     0x40499c
  404b38:	mov    rax,QWORD PTR [rbp+0x100]
  404b3f:	mov    rsi,QWORD PTR [rbp+0x100]
  404b46:	movzx  eax,BYTE PTR [rax+0x30]
  404b4a:	mov    BYTE PTR [rbp+0x90],al
  404b50:	and    eax,0xfffffff9
  404b53:	or     eax,0x2
  404b56:	mov    BYTE PTR [rsi+0x30],al
  404b59:	jmp    0x4038a8
  404b5e:	movzx  eax,BYTE PTR [rax+0x2]
  404b62:	movzx  ecx,BYTE PTR [rdx+0x3]
  404b66:	cmp    cl,0x2
  404b69:	je     0x4051aa
  404b6f:	lea    r8d,[rcx-0x4]
  404b73:	cmp    r8b,0x1
  404b77:	ja     0x403665
  404b7d:	cmp    cl,0x5
  404b80:	movzx  r8d,al
  404b84:	sete   BYTE PTR [rbp-0x38]
  404b88:	movzx  ecx,BYTE PTR [rbp-0x38]
  404b8c:	mov    DWORD PTR [rbp-0x40],ecx
  404b8f:	movzx  ecx,BYTE PTR [rdx+0x4]
  404b93:	shl    ecx,0x3
  404b96:	cmp    r8d,ecx
  404b99:	jae    0x404bc0
  404b9b:	mov    ecx,eax
  404b9d:	and    eax,0x7
  404ba0:	shr    cl,0x3
  404ba3:	add    rcx,0x5
  404ba7:	and    ecx,0x3f
  404baa:	movzx  edx,BYTE PTR [rdx+rcx*1]
  404bae:	bt     edx,eax
  404bb1:	jae    0x404bc0
  404bb3:	movzx  eax,BYTE PTR [rbp-0x38]
  404bb7:	xor    eax,0x1
  404bba:	movzx  eax,al
  404bbd:	mov    DWORD PTR [rbp-0x40],eax
  404bc0:	mov    eax,DWORD PTR [rbp-0x40]
  404bc3:	test   eax,eax
  404bc5:	jne    0x403665
  404bcb:	jmp    0x403a2e
  404bd0:	cmp    r11,QWORD PTR [rbp+0x98]
  404bd7:	je     0x404c04
  404bd9:	lea    r14,[rdx+0x1]
  404bdd:	movzx  edx,BYTE PTR [rdx]
  404be0:	add    r11,0x1
  404be4:	cmp    BYTE PTR [rcx],dl
  404be6:	jne    0x403e10
  404bec:	sub    eax,0x1
  404bef:	je     0x404301
  404bf5:	mov    rdx,r14
  404bf8:	cmp    r11,QWORD PTR [rbp+0x98]
  404bff:	mov    rcx,r11
  404c02:	jne    0x404bd9
  404c04:	mov    rcx,QWORD PTR [rbp+0x88]
  404c0b:	cmp    r11,rcx
  404c0e:	je     0x403e10
  404c14:	mov    QWORD PTR [rbp+0x98],rcx
  404c1b:	mov    r11,r10
  404c1e:	jmp    0x404bf8
  404c20:	test   dl,dl
  404c22:	jne    0x404094
  404c28:	mov    rax,QWORD PTR [rbp-0x38]
  404c2c:	mov    DWORD PTR [rbp-0x48],r13d
  404c30:	mov    r13,QWORD PTR [rbp-0x40]
  404c34:	mov    QWORD PTR [rbp-0x40],r14
  404c38:	mov    QWORD PTR [rbp+0x80],rax
  404c3f:	jmp    0x4040c8
  404c44:	mov    DWORD PTR [r13+rcx*1+0x0],0xffffffff
  404c4d:	mov    DWORD PTR [rsi+rcx*1],0xffffffff
  404c54:	jmp    0x40398f
  404c59:	mov    rdx,QWORD PTR [rbp+0x80]
  404c60:	cmp    al,0x6
  404c62:	jne    0x403b10
  404c68:	movzx  eax,BYTE PTR [rdx+0x1]
  404c6c:	movzx  r9d,BYTE PTR [rdx+0x2]
  404c71:	add    r9d,eax
  404c74:	cmp    r13d,0x101
  404c7b:	cmove  r13d,eax
  404c7f:	jmp    0x403b10
  404c84:	mov    rax,QWORD PTR [rbp+0x88]
  404c8b:	mov    r11,r10
  404c8e:	mov    QWORD PTR [rbp+0x98],rax
  404c95:	mov    rax,QWORD PTR [rbp+0x98]
  404c9c:	mov    r14,QWORD PTR [rbp+0x80]
  404ca3:	mov    rcx,QWORD PTR [rbp+0x28]
  404ca7:	sub    rax,r11
  404caa:	sub    r14,r13
  404cad:	movsxd rdx,eax
  404cb0:	cmp    rdx,r14
  404cb3:	cmovle r14d,eax
  404cb7:	test   rcx,rcx
  404cba:	je     0x405140
  404cc0:	test   r14d,r14d
  404cc3:	je     0x405318
  404cc9:	movzx  eax,BYTE PTR [r13+0x0]
  404cce:	movzx  edx,BYTE PTR [r11]
  404cd2:	movzx  eax,BYTE PTR [rcx+rax*1]
  404cd6:	cmp    BYTE PTR [rcx+rdx*1],al
  404cd9:	jne    0x403e10
  404cdf:	lea    r8d,[r14-0x1]
  404ce3:	xor    eax,eax
  404ce5:	mov    DWORD PTR [rbp-0x50],r14d
  404ce9:	mov    rdx,rcx
  404cec:	jmp    0x404d0e
  404cee:	xchg   ax,ax
  404cf0:	movzx  ecx,BYTE PTR [r13+rax*1+0x1]
  404cf6:	movzx  r14d,BYTE PTR [r11+rax*1+0x1]
  404cfc:	add    rax,0x1
  404d00:	movzx  ecx,BYTE PTR [rdx+rcx*1]
  404d04:	cmp    BYTE PTR [rdx+r14*1],cl
  404d08:	jne    0x403e10
  404d0e:	cmp    rax,r8
  404d11:	jne    0x404cf0
  404d13:	movsxd r14,DWORD PTR [rbp-0x50]
  404d17:	mov    ecx,DWORD PTR [rbp+0x70]
  404d1a:	add    r11,r14
  404d1d:	add    r13,r14
  404d20:	test   ecx,ecx
  404d22:	jne    0x4040c8
  404d28:	mov    eax,DWORD PTR [rbp-0x48]
  404d2b:	cmp    eax,r9d
  404d2e:	ja     0x404d3f
  404d30:	mov    edx,eax
  404d32:	add    eax,0x1
  404d35:	or     BYTE PTR [r15+rdx*8],0x18
  404d3a:	cmp    r9d,eax
  404d3d:	jae    0x404d30
  404d3f:	mov    DWORD PTR [rbp+0x70],0x1
  404d46:	jmp    0x4040c8
  404d4b:	lea    rcx,[r14+0x3]
  404d4f:	cmp    QWORD PTR [rbp+0x90],rcx
  404d56:	jbe    0x404d94
  404d58:	lea    rax,[r14+0x4]
  404d5c:	mov    QWORD PTR [rbp+0xa8],rax
  404d63:	movzx  eax,BYTE PTR [r14+0x3]
  404d68:	cmp    al,0x13
  404d6a:	ja     0x404d8c
  404d6c:	cmp    al,0x11
  404d6e:	jae    0x404d74
  404d70:	cmp    al,0xd
  404d72:	jne    0x404d94
  404d74:	movsx  eax,BYTE PTR [r14+0x5]
  404d79:	movzx  edx,BYTE PTR [r14+0x4]
  404d7e:	shl    eax,0x8
  404d81:	add    edx,eax
  404d83:	lea    rax,[r14+0x6]
  404d87:	jmp    0x404ff5
  404d8c:	cmp    al,0x16
  404d8e:	je     0x404fe2
  404d94:	mov    r14,rcx
  404d97:	mov    DWORD PTR [rbp+0x70],0x0
  404d9e:	jmp    0x4035e3
  404da3:	and    edx,0x80
  404da9:	je     0x4037c9
  404daf:	mov    rdx,QWORD PTR [rbp+0x28]
  404db3:	test   rdx,rdx
  404db6:	je     0x4051df
  404dbc:	movzx  eax,BYTE PTR [r11]
  404dc0:	movzx  eax,BYTE PTR [rdx+rax*1]
  404dc4:	jmp    0x4037c1
  404dc9:	movzx  r9d,r9b
  404dcd:	jmp    0x404175
  404dd2:	mov    rcx,QWORD PTR [rbp+0x88]
  404dd9:	cmp    r11,rcx
  404ddc:	je     0x4051d3
  404de2:	mov    r8,rcx
  404de5:	mov    r11,r10
  404de8:	jmp    0x404a7d
  404ded:	mov    eax,0xffffffff
  404df2:	jmp    0x40479e
  404df7:	mov    rax,QWORD PTR [rbp+0x88]
  404dfe:	mov    QWORD PTR [rbp+0x98],rax
  404e05:	jmp    0x403e10
  404e0a:	mov    edx,DWORD PTR [rax]
  404e0c:	mov    rax,QWORD PTR [rbp+0x48]
  404e10:	add    rax,0x2
  404e14:	cmp    rdx,rax
  404e17:	mov    rbx,rdx
  404e1a:	jae    0x4038a8
  404e20:	mov    rsi,QWORD PTR [rbp+0x130]
  404e27:	mov    eax,DWORD PTR [rbp+0x50]
  404e2a:	mov    QWORD PTR [rbp+0x88],r10
  404e31:	mov    QWORD PTR [rbp+0x90],r11
  404e38:	add    eax,0x1
  404e3b:	mov    rcx,QWORD PTR [rsi+0x8]
  404e3f:	lea    rdx,[rax*4+0x0]
  404e47:	mov    DWORD PTR [rsi],eax
  404e49:	call   0x40a858
  404e4e:	mov    rsi,QWORD PTR [rbp+0x130]
  404e55:	mov    edx,DWORD PTR [rsi]
  404e57:	mov    rcx,QWORD PTR [rsi+0x10]
  404e5b:	mov    QWORD PTR [rsi+0x8],rax
  404e5f:	shl    rdx,0x2
  404e63:	call   0x40a858
  404e68:	mov    rsi,QWORD PTR [rbp+0x130]
  404e6f:	test   rax,rax
  404e72:	mov    QWORD PTR [rsi+0x10],rax
  404e76:	je     0x40499c
  404e7c:	cmp    QWORD PTR [rsi+0x8],0x0
  404e81:	je     0x40499c
  404e87:	mov    ebx,DWORD PTR [rsi]
  404e89:	mov    r10,QWORD PTR [rbp+0x88]
  404e90:	mov    r11,QWORD PTR [rbp+0x90]
  404e97:	jmp    0x4038a8
  404e9c:	mov    eax,0xa
  404ea1:	jmp    0x404b62
  404ea6:	cmp    QWORD PTR [rbp+0x88],r13
  404ead:	je     0x4051fe
  404eb3:	cmp    r13,QWORD PTR [rbp-0x38]
  404eb7:	je     0x4051fe
  404ebd:	mov    rax,QWORD PTR [rbp-0x38]
  404ec1:	mov    r13,r10
  404ec4:	mov    QWORD PTR [rbp+0x80],rax
  404ecb:	jmp    0x4040c8
  404ed0:	movzx  edx,BYTE PTR [r10]
  404ed4:	jmp    0x4045e2
  404ed9:	mov    rdx,QWORD PTR [rbp+0x90]
  404ee0:	mov    rcx,QWORD PTR [rbp-0x30]
  404ee4:	mov    r8,r15
  404ee7:	mov    QWORD PTR [rbp-0x10],r10
  404eeb:	mov    QWORD PTR [rbp+0x70],r11
  404eef:	mov    QWORD PTR [rbp+0x80],r9
  404ef6:	call   0x402e20
  404efb:	mov    r9,QWORD PTR [rbp+0x80]
  404f02:	and    eax,0x3
  404f05:	mov    r10,QWORD PTR [rbp-0x10]
  404f09:	mov    r11,QWORD PTR [rbp+0x70]
  404f0d:	movzx  edx,BYTE PTR [r9]
  404f11:	and    edx,0xfffffffc
  404f14:	or     eax,edx
  404f16:	mov    BYTE PTR [r9],al
  404f19:	movzx  eax,BYTE PTR [r14+0x1]
  404f1e:	shl    rax,0x3
  404f22:	lea    r9,[r15+rax*1]
  404f26:	movzx  ecx,BYTE PTR [r9]
  404f2a:	and    ecx,0x3
  404f2d:	jmp    0x4041c7
  404f32:	movzx  ecx,BYTE PTR [rdx+0x3]
  404f36:	cmp    cl,0x2
  404f39:	je     0x405102
  404f3f:	cmp    cl,0x5
  404f42:	je     0x405298
  404f48:	cmp    cl,0x4
  404f4b:	jne    0x403665
  404f51:	movzx  ecx,BYTE PTR [rax+0x1]
  404f55:	test   ecx,ecx
  404f57:	mov    DWORD PTR [rbp-0x48],ecx
  404f5a:	je     0x403a2e
  404f60:	movzx  ecx,BYTE PTR [rdx+0x4]
  404f64:	test   ecx,ecx
  404f66:	mov    DWORD PTR [rbp-0x40],ecx
  404f69:	je     0x405308
  404f6f:	movzx  ecx,BYTE PTR [rax+0x2]
  404f73:	test   BYTE PTR [rdx+0x5],cl
  404f76:	jne    0x405308
  404f7c:	xor    r8d,r8d
  404f7f:	xor    ecx,ecx
  404f81:	mov    DWORD PTR [rbp-0x38],r9d
  404f85:	add    ecx,0x1
  404f88:	cmp    ecx,DWORD PTR [rbp-0x48]
  404f8b:	je     0x403a2a
  404f91:	cmp    ecx,DWORD PTR [rbp-0x40]
  404f94:	je     0x403a2a
  404f9a:	movzx  r9d,BYTE PTR [rdx+r8*1+0x6]
  404fa0:	and    r9b,BYTE PTR [rax+r8*1+0x3]
  404fa5:	add    r8,0x1
  404fa9:	test   r9b,r9b
  404fac:	je     0x404f85
  404fae:	mov    r9d,DWORD PTR [rbp-0x38]
  404fb2:	jmp    0x40530a
  404fb7:	nop    WORD PTR [rax+rax*1+0x0]
  404fc0:	cmp    BYTE PTR [r10],0xa
  404fc4:	sete   al
  404fc7:	jmp    0x403fdb
  404fcc:	mov    rax,QWORD PTR [rbp+0x100]
  404fd3:	test   BYTE PTR [rax+0x30],0x40
  404fd7:	je     0x4037f2
  404fdd:	jmp    0x403e10
  404fe2:	movsx  eax,BYTE PTR [r14+0x5]
  404fe7:	movzx  edx,BYTE PTR [r14+0x4]
  404fec:	shl    eax,0x8
  404fef:	add    edx,eax
  404ff1:	lea    rax,[r14+0x8]
  404ff5:	movsxd r8,edx
  404ff8:	add    rax,r8
  404ffb:	test   edx,edx
  404ffd:	mov    QWORD PTR [rbp+0xa8],rax
  405004:	jns    0x404d94
  40500a:	cmp    BYTE PTR [rax],0xf
  40500d:	jne    0x404d94
  405013:	cmp    BYTE PTR [rax+0x3],0x6
  405017:	jne    0x404d94
  40501d:	movzx  edx,BYTE PTR [rax+0x4]
  405021:	cmp    dl,BYTE PTR [r14+0x1]
  405025:	jne    0x404d94
  40502b:	lea    rcx,[r15+rdx*8]
  40502f:	movzx  edx,BYTE PTR [rcx]
  405032:	test   dl,0x10
  405035:	jne    0x405392
  40503b:	lea    rdx,[rax+0x1]
  40503f:	add    rax,0x3
  405043:	mov    QWORD PTR [rbp+0xa8],rdx
  40504a:	movsx  edx,BYTE PTR [rax-0x1]
  40504e:	movzx  ecx,BYTE PTR [rax-0x2]
  405052:	mov    QWORD PTR [rbp+0x70],rax
  405056:	mov    QWORD PTR [rbp+0xa8],rax
  40505d:	lea    eax,[r9+0x1]
  405061:	shl    edx,0x8
  405064:	sub    eax,r13d
  405067:	add    edx,ecx
  405069:	lea    eax,[rax+rax*2+0x4]
  40506d:	mov    DWORD PTR [rbp+0x80],edx
  405073:	mov    edx,DWORD PTR [rbp+0x60]
  405076:	mov    DWORD PTR [rbp-0x38],eax
  405079:	mov    eax,edx
  40507b:	sub    eax,ebx
  40507d:	cmp    eax,DWORD PTR [rbp-0x38]
  405080:	jae    0x405329
  405086:	mov    eax,DWORD PTR [rip+0xdf84]        # 0x413010
  40508c:	mov    QWORD PTR [rbp-0x48],r10
  405090:	mov    DWORD PTR [rbp-0x40],r9d
  405094:	mov    QWORD PTR [rbp+0x60],r11
  405098:	lea    ecx,[rax+rax*8]
  40509b:	lea    eax,[rax+rcx*2]
  40509e:	cmp    eax,edx
  4050a0:	jb     0x40499c
  4050a6:	lea    eax,[rdx+rdx*1]
  4050a9:	mov    r14,rax
  4050ac:	lea    rax,[rax*8+0x1e]
  4050b4:	shr    rax,0x4
  4050b8:	shl    rax,0x4
  4050bc:	call   0x40a550
  4050c1:	sub    rsp,rax
  4050c4:	mov    r8d,edx
  4050c7:	mov    rdx,rsi
  4050ca:	lea    rcx,[rsp+0x20]
  4050cf:	shl    r8,0x3
  4050d3:	call   0x40a870
  4050d8:	test   rax,rax
  4050db:	mov    rsi,rax
  4050de:	je     0x40499c
  4050e4:	mov    edx,r14d
  4050e7:	mov    r10,QWORD PTR [rbp-0x48]
  4050eb:	mov    r9d,DWORD PTR [rbp-0x40]
  4050ef:	mov    r11,QWORD PTR [rbp+0x60]
  4050f3:	jmp    0x405079
  4050f5:	mov    rax,QWORD PTR [rbp+0x78]
  4050f9:	movzx  edx,BYTE PTR [rax-0x1]
  4050fd:	jmp    0x4045e2
  405102:	movzx  ecx,BYTE PTR [rax+0x1]
  405106:	movzx  r8d,BYTE PTR [rdx+0x5]
  40510b:	shl    ecx,0x3
  40510e:	mov    edx,r8d
  405111:	cmp    ecx,r8d
  405114:	jle    0x403a2e
  40511a:	mov    ecx,r8d
  40511d:	and    edx,0x7
  405120:	shr    cl,0x3
  405123:	add    rcx,0x2
  405127:	and    ecx,0x3f
  40512a:	movzx  eax,BYTE PTR [rax+rcx*1]
  40512e:	bt     eax,edx
  405131:	jb     0x403665
  405137:	jmp    0x403a2e
  40513c:	nop    DWORD PTR [rax+0x0]
  405140:	movsxd r14,r14d
  405143:	mov    rcx,r11
  405146:	mov    rdx,r13
  405149:	mov    r8,r14
  40514c:	mov    QWORD PTR [rbp-0x58],r10
  405150:	mov    DWORD PTR [rbp+0x40],r9d
  405154:	mov    QWORD PTR [rbp-0x50],r11
  405158:	call   0x40a878
  40515d:	test   eax,eax
  40515f:	mov    r11,QWORD PTR [rbp-0x50]
  405163:	mov    r9d,DWORD PTR [rbp+0x40]
  405167:	mov    r10,QWORD PTR [rbp-0x58]
  40516b:	je     0x404d17
  405171:	jmp    0x403e10
  405176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405180:	mov    ebx,ecx
  405182:	mov    DWORD PTR [rbp+0x70],0x0
  405189:	jmp    0x403673
  40518e:	test   dl,dl
  405190:	jne    0x40386d
  405196:	mov    edx,DWORD PTR [rbp+0x44]
  405199:	test   edx,edx
  40519b:	je     0x40386d
  4051a1:	mov    r11,QWORD PTR [rbp+0x58]
  4051a5:	jmp    0x403823
  4051aa:	cmp    al,BYTE PTR [rdx+0x5]
  4051ad:	jne    0x403a2e
  4051b3:	jmp    0x403665
  4051b8:	movzx  eax,BYTE PTR [r11]
  4051bc:	jmp    0x404380
  4051c1:	movzx  eax,BYTE PTR [r10]
  4051c5:	jmp    0x4044f3
  4051ca:	movzx  eax,BYTE PTR [r10]
  4051ce:	jmp    0x404582
  4051d3:	mov    QWORD PTR [rbp+0x98],r8
  4051da:	jmp    0x403e10
  4051df:	movzx  eax,BYTE PTR [r11]
  4051e3:	jmp    0x4037c1
  4051e8:	mov    rax,QWORD PTR [rbp+0x78]
  4051ec:	movzx  edx,BYTE PTR [rax-0x1]
  4051f0:	jmp    0x404268
  4051f5:	movzx  edx,BYTE PTR [r10]
  4051f9:	jmp    0x404268
  4051fe:	mov    r14,QWORD PTR [rbp-0x40]
  405202:	mov    r13d,DWORD PTR [rbp-0x48]
  405206:	add    r14,0x2
  40520a:	jmp    0x4035e3
  40520f:	mov    rax,QWORD PTR [rbp+0x78]
  405213:	movzx  eax,BYTE PTR [rax-0x1]
  405217:	jmp    0x4044f3
  40521c:	mov    rax,QWORD PTR [rbp+0x78]
  405220:	movzx  eax,BYTE PTR [rax-0x1]
  405224:	jmp    0x404582
  405229:	movzx  eax,BYTE PTR [r11]
  40522d:	cmp    al,0xa
  40522f:	jne    0x4037b9
  405235:	jmp    0x403e10
  40523a:	nop    WORD PTR [rax+rax*1+0x0]
  405240:	mov    rdx,QWORD PTR [rbp+0x78]
  405244:	movzx  edx,BYTE PTR [rdx-0x1]
  405248:	jmp    0x403fa5
  40524d:	movzx  edx,BYTE PTR [r10]
  405251:	jmp    0x403fa5
  405256:	mov    rax,QWORD PTR [rbp+0x78]
  40525a:	movzx  edx,BYTE PTR [rax-0x1]
  40525e:	jmp    0x403f7f
  405263:	movzx  edx,BYTE PTR [r10]
  405267:	jmp    0x403f7f
  40526c:	mov    rdx,QWORD PTR [rbp+0x78]
  405270:	movzx  edx,BYTE PTR [rdx-0x1]
  405274:	jmp    0x403c1e
  405279:	movzx  edx,BYTE PTR [r10]
  40527d:	jmp    0x403c1e
  405282:	mov    rax,QWORD PTR [rbp+0x78]
  405286:	movzx  edx,BYTE PTR [rax-0x1]
  40528a:	jmp    0x403bf8
  40528f:	movzx  edx,BYTE PTR [r10]
  405293:	jmp    0x403bf8
  405298:	movzx  ecx,BYTE PTR [rax+0x1]
  40529c:	test   ecx,ecx
  40529e:	mov    DWORD PTR [rbp-0x40],ecx
  4052a1:	je     0x403a2e
  4052a7:	xor    ecx,ecx
  4052a9:	mov    QWORD PTR [rbp-0x48],r11
  4052ad:	jmp    0x4052ce
  4052af:	movzx  r11d,BYTE PTR [rdx+rcx*1+0x5]
  4052b5:	not    r11d
  4052b8:	test   r11d,r8d
  4052bb:	jne    0x4052e6
  4052bd:	lea    r8d,[rcx+0x1]
  4052c1:	add    rcx,0x1
  4052c5:	cmp    DWORD PTR [rbp-0x40],ecx
  4052c8:	mov    DWORD PTR [rbp-0x38],r8d
  4052cc:	jle    0x4052e6
  4052ce:	movzx  r8d,BYTE PTR [rax+rcx*1+0x2]
  4052d4:	mov    DWORD PTR [rbp-0x38],ecx
  4052d7:	test   r8b,r8b
  4052da:	je     0x4052bd
  4052dc:	movzx  r11d,BYTE PTR [rdx+0x4]
  4052e1:	cmp    r11d,ecx
  4052e4:	jg     0x4052af
  4052e6:	mov    edx,DWORD PTR [rbp-0x40]
  4052e9:	cmp    DWORD PTR [rbp-0x38],edx
  4052ec:	mov    r11,QWORD PTR [rbp-0x48]
  4052f0:	jne    0x403665
  4052f6:	jmp    0x403a2e
  4052fb:	mov    rdx,QWORD PTR [rbp+0x78]
  4052ff:	movzx  edx,BYTE PTR [rdx-0x1]
  405303:	jmp    0x404639
  405308:	xor    ecx,ecx
  40530a:	cmp    DWORD PTR [rbp-0x40],ecx
  40530d:	jne    0x403665
  405313:	jmp    0x403a2e
  405318:	xor    r14d,r14d
  40531b:	jmp    0x404d17
  405320:	movzx  edx,BYTE PTR [r10]
  405324:	jmp    0x404639
  405329:	cmp    r13d,r9d
  40532c:	mov    DWORD PTR [rbp+0x60],edx
  40532f:	ja     0x405362
  405331:	mov    eax,r13d
  405334:	mov    ecx,eax
  405336:	mov    edx,ebx
  405338:	add    eax,0x1
  40533b:	mov    r8,QWORD PTR [rdi+rcx*8]
  40533f:	mov    r14,QWORD PTR [r12+rcx*8]
  405343:	mov    rcx,QWORD PTR [r15+rcx*8]
  405347:	mov    QWORD PTR [rsi+rdx*8],r8
  40534b:	lea    edx,[rbx+0x2]
  40534e:	lea    r8d,[rbx+0x1]
  405352:	add    ebx,0x3
  405355:	cmp    r9d,eax
  405358:	mov    QWORD PTR [rsi+r8*8],r14
  40535c:	mov    QWORD PTR [rsi+rdx*8],rcx
  405360:	jae    0x405334
  405362:	mov    eax,ebx
  405364:	lea    edx,[rbx+0x3]
  405367:	lea    ecx,[rbx+0x2]
  40536a:	mov    DWORD PTR [rsi+rax*8],r13d
  40536e:	lea    eax,[rbx+0x1]
  405371:	add    ebx,0x4
  405374:	mov    DWORD PTR [rsi+rax*8],r9d
  405378:	movsxd rax,DWORD PTR [rbp+0x80]
  40537f:	add    rax,QWORD PTR [rbp+0x70]
  405383:	mov    QWORD PTR [rsi+rcx*8],rax
  405387:	mov    eax,edx
  405389:	mov    QWORD PTR [rsi+rax*8],r11
  40538d:	jmp    0x403e10
  405392:	and    edx,0xffffffef
  405395:	mov    BYTE PTR [rcx],dl
  405397:	movzx  r8d,BYTE PTR [r14+0x1]
  40539c:	movzx  r14d,BYTE PTR [r14+0x2]
  4053a1:	add    r14d,r8d
  4053a4:	cmp    r14d,r8d
  4053a7:	jbe    0x40503b
  4053ad:	mov    rcx,QWORD PTR [rbp+0x38]
  4053b1:	mov    edx,r8d
  4053b4:	mov    rcx,QWORD PTR [rcx+rdx*8]
  4053b8:	mov    QWORD PTR [rbp+0x80],rcx
  4053bf:	mov    QWORD PTR [rdi+rdx*8],rcx
  4053c3:	mov    rcx,QWORD PTR [rbp+0x30]
  4053c7:	mov    rcx,QWORD PTR [rcx+rdx*8]
  4053cb:	cmp    QWORD PTR [rbp+0x80],rcx
  4053d2:	ja     0x4053d8
  4053d4:	mov    QWORD PTR [r12+rdx*8],rcx
  4053d8:	add    r8d,0x1
  4053dc:	cmp    r8d,r14d
  4053df:	jne    0x4053ad
  4053e1:	jmp    0x40503b
  4053e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053f0:	push   r15
  4053f2:	push   r14
  4053f4:	push   r13
  4053f6:	push   r12
  4053f8:	push   rbp
  4053f9:	push   rdi
  4053fa:	push   rsi
  4053fb:	push   rbx
  4053fc:	sub    rsp,0x68
  405400:	mov    ebp,DWORD PTR [rsp+0xd0]
  405407:	mov    ebx,DWORD PTR [rsp+0xd8]
  40540e:	mov    esi,DWORD PTR [rsp+0xe0]
  405415:	mov    r14,QWORD PTR [rcx+0x18]
  405419:	mov    r15,QWORD PTR [rcx+0x20]
  40541d:	add    ebp,r8d
  405420:	cmp    ebx,ebp
  405422:	lea    eax,[rbx+rsi*1]
  405425:	jg     0x405548
  40542b:	mov    edi,ebx
  40542d:	shr    edi,0x1f
  405430:	test   dil,dil
  405433:	jne    0x405548
  405439:	test   eax,eax
  40543b:	js     0x405700
  405441:	mov    edi,ebp
  405443:	sub    edi,ebx
  405445:	cmp    ebp,eax
  405447:	cmovl  esi,edi
  40544a:	test   esi,esi
  40544c:	jle    0x40546b
  40544e:	mov    eax,DWORD PTR [rcx+0xc]
  405451:	test   eax,eax
  405453:	je     0x40546b
  405455:	mov    rax,QWORD PTR [rcx]
  405458:	movzx  eax,BYTE PTR [rax]
  40545b:	cmp    al,0xb
  40545d:	je     0x405713
  405463:	cmp    al,0x9
  405465:	je     0x405709
  40546b:	test   r14,r14
  40546e:	mov    QWORD PTR [rsp+0x48],r9
  405473:	mov    r12d,r8d
  405476:	mov    QWORD PTR [rsp+0x50],rdx
  40547b:	mov    rdi,rcx
  40547e:	je     0x40548a
  405480:	test   BYTE PTR [rcx+0x30],0x8
  405484:	je     0x4056e0
  40548a:	test   r14,r14
  40548d:	movsxd rax,r12d
  405490:	setne  r13b
  405494:	mov    QWORD PTR [rsp+0x58],rax
  405499:	nop    DWORD PTR [rax+0x0]
  4054a0:	cmp    ebx,ebp
  4054a2:	jge    0x405560
  4054a8:	test   r13b,r13b
  4054ab:	je     0x405560
  4054b1:	test   BYTE PTR [rdi+0x30],0x1
  4054b5:	jne    0x40557b
  4054bb:	test   esi,esi
  4054bd:	jle    0x405650
  4054c3:	cmp    ebx,r12d
  4054c6:	jge    0x405600
  4054cc:	lea    eax,[rbx+rsi*1]
  4054cf:	cmp    r12d,eax
  4054d2:	jg     0x4056a0
  4054d8:	mov    r8d,ebx
  4054db:	movsxd rcx,ebx
  4054de:	add    rcx,QWORD PTR [rsp+0x50]
  4054e3:	sub    r8d,r12d
  4054e6:	add    r8d,esi
  4054e9:	test   r15,r15
  4054ec:	je     0x405725
  4054f2:	cmp    esi,r8d
  4054f5:	jle    0x405731
  4054fb:	movzx  eax,BYTE PTR [rcx]
  4054fe:	lea    rdx,[rcx+0x1]
  405502:	movzx  eax,BYTE PTR [r15+rax*1]
  405507:	cmp    BYTE PTR [r14+rax*1],0x0
  40550c:	mov    eax,esi
  40550e:	je     0x405528
  405510:	jmp    0x405743
  405515:	movzx  ecx,BYTE PTR [rdx]
  405518:	add    rdx,0x1
  40551c:	movzx  ecx,BYTE PTR [r15+rcx*1]
  405521:	cmp    BYTE PTR [r14+rcx*1],0x0
  405526:	jne    0x405530
  405528:	sub    eax,0x1
  40552b:	cmp    eax,r8d
  40552e:	jg     0x405515
  405530:	sub    esi,eax
  405532:	mov    edx,eax
  405534:	add    ebx,esi
  405536:	not    edx
  405538:	shr    edx,0x1f
  40553b:	cmp    ebx,ebp
  40553d:	sete   cl
  405540:	test   cl,dl
  405542:	je     0x405691
  405548:	mov    eax,0xffffffff
  40554d:	add    rsp,0x68
  405551:	pop    rbx
  405552:	pop    rsi
  405553:	pop    rdi
  405554:	pop    rbp
  405555:	pop    r12
  405557:	pop    r13
  405559:	pop    r14
  40555b:	pop    r15
  40555d:	ret    
  40555e:	xchg   ax,ax
  405560:	mov    eax,esi
  405562:	not    eax
  405564:	shr    eax,0x1f
  405567:	cmp    ebx,ebp
  405569:	sete   dl
  40556c:	test   dl,al
  40556e:	je     0x40557b
  405570:	test   r13b,r13b
  405573:	je     0x40557b
  405575:	test   BYTE PTR [rdi+0x30],0x1
  405579:	je     0x405548
  40557b:	mov    eax,DWORD PTR [rsp+0xf0]
  405582:	mov    r9,QWORD PTR [rsp+0x48]
  405587:	mov    r8d,r12d
  40558a:	mov    rdx,QWORD PTR [rsp+0x50]
  40558f:	mov    DWORD PTR [rsp+0x28],ebx
  405593:	mov    rcx,rdi
  405596:	mov    DWORD PTR [rsp+0x38],eax
  40559a:	mov    rax,QWORD PTR [rsp+0xe8]
  4055a2:	mov    QWORD PTR [rsp+0x30],rax
  4055a7:	mov    eax,DWORD PTR [rsp+0xd0]
  4055ae:	mov    DWORD PTR [rsp+0x20],eax
  4055b2:	call   0x4033c0
  4055b7:	test   eax,eax
  4055b9:	jns    0x4056d2
  4055bf:	cmp    eax,0xfffffffe
  4055c2:	je     0x4056f0
  4055c8:	cmp    esi,0x0
  4055cb:	je     0x405548
  4055d1:	jle    0x4055f0
  4055d3:	sub    esi,0x1
  4055d6:	add    ebx,0x1
  4055d9:	jmp    0x4054a0
  4055de:	xchg   ax,ax
  4055e0:	test   esi,esi
  4055e2:	je     0x405548
  4055e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4055f0:	add    esi,0x1
  4055f3:	sub    ebx,0x1
  4055f6:	jmp    0x4054a0
  4055fb:	nop    DWORD PTR [rax+rax*1+0x0]
  405600:	movsxd rcx,ebx
  405603:	sub    rcx,QWORD PTR [rsp+0x58]
  405608:	xor    r8d,r8d
  40560b:	add    rcx,QWORD PTR [rsp+0x48]
  405610:	test   r15,r15
  405613:	jne    0x4054fb
  405619:	xor    eax,eax
  40561b:	movzx  r8d,BYTE PTR [rcx]
  40561f:	add    rcx,0x1
  405623:	mov    edx,esi
  405625:	cmp    BYTE PTR [r14+r8*1],0x0
  40562a:	je     0x405644
  40562c:	jmp    0x405731
  405631:	movzx  r8d,BYTE PTR [rcx]
  405635:	add    rcx,0x1
  405639:	cmp    BYTE PTR [r14+r8*1],0x0
  40563e:	jne    0x40573a
  405644:	sub    edx,0x1
  405647:	cmp    edx,eax
  405649:	jne    0x405631
  40564b:	jmp    0x405530
  405650:	cmp    ebx,r12d
  405653:	jge    0x4056c0
  405655:	test   r12d,r12d
  405658:	je     0x4056c0
  40565a:	mov    rdx,QWORD PTR [rsp+0x50]
  40565f:	movsxd rax,ebx
  405662:	movzx  eax,BYTE PTR [rdx+rax*1]
  405666:	test   r15,r15
  405669:	je     0x405670
  40566b:	movzx  eax,BYTE PTR [r15+rax*1]
  405670:	cmp    BYTE PTR [r14+rax*1],0x0
  405675:	je     0x4055e0
  40567b:	mov    eax,esi
  40567d:	mov    edx,eax
  40567f:	not    edx
  405681:	shr    edx,0x1f
  405684:	cmp    ebx,ebp
  405686:	sete   cl
  405689:	test   cl,dl
  40568b:	jne    0x405548
  405691:	mov    esi,eax
  405693:	jmp    0x40557b
  405698:	nop    DWORD PTR [rax+rax*1+0x0]
  4056a0:	movsxd rcx,ebx
  4056a3:	xor    r8d,r8d
  4056a6:	add    rcx,QWORD PTR [rsp+0x50]
  4056ab:	test   r15,r15
  4056ae:	jne    0x4054fb
  4056b4:	jmp    0x405619
  4056b9:	nop    DWORD PTR [rax+0x0]
  4056c0:	mov    eax,ebx
  4056c2:	mov    rdx,QWORD PTR [rsp+0x48]
  4056c7:	sub    eax,r12d
  4056ca:	cdqe   
  4056cc:	movzx  eax,BYTE PTR [rdx+rax*1]
  4056d0:	jmp    0x405666
  4056d2:	mov    eax,ebx
  4056d4:	jmp    0x40554d
  4056d9:	nop    DWORD PTR [rax+0x0]
  4056e0:	call   0x402f80
  4056e5:	cmp    eax,0xfffffffe
  4056e8:	jne    0x40548a
  4056ee:	xchg   ax,ax
  4056f0:	mov    eax,0xfffffffe
  4056f5:	jmp    0x40554d
  4056fa:	nop    WORD PTR [rax+rax*1+0x0]
  405700:	mov    esi,ebx
  405702:	neg    esi
  405704:	jmp    0x40546b
  405709:	cmp    BYTE PTR [rcx+0x30],0x0
  40570d:	js     0x40546b
  405713:	test   ebx,ebx
  405715:	jne    0x405548
  40571b:	mov    esi,0x1
  405720:	jmp    0x40546b
  405725:	cmp    esi,r8d
  405728:	mov    eax,r8d
  40572b:	jg     0x40561b
  405731:	mov    eax,esi
  405733:	xor    esi,esi
  405735:	jmp    0x405532
  40573a:	mov    eax,edx
  40573c:	sub    esi,eax
  40573e:	jmp    0x405532
  405743:	xor    esi,esi
  405745:	jmp    0x405532
  40574a:	nop    WORD PTR [rax+rax*1+0x0]
  405750:	push   r15
  405752:	push   r14
  405754:	push   r13
  405756:	push   r12
  405758:	push   rbp
  405759:	push   rdi
  40575a:	push   rsi
  40575b:	push   rbx
  40575c:	sub    rsp,0x158
  405763:	mov    rax,QWORD PTR [r9+0x20]
  405767:	mov    QWORD PTR [rsp+0x1a0],rcx
  40576f:	mov    QWORD PTR [rsp+0xc8],rcx
  405777:	mov    ecx,0x280
  40577c:	mov    rsi,rdx
  40577f:	mov    DWORD PTR [rsp+0x1b0],r8d
  405787:	mov    r14,r9
  40578a:	mov    QWORD PTR [rsp+0x38],rax
  40578f:	call   0x40a880
  405794:	test   rax,rax
  405797:	mov    QWORD PTR [rsp+0x40],rax
  40579c:	je     0x405890
  4057a2:	mov    r9d,DWORD PTR [rip+0x21997]        # 0x427140
  4057a9:	mov    eax,DWORD PTR [rsp+0x1b0]
  4057b0:	and    BYTE PTR [r14+0x30],0x97
  4057b5:	mov    DWORD PTR [r14+0xc],0x0
  4057bd:	mov    QWORD PTR [r14+0x28],0x0
  4057c5:	test   r9d,r9d
  4057c8:	mov    DWORD PTR [r14+0x10],eax
  4057cc:	je     0x4058f0
  4057d2:	mov    r8d,DWORD PTR [r14+0x8]
  4057d6:	test   r8d,r8d
  4057d9:	je     0x4058b0
  4057df:	mov    rcx,QWORD PTR [rsp+0x1a0]
  4057e7:	mov    rbx,QWORD PTR [r14]
  4057ea:	add    rsi,QWORD PTR [rsp+0x1a0]
  4057f2:	mov    rax,QWORD PTR [rip+0x22d2b]        # 0x428524
  4057f9:	xor    r15d,r15d
  4057fc:	mov    QWORD PTR [rsp+0x1b8],r14
  405804:	mov    rbp,QWORD PTR [rsp+0x1b8]
  40580c:	xor    r13d,r13d
  40580f:	mov    DWORD PTR [rsp+0x50],0x0
  405817:	mov    DWORD PTR [rsp+0x70],0x20
  40581f:	mov    r14,rbx
  405822:	mov    DWORD PTR [rsp+0x54],0x0
  40582a:	mov    QWORD PTR [rsp+0x58],rax
  40582f:	mov    r12,r15
  405832:	mov    QWORD PTR [rsp+0x48],rsi
  405837:	cmp    QWORD PTR [rsp+0x48],rcx
  40583c:	je     0x406b58
  405842:	mov    rdi,QWORD PTR [rsp+0x38]
  405847:	lea    rax,[rcx+0x1]
  40584b:	mov    QWORD PTR [rsp+0xc8],rax
  405853:	movzx  esi,BYTE PTR [rcx]
  405856:	test   rdi,rdi
  405859:	je     0x40585f
  40585b:	movzx  esi,BYTE PTR [rdi+rsi*1]
  40585f:	lea    edx,[rsi-0xa]
  405862:	cmp    dl,0x72
  405865:	ja     0x405a42
  40586b:	lea    r8,[rip+0x1d502]        # 0x422d74
  405872:	movzx  edx,dl
  405875:	movsxd rdx,DWORD PTR [r8+rdx*4]
  405879:	add    r8,rdx
  40587c:	jmp    r8
  40587f:	mov    rcx,QWORD PTR [rsp+0x40]
  405884:	call   0x40a8f0
  405889:	nop    DWORD PTR [rax+0x0]
  405890:	mov    eax,0xc
  405895:	add    rsp,0x158
  40589c:	pop    rbx
  40589d:	pop    rsi
  40589e:	pop    rdi
  40589f:	pop    rbp
  4058a0:	pop    r12
  4058a2:	pop    r13
  4058a4:	pop    r14
  4058a6:	pop    r15
  4058a8:	ret    
  4058a9:	nop    DWORD PTR [rax+0x0]
  4058b0:	mov    rcx,QWORD PTR [r14]
  4058b3:	test   rcx,rcx
  4058b6:	je     0x40698f
  4058bc:	mov    edx,0x20
  4058c1:	call   0x40a858
  4058c6:	mov    QWORD PTR [r14],rax
  4058c9:	mov    rbx,rax
  4058cc:	test   rbx,rbx
  4058cf:	je     0x40587f
  4058d1:	mov    DWORD PTR [r14+0x8],0x20
  4058d9:	mov    rcx,QWORD PTR [rsp+0xc8]
  4058e1:	jmp    0x4057ea
  4058e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058f0:	lea    rbx,[rip+0x218c9]        # 0x4271c0
  4058f7:	mov    ecx,0x20
  4058fc:	xor    eax,eax
  4058fe:	xor    ebp,ebp
  405900:	mov    rdi,rbx
  405903:	rep stos QWORD PTR es:[rdi],rax
  405906:	mov    rdi,QWORD PTR [rip+0x22bf7]        # 0x428504
  40590d:	nop    DWORD PTR [rax]
  405910:	mov    ecx,ebp
  405912:	call   rdi
  405914:	test   eax,eax
  405916:	je     0x40591c
  405918:	mov    BYTE PTR [rbx+rbp*1],0x1
  40591c:	add    rbp,0x1
  405920:	cmp    rbp,0x100
  405927:	jne    0x405910
  405929:	mov    BYTE PTR [rip+0x218ef],0x1        # 0x42721f
  405930:	mov    r8d,DWORD PTR [r14+0x8]
  405934:	mov    DWORD PTR [rip+0x21802],0x1        # 0x427140
  40593e:	test   r8d,r8d
  405941:	je     0x4058b0
  405947:	jmp    0x4057df
  40594c:	mov    edx,DWORD PTR [rsp+0x1b0]
  405953:	and    edx,0x1200
  405959:	cmp    edx,0x1200
  40595f:	jne    0x405a42
  405965:	mov    rsi,QWORD PTR [rsp+0x48]
  40596a:	cmp    rsi,rax
  40596d:	je     0x406d4e
  405973:	lea    rcx,[rax+0x1]
  405977:	lea    r9,[rsi+0x1]
  40597b:	mov    edi,0xffffffff
  405980:	mov    edx,0x7b
  405985:	mov    r8,QWORD PTR [rsp+0x38]
  40598a:	jmp    0x4059d8
  40598c:	nop    DWORD PTR [rax+0x0]
  405990:	test   r8,r8
  405993:	mov    QWORD PTR [rsp+0xc8],rcx
  40599b:	movzx  edx,BYTE PTR [rcx-0x1]
  40599f:	je     0x4059a6
  4059a1:	movzx  edx,BYTE PTR [r8+rdx*1]
  4059a6:	lea    r10d,[rdx-0x30]
  4059aa:	cmp    r10b,0x9
  4059ae:	ja     0x407125
  4059b4:	cmp    edi,0x7fff
  4059ba:	jg     0x4059d4
  4059bc:	xor    r10d,r10d
  4059bf:	cmp    edi,0xffffffff
  4059c2:	je     0x4059cb
  4059c4:	lea    r10d,[rdi+rdi*4]
  4059c8:	add    r10d,r10d
  4059cb:	movzx  r11d,dl
  4059cf:	lea    edi,[r10+r11*1-0x30]
  4059d4:	add    rcx,0x1
  4059d8:	cmp    rcx,r9
  4059db:	jne    0x405990
  4059dd:	mov    r9d,edi
  4059e0:	xor    ecx,ecx
  4059e2:	mov    r8d,r9d
  4059e5:	shr    r8d,0x1f
  4059e9:	test   r8b,r8b
  4059ec:	jne    0x406d4e
  4059f2:	test   cl,cl
  4059f4:	jne    0x406d4e
  4059fa:	mov    ecx,DWORD PTR [rsp+0x1b0]
  405a01:	and    ecx,0x1000
  405a07:	jne    0x407254
  405a0d:	cmp    dl,0x5c
  405a10:	je     0x407224
  405a16:	test   DWORD PTR [rsp+0x1b0],0x200000
  405a21:	je     0x407f7b
  405a27:	mov    QWORD PTR [rsp+0xc8],rax
  405a2f:	mov    esi,0x7b
  405a34:	mov    rax,QWORD PTR [rsp+0x38]
  405a39:	test   rax,rax
  405a3c:	je     0x405a42
  405a3e:	movzx  esi,BYTE PTR [rax+rsi*1]
  405a42:	test   r12,r12
  405a45:	je     0x405aba
  405a47:	movzx  edx,BYTE PTR [r12]
  405a4c:	mov    rax,rdx
  405a4f:	lea    rdx,[r12+rdx*1+0x1]
  405a54:	cmp    rbx,rdx
  405a57:	jne    0x405aba
  405a59:	cmp    al,0xff
  405a5b:	je     0x405aba
  405a5d:	mov    rdx,QWORD PTR [rsp+0xc8]
  405a65:	movzx  eax,BYTE PTR [rdx]
  405a68:	cmp    al,0x2a
  405a6a:	je     0x405aba
  405a6c:	cmp    al,0x5e
  405a6e:	je     0x405aba
  405a70:	test   BYTE PTR [rsp+0x1b0],0x2
  405a78:	je     0x406ed4
  405a7e:	cmp    al,0x5c
  405a80:	je     0x405aac
  405a82:	test   DWORD PTR [rsp+0x1b0],0x200
  405a8d:	je     0x405aa4
  405a8f:	test   DWORD PTR [rsp+0x1b0],0x1000
  405a9a:	je     0x40720a
  405aa0:	cmp    al,0x7b
  405aa2:	je     0x405aba
  405aa4:	mov    rdi,rbx
  405aa7:	jmp    0x405cd4
  405aac:	movzx  ecx,BYTE PTR [rdx+0x1]
  405ab0:	cmp    cl,0x3f
  405ab3:	je     0x405aba
  405ab5:	cmp    cl,0x2b
  405ab8:	jne    0x405a82
  405aba:	mov    rdi,QWORD PTR [rbp+0x0]
  405abe:	mov    r13,rbx
  405ac1:	jmp    0x405b04
  405ac3:	mov    DWORD PTR [rbp+0x8],edx
  405ac6:	mov    rcx,rdi
  405ac9:	call   0x40a858
  405ace:	test   rax,rax
  405ad1:	mov    QWORD PTR [rbp+0x0],rax
  405ad5:	je     0x405890
  405adb:	cmp    rax,rdi
  405ade:	je     0x405b01
  405ae0:	mov    rdx,rax
  405ae3:	sub    rdx,rdi
  405ae6:	lea    rcx,[r15+rdx*1]
  405aea:	add    rbx,rdx
  405aed:	add    r14,rdx
  405af0:	test   r15,r15
  405af3:	cmovne r15,rcx
  405af7:	add    rdx,r13
  405afa:	test   r13,r13
  405afd:	cmovne r13,rdx
  405b01:	mov    rdi,rax
  405b04:	mov    edx,DWORD PTR [rbp+0x8]
  405b07:	mov    rax,rbx
  405b0a:	sub    rax,rdi
  405b0d:	add    eax,0x2
  405b10:	cmp    eax,edx
  405b12:	jbe    0x405cc5
  405b18:	cmp    edx,0x10000
  405b1e:	je     0x405b40
  405b20:	add    edx,edx
  405b22:	cmp    edx,0x10000
  405b28:	jbe    0x405ac3
  405b2a:	mov    DWORD PTR [rbp+0x8],0x10000
  405b31:	mov    edx,0x10000
  405b36:	jmp    0x405ac6
  405b38:	nop    DWORD PTR [rax+rax*1+0x0]
  405b40:	mov    eax,0xf
  405b45:	jmp    0x405895
  405b4a:	test   DWORD PTR [rsp+0x1b0],0x402
  405b55:	jne    0x405a42
  405b5b:	test   r13,r13
  405b5e:	je     0x406c27
  405b64:	mov    r8d,DWORD PTR [rsp+0x1b0]
  405b6c:	mov    rax,QWORD PTR [rsp+0xc8]
  405b74:	xor    ecx,ecx
  405b76:	mov    r10,QWORD PTR [rsp+0x48]
  405b7b:	mov    r9,QWORD PTR [rsp+0x38]
  405b80:	xor    edi,edi
  405b82:	and    r8d,0x2
  405b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b90:	cmp    sil,0x2b
  405b94:	setne  dl
  405b97:	or     edi,edx
  405b99:	cmp    sil,0x3f
  405b9d:	setne  dl
  405ba0:	or     ecx,edx
  405ba2:	cmp    r10,rax
  405ba5:	je     0x405bef
  405ba7:	lea    rdx,[rax+0x1]
  405bab:	test   r9,r9
  405bae:	mov    QWORD PTR [rsp+0xc8],rdx
  405bb6:	movzx  esi,BYTE PTR [rax]
  405bb9:	je     0x405bc0
  405bbb:	movzx  esi,BYTE PTR [r9+rsi*1]
  405bc0:	cmp    sil,0x2a
  405bc4:	je     0x405cbd
  405bca:	test   r8d,r8d
  405bcd:	jne    0x405c80
  405bd3:	cmp    sil,0x3f
  405bd7:	je     0x405cbd
  405bdd:	cmp    sil,0x2b
  405be1:	je     0x405cbd
  405be7:	mov    QWORD PTR [rsp+0xc8],rax
  405bef:	test   r13,r13
  405bf2:	je     0x4062da
  405bf8:	test   cl,cl
  405bfa:	je     0x406a22
  405c00:	mov    rsi,QWORD PTR [rbp+0x0]
  405c04:	jmp    0x405c4a
  405c06:	mov    DWORD PTR [rbp+0x8],eax
  405c09:	mov    edx,eax
  405c0b:	mov    rcx,QWORD PTR [rbp+0x0]
  405c0f:	call   0x40a858
  405c14:	test   rax,rax
  405c17:	mov    QWORD PTR [rbp+0x0],rax
  405c1b:	je     0x405890
  405c21:	cmp    rax,rsi
  405c24:	je     0x405c47
  405c26:	mov    rdx,rax
  405c29:	sub    rdx,rsi
  405c2c:	lea    rcx,[r15+rdx*1]
  405c30:	add    rbx,rdx
  405c33:	add    r14,rdx
  405c36:	test   r15,r15
  405c39:	cmovne r15,rcx
  405c3d:	add    rdx,r13
  405c40:	test   r13,r13
  405c43:	cmovne r13,rdx
  405c47:	mov    rsi,rax
  405c4a:	mov    eax,DWORD PTR [rbp+0x8]
  405c4d:	mov    rdx,rbx
  405c50:	sub    rdx,rsi
  405c53:	add    edx,0x3
  405c56:	cmp    edx,eax
  405c58:	jbe    0x406da0
  405c5e:	cmp    eax,0x10000
  405c63:	je     0x405b40
  405c69:	add    eax,eax
  405c6b:	cmp    eax,0x10000
  405c70:	jbe    0x405c06
  405c72:	mov    DWORD PTR [rbp+0x8],0x10000
  405c79:	mov    edx,0x10000
  405c7e:	jmp    0x405c0b
  405c80:	cmp    sil,0x5c
  405c84:	jne    0x405be7
  405c8a:	cmp    r10,rdx
  405c8d:	je     0x406de9
  405c93:	lea    rdx,[rax+0x2]
  405c97:	test   r9,r9
  405c9a:	mov    QWORD PTR [rsp+0xc8],rdx
  405ca2:	movzx  esi,BYTE PTR [rax+0x1]
  405ca6:	je     0x405cad
  405ca8:	movzx  esi,BYTE PTR [r9+rsi*1]
  405cad:	cmp    sil,0x3f
  405cb1:	je     0x405cbd
  405cb3:	cmp    sil,0x2b
  405cb7:	jne    0x405be7
  405cbd:	mov    rax,rdx
  405cc0:	jmp    0x405b90
  405cc5:	lea    rdi,[rbx+0x2]
  405cc9:	lea    r12,[rbx+0x1]
  405ccd:	mov    BYTE PTR [rbx],0x2
  405cd0:	mov    BYTE PTR [rbx+0x1],0x0
  405cd4:	mov    rbx,QWORD PTR [rbp+0x0]
  405cd8:	jmp    0x405d2f
  405cda:	nop    WORD PTR [rax+rax*1+0x0]
  405ce0:	mov    DWORD PTR [rbp+0x8],eax
  405ce3:	mov    edx,eax
  405ce5:	mov    rcx,rbx
  405ce8:	call   0x40a858
  405ced:	test   rax,rax
  405cf0:	mov    QWORD PTR [rbp+0x0],rax
  405cf4:	je     0x405890
  405cfa:	cmp    rax,rbx
  405cfd:	je     0x405d2c
  405cff:	mov    rdx,rax
  405d02:	sub    rdx,rbx
  405d05:	lea    rcx,[r15+rdx*1]
  405d09:	add    rdi,rdx
  405d0c:	add    r14,rdx
  405d0f:	test   r15,r15
  405d12:	cmovne r15,rcx
  405d16:	lea    rcx,[r13+rdx*1+0x0]
  405d1b:	test   r13,r13
  405d1e:	cmovne r13,rcx
  405d22:	add    rdx,r12
  405d25:	test   r12,r12
  405d28:	cmovne r12,rdx
  405d2c:	mov    rbx,rax
  405d2f:	mov    eax,DWORD PTR [rbp+0x8]
  405d32:	mov    rdx,rdi
  405d35:	sub    rdx,rbx
  405d38:	add    edx,0x1
  405d3b:	cmp    edx,eax
  405d3d:	jbe    0x4062ce
  405d43:	cmp    eax,0x10000
  405d48:	je     0x405b40
  405d4e:	add    eax,eax
  405d50:	cmp    eax,0x10000
  405d55:	jbe    0x405ce0
  405d57:	mov    DWORD PTR [rbp+0x8],0x10000
  405d5e:	mov    edx,0x10000
  405d63:	jmp    0x405ce5
  405d65:	mov    rsi,QWORD PTR [rbp+0x0]
  405d69:	mov    r13,rbx
  405d6c:	jmp    0x405dbf
  405d6e:	xchg   ax,ax
  405d70:	mov    DWORD PTR [rbp+0x8],eax
  405d73:	mov    edx,eax
  405d75:	mov    rcx,rsi
  405d78:	call   0x40a858
  405d7d:	test   rax,rax
  405d80:	mov    QWORD PTR [rbp+0x0],rax
  405d84:	je     0x405890
  405d8a:	cmp    rax,rsi
  405d8d:	je     0x405dbc
  405d8f:	mov    rdx,rax
  405d92:	sub    rdx,rsi
  405d95:	lea    rcx,[r15+rdx*1]
  405d99:	add    rbx,rdx
  405d9c:	add    r14,rdx
  405d9f:	test   r15,r15
  405da2:	cmovne r15,rcx
  405da6:	lea    rcx,[r13+rdx*1+0x0]
  405dab:	test   r13,r13
  405dae:	cmovne r13,rcx
  405db2:	add    rdx,r12
  405db5:	test   r12,r12
  405db8:	cmovne r12,rdx
  405dbc:	mov    rsi,rax
  405dbf:	mov    eax,DWORD PTR [rbp+0x8]
  405dc2:	mov    rdx,rbx
  405dc5:	sub    rdx,rsi
  405dc8:	add    edx,0x1
  405dcb:	cmp    edx,eax
  405dcd:	jbe    0x406b30
  405dd3:	cmp    eax,0x10000
  405dd8:	je     0x405b40
  405dde:	add    eax,eax
  405de0:	cmp    eax,0x10000
  405de5:	jbe    0x405d70
  405de7:	mov    DWORD PTR [rbp+0x8],0x10000
  405dee:	mov    edx,0x10000
  405df3:	jmp    0x405d75
  405df5:	cmp    QWORD PTR [rsp+0x48],rax
  405dfa:	je     0x407524
  405e00:	mov    rsi,QWORD PTR [rbp+0x0]
  405e04:	jmp    0x405e51
  405e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e10:	mov    DWORD PTR [rbp+0x8],edx
  405e13:	mov    rcx,rsi
  405e16:	call   0x40a858
  405e1b:	test   rax,rax
  405e1e:	mov    QWORD PTR [rbp+0x0],rax
  405e22:	je     0x405890
  405e28:	cmp    rax,rsi
  405e2b:	je     0x405e4e
  405e2d:	mov    rdx,rax
  405e30:	sub    rdx,rsi
  405e33:	lea    rcx,[r15+rdx*1]
  405e37:	add    rbx,rdx
  405e3a:	add    r14,rdx
  405e3d:	test   r15,r15
  405e40:	cmovne r15,rcx
  405e44:	add    rdx,r12
  405e47:	test   r12,r12
  405e4a:	cmovne r12,rdx
  405e4e:	mov    rsi,rax
  405e51:	mov    edx,DWORD PTR [rbp+0x8]
  405e54:	mov    rax,rbx
  405e57:	sub    rax,rsi
  405e5a:	add    eax,0x22
  405e5d:	cmp    eax,edx
  405e5f:	jbe    0x406aa3
  405e65:	cmp    edx,0x10000
  405e6b:	je     0x405b40
  405e71:	add    edx,edx
  405e73:	cmp    edx,0x10000
  405e79:	jbe    0x405e10
  405e7b:	mov    DWORD PTR [rbp+0x8],0x10000
  405e82:	mov    edx,0x10000
  405e87:	jmp    0x405e13
  405e89:	cmp    QWORD PTR [rsp+0x48],rax
  405e8e:	je     0x406de9
  405e94:	lea    rax,[rcx+0x2]
  405e98:	mov    QWORD PTR [rsp+0xc8],rax
  405ea0:	movzx  esi,BYTE PTR [rcx+0x1]
  405ea4:	lea    edx,[rsi-0x27]
  405ea7:	cmp    dl,0x55
  405eaa:	ja     0x405a34
  405eb0:	movzx  ecx,dl
  405eb3:	lea    rdx,[rip+0x1d086]        # 0x422f40
  405eba:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  405ebe:	add    rdx,rcx
  405ec1:	jmp    rdx
  405ec3:	mov    rdi,QWORD PTR [rsp+0x1a0]
  405ecb:	lea    rdx,[rdi+0x1]
  405ecf:	cmp    rax,rdx
  405ed2:	je     0x405f1b
  405ed4:	test   BYTE PTR [rsp+0x1b0],0x8
  405edc:	jne    0x405f1b
  405ede:	lea    rax,[rcx-0x1]
  405ee2:	cmp    QWORD PTR [rsp+0x1a0],rax
  405eea:	jae    0x405ef6
  405eec:	cmp    BYTE PTR [rcx-0x2],0x5c
  405ef0:	je     0x407333
  405ef6:	movzx  eax,BYTE PTR [rcx-0x1]
  405efa:	cmp    al,0x28
  405efc:	je     0x406d86
  405f02:	cmp    al,0x7c
  405f04:	jne    0x405a42
  405f0a:	test   DWORD PTR [rsp+0x1b0],0x8000
  405f15:	je     0x405a42
  405f1b:	mov    rsi,QWORD PTR [rbp+0x0]
  405f1f:	jmp    0x405f71
  405f21:	mov    DWORD PTR [rbp+0x8],eax
  405f24:	mov    edx,eax
  405f26:	mov    rcx,QWORD PTR [rbp+0x0]
  405f2a:	call   0x40a858
  405f2f:	test   rax,rax
  405f32:	mov    QWORD PTR [rbp+0x0],rax
  405f36:	je     0x405890
  405f3c:	cmp    rax,rsi
  405f3f:	je     0x405f6e
  405f41:	mov    rdx,rax
  405f44:	sub    rdx,rsi
  405f47:	lea    rcx,[r15+rdx*1]
  405f4b:	add    rbx,rdx
  405f4e:	add    r14,rdx
  405f51:	test   r15,r15
  405f54:	cmovne r15,rcx
  405f58:	lea    rcx,[r13+rdx*1+0x0]
  405f5d:	test   r13,r13
  405f60:	cmovne r13,rcx
  405f64:	add    rdx,r12
  405f67:	test   r12,r12
  405f6a:	cmovne r12,rdx
  405f6e:	mov    rsi,rax
  405f71:	mov    eax,DWORD PTR [rbp+0x8]
  405f74:	mov    rdx,rbx
  405f77:	sub    rdx,rsi
  405f7a:	add    edx,0x1
  405f7d:	cmp    edx,eax
  405f7f:	jbe    0x406b44
  405f85:	cmp    eax,0x10000
  405f8a:	je     0x405b40
  405f90:	add    eax,eax
  405f92:	cmp    eax,0x10000
  405f97:	jbe    0x405f21
  405f99:	mov    DWORD PTR [rbp+0x8],0x10000
  405fa0:	mov    edx,0x10000
  405fa5:	jmp    0x405f26
  405faa:	test   DWORD PTR [rsp+0x1b0],0x8000
  405fb5:	je     0x405a42
  405fbb:	mov    esi,0x7c
  405fc0:	test   DWORD PTR [rsp+0x1b0],0x400
  405fcb:	jne    0x405a42
  405fd1:	mov    rsi,QWORD PTR [rbp+0x0]
  405fd5:	jmp    0x406010
  405fd7:	mov    DWORD PTR [rbp+0x8],eax
  405fda:	mov    edx,eax
  405fdc:	mov    rcx,QWORD PTR [rbp+0x0]
  405fe0:	call   0x40a858
  405fe5:	test   rax,rax
  405fe8:	mov    QWORD PTR [rbp+0x0],rax
  405fec:	je     0x405890
  405ff2:	cmp    rax,rsi
  405ff5:	je     0x40600d
  405ff7:	mov    rdx,rax
  405ffa:	sub    rdx,rsi
  405ffd:	add    rbx,rdx
  406000:	add    r14,rdx
  406003:	add    rdx,r15
  406006:	test   r15,r15
  406009:	cmovne r15,rdx
  40600d:	mov    rsi,rax
  406010:	mov    eax,DWORD PTR [rbp+0x8]
  406013:	mov    rdx,rbx
  406016:	sub    rdx,rsi
  406019:	add    edx,0x3
  40601c:	cmp    edx,eax
  40601e:	jbe    0x406c8e
  406024:	cmp    eax,0x10000
  406029:	je     0x405b40
  40602f:	add    eax,eax
  406031:	cmp    eax,0x10000
  406036:	jbe    0x405fd7
  406038:	mov    DWORD PTR [rbp+0x8],0x10000
  40603f:	mov    edx,0x10000
  406044:	jmp    0x405fdc
  406046:	test   DWORD PTR [rsp+0x1b0],0x800
  406051:	jne    0x405fc0
  406057:	jmp    0x405a42
  40605c:	cmp    QWORD PTR [rsp+0x48],rax
  406061:	je     0x4060b9
  406063:	test   BYTE PTR [rsp+0x1b0],0x8
  40606b:	jne    0x4060b9
  40606d:	movzx  edx,BYTE PTR [rcx+0x1]
  406071:	lea    rax,[rcx+0x2]
  406075:	cmp    dl,0x5c
  406078:	sete   r8b
  40607c:	cmp    QWORD PTR [rsp+0x48],rax
  406081:	ja     0x4069a4
  406087:	test   DWORD PTR [rsp+0x1b0],0x2000
  406092:	je     0x406bfd
  406098:	xor    eax,eax
  40609a:	cmp    dl,0x29
  40609d:	je     0x4060b9
  40609f:	test   DWORD PTR [rsp+0x1b0],0x8000
  4060aa:	je     0x406eba
  4060b0:	cmp    dl,0x7c
  4060b3:	jne    0x405a42
  4060b9:	mov    rsi,QWORD PTR [rbp+0x0]
  4060bd:	jmp    0x40610e
  4060bf:	mov    DWORD PTR [rbp+0x8],eax
  4060c2:	mov    edx,eax
  4060c4:	mov    rcx,rsi
  4060c7:	call   0x40a858
  4060cc:	test   rax,rax
  4060cf:	mov    QWORD PTR [rbp+0x0],rax
  4060d3:	je     0x405890
  4060d9:	cmp    rax,rsi
  4060dc:	je     0x40610b
  4060de:	mov    rdx,rax
  4060e1:	sub    rdx,rsi
  4060e4:	lea    rcx,[r15+rdx*1]
  4060e8:	add    rbx,rdx
  4060eb:	add    r14,rdx
  4060ee:	test   r15,r15
  4060f1:	cmovne r15,rcx
  4060f5:	lea    rcx,[r13+rdx*1+0x0]
  4060fa:	test   r13,r13
  4060fd:	cmovne r13,rcx
  406101:	add    rdx,r12
  406104:	test   r12,r12
  406107:	cmovne r12,rdx
  40610b:	mov    rsi,rax
  40610e:	mov    eax,DWORD PTR [rbp+0x8]
  406111:	mov    rdx,rbx
  406114:	sub    rdx,rsi
  406117:	add    edx,0x1
  40611a:	cmp    edx,eax
  40611c:	jbe    0x406c13
  406122:	cmp    eax,0x10000
  406127:	je     0x405b40
  40612d:	add    eax,eax
  40612f:	cmp    eax,0x10000
  406134:	jbe    0x4060bf
  406136:	mov    DWORD PTR [rbp+0x8],0x10000
  40613d:	mov    edx,0x10000
  406142:	jmp    0x4060c4
  406144:	test   DWORD PTR [rsp+0x1b0],0x2000
  40614f:	je     0x405a42
  406155:	add    QWORD PTR [rbp+0x28],0x1
  40615a:	add    DWORD PTR [rsp+0x54],0x1
  40615f:	mov    esi,DWORD PTR [rsp+0x70]
  406163:	cmp    DWORD PTR [rsp+0x50],esi
  406167:	je     0x407017
  40616d:	mov    eax,DWORD PTR [rsp+0x50]
  406171:	mov    rsi,QWORD PTR [rsp+0x40]
  406176:	mov    rdx,r14
  406179:	lea    rax,[rax+rax*4]
  40617d:	lea    rax,[rsi+rax*4]
  406181:	mov    rsi,QWORD PTR [rbp+0x0]
  406185:	sub    rdx,rsi
  406188:	test   r15,r15
  40618b:	mov    DWORD PTR [rax],edx
  40618d:	je     0x407010
  406193:	mov    rdx,r15
  406196:	sub    rdx,rsi
  406199:	add    edx,0x1
  40619c:	mov    edi,DWORD PTR [rsp+0x54]
  4061a0:	mov    DWORD PTR [rax+0x4],edx
  4061a3:	mov    rdx,rbx
  4061a6:	sub    rdx,rsi
  4061a9:	mov    DWORD PTR [rax+0xc],edx
  4061ac:	cmp    edi,0xff
  4061b2:	mov    DWORD PTR [rax+0x10],edi
  4061b5:	ja     0x406a04
  4061bb:	add    edx,0x2
  4061be:	mov    DWORD PTR [rax+0x8],edx
  4061c1:	jmp    0x4061ef
  4061c3:	mov    DWORD PTR [rbp+0x8],eax
  4061c6:	mov    edx,eax
  4061c8:	mov    rcx,QWORD PTR [rbp+0x0]
  4061cc:	call   0x40a858
  4061d1:	test   rax,rax
  4061d4:	mov    QWORD PTR [rbp+0x0],rax
  4061d8:	je     0x405890
  4061de:	cmp    rax,rsi
  4061e1:	je     0x4061ec
  4061e3:	mov    rdx,rax
  4061e6:	sub    rdx,rsi
  4061e9:	add    rbx,rdx
  4061ec:	mov    rsi,rax
  4061ef:	mov    eax,DWORD PTR [rbp+0x8]
  4061f2:	mov    rdx,rbx
  4061f5:	sub    rdx,rsi
  4061f8:	add    edx,0x3
  4061fb:	cmp    edx,eax
  4061fd:	jbe    0x4069f1
  406203:	cmp    eax,0x10000
  406208:	je     0x405b40
  40620e:	add    eax,eax
  406210:	cmp    eax,0x10000
  406215:	jbe    0x4061c3
  406217:	mov    DWORD PTR [rbp+0x8],0x10000
  40621e:	mov    edx,0x10000
  406223:	jmp    0x4061c8
  406225:	test   DWORD PTR [rsp+0x1b0],0x2000
  406230:	je     0x405a42
  406236:	test   r15,r15
  406239:	je     0x406c67
  40623f:	mov    rsi,QWORD PTR [rbp+0x0]
  406243:	jmp    0x406295
  406245:	mov    DWORD PTR [rbp+0x8],eax
  406248:	mov    edx,eax
  40624a:	mov    rcx,QWORD PTR [rbp+0x0]
  40624e:	call   0x40a858
  406253:	test   rax,rax
  406256:	mov    QWORD PTR [rbp+0x0],rax
  40625a:	je     0x405890
  406260:	cmp    rax,rsi
  406263:	je     0x406292
  406265:	mov    rdx,rax
  406268:	sub    rdx,rsi
  40626b:	lea    rcx,[r15+rdx*1]
  40626f:	add    rbx,rdx
  406272:	add    r14,rdx
  406275:	test   r15,r15
  406278:	cmovne r15,rcx
  40627c:	lea    rcx,[r13+rdx*1+0x0]
  406281:	test   r13,r13
  406284:	cmovne r13,rcx
  406288:	add    rdx,r12
  40628b:	test   r12,r12
  40628e:	cmovne r12,rdx
  406292:	mov    rsi,rax
  406295:	mov    eax,DWORD PTR [rbp+0x8]
  406298:	mov    rdx,rbx
  40629b:	sub    rdx,rsi
  40629e:	add    edx,0x1
  4062a1:	cmp    edx,eax
  4062a3:	jbe    0x406c48
  4062a9:	cmp    eax,0x10000
  4062ae:	je     0x405b40
  4062b4:	add    eax,eax
  4062b6:	cmp    eax,0x10000
  4062bb:	jbe    0x406245
  4062bd:	mov    DWORD PTR [rbp+0x8],0x10000
  4062c4:	mov    edx,0x10000
  4062c9:	jmp    0x40624a
  4062ce:	mov    BYTE PTR [rdi],sil
  4062d1:	add    BYTE PTR [r12],0x1
  4062d6:	lea    rbx,[rdi+0x1]
  4062da:	mov    rcx,QWORD PTR [rsp+0xc8]
  4062e2:	jmp    0x405837
  4062e7:	test   DWORD PTR [rsp+0x1b0],0x2000
  4062f2:	jne    0x405a34
  4062f8:	mov    ecx,DWORD PTR [rsp+0x50]
  4062fc:	test   ecx,ecx
  4062fe:	jne    0x406f1c
  406304:	test   DWORD PTR [rsp+0x1b0],0x20000
  40630f:	jne    0x405a34
  406315:	mov    rcx,QWORD PTR [rsp+0x40]
  40631a:	call   0x40a8f0
  40631f:	mov    eax,0x10
  406324:	jmp    0x405895
  406329:	nop    DWORD PTR [rax+0x0]
  406330:	test   DWORD PTR [rsp+0x1b0],0x2000
  40633b:	jne    0x405a34
  406341:	jmp    0x406155
  406346:	test   DWORD PTR [rsp+0x1b0],0x8400
  406351:	jne    0x405a34
  406357:	jmp    0x405fbb
  40635c:	mov    edx,DWORD PTR [rsp+0x1b0]
  406363:	and    edx,0x1200
  406369:	cmp    edx,0x200
  40636f:	jne    0x405a2f
  406375:	jmp    0x405965
  40637a:	nop    WORD PTR [rax+rax*1+0x0]
  406380:	test   DWORD PTR [rsp+0x1b0],0x80000
  40638b:	jne    0x405a42
  406391:	mov    rsi,QWORD PTR [rbp+0x0]
  406395:	mov    r13,rbx
  406398:	jmp    0x4063ea
  40639a:	mov    DWORD PTR [rbp+0x8],eax
  40639d:	mov    edx,eax
  40639f:	mov    rcx,QWORD PTR [rbp+0x0]
  4063a3:	call   0x40a858
  4063a8:	test   rax,rax
  4063ab:	mov    QWORD PTR [rbp+0x0],rax
  4063af:	je     0x405890
  4063b5:	cmp    rax,rsi
  4063b8:	je     0x4063e7
  4063ba:	mov    rdx,rax
  4063bd:	sub    rdx,rsi
  4063c0:	lea    rcx,[r15+rdx*1]
  4063c4:	add    rbx,rdx
  4063c7:	add    r14,rdx
  4063ca:	test   r15,r15
  4063cd:	cmovne r15,rcx
  4063d1:	lea    rcx,[r13+rdx*1+0x0]
  4063d6:	test   r13,r13
  4063d9:	cmovne r13,rcx
  4063dd:	add    rdx,r12
  4063e0:	test   r12,r12
  4063e3:	cmovne r12,rdx
  4063e7:	mov    rsi,rax
  4063ea:	mov    eax,DWORD PTR [rbp+0x8]
  4063ed:	mov    rdx,rbx
  4063f0:	sub    rdx,rsi
  4063f3:	add    edx,0x1
  4063f6:	cmp    edx,eax
  4063f8:	jbe    0x408248
  4063fe:	cmp    eax,0x10000
  406403:	je     0x405b40
  406409:	add    eax,eax
  40640b:	cmp    eax,0x10000
  406410:	jbe    0x40639a
  406412:	mov    DWORD PTR [rbp+0x8],0x10000
  406419:	mov    edx,0x10000
  40641e:	jmp    0x40639f
  406423:	test   DWORD PTR [rsp+0x1b0],0x80000
  40642e:	jne    0x405a42
  406434:	mov    rsi,QWORD PTR [rbp+0x0]
  406438:	jmp    0x406489
  40643a:	mov    DWORD PTR [rbp+0x8],eax
  40643d:	mov    edx,eax
  40643f:	mov    rcx,rsi
  406442:	call   0x40a858
  406447:	test   rax,rax
  40644a:	mov    QWORD PTR [rbp+0x0],rax
  40644e:	je     0x405890
  406454:	cmp    rax,rsi
  406457:	je     0x406486
  406459:	mov    rdx,rax
  40645c:	sub    rdx,rsi
  40645f:	lea    rcx,[r15+rdx*1]
  406463:	add    rbx,rdx
  406466:	add    r14,rdx
  406469:	test   r15,r15
  40646c:	cmovne r15,rcx
  406470:	lea    rcx,[r13+rdx*1+0x0]
  406475:	test   r13,r13
  406478:	cmovne r13,rcx
  40647c:	add    rdx,r12
  40647f:	test   r12,r12
  406482:	cmovne r12,rdx
  406486:	mov    rsi,rax
  406489:	mov    eax,DWORD PTR [rbp+0x8]
  40648c:	mov    rdx,rbx
  40648f:	sub    rdx,rsi
  406492:	add    edx,0x1
  406495:	cmp    edx,eax
  406497:	jbe    0x407fdc
  40649d:	cmp    eax,0x10000
  4064a2:	je     0x405b40
  4064a8:	add    eax,eax
  4064aa:	cmp    eax,0x10000
  4064af:	jbe    0x40643a
  4064b1:	mov    DWORD PTR [rbp+0x8],0x10000
  4064b8:	mov    edx,0x10000
  4064bd:	jmp    0x40643f
  4064bf:	test   DWORD PTR [rsp+0x1b0],0x80000
  4064ca:	jne    0x405a42
  4064d0:	mov    rsi,QWORD PTR [rbp+0x0]
  4064d4:	jmp    0x406525
  4064d6:	mov    DWORD PTR [rbp+0x8],eax
  4064d9:	mov    edx,eax
  4064db:	mov    rcx,rsi
  4064de:	call   0x40a858
  4064e3:	test   rax,rax
  4064e6:	mov    QWORD PTR [rbp+0x0],rax
  4064ea:	je     0x405890
  4064f0:	cmp    rax,rsi
  4064f3:	je     0x406522
  4064f5:	mov    rdx,rax
  4064f8:	sub    rdx,rsi
  4064fb:	lea    rcx,[r15+rdx*1]
  4064ff:	add    rbx,rdx
  406502:	add    r14,rdx
  406505:	test   r15,r15
  406508:	cmovne r15,rcx
  40650c:	lea    rcx,[r13+rdx*1+0x0]
  406511:	test   r13,r13
  406514:	cmovne r13,rcx
  406518:	add    rdx,r12
  40651b:	test   r12,r12
  40651e:	cmovne r12,rdx
  406522:	mov    rsi,rax
  406525:	mov    eax,DWORD PTR [rbp+0x8]
  406528:	mov    rdx,rbx
  40652b:	sub    rdx,rsi
  40652e:	add    edx,0x1
  406531:	cmp    edx,eax
  406533:	jbe    0x407fc8
  406539:	cmp    eax,0x10000
  40653e:	je     0x405b40
  406544:	add    eax,eax
  406546:	cmp    eax,0x10000
  40654b:	jbe    0x4064d6
  40654d:	mov    DWORD PTR [rbp+0x8],0x10000
  406554:	mov    edx,0x10000
  406559:	jmp    0x4064db
  40655b:	test   DWORD PTR [rsp+0x1b0],0x80000
  406566:	jne    0x405a42
  40656c:	mov    rsi,QWORD PTR [rbp+0x0]
  406570:	mov    r13,rbx
  406573:	jmp    0x4065c4
  406575:	mov    DWORD PTR [rbp+0x8],eax
  406578:	mov    edx,eax
  40657a:	mov    rcx,rsi
  40657d:	call   0x40a858
  406582:	test   rax,rax
  406585:	mov    QWORD PTR [rbp+0x0],rax
  406589:	je     0x405890
  40658f:	cmp    rax,rsi
  406592:	je     0x4065c1
  406594:	mov    rdx,rax
  406597:	sub    rdx,rsi
  40659a:	lea    rcx,[r15+rdx*1]
  40659e:	add    rbx,rdx
  4065a1:	add    r14,rdx
  4065a4:	test   r15,r15
  4065a7:	cmovne r15,rcx
  4065ab:	lea    rcx,[r13+rdx*1+0x0]
  4065b0:	test   r13,r13
  4065b3:	cmovne r13,rcx
  4065b7:	add    rdx,r12
  4065ba:	test   r12,r12
  4065bd:	cmovne r12,rdx
  4065c1:	mov    rsi,rax
  4065c4:	mov    eax,DWORD PTR [rbp+0x8]
  4065c7:	mov    rdx,rbx
  4065ca:	sub    rdx,rsi
  4065cd:	add    edx,0x1
  4065d0:	cmp    edx,eax
  4065d2:	jbe    0x407fb4
  4065d8:	cmp    eax,0x10000
  4065dd:	je     0x405b40
  4065e3:	add    eax,eax
  4065e5:	cmp    eax,0x10000
  4065ea:	jbe    0x406575
  4065ec:	mov    DWORD PTR [rbp+0x8],0x10000
  4065f3:	mov    edx,0x10000
  4065f8:	jmp    0x40657a
  4065fa:	test   DWORD PTR [rsp+0x1b0],0x80000
  406605:	jne    0x405a42
  40660b:	mov    rsi,QWORD PTR [rbp+0x0]
  40660f:	jmp    0x406660
  406611:	mov    DWORD PTR [rbp+0x8],eax
  406614:	mov    edx,eax
  406616:	mov    rcx,rsi
  406619:	call   0x40a858
  40661e:	test   rax,rax
  406621:	mov    QWORD PTR [rbp+0x0],rax
  406625:	je     0x405890
  40662b:	cmp    rax,rsi
  40662e:	je     0x40665d
  406630:	mov    rdx,rax
  406633:	sub    rdx,rsi
  406636:	lea    rcx,[r15+rdx*1]
  40663a:	add    rbx,rdx
  40663d:	add    r14,rdx
  406640:	test   r15,r15
  406643:	cmovne r15,rcx
  406647:	lea    rcx,[r13+rdx*1+0x0]
  40664c:	test   r13,r13
  40664f:	cmovne r13,rcx
  406653:	add    rdx,r12
  406656:	test   r12,r12
  406659:	cmovne r12,rdx
  40665d:	mov    rsi,rax
  406660:	mov    eax,DWORD PTR [rbp+0x8]
  406663:	mov    rdx,rbx
  406666:	sub    rdx,rsi
  406669:	add    edx,0x1
  40666c:	cmp    edx,eax
  40666e:	jbe    0x407fa0
  406674:	cmp    eax,0x10000
  406679:	je     0x405b40
  40667f:	add    eax,eax
  406681:	cmp    eax,0x10000
  406686:	jbe    0x406611
  406688:	mov    DWORD PTR [rbp+0x8],0x10000
  40668f:	mov    edx,0x10000
  406694:	jmp    0x406616
  406696:	test   DWORD PTR [rsp+0x1b0],0x80000
  4066a1:	jne    0x405a42
  4066a7:	mov    rsi,QWORD PTR [rbp+0x0]
  4066ab:	jmp    0x4066fc
  4066ad:	mov    DWORD PTR [rbp+0x8],eax
  4066b0:	mov    edx,eax
  4066b2:	mov    rcx,rsi
  4066b5:	call   0x40a858
  4066ba:	test   rax,rax
  4066bd:	mov    QWORD PTR [rbp+0x0],rax
  4066c1:	je     0x405890
  4066c7:	cmp    rax,rsi
  4066ca:	je     0x4066f9
  4066cc:	mov    rdx,rax
  4066cf:	sub    rdx,rsi
  4066d2:	lea    rcx,[r15+rdx*1]
  4066d6:	add    rbx,rdx
  4066d9:	add    r14,rdx
  4066dc:	test   r15,r15
  4066df:	cmovne r15,rcx
  4066e3:	lea    rcx,[r13+rdx*1+0x0]
  4066e8:	test   r13,r13
  4066eb:	cmovne r13,rcx
  4066ef:	add    rdx,r12
  4066f2:	test   r12,r12
  4066f5:	cmovne r12,rdx
  4066f9:	mov    rsi,rax
  4066fc:	mov    eax,DWORD PTR [rbp+0x8]
  4066ff:	mov    rdx,rbx
  406702:	sub    rdx,rsi
  406705:	add    edx,0x1
  406708:	cmp    edx,eax
  40670a:	jbe    0x408018
  406710:	cmp    eax,0x10000
  406715:	je     0x405b40
  40671b:	add    eax,eax
  40671d:	cmp    eax,0x10000
  406722:	jbe    0x4066ad
  406724:	mov    DWORD PTR [rbp+0x8],0x10000
  40672b:	mov    edx,0x10000
  406730:	jmp    0x4066b2
  406732:	test   DWORD PTR [rsp+0x1b0],0x80000
  40673d:	jne    0x405a42
  406743:	mov    rsi,QWORD PTR [rbp+0x0]
  406747:	jmp    0x406798
  406749:	mov    DWORD PTR [rbp+0x8],eax
  40674c:	mov    edx,eax
  40674e:	mov    rcx,rsi
  406751:	call   0x40a858
  406756:	test   rax,rax
  406759:	mov    QWORD PTR [rbp+0x0],rax
  40675d:	je     0x405890
  406763:	cmp    rax,rsi
  406766:	je     0x406795
  406768:	mov    rdx,rax
  40676b:	sub    rdx,rsi
  40676e:	lea    rcx,[r15+rdx*1]
  406772:	add    rbx,rdx
  406775:	add    r14,rdx
  406778:	test   r15,r15
  40677b:	cmovne r15,rcx
  40677f:	lea    rcx,[r13+rdx*1+0x0]
  406784:	test   r13,r13
  406787:	cmovne r13,rcx
  40678b:	add    rdx,r12
  40678e:	test   r12,r12
  406791:	cmovne r12,rdx
  406795:	mov    rsi,rax
  406798:	mov    eax,DWORD PTR [rbp+0x8]
  40679b:	mov    rdx,rbx
  40679e:	sub    rdx,rsi
  4067a1:	add    edx,0x1
  4067a4:	cmp    edx,eax
  4067a6:	jbe    0x407ff0
  4067ac:	cmp    eax,0x10000
  4067b1:	je     0x405b40
  4067b7:	add    eax,eax
  4067b9:	cmp    eax,0x10000
  4067be:	jbe    0x406749
  4067c0:	mov    DWORD PTR [rbp+0x8],0x10000
  4067c7:	mov    edx,0x10000
  4067cc:	jmp    0x40674e
  4067ce:	test   DWORD PTR [rsp+0x1b0],0x4000
  4067d9:	jne    0x405a42
  4067df:	lea    edi,[rsi-0x30]
  4067e2:	movzx  ecx,dil
  4067e6:	cmp    DWORD PTR [rsp+0x54],ecx
  4067ea:	jb     0x408004
  4067f0:	mov    edx,DWORD PTR [rsp+0x50]
  4067f4:	sub    edx,0x1
  4067f7:	js     0x406830
  4067f9:	movsxd rax,edx
  4067fc:	mov    r11,QWORD PTR [rsp+0x40]
  406801:	lea    rax,[rax+rax*4]
  406805:	shl    rax,0x2
  406809:	cmp    ecx,DWORD PTR [r11+rax*1+0x10]
  40680e:	je     0x405a42
  406814:	lea    rax,[r11+rax*1-0x4]
  406819:	jmp    0x406828
  40681b:	sub    rax,0x14
  40681f:	cmp    ecx,DWORD PTR [rax+0x14]
  406822:	je     0x405a42
  406828:	sub    edx,0x1
  40682b:	cmp    edx,0xffffffff
  40682e:	jne    0x40681b
  406830:	mov    rsi,QWORD PTR [rbp+0x0]
  406834:	mov    eax,DWORD PTR [rbp+0x8]
  406837:	mov    rdx,rbx
  40683a:	mov    r13,rbx
  40683d:	sub    rdx,rsi
  406840:	add    edx,0x2
  406843:	cmp    edx,eax
  406845:	jbe    0x4068be
  406847:	cmp    eax,0x10000
  40684c:	je     0x405b40
  406852:	add    eax,eax
  406854:	cmp    eax,0x10000
  406859:	ja     0x40774a
  40685f:	mov    DWORD PTR [rbp+0x8],eax
  406862:	mov    edx,eax
  406864:	mov    rcx,rsi
  406867:	call   0x40a858
  40686c:	test   rax,rax
  40686f:	mov    QWORD PTR [rbp+0x0],rax
  406873:	je     0x405890
  406879:	cmp    rax,rsi
  40687c:	je     0x4068ab
  40687e:	mov    rdx,rax
  406881:	sub    rdx,rsi
  406884:	lea    rcx,[r15+rdx*1]
  406888:	add    rbx,rdx
  40688b:	add    r14,rdx
  40688e:	test   r15,r15
  406891:	cmovne r15,rcx
  406895:	lea    rcx,[r13+rdx*1+0x0]
  40689a:	test   r13,r13
  40689d:	cmovne r13,rcx
  4068a1:	add    rdx,r12
  4068a4:	test   r12,r12
  4068a7:	cmovne r12,rdx
  4068ab:	mov    rsi,rax
  4068ae:	mov    rdx,rbx
  4068b1:	mov    eax,DWORD PTR [rbp+0x8]
  4068b4:	sub    rdx,rsi
  4068b7:	add    edx,0x2
  4068ba:	cmp    edx,eax
  4068bc:	ja     0x406847
  4068be:	mov    BYTE PTR [rbx],0x8
  4068c1:	mov    BYTE PTR [rbx+0x1],dil
  4068c5:	add    rbx,0x2
  4068c9:	mov    rcx,QWORD PTR [rsp+0xc8]
  4068d1:	jmp    0x405837
  4068d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068e0:	test   BYTE PTR [rsp+0x1b0],0x2
  4068e8:	jne    0x405b5b
  4068ee:	jmp    0x405a34
  4068f3:	test   DWORD PTR [rsp+0x1b0],0x80000
  4068fe:	jne    0x405a42
  406904:	mov    rsi,QWORD PTR [rbp+0x0]
  406908:	jmp    0x406959
  40690a:	mov    DWORD PTR [rbp+0x8],eax
  40690d:	mov    edx,eax
  40690f:	mov    rcx,rsi
  406912:	call   0x40a858
  406917:	test   rax,rax
  40691a:	mov    QWORD PTR [rbp+0x0],rax
  40691e:	je     0x405890
  406924:	cmp    rax,rsi
  406927:	je     0x406956
  406929:	mov    rdx,rax
  40692c:	sub    rdx,rsi
  40692f:	lea    rcx,[r15+rdx*1]
  406933:	add    rbx,rdx
  406936:	add    r14,rdx
  406939:	test   r15,r15
  40693c:	cmovne r15,rcx
  406940:	lea    rcx,[r13+rdx*1+0x0]
  406945:	test   r13,r13
  406948:	cmovne r13,rcx
  40694c:	add    rdx,r12
  40694f:	test   r12,r12
  406952:	cmovne r12,rdx
  406956:	mov    rsi,rax
  406959:	mov    eax,DWORD PTR [rbp+0x8]
  40695c:	mov    rdx,rbx
  40695f:	sub    rdx,rsi
  406962:	add    edx,0x1
  406965:	cmp    edx,eax
  406967:	jbe    0x407f67
  40696d:	cmp    eax,0x10000
  406972:	je     0x405b40
  406978:	add    eax,eax
  40697a:	cmp    eax,0x10000
  40697f:	jbe    0x40690a
  406981:	mov    DWORD PTR [rbp+0x8],0x10000
  406988:	mov    edx,0x10000
  40698d:	jmp    0x40690f
  40698f:	mov    ecx,0x20
  406994:	call   0x40a880
  406999:	mov    QWORD PTR [r14],rax
  40699c:	mov    rbx,rax
  40699f:	jmp    0x4058cc
  4069a4:	test   DWORD PTR [rsp+0x1b0],0x2000
  4069af:	jne    0x40609a
  4069b5:	test   r8b,r8b
  4069b8:	je     0x406bfd
  4069be:	test   rax,rax
  4069c1:	je     0x406bfd
  4069c7:	movzx  eax,BYTE PTR [rcx+0x2]
  4069cb:	cmp    al,0x29
  4069cd:	je     0x4060b9
  4069d3:	test   DWORD PTR [rsp+0x1b0],0x8000
  4069de:	jne    0x405a42
  4069e4:	cmp    al,0x7c
  4069e6:	je     0x4060b9
  4069ec:	jmp    0x405a42
  4069f1:	movzx  eax,BYTE PTR [rsp+0x54]
  4069f6:	mov    BYTE PTR [rbx],0x6
  4069f9:	add    rbx,0x3
  4069fd:	mov    BYTE PTR [rbx-0x1],0x0
  406a01:	mov    BYTE PTR [rbx-0x2],al
  406a04:	add    DWORD PTR [rsp+0x50],0x1
  406a09:	mov    rcx,QWORD PTR [rsp+0xc8]
  406a11:	mov    r14,rbx
  406a14:	xor    r15d,r15d
  406a17:	xor    r13d,r13d
  406a1a:	xor    r12d,r12d
  406a1d:	jmp    0x405837
  406a22:	xor    esi,esi
  406a24:	mov    r12,QWORD PTR [rbp+0x0]
  406a28:	jmp    0x406a6d
  406a2a:	mov    DWORD PTR [rbp+0x8],eax
  406a2d:	mov    edx,eax
  406a2f:	mov    rcx,r12
  406a32:	call   0x40a858
  406a37:	test   rax,rax
  406a3a:	mov    QWORD PTR [rbp+0x0],rax
  406a3e:	je     0x405890
  406a44:	cmp    rax,r12
  406a47:	je     0x406a6a
  406a49:	mov    rdx,rax
  406a4c:	sub    rdx,r12
  406a4f:	lea    rcx,[r15+rdx*1]
  406a53:	add    rbx,rdx
  406a56:	add    r14,rdx
  406a59:	test   r15,r15
  406a5c:	cmovne r15,rcx
  406a60:	add    rdx,r13
  406a63:	test   r13,r13
  406a66:	cmovne r13,rdx
  406a6a:	mov    r12,rax
  406a6d:	mov    eax,DWORD PTR [rbp+0x8]
  406a70:	mov    rdx,rbx
  406a73:	sub    rdx,r12
  406a76:	add    edx,0x3
  406a79:	cmp    edx,eax
  406a7b:	jbe    0x406dfd
  406a81:	cmp    eax,0x10000
  406a86:	je     0x405b40
  406a8c:	add    eax,eax
  406a8e:	cmp    eax,0x10000
  406a93:	jbe    0x406a2a
  406a95:	mov    DWORD PTR [rbp+0x8],0x10000
  406a9c:	mov    edx,0x10000
  406aa1:	jmp    0x406a2f
  406aa3:	mov    r13,rbx
  406aa6:	jmp    0x406af8
  406aa8:	mov    DWORD PTR [rbp+0x8],edx
  406aab:	mov    rcx,rsi
  406aae:	call   0x40a858
  406ab3:	test   rax,rax
  406ab6:	mov    QWORD PTR [rbp+0x0],rax
  406aba:	je     0x405890
  406ac0:	cmp    rax,rsi
  406ac3:	je     0x406af2
  406ac5:	mov    rdx,rax
  406ac8:	sub    rdx,rsi
  406acb:	lea    rcx,[r15+rdx*1]
  406acf:	add    rbx,rdx
  406ad2:	add    r14,rdx
  406ad5:	test   r15,r15
  406ad8:	cmovne r15,rcx
  406adc:	lea    rcx,[r13+rdx*1+0x0]
  406ae1:	test   r13,r13
  406ae4:	cmovne r13,rcx
  406ae8:	add    rdx,r12
  406aeb:	test   r12,r12
  406aee:	cmovne r12,rdx
  406af2:	mov    edx,DWORD PTR [rbp+0x8]
  406af5:	mov    rsi,rax
  406af8:	mov    rax,rbx
  406afb:	sub    rax,rsi
  406afe:	add    eax,0x1
  406b01:	cmp    eax,edx
  406b03:	jbe    0x407050
  406b09:	cmp    edx,0x10000
  406b0f:	je     0x405b40
  406b15:	add    edx,edx
  406b17:	cmp    edx,0x10000
  406b1d:	jbe    0x406aa8
  406b1f:	mov    DWORD PTR [rbp+0x8],0x10000
  406b26:	mov    edx,0x10000
  406b2b:	jmp    0x406aab
  406b30:	mov    BYTE PTR [rbx],0x3
  406b33:	add    rbx,0x1
  406b37:	mov    rcx,QWORD PTR [rsp+0xc8]
  406b3f:	jmp    0x405837
  406b44:	mov    BYTE PTR [rbx],0x9
  406b47:	add    rbx,0x1
  406b4b:	mov    rcx,QWORD PTR [rsp+0xc8]
  406b53:	jmp    0x405837
  406b58:	test   r15,r15
  406b5b:	mov    r14,rbp
  406b5e:	je     0x406b78
  406b60:	mov    rax,rbx
  406b63:	mov    BYTE PTR [r15],0xe
  406b67:	sub    rax,r15
  406b6a:	sub    eax,0x3
  406b6d:	mov    BYTE PTR [r15+0x1],al
  406b71:	sar    eax,0x8
  406b74:	mov    BYTE PTR [r15+0x2],al
  406b78:	mov    eax,DWORD PTR [rsp+0x50]
  406b7c:	test   eax,eax
  406b7e:	jne    0x406ee9
  406b84:	test   DWORD PTR [rsp+0x1b0],0x40000
  406b8f:	je     0x406f04
  406b95:	mov    rsi,QWORD PTR [r14]
  406b98:	jmp    0x406bc5
  406b9a:	mov    DWORD PTR [r14+0x8],eax
  406b9e:	mov    edx,eax
  406ba0:	mov    rcx,rsi
  406ba3:	call   0x40a858
  406ba8:	test   rax,rax
  406bab:	mov    QWORD PTR [r14],rax
  406bae:	je     0x405890
  406bb4:	cmp    rax,rsi
  406bb7:	je     0x406bc2
  406bb9:	mov    rdx,rax
  406bbc:	sub    rdx,rsi
  406bbf:	add    rbx,rdx
  406bc2:	mov    rsi,rax
  406bc5:	mov    eax,DWORD PTR [r14+0x8]
  406bc9:	mov    rdx,rbx
  406bcc:	sub    rdx,rsi
  406bcf:	add    edx,0x1
  406bd2:	cmp    edx,eax
  406bd4:	jbe    0x406efd
  406bda:	cmp    eax,0x10000
  406bdf:	je     0x405b40
  406be5:	add    eax,eax
  406be7:	cmp    eax,0x10000
  406bec:	jbe    0x406b9a
  406bee:	mov    DWORD PTR [r14+0x8],0x10000
  406bf6:	mov    edx,0x10000
  406bfb:	jmp    0x406ba0
  406bfd:	test   DWORD PTR [rsp+0x1b0],0x8000
  406c08:	jne    0x4060b0
  406c0e:	jmp    0x405a42
  406c13:	mov    BYTE PTR [rbx],0xa
  406c16:	add    rbx,0x1
  406c1a:	mov    rcx,QWORD PTR [rsp+0xc8]
  406c22:	jmp    0x405837
  406c27:	test   BYTE PTR [rsp+0x1b0],0x20
  406c2f:	jne    0x407f34
  406c35:	test   BYTE PTR [rsp+0x1b0],0x10
  406c3d:	je     0x405a42
  406c43:	jmp    0x405b64
  406c48:	mov    rax,rbx
  406c4b:	mov    BYTE PTR [rbx],0x14
  406c4e:	mov    BYTE PTR [r15],0xe
  406c52:	sub    rax,r15
  406c55:	add    rbx,0x1
  406c59:	sub    eax,0x3
  406c5c:	mov    BYTE PTR [r15+0x1],al
  406c60:	sar    eax,0x8
  406c63:	mov    BYTE PTR [r15+0x2],al
  406c67:	mov    edx,DWORD PTR [rsp+0x50]
  406c6b:	test   edx,edx
  406c6d:	jne    0x406f25
  406c73:	test   DWORD PTR [rsp+0x1b0],0x20000
  406c7e:	je     0x406315
  406c84:	mov    esi,0x29
  406c89:	jmp    0x405a42
  406c8e:	mov    eax,ebx
  406c90:	lea    rsi,[rbx+0x3]
  406c94:	sub    eax,r14d
  406c97:	cmp    r14,rbx
  406c9a:	lea    edx,[rax+0x3]
  406c9d:	je     0x406cae
  406c9f:	sub    rbx,0x1
  406ca3:	movzx  eax,BYTE PTR [rbx]
  406ca6:	cmp    rbx,r14
  406ca9:	mov    BYTE PTR [rbx+0x3],al
  406cac:	jne    0x406c9f
  406cae:	mov    BYTE PTR [r14+0x1],dl
  406cb2:	sar    edx,0x8
  406cb5:	test   r15,r15
  406cb8:	mov    BYTE PTR [r14],0xf
  406cbc:	mov    BYTE PTR [r14+0x2],dl
  406cc0:	je     0x406cda
  406cc2:	mov    rax,rsi
  406cc5:	mov    BYTE PTR [r15],0xe
  406cc9:	sub    rax,r15
  406ccc:	sub    eax,0x3
  406ccf:	mov    BYTE PTR [r15+0x1],al
  406cd3:	sar    eax,0x8
  406cd6:	mov    BYTE PTR [r15+0x2],al
  406cda:	mov    rbx,QWORD PTR [rbp+0x0]
  406cde:	mov    r15,rsi
  406ce1:	jmp    0x406d18
  406ce3:	mov    DWORD PTR [rbp+0x8],eax
  406ce6:	mov    edx,eax
  406ce8:	mov    rcx,rbx
  406ceb:	call   0x40a858
  406cf0:	test   rax,rax
  406cf3:	mov    QWORD PTR [rbp+0x0],rax
  406cf7:	je     0x405890
  406cfd:	cmp    rax,rbx
  406d00:	je     0x406d15
  406d02:	mov    rdx,rax
  406d05:	sub    rdx,rbx
  406d08:	add    rsi,rdx
  406d0b:	add    rdx,r15
  406d0e:	test   r15,r15
  406d11:	cmovne r15,rdx
  406d15:	mov    rbx,rax
  406d18:	mov    eax,DWORD PTR [rbp+0x8]
  406d1b:	mov    rdx,rsi
  406d1e:	sub    rdx,rbx
  406d21:	add    edx,0x3
  406d24:	cmp    edx,eax
  406d26:	jbe    0x4077eb
  406d2c:	cmp    eax,0x10000
  406d31:	je     0x405b40
  406d37:	add    eax,eax
  406d39:	cmp    eax,0x10000
  406d3e:	jbe    0x406ce3
  406d40:	mov    DWORD PTR [rbp+0x8],0x10000
  406d47:	mov    edx,0x10000
  406d4c:	jmp    0x406ce8
  406d4e:	test   DWORD PTR [rsp+0x1b0],0x200000
  406d59:	je     0x407f7b
  406d5f:	mov    ecx,DWORD PTR [rsp+0x1b0]
  406d66:	and    ecx,0x1000
  406d6c:	test   ecx,ecx
  406d6e:	mov    QWORD PTR [rsp+0xc8],rax
  406d76:	mov    esi,0x7b
  406d7b:	jne    0x405a42
  406d81:	jmp    0x405a2f
  406d86:	test   DWORD PTR [rsp+0x1b0],0x2000
  406d91:	jne    0x405f1b
  406d97:	jmp    0x405a42
  406d9c:	nop    DWORD PTR [rax+0x0]
  406da0:	mov    rsi,QWORD PTR [rsp+0x38]
  406da5:	mov    rax,QWORD PTR [rsp+0xc8]
  406dad:	test   rsi,rsi
  406db0:	je     0x408042
  406db6:	movzx  edx,BYTE PTR [rax-0x2]
  406dba:	movsx  ecx,BYTE PTR [rsi+rdx*1]
  406dbe:	movsx  edx,BYTE PTR [rsi+0x2e]
  406dc2:	cmp    ecx,edx
  406dc4:	je     0x407350
  406dca:	mov    eax,r13d
  406dcd:	mov    BYTE PTR [rbx],0x12
  406dd0:	xor    esi,esi
  406dd2:	sub    eax,ebx
  406dd4:	sub    eax,0x6
  406dd7:	mov    BYTE PTR [rbx+0x1],al
  406dda:	sar    eax,0x8
  406ddd:	mov    BYTE PTR [rbx+0x2],al
  406de0:	add    rbx,0x3
  406de4:	jmp    0x406a24
  406de9:	mov    rcx,QWORD PTR [rsp+0x40]
  406dee:	call   0x40a8f0
  406df3:	mov    eax,0x5
  406df8:	jmp    0x405895
  406dfd:	mov    edx,ebx
  406dff:	lea    r12,[rbx+0x3]
  406e03:	sub    edx,r13d
  406e06:	cmp    sil,0x1
  406e0a:	sbb    ecx,ecx
  406e0c:	add    ecx,0x10
  406e0f:	cmp    r13,rbx
  406e12:	je     0x406e23
  406e14:	sub    rbx,0x1
  406e18:	movzx  eax,BYTE PTR [rbx]
  406e1b:	cmp    rbx,r13
  406e1e:	mov    BYTE PTR [rbx+0x3],al
  406e21:	jne    0x406e14
  406e23:	mov    BYTE PTR [r13+0x1],dl
  406e27:	sar    edx,0x8
  406e2a:	test   dil,dil
  406e2d:	mov    BYTE PTR [r13+0x0],cl
  406e31:	mov    BYTE PTR [r13+0x2],dl
  406e35:	jne    0x406ffd
  406e3b:	mov    rbx,QWORD PTR [rbp+0x0]
  406e3f:	jmp    0x406e84
  406e41:	mov    DWORD PTR [rbp+0x8],eax
  406e44:	mov    edx,eax
  406e46:	mov    rcx,rbx
  406e49:	call   0x40a858
  406e4e:	test   rax,rax
  406e51:	mov    QWORD PTR [rbp+0x0],rax
  406e55:	je     0x405890
  406e5b:	cmp    rax,rbx
  406e5e:	je     0x406e81
  406e60:	mov    rdx,rax
  406e63:	sub    rdx,rbx
  406e66:	lea    rcx,[r15+rdx*1]
  406e6a:	add    r12,rdx
  406e6d:	add    r14,rdx
  406e70:	test   r15,r15
  406e73:	cmovne r15,rcx
  406e77:	add    rdx,r13
  406e7a:	test   r13,r13
  406e7d:	cmovne r13,rdx
  406e81:	mov    rbx,rax
  406e84:	mov    eax,DWORD PTR [rbp+0x8]
  406e87:	mov    rdx,r12
  406e8a:	sub    rdx,rbx
  406e8d:	add    edx,0x3
  406e90:	cmp    edx,eax
  406e92:	jbe    0x4071ce
  406e98:	cmp    eax,0x10000
  406e9d:	je     0x405b40
  406ea3:	add    eax,eax
  406ea5:	cmp    eax,0x10000
  406eaa:	jbe    0x406e41
  406eac:	mov    DWORD PTR [rbp+0x8],0x10000
  406eb3:	mov    edx,0x10000
  406eb8:	jmp    0x406e46
  406eba:	test   rax,rax
  406ebd:	je     0x405a42
  406ec3:	test   r8b,r8b
  406ec6:	je     0x405a42
  406ecc:	movzx  eax,BYTE PTR [rax]
  406ecf:	jmp    0x4069e4
  406ed4:	cmp    al,0x3f
  406ed6:	je     0x405aba
  406edc:	cmp    al,0x2b
  406ede:	jne    0x405a82
  406ee4:	jmp    0x405aba
  406ee9:	mov    rcx,QWORD PTR [rsp+0x40]
  406eee:	call   0x40a8f0
  406ef3:	mov    eax,0x8
  406ef8:	jmp    0x405895
  406efd:	mov    BYTE PTR [rbx],0x1
  406f00:	add    rbx,0x1
  406f04:	mov    rcx,QWORD PTR [rsp+0x40]
  406f09:	call   0x40a8f0
  406f0e:	sub    rbx,QWORD PTR [r14]
  406f11:	xor    eax,eax
  406f13:	mov    DWORD PTR [r14+0xc],ebx
  406f17:	jmp    0x405895
  406f1c:	test   r15,r15
  406f1f:	jne    0x40623f
  406f25:	sub    DWORD PTR [rsp+0x50],0x1
  406f2a:	mov    rsi,QWORD PTR [rsp+0x40]
  406f2f:	xor    r15d,r15d
  406f32:	mov    eax,DWORD PTR [rsp+0x50]
  406f36:	mov    rcx,QWORD PTR [rbp+0x0]
  406f3a:	lea    rax,[rax+rax*4]
  406f3e:	lea    rdx,[rsi+rax*4]
  406f42:	movsxd rax,DWORD PTR [rdx]
  406f45:	lea    r14,[rcx+rax*1]
  406f49:	movsxd rax,DWORD PTR [rdx+0x4]
  406f4d:	test   eax,eax
  406f4f:	je     0x406f56
  406f51:	lea    r15,[rcx+rax*1-0x1]
  406f56:	movsxd rax,DWORD PTR [rdx+0xc]
  406f5a:	mov    edi,DWORD PTR [rdx+0x10]
  406f5d:	cmp    edi,0xff
  406f63:	lea    r13,[rcx+rax*1]
  406f67:	ja     0x4071be
  406f6d:	movzx  r12d,BYTE PTR [rsp+0x54]
  406f73:	movsxd rax,DWORD PTR [rdx+0x8]
  406f77:	sub    r12d,edi
  406f7a:	mov    BYTE PTR [rcx+rax*1],r12b
  406f7e:	mov    rsi,QWORD PTR [rbp+0x0]
  406f82:	jmp    0x406fc7
  406f84:	mov    DWORD PTR [rbp+0x8],eax
  406f87:	mov    edx,eax
  406f89:	mov    rcx,rsi
  406f8c:	call   0x40a858
  406f91:	test   rax,rax
  406f94:	mov    QWORD PTR [rbp+0x0],rax
  406f98:	je     0x405890
  406f9e:	cmp    rax,rsi
  406fa1:	je     0x406fc4
  406fa3:	mov    rdx,rax
  406fa6:	sub    rdx,rsi
  406fa9:	lea    rcx,[r15+rdx*1]
  406fad:	add    rbx,rdx
  406fb0:	add    r14,rdx
  406fb3:	test   r15,r15
  406fb6:	cmovne r15,rcx
  406fba:	add    rdx,r13
  406fbd:	test   r13,r13
  406fc0:	cmovne r13,rdx
  406fc4:	mov    rsi,rax
  406fc7:	mov    eax,DWORD PTR [rbp+0x8]
  406fca:	mov    rdx,rbx
  406fcd:	sub    rdx,rsi
  406fd0:	add    edx,0x3
  406fd3:	cmp    edx,eax
  406fd5:	jbe    0x407f48
  406fdb:	cmp    eax,0x10000
  406fe0:	je     0x405b40
  406fe6:	add    eax,eax
  406fe8:	cmp    eax,0x10000
  406fed:	jbe    0x406f84
  406fef:	mov    DWORD PTR [rbp+0x8],0x10000
  406ff6:	mov    edx,0x10000
  406ffb:	jmp    0x406f89
  406ffd:	mov    rbx,r12
  407000:	mov    rcx,QWORD PTR [rsp+0xc8]
  407008:	xor    r12d,r12d
  40700b:	jmp    0x405837
  407010:	xor    edx,edx
  407012:	jmp    0x40619c
  407017:	mov    eax,DWORD PTR [rsp+0x50]
  40701b:	mov    rcx,QWORD PTR [rsp+0x40]
  407020:	add    eax,eax
  407022:	lea    rdx,[rax+rax*4]
  407026:	mov    DWORD PTR [rsp+0x70],eax
  40702a:	shl    rdx,0x2
  40702e:	call   0x40a858
  407033:	test   rax,rax
  407036:	mov    QWORD PTR [rsp+0x40],rax
  40703b:	jne    0x40616d
  407041:	jmp    0x405890
  407046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407050:	lea    rax,[rbx+0x1]
  407054:	mov    QWORD PTR [rsp+0x60],rax
  407059:	mov    rax,QWORD PTR [rsp+0xc8]
  407061:	cmp    BYTE PTR [rax],0x5e
  407064:	sete   al
  407067:	add    eax,0x4
  40706a:	mov    BYTE PTR [rbx],al
  40706c:	mov    rax,QWORD PTR [rsp+0xc8]
  407074:	cmp    BYTE PTR [rax],0x5e
  407077:	mov    QWORD PTR [rsp+0x68],rax
  40707c:	jne    0x407091
  40707e:	add    QWORD PTR [rsp+0x68],0x1
  407084:	mov    rax,QWORD PTR [rsp+0x68]
  407089:	mov    QWORD PTR [rsp+0xc8],rax
  407091:	mov    rbx,QWORD PTR [rbp+0x0]
  407095:	mov    rsi,QWORD PTR [rsp+0x60]
  40709a:	jmp    0x4070ec
  40709c:	mov    DWORD PTR [rbp+0x8],eax
  40709f:	mov    edx,eax
  4070a1:	mov    rcx,QWORD PTR [rbp+0x0]
  4070a5:	call   0x40a858
  4070aa:	test   rax,rax
  4070ad:	mov    QWORD PTR [rbp+0x0],rax
  4070b1:	je     0x405890
  4070b7:	cmp    rax,rbx
  4070ba:	je     0x4070e9
  4070bc:	mov    rdx,rax
  4070bf:	sub    rdx,rbx
  4070c2:	lea    rcx,[r15+rdx*1]
  4070c6:	add    rsi,rdx
  4070c9:	add    r14,rdx
  4070cc:	test   r15,r15
  4070cf:	cmovne r15,rcx
  4070d3:	lea    rcx,[r13+rdx*1+0x0]
  4070d8:	test   r13,r13
  4070db:	cmovne r13,rcx
  4070df:	add    rdx,r12
  4070e2:	test   r12,r12
  4070e5:	cmovne r12,rdx
  4070e9:	mov    rbx,rax
  4070ec:	mov    eax,DWORD PTR [rbp+0x8]
  4070ef:	mov    rdx,rsi
  4070f2:	sub    rdx,rbx
  4070f5:	add    edx,0x1
  4070f8:	cmp    edx,eax
  4070fa:	jbe    0x4073b3
  407100:	cmp    eax,0x10000
  407105:	je     0x405b40
  40710b:	add    eax,eax
  40710d:	cmp    eax,0x10000
  407112:	jbe    0x40709c
  407114:	mov    DWORD PTR [rbp+0x8],0x10000
  40711b:	mov    edx,0x10000
  407120:	jmp    0x4070a1
  407125:	cmp    dl,0x2c
  407128:	jne    0x4059dd
  40712e:	add    rcx,0x1
  407132:	mov    r8d,0xffffffff
  407138:	mov    r11,QWORD PTR [rsp+0x38]
  40713d:	jmp    0x407186
  40713f:	nop
  407140:	test   r11,r11
  407143:	mov    QWORD PTR [rsp+0xc8],rcx
  40714b:	movzx  edx,BYTE PTR [rcx-0x1]
  40714f:	je     0x407156
  407151:	movzx  edx,BYTE PTR [r11+rdx*1]
  407156:	lea    r10d,[rdx-0x30]
  40715a:	cmp    r10b,0x9
  40715e:	ja     0x40718b
  407160:	cmp    r8d,0x7fff
  407167:	jg     0x407182
  407169:	xor    r10d,r10d
  40716c:	cmp    r8d,0xffffffff
  407170:	je     0x407179
  407172:	lea    r10d,[r8+r8*4]
  407176:	add    r10d,r10d
  407179:	movzx  r8d,dl
  40717d:	lea    r8d,[r10+r8*1-0x30]
  407182:	add    rcx,0x1
  407186:	cmp    rcx,r9
  407189:	jne    0x407140
  40718b:	cmp    r8d,0xffffffff
  40718f:	je     0x40802c
  407195:	cmp    edi,r8d
  407198:	mov    r9d,edi
  40719b:	mov    edi,r8d
  40719e:	setg   cl
  4071a1:	jmp    0x4059e2
  4071a6:	mov    BYTE PTR [r13+0x1],cl
  4071aa:	sar    ecx,0x8
  4071ad:	mov    BYTE PTR [r13+0x0],0x17
  4071b2:	mov    BYTE PTR [r13+0x2],cl
  4071b6:	mov    BYTE PTR [r13+0x3],dil
  4071ba:	mov    BYTE PTR [r13+0x4],r8b
  4071be:	mov    rcx,QWORD PTR [rsp+0xc8]
  4071c6:	xor    r12d,r12d
  4071c9:	jmp    0x405837
  4071ce:	cmp    r13,r12
  4071d1:	lea    rbx,[r12+0x3]
  4071d6:	je     0x4071eb
  4071d8:	sub    r12,0x1
  4071dc:	movzx  eax,BYTE PTR [r12]
  4071e1:	cmp    r12,r13
  4071e4:	mov    BYTE PTR [r12+0x3],al
  4071e9:	jne    0x4071d8
  4071eb:	mov    BYTE PTR [r13+0x0],0x13
  4071f0:	mov    BYTE PTR [r13+0x1],0x3
  4071f5:	xor    r12d,r12d
  4071f8:	mov    BYTE PTR [r13+0x2],0x0
  4071fd:	mov    rcx,QWORD PTR [rsp+0xc8]
  407205:	jmp    0x405837
  40720a:	cmp    al,0x5c
  40720c:	mov    rdi,rbx
  40720f:	jne    0x405cd4
  407215:	cmp    BYTE PTR [rdx+0x1],0x7b
  407219:	jne    0x405cd4
  40721f:	jmp    0x405aba
  407224:	mov    rdx,QWORD PTR [rsp+0xc8]
  40722c:	cmp    rdx,QWORD PTR [rsp+0x48]
  407231:	je     0x405a16
  407237:	mov    rsi,QWORD PTR [rsp+0x38]
  40723c:	lea    r8,[rdx+0x1]
  407240:	mov    QWORD PTR [rsp+0xc8],r8
  407248:	movzx  edx,BYTE PTR [rdx]
  40724b:	test   rsi,rsi
  40724e:	je     0x407254
  407250:	movzx  edx,BYTE PTR [rsi+rdx*1]
  407254:	cmp    dl,0x7d
  407257:	jne    0x406d4e
  40725d:	test   r13,r13
  407260:	je     0x407f0c
  407266:	cmp    edi,0x7fff
  40726c:	jg     0x407ef8
  407272:	test   edi,edi
  407274:	jne    0x408050
  40727a:	mov    rsi,QWORD PTR [rbp+0x0]
  40727e:	jmp    0x4072e3
  407280:	cmp    eax,0x10000
  407285:	je     0x405b40
  40728b:	add    eax,eax
  40728d:	cmp    eax,0x10000
  407292:	mov    DWORD PTR [rbp+0x8],eax
  407295:	mov    edx,eax
  407297:	jbe    0x4072a5
  407299:	mov    DWORD PTR [rbp+0x8],0x10000
  4072a0:	mov    edx,0x10000
  4072a5:	mov    rcx,rsi
  4072a8:	call   0x40a858
  4072ad:	test   rax,rax
  4072b0:	mov    QWORD PTR [rbp+0x0],rax
  4072b4:	je     0x405890
  4072ba:	cmp    rax,rsi
  4072bd:	je     0x4072e0
  4072bf:	mov    rdx,rax
  4072c2:	sub    rdx,rsi
  4072c5:	lea    rcx,[r15+rdx*1]
  4072c9:	add    rbx,rdx
  4072cc:	add    r14,rdx
  4072cf:	test   r15,r15
  4072d2:	cmovne r15,rcx
  4072d6:	add    rdx,r13
  4072d9:	test   r13,r13
  4072dc:	cmovne r13,rdx
  4072e0:	mov    rsi,rax
  4072e3:	mov    eax,DWORD PTR [rbp+0x8]
  4072e6:	mov    rdx,rbx
  4072e9:	sub    rdx,rsi
  4072ec:	add    edx,0x3
  4072ef:	cmp    edx,eax
  4072f1:	ja     0x407280
  4072f3:	mov    eax,ebx
  4072f5:	lea    rdx,[rbx+0x3]
  4072f9:	sub    eax,r13d
  4072fc:	cmp    r13,rbx
  4072ff:	je     0x407310
  407301:	sub    rbx,0x1
  407305:	movzx  ecx,BYTE PTR [rbx]
  407308:	cmp    rbx,r13
  40730b:	mov    BYTE PTR [rbx+0x3],cl
  40730e:	jne    0x407301
  407310:	mov    BYTE PTR [r13+0x1],al
  407314:	sar    eax,0x8
  407317:	mov    BYTE PTR [r13+0x0],0xd
  40731c:	mov    BYTE PTR [r13+0x2],al
  407320:	mov    rbx,rdx
  407323:	mov    rcx,QWORD PTR [rsp+0xc8]
  40732b:	xor    r12d,r12d
  40732e:	jmp    0x405837
  407333:	movzx  eax,BYTE PTR [rcx-0x1]
  407337:	cmp    al,0x28
  407339:	je     0x405f1b
  40733f:	cmp    al,0x7c
  407341:	jne    0x405a42
  407347:	jmp    0x405f1b
  40734c:	nop    DWORD PTR [rax+0x0]
  407350:	test   dil,0x1
  407354:	je     0x406dca
  40735a:	cmp    rax,QWORD PTR [rsp+0x48]
  40735f:	jae    0x406dca
  407365:	mov    rsi,QWORD PTR [rsp+0x38]
  40736a:	test   rsi,rsi
  40736d:	je     0x407805
  407373:	movzx  eax,BYTE PTR [rax]
  407376:	movsx  edx,BYTE PTR [rsi+rax*1]
  40737a:	movsx  eax,BYTE PTR [rsi+0xa]
  40737e:	cmp    edx,eax
  407380:	jne    0x406dca
  407386:	test   BYTE PTR [rsp+0x1b0],0x40
  40738e:	jne    0x406dca
  407394:	mov    rax,r13
  407397:	mov    BYTE PTR [rbx],0xd
  40739a:	mov    esi,0x1
  40739f:	sub    rax,rbx
  4073a2:	sub    eax,0x3
  4073a5:	mov    BYTE PTR [rbx+0x1],al
  4073a8:	sar    eax,0x8
  4073ab:	mov    BYTE PTR [rbx+0x2],al
  4073ae:	jmp    0x406de0
  4073b3:	lea    rbx,[rsi+0x1]
  4073b7:	mov    BYTE PTR [rsi],0x20
  4073ba:	mov    QWORD PTR [rsi+0x1],0x0
  4073c2:	mov    QWORD PTR [rsp+0x60],rsi
  4073c7:	mov    QWORD PTR [rbx+0x8],0x0
  4073cf:	mov    QWORD PTR [rbx+0x10],0x0
  4073d7:	mov    QWORD PTR [rbx+0x18],0x0
  4073df:	cmp    BYTE PTR [rsi-0x1],0x5
  4073e3:	je     0x4081de
  4073e9:	mov    QWORD PTR [rsp+0xa8],r13
  4073f1:	mov    QWORD PTR [rsp+0xb0],r14
  4073f9:	mov    edi,0xffffffff
  4073fe:	mov    QWORD PTR [rsp+0x1b8],rbp
  407406:	mov    rax,QWORD PTR [rsp+0xc8]
  40740e:	xor    esi,esi
  407410:	mov    r14,QWORD PTR [rsp+0x60]
  407415:	mov    r13,QWORD PTR [rsp+0x38]
  40741a:	mov    rbp,QWORD PTR [rsp+0x48]
  40741f:	mov    QWORD PTR [rsp+0xa0],r12
  407427:	mov    r12d,edi
  40742a:	mov    QWORD PTR [rsp+0xb8],r15
  407432:	cmp    rbp,rax
  407435:	je     0x407524
  40743b:	lea    rcx,[rax+0x1]
  40743f:	test   r13,r13
  407442:	mov    QWORD PTR [rsp+0xc8],rcx
  40744a:	movzx  r8d,BYTE PTR [rax]
  40744e:	je     0x407456
  407450:	movzx  r8d,BYTE PTR [r13+r8*1+0x0]
  407456:	cmp    r8b,0x5c
  40745a:	jne    0x40746a
  40745c:	test   BYTE PTR [rsp+0x1b0],0x1
  407464:	jne    0x4077a0
  40746a:	cmp    r8b,0x5d
  40746e:	je     0x407655
  407474:	cmp    r8b,0x2d
  407478:	jne    0x407540
  40747e:	test   sil,sil
  407481:	je     0x40798f
  407487:	cmp    BYTE PTR [rax+0x1],0x5d
  40748b:	jne    0x407812
  407491:	mov    edx,0x5d
  407496:	lea    r9,[rax-0x1]
  40749a:	cmp    QWORD PTR [rsp+0x1a0],r9
  4074a2:	ja     0x4074ae
  4074a4:	cmp    BYTE PTR [rax-0x1],0x5b
  4074a8:	je     0x407544
  4074ae:	lea    r9,[rax-0x2]
  4074b2:	cmp    QWORD PTR [rsp+0x1a0],r9
  4074ba:	ja     0x4074c6
  4074bc:	cmp    BYTE PTR [rax-0x2],0x5b
  4074c0:	je     0x407826
  4074c6:	cmp    dl,0x5d
  4074c9:	jne    0x40775b
  4074cf:	test   BYTE PTR [rsp+0x1b0],0x4
  4074d7:	je     0x4074f4
  4074d9:	cmp    r8b,0x5b
  4074dd:	mov    edx,0x5d
  4074e2:	sete   r10b
  4074e6:	cmp    dl,0x2e
  4074e9:	jne    0x4074f4
  4074eb:	test   r10b,r10b
  4074ee:	jne    0x407874
  4074f4:	mov    eax,r8d
  4074f7:	mov    ecx,r8d
  4074fa:	mov    edx,0x1
  4074ff:	shr    al,0x3
  407502:	and    ecx,0x7
  407505:	movzx  r12d,r8b
  407509:	movzx  eax,al
  40750c:	shl    edx,cl
  40750e:	or     BYTE PTR [rbx+rax*1],dl
  407511:	mov    rax,QWORD PTR [rsp+0xc8]
  407519:	xor    esi,esi
  40751b:	cmp    rbp,rax
  40751e:	jne    0x40743b
  407524:	mov    rcx,QWORD PTR [rsp+0x40]
  407529:	call   0x40a8f0
  40752e:	mov    eax,0x7
  407533:	jmp    0x405895
  407538:	nop    DWORD PTR [rax+rax*1+0x0]
  407540:	movzx  edx,BYTE PTR [rax+0x1]
  407544:	cmp    dl,0x2d
  407547:	je     0x4076ed
  40754d:	test   BYTE PTR [rsp+0x1b0],0x4
  407555:	je     0x4074f4
  407557:	cmp    r8b,0x5b
  40755b:	sete   r9b
  40755f:	cmp    dl,0x3a
  407562:	mov    r10d,r9d
  407565:	jne    0x407570
  407567:	test   r9b,r9b
  40756a:	jne    0x407998
  407570:	cmp    dl,0x3d
  407573:	jne    0x4074e6
  407579:	test   r9b,r9b
  40757c:	je     0x4074e6
  407582:	cmp    rbp,rcx
  407585:	je     0x407985
  40758b:	add    rax,0x2
  40758f:	cmp    rbp,rax
  407592:	mov    QWORD PTR [rsp+0xc8],rax
  40759a:	je     0x407524
  40759c:	xor    edx,edx
  40759e:	jmp    0x4075cb
  4075a0:	cmp    rbp,r8
  4075a3:	je     0x40795d
  4075a9:	cmp    dl,0x4
  4075ac:	ja     0x4076e0
  4075b2:	movzx  eax,dl
  4075b5:	add    edx,0x1
  4075b8:	mov    BYTE PTR [rsp+rax*1+0xd0],cl
  4075bf:	cmp    rbp,r8
  4075c2:	mov    rax,r8
  4075c5:	je     0x407985
  4075cb:	lea    r8,[rax+0x1]
  4075cf:	test   r13,r13
  4075d2:	mov    QWORD PTR [rsp+0xc8],r8
  4075da:	movzx  ecx,BYTE PTR [r8-0x1]
  4075df:	je     0x4075e7
  4075e1:	movzx  ecx,BYTE PTR [r13+rcx*1+0x0]
  4075e7:	cmp    cl,0x3d
  4075ea:	jne    0x4075a0
  4075ec:	cmp    BYTE PTR [r8],0x5d
  4075f0:	jne    0x4075a0
  4075f2:	movzx  ecx,dl
  4075f5:	mov    r9,r8
  4075f8:	mov    BYTE PTR [rsp+rcx*1+0xd0],0x0
  407600:	movzx  ecx,BYTE PTR [rsp+0xd0]
  407608:	test   cl,cl
  40760a:	je     0x407849
  407610:	cmp    dl,0x1
  407613:	jne    0x407835
  407619:	cmp    rbp,r8
  40761c:	je     0x407985
  407622:	add    rax,0x2
  407626:	mov    edx,0x1
  40762b:	mov    QWORD PTR [rsp+0xc8],rax
  407633:	mov    eax,ecx
  407635:	and    ecx,0x7
  407638:	shr    al,0x3
  40763b:	shl    edx,cl
  40763d:	movzx  eax,al
  407640:	or     BYTE PTR [rbx+rax*1],dl
  407643:	mov    rax,QWORD PTR [rsp+0xc8]
  40764b:	mov    esi,0x1
  407650:	jmp    0x407432
  407655:	mov    rdi,QWORD PTR [rsp+0x68]
  40765a:	lea    rdx,[rdi+0x1]
  40765e:	cmp    rcx,rdx
  407661:	je     0x407540
  407667:	mov    rax,QWORD PTR [rsp+0x60]
  40766c:	mov    r12,QWORD PTR [rsp+0xa0]
  407674:	mov    r13,QWORD PTR [rsp+0xa8]
  40767c:	mov    r14,QWORD PTR [rsp+0xb0]
  407684:	mov    r15,QWORD PTR [rsp+0xb8]
  40768c:	mov    rbp,QWORD PTR [rsp+0x1b8]
  407694:	movzx  eax,BYTE PTR [rax]
  407697:	test   al,al
  407699:	je     0x407ed7
  40769f:	movzx  edx,al
  4076a2:	sub    eax,0x1
  4076a5:	cmp    BYTE PTR [rbx+rdx*1-0x1],0x0
  4076aa:	jne    0x4076d0
  4076ac:	mov    rsi,QWORD PTR [rsp+0x60]
  4076b1:	test   al,al
  4076b3:	mov    BYTE PTR [rsi],al
  4076b5:	je     0x407ede
  4076bb:	movzx  edx,al
  4076be:	sub    eax,0x1
  4076c1:	cmp    BYTE PTR [rbx+rdx*1-0x1],0x0
  4076c6:	je     0x4076ac
  4076c8:	mov    rcx,QWORD PTR [rsp+0xc8]
  4076d0:	add    rbx,rdx
  4076d3:	jmp    0x405837
  4076d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4076e0:	mov    BYTE PTR [rsp+0xd0],0x0
  4076e8:	jmp    0x4075bf
  4076ed:	cmp    BYTE PTR [rax+0x2],0x5d
  4076f1:	je     0x4074f4
  4076f7:	cmp    rbp,rcx
  4076fa:	je     0x407985
  407700:	add    rax,0x2
  407704:	lea    rdx,[rsp+0xc8]
  40770c:	movzx  ecx,r8b
  407710:	mov    QWORD PTR [rsp+0xc8],rax
  407718:	mov    eax,DWORD PTR [rsp+0x1b0]
  40771f:	mov    r9,r13
  407722:	mov    QWORD PTR [rsp+0x28],rbx
  407727:	mov    r8,rbp
  40772a:	mov    DWORD PTR [rsp+0x20],eax
  40772e:	call   0x402bd0
  407733:	test   eax,eax
  407735:	jne    0x407785
  407737:	mov    rax,QWORD PTR [rsp+0xc8]
  40773f:	mov    r12d,0xffffffff
  407745:	jmp    0x407432
  40774a:	mov    DWORD PTR [rbp+0x8],0x10000
  407751:	mov    edx,0x10000
  407756:	jmp    0x406864
  40775b:	mov    eax,DWORD PTR [rsp+0x1b0]
  407762:	lea    rdx,[rsp+0xc8]
  40776a:	mov    QWORD PTR [rsp+0x28],rbx
  40776f:	mov    r9,r13
  407772:	mov    r8,rbp
  407775:	mov    ecx,r12d
  407778:	mov    DWORD PTR [rsp+0x20],eax
  40777c:	call   0x402bd0
  407781:	test   eax,eax
  407783:	je     0x407737
  407785:	mov    rcx,QWORD PTR [rsp+0x40]
  40778a:	mov    edi,eax
  40778c:	call   0x40a8f0
  407791:	mov    eax,edi
  407793:	jmp    0x405895
  407798:	nop    DWORD PTR [rax+rax*1+0x0]
  4077a0:	cmp    rbp,rcx
  4077a3:	je     0x406de9
  4077a9:	lea    rdx,[rax+0x2]
  4077ad:	test   r13,r13
  4077b0:	mov    QWORD PTR [rsp+0xc8],rdx
  4077b8:	movzx  r12d,BYTE PTR [rax+0x1]
  4077bd:	je     0x4077c5
  4077bf:	movzx  r12d,BYTE PTR [r13+r12*1+0x0]
  4077c5:	mov    eax,r12d
  4077c8:	mov    ecx,r12d
  4077cb:	mov    edx,0x1
  4077d0:	shr    al,0x3
  4077d3:	and    ecx,0x7
  4077d6:	movzx  eax,al
  4077d9:	shl    edx,cl
  4077db:	or     BYTE PTR [rbx+rax*1],dl
  4077de:	mov    rax,QWORD PTR [rsp+0xc8]
  4077e6:	jmp    0x407432
  4077eb:	lea    rbx,[rsi+0x3]
  4077ef:	mov    rcx,QWORD PTR [rsp+0xc8]
  4077f7:	xor    r13d,r13d
  4077fa:	xor    r12d,r12d
  4077fd:	mov    r14,rbx
  407800:	jmp    0x405837
  407805:	movsx  edx,BYTE PTR [rax]
  407808:	mov    eax,0xa
  40780d:	jmp    0x40737e
  407812:	mov    rcx,QWORD PTR [rsp+0x40]
  407817:	call   0x40a8f0
  40781c:	mov    eax,0xb
  407821:	jmp    0x405895
  407826:	cmp    BYTE PTR [rax-0x1],0x5e
  40782a:	jne    0x4074c6
  407830:	jmp    0x407544
  407835:	mov    rcx,QWORD PTR [rsp+0x40]
  40783a:	call   0x40a8f0
  40783f:	mov    eax,0x3
  407844:	jmp    0x405895
  407849:	mov    r8,r9
  40784c:	movzx  eax,dl
  40784f:	or     BYTE PTR [r14+0xc],0x8
  407854:	or     BYTE PTR [r14+0x8],0x20
  407859:	not    rax
  40785c:	mov    r12d,0x3d
  407862:	xor    esi,esi
  407864:	add    rax,r8
  407867:	mov    QWORD PTR [rsp+0xc8],rax
  40786f:	jmp    0x407432
  407874:	cmp    rbp,rcx
  407877:	je     0x407985
  40787d:	add    rax,0x2
  407881:	cmp    rbp,rax
  407884:	mov    QWORD PTR [rsp+0xc8],rax
  40788c:	je     0x407524
  407892:	xor    edx,edx
  407894:	jmp    0x4078ca
  407896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4078a0:	cmp    rbp,r8
  4078a3:	je     0x4081f8
  4078a9:	test   dl,dl
  4078ab:	js     0x407950
  4078b1:	movzx  eax,dl
  4078b4:	add    edx,0x1
  4078b7:	mov    BYTE PTR [rsp+rax*1+0xd0],cl
  4078be:	cmp    rbp,r8
  4078c1:	mov    rax,r8
  4078c4:	je     0x407985
  4078ca:	lea    r8,[rax+0x1]
  4078ce:	test   r13,r13
  4078d1:	mov    QWORD PTR [rsp+0xc8],r8
  4078d9:	movzx  ecx,BYTE PTR [r8-0x1]
  4078de:	je     0x4078e6
  4078e0:	movzx  ecx,BYTE PTR [r13+rcx*1+0x0]
  4078e6:	cmp    cl,0x2e
  4078e9:	jne    0x4078a0
  4078eb:	cmp    BYTE PTR [r8],0x5d
  4078ef:	jne    0x4078a0
  4078f1:	movzx  ecx,dl
  4078f4:	mov    BYTE PTR [rsp+rcx*1+0xd0],0x0
  4078fc:	mov    rcx,r8
  4078ff:	movzx  r12d,BYTE PTR [rsp+0xd0]
  407908:	test   r12b,r12b
  40790b:	je     0x408243
  407911:	cmp    dl,0x1
  407914:	jne    0x407835
  40791a:	cmp    rbp,r8
  40791d:	je     0x407985
  40791f:	add    rax,0x2
  407923:	mov    ecx,r12d
  407926:	mov    edx,0x1
  40792b:	mov    QWORD PTR [rsp+0xc8],rax
  407933:	mov    eax,r12d
  407936:	and    ecx,0x7
  407939:	shr    al,0x3
  40793c:	shl    edx,cl
  40793e:	movzx  eax,al
  407941:	or     BYTE PTR [rbx+rax*1],dl
  407944:	jmp    0x407511
  407949:	nop    DWORD PTR [rax+0x0]
  407950:	mov    BYTE PTR [rsp+0xd0],0x0
  407958:	jmp    0x4078be
  40795d:	movzx  r9d,dl
  407961:	cmp    cl,0x3d
  407964:	mov    BYTE PTR [rsp+r9*1+0xd0],0x0
  40796d:	jne    0x40784c
  407973:	cmp    BYTE PTR [rax+0x1],0x5d
  407977:	jne    0x40784c
  40797d:	mov    r9,rbp
  407980:	jmp    0x407600
  407985:	mov    eax,0xe
  40798a:	jmp    0x405895
  40798f:	movzx  edx,BYTE PTR [rax+0x1]
  407993:	jmp    0x407496
  407998:	cmp    rbp,rcx
  40799b:	je     0x407985
  40799d:	add    rax,0x2
  4079a1:	cmp    rbp,rax
  4079a4:	mov    QWORD PTR [rsp+0xc8],rax
  4079ac:	je     0x407524
  4079b2:	xor    edx,edx
  4079b4:	jmp    0x4079e7
  4079b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4079c0:	cmp    rbp,r8
  4079c3:	je     0x407e9d
  4079c9:	cmp    dl,0x5
  4079cc:	ja     0x407e44
  4079d2:	movzx  eax,dl
  4079d5:	add    edx,0x1
  4079d8:	mov    BYTE PTR [rsp+rax*1+0xd0],cl
  4079df:	cmp    rbp,r8
  4079e2:	mov    rax,r8
  4079e5:	je     0x407985
  4079e7:	lea    r8,[rax+0x1]
  4079eb:	test   r13,r13
  4079ee:	mov    QWORD PTR [rsp+0xc8],r8
  4079f6:	movzx  ecx,BYTE PTR [r8-0x1]
  4079fb:	je     0x407a03
  4079fd:	movzx  ecx,BYTE PTR [r13+rcx*1+0x0]
  407a03:	cmp    cl,0x3a
  407a06:	jne    0x4079c0
  407a08:	cmp    BYTE PTR [r8],0x5d
  407a0c:	jne    0x4079c0
  407a0e:	movzx  edx,dl
  407a11:	mov    BYTE PTR [rsp+rdx*1+0xd0],0x0
  407a19:	lea    rdx,[rsp+0xd0]
  407a21:	lea    rdi,[rip+0x1b300]        # 0x422d28
  407a28:	mov    ecx,0x6
  407a2d:	mov    rsi,rdx
  407a30:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407a32:	lea    rdi,[rip+0x1b2f5]        # 0x422d2e
  407a39:	setb   cl
  407a3c:	seta   r9b
  407a40:	sub    r9d,ecx
  407a43:	mov    ecx,0x6
  407a48:	movsx  esi,r9b
  407a4c:	mov    r11d,esi
  407a4f:	mov    DWORD PTR [rsp+0x94],esi
  407a56:	mov    rsi,rdx
  407a59:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407a5b:	lea    rdi,[rip+0x1b2d2]        # 0x422d34
  407a62:	setb   cl
  407a65:	seta   r9b
  407a69:	sub    r9d,ecx
  407a6c:	mov    ecx,0x6
  407a71:	movsx  esi,r9b
  407a75:	mov    DWORD PTR [rsp+0x74],esi
  407a79:	mov    rsi,rdx
  407a7c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407a7e:	mov    rsi,rdx
  407a81:	setb   cl
  407a84:	seta   r9b
  407a88:	sub    r9d,ecx
  407a8b:	mov    ecx,0x6
  407a90:	movsx  edi,r9b
  407a94:	mov    DWORD PTR [rsp+0x78],edi
  407a98:	lea    rdi,[rip+0x1b29b]        # 0x422d3a
  407a9f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407aa1:	lea    rdi,[rip+0x1b298]        # 0x422d40
  407aa8:	mov    rsi,rdx
  407aab:	setb   cl
  407aae:	seta   r9b
  407ab2:	sub    r9d,ecx
  407ab5:	movsx  ecx,r9b
  407ab9:	mov    DWORD PTR [rsp+0x7c],ecx
  407abd:	mov    ecx,0x6
  407ac2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407ac4:	lea    rdi,[rip+0x1b27b]        # 0x422d46
  407acb:	mov    rsi,rdx
  407ace:	setb   cl
  407ad1:	seta   r9b
  407ad5:	sub    r9d,ecx
  407ad8:	mov    ecx,0x6
  407add:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407adf:	movsx  r10d,r9b
  407ae3:	lea    rdi,[rip+0x1b262]        # 0x422d4c
  407aea:	mov    rsi,rdx
  407aed:	setb   cl
  407af0:	seta   r9b
  407af4:	mov    DWORD PTR [rsp+0x80],r10d
  407afc:	sub    r9d,ecx
  407aff:	mov    ecx,0x6
  407b04:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407b06:	movsx  r9d,r9b
  407b0a:	lea    rdi,[rip+0x1b241]        # 0x422d52
  407b11:	mov    rsi,rdx
  407b14:	setb   cl
  407b17:	mov    DWORD PTR [rsp+0x84],r9d
  407b1f:	seta   r9b
  407b23:	sub    r9d,ecx
  407b26:	mov    ecx,0x6
  407b2b:	movsx  r9d,r9b
  407b2f:	test   r9d,r9d
  407b32:	sete   BYTE PTR [rsp+0x92]
  407b3a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407b3c:	lea    rdi,[rip+0x1b215]        # 0x422d58
  407b43:	mov    rsi,rdx
  407b46:	seta   r10b
  407b4a:	setb   cl
  407b4d:	mov    r15d,r10d
  407b50:	sub    r15d,ecx
  407b53:	mov    ecx,0x6
  407b58:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407b5a:	mov    rsi,rdx
  407b5d:	movsx  r15d,r15b
  407b61:	seta   r10b
  407b65:	setb   cl
  407b68:	mov    DWORD PTR [rsp+0x88],r15d
  407b70:	mov    edi,r10d
  407b73:	sub    edi,ecx
  407b75:	mov    ecx,0x6
  407b7a:	movsx  edi,dil
  407b7e:	mov    DWORD PTR [rsp+0x8c],edi
  407b85:	lea    rdi,[rip+0x1b1d2]        # 0x422d5e
  407b8c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407b8e:	lea    rdi,[rip+0x1b1cf]        # 0x422d64
  407b95:	mov    rsi,rdx
  407b98:	setb   cl
  407b9b:	seta   r15b
  407b9f:	sub    r15d,ecx
  407ba2:	mov    ecx,0x6
  407ba7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407ba9:	lea    rdi,[rip+0x1b1ba]        # 0x422d6a
  407bb0:	mov    rsi,rdx
  407bb3:	movsx  r15d,r15b
  407bb7:	setb   cl
  407bba:	seta   r10b
  407bbe:	sub    r10d,ecx
  407bc1:	mov    ecx,0x7
  407bc6:	movsx  r10d,r10b
  407bca:	test   r10d,r10d
  407bcd:	sete   BYTE PTR [rsp+0x93]
  407bd5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407bd7:	mov    ecx,DWORD PTR [rsp+0x74]
  407bdb:	mov    esi,DWORD PTR [rsp+0x84]
  407be2:	setb   dl
  407be5:	seta   dil
  407be9:	sub    edi,edx
  407beb:	test   ecx,ecx
  407bed:	movsx  edi,dil
  407bf1:	setne  cl
  407bf4:	test   r10d,r10d
  407bf7:	mov    r10d,DWORD PTR [rsp+0x88]
  407bff:	setne  dl
  407c02:	and    ecx,edx
  407c04:	test   r9d,r9d
  407c07:	mov    r9d,DWORD PTR [rsp+0x80]
  407c0f:	setne  dl
  407c12:	and    ecx,edx
  407c14:	test   r9d,r9d
  407c17:	setne  dl
  407c1a:	and    ecx,edx
  407c1c:	test   r11d,r11d
  407c1f:	mov    r11d,DWORD PTR [rsp+0x8c]
  407c27:	setne  dl
  407c2a:	and    ecx,edx
  407c2c:	test   edi,edi
  407c2e:	setne  dl
  407c31:	and    ecx,edx
  407c33:	test   r15d,r15d
  407c36:	setne  dl
  407c39:	and    ecx,edx
  407c3b:	test   r10d,r10d
  407c3e:	setne  dl
  407c41:	and    ecx,edx
  407c43:	test   r11d,r11d
  407c46:	setne  dl
  407c49:	and    ecx,edx
  407c4b:	test   esi,esi
  407c4d:	setne  dl
  407c50:	and    edx,ecx
  407c52:	mov    ecx,DWORD PTR [rsp+0x7c]
  407c56:	test   ecx,ecx
  407c58:	setne  cl
  407c5b:	test   dl,cl
  407c5d:	je     0x407c6b
  407c5f:	mov    edx,DWORD PTR [rsp+0x78]
  407c63:	test   edx,edx
  407c65:	jne    0x407e89
  407c6b:	cmp    rbp,r8
  407c6e:	je     0x407985
  407c74:	add    rax,0x2
  407c78:	cmp    rbp,rax
  407c7b:	mov    QWORD PTR [rsp+0xc8],rax
  407c83:	je     0x407524
  407c89:	mov    rax,QWORD PTR [rip+0x208a4]        # 0x428534
  407c90:	xor    esi,esi
  407c92:	mov    QWORD PTR [rsp+0x98],rax
  407c9a:	jmp    0x407d72
  407c9f:	mov    ecx,esi
  407ca1:	mov    rax,QWORD PTR [rsp+0x58]
  407ca6:	call   rax
  407ca8:	test   eax,eax
  407caa:	je     0x407e04
  407cb0:	mov    ecx,esi
  407cb2:	call   QWORD PTR [rip+0x2087c]        # 0x428534
  407cb8:	test   eax,eax
  407cba:	jne    0x407e04
  407cc0:	mov    eax,esi
  407cc2:	mov    ecx,esi
  407cc4:	mov    edx,0x1
  407cc9:	shr    al,0x3
  407ccc:	and    ecx,0x7
  407ccf:	movzx  eax,al
  407cd2:	shl    edx,cl
  407cd4:	or     BYTE PTR [rbx+rax*1],dl
  407cd7:	mov    r8d,DWORD PTR [rsp+0x8c]
  407cdf:	test   r8d,r8d
  407ce2:	jne    0x407cf0
  407ce4:	mov    ecx,esi
  407ce6:	call   QWORD PTR [rip+0x20840]        # 0x42852c
  407cec:	test   eax,eax
  407cee:	jne    0x407d2b
  407cf0:	test   r15d,r15d
  407cf3:	jne    0x407d05
  407cf5:	mov    ecx,esi
  407cf7:	mov    rax,QWORD PTR [rsp+0x98]
  407cff:	call   rax
  407d01:	test   eax,eax
  407d03:	jne    0x407d2b
  407d05:	cmp    BYTE PTR [rsp+0x93],0x0
  407d0d:	je     0x407d1b
  407d0f:	mov    ecx,esi
  407d11:	call   QWORD PTR [rip+0x20825]        # 0x42853c
  407d17:	test   eax,eax
  407d19:	jne    0x407d2b
  407d1b:	test   edi,edi
  407d1d:	jne    0x407d42
  407d1f:	mov    ecx,esi
  407d21:	call   QWORD PTR [rip+0x2081d]        # 0x428544
  407d27:	test   eax,eax
  407d29:	je     0x407d42
  407d2b:	mov    eax,esi
  407d2d:	mov    ecx,esi
  407d2f:	mov    edx,0x1
  407d34:	shr    al,0x3
  407d37:	and    ecx,0x7
  407d3a:	movzx  eax,al
  407d3d:	shl    edx,cl
  407d3f:	or     BYTE PTR [rbx+rax*1],dl
  407d42:	test   r13,r13
  407d45:	je     0x407d63
  407d47:	cmp    BYTE PTR [rsp+0x93],0x0
  407d4f:	jne    0x407e51
  407d55:	cmp    BYTE PTR [rsp+0x92],0x0
  407d5d:	jne    0x407e51
  407d63:	add    esi,0x1
  407d66:	cmp    esi,0x100
  407d6c:	je     0x407643
  407d72:	mov    eax,DWORD PTR [rsp+0x94]
  407d79:	test   eax,eax
  407d7b:	jne    0x407d89
  407d7d:	mov    ecx,esi
  407d7f:	call   QWORD PTR [rip+0x2077f]        # 0x428504
  407d85:	test   eax,eax
  407d87:	jne    0x407dc3
  407d89:	mov    eax,DWORD PTR [rsp+0x74]
  407d8d:	test   eax,eax
  407d8f:	jne    0x407d9d
  407d91:	mov    ecx,esi
  407d93:	call   QWORD PTR [rip+0x20773]        # 0x42850c
  407d99:	test   eax,eax
  407d9b:	jne    0x407dc3
  407d9d:	mov    eax,DWORD PTR [rsp+0x78]
  407da1:	test   eax,eax
  407da3:	jne    0x407daf
  407da5:	cmp    esi,0x9
  407da8:	je     0x407dc3
  407daa:	cmp    esi,0x20
  407dad:	je     0x407dc3
  407daf:	mov    eax,DWORD PTR [rsp+0x7c]
  407db3:	test   eax,eax
  407db5:	jne    0x407dda
  407db7:	mov    ecx,esi
  407db9:	call   QWORD PTR [rip+0x20755]        # 0x428514
  407dbf:	test   eax,eax
  407dc1:	je     0x407dda
  407dc3:	mov    eax,esi
  407dc5:	mov    ecx,esi
  407dc7:	mov    edx,0x1
  407dcc:	shr    al,0x3
  407dcf:	and    ecx,0x7
  407dd2:	movzx  eax,al
  407dd5:	shl    edx,cl
  407dd7:	or     BYTE PTR [rbx+rax*1],dl
  407dda:	mov    r11d,DWORD PTR [rsp+0x80]
  407de2:	test   r11d,r11d
  407de5:	jne    0x407df3
  407de7:	lea    eax,[rsi-0x30]
  407dea:	cmp    eax,0x9
  407ded:	jbe    0x407cc0
  407df3:	mov    r10d,DWORD PTR [rsp+0x84]
  407dfb:	test   r10d,r10d
  407dfe:	je     0x407c9f
  407e04:	cmp    BYTE PTR [rsp+0x92],0x0
  407e0c:	je     0x407e1e
  407e0e:	mov    ecx,esi
  407e10:	call   QWORD PTR [rip+0x20706]        # 0x42851c
  407e16:	test   eax,eax
  407e18:	jne    0x407cc0
  407e1e:	mov    r9d,DWORD PTR [rsp+0x88]
  407e26:	test   r9d,r9d
  407e29:	jne    0x407cd7
  407e2f:	mov    ecx,esi
  407e31:	call   QWORD PTR [rip+0x206ed]        # 0x428524
  407e37:	test   eax,eax
  407e39:	je     0x407cd7
  407e3f:	jmp    0x407cc0
  407e44:	mov    BYTE PTR [rsp+0xd0],0x0
  407e4c:	jmp    0x4079df
  407e51:	mov    ecx,esi
  407e53:	call   QWORD PTR [rip+0x206e3]        # 0x42853c
  407e59:	test   eax,eax
  407e5b:	jne    0x407e6d
  407e5d:	mov    ecx,esi
  407e5f:	call   QWORD PTR [rip+0x206b7]        # 0x42851c
  407e65:	test   eax,eax
  407e67:	je     0x407d63
  407e6d:	mov    eax,esi
  407e6f:	mov    ecx,esi
  407e71:	mov    edx,0x1
  407e76:	shr    al,0x3
  407e79:	and    ecx,0x7
  407e7c:	movzx  eax,al
  407e7f:	shl    edx,cl
  407e81:	or     BYTE PTR [rbx+rax*1],dl
  407e84:	jmp    0x407d63
  407e89:	mov    rcx,QWORD PTR [rsp+0x40]
  407e8e:	call   0x40a8f0
  407e93:	mov    eax,0x4
  407e98:	jmp    0x405895
  407e9d:	movzx  r9d,dl
  407ea1:	cmp    cl,0x3a
  407ea4:	mov    BYTE PTR [rsp+r9*1+0xd0],0x0
  407ead:	je     0x407eed
  407eaf:	movzx  eax,dl
  407eb2:	or     BYTE PTR [r14+0xc],0x8
  407eb7:	or     BYTE PTR [r14+0x8],0x4
  407ebc:	not    rax
  407ebf:	mov    r12d,0x3a
  407ec5:	xor    esi,esi
  407ec7:	add    rax,r8
  407eca:	mov    QWORD PTR [rsp+0xc8],rax
  407ed2:	jmp    0x407432
  407ed7:	xor    edx,edx
  407ed9:	jmp    0x4076d0
  407ede:	mov    rcx,QWORD PTR [rsp+0xc8]
  407ee6:	xor    edx,edx
  407ee8:	jmp    0x4076d0
  407eed:	cmp    BYTE PTR [rax+0x1],0x5d
  407ef1:	jne    0x407eaf
  407ef3:	jmp    0x407a19
  407ef8:	mov    rcx,QWORD PTR [rsp+0x40]
  407efd:	call   0x40a8f0
  407f02:	mov    eax,0xa
  407f07:	jmp    0x405895
  407f0c:	mov    edx,DWORD PTR [rsp+0x1b0]
  407f13:	and    edx,0x200020
  407f19:	cmp    edx,0x20
  407f1c:	je     0x407f34
  407f1e:	test   BYTE PTR [rsp+0x1b0],0x10
  407f26:	je     0x406d6c
  407f2c:	mov    r13,rbx
  407f2f:	jmp    0x407266
  407f34:	mov    rcx,QWORD PTR [rsp+0x40]
  407f39:	call   0x40a8f0
  407f3e:	mov    eax,0xd
  407f43:	jmp    0x405895
  407f48:	mov    BYTE PTR [rbx+0x2],r12b
  407f4c:	mov    BYTE PTR [rbx],0x7
  407f4f:	xor    r12d,r12d
  407f52:	mov    BYTE PTR [rbx+0x1],dil
  407f56:	add    rbx,0x3
  407f5a:	mov    rcx,QWORD PTR [rsp+0xc8]
  407f62:	jmp    0x405837
  407f67:	mov    BYTE PTR [rbx],0xc
  407f6a:	add    rbx,0x1
  407f6e:	mov    rcx,QWORD PTR [rsp+0xc8]
  407f76:	jmp    0x405837
  407f7b:	mov    rcx,QWORD PTR [rsp+0x40]
  407f80:	call   0x40a8f0
  407f85:	mov    rax,QWORD PTR [rsp+0x48]
  407f8a:	cmp    QWORD PTR [rsp+0xc8],rax
  407f92:	setne  al
  407f95:	movzx  eax,al
  407f98:	add    eax,0x9
  407f9b:	jmp    0x405895
  407fa0:	mov    BYTE PTR [rbx],0x1d
  407fa3:	add    rbx,0x1
  407fa7:	mov    rcx,QWORD PTR [rsp+0xc8]
  407faf:	jmp    0x405837
  407fb4:	mov    BYTE PTR [rbx],0x19
  407fb7:	add    rbx,0x1
  407fbb:	mov    rcx,QWORD PTR [rsp+0xc8]
  407fc3:	jmp    0x405837
  407fc8:	mov    BYTE PTR [rbx],0xb
  407fcb:	add    rbx,0x1
  407fcf:	mov    rcx,QWORD PTR [rsp+0xc8]
  407fd7:	jmp    0x405837
  407fdc:	mov    BYTE PTR [rbx],0x1c
  407fdf:	add    rbx,0x1
  407fe3:	mov    rcx,QWORD PTR [rsp+0xc8]
  407feb:	jmp    0x405837
  407ff0:	mov    BYTE PTR [rbx],0x1a
  407ff3:	add    rbx,0x1
  407ff7:	mov    rcx,QWORD PTR [rsp+0xc8]
  407fff:	jmp    0x405837
  408004:	mov    rcx,QWORD PTR [rsp+0x40]
  408009:	call   0x40a8f0
  40800e:	mov    eax,0x6
  408013:	jmp    0x405895
  408018:	mov    BYTE PTR [rbx],0x1b
  40801b:	add    rbx,0x1
  40801f:	mov    rcx,QWORD PTR [rsp+0xc8]
  408027:	jmp    0x405837
  40802c:	cmp    edi,0x7fff
  408032:	mov    r9d,edi
  408035:	mov    edi,0x7fff
  40803a:	setg   cl
  40803d:	jmp    0x4059e2
  408042:	movsx  ecx,BYTE PTR [rax-0x2]
  408046:	mov    edx,0x2e
  40804b:	jmp    0x406dc2
  408050:	cmp    edi,0x1
  408053:	mov    eax,0xa
  408058:	mov    esi,0x14
  40805d:	cmovle esi,eax
  408060:	mov    r12,QWORD PTR [rbp+0x0]
  408064:	jmp    0x4080de
  408066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408070:	cmp    eax,0x10000
  408075:	je     0x405b40
  40807b:	add    eax,eax
  40807d:	cmp    eax,0x10000
  408082:	mov    DWORD PTR [rbp+0x8],eax
  408085:	mov    edx,eax
  408087:	jbe    0x408095
  408089:	mov    DWORD PTR [rbp+0x8],0x10000
  408090:	mov    edx,0x10000
  408095:	mov    rcx,QWORD PTR [rbp+0x0]
  408099:	mov    DWORD PTR [rsp+0x60],r9d
  40809e:	call   0x40a858
  4080a3:	test   rax,rax
  4080a6:	mov    QWORD PTR [rbp+0x0],rax
  4080aa:	je     0x405890
  4080b0:	cmp    rax,r12
  4080b3:	mov    r9d,DWORD PTR [rsp+0x60]
  4080b8:	je     0x4080db
  4080ba:	mov    rdx,rax
  4080bd:	sub    rdx,r12
  4080c0:	lea    rcx,[r15+rdx*1]
  4080c4:	add    rbx,rdx
  4080c7:	add    r14,rdx
  4080ca:	test   r15,r15
  4080cd:	cmovne r15,rcx
  4080d1:	add    rdx,r13
  4080d4:	test   r13,r13
  4080d7:	cmovne r13,rdx
  4080db:	mov    r12,rax
  4080de:	mov    eax,DWORD PTR [rbp+0x8]
  4080e1:	mov    rdx,rbx
  4080e4:	sub    rdx,r12
  4080e7:	add    edx,esi
  4080e9:	cmp    edx,eax
  4080eb:	ja     0x408070
  4080ed:	xor    eax,eax
  4080ef:	cmp    edi,0x1
  4080f2:	mov    ecx,ebx
  4080f4:	setg   al
  4080f7:	sub    ecx,r13d
  4080fa:	cmp    r13,rbx
  4080fd:	lea    rax,[rax+rax*4+0x5]
  408102:	mov    rdx,rbx
  408105:	lea    ecx,[rcx+rax*1-0x3]
  408109:	lea    rax,[rbx+0x5]
  40810d:	je     0x408120
  40810f:	sub    rbx,0x1
  408113:	movzx  r8d,BYTE PTR [rbx]
  408117:	cmp    rbx,r13
  40811a:	mov    BYTE PTR [rbx+0x5],r8b
  40811e:	jne    0x40810f
  408120:	lea    rbx,[rdx+0xa]
  408124:	mov    BYTE PTR [r13+0x1],cl
  408128:	mov    r8d,r9d
  40812b:	sar    ecx,0x8
  40812e:	mov    BYTE PTR [r13+0x3],r9b
  408132:	sar    r9d,0x8
  408136:	cmp    rax,r13
  408139:	mov    BYTE PTR [r13+0x2],cl
  40813d:	mov    BYTE PTR [r13+0x0],0x15
  408142:	mov    BYTE PTR [r13+0x4],r9b
  408146:	mov    rcx,rbx
  408149:	je     0x40815f
  40814b:	sub    rax,0x1
  40814f:	movzx  r10d,BYTE PTR [rax]
  408153:	sub    rcx,0x1
  408157:	cmp    rax,r13
  40815a:	mov    BYTE PTR [rcx],r10b
  40815d:	jne    0x40814b
  40815f:	cmp    edi,0x1
  408162:	mov    BYTE PTR [r13+0x0],0x17
  408167:	mov    BYTE PTR [r13+0x1],0x5
  40816c:	mov    BYTE PTR [r13+0x2],0x0
  408171:	mov    BYTE PTR [r13+0x3],r8b
  408175:	mov    BYTE PTR [r13+0x4],r9b
  408179:	jle    0x4071be
  40817f:	mov    eax,r13d
  408182:	sub    edi,0x1
  408185:	mov    BYTE PTR [rdx+0xa],0x16
  408189:	sub    eax,ebx
  40818b:	mov    r8d,edi
  40818e:	mov    BYTE PTR [rdx+0xd],dil
  408192:	add    eax,0x2
  408195:	sar    r8d,0x8
  408199:	lea    rbx,[rdx+0x14]
  40819d:	mov    BYTE PTR [rdx+0xb],al
  4081a0:	sar    eax,0x8
  4081a3:	mov    BYTE PTR [rdx+0xe],r8b
  4081a7:	mov    BYTE PTR [rdx+0xc],al
  4081aa:	lea    rax,[rdx+0xf]
  4081ae:	mov    rcx,rax
  4081b1:	sub    rcx,r13
  4081b4:	cmp    rax,r13
  4081b7:	je     0x4071a6
  4081bd:	mov    r9d,r8d
  4081c0:	mov    rdx,rbx
  4081c3:	sub    rax,0x1
  4081c7:	sub    rdx,0x1
  4081cb:	mov    BYTE PTR [rdx],r9b
  4081ce:	cmp    rax,r13
  4081d1:	je     0x4071a6
  4081d7:	movzx  r9d,BYTE PTR [rax-0x1]
  4081dc:	jmp    0x4081c3
  4081de:	test   DWORD PTR [rsp+0x1b0],0x100
  4081e9:	je     0x4073e9
  4081ef:	or     BYTE PTR [rsi+0x2],0x4
  4081f3:	jmp    0x4073e9
  4081f8:	movzx  r9d,dl
  4081fc:	cmp    cl,0x2e
  4081ff:	mov    BYTE PTR [rsp+r9*1+0xd0],0x0
  408208:	je     0x408235
  40820a:	cmp    dl,0xff
  40820d:	je     0x408220
  40820f:	movzx  eax,dl
  408212:	not    rax
  408215:	add    rax,r8
  408218:	mov    QWORD PTR [rsp+0xc8],rax
  408220:	or     BYTE PTR [r14+0xc],0x8
  408225:	or     BYTE PTR [r14+0x6],0x40
  40822a:	mov    r12d,0x2e
  408230:	jmp    0x407511
  408235:	cmp    BYTE PTR [rax+0x1],0x5d
  408239:	jne    0x40820a
  40823b:	mov    rcx,rbp
  40823e:	jmp    0x4078ff
  408243:	mov    r8,rcx
  408246:	jmp    0x40820a
  408248:	mov    BYTE PTR [rbx],0x18
  40824b:	add    rbx,0x1
  40824f:	mov    rcx,QWORD PTR [rsp+0xc8]
  408257:	jmp    0x405837
  40825c:	nop    DWORD PTR [rax+0x0]
  408260:	mov    eax,DWORD PTR [rip+0x1faea]        # 0x427d50
  408266:	mov    DWORD PTR [rip+0x1fae4],ecx        # 0x427d50
  40826c:	ret    
  40826d:	nop    DWORD PTR [rax]
  408270:	jmp    0x402f80
  408275:	nop
  408276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408280:	test   r8d,r8d
  408283:	jne    0x4082a0
  408285:	and    BYTE PTR [rcx+0x30],0xf9
  408289:	mov    DWORD PTR [rdx],0x0
  40828f:	mov    QWORD PTR [rdx+0x10],0x0
  408297:	mov    QWORD PTR [rdx+0x8],0x0
  40829f:	ret    
  4082a0:	movzx  eax,BYTE PTR [rcx+0x30]
  4082a4:	and    eax,0xfffffff9
  4082a7:	or     eax,0x2
  4082aa:	mov    BYTE PTR [rcx+0x30],al
  4082ad:	mov    rax,QWORD PTR [rsp+0x28]
  4082b2:	mov    DWORD PTR [rdx],r8d
  4082b5:	mov    QWORD PTR [rdx+0x8],r9
  4082b9:	mov    QWORD PTR [rdx+0x10],rax
  4082bd:	ret    
  4082be:	xchg   ax,ax
  4082c0:	sub    rsp,0x58
  4082c4:	mov    rax,QWORD PTR [rsp+0x88]
  4082cc:	mov    DWORD PTR [rsp+0x40],r8d
  4082d1:	mov    DWORD PTR [rsp+0x28],r9d
  4082d6:	mov    r9,rdx
  4082d9:	mov    DWORD PTR [rsp+0x20],r8d
  4082de:	xor    edx,edx
  4082e0:	xor    r8d,r8d
  4082e3:	mov    QWORD PTR [rsp+0x38],rax
  4082e8:	mov    eax,DWORD PTR [rsp+0x80]
  4082ef:	mov    DWORD PTR [rsp+0x30],eax
  4082f3:	call   0x4053f0
  4082f8:	add    rsp,0x58
  4082fc:	ret    
  4082fd:	nop    DWORD PTR [rax]
  408300:	jmp    0x4053f0
  408305:	nop
  408306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408310:	sub    rsp,0x48
  408314:	mov    rax,QWORD PTR [rsp+0x70]
  408319:	mov    DWORD PTR [rsp+0x38],r8d
  40831e:	mov    DWORD PTR [rsp+0x28],r9d
  408323:	mov    r9,rdx
  408326:	mov    DWORD PTR [rsp+0x20],r8d
  40832b:	xor    edx,edx
  40832d:	xor    r8d,r8d
  408330:	mov    QWORD PTR [rsp+0x30],rax
  408335:	call   0x4033c0
  40833a:	add    rsp,0x48
  40833e:	ret    
  40833f:	nop
  408340:	jmp    0x4033c0
  408345:	nop
  408346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408350:	sub    rsp,0x28
  408354:	movzx  eax,BYTE PTR [r8+0x30]
  408359:	mov    r9,r8
  40835c:	and    eax,0xffffffe9
  40835f:	or     eax,0xffffff80
  408362:	mov    BYTE PTR [r8+0x30],al
  408366:	mov    r8d,DWORD PTR [rip+0x1f9e3]        # 0x427d50
  40836d:	call   0x405750
  408372:	test   eax,eax
  408374:	je     0x408390
  408376:	lea    rdx,[rip+0x1aec3]        # 0x423240
  40837d:	cdqe   
  40837f:	mov    rax,QWORD PTR [rdx+rax*8]
  408383:	add    rsp,0x28
  408387:	ret    
  408388:	nop    DWORD PTR [rax+rax*1+0x0]
  408390:	xor    eax,eax
  408392:	add    rsp,0x28
  408396:	ret    
  408397:	nop    WORD PTR [rax+rax*1+0x0]
  4083a0:	push   rbx
  4083a1:	sub    rsp,0x20
  4083a5:	test   rcx,rcx
  4083a8:	je     0x408400
  4083aa:	cmp    QWORD PTR [rip+0x1edae],0x0        # 0x427160
  4083b2:	mov    rbx,rcx
  4083b5:	je     0x408420
  4083b7:	mov    rcx,rbx
  4083ba:	or     BYTE PTR [rip+0x1edcf],0x80        # 0x427190
  4083c1:	call   0x40a820
  4083c6:	mov    r8d,DWORD PTR [rip+0x1f983]        # 0x427d50
  4083cd:	lea    r9,[rip+0x1ed8c]        # 0x427160
  4083d4:	mov    rdx,rax
  4083d7:	mov    rcx,rbx
  4083da:	call   0x405750
  4083df:	test   eax,eax
  4083e1:	je     0x408463
  4083e7:	lea    rdx,[rip+0x1ae52]        # 0x423240
  4083ee:	cdqe   
  4083f0:	mov    rax,QWORD PTR [rdx+rax*8]
  4083f4:	add    rsp,0x20
  4083f8:	pop    rbx
  4083f9:	ret    
  4083fa:	nop    WORD PTR [rax+rax*1+0x0]
  408400:	cmp    QWORD PTR [rip+0x1ed58],0x0        # 0x427160
  408408:	lea    rax,[rip+0x1ac89]        # 0x423098
  40840f:	cmovne rax,rcx
  408413:	add    rsp,0x20
  408417:	pop    rbx
  408418:	ret    
  408419:	nop    DWORD PTR [rax+0x0]
  408420:	mov    ecx,0xc8
  408425:	call   0x40a880
  40842a:	test   rax,rax
  40842d:	mov    QWORD PTR [rip+0x1ed2c],rax        # 0x427160
  408434:	je     0x40845a
  408436:	mov    ecx,0x100
  40843b:	mov    DWORD PTR [rip+0x1ed23],0xc8        # 0x427168
  408445:	call   0x40a880
  40844a:	test   rax,rax
  40844d:	mov    QWORD PTR [rip+0x1ed24],rax        # 0x427178
  408454:	jne    0x4083b7
  40845a:	lea    rax,[rip+0x1ac56]        # 0x4230b7
  408461:	jmp    0x4083f4
  408463:	xor    eax,eax
  408465:	jmp    0x4083f4
  408467:	nop    WORD PTR [rax+rax*1+0x0]
  408470:	push   rbx
  408471:	sub    rsp,0x50
  408475:	mov    rbx,rcx
  408478:	call   0x40a820
  40847d:	lea    rcx,[rip+0x1ecdc]        # 0x427160
  408484:	mov    DWORD PTR [rsp+0x40],eax
  408488:	mov    QWORD PTR [rsp+0x38],0x0
  408491:	mov    DWORD PTR [rsp+0x30],eax
  408495:	mov    DWORD PTR [rsp+0x28],0x0
  40849d:	mov    r9,rbx
  4084a0:	mov    DWORD PTR [rsp+0x20],eax
  4084a4:	xor    r8d,r8d
  4084a7:	xor    edx,edx
  4084a9:	call   0x4053f0
  4084ae:	not    eax
  4084b0:	shr    eax,0x1f
  4084b3:	add    rsp,0x50
  4084b7:	pop    rbx
  4084b8:	ret    
  4084b9:	nop    DWORD PTR [rax+0x0]
  4084c0:	push   r14
  4084c2:	push   r13
  4084c4:	push   r12
  4084c6:	push   rbp
  4084c7:	push   rdi
  4084c8:	push   rsi
  4084c9:	push   rbx
  4084ca:	sub    rsp,0x20
  4084ce:	mov    eax,r8d
  4084d1:	mov    rdi,rcx
  4084d4:	mov    ebp,r8d
  4084d7:	and    eax,0x1
  4084da:	mov    QWORD PTR [rcx],0x0
  4084e1:	mov    DWORD PTR [rcx+0x8],0x0
  4084e8:	cmp    eax,0x1
  4084eb:	mov    DWORD PTR [rcx+0xc],0x0
  4084f2:	mov    ecx,0x100
  4084f7:	sbb    r12d,r12d
  4084fa:	mov    r13,rdx
  4084fd:	and    r12d,0xfffd4fca
  408504:	call   0x40a880
  408509:	add    r12d,0x3b2fc
  408510:	test   bpl,0x2
  408514:	mov    QWORD PTR [rdi+0x18],rax
  408518:	jne    0x4085b4
  40851e:	mov    QWORD PTR [rdi+0x20],0x0
  408526:	test   bpl,0x4
  40852a:	jne    0x4085a0
  40852c:	and    BYTE PTR [rdi+0x30],0x7f
  408530:	movzx  eax,BYTE PTR [rdi+0x30]
  408534:	shr    ebp,0x3
  408537:	mov    rcx,r13
  40853a:	and    ebp,0x1
  40853d:	mov    ebx,0x8
  408542:	shl    ebp,0x4
  408545:	and    eax,0xffffffef
  408548:	or     ebp,eax
  40854a:	mov    BYTE PTR [rdi+0x30],bpl
  40854e:	call   0x40a820
  408553:	mov    r9,rdi
  408556:	mov    r8d,r12d
  408559:	mov    rdx,rax
  40855c:	mov    rcx,r13
  40855f:	call   0x405750
  408564:	cmp    eax,0x10
  408567:	je     0x408589
  408569:	test   eax,eax
  40856b:	mov    ebx,eax
  40856d:	jne    0x408589
  40856f:	xor    ebx,ebx
  408571:	cmp    QWORD PTR [rdi+0x18],0x0
  408576:	je     0x408589
  408578:	mov    rcx,rdi
  40857b:	call   0x402f80
  408580:	cmp    eax,0xfffffffe
  408583:	je     0x40860a
  408589:	mov    eax,ebx
  40858b:	add    rsp,0x20
  40858f:	pop    rbx
  408590:	pop    rsi
  408591:	pop    rdi
  408592:	pop    rbp
  408593:	pop    r12
  408595:	pop    r13
  408597:	pop    r14
  408599:	ret    
  40859a:	nop    WORD PTR [rax+rax*1+0x0]
  4085a0:	and    r12d,0xffffffbf
  4085a4:	or     BYTE PTR [rdi+0x30],0x80
  4085a8:	or     r12d,0x100
  4085af:	jmp    0x408530
  4085b4:	mov    ecx,0x100
  4085b9:	mov    ebx,0xc
  4085be:	call   0x40a880
  4085c3:	test   rax,rax
  4085c6:	mov    QWORD PTR [rdi+0x20],rax
  4085ca:	je     0x408589
  4085cc:	mov    rsi,rax
  4085cf:	xor    ebx,ebx
  4085d1:	mov    r14,QWORD PTR [rip+0x1ff64]        # 0x42853c
  4085d8:	jmp    0x4085e4
  4085da:	nop    WORD PTR [rax+rax*1+0x0]
  4085e0:	mov    rsi,QWORD PTR [rdi+0x20]
  4085e4:	mov    ecx,ebx
  4085e6:	add    rsi,rbx
  4085e9:	call   r14
  4085ec:	lea    edx,[rbx+0x20]
  4085ef:	test   eax,eax
  4085f1:	mov    eax,edx
  4085f3:	cmove  eax,ebx
  4085f6:	add    rbx,0x1
  4085fa:	cmp    rbx,0x100
  408601:	mov    BYTE PTR [rsi],al
  408603:	jne    0x4085e0
  408605:	jmp    0x408526
  40860a:	mov    rcx,QWORD PTR [rdi+0x18]
  40860e:	call   0x40a8f0
  408613:	mov    QWORD PTR [rdi+0x18],0x0
  40861b:	jmp    0x408589
  408620:	push   r13
  408622:	push   r12
  408624:	push   rbp
  408625:	push   rdi
  408626:	push   rsi
  408627:	push   rbx
  408628:	sub    rsp,0xb8
  40862f:	mov    ebx,DWORD PTR [rsp+0x110]
  408636:	mov    rdi,r8
  408639:	mov    rsi,rcx
  40863c:	mov    rcx,rdx
  40863f:	mov    rbp,rdx
  408642:	mov    r12,r9
  408645:	call   0x40a820
  40864a:	test   rdi,rdi
  40864d:	mov    r13,rax
  408650:	je     0x408770
  408656:	test   BYTE PTR [rsi+0x30],0x10
  40865a:	jne    0x408770
  408660:	mov    rax,QWORD PTR [rsi]
  408663:	mov    edx,ebx
  408665:	shr    ebx,1
  408667:	and    edx,0x1
  40866a:	and    ebx,0x1
  40866d:	lea    rcx,[rdi*8+0x0]
  408675:	shl    edx,0x5
  408678:	shl    ebx,0x6
  40867b:	mov    DWORD PTR [rsp+0x50],edi
  40867f:	mov    QWORD PTR [rsp+0x70],rax
  408684:	mov    rax,QWORD PTR [rsi+0x8]
  408688:	mov    QWORD PTR [rsp+0x78],rax
  40868d:	mov    rax,QWORD PTR [rsi+0x10]
  408691:	mov    QWORD PTR [rsp+0x80],rax
  408699:	mov    rax,QWORD PTR [rsi+0x18]
  40869d:	mov    QWORD PTR [rsp+0x88],rax
  4086a5:	mov    rax,QWORD PTR [rsi+0x20]
  4086a9:	mov    QWORD PTR [rsp+0x90],rax
  4086b1:	mov    rax,QWORD PTR [rsi+0x28]
  4086b5:	mov    QWORD PTR [rsp+0x98],rax
  4086bd:	mov    rax,QWORD PTR [rsi+0x30]
  4086c1:	mov    QWORD PTR [rsp+0xa0],rax
  4086c9:	and    eax,0xffffffdf
  4086cc:	or     eax,edx
  4086ce:	and    eax,0xffffffb9
  4086d1:	or     eax,ebx
  4086d3:	or     eax,0x4
  4086d6:	mov    BYTE PTR [rsp+0xa0],al
  4086dd:	call   0x40a880
  4086e2:	test   rax,rax
  4086e5:	mov    QWORD PTR [rsp+0x58],rax
  4086ea:	je     0x408833
  4086f0:	lea    rax,[rax+rdi*4]
  4086f4:	lea    rcx,[rsp+0x70]
  4086f9:	xor    r8d,r8d
  4086fc:	xor    edx,edx
  4086fe:	mov    DWORD PTR [rsp+0x40],r13d
  408703:	mov    DWORD PTR [rsp+0x30],r13d
  408708:	mov    QWORD PTR [rsp+0x60],rax
  40870d:	lea    rax,[rsp+0x50]
  408712:	mov    DWORD PTR [rsp+0x28],0x0
  40871a:	mov    DWORD PTR [rsp+0x20],r13d
  40871f:	mov    r9,rbp
  408722:	mov    QWORD PTR [rsp+0x38],rax
  408727:	call   0x4053f0
  40872c:	test   eax,eax
  40872e:	mov    ebx,eax
  408730:	mov    rcx,QWORD PTR [rsp+0x58]
  408735:	js     0x40875f
  408737:	mov    r8,QWORD PTR [rsp+0x60]
  40873c:	xor    edx,edx
  40873e:	xor    r10d,r10d
  408741:	mov    eax,DWORD PTR [rcx+rdx*4]
  408744:	lea    r11,[r12+rdx*8]
  408748:	mov    DWORD PTR [r11],eax
  40874b:	mov    edx,DWORD PTR [r8+rdx*4]
  40874f:	mov    DWORD PTR [r11+0x4],edx
  408753:	lea    edx,[r10+0x1]
  408757:	cmp    rdi,rdx
  40875a:	mov    r10,rdx
  40875d:	ja     0x408741
  40875f:	call   0x40a8f0
  408764:	jmp    0x40881e
  408769:	nop    DWORD PTR [rax+0x0]
  408770:	mov    rax,QWORD PTR [rsi]
  408773:	mov    r10,QWORD PTR [rsi+0x30]
  408777:	lea    rcx,[rsp+0x70]
  40877c:	mov    DWORD PTR [rsp+0x40],r13d
  408781:	mov    QWORD PTR [rsp+0x38],0x0
  40878a:	mov    r9,rbp
  40878d:	mov    DWORD PTR [rsp+0x30],r13d
  408792:	mov    DWORD PTR [rsp+0x28],0x0
  40879a:	xor    edx,edx
  40879c:	mov    QWORD PTR [rsp+0x70],rax
  4087a1:	mov    rax,QWORD PTR [rsi+0x8]
  4087a5:	mov    QWORD PTR [rsp+0xa0],r10
  4087ad:	and    r10d,0xffffffdf
  4087b1:	mov    DWORD PTR [rsp+0x20],r13d
  4087b6:	mov    QWORD PTR [rsp+0x78],rax
  4087bb:	mov    rax,QWORD PTR [rsi+0x10]
  4087bf:	mov    QWORD PTR [rsp+0x80],rax
  4087c7:	mov    rax,QWORD PTR [rsi+0x18]
  4087cb:	mov    QWORD PTR [rsp+0x88],rax
  4087d3:	mov    rax,QWORD PTR [rsi+0x20]
  4087d7:	mov    QWORD PTR [rsp+0x90],rax
  4087df:	mov    rax,QWORD PTR [rsi+0x28]
  4087e3:	mov    QWORD PTR [rsp+0x98],rax
  4087eb:	mov    eax,ebx
  4087ed:	shr    ebx,1
  4087ef:	and    eax,0x1
  4087f2:	and    ebx,0x1
  4087f5:	shl    eax,0x5
  4087f8:	shl    ebx,0x6
  4087fb:	or     r10d,eax
  4087fe:	mov    r8d,ebx
  408801:	mov    ebx,r10d
  408804:	and    ebx,0xffffffb9
  408807:	or     ebx,r8d
  40880a:	xor    r8d,r8d
  40880d:	or     ebx,0x4
  408810:	mov    BYTE PTR [rsp+0xa0],bl
  408817:	call   0x4053f0
  40881c:	mov    ebx,eax
  40881e:	mov    eax,ebx
  408820:	shr    eax,0x1f
  408823:	add    rsp,0xb8
  40882a:	pop    rbx
  40882b:	pop    rsi
  40882c:	pop    rdi
  40882d:	pop    rbp
  40882e:	pop    r12
  408830:	pop    r13
  408832:	ret    
  408833:	mov    eax,0x1
  408838:	jmp    0x408823
  40883a:	nop    WORD PTR [rax+rax*1+0x0]
  408840:	push   rbp
  408841:	push   rdi
  408842:	push   rsi
  408843:	push   rbx
  408844:	sub    rsp,0x28
  408848:	cmp    ecx,0x10
  40884b:	mov    rbp,r8
  40884e:	mov    rsi,r9
  408851:	ja     0x4088b1
  408853:	lea    rdx,[rip+0x1a9e6]        # 0x423240
  40885a:	movsxd rax,ecx
  40885d:	mov    rdi,QWORD PTR [rdx+rax*8]
  408861:	mov    rcx,rdi
  408864:	call   0x40a820
  408869:	test   rsi,rsi
  40886c:	lea    rbx,[rax+0x1]
  408870:	je     0x408885
  408872:	cmp    rbx,rsi
  408875:	ja     0x408891
  408877:	mov    r8,rbx
  40887a:	mov    rdx,rdi
  40887d:	mov    rcx,rbp
  408880:	call   0x40a870
  408885:	mov    rax,rbx
  408888:	add    rsp,0x28
  40888c:	pop    rbx
  40888d:	pop    rsi
  40888e:	pop    rdi
  40888f:	pop    rbp
  408890:	ret    
  408891:	lea    r8,[rsi-0x1]
  408895:	mov    rdx,rdi
  408898:	mov    rcx,rbp
  40889b:	call   0x40a870
  4088a0:	mov    rax,rbx
  4088a3:	mov    BYTE PTR [rbp+rsi*1-0x1],0x0
  4088a8:	add    rsp,0x28
  4088ac:	pop    rbx
  4088ad:	pop    rsi
  4088ae:	pop    rdi
  4088af:	pop    rbp
  4088b0:	ret    
  4088b1:	call   0x40a948
  4088b6:	nop
  4088b7:	nop    WORD PTR [rax+rax*1+0x0]
  4088c0:	push   rbx
  4088c1:	sub    rsp,0x20
  4088c5:	mov    rbx,rcx
  4088c8:	mov    rcx,QWORD PTR [rcx]
  4088cb:	call   0x40a8f0
  4088d0:	mov    rcx,QWORD PTR [rbx+0x18]
  4088d4:	mov    QWORD PTR [rbx],0x0
  4088db:	mov    DWORD PTR [rbx+0x8],0x0
  4088e2:	mov    DWORD PTR [rbx+0xc],0x0
  4088e9:	call   0x40a8f0
  4088ee:	and    BYTE PTR [rbx+0x30],0xf7
  4088f2:	mov    rcx,QWORD PTR [rbx+0x20]
  4088f6:	mov    QWORD PTR [rbx+0x18],0x0
  4088fe:	call   0x40a8f0
  408903:	mov    QWORD PTR [rbx+0x20],0x0
  40890b:	add    rsp,0x20
  40890f:	pop    rbx
  408910:	ret    
  408911:	nop
  408912:	nop
  408913:	nop
  408914:	nop
  408915:	nop
  408916:	nop
  408917:	nop
  408918:	nop
  408919:	nop
  40891a:	nop
  40891b:	nop
  40891c:	nop
  40891d:	nop
  40891e:	nop
  40891f:	nop
  408920:	push   r15
  408922:	push   r14
  408924:	push   r13
  408926:	push   r12
  408928:	push   rbp
  408929:	push   rdi
  40892a:	push   rsi
  40892b:	push   rbx
  40892c:	sub    rsp,0x38
  408930:	mov    r15,rdx
  408933:	movzx  edx,BYTE PTR [rcx]
  408936:	lea    rax,[rcx+0x1]
  40893a:	test   dl,dl
  40893c:	je     0x408e0d
  408942:	mov    r9d,r8d
  408945:	mov    r11d,r8d
  408948:	mov    r14,QWORD PTR [rip+0x1b231]        # 0x423b80
  40894f:	shr    r9d,0x2
  408953:	shr    r11d,1
  408956:	mov    ebx,r8d
  408959:	mov    edi,r9d
  40895c:	xor    r11d,0x1
  408960:	mov    r13d,r8d
  408963:	and    edi,0x1
  408966:	and    ebx,0x10
  408969:	mov    r12,r15
  40896c:	mov    BYTE PTR [rsp+0x2d],dil
  408971:	mov    edi,r8d
  408974:	and    r11d,0x1
  408978:	and    edi,0x1
  40897b:	and    r13d,0x1
  40897f:	mov    DWORD PTR [rsp+0x28],edi
  408983:	and    edi,0x1
  408986:	mov    BYTE PTR [rsp+0x2e],dil
  40898b:	test   ebx,ebx
  40898d:	je     0x408a03
  40898f:	mov    r9,QWORD PTR [rip+0x1b1ea]        # 0x423b80
  408996:	movzx  edx,BYTE PTR [r9+rdx*1]
  40899b:	cmp    dl,0x3f
  40899e:	je     0x408ba0
  4089a4:	jbe    0x408d50
  4089aa:	cmp    dl,0x5b
  4089ad:	je     0x408a1b
  4089af:	cmp    dl,0x5c
  4089b2:	je     0x408c09
  4089b8:	movzx  ecx,BYTE PTR [r12]
  4089bd:	movzx  ecx,BYTE PTR [r9+rcx*1]
  4089c2:	cmp    edx,ecx
  4089c4:	jne    0x408ae0
  4089ca:	mov    rcx,rax
  4089cd:	movzx  edx,BYTE PTR [rcx]
  4089d0:	add    r12,0x1
  4089d4:	lea    rax,[rcx+0x1]
  4089d8:	test   dl,dl
  4089da:	jne    0x40898b
  4089dc:	movzx  edx,BYTE PTR [r12]
  4089e1:	xor    eax,eax
  4089e3:	test   dl,dl
  4089e5:	je     0x408ae5
  4089eb:	cmp    dl,0x2f
  4089ee:	sete   al
  4089f1:	shr    r8d,0x3
  4089f5:	and    eax,r8d
  4089f8:	xor    eax,0x1
  4089fb:	movzx  eax,al
  4089fe:	jmp    0x408ae5
  408a03:	cmp    dl,0x3f
  408a06:	je     0x408ba0
  408a0c:	jbe    0x408c41
  408a12:	cmp    dl,0x5b
  408a15:	jne    0x408c00
  408a1b:	movzx  esi,BYTE PTR [r12]
  408a20:	test   sil,sil
  408a23:	je     0x408ae0
  408a29:	cmp    sil,0x2e
  408a2d:	jne    0x408a3a
  408a2f:	cmp    BYTE PTR [rsp+0x2d],0x0
  408a34:	jne    0x408da3
  408a3a:	movzx  edx,BYTE PTR [rcx+0x1]
  408a3e:	mov    rbp,QWORD PTR [rip+0x1b13b]        # 0x423b80
  408a45:	movsxd rdi,esi
  408a48:	cmp    dl,0x5e
  408a4b:	sete   r9b
  408a4f:	cmp    dl,0x21
  408a52:	sete   dl
  408a55:	add    rcx,0x2
  408a59:	or     r9b,dl
  408a5c:	cmovne rax,rcx
  408a60:	mov    BYTE PTR [rsp+0x2f],r9b
  408a65:	lea    rcx,[rax+0x1]
  408a69:	movzx  eax,BYTE PTR [rax]
  408a6c:	nop    DWORD PTR [rax+0x0]
  408a70:	cmp    al,0x5c
  408a72:	jne    0x408a7d
  408a74:	test   r11b,r11b
  408a77:	jne    0x408b83
  408a7d:	movzx  edx,al
  408a80:	mov    r10,rcx
  408a83:	test   ebx,ebx
  408a85:	je     0x408b22
  408a8b:	test   al,al
  408a8d:	movzx  edx,BYTE PTR [r14+rdx*1]
  408a92:	je     0x408ae0
  408a94:	movzx  eax,BYTE PTR [r10]
  408a98:	lea    rcx,[r10+0x1]
  408a9c:	movzx  eax,BYTE PTR [r14+rax*1]
  408aa1:	cmp    al,0x2f
  408aa3:	jne    0x408aaa
  408aa5:	test   r13b,r13b
  408aa8:	jne    0x408ae0
  408aaa:	cmp    al,0x2d
  408aac:	movzx  r9d,dl
  408ab0:	je     0x408b40
  408ab6:	test   ebx,ebx
  408ab8:	je     0x408b33
  408aba:	cmp    dl,BYTE PTR [rbp+rdi*1+0x0]
  408abe:	movzx  r10d,BYTE PTR [rbp+rdi*1+0x0]
  408ac4:	ja     0x408acb
  408ac6:	cmp    r10d,r9d
  408ac9:	jle    0x408b04
  408acb:	cmp    al,0x5d
  408acd:	jne    0x408a70
  408acf:	cmp    BYTE PTR [rsp+0x2f],0x0
  408ad4:	jne    0x4089cd
  408ada:	nop    WORD PTR [rax+rax*1+0x0]
  408ae0:	mov    eax,0x1
  408ae5:	add    rsp,0x38
  408ae9:	pop    rbx
  408aea:	pop    rsi
  408aeb:	pop    rdi
  408aec:	pop    rbp
  408aed:	pop    r12
  408aef:	pop    r13
  408af1:	pop    r14
  408af3:	pop    r15
  408af5:	ret    
  408af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b00:	add    rcx,0x1
  408b04:	cmp    al,0x5d
  408b06:	je     0x408df4
  408b0c:	test   al,al
  408b0e:	je     0x408ae0
  408b10:	movzx  eax,BYTE PTR [rcx]
  408b13:	cmp    al,0x5c
  408b15:	jne    0x408b00
  408b17:	test   r11b,r11b
  408b1a:	je     0x408b00
  408b1c:	add    rcx,0x2
  408b20:	jmp    0x408b0c
  408b22:	test   al,al
  408b24:	je     0x408ae0
  408b26:	lea    rcx,[r10+0x1]
  408b2a:	movzx  eax,BYTE PTR [r10]
  408b2e:	jmp    0x408aa1
  408b33:	cmp    esi,edx
  408b35:	mov    r10d,esi
  408b38:	jl     0x408acb
  408b3a:	jmp    0x408ac6
  408b3c:	nop    DWORD PTR [rax+0x0]
  408b40:	movzx  r9d,BYTE PTR [r10+0x1]
  408b45:	cmp    r9b,0x5d
  408b49:	je     0x408b90
  408b4b:	cmp    r9b,0x5c
  408b4f:	jne    0x408b5a
  408b51:	test   r11b,r11b
  408b54:	jne    0x408d95
  408b5a:	lea    rax,[r10+0x2]
  408b5e:	test   r9b,r9b
  408b61:	je     0x408ae0
  408b67:	test   ebx,ebx
  408b69:	je     0x408b77
  408b6b:	mov    rcx,QWORD PTR [rip+0x1b00e]        # 0x423b80
  408b72:	movzx  r9d,BYTE PTR [rcx+r9*1]
  408b77:	lea    rcx,[rax+0x1]
  408b7b:	movzx  eax,BYTE PTR [rax]
  408b7e:	jmp    0x408ab6
  408b83:	lea    r10,[rcx+0x1]
  408b87:	movzx  edx,BYTE PTR [rcx]
  408b8a:	jmp    0x408a83
  408b8f:	nop
  408b90:	movzx  r9d,dl
  408b94:	jmp    0x408ab6
  408b99:	nop    DWORD PTR [rax+0x0]
  408ba0:	movzx  edx,BYTE PTR [r12]
  408ba5:	test   dl,dl
  408ba7:	je     0x408ae0
  408bad:	cmp    dl,0x2f
  408bb0:	jne    0x408bbd
  408bb2:	cmp    BYTE PTR [rsp+0x2e],0x0
  408bb7:	jne    0x408ae0
  408bbd:	cmp    dl,0x2e
  408bc0:	jne    0x4089ca
  408bc6:	cmp    BYTE PTR [rsp+0x2d],0x0
  408bcb:	je     0x4089ca
  408bd1:	cmp    r12,r15
  408bd4:	je     0x408ae0
  408bda:	mov    ecx,DWORD PTR [rsp+0x28]
  408bde:	test   ecx,ecx
  408be0:	je     0x4089ca
  408be6:	cmp    BYTE PTR [r12-0x1],0x2f
  408bec:	jne    0x4089ca
  408bf2:	jmp    0x408ae0
  408bf7:	nop    WORD PTR [rax+rax*1+0x0]
  408c00:	cmp    dl,0x5c
  408c03:	jne    0x408e15
  408c09:	test   r8b,0x2
  408c0d:	jne    0x408d60
  408c13:	test   ebx,ebx
  408c15:	lea    rdx,[rcx+0x2]
  408c19:	movzx  eax,BYTE PTR [rcx+0x1]
  408c1d:	je     0x408d80
  408c23:	mov    r9,QWORD PTR [rip+0x1af56]        # 0x423b80
  408c2a:	mov    rcx,rdx
  408c2d:	movzx  eax,BYTE PTR [r9+rax*1]
  408c32:	movzx  edx,BYTE PTR [r12]
  408c37:	movzx  edx,BYTE PTR [r9+rdx*1]
  408c3c:	jmp    0x408d88
  408c41:	cmp    dl,0x2a
  408c44:	jne    0x408e15
  408c4a:	test   r8b,0x4
  408c4e:	mov    rdi,r12
  408c51:	je     0x408c5e
  408c53:	cmp    BYTE PTR [r12],0x2e
  408c58:	je     0x408dd0
  408c5e:	movzx  esi,BYTE PTR [rcx+0x1]
  408c62:	lea    rdx,[rcx+0x2]
  408c66:	cmp    sil,0x2a
  408c6a:	je     0x408c72
  408c6c:	cmp    sil,0x3f
  408c70:	jne    0x408caf
  408c72:	mov    eax,r8d
  408c75:	and    eax,0x1
  408c78:	nop    DWORD PTR [rax+rax*1+0x0]
  408c80:	test   eax,eax
  408c82:	je     0x408c8d
  408c84:	cmp    BYTE PTR [rdi],0x2f
  408c87:	je     0x408ae0
  408c8d:	cmp    sil,0x3f
  408c91:	je     0x408d40
  408c97:	add    rdx,0x1
  408c9b:	movzx  esi,BYTE PTR [rdx-0x1]
  408c9f:	add    rdi,0x1
  408ca3:	cmp    sil,0x2a
  408ca7:	je     0x408c80
  408ca9:	cmp    sil,0x3f
  408cad:	je     0x408c80
  408caf:	xor    eax,eax
  408cb1:	test   sil,sil
  408cb4:	je     0x408ae5
  408cba:	cmp    sil,0x5c
  408cbe:	jne    0x408cca
  408cc0:	test   r8b,0x2
  408cc4:	je     0x408e04
  408cca:	movzx  r12d,sil
  408cce:	test   ebx,ebx
  408cd0:	je     0x408cde
  408cd2:	mov    rax,QWORD PTR [rip+0x1aea7]        # 0x423b80
  408cd9:	movzx  r12d,BYTE PTR [rax+r12*1]
  408cde:	movzx  eax,BYTE PTR [rdi]
  408ce1:	lea    rbp,[rdx-0x1]
  408ce5:	test   al,al
  408ce7:	je     0x408ae0
  408ced:	mov    r14d,r8d
  408cf0:	mov    r13,QWORD PTR [rip+0x1ae89]        # 0x423b80
  408cf7:	and    r14d,0xfffffffb
  408cfb:	jmp    0x408d0f
  408cfd:	nop    DWORD PTR [rax]
  408d00:	add    rdi,0x1
  408d04:	movzx  eax,BYTE PTR [rdi]
  408d07:	test   al,al
  408d09:	je     0x408ae0
  408d0f:	cmp    sil,0x5b
  408d13:	je     0x408d26
  408d15:	test   ebx,ebx
  408d17:	je     0x408d21
  408d19:	cdqe   
  408d1b:	movzx  eax,BYTE PTR [r13+rax*1+0x0]
  408d21:	cmp    eax,r12d
  408d24:	jne    0x408d00
  408d26:	mov    r8d,r14d
  408d29:	mov    rdx,rdi
  408d2c:	mov    rcx,rbp
  408d2f:	call   0x408920
  408d34:	test   eax,eax
  408d36:	jne    0x408d00
  408d38:	jmp    0x408ae5
  408d3d:	nop    DWORD PTR [rax]
  408d40:	cmp    BYTE PTR [rdi],0x0
  408d43:	jne    0x408c97
  408d49:	jmp    0x408ae0
  408d4e:	xchg   ax,ax
  408d50:	cmp    dl,0x2a
  408d53:	je     0x408c4a
  408d59:	jmp    0x4089b8
  408d5e:	xchg   ax,ax
  408d60:	test   ebx,ebx
  408d62:	mov    rcx,rax
  408d65:	mov    eax,0x5c
  408d6a:	je     0x408d83
  408d6c:	mov    r9,QWORD PTR [rip+0x1ae0d]        # 0x423b80
  408d73:	jmp    0x408c32
  408d78:	nop    DWORD PTR [rax+rax*1+0x0]
  408d80:	mov    rcx,rdx
  408d83:	movzx  edx,BYTE PTR [r12]
  408d88:	cmp    edx,eax
  408d8a:	je     0x4089cd
  408d90:	jmp    0x408ae0
  408d95:	lea    rax,[r10+0x3]
  408d99:	movzx  r9d,BYTE PTR [r10+0x2]
  408d9e:	jmp    0x408b5e
  408da3:	cmp    r12,r15
  408da6:	je     0x408ae0
  408dac:	mov    edx,DWORD PTR [rsp+0x28]
  408db0:	test   edx,edx
  408db2:	je     0x408a3a
  408db8:	cmp    BYTE PTR [r12-0x1],0x2f
  408dbe:	jne    0x408a3a
  408dc4:	jmp    0x408ae0
  408dc9:	nop    DWORD PTR [rax+0x0]
  408dd0:	cmp    r12,r15
  408dd3:	je     0x408ae0
  408dd9:	test   r8b,0x1
  408ddd:	je     0x408c5e
  408de3:	cmp    BYTE PTR [r12-0x1],0x2f
  408de9:	jne    0x408c5e
  408def:	jmp    0x408ae0
  408df4:	cmp    BYTE PTR [rsp+0x2f],0x0
  408df9:	je     0x4089cd
  408dff:	jmp    0x408ae0
  408e04:	movzx  r12d,BYTE PTR [rdx]
  408e08:	jmp    0x408cce
  408e0d:	mov    r12,r15
  408e10:	jmp    0x4089dc
  408e15:	movzx  ecx,BYTE PTR [r12]
  408e1a:	jmp    0x4089c2
  408e1f:	nop
  408e20:	ret    
  408e21:	nop    DWORD PTR [rax+rax*1+0x0]
  408e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e30:	push   rbx
  408e31:	sub    rsp,0x20
  408e35:	mov    rbx,QWORD PTR [rip+0x1f5d8]        # 0x428414
  408e3c:	call   rbx
  408e3e:	call   rbx
  408e40:	mov    rax,rbx
  408e43:	add    rsp,0x20
  408e47:	pop    rbx
  408e48:	rex.W jmp rax
  408e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  408e50:	jmp    0x40a910
  408e55:	nop
  408e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e60:	jmp    0x40a7b8
  408e65:	nop
  408e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e70:	jmp    0x40a8e8
  408e75:	nop
  408e76:	nop
  408e77:	nop
  408e78:	nop
  408e79:	nop
  408e7a:	nop
  408e7b:	nop
  408e7c:	nop
  408e7d:	nop
  408e7e:	nop
  408e7f:	nop
  408e80:	mov    QWORD PTR [rip+0xa199],rcx        # 0x413020
  408e87:	ret    
  408e88:	nop    DWORD PTR [rax+rax*1+0x0]
  408e90:	push   rdi
  408e91:	push   rsi
  408e92:	push   rbx
  408e93:	sub    rsp,0x30
  408e97:	mov    rsi,QWORD PTR [rip+0xa182]        # 0x413020
  408e9e:	lea    rax,[rip+0x1a85b]        # 0x423700
  408ea5:	lea    rbx,[rip+0x1a857]        # 0x423703
  408eac:	mov    rdi,rcx
  408eaf:	cmp    BYTE PTR [rsi],0x0
  408eb2:	cmovne rbx,rax
  408eb6:	call   QWORD PTR [rip+0x1f558]        # 0x428414
  408ebc:	lea    rdx,[rip+0x1a845]        # 0x423708
  408ec3:	lea    rcx,[rax+0x60]
  408ec7:	mov    DWORD PTR [rsp+0x20],edi
  408ecb:	mov    r9,rbx
  408ece:	mov    r8,rsi
  408ed1:	call   0x40a908
  408ed6:	mov    ecx,0x1
  408edb:	call   0x409010
  408ee0:	nop
  408ee1:	nop    DWORD PTR [rax+rax*1+0x0]
  408ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ef0:	push   rbx
  408ef1:	sub    rsp,0x20
  408ef5:	mov    eax,0x1
  408efa:	test   rcx,rcx
  408efd:	mov    rbx,rcx
  408f00:	cmove  rbx,rax
  408f04:	mov    rcx,rbx
  408f07:	call   0x40a880
  408f0c:	test   rax,rax
  408f0f:	je     0x408f17
  408f11:	add    rsp,0x20
  408f15:	pop    rbx
  408f16:	ret    
  408f17:	mov    rcx,rbx
  408f1a:	call   0x408e90
  408f1f:	nop
  408f20:	push   rsi
  408f21:	push   rbx
  408f22:	sub    rsp,0x28
  408f26:	test   rcx,rcx
  408f29:	mov    rbx,rcx
  408f2c:	mov    rsi,rdx
  408f2f:	je     0x408f50
  408f31:	test   rdx,rdx
  408f34:	je     0x408f50
  408f36:	mov    rdx,rsi
  408f39:	mov    rcx,rbx
  408f3c:	call   0x40a938
  408f41:	test   rax,rax
  408f44:	je     0x408f5c
  408f46:	add    rsp,0x28
  408f4a:	pop    rbx
  408f4b:	pop    rsi
  408f4c:	ret    
  408f4d:	nop    DWORD PTR [rax]
  408f50:	mov    esi,0x1
  408f55:	mov    ebx,0x1
  408f5a:	jmp    0x408f36
  408f5c:	mov    rcx,rsi
  408f5f:	imul   rcx,rbx
  408f63:	call   0x408e90
  408f68:	nop
  408f69:	nop    DWORD PTR [rax+0x0]
  408f70:	push   rbx
  408f71:	sub    rsp,0x20
  408f75:	mov    eax,0x1
  408f7a:	test   rdx,rdx
  408f7d:	mov    rbx,rdx
  408f80:	cmove  rbx,rax
  408f84:	test   rcx,rcx
  408f87:	je     0x408fa0
  408f89:	mov    rdx,rbx
  408f8c:	call   0x40a858
  408f91:	test   rax,rax
  408f94:	je     0x408faa
  408f96:	add    rsp,0x20
  408f9a:	pop    rbx
  408f9b:	ret    
  408f9c:	nop    DWORD PTR [rax+0x0]
  408fa0:	mov    rcx,rbx
  408fa3:	call   0x40a880
  408fa8:	jmp    0x408f91
  408faa:	mov    rcx,rbx
  408fad:	call   0x408e90
  408fb2:	nop
  408fb3:	nop
  408fb4:	nop
  408fb5:	nop
  408fb6:	nop
  408fb7:	nop
  408fb8:	nop
  408fb9:	nop
  408fba:	nop
  408fbb:	nop
  408fbc:	nop
  408fbd:	nop
  408fbe:	nop
  408fbf:	nop
  408fc0:	push   rbx
  408fc1:	sub    rsp,0x20
  408fc5:	mov    ebx,ecx
  408fc7:	call   0x40a828
  408fcc:	test   rax,rax
  408fcf:	je     0x408fe0
  408fd1:	add    rsp,0x20
  408fd5:	pop    rbx
  408fd6:	ret    
  408fd7:	nop    WORD PTR [rax+rax*1+0x0]
  408fe0:	lea    rdx,[rip+0x1a759]        # 0x423740
  408fe7:	lea    rcx,[rip+0x1e2d2]        # 0x4272c0
  408fee:	mov    r8d,ebx
  408ff1:	call   0x40a848
  408ff6:	lea    rax,[rip+0x1e2c3]        # 0x4272c0
  408ffd:	add    rsp,0x20
  409001:	pop    rbx
  409002:	ret    
  409003:	nop
  409004:	nop
  409005:	nop
  409006:	nop
  409007:	nop
  409008:	nop
  409009:	nop
  40900a:	nop
  40900b:	nop
  40900c:	nop
  40900d:	nop
  40900e:	nop
  40900f:	nop
  409010:	sub    rsp,0x38
  409014:	mov    rax,QWORD PTR [rip+0x1ed3d]        # 0x427d58
  40901b:	test   rax,rax
  40901e:	je     0x40902a
  409020:	mov    DWORD PTR [rsp+0x2c],ecx
  409024:	call   rax
  409026:	mov    ecx,DWORD PTR [rsp+0x2c]
  40902a:	call   0x40a930
  40902f:	nop
  409030:	push   rbx
  409031:	sub    rsp,0x30
  409035:	mov    rbx,rcx
  409038:	mov    rcx,QWORD PTR [rip+0x1ed21]        # 0x427d60
  40903f:	call   0x4095e0
  409044:	cmp    rax,0xffffffffffffffff
  409048:	mov    QWORD PTR [rsp+0x20],rax
  40904d:	je     0x4090c5
  40904f:	mov    ecx,0x8
  409054:	call   0x40a960
  409059:	mov    rcx,QWORD PTR [rip+0x1ed00]        # 0x427d60
  409060:	call   0x4095e0
  409065:	mov    rcx,QWORD PTR [rip+0x1ecfc]        # 0x427d68
  40906c:	mov    QWORD PTR [rsp+0x20],rax
  409071:	call   0x4095e0
  409076:	lea    rdx,[rsp+0x20]
  40907b:	lea    r8,[rsp+0x28]
  409080:	mov    rcx,rbx
  409083:	mov    QWORD PTR [rsp+0x28],rax
  409088:	call   0x40a9b8
  40908d:	mov    rcx,QWORD PTR [rsp+0x20]
  409092:	mov    rbx,rax
  409095:	call   0x4095f0
  40909a:	mov    rcx,QWORD PTR [rsp+0x28]
  40909f:	mov    QWORD PTR [rip+0x1ecba],rax        # 0x427d60
  4090a6:	call   0x4095f0
  4090ab:	mov    ecx,0x8
  4090b0:	mov    QWORD PTR [rip+0x1ecb1],rax        # 0x427d68
  4090b7:	call   0x40a950
  4090bc:	mov    rax,rbx
  4090bf:	add    rsp,0x30
  4090c3:	pop    rbx
  4090c4:	ret    
  4090c5:	mov    rax,QWORD PTR [rip+0x1a9b4]        # 0x423a80
  4090cc:	mov    rcx,rbx
  4090cf:	call   QWORD PTR [rax]
  4090d1:	add    rsp,0x30
  4090d5:	pop    rbx
  4090d6:	ret    
  4090d7:	nop    WORD PTR [rax+rax*1+0x0]
  4090e0:	sub    rsp,0x28
  4090e4:	call   0x409030
  4090e9:	test   rax,rax
  4090ec:	sete   al
  4090ef:	movzx  eax,al
  4090f2:	neg    eax
  4090f4:	add    rsp,0x28
  4090f8:	ret    
  4090f9:	nop
  4090fa:	nop
  4090fb:	nop
  4090fc:	nop
  4090fd:	nop
  4090fe:	nop
  4090ff:	nop
  409100:	sub    rsp,0x28
  409104:	mov    rax,QWORD PTR [rip+0x9f25]        # 0x413030
  40910b:	mov    rax,QWORD PTR [rax]
  40910e:	test   rax,rax
  409111:	je     0x409130
  409113:	call   rax
  409115:	mov    rax,QWORD PTR [rip+0x9f14]        # 0x413030
  40911c:	lea    rdx,[rax+0x8]
  409120:	mov    rax,QWORD PTR [rax+0x8]
  409124:	mov    QWORD PTR [rip+0x9f05],rdx        # 0x413030
  40912b:	test   rax,rax
  40912e:	jne    0x409113
  409130:	add    rsp,0x28
  409134:	ret    
  409135:	nop
  409136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409140:	push   rsi
  409141:	push   rbx
  409142:	sub    rsp,0x28
  409146:	mov    rsi,QWORD PTR [rip+0x1a8b3]        # 0x423a00
  40914d:	mov    rax,QWORD PTR [rsi]
  409150:	cmp    eax,0xffffffff
  409153:	mov    ebx,eax
  409155:	je     0x409180
  409157:	test   ebx,ebx
  409159:	je     0x40916a
  40915b:	nop    DWORD PTR [rax+rax*1+0x0]
  409160:	mov    eax,ebx
  409162:	call   QWORD PTR [rsi+rax*8]
  409165:	sub    ebx,0x1
  409168:	jne    0x409160
  40916a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x409100
  409171:	add    rsp,0x28
  409175:	pop    rbx
  409176:	pop    rsi
  409177:	jmp    0x4090e0
  40917c:	nop    DWORD PTR [rax+0x0]
  409180:	xor    ebx,ebx
  409182:	jmp    0x409186
  409184:	mov    ebx,eax
  409186:	lea    edx,[rbx+0x1]
  409189:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40918e:	mov    rax,rdx
  409191:	jne    0x409184
  409193:	jmp    0x409157
  409195:	nop
  409196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4091a0:	mov    eax,DWORD PTR [rip+0x1e15a]        # 0x427300
  4091a6:	test   eax,eax
  4091a8:	je     0x4091b0
  4091aa:	repz ret 
  4091ac:	nop    DWORD PTR [rax+0x0]
  4091b0:	mov    DWORD PTR [rip+0x1e146],0x1        # 0x427300
  4091ba:	jmp    0x409140
  4091bc:	nop
  4091bd:	nop
  4091be:	nop
  4091bf:	nop
  4091c0:	mov    rax,QWORD PTR [rip+0x1f255]        # 0x42841c
  4091c7:	rex.W jmp rax
  4091ca:	nop
  4091cb:	nop
  4091cc:	nop
  4091cd:	nop
  4091ce:	nop
  4091cf:	nop
  4091d0:	xor    eax,eax
  4091d2:	ret    
  4091d3:	nop
  4091d4:	nop
  4091d5:	nop
  4091d6:	nop
  4091d7:	nop
  4091d8:	nop
  4091d9:	nop
  4091da:	nop
  4091db:	nop
  4091dc:	nop
  4091dd:	nop
  4091de:	nop
  4091df:	nop
  4091e0:	push   r12
  4091e2:	push   rbp
  4091e3:	push   rdi
  4091e4:	push   rsi
  4091e5:	push   rbx
  4091e6:	sub    rsp,0x40
  4091ea:	mov    rbx,QWORD PTR [rip+0x9eaf]        # 0x4130a0
  4091f1:	movabs rax,0x2b992ddfa232
  4091fb:	mov    QWORD PTR [rsp+0x20],0x0
  409204:	cmp    rbx,rax
  409207:	je     0x409220
  409209:	not    rbx
  40920c:	mov    QWORD PTR [rip+0x9e9d],rbx        # 0x4130b0
  409213:	add    rsp,0x40
  409217:	pop    rbx
  409218:	pop    rsi
  409219:	pop    rdi
  40921a:	pop    rbp
  40921b:	pop    r12
  40921d:	ret    
  40921e:	xchg   ax,ax
  409220:	lea    rcx,[rsp+0x20]
  409225:	call   QWORD PTR [rip+0x1f141]        # 0x42836c
  40922b:	mov    r12,QWORD PTR [rsp+0x20]
  409230:	call   QWORD PTR [rip+0x1f116]        # 0x42834c
  409236:	mov    ebp,eax
  409238:	call   QWORD PTR [rip+0x1f116]        # 0x428354
  40923e:	mov    edi,eax
  409240:	call   QWORD PTR [rip+0x1f12e]        # 0x428374
  409246:	lea    rcx,[rsp+0x30]
  40924b:	mov    esi,eax
  40924d:	call   QWORD PTR [rip+0x1f139]        # 0x42838c
  409253:	xor    r12,QWORD PTR [rsp+0x30]
  409258:	mov    edx,edi
  40925a:	movabs rax,0xffffffffffff
  409264:	xor    rbp,r12
  409267:	mov    rdi,rbp
  40926a:	xor    rdi,rdx
  40926d:	mov    edx,esi
  40926f:	xor    rdi,rdx
  409272:	mov    rsi,rdi
  409275:	and    rsi,rax
  409278:	cmp    rsi,rbx
  40927b:	je     0x4092a0
  40927d:	mov    rax,rsi
  409280:	not    rax
  409283:	mov    QWORD PTR [rip+0x9e16],rsi        # 0x4130a0
  40928a:	mov    QWORD PTR [rip+0x9e1f],rax        # 0x4130b0
  409291:	add    rsp,0x40
  409295:	pop    rbx
  409296:	pop    rsi
  409297:	pop    rdi
  409298:	pop    rbp
  409299:	pop    r12
  40929b:	ret    
  40929c:	nop    DWORD PTR [rax+0x0]
  4092a0:	movabs rax,0xffffd466d2205dcc
  4092aa:	movabs rsi,0x2b992ddfa233
  4092b4:	jmp    0x409283
  4092b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4092c0:	push   rbp
  4092c1:	push   rsi
  4092c2:	push   rbx
  4092c3:	mov    rbp,rsp
  4092c6:	sub    rsp,0x70
  4092ca:	mov    rsi,rcx
  4092cd:	lea    rcx,[rip+0x1e06c]        # 0x427340
  4092d4:	call   QWORD PTR [rip+0x1f0c2]        # 0x42839c
  4092da:	mov    rbx,QWORD PTR [rip+0x1e157]        # 0x427438
  4092e1:	xor    r8d,r8d
  4092e4:	lea    rdx,[rbp-0x28]
  4092e8:	mov    rcx,rbx
  4092eb:	call   QWORD PTR [rip+0x1f0b3]        # 0x4283a4
  4092f1:	test   rax,rax
  4092f4:	mov    r9,rax
  4092f7:	je     0x4093a0
  4092fd:	lea    rax,[rbp-0x20]
  409301:	mov    QWORD PTR [rsp+0x38],0x0
  40930a:	mov    r8,rbx
  40930d:	mov    rdx,QWORD PTR [rbp-0x28]
  409311:	xor    ecx,ecx
  409313:	mov    QWORD PTR [rsp+0x30],rax
  409318:	lea    rax,[rbp-0x18]
  40931c:	mov    QWORD PTR [rsp+0x28],rax
  409321:	lea    rax,[rip+0x1e018]        # 0x427340
  409328:	mov    QWORD PTR [rsp+0x20],rax
  40932d:	call   QWORD PTR [rip+0x1f079]        # 0x4283ac
  409333:	mov    rax,QWORD PTR [rip+0x1e0fe]        # 0x427438
  40933a:	xor    ecx,ecx
  40933c:	mov    QWORD PTR [rip+0x1e07d],rsi        # 0x4273c0
  409343:	mov    DWORD PTR [rip+0x1e4f3],0xc0000409        # 0x427840
  40934d:	mov    DWORD PTR [rip+0x1e4ed],0x1        # 0x427844
  409357:	mov    QWORD PTR [rip+0x1e4f2],rax        # 0x427850
  40935e:	mov    rax,QWORD PTR [rip+0x9d3b]        # 0x4130a0
  409365:	mov    QWORD PTR [rbp-0x10],rax
  409369:	mov    rax,QWORD PTR [rip+0x9d40]        # 0x4130b0
  409370:	mov    QWORD PTR [rbp-0x8],rax
  409374:	call   QWORD PTR [rip+0x1f03a]        # 0x4283b4
  40937a:	lea    rcx,[rip+0x1a3df]        # 0x423760
  409381:	call   QWORD PTR [rip+0x1f04d]        # 0x4283d4
  409387:	call   QWORD PTR [rip+0x1efb7]        # 0x428344
  40938d:	mov    edx,0xc0000409
  409392:	mov    rcx,rax
  409395:	call   QWORD PTR [rip+0x1f029]        # 0x4283c4
  40939b:	call   0x40a948
  4093a0:	mov    rax,QWORD PTR [rbp+0x18]
  4093a4:	mov    QWORD PTR [rip+0x1e08d],rax        # 0x427438
  4093ab:	lea    rax,[rbp+0x8]
  4093af:	mov    QWORD PTR [rip+0x1e022],rax        # 0x4273d8
  4093b6:	jmp    0x409333
  4093bb:	nop
  4093bc:	nop
  4093bd:	nop
  4093be:	nop
  4093bf:	nop
  4093c0:	sub    rsp,0x28
  4093c4:	test   edx,edx
  4093c6:	je     0x4093e0
  4093c8:	cmp    edx,0x3
  4093cb:	je     0x4093e0
  4093cd:	mov    eax,0x1
  4093d2:	add    rsp,0x28
  4093d6:	ret    
  4093d7:	nop    WORD PTR [rax+rax*1+0x0]
  4093e0:	call   0x40a0d0
  4093e5:	mov    eax,0x1
  4093ea:	add    rsp,0x28
  4093ee:	ret    
  4093ef:	nop
  4093f0:	push   rsi
  4093f1:	push   rbx
  4093f2:	sub    rsp,0x28
  4093f6:	mov    rax,QWORD PTR [rip+0x1a5e3]        # 0x4239e0
  4093fd:	cmp    DWORD PTR [rax],0x2
  409400:	je     0x409408
  409402:	mov    DWORD PTR [rax],0x2
  409408:	cmp    edx,0x2
  40940b:	je     0x409420
  40940d:	cmp    edx,0x1
  409410:	je     0x409452
  409412:	mov    eax,0x1
  409417:	add    rsp,0x28
  40941b:	pop    rbx
  40941c:	pop    rsi
  40941d:	ret    
  40941e:	xchg   ax,ax
  409420:	lea    rbx,[rip+0x1fc39]        # 0x429060
  409427:	lea    rsi,[rip+0x1fc32]        # 0x429060
  40942e:	cmp    rbx,rsi
  409431:	je     0x409412
  409433:	mov    rax,QWORD PTR [rbx]
  409436:	test   rax,rax
  409439:	je     0x40943d
  40943b:	call   rax
  40943d:	add    rbx,0x8
  409441:	cmp    rbx,rsi
  409444:	jne    0x409433
  409446:	mov    eax,0x1
  40944b:	add    rsp,0x28
  40944f:	pop    rbx
  409450:	pop    rsi
  409451:	ret    
  409452:	call   0x40a0d0
  409457:	jmp    0x409412
  409459:	nop    DWORD PTR [rax+0x0]
  409460:	xor    eax,eax
  409462:	ret    
  409463:	nop
  409464:	nop
  409465:	nop
  409466:	nop
  409467:	nop
  409468:	nop
  409469:	nop
  40946a:	nop
  40946b:	nop
  40946c:	nop
  40946d:	nop
  40946e:	nop
  40946f:	nop
  409470:	sub    rsp,0x58
  409474:	mov    rax,QWORD PTR [rip+0x1e4a5]        # 0x427920
  40947b:	test   rax,rax
  40947e:	je     0x4094ac
  409480:	movsd  xmm0,QWORD PTR [rsp+0x80]
  409489:	mov    DWORD PTR [rsp+0x20],ecx
  40948d:	lea    rcx,[rsp+0x20]
  409492:	mov    QWORD PTR [rsp+0x28],rdx
  409497:	movsd  QWORD PTR [rsp+0x30],xmm2
  40949d:	movsd  QWORD PTR [rsp+0x38],xmm3
  4094a3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4094a9:	call   rax
  4094ab:	nop
  4094ac:	add    rsp,0x58
  4094b0:	ret    
  4094b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4094b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4094c0:	mov    QWORD PTR [rip+0x1e459],rcx        # 0x427920
  4094c7:	jmp    0x40a990
  4094cc:	nop    DWORD PTR [rax+0x0]
  4094d0:	push   rsi
  4094d1:	push   rbx
  4094d2:	sub    rsp,0x78
  4094d6:	movaps XMMWORD PTR [rsp+0x40],xmm6
  4094db:	movaps XMMWORD PTR [rsp+0x50],xmm7
  4094e0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  4094e6:	cmp    DWORD PTR [rcx],0x6
  4094e9:	ja     0x4095c0
  4094ef:	mov    edx,DWORD PTR [rcx]
  4094f1:	lea    rax,[rip+0x1a3ac]        # 0x4238a4
  4094f8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4094fc:	add    rax,rdx
  4094ff:	jmp    rax
  409501:	lea    rbx,[rip+0x1a278]        # 0x423780
  409508:	nop    DWORD PTR [rax+rax*1+0x0]
  409510:	movsd  xmm8,QWORD PTR [rcx+0x20]
  409516:	mov    rsi,QWORD PTR [rcx+0x8]
  40951a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40951f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  409524:	call   0x40a9a8
  409529:	movsd  QWORD PTR [rsp+0x30],xmm8
  409530:	lea    rcx,[rax+0x60]
  409534:	lea    rdx,[rip+0x1a33d]        # 0x423878
  40953b:	movsd  QWORD PTR [rsp+0x28],xmm7
  409541:	mov    r9,rsi
  409544:	mov    r8,rbx
  409547:	movsd  QWORD PTR [rsp+0x20],xmm6
  40954d:	call   0x40a908
  409552:	nop
  409553:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  409558:	xor    eax,eax
  40955a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  40955f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  409565:	add    rsp,0x78
  409569:	pop    rbx
  40956a:	pop    rsi
  40956b:	ret    
  40956c:	nop    DWORD PTR [rax+0x0]
  409570:	lea    rbx,[rip+0x1a228]        # 0x42379f
  409577:	jmp    0x409510
  409579:	nop    DWORD PTR [rax+0x0]
  409580:	lea    rbx,[rip+0x1a239]        # 0x4237c0
  409587:	jmp    0x409510
  409589:	nop    DWORD PTR [rax+0x0]
  409590:	lea    rbx,[rip+0x1a299]        # 0x423830
  409597:	jmp    0x409510
  40959c:	nop    DWORD PTR [rax+0x0]
  4095a0:	lea    rbx,[rip+0x1a261]        # 0x423808
  4095a7:	jmp    0x409510
  4095ac:	nop    DWORD PTR [rax+0x0]
  4095b0:	lea    rbx,[rip+0x1a229]        # 0x4237e0
  4095b7:	jmp    0x409510
  4095bc:	nop    DWORD PTR [rax+0x0]
  4095c0:	lea    rbx,[rip+0x1a29f]        # 0x423866
  4095c7:	jmp    0x409510
  4095cc:	nop
  4095cd:	nop
  4095ce:	nop
  4095cf:	nop
  4095d0:	fninit 
  4095d2:	ret    
  4095d3:	nop
  4095d4:	nop
  4095d5:	nop
  4095d6:	nop
  4095d7:	nop
  4095d8:	nop
  4095d9:	nop
  4095da:	nop
  4095db:	nop
  4095dc:	nop
  4095dd:	nop
  4095de:	nop
  4095df:	nop
  4095e0:	mov    rax,rcx
  4095e3:	ret    
  4095e4:	xchg   ax,ax
  4095e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4095f0:	mov    rax,rcx
  4095f3:	ret    
  4095f4:	nop
  4095f5:	nop
  4095f6:	nop
  4095f7:	nop
  4095f8:	nop
  4095f9:	nop
  4095fa:	nop
  4095fb:	nop
  4095fc:	nop
  4095fd:	nop
  4095fe:	nop
  4095ff:	nop
  409600:	push   rsi
  409601:	push   rbx
  409602:	sub    rsp,0x38
  409606:	lea    rax,[rsp+0x58]
  40960b:	mov    rbx,rcx
  40960e:	mov    QWORD PTR [rsp+0x58],rdx
  409613:	mov    QWORD PTR [rsp+0x60],r8
  409618:	mov    QWORD PTR [rsp+0x68],r9
  40961d:	mov    QWORD PTR [rsp+0x28],rax
  409622:	call   0x40a9a8
  409627:	lea    rcx,[rip+0x1a292]        # 0x4238c0
  40962e:	lea    r9,[rax+0x60]
  409632:	mov    r8d,0x1b
  409638:	mov    edx,0x1
  40963d:	call   0x40a8e0
  409642:	mov    rsi,QWORD PTR [rsp+0x28]
  409647:	call   0x40a9a8
  40964c:	lea    rcx,[rax+0x60]
  409650:	mov    rdx,rbx
  409653:	mov    r8,rsi
  409656:	call   0x40a800
  40965b:	call   0x40a948
  409660:	nop
  409661:	nop    DWORD PTR [rax+rax*1+0x0]
  409666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409670:	push   r13
  409672:	push   r12
  409674:	push   rbp
  409675:	push   rdi
  409676:	push   rsi
  409677:	push   rbx
  409678:	sub    rsp,0x58
  40967c:	movsxd rbp,DWORD PTR [rip+0x1e2c1]        # 0x427944
  409683:	mov    rbx,rcx
  409686:	mov    rsi,rdx
  409689:	mov    rdi,r8
  40968c:	test   ebp,ebp
  40968e:	jle    0x40978a
  409694:	mov    rax,QWORD PTR [rip+0x1e2ad]        # 0x427948
  40969b:	xor    r9d,r9d
  40969e:	add    rax,0x8
  4096a2:	mov    r10,QWORD PTR [rax]
  4096a5:	cmp    rbx,r10
  4096a8:	jb     0x4096be
  4096aa:	mov    rdx,QWORD PTR [rax+0x8]
  4096ae:	mov    r11d,DWORD PTR [rdx+0x8]
  4096b2:	add    r10,r11
  4096b5:	cmp    rbx,r10
  4096b8:	jb     0x409770
  4096be:	add    r9d,0x1
  4096c2:	add    rax,0x18
  4096c6:	cmp    r9d,ebp
  4096c9:	jne    0x4096a2
  4096cb:	mov    rcx,rbx
  4096ce:	call   0x40a2e0
  4096d3:	test   rax,rax
  4096d6:	mov    r12,rax
  4096d9:	je     0x4097c2
  4096df:	lea    rbp,[rbp+rbp*2+0x0]
  4096e4:	shl    rbp,0x3
  4096e8:	mov    r13,rbp
  4096eb:	add    r13,QWORD PTR [rip+0x1e256]        # 0x427948
  4096f2:	mov    QWORD PTR [r13+0x10],rax
  4096f6:	mov    DWORD PTR [r13+0x0],0x0
  4096fe:	call   0x40a400
  409703:	mov    edx,DWORD PTR [r12+0xc]
  409708:	mov    r8d,0x30
  40970e:	add    rax,rdx
  409711:	lea    rdx,[rsp+0x20]
  409716:	mov    QWORD PTR [r13+0x8],rax
  40971a:	mov    rax,QWORD PTR [rip+0x1e227]        # 0x427948
  409721:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  409726:	call   QWORD PTR [rip+0x1ecb8]        # 0x4283e4
  40972c:	test   rax,rax
  40972f:	je     0x4097a5
  409731:	mov    eax,DWORD PTR [rsp+0x44]
  409735:	lea    edx,[rax-0x4]
  409738:	and    edx,0xfffffffb
  40973b:	je     0x409769
  40973d:	sub    eax,0x40
  409740:	and    eax,0xffffffbf
  409743:	je     0x409769
  409745:	mov    r9,rbp
  409748:	add    r9,QWORD PTR [rip+0x1e1f9]        # 0x427948
  40974f:	mov    r8d,0x40
  409755:	mov    rdx,QWORD PTR [rsp+0x38]
  40975a:	mov    rcx,QWORD PTR [rsp+0x20]
  40975f:	call   QWORD PTR [rip+0x1ec77]        # 0x4283dc
  409765:	test   eax,eax
  409767:	je     0x409791
  409769:	add    DWORD PTR [rip+0x1e1d4],0x1        # 0x427944
  409770:	mov    r8,rdi
  409773:	mov    rdx,rsi
  409776:	mov    rcx,rbx
  409779:	add    rsp,0x58
  40977d:	pop    rbx
  40977e:	pop    rsi
  40977f:	pop    rdi
  409780:	pop    rbp
  409781:	pop    r12
  409783:	pop    r13
  409785:	jmp    0x40a870
  40978a:	xor    ebp,ebp
  40978c:	jmp    0x4096cb
  409791:	call   QWORD PTR [rip+0x1ebc5]        # 0x42835c
  409797:	lea    rcx,[rip+0x1a19a]        # 0x423938
  40979e:	mov    edx,eax
  4097a0:	call   0x409600
  4097a5:	mov    rax,QWORD PTR [rip+0x1e19c]        # 0x427948
  4097ac:	mov    edx,DWORD PTR [r12+0x8]
  4097b1:	lea    rcx,[rip+0x1a148]        # 0x423900
  4097b8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  4097bd:	call   0x409600
  4097c2:	lea    rcx,[rip+0x1a117]        # 0x4238e0
  4097c9:	mov    rdx,rbx
  4097cc:	call   0x409600
  4097d1:	nop
  4097d2:	nop    DWORD PTR [rax+0x0]
  4097d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4097e0:	push   rbp
  4097e1:	push   r14
  4097e3:	push   r13
  4097e5:	push   r12
  4097e7:	push   rdi
  4097e8:	push   rsi
  4097e9:	push   rbx
  4097ea:	mov    rbp,rsp
  4097ed:	sub    rsp,0x60
  4097f1:	mov    ebx,DWORD PTR [rip+0x1e149]        # 0x427940
  4097f7:	test   ebx,ebx
  4097f9:	je     0x409810
  4097fb:	mov    rsp,rbp
  4097fe:	pop    rbx
  4097ff:	pop    rsi
  409800:	pop    rdi
  409801:	pop    r12
  409803:	pop    r13
  409805:	pop    r14
  409807:	pop    rbp
  409808:	ret    
  409809:	nop    DWORD PTR [rax+0x0]
  409810:	mov    DWORD PTR [rip+0x1e126],0x1        # 0x427940
  40981a:	call   0x40a330
  40981f:	cdqe   
  409821:	lea    rax,[rax+rax*2]
  409825:	lea    rax,[rax*8+0x1e]
  40982d:	and    rax,0xfffffffffffffff0
  409831:	call   0x40a550
  409836:	mov    rsi,QWORD PTR [rip+0x1a1d3]        # 0x423a10
  40983d:	mov    rbx,QWORD PTR [rip+0x1a1dc]        # 0x423a20
  409844:	sub    rsp,rax
  409847:	mov    DWORD PTR [rip+0x1e0f3],0x0        # 0x427944
  409851:	lea    rax,[rsp+0x20]
  409856:	mov    QWORD PTR [rip+0x1e0eb],rax        # 0x427948
  40985d:	mov    rax,rsi
  409860:	sub    rax,rbx
  409863:	cmp    rax,0x7
  409867:	jle    0x4097fb
  409869:	cmp    rax,0xb
  40986d:	jle    0x409895
  40986f:	mov    r11d,DWORD PTR [rbx]
  409872:	test   r11d,r11d
  409875:	jne    0x4099c0
  40987b:	mov    r10d,DWORD PTR [rbx+0x4]
  40987f:	test   r10d,r10d
  409882:	jne    0x4099c0
  409888:	mov    r9d,DWORD PTR [rbx+0x8]
  40988c:	test   r9d,r9d
  40988f:	jne    0x4098ac
  409891:	add    rbx,0xc
  409895:	mov    r8d,DWORD PTR [rbx]
  409898:	test   r8d,r8d
  40989b:	jne    0x4099c0
  4098a1:	mov    ecx,DWORD PTR [rbx+0x4]
  4098a4:	test   ecx,ecx
  4098a6:	jne    0x4099c0
  4098ac:	mov    edx,DWORD PTR [rbx+0x8]
  4098af:	cmp    edx,0x1
  4098b2:	jne    0x409acc
  4098b8:	add    rbx,0xc
  4098bc:	cmp    rbx,rsi
  4098bf:	jae    0x4097fb
  4098c5:	mov    r12,QWORD PTR [rip+0x1a174]        # 0x423a40
  4098cc:	lea    r13,[rbp-0x30]
  4098d0:	movabs r14,0xffffffff00000000
  4098da:	mov    ecx,DWORD PTR [rbx+0x4]
  4098dd:	mov    eax,DWORD PTR [rbx]
  4098df:	movzx  edx,BYTE PTR [rbx+0x8]
  4098e3:	add    rax,r12
  4098e6:	add    rcx,r12
  4098e9:	cmp    edx,0x10
  4098ec:	mov    r8,QWORD PTR [rax]
  4098ef:	je     0x409a36
  4098f5:	jbe    0x4099fd
  4098fb:	cmp    edx,0x20
  4098fe:	je     0x409a7f
  409904:	cmp    edx,0x40
  409907:	jne    0x409a6b
  40990d:	sub    r8,rax
  409910:	mov    rdx,r13
  409913:	mov    rdi,r13
  409916:	mov    rax,r8
  409919:	add    rax,QWORD PTR [rcx]
  40991c:	mov    r8d,0x8
  409922:	mov    QWORD PTR [rbp-0x30],rax
  409926:	call   0x409670
  40992b:	add    rbx,0xc
  40992f:	cmp    rbx,rsi
  409932:	jb     0x4098da
  409934:	mov    eax,DWORD PTR [rip+0x1e00a]        # 0x427944
  40993a:	xor    ebx,ebx
  40993c:	xor    esi,esi
  40993e:	test   eax,eax
  409940:	jle    0x4097fb
  409946:	mov    r14,QWORD PTR [rip+0x1ea97]        # 0x4283e4
  40994d:	lea    r13,[rbp-0x34]
  409951:	mov    r12,QWORD PTR [rip+0x1ea84]        # 0x4283dc
  409958:	jmp    0x409973
  40995a:	nop    WORD PTR [rax+rax*1+0x0]
  409960:	add    esi,0x1
  409963:	add    rbx,0x18
  409967:	cmp    esi,DWORD PTR [rip+0x1dfd7]        # 0x427944
  40996d:	jge    0x4097fb
  409973:	mov    rax,rbx
  409976:	add    rax,QWORD PTR [rip+0x1dfcb]        # 0x427948
  40997d:	mov    edx,DWORD PTR [rax]
  40997f:	test   edx,edx
  409981:	je     0x409960
  409983:	mov    rcx,QWORD PTR [rax+0x8]
  409987:	mov    r8d,0x30
  40998d:	mov    rdx,rdi
  409990:	call   r14
  409993:	test   rax,rax
  409996:	je     0x409aae
  40999c:	mov    rax,QWORD PTR [rip+0x1dfa5]        # 0x427948
  4099a3:	mov    r9,r13
  4099a6:	mov    rdx,QWORD PTR [rbp-0x18]
  4099aa:	mov    rcx,QWORD PTR [rbp-0x30]
  4099ae:	mov    r8d,DWORD PTR [rax+rbx*1]
  4099b2:	call   r12
  4099b5:	jmp    0x409960
  4099b7:	nop    WORD PTR [rax+rax*1+0x0]
  4099c0:	cmp    rbx,rsi
  4099c3:	jae    0x4097fb
  4099c9:	mov    r12,QWORD PTR [rip+0x1a070]        # 0x423a40
  4099d0:	lea    rdi,[rbp-0x30]
  4099d4:	mov    ecx,DWORD PTR [rbx+0x4]
  4099d7:	mov    eax,DWORD PTR [rbx]
  4099d9:	mov    r8d,0x4
  4099df:	mov    rdx,rdi
  4099e2:	add    rbx,0x8
  4099e6:	add    rcx,r12
  4099e9:	add    eax,DWORD PTR [rcx]
  4099eb:	mov    DWORD PTR [rbp-0x30],eax
  4099ee:	call   0x409670
  4099f3:	cmp    rbx,rsi
  4099f6:	jb     0x4099d4
  4099f8:	jmp    0x409934
  4099fd:	cmp    edx,0x8
  409a00:	jne    0x409a6b
  409a02:	movzx  edx,BYTE PTR [rcx]
  409a05:	mov    rdi,r13
  409a08:	mov    r10,rdx
  409a0b:	or     r10,0xffffffffffffff00
  409a12:	test   dl,dl
  409a14:	cmovs  rdx,r10
  409a18:	sub    rdx,rax
  409a1b:	lea    rax,[r8+rdx*1]
  409a1f:	mov    r8d,0x1
  409a25:	mov    rdx,r13
  409a28:	mov    QWORD PTR [rbp-0x30],rax
  409a2c:	call   0x409670
  409a31:	jmp    0x40992b
  409a36:	movzx  edx,WORD PTR [rcx]
  409a39:	mov    rdi,r13
  409a3c:	mov    r10,rdx
  409a3f:	or     r10,0xffffffffffff0000
  409a46:	test   dx,dx
  409a49:	cmovs  rdx,r10
  409a4d:	sub    rdx,rax
  409a50:	lea    rax,[r8+rdx*1]
  409a54:	mov    r8d,0x2
  409a5a:	mov    rdx,r13
  409a5d:	mov    QWORD PTR [rbp-0x30],rax
  409a61:	call   0x409670
  409a66:	jmp    0x40992b
  409a6b:	lea    rcx,[rip+0x19f26]        # 0x423998
  409a72:	mov    QWORD PTR [rbp-0x30],0x0
  409a7a:	call   0x409600
  409a7f:	mov    edx,DWORD PTR [rcx]
  409a81:	mov    rdi,r13
  409a84:	mov    r10,rdx
  409a87:	or     r10,r14
  409a8a:	test   edx,edx
  409a8c:	cmovs  rdx,r10
  409a90:	sub    rdx,rax
  409a93:	lea    rax,[r8+rdx*1]
  409a97:	mov    r8d,0x4
  409a9d:	mov    rdx,r13
  409aa0:	mov    QWORD PTR [rbp-0x30],rax
  409aa4:	call   0x409670
  409aa9:	jmp    0x40992b
  409aae:	add    rbx,QWORD PTR [rip+0x1de93]        # 0x427948
  409ab5:	lea    rcx,[rip+0x19e44]        # 0x423900
  409abc:	mov    rax,QWORD PTR [rbx+0x10]
  409ac0:	mov    r8,QWORD PTR [rbx+0x8]
  409ac4:	mov    edx,DWORD PTR [rax+0x8]
  409ac7:	call   0x409600
  409acc:	lea    rcx,[rip+0x19e8d]        # 0x423960
  409ad3:	call   0x409600
  409ad8:	nop
  409ad9:	nop
  409ada:	nop
  409adb:	nop
  409adc:	nop
  409add:	nop
  409ade:	nop
  409adf:	nop
  409ae0:	sub    rsp,0x28
  409ae4:	mov    eax,DWORD PTR [rcx]
  409ae6:	cmp    eax,0xc0000091
  409aeb:	ja     0x409b50
  409aed:	cmp    eax,0xc000008d
  409af2:	jae    0x409b6f
  409af4:	cmp    eax,0xc0000008
  409af9:	je     0x409c10
  409aff:	ja     0x409be0
  409b05:	cmp    eax,0x80000002
  409b0a:	je     0x409c10
  409b10:	cmp    eax,0xc0000005
  409b15:	jne    0x409bee
  409b1b:	xor    edx,edx
  409b1d:	mov    ecx,0xb
  409b22:	call   0x40a850
  409b27:	cmp    rax,0x1
  409b2b:	je     0x409c70
  409b31:	test   rax,rax
  409b34:	je     0x409c50
  409b3a:	mov    ecx,0xb
  409b3f:	call   rax
  409b41:	xor    eax,eax
  409b43:	add    rsp,0x28
  409b47:	ret    
  409b48:	nop    DWORD PTR [rax+rax*1+0x0]
  409b50:	cmp    eax,0xc0000094
  409b55:	je     0x409c20
  409b5b:	ja     0x409ba0
  409b5d:	cmp    eax,0xc0000092
  409b62:	je     0x409c10
  409b68:	cmp    eax,0xc0000093
  409b6d:	jne    0x409bee
  409b6f:	xor    edx,edx
  409b71:	mov    ecx,0x8
  409b76:	call   0x40a850
  409b7b:	cmp    rax,0x1
  409b7f:	mov    rdx,rax
  409b82:	je     0x409bf8
  409b84:	test   rdx,rdx
  409b87:	mov    eax,0x1
  409b8c:	je     0x409b43
  409b8e:	mov    ecx,0x8
  409b93:	call   rdx
  409b95:	xor    eax,eax
  409b97:	add    rsp,0x28
  409b9b:	ret    
  409b9c:	nop    DWORD PTR [rax+0x0]
  409ba0:	cmp    eax,0xc0000095
  409ba5:	je     0x409c10
  409ba7:	cmp    eax,0xc0000096
  409bac:	jne    0x409bee
  409bae:	xor    edx,edx
  409bb0:	mov    ecx,0x4
  409bb5:	call   0x40a850
  409bba:	cmp    rax,0x1
  409bbe:	je     0x409c5a
  409bc4:	test   rax,rax
  409bc7:	je     0x409c50
  409bcd:	mov    ecx,0x4
  409bd2:	call   rax
  409bd4:	xor    eax,eax
  409bd6:	jmp    0x409b43
  409bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  409be0:	cmp    eax,0xc000001d
  409be5:	je     0x409bae
  409be7:	cmp    eax,0xc000008c
  409bec:	je     0x409c10
  409bee:	mov    eax,0x1
  409bf3:	add    rsp,0x28
  409bf7:	ret    
  409bf8:	mov    edx,0x1
  409bfd:	mov    ecx,0x8
  409c02:	call   0x40a850
  409c07:	call   0x4095d0
  409c0c:	nop    DWORD PTR [rax+0x0]
  409c10:	xor    eax,eax
  409c12:	add    rsp,0x28
  409c16:	ret    
  409c17:	nop    WORD PTR [rax+rax*1+0x0]
  409c20:	xor    edx,edx
  409c22:	mov    ecx,0x8
  409c27:	call   0x40a850
  409c2c:	cmp    rax,0x1
  409c30:	mov    rdx,rax
  409c33:	jne    0x409b84
  409c39:	mov    edx,0x1
  409c3e:	mov    ecx,0x8
  409c43:	call   0x40a850
  409c48:	xor    eax,eax
  409c4a:	jmp    0x409b43
  409c4f:	nop
  409c50:	mov    eax,0x4
  409c55:	add    rsp,0x28
  409c59:	ret    
  409c5a:	mov    edx,0x1
  409c5f:	mov    ecx,0x4
  409c64:	call   0x40a850
  409c69:	xor    eax,eax
  409c6b:	jmp    0x409b43
  409c70:	mov    edx,0x1
  409c75:	mov    ecx,0xb
  409c7a:	call   0x40a850
  409c7f:	xor    eax,eax
  409c81:	jmp    0x409b43
  409c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c90:	push   r12
  409c92:	push   rbp
  409c93:	push   rdi
  409c94:	push   rsi
  409c95:	push   rbx
  409c96:	sub    rsp,0x20
  409c9a:	call   0x40a400
  409c9f:	mov    rbp,rax
  409ca2:	mov    eax,DWORD PTR [rip+0x1dce0]        # 0x427988
  409ca8:	test   eax,eax
  409caa:	jne    0x409cd1
  409cac:	test   rbp,rbp
  409caf:	je     0x409cd1
  409cb1:	lea    rcx,[rip+0x19d18]        # 0x4239d0
  409cb8:	mov    DWORD PTR [rip+0x1dcc6],0x1        # 0x427988
  409cc2:	call   0x40a240
  409cc7:	test   rax,rax
  409cca:	je     0x409ce0
  409ccc:	mov    eax,0x1
  409cd1:	add    rsp,0x20
  409cd5:	pop    rbx
  409cd6:	pop    rsi
  409cd7:	pop    rdi
  409cd8:	pop    rbp
  409cd9:	pop    r12
  409cdb:	ret    
  409cdc:	nop    DWORD PTR [rax+0x0]
  409ce0:	lea    rbx,[rip+0x1ddd9]        # 0x427ac0
  409ce7:	mov    ecx,0x30
  409cec:	lea    rdx,[rip+0x1dccd]        # 0x4279c0
  409cf3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x409ae0
  409cfa:	xor    esi,esi
  409cfc:	mov    rdi,rbx
  409cff:	rep stos QWORD PTR es:[rdi],rax
  409d02:	mov    rdi,rdx
  409d05:	sub    r12,rbp
  409d08:	mov    cl,0x20
  409d0a:	rep stos QWORD PTR es:[rdi],rax
  409d0d:	mov    rdi,rdx
  409d10:	jmp    0x409d40
  409d12:	mov    BYTE PTR [rdi],0x9
  409d15:	mov    DWORD PTR [rdi+0x4],r12d
  409d19:	add    rsi,0x1
  409d1d:	mov    edx,DWORD PTR [rax+0xc]
  409d20:	add    rbx,0xc
  409d24:	mov    DWORD PTR [rbx-0xc],edx
  409d27:	add    edx,DWORD PTR [rax+0x8]
  409d2a:	mov    rax,rdi
  409d2d:	sub    rax,rbp
  409d30:	add    rdi,0x8
  409d34:	mov    DWORD PTR [rbx-0x4],eax
  409d37:	mov    DWORD PTR [rbx-0x8],edx
  409d3a:	cmp    rsi,0x20
  409d3e:	je     0x409d75
  409d40:	mov    rcx,rsi
  409d43:	call   0x40a370
  409d48:	test   rax,rax
  409d4b:	jne    0x409d12
  409d4d:	test   rsi,rsi
  409d50:	je     0x409ccc
  409d56:	mov    edx,esi
  409d58:	nop    DWORD PTR [rax+rax*1+0x0]
  409d60:	mov    r8,rbp
  409d63:	lea    rcx,[rip+0x1dd56]        # 0x427ac0
  409d6a:	call   QWORD PTR [rip+0x1e624]        # 0x428394
  409d70:	jmp    0x409ccc
  409d75:	mov    edx,0x20
  409d7a:	jmp    0x409d60
  409d7c:	nop    DWORD PTR [rax+0x0]
  409d80:	push   rbx
  409d81:	sub    rsp,0x20
  409d85:	mov    rdx,QWORD PTR [rcx]
  409d88:	mov    eax,DWORD PTR [rdx]
  409d8a:	mov    r8d,eax
  409d8d:	and    r8d,0x20ffffff
  409d94:	cmp    r8d,0x20474343
  409d9b:	je     0x409ea0
  409da1:	cmp    eax,0xc0000091
  409da6:	mov    rbx,rcx
  409da9:	ja     0x409e30
  409daf:	cmp    eax,0xc000008d
  409db4:	jae    0x409e47
  409dba:	cmp    eax,0xc0000008
  409dbf:	je     0x409df3
  409dc1:	ja     0x409e00
  409dc3:	cmp    eax,0x80000002
  409dc8:	je     0x409df3
  409dca:	cmp    eax,0xc0000005
  409dcf:	jne    0x409e12
  409dd1:	xor    edx,edx
  409dd3:	mov    ecx,0xb
  409dd8:	call   0x40a850
  409ddd:	cmp    rax,0x1
  409de1:	je     0x409f10
  409de7:	test   rax,rax
  409dea:	je     0x409e12
  409dec:	mov    ecx,0xb
  409df1:	call   rax
  409df3:	mov    eax,0xffffffff
  409df8:	add    rsp,0x20
  409dfc:	pop    rbx
  409dfd:	ret    
  409dfe:	xchg   ax,ax
  409e00:	cmp    eax,0xc000001d
  409e05:	je     0x409ec6
  409e0b:	cmp    eax,0xc000008c
  409e10:	je     0x409df3
  409e12:	mov    rax,QWORD PTR [rip+0x1db67]        # 0x427980
  409e19:	test   rax,rax
  409e1c:	je     0x409df8
  409e1e:	mov    rcx,rbx
  409e21:	add    rsp,0x20
  409e25:	pop    rbx
  409e26:	rex.W jmp rax
  409e29:	nop    DWORD PTR [rax+0x0]
  409e30:	cmp    eax,0xc0000094
  409e35:	je     0x409e72
  409e37:	ja     0x409eb0
  409e39:	cmp    eax,0xc0000092
  409e3e:	je     0x409df3
  409e40:	cmp    eax,0xc0000093
  409e45:	jne    0x409e12
  409e47:	xor    edx,edx
  409e49:	mov    ecx,0x8
  409e4e:	call   0x40a850
  409e53:	cmp    rax,0x1
  409e57:	jne    0x409e84
  409e59:	mov    edx,0x1
  409e5e:	mov    ecx,0x8
  409e63:	call   0x40a850
  409e68:	call   0x4095d0
  409e6d:	jmp    0x409df3
  409e72:	xor    edx,edx
  409e74:	mov    ecx,0x8
  409e79:	call   0x40a850
  409e7e:	cmp    rax,0x1
  409e82:	je     0x409ef2
  409e84:	test   rax,rax
  409e87:	je     0x409e12
  409e89:	mov    ecx,0x8
  409e8e:	call   rax
  409e90:	mov    eax,0xffffffff
  409e95:	jmp    0x409df8
  409e9a:	nop    WORD PTR [rax+rax*1+0x0]
  409ea0:	test   BYTE PTR [rdx+0x4],0x1
  409ea4:	jne    0x409da1
  409eaa:	jmp    0x409df3
  409eaf:	nop
  409eb0:	cmp    eax,0xc0000095
  409eb5:	je     0x409df3
  409ebb:	cmp    eax,0xc0000096
  409ec0:	jne    0x409e12
  409ec6:	xor    edx,edx
  409ec8:	mov    ecx,0x4
  409ecd:	call   0x40a850
  409ed2:	cmp    rax,0x1
  409ed6:	je     0x409f24
  409ed8:	test   rax,rax
  409edb:	je     0x409e12
  409ee1:	mov    ecx,0x4
  409ee6:	call   rax
  409ee8:	mov    eax,0xffffffff
  409eed:	jmp    0x409df8
  409ef2:	mov    edx,0x1
  409ef7:	mov    ecx,0x8
  409efc:	call   0x40a850
  409f01:	jmp    0x409df3
  409f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f10:	mov    edx,0x1
  409f15:	mov    ecx,0xb
  409f1a:	call   0x40a850
  409f1f:	jmp    0x409df3
  409f24:	mov    edx,0x1
  409f29:	mov    ecx,0x4
  409f2e:	call   0x40a850
  409f33:	jmp    0x409df3
  409f38:	nop
  409f39:	nop
  409f3a:	nop
  409f3b:	nop
  409f3c:	nop
  409f3d:	nop
  409f3e:	nop
  409f3f:	nop
  409f40:	push   rbp
  409f41:	push   rdi
  409f42:	push   rsi
  409f43:	push   rbx
  409f44:	sub    rsp,0x28
  409f48:	lea    rcx,[rip+0x1dd11]        # 0x427c60
  409f4f:	call   QWORD PTR [rip+0x1e3e7]        # 0x42833c
  409f55:	mov    rbx,QWORD PTR [rip+0x1dce4]        # 0x427c40
  409f5c:	test   rbx,rbx
  409f5f:	je     0x409f94
  409f61:	mov    rbp,QWORD PTR [rip+0x1e464]        # 0x4283cc
  409f68:	mov    rdi,QWORD PTR [rip+0x1e3ed]        # 0x42835c
  409f6f:	nop
  409f70:	mov    ecx,DWORD PTR [rbx]
  409f72:	call   rbp
  409f74:	mov    rsi,rax
  409f77:	call   rdi
  409f79:	test   eax,eax
  409f7b:	jne    0x409f8b
  409f7d:	test   rsi,rsi
  409f80:	je     0x409f8b
  409f82:	mov    rax,QWORD PTR [rbx+0x8]
  409f86:	mov    rcx,rsi
  409f89:	call   rax
  409f8b:	mov    rbx,QWORD PTR [rbx+0x10]
  409f8f:	test   rbx,rbx
  409f92:	jne    0x409f70
  409f94:	mov    rax,QWORD PTR [rip+0x1e3e9]        # 0x428384
  409f9b:	lea    rcx,[rip+0x1dcbe]        # 0x427c60
  409fa2:	add    rsp,0x28
  409fa6:	pop    rbx
  409fa7:	pop    rsi
  409fa8:	pop    rdi
  409fa9:	pop    rbp
  409faa:	rex.W jmp rax
  409fad:	nop    DWORD PTR [rax]
  409fb0:	push   rdi
  409fb1:	push   rsi
  409fb2:	push   rbx
  409fb3:	sub    rsp,0x20
  409fb7:	mov    eax,DWORD PTR [rip+0x1dc8b]        # 0x427c48
  409fbd:	test   eax,eax
  409fbf:	jne    0x409fd0
  409fc1:	add    rsp,0x20
  409fc5:	pop    rbx
  409fc6:	pop    rsi
  409fc7:	pop    rdi
  409fc8:	ret    
  409fc9:	nop    DWORD PTR [rax+0x0]
  409fd0:	mov    rsi,rdx
  409fd3:	mov    edi,ecx
  409fd5:	mov    edx,0x18
  409fda:	mov    ecx,0x1
  409fdf:	call   0x40a938
  409fe4:	test   rax,rax
  409fe7:	mov    rbx,rax
  409fea:	je     0x40a028
  409fec:	mov    DWORD PTR [rax],edi
  409fee:	mov    QWORD PTR [rax+0x8],rsi
  409ff2:	lea    rcx,[rip+0x1dc67]        # 0x427c60
  409ff9:	call   QWORD PTR [rip+0x1e33d]        # 0x42833c
  409fff:	mov    rax,QWORD PTR [rip+0x1dc3a]        # 0x427c40
  40a006:	lea    rcx,[rip+0x1dc53]        # 0x427c60
  40a00d:	mov    QWORD PTR [rip+0x1dc2c],rbx        # 0x427c40
  40a014:	mov    QWORD PTR [rbx+0x10],rax
  40a018:	call   QWORD PTR [rip+0x1e366]        # 0x428384
  40a01e:	xor    eax,eax
  40a020:	add    rsp,0x20
  40a024:	pop    rbx
  40a025:	pop    rsi
  40a026:	pop    rdi
  40a027:	ret    
  40a028:	mov    eax,0xffffffff
  40a02d:	jmp    0x409fc1
  40a02f:	nop
  40a030:	push   rbx
  40a031:	sub    rsp,0x20
  40a035:	mov    eax,DWORD PTR [rip+0x1dc0d]        # 0x427c48
  40a03b:	test   eax,eax
  40a03d:	jne    0x40a050
  40a03f:	xor    eax,eax
  40a041:	add    rsp,0x20
  40a045:	pop    rbx
  40a046:	ret    
  40a047:	nop    WORD PTR [rax+rax*1+0x0]
  40a050:	mov    ebx,ecx
  40a052:	lea    rcx,[rip+0x1dc07]        # 0x427c60
  40a059:	call   QWORD PTR [rip+0x1e2dd]        # 0x42833c
  40a05f:	mov    rdx,QWORD PTR [rip+0x1dbda]        # 0x427c40
  40a066:	test   rdx,rdx
  40a069:	je     0x40a087
  40a06b:	mov    eax,DWORD PTR [rdx]
  40a06d:	cmp    eax,ebx
  40a06f:	jne    0x40a07e
  40a071:	jmp    0x40a0bf
  40a073:	mov    r8d,DWORD PTR [rax]
  40a076:	cmp    r8d,ebx
  40a079:	je     0x40a0a0
  40a07b:	mov    rdx,rax
  40a07e:	mov    rax,QWORD PTR [rdx+0x10]
  40a082:	test   rax,rax
  40a085:	jne    0x40a073
  40a087:	lea    rcx,[rip+0x1dbd2]        # 0x427c60
  40a08e:	call   QWORD PTR [rip+0x1e2f0]        # 0x428384
  40a094:	xor    eax,eax
  40a096:	add    rsp,0x20
  40a09a:	pop    rbx
  40a09b:	ret    
  40a09c:	nop    DWORD PTR [rax+0x0]
  40a0a0:	mov    rcx,rax
  40a0a3:	mov    rax,QWORD PTR [rax+0x10]
  40a0a7:	mov    QWORD PTR [rdx+0x10],rax
  40a0ab:	call   0x40a8f0
  40a0b0:	lea    rcx,[rip+0x1dba9]        # 0x427c60
  40a0b7:	call   QWORD PTR [rip+0x1e2c7]        # 0x428384
  40a0bd:	jmp    0x40a094
  40a0bf:	mov    rax,QWORD PTR [rdx+0x10]
  40a0c3:	mov    rcx,rdx
  40a0c6:	mov    QWORD PTR [rip+0x1db73],rax        # 0x427c40
  40a0cd:	jmp    0x40a0ab
  40a0cf:	nop
  40a0d0:	push   rbx
  40a0d1:	sub    rsp,0x20
  40a0d5:	cmp    edx,0x1
  40a0d8:	je     0x40a170
  40a0de:	jb     0x40a110
  40a0e0:	cmp    edx,0x2
  40a0e3:	je     0x40a100
  40a0e5:	cmp    edx,0x3
  40a0e8:	jne    0x40a105
  40a0ea:	mov    eax,DWORD PTR [rip+0x1db58]        # 0x427c48
  40a0f0:	test   eax,eax
  40a0f2:	je     0x40a105
  40a0f4:	call   0x409f40
  40a0f9:	jmp    0x40a105
  40a0fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a100:	call   0x4095d0
  40a105:	mov    eax,0x1
  40a10a:	add    rsp,0x20
  40a10e:	pop    rbx
  40a10f:	ret    
  40a110:	mov    eax,DWORD PTR [rip+0x1db32]        # 0x427c48
  40a116:	test   eax,eax
  40a118:	jne    0x40a1a0
  40a11e:	mov    eax,DWORD PTR [rip+0x1db24]        # 0x427c48
  40a124:	cmp    eax,0x1
  40a127:	jne    0x40a105
  40a129:	mov    rcx,QWORD PTR [rip+0x1db10]        # 0x427c40
  40a130:	test   rcx,rcx
  40a133:	je     0x40a146
  40a135:	mov    rbx,QWORD PTR [rcx+0x10]
  40a139:	call   0x40a8f0
  40a13e:	test   rbx,rbx
  40a141:	mov    rcx,rbx
  40a144:	jne    0x40a135
  40a146:	lea    rcx,[rip+0x1db13]        # 0x427c60
  40a14d:	mov    QWORD PTR [rip+0x1dae8],0x0        # 0x427c40
  40a158:	mov    DWORD PTR [rip+0x1dae6],0x0        # 0x427c48
  40a162:	call   QWORD PTR [rip+0x1e1cc]        # 0x428334
  40a168:	jmp    0x40a105
  40a16a:	nop    WORD PTR [rax+rax*1+0x0]
  40a170:	mov    eax,DWORD PTR [rip+0x1dad2]        # 0x427c48
  40a176:	test   eax,eax
  40a178:	je     0x40a190
  40a17a:	mov    eax,0x1
  40a17f:	mov    DWORD PTR [rip+0x1dabf],0x1        # 0x427c48
  40a189:	add    rsp,0x20
  40a18d:	pop    rbx
  40a18e:	ret    
  40a18f:	nop
  40a190:	lea    rcx,[rip+0x1dac9]        # 0x427c60
  40a197:	call   QWORD PTR [rip+0x1e1df]        # 0x42837c
  40a19d:	jmp    0x40a17a
  40a19f:	nop
  40a1a0:	call   0x409f40
  40a1a5:	jmp    0x40a11e
  40a1aa:	nop
  40a1ab:	nop
  40a1ac:	nop
  40a1ad:	nop
  40a1ae:	nop
  40a1af:	nop
  40a1b0:	movsxd rax,DWORD PTR [rcx+0x3c]
  40a1b4:	add    rcx,rax
  40a1b7:	xor    eax,eax
  40a1b9:	cmp    DWORD PTR [rcx],0x4550
  40a1bf:	je     0x40a1c3
  40a1c1:	repz ret 
  40a1c3:	xor    eax,eax
  40a1c5:	cmp    WORD PTR [rcx+0x18],0x20b
  40a1cb:	sete   al
  40a1ce:	ret    
  40a1cf:	nop
  40a1d0:	cmp    WORD PTR [rcx],0x5a4d
  40a1d5:	je     0x40a1e0
  40a1d7:	xor    eax,eax
  40a1d9:	ret    
  40a1da:	nop    WORD PTR [rax+rax*1+0x0]
  40a1e0:	jmp    0x40a1b0
  40a1e2:	nop    DWORD PTR [rax+0x0]
  40a1e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a1f0:	movsxd rax,DWORD PTR [rcx+0x3c]
  40a1f4:	add    rcx,rax
  40a1f7:	movzx  eax,WORD PTR [rcx+0x14]
  40a1fb:	lea    rax,[rcx+rax*1+0x18]
  40a200:	movzx  ecx,WORD PTR [rcx+0x6]
  40a204:	test   ecx,ecx
  40a206:	je     0x40a231
  40a208:	sub    ecx,0x1
  40a20b:	lea    rcx,[rcx+rcx*4]
  40a20f:	lea    r9,[rax+rcx*8+0x28]
  40a214:	mov    r8d,DWORD PTR [rax+0xc]
  40a218:	cmp    r8,rdx
  40a21b:	mov    rcx,r8
  40a21e:	ja     0x40a228
  40a220:	add    ecx,DWORD PTR [rax+0x8]
  40a223:	cmp    rdx,rcx
  40a226:	jb     0x40a233
  40a228:	add    rax,0x28
  40a22c:	cmp    rax,r9
  40a22f:	jne    0x40a214
  40a231:	xor    eax,eax
  40a233:	repz ret 
  40a235:	nop
  40a236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a240:	push   rdi
  40a241:	push   rsi
  40a242:	push   rbx
  40a243:	sub    rsp,0x20
  40a247:	mov    rsi,rcx
  40a24a:	call   0x40a820
  40a24f:	cmp    rax,0x8
  40a253:	ja     0x40a270
  40a255:	mov    rbx,QWORD PTR [rip+0x197e4]        # 0x423a40
  40a25c:	xor    edi,edi
  40a25e:	cmp    WORD PTR [rbx],0x5a4d
  40a263:	je     0x40a280
  40a265:	mov    rax,rdi
  40a268:	add    rsp,0x20
  40a26c:	pop    rbx
  40a26d:	pop    rsi
  40a26e:	pop    rdi
  40a26f:	ret    
  40a270:	xor    edi,edi
  40a272:	mov    rax,rdi
  40a275:	add    rsp,0x20
  40a279:	pop    rbx
  40a27a:	pop    rsi
  40a27b:	pop    rdi
  40a27c:	ret    
  40a27d:	nop    DWORD PTR [rax]
  40a280:	mov    rcx,rbx
  40a283:	call   0x40a1b0
  40a288:	test   eax,eax
  40a28a:	je     0x40a265
  40a28c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  40a290:	add    rdx,rbx
  40a293:	movzx  eax,WORD PTR [rdx+0x14]
  40a297:	lea    rbx,[rdx+rax*1+0x18]
  40a29c:	movzx  eax,WORD PTR [rdx+0x6]
  40a2a0:	test   eax,eax
  40a2a2:	je     0x40a265
  40a2a4:	sub    eax,0x1
  40a2a7:	lea    rax,[rax+rax*4]
  40a2ab:	lea    rdi,[rbx+rax*8+0x28]
  40a2b0:	jmp    0x40a2bb
  40a2b2:	add    rbx,0x28
  40a2b6:	cmp    rbx,rdi
  40a2b9:	je     0x40a270
  40a2bb:	mov    r8d,0x8
  40a2c1:	mov    rdx,rsi
  40a2c4:	mov    rcx,rbx
  40a2c7:	call   0x40a818
  40a2cc:	test   eax,eax
  40a2ce:	jne    0x40a2b2
  40a2d0:	mov    rdi,rbx
  40a2d3:	mov    rax,rdi
  40a2d6:	add    rsp,0x20
  40a2da:	pop    rbx
  40a2db:	pop    rsi
  40a2dc:	pop    rdi
  40a2dd:	ret    
  40a2de:	xchg   ax,ax
  40a2e0:	push   rsi
  40a2e1:	push   rbx
  40a2e2:	sub    rsp,0x28
  40a2e6:	mov    rbx,QWORD PTR [rip+0x19753]        # 0x423a40
  40a2ed:	cmp    WORD PTR [rbx],0x5a4d
  40a2f2:	je     0x40a300
  40a2f4:	xor    eax,eax
  40a2f6:	add    rsp,0x28
  40a2fa:	pop    rbx
  40a2fb:	pop    rsi
  40a2fc:	ret    
  40a2fd:	nop    DWORD PTR [rax]
  40a300:	mov    rsi,rcx
  40a303:	mov    rcx,rbx
  40a306:	call   0x40a1b0
  40a30b:	test   eax,eax
  40a30d:	je     0x40a2f4
  40a30f:	sub    rsi,rbx
  40a312:	mov    rcx,rbx
  40a315:	mov    rdx,rsi
  40a318:	add    rsp,0x28
  40a31c:	pop    rbx
  40a31d:	pop    rsi
  40a31e:	jmp    0x40a1f0
  40a323:	nop    DWORD PTR [rax]
  40a326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a330:	push   rbx
  40a331:	sub    rsp,0x20
  40a335:	mov    rbx,QWORD PTR [rip+0x19704]        # 0x423a40
  40a33c:	xor    eax,eax
  40a33e:	cmp    WORD PTR [rbx],0x5a4d
  40a343:	je     0x40a350
  40a345:	add    rsp,0x20
  40a349:	pop    rbx
  40a34a:	ret    
  40a34b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a350:	mov    rcx,rbx
  40a353:	call   0x40a1b0
  40a358:	test   eax,eax
  40a35a:	je     0x40a345
  40a35c:	movsxd rax,DWORD PTR [rbx+0x3c]
  40a360:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  40a365:	add    rsp,0x20
  40a369:	pop    rbx
  40a36a:	ret    
  40a36b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a370:	push   rdi
  40a371:	push   rsi
  40a372:	push   rbx
  40a373:	sub    rsp,0x20
  40a377:	mov    rsi,QWORD PTR [rip+0x196c2]        # 0x423a40
  40a37e:	xor    edi,edi
  40a380:	mov    rbx,rcx
  40a383:	cmp    WORD PTR [rsi],0x5a4d
  40a388:	je     0x40a395
  40a38a:	mov    rax,rdi
  40a38d:	add    rsp,0x20
  40a391:	pop    rbx
  40a392:	pop    rsi
  40a393:	pop    rdi
  40a394:	ret    
  40a395:	mov    rcx,rsi
  40a398:	call   0x40a1b0
  40a39d:	test   eax,eax
  40a39f:	je     0x40a38a
  40a3a1:	movsxd rax,DWORD PTR [rsi+0x3c]
  40a3a5:	add    rsi,rax
  40a3a8:	movzx  eax,WORD PTR [rsi+0x14]
  40a3ac:	lea    rdx,[rsi+rax*1+0x18]
  40a3b1:	movzx  eax,WORD PTR [rsi+0x6]
  40a3b5:	test   eax,eax
  40a3b7:	je     0x40a38a
  40a3b9:	sub    eax,0x1
  40a3bc:	lea    rax,[rax+rax*4]
  40a3c0:	lea    rax,[rdx+rax*8+0x28]
  40a3c5:	test   BYTE PTR [rdx+0x27],0x20
  40a3c9:	je     0x40a3d4
  40a3cb:	test   rbx,rbx
  40a3ce:	je     0x40a3f0
  40a3d0:	sub    rbx,0x1
  40a3d4:	add    rdx,0x28
  40a3d8:	cmp    rdx,rax
  40a3db:	jne    0x40a3c5
  40a3dd:	xor    edi,edi
  40a3df:	mov    rax,rdi
  40a3e2:	add    rsp,0x20
  40a3e6:	pop    rbx
  40a3e7:	pop    rsi
  40a3e8:	pop    rdi
  40a3e9:	ret    
  40a3ea:	nop    WORD PTR [rax+rax*1+0x0]
  40a3f0:	mov    rdi,rdx
  40a3f3:	mov    rax,rdi
  40a3f6:	add    rsp,0x20
  40a3fa:	pop    rbx
  40a3fb:	pop    rsi
  40a3fc:	pop    rdi
  40a3fd:	ret    
  40a3fe:	xchg   ax,ax
  40a400:	push   rsi
  40a401:	push   rbx
  40a402:	sub    rsp,0x28
  40a406:	mov    rsi,QWORD PTR [rip+0x19633]        # 0x423a40
  40a40d:	xor    ebx,ebx
  40a40f:	cmp    WORD PTR [rsi],0x5a4d
  40a414:	je     0x40a420
  40a416:	mov    rax,rbx
  40a419:	add    rsp,0x28
  40a41d:	pop    rbx
  40a41e:	pop    rsi
  40a41f:	ret    
  40a420:	mov    rcx,rsi
  40a423:	call   0x40a1b0
  40a428:	test   eax,eax
  40a42a:	cmovne rbx,rsi
  40a42e:	mov    rax,rbx
  40a431:	add    rsp,0x28
  40a435:	pop    rbx
  40a436:	pop    rsi
  40a437:	ret    
  40a438:	nop    DWORD PTR [rax+rax*1+0x0]
  40a440:	push   rsi
  40a441:	push   rbx
  40a442:	sub    rsp,0x28
  40a446:	mov    rbx,QWORD PTR [rip+0x195f3]        # 0x423a40
  40a44d:	xor    eax,eax
  40a44f:	cmp    WORD PTR [rbx],0x5a4d
  40a454:	je     0x40a460
  40a456:	add    rsp,0x28
  40a45a:	pop    rbx
  40a45b:	pop    rsi
  40a45c:	ret    
  40a45d:	nop    DWORD PTR [rax]
  40a460:	mov    rsi,rcx
  40a463:	mov    rcx,rbx
  40a466:	call   0x40a1b0
  40a46b:	test   eax,eax
  40a46d:	je     0x40a456
  40a46f:	sub    rsi,rbx
  40a472:	mov    rcx,rbx
  40a475:	mov    rdx,rsi
  40a478:	call   0x40a1f0
  40a47d:	test   rax,rax
  40a480:	je     0x40a491
  40a482:	mov    eax,DWORD PTR [rax+0x24]
  40a485:	not    eax
  40a487:	shr    eax,0x1f
  40a48a:	add    rsp,0x28
  40a48e:	pop    rbx
  40a48f:	pop    rsi
  40a490:	ret    
  40a491:	xor    eax,eax
  40a493:	jmp    0x40a456
  40a495:	nop
  40a496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4a0:	push   rbp
  40a4a1:	push   rdi
  40a4a2:	push   rsi
  40a4a3:	push   rbx
  40a4a4:	sub    rsp,0x28
  40a4a8:	mov    rdi,QWORD PTR [rip+0x19591]        # 0x423a40
  40a4af:	xor    ebp,ebp
  40a4b1:	mov    esi,ecx
  40a4b3:	cmp    WORD PTR [rdi],0x5a4d
  40a4b8:	je     0x40a4d0
  40a4ba:	mov    rax,rbp
  40a4bd:	add    rsp,0x28
  40a4c1:	pop    rbx
  40a4c2:	pop    rsi
  40a4c3:	pop    rdi
  40a4c4:	pop    rbp
  40a4c5:	ret    
  40a4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4d0:	mov    rcx,rdi
  40a4d3:	call   0x40a1b0
  40a4d8:	test   eax,eax
  40a4da:	je     0x40a4ba
  40a4dc:	movsxd rax,DWORD PTR [rdi+0x3c]
  40a4e0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  40a4e7:	test   edx,edx
  40a4e9:	je     0x40a4ba
  40a4eb:	mov    ebx,edx
  40a4ed:	mov    rcx,rdi
  40a4f0:	mov    rdx,rbx
  40a4f3:	call   0x40a1f0
  40a4f8:	test   rax,rax
  40a4fb:	je     0x40a4ba
  40a4fd:	add    rbx,rdi
  40a500:	mov    rdx,rbx
  40a503:	jne    0x40a517
  40a505:	jmp    0x40a4ba
  40a507:	nop    WORD PTR [rax+rax*1+0x0]
  40a510:	sub    esi,0x1
  40a513:	add    rdx,0x14
  40a517:	mov    ecx,DWORD PTR [rdx+0x4]
  40a51a:	test   ecx,ecx
  40a51c:	jne    0x40a525
  40a51e:	mov    eax,DWORD PTR [rdx+0xc]
  40a521:	test   eax,eax
  40a523:	je     0x40a540
  40a525:	test   esi,esi
  40a527:	jg     0x40a510
  40a529:	mov    ebp,DWORD PTR [rdx+0xc]
  40a52c:	add    rbp,rdi
  40a52f:	mov    rax,rbp
  40a532:	add    rsp,0x28
  40a536:	pop    rbx
  40a537:	pop    rsi
  40a538:	pop    rdi
  40a539:	pop    rbp
  40a53a:	ret    
  40a53b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a540:	xor    ebp,ebp
  40a542:	mov    rax,rbp
  40a545:	add    rsp,0x28
  40a549:	pop    rbx
  40a54a:	pop    rsi
  40a54b:	pop    rdi
  40a54c:	pop    rbp
  40a54d:	ret    
  40a54e:	nop
  40a54f:	nop
  40a550:	push   rcx
  40a551:	push   rax
  40a552:	cmp    rax,0x1000
  40a558:	lea    rcx,[rsp+0x18]
  40a55d:	jb     0x40a578
  40a55f:	sub    rcx,0x1000
  40a566:	or     QWORD PTR [rcx],0x0
  40a56a:	sub    rax,0x1000
  40a570:	cmp    rax,0x1000
  40a576:	ja     0x40a55f
  40a578:	sub    rcx,rax
  40a57b:	or     QWORD PTR [rcx],0x0
  40a57f:	pop    rax
  40a580:	pop    rcx
  40a581:	ret    
  40a582:	nop
  40a583:	nop
  40a584:	nop
  40a585:	nop
  40a586:	nop
  40a587:	nop
  40a588:	nop
  40a589:	nop
  40a58a:	nop
  40a58b:	nop
  40a58c:	nop
  40a58d:	nop
  40a58e:	nop
  40a58f:	nop
  40a590:	push   r12
  40a592:	push   rbp
  40a593:	push   rdi
  40a594:	push   rsi
  40a595:	push   rbx
  40a596:	sub    rsp,0x60
  40a59a:	test   rcx,rcx
  40a59d:	mov    rsi,rcx
  40a5a0:	mov    rbx,rdx
  40a5a3:	je     0x40a5f2
  40a5a5:	movzx  ebp,BYTE PTR [rcx]
  40a5a8:	test   bpl,bpl
  40a5ab:	je     0x40a5f2
  40a5ad:	call   0x40a820
  40a5b2:	cmp    eax,0x1
  40a5b5:	mov    rdi,rax
  40a5b8:	jle    0x40a5f2
  40a5ba:	lea    eax,[rax-0x2]
  40a5bd:	cmp    eax,0x1
  40a5c0:	jbe    0x40a750
  40a5c6:	cmp    bpl,0x2f
  40a5ca:	je     0x40a674
  40a5d0:	cmp    bpl,0x5c
  40a5d4:	je     0x40a674
  40a5da:	movsxd rbp,edi
  40a5dd:	movzx  eax,BYTE PTR [rsi+rbp*1-0x1]
  40a5e2:	cmp    al,0x5c
  40a5e4:	je     0x40a700
  40a5ea:	cmp    al,0x2f
  40a5ec:	je     0x40a700
  40a5f2:	lea    rdx,[rsp+0x20]
  40a5f7:	mov    rcx,rsi
  40a5fa:	call   0x40a7f8
  40a5ff:	mov    ebp,eax
  40a601:	cmp    ebp,0xffffffff
  40a604:	je     0x40a780
  40a60a:	mov    eax,DWORD PTR [rsp+0x20]
  40a60e:	mov    DWORD PTR [rbx],eax
  40a610:	movzx  eax,WORD PTR [rsp+0x24]
  40a615:	mov    WORD PTR [rbx+0x4],ax
  40a619:	movzx  eax,WORD PTR [rsp+0x26]
  40a61e:	mov    WORD PTR [rbx+0x6],ax
  40a622:	movzx  eax,WORD PTR [rsp+0x28]
  40a627:	mov    WORD PTR [rbx+0x8],ax
  40a62b:	movzx  eax,WORD PTR [rsp+0x2a]
  40a630:	mov    WORD PTR [rbx+0xa],ax
  40a634:	movzx  eax,WORD PTR [rsp+0x2c]
  40a639:	mov    WORD PTR [rbx+0xc],ax
  40a63d:	mov    eax,DWORD PTR [rsp+0x30]
  40a641:	mov    DWORD PTR [rbx+0x10],eax
  40a644:	mov    rax,QWORD PTR [rsp+0x38]
  40a649:	mov    DWORD PTR [rbx+0x14],eax
  40a64c:	mov    rax,QWORD PTR [rsp+0x40]
  40a651:	mov    QWORD PTR [rbx+0x18],rax
  40a655:	mov    rax,QWORD PTR [rsp+0x48]
  40a65a:	mov    QWORD PTR [rbx+0x20],rax
  40a65e:	mov    rax,QWORD PTR [rsp+0x50]
  40a663:	mov    QWORD PTR [rbx+0x28],rax
  40a667:	mov    eax,ebp
  40a669:	add    rsp,0x60
  40a66d:	pop    rbx
  40a66e:	pop    rsi
  40a66f:	pop    rdi
  40a670:	pop    rbp
  40a671:	pop    r12
  40a673:	ret    
  40a674:	movzx  eax,BYTE PTR [rsi+0x1]
  40a678:	cmp    al,0x2f
  40a67a:	je     0x40a684
  40a67c:	cmp    al,0x5c
  40a67e:	jne    0x40a5da
  40a684:	movzx  ecx,BYTE PTR [rsi+0x2]
  40a688:	lea    rdx,[rsi+0x2]
  40a68c:	cmp    cl,0x5c
  40a68f:	jne    0x40a6b0
  40a691:	jmp    0x40a760
  40a696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a6a0:	add    rdx,0x1
  40a6a4:	movzx  ecx,BYTE PTR [rdx]
  40a6a7:	cmp    cl,0x5c
  40a6aa:	je     0x40a760
  40a6b0:	test   cl,cl
  40a6b2:	je     0x40a760
  40a6b8:	cmp    cl,0x2f
  40a6bb:	jne    0x40a6a0
  40a6bd:	add    rdx,0x1
  40a6c1:	movzx  eax,BYTE PTR [rdx]
  40a6c4:	test   al,al
  40a6c6:	je     0x40a5f2
  40a6cc:	cmp    al,0x5c
  40a6ce:	je     0x40a6f1
  40a6d0:	cmp    al,0x2f
  40a6d2:	je     0x40a6f1
  40a6d4:	add    rdx,0x1
  40a6d8:	movzx  ecx,BYTE PTR [rdx]
  40a6db:	cmp    cl,0x5c
  40a6de:	je     0x40a770
  40a6e4:	test   cl,cl
  40a6e6:	je     0x40a770
  40a6ec:	cmp    cl,0x2f
  40a6ef:	jne    0x40a6d4
  40a6f1:	cmp    BYTE PTR [rdx+0x1],0x0
  40a6f5:	jne    0x40a5da
  40a6fb:	jmp    0x40a5f2
  40a700:	mov    rcx,rbp
  40a703:	call   0x40a880
  40a708:	lea    r8d,[rdi-0x1]
  40a70c:	mov    rdx,rsi
  40a70f:	mov    rcx,rax
  40a712:	mov    r12,rax
  40a715:	movsxd r8,r8d
  40a718:	call   0x40a870
  40a71d:	lea    rdx,[rsp+0x20]
  40a722:	mov    rcx,r12
  40a725:	mov    BYTE PTR [r12+rbp*1-0x1],0x0
  40a72b:	call   0x40a7f8
  40a730:	cmp    rsi,r12
  40a733:	mov    ebp,eax
  40a735:	je     0x40a601
  40a73b:	mov    rcx,r12
  40a73e:	call   0x40a8f0
  40a743:	jmp    0x40a601
  40a748:	nop    DWORD PTR [rax+rax*1+0x0]
  40a750:	cmp    BYTE PTR [rsi+0x1],0x3a
  40a754:	jne    0x40a5c6
  40a75a:	jmp    0x40a5f2
  40a75f:	nop
  40a760:	test   cl,cl
  40a762:	je     0x40a6c1
  40a768:	jmp    0x40a6bd
  40a76d:	nop    DWORD PTR [rax]
  40a770:	test   cl,cl
  40a772:	je     0x40a5f2
  40a778:	jmp    0x40a6f1
  40a77d:	nop    DWORD PTR [rax]
  40a780:	lea    rdi,[rbx+0x8]
  40a784:	mov    QWORD PTR [rbx],0x0
  40a78b:	mov    QWORD PTR [rbx+0x28],0x0
  40a793:	xor    eax,eax
  40a795:	and    rdi,0xfffffffffffffff8
  40a799:	sub    rbx,rdi
  40a79c:	lea    ecx,[rbx+0x30]
  40a79f:	shr    ecx,0x3
  40a7a2:	rep stos QWORD PTR es:[rdi],rax
  40a7a5:	jmp    0x40a667
  40a7aa:	nop
  40a7ab:	nop
  40a7ac:	nop
  40a7ad:	nop
  40a7ae:	nop
  40a7af:	nop
  40a7b0:	jmp    QWORD PTR [rip+0x1de66]        # 0x42861c
  40a7b6:	nop
  40a7b7:	nop
  40a7b8:	jmp    QWORD PTR [rip+0x1de56]        # 0x428614
  40a7be:	nop
  40a7bf:	nop
  40a7c0:	jmp    QWORD PTR [rip+0x1de46]        # 0x42860c
  40a7c6:	nop
  40a7c7:	nop
  40a7c8:	jmp    QWORD PTR [rip+0x1de36]        # 0x428604
  40a7ce:	nop
  40a7cf:	nop
  40a7d0:	jmp    QWORD PTR [rip+0x1de26]        # 0x4285fc
  40a7d6:	nop
  40a7d7:	nop
  40a7d8:	jmp    QWORD PTR [rip+0x1de16]        # 0x4285f4
  40a7de:	nop
  40a7df:	nop
  40a7e0:	jmp    QWORD PTR [rip+0x1de06]        # 0x4285ec
  40a7e6:	nop
  40a7e7:	nop
  40a7e8:	jmp    QWORD PTR [rip+0x1ddf6]        # 0x4285e4
  40a7ee:	nop
  40a7ef:	nop
  40a7f0:	jmp    QWORD PTR [rip+0x1dde6]        # 0x4285dc
  40a7f6:	nop
  40a7f7:	nop
  40a7f8:	jmp    QWORD PTR [rip+0x1ddd6]        # 0x4285d4
  40a7fe:	nop
  40a7ff:	nop
  40a800:	jmp    QWORD PTR [rip+0x1ddc6]        # 0x4285cc
  40a806:	nop
  40a807:	nop
  40a808:	jmp    QWORD PTR [rip+0x1ddb6]        # 0x4285c4
  40a80e:	nop
  40a80f:	nop
  40a810:	jmp    QWORD PTR [rip+0x1dda6]        # 0x4285bc
  40a816:	nop
  40a817:	nop
  40a818:	jmp    QWORD PTR [rip+0x1dd96]        # 0x4285b4
  40a81e:	nop
  40a81f:	nop
  40a820:	jmp    QWORD PTR [rip+0x1dd86]        # 0x4285ac
  40a826:	nop
  40a827:	nop
  40a828:	jmp    QWORD PTR [rip+0x1dd76]        # 0x4285a4
  40a82e:	nop
  40a82f:	nop
  40a830:	jmp    QWORD PTR [rip+0x1dd66]        # 0x42859c
  40a836:	nop
  40a837:	nop
  40a838:	jmp    QWORD PTR [rip+0x1dd56]        # 0x428594
  40a83e:	nop
  40a83f:	nop
  40a840:	jmp    QWORD PTR [rip+0x1dd46]        # 0x42858c
  40a846:	nop
  40a847:	nop
  40a848:	jmp    QWORD PTR [rip+0x1dd36]        # 0x428584
  40a84e:	nop
  40a84f:	nop
  40a850:	jmp    QWORD PTR [rip+0x1dd26]        # 0x42857c
  40a856:	nop
  40a857:	nop
  40a858:	jmp    QWORD PTR [rip+0x1dd16]        # 0x428574
  40a85e:	nop
  40a85f:	nop
  40a860:	jmp    QWORD PTR [rip+0x1dd06]        # 0x42856c
  40a866:	nop
  40a867:	nop
  40a868:	jmp    QWORD PTR [rip+0x1dcf6]        # 0x428564
  40a86e:	nop
  40a86f:	nop
  40a870:	jmp    QWORD PTR [rip+0x1dce6]        # 0x42855c
  40a876:	nop
  40a877:	nop
  40a878:	jmp    QWORD PTR [rip+0x1dcd6]        # 0x428554
  40a87e:	nop
  40a87f:	nop
  40a880:	jmp    QWORD PTR [rip+0x1dcc6]        # 0x42854c
  40a886:	nop
  40a887:	nop
  40a888:	jmp    QWORD PTR [rip+0x1dcb6]        # 0x428544
  40a88e:	nop
  40a88f:	nop
  40a890:	jmp    QWORD PTR [rip+0x1dca6]        # 0x42853c
  40a896:	nop
  40a897:	nop
  40a898:	jmp    QWORD PTR [rip+0x1dc96]        # 0x428534
  40a89e:	nop
  40a89f:	nop
  40a8a0:	jmp    QWORD PTR [rip+0x1dc86]        # 0x42852c
  40a8a6:	nop
  40a8a7:	nop
  40a8a8:	jmp    QWORD PTR [rip+0x1dc76]        # 0x428524
  40a8ae:	nop
  40a8af:	nop
  40a8b0:	jmp    QWORD PTR [rip+0x1dc66]        # 0x42851c
  40a8b6:	nop
  40a8b7:	nop
  40a8b8:	jmp    QWORD PTR [rip+0x1dc56]        # 0x428514
  40a8be:	nop
  40a8bf:	nop
  40a8c0:	jmp    QWORD PTR [rip+0x1dc46]        # 0x42850c
  40a8c6:	nop
  40a8c7:	nop
  40a8c8:	jmp    QWORD PTR [rip+0x1dc36]        # 0x428504
  40a8ce:	nop
  40a8cf:	nop
  40a8d0:	jmp    QWORD PTR [rip+0x1dc26]        # 0x4284fc
  40a8d6:	nop
  40a8d7:	nop
  40a8d8:	jmp    QWORD PTR [rip+0x1dc16]        # 0x4284f4
  40a8de:	nop
  40a8df:	nop
  40a8e0:	jmp    QWORD PTR [rip+0x1dc06]        # 0x4284ec
  40a8e6:	nop
  40a8e7:	nop
  40a8e8:	jmp    QWORD PTR [rip+0x1dbf6]        # 0x4284e4
  40a8ee:	nop
  40a8ef:	nop
  40a8f0:	jmp    QWORD PTR [rip+0x1dbe6]        # 0x4284dc
  40a8f6:	nop
  40a8f7:	nop
  40a8f8:	jmp    QWORD PTR [rip+0x1dbd6]        # 0x4284d4
  40a8fe:	nop
  40a8ff:	nop
  40a900:	jmp    QWORD PTR [rip+0x1dbc6]        # 0x4284cc
  40a906:	nop
  40a907:	nop
  40a908:	jmp    QWORD PTR [rip+0x1dbb6]        # 0x4284c4
  40a90e:	nop
  40a90f:	nop
  40a910:	jmp    QWORD PTR [rip+0x1dba6]        # 0x4284bc
  40a916:	nop
  40a917:	nop
  40a918:	jmp    QWORD PTR [rip+0x1db96]        # 0x4284b4
  40a91e:	nop
  40a91f:	nop
  40a920:	jmp    QWORD PTR [rip+0x1db86]        # 0x4284ac
  40a926:	nop
  40a927:	nop
  40a928:	jmp    QWORD PTR [rip+0x1db76]        # 0x4284a4
  40a92e:	nop
  40a92f:	nop
  40a930:	jmp    QWORD PTR [rip+0x1db66]        # 0x42849c
  40a936:	nop
  40a937:	nop
  40a938:	jmp    QWORD PTR [rip+0x1db56]        # 0x428494
  40a93e:	nop
  40a93f:	nop
  40a940:	jmp    QWORD PTR [rip+0x1db46]        # 0x42848c
  40a946:	nop
  40a947:	nop
  40a948:	jmp    QWORD PTR [rip+0x1db36]        # 0x428484
  40a94e:	nop
  40a94f:	nop
  40a950:	jmp    QWORD PTR [rip+0x1db26]        # 0x42847c
  40a956:	nop
  40a957:	nop
  40a958:	jmp    QWORD PTR [rip+0x1db16]        # 0x428474
  40a95e:	nop
  40a95f:	nop
  40a960:	jmp    QWORD PTR [rip+0x1db06]        # 0x42846c
  40a966:	nop
  40a967:	nop
  40a968:	jmp    QWORD PTR [rip+0x1daf6]        # 0x428464
  40a96e:	nop
  40a96f:	nop
  40a970:	jmp    QWORD PTR [rip+0x1dade]        # 0x428454
  40a976:	nop
  40a977:	nop
  40a978:	jmp    QWORD PTR [rip+0x1dace]        # 0x42844c
  40a97e:	nop
  40a97f:	nop
  40a980:	jmp    QWORD PTR [rip+0x1dabe]        # 0x428444
  40a986:	nop
  40a987:	nop
  40a988:	jmp    QWORD PTR [rip+0x1daa6]        # 0x428434
  40a98e:	nop
  40a98f:	nop
  40a990:	jmp    QWORD PTR [rip+0x1da96]        # 0x42842c
  40a996:	nop
  40a997:	nop
  40a998:	jmp    QWORD PTR [rip+0x1da86]        # 0x428424
  40a99e:	nop
  40a99f:	nop
  40a9a0:	jmp    QWORD PTR [rip+0x1da76]        # 0x42841c
  40a9a6:	nop
  40a9a7:	nop
  40a9a8:	jmp    QWORD PTR [rip+0x1da66]        # 0x428414
  40a9ae:	nop
  40a9af:	nop
  40a9b0:	jmp    QWORD PTR [rip+0x1da4e]        # 0x428404
  40a9b6:	nop
  40a9b7:	nop
  40a9b8:	jmp    QWORD PTR [rip+0x1da3e]        # 0x4283fc
  40a9be:	nop
  40a9bf:	nop
  40a9c0:	jmp    QWORD PTR [rip+0x1da2e]        # 0x4283f4
  40a9c6:	nop
  40a9c7:	nop
  40a9c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a9d0:	mov    rax,QWORD PTR [rip+0x1d2d9]        # 0x427cb0
  40a9d7:	ret    
  40a9d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a9e0:	mov    rax,rcx
  40a9e3:	xchg   QWORD PTR [rip+0x1d2c6],rax        # 0x427cb0
  40a9ea:	ret    
  40a9eb:	nop
  40a9ec:	nop
  40a9ed:	nop
  40a9ee:	nop
  40a9ef:	nop
  40a9f0:	jmp    QWORD PTR [rip+0x1d9ee]        # 0x4283e4
  40a9f6:	nop
  40a9f7:	nop
  40a9f8:	jmp    QWORD PTR [rip+0x1d9de]        # 0x4283dc
  40a9fe:	nop
  40a9ff:	nop
  40aa00:	jmp    QWORD PTR [rip+0x1d9ce]        # 0x4283d4
  40aa06:	nop
  40aa07:	nop
  40aa08:	jmp    QWORD PTR [rip+0x1d9be]        # 0x4283cc
  40aa0e:	nop
  40aa0f:	nop
  40aa10:	jmp    QWORD PTR [rip+0x1d9ae]        # 0x4283c4
  40aa16:	nop
  40aa17:	nop
  40aa18:	jmp    QWORD PTR [rip+0x1d99e]        # 0x4283bc
  40aa1e:	nop
  40aa1f:	nop
  40aa20:	jmp    QWORD PTR [rip+0x1d98e]        # 0x4283b4
  40aa26:	nop
  40aa27:	nop
  40aa28:	jmp    QWORD PTR [rip+0x1d97e]        # 0x4283ac
  40aa2e:	nop
  40aa2f:	nop
  40aa30:	jmp    QWORD PTR [rip+0x1d96e]        # 0x4283a4
  40aa36:	nop
  40aa37:	nop
  40aa38:	jmp    QWORD PTR [rip+0x1d95e]        # 0x42839c
  40aa3e:	nop
  40aa3f:	nop
  40aa40:	jmp    QWORD PTR [rip+0x1d94e]        # 0x428394
  40aa46:	nop
  40aa47:	nop
  40aa48:	jmp    QWORD PTR [rip+0x1d93e]        # 0x42838c
  40aa4e:	nop
  40aa4f:	nop
  40aa50:	jmp    QWORD PTR [rip+0x1d92e]        # 0x428384
  40aa56:	nop
  40aa57:	nop
  40aa58:	jmp    QWORD PTR [rip+0x1d91e]        # 0x42837c
  40aa5e:	nop
  40aa5f:	nop
  40aa60:	jmp    QWORD PTR [rip+0x1d90e]        # 0x428374
  40aa66:	nop
  40aa67:	nop
  40aa68:	jmp    QWORD PTR [rip+0x1d8fe]        # 0x42836c
  40aa6e:	nop
  40aa6f:	nop
  40aa70:	jmp    QWORD PTR [rip+0x1d8ee]        # 0x428364
  40aa76:	nop
  40aa77:	nop
  40aa78:	jmp    QWORD PTR [rip+0x1d8de]        # 0x42835c
  40aa7e:	nop
  40aa7f:	nop
  40aa80:	jmp    QWORD PTR [rip+0x1d8ce]        # 0x428354
  40aa86:	nop
  40aa87:	nop
  40aa88:	jmp    QWORD PTR [rip+0x1d8be]        # 0x42834c
  40aa8e:	nop
  40aa8f:	nop
  40aa90:	jmp    QWORD PTR [rip+0x1d8ae]        # 0x428344
  40aa96:	nop
  40aa97:	nop
  40aa98:	jmp    QWORD PTR [rip+0x1d89e]        # 0x42833c
  40aa9e:	nop
  40aa9f:	nop
  40aaa0:	jmp    QWORD PTR [rip+0x1d88e]        # 0x428334
  40aaa6:	nop
  40aaa7:	nop
  40aaa8:	nop    DWORD PTR [rax+rax*1+0x0]
  40aab0:	push   rbx
  40aab1:	sub    rsp,0x420
  40aab8:	lea    rbx,[rsp+0x20]
  40aabd:	call   0x401920
  40aac2:	lea    r8,[rip+0x17e47]        # 0x422910
  40aac9:	lea    rdx,[rip+0x9873]        # 0x414343
  40aad0:	mov    rcx,rbx
  40aad3:	call   0x40a848
  40aad8:	mov    rcx,rbx
  40aadb:	call   0x40a808
  40aae0:	mov    ecx,eax
  40aae2:	call   0x40a930
  40aae7:	nop
  40aae8:	nop
  40aae9:	nop
  40aaea:	nop
  40aaeb:	nop
  40aaec:	nop
  40aaed:	nop
  40aaee:	nop
  40aaef:	nop
  40aaf0:	push   rdi
  40aaf1:	push   rsi
  40aaf2:	push   rbx
  40aaf3:	sub    rsp,0x20
  40aaf7:	mov    ebx,ecx
  40aaf9:	mov    rsi,rdx
  40aafc:	call   0x4091a0
  40ab01:	mov    rdx,rsi
  40ab04:	mov    ecx,ebx
  40ab06:	call   0x401aa0
  40ab0b:	mov    rsi,QWORD PTR [rip+0x1d902]        # 0x428414
  40ab12:	call   rsi
  40ab14:	lea    rcx,[rax+0x60]
  40ab18:	call   0x40a7c0
  40ab1d:	mov    ecx,eax
  40ab1f:	call   0x40a7d0
  40ab24:	mov    DWORD PTR [rip+0x1c50e],eax        # 0x427038
  40ab2a:	call   rsi
  40ab2c:	mov    rcx,rax
  40ab2f:	call   0x4025f0
  40ab34:	mov    rbx,rax
  40ab37:	call   rsi
  40ab39:	lea    rdx,[rip+0x954b]        # 0x41408b
  40ab40:	lea    rcx,[rip+0x978d]        # 0x4142d4
  40ab47:	mov    r8,rax
  40ab4a:	call   0x408e70
  40ab4f:	test   rbx,rbx
  40ab52:	je     0x40ac2d
  40ab58:	mov    rdi,QWORD PTR [rip+0x19011]        # 0x423b70
  40ab5f:	nop
  40ab60:	movzx  edx,BYTE PTR [rbx]
  40ab63:	test   BYTE PTR [rdi+rdx*2],0x40
  40ab67:	mov    rax,rdx
  40ab6a:	jne    0x40abe0
  40ab6c:	cmp    dl,0x2e
  40ab6f:	je     0x40ab7e
  40ab71:	jmp    0x40abf0
  40ab73:	add    rbx,0x2
  40ab77:	movzx  eax,BYTE PTR [rbx]
  40ab7a:	cmp    al,0x2e
  40ab7c:	jne    0x40abf0
  40ab7e:	cmp    BYTE PTR [rbx+0x1],0x2f
  40ab82:	je     0x40ab73
  40ab84:	mov    edx,0xa
  40ab89:	mov    rcx,rbx
  40ab8c:	mov    QWORD PTR [rip+0x1d1b5],rbx        # 0x427d48
  40ab93:	call   0x40a840
  40ab98:	test   rax,rax
  40ab9b:	mov    rsi,rbx
  40ab9e:	je     0x40ac10
  40aba0:	cmp    rax,rsi
  40aba3:	lea    rbx,[rax+0x1]
  40aba7:	jbe    0x40ac23
  40aba9:	movzx  edx,BYTE PTR [rax-0x1]
  40abad:	test   BYTE PTR [rdi+rdx*2],0x40
  40abb1:	je     0x40ac23
  40abb3:	sub    rax,0x1
  40abb7:	cmp    rax,rsi
  40abba:	je     0x40ab60
  40abbc:	movzx  edx,BYTE PTR [rax-0x1]
  40abc0:	test   BYTE PTR [rdi+rdx*2],0x40
  40abc4:	jne    0x40abb3
  40abc6:	cmp    BYTE PTR [rsi],0x23
  40abc9:	je     0x40ab60
  40abcb:	mov    BYTE PTR [rax],0x0
  40abce:	call   0x401d30
  40abd3:	movzx  edx,BYTE PTR [rbx]
  40abd6:	test   BYTE PTR [rdi+rdx*2],0x40
  40abda:	mov    rax,rdx
  40abdd:	je     0x40ab6c
  40abdf:	nop
  40abe0:	add    rbx,0x1
  40abe4:	jmp    0x40ab60
  40abe9:	nop    DWORD PTR [rax+0x0]
  40abf0:	test   al,al
  40abf2:	jne    0x40ab84
  40abf4:	mov    rcx,QWORD PTR [rip+0x1d0e5]        # 0x427ce0
  40abfb:	call   0x40a7f0
  40ac00:	xor    ecx,ecx
  40ac02:	call   0x40a930
  40ac07:	nop    WORD PTR [rax+rax*1+0x0]
  40ac10:	mov    rcx,rbx
  40ac13:	call   0x40a820
  40ac18:	add    rax,rbx
  40ac1b:	cmp    rax,rsi
  40ac1e:	mov    rbx,rax
  40ac21:	ja     0x40aba9
  40ac23:	cmp    rax,rsi
  40ac26:	jne    0x40abc6
  40ac28:	jmp    0x40ab60
  40ac2d:	call   rsi
  40ac2f:	lea    rcx,[rip+0x96aa]        # 0x4142e0
  40ac36:	lea    r9,[rax+0x60]
  40ac3a:	mov    r8d,0x20
  40ac40:	mov    edx,0x1
  40ac45:	call   0x40a8e0
  40ac4a:	mov    ecx,0x1
  40ac4f:	call   0x40a930
  40ac54:	nop
  40ac55:	nop
  40ac56:	nop
  40ac57:	nop
  40ac58:	nop
  40ac59:	nop
  40ac5a:	nop
  40ac5b:	nop
  40ac5c:	nop
  40ac5d:	nop
  40ac5e:	nop
  40ac5f:	nop
  40ac60:	push   rsi
  40ac61:	push   rbx
  40ac62:	sub    rsp,0x28
  40ac66:	mov    rbx,QWORD PTR [rip+0x1d7a7]        # 0x428414
  40ac6d:	mov    rsi,rcx
  40ac70:	call   rbx
  40ac72:	lea    rdx,[rip+0x17e87]        # 0x422b00
  40ac79:	lea    rcx,[rax+0x60]
  40ac7d:	mov    r8,rsi
  40ac80:	call   0x40a908
  40ac85:	call   rbx
  40ac87:	lea    r8,[rip+0x17e32]        # 0x422ac0
  40ac8e:	lea    rcx,[rax+0x60]
  40ac92:	lea    rdx,[rip+0x17e62]        # 0x422afb
  40ac99:	call   0x40a908
  40ac9e:	call   rbx
  40aca0:	lea    r8,[rip+0x17e28]        # 0x422acf
  40aca7:	lea    rcx,[rax+0x60]
  40acab:	lea    rdx,[rip+0x17e49]        # 0x422afb
  40acb2:	call   0x40a908
  40acb7:	call   rbx
  40acb9:	lea    r8,[rip+0x17e17]        # 0x422ad7
  40acc0:	lea    rcx,[rax+0x60]
  40acc4:	lea    rdx,[rip+0x17e30]        # 0x422afb
  40accb:	call   0x40a908
  40acd0:	call   rbx
  40acd2:	lea    r8,[rip+0x17e05]        # 0x422ade
  40acd9:	lea    rcx,[rax+0x60]
  40acdd:	lea    rdx,[rip+0x17e17]        # 0x422afb
  40ace4:	call   0x40a908
  40ace9:	call   rbx
  40aceb:	lea    r8,[rip+0x17df2]        # 0x422ae4
  40acf2:	lea    rcx,[rax+0x60]
  40acf6:	lea    rdx,[rip+0x17dfe]        # 0x422afb
  40acfd:	call   0x40a908
  40ad02:	call   rbx
  40ad04:	lea    r8,[rip+0x17de1]        # 0x422aec
  40ad0b:	lea    rcx,[rax+0x60]
  40ad0f:	lea    rdx,[rip+0x17de5]        # 0x422afb
  40ad16:	call   0x40a908
  40ad1b:	mov    ecx,0x1
  40ad20:	call   0x40a930
  40ad25:	nop
  40ad26:	nop
  40ad27:	nop
  40ad28:	nop
  40ad29:	nop
  40ad2a:	nop
  40ad2b:	nop
  40ad2c:	nop
  40ad2d:	nop
  40ad2e:	nop
  40ad2f:	nop
  40ad30:	(bad)  
  40ad31:	(bad)  
  40ad32:	(bad)  
  40ad33:	(bad)  
  40ad34:	(bad)  
  40ad35:	(bad)  
  40ad36:	(bad)  
  40ad37:	inc    DWORD PTR [rax]
  40ad39:	add    BYTE PTR [rax],al
  40ad3b:	add    BYTE PTR [rax],al
  40ad3d:	add    BYTE PTR [rax],al
  40ad3f:	add    bh,bh
  40ad41:	(bad)  
  40ad42:	(bad)  
  40ad43:	(bad)  
  40ad44:	(bad)  
  40ad45:	(bad)  
  40ad46:	(bad)  
  40ad47:	inc    DWORD PTR [rax]
  40ad49:	add    BYTE PTR [rax],al
  40ad4b:	add    BYTE PTR [rax],al
  40ad4d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

000000000040b000 <.data>:
  40b000:	or     al,BYTE PTR [rax]
	...
  40b03e:	add    BYTE PTR [rax],al
  40b040:	(bad)  
  40b041:	(bad)  
  40b042:	rex.X add BYTE PTR [rax],al
  40b045:	add    BYTE PTR [rax],al
  40b047:	add    ch,dh
  40b049:	(bad)  
  40b04a:	rex.X add BYTE PTR [rax],al
  40b04d:	add    BYTE PTR [rax],al
  40b04f:	add    BYTE PTR [rax+0x412f],al
  40b055:	add    BYTE PTR [rax],al
  40b057:	add    BYTE PTR [rcx],al
  40b059:	add    BYTE PTR [rax],al
  40b05b:	add    BYTE PTR [rax+rax*1],al
  40b05e:	add    BYTE PTR [rax],al
  40b060:	(bad)  
  40b061:	(bad)  
  40b062:	add    BYTE PTR [r8],al
  40b065:	add    BYTE PTR [rax],al
  40b067:	add    BYTE PTR [rax+0x2f],al
  40b06a:	add    BYTE PTR [r8],al
	...
  40b075:	add    BYTE PTR [rax],al
  40b077:	add    BYTE PTR [rdi],ch
  40b079:	and    eax,0x42
  40b07e:	add    BYTE PTR [rax],al
  40b080:	es and eax,0x42
  40b086:	add    BYTE PTR [rax],al
  40b088:	and    BYTE PTR [rdi],ch
  40b08a:	add    BYTE PTR [r8],al
  40b08d:	add    BYTE PTR [rax],al
  40b08f:	add    BYTE PTR [rcx],al
  40b091:	add    BYTE PTR [rax],al
  40b093:	add    BYTE PTR [rax+rax*1],al
  40b096:	add    BYTE PTR [rax],al
  40b098:	add    BYTE PTR [rdi],ch
  40b09a:	add    BYTE PTR [r8],al
  40b09d:	add    BYTE PTR [rax],al
  40b09f:	add    al,ah
  40b0a1:	add    BYTE PTR cs:[r8],al
	...
  40b0ad:	add    BYTE PTR [rax],al
  40b0af:	add    BYTE PTR [rax],ah
  40b0b1:	and    eax,DWORD PTR [rdx+0x0]
  40b0b4:	add    BYTE PTR [rax],al
  40b0b6:	add    BYTE PTR [rax],al
  40b0b8:	add    BYTE PTR [rbx],ah
  40b0ba:	rex.X add BYTE PTR [rax],al
  40b0bd:	add    BYTE PTR [rax],al
  40b0bf:	add    al,dl
  40b0c1:	add    BYTE PTR cs:[r8],al
  40b0c5:	add    BYTE PTR [rax],al
  40b0c7:	add    BYTE PTR [rcx],al
  40b0c9:	add    BYTE PTR [rax],al
  40b0cb:	add    BYTE PTR [rax],cl
  40b0cd:	add    BYTE PTR [rax],al
  40b0cf:	add    BYTE PTR [rax+0x412e],dh
  40b0d5:	add    BYTE PTR [rax],al
  40b0d7:	add    BYTE PTR [rax+0x412e],ah
	...
  40b0e5:	add    BYTE PTR [rax],al
  40b0e7:	add    BYTE PTR [rax+0x10],al
  40b0ea:	rex.X add BYTE PTR [rax],al
  40b0ed:	add    BYTE PTR [rax],al
  40b0ef:	add    BYTE PTR [rax],ah
  40b0f1:	adc    BYTE PTR [rdx+0x0],al
  40b0f4:	add    BYTE PTR [rax],al
  40b0f6:	add    BYTE PTR [rax],al
  40b0f8:	nop
  40b0f9:	add    BYTE PTR cs:[r8],al
  40b0fd:	add    BYTE PTR [rax],al
  40b0ff:	add    BYTE PTR [rbx],al
  40b101:	add    BYTE PTR [rax],al
  40b103:	add    BYTE PTR [rax],cl
  40b105:	add    BYTE PTR [rax],al
  40b107:	add    BYTE PTR [rax+0x2e],al
  40b10a:	add    BYTE PTR [r8],al
  40b10d:	add    BYTE PTR [rax],al
  40b10f:	add    BYTE PTR [rax],dh
  40b111:	add    BYTE PTR cs:[r8],al
	...
  40b11d:	add    BYTE PTR [rax],al
  40b11f:	add    al,al
  40b121:	or     eax,0x42
  40b126:	add    BYTE PTR [rax],al
  40b128:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40b129:	or     eax,0x42
  40b12e:	add    BYTE PTR [rax],al
  40b130:	and    BYTE PTR [rsi],ch
  40b132:	add    BYTE PTR [r8],al
  40b135:	add    BYTE PTR [rax],al
  40b137:	add    BYTE PTR [rax],al
  40b139:	add    BYTE PTR [rax],al
  40b13b:	add    BYTE PTR [rax],cl
	...
  40b145:	add    BYTE PTR [rax],al
  40b147:	add    BYTE PTR [rax],dl
  40b149:	add    BYTE PTR cs:[r8],al
	...
  40b155:	add    BYTE PTR [rax],al
  40b157:	add    BYTE PTR [rax+0xb],dh
  40b15a:	rex.X add BYTE PTR [rax],al
  40b15d:	add    BYTE PTR [rax],al
  40b15f:	add    BYTE PTR [rcx+0xb],bl
  40b162:	rex.X add BYTE PTR [rax],al
  40b165:	add    BYTE PTR [rax],al
  40b167:	add    BYTE PTR [rax],al
  40b169:	add    BYTE PTR cs:[r8],al
  40b16d:	add    BYTE PTR [rax],al
  40b16f:	add    BYTE PTR [rax],al
  40b171:	add    BYTE PTR [rax],al
  40b173:	add    BYTE PTR [rax],cl
	...
  40b17d:	add    BYTE PTR [rax],al
  40b17f:	add    al,dh
  40b181:	sub    eax,0x41
	...
  40b18e:	add    BYTE PTR [rax],al
  40b190:	adc    BYTE PTR [rax],cl
  40b192:	rex.X add BYTE PTR [rax],al
  40b195:	add    BYTE PTR [rax],al
  40b197:	add    dl,bh
  40b199:	(bad)  
  40b19a:	rex.X add BYTE PTR [rax],al
  40b19d:	add    BYTE PTR [rax],al
  40b19f:	add    al,ah
  40b1a1:	sub    eax,0x41
  40b1a6:	add    BYTE PTR [rax],al
  40b1a8:	add    BYTE PTR [rax],al
  40b1aa:	add    BYTE PTR [rax],al
  40b1ac:	or     BYTE PTR [rax],al
	...
  40b1b6:	add    BYTE PTR [rax],al
  40b1b8:	shr    BYTE PTR [rip+0x41],1        # 0x40b1ff
	...
  40b1c6:	add    BYTE PTR [rax],al
  40b1c8:	lahf   
  40b1c9:	(bad)  
  40b1ca:	rex.X add BYTE PTR [rax],al
  40b1cd:	add    BYTE PTR [rax],al
  40b1cf:	add    BYTE PTR [rbp+0x4207],dl
	...
  40b1dd:	add    BYTE PTR [rax],al
  40b1df:	add    BYTE PTR [rcx],al
  40b1e1:	add    BYTE PTR [rax],al
  40b1e3:	add    BYTE PTR [rax],cl
  40b1e5:	add    BYTE PTR [rax],al
  40b1e7:	add    BYTE PTR [rax+0x412d],dh
  40b1ed:	add    BYTE PTR [rax],al
  40b1ef:	add    BYTE PTR [rax+0x412d],ah
	...
  40b1fd:	add    BYTE PTR [rax],al
  40b1ff:	add    BYTE PTR [rax+0x4205],al
  40b205:	add    BYTE PTR [rax],al
  40b207:	add    BYTE PTR [rcx+0x5],dh
  40b20a:	rex.X add BYTE PTR [rax],al
  40b20d:	add    BYTE PTR [rax],al
  40b20f:	add    BYTE PTR [rax+0x412d],dl
  40b215:	add    BYTE PTR [rax],al
  40b217:	add    BYTE PTR [rax],al
  40b219:	add    BYTE PTR [rax],al
  40b21b:	add    BYTE PTR [rax],cl
	...
  40b225:	add    BYTE PTR [rax],al
  40b227:	add    BYTE PTR [rax+0x412d],al
	...
  40b235:	add    BYTE PTR [rax],al
  40b237:	add    BYTE PTR [rax],ah
  40b239:	add    eax,DWORD PTR [rdx+0x0]
  40b23c:	add    BYTE PTR [rax],al
  40b23e:	add    BYTE PTR [rax],al
  40b240:	or     al,0x3
  40b242:	rex.X add BYTE PTR [rax],al
  40b245:	add    BYTE PTR [rax],al
  40b247:	add    BYTE PTR [rax+0x2d],dh
  40b24a:	add    BYTE PTR [r8],al
  40b24d:	add    BYTE PTR [rax],al
  40b24f:	add    BYTE PTR [rax],al
  40b251:	add    BYTE PTR [rax],al
  40b253:	add    BYTE PTR [rax],cl
	...
  40b25d:	add    BYTE PTR [rax],al
  40b25f:	add    BYTE PTR [rax+0x2d],ah
  40b262:	add    BYTE PTR [r8],al
	...
  40b26d:	add    BYTE PTR [rax],al
  40b26f:	add    BYTE PTR [rax+0x4202],dl
  40b275:	add    BYTE PTR [rax],al
  40b277:	add    BYTE PTR [rcx+0x2],bh
  40b27a:	rex.X add BYTE PTR [rax],al
  40b27d:	add    BYTE PTR [rax],al
  40b27f:	add    BYTE PTR [rax+0x2d],dl
  40b282:	add    BYTE PTR [r8],al
  40b285:	add    BYTE PTR [rax],al
  40b287:	add    BYTE PTR [rax],al
  40b289:	add    BYTE PTR [rax],al
  40b28b:	add    BYTE PTR [rax],cl
	...
  40b295:	add    BYTE PTR [rax],al
  40b297:	add    BYTE PTR [rax+0x2d],al
  40b29a:	add    BYTE PTR [r8],al
	...
  40b2a5:	add    BYTE PTR [rax],al
  40b2a7:	add    BYTE PTR [rax+0x41f7],dl
  40b2ad:	add    BYTE PTR [rax],al
  40b2af:	add    BYTE PTR [rdi+rsi*8+0x41],al
  40b2b6:	add    BYTE PTR [rax],al
  40b2b8:	xor    BYTE PTR [rip+0x41],ch        # 0x40b2ff
  40b2be:	add    BYTE PTR [rax],al
  40b2c0:	add    BYTE PTR [rax],al
  40b2c2:	add    BYTE PTR [rax],al
  40b2c4:	or     BYTE PTR [rax],al
	...
  40b2ce:	add    BYTE PTR [rax],al
  40b2d0:	and    BYTE PTR [rip+0x41],ch        # 0x40b317
	...
  40b2de:	add    BYTE PTR [rax],al
  40b2e0:	jne    0x40b2d8
  40b2e2:	add    BYTE PTR [r8],al
  40b2e5:	add    BYTE PTR [rax],al
  40b2e7:	add    BYTE PTR [rbx-0xa],ch
  40b2ea:	add    BYTE PTR [r8],al
  40b2ed:	add    BYTE PTR [rax],al
  40b2ef:	add    BYTE PTR [rax],dl
  40b2f1:	sub    eax,0x41
  40b2f6:	add    BYTE PTR [rax],al
  40b2f8:	add    DWORD PTR [rax],eax
  40b2fa:	add    BYTE PTR [rax],al
  40b2fc:	add    al,0x0
  40b2fe:	add    BYTE PTR [rax],al
  40b300:	lock sub al,0x41
  40b303:	add    BYTE PTR [rax],al
  40b305:	add    BYTE PTR [rax],al
  40b307:	add    al,dl
  40b309:	sub    al,0x41
	...
  40b317:	add    BYTE PTR [rax],ch
  40b319:	test   BYTE PTR [rcx+0x0],0x0
  40b31d:	add    BYTE PTR [rax],al
  40b31f:	add    BYTE PTR [rip+0x41f6],bl        # 0x40f51b
  40b325:	add    BYTE PTR [rax],al
  40b327:	add    al,al
  40b329:	sub    al,0x41
  40b32b:	add    BYTE PTR [rax],al
  40b32d:	add    BYTE PTR [rax],al
  40b32f:	add    BYTE PTR [rcx],al
  40b331:	add    BYTE PTR [rax],al
  40b333:	add    BYTE PTR [rax+rax*1],al
  40b336:	add    BYTE PTR [rax],al
  40b338:	movabs al,ds:0x800000000000412c
  40b341:	sub    al,0x41
	...
  40b34f:	add    ch,ch
  40b351:	cmc    
  40b352:	add    BYTE PTR [r8],al
  40b355:	add    BYTE PTR [rax],al
  40b357:	add    bl,ah
  40b359:	cmc    
  40b35a:	add    BYTE PTR [r8],al
  40b35d:	add    BYTE PTR [rax],al
  40b35f:	add    BYTE PTR [rax+0x2c],dh
  40b362:	add    BYTE PTR [r8],al
  40b365:	add    BYTE PTR [rax],al
  40b367:	add    BYTE PTR [rcx],al
  40b369:	add    BYTE PTR [rax],al
  40b36b:	add    BYTE PTR [rax+rax*1],al
  40b36e:	add    BYTE PTR [rax],al
  40b370:	push   rax
  40b371:	sub    al,0x41
  40b373:	add    BYTE PTR [rax],al
  40b375:	add    BYTE PTR [rax],al
  40b377:	add    BYTE PTR [rax],dh
  40b379:	sub    al,0x41
	...
  40b387:	add    BYTE PTR [rbx+0x41f5],al
  40b38d:	add    BYTE PTR [rax],al
  40b38f:	add    BYTE PTR [rbp-0xb],dh
  40b392:	add    BYTE PTR [r8],al
  40b395:	add    BYTE PTR [rax],al
  40b397:	add    BYTE PTR [rax],ah
  40b399:	sub    al,0x41
  40b39b:	add    BYTE PTR [rax],al
  40b39d:	add    BYTE PTR [rax],al
  40b39f:	add    BYTE PTR [rcx],al
  40b3a1:	add    BYTE PTR [rax],al
  40b3a3:	add    BYTE PTR [rax+rax*1],al
  40b3a6:	add    BYTE PTR [rax],al
  40b3a8:	add    BYTE PTR [rcx+rax*2],ch
  40b3ab:	add    BYTE PTR [rax],al
  40b3ad:	add    BYTE PTR [rax],al
  40b3af:	add    al,ah
  40b3b1:	sub    eax,DWORD PTR [rcx+0x0]
	...
  40b3c0:	sub    eax,0x41f5
  40b3c5:	add    BYTE PTR [rax],al
  40b3c7:	add    al,al
  40b3c9:	hlt    
  40b3ca:	add    BYTE PTR [r8],al
  40b3cd:	add    BYTE PTR [rax],al
  40b3cf:	add    al,dl
  40b3d1:	sub    eax,DWORD PTR [rcx+0x0]
  40b3d4:	add    BYTE PTR [rax],al
  40b3d6:	add    BYTE PTR [rax],al
  40b3d8:	add    al,BYTE PTR [rax]
  40b3da:	add    BYTE PTR [rax],al
  40b3dc:	add    al,0x0
  40b3de:	add    BYTE PTR [rax],al
  40b3e0:	movabs al,ds:0x700000000000412b
  40b3e9:	sub    eax,DWORD PTR [rcx+0x0]
	...
  40b3f8:	xor    ah,0x41
  40b3fb:	add    BYTE PTR [rax],al
  40b3fd:	add    BYTE PTR [rax],al
  40b3ff:	add    BYTE PTR [rdi-0xc],ah
  40b402:	add    BYTE PTR [r8],al
  40b405:	add    BYTE PTR [rax],al
  40b407:	add    BYTE PTR [rax+0x2b],ah
  40b40a:	add    BYTE PTR [r8],al
  40b40d:	add    BYTE PTR [rax],al
  40b40f:	add    BYTE PTR [rcx],al
  40b411:	add    BYTE PTR [rax],al
  40b413:	add    BYTE PTR [rax+rax*1],al
  40b416:	add    BYTE PTR [rax],al
  40b418:	rex sub eax,DWORD PTR [rcx+0x0]
  40b41c:	add    BYTE PTR [rax],al
  40b41e:	add    BYTE PTR [rax],al
  40b420:	and    BYTE PTR [rbx],ch
  40b422:	add    BYTE PTR [r8],al
	...
  40b431:	hlt    
  40b432:	add    BYTE PTR [r8],al
  40b435:	add    BYTE PTR [rax],al
  40b437:	add    dh,ch
  40b439:	repz add BYTE PTR [r8],al
  40b43d:	add    BYTE PTR [rax],al
  40b43f:	add    BYTE PTR [rax],dl
  40b441:	sub    eax,DWORD PTR [rcx+0x0]
  40b444:	add    BYTE PTR [rax],al
  40b446:	add    BYTE PTR [rax],al
  40b448:	add    DWORD PTR [rax],eax
  40b44a:	add    BYTE PTR [rax],al
  40b44c:	add    al,0x0
  40b44e:	add    BYTE PTR [rax],al
  40b450:	lock sub al,BYTE PTR [rcx+0x0]
  40b454:	add    BYTE PTR [rax],al
  40b456:	add    BYTE PTR [rax],al
  40b458:	shr    BYTE PTR [rdx],1
  40b45a:	add    BYTE PTR [r8],al
	...
  40b465:	add    BYTE PTR [rax],al
  40b467:	add    al,al
  40b469:	repz add BYTE PTR [r8],al
  40b46d:	add    BYTE PTR [rax],al
  40b46f:	add    BYTE PTR [rdi+0x41f3],ch
  40b475:	add    BYTE PTR [rax],al
  40b477:	add    al,al
  40b479:	sub    al,BYTE PTR [rcx+0x0]
  40b47c:	add    BYTE PTR [rax],al
  40b47e:	add    BYTE PTR [rax],al
  40b480:	add    DWORD PTR [rax],eax
  40b482:	add    BYTE PTR [rax],al
  40b484:	add    al,0x0
  40b486:	add    BYTE PTR [rax],al
  40b488:	movabs al,ds:0x800000000000412a
  40b491:	sub    al,BYTE PTR [rcx+0x0]
	...
  40b4a0:	and    bl,dh
  40b4a2:	add    BYTE PTR [r8],al
  40b4a5:	add    BYTE PTR [rax],al
  40b4a7:	add    BYTE PTR [rsi],cl
  40b4a9:	repz add BYTE PTR [r8],al
  40b4ad:	add    BYTE PTR [rax],al
  40b4af:	add    BYTE PTR [rax+0x2a],dh
  40b4b2:	add    BYTE PTR [r8],al
  40b4b5:	add    BYTE PTR [rax],al
  40b4b7:	add    BYTE PTR [rcx],al
  40b4b9:	add    BYTE PTR [rax],al
  40b4bb:	add    BYTE PTR [rax+rax*1],al
  40b4be:	add    BYTE PTR [rax],al
  40b4c0:	push   rax
  40b4c1:	sub    al,BYTE PTR [rcx+0x0]
  40b4c4:	add    BYTE PTR [rax],al
  40b4c6:	add    BYTE PTR [rax],al
  40b4c8:	xor    BYTE PTR [rdx],ch
  40b4ca:	add    BYTE PTR [r8],al
	...
  40b4d5:	add    BYTE PTR [rax],al
  40b4d7:	add    BYTE PTR [rax+0x41f2],al
  40b4dd:	add    BYTE PTR [rax],al
  40b4df:	add    BYTE PTR [rax-0xe],dh
  40b4e2:	add    BYTE PTR [r8],al
  40b4e5:	add    BYTE PTR [rax],al
  40b4e7:	add    BYTE PTR [rax],ah
  40b4e9:	sub    al,BYTE PTR [rcx+0x0]
  40b4ec:	add    BYTE PTR [rax],al
  40b4ee:	add    BYTE PTR [rax],al
  40b4f0:	add    DWORD PTR [rax],eax
  40b4f2:	add    BYTE PTR [rax],al
  40b4f4:	add    al,0x0
  40b4f6:	add    BYTE PTR [rax],al
  40b4f8:	add    BYTE PTR [rdx],ch
  40b4fa:	add    BYTE PTR [r8],al
  40b4fd:	add    BYTE PTR [rax],al
  40b4ff:	add    al,ah
  40b501:	sub    DWORD PTR [rcx+0x0],eax
	...
  40b510:	stc    
  40b511:	icebp  
  40b512:	add    BYTE PTR [r8],al
  40b515:	add    BYTE PTR [rax],al
  40b517:	add    dh,ch
  40b519:	icebp  
  40b51a:	add    BYTE PTR [r8],al
	...
  40b525:	add    BYTE PTR [rax],al
  40b527:	add    BYTE PTR [rcx],al
  40b529:	add    BYTE PTR [rax],al
  40b52b:	add    BYTE PTR [rax+rax*1],al
  40b52e:	add    BYTE PTR [rax],al
  40b530:	shr    BYTE PTR [rcx],0x41
  40b533:	add    BYTE PTR [rax],al
  40b535:	add    BYTE PTR [rax],al
  40b537:	add    BYTE PTR [rax+0x4129],ah
	...
  40b545:	add    BYTE PTR [rax],al
  40b547:	add    BYTE PTR [rdi+0x41f1],ah
  40b54d:	add    BYTE PTR [rax],al
  40b54f:	add    BYTE PTR [rax+0x41f1],dl
  40b555:	add    BYTE PTR [rax],al
  40b557:	add    BYTE PTR [rax+0x4129],dl
  40b55d:	add    BYTE PTR [rax],al
  40b55f:	add    BYTE PTR [rcx],al
  40b561:	add    BYTE PTR [rax],al
  40b563:	add    BYTE PTR [rax+rax*1],al
  40b566:	add    BYTE PTR [rax],al
  40b568:	jo     0x40b593
  40b56a:	add    BYTE PTR [r8],al
  40b56d:	add    BYTE PTR [rax],al
  40b56f:	add    BYTE PTR [rax+0x29],dl
  40b572:	add    BYTE PTR [r8],al
	...
  40b57d:	add    BYTE PTR [rax],al
  40b57f:	add    bh,dh
  40b581:	lock add BYTE PTR [r8],al
  40b585:	add    BYTE PTR [rax],al
  40b587:	add    al,ah
  40b589:	lock add BYTE PTR [r8],al
  40b58d:	add    BYTE PTR [rax],al
  40b58f:	add    BYTE PTR [rax+0x29],al
  40b592:	add    BYTE PTR [r8],al
  40b595:	add    BYTE PTR [rax],al
  40b597:	add    BYTE PTR [rcx],al
  40b599:	add    BYTE PTR [rax],al
  40b59b:	add    BYTE PTR [rax+rax*1],al
  40b59e:	add    BYTE PTR [rax],al
  40b5a0:	and    BYTE PTR [rcx],ch
  40b5a2:	add    BYTE PTR [r8],al
  40b5a5:	add    BYTE PTR [rax],al
  40b5a7:	add    BYTE PTR [rax],al
  40b5a9:	sub    DWORD PTR [rcx+0x0],eax
	...
  40b5b8:	imul   esi
  40b5ba:	add    BYTE PTR [r8],al
  40b5bd:	add    BYTE PTR [rax],al
  40b5bf:	add    al,ah
  40b5c1:	out    dx,al
  40b5c2:	add    BYTE PTR [r8],al
  40b5c5:	add    BYTE PTR [rax],al
  40b5c7:	add    al,dh
  40b5c9:	sub    BYTE PTR [rcx+0x0],al
  40b5cc:	add    BYTE PTR [rax],al
  40b5ce:	add    BYTE PTR [rax],al
  40b5d0:	add    DWORD PTR [rax],eax
  40b5d2:	add    BYTE PTR [rax],al
  40b5d4:	add    al,0x0
  40b5d6:	add    BYTE PTR [rax],al
  40b5d8:	shr    BYTE PTR [rax],1
  40b5da:	add    BYTE PTR [r8],al
  40b5dd:	add    BYTE PTR [rax],al
  40b5df:	add    BYTE PTR [rax+0x4128],dh
	...
  40b5ed:	add    BYTE PTR [rax],al
  40b5ef:	add    BYTE PTR [rdi-0x13],ah
  40b5f2:	add    BYTE PTR [r8],al
  40b5f5:	add    BYTE PTR [rax],al
  40b5f7:	add    BYTE PTR [rax-0x13],dl
  40b5fa:	add    BYTE PTR [r8],al
  40b5fd:	add    BYTE PTR [rax],al
  40b5ff:	add    BYTE PTR [rax+0x4128],ah
  40b605:	add    BYTE PTR [rax],al
  40b607:	add    BYTE PTR [rcx],al
  40b609:	add    BYTE PTR [rax],al
  40b60b:	add    BYTE PTR [rax+rax*1],al
  40b60e:	add    BYTE PTR [rax],al
  40b610:	sub    BYTE PTR [rax],0x41
  40b613:	add    BYTE PTR [rax],al
  40b615:	add    BYTE PTR [rax],al
  40b617:	add    BYTE PTR [rax+0x28],ah
  40b61a:	add    BYTE PTR [r8],al
	...
  40b625:	add    BYTE PTR [rax],al
  40b627:	add    BYTE PTR [rdi+0x41ec],al
  40b62d:	add    BYTE PTR [rax],al
  40b62f:	add    BYTE PTR [rax-0x14],dh
  40b632:	add    BYTE PTR [r8],al
  40b635:	add    BYTE PTR [rax],al
  40b637:	add    BYTE PTR [rax+0x28],dl
  40b63a:	add    BYTE PTR [r8],al
  40b63d:	add    BYTE PTR [rax],al
  40b63f:	add    BYTE PTR [rcx],al
  40b641:	add    BYTE PTR [rax],al
  40b643:	add    BYTE PTR [rax+rax*1],al
  40b646:	add    BYTE PTR [rax],al
  40b648:	xor    BYTE PTR [rax],ch
  40b64a:	add    BYTE PTR [r8],al
  40b64d:	add    BYTE PTR [rax],al
  40b64f:	add    BYTE PTR [rax],dl
  40b651:	sub    BYTE PTR [rcx+0x0],al
	...
  40b660:	nop
  40b661:	jmp    0x40b6a4
  40b663:	add    BYTE PTR [rax],al
  40b665:	add    BYTE PTR [rax],al
  40b667:	add    BYTE PTR [rcx+0x41eb],al
	...
  40b675:	add    BYTE PTR [rax],al
  40b677:	add    BYTE PTR [rcx],al
  40b679:	add    BYTE PTR [rax],al
  40b67b:	add    BYTE PTR [rax+rax*1],al
  40b67e:	add    BYTE PTR [rax],al
  40b680:	lock (bad) 
  40b682:	add    BYTE PTR [r8],al
  40b685:	add    BYTE PTR [rax],al
  40b687:	add    al,dl
  40b689:	(bad)  
  40b68a:	add    BYTE PTR [r8],al
	...
  40b695:	add    BYTE PTR [rax],al
  40b697:	add    BYTE PTR [rdx-0x15],ch
  40b69a:	add    BYTE PTR [r8],al
  40b69d:	add    BYTE PTR [rax],al
  40b69f:	add    BYTE PTR [rsi-0x15],bl
  40b6a2:	add    BYTE PTR [r8],al
	...
  40b6ad:	add    BYTE PTR [rax],al
  40b6af:	add    BYTE PTR [rcx],al
  40b6b1:	add    BYTE PTR [rax],al
  40b6b3:	add    BYTE PTR [rax+rax*1],al
  40b6b6:	add    BYTE PTR [rax],al
  40b6b8:	mov    al,0x27
  40b6ba:	add    BYTE PTR [r8],al
  40b6bd:	add    BYTE PTR [rax],al
  40b6bf:	add    BYTE PTR [rax+0x4127],dl
	...
  40b6cd:	add    BYTE PTR [rax],al
  40b6cf:	add    al,dh
  40b6d1:	(bad)  
  40b6d2:	add    BYTE PTR [r8],al
  40b6d5:	add    BYTE PTR [rax],al
  40b6d7:	add    dl,ah
  40b6d9:	(bad)  
  40b6da:	add    BYTE PTR [r8],al
	...
  40b6e5:	add    BYTE PTR [rax],al
  40b6e7:	add    BYTE PTR [rcx],al
  40b6e9:	add    BYTE PTR [rax],al
  40b6eb:	add    BYTE PTR [rax+rax*1],al
  40b6ee:	add    BYTE PTR [rax],al
  40b6f0:	jo     0x40b719
  40b6f2:	add    BYTE PTR [r8],al
  40b6f5:	add    BYTE PTR [rax],al
  40b6f7:	add    BYTE PTR [rax+0x27],dl
  40b6fa:	add    BYTE PTR [r8],al
	...
  40b705:	add    BYTE PTR [rax],al
  40b707:	add    BYTE PTR [rdx+rbp*8+0x41],cl
  40b70e:	add    BYTE PTR [rax],al
  40b710:	(bad)  
  40b711:	(bad)  
  40b712:	add    BYTE PTR [r8],al
	...
  40b71d:	add    BYTE PTR [rax],al
  40b71f:	add    BYTE PTR [rcx],al
  40b721:	add    BYTE PTR [rax],al
  40b723:	add    BYTE PTR [rax+rax*1],al
  40b726:	add    BYTE PTR [rax],al
  40b728:	xor    BYTE PTR [rdi],ah
  40b72a:	add    BYTE PTR [r8],al
  40b72d:	add    BYTE PTR [rax],al
  40b72f:	add    BYTE PTR [rax],dl
  40b731:	(bad)  
  40b732:	add    BYTE PTR [r8],al
	...
  40b73d:	add    BYTE PTR [rax],al
  40b73f:	add    BYTE PTR [rdx],bl
  40b741:	(bad)  
  40b742:	add    BYTE PTR [r8],al
  40b745:	add    BYTE PTR [rax],al
  40b747:	add    BYTE PTR [rax],dl
  40b749:	(bad)  
  40b74a:	add    BYTE PTR [r8],al
	...
  40b755:	add    BYTE PTR [rax],al
  40b757:	add    BYTE PTR [rcx],al
  40b759:	add    BYTE PTR [rax],al
  40b75b:	add    BYTE PTR [rax+rax*1],al
  40b75e:	add    BYTE PTR [rax],al
  40b760:	lock add BYTE PTR es:[r8],al
  40b765:	add    BYTE PTR [rax],al
  40b767:	add    al,dl
  40b769:	add    BYTE PTR es:[r8],al
	...
  40b775:	add    BYTE PTR [rax],al
  40b777:	add    dl,al
  40b779:	jmp    0x40b7bf
  40b77e:	add    BYTE PTR [rax],al
  40b780:	mov    al,0xe9
  40b782:	add    BYTE PTR [r8],al
	...
  40b78d:	add    BYTE PTR [rax],al
  40b78f:	add    BYTE PTR [rcx],al
  40b791:	add    BYTE PTR [rax],al
  40b793:	add    BYTE PTR [rax+rax*1],al
  40b796:	add    BYTE PTR [rax],al
  40b798:	mov    al,0x26
  40b79a:	add    BYTE PTR [r8],al
  40b79d:	add    BYTE PTR [rax],al
  40b79f:	add    BYTE PTR [rax+0x4126],dl
	...
  40b7ad:	add    BYTE PTR [rax],al
  40b7af:	add    BYTE PTR [rax],ah
  40b7b1:	jmp    0x40b7f7
  40b7b6:	add    BYTE PTR [rax],al
  40b7b8:	or     ebp,ecx
  40b7ba:	add    BYTE PTR [r8],al
	...
  40b7c5:	add    BYTE PTR [rax],al
  40b7c7:	add    BYTE PTR [rcx],al
  40b7c9:	add    BYTE PTR [rax],al
  40b7cb:	add    BYTE PTR [rax+rax*1],al
  40b7ce:	add    BYTE PTR [rax],al
  40b7d0:	jo     0x40b7f8
  40b7d2:	add    BYTE PTR [r8],al
  40b7d5:	add    BYTE PTR [rax],al
  40b7d7:	add    BYTE PTR [rax+0x26],dl
  40b7da:	add    BYTE PTR [r8],al
	...
  40b7e5:	add    BYTE PTR [rax],al
  40b7e7:	add    BYTE PTR [rbx+0x41e8],bl
  40b7ed:	add    BYTE PTR [rax],al
  40b7ef:	add    BYTE PTR [rax+rbp*8+0x41],dl
	...
  40b7fe:	add    BYTE PTR [rax],al
  40b800:	add    DWORD PTR [rax],eax
  40b802:	add    BYTE PTR [rax],al
  40b804:	add    al,0x0
  40b806:	add    BYTE PTR [rax],al
  40b808:	xor    BYTE PTR [rsi],ah
  40b80a:	add    BYTE PTR [r8],al
  40b80d:	add    BYTE PTR [rax],al
  40b80f:	add    BYTE PTR [rax],dl
  40b811:	add    BYTE PTR es:[r8],al
	...
  40b81d:	add    BYTE PTR [rax],al
  40b81f:	add    BYTE PTR [rsi-0x18],dl
  40b822:	add    BYTE PTR [r8],al
  40b825:	add    BYTE PTR [rax],al
  40b827:	add    BYTE PTR [rax+rbp*8+0x41],cl
	...
  40b837:	add    BYTE PTR [rcx],al
  40b839:	add    BYTE PTR [rax],al
  40b83b:	add    BYTE PTR [rax+rax*1],al
  40b83e:	add    BYTE PTR [rax],al
  40b840:	lock and eax,0x41
  40b846:	add    BYTE PTR [rax],al
  40b848:	shl    BYTE PTR [rip+0x41],1        # 0x40b88f
	...
  40b856:	add    BYTE PTR [rax],al
  40b858:	adc    al,ch
  40b85a:	add    BYTE PTR [r8],al
  40b85d:	add    BYTE PTR [rax],al
  40b85f:	add    al,ah
  40b861:	out    0x41,eax
	...
  40b86f:	add    BYTE PTR [rdx],al
  40b871:	add    BYTE PTR [rax],al
  40b873:	add    BYTE PTR [rax+rax*1],al
  40b876:	add    BYTE PTR [rax],al
  40b878:	movabs al,ds:0x8000000000004125
  40b881:	and    eax,0x41
	...
  40b88e:	add    BYTE PTR [rax],al
  40b890:	jo     0x40b879
  40b892:	add    BYTE PTR [r8],al
  40b895:	add    BYTE PTR [rax],al
  40b897:	add    BYTE PTR [rax-0x19],al
  40b89a:	add    BYTE PTR [r8],al
	...
  40b8a5:	add    BYTE PTR [rax],al
  40b8a7:	add    BYTE PTR [rdx],al
  40b8a9:	add    BYTE PTR [rax],al
  40b8ab:	add    BYTE PTR [rax+rax*1],al
  40b8ae:	add    BYTE PTR [rax],al
  40b8b0:	rex and eax,0x41
  40b8b6:	add    BYTE PTR [rax],al
  40b8b8:	and    BYTE PTR [rip+0x41],ah        # 0x40b8ff
	...
  40b8c6:	add    BYTE PTR [rax],al
  40b8c8:	shl    dh,1
  40b8ca:	add    BYTE PTR [r8],al
	...
  40b8dd:	add    BYTE PTR [rax],al
  40b8df:	add    BYTE PTR [rax+rax*1],al
  40b8e2:	add    BYTE PTR [rax],al
  40b8e4:	add    al,0x0
  40b8e6:	add    BYTE PTR [rax],al
  40b8e8:	shl    BYTE PTR [rcx+rax*2],0x0
  40b8ec:	add    BYTE PTR [rax],al
  40b8ee:	add    BYTE PTR [rax],al
  40b8f0:	nop
  40b8f1:	and    al,0x41
	...
  40b8ff:	add    BYTE PTR [rax-0x1a],al
  40b902:	add    BYTE PTR [r8],al
  40b905:	add    BYTE PTR [rax],al
  40b907:	add    BYTE PTR [rax],ch
  40b909:	out    0x41,al
	...
  40b917:	add    BYTE PTR [rcx],al
  40b919:	add    BYTE PTR [rax],al
  40b91b:	add    BYTE PTR [rax+rax*1],al
  40b91e:	add    BYTE PTR [rax],al
  40b920:	jo     0x40b946
  40b922:	add    BYTE PTR [r8],al
  40b925:	add    BYTE PTR [rax],al
  40b927:	add    BYTE PTR [rax+0x24],dl
  40b92a:	add    BYTE PTR [r8],al
	...
  40b935:	add    BYTE PTR [rax],al
  40b937:	add    ch,dl
  40b939:	in     eax,0x41
  40b93b:	add    BYTE PTR [rax],al
  40b93d:	add    BYTE PTR [rax],al
  40b93f:	add    al,al
  40b941:	in     eax,0x41
	...
  40b94f:	add    BYTE PTR [rcx],al
  40b951:	add    BYTE PTR [rax],al
  40b953:	add    BYTE PTR [rax+rax*1],al
  40b956:	add    BYTE PTR [rax],al
  40b958:	xor    BYTE PTR [rcx+rax*2],ah
  40b95b:	add    BYTE PTR [rax],al
  40b95d:	add    BYTE PTR [rax],al
  40b95f:	add    BYTE PTR [rax],dl
  40b961:	and    al,0x41
	...
  40b96f:	add    BYTE PTR [rax+0x41e5],dl
  40b975:	add    BYTE PTR [rax],al
  40b977:	add    BYTE PTR [rcx-0x1b],bh
  40b97a:	add    BYTE PTR [r8],al
	...
  40b985:	add    BYTE PTR [rax],al
  40b987:	add    BYTE PTR [rdx],al
  40b989:	add    BYTE PTR [rax],al
  40b98b:	add    BYTE PTR [rax+rax*1],al
  40b98e:	add    BYTE PTR [rax],al
  40b990:	loopne 0x40b9b5
  40b992:	add    BYTE PTR [r8],al
  40b995:	add    BYTE PTR [rax],al
  40b997:	add    BYTE PTR [rax+0x4123],dh
	...
  40b9a5:	add    BYTE PTR [rax],al
  40b9a7:	add    BYTE PTR [rax],dh
  40b9a9:	in     eax,0x41
  40b9ab:	add    BYTE PTR [rax],al
  40b9ad:	add    BYTE PTR [rax],al
  40b9af:	add    BYTE PTR [rbx],ah
  40b9b1:	in     eax,0x41
	...
  40b9bf:	add    BYTE PTR [rdx],al
  40b9c1:	add    BYTE PTR [rax],al
  40b9c3:	add    BYTE PTR [rax+rax*1],al
  40b9c6:	add    BYTE PTR [rax],al
  40b9c8:	and    BYTE PTR [rbx],0x41
  40b9cb:	add    BYTE PTR [rax],al
  40b9cd:	add    BYTE PTR [rax],al
  40b9cf:	add    BYTE PTR [rax+0x23],dl
  40b9d2:	add    BYTE PTR [r8],al
	...
  40b9dd:	add    BYTE PTR [rax],al
  40b9df:	add    BYTE PTR [rsi+0x41e4],ch
  40b9e5:	add    BYTE PTR [rax],al
  40b9e7:	add    BYTE PTR [rax+0x41e4],dl
	...
  40b9f5:	add    BYTE PTR [rax],al
  40b9f7:	add    BYTE PTR [rcx],al
  40b9f9:	add    BYTE PTR [rax],al
  40b9fb:	add    BYTE PTR [rax],al
  40b9fd:	add    BYTE PTR [rax],al
  40b9ff:	add    BYTE PTR [rax],dh
  40ba01:	and    eax,DWORD PTR [rcx+0x0]
  40ba04:	add    BYTE PTR [rax],al
  40ba06:	add    BYTE PTR [rax],al
  40ba08:	add    BYTE PTR [rbx],ah
  40ba0a:	add    BYTE PTR [r8],al
	...
  40ba15:	add    BYTE PTR [rax],al
  40ba17:	add    bh,ch
  40ba19:	jrcxz  0x40ba5c
  40ba1b:	add    BYTE PTR [rax],al
  40ba1d:	add    BYTE PTR [rax],al
  40ba1f:	add    al,al
  40ba21:	jrcxz  0x40ba64
	...
  40ba2f:	add    BYTE PTR [rdx],al
  40ba31:	add    BYTE PTR [rax],al
  40ba33:	add    BYTE PTR [rax+rax*1],al
  40ba36:	add    BYTE PTR [rax],al
  40ba38:	shl    BYTE PTR [rdx],0x41
  40ba3b:	add    BYTE PTR [rax],al
  40ba3d:	add    BYTE PTR [rax],al
  40ba3f:	add    BYTE PTR [rax+0x4122],dl
	...
  40ba4d:	add    BYTE PTR [rax],al
  40ba4f:	add    BYTE PTR [rax-0x1d],dl
  40ba52:	add    BYTE PTR [r8],al
  40ba55:	add    BYTE PTR [rax],al
  40ba57:	add    BYTE PTR [rcx-0x1d],al
  40ba5a:	add    BYTE PTR [r8],al
  40ba5d:	add    BYTE PTR [rax],al
  40ba5f:	add    BYTE PTR [rax+0x22],dh
  40ba62:	add    BYTE PTR [r8],al
  40ba65:	add    BYTE PTR [rax],al
  40ba67:	add    BYTE PTR [rcx],al
  40ba69:	add    BYTE PTR [rax],al
  40ba6b:	add    BYTE PTR [rax+rax*1],al
  40ba6e:	add    BYTE PTR [rax],al
  40ba70:	push   rax
  40ba71:	and    al,BYTE PTR [rcx+0x0]
  40ba74:	add    BYTE PTR [rax],al
  40ba76:	add    BYTE PTR [rax],al
  40ba78:	xor    BYTE PTR [rdx],ah
  40ba7a:	add    BYTE PTR [r8],al
	...
  40ba85:	add    BYTE PTR [rax],al
  40ba87:	add    BYTE PTR [rax],dl
  40ba89:	loop   0x40bacc
  40ba8b:	add    BYTE PTR [rax],al
  40ba8d:	add    BYTE PTR [rax],al
  40ba8f:	add    al,dh
  40ba91:	loope  0x40bad4
	...
  40ba9f:	add    BYTE PTR [rcx],al
  40baa1:	add    BYTE PTR [rax],al
  40baa3:	add    BYTE PTR [rax+rax*1],al
  40baa6:	add    BYTE PTR [rax],al
  40baa8:	adc    BYTE PTR [rdx],ah
  40baaa:	add    BYTE PTR [r8],al
  40baad:	add    BYTE PTR [rax],al
  40baaf:	add    al,dh
  40bab1:	and    DWORD PTR [rcx+0x0],eax
	...
  40bac0:	jo     0x40baa3
  40bac2:	add    BYTE PTR [r8],al
	...
  40bad5:	add    BYTE PTR [rax],al
  40bad7:	add    BYTE PTR [rcx],al
  40bad9:	add    BYTE PTR [rax],al
  40badb:	add    BYTE PTR [rax+rax*1],al
  40bade:	add    BYTE PTR [rax],al
  40bae0:	shl    BYTE PTR [rcx],1
  40bae2:	add    BYTE PTR [r8],al
  40bae5:	add    BYTE PTR [rax],al
  40bae7:	add    BYTE PTR [rax+0x4121],dh
	...
  40baf5:	add    BYTE PTR [rax],al
  40baf7:	add    BYTE PTR [rax],ah
  40baf9:	loope  0x40bb3c
	...
  40bb0f:	add    BYTE PTR [rcx],al
  40bb11:	add    BYTE PTR [rax],al
  40bb13:	add    BYTE PTR [rax+rax*1],al
  40bb16:	add    BYTE PTR [rax],al
  40bb18:	nop
  40bb19:	and    DWORD PTR [rcx+0x0],eax
  40bb1c:	add    BYTE PTR [rax],al
  40bb1e:	add    BYTE PTR [rax],al
  40bb20:	jo     0x40bb43
  40bb22:	add    BYTE PTR [r8],al
	...
  40bb2d:	add    BYTE PTR [rax],al
  40bb2f:	add    al,cl
  40bb31:	loopne 0x40bb74
  40bb33:	add    BYTE PTR [rax],al
  40bb35:	add    BYTE PTR [rax],al
  40bb37:	add    BYTE PTR [rax+0x41e0],dh
	...
  40bb45:	add    BYTE PTR [rax],al
  40bb47:	add    BYTE PTR [rdx],al
  40bb49:	add    BYTE PTR [rax],al
  40bb4b:	add    BYTE PTR [rax+rax*1],al
  40bb4e:	add    BYTE PTR [rax],al
  40bb50:	rex and DWORD PTR [rcx+0x0],eax
  40bb54:	add    BYTE PTR [rax],al
  40bb56:	add    BYTE PTR [rax],al
  40bb58:	and    BYTE PTR [rcx],ah
  40bb5a:	add    BYTE PTR [r8],al
	...
  40bb65:	add    BYTE PTR [rax],al
  40bb67:	add    BYTE PTR [rax-0x20],ah
  40bb6a:	add    BYTE PTR [r8],al
  40bb6d:	add    BYTE PTR [rax],al
  40bb6f:	add    BYTE PTR [rax-0x20],dl
  40bb72:	add    BYTE PTR [r8],al
  40bb75:	add    BYTE PTR [rax],al
  40bb77:	add    BYTE PTR [rax],al
  40bb79:	and    DWORD PTR [rcx+0x0],eax
  40bb7c:	add    BYTE PTR [rax],al
  40bb7e:	add    BYTE PTR [rax],al
  40bb80:	add    DWORD PTR [rax],eax
  40bb82:	add    BYTE PTR [rax],al
  40bb84:	add    al,0x0
  40bb86:	add    BYTE PTR [rax],al
  40bb88:	loopne 0x40bbaa
  40bb8a:	add    BYTE PTR [r8],al
  40bb8d:	add    BYTE PTR [rax],al
  40bb8f:	add    al,al
  40bb91:	and    BYTE PTR [rcx+0x0],al
	...
  40bba0:	fstp   st(7)
  40bba2:	add    BYTE PTR [r8],al
  40bba5:	add    BYTE PTR [rax],al
  40bba7:	add    BYTE PTR [rax+0x41df],al
  40bbad:	add    BYTE PTR [rax],al
  40bbaf:	add    BYTE PTR [rax+0x4120],dh
  40bbb5:	add    BYTE PTR [rax],al
  40bbb7:	add    BYTE PTR [rdx],al
  40bbb9:	add    BYTE PTR [rax],al
  40bbbb:	add    BYTE PTR [rax+rax*1],al
  40bbbe:	add    BYTE PTR [rax],al
  40bbc0:	and    BYTE PTR [rax],0x41
  40bbc3:	add    BYTE PTR [rax],al
  40bbc5:	add    BYTE PTR [rax],al
  40bbc7:	add    BYTE PTR [rax+0x20],ah
  40bbca:	add    BYTE PTR [r8],al
	...
  40bbd5:	add    BYTE PTR [rax],al
  40bbd7:	add    al,dl
  40bbd9:	fiadd  WORD PTR [rcx+0x0]
  40bbdc:	add    BYTE PTR [rax],al
  40bbde:	add    BYTE PTR [rax],al
  40bbe0:	mov    al,0xde
  40bbe2:	add    BYTE PTR [r8],al
  40bbe5:	add    BYTE PTR [rax],al
  40bbe7:	add    BYTE PTR [rax+0x20],dl
  40bbea:	add    BYTE PTR [r8],al
  40bbed:	add    BYTE PTR [rax],al
  40bbef:	add    BYTE PTR [rcx],al
  40bbf1:	add    BYTE PTR [rax],al
  40bbf3:	add    BYTE PTR [rax+rax*1],al
  40bbf6:	add    BYTE PTR [rax],al
  40bbf8:	xor    BYTE PTR [rax],ah
  40bbfa:	add    BYTE PTR [r8],al
  40bbfd:	add    BYTE PTR [rax],al
  40bbff:	add    BYTE PTR [rax],dl
  40bc01:	and    BYTE PTR [rcx+0x0],al
	...
  40bc10:	and    dh,bl
  40bc12:	add    BYTE PTR [r8],al
  40bc15:	add    BYTE PTR [rax],al
  40bc17:	add    BYTE PTR [rdx],al
  40bc19:	fiadd  WORD PTR [rcx+0x0]
  40bc1c:	add    BYTE PTR [rax],al
  40bc1e:	add    BYTE PTR [rax],al
  40bc20:	add    BYTE PTR [rax],ah
  40bc22:	add    BYTE PTR [r8],al
  40bc25:	add    BYTE PTR [rax],al
  40bc27:	add    BYTE PTR [rcx],al
  40bc29:	add    BYTE PTR [rax],al
  40bc2b:	add    BYTE PTR [rax+rax*1],al
  40bc2e:	add    BYTE PTR [rax],al
  40bc30:	loopne 0x40bc51
  40bc32:	add    BYTE PTR [r8],al
  40bc35:	add    BYTE PTR [rax],al
  40bc37:	add    al,al
  40bc39:	(bad)  
  40bc3a:	add    BYTE PTR [r8],al
	...
  40bc45:	add    BYTE PTR [rax],al
  40bc47:	add    BYTE PTR [rax+0x41dd],dh
  40bc4d:	add    BYTE PTR [rax],al
  40bc4f:	add    BYTE PTR [rax+0x41dd],dl
  40bc55:	add    BYTE PTR [rax],al
  40bc57:	add    BYTE PTR [rax+0x411f],dh
  40bc5d:	add    BYTE PTR [rax],al
  40bc5f:	add    BYTE PTR [rcx],al
  40bc61:	add    BYTE PTR [rax],al
  40bc63:	add    BYTE PTR [rax+rax*1],al
  40bc66:	add    BYTE PTR [rax],al
  40bc68:	nop
  40bc69:	(bad)  
  40bc6a:	add    BYTE PTR [r8],al
  40bc6d:	add    BYTE PTR [rax],al
  40bc6f:	add    BYTE PTR [rax+0x1f],dh
  40bc72:	add    BYTE PTR [r8],al
	...
  40bc7d:	add    BYTE PTR [rax],al
  40bc7f:	add    al,dl
  40bc81:	fadd   QWORD PTR [rcx+0x0]
  40bc84:	add    BYTE PTR [rax],al
  40bc86:	add    BYTE PTR [rax],al
  40bc88:	mov    al,0xdc
  40bc8a:	add    BYTE PTR [r8],al
  40bc8d:	add    BYTE PTR [rax],al
  40bc8f:	add    BYTE PTR [rax+0x1f],ah
  40bc92:	add    BYTE PTR [r8],al
  40bc95:	add    BYTE PTR [rax],al
  40bc97:	add    BYTE PTR [rcx],al
  40bc99:	add    BYTE PTR [rax],al
  40bc9b:	add    BYTE PTR [rax+rax*1],al
  40bc9e:	add    BYTE PTR [rax],al
  40bca0:	rex (bad) 
  40bca2:	add    BYTE PTR [r8],al
  40bca5:	add    BYTE PTR [rax],al
  40bca7:	add    BYTE PTR [rax],ah
  40bca9:	(bad)  
  40bcaa:	add    BYTE PTR [r8],al
	...
  40bcb5:	add    BYTE PTR [rax],al
  40bcb7:	add    BYTE PTR [rax],dl
  40bcb9:	fild   DWORD PTR [rcx+0x0]
  40bcbc:	add    BYTE PTR [rax],al
  40bcbe:	add    BYTE PTR [rax],al
  40bcc0:	lock fiadd DWORD PTR [rcx+0x0]
  40bcc4:	add    BYTE PTR [rax],al
  40bcc6:	add    BYTE PTR [rax],al
  40bcc8:	adc    BYTE PTR [rdi],bl
  40bcca:	add    BYTE PTR [r8],al
  40bccd:	add    BYTE PTR [rax],al
  40bccf:	add    BYTE PTR [rcx],al
  40bcd1:	add    BYTE PTR [rax],al
  40bcd3:	add    BYTE PTR [rax+rax*1],al
  40bcd6:	add    BYTE PTR [rax],al
  40bcd8:	lock (bad) 
  40bcda:	add    BYTE PTR [r8],al
  40bcdd:	add    BYTE PTR [rax],al
  40bcdf:	add    al,dl
  40bce1:	(bad)  
  40bce2:	add    BYTE PTR [r8],al
	...
  40bced:	add    BYTE PTR [rax],al
  40bcef:	add    al,dl
  40bcf1:	fld    DWORD PTR [rcx+0x0]
  40bcf4:	add    BYTE PTR [rax],al
  40bcf6:	add    BYTE PTR [rax],al
  40bcf8:	mov    al,0xd9
  40bcfa:	add    BYTE PTR [r8],al
  40bcfd:	add    BYTE PTR [rax],al
  40bcff:	add    al,al
  40bd01:	(bad)  
  40bd02:	add    BYTE PTR [r8],al
  40bd05:	add    BYTE PTR [rax],al
  40bd07:	add    BYTE PTR [rcx],al
  40bd09:	add    BYTE PTR [rax],al
  40bd0b:	add    BYTE PTR [rax+rax*1],al
  40bd0e:	add    BYTE PTR [rax],al
  40bd10:	movabs al,ds:0x800000000000411e
  40bd19:	(bad)  
  40bd1a:	add    BYTE PTR [r8],al
	...
  40bd25:	add    BYTE PTR [rax],al
  40bd27:	add    BYTE PTR [rax+0x41d8],dl
  40bd2d:	add    BYTE PTR [rax],al
  40bd2f:	add    BYTE PTR [rax-0x28],dh
  40bd32:	add    BYTE PTR [r8],al
  40bd35:	add    BYTE PTR [rax],al
  40bd37:	add    BYTE PTR [rax+0x1e],dh
  40bd3a:	add    BYTE PTR [r8],al
  40bd3d:	add    BYTE PTR [rax],al
  40bd3f:	add    BYTE PTR [rcx],al
  40bd41:	add    BYTE PTR [rax],al
  40bd43:	add    BYTE PTR [rax+rax*1],al
  40bd46:	add    BYTE PTR [rax],al
  40bd48:	push   rax
  40bd49:	(bad)  
  40bd4a:	add    BYTE PTR [r8],al
  40bd4d:	add    BYTE PTR [rax],al
  40bd4f:	add    BYTE PTR [rax],dh
  40bd51:	(bad)  
  40bd52:	add    BYTE PTR [r8],al
	...
  40bd5d:	add    BYTE PTR [rax],al
  40bd5f:	add    BYTE PTR [rax+0x41d6],dl
  40bd65:	add    BYTE PTR [rax],al
  40bd67:	add    BYTE PTR [rax-0x2a],dh
  40bd6a:	add    BYTE PTR [r8],al
  40bd6d:	add    BYTE PTR [rax],al
  40bd6f:	add    BYTE PTR [rax],ah
  40bd71:	(bad)  
  40bd72:	add    BYTE PTR [r8],al
  40bd75:	add    BYTE PTR [rax],al
  40bd77:	add    BYTE PTR [rcx],al
  40bd79:	add    BYTE PTR [rax],al
  40bd7b:	add    BYTE PTR [rax+rax*1],al
  40bd7e:	add    BYTE PTR [rax],al
  40bd80:	add    BYTE PTR [rsi],bl
  40bd82:	add    BYTE PTR [r8],al
  40bd85:	add    BYTE PTR [rax],al
  40bd87:	add    al,ah
  40bd89:	sbb    eax,0x41
	...
  40bd96:	add    BYTE PTR [rax],al
  40bd98:	rcl    ah,0x41
  40bd9b:	add    BYTE PTR [rax],al
  40bd9d:	add    BYTE PTR [rax],al
  40bd9f:	add    BYTE PTR [rax+0x41d4],ah
  40bda5:	add    BYTE PTR [rax],al
  40bda7:	add    al,dl
  40bda9:	sbb    eax,0x41
  40bdae:	add    BYTE PTR [rax],al
  40bdb0:	add    DWORD PTR [rax],eax
  40bdb2:	add    BYTE PTR [rax],al
  40bdb4:	add    al,0x0
  40bdb6:	add    BYTE PTR [rax],al
  40bdb8:	mov    al,0x1d
  40bdba:	add    BYTE PTR [r8],al
  40bdbd:	add    BYTE PTR [rax],al
  40bdbf:	add    BYTE PTR [rax+0x411d],dl
	...
  40bdcd:	add    BYTE PTR [rax],al
  40bdcf:	add    BYTE PTR [rax-0x2d],bh
  40bdd2:	add    BYTE PTR [r8],al
  40bdd5:	add    BYTE PTR [rax],al
  40bdd7:	add    BYTE PTR [rdi-0x2d],ch
  40bdda:	add    BYTE PTR [r8],al
	...
  40bdf5:	add    BYTE PTR [rax],al
  40bdf7:	add    BYTE PTR [rax+0x1d],ah
  40bdfa:	add    BYTE PTR [r8],al
	...
  40be05:	add    BYTE PTR [rax],al
  40be07:	add    BYTE PTR [rdx],al
  40be09:	rol    DWORD PTR [rcx+0x0],cl
	...
  40be20:	add    al,BYTE PTR [rax]
  40be22:	add    BYTE PTR [rax],al
  40be24:	add    al,0x0
  40be26:	add    BYTE PTR [rax],al
  40be28:	and    BYTE PTR [rip+0x41],bl        # 0x40be6f
  40be2e:	add    BYTE PTR [rax],al
  40be30:	add    BYTE PTR [rip+0x41],bl        # 0x40be77
	...
  40be3e:	add    BYTE PTR [rax],al
  40be40:	lods   eax,DWORD PTR ds:[rsi]
  40be41:	rol    BYTE PTR [rcx+0x0],cl
  40be44:	add    BYTE PTR [rax],al
  40be46:	add    BYTE PTR [rax],al
  40be48:	adc    dl,0x41
	...
  40be57:	add    BYTE PTR [rcx],al
  40be59:	add    BYTE PTR [rax],al
  40be5b:	add    BYTE PTR [rax+rax*1],al
  40be5e:	add    BYTE PTR [rax],al
  40be60:	loopne 0x40be7e
  40be62:	add    BYTE PTR [r8],al
  40be65:	add    BYTE PTR [rax],al
  40be67:	add    al,al
  40be69:	sbb    al,0x41
	...
  40be77:	add    BYTE PTR [rax-0x2e],al
  40be7a:	add    BYTE PTR [r8],al
  40be7d:	add    BYTE PTR [rax],al
  40be7f:	add    BYTE PTR [rax],ah
  40be81:	rol    BYTE PTR [rcx+0x0],cl
  40be84:	add    BYTE PTR [rax],al
  40be86:	add    BYTE PTR [rax],al
  40be88:	movabs al,ds:0x20000000000411c
  40be91:	add    BYTE PTR [rax],al
  40be93:	add    BYTE PTR [rax+rax*1],al
  40be96:	add    BYTE PTR [rax],al
  40be98:	(bad)  
  40be99:	sbb    al,0x41
  40be9b:	add    BYTE PTR [rax],al
  40be9d:	add    BYTE PTR [rax],al
  40be9f:	add    BYTE PTR [rax+0x1c],al
  40bea2:	add    BYTE PTR [r8],al
	...
  40bead:	add    BYTE PTR [rax],al
  40beaf:	add    al,ah
  40beb1:	rol    BYTE PTR [rcx+0x0],1
  40beb4:	add    BYTE PTR [rax],al
  40beb6:	add    BYTE PTR [rax],al
  40beb8:	rcl    al,0x41
  40bebb:	add    BYTE PTR [rax],al
  40bebd:	add    BYTE PTR [rax],al
  40bebf:	add    BYTE PTR [rax],ah
  40bec1:	sbb    al,0x41
  40bec3:	add    BYTE PTR [rax],al
  40bec5:	add    BYTE PTR [rax],al
  40bec7:	add    BYTE PTR [rdx],al
  40bec9:	add    BYTE PTR [rax],al
  40becb:	add    BYTE PTR [rax+rax*1],al
  40bece:	add    BYTE PTR [rax],al
  40bed0:	loopne 0x40beed
  40bed2:	add    BYTE PTR [r8],al
  40bed5:	add    BYTE PTR [rax],al
  40bed7:	add    al,al
  40bed9:	sbb    eax,DWORD PTR [rcx+0x0]
	...
  40bee8:	(bad)  
  40bee9:	iret   
  40beea:	add    BYTE PTR [r8],al
  40beed:	add    BYTE PTR [rax],al
  40beef:	add    BYTE PTR [rbx-0x31],cl
  40bef2:	add    BYTE PTR [r8],al
  40bef5:	add    BYTE PTR [rax],al
  40bef7:	add    BYTE PTR [rax+0x411b],dh
  40befd:	add    BYTE PTR [rax],al
  40beff:	add    BYTE PTR [rdx],al
  40bf01:	add    BYTE PTR [rax],al
  40bf03:	add    BYTE PTR [rax+rax*1],al
  40bf06:	add    BYTE PTR [rax],al
  40bf08:	sbb    BYTE PTR [rbx],0x41
  40bf0b:	add    BYTE PTR [rax],al
  40bf0d:	add    BYTE PTR [rax],al
  40bf0f:	add    BYTE PTR [rax+0x1b],ah
  40bf12:	add    BYTE PTR [r8],al
	...
  40bf1d:	add    BYTE PTR [rax],al
  40bf1f:	add    BYTE PTR [rax+0x41ce],ah
  40bf25:	add    BYTE PTR [rax],al
  40bf27:	add    BYTE PTR [rbx+0x41ce],cl
  40bf2d:	add    BYTE PTR [rax],al
  40bf2f:	add    BYTE PTR [rax+0x1b],dl
  40bf32:	add    BYTE PTR [r8],al
  40bf35:	add    BYTE PTR [rax],al
  40bf37:	add    BYTE PTR [rcx],al
  40bf39:	add    BYTE PTR [rax],al
  40bf3b:	add    BYTE PTR [rax+rax*1],al
  40bf3e:	add    BYTE PTR [rax],al
  40bf40:	xor    BYTE PTR [rbx],bl
  40bf42:	add    BYTE PTR [r8],al
  40bf45:	add    BYTE PTR [rax],al
  40bf47:	add    BYTE PTR [rax],dl
  40bf49:	sbb    eax,DWORD PTR [rcx+0x0]
	...
  40bf58:	loopne 0x40bf27
  40bf5a:	add    BYTE PTR [r8],al
  40bf5d:	add    BYTE PTR [rax],al
  40bf5f:	add    al,al
  40bf61:	int    0x41
	...
  40bf6f:	add    BYTE PTR [rcx],al
  40bf71:	add    BYTE PTR [rax],al
  40bf73:	add    BYTE PTR [rax+rax*1],al
  40bf76:	add    BYTE PTR [rax],al
  40bf78:	lock sbb al,BYTE PTR [rcx+0x0]
  40bf7c:	add    BYTE PTR [rax],al
  40bf7e:	add    BYTE PTR [rax],al
  40bf80:	rcr    BYTE PTR [rdx],1
  40bf82:	add    BYTE PTR [r8],al
	...
  40bf8d:	add    BYTE PTR [rax],al
  40bf8f:	add    BYTE PTR [rax],dl
  40bf91:	int    0x41
  40bf93:	add    BYTE PTR [rax],al
  40bf95:	add    BYTE PTR [rax],al
  40bf97:	add    al,dh
  40bf99:	int3   
  40bf9a:	add    BYTE PTR [r8],al
	...
  40bfa5:	add    BYTE PTR [rax],al
  40bfa7:	add    BYTE PTR [rcx],al
  40bfa9:	add    BYTE PTR [rax],al
  40bfab:	add    BYTE PTR [rax+rax*1],al
  40bfae:	add    BYTE PTR [rax],al
  40bfb0:	mov    al,0x1a
  40bfb2:	add    BYTE PTR [r8],al
  40bfb5:	add    BYTE PTR [rax],al
  40bfb7:	add    BYTE PTR [rax+0x411a],dl
	...
  40bfc5:	add    BYTE PTR [rax],al
  40bfc7:	add    BYTE PTR [rax],ah
  40bfc9:	int3   
  40bfca:	add    BYTE PTR [r8],al
  40bfcd:	add    BYTE PTR [rax],al
  40bfcf:	add    BYTE PTR [rax],al
  40bfd1:	int3   
  40bfd2:	add    BYTE PTR [r8],al
	...
  40bfdd:	add    BYTE PTR [rax],al
  40bfdf:	add    BYTE PTR [rcx],al
  40bfe1:	add    BYTE PTR [rax],al
  40bfe3:	add    BYTE PTR [rax],al
  40bfe5:	add    BYTE PTR [rax],al
  40bfe7:	add    BYTE PTR [rax+0x1a],dh
  40bfea:	add    BYTE PTR [r8],al
  40bfed:	add    BYTE PTR [rax],al
  40bfef:	add    BYTE PTR [rax],al
  40bff1:	sbb    al,BYTE PTR [rcx+0x0]
	...
  40c000:	push   rax
  40c001:	leave  
  40c002:	add    BYTE PTR [r8],al
  40c005:	add    BYTE PTR [rax],al
  40c007:	add    BYTE PTR [rax],ah
  40c009:	leave  
  40c00a:	add    BYTE PTR [r8],al
	...
  40c015:	add    BYTE PTR [rax],al
  40c017:	add    BYTE PTR [rdx],al
  40c019:	add    BYTE PTR [rax],al
  40c01b:	add    BYTE PTR [rax+rax*1],al
  40c01e:	add    BYTE PTR [rax],al
  40c020:	movabs al,ds:0x8000000000004119
  40c029:	sbb    DWORD PTR [rcx+0x0],eax
	...
  40c038:	(bad)  
  40c039:	enter  0x41,0x0
  40c03d:	add    BYTE PTR [rax],al
  40c03f:	add    BYTE PTR [rax],ah
  40c041:	enter  0x41,0x0
	...
  40c04d:	add    BYTE PTR [rax],al
  40c04f:	add    BYTE PTR [rdx],al
  40c051:	add    BYTE PTR [rax],al
  40c053:	add    BYTE PTR [rax+rax*1],al
  40c056:	add    BYTE PTR [rax],al
  40c058:	rex sbb DWORD PTR [rcx+0x0],eax
  40c05c:	add    BYTE PTR [rax],al
  40c05e:	add    BYTE PTR [rax],al
  40c060:	adc    BYTE PTR [rcx],bl
  40c062:	add    BYTE PTR [r8],al
	...
  40c06d:	add    BYTE PTR [rax],al
  40c06f:	add    BYTE PTR [rax+0x41c7],ah
  40c075:	add    BYTE PTR [rax],al
  40c077:	add    BYTE PTR [rbx+0x41c7],dl
	...
  40c085:	add    BYTE PTR [rax],al
  40c087:	add    BYTE PTR [rcx],al
  40c089:	add    BYTE PTR [rax],al
  40c08b:	add    BYTE PTR [rax],al
  40c08d:	add    BYTE PTR [rax],al
  40c08f:	add    al,dh
  40c091:	sbb    BYTE PTR [rcx+0x0],al
  40c094:	add    BYTE PTR [rax],al
  40c096:	add    BYTE PTR [rax],al
  40c098:	sbb    BYTE PTR [rcx+0x0],al
	...
  40c0a8:	mov    bl,0xc3
  40c0aa:	add    BYTE PTR [r8],al
  40c0ad:	add    BYTE PTR [rax],al
  40c0af:	add    BYTE PTR [rcx+0x41c3],ch
	...
  40c0bd:	add    BYTE PTR [rax],al
  40c0bf:	add    BYTE PTR [rcx],al
  40c0c1:	add    BYTE PTR [rax],al
  40c0c3:	add    BYTE PTR [rax+rax*1],al
  40c0c6:	add    BYTE PTR [rax],al
  40c0c8:	add    BYTE PTR [rax],bl
  40c0ca:	add    BYTE PTR [r8],al
  40c0cd:	add    BYTE PTR [rax],al
  40c0cf:	add    al,ah
  40c0d1:	(bad)  
  40c0d2:	add    BYTE PTR [r8],al
	...
  40c0dd:	add    BYTE PTR [rax],al
  40c0df:	add    BYTE PTR [rcx],ah
  40c0e1:	ret    
  40c0e2:	add    BYTE PTR [r8],al
  40c0e5:	add    BYTE PTR [rax],al
  40c0e7:	add    BYTE PTR [rax],al
  40c0e9:	ret    
  40c0ea:	add    BYTE PTR [r8],al
	...
  40c0f5:	add    BYTE PTR [rax],al
  40c0f7:	add    BYTE PTR [rcx],al
  40c0f9:	add    BYTE PTR [rax],al
  40c0fb:	add    BYTE PTR [rax+rax*1],al
  40c0fe:	add    BYTE PTR [rax],al
  40c100:	rcl    BYTE PTR [rdi],0x41
  40c103:	add    BYTE PTR [rax],al
  40c105:	add    BYTE PTR [rax],al
  40c107:	add    BYTE PTR [rax+0x4117],ah
	...
  40c115:	add    BYTE PTR [rax],al
  40c117:	add    BYTE PTR [rcx-0x3e],bl
  40c11a:	add    BYTE PTR [r8],al
  40c11d:	add    BYTE PTR [rax],al
  40c11f:	add    BYTE PTR [rdi-0x3e],cl
  40c122:	add    BYTE PTR [r8],al
	...
  40c12d:	add    BYTE PTR [rax],al
  40c12f:	add    BYTE PTR [rdx],al
  40c131:	add    BYTE PTR [rax],al
  40c133:	add    BYTE PTR [rax+rax*1],al
  40c136:	add    BYTE PTR [rax],al
  40c138:	(bad)  
  40c139:	(bad)  
  40c13a:	add    BYTE PTR [r8],al
  40c13d:	add    BYTE PTR [rax],al
  40c13f:	add    BYTE PTR [rax+0x17],al
  40c142:	add    BYTE PTR [r8],al
	...
  40c14d:	add    BYTE PTR [rax],al
  40c14f:	add    BYTE PTR [rax-0x3f],al
  40c152:	add    BYTE PTR [r8],al
  40c155:	add    BYTE PTR [rax],al
  40c157:	add    BYTE PTR [rax],al
  40c159:	rol    DWORD PTR [rcx+0x0],0x0
  40c15d:	add    BYTE PTR [rax],al
  40c15f:	add    BYTE PTR [rax],dh
  40c161:	(bad)  
  40c162:	add    BYTE PTR [r8],al
  40c165:	add    BYTE PTR [rax],al
  40c167:	add    BYTE PTR [rdx],al
  40c169:	add    BYTE PTR [rax],al
  40c16b:	add    BYTE PTR [rip+0x0],al        # 0x40c171
  40c171:	(bad)  
  40c172:	add    BYTE PTR [r8],al
  40c175:	add    BYTE PTR [rax],al
  40c177:	add    al,ah
  40c179:	(bad)  
  40c17a:	add    BYTE PTR [r8],al
	...
  40c185:	add    BYTE PTR [rax],al
  40c187:	add    BYTE PTR [rax+rax*8+0x41],al
  40c18e:	add    BYTE PTR [rax],al
  40c190:	(bad)  
  40c191:	rol    BYTE PTR [rcx+0x0],0x0
	...
  40c19d:	add    BYTE PTR [rax],al
  40c19f:	add    BYTE PTR [rcx],al
  40c1a1:	add    BYTE PTR [rax],al
  40c1a3:	add    BYTE PTR [rax+rax*1],al
  40c1a6:	add    BYTE PTR [rax],al
  40c1a8:	rcl    BYTE PTR [rsi],0x41
  40c1ab:	add    BYTE PTR [rax],al
  40c1ad:	add    BYTE PTR [rax],al
  40c1af:	add    BYTE PTR [rax+0x4116],ah
	...
  40c1bd:	add    BYTE PTR [rax],al
  40c1bf:	add    BYTE PTR [rdi+rdi*4+0x41],bh
  40c1c6:	add    BYTE PTR [rax],al
  40c1c8:	mov    al,0xbf
  40c1ca:	add    BYTE PTR [r8],al
	...
  40c1d5:	add    BYTE PTR [rax],al
  40c1d7:	add    BYTE PTR [rcx],al
  40c1d9:	add    BYTE PTR [rax],al
  40c1db:	add    BYTE PTR [rax+rax*1],al
  40c1de:	add    BYTE PTR [rax],al
  40c1e0:	adc    BYTE PTR [rsi],0x41
  40c1e3:	add    BYTE PTR [rax],al
  40c1e5:	add    BYTE PTR [rax],al
  40c1e7:	add    BYTE PTR [rax+0x16],ah
  40c1ea:	add    BYTE PTR [r8],al
	...
  40c1f5:	add    BYTE PTR [rax],al
  40c1f7:	add    BYTE PTR [rax-0x41],dh
  40c1fa:	add    BYTE PTR [r8],al
  40c1fd:	add    BYTE PTR [rax],al
  40c1ff:	add    BYTE PTR [rbx-0x41],ah
  40c202:	add    BYTE PTR [r8],al
  40c205:	add    BYTE PTR [rax],al
  40c207:	add    BYTE PTR [rax+0x16],dl
  40c20a:	add    BYTE PTR [r8],al
  40c20d:	add    BYTE PTR [rax],al
  40c20f:	add    BYTE PTR [rcx],al
  40c211:	add    BYTE PTR [rax],al
  40c213:	add    BYTE PTR [rax+rax*1],al
  40c216:	add    BYTE PTR [rax],al
  40c218:	xor    BYTE PTR [rsi],dl
  40c21a:	add    BYTE PTR [r8],al
  40c21d:	add    BYTE PTR [rax],al
  40c21f:	add    BYTE PTR [rax],dl
  40c221:	(bad)  
  40c222:	add    BYTE PTR [r8],al
	...
  40c22d:	add    BYTE PTR [rax],al
  40c22f:	add    al,dl
  40c231:	mov    ebp,0x41
  40c236:	add    BYTE PTR [rax],al
  40c238:	mov    al,0xbd
  40c23a:	add    BYTE PTR [r8],al
	...
  40c245:	add    BYTE PTR [rax],al
  40c247:	add    BYTE PTR [rcx],al
  40c249:	add    BYTE PTR [rax],al
  40c24b:	add    BYTE PTR [rax+rax*1],al
  40c24e:	add    BYTE PTR [rax],al
  40c250:	lock adc eax,0x41
  40c256:	add    BYTE PTR [rax],al
  40c258:	rcl    BYTE PTR [rip+0x41],1        # 0x40c29f
	...
  40c266:	add    BYTE PTR [rax],al
  40c268:	loopne 0x40c226
  40c26a:	add    BYTE PTR [r8],al
  40c26d:	add    BYTE PTR [rax],al
  40c26f:	add    bh,dl
  40c271:	mov    esp,0x41
	...
  40c27e:	add    BYTE PTR [rax],al
  40c280:	add    DWORD PTR [rax],eax
  40c282:	add    BYTE PTR [rax],al
  40c284:	add    al,0x0
  40c286:	add    BYTE PTR [rax],al
  40c288:	mov    al,0x15
  40c28a:	add    BYTE PTR [r8],al
  40c28d:	add    BYTE PTR [rax],al
  40c28f:	add    BYTE PTR [rax+0x4115],dl
	...
  40c29d:	add    BYTE PTR [rax],al
  40c29f:	add    BYTE PTR [rax-0x44],al
  40c2a2:	add    BYTE PTR [r8],al
  40c2a5:	add    BYTE PTR [rax],al
  40c2a7:	add    BYTE PTR [rbx],dh
  40c2a9:	mov    esp,0x41
	...
  40c2b6:	add    BYTE PTR [rax],al
  40c2b8:	add    al,BYTE PTR [rax]
  40c2ba:	add    BYTE PTR [rax],al
  40c2bc:	add    al,0x0
  40c2be:	add    BYTE PTR [rax],al
  40c2c0:	(bad)  
  40c2c1:	adc    eax,0x41
  40c2c6:	add    BYTE PTR [rax],al
  40c2c8:	xor    BYTE PTR [rip+0x41],dl        # 0x40c30f
	...
  40c2d6:	add    BYTE PTR [rax],al
  40c2d8:	sar    BYTE PTR [rdx+0x41],1
  40c2de:	add    BYTE PTR [rax],al
  40c2e0:	mov    edx,0x41ba
	...
  40c2ed:	add    BYTE PTR [rax],al
  40c2ef:	add    BYTE PTR [rdx],al
  40c2f1:	add    BYTE PTR [rax],al
  40c2f3:	add    BYTE PTR [rax+rax*1],al
  40c2f6:	add    BYTE PTR [rax],al
  40c2f8:	add    BYTE PTR [rip+0x41],dl        # 0x40c33f
  40c2fe:	add    BYTE PTR [rax],al
  40c300:	rcl    BYTE PTR [rcx+rax*2],1
	...
  40c30f:	add    BYTE PTR [rax-0x49],al
  40c312:	add    BYTE PTR [r8],al
  40c315:	add    BYTE PTR [rax],al
  40c317:	add    BYTE PTR [rip+0x41b7],ch        # 0x4104d4
	...
  40c325:	add    BYTE PTR [rax],al
  40c327:	add    BYTE PTR [rdx],al
  40c329:	add    BYTE PTR [rax],al
  40c32b:	add    BYTE PTR [rax+rax*1],al
  40c32e:	add    BYTE PTR [rax],al
  40c330:	movabs al,ds:0x8000000000004114
  40c339:	adc    al,0x41
	...
  40c347:	add    BYTE PTR [rax-0x4b],dh
  40c34a:	add    BYTE PTR [r8],al
  40c34d:	add    BYTE PTR [rax],al
  40c34f:	add    BYTE PTR [rsi-0x4b],ah
  40c352:	add    BYTE PTR [r8],al
  40c355:	add    BYTE PTR [rax],al
  40c357:	add    BYTE PTR [rax+0x14],dh
  40c35a:	add    BYTE PTR [r8],al
  40c35d:	add    BYTE PTR [rax],al
  40c35f:	add    BYTE PTR [rcx],al
  40c361:	add    BYTE PTR [rax],al
  40c363:	add    BYTE PTR [rax+rax*1],al
  40c366:	add    BYTE PTR [rax],al
  40c368:	push   rax
  40c369:	adc    al,0x41
  40c36b:	add    BYTE PTR [rax],al
  40c36d:	add    BYTE PTR [rax],al
  40c36f:	add    BYTE PTR [rax],dh
  40c371:	adc    al,0x41
	...
  40c37f:	add    BYTE PTR [rax],al
  40c381:	mov    ch,0x41
  40c383:	add    BYTE PTR [rax],al
  40c385:	add    BYTE PTR [rax],al
  40c387:	add    bh,ch
  40c389:	mov    ah,0x41
  40c38b:	add    BYTE PTR [rax],al
  40c38d:	add    BYTE PTR [rax],al
  40c38f:	add    BYTE PTR [rax],ah
  40c391:	adc    al,0x41
  40c393:	add    BYTE PTR [rax],al
  40c395:	add    BYTE PTR [rax],al
  40c397:	add    BYTE PTR [rcx],al
  40c399:	add    BYTE PTR [rax],al
  40c39b:	add    BYTE PTR [rax+rax*1],al
  40c39e:	add    BYTE PTR [rax],al
  40c3a0:	add    BYTE PTR [rcx+rax*2],dl
  40c3a3:	add    BYTE PTR [rax],al
  40c3a5:	add    BYTE PTR [rax],al
  40c3a7:	add    al,ah
  40c3a9:	adc    eax,DWORD PTR [rcx+0x0]
	...
  40c3b8:	nop
  40c3b9:	mov    ah,0x41
  40c3bb:	add    BYTE PTR [rax],al
  40c3bd:	add    BYTE PTR [rax],al
  40c3bf:	add    BYTE PTR [rcx+0x41b4],al
  40c3c5:	add    BYTE PTR [rax],al
  40c3c7:	add    al,dl
  40c3c9:	adc    eax,DWORD PTR [rcx+0x0]
  40c3cc:	add    BYTE PTR [rax],al
  40c3ce:	add    BYTE PTR [rax],al
  40c3d0:	add    DWORD PTR [rax],eax
  40c3d2:	add    BYTE PTR [rax],al
  40c3d4:	add    al,0x0
  40c3d6:	add    BYTE PTR [rax],al
  40c3d8:	mov    al,0x13
  40c3da:	add    BYTE PTR [r8],al
  40c3dd:	add    BYTE PTR [rax],al
  40c3df:	add    BYTE PTR [rax+0x4113],dl
	...
  40c3ed:	add    BYTE PTR [rax],al
  40c3ef:	add    BYTE PTR [rcx],cl
  40c3f1:	mov    ah,0x41
  40c3f3:	add    BYTE PTR [rax],al
  40c3f5:	add    BYTE PTR [rax],al
  40c3f7:	add    BYTE PTR [rcx],al
  40c3f9:	mov    ah,0x41
	...
  40c407:	add    BYTE PTR [rdx],al
  40c409:	add    BYTE PTR [rax],al
  40c40b:	add    BYTE PTR [rax+rax*1],al
  40c40e:	add    BYTE PTR [rax],al
  40c410:	(bad)  
  40c411:	adc    eax,DWORD PTR [rcx+0x0]
  40c414:	add    BYTE PTR [rax],al
  40c416:	add    BYTE PTR [rax],al
  40c418:	rex adc eax,DWORD PTR [rcx+0x0]
	...
  40c428:	mov    al,0xb3
  40c42a:	add    BYTE PTR [r8],al
  40c42d:	add    BYTE PTR [rax],al
  40c42f:	add    BYTE PTR [rbx+0x41b3],dl
  40c435:	add    BYTE PTR [rax],al
  40c437:	add    BYTE PTR [rax],dh
  40c439:	adc    eax,DWORD PTR [rcx+0x0]
  40c43c:	add    BYTE PTR [rax],al
  40c43e:	add    BYTE PTR [rax],al
  40c440:	add    DWORD PTR [rax],eax
  40c442:	add    BYTE PTR [rax],al
  40c444:	add    al,0x0
  40c446:	add    BYTE PTR [rax],al
  40c448:	adc    BYTE PTR [rbx],dl
  40c44a:	add    BYTE PTR [r8],al
  40c44d:	add    BYTE PTR [rax],al
  40c44f:	add    al,dh
  40c451:	adc    al,BYTE PTR [rcx+0x0]
	...
  40c460:	adc    esi,DWORD PTR [rbx+0x41]
	...
  40c46e:	add    BYTE PTR [rax],al
  40c470:	loopne 0x40c484
  40c472:	add    BYTE PTR [r8],al
  40c475:	add    BYTE PTR [rax],al
  40c477:	add    BYTE PTR [rcx],al
  40c479:	add    BYTE PTR [rax],al
  40c47b:	add    BYTE PTR [rax+rax*1],al
  40c47e:	add    BYTE PTR [rax],al
  40c480:	rcl    BYTE PTR [rdx],0x41
  40c483:	add    BYTE PTR [rax],al
  40c485:	add    BYTE PTR [rax],al
  40c487:	add    BYTE PTR [rax+0x4112],ah
	...
  40c495:	add    BYTE PTR [rax],al
  40c497:	add    al,ah
  40c499:	mov    dl,0x41
  40c49b:	add    BYTE PTR [rax],al
  40c49d:	add    BYTE PTR [rax],al
  40c49f:	add    al,dl
  40c4a1:	mov    dl,0x41
	...
  40c4af:	add    BYTE PTR [rcx],al
  40c4b1:	add    BYTE PTR [rax],al
  40c4b3:	add    BYTE PTR [rax+rax*1],al
  40c4b6:	add    BYTE PTR [rax],al
  40c4b8:	adc    BYTE PTR [rdx],0x41
  40c4bb:	add    BYTE PTR [rax],al
  40c4bd:	add    BYTE PTR [rax],al
  40c4bf:	add    BYTE PTR [rax+0x12],ah
  40c4c2:	add    BYTE PTR [r8],al
	...
  40c4cd:	add    BYTE PTR [rax],al
  40c4cf:	add    BYTE PTR [rax-0x4e],ah
  40c4d2:	add    BYTE PTR [r8],al
  40c4d5:	add    BYTE PTR [rax],al
  40c4d7:	add    BYTE PTR [rdi-0x4e],cl
  40c4da:	add    BYTE PTR [r8],al
	...
  40c4e5:	add    BYTE PTR [rax],al
  40c4e7:	add    BYTE PTR [rcx],al
  40c4e9:	add    BYTE PTR [rax],al
  40c4eb:	add    BYTE PTR [rax+rax*1],al
  40c4ee:	add    BYTE PTR [rax],al
  40c4f0:	adc    al,BYTE PTR [rcx+0x0]
  40c4f4:	add    BYTE PTR [rax],al
  40c4f6:	add    BYTE PTR [rax],al
  40c4f8:	and    BYTE PTR [rdx],dl
  40c4fa:	add    BYTE PTR [r8],al
	...
  40c505:	add    BYTE PTR [rax],al
  40c507:	add    BYTE PTR [rsi+0x41b1],bh
  40c50d:	add    BYTE PTR [rax],al
  40c50f:	add    BYTE PTR [rbp+0x41b1],dh
  40c515:	add    BYTE PTR [rax],al
  40c517:	add    BYTE PTR [rax],dl
  40c519:	adc    al,BYTE PTR [rcx+0x0]
  40c51c:	add    BYTE PTR [rax],al
  40c51e:	add    BYTE PTR [rax],al
  40c520:	add    DWORD PTR [rax],eax
  40c522:	add    BYTE PTR [rax],al
  40c524:	add    al,0x0
  40c526:	add    BYTE PTR [rax],al
  40c528:	lock adc DWORD PTR [rcx+0x0],eax
  40c52c:	add    BYTE PTR [rax],al
  40c52e:	add    BYTE PTR [rax],al
  40c530:	rcl    BYTE PTR [rcx],1
  40c532:	add    BYTE PTR [r8],al
	...
  40c53d:	add    BYTE PTR [rax],al
  40c53f:	add    BYTE PTR [rax-0x4f],ah
  40c542:	add    BYTE PTR [r8],al
  40c545:	add    BYTE PTR [rax],al
  40c547:	add    BYTE PTR [rdi-0x4f],dl
  40c54a:	add    BYTE PTR [r8],al
	...
  40c555:	add    BYTE PTR [rax],al
  40c557:	add    BYTE PTR [rdx],al
  40c559:	add    BYTE PTR [rax],al
  40c55b:	add    BYTE PTR [rax],al
  40c55d:	add    BYTE PTR [rax],al
  40c55f:	add    BYTE PTR [rax+0x4111],ah
  40c565:	add    BYTE PTR [rax],al
  40c567:	add    BYTE PTR [rax+0x11],al
  40c56a:	add    BYTE PTR [r8],al
	...
  40c575:	add    BYTE PTR [rax],al
  40c577:	add    BYTE PTR [rax-0x50],ah
  40c57a:	add    BYTE PTR [r8],al
  40c57d:	add    BYTE PTR [rax],al
  40c57f:	add    BYTE PTR [rax-0x50],al
  40c582:	add    BYTE PTR [r8],al
  40c585:	add    BYTE PTR [rax],al
  40c587:	add    BYTE PTR [rax],dh
  40c589:	adc    DWORD PTR [rcx+0x0],eax
	...
  40c5a0:	rcl    BYTE PTR [rax],0x41
	...
  40c5af:	add    al,dl
  40c5b1:	lods   eax,DWORD PTR ds:[rsi]
  40c5b2:	add    BYTE PTR [r8],al
  40c5b5:	add    BYTE PTR [rax],al
  40c5b7:	add    BYTE PTR [rax+0x41ad],ah
  40c5bd:	add    BYTE PTR [rax],al
  40c5bf:	add    BYTE PTR [rax+0x4110],dl
	...
  40c5d5:	add    BYTE PTR [rax],al
  40c5d7:	add    BYTE PTR [rax+0x10],al
  40c5da:	add    BYTE PTR [r8],al
	...
  40c5e5:	add    BYTE PTR [rax],al
  40c5e7:	add    al,ah
  40c5e9:	stos   DWORD PTR es:[rdi],eax
  40c5ea:	add    BYTE PTR [r8],al
  40c5ed:	add    BYTE PTR [rax],al
  40c5ef:	add    al,al
  40c5f1:	stos   DWORD PTR es:[rdi],eax
  40c5f2:	add    BYTE PTR [r8],al
  40c5f5:	add    BYTE PTR [rax],al
  40c5f7:	add    BYTE PTR [rax],dl
  40c5f9:	adc    BYTE PTR [rcx+0x0],al
	...
  40c610:	ror    BYTE PTR [rdi],0x41
	...
  40c61f:	add    BYTE PTR [rax],dl
  40c621:	stos   BYTE PTR es:[rdi],al
  40c622:	add    BYTE PTR [r8],al
  40c625:	add    BYTE PTR [rax],al
  40c627:	add    cl,bh
  40c629:	test   eax,0x41
	...
  40c636:	add    BYTE PTR [rax],al
  40c638:	add    DWORD PTR [rax],eax
  40c63a:	add    BYTE PTR [rax],al
  40c63c:	add    al,0x0
  40c63e:	add    BYTE PTR [rax],al
  40c640:	jo     0x40c651
  40c642:	add    BYTE PTR [r8],al
  40c645:	add    BYTE PTR [rax],al
  40c647:	add    BYTE PTR [rax+0xf],dl
  40c64a:	add    BYTE PTR [r8],al
	...
  40c655:	add    BYTE PTR [rax],al
  40c657:	add    BYTE PTR [rax+0x41a9],ah
  40c65d:	add    BYTE PTR [rax],al
  40c65f:	add    BYTE PTR [rdx+0x41a9],cl
  40c665:	add    BYTE PTR [rax],al
  40c667:	add    BYTE PTR [rax],dh
  40c669:	cmovno eax,DWORD PTR [rax]
  40c66c:	add    BYTE PTR [rax],al
  40c66e:	add    BYTE PTR [rax],al
  40c670:	add    DWORD PTR [rax],eax
  40c672:	add    BYTE PTR [rax],al
  40c674:	add    al,0x0
  40c676:	add    BYTE PTR [rax],al
  40c678:	adc    BYTE PTR [rdi],cl
  40c67a:	add    BYTE PTR [r8],al
  40c67d:	add    BYTE PTR [rax],al
  40c67f:	add    al,dh
  40c681:	(bad)  
  40c682:	add    BYTE PTR [r8],al
	...
  40c68d:	add    BYTE PTR [rax],al
  40c68f:	add    ch,bh
  40c691:	test   al,0x41
  40c693:	add    BYTE PTR [rax],al
  40c695:	add    BYTE PTR [rax],al
  40c697:	add    bh,ch
  40c699:	test   al,0x41
	...
  40c6a7:	add    BYTE PTR [rcx],al
  40c6a9:	add    BYTE PTR [rax],al
  40c6ab:	add    BYTE PTR [rax+rax*1],al
  40c6ae:	add    BYTE PTR [rax],al
  40c6b0:	ror    BYTE PTR [rsi],1
  40c6b2:	add    BYTE PTR [r8],al
  40c6b5:	add    BYTE PTR [rax],al
  40c6b7:	add    BYTE PTR [rax+0x410e],dh
	...
  40c6c5:	add    BYTE PTR [rax],al
  40c6c7:	add    BYTE PTR [rax-0x58],al
  40c6ca:	add    BYTE PTR [r8],al
  40c6cd:	add    BYTE PTR [rax],al
  40c6cf:	add    BYTE PTR [rip+0x41a8],dh        # 0x41087d
  40c6d5:	add    BYTE PTR [rax],al
  40c6d7:	add    BYTE PTR [rax+0x410e],ah
  40c6dd:	add    BYTE PTR [rax],al
  40c6df:	add    BYTE PTR [rcx],al
  40c6e1:	add    BYTE PTR [rax],al
  40c6e3:	add    BYTE PTR [rax+rax*1],al
  40c6e6:	add    BYTE PTR [rax],al
  40c6e8:	or     BYTE PTR [rsi],0x41
  40c6eb:	add    BYTE PTR [rax],al
  40c6ed:	add    BYTE PTR [rax],al
  40c6ef:	add    BYTE PTR [rax+0xe],ah
  40c6f2:	add    BYTE PTR [r8],al
	...
  40c6fd:	add    BYTE PTR [rax],al
  40c6ff:	add    BYTE PTR [rax+0x41a7],dh
  40c705:	add    BYTE PTR [rax],al
  40c707:	add    BYTE PTR [rax+0x41a7],dl
  40c70d:	add    BYTE PTR [rax],al
  40c70f:	add    BYTE PTR [rax+0xe],dl
  40c712:	add    BYTE PTR [r8],al
  40c715:	add    BYTE PTR [rax],al
  40c717:	add    BYTE PTR [rcx],al
  40c719:	add    BYTE PTR [rax],al
  40c71b:	add    BYTE PTR [rax+rax*1],al
  40c71e:	add    BYTE PTR [rax],al
  40c720:	xor    BYTE PTR [rsi],cl
  40c722:	add    BYTE PTR [r8],al
  40c725:	add    BYTE PTR [rax],al
  40c727:	add    BYTE PTR [rax],dl
  40c729:	(bad)  
  40c72a:	add    BYTE PTR [r8],al
	...
  40c735:	add    BYTE PTR [rax],al
  40c737:	add    BYTE PTR [rax],dl
  40c739:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40c73a:	add    BYTE PTR [r8],al
  40c73d:	add    BYTE PTR [rax],al
  40c73f:	add    bh,bh
  40c741:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c742:	add    BYTE PTR [r8],al
  40c745:	add    BYTE PTR [rax],al
  40c747:	add    al,dh
  40c749:	or     eax,0x41
  40c74e:	add    BYTE PTR [rax],al
  40c750:	add    al,BYTE PTR [rax]
  40c752:	add    BYTE PTR [rax],al
  40c754:	add    BYTE PTR [rax],al
  40c756:	add    BYTE PTR [rax],al
  40c758:	ror    BYTE PTR [rip+0x41],0x0        # 0x40c7a0
  40c75f:	add    BYTE PTR [rax+0x410d],al
	...
  40c76d:	add    BYTE PTR [rax],al
  40c76f:	add    BYTE PTR [rax-0x5a],al
  40c772:	add    BYTE PTR [r8],al
  40c775:	add    BYTE PTR [rax],al
  40c777:	add    BYTE PTR [rdx],dh
  40c779:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c77a:	add    BYTE PTR [r8],al
  40c77d:	add    BYTE PTR [rax],al
  40c77f:	add    BYTE PTR [rax+0xd],dh
  40c782:	add    BYTE PTR [r8],al
  40c785:	add    BYTE PTR [rax],al
  40c787:	add    BYTE PTR [rcx],al
  40c789:	add    BYTE PTR [rax],al
  40c78b:	add    BYTE PTR [rax+rax*1],al
  40c78e:	add    BYTE PTR [rax],al
  40c790:	push   rax
  40c791:	or     eax,0x41
  40c796:	add    BYTE PTR [rax],al
  40c798:	xor    BYTE PTR [rip+0x41],cl        # 0x40c7df
	...
  40c7a6:	add    BYTE PTR [rax],al
  40c7a8:	xor    BYTE PTR [rbp+0x41],ah
  40c7ae:	add    BYTE PTR [rax],al
  40c7b0:	sbb    ah,BYTE PTR [rbp+0x41]
  40c7b6:	add    BYTE PTR [rax],al
  40c7b8:	and    BYTE PTR [rip+0x41],cl        # 0x40c7ff
	...
  40c7ce:	add    BYTE PTR [rax],al
  40c7d0:	or     al,0x41
	...
  40c7df:	add    ah,ah
  40c7e1:	movabs eax,ds:0xa1c0000000000041
  40c7ea:	add    BYTE PTR [r8],al
  40c7ed:	add    BYTE PTR [rax],al
  40c7ef:	add    BYTE PTR [rax],al
  40c7f1:	or     al,0x41
  40c7f3:	add    BYTE PTR [rax],al
  40c7f5:	add    BYTE PTR [rax],al
  40c7f7:	add    BYTE PTR [rcx],al
  40c7f9:	add    BYTE PTR [rax],al
  40c7fb:	add    BYTE PTR [rax+rax*1],al
  40c7fe:	add    BYTE PTR [rax],al
  40c800:	loopne 0x40c80d
  40c802:	add    BYTE PTR [r8],al
  40c805:	add    BYTE PTR [rax],al
  40c807:	add    al,al
  40c809:	or     eax,DWORD PTR [rcx+0x0]
	...
  40c818:	push   rax
  40c819:	movabs eax,ds:0xa130000000000041
  40c822:	add    BYTE PTR [r8],al
  40c825:	add    BYTE PTR [rax],al
  40c827:	add    BYTE PTR [rax+0x410b],dh
  40c82d:	add    BYTE PTR [rax],al
  40c82f:	add    BYTE PTR [rcx],al
  40c831:	add    BYTE PTR [rax],al
  40c833:	add    BYTE PTR [rax+rax*1],al
  40c836:	add    BYTE PTR [rax],al
  40c838:	nop
  40c839:	or     eax,DWORD PTR [rcx+0x0]
  40c83c:	add    BYTE PTR [rax],al
  40c83e:	add    BYTE PTR [rax],al
  40c840:	jo     0x40c84d
  40c842:	add    BYTE PTR [r8],al
	...
  40c84d:	add    BYTE PTR [rax],al
  40c84f:	add    BYTE PTR [rbp+0x41a0],dl
  40c855:	add    BYTE PTR [rax],al
  40c857:	add    BYTE PTR [rcx+0x41a0],cl
	...
  40c865:	add    BYTE PTR [rax],al
  40c867:	add    BYTE PTR [rcx],al
  40c869:	add    BYTE PTR [rax],al
  40c86b:	add    BYTE PTR [rax+rax*1],al
  40c86e:	add    BYTE PTR [rax],al
  40c870:	push   rax
  40c871:	or     eax,DWORD PTR [rcx+0x0]
  40c874:	add    BYTE PTR [rax],al
  40c876:	add    BYTE PTR [rax],al
  40c878:	xor    BYTE PTR [rbx],cl
  40c87a:	add    BYTE PTR [r8],al
	...
  40c885:	add    BYTE PTR [rax],al
  40c887:	add    BYTE PTR [rbx-0x60],al
  40c88a:	add    BYTE PTR [r8],al
  40c88d:	add    BYTE PTR [rax],al
  40c88f:	add    BYTE PTR [rax],ah
  40c891:	movabs al,ds:0x41
  40c89a:	add    BYTE PTR [rax],al
  40c89c:	add    BYTE PTR [rax],al
  40c89e:	add    BYTE PTR [rax],al
  40c8a0:	add    al,BYTE PTR [rax]
  40c8a2:	add    BYTE PTR [rax],al
  40c8a4:	add    al,0x0
  40c8a6:	add    BYTE PTR [rax],al
  40c8a8:	add    BYTE PTR [rbx],cl
  40c8aa:	add    BYTE PTR [r8],al
  40c8ad:	add    BYTE PTR [rax],al
  40c8af:	add    al,dl
  40c8b1:	or     al,BYTE PTR [rcx+0x0]
	...
  40c8c0:	movsxd ebx,DWORD PTR [rdi+0x41]
  40c8c6:	add    BYTE PTR [rax],al
  40c8c8:	rex lahf 
  40c8ca:	add    BYTE PTR [r8],al
	...
  40c8d5:	add    BYTE PTR [rax],al
  40c8d7:	add    BYTE PTR [rdx],al
  40c8d9:	add    BYTE PTR [rax],al
  40c8db:	add    BYTE PTR [rax+rax*1],al
  40c8de:	add    BYTE PTR [rax],al
  40c8e0:	movabs al,ds:0x700000000000410a
  40c8e9:	or     al,BYTE PTR [rcx+0x0]
	...
  40c8f8:	sbb    DWORD PTR [rsi+0x41],0x0
  40c8ff:	add    BYTE PTR [rax-0x62],ah
  40c902:	add    BYTE PTR [r8],al
	...
  40c90d:	add    BYTE PTR [rax],al
  40c90f:	add    BYTE PTR [rdx],al
  40c911:	add    BYTE PTR [rax],al
  40c913:	add    BYTE PTR [rax+rax*1],al
  40c916:	add    BYTE PTR [rax],al
  40c918:	or     al,BYTE PTR [rcx+0x0]
  40c91c:	add    BYTE PTR [rax],al
  40c91e:	add    BYTE PTR [rax],al
  40c920:	adc    BYTE PTR [rdx],cl
  40c922:	add    BYTE PTR [r8],al
	...
  40c92d:	add    BYTE PTR [rax],al
  40c92f:	add    BYTE PTR [rax+0x419d],dh
  40c935:	add    BYTE PTR [rax],al
  40c937:	add    BYTE PTR [rcx+0x419d],ah
	...
  40c945:	add    BYTE PTR [rax],al
  40c947:	add    BYTE PTR [rdx],al
  40c949:	add    BYTE PTR [rax],al
  40c94b:	add    BYTE PTR [rax+rax*1],al
  40c94e:	add    BYTE PTR [rax],al
  40c950:	loopne 0x40c95b
  40c952:	add    BYTE PTR [r8],al
  40c955:	add    BYTE PTR [rax],al
  40c957:	add    al,al
  40c959:	or     DWORD PTR [rcx+0x0],eax
	...
  40c968:	sub    al,0x9d
  40c96a:	add    BYTE PTR [r8],al
	...
  40c97d:	add    BYTE PTR [rax],al
  40c97f:	add    BYTE PTR [rcx],al
  40c981:	add    BYTE PTR [rax],al
  40c983:	add    BYTE PTR [rax+rax*1],al
  40c986:	add    BYTE PTR [rax],al
  40c988:	movabs al,ds:0x8000000000004109
  40c991:	or     DWORD PTR [rcx+0x0],eax
	...
  40c9a0:	fistp  DWORD PTR [rcx+rax*2+0x0]
	...
  40c9b7:	add    BYTE PTR [rcx],al
  40c9b9:	add    BYTE PTR [rax],al
  40c9bb:	add    BYTE PTR [rax+rax*1],al
  40c9be:	add    BYTE PTR [rax],al
  40c9c0:	(bad)  
  40c9c1:	or     DWORD PTR [rcx+0x0],eax
  40c9c4:	add    BYTE PTR [rax],al
  40c9c6:	add    BYTE PTR [rax],al
  40c9c8:	rex or DWORD PTR [rcx+0x0],eax
	...
  40c9d8:	(bad)  
  40c9d9:	pushf  
  40c9da:	add    BYTE PTR [r8],al
  40c9dd:	add    BYTE PTR [rax],al
  40c9df:	add    BYTE PTR [rbp-0x64],cl
  40c9e2:	add    BYTE PTR [r8],al
	...
  40c9ed:	add    BYTE PTR [rax],al
  40c9ef:	add    BYTE PTR [rcx],al
  40c9f1:	add    BYTE PTR [rax],al
  40c9f3:	add    BYTE PTR [rax],al
  40c9f5:	add    BYTE PTR [rax],al
  40c9f7:	add    BYTE PTR [rax],ah
  40c9f9:	or     DWORD PTR [rcx+0x0],eax
  40c9fc:	add    BYTE PTR [rax],al
  40c9fe:	add    BYTE PTR [rax],al
  40ca00:	add    BYTE PTR [rcx],cl
  40ca02:	add    BYTE PTR [r8],al
	...
  40ca0d:	add    BYTE PTR [rax],al
  40ca0f:	add    BYTE PTR [rax],ah
  40ca11:	pushf  
  40ca12:	add    BYTE PTR [r8],al
  40ca15:	add    BYTE PTR [rax],al
  40ca17:	add    BYTE PTR [rax],al
  40ca19:	pushf  
  40ca1a:	add    BYTE PTR [r8],al
	...
  40ca25:	add    BYTE PTR [rax],al
  40ca27:	add    BYTE PTR [rcx],al
  40ca29:	add    BYTE PTR [rax],al
  40ca2b:	add    BYTE PTR [rax+rax*1],al
  40ca2e:	add    BYTE PTR [rax],al
  40ca30:	ror    BYTE PTR [rax],1
  40ca32:	add    BYTE PTR [r8],al
  40ca35:	add    BYTE PTR [rax],al
  40ca37:	add    BYTE PTR [rax+0x4108],dh
	...
  40ca45:	add    BYTE PTR [rax],al
  40ca47:	add    al,al
  40ca49:	fwait
  40ca4a:	add    BYTE PTR [r8],al
  40ca4d:	add    BYTE PTR [rax],al
  40ca4f:	add    BYTE PTR [rax+0x419b],ch
	...
  40ca5d:	add    BYTE PTR [rax],al
  40ca5f:	add    BYTE PTR [rcx],al
  40ca61:	add    BYTE PTR [rax],al
  40ca63:	add    BYTE PTR [rax+rax*1],al
  40ca66:	add    BYTE PTR [rax],al
  40ca68:	nop
  40ca69:	or     BYTE PTR [rcx+0x0],al
  40ca6c:	add    BYTE PTR [rax],al
  40ca6e:	add    BYTE PTR [rax],al
  40ca70:	jo     0x40ca7a
  40ca72:	add    BYTE PTR [r8],al
	...
  40ca7d:	add    BYTE PTR [rax],al
  40ca7f:	add    BYTE PTR [rdi-0x65],ch
  40ca82:	add    BYTE PTR [r8],al
  40ca85:	add    BYTE PTR [rax],al
  40ca87:	add    al,al
  40ca89:	(bad)  
  40ca8a:	add    BYTE PTR [r8],al
	...
  40ca95:	add    BYTE PTR [rax],al
  40ca97:	add    BYTE PTR [rcx],al
  40ca99:	add    BYTE PTR [rax],al
  40ca9b:	add    BYTE PTR [rax+rax*1],al
  40ca9e:	add    BYTE PTR [rax],al
  40caa0:	push   rax
  40caa1:	or     BYTE PTR [rcx+0x0],al
  40caa4:	add    BYTE PTR [rax],al
  40caa6:	add    BYTE PTR [rax],al
  40caa8:	xor    BYTE PTR [rax],cl
  40caaa:	add    BYTE PTR [r8],al
	...
  40cab5:	add    BYTE PTR [rax],al
  40cab7:	add    BYTE PTR [rax-0x66],dh
  40caba:	add    BYTE PTR [r8],al
  40cabd:	add    BYTE PTR [rax],al
  40cabf:	add    BYTE PTR [rax-0x66],ah
  40cac2:	add    BYTE PTR [r8],al
  40cac5:	add    BYTE PTR [rax],al
  40cac7:	add    BYTE PTR [rax],ah
  40cac9:	or     BYTE PTR [rcx+0x0],al
  40cacc:	add    BYTE PTR [rax],al
  40cace:	add    BYTE PTR [rax],al
  40cad0:	add    DWORD PTR [rax],eax
  40cad2:	add    BYTE PTR [rax],al
  40cad4:	add    al,0x0
  40cad6:	add    BYTE PTR [rax],al
  40cad8:	add    BYTE PTR [rax],cl
  40cada:	add    BYTE PTR [r8],al
  40cadd:	add    BYTE PTR [rax],al
  40cadf:	add    al,ah
  40cae1:	(bad)  
  40cae2:	add    BYTE PTR [r8],al
	...
  40caed:	add    BYTE PTR [rax],al
  40caef:	add    BYTE PTR [rax+0x4199],al
  40caf5:	add    BYTE PTR [rax],al
  40caf7:	add    BYTE PTR [rcx+rbx*4+0x41],dh
	...
  40cb07:	add    BYTE PTR [rcx],al
  40cb09:	add    BYTE PTR [rax],al
  40cb0b:	add    BYTE PTR [rax+rax*1],al
  40cb0e:	add    BYTE PTR [rax],al
  40cb10:	rol    BYTE PTR [rdi],0x41
  40cb13:	add    BYTE PTR [rax],al
  40cb15:	add    BYTE PTR [rax],al
  40cb17:	add    BYTE PTR [rax+0x4107],ah
	...
  40cb25:	add    BYTE PTR [rax],al
  40cb27:	add    BYTE PTR [rax],dl
  40cb29:	cdq    
  40cb2a:	add    BYTE PTR [r8],al
  40cb2d:	add    BYTE PTR [rax],al
  40cb2f:	add    bh,bh
  40cb31:	cwde   
  40cb32:	add    BYTE PTR [r8],al
  40cb35:	add    BYTE PTR [rax],al
  40cb37:	add    BYTE PTR [rax+0x4107],dl
  40cb3d:	add    BYTE PTR [rax],al
  40cb3f:	add    BYTE PTR [rdx],al
  40cb41:	add    BYTE PTR [rax],al
  40cb43:	add    BYTE PTR [rax+rax*1],al
  40cb46:	add    BYTE PTR [rax],al
  40cb48:	(bad)  
  40cb49:	(bad)  
  40cb4a:	add    BYTE PTR [r8],al
  40cb4d:	add    BYTE PTR [rax],al
  40cb4f:	add    BYTE PTR [rax+0x7],al
  40cb52:	add    BYTE PTR [r8],al
	...
  40cb5d:	add    BYTE PTR [rax],al
  40cb5f:	add    BYTE PTR [rax],dh
  40cb61:	cwde   
  40cb62:	add    BYTE PTR [r8],al
	...
  40cb75:	add    BYTE PTR [rax],al
  40cb77:	add    BYTE PTR [rdx],al
  40cb79:	add    BYTE PTR [rax],al
  40cb7b:	add    BYTE PTR [rax+rax*1],al
  40cb7e:	add    BYTE PTR [rax],al
  40cb80:	add    BYTE PTR [rdi],al
  40cb82:	add    BYTE PTR [r8],al
  40cb85:	add    BYTE PTR [rax],al
  40cb87:	add    al,ah
  40cb89:	(bad)  
  40cb8a:	add    BYTE PTR [r8],al
	...
  40cb95:	add    BYTE PTR [rax],al
  40cb97:	add    BYTE PTR [rdx+0x4197],ah
	...
  40cbad:	add    BYTE PTR [rax],al
  40cbaf:	add    BYTE PTR [rcx],al
  40cbb1:	add    BYTE PTR [rax],al
  40cbb3:	add    BYTE PTR [rax+rax*1],al
  40cbb6:	add    BYTE PTR [rax],al
  40cbb8:	rol    BYTE PTR [rsi],0x41
  40cbbb:	add    BYTE PTR [rax],al
  40cbbd:	add    BYTE PTR [rax],al
  40cbbf:	add    BYTE PTR [rax+0x4106],dh
	...
  40cbcd:	add    BYTE PTR [rax],al
  40cbcf:	add    BYTE PTR [rcx-0x69],bh
  40cbd2:	add    BYTE PTR [r8],al
  40cbd5:	add    BYTE PTR [rax],al
  40cbd7:	add    BYTE PTR [rcx-0x69],dh
  40cbda:	add    BYTE PTR [r8],al
	...
  40cbe5:	add    BYTE PTR [rax],al
  40cbe7:	add    BYTE PTR [rdx],al
  40cbe9:	add    BYTE PTR [rax],al
  40cbeb:	add    BYTE PTR [rax+rax*1],al
  40cbee:	add    BYTE PTR [rax],al
  40cbf0:	add    BYTE PTR [rsi],0x41
  40cbf3:	add    BYTE PTR [rax],al
  40cbf5:	add    BYTE PTR [rax],al
  40cbf7:	add    BYTE PTR [rax+0x6],ah
  40cbfa:	add    BYTE PTR [r8],al
	...
  40cc05:	add    BYTE PTR [rax],al
  40cc07:	add    BYTE PTR [rax-0x6a],dl
  40cc0a:	add    BYTE PTR [r8],al
  40cc0d:	add    BYTE PTR [rax],al
  40cc0f:	add    BYTE PTR [rax-0x6a],al
  40cc12:	add    BYTE PTR [r8],al
	...
  40cc1d:	add    BYTE PTR [rax],al
  40cc1f:	add    BYTE PTR [rdx],al
  40cc21:	add    BYTE PTR [rax],al
  40cc23:	add    BYTE PTR [rdx],al
  40cc25:	add    BYTE PTR [rax],al
  40cc27:	add    BYTE PTR [rax],ah
  40cc29:	(bad)  
  40cc2a:	add    BYTE PTR [r8],al
  40cc2d:	add    BYTE PTR [rax],al
  40cc2f:	add    BYTE PTR [rax],al
  40cc31:	(bad)  
  40cc32:	add    BYTE PTR [r8],al
	...
  40cc3d:	add    BYTE PTR [rax],al
  40cc3f:	add    al,dh
  40cc41:	xchg   esp,eax
  40cc42:	add    BYTE PTR [r8],al
  40cc45:	add    BYTE PTR [rax],al
  40cc47:	add    ch,bl
  40cc49:	xchg   esp,eax
  40cc4a:	add    BYTE PTR [r8],al
	...
  40cc55:	add    BYTE PTR [rax],al
  40cc57:	add    BYTE PTR [rcx],al
  40cc59:	add    BYTE PTR [rax],al
  40cc5b:	add    BYTE PTR [rax+rax*1],al
  40cc5e:	add    BYTE PTR [rax],al
  40cc60:	loopne 0x40cc67
  40cc62:	add    BYTE PTR [r8],al
  40cc65:	add    BYTE PTR [rax],al
  40cc67:	add    al,al
  40cc69:	add    eax,0x41
	...
  40cc76:	add    BYTE PTR [rax],al
  40cc78:	movabs al,ds:0x9400000000004194
  40cc81:	xchg   esp,eax
  40cc82:	add    BYTE PTR [r8],al
  40cc85:	add    BYTE PTR [rax],al
  40cc87:	add    BYTE PTR [rax+0x4105],dh
  40cc8d:	add    BYTE PTR [rax],al
  40cc8f:	add    BYTE PTR [rcx],al
  40cc91:	add    BYTE PTR [rax],al
  40cc93:	add    BYTE PTR [rax+rax*1],al
  40cc96:	add    BYTE PTR [rax],al
  40cc98:	nop
  40cc99:	add    eax,0x41
  40cc9e:	add    BYTE PTR [rax],al
  40cca0:	jo     0x40cca7
  40cca2:	add    BYTE PTR [r8],al
	...
  40ccad:	add    BYTE PTR [rax],al
  40ccaf:	add    BYTE PTR [rax],dl
  40ccb1:	xchg   esp,eax
  40ccb2:	add    BYTE PTR [r8],al
  40ccb5:	add    BYTE PTR [rax],al
  40ccb7:	add    BYTE PTR [rbx],al
  40ccb9:	xchg   esp,eax
  40ccba:	add    BYTE PTR [r8],al
  40ccbd:	add    BYTE PTR [rax],al
  40ccbf:	add    BYTE PTR [rax+0x5],ah
  40ccc2:	add    BYTE PTR [r8],al
  40ccc5:	add    BYTE PTR [rax],al
  40ccc7:	add    BYTE PTR [rcx],al
  40ccc9:	add    BYTE PTR [rax],al
  40cccb:	add    BYTE PTR [rax+rax*1],al
  40ccce:	add    BYTE PTR [rax],al
  40ccd0:	rex add eax,0x41
  40ccd6:	add    BYTE PTR [rax],al
  40ccd8:	and    BYTE PTR [rip+0x41],al        # 0x40cd1f
	...
  40cce6:	add    BYTE PTR [rax],al
  40cce8:	rex xchg ebx,eax
  40ccea:	add    BYTE PTR [r8],al
  40cced:	add    BYTE PTR [rax],al
  40ccef:	add    BYTE PTR [rbx],ch
  40ccf1:	xchg   ebx,eax
  40ccf2:	add    BYTE PTR [r8],al
  40ccf5:	add    BYTE PTR [rax],al
  40ccf7:	add    BYTE PTR [rax],dl
  40ccf9:	add    eax,0x41
  40ccfe:	add    BYTE PTR [rax],al
  40cd00:	add    DWORD PTR [rax],eax
  40cd02:	add    BYTE PTR [rax],al
  40cd04:	add    al,0x0
  40cd06:	add    BYTE PTR [rax],al
  40cd08:	lock add al,0x41
  40cd0b:	add    BYTE PTR [rax],al
  40cd0d:	add    BYTE PTR [rax],al
  40cd0f:	add    al,dl
  40cd11:	add    al,0x41
	...
  40cd1f:	add    al,dl
  40cd21:	xchg   edx,eax
  40cd22:	add    BYTE PTR [r8],al
  40cd25:	add    BYTE PTR [rax],al
  40cd27:	add    BYTE PTR [rax+0x4192],dh
	...
  40cd35:	add    BYTE PTR [rax],al
  40cd37:	add    BYTE PTR [rcx],al
  40cd39:	add    BYTE PTR [rax],al
  40cd3b:	add    BYTE PTR [rax],al
  40cd3d:	add    BYTE PTR [rax],al
  40cd3f:	add    BYTE PTR [rax+0x4104],dh
  40cd45:	add    BYTE PTR [rax],al
  40cd47:	add    al,al
  40cd49:	add    eax,DWORD PTR [rcx+0x0]
	...
  40cd58:	nop
  40cd59:	mov    es,WORD PTR [rcx+0x0]
  40cd5c:	add    BYTE PTR [rax],al
  40cd5e:	add    BYTE PTR [rax],al
  40cd60:	jo     0x40ccf0
  40cd62:	add    BYTE PTR [r8],al
	...
  40cd6d:	add    BYTE PTR [rax],al
  40cd6f:	add    BYTE PTR [rcx],al
  40cd71:	add    BYTE PTR [rax],al
  40cd73:	add    BYTE PTR [rax+rax*1],al
  40cd76:	add    BYTE PTR [rax],al
  40cd78:	add    BYTE PTR [rbx],0x41
  40cd7b:	add    BYTE PTR [rax],al
  40cd7d:	add    BYTE PTR [rax],al
  40cd7f:	add    BYTE PTR [rax+0x3],ah
  40cd82:	add    BYTE PTR [r8],al
	...
  40cd8d:	add    BYTE PTR [rax],al
  40cd8f:	add    al,ah
  40cd91:	mov    WORD PTR [rcx+0x0],es
  40cd94:	add    BYTE PTR [rax],al
  40cd96:	add    BYTE PTR [rax],al
  40cd98:	(bad)
	...
  40cda7:	add    BYTE PTR [rcx],al
  40cda9:	add    BYTE PTR [rax],al
  40cdab:	add    BYTE PTR [rax+rax*1],al
  40cdae:	add    BYTE PTR [rax],al
  40cdb0:	rex add eax,DWORD PTR [rcx+0x0]
  40cdb4:	add    BYTE PTR [rax],al
  40cdb6:	add    BYTE PTR [rax],al
  40cdb8:	and    BYTE PTR [rbx],al
  40cdba:	add    BYTE PTR [r8],al
	...
  40cdc5:	add    BYTE PTR [rax],al
  40cdc7:	add    BYTE PTR [rdi],dh
  40cdc9:	mov    WORD PTR [rcx+0x0],es
  40cdcc:	add    BYTE PTR [rax],al
  40cdce:	add    BYTE PTR [rax],al
  40cdd0:	sub    ecx,DWORD PTR [rcx+rax*2+0x0]
	...
  40cddf:	add    BYTE PTR [rcx],al
  40cde1:	add    BYTE PTR [rax],al
  40cde3:	add    BYTE PTR [rax+rax*1],al
  40cde6:	add    BYTE PTR [rax],al
  40cde8:	add    BYTE PTR [rbx],al
  40cdea:	add    BYTE PTR [r8],al
  40cded:	add    BYTE PTR [rax],al
  40cdef:	add    al,ah
  40cdf1:	add    al,BYTE PTR [rcx+0x0]
	...
  40ce00:	icebp  
  40ce01:	mov    eax,DWORD PTR [rcx+0x0]
  40ce04:	add    BYTE PTR [rax],al
  40ce06:	add    BYTE PTR [rax],al
  40ce08:	loop   0x40cd95
  40ce0a:	add    BYTE PTR [r8],al
	...
  40ce15:	add    BYTE PTR [rax],al
  40ce17:	add    BYTE PTR [rcx],al
  40ce19:	add    BYTE PTR [rax],al
  40ce1b:	add    BYTE PTR [rax+rax*1],al
  40ce1e:	add    BYTE PTR [rax],al
  40ce20:	rol    BYTE PTR [rdx],0x41
  40ce23:	add    BYTE PTR [rax],al
  40ce25:	add    BYTE PTR [rax],al
  40ce27:	add    BYTE PTR [rax+0x4102],ah
	...
  40ce35:	add    BYTE PTR [rax],al
  40ce37:	add    BYTE PTR [rax-0x75],ah
  40ce3a:	add    BYTE PTR [r8],al
  40ce3d:	add    BYTE PTR [rax],al
  40ce3f:	add    BYTE PTR [rcx-0x75],dl
  40ce42:	add    BYTE PTR [r8],al
	...
  40ce4d:	add    BYTE PTR [rax],al
  40ce4f:	add    BYTE PTR [rcx],al
  40ce51:	add    BYTE PTR [rax],al
  40ce53:	add    BYTE PTR [rax+rax*1],al
  40ce56:	add    BYTE PTR [rax],al
  40ce58:	jo     0x40ce5c
  40ce5a:	add    BYTE PTR [r8],al
  40ce5d:	add    BYTE PTR [rax],al
  40ce5f:	add    BYTE PTR [rax+0x2],dl
  40ce62:	add    BYTE PTR [r8],al
	...
  40ce6d:	add    BYTE PTR [rax],al
  40ce6f:	add    BYTE PTR [rdx],ah
  40ce71:	mov    eax,DWORD PTR [rcx+0x0]
  40ce74:	add    BYTE PTR [rax],al
  40ce76:	add    BYTE PTR [rax],al
  40ce78:	adc    BYTE PTR [rbx+0x41],cl
	...
  40ce86:	add    BYTE PTR [rax],al
  40ce88:	add    DWORD PTR [rax],eax
  40ce8a:	add    BYTE PTR [rax],al
  40ce8c:	add    al,0x0
  40ce8e:	add    BYTE PTR [rax],al
  40ce90:	xor    BYTE PTR [rdx],al
  40ce92:	add    BYTE PTR [r8],al
  40ce95:	add    BYTE PTR [rax],al
  40ce97:	add    BYTE PTR [rax],dl
  40ce99:	add    al,BYTE PTR [rcx+0x0]
	...
  40cea8:	ror    BYTE PTR [rdx+0x41],1
  40ceae:	add    BYTE PTR [rax],al
  40ceb0:	or     BYTE PTR [rdx+0x41],0x0
  40ceb7:	add    BYTE PTR [rax],al
  40ceb9:	add    al,BYTE PTR [rcx+0x0]
  40cebc:	add    BYTE PTR [rax],al
  40cebe:	add    BYTE PTR [rax],al
  40cec0:	add    DWORD PTR [rax],eax
  40cec2:	add    BYTE PTR [rax],al
  40cec4:	add    al,0x0
  40cec6:	add    BYTE PTR [rax],al
  40cec8:	loopne 0x40cecb
  40ceca:	add    BYTE PTR [r8],al
  40cecd:	add    BYTE PTR [rax],al
  40cecf:	add    al,al
  40ced1:	add    DWORD PTR [rcx+0x0],eax
	...
  40cee0:	ror    BYTE PTR [rax+0x41],0x0
  40cee7:	add    BYTE PTR [rax+rcx*4+0x41],ch
	...
  40cef6:	add    BYTE PTR [rax],al
  40cef8:	add    DWORD PTR [rax],eax
  40cefa:	add    BYTE PTR [rax],al
  40cefc:	add    al,0x0
  40cefe:	add    BYTE PTR [rax],al
  40cf00:	nop
  40cf01:	add    DWORD PTR [rcx+0x0],eax
  40cf04:	add    BYTE PTR [rax],al
  40cf06:	add    BYTE PTR [rax],al
  40cf08:	jo     0x40cf0b
  40cf0a:	add    BYTE PTR [r8],al
	...
  40cf15:	add    BYTE PTR [rax],al
  40cf17:	add    BYTE PTR [rax],ah
  40cf19:	mov    BYTE PTR [rcx+0x0],al
  40cf1c:	add    BYTE PTR [rax],al
  40cf1e:	add    BYTE PTR [rax],al
  40cf20:	adc    al,0x88
  40cf22:	add    BYTE PTR [r8],al
  40cf25:	add    BYTE PTR [rax],al
  40cf27:	add    BYTE PTR [rax+0x1],ah
  40cf2a:	add    BYTE PTR [r8],al
  40cf2d:	add    BYTE PTR [rax],al
  40cf2f:	add    BYTE PTR [rcx],al
  40cf31:	add    BYTE PTR [rax],al
  40cf33:	add    BYTE PTR [rax+rax*1],al
  40cf36:	add    BYTE PTR [rax],al
  40cf38:	rex add DWORD PTR [rcx+0x0],eax
  40cf3c:	add    BYTE PTR [rax],al
  40cf3e:	add    BYTE PTR [rax],al
  40cf40:	and    BYTE PTR [rcx],al
  40cf42:	add    BYTE PTR [r8],al
	...
  40cf4d:	add    BYTE PTR [rax],al
  40cf4f:	add    al,al
  40cf51:	xchg   DWORD PTR [rcx+0x0],eax
  40cf54:	add    BYTE PTR [rax],al
  40cf56:	add    BYTE PTR [rax],al
  40cf58:	movabs al,ds:0x4187
  40cf61:	add    BYTE PTR [rax],al
  40cf63:	add    BYTE PTR [rax],al
  40cf65:	add    BYTE PTR [rax],al
  40cf67:	add    BYTE PTR [rax+rax*1],al
  40cf6a:	add    BYTE PTR [rax],al
  40cf6c:	add    al,0x0
  40cf6e:	add    BYTE PTR [rax],al
  40cf70:	rol    BYTE PTR [rax],0x41
  40cf73:	add    BYTE PTR [rax],al
  40cf75:	add    BYTE PTR [rax],al
  40cf77:	add    BYTE PTR [rax+0x4100],al
	...
  40cf85:	add    BYTE PTR [rax],al
  40cf87:	add    al,dh
  40cf89:	xchg   BYTE PTR [rcx+0x0],al
  40cf8c:	add    BYTE PTR [rax],al
  40cf8e:	add    BYTE PTR [rax],al
  40cf90:	fld    DWORD PTR [rsi+0x41]
	...
  40cf9e:	add    BYTE PTR [rax],al
  40cfa0:	add    eax,0x4000000
  40cfa5:	add    BYTE PTR [rax],al
  40cfa7:	add    BYTE PTR [rax],al
  40cfa9:	add    BYTE PTR [rcx+0x0],al
  40cfac:	add    BYTE PTR [rax],al
  40cfae:	add    BYTE PTR [rax],al
  40cfb0:	loopne 0x40cfb1
  40cfb2:	add    BYTE PTR [rax],al
	...
  40cfbd:	add    BYTE PTR [rax],al
  40cfbf:	add    BYTE PTR [rax+0x4185],ah
  40cfc5:	add    BYTE PTR [rax],al
  40cfc7:	add    BYTE PTR [rbp+0x4185],al
	...
  40cfd5:	add    BYTE PTR [rax],al
  40cfd7:	add    BYTE PTR [rcx],al
  40cfd9:	add    BYTE PTR [rax],al
  40cfdb:	add    BYTE PTR [rax+rax*1],al
  40cfde:	add    BYTE PTR [rax],al
  40cfe0:	sar    bh,0x40
  40cfe3:	add    BYTE PTR [rax],al
  40cfe5:	add    BYTE PTR [rax],al
  40cfe7:	add    BYTE PTR [rax+0x40ff],ah
	...
  40cff5:	add    BYTE PTR [rax],al
  40cff7:	add    BYTE PTR [rsi],cl
  40cff9:	test   DWORD PTR [rcx+0x0],eax
  40cffc:	add    BYTE PTR [rax],al
  40cffe:	add    BYTE PTR [rax],al
  40d000:	add    eax,0x4185
	...
  40d00d:	add    BYTE PTR [rax],al
  40d00f:	add    BYTE PTR [rcx],al
  40d011:	add    BYTE PTR [rax],al
  40d013:	add    BYTE PTR [rax+rax*1],al
  40d016:	add    BYTE PTR [rax],al
  40d018:	cmp    bh,0x40
  40d01b:	add    BYTE PTR [rax],al
  40d01d:	add    BYTE PTR [rax],al
  40d01f:	add    BYTE PTR [rax-0x1],ah
  40d022:	add    BYTE PTR [rax],al
	...
  40d02d:	add    BYTE PTR [rax],al
  40d02f:	add    BYTE PTR [rax-0x7c],ah
  40d032:	add    BYTE PTR [r8],al
  40d035:	add    BYTE PTR [rax],al
  40d037:	add    BYTE PTR [rax-0x7c],dl
  40d03a:	add    BYTE PTR [r8],al
	...
  40d045:	add    BYTE PTR [rax],al
  40d047:	add    BYTE PTR [rcx],al
  40d049:	add    BYTE PTR [rax],al
  40d04b:	add    BYTE PTR [rax+rax*1],al
  40d04e:	add    BYTE PTR [rax],al
  40d050:	rex inc DWORD PTR [rax+0x0]
  40d054:	add    BYTE PTR [rax],al
  40d056:	add    BYTE PTR [rax],al
  40d058:	and    bh,bh
  40d05a:	add    BYTE PTR [rax],al
	...
  40d065:	add    BYTE PTR [rax],al
  40d067:	add    al,al
  40d069:	add    DWORD PTR [rcx+0x0],0x0
  40d06d:	add    BYTE PTR [rax],al
  40d06f:	add    BYTE PTR [rax+0x4183],dh
	...
  40d07d:	add    BYTE PTR [rax],al
  40d07f:	add    BYTE PTR [rcx],al
  40d081:	add    BYTE PTR [rax],al
  40d083:	add    BYTE PTR [rax+rax*1],al
  40d086:	add    BYTE PTR [rax],al
  40d088:	add    bh,bh
  40d08a:	add    BYTE PTR [rax],al
  40d08d:	add    BYTE PTR [rax],al
  40d08f:	add    al,ah
  40d091:	inc    BYTE PTR [rax+0x0]
	...
  40d0a0:	sbb    al,BYTE PTR [rbx+0x41]
  40d0a6:	add    BYTE PTR [rax],al
  40d0a8:	adc    al,BYTE PTR [rbx+0x41]
	...
  40d0b6:	add    BYTE PTR [rax],al
  40d0b8:	add    DWORD PTR [rax],eax
  40d0ba:	add    BYTE PTR [rax],al
  40d0bc:	add    al,0x0
  40d0be:	add    BYTE PTR [rax],al
  40d0c0:	sar    dh,0x40
  40d0c3:	add    BYTE PTR [rax],al
  40d0c5:	add    BYTE PTR [rax],al
  40d0c7:	add    BYTE PTR [rax+0x40fe],ah
	...
  40d0d5:	add    BYTE PTR [rax],al
  40d0d7:	add    BYTE PTR [rdx+rax*4+0x41],bh
  40d0de:	add    BYTE PTR [rax],al
  40d0e0:	mov    al,0x82
  40d0e2:	add    BYTE PTR [r8],al
	...
  40d0ed:	add    BYTE PTR [rax],al
  40d0ef:	add    BYTE PTR [rcx],al
  40d0f1:	add    BYTE PTR [rax],al
  40d0f3:	add    BYTE PTR [rax+rax*1],al
  40d0f6:	add    BYTE PTR [rax],al
  40d0f8:	jo     0x40d0f8
  40d0fa:	add    BYTE PTR [rax],al
  40d0fd:	add    BYTE PTR [rax],al
  40d0ff:	add    BYTE PTR [rax-0x2],dl
  40d102:	add    BYTE PTR [rax],al
	...
  40d10d:	add    BYTE PTR [rax],al
  40d10f:	add    BYTE PTR [rdx+0x4182],al
  40d115:	add    BYTE PTR [rax],al
  40d117:	add    BYTE PTR [rax-0x7e],dh
  40d11a:	add    BYTE PTR [r8],al
	...
  40d125:	add    BYTE PTR [rax],al
  40d127:	add    BYTE PTR [rcx],al
  40d129:	add    BYTE PTR [rax],al
  40d12b:	add    BYTE PTR [rax+rax*1],al
  40d12e:	add    BYTE PTR [rax],al
  40d130:	xor    dh,bh
  40d132:	add    BYTE PTR [rax],al
  40d135:	add    BYTE PTR [rax],al
  40d137:	add    BYTE PTR [rax],dl
  40d139:	inc    BYTE PTR [rax+0x0]
	...
  40d148:	lock add DWORD PTR [rcx+0x0],0x0
  40d150:	rol    BYTE PTR [rcx+0x41],1
  40d156:	add    BYTE PTR [rax],al
  40d158:	add    dh,bh
  40d15a:	add    BYTE PTR [rax],al
  40d15d:	add    BYTE PTR [rax],al
  40d15f:	add    BYTE PTR [rcx],al
  40d161:	add    BYTE PTR [rax],al
  40d163:	add    BYTE PTR [rax+rax*1],al
  40d166:	add    BYTE PTR [rax],al
  40d168:	loopne 0x40d167
  40d16a:	add    BYTE PTR [rax],al
  40d16d:	add    BYTE PTR [rax],al
  40d16f:	add    al,al
  40d171:	std    
  40d172:	add    BYTE PTR [rax],al
	...
  40d17d:	add    BYTE PTR [rax],al
  40d17f:	add    BYTE PTR [rax],dh
  40d181:	add    DWORD PTR [rcx+0x0],0x0
  40d188:	and    al,0x81
  40d18a:	add    BYTE PTR [r8],al
  40d18d:	add    BYTE PTR [rax],al
  40d18f:	add    BYTE PTR [rax+0x40fd],dh
  40d195:	add    BYTE PTR [rax],al
  40d197:	add    BYTE PTR [rcx],al
  40d199:	add    BYTE PTR [rax],al
  40d19b:	add    BYTE PTR [rax],al
  40d19d:	add    BYTE PTR [rax],al
  40d19f:	add    BYTE PTR [rax+0x40fd],dl
  40d1a5:	add    BYTE PTR [rax],al
  40d1a7:	add    BYTE PTR [rax-0x3],al
  40d1aa:	add    BYTE PTR [rax],al
	...
  40d1b9:	add    BYTE PTR [rcx+0x0],0x0
  40d1bd:	add    BYTE PTR [rax],al
  40d1bf:	add    ah,dh
  40d1c1:	jg     0x40d204
  40d1c3:	add    BYTE PTR [rax],al
  40d1c5:	add    BYTE PTR [rax],al
  40d1c7:	add    BYTE PTR [rax],dh
  40d1c9:	std    
  40d1ca:	add    BYTE PTR [rax],al
	...
  40d1e1:	std    
  40d1e2:	add    BYTE PTR [rax],al
	...
  40d1ed:	add    BYTE PTR [rax],al
  40d1ef:	add    BYTE PTR [rax],dh
  40d1f1:	jg     0x40d234
  40d1f3:	add    BYTE PTR [rax],al
  40d1f5:	add    BYTE PTR [rax],al
  40d1f7:	add    BYTE PTR [rax],dl
  40d1f9:	jg     0x40d23c
  40d1fb:	add    BYTE PTR [rax],al
  40d1fd:	add    BYTE PTR [rax],al
  40d1ff:	add    al,ah
  40d201:	cld    
  40d202:	add    BYTE PTR [rax],al
  40d205:	add    BYTE PTR [rax],al
  40d207:	add    BYTE PTR [rcx],al
  40d209:	add    BYTE PTR [rax],al
  40d20b:	add    BYTE PTR [rax+rax*1],al
  40d20e:	add    BYTE PTR [rax],al
  40d210:	sar    ah,0x40
  40d213:	add    BYTE PTR [rax],al
  40d215:	add    BYTE PTR [rax],al
  40d217:	add    BYTE PTR [rax+0x40fc],ah
	...
  40d225:	add    BYTE PTR [rax],al
  40d227:	add    BYTE PTR [rax+0x7e],dh
  40d22a:	add    BYTE PTR [r8],al
  40d22d:	add    BYTE PTR [rax],al
  40d22f:	add    BYTE PTR [rax+0x7e],dl
  40d232:	add    BYTE PTR [r8],al
  40d235:	add    BYTE PTR [rax],al
  40d237:	add    BYTE PTR [rax+0x40fc],dl
  40d23d:	add    BYTE PTR [rax],al
  40d23f:	add    BYTE PTR [rcx],al
  40d241:	add    BYTE PTR [rax],al
  40d243:	add    BYTE PTR [rax+rax*1],al
  40d246:	add    BYTE PTR [rax],al
  40d248:	jo     0x40d246
  40d24a:	add    BYTE PTR [rax],al
  40d24d:	add    BYTE PTR [rax],al
  40d24f:	add    BYTE PTR [rax-0x4],dl
  40d252:	add    BYTE PTR [rax],al
	...
  40d25d:	add    BYTE PTR [rax],al
  40d25f:	add    al,al
  40d261:	jge    0x40d2a4
  40d263:	add    BYTE PTR [rax],al
  40d265:	add    BYTE PTR [rax],al
  40d267:	add    BYTE PTR [rax+0x417d],ah
  40d26d:	add    BYTE PTR [rax],al
  40d26f:	add    BYTE PTR [rax-0x4],al
  40d272:	add    BYTE PTR [rax],al
  40d275:	add    BYTE PTR [rax],al
  40d277:	add    BYTE PTR [rcx],al
  40d279:	add    BYTE PTR [rax],al
  40d27b:	add    BYTE PTR [rax+rax*1],al
  40d27e:	add    BYTE PTR [rax],al
  40d280:	and    ah,bh
  40d282:	add    BYTE PTR [rax],al
  40d285:	add    BYTE PTR [rax],al
  40d287:	add    BYTE PTR [rax],al
  40d289:	cld    
  40d28a:	add    BYTE PTR [rax],al
	...
  40d295:	add    BYTE PTR [rax],al
  40d297:	add    al,dh
  40d299:	jl     0x40d2dc
  40d29b:	add    BYTE PTR [rax],al
  40d29d:	add    BYTE PTR [rax],al
  40d29f:	add    al,dl
  40d2a1:	jl     0x40d2e4
  40d2a3:	add    BYTE PTR [rax],al
  40d2a5:	add    BYTE PTR [rax],al
  40d2a7:	add    al,dh
  40d2a9:	sti    
  40d2aa:	add    BYTE PTR [rax],al
  40d2ad:	add    BYTE PTR [rax],al
  40d2af:	add    BYTE PTR [rcx],al
  40d2b1:	add    BYTE PTR [rax],al
  40d2b3:	add    BYTE PTR [rax+rax*1],al
  40d2b6:	add    BYTE PTR [rax],al
  40d2b8:	sar    bl,1
  40d2ba:	add    BYTE PTR [rax],al
  40d2bd:	add    BYTE PTR [rax],al
  40d2bf:	add    BYTE PTR [rax+0x40fb],dh
	...
  40d2d1:	jl     0x40d314
  40d2d3:	add    BYTE PTR [rax],al
  40d2d5:	add    BYTE PTR [rax],al
  40d2d7:	add    al,ah
  40d2d9:	jnp    0x40d31c
  40d2db:	add    BYTE PTR [rax],al
  40d2dd:	add    BYTE PTR [rax],al
  40d2df:	add    BYTE PTR [rax+0x40fb],ah
  40d2e5:	add    BYTE PTR [rax],al
  40d2e7:	add    BYTE PTR [rcx],al
  40d2e9:	add    BYTE PTR [rax],al
  40d2eb:	add    BYTE PTR [rax+rax*1],al
  40d2ee:	add    BYTE PTR [rax],al
  40d2f0:	cmp    bl,0x40
  40d2f3:	add    BYTE PTR [rax],al
  40d2f5:	add    BYTE PTR [rax],al
  40d2f7:	add    BYTE PTR [rax-0x5],ah
  40d2fa:	add    BYTE PTR [rax],al
	...
  40d305:	add    BYTE PTR [rax],al
  40d307:	add    BYTE PTR [rax+0x7b],dl
  40d30a:	add    BYTE PTR [r8],al
  40d30d:	add    BYTE PTR [rax],al
  40d30f:	add    BYTE PTR [rax],dh
  40d311:	jnp    0x40d354
  40d313:	add    BYTE PTR [rax],al
  40d315:	add    BYTE PTR [rax],al
  40d317:	add    BYTE PTR [rax-0x5],dl
  40d31a:	add    BYTE PTR [rax],al
  40d31d:	add    BYTE PTR [rax],al
  40d31f:	add    BYTE PTR [rcx],al
  40d321:	add    BYTE PTR [rax],al
  40d323:	add    BYTE PTR [rax+rax*1],al
  40d326:	add    BYTE PTR [rax],al
  40d328:	xor    bl,bh
  40d32a:	add    BYTE PTR [rax],al
  40d32d:	add    BYTE PTR [rax],al
  40d32f:	add    BYTE PTR [rax],dl
  40d331:	sti    
  40d332:	add    BYTE PTR [rax],al
	...
  40d33d:	add    BYTE PTR [rax],al
  40d33f:	add    al,al
  40d341:	jp     0x40d384
  40d343:	add    BYTE PTR [rax],al
  40d345:	add    BYTE PTR [rax],al
  40d347:	add    BYTE PTR [rax+0x417a],ah
	...
  40d355:	add    BYTE PTR [rax],al
  40d357:	add    BYTE PTR [rdx],al
  40d359:	add    BYTE PTR [rax],al
  40d35b:	add    BYTE PTR [rax+rax*1],al
  40d35e:	add    BYTE PTR [rax],al
  40d360:	loopne 0x40d35c
  40d362:	add    BYTE PTR [rax],al
  40d365:	add    BYTE PTR [rax],al
  40d367:	add    al,al
  40d369:	cli    
  40d36a:	add    BYTE PTR [rax],al
	...
  40d379:	jp     0x40d3bc
  40d37b:	add    BYTE PTR [rax],al
  40d37d:	add    BYTE PTR [rax],al
  40d37f:	add    al,ah
  40d381:	jns    0x40d3c4
  40d383:	add    BYTE PTR [rax],al
  40d385:	add    BYTE PTR [rax],al
  40d387:	add    BYTE PTR [rax+0x40fa],dh
  40d38d:	add    BYTE PTR [rax],al
  40d38f:	add    BYTE PTR [rdx],al
  40d391:	add    BYTE PTR [rax],al
  40d393:	add    BYTE PTR [rax+rax*1],al
  40d396:	add    BYTE PTR [rax],al
  40d398:	cmp    dl,0x40
  40d39b:	add    BYTE PTR [rax],al
  40d39d:	add    BYTE PTR [rax],al
  40d39f:	add    BYTE PTR [rax-0x6],dl
  40d3a2:	add    BYTE PTR [rax],al
	...
  40d3ad:	add    BYTE PTR [rax],al
  40d3af:	add    BYTE PTR [rax+0x4179],al
  40d3b5:	add    BYTE PTR [rax],al
  40d3b7:	add    BYTE PTR [rax+0x79],dh
  40d3ba:	add    BYTE PTR [r8],al
	...
  40d3c5:	add    BYTE PTR [rax],al
  40d3c7:	add    BYTE PTR [rdx],al
  40d3c9:	add    BYTE PTR [rax],al
  40d3cb:	add    BYTE PTR [rax+rax*1],al
  40d3ce:	add    BYTE PTR [rax],al
  40d3d0:	and    dl,bh
  40d3d2:	add    BYTE PTR [rax],al
  40d3d5:	add    BYTE PTR [rax],al
  40d3d7:	add    BYTE PTR [rax],al
  40d3d9:	cli    
  40d3da:	add    BYTE PTR [rax],al
	...
  40d3e5:	add    BYTE PTR [rax],al
  40d3e7:	add    BYTE PTR [rax+0x4178],ah
  40d3ed:	add    BYTE PTR [rax],al
  40d3ef:	add    BYTE PTR [rax+0x4178],dl
	...
  40d3fd:	add    BYTE PTR [rax],al
  40d3ff:	add    BYTE PTR [rcx],al
  40d401:	add    BYTE PTR [rax],al
  40d403:	add    BYTE PTR [rax+rax*1],al
  40d406:	add    BYTE PTR [rax],al
  40d408:	loopne 0x40d403
  40d40a:	add    BYTE PTR [rax],al
  40d40d:	add    BYTE PTR [rax],al
  40d40f:	add    al,al
  40d411:	stc    
  40d412:	add    BYTE PTR [rax],al
	...
  40d41d:	add    BYTE PTR [rax],al
  40d41f:	add    BYTE PTR [rax],ah
  40d421:	ja     0x40d464
  40d423:	add    BYTE PTR [rax],al
  40d425:	add    BYTE PTR [rax],al
  40d427:	add    BYTE PTR [rax],dl
  40d429:	ja     0x40d46c
	...
  40d437:	add    BYTE PTR [rdx],al
  40d439:	add    BYTE PTR [rax],al
  40d43b:	add    BYTE PTR [rax+rax*1],al
  40d43e:	add    BYTE PTR [rax],al
  40d440:	cmp    cl,0x40
  40d443:	add    BYTE PTR [rax],al
  40d445:	add    BYTE PTR [rax],al
  40d447:	add    BYTE PTR [rax-0x7],ah
  40d44a:	add    BYTE PTR [rax],al
	...
  40d455:	add    BYTE PTR [rax],al
  40d457:	add    BYTE PTR [rax+0x76],ah
  40d45a:	add    BYTE PTR [r8],al
  40d45d:	add    BYTE PTR [rax],al
  40d45f:	add    BYTE PTR [rax+0x76],dl
  40d462:	add    BYTE PTR [r8],al
	...
  40d46d:	add    BYTE PTR [rax],al
  40d46f:	add    BYTE PTR [rdx],al
  40d471:	add    BYTE PTR [rax],al
  40d473:	add    BYTE PTR [rax+rax*1],al
  40d476:	add    BYTE PTR [rax],al
  40d478:	and    cl,bh
  40d47a:	add    BYTE PTR [rax],al
  40d47d:	add    BYTE PTR [rax],al
  40d47f:	add    BYTE PTR [rax],al
  40d481:	stc    
  40d482:	add    BYTE PTR [rax],al
	...
  40d48d:	add    BYTE PTR [rax],al
  40d48f:	add    BYTE PTR [rax+0x4175],ah
  40d495:	add    BYTE PTR [rax],al
  40d497:	add    BYTE PTR [rax+0x4175],dl
	...
  40d4a5:	add    BYTE PTR [rax],al
  40d4a7:	add    BYTE PTR [rdx],al
  40d4a9:	add    BYTE PTR [rax],al
  40d4ab:	add    BYTE PTR [rax+rax*1],al
  40d4ae:	add    BYTE PTR [rax],al
  40d4b0:	sar    al,0x40
  40d4b3:	add    BYTE PTR [rax],al
  40d4b5:	add    BYTE PTR [rax],al
  40d4b7:	add    BYTE PTR [rax+0x40f8],ah
	...
  40d4c5:	add    BYTE PTR [rax],al
  40d4c7:	add    BYTE PTR [rax+0x4174],al
  40d4cd:	add    BYTE PTR [rax],al
  40d4cf:	add    BYTE PTR [rax+0x74],dh
  40d4d2:	add    BYTE PTR [r8],al
	...
  40d4dd:	add    BYTE PTR [rax],al
  40d4df:	add    BYTE PTR [rdx],al
  40d4e1:	add    BYTE PTR [rax],al
  40d4e3:	add    BYTE PTR [rax+rax*1],al
  40d4e6:	add    BYTE PTR [rax],al
  40d4e8:	(bad)  
  40d4e9:	clc    
  40d4ea:	add    BYTE PTR [rax],al
  40d4ed:	add    BYTE PTR [rax],al
  40d4ef:	add    BYTE PTR [rax-0x8],al
  40d4f2:	add    BYTE PTR [rax],al
	...
  40d4fd:	add    BYTE PTR [rax],al
  40d4ff:	add    BYTE PTR [rax],ah
  40d501:	jae    0x40d544
  40d503:	add    BYTE PTR [rax],al
  40d505:	add    BYTE PTR [rax],al
  40d507:	add    BYTE PTR [rax],dl
  40d509:	jae    0x40d54c
	...
  40d517:	add    BYTE PTR [rdx],al
  40d519:	add    BYTE PTR [rax],al
  40d51b:	add    BYTE PTR [rax+rax*1],al
  40d51e:	add    BYTE PTR [rax],al
  40d520:	add    al,bh
  40d522:	add    BYTE PTR [rax],al
  40d525:	add    BYTE PTR [rax],al
  40d527:	add    al,ah
  40d529:	test   DWORD PTR [rax+0x0],0x0
	...
  40d538:	rex jb 0x40d57c
  40d53b:	add    BYTE PTR [rax],al
  40d53d:	add    BYTE PTR [rax],al
  40d53f:	add    BYTE PTR [rip+0x4172],ch        # 0x4116b7
  40d545:	add    BYTE PTR [rax],al
  40d547:	add    al,al
  40d549:	test   DWORD PTR [rax+0x0],0x0
  40d550:	add    DWORD PTR [rax],eax
  40d552:	add    BYTE PTR [rax],al
  40d554:	add    al,0x0
  40d556:	add    BYTE PTR [rax],al
  40d558:	movabs al,ds:0x80000000000040f7
  40d561:	test   DWORD PTR [rax+0x0],0x0
	...
  40d570:	and    BYTE PTR [rcx+0x41],dh
  40d573:	add    BYTE PTR [rax],al
  40d575:	add    BYTE PTR [rax],al
  40d577:	add    BYTE PTR [rip+0x4171],cl        # 0x4116ee
  40d57d:	add    BYTE PTR [rax],al
  40d57f:	add    BYTE PTR [rax-0x9],ah
  40d582:	add    BYTE PTR [rax],al
  40d585:	add    BYTE PTR [rax],al
  40d587:	add    BYTE PTR [rcx],al
  40d589:	add    BYTE PTR [rax],al
  40d58b:	add    BYTE PTR [rax+rax*1],al
  40d58e:	add    BYTE PTR [rax],al
  40d590:	rex test DWORD PTR [rax+0x0],0x0
  40d598:	and    bh,dh
  40d59a:	add    BYTE PTR [rax],al
	...
  40d5a5:	add    BYTE PTR [rax],al
  40d5a7:	add    BYTE PTR [rax+0x70],dh
  40d5aa:	add    BYTE PTR [r8],al
  40d5ad:	add    BYTE PTR [rax],al
  40d5af:	add    BYTE PTR [rdx+0x70],bl
  40d5b2:	add    BYTE PTR [r8],al
  40d5b5:	add    BYTE PTR [rax],al
  40d5b7:	add    BYTE PTR [rax],al
  40d5b9:	test   DWORD PTR [rax+0x0],0x0
  40d5c0:	add    DWORD PTR [rax],eax
  40d5c2:	add    BYTE PTR [rax],al
  40d5c4:	add    al,0x0
  40d5c6:	add    BYTE PTR [rax],al
  40d5c8:	loopne 0x40d5c0
  40d5ca:	add    BYTE PTR [rax],al
  40d5cd:	add    BYTE PTR [rax],al
  40d5cf:	add    al,al
  40d5d1:	test   BYTE PTR [rax+0x0],0x0
	...
  40d5dd:	add    BYTE PTR [rax],al
  40d5df:	add    BYTE PTR [rax],ah
  40d5e1:	outs   dx,DWORD PTR ds:[rsi]
  40d5e2:	add    BYTE PTR [r8],al
  40d5e5:	add    BYTE PTR [rax],al
  40d5e7:	add    BYTE PTR [rax],cl
  40d5e9:	outs   dx,DWORD PTR ds:[rsi]
  40d5ea:	add    BYTE PTR [r8],al
  40d5ed:	add    BYTE PTR [rax],al
  40d5ef:	add    BYTE PTR [rax+0x40f6],ah
  40d5f5:	add    BYTE PTR [rax],al
  40d5f7:	add    BYTE PTR [rcx],al
  40d5f9:	add    BYTE PTR [rax],al
  40d5fb:	add    BYTE PTR [rax+rax*1],al
  40d5fe:	add    BYTE PTR [rax],al
  40d600:	xor    dh,0x40
  40d603:	add    BYTE PTR [rax],al
  40d605:	add    BYTE PTR [rax],al
  40d607:	add    BYTE PTR [rax-0xa],ah
  40d60a:	add    BYTE PTR [rax],al
	...
  40d615:	add    BYTE PTR [rax],al
  40d617:	add    BYTE PTR [rax+0x416e],ah
  40d61d:	add    BYTE PTR [rax],al
  40d61f:	add    BYTE PTR [rax+0x416e],dl
  40d625:	add    BYTE PTR [rax],al
  40d627:	add    BYTE PTR [rax-0xa],dl
  40d62a:	add    BYTE PTR [rax],al
  40d62d:	add    BYTE PTR [rax],al
  40d62f:	add    BYTE PTR [rcx],al
  40d631:	add    BYTE PTR [rax],al
  40d633:	add    BYTE PTR [rax+rax*1],al
  40d636:	add    BYTE PTR [rax],al
  40d638:	xor    dh,dh
  40d63a:	add    BYTE PTR [rax],al
  40d63d:	add    BYTE PTR [rax],al
  40d63f:	add    BYTE PTR [rax],dl
  40d641:	test   BYTE PTR [rax+0x0],0x0
	...
  40d64d:	add    BYTE PTR [rax],al
  40d64f:	add    al,dl
  40d651:	ins    DWORD PTR es:[rdi],dx
  40d652:	add    BYTE PTR [r8],al
  40d655:	add    BYTE PTR [rax],al
  40d657:	add    BYTE PTR [rdx+0x416d],bh
  40d65d:	add    BYTE PTR [rax],al
  40d65f:	add    BYTE PTR [rax],al
  40d661:	test   BYTE PTR [rax+0x0],0x0
  40d665:	add    BYTE PTR [rax],al
  40d667:	add    BYTE PTR [rcx],al
  40d669:	add    BYTE PTR [rax],al
  40d66b:	add    BYTE PTR [rax+rax*1],al
  40d66e:	add    BYTE PTR [rax],al
  40d670:	loopne 0x40d667
  40d672:	add    BYTE PTR [rax],al
  40d675:	add    BYTE PTR [rax],al
  40d677:	add    al,al
  40d679:	cmc    
  40d67a:	add    BYTE PTR [rax],al
	...
  40d685:	add    BYTE PTR [rax],al
  40d687:	add    BYTE PTR [rax+0x416c],al
  40d68d:	add    BYTE PTR [rax],al
  40d68f:	add    BYTE PTR [rsp+rbp*2+0x41],ch
  40d693:	add    BYTE PTR [rax],al
  40d695:	add    BYTE PTR [rax],al
  40d697:	add    BYTE PTR [rax+0x40f5],dh
  40d69d:	add    BYTE PTR [rax],al
  40d69f:	add    BYTE PTR [rdx],al
  40d6a1:	add    BYTE PTR [rax],al
  40d6a3:	add    BYTE PTR [rax+rax*1],al
  40d6a6:	add    BYTE PTR [rax],al
  40d6a8:	xor    ch,0x40
  40d6ab:	add    BYTE PTR [rax],al
  40d6ad:	add    BYTE PTR [rax],al
  40d6af:	add    BYTE PTR [rax-0xb],dl
  40d6b2:	add    BYTE PTR [rax],al
	...
  40d6bd:	add    BYTE PTR [rax],al
  40d6bf:	add    al,al
  40d6c1:	imul   eax,DWORD PTR [rcx+0x0],0x0
  40d6c5:	add    BYTE PTR [rax],al
  40d6c7:	add    BYTE PTR [rbp+0x416b],ah
	...
  40d6d5:	add    BYTE PTR [rax],al
  40d6d7:	add    BYTE PTR [rdx],al
  40d6d9:	add    BYTE PTR [rax],al
  40d6db:	add    BYTE PTR [rax],al
  40d6dd:	add    BYTE PTR [rax],al
  40d6df:	add    BYTE PTR [rax],ah
  40d6e1:	cmc    
  40d6e2:	add    BYTE PTR [rax],al
  40d6e5:	add    BYTE PTR [rax],al
  40d6e7:	add    BYTE PTR [rax],al
  40d6e9:	cmc    
  40d6ea:	add    BYTE PTR [rax],al
	...
  40d6f5:	add    BYTE PTR [rax],al
  40d6f7:	add    BYTE PTR [rax],dh
  40d6f9:	imul   eax,DWORD PTR [rcx+0x0],0x0
  40d6fd:	add    BYTE PTR [rax],al
  40d6ff:	add    BYTE PTR [rax],ah
  40d701:	imul   eax,DWORD PTR [rcx+0x0],0x0
  40d705:	add    BYTE PTR [rax],al
  40d707:	add    al,ah
  40d709:	hlt    
  40d70a:	add    BYTE PTR [rax],al
  40d70d:	add    BYTE PTR [rax],al
  40d70f:	add    BYTE PTR [rcx],al
  40d711:	add    BYTE PTR [rax],al
  40d713:	add    BYTE PTR [rax+rax*1],al
  40d716:	add    BYTE PTR [rax],al
  40d718:	shl    ah,0x40
  40d71b:	add    BYTE PTR [rax],al
  40d71d:	add    BYTE PTR [rax],al
  40d71f:	add    BYTE PTR [rax+0x40f4],ah
	...
  40d72d:	add    BYTE PTR [rax],al
  40d72f:	add    BYTE PTR [rax+0x6a],al
  40d732:	add    BYTE PTR [r8],al
  40d735:	add    BYTE PTR [rax],al
  40d737:	add    BYTE PTR [rax],dh
  40d739:	push   0x41
	...
  40d747:	add    BYTE PTR [rcx],al
  40d749:	add    BYTE PTR [rax],al
  40d74b:	add    BYTE PTR [rax+rax*1],al
  40d74e:	add    BYTE PTR [rax],al
  40d750:	xor    ah,0x40
  40d753:	add    BYTE PTR [rax],al
  40d755:	add    BYTE PTR [rax],al
  40d757:	add    BYTE PTR [rax-0xc],ah
  40d75a:	add    BYTE PTR [rax],al
	...
  40d765:	add    BYTE PTR [rax],al
  40d767:	add    BYTE PTR [rdx+rbp*2],cl
  40d76a:	add    BYTE PTR [r8],al
  40d76d:	add    BYTE PTR [rax],al
  40d76f:	add    BYTE PTR [rbx],al
  40d771:	push   0x41
  40d773:	add    BYTE PTR [rax],al
  40d775:	add    BYTE PTR [rax],al
  40d777:	add    BYTE PTR [rax-0xc],dl
  40d77a:	add    BYTE PTR [rax],al
  40d77d:	add    BYTE PTR [rax],al
  40d77f:	add    BYTE PTR [rcx],al
  40d781:	add    BYTE PTR [rax],al
  40d783:	add    BYTE PTR [rip+0x30000000],al        # 0x3040d789
  40d789:	hlt    
  40d78a:	add    BYTE PTR [rax],al
  40d78d:	add    BYTE PTR [rax],al
  40d78f:	add    BYTE PTR [rax],dl
  40d791:	hlt    
  40d792:	add    BYTE PTR [rax],al
	...
  40d79d:	add    BYTE PTR [rax],al
  40d79f:	add    BYTE PTR [rbx+0x4169],dl
  40d7a5:	add    BYTE PTR [rax],al
  40d7a7:	add    BYTE PTR [rdx+0x4169],cl
  40d7ad:	add    BYTE PTR [rax],al
  40d7af:	add    BYTE PTR [rax],al
  40d7b1:	hlt    
  40d7b2:	add    BYTE PTR [rax],al
  40d7b5:	add    BYTE PTR [rax],al
  40d7b7:	add    BYTE PTR [rcx],al
  40d7b9:	add    BYTE PTR [rax],al
  40d7bb:	add    BYTE PTR [rcx],al
  40d7bd:	add    BYTE PTR [rax],al
  40d7bf:	add    al,ah
  40d7c1:	repz add BYTE PTR [rax],al
  40d7c5:	add    BYTE PTR [rax],al
  40d7c7:	add    al,al
  40d7c9:	repz add BYTE PTR [rax],al
	...
  40d7d5:	add    BYTE PTR [rax],al
  40d7d7:	add    BYTE PTR [rax],dl
  40d7d9:	imul   eax,DWORD PTR [rcx+0x0],0x0
  40d7e0:	shr    BYTE PTR [rax+0x41],0x0
	...
  40d7f0:	add    al,BYTE PTR [rax]
  40d7f2:	add    BYTE PTR [rax],al
  40d7f4:	add    BYTE PTR [rax],al
  40d7f6:	add    BYTE PTR [rax],al
  40d7f8:	xor    bl,0x40
  40d7fb:	add    BYTE PTR [rax],al
  40d7fd:	add    BYTE PTR [rax],al
  40d7ff:	add    BYTE PTR [rax-0xd],ah
  40d802:	add    BYTE PTR [rax],al
	...
  40d80d:	add    BYTE PTR [rax],al
  40d80f:	add    BYTE PTR [rax],dh
  40d811:	data16 add BYTE PTR [r8],al
	...
  40d825:	add    BYTE PTR [rax],al
  40d827:	add    BYTE PTR [rax+rax*1],al
  40d82a:	add    BYTE PTR [rax],al
  40d82c:	add    al,0x0
  40d82e:	add    BYTE PTR [rax],al
  40d830:	add    bl,dh
  40d832:	add    BYTE PTR [rax],al
  40d835:	add    BYTE PTR [rax],al
  40d837:	add    al,dl
  40d839:	repnz add BYTE PTR [rax],al
	...
  40d849:	add    BYTE PTR gs:[r8],al
  40d84d:	add    BYTE PTR [rax],al
  40d84f:	add    al,al
  40d851:	add    BYTE PTR fs:[r8],al
	...
  40d85d:	add    BYTE PTR [rax],al
  40d85f:	add    BYTE PTR [rdx],al
  40d861:	add    BYTE PTR [rax],al
  40d863:	add    BYTE PTR [rax+rax*1],al
  40d866:	add    BYTE PTR [rax],al
  40d868:	movabs al,ds:0x70000000000040f2
  40d871:	repnz add BYTE PTR [rax],al
	...
  40d87d:	add    BYTE PTR [rax],al
  40d87f:	add    al,dl
  40d881:	movsxd eax,DWORD PTR [rcx+0x0]
	...
  40d898:	add    al,BYTE PTR [rax]
  40d89a:	add    BYTE PTR [rax],al
  40d89c:	add    al,0x0
  40d89e:	add    BYTE PTR [rax],al
  40d8a0:	rex
  40d8a1:	repnz add BYTE PTR [rax],al
  40d8a5:	add    BYTE PTR [rax],al
  40d8a7:	add    BYTE PTR [rax],dl
  40d8a9:	repnz add BYTE PTR [rax],al
	...
  40d8b5:	add    BYTE PTR [rax],al
  40d8b7:	add    bh,ch
  40d8b9:	(bad)  
  40d8bb:	add    BYTE PTR [rax],al
  40d8bd:	add    BYTE PTR [rax],al
  40d8bf:	add    ah,ah
  40d8c1:	(bad)  
	...
  40d8cf:	add    BYTE PTR [rcx],al
  40d8d1:	add    BYTE PTR [rax],al
  40d8d3:	add    BYTE PTR [rax+rax*1],al
  40d8d6:	add    BYTE PTR [rax],al
  40d8d8:	lock icebp 
  40d8da:	add    BYTE PTR [rax],al
  40d8dd:	add    BYTE PTR [rax],al
  40d8df:	add    al,dl
  40d8e1:	icebp  
  40d8e2:	add    BYTE PTR [rax],al
	...
  40d8ed:	add    BYTE PTR [rax],al
  40d8ef:	add    BYTE PTR [rax+0x4162],al
  40d8f5:	add    BYTE PTR [rax],al
  40d8f7:	add    BYTE PTR [rdi+0x62],ah
  40d8fa:	add    BYTE PTR [r8],al
	...
  40d905:	add    BYTE PTR [rax],al
  40d907:	add    BYTE PTR [rbx],al
  40d909:	add    BYTE PTR [rax],al
  40d90b:	add    BYTE PTR [rax+rax*1],al
  40d90e:	add    BYTE PTR [rax],al
  40d910:	xor    cl,0x40
  40d913:	add    BYTE PTR [rax],al
  40d915:	add    BYTE PTR [rax],al
  40d917:	add    BYTE PTR [rax-0xf],dl
  40d91a:	add    BYTE PTR [rax],al
	...
  40d925:	add    BYTE PTR [rax],al
  40d927:	add    bl,ch
  40d929:	(bad)  
  40d92a:	add    BYTE PTR [r8],al
  40d92d:	add    BYTE PTR [rax],al
  40d92f:	add    al,al
  40d931:	(bad)  
  40d932:	add    BYTE PTR [r8],al
	...
  40d93d:	add    BYTE PTR [rax],al
  40d93f:	add    BYTE PTR [rdx],al
  40d941:	add    BYTE PTR [rax],al
  40d943:	add    BYTE PTR [rax+rax*1],al
  40d946:	add    BYTE PTR [rax],al
  40d948:	and    cl,dh
  40d94a:	add    BYTE PTR [rax],al
  40d94d:	add    BYTE PTR [rax],al
  40d94f:	add    BYTE PTR [rax],al
  40d951:	icebp  
  40d952:	add    BYTE PTR [rax],al
	...
  40d95d:	add    BYTE PTR [rax],al
  40d95f:	add    BYTE PTR [rax],dl
  40d961:	(bad)  
  40d962:	add    BYTE PTR [r8],al
  40d965:	add    BYTE PTR [rax],al
  40d967:	add    al,ah
  40d969:	(bad)  
  40d96a:	add    BYTE PTR [r8],al
	...
  40d975:	add    BYTE PTR [rax],al
  40d977:	add    BYTE PTR [rcx],al
  40d979:	add    BYTE PTR [rax],al
  40d97b:	add    BYTE PTR [rax+rax*1],al
  40d97e:	add    BYTE PTR [rax],al
  40d980:	loopne 0x40d972
  40d982:	add    BYTE PTR [rax],al
  40d985:	add    BYTE PTR [rax],al
  40d987:	add    al,al
  40d989:	lock add BYTE PTR [rax],al
	...
  40d995:	add    BYTE PTR [rax],al
  40d997:	add    BYTE PTR [rdx+0x4160],dl
  40d99d:	add    BYTE PTR [rax],al
  40d99f:	add    BYTE PTR [rax+0x4160],al
	...
  40d9ad:	add    BYTE PTR [rax],al
  40d9af:	add    BYTE PTR [rcx],al
  40d9b1:	add    BYTE PTR [rax],al
  40d9b3:	add    BYTE PTR [rax+rax*1],al
  40d9b6:	add    BYTE PTR [rax],al
  40d9b8:	movabs al,ds:0x80000000000040f0
  40d9c1:	lock add BYTE PTR [rax],al
	...
  40d9cd:	add    BYTE PTR [rax],al
  40d9cf:	add    BYTE PTR [rsi],cl
  40d9d1:	(bad)  
  40d9d2:	add    BYTE PTR [r8],al
  40d9d5:	add    BYTE PTR [rax],al
  40d9d7:	add    BYTE PTR [rax+riz*2],al
  40d9da:	add    BYTE PTR [r8],al
	...
  40d9e5:	add    BYTE PTR [rax],al
  40d9e7:	add    BYTE PTR [rcx],al
  40d9e9:	add    BYTE PTR [rax],al
  40d9eb:	add    BYTE PTR [rax],al
  40d9ed:	add    BYTE PTR [rax],al
  40d9ef:	add    BYTE PTR [rax-0x10],ah
  40d9f2:	add    BYTE PTR [rax],al
  40d9f5:	add    BYTE PTR [rax],al
  40d9f7:	add    BYTE PTR [rax],al
  40d9f9:	lock add BYTE PTR [rax],al
	...
  40da09:	pop    rdi
  40da0a:	add    BYTE PTR [r8],al
  40da0d:	add    BYTE PTR [rax],al
  40da0f:	add    al,ah
  40da11:	pop    rsi
  40da12:	add    BYTE PTR [r8],al
	...
  40da1d:	add    BYTE PTR [rax],al
  40da1f:	add    BYTE PTR [rcx],al
  40da21:	add    BYTE PTR [rax],al
  40da23:	add    BYTE PTR [rax],al
  40da25:	add    BYTE PTR [rax],al
  40da27:	add    al,al
  40da29:	out    dx,eax
  40da2a:	add    BYTE PTR [rax],al
  40da2d:	add    BYTE PTR [rax],al
  40da2f:	add    BYTE PTR [rax+0x40ef],ah
	...
  40da3d:	add    BYTE PTR [rax],al
  40da3f:	add    BYTE PTR [rdi+0x415e],ah
  40da45:	add    BYTE PTR [rax],al
  40da47:	add    BYTE PTR [rax+0x415e],dl
	...
  40da55:	add    BYTE PTR [rax],al
  40da57:	add    BYTE PTR [rcx],al
  40da59:	add    BYTE PTR [rax],al
  40da5b:	add    BYTE PTR [rax+rax*1],al
  40da5e:	add    BYTE PTR [rax],al
  40da60:	sub    bh,0x40
  40da63:	add    BYTE PTR [rax],al
  40da65:	add    BYTE PTR [rax],al
  40da67:	add    BYTE PTR [rax-0x11],ah
  40da6a:	add    BYTE PTR [rax],al
	...
  40da75:	add    BYTE PTR [rax],al
  40da77:	add    BYTE PTR [rbx],ah
  40da79:	pop    rsi
  40da7a:	add    BYTE PTR [r8],al
  40da7d:	add    BYTE PTR [rax],al
  40da7f:	add    BYTE PTR [rax],bl
  40da81:	pop    rsi
  40da82:	add    BYTE PTR [r8],al
	...
  40da8d:	add    BYTE PTR [rax],al
  40da8f:	add    BYTE PTR [rcx],al
  40da91:	add    BYTE PTR [rax],al
  40da93:	add    BYTE PTR [rax+rax*1],al
  40da96:	add    BYTE PTR [rax],al
  40da98:	rex out dx,eax
  40da9a:	add    BYTE PTR [rax],al
  40da9d:	add    BYTE PTR [rax],al
  40da9f:	add    BYTE PTR [rax],ah
  40daa1:	out    dx,eax
  40daa2:	add    BYTE PTR [rax],al
	...
  40daad:	add    BYTE PTR [rax],al
  40daaf:	add    al,dl
  40dab1:	pop    rbp
  40dab2:	add    BYTE PTR [r8],al
  40dab5:	add    BYTE PTR [rax],al
  40dab7:	add    BYTE PTR [rax+0x415d],bh
	...
  40dac5:	add    BYTE PTR [rax],al
  40dac7:	add    BYTE PTR [rcx],al
  40dac9:	add    BYTE PTR [rax],al
  40dacb:	add    BYTE PTR [rax+rax*1],al
  40dace:	add    BYTE PTR [rax],al
  40dad0:	add    bh,ch
  40dad2:	add    BYTE PTR [rax],al
  40dad5:	add    BYTE PTR [rax],al
  40dad7:	add    al,ah
  40dad9:	out    dx,al
  40dada:	add    BYTE PTR [rax],al
	...
  40dae5:	add    BYTE PTR [rax],al
  40dae7:	add    BYTE PTR [rax+0x5d],dh
  40daea:	add    BYTE PTR [r8],al
  40daed:	add    BYTE PTR [rax],al
  40daef:	add    BYTE PTR [rbp+rbx*2+0x41],ah
	...
  40daff:	add    BYTE PTR [rcx],al
  40db01:	add    BYTE PTR [rax],al
  40db03:	add    BYTE PTR [rax],al
  40db05:	add    BYTE PTR [rax],al
  40db07:	add    al,al
  40db09:	out    dx,al
  40db0a:	add    BYTE PTR [rax],al
  40db0d:	add    BYTE PTR [rax],al
  40db0f:	add    BYTE PTR [rax+0x40ee],ah
	...
  40db1d:	add    BYTE PTR [rax],al
  40db1f:	add    BYTE PTR [rax],ah
  40db21:	pop    rbp
  40db22:	add    BYTE PTR [r8],al
  40db25:	add    BYTE PTR [rax],al
  40db27:	add    BYTE PTR [rax],al
  40db29:	pop    rbp
  40db2a:	add    BYTE PTR [r8],al
	...
  40db35:	add    BYTE PTR [rax],al
  40db37:	add    BYTE PTR [rcx],al
  40db39:	add    BYTE PTR [rax],al
  40db3b:	add    BYTE PTR [rax+rax*1],al
  40db3e:	add    BYTE PTR [rax],al
  40db40:	jo     0x40db30
  40db42:	add    BYTE PTR [rax],al
  40db45:	add    BYTE PTR [rax],al
  40db47:	add    BYTE PTR [rax-0x12],dl
  40db4a:	add    BYTE PTR [rax],al
	...
  40db55:	add    BYTE PTR [rax],al
  40db57:	add    BYTE PTR [rbx+0x415c],ah
  40db5d:	add    BYTE PTR [rax],al
  40db5f:	add    BYTE PTR [rax+0x415c],dl
	...
  40db6d:	add    BYTE PTR [rax],al
  40db6f:	add    BYTE PTR [rcx],al
  40db71:	add    BYTE PTR [rax],al
  40db73:	add    BYTE PTR [rax+rax*1],al
  40db76:	add    BYTE PTR [rax],al
  40db78:	xor    dh,ch
  40db7a:	add    BYTE PTR [rax],al
  40db7d:	add    BYTE PTR [rax],al
  40db7f:	add    BYTE PTR [rax],dl
  40db81:	out    dx,al
  40db82:	add    BYTE PTR [rax],al
	...
  40db8d:	add    BYTE PTR [rax],al
  40db8f:	add    al,al
  40db91:	pop    rbx
  40db92:	add    BYTE PTR [r8],al
  40db95:	add    BYTE PTR [rax],al
  40db97:	add    BYTE PTR [rcx+0x415b],dh
	...
  40dba5:	add    BYTE PTR [rax],al
  40dba7:	add    BYTE PTR [rcx],al
  40dba9:	add    BYTE PTR [rax],al
  40dbab:	add    BYTE PTR [rax+rax*1],al
  40dbae:	add    BYTE PTR [rax],al
  40dbb0:	lock in eax,dx
  40dbb2:	add    BYTE PTR [rax],al
  40dbb5:	add    BYTE PTR [rax],al
  40dbb7:	add    al,dl
  40dbb9:	in     eax,dx
  40dbba:	add    BYTE PTR [rax],al
	...
  40dbc5:	add    BYTE PTR [rax],al
  40dbc7:	add    BYTE PTR [rax+0x5b],dh
  40dbca:	add    BYTE PTR [r8],al
  40dbcd:	add    BYTE PTR [rax],al
  40dbcf:	add    BYTE PTR [rbx+rbx*2+0x41],bl
	...
  40dbdf:	add    BYTE PTR [rdx],al
  40dbe1:	add    BYTE PTR [rax],al
  40dbe3:	add    BYTE PTR [rax+rax*1],al
  40dbe6:	add    BYTE PTR [rax],al
  40dbe8:	movabs al,ds:0x80000000000040ed
  40dbf1:	in     eax,dx
  40dbf2:	add    BYTE PTR [rax],al
	...
  40dbfd:	add    BYTE PTR [rax],al
  40dbff:	add    ah,dh
  40dc01:	pop    rdx
  40dc02:	add    BYTE PTR [r8],al
  40dc05:	add    BYTE PTR [rax],al
  40dc07:	add    al,ah
  40dc09:	pop    rdx
  40dc0a:	add    BYTE PTR [r8],al
	...
  40dc15:	add    BYTE PTR [rax],al
  40dc17:	add    BYTE PTR [rcx],al
  40dc19:	add    BYTE PTR [rax],al
  40dc1b:	add    BYTE PTR [rax],al
  40dc1d:	add    BYTE PTR [rax],al
  40dc1f:	add    BYTE PTR [rax-0x13],ah
  40dc22:	add    BYTE PTR [rax],al
  40dc25:	add    BYTE PTR [rax],al
  40dc27:	add    al,al
  40dc29:	in     al,dx
  40dc2a:	add    BYTE PTR [rax],al
	...
  40dc35:	add    BYTE PTR [rax],al
  40dc37:	add    BYTE PTR [rax],dl
  40dc39:	pop    rcx
  40dc3a:	add    BYTE PTR [r8],al
  40dc3d:	add    BYTE PTR [rax],al
  40dc3f:	add    bh,dh
  40dc41:	pop    rax
  40dc42:	add    BYTE PTR [r8],al
	...
  40dc4d:	add    BYTE PTR [rax],al
  40dc4f:	add    BYTE PTR [rdx],al
  40dc51:	add    BYTE PTR [rax],al
  40dc53:	add    BYTE PTR [rax+rax*1],al
  40dc56:	add    BYTE PTR [rax],al
  40dc58:	sub    ah,0x40
  40dc5b:	add    BYTE PTR [rax],al
  40dc5d:	add    BYTE PTR [rax],al
  40dc5f:	add    BYTE PTR [rax-0x14],ah
  40dc62:	add    BYTE PTR [rax],al
	...
  40dc6d:	add    BYTE PTR [rax],al
  40dc6f:	add    BYTE PTR [rdi+0x58],ch
  40dc72:	add    BYTE PTR [r8],al
  40dc75:	add    BYTE PTR [rax],al
  40dc77:	add    BYTE PTR [rax+0x58],al
  40dc7a:	add    BYTE PTR [r8],al
	...
  40dc85:	add    BYTE PTR [rax],al
  40dc87:	add    BYTE PTR [rcx],al
  40dc89:	add    BYTE PTR [rax],al
  40dc8b:	add    BYTE PTR [rax+rax*1],al
  40dc8e:	add    BYTE PTR [rax],al
  40dc90:	in     al,dx
  40dc92:	add    BYTE PTR [rax],al
  40dc95:	add    BYTE PTR [rax],al
  40dc97:	add    BYTE PTR [rax],ah
  40dc99:	in     al,dx
  40dc9a:	add    BYTE PTR [rax],al
	...
  40dca9:	pop    rax
  40dcaa:	add    BYTE PTR [r8],al
  40dcad:	add    BYTE PTR [rax],al
  40dcaf:	add    bl,dh
  40dcb1:	push   rdi
  40dcb2:	add    BYTE PTR [r8],al
	...
  40dcbd:	add    BYTE PTR [rax],al
  40dcbf:	add    BYTE PTR [rcx],al
  40dcc1:	add    BYTE PTR [rax],al
  40dcc3:	add    BYTE PTR [rax+rax*1],al
  40dcc6:	add    BYTE PTR [rax],al
  40dcc8:	add    ah,ch
  40dcca:	add    BYTE PTR [rax],al
  40dccd:	add    BYTE PTR [rax],al
  40dccf:	add    al,ah
  40dcd1:	jmp    0x40dd13
	...
  40dcdf:	add    dl,cl
  40dce1:	push   rdi
  40dce2:	add    BYTE PTR [r8],al
  40dce5:	add    BYTE PTR [rax],al
  40dce7:	add    cl,al
  40dce9:	push   rdi
  40dcea:	add    BYTE PTR [r8],al
	...
  40dcf5:	add    BYTE PTR [rax],al
  40dcf7:	add    BYTE PTR [rcx],al
  40dcf9:	add    BYTE PTR [rax],al
  40dcfb:	add    BYTE PTR [rax+rax*1],al
  40dcfe:	add    BYTE PTR [rax],al
  40dd00:	shr    bl,0x40
  40dd03:	add    BYTE PTR [rax],al
  40dd05:	add    BYTE PTR [rax],al
  40dd07:	add    BYTE PTR [rax+0x40eb],ah
	...
  40dd15:	add    BYTE PTR [rax],al
  40dd17:	add    BYTE PTR [rbx],bh
  40dd19:	push   rdi
  40dd1a:	add    BYTE PTR [r8],al
  40dd1d:	add    BYTE PTR [rax],al
  40dd1f:	add    BYTE PTR [rdx],dh
  40dd21:	push   rdi
  40dd22:	add    BYTE PTR [r8],al
	...
  40dd2d:	add    BYTE PTR [rax],al
  40dd2f:	add    BYTE PTR [rcx],al
  40dd31:	add    BYTE PTR [rax],al
  40dd33:	add    BYTE PTR [rax+rax*1],al
  40dd36:	add    BYTE PTR [rax],al
  40dd38:	sub    bl,0x40
  40dd3b:	add    BYTE PTR [rax],al
  40dd3d:	add    BYTE PTR [rax],al
  40dd3f:	add    BYTE PTR [rax-0x15],ah
  40dd42:	add    BYTE PTR [rax],al
	...
  40dd4d:	add    BYTE PTR [rax],al
  40dd4f:	add    BYTE PTR [rsi+0x4156],al
  40dd55:	add    BYTE PTR [rax],al
  40dd57:	add    BYTE PTR [rax+0x56],dh
  40dd5a:	add    BYTE PTR [r8],al
	...
  40dd65:	add    BYTE PTR [rax],al
  40dd67:	add    BYTE PTR [rcx],al
  40dd69:	add    BYTE PTR [rax],al
  40dd6b:	add    BYTE PTR [rax+rax*1],al
  40dd6e:	add    BYTE PTR [rax],al
  40dd70:	rex jmp 0x40ddb3
  40dd73:	add    BYTE PTR [rax],al
  40dd75:	add    BYTE PTR [rax],al
  40dd77:	add    BYTE PTR [rax],ah
  40dd79:	jmp    0x40ddbb
	...
  40dd87:	add    BYTE PTR [rax],dh
  40dd89:	push   rsi
  40dd8a:	add    BYTE PTR [r8],al
  40dd8d:	add    BYTE PTR [rax],al
  40dd8f:	add    BYTE PTR [rax],dl
  40dd91:	push   rsi
  40dd92:	add    BYTE PTR [r8],al
  40dd95:	add    BYTE PTR [rax],al
  40dd97:	add    BYTE PTR [rax],dl
  40dd99:	jmp    0x40dddb
  40dd9b:	add    BYTE PTR [rax],al
  40dd9d:	add    BYTE PTR [rax],al
  40dd9f:	add    BYTE PTR [rcx],al
  40dda1:	add    BYTE PTR [rax],al
  40dda3:	add    BYTE PTR [rax+rax*1],al
  40dda6:	add    BYTE PTR [rax],al
  40dda8:	lock (bad) 
  40ddaa:	add    BYTE PTR [rax],al
  40ddad:	add    BYTE PTR [rax],al
  40ddaf:	add    al,dl
  40ddb1:	(bad)  
  40ddb2:	add    BYTE PTR [rax],al
	...
  40ddbd:	add    BYTE PTR [rax],al
  40ddbf:	add    al,al
  40ddc1:	push   rbp
  40ddc2:	add    BYTE PTR [r8],al
  40ddc5:	add    BYTE PTR [rax],al
  40ddc7:	add    BYTE PTR [rax+0x4155],al
  40ddcd:	add    BYTE PTR [rax],al
  40ddcf:	add    al,al
  40ddd1:	(bad)  
  40ddd2:	add    BYTE PTR [rax],al
  40ddd5:	add    BYTE PTR [rax],al
  40ddd7:	add    BYTE PTR [rcx],al
  40ddd9:	add    BYTE PTR [rax],al
  40dddb:	add    BYTE PTR [rax],al
  40dddd:	add    BYTE PTR [rax],al
  40dddf:	add    BYTE PTR [rax+0x40ea],ah
  40dde5:	add    BYTE PTR [rax],al
  40dde7:	add    BYTE PTR [rax-0x16],al
  40ddea:	add    BYTE PTR [rax],al
	...
  40ddf5:	add    BYTE PTR [rax],al
  40ddf7:	add    BYTE PTR [rax+0x4154],al
  40ddfd:	add    BYTE PTR [rax],al
  40ddff:	add    BYTE PTR [rax+0x54],dl
  40de02:	add    BYTE PTR [r8],al
  40de05:	add    BYTE PTR [rax],al
  40de07:	add    BYTE PTR [rax],al
  40de09:	(bad)  
  40de0a:	add    BYTE PTR [rax],al
  40de0d:	add    BYTE PTR [rax],al
  40de0f:	add    BYTE PTR [rcx],al
  40de11:	add    BYTE PTR [rax],al
  40de13:	add    BYTE PTR [rax+rax*1],al
  40de16:	add    BYTE PTR [rax],al
  40de18:	loopne 0x40de03
  40de1a:	add    BYTE PTR [rax],al
  40de1d:	add    BYTE PTR [rax],al
  40de1f:	add    al,al
  40de21:	jmp    0x40de66
	...
  40de2e:	add    BYTE PTR [rax],al
  40de30:	(bad)  
  40de31:	push   rbx
  40de32:	add    BYTE PTR [r8],al
  40de35:	add    BYTE PTR [rax],al
  40de37:	add    BYTE PTR [rax+0x53],al
  40de3a:	add    BYTE PTR [r8],al
  40de3d:	add    BYTE PTR [rax],al
  40de3f:	add    BYTE PTR [rax+0x40e9],dh
  40de45:	add    BYTE PTR [rax],al
  40de47:	add    BYTE PTR [rcx],al
  40de49:	add    BYTE PTR [rax],al
  40de4b:	add    BYTE PTR [rax+rax*1],al
  40de4e:	add    BYTE PTR [rax],al
  40de50:	nop
  40de51:	jmp    0x40de96
  40de56:	add    BYTE PTR [rax],al
  40de58:	jo     0x40de43
  40de5a:	add    BYTE PTR [rax],al
	...
  40de65:	add    BYTE PTR [rax],al
  40de67:	add    al,dl
  40de69:	push   rdx
  40de6a:	add    BYTE PTR [r8],al
  40de6d:	add    BYTE PTR [rax],al
  40de6f:	add    BYTE PTR [rax+0x4152],dh
  40de75:	add    BYTE PTR [rax],al
  40de77:	add    BYTE PTR [rax-0x17],ah
  40de7a:	add    BYTE PTR [rax],al
  40de7d:	add    BYTE PTR [rax],al
  40de7f:	add    BYTE PTR [rcx],al
  40de81:	add    BYTE PTR [rax],al
  40de83:	add    BYTE PTR [rax+rax*1],al
  40de86:	add    BYTE PTR [rax],al
  40de88:	rex jmp 0x40dece
  40de8e:	add    BYTE PTR [rax],al
  40de90:	and    cl,ch
  40de92:	add    BYTE PTR [rax],al
	...
  40de9d:	add    BYTE PTR [rax],al
  40de9f:	add    al,dh
  40dea1:	push   rcx
  40dea2:	add    BYTE PTR [r8],al
  40dea5:	add    BYTE PTR [rax],al
  40dea7:	add    dh,dl
  40dea9:	push   rcx
  40deaa:	add    BYTE PTR [r8],al
  40dead:	add    BYTE PTR [rax],al
  40deaf:	add    BYTE PTR [rax],dl
  40deb1:	jmp    0x40def6
  40deb6:	add    BYTE PTR [rax],al
  40deb8:	add    DWORD PTR [rax],eax
  40deba:	add    BYTE PTR [rax],al
  40debc:	add    al,0x0
  40debe:	add    BYTE PTR [rax],al
  40dec0:	lock call 0x40df06
  40dec6:	add    BYTE PTR [rax],al
  40dec8:	shr    al,1
  40deca:	add    BYTE PTR [rax],al
	...
  40ded5:	add    BYTE PTR [rax],al
  40ded7:	add    BYTE PTR [rax+0x51],al
  40deda:	add    BYTE PTR [r8],al
  40dedd:	add    BYTE PTR [rax],al
  40dedf:	add    BYTE PTR [rax],ah
  40dee1:	push   rcx
  40dee2:	add    BYTE PTR [r8],al
  40dee5:	add    BYTE PTR [rax],al
  40dee7:	add    al,al
  40dee9:	call   0x40df2e
  40deee:	add    BYTE PTR [rax],al
  40def0:	add    DWORD PTR [rax],eax
  40def2:	add    BYTE PTR [rax],al
  40def4:	add    al,0x0
  40def6:	add    BYTE PTR [rax],al
  40def8:	movabs al,ds:0x80000000000040e8
  40df01:	call   0x40df46
	...
  40df0e:	add    BYTE PTR [rax],al
  40df10:	rex push rax
  40df12:	add    BYTE PTR [r8],al
  40df15:	add    BYTE PTR [rax],al
  40df17:	add    BYTE PTR [rax],ah
  40df19:	push   rax
  40df1a:	add    BYTE PTR [r8],al
  40df1d:	add    BYTE PTR [rax],al
  40df1f:	add    BYTE PTR [rax-0x18],dh
  40df22:	add    BYTE PTR [rax],al
  40df25:	add    BYTE PTR [rax],al
  40df27:	add    BYTE PTR [rcx],al
  40df29:	add    BYTE PTR [rax],al
  40df2b:	add    BYTE PTR [rax+rax*1],al
  40df2e:	add    BYTE PTR [rax],al
  40df30:	push   rax
  40df31:	call   0x40df76
  40df36:	add    BYTE PTR [rax],al
  40df38:	xor    al,ch
  40df3a:	add    BYTE PTR [rax],al
	...
  40df45:	add    BYTE PTR [rax],al
  40df47:	add    BYTE PTR [rax+0x414f],dl
	...
  40df55:	add    BYTE PTR [rax],al
  40df57:	add    BYTE PTR [rax],ah
  40df59:	call   0x40df9e
  40df5e:	add    BYTE PTR [rax],al
  40df60:	add    DWORD PTR [rax],eax
  40df62:	add    BYTE PTR [rax],al
  40df64:	add    al,0x0
  40df66:	add    BYTE PTR [rax],al
  40df68:	add    al,ch
  40df6a:	add    BYTE PTR [rax],al
  40df6d:	add    BYTE PTR [rax],al
  40df6f:	add    al,ah
  40df71:	out    0x40,eax
	...
  40df7f:	add    BYTE PTR [rax+0x414e],dh
  40df85:	add    BYTE PTR [rax],al
  40df87:	add    BYTE PTR [rax+0x414e],al
  40df8d:	add    BYTE PTR [rax],al
  40df8f:	add    al,dl
  40df91:	out    0x40,eax
  40df93:	add    BYTE PTR [rax],al
  40df95:	add    BYTE PTR [rax],al
  40df97:	add    BYTE PTR [rcx],al
  40df99:	add    BYTE PTR [rax],al
  40df9b:	add    BYTE PTR [rax+rax*1],al
  40df9e:	add    BYTE PTR [rax],al
  40dfa0:	mov    al,0xe7
  40dfa2:	add    BYTE PTR [rax],al
  40dfa5:	add    BYTE PTR [rax],al
  40dfa7:	add    BYTE PTR [rax+0x40e7],dl
	...
  40dfb5:	add    BYTE PTR [rax],al
  40dfb7:	add    BYTE PTR [rip+0x414e],ah        # 0x41210b
  40dfbd:	add    BYTE PTR [rax],al
  40dfbf:	add    al,al
  40dfc1:	rex.WRB
  40dfc2:	add    BYTE PTR [r8],al
	...
  40dfcd:	add    BYTE PTR [rax],al
  40dfcf:	add    BYTE PTR [rbx],al
  40dfd1:	add    BYTE PTR [rax],al
  40dfd3:	add    BYTE PTR [rax+rax*1],al
  40dfd6:	add    BYTE PTR [rax],al
  40dfd8:	rex out 0x40,eax
  40dfdb:	add    BYTE PTR [rax],al
  40dfdd:	add    BYTE PTR [rax],al
  40dfdf:	add    BYTE PTR [rax],ah
  40dfe1:	out    0x40,eax
	...
  40dfef:	add    BYTE PTR [rax+0x4c],al
  40dff2:	add    BYTE PTR [r8],al
  40dff5:	add    BYTE PTR [rax],al
  40dff7:	add    BYTE PTR [rax],ah
  40dff9:	rex.WR
  40dffa:	add    BYTE PTR [r8],al
	...
  40e005:	add    BYTE PTR [rax],al
  40e007:	add    BYTE PTR [rcx],al
	...
  40e011:	out    0x40,eax
  40e013:	add    BYTE PTR [rax],al
  40e015:	add    BYTE PTR [rax],al
  40e017:	add    BYTE PTR [rax+0x40e6],al
	...
  40e025:	add    BYTE PTR [rax],al
  40e027:	add    BYTE PTR [rax+0x4a],dh
  40e02a:	add    BYTE PTR [r8],al
  40e02d:	add    BYTE PTR [rax],al
  40e02f:	add    BYTE PTR [rdx+0x4a],bl
  40e032:	add    BYTE PTR [r8],al
  40e035:	add    BYTE PTR [rax],al
  40e037:	add    BYTE PTR [rax-0x1a],al
  40e03a:	add    BYTE PTR [rax],al
  40e03d:	add    BYTE PTR [rax],al
  40e03f:	add    BYTE PTR [rax],al
  40e041:	add    BYTE PTR [rax],al
  40e043:	add    BYTE PTR [rax+rax*1],al
	...
  40e04e:	add    BYTE PTR [rax],al
  40e050:	and    dh,ah
  40e052:	add    BYTE PTR [rax],al
	...
  40e05d:	add    BYTE PTR [rax],al
  40e05f:	add    al,dl
  40e061:	rex.WB
  40e062:	add    BYTE PTR [r8],al
  40e065:	add    BYTE PTR [rax],al
  40e067:	add    BYTE PTR [rsi+0x4149],dh
  40e06d:	add    BYTE PTR [rax],al
  40e06f:	add    BYTE PTR [rax],al
  40e071:	out    0x40,al
	...
  40e07b:	add    BYTE PTR [rax+rax*1],al
	...
  40e086:	add    BYTE PTR [rax],al
  40e088:	loopne 0x40e06f
  40e08a:	add    BYTE PTR [rax],al
	...
  40e095:	add    BYTE PTR [rax],al
  40e097:	add    al,dh
  40e099:	rex.W
  40e09a:	add    BYTE PTR [r8],al
  40e09d:	add    BYTE PTR [rax],al
  40e09f:	add    ch,bl
  40e0a1:	rex.W
  40e0a2:	add    BYTE PTR [r8],al
	...
  40e0ad:	add    BYTE PTR [rax],al
  40e0af:	add    BYTE PTR [rcx],al
  40e0b1:	add    BYTE PTR [rax],al
  40e0b3:	add    BYTE PTR [rax+rax*1],al
  40e0b6:	add    BYTE PTR [rax],al
  40e0b8:	shl    ch,0x40
  40e0bb:	add    BYTE PTR [rax],al
  40e0bd:	add    BYTE PTR [rax],al
  40e0bf:	add    BYTE PTR [rax+0x40e5],ah
	...
  40e0cd:	add    BYTE PTR [rax],al
  40e0cf:	add    BYTE PTR [rax+0x4148],dl
  40e0d5:	add    BYTE PTR [rax],al
  40e0d7:	add    BYTE PTR [rbx+0x48],bh
  40e0da:	add    BYTE PTR [r8],al
	...
  40e0e5:	add    BYTE PTR [rax],al
  40e0e7:	add    BYTE PTR [rax+rax*1],al
  40e0ea:	add    BYTE PTR [rax],al
  40e0ec:	add    BYTE PTR [rax],al
  40e0ee:	add    BYTE PTR [rax],al
  40e0f0:	rex in eax,0x40
  40e0f3:	add    BYTE PTR [rax],al
  40e0f5:	add    BYTE PTR [rax],al
  40e0f7:	add    BYTE PTR [rax],al
  40e0f9:	in     eax,0x40
	...
  40e107:	add    BYTE PTR [rcx+0x4147],ah
	...
  40e115:	add    BYTE PTR [rax],al
  40e117:	add    al,dh
  40e119:	in     al,0x40
  40e11b:	add    BYTE PTR [rax],al
  40e11d:	add    BYTE PTR [rax],al
  40e11f:	add    BYTE PTR [rcx],al
  40e121:	add    BYTE PTR [rax],al
  40e123:	add    BYTE PTR [rax+rax*1],al
  40e126:	add    BYTE PTR [rax],al
  40e128:	shl    ah,1
  40e12a:	add    BYTE PTR [rax],al
  40e12d:	add    BYTE PTR [rax],al
  40e12f:	add    BYTE PTR [rax+0x40e4],dh
	...
  40e13d:	add    BYTE PTR [rax],al
  40e13f:	add    BYTE PTR [rbx+0x47],cl
  40e142:	add    BYTE PTR [r8],al
  40e145:	add    BYTE PTR [rax],al
  40e147:	add    BYTE PTR [rbx+0x47],al
  40e14a:	add    BYTE PTR [r8],al
	...
  40e155:	add    BYTE PTR [rax],al
  40e157:	add    BYTE PTR [rdx],al
  40e159:	add    BYTE PTR [rax],al
  40e15b:	add    BYTE PTR [rax+rax*1],al
  40e15e:	add    BYTE PTR [rax],al
  40e160:	and    ah,0x40
  40e163:	add    BYTE PTR [rax],al
  40e165:	add    BYTE PTR [rax],al
  40e167:	add    BYTE PTR [rax-0x1c],dl
  40e16a:	add    BYTE PTR [rax],al
	...
  40e175:	add    BYTE PTR [rax],al
  40e177:	add    BYTE PTR [rax],dl
  40e179:	rex.RX
  40e17a:	add    BYTE PTR [r8],al
  40e17d:	add    BYTE PTR [rax],al
  40e17f:	add    BYTE PTR [rcx],al
  40e181:	rex.RX
  40e182:	add    BYTE PTR [r8],al
  40e185:	add    BYTE PTR [rax],al
  40e187:	add    BYTE PTR [rax-0x1c],al
  40e18a:	add    BYTE PTR [rax],al
  40e18d:	add    BYTE PTR [rax],al
  40e18f:	add    BYTE PTR [rax],al
  40e191:	add    BYTE PTR [rax],al
  40e193:	add    BYTE PTR [rax+rax*1],al
	...
  40e19e:	add    BYTE PTR [rax],al
  40e1a0:	and    ah,ah
  40e1a2:	add    BYTE PTR [rax],al
	...
  40e1ad:	add    BYTE PTR [rax],al
  40e1af:	add    BYTE PTR [rax+0x45],bl
  40e1b2:	add    BYTE PTR [r8],al
  40e1b5:	add    BYTE PTR [rax],al
  40e1b7:	add    BYTE PTR [rdx+0x45],cl
  40e1ba:	add    BYTE PTR [r8],al
	...
  40e1c5:	add    BYTE PTR [rax],al
  40e1c7:	add    BYTE PTR [rdx],al
  40e1c9:	add    BYTE PTR [rax],al
  40e1cb:	add    BYTE PTR [rax+rax*1],al
  40e1ce:	add    BYTE PTR [rax],al
  40e1d0:	loopne 0x40e1b5
  40e1d2:	add    BYTE PTR [rax],al
  40e1d5:	add    BYTE PTR [rax],al
  40e1d7:	add    BYTE PTR [rax+0x40e3],dh
	...
  40e1e5:	add    BYTE PTR [rax],al
  40e1e7:	add    al,dl
  40e1e9:	rex.R
  40e1ea:	add    BYTE PTR [r8],al
  40e1ed:	add    BYTE PTR [rax],al
  40e1ef:	add    BYTE PTR [rax+0x4144],dh
	...
  40e1fd:	add    BYTE PTR [rax],al
  40e1ff:	add    BYTE PTR [rdx],al
  40e201:	add    BYTE PTR [rax],al
  40e203:	add    BYTE PTR [rax+rax*1],al
  40e206:	add    BYTE PTR [rax],al
  40e208:	and    bl,0x40
  40e20b:	add    BYTE PTR [rax],al
  40e20d:	add    BYTE PTR [rax],al
  40e20f:	add    BYTE PTR [rax-0x1d],ah
  40e212:	add    BYTE PTR [rax],al
	...
  40e21d:	add    BYTE PTR [rax],al
  40e21f:	add    BYTE PTR [rax+0x4144],al
  40e225:	add    BYTE PTR [rax],al
  40e227:	add    BYTE PTR [rax+0x44],dh
  40e22a:	add    BYTE PTR [r8],al
	...
  40e235:	add    BYTE PTR [rax],al
  40e237:	add    BYTE PTR [rcx],al
  40e239:	add    BYTE PTR [rax],al
  40e23b:	add    BYTE PTR [rax],al
  40e23d:	add    BYTE PTR [rax],al
  40e23f:	add    BYTE PTR [rax-0x1d],al
  40e242:	add    BYTE PTR [rax],al
  40e245:	add    BYTE PTR [rax],al
  40e247:	add    BYTE PTR [rax],al
  40e249:	jrcxz  0x40e28b
	...
  40e257:	add    cl,cl
  40e259:	rex.XB
  40e25a:	add    BYTE PTR [r8],al
  40e25d:	add    BYTE PTR [rax],al
  40e25f:	add    BYTE PTR [rax+0x4143],dh
	...
  40e26d:	add    BYTE PTR [rax],al
  40e26f:	add    BYTE PTR [rcx],al
  40e271:	add    BYTE PTR [rax],al
  40e273:	add    BYTE PTR [rax+rax*1],al
  40e276:	add    BYTE PTR [rax],al
  40e278:	mov    al,0xe2
  40e27a:	add    BYTE PTR [rax],al
  40e27d:	add    BYTE PTR [rax],al
  40e27f:	add    BYTE PTR [rax+0x40e2],dl
	...
  40e28d:	add    BYTE PTR [rax],al
  40e28f:	add    BYTE PTR [rbp+0x43],cl
  40e292:	add    BYTE PTR [r8],al
  40e295:	add    BYTE PTR [rax],al
  40e297:	add    BYTE PTR [rax+0x43],bl
  40e29a:	add    BYTE PTR [r8],al
	...
  40e2ad:	add    BYTE PTR [rax],al
  40e2af:	add    BYTE PTR [rcx],al
  40e2b1:	add    BYTE PTR [rax],al
  40e2b3:	add    BYTE PTR [rax],al
  40e2b5:	add    BYTE PTR [rax],al
  40e2b7:	add    BYTE PTR [rax+0x4143],dl
	...
  40e2fd:	add    BYTE PTR [rax],al
  40e2ff:	add    BYTE PTR [rax+rbp*1],cl
  40e302:	rex.X add BYTE PTR [rax],al
  40e305:	add    BYTE PTR [rax],al
  40e307:	add    ch,dl
  40e309:	rex.XB
  40e30a:	add    BYTE PTR [r8],al
  40e30d:	add    BYTE PTR [rax],al
  40e30f:	add    al,bl
  40e311:	rex.XB
  40e312:	add    BYTE PTR [r8],al
  40e315:	add    BYTE PTR [rax],al
  40e317:	add    ch,dl
  40e319:	rex.XB
  40e31a:	add    BYTE PTR [r8],al
  40e31d:	add    BYTE PTR [rax],al
  40e31f:	add    BYTE PTR [rsi],bl
  40e321:	rex.R
  40e322:	add    BYTE PTR [r8],al
  40e325:	add    BYTE PTR [rax],al
  40e327:	add    ch,dl
  40e329:	rex.XB
  40e32a:	add    BYTE PTR [r8],al
  40e32d:	add    BYTE PTR [rax],al
  40e32f:	add    BYTE PTR [rbx],bh
  40e331:	rex.R
  40e332:	add    BYTE PTR [r8],al
	...
  40e33d:	add    BYTE PTR [rax],al
  40e33f:	add    BYTE PTR [rdx],al
  40e341:	add    BYTE PTR [rax],al
  40e343:	add    BYTE PTR [rax],al
  40e345:	add    BYTE PTR [rax],al
  40e347:	add    BYTE PTR [rcx+0x44],bl
  40e34a:	add    BYTE PTR [r8],al
	...
  40e35d:	add    BYTE PTR [rax],al
  40e35f:	add    BYTE PTR [rbp+0x43],cl
  40e362:	add    BYTE PTR [r8],al
  40e365:	add    BYTE PTR [rax],al
  40e367:	add    BYTE PTR [rax+0x4144],cl
	...
  40e37d:	add    BYTE PTR [rax],al
  40e37f:	add    BYTE PTR [rdx],al
  40e381:	add    BYTE PTR [rax],al
  40e383:	add    BYTE PTR [rax],al
  40e385:	add    BYTE PTR [rax],al
  40e387:	add    BYTE PTR [rdx+0x4144],dl
	...
  40e395:	add    BYTE PTR [rax],al
  40e397:	add    BYTE PTR [rcx],al
  40e399:	add    BYTE PTR [rax],al
  40e39b:	add    BYTE PTR [rax],al
  40e39d:	add    BYTE PTR [rax],al
  40e39f:	add    BYTE PTR [rsi+0x4144],bl
	...
  40e3ad:	add    BYTE PTR [rax],al
  40e3af:	add    BYTE PTR [rbp+0x43],cl
  40e3b2:	add    BYTE PTR [r8],al
  40e3b5:	add    BYTE PTR [rax],al
  40e3b7:	add    al,ah
  40e3b9:	rex.R
  40e3ba:	add    BYTE PTR [r8],al
	...
  40e3dd:	add    BYTE PTR [rax],al
  40e3df:	add    BYTE PTR [rdx],al
  40e3e1:	add    BYTE PTR [rax],al
  40e3e3:	add    BYTE PTR [rax],al
  40e3e5:	add    BYTE PTR [rax],al
  40e3e7:	add    BYTE PTR [rax],bl
  40e3e9:	rex.RB
  40e3ea:	add    BYTE PTR [r8],al
	...
  40e3f5:	add    BYTE PTR [rax],al
  40e3f7:	add    BYTE PTR [rcx],al
  40e3f9:	add    BYTE PTR [rax],al
  40e3fb:	add    BYTE PTR [rax],al
  40e3fd:	add    BYTE PTR [rax],al
  40e3ff:	add    BYTE PTR [rax],dh
  40e401:	rex.RB
  40e402:	add    BYTE PTR [r8],al
	...
  40e41d:	add    BYTE PTR [rax],al
  40e41f:	add    BYTE PTR [rbp+0x43],cl
  40e422:	add    BYTE PTR [r8],al
  40e425:	add    BYTE PTR [rax],al
  40e427:	add    BYTE PTR [rax+0x45],ch
  40e42a:	add    BYTE PTR [r8],al
  40e42d:	add    BYTE PTR [rax],al
  40e42f:	add    BYTE PTR [rax+0x4145],bl
	...
  40e43d:	add    BYTE PTR [rax],al
  40e43f:	add    ah,dh
  40e441:	rex.RB
  40e442:	add    BYTE PTR [r8],al
	...
  40e44d:	add    BYTE PTR [rax],al
  40e44f:	add    BYTE PTR [rbp+0x43],cl
  40e452:	add    BYTE PTR [r8],al
  40e455:	add    BYTE PTR [rax],al
  40e457:	add    BYTE PTR [rax],ch
  40e459:	rex.RX
  40e45a:	add    BYTE PTR [r8],al
	...
  40e485:	add    BYTE PTR [rax],al
  40e487:	add    BYTE PTR [rax],cl
  40e489:	rex.RXB
  40e48a:	add    BYTE PTR [r8],al
	...
  40e495:	add    BYTE PTR [rax],al
  40e497:	add    BYTE PTR [rcx],al
  40e499:	add    BYTE PTR [rax],al
  40e49b:	add    BYTE PTR [rax],al
  40e49d:	add    BYTE PTR [rax],al
  40e49f:	add    BYTE PTR [rax],ah
  40e4a1:	rex.RXB
  40e4a2:	add    BYTE PTR [r8],al
	...
  40e4ad:	add    BYTE PTR [rax],al
  40e4af:	add    BYTE PTR [rbp+0x43],cl
  40e4b2:	add    BYTE PTR [r8],al
  40e4b5:	add    BYTE PTR [rax],al
  40e4b7:	add    BYTE PTR [rax+0x47],bl
  40e4ba:	add    BYTE PTR [r8],al
	...
  40e4cd:	add    BYTE PTR [rax],al
  40e4cf:	add    BYTE PTR [rcx],al
  40e4d1:	add    BYTE PTR [rax],al
  40e4d3:	add    BYTE PTR [rax],al
  40e4d5:	add    BYTE PTR [rax],al
  40e4d7:	add    BYTE PTR [rax+0x4147],al
	...
  40e4ed:	add    BYTE PTR [rax],al
  40e4ef:	add    ah,dh
  40e4f1:	rex.RB
  40e4f2:	add    BYTE PTR [r8],al
	...
  40e4fd:	add    BYTE PTR [rax],al
  40e4ff:	add    BYTE PTR [rax+rbp*1],cl
  40e502:	rex.X add BYTE PTR [rax],al
  40e505:	add    BYTE PTR [rax],al
  40e507:	add    ch,dl
  40e509:	rex.XB
  40e50a:	add    BYTE PTR [r8],al
  40e50d:	add    BYTE PTR [rax],al
  40e50f:	add    BYTE PTR [rax+0x4147],dh
	...
  40e545:	add    BYTE PTR [rax],al
  40e547:	add    BYTE PTR [rax+0x48],al
  40e54a:	add    BYTE PTR [r8],al
	...
  40e55d:	add    BYTE PTR [rax],al
  40e55f:	add    BYTE PTR [rax],ah
  40e561:	rex.W
  40e562:	add    BYTE PTR [r8],al
	...
  40e579:	rex.W
  40e57a:	add    BYTE PTR [r8],al
	...
  40e585:	add    BYTE PTR [rax],al
  40e587:	add    BYTE PTR [rcx],al
  40e589:	add    BYTE PTR [rax],al
  40e58b:	add    BYTE PTR [rax],al
  40e58d:	add    BYTE PTR [rax],al
  40e58f:	add    BYTE PTR [rax+0x48],ah
  40e592:	add    BYTE PTR [r8],al
	...
  40e59d:	add    BYTE PTR [rax],al
  40e59f:	add    BYTE PTR [rbp+0x43],cl
  40e5a2:	add    BYTE PTR [r8],al
  40e5a5:	add    BYTE PTR [rax],al
  40e5a7:	add    BYTE PTR [rsi+0x4148],ah
	...
  40e5bd:	add    BYTE PTR [rax],al
  40e5bf:	add    BYTE PTR [rcx],al
  40e5c1:	add    BYTE PTR [rax],al
  40e5c3:	add    BYTE PTR [rax],al
  40e5c5:	add    BYTE PTR [rax],al
  40e5c7:	add    al,al
  40e5c9:	rex.W
  40e5ca:	add    BYTE PTR [r8],al
	...
  40e5dd:	add    BYTE PTR [rax],al
  40e5df:	add    BYTE PTR [rbp+0x43],cl
  40e5e2:	add    BYTE PTR [r8],al
  40e5e5:	add    BYTE PTR [rax],al
  40e5e7:	add    BYTE PTR [rax],cl
  40e5e9:	rex.WB
  40e5ea:	add    BYTE PTR [r8],al
  40e5ed:	add    BYTE PTR [rax],al
  40e5ef:	add    BYTE PTR [rax+0x49],dl
  40e5f2:	add    BYTE PTR [r8],al
	...
  40e5fd:	add    BYTE PTR [rax],al
  40e5ff:	add    ah,dh
  40e601:	rex.RB
  40e602:	add    BYTE PTR [r8],al
	...
  40e61d:	add    BYTE PTR [rax],al
  40e61f:	add    BYTE PTR [rbp+0x43],cl
  40e622:	add    BYTE PTR [r8],al
  40e625:	add    BYTE PTR [rax],al
  40e627:	add    al,ch
  40e629:	rex.WB
  40e62a:	add    BYTE PTR [r8],al
  40e62d:	add    BYTE PTR [rax],al
  40e62f:	add    BYTE PTR [rax],ch
  40e631:	rex.WX
  40e632:	add    BYTE PTR [r8],al
	...
  40e63d:	add    BYTE PTR [rax],al
  40e63f:	add    ah,dh
  40e641:	rex.RB
  40e642:	add    BYTE PTR [r8],al
	...
  40e67d:	add    BYTE PTR [rax],al
  40e67f:	add    BYTE PTR [rax+rbp*1],cl
  40e682:	rex.X add BYTE PTR [rax],al
  40e685:	add    BYTE PTR [rax],al
  40e687:	add    ch,dl
  40e689:	rex.XB
  40e68a:	add    BYTE PTR [r8],al
  40e68d:	add    BYTE PTR [rax],al
  40e68f:	add    BYTE PTR [rax+0x414a],cl
  40e695:	add    BYTE PTR [rax],al
  40e697:	add    ch,dl
  40e699:	rex.XB
  40e69a:	add    BYTE PTR [r8],al
  40e69d:	add    BYTE PTR [rax],al
  40e69f:	add    al,dl
  40e6a1:	rex.WX
  40e6a2:	add    BYTE PTR [r8],al
  40e6a5:	add    BYTE PTR [rax],al
  40e6a7:	add    ch,dl
  40e6a9:	rex.XB
  40e6aa:	add    BYTE PTR [r8],al
  40e6ad:	add    BYTE PTR [rax],al
  40e6af:	add    BYTE PTR [rcx],cl
  40e6b1:	rex.WXB
  40e6b2:	add    BYTE PTR [r8],al
  40e6b5:	add    BYTE PTR [rax],al
  40e6b7:	add    ch,dl
  40e6b9:	rex.XB
  40e6ba:	add    BYTE PTR [r8],al
  40e6bd:	add    BYTE PTR [rax],al
  40e6bf:	add    BYTE PTR [rax],ah
  40e6c1:	rex.WXB
  40e6c2:	add    BYTE PTR [r8],al
  40e6c5:	add    BYTE PTR [rax],al
  40e6c7:	add    ch,dl
  40e6c9:	rex.XB
  40e6ca:	add    BYTE PTR [r8],al
  40e6cd:	add    BYTE PTR [rax],al
  40e6cf:	add    BYTE PTR [rdx+0x4b],ah
  40e6d2:	add    BYTE PTR [r8],al
  40e6d5:	add    BYTE PTR [rax],al
  40e6d7:	add    ch,dl
  40e6d9:	rex.XB
  40e6da:	add    BYTE PTR [r8],al
  40e6dd:	add    BYTE PTR [rax],al
  40e6df:	add    BYTE PTR [rax+0x414b],al
  40e6e5:	add    BYTE PTR [rax],al
  40e6e7:	add    ch,dl
  40e6e9:	rex.XB
  40e6ea:	add    BYTE PTR [r8],al
  40e6ed:	add    BYTE PTR [rax],al
  40e6ef:	add    BYTE PTR [rbx+rcx*2+0x41],bh
	...
  40e6fe:	add    BYTE PTR [rax],al
  40e700:	add    DWORD PTR [rax],eax
  40e702:	add    BYTE PTR [rax],al
  40e704:	add    BYTE PTR [rax],al
  40e706:	add    BYTE PTR [rax],al
  40e708:	loopne 0x40e755
  40e70a:	add    BYTE PTR [r8],al
	...
  40e71d:	add    BYTE PTR [rax],al
  40e71f:	add    BYTE PTR [rbp+0x43],cl
  40e722:	add    BYTE PTR [r8],al
  40e725:	add    BYTE PTR [rax],al
  40e727:	add    BYTE PTR [rax+0x4c],bl
  40e72a:	add    BYTE PTR [r8],al
	...
  40e73d:	add    BYTE PTR [rax],al
  40e73f:	add    BYTE PTR [rdx],al
  40e741:	add    BYTE PTR [rax],al
  40e743:	add    BYTE PTR [rax],al
  40e745:	add    BYTE PTR [rax],al
  40e747:	add    BYTE PTR [rbp+rcx*2+0x41],al
	...
  40e757:	add    BYTE PTR [rdx],al
  40e759:	add    BYTE PTR [rax],al
  40e75b:	add    BYTE PTR [rax],al
  40e75d:	add    BYTE PTR [rax],al
  40e75f:	add    BYTE PTR [rip+0x414d],bh        # 0x4128b2
	...
  40e76d:	add    BYTE PTR [rax],al
  40e76f:	add    BYTE PTR [rcx],al
  40e771:	add    BYTE PTR [rax],al
  40e773:	add    BYTE PTR [rax],al
  40e775:	add    BYTE PTR [rax],al
  40e777:	add    BYTE PTR [rax+0x4d],ah
  40e77a:	add    BYTE PTR [r8],al
	...
  40e78d:	add    BYTE PTR [rax],al
  40e78f:	add    BYTE PTR [rbp+0x43],cl
  40e792:	add    BYTE PTR [r8],al
  40e795:	add    BYTE PTR [rax],al
  40e797:	add    BYTE PTR [rdi],ch
  40e799:	rex.WRX
  40e79a:	add    BYTE PTR [r8],al
	...
  40e7ad:	add    BYTE PTR [rax],al
  40e7af:	add    BYTE PTR [rcx],al
  40e7b1:	add    BYTE PTR [rax],al
  40e7b3:	add    BYTE PTR [rax],al
  40e7b5:	add    BYTE PTR [rax],al
  40e7b7:	add    BYTE PTR [rax+0x4e],al
  40e7ba:	add    BYTE PTR [r8],al
	...
  40e7cd:	add    BYTE PTR [rax],al
  40e7cf:	add    BYTE PTR [rbp+0x4e],ch
  40e7d2:	add    BYTE PTR [r8],al
	...
  40e7dd:	add    BYTE PTR [rax],al
  40e7df:	add    BYTE PTR [rbp+0x43],cl
  40e7e2:	add    BYTE PTR [r8],al
  40e7e5:	add    BYTE PTR [rax],al
  40e7e7:	add    al,cl
  40e7e9:	rex.WRX
  40e7ea:	add    BYTE PTR [r8],al
	...
  40e7fd:	add    BYTE PTR [rax],al
  40e7ff:	add    BYTE PTR [rcx],al
  40e801:	add    BYTE PTR [rax],al
  40e803:	add    BYTE PTR [rax],al
  40e805:	add    BYTE PTR [rax],al
  40e807:	add    BYTE PTR [rax+0x4f],al
  40e80a:	add    BYTE PTR [r8],al
	...
  40e81d:	add    BYTE PTR [rax],al
  40e81f:	add    BYTE PTR [rbp+0x4e],ch
  40e822:	add    BYTE PTR [r8],al
	...
  40e82d:	add    BYTE PTR [rax],al
  40e82f:	add    BYTE PTR [rbp+0x43],cl
  40e832:	add    BYTE PTR [r8],al
  40e835:	add    BYTE PTR [rax],al
  40e837:	add    BYTE PTR [rdi+rcx*2+0x41],ch
	...
  40e84e:	add    BYTE PTR [rax],al
  40e850:	add    DWORD PTR [rax],eax
  40e852:	add    BYTE PTR [rax],al
  40e854:	add    BYTE PTR [rax],al
  40e856:	add    BYTE PTR [rax],al
  40e858:	loopne 0x40e8a9
  40e85a:	add    BYTE PTR [r8],al
	...
  40e86d:	add    BYTE PTR [rax],al
  40e86f:	add    BYTE PTR [rbp+0x4e],ch
  40e872:	add    BYTE PTR [r8],al
	...
  40e87d:	add    BYTE PTR [rax],al
  40e87f:	add    BYTE PTR [rbp+0x43],cl
  40e882:	add    BYTE PTR [r8],al
  40e885:	add    BYTE PTR [rax],al
  40e887:	add    BYTE PTR [rax+0x50],bl
  40e88a:	add    BYTE PTR [r8],al
	...
  40e89d:	add    BYTE PTR [rax],al
  40e89f:	add    BYTE PTR [rcx],al
  40e8a1:	add    BYTE PTR [rax],al
  40e8a3:	add    BYTE PTR [rax],al
  40e8a5:	add    BYTE PTR [rax],al
  40e8a7:	add    al,al
  40e8a9:	push   rax
  40e8aa:	add    BYTE PTR [r8],al
	...
  40e8bd:	add    BYTE PTR [rax],al
  40e8bf:	add    BYTE PTR [rbp+0x4e],ch
  40e8c2:	add    BYTE PTR [r8],al
	...
  40e8cd:	add    BYTE PTR [rax],al
  40e8cf:	add    BYTE PTR [rbp+0x43],cl
  40e8d2:	add    BYTE PTR [r8],al
  40e8d5:	add    BYTE PTR [rax],al
  40e8d7:	add    BYTE PTR [rax+0x51],bl
  40e8da:	add    BYTE PTR [r8],al
	...
  40e8ed:	add    BYTE PTR [rax],al
  40e8ef:	add    BYTE PTR [rcx],al
  40e8f1:	add    BYTE PTR [rax],al
  40e8f3:	add    BYTE PTR [rax],al
  40e8f5:	add    BYTE PTR [rax],al
  40e8f7:	add    BYTE PTR [rax+0x4151],ah
	...
  40e90d:	add    BYTE PTR [rax],al
  40e90f:	add    BYTE PTR [rbp+0x4e],ch
  40e912:	add    BYTE PTR [r8],al
	...
  40e91d:	add    BYTE PTR [rax],al
  40e91f:	add    BYTE PTR [rbp+0x43],cl
  40e922:	add    BYTE PTR [r8],al
  40e925:	add    BYTE PTR [rax],al
  40e927:	add    BYTE PTR [rbx],cl
  40e929:	push   rdx
  40e92a:	add    BYTE PTR [r8],al
	...
  40e93d:	add    BYTE PTR [rax],al
  40e93f:	add    BYTE PTR [rcx],al
  40e941:	add    BYTE PTR [rax],al
  40e943:	add    BYTE PTR [rax],al
  40e945:	add    BYTE PTR [rax],al
  40e947:	add    BYTE PTR [rax+0x52],al
  40e94a:	add    BYTE PTR [r8],al
	...
  40e95d:	add    BYTE PTR [rax],al
  40e95f:	add    BYTE PTR [rbp+0x4e],ch
  40e962:	add    BYTE PTR [r8],al
	...
  40e96d:	add    BYTE PTR [rax],al
  40e96f:	add    BYTE PTR [rbp+0x43],cl
  40e972:	add    BYTE PTR [r8],al
  40e975:	add    BYTE PTR [rax],al
  40e977:	add    al,dh
  40e979:	push   rdx
  40e97a:	add    BYTE PTR [r8],al
	...
  40e98d:	add    BYTE PTR [rax],al
  40e98f:	add    BYTE PTR [rcx],al
  40e991:	add    BYTE PTR [rax],al
  40e993:	add    BYTE PTR [rax],al
  40e995:	add    BYTE PTR [rax],al
  40e997:	add    BYTE PTR [rax],ah
  40e999:	push   rbx
  40e99a:	add    BYTE PTR [r8],al
	...
  40e9ad:	add    BYTE PTR [rax],al
  40e9af:	add    BYTE PTR [rbp+0x4e],ch
  40e9b2:	add    BYTE PTR [r8],al
	...
  40e9bd:	add    BYTE PTR [rax],al
  40e9bf:	add    BYTE PTR [rbp+0x43],cl
  40e9c2:	add    BYTE PTR [r8],al
  40e9c5:	add    BYTE PTR [rax],al
  40e9c7:	add    BYTE PTR [rax+0x4153],cl
	...
  40e9dd:	add    BYTE PTR [rax],al
  40e9df:	add    BYTE PTR [rcx],al
	...
  40e9e9:	push   rsp
  40e9ea:	add    BYTE PTR [r8],al
	...
  40e9fd:	add    BYTE PTR [rax],al
  40e9ff:	add    BYTE PTR [rbp+0x4e],ch
  40ea02:	add    BYTE PTR [r8],al
	...
  40ea3d:	add    BYTE PTR [rax],al
  40ea3f:	add    BYTE PTR [rax+rbp*1],cl
  40ea42:	rex.X add BYTE PTR [rax],al
  40ea45:	add    BYTE PTR [rax],al
  40ea47:	add    ch,dl
  40ea49:	rex.XB
  40ea4a:	add    BYTE PTR [r8],al
  40ea4d:	add    BYTE PTR [rax],al
  40ea4f:	add    BYTE PTR [rcx+0x4154],ah
  40ea55:	add    BYTE PTR [rax],al
  40ea57:	add    ch,dl
  40ea59:	rex.XB
  40ea5a:	add    BYTE PTR [r8],al
  40ea5d:	add    BYTE PTR [rax],al
  40ea5f:	add    BYTE PTR [rsp+rdx*2+0x41],dh
  40ea66:	add    BYTE PTR [rax],al
  40ea68:	(bad)  
  40ea69:	rex.XB
  40ea6a:	add    BYTE PTR [r8],al
  40ea6d:	add    BYTE PTR [rax],al
  40ea6f:	add    cl,cl
  40ea71:	push   rsp
  40ea72:	add    BYTE PTR [r8],al
  40ea75:	add    BYTE PTR [rax],al
  40ea77:	add    ch,dl
  40ea79:	rex.XB
  40ea7a:	add    BYTE PTR [r8],al
  40ea7d:	add    BYTE PTR [rax],al
  40ea7f:	add    ah,bl
  40ea81:	push   rsp
  40ea82:	add    BYTE PTR [r8],al
  40ea85:	add    BYTE PTR [rax],al
  40ea87:	add    ch,dl
  40ea89:	rex.XB
  40ea8a:	add    BYTE PTR [r8],al
  40ea8d:	add    BYTE PTR [rax],al
  40ea8f:	add    bh,ch
  40ea91:	push   rsp
  40ea92:	add    BYTE PTR [r8],al
	...
  40ea9d:	add    BYTE PTR [rax],al
  40ea9f:	add    BYTE PTR [rcx],al
  40eaa1:	add    BYTE PTR [rax],al
  40eaa3:	add    BYTE PTR [rax],al
  40eaa5:	add    BYTE PTR [rax],al
  40eaa7:	add    BYTE PTR [rax],ah
  40eaa9:	push   rbp
  40eaaa:	add    BYTE PTR [r8],al
	...
  40eabd:	add    BYTE PTR [rax],al
  40eabf:	add    BYTE PTR [rbp+0x4e],ch
  40eac2:	add    BYTE PTR [r8],al
	...
  40eacd:	add    BYTE PTR [rax],al
  40eacf:	add    BYTE PTR [rbp+0x43],cl
  40ead2:	add    BYTE PTR [r8],al
  40ead5:	add    BYTE PTR [rax],al
  40ead7:	add    cl,dl
  40ead9:	push   rbp
  40eada:	add    BYTE PTR [r8],al
	...
  40eaed:	add    BYTE PTR [rax],al
  40eaef:	add    BYTE PTR [rcx],al
  40eaf1:	add    BYTE PTR [rax],al
  40eaf3:	add    BYTE PTR [rax],al
  40eaf5:	add    BYTE PTR [rax],al
  40eaf7:	add    al,ah
  40eaf9:	push   rbp
  40eafa:	add    BYTE PTR [r8],al
	...
  40eb0d:	add    BYTE PTR [rax],al
  40eb0f:	add    BYTE PTR [rbp+0x4e],ch
  40eb12:	add    BYTE PTR [r8],al
	...
  40eb1d:	add    BYTE PTR [rax],al
  40eb1f:	add    BYTE PTR [rbp+0x43],cl
  40eb22:	add    BYTE PTR [r8],al
  40eb25:	add    BYTE PTR [rax],al
  40eb27:	add    BYTE PTR [rdi+0x56],al
  40eb2a:	add    BYTE PTR [r8],al
	...
  40eb3d:	add    BYTE PTR [rax],al
  40eb3f:	add    BYTE PTR [rcx],al
  40eb41:	add    BYTE PTR [rax],al
  40eb43:	add    BYTE PTR [rax],al
  40eb45:	add    BYTE PTR [rax],al
  40eb47:	add    BYTE PTR [rax+0x56],dl
  40eb4a:	add    BYTE PTR [r8],al
	...
  40eb5d:	add    BYTE PTR [rax],al
  40eb5f:	add    BYTE PTR [rbp+0x43],cl
  40eb62:	add    BYTE PTR [r8],al
  40eb65:	add    BYTE PTR [rax],al
  40eb67:	add    BYTE PTR [rax+0x4156],bl
  40eb6d:	add    BYTE PTR [rax],al
  40eb6f:	add    al,al
  40eb71:	push   rsi
  40eb72:	add    BYTE PTR [r8],al
	...
  40eb7d:	add    BYTE PTR [rax],al
  40eb7f:	add    BYTE PTR [rcx],al
  40eb81:	add    BYTE PTR [rax],al
  40eb83:	add    BYTE PTR [rax],al
  40eb85:	add    BYTE PTR [rax],al
  40eb87:	add    BYTE PTR [rax],ah
  40eb89:	push   rdi
  40eb8a:	add    BYTE PTR [r8],al
	...
  40eb9d:	add    BYTE PTR [rax],al
  40eb9f:	add    BYTE PTR [rbp+0x43],cl
  40eba2:	add    BYTE PTR [r8],al
  40eba5:	add    BYTE PTR [rax],al
  40eba7:	add    BYTE PTR [rcx+0x57],cl
  40ebaa:	add    BYTE PTR [r8],al
  40ebad:	add    BYTE PTR [rax],al
  40ebaf:	add    BYTE PTR [rax+0x57],ah
  40ebb2:	add    BYTE PTR [r8],al
	...
  40ebbd:	add    BYTE PTR [rax],al
  40ebbf:	add    BYTE PTR [rcx],al
  40ebc1:	add    BYTE PTR [rax],al
  40ebc3:	add    BYTE PTR [rax],al
  40ebc5:	add    BYTE PTR [rax],al
  40ebc7:	add    BYTE PTR [rax+0x4157],dh
	...
  40ebdd:	add    BYTE PTR [rax],al
  40ebdf:	add    BYTE PTR [rbp+0x43],cl
  40ebe2:	add    BYTE PTR [r8],al
  40ebe5:	add    BYTE PTR [rax],al
  40ebe7:	add    bh,dl
  40ebe9:	push   rdi
  40ebea:	add    BYTE PTR [r8],al
	...
  40ebfd:	add    BYTE PTR [rax],al
  40ebff:	add    BYTE PTR [rcx],al
  40ec01:	add    BYTE PTR [rax],al
  40ec03:	add    BYTE PTR [rax],al
  40ec05:	add    BYTE PTR [rax],al
  40ec07:	add    ah,ah
  40ec09:	push   rdi
  40ec0a:	add    BYTE PTR [r8],al
	...
  40ec1d:	add    BYTE PTR [rax],al
  40ec1f:	add    BYTE PTR [rbp+0x43],cl
  40ec22:	add    BYTE PTR [r8],al
  40ec25:	add    BYTE PTR [rax],al
  40ec27:	add    BYTE PTR [rax],dl
  40ec29:	pop    rax
  40ec2a:	add    BYTE PTR [r8],al
	...
  40ec3d:	add    BYTE PTR [rax],al
  40ec3f:	add    BYTE PTR [rcx],al
  40ec41:	add    BYTE PTR [rax],al
  40ec43:	add    BYTE PTR [rax],al
  40ec45:	add    BYTE PTR [rax],al
  40ec47:	add    BYTE PTR [rax],ah
  40ec49:	pop    rax
  40ec4a:	add    BYTE PTR [r8],al
	...
  40ec5d:	add    BYTE PTR [rax],al
  40ec5f:	add    BYTE PTR [rbp+0x43],cl
  40ec62:	add    BYTE PTR [r8],al
  40ec65:	add    BYTE PTR [rax],al
  40ec67:	add    BYTE PTR [rsi+0x58],bh
  40ec6a:	add    BYTE PTR [r8],al
	...
  40ec7d:	add    BYTE PTR [rax],al
  40ec7f:	add    BYTE PTR [rdx],al
  40ec81:	add    BYTE PTR [rax],al
  40ec83:	add    BYTE PTR [rax],al
  40ec85:	add    BYTE PTR [rax],al
  40ec87:	add    BYTE PTR [rax+0x4158],dl
	...
  40ec95:	add    BYTE PTR [rax],al
  40ec97:	add    BYTE PTR [rcx],al
  40ec99:	add    BYTE PTR [rax],al
  40ec9b:	add    BYTE PTR [rax],al
  40ec9d:	add    BYTE PTR [rax],al
  40ec9f:	add    al,al
  40eca1:	pop    rax
  40eca2:	add    BYTE PTR [r8],al
	...
  40ecbd:	add    BYTE PTR [rax],al
  40ecbf:	add    BYTE PTR [rax+rbp*1],cl
  40ecc2:	rex.X add BYTE PTR [rax],al
  40ecc5:	add    BYTE PTR [rax],al
  40ecc7:	add    ch,dl
  40ecc9:	rex.XB
  40ecca:	add    BYTE PTR [r8],al
  40eccd:	add    BYTE PTR [rax],al
  40eccf:	add    BYTE PTR [rax],ch
  40ecd1:	pop    rcx
  40ecd2:	add    BYTE PTR [r8],al
  40ecd5:	add    BYTE PTR [rax],al
  40ecd7:	add    ch,dl
  40ecd9:	rex.XB
  40ecda:	add    BYTE PTR [r8],al
  40ecdd:	add    BYTE PTR [rax],al
  40ecdf:	add    BYTE PTR [rax+0x59],ch
  40ece2:	add    BYTE PTR [r8],al
  40ece5:	add    BYTE PTR [rax],al
  40ece7:	add    ch,dl
  40ece9:	rex.XB
  40ecea:	add    BYTE PTR [r8],al
  40eced:	add    BYTE PTR [rax],al
  40ecef:	add    BYTE PTR [rax+0x4159],ch
  40ecf5:	add    BYTE PTR [rax],al
  40ecf7:	add    ch,dl
  40ecf9:	rex.XB
  40ecfa:	add    BYTE PTR [r8],al
  40ecfd:	add    BYTE PTR [rax],al
  40ecff:	add    dh,dl
  40ed01:	pop    rcx
  40ed02:	add    BYTE PTR [r8],al
  40ed05:	add    BYTE PTR [rax],al
  40ed07:	add    ch,dl
  40ed09:	rex.XB
  40ed0a:	add    BYTE PTR [r8],al
  40ed0d:	add    BYTE PTR [rax],al
  40ed0f:	add    al,ch
  40ed11:	pop    rcx
  40ed12:	add    BYTE PTR [r8],al
  40ed15:	add    BYTE PTR [rax],al
  40ed17:	add    ch,dl
  40ed19:	rex.XB
  40ed1a:	add    BYTE PTR [r8],al
  40ed1d:	add    BYTE PTR [rax],al
  40ed1f:	add    BYTE PTR [rdx],bl
  40ed21:	pop    rdx
  40ed22:	add    BYTE PTR [r8],al
  40ed25:	add    BYTE PTR [rax],al
  40ed27:	add    ch,dl
  40ed29:	rex.XB
  40ed2a:	add    BYTE PTR [r8],al
  40ed2d:	add    BYTE PTR [rax],al
  40ed2f:	add    BYTE PTR [rax],dh
  40ed31:	pop    rdx
  40ed32:	add    BYTE PTR [r8],al
  40ed35:	add    BYTE PTR [rax],al
  40ed37:	add    ch,dl
  40ed39:	rex.XB
  40ed3a:	add    BYTE PTR [r8],al
  40ed3d:	add    BYTE PTR [rax],al
  40ed3f:	add    BYTE PTR [rdi+0x5a],bl
  40ed42:	add    BYTE PTR [r8],al
  40ed45:	add    BYTE PTR [rax],al
  40ed47:	add    ch,dl
  40ed49:	rex.XB
  40ed4a:	add    BYTE PTR [r8],al
  40ed4d:	add    BYTE PTR [rax],al
  40ed4f:	add    BYTE PTR [rax+0x5a],dh
  40ed52:	add    BYTE PTR [r8],al
	...
  40ed5d:	add    BYTE PTR [rax],al
  40ed5f:	add    BYTE PTR [rdx],al
  40ed61:	add    BYTE PTR [rax],al
  40ed63:	add    BYTE PTR [rax],al
  40ed65:	add    BYTE PTR [rax],al
  40ed67:	add    al,al
  40ed69:	pop    rdx
  40ed6a:	add    BYTE PTR [r8],al
	...
  40ed7d:	add    BYTE PTR [rax],al
  40ed7f:	add    BYTE PTR [rbp+0x43],cl
  40ed82:	add    BYTE PTR [r8],al
  40ed85:	add    BYTE PTR [rax],al
  40ed87:	add    BYTE PTR [rdx],al
  40ed89:	pop    rbx
  40ed8a:	add    BYTE PTR [r8],al
  40ed8d:	add    BYTE PTR [rax],al
  40ed8f:	add    BYTE PTR [rbx+rbx*2],bl
  40ed92:	add    BYTE PTR [r8],al
	...
  40ed9d:	add    BYTE PTR [rax],al
  40ed9f:	add    BYTE PTR [rdx],al
  40eda1:	add    BYTE PTR [rax],al
  40eda3:	add    BYTE PTR [rax],al
  40eda5:	add    BYTE PTR [rax],al
  40eda7:	add    BYTE PTR [rax+0x5b],al
  40edaa:	add    BYTE PTR [r8],al
	...
  40edb5:	add    BYTE PTR [rax],al
  40edb7:	add    BYTE PTR [rcx],al
  40edb9:	add    BYTE PTR [rax],al
  40edbb:	add    BYTE PTR [rax],al
  40edbd:	add    BYTE PTR [rax],al
  40edbf:	add    BYTE PTR [rbx+rbx*2+0x41],dl
	...
  40edcf:	add    BYTE PTR [rbp+0x43],cl
  40edd2:	add    BYTE PTR [r8],al
  40edd5:	add    BYTE PTR [rax],al
  40edd7:	add    BYTE PTR [rax+0x415b],cl
	...
  40eded:	add    BYTE PTR [rax],al
  40edef:	add    BYTE PTR [rcx],al
  40edf1:	add    BYTE PTR [rax],al
  40edf3:	add    BYTE PTR [rax],al
  40edf5:	add    BYTE PTR [rax],al
  40edf7:	add    BYTE PTR [rax+0x415b],ah
	...
  40ee0d:	add    BYTE PTR [rax],al
  40ee0f:	add    BYTE PTR [rbp+0x43],cl
  40ee12:	add    BYTE PTR [r8],al
  40ee15:	add    BYTE PTR [rax],al
  40ee17:	add    al,bl
  40ee19:	pop    rbx
  40ee1a:	add    BYTE PTR [r8],al
	...
  40ee2d:	add    BYTE PTR [rax],al
  40ee2f:	add    BYTE PTR [rcx],al
  40ee31:	add    BYTE PTR [rax],al
  40ee33:	add    BYTE PTR [rax],al
  40ee35:	add    BYTE PTR [rax],al
  40ee37:	add    BYTE PTR [rax+0x5c],al
  40ee3a:	add    BYTE PTR [r8],al
	...
  40ee4d:	add    BYTE PTR [rax],al
  40ee4f:	add    BYTE PTR [rbp+0x43],cl
  40ee52:	add    BYTE PTR [r8],al
  40ee55:	add    BYTE PTR [rax],al
  40ee57:	add    BYTE PTR [rdi+0x415c],ch
	...
  40ee6d:	add    BYTE PTR [rax],al
  40ee6f:	add    BYTE PTR [rcx],al
  40ee71:	add    BYTE PTR [rax],al
  40ee73:	add    BYTE PTR [rax],al
  40ee75:	add    BYTE PTR [rax],al
  40ee77:	add    al,dl
  40ee79:	pop    rsp
  40ee7a:	add    BYTE PTR [r8],al
	...
  40ee9d:	add    BYTE PTR [rax],al
  40ee9f:	add    BYTE PTR [rax+rbp*1],cl
  40eea2:	rex.X add BYTE PTR [rax],al
  40eea5:	add    BYTE PTR [rax],al
  40eea7:	add    ch,dl
  40eea9:	rex.XB
  40eeaa:	add    BYTE PTR [r8],al
  40eead:	add    BYTE PTR [rax],al
  40eeaf:	add    BYTE PTR [rbx*2+0x41],ch
	...
  40eebe:	add    BYTE PTR [rax],al
  40eec0:	add    DWORD PTR [rax],eax
  40eec2:	add    BYTE PTR [rax],al
  40eec4:	add    BYTE PTR [rax],al
  40eec6:	add    BYTE PTR [rax],al
  40eec8:	push   rax
  40eec9:	pop    rbp
  40eeca:	add    BYTE PTR [r8],al
	...
  40eedd:	add    BYTE PTR [rax],al
  40eedf:	add    BYTE PTR [rbp+0x43],cl
  40eee2:	add    BYTE PTR [r8],al
  40eee5:	add    BYTE PTR [rax],al
  40eee7:	add    BYTE PTR [rcx+0x415d],al
	...
  40eefd:	add    BYTE PTR [rax],al
  40eeff:	add    BYTE PTR [rcx],al
  40ef01:	add    BYTE PTR [rax],al
  40ef03:	add    BYTE PTR [rax],al
  40ef05:	add    BYTE PTR [rax],al
  40ef07:	add    BYTE PTR [rax+0x415d],ah
	...
  40ef1d:	add    BYTE PTR [rax],al
  40ef1f:	add    BYTE PTR [rbp+0x43],cl
  40ef22:	add    BYTE PTR [r8],al
  40ef25:	add    BYTE PTR [rax],al
  40ef27:	add    dl,ah
  40ef29:	pop    rbp
  40ef2a:	add    BYTE PTR [r8],al
	...
  40ef3d:	add    BYTE PTR [rax],al
  40ef3f:	add    BYTE PTR [rcx],al
	...
  40ef49:	pop    rsi
  40ef4a:	add    BYTE PTR [r8],al
	...
  40ef5d:	add    BYTE PTR [rax],al
  40ef5f:	add    BYTE PTR [rbp+0x43],cl
  40ef62:	add    BYTE PTR [r8],al
  40ef65:	add    BYTE PTR [rax],al
  40ef67:	add    BYTE PTR [rax],dh
  40ef69:	pop    rsi
  40ef6a:	add    BYTE PTR [r8],al
	...
  40ef7d:	add    BYTE PTR [rax],al
  40ef7f:	add    BYTE PTR [rcx],al
  40ef81:	add    BYTE PTR [rax],al
  40ef83:	add    BYTE PTR [rax],al
  40ef85:	add    BYTE PTR [rax],al
  40ef87:	add    BYTE PTR [rax+0x5e],dh
  40ef8a:	add    BYTE PTR [r8],al
	...
  40ef9d:	add    BYTE PTR [rax],al
  40ef9f:	add    BYTE PTR [rax+rbp*1],cl
  40efa2:	rex.X add BYTE PTR [rax],al
  40efa5:	add    BYTE PTR [rax],al
  40efa7:	add    ch,dl
  40efa9:	rex.XB
  40efaa:	add    BYTE PTR [r8],al
  40efad:	add    BYTE PTR [rax],al
  40efaf:	add    BYTE PTR [rdx+0x415e],dh
	...
  40efbd:	add    BYTE PTR [rax],al
  40efbf:	add    BYTE PTR [rcx],al
  40efc1:	add    BYTE PTR [rax],al
  40efc3:	add    BYTE PTR [rax],al
  40efc5:	add    BYTE PTR [rax],al
  40efc7:	add    al,dl
  40efc9:	pop    rsi
  40efca:	add    BYTE PTR [r8],al
	...
  40effd:	add    BYTE PTR [rax],al
  40efff:	add    BYTE PTR [rax+rbp*1],cl
  40f002:	rex.X add BYTE PTR [rax],al
  40f005:	add    BYTE PTR [rax],al
  40f007:	add    ch,dl
  40f009:	rex.XB
  40f00a:	add    BYTE PTR [r8],al
  40f00d:	add    BYTE PTR [rax],al
  40f00f:	add    BYTE PTR [rax],dl
  40f011:	pop    rdi
  40f012:	add    BYTE PTR [r8],al
  40f015:	add    BYTE PTR [rax],al
  40f017:	add    ch,dl
  40f019:	rex.XB
  40f01a:	add    BYTE PTR [r8],al
  40f01d:	add    BYTE PTR [rax],al
  40f01f:	add    BYTE PTR [rax+0x5f],dl
  40f022:	add    BYTE PTR [r8],al
  40f025:	add    BYTE PTR [rax],al
  40f027:	add    ch,dl
  40f029:	rex.XB
  40f02a:	add    BYTE PTR [r8],al
  40f02d:	add    BYTE PTR [rax],al
  40f02f:	add    BYTE PTR [rax+0x5f],dh
  40f032:	add    BYTE PTR [r8],al
  40f035:	add    BYTE PTR [rax],al
  40f037:	add    ch,dl
  40f039:	rex.XB
  40f03a:	add    BYTE PTR [r8],al
  40f03d:	add    BYTE PTR [rax],al
  40f03f:	add    BYTE PTR [rax+0x415f],bl
  40f045:	add    BYTE PTR [rax],al
  40f047:	add    ch,dl
  40f049:	rex.XB
  40f04a:	add    BYTE PTR [r8],al
  40f04d:	add    BYTE PTR [rax],al
  40f04f:	add    al,al
  40f051:	pop    rdi
  40f052:	add    BYTE PTR [r8],al
	...
  40f05d:	add    BYTE PTR [rax],al
  40f05f:	add    BYTE PTR [rdx],al
  40f061:	add    BYTE PTR [rax],al
  40f063:	add    BYTE PTR [rax],al
  40f065:	add    BYTE PTR [rax],al
  40f067:	add    al,dh
  40f069:	pop    rdi
  40f06a:	add    BYTE PTR [r8],al
	...
  40f07d:	add    BYTE PTR [rax],al
  40f07f:	add    BYTE PTR [rbp+0x43],cl
  40f082:	add    BYTE PTR [r8],al
  40f085:	add    BYTE PTR [rax],al
  40f087:	add    BYTE PTR [rax],ah
  40f089:	(bad)  
  40f08a:	add    BYTE PTR [r8],al
	...
  40f09d:	add    BYTE PTR [rax],al
  40f09f:	add    BYTE PTR [rcx],al
  40f0a1:	add    BYTE PTR [rax],al
  40f0a3:	add    BYTE PTR [rax],al
  40f0a5:	add    BYTE PTR [rax],al
  40f0a7:	add    BYTE PTR [rax+0x60],ah
  40f0aa:	add    BYTE PTR [r8],al
	...
  40f0bd:	add    BYTE PTR [rax],al
  40f0bf:	add    BYTE PTR [rbp+0x43],cl
  40f0c2:	add    BYTE PTR [r8],al
  40f0c5:	add    BYTE PTR [rax],al
  40f0c7:	add    BYTE PTR [rdi+0x4160],bl
	...
  40f0dd:	add    BYTE PTR [rax],al
  40f0df:	add    BYTE PTR [rcx],al
  40f0e1:	add    BYTE PTR [rax],al
  40f0e3:	add    BYTE PTR [rax],al
  40f0e5:	add    BYTE PTR [rax],al
  40f0e7:	add    BYTE PTR [rax+0x4160],dh
	...
  40f0fd:	add    BYTE PTR [rax],al
  40f0ff:	add    BYTE PTR [rbp+0x43],cl
  40f102:	add    BYTE PTR [r8],al
  40f105:	add    BYTE PTR [rax],al
  40f107:	add    BYTE PTR [rax],ah
  40f109:	(bad)  
  40f10a:	add    BYTE PTR [r8],al
  40f10d:	add    BYTE PTR [rax],al
  40f10f:	add    BYTE PTR [rax+0x61],bl
  40f112:	add    BYTE PTR [r8],al
	...
  40f11d:	add    BYTE PTR [rax],al
  40f11f:	add    BYTE PTR [rdx],al
  40f121:	add    BYTE PTR [rax],al
  40f123:	add    BYTE PTR [rax],al
  40f125:	add    BYTE PTR [rax],al
  40f127:	add    BYTE PTR [rax+0x61],bh
  40f12a:	add    BYTE PTR [r8],al
	...
  40f135:	add    BYTE PTR [rax],al
  40f137:	add    BYTE PTR [rcx],al
  40f139:	add    BYTE PTR [rax],al
  40f13b:	add    BYTE PTR [rax],al
  40f13d:	add    BYTE PTR [rax],al
  40f13f:	add    BYTE PTR [rax+0x4161],dl
	...
  40f14d:	add    BYTE PTR [rax],al
  40f14f:	add    BYTE PTR [rbp+0x43],cl
  40f152:	add    BYTE PTR [r8],al
  40f155:	add    BYTE PTR [rax],al
  40f157:	add    dl,bh
  40f159:	(bad)  
  40f15a:	add    BYTE PTR [r8],al
	...
  40f17d:	add    BYTE PTR [rax],al
  40f17f:	add    BYTE PTR [rdx],al
  40f181:	add    BYTE PTR [rax],al
  40f183:	add    BYTE PTR [rax],al
  40f185:	add    BYTE PTR [rax],al
  40f187:	add    BYTE PTR [rdx],ah
  40f189:	(bad)  
	...
  40f197:	add    BYTE PTR [rdx],al
  40f199:	add    BYTE PTR [rax],al
  40f19b:	add    BYTE PTR [rax],al
  40f19d:	add    BYTE PTR [rax],al
  40f19f:	add    BYTE PTR [rax],dl
  40f1a1:	(bad)  
	...
  40f1af:	add    BYTE PTR [rcx],al
  40f1b1:	add    BYTE PTR [rax],al
  40f1b3:	add    BYTE PTR [rax],al
  40f1b5:	add    BYTE PTR [rax],al
  40f1b7:	add    BYTE PTR [rax+0x62],al
  40f1ba:	add    BYTE PTR [r8],al
	...
  40f1cd:	add    BYTE PTR [rax],al
  40f1cf:	add    BYTE PTR [rbp+0x43],cl
  40f1d2:	add    BYTE PTR [r8],al
  40f1d5:	add    BYTE PTR [rax],al
  40f1d7:	add    BYTE PTR [rax+0x4162],dl
	...
  40f1ed:	add    BYTE PTR [rax],al
  40f1ef:	add    BYTE PTR [rcx],al
  40f1f1:	add    BYTE PTR [rax],al
  40f1f3:	add    BYTE PTR [rax],al
  40f1f5:	add    BYTE PTR [rax],al
  40f1f7:	add    al,al
  40f1f9:	(bad)  
	...
  40f20f:	add    BYTE PTR [rbp+0x43],cl
  40f212:	add    BYTE PTR [r8],al
  40f215:	add    BYTE PTR [rax],al
  40f217:	add    bl,bh
  40f219:	(bad)  
	...
  40f23f:	add    BYTE PTR [rbx],al
  40f241:	add    BYTE PTR [rax],al
  40f243:	add    BYTE PTR [rax],al
  40f245:	add    BYTE PTR [rax],al
  40f247:	add    BYTE PTR [rax],ah
  40f249:	movsxd eax,DWORD PTR [rcx+0x0]
	...
  40f258:	add    DWORD PTR [rax],eax
  40f25a:	add    BYTE PTR [rax],al
  40f25c:	add    BYTE PTR [rax],al
  40f25e:	add    BYTE PTR [rax],al
  40f260:	rex movsxd eax,DWORD PTR [rcx+0x0]
	...
  40f270:	rex.WRB
  40f271:	rex.XB
  40f272:	add    BYTE PTR [r8],al
  40f275:	add    BYTE PTR [rax],al
  40f277:	add    cl,ah
  40f279:	movsxd eax,DWORD PTR [rcx+0x0]
	...
  40f2a0:	add    eax,DWORD PTR [rax]
  40f2a2:	add    BYTE PTR [rax],al
  40f2a4:	add    BYTE PTR [rax],al
  40f2a6:	add    BYTE PTR [rax],al
  40f2a8:	add    BYTE PTR [rcx+rax*2+0x0],ah
	...
  40f2b8:	add    DWORD PTR [rax],eax
  40f2ba:	add    BYTE PTR [rax],al
  40f2bc:	add    BYTE PTR [rax],al
  40f2be:	add    BYTE PTR [rax],al
  40f2c0:	rex
  40f2c1:	add    BYTE PTR fs:[r8],al
	...
  40f2cd:	add    BYTE PTR [rax],al
  40f2cf:	add    BYTE PTR [rbp+0x43],cl
  40f2d2:	add    BYTE PTR [r8],al
  40f2d5:	add    BYTE PTR [rax],al
  40f2d7:	add    cl,ah
  40f2d9:	movsxd eax,DWORD PTR [rcx+0x0]
	...
  40f300:	add    eax,DWORD PTR [rax]
  40f302:	add    BYTE PTR [rax],al
  40f304:	add    BYTE PTR [rax],al
  40f306:	add    BYTE PTR [rax],al
  40f308:	and    BYTE PTR [rbp+0x41],ah
	...
  40f317:	add    BYTE PTR [rdx],al
  40f319:	add    BYTE PTR [rax],al
  40f31b:	add    BYTE PTR [rax],al
  40f31d:	add    BYTE PTR [rax],al
  40f31f:	add    BYTE PTR [rax+0x65],ah
  40f322:	add    BYTE PTR [r8],al
	...
  40f32d:	add    BYTE PTR [rax],al
  40f32f:	add    BYTE PTR [rdx],al
  40f331:	add    BYTE PTR [rax],al
  40f333:	add    BYTE PTR [rax],al
  40f335:	add    BYTE PTR [rax],al
  40f337:	add    BYTE PTR [rax+0x65],al
  40f33a:	add    BYTE PTR [r8],al
	...
  40f345:	add    BYTE PTR [rax],al
  40f347:	add    BYTE PTR [rcx],al
  40f349:	add    BYTE PTR [rax],al
  40f34b:	add    BYTE PTR [rax],al
  40f34d:	add    BYTE PTR [rax],al
  40f34f:	add    al,al
  40f351:	add    BYTE PTR gs:[r8],al
	...
  40f35d:	add    BYTE PTR [rax],al
  40f35f:	add    BYTE PTR [rax+rbp*1],cl
  40f362:	rex.X add BYTE PTR [rax],al
  40f365:	add    BYTE PTR [rax],al
  40f367:	add    ch,dl
  40f369:	rex.XB
  40f36a:	add    BYTE PTR [r8],al
  40f36d:	add    BYTE PTR [rax],al
  40f36f:	add    BYTE PTR [rax+0x66],al
  40f372:	add    BYTE PTR [r8],al
	...
  40f37d:	add    BYTE PTR [rax],al
  40f37f:	add    BYTE PTR [rdx],al
  40f381:	add    BYTE PTR [rax],al
  40f383:	add    BYTE PTR [rax],al
  40f385:	add    BYTE PTR [rax],al
  40f387:	add    BYTE PTR [rax+0x4168],al
	...
  40f395:	add    BYTE PTR [rax],al
  40f397:	add    BYTE PTR [rdx],al
  40f399:	add    BYTE PTR [rax],al
  40f39b:	add    BYTE PTR [rax],al
  40f39d:	add    BYTE PTR [rax],al
  40f39f:	add    BYTE PTR [rax+0x68],al
  40f3a2:	add    BYTE PTR [r8],al
	...
  40f3bd:	add    BYTE PTR [rax],al
  40f3bf:	add    BYTE PTR [rax+rbp*1],cl
  40f3c2:	rex.X add BYTE PTR [rax],al
  40f3c5:	add    BYTE PTR [rax],al
  40f3c7:	add    ch,dl
  40f3c9:	rex.XB
  40f3ca:	add    BYTE PTR [r8],al
  40f3cd:	add    BYTE PTR [rax],al
  40f3cf:	add    BYTE PTR [rax+0x66],al
  40f3d2:	add    BYTE PTR [r8],al
	...
  40f3dd:	add    BYTE PTR [rax],al
  40f3df:	add    BYTE PTR [rdx],al
  40f3e1:	add    BYTE PTR [rax],al
  40f3e3:	add    BYTE PTR [rax],al
  40f3e5:	add    BYTE PTR [rax],al
  40f3e7:	add    BYTE PTR [rax+0x69],al
  40f3ea:	add    BYTE PTR [r8],al
	...
  40f3fd:	add    BYTE PTR [rax],al
  40f3ff:	add    BYTE PTR [rbp+0x69],dh
  40f402:	add    BYTE PTR [r8],al
	...
  40f40d:	add    BYTE PTR [rax],al
  40f40f:	add    BYTE PTR [rcx+0x4169],ah
  40f415:	add    BYTE PTR [rax],al
  40f417:	add    BYTE PTR [rax+0x4169],ch
	...
  40f42d:	add    BYTE PTR [rax],al
  40f42f:	add    BYTE PTR [rdx],al
  40f431:	add    BYTE PTR [rax],al
  40f433:	add    BYTE PTR [rax],al
  40f435:	add    BYTE PTR [rax],al
  40f437:	add    al,ah
  40f439:	imul   eax,DWORD PTR [rcx+0x0],0x0
	...
  40f450:	jne    0x40f4bb
  40f452:	add    BYTE PTR [r8],al
	...
  40f45d:	add    BYTE PTR [rax],al
  40f45f:	add    BYTE PTR [rbp+0x43],cl
  40f462:	add    BYTE PTR [r8],al
  40f465:	add    BYTE PTR [rax],al
  40f467:	add    BYTE PTR [rbx],bl
  40f469:	push   0x41
	...
  40f47f:	add    BYTE PTR [rcx],al
  40f481:	add    BYTE PTR [rax],al
  40f483:	add    BYTE PTR [rax],al
  40f485:	add    BYTE PTR [rax],al
  40f487:	add    BYTE PTR [rip+0x416a],ah        # 0x4135f7
	...
  40f49d:	add    BYTE PTR [rax],al
  40f49f:	add    BYTE PTR [rbp+0x43],cl
  40f4a2:	add    BYTE PTR [r8],al
  40f4a5:	add    BYTE PTR [rax],al
  40f4a7:	add    BYTE PTR [rax+0x6a],dl
  40f4aa:	add    BYTE PTR [r8],al
	...
  40f4bd:	add    BYTE PTR [rax],al
  40f4bf:	add    BYTE PTR [rcx],al
  40f4c1:	add    BYTE PTR [rax],al
  40f4c3:	add    BYTE PTR [rax],al
  40f4c5:	add    BYTE PTR [rax],al
  40f4c7:	add    al,al
  40f4c9:	push   0x41
	...
  40f4df:	add    BYTE PTR [rcx],dl
  40f4e1:	imul   eax,DWORD PTR [rcx+0x0],0x0
	...
  40f4fd:	add    BYTE PTR [rax],al
  40f4ff:	add    BYTE PTR [rax+rbp*1],cl
  40f502:	rex.X add BYTE PTR [rax],al
  40f505:	add    BYTE PTR [rax],al
  40f507:	add    ch,dl
  40f509:	rex.XB
  40f50a:	add    BYTE PTR [r8],al
  40f50d:	add    BYTE PTR [rax],al
  40f50f:	add    BYTE PTR [rax+0x6b],cl
  40f512:	add    BYTE PTR [r8],al
	...
  40f51d:	add    BYTE PTR [rax],al
  40f51f:	add    BYTE PTR [rdx],al
  40f521:	add    BYTE PTR [rax],al
  40f523:	add    BYTE PTR [rax],al
  40f525:	add    BYTE PTR [rax],al
  40f527:	add    BYTE PTR [rbx+rbp*2+0x41],bh
	...
  40f537:	add    BYTE PTR [rcx],al
  40f539:	add    BYTE PTR [rax],al
  40f53b:	add    BYTE PTR [rax],al
  40f53d:	add    BYTE PTR [rax],al
  40f53f:	add    BYTE PTR [rax+0x416b],dl
	...
  40f54d:	add    BYTE PTR [rax],al
  40f54f:	add    BYTE PTR [rbp+0x43],cl
  40f552:	add    BYTE PTR [r8],al
  40f555:	add    BYTE PTR [rax],al
  40f557:	add    al,bl
  40f559:	imul   eax,DWORD PTR [rcx+0x0],0x0
	...
  40f57d:	add    BYTE PTR [rax],al
  40f57f:	add    BYTE PTR [rdx],al
  40f581:	add    BYTE PTR [rax],al
  40f583:	add    BYTE PTR [rax],al
  40f585:	add    BYTE PTR [rax],al
  40f587:	add    BYTE PTR [rax],ah
  40f589:	ins    BYTE PTR es:[rdi],dx
  40f58a:	add    BYTE PTR [r8],al
	...
  40f595:	add    BYTE PTR [rax],al
  40f597:	add    BYTE PTR [rcx],al
  40f599:	add    BYTE PTR [rax],al
  40f59b:	add    BYTE PTR [rax],al
  40f59d:	add    BYTE PTR [rax],al
  40f59f:	add    BYTE PTR [rax+0x6c],al
  40f5a2:	add    BYTE PTR [r8],al
	...
  40f5ad:	add    BYTE PTR [rax],al
  40f5af:	add    BYTE PTR [rsi+0x6c],bl
  40f5b2:	add    BYTE PTR [r8],al
	...
  40f5bd:	add    BYTE PTR [rax],al
  40f5bf:	add    BYTE PTR [rbp+0x43],cl
  40f5c2:	add    BYTE PTR [r8],al
  40f5c5:	add    BYTE PTR [rax],al
  40f5c7:	add    BYTE PTR [rax+0x416c],bl
  40f5cd:	add    BYTE PTR [rax],al
  40f5cf:	add    BYTE PTR [rax],dl
  40f5d1:	ins    DWORD PTR es:[rdi],dx
  40f5d2:	add    BYTE PTR [r8],al
	...
  40f5dd:	add    BYTE PTR [rax],al
  40f5df:	add    BYTE PTR [rcx],al
  40f5e1:	add    BYTE PTR [rax],al
  40f5e3:	add    BYTE PTR [rax],al
  40f5e5:	add    BYTE PTR [rax],al
  40f5e7:	add    BYTE PTR [rax+0x416d],al
	...
  40f5fd:	add    BYTE PTR [rax],al
  40f5ff:	add    BYTE PTR [rbp+0x416d],ch
	...
  40f60d:	add    BYTE PTR [rax],al
  40f60f:	add    BYTE PTR [rbp+0x43],cl
  40f612:	add    BYTE PTR [r8],al
  40f615:	add    BYTE PTR [rax],al
  40f617:	add    al,ch
  40f619:	ins    DWORD PTR es:[rdi],dx
  40f61a:	add    BYTE PTR [r8],al
	...
  40f62d:	add    BYTE PTR [rax],al
  40f62f:	add    BYTE PTR [rcx],al
  40f631:	add    BYTE PTR [rax],al
  40f633:	add    BYTE PTR [rax],al
  40f635:	add    BYTE PTR [rax],al
  40f637:	add    BYTE PTR [rax+0x6e],al
  40f63a:	add    BYTE PTR [r8],al
	...
  40f64d:	add    BYTE PTR [rax],al
  40f64f:	add    BYTE PTR [rsi+0x6c],bl
  40f652:	add    BYTE PTR [r8],al
	...
  40f65d:	add    BYTE PTR [rax],al
  40f65f:	add    BYTE PTR [rbp+0x43],cl
  40f662:	add    BYTE PTR [r8],al
  40f665:	add    BYTE PTR [rax],al
  40f667:	add    BYTE PTR [rcx+0x416e],bh
	...
  40f67d:	add    BYTE PTR [rax],al
  40f67f:	add    BYTE PTR [rcx],al
  40f681:	add    BYTE PTR [rax],al
  40f683:	add    BYTE PTR [rax],al
  40f685:	add    BYTE PTR [rax],al
  40f687:	add    al,ah
  40f689:	outs   dx,BYTE PTR ds:[rsi]
  40f68a:	add    BYTE PTR [r8],al
	...
  40f69d:	add    BYTE PTR [rax],al
  40f69f:	add    BYTE PTR [rsi+0x6c],bl
  40f6a2:	add    BYTE PTR [r8],al
	...
  40f6bd:	add    BYTE PTR [rax],al
  40f6bf:	add    BYTE PTR [rbp+0x43],cl
  40f6c2:	add    BYTE PTR [r8],al
  40f6c5:	add    BYTE PTR [rax],al
  40f6c7:	add    BYTE PTR [rax+0x6f],al
  40f6ca:	add    BYTE PTR [r8],al
  40f6cd:	add    BYTE PTR [rax],al
  40f6cf:	add    BYTE PTR [rax+0x416f],bl
	...
  40f6dd:	add    BYTE PTR [rax],al
  40f6df:	add    BYTE PTR [rcx],al
	...
  40f6e9:	jo     0x40f72c
	...
  40f6ff:	add    BYTE PTR [rip+0x4170],ch        # 0x413875
  40f705:	add    BYTE PTR [rax],al
  40f707:	add    BYTE PTR [rax+0x70],al
  40f70a:	add    BYTE PTR [r8],al
	...
  40f71d:	add    BYTE PTR [rax],al
  40f71f:	add    BYTE PTR [rbp+0x43],cl
  40f722:	add    BYTE PTR [r8],al
  40f725:	add    BYTE PTR [rax],al
  40f727:	add    BYTE PTR [rax+rsi*2+0x41],al
  40f72e:	add    BYTE PTR [rax],al
  40f730:	nop
  40f731:	jo     0x40f774
	...
  40f73f:	add    BYTE PTR [rcx],al
  40f741:	add    BYTE PTR [rax],al
  40f743:	add    BYTE PTR [rax],al
  40f745:	add    BYTE PTR [rax],al
  40f747:	add    al,ah
  40f749:	jo     0x40f78c
	...
  40f75f:	add    BYTE PTR [rbp+0x416d],ch
	...
  40f77d:	add    BYTE PTR [rax],al
  40f77f:	add    BYTE PTR [rbp+0x43],cl
  40f782:	add    BYTE PTR [r8],al
  40f785:	add    BYTE PTR [rax],al
  40f787:	add    BYTE PTR [rax],bh
  40f789:	jno    0x40f7cc
  40f78b:	add    BYTE PTR [rax],al
  40f78d:	add    BYTE PTR [rax],al
  40f78f:	add    BYTE PTR [rax+0x4171],cl
	...
  40f79d:	add    BYTE PTR [rax],al
  40f79f:	add    BYTE PTR [rcx],al
	...
  40f7a9:	jb     0x40f7ec
	...
  40f7bf:	add    BYTE PTR [rip+0x4170],ch        # 0x413935
  40f7c5:	add    BYTE PTR [rax],al
  40f7c7:	add    BYTE PTR [rax+0x70],al
  40f7ca:	add    BYTE PTR [r8],al
	...
  40f7dd:	add    BYTE PTR [rax],al
  40f7df:	add    BYTE PTR [rbp+0x43],cl
  40f7e2:	add    BYTE PTR [r8],al
  40f7e5:	add    BYTE PTR [rax],al
  40f7e7:	add    BYTE PTR [rax+0x72],bl
  40f7ea:	add    BYTE PTR [r8],al
  40f7ed:	add    BYTE PTR [rax],al
  40f7ef:	add    BYTE PTR [rax+0x4172],al
	...
  40f7fd:	add    BYTE PTR [rax],al
  40f7ff:	add    BYTE PTR [rdx],al
  40f801:	add    BYTE PTR [rax],al
  40f803:	add    BYTE PTR [rax],al
  40f805:	add    BYTE PTR [rax],al
  40f807:	add    ah,al
  40f809:	jb     0x40f84c
	...
  40f817:	add    BYTE PTR [rcx],al
  40f819:	add    BYTE PTR [rax],al
  40f81b:	add    BYTE PTR [rax],al
  40f81d:	add    BYTE PTR [rax],al
  40f81f:	add    al,ah
  40f821:	jb     0x40f864
	...
  40f83f:	add    BYTE PTR [rbp+0x43],cl
  40f842:	add    BYTE PTR [r8],al
  40f845:	add    BYTE PTR [rax],al
  40f847:	add    BYTE PTR [rax],dh
  40f849:	jae    0x40f88c
  40f84b:	add    BYTE PTR [rax],al
  40f84d:	add    BYTE PTR [rax],al
  40f84f:	add    al,dh
  40f851:	jae    0x40f894
	...
  40f85f:	add    BYTE PTR [rdx],al
  40f861:	add    BYTE PTR [rax],al
  40f863:	add    BYTE PTR [rax],al
  40f865:	add    BYTE PTR [rax],al
  40f867:	add    BYTE PTR [rip+0x4174],ah        # 0x4139e1
	...
  40f875:	add    BYTE PTR [rax],al
  40f877:	add    BYTE PTR [rcx],al
  40f879:	add    BYTE PTR [rax],al
  40f87b:	add    BYTE PTR [rax],al
  40f87d:	add    BYTE PTR [rax],al
  40f87f:	add    BYTE PTR [rax+0x74],al
  40f882:	add    BYTE PTR [r8],al
	...
  40f89d:	add    BYTE PTR [rax],al
  40f89f:	add    BYTE PTR [rbp+0x43],cl
  40f8a2:	add    BYTE PTR [r8],al
  40f8a5:	add    BYTE PTR [rax],al
  40f8a7:	add    BYTE PTR [rax+0x4174],dl
  40f8ad:	add    BYTE PTR [rax],al
  40f8af:	add    BYTE PTR [rax],al
  40f8b1:	jne    0x40f8f4
	...
  40f8bf:	add    BYTE PTR [rdx],al
  40f8c1:	add    BYTE PTR [rax],al
  40f8c3:	add    BYTE PTR [rax],al
  40f8c5:	add    BYTE PTR [rax],al
  40f8c7:	add    BYTE PTR [rbx],bh
  40f8c9:	jne    0x40f90c
	...
  40f8d7:	add    BYTE PTR [rcx],al
  40f8d9:	add    BYTE PTR [rax],al
  40f8db:	add    BYTE PTR [rax],al
  40f8dd:	add    BYTE PTR [rax],al
  40f8df:	add    BYTE PTR [rax+0x75],ah
  40f8e2:	add    BYTE PTR [r8],al
	...
  40f8fd:	add    BYTE PTR [rax],al
  40f8ff:	add    BYTE PTR [rbp+0x43],cl
  40f902:	add    BYTE PTR [r8],al
  40f905:	add    BYTE PTR [rax],al
  40f907:	add    BYTE PTR [rax+0x4175],dh
  40f90d:	add    BYTE PTR [rax],al
  40f90f:	add    al,bl
  40f911:	jne    0x40f954
	...
  40f91f:	add    BYTE PTR [rdx],al
  40f921:	add    BYTE PTR [rax],al
  40f923:	add    BYTE PTR [rax],al
  40f925:	add    BYTE PTR [rax],al
  40f927:	add    bl,bh
  40f929:	jne    0x40f96c
	...
  40f937:	add    BYTE PTR [rcx],al
  40f939:	add    BYTE PTR [rax],al
  40f93b:	add    BYTE PTR [rax],al
  40f93d:	add    BYTE PTR [rax],al
  40f93f:	add    BYTE PTR [rax],ah
  40f941:	jbe    0x40f984
	...
  40f95f:	add    BYTE PTR [rbp+0x43],cl
  40f962:	add    BYTE PTR [r8],al
  40f965:	add    BYTE PTR [rax],al
  40f967:	add    BYTE PTR [rax+0x76],dh
  40f96a:	add    BYTE PTR [r8],al
  40f96d:	add    BYTE PTR [rax],al
  40f96f:	add    BYTE PTR [rax+0x4176],bl
	...
  40f97d:	add    BYTE PTR [rax],al
  40f97f:	add    BYTE PTR [rdx],al
  40f981:	add    BYTE PTR [rax],al
  40f983:	add    BYTE PTR [rax],al
  40f985:	add    BYTE PTR [rax],al
  40f987:	add    ch,al
  40f989:	jbe    0x40f9cc
	...
  40f997:	add    BYTE PTR [rcx],al
  40f999:	add    BYTE PTR [rax],al
  40f99b:	add    BYTE PTR [rax],al
  40f99d:	add    BYTE PTR [rax],al
  40f99f:	add    al,ah
  40f9a1:	jbe    0x40f9e4
	...
  40f9bf:	add    BYTE PTR [rbp+0x43],cl
  40f9c2:	add    BYTE PTR [r8],al
  40f9c5:	add    BYTE PTR [rax],al
  40f9c7:	add    BYTE PTR [rax],dh
  40f9c9:	ja     0x40fa0c
  40f9cb:	add    BYTE PTR [rax],al
  40f9cd:	add    BYTE PTR [rax],al
  40f9cf:	add    BYTE PTR [rax+0x77],bl
  40f9d2:	add    BYTE PTR [r8],al
	...
  40f9dd:	add    BYTE PTR [rax],al
  40f9df:	add    BYTE PTR [rcx],al
  40f9e1:	add    BYTE PTR [rax],al
  40f9e3:	add    BYTE PTR [rax],al
  40f9e5:	add    BYTE PTR [rax],al
  40f9e7:	add    BYTE PTR [rax+0x78],ah
  40f9ea:	add    BYTE PTR [r8],al
	...
  40f9fd:	add    BYTE PTR [rax],al
  40f9ff:	add    BYTE PTR [rbp+0x43],cl
  40fa02:	add    BYTE PTR [r8],al
  40fa05:	add    BYTE PTR [rax],al
  40fa07:	add    BYTE PTR [rax+0x4178],dh
  40fa0d:	add    BYTE PTR [rax],al
  40fa0f:	add    al,ah
  40fa11:	js     0x40fa54
	...
  40fa1f:	add    BYTE PTR [rdx],al
  40fa21:	add    BYTE PTR [rax],al
  40fa23:	add    BYTE PTR [rax],al
  40fa25:	add    BYTE PTR [rax],al
  40fa27:	add    BYTE PTR [rcx],bl
  40fa29:	jns    0x40fa6c
	...
  40fa37:	add    BYTE PTR [rcx],al
  40fa39:	add    BYTE PTR [rax],al
  40fa3b:	add    BYTE PTR [rax],al
  40fa3d:	add    BYTE PTR [rax],al
  40fa3f:	add    BYTE PTR [rax+0x79],al
  40fa42:	add    BYTE PTR [r8],al
	...
  40fa4d:	add    BYTE PTR [rax],al
  40fa4f:	add    BYTE PTR [rbp+0x43],cl
  40fa52:	add    BYTE PTR [r8],al
  40fa55:	add    BYTE PTR [rax],al
  40fa57:	add    BYTE PTR [rax+0x4179],dl
	...
  40fa7d:	add    BYTE PTR [rax],al
  40fa7f:	add    BYTE PTR [rdx],al
  40fa81:	add    BYTE PTR [rax],al
  40fa83:	add    BYTE PTR [rax],al
  40fa85:	add    BYTE PTR [rax],al
  40fa87:	add    BYTE PTR [rbx+0x4179],dh
	...
  40fa95:	add    BYTE PTR [rax],al
  40fa97:	add    BYTE PTR [rcx],al
  40fa99:	add    BYTE PTR [rax],al
  40fa9b:	add    BYTE PTR [rax],al
  40fa9d:	add    BYTE PTR [rax],al
  40fa9f:	add    al,al
  40faa1:	jns    0x40fae4
	...
  40faaf:	add    BYTE PTR [rsi+0x6c],bl
  40fab2:	add    BYTE PTR [r8],al
	...
  40fabd:	add    BYTE PTR [rax],al
  40fabf:	add    BYTE PTR [rbp+0x43],cl
  40fac2:	add    BYTE PTR [r8],al
  40fac5:	add    BYTE PTR [rax],al
  40fac7:	add    BYTE PTR [rax],ah
  40fac9:	jp     0x40fb0c
	...
  40fadf:	add    BYTE PTR [rdx],al
  40fae1:	add    BYTE PTR [rax],al
  40fae3:	add    BYTE PTR [rax],al
  40fae5:	add    BYTE PTR [rax],al
  40fae7:	add    BYTE PTR [rdx+rdi*2+0x41],ah
	...
  40faf7:	add    BYTE PTR [rcx],al
  40faf9:	add    BYTE PTR [rax],al
  40fafb:	add    BYTE PTR [rax],al
  40fafd:	add    BYTE PTR [rax],al
  40faff:	add    BYTE PTR [rax+0x417a],al
	...
  40fb0d:	add    BYTE PTR [rax],al
  40fb0f:	add    BYTE PTR [rbp+0x43],cl
  40fb12:	add    BYTE PTR [r8],al
  40fb15:	add    BYTE PTR [rax],al
  40fb17:	add    dl,dl
  40fb19:	jp     0x40fb5c
	...
  40fb2f:	add    BYTE PTR [rcx],al
	...
  40fb39:	jnp    0x40fb7c
	...
  40fb4f:	add    BYTE PTR [rsi+0x6c],bl
  40fb52:	add    BYTE PTR [r8],al
	...
  40fb5d:	add    BYTE PTR [rax],al
  40fb5f:	add    BYTE PTR [rbp+0x43],cl
  40fb62:	add    BYTE PTR [r8],al
  40fb65:	add    BYTE PTR [rax],al
  40fb67:	add    BYTE PTR [rbp+0x7b],ah
  40fb6a:	add    BYTE PTR [r8],al
	...
  40fb7d:	add    BYTE PTR [rax],al
  40fb7f:	add    BYTE PTR [rcx],al
  40fb81:	add    BYTE PTR [rax],al
  40fb83:	add    BYTE PTR [rax],al
  40fb85:	add    BYTE PTR [rax],al
  40fb87:	add    BYTE PTR [rax+0x417b],ah
	...
  40fb9d:	add    BYTE PTR [rax],al
  40fb9f:	add    BYTE PTR [rsi+0x6c],bl
  40fba2:	add    BYTE PTR [r8],al
	...
  40fbad:	add    BYTE PTR [rax],al
  40fbaf:	add    BYTE PTR [rbp+0x43],cl
  40fbb2:	add    BYTE PTR [r8],al
  40fbb5:	add    BYTE PTR [rax],al
  40fbb7:	add    BYTE PTR [rax],bl
  40fbb9:	jl     0x40fbfc
	...
  40fbcf:	add    BYTE PTR [rcx],al
  40fbd1:	add    BYTE PTR [rax],al
  40fbd3:	add    BYTE PTR [rax],al
  40fbd5:	add    BYTE PTR [rax],al
  40fbd7:	add    BYTE PTR [rax+0x417c],al
	...
  40fbed:	add    BYTE PTR [rax],al
  40fbef:	add    BYTE PTR [rsi+0x6c],bl
  40fbf2:	add    BYTE PTR [r8],al
	...
  40fbfd:	add    BYTE PTR [rax],al
  40fbff:	add    BYTE PTR [rbp+0x43],cl
  40fc02:	add    BYTE PTR [r8],al
  40fc05:	add    BYTE PTR [rax],al
  40fc07:	add    BYTE PTR [rax],cl
  40fc09:	jge    0x40fc4c
	...
  40fc1f:	add    BYTE PTR [rcx],al
  40fc21:	add    BYTE PTR [rax],al
  40fc23:	add    BYTE PTR [rax],al
  40fc25:	add    BYTE PTR [rax],al
  40fc27:	add    BYTE PTR [rax+0x7d],al
  40fc2a:	add    BYTE PTR [r8],al
	...
  40fc3d:	add    BYTE PTR [rax],al
  40fc3f:	add    BYTE PTR [rsi+0x6c],bl
  40fc42:	add    BYTE PTR [r8],al
	...
  40fc4d:	add    BYTE PTR [rax],al
  40fc4f:	add    BYTE PTR [rbp+0x43],cl
  40fc52:	add    BYTE PTR [r8],al
  40fc55:	add    BYTE PTR [rax],al
  40fc57:	add    al,bl
  40fc59:	jge    0x40fc9c
	...
  40fc6f:	add    BYTE PTR [rcx],al
  40fc71:	add    BYTE PTR [rax],al
  40fc73:	add    BYTE PTR [rax],al
  40fc75:	add    BYTE PTR [rax],al
  40fc77:	add    BYTE PTR [rax],ah
  40fc79:	jle    0x40fcbc
	...
  40fc8f:	add    BYTE PTR [rsi+0x6c],bl
  40fc92:	add    BYTE PTR [r8],al
	...
  40fc9d:	add    BYTE PTR [rax],al
  40fc9f:	add    BYTE PTR [rbp+0x43],cl
  40fca2:	add    BYTE PTR [r8],al
  40fca5:	add    BYTE PTR [rax],al
  40fca7:	add    BYTE PTR [rcx+0x417e],cl
	...
  40fcbd:	add    BYTE PTR [rax],al
  40fcbf:	add    BYTE PTR [rcx],al
  40fcc1:	add    BYTE PTR [rax],al
  40fcc3:	add    BYTE PTR [rax],al
  40fcc5:	add    BYTE PTR [rax],al
  40fcc7:	add    al,al
  40fcc9:	jle    0x40fd0c
	...
  40fcdf:	add    BYTE PTR [rsi+0x6c],bl
  40fce2:	add    BYTE PTR [r8],al
	...
  40fcfd:	add    BYTE PTR [rax],al
  40fcff:	add    BYTE PTR [rax+rbp*1],cl
  40fd02:	rex.X add BYTE PTR [rax],al
  40fd05:	add    BYTE PTR [rax],al
  40fd07:	add    ch,dl
  40fd09:	rex.XB
  40fd0a:	add    BYTE PTR [r8],al
  40fd0d:	add    BYTE PTR [rax],al
  40fd0f:	add    BYTE PTR [rax+0x7f],cl
  40fd12:	add    BYTE PTR [r8],al
  40fd15:	add    BYTE PTR [rax],al
  40fd17:	add    ch,dl
  40fd19:	rex.XB
  40fd1a:	add    BYTE PTR [r8],al
  40fd1d:	add    BYTE PTR [rax],al
  40fd1f:	add    BYTE PTR [rax+0x417f],bl
	...
  40fd2d:	add    BYTE PTR [rax],al
  40fd2f:	add    ch,ah
  40fd31:	jg     0x40fd74
	...
  40fd3f:	add    BYTE PTR [rax+rbp*1],cl
  40fd42:	rex.X add BYTE PTR [rax],al
  40fd45:	add    BYTE PTR [rax],al
  40fd47:	add    ch,dl
  40fd49:	rex.XB
  40fd4a:	add    BYTE PTR [r8],al
  40fd4d:	add    BYTE PTR [rax],al
  40fd4f:	add    BYTE PTR [rax],bl
  40fd51:	add    BYTE PTR [rcx+0x0],0x0
  40fd55:	add    BYTE PTR [rax],al
  40fd57:	add    ch,dl
  40fd59:	rex.XB
  40fd5a:	add    BYTE PTR [r8],al
  40fd5d:	add    BYTE PTR [rax],al
  40fd5f:	add    BYTE PTR [rax-0x80],ch
  40fd62:	add    BYTE PTR [r8],al
  40fd65:	add    BYTE PTR [rax],al
  40fd67:	add    ch,dl
  40fd69:	rex.XB
  40fd6a:	add    BYTE PTR [r8],al
  40fd6d:	add    BYTE PTR [rax],al
  40fd6f:	add    BYTE PTR [rax+0x4180],bl
  40fd75:	add    BYTE PTR [rax],al
  40fd77:	add    ch,dl
  40fd79:	rex.XB
  40fd7a:	add    BYTE PTR [r8],al
  40fd7d:	add    BYTE PTR [rax],al
  40fd7f:	add    al,al
  40fd81:	add    BYTE PTR [rcx+0x0],0x0
	...
  40fd8d:	add    BYTE PTR [rax],al
  40fd8f:	add    BYTE PTR [rcx],al
	...
  40fd99:	add    DWORD PTR [rcx+0x0],0x0
	...
  40fdb0:	in     eax,0x7f
  40fdb2:	add    BYTE PTR [r8],al
	...
  40fdbd:	add    BYTE PTR [rax],al
  40fdbf:	add    BYTE PTR [rbp+0x43],cl
  40fdc2:	add    BYTE PTR [r8],al
  40fdc5:	add    BYTE PTR [rax],al
  40fdc7:	add    BYTE PTR [rax-0x7f],al
  40fdca:	add    BYTE PTR [r8],al
	...
  40fddd:	add    BYTE PTR [rax],al
  40fddf:	add    BYTE PTR [rcx],al
  40fde1:	add    BYTE PTR [rax],al
  40fde3:	add    BYTE PTR [rax],al
  40fde5:	add    BYTE PTR [rax],al
  40fde7:	add    BYTE PTR [rax+0x4181],ah
	...
  40fdfd:	add    BYTE PTR [rax],al
  40fdff:	add    BYTE PTR [rsi+0x6c],bl
  40fe02:	add    BYTE PTR [r8],al
	...
  40fe0d:	add    BYTE PTR [rax],al
  40fe0f:	add    BYTE PTR [rbp+0x43],cl
  40fe12:	add    BYTE PTR [r8],al
  40fe15:	add    BYTE PTR [rax],al
  40fe17:	add    BYTE PTR [rax],cl
  40fe19:	(bad)  
  40fe1a:	add    BYTE PTR [r8],al
	...
  40fe2d:	add    BYTE PTR [rax],al
  40fe2f:	add    BYTE PTR [rcx],al
  40fe31:	add    BYTE PTR [rax],al
  40fe33:	add    BYTE PTR [rax],al
  40fe35:	add    BYTE PTR [rax],al
  40fe37:	add    BYTE PTR [rax-0x7e],al
  40fe3a:	add    BYTE PTR [r8],al
	...
  40fe4d:	add    BYTE PTR [rax],al
  40fe4f:	add    BYTE PTR [rbp+0x43],cl
  40fe52:	add    BYTE PTR [r8],al
  40fe55:	add    BYTE PTR [rax],al
  40fe57:	add    BYTE PTR [rdi+0x4182],cl
	...
  40fe6d:	add    BYTE PTR [rax],al
  40fe6f:	add    BYTE PTR [rcx],al
  40fe71:	add    BYTE PTR [rax],al
  40fe73:	add    BYTE PTR [rax],al
  40fe75:	add    BYTE PTR [rax],al
  40fe77:	add    BYTE PTR [rax+0x4182],ah
	...
  40fe9d:	add    BYTE PTR [rax],al
  40fe9f:	add    BYTE PTR [rbp+0x43],cl
  40fea2:	add    BYTE PTR [r8],al
  40fea5:	add    BYTE PTR [rax],al
  40fea7:	add    dl,cl
  40fea9:	(bad)  
  40feaa:	add    BYTE PTR [r8],al
  40fead:	add    BYTE PTR [rax],al
  40feaf:	add    al,ch
  40feb1:	(bad)  
  40feb2:	add    BYTE PTR [r8],al
	...
  40febd:	add    BYTE PTR [rax],al
  40febf:	add    BYTE PTR [rcx],al
	...
  40fec9:	add    DWORD PTR [rcx+0x0],0x0
	...
  40fedd:	add    BYTE PTR [rax],al
  40fedf:	add    BYTE PTR [rbp+0x43],cl
  40fee2:	add    BYTE PTR [r8],al
  40fee5:	add    BYTE PTR [rax],al
  40fee7:	add    BYTE PTR [rax],ch
  40fee9:	add    DWORD PTR [rcx+0x0],0x0
	...
  40fefd:	add    BYTE PTR [rax],al
  40feff:	add    BYTE PTR [rcx],al
  40ff01:	add    BYTE PTR [rax],al
  40ff03:	add    BYTE PTR [rax],al
  40ff05:	add    BYTE PTR [rax],al
  40ff07:	add    BYTE PTR [rax+0x4183],al
	...
  40ff1d:	add    BYTE PTR [rax],al
  40ff1f:	add    BYTE PTR [rbp+0x43],cl
  40ff22:	add    BYTE PTR [r8],al
  40ff25:	add    BYTE PTR [rax],al
  40ff27:	add    al,bl
  40ff29:	add    DWORD PTR [rcx+0x0],0x0
	...
  40ff3d:	add    BYTE PTR [rax],al
  40ff3f:	add    BYTE PTR [rcx],al
  40ff41:	add    BYTE PTR [rax],al
  40ff43:	add    BYTE PTR [rax],al
  40ff45:	add    BYTE PTR [rax],al
  40ff47:	add    BYTE PTR [rax],ah
  40ff49:	test   BYTE PTR [rcx+0x0],al
	...
  40ff60:	rex.WRB
  40ff61:	rex.XB
  40ff62:	add    BYTE PTR [r8],al
  40ff65:	add    BYTE PTR [rax],al
  40ff67:	add    BYTE PTR [rax-0x7c],bh
  40ff6a:	add    BYTE PTR [r8],al
  40ff6d:	add    BYTE PTR [rax],al
  40ff6f:	add    BYTE PTR [rax+0x4184],ch
	...
  40ff7d:	add    BYTE PTR [rax],al
  40ff7f:	add    BYTE PTR [rcx],al
  40ff81:	add    BYTE PTR [rax],al
  40ff83:	add    BYTE PTR [rax],al
  40ff85:	add    BYTE PTR [rax],al
  40ff87:	add    al,ah
  40ff89:	test   BYTE PTR [rcx+0x0],al
	...
  40ffa0:	rex.WRB
  40ffa1:	rex.XB
  40ffa2:	add    BYTE PTR [r8],al
  40ffa5:	add    BYTE PTR [rax],al
  40ffa7:	add    BYTE PTR [rax*4+0x41],bl
  40ffae:	add    BYTE PTR [rax],al
  40ffb0:	sub    BYTE PTR [rbp+0x41],al
	...
  40ffbe:	add    BYTE PTR [rax],al
  40ffc0:	add    DWORD PTR [rax],eax
  40ffc2:	add    BYTE PTR [rax],al
  40ffc4:	add    BYTE PTR [rax],al
  40ffc6:	add    BYTE PTR [rax],al
  40ffc8:	jo     0x40ff4f
  40ffca:	add    BYTE PTR [r8],al
	...
  40ffdd:	add    BYTE PTR [rax],al
  40ffdf:	add    BYTE PTR [rbp+0x43],cl
  40ffe2:	add    BYTE PTR [r8],al
  40ffe5:	add    BYTE PTR [rax],al
  40ffe7:	add    al,cl
  40ffe9:	test   DWORD PTR [rcx+0x0],eax
	...
  410008:	mov    al,0x86
  41000a:	add    BYTE PTR [r8],al
	...
  41001d:	add    BYTE PTR [rax],al
  41001f:	add    BYTE PTR [rax+0x4186],dl
	...
  410035:	add    BYTE PTR [rax],al
  410037:	add    BYTE PTR [rax-0x7a],ah
  41003a:	add    BYTE PTR [r8],al
	...
  41004d:	add    BYTE PTR [rax],al
  41004f:	add    BYTE PTR [rax],dh
  410051:	xchg   BYTE PTR [rcx+0x0],al
	...
  410060:	add    DWORD PTR [rax],eax
  410062:	add    BYTE PTR [rax],al
  410064:	add    BYTE PTR [rax],al
  410066:	add    BYTE PTR [rax],al
  410068:	rol    BYTE PTR [rsi+0x41],0x0
	...
  41007f:	add    BYTE PTR [rbp+0x43],cl
  410082:	add    BYTE PTR [r8],al
  410085:	add    BYTE PTR [rax],al
  410087:	add    BYTE PTR [rax],al
  410089:	xchg   DWORD PTR [rcx+0x0],eax
  41008c:	add    BYTE PTR [rax],al
  41008e:	add    BYTE PTR [rax],al
  410090:	add    eax,0x4187
	...
  4100c5:	add    BYTE PTR [rax],al
  4100c7:	add    BYTE PTR [rax+0x4187],dl
	...
  4100dd:	add    BYTE PTR [rax],al
  4100df:	add    BYTE PTR [rax-0x79],dh
  4100e2:	add    BYTE PTR [r8],al
	...
  4100f5:	add    BYTE PTR [rax],al
  4100f7:	add    BYTE PTR [rax-0x79],al
  4100fa:	add    BYTE PTR [r8],al
	...
  41010d:	add    BYTE PTR [rax],al
  41010f:	add    BYTE PTR [rax],ah
  410111:	xchg   DWORD PTR [rcx+0x0],eax
	...
  410120:	rex.WRB
  410121:	rex.XB
  410122:	add    BYTE PTR [r8],al
  410125:	add    BYTE PTR [rax],al
  410127:	add    al,dl
  410129:	xchg   DWORD PTR [rcx+0x0],eax
	...
  410140:	add    DWORD PTR [rax],eax
  410142:	add    BYTE PTR [rax],al
  410144:	add    BYTE PTR [rax],al
  410146:	add    BYTE PTR [rax],al
  410148:	lock xchg DWORD PTR [rcx+0x0],eax
	...
  410160:	(bad)  
  410161:	mov    BYTE PTR [rcx+0x0],al
	...
  410170:	rex.WRB
  410171:	rex.XB
  410172:	add    BYTE PTR [r8],al
  410175:	add    BYTE PTR [rax],al
  410177:	add    BYTE PTR [rax],bh
  410179:	mov    BYTE PTR [rcx+0x0],al
	...
  410190:	add    DWORD PTR [rax],eax
  410192:	add    BYTE PTR [rax],al
  410194:	add    BYTE PTR [rax],al
  410196:	add    BYTE PTR [rax],al
  410198:	or     BYTE PTR [rax+0x41],0x0
	...
  4101bf:	add    BYTE PTR [rbp+0x43],cl
  4101c2:	add    BYTE PTR [r8],al
  4101c5:	add    BYTE PTR [rax],al
  4101c7:	add    al,bl
  4101c9:	mov    BYTE PTR [rcx+0x0],al
  4101cc:	add    BYTE PTR [rax],al
  4101ce:	add    BYTE PTR [rax],al
  4101d0:	enter  0x4189,0x0
	...
  4101e0:	add    DWORD PTR [rax],eax
  4101e2:	add    BYTE PTR [rax],al
  4101e4:	add    BYTE PTR [rax],al
  4101e6:	add    BYTE PTR [rax],al
  4101e8:	cmp    al,0x8a
  4101ea:	add    BYTE PTR [r8],al
	...
  4101fd:	add    BYTE PTR [rax],al
  4101ff:	add    BYTE PTR [rdi],al
  410201:	mov    BYTE PTR [rcx+0x0],al
	...
  410210:	rex.WRB
  410211:	rex.XB
  410212:	add    BYTE PTR [r8],al
  410215:	add    BYTE PTR [rax],al
  410217:	add    al,ch
  410219:	mov    al,BYTE PTR [rcx+0x0]
	...
  410230:	add    DWORD PTR [rax],eax
  410232:	add    BYTE PTR [rax],al
  410234:	add    BYTE PTR [rax],al
  410236:	add    BYTE PTR [rax],al
  410238:	lock mov al,BYTE PTR [rcx+0x0]
	...
  410250:	rex.WRB
  410251:	rex.XB
  410252:	add    BYTE PTR [r8],al
  410255:	add    BYTE PTR [rax],al
  410257:	add    BYTE PTR [rcx],dh
  410259:	mov    eax,DWORD PTR [rcx+0x0]
	...
  410270:	add    DWORD PTR [rax],eax
  410272:	add    BYTE PTR [rax],al
  410274:	add    BYTE PTR [rax],al
  410276:	add    BYTE PTR [rax],al
  410278:	rex mov eax,DWORD PTR [rcx+0x0]
	...
  4102a0:	rex.WRB
  4102a1:	rex.XB
  4102a2:	add    BYTE PTR [r8],al
  4102a5:	add    BYTE PTR [rax],al
  4102a7:	add    BYTE PTR [rax-0x75],dh
  4102aa:	add    BYTE PTR [r8],al
  4102ad:	add    BYTE PTR [rax],al
  4102af:	add    BYTE PTR [rax+0x418b],al
	...
  4102bd:	add    BYTE PTR [rax],al
  4102bf:	add    BYTE PTR [rcx],al
  4102c1:	add    BYTE PTR [rax],al
  4102c3:	add    BYTE PTR [rax],al
  4102c5:	add    BYTE PTR [rax],al
  4102c7:	add    al,al
  4102c9:	mov    eax,DWORD PTR [rcx+0x0]
	...
  4102e0:	rex.WRB
  4102e1:	rex.XB
  4102e2:	add    BYTE PTR [r8],al
  4102e5:	add    BYTE PTR [rax],al
  4102e7:	add    bh,bh
  4102e9:	mov    eax,DWORD PTR [rcx+0x0]
  4102ec:	add    BYTE PTR [rax],al
  4102ee:	add    BYTE PTR [rax],al
  4102f0:	add    al,0x8c
  4102f2:	add    BYTE PTR [r8],al
	...
  4102fd:	add    BYTE PTR [rax],al
  4102ff:	add    BYTE PTR [rcx],al
  410301:	add    BYTE PTR [rax],al
  410303:	add    BYTE PTR [rax],al
  410305:	add    BYTE PTR [rax],al
  410307:	add    BYTE PTR [rsp+rcx*4],bl
  41030a:	add    BYTE PTR [r8],al
	...
  41031d:	add    BYTE PTR [rax],al
  41031f:	add    BYTE PTR [rbp+0x43],cl
  410322:	add    BYTE PTR [r8],al
  410325:	add    BYTE PTR [rax],al
  410327:	add    BYTE PTR [rbp-0x74],al
  41032a:	add    BYTE PTR [r8],al
  41032d:	add    BYTE PTR [rax],al
  41032f:	add    BYTE PTR [rax-0x74],bl
  410332:	add    BYTE PTR [r8],al
	...
  41033d:	add    BYTE PTR [rax],al
  41033f:	add    BYTE PTR [rcx],al
  410341:	add    BYTE PTR [rax],al
  410343:	add    BYTE PTR [rax],al
  410345:	add    BYTE PTR [rax],al
  410347:	add    BYTE PTR [rax+0x418c],ah
	...
  41035d:	add    BYTE PTR [rax],al
  41035f:	add    BYTE PTR [rbp+0x43],cl
  410362:	add    BYTE PTR [r8],al
  410365:	add    BYTE PTR [rax],al
  410367:	add    al,bh
  410369:	mov    WORD PTR [rcx+0x0],es
  41036c:	add    BYTE PTR [rax],al
  41036e:	add    BYTE PTR [rax],al
  410370:	call   0x414502
	...
  41037d:	add    BYTE PTR [rax],al
  41037f:	add    BYTE PTR [rcx],al
  410381:	add    BYTE PTR [rax],al
  410383:	add    BYTE PTR [rax],al
  410385:	add    BYTE PTR [rax],al
  410387:	add    BYTE PTR [rax-0x72],al
  41038a:	add    BYTE PTR [r8],al
	...
  4103bd:	add    BYTE PTR [rax],al
  4103bf:	add    BYTE PTR [rax+rbp*1],cl
  4103c2:	rex.X add BYTE PTR [rax],al
  4103c5:	add    BYTE PTR [rax],al
  4103c7:	add    ch,dl
  4103c9:	rex.XB
  4103ca:	add    BYTE PTR [r8],al
  4103cd:	add    BYTE PTR [rax],al
  4103cf:	add    BYTE PTR [rax+0x418e],ah
  4103d5:	add    BYTE PTR [rax],al
  4103d7:	add    ch,dl
  4103d9:	rex.XB
  4103da:	add    BYTE PTR [r8],al
  4103dd:	add    BYTE PTR [rax],al
  4103df:	add    al,ah
  4103e1:	mov    es,WORD PTR [rcx+0x0]
  4103e4:	add    BYTE PTR [rax],al
  4103e6:	add    BYTE PTR [rax],al
  4103e8:	(bad)  
  4103e9:	rex.XB
  4103ea:	add    BYTE PTR [r8],al
  4103ed:	add    BYTE PTR [rax],al
  4103ef:	add    BYTE PTR [rax],bl
  4103f1:	pop    QWORD PTR [rcx+0x0]
  4103f4:	add    BYTE PTR [rax],al
  4103f6:	add    BYTE PTR [rax],al
  4103f8:	(bad)  
  4103f9:	rex.XB
  4103fa:	add    BYTE PTR [r8],al
  4103fd:	add    BYTE PTR [rax],al
  4103ff:	add    BYTE PTR [rax-0x71],bl
  410402:	add    BYTE PTR [r8],al
  410405:	add    BYTE PTR [rax],al
  410407:	add    ch,dl
  410409:	rex.XB
  41040a:	add    BYTE PTR [r8],al
  41040d:	add    BYTE PTR [rax],al
  41040f:	add    BYTE PTR [rax+0x418f],ch
  410415:	add    BYTE PTR [rax],al
  410417:	add    ch,dl
  410419:	rex.XB
  41041a:	add    BYTE PTR [r8],al
  41041d:	add    BYTE PTR [rax],al
  41041f:	add    al,bh
  410421:	pop    QWORD PTR [rcx+0x0]
  410424:	add    BYTE PTR [rax],al
  410426:	add    BYTE PTR [rax],al
  410428:	(bad)  
  410429:	rex.XB
  41042a:	add    BYTE PTR [r8],al
  41042d:	add    BYTE PTR [rax],al
  41042f:	add    BYTE PTR [rax-0x70],cl
  410432:	add    BYTE PTR [r8],al
  410435:	add    BYTE PTR [rax],al
  410437:	add    ch,dl
  410439:	rex.XB
  41043a:	add    BYTE PTR [r8],al
  41043d:	add    BYTE PTR [rax],al
  41043f:	add    BYTE PTR [rax+0x4190],ah
  410445:	add    BYTE PTR [rax],al
  410447:	add    ch,dl
  410449:	rex.XB
  41044a:	add    BYTE PTR [r8],al
  41044d:	add    BYTE PTR [rax],al
  41044f:	add    al,dh
  410451:	nop
  410452:	add    BYTE PTR [r8],al
  410455:	add    BYTE PTR [rax],al
  410457:	add    ch,dl
  410459:	rex.XB
  41045a:	add    BYTE PTR [r8],al
  41045d:	add    BYTE PTR [rax],al
  41045f:	add    BYTE PTR [rax-0x6f],cl
  410462:	add    BYTE PTR [r8],al
  410465:	add    BYTE PTR [rax],al
  410467:	add    ch,dl
  410469:	rex.XB
  41046a:	add    BYTE PTR [r8],al
  41046d:	add    BYTE PTR [rax],al
  41046f:	add    BYTE PTR [rax+0x4191],al
  410475:	add    BYTE PTR [rax],al
  410477:	add    ch,dl
  410479:	rex.XB
  41047a:	add    BYTE PTR [r8],al
  41047d:	add    BYTE PTR [rax],al
  41047f:	add    al,al
  410481:	xchg   ecx,eax
  410482:	add    BYTE PTR [r8],al
  410485:	add    BYTE PTR [rax],al
  410487:	add    ch,dl
  410489:	rex.XB
  41048a:	add    BYTE PTR [r8],al
  41048d:	add    BYTE PTR [rax],al
  41048f:	add    BYTE PTR [rax],al
  410491:	xchg   edx,eax
  410492:	add    BYTE PTR [r8],al
  410495:	add    BYTE PTR [rax],al
  410497:	add    ch,dl
  410499:	rex.XB
  41049a:	add    BYTE PTR [r8],al
  41049d:	add    BYTE PTR [rax],al
  41049f:	add    BYTE PTR [rax],bh
  4104a1:	xchg   edx,eax
  4104a2:	add    BYTE PTR [r8],al
	...
  4104ad:	add    BYTE PTR [rax],al
  4104af:	add    BYTE PTR [rcx],al
  4104b1:	add    BYTE PTR [rax],al
  4104b3:	add    BYTE PTR [rax],al
  4104b5:	add    BYTE PTR [rax],al
  4104b7:	add    BYTE PTR [rax+0x4192],al
	...
  4104cd:	add    BYTE PTR [rax],al
  4104cf:	add    BYTE PTR [rbp+0x43],cl
  4104d2:	add    BYTE PTR [r8],al
  4104d5:	add    BYTE PTR [rax],al
  4104d7:	add    al,ah
  4104d9:	xchg   edx,eax
  4104da:	add    BYTE PTR [r8],al
	...
  4104ed:	add    BYTE PTR [rax],al
  4104ef:	add    BYTE PTR [rcx],al
	...
  4104f9:	xchg   ebx,eax
  4104fa:	add    BYTE PTR [r8],al
	...
  41050d:	add    BYTE PTR [rax],al
  41050f:	add    BYTE PTR [rdi],bl
  410511:	xchg   ebx,eax
  410512:	add    BYTE PTR [r8],al
	...
  41051d:	add    BYTE PTR [rax],al
  41051f:	add    BYTE PTR [rbp+0x43],cl
  410522:	add    BYTE PTR [r8],al
  410525:	add    BYTE PTR [rax],al
  410527:	add    BYTE PTR [rax-0x6d],bl
  41052a:	add    BYTE PTR [r8],al
	...
  41053d:	add    BYTE PTR [rax],al
  41053f:	add    BYTE PTR [rcx],al
  410541:	add    BYTE PTR [rax],al
  410543:	add    BYTE PTR [rax],al
  410545:	add    BYTE PTR [rax],al
  410547:	add    al,ah
  410549:	xchg   ebx,eax
  41054a:	add    BYTE PTR [r8],al
	...
  41055d:	add    BYTE PTR [rax],al
  41055f:	add    BYTE PTR [rdi],bl
  410561:	xchg   ebx,eax
  410562:	add    BYTE PTR [r8],al
	...
  41056d:	add    BYTE PTR [rax],al
  41056f:	add    BYTE PTR [rbp+0x43],cl
  410572:	add    BYTE PTR [r8],al
  410575:	add    BYTE PTR [rax],al
  410577:	add    BYTE PTR [rax],ch
  410579:	xchg   esp,eax
  41057a:	add    BYTE PTR [r8],al
	...
  41058d:	add    BYTE PTR [rax],al
  41058f:	add    BYTE PTR [rcx],al
  410591:	add    BYTE PTR [rax],al
  410593:	add    BYTE PTR [rax],al
  410595:	add    BYTE PTR [rax],al
  410597:	add    BYTE PTR [rax+0x4194],al
	...
  4105ad:	add    BYTE PTR [rax],al
  4105af:	add    BYTE PTR [rdi],bl
  4105b1:	xchg   ebx,eax
  4105b2:	add    BYTE PTR [r8],al
	...
  4105bd:	add    BYTE PTR [rax],al
  4105bf:	add    BYTE PTR [rbp+0x43],cl
  4105c2:	add    BYTE PTR [r8],al
  4105c5:	add    BYTE PTR [rax],al
  4105c7:	add    BYTE PTR [rsp+rdx*4+0x41],dh
	...
  4105de:	add    BYTE PTR [rax],al
  4105e0:	add    DWORD PTR [rax],eax
  4105e2:	add    BYTE PTR [rax],al
  4105e4:	add    BYTE PTR [rax],al
  4105e6:	add    BYTE PTR [rax],al
  4105e8:	rcl    BYTE PTR [rcx+rax*2+0x0],0x0
	...
  410600:	add    BYTE PTR [rbp+0x41],dl
  410606:	add    BYTE PTR [rax],al
  410608:	add    edx,DWORD PTR [rbp+0x41]
  41060e:	add    BYTE PTR [rax],al
  410610:	or     BYTE PTR [rbp+0x41],dl
	...
  41061e:	add    BYTE PTR [rax],al
  410620:	add    al,BYTE PTR [rax]
  410622:	add    BYTE PTR [rax],al
  410624:	add    BYTE PTR [rax],al
  410626:	add    BYTE PTR [rax],al
  410628:	add    BYTE PTR [rsi+0x41],dl
	...
  410636:	add    BYTE PTR [rax],al
  410638:	add    DWORD PTR [rax],eax
  41063a:	add    BYTE PTR [rax],al
  41063c:	add    BYTE PTR [rax],al
  41063e:	add    BYTE PTR [rax],al
  410640:	and    BYTE PTR [rsi+0x41],dl
	...
  41065e:	add    BYTE PTR [rax],al
  410660:	movabs eax,ds:0x7000000000004169
  410669:	xchg   esi,eax
  41066a:	add    BYTE PTR [r8],al
  41066d:	add    BYTE PTR [rax],al
  41066f:	add    BYTE PTR [rax+0x4196],dh
	...
  41067d:	add    BYTE PTR [rax],al
  41067f:	add    BYTE PTR [rdx],al
	...
  410689:	xchg   edi,eax
  41068a:	add    BYTE PTR [r8],al
	...
  410695:	add    BYTE PTR [rax],al
  410697:	add    BYTE PTR [rcx],al
  410699:	add    BYTE PTR [rax],al
  41069b:	add    BYTE PTR [rax],al
  41069d:	add    BYTE PTR [rax],al
  41069f:	add    BYTE PTR [rax-0x69],ah
  4106a2:	add    BYTE PTR [r8],al
	...
  4106ad:	add    BYTE PTR [rax],al
  4106af:	add    BYTE PTR [rax+0x4197],cl
	...
  4106bd:	add    BYTE PTR [rax],al
  4106bf:	add    BYTE PTR [rbx],al
  4106c1:	add    BYTE PTR [rax],al
  4106c3:	add    BYTE PTR [rax],al
  4106c5:	add    BYTE PTR [rax],al
  4106c7:	add    BYTE PTR [rbp+0x4197],dl
	...
  4106dd:	add    BYTE PTR [rax],al
  4106df:	add    BYTE PTR [rbp+0x43],cl
  4106e2:	add    BYTE PTR [r8],al
  4106e5:	add    BYTE PTR [rax],al
  4106e7:	add    BYTE PTR [rdi+0x4197],ch
  4106ed:	add    BYTE PTR [rax],al
  4106ef:	add    al,cl
  4106f1:	xchg   edi,eax
  4106f2:	add    BYTE PTR [r8],al
	...
  4106fd:	add    BYTE PTR [rax],al
  4106ff:	add    BYTE PTR [rdx],al
  410701:	add    BYTE PTR [rax],al
  410703:	add    BYTE PTR [rax],al
  410705:	add    BYTE PTR [rax],al
  410707:	add    al,dh
  410709:	xchg   edi,eax
  41070a:	add    BYTE PTR [r8],al
	...
  410715:	add    BYTE PTR [rax],al
  410717:	add    BYTE PTR [rcx],al
  410719:	add    BYTE PTR [rax],al
  41071b:	add    BYTE PTR [rax],al
  41071d:	add    BYTE PTR [rax],al
  41071f:	add    BYTE PTR [rax],dl
  410721:	cwde   
  410722:	add    BYTE PTR [r8],al
	...
  41073d:	add    BYTE PTR [rax],al
  41073f:	add    BYTE PTR [rbp+0x43],cl
  410742:	add    BYTE PTR [r8],al
  410745:	add    BYTE PTR [rax],al
  410747:	add    BYTE PTR [rax-0x68],cl
  41074a:	add    BYTE PTR [r8],al
  41074d:	add    BYTE PTR [rax],al
  41074f:	add    BYTE PTR [rax-0x68],dh
  410752:	add    BYTE PTR [r8],al
	...
  41075d:	add    BYTE PTR [rax],al
  41075f:	add    BYTE PTR [rdx],al
  410761:	add    BYTE PTR [rax],al
  410763:	add    BYTE PTR [rax],al
  410765:	add    BYTE PTR [rax],al
  410767:	add    BYTE PTR [rbx+0x4198],ah
	...
  410775:	add    BYTE PTR [rax],al
  410777:	add    BYTE PTR [rcx],al
  410779:	add    BYTE PTR [rax],al
  41077b:	add    BYTE PTR [rax],al
  41077d:	add    BYTE PTR [rax],al
  41077f:	add    al,al
  410781:	cwde   
  410782:	add    BYTE PTR [r8],al
	...
  41078d:	add    BYTE PTR [rax],al
  41078f:	add    bl,dh
  410791:	cwde   
  410792:	add    BYTE PTR [r8],al
	...
  41079d:	add    BYTE PTR [rax],al
  41079f:	add    BYTE PTR [rbp+0x43],cl
  4107a2:	add    BYTE PTR [r8],al
  4107a5:	add    BYTE PTR [rax],al
  4107a7:	add    BYTE PTR [rsi],ah
  4107a9:	cdq    
  4107aa:	add    BYTE PTR [r8],al
	...
  4107bd:	add    BYTE PTR [rax],al
  4107bf:	add    BYTE PTR [rcx],al
  4107c1:	add    BYTE PTR [rax],al
  4107c3:	add    BYTE PTR [rax],al
  4107c5:	add    BYTE PTR [rax],al
  4107c7:	add    BYTE PTR [rax-0x67],al
  4107ca:	add    BYTE PTR [r8],al
	...
  4107dd:	add    BYTE PTR [rax],al
  4107df:	add    BYTE PTR [rbp+0x43],cl
  4107e2:	add    BYTE PTR [r8],al
  4107e5:	add    BYTE PTR [rax],al
  4107e7:	add    BYTE PTR [rax+0x4199],ah
	...
  4107fd:	add    BYTE PTR [rax],al
  4107ff:	add    BYTE PTR [rcx],al
	...
  410809:	(bad)  
  41080a:	add    BYTE PTR [r8],al
	...
  41081d:	add    BYTE PTR [rax],al
  41081f:	add    BYTE PTR [rax-0x66],dl
  410822:	add    BYTE PTR [r8],al
	...
  41082d:	add    BYTE PTR [rax],al
  41082f:	add    BYTE PTR [rbp+0x43],cl
  410832:	add    BYTE PTR [r8],al
  410835:	add    BYTE PTR [rax],al
  410837:	add    BYTE PTR [rdx+rbx*4+0x41],al
	...
  41084e:	add    BYTE PTR [rax],al
  410850:	add    DWORD PTR [rax],eax
  410852:	add    BYTE PTR [rax],al
  410854:	add    BYTE PTR [rax],al
  410856:	add    BYTE PTR [rax],al
  410858:	xchg   DWORD PTR [rdx+0x41],ebx
	...
  41086e:	add    BYTE PTR [rax],al
  410870:	rex.WRB
  410871:	rex.XB
  410872:	add    BYTE PTR [r8],al
  410875:	add    BYTE PTR [rax],al
  410877:	add    BYTE PTR [rbx+rbx*4+0x41],bh
	...
  41088f:	add    BYTE PTR [rcx],al
  410891:	add    BYTE PTR [rax],al
  410893:	add    BYTE PTR [rax],al
  410895:	add    BYTE PTR [rax],al
  410897:	add    BYTE PTR [rax+0x419b],dl
	...
  4108ad:	add    BYTE PTR [rax],al
  4108af:	add    BYTE PTR [rbp+0x43],cl
  4108b2:	add    BYTE PTR [r8],al
  4108b5:	add    BYTE PTR [rax],al
  4108b7:	add    bl,dl
  4108b9:	fwait
  4108ba:	add    BYTE PTR [r8],al
	...
  4108cd:	add    BYTE PTR [rax],al
  4108cf:	add    BYTE PTR [rcx],al
  4108d1:	add    BYTE PTR [rax],al
  4108d3:	add    BYTE PTR [rax],al
  4108d5:	add    BYTE PTR [rax],al
  4108d7:	add    bl,ah
  4108d9:	fwait
  4108da:	add    BYTE PTR [r8],al
	...
  4108fd:	add    BYTE PTR [rax],al
  4108ff:	add    BYTE PTR [rax+rbp*1],cl
  410902:	rex.X add BYTE PTR [rax],al
  410905:	add    BYTE PTR [rax],al
  410907:	add    ch,dl
  410909:	rex.XB
  41090a:	add    BYTE PTR [r8],al
  41090d:	add    BYTE PTR [rax],al
  41090f:	add    BYTE PTR [rdx],dh
  410911:	pushf  
  410912:	add    BYTE PTR [r8],al
	...
  41091d:	add    BYTE PTR [rax],al
  41091f:	add    BYTE PTR [rcx],al
  410921:	add    BYTE PTR [rax],al
  410923:	add    BYTE PTR [rax],al
  410925:	add    BYTE PTR [rax],al
  410927:	add    BYTE PTR [rdx-0x64],cl
  41092a:	add    BYTE PTR [r8],al
	...
  41093d:	add    BYTE PTR [rax],al
  41093f:	add    BYTE PTR [rax-0x64],dh
  410942:	add    BYTE PTR [r8],al
  410945:	add    BYTE PTR [rax],al
  410947:	add    BYTE PTR [rdi-0x64],bh
  41094a:	add    BYTE PTR [r8],al
	...
  41095d:	add    BYTE PTR [rax],al
  41095f:	add    BYTE PTR [rcx],al
  410961:	add    BYTE PTR [rax],al
  410963:	add    BYTE PTR [rax],al
  410965:	add    BYTE PTR [rax],al
  410967:	add    BYTE PTR [rax+0x419c],ah
	...
  41097d:	add    BYTE PTR [rax],al
  41097f:	add    cl,ch
  410981:	pushf  
  410982:	add    BYTE PTR [r8],al
  410985:	add    BYTE PTR [rax],al
  410987:	add    BYTE PTR [rdi-0x64],bh
  41098a:	add    BYTE PTR [r8],al
	...
  41099d:	add    BYTE PTR [rax],al
  41099f:	add    BYTE PTR [rcx],al
	...
  4109a9:	popf   
  4109aa:	add    BYTE PTR [r8],al
	...
  4109bd:	add    BYTE PTR [rax],al
  4109bf:	add    BYTE PTR [rbp+0x43],cl
  4109c2:	add    BYTE PTR [r8],al
  4109c5:	add    BYTE PTR [rax],al
  4109c7:	add    BYTE PTR [rdx],bh
  4109c9:	popf   
  4109ca:	add    BYTE PTR [r8],al
	...
  4109dd:	add    BYTE PTR [rax],al
  4109df:	add    BYTE PTR [rdx],al
  4109e1:	add    BYTE PTR [rax],al
  4109e3:	add    BYTE PTR [rax],al
  4109e5:	add    BYTE PTR [rax],al
  4109e7:	add    BYTE PTR [rax-0x63],dl
  4109ea:	add    BYTE PTR [r8],al
	...
  4109f5:	add    BYTE PTR [rax],al
  4109f7:	add    BYTE PTR [rcx],al
  4109f9:	add    BYTE PTR [rax],al
  4109fb:	add    BYTE PTR [rax],al
  4109fd:	add    BYTE PTR [rax],al
  4109ff:	add    BYTE PTR [rax+0x419d],al
	...
  410a0d:	add    BYTE PTR [rax],al
  410a0f:	add    BYTE PTR [rbp+0x43],cl
  410a12:	add    BYTE PTR [r8],al
  410a15:	add    BYTE PTR [rax],al
  410a17:	add    al,cl
  410a19:	popf   
  410a1a:	add    BYTE PTR [r8],al
	...
  410a3d:	add    BYTE PTR [rax],al
  410a3f:	add    BYTE PTR [rdx],al
	...
  410a49:	sahf   
  410a4a:	add    BYTE PTR [r8],al
	...
  410a55:	add    BYTE PTR [rax],al
  410a57:	add    BYTE PTR [rcx],al
  410a59:	add    BYTE PTR [rax],al
  410a5b:	add    BYTE PTR [rax],al
  410a5d:	add    BYTE PTR [rax],al
  410a5f:	add    BYTE PTR [rax],ah
  410a61:	sahf   
  410a62:	add    BYTE PTR [r8],al
	...
  410a6d:	add    BYTE PTR [rax],al
  410a6f:	add    BYTE PTR [rbp+0x43],cl
  410a72:	add    BYTE PTR [r8],al
  410a75:	add    BYTE PTR [rax],al
  410a77:	add    BYTE PTR [rax+0x419e],bl
	...
  410a9d:	add    BYTE PTR [rax],al
  410a9f:	add    BYTE PTR [rdx],al
  410aa1:	add    BYTE PTR [rax],al
  410aa3:	add    BYTE PTR [rax],al
  410aa5:	add    BYTE PTR [rax],al
  410aa7:	add    al,dl
  410aa9:	sahf   
  410aaa:	add    BYTE PTR [r8],al
	...
  410ab5:	add    BYTE PTR [rax],al
  410ab7:	add    BYTE PTR [rcx],al
	...
  410ac1:	lahf   
  410ac2:	add    BYTE PTR [r8],al
	...
  410acd:	add    BYTE PTR [rax],al
  410acf:	add    BYTE PTR [rbp+0x43],cl
  410ad2:	add    BYTE PTR [r8],al
  410ad5:	add    BYTE PTR [rax],al
  410ad7:	add    BYTE PTR [rax-0x61],bh
  410ada:	add    BYTE PTR [r8],al
	...
  410afd:	add    BYTE PTR [rax],al
  410aff:	add    BYTE PTR [rdx],al
  410b01:	add    BYTE PTR [rax],al
  410b03:	add    BYTE PTR [rax],al
  410b05:	add    BYTE PTR [rax],al
  410b07:	add    BYTE PTR [rax+0x419f],dh
	...
  410b15:	add    BYTE PTR [rax],al
  410b17:	add    BYTE PTR [rcx],al
  410b19:	add    BYTE PTR [rax],al
  410b1b:	add    BYTE PTR [rax],al
  410b1d:	add    BYTE PTR [rax],al
  410b1f:	add    al,ah
  410b21:	lahf   
  410b22:	add    BYTE PTR [r8],al
	...
  410b2d:	add    BYTE PTR [rax],al
  410b2f:	add    BYTE PTR [rbp+0x43],cl
  410b32:	add    BYTE PTR [r8],al
  410b35:	add    BYTE PTR [rax],al
  410b37:	add    BYTE PTR [rax-0x60],dl
  410b3a:	add    BYTE PTR [r8],al
	...
  410b4d:	add    BYTE PTR [rax],al
  410b4f:	add    BYTE PTR [rcx],al
  410b51:	add    BYTE PTR [rax],al
  410b53:	add    BYTE PTR [rax],al
  410b55:	add    BYTE PTR [rax],al
  410b57:	add    BYTE PTR [rax-0x60],dh
  410b5a:	add    BYTE PTR [r8],al
	...
  410b6d:	add    BYTE PTR [rax],al
  410b6f:	add    BYTE PTR [rbp+0x43],cl
  410b72:	add    BYTE PTR [r8],al
  410b75:	add    BYTE PTR [rax],al
  410b77:	add    BYTE PTR [rax+0x41a0],ch
	...
  410b8d:	add    BYTE PTR [rax],al
  410b8f:	add    BYTE PTR [rcx],al
  410b91:	add    BYTE PTR [rax],al
  410b93:	add    BYTE PTR [rax],al
  410b95:	add    BYTE PTR [rax],al
  410b97:	add    al,ah
  410b99:	movabs al,ds:0x41
	...
  410bae:	add    BYTE PTR [rax],al
  410bb0:	(bad)  
  410bb1:	movabs eax,ds:0x41
  410bba:	add    BYTE PTR [rax],al
  410bbc:	add    BYTE PTR [rax],al
  410bbe:	add    BYTE PTR [rax],al
  410bc0:	rex.WRB
  410bc1:	rex.XB
  410bc2:	add    BYTE PTR [r8],al
  410bc5:	add    BYTE PTR [rax],al
  410bc7:	add    BYTE PTR [rdi-0x5f],ah
  410bca:	add    BYTE PTR [r8],al
	...
  410bdd:	add    BYTE PTR [rax],al
  410bdf:	add    BYTE PTR [rcx],al
  410be1:	add    BYTE PTR [rax],al
  410be3:	add    BYTE PTR [rax],al
  410be5:	add    BYTE PTR [rax],al
  410be7:	add    BYTE PTR [rax+0x41a1],al
	...
  410bfd:	add    BYTE PTR [rax],al
  410bff:	add    BYTE PTR [rsi+0x41a1],dl
	...
  410c3d:	add    BYTE PTR [rax],al
  410c3f:	add    BYTE PTR [rax+rbp*1],cl
  410c42:	rex.X add BYTE PTR [rax],al
  410c45:	add    BYTE PTR [rax],al
  410c47:	add    ch,dl
  410c49:	rex.XB
  410c4a:	add    BYTE PTR [r8],al
  410c4d:	add    BYTE PTR [rax],al
  410c4f:	add    al,bh
  410c51:	movabs eax,ds:0x43d5000000000041
  410c5a:	add    BYTE PTR [r8],al
  410c5d:	add    BYTE PTR [rax],al
  410c5f:	add    BYTE PTR [rsi],ch
  410c61:	movabs ds:0x43d5000000000041,al
  410c6a:	add    BYTE PTR [r8],al
  410c6d:	add    BYTE PTR [rax],al
  410c6f:	add    BYTE PTR [rbx-0x5e],cl
  410c72:	add    BYTE PTR [r8],al
  410c75:	add    BYTE PTR [rax],al
  410c77:	add    ch,dl
  410c79:	rex.XB
  410c7a:	add    BYTE PTR [r8],al
  410c7d:	add    BYTE PTR [rax],al
  410c7f:	add    BYTE PTR [rax-0x5e],bl
  410c82:	add    BYTE PTR [r8],al
  410c85:	add    BYTE PTR [rax],al
  410c87:	add    ch,dl
  410c89:	rex.XB
  410c8a:	add    BYTE PTR [r8],al
  410c8d:	add    BYTE PTR [rax],al
  410c8f:	add    BYTE PTR [rax+0x41a2],bl
  410c95:	add    BYTE PTR [rax],al
  410c97:	add    ch,dl
  410c99:	rex.XB
  410c9a:	add    BYTE PTR [r8],al
  410c9d:	add    BYTE PTR [rax],al
  410c9f:	add    al,dl
  410ca1:	movabs ds:0x43d5000000000041,al
  410caa:	add    BYTE PTR [r8],al
  410cad:	add    BYTE PTR [rax],al
  410caf:	add    BYTE PTR [rax],dh
  410cb1:	movabs ds:0x43d5000000000041,eax
  410cba:	add    BYTE PTR [r8],al
  410cbd:	add    BYTE PTR [rax],al
  410cbf:	add    BYTE PTR [rax+0x41a3],bl
  410cc5:	add    BYTE PTR [rax],al
  410cc7:	add    ch,dl
  410cc9:	rex.XB
  410cca:	add    BYTE PTR [r8],al
  410ccd:	add    BYTE PTR [rax],al
  410ccf:	add    al,al
  410cd1:	movabs ds:0x43d5000000000041,eax
  410cda:	add    BYTE PTR [r8],al
  410cdd:	add    BYTE PTR [rax],al
  410cdf:	add    al,bh
  410ce1:	movabs ds:0x43d5000000000041,eax
  410cea:	add    BYTE PTR [r8],al
  410ced:	add    BYTE PTR [rax],al
  410cef:	add    BYTE PTR [rax],bh
  410cf1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  410cf2:	add    BYTE PTR [r8],al
  410cf5:	add    BYTE PTR [rax],al
  410cf7:	add    ch,dl
  410cf9:	rex.XB
  410cfa:	add    BYTE PTR [r8],al
  410cfd:	add    BYTE PTR [rax],al
  410cff:	add    BYTE PTR [rax-0x5c],bh
  410d02:	add    BYTE PTR [r8],al
  410d05:	add    BYTE PTR [rax],al
  410d07:	add    ch,dl
  410d09:	rex.XB
  410d0a:	add    BYTE PTR [r8],al
  410d0d:	add    BYTE PTR [rax],al
  410d0f:	add    al,al
  410d11:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  410d12:	add    BYTE PTR [r8],al
	...
  410d1d:	add    BYTE PTR [rax],al
  410d1f:	add    BYTE PTR [rdi],al
  410d21:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  410d22:	add    BYTE PTR [r8],al
	...
  410d2d:	add    BYTE PTR [rax],al
  410d2f:	add    BYTE PTR [rbp+0x43],cl
  410d32:	add    BYTE PTR [r8],al
  410d35:	add    BYTE PTR [rax],al
  410d37:	add    BYTE PTR [rax-0x5b],dl
  410d3a:	add    BYTE PTR [r8],al
	...
  410d4d:	add    BYTE PTR [rax],al
  410d4f:	add    BYTE PTR [rcx],al
  410d51:	add    BYTE PTR [rax],al
  410d53:	add    BYTE PTR [rax],al
  410d55:	add    BYTE PTR [rax],al
  410d57:	add    al,al
  410d59:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  410d5a:	add    BYTE PTR [r8],al
	...
  410d6d:	add    BYTE PTR [rax],al
  410d6f:	add    BYTE PTR [rax],ah
  410d71:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  410d72:	add    BYTE PTR [r8],al
	...
  410d7d:	add    BYTE PTR [rax],al
  410d7f:	add    BYTE PTR [rax+rbp*1],cl
  410d82:	rex.X add BYTE PTR [rax],al
  410d85:	add    BYTE PTR [rax],al
  410d87:	add    ch,dl
  410d89:	rex.XB
  410d8a:	add    BYTE PTR [r8],al
  410d8d:	add    BYTE PTR [rax],al
  410d8f:	add    BYTE PTR [rax-0x5a],bl
  410d92:	add    BYTE PTR [r8],al
  410d95:	add    BYTE PTR [rax],al
  410d97:	add    ch,dl
  410d99:	rex.XB
  410d9a:	add    BYTE PTR [r8],al
  410d9d:	add    BYTE PTR [rax],al
  410d9f:	add    BYTE PTR [rdi+0x41a6],cl
	...
  410dbd:	add    BYTE PTR [rax],al
  410dbf:	add    BYTE PTR [rdx],al
  410dc1:	add    BYTE PTR [rax],al
  410dc3:	add    BYTE PTR [rax],al
  410dc5:	add    BYTE PTR [rax],al
  410dc7:	add    BYTE PTR [rbx+0x41a6],ch
	...
  410dd5:	add    BYTE PTR [rax],al
  410dd7:	add    BYTE PTR [rcx],al
  410dd9:	add    BYTE PTR [rax],al
  410ddb:	add    BYTE PTR [rax],al
  410ddd:	add    BYTE PTR [rax],al
  410ddf:	add    al,al
  410de1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  410de2:	add    BYTE PTR [r8],al
	...
  410ded:	add    BYTE PTR [rax],al
  410def:	add    cl,ah
  410df1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  410df2:	add    BYTE PTR [r8],al
  410df5:	add    BYTE PTR [rax],al
  410df7:	add    ch,ch
  410df9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  410dfa:	add    BYTE PTR [r8],al
	...
  410e0d:	add    BYTE PTR [rax],al
  410e0f:	add    BYTE PTR [rbp+0x43],cl
  410e12:	add    BYTE PTR [r8],al
  410e15:	add    BYTE PTR [rax],al
  410e17:	add    BYTE PTR [rcx],ah
  410e19:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  410e1a:	add    BYTE PTR [r8],al
	...
  410e2d:	add    BYTE PTR [rax],al
  410e2f:	add    BYTE PTR [rcx],al
  410e31:	add    BYTE PTR [rax],al
  410e33:	add    BYTE PTR [rax],al
  410e35:	add    BYTE PTR [rax],al
  410e37:	add    BYTE PTR [rax-0x59],al
  410e3a:	add    BYTE PTR [r8],al
	...
  410e4d:	add    BYTE PTR [rax],al
  410e4f:	add    BYTE PTR [rcx-0x59],dh
  410e52:	add    BYTE PTR [r8],al
	...
  410e5d:	add    BYTE PTR [rax],al
  410e5f:	add    BYTE PTR [rbp+0x43],cl
  410e62:	add    BYTE PTR [r8],al
  410e65:	add    BYTE PTR [rax],al
  410e67:	add    al,cl
  410e69:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  410e6a:	add    BYTE PTR [r8],al
	...
  410e7d:	add    BYTE PTR [rax],al
  410e7f:	add    BYTE PTR [rcx],al
	...
  410e89:	test   al,0x41
	...
  410e9f:	add    BYTE PTR [rax+rbp*4],ah
  410ea2:	add    BYTE PTR [r8],al
	...
  410ead:	add    BYTE PTR [rax],al
  410eaf:	add    BYTE PTR [rbp+0x43],cl
  410eb2:	add    BYTE PTR [r8],al
  410eb5:	add    BYTE PTR [rax],al
  410eb7:	add    BYTE PTR [rcx-0x58],dl
  410eba:	add    BYTE PTR [r8],al
	...
  410ecd:	add    BYTE PTR [rax],al
  410ecf:	add    BYTE PTR [rcx],al
  410ed1:	add    BYTE PTR [rax],al
  410ed3:	add    BYTE PTR [rax],al
  410ed5:	add    BYTE PTR [rax],al
  410ed7:	add    BYTE PTR [rax+0x41a8],al
	...
  410eed:	add    BYTE PTR [rax],al
  410eef:	add    BYTE PTR [rbp+0x43],cl
  410ef2:	add    BYTE PTR [r8],al
  410ef5:	add    BYTE PTR [rax],al
  410ef7:	add    BYTE PTR [rax],cl
  410ef9:	test   eax,0x41
	...
  410f0e:	add    BYTE PTR [rax],al
  410f10:	add    DWORD PTR [rax],eax
  410f12:	add    BYTE PTR [rax],al
  410f14:	add    BYTE PTR [rax],al
  410f16:	add    BYTE PTR [rax],al
  410f18:	push   rax
  410f19:	test   eax,0x41
	...
  410f2e:	add    BYTE PTR [rax],al
  410f30:	imul   ebp,DWORD PTR [rcx+0x41],0xa9770000
  410f3a:	add    BYTE PTR [r8],al
	...
  410f4d:	add    BYTE PTR [rax],al
  410f4f:	add    BYTE PTR [rbp+0x43],cl
  410f52:	add    BYTE PTR [r8],al
  410f55:	add    BYTE PTR [rax],al
  410f57:	add    BYTE PTR [rdx+0x41a9],dh
	...
  410f6d:	add    BYTE PTR [rax],al
  410f6f:	add    BYTE PTR [rcx],al
  410f71:	add    BYTE PTR [rax],al
  410f73:	add    BYTE PTR [rax],al
  410f75:	add    BYTE PTR [rax],al
  410f77:	add    al,al
  410f79:	test   eax,0x41
	...
  410fbe:	add    BYTE PTR [rax],al
  410fc0:	or     al,0x28
  410fc2:	rex.X add BYTE PTR [rax],al
  410fc5:	add    BYTE PTR [rax],al
  410fc7:	add    ch,dl
  410fc9:	rex.XB
  410fca:	add    BYTE PTR [r8],al
  410fcd:	add    BYTE PTR [rax],al
  410fcf:	add    BYTE PTR [rax],ch
  410fd1:	stos   BYTE PTR es:[rdi],al
  410fd2:	add    BYTE PTR [r8],al
  410fd5:	add    BYTE PTR [rax],al
  410fd7:	add    ch,dl
  410fd9:	rex.XB
  410fda:	add    BYTE PTR [r8],al
  410fdd:	add    BYTE PTR [rax],al
  410fdf:	add    BYTE PTR [rax+0x41aa],cl
  410fe5:	add    BYTE PTR [rax],al
  410fe7:	add    ch,dl
  410fe9:	rex.XB
  410fea:	add    BYTE PTR [r8],al
  410fed:	add    BYTE PTR [rax],al
  410fef:	add    al,dh
  410ff1:	stos   BYTE PTR es:[rdi],al
  410ff2:	add    BYTE PTR [r8],al
  410ff5:	add    BYTE PTR [rax],al
  410ff7:	add    ch,dl
  410ff9:	rex.XB
  410ffa:	add    BYTE PTR [r8],al
  410ffd:	add    BYTE PTR [rax],al
  410fff:	add    BYTE PTR [rax-0x55],dl
  411002:	add    BYTE PTR [r8],al
	...
  41100d:	add    BYTE PTR [rax],al
  41100f:	add    BYTE PTR [rsi],bl
  411011:	movabs eax,ds:0x41
	...
  41103e:	add    BYTE PTR [rax],al
  411040:	or     al,0x28
  411042:	rex.X add BYTE PTR [rax],al
  411045:	add    BYTE PTR [rax],al
  411047:	add    ch,dl
  411049:	rex.XB
  41104a:	add    BYTE PTR [r8],al
  41104d:	add    BYTE PTR [rax],al
  41104f:	add    al,bh
  411051:	stos   DWORD PTR es:[rdi],eax
  411052:	add    BYTE PTR [r8],al
  411055:	add    BYTE PTR [rax],al
  411057:	add    ch,dl
  411059:	rex.XB
  41105a:	add    BYTE PTR [r8],al
  41105d:	add    BYTE PTR [rax],al
  41105f:	add    BYTE PTR [rax-0x54],bl
  411062:	add    BYTE PTR [r8],al
  411065:	add    BYTE PTR [rax],al
  411067:	add    ch,dl
  411069:	rex.XB
  41106a:	add    BYTE PTR [r8],al
  41106d:	add    BYTE PTR [rax],al
  41106f:	add    BYTE PTR [rax+0x41ac],bh
  411075:	add    BYTE PTR [rax],al
  411077:	add    ch,dl
  411079:	rex.XB
  41107a:	add    BYTE PTR [r8],al
  41107d:	add    BYTE PTR [rax],al
  41107f:	add    BYTE PTR [rax],bl
  411081:	lods   eax,DWORD PTR ds:[rsi]
  411082:	add    BYTE PTR [r8],al
	...
  41108d:	add    BYTE PTR [rax],al
  41108f:	add    BYTE PTR [rdi-0x53],ch
  411092:	add    BYTE PTR [r8],al
	...
  4110bd:	add    BYTE PTR [rax],al
  4110bf:	add    BYTE PTR [rax+rbp*1],cl
  4110c2:	rex.X add BYTE PTR [rax],al
  4110c5:	add    BYTE PTR [rax],al
  4110c7:	add    ch,dl
  4110c9:	rex.XB
  4110ca:	add    BYTE PTR [r8],al
  4110cd:	add    BYTE PTR [rax],al
  4110cf:	add    al,ch
  4110d1:	lods   eax,DWORD PTR ds:[rsi]
  4110d2:	add    BYTE PTR [r8],al
  4110d5:	add    BYTE PTR [rax],al
  4110d7:	add    ch,dl
  4110d9:	rex.XB
  4110da:	add    BYTE PTR [r8],al
  4110dd:	add    BYTE PTR [rax],al
  4110df:	add    BYTE PTR [rax-0x52],cl
  4110e2:	add    BYTE PTR [r8],al
  4110e5:	add    BYTE PTR [rax],al
  4110e7:	add    ch,dl
  4110e9:	rex.XB
  4110ea:	add    BYTE PTR [r8],al
  4110ed:	add    BYTE PTR [rax],al
  4110ef:	add    BYTE PTR [rax+0x41ae],dh
  4110f5:	add    BYTE PTR [rax],al
  4110f7:	add    ch,dl
  4110f9:	rex.XB
  4110fa:	add    BYTE PTR [r8],al
  4110fd:	add    BYTE PTR [rax],al
  4110ff:	add    BYTE PTR [rax],dl
  411101:	scas   eax,DWORD PTR es:[rdi]
  411102:	add    BYTE PTR [r8],al
  411105:	add    BYTE PTR [rax],al
  411107:	add    ch,dl
  411109:	rex.XB
  41110a:	add    BYTE PTR [r8],al
  41110d:	add    BYTE PTR [rax],al
  41110f:	add    BYTE PTR [rax-0x51],dh
  411112:	add    BYTE PTR [r8],al
  411115:	add    BYTE PTR [rax],al
  411117:	add    ch,dl
  411119:	rex.XB
  41111a:	add    BYTE PTR [r8],al
  41111d:	add    BYTE PTR [rax],al
  41111f:	add    al,dl
  411121:	scas   eax,DWORD PTR es:[rdi]
  411122:	add    BYTE PTR [r8],al
	...
  41112d:	add    BYTE PTR [rax],al
  41112f:	add    BYTE PTR [rax],ch
  411131:	mov    al,0x41
	...
  41113f:	add    BYTE PTR [rax+rbp*1],cl
  411142:	rex.X add BYTE PTR [rax],al
  411145:	add    BYTE PTR [rax],al
  411147:	add    ch,dl
  411149:	rex.XB
  41114a:	add    BYTE PTR [r8],al
  41114d:	add    BYTE PTR [rax],al
  41114f:	add    BYTE PTR [rax-0x50],dh
  411152:	add    BYTE PTR [r8],al
  411155:	add    BYTE PTR [rax],al
  411157:	add    ch,dl
  411159:	rex.XB
  41115a:	add    BYTE PTR [r8],al
  41115d:	add    BYTE PTR [rax],al
  41115f:	add    BYTE PTR [rax+0x41b0],bh
  411165:	add    BYTE PTR [rax],al
  411167:	add    ch,dl
  411169:	rex.XB
  41116a:	add    BYTE PTR [r8],al
  41116d:	add    BYTE PTR [rax],al
  41116f:	add    al,ch
  411171:	mov    al,0x41
  411173:	add    BYTE PTR [rax],al
  411175:	add    BYTE PTR [rax],al
  411177:	add    ch,dl
  411179:	rex.XB
  41117a:	add    BYTE PTR [r8],al
  41117d:	add    BYTE PTR [rax],al
  41117f:	add    BYTE PTR [rax],bl
  411181:	mov    cl,0x41
	...
  41119f:	add    BYTE PTR [rdx],al
  4111a1:	add    BYTE PTR [rax],al
  4111a3:	add    BYTE PTR [rax],al
  4111a5:	add    BYTE PTR [rax],al
  4111a7:	add    BYTE PTR [rdi-0x4f],al
  4111aa:	add    BYTE PTR [r8],al
	...
  4111b5:	add    BYTE PTR [rax],al
  4111b7:	add    BYTE PTR [rcx],al
  4111b9:	add    BYTE PTR [rax],al
  4111bb:	add    BYTE PTR [rax],al
  4111bd:	add    BYTE PTR [rax],al
  4111bf:	add    BYTE PTR [rax-0x4f],dl
  4111c2:	add    BYTE PTR [r8],al
	...
  4111cd:	add    BYTE PTR [rax],al
  4111cf:	add    BYTE PTR [rbp+0x43],cl
  4111d2:	add    BYTE PTR [r8],al
  4111d5:	add    BYTE PTR [rax],al
  4111d7:	add    BYTE PTR [rcx+rsi*4+0x41],dh
	...
  4111ef:	add    BYTE PTR [rcx],al
  4111f1:	add    BYTE PTR [rax],al
  4111f3:	add    BYTE PTR [rax],al
  4111f5:	add    BYTE PTR [rax],al
  4111f7:	add    BYTE PTR [rax+0x41b1],dl
	...
  41120d:	add    BYTE PTR [rax],al
  41120f:	add    BYTE PTR [rbx+0x41b1],ch
	...
  41121d:	add    BYTE PTR [rax],al
  41121f:	add    BYTE PTR [rbp+0x43],cl
  411222:	add    BYTE PTR [r8],al
  411225:	add    BYTE PTR [rax],al
  411227:	add    bl,cl
  411229:	mov    cl,0x41
	...
  41123f:	add    BYTE PTR [rcx],al
	...
  411249:	mov    dl,0x41
	...
  41125f:	add    BYTE PTR [rbp+0x43],cl
  411262:	add    BYTE PTR [r8],al
  411265:	add    BYTE PTR [rax],al
  411267:	add    BYTE PTR [rcx-0x4e],dh
  41126a:	add    BYTE PTR [r8],al
	...
  41127d:	add    BYTE PTR [rax],al
  41127f:	add    BYTE PTR [rcx],al
  411281:	add    BYTE PTR [rax],al
  411283:	add    BYTE PTR [rax],al
  411285:	add    BYTE PTR [rax],al
  411287:	add    BYTE PTR [rax+0x41b2],al
	...
  41129d:	add    BYTE PTR [rax],al
  41129f:	add    BYTE PTR [rbp+0x43],cl
  4112a2:	add    BYTE PTR [r8],al
  4112a5:	add    BYTE PTR [rax],al
  4112a7:	add    al,dh
  4112a9:	mov    dl,0x41
	...
  4112bf:	add    BYTE PTR [rcx],al
  4112c1:	add    BYTE PTR [rax],al
  4112c3:	add    BYTE PTR [rax],al
  4112c5:	add    BYTE PTR [rax],al
  4112c7:	add    ch,bh
  4112c9:	mov    dl,0x41
	...
  4112df:	add    BYTE PTR [rsi],al
  4112e1:	mov    bl,0x41
	...
  4112ef:	add    BYTE PTR [rbp+0x43],cl
  4112f2:	add    BYTE PTR [r8],al
  4112f5:	add    BYTE PTR [rax],al
  4112f7:	add    BYTE PTR [rax],ch
  4112f9:	mov    bl,0x41
	...
  41130f:	add    BYTE PTR [rcx],al
  411311:	add    BYTE PTR [rax],al
  411313:	add    BYTE PTR [rax],al
  411315:	add    BYTE PTR [rax],al
  411317:	add    BYTE PTR [rax-0x4d],ah
  41131a:	add    BYTE PTR [r8],al
	...
  41132d:	add    BYTE PTR [rax],al
  41132f:	add    BYTE PTR [rdi],al
  411331:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  411332:	add    BYTE PTR [r8],al
	...
  41133d:	add    BYTE PTR [rax],al
  41133f:	add    BYTE PTR [rbp+0x43],cl
  411342:	add    BYTE PTR [r8],al
  411345:	add    BYTE PTR [rax],al
  411347:	add    dl,cl
  411349:	(bad)  
  41134a:	add    BYTE PTR [r8],al
	...
  41135d:	add    BYTE PTR [rax],al
  41135f:	add    BYTE PTR [rdx],al
  411361:	add    BYTE PTR [rax],al
  411363:	add    BYTE PTR [rax],al
  411365:	add    BYTE PTR [rax],al
  411367:	add    ch,al
  411369:	mov    bl,0x41
	...
  411377:	add    BYTE PTR [rcx],al
  411379:	add    BYTE PTR [rax],al
  41137b:	add    BYTE PTR [rax],al
  41137d:	add    BYTE PTR [rax],al
  41137f:	add    al,ah
  411381:	mov    bl,0x41
	...
  41138f:	add    BYTE PTR [rbp+0x43],cl
  411392:	add    BYTE PTR [r8],al
  411395:	add    BYTE PTR [rax],al
  411397:	add    BYTE PTR [rax],bl
  411399:	mov    ah,0x41
	...
  4113af:	add    BYTE PTR [rcx],al
  4113b1:	add    BYTE PTR [rax],al
  4113b3:	add    BYTE PTR [rax],al
  4113b5:	add    BYTE PTR [rax],al
  4113b7:	add    BYTE PTR [rax-0x4c],al
  4113ba:	add    BYTE PTR [r8],al
	...
  4113cd:	add    BYTE PTR [rax],al
  4113cf:	add    BYTE PTR [rdi-0x4c],ch
  4113d2:	add    BYTE PTR [r8],al
	...
  4113dd:	add    BYTE PTR [rax],al
  4113df:	add    BYTE PTR [rbp+0x43],cl
  4113e2:	add    BYTE PTR [r8],al
  4113e5:	add    BYTE PTR [rax],al
  4113e7:	add    BYTE PTR [rax],bl
  4113e9:	mov    ah,0x41
	...
  4113ff:	add    BYTE PTR [rcx],al
  411401:	add    BYTE PTR [rax],al
  411403:	add    BYTE PTR [rax],al
  411405:	add    BYTE PTR [rax],al
  411407:	add    al,al
  411409:	mov    ah,0x41
	...
  41141f:	add    BYTE PTR [rdi-0x4c],ch
  411422:	add    BYTE PTR [r8],al
	...
  41142d:	add    BYTE PTR [rax],al
  41142f:	add    BYTE PTR [rbp+0x43],cl
  411432:	add    BYTE PTR [r8],al
  411435:	add    BYTE PTR [rax],al
  411437:	add    BYTE PTR [rax],bl
  411439:	mov    ch,0x41
	...
  41144f:	add    BYTE PTR [rcx],al
  411451:	add    BYTE PTR [rax],al
  411453:	add    BYTE PTR [rax],al
  411455:	add    BYTE PTR [rax],al
  411457:	add    BYTE PTR [rax-0x4b],dl
  41145a:	add    BYTE PTR [r8],al
	...
  41146d:	add    BYTE PTR [rax],al
  41146f:	add    BYTE PTR [rsi],al
  411471:	mov    bl,0x41
	...
  41147f:	add    BYTE PTR [rbp+0x43],cl
  411482:	add    BYTE PTR [r8],al
  411485:	add    BYTE PTR [rax],al
  411487:	add    BYTE PTR [rax+0x41b5],al
	...
  41149d:	add    BYTE PTR [rax],al
  41149f:	add    BYTE PTR [rdx],al
  4114a1:	add    BYTE PTR [rax],al
  4114a3:	add    BYTE PTR [rax],al
  4114a5:	add    BYTE PTR [rax],al
  4114a7:	add    al,ah
  4114a9:	mov    dh,0x41
	...
  4114b7:	add    BYTE PTR [rcx],al
  4114b9:	add    BYTE PTR [rax],al
  4114bb:	add    BYTE PTR [rax],al
  4114bd:	add    BYTE PTR [rax],al
  4114bf:	add    BYTE PTR [rax],dl
  4114c1:	mov    bh,0x41
	...
  4114cf:	add    BYTE PTR [rbp+0x43],cl
  4114d2:	add    BYTE PTR [r8],al
  4114d5:	add    BYTE PTR [rax],al
  4114d7:	add    BYTE PTR [rax-0x49],ah
  4114da:	add    BYTE PTR [r8],al
	...
  4114fd:	add    BYTE PTR [rax],al
  4114ff:	add    BYTE PTR [rdx],al
  411501:	add    BYTE PTR [rax],al
  411503:	add    BYTE PTR [rax],al
  411505:	add    BYTE PTR [rax],al
  411507:	add    BYTE PTR [rax-0x46],al
  41150a:	add    BYTE PTR [r8],al
	...
  411515:	add    BYTE PTR [rax],al
  411517:	add    BYTE PTR [rcx],al
  411519:	add    BYTE PTR [rax],al
  41151b:	add    BYTE PTR [rax],al
  41151d:	add    BYTE PTR [rax],al
  41151f:	add    BYTE PTR [rax+0x41ba],al
	...
  41152d:	add    BYTE PTR [rax],al
  41152f:	add    BYTE PTR [rbp+0x43],cl
  411532:	add    BYTE PTR [r8],al
  411535:	add    BYTE PTR [rax],al
  411537:	add    al,dh
  411539:	mov    edx,0x41
	...
  41155e:	add    BYTE PTR [rax],al
  411560:	add    al,BYTE PTR [rax]
  411562:	add    BYTE PTR [rax],al
  411564:	add    BYTE PTR [rax],al
  411566:	add    BYTE PTR [rax],al
  411568:	sar    BYTE PTR [rbx+0x41],0x0
	...
  411577:	add    BYTE PTR [rcx],al
	...
  411581:	mov    esp,0x41
	...
  41158e:	add    BYTE PTR [rax],al
  411590:	rex.WRB
  411591:	rex.XB
  411592:	add    BYTE PTR [r8],al
  411595:	add    BYTE PTR [rax],al
  411597:	add    BYTE PTR [rsi],ah
  411599:	cdq    
  41159a:	add    BYTE PTR [r8],al
	...
  4115ad:	add    BYTE PTR [rax],al
  4115af:	add    BYTE PTR [rcx],al
  4115b1:	add    BYTE PTR [rax],al
  4115b3:	add    BYTE PTR [rax],al
  4115b5:	add    BYTE PTR [rax],al
  4115b7:	add    BYTE PTR [rax+0x41bc],al
	...
  4115cd:	add    BYTE PTR [rax],al
  4115cf:	add    BYTE PTR [rbp+0x43],cl
  4115d2:	add    BYTE PTR [r8],al
  4115d5:	add    BYTE PTR [rax],al
  4115d7:	add    BYTE PTR [rsi],ah
  4115d9:	cdq    
  4115da:	add    BYTE PTR [r8],al
	...
  4115ed:	add    BYTE PTR [rax],al
  4115ef:	add    BYTE PTR [rcx],al
	...
  4115f9:	mov    ebp,0x41
	...
  41160e:	add    BYTE PTR [rax],al
  411610:	rex.WRB
  411611:	rex.XB
  411612:	add    BYTE PTR [r8],al
  411615:	add    BYTE PTR [rax],al
  411617:	add    al,ch
  411619:	mov    ebp,0x41
	...
  41162e:	add    BYTE PTR [rax],al
  411630:	add    DWORD PTR [rax],eax
  411632:	add    BYTE PTR [rax],al
  411634:	add    BYTE PTR [rax],al
  411636:	add    BYTE PTR [rax],al
  411638:	sar    BYTE PTR [rsi+0x41],0x0
	...
  41164f:	add    BYTE PTR [rdx-0x41],dl
  411652:	add    BYTE PTR [r8],al
	...
  41165d:	add    BYTE PTR [rax],al
  41165f:	add    BYTE PTR [rbp+0x43],cl
  411662:	add    BYTE PTR [r8],al
  411665:	add    BYTE PTR [rax],al
  411667:	add    BYTE PTR [rdi+rdi*4+0x41],al
  41166e:	add    BYTE PTR [rax],al
  411670:	cdq    
  411671:	mov    edi,0x41
	...
  41167e:	add    BYTE PTR [rax],al
  411680:	add    DWORD PTR [rax],eax
  411682:	add    BYTE PTR [rax],al
  411684:	add    BYTE PTR [rax],al
  411686:	add    BYTE PTR [rax],al
  411688:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  411689:	mov    edi,0x41
	...
  41169e:	add    BYTE PTR [rax],al
  4116a0:	rex.WRB
  4116a1:	rex.XB
  4116a2:	add    BYTE PTR [r8],al
  4116a5:	add    BYTE PTR [rax],al
  4116a7:	add    bh,al
  4116a9:	mov    edi,0x41
  4116ae:	add    BYTE PTR [rax],al
  4116b0:	fdivr  DWORD PTR [rdi+0x41]
	...
  4116be:	add    BYTE PTR [rax],al
  4116c0:	add    DWORD PTR [rax],eax
  4116c2:	add    BYTE PTR [rax],al
  4116c4:	add    BYTE PTR [rax],al
  4116c6:	add    BYTE PTR [rax],al
  4116c8:	and    al,al
  4116ca:	add    BYTE PTR [r8],al
	...
  4116dd:	add    BYTE PTR [rax],al
  4116df:	add    BYTE PTR [rsi+0x41c0],cl
	...
  4116fd:	add    BYTE PTR [rax],al
  4116ff:	add    BYTE PTR [rdx],al
  411701:	add    BYTE PTR [rax],al
  411703:	add    BYTE PTR [rax],al
  411705:	add    BYTE PTR [rax],al
  411707:	add    BYTE PTR [rax+0x41c0],ah
	...
  411715:	add    BYTE PTR [rax],al
  411717:	add    BYTE PTR [rcx],al
  411719:	add    BYTE PTR [rax],al
  41171b:	add    BYTE PTR [rax],al
  41171d:	add    BYTE PTR [rax],al
  41171f:	add    al,al
  411721:	rol    BYTE PTR [rcx+0x0],0x0
	...
  41172d:	add    BYTE PTR [rax],al
  41172f:	add    BYTE PTR [rbp+0x69],dh
  411732:	add    BYTE PTR [r8],al
	...
  41173d:	add    BYTE PTR [rax],al
  41173f:	add    BYTE PTR [rbp+0x43],cl
  411742:	add    BYTE PTR [r8],al
  411745:	add    BYTE PTR [rax],al
  411747:	add    BYTE PTR [rax-0x3f],dl
  41174a:	add    BYTE PTR [r8],al
	...
  41175d:	add    BYTE PTR [rax],al
  41175f:	add    BYTE PTR [rdx],al
  411761:	add    BYTE PTR [rax],al
  411763:	add    BYTE PTR [rax],al
  411765:	add    BYTE PTR [rax],al
  411767:	add    al,ah
  411769:	rol    DWORD PTR [rcx+0x0],0x0
	...
  411775:	add    BYTE PTR [rax],al
  411777:	add    BYTE PTR [rcx],al
  411779:	add    BYTE PTR [rax],al
  41177b:	add    BYTE PTR [rax],al
  41177d:	add    BYTE PTR [rax],al
  41177f:	add    BYTE PTR [rax],ah
  411781:	ret    0x41
	...
  4117a0:	rex.WRB
  4117a1:	rex.XB
  4117a2:	add    BYTE PTR [r8],al
  4117a5:	add    BYTE PTR [rax],al
  4117a7:	add    BYTE PTR [rax-0x3e],ch
  4117aa:	add    BYTE PTR [r8],al
  4117ad:	add    BYTE PTR [rax],al
  4117af:	add    BYTE PTR [rax+0x41c2],dh
	...
  4117bd:	add    BYTE PTR [rax],al
  4117bf:	add    BYTE PTR [rdx],al
  4117c1:	add    BYTE PTR [rax],al
  4117c3:	add    BYTE PTR [rax],al
  4117c5:	add    BYTE PTR [rax],al
  4117c7:	add    al,ah
  4117c9:	ret    0x41
	...
  4117e0:	rex.WRB
  4117e1:	rex.XB
  4117e2:	add    BYTE PTR [r8],al
  4117e5:	add    BYTE PTR [rax],al
  4117e7:	add    BYTE PTR [rax],dh
  4117e9:	ret    
  4117ea:	add    BYTE PTR [r8],al
  4117ed:	add    BYTE PTR [rax],al
  4117ef:	add    BYTE PTR [rax-0x3d],ah
  4117f2:	add    BYTE PTR [r8],al
	...
  4117fd:	add    BYTE PTR [rax],al
  4117ff:	add    BYTE PTR [rcx],al
  411801:	add    BYTE PTR [rax],al
  411803:	add    BYTE PTR [rax],al
  411805:	add    BYTE PTR [rax],al
  411807:	add    BYTE PTR [rbx+0x41c3],bl
	...
  41183d:	add    BYTE PTR [rax],al
  41183f:	add    BYTE PTR [rax+rbp*1],cl
  411842:	rex.X add BYTE PTR [rax],al
  411845:	add    BYTE PTR [rax],al
  411847:	add    ch,dl
  411849:	rex.XB
  41184a:	add    BYTE PTR [r8],al
  41184d:	add    BYTE PTR [rax],al
  41184f:	add    al,al
  411851:	ret    
  411852:	add    BYTE PTR [r8],al
  411855:	add    BYTE PTR [rax],al
  411857:	add    ch,dl
  411859:	rex.XB
  41185a:	add    BYTE PTR [r8],al
  41185d:	add    BYTE PTR [rax],al
  41185f:	add    BYTE PTR [rax],ah
  411861:	(bad)
  411865:	add    BYTE PTR [rax],al
  411867:	add    ch,dl
  411869:	rex.XB
  41186a:	add    BYTE PTR [r8],al
  41186d:	add    BYTE PTR [rax],al
  41186f:	add    BYTE PTR [rax-0x3c],ah
  411872:	add    BYTE PTR [r8],al
  411875:	add    BYTE PTR [rax],al
  411877:	add    ch,dl
  411879:	rex.XB
  41187a:	add    BYTE PTR [r8],al
  41187d:	add    BYTE PTR [rax],al
  41187f:	add    BYTE PTR [rax+0x41c4],ch
  411885:	add    BYTE PTR [rax],al
  411887:	add    ch,dl
  411889:	rex.XB
  41188a:	add    BYTE PTR [r8],al
  41188d:	add    BYTE PTR [rax],al
  41188f:	add    al,ch
  411891:	(bad)
  411895:	add    BYTE PTR [rax],al
  411897:	add    ch,dl
  411899:	rex.XB
  41189a:	add    BYTE PTR [r8],al
  41189d:	add    BYTE PTR [rax],al
  41189f:	add    BYTE PTR [rax],ch
  4118a1:	(bad)
  4118a4:	add    BYTE PTR [rax],al
  4118a6:	add    BYTE PTR [rax],al
  4118a8:	(bad)  
  4118a9:	rex.XB
  4118aa:	add    BYTE PTR [r8],al
  4118ad:	add    BYTE PTR [rax],al
  4118af:	add    BYTE PTR [rax-0x3b],dh
  4118b2:	add    BYTE PTR [r8],al
  4118b5:	add    BYTE PTR [rax],al
  4118b7:	add    ch,dl
  4118b9:	rex.XB
  4118ba:	add    BYTE PTR [r8],al
  4118bd:	add    BYTE PTR [rax],al
  4118bf:	add    BYTE PTR [rax+0x41c5],dh
  4118c5:	add    BYTE PTR [rax],al
  4118c7:	add    ch,dl
  4118c9:	rex.XB
  4118ca:	add    BYTE PTR [r8],al
  4118cd:	add    BYTE PTR [rax],al
  4118cf:	add    al,al
  4118d1:	mov    BYTE PTR [rcx+0x0],0x0
  4118d5:	add    BYTE PTR [rax],al
  4118d7:	add    ch,dl
  4118d9:	rex.XB
  4118da:	add    BYTE PTR [r8],al
  4118dd:	add    BYTE PTR [rax],al
  4118df:	add    BYTE PTR [rax],bl
  4118e1:	mov    DWORD PTR [rcx+0x0],0x0
	...
  4118f0:	add    DWORD PTR [rax],eax
  4118f2:	add    BYTE PTR [rax],al
  4118f4:	add    BYTE PTR [rax],al
  4118f6:	add    BYTE PTR [rax],al
  4118f8:	add    bh,0x41
	...
  41190f:	add    BYTE PTR [rbp+0x43],cl
  411912:	add    BYTE PTR [r8],al
  411915:	add    BYTE PTR [rax],al
  411917:	add    BYTE PTR [rax+0x41c7],bh
	...
  41193d:	add    BYTE PTR [rax],al
  41193f:	add    BYTE PTR [rdx],al
  411941:	add    BYTE PTR [rax],al
  411943:	add    BYTE PTR [rax],al
  411945:	add    BYTE PTR [rax],al
  411947:	add    al,ah
  411949:	mov    DWORD PTR [rcx+0x0],0x0
	...
  411958:	add    DWORD PTR [rax],eax
  41195a:	add    BYTE PTR [rax],al
  41195c:	add    BYTE PTR [rax],al
  41195e:	add    BYTE PTR [rax],al
  411960:	add    al,cl
  411962:	add    BYTE PTR [r8],al
	...
  41197d:	add    BYTE PTR [rax],al
  41197f:	add    BYTE PTR [rbp+0x43],cl
  411982:	add    BYTE PTR [r8],al
  411985:	add    BYTE PTR [rax],al
  411987:	add    BYTE PTR [rax-0x38],bh
  41198a:	add    BYTE PTR [r8],al
  41198d:	add    BYTE PTR [rax],al
  41198f:	add    BYTE PTR [rbx+0x41c8],dh
	...
  41199d:	add    BYTE PTR [rax],al
  41199f:	add    BYTE PTR [rdx],al
  4119a1:	add    BYTE PTR [rax],al
  4119a3:	add    BYTE PTR [rax],al
  4119a5:	add    BYTE PTR [rax],al
  4119a7:	add    al,ah
  4119a9:	enter  0x41,0x0
	...
  4119b5:	add    BYTE PTR [rax],al
  4119b7:	add    BYTE PTR [rcx],al
  4119b9:	add    BYTE PTR [rax],al
  4119bb:	add    BYTE PTR [rax],al
  4119bd:	add    BYTE PTR [rax],al
  4119bf:	add    BYTE PTR [rax],dl
  4119c1:	leave  
  4119c2:	add    BYTE PTR [r8],al
	...
  4119fd:	add    BYTE PTR [rax],al
  4119ff:	add    BYTE PTR [rax+rbp*1],cl
  411a02:	rex.X add BYTE PTR [rax],al
  411a05:	add    BYTE PTR [rax],al
  411a07:	add    ch,dl
  411a09:	rex.XB
  411a0a:	add    BYTE PTR [r8],al
  411a0d:	add    BYTE PTR [rax],al
  411a0f:	add    BYTE PTR [rax-0x37],ch
  411a12:	add    BYTE PTR [r8],al
  411a15:	add    BYTE PTR [rax],al
  411a17:	add    ch,dl
  411a19:	rex.XB
  411a1a:	add    BYTE PTR [r8],al
  411a1d:	add    BYTE PTR [rax],al
  411a1f:	add    al,al
  411a21:	leave  
  411a22:	add    BYTE PTR [r8],al
  411a25:	add    BYTE PTR [rax],al
  411a27:	add    ch,dl
  411a29:	rex.XB
  411a2a:	add    BYTE PTR [r8],al
  411a2d:	add    BYTE PTR [rax],al
  411a2f:	add    BYTE PTR [rax],ah
  411a31:	retf   0x41
  411a34:	add    BYTE PTR [rax],al
  411a36:	add    BYTE PTR [rax],al
  411a38:	(bad)  
  411a39:	rex.XB
  411a3a:	add    BYTE PTR [r8],al
  411a3d:	add    BYTE PTR [rax],al
  411a3f:	add    BYTE PTR [rax-0x36],bh
  411a42:	add    BYTE PTR [r8],al
  411a45:	add    BYTE PTR [rax],al
  411a47:	add    ch,dl
  411a49:	rex.XB
  411a4a:	add    BYTE PTR [r8],al
  411a4d:	add    BYTE PTR [rax],al
  411a4f:	add    al,bh
  411a51:	retf   0x41
  411a54:	add    BYTE PTR [rax],al
  411a56:	add    BYTE PTR [rax],al
  411a58:	(bad)  
  411a59:	rex.XB
  411a5a:	add    BYTE PTR [r8],al
  411a5d:	add    BYTE PTR [rax],al
  411a5f:	add    BYTE PTR [rax+0x41cb],al
	...
  411a6d:	add    BYTE PTR [rax],al
  411a6f:	add    BYTE PTR [rcx],al
  411a71:	add    BYTE PTR [rax],al
  411a73:	add    BYTE PTR [rax],al
  411a75:	add    BYTE PTR [rax],al
  411a77:	add    al,ah
  411a79:	retf   
  411a7a:	add    BYTE PTR [r8],al
	...
  411a8d:	add    BYTE PTR [rax],al
  411a8f:	add    BYTE PTR [rbp+0x43],cl
  411a92:	add    BYTE PTR [r8],al
  411a95:	add    BYTE PTR [rax],al
  411a97:	add    BYTE PTR [rax],bh
  411a99:	int3   
  411a9a:	add    BYTE PTR [r8],al
	...
  411aad:	add    BYTE PTR [rax],al
  411aaf:	add    BYTE PTR [rcx],al
  411ab1:	add    BYTE PTR [rax],al
  411ab3:	add    BYTE PTR [rax],al
  411ab5:	add    BYTE PTR [rax],al
  411ab7:	add    BYTE PTR [rax+0x41cc],al
	...
  411acd:	add    BYTE PTR [rax],al
  411acf:	add    BYTE PTR [rbp+0x43],cl
  411ad2:	add    BYTE PTR [r8],al
  411ad5:	add    BYTE PTR [rax],al
  411ad7:	add    BYTE PTR [rax],ch
  411ad9:	int    0x41
	...
  411aef:	add    BYTE PTR [rcx],al
  411af1:	add    BYTE PTR [rax],al
  411af3:	add    BYTE PTR [rax],al
  411af5:	add    BYTE PTR [rax],al
  411af7:	add    BYTE PTR [rax+0x41cd],al
	...
  411b0d:	add    BYTE PTR [rax],al
  411b0f:	add    BYTE PTR [rbp+0x43],cl
  411b12:	add    BYTE PTR [r8],al
  411b15:	add    BYTE PTR [rax],al
  411b17:	add    al,bh
  411b19:	int    0x41
	...
  411b2f:	add    BYTE PTR [rcx],al
  411b31:	add    BYTE PTR [rax],al
  411b33:	add    BYTE PTR [rax],al
  411b35:	add    BYTE PTR [rax],al
  411b37:	add    BYTE PTR [rax-0x32],al
  411b3a:	add    BYTE PTR [r8],al
	...
  411b4d:	add    BYTE PTR [rax],al
  411b4f:	add    BYTE PTR [rsi-0x32],bh
  411b52:	add    BYTE PTR [r8],al
	...
  411b5d:	add    BYTE PTR [rax],al
  411b5f:	add    BYTE PTR [rbp+0x43],cl
  411b62:	add    BYTE PTR [r8],al
  411b65:	add    BYTE PTR [rax],al
  411b67:	add    BYTE PTR [rsi+0x41ce],dh
	...
  411b7d:	add    BYTE PTR [rax],al
  411b7f:	add    BYTE PTR [rdx],al
  411b81:	add    BYTE PTR [rax],al
  411b83:	add    BYTE PTR [rax],al
  411b85:	add    BYTE PTR [rax],al
  411b87:	add    al,ah
  411b89:	(bad)  
  411b8a:	add    BYTE PTR [r8],al
	...
  411b95:	add    BYTE PTR [rax],al
  411b97:	add    BYTE PTR [rcx],al
  411b99:	add    BYTE PTR [rax],al
  411b9b:	add    BYTE PTR [rax],al
  411b9d:	add    BYTE PTR [rax],al
  411b9f:	add    BYTE PTR [rax],ah
  411ba1:	iret   
  411ba2:	add    BYTE PTR [r8],al
	...
  411bad:	add    BYTE PTR [rax],al
  411baf:	add    BYTE PTR [rsi-0x32],bh
  411bb2:	add    BYTE PTR [r8],al
	...
  411bbd:	add    BYTE PTR [rax],al
  411bbf:	add    BYTE PTR [rbp+0x43],cl
  411bc2:	add    BYTE PTR [r8],al
  411bc5:	add    BYTE PTR [rax],al
  411bc7:	add    BYTE PTR [rax-0x31],bh
  411bca:	add    BYTE PTR [r8],al
	...
  411bdd:	add    BYTE PTR [rax],al
  411bdf:	add    BYTE PTR [rdx],al
	...
  411be9:	rol    BYTE PTR [rcx+0x0],1
	...
  411bf8:	add    DWORD PTR [rax],eax
  411bfa:	add    BYTE PTR [rax],al
  411bfc:	add    BYTE PTR [rax],al
  411bfe:	add    BYTE PTR [rax],al
  411c00:	rex rol BYTE PTR [rcx+0x0],1
	...
  411c20:	test   al,dl
  411c22:	add    BYTE PTR [r8],al
  411c25:	add    BYTE PTR [rax],al
  411c27:	add    BYTE PTR [rax+0x41d0],bl
  411c2d:	add    BYTE PTR [rax],al
  411c2f:	add    BYTE PTR [rax+rdx*8+0x41],ah
	...
  411c3e:	add    BYTE PTR [rax],al
  411c40:	rex.WRB
  411c41:	rex.XB
  411c42:	add    BYTE PTR [r8],al
  411c45:	add    BYTE PTR [rax],al
  411c47:	add    BYTE PTR [rax],al
  411c49:	rol    DWORD PTR [rcx+0x0],1
	...
  411c60:	add    al,BYTE PTR [rax]
  411c62:	add    BYTE PTR [rax],al
  411c64:	add    BYTE PTR [rax],al
  411c66:	add    BYTE PTR [rax],al
  411c68:	movabs al,ds:0x41d1
  411c71:	add    BYTE PTR [rax],al
  411c73:	add    BYTE PTR [rax],al
  411c75:	add    BYTE PTR [rax],al
  411c77:	add    BYTE PTR [rcx],al
  411c79:	add    BYTE PTR [rax],al
  411c7b:	add    BYTE PTR [rax],al
  411c7d:	add    BYTE PTR [rax],al
  411c7f:	add    al,al
  411c81:	rol    DWORD PTR [rcx+0x0],1
	...
  411ca0:	test   al,dl
  411ca2:	add    BYTE PTR [r8],al
  411ca5:	add    BYTE PTR [rax],al
  411ca7:	add    BYTE PTR [rax+0x41d0],bl
  411cad:	add    BYTE PTR [rax],al
  411caf:	add    BYTE PTR [rax+rdx*8+0x41],ah
	...
  411cbe:	add    BYTE PTR [rax],al
  411cc0:	rex.WRB
  411cc1:	rex.XB
  411cc2:	add    BYTE PTR [r8],al
  411cc5:	add    BYTE PTR [rax],al
  411cc7:	add    BYTE PTR [rsi-0x2e],bl
  411cca:	add    BYTE PTR [r8],al
	...
  411cdd:	add    BYTE PTR [rax],al
  411cdf:	add    BYTE PTR [rcx],al
  411ce1:	add    BYTE PTR [rax],al
  411ce3:	add    BYTE PTR [rax],al
  411ce5:	add    BYTE PTR [rax],al
  411ce7:	add    BYTE PTR [rcx-0x2e],ch
  411cea:	add    BYTE PTR [r8],al
	...
  411cfd:	add    BYTE PTR [rax],al
  411cff:	add    BYTE PTR [rbp+0x43],cl
  411d02:	add    BYTE PTR [r8],al
  411d05:	add    BYTE PTR [rax],al
  411d07:	add    BYTE PTR [rax+0x41d2],bh
  411d0d:	add    BYTE PTR [rax],al
  411d0f:	add    ah,dl
  411d11:	rol    BYTE PTR [rcx+0x0],cl
	...
  411d20:	add    al,BYTE PTR [rax]
  411d22:	add    BYTE PTR [rax],al
  411d24:	add    BYTE PTR [rax],al
  411d26:	add    BYTE PTR [rax],al
  411d28:	call   0x415eff
	...
  411d35:	add    BYTE PTR [rax],al
  411d37:	add    BYTE PTR [rcx],al
  411d39:	add    BYTE PTR [rax],al
  411d3b:	add    BYTE PTR [rax],al
  411d3d:	add    BYTE PTR [rax],al
  411d3f:	add    dh,dh
  411d41:	rol    BYTE PTR [rcx+0x0],cl
	...
  411d60:	or     al,0x28
  411d62:	rex.X add BYTE PTR [rax],al
  411d65:	add    BYTE PTR [rax],al
  411d67:	add    ch,dl
  411d69:	rex.XB
  411d6a:	add    BYTE PTR [r8],al
  411d6d:	add    BYTE PTR [rax],al
  411d6f:	add    BYTE PTR [rax],dl
  411d71:	rol    DWORD PTR [rcx+0x0],cl
  411d74:	add    BYTE PTR [rax],al
  411d76:	add    BYTE PTR [rax],al
  411d78:	(bad)  
  411d79:	rex.XB
  411d7a:	add    BYTE PTR [r8],al
  411d7d:	add    BYTE PTR [rax],al
  411d7f:	add    BYTE PTR [rax],bh
  411d81:	rol    DWORD PTR [rcx+0x0],cl
	...
  411d90:	rex.WRB
  411d91:	rex.XB
  411d92:	add    BYTE PTR [r8],al
  411d95:	add    BYTE PTR [rax],al
  411d97:	add    BYTE PTR [rax+0x41d3],cl
	...
  411dad:	add    BYTE PTR [rax],al
  411daf:	add    BYTE PTR [rcx],al
  411db1:	add    BYTE PTR [rax],al
  411db3:	add    BYTE PTR [rax],al
  411db5:	add    BYTE PTR [rax],al
  411db7:	add    BYTE PTR [rax-0x2c],al
  411dba:	add    BYTE PTR [r8],al
	...
  411dcd:	add    BYTE PTR [rax],al
  411dcf:	add    BYTE PTR [rsi+0x41d4],cl
	...
  411ddd:	add    BYTE PTR [rax],al
  411ddf:	add    BYTE PTR [rbp+0x43],cl
  411de2:	add    BYTE PTR [r8],al
  411de5:	add    BYTE PTR [rax],al
  411de7:	add    al,dl
  411de9:	(bad)  
  411dea:	add    BYTE PTR [r8],al
	...
  411dfd:	add    BYTE PTR [rax],al
  411dff:	add    BYTE PTR [rcx],al
  411e01:	add    BYTE PTR [rax],al
  411e03:	add    BYTE PTR [rax],al
  411e05:	add    BYTE PTR [rax],al
  411e07:	add    al,al
  411e09:	(bad)  
  411e0a:	add    BYTE PTR [r8],al
	...
  411e1d:	add    BYTE PTR [rax],al
  411e1f:	add    BYTE PTR [rsi+0x41d4],cl
	...
  411e2d:	add    BYTE PTR [rax],al
  411e2f:	add    BYTE PTR [rbp+0x43],cl
  411e32:	add    BYTE PTR [r8],al
  411e35:	add    BYTE PTR [rax],al
  411e37:	add    BYTE PTR [rax+0x41d6],ah
	...
  411e4d:	add    BYTE PTR [rax],al
  411e4f:	add    BYTE PTR [rcx],al
	...
  411e59:	fadd   DWORD PTR [rcx+0x0]
	...
  411e70:	mov    ss,esp
  411e72:	add    BYTE PTR [r8],al
	...
  411e7d:	add    BYTE PTR [rax],al
  411e7f:	add    BYTE PTR [rbp+0x43],cl
  411e82:	add    BYTE PTR [r8],al
  411e85:	add    BYTE PTR [rax],al
  411e87:	add    BYTE PTR [rax+0x41d8],ah
	...
  411e9d:	add    BYTE PTR [rax],al
  411e9f:	add    BYTE PTR [rcx],al
  411ea1:	add    BYTE PTR [rax],al
  411ea3:	add    BYTE PTR [rax],al
  411ea5:	add    BYTE PTR [rax],al
  411ea7:	add    BYTE PTR [rax-0x27],al
  411eaa:	add    BYTE PTR [r8],al
	...
  411ebd:	add    BYTE PTR [rax],al
  411ebf:	add    BYTE PTR [rsi+0x41d4],cl
	...
  411ecd:	add    BYTE PTR [rax],al
  411ecf:	add    BYTE PTR [rbp+0x43],cl
  411ed2:	add    BYTE PTR [r8],al
  411ed5:	add    BYTE PTR [rax],al
  411ed7:	add    al,ah
  411ed9:	fld    DWORD PTR [rcx+0x0]
	...
  411ef0:	add    DWORD PTR [rax],eax
  411ef2:	add    BYTE PTR [rax],al
  411ef4:	add    BYTE PTR [rax],al
  411ef6:	add    BYTE PTR [rax],al
  411ef8:	sbb    dl,0x41
	...
  411f0f:	add    BYTE PTR [rsi+0x41d4],cl
	...
  411f1d:	add    BYTE PTR [rax],al
  411f1f:	add    BYTE PTR [rbp+0x43],cl
  411f22:	add    BYTE PTR [r8],al
  411f25:	add    BYTE PTR [rax],al
  411f27:	add    BYTE PTR [rax],ah
  411f29:	fild   DWORD PTR [rcx+0x0]
	...
  411f40:	add    DWORD PTR [rax],eax
  411f42:	add    BYTE PTR [rax],al
  411f44:	add    BYTE PTR [rax],al
  411f46:	add    BYTE PTR [rax],al
  411f48:	add    ah,bl
  411f4a:	add    BYTE PTR [r8],al
	...
  411f5d:	add    BYTE PTR [rax],al
  411f5f:	add    BYTE PTR [rsi+0x41d4],cl
	...
  411f6d:	add    BYTE PTR [rax],al
  411f6f:	add    BYTE PTR [rbp+0x43],cl
  411f72:	add    BYTE PTR [r8],al
  411f75:	add    BYTE PTR [rax],al
  411f77:	add    al,ah
  411f79:	fadd   QWORD PTR [rcx+0x0]
	...
  411f90:	add    DWORD PTR [rax],eax
  411f92:	add    BYTE PTR [rax],al
  411f94:	add    BYTE PTR [rax],al
  411f96:	add    BYTE PTR [rax],al
  411f98:	rex fld QWORD PTR [rcx+0x0]
	...
  411fb0:	mov    ss,esp
  411fb2:	add    BYTE PTR [r8],al
	...
  411fbd:	add    BYTE PTR [rax],al
  411fbf:	add    BYTE PTR [rbp+0x43],cl
  411fc2:	add    BYTE PTR [r8],al
  411fc5:	add    BYTE PTR [rax],al
  411fc7:	add    al,al
  411fc9:	fld    QWORD PTR [rcx+0x0]
  411fcc:	add    BYTE PTR [rax],al
  411fce:	add    BYTE PTR [rax],al
  411fd0:	(bad)  
  411fd1:	fld    QWORD PTR [rcx+0x0]
	...
  411fe0:	add    DWORD PTR [rax],eax
  411fe2:	add    BYTE PTR [rax],al
  411fe4:	add    BYTE PTR [rax],al
  411fe6:	add    BYTE PTR [rax],al
  411fe8:	loopne 0x411fc7
  411fea:	add    BYTE PTR [r8],al
	...
  411ffd:	add    BYTE PTR [rax],al
  411fff:	add    BYTE PTR [rsi+0x41d4],cl
	...
  41200d:	add    BYTE PTR [rax],al
  41200f:	add    BYTE PTR [rbp+0x43],cl
  412012:	add    BYTE PTR [r8],al
  412015:	add    BYTE PTR [rax],al
  412017:	add    BYTE PTR [rax],bh
  412019:	fiadd  WORD PTR [rcx+0x0]
	...
  412030:	add    DWORD PTR [rax],eax
  412032:	add    BYTE PTR [rax],al
  412034:	add    BYTE PTR [rax],al
  412036:	add    BYTE PTR [rax],al
  412038:	sbb    dh,0x41
	...
  41204f:	add    BYTE PTR [rsi+0x41d4],cl
	...
  41205d:	add    BYTE PTR [rax],al
  41205f:	add    BYTE PTR [rcx+0x4169],ah
  412065:	add    BYTE PTR [rax],al
  412067:	add    al,ch
  412069:	fiadd  WORD PTR [rcx+0x0]
  41206c:	add    BYTE PTR [rax],al
  41206e:	add    BYTE PTR [rax],al
  412070:	adc    bh,bl
  412072:	add    BYTE PTR [r8],al
	...
  41207d:	add    BYTE PTR [rax],al
  41207f:	add    BYTE PTR [rdx],al
  412081:	add    BYTE PTR [rax],al
  412083:	add    BYTE PTR [rax],al
  412085:	add    BYTE PTR [rax],al
  412087:	add    BYTE PTR [rbx],bh
  412089:	fild   WORD PTR [rcx+0x0]
	...
  412098:	add    al,BYTE PTR [rax]
  41209a:	add    BYTE PTR [rax],al
  41209c:	add    BYTE PTR [rax],al
  41209e:	add    BYTE PTR [rax],al
  4120a0:	sub    eax,0x41df
	...
  4120ad:	add    BYTE PTR [rax],al
  4120af:	add    BYTE PTR [rsi+0x41d4],cl
	...
  4120bd:	add    BYTE PTR [rax],al
  4120bf:	add    BYTE PTR [rbp+0x43],cl
  4120c2:	add    BYTE PTR [r8],al
  4120c5:	add    BYTE PTR [rax],al
  4120c7:	add    ah,ch
  4120c9:	fild   WORD PTR [rcx+0x0]
  4120cc:	add    BYTE PTR [rax],al
  4120ce:	add    BYTE PTR [rax],al
  4120d0:	clc    
  4120d1:	fild   WORD PTR [rcx+0x0]
	...
  4120e0:	add    DWORD PTR [rax],eax
  4120e2:	add    BYTE PTR [rax],al
  4120e4:	add    BYTE PTR [rax],al
  4120e6:	add    BYTE PTR [rax],al
  4120e8:	xor    al,ah
  4120ea:	add    BYTE PTR [r8],al
	...
  4120fd:	add    BYTE PTR [rax],al
  4120ff:	add    BYTE PTR [rcx-0x20],al
  412102:	add    BYTE PTR [r8],al
	...
  41211d:	add    BYTE PTR [rax],al
  41211f:	add    BYTE PTR [rcx+0x4169],ah
  412125:	add    BYTE PTR [rax],al
  412127:	add    al,ch
  412129:	fiadd  WORD PTR [rcx+0x0]
  41212c:	add    BYTE PTR [rax],al
  41212e:	add    BYTE PTR [rax],al
  412130:	adc    bh,bl
  412132:	add    BYTE PTR [r8],al
	...
  41213d:	add    BYTE PTR [rax],al
  41213f:	add    BYTE PTR [rdx],al
  412141:	add    BYTE PTR [rax],al
  412143:	add    BYTE PTR [rax],al
  412145:	add    BYTE PTR [rax],al
  412147:	add    BYTE PTR [rax+0x41e0],al
	...
  412155:	add    BYTE PTR [rax],al
  412157:	add    BYTE PTR [rcx],al
  412159:	add    BYTE PTR [rax],al
  41215b:	add    BYTE PTR [rax],al
  41215d:	add    BYTE PTR [rax],al
  41215f:	add    BYTE PTR [rdx+0x41e0],dl
	...
  41216d:	add    BYTE PTR [rax],al
  41216f:	add    BYTE PTR [rax-0x64],dh
  412172:	add    BYTE PTR [r8],al
  412175:	add    BYTE PTR [rax],al
  412177:	add    ah,dl
  412179:	loopne 0x4121bc
	...
  41218f:	add    BYTE PTR [rcx],al
  412191:	add    BYTE PTR [rax],al
  412193:	add    BYTE PTR [rax],al
  412195:	add    BYTE PTR [rax],al
  412197:	add    al,ah
  412199:	loopne 0x4121dc
	...
  4121af:	add    cl,ch
  4121b1:	pushf  
  4121b2:	add    BYTE PTR [r8],al
  4121b5:	add    BYTE PTR [rax],al
  4121b7:	add    ah,dl
  4121b9:	loopne 0x4121fc
	...
  4121cf:	add    BYTE PTR [rcx],al
  4121d1:	add    BYTE PTR [rax],al
  4121d3:	add    BYTE PTR [rax],al
  4121d5:	add    BYTE PTR [rax],al
  4121d7:	add    BYTE PTR [rax-0x1f],al
  4121da:	add    BYTE PTR [r8],al
	...
  4121ed:	add    BYTE PTR [rax],al
  4121ef:	add    BYTE PTR [rbp+0x43],cl
  4121f2:	add    BYTE PTR [r8],al
  4121f5:	add    BYTE PTR [rax],al
  4121f7:	add    BYTE PTR [rax+0x41e1],al
	...
  41220d:	add    BYTE PTR [rax],al
  41220f:	add    BYTE PTR [rcx],al
  412211:	add    BYTE PTR [rax],al
  412213:	add    BYTE PTR [rax],al
  412215:	add    BYTE PTR [rax],al
  412217:	add    al,al
  412219:	loope  0x41225c
	...
  41222f:	add    BYTE PTR [rbp+0x43],cl
  412232:	add    BYTE PTR [r8],al
  412235:	add    BYTE PTR [rax],al
  412237:	add    BYTE PTR [rax],ch
  412239:	loop   0x41227c
	...
  41224f:	add    BYTE PTR [rcx],al
	...
  412259:	jrcxz  0x41229c
	...
  41226f:	add    BYTE PTR [rdx],ch
  412271:	jrcxz  0x4122b4
  412273:	add    BYTE PTR [rax],al
  412275:	add    BYTE PTR [rax],al
  412277:	add    BYTE PTR [rbx+riz*8],dh
  41227a:	add    BYTE PTR [r8],al
	...
  41228d:	add    BYTE PTR [rax],al
  41228f:	add    BYTE PTR [rbp+0x43],cl
  412292:	add    BYTE PTR [r8],al
  412295:	add    BYTE PTR [rax],al
  412297:	add    BYTE PTR [rcx-0x1d],ch
  41229a:	add    BYTE PTR [r8],al
	...
  4122bd:	add    BYTE PTR [rax],al
  4122bf:	add    BYTE PTR [rdx],al
  4122c1:	add    BYTE PTR [rax],al
  4122c3:	add    BYTE PTR [rax],al
  4122c5:	add    BYTE PTR [rax],al
  4122c7:	add    BYTE PTR [rdi-0x1d],ch
  4122ca:	add    BYTE PTR [r8],al
	...
  4122d5:	add    BYTE PTR [rax],al
  4122d7:	add    BYTE PTR [rcx],al
  4122d9:	add    BYTE PTR [rax],al
  4122db:	add    BYTE PTR [rax],al
  4122dd:	add    BYTE PTR [rax],al
  4122df:	add    BYTE PTR [rax+0x41e3],al
	...
  4122fd:	add    BYTE PTR [rax],al
  4122ff:	add    BYTE PTR [rax+rbp*1],cl
  412302:	rex.X add BYTE PTR [rax],al
  412305:	add    BYTE PTR [rax],al
  412307:	add    ch,dl
  412309:	rex.XB
  41230a:	add    BYTE PTR [r8],al
  41230d:	add    BYTE PTR [rax],al
  41230f:	add    BYTE PTR [rax],al
  412311:	in     al,0x41
  412313:	add    BYTE PTR [rax],al
  412315:	add    BYTE PTR [rax],al
  412317:	add    ch,dl
  412319:	rex.XB
  41231a:	add    BYTE PTR [r8],al
  41231d:	add    BYTE PTR [rax],al
  41231f:	add    BYTE PTR [rax],dh
  412321:	in     al,0x41
	...
  41232f:	add    BYTE PTR [rcx],al
  412331:	add    BYTE PTR [rax],al
  412333:	add    BYTE PTR [rax],al
  412335:	add    BYTE PTR [rax],al
  412337:	add    BYTE PTR [rax-0x1c],dh
  41233a:	add    BYTE PTR [r8],al
	...
  41234d:	add    BYTE PTR [rax],al
  41234f:	add    BYTE PTR [rcx+0x4169],ah
  412355:	add    BYTE PTR [rax],al
  412357:	add    al,al
  412359:	in     al,0x41
	...
  41237f:	add    BYTE PTR [rdx],al
  412381:	add    BYTE PTR [rax],al
  412383:	add    BYTE PTR [rax],al
  412385:	add    BYTE PTR [rax],al
  412387:	add    al,dh
  412389:	in     al,0x41
	...
  412397:	add    BYTE PTR [rcx],al
  412399:	add    BYTE PTR [rax],al
  41239b:	add    BYTE PTR [rax],al
  41239d:	add    BYTE PTR [rax],al
  41239f:	add    BYTE PTR [rax],dl
  4123a1:	in     eax,0x41
	...
  4123af:	add    BYTE PTR [rcx+0x4169],ah
  4123b5:	add    BYTE PTR [rax],al
  4123b7:	add    BYTE PTR [rbp-0x1b],al
  4123ba:	add    BYTE PTR [r8],al
	...
  4123dd:	add    BYTE PTR [rax],al
  4123df:	add    BYTE PTR [rdx],al
  4123e1:	add    BYTE PTR [rax],al
  4123e3:	add    BYTE PTR [rax],al
  4123e5:	add    BYTE PTR [rax],al
  4123e7:	add    BYTE PTR [rax-0x1b],ah
  4123ea:	add    BYTE PTR [r8],al
	...
  4123f5:	add    BYTE PTR [rax],al
  4123f7:	add    BYTE PTR [rcx],al
  4123f9:	add    BYTE PTR [rax],al
  4123fb:	add    BYTE PTR [rax],al
  4123fd:	add    BYTE PTR [rax],al
  4123ff:	add    BYTE PTR [rdx-0x1b],dh
  412402:	add    BYTE PTR [r8],al
	...
  41240d:	add    BYTE PTR [rax],al
  41240f:	add    BYTE PTR [rbp+0x43],cl
  412412:	add    BYTE PTR [r8],al
  412415:	add    BYTE PTR [rax],al
  412417:	add    BYTE PTR [rbp+riz*8+0x41],ah
	...
  41242e:	add    BYTE PTR [rax],al
  412430:	add    DWORD PTR [rax],eax
  412432:	add    BYTE PTR [rax],al
  412434:	add    BYTE PTR [rax],al
  412436:	add    BYTE PTR [rax],al
  412438:	lods   eax,DWORD PTR ds:[rsi]
  412439:	in     eax,0x41
	...
  41244f:	add    BYTE PTR [rbp+0x43],cl
  412452:	add    BYTE PTR [r8],al
  412455:	add    BYTE PTR [rax],al
  412457:	add    dh,bl
  412459:	in     eax,0x41
	...
  41246f:	add    BYTE PTR [rcx],al
	...
  412479:	out    0x41,al
	...
  41248f:	add    BYTE PTR [rbp+0x43],cl
  412492:	add    BYTE PTR [r8],al
  412495:	add    BYTE PTR [rax],al
  412497:	add    dl,cl
  412499:	(bad)  
  41249a:	add    BYTE PTR [r8],al
	...
  4124bd:	add    BYTE PTR [rax],al
  4124bf:	add    BYTE PTR [rdx],al
  4124c1:	add    BYTE PTR [rax],al
  4124c3:	add    BYTE PTR [rax],al
  4124c5:	add    BYTE PTR [rax],al
  4124c7:	add    BYTE PTR [rcx-0x1a],bh
  4124ca:	add    BYTE PTR [r8],al
	...
  4124d5:	add    BYTE PTR [rax],al
  4124d7:	add    BYTE PTR [rdx],al
  4124d9:	add    BYTE PTR [rax],al
  4124db:	add    BYTE PTR [rax],al
  4124dd:	add    BYTE PTR [rax],al
  4124df:	add    BYTE PTR [rsi+riz*8+0x41],ch
	...
  4124ef:	add    BYTE PTR [rdx],al
  4124f1:	add    BYTE PTR [rax],al
  4124f3:	add    BYTE PTR [rax],al
  4124f5:	add    BYTE PTR [rax],al
  4124f7:	add    BYTE PTR [rax-0x1a],dl
  4124fa:	add    BYTE PTR [r8],al
	...
  412505:	add    BYTE PTR [rax],al
  412507:	add    BYTE PTR [rcx],al
  412509:	add    BYTE PTR [rax],al
  41250b:	add    BYTE PTR [rax],al
  41250d:	add    BYTE PTR [rax],al
  41250f:	add    BYTE PTR [rax+0x41e6],ah
	...
  41251d:	add    BYTE PTR [rax],al
  41251f:	add    BYTE PTR [rbp+0x43],cl
  412522:	add    BYTE PTR [r8],al
  412525:	add    BYTE PTR [rax],al
  412527:	add    dl,cl
  412529:	(bad)  
  41252a:	add    BYTE PTR [r8],al
	...
  41253d:	add    BYTE PTR [rax],al
  41253f:	add    BYTE PTR [rdx],al
  412541:	add    BYTE PTR [rax],al
  412543:	add    BYTE PTR [rax],al
  412545:	add    BYTE PTR [rax],al
  412547:	add    bl,ah
  412549:	out    0x41,al
	...
  412557:	add    BYTE PTR [rcx],al
	...
  412561:	out    0x41,eax
	...
  41257f:	add    BYTE PTR [rbp+0x43],cl
  412582:	add    BYTE PTR [r8],al
  412585:	add    BYTE PTR [rax],al
  412587:	add    dl,cl
  412589:	(bad)  
  41258a:	add    BYTE PTR [r8],al
  41258d:	add    BYTE PTR [rax],al
  41258f:	add    BYTE PTR [rax+0x41e7],al
	...
  41259d:	add    BYTE PTR [rax],al
  41259f:	add    BYTE PTR [rdx],al
  4125a1:	add    BYTE PTR [rax],al
  4125a3:	add    BYTE PTR [rax],al
  4125a5:	add    BYTE PTR [rax],al
  4125a7:	add    BYTE PTR [rdx+0x41e7],ah
	...
  4125b5:	add    BYTE PTR [rax],al
  4125b7:	add    BYTE PTR [rcx],al
  4125b9:	add    BYTE PTR [rax],al
  4125bb:	add    BYTE PTR [rax],al
  4125bd:	add    BYTE PTR [rax],al
  4125bf:	add    BYTE PTR [rax+0x41e7],dh
	...
  4125cd:	add    BYTE PTR [rax],al
  4125cf:	add    BYTE PTR [rbp+0x43],cl
  4125d2:	add    BYTE PTR [r8],al
  4125d5:	add    BYTE PTR [rax],al
  4125d7:	add    BYTE PTR [rdx],ah
  4125d9:	call   0x41261f
	...
  4125ee:	add    BYTE PTR [rax],al
  4125f0:	add    DWORD PTR [rax],eax
  4125f2:	add    BYTE PTR [rax],al
  4125f4:	add    BYTE PTR [rax],al
  4125f6:	add    BYTE PTR [rax],al
  4125f8:	xor    al,ch
  4125fa:	add    BYTE PTR [r8],al
	...
  41260d:	add    BYTE PTR [rax],al
  41260f:	add    BYTE PTR [rbp+0x43],cl
  412612:	add    BYTE PTR [r8],al
  412615:	add    BYTE PTR [rax],al
  412617:	add    BYTE PTR [rcx-0x18],ah
  41261a:	add    BYTE PTR [r8],al
	...
  41262d:	add    BYTE PTR [rax],al
  41262f:	add    BYTE PTR [rcx],al
  412631:	add    BYTE PTR [rax],al
  412633:	add    BYTE PTR [rax],al
  412635:	add    BYTE PTR [rax],al
  412637:	add    BYTE PTR [rax+0x41e8],al
	...
  41264d:	add    BYTE PTR [rax],al
  41264f:	add    BYTE PTR [rbp+0x43],cl
  412652:	add    BYTE PTR [r8],al
  412655:	add    BYTE PTR [rax],al
  412657:	add    BYTE PTR [rax+0x41e8],ch
	...
  41266d:	add    BYTE PTR [rax],al
  41266f:	add    BYTE PTR [rcx],al
  412671:	add    BYTE PTR [rax],al
  412673:	add    BYTE PTR [rax],al
  412675:	add    BYTE PTR [rax],al
  412677:	add    al,ah
  412679:	call   0x4126bf
	...
  41268e:	add    BYTE PTR [rax],al
  412690:	rex.WRB
  412691:	rex.XB
  412692:	add    BYTE PTR [r8],al
  412695:	add    BYTE PTR [rax],al
  412697:	add    BYTE PTR [rax],bh
  412699:	jmp    0x4126df
	...
  4126ae:	add    BYTE PTR [rax],al
  4126b0:	add    DWORD PTR [rax],eax
  4126b2:	add    BYTE PTR [rax],al
  4126b4:	add    BYTE PTR [rax],al
  4126b6:	add    BYTE PTR [rax],al
  4126b8:	sub    cl,0x41
	...
  4126cf:	add    BYTE PTR [rbp+0x43],cl
  4126d2:	add    BYTE PTR [r8],al
  4126d5:	add    BYTE PTR [rax],al
  4126d7:	add    bh,cl
  4126d9:	jmp    0x41271f
	...
  4126ee:	add    BYTE PTR [rax],al
  4126f0:	add    DWORD PTR [rax],eax
  4126f2:	add    BYTE PTR [rax],al
  4126f4:	add    BYTE PTR [rax],al
  4126f6:	add    BYTE PTR [rax],al
  4126f8:	loopne 0x4126e3
  4126fa:	add    BYTE PTR [r8],al
	...
  41270d:	add    BYTE PTR [rax],al
  41270f:	add    BYTE PTR [rbp+0x43],cl
  412712:	add    BYTE PTR [r8],al
  412715:	add    BYTE PTR [rax],al
  412717:	add    BYTE PTR [rax],ch
  412719:	(bad)  
  41271a:	add    BYTE PTR [r8],al
	...
  41272d:	add    BYTE PTR [rax],al
  41272f:	add    BYTE PTR [rcx],al
  412731:	add    BYTE PTR [rax],al
  412733:	add    BYTE PTR [rax],al
  412735:	add    BYTE PTR [rax],al
  412737:	add    BYTE PTR [rax-0x16],ah
  41273a:	add    BYTE PTR [r8],al
	...
  41274d:	add    BYTE PTR [rax],al
  41274f:	add    BYTE PTR [rbp+0x43],cl
  412752:	add    BYTE PTR [r8],al
  412755:	add    BYTE PTR [rax],al
  412757:	add    BYTE PTR [rbx+0x41ea],bl
	...
  41276d:	add    BYTE PTR [rax],al
  41276f:	add    BYTE PTR [rcx],al
  412771:	add    BYTE PTR [rax],al
  412773:	add    BYTE PTR [rax],al
  412775:	add    BYTE PTR [rax],al
  412777:	add    al,al
  412779:	(bad)  
  41277a:	add    BYTE PTR [r8],al
	...
  41278d:	add    BYTE PTR [rax],al
  41278f:	add    BYTE PTR [rbp+0x43],cl
  412792:	add    BYTE PTR [r8],al
  412795:	add    BYTE PTR [rax],al
  412797:	add    ch,bh
  412799:	(bad)  
  41279a:	add    BYTE PTR [r8],al
	...
  4127ad:	add    BYTE PTR [rax],al
  4127af:	add    BYTE PTR [rcx],al
  4127b1:	add    BYTE PTR [rax],al
  4127b3:	add    BYTE PTR [rax],al
  4127b5:	add    BYTE PTR [rax],al
  4127b7:	add    BYTE PTR [rax],ah
  4127b9:	jmp    0x4127fc
	...
  4127cf:	add    BYTE PTR [rbp+0x43],cl
  4127d2:	add    BYTE PTR [r8],al
  4127d5:	add    BYTE PTR [rax],al
  4127d7:	add    BYTE PTR [rax-0x15],bh
  4127da:	add    BYTE PTR [r8],al
	...
  4127ed:	add    BYTE PTR [rax],al
  4127ef:	add    BYTE PTR [rcx],al
  4127f1:	add    BYTE PTR [rax],al
  4127f3:	add    BYTE PTR [rax],al
  4127f5:	add    BYTE PTR [rax],al
  4127f7:	add    BYTE PTR [rbx-0x15],bh
  4127fa:	add    BYTE PTR [r8],al
	...
  41280d:	add    BYTE PTR [rax],al
  41280f:	add    BYTE PTR [rbp+0x43],cl
  412812:	add    BYTE PTR [r8],al
  412815:	add    BYTE PTR [rax],al
  412817:	add    BYTE PTR [rax+0x41eb],ah
	...
  41282d:	add    BYTE PTR [rax],al
  41282f:	add    BYTE PTR [rcx],al
	...
  412839:	in     al,dx
  41283a:	add    BYTE PTR [r8],al
	...
  41284d:	add    BYTE PTR [rax],al
  41284f:	add    BYTE PTR [rbx-0x14],bl
  412852:	add    BYTE PTR [r8],al
	...
  41285d:	add    BYTE PTR [rax],al
  41285f:	add    BYTE PTR [rbp+0x43],cl
  412862:	add    BYTE PTR [r8],al
  412865:	add    BYTE PTR [rax],al
  412867:	add    BYTE PTR [rax+0x41ec],bl
	...
  41287d:	add    BYTE PTR [rax],al
  41287f:	add    BYTE PTR [rcx],al
	...
  412889:	in     eax,dx
  41288a:	add    BYTE PTR [r8],al
	...
  41289d:	add    BYTE PTR [rax],al
  41289f:	add    BYTE PTR [rbx-0x14],bl
  4128a2:	add    BYTE PTR [r8],al
	...
  4128ad:	add    BYTE PTR [rax],al
  4128af:	add    BYTE PTR [rbp+0x43],cl
  4128b2:	add    BYTE PTR [r8],al
  4128b5:	add    BYTE PTR [rax],al
  4128b7:	add    BYTE PTR [rax-0x13],bh
  4128ba:	add    BYTE PTR [r8],al
	...
  4128cd:	add    BYTE PTR [rax],al
  4128cf:	add    BYTE PTR [rcx],al
  4128d1:	add    BYTE PTR [rax],al
  4128d3:	add    BYTE PTR [rax],al
  4128d5:	add    BYTE PTR [rax],al
  4128d7:	add    BYTE PTR [rax-0x12],al
  4128da:	add    BYTE PTR [r8],al
	...
  4128ed:	add    BYTE PTR [rax],al
  4128ef:	add    BYTE PTR [rbx-0x14],bl
  4128f2:	add    BYTE PTR [r8],al
	...
  4128fd:	add    BYTE PTR [rax],al
  4128ff:	add    BYTE PTR [rbp+0x43],cl
  412902:	add    BYTE PTR [r8],al
  412905:	add    BYTE PTR [rax],al
  412907:	add    BYTE PTR [rax],cl
  412909:	out    dx,eax
  41290a:	add    BYTE PTR [r8],al
	...
  41291d:	add    BYTE PTR [rax],al
  41291f:	add    BYTE PTR [rcx],al
	...
  412929:	lock add BYTE PTR [r8],al
	...
  41293d:	add    BYTE PTR [rax],al
  41293f:	add    BYTE PTR [rbx-0x14],bl
  412942:	add    BYTE PTR [r8],al
	...
  41294d:	add    BYTE PTR [rax],al
  41294f:	add    BYTE PTR [rbp+0x43],cl
  412952:	add    BYTE PTR [r8],al
  412955:	add    BYTE PTR [rax],al
  412957:	add    BYTE PTR [rax],cl
  412959:	icebp  
  41295a:	add    BYTE PTR [r8],al
	...
  41296d:	add    BYTE PTR [rax],al
  41296f:	add    BYTE PTR [rcx],al
  412971:	add    BYTE PTR [rax],al
  412973:	add    BYTE PTR [rax],al
  412975:	add    BYTE PTR [rax],al
  412977:	add    BYTE PTR [rax-0xf],al
  41297a:	add    BYTE PTR [r8],al
	...
  41298d:	add    BYTE PTR [rax],al
  41298f:	add    BYTE PTR [rbx-0x14],bl
  412992:	add    BYTE PTR [r8],al
	...
  41299d:	add    BYTE PTR [rax],al
  41299f:	add    BYTE PTR [rbp+0x43],cl
  4129a2:	add    BYTE PTR [r8],al
  4129a5:	add    BYTE PTR [rax],al
  4129a7:	add    BYTE PTR [rcx+rsi*8+0x41],dh
	...
  4129be:	add    BYTE PTR [rax],al
  4129c0:	add    DWORD PTR [rax],eax
  4129c2:	add    BYTE PTR [rax],al
  4129c4:	add    BYTE PTR [rax],al
  4129c6:	add    BYTE PTR [rax],al
  4129c8:	shl    cl,0x41
	...
  4129df:	add    BYTE PTR [rbp+0x43],cl
  4129e2:	add    BYTE PTR [r8],al
  4129e5:	add    BYTE PTR [rax],al
  4129e7:	add    BYTE PTR [rax],cl
  4129e9:	repnz add BYTE PTR [r8],al
	...
  4129fd:	add    BYTE PTR [rax],al
  4129ff:	add    BYTE PTR [rcx],al
  412a01:	add    BYTE PTR [rax],al
  412a03:	add    BYTE PTR [rax],al
  412a05:	add    BYTE PTR [rax],al
  412a07:	add    BYTE PTR [rax-0xe],al
  412a0a:	add    BYTE PTR [r8],al
	...
  412a1d:	add    BYTE PTR [rax],al
  412a1f:	add    BYTE PTR [rbx-0x14],bl
  412a22:	add    BYTE PTR [r8],al
	...
  412a2d:	add    BYTE PTR [rax],al
  412a2f:	add    BYTE PTR [rbp+0x43],cl
  412a32:	add    BYTE PTR [r8],al
  412a35:	add    BYTE PTR [rax],al
  412a37:	add    BYTE PTR [rax+0x41f2],ah
	...
  412a4d:	add    BYTE PTR [rax],al
  412a4f:	add    BYTE PTR [rcx],al
  412a51:	add    BYTE PTR [rax],al
  412a53:	add    BYTE PTR [rax],al
  412a55:	add    BYTE PTR [rax],al
  412a57:	add    al,ah
  412a59:	repnz add BYTE PTR [r8],al
	...
  412a6d:	add    BYTE PTR [rax],al
  412a6f:	add    BYTE PTR [rbx-0x14],bl
  412a72:	add    BYTE PTR [r8],al
	...
  412a7d:	add    BYTE PTR [rax],al
  412a7f:	add    BYTE PTR [rbp+0x43],cl
  412a82:	add    BYTE PTR [r8],al
  412a85:	add    BYTE PTR [rax],al
  412a87:	add    BYTE PTR [rax],bh
  412a89:	repz add BYTE PTR [r8],al
	...
  412a9d:	add    BYTE PTR [rax],al
  412a9f:	add    BYTE PTR [rcx],al
  412aa1:	add    BYTE PTR [rax],al
  412aa3:	add    BYTE PTR [rax],al
  412aa5:	add    BYTE PTR [rax],al
  412aa7:	add    BYTE PTR [rax+0x41f3],al
	...
  412abd:	add    BYTE PTR [rax],al
  412abf:	add    BYTE PTR [rbx-0x14],bl
  412ac2:	add    BYTE PTR [r8],al
	...
  412acd:	add    BYTE PTR [rax],al
  412acf:	add    BYTE PTR [rbp+0x43],cl
  412ad2:	add    BYTE PTR [r8],al
  412ad5:	add    BYTE PTR [rax],al
  412ad7:	add    al,bl
  412ad9:	repz add BYTE PTR [r8],al
	...
  412aed:	add    BYTE PTR [rax],al
  412aef:	add    BYTE PTR [rcx],al
  412af1:	add    BYTE PTR [rax],al
  412af3:	add    BYTE PTR [rax],al
  412af5:	add    BYTE PTR [rax],al
  412af7:	add    cl,ah
  412af9:	repz add BYTE PTR [r8],al
	...
  412b0d:	add    BYTE PTR [rax],al
  412b0f:	add    BYTE PTR [rbx-0x14],bl
  412b12:	add    BYTE PTR [r8],al
	...
  412b1d:	add    BYTE PTR [rax],al
  412b1f:	add    BYTE PTR [rbp+0x43],cl
  412b22:	add    BYTE PTR [r8],al
  412b25:	add    BYTE PTR [rax],al
  412b27:	add    BYTE PTR [rax],dl
  412b29:	hlt    
  412b2a:	add    BYTE PTR [r8],al
	...
  412b3d:	add    BYTE PTR [rax],al
  412b3f:	add    BYTE PTR [rcx],al
  412b41:	add    BYTE PTR [rax],al
  412b43:	add    BYTE PTR [rax],al
  412b45:	add    BYTE PTR [rax],al
  412b47:	add    BYTE PTR [rax-0xc],al
  412b4a:	add    BYTE PTR [r8],al
	...
  412b5d:	add    BYTE PTR [rax],al
  412b5f:	add    BYTE PTR [rbx-0x14],bl
  412b62:	add    BYTE PTR [r8],al
	...
  412b6d:	add    BYTE PTR [rax],al
  412b6f:	add    BYTE PTR [rbp+0x43],cl
  412b72:	add    BYTE PTR [r8],al
  412b75:	add    BYTE PTR [rax],al
  412b77:	add    BYTE PTR [rax+0x4c],bl
  412b7a:	add    BYTE PTR [r8],al
	...
  412b9d:	add    BYTE PTR [rax],al
  412b9f:	add    BYTE PTR [rdx],al
  412ba1:	add    BYTE PTR [rax],al
  412ba3:	add    BYTE PTR [rax],al
  412ba5:	add    BYTE PTR [rax],al
  412ba7:	add    BYTE PTR [rax+0x41f4],dl
	...
  412bb5:	add    BYTE PTR [rax],al
  412bb7:	add    BYTE PTR [rcx],al
  412bb9:	add    BYTE PTR [rax],al
  412bbb:	add    BYTE PTR [rax],al
  412bbd:	add    BYTE PTR [rax],al
  412bbf:	add    BYTE PTR [rax+0x41f4],ah
	...
  412bcd:	add    BYTE PTR [rax],al
  412bcf:	add    BYTE PTR [rbx-0x14],bl
  412bd2:	add    BYTE PTR [r8],al
	...
  412bdd:	add    BYTE PTR [rax],al
  412bdf:	add    BYTE PTR [rbp+0x43],cl
  412be2:	add    BYTE PTR [r8],al
  412be5:	add    BYTE PTR [rax],al
  412be7:	add    BYTE PTR [rsi],dh
  412be9:	cmc    
  412bea:	add    BYTE PTR [r8],al
	...
  412bfd:	add    BYTE PTR [rax],al
  412bff:	add    BYTE PTR [rcx],al
  412c01:	add    BYTE PTR [rax],al
  412c03:	add    BYTE PTR [rax],al
  412c05:	add    BYTE PTR [rax],al
  412c07:	add    BYTE PTR [rax-0xb],ah
  412c0a:	add    BYTE PTR [r8],al
	...
  412c1d:	add    BYTE PTR [rax],al
  412c1f:	add    BYTE PTR [rbx-0x14],bl
  412c22:	add    BYTE PTR [r8],al
	...
  412c2d:	add    BYTE PTR [rax],al
  412c2f:	add    BYTE PTR [rbp+0x43],cl
  412c32:	add    BYTE PTR [r8],al
  412c35:	add    BYTE PTR [rax],al
  412c37:	add    BYTE PTR [rax+0x41f5],bl
	...
  412c4d:	add    BYTE PTR [rax],al
  412c4f:	add    BYTE PTR [rcx],al
  412c51:	add    BYTE PTR [rax],al
  412c53:	add    BYTE PTR [rax],al
  412c55:	add    BYTE PTR [rax],al
  412c57:	add    al,dl
  412c59:	cmc    
  412c5a:	add    BYTE PTR [r8],al
	...
  412c6d:	add    BYTE PTR [rax],al
  412c6f:	add    BYTE PTR [rbx-0x14],bl
  412c72:	add    BYTE PTR [r8],al
	...
  412c7d:	add    BYTE PTR [rax],al
  412c7f:	add    BYTE PTR [rbp+0x43],cl
  412c82:	add    BYTE PTR [r8],al
  412c85:	add    BYTE PTR [rax],al
  412c87:	add    al,cl
  412c89:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  412c8a:	add    BYTE PTR [r8],al
	...
  412c9d:	add    BYTE PTR [rax],al
  412c9f:	add    BYTE PTR [rcx],al
	...
  412ca9:	test   BYTE PTR [rcx+0x0],0x0
	...
  412cbd:	add    BYTE PTR [rax],al
  412cbf:	add    BYTE PTR [rbx-0x14],bl
  412cc2:	add    BYTE PTR [r8],al
	...
  412ccd:	add    BYTE PTR [rax],al
  412ccf:	add    BYTE PTR [rbp+0x43],cl
  412cd2:	add    BYTE PTR [r8],al
  412cd5:	add    BYTE PTR [rax],al
  412cd7:	add    dl,cl
  412cd9:	(bad)  
  412cda:	add    BYTE PTR [r8],al
	...
  412ced:	add    BYTE PTR [rax],al
  412cef:	add    BYTE PTR [rcx],al
  412cf1:	add    BYTE PTR [rax],al
  412cf3:	add    BYTE PTR [rax],al
  412cf5:	add    BYTE PTR [rax],al
  412cf7:	add    BYTE PTR [rax-0xa],al
  412cfa:	add    BYTE PTR [r8],al
	...
  412d0d:	add    BYTE PTR [rax],al
  412d0f:	add    BYTE PTR [rbx-0x14],bl
  412d12:	add    BYTE PTR [r8],al
	...
  412d1d:	add    BYTE PTR [rax],al
  412d1f:	add    BYTE PTR [rax+0x41f6],al
	...
  412d2d:	add    BYTE PTR [rax],al
  412d2f:	add    ah,dh
  412d31:	rex.RB
  412d32:	add    BYTE PTR [r8],al
	...
  412d3d:	add    BYTE PTR [rax],al
  412d3f:	add    BYTE PTR [rax+0x41f7],ch
	...
  412d4d:	add    BYTE PTR [rax],al
  412d4f:	add    ah,dh
  412d51:	rex.RB
  412d52:	add    BYTE PTR [r8],al
	...
  412d5d:	add    BYTE PTR [rax],al
  412d5f:	add    BYTE PTR [rax+0x4202],ch
	...
  412d6d:	add    BYTE PTR [rax],al
  412d6f:	add    ah,dh
  412d71:	rex.RB
  412d72:	add    BYTE PTR [r8],al
	...
  412d7d:	add    BYTE PTR [rax],al
  412d7f:	add    BYTE PTR [rax+0x3],al
  412d82:	rex.X add BYTE PTR [rax],al
	...
  412d8d:	add    BYTE PTR [rax],al
  412d8f:	add    ah,dh
  412d91:	rex.RB
  412d92:	add    BYTE PTR [r8],al
	...
  412d9d:	add    BYTE PTR [rax],al
  412d9f:	add    BYTE PTR [rax+0x4205],bl
	...
  412dad:	add    BYTE PTR [rax],al
  412daf:	add    BYTE PTR [rcx],al
  412db1:	add    BYTE PTR [rax],al
  412db3:	add    BYTE PTR [rax],al
  412db5:	add    BYTE PTR [rax],al
  412db7:	add    BYTE PTR [rax+0x7],al
  412dba:	rex.X add BYTE PTR [rax],al
	...
  412dcd:	add    BYTE PTR [rax],al
  412dcf:	add    BYTE PTR [rax+0x4207],dh
	...
  412ddd:	add    BYTE PTR [rax],al
  412ddf:	add    BYTE PTR [rbp+0x416d],ch
	...
  412ded:	add    BYTE PTR [rax],al
  412def:	add    BYTE PTR [rax],dh
  412df1:	or     BYTE PTR [rdx+0x0],al
	...
  412e00:	test   al,dl
  412e02:	add    BYTE PTR [r8],al
	...
  412e0d:	add    BYTE PTR [rax],al
  412e0f:	add    BYTE PTR [rax+0x420b],dl
	...
  412e1d:	add    BYTE PTR [rax],al
  412e1f:	add    BYTE PTR [rax+rdx*8+0x41],al
	...
  412e2e:	add    BYTE PTR [rax],al
  412e30:	fmul   DWORD PTR [rip+0x42]        # 0x412e78
	...
  412e3e:	add    BYTE PTR [rax],al
  412e40:	add    al,BYTE PTR [rax]
  412e42:	add    BYTE PTR [rax],al
  412e44:	add    BYTE PTR [rax],al
  412e46:	add    BYTE PTR [rax],al
  412e48:	(bad)  
  412e49:	adc    BYTE PTR [rdx+0x0],al
	...
  412e58:	add    al,BYTE PTR [rax]
  412e5a:	add    BYTE PTR [rax],al
  412e5c:	add    BYTE PTR [rax],al
  412e5e:	add    BYTE PTR [rax],al
  412e60:	adc    BYTE PTR [rax],dl
  412e62:	rex.X add BYTE PTR [rax],al
	...
  412e6d:	add    BYTE PTR [rax],al
  412e6f:	add    BYTE PTR [rdx],al
  412e71:	add    BYTE PTR [rax],al
  412e73:	add    BYTE PTR [rax],al
  412e75:	add    BYTE PTR [rax],al
  412e77:	add    BYTE PTR [rcx],al
  412e79:	adc    BYTE PTR [rdx+0x0],al
	...
  412e90:	test   al,dl
  412e92:	add    BYTE PTR [r8],al
	...
  412e9d:	add    BYTE PTR [rax],al
  412e9f:	add    BYTE PTR [rax+0x10],ah
  412ea2:	rex.X add BYTE PTR [rax],al
	...
  412ead:	add    BYTE PTR [rax],al
  412eaf:	add    BYTE PTR [rdx],al
  412eb1:	add    BYTE PTR [rax],al
  412eb3:	add    BYTE PTR [rax],al
  412eb5:	add    BYTE PTR [rax],al
  412eb7:	add    ch,dh
  412eb9:	and    al,BYTE PTR [rdx+0x0]
	...
  412ed0:	rex.B loopne 0x412f14
	...
  412edf:	add    BYTE PTR [rcx+0x4169],ah
  412ee5:	add    BYTE PTR [rax],al
  412ee7:	add    BYTE PTR [rsi],ah
  412ee9:	cdq    
  412eea:	add    BYTE PTR [r8],al
  412eed:	add    BYTE PTR [rax],al
  412eef:	add    BYTE PTR [rax+0x23],al
  412ef2:	rex.X add BYTE PTR [rax],al
	...
  412efd:	add    BYTE PTR [rax],al
  412eff:	add    BYTE PTR [rcx],al
  412f01:	add    BYTE PTR [rax],al
  412f03:	add    BYTE PTR [rax],al
  412f05:	add    BYTE PTR [rax],al
  412f07:	add    BYTE PTR [rax],dl
  412f09:	and    eax,0x42
	...
  412f1e:	add    BYTE PTR [rax],al
  412f20:	pop    rbx
  412f21:	in     al,dx
  412f22:	add    BYTE PTR [r8],al
	...
  412f3d:	add    BYTE PTR [rax],al
  412f3f:	add    BYTE PTR [rcx+0x4169],ah
  412f45:	add    BYTE PTR [rax],al
  412f47:	add    BYTE PTR [rsi],ah
  412f49:	cdq    
  412f4a:	add    BYTE PTR [r8],al
  412f4d:	add    BYTE PTR [rax],al
  412f4f:	add    BYTE PTR [rax+0x25],al
  412f52:	rex.X add BYTE PTR [rax],al
	...
  412f5d:	add    BYTE PTR [rax],al
  412f5f:	add    BYTE PTR [rcx],al
  412f61:	add    BYTE PTR [rax],al
  412f63:	add    BYTE PTR [rax],al
  412f65:	add    BYTE PTR [rax],al
  412f67:	add    al,ah
  412f69:	(bad)  
  412f6a:	rex.X add BYTE PTR [rax],al
	...
  412f7d:	add    BYTE PTR [rax],al
  412f7f:	add    BYTE PTR [rbx-0x14],bl
  412f82:	add    BYTE PTR [r8],al
	...
  412f8d:	add    BYTE PTR [rax],al
  412f8f:	add    bh,bh
  412f91:	(bad)  
  412f92:	(bad)  
  412f93:	(bad)  
  412f94:	(bad)  
  412f95:	(bad)  
  412f96:	(bad)  
  412f97:	inc    DWORD PTR [rax]
	...
  412fbd:	add    BYTE PTR [rax],al
  412fbf:	add    BYTE PTR [rdx+0x422a],cl
  412fc5:	add    BYTE PTR [rax],al
  412fc7:	add    BYTE PTR [rax],dl
  412fc9:	sub    DWORD PTR [rax+0x0],eax
  412fcc:	add    BYTE PTR [rax],al
  412fce:	add    BYTE PTR [rax],al
  412fd0:	xchg   edi,eax
  412fd1:	sub    al,BYTE PTR [rdx+0x0]
  412fd4:	add    BYTE PTR [rax],al
  412fd6:	add    BYTE PTR [rax],al
  412fd8:	add    BYTE PTR [rcx],ch
  412fda:	add    BYTE PTR [rax],al
	...
  412ffd:	add    BYTE PTR [rax],al
  412fff:	add    BYTE PTR [rbx],al
	...
  41300d:	add    BYTE PTR [rax],al
  41300f:	add    BYTE PTR [rax+0xf],ah
	...
  41301d:	add    BYTE PTR [rax],al
  41301f:	add    BYTE PTR [rbx],al
  413021:	(bad)  
  413022:	rex.X add BYTE PTR [rax],al
	...
  41302d:	add    BYTE PTR [rax],al
  41302f:	add    BYTE PTR [rax-0x53],cl
  413032:	add    BYTE PTR [rax],al
	...
  41303d:	add    BYTE PTR [rax],al
  41303f:	add    bh,bh
  413041:	(bad)  
  413042:	(bad)  
  413043:	(bad)  
  413044:	(bad)  
  413045:	(bad)  
  413046:	(bad)  
  413047:	inc    DWORD PTR [rax]
  413049:	add    BYTE PTR [rax],al
  41304b:	add    BYTE PTR [rax],al
  41304d:	add    BYTE PTR [rax],al
  41304f:	add    bh,bh
	...
  41305d:	add    BYTE PTR [rax],al
  41305f:	add    BYTE PTR [rdx],al
	...
  41306d:	add    BYTE PTR [rax],al
  41306f:	add    bh,bh
  413071:	(bad)  
  413072:	(bad)  
  413073:	inc    DWORD PTR [rax]
	...
  41307d:	add    BYTE PTR [rax],al
  41307f:	add    BYTE PTR [rax+0x40a5],dl
	...
  41308d:	add    BYTE PTR [rax],al
  41308f:	add    al,dl
  413091:	test   eax,0x40
  413096:	add    BYTE PTR [rax],al
  413098:	loopne 0x413043
  41309a:	add    BYTE PTR [rax],al
  41309d:	add    BYTE PTR [rax],al
  41309f:	add    BYTE PTR [rdx],dh
  4130a1:	movabs ds:0x2b992ddf,al
  4130aa:	add    BYTE PTR [rax],al
  4130ac:	add    BYTE PTR [rax],al
  4130ae:	add    BYTE PTR [rax],al
  4130b0:	int    0x5d
  4130b2:	and    dl,dl
  4130b4:	data16 (bad) 
  4130b6:	(bad)  
  4130b7:	inc    DWORD PTR [rax]
  4130b9:	add    BYTE PTR [rax],al
  4130bb:	add    BYTE PTR [rax],al
  4130bd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000414000 <.rdata>:
  414000:	and    eax,0x73252f73
  414005:	(bad)  
  414006:	add    BYTE PTR [rsi+0x69],ah
  414009:	js     0x414074
  41400b:	outs   dx,BYTE PTR ds:[rsi]
  41400c:	movsxd ebp,DWORD PTR [rdi]
  41400e:	je     0x414075
  414010:	jae    0x414086
  414012:	jae    0x414043
  414014:	imul   ebp,DWORD PTR [rsi+0x63],0x2f732500
  41401b:	and    eax,0x72450073
  414020:	jb     0x414091
  414022:	jb     0x414044
  414024:	and    eax,0x25282064
  414029:	jae    0x414054
  41402b:	and    BYTE PTR [rbx+0x72],ah
  41402e:	gs (bad) 
  414030:	je     0x41409b
  414032:	outs   dx,BYTE PTR ds:[rsi]
  414033:	and    BYTE PTR [eip+0x46000a73],ah        # 0x46414aad
  41403a:	imul   edi,DWORD PTR [rax+0x65],0x20203a64
  414041:	and    eax,0x77000a73
  414046:	add    BYTE PTR [rbp+0x72],ah
  414049:	jb     0x4140ba
  41404b:	jb     0x41406d
  41404d:	and    eax,0x25282064
  414052:	jae    0x41407d
  414054:	and    BYTE PTR [rbx+0x74],dh
  414057:	(bad)  
  414058:	je     0x414087
  41405a:	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
  414061:	add    BYTE PTR [rax],al
  414063:	add    BYTE PTR [rax],al
  414065:	add    BYTE PTR [rax],al
  414067:	add    BYTE PTR [rbp+0x72],ah
  41406a:	jb     0x4140db
  41406c:	jb     0x41408e
  41406e:	and    eax,0x25282064
  414073:	jae    0x41409e
  414075:	and    BYTE PTR [rdi+0x70],ch
  414078:	outs   dx,BYTE PTR gs:[rsi]
  41407a:	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
  414081:	outs   dx,WORD PTR ds:[rsi]
  414083:	jb     0x4140a5
  414085:	jb     0x4140ec
  414087:	(bad)  
  414088:	or     al,BYTE PTR fs:[rax]
  41408b:	jb     0x41408d
  41408d:	jno    0x414104
  41408f:	outs   dx,DWORD PTR ds:[rsi]
  414090:	je     0x4140f7
  414092:	and    BYTE PTR fs:[rcx+0x6e],ch
  414096:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  41409a:	add    BYTE PTR gs:[rdx+0x75],dh
  41409e:	outs   dx,BYTE PTR ds:[rsi]
  41409f:	pop    rdi
  4140a0:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4140a3:	jo     0x41410e
  4140a5:	ins    BYTE PTR es:[rdi],dx
  4140a6:	gs jae 0x4140a9
  4140a9:	jae    0x414110
  4140ab:	ins    BYTE PTR es:[rdi],dx
  4140ac:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  4140b1:	gs jae 0x414128
  4140b4:	add    BYTE PTR [rip+0x72450076],ch        # 0x72864130
  4140ba:	jb     0x41412b
  4140bc:	jb     0x4140de
  4140be:	and    eax,0x25282064
  4140c3:	jae    0x4140ee
  4140c5:	and    BYTE PTR [rdx+0x65],dh
  4140c8:	outs   dx,DWORD PTR ds:[rsi]
  4140c9:	jo     0x414130
  4140cb:	outs   dx,BYTE PTR ds:[rsi]
  4140cc:	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
  4140d3:	(bad)  
  4140d4:	jae    0x4140f6
  4140d6:	jae    0x41414c
  4140d8:	imul   ebp,DWORD PTR fs:[rsi+0xa],0x0
  4140e0:	imul   di,WORD PTR [rax+0x69],0x636e
  4140e6:	ins    BYTE PTR es:[rdi],dx
  4140e7:	and    BYTE PTR [rbp+0x52],al
  4140ea:	push   rdx
  4140eb:	rex.WRXB push r10
  4140ed:	cmp    ah,BYTE PTR [rax]
  4140ef:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
  4140f3:	and    BYTE PTR [rbp+0x61],ch
  4140f6:	outs   dx,BYTE PTR ds:[rsi]
  4140f7:	jns    0x414119
  4140f9:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4140fc:	ins    DWORD PTR es:[rdi],dx
  4140fd:	(bad)  
  4140fe:	outs   dx,BYTE PTR ds:[rsi]
  4140ff:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  414104:	and    BYTE PTR gs:[rcx+0x72],ah
  414108:	addr32 jne 0x414178
  41410b:	outs   dx,BYTE PTR gs:[rsi]
  41410d:	je     0x414182
  41410f:	or     al,BYTE PTR [rax]
  414111:	add    BYTE PTR [rax],al
  414113:	add    BYTE PTR [rax],al
  414115:	add    BYTE PTR [rax],al
  414117:	add    BYTE PTR [rsi+0x69],ah
  41411a:	js     0x414185
  41411c:	outs   dx,BYTE PTR ds:[rsi]
  41411d:	movsxd esp,DWORD PTR [rax]
  41411f:	jbe    0x414186
  414121:	jb     0x414185
  414123:	outs   dx,DWORD PTR ds:[rsi]
  414124:	jae    0x41418f
  414126:	je     0x4141a1
  414128:	cmp    ah,BYTE PTR [rax]
  41412a:	and    BYTE PTR [rbp+0x56],al
  41412d:	rex.RB push r10
  41412f:	pop    rcx
  414130:	push   rsp
  414131:	rex.W
  414132:	rex.WB
  414133:	rex.WRX
  414134:	rex.RXB or r8b,BYTE PTR [r8]
  414137:	data16 js 0x4141a3
  41413a:	outs   dx,BYTE PTR ds:[rsi]
  41413b:	movsxd eax,DWORD PTR [rax]
  41413d:	add    BYTE PTR [rax],al
  41413f:	add    BYTE PTR [rax-0x25],dh
  414142:	(bad)  
  414143:	inc    DWORD PTR [rdx-0x7d000125]
  414149:	(bad)  
  41414b:	inc    DWORD PTR [rdx+0x64fffedb]
  414151:	(bad)  
  414153:	call   QWORD PTR [rdx-0x25]
  414156:	(bad)  
  414157:	inc    DWORD PTR [rdx-0x7d000125]
  41415d:	(bad)  
  41415f:	inc    DWORD PTR [rdx-0x7d000125]
  414165:	(bad)  
  414167:	inc    DWORD PTR [rdx-0x7d000125]
  41416d:	(bad)  
  41416f:	inc    DWORD PTR [rdx-0x7d000125]
  414175:	(bad)  
  414177:	inc    DWORD PTR [rdx-0x7d000125]
  41417d:	(bad)  
  41417f:	inc    DWORD PTR [rdx-0x7d000125]
  414185:	(bad)  
  414187:	inc    DWORD PTR [rax-0x25]
  41418a:	(bad)  
  41418b:	jmp    QWORD PTR [rbx+rbx*8]
  41418e:	(bad)  
  41418f:	inc    DWORD PTR [rdx-0x7d000125]
  414195:	(bad)  
  414197:	inc    DWORD PTR [rdx-0x7d000125]
  41419d:	(bad)  
  41419f:	inc    DWORD PTR [rdx-0x7d000125]
  4141a5:	(bad)  
  4141a7:	inc    DWORD PTR [rdx-0x7d000125]
  4141ad:	(bad)  
  4141af:	inc    DWORD PTR [rdx-0x7d000125]
  4141b5:	(bad)  
  4141b7:	inc    DWORD PTR [rdx-0x7d000125]
  4141bd:	(bad)  
  4141bf:	push   QWORD PTR [rax-0x25]
  4141c2:	(bad)  
  4141c3:	inc    DWORD PTR [rdx-0x7d000125]
  4141c9:	(bad)  
  4141cb:	inc    DWORD PTR [rdx+0x64fffedb]
  4141d1:	(bad)  
  4141d3:	call   QWORD PTR [rdx-0x25]
  4141d6:	(bad)  
  4141d7:	inc    DWORD PTR [rdx-0x7d000125]
  4141dd:	(bad)  
  4141df:	inc    DWORD PTR [rdx-0x7d000125]
  4141e5:	(bad)  
  4141e7:	inc    DWORD PTR [rdx-0x7d000125]
  4141ed:	(bad)  
  4141ef:	inc    DWORD PTR [rdx-0x7d000125]
  4141f5:	(bad)  
  4141f7:	inc    DWORD PTR [rdx-0x7d000125]
  4141fd:	(bad)  
  4141ff:	inc    DWORD PTR [rdx-0x7d000125]
  414205:	(bad)  
  414207:	inc    DWORD PTR [rax-0x25]
  41420a:	(bad)  
  41420b:	jmp    QWORD PTR [rbx+rbx*8]
  41420e:	(bad)  
  41420f:	jmp    FWORD PTR [rsi]
  414211:	add    BYTE PTR [rax],al
  414213:	add    BYTE PTR [rax],al
  414215:	add    BYTE PTR [rax],al
  414217:	add    BYTE PTR [rbx+0x61],al
  41421a:	outs   dx,BYTE PTR ds:[rsi]
  41421b:	outs   dx,BYTE PTR ds:[rsi]
  41421c:	outs   dx,DWORD PTR ds:[rsi]
  41421d:	je     0x41423f
  41421f:	(bad)  
  414220:	movsxd esp,DWORD PTR [rbx+0x65]
  414223:	jae    0x414298
  414225:	and    BYTE PTR [rip+0x72662073],ah        # 0x72a7629e
  41422b:	outs   dx,DWORD PTR ds:[rsi]
  41422c:	ins    DWORD PTR es:[rdi],dx
  41422d:	and    BYTE PTR [rip+0x65090a73],ah        # 0x654a4ca6
  414233:	jb     0x4142a7
  414235:	outs   dx,DWORD PTR ds:[rsi]
  414236:	jb     0x414258
  414238:	and    eax,0x25282064
  41423d:	jae    0x414268
  41423f:	or     al,BYTE PTR [rax]
  414241:	and    eax,0x20756c36
  414246:	and    eax,0x7330352d
  41424b:	and    BYTE PTR [rax],ah
  41424d:	and    BYTE PTR [rip+0x70704100],cl        # 0x70b18353
  414253:	ins    BYTE PTR es:[rdi],dx
  414254:	jns    0x4142bf
  414256:	outs   dx,BYTE PTR ds:[rsi]
  414257:	and    BYTE PTR [eip+0x7334322d],ah        # 0x7375748b
  41425e:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  414262:	and    eax,0x20000a73
  414267:	and    eax,0x2720646c
  41426c:	and    eax,0x27202773
  414271:	and    eax,0x27202773
  414276:	and    eax,0x2773
  41427b:	add    BYTE PTR [rax],al
  41427d:	add    BYTE PTR [rax],al
  41427f:	add    BYTE PTR [rbp+0x72],ah
  414282:	jb     0x4142f3
  414284:	jb     0x4142a6
  414286:	and    eax,0x25282064
  41428b:	jae    0x4142b6
  41428d:	and    BYTE PTR [rdi+0x70],ch
  414290:	outs   dx,BYTE PTR gs:[rsi]
  414292:	imul   ebp,DWORD PTR [rsi+0x67],0x74756f20
  414299:	jo     0x414310
  41429b:	je     0x4142bd
  41429d:	sub    BYTE PTR [rip+0x66202973],ah        # 0x66616c16
  4142a3:	outs   dx,DWORD PTR ds:[rsi]
  4142a4:	jb     0x4142c6
  4142a6:	jb     0x41430d
  4142a8:	(bad)  
  4142a9:	or     al,BYTE PTR fs:[rax]
  4142ac:	push   rcx
  4142ad:	jne    0x41431e
  4142af:	je     0x414316
  4142b1:	and    BYTE PTR fs:[rcx+0x6e],ch
  4142b5:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  4142b9:	gs jae 0x4142dc
  4142bc:	imul   ebp,DWORD PTR [rsi+0x20],0xa7325
  4142c3:	and    eax,0x25202073
  4142c8:	jae    0x4142f9
  4142ca:	add    BYTE PTR [rax],ah
  4142cc:	and    BYTE PTR [rip+0x73252f73],ah        # 0x73667245
  4142d2:	(bad)  
  4142d3:	add    BYTE PTR [rdi],ch
  4142d5:	fs gs jbe 0x414308
  4142d9:	outs   dx,BYTE PTR ds:[rsi]
  4142da:	jne    0x414348
  4142dc:	ins    BYTE PTR es:[rdi],dx
  4142dd:	add    BYTE PTR [rax],al
  4142df:	add    BYTE PTR [rsi+0x6f],cl
  4142e2:	and    BYTE PTR [rsi+0x69],ah
  4142e5:	ins    BYTE PTR es:[rdi],dx
  4142e6:	and    BYTE PTR gs:[rsi+0x61],ch
  4142ea:	ins    DWORD PTR es:[rdi],dx
  4142eb:	gs jae 0x41430e
  4142ee:	ins    BYTE PTR es:[rdi],dx
  4142ef:	imul   esi,DWORD PTR [rbx+0x74],0x66206465
  4142f6:	outs   dx,DWORD PTR ds:[rsi]
  4142f7:	jb     0x414319
  4142f9:	imul   di,WORD PTR [rax+0x69],0x676e
  4142ff:	or     al,BYTE PTR [rax]
	...
  41431d:	add    BYTE PTR [rax],al
  41431f:	add    BYTE PTR [rax],ah
  414321:	and    eax,0x203e2073
  414326:	and    eax,0x3b205873
  41432b:	and    BYTE PTR [rdx+0x6d],dh
  41432e:	and    BYTE PTR [rip+0x73252066],ch        # 0x7366639a
  414334:	cmp    esp,DWORD PTR [rax]
  414336:	ins    DWORD PTR es:[rdi],dx
  414337:	jbe    0x414359
  414339:	sub    eax,0x73252066
  41433e:	pop    rax
  41433f:	and    BYTE PTR [rip+0x63650073],ah        # 0x63a643b8
  414345:	push   0x2527206f
  41434a:	jae    0x414373
  41434c:	add    BYTE PTR [rsi+0x6f],ah
  41434f:	jb     0x4143be
  414351:	(bad)  
  414352:	je     0x414354
  414354:	add    BYTE PTR [rax],al
  414356:	add    BYTE PTR [rax],al
  414358:	and    ebp,DWORD PTR [rcx+0x66]
  41435b:	outs   dx,BYTE PTR ds:[rsi]
  41435c:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  414362:	push   rbx
  414363:	push   rsp
  414364:	rex.R
  414365:	rex.XB pop r15
  414367:	pop    rdi
  414368:	or     ah,BYTE PTR [rip+0x65230a30]        # 0x65644d9e
  41436e:	outs   dx,BYTE PTR ds:[rsi]
  41436f:	imul   esp,DWORD PTR fs:[rsi+0x20],0x21202a2f
  414377:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  41437f:	pop    rdi
  414380:	pop    rdi
  414381:	push   rbx
  414382:	push   rsp
  414383:	rex.R
  414384:	rex.XB pop r15
  414386:	pop    rdi
  414387:	and    BYTE PTR [rdx],ch
  414389:	(bad)  
  41438a:	add    BYTE PTR [rax],al
  41438c:	add    BYTE PTR [rax],al
  41438e:	add    BYTE PTR [rax],al
  414390:	pop    rsi
  414391:	gs js  0x414408
  414394:	gs jb  0x414405
  414397:	and    BYTE PTR [rbx+0x68],ah
  41439a:	(bad)  
  41439b:	jb     0x4143bd
  41439d:	pop    rsp
  41439e:	sub    cl,BYTE PTR [rcx]
  4143a0:	jae    0x414412
  4143a2:	jb     0x41440d
  4143a4:	outs   dx,BYTE PTR ds:[rsi]
  4143a5:	je     0x41440d
  4143a7:	pop    rsp
  4143a8:	sub    BYTE PTR [rcx+rbp*1+0x3b],bl
  4143ac:	and    al,0x0
  4143ae:	add    BYTE PTR [rax],al
  4143b0:	pop    rax
  4143b1:	xor    DWORD PTR [rcx],esi
  4143b3:	(bad)  
  4143b4:	pop    rax
  4143b5:	ins    DWORD PTR es:[rdi],dx
  4143b6:	jne    0x4143e6
  4143b8:	push   0x31315800
  4143bd:	(bad)  
  4143be:	pop    rax
  4143bf:	ins    DWORD PTR es:[rdi],dx
  4143c0:	jne    0x4143f1
  4143c2:	pop    rax
  4143c3:	ins    DWORD PTR es:[rdi],dx
  4143c4:	jne    0x4143f4
  4143c6:	push   0x31780000
  4143cb:	xor    DWORD PTR [rdi+0x73],ebx
  4143ce:	jo     0x414442
  4143d0:	imul   ebp,DWORD PTR [rsi+0x74],0x652d0066
  4143d7:	add    BYTE PTR [rdi],ch
  4143d9:	push   rdi
  4143da:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x6c6f0974
  4143e2:	fs sub al,0x20
  4143e5:	outs   dx,BYTE PTR ds:[rsi]
  4143e6:	gs ja  0x414424
  4143e9:	(bad)  
  4143ea:	imul   ebx,DWORD PTR [rdx+rcx*1+0x23],0x65646669
  4143f2:	data16 and BYTE PTR [rdi+0x5f],bl
  4143f6:	movsxd esi,DWORD PTR [rax+0x6c]
  4143f9:	jne    0x41446e
  4143fb:	jo     0x414469
  4143fd:	jne    0x414472
  4143ff:	pop    rsp
  414400:	or     bl,BYTE PTR [rcx+rcx*1+0x57]
  414404:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x6c6f0974
  41440c:	fs sub al,0x20
  41440f:	movsxd ebx,DWORD PTR [rdi+0x6e]
  414412:	gs ja  0x414450
  414415:	pop    rsp
  414416:	or     ah,BYTE PTR [rbx]
  414418:	gs ins BYTE PTR es:[rdi],dx
  41441a:	jae    0x414481
  41441c:	or     al,BYTE PTR [rax]
  41441e:	(bad)  
  41441f:	push   rdi
  414420:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x6c6f0974
  414428:	fs sub al,0x20
  41442b:	outs   dx,BYTE PTR ds:[rsi]
  41442c:	gs ja  0x41446a
  41442f:	(bad)  
  414430:	(bad)  
  414431:	pop    rsp
  414432:	or     ah,BYTE PTR [rbx]
  414434:	outs   dx,BYTE PTR gs:[rsi]
  414436:	imul   esp,DWORD PTR fs:[rsi+0xa],0x572f7300
  41443e:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x656e2074
  414446:	ja     0x414474
  414448:	(bad)  
  414449:	push   rdi
  41444a:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x5f632074
  414452:	outs   dx,BYTE PTR ds:[rsi]
  414453:	gs ja  0x414482
  414456:	(bad)  
  414457:	add    BYTE PTR [edi+0x5f],bl
  41445b:	movsxd esi,DWORD PTR [rax+0x6c]
  41445e:	jne    0x4144d3
  414460:	jo     0x4144ce
  414462:	jne    0x4144d7
	...
  414470:	pop    rax
  414471:	ins    DWORD PTR es:[rdi],dx
  414472:	(bad)  
  414473:	push   rsp
  414474:	jb     0x4144d7
  414476:	jbe    0x4144dd
  414478:	jb     0x4144ed
  41447a:	(bad)  
  41447b:	ins    BYTE PTR es:[rdi],dx
  41447c:	cs push 0x31780000
  414482:	xor    DWORD PTR [rdi+0x6e],ebx
  414485:	gs ja  0x414488
  414488:	and    BYTE PTR [rbx+0x5f],ah
  41448b:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  41448f:	jae    0x4144ba
  414491:	add    BYTE PTR [rdi+0x5f],bl
  414494:	movsxd esi,DWORD PTR [rax+0x6c]
  414497:	jne    0x41450c
  414499:	jo     0x414507
  41449b:	jne    0x414510
  41449d:	add    BYTE PTR [rax],ah
  41449f:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4144a3:	jae    0x414501
  4144a5:	sub    DWORD PTR [rax],eax
	...
  4144af:	add    BYTE PTR [rax+0x6d],bl
  4144b2:	(bad)  
  4144b3:	rex.X (bad) 
  4144b5:	jae    0x41451c
  4144b7:	rex.XB ins BYTE PTR es:[rdi],dx
  4144b9:	(bad)  
  4144ba:	jae    0x41452f
  4144bc:	rex.WB
  4144bd:	cs push 0x0
	...
  4144cf:	add    BYTE PTR [rax+0x31],bh
  4144d2:	xor    DWORD PTR [rdi+0x63],ebx
  4144d5:	ins    BYTE PTR es:[rdi],dx
  4144d6:	(bad)  
  4144d7:	jae    0x41454c
  4144d9:	pop    rdi
  4144da:	jne    0x41454f
  4144dc:	(bad)  
  4144dd:	add    BYTE PTR gs:[ebx],ah
  4144e1:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  4144e8:	pop    rdi
  4144e9:	movsxd esi,DWORD PTR [rax+0x6c]
  4144ec:	jne    0x414561
  4144ee:	jo     0x41455c
  4144f0:	jne    0x414565
  4144f2:	or     ah,BYTE PTR [rip+0x635f6331]        # 0x63a0a829
  4144f8:	ins    BYTE PTR es:[rdi],dx
  4144f9:	(bad)  
  4144fa:	jae    0x41456f
  4144fc:	cmp    esp,DWORD PTR [rip+0x65230a32]        # 0x65644f34
  414502:	ins    BYTE PTR es:[rdi],dx
  414503:	jae    0x41456a
  414505:	or     ah,BYTE PTR [rip+0x616c6331]        # 0x61ada83c
  41450b:	jae    0x414580
  41450d:	cmp    esp,DWORD PTR [rip+0x65230a32]        # 0x65644f45
  414513:	outs   dx,BYTE PTR ds:[rsi]
  414514:	imul   esp,DWORD PTR fs:[rsi+0x0],0x70635f5f
  41451c:	ins    BYTE PTR es:[rdi],dx
  41451d:	jne    0x414592
  41451f:	jo     0x41458d
  414521:	jne    0x414596
	...
  41452f:	add    BYTE PTR [rsi+0x28],bl
  414532:	pop    rbx
  414533:	and    BYTE PTR [rcx],cl
  414535:	pop    rbp
  414536:	sub    ah,BYTE PTR [rbx+0x68]
  414539:	(bad)  
  41453a:	jb     0x41455c
  41453c:	pop    rsp
  41453d:	sub    ch,BYTE PTR [rcx]
  41453f:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  414543:	jae    0x414580
  414545:	sub    BYTE PTR [rsi],ch
  414547:	sub    ch,BYTE PTR [rcx]
  414549:	add    BYTE PTR [rax+0x31],bl
  41454c:	xor    DWORD PTR [rdi],ebp
  41454e:	push   rbx
  41454f:	push   0x506c6c65
  414554:	cs push 0x31780000
  41455a:	xor    DWORD PTR [rdi+0x63],ebx
  41455d:	ins    BYTE PTR es:[rdi],dx
  41455e:	(bad)  
  41455f:	jae    0x4145d4
  414561:	add    BYTE PTR [rax],al
  414563:	add    BYTE PTR [rax],al
  414565:	add    BYTE PTR [rax],al
  414567:	add    BYTE PTR [rbp+0x78],ah
  41456a:	je     0x4145d1
  41456c:	jb     0x4145dc
  41456e:	and    BYTE PTR [rcx+0x6e],ch
  414571:	je     0x414593
  414573:	and    BYTE PTR [rdi+0x72],dh
  414576:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x746e6928
  41457e:	sub    al,0x20
  414580:	movsxd ebp,DWORD PTR [rdi+0x6e]
  414583:	jae    0x4145f9
  414585:	and    BYTE PTR [rbx+0x68],ah
  414588:	(bad)  
  414589:	jb     0x4145b5
  41458b:	sub    al,0x20
  41458d:	jae    0x4145f8
  41458f:	jp     0x4145f6
  414591:	pop    rdi
  414592:	je     0x4145bd
  414594:	cmp    eax,DWORD PTR [rax]
  414596:	add    BYTE PTR [rax],al
  414598:	gs js  0x41460f
  41459b:	gs jb  0x41460c
  41459e:	pop    rbx
  41459f:	or     DWORD PTR [rax],esp
  4145a1:	pop    rbp
  4145a2:	sub    ebp,DWORD PTR [rcx+0x6e]
  4145a5:	je     0x414602
  4145a7:	or     DWORD PTR [rax],esp
  4145a9:	pop    rbp
  4145aa:	sub    esi,DWORD PTR [rdi+0x72]
  4145ad:	imul   esi,DWORD PTR [rbp+riz*2+0x5b],0x2a5d2009
  4145b5:	pop    rsp
  4145b6:	sub    BYTE PTR [rbx+0x9],bl
  4145b9:	and    BYTE PTR [rbp+0x2a],bl
  4145bc:	imul   ebp,DWORD PTR [rsi+0x74],0x5d20095b
  4145c3:	sub    ch,BYTE PTR [rbx+rbx*2]
  4145c6:	or     DWORD PTR [rax],esp
  4145c8:	pop    rbp
  4145c9:	sub    ah,BYTE PTR [rbx+0x68]
  4145cc:	(bad)  
  4145cd:	jb     0x41462a
  4145cf:	or     DWORD PTR [rax],esp
  4145d1:	pop    rbp
  4145d2:	sub    bl,BYTE PTR [rdx+rbp*1+0x5b]
  4145d6:	or     DWORD PTR [rax],esp
  4145d8:	pop    rbp
  4145d9:	sub    ch,BYTE PTR [rbx+rbx*2]
  4145dc:	or     DWORD PTR [rax],esp
  4145de:	pop    rbp
  4145df:	sub    dh,BYTE PTR [rbx+0x69]
  4145e2:	jp     0x414649
  4145e4:	pop    rdi
  4145e5:	je     0x414642
  4145e7:	or     DWORD PTR [rax],esp
  4145e9:	pop    rbp
  4145ea:	sub    bl,BYTE PTR [rcx+rbp*1+0x5b]
  4145ee:	or     DWORD PTR [rax],esp
  4145f0:	pop    rbp
  4145f1:	sub    bh,BYTE PTR [rbx]
  4145f3:	add    BYTE PTR [rdx],ch
  4145f5:	sub    eax,0x78762d2a
  4145fa:	ja     0x41466b
  4145fc:	jb     0x414669
  4145fe:	jae    0x41462a
  414600:	add    BYTE PTR [rcx+0x6f],ch
  414603:	imul   r12,QWORD PTR [rdx+0x2e],0x68
  41460b:	add    BYTE PTR [rax],al
  41460d:	add    BYTE PTR [rax],al
  41460f:	add    BYTE PTR [rsi+0x78],dh
  414612:	ja     0x414683
  414614:	jb     0x414681
  414616:	jae    0x414677
  414618:	ja     0x41468c
  41461a:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x736e6f63
  414622:	je     0x414624
  414624:	add    BYTE PTR [rax],al
  414626:	add    BYTE PTR [rax],al
  414628:	and    ebp,DWORD PTR [rcx+0x66]
  41462b:	outs   dx,BYTE PTR ds:[rsi]
  41462c:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  414632:	movsxd esp,DWORD PTR [ebx+0x5f]
  414636:	push   rsi
  414637:	rex.WRXB
  414638:	rex.WB
  414639:	rex.R
  41463a:	rex.RX push rbp
  41463c:	rex.WRX
  41463d:	rex.XB push r8
  41463f:	push   rsp
  414640:	push   rdx
  414641:	pop    rdi
  414642:	fs imul bp,WORD PTR gs:[rsi+0x65],0xa64
  41464a:	and    ebp,DWORD PTR [rcx+0x66]
  41464d:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  414653:	movsxd esi,DWORD PTR [rax+0x6c]
  414656:	jne    0x4146cb
  414658:	jo     0x4146c6
  41465a:	jne    0x4146cf
  41465c:	or     dh,BYTE PTR [rcx+rdi*2+0x70]
  414660:	gs fs data16 and BYTE PTR gs:[rsi+0x6f],dh
  414667:	imul   esp,DWORD PTR [rax+riz*1+0x28],0x675f5f2a
  41466f:	movsxd esp,DWORD PTR [rbx+0x5f]
  414672:	push   rsi
  414673:	rex.WRXB
  414674:	rex.WB
  414675:	rex.R
  414676:	rex.RX push rbp
  414678:	rex.WRX
  414679:	rex.XB push r8
  41467b:	push   rsp
  41467c:	push   rdx
  41467d:	sub    DWORD PTR [rax],esp
  41467f:	sub    BYTE PTR [rsi],ch
  414681:	cs sub DWORD PTR cs:[rbx],edi
  414685:	or     ah,BYTE PTR [rbx]
  414687:	gs ins BYTE PTR es:[rdi],dx
  414689:	jae    0x4146f0
  41468b:	or     dh,BYTE PTR [rcx+rdi*2+0x70]
  41468f:	gs fs data16 and BYTE PTR gs:[rsi+0x6f],dh
  414696:	imul   esp,DWORD PTR [rax+riz*1+0x28],0x675f5f2a
  41469e:	movsxd esp,DWORD PTR [rbx+0x5f]
  4146a1:	push   rsi
  4146a2:	rex.WRXB
  4146a3:	rex.WB
  4146a4:	rex.R
  4146a5:	rex.RX push rbp
  4146a7:	rex.WRX
  4146a8:	rex.XB push r8
  4146aa:	push   rsp
  4146ab:	push   rdx
  4146ac:	sub    DWORD PTR [rax],esp
  4146ae:	sub    BYTE PTR [rcx],ch
  4146b0:	cmp    ecx,DWORD PTR [rdx]
  4146b2:	and    esp,DWORD PTR [rbp+0x6e]
  4146b5:	imul   esp,DWORD PTR fs:[rsi+0xa],0x66656423
  4146bd:	imul   ebp,DWORD PTR [rsi+0x65],0x675f5f20
  4146c4:	movsxd esp,DWORD PTR [rbx+0x5f]
  4146c7:	push   rsi
  4146c8:	rex.WRXB
  4146c9:	rex.WB
  4146ca:	rex.R
  4146cb:	rex.RX push rbp
  4146cd:	rex.WRX
  4146ce:	rex.XB push r8
  4146d0:	push   rsp
  4146d1:	push   rdx
  4146d2:	pop    rdi
  4146d3:	fs imul bp,WORD PTR gs:[rsi+0x65],0xa64
  4146db:	and    esp,DWORD PTR [rbp+0x6e]
  4146de:	imul   esp,DWORD PTR fs:[rsi+0xa],0x66656423
  4146e6:	imul   ebp,DWORD PTR [rsi+0x65],0x494f5620
  4146ed:	rex.R
  4146ee:	rex.RX push rbp
  4146f0:	rex.WRX
  4146f1:	rex.XB push r8
  4146f3:	push   rsp
  4146f4:	push   rdx
  4146f5:	and    BYTE PTR [rdi+0x5f],bl
  4146f8:	movsxd esp,DWORD PTR [ebx+0x5f]
  4146fc:	push   rsi
  4146fd:	rex.WRXB
  4146fe:	rex.WB
  4146ff:	rex.R
  414700:	rex.RX push rbp
  414702:	rex.WRX
  414703:	rex.XB push r8
  414705:	push   rsp
  414706:	push   rdx
  414707:	add    BYTE PTR [rax],ah
  414709:	sub    eax,0x78762072
  41470e:	push   rdi
  41470f:	outs   dx,DWORD PTR ds:[rsi]
  414710:	jb     0x41477d
  414712:	jae    0x414742
  414714:	push   0x0
  414719:	add    BYTE PTR [rax],al
  41471b:	add    BYTE PTR [rax],al
  41471d:	add    BYTE PTR [rax],al
  41471f:	add    BYTE PTR [rbx],ah
  414721:	pop    rbx
  414722:	and    BYTE PTR [rcx],cl
  414724:	pop    rbp
  414725:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  414729:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  414730:	sub    edx,DWORD PTR [rsi+0x4f]
  414733:	rex.WB
  414734:	rex.R
  414735:	rex.RX push rbp
  414737:	rex.WRX
  414738:	rex.XB push r8
  41473a:	push   rsp
  41473b:	push   rdx
  41473c:	pop    rbx
  41473d:	and    BYTE PTR [rcx],cl
  41473f:	pop    rbp
  414740:	sub    al,BYTE PTR cs:[rax]
  414743:	je     0x4147ae
  414745:	ins    DWORD PTR es:[rdi],dx
  414746:	gs cs push 0x78760000
  41474d:	ja     0x4147be
  41474f:	jb     0x4147bc
  414751:	jae    0x4147b2
  414753:	je     0x4147be
  414755:	ins    DWORD PTR es:[rdi],dx
  414756:	add    BYTE PTR gs:[rbx],ah
  414759:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  414760:	and    BYTE PTR [rcx+riz*2],bh
  414763:	jb     0x4147c8
  414765:	push   0x2f2e2e2f
  41476a:	jb     0x4147d1
  41476c:	addr32 jae 0x41479d
  41476f:	push   0x3e
	...
  414780:	and    ebx,DWORD PTR [rbx+0x9]
  414783:	and    BYTE PTR [rbp+0x2a],bl
  414786:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  41478d:	pop    rbx
  41478e:	or     DWORD PTR [rax],esp
  414790:	pop    rbp
  414791:	sub    ebx,DWORD PTR [rbx+0x3c]
  414794:	and    bl,BYTE PTR [rbp+0x72]
  414797:	gs addr32 jae 0x4147c9
  41479b:	push   0x5d223e5b
  4147a0:	add    BYTE PTR [rsi+0x78],dh
  4147a3:	ja     0x414814
  4147a5:	jb     0x414812
  4147a7:	jae    0x414808
  4147a9:	jb     0x414810
  4147ab:	addr32 jae 0x4147ae
  4147ae:	add    BYTE PTR [rax],al
  4147b0:	(bad)  
  4147b1:	and    ebx,DWORD PTR [rbx+0x20]
  4147b4:	or     DWORD PTR [rbp+0x64],ebx
  4147b7:	imul   bp,WORD PTR gs:[rsi+0x65],0x205b
  4147be:	or     DWORD PTR [rbp+0x5b],ebx
  4147c1:	and    BYTE PTR [rcx],cl
  4147c3:	pop    rbp
  4147c4:	sub    bl,BYTE PTR [rdi+0x5f]
  4147c7:	rex.WB
  4147c8:	rex.WRX
  4147c9:	rex.XB jae 0x414840
  4147cc:	(bad)  
  4147cd:	je     0x414837
  4147cf:	(bad)  
  4147d0:	(bad)  
  4147d1:	pop    rsp
  4147d2:	or     ah,BYTE PTR [rbx]
  4147d4:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  4147db:	and    BYTE PTR [rsp+rsi*2],bh
  4147de:	jns    0x414850
  4147e0:	gs jae 0x414812
  4147e3:	jbe    0x41485d
  4147e5:	push   rsp
  4147e6:	jns    0x414858
  4147e8:	gs jae 0x41483a
  4147eb:	ins    BYTE PTR es:[rdi],dx
  4147ec:	fs cs push 0xa3e
	...
  4147ff:	add    BYTE PTR [rax],ah
  414801:	sub    eax,0x6022206e
  414806:	gs addr32 jb 0x41486f
  41480a:	jo     0x41482c
  41480c:	push   rbp
  41480d:	rex.WR
  41480e:	rex.WRXB
  41480f:	rex.WRX
  414810:	and    BYTE PTR [r14+r12*2],r12b
  414814:	imul   ebp,DWORD PTR [rbp+riz*2+0x60],0x22
  41481c:	add    BYTE PTR [rax],al
  41481e:	add    BYTE PTR [rax],al
  414820:	and    BYTE PTR [rip+0x6022206e],ch        # 0x60636894
  414826:	gs addr32 jb 0x41488f
  41482a:	jo     0x41484c
  41482c:	(bad)  
  41482d:	and    ebp,DWORD PTR [rcx+0x6e]
  414830:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  414834:	gs (bad) 
  414836:	and    BYTE PTR [rsi+riz*2],ah
  414839:	imul   ebp,DWORD PTR [rbp+riz*2+0x60],0x20000022
  414841:	sub    eax,0x79742072
  414846:	jo     0x4148ad
  414848:	jae    0x414879
  41484a:	jbe    0x4148c4
  41484c:	push   rsp
  41484d:	jns    0x4148bf
  41484f:	gs jae 0x4148a1
  414852:	ins    BYTE PTR es:[rdi],dx
  414853:	fs cs push 0x0
  41485a:	add    BYTE PTR [rax],al
  41485c:	add    BYTE PTR [rax],al
  41485e:	add    BYTE PTR [rax],al
  414860:	and    ebx,DWORD PTR [rbx+0x20]
  414863:	or     DWORD PTR [rbp+0x64],ebx
  414866:	imul   bp,WORD PTR gs:[rsi+0x65],0x205b
  41486d:	or     DWORD PTR [rbp+0x2b],ebx
  414870:	pop    rdi
  414871:	pop    rdi
  414872:	rex.WB
  414873:	rex.WRX
  414874:	rex.XB jae 0x4148eb
  414877:	(bad)  
  414878:	je     0x4148e2
  41487a:	add    BYTE PTR [rbx+0x79],dh
  41487d:	jae    0x4148ae
  41487f:	jae    0x4148f5
  414881:	(bad)  
  414882:	je     0x4148b2
  414884:	push   0x0
  414889:	add    BYTE PTR [rax],al
  41488b:	add    BYTE PTR [rax],al
  41488d:	add    BYTE PTR [rax],al
  41488f:	add    BYTE PTR [rsi+0x78],dh
  414892:	ja     0x414903
  414894:	jb     0x414901
  414896:	jae    0x4148f7
  414898:	outs   dx,BYTE PTR ds:[rsi]
  414899:	gs gs fs jae 0x4148fd
  41489e:	jbe    0x414918
  4148a0:	ja     0x414911
  4148a2:	jb     0x41490f
  4148a4:	jae    0x4148a6
  4148a6:	jne    0x414916
  4148a8:	jae    0x414913
  4148aa:	outs   dx,BYTE PTR ds:[esi]
  4148ac:	gs and BYTE PTR fs:[rcx+0x6e],ch
  4148b1:	je     0x4148d8
  4148b3:	xor    DWORD PTR [rax],eax
	...
  4148bd:	add    BYTE PTR [rax],al
  4148bf:	add    BYTE PTR [rbp+0x69],dh
  4148c2:	outs   dx,BYTE PTR ds:[rsi]
  4148c3:	je     0x414924
  4148c5:	je     0x4148ef
  4148c7:	pop    rbx
  4148c8:	and    BYTE PTR [rcx],cl
  4148ca:	pop    rbp
  4148cb:	sub    ebx,DWORD PTR [rdi+0x63]
  4148ce:	ins    BYTE PTR es:[rdi],dx
  4148cf:	outs   dx,DWORD PTR ds:[rsi]
  4148d0:	movsxd ebp,DWORD PTR [rbx+0x73]
  4148d3:	pop    rdi
  4148d4:	jo     0x41493b
  4148d6:	jb     0x414937
  4148d8:	jae    0x41493f
  4148da:	movsxd ebp,DWORD PTR [rcx]
  4148dc:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
  4148e0:	gs cs push 0x0
	...
  4148ef:	add    BYTE PTR [rsi+0x78],dh
  4148f2:	ja     0x414963
  4148f4:	jb     0x414961
  4148f6:	jae    0x414957
  4148f8:	outs   dx,BYTE PTR ds:[rsi]
  4148f9:	gs gs fs jae 0x41495d
  4148fe:	jbe    0x414978
  414900:	je     0x41497b
  414902:	jo     0x414969
  414904:	jae    0x414906
  414906:	add    BYTE PTR [rax],al
  414908:	and    eax,0x64230a30
  41490d:	imul   bp,WORD PTR gs:[rsi+0x65],0x6d20
  414914:	imul   esp,DWORD PTR [rcx+rbp*2+0x72],0x28
  414919:	imul   esi,DWORD PTR fs:[rdx+0x2c],0x2e2e2e20
  414921:	sub    DWORD PTR [rax],esp
  414923:	sub    BYTE PTR [rax],ch
  414925:	jbe    0x414996
  414927:	imul   esp,DWORD PTR [rcx+rbp*1+0x30],0x2323202c
  41492f:	pop    rdi
  414930:	pop    rdi
  414931:	push   rsi
  414932:	pop    r15
  414934:	push   r10
  414936:	rex.RXB push r11
  414938:	pop    rdi
  414939:	pop    rdi
  41493a:	sub    al,0x20
  41493c:	sub    BYTE PTR [rbp+0x6b],ch
  41493f:	imul   esi,DWORD PTR fs:[rdx+0x29],0x72696428
  414947:	sub    DWORD PTR [rcx],ebp
  414949:	or     al,BYTE PTR [rax]
  41494b:	add    BYTE PTR [rax],al
  41494d:	add    BYTE PTR [rax],al
  41494f:	add    BYTE PTR [rbp+0x78],ah
  414952:	je     0x4149b9
  414954:	jb     0x4149c4
  414956:	pop    rbx
  414957:	or     DWORD PTR [rax],esp
  414959:	pop    rbp
  41495a:	sub    edx,DWORD PTR [rbx+0x54]
  41495d:	push   r12
  41495f:	push   rbp
  414960:	push   rbx
  414961:	pop    rbx
  414962:	or     DWORD PTR [rax],esp
  414964:	pop    rbp
  414965:	sub    ebp,DWORD PTR [rbp+0x6b]
  414968:	imul   esi,DWORD PTR fs:[rdx+0x5b],0x2a5d2009
  414970:	pop    rsp
  414971:	sub    BYTE PTR [rbx+0x9],bl
  414974:	and    BYTE PTR [rbp+0x2a],bl
  414977:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41497a:	jae    0x4149f0
  41497c:	pop    rbx
  41497d:	or     DWORD PTR [rax],esp
  41497f:	pop    rbp
  414980:	sub    esp,DWORD PTR [rbx+0x68]
  414983:	(bad)  
  414984:	jb     0x4149e1
  414986:	or     DWORD PTR [rax],esp
  414988:	pop    rbp
  414989:	sub    bl,BYTE PTR [rdx+rbp*1+0x5b]
  41498d:	or     DWORD PTR [rax],esp
  41498f:	pop    rbp
  414990:	sub    ch,BYTE PTR [rax]
  414992:	jl     0x4149ef
  414994:	pop    rdi
  414995:	pop    rbx
  414996:	cmp    ah,BYTE PTR [rcx+0x6c]
  414999:	jo     0x414a03
  41499b:	(bad)  
  41499c:	cmp    bl,BYTE PTR [rbp+0x5d]
  41499f:	pop    rbx
  4149a0:	pop    rdi
  4149a1:	pop    rbx
  4149a2:	cmp    ah,BYTE PTR [rcx+0x6c]
  4149a5:	outs   dx,BYTE PTR ds:[rsi]
  4149a6:	jne    0x414a15
  4149a8:	cmp    bl,BYTE PTR [rbp+0x5d]
  4149ab:	sub    ch,BYTE PTR [rcx]
  4149ad:	pop    rsp
  4149ae:	sub    DWORD PTR [rbx+0x9],ebx
  4149b1:	and    BYTE PTR [rbp+0x2a],bl
  4149b4:	cmp    eax,DWORD PTR [rax]
  4149b6:	jae    0x414a31
  4149b8:	jae    0x4149e9
  4149ba:	jae    0x414a30
  4149bc:	(bad)  
  4149bd:	je     0x4149ed
  4149bf:	push   0x0
	...
  4149d0:	jbe    0x414a4a
  4149d2:	ja     0x414a43
  4149d4:	jb     0x414a41
  4149d6:	jae    0x414a37
  4149d8:	ins    DWORD PTR es:[rdi],dx
  4149d9:	imul   esp,DWORD PTR [rcx+rbp*2+0x72],0x5f
  4149de:	ins    DWORD PTR es:[rdi],dx
  4149df:	(bad)  
  4149e0:	movsxd esi,DWORD PTR [rdx+0x6f]
  4149e3:	add    BYTE PTR [rax],al
  4149e5:	add    BYTE PTR [rax],al
  4149e7:	add    BYTE PTR [rip+0x64230a30],ah        # 0x6464541d
  4149ed:	imul   bp,WORD PTR gs:[rsi+0x65],0x6920
  4149f4:	outs   dx,DWORD PTR ds:[rsi]
  4149f5:	movsxd esi,DWORD PTR [rsp+rbp*2+0x28]
  4149f9:	data16 fs sub al,0x20
  4149fd:	data16 jne 0x414a6e
  414a00:	movsxd ebp,DWORD PTR [rax+riz*1]
  414a03:	(bad)  
  414a04:	jb     0x414a6d
  414a06:	sub    DWORD PTR [rax],esp
  414a08:	sub    BYTE PTR [rcx+0x6f],ch
  414a0b:	movsxd esi,DWORD PTR [rsp+rbp*2+0x29]
  414a0f:	sub    BYTE PTR [rsi+0x64],ah
  414a12:	sub    al,0x20
  414a14:	data16 jne 0x414a85
  414a17:	movsxd ebp,DWORD PTR [rax+riz*1]
  414a1a:	sub    BYTE PTR [rcx+0x6e],ch
  414a1d:	je     0x414a48
  414a1f:	sub    BYTE PTR [rcx+0x72],ah
  414a22:	sub    DWORD PTR [ecx],ebp
  414a25:	or     al,BYTE PTR [rax]
  414a27:	add    BYTE PTR [rbp+0x78],ah
  414a2a:	je     0x414a91
  414a2c:	jb     0x414a9c
  414a2e:	pop    rbx
  414a2f:	or     DWORD PTR [rax],esp
  414a31:	pop    rbp
  414a32:	sub    ebp,DWORD PTR [rcx+0x6e]
  414a35:	je     0x414a92
  414a37:	or     DWORD PTR [rax],esp
  414a39:	pop    rbp
  414a3a:	sub    ebp,DWORD PTR [rcx+0x6f]
  414a3d:	movsxd esi,DWORD PTR [rsp+rbp*2+0x5b]
  414a41:	or     DWORD PTR [rax],esp
  414a43:	pop    rbp
  414a44:	sub    bl,BYTE PTR [rax+rbp*1+0x5b]
  414a48:	or     DWORD PTR [rax],esp
  414a4a:	sub    al,0x5b
  414a4c:	cmp    ah,BYTE PTR [rcx+0x6c]
  414a4f:	outs   dx,BYTE PTR ds:[rsi]
  414a50:	jne    0x414abf
  414a52:	cmp    bl,BYTE PTR [rbp+0x5d]
  414a55:	sub    bl,BYTE PTR [rcx+rbp*1+0x3b]
  414a59:	add    BYTE PTR [rcx+0x6f],ch
  414a5c:	imul   r12,QWORD PTR [rdx+0x2e],0x68
	...
  414a70:	jbe    0x414aea
  414a72:	ja     0x414ae3
  414a74:	jb     0x414ae1
  414a76:	jae    0x414ad7
  414a78:	imul   ebp,DWORD PTR [rdi+0x63],0x6d5f6c74
  414a7f:	(bad)  
  414a80:	movsxd esi,DWORD PTR [rdx+0x6f]
  414a83:	add    BYTE PTR [rax],al
  414a85:	add    BYTE PTR [rax],al
  414a87:	add    BYTE PTR [rbx+0x2f],dh
  414a8a:	and    ebp,DWORD PTR [rcx+0x66]
  414a8d:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  414a93:	rex.RXB
  414a94:	rex.WRX push rbp
  414a96:	rex.XB pop r15
  414a98:	push   rsp
  414a99:	pop    rcx
  414a9a:	push   rax
  414a9b:	rex.RB
  414a9c:	rex.WRXB
  414a9d:	rex.RX pop rdi
  414a9f:	rex.RX
  414aa0:	rex.RB
  414aa1:	push   r12
  414aa3:	push   rbp
  414aa4:	push   rdx
  414aa5:	rex.RB pop r15
  414aa7:	rex.X push rdx
  414aa9:	rex.WRXB
  414aaa:	rex.WXB
  414aab:	rex.RB
  414aac:	rex.WRX pop rdi
  414aae:	push   rbp
  414aaf:	push   rbx
  414ab0:	rex.RB pop r15
  414ab2:	rex.R
  414ab3:	rex.RB
  414ab4:	rex.RX
  414ab5:	push   r13
  414ab7:	rex.WR push rsp
  414ab9:	pop    rdi
  414aba:	push   rbp
  414abb:	rex.WRX push rsp
  414abd:	rex.WB
  414abe:	rex.WR pop rdi
  414ac0:	rex.RX
  414ac1:	rex.WB pop r8
  414ac3:	rex.RB
  414ac4:	rex.R pop rdi
  414ac6:	pop    rdi
  414ac7:	(bad)  
  414ac8:	and    ebp,DWORD PTR [rcx+0x66]
  414acb:	and    BYTE PTR [rcx],dh
  414acd:	(bad)  
  414ace:	add    BYTE PTR [rax],al
  414ad0:	(bad)  
  414ad1:	pop    rbx
  414ad2:	and    BYTE PTR [rcx],cl
  414ad4:	pop    rbp
  414ad5:	jae    0x414b40
  414ad7:	jp     0x414b3e
  414ad9:	pop    rdi
  414ada:	je     0x414b0b
  414adc:	imul   ebx,DWORD PTR [rdx+rcx*1+0x23],0x646e6669
  414ae4:	data16 and BYTE PTR gs:[rdi+0x47],bl
  414ae9:	rex.XB
  414aea:	rex.XB pop r15
  414aec:	push   rbx
  414aed:	rex.WB pop r10
  414aef:	rex.RB pop r15
  414af1:	push   rsp
  414af2:	pop    rsp
  414af3:	or     ah,BYTE PTR [rbx]
  414af5:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  414afd:	rex.RXB
  414afe:	rex.XB
  414aff:	rex.XB pop r15
  414b01:	push   rbx
  414b02:	rex.WB pop r10
  414b04:	rex.RB pop r15
  414b06:	push   rsp
  414b07:	or     al,BYTE PTR [rax]
  414b09:	(bad)  
  414b0a:	pop    rbx
  414b0b:	and    BYTE PTR [rcx],cl
  414b0d:	pop    rbp
  414b0e:	jae    0x414b79
  414b10:	jp     0x414b77
  414b12:	pop    rdi
  414b13:	je     0x414b44
  414b15:	(bad)  
  414b16:	pop    rsp
  414b17:	or     ah,BYTE PTR [rbx]
  414b19:	outs   dx,BYTE PTR gs:[rsi]
  414b1b:	imul   esp,DWORD PTR fs:[rsi+0xa],0x205b2f00
  414b23:	or     DWORD PTR [rbp+0x70],ebx
  414b26:	je     0x414b9a
  414b28:	imul   esp,DWORD PTR fs:[rsi+0x66],0x692f745f
  414b30:	pop    rsp
  414b31:	or     ah,BYTE PTR [rbx]
  414b33:	imul   esp,DWORD PTR [rsi+0x6e],0x20666564
  414b3a:	pop    rdi
  414b3b:	rex.RXB
  414b3c:	rex.XB
  414b3d:	rex.XB pop r15
  414b3f:	push   rax
  414b40:	push   rsp
  414b41:	push   rdx
  414b42:	rex.R
  414b43:	rex.WB
  414b44:	rex.RX
  414b45:	rex.RX pop rdi
  414b47:	push   rsp
  414b48:	pop    rsp
  414b49:	or     ah,BYTE PTR [rbx]
  414b4b:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  414b53:	rex.RXB
  414b54:	rex.XB
  414b55:	rex.XB pop r15
  414b57:	push   rax
  414b58:	push   rsp
  414b59:	push   rdx
  414b5a:	rex.R
  414b5b:	rex.WB
  414b5c:	rex.RX
  414b5d:	rex.RX pop rdi
  414b5f:	push   rsp
  414b60:	or     al,BYTE PTR [rax]
  414b62:	(bad)  
  414b63:	pop    rbx
  414b64:	and    BYTE PTR [rcx],cl
  414b66:	pop    rbp
  414b67:	jo     0x414bdd
  414b69:	jb     0x414bcf
  414b6b:	imul   esp,DWORD PTR [rsi+0x66],0x612f745f
  414b72:	pop    rsp
  414b73:	or     ah,BYTE PTR [rbx]
  414b75:	outs   dx,BYTE PTR gs:[rsi]
  414b77:	imul   esp,DWORD PTR fs:[rsi+0xa],0x0
  414b7f:	add    BYTE PTR [rdi],ch
  414b81:	pop    rbx
  414b82:	and    BYTE PTR [rcx],cl
  414b84:	pop    rbp
  414b85:	ja     0x414bea
  414b87:	push   0x745f7261
  414b8c:	(bad)  
  414b8d:	imul   ebx,DWORD PTR [rdx+rcx*1+0x23],0x646e6669
  414b95:	data16 and BYTE PTR gs:[rdi+0x47],bl
  414b9a:	rex.XB
  414b9b:	rex.XB pop r15
  414b9d:	push   rdi
  414b9e:	rex.XB
  414b9f:	rex.W
  414ba0:	push   r10
  414ba2:	pop    rdi
  414ba3:	push   rsp
  414ba4:	pop    rsp
  414ba5:	or     ah,BYTE PTR [rbx]
  414ba7:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  414baf:	rex.RXB
  414bb0:	rex.XB
  414bb1:	rex.XB pop r15
  414bb3:	push   rdi
  414bb4:	rex.XB
  414bb5:	rex.W
  414bb6:	push   r10
  414bb8:	pop    rdi
  414bb9:	push   rsp
  414bba:	or     al,BYTE PTR [rax]
  414bbc:	(bad)  
  414bbd:	pop    rbx
  414bbe:	and    BYTE PTR [rcx],cl
  414bc0:	pop    rbp
  414bc1:	ja     0x414c26
  414bc3:	push   0x745f7261
  414bc8:	(bad)  
  414bc9:	(bad)  
  414bca:	pop    rsp
  414bcb:	or     ah,BYTE PTR [rbx]
  414bcd:	outs   dx,BYTE PTR gs:[rsi]
  414bcf:	imul   esp,DWORD PTR fs:[rsi+0xa],0x0
	...
  414bdf:	add    BYTE PTR [rdi+0x5f],bl
  414be2:	rex.RXB
  414be3:	rex.WRX push rbp
  414be5:	rex.XB pop r15
  414be7:	push   rsp
  414be8:	pop    rcx
  414be9:	push   rax
  414bea:	rex.RB
  414beb:	rex.WRXB
  414bec:	rex.RX pop rdi
  414bee:	rex.RX
  414bef:	rex.RB
  414bf0:	push   r12
  414bf2:	push   rbp
  414bf3:	push   rdx
  414bf4:	rex.RB pop r15
  414bf6:	rex.X push rdx
  414bf8:	rex.WRXB
  414bf9:	rex.WXB
  414bfa:	rex.RB
  414bfb:	rex.WRX pop rdi
  414bfd:	push   rbp
  414bfe:	push   rbx
  414bff:	rex.RB pop r15
  414c01:	rex.R
  414c02:	rex.RB
  414c03:	rex.RX
  414c04:	push   r13
  414c06:	rex.WR push rsp
  414c08:	pop    rdi
  414c09:	push   rbp
  414c0a:	rex.WRX push rsp
  414c0c:	rex.WB
  414c0d:	rex.WR pop rdi
  414c0f:	rex.RX
  414c10:	rex.WB pop r8
  414c12:	rex.RB
  414c13:	rex.R pop rdi
  414c15:	pop    rdi
	...
  414c1e:	add    BYTE PTR [rax],al
  414c20:	je     0x414c9b
  414c22:	jo     0x414c89
  414c24:	jae    0x414c55
  414c26:	jbe    0x414ca0
  414c28:	push   rsp
  414c29:	jns    0x414c9b
  414c2b:	gs jae 0x414c70
  414c2e:	(bad)  
  414c2f:	jae    0x414c96
  414c31:	cs push 0x0
	...
  414c3f:	add    BYTE PTR [rsi+0x78],dh
  414c42:	ja     0x414cb3
  414c44:	jb     0x414cb1
  414c46:	jae    0x414ca7
  414c48:	movsxd esp,DWORD PTR [ebx+0x5f]
  414c4c:	jo     0x414cc0
  414c4e:	outs   dx,DWORD PTR ds:[rsi]
  414c4f:	(bad)  
  414c50:	ins    BYTE PTR es:[rdi],dx
  414c51:	gs ins DWORD PTR es:[rdi],dx
  414c53:	add    BYTE PTR [rax],al
  414c55:	add    BYTE PTR [rax],al
  414c57:	add    BYTE PTR [rbx],ah
  414c59:	imul   esp,DWORD PTR [rsi+0x6e],0x20666564
  414c60:	rex.WRX push rbp
  414c62:	rex.WR
  414c63:	rex.WR or r12b,BYTE PTR [rbx]
  414c66:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  414c6d:	pop    rdi
  414c6e:	movsxd esi,DWORD PTR [rax+0x6c]
  414c71:	jne    0x414ce6
  414c73:	jo     0x414ce1
  414c75:	jne    0x414cea
  414c77:	or     ah,BYTE PTR [rbx]
  414c79:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  414c80:	pop    rdi
  414c81:	rex.RXB
  414c82:	rex.WRX push rbp
  414c84:	rex.RXB pop r15
  414c86:	pop    rdi
  414c87:	or     ah,BYTE PTR [rbx]
  414c89:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4e20
  414c91:	push   rbp
  414c92:	rex.WR
  414c93:	rex.WR and BYTE PTR [rdi+0x5f],r11b
  414c97:	outs   dx,BYTE PTR ds:[rsi]
  414c98:	jne    0x414d06
  414c9a:	ins    BYTE PTR es:[rdi],dx
  414c9b:	or     ah,BYTE PTR [rbx]
  414c9d:	gs ins BYTE PTR es:[rdi],dx
  414c9f:	jae    0x414d06
  414ca1:	and    BYTE PTR [rdi],ch
  414ca3:	sub    ah,BYTE PTR [rax]
  414ca5:	and    DWORD PTR [rax],esp
  414ca7:	pop    rdi
  414ca8:	pop    rdi
  414ca9:	rex.RXB
  414caa:	rex.WRX push rbp
  414cac:	rex.RXB pop r15
  414cae:	pop    rdi
  414caf:	and    BYTE PTR [rax],ah
  414cb1:	sub    ch,BYTE PTR [rdi]
  414cb3:	or     ah,BYTE PTR [rbx]
  414cb5:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4e20
  414cbd:	push   rbp
  414cbe:	rex.WR
  414cbf:	rex.WR and BYTE PTR [rax],r14b
  414cc2:	rex.WR or r12b,BYTE PTR [rbx]
  414cc5:	outs   dx,BYTE PTR gs:[rsi]
  414cc7:	imul   esp,DWORD PTR fs:[rsi+0x20],0x5f202a2f
  414ccf:	pop    rdi
  414cd0:	rex.RXB
  414cd1:	rex.WRX push rbp
  414cd3:	rex.RXB pop r15
  414cd5:	pop    rdi
  414cd6:	and    BYTE PTR [rax],ah
  414cd8:	sub    ch,BYTE PTR [rdi]
  414cda:	or     ah,BYTE PTR [rbx]
  414cdc:	gs ins BYTE PTR es:[rdi],dx
  414cde:	jae    0x414d45
  414ce0:	and    BYTE PTR [rdi],ch
  414ce2:	sub    ah,BYTE PTR [rax]
  414ce4:	and    DWORD PTR [rax],esp
  414ce6:	pop    rdi
  414ce7:	pop    rdi
  414ce8:	movsxd esi,DWORD PTR [rax+0x6c]
  414ceb:	jne    0x414d60
  414ced:	jo     0x414d5b
  414cef:	jne    0x414d64
  414cf1:	and    BYTE PTR [rax],ah
  414cf3:	sub    ch,BYTE PTR [rdi]
  414cf5:	or     ah,BYTE PTR [rbx]
  414cf7:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4e20
  414cff:	push   rbp
  414d00:	rex.WR
  414d01:	rex.WR and BYTE PTR [rax],r13b
  414d04:	sub    BYTE PTR [rsi+0x6f],dh
  414d07:	imul   esp,DWORD PTR [rax+riz*1+0x2a],0xa293029
  414d0f:	and    esp,DWORD PTR [rbp+0x6e]
  414d12:	imul   esp,DWORD PTR fs:[rsi+0x20],0x5f202a2f
  414d1a:	pop    rdi
  414d1b:	movsxd esi,DWORD PTR [rax+0x6c]
  414d1e:	jne    0x414d93
  414d20:	jo     0x414d8e
  414d22:	jne    0x414d97
  414d24:	and    BYTE PTR [rax],ah
  414d26:	sub    ch,BYTE PTR [rdi]
  414d28:	or     ah,BYTE PTR [rbx]
  414d2a:	outs   dx,BYTE PTR gs:[rsi]
  414d2c:	imul   esp,DWORD PTR fs:[rsi+0x20],0x21202a2f
  414d34:	rex.WRX push rbp
  414d36:	rex.WR
  414d37:	rex.WR and BYTE PTR [rax],r12b
  414d3a:	sub    ch,BYTE PTR [rdi]
  414d3c:	add    BYTE PTR [rdi+0x5f],bl
  414d3f:	outs   dx,BYTE PTR ds:[rsi]
  414d40:	jne    0x414dae
  414d42:	ins    BYTE PTR es:[rdi],dx
  414d43:	add    BYTE PTR [rdi+0x5f],bl
  414d46:	movsxd esi,DWORD PTR [rax+0x6c]
  414d49:	jne    0x414dbe
  414d4b:	jo     0x414db9
  414d4d:	jne    0x414dc2
	...
  414d5f:	add    BYTE PTR [rsi+0x23],bl
  414d62:	pop    rbx
  414d63:	and    BYTE PTR [rcx],cl
  414d65:	pop    rbp
  414d66:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  414d6a:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  414d71:	sub    ecx,DWORD PTR [rsi+0x55]
  414d74:	rex.WR
  414d75:	rex.WR pop rbx
  414d77:	and    BYTE PTR [rcx],cl
  414d79:	pop    rbp
  414d7a:	sub    ebx,DWORD PTR [rax+rbp*1+0x5c]
  414d7e:	sub    BYTE PTR [rsi+0x6f],dh
  414d81:	imul   esp,DWORD PTR [rbx+rbx*2+0x20],0x5c2a5d09
  414d89:	sub    bl,BYTE PTR [rcx+rbp*1+0x30]
  414d8d:	pop    rsp
  414d8e:	sub    DWORD PTR [rax],eax
	...
  414dc0:	movsxd esi,DWORD PTR [rbp+0x72]
  414dc3:	jae    0x414e2a
  414dc5:	jae    0x414df5
  414dc7:	push   0x6d626400
  414dcc:	cs push 0x636f6c00
  414dd2:	(bad)  
  414dd3:	ins    BYTE PTR es:[rdi],dx
  414dd4:	gs cs push 0x64747300
  414ddb:	imul   ebp,DWORD PTR [rdi+0x2e],0x74730068
  414de2:	fs ins BYTE PTR es:[rdi],dx
  414de4:	imul   esp,DWORD PTR [rdx+0x2e],0x74730068
  414deb:	jb     0x414e56
  414ded:	outs   dx,BYTE PTR ds:[rsi]
  414dee:	addr32 cs push 0x6d697400
  414df5:	gs cs push 0x696e7500
  414dfc:	jae    0x414e72
  414dfe:	fs cs push 0x73797300
  414e05:	(bad)  
  414e06:	imul   esi,DWORD PTR fs:[rdx+0x2e],0x79730068
  414e0e:	jae    0x414e3f
  414e10:	jo     0x414e73
  414e12:	jb     0x414e75
  414e14:	ins    DWORD PTR es:[rdi],dx
  414e15:	cs push 0x73797300
  414e1b:	(bad)  
  414e1c:	je     0x414e97
  414e1e:	jo     0x414e85
  414e20:	jae    0x414e50
  414e22:	push   0x6f760000
  414e27:	imul   esp,DWORD PTR [rdi+rbx*2+0x6e],0x6c6c75
  414e2f:	and    eax,0x79733c31
  414e34:	jae    0x414e65
  414e36:	and    eax,0x3e682e32
  414e3b:	add    BYTE PTR [rax],al
  414e3d:	add    BYTE PTR [rax],al
  414e3f:	add    BYTE PTR [rax],ch
  414e41:	and    ebx,DWORD PTR [rbx+0x20]
  414e44:	or     DWORD PTR [rbp+0x2a],ebx
  414e47:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  414e4e:	pop    rbx
  414e4f:	and    BYTE PTR [rcx],cl
  414e51:	pop    rbp
  414e52:	sub    ebp,DWORD PTR [rcx]
  414e54:	cmp    al,0x28
  414e56:	jb     0x414ebd
  414e58:	jae    0x414ec9
  414e5a:	jne    0x414ece
  414e5c:	movsxd esp,DWORD PTR [rbp+0x7c]
  414e5f:	(bad)  
  414e60:	jne    0x414ecb
  414e62:	ins    BYTE PTR es:[rdi],dx
  414e63:	je     0x414ece
  414e65:	outs   dx,BYTE PTR ds:[rsi]
  414e66:	jae    0x414e91
  414e68:	pop    rsp
  414e69:	cs push 0x2d2a003e
  414e6f:	sub    ch,BYTE PTR [rip+0x736d762a]        # 0x73aec49f
  414e75:	sub    al,BYTE PTR [rax]
	...
  414e7f:	add    BYTE PTR [rdx+0x74],dh
  414e82:	ins    BYTE PTR es:[rdi],dx
  414e83:	fs gs data16 (bad) 
  414e87:	ja     0x414eea
  414e89:	imul   esi,DWORD PTR [rsi+rbp*1+0x68],0x61747300
  414e91:	jb     0x414eff
  414e93:	gs je  0x414ef5
  414e96:	movsxd ebp,DWORD PTR [rdi]
  414e98:	jo     0x414f0e
  414e9a:	push   0x64616572
  414e9f:	cs push 0x0
	...
  414ead:	add    BYTE PTR [rax],al
  414eaf:	add    BYTE PTR [rsi+0x6d],dh
  414eb2:	jae    0x414f13
  414eb4:	jne    0x414f29
  414eb6:	gs pop rdi
  414eb8:	jno    0x414f2f
  414eba:	outs   dx,DWORD PTR ds:[rsi]
  414ebb:	je     0x414f22
  414ebd:	fs pop rdi
  414ebf:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  414ec6:	add    BYTE PTR [rax],al
  414ec8:	and    ebp,DWORD PTR [rcx+0x66]
  414ecb:	and    BYTE PTR [rbp+riz*2+0x66],ah
  414ecf:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2864
  414ed6:	rex.R
  414ed7:	rex.RB
  414ed8:	rex.XB
  414ed9:	rex.XB sub DWORD PTR [r8],esp
  414edc:	jl     0x414f5a
  414ede:	and    BYTE PTR [rbp+riz*2+0x66],ah
  414ee2:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2864
  414ee9:	rex.R
  414eea:	rex.RB
  414eeb:	rex.XB
  414eec:	rex.XB pop r8
  414eee:	pop    rax
  414eef:	sub    DWORD PTR [rax],esp
  414ef1:	jl     0x414f6f
  414ef3:	and    BYTE PTR [rbp+riz*2+0x66],ah
  414ef7:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2864
  414efe:	rex.RXB
  414eff:	rex.WRX push rbp
  414f01:	rex.XB pop r15
  414f03:	pop    rdi
  414f04:	sub    DWORD PTR [rdx],ecx
  414f06:	and    esp,DWORD PTR [rax]
  414f08:	jo     0x414f7c
  414f0a:	(bad)  
  414f0b:	ins    DWORD PTR es:[edi],dx
  414f0d:	(bad)  
  414f0e:	and    BYTE PTR [rbp+0x78],ah
  414f11:	je     0x414f78
  414f13:	jb     0x414f83
  414f15:	pop    rdi
  414f16:	ins    DWORD PTR es:[rdi],dx
  414f17:	outs   dx,DWORD PTR ds:[rsi]
  414f18:	fs gs ins BYTE PTR es:[rdi],dx
  414f1b:	and    BYTE PTR [rdi+0x5f],bl
  414f1e:	jae    0x414f81
  414f20:	jbe    0x414f87
  414f22:	or     al,BYTE PTR [rax]
	...
  414f40:	and    ebp,DWORD PTR [rcx+0x66]
  414f43:	and    BYTE PTR [rbp+riz*2+0x66],ah
  414f47:	imul   ebp,DWORD PTR [rsi+0x65],0x5f285c64
  414f4e:	pop    rdi
  414f4f:	rex.R
  414f50:	rex.RB
  414f51:	rex.XB
  414f52:	rex.XB pop r12
  414f54:	sub    DWORD PTR [rax],esp
  414f56:	pop    rsp
  414f57:	jl     0x414fb5
  414f59:	jl     0x414f7b
  414f5b:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5c64
  414f63:	sub    BYTE PTR [rdi+0x5f],bl
  414f66:	rex.R
  414f67:	rex.RB
  414f68:	rex.XB
  414f69:	rex.XB pop r8
  414f6b:	pop    rax
  414f6c:	pop    rsp
  414f6d:	sub    DWORD PTR [rdx],ecx
  414f6f:	and    esp,DWORD PTR [rax]
  414f71:	jo     0x414fe5
  414f73:	(bad)  
  414f74:	ins    DWORD PTR es:[edi],dx
  414f76:	(bad)  
  414f77:	and    BYTE PTR [rbp+0x78],ah
  414f7a:	je     0x414fe1
  414f7c:	jb     0x414fec
  414f7e:	pop    rdi
  414f7f:	ins    DWORD PTR es:[rdi],dx
  414f80:	outs   dx,DWORD PTR ds:[rsi]
  414f81:	fs gs ins BYTE PTR es:[rdi],dx
  414f84:	and    BYTE PTR [rdi+0x5f],bl
  414f87:	jae    0x414fea
  414f89:	jbe    0x414ff0
  414f8b:	or     al,BYTE PTR [rax]
  414f8d:	add    BYTE PTR [rax],al
  414f8f:	add    BYTE PTR [rsi+0x6d],dh
  414f92:	jae    0x414ff3
  414f94:	jne    0x415009
  414f96:	gs pop rdi
  414f98:	jo     0x41500c
  414f9a:	(bad)  
  414f9b:	ins    DWORD PTR es:[edi],dx
  414f9d:	(bad)  
  414f9e:	pop    rdi
  414f9f:	gs js  0x415016
  414fa2:	gs jb  0x415013
  414fa5:	pop    rdi
  414fa6:	ins    DWORD PTR es:[rdi],dx
  414fa7:	outs   dx,DWORD PTR ds:[rsi]
  414fa8:	fs gs ins BYTE PTR es:[rdi],dx
  414fab:	add    BYTE PTR [rip+0x65642030],ah        # 0x65a56fe1
  414fb1:	imul   bp,WORD PTR [rsi+0x65],0x2064
  414fb7:	sub    BYTE PTR [rdi+0x5f],bl
  414fba:	rex.RXB
  414fbb:	rex.WRX push rbp
  414fbd:	rex.XB pop r15
  414fbf:	pop    rdi
  414fc0:	sub    DWORD PTR [rax],esp
  414fc2:	jl     0x415040
	...
  414fe0:	sub    BYTE PTR [rbx],ah
  414fe2:	pop    rbx
  414fe3:	and    BYTE PTR [rcx],cl
  414fe5:	pop    rbp
  414fe6:	sub    ch,BYTE PTR [rcx+0x66]
  414fe9:	pop    rbx
  414fea:	and    BYTE PTR [rcx],cl
  414fec:	pop    rbp
  414fed:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  414ff1:	imul   ebp,DWORD PTR [rsi+0x65],0x5f285c64
  414ff8:	pop    rdi
  414ff9:	rex.RX
  414ffa:	push   r11
  414ffc:	push   rsp
  414ffd:	pop    rdi
  414ffe:	push   rbx
  414fff:	rex.RB push r12
  415001:	rex.WX
  415002:	rex.WRB push r8
  415004:	pop    rsp
  415005:	sub    DWORD PTR [rbx+0x20],ebx
  415008:	or     DWORD PTR [rbp+0x2a],ebx
  41500b:	pop    rsp
  41500c:	jl     0x41506a
  41500e:	jl     0x415039
	...
  415020:	jb     0x415096
  415022:	ins    BYTE PTR es:[rdi],dx
  415023:	fs gs data16 (bad) 
  415027:	jae    0x41508e
  415029:	je     0x415095
  41502b:	ins    DWORD PTR es:[rdi],dx
  41502c:	jo     0x41505c
  41502e:	push   0x0
	...
  41503f:	add    BYTE PTR [rsi+0x6d],dh
  415042:	jae    0x4150a3
  415044:	jne    0x4150b9
  415046:	gs pop rdi
  415048:	data16 (bad) 
  41504a:	jae    0x4150c0
  41504c:	pop    rdi
  41504d:	jae    0x4150b4
  41504f:	je     0x4150bb
  415051:	ins    DWORD PTR es:[rdi],dx
  415052:	jo     0x415054
  415054:	add    BYTE PTR [rax],al
  415056:	add    BYTE PTR [rax],al
  415058:	and    ebp,DWORD PTR [rcx+0x66]
  41505b:	and    BYTE PTR [rdi+0x5f],bl
  41505e:	rex.WB
  41505f:	rex.WRX
  415060:	rex.WB push r12
  415062:	rex.WB
  415063:	rex.B
  415064:	rex.WR pop rdi
  415066:	push   rax
  415067:	rex.WRXB
  415068:	rex.WB
  415069:	rex.WRX push rsp
  41506b:	rex.RB push r10
  41506d:	pop    rdi
  41506e:	push   rbx
  41506f:	rex.WB pop r10
  415071:	and    BYTE PTR [r9],r12b
  415074:	cmp    eax,0x20343620
  415079:	(bad)  
  41507a:	sub    ah,BYTE PTR [rax]
  41507c:	addr32 gs je 0x4150ef
  415080:	jo     0x4150f6
  415082:	and    BYTE PTR [rcx+0x73],ch
  415085:	and    BYTE PTR [rbx+0x68],dh
  415088:	outs   dx,DWORD PTR ds:[rsi]
  415089:	jb     0x4150ff
  41508b:	and    BYTE PTR [rax+0x74],dh
  41508e:	jb     0x4150b0
  415090:	outs   dx,DWORD PTR ds:[rsi]
  415091:	outs   dx,BYTE PTR ds:[rsi]
  415092:	ins    BYTE PTR es:[rdi],dx
  415093:	jns    0x4150c3
  415095:	and    BYTE PTR [rax],ah
  415097:	sub    ch,BYTE PTR [rdi]
  415099:	or     ah,BYTE PTR [rip+0x6e652330]        # 0x6ea673cf
  41509f:	imul   esp,DWORD PTR fs:[rsi+0xa],0x0
	...
  4150bf:	add    BYTE PTR [rsi+0x5b],bl
  4150c2:	and    BYTE PTR [rcx],cl
  4150c4:	pop    rbp
  4150c5:	sub    ch,BYTE PTR [rax]
  4150c7:	gs js  0x41513e
  4150ca:	gs jb  0x41513b
  4150cd:	pop    rbx
  4150ce:	and    BYTE PTR [rcx],cl
  4150d0:	pop    rbp
  4150d1:	sub    ch,BYTE PTR [rcx]
  4150d3:	(bad)  
  4150d4:	sub    BYTE PTR [rcx+0x6e],ch
  4150d7:	je     0x415134
  4150d9:	and    BYTE PTR [rcx],cl
  4150db:	pop    rbp
  4150dc:	sub    ch,BYTE PTR [rax]
  4150de:	addr32 gs je 0x415151
  4150e2:	jo     0x415158
  4150e4:	jl     0x415155
  4150e6:	jo     0x41515c
  4150e8:	imul   ebp,DWORD PTR [rsi+0x64],0x74706f7c
  4150ef:	gs jb  0x415164
  4150f2:	jl     0x415163
  4150f4:	jo     0x41516a
  4150f6:	outs   dx,DWORD PTR ds:[rsi]
  4150f7:	jo     0x41516d
  4150f9:	sub    DWORD PTR [rax+rbp*1+0x63],edi
  4150fd:	push   0x5c207261
  415102:	sub    ch,BYTE PTR [rdi+0x70]
  415105:	je     0x415168
  415107:	jb     0x415170
  415109:	sub    DWORD PTR [rcx],ebp
  41510b:	sub    BYTE PTR [rbx+0x20],bl
  41510e:	or     DWORD PTR [rbp+0x2a],ebx
  415111:	pop    rsp
  415112:	sub    BYTE PTR [rsi],ch
  415114:	sub    bl,BYTE PTR [rcx+rbp*1+0x29]
  415118:	(bad)  
  415119:	cmp    ecx,DWORD PTR [rdx]
  41511b:	add    BYTE PTR [rax],al
  41511d:	add    BYTE PTR [rax],al
  41511f:	add    BYTE PTR [rdx+0x74],dh
  415122:	ins    BYTE PTR es:[rdi],dx
  415123:	fs gs data16 (bad) 
  415127:	jae    0x41519d
  415129:	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x74720068
  415131:	ins    BYTE PTR es:[rdi],dx
  415132:	fs gs data16 (bad) 
  415136:	jne    0x4151a6
  415138:	imul   esi,DWORD PTR [rbx+0x74],0x682e64
  41513f:	add    BYTE PTR [rsi+0x6d],dh
  415142:	jae    0x4151a3
  415144:	outs   dx,BYTE PTR ds:[rsi]
  415145:	outs   dx,DWORD PTR ds:[rsi]
  415146:	pop    rdi
  415147:	ss xor al,0x62
  41514a:	imul   esi,DWORD PTR [rdi+rbx*2+0x67],0x706f7465
  415152:	je     0x415154
  415154:	add    BYTE PTR [rax],al
  415156:	add    BYTE PTR [rax],al
  415158:	and    eax,0x66692331
  41515d:	and    BYTE PTR [rbp+riz*2+0x66],ah
  415161:	imul   ebp,DWORD PTR [rsi+0x65],0x5f282064
  415168:	pop    rdi
  415169:	movsxd esi,DWORD PTR [rax+0x6c]
  41516c:	jne    0x4151e1
  41516e:	jo     0x4151dc
  415170:	jne    0x4151e5
  415172:	sub    DWORD PTR [rax],esp
  415174:	jl     0x4151f2
  415176:	and    BYTE PTR [rbp+riz*2+0x66],ah
  41517a:	imul   ebp,DWORD PTR [rsi+0x65],0x5f282064
  415181:	pop    rdi
  415182:	rex.RXB
  415183:	rex.WRX push rbp
  415185:	rex.XB pop r15
  415187:	pop    rdi
  415188:	sub    DWORD PTR [rdx],ecx
	...
  41519e:	add    BYTE PTR [rax],al
  4151a0:	sub    BYTE PTR [rdi],ch
  4151a2:	pop    rsp
  4151a3:	sub    ah,BYTE PTR [rax]
  4151a5:	outs   dx,WORD PTR ds:[rsi]
  4151a7:	jb     0x415220
  4151a9:	(bad)  
  4151aa:	jb     0x415210
  4151ac:	and    BYTE PTR [rbp+riz*2+0x63],ah
  4151b0:	ins    BYTE PTR es:[rdi],dx
  4151b1:	jae    0x4151d3
  4151b3:	outs   dx,WORD PTR ds:[rsi]
  4151b5:	jb     0x4151d7
  4151b7:	rex.XB pop r12
  4151b9:	sub    ebx,DWORD PTR [rbx+rbp*1+0x20]
  4151bd:	pop    rsp
  4151be:	sub    ch,BYTE PTR [rdi]
  4151c0:	or     ch,BYTE PTR [rcx]
  4151c2:	and    ebp,DWORD PTR [rcx+0x66]
  4151c5:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  4151cb:	movsxd esi,DWORD PTR [rax+0x6c]
  4151ce:	jne    0x415243
  4151d0:	jo     0x41523e
  4151d2:	jne    0x415247
  4151d4:	or     al,BYTE PTR [rax]
  4151d6:	jb     0x41524c
  4151d8:	ins    BYTE PTR es:[rdi],dx
  4151d9:	fs gs data16 (bad) 
  4151dd:	imul   esp,DWORD PTR [rsi+0x2e],0x68
	...
  4151f0:	jbe    0x41525f
  4151f2:	jae    0x415253
  4151f4:	outs   dx,WORD PTR ds:[rsi]
  4151f6:	jb     0x41526f
  4151f8:	(bad)  
  4151f9:	jb     0x41525f
  4151fb:	pop    rdi
  4151fc:	fs movsxd ebp,DWORD PTR gs:[rcx+riz*2+0x72]
  415202:	gs pop rdi
  415204:	jae    0x41527a
  415206:	jb     0x41527d
  415208:	movsxd esi,DWORD PTR [rax+rax*1+0x25]
  41520c:	xor    DWORD PTR [rdx],ecx
  41520e:	(bad)  
  41520f:	sub    ah,BYTE PTR [rax]
  415211:	and    eax,0x2f2a2032
	...
  41523e:	add    BYTE PTR [rax],al
  415240:	sub    BYTE PTR [rsi+0x6f],dh
  415243:	imul   esp,DWORD PTR [rbx+rbx*2+0x20],0x662b5d09
  41524b:	jo     0x4152ac
  41524d:	outs   dx,BYTE PTR ds:[rsi]
  41524e:	jno    0x4152c5
  415250:	gs jb  0x4152cc
  415253:	and    BYTE PTR [rax+rbp*1+0x63],bl
  415257:	outs   dx,DWORD PTR ds:[rsi]
  415258:	outs   dx,BYTE PTR ds:[rsi]
  415259:	jae    0x4152cf
  41525b:	and    BYTE PTR [rbp+0x5f],dh
  41525e:	movsxd ebp,DWORD PTR [rax+0x61]
  415261:	jb     0x415283
  415263:	pop    rsp
  415264:	sub    ch,BYTE PTR [rax+riz*1]
  415267:	imul   ebp,DWORD PTR [rsi+0x74],0x4946202c
  41526e:	rex.WR
  41526f:	and    BYTE PTR [r10+rbp*1+0x5c],r11b
  415274:	sub    DWORD PTR [rbx],edi
  415276:	sub    DWORD PTR [rdx],ecx
  415278:	sub    BYTE PTR [rdi+0x5f],bl
  41527b:	movsxd ebp,DWORD PTR [rax+0x61]
  41527e:	jb     0x4152df
  415280:	jo     0x4152f6
  415282:	jb     0x4152b7
  415284:	xor    bl,BYTE PTR [rbx+0x20]
  415287:	or     DWORD PTR [rbp+0x2b],ebx
  41528a:	push   0x6174736f
  41528f:	ins    BYTE PTR es:[rdi],dx
  415290:	imul   esp,DWORD PTR [rcx+0x73],0x63285c20
  415297:	outs   dx,DWORD PTR ds:[rsi]
  415298:	outs   dx,BYTE PTR ds:[rsi]
  415299:	jae    0x41530f
  41529b:	and    BYTE PTR [rbx+0x68],ah
  41529e:	(bad)  
  41529f:	jb     0x4152c1
  4152a1:	pop    rsp
  4152a2:	sub    bl,BYTE PTR [rcx+rbp*1+0x3b]
  4152a6:	sub    DWORD PTR [rax],eax
	...
  4152b0:	jb     0x415326
  4152b2:	ins    BYTE PTR es:[rdi],dx
  4152b3:	fs gs data16 (bad) 
  4152b7:	jb     0x41531e
  4152b9:	jae    0x41532a
  4152bb:	ins    BYTE PTR es:[rdi],dx
  4152bc:	jbe    0x4152ec
  4152be:	push   0x0
	...
  4152cf:	add    BYTE PTR [rsi+0x6d],dh
  4152d2:	jae    0x415333
  4152d4:	outs   dx,DWORD PTR fs:[rsi]
  4152d6:	pop    rdi
  4152d7:	outs   dx,BYTE PTR ds:[rsi]
  4152d8:	outs   dx,DWORD PTR ds:[rsi]
  4152d9:	je     0x41533a
  4152db:	jb     0x415342
  4152dd:	fs movsxd ebp,DWORD PTR gs:[rcx+riz*2+0x72]
  4152e3:	gs pop rdi
  4152e5:	push   0x6174736f
  4152ea:	ins    BYTE PTR es:[rdi],dx
  4152eb:	imul   esp,DWORD PTR [rcx+0x73],0x69230000
  4152f2:	data16 and BYTE PTR [rcx],ah
  4152f5:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2864
  4152fd:	pop    rdi
  4152fe:	pop    rdi
  4152ff:	push   rsi
  415300:	pop    r8
  415302:	sub    DWORD PTR [rax],esp
  415304:	es and BYTE PTR es:[rcx],ah
  415308:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2864
  415310:	pop    rdi
  415311:	pop    rdi
  415312:	rex.RXB
  415313:	rex.WRX push rbp
  415315:	rex.XB pop r15
  415317:	pop    rdi
  415318:	sub    DWORD PTR [rdx],ecx
  41531a:	add    BYTE PTR [rax],al
  41531c:	add    BYTE PTR [rax],al
  41531e:	add    BYTE PTR [rax],al
  415320:	and    ebp,DWORD PTR [rcx+0x66]
  415323:	and    BYTE PTR [rcx],ah
  415325:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5c64
  41532d:	sub    BYTE PTR [rdi+0x5f],bl
  415330:	push   rsi
  415331:	pop    r8
  415333:	pop    rsp
  415334:	sub    DWORD PTR [rdx],ecx
	...
  41533e:	add    BYTE PTR [rax],al
  415340:	jb     0x4153b6
  415342:	ins    BYTE PTR es:[rdi],dx
  415343:	fs gs data16 (bad) 
  415347:	jae    0x4153bd
  415349:	jb     0x4153b4
  41534b:	outs   dx,BYTE PTR ds:[rsi]
  41534c:	addr32 cs push 0x0
	...
  41535f:	add    BYTE PTR [rsi+0x6d],dh
  415362:	jae    0x4153c3
  415364:	imul   esi,DWORD PTR fs:[rbx+0x61],0x5f656c62
  41536c:	fs movsxd esp,DWORD PTR gs:[rbx+0x5f]
  415371:	jae    0x4153e7
  415373:	jb     0x4153de
  415375:	outs   dx,BYTE PTR ds:[rsi]
  415376:	addr32 pop rdi
  415378:	(bad)  
  415379:	jne    0x4153e4
  41537b:	ins    BYTE PTR es:[rdi],dx
  41537c:	je     0x4153e7
  41537e:	outs   dx,BYTE PTR ds:[rsi]
  41537f:	jae    0x415381
  415381:	add    BYTE PTR [rax],al
  415383:	add    BYTE PTR [rax],al
  415385:	add    BYTE PTR [rax],al
  415387:	add    BYTE PTR [rip+0x20202330],ah        # 0x206176bd
  41538d:	and    BYTE PTR [rax],ah
  41538f:	gs ins BYTE PTR es:[rdi],dx
  415391:	imul   esp,DWORD PTR [rsi+0x20],0x69666564
  415398:	outs   dx,BYTE PTR ds:[rsi]
  415399:	gs and BYTE PTR fs:[rax],ch
  41539d:	pop    rdi
  41539e:	pop    rdi
  41539f:	rex.RXB
  4153a0:	rex.WRX push rbp
  4153a2:	rex.XB pop r15
  4153a4:	pop    rdi
  4153a5:	sub    DWORD PTR [rdx],ecx
  4153a7:	and    ecx,DWORD PTR [rcx]
  4153a9:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  4153b1:	pop    rdi
  4153b2:	rex.XB
  4153b3:	rex.B
  4153b4:	rex.WRX pop rdi
  4153b6:	push   rbp
  4153b7:	push   rbx
  4153b8:	rex.RB pop r15
  4153ba:	rex.RB pop r8
  4153bc:	push   rsp
  4153bd:	rex.RB push r10
  4153bf:	rex.WRX pop rdi
  4153c1:	push   rax
  4153c2:	push   rdx
  4153c3:	rex.RB
  4153c4:	rex.RX
  4153c5:	rex.WB pop r8
  4153c7:	and    BYTE PTR [rcx],dh
  4153c9:	or     al,BYTE PTR [rax]
	...
  4153ff:	add    BYTE PTR [rbx],ah
  415401:	pop    rbx
  415402:	and    BYTE PTR [rcx],cl
  415404:	pop    rbp
  415405:	sub    ah,BYTE PTR [rbp+0x6c]
  415408:	jae    0x41546f
  41540a:	or     ah,BYTE PTR [rbx]
  41540c:	pop    rbx
  41540d:	and    BYTE PTR [rcx],cl
  41540f:	pop    rbp
  415410:	sub    ch,BYTE PTR [rcx+0x66]
  415413:	and    BYTE PTR [rbp+riz*2+0x66],ah
  415417:	imul   ebp,DWORD PTR [rsi+0x65],0x5f285c64
  41541e:	pop    rdi
  41541f:	rex.R
  415420:	rex.RB
  415421:	rex.XB
  415422:	rex.XB pop r8
  415424:	pop    rax
  415425:	pop    rsp
  415426:	sub    DWORD PTR [rdx],ecx
  415428:	and    ebx,DWORD PTR [rbx+0x20]
  41542b:	or     DWORD PTR [rbp+0x2a],ebx
  41542e:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  415436:	pop    rdi
  415437:	rex.XB
  415438:	rex.B
  415439:	rex.WRX pop rdi
  41543b:	push   rbp
  41543c:	push   rbx
  41543d:	rex.RB pop r15
  41543f:	rex.RB pop r8
  415441:	push   rsp
  415442:	rex.RB push r10
  415444:	rex.WRX pop rdi
  415446:	push   rax
  415447:	push   rdx
  415448:	rex.RB
  415449:	rex.RX
  41544a:	rex.WB pop r8
  41544c:	and    BYTE PTR [rcx],dh
  41544e:	or     al,BYTE PTR [rax]
  415450:	jb     0x4154c6
  415452:	ins    BYTE PTR es:[rdi],dx
  415453:	fs gs data16 (bad) 
  415457:	fs movsxd esp,DWORD PTR gs:[rbx+0x24]
  41545c:	je     0x4154d7
  41545e:	jo     0x4154c5
  415460:	jae    0x415490
  415462:	push   0x0
	...
  41547f:	add    BYTE PTR [rsi+0x6d],dh
  415482:	jae    0x4154e3
  415484:	fs imul bp,WORD PTR gs:[rsi+0x65],0x635f
  41548c:	(bad)  
  41548d:	outs   dx,BYTE PTR ds:[rsi]
  41548e:	pop    rdi
  41548f:	jne    0x415504
  415491:	gs pop rdi
  415493:	gs js  0x41550a
  415496:	gs jb  0x415507
  415499:	pop    rdi
  41549a:	jo     0x41550e
  41549c:	imul   di,WORD PTR gs:[rax+0x0],0x4073
  4154a3:	pop    rdi
  4154a4:	pop    rdi
  4154a5:	rex.WRB
  4154a6:	rex.RB
  4154a7:	rex.WRB push r11
  4154a9:	rex.RB push r12
  4154ab:	rex ins DWORD PTR es:[rdi],dx
  4154ad:	gs ins DWORD PTR es:[rdi],dx
  4154af:	jae    0x415516
  4154b1:	je     0x4154f3
  4154b3:	add    BYTE PTR [rbx+0x40],dh
  4154b6:	pop    rdi
  4154b7:	pop    rdi
  4154b8:	rex.WRB
  4154b9:	rex.RB
  4154ba:	rex.WRB
  4154bb:	rex.WRB
  4154bc:	rex.WRXB push r14
  4154be:	rex.RB
  4154bf:	rex ins DWORD PTR es:[rdi],dx
  4154c1:	gs ins DWORD PTR es:[rdi],dx
  4154c3:	ins    DWORD PTR es:[rdi],dx
  4154c4:	outs   dx,DWORD PTR ds:[rsi]
  4154c5:	jbe    0x41552c
  4154c7:	add    BYTE PTR [rbx+0x40],sil
  4154cb:	pop    rdi
  4154cc:	pop    rdi
  4154cd:	rex.WRB
  4154ce:	rex.RB
  4154cf:	rex.WRB
  4154d0:	rex.XB push r8
  4154d2:	pop    rcx
  4154d3:	rex ins DWORD PTR es:[rdi],dx
  4154d5:	gs ins DWORD PTR es:[rdi],dx
  4154d7:	movsxd esi,DWORD PTR [rax+0x79]
  4154da:	add    BYTE PTR [rbx+0x40],sil
  4154de:	pop    rdi
  4154df:	pop    rdi
  4154e0:	push   rbx
  4154e1:	push   rsp
  4154e2:	push   rdx
  4154e3:	rex.WR
  4154e4:	rex.RB
  4154e5:	rex.WRX
  4154e6:	rex jae 0x41555d
  4154e9:	jb     0x415557
  4154eb:	outs   dx,BYTE PTR gs:[rsi]
  4154ed:	add    BYTE PTR [rbx+0x40],sil
  4154f1:	pop    rdi
  4154f2:	pop    rdi
  4154f3:	push   rbx
  4154f4:	push   rsp
  4154f5:	push   rdx
  4154f6:	rex.XB push r8
  4154f8:	pop    rcx
  4154f9:	rex jae 0x415570
  4154fc:	jb     0x415561
  4154fe:	jo     0x415579
  415500:	add    BYTE PTR [rax],al
	...
  41551f:	add    BYTE PTR [rax],ch
  415521:	pop    rdi
  415522:	pop    rdi
  415523:	rex.WRB
  415524:	rex.RB
  415525:	rex.WRB push r11
  415527:	rex.RB push r12
  415529:	jl     0x41558a
  41552b:	pop    rdi
  41552c:	rex.WRB
  41552d:	rex.RB
  41552e:	rex.WRB
  41552f:	rex.WRB
  415530:	rex.WRXB push r14
  415532:	rex.RB jl 0x415594
  415535:	pop    rdi
  415536:	rex.WRB
  415537:	rex.RB
  415538:	rex.WRB
  415539:	rex.XB push r8
  41553b:	pop    rcx
  41553c:	jl     0x41559d
  41553e:	pop    rdi
  41553f:	push   rbx
  415540:	push   rsp
  415541:	push   rdx
  415542:	rex.WR
  415543:	rex.RB
  415544:	rex.WRX jl 0x4155a6
  415547:	pop    rdi
  415548:	push   rbx
  415549:	push   rsp
  41554a:	push   rdx
  41554b:	rex.XB push r8
  41554d:	pop    rcx
  41554e:	sub    DWORD PTR [rax],eax
	...
  415580:	jb     0x4155f6
  415582:	ins    BYTE PTR es:[rdi],dx
  415583:	fs gs data16 (bad) 
  415587:	jae    0x4155fd
  415589:	jb     0x4155f4
  41558b:	outs   dx,BYTE PTR ds:[rsi]
  41558c:	addr32 cs push 0x6c747200
  415593:	fs gs data16 (bad) 
  415597:	je     0x415602
  415599:	ins    DWORD PTR es:[rdi],dx
  41559a:	gs cs push 0x6c747200
  4155a1:	fs gs data16 (bad) 
  4155a5:	jae    0x41561b
  4155a7:	jb     0x415612
  4155a9:	outs   dx,BYTE PTR ds:[rsi]
  4155aa:	addr32 jae 0x4155db
  4155ad:	push   0x6c747200
  4155b2:	fs gs data16 (bad) 
  4155b6:	jae    0x415627
  4155b8:	movsxd ebp,DWORD PTR [rbx+0x65]
  4155bb:	je     0x4155eb
  4155bd:	push   0x6d760000
  4155c2:	jae    0x415623
  4155c4:	fs movsxd esp,DWORD PTR gs:[rbx+0x5f]
  4155c9:	(bad)  
  4155ca:	jne    0x415635
  4155cc:	ins    BYTE PTR es:[rdi],dx
  4155cd:	je     0x415638
  4155cf:	outs   dx,BYTE PTR ds:[rsi]
  4155d0:	add    BYTE PTR [rip+0x257b2031],ah        # 0x25bc7607
  4155d6:	xor    bh,BYTE PTR [rbp+0x20]
  4155d9:	add    BYTE PTR [rax],al
  4155db:	add    BYTE PTR [rax],al
  4155dd:	add    BYTE PTR [rax],al
  4155df:	add    BYTE PTR [rax],ch
  4155e1:	pop    rdi
  4155e2:	push   rbx
  4155e3:	rex.WB
  4155e4:	rex.RXB pop r15
  4155e6:	pop    rbx
  4155e7:	rex.B sub eax,0x5f2b5d5a
  4155ed:	push   rbx
  4155ee:	rex.RB push r12
  4155f0:	pop    rbx
  4155f1:	and    BYTE PTR [rcx],cl
  4155f3:	pop    rbp
  4155f4:	sub    edi,DWORD PTR [rip+0x297b5c20]        # 0x29bcb21a
  4155fa:	sub    BYTE PTR [rax],dh
  4155fc:	js     0x415659
  4155fe:	xor    BYTE PTR [rsi+0x5d],al
  415601:	sub    ebp,DWORD PTR [rax+riz*1]
  415604:	xor    BYTE PTR [rax+0x5b],bh
  415607:	xor    BYTE PTR [rsi+0x5d],al
  41560a:	sub    ebp,DWORD PTR [rcx]
  41560c:	add    BYTE PTR [rax],al
  41560e:	add    BYTE PTR [rax],al
  415610:	jb     0x415686
  415612:	ins    BYTE PTR es:[rdi],dx
  415613:	fs gs data16 (bad) 
  415617:	jae    0x415682
  415619:	outs   dx,BYTE PTR ds:[esi]
  41561b:	(bad)  
  41561c:	ins    BYTE PTR es:[rdi],dx
  41561d:	cs push 0x0
	...
  41562f:	add    BYTE PTR [rsi+0x6d],dh
  415632:	jae    0x415693
  415634:	(bad)  
  415635:	fs fs pop rdi
  415638:	ins    DWORD PTR es:[rdi],dx
  415639:	imul   esi,DWORD PTR [rbx+0x73],0x5f676e69
  415640:	(bad)  
  415642:	(bad)  
  415643:	movsxd esp,DWORD PTR [rbp+0x73]
  415646:	add    BYTE PTR [rdi+0x5f],bl
  415649:	jbe    0x4156c3
  41564b:	and    eax,0x31
  415650:	pop    rdi
  415651:	pop    rdi
  415652:	sub    BYTE PTR [rsi+0x73],dh
  415655:	imul   edi,DWORD PTR [rdx+0x7c],0x696c6176
  41565c:	jl     0x4156d4
  41565e:	jo     0x4156c1
  415660:	fs jl  0x4156c4
  415663:	ins    BYTE PTR es:[rdi],dx
  415664:	imul   esp,DWORD PTR [rdi+0x6e],0x5f5f666f
  41566b:	sub    DWORD PTR [rax],eax
  41566d:	add    BYTE PTR [rax],al
  41566f:	add    BYTE PTR [rcx+0x72],ah
  415672:	movsxd ebp,DWORD PTR [rax+0x2f]
  415675:	imul   edi,DWORD PTR [rcx],0x612f3036
  41567b:	jb     0x4156e0
  41567d:	push   0x30363949
  415682:	cs push 0x61760000
  415688:	pop    rdi
  415689:	imul   edi,DWORD PTR [rcx],0x6d5f3036
  41568f:	(bad)  
  415690:	movsxd esi,DWORD PTR [rdx+0x6f]
  415693:	add    BYTE PTR [rax],al
  415695:	add    BYTE PTR [rax],al
  415697:	add    BYTE PTR [rip+0x63202831],ah        # 0x63617ece
  41569d:	outs   dx,DWORD PTR ds:[rsi]
  41569e:	outs   dx,BYTE PTR ds:[rsi]
  41569f:	jae    0x415715
  4156a1:	and    BYTE PTR [rbx+0x68],ah
  4156a4:	(bad)  
  4156a5:	jb     0x4156c7
  4156a7:	sub    ah,BYTE PTR [rip+0x63202c33]        # 0x636182e0
  4156ad:	outs   dx,DWORD PTR ds:[rsi]
  4156ae:	outs   dx,BYTE PTR ds:[rsi]
  4156af:	jae    0x415725
  4156b1:	and    BYTE PTR [rbx+0x68],ah
  4156b4:	(bad)  
  4156b5:	jb     0x4156d7
  4156b7:	sub    al,BYTE PTR [rax]
  4156b9:	add    BYTE PTR [rax],al
  4156bb:	add    BYTE PTR [rax],al
  4156bd:	add    BYTE PTR [rax],al
  4156bf:	add    BYTE PTR [rax],ch
  4156c1:	pop    rbx
  4156c2:	and    BYTE PTR [rcx],cl
  4156c4:	sub    bl,BYTE PTR [rbp+0x28]
  4156c7:	outs   dx,WORD PTR ds:[rsi]
  4156c9:	jo     0x415730
  4156cb:	outs   dx,BYTE PTR ds:[rsi]
  4156cc:	jl     0x415741
  4156ce:	jae    0x415733
  4156d0:	(bad)  
  4156d1:	outs   dx,BYTE PTR ds:[rsi]
  4156d2:	data16 jl 0x415745
  4156d5:	outs   dx,DWORD PTR ds:[rsi]
  4156d6:	jo     0x41573d
  4156d8:	outs   dx,BYTE PTR ds:[rsi]
  4156d9:	jl     0x41574f
  4156db:	gs ins DWORD PTR es:[rdi],dx
  4156dd:	jo     0x41574d
  4156df:	(bad)  
  4156e0:	ins    DWORD PTR es:[rdi],dx
  4156e1:	sub    DWORD PTR [rcx],ebp
  4156e3:	pop    rsp
  4156e4:	sub    BYTE PTR [rbx+0x20],bl
  4156e7:	or     DWORD PTR [rbp+0x2a],ebx
  4156ea:	movsxd ebp,DWORD PTR [rax+0x61]
  4156ed:	jb     0x41574a
  4156ef:	and    BYTE PTR [rcx],cl
  4156f1:	pop    rbp
  4156f2:	sub    bl,BYTE PTR [rdx+rbp*1+0x28]
  4156f6:	pop    rbx
  4156f7:	pop    rsi
  4156f8:	sub    al,0x5d
  4156fa:	sub    ch,BYTE PTR [rcx]
  4156fc:	sub    al,0x5b
  4156fe:	and    BYTE PTR [rcx],cl
  415700:	pop    rbp
  415701:	sub    ah,BYTE PTR [rbx+0x68]
  415704:	(bad)  
  415705:	jb     0x415762
  415707:	and    BYTE PTR [rcx],cl
  415709:	pop    rbp
  41570a:	sub    bl,BYTE PTR [rdx+rbp*1+0x5b]
  41570e:	and    BYTE PTR [rcx],cl
  415710:	pop    rbp
  415711:	sub    al,BYTE PTR [rax]
	...
  41571f:	add    BYTE PTR [rdx+rbp*1+0x66],bl
  415723:	outs   dx,DWORD PTR ds:[rsi]
  415724:	jo     0x41578b
  415726:	outs   dx,BYTE PTR ds:[rsi]
  415727:	pop    rsp
  415728:	sub    BYTE PTR [rax],ah
  41572a:	movsxd ebp,DWORD PTR [rax+0x61]
  41572d:	jb     0x41574f
  41572f:	pop    rsp
  415730:	sub    al,BYTE PTR [rax]
  415732:	jae    0x4157a8
  415734:	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x75000068
  41573c:	ins    BYTE PTR es:[rdi],dx
  41573d:	je     0x4157b1
  41573f:	imul   edi,DWORD PTR [rax+0x5f],0x736e6f63
  415746:	je     0x41577a
  415748:	add    BYTE PTR [rip+0x6f632031],ah        # 0x6fa4777f
  41574e:	outs   dx,BYTE PTR ds:[rsi]
  41574f:	jae    0x4157c5
  415751:	and    BYTE PTR [rip+0x5f2a2033],ah        # 0x5f6b778a
  415757:	pop    rdi
	...
  415760:	sub    BYTE PTR [rbx+0x20],bl
  415763:	or     DWORD PTR [rdx],ebp
  415765:	pop    rbp
  415766:	sub    BYTE PTR [rax+0x65],dh
  415769:	jb     0x4157dd
  41576b:	outs   dx,DWORD PTR ds:[rsi]
  41576c:	jb     0x4157ea
  41576e:	data16 jo 0x4157e6
  415771:	je     0x4157e6
  415773:	jl     0x4157db
  415775:	ja     0x4157e9
  415777:	imul   esi,DWORD PTR [rbp+riz*2+0x7c],0x6e616373
  41577f:	data16 jl 0x4157e8
  415782:	jae    0x4157e7
  415784:	(bad)  
  415785:	outs   dx,BYTE PTR ds:[rsi]
  415786:	sub    WORD PTR [rax+rbp*1+0x2e],bx
  41578b:	sub    ch,BYTE PTR [rcx]
  41578d:	pop    rbx
  41578e:	and    BYTE PTR [rcx],cl
  415790:	pop    rbp
  415791:	sub    ebp,DWORD PTR [rax]
  415793:	movsxd ebp,DWORD PTR [rax+0x61]
  415796:	jb     0x415814
  415798:	jbe    0x415809
  41579a:	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x5f5f2a5c
	...
  4157ae:	add    BYTE PTR [rax],al
  4157b0:	jo     0x415817
  4157b2:	jb     0x415826
  4157b4:	outs   dx,DWORD PTR ds:[rsi]
  4157b5:	jb     0x415813
  4157b7:	sub    BYTE PTR [rax],ah
  4157b9:	movsxd ebp,DWORD PTR [rax+0x61]
  4157bc:	jb     0x4157de
  4157be:	pop    rsp
  4157bf:	sub    al,BYTE PTR [rax]
  4157c1:	jae    0x415837
  4157c3:	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x75000068
  4157cb:	ins    BYTE PTR es:[rdi],dx
  4157cc:	je     0x415840
  4157ce:	imul   edi,DWORD PTR [rax+0x5f],0x736e6f63
  4157d5:	je     0x4157d7
  4157d7:	and    BYTE PTR [rdi+0x5f],bl
  4157da:	movsxd esi,DWORD PTR [rax+0x6c]
  4157dd:	jne    0x415852
  4157df:	jo     0x41584d
  4157e1:	jne    0x415856
  4157e3:	add    BYTE PTR [rbx+0x20],bl
  4157e6:	or     DWORD PTR [rbp+0x5f],ebx
  4157e9:	movsxd esi,DWORD PTR [rax+0x6c]
  4157ec:	jne    0x415861
  4157ee:	jo     0x41585c
  4157f0:	jne    0x415865
  4157f2:	add    BYTE PTR [rcx+rbp*2+0x6e],dh
  4157f6:	outs   dx,WORD PTR ds:[rsi]
  4157f8:	cs push 0x0
  4157fe:	add    BYTE PTR [rax],al
  415800:	je     0x41586b
  415802:	outs   dx,BYTE PTR ds:[rsi]
  415803:	outs   dx,WORD PTR ds:[rsi]
  415805:	pop    rdi
  415806:	movsxd esi,DWORD PTR [rax+0x6c]
  415809:	jne    0x41587e
  41580b:	jo     0x415879
  41580d:	jne    0x415882
  41580f:	add    BYTE PTR [rip+0x745f5f31],ah        # 0x74a0b746
  415815:	push   0x322572
  41581a:	add    BYTE PTR [rax],al
  41581c:	add    BYTE PTR [rax],al
  41581e:	add    BYTE PTR [rax],al
  415820:	sub    BYTE PTR [rbx+0x2a],bl
  415823:	and    BYTE PTR [rbp+0x29],bl
  415826:	pop    rdi
  415827:	pop    rdi
  415828:	je     0x415892
  41582a:	jb     0x415891
  41582c:	(bad)  
  41582d:	sub    BYTE PTR fs:[rbx+0x2c],bl
  415831:	sub    DWORD PTR [rbp+0x29],ebx
	...
  415840:	jo     0x4158b6
  415842:	push   0x64616572
  415847:	cs push 0x74696200
  41584d:	jae    0x41587e
  41584f:	jae    0x4158ba
  415851:	addr32 je 0x4158bc
  415854:	jb     0x4158bb
  415856:	(bad)  
  415857:	fs cs push 0x622f2a00
  41585e:	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x74676973
  415866:	push   0x64616572
  41586b:	cs push 0x68740000
  415871:	jb     0x4158d8
  415873:	(bad)  
  415874:	fs pop rdi
  415876:	imul   esp,DWORD PTR [rbp+0x79],0x77
  41587a:	outs   dx,DWORD PTR ds:[rsi]
  41587b:	jb     0x4158e1
  41587d:	add    BYTE PTR [rsi+0x6f],dh
  415880:	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x28312509
	...
  415890:	pop    rdi
  415891:	rex.XB
  415892:	rex.WR
  415893:	push   r11
  415895:	push   rbx
  415896:	rex.WB
  415897:	rex.XB pop r15
  415899:	rex.B
  41589a:	rex.WRX push rbx
  41589c:	rex.WB pop r15
  41589e:	push   rsp
  41589f:	pop    rcx
  4158a0:	push   rax
  4158a1:	rex.RB push r11
	...
  4158bf:	add    BYTE PTR [rbx+0x68],ah
  4158c2:	(bad)  
  4158c3:	jb     0x415920
  4158c5:	and    BYTE PTR [rcx],cl
  4158c7:	pop    rbp
  4158c8:	sub    bl,BYTE PTR [rdx+rbp*1+0x5b]
  4158cc:	and    BYTE PTR [rcx],cl
  4158ce:	pop    rbp
  4158cf:	sub    ch,BYTE PTR [rax]
  4158d1:	movsxd esp,DWORD PTR [rcx+0x6c]
  4158d4:	ins    BYTE PTR es:[rdi],dx
  4158d5:	outs   dx,DWORD PTR ds:[rsi]
  4158d6:	movsxd edi,DWORD PTR [rbp+rbp*2+0x61]
  4158da:	ins    BYTE PTR es:[rdi],dx
  4158db:	ins    BYTE PTR es:[rdi],dx
  4158dc:	outs   dx,DWORD PTR ds:[rsi]
  4158dd:	movsxd edi,DWORD PTR [rdx+rsi*2+0x65]
  4158e1:	(bad)  
  4158e2:	ins    BYTE PTR es:[rdi],dx
  4158e3:	ins    BYTE PTR es:[rdi],dx
  4158e4:	outs   dx,DWORD PTR ds:[rsi]
  4158e5:	movsxd edi,DWORD PTR [rdx+riz*2+0x73]
  4158e9:	gs (bad) 
  4158eb:	jb     0x415950
  4158ed:	push   0x9205b29
  4158f2:	pop    rbp
  4158f3:	sub    bl,BYTE PTR [rax+rbp*1+0x0]
  4158f7:	jae    0x41596d
  4158f9:	fs ins BYTE PTR es:[rdi],dx
  4158fb:	imul   esp,DWORD PTR [rdx+0x2e],0x68
	...
  41590e:	add    BYTE PTR [rax],al
  415910:	jae    0x41598b
  415912:	jae    0x41598e
  415914:	pop    rdi
  415915:	jae    0x41598b
  415917:	fs ins BYTE PTR es:[rdi],dx
  415919:	imul   esp,DWORD PTR [rdx+0x5f],0x5f726f66
  415920:	jae    0x415997
  415922:	outs   dx,BYTE PTR ds:[rsi]
  415923:	add    BYTE PTR [rax],al
  415925:	add    BYTE PTR [rax],al
  415927:	add    BYTE PTR [rbx+0x2f],dh
  41592a:	gs js  0x4159a1
  41592d:	gs jb  0x41599e
  415930:	pop    rbx
  415931:	and    BYTE PTR [rcx],cl
  415933:	pop    rbp
  415934:	sub    ch,BYTE PTR [rcx+0x6e]
  415937:	je     0x415994
  415939:	and    BYTE PTR [rcx],cl
  41593b:	pop    rbp
  41593c:	sub    dh,BYTE PTR [rbx+0x74]
  41593f:	jb     0x4159ad
  415941:	outs   dx,BYTE PTR gs:[rsi]
  415943:	sub    BYTE PTR [rcx],ch
  415945:	cmp    ebp,DWORD PTR [rdi]
  415947:	gs js  0x4159be
  41594a:	gs jb  0x4159bb
  41594d:	and    BYTE PTR [rbp+0x6e],dh
  415950:	jae    0x4159bb
  415952:	outs   dx,BYTE PTR ds:[esi]
  415954:	gs and BYTE PTR fs:[rcx+0x6e],ch
  415959:	je     0x41597b
  41595b:	jae    0x4159d1
  41595d:	jb     0x4159cb
  41595f:	outs   dx,BYTE PTR gs:[rsi]
  415961:	sub    BYTE PTR [rcx],ch
  415963:	cmp    ebp,DWORD PTR [rdi]
  415965:	add    BYTE PTR [rax],al
  415967:	add    BYTE PTR [rbx+0x2f],dh
  41596a:	gs js  0x4159e1
  41596d:	gs jb  0x4159de
  415970:	pop    rbx
  415971:	and    BYTE PTR [rcx],cl
  415973:	pop    rbp
  415974:	sub    ch,BYTE PTR [rcx+0x6e]
  415977:	je     0x4159d4
  415979:	and    BYTE PTR [rcx],cl
  41597b:	pop    rbp
  41597c:	sub    ah,BYTE PTR [rsi+0x66]
  41597f:	jae    0x4159dc
  415981:	and    BYTE PTR [rcx],cl
  415983:	pop    rbp
  415984:	sub    ch,BYTE PTR [rax]
  415986:	ins    BYTE PTR es:[rdi],dx
  415987:	outs   dx,DWORD PTR ds:[rsi]
  415988:	outs   dx,BYTE PTR ds:[rsi]
  415989:	sub    DWORD PTR [ebx],edi
  41598c:	(bad)  
  41598d:	gs js  0x415a04
  415990:	gs jb  0x415a01
  415993:	and    BYTE PTR [rcx+0x6e],ch
  415996:	je     0x4159b8
  415998:	data16 data16 jae 0x4159c4
  41599c:	imul   ebp,DWORD PTR [rsi+0x74],0x2f3b29
  4159a3:	add    BYTE PTR [rax],al
  4159a5:	add    BYTE PTR [rax],al
  4159a7:	add    BYTE PTR [rbx+0x2f],dh
  4159aa:	jae    0x415a20
  4159ac:	jb     0x415a12
  4159ae:	jne    0x415a20
  4159b0:	sub    BYTE PTR [rbx+0x68],ah
  4159b3:	(bad)  
  4159b4:	jb     0x4159d6
  4159b6:	pop    rsp
  4159b7:	sub    dh,BYTE PTR [rbx+0x31]
  4159ba:	sub    DWORD PTR [rbx],edi
  4159bc:	(bad)  
  4159bd:	jae    0x415a33
  4159bf:	jb     0x415a25
  4159c1:	jne    0x415a33
  4159c3:	sub    BYTE PTR [rbx+0x6f],ah
  4159c6:	outs   dx,BYTE PTR ds:[rsi]
  4159c7:	jae    0x415a3d
  4159c9:	and    BYTE PTR [rbx+0x68],ah
  4159cc:	(bad)  
  4159cd:	jb     0x4159ef
  4159cf:	sub    dh,BYTE PTR [rbx+0x31]
  4159d2:	sub    DWORD PTR [rbx],edi
  4159d4:	(bad)  
  4159d5:	add    BYTE PTR [rdi],ch
  4159d7:	pop    rsi
  4159d8:	gs js  0x415a4f
  4159db:	gs jb  0x415a4c
  4159de:	and    BYTE PTR [rbx+0x68],ah
  4159e1:	(bad)  
  4159e2:	jb     0x415a08
  4159e4:	(bad)  
  4159e5:	rex.WRX add BYTE PTR [rax],r8b
  4159e8:	jae    0x415a19
  4159ea:	pop    rsi
  4159eb:	gs js  0x415a62
  4159ee:	gs jb  0x415a5f
  4159f1:	and    BYTE PTR [rbx+0x68],ah
  4159f4:	(bad)  
  4159f5:	jb     0x415a53
  4159f7:	sub    BYTE PTR [rsi+rbp*2+0x9],bl
  4159fb:	pop    rsp
  4159fc:	sub    ch,BYTE PTR [rbp+0x65]
  4159ff:	ins    DWORD PTR es:[rdi],dx
  415a00:	movsxd esp,DWORD PTR [rbx+0x70]
  415a03:	jns    0x415a2d
  415a05:	sub    DWORD PTR [rsp+rbx*2],ebp
  415a08:	sub    DWORD PTR [rdi+rbp*1],esp
  415a0b:	gs js  0x415a82
  415a0e:	gs jb  0x415a7f
  415a11:	and    BYTE PTR [rsi+0x6f],dh
  415a14:	imul   esp,DWORD PTR [rsp+rbx*2+0x31],0x5e2f002f
  415a1c:	gs js  0x415a93
  415a1f:	gs jb  0x415a90
  415a22:	and    BYTE PTR [rcx+0x6e],ch
  415a25:	je     0x415a4b
  415a27:	(bad)  
  415a28:	rex.WRX add BYTE PTR [rax],r8b
  415a2b:	add    BYTE PTR [rax],al
  415a2d:	add    BYTE PTR [rax],al
  415a2f:	add    BYTE PTR [rbx+0x2f],dh
  415a32:	pop    rsi
  415a33:	gs js  0x415aaa
  415a36:	gs jb  0x415aa7
  415a39:	and    BYTE PTR [rcx+0x6e],ch
  415a3c:	je     0x415a9a
  415a3e:	sub    BYTE PTR [rsi+rbp*2+0x9],bl
  415a42:	jae    0x415ab8
  415a44:	jb     0x415ab2
  415a46:	outs   dx,BYTE PTR gs:[rsi]
  415a48:	sub    BYTE PTR [rcx],ch
  415a4a:	sub    al,0x5c
  415a4c:	sub    DWORD PTR [rdi],ebp
  415a4e:	gs js  0x415ac5
  415a51:	gs jb  0x415ac2
  415a54:	and    BYTE PTR [rbx+0x69],dh
  415a57:	jp     0x415abe
  415a59:	pop    rdi
  415a5a:	je     0x415ab8
  415a5c:	xor    DWORD PTR [rdi],ebp
  415a5e:	add    BYTE PTR [rdi],ch
  415a60:	pop    rsi
  415a61:	or     DWORD PTR [rbx+0x74],esi
  415a64:	jb     0x415ad4
  415a66:	movsxd ebp,DWORD PTR [rbp+0x70]
  415a69:	sub    BYTE PTR [rcx],ch
  415a6b:	sub    al,0x24
  415a6d:	(bad)  
  415a6e:	rex.WRX add BYTE PTR [rbx+0x2f],r14b
  415a72:	pop    rsi
  415a73:	pop    rsp
  415a74:	sub    BYTE PTR [rcx],cl
  415a76:	jae    0x415aec
  415a78:	jb     0x415ae8
  415a7a:	movsxd ebp,DWORD PTR [rbp+0x70]
  415a7d:	sub    BYTE PTR [rcx],ch
  415a7f:	pop    rsp
  415a80:	sub    DWORD PTR [rsp+rbx*2],ebp
  415a83:	outs   dx,BYTE PTR ds:[rsi]
  415a84:	pop    rsp
  415a85:	sub    BYTE PTR [rcx],cl
  415a87:	jae    0x415afd
  415a89:	jb     0x415af7
  415a8b:	outs   dx,BYTE PTR gs:[rsi]
  415a8d:	sub    BYTE PTR [rcx],ch
  415a8f:	sub    al,0x5c
  415a91:	sub    DWORD PTR [rdi+rbp*1],esp
  415a94:	pop    rsp
  415a95:	xor    DWORD PTR [rbx],edi
  415a97:	pop    rsp
  415a98:	or     ah,BYTE PTR [rbp+0x78]
  415a9b:	je     0x415b02
  415a9d:	jb     0x415b0d
  415a9f:	and    BYTE PTR [rbp+0x6e],dh
  415aa2:	jae    0x415b0d
  415aa4:	outs   dx,BYTE PTR ds:[esi]
  415aa6:	gs and BYTE PTR fs:[rcx+0x6e],ch
  415aab:	je     0x415b09
  415aad:	or     bl,BYTE PTR [rdx+rsi*1+0x2f]
	...
  415abd:	add    BYTE PTR [rax],al
  415abf:	add    BYTE PTR [rdi+0x43],bl
  415ac2:	rex.WR
  415ac3:	push   r11
  415ac5:	push   rbx
  415ac6:	rex.WB
  415ac7:	rex.XB pop r15
  415ac9:	rex.B
  415aca:	rex.WRX push rbx
  415acc:	rex.WB pop r15
  415ace:	push   rsp
  415acf:	pop    rcx
  415ad0:	push   rax
  415ad1:	rex.RB push r11
	...
  415adf:	add    BYTE PTR [rbp+riz*2+0x73],dh
  415ae3:	je     0x415b4e
  415ae5:	outs   dx,BYTE PTR ds:[rsi]
  415ae6:	addr32 cs push 0x72747300
  415aed:	imul   ebp,DWORD PTR [rsi+0x67],0x682e
  415af4:	jae    0x415b6f
  415af6:	jae    0x415b6e
  415af8:	cmp    BYTE PTR ss:[rdi+0x73],bl
  415afc:	je     0x415b70
  415afe:	imul   ebp,DWORD PTR [rsi+0x67],0xa302500
  415b05:	jae    0x415b7b
  415b07:	(bad)  
  415b08:	je     0x415b73
  415b0a:	movsxd esp,DWORD PTR [rax]
  415b0c:	imul   ebp,DWORD PTR [rsi+0x74],0x74656720
  415b13:	jb     0x415b83
  415b15:	and    BYTE PTR gs:[eax],ch
  415b19:	sub    DWORD PTR [rbx],edi
  415b1b:	add    BYTE PTR [rsi+0x73],bl
  415b1e:	je     0x415b81
  415b20:	je     0x415b8b
  415b22:	movsxd esp,DWORD PTR [rax]
  415b24:	imul   ebp,DWORD PTR [rsi+0x74],0x5d09205b
  415b2b:	sub    esi,DWORD PTR [rbx+0x69]
  415b2e:	jp     0x415b95
  415b30:	cmp    eax,DWORD PTR [rax]
	...
  415b3e:	add    BYTE PTR [rax],al
  415b40:	jae    0x415bb6
  415b42:	(bad)  
  415b43:	je     0x415bae
  415b45:	movsxd esp,DWORD PTR [rax]
  415b47:	jbe    0x415bb8
  415b49:	imul   esp,DWORD PTR [rax+riz*1+0x67],0x6e727465
  415b51:	add    BYTE PTR gs:[edi+0x65],ah
  415b56:	je     0x415bca
  415b58:	outs   dx,BYTE PTR ds:[rsi]
  415b59:	add    BYTE PTR gs:[edx+0x65],dh
  415b5e:	addr32 gs js 0x415bd2
  415b62:	cs push 0x0
	...
  415b70:	jae    0x415be8
  415b72:	jb     0x415ba8
  415b74:	pop    rdi
  415b75:	jne    0x415be5
  415b77:	fs movsxd ebp,DWORD PTR gs:[rcx+riz*2+0x72]
  415b7d:	gs fs pop rdi
  415b80:	addr32 gs je 0x415bf6
  415b84:	outs   dx,BYTE PTR ds:[rsi]
  415b85:	add    BYTE PTR gs:[esi+0x6f],dh
  415b8a:	imul   esp,DWORD PTR [rax+riz*1+0x28],0x6928292a
  415b92:	outs   dx,BYTE PTR ds:[rsi]
  415b93:	je     0x415bbe
	...
  415b9d:	add    BYTE PTR [rax],al
  415b9f:	add    BYTE PTR [rsi+0x6f],dh
  415ba2:	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x2a5c285c
  415baa:	pop    rsp
  415bab:	sub    DWORD PTR [rax+rbp*1+0x5c],ebx
  415baf:	sub    DWORD PTR [rax],eax
  415bb1:	jae    0x415c2c
  415bb3:	jae    0x415be4
  415bb5:	jae    0x415c20
  415bb7:	outs   dx,BYTE PTR ds:[esi]
  415bb9:	(bad)  
  415bba:	ins    BYTE PTR es:[rdi],dx
  415bbb:	cs push 0x73000000
  415bc1:	jbe    0x415c35
  415bc3:	xor    al,0x5f
  415bc5:	jae    0x415c30
  415bc7:	addr32 push 0x6c646e61
  415bcd:	gs jb  0x415c2f
  415bd0:	je     0x415c4b
  415bd2:	jo     0x415c39
  415bd4:	add    BYTE PTR [rax],al
  415bd6:	add    BYTE PTR [rax],al
  415bd8:	jo     0x415c4c
  415bda:	outs   dx,DWORD PTR ds:[rsi]
  415bdb:	imul   bp,WORD PTR [rax+rbp*1+0x75],0x736e
  415be2:	imul   esp,DWORD PTR [rdi+0x6e],0x73206465
  415be9:	push   0x2074726f
  415bee:	sub    ch,BYTE PTR [rax+riz*1]
  415bf1:	jae    0x415c5c
  415bf3:	jp     0x415c5a
  415bf5:	pop    rdi
  415bf6:	je     0x415c24
  415bf8:	and    BYTE PTR [rcx+0x6e],ch
  415bfb:	je     0x415c29
  415bfd:	and    BYTE PTR [rbp+0x6e],dh
  415c00:	jae    0x415c6b
  415c02:	outs   dx,BYTE PTR ds:[esi]
  415c04:	gs and BYTE PTR fs:[rcx+0x6e],ch
  415c09:	je     0x415c34
	...
  415c3f:	add    BYTE PTR [rax+0x72],dh
  415c42:	outs   dx,DWORD PTR ds:[rsi]
  415c43:	imul   bp,WORD PTR [rsp+rbx*2+0x28],0x6e75
  415c4a:	jae    0x415cb5
  415c4c:	outs   dx,BYTE PTR ds:[esi]
  415c4e:	gs and BYTE PTR fs:[rbx+0x68],dh
  415c53:	outs   dx,DWORD PTR ds:[rsi]
  415c54:	jb     0x415cca
  415c56:	and    BYTE PTR [rdx+rbp*1+0x2c],bl
  415c5a:	and    BYTE PTR [rbp+0x6e],dh
  415c5d:	jae    0x415cc8
  415c5f:	outs   dx,BYTE PTR ds:[esi]
  415c61:	gs and BYTE PTR fs:[rcx+0x6e],ch
  415c66:	je     0x415c94
  415c68:	and    BYTE PTR [rbp+0x6e],dh
  415c6b:	jae    0x415cd6
  415c6d:	outs   dx,BYTE PTR ds:[esi]
  415c6f:	gs and BYTE PTR fs:[rcx+0x6e],ch
  415c74:	je     0x415ca2
  415c76:	and    BYTE PTR [rbp+0x6e],dh
  415c79:	jae    0x415ce4
  415c7b:	outs   dx,BYTE PTR ds:[esi]
  415c7d:	gs and BYTE PTR fs:[rcx+0x6e],ch
  415c82:	je     0x415ce0
  415c84:	sub    DWORD PTR [rax],eax
	...
  415c8e:	add    BYTE PTR [rax],al
  415c90:	jae    0x415d06
  415c92:	fs ins BYTE PTR es:[rdi],dx
  415c94:	imul   esp,DWORD PTR [rdx+0x2e],0x6e750068
  415c9b:	imul   esi,DWORD PTR [rbx+0x74],0x682e64
  415ca2:	add    BYTE PTR [rbx+0x76],dh
  415ca5:	jb     0x415cdb
  415ca7:	pop    rdi
  415ca8:	jo     0x415d1c
  415caa:	outs   dx,DWORD PTR ds:[rsi]
  415cab:	imul   bp,WORD PTR [rax+rax*1+0x67],0x7465
  415cb2:	movsxd esi,DWORD PTR [rdi+0x64]
  415cb5:	sub    BYTE PTR [rbx+0x68],ah
  415cb8:	(bad)  
  415cb9:	jb     0x415cdb
  415cbb:	sub    ch,BYTE PTR [rax+riz*1]
  415cbe:	jae    0x415d29
  415cc0:	jp     0x415d27
  415cc2:	pop    rdi
  415cc3:	je     0x415cee
	...
  415ccd:	add    BYTE PTR [rax],al
  415ccf:	add    BYTE PTR [rdi+0x65],ah
  415cd2:	je     0x415d37
  415cd4:	ja     0x415d3a
  415cd6:	pop    rsp
  415cd7:	sub    BYTE PTR [rbx+0x68],ah
  415cda:	(bad)  
  415cdb:	jb     0x415cfd
  415cdd:	pop    rsp
  415cde:	sub    ch,BYTE PTR [rax+riz*1]
  415ce1:	imul   ebp,DWORD PTR [rsi+0x74],0x295c
	...
  415d00:	jae    0x415d76
  415d02:	fs ins BYTE PTR es:[rdi],dx
  415d04:	imul   esp,DWORD PTR [rdx+0x2e],0x6e750068
  415d0b:	imul   esi,DWORD PTR [rbx+0x74],0x682e64
  415d12:	jo     0x415d86
  415d14:	outs   dx,DWORD PTR ds:[rsi]
  415d15:	je     0x415d86
  415d17:	je     0x415d92
  415d19:	jo     0x415d80
  415d1b:	jae    0x415d4b
  415d1d:	push   0x76730000
  415d22:	jb     0x415d58
  415d24:	pop    rdi
  415d25:	addr32 gs je 0x415d8c
  415d29:	ja     0x415d8f
  415d2b:	add    BYTE PTR [rdi],ch
  415d2d:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  415d31:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2a2e
  415d38:	jae    0x415dae
  415d3a:	fs pop rdi
  415d3c:	push   0x2f5f7264
  415d41:	add    BYTE PTR fs:[rax],al
	...
  415d50:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  415d54:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2a2e
  415d5b:	jae    0x415dd1
  415d5d:	fs pop rdi
  415d5f:	push   0x5f7264
  415d64:	jae    0x415dda
  415d66:	jb     0x415dd1
  415d68:	outs   dx,BYTE PTR ds:[rsi]
  415d69:	addr32 cs push 0x0
  415d70:	jae    0x415de8
  415d72:	jb     0x415da8
  415d74:	pop    rdi
  415d75:	imul   esi,DWORD PTR fs:[rbx+0x61],0x5f656c62
  415d7d:	outs   dx,DWORD PTR ds:[rsi]
  415d7e:	jo     0x415df4
  415d80:	add    BYTE PTR [rbp+0x6e],dh
  415d83:	jae    0x415dee
  415d85:	outs   dx,BYTE PTR ds:[esi]
  415d87:	gs and BYTE PTR fs:[rcx+0x6e],ch
  415d8c:	je     0x415dae
  415d8e:	outs   dx,BYTE PTR ds:[rsi]
  415d8f:	gs ja  0x415df7
  415d92:	jbe    0x415dcf
	...
  415da0:	pop    rsi
  415da1:	pop    rbx
  415da2:	and    BYTE PTR [rcx],cl
  415da4:	pop    rbp
  415da5:	sub    dh,BYTE PTR [rbp+0x6e]
  415da8:	jae    0x415e13
  415daa:	outs   dx,BYTE PTR ds:[esi]
  415dac:	gs and BYTE PTR fs:[rcx+0x6e],ch
  415db1:	je     0x415dd3
  415db3:	outs   dx,BYTE PTR ds:[rsi]
  415db4:	gs ja  0x415df2
  415db7:	add    BYTE PTR [rcx+rbp*2+0x6e],ch
  415dbb:	jne    0x415e35
  415dbd:	(bad)  
  415dbe:	jbe    0x415e34
  415dc0:	cs push 0x0
	...
  415dce:	add    BYTE PTR [rax],al
  415dd0:	jae    0x415e47
  415dd2:	jae    0x415e39
  415dd4:	pop    rdi
  415dd5:	ins    BYTE PTR es:[rdi],dx
  415dd6:	imul   ebp,DWORD PTR [rsi+0x75],0x74765f78
  415ddd:	pop    rdi
  415dde:	movsxd edi,DWORD PTR [rax+0x78]
  415de1:	add    BYTE PTR [rdi+0x5f],bl
  415de4:	push   rbx
  415de5:	rex.WB pop r10
  415de7:	rex.RB pop r15
  415de9:	push   rsp
  415dea:	pop    rcx
  415deb:	push   rax
  415dec:	rex.RB pop r15
  415dee:	pop    rdi
  415def:	and    BYTE PTR [rbx+0x74],dh
  415df2:	jb     0x415e60
  415df4:	outs   dx,BYTE PTR gs:[rsi]
  415df6:	sub    BYTE PTR [rcx],ch
  415df8:	cmp    esp,DWORD PTR [rip+0x31]        # 0x415e2f
  415dfe:	add    BYTE PTR [rax],al
  415e00:	imul   ebp,DWORD PTR [rsi+0x74],0x5d09205b
  415e07:	sub    dh,BYTE PTR [rbx+0x74]
  415e0a:	jb     0x415e78
  415e0c:	outs   dx,BYTE PTR gs:[rsi]
  415e0e:	pop    rsp
  415e0f:	sub    BYTE PTR [rcx+rbp*1+0x3b],bl
  415e13:	sub    BYTE PTR [rsi],ch
  415e15:	sub    ch,BYTE PTR [rcx]
  415e17:	add    BYTE PTR [rbx+0x74],dh
  415e1a:	jb     0x415e85
  415e1c:	outs   dx,BYTE PTR ds:[rsi]
  415e1d:	addr32 jae 0x415e4e
  415e20:	push   0x75730000
  415e25:	outs   dx,BYTE PTR ds:[rsi]
  415e26:	outs   dx,DWORD PTR ds:[rsi]
  415e27:	jae    0x415e88
  415e29:	jae    0x415e9f
  415e2b:	jb     0x415e99
  415e2d:	outs   dx,BYTE PTR gs:[rsi]
  415e2f:	add    BYTE PTR [rbx],ah
  415e31:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  415e38:	pop    rdi
  415e39:	movsxd esi,DWORD PTR [rax+0x6c]
  415e3c:	jne    0x415eb1
  415e3e:	jo     0x415eac
  415e40:	jne    0x415eb5
  415e42:	or     dh,BYTE PTR [rsi+0x6f]
  415e45:	imul   esp,DWORD PTR [rcx+rcx*1+0x28],0x6769732a
  415e4d:	outs   dx,BYTE PTR ds:[rsi]
  415e4e:	(bad)  
  415e4f:	ins    BYTE PTR es:[rdi],dx
  415e50:	sub    BYTE PTR [rsi],ch
  415e52:	cs sub DWORD PTR cs:[rcx],ebp
  415e56:	sub    BYTE PTR [rsi],ch
  415e58:	cs sub DWORD PTR cs:[rbx],edi
  415e5c:	or     ah,BYTE PTR [rbx]
  415e5e:	gs ins BYTE PTR es:[rdi],dx
  415e60:	jae    0x415ec7
  415e62:	or     ah,BYTE PTR [rip+0x65230a30]        # 0x65646898
  415e68:	outs   dx,BYTE PTR ds:[rsi]
  415e69:	imul   esp,DWORD PTR fs:[rsi+0x0],0x5e000000
  415e71:	jbe    0x415ee2
  415e73:	imul   esp,DWORD PTR [rcx+rcx*1+0x5c],0x732a5c28
  415e7b:	imul   esp,DWORD PTR [rdi+0x6e],0x285c6c61
  415e82:	pop    rsp
  415e83:	sub    DWORD PTR [rcx+rbp*1+0x5c],ebx
  415e87:	sub    BYTE PTR [rcx+rbp*1+0x3b],bl
  415e8b:	sub    al,BYTE PTR cs:[rax]
  415e8e:	add    BYTE PTR [rax],al
  415e90:	jae    0x415f0b
  415e92:	jae    0x415ec3
  415e94:	jae    0x415eff
  415e96:	outs   dx,BYTE PTR ds:[esi]
  415e98:	(bad)  
  415e99:	ins    BYTE PTR es:[rdi],dx
  415e9a:	cs push 0x67697300
  415ea0:	outs   dx,BYTE PTR ds:[rsi]
  415ea1:	(bad)  
  415ea2:	ins    BYTE PTR es:[rdi],dx
  415ea3:	cs push 0x75730000
  415ea9:	outs   dx,BYTE PTR ds:[rsi]
  415eaa:	pop    rdi
  415eab:	jae    0x415f16
  415ead:	outs   dx,BYTE PTR ds:[esi]
  415eaf:	(bad)  
  415eb0:	ins    BYTE PTR es:[rdi],dx
  415eb1:	add    BYTE PTR [rdi],ch
  415eb3:	pop    rsi
  415eb4:	jae    0x415f2a
  415eb6:	jb     0x415f2d
  415eb8:	movsxd esi,DWORD PTR [rdi+rbp*1+0x2c]
  415ebc:	(bad)  
  415ebd:	pop    rsi
  415ebe:	jge    0x415efb
  415ec0:	(bad)  
  415ec1:	jae    0x415ef2
  415ec3:	pop    rdi
  415ec4:	movsxd ebp,DWORD PTR [rsi+0x74]
  415ec7:	and    al,0x2f
  415ec9:	pop    rdi
  415eca:	movsxd ebp,DWORD PTR [rsi+0x74]
  415ecd:	cmp    ebp,DWORD PTR [rdi]
  415ecf:	add    BYTE PTR [rdi+0x63],bl
  415ed2:	outs   dx,BYTE PTR ds:[rsi]
  415ed3:	je     0x415ef9
	...
  415edd:	add    BYTE PTR [rax],al
  415edf:	add    BYTE PTR [rdx+0x70],dh
  415ee2:	movsxd esi,DWORD PTR [rbx+0x76]
  415ee5:	movsxd ebp,DWORD PTR [rdi]
  415ee7:	jb     0x415f5e
  415ee9:	jae    0x415f50
  415eeb:	jb     0x415f60
  415eed:	cs push 0x0
	...
  415eff:	add    BYTE PTR [rbx+0x75],dh
  415f02:	outs   dx,BYTE PTR ds:[rsi]
  415f03:	pop    rdi
  415f04:	jb     0x415f7b
  415f06:	jae    0x415f6d
  415f08:	jb     0x415f7d
  415f0a:	pop    rdi
  415f0b:	jae    0x415f72
  415f0d:	ins    DWORD PTR es:[rdi],dx
  415f0e:	imul   eax,DWORD PTR [rax],0x79742f73
  415f14:	jo     0x415f7b
  415f16:	fs gs pop bx
  415f1a:	and    BYTE PTR [rcx],cl
  415f1c:	pop    rbp
  415f1d:	movsxd ebp,DWORD PTR [rax+0x61]
  415f20:	jb     0x415f42
  415f22:	pop    rsp
  415f23:	sub    cl,BYTE PTR [rcx]
  415f25:	ins    DWORD PTR es:[rdi],dx
  415f26:	(bad)  
  415f27:	ins    BYTE PTR es:[rdi],dx
  415f28:	ins    BYTE PTR es:[rdi],dx
  415f29:	outs   dx,DWORD PTR ds:[rsi]
  415f2a:	movsxd ebx,DWORD PTR [rdi+0x74]
  415f2d:	(bad)  
  415f2e:	je     0x415fa9
  415f30:	jo     0x415f97
  415f32:	fs data16 and BYTE PTR gs:[rsi+0x6f],dh
  415f38:	imul   esp,DWORD PTR [rax+riz*1+0x5c],0x616d092a
  415f40:	ins    BYTE PTR es:[rdi],dx
  415f41:	ins    BYTE PTR es:[rdi],dx
  415f42:	outs   dx,DWORD PTR ds:[rsi]
  415f43:	movsxd ebx,DWORD PTR [rdi+0x74]
  415f46:	(bad)  
  415f47:	add    BYTE PTR [eax],al
  415f4a:	add    BYTE PTR [rax],al
  415f4c:	add    BYTE PTR [rax],al
  415f4e:	add    BYTE PTR [rax],al
  415f50:	jae    0x415f81
  415f52:	imul   ebp,DWORD PTR [rsi+0x74],0x5d09205b
  415f59:	pop    rbx
  415f5a:	and    BYTE PTR [rcx],cl
  415f5c:	pop    rbp
  415f5d:	sub    ah,BYTE PTR [rsi+0x72]
  415f60:	gs gs (bad) 
  415f63:	jbe    0x415fd4
  415f65:	imul   esp,DWORD PTR [rcx+rcx*1+0x66],0x2f656572
  415f6d:	add    BYTE PTR [eax],al
  415f70:	jae    0x415fa1
  415f72:	movsxd ebp,DWORD PTR [rax+0x61]
  415f75:	jb     0x415fd3
  415f77:	sub    BYTE PTR [rbx+0x20],bl
  415f7a:	or     DWORD PTR [rbp+0x2a],ebx
  415f7d:	pop    rsp
  415f7e:	sub    bl,BYTE PTR [rbx+0x20]
  415f81:	or     DWORD PTR [rbp+0x2a],ebx
  415f84:	ins    DWORD PTR es:[rdi],dx
  415f85:	(bad)  
  415f86:	ins    BYTE PTR es:[rdi],dx
  415f87:	ins    BYTE PTR es:[rdi],dx
  415f88:	outs   dx,DWORD PTR ds:[rsi]
  415f89:	movsxd ebx,DWORD PTR [rcx+rbp*1+0x2f]
  415f8d:	jbe    0x415ffe
  415f8f:	imul   esp,DWORD PTR [rsp+rbx*2+0x31],0x672f
  415f97:	add    BYTE PTR [rbx+0x2f],dh
  415f9a:	movsxd ebp,DWORD PTR [rax+0x61]
  415f9d:	jb     0x415ffb
  415f9f:	sub    BYTE PTR [rbx+0x20],bl
  415fa2:	or     DWORD PTR [rbp+0x2a],ebx
  415fa5:	pop    rsp
  415fa6:	sub    bl,BYTE PTR [rbx+0x20]
  415fa9:	or     DWORD PTR [rbp+0x2a],ebx
  415fac:	jb     0x416013
  415fae:	(bad)  
  415faf:	ins    BYTE PTR es:[rdi],dx
  415fb0:	ins    BYTE PTR es:[rdi],dx
  415fb1:	outs   dx,DWORD PTR ds:[rsi]
  415fb2:	movsxd ebx,DWORD PTR [rcx+rbp*1+0x2f]
  415fb6:	jbe    0x416027
  415fb8:	imul   esp,DWORD PTR [rsp+rbx*2+0x31],0x672f
  415fc0:	jae    0x415ff1
  415fc2:	movsxd ebp,DWORD PTR [rax+0x61]
  415fc5:	jb     0x416023
  415fc7:	sub    BYTE PTR [rbx+0x20],bl
  415fca:	or     DWORD PTR [rbp+0x2a],ebx
  415fcd:	pop    rsp
  415fce:	sub    bl,BYTE PTR [rbx+0x20]
  415fd1:	or     DWORD PTR [rbp+0x2a],ebx
  415fd4:	movsxd esp,DWORD PTR [rcx+0x6c]
  415fd7:	ins    BYTE PTR es:[rdi],dx
  415fd8:	outs   dx,DWORD PTR ds:[rsi]
  415fd9:	movsxd ebx,DWORD PTR [rcx+rbp*1+0x2f]
  415fdd:	jbe    0x41604e
  415fdf:	imul   esp,DWORD PTR [rsp+rbx*2+0x31],0x672f
	...
  415fef:	add    BYTE PTR [rdi+0x43],bl
  415ff2:	rex.WR
  415ff3:	push   r11
  415ff5:	push   rbx
  415ff6:	rex.WB
  415ff7:	rex.XB pop r15
  415ff9:	rex.B
  415ffa:	rex.WRX push rbx
  415ffc:	rex.WB pop r15
  415ffe:	push   rsp
  415fff:	pop    rcx
  416000:	push   rax
  416001:	rex.RB push r11
  416003:	add    BYTE PTR [rbp+0x61],ch
  416006:	ins    BYTE PTR es:[rdi],dx
  416007:	ins    BYTE PTR es:[rdi],dx
  416008:	outs   dx,DWORD PTR ds:[rsi]
  416009:	movsxd ebp,DWORD PTR [rsi]
  41600b:	push   0x75730000
  416010:	outs   dx,BYTE PTR ds:[rsi]
  416011:	pop    rdi
  416012:	ins    DWORD PTR es:[rdi],dx
  416013:	(bad)  
  416014:	ins    BYTE PTR es:[rdi],dx
  416015:	ins    BYTE PTR es:[rdi],dx
  416016:	outs   dx,DWORD PTR ds:[rsi]
  416017:	movsxd eax,DWORD PTR [rax]
  416019:	add    BYTE PTR [rax],al
  41601b:	add    BYTE PTR [rax],al
  41601d:	add    BYTE PTR [rax],al
  41601f:	add    BYTE PTR [rbx],ah
  416021:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  416028:	pop    rdi
  416029:	push   rbx
  41602a:	push   rsp
  41602b:	rex.R
  41602c:	rex.XB pop r15
  41602e:	pop    rdi
  41602f:	or     ah,BYTE PTR [rbx]
  416031:	and    BYTE PTR [rax],ah
  416033:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4320
  41603b:	push   r12
  41603d:	sub    BYTE PTR [rcx+0x2c],ah
  416040:	(bad)  
  416041:	sub    DWORD PTR [rax],esp
  416043:	(bad)  
  416044:	and    esp,DWORD PTR [rbx]
  416046:	(bad)  
  416047:	or     ah,BYTE PTR [rbx]
  416049:	gs ins BYTE PTR es:[rdi],dx
  41604b:	jae    0x4160b2
  41604d:	or     ah,BYTE PTR [rip+0x65230a30]        # 0x65646a83
  416053:	outs   dx,BYTE PTR ds:[rsi]
  416054:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
  41605c:	add    BYTE PTR [rax],al
  41605e:	add    BYTE PTR [rax],al
  416060:	pop    rsi
  416061:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  416065:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41606c:	sub    eax,DWORD PTR [rbx+0x41]
  41606f:	push   rsp
  416070:	pop    rsp
  416071:	sub    BYTE PTR [rcx+0x2c],ah
  416074:	(bad)  
  416075:	pop    rsp
  416076:	sub    DWORD PTR [rsi],ebp
  416078:	sub    al,BYTE PTR [rax]
  41607a:	add    BYTE PTR [rax],al
  41607c:	add    BYTE PTR [rax],al
  41607e:	add    BYTE PTR [rax],al
  416080:	jo     0x4160eb
  416082:	js     0x4160f6
  416084:	movsxd esi,DWORD PTR gs:[rdi+rbp*1+0x6d]
  416089:	gs ins DWORD PTR es:[rdi],dx
  41608b:	jbe    0x4160ee
  41608d:	jb     0x4160bd
  41608f:	push   0x75730000
  416094:	outs   dx,BYTE PTR ds:[rsi]
  416095:	pop    rdi
  416096:	movsxd esp,DWORD PTR [rcx+0x74]
  416099:	ins    DWORD PTR es:[rdi],dx
  41609a:	(bad)  
  41609b:	movsxd esi,DWORD PTR [rdx+0x6f]
  41609e:	add    BYTE PTR [rbx],ah
  4160a0:	imul   esp,DWORD PTR [rsi+0x25],0x31
	...
  4160af:	add    BYTE PTR [rbx],ah
  4160b1:	imul   esp,DWORD PTR [rsi+0x64],0x2e286665
  4160b8:	sub    bl,BYTE PTR [rsp+rdi*2+0x5c]
  4160bc:	jl     0x4160ec
  4160be:	sub    ch,BYTE PTR [rcx]
	...
  4160e0:	push   0x2f736673
  4160e5:	push   0x5f736673
  4160ea:	jae    0x41615c
  4160ec:	movsxd ebp,DWORD PTR gs:[rsi]
  4160ef:	push   0x66736800
  4160f4:	jae    0x416125
  4160f6:	imul   esi,DWORD PTR [rbx+0x6f],0x6570735f
  4160fd:	movsxd ebp,DWORD PTR [rsi]
  4160ff:	push   0x0
	...
  416110:	jae    0x416187
  416112:	outs   dx,BYTE PTR ds:[rsi]
  416113:	pop    rdi
  416114:	(bad)  
  416115:	outs   dx,DWORD PTR ds:[rsi]
  416116:	addr32 jne 0x41618c
  416119:	pop    rdi
  41611a:	imul   esp,DWORD PTR [rsi+0x64],0x23006665
  416121:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  416128:	pop    rdi
  416129:	movsxd esi,DWORD PTR [rax+0x6c]
  41612c:	jne    0x4161a1
  41612e:	jo     0x41619c
  416130:	jne    0x4161a5
  416132:	or     ah,BYTE PTR [rip+0x2e2e2831]        # 0x2e6f8969
  416138:	sub    DWORD PTR cs:[rbx],edi
  41613b:	and    eax,0x65230a32
  416140:	ins    BYTE PTR es:[rdi],dx
  416141:	jae    0x4161a8
  416143:	or     ah,BYTE PTR [rip+0x3b292831]        # 0x3b6a897a
  416149:	and    eax,0x65230a32
  41614e:	outs   dx,BYTE PTR ds:[rsi]
  41614f:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
  416157:	add    BYTE PTR [rax],ch
  416159:	sub    bl,BYTE PTR cs:[rax+rbp*1+0x5c]
  41615e:	sub    bl,BYTE PTR [rbx+0x61]
  416161:	sub    eax,0x615b5d7a
  416166:	sub    eax,0x2a5d5f7a
  41616b:	pop    rsp
  41616c:	sub    DWORD PTR [rcx],ebp
  41616e:	pop    rsp
  41616f:	sub    BYTE PTR [rcx+rbp*1+0x3b],bl
  416173:	sub    BYTE PTR [rsi],ch
  416175:	sub    ch,BYTE PTR [rcx]
  416177:	add    BYTE PTR [rdi+0x5f],bl
  41617a:	movsxd esi,DWORD PTR [rax+0x6c]
  41617d:	jne    0x4161f2
  41617f:	jo     0x4161ed
  416181:	jne    0x4161f6
	...
  41618f:	add    BYTE PTR [rax+rbp*1+0x5c],bl
  416193:	sub    bl,BYTE PTR [rbx+0x61]
  416196:	sub    eax,0x615b5d7a
  41619b:	sub    eax,0x2a5d5f7a
  4161a0:	pop    rsp
  4161a1:	sub    DWORD PTR [rax+rbp*1+0x5c],ebx
  4161a5:	sub    DWORD PTR [rax],eax
	...
  4161bf:	add    BYTE PTR [rdx+0x70],dh
  4161c2:	movsxd ebp,DWORD PTR [rdi]
  4161c4:	(bad)  
  4161c5:	jne    0x41623b
  4161c7:	push   0x7200682e
  4161cc:	jo     0x416231
  4161ce:	(bad)  
  4161cf:	movsxd ebp,DWORD PTR [rsi+rbp*2+0x74]
  4161d3:	cs push 0x63707200
  4161d9:	(bad)  
  4161da:	jae    0x416252
  4161dc:	movsxd ebp,DWORD PTR [rsi]
  4161de:	push   0x63707200
  4161e3:	(bad)  
  4161e4:	js     0x41624a
  4161e6:	jb     0x416216
  4161e8:	push   0x75730000
  4161ed:	outs   dx,BYTE PTR ds:[rsi]
  4161ee:	pop    rdi
  4161ef:	(bad)  
  4161f0:	jne    0x416266
  4161f2:	push   0x6f72705f
  4161f7:	je     0x416268
  4161f9:	add    BYTE PTR [rbx+0x74],dh
  4161fc:	jb     0x416273
  4161fe:	movsxd esi,DWORD PTR [rax+riz*1+0x73]
  416202:	outs   dx,DWORD PTR ds:[rsi]
  416203:	movsxd ebp,DWORD PTR [rbx+0x61]
  416206:	fs fs jb 0x416245
  41620a:	or     ah,BYTE PTR [rip+0x30]        # 0x416240
  416210:	jae    0x416286
  416212:	jb     0x416289
  416214:	movsxd esi,DWORD PTR [rax+riz*1+0x73]
  416218:	outs   dx,DWORD PTR ds:[rsi]
  416219:	movsxd ebp,DWORD PTR [rbx+0x61]
  41621c:	fs fs jb 0x41625b
  416220:	or     al,BYTE PTR [rax]
  416222:	cmp    al,0x73
  416224:	jns    0x416299
  416226:	(bad)  
  416227:	jae    0x416298
  416229:	movsxd ebp,DWORD PTR [rbx+0x65]
  41622c:	je     0x41625c
  41622e:	push   0x3e
	...
  41623f:	add    BYTE PTR [rsi+0x2e],bl
  416242:	sub    ah,BYTE PTR [rcx+0x75]
  416245:	je     0x4162af
  416247:	fs gs jae 0x4162aa
  41624b:	movsxd esi,DWORD PTR [rdx+0x65]
  41624e:	(bad)  
  41624f:	je     0x4162b6
  416251:	sub    dh,BYTE PTR cs:[rbx+0x74]
  416255:	jb     0x4162cc
  416257:	movsxd esi,DWORD PTR [rax+riz*1+0x73]
  41625b:	outs   dx,DWORD PTR ds:[rsi]
  41625c:	movsxd ebp,DWORD PTR [rbx+0x61]
  41625f:	fs fs jb 0x4162be
  416263:	pop    rsi
  416264:	pop    rdi
  416265:	pop    rbp
  416266:	add    BYTE PTR [rdx+0x70],dh
  416269:	movsxd ebp,DWORD PTR [rdi]
  41626b:	(bad)  
  41626c:	jne    0x4162e2
  41626e:	push   0x682e
	...
  41627f:	add    BYTE PTR [rbx+0x74],dh
  416282:	jb     0x4162f9
  416284:	movsxd esi,DWORD PTR [rdi+rbx*2+0x73]
  416288:	outs   dx,DWORD PTR ds:[rsi]
  416289:	movsxd ebp,DWORD PTR [rbx+0x61]
  41628c:	fs fs jb 0x416290
  416290:	jae    0x416306
  416292:	jb     0x416309
  416294:	movsxd esi,DWORD PTR [rax+riz*1+0x5f]
  416298:	pop    rdi
  416299:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x3b73
  4162a0:	or     ah,BYTE PTR [rip+0x30]        # 0x4162d6
	...
  4162be:	add    BYTE PTR [rax],al
  4162c0:	pop    rsi
  4162c1:	sub    bh,BYTE PTR cs:[rax+0x64]
  4162c5:	jb     0x41633a
  4162c7:	je     0x41632d
  4162c9:	imul   ebp,DWORD PTR [rdi+0x5f],0x61657263
  4162d0:	je     0x416337
  4162d2:	sub    dh,BYTE PTR cs:[rbx+0x74]
  4162d6:	jb     0x41634d
  4162d8:	movsxd esi,DWORD PTR [rax+riz*1+0x5f]
  4162dc:	pop    rdi
  4162dd:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x73
  4162e4:	jb     0x416356
  4162e6:	movsxd ebp,DWORD PTR [rdi]
  4162e8:	js     0x41634e
  4162ea:	jb     0x41631a
  4162ec:	push   0x74730000
  4162f1:	jb     0x416368
  4162f3:	movsxd esi,DWORD PTR [rdi+rbx*2+0x66]
  4162f7:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x64203125
  4162ff:	imul   bp,WORD PTR gs:[rsi+0x65],0x2864
  416306:	pop    rdi
  416307:	pop    rdi
  416308:	push   rbx
  416309:	push   rsp
  41630a:	push   rdx
  41630b:	rex.WB
  41630c:	rex.XB push r12
  41630e:	pop    rdi
  41630f:	rex.B
  416310:	rex.WRX push rbx
  416312:	rex.WB pop r15
  416314:	pop    rdi
  416315:	sub    DWORD PTR [rax],eax
	...
  41631f:	add    BYTE PTR [rbx+0x74],dh
  416322:	movsxd ebx,DWORD PTR fs:[rdi+0x30]
  416326:	pop    rdi
  416327:	imul   ebp,DWORD PTR [rsi+0x5f],0x74737973
  41632e:	gs ins DWORD PTR es:[rdi],dx
  416330:	pop    rdi
  416331:	push   0x65646165
  416336:	jb     0x4163ab
	...
  416340:	pop    rsi
  416341:	sub    BYTE PTR [rbx+0x20],bl
  416344:	or     DWORD PTR [rbp+0x2a],ebx
  416347:	and    ebx,DWORD PTR [rbx+0x20]
  41634a:	or     DWORD PTR [rbp+0x2a],ebx
  41634d:	imul   esp,DWORD PTR [rsi+0x2e],0x5f28292a
  416354:	pop    rdi
  416355:	push   rbx
  416356:	push   rsp
  416357:	rex.R
  416358:	rex.XB pop r15
  41635a:	pop    rdi
  41635b:	pop    rbx
  41635c:	and    BYTE PTR [rcx],cl
  41635e:	pop    rbp
  41635f:	sub    ah,BYTE PTR [rcx]
  416361:	cmp    eax,0x5d09205b
  416366:	sub    dh,BYTE PTR [rax]
  416368:	jl     0x4163c9
  41636a:	pop    rdi
  41636b:	push   rbx
  41636c:	push   rsp
  41636d:	rex.R
  41636e:	rex.XB pop r15
  416370:	pop    rdi
  416371:	pop    rbx
  416372:	and    BYTE PTR [rcx],cl
  416374:	pop    rbp
  416375:	sub    bh,BYTE PTR [rip+0x9205b3d]        # 0x961beb8
  41637b:	pop    rbp
  41637c:	sub    dh,BYTE PTR [rcx]
  41637e:	jl     0x4163df
  416380:	pop    rdi
  416381:	push   rbx
  416382:	push   rsp
  416383:	rex.R
  416384:	rex.XB pop r15
  416386:	pop    rdi
  416387:	pop    rbx
  416388:	and    BYTE PTR [rcx],cl
  41638a:	pop    rbp
  41638b:	sub    ch,BYTE PTR [rip+0x5d09205b]        # 0x5d4a83ec
  416391:	sub    dh,BYTE PTR [rax]
  416393:	pop    rbx
  416394:	and    BYTE PTR [rcx],cl
  416396:	pop    rbp
  416397:	sub    bh,BYTE PTR [rip+0x9205b3d]        # 0x961beda
  41639d:	pop    rbp
  41639e:	sub    dh,BYTE PTR [rcx]
  4163a0:	jl     0x416401
  4163a2:	pop    rdi
  4163a3:	push   rbx
  4163a4:	push   rsp
  4163a5:	rex.R
  4163a6:	rex.XB pop r15
  4163a8:	pop    rdi
  4163a9:	pop    rbx
  4163aa:	and    BYTE PTR [rcx],cl
  4163ac:	pop    rbp
  4163ad:	sub    ch,BYTE PTR [rip+0x5d09205b]        # 0x5d4a840e
  4163b3:	sub    dh,BYTE PTR [rax]
  4163b5:	pop    rbx
  4163b6:	and    BYTE PTR [rcx],cl
  4163b8:	pop    rbp
  4163b9:	sub    ah,BYTE PTR [rcx]
  4163bb:	cmp    eax,0x5d09205b
  4163c0:	sub    dh,BYTE PTR [rax]
  4163c2:	sub    DWORD PTR [rax],eax
	...
  4163d0:	jae    0x416446
  4163d2:	jb     0x41643d
  4163d4:	movsxd esi,DWORD PTR [rdi+rbx*2+0x61]
  4163d8:	outs   dx,BYTE PTR ds:[rsi]
  4163d9:	jae    0x416444
  4163db:	pop    rdi
  4163dc:	outs   dx,DWORD PTR ds:[rsi]
  4163dd:	outs   dx,BYTE PTR ds:[rsi]
  4163de:	ins    BYTE PTR es:[rdi],dx
  4163df:	jns    0x4163e1
  4163e1:	and    eax,0x64212031
  4163e6:	imul   bp,WORD PTR gs:[rsi+0x65],0x2864
  4163ed:	pop    rdi
  4163ee:	pop    rdi
  4163ef:	push   rbx
  4163f0:	push   rsp
  4163f1:	push   rdx
  4163f2:	rex.WB
  4163f3:	rex.XB push r12
  4163f5:	pop    rdi
  4163f6:	rex.B
  4163f7:	rex.WRX push rbx
  4163f9:	rex.WB pop r15
  4163fb:	pop    rdi
  4163fc:	sub    DWORD PTR [rax],eax
  4163fe:	add    BYTE PTR [rax],al
  416400:	jae    0x416476
  416402:	movsxd ebx,DWORD PTR fs:[rdi+0x30]
  416406:	pop    rdi
  416407:	imul   ebp,DWORD PTR [rsi+0x5f],0x74737973
  41640e:	gs ins DWORD PTR es:[rdi],dx
  416410:	pop    rdi
  416411:	push   0x65646165
  416416:	jb     0x41648b
	...
  416440:	pop    rsi
  416441:	sub    BYTE PTR [rbx+0x20],bl
  416444:	or     DWORD PTR [rbp+0x2a],ebx
  416447:	sub    BYTE PTR [rax+rbp*1+0x7c],bl
  41644b:	es es jl 0x4164ab
  41644f:	jl     0x4164ad
  416451:	jl     0x41647c
  416453:	sub    BYTE PTR [rbx+0x20],bl
  416456:	or     DWORD PTR [rax],ebp
  416458:	pop    rbp
  416459:	sub    ah,BYTE PTR [rcx]
  41645b:	sub    bl,BYTE PTR [rbx+0x20]
  41645e:	or     DWORD PTR [rbp+0x2a],ebx
  416461:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5c64
  416469:	sub    BYTE PTR [rbx+0x61],bl
  41646c:	sub    eax,0x5a2d417a
  416471:	pop    rdi
  416472:	xor    BYTE PTR [rip+0x5c2b5d39],ch        # 0x5c6cc1b1
  416478:	sub    DWORD PTR [rbx+0x20],ebx
  41647b:	or     DWORD PTR [rbp+0x2a],ebx
  41647e:	pop    rbx
  41647f:	jl     0x4164a7
  416481:	pop    rbp
  416482:	pop    rbx
  416483:	jl     0x4164ab
  416485:	pop    rbp
  416486:	sub    DWORD PTR [rdx],ebp
  416488:	pop    rbx
  416489:	and    BYTE PTR [rcx],cl
  41648b:	sub    BYTE PTR [rbp+0x2a],bl
  41648e:	sub    DWORD PTR [rax],ebp
  416490:	pop    rdi
  416491:	pop    rdi
  416492:	push   rbx
  416493:	push   rsp
  416494:	rex.R
  416495:	rex.XB pop r15
  416497:	pop    rdi
  416498:	pop    rbx
  416499:	and    BYTE PTR [rcx],cl
  41649b:	pop    rbp
  41649c:	sub    ch,BYTE PTR [rax]
  41649e:	jl     0x4164cd
  4164a0:	pop    rbx
  4164a1:	and    BYTE PTR [rcx],cl
  4164a3:	pop    rbp
  4164a4:	sub    dh,BYTE PTR [rax]
  4164a6:	pop    rbx
  4164a7:	and    BYTE PTR [rcx],cl
  4164a9:	pop    rbp
  4164aa:	sub    ch,BYTE PTR [rcx]
  4164ac:	cmp    eax,0x9205b3d
  4164b1:	pop    rbp
  4164b2:	sub    dh,BYTE PTR [rax]
  4164b4:	sub    DWORD PTR [rax],eax
	...
  4164be:	add    BYTE PTR [rax],al
  4164c0:	ins    DWORD PTR es:[rdi],dx
  4164c1:	(bad)  
  4164c2:	je     0x41652c
  4164c4:	cs push 0x6d696c00
  4164ca:	imul   esi,DWORD PTR [rbx+rsi*2+0x2e],0x74730068
  4164d2:	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x69730068
  4164da:	outs   dx,BYTE PTR ds:[esi]
  4164dc:	(bad)  
  4164dd:	ins    BYTE PTR es:[rdi],dx
  4164de:	cs push 0x64747300
  4164e4:	ins    BYTE PTR es:[rdi],dx
  4164e5:	imul   esp,DWORD PTR [rdx+0x2e],0x79730068
  4164ec:	jae    0x41651d
  4164ee:	jae    0x416559
  4164f0:	outs   dx,BYTE PTR ds:[esi]
  4164f2:	(bad)  
  4164f3:	ins    BYTE PTR es:[rdi],dx
  4164f4:	cs push 0x6d697400
  4164fa:	gs cs push 0x73000000
  416501:	je     0x416575
  416503:	imul   esp,DWORD PTR [rbx+0x74],0x736e615f
  41650a:	imul   ebx,DWORD PTR [rdi+0x6e],0x635f746f
  416511:	je     0x416577
	...
  41651f:	add    BYTE PTR [rbx+0x74],dh
  416522:	movsxd ebx,DWORD PTR fs:[rdi+0x30]
  416526:	pop    rdi
  416527:	imul   ebp,DWORD PTR [rsi+0x5f],0x74737973
  41652e:	gs ins DWORD PTR es:[rdi],dx
  416530:	pop    rdi
  416531:	push   0x65646165
  416536:	jb     0x4165ab
	...
  416540:	pop    rdi
  416541:	pop    rdi
  416542:	push   rbx
  416543:	rex.XB
  416544:	rex.WRXB pop r15
  416546:	push   rsi
  416547:	rex.RB push r10
  416549:	push   rbx
  41654a:	rex.WB
  41654b:	rex.WRXB
  41654c:	rex.WRX pop rdi
  41654e:	pop    rdi
  41654f:	sub    bl,BYTE PTR cs:[rdi+0x5f]
  416553:	push   rbx
  416554:	push   rsp
  416555:	rex.R
  416556:	rex.XB pop r15
  416558:	pop    rdi
  416559:	and    BYTE PTR [rcx],ah
  41655b:	cmp    eax,0x3120
  416560:	rex.RXB
  416561:	rex.WRX push rbp
  416563:	and    BYTE PTR [rcx+0x6e],ah
  416566:	and    BYTE PTR fs:[rbp+0x49],cl
  41656a:	push   rax
  41656b:	push   rbx
  41656c:	and    BYTE PTR [rbx+0x20],al
  41656f:	movsxd ebp,DWORD PTR [rdi+0x6d]
  416572:	jo     0x4165dd
  416574:	ins    BYTE PTR es:[rdi],dx
  416575:	gs jb  0x4165eb
  416578:	and    BYTE PTR [rbp+riz*2+0x66],ah
  41657c:	imul   ebp,DWORD PTR [rsi+0x65],0x535f5f20
  416583:	push   rsp
  416584:	rex.R
  416585:	rex.XB pop r15
  416587:	pop    rdi
  416588:	and    BYTE PTR [rcx+rbp*2+0x66],ah
  41658c:	data16 gs jb 0x4165f5
  416590:	outs   dx,BYTE PTR ds:[rsi]
  416591:	je     0x4165ff
  416593:	jns    0x416595
	...
  4165bd:	add    BYTE PTR [rax],al
  4165bf:	add    BYTE PTR [rsi+0x28],bl
  4165c2:	pop    rbx
  4165c3:	and    BYTE PTR [rcx],cl
  4165c5:	pop    rbp
  4165c6:	sub    ah,BYTE PTR [rbx]
  4165c8:	pop    rbx
  4165c9:	and    BYTE PTR [rcx],cl
  4165cb:	pop    rbp
  4165cc:	sub    ch,BYTE PTR [rcx+0x66]
  4165cf:	sub    ch,BYTE PTR cs:[rcx]
  4165d2:	sub    BYTE PTR [rcx],ah
  4165d4:	pop    rdi
  4165d5:	pop    rdi
  4165d6:	push   rbx
  4165d7:	push   rsp
  4165d8:	rex.R
  4165d9:	rex.XB pop r15
  4165db:	pop    rdi
  4165dc:	jl     0x41663d
  4165de:	pop    rdi
  4165df:	push   rbx
  4165e0:	push   rsp
  4165e1:	rex.R
  4165e2:	rex.XB pop r15
  4165e4:	pop    rdi
  4165e5:	pop    rbx
  4165e6:	and    BYTE PTR [rcx],cl
  4165e8:	pop    rbp
  4165e9:	sub    bh,BYTE PTR [rip+0x9205b3d]        # 0x961c12c
  4165ef:	pop    rbp
  4165f0:	sub    dh,BYTE PTR [rax]
  4165f2:	jl     0x416653
  4165f4:	pop    rdi
  4165f5:	push   rbx
  4165f6:	push   rsp
  4165f7:	rex.R
  4165f8:	rex.XB pop r15
  4165fa:	pop    rdi
  4165fb:	pop    rbx
  4165fc:	and    BYTE PTR [rcx],cl
  4165fe:	pop    rbp
  4165ff:	sub    ah,BYTE PTR [rcx]
  416601:	cmp    eax,0x5d09205b
  416606:	sub    dh,BYTE PTR [rcx]
  416608:	jl     0x416669
  41660a:	pop    rdi
  41660b:	push   rbx
  41660c:	push   rsp
  41660d:	rex.R
  41660e:	rex.XB pop r15
  416610:	pop    rdi
  416611:	pop    rbx
  416612:	and    BYTE PTR [rcx],cl
  416614:	pop    rbp
  416615:	sub    ch,BYTE PTR [rip+0x5d09205b]        # 0x5d4a8676
  41661b:	sub    dh,BYTE PTR [rax]
  41661d:	pop    rbx
  41661e:	and    BYTE PTR [rcx],cl
  416620:	pop    rbp
  416621:	sub    bh,BYTE PTR [rip+0x9205b3d]        # 0x961c164
  416627:	pop    rbp
  416628:	sub    dh,BYTE PTR [rax]
  41662a:	sub    DWORD PTR [rax],eax
  41662c:	add    BYTE PTR [rax],al
  41662e:	add    BYTE PTR [rax],al
  416630:	jae    0x4166a6
  416632:	jb     0x41669d
  416634:	movsxd esi,DWORD PTR [rdi+rbx*2+0x61]
  416638:	outs   dx,BYTE PTR ds:[rsi]
  416639:	jae    0x4166a4
  41663b:	pop    rdi
  41663c:	outs   dx,BYTE PTR ds:[rsi]
  41663d:	outs   dx,DWORD PTR ds:[rsi]
  41663e:	je     0x416640
  416640:	jae    0x416682
  416642:	pop    rbx
  416643:	and    BYTE PTR [rcx],cl
  416645:	pop    rbp
  416646:	jbe    0x4166a9
  416648:	pop    rdi
  416649:	ins    BYTE PTR es:[rdi],dx
  41664a:	imul   esi,DWORD PTR [rbx+0x74],0x205b285c
  416651:	or     DWORD PTR [rcx],ebp
  416653:	pop    rbp
  416654:	pop    rsp
  416655:	sub    DWORD PTR [rax+0x20],eax
  416658:	pop    rdi
  416659:	pop    rdi
  41665a:	outs   dx,BYTE PTR ds:[esi]
  41665c:	jne    0x4166c1
  41665e:	pop    rdi
  41665f:	jbe    0x4166c2
  416661:	pop    rdi
  416662:	ins    BYTE PTR es:[rdi],dx
  416663:	imul   esi,DWORD PTR [rbx+0x74],0xa40315c
  41666a:	jae    0x4166ac
  41666c:	sub    BYTE PTR [rsi+0x61],dh
  41666f:	pop    rdi
  416670:	ins    BYTE PTR es:[rdi],dx
  416671:	imul   esi,DWORD PTR [rbx+0x74],0x28402629
  416678:	pop    rdi
  416679:	pop    rdi
  41667a:	outs   dx,BYTE PTR ds:[esi]
  41667c:	jne    0x4166e1
  41667e:	pop    rdi
  41667f:	jbe    0x4166e2
  416681:	pop    rdi
  416682:	ins    BYTE PTR es:[rdi],dx
  416683:	imul   esi,DWORD PTR [rbx+0x74],0x40265c29
  41668a:	or     dh,BYTE PTR [rbx+0x40]
  41668d:	and    BYTE PTR [rdi+0x56],bl
  416690:	pop    r15
  416692:	rex.WR
  416693:	rex.WB push r11
  416695:	push   rsp
  416696:	pop    rdi
  416697:	sub    DWORD PTR [rcx],ebp
  416699:	cmp    eax,DWORD PTR [rax+0x20]
  41669c:	pop    rdi
  41669d:	pop    rdi
  41669e:	outs   dx,BYTE PTR ds:[esi]
  4166a0:	jne    0x416705
  4166a2:	pop    rdi
  4166a3:	jbe    0x416706
  4166a5:	pop    rdi
  4166a6:	ins    BYTE PTR es:[rdi],dx
  4166a7:	imul   esi,DWORD PTR [rbx+0x74],0x403b2929
  4166ae:	or     dh,BYTE PTR [rbx+0x40]
  4166b1:	and    BYTE PTR [rdi+0x5f],bl
  4166b4:	push   rsi
  4166b5:	pop    r15
  4166b7:	rex.WR
  4166b8:	rex.WB push r11
  4166ba:	push   rsp
  4166bb:	pop    rdi
  4166bc:	pop    rdi
  4166bd:	sub    DWORD PTR [rcx],ebp
  4166bf:	cmp    eax,DWORD PTR [rax+0x20]
  4166c2:	pop    rdi
  4166c3:	pop    rdi
  4166c4:	outs   dx,BYTE PTR ds:[esi]
  4166c6:	jne    0x41672b
  4166c8:	pop    rdi
  4166c9:	jbe    0x41672c
  4166cb:	pop    rdi
  4166cc:	ins    BYTE PTR es:[rdi],dx
  4166cd:	imul   esi,DWORD PTR [rbx+0x74],0x403b2929
  4166d4:	or     dh,BYTE PTR [rbx+0x40]
  4166d7:	and    BYTE PTR [rsi+0x61],dh
  4166da:	pop    rdi
  4166db:	ins    BYTE PTR es:[rdi],dx
  4166dc:	imul   esi,DWORD PTR [rbx+0x74],0x5f5f2040
  4166e3:	outs   dx,BYTE PTR ds:[rsi]
  4166e4:	outs   dx,DWORD PTR ds:[rsi]
  4166e5:	je     0x416746
  4166e7:	jbe    0x41674a
  4166e9:	pop    rdi
  4166ea:	ins    BYTE PTR es:[rdi],dx
  4166eb:	imul   esi,DWORD PTR [rbx+0x74],0xa405f5f
  4166f2:	jae    0x416734
  4166f4:	pop    rsp
  4166f5:	sub    dh,BYTE PTR [rsi+0x61]
  4166f8:	pop    rdi
  4166f9:	ins    BYTE PTR es:[rdi],dx
  4166fa:	imul   esi,DWORD PTR [rbx+0x74],0x5f5f2a40
  416701:	outs   dx,BYTE PTR ds:[rsi]
  416702:	outs   dx,DWORD PTR ds:[rsi]
  416703:	je     0x416764
  416705:	jbe    0x416768
  416707:	pop    rdi
  416708:	ins    BYTE PTR es:[rdi],dx
  416709:	imul   esi,DWORD PTR [rbx+0x74],0xa405f5f
  416710:	jae    0x416752
  416712:	and    BYTE PTR [rdi+0x5f],bl
  416715:	jbe    0x416778
  416717:	pop    rdi
  416718:	ins    BYTE PTR es:[rdi],dx
  416719:	imul   esi,DWORD PTR [rbx+0x74],0x5f204029
  416720:	pop    rdi
  416721:	outs   dx,BYTE PTR ds:[esi]
  416723:	jne    0x416788
  416725:	pop    rdi
  416726:	jbe    0x416789
  416728:	pop    rdi
  416729:	ins    BYTE PTR es:[rdi],dx
  41672a:	imul   esi,DWORD PTR [rbx+0x74],0x730a4029
  416731:	rex je 0x4167ad
  416734:	jo     0x41679b
  416736:	fs gs pop bx
  41673a:	and    BYTE PTR [rcx],cl
  41673c:	pop    rbp
  41673d:	pop    rsp
  41673e:	sub    BYTE PTR [rsi],ch
  416740:	sub    bl,BYTE PTR [rcx+rbp*1+0x5b]
  416744:	and    BYTE PTR [rcx],cl
  416746:	pop    rbp
  416747:	jbe    0x4167aa
  416749:	pop    rdi
  41674a:	ins    BYTE PTR es:[rdi],dx
  41674b:	imul   esi,DWORD PTR [rbx+0x74],0x5d09205b
  416752:	sub    bh,BYTE PTR [rbx]
  416754:	rex je 0x4167d0
  416757:	jo     0x4167be
  416759:	fs data16 and BYTE PTR gs:[rcx+rsi*1+0x20],bl
  416760:	pop    rdi
  416761:	pop    rdi
  416762:	outs   dx,BYTE PTR ds:[rsi]
  416763:	outs   dx,DWORD PTR ds:[rsi]
  416764:	je     0x4167c5
  416766:	jbe    0x4167c9
  416768:	pop    rdi
  416769:	ins    BYTE PTR es:[rdi],dx
  41676a:	imul   esi,DWORD PTR [rbx+0x74],0x403b5f5f
  416771:	or     dh,BYTE PTR [rbx+0x40]
  416774:	je     0x4167ef
  416776:	jo     0x4167dd
  416778:	fs gs pop bx
  41677c:	and    BYTE PTR [rcx],cl
  41677e:	pop    rbp
  41677f:	sub    bl,BYTE PTR [rdi+0x5f]
  416782:	jbe    0x4167e5
  416784:	pop    rdi
  416785:	ins    BYTE PTR es:[rdi],dx
  416786:	imul   esi,DWORD PTR [rbx+0x74],0x74405f5f
  41678d:	jns    0x4167ff
  41678f:	gs fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  416796:	outs   dx,BYTE PTR ds:[esi]
  416798:	jne    0x4167fd
  41679a:	pop    rdi
  41679b:	jbe    0x4167fe
  41679d:	pop    rdi
  41679e:	ins    BYTE PTR es:[rdi],dx
  41679f:	imul   esi,DWORD PTR [rbx+0x74],0x40730a40
  4167a6:	rex.RXB
  4167a7:	rex.WRX push rbp
  4167a9:	rex.XB pop r15
  4167ab:	push   rsi
  4167ac:	pop    r15
  4167ae:	rex.WR
  4167af:	rex.WB push r11
  4167b1:	push   rsp
  4167b2:	rex
  4167b3:	rex.RXB
  4167b4:	rex.WRX push rbp
  4167b6:	rex.XB pop r15
  4167b8:	push   rsi
  4167b9:	(bad)  
  4167ba:	pop    rdi
  4167bb:	rex.WR
  4167bc:	rex.WB push r11
  4167be:	push   rsp
  4167bf:	or     sil,BYTE PTR [rbx+0x40]
  4167c3:	pop    rdi
  4167c4:	push   rsi
  4167c5:	pop    r15
  4167c7:	rex.WR
  4167c8:	rex.WB push r11
  4167ca:	push   rsp
  4167cb:	pop    rdi
  4167cc:	rex.R
  4167cd:	rex.RB
  4167ce:	rex.RX
  4167cf:	rex.WB
  4167d0:	rex.WRX
  4167d1:	rex.RB
  4167d2:	rex.R
  4167d3:	rex pop rdi
  4167d5:	push   rsi
  4167d6:	(bad)  
  4167d7:	pop    rdi
  4167d8:	rex.WR
  4167d9:	rex.WB push r11
  4167db:	push   rsp
  4167dc:	pop    rdi
  4167dd:	rex.R
  4167de:	rex.RB
  4167df:	rex.RX
  4167e0:	rex.WB
  4167e1:	rex.WRX
  4167e2:	rex.RB
  4167e3:	rex.R
  4167e4:	or     sil,BYTE PTR [rbx+0x40]
  4167e8:	pop    rdi
  4167e9:	rex.WRX
  4167ea:	rex.RB
  4167eb:	rex.RB
  4167ec:	rex.R pop rdi
  4167ee:	pop    rdi
  4167ef:	pop    rdi
  4167f0:	push   rsi
  4167f1:	pop    r15
  4167f3:	rex.WR
  4167f4:	rex.WB push r11
  4167f6:	push   rsp
  4167f7:	rex pop rdi
  4167f9:	rex.WRX
  4167fa:	rex.RB
  4167fb:	rex.RB
  4167fc:	rex.R pop rdi
  4167fe:	pop    rdi
  4167ff:	pop    rdi
  416800:	push   rsi
  416801:	(bad)  
  416802:	pop    rdi
  416803:	rex.WR
  416804:	rex.WB push r11
  416806:	push   rsp
  416807:	or     sil,BYTE PTR [rbx+0x40]
  41680b:	push   rsi
  41680c:	pop    r15
  41680e:	rex.WR
  41680f:	rex.WB push r11
  416811:	push   rsp
  416812:	rex
  416813:	rex.R push rbp
  416815:	rex.WRB
  416816:	rex.WRB pop r9
  416818:	pop    rdi
  416819:	push   rsi
  41681a:	pop    r15
  41681c:	rex.WR
  41681d:	rex.WB push r11
  41681f:	push   rsp
  416820:	or     sil,BYTE PTR [rbx+0x40]
  416824:	pop    rdi
  416825:	push   rsi
  416826:	(bad)  
  416827:	pop    rdi
  416828:	rex.WR
  416829:	rex.WB push r11
  41682b:	push   rsp
  41682c:	rex pop rdi
  41682e:	push   rsi
  41682f:	pop    r15
  416831:	rex.WR
  416832:	rex.WB push r11
  416834:	push   rsp
  416835:	add    BYTE PTR [rax],al
	...
  416840:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  416847:	and    BYTE PTR [rbx+rsi*2],bh
  41684a:	je     0x4168b0
  41684c:	(bad)  
  41684d:	jb     0x4168b6
  41684f:	pop    rsp
  416850:	cs push 0x69237c3e
  416856:	data16 fs data16 and BYTE PTR gs:[rsi+0x61],dh
  41685d:	pop    rdi
  41685e:	jae    0x4168d4
  416860:	(bad)  
  416861:	jb     0x4168d7
	...
  41687f:	add    BYTE PTR [rdi+0x5f],bl
  416882:	outs   dx,BYTE PTR ds:[esi]
  416884:	jne    0x4168e9
  416886:	pop    rdi
  416887:	jbe    0x4168ea
  416889:	pop    rdi
  41688a:	ins    BYTE PTR es:[rdi],dx
  41688b:	imul   esi,DWORD PTR [rbx+0x74],0x53425f7c
  416892:	rex.R pop rdi
  416894:	push   rsi
  416895:	pop    r15
  416897:	rex.WR
  416898:	rex.WB push r11
  41689a:	push   rsp
  41689b:	pop    rdi
  41689c:	jl     0x4168fd
  41689e:	pop    rdi
  41689f:	rex.R
  4168a0:	rex.WX pop rdi
  4168a2:	jbe    0x416905
  4168a4:	pop    rdi
  4168a5:	ins    BYTE PTR es:[rdi],dx
  4168a6:	imul   esi,DWORD PTR [rbx+0x74],0x5f475f7c
  4168ad:	jbe    0x416910
  4168af:	pop    rdi
  4168b0:	ins    BYTE PTR es:[rdi],dx
  4168b1:	imul   esi,DWORD PTR [rbx+0x74],0x0
	...
  4168c0:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4168c3:	pop    rdi
  4168c4:	gs jb  0x416939
  4168c7:	cs push 0x73706300
  4168cd:	cs push 0x72756300
  4168d3:	jae    0x41693a
  4168d5:	jae    0x416905
  4168d7:	push   0x62726b00
  4168dc:	xor    eax,0x6c00682e
  4168e1:	movsxd ebx,DWORD PTR [rdi+0x63]
  4168e4:	outs   dx,DWORD PTR ds:[rsi]
  4168e5:	jb     0x41694c
  4168e7:	cs push 0x6d667000
  4168ed:	je     0x41691d
  4168ef:	push   0x68637700
  4168f4:	(bad)  
  4168f5:	jb     0x416925
  4168f7:	push   0x72756300
  4168fc:	jae    0x416963
  4168fe:	jae    0x41695f
  416900:	movsxd ebp,DWORD PTR [rdi+0x6c]
  416903:	jb     0x416934
  416905:	movsxd esi,DWORD PTR [rbp+0x72]
  416908:	jae    0x41696f
  41690a:	jae    0x41693a
  41690c:	push   0x73000000
  416911:	je     0x416977
  416913:	imul   ebp,DWORD PTR [rdi+0x5f],0x6c5f6176
  41691a:	imul   esi,DWORD PTR [rbx+0x74],0x696c635f
  416921:	outs   dx,BYTE PTR gs:[rsi]
  416923:	je     0x416998
	...
  41693d:	add    BYTE PTR [rax],al
  41693f:	add    BYTE PTR [rdi+0x5f],bl
  416942:	outs   dx,BYTE PTR ds:[esi]
  416944:	jne    0x4169a9
  416946:	pop    rdi
  416947:	jbe    0x4169aa
  416949:	pop    rdi
  41694a:	ins    BYTE PTR es:[rdi],dx
  41694b:	imul   esi,DWORD PTR [rbx+0x74],0x53425f7c
  416952:	rex.R pop rdi
  416954:	push   rsi
  416955:	pop    r15
  416957:	rex.WR
  416958:	rex.WB push r11
  41695a:	push   rsp
  41695b:	pop    rdi
  41695c:	jl     0x4169bd
  41695e:	pop    rdi
  41695f:	rex.R
  416960:	rex.WX pop rdi
  416962:	jbe    0x4169c5
  416964:	pop    rdi
  416965:	ins    BYTE PTR es:[rdi],dx
  416966:	imul   esi,DWORD PTR [rbx+0x74],0x5f475f7c
  41696d:	jbe    0x4169d0
  41696f:	pop    rdi
  416970:	ins    BYTE PTR es:[rdi],dx
  416971:	imul   esi,DWORD PTR [rbx+0x74],0x2a2d2a00
  416978:	sub    eax,0x616c6f73
  41697d:	jb     0x4169e8
  41697f:	jae    0x4169b3
  416981:	xor    DWORD PTR cs:[rbx+0x30],ebx
  416985:	sub    eax,0x2a5d39
  41698a:	jae    0x416a00
  41698c:	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x73000068
  416994:	je     0x4169fa
  416996:	imul   ebp,DWORD PTR [rdi+0x5f],0x6c5f6176
  41699d:	imul   esi,DWORD PTR [rbx+0x74],0x61727700
  4169a4:	jo     0x4169a6
  4169a6:	add    BYTE PTR [rax],al
  4169a8:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  4169ac:	imul   ebp,DWORD PTR [rsi+0x65],0x6e5f5f20
  4169b3:	gs gs fs pop rdi
  4169b7:	pop    rdi
  4169b8:	pop    rdi
  4169b9:	jbe    0x416a1c
  4169bb:	pop    rdi
  4169bc:	ins    BYTE PTR es:[rdi],dx
  4169bd:	imul   esi,DWORD PTR [rbx+0x74],0x6e69230a
  4169c4:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  4169c8:	and    BYTE PTR gs:[rbx+rsi*2],bh
  4169cc:	je     0x416a32
  4169ce:	(bad)  
  4169cf:	jb     0x416a38
  4169d1:	cs push 0xa3e
	...
  4169df:	add    BYTE PTR [rcx+0x6e],ch
  4169e2:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  4169e6:	gs sub ch,BYTE PTR cs:[rax]
  4169ea:	jae    0x416a60
  4169ec:	fs (bad) 
  4169ee:	jb     0x416a57
  4169f0:	cs push 0x63616d7c
  4169f6:	push   0x2f656e69
  4169fb:	(bad)  
  4169fc:	outs   dx,BYTE PTR ds:[rsi]
  4169fd:	jae    0x416a68
  4169ff:	cs push 0x74730029
  416a05:	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x73000068
  416a0d:	je     0x416a73
  416a0f:	imul   ebp,DWORD PTR [rdi+0x5f],0x61647473
  416a16:	jb     0x416a7f
  416a18:	pop    rdi
  416a19:	push   0x6f6f6200
  416a1e:	je     0x416a94
  416a20:	imul   ebp,DWORD PTR [rbp+0x65],0x6f62003b
  416a27:	outs   dx,DWORD PTR ds:[rsi]
  416a28:	je     0x416a9e
  416a2a:	imul   ebp,DWORD PTR [rbp+0x65],0x72000024
  416a31:	jo     0x416a96
  416a33:	jae    0x416aab
  416a35:	movsxd ebp,DWORD PTR [rdi]
  416a37:	jb     0x416aac
  416a39:	je     0x416a9c
  416a3b:	je     0x416a6b
  416a3d:	push   0x74730000
  416a42:	(bad)  
  416a43:	je     0x416ab8
  416a45:	jae    0x416abe
  416a47:	je     0x416aac
  416a49:	push   0x0
  416a4e:	add    BYTE PTR [rax],al
  416a50:	and    ebp,DWORD PTR [rcx+0x66]
  416a53:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  416a59:	rex.RXB
  416a5a:	rex.WRX push rbp
  416a5c:	rex.XB pop r15
  416a5e:	pop    rdi
  416a5f:	or     dh,BYTE PTR [rcx+rdi*2+0x70]
  416a63:	gs fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  416a6a:	(bad)  
  416a6b:	jne    0x416ad6
  416a6d:	ins    BYTE PTR es:[rdi],dx
  416a6e:	je     0x416ad9
  416a70:	outs   dx,BYTE PTR ds:[rsi]
  416a71:	pop    rdi
  416a72:	jbe    0x416ad5
  416a74:	pop    rdi
  416a75:	ins    BYTE PTR es:[rdi],dx
  416a76:	imul   esi,DWORD PTR [rbx+0x74],0x765f5f20
  416a7d:	(bad)  
  416a7e:	pop    rdi
  416a7f:	ins    BYTE PTR es:[rdi],dx
  416a80:	imul   esi,DWORD PTR [rbx+0x74],0x65230a3b
  416a87:	ins    BYTE PTR es:[rdi],dx
  416a88:	jae    0x416aef
  416a8a:	or     ah,BYTE PTR [rip+0x65230a30]        # 0x656474c0
  416a90:	outs   dx,BYTE PTR ds:[rsi]
  416a91:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
	...
  416abd:	add    BYTE PTR [rax],al
  416abf:	add    BYTE PTR [rbx],ah
  416ac1:	imul   esp,DWORD PTR [rsi+0x2e],0x535f5f2a
  416ac8:	push   rsp
  416ac9:	rex.R
  416aca:	rex.XB pop r15
  416acc:	pop    rdi
  416acd:	sub    cl,BYTE PTR cs:[rdx]
  416ad0:	je     0x416b4b
  416ad2:	jo     0x416b39
  416ad4:	fs data16 and BYTE PTR gs:[rsi+0x6f],dh
  416ada:	imul   esp,DWORD PTR [rax+riz*1+0x5c],0x765f5f2a
  416ae2:	(bad)  
  416ae3:	pop    rdi
  416ae4:	ins    BYTE PTR es:[rdi],dx
  416ae5:	imul   esi,DWORD PTR [rbx+0x74],0x65230a3b
  416aec:	ins    BYTE PTR es:[rdi],dx
  416aed:	jae    0x416b54
  416aef:	or     dh,BYTE PTR [rcx+rdi*2+0x70]
  416af3:	gs fs data16 and BYTE PTR gs:[rbx+0x68],ah
  416afa:	(bad)  
  416afb:	jb     0x416b1d
  416afd:	pop    rsp
  416afe:	sub    bl,BYTE PTR [rdi+0x5f]
  416b01:	jbe    0x416b64
  416b03:	pop    rdi
  416b04:	ins    BYTE PTR es:[rdi],dx
  416b05:	imul   esi,DWORD PTR [rbx+0x74],0x65230a3b
  416b0c:	outs   dx,BYTE PTR ds:[rsi]
  416b0d:	imul   esp,DWORD PTR fs:[rsi+0x0],0x2d2a2d2a
  416b15:	jae    0x416b86
  416b17:	ins    BYTE PTR es:[rdi],dx
  416b18:	(bad)  
  416b19:	jb     0x416b84
  416b1b:	jae    0x416b4f
  416b1d:	cmp    DWORD PTR cs:[rax],eax
  416b20:	jae    0x416b9b
  416b22:	jae    0x416b53
  416b24:	jbe    0x416b87
  416b26:	pop    rdi
  416b27:	ins    BYTE PTR es:[rdi],dx
  416b28:	imul   esi,DWORD PTR [rbx+0x74],0x682e
  416b2f:	add    BYTE PTR [rbx+0x6f],dh
  416b32:	ins    BYTE PTR es:[rdi],dx
  416b33:	(bad)  
  416b34:	jb     0x416b9f
  416b36:	jae    0x416b97
  416b38:	jae    0x416bb3
  416b3a:	jae    0x416b9b
  416b3c:	jbe    0x416b9f
  416b3e:	pop    rdi
  416b3f:	ins    BYTE PTR es:[rdi],dx
  416b40:	imul   esi,DWORD PTR [rbx+0x74],0x0
  416b47:	add    BYTE PTR [rbx+0x2f],dh
  416b4a:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2864
  416b52:	pop    rdi
  416b53:	pop    rdi
  416b54:	movsxd esi,DWORD PTR [rax+0x6c]
  416b57:	jne    0x416bcc
  416b59:	jo     0x416bc7
  416b5b:	jne    0x416bd0
  416b5d:	sub    DWORD PTR [rax],esp
  416b5f:	es and BYTE PTR es:[rax],ch
  416b63:	pop    rdi
  416b64:	pop    rdi
  416b65:	movsxd esi,DWORD PTR [rax+0x6c]
  416b68:	jne    0x416bdd
  416b6a:	jo     0x416bd8
  416b6c:	jne    0x416be1
  416b6e:	and    BYTE PTR [rax+riz*1],bh
  416b71:	xor    eax,0x31323334
  416b76:	sub    QWORD PTR [rdi],r13
  416b79:	xor    BYTE PTR [rdi],ch
  416b7b:	add    BYTE PTR [rdi+0x5f],bl
  416b7e:	rex.RXB
  416b7f:	rex.WRX push rbp
  416b81:	rex.XB pop r15
  416b83:	pop    rdi
	...
  416b90:	pop    rdi
  416b91:	pop    rdi
  416b92:	movsxd esi,DWORD PTR [rax+0x6c]
  416b95:	jne    0x416c0a
  416b97:	jo     0x416c05
  416b99:	jne    0x416c0e
  416b9b:	and    BYTE PTR [rax+riz*1],bh
  416b9e:	xor    eax,0x31323334
  416ba3:	rex.WR add BYTE PTR [rbx+0x74],r14b
  416ba7:	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x2e676174
  416baf:	push   0x0
	...
  416bc0:	jae    0x416c31
  416bc2:	ins    BYTE PTR es:[rdi],dx
  416bc3:	(bad)  
  416bc4:	jb     0x416c2f
  416bc6:	jae    0x416c27
  416bc8:	jae    0x416c3e
  416bca:	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x676174
  416bd2:	add    BYTE PTR [rax],al
  416bd4:	add    BYTE PTR [rax],al
  416bd6:	add    BYTE PTR [rax],al
  416bd8:	and    eax,0x66692331
  416bdd:	outs   dx,BYTE PTR ds:[rsi]
  416bde:	fs data16 and BYTE PTR gs:[rdi+0x4c],bl
  416be4:	push   rax
  416be5:	ss xor al,0xa
  416be8:	jne    0x416c5d
  416bea:	imul   ebp,DWORD PTR [rsi+0x67],0x64747320
  416bf1:	cmp    bh,BYTE PTR [rdx]
  416bf3:	pop    rdi
  416bf4:	pop    rdi
  416bf5:	imul   bp,WORD PTR [rdx+riz*2+0x75],0x3b66
  416bfc:	or     dh,BYTE PTR [rbp+0x73]
  416bff:	imul   ebp,DWORD PTR [rsi+0x67],0x64747320
  416c06:	cmp    bh,BYTE PTR [rdx]
  416c08:	pop    rdi
  416c09:	pop    rdi
  416c0a:	data16 ins BYTE PTR es:[rdi],dx
  416c0c:	jae    0x416c70
  416c0e:	jne    0x416c76
  416c10:	cmp    ecx,DWORD PTR [rdx]
  416c12:	and    esp,DWORD PTR [rbp+0x6e]
  416c15:	imul   esp,DWORD PTR fs:[rsi+0xa],0x3225
  416c1d:	add    BYTE PTR [rax],al
  416c1f:	add    BYTE PTR [rbp+0x73],dh
  416c22:	imul   ebp,DWORD PTR [rsi+0x67],0x64747320
  416c29:	cmp    bh,BYTE PTR [rdx]
  416c2b:	pop    rdi
  416c2c:	pop    rdi
  416c2d:	imul   bp,WORD PTR [rdx+riz*2+0x75],0x66
	...
  416c40:	sub    BYTE PTR [rbp+0x73],dh
  416c43:	imul   ebp,DWORD PTR [rsi+0x67],0x64747320
  416c4a:	cmp    bh,BYTE PTR [rdx]
  416c4c:	jo     0x416cb3
  416c4e:	jb     0x416cc2
  416c50:	outs   dx,DWORD PTR ds:[rsi]
  416c51:	jb     0x416c8e
  416c53:	or     ch,BYTE PTR [rcx]
  416c55:	sub    BYTE PTR [rbx],ah
  416c57:	outs   dx,BYTE PTR gs:[rsi]
  416c59:	imul   esp,DWORD PTR fs:[rsi+0x29],0x2a2d2a00
  416c61:	sub    eax,0x616c6f73
  416c66:	jb     0x416cd1
  416c68:	jae    0x416c9c
  416c6a:	sub    al,BYTE PTR [rax]
  416c6c:	jae    0x416ce2
  416c6e:	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x68
	...
  416c7e:	add    BYTE PTR [rax],al
  416c80:	jae    0x416cf1
  416c82:	ins    BYTE PTR es:[rdi],dx
  416c83:	(bad)  
  416c84:	jb     0x416cef
  416c86:	jae    0x416ce7
  416c88:	jae    0x416cfe
  416c8a:	fs pop rdi
  416c8c:	pop    rdi
  416c8d:	pop    rdi
  416c8e:	imul   bp,WORD PTR [rdx+riz*2+0x75],0x66
  416c95:	add    BYTE PTR [rax],al
  416c97:	add    BYTE PTR [rbx],ah
  416c99:	imul   esp,DWORD PTR [rsi+0x20],0x54535f5f
  416ca0:	rex.R
  416ca1:	rex.XB pop r15
  416ca3:	pop    rdi
  416ca4:	and    BYTE PTR [rip+0x3d203020],ch        # 0x3d619cca
  416caa:	cmp    eax,0x26203020
  416caf:	and    BYTE PTR es:[rcx],ah
  416cb2:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2864
  416cba:	pop    rdi
  416cbb:	rex.WRX
  416cbc:	rex.WRXB pop r15
  416cbe:	rex.WR
  416cbf:	rex.WRXB
  416cc0:	rex.WRX
  416cc1:	rex.RXB
  416cc2:	rex.WR
  416cc3:	rex.WRXB
  416cc4:	rex.WRX
  416cc5:	rex.RXB sub DWORD PTR [r10],r9d
  416cc8:	and    eax,0x65230a30
  416ccd:	ins    BYTE PTR es:[rdi],dx
  416cce:	jae    0x416d35
  416cd0:	or     ah,BYTE PTR [rip+0x2c307b31]        # 0x2c71e807
  416cd6:	and    BYTE PTR [rax],dh
  416cd8:	sub    al,0x20
  416cda:	xor    BYTE PTR [rax+riz*1],ch
  416cdd:	jnp    0x416d5a
  416cdf:	xor    BYTE PTR [rbp+0x2c],bh
  416ce2:	and    BYTE PTR [rbx+0x30],bh
  416ce5:	jge    0x416d13
  416ce7:	and    BYTE PTR [rbx+0x30],bh
  416cea:	jge    0x416d69
  416cec:	sub    al,0x20
  416cee:	jnp    0x416d6b
  416cf0:	xor    BYTE PTR [rbp+0x2c],bh
  416cf3:	and    BYTE PTR [rbx+0x30],bh
  416cf6:	jge    0x416d75
  416cf8:	sub    al,0x20
  416cfa:	jnp    0x416d77
  416cfc:	xor    BYTE PTR [rbp+0x2c],bh
  416cff:	and    BYTE PTR [rbx+0x30],bh
  416d02:	jge    0x416d81
  416d04:	jge    0x416d10
  416d06:	and    esp,DWORD PTR [rbp+0x6e]
  416d09:	imul   esp,DWORD PTR fs:[rsi+0x0],0x28000000
  416d11:	pop    rsi
  416d12:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  416d16:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  416d1d:	sub    edx,DWORD PTR [rax+0x54]
  416d20:	rex.W push rdx
  416d22:	rex.RB
  416d23:	rex.B
  416d24:	rex.R pop rdi
  416d26:	push   rdx
  416d27:	push   rdi
  416d28:	rex.WR
  416d29:	rex.WRXB
  416d2a:	rex.XB
  416d2b:	rex.WXB pop r15
  416d2d:	rex.WB
  416d2e:	rex.WRX
  416d2f:	rex.WB push r12
  416d31:	rex.WB
  416d32:	rex.B
  416d33:	rex.WR
  416d34:	rex.WB pop r10
  416d36:	rex.RB push r10
  416d38:	pop    rbx
  416d39:	and    BYTE PTR [rcx],cl
  416d3b:	pop    rbp
  416d3c:	sub    ebp,DWORD PTR [rcx]
  416d3e:	pop    rsp
  416d3f:	jnp    0x416d71
  416d41:	sub    al,0x20
  416d43:	xor    BYTE PTR [rax+riz*1],ch
  416d46:	xor    BYTE PTR [rax+riz*1],ch
  416d49:	pop    rsp
  416d4a:	jnp    0x416d7c
  416d4c:	sub    al,0x20
  416d4e:	xor    BYTE PTR [rax+riz*1],ch
  416d51:	xor    BYTE PTR [rbp+rdi*2+0x2c],bl
  416d55:	and    BYTE PTR [rbx+rdi*2+0x30],bl
  416d59:	sub    al,0x20
  416d5b:	xor    BYTE PTR [rbp+rdi*2+0x2c],bl
  416d5f:	and    BYTE PTR [rbx+rdi*2+0x30],bl
  416d63:	sub    al,0x20
  416d65:	xor    BYTE PTR [rbp+rdi*2+0x5c],bl
  416d69:	jge    0x416dc6
  416d6b:	and    BYTE PTR [rcx],cl
  416d6d:	pop    rbp
  416d6e:	sub    ah,BYTE PTR [rax+rax*1]
	...
  416d7d:	add    BYTE PTR [rax],al
  416d7f:	add    BYTE PTR [rax+0x5c],al
  416d82:	sub    BYTE PTR [rbx],ah
  416d84:	pop    rsp
  416d85:	sub    DWORD PTR [rax+0x74],esi
  416d88:	push   0x64616572
  416d8d:	cs push 0x5d09205b
  416d93:	sub    esi,DWORD PTR [rcx]
  416d95:	cs pop rbx
  416d97:	xor    BYTE PTR [rip+0x5b2b5d39],ch        # 0x5b6ccad6
  416d9d:	and    BYTE PTR [rcx],cl
  416d9f:	pop    rbp
  416da0:	sub    ebx,DWORD PTR [rbx+0x30]
  416da3:	sub    eax,0x2b5d2f39
  416da8:	and    BYTE PTR [rbx+0x4d],dl
  416dab:	rex.WB add BYTE PTR [r10],bpl
  416dae:	sub    eax,0x6f732d2a
  416db3:	ins    BYTE PTR es:[rdi],dx
  416db4:	(bad)  
  416db5:	jb     0x416e20
  416db7:	jae    0x416de3
  416db9:	add    BYTE PTR [rax+0x74],dh
  416dbc:	push   0x64616572
  416dc1:	cs push 0x0
	...
  416dcf:	add    BYTE PTR [rbx+0x6f],dh
  416dd2:	ins    BYTE PTR es:[rdi],dx
  416dd3:	(bad)  
  416dd4:	jb     0x416e3f
  416dd6:	jae    0x416e37
  416dd8:	jb     0x416e51
  416dda:	ins    BYTE PTR es:[rdi],dx
  416ddb:	outs   dx,DWORD PTR ds:[rsi]
  416ddc:	movsxd ebp,DWORD PTR [rbx+0x5f]
  416ddf:	imul   ebp,DWORD PTR [rsi+0x69],0x315f74
  416de6:	add    BYTE PTR [rax],al
  416de8:	and    ebp,DWORD PTR [rcx+0x66]
  416deb:	and    BYTE PTR [rdi+0x5f],bl
  416dee:	movsxd esi,DWORD PTR [rax+0x6c]
  416df1:	jne    0x416e66
  416df3:	jo     0x416e61
  416df5:	jne    0x416e6a
  416df7:	and    BYTE PTR [rax+riz*1],bh
  416dfa:	xor    dh,BYTE PTR [rax]
  416dfc:	xor    DWORD PTR [rcx],esi
  416dfe:	xor    BYTE PTR [rbx],dh
  416e00:	rex.WR or r12b,BYTE PTR [rip+0x65230a30]        # 0x65647837
  416e07:	outs   dx,BYTE PTR ds:[rsi]
  416e08:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
	...
  416e40:	pop    rsi
  416e41:	pop    rbx
  416e42:	and    BYTE PTR [rcx],cl
  416e44:	pop    rbp
  416e45:	sub    ch,BYTE PTR [rcx+0x6e]
  416e48:	ins    BYTE PTR es:[rdi],dx
  416e49:	imul   ebp,DWORD PTR [rsi+0x65],0x2d615b20
  416e50:	jp     0x416e72
  416e52:	pop    rbp
  416e53:	sub    ah,BYTE PTR [rax]
  416e55:	jo     0x416ec6
  416e57:	ja     0x416eb5
  416e59:	sub    BYTE PTR [rbx+0x5e],bl
  416e5c:	sub    BYTE PTR [rcx],ch
  416e5e:	pop    rbp
  416e5f:	sub    ch,BYTE PTR [rax+riz*1]
  416e62:	imul   ebp,DWORD PTR [rsi+0x74],0x285e5b20
  416e69:	sub    DWORD PTR [rbp+0x2a],ebx
  416e6c:	pop    rsp
  416e6d:	sub    DWORD PTR [rax],esp
  416e6f:	sub    bl,BYTE PTR [rbx+rdi*2+0x5b]
  416e73:	pop    rsi
  416e74:	jnp    0x416ef3
  416e76:	pop    rbp
  416e77:	sub    cl,BYTE PTR [rdx]
  416e79:	pop    rbx
  416e7a:	pop    rsi
  416e7b:	jnp    0x416efa
  416e7d:	pop    rbp
  416e7e:	sub    bl,BYTE PTR [rbp+rdi*2+0x0]
	...
  416e8e:	add    BYTE PTR [rax],al
  416e90:	imul   esi,DWORD PTR [rbx+0x6f],0x74616d2f
  416e97:	push   0x6f73695f
  416e9c:	cs push 0x6f730000
  416ea2:	ins    BYTE PTR es:[rdi],dx
  416ea3:	(bad)  
  416ea4:	jb     0x416f0f
  416ea6:	jae    0x416f07
  416ea8:	jo     0x416f19
  416eaa:	ja     0x416f0b
  416eac:	imul   ebp,DWORD PTR [rsi+0x74],0x65766f5f
  416eb3:	jb     0x416f21
  416eb5:	outs   dx,DWORD PTR ds:[rsi]
  416eb6:	(bad)  
  416eb7:	add    BYTE PTR fs:[rip+0x525f2a31],ah        # 0x52a098ef
  416ebe:	rex.RB push r11
  416ec0:	push   rsp
  416ec1:	push   rdx
  416ec2:	rex.WB
  416ec3:	rex.XB push r12
  416ec5:	pop    rdi
  416ec6:	rex.WXB pop r9
  416ec8:	push   rdi
  416ec9:	and    BYTE PTR [rip+0x332532],r12b        # 0x749402
	...
  416ee0:	sub    BYTE PTR [rsi],ch
  416ee2:	sub    bl,BYTE PTR [rbx+0x20]
  416ee5:	or     DWORD PTR [rbp+0x2b],ebx
  416ee8:	sub    DWORD PTR [rax],ebp
  416eea:	pop    rbx
  416eeb:	(bad)  
  416eec:	sub    eax,0x292b5d7a
  416ef1:	pop    rsp
  416ef2:	pop    rbx
  416ef3:	pop    rdi
  416ef4:	push   rdx
  416ef5:	rex.RB push r11
  416ef7:	push   rsp
  416ef8:	push   rdx
  416ef9:	rex.WB
  416efa:	rex.XB push r12
  416efc:	pop    rdi
  416efd:	rex.WXB pop r9
  416eff:	push   rdi
  416f00:	rex.R pop rsp
  416f02:	pop    rbp
  416f03:	sub    BYTE PTR [rsi],ch
  416f05:	sub    ch,BYTE PTR [rcx]
  416f07:	add    BYTE PTR [rbx+0x70],dh
  416f0a:	(bad)  
  416f0b:	ja     0x416f7b
  416f0d:	cs push 0x0
	...
  416f1f:	add    BYTE PTR [rbx+0x6f],dh
  416f22:	ins    BYTE PTR es:[rdi],dx
  416f23:	(bad)  
  416f24:	jb     0x416f8f
  416f26:	jae    0x416f87
  416f28:	jo     0x416f99
  416f2a:	jae    0x416f95
  416f2c:	js     0x416f8d
  416f2e:	jae    0x416fa0
  416f30:	(bad)  
  416f31:	ja     0x416fa1
  416f33:	pop    rdi
  416f34:	jb     0x416f9b
  416f36:	jae    0x416fac
  416f38:	jb     0x416fa3
  416f3a:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  416f3e:	add    BYTE PTR [rax],al
  416f40:	and    ebp,DWORD PTR [rcx+0x66]
  416f43:	and    BYTE PTR [rdi+0x5f],bl
  416f46:	push   rbx
  416f47:	push   rsp
  416f48:	rex.R
  416f49:	rex.XB pop r15
  416f4b:	pop    rdi
  416f4c:	and    BYTE PTR [rip+0x3d203020],ch        # 0x3d619f72
  416f52:	cmp    eax,0x26203020
  416f57:	and    BYTE PTR es:[rcx],ah
  416f5a:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2864
  416f62:	pop    rdi
  416f63:	rex.WRX
  416f64:	rex.WRXB pop r15
  416f66:	rex.WR
  416f67:	rex.WRXB
  416f68:	rex.WRX
  416f69:	rex.RXB
  416f6a:	rex.WR
  416f6b:	rex.WRXB
  416f6c:	rex.WRX
  416f6d:	rex.RXB sub DWORD PTR [r10],r9d
  416f70:	and    eax,0x65230a30
  416f75:	ins    BYTE PTR es:[rdi],dx
  416f76:	jae    0x416fdd
  416f78:	or     ah,BYTE PTR [rip+0x7d307b31]        # 0x7d71eaaf
  416f7e:	sub    al,0x20
  416f80:	jnp    0x416fb2
  416f82:	jge    0x416fb0
  416f84:	and    BYTE PTR [rbx+0x30],bh
  416f87:	jge    0x416fb5
  416f89:	and    BYTE PTR [rbx+0x25],bh
  416f8c:	xor    edi,DWORD PTR [rbp+0x25]
  416f8f:	xor    al,0xa
  416f91:	and    esp,DWORD PTR [rbp+0x6e]
  416f94:	imul   esp,DWORD PTR fs:[rsi+0x0],0x64235e28
  416f9c:	imul   bp,WORD PTR gs:[rsi+0x65],0x205b
  416fa3:	or     DWORD PTR [rbp+0x2b],ebx
  416fa6:	push   rax
  416fa7:	push   rsp
  416fa8:	rex.W push rdx
  416faa:	rex.RB
  416fab:	rex.B
  416fac:	rex.R pop rdi
  416fae:	rex.WRXB
  416faf:	rex.WRX
  416fb0:	rex.XB
  416fb1:	rex.RB pop r15
  416fb3:	rex.WB
  416fb4:	rex.WRX
  416fb5:	rex.WB push r12
  416fb7:	pop    rbx
  416fb8:	and    BYTE PTR [rcx],cl
  416fba:	pop    rbp
  416fbb:	sub    ebx,DWORD PTR [rbx+rdi*2+0x5c]
  416fbf:	jnp    0x416fea
  416fc1:	sub    BYTE PTR [rax],dh
  416fc3:	sub    al,0x20
  416fc5:	xor    BYTE PTR [rax+riz*1],ch
  416fc8:	xor    BYTE PTR [rax+riz*1],ch
  416fcb:	sub    DWORD PTR [rax],ebp
  416fcd:	push   rax
  416fce:	push   rsp
  416fcf:	rex.W push rdx
  416fd1:	rex.RB
  416fd2:	rex.B
  416fd3:	rex.R pop rdi
  416fd5:	pop    rbx
  416fd6:	rex.B sub eax,0x2b5d5f5a
  416fdc:	sub    DWORD PTR [rax],ebp
  416fde:	pop    rsp
  416fdf:	jge    0x41703d
  416fe1:	jge    0x41700c
  416fe3:	pop    rbx
  416fe4:	and    BYTE PTR [rcx],cl
  416fe6:	pop    rbp
  416fe7:	sub    ah,BYTE PTR [rax+rax*1]
	...
  416ffe:	add    BYTE PTR [rax],al
  417000:	rex pop rsp
  417002:	sub    BYTE PTR [rbx],ah
  417004:	pop    rsp
  417005:	sub    DWORD PTR [rax+0x74],esi
  417008:	push   0x64616572
  41700d:	cs push 0x5d09205b
  417013:	sub    esi,DWORD PTR [rcx]
  417015:	cs pop rbx
  417017:	xor    BYTE PTR [rip+0x5b2b5d39],ch        # 0x5b6ccd56
  41701d:	and    BYTE PTR [rcx],cl
  41701f:	pop    rbp
  417020:	sub    ebx,DWORD PTR [rbx+0x30]
  417023:	sub    eax,0x2b5d2f39
  417028:	and    BYTE PTR [rbx+0x4d],dl
  41702b:	rex.WB add BYTE PTR [r10],bpl
  41702e:	sub    eax,0x6f732d2a
  417033:	ins    BYTE PTR es:[rdi],dx
  417034:	(bad)  
  417035:	jb     0x4170a0
  417037:	jae    0x41706b
  417039:	cs pop rbx
  41703b:	xor    BYTE PTR [rip+0x2a005d39],ch        # 0x2a41cd7a
  417041:	sub    eax,0x6f732d2a
  417046:	ins    BYTE PTR es:[rdi],dx
  417047:	(bad)  
  417048:	jb     0x4170b3
  41704a:	jae    0x41707e
  41704c:	cs pop rbx
  41704e:	xor    BYTE PTR [rip+0x215b5d39],ch        # 0x219ccd8d
  417054:	xor    BYTE PTR [rip+0x2a5d39],ch        # 0x6bcd93
  41705a:	jo     0x4170d0
  41705c:	push   0x64616572
  417061:	cs push 0x0
	...
  41706f:	add    BYTE PTR [rbx+0x6f],dh
  417072:	ins    BYTE PTR es:[rdi],dx
  417073:	(bad)  
  417074:	jb     0x4170df
  417076:	jae    0x4170d7
  417078:	outs   dx,DWORD PTR ds:[rsi]
  417079:	outs   dx,BYTE PTR ds:[rsi]
  41707a:	movsxd esp,DWORD PTR [rbp+0x5f]
  41707d:	imul   ebp,DWORD PTR [rsi+0x69],0x325f74
  417084:	and    eax,0x32257b31
  417089:	jge    0x4170b0
  41708b:	xor    eax,DWORD PTR [rax]
  41708d:	add    BYTE PTR [rax],al
  41708f:	add    BYTE PTR [rax],ch
  417091:	pop    rsi
  417092:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  417096:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41709d:	sub    edx,DWORD PTR [rax+0x54]
  4170a0:	rex.W push rdx
  4170a2:	rex.RB
  4170a3:	rex.B
  4170a4:	rex.R pop rdi
  4170a6:	rex.WRXB
  4170a7:	rex.WRX
  4170a8:	rex.XB
  4170a9:	rex.RB pop r15
  4170ab:	rex.WB
  4170ac:	rex.WRX
  4170ad:	rex.WB push r12
  4170af:	pop    rbx
  4170b0:	and    BYTE PTR [rcx],cl
  4170b2:	pop    rbp
  4170b3:	sub    ebx,DWORD PTR [rbx+rdi*2+0x29]
  4170b7:	sub    BYTE PTR [rbx+0x5e],bl
  4170ba:	jge    0x417119
  4170bc:	sub    ebp,DWORD PTR [rcx]
  4170be:	sub    BYTE PTR [rbp+rdi*2+0x29],bl
  4170c2:	pop    rbx
  4170c3:	and    BYTE PTR [rcx],cl
  4170c5:	pop    rbp
  4170c6:	sub    ah,BYTE PTR [rax+rax*1]
	...
  4170dd:	add    BYTE PTR [rax],al
  4170df:	add    BYTE PTR [rax+0x5c],al
  4170e2:	sub    BYTE PTR [rbx],ah
  4170e4:	pop    rsp
  4170e5:	sub    DWORD PTR [rax+0x74],esi
  4170e8:	push   0x64616572
  4170ed:	cs push 0x5d09205b
  4170f3:	sub    esi,DWORD PTR [rcx]
  4170f5:	cs pop rbx
  4170f7:	xor    BYTE PTR [rip+0x5b2b5d39],ch        # 0x5b6cce36
  4170fd:	and    BYTE PTR [rcx],cl
  4170ff:	pop    rbp
  417100:	sub    ebx,DWORD PTR [rbx+0x30]
  417103:	sub    eax,0x2b5d2f39
  417108:	and    BYTE PTR [rbx+0x4d],dl
  41710b:	rex.WB add BYTE PTR [r8+0x74],sil
  41710f:	push   0x64616572
  417114:	cs push 0x0
  41711a:	add    BYTE PTR [rax],al
  41711c:	add    BYTE PTR [rax],al
  41711e:	add    BYTE PTR [rax],al
  417120:	jae    0x417191
  417122:	ins    BYTE PTR es:[rdi],dx
  417123:	(bad)  
  417124:	jb     0x41718f
  417126:	jae    0x417187
  417128:	outs   dx,DWORD PTR ds:[rsi]
  417129:	outs   dx,BYTE PTR ds:[rsi]
  41712a:	movsxd esp,DWORD PTR [rbp+0x5f]
  41712d:	imul   ebp,DWORD PTR [rsi+0x69],0x315f74
  417134:	add    BYTE PTR [rax],al
  417136:	add    BYTE PTR [rax],al
  417138:	and    ebp,DWORD PTR [rcx+0x66]
  41713b:	and    BYTE PTR [rdi+0x5f],bl
  41713e:	push   rbx
  41713f:	push   rsp
  417140:	rex.R
  417141:	rex.XB pop r15
  417143:	pop    rdi
  417144:	and    BYTE PTR [rip+0x3d203020],ch        # 0x3d61a16a
  41714a:	cmp    eax,0x26203020
  41714f:	and    BYTE PTR es:[rcx],ah
  417152:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2864
  41715a:	pop    rdi
  41715b:	rex.WRX
  41715c:	rex.WRXB pop r15
  41715e:	rex.WR
  41715f:	rex.WRXB
  417160:	rex.WRX
  417161:	rex.RXB
  417162:	rex.WR
  417163:	rex.WRXB
  417164:	rex.WRX
  417165:	rex.RXB sub DWORD PTR [r10],r9d
  417168:	and    eax,0x65230a30
  41716d:	ins    BYTE PTR es:[rdi],dx
  41716e:	jae    0x4171d5
  417170:	or     ah,BYTE PTR [rip+0x7b202c31]        # 0x7b619da7
  417176:	xor    BYTE PTR [rbp+0x7d],bh
  417179:	and    eax,0x65230a34
  41717e:	outs   dx,BYTE PTR ds:[rsi]
  41717f:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
  417187:	add    BYTE PTR [rax],ch
  417189:	pop    rsi
  41718a:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41718e:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  417195:	sub    edx,DWORD PTR [rax+0x54]
  417198:	rex.W push rdx
  41719a:	rex.RB
  41719b:	rex.B
  41719c:	rex.R pop rdi
  41719e:	sub    BYTE PTR [rbp+0x55],cl
  4171a1:	push   rsp
  4171a2:	rex.RB pop r8
  4171a4:	jl     0x4171e9
  4171a6:	rex.WRXB
  4171a7:	rex.WRX
  4171a8:	sub    DWORD PTR [rdi+0x49],r11d
  4171ac:	rex.WRX
  4171ad:	rex.WB push r12
  4171af:	rex.WB
  4171b0:	rex.B
  4171b1:	rex.WR
  4171b2:	rex.WB pop r10
  4171b4:	rex.RB push r10
  4171b6:	pop    rbx
  4171b7:	and    BYTE PTR [rcx],cl
  4171b9:	pop    rbp
  4171ba:	sub    ebp,DWORD PTR [rax]
  4171bc:	jl     0x4171ed
  4171be:	sub    ch,BYTE PTR [rsi]
  4171c0:	sub    ch,BYTE PTR [rdx]
  4171c2:	(bad)  
  4171c3:	pop    rbx
  4171c4:	and    BYTE PTR [rcx],cl
  4171c6:	pop    rbp
  4171c7:	sub    bl,BYTE PTR [rsp+rbx*2+0xa]
  4171cb:	pop    rbx
  4171cc:	and    BYTE PTR [rcx],cl
  4171ce:	pop    rbp
  4171cf:	sub    ch,BYTE PTR [rcx]
  4171d1:	pop    rsp
  4171d2:	jnp    0x417202
  4171d4:	sub    ch,BYTE PTR [rcx]
  4171d6:	sub    al,0x5b
  4171d8:	and    BYTE PTR [rcx],cl
  4171da:	pop    rbp
  4171db:	sub    dh,BYTE PTR [rax]
  4171dd:	pop    rsp
  4171de:	jge    0x417208
  4171e0:	jl     0x41723d
  4171e2:	and    BYTE PTR [rcx],cl
  4171e4:	pop    rbp
  4171e5:	sub    ch,BYTE PTR cs:[rcx]
  4171e8:	and    al,0x0
	...
  4171fe:	add    BYTE PTR [rax],al
  417200:	rex pop rsp
  417202:	sub    BYTE PTR [rbx],ah
  417204:	pop    rsp
  417205:	sub    DWORD PTR [rax+0x74],esi
  417208:	push   0x64616572
  41720d:	cs push 0x5d09205b
  417213:	sub    esi,DWORD PTR [rcx]
  417215:	cs pop rbx
  417217:	xor    BYTE PTR [rip+0x5b2b5d39],ch        # 0x5b6ccf56
  41721d:	and    BYTE PTR [rcx],cl
  41721f:	pop    rbp
  417220:	sub    ebx,DWORD PTR [rbx+0x30]
  417223:	sub    eax,0x2b5d2f39
  417228:	and    BYTE PTR [rbx+0x4d],dl
  41722b:	rex.WB add BYTE PTR [r8+0x74],sil
  41722f:	push   0x64616572
  417234:	cs push 0x0
  41723a:	add    BYTE PTR [rax],al
  41723c:	add    BYTE PTR [rax],al
  41723e:	add    BYTE PTR [rax],al
  417240:	jae    0x4172b1
  417242:	ins    BYTE PTR es:[rdi],dx
  417243:	(bad)  
  417244:	jb     0x4172af
  417246:	jae    0x4172a7
  417248:	ins    DWORD PTR es:[rdi],dx
  417249:	jne    0x4172bf
  41724b:	gs js  0x4172ad
  41724e:	imul   ebp,DWORD PTR [rsi+0x69],0x325f74
  417255:	add    BYTE PTR [rax],al
  417257:	add    BYTE PTR [rbx],ah
  417259:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2509
  417261:	xor    DWORD PTR [rax],ebp
  417263:	js     0x417291
  417265:	and    BYTE PTR [rcx+0x29],bh
  417268:	and    eax,0x625f5f32
  41726d:	jne    0x4172d8
  41726f:	ins    BYTE PTR es:[rdi],dx
  417270:	je     0x4172db
  417272:	outs   dx,BYTE PTR ds:[rsi]
  417273:	pop    rdi
  417274:	and    eax,0x2c782831
  417279:	and    BYTE PTR [rcx+0x29],bh
  41727c:	add    BYTE PTR [rax],al
  41727e:	add    BYTE PTR [rax],al
  417280:	pop    rsi
  417281:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  417285:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41728c:	sub    ebp,DWORD PTR [rax]
  41728e:	pop    rbx
  41728f:	(bad)  
  417290:	sub    eax,0x292b5d7a
  417295:	pop    rsp
  417296:	sub    BYTE PTR [rax+0x2c],bh
  417299:	and    BYTE PTR [rcx+0x5c],bh
  41729c:	sub    DWORD PTR [rax],ebp
  41729e:	pop    rbx
  41729f:	and    BYTE PTR [rcx],cl
  4172a1:	pop    rbp
  4172a2:	sub    ebp,DWORD PTR [rcx]
  4172a4:	pop    rsp
  4172a5:	sub    BYTE PTR [rax+rbp*1+0x78],bl
  4172a9:	pop    rsp
  4172aa:	sub    DWORD PTR [rax],esp
  4172ac:	pop    rdi
  4172ad:	pop    rdi
  4172ae:	(bad)  
  4172af:	jne    0x41731a
  4172b1:	ins    BYTE PTR es:[rdi],dx
  4172b2:	je     0x41731d
  4172b4:	outs   dx,BYTE PTR ds:[rsi]
  4172b5:	pop    rdi
  4172b6:	pop    rbx
  4172b7:	(bad)  
  4172b8:	sub    eax,0x5c2b5d7a
  4172bd:	sub    BYTE PTR [rcx+0x5c],bh
  4172c0:	sub    DWORD PTR [rcx+rbp*1+0x0],ebx
  4172c4:	pop    rdi
  4172c5:	pop    rdi
  4172c6:	rex.RXB
  4172c7:	rex.WRX push rbp
  4172c9:	rex.XB pop r15
  4172cb:	pop    rdi
	...
  4172e0:	rex pop rsp
  4172e2:	sub    BYTE PTR [rbx],ah
  4172e4:	pop    rsp
  4172e5:	sub    DWORD PTR [rbp+0x61],ebp
  4172e8:	je     0x417352
  4172ea:	pop    rdi
  4172eb:	movsxd edi,DWORD PTR [rcx]
  4172ed:	cmp    DWORD PTR [rsi],ebp
  4172ef:	push   0x5d09205b
  4172f4:	sub    esi,DWORD PTR [rcx]
  4172f6:	cs pop rbx
  4172f8:	xor    BYTE PTR [rip+0x5b2b5d39],ch        # 0x5b6cd037
  4172fe:	and    BYTE PTR [rcx],cl
  417300:	pop    rbp
  417301:	sub    ebx,DWORD PTR [rbx+0x30]
  417304:	sub    eax,0x2b5d2f39
  417309:	and    BYTE PTR [rbx+0x4d],dl
  41730c:	rex.WB add BYTE PTR [r8],al
  41730f:	add    BYTE PTR [rcx+0x73],ch
  417312:	outs   dx,DWORD PTR ds:[rsi]
  417313:	(bad)  
  417314:	ins    DWORD PTR es:[rdi],dx
  417315:	(bad)  
  417316:	je     0x417380
  417318:	pop    rdi
  417319:	movsxd edi,DWORD PTR [rcx]
  41731b:	cmp    DWORD PTR [rsi],ebp
  41731d:	push   0x6f730000
  417322:	ins    BYTE PTR es:[rdi],dx
  417323:	(bad)  
  417324:	jb     0x41738f
  417326:	jae    0x417387
  417328:	ins    DWORD PTR es:[rdi],dx
  417329:	(bad)  
  41732a:	je     0x417394
  41732c:	pop    rdi
  41732d:	cmp    DWORD PTR [rax],eax
  41732f:	add    BYTE PTR [rbx],ah
  417331:	fs imul bp,WORD PTR gs:[rsi+0x65],0x7309
  417339:	imul   esp,DWORD PTR [rdi+0x6e],0x28746962
  417340:	js     0x41736b
  417342:	or     DWORD PTR [rax],ebp
  417344:	jae    0x4173af
  417346:	jp     0x4173ad
  417348:	outs   dx,DWORD PTR ds:[rsi]
  417349:	data16 sub BYTE PTR [rax+0x29],bh
  41734d:	and    BYTE PTR [rip+0x6973203d],bh        # 0x69b49390
  417353:	jp     0x4173ba
  417355:	outs   dx,DWORD PTR ds:[rsi]
  417356:	data16 sub BYTE PTR [rsi+0x6c],ah
  41735a:	outs   dx,DWORD PTR ds:[rsi]
  41735b:	(bad)  
  41735c:	je     0x417387
  41735e:	and    BYTE PTR [rdx+rcx*1+0x9],bl
  417362:	or     DWORD PTR [rcx],ecx
  417364:	and    BYTE PTR [rax],ah
  417366:	and    BYTE PTR [rdi],bh
  417368:	and    BYTE PTR [rdi+0x5f],bl
  41736b:	(bad)  
  41736c:	jne    0x4173d7
  41736e:	ins    BYTE PTR es:[rdi],dx
  41736f:	je     0x4173da
  417371:	outs   dx,BYTE PTR ds:[rsi]
  417372:	pop    rdi
  417373:	jae    0x4173de
  417375:	outs   dx,BYTE PTR ds:[esi]
  417377:	(bad)  
  417378:	imul   esi,DWORD PTR [rsi+riz*2+0x28],0x5c202978
  417380:	or     cl,BYTE PTR [rcx]
  417382:	or     DWORD PTR [rcx],ecx
  417384:	and    BYTE PTR [rax],ah
  417386:	and    BYTE PTR [rdx],bh
  417388:	and    BYTE PTR [rbx+0x69],dh
  41738b:	jp     0x4173f2
  41738d:	outs   dx,DWORD PTR ds:[rsi]
  41738e:	data16 sub BYTE PTR [rax+0x29],bh
  417392:	and    BYTE PTR [rip+0x6973203d],bh        # 0x69b493d5
  417398:	jp     0x4173ff
  41739a:	outs   dx,DWORD PTR ds:[rsi]
  41739b:	data16 sub BYTE PTR [rdi+rbp*2+0x6e],ch
  4173a0:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4173a5:	(bad)  
  4173a6:	ins    BYTE PTR es:[rdi],dx
  4173a7:	sub    DWORD PTR gs:[rax],esp
  4173aa:	pop    rsp
  4173ab:	or     cl,BYTE PTR [rcx]
  4173ad:	or     DWORD PTR [rcx],ecx
  4173af:	and    BYTE PTR [rax],ah
  4173b1:	and    BYTE PTR [rax],ah
  4173b3:	and    BYTE PTR [rdi],bh
  4173b5:	and    BYTE PTR [rdi+0x5f],bl
  4173b8:	(bad)  
  4173b9:	jne    0x417424
  4173bb:	ins    BYTE PTR es:[rdi],dx
  4173bc:	je     0x417427
  4173be:	outs   dx,BYTE PTR ds:[rsi]
  4173bf:	pop    rdi
  4173c0:	jae    0x41742b
  4173c2:	outs   dx,BYTE PTR ds:[esi]
  4173c4:	(bad)  
  4173c5:	imul   esi,DWORD PTR [rsp+rbp*2+0x28],0x5c202978
  4173cd:	or     cl,BYTE PTR [rcx]
  4173cf:	or     DWORD PTR [rcx],ecx
  4173d1:	and    BYTE PTR [rax],ah
  4173d3:	and    BYTE PTR [rax],ah
  4173d5:	and    BYTE PTR [rdx],bh
  4173d7:	and    BYTE PTR [rdi+0x5f],bl
  4173da:	(bad)  
  4173db:	jne    0x417446
  4173dd:	ins    BYTE PTR es:[rdi],dx
  4173de:	je     0x417449
  4173e0:	outs   dx,BYTE PTR ds:[rsi]
  4173e1:	pop    rdi
  4173e2:	jae    0x41744d
  4173e4:	outs   dx,BYTE PTR ds:[esi]
  4173e6:	(bad)  
  4173e7:	imul   esi,DWORD PTR [rax+rbp*1+0x78],0x2929
  4173ef:	add    BYTE PTR [rsi+0x23],bl
  4173f2:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  4173fa:	or     DWORD PTR [rbp+0x2b],ebx
  4173fd:	jae    0x417468
  4173ff:	outs   dx,BYTE PTR ds:[esi]
  417401:	(bad)  
  417402:	imul   esi,DWORD PTR [rsp+rbx*2+0x28],0x5b295c78
  41740a:	and    BYTE PTR [rcx],cl
  41740c:	pop    rbp
  41740d:	sub    ebx,DWORD PTR [rdi+0x5f]
  417410:	(bad)  
  417411:	jne    0x41747c
  417413:	ins    BYTE PTR es:[rdi],dx
  417414:	je     0x41747f
  417416:	outs   dx,BYTE PTR ds:[rsi]
  417417:	pop    rdi
  417418:	jae    0x417483
  41741a:	outs   dx,BYTE PTR ds:[esi]
  41741c:	(bad)  
  41741d:	imul   esi,DWORD PTR [rsp+rbx*2+0x28],0x295c78
  417425:	pop    rdi
  417426:	pop    rdi
  417427:	rex.RXB
  417428:	rex.WRX push rbp
  41742a:	rex.XB pop r15
  41742c:	pop    rdi
	...
  41743d:	add    BYTE PTR [rax],al
  41743f:	add    BYTE PTR [rax+0x5c],al
  417442:	sub    BYTE PTR [rbx],ah
  417444:	pop    rsp
  417445:	sub    DWORD PTR [rbp+0x61],ebp
  417448:	je     0x4174b2
  41744a:	pop    rdi
  41744b:	movsxd edi,DWORD PTR [rcx]
  41744d:	cmp    DWORD PTR [rsi+rbp*1+0x68],ebx
  417451:	pop    rbx
  417452:	and    BYTE PTR [rcx],cl
  417454:	pop    rbp
  417455:	sub    esi,DWORD PTR [rcx]
  417457:	pop    rsp
  417458:	cs pop rbx
  41745a:	xor    BYTE PTR [rip+0x5b2b5d39],ch        # 0x5b6cd199
  417460:	and    BYTE PTR [rcx],cl
  417462:	pop    rbp
  417463:	sub    ebx,DWORD PTR [rbx+0x30]
  417466:	sub    eax,0x2b5d2f39
  41746b:	and    BYTE PTR [rbx+0x4d],dl
  41746e:	rex.WB add BYTE PTR [r9+0x73],bpl
  417472:	outs   dx,DWORD PTR ds:[rsi]
  417473:	(bad)  
  417474:	ins    DWORD PTR es:[rdi],dx
  417475:	(bad)  
  417476:	je     0x4174e0
  417478:	pop    rdi
  417479:	movsxd edi,DWORD PTR [rcx]
  41747b:	cmp    DWORD PTR [rsi],ebp
  41747d:	push   0x6f730000
  417482:	ins    BYTE PTR es:[rdi],dx
  417483:	(bad)  
  417484:	jb     0x4174ef
  417486:	jae    0x4174e7
  417488:	ins    DWORD PTR es:[rdi],dx
  417489:	(bad)  
  41748a:	je     0x4174f4
  41748c:	pop    rdi
  41748d:	cmp    BYTE PTR [rax],al
  41748f:	add    BYTE PTR [rbx],ah
  417491:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6609
  417499:	jo     0x4174fe
  41749b:	ins    BYTE PTR es:[rdi],dx
  41749c:	(bad)  
  41749d:	jae    0x417512
  41749f:	imul   esp,DWORD PTR [rsi+0x79],0x20297828
  4174a6:	pop    rsp
  4174a7:	or     ah,BYTE PTR [rax]
  4174a9:	and    BYTE PTR [rdi+0x5f],bl
  4174ac:	(bad)  
  4174ad:	jne    0x417518
  4174af:	ins    BYTE PTR es:[rdi],dx
  4174b0:	je     0x41751b
  4174b2:	outs   dx,BYTE PTR ds:[rsi]
  4174b3:	pop    rdi
  4174b4:	data16 jo 0x41751a
  4174b7:	ins    BYTE PTR es:[rdi],dx
  4174b8:	(bad)  
  4174b9:	jae    0x41752e
  4174bb:	imul   esp,DWORD PTR [rsi+0x79],0x5f504628
  4174c2:	rex.WRX
  4174c3:	rex.B
  4174c4:	rex.WRX sub al,0x20
  4174c7:	rex.RX push rax
  4174c9:	pop    rdi
  4174ca:	rex.WB
  4174cb:	rex.WRX
  4174cc:	rex.RX
  4174cd:	rex.WB
  4174ce:	rex.WRX
  4174cf:	rex.WB push r12
  4174d1:	rex.RB sub al,0x20
  4174d4:	rex.RX push rax
  4174d6:	pop    rdi
  4174d7:	rex.WRX
  4174d8:	rex.WRXB push r10
  4174da:	rex.WRB
  4174db:	rex.B
  4174dc:	rex.WR sub al,0x20
  4174df:	rex.RX push rax
  4174e1:	pop    rdi
  4174e2:	push   rbx
  4174e3:	push   rbp
  4174e4:	rex.X
  4174e5:	rex.WRX
  4174e6:	rex.WRXB push r10
  4174e8:	rex.WRB
  4174e9:	rex.B
  4174ea:	rex.WR sub al,0x20
  4174ed:	rex.RX push rax
  4174ef:	pop    rdi
  4174f0:	pop    rdx
  4174f1:	rex.RB push r10
  4174f3:	rex.WRXB sub al,0x20
  4174f6:	sub    BYTE PTR [rax+0x29],bh
  4174f9:	sub    DWORD PTR [rax],eax
  4174fb:	add    BYTE PTR [rax],al
  4174fd:	add    BYTE PTR [rax],al
  4174ff:	add    BYTE PTR [rsi+0x23],bl
  417502:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41750a:	or     DWORD PTR [rbp+0x2b],ebx
  41750d:	data16 jo 0x417573
  417510:	ins    BYTE PTR es:[rdi],dx
  417511:	(bad)  
  417512:	jae    0x417587
  417514:	imul   esp,DWORD PTR [rsi+0x79],0x5c78285c
  41751b:	sub    DWORD PTR [rbx+0x20],ebx
  41751e:	or     DWORD PTR [rbp+0x2b],ebx
  417521:	pop    rdi
  417522:	pop    rdi
  417523:	(bad)  
  417524:	jne    0x41758f
  417526:	ins    BYTE PTR es:[rdi],dx
  417527:	je     0x417592
  417529:	outs   dx,BYTE PTR ds:[rsi]
  41752a:	pop    rdi
  41752b:	data16 jo 0x417591
  41752e:	ins    BYTE PTR es:[rdi],dx
  41752f:	(bad)  
  417530:	jae    0x4175a5
  417532:	imul   esp,DWORD PTR [rsi+0x79],0x5c78285c
  417539:	sub    DWORD PTR [rax],eax
  41753b:	pop    rdi
  41753c:	pop    rdi
  41753d:	rex.RXB
  41753e:	rex.WRX push rbp
  417540:	rex.XB pop r15
  417542:	pop    rdi
	...
  41755f:	add    BYTE PTR [rax+0x5c],al
  417562:	sub    BYTE PTR [rbx],ah
  417564:	pop    rsp
  417565:	sub    DWORD PTR [rbp+0x61],ebp
  417568:	je     0x4175d2
  41756a:	pop    rdi
  41756b:	movsxd edi,DWORD PTR [rcx]
  41756d:	cmp    DWORD PTR [rsi],ebp
  41756f:	push   0x5d09205b
  417574:	sub    esi,DWORD PTR [rcx]
  417576:	cs pop rbx
  417578:	xor    BYTE PTR [rip+0x5b2b5d39],ch        # 0x5b6cd2b7
  41757e:	and    BYTE PTR [rcx],cl
  417580:	pop    rbp
  417581:	sub    ebx,DWORD PTR [rbx+0x30]
  417584:	sub    eax,0x2b5d2f39
  417589:	and    BYTE PTR [rbx+0x4d],dl
  41758c:	rex.WB add BYTE PTR [r8],al
  41758f:	add    BYTE PTR [rcx+0x73],ch
  417592:	outs   dx,DWORD PTR ds:[rsi]
  417593:	(bad)  
  417594:	ins    DWORD PTR es:[rdi],dx
  417595:	(bad)  
  417596:	je     0x417600
  417598:	pop    rdi
  417599:	movsxd edi,DWORD PTR [rcx]
  41759b:	cmp    DWORD PTR [rsi],ebp
  41759d:	push   0x6f730000
  4175a2:	ins    BYTE PTR es:[rdi],dx
  4175a3:	(bad)  
  4175a4:	jb     0x41760f
  4175a6:	jae    0x417607
  4175a8:	ins    DWORD PTR es:[rdi],dx
  4175a9:	(bad)  
  4175aa:	je     0x417614
  4175ac:	pop    rdi
  4175ad:	xor    al,0x0
  4175af:	add    BYTE PTR [rbx],ah
  4175b1:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4e09
  4175b9:	rex.B
  4175ba:	rex.WRX or QWORD PTR [rcx],r9
  4175bd:	sub    BYTE PTR [rdi+0x5f],bl
  4175c0:	(bad)  
  4175c1:	jne    0x41762c
  4175c3:	ins    BYTE PTR es:[rdi],dx
  4175c4:	je     0x41762f
  4175c6:	outs   dx,BYTE PTR ds:[rsi]
  4175c7:	pop    rdi
  4175c8:	outs   dx,BYTE PTR ds:[rsi]
  4175c9:	(bad)  
  4175ca:	outs   dx,BYTE PTR ds:[rsi]
  4175cb:	data16 sub BYTE PTR [rdx],ah
  4175ce:	and    ch,BYTE PTR [rcx]
  4175d0:	sub    DWORD PTR [rax],eax
  4175d2:	add    BYTE PTR [rax],al
  4175d4:	add    BYTE PTR [rax],al
  4175d6:	add    BYTE PTR [rax],al
  4175d8:	pop    rsi
  4175d9:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  4175dd:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  4175e4:	sub    ecx,DWORD PTR [rsi+0x41]
  4175e7:	rex.WRX pop rbx
  4175e9:	and    BYTE PTR [rcx],cl
  4175eb:	pop    rbp
  4175ec:	sub    ebx,DWORD PTR [rdi+0x5f]
  4175ef:	(bad)  
  4175f0:	jne    0x41765b
  4175f2:	ins    BYTE PTR es:[rdi],dx
  4175f3:	je     0x41765e
  4175f5:	outs   dx,BYTE PTR ds:[rsi]
  4175f6:	pop    rdi
  4175f7:	outs   dx,BYTE PTR ds:[rsi]
  4175f8:	(bad)  
  4175f9:	outs   dx,BYTE PTR ds:[rsi]
  4175fa:	add    BYTE PTR [rdi+0x5f],bl
  4175fd:	rex.RXB
  4175fe:	rex.WRX push rbp
  417600:	rex.XB pop r15
  417602:	pop    rdi
	...
  41761f:	add    BYTE PTR [rax+0x5c],al
  417622:	sub    BYTE PTR [rbx],ah
  417624:	pop    rsp
  417625:	sub    DWORD PTR [rbp+0x61],ebp
  417628:	je     0x417692
  41762a:	pop    rdi
  41762b:	movsxd edi,DWORD PTR [rcx]
  41762d:	cmp    DWORD PTR [rsi],ebp
  41762f:	push   0x5d09205b
  417634:	sub    esi,DWORD PTR [rcx]
  417636:	cs pop rbx
  417638:	xor    BYTE PTR [rip+0x5b2b5d39],ch        # 0x5b6cd377
  41763e:	and    BYTE PTR [rcx],cl
  417640:	pop    rbp
  417641:	sub    ebx,DWORD PTR [rbx+0x30]
  417644:	sub    eax,0x2b5d2f39
  417649:	and    BYTE PTR [rbx+0x4d],dl
  41764c:	rex.WB add BYTE PTR [r8],al
  41764f:	add    BYTE PTR [rcx+0x73],ch
  417652:	outs   dx,DWORD PTR ds:[rsi]
  417653:	(bad)  
  417654:	ins    DWORD PTR es:[rdi],dx
  417655:	(bad)  
  417656:	je     0x4176c0
  417658:	pop    rdi
  417659:	movsxd edi,DWORD PTR [rcx]
  41765b:	cmp    DWORD PTR [rsi],ebp
  41765d:	push   0x6f730000
  417662:	ins    BYTE PTR es:[rdi],dx
  417663:	(bad)  
  417664:	jb     0x4176cf
  417666:	jae    0x4176c7
  417668:	ins    DWORD PTR es:[rdi],dx
  417669:	(bad)  
  41766a:	je     0x4176d4
  41766c:	pop    rdi
  41766d:	xor    eax,DWORD PTR [rax]
  41766f:	add    BYTE PTR [rbx],ah
  417671:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4909
  417679:	rex.WRX
  41767a:	rex.RX
  41767b:	rex.WB
  41767c:	rex.WRX
  41767d:	rex.WB push r12
  41767f:	pop    rcx
  417680:	or     DWORD PTR [rax],ebp
  417682:	pop    rdi
  417683:	pop    rdi
  417684:	(bad)  
  417685:	jne    0x4176f0
  417687:	ins    BYTE PTR es:[rdi],dx
  417688:	je     0x4176f3
  41768a:	outs   dx,BYTE PTR ds:[rsi]
  41768b:	pop    rdi
  41768c:	imul   ebp,DWORD PTR [rsi+0x66],0x29292866
  417693:	add    BYTE PTR [rax],al
  417695:	add    BYTE PTR [rax],al
  417697:	add    BYTE PTR [rsi+0x23],bl
  41769a:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  4176a2:	or     DWORD PTR [rbp+0x2b],ebx
  4176a5:	rex.WB
  4176a6:	rex.WRX
  4176a7:	rex.RX
  4176a8:	rex.WB
  4176a9:	rex.WRX
  4176aa:	rex.WB push r12
  4176ac:	pop    rcx
  4176ad:	pop    rbx
  4176ae:	and    BYTE PTR [rcx],cl
  4176b0:	pop    rbp
  4176b1:	sub    ebx,DWORD PTR [rdi+0x5f]
  4176b4:	(bad)  
  4176b5:	jne    0x417720
  4176b7:	ins    BYTE PTR es:[rdi],dx
  4176b8:	je     0x417723
  4176ba:	outs   dx,BYTE PTR ds:[rsi]
  4176bb:	pop    rdi
  4176bc:	imul   ebp,DWORD PTR [rsi+0x66],0x74696e69
  4176c3:	jns    0x4176c5
  4176c5:	pop    rdi
  4176c6:	pop    rdi
  4176c7:	rex.RXB
  4176c8:	rex.WRX push rbp
  4176ca:	rex.XB pop r15
  4176cc:	pop    rdi
	...
  4176dd:	add    BYTE PTR [rax],al
  4176df:	add    BYTE PTR [rax+0x5c],al
  4176e2:	sub    BYTE PTR [rbx],ah
  4176e4:	pop    rsp
  4176e5:	sub    DWORD PTR [rbp+0x61],ebp
  4176e8:	je     0x417752
  4176ea:	pop    rdi
  4176eb:	movsxd edi,DWORD PTR [rcx]
  4176ed:	cmp    DWORD PTR [rsi],ebp
  4176ef:	push   0x5d09205b
  4176f4:	sub    esi,DWORD PTR [rcx]
  4176f6:	cs pop rbx
  4176f8:	xor    BYTE PTR [rip+0x5b2b5d39],ch        # 0x5b6cd437
  4176fe:	and    BYTE PTR [rcx],cl
  417700:	pop    rbp
  417701:	sub    ebx,DWORD PTR [rbx+0x30]
  417704:	sub    eax,0x2b5d2f39
  417709:	and    BYTE PTR [rbx+0x4d],dl
  41770c:	rex.WB add BYTE PTR [r8],al
  41770f:	add    BYTE PTR [rcx+0x73],ch
  417712:	outs   dx,DWORD PTR ds:[rsi]
  417713:	(bad)  
  417714:	ins    DWORD PTR es:[rdi],dx
  417715:	(bad)  
  417716:	je     0x417780
  417718:	pop    rdi
  417719:	movsxd edi,DWORD PTR [rcx]
  41771b:	cmp    DWORD PTR [rsi],ebp
  41771d:	push   0x6f730000
  417722:	ins    BYTE PTR es:[rdi],dx
  417723:	(bad)  
  417724:	jb     0x41778f
  417726:	jae    0x417787
  417728:	ins    DWORD PTR es:[rdi],dx
  417729:	(bad)  
  41772a:	je     0x417794
  41772c:	pop    rdi
  41772d:	xor    al,BYTE PTR [rax]
  41772f:	add    BYTE PTR [rbx],ah
  417731:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6909
  417739:	jae    0x4177a4
  41773b:	outs   dx,BYTE PTR ds:[rsi]
  41773c:	data16 sub BYTE PTR [rax+0x29],bh
  417740:	and    BYTE PTR [rdi+0x5f],bl
  417743:	(bad)  
  417744:	jne    0x4177af
  417746:	ins    BYTE PTR es:[rdi],dx
  417747:	je     0x4177b2
  417749:	outs   dx,BYTE PTR ds:[rsi]
  41774a:	pop    rdi
  41774b:	imul   esi,DWORD PTR [rbx+0x69],0x7828666e
  417752:	sub    DWORD PTR [rax],eax
  417754:	add    BYTE PTR [rax],al
  417756:	add    BYTE PTR [rax],al
  417758:	pop    rsi
  417759:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41775d:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  417764:	sub    ebp,DWORD PTR [rcx+0x73]
  417767:	imul   ebp,DWORD PTR [rsi+0x66],0x5c78285c
  41776e:	sub    DWORD PTR [rbx+0x20],ebx
  417771:	or     DWORD PTR [rbp+0x2b],ebx
  417774:	pop    rdi
  417775:	pop    rdi
  417776:	gs js  0x4177ed
  417779:	outs   dx,BYTE PTR gs:[rsi]
  41777b:	jae    0x4177e6
  41777d:	outs   dx,DWORD PTR ds:[rsi]
  41777e:	outs   dx,BYTE PTR ds:[rsi]
  41777f:	pop    rdi
  417780:	pop    rdi
  417781:	pop    rsp
  417782:	sub    BYTE PTR [rbx+0x20],bl
  417785:	or     DWORD PTR [rbp+0x2a],ebx
  417788:	pop    rsp
  417789:	pop    rsp
  41778a:	or     bl,BYTE PTR [rbx+0x20]
  41778d:	or     DWORD PTR [rbp+0x2a],ebx
  417790:	pop    rsp
  417791:	jnp    0x4177ee
  417793:	and    BYTE PTR [rcx],cl
  417795:	pop    rbp
  417796:	sub    bl,BYTE PTR [rdi+0x5f]
  417799:	je     0x417814
  41779b:	jo     0x417802
  41779d:	outs   dx,DWORD PTR ds:[rsi]
  41779e:	pop    sp
  4177a0:	sub    BYTE PTR [rax+0x5c],bh
  4177a3:	sub    DWORD PTR [rbx+0x20],ebx
  4177a6:	or     DWORD PTR [rbp+0x2a],ebx
  4177a9:	pop    rdi
  4177aa:	pop    rdi
  4177ab:	js     0x41780c
  4177ad:	imul   ebx,DWORD PTR [rbx+0x20],0x3d2a5d09
  4177b4:	pop    rbx
  4177b5:	and    BYTE PTR [rcx],cl
  4177b7:	pop    rbp
  4177b8:	sub    bl,BYTE PTR [rax+rbp*1+0x78]
  4177bc:	pop    rsp
  4177bd:	sub    DWORD PTR [rbx],edi
  4177bf:	pop    rbx
  4177c0:	and    BYTE PTR [rcx],cl
  4177c2:	pop    rbp
  4177c3:	sub    bl,BYTE PTR [rsp+rbx*2+0xa]
  4177c7:	pop    rbx
  4177c8:	and    BYTE PTR [rcx],cl
  4177ca:	pop    rbp
  4177cb:	sub    bl,BYTE PTR [rdi+0x5f]
  4177ce:	js     0x41782f
  4177d0:	imul   ebx,DWORD PTR [rbx+0x20],0x3d2a5d09
  4177d7:	cmp    eax,0x5d09205b
  4177dc:	sub    bl,BYTE PTR [rax+rbp*1+0x5f]
  4177e0:	pop    rdi
  4177e1:	je     0x41785c
  4177e3:	jo     0x41784a
  4177e5:	outs   dx,DWORD PTR ds:[rsi]
  4177e6:	pop    sp
  4177e8:	sub    BYTE PTR [rdi+0x5f],bl
  4177eb:	js     0x41784c
  4177ed:	imul   ebx,DWORD PTR [rcx+rbp*1+0x5c],0x9205b29
  4177f5:	pop    rbp
  4177f6:	sub    cl,BYTE PTR [rcx+0x4e]
  4177f9:	rex.RX
  4177fa:	rex.WB
  4177fb:	rex.WRX
  4177fc:	rex.WB push r12
  4177fe:	pop    rcx
  4177ff:	pop    rbx
  417800:	and    BYTE PTR [rcx],cl
  417802:	pop    rbp
  417803:	sub    bl,BYTE PTR [rsp+rdi*2+0x5c]
  417807:	jl     0x417864
  417809:	and    BYTE PTR [rcx],cl
  41780b:	pop    rbp
  41780c:	sub    bl,BYTE PTR [rsp+rbx*2+0xa]
  417810:	pop    rbx
  417811:	and    BYTE PTR [rcx],cl
  417813:	pop    rbp
  417814:	sub    bl,BYTE PTR [rdi+0x5f]
  417817:	js     0x417878
  417819:	imul   ebx,DWORD PTR [rbx+0x20],0x3d2a5d09
  417820:	cmp    eax,0x5d09205b
  417825:	sub    bl,BYTE PTR [rax+rbp*1+0x5f]
  417829:	pop    rdi
  41782a:	je     0x4178a5
  41782c:	jo     0x417893
  41782e:	outs   dx,DWORD PTR ds:[rsi]
  41782f:	pop    sp
  417831:	sub    BYTE PTR [rdi+0x5f],bl
  417834:	js     0x417895
  417836:	imul   ebx,DWORD PTR [rcx+rbp*1+0x5c],0x9205b29
  41783e:	pop    rbp
  41783f:	sub    bl,BYTE PTR [rax+rbp*1+0x2d]
  417843:	rex.WB
  417844:	rex.WRX
  417845:	rex.RX
  417846:	rex.WB
  417847:	rex.WRX
  417848:	rex.WB push r12
  41784a:	pop    rcx
  41784b:	pop    rsp
  41784c:	sub    DWORD PTR [rbx],edi
  41784e:	pop    rbx
  41784f:	and    BYTE PTR [rcx],cl
  417851:	pop    rbp
  417852:	sub    bl,BYTE PTR [rbp+rdi*2+0x5c]
  417856:	sub    DWORD PTR [rax],eax
	...
  417860:	rex pop rsp
  417862:	sub    BYTE PTR [rbx],ah
  417864:	pop    rsp
  417865:	sub    DWORD PTR [rbp+0x61],ebp
  417868:	je     0x4178d2
  41786a:	pop    rdi
  41786b:	movsxd edi,DWORD PTR [rcx]
  41786d:	cmp    DWORD PTR [rsi],ebp
  41786f:	push   0x5d09205b
  417874:	sub    esi,DWORD PTR [rcx]
  417876:	cs pop rbx
  417878:	xor    BYTE PTR [rip+0x5b2b5d39],ch        # 0x5b6cd5b7
  41787e:	and    BYTE PTR [rcx],cl
  417880:	pop    rbp
  417881:	sub    ebx,DWORD PTR [rbx+0x30]
  417884:	sub    eax,0x2b5d2f39
  417889:	and    BYTE PTR [rbx+0x4d],dl
  41788c:	rex.WB add BYTE PTR [r8],al
  41788f:	add    BYTE PTR [rcx+0x73],ch
  417892:	outs   dx,DWORD PTR ds:[rsi]
  417893:	(bad)  
  417894:	ins    DWORD PTR es:[rdi],dx
  417895:	(bad)  
  417896:	je     0x417900
  417898:	pop    rdi
  417899:	movsxd edi,DWORD PTR [rcx]
  41789b:	cmp    DWORD PTR [rsi],ebp
  41789d:	push   0x6f730000
  4178a2:	ins    BYTE PTR es:[rdi],dx
  4178a3:	(bad)  
  4178a4:	jb     0x41790f
  4178a6:	jae    0x417907
  4178a8:	ins    DWORD PTR es:[rdi],dx
  4178a9:	(bad)  
  4178aa:	je     0x417914
  4178ac:	pop    rdi
  4178ad:	xor    DWORD PTR [rax],esi
  4178af:	add    BYTE PTR [rbx],ah
  4178b1:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4809
  4178b9:	push   rbp
  4178ba:	rex.RXB
  4178bb:	rex.RB pop r15
  4178bd:	push   rsi
  4178be:	rex.B and eax,0x5f280931
  4178c4:	pop    rdi
  4178c5:	(bad)  
  4178c6:	jne    0x417931
  4178c8:	ins    BYTE PTR es:[rdi],dx
  4178c9:	je     0x417934
  4178cb:	outs   dx,BYTE PTR ds:[rsi]
  4178cc:	pop    rdi
  4178cd:	push   0x5f656775
  4178d2:	jbe    0x417935
  4178d4:	and    eax,0x29292832
  4178d9:	add    BYTE PTR [rax],al
  4178db:	add    BYTE PTR [rax],al
  4178dd:	add    BYTE PTR [rax],al
  4178df:	add    BYTE PTR [rsi+0x23],bl
  4178e2:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  4178ea:	or     DWORD PTR [rbp+0x2b],ebx
  4178ed:	rex.W push rbp
  4178ef:	rex.RXB
  4178f0:	rex.RB pop r15
  4178f2:	push   rsi
  4178f3:	sub    BYTE PTR [r11+0x4c],bl
  4178f7:	rex.RX pop rbp
  4178f9:	sub    ebp,DWORD PTR [rcx]
  4178fb:	pop    rbx
  4178fc:	and    BYTE PTR [rcx],cl
  4178fe:	pop    rbp
  4178ff:	sub    ebx,DWORD PTR [rdi+0x5f]
  417902:	(bad)  
  417903:	jne    0x41796e
  417905:	ins    BYTE PTR es:[rdi],dx
  417906:	je     0x417971
  417908:	outs   dx,BYTE PTR ds:[rsi]
  417909:	pop    rdi
  41790a:	push   0x5f656775
  41790f:	jbe    0x417972
  417911:	sub    BYTE PTR [rbx+0x6c],bl
  417914:	pop    bp
  417916:	sub    ebp,DWORD PTR [rcx]
  417918:	add    BYTE PTR [rdi+0x5f],bl
  41791b:	rex.RXB
  41791c:	rex.WRX push rbp
  41791e:	rex.XB pop r15
  417920:	pop    rdi
	...
  41793d:	add    BYTE PTR [rax],al
  41793f:	add    BYTE PTR [rax+0x5c],al
  417942:	sub    BYTE PTR [rbx],ah
  417944:	pop    rsp
  417945:	sub    DWORD PTR [rbp+0x61],ebp
  417948:	je     0x4179b2
  41794a:	pop    rdi
  41794b:	movsxd edi,DWORD PTR [rcx]
  41794d:	cmp    DWORD PTR [rsi],ebp
  41794f:	push   0x5d09205b
  417954:	sub    esi,DWORD PTR [rcx]
  417956:	cs pop rbx
  417958:	xor    BYTE PTR [rip+0x5b2b5d39],ch        # 0x5b6cd697
  41795e:	and    BYTE PTR [rcx],cl
  417960:	pop    rbp
  417961:	sub    ebx,DWORD PTR [rbx+0x30]
  417964:	sub    eax,0x2b5d2f39
  417969:	and    BYTE PTR [rbx+0x4d],dl
  41796c:	rex.WB add BYTE PTR [r8],al
  41796f:	add    BYTE PTR [rcx+0x73],ch
  417972:	outs   dx,DWORD PTR ds:[rsi]
  417973:	(bad)  
  417974:	ins    DWORD PTR es:[rdi],dx
  417975:	(bad)  
  417976:	je     0x4179e0
  417978:	pop    rdi
  417979:	movsxd edi,DWORD PTR [rcx]
  41797b:	cmp    DWORD PTR [rsi],ebp
  41797d:	push   0x6f730000
  417982:	ins    BYTE PTR es:[rdi],dx
  417983:	(bad)  
  417984:	jb     0x4179ef
  417986:	jae    0x4179e7
  417988:	ins    DWORD PTR es:[rdi],dx
  417989:	(bad)  
  41798a:	je     0x4179f4
  41798c:	pop    rdi
  41798d:	xor    DWORD PTR [rax],eax
  41798f:	add    BYTE PTR [rip+0x5f5f2031],ah        # 0x5fa099c6
  417995:	(bad)  
  417996:	je     0x417a0c
  417998:	jb     0x417a03
  41799a:	(bad)  
  41799b:	jne    0x417a11
  41799d:	gs pop rdi
  41799f:	pop    rdi
  4179a0:	and    BYTE PTR [rax],ch
  4179a2:	sub    BYTE PTR [rdi+0x5f],bl
  4179a5:	outs   dx,BYTE PTR ds:[rsi]
  4179a6:	outs   dx,DWORD PTR ds:[rsi]
  4179a7:	jb     0x417a0e
  4179a9:	je     0x417a20
  4179ab:	jb     0x417a1b
  4179ad:	pop    rdi
  4179ae:	pop    rdi
  4179af:	sub    DWORD PTR [rcx],ebp
  4179b1:	cmp    eax,DWORD PTR [rax]
  4179b3:	pop    rdi
  4179b4:	pop    rdi
  4179b5:	rex.WRX
  4179b6:	rex.WRXB push r10
  4179b8:	rex.RB push r12
  4179ba:	push   rbp
  4179bb:	push   rdx
  4179bc:	rex.WRX add BYTE PTR [rax],r8b
  4179bf:	add    BYTE PTR [rax],ch
  4179c1:	sub    ch,BYTE PTR cs:[rdi+rbp*2+0x6e]
  4179c6:	addr32 push 0x6d
  4179c9:	jo     0x417a27
  4179cb:	sub    BYTE PTR [rdx+0x6d],ch
  4179ce:	jo     0x417a2f
  4179d0:	(bad)  
  4179d1:	jne    0x417a39
  4179d3:	sub    bl,BYTE PTR cs:[rbx+0x5e]
  4179d7:	sub    DWORD PTR [rbp+0x2b],ebx
  4179da:	pop    rsp
  4179db:	sub    DWORD PTR [rcx],ebp
  4179dd:	cmp    eax,DWORD PTR [rax]
  4179df:	add    BYTE PTR [rcx+0x73],ch
  4179e2:	outs   dx,DWORD PTR ds:[rsi]
  4179e3:	(bad)  
  4179e4:	jae    0x417a4b
  4179e6:	je     0x417a52
  4179e8:	ins    DWORD PTR es:[rdi],dx
  4179e9:	jo     0x417a4a
  4179eb:	imul   esi,DWORD PTR [rbx+0x6f],0x682e
	...
  4179fe:	add    BYTE PTR [rax],al
  417a00:	jae    0x417a71
  417a02:	ins    BYTE PTR es:[rdi],dx
  417a03:	(bad)  
  417a04:	jb     0x417a6f
  417a06:	jae    0x417a67
  417a08:	ins    BYTE PTR es:[rdi],dx
  417a09:	outs   dx,DWORD PTR ds:[rsi]
  417a0a:	outs   dx,BYTE PTR ds:[rsi]
  417a0b:	addr32 push 0x6d
  417a0e:	jo     0x417a6f
  417a10:	outs   dx,BYTE PTR ds:[rsi]
  417a11:	outs   dx,DWORD PTR ds:[rsi]
  417a12:	jb     0x417a79
  417a14:	je     0x417a8b
  417a16:	jb     0x417a86
	...
  417a20:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  417a24:	imul   ebp,DWORD PTR [rsi+0x65],0x535f2864
  417a2b:	push   rsp
  417a2c:	rex.R
  417a2d:	rex.XB pop r15
  417a2f:	rex.XB cmp DWORD PTR [r9],edi
  417a32:	sub    DWORD PTR [rax],esp
  417a34:	jl     0x417ab2
  417a36:	and    BYTE PTR [rcx],ah
  417a38:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2864
  417a40:	pop    rdi
  417a41:	push   rbx
  417a42:	push   rsp
  417a43:	push   rdx
  417a44:	rex.WB
  417a45:	rex.XB push r12
  417a47:	pop    rdi
  417a48:	push   rbx
  417a49:	push   rsp
  417a4a:	rex.R
  417a4b:	rex.XB sub DWORD PTR [r8],esp
  417a4e:	jl     0x417acc
  417a50:	and    BYTE PTR [rbp+riz*2+0x66],ah
  417a54:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2864
  417a5b:	rex.RXB
  417a5c:	rex.WRX push rbp
  417a5e:	rex.XB pop r15
  417a60:	pop    rdi
  417a61:	sub    DWORD PTR [rcx],ebp
  417a63:	add    BYTE PTR [rdi+0x4c],bl
  417a66:	rex.WRXB
  417a67:	rex.WRX
  417a68:	rex.RXB
  417a69:	rex.WR
  417a6a:	rex.WRXB
  417a6b:	rex.WRX
  417a6c:	rex.RXB pop r15
  417a6e:	push   rsp
  417a6f:	pop    rcx
  417a70:	push   rax
  417a71:	add    BYTE PTR [r8],r8b
	...
  417a80:	pop    rdi
  417a81:	pop    rdi
  417a82:	push   rbx
  417a83:	push   rsp
  417a84:	rex.R
  417a85:	rex.XB pop r15
  417a87:	pop    rdi
  417a88:	and    BYTE PTR [rip+0x3d203020],ch        # 0x3d61aaae
  417a8e:	cmp    eax,0x3020
	...
  417a9f:	add    BYTE PTR [rbx+0x79],dh
  417aa2:	jae    0x417ad3
  417aa4:	imul   ebp,DWORD PTR [rsi+0x74],0x7079745f
  417aab:	gs jae 0x417adc
  417aae:	push   0x0
	...
  417abf:	add    BYTE PTR [rbx+0x6f],dh
  417ac2:	ins    BYTE PTR es:[rdi],dx
  417ac3:	(bad)  
  417ac4:	jb     0x417b2f
  417ac6:	jae    0x417b27
  417ac8:	imul   ebp,DWORD PTR [rsi+0x74],0x7079745f
  417acf:	gs jae 0x417ad2
  417ad2:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  417ad6:	imul   ebp,DWORD PTR [rsi+0x65],0x5a495309
  417add:	rex.RB pop r15
  417adf:	rex.WRB
  417ae0:	pop    r8
  417ae2:	or     DWORD PTR [rdx+rsi*1],esi
  417ae5:	cmp    DWORD PTR [rcx+rdi*1],esi
  417ae8:	ss (bad) 
  417aea:	xor    bh,BYTE PTR [rcx]
  417aec:	xor    eax,0x55
	...
  417afd:	add    BYTE PTR [rax],al
  417aff:	add    BYTE PTR [rsi+0x23],bl
  417b02:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  417b0a:	or     DWORD PTR [rbp+0x2b],ebx
  417b0d:	push   rbx
  417b0e:	rex.WB pop r10
  417b10:	rex.RB pop r15
  417b12:	rex.WRB
  417b13:	pop    r8
  417b15:	pop    rbx
  417b16:	and    BYTE PTR [rcx],cl
  417b18:	pop    rbp
  417b19:	sub    esi,DWORD PTR [rdx+rsi*1]
  417b1c:	cmp    DWORD PTR [rcx+rdi*1],esi
  417b1f:	ss (bad) 
  417b21:	xor    bh,BYTE PTR [rcx]
  417b23:	xor    eax,0x4c55
	...
  417b30:	jae    0x417bab
  417b32:	jae    0x417b63
  417b34:	imul   ebp,DWORD PTR [rsi+0x74],0x6d696c5f
  417b3b:	imul   esi,DWORD PTR [rbx+rsi*2+0x2e],0x68
	...
  417b4f:	add    BYTE PTR [rbx+0x6f],dh
  417b52:	ins    BYTE PTR es:[rdi],dx
  417b53:	(bad)  
  417b54:	jb     0x417bbf
  417b56:	jae    0x417bb7
  417b58:	imul   ebp,DWORD PTR [rsi+0x74],0x6d696c5f
  417b5f:	imul   esi,DWORD PTR [rbx+rsi*2+0x5f],0x64230033
  417b67:	imul   bp,WORD PTR gs:[rsi+0x65],0x2509
  417b6e:	xor    DWORD PTR [rdi+0x46],ebx
  417b71:	push   r11
  417b73:	push   rsp
  417b74:	xor    DWORD PTR [rsi],esi
  417b76:	pop    rdi
  417b77:	and    eax,0x31252032
  417b7c:	xor    esi,DWORD PTR [rdx]
  417b7e:	pop    rdi
  417b7f:	and    eax,0x32
	...
  417ba0:	pop    rsi
  417ba1:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  417ba5:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  417bac:	sub    ebp,DWORD PTR [rax]
  417bae:	rex.WB
  417baf:	rex.WRX push rsp
  417bb1:	jl     0x417c08
  417bb3:	rex.WB
  417bb4:	rex.WRX push rsp
  417bb6:	sub    DWORD PTR [rdi+0x46],ebx
  417bb9:	push   r11
  417bbb:	push   rsp
  417bbc:	xor    DWORD PTR [rsi],esi
  417bbe:	pop    rdi
  417bbf:	sub    BYTE PTR [rbp+0x41],cl
  417bc2:	pop    rax
  417bc3:	jl     0x417c12
  417bc5:	rex.WB
  417bc6:	rex.WRX sub QWORD PTR [rbx+0x20],r11
  417bca:	or     DWORD PTR [rbp+0x28],ebx
  417bcd:	rex.WB
  417bce:	rex.WRX push rsp
  417bd0:	jl     0x417c27
  417bd2:	rex.WB
  417bd3:	rex.WRX push rsp
  417bd5:	sub    DWORD PTR [rcx],esi
  417bd7:	ss sub al,BYTE PTR cs:[rax]
  417bdb:	add    BYTE PTR [rax],al
  417bdd:	add    BYTE PTR [rax],al
  417bdf:	add    BYTE PTR [rbx+0x79],dh
  417be2:	jae    0x417c13
  417be4:	imul   ebp,DWORD PTR [rsi+0x74],0x6d696c5f
  417beb:	imul   esi,DWORD PTR [rbx+rsi*2+0x2e],0x68
	...
  417bff:	add    BYTE PTR [rbx+0x6f],dh
  417c02:	ins    BYTE PTR es:[rdi],dx
  417c03:	(bad)  
  417c04:	jb     0x417c6f
  417c06:	jae    0x417c67
  417c08:	imul   ebp,DWORD PTR [rsi+0x74],0x6d696c5f
  417c0f:	imul   esi,DWORD PTR [rbx+rsi*2+0x5f],0x32
  417c17:	add    BYTE PTR [rbx],ah
  417c19:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5509
  417c21:	rex.WB
  417c22:	rex.WRX push rsp
  417c24:	cmp    BYTE PTR [rdi+0x4d],bl
  417c27:	pop    r8
  417c29:	or     DWORD PTR [rax],ebp
  417c2b:	xor    dh,BYTE PTR [rip+0x230a2935]        # 0x234ba566
  417c31:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5509
  417c39:	rex.WB
  417c3a:	rex.WRX push rsp
  417c3c:	xor    DWORD PTR [rsi],esi
  417c3e:	pop    rdi
  417c3f:	rex.WRB
  417c40:	pop    r8
  417c42:	or     DWORD PTR [rax],ebp
  417c44:	ss xor eax,0x29353335
	...
  417c7e:	add    BYTE PTR [rax],al
  417c80:	pop    rsi
  417c81:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  417c85:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  417c8c:	sub    edx,DWORD PTR [rbp+0x49]
  417c8f:	rex.WRX push rsp
  417c91:	cmp    BYTE PTR [rdi+0x4d],bl
  417c94:	pop    r8
  417c96:	pop    rbx
  417c97:	and    BYTE PTR [rcx],cl
  417c99:	pop    rbp
  417c9a:	sub    ebx,DWORD PTR [rax+rbp*1+0x32]
  417c9e:	xor    eax,0x295c5535
  417ca3:	or     ah,BYTE PTR [rbx]
  417ca5:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  417cad:	or     DWORD PTR [rbp+0x2b],ebx
  417cb0:	push   rbp
  417cb1:	rex.WB
  417cb2:	rex.WRX push rsp
  417cb4:	xor    DWORD PTR [rsi],esi
  417cb6:	pop    rdi
  417cb7:	rex.WRB
  417cb8:	pop    r8
  417cba:	pop    rbx
  417cbb:	and    BYTE PTR [rcx],cl
  417cbd:	pop    rbp
  417cbe:	sub    ebx,DWORD PTR [rax+rbp*1+0x36]
  417cc2:	xor    eax,0x55353335
  417cc7:	pop    rsp
  417cc8:	sub    DWORD PTR [rax],eax
  417cca:	add    BYTE PTR [rax],al
  417ccc:	add    BYTE PTR [rax],al
  417cce:	add    BYTE PTR [rax],al
  417cd0:	jae    0x417d4b
  417cd2:	jae    0x417d03
  417cd4:	imul   ebp,DWORD PTR [rsi+0x74],0x6d696c5f
  417cdb:	imul   esi,DWORD PTR [rbx+rsi*2+0x2e],0x68
	...
  417cef:	add    BYTE PTR [rbx+0x6f],dh
  417cf2:	ins    BYTE PTR es:[rdi],dx
  417cf3:	(bad)  
  417cf4:	jb     0x417d5f
  417cf6:	jae    0x417d57
  417cf8:	imul   ebp,DWORD PTR [rsi+0x74],0x6d696c5f
  417cff:	imul   esi,DWORD PTR [rbx+rsi*2+0x5f],0x31
  417d07:	add    BYTE PTR [rbx],ah
  417d09:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5509
  417d11:	rex.WB
  417d12:	rex.WRX push rsp
  417d14:	cmp    BYTE PTR [rdi+0x43],bl
  417d17:	sub    BYTE PTR [rbx+0x29],ah
  417d1a:	or     DWORD PTR [rax],ebp
  417d1c:	movsxd ebp,DWORD PTR [rcx]
  417d1e:	or     ah,BYTE PTR [rip+0x64230a31]        # 0x64648755
  417d24:	imul   bp,WORD PTR gs:[rsi+0x65],0x5509
  417d2b:	rex.WB
  417d2c:	rex.WRX push rsp
  417d2e:	xor    DWORD PTR [rsi],esi
  417d30:	pop    rdi
  417d31:	rex.XB sub BYTE PTR [r11+0x29],spl
  417d35:	or     DWORD PTR [rax],ebp
  417d37:	movsxd ebp,DWORD PTR [rcx]
  417d39:	add    BYTE PTR [rax],al
  417d3b:	add    BYTE PTR [rax],al
  417d3d:	add    BYTE PTR [rax],al
  417d3f:	add    BYTE PTR [rsi+0x23],bl
  417d42:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  417d4a:	or     DWORD PTR [rbp+0x2b],ebx
  417d4d:	push   rbp
  417d4e:	rex.WB
  417d4f:	rex.WRX push rsp
  417d51:	cmp    BYTE PTR [rdi+0x43],bl
  417d54:	pop    rsp
  417d55:	sub    BYTE PTR [rbx+0x5c],ah
  417d58:	sub    DWORD PTR [rbx+0x20],ebx
  417d5b:	or     DWORD PTR [rbp+0x2b],ebx
  417d5e:	pop    rdi
  417d5f:	pop    rdi
  417d60:	rex.XB
  417d61:	rex.WRXB
  417d62:	rex.WRX
  417d63:	rex.XB
  417d64:	push   r12
  417d66:	pop    rdi
  417d67:	pop    rdi
  417d68:	sub    cl,BYTE PTR cs:[rdx]
  417d6b:	sub    BYTE PTR [rdi],ch
  417d6d:	sub    ch,BYTE PTR [rsi]
  417d6f:	sub    ch,BYTE PTR [rdx]
  417d71:	(bad)  
  417d72:	sub    DWORD PTR [rdx],ecx
  417d74:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  417d78:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  417d7f:	sub    edx,DWORD PTR [rbp+0x49]
  417d82:	rex.WRX push rsp
  417d84:	xor    DWORD PTR [rsi],esi
  417d86:	pop    rdi
  417d87:	rex.XB pop r12
  417d89:	sub    BYTE PTR [rbx+0x5c],ah
  417d8c:	sub    DWORD PTR [rbx+0x20],ebx
  417d8f:	or     DWORD PTR [rbp+0x2b],ebx
  417d92:	pop    rdi
  417d93:	pop    rdi
  417d94:	rex.XB
  417d95:	rex.WRXB
  417d96:	rex.WRX
  417d97:	rex.XB
  417d98:	push   r12
  417d9a:	pop    rdi
  417d9b:	pop    rdi
  417d9c:	sub    al,BYTE PTR cs:[rax]
  417d9f:	add    BYTE PTR [rbx+0x79],dh
  417da2:	jae    0x417dd3
  417da4:	imul   ebp,DWORD PTR [rsi+0x74],0x6e6f635f
  417dab:	jae    0x417e21
  417dad:	cs push 0x0
	...
  417dbf:	add    BYTE PTR [rbx+0x6f],dh
  417dc2:	ins    BYTE PTR es:[rdi],dx
  417dc3:	(bad)  
  417dc4:	jb     0x417e2f
  417dc6:	jae    0x417e27
  417dc8:	imul   ebp,DWORD PTR [rsi+0x74],0x6e6f635f
  417dcf:	jae    0x417e45
  417dd1:	add    BYTE PTR [rax],al
  417dd3:	add    BYTE PTR [rax],al
  417dd5:	add    BYTE PTR [rax],al
  417dd7:	add    BYTE PTR [rip+0x64212831],ah        # 0x6462a60e
  417ddd:	imul   bp,WORD PTR gs:[rsi+0x65],0x2864
  417de4:	pop    rdi
  417de5:	push   rbx
  417de6:	push   rsp
  417de7:	push   rdx
  417de8:	rex.WB
  417de9:	rex.XB push r12
  417deb:	pop    rdi
  417dec:	push   rbx
  417ded:	push   rsp
  417dee:	rex.R
  417def:	rex.XB sub DWORD PTR [r8],esp
  417df2:	jl     0x417e70
  417df4:	and    BYTE PTR [rax],ch
  417df6:	pop    rdi
  417df7:	pop    rdi
  417df8:	movsxd esi,DWORD PTR [rax+0x6c]
  417dfb:	jne    0x417e70
  417dfd:	jo     0x417e6b
  417dff:	jne    0x417e74
  417e01:	and    BYTE PTR [rsi],bh
  417e03:	cmp    eax,0x39393120
  417e08:	(bad)  
  417e09:	xor    DWORD PTR [rcx],esi
  417e0b:	sub    QWORD PTR [rcx],r13
  417e0e:	and    eax,0x32
	...
  417e1f:	add    BYTE PTR [rax],ch
  417e21:	sub    ah,BYTE PTR cs:[rsi]
  417e24:	and    BYTE PTR es:[rcx],ch
  417e27:	and    DWORD PTR [rbp+riz*2+0x66],esp
  417e2b:	imul   ebp,DWORD PTR [rsi+0x65],0x5f285c64
  417e32:	push   rbx
  417e33:	push   rsp
  417e34:	push   rdx
  417e35:	rex.WB
  417e36:	rex.XB push r12
  417e38:	pop    rdi
  417e39:	push   rbx
  417e3a:	push   rsp
  417e3b:	rex.R
  417e3c:	rex.XB pop r12
  417e3e:	sub    DWORD PTR [rax],ebp
  417e40:	sub    ch,BYTE PTR cs:[rcx]
	...
  417e4f:	add    BYTE PTR [rcx+0x73],ch
  417e52:	outs   dx,DWORD PTR ds:[rsi]
  417e53:	(bad)  
  417e54:	jae    0x417eca
  417e56:	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x2e6f7369
  417e5e:	push   0x0
	...
  417e6f:	add    BYTE PTR [rbx+0x6f],dh
  417e72:	ins    BYTE PTR es:[rdi],dx
  417e73:	(bad)  
  417e74:	jb     0x417edf
  417e76:	jae    0x417ed7
  417e78:	addr32 gs je 0x417edf
  417e7c:	pop    rdi
  417e7d:	jae    0x417ef3
  417e7f:	jb     0x417eea
  417e81:	movsxd esi,DWORD PTR [rdi+rbx*2+0x73]
  417e85:	je     0x417eeb
  417e87:	movsxd eax,DWORD PTR [rax]
  417e89:	and    eax,0x26262031
  417e8e:	and    BYTE PTR [rcx],ah
  417e90:	pop    rdi
  417e91:	pop    rdi
  417e92:	rex.RXB
  417e93:	rex.WRX push rbp
  417e95:	rex.RXB pop r15
  417e97:	pop    rdi
  417e98:	or     ah,BYTE PTR [rip+0x332532]        # 0x74a3d0
	...
  417ebe:	add    BYTE PTR [rax],al
  417ec0:	sub    BYTE PTR [rbx],ah
  417ec2:	imul   esp,DWORD PTR [rsi+0x20],0x70635f5f
  417ec9:	ins    BYTE PTR es:[rdi],dx
  417eca:	jne    0x417f3f
  417ecc:	jo     0x417f3a
  417ece:	jne    0x417f43
  417ed0:	and    BYTE PTR [rsi],bh
  417ed2:	cmp    eax,0x39393120
  417ed7:	(bad)  
  417ed8:	xor    DWORD PTR [rcx],esi
  417eda:	sub    QWORD PTR [rdx],r9
  417edd:	sub    BYTE PTR [rbp+0x78],ah
  417ee0:	je     0x417f47
  417ee2:	jb     0x417f52
  417ee4:	and    BYTE PTR [rdx],ah
  417ee6:	rex.XB pop r12
  417ee8:	sub    ebx,DWORD PTR [rbx+rbp*1+0x22]
  417eec:	and    BYTE PTR [rbx+rdi*2+0xa],bl
  417ef0:	sub    DWORD PTR [rax],ebp
  417ef2:	sub    ch,BYTE PTR cs:[rax]
  417ef5:	(bad)
  417efa:	movsxd ebp,DWORD PTR [rax+0x7c]
  417efd:	jno    0x417f72
  417eff:	outs   dx,DWORD PTR ds:[rsi]
  417f00:	jb     0x417f76
  417f02:	sub    DWORD PTR [rsi],ebp
  417f04:	sub    ch,BYTE PTR [rcx]
	...
  417f0e:	add    BYTE PTR [rax],al
  417f10:	imul   esi,DWORD PTR [rbx+0x6f],0x6474732f
  417f17:	ins    BYTE PTR es:[rdi],dx
  417f18:	imul   esp,DWORD PTR [rdx+0x5f],0x2e6f7369
  417f1f:	push   0x0
	...
  417f30:	jae    0x417fa1
  417f32:	ins    BYTE PTR es:[rdi],dx
  417f33:	(bad)  
  417f34:	jb     0x417f9f
  417f36:	jae    0x417f97
  417f38:	movsxd edi,DWORD PTR [rax+0x78]
  417f3b:	pop    rdi
  417f3c:	ins    BYTE PTR es:[rdi],dx
  417f3d:	imul   ebp,DWORD PTR [rsi+0x6b],0x656761
  417f44:	add    BYTE PTR [rax],al
  417f46:	add    BYTE PTR [rax],al
  417f48:	(bad)  
  417f49:	and    ebp,DWORD PTR [rcx+0x66]
  417f4c:	pop    rbx
  417f4d:	and    BYTE PTR [rcx],cl
  417f4f:	pop    rbp
  417f50:	sub    ah,BYTE PTR [rcx]
  417f52:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2864
  417f5a:	pop    rdi
  417f5b:	pop    rdi
  417f5c:	movsxd esi,DWORD PTR [rax+0x6c]
  417f5f:	jne    0x417fd4
  417f61:	jo     0x417fcf
  417f63:	jne    0x417fd8
  417f65:	sub    DWORD PTR [rdi],ebp
  417f67:	movsxd ebx,DWORD PTR [rdx+rcx*1+0x23]
  417f6b:	imul   esp,DWORD PTR [rsi+0x64],0x5f096665
  417f72:	pop    rdi
  417f73:	movsxd esi,DWORD PTR [rax+0x6c]
  417f76:	jne    0x417feb
  417f78:	jo     0x417fe6
  417f7a:	jne    0x417fef
  417f7c:	pop    rsp
  417f7d:	or     ah,BYTE PTR [rbp+0x78]
  417f80:	je     0x417fe7
  417f82:	jb     0x417ff2
  417f84:	and    BYTE PTR [rdx],ah
  417f86:	rex.XB and spl,BYTE PTR [r8]
  417f89:	jnp    0x417fe7
  417f8b:	or     ah,BYTE PTR [rbx]
  417f8d:	outs   dx,BYTE PTR gs:[rsi]
  417f8f:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
  417f97:	add    BYTE PTR [rdi],ch
  417f99:	and    esp,DWORD PTR [rbp+0x6e]
  417f9c:	imul   esp,DWORD PTR fs:[rsi+0x5b],0x2a5d0920
  417fa4:	pop    rsp
  417fa5:	(bad)  
  417fa6:	pop    rsp
  417fa7:	sub    ah,BYTE PTR [rax]
  417fa9:	and    DWORD PTR [rbp+riz*2+0x66],esp
  417fad:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2864
  417fb4:	movsxd esi,DWORD PTR [rax+0x6c]
  417fb7:	jne    0x41802c
  417fb9:	jo     0x418027
  417fbb:	jne    0x418030
  417fbd:	sub    DWORD PTR [rax],esp
  417fbf:	pop    rsp
  417fc0:	sub    bl,BYTE PTR [rdi+rbp*1+0x2f]
  417fc4:	movsxd ebx,DWORD PTR [rdx+rcx*1+0x23]
  417fc8:	imul   esp,DWORD PTR [rsi+0x64],0x5f096665
  417fcf:	pop    rdi
  417fd0:	movsxd esi,DWORD PTR [rax+0x6c]
  417fd3:	jne    0x418048
  417fd5:	jo     0x418043
  417fd7:	jne    0x41804c
  417fd9:	pop    rsp
  417fda:	or     bh,BYTE PTR [rbp+0x5c]
  417fdd:	or     ah,BYTE PTR [rbx]
  417fdf:	outs   dx,BYTE PTR gs:[rsi]
  417fe1:	imul   esp,DWORD PTR fs:[rsi+0x0],0x2d2a2d2a
  417fe9:	jae    0x41805a
  417feb:	ins    BYTE PTR es:[rdi],dx
  417fec:	(bad)  
  417fed:	jb     0x418058
  417fef:	jae    0x418023
  417ff1:	sub    al,BYTE PTR cs:[rax]
  417ff4:	movsxd ebp,DWORD PTR [rdi+0x6d]
  417ff7:	jo     0x418065
  417ff9:	gs js  0x41802a
  417ffc:	push   0x73000000
  418001:	outs   dx,DWORD PTR ds:[rsi]
  418002:	ins    BYTE PTR es:[rdi],dx
  418003:	(bad)  
  418004:	jb     0x41806f
  418006:	jae    0x418067
  418008:	movsxd ebp,DWORD PTR [rdi+0x6d]
  41800b:	jo     0x418079
  41800d:	gs js  0x41806f
  418010:	movsxd edi,DWORD PTR [rax+0x78]
  418013:	add    BYTE PTR [rax],al
  418015:	add    BYTE PTR [rax],al
  418017:	add    BYTE PTR [rbx+0x2f],dh
  41801a:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41801e:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  418025:	pop    rdi
  418026:	rex.XB outs dx,DWORD PTR ds:[rsi]
  418028:	ins    DWORD PTR es:[rdi],dx
  418029:	jo     0x418097
  41802b:	gs js  0x41808d
  41802e:	rex.WB pop r11
  418030:	and    BYTE PTR [rcx],cl
  418032:	pop    rbp
  418033:	pop    rdi
  418034:	rex.XB outs dx,DWORD PTR ds:[rsi]
  418036:	ins    DWORD PTR es:[rdi],dx
  418037:	jo     0x4180a5
  418039:	gs js  0x41809b
  41803c:	rex.WB (bad) 
  41803e:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  418042:	imul   ebp,DWORD PTR [rsi+0x65],0x6f435f09
  418049:	ins    DWORD PTR es:[rdi],dx
  41804a:	jo     0x4180b8
  41804c:	gs js  0x4180ae
  41804f:	or     QWORD PTR [r8],rbp
  418052:	pop    rdi
  418053:	pop    rdi
  418054:	gs js  0x4180cb
  418057:	outs   dx,BYTE PTR gs:[rsi]
  418059:	jae    0x4180c4
  41805b:	outs   dx,DWORD PTR ds:[rsi]
  41805c:	outs   dx,BYTE PTR ds:[rsi]
  41805d:	pop    rdi
  41805e:	pop    rdi
  41805f:	and    BYTE PTR [rcx],dh
  418061:	xor    BYTE PTR cs:[rcx+0x46],ch
  418065:	sub    DWORD PTR [rdi],ebp
  418067:	add    BYTE PTR [rdi],ch
  418069:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41806d:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  418074:	pop    rdi
  418075:	rex.WB ins DWORD PTR es:[rdi],dx
  418077:	(bad)  
  418078:	imul   ebp,DWORD PTR [esi+0x61],0x495f7972
  418080:	pop    rbx
  418081:	and    BYTE PTR [rcx],cl
  418083:	pop    rbp
  418084:	pop    rdi
  418085:	rex.WB ins DWORD PTR es:[rdi],dx
  418087:	(bad)  
  418088:	imul   ebp,DWORD PTR [esi+0x61],0x495f7972
  418090:	(bad)  
  418091:	add    BYTE PTR fs:[rax],al
  418094:	add    BYTE PTR [rax],al
  418096:	add    BYTE PTR [rax],al
  418098:	(bad)  
  418099:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41809d:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  4180a4:	imul   ebp,DWORD PTR [rbp+0x61],0x616e6967
  4180ab:	jb     0x418126
  4180ad:	pop    rbx
  4180ae:	and    BYTE PTR [rcx],cl
  4180b0:	pop    rbp
  4180b1:	pop    rdi
  4180b2:	rex.WB ins DWORD PTR es:[rdi],dx
  4180b4:	(bad)  
  4180b5:	imul   ebp,DWORD PTR [esi+0x61],0x642f7972
  4180bd:	add    BYTE PTR [rax],al
  4180bf:	add    BYTE PTR [rbx+0x2f],dh
  4180c2:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  4180c6:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  4180cd:	rex.WB pop r11
  4180cf:	and    BYTE PTR [rcx],cl
  4180d1:	pop    rbp
  4180d2:	pop    rsp
  4180d3:	jnp    0x418106
  4180d5:	sub    al,0x5c
  4180d7:	jge    0x418138
  4180d9:	rex.WB ins DWORD PTR es:[rdi],dx
  4180db:	(bad)  
  4180dc:	imul   ebp,DWORD PTR [esi+0x61],0x495f7972
  4180e4:	(bad)  
  4180e5:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  4180e9:	imul   ebp,DWORD PTR [rsi+0x65],0x9094909
  4180f0:	pop    rdi
  4180f1:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4180f3:	ins    DWORD PTR es:[rdi],dx
  4180f4:	jo     0x418162
  4180f6:	gs js  0x418158
  4180f9:	rex.WB (bad) 
  4180fb:	add    BYTE PTR [rax],al
  4180fd:	add    BYTE PTR [rax],al
  4180ff:	add    BYTE PTR [rbx],ah
  418101:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  418109:	or     DWORD PTR [rbp+0x5f],ebx
  41810c:	rex.XB outs dx,DWORD PTR ds:[rsi]
  41810e:	ins    DWORD PTR es:[rdi],dx
  41810f:	jo     0x41817d
  418111:	gs js  0x418173
  418114:	rex.WB pop r11
  418116:	and    BYTE PTR [rcx],cl
  418118:	pop    rbp
  418119:	pop    rdi
  41811a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  41811c:	ins    DWORD PTR es:[rdi],dx
  41811d:	jo     0x41818b
  41811f:	gs js  0x418181
  418122:	rex.WB add BYTE PTR [r11+0x6f],spl
  418126:	ins    DWORD PTR es:[rdi],dx
  418127:	jo     0x418195
  418129:	gs js  0x41815a
  41812c:	push   0x73000000
  418131:	outs   dx,DWORD PTR ds:[rsi]
  418132:	ins    BYTE PTR es:[rdi],dx
  418133:	(bad)  
  418134:	jb     0x41819f
  418136:	jae    0x418197
  418138:	movsxd ebp,DWORD PTR [rdi+0x6d]
  41813b:	jo     0x4181a9
  41813d:	gs js  0x418140
  418140:	and    ebp,DWORD PTR [rcx+0x66]
  418143:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  418149:	movsxd esi,DWORD PTR [rax+0x6c]
  41814c:	jne    0x4181c1
  41814e:	jo     0x4181bc
  418150:	jne    0x4181c5
  418152:	or     ah,BYTE PTR [rbx]
  418154:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f09
  41815c:	push   rdx
  41815d:	rex.RB push r11
  41815f:	push   rsp
  418160:	push   rdx
  418161:	rex.WB
  418162:	rex.XB push r12
  418164:	pop    rdi
  418165:	rex.WXB pop r9
  418167:	push   rdi
  418168:	or     DWORD PTR [rdi+0x5f],r11d
  41816c:	jb     0x4181d3
  41816e:	jae    0x4181e4
  418170:	jb     0x4181db
  418172:	movsxd esi,DWORD PTR [rdx+rcx*1+0x23]
  418176:	gs ins BYTE PTR es:[rdi],dx
  418178:	jae    0x4181df
  41817a:	or     ah,BYTE PTR [rip+0x65230a30]        # 0x65648bb0
  418180:	outs   dx,BYTE PTR ds:[rsi]
  418181:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
	...
  41819d:	add    BYTE PTR [rax],al
  41819f:	add    BYTE PTR [rbx],ah
  4181a1:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  4181a9:	or     DWORD PTR [rbp+0x2a],ebx
  4181ac:	pop    rdi
  4181ad:	push   rdx
  4181ae:	rex.RB push r11
  4181b0:	push   rsp
  4181b1:	push   rdx
  4181b2:	rex.WB
  4181b3:	rex.XB push r12
  4181b5:	pop    rdi
  4181b6:	rex.WXB pop r9
  4181b8:	push   rdi
  4181b9:	rex.R pop rbx
  4181bb:	and    BYTE PTR [rcx],cl
  4181bd:	pop    rbp
  4181be:	sub    dh,BYTE PTR [rdx+0x65]
  4181c1:	jae    0x418237
  4181c3:	jb     0x41822e
  4181c5:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  4181c9:	add    BYTE PTR [rax],al
  4181cb:	add    BYTE PTR [rax],al
  4181cd:	add    BYTE PTR [rax],al
  4181cf:	add    BYTE PTR [rbx+0x79],dh
  4181d2:	jae    0x418203
  4181d4:	data16 gs (bad) 
  4181d7:	je     0x41824e
  4181d9:	jb     0x418240
  4181db:	pop    rdi
  4181dc:	je     0x418243
  4181de:	jae    0x418254
  4181e0:	jae    0x418210
  4181e2:	push   0x0
	...
  4181ef:	add    BYTE PTR [rbx+0x6f],dh
  4181f2:	ins    BYTE PTR es:[rdi],dx
  4181f3:	(bad)  
  4181f4:	jb     0x41825f
  4181f6:	jae    0x418257
  4181f8:	pop    rdi
  4181f9:	pop    rdi
  4181fa:	jb     0x418261
  4181fc:	jae    0x418272
  4181fe:	jb     0x418269
  418200:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  418204:	add    BYTE PTR [rax],al
  418206:	add    BYTE PTR [rax],al
  418208:	jb     0x41826f
  41820a:	outs   dx,BYTE PTR ds:[rsi]
  41820b:	(bad)  
  41820c:	ins    DWORD PTR es:[rdi],dx
  41820d:	sub    BYTE PTR gs:[rbx+0x6f],ah
  418211:	outs   dx,BYTE PTR ds:[rsi]
  418212:	jae    0x418288
  418214:	and    BYTE PTR [rbx+0x68],ah
  418217:	(bad)  
  418218:	jb     0x41823a
  41821a:	sub    bl,BYTE PTR [rdi+0x6f]
  41821d:	ins    BYTE PTR es:[rdi],dx
  41821e:	fs sub al,0x20
  418221:	movsxd ebp,DWORD PTR [rdi+0x6e]
  418224:	jae    0x41829a
  418226:	and    BYTE PTR [rbx+0x68],ah
  418229:	(bad)  
  41822a:	jb     0x41824c
  41822c:	sub    bl,BYTE PTR [rdi+0x6e]
  41822f:	gs ja  0x41825b
	...
  41823e:	add    BYTE PTR [rax],al
  418240:	jb     0x4182a7
  418242:	outs   dx,BYTE PTR ds:[rsi]
  418243:	(bad)  
  418244:	ins    DWORD PTR es:[rdi],dx
  418245:	gs pop rsp
  418247:	sub    BYTE PTR [rbx+0x6f],ah
  41824a:	outs   dx,BYTE PTR ds:[rsi]
  41824b:	jae    0x4182c1
  41824d:	and    BYTE PTR [rbx+0x68],ah
  418250:	(bad)  
  418251:	jb     0x418273
  418253:	pop    rsp
  418254:	sub    ch,BYTE PTR [rdi+0x6c]
  418257:	fs sub al,0x20
  41825a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41825d:	jae    0x4182d3
  41825f:	and    BYTE PTR [rbx+0x68],ah
  418262:	(bad)  
  418263:	jb     0x418285
  418265:	pop    rsp
  418266:	sub    ch,BYTE PTR [rsi+0x65]
  418269:	ja     0x4182c7
  41826b:	sub    DWORD PTR [rax],eax
  41826d:	add    BYTE PTR [rax],al
  41826f:	add    BYTE PTR [rbx+0x74],dh
  418272:	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x6e750068
  41827a:	imul   esi,DWORD PTR [rbx+0x74],0x682e64
  418281:	add    BYTE PTR [rdx+0x73],dh
  418284:	xor    BYTE PTR ss:[rax],dh
  418287:	xor    BYTE PTR [rdi+0x70],bl
  41828a:	(bad)  
  41828b:	jb     0x4182ee
  41828d:	ins    DWORD PTR es:[rdi],dx
  41828e:	add    BYTE PTR [rsi+0x63],ah
  418291:	push   0x28646f6d
  418296:	imul   ebp,DWORD PTR [rsi+0x74],0x0
  41829d:	add    BYTE PTR [rax],al
  41829f:	add    BYTE PTR [rsi+0x63],ah
  4182a2:	push   0x5c646f6d
  4182a7:	sub    BYTE PTR [rbx+0x68],ah
  4182aa:	(bad)  
  4182ab:	jb     0x4182cd
  4182ad:	pop    rsp
  4182ae:	sub    al,BYTE PTR [rax]
  4182b0:	jae    0x41832b
  4182b2:	jae    0x4182e3
  4182b4:	jae    0x41832a
  4182b6:	(bad)  
  4182b7:	je     0x4182e7
  4182b9:	push   0x73720000
  4182be:	xor    BYTE PTR ss:[rax],dh
  4182c1:	xor    BYTE PTR [rdi+0x66],bl
  4182c4:	movsxd ebp,DWORD PTR [rax+0x6d]
  4182c7:	outs   dx,DWORD PTR ds:[rsi]
  4182c8:	add    BYTE PTR fs:[rbx],ah
  4182cb:	imul   esp,DWORD PTR [rsi+0x6e],0x20666564
  4182d2:	pop    rdi
  4182d3:	pop    rdi
  4182d4:	movsxd esi,DWORD PTR [rax+0x6c]
  4182d7:	jne    0x41834c
  4182d9:	jo     0x418347
  4182db:	jne    0x418350
  4182dd:	or     ah,BYTE PTR [rip+0x65230a30]        # 0x65648d13
  4182e3:	outs   dx,BYTE PTR ds:[rsi]
  4182e4:	imul   esp,DWORD PTR fs:[rsi+0x0],0x5b2a2e5e
  4182ec:	pop    rsi
  4182ed:	(bad)  
  4182ee:	sub    eax,0x5a2d417a
  4182f3:	pop    rdi
  4182f4:	pop    rbp
  4182f5:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4182f9:	jae    0x418357
  4182fb:	sub    BYTE PTR [rsi],ch
  4182fd:	sub    al,BYTE PTR [rax]
  4182ff:	add    BYTE PTR [rbx+0x5e],bl
  418302:	(bad)  
  418303:	sub    eax,0x5a2d417a
  418308:	pop    rdi
  418309:	pop    rbp
  41830a:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  41830e:	jae    0x41836c
  418310:	sub    BYTE PTR [rax],al
  418312:	ins    DWORD PTR es:[rdi],dx
  418313:	(bad)  
  418314:	je     0x41837e
  418316:	cs push 0x73720000
  41831c:	xor    BYTE PTR ss:[rax],dh
  41831f:	xor    BYTE PTR [rdi+0x64],bl
  418322:	outs   dx,DWORD PTR ds:[rsi]
  418323:	jne    0x418387
  418325:	ins    BYTE PTR es:[rdi],dx
  418326:	add    BYTE PTR gs:[rbx],ah
  418329:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  418331:	pop    rax
  418332:	rex.R push rdx
  418334:	pop    rdi
  418335:	push   rax
  418336:	push   rbp
  418337:	push   rsp
  418338:	pop    rdi
  418339:	rex.WR
  41833a:	rex.WRXB
  41833b:	rex.WRX
  41833c:	rex.RXB sub BYTE PTR [r10+0x75],r12b
  418340:	data16 sub al,0x20
  418343:	jbe    0x41836e
  418345:	and    BYTE PTR [rax],ch
  418347:	sub    BYTE PTR [rdi+rbp*2+0x6e],ch
  41834b:	sub    DWORD PTR [ecx+0x58],ecx
  41834f:	rex.R push rdx
  418351:	pop    rdi
  418352:	push   rax
  418353:	push   rbp
  418354:	push   rsp
  418355:	pop    rdi
  418356:	rex.WB
  418357:	rex.WRX push rsp
  418359:	xor    esi,DWORD PTR [rdx]
  41835b:	sub    BYTE PTR [rdx+0x75],ah
  41835e:	data16 sub al,0x20
  418361:	sub    BYTE PTR [rdi+rbp*2+0x6e],ch
  418365:	sub    DWORD PTR [eax],ebp
  418368:	jbe    0x418393
  41836a:	sub    DWORD PTR [rcx],ebp
	...
  418380:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  418384:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41838b:	sub    cl,BYTE PTR [rcx+0x58]
  41838e:	rex.R push rdx
  418390:	pop    rdi
  418391:	push   rax
  418392:	push   rbp
  418393:	push   rsp
  418394:	pop    rdi
  418395:	rex.WR
  418396:	rex.WRXB
  418397:	rex.WRX
  418398:	rex.RXB
  418399:	sub    bl,BYTE PTR cs:[rsp+rbx*2+0xa]
  41839e:	sub    bl,BYTE PTR cs:[rdi+0x5f]
  4183a2:	gs js  0x418419
  4183a5:	outs   dx,BYTE PTR gs:[rsi]
  4183a7:	jae    0x418412
  4183a9:	outs   dx,DWORD PTR ds:[rsi]
  4183aa:	outs   dx,BYTE PTR ds:[rsi]
  4183ab:	pop    rdi
  4183ac:	pop    rdi
  4183ad:	sub    al,BYTE PTR cs:[rax]
  4183b0:	jb     0x418422
  4183b2:	movsxd ebp,DWORD PTR [rdi]
  4183b4:	js     0x41841a
  4183b6:	jb     0x4183e6
  4183b8:	push   0x0
  4183bd:	add    BYTE PTR [rax],al
  4183bf:	add    BYTE PTR [rdx+0x70],dh
  4183c2:	movsxd ebx,DWORD PTR [rdi+0x78]
  4183c5:	fs jb  0x418427
  4183c8:	ins    BYTE PTR es:[rdi],dx
  4183c9:	jbe    0x41842c
  4183cb:	ins    BYTE PTR es:[rdi],dx
  4183cc:	jne    0x418433
  4183ce:	pop    rdi
  4183cf:	movsxd esp,DWORD PTR [rcx+0x73]
  4183d2:	je     0x418433
  4183d4:	(bad)  
  4183d5:	add    BYTE PTR [rax],al
  4183d7:	add    BYTE PTR [rbx],ah
  4183d9:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  4183e1:	pop    rax
  4183e2:	rex.R push rdx
  4183e4:	pop    rdi
  4183e5:	rex.RXB
  4183e6:	rex.RB push r12
  4183e8:	pop    rdi
  4183e9:	rex.WR
  4183ea:	rex.WRXB
  4183eb:	rex.WRX
  4183ec:	rex.RXB sub BYTE PTR [r10+0x75],r12b
  4183f0:	sub    WORD PTR [rax],sp
  4183f3:	sub    BYTE PTR [rax],ch
  4183f5:	ins    BYTE PTR es:[rdi],dx
  4183f6:	outs   dx,DWORD PTR ds:[rsi]
  4183f7:	outs   dx,BYTE PTR ds:[rsi]
  4183f8:	sub    DWORD PTR [ecx+0x58],ecx
  4183fc:	rex.R push rdx
  4183fe:	pop    rdi
  4183ff:	rex.RXB
  418400:	rex.RB push r12
  418402:	pop    rdi
  418403:	push   rbp
  418404:	pop    rdi
  418405:	rex.WB
  418406:	rex.WRX push rsp
  418408:	xor    esi,DWORD PTR [rdx]
  41840a:	sub    BYTE PTR [rdx+0x75],ah
  41840d:	sub    WORD PTR [rcx],bp
	...
  418420:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  418424:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41842b:	sub    cl,BYTE PTR [rcx+0x58]
  41842e:	rex.R push rdx
  418430:	pop    rdi
  418431:	rex.RXB
  418432:	rex.RB push r12
  418434:	pop    rdi
  418435:	rex.WR
  418436:	rex.WRXB
  418437:	rex.WRX
  418438:	rex.RXB
  418439:	sub    bl,BYTE PTR cs:[rsp+rbx*2+0xa]
  41843e:	sub    bl,BYTE PTR cs:[rdi+0x5f]
  418442:	gs js  0x4184b9
  418445:	outs   dx,BYTE PTR gs:[rsi]
  418447:	jae    0x4184b2
  418449:	outs   dx,DWORD PTR ds:[rsi]
  41844a:	outs   dx,BYTE PTR ds:[rsi]
  41844b:	pop    rdi
  41844c:	pop    rdi
  41844d:	sub    al,BYTE PTR cs:[rax]
  418450:	jb     0x4184c2
  418452:	movsxd ebp,DWORD PTR [rdi]
  418454:	js     0x4184ba
  418456:	jb     0x418486
  418458:	push   0x0
  41845d:	add    BYTE PTR [rax],al
  41845f:	add    BYTE PTR [rdx+0x70],dh
  418462:	movsxd ebx,DWORD PTR [rdi+0x78]
  418465:	fs jb  0x4184c7
  418468:	ins    BYTE PTR es:[rdi],dx
  418469:	jbe    0x4184cc
  41846b:	ins    BYTE PTR es:[rdi],dx
  41846c:	jne    0x4184d3
  41846e:	pop    rdi
  41846f:	movsxd esp,DWORD PTR [rcx+0x73]
  418472:	je     0x4184d3
  418474:	(bad)  
  418475:	add    BYTE PTR [rax],al
  418477:	add    BYTE PTR [rbp+0x78],ah
  41847a:	je     0x4184e1
  41847c:	jb     0x4184ec
  41847e:	and    BYTE PTR [rbp+0x6e],dh
  418481:	jae    0x4184ec
  418483:	outs   dx,BYTE PTR ds:[esi]
  418485:	gs and BYTE PTR fs:[rcx+0x6e],ch
  41848a:	je     0x4184ac
  41848c:	data16 jb 0x4184f4
  41848f:	(bad)  
  418490:	sub    BYTE PTR fs:[rcx],ch
  418493:	sub    al,0x20
  418495:	data16 ja 0x41850a
  418498:	imul   esi,DWORD PTR [rbp+riz*2+0x28],0x250a3b29
  4184a0:	xor    DWORD PTR [rip+0x32],esp        # 0x4184d8
  4184a6:	add    BYTE PTR [rax],al
  4184a8:	sub    BYTE PTR [rbp+0x78],ah
  4184ab:	je     0x418512
  4184ad:	jb     0x41851d
  4184af:	and    BYTE PTR [rcx+0x6e],ch
  4184b2:	je     0x4184bd
  4184b4:	sub    ch,BYTE PTR cs:[rcx]
  4184b7:	sub    al,0x20
  4184b9:	data16 jb 0x418521
  4184bc:	(bad)  
  4184bd:	fs pop rsp
  4184bf:	sub    BYTE PTR [rcx+rbp*1+0x2c],bl
  4184c3:	and    BYTE PTR [rsi+0x77],ah
  4184c6:	jb     0x418531
  4184c8:	je     0x41852f
  4184ca:	pop    rsp
  4184cb:	sub    BYTE PTR [rcx+rbp*1+0x28],bl
  4184cf:	sub    ch,BYTE PTR cs:[rcx]
	...
  4184de:	add    BYTE PTR [rax],al
  4184e0:	gs js  0x418557
  4184e3:	gs jb  0x418554
  4184e6:	and    BYTE PTR [rcx+0x6e],ch
  4184e9:	je     0x4184f4
  4184eb:	sub    ch,BYTE PTR cs:[rax+riz*1]
  4184ef:	data16 jb 0x418557
  4184f2:	(bad)  
  4184f3:	fs pop rsp
  4184f5:	sub    BYTE PTR [rcx+rbp*1+0x2c],bl
  4184f9:	and    BYTE PTR [rsi+0x77],ah
  4184fc:	jb     0x418567
  4184fe:	je     0x418565
  418500:	pop    rsp
  418501:	sub    BYTE PTR [rcx+rbp*1+0x0],bl
  418505:	jae    0x41857b
  418507:	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x72000068
  41850f:	gs (bad) 
  418511:	fs pop rdi
  418513:	jb     0x41857a
  418515:	je     0x418576
  418517:	je     0x418592
  418519:	jo     0x418580
  41851b:	add    BYTE PTR [rip+0x252a2031],ah        # 0x256ba552
  418521:	xor    ah,BYTE PTR [rip+0x33]        # 0x41855a
  418527:	add    BYTE PTR [rsi+0x28],bl
  41852a:	gs js  0x4185a1
  41852d:	gs jb  0x41859e
  418530:	and    BYTE PTR [rcx+0x6e],ch
  418533:	je     0x418555
  418535:	pop    rdi
  418536:	pop    rdi
  418537:	jae    0x4185a2
  418539:	addr32 jae 0x4185a1
  41853c:	je     0x4185a8
  41853e:	ins    DWORD PTR es:[rdi],dx
  41853f:	jo     0x418561
  418541:	pop    rsp
  418542:	sub    BYTE PTR [rbx+0x74],dh
  418545:	jb     0x4185bc
  418547:	movsxd esi,DWORD PTR [rax+riz*1+0x5f]
  41854b:	pop    rdi
  41854c:	push   0x6d
  41854e:	jo     0x4185af
  418550:	(bad)  
  418551:	jne    0x4185b9
  418553:	pop    rdi
  418554:	je     0x4185b7
  418556:	sub    DWORD PTR [eax],esp
  418559:	sub    BYTE PTR [rdi+0x5f],bl
  41855c:	outs   dx,BYTE PTR gs:[rsi]
  41855e:	jbe    0x418589
  418560:	pop    rsp
  418561:	pop    rbx
  418562:	xor    DWORD PTR [rbp+rbx*2+0x28],ebx
  418566:	sub    ch,BYTE PTR cs:[rcx]
  418569:	and    al,0x0
  41856b:	add    BYTE PTR [rax],al
  41856d:	add    BYTE PTR [rax],al
  41856f:	add    BYTE PTR [rbx+0x74],dh
  418572:	jb     0x4185e9
  418574:	movsxd esi,DWORD PTR [rax+riz*1+0x5f]
  418578:	pop    rdi
  418579:	push   0x6d
  41857b:	jo     0x4185dc
  41857d:	(bad)  
  41857e:	jne    0x4185e6
  418580:	pop    rdi
  418581:	je     0x4185e4
  418583:	add    BYTE PTR [eax+0x74],dh
  418587:	push   0x64616572
  41858c:	cs push 0x0
	...
  41859e:	add    BYTE PTR [rax],al
  4185a0:	jo     0x418616
  4185a2:	push   0x64616572
  4185a7:	pop    rdi
  4185a8:	imul   ebp,DWORD PTR [rsi+0x63],0x6c706d6f
  4185af:	gs je  0x418617
  4185b2:	pop    rdi
  4185b3:	jae    0x418629
  4185b5:	jb     0x41862c
  4185b7:	movsxd esi,DWORD PTR [rdi+rbx*2+0x61]
  4185bb:	jb     0x418624
  4185bd:	jne    0x41862c
  4185bf:	outs   dx,BYTE PTR gs:[rsi]
  4185c1:	je     0x4185c3
  4185c3:	add    BYTE PTR [rax],al
  4185c5:	add    BYTE PTR [rax],al
  4185c7:	add    BYTE PTR [rip+0x79740a30],ah        # 0x79b58ffd
  4185cd:	jo     0x418634
  4185cf:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  4185d5:	jb     0x41863c
  4185d7:	addr32 gs js 0x41863a
  4185db:	je     0x4185e6
  4185dd:	jb     0x418644
  4185df:	addr32 gs js 0x418642
  4185e3:	je     0x418620
  4185e5:	or     dh,BYTE PTR [rcx+rdi*2+0x70]
  4185e9:	gs fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  4185f0:	jb     0x418657
  4185f2:	outs   dx,DWORD PTR ds:[esi]
  4185f4:	data16 pop di
  4185f7:	je     0x418602
  4185f9:	jb     0x418660
  4185fb:	outs   dx,DWORD PTR ds:[esi]
  4185fd:	data16 pop di
  418600:	je     0x41863d
  418602:	or     dh,BYTE PTR [rcx+rdi*2+0x70]
  418606:	gs fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  41860d:	jb     0x418674
  41860f:	ins    DWORD PTR es:[edi],dx
  418611:	(bad)  
  418612:	je     0x418677
  418614:	push   0x7209745f
  418619:	gs ins DWORD PTR es:[edi],dx
  41861c:	(bad)  
  41861d:	je     0x418682
  41861f:	push   0x3b745f
	...
  418630:	and    BYTE PTR [rip+0x6022207a],ch        # 0x6063a6b0
  418636:	addr32 jb 0x41869e
  418639:	jo     0x41865b
  41863b:	pop    rdi
  41863c:	pop    rdi
  41863d:	jb     0x4186a4
  41863f:	addr32 gs js 0x4186a2
  418643:	je     0x418665
  418645:	jb     0x4186ac
  418647:	addr32 gs js 0x418679
  41864b:	push   0x2260
	...
  418660:	and    BYTE PTR [rip+0x6022206e],ch        # 0x6063a6d4
  418666:	addr32 jb 0x4186ce
  418669:	jo     0x41868b
  41866b:	(bad)  
  41866c:	jge    0x41868e
  41866e:	jb     0x4186d5
  418670:	addr32 gs js 0x4186d3
  418674:	je     0x4186b1
  418676:	(bad)  
  418677:	and    BYTE PTR [rdx+0x65],dh
  41867a:	addr32 pop rdi
  41867c:	je     0x4186f7
  41867e:	jo     0x4186e5
  418680:	jae    0x4186b0
  418682:	push   0x2260
	...
  41868f:	add    BYTE PTR [rax],ah
  418691:	sub    eax,0x79732072
  418696:	jae    0x4186c7
  418698:	ins    BYTE PTR es:[rdi],dx
  418699:	movsxd ebx,DWORD PTR [rdi+0x63]
  41869c:	outs   dx,DWORD PTR ds:[rsi]
  41869d:	jb     0x418704
  41869f:	cs push 0x0
	...
  4186ad:	add    BYTE PTR [rax],al
  4186af:	add    BYTE PTR [rax],ah
  4186b1:	sub    eax,0x65722072
  4186b6:	addr32 pop rdi
  4186b8:	je     0x418733
  4186ba:	jo     0x418721
  4186bc:	jae    0x4186ec
  4186be:	push   0x6e692300
  4186c3:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  4186c7:	and    BYTE PTR gs:[rdx+rsi*2],bh
  4186cb:	gs addr32 pop rdi
  4186ce:	je     0x418749
  4186d0:	jo     0x418737
  4186d2:	jae    0x418702
  4186d4:	push   0x2a2e3e
  4186d9:	jb     0x418740
  4186db:	addr32 gs js 0x41870d
  4186df:	push   0x0
	...
  4186f0:	outs   dx,DWORD PTR ds:[rsi]
  4186f1:	jae    0x418759
  4186f3:	pop    rdi
  4186f4:	outs   dx,BYTE PTR ds:[rsi]
  4186f5:	(bad)  
  4186f6:	ins    DWORD PTR es:[rdi],dx
  4186f7:	gs jae 0x41876a
  4186fa:	(bad)  
  4186fb:	movsxd esp,DWORD PTR [rbp+0x5f]
  4186fe:	movsxd eax,DWORD PTR [rax]
  418700:	pop    rdi
  418701:	pop    rdi
  418702:	and    eax,0x65720030
  418707:	sub    BYTE PTR [ebp+0x78],ah
  41870b:	jl     0x41877c
  41870d:	data16 data16 jl 0x41877e
  418711:	(bad)  
  418712:	je     0x418777
  418714:	push   0x745f29
  418719:	add    BYTE PTR [rax],al
  41871b:	add    BYTE PTR [rax],al
  41871d:	add    BYTE PTR [rax],al
  41871f:	add    BYTE PTR [rax],ah
  418721:	sub    eax,0x6022207a
  418726:	addr32 jb 0x41878e
  418729:	jo     0x41874b
  41872b:	pop    rdi
  41872c:	pop    rdi
  41872d:	jb     0x418794
  41872f:	addr32 gs js 0x418792
  418733:	je     0x418755
  418735:	jb     0x41879c
  418737:	addr32 gs js 0x418769
  41873b:	push   0x2260
  418740:	and    BYTE PTR [rip+0x6022206e],ch        # 0x6063a7b4
  418746:	addr32 jb 0x4187ae
  418749:	jo     0x41876b
  41874b:	(bad)  
  41874c:	jge    0x41876e
  41874e:	jb     0x4187b5
  418750:	addr32 gs js 0x4187b3
  418754:	je     0x418791
  418756:	(bad)  
  418757:	and    BYTE PTR [rdx+0x65],dh
  41875a:	addr32 pop rdi
  41875c:	je     0x4187d7
  41875e:	jo     0x4187c5
  418760:	jae    0x418790
  418762:	push   0x2260
	...
  41876f:	add    BYTE PTR [rax],ah
  418771:	sub    eax,0x79732072
  418776:	jae    0x4187a7
  418778:	ins    BYTE PTR es:[rdi],dx
  418779:	movsxd ebx,DWORD PTR [rdi+0x63]
  41877c:	outs   dx,DWORD PTR ds:[rsi]
  41877d:	jb     0x4187e4
  41877f:	cs push 0x0
	...
  41878d:	add    BYTE PTR [rax],al
  41878f:	add    BYTE PTR [rax],ah
  418791:	sub    eax,0x65722072
  418796:	addr32 pop rdi
  418798:	je     0x418813
  41879a:	jo     0x418801
  41879c:	jae    0x4187cc
  41879e:	push   0x67657200
  4187a3:	pop    rdi
  4187a4:	je     0x41881f
  4187a6:	jo     0x41880d
  4187a8:	jae    0x4187d8
  4187aa:	push   0x73797300
  4187af:	(bad)  
  4187b0:	ins    BYTE PTR es:[rdi],dx
  4187b1:	movsxd ebx,DWORD PTR [rdi+0x63]
  4187b4:	outs   dx,DWORD PTR ds:[rsi]
  4187b5:	jb     0x41881c
  4187b7:	cs push 0x0
  4187bd:	add    BYTE PTR [rax],al
  4187bf:	add    BYTE PTR [rdi+0x73],ch
  4187c2:	pop    di
  4187c4:	outs   dx,BYTE PTR ds:[rsi]
  4187c5:	(bad)  
  4187c6:	ins    DWORD PTR es:[rdi],dx
  4187c7:	gs jae 0x41883a
  4187ca:	(bad)  
  4187cb:	movsxd esp,DWORD PTR [rbp+0x5f]
  4187ce:	(bad)  
  4187cf:	add    BYTE PTR [rdi+0x5f],bl
  4187d2:	(bad)  
  4187d3:	jne    0x41883e
  4187d5:	ins    BYTE PTR es:[rdi],dx
  4187d6:	je     0x418841
  4187d8:	outs   dx,BYTE PTR ds:[rsi]
  4187d9:	pop    rdi
  4187da:	jbe    0x41883d
  4187dc:	pop    rdi
  4187dd:	jae    0x418853
  4187df:	(bad)  
  4187e0:	jb     0x418856
	...
  4187ee:	add    BYTE PTR [rax],al
  4187f0:	pop    rdi
  4187f1:	pop    rdi
  4187f2:	(bad)  
  4187f3:	jne    0x41885e
  4187f5:	ins    BYTE PTR es:[rdi],dx
  4187f6:	je     0x418861
  4187f8:	outs   dx,BYTE PTR ds:[rsi]
  4187f9:	pop    rdi
  4187fa:	jae    0x418870
  4187fc:	fs (bad) 
  4187fe:	jb     0x418867
  418800:	pop    rdi
  418801:	jae    0x418877
  418803:	(bad)  
  418804:	jb     0x41887a
  418806:	add    BYTE PTR [rdx],ch
  418808:	sub    eax,0x706f2d2a
  41880d:	outs   dx,BYTE PTR gs:[rsi]
  41880f:	(bad)
  418814:	jae    0x41888a
  418816:	fs (bad) 
  418818:	jb     0x418881
  41881a:	cs push 0x0
  418820:	outs   dx,DWORD PTR ds:[rsi]
  418821:	jo     0x418888
  418823:	outs   dx,BYTE PTR ds:[rsi]
  418824:	(bad)
  418829:	(bad)  
  41882a:	pop    rdi
  41882b:	jae    0x4188a1
  41882d:	(bad)  
  41882e:	jb     0x4188a4
	...
  418838:	sub    BYTE PTR [rax],ch
  41883a:	sub    ch,BYTE PTR [rax]
  41883c:	sub    BYTE PTR [rip+0x25292a31],ah        # 0x256ab273
  418842:	xor    ch,BYTE PTR [rcx]
  418844:	and    BYTE PTR [rip+0x33252820],bh        # 0x3366b06a
  41884a:	sub    DWORD PTR [rcx],ebp
  41884c:	sub    al,0x20
  41884e:	sub    BYTE PTR [rip+0x3d2b2032],ah        # 0x3d6ca886
  418854:	and    BYTE PTR [rbx+0x69],dh
  418857:	jp     0x4188be
  418859:	outs   dx,DWORD PTR ds:[rsi]
  41885a:	data16 and BYTE PTR [rax],ch
  41885d:	and    eax,0x29292931
	...
  41887e:	add    BYTE PTR [rax],al
  418880:	pop    rsp
  418881:	sub    bl,BYTE PTR [rax+rbp*1+0x5c]
  418885:	sub    BYTE PTR [rax],ch
  418887:	pop    rbx
  418888:	pop    rsi
  418889:	sub    BYTE PTR [rcx],ch
  41888b:	pop    rbp
  41888c:	sub    ch,BYTE PTR [rcx]
  41888e:	pop    rsp
  41888f:	sub    bl,BYTE PTR [rcx+rbp*1+0x28]
  418893:	sub    ch,BYTE PTR cs:[rcx]
  418896:	pop    rsp
  418897:	sub    DWORD PTR [rbx+rbp*1+0x5c],ebx
  41889b:	sub    esp,DWORD PTR [rax]
  41889d:	cmp    eax,0x28285c20
  4188a2:	pop    rbx
  4188a3:	pop    rsi
  4188a4:	sub    BYTE PTR [rcx],ch
  4188a6:	pop    rbp
  4188a7:	sub    ch,BYTE PTR [rcx]
  4188a9:	pop    rsp
  4188aa:	sub    DWORD PTR [rax],eax
  4188ac:	outs   dx,DWORD PTR ds:[rsi]
  4188ad:	(bad)
  4188b2:	imul   ebp,DWORD PTR [rsi],0x68
	...
  4188bd:	add    BYTE PTR [rax],al
  4188bf:	add    BYTE PTR [rdi+0x62],ch
  4188c2:	jae    0x418938
  4188c4:	(bad)  
  4188c5:	movsxd ebp,DWORD PTR [rbx+0x5f]
  4188c8:	ins    BYTE PTR es:[rdi],dx
  4188c9:	jbe    0x41892c
  4188cb:	ins    BYTE PTR es:[rdi],dx
  4188cc:	jne    0x418933
  4188ce:	pop    rdi
  4188cf:	movsxd esp,DWORD PTR [rcx+0x73]
  4188d2:	je     0x4188d4
  4188d4:	add    BYTE PTR [rax],al
  4188d6:	add    BYTE PTR [rax],al
  4188d8:	and    ebp,DWORD PTR [rcx+0x66]
  4188db:	outs   dx,BYTE PTR ds:[rsi]
  4188dc:	fs data16 and BYTE PTR gs:[rsi+0x55],cl
  4188e2:	rex.WR
  4188e3:	rex.WR or r12b,BYTE PTR [rbx]
  4188e6:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  4188ed:	pop    rdi
  4188ee:	movsxd esi,DWORD PTR [rax+0x6c]
  4188f1:	jne    0x418966
  4188f3:	jo     0x418961
  4188f5:	jne    0x41896a
  4188f7:	or     ah,BYTE PTR [rbx]
  4188f9:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  418900:	pop    rdi
  418901:	rex.RXB
  418902:	rex.WRX push rbp
  418904:	rex.RXB pop r15
  418906:	pop    rdi
  418907:	or     ah,BYTE PTR [rbx]
  418909:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4e20
  418911:	push   rbp
  418912:	rex.WR
  418913:	or     QWORD PTR [rdi+0x5f],r11
  418917:	outs   dx,BYTE PTR ds:[rsi]
  418918:	jne    0x418986
  41891a:	ins    BYTE PTR es:[rdi],dx
  41891b:	or     ah,BYTE PTR [rbx]
  41891d:	gs ins BYTE PTR es:[rdi],dx
  41891f:	jae    0x418986
  418921:	or     DWORD PTR [rax],esp
  418923:	(bad)  
  418924:	sub    ah,BYTE PTR [rax]
  418926:	and    DWORD PTR [rax],esp
  418928:	pop    rdi
  418929:	pop    rdi
  41892a:	rex.RXB
  41892b:	rex.WRX push rbp
  41892d:	rex.RXB pop r15
  41892f:	pop    rdi
  418930:	and    BYTE PTR [rax],ah
  418932:	sub    ch,BYTE PTR [rdi]
  418934:	or     ah,BYTE PTR [rbx]
  418936:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4e20
  41893e:	push   rbp
  41893f:	rex.WR
  418940:	or     QWORD PTR [rax],r14
  418943:	rex.WR or r12b,BYTE PTR [rbx]
  418946:	outs   dx,BYTE PTR gs:[rsi]
  418948:	imul   esp,DWORD PTR fs:[rsi+0x9],0x202a2f20
  418950:	pop    rdi
  418951:	pop    rdi
  418952:	rex.RXB
  418953:	rex.WRX push rbp
  418955:	rex.RXB pop r15
  418957:	pop    rdi
  418958:	and    BYTE PTR [rax],ah
  41895a:	sub    ch,BYTE PTR [rdi]
  41895c:	or     ah,BYTE PTR [rbx]
  41895e:	gs ins BYTE PTR es:[rdi],dx
  418960:	jae    0x4189c7
  418962:	or     DWORD PTR [rax],esp
  418964:	(bad)  
  418965:	sub    ah,BYTE PTR [rax]
  418967:	and    DWORD PTR [rax],esp
  418969:	pop    rdi
  41896a:	pop    rdi
  41896b:	movsxd esi,DWORD PTR [rax+0x6c]
  41896e:	jne    0x4189e3
  418970:	jo     0x4189de
  418972:	jne    0x4189e7
  418974:	and    BYTE PTR [rax],ah
  418976:	sub    ch,BYTE PTR [rdi]
  418978:	or     ah,BYTE PTR [rbx]
  41897a:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4e20
  418982:	push   rbp
  418983:	rex.WR
  418984:	or     QWORD PTR [rax],r13
  418987:	sub    BYTE PTR [rsi+0x6f],dh
  41898a:	imul   esp,DWORD PTR [rax+riz*1+0x2a],0xa293029
  418992:	and    esp,DWORD PTR [rbp+0x6e]
  418995:	imul   esp,DWORD PTR fs:[rsi+0x9],0x202a2f20
  41899d:	pop    rdi
  41899e:	pop    rdi
  41899f:	movsxd esi,DWORD PTR [rax+0x6c]
  4189a2:	jne    0x418a17
  4189a4:	jo     0x418a12
  4189a6:	jne    0x418a1b
  4189a8:	and    BYTE PTR [rax],ah
  4189aa:	sub    ch,BYTE PTR [rdi]
  4189ac:	or     ah,BYTE PTR [rbx]
  4189ae:	outs   dx,BYTE PTR gs:[rsi]
  4189b0:	imul   esp,DWORD PTR fs:[rsi+0x9],0x202a2f20
  4189b8:	and    DWORD PTR [rsi+0x55],ecx
  4189bb:	rex.WR
  4189bc:	rex.WR and BYTE PTR [rax],r12b
  4189bf:	sub    ch,BYTE PTR [rdi]
  4189c1:	add    BYTE PTR [rax],al
  4189c3:	add    BYTE PTR [rax],al
  4189c5:	add    BYTE PTR [rax],al
  4189c7:	add    BYTE PTR [rsi+0x23],bl
  4189ca:	imul   esp,DWORD PTR [rsi+0x6e],0x5b666564
  4189d1:	and    BYTE PTR [rcx],cl
  4189d3:	pop    rbp
  4189d4:	sub    cl,BYTE PTR [rsi+0x55]
  4189d7:	rex.WR
  4189d8:	rex.WR or r11b,BYTE PTR [rsi+0x23]
  4189dc:	imul   esp,DWORD PTR [rsi+0x64],0x205b6665
  4189e3:	or     DWORD PTR [rbp+0x2a],ebx
  4189e6:	pop    rdi
  4189e7:	pop    rdi
  4189e8:	rex.RXB
  4189e9:	rex.WRX push rbp
  4189eb:	rex.RXB pop r15
  4189ed:	pop    rdi
  4189ee:	or     bl,BYTE PTR [rsi+0x23]
  4189f1:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  4189f9:	or     DWORD PTR [rbp+0x2a],ebx
  4189fc:	rex.WRX push rbp
  4189fe:	rex.WR
  4189ff:	rex.WR pop rbx
  418a01:	and    BYTE PTR [rcx],cl
  418a03:	pop    rbp
  418a04:	sub    bl,BYTE PTR [rdi+0x5f]
  418a07:	outs   dx,BYTE PTR ds:[rsi]
  418a08:	jne    0x418a76
  418a0a:	ins    BYTE PTR es:[rdi],dx
  418a0b:	or     bl,BYTE PTR [rsi+0x23]
  418a0e:	gs ins BYTE PTR es:[rdi],dx
  418a10:	jae    0x418a77
  418a12:	or     bl,BYTE PTR [rsi+0x23]
  418a15:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  418a1d:	or     DWORD PTR [rbp+0x2a],ebx
  418a20:	rex.WRX push rbp
  418a22:	rex.WR
  418a23:	rex.WR pop rbx
  418a25:	and    BYTE PTR [rcx],cl
  418a27:	pop    rbp
  418a28:	sub    dh,BYTE PTR [rax]
  418a2a:	rex.WR or r11b,BYTE PTR [rsi+0x23]
  418a2e:	outs   dx,BYTE PTR gs:[rsi]
  418a30:	imul   esp,DWORD PTR fs:[rsi+0xa],0x6e65235e
  418a38:	imul   esp,DWORD PTR fs:[rsi+0x0],0x4e475f5f
  418a40:	push   rbp
  418a41:	rex.RXB pop r15
  418a43:	pop    rdi
	...
  418a80:	ins    BYTE PTR es:[rdi],dx
  418a81:	outs   dx,DWORD PTR ds:[rsi]
  418a82:	movsxd esp,DWORD PTR [rcx+0x6c]
  418a85:	gs cs push 0x64747300
  418a8c:	fs gs cs pushw 0x7300
  418a93:	je     0x418af9
  418a95:	imul   ebp,DWORD PTR [rdi+0x2e],0x74730068
  418a9c:	jb     0x418b07
  418a9e:	outs   dx,BYTE PTR ds:[rsi]
  418a9f:	addr32 cs push 0x6d697400
  418aa6:	gs cs push 0x696e7500
  418aad:	jae    0x418b23
  418aaf:	fs cs push 0x68637700
  418ab6:	(bad)  
  418ab7:	jb     0x418ae7
  418ab9:	push   0x73797300
  418abe:	(bad)  
  418abf:	jo     0x418b22
  418ac1:	jb     0x418b24
  418ac3:	ins    DWORD PTR es:[rdi],dx
  418ac4:	cs push 0x0
  418aca:	add    BYTE PTR [rax],al
  418acc:	add    BYTE PTR [rax],al
  418ace:	add    BYTE PTR [rax],al
  418ad0:	outs   dx,DWORD PTR ds:[rsi]
  418ad1:	jo     0x418b38
  418ad3:	outs   dx,BYTE PTR ds:[rsi]
  418ad4:	(bad)
  418ad9:	jne    0x418b47
  418adb:	ins    BYTE PTR es:[rdi],dx
  418adc:	pop    rdi
  418add:	fs imul bp,WORD PTR gs:[rsi+0x69],0x6974
  418ae5:	outs   dx,DWORD PTR ds:[rsi]
  418ae6:	outs   dx,BYTE PTR ds:[rsi]
  418ae7:	add    BYTE PTR [rip+0x3b30],ah        # 0x41c61d
  418aed:	add    BYTE PTR [rax],al
  418aef:	add    BYTE PTR [rbx+0x68],ah
  418af2:	(bad)  
  418af3:	jb     0x418b50
  418af5:	and    BYTE PTR [rcx],cl
  418af7:	pop    rbp
  418af8:	sub    bl,BYTE PTR [rdx+rbp*1+0x6e]
  418afc:	(bad)  
  418afd:	pop    rdi
  418afe:	(bad)  
  418aff:	fs fs jb 0x418b5e
  418b03:	and    BYTE PTR [rcx],cl
  418b05:	pop    rbp
  418b06:	sub    ah,BYTE PTR [rax+rax*1]
  418b09:	add    BYTE PTR [rax],al
  418b0b:	add    BYTE PTR [rax],al
  418b0d:	add    BYTE PTR [rax],al
  418b0f:	add    BYTE PTR [rsi+0x65],ch
  418b12:	je     0x418b78
  418b14:	outs   dx,BYTE PTR ds:[rsi]
  418b15:	gs je  0x418b47
  418b18:	outs   dx,BYTE PTR fs:[rsi]
  418b1a:	gs je  0x418b81
  418b1d:	(bad)  
  418b1e:	cs push 0x6f6e0000
  418b24:	fs gs outs dx,BYTE PTR gs:[rsi]
  418b28:	je     0x418b89
  418b2a:	jae    0x418ba5
  418b2c:	outs   dx,BYTE PTR ds:[rsi]
  418b2d:	je     0x418b90
  418b2f:	js     0x418b31
  418b31:	ja     0x418b94
  418b33:	imul   esi,DWORD PTR [rax+rbp*1+0x76],0x64696f
  418b3b:	add    BYTE PTR [rax],al
  418b3d:	add    BYTE PTR [rax],al
  418b3f:	add    BYTE PTR [rdi+0x61],dh
  418b42:	imul   esi,DWORD PTR [rsp+rbx*2+0x28],0x6f696e75
  418b4a:	outs   dx,BYTE PTR ds:[rsi]
  418b4b:	and    BYTE PTR [rdi+0x61],dh
  418b4e:	imul   esi,DWORD PTR [rax+rax*1+0x73],0x772f7379
  418b56:	(bad)  
  418b57:	imul   esi,DWORD PTR [rsi+rbp*1+0x68],0x0
  418b5f:	add    BYTE PTR [rsi+0x65],ch
  418b62:	js     0x418bd8
  418b64:	pop    rdi
  418b65:	ja     0x418bc8
  418b67:	imul   esi,DWORD PTR [rdi+rbx*2+0x75],0x6e6f696e
  418b6f:	add    BYTE PTR [rbp+0x78],ah
  418b72:	je     0x418bd9
  418b74:	jb     0x418be4
  418b76:	and    BYTE PTR [rsi+0x6f],dh
  418b79:	imul   esp,DWORD PTR [rax+riz*1+0x25],0x5e002831
  418b81:	gs js  0x418bf8
  418b84:	gs jb  0x418bf5
  418b87:	pop    rbx
  418b88:	and    BYTE PTR [rcx],cl
  418b8a:	pop    rbp
  418b8b:	sub    esi,DWORD PTR [rsi+0x6f]
  418b8e:	ins    BYTE PTR es:[rdi],dx
  418b8f:	(bad)  
  418b90:	je     0x418bfb
  418b92:	ins    BYTE PTR es:[rdi],dx
  418b93:	gs pop rbx
  418b95:	and    BYTE PTR [rcx],cl
  418b97:	pop    rbp
  418b98:	sub    esi,DWORD PTR [rsi+0x6f]
  418b9b:	imul   esp,DWORD PTR [rbx+rbx*2+0x20],0x282b5d09
  418ba3:	gs js  0x418c0f
  418ba6:	je     0x418c24
  418ba8:	(bad)  
  418ba9:	(bad)  
  418baa:	outs   dx,DWORD PTR ds:[rsi]
  418bab:	jb     0x418c21
  418bad:	sub    DWORD PTR [rax+rbp*1+0x0],ebx
	...
  418bbd:	add    BYTE PTR [rax],al
  418bbf:	add    BYTE PTR [rsi+0x65],bl
  418bc2:	js     0x418c38
  418bc4:	gs jb  0x418c35
  418bc7:	pop    rbx
  418bc8:	and    BYTE PTR [rcx],cl
  418bca:	pop    rbp
  418bcb:	sub    esi,DWORD PTR [rsi+0x6f]
  418bce:	ins    BYTE PTR es:[rdi],dx
  418bcf:	(bad)  
  418bd0:	je     0x418c3b
  418bd2:	ins    BYTE PTR es:[rdi],dx
  418bd3:	gs pop rbx
  418bd5:	and    BYTE PTR [rcx],cl
  418bd7:	pop    rbp
  418bd8:	sub    esi,DWORD PTR [rsi+0x6f]
  418bdb:	imul   esp,DWORD PTR [rbx+rbx*2+0x20],0x61005d09
  418be3:	outs   dx,BYTE PTR ds:[rsi]
  418be4:	jae    0x418c4f
  418be6:	(bad)  
  418be7:	jae    0x418c5d
  418be9:	fs ins BYTE PTR es:[rdi],dx
  418beb:	imul   esp,DWORD PTR [rdx+0x2e],0x6e000068
  418bf2:	gs js  0x418c69
  418bf5:	pop    rdi
  418bf6:	jbe    0x418c67
  418bf8:	ins    BYTE PTR es:[rdi],dx
  418bf9:	imul   esi,DWORD PTR [rcx+rbp*2+0x6c],0x25280065
  418c01:	xor    DWORD PTR [rcx],ebp
  418c03:	add    BYTE PTR [rax+rbp*1+0x28],bl
  418c07:	pop    rbx
  418c08:	pop    rsi
  418c09:	sub    DWORD PTR [rbp+0x2a],ebx
  418c0c:	sub    DWORD PTR [rbx+0x20],ebx
  418c0f:	or     DWORD PTR [rbp+0x74],ebx
  418c12:	gs ins DWORD PTR es:[rdi],dx
  418c14:	jo     0x418c82
  418c16:	(bad)  
  418c17:	je     0x418c7e
  418c19:	pop    rsp
  418c1a:	sub    DWORD PTR [rax],eax
  418c1c:	pop    rbx
  418c1d:	and    BYTE PTR [rcx],cl
  418c1f:	pop    rbp
  418c20:	je     0x418c87
  418c22:	ins    DWORD PTR es:[rdi],dx
  418c23:	jo     0x418c91
  418c25:	(bad)  
  418c26:	je     0x418c8d
  418c28:	pop    rsp
  418c29:	sub    DWORD PTR [rax],eax
  418c2b:	(bad)
  418c30:	imul   esp,DWORD PTR [rdx+0x63],0x682e
  418c37:	outs   dx,BYTE PTR ds:[rsi]
  418c38:	gs js  0x418caf
  418c3b:	pop    rdi
  418c3c:	je     0x418ca3
  418c3e:	ins    DWORD PTR es:[rdi],dx
  418c3f:	jo     0x418cad
  418c41:	(bad)  
  418c42:	je     0x418ca9
  418c44:	add    BYTE PTR [rbp+0x78],ah
  418c47:	je     0x418cae
  418c49:	jb     0x418cb9
  418c4b:	and    BYTE PTR [rdi+rbp*2+0x75],ah
  418c4f:	(bad)  
  418c50:	ins    BYTE PTR es:[rdi],dx
  418c51:	and    BYTE PTR gs:[rip+0x2831],ah        # 0x41b489
  418c58:	pop    rsi
  418c59:	gs js  0x418cd0
  418c5c:	gs jb  0x418ccd
  418c5f:	pop    rbx
  418c60:	and    BYTE PTR [rcx],cl
  418c62:	pop    rbp
  418c63:	sub    esp,DWORD PTR [rdi+rbp*2+0x75]
  418c67:	(bad)  
  418c68:	ins    BYTE PTR es:[rdi],dx
  418c69:	gs pop rbx
  418c6b:	and    BYTE PTR [rcx],cl
  418c6d:	pop    rbp
  418c6e:	sub    ebx,DWORD PTR [rdi+0x5f]
  418c71:	movsxd ebp,DWORD PTR [rdi+0x6e]
  418c74:	jae    0x418cea
  418c76:	pop    rdi
  418c77:	pop    rdi
  418c78:	pop    rbx
  418c79:	and    BYTE PTR [rcx],cl
  418c7b:	pop    rbp
  418c7c:	sub    ebp,DWORD PTR [rax]
  418c7e:	pop    rbx
  418c7f:	(bad)  
  418c80:	sub    eax,0x292b5d7a
  418c85:	pop    rsp
  418c86:	sub    BYTE PTR [rax],al
	...
  418ca0:	pop    rsi
  418ca1:	gs js  0x418d18
  418ca4:	gs jb  0x418d15
  418ca7:	pop    rbx
  418ca8:	and    BYTE PTR [rcx],cl
  418caa:	pop    rbp
  418cab:	sub    esp,DWORD PTR [rdi+rbp*2+0x75]
  418caf:	(bad)  
  418cb0:	ins    BYTE PTR es:[rdi],dx
  418cb1:	gs pop rbx
  418cb3:	and    BYTE PTR [rcx],cl
  418cb5:	pop    rbp
  418cb6:	sub    ebx,DWORD PTR [rdi+0x5f]
  418cb9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  418cbc:	jae    0x418d32
  418cbe:	pop    rdi
  418cbf:	pop    rdi
  418cc0:	pop    rbx
  418cc1:	and    BYTE PTR [rcx],cl
  418cc3:	pop    rbp
  418cc4:	add    BYTE PTR [rcx+0x6e],ah
  418cc7:	jae    0x418d32
  418cc9:	(bad)  
  418cca:	ins    DWORD PTR es:[rdi],dx
  418ccb:	(bad)  
  418ccc:	je     0x418d36
  418cce:	cs push 0x0
	...
  418ce0:	outs   dx,BYTE PTR ds:[rsi]
  418ce1:	gs js  0x418d58
  418ce4:	pop    rdi
  418ce5:	ins    DWORD PTR es:[rdi],dx
  418ce6:	(bad)  
  418ce7:	je     0x418d51
  418ce9:	pop    rdi
  418cea:	jo     0x418d5e
  418cec:	imul   di,WORD PTR gs:[rax+0x0],0x0
  418cf3:	add    BYTE PTR [rax],al
  418cf5:	add    BYTE PTR [rax],al
  418cf7:	add    BYTE PTR [rbx],ah
  418cf9:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  418d01:	rex.WRX push rsp
  418d03:	rex.WRB
  418d04:	pop    r8
  418d06:	pop    rdi
  418d07:	rex.WRB
  418d08:	pop    r8
  418d0a:	and    BYTE PTR [rdi+0x5f],bl
  418d0d:	rex.WB
  418d0e:	rex.WRX push rsp
  418d10:	rex.WRB
  418d11:	pop    r8
  418d13:	pop    rdi
  418d14:	rex.WRB
  418d15:	pop    r8
  418d17:	pop    rdi
  418d18:	pop    rdi
  418d19:	or     ah,BYTE PTR [rbx]
  418d1b:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  418d23:	rex.WRX push rsp
  418d25:	rex.WRB
  418d26:	pop    r8
  418d28:	pop    rdi
  418d29:	rex.WRB
  418d2a:	rex.WB
  418d2b:	rex.WRX and BYTE PTR [rax],r13b
  418d2e:	sub    eax,0x4d544e49
  418d33:	pop    r8
  418d35:	pop    rdi
  418d36:	rex.WRB
  418d37:	pop    r8
  418d39:	and    BYTE PTR [rip+0xa293120],ch        # 0xa6abe5f
  418d3f:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  418d43:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  418d4a:	push   rsp
  418d4b:	rex.WRB
  418d4c:	pop    r8
  418d4e:	pop    rdi
  418d4f:	rex.WRB
  418d50:	pop    r8
  418d52:	and    BYTE PTR [rdi+0x5f],bl
  418d55:	push   rbp
  418d56:	rex.WB
  418d57:	rex.WRX push rsp
  418d59:	rex.WRB
  418d5a:	pop    r8
  418d5c:	pop    rdi
  418d5d:	rex.WRB
  418d5e:	pop    r8
  418d60:	pop    rdi
  418d61:	pop    rdi
  418d62:	or     ah,BYTE PTR [rbx]
  418d64:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5720
  418d6c:	rex.XB
  418d6d:	rex.W
  418d6e:	push   r10
  418d70:	pop    rdi
  418d71:	rex.WRB
  418d72:	pop    r8
  418d74:	and    BYTE PTR [rdi+0x5f],bl
  418d77:	push   rdi
  418d78:	rex.XB
  418d79:	rex.W
  418d7a:	push   r10
  418d7c:	pop    rdi
  418d7d:	rex.WRB
  418d7e:	pop    r8
  418d80:	pop    rdi
  418d81:	pop    rdi
  418d82:	or     ah,BYTE PTR [rbx]
  418d84:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5720
  418d8c:	rex.XB
  418d8d:	rex.W
  418d8e:	push   r10
  418d90:	pop    rdi
  418d91:	rex.WRB
  418d92:	rex.WB
  418d93:	rex.WRX and BYTE PTR [rdi+0x5f],r11b
  418d97:	push   rdi
  418d98:	rex.XB
  418d99:	rex.W
  418d9a:	push   r10
  418d9c:	pop    rdi
  418d9d:	rex.WRB
  418d9e:	rex.WB
  418d9f:	rex.WRX pop rdi
  418da1:	pop    rdi
  418da2:	or     ah,BYTE PTR [rbx]
  418da4:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5720
  418dac:	rex.WB
  418dad:	rex.WRX push rsp
  418daf:	pop    rdi
  418db0:	rex.WRB
  418db1:	pop    r8
  418db3:	and    BYTE PTR [rdi+0x5f],bl
  418db6:	push   rdi
  418db7:	rex.WB
  418db8:	rex.WRX push rsp
  418dba:	pop    rdi
  418dbb:	rex.WRB
  418dbc:	pop    r8
  418dbe:	pop    rdi
  418dbf:	pop    rdi
  418dc0:	or     ah,BYTE PTR [rbx]
  418dc2:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5720
  418dca:	rex.WB
  418dcb:	rex.WRX push rsp
  418dcd:	pop    rdi
  418dce:	rex.WRB
  418dcf:	rex.WB
  418dd0:	rex.WRX and BYTE PTR [rdi+0x5f],r11b
  418dd4:	push   rdi
  418dd5:	rex.WB
  418dd6:	rex.WRX push rsp
  418dd8:	pop    rdi
  418dd9:	rex.WRB
  418dda:	rex.WB
  418ddb:	rex.WRX pop rdi
  418ddd:	pop    rdi
  418dde:	or     cl,BYTE PTR [rdx]
  418de0:	and    eax,0x30
  418de5:	add    BYTE PTR [rax],al
  418de7:	add    BYTE PTR [rdi],ch
  418de9:	pop    rsp
  418dea:	sub    bl,BYTE PTR [rdx+rbp*1+0x20]
  418dee:	rex.WRB (bad) 
  418df0:	movsxd esi,DWORD PTR [rdx+0x6f]
  418df3:	jae    0x418e15
  418df5:	outs   dx,WORD PTR ds:[rsi]
  418df7:	jb     0x418e19
  418df9:	ins    DWORD PTR es:[rdi],dx
  418dfa:	imul   ebp,DWORD PTR [rsi+0x69],0x2d6d756d
  418e01:	ja     0x418e6c
  418e03:	fs je  0x418e6e
  418e06:	and    BYTE PTR [rcx+0x6e],ch
  418e09:	je     0x418e70
  418e0b:	addr32 gs jb 0x418e2f
  418e0f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  418e12:	jae    0x418e88
  418e14:	(bad)  
  418e15:	outs   dx,BYTE PTR ds:[rsi]
  418e16:	je     0x418e38
  418e18:	gs js  0x418e8b
  418e1b:	jb     0x418e82
  418e1d:	jae    0x418e92
  418e1f:	imul   ebp,DWORD PTR [rdi+0x6e],0x2a5c2073
  418e26:	(bad)  
	...
  418e3f:	add    BYTE PTR [rax+0x74],al
  418e42:	outs   dx,DWORD PTR ds:[rsi]
  418e43:	outs   dx,DWORD PTR fs:[rsi]
  418e45:	and    BYTE PTR [rip+0x64644120],ch        # 0x64a5cf6b
  418e4b:	and    BYTE PTR [rbx+0x75],dh
  418e4e:	jo     0x418ec0
  418e50:	outs   dx,DWORD PTR ds:[rsi]
  418e51:	jb     0x418ec7
  418e53:	and    BYTE PTR [rsi+0x6f],ah
  418e56:	jb     0x418e78
  418e58:	ja     0x418ec3
  418e5a:	outs   dx,BYTE PTR ds:[rsi]
  418e5b:	je     0x418ebc
  418e5d:	je     0x418e7f
  418e5f:	je     0x418eda
  418e61:	jo     0x418ec8
  418e63:	jae    0x418e65
	...
  418e6d:	add    BYTE PTR [rax],al
  418e6f:	add    BYTE PTR [rbx+0x74],dh
  418e72:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x77656e2d
  418e7a:	ins    BYTE PTR es:[rdi],dx
  418e7b:	imul   esp,DWORD PTR [rdx+0x2e],0x74730068
  418e82:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x682e
  418e8a:	add    BYTE PTR [rax],al
  418e8c:	add    BYTE PTR [rax],al
  418e8e:	add    BYTE PTR [rax],al
  418e90:	outs   dx,BYTE PTR ds:[rsi]
  418e91:	gs ja  0x418f00
  418e94:	imul   esp,DWORD PTR [rdx+0x5f],0x69647473
  418e9b:	outs   dx,BYTE PTR ds:[rsi]
  418e9c:	je     0x418efd
  418e9e:	xor    al,BYTE PTR [rax]
  418ea0:	jae    0x418ee2
  418ea2:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  418ea6:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  418ead:	xor    esi,DWORD PTR [rdx]
  418eaf:	pop    rdi
  418eb0:	rex.WRB
  418eb1:	rex.WB
  418eb2:	rex.WRX
  418eb3:	sub    al,BYTE PTR cs:[rax+0x23]
  418eb7:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  418ebf:	rex.WRX push rsp
  418ec1:	xor    esi,DWORD PTR [rdx]
  418ec3:	pop    rdi
  418ec4:	rex.WRB
  418ec5:	rex.WB
  418ec6:	rex.WRX and BYTE PTR [rax],r13b
  418ec9:	sub    eax,0x33544e49
  418ece:	xor    bl,BYTE PTR [rdi+0x4d]
  418ed1:	pop    r8
  418ed3:	and    BYTE PTR [rip+0x40293120],ch        # 0x406abff9
  418ed9:	add    BYTE PTR [rax],al
  418edb:	add    BYTE PTR [rax],al
  418edd:	add    BYTE PTR [rax],al
  418edf:	add    BYTE PTR [rbx+0x40],dh
  418ee2:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  418ee6:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  418eed:	xor    esi,DWORD PTR [rdx]
  418eef:	pop    rdi
  418ef0:	rex.WRB
  418ef1:	pop    r8
  418ef3:	sub    al,BYTE PTR cs:[rax+0x23]
  418ef7:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  418eff:	rex.WRX push rsp
  418f01:	xor    esi,DWORD PTR [rdx]
  418f03:	pop    rdi
  418f04:	rex.WRB
  418f05:	pop    r8
  418f07:	and    BYTE PTR [rdi+0x5f],bl
  418f0a:	rex.WB
  418f0b:	rex.WRX push rsp
  418f0d:	xor    esi,DWORD PTR [rdx]
  418f0f:	pop    rdi
  418f10:	rex.WRB
  418f11:	pop    r8
  418f13:	pop    rdi
  418f14:	pop    rdi
  418f15:	add    BYTE PTR [rax],al
  418f18:	jae    0x418f5a
  418f1a:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  418f1e:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  418f25:	push   rsp
  418f26:	xor    esi,DWORD PTR [rdx]
  418f28:	pop    rdi
  418f29:	rex.WRB
  418f2a:	pop    r8
  418f2c:	sub    al,BYTE PTR cs:[rax+0x23]
  418f30:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  418f38:	rex.WB
  418f39:	rex.WRX push rsp
  418f3b:	xor    esi,DWORD PTR [rdx]
  418f3d:	pop    rdi
  418f3e:	rex.WRB
  418f3f:	pop    r8
  418f41:	and    BYTE PTR [rdi+0x5f],bl
  418f44:	push   rbp
  418f45:	rex.WB
  418f46:	rex.WRX push rsp
  418f48:	xor    esi,DWORD PTR [rdx]
  418f4a:	pop    rdi
  418f4b:	rex.WRB
  418f4c:	pop    r8
  418f4e:	pop    rdi
  418f4f:	pop    rdi
  418f50:	add    BYTE PTR [rax],al
  418f53:	add    BYTE PTR [rax],al
  418f55:	add    BYTE PTR [rax],al
  418f57:	add    BYTE PTR [rbx+0x40],dh
  418f5a:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  418f5e:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  418f65:	pop    rdi
  418f66:	rex.WR
  418f67:	rex.RB
  418f68:	push   r11
  418f6a:	push   rsp
  418f6b:	xor    esi,DWORD PTR [rdx]
  418f6d:	pop    rdi
  418f6e:	rex.WRB
  418f6f:	rex.WB
  418f70:	rex.WRX
  418f71:	sub    al,BYTE PTR cs:[rax+0x23]
  418f75:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  418f7d:	rex.WRX push rsp
  418f7f:	pop    rdi
  418f80:	rex.WR
  418f81:	rex.RB
  418f82:	push   r11
  418f84:	push   rsp
  418f85:	xor    esi,DWORD PTR [rdx]
  418f87:	pop    rdi
  418f88:	rex.WRB
  418f89:	rex.WB
  418f8a:	rex.WRX and BYTE PTR [rax],r13b
  418f8d:	sub    eax,0x5f544e49
  418f92:	rex.WR
  418f93:	rex.RB
  418f94:	push   r11
  418f96:	push   rsp
  418f97:	xor    esi,DWORD PTR [rdx]
  418f99:	pop    rdi
  418f9a:	rex.WRB
  418f9b:	pop    r8
  418f9d:	and    BYTE PTR [rip+0x40293120],ch        # 0x406ac0c3
  418fa3:	add    BYTE PTR [rax],al
  418fa5:	add    BYTE PTR [rax],al
  418fa7:	add    BYTE PTR [rbx+0x40],dh
  418faa:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  418fae:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  418fb5:	pop    rdi
  418fb6:	rex.WR
  418fb7:	rex.RB
  418fb8:	push   r11
  418fba:	push   rsp
  418fbb:	xor    esi,DWORD PTR [rdx]
  418fbd:	pop    rdi
  418fbe:	rex.WRB
  418fbf:	pop    r8
  418fc1:	sub    al,BYTE PTR cs:[rax+0x23]
  418fc5:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  418fcd:	rex.WRX push rsp
  418fcf:	pop    rdi
  418fd0:	rex.WR
  418fd1:	rex.RB
  418fd2:	push   r11
  418fd4:	push   rsp
  418fd5:	xor    esi,DWORD PTR [rdx]
  418fd7:	pop    rdi
  418fd8:	rex.WRB
  418fd9:	pop    r8
  418fdb:	and    BYTE PTR [rdi+0x5f],bl
  418fde:	rex.WB
  418fdf:	rex.WRX push rsp
  418fe1:	pop    rdi
  418fe2:	rex.WR
  418fe3:	rex.RB
  418fe4:	push   r11
  418fe6:	push   rsp
  418fe7:	xor    esi,DWORD PTR [rdx]
  418fe9:	pop    rdi
  418fea:	rex.WRB
  418feb:	pop    r8
  418fed:	pop    rdi
  418fee:	pop    rdi
  418fef:	add    BYTE PTR [rax],al
  418ff2:	add    BYTE PTR [rax],al
  418ff4:	add    BYTE PTR [rax],al
  418ff6:	add    BYTE PTR [rax],al
  418ff8:	jae    0x41903a
  418ffa:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  418ffe:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  419005:	push   rsp
  419006:	pop    rdi
  419007:	rex.WR
  419008:	rex.RB
  419009:	push   r11
  41900b:	push   rsp
  41900c:	xor    esi,DWORD PTR [rdx]
  41900e:	pop    rdi
  41900f:	rex.WRB
  419010:	pop    r8
  419012:	sub    al,BYTE PTR cs:[rax+0x23]
  419016:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41901e:	rex.WB
  41901f:	rex.WRX push rsp
  419021:	pop    rdi
  419022:	rex.WR
  419023:	rex.RB
  419024:	push   r11
  419026:	push   rsp
  419027:	xor    esi,DWORD PTR [rdx]
  419029:	pop    rdi
  41902a:	rex.WRB
  41902b:	pop    r8
  41902d:	and    BYTE PTR [rdi+0x5f],bl
  419030:	push   rbp
  419031:	rex.WB
  419032:	rex.WRX push rsp
  419034:	pop    rdi
  419035:	rex.WR
  419036:	rex.RB
  419037:	push   r11
  419039:	push   rsp
  41903a:	xor    esi,DWORD PTR [rdx]
  41903c:	pop    rdi
  41903d:	rex.WRB
  41903e:	pop    r8
  419040:	pop    rdi
  419041:	pop    rdi
  419042:	add    BYTE PTR [rax],al
  419045:	add    BYTE PTR [rax],al
  419047:	add    BYTE PTR [rbx+0x40],dh
  41904a:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41904e:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  419055:	pop    rdi
  419056:	rex.RX
  419057:	push   r11
  419059:	push   rsp
  41905a:	pop    rsp
  41905b:	sub    BYTE PTR [rbx+0x30],bl
  41905e:	sub    eax,0x5c2a5d39
  419063:	sub    DWORD PTR [rdi+0x4d],ebx
  419066:	rex.WB
  419067:	rex.WRX
  419068:	sub    al,BYTE PTR cs:[rax+0x23]
  41906c:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  419074:	rex.WRX push rsp
  419076:	pop    rdi
  419077:	rex.RX
  419078:	push   r11
  41907a:	push   rsp
  41907b:	pop    rsp
  41907c:	xor    DWORD PTR [rdi+0x4d],ebx
  41907f:	rex.WB
  419080:	rex.WRX and BYTE PTR [rax],r13b
  419083:	sub    eax,0x5f544e49
  419088:	rex.RX
  419089:	push   r11
  41908b:	push   rsp
  41908c:	pop    rsp
  41908d:	xor    DWORD PTR [rdi+0x4d],ebx
  419090:	pop    r8
  419092:	and    BYTE PTR [rip+0x40293120],ch        # 0x406ac1b8
	...
  4190a0:	jae    0x4190e2
  4190a2:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  4190a6:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  4190ad:	pop    rdi
  4190ae:	rex.RX
  4190af:	push   r11
  4190b1:	push   rsp
  4190b2:	pop    rsp
  4190b3:	sub    BYTE PTR [rbx+0x30],bl
  4190b6:	sub    eax,0x5c2a5d39
  4190bb:	sub    DWORD PTR [rdi+0x4d],ebx
  4190be:	pop    r8
  4190c0:	sub    al,BYTE PTR cs:[rax+0x23]
  4190c4:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  4190cc:	rex.WRX push rsp
  4190ce:	pop    rdi
  4190cf:	rex.RX
  4190d0:	push   r11
  4190d2:	push   rsp
  4190d3:	pop    rsp
  4190d4:	xor    DWORD PTR [rdi+0x4d],ebx
  4190d7:	pop    r8
  4190d9:	and    BYTE PTR [rdi+0x5f],bl
  4190dc:	rex.WB
  4190dd:	rex.WRX push rsp
  4190df:	pop    rdi
  4190e0:	rex.RX
  4190e1:	push   r11
  4190e3:	push   rsp
  4190e4:	pop    rsp
  4190e5:	xor    DWORD PTR [rdi+0x4d],ebx
  4190e8:	pop    r8
  4190ea:	pop    rdi
  4190eb:	pop    rdi
  4190ec:	add    BYTE PTR [rax],al
  4190ef:	add    BYTE PTR [rbx+0x40],dh
  4190f2:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  4190f6:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  4190fd:	push   rsp
  4190fe:	pop    rdi
  4190ff:	rex.RX
  419100:	push   r11
  419102:	push   rsp
  419103:	pop    rsp
  419104:	sub    BYTE PTR [rbx+0x30],bl
  419107:	sub    eax,0x5c2a5d39
  41910c:	sub    DWORD PTR [rdi+0x4d],ebx
  41910f:	pop    r8
  419111:	sub    al,BYTE PTR cs:[rax+0x23]
  419115:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41911d:	rex.WB
  41911e:	rex.WRX push rsp
  419120:	pop    rdi
  419121:	rex.RX
  419122:	push   r11
  419124:	push   rsp
  419125:	pop    rsp
  419126:	xor    DWORD PTR [rdi+0x4d],ebx
  419129:	pop    r8
  41912b:	and    BYTE PTR [rdi+0x5f],bl
  41912e:	push   rbp
  41912f:	rex.WB
  419130:	rex.WRX push rsp
  419132:	pop    rdi
  419133:	rex.RX
  419134:	push   r11
  419136:	push   rsp
  419137:	pop    rsp
  419138:	xor    DWORD PTR [rdi+0x4d],ebx
  41913b:	pop    r8
  41913d:	pop    rdi
  41913e:	pop    rdi
  41913f:	add    BYTE PTR [rax],al
  419142:	add    BYTE PTR [rax],al
  419144:	add    BYTE PTR [rax],al
  419146:	add    BYTE PTR [rax],al
  419148:	jae    0x41918a
  41914a:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41914e:	imul   ebp,DWORD PTR [rsi+0x65],0x5a495320
  419155:	rex.RB pop r15
  419157:	rex.WRB
  419158:	pop    r8
  41915a:	sub    al,BYTE PTR cs:[rax+0x23]
  41915e:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5320
  419166:	rex.WB pop r10
  419168:	rex.RB pop r15
  41916a:	rex.WRB
  41916b:	pop    r8
  41916d:	and    BYTE PTR [rdi+0x5f],bl
  419170:	push   rbx
  419171:	rex.WB pop r10
  419173:	rex.RB pop r15
  419175:	rex.WRB
  419176:	pop    r8
  419178:	pop    rdi
  419179:	pop    rdi
  41917a:	add    BYTE PTR [rax],al
  41917d:	add    BYTE PTR [rax],al
  41917f:	add    BYTE PTR [rbx+0x40],dh
  419182:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  419186:	imul   ebp,DWORD PTR [rsi+0x65],0x52545020
  41918d:	rex.R
  41918e:	rex.WB
  41918f:	rex.RX
  419190:	rex.RX pop rdi
  419192:	rex.WRB
  419193:	rex.WB
  419194:	rex.WRX
  419195:	sub    al,BYTE PTR cs:[rax+0x23]
  419199:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5020
  4191a1:	push   rsp
  4191a2:	push   rdx
  4191a3:	rex.R
  4191a4:	rex.WB
  4191a5:	rex.RX
  4191a6:	rex.RX pop rdi
  4191a8:	rex.WRB
  4191a9:	rex.WB
  4191aa:	rex.WRX and BYTE PTR [rax],r13b
  4191ad:	sub    eax,0x44525450
  4191b2:	rex.WB
  4191b3:	rex.RX
  4191b4:	rex.RX pop rdi
  4191b6:	rex.WRB
  4191b7:	pop    r8
  4191b9:	and    BYTE PTR [rip+0x40293120],ch        # 0x406ac2df
  4191bf:	add    BYTE PTR [rbx+0x40],dh
  4191c2:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  4191c6:	imul   ebp,DWORD PTR [rsi+0x65],0x52545020
  4191cd:	rex.R
  4191ce:	rex.WB
  4191cf:	rex.RX
  4191d0:	rex.RX pop rdi
  4191d2:	rex.WRB
  4191d3:	pop    r8
  4191d5:	sub    al,BYTE PTR cs:[rax+0x23]
  4191d9:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5020
  4191e1:	push   rsp
  4191e2:	push   rdx
  4191e3:	rex.R
  4191e4:	rex.WB
  4191e5:	rex.RX
  4191e6:	rex.RX pop rdi
  4191e8:	rex.WRB
  4191e9:	pop    r8
  4191eb:	and    BYTE PTR [rdi+0x5f],bl
  4191ee:	push   rax
  4191ef:	push   rsp
  4191f0:	push   rdx
  4191f1:	rex.R
  4191f2:	rex.WB
  4191f3:	rex.RX
  4191f4:	rex.RX pop rdi
  4191f6:	rex.WRB
  4191f7:	pop    r8
  4191f9:	pop    rdi
  4191fa:	pop    rdi
  4191fb:	add    BYTE PTR [rax],al
  4191fe:	add    BYTE PTR [rax],al
  419200:	jae    0x419242
  419202:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  419206:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41920d:	push   rsp
  41920e:	cmp    BYTE PTR [rdi+0x43],bl
  419211:	sub    al,BYTE PTR cs:[rax+0x23]
  419215:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41921d:	rex.WB
  41921e:	rex.WRX push rsp
  419220:	cmp    BYTE PTR [rdi+0x43],bl
  419223:	sub    BYTE PTR [rbx+0x29],ah
  419226:	and    BYTE PTR [rdi+0x5f],bl
  419229:	push   rbp
  41922a:	rex.WB
  41922b:	rex.WRX push rsp
  41922d:	cmp    BYTE PTR [rdi+0x43],bl
  419230:	sub    BYTE PTR [rbx+0x29],ah
  419233:	add    BYTE PTR [rax],al
  419236:	add    BYTE PTR [rax],al
  419238:	jae    0x41927a
  41923a:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41923e:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  419245:	push   rsp
  419246:	xor    DWORD PTR [rsi],esi
  419248:	pop    rdi
  419249:	rex.XB
  41924a:	sub    al,BYTE PTR cs:[rax+0x23]
  41924e:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  419256:	rex.WB
  419257:	rex.WRX push rsp
  419259:	xor    DWORD PTR [rsi],esi
  41925b:	pop    rdi
  41925c:	rex.XB sub BYTE PTR [r11+0x29],spl
  419260:	and    BYTE PTR [rdi+0x5f],bl
  419263:	push   rbp
  419264:	rex.WB
  419265:	rex.WRX push rsp
  419267:	xor    DWORD PTR [rsi],esi
  419269:	pop    rdi
  41926a:	rex.XB sub BYTE PTR [r11+0x29],spl
  41926e:	add    BYTE PTR [rax],al
	...
  41927d:	add    BYTE PTR [rax],al
  41927f:	add    BYTE PTR [rax+0x74],al
  419282:	outs   dx,DWORD PTR ds:[rsi]
  419283:	outs   dx,DWORD PTR fs:[rsi]
  419285:	and    BYTE PTR [rip+0x64644120],ch        # 0x64a5d3ab
  41928b:	and    BYTE PTR [rbx+0x75],dh
  41928e:	jo     0x419300
  419290:	outs   dx,DWORD PTR ds:[rsi]
  419291:	jb     0x419307
  419293:	and    BYTE PTR [rsi+0x6f],ah
  419296:	jb     0x4192b8
  419298:	ja     0x419303
  41929a:	outs   dx,BYTE PTR ds:[rsi]
  41929b:	je     0x4192fc
  41929d:	je     0x4192bf
  41929f:	je     0x41931a
  4192a1:	jo     0x419308
  4192a3:	jae    0x4192a5
	...
  4192ad:	add    BYTE PTR [rax],al
  4192af:	add    BYTE PTR [rbx+0x74],dh
  4192b2:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x77656e2d
  4192ba:	ins    BYTE PTR es:[rdi],dx
  4192bb:	imul   esp,DWORD PTR [rdx+0x2e],0x74730068
  4192c2:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x682e
  4192ca:	add    BYTE PTR [rax],al
  4192cc:	add    BYTE PTR [rax],al
  4192ce:	add    BYTE PTR [rax],al
  4192d0:	outs   dx,BYTE PTR ds:[rsi]
  4192d1:	gs ja  0x419340
  4192d4:	imul   esp,DWORD PTR [rdx+0x5f],0x69647473
  4192db:	outs   dx,BYTE PTR ds:[rsi]
  4192dc:	je     0x41933d
  4192de:	xor    DWORD PTR [rax],eax
  4192e0:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  4192e4:	imul   ebp,DWORD PTR [rsi+0x65],0x455f5f20
  4192eb:	rex.WRX
  4192ec:	rex.R pop rdi
  4192ee:	rex.R
  4192ef:	rex.RB
  4192f0:	rex.XB
  4192f1:	rex.WR push rbx
  4192f3:	and    BYTE PTR [rbp+0x0],bh
	...
  4192fe:	add    BYTE PTR [rax],al
  419300:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  419304:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41930b:	sub    bl,BYTE PTR [rdi+0x5f]
  41930e:	rex.RB
  41930f:	rex.WRX
  419310:	rex.R pop rdi
  419312:	rex.R
  419313:	rex.RB
  419314:	rex.XB
  419315:	rex.WR push rbx
  419317:	pop    rbx
  419318:	and    BYTE PTR [rcx],cl
  41931a:	pop    rbp
  41931b:	sub    bh,BYTE PTR [rbp+0x3b]
  41931e:	add    BYTE PTR [rdx],ch
  419320:	sub    eax,0x656e2d2a
  419325:	je     0x419389
  419327:	jae    0x41938d
  419329:	sub    al,BYTE PTR [rax]
  41932b:	jae    0x4193a6
  41932d:	jae    0x41935e
  41932f:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
  419333:	jae    0x419363
  419335:	push   0x0
  41933a:	add    BYTE PTR [rax],al
  41933c:	add    BYTE PTR [rax],al
  41933e:	add    BYTE PTR [rax],al
  419340:	outs   dx,BYTE PTR ds:[rsi]
  419341:	gs je  0x4193a6
  419344:	jae    0x4193aa
  419346:	pop    rdi
  419347:	gs js  0x4193be
  41934a:	jb     0x4193ad
  41934c:	pop    rdi
  41934d:	jae    0x4193b4
  41934f:	ins    DWORD PTR es:[rdi],dx
  419350:	imul   esp,DWORD PTR [rbx+0x6f],0x6e6f6c
  419357:	add    BYTE PTR [rbx],ah
  419359:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  419360:	pop    rdi
  419361:	rex.RXB
  419362:	rex.WRX push rbp
  419364:	rex.XB pop r15
  419366:	push   rbx
  419367:	push   rsp
  419368:	rex.R
  419369:	rex.XB pop r15
  41936b:	rex.WB
  41936c:	rex.WRX
  41936d:	rex.WR
  41936e:	rex.WB
  41936f:	rex.WRX
  419370:	rex.RB pop r15
  419372:	pop    rdi
  419373:	or     ah,BYTE PTR [rbx]
  419375:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  41937d:	push   rbx
  41937e:	rex.WB
  41937f:	rex.RXB
  419380:	rex.WB
  419381:	rex.WRX
  419382:	rex.WR
  419383:	rex.WB
  419384:	rex.WRX
  419385:	and    BYTE PTR [r13+0x78],r12b
  419389:	je     0x4193f0
  41938b:	jb     0x4193fb
  41938d:	and    BYTE PTR [rdi+0x5f],bl
  419390:	(bad)  
  419391:	je     0x419407
  419393:	jb     0x4193fe
  419395:	(bad)  
  419396:	jne    0x41940c
  419398:	gs pop rdi
  41939a:	pop    rdi
  41939b:	sub    BYTE PTR [rax],ch
  41939d:	pop    rdi
  41939e:	pop    rdi
  41939f:	outs   dx,BYTE PTR ds:[esi]
  4193a1:	jne    0x419402
  4193a3:	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
  4193aa:	pop    rdi
  4193ab:	sub    DWORD PTR [rcx],ebp
  4193ad:	and    BYTE PTR [rdi+0x5f],bl
  4193b0:	imul   ebp,DWORD PTR [rsi+0x6c],0xa656e69
  4193b7:	and    esp,DWORD PTR [rbp+0x6c]
  4193ba:	jae    0x419421
  4193bc:	or     ah,BYTE PTR [rip+0x65230a30]        # 0x65649df2
  4193c2:	outs   dx,BYTE PTR ds:[rsi]
  4193c3:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
	...
  4193df:	add    BYTE PTR [rbx],ah
  4193e1:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  4193e9:	push   rbx
  4193ea:	rex.WB
  4193eb:	rex.RXB
  4193ec:	rex.WB
  4193ed:	rex.WRX
  4193ee:	rex.WR
  4193ef:	rex.WB
  4193f0:	rex.WRX
  4193f1:	and    BYTE PTR [r13+0x78],r12b
  4193f5:	je     0x41945c
  4193f7:	jb     0x419467
  4193f9:	and    BYTE PTR [rdi+0x5f],bl
  4193fc:	imul   ebp,DWORD PTR [rsi+0x6c],0x656e69
  419403:	jae    0x41946e
  419405:	outs   dx,BYTE PTR ds:[esi]
  419407:	(bad)  
  419408:	ins    BYTE PTR es:[rdi],dx
  419409:	cs push 0x0
  41940f:	add    BYTE PTR [rsi+0x65],ch
  419412:	je     0x419476
  419414:	jae    0x41947a
  419416:	pop    rdi
  419417:	movsxd edi,DWORD PTR [rcx]
  419419:	cmp    DWORD PTR [rdi+0x69],ebx
  41941c:	outs   dx,BYTE PTR ds:[rsi]
  41941d:	ins    BYTE PTR es:[rdi],dx
  41941e:	imul   ebp,DWORD PTR [rsi+0x65],0x325f
  419425:	add    BYTE PTR [rax],al
  419427:	add    BYTE PTR [rbp+0x78],ah
  41942a:	je     0x419491
  41942c:	jb     0x41949c
  41942e:	or     ah,BYTE PTR [rbx]
  419430:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  419437:	pop    rdi
  419438:	rex.RXB
  419439:	rex.WRX push rbp
  41943b:	rex.XB pop r15
  41943d:	push   rbx
  41943e:	push   rsp
  41943f:	rex.R
  419440:	rex.XB pop r15
  419442:	rex.WB
  419443:	rex.WRX
  419444:	rex.WR
  419445:	rex.WB
  419446:	rex.WRX
  419447:	rex.RB pop r15
  419449:	pop    rdi
  41944a:	or     bl,BYTE PTR [rdi+0x5f]
  41944d:	(bad)  
  41944e:	je     0x4194c4
  419450:	jb     0x4194bb
  419452:	(bad)  
  419453:	jne    0x4194c9
  419455:	gs pop rdi
  419457:	pop    rdi
  419458:	sub    BYTE PTR [rax],ch
  41945a:	pop    rdi
  41945b:	pop    rdi
  41945c:	outs   dx,BYTE PTR ds:[esi]
  41945e:	jne    0x4194bf
  419460:	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
  419467:	pop    rdi
  419468:	sub    DWORD PTR [rcx],ebp
  41946a:	or     ah,BYTE PTR [rbx]
  41946c:	outs   dx,BYTE PTR gs:[rsi]
  41946e:	imul   esp,DWORD PTR fs:[rsi+0xa],0x6e695f5f
  419476:	ins    BYTE PTR es:[rdi],dx
  419477:	imul   ebp,DWORD PTR [rsi+0x65],0x746e6920
  41947e:	add    BYTE PTR [rax],al
  419480:	gs js  0x4194f7
  419483:	gs jb  0x4194f4
  419486:	and    BYTE PTR [rdi+0x5f],bl
  419489:	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
  419490:	imul   ebp,DWORD PTR [rsi+0x74],0x67697300
  419497:	outs   dx,BYTE PTR ds:[rsi]
  419498:	(bad)  
  419499:	ins    BYTE PTR es:[rdi],dx
  41949a:	cs push 0x0
  4194a0:	outs   dx,BYTE PTR ds:[rsi]
  4194a1:	gs je  0x419506
  4194a4:	jae    0x41950a
  4194a6:	pop    rdi
  4194a7:	movsxd edi,DWORD PTR [rcx]
  4194a9:	cmp    DWORD PTR [rdi+0x69],ebx
  4194ac:	outs   dx,BYTE PTR ds:[rsi]
  4194ad:	ins    BYTE PTR es:[rdi],dx
  4194ae:	imul   ebp,DWORD PTR [rsi+0x65],0x2500315f
  4194b5:	xor    DWORD PTR [rdx],ebp
  4194b7:	(bad)  
  4194b8:	and    BYTE PTR [rdi],ch
  4194ba:	sub    al,BYTE PTR [rax]
  4194bc:	add    BYTE PTR [rax],al
  4194be:	add    BYTE PTR [rax],al
  4194c0:	sub    BYTE PTR [rdi],ch
  4194c2:	pop    rsp
  4194c3:	sub    ch,BYTE PTR [rsi]
  4194c5:	sub    dh,BYTE PTR [rdx+0x70]
  4194c8:	movsxd ebp,DWORD PTR [rdi]
  4194ca:	(bad)  
  4194cb:	jne    0x419541
  4194cd:	push   0x7365645f
  4194d2:	pop    rsp
  4194d3:	cs push 0x292a2e3e
  4194d9:	(bad)  
  4194da:	pop    rsp
  4194db:	sub    al,BYTE PTR [rax]
  4194dd:	jb     0x41954f
  4194df:	movsxd ebp,DWORD PTR [rdi]
  4194e1:	jb     0x419553
  4194e3:	movsxd ebp,DWORD PTR [rsi]
  4194e5:	push   0x0
  4194ea:	add    BYTE PTR [rax],al
  4194ec:	add    BYTE PTR [rax],al
  4194ee:	add    BYTE PTR [rax],al
  4194f0:	outs   dx,BYTE PTR ds:[rsi]
  4194f1:	gs jae 0x419568
  4194f4:	gs fs pop rdi
  4194f7:	(bad)  
  4194f8:	jne    0x41956e
  4194fa:	push   0x7365645f
  4194ff:	add    BYTE PTR [rbx+0x68],dh
  419502:	add    BYTE PTR [rip+0x63],ch        # 0x41956b
  419508:	or     DWORD PTR [rdx+riz*2+0x6c],esp
  41950c:	pop    rdi
  41950d:	ins    DWORD PTR es:[rdi],dx
  41950e:	(bad)  
  41950f:	js     0x419570
  419511:	fs gs cmp ax,0x6560
  419517:	addr32 jb 0x41957f
  41951a:	jo     0x41953c
  41951c:	(bad)  
  41951d:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  419525:	or     DWORD PTR [rbp+0x2b],ebx
  419528:	rex.R
  419529:	rex.X
  41952a:	rex.WR pop rdi
  41952c:	rex.WRB
  41952d:	pop    r8
  41952f:	pop    rbx
  419530:	and    BYTE PTR [rcx],cl
  419532:	pop    rbp
  419533:	sub    ebp,DWORD PTR [rsi]
  419535:	sub    ah,BYTE PTR [rdi]
  419537:	and    BYTE PTR [rsi+0x6c],ah
  41953a:	outs   dx,DWORD PTR ds:[rsi]
  41953b:	(bad)  
  41953c:	je     0x41956c
  41953e:	push   0x73207c20
  419543:	gs and BYTE PTR fs:[rdi],ah
  419547:	jae    0x419578
  419549:	sub    al,BYTE PTR cs:[rdx+rax*2+0x4c]
  41954e:	pop    rdi
  41954f:	rex.WRB
  419550:	pop    r8
  419552:	pop    rbx
  419553:	and    BYTE PTR [rcx],cl
  419555:	pop    rbp
  419556:	sub    ch,BYTE PTR [rdi]
  419558:	(bad)  
  419559:	(bad)  
  41955a:	and    BYTE PTR [rdx],dh
  41955c:	ds (bad) 
  41955e:	fs gs jbe 0x419591
  419562:	outs   dx,BYTE PTR ds:[rsi]
  419563:	jne    0x4195d1
  419565:	ins    BYTE PTR es:[rdi],dx
  419566:	(bad)  
  419567:	or     cl,BYTE PTR [rdx]
  419569:	or     DWORD PTR [rcx+0x66],ebp
  41956c:	and    BYTE PTR [rax],ch
  41956e:	and    BYTE PTR [rbp+riz*2+0x73],dh
  419572:	je     0x419594
  419574:	sub    eax,0x2422206e
  419579:	jnp    0x4195df
  41957b:	(bad)  
  41957c:	ins    BYTE PTR es:[rdi],dx
  41957d:	pop    rdi
  41957e:	ins    DWORD PTR es:[rdi],dx
  41957f:	(bad)  
  419580:	js     0x4195e1
  419582:	fs gs data16 jge 0x4195a9
  419587:	and    BYTE PTR [rcx],ch
  419589:	and    BYTE PTR [rsi],bh
  41958b:	and    BYTE PTR [rdi],ch
  41958d:	fs gs jbe 0x4195c0
  419591:	outs   dx,BYTE PTR ds:[rsi]
  419592:	jne    0x419600
  419594:	ins    BYTE PTR es:[rdi],dx
  419595:	and    BYTE PTR [rdx],dh
  419597:	ds xor DWORD PTR es:[rdx],ecx
  41959b:	or     DWORD PTR [rax+rbp*2+0x65],esi
  41959f:	outs   dx,BYTE PTR ds:[rsi]
  4195a0:	and    BYTE PTR [rbx+0x65],dh
  4195a3:	and    BYTE PTR fs:[rip+0x2f272065],ch        # 0x2f68b60f
  4195aa:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  4195b2:	or     DWORD PTR [rbp+0x2a],ebx
  4195b5:	rex.W push rbp
  4195b7:	rex.RXB
  4195b8:	rex.RB pop r15
  4195ba:	push   rsi
  4195bb:	rex.B
  4195bc:	rex.WR pop rbx
  4195be:	and    BYTE PTR [rcx],cl
  4195c0:	pop    rbp
  4195c1:	sub    al,BYTE PTR [rdx+rax*2+0x4c]
  4195c5:	pop    rdi
  4195c6:	rex.WRB
  4195c7:	pop    r8
  4195c9:	(bad)  
  4195ca:	jae    0x41960c
  4195cc:	rex.R
  4195cd:	rex.X
  4195ce:	rex.WR pop rdi
  4195d0:	rex.WRB
  4195d1:	pop    r8
  4195d3:	rex (bad) 
  4195d5:	and    ah,BYTE PTR [rsp+riz*2]
  4195d8:	(bad)  
  4195d9:	ins    BYTE PTR es:[rdi],dx
  4195da:	pop    rdi
  4195db:	ins    DWORD PTR es:[rdi],dx
  4195dc:	(bad)  
  4195dd:	js     0x41963e
  4195df:	fs data16 and cl,BYTE PTR gs:[rdx]
  4195e5:	or     DWORD PTR [rbp+0x6c],esp
  4195e8:	jae    0x41964f
  4195ea:	and    BYTE PTR [rbx+0x61],ah
  4195ed:	je     0x4195f9
  4195ef:	or     DWORD PTR [rsi+0x69],esp
	...
  4195fe:	add    BYTE PTR [rax],al
  419600:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  419608:	or     DWORD PTR [rbp+0x2b],ebx
  41960b:	rex.R
  41960c:	rex.X
  41960d:	rex.WR pop rdi
  41960f:	rex.WRB
  419610:	pop    r8
	...
  41961e:	add    BYTE PTR [rax],al
  419620:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  419628:	or     DWORD PTR [rbp+0x2b],ebx
  41962b:	rex.W push rbp
  41962d:	rex.RXB
  41962e:	rex.RB pop r15
  419630:	push   rsi
  419631:	rex.B
  419632:	rex.WR pop rbx
  419634:	and    BYTE PTR [rcx],cl
  419636:	pop    rbp
  419637:	sub    eax,DWORD PTR [rdx+rax*2+0x4c]
  41963b:	pop    rdi
  41963c:	rex.WRB
  41963d:	pop    r8
  41963f:	add    BYTE PTR [rbp+0x61],ch
  419642:	je     0x4196ac
  419644:	cs push 0x0
  41964a:	add    BYTE PTR [rax],al
  41964c:	add    BYTE PTR [rax],al
  41964e:	add    BYTE PTR [rax],al
  419650:	ins    DWORD PTR es:[rdi],dx
  419651:	(bad)  
  419652:	je     0x4196bc
  419654:	pop    rdi
  419655:	push   0x5f656775
  41965a:	jbe    0x4196bd
  41965c:	ins    BYTE PTR es:[rdi],dx
  41965d:	pop    rdi
  41965e:	data16 jb 0x4196d0
  419661:	ins    DWORD PTR es:[rdi],dx
  419662:	pop    rdi
  419663:	fs (bad) 
  419665:	ins    BYTE PTR es:[rdi],dx
  419666:	pop    rdi
  419667:	ins    DWORD PTR es:[rdi],dx
  419668:	(bad)  
  419669:	js     0x41966b
  41966b:	add    BYTE PTR [rax],al
  41966d:	add    BYTE PTR [rax],al
  41966f:	add    BYTE PTR [rbx],ah
  419671:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  419678:	pop    rdi
  419679:	movsxd esi,DWORD PTR [rax+0x6c]
  41967c:	jne    0x4196f1
  41967e:	jo     0x4196ec
  419680:	jne    0x4196f5
  419682:	or     ah,BYTE PTR [rbx]
  419684:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6520
  41968c:	js     0x4196f1
  41968e:	gs jo  0x419705
  419691:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d5f5f20
  419698:	(bad)  
  419699:	je     0x419703
  41969b:	pop    rdi
  41969c:	gs js  0x419702
  41969f:	gs jo  0x419716
  4196a2:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e65230a
  4196a9:	imul   esp,DWORD PTR fs:[rsi+0xa],0x23000000
  4196b1:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  4196b8:	pop    rdi
  4196b9:	movsxd esi,DWORD PTR [rax+0x6c]
  4196bc:	jne    0x419731
  4196be:	jo     0x41972c
  4196c0:	jne    0x419735
  4196c2:	or     ah,BYTE PTR [rbx]
  4196c4:	jne    0x419734
  4196c6:	fs data16 and BYTE PTR gs:[rbp+0x78],ah
  4196cc:	movsxd esp,DWORD PTR [rbp+0x70]
  4196cf:	je     0x41973a
  4196d1:	outs   dx,DWORD PTR ds:[rsi]
  4196d2:	outs   dx,BYTE PTR ds:[rsi]
  4196d3:	or     ah,BYTE PTR [rbx]
  4196d5:	outs   dx,BYTE PTR gs:[rsi]
  4196d7:	imul   esp,DWORD PTR fs:[rsi+0xa],0x0
	...
  4196ff:	add    BYTE PTR [rdi+0x65],dl
  419702:	and    BYTE PTR [rax+0x61],ch
  419705:	jbe    0x41976c
  419707:	and    BYTE PTR [rcx+0x20],ah
  41970a:	jo     0x41977e
  41970c:	outs   dx,DWORD PTR ds:[rsi]
  41970d:	(bad)  
  41970e:	ins    BYTE PTR es:[rdi],dx
  41970f:	gs ins DWORD PTR es:[rdi],dx
  419711:	and    BYTE PTR [rdi+0x68],dh
  419714:	outs   dx,BYTE PTR gs:[rsi]
  419716:	and    BYTE PTR [rbp+0x73],dh
  419719:	imul   ebp,DWORD PTR [rsi+0x67],0x2b5c4320
  419720:	pop    rsp
  419721:	sub    edi,DWORD PTR [rsi+riz*2+0x6f]
  419725:	jb     0x419747
  419727:	rex.XB pop r12
  419729:	sub    ebx,DWORD PTR [rbx+rbp*1+0x2c]
  41972d:	and    BYTE PTR [rdi+0x5b],bl
  419730:	(bad)  
  419731:	sub    eax,0x392d307a
  419736:	rex.B sub eax,0x2b5d5f5a
  41973c:	pop    rdi
  41973d:	gs js  0x4197a3
  419740:	gs jo  0x4197b7
  419743:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f66203b
  41974a:	jb     0x41976c
  41974c:	rex.XB sub al,0x20
  41974f:	gs js  0x4197b5
  419752:	gs jo  0x4197c9
  419755:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  41975c:	add    BYTE PTR [rax],al
  41975e:	add    BYTE PTR [rax],al
  419760:	jae    0x4197d6
  419762:	jb     0x4197d9
  419764:	movsxd esi,DWORD PTR [rax+riz*1+0x65]
  419768:	js     0x4197cd
  41976a:	gs jo  0x4197e1
  41976d:	imul   ebp,DWORD PTR [rdi+0x6e],0x74616d00
  419774:	push   0x682e
  419779:	ins    DWORD PTR es:[rdi],dx
  41977a:	(bad)  
  41977b:	je     0x4197e5
  41977d:	pop    rdi
  41977e:	gs js  0x4197e4
  419781:	gs jo  0x4197f8
  419784:	imul   ebp,DWORD PTR [rdi+0x6e],0x63616d00
  41978b:	push   0x5f656e69
  419790:	outs   dx,BYTE PTR ds:[rsi]
  419791:	(bad)  
  419792:	ins    DWORD PTR es:[rdi],dx
  419793:	add    BYTE PTR gs:[rbp+0x61],ch
  419797:	movsxd ebp,DWORD PTR [rax+0x69]
  41979a:	outs   dx,BYTE PTR ds:[rsi]
  41979b:	gs pop rdi
  41979d:	outs   dx,BYTE PTR ds:[rsi]
  41979e:	(bad)  
  41979f:	ins    DWORD PTR es:[rdi],dx
  4197a0:	add    BYTE PTR gs:[rbp+0x61],ch
  4197a4:	movsxd ebp,DWORD PTR [rax+0x69]
  4197a7:	outs   dx,BYTE PTR ds:[rsi]
  4197a8:	gs pop rdi
  4197aa:	outs   dx,BYTE PTR ds:[rsi]
  4197ab:	(bad)  
  4197ac:	ins    DWORD PTR es:[rdi],dx
  4197ad:	add    BYTE PTR gs:[rip+0x625f5f31],ah        # 0x62a0f6e5
  4197b4:	jne    0x41981f
  4197b6:	ins    BYTE PTR es:[rdi],dx
  4197b7:	je     0x419822
  4197b9:	outs   dx,BYTE PTR ds:[rsi]
  4197ba:	pop    rdi
  4197bb:	jbe    0x41981e
  4197bd:	pop    rdi
  4197be:	ins    BYTE PTR es:[rdi],dx
  4197bf:	imul   esi,DWORD PTR [rbx+0x74],0x0
  4197c6:	add    BYTE PTR [rax],al
  4197c8:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  4197cc:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  4197d3:	sub    ebx,DWORD PTR [rdi+0x42]
  4197d6:	push   rbx
  4197d7:	rex.R pop rdi
  4197d9:	push   rsi
  4197da:	pop    r15
  4197dc:	rex.WR
  4197dd:	rex.WB push r11
  4197df:	push   rsp
  4197e0:	pop    rdi
  4197e1:	pop    rbx
  4197e2:	and    BYTE PTR [rcx],cl
  4197e4:	pop    rbp
  4197e5:	sub    ebp,DWORD PTR [rcx]
  4197e7:	sub    al,BYTE PTR cs:[rax]
  4197ea:	add    BYTE PTR [rax],al
  4197ec:	add    BYTE PTR [rax],al
  4197ee:	add    BYTE PTR [rax],al
  4197f0:	pop    rdi
  4197f1:	pop    rdi
  4197f2:	(bad)  
  4197f3:	jne    0x41985e
  4197f5:	ins    BYTE PTR es:[rdi],dx
  4197f6:	je     0x419861
  4197f8:	outs   dx,BYTE PTR ds:[rsi]
  4197f9:	pop    rdi
  4197fa:	jbe    0x41985d
  4197fc:	pop    rdi
  4197fd:	ins    BYTE PTR es:[rdi],dx
  4197fe:	imul   esi,DWORD PTR [rbx+0x74],0x0
	...
  41980d:	add    BYTE PTR [rax],al
  41980f:	add    BYTE PTR [rbp+riz*2+0x66],ah
  419813:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41981a:	sub    ebx,DWORD PTR [rdi+0x42]
  41981d:	push   rbx
  41981e:	rex.R pop rdi
  419820:	push   rsi
  419821:	pop    r15
  419823:	rex.WR
  419824:	rex.WB push r11
  419826:	push   rsp
  419827:	pop    rdi
  419828:	pop    rbx
  419829:	and    BYTE PTR [rcx],cl
  41982b:	pop    rbp
  41982c:	add    BYTE PTR [rax],al
  41982e:	add    BYTE PTR [rax],al
  419830:	ins    DWORD PTR es:[rdi],dx
  419831:	(bad)  
  419832:	movsxd ebp,DWORD PTR [rax+0x69]
  419835:	outs   dx,BYTE PTR ds:[rsi]
  419836:	gs pop rdi
  419838:	(bad)  
  419839:	outs   dx,BYTE PTR ds:[rsi]
  41983a:	jae    0x4198a5
  41983c:	pop    rdi
  41983d:	push   0x5f61765f
  419842:	ins    BYTE PTR es:[rdi],dx
  419843:	imul   esi,DWORD PTR [rbx+0x74],0x30250000
  41984a:	or     ah,BYTE PTR [rbp+0x78]
  41984d:	je     0x4198b4
  41984f:	jb     0x4198bf
  419851:	and    BYTE PTR [rcx+0x6e],ch
  419854:	je     0x419876
  419856:	jo     0x4198cd
  419858:	je     0x4198bf
  41985a:	outs   dx,BYTE PTR ds:[rsi]
  41985b:	jbe    0x419866
  41985d:	or     DWORD PTR [rcx],ecx
  41985f:	or     DWORD PTR [rdi+0x41],ebx
  419862:	push   rax
  419863:	sub    BYTE PTR [rax],ch
  419865:	movsxd ebp,DWORD PTR [rax+0x61]
  419868:	jb     0x41988a
  41986a:	sub    ch,BYTE PTR [rcx]
  41986c:	sub    DWORD PTR [rbx],edi
  41986e:	add    BYTE PTR [rax],al
  419870:	gs js  0x4198e7
  419873:	gs jb  0x4198e4
  419876:	and    BYTE PTR [rbx+0x68],ah
  419879:	(bad)  
  41987a:	jb     0x41989c
  41987c:	pop    rsp
  41987d:	sub    ah,BYTE PTR [rdi+0x65]
  419880:	je     0x4198e7
  419882:	outs   dx,BYTE PTR ds:[rsi]
  419883:	jbe    0x4198e0
  419885:	and    BYTE PTR [rcx],cl
  419887:	pop    rbp
  419888:	sub    bl,BYTE PTR [rdi+0x41]
  41988b:	push   rax
  41988c:	pop    rsp
  41988d:	sub    BYTE PTR [rax+rbp*1+0x63],bl
  419891:	outs   dx,DWORD PTR ds:[rsi]
  419892:	outs   dx,BYTE PTR ds:[rsi]
  419893:	jae    0x419909
  419895:	and    BYTE PTR [rbx+0x68],ah
  419898:	(bad)  
  419899:	jb     0x4198bb
  41989b:	pop    rsp
  41989c:	sub    bl,BYTE PTR [rcx+rbp*1+0x5c]
  4198a0:	sub    DWORD PTR [rbx],edi
  4198a2:	add    BYTE PTR [rax+0x75],dh
  4198a5:	je     0x41990c
  4198a7:	outs   dx,BYTE PTR ds:[rsi]
  4198a8:	jbe    0x419905
  4198aa:	and    BYTE PTR [rsp+rsi*2+0x5d],bl
  4198ae:	sub    bl,BYTE PTR [rax+rbp*1+0x0]
	...
  4198be:	add    BYTE PTR [rax],al
  4198c0:	gs js  0x419937
  4198c3:	gs jb  0x419934
  4198c6:	and    BYTE PTR [rbx+0x68],ah
  4198c9:	(bad)  
  4198ca:	jb     0x4198ec
  4198cc:	pop    rsp
  4198cd:	sub    ah,BYTE PTR [rdi+0x65]
  4198d0:	je     0x419937
  4198d2:	outs   dx,BYTE PTR ds:[rsi]
  4198d3:	jbe    0x419930
  4198d5:	and    BYTE PTR [rcx],cl
  4198d7:	pop    rbp
  4198d8:	sub    bl,BYTE PTR [rdi+0x41]
  4198db:	push   rax
  4198dc:	pop    rsp
  4198dd:	sub    BYTE PTR [rax+rbp*1+0x63],bl
  4198e1:	outs   dx,DWORD PTR ds:[rsi]
  4198e2:	outs   dx,BYTE PTR ds:[rsi]
  4198e3:	jae    0x419959
  4198e5:	and    BYTE PTR [rbx+0x68],ah
  4198e8:	(bad)  
  4198e9:	jb     0x41990b
  4198eb:	pop    rsp
  4198ec:	sub    bl,BYTE PTR [rcx+rbp*1+0x5c]
  4198f0:	sub    DWORD PTR [rbx],edi
  4198f2:	add    BYTE PTR [rdx],ch
  4198f4:	sub    eax,0x796c2d2a
  4198f9:	outs   dx,BYTE PTR ds:[rsi]
  4198fa:	js     0x41996b
  4198fc:	jae    0x419928
  4198fe:	add    BYTE PTR [rbx+0x74],dh
  419901:	fs ins BYTE PTR es:[rdi],dx
  419903:	imul   esp,DWORD PTR [rdx+0x2e],0x68
  41990a:	add    BYTE PTR [rax],al
  41990c:	add    BYTE PTR [rax],al
  41990e:	add    BYTE PTR [rax],al
  419910:	ins    BYTE PTR es:[rdi],dx
  419911:	jns    0x419981
  419913:	js     0x419984
  419915:	jae    0x419976
  419917:	ins    DWORD PTR es:[rdi],dx
  419918:	imul   esi,DWORD PTR [rbx+0x73],0x5f676e69
  41991f:	jo     0x419996
  419921:	je     0x419988
  419923:	outs   dx,BYTE PTR ds:[rsi]
  419924:	jbe    0x419926
	...
  41993e:	add    BYTE PTR [rax],al
  419940:	and    esi,DWORD PTR [rdi+0x61]
  419943:	jb     0x4199b3
  419945:	imul   ebp,DWORD PTR [rsi+0x67],0x5d09205b
  41994c:	sub    edx,DWORD PTR [rbp+0x73]
  41994f:	imul   ebp,DWORD PTR [rsi+0x67],0x69743c20
  419956:	ins    DWORD PTR es:[rdi],dx
  419957:	gs cs push 0x6e69203e
  41995e:	jae    0x4199d4
  419960:	gs (bad) 
  419962:	and    BYTE PTR fs:[rdi+0x66],ch
  419966:	and    BYTE PTR [rbx+rsi*2],bh
  419969:	jns    0x4199de
  41996b:	(bad)  
  41996c:	je     0x4199d7
  41996e:	ins    DWORD PTR es:[rdi],dx
  41996f:	gs cs push 0x7973003e
  419976:	jae    0x4199a7
  419978:	je     0x4199e3
  41997a:	ins    DWORD PTR es:[rdi],dx
  41997b:	gs cs push 0x796c0000
  419982:	outs   dx,BYTE PTR ds:[rsi]
  419983:	js     0x4199f4
  419985:	jae    0x4199e6
  419987:	outs   dx,BYTE PTR ds:[rsi]
  419988:	outs   dx,DWORD PTR ds:[rsi]
  419989:	pop    rdi
  41998a:	ja     0x4199ed
  41998c:	jb     0x4199fc
  41998e:	imul   ebp,DWORD PTR [rsi+0x67],0x5f6e695f
  419995:	jae    0x419a10
  419997:	jae    0x4199f8
  419999:	je     0x419a04
  41999b:	ins    DWORD PTR es:[rdi],dx
  41999c:	gs pop rdi
  41999e:	push   0x625f5f00
  4199a3:	jne    0x419a0e
  4199a5:	ins    BYTE PTR es:[rdi],dx
  4199a6:	je     0x419a11
  4199a8:	outs   dx,BYTE PTR ds:[rsi]
  4199a9:	pop    rdi
  4199aa:	outs   dx,DWORD PTR ds:[rsi]
  4199ab:	data16 data16 jae 0x419a14
  4199af:	je     0x419a20
  4199b1:	data16 and BYTE PTR [rax],ch
  4199b4:	jae    0x419a2a
  4199b6:	jb     0x419a2d
  4199b8:	movsxd esi,DWORD PTR [rax+riz*1+0x73]
  4199bc:	imul   esp,DWORD PTR [rdi+0x63],0x65746e6f
  4199c3:	js     0x419a39
  4199c5:	sub    al,0x20
  4199c7:	jae    0x419a2c
  4199c9:	pop    rdi
  4199ca:	addr32 jb 0x419a28
  4199cd:	xor    BYTE PTR [rbp+0x29],bl
	...
  419a00:	pop    rsp
  419a01:	sub    BYTE PTR [rax+rbp*1+0x5c],bl
  419a05:	sub    BYTE PTR [rbx+0x68],ah
  419a08:	(bad)  
  419a09:	jb     0x419a2b
  419a0b:	pop    rsp
  419a0c:	sub    bl,BYTE PTR [rcx+rbp*1+0x20]
  419a10:	es pop rsp
  419a12:	sub    BYTE PTR [rax+rbp*1+0x73],bl
  419a16:	je     0x419a8a
  419a18:	jne    0x419a7d
  419a1a:	je     0x419a3c
  419a1c:	jae    0x419a87
  419a1e:	movsxd ebp,DWORD PTR [edi+0x6e]
  419a22:	je     0x419a89
  419a24:	js     0x419a9a
  419a26:	and    BYTE PTR [rdx+rbp*1+0x5c],bl
  419a2a:	sub    DWORD PTR [rax],esp
  419a2c:	xor    BYTE PTR [rcx+rbp*1+0x2d],bl
  419a30:	ds jae 0x419a96
  419a33:	pop    rdi
  419a34:	addr32 jb 0x419a93
  419a37:	pop    rbx
  419a38:	xor    BYTE PTR [rbp+rbx*2+0x5c],bl
  419a3c:	sub    DWORD PTR [rax],esp
  419a3e:	sub    eax,0x63285c20
  419a43:	push   0x5c207261
  419a48:	sub    bl,BYTE PTR [rcx+rbp*1+0x20]
  419a4c:	xor    BYTE PTR [rcx+rbp*1+0x0],bl
  419a50:	imul   esp,DWORD PTR [rcx+0x36],0x2d2a2d34
  419a57:	ins    BYTE PTR es:[rdi],dx
  419a58:	imul   ebp,DWORD PTR [rsi+0x75],0x2a78
  419a5f:	add    BYTE PTR [rbx+0x79],dh
  419a62:	jae    0x419a93
  419a64:	jne    0x419ac9
  419a66:	outs   dx,DWORD PTR ds:[rsi]
  419a67:	outs   dx,BYTE PTR ds:[rsi]
  419a68:	je     0x419acf
  419a6a:	js     0x419ae0
  419a6c:	cs push 0x696c0000
  419a72:	outs   dx,BYTE PTR ds:[rsi]
  419a73:	jne    0x419aed
  419a75:	pop    rdi
  419a76:	imul   esp,DWORD PTR [rcx+0x36],0x63755f34
  419a7d:	outs   dx,DWORD PTR ds:[rsi]
  419a7e:	outs   dx,BYTE PTR ds:[rsi]
  419a7f:	je     0x419ae6
  419a81:	js     0x419af7
  419a83:	add    BYTE PTR [rbx],ah
  419a85:	and    eax,DWORD PTR [rax]
  419a87:	(bad)  
  419a88:	pop    rsp
  419a89:	sub    bl,BYTE PTR [rdx+rbp*1+0x2f]
	...
  419abd:	add    BYTE PTR [rax],al
  419abf:	add    BYTE PTR [rbx+0x70],dh
  419ac2:	(bad)  
  419ac3:	jb     0x419b28
  419ac5:	(bad)  
  419ac6:	(bad)  
  419ac7:	jae    0x419b36
  419ac9:	pop    rdi
  419aca:	ins    BYTE PTR es:[rdi],dx
  419acb:	imul   ebp,DWORD PTR [rsi+0x6b],0x2e656761
  419ad2:	push   0x6e757300
  419ad7:	sub    ch,BYTE PTR [rdi]
  419ad9:	(bad)  
  419ada:	jae    0x419b49
  419adc:	pop    rdi
  419add:	ins    BYTE PTR es:[rdi],dx
  419ade:	imul   ebp,DWORD PTR [rsi+0x6b],0x2e656761
  419ae5:	push   0x6d726100
  419aea:	(bad)  
  419aeb:	(bad)  
  419aec:	jae    0x419b4d
  419aee:	jae    0x419b65
  419af0:	jo     0x419b62
  419af2:	outs   dx,DWORD PTR ds:[rsi]
  419af3:	jb     0x419b69
  419af5:	cs push 0x6d726100
  419afb:	(bad)  
  419afc:	ins    DWORD PTR es:[rdi],dx
  419afd:	movsxd ebx,DWORD PTR [rdi+0x74]
  419b00:	jns    0x419b72
  419b02:	gs cs push 0x6d726100
  419b09:	(bad)  
  419b0a:	js     0x419b6f
  419b0c:	(bad)  
  419b0d:	cs push 0x76656400
  419b13:	(bad)  
  419b14:	movsxd ebp,DWORD PTR [rax+0x61]
  419b17:	jb     0x419b7d
  419b19:	gs ins WORD PTR es:[rdi],dx
  419b1c:	(bad)  
  419b1d:	movsxd ebp,DWORD PTR [rsi]
  419b1f:	push   0x76656400
  419b24:	(bad)  
  419b25:	jo     0x419b9a
  419b27:	pop    rdi
  419b28:	imul   esi,DWORD PTR [rdx+0x71],0x6400682e
  419b2f:	gs jbe 0x419b61
  419b32:	jae    0x419b97
  419b34:	jb     0x419b9b
  419b36:	outs   dx,BYTE PTR gs:[rsi]
  419b38:	cs push 0x76656400
  419b3e:	(bad)  
  419b3f:	jae    0x419ba4
  419b41:	jae    0x419bac
  419b43:	cs push 0x73797300
  419b49:	(bad)  
  419b4a:	je     0x419bc0
  419b4c:	jns    0x419b7c
  419b4e:	push   0x2e6d5800
  419b53:	(bad)  
  419b54:	movsxd ebp,DWORD PTR [rdi+0x72]
  419b57:	outs   dx,BYTE PTR ds:[rsi]
  419b58:	(bad)  
  419b59:	pop    rax
  419b5a:	ins    DWORD PTR es:[rdi],dx
  419b5b:	push   rax
  419b5c:	cs push 0x64736200
  419b62:	xor    al,0x33
  419b64:	(bad)  
  419b65:	(bad)
  419b6a:	pop    rdi
  419b6b:	cs push 0x616b0000
  419b71:	outs   dx,BYTE PTR ds:[rsi]
  419b72:	fs jb  0x419bd4
  419b75:	movsxd ebp,DWORD PTR [rdi+0x6e]
  419b78:	movsxd esp,DWORD PTR [rcx+0x74]
  419b7b:	add    BYTE PTR [rdi+0x5f],bl
  419b7e:	outs   dx,BYTE PTR ds:[esi]
  419b80:	jne    0x419be5
  419b82:	pop    rdi
  419b83:	jbe    0x419be6
  419b85:	pop    rdi
  419b86:	ins    BYTE PTR es:[rdi],dx
  419b87:	imul   esi,DWORD PTR [rbx+0x74],0x0
  419b8e:	add    BYTE PTR [rax],al
  419b90:	(bad)  
  419b91:	pop    rsp
  419b92:	sub    ah,BYTE PTR [rax]
  419b94:	jbe    0x419bf7
  419b96:	pop    rdi
  419b97:	ins    BYTE PTR es:[rdi],dx
  419b98:	imul   esi,DWORD PTR [rbx+0x74],0x2f2a5c20
  419b9f:	and    BYTE PTR [rbx+0x68],ah
  419ba2:	(bad)  
  419ba3:	jb     0x419bc5
  419ba5:	pop    rsp
  419ba6:	sub    al,BYTE PTR [rax]
  419ba8:	jae    0x419c1e
  419baa:	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x68
	...
  419bbe:	add    BYTE PTR [rax],al
  419bc0:	imul   esi,DWORD PTR [rdx+0x69],0x74735f78
  419bc7:	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x6c5f6176
  419bcf:	imul   esi,DWORD PTR [rbx+0x74],0x74786500
  419bd6:	gs jb  0x419c47
  419bd9:	and    BYTE PTR [rdi+0x5f],bl
  419bdc:	movsxd ebp,DWORD PTR [rdi+0x6e]
  419bdf:	jae    0x419c55
  419be1:	and    BYTE PTR [rax],al
  419be3:	pop    rsi
  419be4:	gs js  0x419c5b
  419be7:	gs jb  0x419c58
  419bea:	and    BYTE PTR [rbx+0x6f],ah
  419bed:	outs   dx,BYTE PTR ds:[rsi]
  419bee:	jae    0x419c64
  419bf0:	and    BYTE PTR [rax],al
	...
  419bfe:	add    BYTE PTR [rax],al
  419c00:	imul   di,WORD PTR [rax+0x69],0x636e
  419c06:	sub    eax,0x74736574
  419c0b:	sub    eax,0x696d696c
  419c10:	je     0x419c85
  419c12:	cs push 0x6d696c00
  419c18:	imul   esi,DWORD PTR [rbx+rsi*2+0x2e],0x68
  419c20:	imul   esi,DWORD PTR [rdx+0x69],0x696c5f78
  419c27:	ins    DWORD PTR es:[rdi],dx
  419c28:	imul   esi,DWORD PTR [rbx+rsi*2+0x5f],0x736e6f63
  419c30:	je     0x419c32
  419c32:	(bad)  
  419c33:	pop    rsi
  419c34:	jae    0x419caa
  419c36:	jb     0x419cad
  419c38:	movsxd esi,DWORD PTR [rdi+rbp*1+0x2c]
  419c3c:	(bad)  
  419c3d:	pop    rsi
  419c3e:	jge    0x419c7b
  419c40:	(bad)  
  419c41:	jae    0x419c72
  419c43:	jge    0x419c69
  419c45:	(bad)  
  419c46:	jge    0x419c83
  419c48:	(bad)  
  419c49:	add    BYTE PTR [rbp+0x24],bh
  419c4c:	add    BYTE PTR [rsi+0x65],ch
  419c4f:	je     0x419cba
  419c51:	outs   dx,BYTE PTR ds:[rsi]
  419c52:	gs je  0x419c84
  419c55:	imul   esi,DWORD PTR [rax+0x2e],0x68
  419c5c:	add    BYTE PTR [rax],al
  419c5e:	add    BYTE PTR [rax],al
  419c60:	imul   esi,DWORD PTR [rax+0x5f],0x7373696d
  419c67:	imul   ebp,DWORD PTR [rsi+0x67],0x6d65735f
  419c6e:	imul   eax,DWORD PTR [rax],0x72616863
  419c74:	pop    rdi
  419c75:	ins    DWORD PTR es:[rdi],dx
  419c76:	(bad)  
  419c77:	movsxd esi,DWORD PTR [rdx+0x6f]
  419c7a:	pop    rdi
  419c7b:	jne    0x419cf0
  419c7d:	add    BYTE PTR gs:[rcx+0x4f],cl
	...
  419c9d:	add    BYTE PTR [rax],al
  419c9f:	add    BYTE PTR [rbp+riz*2+0x66],ah
  419ca3:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  419caa:	sub    ebx,DWORD PTR [rbx+0x41]
  419cad:	sub    eax,0x392d305a
  419cb2:	pop    rdi
  419cb3:	pop    rbp
  419cb4:	sub    ebx,DWORD PTR [rbx+0x20]
  419cb7:	or     DWORD PTR [rbp+0x2b],ebx
  419cba:	pop    rbx
  419cbb:	rex.B sub eax,0x392d305a
  419cc1:	pop    rdi
  419cc2:	pop    rbp
  419cc3:	sub    ecx,DWORD PTR [rcx+0x4f]
  419cc6:	pop    rbx
  419cc7:	rex.B sub eax,0x5b2a5d5a
  419ccd:	and    BYTE PTR [rcx],cl
  419ccf:	pop    rbp
  419cd0:	sub    bl,BYTE PTR [rax+rbp*1+0x20]
  419cd4:	sub    bl,BYTE PTR [rbx+0x5e]
  419cd7:	sub    al,0x27
  419cd9:	pop    rbp
  419cda:	add    BYTE PTR [rcx+0x6f],ch
  419cdd:	pop    rdi
  419cde:	jno    0x419d55
  419ce0:	outs   dx,DWORD PTR ds:[rsi]
  419ce1:	je     0x419d48
  419ce3:	jae    0x419d44
  419ce5:	jne    0x419d5a
  419ce7:	add    BYTE PTR gs:[rbx+0x68],ah
  419ceb:	(bad)  
  419cec:	jb     0x419d4d
  419cee:	ins    DWORD PTR es:[rdi],dx
  419cef:	(bad)  
  419cf0:	movsxd esi,DWORD PTR [rdx+0x6f]
  419cf3:	pop    rdi
  419cf4:	fs data16 add BYTE PTR gs:[rax],al
  419cf9:	add    BYTE PTR [rax],al
  419cfb:	add    BYTE PTR [rax],al
  419cfd:	add    BYTE PTR [rax],al
  419cff:	add    BYTE PTR [rbp+riz*2+0x66],ah
  419d03:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  419d0a:	sub    ebx,DWORD PTR [rbx+0x41]
  419d0d:	sub    eax,0x392d305a
  419d12:	pop    rdi
  419d13:	pop    rbp
  419d14:	sub    ecx,DWORD PTR [rcx+0x4f]
  419d17:	pop    rbx
  419d18:	rex.B sub eax,0x5c2a5d5a
  419d1e:	sub    BYTE PTR [rbx+0x61],bl
  419d21:	sub    eax,0x5a2d417a
  419d26:	pop    rbp
  419d27:	pop    rbx
  419d28:	sub    al,0x29
  419d2a:	pop    rbp
  419d2b:	add    BYTE PTR [rcx+0x6f],ch
  419d2e:	pop    rdi
  419d2f:	jno    0x419da6
  419d31:	outs   dx,DWORD PTR ds:[rsi]
  419d32:	je     0x419d99
  419d34:	jae    0x419d95
  419d36:	fs data16 add BYTE PTR gs:[rsi+0x6f],dh
  419d3c:	imul   esp,DWORD PTR [rcx+rcx*1+0x25],0x2831
	...
  419d50:	pop    rdi
  419d51:	rex.XB
  419d52:	rex.WR
  419d53:	push   r11
  419d55:	push   rbx
  419d56:	rex.WB
  419d57:	rex.XB pop r15
  419d59:	rex.B
  419d5a:	rex.WRX push rbx
  419d5c:	rex.WB pop r15
  419d5e:	push   rsp
  419d5f:	pop    rcx
  419d60:	push   rax
  419d61:	rex.RB push r11
	...
  419d7f:	add    BYTE PTR [rcx+0x6e],ch
  419d82:	je     0x419ddf
  419d84:	and    BYTE PTR [rcx],cl
  419d86:	pop    rbp
  419d87:	sub    ebp,DWORD PTR [rax]
  419d89:	(bad)  
  419d8a:	(bad)  
  419d8b:	outs   dx,DWORD PTR ds:[rsi]
  419d8c:	jb     0x419e02
  419d8e:	jl     0x419df6
  419d90:	jb     0x419df7
  419d92:	gs jl  0x419dfa
  419d95:	js     0x419e00
  419d97:	je     0x419dc2
  419d99:	pop    rbx
  419d9a:	and    BYTE PTR [rcx],cl
  419d9c:	pop    rbp
  419d9d:	sub    bl,BYTE PTR [rax+rbp*1+0x0]
  419da1:	jae    0x419e17
  419da3:	fs ins BYTE PTR es:[rdi],dx
  419da5:	imul   esp,DWORD PTR [rdx+0x2e],0x68
  419dac:	add    BYTE PTR [rax],al
  419dae:	add    BYTE PTR [rax],al
  419db0:	imul   ebp,DWORD PTR [rsi+0x74],0x6f62615f
  419db7:	jb     0x419e2d
  419db9:	pop    rdi
  419dba:	data16 jb 0x419e22
  419dbd:	gs pop rdi
  419dbf:	(bad)  
  419dc0:	outs   dx,BYTE PTR ds:[rsi]
  419dc1:	fs pop rdi
  419dc3:	gs js  0x419e2f
  419dc6:	je     0x419dc8
  419dc8:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  419dcc:	imul   ebp,DWORD PTR [rsi+0x65],0x47554820
  419dd3:	rex.RB pop r15
  419dd5:	push   rsi
  419dd6:	rex.B
  419dd7:	rex.WR
  419dd8:	rex.WR and BYTE PTR [rax],r13b
  419ddb:	pop    rdi
  419ddc:	pop    rdi
  419ddd:	(bad)  
  419dde:	jne    0x419e49
  419de0:	ins    BYTE PTR es:[rdi],dx
  419de1:	je     0x419e4c
  419de3:	outs   dx,BYTE PTR ds:[rsi]
  419de4:	pop    rdi
  419de5:	push   0x5f656775
  419dea:	jbe    0x419e4d
  419dec:	ins    BYTE PTR es:[rdi],dx
  419ded:	ins    BYTE PTR es:[rdi],dx
  419dee:	sub    BYTE PTR [rcx],ch
  419df0:	sub    DWORD PTR [rdx],ecx
	...
  419dfe:	add    BYTE PTR [rax],al
  419e00:	pop    rdi
  419e01:	pop    rdi
  419e02:	(bad)  
  419e03:	jne    0x419e6e
  419e05:	ins    BYTE PTR es:[rdi],dx
  419e06:	je     0x419e71
  419e08:	outs   dx,BYTE PTR ds:[rsi]
  419e09:	pop    rdi
  419e0a:	push   0x5f656775
  419e0f:	jbe    0x419e72
  419e11:	ins    BYTE PTR es:[rdi],dx
  419e12:	ins    BYTE PTR es:[rdi],dx
	...
  419e1f:	add    BYTE PTR [rsi+0x23],bl
  419e22:	pop    rbx
  419e23:	and    BYTE PTR [rcx],cl
  419e25:	pop    rbp
  419e26:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  419e2a:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  419e31:	sub    cl,BYTE PTR [rax+0x55]
  419e34:	rex.RXB
  419e35:	rex.RB pop r15
  419e37:	push   rsi
  419e38:	rex.B
  419e39:	rex.WR
  419e3a:	rex.WR pop rbx
  419e3c:	and    BYTE PTR [rcx],cl
  419e3e:	pop    rbp
  419e3f:	sub    dh,BYTE PTR cs:[rax]
  419e42:	js     0x419e75
  419e44:	pop    rsp
  419e45:	xor    BYTE PTR cs:[rax+0x2e],dh
  419e49:	sub    al,BYTE PTR [rax]
	...
  419e5f:	add    BYTE PTR [rdx+0x69],ah
  419e62:	je     0x419ed7
  419e64:	(bad)  
  419e65:	push   0x5f656775
  419e6a:	jbe    0x419ecd
  419e6c:	ins    BYTE PTR es:[rdi],dx
  419e6d:	cs push 0x622f2a00
  419e73:	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x65677568
  419e7b:	pop    rdi
  419e7c:	jbe    0x419edf
  419e7e:	ins    BYTE PTR es:[rdi],dx
  419e7f:	cs push 0x75680000
  419e85:	addr32 gs pop rdi
  419e88:	jbe    0x419eeb
  419e8a:	ins    BYTE PTR es:[rdi],dx
  419e8b:	ins    BYTE PTR es:[rdi],dx
  419e8c:	pop    rdi
  419e8d:	push   0x7865
  419e92:	add    BYTE PTR [rax],al
  419e94:	add    BYTE PTR [rax],al
  419e96:	add    BYTE PTR [rax],al
  419e98:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  419e9c:	imul   ebp,DWORD PTR [rsi+0x65],0x47554820
  419ea3:	rex.RB pop r15
  419ea5:	push   rsi
  419ea6:	rex.B
  419ea7:	rex.WR
  419ea8:	rex.RX and BYTE PTR [rax],r13b
  419eab:	pop    rdi
  419eac:	pop    rdi
  419ead:	(bad)  
  419eae:	jne    0x419f19
  419eb0:	ins    BYTE PTR es:[rdi],dx
  419eb1:	je     0x419f1c
  419eb3:	outs   dx,BYTE PTR ds:[rsi]
  419eb4:	pop    rdi
  419eb5:	push   0x5f656775
  419eba:	jbe    0x419f1d
  419ebc:	ins    BYTE PTR es:[rdi],dx
  419ebd:	data16 sub BYTE PTR [rcx],ch
  419ec0:	sub    DWORD PTR [rdx],ecx
	...
  419ece:	add    BYTE PTR [rax],al
  419ed0:	pop    rdi
  419ed1:	pop    rdi
  419ed2:	(bad)  
  419ed3:	jne    0x419f3e
  419ed5:	ins    BYTE PTR es:[rdi],dx
  419ed6:	je     0x419f41
  419ed8:	outs   dx,BYTE PTR ds:[rsi]
  419ed9:	pop    rdi
  419eda:	push   0x5f656775
  419edf:	jbe    0x419f42
  419ee1:	ins    BYTE PTR es:[rdi],dx
  419ee2:	data16 add BYTE PTR [rax],al
	...
  419efd:	add    BYTE PTR [rax],al
  419eff:	add    BYTE PTR [rsi+0x23],bl
  419f02:	pop    rbx
  419f03:	and    BYTE PTR [rcx],cl
  419f05:	pop    rbp
  419f06:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  419f0a:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  419f11:	sub    cl,BYTE PTR [rax+0x55]
  419f14:	rex.RXB
  419f15:	rex.RB pop r15
  419f17:	push   rsi
  419f18:	rex.B
  419f19:	rex.WR
  419f1a:	rex.RX pop rbx
  419f1c:	and    BYTE PTR [rcx],cl
  419f1e:	pop    rbp
  419f1f:	sub    dh,BYTE PTR cs:[rax]
  419f22:	js     0x419f55
  419f24:	pop    rsp
  419f25:	xor    BYTE PTR cs:[rax+0x2e],dh
  419f29:	sub    al,BYTE PTR [rax]
	...
  419f3f:	add    BYTE PTR [rdx+0x69],ah
  419f42:	je     0x419fb7
  419f44:	(bad)  
  419f45:	push   0x5f656775
  419f4a:	jbe    0x419fad
  419f4c:	ins    BYTE PTR es:[rdi],dx
  419f4d:	cs push 0x622f2a00
  419f53:	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x65677568
  419f5b:	pop    rdi
  419f5c:	jbe    0x419fbf
  419f5e:	ins    BYTE PTR es:[rdi],dx
  419f5f:	cs push 0x75680000
  419f65:	addr32 gs pop rdi
  419f68:	jbe    0x419fcb
  419f6a:	ins    BYTE PTR es:[rdi],dx
  419f6b:	pop    di
  419f6d:	push   0x7865
  419f72:	add    BYTE PTR [rax],al
  419f74:	add    BYTE PTR [rax],al
  419f76:	add    BYTE PTR [rax],al
  419f78:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  419f7c:	imul   ebp,DWORD PTR [rsi+0x65],0x47554820
  419f83:	rex.RB pop r15
  419f85:	push   rsi
  419f86:	rex.B
  419f87:	rex.WR and BYTE PTR [rax],r13b
  419f8a:	pop    rdi
  419f8b:	pop    rdi
  419f8c:	(bad)  
  419f8d:	jne    0x419ff8
  419f8f:	ins    BYTE PTR es:[rdi],dx
  419f90:	je     0x419ffb
  419f92:	outs   dx,BYTE PTR ds:[rsi]
  419f93:	pop    rdi
  419f94:	push   0x5f656775
  419f99:	jbe    0x419ffc
  419f9b:	ins    BYTE PTR es:[rdi],dx
  419f9c:	sub    BYTE PTR [rcx],ch
  419f9e:	sub    DWORD PTR [rdx],ecx
	...
  419fb0:	pop    rdi
  419fb1:	pop    rdi
  419fb2:	(bad)  
  419fb3:	jne    0x41a01e
  419fb5:	ins    BYTE PTR es:[rdi],dx
  419fb6:	je     0x41a021
  419fb8:	outs   dx,BYTE PTR ds:[rsi]
  419fb9:	pop    rdi
  419fba:	push   0x5f656775
  419fbf:	jbe    0x41a022
  419fc1:	ins    BYTE PTR es:[rdi],dx
	...
  419fde:	add    BYTE PTR [rax],al
  419fe0:	pop    rsi
  419fe1:	and    ebx,DWORD PTR [rbx+0x20]
  419fe4:	or     DWORD PTR [rbp+0x2a],ebx
  419fe7:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  419fef:	or     DWORD PTR [rbp+0x2a],ebx
  419ff2:	rex.W push rbp
  419ff4:	rex.RXB
  419ff5:	rex.RB pop r15
  419ff7:	push   rsi
  419ff8:	rex.B
  419ff9:	rex.WR pop rbx
  419ffb:	and    BYTE PTR [rcx],cl
  419ffd:	pop    rbp
  419ffe:	sub    dh,BYTE PTR cs:[rax]
  41a001:	js     0x41a034
  41a003:	pop    rsp
  41a004:	xor    BYTE PTR cs:[rax+0x2e],dh
  41a008:	sub    al,BYTE PTR [rax]
	...
  41a01e:	add    BYTE PTR [rax],al
  41a020:	(bad)  
  41a021:	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x65677568
  41a029:	pop    rdi
  41a02a:	jbe    0x41a08d
  41a02c:	ins    BYTE PTR es:[rdi],dx
  41a02d:	cs push 0x622f2a00
  41a033:	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x65677568
  41a03b:	pop    rdi
  41a03c:	jbe    0x41a09f
  41a03e:	ins    BYTE PTR es:[rdi],dx
  41a03f:	cs push 0x75680000
  41a045:	addr32 gs pop rdi
  41a048:	jbe    0x41a0ab
  41a04a:	ins    BYTE PTR es:[rdi],dx
  41a04b:	pop    rdi
  41a04c:	push   0x73007865
  41a051:	je     0x41a0c5
  41a053:	jne    0x41a0b8
  41a055:	je     0x41a077
  41a057:	jae    0x41a0c2
  41a059:	addr32 gs jbe 0x41a0c2
  41a05d:	outs   dx,BYTE PTR ds:[rsi]
  41a05e:	je     0x41a09b
	...
  41a070:	pop    rsi
  41a071:	gs js  0x41a0e8
  41a074:	gs jb  0x41a0e5
  41a077:	and    BYTE PTR [rbx+0x74],dh
  41a07a:	jb     0x41a0f1
  41a07c:	movsxd esi,DWORD PTR [rax+riz*1+0x73]
  41a080:	imul   esp,DWORD PTR [rdi+0x65],0x746e6576
  41a087:	cmp    eax,DWORD PTR [rax]
  41a089:	jae    0x41a104
  41a08b:	jae    0x41a0bc
  41a08d:	je     0x41a0f8
  41a08f:	ins    DWORD PTR es:[rdi],dx
  41a090:	gs cs push 0x70680000
  41a097:	jne    0x41a111
  41a099:	pop    rdi
  41a09a:	jae    0x41a115
  41a09c:	jae    0x41a112
  41a09e:	imul   ebp,DWORD PTR [rbp+0x65],0x0
  41a0a5:	add    BYTE PTR [rax],al
  41a0a7:	add    BYTE PTR [rbx],ah
  41a0a9:	and    BYTE PTR [rax],ah
  41a0ab:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5509
  41a0b3:	rex.WB
  41a0b4:	rex.WRX push rsp
  41a0b6:	pop    rdi
  41a0b7:	and    eax,0x5f343631
  41a0bc:	rex.WRB
  41a0bd:	pop    r8
  41a0bf:	or     DWORD PTR [rdi+0x5f],ebx
  41a0c2:	push   rbp
  41a0c3:	rex.WB
  41a0c4:	rex.WRX push rsp
  41a0c6:	ss xor al,0x5f
  41a0c9:	rex.WRB
  41a0ca:	pop    r8
  41a0cc:	pop    rdi
  41a0cd:	pop    rdi
	...
  41a0de:	add    BYTE PTR [rax],al
  41a0e0:	pop    rsi
  41a0e1:	pop    rbx
  41a0e2:	and    BYTE PTR [rcx],cl
  41a0e4:	pop    rbp
  41a0e5:	sub    ah,BYTE PTR [rbx]
  41a0e7:	pop    rbx
  41a0e8:	and    BYTE PTR [rcx],cl
  41a0ea:	pop    rbp
  41a0eb:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41a0ef:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41a0f6:	sub    edx,DWORD PTR [rbp+0x49]
  41a0f9:	rex.WRX push rsp
  41a0fb:	pop    rdi
  41a0fc:	sub    BYTE PTR [rbp+rax*2+0x41],cl
  41a100:	push   rbx
  41a101:	push   rsp
  41a102:	jl     0x41a14a
  41a104:	push   r11
  41a106:	push   rsp
  41a107:	sub    DWORD PTR [rsi],esi
  41a109:	xor    al,0x5f
  41a10b:	rex.WRB
  41a10c:	pop    r8
  41a10e:	pop    rbx
  41a10f:	and    BYTE PTR [rcx],cl
  41a111:	pop    rbp
  41a112:	sub    edx,DWORD PTR [rbp+0x4c]
  41a115:	rex.WR
  41a116:	rex.WRXB
  41a117:	rex.WRX
  41a118:	rex.RXB pop r15
  41a11a:	rex.WRB
  41a11b:	pop    r8
  41a11d:	add    BYTE PTR [rdx],ch
  41a11f:	sub    eax,0x682d7068
  41a124:	jo     0x41a19b
  41a126:	js     0x41a159
  41a128:	xor    DWORD PTR [rsi],ebp
  41a12a:	xor    ch,BYTE PTR [rdx]
  41a12c:	add    BYTE PTR [rax],al
  41a12e:	add    BYTE PTR [rax],al
  41a130:	jae    0x41a1a6
  41a132:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x7570682d
  41a13a:	js     0x41a16d
  41a13c:	xor    DWORD PTR [rsi],ebp
  41a13e:	push   0x64747300
  41a143:	imul   ebp,DWORD PTR [rsi+0x74],0x682e
  41a14a:	add    BYTE PTR [rax],al
  41a14c:	add    BYTE PTR [rax],al
  41a14e:	add    BYTE PTR [rax],al
  41a150:	push   0x5f787570
  41a155:	jae    0x41a1cb
  41a157:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x61656c5f
  41a15f:	jae    0x41a1d5
  41a161:	pop    rdi
  41a162:	data16 (bad) 
  41a164:	jae    0x41a1da
  41a166:	add    BYTE PTR [rbx],ah
  41a168:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  41a16f:	rex.WXB
  41a170:	rex.RB push r10
  41a172:	rex.WRX
  41a173:	rex.RB
  41a174:	rex.WR or r12b,BYTE PTR [rip+0x65230a30]        # 0x6564abab
  41a17b:	outs   dx,BYTE PTR ds:[rsi]
  41a17c:	imul   esp,DWORD PTR fs:[rsi+0x0],0x652a2e5e
  41a184:	js     0x41a1fa
  41a186:	gs jb  0x41a1f7
  41a189:	sub    dh,BYTE PTR cs:[rbx+0x70]
  41a18d:	jne    0x41a1ee
  41a18f:	imul   ebp,DWORD PTR [rsi+0x66],0x2a2e6f
  41a196:	sub    ch,BYTE PTR [rip+0x682d7068]        # 0x686f1204
  41a19c:	jo     0x41a213
  41a19e:	js     0x41a1ca
	...
  41a1c0:	imul   esp,DWORD PTR [rcx+0x36],0x79732f34
  41a1c7:	jae    0x41a1f8
  41a1c9:	addr32 gs je 0x41a23d
  41a1cd:	jo     0x41a233
  41a1cf:	jo     0x41a1ff
  41a1d1:	push   0x732f2a00
  41a1d6:	jns    0x41a24b
  41a1d8:	(bad)  
  41a1d9:	addr32 gs je 0x41a24d
  41a1dd:	jo     0x41a243
  41a1df:	jo     0x41a20f
  41a1e1:	push   0x70680000
  41a1e6:	jne    0x41a260
  41a1e8:	pop    rdi
  41a1e9:	jae    0x41a25b
  41a1eb:	jne    0x41a24c
  41a1ed:	imul   ebp,DWORD PTR [rsi+0x66],0x6f
  41a1f4:	add    BYTE PTR [rax],al
  41a1f6:	add    BYTE PTR [rax],al
  41a1f8:	jae    0x41a23a
  41a1fa:	pop    rsi
  41a1fb:	pop    rbx
  41a1fc:	and    BYTE PTR [rcx],cl
  41a1fe:	pop    rbp
  41a1ff:	sub    dh,BYTE PTR [rcx]
  41a201:	sub    al,0x20
  41a203:	xor    DWORD PTR [rax+riz*1],ebp
  41a206:	xor    DWORD PTR [rax+riz*1],ebp
  41a209:	xor    DWORD PTR [rbx+rbx*2],ebp
  41a20c:	and    BYTE PTR [rcx],cl
  41a20e:	pop    rbp
  41a20f:	sub    bl,BYTE PTR [rsp+rbx*2+0x40]
  41a213:	or     DWORD PTR [rbx+0x20],edi
  41a216:	xor    DWORD PTR [rax+riz*1],ebp
  41a219:	xor    DWORD PTR [rax+riz*1],ebp
  41a21c:	xor    DWORD PTR [rax+riz*1],ebp
  41a21f:	xor    DWORD PTR [rax],esp
  41a221:	jge    0x41a24f
  41a223:	or     DWORD PTR [rcx],ecx
  41a225:	or     DWORD PTR [rcx],ecx
  41a227:	or     DWORD PTR [rcx],ecx
  41a229:	or     DWORD PTR [rsp+rbx*2+0x40],ebx
  41a22d:	add    BYTE PTR [rbx+0x40],dh
  41a230:	pop    rsi
  41a231:	pop    rbx
  41a232:	and    BYTE PTR [rcx],cl
  41a234:	pop    rbp
  41a235:	sub    dh,BYTE PTR [rcx]
  41a237:	sub    al,0x5b
  41a239:	and    BYTE PTR [rcx],cl
  41a23b:	pop    rbp
  41a23c:	sub    bl,BYTE PTR [rsp+rbx*2+0x40]
  41a240:	or     DWORD PTR [rbx+0x20],edi
  41a243:	xor    DWORD PTR [rax+riz*1],ebp
  41a246:	xor    BYTE PTR [rax],ah
  41a248:	jge    0x41a28a
  41a24a:	add    BYTE PTR [rdi],ch
  41a24c:	pop    rsi
  41a24d:	pop    rbx
  41a24e:	and    BYTE PTR [rcx],cl
  41a250:	pop    rbp
  41a251:	sub    dh,BYTE PTR [rax]
  41a253:	and    al,0x2f
  41a255:	add    BYTE PTR fs:[rax],al
  41a258:	jae    0x41a29a
  41a25a:	pop    rdi
  41a25b:	pop    rdi
  41a25c:	push   rax
  41a25d:	push   rsp
  41a25e:	rex.W push rdx
  41a260:	rex.RB
  41a261:	rex.B
  41a262:	rex.R pop rdi
  41a264:	rex.WRB push r13
  41a266:	push   rsp
  41a267:	rex.RB pop r8
  41a269:	pop    rdi
  41a26a:	push   rsi
  41a26b:	rex.B
  41a26c:	rex.WR
  41a26d:	rex.WB
  41a26e:	rex.R sub al,0x20
  41a271:	xor    BYTE PTR [rax+0x7b],al
  41a274:	and    BYTE PTR [rdi+0x5f],bl
  41a277:	push   rax
  41a278:	push   rsp
  41a279:	rex.W push rdx
  41a27b:	rex.RB
  41a27c:	rex.B
  41a27d:	rex.R pop rdi
  41a27f:	rex.WRB push r13
  41a281:	push   rsp
  41a282:	rex.RB pop r8
  41a284:	pop    rdi
  41a285:	push   rsi
  41a286:	rex.B
  41a287:	rex.WR
  41a288:	rex.WB
  41a289:	rex.R sub al,0x20
  41a28c:	xor    BYTE PTR [rax],ah
  41a28e:	jge    0x41a2d0
	...
  41a298:	jae    0x41a2da
  41a29a:	pop    rsi
  41a29b:	pop    rbx
  41a29c:	and    BYTE PTR [rcx],cl
  41a29e:	pop    rbp
  41a29f:	sub    dh,BYTE PTR [rax]
  41a2a1:	sub    al,0x20
  41a2a3:	xor    BYTE PTR [rax+riz*1],ch
  41a2a6:	sub    eax,0x30202c31
  41a2ab:	sub    al,0x5b
  41a2ad:	and    BYTE PTR [rcx],cl
  41a2af:	pop    rbp
  41a2b0:	sub    bl,BYTE PTR [rsp+rbx*2+0x40]
  41a2b4:	or     DWORD PTR [rbx+0x20],edi
  41a2b7:	xor    BYTE PTR [rax+riz*1],ch
  41a2ba:	xor    BYTE PTR [rax+riz*1],ch
  41a2bd:	sub    eax,0x30202c31
  41a2c2:	and    BYTE PTR [rbp+0x2c],bh
  41a2c5:	or     DWORD PTR [rcx],ecx
  41a2c7:	or     DWORD PTR [rcx],ecx
  41a2c9:	or     DWORD PTR [rcx],ecx
  41a2cb:	pop    rsp
  41a2cc:	pop    rsp
  41a2cd:	add    BYTE PTR [rax],al
  41a2d0:	jae    0x41a312
  41a2d2:	xor    BYTE PTR [rax+riz*1],ch
  41a2d5:	pop    rdi
  41a2d6:	pop    rdi
  41a2d7:	rex.WR push rdi
  41a2d9:	push   rax
  41a2da:	pop    rdi
  41a2db:	rex.WRB push r12
  41a2dd:	pop    rax
  41a2de:	pop    rdi
  41a2df:	push   rsi
  41a2e0:	rex.B
  41a2e1:	rex.WR
  41a2e2:	rex.WB
  41a2e3:	rex.R sub al,0x20
  41a2e6:	xor    BYTE PTR [rax+riz*1],ch
  41a2e9:	xor    DWORD PTR [rax+riz*1],ebp
  41a2ec:	xor    DWORD PTR [rax+riz*1],ebp
  41a2ef:	xor    DWORD PTR [rax+riz*1],ebp
  41a2f2:	xor    DWORD PTR [rbx+rbx*2],ebp
  41a2f5:	and    BYTE PTR [rcx],cl
  41a2f7:	pop    rbp
  41a2f8:	sub    bl,BYTE PTR [rsp+rbx*2+0x40]
  41a2fc:	jnp    0x41a31e
  41a2fe:	xor    BYTE PTR [rax+riz*1],ch
  41a301:	pop    rdi
  41a302:	pop    rdi
  41a303:	rex.WR push rdi
  41a305:	push   rax
  41a306:	pop    rdi
  41a307:	rex.WRB push r12
  41a309:	pop    rax
  41a30a:	pop    rdi
  41a30b:	push   rsi
  41a30c:	rex.B
  41a30d:	rex.WR
  41a30e:	rex.WB
  41a30f:	and    BYTE PTR [rbp+0x2c],r15b
  41a313:	and    BYTE PTR [rbx+0x20],bh
  41a316:	xor    BYTE PTR [rax+riz*1],ch
  41a319:	xor    DWORD PTR [rax+riz*1],ebp
  41a31c:	xor    DWORD PTR [rax+riz*1],ebp
  41a31f:	xor    DWORD PTR [rax+riz*1],ebp
  41a322:	xor    DWORD PTR [rax],esp
  41a324:	jge    0x41a352
  41a326:	or     DWORD PTR [rcx],ecx
  41a328:	or     DWORD PTR [rsp+rbx*2+0x40],ebx
  41a32c:	add    BYTE PTR [rax],al
  41a32e:	add    BYTE PTR [rax],al
  41a330:	jae    0x41a372
  41a332:	pop    rsi
  41a333:	pop    rbx
  41a334:	and    BYTE PTR [rcx],cl
  41a336:	pop    rbp
  41a337:	sub    bl,BYTE PTR [rdi+0x5f]
  41a33a:	rex.WR push rdi
  41a33c:	push   rax
  41a33d:	pop    rdi
  41a33e:	rex.WRB push r12
  41a340:	pop    rax
  41a341:	pop    rdi
  41a342:	push   rsi
  41a343:	rex.B
  41a344:	rex.WR
  41a345:	rex.WB
  41a346:	rex.R sub al,0x20
  41a349:	xor    BYTE PTR [rax+riz*1],ch
  41a34c:	xor    DWORD PTR [rax+riz*1],ebp
  41a34f:	xor    DWORD PTR [rax+riz*1],ebp
  41a352:	xor    DWORD PTR [rax+riz*1],ebp
  41a355:	xor    DWORD PTR [rbx+rbx*2],ebp
  41a358:	and    BYTE PTR [rcx],cl
  41a35a:	pop    rbp
  41a35b:	sub    bl,BYTE PTR [rsp+rbx*2+0x40]
  41a35f:	or     DWORD PTR [rbx+0x20],edi
  41a362:	xor    BYTE PTR [rax+riz*1],ch
  41a365:	pop    rdi
  41a366:	pop    rdi
  41a367:	rex.WR push rdi
  41a369:	push   rax
  41a36a:	pop    rdi
  41a36b:	rex.WRB push r12
  41a36d:	pop    rax
  41a36e:	pop    rdi
  41a36f:	push   rsi
  41a370:	rex.B
  41a371:	rex.WR
  41a372:	rex.WB
  41a373:	and    BYTE PTR [rbp+0x2c],r15b
  41a377:	and    BYTE PTR [rbx+0x20],bh
  41a37a:	xor    BYTE PTR [rax+riz*1],ch
  41a37d:	xor    DWORD PTR [rax+riz*1],ebp
  41a380:	xor    DWORD PTR [rax+riz*1],ebp
  41a383:	xor    DWORD PTR [rax+riz*1],ebp
  41a386:	xor    DWORD PTR [rax],esp
  41a388:	jge    0x41a3b6
  41a38a:	or     DWORD PTR [rcx],ecx
  41a38c:	or     DWORD PTR [rsp+rbx*2+0x40],ebx
	...
  41a398:	jae    0x41a3da
  41a39a:	pop    rsi
  41a39b:	pop    rbx
  41a39c:	and    BYTE PTR [rcx],cl
  41a39e:	pop    rbp
  41a39f:	sub    dh,BYTE PTR [rax]
  41a3a1:	sub    al,0x20
  41a3a3:	xor    BYTE PTR [rbx+0x20],bl
  41a3a6:	or     DWORD PTR [rbp+0x2a],ebx
  41a3a9:	pop    rsp
  41a3aa:	pop    rsp
  41a3ab:	rex or DWORD PTR [rbx+0x20],edi
  41a3af:	xor    BYTE PTR [rax+riz*1],ch
  41a3b2:	xor    BYTE PTR [rax],ah
  41a3b4:	jge    0x41a3bf
  41a3b6:	or     DWORD PTR [rcx],ecx
  41a3b8:	or     DWORD PTR [rcx],ecx
  41a3ba:	or     DWORD PTR [rcx],ecx
  41a3bc:	pop    rsp
  41a3bd:	pop    rsp
  41a3be:	add    BYTE PTR [rbx+0x40],sil
  41a3c2:	pop    rdi
  41a3c3:	pop    rdi
  41a3c4:	push   rax
  41a3c5:	push   rsp
  41a3c6:	rex.W push rdx
  41a3c8:	rex.RB
  41a3c9:	rex.B
  41a3ca:	rex.R pop rdi
  41a3cc:	rex.XB
  41a3cd:	rex.WRXB
  41a3ce:	rex.WRX
  41a3cf:	rex.R pop rdi
  41a3d1:	push   rsi
  41a3d2:	rex.B
  41a3d3:	rex.WR
  41a3d4:	rex.WB
  41a3d5:	rex.R sub al,0x20
  41a3d8:	xor    BYTE PTR [rax+0x7b],al
  41a3db:	and    BYTE PTR [rdi+0x5f],bl
  41a3de:	push   rax
  41a3df:	push   rsp
  41a3e0:	rex.W push rdx
  41a3e2:	rex.RB
  41a3e3:	rex.B
  41a3e4:	rex.R pop rdi
  41a3e6:	rex.XB
  41a3e7:	rex.WRXB
  41a3e8:	rex.WRX
  41a3e9:	rex.R pop rdi
  41a3eb:	push   rsi
  41a3ec:	rex.B
  41a3ed:	rex.WR
  41a3ee:	rex.WB
  41a3ef:	rex.R sub al,0x20
  41a3f2:	xor    BYTE PTR [rax],ah
  41a3f4:	jge    0x41a436
  41a3f6:	add    BYTE PTR [rax],al
  41a3f8:	jae    0x41a43a
  41a3fa:	pop    rdi
  41a3fb:	pop    rdi
  41a3fc:	rex.WR push rdi
  41a3fe:	push   rax
  41a3ff:	pop    rdi
  41a400:	rex.XB
  41a401:	rex.WRXB
  41a402:	rex.WRX
  41a403:	rex.R pop rdi
  41a405:	push   rsi
  41a406:	rex.B
  41a407:	rex.WR
  41a408:	rex.WB
  41a409:	rex.R sub al,0x20
  41a40c:	xor    BYTE PTR [rbx+rbx*2],ch
  41a40f:	and    BYTE PTR [rcx],cl
  41a411:	pop    rbp
  41a412:	sub    bl,BYTE PTR [rsp+rbx*2+0x40]
  41a416:	jnp    0x41a438
  41a418:	pop    rdi
  41a419:	pop    rdi
  41a41a:	rex.WR push rdi
  41a41c:	push   rax
  41a41d:	pop    rdi
  41a41e:	rex.XB
  41a41f:	rex.WRXB
  41a420:	rex.WRX
  41a421:	rex.R pop rdi
  41a423:	push   rsi
  41a424:	rex.B
  41a425:	rex.WR
  41a426:	rex.WB
  41a427:	rex.R sub al,0x20
  41a42a:	xor    BYTE PTR [rax],ah
  41a42c:	jge    0x41a45a
  41a42e:	or     DWORD PTR [rcx],ecx
  41a430:	or     DWORD PTR [rcx],ecx
  41a432:	or     DWORD PTR [rsp+rbx*2+0x40],ebx
  41a436:	add    BYTE PTR [rax],al
  41a438:	jae    0x41a47a
  41a43a:	pop    rdi
  41a43b:	pop    rdi
  41a43c:	push   rax
  41a43d:	push   rsp
  41a43e:	rex.W push rdx
  41a440:	rex.RB
  41a441:	rex.B
  41a442:	rex.R pop rdi
  41a444:	push   rdx
  41a445:	push   rdi
  41a446:	rex.WR
  41a447:	rex.WRXB
  41a448:	rex.XB
  41a449:	rex.WXB pop r15
  41a44b:	push   rsi
  41a44c:	rex.B
  41a44d:	rex.WR
  41a44e:	rex.WB
  41a44f:	rex.R sub al,0x20
  41a452:	xor    BYTE PTR [rax+0x7b],al
  41a455:	and    BYTE PTR [rdi+0x5f],bl
  41a458:	push   rax
  41a459:	push   rsp
  41a45a:	rex.W push rdx
  41a45c:	rex.RB
  41a45d:	rex.B
  41a45e:	rex.R pop rdi
  41a460:	push   rdx
  41a461:	push   rdi
  41a462:	rex.WR
  41a463:	rex.WRXB
  41a464:	rex.XB
  41a465:	rex.WXB pop r15
  41a467:	push   rsi
  41a468:	rex.B
  41a469:	rex.WR
  41a46a:	rex.WB
  41a46b:	rex.R sub al,0x20
  41a46e:	xor    BYTE PTR [rax],ah
  41a470:	jge    0x41a4b2
  41a472:	add    BYTE PTR [rax],al
  41a474:	add    BYTE PTR [rax],al
  41a476:	add    BYTE PTR [rax],al
  41a478:	jae    0x41a4ba
  41a47a:	pop    rdi
  41a47b:	pop    rdi
  41a47c:	rex.WR push rdi
  41a47e:	push   rax
  41a47f:	pop    rdi
  41a480:	push   rdx
  41a481:	push   rdi
  41a482:	rex.WR
  41a483:	rex.WRXB
  41a484:	rex.XB
  41a485:	rex.WXB pop r15
  41a487:	push   rsi
  41a488:	rex.B
  41a489:	rex.WR
  41a48a:	rex.WB
  41a48b:	rex.R sub al,0x20
  41a48e:	xor    BYTE PTR [rbx+rbx*2],ch
  41a491:	and    BYTE PTR [rcx],cl
  41a493:	pop    rbp
  41a494:	sub    bl,BYTE PTR [rsp+rbx*2+0x40]
  41a498:	jnp    0x41a4ba
  41a49a:	pop    rdi
  41a49b:	pop    rdi
  41a49c:	rex.WR push rdi
  41a49e:	push   rax
  41a49f:	pop    rdi
  41a4a0:	push   rdx
  41a4a1:	push   rdi
  41a4a2:	rex.WR
  41a4a3:	rex.WRXB
  41a4a4:	rex.XB
  41a4a5:	rex.WXB pop r15
  41a4a7:	push   rsi
  41a4a8:	rex.B
  41a4a9:	rex.WR
  41a4aa:	rex.WB
  41a4ab:	rex.R sub al,0x20
  41a4ae:	xor    BYTE PTR [rax],ah
  41a4b0:	jge    0x41a4de
  41a4b2:	or     DWORD PTR [rcx],ecx
  41a4b4:	or     DWORD PTR [rcx],ecx
  41a4b6:	or     DWORD PTR [rsp+rbx*2+0x40],ebx
  41a4ba:	add    BYTE PTR [rax],al
  41a4bc:	add    BYTE PTR [rax],al
  41a4be:	add    BYTE PTR [rax],al
  41a4c0:	jae    0x41a502
  41a4c2:	pop    rsi
  41a4c3:	pop    rbx
  41a4c4:	and    BYTE PTR [rcx],cl
  41a4c6:	pop    rbp
  41a4c7:	sub    dh,BYTE PTR [rax]
  41a4c9:	sub    al,0x20
  41a4cb:	xor    BYTE PTR [rax+riz*1],ch
  41a4ce:	xor    BYTE PTR [rax+riz*1],ch
  41a4d1:	xor    BYTE PTR [rax+riz*1],ch
  41a4d4:	xor    BYTE PTR [rax+riz*1],ch
  41a4d7:	xor    BYTE PTR [rax+riz*1],ch
  41a4da:	xor    BYTE PTR [rbx+0x20],bl
  41a4dd:	or     DWORD PTR [rbp+0x2a],ebx
  41a4e0:	pop    rsp
  41a4e1:	pop    rsp
  41a4e2:	rex or DWORD PTR [rbx+0x20],edi
  41a4e6:	xor    BYTE PTR [rax+riz*1],ch
  41a4e9:	xor    BYTE PTR [rax+riz*1],ch
  41a4ec:	xor    BYTE PTR [rax+riz*1],ch
  41a4ef:	xor    BYTE PTR [rax+riz*1],ch
  41a4f2:	xor    BYTE PTR [rax],ah
  41a4f4:	jge    0x41a522
  41a4f6:	and    BYTE PTR [rbx+0x20],bh
  41a4f9:	xor    BYTE PTR [rax+riz*1],ch
  41a4fc:	xor    BYTE PTR [rbp+0x9],bh
  41a4ff:	or     DWORD PTR [rcx],ecx
  41a501:	or     DWORD PTR [rcx],ecx
  41a503:	pop    rsp
  41a504:	pop    rsp
  41a505:	add    BYTE PTR [rdx],bpl
  41a508:	sub    eax,0x682d7068
  41a50d:	jo     0x41a584
  41a50f:	js     0x41a542
  41a511:	xor    DWORD PTR [rsi],ebp
  41a513:	pop    rbx
  41a514:	xor    BYTE PTR [rip+0x2a5d33],ch        # 0x6c024d
  41a51a:	jae    0x41a595
  41a51c:	jae    0x41a54d
  41a51e:	jo     0x41a594
  41a520:	push   0x64616572
  41a525:	cs push 0x0
  41a52b:	add    BYTE PTR [rax],al
  41a52d:	add    BYTE PTR [rax],al
  41a52f:	add    BYTE PTR [rax+0x70],ch
  41a532:	jne    0x41a5ac
  41a534:	pop    rdi
  41a535:	jo     0x41a5ab
  41a537:	push   0x64616572
  41a53c:	pop    rdi
  41a53d:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  41a544:	imul   edi,DWORD PTR [rdx+0x65],0x7372
  41a54b:	add    BYTE PTR [rax],al
  41a54d:	add    BYTE PTR [rax],al
  41a54f:	add    BYTE PTR [rbx],ah
  41a551:	and    BYTE PTR [rax],ah
  41a553:	imul   esp,DWORD PTR [rsi+0x20],0x66656421
  41a55a:	imul   ebp,DWORD PTR [rsi+0x65],0x505f2864
  41a561:	push   rdx
  41a562:	rex.WRXB push r12
  41a564:	rex.WRXB push r12
  41a566:	pop    rcx
  41a567:	push   rax
  41a568:	rex.RB push r11
  41a56a:	sub    DWORD PTR [rax],esp
  41a56c:	jl     0x41a5ea
  41a56e:	and    BYTE PTR [rbp+riz*2+0x66],ah
  41a572:	imul   ebp,DWORD PTR [rsi+0x65],0x4c5f2864
  41a579:	rex.WRXB
  41a57a:	rex.WRX
  41a57b:	rex.RXB pop r15
  41a57d:	rex.R
  41a57e:	rex.WRXB push r13
  41a580:	rex.X
  41a581:	rex.WR
  41a582:	rex.RB pop r15
  41a584:	push   rbx
  41a585:	push   rsp
  41a586:	push   rdx
  41a587:	push   rbp
  41a588:	rex.XB push r12
  41a58a:	sub    DWORD PTR [rax],eax
	...
  41a5c0:	and    ebx,DWORD PTR [rbx+0x20]
  41a5c3:	or     DWORD PTR [rbp+0x2a],ebx
  41a5c6:	imul   esp,DWORD PTR [rsi+0x5b],0x2a5d0920
  41a5cd:	and    DWORD PTR [rbp+riz*2+0x66],esp
  41a5d1:	imul   ebp,DWORD PTR [rsi+0x65],0x5f285c64
  41a5d8:	pop    rdi
  41a5d9:	imul   esp,DWORD PTR [rcx+0x36],0x20295c34
  41a5e0:	pop    rsp
  41a5e1:	jl     0x41a63f
  41a5e3:	jl     0x41a605
  41a5e5:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5c64
  41a5ed:	sub    BYTE PTR [rdi+0x50],bl
  41a5f0:	push   rdx
  41a5f1:	rex.WRXB push r12
  41a5f3:	rex.WRXB push r12
  41a5f5:	pop    rcx
  41a5f6:	push   rax
  41a5f7:	rex.RB push r11
  41a5f9:	pop    rsp
  41a5fa:	sub    DWORD PTR [rax],esp
  41a5fc:	pop    rsp
  41a5fd:	jl     0x41a65b
  41a5ff:	jl     0x41a621
  41a601:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5c64
  41a609:	sub    BYTE PTR [rdi+0x4c],bl
  41a60c:	rex.WRXB
  41a60d:	rex.WRX
  41a60e:	rex.RXB pop r15
  41a610:	rex.R
  41a611:	rex.WRXB push r13
  41a613:	rex.X
  41a614:	rex.WR
  41a615:	rex.RB pop r15
  41a617:	push   rbx
  41a618:	push   rsp
  41a619:	push   rdx
  41a61a:	push   rbp
  41a61b:	rex.XB push r12
  41a61d:	pop    rsp
  41a61e:	sub    DWORD PTR [rax],eax
  41a620:	push   0x2a617070
  41a625:	sub    eax,0x70682d2a
  41a62a:	jne    0x41a6a4
  41a62c:	xor    DWORD PTR [rcx],esi
  41a62e:	xor    ebp,DWORD PTR cs:[rdx]
  41a631:	add    BYTE PTR [rbx+0x74],dh
  41a634:	fs ins BYTE PTR es:[rdi],dx
  41a636:	imul   esp,DWORD PTR [rdx+0x2e],0x68
  41a63d:	add    BYTE PTR [rax],al
  41a63f:	add    BYTE PTR [rax+0x70],ch
  41a642:	jne    0x41a6bc
  41a644:	pop    rdi
  41a645:	ins    BYTE PTR es:[rdi],dx
  41a646:	outs   dx,DWORD PTR ds:[rsi]
  41a647:	outs   dx,BYTE PTR ds:[rsi]
  41a648:	addr32 pop rdi
  41a64a:	outs   dx,DWORD PTR fs:[rsi]
  41a64c:	jne    0x41a6b0
  41a64e:	ins    BYTE PTR es:[rdi],dx
  41a64f:	gs pop rdi
  41a651:	xor    al,BYTE PTR [rax]
  41a653:	add    BYTE PTR [rax],al
  41a655:	add    BYTE PTR [rax],al
  41a657:	add    BYTE PTR [rdi],ch
  41a659:	pop    rsi
  41a65a:	and    ebx,DWORD PTR [rbx+0x20]
  41a65d:	or     DWORD PTR [rbp+0x2a],ebx
  41a660:	imul   esp,DWORD PTR [rsi+0x6e],0x20666564
  41a667:	pop    rdi
  41a668:	rex.WR
  41a669:	rex.WRXB
  41a66a:	rex.WRX
  41a66b:	rex.RXB pop r15
  41a66d:	rex.R
  41a66e:	rex.WRXB push r13
  41a670:	rex.X
  41a671:	rex.WR
  41a672:	rex.RB (bad) 
  41a674:	sub    al,0x2f
  41a676:	pop    rsp
  41a677:	(bad)  
  41a678:	pop    rsp
  41a679:	sub    ah,BYTE PTR [rax]
  41a67b:	pop    rdi
  41a67c:	rex.WR
  41a67d:	rex.WRXB
  41a67e:	rex.WRX
  41a67f:	rex.RXB pop r15
  41a681:	rex.R
  41a682:	rex.WRXB push r13
  41a684:	rex.X
  41a685:	rex.WR
  41a686:	and    BYTE PTR [r10+rbp*1+0x5c],r11b
  41a68b:	(bad)  
  41a68c:	(bad)  
  41a68d:	add    BYTE PTR [rbx+0x2f],r14b
  41a691:	ins    BYTE PTR es:[rdi],dx
  41a692:	outs   dx,DWORD PTR ds:[rsi]
  41a693:	outs   dx,BYTE PTR ds:[rsi]
  41a694:	addr32 pop rdi
  41a696:	outs   dx,DWORD PTR fs:[rsi]
  41a698:	jne    0x41a6fc
  41a69a:	ins    BYTE PTR es:[rdi],dx
  41a69b:	gs (bad) 
  41a69d:	ins    BYTE PTR es:[rdi],dx
  41a69e:	outs   dx,DWORD PTR ds:[rsi]
  41a69f:	outs   dx,BYTE PTR ds:[rsi]
  41a6a0:	and    BYTE PTR [edi+ebp*2+0x75],ah
  41a6a5:	(bad)  
  41a6a6:	ins    BYTE PTR es:[rdi],dx
  41a6a7:	gs (bad) 
  41a6a9:	add    BYTE PTR [edi+ebp*2+0x6e],ch
  41a6ae:	addr32 pop rdi
  41a6b0:	outs   dx,DWORD PTR fs:[rsi]
  41a6b2:	jne    0x41a716
  41a6b4:	ins    BYTE PTR es:[rdi],dx
  41a6b5:	gs pop rdi
  41a6b7:	je     0x41a6b9
  41a6b9:	add    BYTE PTR [rax],al
  41a6bb:	add    BYTE PTR [rax],al
  41a6bd:	add    BYTE PTR [rax],al
  41a6bf:	add    BYTE PTR [rbp+0x78],ah
  41a6c2:	je     0x41a729
  41a6c4:	jb     0x41a734
  41a6c6:	pop    rbx
  41a6c7:	and    BYTE PTR [rcx],cl
  41a6c9:	pop    rbp
  41a6ca:	ins    BYTE PTR es:[rdi],dx
  41a6cb:	outs   dx,DWORD PTR ds:[rsi]
  41a6cc:	outs   dx,BYTE PTR ds:[rsi]
  41a6cd:	addr32 pop rdi
  41a6cf:	outs   dx,DWORD PTR fs:[rsi]
  41a6d1:	jne    0x41a735
  41a6d3:	ins    BYTE PTR es:[rdi],dx
  41a6d4:	gs pop rbx
  41a6d6:	and    BYTE PTR [rcx],cl
  41a6d8:	pop    rbp
  41a6d9:	jae    0x41a74f
  41a6db:	jb     0x41a751
  41a6dd:	outs   dx,DWORD PTR ds:[rsi]
  41a6de:	ins    BYTE PTR es:[rdi],dx
  41a6df:	add    BYTE PTR fs:[rdx],ch
  41a6e2:	sub    eax,0x70682d2a
  41a6e7:	jne    0x41a761
  41a6e9:	xor    DWORD PTR [rax],esi
  41a6eb:	sub    al,BYTE PTR [rax]
  41a6ed:	sub    ch,BYTE PTR [rip+0x70682d2a]        # 0x70a9d41d
  41a6f3:	jne    0x41a76d
  41a6f5:	xor    DWORD PTR [rcx],esi
  41a6f7:	cs pop rbx
  41a6f9:	xor    BYTE PTR [rcx],dh
  41a6fb:	xor    bl,BYTE PTR [rbp+0x2a]
  41a6fe:	add    BYTE PTR [rbx+0x74],dh
  41a701:	fs ins BYTE PTR es:[rdi],dx
  41a703:	imul   esp,DWORD PTR [rdx+0x2e],0x68
  41a70a:	add    BYTE PTR [rax],al
  41a70c:	add    BYTE PTR [rax],al
  41a70e:	add    BYTE PTR [rax],al
  41a710:	push   0x5f787570
  41a715:	ins    BYTE PTR es:[rdi],dx
  41a716:	outs   dx,DWORD PTR ds:[rsi]
  41a717:	outs   dx,BYTE PTR ds:[rsi]
  41a718:	addr32 pop rdi
  41a71a:	outs   dx,DWORD PTR fs:[rsi]
  41a71c:	jne    0x41a780
  41a71e:	ins    BYTE PTR es:[rdi],dx
  41a71f:	add    BYTE PTR gs:[rcx+rdi*2+0x70],dh
  41a724:	gs fs data16 and BYTE PTR gs:[rbx+0x69],dh
  41a72b:	outs   dx,BYTE PTR ds:[esi]
  41a72d:	gs and BYTE PTR fs:[rbx+0x68],ah
  41a732:	(bad)  
  41a733:	jb     0x41a755
  41a735:	imul   ebp,DWORD PTR [rsi+0x74],0x5f383125
  41a73c:	je     0x41a779
  41a73e:	add    BYTE PTR [rax],al
  41a740:	pop    rsi
  41a741:	pop    rbx
  41a742:	and    BYTE PTR [rcx],cl
  41a744:	pop    rbp
  41a745:	sub    dh,BYTE PTR [rcx+rdi*2+0x70]
  41a749:	gs fs gs pop bx
  41a74e:	and    BYTE PTR [rcx],cl
  41a750:	pop    rbp
  41a751:	sub    ah,BYTE PTR [rbx+0x68]
  41a754:	(bad)  
  41a755:	jb     0x41a7b2
  41a757:	and    BYTE PTR [rcx],cl
  41a759:	pop    rbp
  41a75a:	sub    ch,BYTE PTR [rcx+0x6e]
  41a75d:	je     0x41a787
  41a75f:	pop    rdi
  41a760:	ins    BYTE PTR es:[rdi],dx
  41a761:	gs (bad) 
  41a763:	jae    0x41a7d9
  41a765:	sub    DWORD PTR [rbx+0x30],edi
  41a768:	sub    al,0x31
  41a76a:	jge    0x41a7a4
  41a76c:	pop    rdi
  41a76d:	je     0x41a79d
  41a76f:	sub    al,BYTE PTR [rax]
  41a771:	sub    ch,BYTE PTR [rip+0x682d7068]        # 0x686f17df
  41a777:	jo     0x41a7ee
  41a779:	js     0x41a7ac
  41a77b:	pop    rbx
  41a77c:	xor    BYTE PTR [rcx],dh
  41a77e:	pop    rbp
  41a77f:	sub    al,BYTE PTR cs:[rax]
	...
  41a78e:	add    BYTE PTR [rax],al
  41a790:	jae    0x41a80b
  41a792:	jae    0x41a7c3
  41a794:	pop    rdi
  41a795:	imul   ebp,DWORD PTR [rsi+0x74],0x65707974
  41a79c:	jae    0x41a7cc
  41a79e:	push   0x0
	...
  41a7af:	add    BYTE PTR [rax+0x70],ch
  41a7b2:	jne    0x41a82c
  41a7b4:	pop    rdi
  41a7b5:	imul   ebp,DWORD PTR [rsi+0x74],0x65707974
  41a7bc:	pop    rdi
  41a7bd:	imul   ebp,DWORD PTR [rsi+0x74],0x745f38
  41a7c4:	add    BYTE PTR [rax],al
  41a7c6:	add    BYTE PTR [rax],al
  41a7c8:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41a7cc:	imul   ebp,DWORD PTR [rsi+0x65],0x6f435f20
  41a7d3:	ins    DWORD PTR es:[rdi],dx
  41a7d4:	jo     0x41a842
  41a7d6:	gs js  0x41a838
  41a7d9:	rex.WB and BYTE PTR [r8],bpl
  41a7dc:	pop    rdi
  41a7dd:	pop    rdi
  41a7de:	gs js  0x41a855
  41a7e1:	outs   dx,BYTE PTR gs:[rsi]
  41a7e3:	jae    0x41a84e
  41a7e5:	outs   dx,DWORD PTR ds:[rsi]
  41a7e6:	outs   dx,BYTE PTR ds:[rsi]
  41a7e7:	pop    rdi
  41a7e8:	pop    rdi
  41a7e9:	and    BYTE PTR [rcx],dh
  41a7eb:	xor    BYTE PTR cs:[rcx+0x46],ch
  41a7ef:	sub    DWORD PTR [rax],eax
	...
  41a7fd:	add    BYTE PTR [rax],al
  41a7ff:	add    BYTE PTR [rsi+0x5b],bl
  41a802:	and    BYTE PTR [rcx],cl
  41a804:	pop    rbp
  41a805:	sub    ah,BYTE PTR [rbx]
  41a807:	pop    rbx
  41a808:	and    BYTE PTR [rcx],cl
  41a80a:	pop    rbp
  41a80b:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41a80f:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41a816:	sub    bl,BYTE PTR [rdi+0x43]
  41a819:	outs   dx,DWORD PTR ds:[rsi]
  41a81a:	ins    DWORD PTR es:[rdi],dx
  41a81b:	jo     0x41a889
  41a81d:	gs js  0x41a87f
  41a820:	rex.WB
  41a821:	sub    al,BYTE PTR cs:[rax]
  41a824:	imul   esp,DWORD PTR [rcx+0x36],0x70682d34
  41a82b:	sub    eax,0x78757068
  41a830:	xor    DWORD PTR [rcx],esi
  41a832:	sub    al,BYTE PTR cs:[rax]
  41a835:	movsxd ebp,DWORD PTR [rdi+0x6d]
  41a838:	jo     0x41a8a6
  41a83a:	gs js  0x41a86b
  41a83d:	push   0x70680000
  41a842:	jne    0x41a8bc
  41a844:	pop    rdi
  41a845:	imul   ebp,DWORD PTR [rbp+0x61],0x616e6967
  41a84c:	jb     0x41a8c7
  41a84e:	pop    rdi
  41a84f:	imul   eax,DWORD PTR [rax],0x20666923
  41a855:	xor    DWORD PTR [rdx],ecx
  41a857:	and    eax,0x31
	...
  41a880:	and    ebp,DWORD PTR [rcx+0x66]
  41a883:	outs   dx,BYTE PTR ds:[rsi]
  41a884:	fs data16 and BYTE PTR gs:[rdi+0x58],bl
  41a88a:	rex.WRXB push r8
  41a88c:	rex.RB
  41a88d:	rex.WRX pop rdi
  41a88f:	push   rbx
  41a890:	rex.WRXB push r13
  41a892:	push   rdx
  41a893:	rex.XB
  41a894:	rex.RB pop r15
  41a896:	rex.RB pop r8
  41a898:	push   rsp
  41a899:	rex.RB
  41a89a:	rex.WRX
  41a89b:	rex.R
  41a89c:	rex.RB
  41a89d:	rex.R pop rbx
  41a89f:	and    BYTE PTR [rcx],cl
  41a8a1:	pop    rbp
  41a8a2:	sub    cl,BYTE PTR [rdx]
  41a8a4:	sub    BYTE PTR [rdi],ch
  41a8a6:	pop    rsp
  41a8a7:	sub    cl,BYTE PTR [rdx]
  41a8a9:	and    BYTE PTR [rdx+rbp*1+0x20],bl
  41a8ad:	rex.WRB (bad) 
  41a8af:	movsxd esi,DWORD PTR [rdx+0x6f]
  41a8b2:	jae    0x41a8d4
  41a8b4:	outs   dx,WORD PTR ds:[rsi]
  41a8b6:	jb     0x41a8d8
  41a8b8:	outs   dx,BYTE PTR ds:[rsi]
  41a8b9:	jne    0x41a928
  41a8bb:	(bad)  
  41a8bc:	gs jb  0x41a8df
  41a8bf:	jb     0x41a926
  41a8c1:	jo     0x41a935
  41a8c3:	gs jae 0x41a92b
  41a8c6:	outs   dx,BYTE PTR ds:[rsi]
  41a8c7:	je     0x41a92a
  41a8c9:	je     0x41a934
  41a8cb:	outs   dx,DWORD PTR ds:[rsi]
  41a8cc:	outs   dx,BYTE PTR ds:[rsi]
  41a8cd:	and    BYTE PTR [rbx+0x6f],ah
  41a8d0:	outs   dx,BYTE PTR ds:[rsi]
  41a8d1:	jbe    0x41a938
  41a8d3:	jb     0x41a948
  41a8d5:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a2e5c
  41a8dc:	pop    rsp
  41a8dd:	sub    ch,BYTE PTR [rdi]
  41a8df:	or     ah,BYTE PTR [rbx]
  41a8e1:	imul   esp,DWORD PTR [rsi+0x6e],0x20666564
  41a8e8:	outs   dx,BYTE PTR ds:[rsi]
  41a8e9:	je     0x41a95a
  41a8eb:	push   0x6e00296c
  41a8f0:	gs je  0x41a95c
  41a8f3:	outs   dx,BYTE PTR ds:[rsi]
  41a8f4:	gs je  0x41a926
  41a8f7:	imul   ebp,DWORD PTR [rsi+0x2e],0x68000068
  41a8fe:	jo     0x41a975
  41a900:	js     0x41a961
  41a902:	push   0x6c6e6f74
  41a907:	add    BYTE PTR [rbx],ah
  41a909:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  41a910:	pop    rdi
  41a911:	movsxd esi,DWORD PTR [rax+0x6c]
  41a914:	jne    0x41a989
  41a916:	jo     0x41a984
  41a918:	jne    0x41a98d
  41a91a:	or     ah,BYTE PTR [rbp+0x78]
  41a91d:	je     0x41a984
  41a91f:	jb     0x41a98f
  41a921:	and    BYTE PTR [rdx],ah
  41a923:	rex.XB and spl,BYTE PTR [r8]
  41a926:	jnp    0x41a932
  41a928:	and    esp,DWORD PTR [rbp+0x6e]
  41a92b:	imul   esp,DWORD PTR fs:[rsi+0xa],0x230a3025
  41a933:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  41a93a:	pop    rdi
  41a93b:	movsxd esi,DWORD PTR [rax+0x6c]
  41a93e:	jne    0x41a9b3
  41a940:	jo     0x41a9ae
  41a942:	jne    0x41a9b7
  41a944:	or     bh,BYTE PTR [rbp+0xa]
  41a947:	and    esp,DWORD PTR [rbp+0x6e]
  41a94a:	imul   esp,DWORD PTR fs:[rsi+0x0],0x5b5e0000
  41a952:	and    BYTE PTR [rcx],cl
  41a954:	pop    rbp
  41a955:	sub    ah,BYTE PTR [rbp+0x78]
  41a958:	je     0x41a9bf
  41a95a:	jb     0x41a9ca
  41a95c:	and    BYTE PTR [rcx+0x6e],ch
  41a95f:	je     0x41a981
  41a961:	gs jb  0x41a9d6
  41a964:	outs   dx,BYTE PTR ds:[rsi]
  41a965:	outs   dx,DWORD PTR ds:[rsi]
  41a966:	cmp    esp,DWORD PTR [rax+rax*1]
  41a969:	sub    ch,BYTE PTR [rip+0x682d7068]        # 0x686f19d7
  41a96f:	jo     0x41a9e6
  41a971:	js     0x41a9a4
  41a973:	xor    BYTE PTR [rsi],ch
  41a975:	sub    al,BYTE PTR [rax]
  41a977:	sub    ch,BYTE PTR [rip+0x682d7068]        # 0x686f19e5
  41a97d:	jo     0x41a9f4
  41a97f:	js     0x41a9b2
  41a981:	xor    DWORD PTR [rsi],ebp
  41a983:	pop    rbx
  41a984:	xor    BYTE PTR [rip+0x2a5d32],ch        # 0x6c06bc
  41a98a:	gs jb  0x41a9ff
  41a98d:	outs   dx,BYTE PTR ds:[rsi]
  41a98e:	outs   dx,DWORD PTR ds:[rsi]
  41a98f:	cs push 0x0
	...
  41a99d:	add    BYTE PTR [rax],al
  41a99f:	add    BYTE PTR [rax+0x70],ch
  41a9a2:	jne    0x41aa1c
  41a9a4:	pop    rdi
  41a9a5:	gs js  0x41aa1c
  41a9a8:	gs jb  0x41aa19
  41a9ab:	pop    rdi
  41a9ac:	gs jb  0x41aa21
  41a9af:	outs   dx,BYTE PTR ds:[rsi]
  41a9b0:	outs   dx,DWORD PTR ds:[rsi]
  41a9b1:	add    BYTE PTR [rip+0x6e692831],ah        # 0x6eaad1e8
  41a9b7:	je     0x41a9e2
  41a9b9:	and    eax,0x33
  41a9be:	add    BYTE PTR [rax],al
  41a9c0:	sub    BYTE PTR [rax],ch
  41a9c2:	cmp    ah,BYTE PTR [rax]
  41a9c4:	jl     0x41aa22
  41a9c6:	sub    BYTE PTR [rcx],ch
  41a9c8:	pop    rdi
  41a9c9:	pop    rdi
  41a9ca:	push   rbx
  41a9cb:	rex.X pop rdi
  41a9cd:	ins    DWORD PTR es:[rdi],dx
  41a9ce:	(bad)  
  41a9cf:	jae    0x41aa3c
  41a9d1:	jae    0x41a9f3
  41a9d3:	pop    rsp
  41a9d4:	(bad)  
  41a9d5:	and    BYTE PTR [rcx],ch
  41a9d7:	sub    BYTE PTR [rdi+0x5f],bl
  41a9da:	push   rbx
  41a9db:	rex.X pop rdi
  41a9dd:	ins    DWORD PTR es:[rdi],dx
  41a9de:	(bad)  
  41a9df:	jae    0x41aa4c
  41a9e1:	jae    0x41aa3f
  41a9e3:	pop    rbx
  41a9e4:	pop    rdi
  41a9e5:	pop    rdi
  41a9e6:	sub    BYTE PTR [rcx+0x6c],ah
  41a9e9:	outs   dx,BYTE PTR ds:[rsi]
  41a9ea:	jne    0x41aa59
  41a9ec:	jl     0x41aa51
  41a9ee:	sub    DWORD PTR [rbp+rbx*2+0x20],ebx
  41a9f2:	and    BYTE PTR es:[rdi+0x49],bl
  41a9f6:	push   rbx
  41a9f7:	sub    DWORD PTR [rax],eax
  41a9f9:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  41a9fd:	gs cs push 0x0
	...
  41aa10:	push   0x5f787570
  41aa15:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  41aa19:	gs pop rdi
  41aa1b:	ins    DWORD PTR es:[rdi],dx
  41aa1c:	(bad)  
  41aa1d:	movsxd esi,DWORD PTR [rdx+0x6f]
  41aa20:	jae    0x41aa22
  41aa22:	add    BYTE PTR [rax],al
  41aa24:	add    BYTE PTR [rax],al
  41aa26:	add    BYTE PTR [rax],al
  41aa28:	jae    0x41aa6a
  41aa2a:	pop    rsi
  41aa2b:	pop    rbx
  41aa2c:	and    BYTE PTR [rcx],cl
  41aa2e:	pop    rbp
  41aa2f:	sub    ah,BYTE PTR [rbx]
  41aa31:	pop    rbx
  41aa32:	and    BYTE PTR [rcx],cl
  41aa34:	pop    rbp
  41aa35:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41aa39:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41aa40:	sub    cl,BYTE PTR [rcx+0x4e]
  41aa43:	push   rsp
  41aa44:	cmp    BYTE PTR [rdi+0x43],bl
  41aa47:	sub    BYTE PTR [rdi+0x5f],bl
  41aa4a:	movsxd ebp,DWORD PTR [rcx]
  41aa4c:	pop    rbx
  41aa4d:	and    BYTE PTR [rcx],cl
  41aa4f:	pop    rbp
  41aa50:	sub    ch,BYTE PTR [rax]
  41aa52:	sub    BYTE PTR [rbx+0x69],dh
  41aa55:	outs   dx,BYTE PTR ds:[esi]
  41aa57:	gs and BYTE PTR fs:[rbx+0x68],ah
  41aa5c:	(bad)  
  41aa5d:	jb     0x41aa88
  41aa5f:	sub    BYTE PTR [rdi+0x5f],bl
  41aa62:	movsxd ebp,DWORD PTR [rcx]
  41aa64:	sub    DWORD PTR [rbx+0x20],ebx
  41aa67:	or     DWORD PTR [rbp+0x2a],ebx
  41aa6a:	and    al,0x40
  41aa6c:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41aa70:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  41aa77:	cmp    BYTE PTR [rdi+0x43],bl
  41aa7a:	sub    BYTE PTR [rdi+0x5f],bl
  41aa7d:	movsxd ebp,DWORD PTR [rcx]
  41aa7f:	and    BYTE PTR [rax],ch
  41aa81:	pop    rdi
  41aa82:	pop    rdi
  41aa83:	movsxd ebp,DWORD PTR [rcx]
  41aa85:	add    BYTE PTR [rax],al
  41aa88:	jae    0x41aaca
  41aa8a:	pop    rsi
  41aa8b:	pop    rbx
  41aa8c:	and    BYTE PTR [rcx],cl
  41aa8e:	pop    rbp
  41aa8f:	sub    ah,BYTE PTR [rbx]
  41aa91:	pop    rbx
  41aa92:	and    BYTE PTR [rcx],cl
  41aa94:	pop    rbp
  41aa95:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41aa99:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41aaa0:	sub    dl,BYTE PTR [rbp+0x49]
  41aaa3:	rex.WRX push rsp
  41aaa5:	cmp    BYTE PTR [rdi+0x43],bl
  41aaa8:	sub    BYTE PTR [rdi+0x5f],bl
  41aaab:	movsxd ebp,DWORD PTR [rcx]
  41aaad:	pop    rbx
  41aaae:	and    BYTE PTR [rcx],cl
  41aab0:	pop    rbp
  41aab1:	sub    ch,BYTE PTR [rax]
  41aab3:	sub    BYTE PTR [rbp+0x6e],dh
  41aab6:	jae    0x41ab21
  41aab8:	outs   dx,BYTE PTR ds:[esi]
  41aaba:	gs and BYTE PTR fs:[rbx+0x68],ah
  41aabf:	(bad)  
  41aac0:	jb     0x41aaeb
  41aac2:	sub    BYTE PTR [rdi+0x5f],bl
  41aac5:	movsxd ebp,DWORD PTR [rcx]
  41aac7:	sub    DWORD PTR [rbx+0x20],ebx
  41aaca:	or     DWORD PTR [rbp+0x2a],ebx
  41aacd:	and    al,0x40
  41aacf:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41aad3:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41aada:	push   rsp
  41aadb:	cmp    BYTE PTR [rdi+0x43],bl
  41aade:	sub    BYTE PTR [rdi+0x5f],bl
  41aae1:	movsxd ebp,DWORD PTR [rcx]
  41aae3:	and    BYTE PTR [rax],ch
  41aae5:	pop    rdi
  41aae6:	pop    rdi
  41aae7:	movsxd ebp,DWORD PTR [rcx]
  41aae9:	add    BYTE PTR [rax],al
  41aaec:	add    BYTE PTR [rax],al
  41aaee:	add    BYTE PTR [rax],al
  41aaf0:	jae    0x41ab32
  41aaf2:	pop    rsi
  41aaf3:	pop    rbx
  41aaf4:	and    BYTE PTR [rcx],cl
  41aaf6:	pop    rbp
  41aaf7:	sub    ah,BYTE PTR [rbx]
  41aaf9:	pop    rbx
  41aafa:	and    BYTE PTR [rcx],cl
  41aafc:	pop    rbp
  41aafd:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41ab01:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41ab08:	sub    cl,BYTE PTR [rcx+0x4e]
  41ab0b:	push   rsp
  41ab0c:	xor    DWORD PTR [rsi],esi
  41ab0e:	pop    rdi
  41ab0f:	rex.XB sub BYTE PTR [r15+0x5f],bl
  41ab13:	movsxd ebp,DWORD PTR [rcx]
  41ab15:	pop    rbx
  41ab16:	and    BYTE PTR [rcx],cl
  41ab18:	pop    rbp
  41ab19:	sub    ch,BYTE PTR [rax]
  41ab1b:	sub    BYTE PTR [rbx+0x68],dh
  41ab1e:	outs   dx,DWORD PTR ds:[rsi]
  41ab1f:	jb     0x41ab95
  41ab21:	sub    DWORD PTR [rax],ebp
  41ab23:	pop    rdi
  41ab24:	pop    rdi
  41ab25:	movsxd ebp,DWORD PTR [rcx]
  41ab27:	sub    DWORD PTR [rbx+0x20],ebx
  41ab2a:	or     DWORD PTR [rbp+0x2a],ebx
  41ab2d:	and    al,0x40
  41ab2f:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41ab33:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  41ab3a:	xor    DWORD PTR [rsi],esi
  41ab3c:	pop    rdi
  41ab3d:	rex.XB sub BYTE PTR [r15+0x5f],bl
  41ab41:	movsxd ebp,DWORD PTR [rcx]
  41ab43:	and    BYTE PTR [rax],ch
  41ab45:	pop    rdi
  41ab46:	pop    rdi
  41ab47:	movsxd ebp,DWORD PTR [rcx]
  41ab49:	add    BYTE PTR [rax],al
  41ab4c:	add    BYTE PTR [rax],al
  41ab4e:	add    BYTE PTR [rax],al
  41ab50:	jae    0x41ab92
  41ab52:	pop    rsi
  41ab53:	pop    rbx
  41ab54:	and    BYTE PTR [rcx],cl
  41ab56:	pop    rbp
  41ab57:	sub    ah,BYTE PTR [rbx]
  41ab59:	pop    rbx
  41ab5a:	and    BYTE PTR [rcx],cl
  41ab5c:	pop    rbp
  41ab5d:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41ab61:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41ab68:	sub    dl,BYTE PTR [rbp+0x49]
  41ab6b:	rex.WRX push rsp
  41ab6d:	xor    DWORD PTR [rsi],esi
  41ab6f:	pop    rdi
  41ab70:	rex.XB sub BYTE PTR [r15+0x5f],bl
  41ab74:	movsxd ebp,DWORD PTR [rcx]
  41ab76:	pop    rbx
  41ab77:	and    BYTE PTR [rcx],cl
  41ab79:	pop    rbp
  41ab7a:	sub    ch,BYTE PTR [rax]
  41ab7c:	sub    BYTE PTR [rbp+0x6e],dh
  41ab7f:	jae    0x41abea
  41ab81:	outs   dx,BYTE PTR ds:[esi]
  41ab83:	gs and BYTE PTR fs:[rbx+0x68],dh
  41ab88:	outs   dx,DWORD PTR ds:[rsi]
  41ab89:	jb     0x41abff
  41ab8b:	sub    DWORD PTR [rax],ebp
  41ab8d:	pop    rdi
  41ab8e:	pop    rdi
  41ab8f:	movsxd ebp,DWORD PTR [rcx]
  41ab91:	sub    DWORD PTR [rbx+0x20],ebx
  41ab94:	or     DWORD PTR [rbp+0x2a],ebx
  41ab97:	and    al,0x40
  41ab99:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41ab9d:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41aba4:	push   rsp
  41aba5:	xor    DWORD PTR [rsi],esi
  41aba7:	pop    rdi
  41aba8:	rex.XB sub BYTE PTR [r15+0x5f],bl
  41abac:	movsxd ebp,DWORD PTR [rcx]
  41abae:	and    BYTE PTR [rax],ch
  41abb0:	pop    rdi
  41abb1:	pop    rdi
  41abb2:	movsxd ebp,DWORD PTR [rcx]
  41abb4:	add    BYTE PTR [rax],al
	...
  41abbf:	add    BYTE PTR [rbx+0x74],dh
  41abc2:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x7570682d
  41abca:	js     0x41abfd
  41abcc:	xor    DWORD PTR [rsi],ebp
  41abce:	push   0x64747300
  41abd3:	imul   ebp,DWORD PTR [rsi+0x74],0x682e
  41abda:	add    BYTE PTR [rax],al
  41abdc:	add    BYTE PTR [rax],al
  41abde:	add    BYTE PTR [rax],al
  41abe0:	push   0x5f787570
  41abe5:	movsxd edi,DWORD PTR [rcx]
  41abe7:	cmp    DWORD PTR [rdi+0x69],ebx
  41abea:	outs   dx,BYTE PTR ds:[rsi]
  41abeb:	je     0x41ac61
  41abed:	jns    0x41ac5f
  41abef:	gs jae 0x41ac24
  41abf2:	add    BYTE PTR [rax],al
  41abf4:	add    BYTE PTR [rax],al
  41abf6:	add    BYTE PTR [rax],al
  41abf8:	jae    0x41ac3a
  41abfa:	pop    rsi
  41abfb:	pop    rbx
  41abfc:	and    BYTE PTR [rcx],cl
  41abfe:	pop    rbp
  41abff:	sub    ah,BYTE PTR [rbx]
  41ac01:	pop    rbx
  41ac02:	and    BYTE PTR [rcx],cl
  41ac04:	pop    rbp
  41ac05:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41ac09:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41ac10:	sub    dl,BYTE PTR [rbp+0x49]
  41ac13:	rex.WRX push rsp
  41ac15:	cmp    BYTE PTR [rdi+0x43],bl
  41ac18:	sub    BYTE PTR [rdi+0x5f],bl
  41ac1b:	movsxd ebp,DWORD PTR [rcx]
  41ac1d:	pop    rbx
  41ac1e:	and    BYTE PTR [rcx],cl
  41ac20:	pop    rbp
  41ac21:	sub    bl,BYTE PTR [rdi+0x5f]
  41ac24:	rex.XB
  41ac25:	rex.WRXB
  41ac26:	rex.WRX
  41ac27:	rex.XB
  41ac28:	push   r12
  41ac2a:	pop    rdi
  41ac2b:	push   rbp
  41ac2c:	pop    rdi
  41ac2d:	pop    rdi
  41ac2e:	sub    BYTE PTR [rdi+0x5f],bl
  41ac31:	movsxd ebp,DWORD PTR [rcx]
  41ac33:	pop    rbx
  41ac34:	and    BYTE PTR [rcx],cl
  41ac36:	pop    rbp
  41ac37:	sub    ah,BYTE PTR [rax+rax*2]
  41ac3a:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41ac3e:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41ac45:	push   rsp
  41ac46:	cmp    BYTE PTR [rdi+0x43],bl
  41ac49:	sub    BYTE PTR [rdi+0x5f],bl
  41ac4c:	movsxd ebp,DWORD PTR [rcx]
  41ac4e:	and    BYTE PTR [rax],ch
  41ac50:	pop    rdi
  41ac51:	pop    rdi
  41ac52:	movsxd ebp,DWORD PTR [rcx]
  41ac54:	add    BYTE PTR [rax],al
  41ac57:	add    BYTE PTR [rbx+0x40],dh
  41ac5a:	pop    rsi
  41ac5b:	pop    rbx
  41ac5c:	and    BYTE PTR [rcx],cl
  41ac5e:	pop    rbp
  41ac5f:	sub    ah,BYTE PTR [rbx]
  41ac61:	pop    rbx
  41ac62:	and    BYTE PTR [rcx],cl
  41ac64:	pop    rbp
  41ac65:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41ac69:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41ac70:	sub    dl,BYTE PTR [rbp+0x49]
  41ac73:	rex.WRX push rsp
  41ac75:	xor    DWORD PTR [rsi],esi
  41ac77:	pop    rdi
  41ac78:	rex.XB sub BYTE PTR [r15+0x5f],bl
  41ac7c:	movsxd ebp,DWORD PTR [rcx]
  41ac7e:	pop    rbx
  41ac7f:	and    BYTE PTR [rcx],cl
  41ac81:	pop    rbp
  41ac82:	sub    bl,BYTE PTR [rdi+0x5f]
  41ac85:	rex.XB
  41ac86:	rex.WRXB
  41ac87:	rex.WRX
  41ac88:	rex.XB
  41ac89:	push   r12
  41ac8b:	pop    rdi
  41ac8c:	push   rbp
  41ac8d:	pop    rdi
  41ac8e:	pop    rdi
  41ac8f:	sub    BYTE PTR [rdi+0x5f],bl
  41ac92:	movsxd ebp,DWORD PTR [rcx]
  41ac94:	pop    rbx
  41ac95:	and    BYTE PTR [rcx],cl
  41ac97:	pop    rbp
  41ac98:	sub    ah,BYTE PTR [rax+rax*2]
  41ac9b:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41ac9f:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41aca6:	push   rsp
  41aca7:	xor    DWORD PTR [rsi],esi
  41aca9:	pop    rdi
  41acaa:	rex.XB sub BYTE PTR [r15+0x5f],bl
  41acae:	movsxd ebp,DWORD PTR [rcx]
  41acb0:	and    BYTE PTR [rax],ch
  41acb2:	pop    rdi
  41acb3:	pop    rdi
  41acb4:	movsxd ebp,DWORD PTR [rcx]
  41acb6:	add    BYTE PTR [rbx+0x40],sil
  41acba:	pop    rsi
  41acbb:	pop    rbx
  41acbc:	and    BYTE PTR [rcx],cl
  41acbe:	pop    rbp
  41acbf:	sub    ah,BYTE PTR [rbx]
  41acc1:	pop    rbx
  41acc2:	and    BYTE PTR [rcx],cl
  41acc4:	pop    rbp
  41acc5:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41acc9:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41acd0:	sub    cl,BYTE PTR [rcx+0x4e]
  41acd3:	push   rsp
  41acd4:	xor    esi,DWORD PTR [rdx]
  41acd6:	pop    rdi
  41acd7:	rex.XB sub BYTE PTR [r15+0x5f],bl
  41acdb:	movsxd ebp,DWORD PTR [rcx]
  41acdd:	pop    rbx
  41acde:	and    BYTE PTR [rcx],cl
  41ace0:	pop    rbp
  41ace1:	sub    bl,BYTE PTR [rdi+0x5f]
  41ace4:	rex.XB
  41ace5:	rex.WRXB
  41ace6:	rex.WRX
  41ace7:	rex.XB
  41ace8:	push   r12
  41acea:	pop    rdi
  41aceb:	pop    rdi
  41acec:	sub    BYTE PTR [rdi+0x5f],bl
  41acef:	movsxd ebp,DWORD PTR [rsp+rbp*2]
  41acf2:	sub    DWORD PTR [rbx+0x20],ebx
  41acf5:	or     DWORD PTR [rbp+0x2a],ebx
  41acf8:	and    al,0x40
  41acfa:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41acfe:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  41ad05:	xor    esi,DWORD PTR [rdx]
  41ad07:	pop    rdi
  41ad08:	rex.XB sub BYTE PTR [r15+0x5f],bl
  41ad0c:	movsxd ebp,DWORD PTR [rcx]
  41ad0e:	and    BYTE PTR [rax],ch
  41ad10:	pop    rdi
  41ad11:	pop    rdi
  41ad12:	movsxd ebp,DWORD PTR [rcx]
  41ad14:	add    BYTE PTR [rax],al
  41ad17:	add    BYTE PTR [rbx+0x40],dh
  41ad1a:	pop    rsi
  41ad1b:	pop    rbx
  41ad1c:	and    BYTE PTR [rcx],cl
  41ad1e:	pop    rbp
  41ad1f:	sub    ah,BYTE PTR [rbx]
  41ad21:	pop    rbx
  41ad22:	and    BYTE PTR [rcx],cl
  41ad24:	pop    rbp
  41ad25:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41ad29:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41ad30:	sub    dl,BYTE PTR [rbp+0x49]
  41ad33:	rex.WRX push rsp
  41ad35:	xor    esi,DWORD PTR [rdx]
  41ad37:	pop    rdi
  41ad38:	rex.XB sub BYTE PTR [r15+0x5f],bl
  41ad3c:	movsxd ebp,DWORD PTR [rcx]
  41ad3e:	pop    rbx
  41ad3f:	and    BYTE PTR [rcx],cl
  41ad41:	pop    rbp
  41ad42:	sub    ah,BYTE PTR cs:[rax+rax*2]
  41ad46:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41ad4a:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41ad51:	push   rsp
  41ad52:	xor    esi,DWORD PTR [rdx]
  41ad54:	pop    rdi
  41ad55:	rex.XB sub BYTE PTR [r15+0x5f],bl
  41ad59:	movsxd ebp,DWORD PTR [rcx]
  41ad5b:	and    BYTE PTR [rdi+0x5f],bl
  41ad5e:	rex.XB
  41ad5f:	rex.WRXB
  41ad60:	rex.WRX
  41ad61:	rex.XB
  41ad62:	push   r12
  41ad64:	pop    rdi
  41ad65:	pop    rdi
  41ad66:	sub    BYTE PTR [rdi+0x5f],bl
  41ad69:	movsxd ebp,DWORD PTR [rsi*2+0x2a004029]
  41ad70:	sub    eax,0x682d7068
  41ad75:	jo     0x41adec
  41ad77:	js     0x41adaa
  41ad79:	xor    DWORD PTR [rsi],ebp
  41ad7b:	pop    rbx
  41ad7c:	xor    dh,BYTE PTR [rbx]
  41ad7e:	pop    rbp
  41ad7f:	sub    al,BYTE PTR [rax]
	...
  41ad9d:	add    BYTE PTR [rax],al
  41ad9f:	add    BYTE PTR [rcx+0x6e],ch
  41ada2:	je     0x41ae18
  41ada4:	jns    0x41ae16
  41ada6:	gs jae 0x41add7
  41ada9:	push   0x64747300
  41adae:	imul   ebp,DWORD PTR [rsi+0x74],0x7570682d
  41adb5:	js     0x41ade8
  41adb7:	xor    DWORD PTR [rsi],ebp
  41adb9:	push   0x64747300
  41adbe:	imul   ebp,DWORD PTR [rsi+0x74],0x682e
	...
  41adcd:	add    BYTE PTR [rax],al
  41adcf:	add    BYTE PTR [rax+0x70],ch
  41add2:	jne    0x41ae4c
  41add4:	pop    rdi
  41add5:	movsxd edi,DWORD PTR [rcx]
  41add7:	cmp    DWORD PTR [rdi+0x69],ebx
  41adda:	outs   dx,BYTE PTR ds:[rsi]
  41addb:	je     0x41ae51
  41addd:	jns    0x41ae4f
  41addf:	gs jae 0x41ade2
  41ade2:	add    BYTE PTR [rax],al
  41ade4:	add    BYTE PTR [rax],al
  41ade6:	add    BYTE PTR [rax],al
  41ade8:	jae    0x41ae2a
  41adea:	pop    rsi
  41adeb:	pop    rbx
  41adec:	and    BYTE PTR [rcx],cl
  41adee:	pop    rbp
  41adef:	sub    ah,BYTE PTR [rbx]
  41adf1:	pop    rbx
  41adf2:	and    BYTE PTR [rcx],cl
  41adf4:	pop    rbp
  41adf5:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41adf9:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41ae00:	sub    dl,BYTE PTR [rax+0x54]
  41ae03:	push   rdx
  41ae04:	rex.R
  41ae05:	rex.WB
  41ae06:	rex.RX
  41ae07:	rex.RX pop rdi
  41ae09:	rex.WRB
  41ae0a:	pop    r8
  41ae0c:	pop    rbx
  41ae0d:	and    BYTE PTR [rcx],cl
  41ae0f:	pop    rbp
  41ae10:	sub    cl,BYTE PTR [rcx+0x4e]
  41ae13:	push   rsp
  41ae14:	xor    esi,DWORD PTR [rdx]
  41ae16:	pop    rdi
  41ae17:	rex.WRB
  41ae18:	pop    r8
  41ae1a:	pop    rbx
  41ae1b:	and    BYTE PTR [rcx],cl
  41ae1d:	pop    rbp
  41ae1e:	sub    ah,BYTE PTR [rax+rax*2]
  41ae21:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41ae25:	imul   ebp,DWORD PTR [rsi+0x65],0x52545020
  41ae2c:	rex.R
  41ae2d:	rex.WB
  41ae2e:	rex.RX
  41ae2f:	rex.RX pop rdi
  41ae31:	rex.WRB
  41ae32:	pop    r8
  41ae34:	and    BYTE PTR [rax],ch
  41ae36:	xor    dh,BYTE PTR [rcx]
  41ae38:	xor    al,0x37
  41ae3a:	xor    al,0x38
  41ae3c:	xor    esi,DWORD PTR [rsi]
  41ae3e:	xor    al,0x37
  41ae40:	ins    BYTE PTR es:[rdi],dx
  41ae41:	sub    DWORD PTR [rax+0x0],eax
  41ae44:	add    BYTE PTR [rax],al
  41ae46:	add    BYTE PTR [rax],al
  41ae48:	jae    0x41ae8a
  41ae4a:	pop    rsi
  41ae4b:	pop    rbx
  41ae4c:	and    BYTE PTR [rcx],cl
  41ae4e:	pop    rbp
  41ae4f:	sub    ah,BYTE PTR [rbx]
  41ae51:	pop    rbx
  41ae52:	and    BYTE PTR [rcx],cl
  41ae54:	pop    rbp
  41ae55:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41ae59:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41ae60:	sub    dl,BYTE PTR [rax+0x54]
  41ae63:	push   rdx
  41ae64:	rex.R
  41ae65:	rex.WB
  41ae66:	rex.RX
  41ae67:	rex.RX pop rdi
  41ae69:	rex.WRB
  41ae6a:	rex.WB
  41ae6b:	rex.WRX pop rbx
  41ae6d:	and    BYTE PTR [rcx],cl
  41ae6f:	pop    rbp
  41ae70:	sub    cl,BYTE PTR [rcx+0x4e]
  41ae73:	push   rsp
  41ae74:	xor    esi,DWORD PTR [rdx]
  41ae76:	pop    rdi
  41ae77:	rex.WRB
  41ae78:	rex.WB
  41ae79:	rex.WRX pop rbx
  41ae7b:	and    BYTE PTR [rcx],cl
  41ae7d:	pop    rbp
  41ae7e:	sub    ah,BYTE PTR [rax+rax*2]
  41ae81:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41ae85:	imul   ebp,DWORD PTR [rsi+0x65],0x52545020
  41ae8c:	rex.R
  41ae8d:	rex.WB
  41ae8e:	rex.RX
  41ae8f:	rex.RX pop rdi
  41ae91:	rex.WRB
  41ae92:	rex.WB
  41ae93:	rex.WRX and BYTE PTR [rax],r13b
  41ae96:	sub    eax,0x44525450
  41ae9b:	rex.WB
  41ae9c:	rex.RX
  41ae9d:	rex.RX pop rdi
  41ae9f:	rex.WRB
  41aea0:	pop    r8
  41aea2:	and    BYTE PTR [rip+0x40293120],ch        # 0x406adfc8
	...
  41aeb0:	jae    0x41aef2
  41aeb2:	pop    rsi
  41aeb3:	pop    rbx
  41aeb4:	and    BYTE PTR [rcx],cl
  41aeb6:	pop    rbp
  41aeb7:	sub    ah,BYTE PTR [rbx]
  41aeb9:	pop    rbx
  41aeba:	and    BYTE PTR [rcx],cl
  41aebc:	pop    rbp
  41aebd:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41aec1:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41aec8:	sub    cl,BYTE PTR [rcx+0x4e]
  41aecb:	push   rsp
  41aecc:	push   rax
  41aecd:	push   rsp
  41aece:	push   rdx
  41aecf:	pop    rdi
  41aed0:	rex.WRB
  41aed1:	pop    r8
  41aed3:	pop    rbx
  41aed4:	and    BYTE PTR [rcx],cl
  41aed6:	pop    rbp
  41aed7:	sub    cl,BYTE PTR [rcx+0x4e]
  41aeda:	push   rsp
  41aedb:	xor    esi,DWORD PTR [rdx]
  41aedd:	pop    rdi
  41aede:	rex.WRB
  41aedf:	pop    r8
  41aee1:	pop    rbx
  41aee2:	and    BYTE PTR [rcx],cl
  41aee4:	pop    rbp
  41aee5:	sub    ah,BYTE PTR [rax+rax*2]
  41aee8:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41aeec:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  41aef3:	push   rax
  41aef4:	push   rsp
  41aef5:	push   rdx
  41aef6:	pop    rdi
  41aef7:	rex.WRB
  41aef8:	pop    r8
  41aefa:	and    BYTE PTR [rax],ch
  41aefc:	xor    dh,BYTE PTR [rcx]
  41aefe:	xor    al,0x37
  41af00:	xor    al,0x38
  41af02:	xor    esi,DWORD PTR [rsi]
  41af04:	xor    al,0x37
  41af06:	ins    BYTE PTR es:[rdi],dx
  41af07:	sub    DWORD PTR [rax+0x0],eax
  41af0a:	add    BYTE PTR [rax],al
  41af0c:	add    BYTE PTR [rax],al
  41af0e:	add    BYTE PTR [rax],al
  41af10:	jae    0x41af52
  41af12:	pop    rsi
  41af13:	pop    rbx
  41af14:	and    BYTE PTR [rcx],cl
  41af16:	pop    rbp
  41af17:	sub    ah,BYTE PTR [rbx]
  41af19:	pop    rbx
  41af1a:	and    BYTE PTR [rcx],cl
  41af1c:	pop    rbp
  41af1d:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41af21:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41af28:	sub    cl,BYTE PTR [rcx+0x4e]
  41af2b:	push   rsp
  41af2c:	push   rax
  41af2d:	push   rsp
  41af2e:	push   rdx
  41af2f:	pop    rdi
  41af30:	rex.WRB
  41af31:	rex.WB
  41af32:	rex.WRX pop rbx
  41af34:	and    BYTE PTR [rcx],cl
  41af36:	pop    rbp
  41af37:	sub    cl,BYTE PTR [rcx+0x4e]
  41af3a:	push   rsp
  41af3b:	xor    esi,DWORD PTR [rdx]
  41af3d:	pop    rdi
  41af3e:	rex.WRB
  41af3f:	rex.WB
  41af40:	rex.WRX pop rbx
  41af42:	and    BYTE PTR [rcx],cl
  41af44:	pop    rbp
  41af45:	sub    ah,BYTE PTR [rax+rax*2]
  41af48:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41af4c:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  41af53:	push   rax
  41af54:	push   rsp
  41af55:	push   rdx
  41af56:	pop    rdi
  41af57:	rex.WRB
  41af58:	rex.WB
  41af59:	rex.WRX and BYTE PTR [rax],r13b
  41af5c:	sub    eax,0x50544e49
  41af61:	push   rsp
  41af62:	push   rdx
  41af63:	pop    rdi
  41af64:	rex.WRB
  41af65:	pop    r8
  41af67:	and    BYTE PTR [rip+0x40293120],ch        # 0x406ae08d
  41af6d:	add    BYTE PTR [rax],al
  41af6f:	add    BYTE PTR [rbx+0x40],dh
  41af72:	pop    rsi
  41af73:	pop    rbx
  41af74:	and    BYTE PTR [rcx],cl
  41af76:	pop    rbp
  41af77:	sub    ah,BYTE PTR [rbx]
  41af79:	pop    rbx
  41af7a:	and    BYTE PTR [rcx],cl
  41af7c:	pop    rbp
  41af7d:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41af81:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41af88:	sub    dl,BYTE PTR [rbp+0x49]
  41af8b:	rex.WRX push rsp
  41af8d:	push   rax
  41af8e:	push   rsp
  41af8f:	push   rdx
  41af90:	pop    rdi
  41af91:	rex.WRB
  41af92:	pop    r8
  41af94:	pop    rbx
  41af95:	and    BYTE PTR [rcx],cl
  41af97:	pop    rbp
  41af98:	sub    dl,BYTE PTR [rbp+0x49]
  41af9b:	rex.WRX push rsp
  41af9d:	xor    esi,DWORD PTR [rdx]
  41af9f:	pop    rdi
  41afa0:	rex.WRB
  41afa1:	pop    r8
  41afa3:	pop    rbx
  41afa4:	and    BYTE PTR [rcx],cl
  41afa6:	pop    rbp
  41afa7:	sub    ah,BYTE PTR [rax+rax*2]
  41afaa:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41afae:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41afb5:	push   rsp
  41afb6:	push   rax
  41afb7:	push   rsp
  41afb8:	push   rdx
  41afb9:	pop    rdi
  41afba:	rex.WRB
  41afbb:	pop    r8
  41afbd:	and    BYTE PTR [rax],ch
  41afbf:	xor    al,0x32
  41afc1:	cmp    DWORD PTR [rcx+rdi*1],esi
  41afc4:	ss (bad) 
  41afc6:	xor    bh,BYTE PTR [rcx]
  41afc8:	xor    eax,0x40296c75
  41afcd:	add    BYTE PTR [rax],al
  41afcf:	add    BYTE PTR [rbx+0x40],dh
  41afd2:	pop    rsi
  41afd3:	pop    rbx
  41afd4:	and    BYTE PTR [rcx],cl
  41afd6:	pop    rbp
  41afd7:	sub    ah,BYTE PTR [rbx]
  41afd9:	pop    rbx
  41afda:	and    BYTE PTR [rcx],cl
  41afdc:	pop    rbp
  41afdd:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41afe1:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41afe8:	sub    dl,BYTE PTR [rbx+0x49]
  41afeb:	pop    rdx
  41afec:	rex.RB pop r15
  41afee:	rex.WRB
  41afef:	pop    r8
  41aff1:	pop    rbx
  41aff2:	and    BYTE PTR [rcx],cl
  41aff4:	pop    rbp
  41aff5:	sub    dl,BYTE PTR [rbp+0x49]
  41aff8:	rex.WRX push rsp
  41affa:	xor    esi,DWORD PTR [rdx]
  41affc:	pop    rdi
  41affd:	rex.WRB
  41affe:	pop    r8
  41b000:	pop    rbx
  41b001:	and    BYTE PTR [rcx],cl
  41b003:	pop    rbp
  41b004:	sub    ah,BYTE PTR [rax+rax*2]
  41b007:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41b00b:	imul   ebp,DWORD PTR [rsi+0x65],0x5a495320
  41b012:	rex.RB pop r15
  41b014:	rex.WRB
  41b015:	pop    r8
  41b017:	and    BYTE PTR [rax],ch
  41b019:	xor    al,0x32
  41b01b:	cmp    DWORD PTR [rcx+rdi*1],esi
  41b01e:	ss (bad) 
  41b020:	xor    bh,BYTE PTR [rcx]
  41b022:	xor    eax,0x40296c75
  41b027:	add    BYTE PTR [rdx],ch
  41b029:	sub    eax,0x682d7068
  41b02e:	jo     0x41b0a5
  41b030:	js     0x41b063
  41b032:	xor    DWORD PTR [rsi],ebp
  41b034:	xor    ebp,DWORD PTR [rdx]
	...
  41b03e:	add    BYTE PTR [rax],al
  41b040:	jae    0x41b0b6
  41b042:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x7570682d
  41b04a:	js     0x41b07d
  41b04c:	xor    DWORD PTR [rsi],ebp
  41b04e:	push   0x64747300
  41b053:	imul   ebp,DWORD PTR [rsi+0x74],0x682e
  41b05a:	add    BYTE PTR [rax],al
  41b05c:	add    BYTE PTR [rax],al
  41b05e:	add    BYTE PTR [rax],al
  41b060:	push   0x5f787570
  41b065:	movsxd edi,DWORD PTR [rcx]
  41b067:	cmp    DWORD PTR [rdi+0x69],ebx
  41b06a:	outs   dx,BYTE PTR ds:[rsi]
  41b06b:	je     0x41b0dd
  41b06d:	je     0x41b0e1
  41b06f:	add    BYTE PTR [rbx+0x40],dh
  41b072:	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
  41b079:	imul   ebp,DWORD PTR [rsi+0x74],0x73626120
  41b080:	sub    BYTE PTR [rcx+0x6e],ch
  41b083:	je     0x41b0a5
  41b085:	pop    rbx
  41b086:	(bad)  
  41b087:	sub    eax,0x615b5d7a
  41b08c:	sub    eax,0x292a5d7a
  41b091:	and    BYTE PTR [rbx+0x2e],bh
  41b094:	sub    bh,BYTE PTR [rbp+0x40]
  41b097:	gs js  0x41b10e
  41b09a:	gs jb  0x41b10b
  41b09d:	and    BYTE PTR [rdx],ah
  41b09f:	rex.XB and spl,BYTE PTR [r8]
  41b0a2:	imul   ebp,DWORD PTR [rsi+0x74],0x73626120
  41b0a9:	sub    BYTE PTR [rcx+0x6e],ch
  41b0ac:	je     0x41b0d7
  41b0ae:	cmp    eax,DWORD PTR [rax+0x0]
  41b0b1:	add    BYTE PTR [rax],al
  41b0b3:	add    BYTE PTR [rax],al
  41b0b5:	add    BYTE PTR [rax],al
  41b0b7:	add    BYTE PTR [rbx+0x40],dh
  41b0ba:	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
  41b0c1:	outs   dx,DWORD PTR fs:[rsi]
  41b0c3:	jne    0x41b127
  41b0c5:	ins    BYTE PTR es:[rdi],dx
  41b0c6:	and    BYTE PTR gs:[rcx+0x62],ah
  41b0ca:	jae    0x41b0f4
  41b0cc:	outs   dx,DWORD PTR fs:[rsi]
  41b0ce:	jne    0x41b132
  41b0d0:	ins    BYTE PTR es:[rdi],dx
  41b0d1:	and    BYTE PTR gs:[rbx+0x61],bl
  41b0d5:	sub    eax,0x615b5d7a
  41b0da:	sub    eax,0x292a5d7a
  41b0df:	and    BYTE PTR [rbx+0x2e],bh
  41b0e2:	sub    bh,BYTE PTR [rbp+0x40]
  41b0e5:	add    BYTE PTR [rax],al
  41b0e8:	jae    0x41b12a
  41b0ea:	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
  41b0f1:	imul   ebp,DWORD PTR [rsi+0x74],0x72717320
  41b0f8:	sub    BYTE PTR [rcx+0x6e],ch
  41b0fb:	je     0x41b11d
  41b0fd:	pop    rbx
  41b0fe:	(bad)  
  41b0ff:	sub    eax,0x615b5d7a
  41b104:	sub    eax,0x292a5d7a
  41b109:	and    BYTE PTR [rbx+0x2e],bh
  41b10c:	sub    bh,BYTE PTR [rbp+0x40]
  41b10f:	add    BYTE PTR [rax],al
  41b112:	add    BYTE PTR [rax],al
  41b114:	add    BYTE PTR [rax],al
  41b116:	add    BYTE PTR [rax],al
  41b118:	jae    0x41b15a
  41b11a:	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
  41b121:	outs   dx,DWORD PTR fs:[rsi]
  41b123:	jne    0x41b187
  41b125:	ins    BYTE PTR es:[rdi],dx
  41b126:	and    BYTE PTR gs:[rbx+0x71],dh
  41b12a:	jb     0x41b154
  41b12c:	outs   dx,DWORD PTR fs:[rsi]
  41b12e:	jne    0x41b192
  41b130:	ins    BYTE PTR es:[rdi],dx
  41b131:	and    BYTE PTR gs:[rbx+0x61],bl
  41b135:	sub    eax,0x615b5d7a
  41b13a:	sub    eax,0x292a5d7a
  41b13f:	and    BYTE PTR [rbx+0x2e],bh
  41b142:	sub    bh,BYTE PTR [rbp+0x40]
  41b145:	add    BYTE PTR [rdi+0x5f],bl
  41b149:	rex.RXB
  41b14a:	rex.WRX push rbp
  41b14c:	rex.RXB pop r15
  41b14e:	pop    rdi
  41b14f:	add    BYTE PTR [rcx+0x6e],ch
  41b152:	ins    BYTE PTR es:[rdi],dx
  41b153:	imul   ebp,DWORD PTR [rsi+0x65],0x74616d00
  41b15a:	push   0x682e
  41b15f:	add    BYTE PTR [rax+0x70],ch
  41b162:	jne    0x41b1dc
  41b164:	cmp    BYTE PTR [rdi+0x62],bl
  41b167:	outs   dx,DWORD PTR ds:[rsi]
  41b168:	addr32 jne 0x41b1de
  41b16b:	pop    rdi
  41b16c:	imul   ebp,DWORD PTR [rsi+0x6c],0x73656e69
  41b173:	add    BYTE PTR [rip+0x6e6f6331],ah        # 0x6eb114aa
  41b179:	jae    0x41b1ef
  41b17b:	and    BYTE PTR [rbx+0x68],ah
  41b17e:	(bad)  
  41b17f:	jb     0x41b181
	...
  41b18d:	add    BYTE PTR [rax],al
  41b18f:	add    BYTE PTR [rax],ch
  41b191:	gs js  0x41b208
  41b194:	gs jb  0x41b205
  41b197:	and    BYTE PTR [rcx+0x6e],ch
  41b19a:	je     0x41b1bc
  41b19c:	jbe    0x41b211
  41b19e:	jae    0x41b203
  41b1a0:	(bad)  
  41b1a1:	outs   dx,BYTE PTR ds:[rsi]
  41b1a2:	pop    sp
  41b1a4:	sub    BYTE PTR [rcx],ch
  41b1a6:	movsxd ebp,DWORD PTR [rax+0x61]
  41b1a9:	jb     0x41b1ab
  41b1ab:	sub    ch,BYTE PTR [rip+0x70682d2a]        # 0x70a9dedb
  41b1b1:	jne    0x41b22b
  41b1b3:	sub    al,BYTE PTR [rax]
  41b1b5:	jae    0x41b22b
  41b1b7:	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x68000068
  41b1bf:	jo     0x41b236
  41b1c1:	js     0x41b222
  41b1c3:	jbe    0x41b238
  41b1c5:	jae    0x41b22a
  41b1c7:	(bad)  
  41b1c8:	outs   dx,BYTE PTR ds:[rsi]
  41b1c9:	data16 add BYTE PTR [rip+0x5f5f2031],ah        # 0x5fa0d201
  41b1d0:	jbe    0x41b233
  41b1d2:	pop    rdi
  41b1d3:	ins    BYTE PTR es:[rdi],dx
  41b1d4:	imul   esi,DWORD PTR [rbx+0x74],0x3b29
	...
  41b1ff:	add    BYTE PTR [rax],ch
  41b201:	gs js  0x41b278
  41b204:	gs jb  0x41b275
  41b207:	and    BYTE PTR [rcx+0x6e],ch
  41b20a:	je     0x41b22c
  41b20c:	jbe    0x41b281
  41b20e:	outs   dx,BYTE PTR ds:[rsi]
  41b20f:	jo     0x41b283
  41b211:	imul   ebp,DWORD PTR [rsi+0x74],0x63285c66
  41b218:	push   0x5c207261
  41b21d:	sub    ch,BYTE PTR [rax+riz*1]
  41b220:	pop    rdi
  41b221:	pop    rbx
  41b222:	push   0x5d787570
  41b227:	sub    bl,BYTE PTR [rdi+0x73]
  41b22a:	imul   edi,DWORD PTR [rdx+0x65],0x202c745f
  41b231:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41b234:	jae    0x41b2aa
  41b236:	and    BYTE PTR [rbx+0x68],ah
  41b239:	(bad)  
  41b23a:	jb     0x41b25c
  41b23c:	pop    rsp
  41b23d:	sub    ch,BYTE PTR [rcx+rbp*1]
  41b240:	and    BYTE PTR [rdi+0x5f],bl
  41b243:	jbe    0x41b2a6
  41b245:	pop    rdi
  41b246:	pop    rdi
  41b247:	ins    BYTE PTR es:[rdi],dx
  41b248:	imul   esi,DWORD PTR [rbx+0x74],0x3b295c
  41b24f:	jae    0x41b2c5
  41b251:	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x68
  41b259:	add    BYTE PTR [rax],al
  41b25b:	add    BYTE PTR [rax],al
  41b25d:	add    BYTE PTR [rax],al
  41b25f:	add    BYTE PTR [rax+0x70],ch
  41b262:	jne    0x41b2dc
  41b264:	xor    DWORD PTR [rcx],esi
  41b266:	pop    rdi
  41b267:	jbe    0x41b2dc
  41b269:	outs   dx,BYTE PTR ds:[rsi]
  41b26a:	jo     0x41b2de
  41b26c:	imul   ebp,DWORD PTR [rsi+0x74],0x31250066
  41b273:	and    BYTE PTR [rbx+0x6f],ah
  41b276:	outs   dx,BYTE PTR ds:[rsi]
  41b277:	jae    0x41b2ed
  41b279:	and    BYTE PTR [rip+0x33],ah        # 0x41b2b2
  41b27f:	add    BYTE PTR [rax],ch
  41b281:	gs js  0x41b2f8
  41b284:	gs jb  0x41b2f5
  41b287:	and    BYTE PTR [rcx+0x6e],ch
  41b28a:	je     0x41b2ac
  41b28c:	jae    0x41b2fc
  41b28e:	jo     0x41b302
  41b290:	imul   ebp,DWORD PTR [rsi+0x74],0x5c2a2066
  41b297:	sub    BYTE PTR [rbx+0x68],ah
  41b29a:	(bad)  
  41b29b:	jb     0x41b2bd
  41b29d:	sub    bl,BYTE PTR [rdx+rbp*1+0x2c]
  41b2a1:	and    BYTE PTR [rdx],ch
  41b2a3:	sub    BYTE PTR [rdi+rbx*2+0x5f],bh
  41b2a7:	jl     0x41b308
  41b2a9:	push   0x5f787570
  41b2ae:	sub    DWORD PTR [rbx+0x69],esi
  41b2b1:	jp     0x41b318
  41b2b3:	pop    rdi
  41b2b4:	je     0x41b2e2
  41b2b6:	sub    DWORD PTR [rax],esp
  41b2b8:	sub    ch,BYTE PTR [rax]
  41b2ba:	movsxd ebp,DWORD PTR [rax+0x61]
  41b2bd:	jb     0x41b2df
  41b2bf:	sub    bl,BYTE PTR [rdx+rbp*1+0x2c]
  41b2c3:	and    BYTE PTR [rdx],ch
  41b2c5:	pop    rsp
  41b2c6:	cs pop rsp
  41b2c8:	cs pop rsp
  41b2ca:	cs pop rsp
  41b2cc:	sub    DWORD PTR [rbx],edi
  41b2ce:	sub    DWORD PTR [rax],eax
  41b2d0:	jae    0x41b346
  41b2d2:	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x68
  41b2da:	add    BYTE PTR [rax],al
  41b2dc:	add    BYTE PTR [rax],al
  41b2de:	add    BYTE PTR [rax],al
  41b2e0:	push   0x31787570
  41b2e5:	xor    DWORD PTR [rdi+0x73],ebx
  41b2e8:	outs   dx,BYTE PTR ds:[rsi]
  41b2e9:	jo     0x41b35d
  41b2eb:	imul   ebp,DWORD PTR [rsi+0x74],0x685f0066
  41b2f2:	jo     0x41b369
  41b2f4:	js     0x41b355
  41b2f6:	jae    0x41b361
  41b2f8:	jp     0x41b35f
  41b2fa:	pop    rdi
  41b2fb:	je     0x41b2fd
  41b2fd:	pop    rdi
  41b2fe:	pop    rdi
  41b2ff:	jae    0x41b36a
  41b301:	jp     0x41b368
  41b303:	pop    rdi
  41b304:	je     0x41b306
  41b306:	sub    ch,BYTE PTR [rip+0x682d7068]        # 0x686f2374
  41b30c:	jo     0x41b383
  41b30e:	js     0x41b341
  41b310:	xor    DWORD PTR [rdx],ebp
  41b312:	add    BYTE PTR [rax+0x70],ch
  41b315:	jne    0x41b38f
  41b317:	xor    DWORD PTR [rcx],esi
  41b319:	pop    rdi
  41b31a:	jae    0x41b385
  41b31c:	jp     0x41b383
  41b31e:	pop    rdi
  41b31f:	je     0x41b321
  41b321:	add    BYTE PTR [rax],al
  41b323:	add    BYTE PTR [rax],al
  41b325:	add    BYTE PTR [rax],al
  41b327:	add    BYTE PTR [rbx],ah
  41b329:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  41b331:	pop    rdi
  41b332:	push   rax
  41b333:	rex.WRXB
  41b334:	rex.WB
  41b335:	rex.WRX push rsp
  41b337:	rex.RB push r10
  41b339:	pop    rdi
  41b33a:	push   rbx
  41b33b:	rex.RB push r12
  41b33d:	or     DWORD PTR [rcx],ecx
  41b33f:	sub    BYTE PTR [rax],ch
  41b341:	jbe    0x41b3b2
  41b343:	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x4c312029
  41b34b:	sub    DWORD PTR [rax],eax
	...
  41b35d:	add    BYTE PTR [rax],al
  41b35f:	add    BYTE PTR [rsi+0x23],bl
  41b362:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41b36a:	or     DWORD PTR [rbp+0x2a],ebx
  41b36d:	pop    rdi
  41b36e:	pop    rdi
  41b36f:	push   rax
  41b370:	rex.WRXB
  41b371:	rex.WB
  41b372:	rex.WRX push rsp
  41b374:	rex.RB push r10
  41b376:	pop    rdi
  41b377:	push   rbx
  41b378:	rex.RB push r12
  41b37a:	pop    rbx
  41b37b:	and    BYTE PTR [rcx],cl
  41b37d:	pop    rbp
  41b37e:	sub    bl,BYTE PTR [rax+rbp*1+0x5c]
  41b382:	sub    BYTE PTR [rsi+0x6f],dh
  41b385:	imul   esp,DWORD PTR [rax+riz*1+0x5c],0x20295c2a
  41b38d:	xor    DWORD PTR [rsp+rcx*2+0x5c],ecx
  41b391:	sub    DWORD PTR [rax],eax
  41b393:	jae    0x41b40e
  41b395:	jae    0x41b3c6
  41b397:	jo     0x41b40d
  41b399:	push   0x64616572
  41b39e:	cs push 0x0
	...
  41b3b0:	push   0x31787570
  41b3b5:	xor    DWORD PTR [rdi+0x70],ebx
  41b3b8:	je     0x41b422
  41b3ba:	jb     0x41b421
  41b3bc:	(bad)  
  41b3bd:	fs pop rdi
  41b3bf:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41b3c2:	jae    0x41b438
  41b3c4:	add    BYTE PTR [rdi+0x5f],bl
  41b3c7:	movsxd esi,DWORD PTR [rax+0x6c]
  41b3ca:	jne    0x41b43f
  41b3cc:	jo     0x41b43a
  41b3ce:	jne    0x41b443
	...
  41b3e0:	pop    rsi
  41b3e1:	pop    rbx
  41b3e2:	and    BYTE PTR [rcx],cl
  41b3e4:	pop    rbp
  41b3e5:	sub    ah,BYTE PTR [rbx]
  41b3e7:	pop    rbx
  41b3e8:	and    BYTE PTR [rcx],cl
  41b3ea:	pop    rbp
  41b3eb:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41b3ef:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41b3f6:	sub    esp,DWORD PTR [rsi+0x61]
  41b3f9:	(bad)
  41b3fe:	sub    al,BYTE PTR cs:[rax]
  41b401:	ins    DWORD PTR es:[rdi],dx
  41b402:	(bad)  
  41b403:	je     0x41b46d
  41b405:	cs push 0x70680000
  41b40b:	jne    0x41b485
  41b40d:	xor    DWORD PTR [rcx],esi
  41b40f:	pop    rdi
  41b410:	data16 (bad) 
  41b412:	(bad)
  41b417:	add    BYTE PTR [rbx],ah
  41b419:	imul   esp,DWORD PTR [rsi+0x6e],0x20666564
  41b420:	pop    rdi
  41b421:	push   r8
  41b423:	push   rax
  41b424:	xor    esi,DWORD PTR [rdx]
  41b426:	pop    rdi
  41b427:	ss xor al,0x42
  41b42a:	rex.WB push r12
  41b42c:	pop    rdi
  41b42d:	rex.WRXB
  41b42e:	rex.RX
  41b42f:	rex.RX pop rdi
  41b431:	push   rsp
  41b432:	or     ah,BYTE PTR [rip+0x6e652330]        # 0x6ea6d768
  41b438:	imul   esp,DWORD PTR fs:[rsi+0xa],0x0
  41b440:	pop    rsi
  41b441:	pop    rbx
  41b442:	and    BYTE PTR [rcx],cl
  41b444:	pop    rbp
  41b445:	sub    ah,BYTE PTR [rbp+0x78]
  41b448:	je     0x41b4af
  41b44a:	jb     0x41b4ba
  41b44c:	and    BYTE PTR [rbx+0x62],dh
  41b44f:	jae    0x41b4ba
  41b451:	jp     0x41b4b8
  41b453:	pop    rdi
  41b454:	je     0x41b476
  41b456:	jae    0x41b4bd
  41b458:	outs   dx,BYTE PTR ds:[rsi]
  41b459:	fs jo  0x41b4bd
  41b45c:	je     0x41b4c6
  41b45e:	sub    cl,BYTE PTR cs:[rdx]
  41b461:	sub    ch,BYTE PTR cs:[rax+riz*1]
  41b465:	imul   ebp,DWORD PTR [rsi+0x74],0x295c295c
  41b46c:	cmp    ecx,DWORD PTR [rdx]
  41b46e:	add    BYTE PTR [rdx],ch
  41b470:	sub    eax,0x682d7068
  41b475:	jo     0x41b4ec
  41b477:	js     0x41b4aa
  41b479:	xor    DWORD PTR [rsi],ebp
  41b47b:	pop    rbx
  41b47c:	xor    DWORD PTR [rdx],esi
  41b47e:	pop    rbp
  41b47f:	sub    al,BYTE PTR [rax]
  41b481:	jae    0x41b4fc
  41b483:	jae    0x41b4b4
  41b485:	jae    0x41b4f6
  41b487:	movsxd ebp,DWORD PTR [rbx+0x65]
  41b48a:	je     0x41b4ba
  41b48c:	push   0x68000000
  41b491:	jo     0x41b508
  41b493:	js     0x41b4c6
  41b495:	xor    DWORD PTR [rdi+0x65],ebx
  41b498:	js     0x41b50e
  41b49a:	gs jb  0x41b50b
  41b49d:	pop    rdi
  41b49e:	jae    0x41b505
  41b4a0:	outs   dx,BYTE PTR ds:[rsi]
  41b4a1:	fs jo  0x41b505
  41b4a4:	je     0x41b50e
	...
  41b4be:	add    BYTE PTR [rax],al
  41b4c0:	pop    rsi
  41b4c1:	pop    rbx
  41b4c2:	and    BYTE PTR [rcx],cl
  41b4c4:	pop    rbp
  41b4c5:	sub    ah,BYTE PTR [rbp+0x78]
  41b4c8:	je     0x41b52f
  41b4ca:	jb     0x41b53a
  41b4cc:	and    BYTE PTR [rbx+0x62],dh
  41b4cf:	jae    0x41b53a
  41b4d1:	jp     0x41b538
  41b4d3:	pop    rdi
  41b4d4:	je     0x41b4f6
  41b4d6:	jae    0x41b53d
  41b4d8:	outs   dx,BYTE PTR ds:[rsi]
  41b4d9:	imul   bp,WORD PTR fs:[rbp+riz*2+0x2e],0xa2a
  41b4e1:	sub    ch,BYTE PTR cs:[rax+riz*1]
  41b4e5:	imul   ebp,DWORD PTR [rsi+0x74],0x295c295c
  41b4ec:	cmp    ecx,DWORD PTR [rdx]
  41b4ee:	add    BYTE PTR [rbx+0x79],dh
  41b4f1:	jae    0x41b522
  41b4f3:	jae    0x41b564
  41b4f5:	movsxd ebp,DWORD PTR [rbx+0x65]
  41b4f8:	je     0x41b528
  41b4fa:	push   0x0
  41b4ff:	add    BYTE PTR [rax+0x70],ch
  41b502:	jne    0x41b57c
  41b504:	xor    DWORD PTR [rcx],esi
  41b506:	pop    rdi
  41b507:	gs js  0x41b57e
  41b50a:	gs jb  0x41b57b
  41b50d:	pop    rdi
  41b50e:	jae    0x41b575
  41b510:	outs   dx,BYTE PTR ds:[rsi]
  41b511:	imul   bp,WORD PTR fs:[rbp+riz*2+0x0],0x6900
  41b519:	data16 and BYTE PTR [rcx],ah
  41b51c:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2864
  41b524:	pop    rdi
  41b525:	rex.WRB
  41b526:	push   r12
  41b528:	rex.W pop rdi
  41b52a:	rex.WB
  41b52b:	rex.WRX
  41b52c:	rex.XB
  41b52d:	rex.WR push rbp
  41b52f:	rex.R
  41b530:	rex.RB
  41b531:	sub    DWORD PTR [rax],r12d
  41b534:	jl     0x41b5b2
  41b536:	and    BYTE PTR [rbp+riz*2+0x66],ah
  41b53a:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2864
  41b541:	rex.RXB
  41b542:	rex.WRX push rbp
  41b544:	rex.RXB pop r15
  41b546:	pop    rdi
  41b547:	sub    DWORD PTR [rax],eax
  41b549:	add    BYTE PTR [rax],al
  41b54b:	add    BYTE PTR [rax],al
  41b54d:	add    BYTE PTR [rax],al
  41b54f:	add    BYTE PTR [rcx+0x66],ch
  41b552:	outs   dx,BYTE PTR ds:[rsi]
  41b553:	fs data16 and BYTE PTR gs:[rdi+0x4d],bl
  41b559:	push   r12
  41b55b:	rex.W pop rdi
  41b55d:	rex.WB
  41b55e:	rex.WRX
  41b55f:	rex.XB
  41b560:	rex.WR push rbp
  41b562:	rex.R
  41b563:	rex.RB
  41b564:	add    BYTE PTR [rbx+0x74],r14b
  41b568:	fs ins BYTE PTR es:[rdi],dx
  41b56a:	imul   esp,DWORD PTR [rdx+0x2e],0x68000068
  41b571:	jo     0x41b5e8
  41b573:	js     0x41b5a6
  41b575:	xor    DWORD PTR [rdi+0x61],ebx
  41b578:	(bad)  
  41b57a:	add    BYTE PTR [rax],al
  41b57c:	add    BYTE PTR [rax],al
  41b57e:	add    BYTE PTR [rax],al
  41b580:	and    eax,0x230a0a30
  41b585:	and    BYTE PTR [rax],ah
  41b587:	imul   esp,DWORD PTR [rsi+0x20],0x69666564
  41b58e:	outs   dx,BYTE PTR ds:[rsi]
  41b58f:	gs sub BYTE PTR fs:[rdi+0x5f],bl
  41b594:	push   rbx
  41b595:	push   rsp
  41b596:	rex.R
  41b597:	rex.XB pop r15
  41b599:	pop    rdi
  41b59a:	sub    DWORD PTR [rax],esp
  41b59c:	jl     0x41b61a
  41b59e:	and    BYTE PTR [rbp+riz*2+0x66],ah
  41b5a2:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2864
  41b5a9:	movsxd esi,DWORD PTR [rax+0x6c]
  41b5ac:	jne    0x41b621
  41b5ae:	jo     0x41b61c
  41b5b0:	jne    0x41b625
  41b5b2:	sub    DWORD PTR [rdx],ecx
  41b5b4:	and    BYTE PTR [rax],ah
  41b5b6:	and    BYTE PTR [rax],ah
  41b5b8:	and    BYTE PTR [rbp+0x78],ah
  41b5bb:	je     0x41b622
  41b5bd:	jb     0x41b62d
  41b5bf:	and    BYTE PTR [rcx+0x6e],ch
  41b5c2:	je     0x41b5e4
  41b5c4:	jae    0x41b634
  41b5c6:	jo     0x41b63a
  41b5c8:	imul   ebp,DWORD PTR [rsi+0x74],0x68632866
  41b5cf:	(bad)  
  41b5d0:	jb     0x41b5f2
  41b5d2:	sub    ch,BYTE PTR [rax+riz*1]
  41b5d5:	jae    0x41b640
  41b5d7:	jp     0x41b63e
  41b5d9:	pop    rdi
  41b5da:	je     0x41b608
  41b5dc:	and    BYTE PTR [rbx+0x6f],ah
  41b5df:	outs   dx,BYTE PTR ds:[rsi]
  41b5e0:	jae    0x41b656
  41b5e2:	and    BYTE PTR [rbx+0x68],ah
  41b5e5:	(bad)  
  41b5e6:	jb     0x41b608
  41b5e8:	sub    ch,BYTE PTR [rax+riz*1]
  41b5eb:	cs cs sub DWORD PTR cs:[rbx],edi
  41b5f0:	or     ah,BYTE PTR [rax]
  41b5f2:	and    BYTE PTR [rax],ah
  41b5f4:	and    BYTE PTR [rax],ah
  41b5f6:	gs js  0x41b66d
  41b5f9:	gs jb  0x41b66a
  41b5fc:	and    BYTE PTR [rcx+0x6e],ch
  41b5ff:	je     0x41b621
  41b601:	jbe    0x41b676
  41b603:	outs   dx,BYTE PTR ds:[rsi]
  41b604:	jo     0x41b678
  41b606:	imul   ebp,DWORD PTR [rsi+0x74],0x68632866
  41b60d:	(bad)  
  41b60e:	jb     0x41b630
  41b610:	sub    ch,BYTE PTR [rax+riz*1]
  41b613:	jae    0x41b67e
  41b615:	jp     0x41b67c
  41b617:	pop    rdi
  41b618:	je     0x41b646
  41b61a:	and    BYTE PTR [rbx+0x6f],ah
  41b61d:	outs   dx,BYTE PTR ds:[rsi]
  41b61e:	jae    0x41b694
  41b620:	and    BYTE PTR [rbx+0x68],ah
  41b623:	(bad)  
  41b624:	jb     0x41b646
  41b626:	sub    ch,BYTE PTR [rax+riz*1]
  41b629:	pop    rdi
  41b62a:	pop    rdi
  41b62b:	jbe    0x41b68e
  41b62d:	pop    rdi
  41b62e:	ins    BYTE PTR es:[rdi],dx
  41b62f:	imul   esi,DWORD PTR [rbx+0x74],0x230a3b29
  41b636:	and    BYTE PTR [rax],ah
  41b638:	gs ins BYTE PTR es:[rdi],dx
  41b63a:	jae    0x41b6a1
  41b63c:	and    BYTE PTR [rdi],ch
  41b63e:	sub    ah,BYTE PTR [rax]
  41b640:	outs   dx,BYTE PTR ds:[rsi]
  41b641:	outs   dx,DWORD PTR ds:[rsi]
  41b642:	je     0x41b664
  41b644:	pop    rdi
  41b645:	pop    rdi
  41b646:	push   rbx
  41b647:	push   rsp
  41b648:	rex.R
  41b649:	rex.XB pop r15
  41b64b:	pop    rdi
  41b64c:	sub    DWORD PTR [rax],esp
  41b64e:	jl     0x41b6cc
  41b650:	and    BYTE PTR [rdi+0x5f],bl
  41b653:	movsxd esi,DWORD PTR [rax+0x6c]
  41b656:	jne    0x41b6cb
  41b658:	jo     0x41b6c6
  41b65a:	jne    0x41b6cf
  41b65c:	and    BYTE PTR [rdx],ch
  41b65e:	(bad)  
  41b65f:	or     ah,BYTE PTR [rax]
  41b661:	and    BYTE PTR [rax],ah
  41b663:	and    BYTE PTR [rax],ah
  41b665:	gs js  0x41b6dc
  41b668:	gs jb  0x41b6d9
  41b66b:	and    BYTE PTR [rcx+0x6e],ch
  41b66e:	je     0x41b690
  41b670:	jae    0x41b6e0
  41b672:	jo     0x41b6e6
  41b674:	imul   ebp,DWORD PTR [rsi+0x74],0x3b292866
  41b67b:	or     ah,BYTE PTR [rax]
  41b67d:	and    BYTE PTR [rax],ah
  41b67f:	and    BYTE PTR [rax],ah
  41b681:	gs js  0x41b6f8
  41b684:	gs jb  0x41b6f5
  41b687:	and    BYTE PTR [rcx+0x6e],ch
  41b68a:	je     0x41b6ac
  41b68c:	jbe    0x41b701
  41b68e:	outs   dx,BYTE PTR ds:[rsi]
  41b68f:	jo     0x41b703
  41b691:	imul   ebp,DWORD PTR [rsi+0x74],0x3b292866
  41b698:	or     ah,BYTE PTR [rbx]
  41b69a:	and    BYTE PTR [rax],ah
  41b69c:	outs   dx,BYTE PTR gs:[rsi]
  41b69e:	imul   esp,DWORD PTR fs:[rsi+0x20],0x5f202a2f
  41b6a6:	pop    rdi
  41b6a7:	push   rbx
  41b6a8:	push   rsp
  41b6a9:	rex.R
  41b6aa:	rex.XB pop r15
  41b6ac:	pop    rdi
  41b6ad:	sub    DWORD PTR [rax],esp
  41b6af:	jl     0x41b72d
  41b6b1:	and    BYTE PTR [rdi+0x5f],bl
  41b6b4:	movsxd esi,DWORD PTR [rax+0x6c]
  41b6b7:	jne    0x41b72c
  41b6b9:	jo     0x41b727
  41b6bb:	jne    0x41b730
  41b6bd:	and    BYTE PTR [rdx],ch
  41b6bf:	(bad)  
  41b6c0:	or     al,BYTE PTR [rax]
	...
  41b6de:	add    BYTE PTR [rax],al
  41b6e0:	pop    rsi
  41b6e1:	pop    rbx
  41b6e2:	and    BYTE PTR [rcx],cl
  41b6e4:	pop    rbp
  41b6e5:	sub    ah,BYTE PTR [rbp+0x78]
  41b6e8:	je     0x41b74f
  41b6ea:	jb     0x41b75a
  41b6ec:	pop    rbx
  41b6ed:	and    BYTE PTR [rcx],cl
  41b6ef:	pop    rbp
  41b6f0:	sub    ch,BYTE PTR [rcx+0x6e]
  41b6f3:	je     0x41b750
  41b6f5:	and    BYTE PTR [rcx],cl
  41b6f7:	pop    rbp
  41b6f8:	sub    dh,BYTE PTR [rsi+0x73]
  41b6fb:	outs   dx,BYTE PTR ds:[rsi]
  41b6fc:	jo     0x41b770
  41b6fe:	imul   ebp,DWORD PTR [rsi+0x74],0x9205b66
  41b705:	pop    rbp
  41b706:	sub    bl,BYTE PTR [rax+rbp*1+0x0]
  41b70a:	add    BYTE PTR [rax],al
  41b70c:	add    BYTE PTR [rax],al
  41b70e:	add    BYTE PTR [rax],al
  41b710:	pop    rsi
  41b711:	and    ebx,DWORD PTR [rbx+0x20]
  41b714:	or     DWORD PTR [rbp+0x2a],ebx
  41b717:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  41b71f:	imul   ebp,DWORD PTR [rdi+0x62],0x5d09205b
  41b726:	sub    bl,BYTE PTR [rdi+0x5f]
  41b729:	imul   ebp,DWORD PTR [rdi+0x62],0x64747300
  41b730:	imul   ebp,DWORD PTR [rdi+0x2e],0x68
	...
  41b73f:	add    BYTE PTR [rax+0x70],ch
  41b742:	jne    0x41b7bc
  41b744:	xor    DWORD PTR [rax],esi
  41b746:	pop    rdi
  41b747:	jae    0x41b7bd
  41b749:	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x6c636564
  41b751:	(bad)  
  41b752:	jb     0x41b7b5
  41b754:	je     0x41b7bf
  41b756:	outs   dx,DWORD PTR ds:[rsi]
  41b757:	outs   dx,BYTE PTR ds:[rsi]
  41b758:	jae    0x41b75a
  41b75a:	add    BYTE PTR [rax],al
  41b75c:	add    BYTE PTR [rax],al
  41b75e:	add    BYTE PTR [rax],al
  41b760:	and    eax,0x230a0a30
  41b765:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  41b76c:	push   rax
  41b76d:	push   rdx
  41b76e:	rex.WRXB push r12
  41b770:	rex.WRXB push r12
  41b772:	pop    rcx
  41b773:	push   rax
  41b774:	rex.RB push r11
  41b776:	or     ah,BYTE PTR [rax]
  41b778:	and    BYTE PTR [rax],ah
  41b77a:	and    BYTE PTR [rax],ah
  41b77c:	gs js  0x41b7f3
  41b77f:	gs jb  0x41b7f0
  41b782:	and    BYTE PTR [rcx+0x6e],ch
  41b785:	je     0x41b7a7
  41b787:	pop    rdi
  41b788:	imul   esi,DWORD PTR [rbx+0x61],0x6d756e6c
  41b78f:	sub    BYTE PTR [rcx+0x6e],ch
  41b792:	je     0x41b7bd
  41b794:	cmp    ecx,DWORD PTR [rdx]
  41b796:	and    BYTE PTR [rax],ah
  41b798:	and    BYTE PTR [rax],ah
  41b79a:	and    BYTE PTR [rbp+0x78],ah
  41b79d:	je     0x41b804
  41b79f:	jb     0x41b80f
  41b7a1:	and    BYTE PTR [rcx+0x6e],ch
  41b7a4:	je     0x41b7c6
  41b7a6:	pop    rdi
  41b7a7:	imul   esi,DWORD PTR [rbx+0x61],0x6168706c
  41b7ae:	sub    BYTE PTR [rcx+0x6e],ch
  41b7b1:	je     0x41b7dc
  41b7b3:	cmp    ecx,DWORD PTR [rdx]
  41b7b5:	and    BYTE PTR [rax],ah
  41b7b7:	and    BYTE PTR [rax],ah
  41b7b9:	and    BYTE PTR [rbp+0x78],ah
  41b7bc:	je     0x41b823
  41b7be:	jb     0x41b82e
  41b7c0:	and    BYTE PTR [rcx+0x6e],ch
  41b7c3:	je     0x41b7e5
  41b7c5:	pop    rdi
  41b7c6:	imul   esi,DWORD PTR [rbx+0x63],0x6c72746e
  41b7cd:	sub    BYTE PTR [rcx+0x6e],ch
  41b7d0:	je     0x41b7fb
  41b7d2:	cmp    ecx,DWORD PTR [rdx]
  41b7d4:	and    BYTE PTR [rax],ah
  41b7d6:	and    BYTE PTR [rax],ah
  41b7d8:	and    BYTE PTR [rbp+0x78],ah
  41b7db:	je     0x41b842
  41b7dd:	jb     0x41b84d
  41b7df:	and    BYTE PTR [rcx+0x6e],ch
  41b7e2:	je     0x41b804
  41b7e4:	pop    rdi
  41b7e5:	imul   esi,DWORD PTR [rbx+0x64],0x74696769
  41b7ec:	sub    BYTE PTR [rcx+0x6e],ch
  41b7ef:	je     0x41b81a
  41b7f1:	cmp    ecx,DWORD PTR [rdx]
  41b7f3:	and    BYTE PTR [rax],ah
  41b7f5:	and    BYTE PTR [rax],ah
  41b7f7:	and    BYTE PTR [rbp+0x78],ah
  41b7fa:	je     0x41b861
  41b7fc:	jb     0x41b86c
  41b7fe:	and    BYTE PTR [rcx+0x6e],ch
  41b801:	je     0x41b823
  41b803:	pop    rdi
  41b804:	imul   esi,DWORD PTR [rbx+0x67],0x68706172
  41b80b:	sub    BYTE PTR [rcx+0x6e],ch
  41b80e:	je     0x41b839
  41b810:	cmp    ecx,DWORD PTR [rdx]
  41b812:	and    BYTE PTR [rax],ah
  41b814:	and    BYTE PTR [rax],ah
  41b816:	and    BYTE PTR [rbp+0x78],ah
  41b819:	je     0x41b880
  41b81b:	jb     0x41b88b
  41b81d:	and    BYTE PTR [rcx+0x6e],ch
  41b820:	je     0x41b842
  41b822:	pop    rdi
  41b823:	imul   esi,DWORD PTR [rbx+0x6c],0x7265776f
  41b82a:	sub    BYTE PTR [rcx+0x6e],ch
  41b82d:	je     0x41b858
  41b82f:	cmp    ecx,DWORD PTR [rdx]
  41b831:	and    BYTE PTR [rax],ah
  41b833:	and    BYTE PTR [rax],ah
  41b835:	and    BYTE PTR [rbp+0x78],ah
  41b838:	je     0x41b89f
  41b83a:	jb     0x41b8aa
  41b83c:	and    BYTE PTR [rcx+0x6e],ch
  41b83f:	je     0x41b861
  41b841:	pop    rdi
  41b842:	imul   esi,DWORD PTR [rbx+0x70],0x746e6972
  41b849:	sub    BYTE PTR [rcx+0x6e],ch
  41b84c:	je     0x41b877
  41b84e:	cmp    ecx,DWORD PTR [rdx]
  41b850:	and    BYTE PTR [rax],ah
  41b852:	and    BYTE PTR [rax],ah
  41b854:	and    BYTE PTR [rbp+0x78],ah
  41b857:	je     0x41b8be
  41b859:	jb     0x41b8c9
  41b85b:	and    BYTE PTR [rcx+0x6e],ch
  41b85e:	je     0x41b880
  41b860:	pop    rdi
  41b861:	imul   esi,DWORD PTR [rbx+0x70],0x74636e75
  41b868:	sub    BYTE PTR [rcx+0x6e],ch
  41b86b:	je     0x41b896
  41b86d:	cmp    ecx,DWORD PTR [rdx]
  41b86f:	and    BYTE PTR [rax],ah
  41b871:	and    BYTE PTR [rax],ah
  41b873:	and    BYTE PTR [rbp+0x78],ah
  41b876:	je     0x41b8dd
  41b878:	jb     0x41b8e8
  41b87a:	and    BYTE PTR [rcx+0x6e],ch
  41b87d:	je     0x41b89f
  41b87f:	pop    rdi
  41b880:	imul   esi,DWORD PTR [rbx+0x73],0x65636170
  41b887:	sub    BYTE PTR [rcx+0x6e],ch
  41b88a:	je     0x41b8b5
  41b88c:	cmp    ecx,DWORD PTR [rdx]
  41b88e:	and    BYTE PTR [rax],ah
  41b890:	and    BYTE PTR [rax],ah
  41b892:	and    BYTE PTR [rbp+0x78],ah
  41b895:	je     0x41b8fc
  41b897:	jb     0x41b907
  41b899:	and    BYTE PTR [rcx+0x6e],ch
  41b89c:	je     0x41b8be
  41b89e:	pop    rdi
  41b89f:	imul   esi,DWORD PTR [rbx+0x75],0x72657070
  41b8a6:	sub    BYTE PTR [rcx+0x6e],ch
  41b8a9:	je     0x41b8d4
  41b8ab:	cmp    ecx,DWORD PTR [rdx]
  41b8ad:	and    BYTE PTR [rax],ah
  41b8af:	and    BYTE PTR [rax],ah
  41b8b1:	and    BYTE PTR [rbp+0x78],ah
  41b8b4:	je     0x41b91b
  41b8b6:	jb     0x41b926
  41b8b8:	and    BYTE PTR [rcx+0x6e],ch
  41b8bb:	je     0x41b8dd
  41b8bd:	pop    rdi
  41b8be:	imul   esi,DWORD PTR [rbx+0x78],0x69676964
  41b8c5:	je     0x41b8ef
  41b8c7:	imul   ebp,DWORD PTR [rsi+0x74],0x230a3b29
  41b8ce:	and    BYTE PTR [rax],ah
  41b8d0:	gs ins BYTE PTR es:[rdi],dx
  41b8d2:	jae    0x41b939
  41b8d4:	and    BYTE PTR [rdi],ch
  41b8d6:	sub    ah,BYTE PTR [rax]
  41b8d8:	outs   dx,BYTE PTR ds:[rsi]
  41b8d9:	outs   dx,DWORD PTR ds:[rsi]
  41b8da:	je     0x41b8fc
  41b8dc:	pop    rdi
  41b8dd:	push   rax
  41b8de:	push   rdx
  41b8df:	rex.WRXB push r12
  41b8e1:	rex.WRXB push r12
  41b8e3:	pop    rcx
  41b8e4:	push   rax
  41b8e5:	rex.RB push r11
  41b8e7:	and    BYTE PTR [rdx],ch
  41b8e9:	(bad)  
  41b8ea:	or     ah,BYTE PTR [rax]
  41b8ec:	and    BYTE PTR [rax],ah
  41b8ee:	and    BYTE PTR [rax],ah
  41b8f0:	gs js  0x41b967
  41b8f3:	gs jb  0x41b964
  41b8f6:	and    BYTE PTR [rcx+0x6e],ch
  41b8f9:	je     0x41b91b
  41b8fb:	pop    rdi
  41b8fc:	imul   esi,DWORD PTR [rbx+0x61],0x6d756e6c
  41b903:	sub    BYTE PTR [rcx],ch
  41b905:	cmp    ecx,DWORD PTR [rdx]
  41b907:	and    BYTE PTR [rax],ah
  41b909:	and    BYTE PTR [rax],ah
  41b90b:	and    BYTE PTR [rbp+0x78],ah
  41b90e:	je     0x41b975
  41b910:	jb     0x41b980
  41b912:	and    BYTE PTR [rcx+0x6e],ch
  41b915:	je     0x41b937
  41b917:	pop    rdi
  41b918:	imul   esi,DWORD PTR [rbx+0x61],0x6168706c
  41b91f:	sub    BYTE PTR [rcx],ch
  41b921:	cmp    ecx,DWORD PTR [rdx]
  41b923:	and    BYTE PTR [rax],ah
  41b925:	and    BYTE PTR [rax],ah
  41b927:	and    BYTE PTR [rbp+0x78],ah
  41b92a:	je     0x41b991
  41b92c:	jb     0x41b99c
  41b92e:	and    BYTE PTR [rcx+0x6e],ch
  41b931:	je     0x41b953
  41b933:	pop    rdi
  41b934:	imul   esi,DWORD PTR [rbx+0x63],0x6c72746e
  41b93b:	sub    BYTE PTR [rcx],ch
  41b93d:	cmp    ecx,DWORD PTR [rdx]
  41b93f:	and    BYTE PTR [rax],ah
  41b941:	and    BYTE PTR [rax],ah
  41b943:	and    BYTE PTR [rbp+0x78],ah
  41b946:	je     0x41b9ad
  41b948:	jb     0x41b9b8
  41b94a:	and    BYTE PTR [rcx+0x6e],ch
  41b94d:	je     0x41b96f
  41b94f:	pop    rdi
  41b950:	imul   esi,DWORD PTR [rbx+0x64],0x74696769
  41b957:	sub    BYTE PTR [rcx],ch
  41b959:	cmp    ecx,DWORD PTR [rdx]
  41b95b:	and    BYTE PTR [rax],ah
  41b95d:	and    BYTE PTR [rax],ah
  41b95f:	and    BYTE PTR [rbp+0x78],ah
  41b962:	je     0x41b9c9
  41b964:	jb     0x41b9d4
  41b966:	and    BYTE PTR [rcx+0x6e],ch
  41b969:	je     0x41b98b
  41b96b:	pop    rdi
  41b96c:	imul   esi,DWORD PTR [rbx+0x67],0x68706172
  41b973:	sub    BYTE PTR [rcx],ch
  41b975:	cmp    ecx,DWORD PTR [rdx]
  41b977:	and    BYTE PTR [rax],ah
  41b979:	and    BYTE PTR [rax],ah
  41b97b:	and    BYTE PTR [rbp+0x78],ah
  41b97e:	je     0x41b9e5
  41b980:	jb     0x41b9f0
  41b982:	and    BYTE PTR [rcx+0x6e],ch
  41b985:	je     0x41b9a7
  41b987:	pop    rdi
  41b988:	imul   esi,DWORD PTR [rbx+0x6c],0x7265776f
  41b98f:	sub    BYTE PTR [rcx],ch
  41b991:	cmp    ecx,DWORD PTR [rdx]
  41b993:	and    BYTE PTR [rax],ah
  41b995:	and    BYTE PTR [rax],ah
  41b997:	and    BYTE PTR [rbp+0x78],ah
  41b99a:	je     0x41ba01
  41b99c:	jb     0x41ba0c
  41b99e:	and    BYTE PTR [rcx+0x6e],ch
  41b9a1:	je     0x41b9c3
  41b9a3:	pop    rdi
  41b9a4:	imul   esi,DWORD PTR [rbx+0x70],0x746e6972
  41b9ab:	sub    BYTE PTR [rcx],ch
  41b9ad:	cmp    ecx,DWORD PTR [rdx]
  41b9af:	and    BYTE PTR [rax],ah
  41b9b1:	and    BYTE PTR [rax],ah
  41b9b3:	and    BYTE PTR [rbp+0x78],ah
  41b9b6:	je     0x41ba1d
  41b9b8:	jb     0x41ba28
  41b9ba:	and    BYTE PTR [rcx+0x6e],ch
  41b9bd:	je     0x41b9df
  41b9bf:	pop    rdi
  41b9c0:	imul   esi,DWORD PTR [rbx+0x70],0x74636e75
  41b9c7:	sub    BYTE PTR [rcx],ch
  41b9c9:	cmp    ecx,DWORD PTR [rdx]
  41b9cb:	and    BYTE PTR [rax],ah
  41b9cd:	and    BYTE PTR [rax],ah
  41b9cf:	and    BYTE PTR [rbp+0x78],ah
  41b9d2:	je     0x41ba39
  41b9d4:	jb     0x41ba44
  41b9d6:	and    BYTE PTR [rcx+0x6e],ch
  41b9d9:	je     0x41b9fb
  41b9db:	pop    rdi
  41b9dc:	imul   esi,DWORD PTR [rbx+0x73],0x65636170
  41b9e3:	sub    BYTE PTR [rcx],ch
  41b9e5:	cmp    ecx,DWORD PTR [rdx]
  41b9e7:	and    BYTE PTR [rax],ah
  41b9e9:	and    BYTE PTR [rax],ah
  41b9eb:	and    BYTE PTR [rbp+0x78],ah
  41b9ee:	je     0x41ba55
  41b9f0:	jb     0x41ba60
  41b9f2:	and    BYTE PTR [rcx+0x6e],ch
  41b9f5:	je     0x41ba17
  41b9f7:	pop    rdi
  41b9f8:	imul   esi,DWORD PTR [rbx+0x75],0x72657070
  41b9ff:	sub    BYTE PTR [rcx],ch
  41ba01:	cmp    ecx,DWORD PTR [rdx]
  41ba03:	and    BYTE PTR [rax],ah
  41ba05:	and    BYTE PTR [rax],ah
  41ba07:	and    BYTE PTR [rbp+0x78],ah
  41ba0a:	je     0x41ba71
  41ba0c:	jb     0x41ba7c
  41ba0e:	and    BYTE PTR [rcx+0x6e],ch
  41ba11:	je     0x41ba33
  41ba13:	pop    rdi
  41ba14:	imul   esi,DWORD PTR [rbx+0x78],0x69676964
  41ba1b:	je     0x41ba45
  41ba1d:	sub    DWORD PTR [rbx],edi
  41ba1f:	or     ah,BYTE PTR [rbx]
  41ba21:	outs   dx,BYTE PTR gs:[rsi]
  41ba23:	imul   esp,DWORD PTR fs:[rsi+0x20],0x5f202a2f
  41ba2b:	push   rax
  41ba2c:	push   rdx
  41ba2d:	rex.WRXB push r12
  41ba2f:	rex.WRXB push r12
  41ba31:	pop    rcx
  41ba32:	push   rax
  41ba33:	rex.RB push r11
  41ba35:	and    BYTE PTR [rdx],ch
  41ba37:	(bad)  
  41ba38:	or     al,BYTE PTR [rax]
  41ba3a:	add    BYTE PTR [rax],al
  41ba3c:	add    BYTE PTR [rax],al
  41ba3e:	add    BYTE PTR [rax],al
  41ba40:	pop    rsi
  41ba41:	pop    rbx
  41ba42:	and    BYTE PTR [rcx],cl
  41ba44:	pop    rbp
  41ba45:	sub    ah,BYTE PTR [rbp+0x78]
  41ba48:	je     0x41baaf
  41ba4a:	jb     0x41baba
  41ba4c:	pop    rbx
  41ba4d:	and    BYTE PTR [rcx],cl
  41ba4f:	pop    rbp
  41ba50:	sub    ch,BYTE PTR [rcx+0x6e]
  41ba53:	je     0x41bab0
  41ba55:	and    BYTE PTR [rcx],cl
  41ba57:	pop    rbp
  41ba58:	sub    bl,BYTE PTR [rdi+0x69]
  41ba5b:	jae    0x41babe
  41ba5d:	ins    BYTE PTR es:[rdi],dx
  41ba5e:	outs   dx,BYTE PTR ds:[rsi]
  41ba5f:	jne    0x41bace
  41ba61:	pop    rbx
  41ba62:	and    BYTE PTR [rcx],cl
  41ba64:	pop    rbp
  41ba65:	sub    bl,BYTE PTR [rax+rbp*1+0x0]
	...
  41ba7d:	add    BYTE PTR [rax],al
  41ba7f:	add    BYTE PTR [rsi+0x23],bl
  41ba82:	and    BYTE PTR [rax],ah
  41ba84:	imul   esp,DWORD PTR [rsi+0x20],0x69666564
  41ba8b:	outs   dx,BYTE PTR ds:[rsi]
  41ba8c:	gs fs pop rsp
  41ba8f:	sub    BYTE PTR [rdi+0x53],bl
  41ba92:	rex.X pop rdi
  41ba94:	rex.XB push r12
  41ba96:	pop    rcx
  41ba97:	push   rax
  41ba98:	rex.RB pop r15
  41ba9a:	rex.WRB
  41ba9b:	rex.B
  41ba9c:	rex.XB push r10
  41ba9e:	rex.WRXB push r11
  41baa0:	pop    rsp
  41baa1:	sub    DWORD PTR [rax],esp
  41baa3:	es and BYTE PTR es:[rcx+riz*1+0x64],bl
  41baa9:	imul   bp,WORD PTR gs:[rsi+0x65],0x5c64
  41bab0:	sub    BYTE PTR [rdi+0x5f],bl
  41bab3:	ins    BYTE PTR es:[rdi],dx
  41bab4:	imul   ebp,DWORD PTR [rsi+0x74],0x6300295c
  41babb:	je     0x41bb36
  41babd:	jo     0x41bb24
  41babf:	cs push 0x0
	...
  41bacd:	add    BYTE PTR [rax],al
  41bacf:	add    BYTE PTR [rax+0x70],ch
  41bad2:	jne    0x41bb4c
  41bad4:	xor    DWORD PTR [rax],esi
  41bad6:	pop    rdi
  41bad7:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  41badb:	gs pop rdi
  41badd:	fs movsxd ebp,DWORD PTR gs:[rcx+riz*2+0x72]
  41bae3:	(bad)  
  41bae4:	je     0x41bb4f
  41bae6:	outs   dx,DWORD PTR ds:[rsi]
  41bae7:	outs   dx,BYTE PTR ds:[rsi]
  41bae8:	jae    0x41bb1c
  41baea:	add    BYTE PTR [rax],al
  41baec:	add    BYTE PTR [rax],al
  41baee:	add    BYTE PTR [rax],al
  41baf0:	and    ebp,DWORD PTR [rcx+0x66]
  41baf3:	fs data16 and BYTE PTR gs:[rdi+0x50],bl
  41baf9:	push   rdx
  41bafa:	rex.WRXB push r12
  41bafc:	rex.WRXB push r12
  41bafe:	pop    rcx
  41baff:	push   rax
  41bb00:	rex.RB push r11
  41bb02:	or     ah,BYTE PTR [rbp+0x78]
  41bb05:	je     0x41bb6c
  41bb07:	jb     0x41bb77
  41bb09:	and    BYTE PTR [rcx+0x6e],ch
  41bb0c:	je     0x41bb2e
  41bb0e:	pop    rdi
  41bb0f:	pop    rdi
  41bb10:	je     0x41bb81
  41bb12:	ins    BYTE PTR es:[rdi],dx
  41bb13:	outs   dx,DWORD PTR ds:[rsi]
  41bb14:	ja     0x41bb7b
  41bb16:	jb     0x41bb40
  41bb18:	imul   ebp,DWORD PTR [rsi+0x74],0x650a3b29
  41bb1f:	js     0x41bb95
  41bb21:	gs jb  0x41bb92
  41bb24:	and    BYTE PTR [rcx+0x6e],ch
  41bb27:	je     0x41bb49
  41bb29:	pop    rdi
  41bb2a:	pop    rdi
  41bb2b:	je     0x41bb9c
  41bb2d:	jne    0x41bb9f
  41bb2f:	jo     0x41bb96
  41bb31:	jb     0x41bb5b
  41bb33:	imul   ebp,DWORD PTR [rsi+0x74],0x230a3b29
  41bb3a:	gs ins BYTE PTR es:[rdi],dx
  41bb3c:	jae    0x41bba3
  41bb3e:	and    BYTE PTR [rdi],ch
  41bb40:	sub    ah,BYTE PTR [rax]
  41bb42:	rex.WRX
  41bb43:	rex.WRXB push r12
  41bb45:	and    BYTE PTR [rdi+0x50],bl
  41bb48:	push   rdx
  41bb49:	rex.WRXB push r12
  41bb4b:	rex.WRXB push r12
  41bb4d:	pop    rcx
  41bb4e:	push   rax
  41bb4f:	rex.RB push r11
  41bb51:	and    BYTE PTR [rdx],ch
  41bb53:	(bad)  
  41bb54:	or     ah,BYTE PTR [rbp+0x78]
  41bb57:	je     0x41bbbe
  41bb59:	jb     0x41bbc9
  41bb5b:	and    BYTE PTR [rcx+0x6e],ch
  41bb5e:	je     0x41bb80
  41bb60:	pop    rdi
  41bb61:	pop    rdi
  41bb62:	je     0x41bbd3
  41bb64:	ins    BYTE PTR es:[rdi],dx
  41bb65:	outs   dx,DWORD PTR ds:[rsi]
  41bb66:	ja     0x41bbcd
  41bb68:	jb     0x41bb92
  41bb6a:	sub    DWORD PTR [rbx],edi
  41bb6c:	or     ah,BYTE PTR [rbp+0x78]
  41bb6f:	je     0x41bbd6
  41bb71:	jb     0x41bbe1
  41bb73:	and    BYTE PTR [rcx+0x6e],ch
  41bb76:	je     0x41bb98
  41bb78:	pop    rdi
  41bb79:	pop    rdi
  41bb7a:	je     0x41bbeb
  41bb7c:	jne    0x41bbee
  41bb7e:	jo     0x41bbe5
  41bb80:	jb     0x41bbaa
  41bb82:	sub    DWORD PTR [rbx],edi
  41bb84:	or     ah,BYTE PTR [rbx]
  41bb86:	outs   dx,BYTE PTR gs:[rsi]
  41bb88:	imul   esp,DWORD PTR fs:[rsi+0x20],0x5f202a2f
  41bb90:	push   rax
  41bb91:	push   rdx
  41bb92:	rex.WRXB push r12
  41bb94:	rex.WRXB push r12
  41bb96:	pop    rcx
  41bb97:	push   rax
  41bb98:	rex.RB push r11
  41bb9a:	and    BYTE PTR [rdx],ch
  41bb9c:	(bad)  
  41bb9d:	or     cl,BYTE PTR [rdx]
  41bb9f:	and    eax,0xa30
	...
  41bbc0:	pop    rsi
  41bbc1:	pop    rbx
  41bbc2:	and    BYTE PTR [rcx],cl
  41bbc4:	pop    rbp
  41bbc5:	sub    ah,BYTE PTR [rbp+0x78]
  41bbc8:	je     0x41bc2f
  41bbca:	jb     0x41bc3a
  41bbcc:	pop    rbx
  41bbcd:	and    BYTE PTR [rcx],cl
  41bbcf:	pop    rbp
  41bbd0:	sub    ch,BYTE PTR [rcx+0x6e]
  41bbd3:	je     0x41bc30
  41bbd5:	and    BYTE PTR [rcx],cl
  41bbd7:	pop    rbp
  41bbd8:	sub    bl,BYTE PTR [rdi+0x5f]
  41bbdb:	je     0x41bc4c
  41bbdd:	ins    BYTE PTR es:[rdi],dx
  41bbde:	outs   dx,DWORD PTR ds:[rsi]
  41bbdf:	ja     0x41bc46
  41bbe1:	jb     0x41bc3e
  41bbe3:	and    BYTE PTR [rcx],cl
  41bbe5:	pop    rbp
  41bbe6:	sub    bl,BYTE PTR [rax+rbp*1+0x0]
	...
  41bbfe:	add    BYTE PTR [rax],al
  41bc00:	pop    rsi
  41bc01:	and    ebx,DWORD PTR [rbx+0x20]
  41bc04:	or     DWORD PTR [rbp+0x2a],ebx
  41bc07:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  41bc0f:	je     0x41bc80
  41bc11:	jne    0x41bc83
  41bc13:	jo     0x41bc7a
  41bc15:	jb     0x41bc73
  41bc17:	sub    BYTE PTR [rdi+0x5f],bl
  41bc1a:	movsxd ebx,DWORD PTR [rcx+rbp*1+0x5b]
  41bc1e:	and    BYTE PTR [rcx],cl
  41bc20:	pop    rbp
  41bc21:	sub    bl,BYTE PTR [rdi+0x5f]
  41bc24:	je     0x41bc95
  41bc26:	jne    0x41bc98
  41bc28:	jo     0x41bc8f
  41bc2a:	jb     0x41bc88
  41bc2c:	sub    BYTE PTR [rdi+0x5f],bl
  41bc2f:	movsxd ebx,DWORD PTR [rcx+rbp*1+0x0]
  41bc33:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  41bc37:	gs cs push 0x0
  41bc3e:	add    BYTE PTR [rax],al
  41bc40:	push   0x31787570
  41bc45:	xor    BYTE PTR [rdi+0x63],bl
  41bc48:	je     0x41bcc3
  41bc4a:	jo     0x41bcb1
  41bc4c:	pop    rdi
  41bc4d:	fs movsxd ebp,DWORD PTR gs:[rcx+riz*2+0x72]
  41bc53:	(bad)  
  41bc54:	je     0x41bcbf
  41bc56:	outs   dx,DWORD PTR ds:[rsi]
  41bc57:	outs   dx,BYTE PTR ds:[rsi]
  41bc58:	jae    0x41bc8b
	...
  41bc7e:	add    BYTE PTR [rax],al
  41bc80:	and    BYTE PTR [rbx],ch
  41bc82:	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
  41bc89:	outs   dx,DWORD PTR fs:[rsi]
  41bc8b:	jne    0x41bcef
  41bc8d:	ins    BYTE PTR es:[rdi],dx
  41bc8e:	and    BYTE PTR gs:[rax+0x6f],dh
  41bc92:	ja     0x41bcf0
  41bc94:	sub    BYTE PTR [rdi+rbp*2+0x75],ah
  41bc98:	(bad)  
  41bc99:	ins    BYTE PTR es:[rdi],dx
  41bc9a:	and    BYTE PTR gs:[rsp+rbp*1+0x69],ah
  41bc9f:	outs   dx,BYTE PTR ds:[rsi]
  41bca0:	je     0x41bcc2
  41bca2:	gs js  0x41bd15
  41bca5:	outs   dx,DWORD PTR ds:[rsi]
  41bca6:	outs   dx,BYTE PTR ds:[rsi]
  41bca7:	pop    rsp
  41bca8:	sub    DWORD PTR [rax],esp
  41bcaa:	pop    rsp
  41bcab:	jnp    0x41bcb7
  41bcad:	and    BYTE PTR [rbx],ch
  41bcaf:	jb     0x41bd16
  41bcb1:	je     0x41bd28
  41bcb3:	jb     0x41bd23
  41bcb5:	and    BYTE PTR [rax+0x6f],dh
  41bcb8:	ja     0x41bd16
  41bcba:	sub    BYTE PTR [rsp+rbp*1+0x20],ah
  41bcbe:	pop    rsp
  41bcbf:	sub    BYTE PTR [rdi+rbp*2+0x75],ah
  41bcc3:	(bad)  
  41bcc4:	ins    BYTE PTR es:[rdi],dx
  41bcc5:	gs pop rsp
  41bcc7:	sub    DWORD PTR [rbp+0x78],esp
  41bcca:	jo     0x41bd3b
  41bccc:	outs   dx,BYTE PTR ds:[rsi]
  41bccd:	pop    rsp
  41bcce:	sub    DWORD PTR [rbx],edi
  41bcd0:	or     ah,BYTE PTR [rax]
  41bcd2:	sub    ebx,DWORD PTR [rbp+rdi*2+0xa]
  41bcd6:	add    BYTE PTR [rbp+0x61],ch
  41bcd9:	je     0x41bd43
  41bcdb:	cs push 0x68000000
  41bce1:	jo     0x41bd58
  41bce3:	js     0x41bd16
  41bce5:	xor    DWORD PTR [rdi+0x63],ebx
  41bce8:	jo     0x41bd5a
  41bcea:	pop    rdi
  41bceb:	jo     0x41bd5c
  41bced:	ja     0x41bd4e
  41bcef:	imul   ebp,DWORD PTR [rsi+0x6c],0x656e69
	...
  41bcfe:	add    BYTE PTR [rax],al
  41bd00:	pop    rsi
  41bd01:	and    esp,DWORD PTR [rax]
  41bd03:	sub    ebp,DWORD PTR [rcx+0x66]
  41bd06:	fs data16 and BYTE PTR gs:[rbx],ch
  41bd0b:	pop    rdi
  41bd0c:	pop    rdi
  41bd0d:	movsxd esi,DWORD PTR [rax+0x6c]
  41bd10:	jne    0x41bd85
  41bd12:	jo     0x41bd80
  41bd14:	jne    0x41bd89
  41bd16:	or     ah,BYTE PTR [rax]
  41bd18:	sub    ebx,DWORD PTR [rbp+rdi*2+0xa]
  41bd1c:	and    BYTE PTR [rbx],ch
  41bd1e:	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
  41bd25:	sub    esp,DWORD PTR [rdi+rbp*2+0x75]
  41bd29:	(bad)  
  41bd2a:	ins    BYTE PTR es:[rdi],dx
  41bd2b:	and    BYTE PTR gs:[rbx],ch
  41bd2e:	jo     0x41bd9f
  41bd30:	ja     0x41bd8e
  41bd32:	sub    BYTE PTR [rdi+rbp*2+0x75],ah
  41bd36:	(bad)  
  41bd37:	ins    BYTE PTR es:[rdi],dx
  41bd38:	and    BYTE PTR gs:[rbx],ch
  41bd3b:	pop    rdi
  41bd3c:	pop    rdi
  41bd3d:	fs sub al,0x69
  41bd40:	outs   dx,BYTE PTR ds:[rsi]
  41bd41:	je     0x41bd63
  41bd43:	sub    ebx,DWORD PTR [rdi+0x5f]
  41bd46:	gs js  0x41bdb9
  41bd49:	outs   dx,DWORD PTR ds:[rsi]
  41bd4a:	outs   dx,BYTE PTR ds:[rsi]
  41bd4b:	pop    rsp
  41bd4c:	sub    DWORD PTR [rax],esp
  41bd4e:	sub    ebx,DWORD PTR [rbx+rdi*2+0xa]
  41bd52:	pop    rbx
  41bd53:	and    BYTE PTR [rcx],cl
  41bd55:	pop    rbp
  41bd56:	sub    esi,DWORD PTR [rdx+0x65]
  41bd59:	je     0x41bdd0
  41bd5b:	jb     0x41bdcb
  41bd5d:	and    BYTE PTR [rbx],ch
  41bd5f:	jo     0x41bdd0
  41bd61:	ja     0x41bdbf
  41bd63:	sub    BYTE PTR [rdi+0x5f],bl
  41bd66:	fs sub al,0x5c
  41bd69:	sub    BYTE PTR [rdi+rbp*2+0x75],ah
  41bd6d:	(bad)  
  41bd6e:	ins    BYTE PTR es:[rdi],dx
  41bd6f:	gs pop rsp
  41bd71:	sub    DWORD PTR [rdi+0x5f],ebx
  41bd74:	gs js  0x41bde7
  41bd77:	outs   dx,DWORD PTR ds:[rsi]
  41bd78:	outs   dx,BYTE PTR ds:[rsi]
  41bd79:	pop    rsp
  41bd7a:	sub    DWORD PTR [rbx],edi
  41bd7c:	or     ah,BYTE PTR [rax]
  41bd7e:	sub    ebx,DWORD PTR [rbp+rdi*2+0xa]
  41bd82:	and    BYTE PTR [rbx],ch
  41bd84:	gs js  0x41bdfb
  41bd87:	gs jb  0x41bdf8
  41bd8a:	and    BYTE PTR [rbx],ch
  41bd8c:	and    al,BYTE PTR [rbx+0x22]
  41bd8f:	and    BYTE PTR [rbx],ch
  41bd91:	pop    rsp
  41bd92:	jnp    0x41bd9e
  41bd94:	and    esp,DWORD PTR [rbp+0x6c]
  41bd97:	jae    0x41bdfe
  41bd99:	or     ah,BYTE PTR [rbx]
  41bd9b:	and    BYTE PTR [rbx],ch
  41bd9d:	outs   dx,BYTE PTR gs:[rsi]
  41bd9f:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
	...
  41bdaf:	add    BYTE PTR [rsi+0x69],ah
  41bdb2:	js     0x41be1d
  41bdb4:	outs   dx,BYTE PTR ds:[rsi]
  41bdb5:	movsxd ebp,DWORD PTR [rip+0x74736574]        # 0x74b5232f
  41bdbb:	sub    eax,0x696d696c
  41bdc0:	je     0x41be35
  41bdc2:	cs push 0x74616d00
  41bdc8:	push   0x682e
  41bdcd:	add    BYTE PTR [rax],al
  41bdcf:	add    BYTE PTR [rax+0x70],ch
  41bdd2:	jne    0x41be4c
  41bdd4:	xor    DWORD PTR [rax],esi
  41bdd6:	pop    rdi
  41bdd7:	movsxd esi,DWORD PTR [rax+0x70]
  41bdda:	pop    rdi
  41bddb:	jo     0x41be4c
  41bddd:	ja     0x41be3e
  41bddf:	imul   ebp,DWORD PTR [rsi+0x6c],0x656e69
  41bde6:	add    BYTE PTR [rax],al
  41bde8:	and    esp,DWORD PTR [rbp+0x6e]
  41bdeb:	imul   esp,DWORD PTR fs:[rsi+0x20],0x5f202a2f
  41bdf3:	rex.WB
  41bdf4:	rex.WRX
  41bdf5:	rex.XB
  41bdf6:	rex.WR push rbp
  41bdf8:	rex.R
  41bdf9:	rex.RB pop r15
  41bdfb:	rex.W push rax
  41bdfd:	push   rbp
  41bdfe:	pop    rax
  41bdff:	pop    rdi
  41be00:	push   rbx
  41be01:	rex.WRXB push r13
  41be03:	push   rdx
  41be04:	rex.XB
  41be05:	and    BYTE PTR [r10],r13b
  41be08:	(bad)  
  41be09:	or     cl,BYTE PTR [rdx]
  41be0b:	and    ebp,DWORD PTR [rcx+0x66]
  41be0e:	and    BYTE PTR [rbp+riz*2+0x66],ah
  41be12:	imul   ebp,DWORD PTR [rsi+0x65],0x495f2864
  41be19:	rex.WRX
  41be1a:	rex.XB
  41be1b:	rex.WR push rbp
  41be1d:	rex.R
  41be1e:	rex.RB pop r15
  41be20:	rex.W push rax
  41be22:	push   rbp
  41be23:	pop    rax
  41be24:	pop    rdi
  41be25:	push   rbx
  41be26:	rex.WRXB push r13
  41be28:	push   rdx
  41be29:	rex.XB
  41be2a:	sub    DWORD PTR [r8],r12d
  41be2d:	jl     0x41beab
  41be2f:	and    BYTE PTR [rdx+rcx*1+0x20],bl
  41be33:	and    BYTE PTR [rax],ah
  41be35:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  41be39:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2864
  41be40:	push   rbx
  41be41:	push   rsp
  41be42:	rex.R
  41be43:	rex.XB pop r15
  41be45:	push   rsi
  41be46:	rex.RB push r10
  41be48:	push   rbx
  41be49:	rex.WB
  41be4a:	rex.WRXB
  41be4b:	rex.WRX pop rdi
  41be4d:	pop    rdi
  41be4e:	sub    DWORD PTR [rax],esp
  41be50:	es and BYTE PTR es:[rax],ch
  41be54:	pop    rdi
  41be55:	pop    rdi
  41be56:	push   rbx
  41be57:	push   rsp
  41be58:	rex.R
  41be59:	rex.XB pop r15
  41be5b:	push   rsi
  41be5c:	rex.RB push r10
  41be5e:	push   rbx
  41be5f:	rex.WB
  41be60:	rex.WRXB
  41be61:	rex.WRX pop rdi
  41be63:	pop    rdi
  41be64:	and    BYTE PTR [rsi],bh
  41be66:	cmp    eax,0x39393120
  41be6b:	cmp    DWORD PTR [rax],esi
  41be6d:	xor    DWORD PTR [rcx+rbp*1+0x29],ecx
  41be71:	or     ah,BYTE PTR [rip+0x6e652330]        # 0x6ea6e1a7
  41be77:	imul   esp,DWORD PTR fs:[rsi+0xa],0x6669230a
  41be7f:	fs data16 and BYTE PTR gs:[rdi+0x49],bl
  41be85:	rex.WRX
  41be86:	rex.XB
  41be87:	rex.WR push rbp
  41be89:	rex.R
  41be8a:	rex.RB pop r15
  41be8c:	rex.W push rax
  41be8e:	push   rbp
  41be8f:	pop    rax
  41be90:	pop    rdi
  41be91:	push   rbx
  41be92:	rex.WRXB push r13
  41be94:	push   rdx
  41be95:	rex.XB
  41be96:	or     r8b,BYTE PTR [r8]
	...
  41bebd:	add    BYTE PTR [rax],al
  41bebf:	add    BYTE PTR [rbx],ah
  41bec1:	pop    rbx
  41bec2:	and    BYTE PTR [rcx],cl
  41bec4:	pop    rbp
  41bec5:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41bec9:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41bed0:	sub    al,BYTE PTR [rsi+0x50]
  41bed3:	pop    rdi
  41bed4:	rex.WRX
  41bed5:	rex.WRXB push r10
  41bed7:	rex.WRB
  41bed8:	rex.B
  41bed9:	rex.WR
  41beda:	sub    cl,BYTE PTR cs:[rdx]
  41bedd:	and    ebx,DWORD PTR [rbx+0x20]
  41bee0:	or     DWORD PTR [rbp+0x2a],ebx
  41bee3:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41beeb:	or     DWORD PTR [rbp+0x2a],ebx
  41beee:	rex.RX push rax
  41bef0:	pop    rdi
  41bef1:	pop    rdx
  41bef2:	rex.RB push r10
  41bef4:	rex.WRXB
  41bef5:	sub    cl,BYTE PTR cs:[rdx]
  41bef8:	and    ebx,DWORD PTR [rbx+0x20]
  41befb:	or     DWORD PTR [rbp+0x2a],ebx
  41befe:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41bf06:	or     DWORD PTR [rbp+0x2a],ebx
  41bf09:	rex.RX push rax
  41bf0b:	pop    rdi
  41bf0c:	rex.WB
  41bf0d:	rex.WRX
  41bf0e:	rex.RX
  41bf0f:	rex.WB
  41bf10:	rex.WRX
  41bf11:	rex.WB push r12
  41bf13:	rex.RB
  41bf14:	sub    cl,BYTE PTR cs:[rdx]
  41bf17:	and    ebx,DWORD PTR [rbx+0x20]
  41bf1a:	or     DWORD PTR [rbp+0x2a],ebx
  41bf1d:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41bf25:	or     DWORD PTR [rbp+0x2a],ebx
  41bf28:	rex.RX push rax
  41bf2a:	pop    rdi
  41bf2b:	push   rbx
  41bf2c:	push   rbp
  41bf2d:	rex.X
  41bf2e:	rex.WRX
  41bf2f:	rex.WRXB push r10
  41bf31:	rex.WRB
  41bf32:	rex.B
  41bf33:	rex.WR
  41bf34:	sub    cl,BYTE PTR cs:[rdx]
  41bf37:	and    ebx,DWORD PTR [rbx+0x20]
  41bf3a:	or     DWORD PTR [rbp+0x2a],ebx
  41bf3d:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41bf45:	or     DWORD PTR [rbp+0x2a],ebx
  41bf48:	rex.RX push rax
  41bf4a:	pop    rdi
  41bf4b:	rex.WRX
  41bf4c:	rex.B
  41bf4d:	rex.WRX
  41bf4e:	sub    cl,BYTE PTR cs:[rdx]
  41bf51:	add    BYTE PTR [rax+0x70],ch
  41bf54:	jo     0x41bfb7
  41bf56:	sub    ch,BYTE PTR [rip+0x682d7068]        # 0x686f2fc4
  41bf5c:	jo     0x41bfd3
  41bf5e:	js     0x41bf91
  41bf60:	xor    DWORD PTR [rdx],ebp
  41bf62:	add    BYTE PTR [rbp+0x61],ch
  41bf65:	je     0x41bfcf
  41bf67:	cs push 0x0
  41bf6d:	add    BYTE PTR [rax],al
  41bf6f:	add    BYTE PTR [rax+0x70],ch
  41bf72:	jo     0x41bfd5
  41bf74:	pop    rdi
  41bf75:	push   0x5f787570
  41bf7a:	data16 jo 0x41bfdc
  41bf7d:	ins    DWORD PTR es:[rdi],dx
  41bf7e:	(bad)  
  41bf7f:	movsxd esi,DWORD PTR [rdx+0x6f]
  41bf82:	jae    0x41bf84
  41bf84:	sub    BYTE PTR [rbx+0x74],dh
  41bf87:	jb     0x41bffe
  41bf89:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  41bf8d:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x2e202c2a
  41bf95:	cs sub DWORD PTR cs:[rax],eax
  41bf99:	pop    rsp
  41bf9a:	sub    BYTE PTR [rsi+rbp*1+0x5c],bl
  41bf9e:	cs pop rsp
  41bfa0:	cs pop rsp
  41bfa2:	sub    DWORD PTR [rax],eax
  41bfa4:	rex.W push rax
  41bfa6:	push   rbp
  41bfa7:	pop    rax
  41bfa8:	pop    rdi
  41bfa9:	push   rbx
  41bfaa:	rex.WRXB push r13
  41bfac:	push   rdx
  41bfad:	rex.XB
  41bfae:	add    BYTE PTR [r11+0x79],r14b
  41bfb2:	jae    0x41bfe3
  41bfb4:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x68
  41bfbb:	add    BYTE PTR [rax+0x70],ch
  41bfbe:	pop    rdi
  41bfbf:	jae    0x41c03a
  41bfc1:	jae    0x41c029
  41bfc3:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x6d3c3125
  41bfcb:	(bad)  
  41bfcc:	movsxd ebp,DWORD PTR [rax+0x69]
  41bfcf:	outs   dx,BYTE PTR ds:[rsi]
  41bfd0:	gs (bad) 
  41bfd2:	and    eax,0x3e682e32
  41bfd7:	add    BYTE PTR [rax],ch
  41bfd9:	pop    rbx
  41bfda:	and    BYTE PTR [rcx],cl
  41bfdc:	pop    rbp
  41bfdd:	sub    ah,BYTE PTR [rbx]
  41bfdf:	pop    rbx
  41bfe0:	and    BYTE PTR [rcx],cl
  41bfe2:	pop    rbp
  41bfe3:	sub    ch,BYTE PTR [rcx+0x6e]
  41bfe6:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  41bfea:	gs pop rbx
  41bfec:	and    BYTE PTR [rcx],cl
  41bfee:	pop    rbp
  41bfef:	sub    ebp,DWORD PTR [rcx]
  41bff1:	and    bl,BYTE PTR [rsi+rbp*1+0x5c]
  41bff5:	cs (bad) 
  41bff7:	ins    DWORD PTR es:[rdi],dx
  41bff8:	(bad)  
  41bff9:	movsxd ebp,DWORD PTR [rax+0x69]
  41bffc:	outs   dx,BYTE PTR ds:[rsi]
  41bffd:	gs (bad) 
  41bfff:	sub    BYTE PTR [rbx+0x61],bl
  41c002:	sub    eax,0x292b5d7a
  41c007:	pop    rsp
  41c008:	cs push 0x22
	...
  41c01e:	add    BYTE PTR [rax],al
  41c020:	pop    rbx
  41c021:	and    BYTE PTR [rcx],cl
  41c023:	pop    rbp
  41c024:	sub    ah,BYTE PTR [rbx]
  41c026:	pop    rbx
  41c027:	and    BYTE PTR [rcx],cl
  41c029:	pop    rbp
  41c02a:	sub    ch,BYTE PTR [rcx+0x6e]
  41c02d:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  41c031:	gs pop rbx
  41c033:	and    BYTE PTR [rcx],cl
  41c035:	pop    rbp
  41c036:	sub    esp,DWORD PTR [rdx]
  41c038:	pop    rsp
  41c039:	cs pop rsp
  41c03b:	cs (bad) 
  41c03d:	ins    DWORD PTR es:[rdi],dx
  41c03e:	(bad)  
  41c03f:	movsxd ebp,DWORD PTR [rax+0x69]
  41c042:	outs   dx,BYTE PTR ds:[rsi]
  41c043:	gs (bad) 
	...
  41c05d:	add    BYTE PTR [rax],al
  41c05f:	add    BYTE PTR [rbx+0x79],dh
  41c062:	jae    0x41c093
  41c064:	jae    0x41c0d6
  41c066:	imul   ebp,DWORD PTR [rsi+0x6c],0x2e6b636f
  41c06d:	push   0x63616d00
  41c072:	push   0x2f656e69
  41c077:	ins    DWORD PTR es:[rdi],dx
  41c078:	(bad)  
  41c079:	movsxd ebp,DWORD PTR [rax+0x70]
  41c07c:	(bad)  
  41c07d:	jb     0x41c0e0
  41c07f:	ins    DWORD PTR es:[rdi],dx
  41c080:	cs push 0x70680000
  41c086:	pop    rdi
  41c087:	imul   ebp,DWORD PTR [rsi+0x6c],0x656e69
  41c08e:	outs   dx,BYTE PTR ds:[esi]
  41c090:	jne    0x41c0f1
  41c092:	je     0x41c10d
  41c094:	jo     0x41c0fb
	...
  41c09e:	add    BYTE PTR [rax],al
  41c0a0:	pop    rdi
  41c0a1:	rex.RXB
  41c0a2:	rex.XB
  41c0a3:	rex.XB pop r15
  41c0a5:	sub    BYTE PTR [rax+0x54],dl
  41c0a8:	push   rdx
  41c0a9:	rex.R
  41c0aa:	rex.WB
  41c0ab:	rex.RX
  41c0ac:	rex.RX jl 0x41c102
  41c0af:	rex.WB pop r10
  41c0b1:	rex.RB jl 0x41c10b
  41c0b4:	rex.XB
  41c0b5:	rex.W
  41c0b6:	push   r10
  41c0b8:	sub    DWORD PTR [rdi+0x54],ebx
  41c0bb:	add    BYTE PTR [rax],al
  41c0bd:	add    BYTE PTR [rax],al
  41c0bf:	add    BYTE PTR [rsi+0x5b],bl
  41c0c2:	and    BYTE PTR [rcx],cl
  41c0c4:	pop    rbp
  41c0c5:	sub    dh,BYTE PTR [rcx+rdi*2+0x70]
  41c0c9:	gs fs gs pop bx
  41c0ce:	and    BYTE PTR [rcx],cl
  41c0d0:	pop    rbp
  41c0d1:	sub    ebp,DWORD PTR [rsi]
  41c0d3:	sub    bl,BYTE PTR [rbx+0x20]
  41c0d6:	or     DWORD PTR [rbp+0x28],ebx
  41c0d9:	jo     0x41c14f
  41c0db:	jb     0x41c141
  41c0dd:	imul   esp,DWORD PTR [rsi+0x66],0x7a69737c
  41c0e4:	gs jl  0x41c15e
  41c0e7:	movsxd ebp,DWORD PTR [rax+0x61]
  41c0ea:	jb     0x41c115
  41c0ec:	pop    rdi
  41c0ed:	je     0x41c12a
	...
  41c0ff:	add    BYTE PTR [rbx+0x79],dh
  41c102:	jae    0x41c133
  41c104:	je     0x41c17f
  41c106:	jo     0x41c16d
  41c108:	jae    0x41c138
  41c10a:	push   0x64747300
  41c10f:	ins    BYTE PTR es:[rdi],dx
  41c110:	imul   esp,DWORD PTR [rdx+0x2e],0x79730068
  41c117:	jae    0x41c148
  41c119:	jae    0x41c18f
  41c11b:	fs je  0x41c197
  41c11e:	jo     0x41c185
  41c120:	jae    0x41c150
  41c122:	push   0x64747300
  41c127:	fs gs cs pushw 0x6d00
  41c12e:	gs ins DWORD PTR es:[rdi],dx
  41c130:	outs   dx,DWORD PTR ds:[rsi]
  41c131:	jb     0x41c1ac
  41c133:	cs push 0x696e7500
  41c139:	jae    0x41c1af
  41c13b:	fs cs push 0x6e670000
  41c142:	jne    0x41c1a3
  41c144:	je     0x41c1bf
  41c146:	jo     0x41c1ad
  41c148:	jae    0x41c14a
  41c14a:	add    BYTE PTR [rax],al
  41c14c:	add    BYTE PTR [rax],al
  41c14e:	add    BYTE PTR [rax],al
  41c150:	sub    BYTE PTR [rdi+0x5f],bl
  41c153:	(bad)  
  41c154:	jne    0x41c1bf
  41c156:	ins    BYTE PTR es:[rdi],dx
  41c157:	je     0x41c1c2
  41c159:	outs   dx,BYTE PTR ds:[rsi]
  41c15a:	pop    rdi
  41c15b:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  41c15f:	jae    0x41c1ca
  41c161:	data16 jns 0x41c1c3
  41c164:	je     0x41c1df
  41c166:	jo     0x41c1cd
  41c168:	and    BYTE PTR [rax],ch
  41c16a:	sub    BYTE PTR [rcx+rdi*2+0x70],dh
  41c16e:	sub    DWORD PTR gs:[rax],esp
  41c171:	xor    BYTE PTR [rcx],ch
  41c173:	and    BYTE PTR [rip+0x2038203d],bh        # 0x2079e1b6
  41c179:	jl     0x41c1f7
  41c17b:	and    BYTE PTR [rax],ch
  41c17d:	pop    rdi
  41c17e:	pop    rdi
  41c17f:	(bad)  
  41c180:	jne    0x41c1eb
  41c182:	ins    BYTE PTR es:[rdi],dx
  41c183:	je     0x41c1ee
  41c185:	outs   dx,BYTE PTR ds:[rsi]
  41c186:	pop    rdi
  41c187:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  41c18b:	jae    0x41c1f6
  41c18d:	data16 jns 0x41c1ef
  41c190:	je     0x41c20b
  41c192:	jo     0x41c1f9
  41c194:	and    BYTE PTR [rax],ch
  41c196:	sub    BYTE PTR [rcx+rdi*2+0x70],dh
  41c19a:	sub    DWORD PTR gs:[rax],esp
  41c19d:	xor    BYTE PTR [rcx],ch
  41c19f:	and    BYTE PTR [rip+0x2039203d],bh        # 0x207ae1e2
  41c1a5:	es and BYTE PTR es:[rdi+0x5f],bl
  41c1aa:	(bad)  
  41c1ab:	jne    0x41c216
  41c1ad:	ins    BYTE PTR es:[rdi],dx
  41c1ae:	je     0x41c219
  41c1b0:	outs   dx,BYTE PTR ds:[rsi]
  41c1b1:	pop    rdi
  41c1b2:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  41c1b6:	jae    0x41c221
  41c1b8:	data16 jns 0x41c21a
  41c1bb:	je     0x41c236
  41c1bd:	jo     0x41c224
  41c1bf:	and    BYTE PTR [rax],ch
  41c1c1:	pop    rdi
  41c1c2:	pop    rdi
  41c1c3:	jb     0x41c22a
  41c1c5:	(bad)  
  41c1c6:	ins    BYTE PTR es:[rdi],dx
  41c1c7:	pop    rdi
  41c1c8:	pop    rdi
  41c1c9:	and    BYTE PTR [rax],ch
  41c1cb:	sub    BYTE PTR [rcx+rdi*2+0x70],dh
  41c1cf:	sub    DWORD PTR gs:[rax],esp
  41c1d2:	xor    BYTE PTR [rcx],ch
  41c1d4:	sub    DWORD PTR [rax],esp
  41c1d6:	cmp    eax,0x2938203d
  41c1db:	sub    DWORD PTR [rax],eax
  41c1dd:	add    BYTE PTR [rax],al
  41c1df:	add    BYTE PTR [rdi+0x5f],bl
  41c1e2:	data16 ins BYTE PTR es:[rdi],dx
  41c1e4:	outs   dx,DWORD PTR ds:[rsi]
  41c1e5:	(bad)  
  41c1e6:	je     0x41c251
  41c1e8:	outs   dx,BYTE PTR ds:[rsi]
  41c1e9:	addr32 pop rdi
  41c1eb:	je     0x41c266
  41c1ed:	jo     0x41c254
  41c1ef:	pop    rsp
  41c1f0:	sub    BYTE PTR [rcx+rdi*2+0x70],dh
  41c1f4:	gs pop rsp
  41c1f6:	sub    DWORD PTR [rax],esp
  41c1f8:	pop    rsp
  41c1f9:	pop    rsp
  41c1fa:	or     ch,BYTE PTR [rsi]
  41c1fc:	sub    bl,BYTE PTR [rdi+0x5f]
  41c1ff:	(bad)  
  41c200:	jne    0x41c26b
  41c202:	ins    BYTE PTR es:[rdi],dx
  41c203:	je     0x41c26e
  41c205:	outs   dx,BYTE PTR ds:[rsi]
  41c206:	pop    rdi
  41c207:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  41c20b:	jae    0x41c276
  41c20d:	data16 jns 0x41c26f
  41c210:	je     0x41c28b
  41c212:	jo     0x41c279
	...
  41c220:	pop    rsp
  41c221:	sub    BYTE PTR [rax+rbp*1+0x5c],bl
  41c225:	sub    BYTE PTR [rcx+rdi*2+0x70],dh
  41c229:	gs pop rsp
  41c22b:	sub    DWORD PTR [rax],esp
  41c22d:	xor    BYTE PTR [rsi],ch
  41c22f:	xor    dh,BYTE PTR [rip+0x2620295c]        # 0x2661eb91
  41c235:	and    BYTE PTR es:[rax+rbp*1+0x5c],bl
  41c23a:	sub    BYTE PTR [rcx+rdi*2+0x70],dh
  41c23e:	gs pop rsp
  41c240:	sub    DWORD PTR [rax],esp
  41c242:	xor    BYTE PTR [rsi],ch
  41c244:	xor    dh,BYTE PTR [rip+0x31202d20]        # 0x3161ef6a
  41c24a:	pop    rsp
  41c24b:	sub    DWORD PTR [rcx+rbp*1+0x0],ebx
  41c24f:	je     0x41c2b8
  41c251:	ins    DWORD PTR es:[rdi],dx
  41c252:	(bad)  
  41c253:	je     0x41c2bd
  41c255:	cs push 0x6c670000
  41c25b:	imul   esp,DWORD PTR [rdx+0x63],0x6d67745f
  41c262:	(bad)  
  41c263:	je     0x41c2cd
  41c265:	add    BYTE PTR [rax],al
  41c267:	add    BYTE PTR [rbx],ah
  41c269:	and    BYTE PTR [rax],ah
  41c26b:	fs imul bp,WORD PTR gs:[rsi+0x65],0x7320
  41c273:	je     0x41c2e7
  41c275:	outs   dx,BYTE PTR ds:[rsi]
  41c276:	movsxd esi,DWORD PTR [rax+0x79]
  41c279:	sub    BYTE PTR [rbp+riz*2+0x73],ah
  41c27d:	je     0x41c2ab
  41c27f:	and    BYTE PTR [rbx+0x72],dh
  41c282:	movsxd ebp,DWORD PTR [rax+riz*1]
  41c285:	outs   dx,BYTE PTR ds:[rsi]
  41c286:	sub    DWORD PTR [rax],esp
  41c288:	pop    rdi
  41c289:	pop    rdi
  41c28a:	(bad)  
  41c28b:	jne    0x41c2f6
  41c28d:	ins    BYTE PTR es:[rdi],dx
  41c28e:	je     0x41c2f9
  41c290:	outs   dx,BYTE PTR ds:[rsi]
  41c291:	pop    rdi
  41c292:	jae    0x41c308
  41c294:	jb     0x41c304
  41c296:	movsxd esi,DWORD PTR [rax+0x79]
  41c299:	and    BYTE PTR [rax],ch
  41c29b:	fs gs jae 0x41c313
  41c29f:	sub    al,0x20
  41c2a1:	jae    0x41c315
  41c2a3:	movsxd ebp,DWORD PTR [rax+riz*1]
  41c2a6:	outs   dx,BYTE PTR ds:[rsi]
  41c2a7:	sub    DWORD PTR [rax],eax
  41c2a9:	add    BYTE PTR [rax],al
  41c2ab:	add    BYTE PTR [rax],al
  41c2ad:	add    BYTE PTR [rax],al
  41c2af:	add    BYTE PTR [rbx],ah
  41c2b1:	and    BYTE PTR [rax],ah
  41c2b3:	fs imul bp,WORD PTR gs:[rsi+0x65],0x7320
  41c2bb:	je     0x41c32f
  41c2bd:	outs   dx,BYTE PTR ds:[rsi]
  41c2be:	movsxd esi,DWORD PTR [rax+0x79]
  41c2c1:	sub    BYTE PTR [rbx+0x5e],bl
  41c2c4:	or     bl,BYTE PTR [rbp+0x2a]
  41c2c7:	pop    rsp
  41c2c8:	pop    rsp
  41c2c9:	or     ch,BYTE PTR [rcx]
  41c2cb:	sub    bl,BYTE PTR [rbx+0x5e]
  41c2ce:	or     bl,BYTE PTR [rbp+0x2a]
	...
  41c2dd:	add    BYTE PTR [rax],al
  41c2df:	add    BYTE PTR [rdi+0x5f],bl
  41c2e2:	(bad)  
  41c2e3:	jne    0x41c34e
  41c2e5:	ins    BYTE PTR es:[rdi],dx
  41c2e6:	je     0x41c351
  41c2e8:	outs   dx,BYTE PTR ds:[rsi]
  41c2e9:	pop    rdi
  41c2ea:	jae    0x41c360
  41c2ec:	jb     0x41c35c
  41c2ee:	movsxd esi,DWORD PTR [rax+0x79]
	...
  41c2fd:	add    BYTE PTR [rax],al
  41c2ff:	add    BYTE PTR [rdx+0x69],ah
  41c302:	je     0x41c377
  41c304:	(bad)  
  41c305:	jae    0x41c37b
  41c307:	jb     0x41c372
  41c309:	outs   dx,BYTE PTR ds:[rsi]
  41c30a:	xor    ch,BYTE PTR [esi]
  41c30d:	push   0x622f2a00
  41c312:	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x69727473
  41c31a:	outs   dx,BYTE PTR ds:[rsi]
  41c31b:	xor    ch,BYTE PTR [esi]
  41c31e:	push   0x6c670000
  41c323:	imul   esp,DWORD PTR [rdx+0x63],0x7274735f
  41c32a:	outs   dx,BYTE PTR ds:[rsi]
  41c32b:	movsxd esi,DWORD PTR [rax+0x79]
  41c32e:	add    BYTE PTR [rax],al
  41c330:	and    esp,DWORD PTR [rax]
  41c332:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41c33a:	rex.WB
  41c33b:	rex.WRX push rsp
  41c33d:	cmp    BYTE PTR [rdi+0x43],bl
  41c340:	sub    BYTE PTR [rbx+0x29],ah
  41c343:	or     DWORD PTR [rbx+0xa],esp
  41c346:	and    esp,DWORD PTR [rax]
  41c348:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41c350:	rex.WB
  41c351:	rex.WRX push rsp
  41c353:	xor    DWORD PTR [rsi],esi
  41c355:	pop    rdi
  41c356:	rex.XB sub BYTE PTR [r11+0x29],spl
  41c35a:	or     DWORD PTR [rbx+0x0],esp
  41c35d:	add    BYTE PTR [rax],al
  41c35f:	add    BYTE PTR [rbx],ah
  41c361:	and    BYTE PTR [rbp+riz*2+0x66],ah
  41c365:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41c36c:	push   rsp
  41c36d:	cmp    BYTE PTR [rdi+0x43],bl
  41c370:	pop    rsp
  41c371:	sub    BYTE PTR [rbx+0x5c],ah
  41c374:	sub    DWORD PTR [rcx],ecx
  41c376:	movsxd esp,DWORD PTR [rax]
  41c378:	and    esp,DWORD PTR [rbx]
  41c37a:	and    BYTE PTR [rbp+0xa],dl
  41c37d:	and    esp,DWORD PTR [rax]
  41c37f:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41c387:	rex.WB
  41c388:	rex.WRX push rsp
  41c38a:	xor    DWORD PTR [rsi],esi
  41c38c:	pop    rdi
  41c38d:	rex.XB pop r12
  41c38f:	sub    BYTE PTR [rbx+0x5c],ah
  41c392:	sub    DWORD PTR [rcx],ecx
  41c394:	movsxd esp,DWORD PTR [rax]
  41c396:	and    esp,DWORD PTR [rbx]
  41c398:	and    BYTE PTR [rbp+0x0],dl
  41c39b:	rex.RXB
  41c39c:	rex.WRX push rbp
  41c39e:	and    BYTE PTR [rbx+0x20],al
  41c3a1:	imul   r12,QWORD PTR [rdx+0x72],0x797261
  41c3a9:	jae    0x41c41f
  41c3ab:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x682e
  41c3b3:	ins    BYTE PTR es:[edi],dx
  41c3b5:	imul   esp,DWORD PTR [rdx+0x63],0x6474735f
  41c3bc:	imul   ebp,DWORD PTR [rsi+0x74],0x65642f00
  41c3c3:	imul   bp,WORD PTR [rsi+0x65],0x205b
  41c3c9:	or     DWORD PTR [rbp+0x5c],ebx
  41c3cc:	jnp    0x41c3ff
  41c3ce:	sub    al,0x5c
  41c3d0:	jge    0x41c422
  41c3d2:	push   rsp
  41c3d3:	rex.W push rdx
  41c3d5:	rex.RB
  41c3d6:	rex.B
  41c3d7:	rex.R pop rdi
  41c3d9:	rex.WRB push r13
  41c3db:	push   rsp
  41c3dc:	rex.RB pop r8
  41c3de:	pop    rdi
  41c3df:	rex.WB
  41c3e0:	rex.WRX
  41c3e1:	rex.WB push r12
  41c3e3:	rex.WB
  41c3e4:	rex.B
  41c3e5:	rex.WR
  41c3e6:	rex.WB pop r10
  41c3e8:	rex.RB push r10
  41c3ea:	pop    rbx
  41c3eb:	and    BYTE PTR [rcx],cl
  41c3ed:	pop    rbp
  41c3ee:	sub    bl,BYTE PTR [rsp+rbx*2+0x2f]
  41c3f2:	jnp    0x41c3fe
  41c3f4:	rex.WRX or r14b,BYTE PTR [rbx+0x2f]
  41c3f8:	jnp    0x41c41a
  41c3fa:	jnp    0x41c41c
  41c3fc:	xor    BYTE PTR [rax+riz*1],ch
  41c3ff:	jge    0x41c421
  41c401:	jge    0x41c432
  41c403:	jnp    0x41c425
  41c405:	jnp    0x41c427
  41c407:	xor    BYTE PTR [rax+riz*1],ch
  41c40a:	xor    BYTE PTR [rax+riz*1],ch
  41c40d:	xor    BYTE PTR [rax+riz*1],ch
  41c410:	xor    BYTE PTR [rax+riz*1],ch
  41c413:	xor    BYTE PTR [rax+riz*1],ch
  41c416:	xor    BYTE PTR [rax],ah
  41c418:	jge    0x41c43a
  41c41a:	jge    0x41c44b
  41c41c:	or     bh,BYTE PTR [rbp+0x0]
  41c41f:	add    BYTE PTR [rbx+0x2f],dh
  41c422:	jnp    0x41c444
  41c424:	pop    rsp
  41c425:	sub    BYTE PTR [rax],dh
  41c427:	sub    al,0x20
  41c429:	xor    BYTE PTR [rax+riz*1],ch
  41c42c:	xor    BYTE PTR [rax+riz*1],ch
  41c42f:	xor    BYTE PTR [rax+riz*1],ch
  41c432:	push   rax
  41c433:	push   rsp
  41c434:	rex.W push rdx
  41c436:	rex.RB
  41c437:	rex.B
  41c438:	rex.R pop rdi
  41c43a:	rex.WRB push r13
  41c43c:	push   rsp
  41c43d:	rex.RB pop r8
  41c43f:	pop    rdi
  41c440:	pop    rsp
  41c441:	sub    BYTE PTR [rdx+0x45],dl
  41c444:	rex.XB push r13
  41c446:	push   rdx
  41c447:	push   rbx
  41c448:	rex.WB push r14
  41c44a:	rex.RB pop r12
  41c44c:	sub    DWORD PTR [rdi+0x4e],ebx
  41c44f:	push   rax
  41c450:	pop    rsp
  41c451:	sub    DWORD PTR [rax],esp
  41c453:	jge    0x41c484
  41c455:	jnp    0x41c477
  41c457:	pop    rsp
  41c458:	xor    DWORD PTR [rax+riz*1],ebp
  41c45b:	xor    BYTE PTR [rax],ah
  41c45d:	jge    0x41c48e
  41c45f:	add    BYTE PTR [rbx+0x2f],dh
  41c462:	jnp    0x41c484
  41c464:	pop    rsp
  41c465:	sub    BYTE PTR [rax],dh
  41c467:	sub    al,0x20
  41c469:	xor    BYTE PTR [rax+riz*1],ch
  41c46c:	xor    BYTE PTR [rax+riz*1],ch
  41c46f:	xor    BYTE PTR [rax+riz*1],ch
  41c472:	push   rax
  41c473:	push   rsp
  41c474:	rex.W push rdx
  41c476:	rex.RB
  41c477:	rex.B
  41c478:	rex.R pop rdi
  41c47a:	rex.WRB push r13
  41c47c:	push   rsp
  41c47d:	rex.RB pop r8
  41c47f:	pop    rdi
  41c480:	pop    rsp
  41c481:	sub    BYTE PTR [rbp+0x52],al
  41c484:	push   rdx
  41c485:	rex.WRXB push r10
  41c487:	rex.XB
  41c488:	rex.W
  41c489:	rex.RB
  41c48a:	rex.XB
  41c48b:	rex.WXB pop r12
  41c48d:	sub    DWORD PTR [rdi+0x4e],ebx
  41c490:	push   rax
  41c491:	pop    rsp
  41c492:	sub    DWORD PTR [rax],esp
  41c494:	jge    0x41c4c5
  41c496:	jnp    0x41c4b8
  41c498:	pop    rsp
  41c499:	xor    DWORD PTR [rax+riz*1],ebp
  41c49c:	xor    BYTE PTR [rax],ah
  41c49e:	jge    0x41c4cf
	...
  41c4a8:	jae    0x41c4d9
  41c4aa:	jnp    0x41c4cc
  41c4ac:	pop    rsp
  41c4ad:	sub    BYTE PTR [rax],dh
  41c4af:	sub    al,0x20
  41c4b1:	xor    BYTE PTR [rax+riz*1],ch
  41c4b4:	xor    BYTE PTR [rax+riz*1],ch
  41c4b7:	xor    BYTE PTR [rax+riz*1],ch
  41c4ba:	push   rax
  41c4bb:	push   rsp
  41c4bc:	rex.W push rdx
  41c4be:	rex.RB
  41c4bf:	rex.B
  41c4c0:	rex.R pop rdi
  41c4c2:	rex.WRB push r13
  41c4c4:	push   rsp
  41c4c5:	rex.RB pop r8
  41c4c7:	pop    rdi
  41c4c8:	pop    rsp
  41c4c9:	sub    BYTE PTR [rcx+0x44],al
  41c4cc:	push   r8
  41c4ce:	push   rsp
  41c4cf:	rex.WB push r14
  41c4d1:	rex.RB pop r12
  41c4d3:	sub    DWORD PTR [rdi+0x4e],ebx
  41c4d6:	push   rax
  41c4d7:	pop    rsp
  41c4d8:	sub    DWORD PTR [rax],esp
  41c4da:	jge    0x41c50b
  41c4dc:	jnp    0x41c4fe
  41c4de:	pop    rsp
  41c4df:	xor    DWORD PTR [rax+riz*1],ebp
  41c4e2:	xor    BYTE PTR [rax],ah
  41c4e4:	jge    0x41c515
  41c4e6:	add    BYTE PTR [rax],al
  41c4e8:	jae    0x41c519
  41c4ea:	jnp    0x41c50c
  41c4ec:	pop    rsp
  41c4ed:	sub    BYTE PTR [rax],dh
  41c4ef:	sub    al,0x20
  41c4f1:	xor    BYTE PTR [rax+riz*1],ch
  41c4f4:	xor    BYTE PTR [rax+riz*1],ch
  41c4f7:	push   rax
  41c4f8:	push   rsp
  41c4f9:	rex.W push rdx
  41c4fb:	rex.RB
  41c4fc:	rex.B
  41c4fd:	rex.R pop rdi
  41c4ff:	rex.WRB push r13
  41c501:	push   rsp
  41c502:	rex.RB pop r8
  41c504:	pop    rdi
  41c505:	pop    rsp
  41c506:	sub    BYTE PTR [rdx+0x45],dl
  41c509:	rex.XB push r13
  41c50b:	push   rdx
  41c50c:	push   rbx
  41c50d:	rex.WB push r14
  41c50f:	rex.RB pop r12
  41c511:	sub    DWORD PTR [rdi+0x4e],ebx
  41c514:	push   rax
  41c515:	pop    rsp
  41c516:	sub    DWORD PTR [rax],esp
  41c518:	jge    0x41c549
  41c51a:	jnp    0x41c53c
  41c51c:	pop    rsp
  41c51d:	xor    DWORD PTR [rax+riz*1],ebp
  41c520:	xor    BYTE PTR [rax+riz*1],ch
  41c523:	xor    BYTE PTR [rax],ah
  41c525:	jge    0x41c556
  41c527:	add    BYTE PTR [rbx+0x2f],dh
  41c52a:	jnp    0x41c54c
  41c52c:	pop    rsp
  41c52d:	sub    BYTE PTR [rax],dh
  41c52f:	sub    al,0x20
  41c531:	xor    BYTE PTR [rax+riz*1],ch
  41c534:	xor    BYTE PTR [rax+riz*1],ch
  41c537:	push   rax
  41c538:	push   rsp
  41c539:	rex.W push rdx
  41c53b:	rex.RB
  41c53c:	rex.B
  41c53d:	rex.R pop rdi
  41c53f:	rex.WRB push r13
  41c541:	push   rsp
  41c542:	rex.RB pop r8
  41c544:	pop    rdi
  41c545:	pop    rsp
  41c546:	sub    BYTE PTR [rbp+0x52],al
  41c549:	push   rdx
  41c54a:	rex.WRXB push r10
  41c54c:	rex.XB
  41c54d:	rex.W
  41c54e:	rex.RB
  41c54f:	rex.XB
  41c550:	rex.WXB pop r12
  41c552:	sub    DWORD PTR [rdi+0x4e],ebx
  41c555:	push   rax
  41c556:	pop    rsp
  41c557:	sub    DWORD PTR [rax],esp
  41c559:	jge    0x41c58a
  41c55b:	jnp    0x41c57d
  41c55d:	pop    rsp
  41c55e:	xor    DWORD PTR [rax+riz*1],ebp
  41c561:	xor    BYTE PTR [rax+riz*1],ch
  41c564:	xor    BYTE PTR [rax],ah
  41c566:	jge    0x41c597
	...
  41c570:	jae    0x41c5a1
  41c572:	jnp    0x41c594
  41c574:	pop    rsp
  41c575:	sub    BYTE PTR [rax],dh
  41c577:	sub    al,0x20
  41c579:	xor    BYTE PTR [rax+riz*1],ch
  41c57c:	xor    BYTE PTR [rax+riz*1],ch
  41c57f:	push   rax
  41c580:	push   rsp
  41c581:	rex.W push rdx
  41c583:	rex.RB
  41c584:	rex.B
  41c585:	rex.R pop rdi
  41c587:	rex.WRB push r13
  41c589:	push   rsp
  41c58a:	rex.RB pop r8
  41c58c:	pop    rdi
  41c58d:	pop    rsp
  41c58e:	sub    BYTE PTR [rcx+0x44],al
  41c591:	push   r8
  41c593:	push   rsp
  41c594:	rex.WB push r14
  41c596:	rex.RB pop r12
  41c598:	sub    DWORD PTR [rdi+0x4e],ebx
  41c59b:	push   rax
  41c59c:	pop    rsp
  41c59d:	sub    DWORD PTR [rax],esp
  41c59f:	jge    0x41c5d0
  41c5a1:	jnp    0x41c5c3
  41c5a3:	pop    rsp
  41c5a4:	xor    DWORD PTR [rax+riz*1],ebp
  41c5a7:	xor    BYTE PTR [rax+riz*1],ch
  41c5aa:	xor    BYTE PTR [rax],ah
  41c5ac:	jge    0x41c5dd
  41c5ae:	add    BYTE PTR [rax],al
  41c5b0:	(bad)  
  41c5b1:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41c5b9:	or     DWORD PTR [rbp+0x5c],ebx
  41c5bc:	jnp    0x41c5ef
  41c5be:	sub    al,0x5c
  41c5c0:	jge    0x41c612
  41c5c2:	push   rsp
  41c5c3:	rex.W push rdx
  41c5c5:	rex.RB
  41c5c6:	rex.B
  41c5c7:	rex.R pop rdi
  41c5c9:	push   rdx
  41c5ca:	push   rdi
  41c5cb:	rex.WR
  41c5cc:	rex.WRXB
  41c5cd:	rex.XB
  41c5ce:	rex.WXB pop r15
  41c5d0:	rex.WB
  41c5d1:	rex.WRX
  41c5d2:	rex.WB push r12
  41c5d4:	rex.WB
  41c5d5:	rex.B
  41c5d6:	rex.WR
  41c5d7:	rex.WB pop r10
  41c5d9:	rex.RB push r10
  41c5db:	pop    rbx
  41c5dc:	and    BYTE PTR [rcx],cl
  41c5de:	pop    rbp
  41c5df:	sub    bl,BYTE PTR [rsp+rbx*2+0x2f]
  41c5e3:	rex.WRX cmp r14,QWORD PTR [rbx+0x2f]
  41c5e7:	pop    rsi
  41c5e8:	pop    rbx
  41c5e9:	and    BYTE PTR [rcx],cl
  41c5eb:	pop    rbp
  41c5ec:	sub    ah,BYTE PTR [rbx]
  41c5ee:	pop    rbx
  41c5ef:	and    BYTE PTR [rcx],cl
  41c5f1:	pop    rbp
  41c5f2:	sub    bl,BYTE PTR [rax+rbp*1+0x64]
  41c5f6:	imul   bp,WORD PTR gs:[rsi+0x65],0x205b
  41c5fd:	or     DWORD PTR [rbp+0x5c],ebx
  41c600:	jnp    0x41c633
  41c602:	sub    al,0x5c
  41c604:	jge    0x41c656
  41c606:	push   rsp
  41c607:	rex.W push rdx
  41c609:	rex.RB
  41c60a:	rex.B
  41c60b:	rex.R pop rdi
  41c60d:	push   rdx
  41c60e:	push   rdi
  41c60f:	rex.WR
  41c610:	rex.WRXB
  41c611:	rex.XB
  41c612:	rex.WXB pop r15
  41c614:	rex.WB
  41c615:	rex.WRX
  41c616:	rex.WB push r12
  41c618:	rex.WB
  41c619:	rex.B
  41c61a:	rex.WR
  41c61b:	rex.WB pop r10
  41c61d:	rex.RB push r10
  41c61f:	pop    rbx
  41c620:	and    BYTE PTR [rcx],cl
  41c622:	pop    rbp
  41c623:	sub    bl,BYTE PTR [rsp+rbx*2+0x5c]
  41c627:	sub    DWORD PTR [rsi+rbp*2+0x5b],ebx
  41c62b:	and    BYTE PTR [rcx],cl
  41c62d:	pop    rbp
  41c62e:	sub    bh,BYTE PTR [rbx+0x20]
  41c631:	jnp    0x41c653
  41c633:	xor    BYTE PTR [rax+riz*1],ch
  41c636:	jge    0x41c658
  41c638:	jge    0x41c669
  41c63a:	and    esp,DWORD PTR [rax]
  41c63c:	imul   esp,DWORD PTR [rsi+0x20],0x4f575f5f
  41c643:	push   rdx
  41c644:	rex.R push rbx
  41c646:	rex.WB pop r10
  41c648:	and    BYTE PTR [rip+0x3436203d],r15b        # 0x3477e68c
  41c64f:	pop    rsp
  41c650:	or     ah,BYTE PTR [rbx]
  41c652:	and    BYTE PTR [rax],ah
  41c654:	pop    rsp
  41c655:	xor    DWORD PTR [rdx+rcx*1+0x20],ebx
  41c659:	and    BYTE PTR [rbx+0x20],bh
  41c65c:	jnp    0x41c67e
  41c65e:	xor    BYTE PTR [rax+riz*1],ch
  41c661:	xor    BYTE PTR [rax+riz*1],ch
  41c664:	xor    BYTE PTR [rax+riz*1],ch
  41c667:	xor    BYTE PTR [rax+riz*1],ch
  41c66a:	xor    BYTE PTR [rax+riz*1],ch
  41c66d:	xor    BYTE PTR [rax+riz*1],ch
  41c670:	xor    BYTE PTR [rax+riz*1],ch
  41c673:	xor    BYTE PTR [rax+riz*1],ch
  41c676:	xor    BYTE PTR [rax+riz*1],ch
  41c679:	xor    BYTE PTR [rax+riz*1],ch
  41c67c:	xor    BYTE PTR [rax],ah
  41c67e:	jge    0x41c6a0
  41c680:	jge    0x41c6de
  41c682:	or     ah,BYTE PTR [rbx]
  41c684:	and    BYTE PTR [rbp+0x6c],ah
  41c687:	jae    0x41c6ee
  41c689:	pop    rsp
  41c68a:	or     ah,BYTE PTR [rbx]
  41c68c:	and    BYTE PTR [rax],ah
  41c68e:	pop    rsp
  41c68f:	xor    DWORD PTR [rdx+rcx*1+0x20],ebx
  41c693:	and    BYTE PTR [rbx+0x20],bh
  41c696:	jnp    0x41c6b8
  41c698:	xor    BYTE PTR [rax+riz*1],ch
  41c69b:	xor    BYTE PTR [rax+riz*1],ch
  41c69e:	xor    BYTE PTR [rax+riz*1],ch
  41c6a1:	xor    BYTE PTR [rax+riz*1],ch
  41c6a4:	xor    BYTE PTR [rax+riz*1],ch
  41c6a7:	xor    BYTE PTR [rax+riz*1],ch
  41c6aa:	xor    BYTE PTR [rax+riz*1],ch
  41c6ad:	xor    BYTE PTR [rax],ah
  41c6af:	jge    0x41c6d1
  41c6b1:	jge    0x41c70f
  41c6b3:	or     ah,BYTE PTR [rbx]
  41c6b5:	and    BYTE PTR [rbp+0x6e],ah
  41c6b8:	imul   esp,DWORD PTR fs:[rsi+0x2f],0x0
  41c6c0:	jae    0x41c6f1
  41c6c2:	jnp    0x41c6e4
  41c6c4:	pop    rsp
  41c6c5:	sub    BYTE PTR [rax],dh
  41c6c7:	sub    al,0x20
  41c6c9:	xor    BYTE PTR [rax+riz*1],ch
  41c6cc:	xor    BYTE PTR [rax+riz*1],ch
  41c6cf:	xor    BYTE PTR [rax+riz*1],ch
  41c6d2:	xor    BYTE PTR [rax+riz*1],ch
  41c6d5:	xor    BYTE PTR [rax+riz*1],ch
  41c6d8:	push   rax
  41c6d9:	push   rsp
  41c6da:	rex.W push rdx
  41c6dc:	rex.RB
  41c6dd:	rex.B
  41c6de:	rex.R pop rdi
  41c6e0:	push   rdx
  41c6e1:	push   rdi
  41c6e2:	rex.WR
  41c6e3:	rex.WRXB
  41c6e4:	rex.XB
  41c6e5:	rex.WXB pop r15
  41c6e7:	push   rax
  41c6e8:	push   rdx
  41c6e9:	rex.RB
  41c6ea:	rex.RX
  41c6eb:	rex.RB push r10
  41c6ed:	pop    rdi
  41c6ee:	push   rdi
  41c6ef:	push   rdx
  41c6f0:	rex.WB push r12
  41c6f2:	rex.RB push r10
  41c6f4:	pop    rdi
  41c6f5:	rex.WRX
  41c6f6:	rex.WRXB
  41c6f7:	rex.WRX push rdx
  41c6f9:	rex.RB
  41c6fa:	rex.XB push r13
  41c6fc:	push   rdx
  41c6fd:	push   rbx
  41c6fe:	rex.WB push r14
  41c700:	rex.RB pop r15
  41c702:	rex.WRX push rax
  41c704:	pop    rsp
  41c705:	sub    DWORD PTR [rax],esp
  41c707:	jge    0x41c738
  41c709:	jnp    0x41c72b
  41c70b:	pop    rsp
  41c70c:	xor    DWORD PTR [rax+riz*1],ebp
  41c70f:	xor    BYTE PTR [rax],ah
  41c711:	jge    0x41c742
  41c713:	add    BYTE PTR [rax],al
  41c715:	add    BYTE PTR [rax],al
  41c717:	add    BYTE PTR [rdi],ch
  41c719:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41c721:	or     DWORD PTR [rbp+0x5c],ebx
  41c724:	jnp    0x41c757
  41c726:	sub    al,0x5c
  41c728:	jge    0x41c77a
  41c72a:	push   rsp
  41c72b:	rex.W push rdx
  41c72d:	rex.RB
  41c72e:	rex.B
  41c72f:	rex.R pop rdi
  41c731:	rex.XB
  41c732:	rex.WRXB
  41c733:	rex.WRX
  41c734:	rex.R pop rdi
  41c736:	rex.WB
  41c737:	rex.WRX
  41c738:	rex.WB push r12
  41c73a:	rex.WB
  41c73b:	rex.B
  41c73c:	rex.WR
  41c73d:	rex.WB pop r10
  41c73f:	rex.RB push r10
  41c741:	(bad)  
  41c742:	jae    0x41c773
  41c744:	jnp    0x41c766
  41c746:	jnp    0x41c768
  41c748:	xor    BYTE PTR [rax+riz*1],ch
  41c74b:	jge    0x41c76d
  41c74d:	jge    0x41c77e
  41c74f:	jnp    0x41c771
  41c751:	jnp    0x41c773
  41c753:	xor    BYTE PTR [rax+riz*1],ch
  41c756:	xor    BYTE PTR [rax+riz*1],ch
  41c759:	xor    BYTE PTR [rax+riz*1],ch
  41c75c:	xor    BYTE PTR [rax+riz*1],ch
  41c75f:	xor    BYTE PTR [rax+riz*1],ch
  41c762:	sub    BYTE PTR [rsi+0x6f],dh
  41c765:	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x2c302029
  41c76d:	and    BYTE PTR [rax],dh
  41c76f:	sub    al,0x20
  41c771:	xor    BYTE PTR [rax],ah
  41c773:	jge    0x41c795
  41c775:	jge    0x41c7a6
	...
  41c77f:	add    BYTE PTR [rbx+rdi*2+0x20],bl
  41c783:	sub    bl,BYTE PTR [rbx+rdi*2+0x20]
  41c787:	sub    dh,BYTE PTR [rax]
  41c789:	sub    al,0x20
  41c78b:	sub    bl,BYTE PTR [rbp+rdi*2+0x20]
  41c78f:	sub    bl,BYTE PTR [rbp+rdi*2+0x0]
  41c793:	jo     0x41c809
  41c795:	push   0x64616572
  41c79a:	cs push 0x0
  41c7a0:	ins    BYTE PTR es:[edi],dx
  41c7a2:	imul   esp,DWORD PTR [rdx+0x63],0x74756d5f
  41c7a9:	gs js  0x41c80b
  41c7ac:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  41c7b3:	add    BYTE PTR [rax],al
  41c7b5:	add    BYTE PTR [rax],al
  41c7b7:	add    BYTE PTR [rip+0x5f5f2030],ah        # 0x5fa0e7ed
  41c7bd:	(bad)  
  41c7be:	je     0x41c834
  41c7c0:	jb     0x41c82b
  41c7c2:	(bad)  
  41c7c3:	jne    0x41c839
  41c7c5:	gs pop rdi
  41c7c7:	pop    rdi
  41c7c8:	and    BYTE PTR [rax],ch
  41c7ca:	sub    BYTE PTR [rdi+0x5f],bl
  41c7cd:	outs   dx,BYTE PTR ds:[esi]
  41c7cf:	jne    0x41c830
  41c7d1:	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
  41c7d8:	pop    rdi
  41c7d9:	sub    DWORD PTR [rcx],ebp
  41c7db:	add    BYTE PTR [rax],al
  41c7dd:	add    BYTE PTR [rax],al
  41c7df:	add    BYTE PTR [rdi+0x5f],bl
  41c7e2:	gs js  0x41c859
  41c7e5:	gs jb  0x41c856
  41c7e8:	pop    rdi
  41c7e9:	imul   ebp,DWORD PTR [rsi+0x6c],0x7c656e69
  41c7f0:	pop    rdi
  41c7f1:	pop    rdi
  41c7f2:	outs   dx,BYTE PTR ds:[esi]
  41c7f4:	jne    0x41c855
  41c7f6:	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
  41c7fd:	pop    rdi
  41c7fe:	add    BYTE PTR [rax],al
  41c800:	sub    BYTE PTR [rsi+0x7c],bl
  41c803:	and    BYTE PTR [rcx],ch
  41c805:	gs js  0x41c87c
  41c808:	gs jb  0x41c879
  41c80b:	and    BYTE PTR [rdi+0x5f],bl
  41c80e:	imul   ebp,DWORD PTR [rsi+0x6c],0x656e69
	...
  41c81d:	add    BYTE PTR [rax],al
  41c81f:	add    BYTE PTR [rbx+0x79],dh
  41c822:	jae    0x41c853
  41c824:	jae    0x41c89f
  41c826:	jae    0x41c895
  41c828:	(bad)  
  41c829:	movsxd esi,DWORD PTR [rdx+0x6f]
  41c82c:	jae    0x41c85c
  41c82e:	push   0x732f2a00
  41c833:	jns    0x41c8a8
  41c835:	(bad)  
  41c836:	jae    0x41c8b1
  41c838:	jae    0x41c8a7
  41c83a:	(bad)  
  41c83b:	movsxd esi,DWORD PTR [rdx+0x6f]
  41c83e:	jae    0x41c86e
  41c840:	push   0x68637700
  41c845:	(bad)  
  41c846:	jb     0x41c876
  41c848:	push   0x772f2a00
  41c84d:	movsxd ebp,DWORD PTR [rax+0x61]
  41c850:	jb     0x41c880
  41c852:	push   0x0
	...
  41c85f:	add    BYTE PTR [rdi+0x6c],ah
  41c862:	imul   esp,DWORD PTR [rdx+0x63],0x3939635f
  41c869:	pop    rdi
  41c86a:	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
  41c871:	xor    al,0x0
  41c873:	add    BYTE PTR [rax],al
  41c875:	add    BYTE PTR [rax],al
  41c877:	add    BYTE PTR [rbx],ah
  41c879:	and    BYTE PTR [rcx+0x66],ch
  41c87c:	and    BYTE PTR [rbp+riz*2+0x66],ah
  41c880:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2864
  41c887:	movsxd esi,DWORD PTR [rax+0x6c]
  41c88a:	jne    0x41c8ff
  41c88c:	jo     0x41c8fa
  41c88e:	jne    0x41c903
  41c890:	sub    DWORD PTR [rax],esp
  41c892:	jl     0x41c910
  41c894:	and    BYTE PTR [rbp+riz*2+0x66],ah
  41c898:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2864
  41c89f:	rex.RXB
  41c8a0:	rex.WRX push rbp
  41c8a2:	rex.XB pop r15
  41c8a4:	push   rbx
  41c8a5:	push   rsp
  41c8a6:	rex.R
  41c8a7:	rex.XB pop r15
  41c8a9:	rex.WB
  41c8aa:	rex.WRX
  41c8ab:	rex.WR
  41c8ac:	rex.WB
  41c8ad:	rex.WRX
  41c8ae:	rex.RB pop r15
  41c8b0:	pop    rdi
  41c8b1:	sub    DWORD PTR [rax],eax
  41c8b3:	pop    rsi
  41c8b4:	and    esp,DWORD PTR [rax]
  41c8b6:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  41c8bd:	pop    rdi
  41c8be:	movsxd esi,DWORD PTR [rax+0x6c]
  41c8c1:	jne    0x41c936
  41c8c3:	jo     0x41c931
  41c8c5:	jne    0x41c93a
  41c8c7:	and    al,0x0
	...
  41c8dd:	add    BYTE PTR [rax],al
  41c8df:	add    BYTE PTR [rdi+0x5f],bl
  41c8e2:	gs js  0x41c959
  41c8e5:	gs jb  0x41c956
  41c8e8:	pop    rdi
  41c8e9:	imul   ebp,DWORD PTR [rsi+0x6c],0x7c656e69
  41c8f0:	pop    rdi
  41c8f1:	pop    rdi
  41c8f2:	rex.RXB
  41c8f3:	rex.WRX push rbp
  41c8f5:	pop    rdi
  41c8f6:	push   rbx
  41c8f7:	push   rsp
  41c8f8:	rex.R
  41c8f9:	rex.XB pop r15
  41c8fb:	rex.WB
  41c8fc:	rex.WRX
  41c8fd:	rex.WR
  41c8fe:	rex.WB
  41c8ff:	rex.WRX
  41c900:	rex.RB pop r15
  41c902:	pop    rdi
	...
  41c90f:	add    BYTE PTR [rbp+0x78],ah
  41c912:	je     0x41c979
  41c914:	jb     0x41c984
  41c916:	and    BYTE PTR [rdi+0x5f],bl
  41c919:	imul   ebp,DWORD PTR [rsi+0x6c],0x656e69
  41c920:	(bad)  
  41c921:	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x69727473
  41c929:	outs   dx,BYTE PTR ds:[rsi]
  41c92a:	xor    ch,BYTE PTR [esi]
  41c92d:	push   0x622f2a00
  41c932:	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x69727473
  41c93a:	outs   dx,BYTE PTR ds:[rsi]
  41c93b:	xor    ch,BYTE PTR [esi]
  41c93e:	push   0x0
	...
  41c94f:	add    BYTE PTR [rdi+0x6c],ah
  41c952:	imul   esp,DWORD PTR [rdx+0x63],0x3939635f
  41c959:	pop    rdi
  41c95a:	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
  41c961:	xor    eax,DWORD PTR [rax]
  41c963:	add    BYTE PTR [rax],al
  41c965:	add    BYTE PTR [rax],al
  41c967:	add    BYTE PTR [rbx+0x2f],dh
  41c96a:	gs js  0x41c9e1
  41c96d:	gs jb  0x41c9de
  41c970:	and    BYTE PTR [rcx+0x6e],ch
  41c973:	je     0x41c995
  41c975:	pop    rsp
  41c976:	sub    BYTE PTR [rbx+0x74],dh
  41c979:	(bad)  
  41c97a:	je     0x41c9d8
  41c97c:	sub    DWORD PTR [rdi],ebp
  41c97e:	and    ebp,DWORD PTR [rcx+0x66]
  41c981:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  41c987:	rex.RXB
  41c988:	rex.WRX push rbp
  41c98a:	rex.XB pop r15
  41c98c:	rex.RXB
  41c98d:	rex.WRX push rbp
  41c98f:	pop    rdi
  41c990:	rex.WB
  41c991:	rex.WRX
  41c992:	rex.WR
  41c993:	rex.WB
  41c994:	rex.WRX
  41c995:	rex.RB pop r15
  41c997:	pop    rdi
  41c998:	pop    rsp
  41c999:	or     ah,BYTE PTR [rbp+0x78]
  41c99c:	je     0x41ca03
  41c99e:	jb     0x41ca0e
  41c9a0:	pop    rsp
  41c9a1:	or     ah,BYTE PTR [rbx]
  41c9a3:	outs   dx,BYTE PTR gs:[rsi]
  41c9a5:	imul   esp,DWORD PTR fs:[rsi+0x5c],0x695f5f0a
  41c9ad:	outs   dx,BYTE PTR ds:[rsi]
  41c9ae:	ins    BYTE PTR es:[rdi],dx
  41c9af:	imul   ebp,DWORD PTR [rsi+0x65],0x69205f5f
  41c9b6:	outs   dx,BYTE PTR ds:[rsi]
  41c9b7:	je     0x41c9d9
  41c9b9:	pop    rsp
  41c9ba:	xor    DWORD PTR [rdi],ebp
  41c9bc:	add    BYTE PTR [rax],al
  41c9be:	add    BYTE PTR [rax],al
  41c9c0:	jae    0x41c9f1
  41c9c2:	gs js  0x41ca39
  41c9c5:	gs jb  0x41ca36
  41c9c8:	and    BYTE PTR [rcx+0x6e],ch
  41c9cb:	je     0x41c9ed
  41c9cd:	pop    rsp
  41c9ce:	sub    BYTE PTR [rbx+0x6c],bl
  41c9d1:	pop    bp
  41c9d3:	jae    0x41ca49
  41c9d5:	(bad)  
  41c9d6:	je     0x41ca34
  41c9d8:	sub    DWORD PTR [rdi],ebp
  41c9da:	and    ebp,DWORD PTR [rcx+0x66]
  41c9dd:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  41c9e3:	rex.RXB
  41c9e4:	rex.WRX push rbp
  41c9e6:	rex.XB pop r15
  41c9e8:	rex.RXB
  41c9e9:	rex.WRX push rbp
  41c9eb:	pop    rdi
  41c9ec:	rex.WB
  41c9ed:	rex.WRX
  41c9ee:	rex.WR
  41c9ef:	rex.WB
  41c9f0:	rex.WRX
  41c9f1:	rex.RB pop r15
  41c9f3:	pop    rdi
  41c9f4:	pop    rsp
  41c9f5:	or     ah,BYTE PTR [rbp+0x78]
  41c9f8:	je     0x41ca5f
  41c9fa:	jb     0x41ca6a
  41c9fc:	pop    rsp
  41c9fd:	or     ah,BYTE PTR [rbx]
  41c9ff:	outs   dx,BYTE PTR gs:[rsi]
  41ca01:	imul   esp,DWORD PTR fs:[rsi+0x5c],0x695f5f0a
  41ca09:	outs   dx,BYTE PTR ds:[rsi]
  41ca0a:	ins    BYTE PTR es:[rdi],dx
  41ca0b:	imul   ebp,DWORD PTR [rsi+0x65],0x69205f5f
  41ca12:	outs   dx,BYTE PTR ds:[rsi]
  41ca13:	je     0x41ca35
  41ca15:	pop    rsp
  41ca16:	xor    DWORD PTR [rdi],ebp
	...
  41ca20:	jae    0x41ca51
  41ca22:	gs js  0x41ca99
  41ca25:	gs jb  0x41ca96
  41ca28:	and    BYTE PTR [rcx+0x6e],ch
  41ca2b:	je     0x41ca4d
  41ca2d:	pop    rsp
  41ca2e:	sub    BYTE PTR [rbp+0x6b],ch
  41ca31:	outs   dx,BYTE PTR ds:[rsi]
  41ca32:	outs   dx,DWORD PTR ds:[rsi]
  41ca33:	fs pop rsp
  41ca35:	sub    DWORD PTR [rdi],ebp
  41ca37:	and    ebp,DWORD PTR [rcx+0x66]
  41ca3a:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  41ca40:	rex.RXB
  41ca41:	rex.WRX push rbp
  41ca43:	rex.XB pop r15
  41ca45:	rex.RXB
  41ca46:	rex.WRX push rbp
  41ca48:	pop    rdi
  41ca49:	rex.WB
  41ca4a:	rex.WRX
  41ca4b:	rex.WR
  41ca4c:	rex.WB
  41ca4d:	rex.WRX
  41ca4e:	rex.RB pop r15
  41ca50:	pop    rdi
  41ca51:	pop    rsp
  41ca52:	or     ah,BYTE PTR [rbp+0x78]
  41ca55:	je     0x41cabc
  41ca57:	jb     0x41cac7
  41ca59:	pop    rsp
  41ca5a:	or     ah,BYTE PTR [rbx]
  41ca5c:	outs   dx,BYTE PTR gs:[rsi]
  41ca5e:	imul   esp,DWORD PTR fs:[rsi+0x5c],0x695f5f0a
  41ca66:	outs   dx,BYTE PTR ds:[rsi]
  41ca67:	ins    BYTE PTR es:[rdi],dx
  41ca68:	imul   ebp,DWORD PTR [rsi+0x65],0x69205f5f
  41ca6f:	outs   dx,BYTE PTR ds:[rsi]
  41ca70:	je     0x41ca92
  41ca72:	pop    rsp
  41ca73:	xor    DWORD PTR [rdi],ebp
  41ca75:	add    BYTE PTR [rax],al
  41ca77:	add    BYTE PTR [rbx+0x2f],dh
  41ca7a:	gs js  0x41caf1
  41ca7d:	gs jb  0x41caee
  41ca80:	and    BYTE PTR [rcx+0x6e],ch
  41ca83:	je     0x41caa5
  41ca85:	pop    rdi
  41ca86:	pop    rdi
  41ca87:	push   rdx
  41ca88:	rex.RB
  41ca89:	rex.R
  41ca8a:	rex.WB push r10
  41ca8c:	rex.RB
  41ca8d:	rex.XB push r12
  41ca8f:	pop    rsp
  41ca90:	sub    BYTE PTR [rdi+0x4e],bl
  41ca93:	push   rsp
  41ca94:	rex.W pop rsp
  41ca96:	sub    DWORD PTR [rbx+rdi*2+0x30],ebx
  41ca9a:	sub    al,0x31
  41ca9c:	pop    rsp
  41ca9d:	jge    0x41cabf
  41ca9f:	sub    BYTE PTR [rax+rbp*1+0x73],bl
  41caa3:	je     0x41cb06
  41caa5:	je     0x41cb03
  41caa7:	sub    DWORD PTR [rdi],ebp
  41caa9:	and    ebp,DWORD PTR [rcx+0x66]
  41caac:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  41cab2:	rex.RXB
  41cab3:	rex.WRX push rbp
  41cab5:	rex.XB pop r15
  41cab7:	rex.RXB
  41cab8:	rex.WRX push rbp
  41caba:	pop    rdi
  41cabb:	rex.WB
  41cabc:	rex.WRX
  41cabd:	rex.WR
  41cabe:	rex.WB
  41cabf:	rex.WRX
  41cac0:	rex.RB pop r15
  41cac2:	pop    rdi
  41cac3:	pop    rsp
  41cac4:	or     ah,BYTE PTR [rbp+0x78]
  41cac7:	je     0x41cb2e
  41cac9:	jb     0x41cb39
  41cacb:	pop    rsp
  41cacc:	or     ah,BYTE PTR [rbx]
  41cace:	outs   dx,BYTE PTR gs:[rsi]
  41cad0:	imul   esp,DWORD PTR fs:[rsi+0x5c],0x695f5f0a
  41cad8:	outs   dx,BYTE PTR ds:[rsi]
  41cad9:	ins    BYTE PTR es:[rdi],dx
  41cada:	imul   ebp,DWORD PTR [rsi+0x65],0x69205f5f
  41cae1:	outs   dx,BYTE PTR ds:[rsi]
  41cae2:	je     0x41cb04
  41cae4:	pop    rdi
  41cae5:	pop    rdi
  41cae6:	push   rdx
  41cae7:	rex.RB
  41cae8:	rex.R
  41cae9:	rex.WB push r10
  41caeb:	rex.RB
  41caec:	rex.XB push r12
  41caee:	pop    rsp
  41caef:	xor    DWORD PTR [rax],esp
  41caf1:	sub    BYTE PTR [rdx+rsi*1+0x2f],bl
  41caf5:	add    BYTE PTR [rax],al
  41caf7:	add    BYTE PTR [rbx+0x2f],dh
  41cafa:	gs js  0x41cb71
  41cafd:	gs jb  0x41cb6e
  41cb00:	and    BYTE PTR [rcx+0x6e],ch
  41cb03:	je     0x41cb25
  41cb05:	pop    rdi
  41cb06:	pop    rdi
  41cb07:	push   rdx
  41cb08:	rex.RB
  41cb09:	rex.R
  41cb0a:	rex.WB push r10
  41cb0c:	rex.RB
  41cb0d:	rex.XB push r12
  41cb0f:	pop    rsp
  41cb10:	sub    BYTE PTR [rdi+0x4e],bl
  41cb13:	push   rsp
  41cb14:	rex.W pop rsp
  41cb16:	sub    DWORD PTR [rbx+rdi*2+0x30],ebx
  41cb1a:	sub    al,0x31
  41cb1c:	pop    rsp
  41cb1d:	jge    0x41cb3f
  41cb1f:	sub    BYTE PTR [rax+rbp*1+0x5b],bl
  41cb23:	ins    BYTE PTR es:[rdi],dx
  41cb24:	pop    bp
  41cb26:	jae    0x41cb9c
  41cb28:	(bad)  
  41cb29:	je     0x41cb87
  41cb2b:	sub    DWORD PTR [rdi],ebp
  41cb2d:	and    ebp,DWORD PTR [rcx+0x66]
  41cb30:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  41cb36:	rex.RXB
  41cb37:	rex.WRX push rbp
  41cb39:	rex.XB pop r15
  41cb3b:	rex.RXB
  41cb3c:	rex.WRX push rbp
  41cb3e:	pop    rdi
  41cb3f:	rex.WB
  41cb40:	rex.WRX
  41cb41:	rex.WR
  41cb42:	rex.WB
  41cb43:	rex.WRX
  41cb44:	rex.RB pop r15
  41cb46:	pop    rdi
  41cb47:	pop    rsp
  41cb48:	or     ah,BYTE PTR [rbp+0x78]
  41cb4b:	je     0x41cbb2
  41cb4d:	jb     0x41cbbd
  41cb4f:	pop    rsp
  41cb50:	or     ah,BYTE PTR [rbx]
  41cb52:	outs   dx,BYTE PTR gs:[rsi]
  41cb54:	imul   esp,DWORD PTR fs:[rsi+0x5c],0x695f5f0a
  41cb5c:	outs   dx,BYTE PTR ds:[rsi]
  41cb5d:	ins    BYTE PTR es:[rdi],dx
  41cb5e:	imul   ebp,DWORD PTR [rsi+0x65],0x69205f5f
  41cb65:	outs   dx,BYTE PTR ds:[rsi]
  41cb66:	je     0x41cb88
  41cb68:	pop    rdi
  41cb69:	pop    rdi
  41cb6a:	push   rdx
  41cb6b:	rex.RB
  41cb6c:	rex.R
  41cb6d:	rex.WB push r10
  41cb6f:	rex.RB
  41cb70:	rex.XB push r12
  41cb72:	pop    rsp
  41cb73:	xor    DWORD PTR [rax],esp
  41cb75:	sub    BYTE PTR [rdx+rsi*1+0x2f],bl
  41cb79:	add    BYTE PTR [rax],al
  41cb7b:	add    BYTE PTR [rax],al
  41cb7d:	add    BYTE PTR [rax],al
  41cb7f:	add    BYTE PTR [rbx+0x2f],dh
  41cb82:	pop    rsi
  41cb83:	gs js  0x41cbfa
  41cb86:	gs jb  0x41cbf7
  41cb89:	and    BYTE PTR [rdi+0x5f],bl
  41cb8c:	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
  41cb93:	pop    rdi
  41cb94:	and    BYTE PTR [rcx+0x6e],ch
  41cb97:	je     0x41cbc8
  41cb99:	and    ebp,DWORD PTR [rcx+0x66]
  41cb9c:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  41cba2:	rex.RXB
  41cba3:	rex.WRX push rbp
  41cba5:	rex.XB pop r15
  41cba7:	rex.RXB
  41cba8:	rex.WRX push rbp
  41cbaa:	pop    rdi
  41cbab:	rex.WB
  41cbac:	rex.WRX
  41cbad:	rex.WR
  41cbae:	rex.WB
  41cbaf:	rex.WRX
  41cbb0:	rex.RB pop r15
  41cbb2:	pop    rdi
  41cbb3:	pop    rsp
  41cbb4:	or     ah,BYTE PTR [rbp+0x78]
  41cbb7:	je     0x41cc1e
  41cbb9:	jb     0x41cc29
  41cbbb:	pop    rsp
  41cbbc:	or     ah,BYTE PTR [rbx]
  41cbbe:	outs   dx,BYTE PTR gs:[rsi]
  41cbc0:	imul   esp,DWORD PTR fs:[rsi+0x5c],0x695f5f0a
  41cbc8:	outs   dx,BYTE PTR ds:[rsi]
  41cbc9:	ins    BYTE PTR es:[rdi],dx
  41cbca:	imul   ebp,DWORD PTR [rsi+0x65],0x69205f5f
  41cbd1:	outs   dx,BYTE PTR ds:[rsi]
  41cbd2:	je     0x41cc03
	...
  41cbe0:	gs js  0x41cc57
  41cbe3:	gs jb  0x41cc54
  41cbe6:	and    BYTE PTR [rdi+0x5f],bl
  41cbe9:	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
  41cbf0:	pop    rdi
  41cbf1:	and    BYTE PTR [rcx+0x6e],ch
  41cbf4:	je     0x41cbf6
	...
  41cbfe:	add    BYTE PTR [rax],al
  41cc00:	jae    0x41cc7b
  41cc02:	jae    0x41cc33
  41cc04:	jae    0x41cc7a
  41cc06:	(bad)  
  41cc07:	je     0x41cc37
  41cc09:	push   0x732f2a00
  41cc0e:	jns    0x41cc83
  41cc10:	(bad)  
  41cc11:	jae    0x41cc87
  41cc13:	(bad)  
  41cc14:	je     0x41cc44
  41cc16:	push   0x0
  41cc1b:	add    BYTE PTR [rax],al
  41cc1d:	add    BYTE PTR [rax],al
  41cc1f:	add    BYTE PTR [rdi+0x6c],ah
  41cc22:	imul   esp,DWORD PTR [rdx+0x63],0x3939635f
  41cc29:	pop    rdi
  41cc2a:	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
  41cc31:	xor    al,BYTE PTR [rax]
  41cc33:	add    BYTE PTR [rax],al
  41cc35:	add    BYTE PTR [rax],al
  41cc37:	add    BYTE PTR [rip+0x26262031],ah        # 0x2667ec6e
  41cc3d:	and    BYTE PTR [rax],ch
  41cc3f:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  41cc47:	pop    rdi
  41cc48:	pop    rdi
  41cc49:	gs js  0x41ccc0
  41cc4c:	gs jb  0x41ccbd
  41cc4f:	pop    rdi
  41cc50:	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
  41cc57:	jl     0x41ccd5
  41cc59:	and    BYTE PTR [rbp+riz*2+0x66],ah
  41cc5d:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2064
  41cc64:	rex.RXB
  41cc65:	rex.WRX push rbp
  41cc67:	rex.XB pop r15
  41cc69:	rex.RXB
  41cc6a:	rex.WRX push rbp
  41cc6c:	pop    rdi
  41cc6d:	rex.WB
  41cc6e:	rex.WRX
  41cc6f:	rex.WR
  41cc70:	rex.WB
  41cc71:	rex.WRX
  41cc72:	rex.RB pop r15
  41cc74:	pop    rdi
  41cc75:	sub    DWORD PTR [rdx],ecx
  41cc77:	and    eax,0x32
  41cc7c:	add    BYTE PTR [rax],al
  41cc7e:	add    BYTE PTR [rax],al
  41cc80:	sub    BYTE PTR [rcx+rbp*1+0x20],bl
  41cc84:	es and BYTE PTR es:[rbp+riz*2+0x66],ah
  41cc8a:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2064
  41cc91:	rex.WRXB push r8
  41cc93:	push   rsp
  41cc94:	rex.WB
  41cc95:	rex.WRB
  41cc96:	rex.WB pop r10
  41cc98:	rex.RB pop r15
  41cc9a:	pop    rdi
  41cc9b:	and    BYTE PTR [rsi],ah
  41cc9d:	and    BYTE PTR es:[rcx],ah
  41cca0:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  41cca8:	pop    rdi
  41cca9:	pop    rdi
  41ccaa:	rex.WRXB push r8
  41ccac:	push   rsp
  41ccad:	rex.WB
  41ccae:	rex.WRB
  41ccaf:	rex.WB pop r10
  41ccb1:	rex.RB pop r15
  41ccb3:	push   rbx
  41ccb4:	rex.WB pop r10
  41ccb6:	rex.RB pop r15
  41ccb8:	pop    rdi
  41ccb9:	sub    DWORD PTR [rdx],ecx
  41ccbb:	sub    BYTE PTR [rbx],ah
  41ccbd:	pop    rbx
  41ccbe:	and    BYTE PTR [rcx],cl
  41ccc0:	pop    rbp
  41ccc1:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41ccc5:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41cccc:	sub    bl,BYTE PTR [rdi+0x5f]
  41cccf:	push   rbp
  41ccd0:	push   rbx
  41ccd1:	rex.RB pop r15
  41ccd3:	rex.RB pop r8
  41ccd5:	push   rsp
  41ccd6:	rex.RB push r10
  41ccd8:	rex.WRX pop rdi
  41ccda:	rex.WB
  41ccdb:	rex.WRX
  41ccdc:	rex.WR
  41ccdd:	rex.WB
  41ccde:	rex.WRX
  41ccdf:	rex.RB push r11
  41cce1:	pop    rbx
  41cce2:	and    BYTE PTR [rcx],cl
  41cce4:	pop    rbp
  41cce5:	sub    dh,BYTE PTR [rcx]
  41cce7:	sub    DWORD PTR [rax],eax
  41cce9:	add    BYTE PTR [rax],al
  41cceb:	add    BYTE PTR [rax],al
  41cced:	add    BYTE PTR [rax],al
  41ccef:	add    BYTE PTR [rsi+0x65],ah
  41ccf2:	(bad)  
  41ccf3:	je     0x41cd6a
  41ccf5:	jb     0x41cd5c
  41ccf7:	jae    0x41cd27
  41ccf9:	push   0x662f2a00
  41ccfe:	gs (bad) 
  41cd00:	je     0x41cd77
  41cd02:	jb     0x41cd69
  41cd04:	jae    0x41cd34
  41cd06:	push   0x0
  41cd0b:	add    BYTE PTR [rax],al
  41cd0d:	add    BYTE PTR [rax],al
  41cd0f:	add    BYTE PTR [rdi+0x6c],ah
  41cd12:	imul   esp,DWORD PTR [rdx+0x63],0x3939635f
  41cd19:	pop    rdi
  41cd1a:	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
  41cd21:	xor    DWORD PTR [rcx+0x0],esp
  41cd24:	add    BYTE PTR [rax],al
  41cd26:	add    BYTE PTR [rax],al
  41cd28:	and    eax,0x26262030
  41cd2d:	and    BYTE PTR [rax],ch
  41cd2f:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  41cd37:	pop    rdi
  41cd38:	pop    rdi
  41cd39:	gs js  0x41cdb0
  41cd3c:	gs jb  0x41cdad
  41cd3f:	pop    rdi
  41cd40:	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
  41cd47:	jl     0x41cdc5
  41cd49:	and    BYTE PTR [rbp+riz*2+0x66],ah
  41cd4d:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2064
  41cd54:	rex.RXB
  41cd55:	rex.WRX push rbp
  41cd57:	rex.XB pop r15
  41cd59:	rex.RXB
  41cd5a:	rex.WRX push rbp
  41cd5c:	pop    rdi
  41cd5d:	rex.WB
  41cd5e:	rex.WRX
  41cd5f:	rex.WR
  41cd60:	rex.WB
  41cd61:	rex.WRX
  41cd62:	rex.RB pop r15
  41cd64:	pop    rdi
  41cd65:	sub    DWORD PTR [rax],eax
	...
  41cd7f:	add    BYTE PTR [rsi+0x20],bl
  41cd82:	sub    ah,BYTE PTR [rsi]
  41cd84:	and    BYTE PTR es:[rcx],ah
  41cd87:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  41cd8f:	pop    rdi
  41cd90:	pop    rdi
  41cd91:	rex.WRXB push r8
  41cd93:	push   rsp
  41cd94:	rex.WB
  41cd95:	rex.WRB
  41cd96:	rex.WB pop r10
  41cd98:	rex.RB pop r15
  41cd9a:	push   rbx
  41cd9b:	rex.WB pop r10
  41cd9d:	rex.RB pop r15
  41cd9f:	pop    rdi
  41cda0:	and    BYTE PTR [rsi],ah
  41cda2:	and    BYTE PTR es:[rcx],ah
  41cda5:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  41cdad:	pop    rdi
  41cdae:	pop    rdi
  41cdaf:	rex.WRX
  41cdb0:	rex.WRXB pop r15
  41cdb2:	rex.WB
  41cdb3:	rex.WRX
  41cdb4:	rex.WR
  41cdb5:	rex.WB
  41cdb6:	rex.WRX
  41cdb7:	rex.RB pop r15
  41cdb9:	pop    rdi
  41cdba:	and    al,0x0
  41cdbc:	add    BYTE PTR [rax],al
  41cdbe:	add    BYTE PTR [rax],al
  41cdc0:	data16 gs (bad) 
  41cdc3:	je     0x41ce3a
  41cdc5:	jb     0x41ce2c
  41cdc7:	jae    0x41cdf7
  41cdc9:	push   0x662f2a00
  41cdce:	gs (bad) 
  41cdd0:	je     0x41ce47
  41cdd2:	jb     0x41ce39
  41cdd4:	jae    0x41ce04
  41cdd6:	push   0x0
  41cddb:	add    BYTE PTR [rax],al
  41cddd:	add    BYTE PTR [rax],al
  41cddf:	add    BYTE PTR [rdi+0x6c],ah
  41cde2:	imul   esp,DWORD PTR [rdx+0x63],0x3939635f
  41cde9:	pop    rdi
  41cdea:	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
  41cdf1:	xor    DWORD PTR [rax],eax
  41cdf3:	add    BYTE PTR [rax],al
  41cdf5:	add    BYTE PTR [rax],al
  41cdf7:	add    BYTE PTR [rbx],ah
  41cdf9:	imul   esp,DWORD PTR [rsi+0x20],0x4e475f5f
  41ce00:	push   rbp
  41ce01:	rex.XB pop r15
  41ce03:	pop    rdi
  41ce04:	and    BYTE PTR [rip+0x2032203d],bh        # 0x2073ee47
  41ce0a:	es and BYTE PTR es:[rdi+0x5f],bl
  41ce0f:	rex.RXB
  41ce10:	rex.WRX push rbp
  41ce12:	rex.XB pop r15
  41ce14:	rex.WRB
  41ce15:	rex.WB
  41ce16:	rex.WRX
  41ce17:	rex.WRXB push r10
  41ce19:	pop    rdi
  41ce1a:	pop    rdi
  41ce1b:	and    BYTE PTR [rsi],bh
  41ce1d:	cmp    eax,0x7c203720
  41ce22:	jl     0x41ce44
  41ce24:	pop    rdi
  41ce25:	pop    rdi
  41ce26:	rex.RXB
  41ce27:	rex.WRX push rbp
  41ce29:	rex.XB pop r15
  41ce2b:	pop    rdi
  41ce2c:	and    BYTE PTR [rsi],bh
  41ce2e:	cmp    eax,0x3320
	...
  41ce3f:	add    BYTE PTR [rsi+0x23],bl
  41ce42:	imul   esp,DWORD PTR [rsi+0x20],0x4e475f5f
  41ce49:	push   rbp
  41ce4a:	rex.XB pop r15
  41ce4c:	pop    rdi
  41ce4d:	and    BYTE PTR [rip+0x2032203d],bh        # 0x2073ee90
  41ce53:	es and BYTE PTR es:[rdi+0x5f],bl
  41ce58:	rex.RXB
  41ce59:	rex.WRX push rbp
  41ce5b:	rex.XB pop r15
  41ce5d:	rex.WRB
  41ce5e:	rex.WB
  41ce5f:	rex.WRX
  41ce60:	rex.WRXB push r10
  41ce62:	pop    rdi
  41ce63:	pop    rdi
  41ce64:	and    BYTE PTR [rsi],bh
  41ce66:	cmp    eax,0x5c203720
  41ce6b:	jl     0x41cec9
  41ce6d:	jl     0x41ce8f
  41ce6f:	pop    rdi
  41ce70:	pop    rdi
  41ce71:	rex.RXB
  41ce72:	rex.WRX push rbp
  41ce74:	rex.XB pop r15
  41ce76:	pop    rdi
  41ce77:	and    BYTE PTR [rip+0x2433203d],bh        # 0x2474eeba
  41ce7d:	add    BYTE PTR [rdx],ch
  41ce7f:	sub    eax,0x72662d2a
  41ce84:	(bad)
  41ce8b:	jae    0x41cf06
  41ce8d:	jae    0x41cebe
  41ce8f:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
  41ce93:	jae    0x41cec3
  41ce95:	push   0x0
  41ce9a:	add    BYTE PTR [rax],al
  41ce9c:	add    BYTE PTR [rax],al
  41ce9e:	add    BYTE PTR [rax],al
  41cea0:	data16 jb 0x41cf08
  41cea3:	(bad)
  41cea9:	movsxd esp,DWORD PTR [rbx+0x34]
  41ceac:	pop    rdi
  41cead:	(bad)
  41ceb2:	(bad)  
  41ceb3:	add    BYTE PTR gs:[eip+0x7c7c2030],ah        # 0x7cbdeeeb
  41cebb:	and    BYTE PTR [rdi+0x5f],bl
  41cebe:	rex.RXB
  41cebf:	rex.WRX push rbp
  41cec1:	rex.XB pop r15
  41cec3:	pop    rdi
  41cec4:	and    BYTE PTR [rsi],bh
  41cec6:	cmp    eax,0x3320
	...
  41cedf:	add    BYTE PTR [rdi+0x5f],bl
  41cee2:	rex.RXB
  41cee3:	rex.WRX push rbp
  41cee5:	rex.XB pop r15
  41cee7:	pop    rdi
  41cee8:	pop    rbx
  41cee9:	and    BYTE PTR [rsp+rsi*2+0x5d],bl
  41ceed:	sub    ch,BYTE PTR [rax]
  41ceef:	pop    rbx
  41cef0:	ds cmp eax,0x205b3d5d
  41cef6:	pop    rsp
  41cef7:	je     0x41cf56
  41cef9:	sub    bl,BYTE PTR [rbx+0x33]
  41cefc:	sub    eax,0x3e7c5d39
  41cf01:	pop    rbx
  41cf02:	and    BYTE PTR [rsp+rsi*2+0x5d],bl
  41cf06:	sub    dh,BYTE PTR [rdx]
  41cf08:	sub    DWORD PTR [rax],eax
	...
  41cf1e:	add    BYTE PTR [rax],al
  41cf20:	pop    rsi
  41cf21:	and    ebp,DWORD PTR [rcx+0x66]
  41cf24:	and    BYTE PTR [rdi+0x5f],bl
  41cf27:	rex.RXB
  41cf28:	rex.WRX push rbp
  41cf2a:	rex.XB pop r15
  41cf2c:	pop    rdi
  41cf2d:	and    BYTE PTR [rip+0x2032203d],bh        # 0x2073ef70
  41cf33:	es and BYTE PTR es:[rdi+0x5f],bl
  41cf38:	rex.RXB
  41cf39:	rex.WRX push rbp
  41cf3b:	rex.XB pop r15
  41cf3d:	rex.WRB
  41cf3e:	rex.WB
  41cf3f:	rex.WRX
  41cf40:	rex.WRXB push r10
  41cf42:	pop    rdi
  41cf43:	pop    rdi
  41cf44:	and    BYTE PTR [rsi],bh
  41cf46:	cmp    eax,0x243720
  41cf4b:	jae    0x41cfc6
  41cf4d:	jae    0x41cf7e
  41cf4f:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
  41cf53:	jae    0x41cf83
  41cf55:	push   0x0
  41cf5a:	add    BYTE PTR [rax],al
  41cf5c:	add    BYTE PTR [rax],al
  41cf5e:	add    BYTE PTR [rax],al
  41cf60:	data16 jb 0x41cfc8
  41cf63:	(bad)
  41cf69:	movsxd esp,DWORD PTR [rbx+0x33]
  41cf6c:	pop    rdi
  41cf6d:	(bad)
  41cf72:	(bad)  
  41cf73:	add    BYTE PTR gs:[eax],al
  41cf77:	add    BYTE PTR [rbx],ah
  41cf79:	and    BYTE PTR [rcx+0x66],ch
  41cf7c:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  41cf82:	push   rbx
  41cf83:	push   rbx
  41cf84:	rex.RB pop r15
  41cf86:	rex.WRB
  41cf87:	push   r12
  41cf89:	rex.W pop rdi
  41cf8b:	pop    rdi
  41cf8c:	or     ah,BYTE PTR [rip+0x20230a30]        # 0x2064d9c2
  41cf92:	gs ins BYTE PTR es:[rdi],dx
  41cf94:	jae    0x41cffb
  41cf96:	or     ah,BYTE PTR [rip+0x615f5f31]        # 0x61a12ecd
  41cf9c:	jae    0x41d00b
  41cf9e:	pop    rdi
  41cf9f:	pop    rdi
  41cfa0:	and    BYTE PTR [rdi+0x5f],bl
  41cfa3:	jbe    0x41d014
  41cfa5:	ins    BYTE PTR es:[rdi],dx
  41cfa6:	(bad)  
  41cfa7:	je     0x41d012
  41cfa9:	ins    BYTE PTR es:[rdi],dx
  41cfaa:	gs pop rdi
  41cfac:	pop    rdi
  41cfad:	and    BYTE PTR [rax],ch
  41cfaf:	and    ah,BYTE PTR [rsi+0x64]
  41cfb2:	imul   esi,DWORD PTR [rsi+0x20],0x25252525
  41cfb9:	jae    0x41d02f
  41cfbb:	sub    al,0x20
  41cfbd:	and    eax,0x73252525
  41cfc2:	je     0x41cfec
  41cfc4:	xor    BYTE PTR [rcx],ch
  41cfc6:	cmp    esp,DWORD PTR [rax]
  41cfc8:	data16 ja 0x41d02c
  41cfcb:	imul   esi,DWORD PTR [rdx+riz*1+0xa],0x9093125
  41cfd3:	or     DWORD PTR [rdx],edi
  41cfd5:	and    BYTE PTR [rdx],ah
  41cfd7:	cmp    eax,0x28202274
  41cfdc:	pop    rdi
  41cfdd:	pop    rdi
  41cfde:	sub    WORD PTR [rax],sp
  41cfe1:	cmp    ah,BYTE PTR [rax]
  41cfe3:	and    dh,BYTE PTR [rax]
  41cfe5:	and    ah,BYTE PTR [rax]
  41cfe7:	sub    BYTE PTR [rdi+0x5f],bl
  41cfea:	sub    WORD PTR [rcx],bp
  41cfed:	cmp    ecx,DWORD PTR [rdx]
  41cfef:	and    esp,DWORD PTR [rax]
  41cff1:	outs   dx,BYTE PTR gs:[rsi]
  41cff3:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
  41cffb:	add    BYTE PTR [rax],al
  41cffd:	add    BYTE PTR [rax],al
  41cfff:	add    BYTE PTR [rdx],ah
  41d001:	imul   si,WORD PTR fs:[rsi+0x20],0x2a2e
  41d008:	cmp    esp,DWORD PTR [rax]
  41d00a:	data16 ja 0x41d06e
  41d00d:	imul   esi,DWORD PTR [rdx+riz*1+0x0],0x0
	...
  41d03d:	add    BYTE PTR [rax],al
  41d03f:	add    BYTE PTR [rsi+0x28],bl
  41d042:	pop    rbx
  41d043:	or     DWORD PTR [rax],esp
  41d045:	pop    rbp
  41d046:	sub    ch,BYTE PTR [rcx]
  41d048:	pop    rdi
  41d049:	pop    rdi
  41d04a:	(bad)  
  41d04b:	jae    0x41d0ba
  41d04d:	pop    rdi
  41d04e:	pop    rdi
  41d04f:	and    BYTE PTR [rdi+0x5f],bl
  41d052:	jbe    0x41d0c3
  41d054:	ins    BYTE PTR es:[rdi],dx
  41d055:	(bad)  
  41d056:	je     0x41d0c1
  41d058:	ins    BYTE PTR es:[rdi],dx
  41d059:	gs pop rdi
  41d05b:	pop    rdi
  41d05c:	and    BYTE PTR [rax+rbp*1+0x22],bl
  41d060:	imul   esi,DWORD PTR fs:[rsi+0x73],0x30252073
  41d068:	sub    al,0x20
  41d06a:	and    eax,0x222a2030
  41d06f:	and    BYTE PTR [rdx],bh
  41d071:	and    BYTE PTR [rdx],bh
  41d073:	and    BYTE PTR [rdx],ah
  41d075:	js     0x41d099
  41d077:	and    BYTE PTR [rax+rbp*1+0x5f],bl
  41d07b:	pop    rdi
  41d07c:	pop    sp
  41d07e:	sub    DWORD PTR [rcx+rbp*1+0x3b],ebx
  41d082:	and    al,0x0
  41d084:	imul   ebx,DWORD PTR [rbx+0x33],0x37363534
  41d08b:	pop    rbp
  41d08c:	cmp    BYTE PTR [rsi],dh
  41d08e:	sub    eax,0x696c2d2a
  41d093:	outs   dx,BYTE PTR ds:[rsi]
  41d094:	jne    0x41d10e
  41d096:	sub    al,BYTE PTR [rax]
  41d098:	js     0x41d0d2
  41d09a:	sub    ch,BYTE PTR ss:[rip+0x756e696c]        # 0x75b03a0d
  41d0a1:	js     0x41d0cd
  41d0a3:	add    BYTE PTR [rcx+0x6d],ah
  41d0a6:	fs ss xor al,0x2d
  41d0aa:	sub    ch,BYTE PTR [rip+0x756e696c]        # 0x75b03a1c
  41d0b0:	js     0x41d0dc
	...
  41d0be:	add    BYTE PTR [rax],al
  41d0c0:	(bad)  
  41d0c1:	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x766e6566
  41d0c9:	cs push 0x622f2a00
  41d0cf:	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x766e6566
  41d0d7:	cs push 0x0
  41d0dd:	add    BYTE PTR [rax],al
  41d0df:	add    BYTE PTR [rsi+0x65],ah
  41d0e2:	jb     0x41d145
  41d0e4:	imul   esi,DWORD PTR [rbx+0x65],0x65637865
  41d0eb:	jo     0x41d161
  41d0ed:	pop    rdi
  41d0ee:	outs   dx,BYTE PTR ds:[rsi]
  41d0ef:	outs   dx,DWORD PTR ds:[rsi]
  41d0f0:	jae    0x41d165
  41d0f2:	gs pop rdi
  41d0f4:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  41d0fb:	add    BYTE PTR [rax],al
  41d0fd:	add    BYTE PTR [rax],al
  41d0ff:	add    BYTE PTR [rbx],ah
  41d101:	and    BYTE PTR [rcx+0x66],ch
  41d104:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  41d10a:	push   rbx
  41d10b:	push   rbx
  41d10c:	rex.RB pop r15
  41d10e:	rex.WRB
  41d10f:	push   r12
  41d111:	rex.W pop rdi
  41d113:	pop    rdi
  41d114:	or     ah,BYTE PTR [rip+0x20230a30]        # 0x2064db4a
  41d11a:	gs ins BYTE PTR es:[rdi],dx
  41d11c:	jae    0x41d183
  41d11e:	or     ah,BYTE PTR [rip+0x615f5f31]        # 0x61a13055
  41d124:	jae    0x41d193
  41d126:	pop    rdi
  41d127:	pop    rdi
  41d128:	and    BYTE PTR [rdi+0x5f],bl
  41d12b:	jbe    0x41d19c
  41d12d:	ins    BYTE PTR es:[rdi],dx
  41d12e:	(bad)  
  41d12f:	je     0x41d19a
  41d131:	ins    BYTE PTR es:[rdi],dx
  41d132:	gs pop rdi
  41d134:	pop    rdi
  41d135:	and    BYTE PTR [rax],ch
  41d137:	and    ah,BYTE PTR [rsi+0x64]
  41d13a:	imul   esi,DWORD PTR [rsi+0x70],0x25252520
  41d141:	and    eax,0x202c7473
  41d146:	and    eax,0x73252525
  41d14b:	je     0x41d175
  41d14d:	xor    DWORD PTR [rcx],ebp
  41d14f:	cmp    esp,DWORD PTR [rax]
  41d151:	data16 ja 0x41d1b5
  41d154:	imul   esi,DWORD PTR [rdx+riz*1+0xa],0x9093125
  41d15c:	or     DWORD PTR [rdx],edi
  41d15e:	and    BYTE PTR [rdx],ah
  41d160:	cmp    eax,0x28202274
  41d165:	pop    rdi
  41d166:	pop    rdi
  41d167:	sub    WORD PTR [rax],sp
  41d16a:	cmp    ah,BYTE PTR [rax]
  41d16c:	and    dh,BYTE PTR [rax]
  41d16e:	and    ah,BYTE PTR [rax]
  41d170:	sub    BYTE PTR [rdi+0x5f],bl
  41d173:	sub    WORD PTR [rax+riz*1],bp
  41d177:	and    dh,BYTE PTR [rbp+0x22]
  41d17a:	and    BYTE PTR [rax],ch
  41d17c:	pop    rdi
  41d17d:	pop    rdi
  41d17e:	sub    DWORD PTR [eax],esp
  41d181:	cmp    ah,BYTE PTR [rax]
  41d183:	and    dh,BYTE PTR [rbx+0x74]
  41d186:	sub    BYTE PTR [rcx],dh
  41d188:	sub    DWORD PTR [rdx],esp
  41d18a:	sub    DWORD PTR [rbx],edi
  41d18c:	or     ah,BYTE PTR [rbx]
  41d18e:	and    BYTE PTR [rbp+0x6e],ah
  41d191:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
  41d199:	add    BYTE PTR [rax],al
  41d19b:	add    BYTE PTR [rax],al
  41d19d:	add    BYTE PTR [rax],al
  41d19f:	add    BYTE PTR [rdx],ah
  41d1a1:	imul   si,WORD PTR fs:[rsi+0x70],0x2e20
  41d1a8:	sub    bh,BYTE PTR [rbx]
  41d1aa:	and    BYTE PTR [rsi+0x77],ah
  41d1ad:	(bad)  
  41d1ae:	imul   esi,DWORD PTR [rdx+riz*1+0x0],0x0
	...
  41d1be:	add    BYTE PTR [rax],al
  41d1c0:	pop    rsi
  41d1c1:	sub    BYTE PTR [rbx+0x9],bl
  41d1c4:	and    BYTE PTR [rbp+0x2a],bl
  41d1c7:	sub    DWORD PTR [rdi+0x5f],ebx
  41d1ca:	(bad)  
  41d1cb:	jae    0x41d23a
  41d1cd:	pop    rdi
  41d1ce:	pop    rdi
  41d1cf:	and    BYTE PTR [rdi+0x5f],bl
  41d1d2:	jbe    0x41d243
  41d1d4:	ins    BYTE PTR es:[rdi],dx
  41d1d5:	(bad)  
  41d1d6:	je     0x41d241
  41d1d8:	ins    BYTE PTR es:[rdi],dx
  41d1d9:	gs pop rdi
  41d1db:	pop    rdi
  41d1dc:	and    BYTE PTR [rax+rbp*1+0x22],bl
  41d1e0:	imul   esi,DWORD PTR fs:[rsi+0x73],0x31252073
  41d1e8:	sub    al,0x20
  41d1ea:	and    eax,0x222a2030
  41d1ef:	and    BYTE PTR [rdx],bh
  41d1f1:	and    BYTE PTR [rdx],bh
  41d1f3:	and    BYTE PTR [rdx],ah
  41d1f5:	js     0x41d219
  41d1f7:	and    BYTE PTR [rax+rbp*1+0x5f],bl
  41d1fb:	pop    rdi
  41d1fc:	pop    sp
  41d1fe:	sub    DWORD PTR [rax+riz*1],ebp
  41d201:	and    bh,BYTE PTR [rax+0x22]
  41d204:	and    BYTE PTR [rax+rbp*1+0x5f],bl
  41d208:	pop    rdi
  41d209:	addr32 pop rsp
  41d20b:	sub    DWORD PTR [rcx+rbp*1+0x3b],ebx
  41d20f:	and    al,0x0
	...
  41d21d:	add    BYTE PTR [rax],al
  41d21f:	add    BYTE PTR [rdx+0x69],ah
  41d222:	je     0x41d297
  41d224:	(bad)  
  41d225:	data16 outs dx,BYTE PTR gs:[rsi]
  41d228:	jbe    0x41d258
  41d22a:	push   0x622f2a00
  41d22f:	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x766e6566
  41d237:	cs push 0x0
  41d23d:	add    BYTE PTR [rax],al
  41d23f:	add    BYTE PTR [rsi+0x65],ah
  41d242:	jb     0x41d2a5
  41d244:	imul   esi,DWORD PTR [rbx+0x65],0x65637865
  41d24b:	jo     0x41d2c1
  41d24d:	pop    rdi
  41d24e:	outs   dx,BYTE PTR ds:[rsi]
  41d24f:	outs   dx,DWORD PTR ds:[rsi]
  41d250:	jae    0x41d2c5
  41d252:	gs pop rdi
  41d254:	imul   esi,DWORD PTR fs:[rsi+0x62],0x72657a79
  41d25c:	outs   dx,DWORD PTR ds:[rsi]
  41d25d:	add    BYTE PTR [rbp+0x63],ah
  41d260:	fs pop rdi
  41d262:	movsxd esi,DWORD PTR [rbp+0x72]
  41d265:	jae    0x41d2d6
  41d267:	jb     0x41d269
  41d269:	movsxd esp,DWORD PTR gs:[rsp+rbx*2+0x2e]
  41d26e:	movsxd esi,DWORD PTR [rbp+0x72]
  41d271:	jae    0x41d2e2
  41d273:	jb     0x41d275
	...
  41d27d:	add    BYTE PTR [rax],al
  41d27f:	add    BYTE PTR [rbx+0x75],dh
  41d282:	outs   dx,BYTE PTR ds:[rsi]
  41d283:	ja     0x41d2ee
  41d285:	outs   dx,BYTE PTR ds:[rsi]
  41d286:	outs   dx,DWORD PTR fs:[rsi]
  41d288:	ja     0x41d2b9
  41d28a:	ja     0x41d2f5
  41d28c:	outs   dx,BYTE PTR ds:[rsi]
  41d28d:	pop    rdi
  41d28e:	ins    BYTE PTR es:[rdi],dx
  41d28f:	outs   dx,DWORD PTR ds:[rsi]
  41d290:	movsxd ebp,DWORD PTR [rbx+0x2e]
  41d293:	push   0x6e757300
  41d298:	ja     0x41d303
  41d29a:	outs   dx,BYTE PTR ds:[rsi]
  41d29b:	outs   dx,DWORD PTR fs:[rsi]
  41d29d:	ja     0x41d2ce
  41d29f:	ja     0x41d30a
  41d2a1:	outs   dx,BYTE PTR ds:[rsi]
  41d2a2:	pop    rdi
  41d2a3:	movsxd esi,DWORD PTR [rbp+0x72]
  41d2a6:	jae    0x41d317
  41d2a8:	jb     0x41d2d8
  41d2aa:	push   0x63650000
  41d2af:	fs pop rdi
  41d2b1:	movsxd esi,DWORD PTR [rbp+0x72]
  41d2b4:	jae    0x41d325
  41d2b6:	jb     0x41d2b8
  41d2b8:	and    eax,0x69230a30
  41d2bd:	outs   dx,BYTE PTR ds:[rsi]
  41d2be:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  41d2c2:	and    BYTE PTR gs:[rbx+rsi*2],bh
  41d2c6:	jns    0x41d33b
  41d2c8:	(bad)  
  41d2c9:	fs push 0x74
  41d2cc:	jns    0x41d33e
  41d2ce:	gs jae 0x41d2ff
  41d2d1:	push   0x6923003e
  41d2d6:	outs   dx,BYTE PTR ds:[rsi]
  41d2d7:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  41d2db:	and    BYTE PTR gs:[rbx+rsi*2],bh
  41d2df:	je     0x41d345
  41d2e1:	fs gs cs pushw 0x3e
  41d2e8:	jae    0x41d363
  41d2ea:	jae    0x41d31b
  41d2ec:	fs push 0x74
  41d2ef:	jns    0x41d361
  41d2f1:	gs jae 0x41d322
  41d2f4:	push   0x445f5f00
  41d2f9:	rex.WX pop rdi
  41d2fb:	ja     0x41d366
  41d2fd:	outs   dx,BYTE PTR ds:[rsi]
  41d2fe:	je     0x41d35f
  41d300:	je     0x41d302
  41d302:	fs push 0x67
  41d305:	jo     0x41d377
  41d307:	pop    rdi
  41d308:	ja     0x41d36d
  41d30a:	push   0x685f7261
  41d30f:	add    BYTE PTR [rdi],ch
  41d311:	pop    rsi
  41d312:	pop    rbx
  41d313:	and    BYTE PTR [rcx],cl
  41d315:	pop    rbp
  41d316:	sub    ah,BYTE PTR [rsi+0x6c]
  41d319:	outs   dx,DWORD PTR ds:[rsi]
  41d31a:	(bad)  
  41d31b:	je     0x41d378
  41d31d:	and    BYTE PTR [rcx],cl
  41d31f:	pop    rbp
  41d320:	sub    ah,BYTE PTR [rsi+0x61]
  41d323:	jae    0x41d392
  41d325:	(bad)  
  41d326:	imul   ebx,DWORD PTR [rdx+rcx*1+0x23],0x65646669
  41d32e:	data16 and BYTE PTR [rdi+0x5f],bl
  41d332:	rex.R
  41d333:	rex.RB
  41d334:	rex.XB
  41d335:	rex.XB or al,BYTE PTR [r8]
  41d338:	(bad)  
  41d339:	pop    rsi
  41d33a:	pop    rbx
  41d33b:	and    BYTE PTR [rcx],cl
  41d33d:	pop    rbp
  41d33e:	sub    ah,BYTE PTR [rbx]
  41d340:	pop    rbx
  41d341:	and    BYTE PTR [rcx],cl
  41d343:	pop    rbp
  41d344:	sub    dh,BYTE PTR [rax+0x72]
  41d347:	(bad)  
  41d348:	ins    DWORD PTR es:[edi],dx
  41d34a:	(bad)  
  41d34b:	pop    rbx
  41d34c:	and    BYTE PTR [rcx],cl
  41d34e:	pop    rbp
  41d34f:	sub    ch,BYTE PTR [rcx+0x6e]
  41d352:	je     0x41d3c6
  41d354:	imul   ebp,DWORD PTR [rsi+0x73],0x5b286369
  41d35b:	and    BYTE PTR [rcx],cl
  41d35d:	pop    rbp
  41d35e:	sub    ah,BYTE PTR [rcx+riz*2+0x73]
  41d362:	ins    DWORD PTR es:[rdi],dx
  41d363:	(bad)  
  41d364:	(bad)  
  41d365:	pop    rsp
  41d366:	or     ah,BYTE PTR [rbx]
  41d368:	outs   dx,BYTE PTR gs:[rsi]
  41d36a:	imul   esp,DWORD PTR fs:[rsi+0xa],0x615f6300
  41d372:	jae    0x41d3e1
  41d374:	cs push 0x65640000
  41d37a:	movsxd ebx,DWORD PTR [rdi+0x69]
  41d37d:	outs   dx,BYTE PTR ds:[rsi]
  41d37e:	je     0x41d3e5
  41d380:	jb     0x41d3f0
  41d382:	pop    rdi
  41d383:	(bad)  
  41d384:	jae    0x41d3f3
  41d386:	add    BYTE PTR [rax],al
  41d388:	and    ebp,DWORD PTR [rcx+0x66]
  41d38b:	and    BYTE PTR [rdi+0x5f],bl
  41d38e:	push   rdi
  41d38f:	rex.WRXB push r10
  41d391:	rex.R push rbx
  41d393:	rex.WB pop r10
  41d395:	and    BYTE PTR [rip+0x3436203d],r15b        # 0x3477f3d9
  41d39c:	or     ah,BYTE PTR [rbx]
  41d39e:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41d3a6:	rex.WRX push rsp
  41d3a8:	rex.WRB
  41d3a9:	pop    r8
  41d3ab:	pop    rdi
  41d3ac:	rex.XB sub BYTE PTR [r14+0x29],sil
  41d3b0:	and    BYTE PTR [rax],ah
  41d3b2:	sub    BYTE PTR [rsi+0x20],dh
  41d3b5:	and    esp,DWORD PTR [rbx]
  41d3b7:	and    BYTE PTR [rcx+rbp*1+0xa],cl
  41d3bb:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41d3bf:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41d3c6:	push   rsp
  41d3c7:	rex.WRB
  41d3c8:	pop    r8
  41d3ca:	pop    rdi
  41d3cb:	rex.XB sub BYTE PTR [r14+0x29],sil
  41d3cf:	and    BYTE PTR [rax],ch
  41d3d1:	jbe    0x41d3f3
  41d3d3:	and    esp,DWORD PTR [rbx]
  41d3d5:	and    BYTE PTR [rbp+0x4c],dl
  41d3d8:	sub    DWORD PTR [rdx],ecx
  41d3da:	and    esp,DWORD PTR [rbp+0x6c]
  41d3dd:	jae    0x41d444
  41d3df:	or     ah,BYTE PTR [rbx]
  41d3e1:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41d3e9:	rex.WRX push rsp
  41d3eb:	rex.WRB
  41d3ec:	pop    r8
  41d3ee:	pop    rdi
  41d3ef:	rex.XB sub BYTE PTR [r14+0x29],sil
  41d3f3:	and    BYTE PTR [rax],ah
  41d3f5:	sub    BYTE PTR [rsi+0x20],dh
  41d3f8:	and    esp,DWORD PTR [rbx]
  41d3fa:	and    BYTE PTR [rsp+rcx*2+0x29],cl
  41d3fe:	or     ah,BYTE PTR [rbx]
  41d400:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41d408:	rex.WB
  41d409:	rex.WRX push rsp
  41d40b:	rex.WRB
  41d40c:	pop    r8
  41d40e:	pop    rdi
  41d40f:	rex.XB sub BYTE PTR [r14+0x29],sil
  41d413:	and    BYTE PTR [rax],ch
  41d415:	jbe    0x41d437
  41d417:	and    esp,DWORD PTR [rbx]
  41d419:	and    BYTE PTR [rbp+0x4c],dl
  41d41c:	sub    QWORD PTR [rdx],r9
  41d41f:	and    esp,DWORD PTR [rbp+0x6e]
  41d422:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
	...
  41d43e:	add    BYTE PTR [rax],al
  41d440:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41d444:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  41d44b:	rex.WRB
  41d44c:	pop    r8
  41d44e:	pop    rdi
  41d44f:	rex.XB pop r12
  41d451:	sub    BYTE PTR [rsi+0x5c],dh
  41d454:	sub    DWORD PTR [rbx+0x20],ebx
  41d457:	or     DWORD PTR [rbp+0x2b],ebx
  41d45a:	pop    rsp
  41d45b:	sub    BYTE PTR [rsi+0x20],dh
  41d45e:	and    esp,DWORD PTR [rbx]
  41d460:	and    BYTE PTR [rsp+rcx*2+0x5c],cl
  41d464:	sub    DWORD PTR [rdx],ecx
  41d466:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41d46a:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41d471:	push   rsp
  41d472:	rex.WRB
  41d473:	pop    r8
  41d475:	pop    rdi
  41d476:	rex.XB pop r12
  41d478:	sub    BYTE PTR [rsi+0x5c],dh
  41d47b:	sub    DWORD PTR [rbx+0x20],ebx
  41d47e:	or     DWORD PTR [rbp+0x2b],ebx
  41d481:	pop    rsp
  41d482:	sub    BYTE PTR [rsi+0x20],dh
  41d485:	and    esp,DWORD PTR [rbx]
  41d487:	and    BYTE PTR [rbp+0x4c],dl
  41d48a:	rex.WR pop rsp
  41d48c:	sub    DWORD PTR [rax],eax
  41d48e:	sub    ch,BYTE PTR [rip+0x61642d2a]        # 0x61a601be
  41d494:	jb     0x41d50d
  41d496:	imul   ebp,DWORD PTR [rsi+0x2a],0x0
  41d49d:	add    BYTE PTR [rax],al
  41d49f:	add    BYTE PTR [rbx+0x74],dh
  41d4a2:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x7261642d
  41d4aa:	ja     0x41d515
  41d4ac:	outs   dx,BYTE PTR ds:[rsi]
  41d4ad:	cs push 0x64747300
  41d4b3:	imul   ebp,DWORD PTR [rsi+0x74],0x682e
  41d4ba:	add    BYTE PTR [rax],al
  41d4bc:	add    BYTE PTR [rax],al
  41d4be:	add    BYTE PTR [rax],al
  41d4c0:	fs (bad) 
  41d4c2:	jb     0x41d53b
  41d4c4:	imul   ebp,DWORD PTR [rsi+0x5f],0x69647473
  41d4cb:	outs   dx,BYTE PTR ds:[rsi]
  41d4cc:	je     0x41d52d
  41d4ce:	(bad)  
  41d4cf:	add    BYTE PTR [rbx],ah
  41d4d1:	imul   esp,DWORD PTR [rsi+0x20],0x4f575f5f
  41d4d8:	push   rdx
  41d4d9:	rex.R push rbx
  41d4db:	rex.WB pop r10
  41d4dd:	and    BYTE PTR [rip+0x3436203d],r15b        # 0x3477f521
  41d4e4:	or     ah,BYTE PTR [rbx]
  41d4e6:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5020
  41d4ee:	push   rsp
  41d4ef:	push   rdx
  41d4f0:	rex.R
  41d4f1:	rex.WB
  41d4f2:	rex.RX
  41d4f3:	rex.RX pop rdi
  41d4f5:	rex.WRB
  41d4f6:	rex.WB
  41d4f7:	rex.WRX and BYTE PTR [rax],r13b
  41d4fa:	sub    eax,0x33323239
  41d4ff:	xor    esi,DWORD PTR [rdi]
  41d501:	xor    dh,BYTE PTR [rax]
  41d503:	xor    esi,DWORD PTR [rsi]
  41d505:	cmp    BYTE PTR [rip+0x35373734],dh        # 0x35790c3f
  41d50b:	cmp    BYTE PTR [rax],dh
  41d50d:	(bad)  
  41d50e:	rex.WR and BYTE PTR [rip+0xa293120],r13b        # 0xa6b0635
  41d515:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41d519:	imul   ebp,DWORD PTR [rsi+0x65],0x52545020
  41d520:	rex.R
  41d521:	rex.WB
  41d522:	rex.RX
  41d523:	rex.RX pop rdi
  41d525:	rex.WRB
  41d526:	pop    r8
  41d528:	and    BYTE PTR [rcx],bh
  41d52a:	xor    dh,BYTE PTR [rdx]
  41d52c:	xor    esi,DWORD PTR [rbx]
  41d52e:	(bad)  
  41d52f:	xor    dh,BYTE PTR [rax]
  41d531:	xor    esi,DWORD PTR [rsi]
  41d533:	cmp    BYTE PTR [rip+0x35373734],dh        # 0x35790c6d
  41d539:	cmp    BYTE PTR [rax],dh
  41d53b:	(bad)  
  41d53c:	rex.WR or r12b,BYTE PTR [rbx]
  41d53f:	gs ins BYTE PTR es:[rdi],dx
  41d541:	jae    0x41d5a8
  41d543:	or     ah,BYTE PTR [rbx]
  41d545:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5020
  41d54d:	push   rsp
  41d54e:	push   rdx
  41d54f:	rex.R
  41d550:	rex.WB
  41d551:	rex.RX
  41d552:	rex.RX pop rdi
  41d554:	rex.WRB
  41d555:	rex.WB
  41d556:	rex.WRX and BYTE PTR [rax],r13b
  41d559:	sub    eax,0x37343132
  41d55e:	xor    al,0x38
  41d560:	xor    esi,DWORD PTR [rsi]
  41d562:	xor    al,0x37
  41d564:	and    BYTE PTR [rip+0xa293120],ch        # 0xa6b068a
  41d56a:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41d56e:	imul   ebp,DWORD PTR [rsi+0x65],0x52545020
  41d575:	rex.R
  41d576:	rex.WB
  41d577:	rex.RX
  41d578:	rex.RX pop rdi
  41d57a:	rex.WRB
  41d57b:	pop    r8
  41d57d:	and    BYTE PTR [rdx],dh
  41d57f:	xor    DWORD PTR [rdi+rsi*1],esi
  41d582:	xor    al,0x38
  41d584:	xor    esi,DWORD PTR [rsi]
  41d586:	xor    al,0x37
  41d588:	or     ah,BYTE PTR [rbx]
  41d58a:	outs   dx,BYTE PTR gs:[rsi]
  41d58c:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
	...
  41d5c0:	and    ebp,DWORD PTR [rcx+0x66]
  41d5c3:	and    BYTE PTR [rdi+0x5f],bl
  41d5c6:	push   rdi
  41d5c7:	rex.WRXB push r10
  41d5c9:	rex.R push rbx
  41d5cb:	rex.WB pop r10
  41d5cd:	and    BYTE PTR [rip+0x3436203d],r15b        # 0x3477f611
  41d5d4:	or     ah,BYTE PTR [rbx]
  41d5d6:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5020
  41d5de:	push   rsp
  41d5df:	push   rdx
  41d5e0:	rex.R
  41d5e1:	rex.WB
  41d5e2:	rex.RX
  41d5e3:	rex.RX pop rdi
  41d5e5:	rex.WRB
  41d5e6:	rex.WB
  41d5e7:	rex.WRX pop rbx
  41d5e9:	and    BYTE PTR [rcx],cl
  41d5eb:	pop    rbp
  41d5ec:	sub    ecx,DWORD PTR [rcx+0x4e]
  41d5ef:	push   rsp
  41d5f0:	ss xor al,0x5f
  41d5f3:	rex.WRB
  41d5f4:	rex.WB
  41d5f5:	rex.WRX or r12b,BYTE PTR [rbx]
  41d5f8:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5020
  41d600:	push   rsp
  41d601:	push   rdx
  41d602:	rex.R
  41d603:	rex.WB
  41d604:	rex.RX
  41d605:	rex.RX pop rdi
  41d607:	rex.WRB
  41d608:	pop    r8
  41d60a:	pop    rbx
  41d60b:	and    BYTE PTR [rcx],cl
  41d60d:	pop    rbp
  41d60e:	sub    ecx,DWORD PTR [rcx+0x4e]
  41d611:	push   rsp
  41d612:	ss xor al,0x5f
  41d615:	rex.WRB
  41d616:	pop    r8
  41d618:	or     ah,BYTE PTR [rbx]
  41d61a:	gs ins BYTE PTR es:[rdi],dx
  41d61c:	jae    0x41d683
  41d61e:	or     ah,BYTE PTR [rbx]
  41d620:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5020
  41d628:	push   rsp
  41d629:	push   rdx
  41d62a:	rex.R
  41d62b:	rex.WB
  41d62c:	rex.RX
  41d62d:	rex.RX pop rdi
  41d62f:	rex.WRB
  41d630:	rex.WB
  41d631:	rex.WRX pop rbx
  41d633:	and    BYTE PTR [rcx],cl
  41d635:	pop    rbp
  41d636:	sub    ecx,DWORD PTR [rcx+0x4e]
  41d639:	push   rsp
  41d63a:	xor    esi,DWORD PTR [rdx]
  41d63c:	pop    rdi
  41d63d:	rex.WRB
  41d63e:	rex.WB
  41d63f:	rex.WRX or r12b,BYTE PTR [rbx]
  41d642:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5020
  41d64a:	push   rsp
  41d64b:	push   rdx
  41d64c:	rex.R
  41d64d:	rex.WB
  41d64e:	rex.RX
  41d64f:	rex.RX pop rdi
  41d651:	rex.WRB
  41d652:	pop    r8
  41d654:	pop    rbx
  41d655:	and    BYTE PTR [rcx],cl
  41d657:	pop    rbp
  41d658:	sub    ecx,DWORD PTR [rcx+0x4e]
  41d65b:	push   rsp
  41d65c:	xor    esi,DWORD PTR [rdx]
  41d65e:	pop    rdi
  41d65f:	rex.WRB
  41d660:	pop    r8
  41d662:	or     ah,BYTE PTR [rbx]
  41d664:	outs   dx,BYTE PTR gs:[rsi]
  41d666:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
  41d66e:	add    BYTE PTR [rax],al
  41d670:	jae    0x41d6e6
  41d672:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x7261642d
  41d67a:	ja     0x41d6e5
  41d67c:	outs   dx,BYTE PTR ds:[rsi]
  41d67d:	cs push 0x64747300
  41d683:	imul   ebp,DWORD PTR [rsi+0x74],0x682e
  41d68a:	add    BYTE PTR [rax],al
  41d68c:	add    BYTE PTR [rax],al
  41d68e:	add    BYTE PTR [rax],al
  41d690:	fs (bad) 
  41d692:	jb     0x41d70b
  41d694:	imul   ebp,DWORD PTR [rsi+0x5f],0x69647473
  41d69b:	outs   dx,BYTE PTR ds:[rsi]
  41d69c:	je     0x41d6fd
  41d69e:	add    BYTE PTR ss:[rbx],ah
  41d6a1:	imul   esp,DWORD PTR [rsi+0x20],0x4f575f5f
  41d6a8:	push   rdx
  41d6a9:	rex.R push rbx
  41d6ab:	rex.WB pop r10
  41d6ad:	and    BYTE PTR [rip+0x3436203d],r15b        # 0x3477f6f1
  41d6b4:	or     ah,BYTE PTR [rbx]
  41d6b6:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41d6be:	rex.WRX push rsp
  41d6c0:	rex.WRB
  41d6c1:	pop    r8
  41d6c3:	pop    rdi
  41d6c4:	rex.WRB
  41d6c5:	rex.WB
  41d6c6:	rex.WRX and BYTE PTR [rax],r12b
  41d6c9:	and    BYTE PTR [rax],ch
  41d6cb:	sub    eax,0x33323239
  41d6d0:	xor    esi,DWORD PTR [rdi]
  41d6d2:	xor    dh,BYTE PTR [rax]
  41d6d4:	xor    esi,DWORD PTR [rsi]
  41d6d6:	cmp    BYTE PTR [rip+0x35373734],dh        # 0x35790e10
  41d6dc:	cmp    BYTE PTR [rax],dh
  41d6de:	(bad)  
  41d6df:	rex.WR and BYTE PTR [rip+0xa293120],r13b        # 0xa6b0806
  41d6e6:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41d6ea:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  41d6f1:	rex.WRB
  41d6f2:	pop    r8
  41d6f4:	pop    rdi
  41d6f5:	rex.WRB
  41d6f6:	pop    r8
  41d6f8:	and    BYTE PTR [rax],ah
  41d6fa:	and    BYTE PTR [rcx],bh
  41d6fc:	xor    dh,BYTE PTR [rdx]
  41d6fe:	xor    esi,DWORD PTR [rbx]
  41d700:	(bad)  
  41d701:	xor    dh,BYTE PTR [rax]
  41d703:	xor    esi,DWORD PTR [rsi]
  41d705:	cmp    BYTE PTR [rip+0x35373734],dh        # 0x35790e3f
  41d70b:	cmp    BYTE PTR [rax],dh
  41d70d:	(bad)  
  41d70e:	rex.WR or r12b,BYTE PTR [rbx]
  41d711:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41d719:	rex.WB
  41d71a:	rex.WRX push rsp
  41d71c:	rex.WRB
  41d71d:	pop    r8
  41d71f:	pop    rdi
  41d720:	rex.WRB
  41d721:	pop    r8
  41d723:	and    BYTE PTR [rax],ah
  41d725:	xor    DWORD PTR [rax],edi
  41d727:	xor    al,0x34
  41d729:	ss (bad) 
  41d72b:	xor    al,0x34
  41d72d:	xor    BYTE PTR [rdi],dh
  41d72f:	xor    esi,DWORD PTR [rdi]
  41d731:	xor    BYTE PTR [rcx],bh
  41d733:	xor    eax,0x31363135
  41d738:	xor    eax,0x230a4c55
  41d73d:	gs ins BYTE PTR es:[rdi],dx
  41d73f:	jae    0x41d7a6
  41d741:	or     ah,BYTE PTR [rbx]
  41d743:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41d74b:	rex.WRX push rsp
  41d74d:	rex.WRB
  41d74e:	pop    r8
  41d750:	pop    rdi
  41d751:	rex.WRB
  41d752:	rex.WB
  41d753:	rex.WRX and BYTE PTR [rax],r12b
  41d756:	and    BYTE PTR [rax],ch
  41d758:	sub    eax,0x33323239
  41d75d:	xor    esi,DWORD PTR [rdi]
  41d75f:	xor    dh,BYTE PTR [rax]
  41d761:	xor    esi,DWORD PTR [rsi]
  41d763:	cmp    BYTE PTR [rip+0x35373734],dh        # 0x35790e9d
  41d769:	cmp    BYTE PTR [rax],dh
  41d76b:	(bad)  
  41d76c:	rex.WR
  41d76d:	rex.WR and BYTE PTR [rip+0xa293120],r13b        # 0xa6b0894
  41d774:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41d778:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  41d77f:	rex.WRB
  41d780:	pop    r8
  41d782:	pop    rdi
  41d783:	rex.WRB
  41d784:	pop    r8
  41d786:	and    BYTE PTR [rax],ah
  41d788:	and    BYTE PTR [rcx],bh
  41d78a:	xor    dh,BYTE PTR [rdx]
  41d78c:	xor    esi,DWORD PTR [rbx]
  41d78e:	(bad)  
  41d78f:	xor    dh,BYTE PTR [rax]
  41d791:	xor    esi,DWORD PTR [rsi]
  41d793:	cmp    BYTE PTR [rip+0x35373734],dh        # 0x35790ecd
  41d799:	cmp    BYTE PTR [rax],dh
  41d79b:	(bad)  
  41d79c:	rex.WR
  41d79d:	rex.WR or r12b,BYTE PTR [rbx]
  41d7a0:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41d7a8:	rex.WB
  41d7a9:	rex.WRX push rsp
  41d7ab:	rex.WRB
  41d7ac:	pop    r8
  41d7ae:	pop    rdi
  41d7af:	rex.WRB
  41d7b0:	pop    r8
  41d7b2:	and    BYTE PTR [rax],ah
  41d7b4:	xor    DWORD PTR [rax],edi
  41d7b6:	xor    al,0x34
  41d7b8:	ss (bad) 
  41d7ba:	xor    al,0x34
  41d7bc:	xor    BYTE PTR [rdi],dh
  41d7be:	xor    esi,DWORD PTR [rdi]
  41d7c0:	xor    BYTE PTR [rcx],bh
  41d7c2:	xor    eax,0x31363135
  41d7c7:	xor    eax,0xa4c4c55
  41d7cc:	and    esp,DWORD PTR [rbp+0x6e]
  41d7cf:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
	...
  41d7ff:	add    BYTE PTR [rbx],ah
  41d801:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41d809:	rex.WRX push rsp
  41d80b:	rex.WRB
  41d80c:	pop    r8
  41d80e:	pop    rdi
  41d80f:	rex.WRB
  41d810:	rex.WB
  41d811:	rex.WRX pop rbx
  41d813:	and    BYTE PTR [rcx],cl
  41d815:	pop    rbp
  41d816:	sub    ecx,DWORD PTR [rcx+0x4e]
  41d819:	push   rsp
  41d81a:	ss xor al,0x5f
  41d81d:	rex.WRB
  41d81e:	rex.WB
  41d81f:	rex.WRX or r12b,BYTE PTR [rbx]
  41d822:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41d82a:	rex.WRX push rsp
  41d82c:	rex.WRB
  41d82d:	pop    r8
  41d82f:	pop    rdi
  41d830:	rex.WRB
  41d831:	pop    r8
  41d833:	pop    rbx
  41d834:	and    BYTE PTR [rcx],cl
  41d836:	pop    rbp
  41d837:	sub    ecx,DWORD PTR [rcx+0x4e]
  41d83a:	push   rsp
  41d83b:	ss xor al,0x5f
  41d83e:	rex.WRB
  41d83f:	pop    r8
  41d841:	or     cl,BYTE PTR [rdx]
  41d843:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41d847:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41d84e:	push   rsp
  41d84f:	rex.WRB
  41d850:	pop    r8
  41d852:	pop    rdi
  41d853:	rex.WRB
  41d854:	pop    r8
  41d856:	pop    rbx
  41d857:	and    BYTE PTR [rcx],cl
  41d859:	pop    rbp
  41d85a:	sub    edx,DWORD PTR [rbp+0x49]
  41d85d:	rex.WRX push rsp
  41d85f:	ss xor al,0x5f
  41d862:	rex.WRB
  41d863:	pop    r8
	...
  41d86d:	add    BYTE PTR [rax],al
  41d86f:	add    BYTE PTR [rbx+0x74],dh
  41d872:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x7261642d
  41d87a:	ja     0x41d8e5
  41d87c:	outs   dx,BYTE PTR ds:[rsi]
  41d87d:	cs push 0x64747300
  41d883:	imul   ebp,DWORD PTR [rsi+0x74],0x682e
  41d88a:	add    BYTE PTR [rax],al
  41d88c:	add    BYTE PTR [rax],al
  41d88e:	add    BYTE PTR [rax],al
  41d890:	fs (bad) 
  41d892:	jb     0x41d90b
  41d894:	imul   ebp,DWORD PTR [rsi+0x5f],0x69647473
  41d89b:	outs   dx,BYTE PTR ds:[rsi]
  41d89c:	je     0x41d8fd
  41d89e:	xor    eax,0x66692300
  41d8a3:	and    BYTE PTR [rdi+0x5f],bl
  41d8a6:	push   rdi
  41d8a7:	rex.WRXB push r10
  41d8a9:	rex.R push rbx
  41d8ab:	rex.WB pop r10
  41d8ad:	and    BYTE PTR [rip+0x3436203d],r15b        # 0x3477f8f1
  41d8b4:	or     ah,BYTE PTR [rbx]
  41d8b6:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5320
  41d8be:	rex.WB pop r10
  41d8c0:	rex.RB pop r15
  41d8c2:	rex.WRB
  41d8c3:	pop    r8
  41d8c5:	and    BYTE PTR [rcx],dh
  41d8c7:	cmp    BYTE PTR [rsp+rsi*1],dh
  41d8ca:	ss (bad) 
  41d8cc:	xor    al,0x34
  41d8ce:	xor    BYTE PTR [rdi],dh
  41d8d0:	xor    esi,DWORD PTR [rdi]
  41d8d2:	xor    BYTE PTR [rcx],bh
  41d8d4:	xor    eax,0x31363135
  41d8d9:	xor    eax,0x230a4c55
  41d8de:	gs ins BYTE PTR es:[rdi],dx
  41d8e0:	jae    0x41d947
  41d8e2:	or     ah,BYTE PTR [rbx]
  41d8e4:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5320
  41d8ec:	rex.WB pop r10
  41d8ee:	rex.RB pop r15
  41d8f0:	rex.WRB
  41d8f1:	pop    r8
  41d8f3:	and    BYTE PTR [rdx+rsi*1],dh
  41d8f6:	cmp    DWORD PTR [rcx+rdi*1],esi
  41d8f9:	ss (bad) 
  41d8fb:	xor    bh,BYTE PTR [rcx]
  41d8fd:	xor    eax,0x230a4c55
  41d902:	outs   dx,BYTE PTR gs:[rsi]
  41d904:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
	...
  41d940:	and    ebp,DWORD PTR [rcx+0x66]
  41d943:	and    BYTE PTR [rdi+0x5f],bl
  41d946:	push   rdi
  41d947:	rex.WRXB push r10
  41d949:	rex.R push rbx
  41d94b:	rex.WB pop r10
  41d94d:	and    BYTE PTR [rip+0x3436203d],r15b        # 0x3477f991
  41d954:	or     ah,BYTE PTR [rbx]
  41d956:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5320
  41d95e:	rex.WB pop r10
  41d960:	rex.RB pop r15
  41d962:	rex.WRB
  41d963:	pop    r8
  41d965:	pop    rbx
  41d966:	and    BYTE PTR [rcx],cl
  41d968:	pop    rbp
  41d969:	sub    edx,DWORD PTR [rbp+0x49]
  41d96c:	rex.WRX push rsp
  41d96e:	ss xor al,0x5f
  41d971:	rex.WRB
  41d972:	pop    r8
  41d974:	or     ah,BYTE PTR [rbx]
  41d976:	gs ins BYTE PTR es:[rdi],dx
  41d978:	jae    0x41d9df
  41d97a:	or     ah,BYTE PTR [rbx]
  41d97c:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5320
  41d984:	rex.WB pop r10
  41d986:	rex.RB pop r15
  41d988:	rex.WRB
  41d989:	pop    r8
  41d98b:	pop    rbx
  41d98c:	and    BYTE PTR [rcx],cl
  41d98e:	pop    rbp
  41d98f:	sub    edx,DWORD PTR [rbp+0x49]
  41d992:	rex.WRX push rsp
  41d994:	xor    esi,DWORD PTR [rdx]
  41d996:	pop    rdi
  41d997:	rex.WRB
  41d998:	pop    r8
  41d99a:	or     ah,BYTE PTR [rbx]
  41d99c:	outs   dx,BYTE PTR gs:[rsi]
  41d99e:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
	...
  41d9ae:	add    BYTE PTR [rax],al
  41d9b0:	jae    0x41da26
  41d9b2:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x7261642d
  41d9ba:	ja     0x41da25
  41d9bc:	outs   dx,BYTE PTR ds:[rsi]
  41d9bd:	cs push 0x64747300
  41d9c3:	imul   ebp,DWORD PTR [rsi+0x74],0x682e
  41d9ca:	add    BYTE PTR [rax],al
  41d9cc:	add    BYTE PTR [rax],al
  41d9ce:	add    BYTE PTR [rax],al
  41d9d0:	fs (bad) 
  41d9d2:	jb     0x41da4b
  41d9d4:	imul   ebp,DWORD PTR [rsi+0x5f],0x69647473
  41d9db:	outs   dx,BYTE PTR ds:[rsi]
  41d9dc:	je     0x41da3d
  41d9de:	xor    al,0x0
  41d9e0:	and    ebp,DWORD PTR [rcx+0x66]
  41d9e3:	and    BYTE PTR [rdi+0x5f],bl
  41d9e6:	push   rdi
  41d9e7:	rex.WRXB push r10
  41d9e9:	rex.R push rbx
  41d9eb:	rex.WB pop r10
  41d9ed:	and    BYTE PTR [rip+0x3436203d],r15b        # 0x3477fa31
  41d9f4:	or     ah,BYTE PTR [rbx]
  41d9f6:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41d9fe:	rex.WB
  41d9ff:	rex.WRX push rsp
  41da01:	push   rax
  41da02:	push   rsp
  41da03:	push   rdx
  41da04:	pop    rdi
  41da05:	rex.WRB
  41da06:	pop    r8
  41da08:	and    BYTE PTR [rcx],dh
  41da0a:	cmp    BYTE PTR [rsp+rsi*1],dh
  41da0d:	ss (bad) 
  41da0f:	xor    al,0x34
  41da11:	xor    BYTE PTR [rdi],dh
  41da13:	xor    esi,DWORD PTR [rdi]
  41da15:	xor    BYTE PTR [rcx],bh
  41da17:	xor    eax,0x31363135
  41da1c:	xor    eax,0x230a4c55
  41da21:	gs ins BYTE PTR es:[rdi],dx
  41da23:	jae    0x41da8a
  41da25:	or     ah,BYTE PTR [rbx]
  41da27:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41da2f:	rex.WB
  41da30:	rex.WRX push rsp
  41da32:	push   rax
  41da33:	push   rsp
  41da34:	push   rdx
  41da35:	pop    rdi
  41da36:	rex.WRB
  41da37:	pop    r8
  41da39:	and    BYTE PTR [rdx+rsi*1],dh
  41da3c:	cmp    DWORD PTR [rcx+rdi*1],esi
  41da3f:	ss (bad) 
  41da41:	xor    bh,BYTE PTR [rcx]
  41da43:	xor    eax,0x230a4c55
  41da48:	outs   dx,BYTE PTR gs:[rsi]
  41da4a:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
	...
  41da7e:	add    BYTE PTR [rax],al
  41da80:	and    ebp,DWORD PTR [rcx+0x66]
  41da83:	and    BYTE PTR [rdi+0x5f],bl
  41da86:	push   rdi
  41da87:	rex.WRXB push r10
  41da89:	rex.R push rbx
  41da8b:	rex.WB pop r10
  41da8d:	and    BYTE PTR [rip+0x3436203d],r15b        # 0x3477fad1
  41da94:	or     ah,BYTE PTR [rbx]
  41da96:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41da9e:	rex.WB
  41da9f:	rex.WRX push rsp
  41daa1:	push   rax
  41daa2:	push   rsp
  41daa3:	push   rdx
  41daa4:	pop    rdi
  41daa5:	rex.WRB
  41daa6:	pop    r8
  41daa8:	pop    rbx
  41daa9:	and    BYTE PTR [rcx],cl
  41daab:	pop    rbp
  41daac:	sub    edx,DWORD PTR [rbp+0x49]
  41daaf:	rex.WRX push rsp
  41dab1:	ss xor al,0x5f
  41dab4:	rex.WRB
  41dab5:	pop    r8
  41dab7:	or     ah,BYTE PTR [rbx]
  41dab9:	gs ins BYTE PTR es:[rdi],dx
  41dabb:	jae    0x41db22
  41dabd:	or     ah,BYTE PTR [rbx]
  41dabf:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41dac7:	rex.WB
  41dac8:	rex.WRX push rsp
  41daca:	push   rax
  41dacb:	push   rsp
  41dacc:	push   rdx
  41dacd:	pop    rdi
  41dace:	rex.WRB
  41dacf:	pop    r8
  41dad1:	pop    rbx
  41dad2:	and    BYTE PTR [rcx],cl
  41dad4:	pop    rbp
  41dad5:	sub    edx,DWORD PTR [rbp+0x49]
  41dad8:	rex.WRX push rsp
  41dada:	xor    esi,DWORD PTR [rdx]
  41dadc:	pop    rdi
  41dadd:	rex.WRB
  41dade:	pop    r8
  41dae0:	or     ah,BYTE PTR [rbx]
  41dae2:	outs   dx,BYTE PTR gs:[rsi]
  41dae4:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
  41daec:	add    BYTE PTR [rax],al
  41daee:	add    BYTE PTR [rax],al
  41daf0:	jae    0x41db66
  41daf2:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x7261642d
  41dafa:	ja     0x41db65
  41dafc:	outs   dx,BYTE PTR ds:[rsi]
  41dafd:	cs push 0x64747300
  41db03:	imul   ebp,DWORD PTR [rsi+0x74],0x682e
  41db0a:	add    BYTE PTR [rax],al
  41db0c:	add    BYTE PTR [rax],al
  41db0e:	add    BYTE PTR [rax],al
  41db10:	fs (bad) 
  41db12:	jb     0x41db8b
  41db14:	imul   ebp,DWORD PTR [rsi+0x5f],0x69647473
  41db1b:	outs   dx,BYTE PTR ds:[rsi]
  41db1c:	je     0x41db7d
  41db1e:	xor    eax,DWORD PTR [rax]
  41db20:	and    ebp,DWORD PTR [rcx+0x66]
  41db23:	and    BYTE PTR [rdi+0x5f],bl
  41db26:	push   rdi
  41db27:	rex.WRXB push r10
  41db29:	rex.R push rbx
  41db2b:	rex.WB pop r10
  41db2d:	and    BYTE PTR [rip+0x3436203d],r15b        # 0x3477fb71
  41db34:	or     ah,BYTE PTR [rbx]
  41db36:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41db3e:	rex.WRX push rsp
  41db40:	push   rax
  41db41:	push   rsp
  41db42:	push   rdx
  41db43:	pop    rdi
  41db44:	rex.WRB
  41db45:	pop    r8
  41db47:	and    BYTE PTR [rcx],bh
  41db49:	xor    dh,BYTE PTR [rdx]
  41db4b:	xor    esi,DWORD PTR [rbx]
  41db4d:	(bad)  
  41db4e:	xor    dh,BYTE PTR [rax]
  41db50:	xor    esi,DWORD PTR [rsi]
  41db52:	cmp    BYTE PTR [rip+0x35373734],dh        # 0x3579128c
  41db58:	cmp    BYTE PTR [rax],dh
  41db5a:	(bad)  
  41db5b:	rex.WR or r12b,BYTE PTR [rbx]
  41db5e:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41db66:	rex.WRX push rsp
  41db68:	push   rax
  41db69:	push   rsp
  41db6a:	push   rdx
  41db6b:	pop    rdi
  41db6c:	rex.WRB
  41db6d:	rex.WB
  41db6e:	rex.WRX and BYTE PTR [rax],r13b
  41db71:	sub    eax,0x50544e49
  41db76:	push   rsp
  41db77:	push   rdx
  41db78:	pop    rdi
  41db79:	rex.WRB
  41db7a:	pop    r8
  41db7c:	sub    eax,0x230a2931
  41db81:	gs ins BYTE PTR es:[rdi],dx
  41db83:	jae    0x41dbea
  41db85:	or     ah,BYTE PTR [rbx]
  41db87:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41db8f:	rex.WRX push rsp
  41db91:	push   rax
  41db92:	push   rsp
  41db93:	push   rdx
  41db94:	pop    rdi
  41db95:	rex.WRB
  41db96:	pop    r8
  41db98:	and    BYTE PTR [rdx],dh
  41db9a:	xor    DWORD PTR [rdi+rsi*1],esi
  41db9d:	xor    al,0x38
  41db9f:	xor    esi,DWORD PTR [rsi]
  41dba1:	xor    al,0x37
  41dba3:	rex.WR or r12b,BYTE PTR [rbx]
  41dba6:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41dbae:	rex.WRX push rsp
  41dbb0:	push   rax
  41dbb1:	push   rsp
  41dbb2:	push   rdx
  41dbb3:	pop    rdi
  41dbb4:	rex.WRB
  41dbb5:	rex.WB
  41dbb6:	rex.WRX and BYTE PTR [rax],r13b
  41dbb9:	sub    eax,0x50544e49
  41dbbe:	push   rsp
  41dbbf:	push   rdx
  41dbc0:	pop    rdi
  41dbc1:	rex.WRB
  41dbc2:	pop    r8
  41dbc4:	sub    eax,0x230a2931
  41dbc9:	outs   dx,BYTE PTR gs:[rsi]
  41dbcb:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
	...
  41dbff:	add    BYTE PTR [rbx],ah
  41dc01:	imul   esp,DWORD PTR [rsi+0x20],0x4f575f5f
  41dc08:	push   rdx
  41dc09:	rex.R push rbx
  41dc0b:	rex.WB pop r10
  41dc0d:	and    BYTE PTR [rip+0x3436203d],r15b        # 0x3477fc51
  41dc14:	or     ah,BYTE PTR [rbx]
  41dc16:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41dc1e:	rex.WRX push rsp
  41dc20:	push   rax
  41dc21:	push   rsp
  41dc22:	push   rdx
  41dc23:	pop    rdi
  41dc24:	rex.WRB
  41dc25:	rex.WB
  41dc26:	rex.WRX pop rbx
  41dc28:	and    BYTE PTR [rcx],cl
  41dc2a:	pop    rbp
  41dc2b:	sub    ecx,DWORD PTR [rcx+0x4e]
  41dc2e:	push   rsp
  41dc2f:	ss xor al,0x5f
  41dc32:	rex.WRB
  41dc33:	rex.WB
  41dc34:	rex.WRX or r12b,BYTE PTR [rbx]
  41dc37:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41dc3f:	rex.WRX push rsp
  41dc41:	push   rax
  41dc42:	push   rsp
  41dc43:	push   rdx
  41dc44:	pop    rdi
  41dc45:	rex.WRB
  41dc46:	pop    r8
  41dc48:	pop    rbx
  41dc49:	and    BYTE PTR [rcx],cl
  41dc4b:	pop    rbp
  41dc4c:	sub    ecx,DWORD PTR [rcx+0x4e]
  41dc4f:	push   rsp
  41dc50:	ss xor al,0x5f
  41dc53:	rex.WRB
  41dc54:	pop    r8
  41dc56:	or     ah,BYTE PTR [rbx]
  41dc58:	gs ins BYTE PTR es:[rdi],dx
  41dc5a:	jae    0x41dcc1
  41dc5c:	or     ah,BYTE PTR [rbx]
  41dc5e:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41dc66:	rex.WRX push rsp
  41dc68:	push   rax
  41dc69:	push   rsp
  41dc6a:	push   rdx
  41dc6b:	pop    rdi
  41dc6c:	rex.WRB
  41dc6d:	rex.WB
  41dc6e:	rex.WRX pop rbx
  41dc70:	and    BYTE PTR [rcx],cl
  41dc72:	pop    rbp
  41dc73:	sub    ecx,DWORD PTR [rcx+0x4e]
  41dc76:	push   rsp
  41dc77:	xor    esi,DWORD PTR [rdx]
  41dc79:	pop    rdi
  41dc7a:	rex.WRB
  41dc7b:	rex.WB
  41dc7c:	rex.WRX or r12b,BYTE PTR [rbx]
  41dc7f:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41dc87:	rex.WRX push rsp
  41dc89:	push   rax
  41dc8a:	push   rsp
  41dc8b:	push   rdx
  41dc8c:	pop    rdi
  41dc8d:	rex.WRB
  41dc8e:	pop    r8
  41dc90:	pop    rbx
  41dc91:	and    BYTE PTR [rcx],cl
  41dc93:	pop    rbp
  41dc94:	sub    ecx,DWORD PTR [rcx+0x4e]
  41dc97:	push   rsp
  41dc98:	xor    esi,DWORD PTR [rdx]
  41dc9a:	pop    rdi
  41dc9b:	rex.WRB
  41dc9c:	pop    r8
  41dc9e:	or     ah,BYTE PTR [rbx]
  41dca0:	outs   dx,BYTE PTR gs:[rsi]
  41dca2:	imul   esp,DWORD PTR fs:[rsi+0x0],0x0
  41dcaa:	add    BYTE PTR [rax],al
  41dcac:	add    BYTE PTR [rax],al
  41dcae:	add    BYTE PTR [rax],al
  41dcb0:	jae    0x41dd26
  41dcb2:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x7261642d
  41dcba:	ja     0x41dd25
  41dcbc:	outs   dx,BYTE PTR ds:[rsi]
  41dcbd:	cs push 0x64747300
  41dcc3:	imul   ebp,DWORD PTR [rsi+0x74],0x682e
  41dcca:	add    BYTE PTR [rax],al
  41dccc:	add    BYTE PTR [rax],al
  41dcce:	add    BYTE PTR [rax],al
  41dcd0:	fs (bad) 
  41dcd2:	jb     0x41dd4b
  41dcd4:	imul   ebp,DWORD PTR [rsi+0x5f],0x69647473
  41dcdb:	outs   dx,BYTE PTR ds:[rsi]
  41dcdc:	je     0x41dd3d
  41dcde:	xor    al,BYTE PTR [rax]
  41dce0:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41dce4:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41dceb:	push   rsp
  41dcec:	cmp    BYTE PTR [rdi+0x43],bl
  41dcef:	sub    BYTE PTR [rsi+0x29],dh
  41dcf2:	or     DWORD PTR [rsi+0xa],esi
  41dcf5:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41dcf9:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41dd00:	push   rsp
  41dd01:	xor    DWORD PTR [rsi],esi
  41dd03:	pop    rdi
  41dd04:	rex.XB sub BYTE PTR [r14+0x29],sil
  41dd08:	or     DWORD PTR [rsi+0x0],esi
	...
  41dd3f:	add    BYTE PTR [rbx],ah
  41dd41:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41dd49:	rex.WB
  41dd4a:	rex.WRX push rsp
  41dd4c:	cmp    BYTE PTR [rdi+0x43],bl
  41dd4f:	pop    rsp
  41dd50:	sub    BYTE PTR [rsi+0x5c],dh
  41dd53:	sub    DWORD PTR [rbx+0x20],ebx
  41dd56:	or     DWORD PTR [rbp+0x2b],ebx
  41dd59:	pop    rsp
  41dd5a:	sub    BYTE PTR [rsi+0x20],dh
  41dd5d:	and    esp,DWORD PTR [rbx]
  41dd5f:	and    BYTE PTR [rbp+0x5c],dl
  41dd62:	sub    DWORD PTR [rdx],ecx
  41dd64:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41dd68:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41dd6f:	push   rsp
  41dd70:	xor    DWORD PTR [rsi],esi
  41dd72:	pop    rdi
  41dd73:	rex.XB pop r12
  41dd75:	sub    BYTE PTR [rsi+0x5c],dh
  41dd78:	sub    DWORD PTR [rbx+0x20],ebx
  41dd7b:	or     DWORD PTR [rbp+0x2b],ebx
  41dd7e:	pop    rsp
  41dd7f:	sub    BYTE PTR [rsi+0x20],dh
  41dd82:	and    esp,DWORD PTR [rbx]
  41dd84:	and    BYTE PTR [rbp+0x5c],dl
  41dd87:	sub    DWORD PTR [rax],eax
  41dd89:	add    BYTE PTR [rax],al
  41dd8b:	add    BYTE PTR [rax],al
  41dd8d:	add    BYTE PTR [rax],al
  41dd8f:	add    BYTE PTR [rbx+0x74],dh
  41dd92:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x7261642d
  41dd9a:	ja     0x41de05
  41dd9c:	outs   dx,BYTE PTR ds:[rsi]
  41dd9d:	cs push 0x64747300
  41dda3:	imul   ebp,DWORD PTR [rsi+0x74],0x682e
  41ddaa:	add    BYTE PTR [rax],al
  41ddac:	add    BYTE PTR [rax],al
  41ddae:	add    BYTE PTR [rax],al
  41ddb0:	fs (bad) 
  41ddb2:	jb     0x41de2b
  41ddb4:	imul   ebp,DWORD PTR [rsi+0x5f],0x69647473
  41ddbb:	outs   dx,BYTE PTR ds:[rsi]
  41ddbc:	je     0x41de1d
  41ddbe:	xor    DWORD PTR [rax],eax
  41ddc0:	gs js  0x41de37
  41ddc3:	gs jb  0x41de34
  41ddc6:	add    BYTE PTR [rdi+0x5f],bl
  41ddc9:	jo     0x41de3d
  41ddcb:	imul   esi,DWORD PTR [rsi+0x61],0x655f6574
  41ddd2:	js     0x41de48
  41ddd4:	gs jb  0x41de45
  41ddd7:	pop    rdi
  41ddd8:	pop    rdi
  41ddd9:	add    BYTE PTR [rax],al
  41dddb:	add    BYTE PTR [rax],al
  41dddd:	add    BYTE PTR [rax],al
  41dddf:	add    BYTE PTR [rdi+0x5f],bl
  41dde2:	jo     0x41de56
  41dde4:	imul   esi,DWORD PTR [rsi+0x61],0x655f6574
  41ddeb:	js     0x41de61
  41dded:	gs jb  0x41de5e
  41ddf0:	pop    rdi
  41ddf1:	pop    rdi
  41ddf2:	and    BYTE PTR [rbx+0x61],bl
  41ddf5:	sub    eax,0x2b5d5f7a
  41ddfa:	and    BYTE PTR [rdi+0x64],bl
  41ddfd:	jns    0x41de6b
  41ddff:	fs pop rdi
  41de01:	add    BYTE PTR [rbp+0x61],ch
  41de04:	movsxd ebp,DWORD PTR [rax+0x2d]
  41de07:	outs   dx,DWORD PTR ds:[rsi]
  41de08:	(bad)  
  41de09:	fs jns 0x41de78
  41de0c:	fs cs push 0x0
	...
  41de1f:	add    BYTE PTR [rcx+riz*2+0x72],ah
  41de23:	ja     0x41de8e
  41de25:	outs   dx,BYTE PTR ds:[rsi]
  41de26:	pop    rdi
  41de27:	jo     0x41de9b
  41de29:	imul   esi,DWORD PTR [rsi+0x61],0x655f6574
  41de30:	js     0x41dea6
  41de32:	gs jb  0x41dea3
  41de35:	add    BYTE PTR [rax],al
  41de37:	add    BYTE PTR [rax],ch
  41de39:	sub    BYTE PTR [rdi+0x5f],bl
  41de3c:	rex.RXB
  41de3d:	rex.WRX push rbp
  41de3f:	rex.XB pop r15
  41de41:	pop    rdi
  41de42:	and    BYTE PTR [rsi],bh
  41de44:	cmp    eax,0x20293420
  41de49:	jl     0x41dec7
  41de4b:	and    BYTE PTR [rax],ch
  41de4d:	pop    rdi
  41de4e:	pop    rdi
  41de4f:	rex.RXB
  41de50:	rex.WRX push rbp
  41de52:	rex.XB pop r15
  41de54:	pop    rdi
  41de55:	and    BYTE PTR [rip+0x2033203d],bh        # 0x2074fe98
  41de5b:	es and BYTE PTR es:[rdi+0x5f],bl
  41de60:	rex.RXB
  41de61:	rex.WRX push rbp
  41de63:	rex.XB pop r15
  41de65:	rex.WRB
  41de66:	rex.WB
  41de67:	rex.WRX
  41de68:	rex.WRXB push r10
  41de6a:	pop    rdi
  41de6b:	pop    rdi
  41de6c:	and    BYTE PTR [rsi],bh
  41de6e:	cmp    eax,0x29293120
	...
  41de7f:	add    BYTE PTR [rax+rbp*1+0x5f],bl
  41de83:	pop    rdi
  41de84:	rex.RXB
  41de85:	rex.WRX push rbp
  41de87:	rex.XB pop r15
  41de89:	pop    rdi
  41de8a:	and    BYTE PTR [rsi],bh
  41de8c:	cmp    eax,0x295c3320
  41de91:	and    BYTE PTR [rsi],ah
  41de93:	and    BYTE PTR es:[rax+rbp*1+0x5f],bl
  41de98:	pop    rdi
  41de99:	rex.RXB
  41de9a:	rex.WRX push rbp
  41de9c:	rex.XB pop r15
  41de9e:	rex.WRB
  41de9f:	rex.WB
  41dea0:	rex.WRX
  41dea1:	rex.WRXB push r10
  41dea3:	pop    rdi
  41dea4:	pop    rdi
  41dea5:	and    BYTE PTR [rsi],bh
  41dea7:	cmp    eax,0x295c3120
  41deac:	add    BYTE PTR [rax],al
  41deae:	add    BYTE PTR [rax],al
  41deb0:	rex.B jbe 0x41df14
  41deb3:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x74696c69
  41debb:	jns    0x41df0a
  41debd:	(bad)  
  41debe:	movsxd esi,DWORD PTR [rdx+0x6f]
  41dec1:	jae    0x41def1
  41dec3:	push   0x0
	...
  41ded0:	fs (bad) 
  41ded2:	jb     0x41df4b
  41ded4:	imul   ebp,DWORD PTR [rsi+0x5f],0x34636367
  41dedb:	pop    rdi
  41dedc:	(bad)
  41dee1:	(bad)  
  41dee2:	add    BYTE PTR gs:[eax],al
  41dee6:	add    BYTE PTR [rax],al
  41dee8:	and    ebp,DWORD PTR [rcx+0x66]
  41deeb:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  41def1:	movsxd esi,DWORD PTR [rax+0x6c]
  41def4:	jne    0x41df69
  41def6:	jo     0x41df64
  41def8:	jne    0x41df6d
  41defa:	or     ah,BYTE PTR [rbp+0x78]
  41defd:	je     0x41df64
  41deff:	jb     0x41df6f
  41df01:	and    BYTE PTR [rdx],ah
  41df03:	rex.XB and spl,BYTE PTR [r8]
  41df06:	jnp    0x41df12
  41df08:	and    esp,DWORD PTR [rbp+0x6e]
  41df0b:	imul   esp,DWORD PTR fs:[rsi+0xa],0x66692300
  41df13:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  41df19:	movsxd esi,DWORD PTR [rax+0x6c]
  41df1c:	jne    0x41df91
  41df1e:	jo     0x41df8c
  41df20:	jne    0x41df95
  41df22:	or     bh,BYTE PTR [rbp+0xa]
  41df25:	and    esp,DWORD PTR [rbp+0x6e]
  41df28:	imul   esp,DWORD PTR fs:[rsi+0xa],0x425f5f00
  41df30:	rex.RB
  41df31:	rex.RXB
  41df32:	rex.WB
  41df33:	rex.WRX pop rdi
  41df35:	rex.R
  41df36:	rex.RB
  41df37:	rex.XB
  41df38:	rex.WR push rbx
  41df3a:	add    BYTE PTR [rbp+0x78],ah
  41df3d:	je     0x41dfa4
  41df3f:	jb     0x41dfaf
  41df41:	and    BYTE PTR [rdx],ah
  41df43:	rex.XB and al,BYTE PTR [r8]
	...
  41df7e:	add    BYTE PTR [rax],al
  41df80:	ins    DWORD PTR es:[rdi],dx
  41df81:	(bad)  
  41df82:	movsxd ebp,DWORD PTR [rax+0x2d]
  41df85:	outs   dx,DWORD PTR ds:[rsi]
  41df86:	(bad)  
  41df87:	jae    0x41e000
  41df89:	(bad)  
  41df8a:	jo     0x41dfba
  41df8c:	push   0x63616d00
  41df91:	push   0x63616d2f
  41df96:	push   0x6d69745f
  41df9b:	gs cs push 0x63616d00
  41dfa2:	push   0x63616d2f
  41dfa7:	push   0x6172745f
  41dfac:	jo     0x41e021
  41dfae:	cs push 0x63616d00
  41dfb4:	push   0x73656d2f
  41dfb9:	jae    0x41e01c
  41dfbb:	addr32 gs cs push 0x63616d00
  41dfc3:	push   0x67696d2f
  41dfc8:	cs push 0x63616d00
  41dfce:	push   0x6d65732f
  41dfd3:	(bad)  
  41dfd4:	jo     0x41e03e
  41dfd6:	outs   dx,DWORD PTR ds:[rsi]
  41dfd7:	jb     0x41e03e
  41dfd9:	cs push 0x61640000
  41dfdf:	jb     0x41e058
  41dfe1:	imul   ebp,DWORD PTR [rsi+0x5f],0x65747865
  41dfe8:	jb     0x41e058
  41dfea:	movsxd eax,DWORD PTR [rax]
  41dfec:	and    eax,0x32253c31
  41dff1:	cs push 0x3e
  41dff7:	add    BYTE PTR [rax],ch
  41dff9:	pop    rbx
  41dffa:	and    BYTE PTR [rsp+rsi*2+0x5d],bl
  41dffe:	sub    ah,BYTE PTR [rbx]
  41e000:	pop    rbx
  41e001:	and    BYTE PTR [rsp+rsi*2+0x5d],bl
  41e005:	sub    ch,BYTE PTR [rcx+0x6e]
  41e008:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  41e00c:	gs pop rbx
  41e00e:	and    BYTE PTR [rsp+rsi*2+0x5d],bl
  41e012:	sub    ebp,DWORD PTR [rcx]
  41e014:	and    ch,BYTE PTR [rax]
  41e016:	pop    rbx
  41e017:	(bad)  
  41e018:	sub    eax,0x392d307a
  41e01d:	(bad)  
  41e01e:	pop    rbp
  41e01f:	sub    ebp,DWORD PTR [rcx]
  41e021:	pop    rsp
  41e022:	cs push 0x22
	...
  41e030:	and    ebp,DWORD PTR [rcx+0x6e]
  41e033:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  41e037:	gs pop rbx
  41e039:	and    BYTE PTR [rsp+rsi*2+0x5d],bl
  41e03d:	sub    ebx,DWORD PTR [rdx+riz*1+0x0]
  41e041:	sub    ch,BYTE PTR [rip+0x61642d2a]        # 0x61a60d71
  41e047:	jb     0x41e0c0
  41e049:	imul   ebp,DWORD PTR [rsi+0x37],0x2a392e
  41e050:	ins    DWORD PTR es:[rdi],dx
  41e051:	(bad)  
  41e052:	je     0x41e0bc
  41e054:	cs push 0x0
  41e05a:	add    BYTE PTR [rax],al
  41e05c:	add    BYTE PTR [rax],al
  41e05e:	add    BYTE PTR [rax],al
  41e060:	fs (bad) 
  41e062:	jb     0x41e0db
  41e064:	imul   ebp,DWORD PTR [rsi+0x5f],0x6f6c5f39
  41e06b:	outs   dx,BYTE PTR ds:[rsi]
  41e06c:	addr32 pop rdi
  41e06e:	outs   dx,DWORD PTR fs:[rsi]
  41e070:	jne    0x41e0d4
  41e072:	ins    BYTE PTR es:[rdi],dx
  41e073:	gs pop rdi
  41e075:	data16 jne 0x41e0e6
  41e078:	movsxd esi,DWORD PTR [rbx+0x5f]
  41e07b:	xor    al,BYTE PTR [rax]
  41e07d:	add    BYTE PTR [rax],al
  41e07f:	add    BYTE PTR [rdx],ah
  41e081:	and    dil,BYTE PTR [r15+r11*2+0x5f]
  41e086:	rex.X
  41e087:	rex.RB
  41e088:	rex.RXB
  41e089:	rex.WB
  41e08a:	rex.WRX pop rdi
  41e08c:	rex.R
  41e08d:	rex.RB
  41e08e:	rex.XB
  41e08f:	rex.WR push rbx
  41e091:	add    BYTE PTR [rbx+0x5e],bl
  41e094:	and    ebx,DWORD PTR [rbp+0x2b]
  41e097:	ins    DWORD PTR es:[rdi],dx
  41e098:	(bad)  
  41e099:	ins    BYTE PTR es:[rdi],dx
  41e09a:	ins    BYTE PTR es:[rdi],dx
  41e09b:	outs   dx,DWORD PTR ds:[rsi]
  41e09c:	movsxd ebp,DWORD PTR [rsi]
  41e09e:	sub    bh,BYTE PTR [rbx]
	...
  41e0b0:	jae    0x41e12b
  41e0b2:	jae    0x41e0e3
  41e0b4:	ins    DWORD PTR es:[rdi],dx
  41e0b5:	ins    DWORD PTR es:[rdi],dx
  41e0b6:	(bad)  
  41e0b7:	outs   dx,BYTE PTR ds:[rsi]
  41e0b8:	cs push 0x63707200
  41e0be:	(bad)  
  41e0bf:	je     0x41e13a
  41e0c1:	jo     0x41e128
  41e0c3:	jae    0x41e0f3
  41e0c5:	push   0x78630000
  41e0ca:	js     0x41e12b
  41e0cc:	jne    0x41e13c
  41e0ce:	jb     0x41e135
  41e0d0:	(bad)  
  41e0d1:	fs jns 0x41e0d4
  41e0d4:	rex.XB push r12
  41e0d6:	push   rdx
  41e0d7:	rex.WR add BYTE PTR [rax],r8b
  41e0da:	add    BYTE PTR [rax],al
  41e0dc:	add    BYTE PTR [rax],al
  41e0de:	add    BYTE PTR [rax],al
  41e0e0:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41e0e8:	or     DWORD PTR [rbp+0x2b],ebx
  41e0eb:	pop    rbx
  41e0ec:	rex.B sub eax,0x392d305a
  41e0f2:	pop    rdi
  41e0f3:	pop    rbp
  41e0f4:	sub    ebx,DWORD PTR [rbx+0x20]
  41e0f7:	or     DWORD PTR [rbp+0x2b],ebx
  41e0fa:	pop    rbx
  41e0fb:	rex.B sub eax,0x392d305a
  41e101:	pop    rdi
  41e102:	pop    rbp
  41e103:	sub    eax,DWORD PTR [rbx+0x54]
  41e106:	push   rdx
  41e107:	rex.WR pop rbx
  41e109:	and    BYTE PTR [rcx],cl
  41e10b:	pop    rbp
  41e10c:	sub    bl,BYTE PTR [rax+rbp*1+0x20]
  41e110:	sub    bl,BYTE PTR [rbx+0x5e]
  41e113:	sub    al,0x27
  41e115:	pop    rbp
	...
  41e11e:	add    BYTE PTR [rax],al
  41e120:	movsxd esi,DWORD PTR [rdx+rsi*2+0x6c]
  41e124:	pop    rdi
  41e125:	jno    0x41e19c
  41e127:	outs   dx,DWORD PTR ds:[rsi]
  41e128:	je     0x41e18f
  41e12a:	jae    0x41e18b
  41e12c:	jne    0x41e1a1
  41e12e:	add    BYTE PTR gs:[rax],al
	...
  41e13d:	add    BYTE PTR [rax],al
  41e13f:	add    BYTE PTR [rbp+riz*2+0x66],ah
  41e143:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41e14a:	sub    ebx,DWORD PTR [rbx+0x41]
  41e14d:	sub    eax,0x392d305a
  41e152:	pop    rdi
  41e153:	pop    rbp
  41e154:	sub    eax,DWORD PTR [rbx+0x54]
  41e157:	push   rdx
  41e158:	rex.WR pop rsp
  41e15a:	sub    BYTE PTR [rbx+0x61],bl
  41e15d:	sub    eax,0x5a2d417a
  41e162:	pop    rbp
  41e163:	pop    rbx
  41e164:	sub    al,0x29
  41e166:	pop    rbp
	...
  41e16f:	add    BYTE PTR [rbx+0x74],ah
  41e172:	jb     0x41e1e0
  41e174:	pop    rdi
  41e175:	jno    0x41e1ec
  41e177:	outs   dx,DWORD PTR ds:[rsi]
  41e178:	je     0x41e1df
  41e17a:	jae    0x41e1db
  41e17c:	fs data16 add BYTE PTR gs:[rdi],ch
  41e181:	sub    ah,BYTE PTR [rax]
  41e183:	pop    rdi
  41e184:	pop    rdi
  41e185:	(bad)  
  41e186:	jne    0x41e1f1
  41e188:	ins    BYTE PTR es:[rdi],dx
  41e189:	je     0x41e1f4
  41e18b:	outs   dx,BYTE PTR ds:[rsi]
  41e18c:	pop    rdi
  41e18d:	ja     0x41e1f0
  41e18f:	jb     0x41e1ff
  41e191:	imul   ebp,DWORD PTR [rsi+0x67],0x202c7828
  41e198:	jns    0x41e1c8
  41e19a:	cs sub DWORD PTR cs:[rax],esp
  41e19e:	imul   esi,DWORD PTR [rbx+0x20],0x6f73626f
  41e1a5:	ins    BYTE PTR es:[rdi],dx
  41e1a6:	gs je  0x41e20e
  41e1a9:	and    BYTE PTR [rdx],ch
  41e1ab:	(bad)  
	...
  41e1c0:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41e1c4:	imul   ebp,DWORD PTR [rsi+0x65],0x625f5f20
  41e1cb:	jne    0x41e236
  41e1cd:	ins    BYTE PTR es:[rdi],dx
  41e1ce:	je     0x41e239
  41e1d0:	outs   dx,BYTE PTR ds:[rsi]
  41e1d1:	pop    rdi
  41e1d2:	ja     0x41e235
  41e1d4:	jb     0x41e244
  41e1d6:	imul   ebp,DWORD PTR [rsi+0x67],0x2c78285c
  41e1dd:	and    BYTE PTR [rcx+0x5c],bh
  41e1e0:	cs pop rsp
  41e1e2:	cs pop rsp
  41e1e4:	cs pop rsp
  41e1e6:	sub    DWORD PTR [rax],esp
  41e1e8:	pop    rsp
  41e1e9:	sub    BYTE PTR [rcx],dh
  41e1eb:	pop    rsp
  41e1ec:	sub    DWORD PTR [rax],eax
  41e1ee:	add    BYTE PTR [rax],al
  41e1f0:	ins    BYTE PTR es:[rdi],dx
  41e1f1:	imul   ebp,DWORD PTR [rsi+0x75],0x6f632f78
  41e1f8:	ins    DWORD PTR es:[rdi],dx
  41e1f9:	jo     0x41e264
  41e1fb:	ins    BYTE PTR es:[rdi],dx
  41e1fc:	gs jb  0x41e22d
  41e1ff:	push   0x0
	...
  41e210:	movsxd ebp,DWORD PTR [rdi+0x6d]
  41e213:	jo     0x41e281
  41e215:	imul   esp,DWORD PTR [rbp+0x72],0x745f685f
  41e21c:	jb     0x41e27f
  41e21e:	movsxd esi,DWORD PTR fs:[rax+0x70]
  41e222:	add    BYTE PTR [rax],al
  41e224:	add    BYTE PTR [rax],al
  41e226:	add    BYTE PTR [rax],al
  41e228:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41e22c:	imul   ebp,DWORD PTR [rsi+0x65],0x53425f20
  41e233:	rex.R pop rdi
  41e235:	push   rbx
  41e236:	push   rsp
  41e237:	push   rdx
  41e238:	rex.WB
  41e239:	rex.WRX
  41e23a:	rex.RXB sub BYTE PTR [r15+0x42],r11b
  41e23e:	push   rbx
  41e23f:	rex.R pop rdi
  41e241:	pop    rax
  41e242:	sub    DWORD PTR [rax],esp
  41e244:	pop    rdi
  41e245:	rex.X push rbx
  41e247:	rex.R pop rdi
  41e249:	push   rbx
  41e24a:	push   rsp
  41e24b:	push   rdx
  41e24c:	rex.WB
  41e24d:	rex.WRX
  41e24e:	rex.RXB pop r8
  41e250:	sub    BYTE PTR [rdi+0x42],bl
  41e253:	push   rbx
  41e254:	rex.R pop rdi
  41e256:	pop    rax
  41e257:	sub    DWORD PTR [rdx],ecx
  41e259:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41e25d:	imul   ebp,DWORD PTR [rsi+0x65],0x53425f20
  41e264:	rex.R pop rdi
  41e266:	push   rbx
  41e267:	push   rsp
  41e268:	push   rdx
  41e269:	rex.WB
  41e26a:	rex.WRX
  41e26b:	rex.RXB pop r8
  41e26d:	sub    BYTE PTR [rdi+0x42],bl
  41e270:	push   rbx
  41e271:	rex.R pop rdi
  41e273:	pop    rax
  41e274:	sub    DWORD PTR [rax],esp
  41e276:	and    ebx,DWORD PTR [rdi+0x42]
  41e279:	push   rbx
  41e27a:	rex.R pop rdi
  41e27c:	pop    rax
  41e27d:	or     ch,BYTE PTR [rcx+0x6e]
  41e280:	je     0x41e2a2
  41e282:	jbe    0x41e2ea
  41e284:	jae    0x41e2e9
  41e286:	(bad)  
  41e287:	outs   dx,BYTE PTR ds:[rsi]
  41e288:	data16 sub BYTE PTR [rsi+0x49],al
  41e28c:	rex.WR
  41e28d:	and    BYTE PTR [r10],r13b
  41e290:	sub    al,0x20
  41e292:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41e295:	jae    0x41e30b
  41e297:	and    BYTE PTR [rbx+0x68],ah
  41e29a:	(bad)  
  41e29b:	jb     0x41e2bd
  41e29d:	sub    ch,BYTE PTR [rax+riz*1]
  41e2a0:	pop    rdi
  41e2a1:	pop    rdi
  41e2a2:	(bad)  
  41e2a3:	jne    0x41e30e
  41e2a5:	ins    BYTE PTR es:[rdi],dx
  41e2a6:	je     0x41e311
  41e2a8:	outs   dx,BYTE PTR ds:[rsi]
  41e2a9:	pop    rdi
  41e2aa:	jbe    0x41e30d
  41e2ac:	pop    rdi
  41e2ad:	ins    BYTE PTR es:[rdi],dx
  41e2ae:	imul   esi,DWORD PTR [rbx+0x74],0x5f5f2029
  41e2b5:	(bad)  
  41e2b6:	jae    0x41e325
  41e2b8:	pop    rdi
  41e2b9:	pop    rdi
  41e2ba:	and    BYTE PTR [rax],ch
  41e2bc:	pop    rdi
  41e2bd:	rex.X push rbx
  41e2bf:	rex.R pop rdi
  41e2c1:	push   rbx
  41e2c2:	push   rsp
  41e2c3:	push   rdx
  41e2c4:	rex.WB
  41e2c5:	rex.WRX
  41e2c6:	rex.RXB sub BYTE PTR [r15+0x5f],r11b
  41e2ca:	push   rbp
  41e2cb:	push   rbx
  41e2cc:	rex.RB push r10
  41e2ce:	pop    rdi
  41e2cf:	rex.WR
  41e2d0:	rex.B
  41e2d1:	rex.X
  41e2d2:	rex.RB
  41e2d3:	rex.WR pop rdi
  41e2d5:	push   rax
  41e2d6:	push   rdx
  41e2d7:	rex.RB
  41e2d8:	rex.RX
  41e2d9:	rex.WB pop r8
  41e2db:	pop    rdi
  41e2dc:	pop    rdi
  41e2dd:	sub    DWORD PTR [rax],esp
  41e2df:	and    bl,BYTE PTR [rdi+0x5f]
  41e2e2:	jae    0x41e35a
  41e2e4:	data16 jae 0x41e34a
  41e2e7:	(bad)  
  41e2e8:	outs   dx,BYTE PTR ds:[rsi]
  41e2e9:	data16 and ch,BYTE PTR [rcx]
  41e2ec:	cmp    eax,DWORD PTR [rax]
	...
  41e2fe:	add    BYTE PTR [rax],al
  41e300:	pop    rsi
  41e301:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41e305:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41e30c:	sub    dh,BYTE PTR [rsi+0x66]
  41e30f:	jae    0x41e374
  41e311:	(bad)  
  41e312:	outs   dx,BYTE PTR ds:[rsi]
  41e313:	pop    bx
  41e315:	and    BYTE PTR [rcx],cl
  41e317:	pop    rbp
  41e318:	sub    bl,BYTE PTR [rdi+0x5f]
  41e31b:	jae    0x41e393
  41e31d:	data16 jae 0x41e383
  41e320:	(bad)  
  41e321:	outs   dx,BYTE PTR ds:[rsi]
  41e322:	pop    bx
  41e324:	and    BYTE PTR [rcx],cl
  41e326:	pop    rbp
  41e327:	sub    ah,BYTE PTR [rax+rax*1]
  41e32a:	sub    ch,BYTE PTR [rip+0x622a2d2a]        # 0x626c105a
  41e330:	jae    0x41e396
  41e332:	sub    al,BYTE PTR [rax]
  41e334:	sub    ch,BYTE PTR [rip+0x642a2d2a]        # 0x646c1064
  41e33a:	(bad)  
  41e33b:	jb     0x41e3b4
  41e33d:	imul   ebp,DWORD PTR [rsi+0x2a],0x64747300
  41e344:	imul   ebp,DWORD PTR [rdi+0x2e],0x68
  41e34b:	add    BYTE PTR [rax],al
  41e34d:	add    BYTE PTR [rax],al
  41e34f:	add    BYTE PTR [rdx+0x73],ah
  41e352:	fs pop rdi
  41e354:	jae    0x41e3ca
  41e356:	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x72747461
  41e35e:	jae    0x41e3bf
  41e360:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41e363:	data16 ins BYTE PTR es:[rdi],dx
  41e365:	imul   esp,DWORD PTR [rbx+0x74],0x66692300
  41e36c:	and    BYTE PTR [rcx],dh
  41e36e:	add    BYTE PTR [rax+0x6f],dh
  41e371:	ja     0x41e3df
	...
  41e37f:	add    BYTE PTR [rbx],ah
  41e381:	imul   esp,DWORD PTR [rsi+0x20],0x69666564
  41e388:	outs   dx,BYTE PTR ds:[rsi]
  41e389:	gs fs pop rsp
  41e38c:	sub    BYTE PTR [rdi+0x5f],bl
  41e38f:	push   r8
  41e391:	push   rax
  41e392:	rex.WR
  41e393:	rex.RB pop r15
  41e395:	rex.XB
  41e396:	rex.XB pop r15
  41e398:	pop    rdi
  41e399:	pop    rsp
  41e39a:	sub    DWORD PTR [rax],esp
  41e39c:	es and BYTE PTR es:[rax+rbp*1+0x5f],bl
  41e3a2:	pop    rdi
  41e3a3:	push   r8
  41e3a5:	push   rax
  41e3a6:	rex.WR
  41e3a7:	rex.RB pop r15
  41e3a9:	rex.XB
  41e3aa:	rex.XB pop r15
  41e3ac:	pop    rdi
  41e3ad:	and    BYTE PTR [rsi],bh
  41e3af:	cmp    eax,0x34333120
  41e3b4:	xor    eax,0x295c
  41e3b9:	add    BYTE PTR [rax],al
  41e3bb:	add    BYTE PTR [rax],al
  41e3bd:	add    BYTE PTR [rax],al
  41e3bf:	add    BYTE PTR [rcx+0x72],ah
  41e3c2:	movsxd ebp,DWORD PTR [rax+0x69]
  41e3c5:	je     0x41e42c
  41e3c7:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  41e3cb:	gs (bad) 
  41e3cd:	jo     0x41e43f
  41e3cf:	movsxd ebp,DWORD PTR [rdi]
  41e3d1:	ins    DWORD PTR es:[rdi],dx
  41e3d2:	(bad)  
  41e3d3:	je     0x41e43d
  41e3d5:	cs push 0x63726100
  41e3db:	push   0x63657469
  41e3e0:	je     0x41e457
  41e3e2:	jb     0x41e449
  41e3e4:	(bad)  
  41e3e5:	sub    ch,BYTE PTR [rdi]
  41e3e7:	ins    DWORD PTR es:[rdi],dx
  41e3e8:	(bad)  
  41e3e9:	je     0x41e453
  41e3eb:	cs push 0x72620000
  41e3f1:	outs   dx,DWORD PTR ds:[rsi]
  41e3f2:	imul   esp,DWORD PTR [rbp+0x6e],0x5f
  41e3f6:	outs   dx,BYTE PTR ds:[rsi]
  41e3f7:	(bad)  
  41e3f8:	outs   dx,BYTE PTR ds:[rsi]
  41e3f9:	add    BYTE PTR [rax],al
  41e3fb:	add    BYTE PTR [rax],al
  41e3fd:	add    BYTE PTR [rax],al
  41e3ff:	add    BYTE PTR [rbx+0x2f],dh
  41e402:	pop    rsi
  41e403:	gs js  0x41e47a
  41e406:	gs jb  0x41e477
  41e409:	pop    rbx
  41e40a:	and    BYTE PTR [rcx],cl
  41e40c:	pop    rbp
  41e40d:	sub    ah,BYTE PTR [rdi+rbp*2+0x75]
  41e411:	(bad)  
  41e412:	ins    BYTE PTR es:[rdi],dx
  41e413:	gs pop rbx
  41e415:	and    BYTE PTR [rcx],cl
  41e417:	pop    rbp
  41e418:	sub    ah,BYTE PTR [rbx+0x61]
  41e41b:	(bad)  
  41e41d:	pop    rbx
  41e41e:	and    BYTE PTR [rcx],cl
  41e420:	pop    rbp
  41e421:	sub    ch,BYTE PTR [rax]
  41e423:	pop    rbx
  41e424:	pop    rsi
  41e425:	pop    rsp
  41e426:	sub    DWORD PTR [rbp+0x2a],ebx
  41e429:	sub    DWORD PTR [rbx],edi
  41e42b:	(bad)  
  41e42c:	(bad)  
  41e42d:	add    BYTE PTR [rax],al
  41e42f:	add    BYTE PTR [rbx+0x2f],dh
  41e432:	pop    rsi
  41e433:	gs js  0x41e4aa
  41e436:	gs jb  0x41e4a7
  41e439:	pop    rbx
  41e43a:	and    BYTE PTR [rcx],cl
  41e43c:	pop    rbp
  41e43d:	sub    ch,BYTE PTR [rdi+rbp*2+0x6e]
  41e441:	addr32 pop rbx
  41e443:	and    BYTE PTR [rcx],cl
  41e445:	pop    rbp
  41e446:	sub    ah,BYTE PTR [rdi+rbp*2+0x75]
  41e44a:	(bad)  
  41e44b:	ins    BYTE PTR es:[rdi],dx
  41e44c:	gs pop rbx
  41e44e:	and    BYTE PTR [rcx],cl
  41e450:	pop    rbp
  41e451:	sub    ah,BYTE PTR [rbx+0x61]
  41e454:	(bad)
  41e459:	or     DWORD PTR [rbp+0x2a],ebx
  41e45c:	sub    BYTE PTR [rbx+0x5e],bl
  41e45f:	pop    rsp
  41e460:	sub    DWORD PTR [rbp+0x2a],ebx
  41e463:	sub    DWORD PTR [rbx],edi
  41e465:	(bad)  
  41e466:	(bad)  
	...
  41e46f:	add    BYTE PTR [rsi+0x65],bl
  41e472:	js     0x41e4e8
  41e474:	gs jb  0x41e4e5
  41e477:	pop    rbx
  41e478:	and    BYTE PTR [rcx],cl
  41e47a:	pop    rbp
  41e47b:	sub    esp,DWORD PTR [rdi+rbp*2+0x75]
  41e47f:	(bad)  
  41e480:	ins    BYTE PTR es:[rdi],dx
  41e481:	gs pop rbx
  41e483:	and    BYTE PTR [rcx],cl
  41e485:	pop    rbp
  41e486:	sub    esp,DWORD PTR [rbx+0x61]
  41e489:	(bad)  
  41e48b:	add    BYTE PTR [rax],al
  41e48d:	add    BYTE PTR [rax],al
  41e48f:	add    BYTE PTR [rbp+0x61],ch
  41e492:	je     0x41e4fc
  41e494:	cs push 0x63726100
  41e49a:	push   0x63657469
  41e49f:	je     0x41e516
  41e4a1:	jb     0x41e508
  41e4a3:	(bad)  
  41e4a4:	sub    ch,BYTE PTR [rdi]
  41e4a6:	ins    DWORD PTR es:[rdi],dx
  41e4a7:	(bad)  
  41e4a8:	je     0x41e512
  41e4aa:	cs push 0x72620000
  41e4b0:	outs   dx,DWORD PTR ds:[rsi]
  41e4b1:	imul   esp,DWORD PTR [rbp+0x6e],0x5f
  41e4b5:	movsxd esp,DWORD PTR [rcx+0x62]
  41e4b8:	jae    0x41e4ba
  41e4ba:	add    BYTE PTR [rax],al
  41e4bc:	add    BYTE PTR [rax],al
  41e4be:	add    BYTE PTR [rax],al
  41e4c0:	and    ebp,DWORD PTR [rcx+0x66]
  41e4c3:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  41e4c9:	movsxd esi,DWORD PTR [rax+0x6c]
  41e4cc:	jne    0x41e541
  41e4ce:	jo     0x41e53c
  41e4d0:	jne    0x41e545
  41e4d2:	or     ah,BYTE PTR [rbx]
  41e4d4:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  41e4db:	and    BYTE PTR [rbx+rsi*2],bh
  41e4de:	je     0x41e544
  41e4e0:	ins    BYTE PTR es:[rdi],dx
  41e4e1:	imul   esp,DWORD PTR [rdx+0x2e],0x230a3e68
  41e4e8:	outs   dx,BYTE PTR gs:[rsi]
  41e4ea:	imul   esp,DWORD PTR fs:[rsi+0xa],0x6e690000
  41e4f2:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  41e4f6:	gs sub dh,BYTE PTR cs:[rbx+0x74]
  41e4fb:	fs ins BYTE PTR es:[rdi],dx
  41e4fd:	imul   esp,DWORD PTR [rdx+0x5c],0x682e
	...
  41e510:	gs js  0x41e57c
  41e513:	je     0x41e535
  41e515:	sub    bl,BYTE PTR [rax+rbp*1+0x7c]
  41e519:	(bad)  
  41e51a:	(bad)  
  41e51b:	outs   dx,DWORD PTR ds:[rsi]
  41e51c:	jb     0x41e592
  41e51e:	and    BYTE PTR [rdx],ch
  41e520:	pop    rsp
  41e521:	sub    BYTE PTR [rax],al
  41e523:	(bad)  
  41e524:	jae    0x41e599
  41e526:	gs jb  0x41e59d
  41e529:	cs push 0x0
  41e52f:	add    BYTE PTR [rdx+0x72],ah
  41e532:	outs   dx,DWORD PTR ds:[rsi]
  41e533:	imul   esp,DWORD PTR [rbp+0x6e],0x5f
  41e537:	(bad)  
  41e538:	jae    0x41e5ad
  41e53a:	gs jb  0x41e5b1
  41e53d:	pop    rdi
  41e53e:	jae    0x41e5b4
  41e540:	fs ins BYTE PTR es:[rdi],dx
  41e542:	imul   esp,DWORD PTR [rdx+0x0],0x636e6923
  41e549:	ins    BYTE PTR es:[rdi],dx
  41e54a:	jne    0x41e5b0
  41e54c:	and    BYTE PTR gs:[rbx+rsi*2],bh
  41e550:	je     0x41e5b6
  41e552:	imul   ebp,DWORD PTR [rdi+0x2e],0xa3e68
  41e559:	add    BYTE PTR [rax],al
  41e55b:	add    BYTE PTR [rax],al
  41e55d:	add    BYTE PTR [rax],al
  41e55f:	add    BYTE PTR [rcx+0x6e],ch
  41e562:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  41e566:	gs sub dh,BYTE PTR cs:[rbx+0x74]
  41e56b:	imul   ebp,DWORD PTR fs:[rdi+0x5c],0x7300682e
  41e573:	je     0x41e5d9
  41e575:	gs jb  0x41e5ea
  41e578:	add    BYTE PTR [rcx+0x73],ah
  41e57b:	jae    0x41e5e2
  41e57d:	jb     0x41e5f3
  41e57f:	cs push 0x0
	...
  41e58d:	add    BYTE PTR [rax],al
  41e58f:	add    BYTE PTR [rdx+0x72],ah
  41e592:	outs   dx,DWORD PTR ds:[rsi]
  41e593:	imul   esp,DWORD PTR [rbp+0x6e],0x5f
  41e597:	(bad)  
  41e598:	jae    0x41e60d
  41e59a:	gs jb  0x41e611
  41e59d:	pop    rdi
  41e59e:	jae    0x41e614
  41e5a0:	imul   ebp,DWORD PTR fs:[rdi+0x0],0x73656f64
  41e5a8:	and    BYTE PTR [rsi+0x6f],ch
  41e5ab:	je     0x41e5ad
  41e5ad:	outs   dx,DWORD PTR fs:[rsi]
  41e5af:	gs jae 0x41e620
  41e5b2:	(bad)  
  41e5b3:	je     0x41e5b5
	...
  41e5bd:	add    BYTE PTR [rax],al
  41e5bf:	add    BYTE PTR [rbx+0x75],dh
  41e5c2:	outs   dx,BYTE PTR ds:[rsi]
  41e5c3:	fs gs jbe 0x41e5f6
  41e5c7:	jbe    0x41e63e
  41e5c9:	imul   esp,DWORD PTR [rdi+rbx*2+0x65],0x746e6576
  41e5d1:	cs push 0x61620000
  41e5d7:	fs jno 0x41e64f
  41e5da:	outs   dx,DWORD PTR ds:[rsi]
  41e5db:	je     0x41e642
  41e5dd:	add    BYTE PTR [rbx+0x74],dh
  41e5e0:	jb     0x41e657
  41e5e2:	movsxd esi,DWORD PTR [rax+riz*1+0x74]
  41e5e6:	gs jb  0x41e656
  41e5e9:	cmp    eax,DWORD PTR [rax]
	...
  41e5ff:	add    BYTE PTR [rsi+0x5b],bl
  41e602:	and    BYTE PTR [rcx],cl
  41e604:	pop    rbp
  41e605:	sub    dh,BYTE PTR [rcx+rdi*2+0x70]
  41e609:	gs fs gs pop bx
  41e60e:	and    BYTE PTR [rcx],cl
  41e610:	pop    rbp
  41e611:	sub    esi,DWORD PTR [rbx+0x74]
  41e614:	jb     0x41e68b
  41e616:	movsxd esi,DWORD PTR [rbx+rbx*2+0x20]
  41e61a:	or     DWORD PTR [rbp+0x2b],ebx
  41e61d:	je     0x41e684
  41e61f:	jb     0x41e68e
  41e621:	pop    rbx
  41e622:	and    BYTE PTR [rcx],cl
  41e624:	pop    rbp
  41e625:	sub    bh,BYTE PTR [rbx]
  41e627:	add    BYTE PTR [rbx+0x75],ah
  41e62a:	jb     0x41e69f
  41e62c:	gs jae 0x41e65d
  41e62f:	push   0x0
	...
  41e640:	(bad)
  41e645:	je     0x41e6b9
  41e647:	jne    0x41e6ac
  41e649:	je     0x41e6aa
  41e64b:	je     0x41e6b2
  41e64d:	jb     0x41e6bc
  41e64f:	add    BYTE PTR [rax+0x46],bl
  41e652:	jb     0x41e6b9
  41e654:	cmp    BYTE PTR gs:[rsi],dh
  41e657:	cmp    ah,BYTE PTR [rax]
  41e659:	js     0x41e6be
  41e65b:	(bad)  
  41e65c:	ins    BYTE PTR es:[rdi],dx
  41e65d:	imul   esp,DWORD PTR [rdx+0x2f],0x2f313158
  41e664:	pop    rax
  41e665:	ins    BYTE PTR es:[rdi],dx
  41e666:	imul   esp,DWORD PTR [rdx+0x5c],0x5f00682e
  41e66d:	rex.WR
  41e66e:	rex.WB
  41e66f:	rex.WRX push rbp
  41e671:	pop    rax
  41e672:	pop    rdi
  41e673:	rex.WRX
  41e674:	rex.WR push rbx
  41e676:	pop    rdi
  41e677:	rex.W add BYTE PTR [rdi+0x5f],bl
  41e67b:	movsxd esi,DWORD PTR [rax+0x6c]
  41e67e:	jne    0x41e6f3
  41e680:	jo     0x41e6ee
  41e682:	jne    0x41e6f7
	...
  41e6a0:	pop    rsi
  41e6a1:	pop    rbx
  41e6a2:	and    BYTE PTR [rcx],cl
  41e6a4:	pop    rbp
  41e6a5:	sub    dh,BYTE PTR [rcx+rdi*2+0x70]
  41e6a9:	gs fs gs pop bx
  41e6ae:	and    BYTE PTR [rcx],cl
  41e6b0:	pop    rbp
  41e6b1:	sub    bl,BYTE PTR cs:[rbx+0x20]
  41e6b5:	or     DWORD PTR [rbp+0x77],ebx
  41e6b8:	movsxd ebp,DWORD PTR [rax+0x61]
  41e6bb:	jb     0x41e71c
  41e6bd:	je     0x41e71a
  41e6bf:	and    BYTE PTR [rcx],cl
  41e6c1:	pop    rbp
  41e6c2:	sub    bh,BYTE PTR [rbx]
	...
  41e6d0:	(bad)  
  41e6d1:	jbe    0x41e742
  41e6d3:	imul   esp,DWORD PTR [rdi+rbx*2+0x77],0x72616863
  41e6db:	pop    rdi
  41e6dc:	je     0x41e73d
  41e6de:	je     0x41e759
  41e6e0:	jo     0x41e747
  41e6e2:	add    BYTE PTR [rdi+0x5f],bl
  41e6e5:	movsxd esi,DWORD PTR [rax+0x6c]
  41e6e8:	jne    0x41e75d
  41e6ea:	jo     0x41e758
  41e6ec:	jne    0x41e761
	...
  41e6fe:	add    BYTE PTR [rax],al
  41e700:	pop    rsi
  41e701:	pop    rbx
  41e702:	and    BYTE PTR [rcx],cl
  41e704:	pop    rbp
  41e705:	sub    dh,BYTE PTR [rcx+rdi*2+0x70]
  41e709:	gs fs gs pop bx
  41e70e:	and    BYTE PTR [rcx],cl
  41e710:	pop    rbp
  41e711:	sub    bl,BYTE PTR cs:[rbx+0x20]
  41e715:	or     DWORD PTR [rbp+0x62],ebx
  41e718:	outs   dx,DWORD PTR ds:[rsi]
  41e719:	outs   dx,DWORD PTR ds:[rsi]
  41e71a:	ins    BYTE PTR es:[rdi],dx
  41e71b:	pop    rbx
  41e71c:	and    BYTE PTR [rcx],cl
  41e71e:	pop    rbp
  41e71f:	sub    bh,BYTE PTR [rbx]
	...
  41e73d:	add    BYTE PTR [rax],al
  41e73f:	add    BYTE PTR [rbx+0x75],ah
  41e742:	jb     0x41e7b7
  41e744:	gs jae 0x41e775
  41e747:	push   0x72756300
  41e74c:	jae    0x41e7b3
  41e74e:	jae    0x41e7af
  41e750:	movsxd ebp,DWORD PTR [rdi+0x6c]
  41e753:	jb     0x41e784
  41e755:	movsxd esi,DWORD PTR [rbp+0x72]
  41e758:	jae    0x41e7bf
  41e75a:	jae    0x41e78a
  41e75c:	push   0x72657400
  41e761:	ins    DWORD PTR es:[rdi],dx
  41e762:	cs push 0x6e697400
  41e768:	outs   dx,WORD PTR ds:[rsi]
  41e76a:	cs push 0x0
  41e770:	(bad)  
  41e771:	jbe    0x41e7e2
  41e773:	imul   esp,DWORD PTR [rdi+rbx*2+0x62],0x5f6c6f6f
  41e77b:	je     0x41e7f6
  41e77d:	jo     0x41e7e4
  41e77f:	add    BYTE PTR [rsi+0x5b],bl
  41e782:	and    BYTE PTR [rcx],cl
  41e784:	pop    rbp
  41e785:	sub    ah,BYTE PTR [rbx]
  41e787:	pop    rbx
  41e788:	and    BYTE PTR [rcx],cl
  41e78a:	pop    rbp
  41e78b:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41e78f:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41e796:	sub    esp,DWORD PTR [rdx+0x6f]
  41e799:	outs   dx,DWORD PTR ds:[rsi]
  41e79a:	ins    BYTE PTR es:[rdi],dx
  41e79b:	pop    rbx
  41e79c:	and    BYTE PTR [rcx],cl
  41e79e:	pop    rbp
  41e79f:	sub    al,BYTE PTR cs:[rax]
  41e7a2:	pop    rdi
  41e7a3:	pop    rdi
  41e7a4:	movsxd esi,DWORD PTR [rax+0x6c]
  41e7a7:	jne    0x41e81c
  41e7a9:	jo     0x41e817
  41e7ab:	jne    0x41e820
  41e7ad:	add    BYTE PTR [rax],al
  41e7af:	add    BYTE PTR [rbx],ah
  41e7b1:	pop    rbx
  41e7b2:	and    BYTE PTR [rcx],cl
  41e7b4:	pop    rbp
  41e7b5:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41e7b9:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41e7c0:	sub    esp,DWORD PTR [rdx+0x6f]
  41e7c3:	outs   dx,DWORD PTR ds:[rsi]
  41e7c4:	ins    BYTE PTR es:[rdi],dx
  41e7c5:	pop    rbx
  41e7c6:	and    BYTE PTR [rcx],cl
  41e7c8:	pop    rbp
	...
  41e7dd:	add    BYTE PTR [rax],al
  41e7df:	add    BYTE PTR [rbx+0x75],ah
  41e7e2:	jb     0x41e857
  41e7e4:	gs jae 0x41e815
  41e7e7:	push   0x72756300
  41e7ec:	jae    0x41e853
  41e7ee:	jae    0x41e84f
  41e7f0:	movsxd ebp,DWORD PTR [rdi+0x6c]
  41e7f3:	jb     0x41e824
  41e7f5:	movsxd esi,DWORD PTR [rbp+0x72]
  41e7f8:	jae    0x41e85f
  41e7fa:	jae    0x41e82a
  41e7fc:	push   0x72657400
  41e801:	ins    DWORD PTR es:[rdi],dx
  41e802:	cs push 0x6e697400
  41e808:	outs   dx,WORD PTR ds:[rsi]
  41e80a:	cs push 0x0
  41e810:	(bad)  
  41e811:	jbe    0x41e882
  41e813:	imul   esp,DWORD PTR [rdi+rbx*2+0x62],0x5f6c6f6f
  41e81b:	fs imul bp,WORD PTR gs:[rsi+0x65],0x7600
  41e823:	outs   dx,DWORD PTR ds:[rsi]
  41e824:	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x6b726273
  41e82c:	sub    BYTE PTR [rax],al
  41e82e:	add    BYTE PTR [rax],al
  41e830:	movsxd ebp,DWORD PTR [rax+0x61]
  41e833:	jb     0x41e890
  41e835:	and    BYTE PTR [rcx],cl
  41e837:	pop    rbp
  41e838:	sub    bl,BYTE PTR [rdx+rbp*1+0x5b]
  41e83c:	or     DWORD PTR [rax],esp
  41e83e:	pop    rbp
  41e83f:	sub    dh,BYTE PTR [rbx+0x62]
  41e842:	jb     0x41e8af
  41e844:	pop    rbx
  41e845:	and    BYTE PTR [rcx],cl
  41e847:	pop    rbp
  41e848:	sub    bl,BYTE PTR [rax+rbp*1+0x0]
  41e84c:	jne    0x41e8bc
  41e84e:	imul   esi,DWORD PTR [rbx+0x74],0x682e64
  41e855:	add    BYTE PTR [rcx+0x6c],ah
  41e858:	jo     0x41e8c2
  41e85a:	(bad)  
  41e85b:	pop    rdi
  41e85c:	jae    0x41e8c0
  41e85e:	jb     0x41e8cb
  41e860:	add    BYTE PTR [rbx],ah
  41e862:	imul   esp,DWORD PTR [rsi+0x6e],0x20666564
  41e869:	pop    rdi
  41e86a:	pop    rdi
  41e86b:	ins    DWORD PTR es:[rdi],dx
  41e86c:	imul   esi,DWORD PTR [rax+0x73],0x3436
	...
  41e87f:	add    BYTE PTR [rbx],ah
  41e881:	imul   esp,DWORD PTR [rsi+0x6e],0x5c666564
  41e888:	sub    BYTE PTR [rdi+0x5f],bl
  41e88b:	ins    DWORD PTR es:[rdi],dx
  41e88c:	imul   esi,DWORD PTR [rax+0x73],0x295c3436
  41e893:	add    BYTE PTR [rbx+0x79],dh
  41e896:	ins    DWORD PTR es:[rdi],dx
  41e897:	cs push 0x6c610000
  41e89d:	jo     0x41e907
  41e89f:	(bad)  
  41e8a0:	pop    rdi
  41e8a1:	jo     0x41e904
  41e8a3:	jb     0x41e90a
  41e8a5:	outs   dx,BYTE PTR ds:[rsi]
  41e8a6:	jae    0x41e8a8
  41e8a8:	jae    0x41e91e
  41e8aa:	jb     0x41e921
  41e8ac:	movsxd esi,DWORD PTR [rax+riz*1+0x73]
  41e8b0:	outs   dx,DWORD PTR ds:[rsi]
  41e8b1:	movsxd ebp,DWORD PTR [rbx+0x61]
  41e8b4:	fs fs jb 0x41e8d8
  41e8b8:	jbe    0x41e927
  41e8ba:	imul   esp,DWORD PTR [rsi+0x5f],0x64646170
  41e8c1:	jb     0x41e8fe
  41e8c3:	or     DWORD PTR [rdi],ebp
  41e8c5:	sub    al,BYTE PTR [rax]
	...
  41e8df:	add    BYTE PTR [rbx+0x74],dh
  41e8e2:	jb     0x41e959
  41e8e4:	movsxd esi,DWORD PTR [rbx+rbx*2+0x20]
  41e8e8:	or     DWORD PTR [rbp+0x2b],ebx
  41e8eb:	jae    0x41e95c
  41e8ed:	movsxd ebp,DWORD PTR [rbx+0x61]
  41e8f0:	fs fs jb 0x41e94f
  41e8f4:	and    BYTE PTR [rcx],cl
  41e8f6:	pop    rbp
  41e8f7:	sub    esi,DWORD PTR [rsi+0x6d]
  41e8fa:	imul   esp,DWORD PTR [rsi+0x5f],0x64646170
  41e901:	jb     0x41e95e
  41e903:	and    BYTE PTR [rcx],cl
  41e905:	pop    rbp
  41e906:	sub    ebp,DWORD PTR [rdi]
  41e908:	pop    rsp
  41e909:	sub    al,BYTE PTR [rax]
  41e90b:	outs   dx,BYTE PTR ds:[rsi]
  41e90c:	gs je  0x41e93e
  41e90f:	imul   esp,DWORD PTR [rsi+0x2e],0x68
	...
  41e91e:	add    BYTE PTR [rax],al
  41e920:	(bad)  
  41e921:	ins    BYTE PTR es:[rdi],dx
  41e922:	jo     0x41e98c
  41e924:	(bad)  
  41e925:	pop    rdi
  41e926:	imul   esp,DWORD PTR [rsi+0x5f],0x696d6573
  41e92d:	movsxd ebp,DWORD PTR [rdi+0x6c]
  41e930:	outs   dx,DWORD PTR ds:[rsi]
  41e931:	outs   dx,BYTE PTR ds:[rsi]
  41e932:	add    BYTE PTR [rax],al
  41e934:	add    BYTE PTR [rax],al
  41e936:	add    BYTE PTR [rax],al
  41e938:	addr32 gs je 0x41e9ab
  41e93c:	jo     0x41e9b2
  41e93e:	sub    BYTE PTR [rcx+0x6e],ch
  41e941:	je     0x41e96f
  41e943:	and    BYTE PTR [rbx+0x68],ah
  41e946:	(bad)  
  41e947:	jb     0x41e969
  41e949:	sub    ah,BYTE PTR [rbx+0x6f]
  41e94c:	outs   dx,BYTE PTR ds:[rsi]
  41e94d:	jae    0x41e9c3
  41e94f:	pop    rbx
  41e950:	pop    rbp
  41e951:	sub    al,0x20
  41e953:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41e956:	jae    0x41e9cc
  41e958:	and    BYTE PTR [rbx+0x68],ah
  41e95b:	(bad)  
  41e95c:	jb     0x41e97e
  41e95e:	sub    ch,BYTE PTR [rcx]
	...
  41e980:	addr32 gs je 0x41e9f3
  41e984:	jo     0x41e9fa
  41e986:	pop    rsp
  41e987:	sub    BYTE PTR [rcx+0x6e],ch
  41e98a:	je     0x41e9b8
  41e98c:	and    BYTE PTR [rbx+0x68],ah
  41e98f:	(bad)  
  41e990:	jb     0x41e9b2
  41e992:	pop    rsp
  41e993:	sub    bl,BYTE PTR [rbx+rbx*2+0x5c]
  41e997:	pop    rbp
  41e998:	sub    al,0x20
  41e99a:	sub    ah,BYTE PTR [rbx+0x68]
  41e99d:	(bad)  
  41e99e:	jb     0x41e9c0
  41e9a0:	pop    rsp
  41e9a1:	sub    bl,BYTE PTR [rcx+rbp*1+0x0]
	...
  41e9ad:	add    BYTE PTR [rax],al
  41e9af:	add    BYTE PTR [rbx+0x74],dh
  41e9b2:	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x74730068
  41e9ba:	fs ins BYTE PTR es:[rdi],dx
  41e9bc:	imul   esp,DWORD PTR [rdx+0x2e],0x61000068
  41e9c3:	ins    BYTE PTR es:[rdi],dx
  41e9c4:	jo     0x41ea2e
  41e9c6:	(bad)  
  41e9c7:	pop    rdi
  41e9c8:	addr32 gs je 0x41ea3b
  41e9cc:	jo     0x41ea42
  41e9ce:	add    BYTE PTR [rip+0x58452831],ah        # 0x58871205
  41e9d4:	sub    DWORD PTR [rax],eax
	...
  41e9de:	add    BYTE PTR [rax],al
  41e9e0:	sub    BYTE PTR [rbx],ah
  41e9e2:	pop    rbx
  41e9e3:	and    BYTE PTR [rcx],cl
  41e9e5:	pop    rbp
  41e9e6:	sub    ah,BYTE PTR [rbp+riz*2+0x66]
  41e9ea:	imul   ebp,DWORD PTR [rsi+0x65],0x73736120
  41e9f1:	gs jb  0x41ea68
  41e9f4:	pop    rsp
  41e9f5:	sub    BYTE PTR [rbp+0x58],al
  41e9f8:	pop    rsp
  41e9f9:	sub    DWORD PTR [rsi],ebp
  41e9fb:	sub    ch,BYTE PTR [rcx]
  41e9fd:	pop    rsp
  41e9fe:	sub    BYTE PTR [rax+rbp*1+0x69],bl
  41ea02:	outs   dx,BYTE PTR ds:[rsi]
  41ea03:	je     0x41ea61
  41ea05:	sub    DWORD PTR [rax],esp
  41ea07:	pop    rsp
  41ea08:	sub    BYTE PTR [rbp+0x58],al
  41ea0b:	pop    rsp
  41ea0c:	sub    DWORD PTR [rcx+rbp*1+0x0],ebx
  41ea10:	(bad)  
  41ea11:	jae    0x41ea86
  41ea13:	gs jb  0x41ea8a
  41ea16:	cs push 0x6c610000
  41ea1c:	jo     0x41ea86
  41ea1e:	(bad)  
  41ea1f:	pop    rdi
  41ea20:	(bad)  
  41ea21:	jae    0x41ea96
  41ea23:	gs jb  0x41ea9a
  41ea26:	add    BYTE PTR [rax],al
  41ea28:	pop    rdi
  41ea29:	pop    rdi
  41ea2a:	(bad)  
  41ea2b:	jae    0x41eaa0
  41ea2d:	gs jb  0x41eaa4
  41ea30:	sub    BYTE PTR [rbx+0x6f],ah
  41ea33:	outs   dx,BYTE PTR ds:[rsi]
  41ea34:	jae    0x41eaaa
  41ea36:	and    BYTE PTR [rbx+0x68],ah
  41ea39:	(bad)  
  41ea3a:	jb     0x41ea5c
  41ea3c:	sub    ch,BYTE PTR [rax+riz*1]
  41ea3f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41ea42:	jae    0x41eab8
  41ea44:	and    BYTE PTR [rbx+0x68],ah
  41ea47:	(bad)  
  41ea48:	jb     0x41ea6a
  41ea4a:	sub    ch,BYTE PTR [rax+riz*1]
  41ea4d:	imul   ebp,DWORD PTR [rsi+0x74],0x29
	...
  41ea60:	pop    rdi
  41ea61:	pop    rdi
  41ea62:	(bad)  
  41ea63:	jae    0x41ead8
  41ea65:	gs jb  0x41eadc
  41ea68:	pop    rsp
  41ea69:	sub    BYTE PTR [rbx+0x68],ah
  41ea6c:	(bad)  
  41ea6d:	jb     0x41ea8f
  41ea6f:	pop    rsp
  41ea70:	sub    ch,BYTE PTR [rax+riz*1]
  41ea73:	movsxd ebp,DWORD PTR [rax+0x61]
  41ea76:	jb     0x41ea98
  41ea78:	pop    rsp
  41ea79:	sub    ch,BYTE PTR [rax+riz*1]
  41ea7c:	imul   ebp,DWORD PTR [rsi+0x74],0x6100295c
  41ea83:	jae    0x41eaf8
  41ea85:	gs jb  0x41eafc
  41ea88:	cs push 0x6c610000
  41ea8e:	jo     0x41eaf8
  41ea90:	(bad)  
  41ea91:	pop    rdi
  41ea92:	pop    rdi
  41ea93:	pop    rdi
  41ea94:	(bad)  
  41ea95:	jae    0x41eb0a
  41ea97:	gs jb  0x41eb0e
  41ea9a:	add    BYTE PTR [rcx+rdi*2+0x70],dh
  41ea9e:	gs fs data16 and BYTE PTR gs:[rcx+0x6e],ch
  41eaa5:	je     0x41eac7
  41eaa7:	jae    0x41eb12
  41eaa9:	addr32 pop rdi
  41eaab:	(bad)  
  41eaac:	je     0x41eb1d
  41eaae:	ins    DWORD PTR es:[rdi],dx
  41eaaf:	imul   esp,DWORD PTR [rbx+0x5f],0x74
	...
  41eabe:	add    BYTE PTR [rax],al
  41eac0:	je     0x41eb3b
  41eac2:	jo     0x41eb29
  41eac4:	fs data16 and BYTE PTR gs:[rsi+0x6f],dh
  41eaca:	ins    BYTE PTR es:[rdi],dx
  41eacb:	(bad)  
  41eacc:	je     0x41eb37
  41eace:	ins    BYTE PTR es:[rdi],dx
  41eacf:	and    BYTE PTR gs:[rcx+0x6e],ch
  41ead3:	je     0x41eaf5
  41ead5:	jae    0x41eb40
  41ead7:	addr32 pop rdi
  41ead9:	(bad)  
  41eada:	je     0x41eb4b
  41eadc:	ins    DWORD PTR es:[rdi],dx
  41eadd:	imul   esp,DWORD PTR [rbx+0x5f],0x79730074
  41eae4:	jae    0x41eb15
  41eae6:	jae    0x41eb51
  41eae8:	outs   dx,BYTE PTR ds:[esi]
  41eaea:	(bad)  
  41eaeb:	ins    BYTE PTR es:[rdi],dx
  41eaec:	cs push 0x69610000
  41eaf2:	js     0x41eb53
  41eaf4:	jbe    0x41eb65
  41eaf6:	ins    BYTE PTR es:[rdi],dx
  41eaf7:	(bad)  
  41eaf8:	je     0x41eb63
  41eafa:	ins    BYTE PTR es:[rdi],dx
  41eafb:	add    BYTE PTR gs:[rdi],bh
  41eafe:	and    BYTE PTR [rax],ch
  41eb00:	imul   ebp,DWORD PTR [rsi+0x74],0x312529
	...
  41eb1f:	add    BYTE PTR [rdi+rdi*1+0x20],bl
  41eb23:	sub    BYTE PTR [rax+rbp*1+0x5c],bl
  41eb27:	sub    BYTE PTR [rax+rbp*1+0x5c],bl
  41eb2b:	sub    BYTE PTR [rbp+0x6e],dh
  41eb2e:	jae    0x41eb99
  41eb30:	outs   dx,BYTE PTR ds:[esi]
  41eb32:	gs fs pop rbx
  41eb35:	pop    rsi
  41eb36:	sub    DWORD PTR [rbp+0x2a],ebx
  41eb39:	pop    rsp
  41eb3a:	sub    DWORD PTR [rbx+0x5e],ebx
  41eb3d:	sub    DWORD PTR [rbp+0x2a],ebx
  41eb40:	pop    rsp
  41eb41:	sub    DWORD PTR [rax],esp
  41eb43:	ds and BYTE PTR ds:[rbx+0x5e],bl
  41eb48:	sub    DWORD PTR [rbp+0x2a],ebx
  41eb4b:	pop    rsp
  41eb4c:	sub    DWORD PTR [rax],esp
  41eb4e:	pop    rsp
  41eb4f:	and    BYTE PTR es:[rax],dh
  41eb52:	js     0x41ebba
  41eb54:	pop    sp
  41eb56:	sub    DWORD PTR [rax],esp
  41eb58:	cmp    ah,BYTE PTR [rax]
  41eb5a:	sub    eax,0x73002931
  41eb5f:	jns    0x41ebd4
  41eb61:	(bad)  
  41eb62:	ja     0x41ebc5
  41eb64:	imul   esi,DWORD PTR [rsi+rbp*1+0x68],0x69610000
  41eb6c:	js     0x41ebcd
  41eb6e:	jae    0x41ebe9
  41eb70:	jae    0x41ebe9
  41eb72:	(bad)  
  41eb73:	imul   esi,DWORD PTR [rdi+rbx*2+0x32],0xa5c00
  41eb7b:	pop    rsp
  41eb7c:	pop    rsp
  41eb7d:	and    BYTE PTR [rbx],ch
  41eb7f:	or     al,BYTE PTR [rax]
  41eb81:	jae    0x41ebfc
  41eb83:	jae    0x41ebb4
  41eb85:	ins    DWORD PTR es:[rdi],dx
  41eb86:	(bad)  
  41eb87:	movsxd ebp,DWORD PTR [rax+0x69]
  41eb8a:	outs   dx,BYTE PTR ds:[rsi]
  41eb8b:	gs cs push 0x69610000
  41eb92:	js     0x41ebf3
  41eb94:	jae    0x41ec0f
  41eb96:	jae    0x41ec05
  41eb98:	(bad)  
  41eb99:	movsxd ebp,DWORD PTR [rax+0x69]
  41eb9c:	outs   dx,BYTE PTR ds:[rsi]
  41eb9d:	add    BYTE PTR gs:[rax],al
  41eba0:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41eba4:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41ebab:	push   rsp
  41ebac:	cmp    BYTE PTR [rdi+0x43],bl
  41ebaf:	sub    BYTE PTR [rbx+0x29],ah
  41ebb2:	or     DWORD PTR [rbx+0xa],esp
  41ebb5:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41ebb9:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41ebc0:	push   rsp
  41ebc1:	xor    DWORD PTR [rsi],esi
  41ebc3:	pop    rdi
  41ebc4:	rex.XB sub BYTE PTR [r11+0x29],spl
  41ebc8:	or     DWORD PTR [rbx+0x0],esp
	...
  41ebff:	add    BYTE PTR [rbx],ah
  41ec01:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41ec09:	or     DWORD PTR [rbp+0x55],ebx
  41ec0c:	rex.WB
  41ec0d:	rex.WRX push rsp
  41ec0f:	cmp    BYTE PTR [rdi+0x43],bl
  41ec12:	pop    rsp
  41ec13:	sub    BYTE PTR [rbx+0x5c],ah
  41ec16:	sub    DWORD PTR [rbx+0x20],ebx
  41ec19:	or     DWORD PTR [rbp+0x5f],ebx
  41ec1c:	pop    rdi
  41ec1d:	rex.XB
  41ec1e:	rex.WRXB
  41ec1f:	rex.WRX
  41ec20:	rex.XB
  41ec21:	push   r12
  41ec23:	pop    rdi
  41ec24:	pop    rdi
  41ec25:	pop    rsp
  41ec26:	sub    BYTE PTR [rbx+0x2c],ah
  41ec29:	push   rbp
  41ec2a:	pop    rsp
  41ec2b:	sub    DWORD PTR [rdx],ecx
  41ec2d:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41ec31:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41ec38:	push   rbp
  41ec39:	rex.WB
  41ec3a:	rex.WRX push rsp
  41ec3c:	xor    DWORD PTR [rsi],esi
  41ec3e:	pop    rdi
  41ec3f:	rex.XB pop r12
  41ec41:	sub    BYTE PTR [rbx+0x5c],ah
  41ec44:	sub    DWORD PTR [rbx+0x20],ebx
  41ec47:	or     DWORD PTR [rbp+0x5f],ebx
  41ec4a:	pop    rdi
  41ec4b:	rex.XB
  41ec4c:	rex.WRXB
  41ec4d:	rex.WRX
  41ec4e:	rex.XB
  41ec4f:	push   r12
  41ec51:	pop    rdi
  41ec52:	pop    rdi
  41ec53:	pop    rsp
  41ec54:	sub    BYTE PTR [rbx+0x2c],ah
  41ec57:	push   rbp
  41ec58:	pop    rsp
  41ec59:	sub    DWORD PTR [rax],eax
  41ec5b:	sub    ch,BYTE PTR [rip+0x69612d2a]        # 0x69a3198b
  41ec61:	js     0x41ec8d
	...
  41ec6f:	add    BYTE PTR [rbx+0x74],dh
  41ec72:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x7869612d
  41ec7a:	cs push 0x64747300
  41ec80:	imul   ebp,DWORD PTR [rsi+0x74],0x682e
  41ec87:	(bad)  
  41ec88:	imul   edi,DWORD PTR [rax+0x5f],0x69647473
  41ec8f:	outs   dx,BYTE PTR ds:[rsi]
  41ec90:	je     0x41ecf1
  41ec92:	xor    eax,0x0
  41ec97:	add    BYTE PTR [rbx],ah
  41ec99:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5320
  41eca1:	rex.WB pop r10
  41eca3:	rex.RB pop r15
  41eca5:	rex.WRB
  41eca6:	pop    r8
  41eca8:	or     DWORD PTR [rcx],esi
  41ecaa:	cmp    BYTE PTR [rsp+rsi*1],dh
  41ecad:	ss (bad) 
  41ecaf:	xor    al,0x34
  41ecb1:	xor    BYTE PTR [rdi],dh
  41ecb3:	xor    esi,DWORD PTR [rdi]
  41ecb5:	xor    BYTE PTR [rcx],bh
  41ecb7:	xor    eax,0x31363135
  41ecbc:	xor    eax,0x230a4c55
  41ecc1:	gs ins BYTE PTR es:[rdi],dx
  41ecc3:	jae    0x41ed2a
  41ecc5:	or     ah,BYTE PTR [rbx]
  41ecc7:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5320
  41eccf:	rex.WB pop r10
  41ecd1:	rex.RB pop r15
  41ecd3:	rex.WRB
  41ecd4:	pop    r8
  41ecd6:	or     DWORD PTR [rdx+rsi*1],esi
  41ecd9:	cmp    DWORD PTR [rcx+rdi*1],esi
  41ecdc:	ss (bad) 
  41ecde:	xor    bh,BYTE PTR [rcx]
  41ece0:	xor    eax,0x4c55
	...
  41ecfd:	add    BYTE PTR [rax],al
  41ecff:	add    BYTE PTR [rbx],ah
  41ed01:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41ed09:	or     DWORD PTR [rbp+0x53],ebx
  41ed0c:	rex.WB pop r10
  41ed0e:	rex.RB pop r15
  41ed10:	rex.WRB
  41ed11:	pop    r8
  41ed13:	pop    rbx
  41ed14:	and    BYTE PTR [rcx],cl
  41ed16:	pop    rbp
  41ed17:	push   rbp
  41ed18:	rex.WB
  41ed19:	rex.WRX push rsp
  41ed1b:	ss xor al,0x5f
  41ed1e:	rex.WRB
  41ed1f:	pop    r8
  41ed21:	or     ah,BYTE PTR [rbx]
  41ed23:	gs ins BYTE PTR es:[rdi],dx
  41ed25:	jae    0x41ed8c
  41ed27:	or     ah,BYTE PTR [rbx]
  41ed29:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41ed31:	or     DWORD PTR [rbp+0x53],ebx
  41ed34:	rex.WB pop r10
  41ed36:	rex.RB pop r15
  41ed38:	rex.WRB
  41ed39:	pop    r8
  41ed3b:	pop    rbx
  41ed3c:	and    BYTE PTR [rcx],cl
  41ed3e:	pop    rbp
  41ed3f:	sub    dl,BYTE PTR [rbp+0x49]
  41ed42:	rex.WRX push rsp
  41ed44:	xor    esi,DWORD PTR [rdx]
  41ed46:	pop    rdi
  41ed47:	rex.WRB
  41ed48:	pop    r8
  41ed4a:	add    BYTE PTR [rax],al
  41ed4c:	add    BYTE PTR [rax],al
  41ed4e:	add    BYTE PTR [rax],al
  41ed50:	jae    0x41edc6
  41ed52:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x7869612d
  41ed5a:	cs push 0x64747300
  41ed60:	imul   ebp,DWORD PTR [rsi+0x74],0x682e
  41ed67:	(bad)  
  41ed68:	imul   edi,DWORD PTR [rax+0x5f],0x69647473
  41ed6f:	outs   dx,BYTE PTR ds:[rsi]
  41ed70:	je     0x41edd1
  41ed72:	xor    al,0x0
  41ed74:	add    BYTE PTR [rax],al
  41ed76:	add    BYTE PTR [rax],al
  41ed78:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41ed7c:	imul   ebp,DWORD PTR [rsi+0x65],0x52545020
  41ed83:	rex.R
  41ed84:	rex.WB
  41ed85:	rex.RX
  41ed86:	rex.RX pop rdi
  41ed88:	rex.WRB
  41ed89:	rex.WB
  41ed8a:	rex.WRX or QWORD PTR [rax],r13
  41ed8d:	sub    eax,0x33323239
  41ed92:	xor    esi,DWORD PTR [rdi]
  41ed94:	xor    dh,BYTE PTR [rax]
  41ed96:	xor    esi,DWORD PTR [rsi]
  41ed98:	cmp    BYTE PTR [rip+0x35373734],dh        # 0x357924d2
  41ed9e:	cmp    BYTE PTR [rax],dh
  41eda0:	(bad)  
  41eda1:	rex.WR and BYTE PTR [rip+0xa293120],r13b        # 0xa6b1ec8
  41eda8:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41edac:	imul   ebp,DWORD PTR [rsi+0x65],0x52545020
  41edb3:	rex.R
  41edb4:	rex.WB
  41edb5:	rex.RX
  41edb6:	rex.RX pop rdi
  41edb8:	rex.WRB
  41edb9:	pop    r8
  41edbb:	or     DWORD PTR [rcx],edi
  41edbd:	xor    dh,BYTE PTR [rdx]
  41edbf:	xor    esi,DWORD PTR [rbx]
  41edc1:	(bad)  
  41edc2:	xor    dh,BYTE PTR [rax]
  41edc4:	xor    esi,DWORD PTR [rsi]
  41edc6:	cmp    BYTE PTR [rip+0x35373734],dh        # 0x35792500
  41edcc:	cmp    BYTE PTR [rax],dh
  41edce:	(bad)  
  41edcf:	rex.WR or r12b,BYTE PTR [rbx]
  41edd2:	gs ins BYTE PTR es:[rdi],dx
  41edd4:	jae    0x41ee3b
  41edd6:	or     ah,BYTE PTR [rbx]
  41edd8:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5020
  41ede0:	push   rsp
  41ede1:	push   rdx
  41ede2:	rex.R
  41ede3:	rex.WB
  41ede4:	rex.RX
  41ede5:	rex.RX pop rdi
  41ede7:	rex.WRB
  41ede8:	rex.WB
  41ede9:	rex.WRX or QWORD PTR [rax],r13
  41edec:	sub    eax,0x37343132
  41edf1:	xor    al,0x38
  41edf3:	xor    esi,DWORD PTR [rsi]
  41edf5:	xor    al,0x37
  41edf7:	rex.WR and BYTE PTR [rip+0xa293120],r13b        # 0xa6b1f1e
  41edfe:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41ee02:	imul   ebp,DWORD PTR [rsi+0x65],0x52545020
  41ee09:	rex.R
  41ee0a:	rex.WB
  41ee0b:	rex.RX
  41ee0c:	rex.RX pop rdi
  41ee0e:	rex.WRB
  41ee0f:	pop    r8
  41ee11:	or     DWORD PTR [rdx],esi
  41ee13:	xor    DWORD PTR [rdi+rsi*1],esi
  41ee16:	xor    al,0x38
  41ee18:	xor    esi,DWORD PTR [rsi]
  41ee1a:	xor    al,0x37
  41ee1c:	rex.WR add BYTE PTR [rax],r8b
	...
  41ee3f:	add    BYTE PTR [rbx],ah
  41ee41:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41ee49:	or     DWORD PTR [rbp+0x50],ebx
  41ee4c:	push   rsp
  41ee4d:	push   rdx
  41ee4e:	rex.R
  41ee4f:	rex.WB
  41ee50:	rex.RX
  41ee51:	rex.RX pop rdi
  41ee53:	rex.WRB
  41ee54:	rex.WB
  41ee55:	rex.WRX pop rbx
  41ee57:	and    BYTE PTR [rcx],cl
  41ee59:	pop    rbp
  41ee5a:	rex.WB
  41ee5b:	rex.WRX push rsp
  41ee5d:	ss xor al,0x5f
  41ee60:	rex.WRB
  41ee61:	rex.WB
  41ee62:	rex.WRX or r12b,BYTE PTR [rbx]
  41ee65:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41ee6d:	or     DWORD PTR [rbp+0x50],ebx
  41ee70:	push   rsp
  41ee71:	push   rdx
  41ee72:	rex.R
  41ee73:	rex.WB
  41ee74:	rex.RX
  41ee75:	rex.RX pop rdi
  41ee77:	rex.WRB
  41ee78:	pop    r8
  41ee7a:	pop    rbx
  41ee7b:	and    BYTE PTR [rcx],cl
  41ee7d:	pop    rbp
  41ee7e:	rex.WB
  41ee7f:	rex.WRX push rsp
  41ee81:	ss xor al,0x5f
  41ee84:	rex.WRB
  41ee85:	pop    r8
  41ee87:	or     ah,BYTE PTR [rbx]
  41ee89:	gs ins BYTE PTR es:[rdi],dx
  41ee8b:	jae    0x41eef2
  41ee8d:	or     ah,BYTE PTR [rbx]
  41ee8f:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41ee97:	or     DWORD PTR [rbp+0x50],ebx
  41ee9a:	push   rsp
  41ee9b:	push   rdx
  41ee9c:	rex.R
  41ee9d:	rex.WB
  41ee9e:	rex.RX
  41ee9f:	rex.RX pop rdi
  41eea1:	rex.WRB
  41eea2:	rex.WB
  41eea3:	rex.WRX pop rbx
  41eea5:	and    BYTE PTR [rcx],cl
  41eea7:	pop    rbp
  41eea8:	sub    cl,BYTE PTR [rcx+0x4e]
  41eeab:	push   rsp
  41eeac:	xor    esi,DWORD PTR [rdx]
  41eeae:	pop    rdi
  41eeaf:	rex.WRB
  41eeb0:	rex.WB
  41eeb1:	rex.WRX or r12b,BYTE PTR [rbx]
  41eeb4:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41eebc:	or     DWORD PTR [rbp+0x50],ebx
  41eebf:	push   rsp
  41eec0:	push   rdx
  41eec1:	rex.R
  41eec2:	rex.WB
  41eec3:	rex.RX
  41eec4:	rex.RX pop rdi
  41eec6:	rex.WRB
  41eec7:	pop    r8
  41eec9:	pop    rbx
  41eeca:	and    BYTE PTR [rcx],cl
  41eecc:	pop    rbp
  41eecd:	sub    cl,BYTE PTR [rcx+0x4e]
  41eed0:	push   rsp
  41eed1:	xor    esi,DWORD PTR [rdx]
  41eed3:	pop    rdi
  41eed4:	rex.WRB
  41eed5:	pop    r8
	...
  41eedf:	add    BYTE PTR [rbx+0x74],dh
  41eee2:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x7869612d
  41eeea:	cs push 0x64747300
  41eef0:	imul   ebp,DWORD PTR [rsi+0x74],0x682e
  41eef7:	(bad)  
  41eef8:	imul   edi,DWORD PTR [rax+0x5f],0x69647473
  41eeff:	outs   dx,BYTE PTR ds:[rsi]
  41ef00:	je     0x41ef61
  41ef02:	xor    eax,DWORD PTR [rax]
  41ef04:	add    BYTE PTR [rax],al
  41ef06:	add    BYTE PTR [rax],al
  41ef08:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41ef0c:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  41ef13:	push   rax
  41ef14:	push   rsp
  41ef15:	push   rdx
  41ef16:	pop    rdi
  41ef17:	rex.WRB
  41ef18:	rex.WB
  41ef19:	rex.WRX or QWORD PTR [rax],r13
  41ef1c:	sub    eax,0x50544e49
  41ef21:	push   rsp
  41ef22:	push   rdx
  41ef23:	pop    rdi
  41ef24:	rex.WRB
  41ef25:	pop    r8
  41ef27:	sub    eax,0x230a2931
  41ef2c:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41ef34:	rex.WRX push rsp
  41ef36:	push   rax
  41ef37:	push   rsp
  41ef38:	push   rdx
  41ef39:	pop    rdi
  41ef3a:	rex.WRB
  41ef3b:	pop    r8
  41ef3d:	or     DWORD PTR [rcx],edi
  41ef3f:	xor    dh,BYTE PTR [rdx]
  41ef41:	xor    esi,DWORD PTR [rbx]
  41ef43:	(bad)  
  41ef44:	xor    dh,BYTE PTR [rax]
  41ef46:	xor    esi,DWORD PTR [rsi]
  41ef48:	cmp    BYTE PTR [rip+0x35373734],dh        # 0x35792682
  41ef4e:	cmp    BYTE PTR [rax],dh
  41ef50:	(bad)  
  41ef51:	rex.WR or r12b,BYTE PTR [rbx]
  41ef54:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41ef5c:	rex.WB
  41ef5d:	rex.WRX push rsp
  41ef5f:	push   rax
  41ef60:	push   rsp
  41ef61:	push   rdx
  41ef62:	pop    rdi
  41ef63:	rex.WRB
  41ef64:	pop    r8
  41ef66:	or     DWORD PTR [rcx],esi
  41ef68:	cmp    BYTE PTR [rsp+rsi*1],dh
  41ef6b:	ss (bad) 
  41ef6d:	xor    al,0x34
  41ef6f:	xor    BYTE PTR [rdi],dh
  41ef71:	xor    esi,DWORD PTR [rdi]
  41ef73:	xor    BYTE PTR [rcx],bh
  41ef75:	xor    eax,0x31363135
  41ef7a:	xor    eax,0x230a4c55
  41ef7f:	gs ins BYTE PTR es:[rdi],dx
  41ef81:	jae    0x41efe8
  41ef83:	or     ah,BYTE PTR [rbx]
  41ef85:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41ef8d:	rex.WRX push rsp
  41ef8f:	push   rax
  41ef90:	push   rsp
  41ef91:	push   rdx
  41ef92:	pop    rdi
  41ef93:	rex.WRB
  41ef94:	rex.WB
  41ef95:	rex.WRX or QWORD PTR [rax],r13
  41ef98:	sub    eax,0x50544e49
  41ef9d:	push   rsp
  41ef9e:	push   rdx
  41ef9f:	pop    rdi
  41efa0:	rex.WRB
  41efa1:	pop    r8
  41efa3:	sub    eax,0x230a2931
  41efa8:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41efb0:	rex.WRX push rsp
  41efb2:	push   rax
  41efb3:	push   rsp
  41efb4:	push   rdx
  41efb5:	pop    rdi
  41efb6:	rex.WRB
  41efb7:	pop    r8
  41efb9:	or     DWORD PTR [rdx],esi
  41efbb:	xor    DWORD PTR [rdi+rsi*1],esi
  41efbe:	xor    al,0x38
  41efc0:	xor    esi,DWORD PTR [rsi]
  41efc2:	xor    al,0x37
  41efc4:	rex.WR or r12b,BYTE PTR [rbx]
  41efc7:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41efcf:	rex.WB
  41efd0:	rex.WRX push rsp
  41efd2:	push   rax
  41efd3:	push   rsp
  41efd4:	push   rdx
  41efd5:	pop    rdi
  41efd6:	rex.WRB
  41efd7:	pop    r8
  41efd9:	or     DWORD PTR [rdx+rsi*1],esi
  41efdc:	cmp    DWORD PTR [rcx+rdi*1],esi
  41efdf:	ss (bad) 
  41efe1:	xor    bh,BYTE PTR [rcx]
  41efe3:	xor    eax,0x4c55
	...
  41f000:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41f004:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41f00b:	rex.WB
  41f00c:	rex.WRX push rsp
  41f00e:	push   rax
  41f00f:	push   rsp
  41f010:	push   rdx
  41f011:	pop    rdi
  41f012:	rex.WRB
  41f013:	rex.WB
  41f014:	rex.WRX pop rbx
  41f016:	and    BYTE PTR [rcx],cl
  41f018:	pop    rbp
  41f019:	rex.WB
  41f01a:	rex.WRX push rsp
  41f01c:	ss xor al,0x5f
  41f01f:	rex.WRB
  41f020:	rex.WB
  41f021:	rex.WRX or r12b,BYTE PTR [rbx]
  41f024:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41f02c:	or     DWORD PTR [rbp+0x49],ebx
  41f02f:	rex.WRX push rsp
  41f031:	push   rax
  41f032:	push   rsp
  41f033:	push   rdx
  41f034:	pop    rdi
  41f035:	rex.WRB
  41f036:	pop    r8
  41f038:	pop    rbx
  41f039:	and    BYTE PTR [rcx],cl
  41f03b:	pop    rbp
  41f03c:	rex.WB
  41f03d:	rex.WRX push rsp
  41f03f:	ss xor al,0x5f
  41f042:	rex.WRB
  41f043:	pop    r8
  41f045:	or     ah,BYTE PTR [rbx]
  41f047:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41f04f:	or     DWORD PTR [rbp+0x55],ebx
  41f052:	rex.WB
  41f053:	rex.WRX push rsp
  41f055:	push   rax
  41f056:	push   rsp
  41f057:	push   rdx
  41f058:	pop    rdi
  41f059:	rex.WRB
  41f05a:	pop    r8
  41f05c:	pop    rbx
  41f05d:	and    BYTE PTR [rcx],cl
  41f05f:	pop    rbp
  41f060:	push   rbp
  41f061:	rex.WB
  41f062:	rex.WRX push rsp
  41f064:	ss xor al,0x5f
  41f067:	rex.WRB
  41f068:	pop    r8
  41f06a:	or     ah,BYTE PTR [rbx]
  41f06c:	gs ins BYTE PTR es:[rdi],dx
  41f06e:	jae    0x41f0d5
  41f070:	or     ah,BYTE PTR [rbx]
  41f072:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41f07a:	or     DWORD PTR [rbp+0x49],ebx
  41f07d:	rex.WRX push rsp
  41f07f:	push   rax
  41f080:	push   rsp
  41f081:	push   rdx
  41f082:	pop    rdi
  41f083:	rex.WRB
  41f084:	rex.WB
  41f085:	rex.WRX pop rbx
  41f087:	and    BYTE PTR [rcx],cl
  41f089:	pop    rbp
  41f08a:	rex.WB
  41f08b:	rex.WRX push rsp
  41f08d:	xor    esi,DWORD PTR [rdx]
  41f08f:	pop    rdi
  41f090:	rex.WRB
  41f091:	rex.WB
  41f092:	rex.WRX or r12b,BYTE PTR [rbx]
  41f095:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41f09d:	or     DWORD PTR [rbp+0x49],ebx
  41f0a0:	rex.WRX push rsp
  41f0a2:	push   rax
  41f0a3:	push   rsp
  41f0a4:	push   rdx
  41f0a5:	pop    rdi
  41f0a6:	rex.WRB
  41f0a7:	pop    r8
  41f0a9:	pop    rbx
  41f0aa:	and    BYTE PTR [rcx],cl
  41f0ac:	pop    rbp
  41f0ad:	rex.WB
  41f0ae:	rex.WRX push rsp
  41f0b0:	xor    esi,DWORD PTR [rdx]
  41f0b2:	pop    rdi
  41f0b3:	rex.WRB
  41f0b4:	pop    r8
  41f0b6:	or     ah,BYTE PTR [rbx]
  41f0b8:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41f0c0:	or     DWORD PTR [rbp+0x55],ebx
  41f0c3:	rex.WB
  41f0c4:	rex.WRX push rsp
  41f0c6:	push   rax
  41f0c7:	push   rsp
  41f0c8:	push   rdx
  41f0c9:	pop    rdi
  41f0ca:	rex.WRB
  41f0cb:	pop    r8
  41f0cd:	pop    rbx
  41f0ce:	and    BYTE PTR [rcx],cl
  41f0d0:	pop    rbp
  41f0d1:	push   rbp
  41f0d2:	rex.WB
  41f0d3:	rex.WRX push rsp
  41f0d5:	xor    esi,DWORD PTR [rdx]
  41f0d7:	pop    rdi
  41f0d8:	rex.WRB
  41f0d9:	pop    r8
  41f0db:	add    BYTE PTR [rax],al
  41f0dd:	add    BYTE PTR [rax],al
  41f0df:	add    BYTE PTR [rbx+0x74],dh
  41f0e2:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x7869612d
  41f0ea:	cs push 0x64747300
  41f0f0:	imul   ebp,DWORD PTR [rsi+0x74],0x682e
  41f0f7:	(bad)  
  41f0f8:	imul   edi,DWORD PTR [rax+0x5f],0x69647473
  41f0ff:	outs   dx,BYTE PTR ds:[rsi]
  41f100:	je     0x41f161
  41f102:	xor    al,BYTE PTR [rax]
  41f104:	add    BYTE PTR [rax],al
  41f106:	add    BYTE PTR [rax],al
  41f108:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41f10c:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41f113:	push   rsp
  41f114:	cmp    BYTE PTR [rdi+0x4d],bl
  41f117:	pop    r8
  41f119:	or     DWORD PTR [rax],ebp
  41f11b:	xor    dh,BYTE PTR [rip+0x230a2935]        # 0x234c1a56
  41f121:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41f129:	rex.WB
  41f12a:	rex.WRX push rsp
  41f12c:	xor    DWORD PTR [rsi],esi
  41f12e:	pop    rdi
  41f12f:	rex.WRB
  41f130:	pop    r8
  41f132:	or     DWORD PTR [rax],ebp
  41f134:	ss xor eax,0x29353335
  41f13a:	add    BYTE PTR [rax],al
  41f13c:	add    BYTE PTR [rax],al
  41f13e:	add    BYTE PTR [rax],al
  41f140:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41f144:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41f14b:	push   rbp
  41f14c:	rex.WB
  41f14d:	rex.WRX push rsp
  41f14f:	cmp    BYTE PTR [rdi+0x4d],bl
  41f152:	pop    r8
  41f154:	pop    rbx
  41f155:	and    BYTE PTR [rcx],cl
  41f157:	pop    rbp
  41f158:	pop    rsp
  41f159:	sub    BYTE PTR [rdx],dh
  41f15b:	xor    eax,0x295c5535
  41f160:	or     ah,BYTE PTR [rbx]
  41f162:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41f16a:	or     DWORD PTR [rbp+0x55],ebx
  41f16d:	rex.WB
  41f16e:	rex.WRX push rsp
  41f170:	xor    DWORD PTR [rsi],esi
  41f172:	pop    rdi
  41f173:	rex.WRB
  41f174:	pop    r8
  41f176:	pop    rbx
  41f177:	and    BYTE PTR [rcx],cl
  41f179:	pop    rbp
  41f17a:	pop    rsp
  41f17b:	sub    BYTE PTR [rsi],dh
  41f17d:	xor    eax,0x55353335
  41f182:	pop    rsp
  41f183:	sub    DWORD PTR [rax],eax
	...
  41f18d:	add    BYTE PTR [rax],al
  41f18f:	add    BYTE PTR [rbx+0x74],dh
  41f192:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x7869612d
  41f19a:	cs push 0x64747300
  41f1a0:	imul   ebp,DWORD PTR [rsi+0x74],0x682e
  41f1a7:	(bad)  
  41f1a8:	imul   edi,DWORD PTR [rax+0x5f],0x69647473
  41f1af:	outs   dx,BYTE PTR ds:[rsi]
  41f1b0:	je     0x41f211
  41f1b2:	xor    DWORD PTR [rax],eax
  41f1b4:	and    eax,0x32252031
  41f1b9:	add    BYTE PTR [rax],al
  41f1bb:	add    BYTE PTR [rax],al
  41f1bd:	add    BYTE PTR [rax],al
  41f1bf:	add    BYTE PTR [rax],ch
  41f1c1:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41f1c5:	imul   ebp,DWORD PTR [rsi+0x65],0x2d415b20
  41f1cc:	pop    rdx
  41f1cd:	(bad)  
  41f1ce:	sub    eax,0x2d305f7a
  41f1d3:	cmp    DWORD PTR [rbp+0x2b],ebx
  41f1d6:	sub    DWORD PTR [rax],ebp
  41f1d8:	pop    rsp
  41f1d9:	pop    rsp
  41f1da:	or     bl,BYTE PTR [rbx+0x5e]
  41f1dd:	rex.B sub eax,0x7a2d615a
  41f1e3:	pop    rdi
  41f1e4:	xor    BYTE PTR [rip+0xa092039],ch        # 0xa4b1223
  41f1ea:	sub    BYTE PTR [rbp+0x29],bl
  41f1ed:	add    BYTE PTR [rax+0x74],dh
  41f1f0:	push   0x64616572
  41f1f5:	cs push 0x69610000
  41f1fb:	js     0x41f25c
  41f1fd:	jo     0x41f273
  41f1ff:	push   0x64616572
  41f204:	add    BYTE PTR [rax],al
  41f206:	add    BYTE PTR [rax],al
  41f208:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41f20c:	imul   ebp,DWORD PTR [rsi+0x65],0x48545020
  41f213:	push   rdx
  41f214:	rex.RB
  41f215:	rex.B
  41f216:	rex.R pop rdi
  41f218:	push   rdx
  41f219:	push   rdi
  41f21a:	rex.WR
  41f21b:	rex.WRXB
  41f21c:	rex.XB
  41f21d:	rex.WXB pop r15
  41f21f:	rex.WB
  41f220:	rex.WRX
  41f221:	rex.WB push r12
  41f223:	rex.WB
  41f224:	rex.B
  41f225:	rex.WR
  41f226:	rex.WB pop r10
  41f228:	rex.RB push r10
  41f22a:	and    BYTE PTR [rdx+rcx*1+0x7b],bl
  41f22e:	jnp    0x41f250
  41f230:	pop    rsp
  41f231:	or     al,BYTE PTR [rax]
	...
  41f23f:	add    BYTE PTR [rbx],ah
  41f241:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41f249:	or     DWORD PTR [rbp+0x50],ebx
  41f24c:	push   rsp
  41f24d:	rex.W push rdx
  41f24f:	rex.RB
  41f250:	rex.B
  41f251:	rex.R pop rdi
  41f253:	push   rdx
  41f254:	push   rdi
  41f255:	rex.WR
  41f256:	rex.WRXB
  41f257:	rex.XB
  41f258:	rex.WXB pop r15
  41f25a:	rex.WB
  41f25b:	rex.WRX
  41f25c:	rex.WB push r12
  41f25e:	rex.WB
  41f25f:	rex.B
  41f260:	rex.WR
  41f261:	rex.WB pop r10
  41f263:	rex.RB push r10
  41f265:	and    BYTE PTR [rsp+rbx*2+0xa],bl
  41f269:	pop    rsp
  41f26a:	jnp    0x41f28c
  41f26c:	pop    rsp
  41f26d:	pop    rsp
  41f26e:	or     al,BYTE PTR [rax]
  41f270:	jo     0x41f2e6
  41f272:	push   0x64616572
  41f277:	cs push 0x0
  41f27d:	add    BYTE PTR [rax],al
  41f27f:	add    BYTE PTR [rcx+0x69],ah
  41f282:	js     0x41f2e3
  41f284:	jb     0x41f2fd
  41f286:	ins    BYTE PTR es:[rdi],dx
  41f287:	outs   dx,DWORD PTR ds:[rsi]
  41f288:	movsxd ebp,DWORD PTR [rbx+0x5f]
  41f28b:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  41f292:	imul   edi,DWORD PTR [rdx+0x65],0x315f72
  41f299:	add    BYTE PTR [rax],al
  41f29b:	add    BYTE PTR [rax],al
  41f29d:	add    BYTE PTR [rax],al
  41f29f:	add    BYTE PTR [rbx],ah
  41f2a1:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5020
  41f2a9:	push   rsp
  41f2aa:	rex.W push rdx
  41f2ac:	rex.RB
  41f2ad:	rex.B
  41f2ae:	rex.R pop rdi
  41f2b0:	rex.XB
  41f2b1:	rex.WRXB
  41f2b2:	rex.WRX
  41f2b3:	rex.R pop rdi
  41f2b5:	rex.WB
  41f2b6:	rex.WRX
  41f2b7:	rex.WB push r12
  41f2b9:	rex.WB
  41f2ba:	rex.B
  41f2bb:	rex.WR
  41f2bc:	rex.WB pop r10
  41f2be:	rex.RB push r10
  41f2c0:	and    BYTE PTR [rdx+rcx*1+0x7b],bl
  41f2c4:	jnp    0x41f2e6
  41f2c6:	pop    rsp
  41f2c7:	or     al,BYTE PTR [rax]
	...
  41f2dd:	add    BYTE PTR [rax],al
  41f2df:	add    BYTE PTR [rbx],ah
  41f2e1:	fs imul bp,WORD PTR gs:[rsi+0x65],0x205b
  41f2e9:	or     DWORD PTR [rbp+0x50],ebx
  41f2ec:	push   rsp
  41f2ed:	rex.W push rdx
  41f2ef:	rex.RB
  41f2f0:	rex.B
  41f2f1:	rex.R pop rdi
  41f2f3:	rex.XB
  41f2f4:	rex.WRXB
  41f2f5:	rex.WRX
  41f2f6:	rex.R pop rdi
  41f2f8:	rex.WB
  41f2f9:	rex.WRX
  41f2fa:	rex.WB push r12
  41f2fc:	rex.WB
  41f2fd:	rex.B
  41f2fe:	rex.WR
  41f2ff:	rex.WB pop r10
  41f301:	rex.RB push r10
  41f303:	and    BYTE PTR [rsp+rbx*2+0xa],bl
  41f307:	pop    rsp
  41f308:	jnp    0x41f32a
  41f30a:	pop    rsp
  41f30b:	pop    rsp
  41f30c:	or     al,BYTE PTR [rax]
  41f30e:	jo     0x41f384
  41f310:	push   0x64616572
  41f315:	cs push 0x0
  41f31b:	add    BYTE PTR [rax],al
  41f31d:	add    BYTE PTR [rax],al
  41f31f:	add    BYTE PTR [rcx+0x69],ah
  41f322:	js     0x41f383
  41f324:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41f327:	fs pop rdi
  41f329:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  41f330:	imul   edi,DWORD PTR [rdx+0x65],0x315f72
  41f337:	add    BYTE PTR [rbx],ah
  41f339:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5020
  41f341:	push   rsp
  41f342:	rex.W push rdx
  41f344:	rex.RB
  41f345:	rex.B
  41f346:	rex.R pop rdi
  41f348:	rex.WRB push r13
  41f34a:	push   rsp
  41f34b:	rex.RB pop r8
  41f34d:	pop    rdi
  41f34e:	rex.WB
  41f34f:	rex.WRX
  41f350:	rex.WB push r12
  41f352:	rex.WB
  41f353:	rex.B
  41f354:	rex.WR
  41f355:	rex.WB pop r10
  41f357:	rex.RB push r10
  41f359:	and    BYTE PTR [rdx+rcx*1+0x7b],bl
  41f35d:	jnp    0x41f37f
  41f35f:	pop    rsp
  41f360:	or     al,BYTE PTR [rax]
	...
  41f37e:	add    BYTE PTR [rax],al
  41f380:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41f384:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41f38b:	push   rax
  41f38c:	push   rsp
  41f38d:	rex.W push rdx
  41f38f:	rex.RB
  41f390:	rex.B
  41f391:	rex.R pop rdi
  41f393:	rex.WRB push r13
  41f395:	push   rsp
  41f396:	rex.RB pop r8
  41f398:	pop    rdi
  41f399:	rex.WB
  41f39a:	rex.WRX
  41f39b:	rex.WB push r12
  41f39d:	rex.WB
  41f39e:	rex.B
  41f39f:	rex.WR
  41f3a0:	rex.WB pop r10
  41f3a2:	rex.RB push r10
  41f3a4:	and    BYTE PTR [rsp+rbx*2+0xa],bl
  41f3a8:	pop    rsp
  41f3a9:	jnp    0x41f3cb
  41f3ab:	pop    rsp
  41f3ac:	pop    rsp
  41f3ad:	or     al,BYTE PTR [rax]
  41f3af:	jo     0x41f425
  41f3b1:	push   0x64616572
  41f3b6:	cs push 0x0
  41f3bc:	add    BYTE PTR [rax],al
  41f3be:	add    BYTE PTR [rax],al
  41f3c0:	(bad)  
  41f3c1:	imul   edi,DWORD PTR [rax+0x5f],0x6574756d
  41f3c8:	js     0x41f429
  41f3ca:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  41f3d1:	imul   edi,DWORD PTR [rdx+0x65],0x315f72
  41f3d8:	or     DWORD PTR [rax],esi
  41f3da:	and    BYTE PTR [rdx+rcx*1+0x7d],bl
  41f3de:	jge    0x41f3ea
  41f3e0:	add    BYTE PTR [rbx+0x20],bl
  41f3e3:	or     DWORD PTR [rbp+0x30],ebx
  41f3e6:	and    BYTE PTR [rsp+rbx*2+0xa],bl
  41f3ea:	pop    rsp
  41f3eb:	jge    0x41f3f7
  41f3ed:	add    BYTE PTR [rax+0x74],dh
  41f3f0:	push   0x64616572
  41f3f5:	cs push 0x0
  41f3fb:	add    BYTE PTR [rax],al
  41f3fd:	add    BYTE PTR [rax],al
  41f3ff:	add    BYTE PTR [rcx+0x69],ah
  41f402:	js     0x41f463
  41f404:	outs   dx,DWORD PTR ds:[rsi]
  41f405:	outs   dx,BYTE PTR ds:[rsi]
  41f406:	movsxd esp,DWORD PTR [rbp+0x5f]
  41f409:	imul   ebp,DWORD PTR [rsi+0x69],0x325f74
  41f410:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41f414:	imul   ebp,DWORD PTR [rsi+0x65],0x48545020
  41f41b:	push   rdx
  41f41c:	rex.RB
  41f41d:	rex.B
  41f41e:	rex.R pop rdi
  41f420:	rex.WRXB
  41f421:	rex.WRX
  41f422:	rex.XB
  41f423:	rex.RB pop r15
  41f425:	rex.WB
  41f426:	rex.WRX
  41f427:	rex.WB push r12
  41f429:	and    BYTE PTR [rdx+rcx*1+0x7b],bl
  41f42d:	jnp    0x41f44f
  41f42f:	pop    rsp
  41f430:	or     al,BYTE PTR [rax]
	...
  41f43e:	add    BYTE PTR [rax],al
  41f440:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41f444:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41f44b:	push   rax
  41f44c:	push   rsp
  41f44d:	rex.W push rdx
  41f44f:	rex.RB
  41f450:	rex.B
  41f451:	rex.R pop rdi
  41f453:	rex.WRXB
  41f454:	rex.WRX
  41f455:	rex.XB
  41f456:	rex.RB pop r15
  41f458:	rex.WB
  41f459:	rex.WRX
  41f45a:	rex.WB push r12
  41f45c:	and    BYTE PTR [rsp+rbx*2+0xa],bl
  41f460:	pop    rsp
  41f461:	jnp    0x41f483
  41f463:	pop    rsp
  41f464:	pop    rsp
  41f465:	or     al,BYTE PTR [rax]
  41f467:	jo     0x41f4dd
  41f469:	push   0x64616572
  41f46e:	cs push 0x0
	...
  41f480:	(bad)  
  41f481:	imul   edi,DWORD PTR [rax+0x5f],0x65636e6f
  41f488:	pop    rdi
  41f489:	imul   ebp,DWORD PTR [rsi+0x69],0x315f74
  41f490:	pop    rdi
  41f491:	pop    rdi
  41f492:	outs   dx,BYTE PTR ds:[rsi]
  41f493:	jne    0x41f501
  41f495:	ins    BYTE PTR es:[rdi],dx
	...
  41f49e:	add    BYTE PTR [rax],al
  41f4a0:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41f4a4:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41f4ab:	sub    ecx,DWORD PTR [rsi+0x55]
  41f4ae:	rex.WR
  41f4af:	rex.WR pop rbx
  41f4b1:	and    BYTE PTR [rcx],cl
  41f4b3:	pop    rbp
  41f4b4:	sub    ebx,DWORD PTR [rax+rbp*1+0x2a]
  41f4b8:	xor    BYTE PTR [rdx+rbp*1+0x5c],cl
  41f4bc:	sub    DWORD PTR [rdx],ebp
  41f4be:	add    BYTE PTR [rax],al
  41f4c0:	movsxd esi,DWORD PTR [rbp+0x72]
  41f4c3:	jae    0x41f52a
  41f4c5:	jae    0x41f4f5
  41f4c7:	push   0x6d626400
  41f4cc:	cs push 0x636f6c00
  41f4d2:	(bad)  
  41f4d3:	ins    BYTE PTR es:[rdi],dx
  41f4d4:	gs cs push 0x64747300
  41f4db:	imul   ebp,DWORD PTR [rdi+0x2e],0x74730068
  41f4e2:	fs ins BYTE PTR es:[rdi],dx
  41f4e4:	imul   esp,DWORD PTR [rdx+0x2e],0x74730068
  41f4eb:	jb     0x41f556
  41f4ed:	outs   dx,BYTE PTR ds:[rsi]
  41f4ee:	addr32 cs push 0x6d697400
  41f4f5:	gs cs push 0x696e7500
  41f4fc:	jae    0x41f572
  41f4fe:	fs cs push 0x68637700
  41f505:	(bad)  
  41f506:	jb     0x41f536
  41f508:	push   0x73797300
  41f50d:	(bad)  
  41f50e:	imul   esi,DWORD PTR fs:[rdx+0x2e],0x79730068
  41f516:	jae    0x41f547
  41f518:	jo     0x41f57b
  41f51a:	jb     0x41f57d
  41f51c:	ins    DWORD PTR es:[rdi],dx
  41f51d:	cs push 0x73797300
  41f523:	(bad)  
  41f524:	je     0x41f59f
  41f526:	jo     0x41f58d
  41f528:	jae    0x41f558
  41f52a:	push   0x69610000
  41f52f:	js     0x41f590
  41f531:	outs   dx,BYTE PTR ds:[rsi]
  41f532:	jne    0x41f5a0
  41f534:	ins    BYTE PTR es:[rdi],dx
  41f535:	add    BYTE PTR [rcx+rdi*2+0x70],dh
  41f539:	gs fs data16 and BYTE PTR gs:[rbx+0x74],dh
  41f540:	jb     0x41f5b7
  41f542:	movsxd esi,DWORD PTR [rax+riz*1+0x5f]
  41f546:	movsxd bx,DWORD PTR [rdi+0x73]
  41f54a:	outs   dx,DWORD PTR ds:[rsi]
  41f54b:	data16 je 0x41f5b1
  41f54e:	and    BYTE PTR [rbx+0x0],bh
	...
  41f55d:	add    BYTE PTR [rax],al
  41f55f:	add    BYTE PTR [rsi+0x73],bl
  41f562:	je     0x41f5d6
  41f564:	jne    0x41f5c9
  41f566:	je     0x41f588
  41f568:	and    BYTE PTR [rsi+0x63],ah
  41f56b:	pop    rdi
  41f56c:	jae    0x41f5dd
  41f56e:	data16 je 0x41f5d4
  41f571:	and    BYTE PTR [rbx+rdi*2+0x0],bl
  41f575:	outs   dx,BYTE PTR ds:[rsi]
  41f576:	gs je  0x41f5a8
  41f579:	imul   esp,DWORD PTR [rsi+0x5f],0x2e707261
  41f580:	push   0x69610000
  41f585:	js     0x41f5e6
  41f587:	outs   dx,BYTE PTR ds:[rsi]
  41f588:	gs je  0x41f5ea
  41f58b:	imul   esp,DWORD PTR [rsi+0x5f],0x707261
  41f592:	add    BYTE PTR [rax],al
  41f594:	add    BYTE PTR [rax],al
  41f596:	add    BYTE PTR [rax],al
  41f598:	and    ebp,DWORD PTR [rcx+0x66]
  41f59b:	and    BYTE PTR [rax],ch
  41f59d:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2864
  41f5a5:	pop    rdi
  41f5a6:	pop    rdi
  41f5a7:	movsxd esi,DWORD PTR [rax+0x6c]
  41f5aa:	jne    0x41f61f
  41f5ac:	jo     0x41f61a
  41f5ae:	jne    0x41f623
  41f5b0:	sub    DWORD PTR [rax],esp
  41f5b2:	es and BYTE PTR es:[rbp+riz*2+0x66],ah
  41f5b8:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2864
  41f5bf:	rex.WB
  41f5c0:	rex.X
  41f5c1:	rex.WRB
  41f5c2:	rex.XB push r8
  41f5c4:	push   rax
  41f5c5:	pop    rdi
  41f5c6:	pop    rdi
  41f5c7:	sub    DWORD PTR [rcx],ebp
  41f5c9:	add    BYTE PTR [rax],al
  41f5cb:	add    BYTE PTR [rax],al
  41f5cd:	add    BYTE PTR [rax],al
  41f5cf:	add    BYTE PTR [rbx],ah
  41f5d1:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  41f5d8:	pop    rdi
  41f5d9:	movsxd esi,DWORD PTR [rax+0x6c]
  41f5dc:	jne    0x41f651
  41f5de:	jo     0x41f64c
  41f5e0:	jne    0x41f655
  41f5e2:	add    BYTE PTR [rbp+0x61],ch
  41f5e5:	ins    BYTE PTR es:[rdi],dx
  41f5e6:	ins    BYTE PTR es:[rdi],dx
  41f5e7:	outs   dx,DWORD PTR ds:[rsi]
  41f5e8:	movsxd ebp,DWORD PTR [rsi]
  41f5ea:	push   0x69610000
  41f5ef:	js     0x41f650
  41f5f1:	ins    DWORD PTR es:[rdi],dx
  41f5f2:	(bad)  
  41f5f3:	ins    BYTE PTR es:[rdi],dx
  41f5f4:	ins    BYTE PTR es:[rdi],dx
  41f5f5:	outs   dx,DWORD PTR ds:[rsi]
  41f5f6:	movsxd eax,DWORD PTR [rax]
	...
  41f600:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41f604:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41f60b:	pop    rdi
  41f60c:	rex.XB outs dx,DWORD PTR ds:[rsi]
  41f60e:	ins    DWORD PTR es:[rdi],dx
  41f60f:	jo     0x41f67d
  41f611:	gs js  0x41f673
  41f614:	rex.WB pop r11
  41f616:	and    BYTE PTR [rcx],cl
  41f618:	pop    rbp
  41f619:	pop    rdi
  41f61a:	pop    rdi
  41f61b:	rex.WB add BYTE PTR [r11+0x6f],spl
  41f61f:	ins    DWORD PTR es:[rdi],dx
  41f620:	jo     0x41f68e
  41f622:	gs js  0x41f653
  41f625:	push   0x69610000
  41f62a:	js     0x41f68b
  41f62c:	movsxd ebp,DWORD PTR [rdi+0x6d]
  41f62f:	jo     0x41f69d
  41f631:	gs js  0x41f634
	...
  41f640:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41f644:	imul   ebp,DWORD PTR [rsi+0x65],0x5d09205b
  41f64b:	jae    0x41f6c1
  41f64d:	(bad)  
  41f64e:	je     0x41f6b9
  41f650:	movsxd ebx,DWORD PTR [rdi+0x61]
  41f653:	jae    0x41f6c8
  41f655:	gs jb  0x41f6cc
  41f658:	pop    rbx
  41f659:	and    BYTE PTR [rcx],cl
  41f65b:	pop    rbp
  41f65c:	pop    rdi
  41f65d:	push   rbx
  41f65e:	je     0x41f6c1
  41f660:	je     0x41f6cb
  41f662:	movsxd ebx,DWORD PTR [rdi+0x61]
  41f665:	jae    0x41f6da
  41f667:	gs jb  0x41f6de
  41f66a:	add    BYTE PTR [rcx+0x73],ah
  41f66d:	jae    0x41f6d4
  41f66f:	jb     0x41f6e5
  41f671:	cs push 0x69610000
  41f677:	js     0x41f6d8
  41f679:	(bad)  
  41f67a:	jae    0x41f6ef
  41f67c:	gs jb  0x41f6f3
  41f67f:	add    BYTE PTR [rbx],ah
  41f681:	imul   esp,DWORD PTR [rsi+0x6e],0x20666564
  41f688:	pop    rdi
  41f689:	push   rbp
  41f68a:	rex.WRX
  41f68b:	rex.WB push r11
  41f68d:	push   rsp
  41f68e:	rex.R pop rdi
  41f690:	rex.W or spl,BYTE PTR [rbx]
  41f693:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  41f69b:	push   rbp
  41f69c:	rex.WRX
  41f69d:	rex.WB push r11
  41f69f:	push   rsp
  41f6a0:	rex.R pop rdi
  41f6a2:	rex.W or spl,BYTE PTR [rbx]
  41f6a5:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  41f6ac:	pop    rdi
  41f6ad:	outs   dx,BYTE PTR ds:[rsi]
  41f6ae:	gs js  0x41f725
  41f6b1:	and    BYTE PTR [rsi*2+0x7473696e],bh
  41f6b8:	fs cs push 0x69230a3e
  41f6bf:	outs   dx,BYTE PTR ds:[rsi]
  41f6c0:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  41f6c4:	and    BYTE PTR gs:[rcx+rbp*2],bh
  41f6c8:	outs   dx,DWORD PTR ds:[rsi]
  41f6c9:	imul   r12,QWORD PTR [rdx+0x2e],0x230a3e68
  41f6d1:	imul   esp,DWORD PTR [rsi+0x6e],0x20666564
  41f6d8:	push   rbx
  41f6d9:	push   rsp
  41f6da:	rex.R
  41f6db:	rex.WB
  41f6dc:	rex.WRX pop rdi
  41f6de:	rex.RX
  41f6df:	rex.WB
  41f6e0:	rex.WR
  41f6e1:	rex.RB
  41f6e2:	rex.WRX
  41f6e3:	rex.WRXB or r12b,BYTE PTR [r11]
  41f6e6:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5320
  41f6ee:	push   rsp
  41f6ef:	rex.R
  41f6f0:	rex.WB
  41f6f1:	rex.WRX pop rdi
  41f6f3:	rex.RX
  41f6f4:	rex.WB
  41f6f5:	rex.WR
  41f6f6:	rex.RB
  41f6f7:	rex.WRX
  41f6f8:	rex.WRXB and BYTE PTR [r8],r14b
  41f6fb:	or     ah,BYTE PTR [rbx]
  41f6fd:	outs   dx,BYTE PTR gs:[rsi]
  41f6ff:	imul   esp,DWORD PTR fs:[rsi+0xa],0x6e666923
  41f707:	fs data16 and BYTE PTR gs:[rbx+0x54],dl
  41f70d:	rex.R
  41f70e:	rex.WRXB push r13
  41f710:	push   rsp
  41f711:	pop    rdi
  41f712:	rex.RX
  41f713:	rex.WB
  41f714:	rex.WR
  41f715:	rex.RB
  41f716:	rex.WRX
  41f717:	rex.WRXB or r12b,BYTE PTR [r11]
  41f71a:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5320
  41f722:	push   rsp
  41f723:	rex.R
  41f724:	rex.WRXB push r13
  41f726:	push   rsp
  41f727:	pop    rdi
  41f728:	rex.RX
  41f729:	rex.WB
  41f72a:	rex.WR
  41f72b:	rex.RB
  41f72c:	rex.WRX
  41f72d:	rex.WRXB and BYTE PTR [r9],r14b
  41f730:	or     ah,BYTE PTR [rbx]
  41f732:	outs   dx,BYTE PTR gs:[rsi]
  41f734:	imul   esp,DWORD PTR fs:[rsi+0xa],0x6e666923
  41f73c:	fs data16 and BYTE PTR gs:[rbx+0x54],dl
  41f742:	rex.R
  41f743:	rex.RB push r10
  41f745:	push   rdx
  41f746:	pop    rdi
  41f747:	rex.RX
  41f748:	rex.WB
  41f749:	rex.WR
  41f74a:	rex.RB
  41f74b:	rex.WRX
  41f74c:	rex.WRXB or r12b,BYTE PTR [r11]
  41f74f:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5320
  41f757:	push   rsp
  41f758:	rex.R
  41f759:	rex.RB push r10
  41f75b:	push   rdx
  41f75c:	pop    rdi
  41f75d:	rex.RX
  41f75e:	rex.WB
  41f75f:	rex.WR
  41f760:	rex.RB
  41f761:	rex.WRX
  41f762:	rex.WRXB and BYTE PTR [r10],r14b
  41f765:	or     ah,BYTE PTR [rbx]
  41f767:	outs   dx,BYTE PTR gs:[rsi]
  41f769:	imul   esp,DWORD PTR fs:[rsi+0xa],0x646e6523
  41f771:	imul   esp,DWORD PTR [rsi+0x20],0x5f202a2f
  41f778:	push   rbp
  41f779:	rex.WRX
  41f77a:	rex.WB push r11
  41f77c:	push   rsp
  41f77d:	rex.R pop rdi
  41f77f:	rex.W and BYTE PTR [rdx],bpl
  41f782:	(bad)  
  41f783:	add    BYTE PTR [rbp+0x6e],dh
  41f786:	imul   esi,DWORD PTR [rbx+0x74],0x682e64
  41f78d:	add    BYTE PTR [rax],al
  41f78f:	add    BYTE PTR [rcx+0x41],al
  41f792:	rex.X pop rdi
  41f794:	jbe    0x41f80e
  41f796:	ja     0x41f807
  41f798:	jb     0x41f805
  41f79a:	jae    0x41f7fb
  41f79c:	jne    0x41f80c
  41f79e:	imul   esi,DWORD PTR [rbx+0x74],0x64
  41f7a5:	add    BYTE PTR [rax],al
  41f7a7:	add    BYTE PTR [rbx],ah
  41f7a9:	imul   esp,DWORD PTR [rsi+0x6e],0x20666564
  41f7b0:	pop    rdi
  41f7b1:	push   rbx
  41f7b2:	push   rsp
  41f7b3:	rex.R
  41f7b4:	rex.WB
  41f7b5:	rex.WRX push rsp
  41f7b7:	pop    rdi
  41f7b8:	rex.W or spl,BYTE PTR [rbx]
  41f7bb:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  41f7c3:	push   rbx
  41f7c4:	push   rsp
  41f7c5:	rex.R
  41f7c6:	rex.WB
  41f7c7:	rex.WRX push rsp
  41f7c9:	pop    rdi
  41f7ca:	rex.W or bpl,BYTE PTR [rdi]
  41f7cd:	sub    ah,BYTE PTR [rax]
  41f7cf:	addr32 gs je 0x41f7f3
  41f7d3:	imul   ebp,DWORD PTR [rsi+0x74],0x2c745f2a
  41f7da:	and    BYTE PTR [rbp+0x69],dh
  41f7dd:	outs   dx,BYTE PTR ds:[rsi]
  41f7de:	je     0x41f80a
  41f7e0:	pop    rdi
  41f7e1:	je     0x41f803
  41f7e3:	sub    ch,BYTE PTR [rdi]
  41f7e5:	or     ah,BYTE PTR [rbx]
  41f7e7:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  41f7ee:	and    BYTE PTR [rsp+rsi*2],bh
  41f7f1:	jns    0x41f863
  41f7f3:	gs jae 0x41f825
  41f7f6:	jbe    0x41f870
  41f7f8:	push   rsp
  41f7f9:	jns    0x41f86b
  41f7fb:	gs jae 0x41f82c
  41f7fe:	push   0x2f0a0a3e
  41f803:	sub    ah,BYTE PTR [rax]
  41f805:	addr32 gs je 0x41f829
  41f809:	ins    BYTE PTR es:[rdi],dx
  41f80a:	gs addr32 (bad) 
  41f80d:	movsxd edi,DWORD PTR [rcx+0x20]
  41f810:	jbe    0x41f88a
  41f812:	ja     0x41f883
  41f814:	jb     0x41f881
  41f816:	jae    0x41f838
  41f818:	je     0x41f893
  41f81a:	jo     0x41f881
  41f81c:	jae    0x41f83e
  41f81e:	outs   dx,WORD PTR ds:[rsi]
  41f820:	jb     0x41f842
  41f822:	movsxd ebp,DWORD PTR [rdi+0x6d]
  41f825:	jo     0x41f888
  41f827:	je     0x41f892
  41f829:	(bad)  
  41f82a:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x2f2a2079
  41f832:	or     ah,BYTE PTR [rbx]
  41f834:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  41f83b:	and    BYTE PTR [rsp+rsi*2],bh
  41f83e:	jns    0x41f8b0
  41f840:	gs jae 0x41f872
  41f843:	jbe    0x41f8bd
  41f845:	push   rsp
  41f846:	jns    0x41f8b8
  41f848:	gs jae 0x41f89a
  41f84b:	ins    BYTE PTR es:[rdi],dx
  41f84c:	fs cs push 0x740a0a3e
  41f853:	jns    0x41f8c5
  41f855:	gs fs data16 and BYTE PTR gs:[rdi+rbp*2+0x6e],ch
  41f85d:	and    BYTE PTR [ecx+0x6e],ch
  41f861:	je     0x41f8d3
  41f863:	je     0x41f8d7
  41f865:	pop    rdi
  41f866:	je     0x41f8a3
  41f868:	or     dh,BYTE PTR [rcx+rdi*2+0x70]
  41f86c:	gs fs data16 and BYTE PTR gs:[rbp+0x6e],dh
  41f873:	jae    0x41f8de
  41f875:	outs   dx,BYTE PTR ds:[esi]
  41f877:	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
  41f87d:	and    BYTE PTR [ebp+0x69],dh
  41f881:	outs   dx,BYTE PTR ds:[rsi]
  41f882:	je     0x41f8f4
  41f884:	je     0x41f8f8
  41f886:	pop    rdi
  41f887:	je     0x41f8c4
  41f889:	or     cl,BYTE PTR [rdx]
  41f88b:	je     0x41f906
  41f88d:	jo     0x41f8f4
  41f88f:	fs data16 and BYTE PTR gs:[rcx+0x6e],ch
  41f895:	je     0x41f8cd
  41f897:	xor    al,0x5f
  41f899:	je     0x41f8bb
  41f89b:	imul   ebp,DWORD PTR [rsi+0x74],0x5f78616d
  41f8a2:	je     0x41f8df
  41f8a4:	or     dh,BYTE PTR [rcx+rdi*2+0x70]
  41f8a8:	gs fs data16 and BYTE PTR gs:[rbp+0x69],dh
  41f8af:	outs   dx,BYTE PTR ds:[rsi]
  41f8b0:	je     0x41f8e8
  41f8b2:	xor    al,0x5f
  41f8b4:	je     0x41f8d6
  41f8b6:	jne    0x41f921
  41f8b8:	outs   dx,BYTE PTR ds:[rsi]
  41f8b9:	je     0x41f928
  41f8bb:	(bad)  
  41f8bc:	js     0x41f91d
  41f8be:	je     0x41f8fb
  41f8c0:	or     cl,BYTE PTR [rdx]
  41f8c2:	je     0x41f93d
  41f8c4:	jo     0x41f92b
  41f8c6:	fs data16 and BYTE PTR gs:[rcx+0x6e],ch
  41f8cc:	je     0x41f906
  41f8ce:	pop    rdi
  41f8cf:	je     0x41f8f1
  41f8d1:	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
  41f8d8:	jae    0x41f94e
  41f8da:	cmp    BYTE PTR [rdi+0x74],bl
  41f8dd:	cmp    ecx,DWORD PTR [rdx]
  41f8df:	je     0x41f95a
  41f8e1:	jo     0x41f948
  41f8e3:	fs data16 and BYTE PTR gs:[rcx+0x6e],ch
  41f8e9:	je     0x41f91c
  41f8eb:	ss pop rdi
  41f8ed:	je     0x41f90f
  41f8ef:	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
  41f8f6:	jae    0x41f96c
  41f8f8:	xor    DWORD PTR [rsi],esi
  41f8fa:	pop    rdi
  41f8fb:	je     0x41f938
  41f8fd:	or     dh,BYTE PTR [rcx+rdi*2+0x70]
  41f901:	gs fs data16 and BYTE PTR gs:[rcx+0x6e],ch
  41f908:	je     0x41f93d
  41f90a:	xor    bl,BYTE PTR [rdi+0x74]
  41f90d:	and    BYTE PTR [rcx+0x6e],ch
  41f910:	je     0x41f971
  41f912:	ins    BYTE PTR es:[rdi],dx
  41f913:	gs (bad) 
  41f915:	jae    0x41f98b
  41f917:	xor    esi,DWORD PTR [rdx]
  41f919:	pop    rdi
  41f91a:	je     0x41f957
  41f91c:	or     dh,BYTE PTR [rcx+rdi*2+0x70]
  41f920:	gs fs data16 and BYTE PTR gs:[rcx+0x6e],ch
  41f927:	je     0x41f95f
  41f929:	xor    al,0x5f
  41f92b:	je     0x41f94d
  41f92d:	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
  41f934:	jae    0x41f9aa
  41f936:	ss xor al,0x5f
  41f939:	je     0x41f976
  41f93b:	or     cl,BYTE PTR [rdx]
  41f93d:	je     0x41f9b8
  41f93f:	jo     0x41f9a6
  41f941:	fs data16 and BYTE PTR gs:[rbp+0x69],dh
  41f947:	outs   dx,BYTE PTR ds:[rsi]
  41f948:	je     0x41f982
  41f94a:	pop    rdi
  41f94b:	je     0x41f96d
  41f94d:	jne    0x41f9b8
  41f94f:	outs   dx,BYTE PTR ds:[rsi]
  41f950:	je     0x41f9b1
  41f952:	ins    BYTE PTR es:[rdi],dx
  41f953:	gs (bad) 
  41f955:	jae    0x41f9cb
  41f957:	cmp    BYTE PTR [rdi+0x74],bl
  41f95a:	cmp    ecx,DWORD PTR [rdx]
  41f95c:	je     0x41f9d7
  41f95e:	jo     0x41f9c5
  41f960:	fs data16 and BYTE PTR gs:[rbp+0x69],dh
  41f966:	outs   dx,BYTE PTR ds:[rsi]
  41f967:	je     0x41f99a
  41f969:	ss pop rdi
  41f96b:	je     0x41f98d
  41f96d:	jne    0x41f9d8
  41f96f:	outs   dx,BYTE PTR ds:[rsi]
  41f970:	je     0x41f9d1
  41f972:	ins    BYTE PTR es:[rdi],dx
  41f973:	gs (bad) 
  41f975:	jae    0x41f9eb
  41f977:	xor    DWORD PTR [rsi],esi
  41f979:	pop    rdi
  41f97a:	je     0x41f9b7
  41f97c:	or     dh,BYTE PTR [rcx+rdi*2+0x70]
  41f980:	gs fs data16 and BYTE PTR gs:[rbp+0x69],dh
  41f987:	outs   dx,BYTE PTR ds:[rsi]
  41f988:	je     0x41f9bd
  41f98a:	xor    bl,BYTE PTR [rdi+0x74]
  41f98d:	and    BYTE PTR [rbp+0x69],dh
  41f990:	outs   dx,BYTE PTR ds:[rsi]
  41f991:	je     0x41f9f2
  41f993:	ins    BYTE PTR es:[rdi],dx
  41f994:	gs (bad) 
  41f996:	jae    0x41fa0c
  41f998:	xor    esi,DWORD PTR [rdx]
  41f99a:	pop    rdi
  41f99b:	je     0x41f9d8
  41f99d:	or     dh,BYTE PTR [rcx+rdi*2+0x70]
  41f9a1:	gs fs data16 and BYTE PTR gs:[rbp+0x69],dh
  41f9a8:	outs   dx,BYTE PTR ds:[rsi]
  41f9a9:	je     0x41f9e1
  41f9ab:	xor    al,0x5f
  41f9ad:	je     0x41f9cf
  41f9af:	jne    0x41fa1a
  41f9b1:	outs   dx,BYTE PTR ds:[rsi]
  41f9b2:	je     0x41fa13
  41f9b4:	ins    BYTE PTR es:[rdi],dx
  41f9b5:	gs (bad) 
  41f9b7:	jae    0x41fa2d
  41f9b9:	ss xor al,0x5f
  41f9bc:	je     0x41f9f9
  41f9be:	or     cl,BYTE PTR [rdx]
  41f9c0:	je     0x41fa3b
  41f9c2:	jo     0x41fa29
  41f9c4:	fs data16 and BYTE PTR gs:[rcx+0x6e],ch
  41f9ca:	je     0x41fa04
  41f9cc:	pop    rdi
  41f9cd:	je     0x41f9ef
  41f9cf:	imul   ebp,DWORD PTR [rsi+0x74],0x7361665f
  41f9d6:	je     0x41fa10
  41f9d8:	pop    rdi
  41f9d9:	je     0x41fa16
  41f9db:	or     dh,BYTE PTR [rcx+rdi*2+0x70]
  41f9df:	gs fs data16 and BYTE PTR gs:[rcx+0x6e],ch
  41f9e6:	je     0x41fa08
  41f9e8:	imul   ebp,DWORD PTR [rsi+0x74],0x7361665f
  41f9ef:	je     0x41fa22
  41f9f1:	ss pop rdi
  41f9f3:	je     0x41fa30
  41f9f5:	or     dh,BYTE PTR [rcx+rdi*2+0x70]
  41f9f9:	gs fs data16 and BYTE PTR gs:[rcx+0x6e],ch
  41fa00:	je     0x41fa35
  41fa02:	xor    bl,BYTE PTR [rdi+0x74]
  41fa05:	and    BYTE PTR [rcx+0x6e],ch
  41fa08:	je     0x41fa69
  41fa0a:	data16 (bad) 
  41fa0c:	jae    0x41fa82
  41fa0e:	xor    esi,DWORD PTR [rdx]
  41fa10:	pop    rdi
  41fa11:	je     0x41fa4e
  41fa13:	or     dh,BYTE PTR [rcx+rdi*2+0x70]
  41fa17:	gs fs data16 and BYTE PTR gs:[rcx+0x6e],ch
  41fa1e:	je     0x41fa56
  41fa20:	xor    al,0x5f
  41fa22:	je     0x41fa44
  41fa24:	imul   ebp,DWORD PTR [rsi+0x74],0x7361665f
  41fa2b:	je     0x41fa63
  41fa2d:	xor    al,0x5f
  41fa2f:	je     0x41fa6c
  41fa31:	or     cl,BYTE PTR [rdx]
  41fa33:	je     0x41faae
  41fa35:	jo     0x41fa9c
  41fa37:	fs data16 and BYTE PTR gs:[rbp+0x69],dh
  41fa3d:	outs   dx,BYTE PTR ds:[rsi]
  41fa3e:	je     0x41fa78
  41fa40:	pop    rdi
  41fa41:	je     0x41fa63
  41fa43:	jne    0x41faae
  41fa45:	outs   dx,BYTE PTR ds:[rsi]
  41fa46:	je     0x41faa7
  41fa48:	data16 (bad) 
  41fa4a:	jae    0x41fac0
  41fa4c:	cmp    BYTE PTR [rdi+0x74],bl
  41fa4f:	cmp    ecx,DWORD PTR [rdx]
  41fa51:	je     0x41facc
  41fa53:	jo     0x41faba
  41fa55:	fs data16 and BYTE PTR gs:[rbp+0x6e],dh
  41fa5b:	jae    0x41fac6
  41fa5d:	outs   dx,BYTE PTR ds:[esi]
  41fa5f:	gs and BYTE PTR fs:[rcx+0x6e],ch
  41fa64:	je     0x41fa86
  41fa66:	jne    0x41fad1
  41fa68:	outs   dx,BYTE PTR ds:[rsi]
  41fa69:	je     0x41faca
  41fa6b:	data16 (bad) 
  41fa6d:	jae    0x41fae3
  41fa6f:	xor    DWORD PTR [rsi],esi
  41fa71:	pop    rdi
  41fa72:	je     0x41faaf
  41fa74:	or     dh,BYTE PTR [rcx+rdi*2+0x70]
  41fa78:	gs fs data16 and BYTE PTR gs:[rbp+0x69],dh
  41fa7f:	outs   dx,BYTE PTR ds:[rsi]
  41fa80:	je     0x41fab5
  41fa82:	xor    bl,BYTE PTR [rdi+0x74]
  41fa85:	and    BYTE PTR [rbp+0x69],dh
  41fa88:	outs   dx,BYTE PTR ds:[rsi]
  41fa89:	je     0x41faea
  41fa8b:	data16 (bad) 
  41fa8d:	jae    0x41fb03
  41fa8f:	xor    esi,DWORD PTR [rdx]
  41fa91:	pop    rdi
  41fa92:	je     0x41facf
  41fa94:	or     dh,BYTE PTR [rcx+rdi*2+0x70]
  41fa98:	gs fs data16 and BYTE PTR gs:[rbp+0x69],dh
  41fa9f:	outs   dx,BYTE PTR ds:[rsi]
  41faa0:	je     0x41fad8
  41faa2:	xor    al,0x5f
  41faa4:	je     0x41fac6
  41faa6:	jne    0x41fb11
  41faa8:	outs   dx,BYTE PTR ds:[rsi]
  41faa9:	je     0x41fb0a
  41faab:	data16 (bad) 
  41faad:	jae    0x41fb23
  41faaf:	ss xor al,0x5f
  41fab2:	je     0x41faef
  41fab4:	or     cl,BYTE PTR [rdx]
  41fab6:	(bad)  
  41fab7:	sub    ah,BYTE PTR [rax]
  41fab9:	push   rdx
  41faba:	(bad)  
  41fabb:	outs   dx,BYTE PTR ds:[rsi]
  41fabc:	addr32 gs jae 0x41fae0
  41fac0:	sub    ch,BYTE PTR [rdi]
  41fac2:	or     ah,BYTE PTR [rbx]
  41fac4:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41facc:	rex.WB
  41facd:	rex.WRX push rsp
  41facf:	cmp    BYTE PTR [rdi+0x4d],bl
  41fad2:	pop    r8
  41fad4:	and    BYTE PTR [rax],ch
  41fad6:	jle    0x41fb00
  41fad8:	jne    0x41fb43
  41fada:	outs   dx,BYTE PTR ds:[rsi]
  41fadb:	je     0x41fb15
  41fadd:	pop    rdi
  41fade:	je     0x41fb09
  41fae0:	xor    BYTE PTR [rcx],ch
  41fae2:	or     ah,BYTE PTR [rbx]
  41fae4:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41faec:	rex.WB
  41faed:	rex.WRX push rsp
  41faef:	cmp    BYTE PTR [rdi+0x4d],bl
  41faf2:	rex.WB
  41faf3:	rex.WRX and BYTE PTR [rax],r14b
  41faf6:	or     ah,BYTE PTR [rbx]
  41faf8:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41fb00:	rex.WB
  41fb01:	rex.WRX push rsp
  41fb03:	xor    DWORD PTR [rsi],esi
  41fb05:	pop    rdi
  41fb06:	rex.WRB
  41fb07:	pop    r8
  41fb09:	and    BYTE PTR [rax],ch
  41fb0b:	jle    0x41fb35
  41fb0d:	jne    0x41fb78
  41fb0f:	outs   dx,BYTE PTR ds:[rsi]
  41fb10:	je     0x41fb43
  41fb12:	ss pop rdi
  41fb14:	je     0x41fb3f
  41fb16:	xor    BYTE PTR [rcx],ch
  41fb18:	or     ah,BYTE PTR [rbx]
  41fb1a:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41fb22:	rex.WB
  41fb23:	rex.WRX push rsp
  41fb25:	xor    DWORD PTR [rsi],esi
  41fb27:	pop    rdi
  41fb28:	rex.WRB
  41fb29:	rex.WB
  41fb2a:	rex.WRX and BYTE PTR [rax],r14b
  41fb2d:	or     ah,BYTE PTR [rbx]
  41fb2f:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41fb37:	rex.WB
  41fb38:	rex.WRX push rsp
  41fb3a:	xor    esi,DWORD PTR [rdx]
  41fb3c:	pop    rdi
  41fb3d:	rex.WRB
  41fb3e:	pop    r8
  41fb40:	and    BYTE PTR [rax],ch
  41fb42:	jle    0x41fb6c
  41fb44:	jne    0x41fbaf
  41fb46:	outs   dx,BYTE PTR ds:[rsi]
  41fb47:	je     0x41fb7c
  41fb49:	xor    bl,BYTE PTR [rdi+0x74]
  41fb4c:	sub    DWORD PTR [rax],esi
  41fb4e:	sub    DWORD PTR [rdx],ecx
  41fb50:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41fb54:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41fb5b:	push   rsp
  41fb5c:	xor    esi,DWORD PTR [rdx]
  41fb5e:	pop    rdi
  41fb5f:	rex.WRB
  41fb60:	rex.WB
  41fb61:	rex.WRX and BYTE PTR [rax],r14b
  41fb64:	or     ah,BYTE PTR [rbx]
  41fb66:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41fb6e:	rex.WB
  41fb6f:	rex.WRX push rsp
  41fb71:	ss xor al,0x5f
  41fb74:	rex.WRB
  41fb75:	pop    r8
  41fb77:	and    BYTE PTR [rax],ch
  41fb79:	jle    0x41fba3
  41fb7b:	jne    0x41fbe6
  41fb7d:	outs   dx,BYTE PTR ds:[rsi]
  41fb7e:	je     0x41fbb6
  41fb80:	xor    al,0x5f
  41fb82:	je     0x41fbad
  41fb84:	xor    BYTE PTR [rcx],ch
  41fb86:	or     ah,BYTE PTR [rbx]
  41fb88:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41fb90:	rex.WB
  41fb91:	rex.WRX push rsp
  41fb93:	ss xor al,0x5f
  41fb96:	rex.WRB
  41fb97:	rex.WB
  41fb98:	rex.WRX and BYTE PTR [rax],r14b
  41fb9b:	or     cl,BYTE PTR [rdx]
  41fb9d:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41fba1:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41fba8:	push   rsp
  41fba9:	push   rax
  41fbaa:	push   rsp
  41fbab:	push   rdx
  41fbac:	pop    rdi
  41fbad:	rex.WRB
  41fbae:	pop    r8
  41fbb0:	and    BYTE PTR [rax],ch
  41fbb2:	jle    0x41fbdc
  41fbb4:	jne    0x41fc1f
  41fbb6:	outs   dx,BYTE PTR ds:[rsi]
  41fbb7:	je     0x41fc29
  41fbb9:	je     0x41fc2d
  41fbbb:	pop    rdi
  41fbbc:	je     0x41fbe7
  41fbbe:	xor    BYTE PTR [rcx],ch
  41fbc0:	or     ah,BYTE PTR [rbx]
  41fbc2:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41fbca:	rex.WB
  41fbcb:	rex.WRX push rsp
  41fbcd:	push   rax
  41fbce:	push   rsp
  41fbcf:	push   rdx
  41fbd0:	pop    rdi
  41fbd1:	rex.WRB
  41fbd2:	rex.WB
  41fbd3:	rex.WRX and BYTE PTR [rax],r14b
  41fbd6:	or     cl,BYTE PTR [rdx]
  41fbd8:	(bad)  
  41fbd9:	sub    ah,BYTE PTR [rax]
  41fbdb:	rex.WRX
  41fbdc:	gs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  41fbe3:	outs   dx,DWORD PTR fs:[rsi]
  41fbe5:	and    BYTE PTR [rcx+0x6e],ch
  41fbe8:	je     0x41fc49
  41fbea:	data16 (bad) 
  41fbec:	jae    0x41fc62
  41fbee:	xor    DWORD PTR [rsi],esi
  41fbf0:	pop    rdi
  41fbf1:	je     0x41fc13
  41fbf3:	(bad)  
  41fbf4:	jae    0x41fc16
  41fbf6:	ja     0x41fc5d
  41fbf8:	ins    BYTE PTR es:[rdi],dx
  41fbf9:	ins    BYTE PTR es:[rdi],dx
  41fbfa:	sub    al,0x20
  41fbfc:	(bad)  
  41fbfd:	jae    0x41fc1f
  41fbff:	je     0x41fc7a
  41fc01:	jo     0x41fc68
  41fc03:	or     ah,BYTE PTR [rax]
  41fc05:	and    BYTE PTR [rax],ah
  41fc07:	jae    0x41fc72
  41fc09:	jp     0x41fc70
  41fc0b:	and    BYTE PTR [rbp+0x61],ch
  41fc0e:	jns    0x41fc30
  41fc10:	(bad)  
  41fc11:	and    BYTE PTR gs:[rcx+0x72],ah
  41fc15:	movsxd ebp,DWORD PTR [rax+0x69]
  41fc18:	je     0x41fc7f
  41fc1a:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  41fc1e:	and    BYTE PTR gs:[rbp+riz*2+0x70],ah
  41fc23:	outs   dx,BYTE PTR gs:[rsi]
  41fc25:	fs outs dx,BYTE PTR gs:[rsi]
  41fc28:	je     0x41fc4a
  41fc2a:	sub    ch,BYTE PTR [rdi]
  41fc2c:	or     ah,BYTE PTR [rbx]
  41fc2e:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41fc36:	rex.WB
  41fc37:	rex.WRX push rsp
  41fc39:	pop    rdi
  41fc3a:	rex.RX
  41fc3b:	push   r11
  41fc3d:	push   rsp
  41fc3e:	xor    DWORD PTR [rsi],esi
  41fc40:	pop    rdi
  41fc41:	rex.WRB
  41fc42:	pop    r8
  41fc44:	and    BYTE PTR [rax],ch
  41fc46:	jle    0x41fc70
  41fc48:	jne    0x41fcb3
  41fc4a:	outs   dx,BYTE PTR ds:[rsi]
  41fc4b:	je     0x41fcac
  41fc4d:	data16 (bad) 
  41fc4f:	jae    0x41fcc5
  41fc51:	xor    DWORD PTR [rsi],esi
  41fc53:	pop    rdi
  41fc54:	je     0x41fc7f
  41fc56:	xor    BYTE PTR [rcx],ch
  41fc58:	or     ah,BYTE PTR [rbx]
  41fc5a:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41fc62:	rex.WB
  41fc63:	rex.WRX push rsp
  41fc65:	pop    rdi
  41fc66:	rex.RX
  41fc67:	push   r11
  41fc69:	push   rsp
  41fc6a:	xor    DWORD PTR [rsi],esi
  41fc6c:	pop    rdi
  41fc6d:	rex.WRB
  41fc6e:	pop    r8
  41fc70:	and    BYTE PTR [rax],dh
  41fc72:	or     cl,BYTE PTR [rdx]
  41fc74:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41fc78:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  41fc7f:	cmp    BYTE PTR [rdi+0x4d],bl
  41fc82:	pop    r8
  41fc84:	and    BYTE PTR [rax],ch
  41fc86:	push   rbp
  41fc87:	rex.WB
  41fc88:	rex.WRX push rsp
  41fc8a:	cmp    BYTE PTR [rdi+0x4d],bl
  41fc8d:	pop    r8
  41fc8f:	ds xor DWORD PTR ds:[rcx],ebp
  41fc93:	or     ah,BYTE PTR [rbx]
  41fc95:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41fc9d:	rex.WRX push rsp
  41fc9f:	cmp    BYTE PTR [rdi+0x4d],bl
  41fca2:	rex.WB
  41fca3:	rex.WRX and BYTE PTR [rax],r13b
  41fca6:	rex.WB
  41fca7:	rex.WRX push rsp
  41fca9:	cmp    BYTE PTR [rdi+0x4d],bl
  41fcac:	pop    r8
  41fcae:	sub    esi,DWORD PTR [rcx]
  41fcb0:	sub    DWORD PTR [rdx],ecx
  41fcb2:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41fcb6:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  41fcbd:	xor    DWORD PTR [rsi],esi
  41fcbf:	pop    rdi
  41fcc0:	rex.WRB
  41fcc1:	pop    r8
  41fcc3:	and    BYTE PTR [rax],ch
  41fcc5:	push   rbp
  41fcc6:	rex.WB
  41fcc7:	rex.WRX push rsp
  41fcc9:	xor    DWORD PTR [rsi],esi
  41fccb:	pop    rdi
  41fccc:	rex.WRB
  41fccd:	pop    r8
  41fccf:	ds xor DWORD PTR ds:[rcx],ebp
  41fcd3:	or     ah,BYTE PTR [rbx]
  41fcd5:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41fcdd:	rex.WRX push rsp
  41fcdf:	xor    DWORD PTR [rsi],esi
  41fce1:	pop    rdi
  41fce2:	rex.WRB
  41fce3:	rex.WB
  41fce4:	rex.WRX and BYTE PTR [rax],r13b
  41fce7:	rex.WB
  41fce8:	rex.WRX push rsp
  41fcea:	xor    DWORD PTR [rsi],esi
  41fcec:	pop    rdi
  41fced:	rex.WRB
  41fcee:	pop    r8
  41fcf0:	sub    esi,DWORD PTR [rcx]
  41fcf2:	sub    DWORD PTR [rdx],ecx
  41fcf4:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41fcf8:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  41fcff:	xor    esi,DWORD PTR [rdx]
  41fd01:	pop    rdi
  41fd02:	rex.WRB
  41fd03:	pop    r8
  41fd05:	and    BYTE PTR [rax],ch
  41fd07:	push   rbp
  41fd08:	rex.WB
  41fd09:	rex.WRX push rsp
  41fd0b:	xor    esi,DWORD PTR [rdx]
  41fd0d:	pop    rdi
  41fd0e:	rex.WRB
  41fd0f:	pop    r8
  41fd11:	ds xor DWORD PTR ds:[rcx],ebp
  41fd15:	or     ah,BYTE PTR [rbx]
  41fd17:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41fd1f:	rex.WRX push rsp
  41fd21:	xor    esi,DWORD PTR [rdx]
  41fd23:	pop    rdi
  41fd24:	rex.WRB
  41fd25:	rex.WB
  41fd26:	rex.WRX and BYTE PTR [rax],r13b
  41fd29:	rex.WB
  41fd2a:	rex.WRX push rsp
  41fd2c:	xor    esi,DWORD PTR [rdx]
  41fd2e:	pop    rdi
  41fd2f:	rex.WRB
  41fd30:	pop    r8
  41fd32:	sub    esi,DWORD PTR [rcx]
  41fd34:	sub    DWORD PTR [rdx],ecx
  41fd36:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41fd3a:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  41fd41:	ss xor al,0x5f
  41fd44:	rex.WRB
  41fd45:	pop    r8
  41fd47:	and    BYTE PTR [rax],ch
  41fd49:	push   rbp
  41fd4a:	rex.WB
  41fd4b:	rex.WRX push rsp
  41fd4d:	ss xor al,0x5f
  41fd50:	rex.WRB
  41fd51:	pop    r8
  41fd53:	ds xor DWORD PTR ds:[rcx],ebp
  41fd57:	or     ah,BYTE PTR [rbx]
  41fd59:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41fd61:	rex.WRX push rsp
  41fd63:	ss xor al,0x5f
  41fd66:	rex.WRB
  41fd67:	rex.WB
  41fd68:	rex.WRX and BYTE PTR [rax],r13b
  41fd6b:	rex.WB
  41fd6c:	rex.WRX push rsp
  41fd6e:	ss xor al,0x5f
  41fd71:	rex.WRB
  41fd72:	pop    r8
  41fd74:	sub    esi,DWORD PTR [rcx]
  41fd76:	sub    DWORD PTR [rdx],ecx
  41fd78:	or     ah,BYTE PTR [rbx]
  41fd7a:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41fd82:	rex.WRX push rsp
  41fd84:	push   rax
  41fd85:	push   rsp
  41fd86:	push   rdx
  41fd87:	pop    rdi
  41fd88:	rex.WRB
  41fd89:	pop    r8
  41fd8b:	and    BYTE PTR [rax],ch
  41fd8d:	push   rbp
  41fd8e:	rex.WB
  41fd8f:	rex.WRX push rsp
  41fd91:	push   rax
  41fd92:	push   rsp
  41fd93:	push   rdx
  41fd94:	pop    rdi
  41fd95:	rex.WRB
  41fd96:	pop    r8
  41fd98:	ds xor DWORD PTR ds:[rcx],ebp
  41fd9c:	or     ah,BYTE PTR [rbx]
  41fd9e:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41fda6:	rex.WRX push rsp
  41fda8:	push   rax
  41fda9:	push   rsp
  41fdaa:	push   rdx
  41fdab:	pop    rdi
  41fdac:	rex.WRB
  41fdad:	rex.WB
  41fdae:	rex.WRX and BYTE PTR [rax],r13b
  41fdb1:	rex.WB
  41fdb2:	rex.WRX push rsp
  41fdb4:	push   rax
  41fdb5:	push   rsp
  41fdb6:	push   rdx
  41fdb7:	pop    rdi
  41fdb8:	rex.WRB
  41fdb9:	pop    r8
  41fdbb:	sub    esi,DWORD PTR [rcx]
  41fdbd:	sub    DWORD PTR [rcx],ecx
  41fdbf:	or     cl,BYTE PTR [rdx]
  41fdc1:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41fdc5:	imul   ebp,DWORD PTR [rsi+0x65],0x544e4920
  41fdcc:	pop    rdi
  41fdcd:	rex.RX
  41fdce:	push   r11
  41fdd0:	push   rsp
  41fdd1:	xor    DWORD PTR [rsi],esi
  41fdd3:	pop    rdi
  41fdd4:	rex.WRB
  41fdd5:	pop    r8
  41fdd7:	and    BYTE PTR [rax],ch
  41fdd9:	push   rbp
  41fdda:	rex.WB
  41fddb:	rex.WRX push rsp
  41fddd:	pop    rdi
  41fdde:	rex.RX
  41fddf:	push   r11
  41fde1:	push   rsp
  41fde2:	xor    DWORD PTR [rsi],esi
  41fde4:	pop    rdi
  41fde5:	rex.WRB
  41fde6:	pop    r8
  41fde8:	ds xor DWORD PTR ds:[rcx],ebp
  41fdec:	or     ah,BYTE PTR [rbx]
  41fdee:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41fdf6:	rex.WRX push rsp
  41fdf8:	pop    rdi
  41fdf9:	rex.RX
  41fdfa:	push   r11
  41fdfc:	push   rsp
  41fdfd:	xor    DWORD PTR [rsi],esi
  41fdff:	pop    rdi
  41fe00:	rex.WRB
  41fe01:	rex.WB
  41fe02:	rex.WRX and BYTE PTR [rax],r13b
  41fe05:	rex.WB
  41fe06:	rex.WRX push rsp
  41fe08:	pop    rdi
  41fe09:	rex.RX
  41fe0a:	push   r11
  41fe0c:	push   rsp
  41fe0d:	xor    DWORD PTR [rsi],esi
  41fe0f:	pop    rdi
  41fe10:	rex.WRB
  41fe11:	pop    r8
  41fe13:	sub    esi,DWORD PTR [rcx]
  41fe15:	sub    DWORD PTR [rdx],ecx
  41fe17:	or     ch,BYTE PTR [rdi]
  41fe19:	sub    ah,BYTE PTR [rax]
  41fe1b:	outs   dx,BYTE PTR ds:[rsi]
  41fe1c:	outs   dx,DWORD PTR ds:[rsi]
  41fe1d:	ja     0x41fe3f
  41fe1f:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6520
  41fe27:	jno    0x41fe9e
  41fe29:	imul   esi,DWORD PTR [rsi+0x2e],0x6e6f6320
  41fe30:	jae    0x41fea6
  41fe32:	(bad)  
  41fe33:	outs   dx,BYTE PTR ds:[rsi]
  41fe34:	je     0x41fea9
  41fe36:	and    BYTE PTR [rdx],ch
  41fe38:	(bad)  
  41fe39:	or     ah,BYTE PTR [rbx]
  41fe3b:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41fe43:	rex.WB
  41fe44:	rex.WRX push rsp
  41fe46:	pop    rdi
  41fe47:	rex.RX
  41fe48:	push   r11
  41fe4a:	push   rsp
  41fe4b:	cmp    BYTE PTR [rdi+0x4d],bl
  41fe4e:	pop    r8
  41fe50:	and    BYTE PTR [rbp+0x49],dl
  41fe53:	rex.WRX push rsp
  41fe55:	cmp    BYTE PTR [rdi+0x4d],bl
  41fe58:	pop    r8
  41fe5a:	or     ah,BYTE PTR [rbx]
  41fe5c:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41fe64:	rex.WB
  41fe65:	rex.WRX push rsp
  41fe67:	pop    rdi
  41fe68:	rex.RX
  41fe69:	push   r11
  41fe6b:	push   rsp
  41fe6c:	cmp    BYTE PTR [rdi+0x4d],bl
  41fe6f:	rex.WB
  41fe70:	rex.WRX and BYTE PTR [rbp+0x49],r10b
  41fe74:	rex.WRX push rsp
  41fe76:	pop    rdi
  41fe77:	rex.RX
  41fe78:	push   r11
  41fe7a:	push   rsp
  41fe7b:	cmp    BYTE PTR [rdi+0x4d],bl
  41fe7e:	rex.WB
  41fe7f:	rex.WRX or r12b,BYTE PTR [rbx]
  41fe82:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41fe8a:	rex.WRX push rsp
  41fe8c:	pop    rdi
  41fe8d:	rex.RX
  41fe8e:	push   r11
  41fe90:	push   rsp
  41fe91:	cmp    BYTE PTR [rdi+0x4d],bl
  41fe94:	pop    r8
  41fe96:	and    BYTE PTR [rcx+0x4e],cl
  41fe99:	push   rsp
  41fe9a:	cmp    BYTE PTR [rdi+0x4d],bl
  41fe9d:	pop    r8
  41fe9f:	or     ah,BYTE PTR [rbx]
  41fea1:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41fea9:	rex.WRX push rsp
  41feab:	pop    rdi
  41feac:	rex.RX
  41fead:	push   r11
  41feaf:	push   rsp
  41feb0:	cmp    BYTE PTR [rdi+0x4d],bl
  41feb3:	rex.WB
  41feb4:	rex.WRX and BYTE PTR [rcx+0x4e],r9b
  41feb8:	push   rsp
  41feb9:	cmp    BYTE PTR [rdi+0x4d],bl
  41febc:	rex.WB
  41febd:	rex.WRX or r12b,BYTE PTR [rbx]
  41fec0:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41fec8:	rex.WB
  41fec9:	rex.WRX push rsp
  41fecb:	pop    rdi
  41fecc:	rex.RX
  41fecd:	push   r11
  41fecf:	push   rsp
  41fed0:	xor    esi,DWORD PTR [rdx]
  41fed2:	pop    rdi
  41fed3:	rex.WRB
  41fed4:	pop    r8
  41fed6:	and    BYTE PTR [rbp+0x49],dl
  41fed9:	rex.WRX push rsp
  41fedb:	xor    esi,DWORD PTR [rdx]
  41fedd:	pop    rdi
  41fede:	rex.WRB
  41fedf:	pop    r8
  41fee1:	or     ah,BYTE PTR [rbx]
  41fee3:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41feeb:	rex.WB
  41feec:	rex.WRX push rsp
  41feee:	pop    rdi
  41feef:	rex.RX
  41fef0:	push   r11
  41fef2:	push   rsp
  41fef3:	xor    esi,DWORD PTR [rdx]
  41fef5:	pop    rdi
  41fef6:	rex.WRB
  41fef7:	rex.WB
  41fef8:	rex.WRX and BYTE PTR [rbp+0x49],r10b
  41fefc:	rex.WRX push rsp
  41fefe:	xor    esi,DWORD PTR [rdx]
  41ff00:	pop    rdi
  41ff01:	rex.WRB
  41ff02:	rex.WB
  41ff03:	rex.WRX or r12b,BYTE PTR [rbx]
  41ff06:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41ff0e:	rex.WRX push rsp
  41ff10:	pop    rdi
  41ff11:	rex.RX
  41ff12:	push   r11
  41ff14:	push   rsp
  41ff15:	xor    esi,DWORD PTR [rdx]
  41ff17:	pop    rdi
  41ff18:	rex.WRB
  41ff19:	pop    r8
  41ff1b:	and    BYTE PTR [rcx+0x4e],cl
  41ff1e:	push   rsp
  41ff1f:	xor    esi,DWORD PTR [rdx]
  41ff21:	pop    rdi
  41ff22:	rex.WRB
  41ff23:	pop    r8
  41ff25:	or     ah,BYTE PTR [rbx]
  41ff27:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41ff2f:	rex.WRX push rsp
  41ff31:	pop    rdi
  41ff32:	rex.RX
  41ff33:	push   r11
  41ff35:	push   rsp
  41ff36:	xor    esi,DWORD PTR [rdx]
  41ff38:	pop    rdi
  41ff39:	rex.WRB
  41ff3a:	rex.WB
  41ff3b:	rex.WRX and BYTE PTR [rcx+0x4e],r9b
  41ff3f:	push   rsp
  41ff40:	xor    esi,DWORD PTR [rdx]
  41ff42:	pop    rdi
  41ff43:	rex.WRB
  41ff44:	rex.WB
  41ff45:	rex.WRX or r12b,BYTE PTR [rbx]
  41ff48:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41ff50:	rex.WB
  41ff51:	rex.WRX push rsp
  41ff53:	pop    rdi
  41ff54:	rex.RX
  41ff55:	push   r11
  41ff57:	push   rsp
  41ff58:	ss xor al,0x5f
  41ff5b:	rex.WRB
  41ff5c:	pop    r8
  41ff5e:	and    BYTE PTR [rbp+0x49],dl
  41ff61:	rex.WRX push rsp
  41ff63:	ss xor al,0x5f
  41ff66:	rex.WRB
  41ff67:	pop    r8
  41ff69:	or     ah,BYTE PTR [rbx]
  41ff6b:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41ff73:	rex.WB
  41ff74:	rex.WRX push rsp
  41ff76:	pop    rdi
  41ff77:	rex.RX
  41ff78:	push   r11
  41ff7a:	push   rsp
  41ff7b:	ss xor al,0x5f
  41ff7e:	rex.WRB
  41ff7f:	rex.WB
  41ff80:	rex.WRX and BYTE PTR [rbp+0x49],r10b
  41ff84:	rex.WRX push rsp
  41ff86:	ss xor al,0x5f
  41ff89:	rex.WRB
  41ff8a:	rex.WB
  41ff8b:	rex.WRX or r12b,BYTE PTR [rbx]
  41ff8e:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41ff96:	rex.WRX push rsp
  41ff98:	pop    rdi
  41ff99:	rex.RX
  41ff9a:	push   r11
  41ff9c:	push   rsp
  41ff9d:	ss xor al,0x5f
  41ffa0:	rex.WRB
  41ffa1:	pop    r8
  41ffa3:	and    BYTE PTR [rcx+0x4e],cl
  41ffa6:	push   rsp
  41ffa7:	ss xor al,0x5f
  41ffaa:	rex.WRB
  41ffab:	pop    r8
  41ffad:	or     ah,BYTE PTR [rbx]
  41ffaf:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  41ffb7:	rex.WRX push rsp
  41ffb9:	pop    rdi
  41ffba:	rex.RX
  41ffbb:	push   r11
  41ffbd:	push   rsp
  41ffbe:	ss xor al,0x5f
  41ffc1:	rex.WRB
  41ffc2:	rex.WB
  41ffc3:	rex.WRX and BYTE PTR [rcx+0x4e],r9b
  41ffc7:	push   rsp
  41ffc8:	ss xor al,0x5f
  41ffcb:	rex.WRB
  41ffcc:	rex.WB
  41ffcd:	rex.WRX or r9b,BYTE PTR [rdx]
  41ffd0:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  41ffd4:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  41ffdb:	push   rsp
  41ffdc:	pop    rdi
  41ffdd:	rex.WR
  41ffde:	rex.RB
  41ffdf:	push   r11
  41ffe1:	push   rsp
  41ffe2:	cmp    BYTE PTR [rdi+0x4d],bl
  41ffe5:	pop    r8
  41ffe7:	and    BYTE PTR [rbp+0x49],dl
  41ffea:	rex.WRX push rsp
  41ffec:	cmp    BYTE PTR [rdi+0x4d],bl
  41ffef:	pop    r8
  41fff1:	or     ah,BYTE PTR [rbx]
  41fff3:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  41fffb:	rex.WB
  41fffc:	rex.WRX push rsp
  41fffe:	pop    rdi
  41ffff:	rex.WR
  420000:	rex.RB
  420001:	push   r11
  420003:	push   rsp
  420004:	cmp    BYTE PTR [rdi+0x4d],bl
  420007:	rex.WB
  420008:	rex.WRX and BYTE PTR [rbp+0x49],r10b
  42000c:	rex.WRX push rsp
  42000e:	cmp    BYTE PTR [rdi+0x4d],bl
  420011:	rex.WB
  420012:	rex.WRX or r12b,BYTE PTR [rbx]
  420015:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  42001d:	rex.WRX push rsp
  42001f:	pop    rdi
  420020:	rex.WR
  420021:	rex.RB
  420022:	push   r11
  420024:	push   rsp
  420025:	cmp    BYTE PTR [rdi+0x4d],bl
  420028:	pop    r8
  42002a:	and    BYTE PTR [rcx+0x4e],cl
  42002d:	push   rsp
  42002e:	cmp    BYTE PTR [rdi+0x4d],bl
  420031:	pop    r8
  420033:	or     ah,BYTE PTR [rbx]
  420035:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  42003d:	rex.WRX push rsp
  42003f:	pop    rdi
  420040:	rex.WR
  420041:	rex.RB
  420042:	push   r11
  420044:	push   rsp
  420045:	cmp    BYTE PTR [rdi+0x4d],bl
  420048:	rex.WB
  420049:	rex.WRX and BYTE PTR [rcx+0x4e],r9b
  42004d:	push   rsp
  42004e:	cmp    BYTE PTR [rdi+0x4d],bl
  420051:	rex.WB
  420052:	rex.WRX or r12b,BYTE PTR [rbx]
  420055:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  42005d:	rex.WB
  42005e:	rex.WRX push rsp
  420060:	pop    rdi
  420061:	rex.WR
  420062:	rex.RB
  420063:	push   r11
  420065:	push   rsp
  420066:	xor    DWORD PTR [rsi],esi
  420068:	pop    rdi
  420069:	rex.WRB
  42006a:	pop    r8
  42006c:	and    BYTE PTR [rbp+0x49],dl
  42006f:	rex.WRX push rsp
  420071:	xor    DWORD PTR [rsi],esi
  420073:	pop    rdi
  420074:	rex.WRB
  420075:	pop    r8
  420077:	or     ah,BYTE PTR [rbx]
  420079:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  420081:	rex.WB
  420082:	rex.WRX push rsp
  420084:	pop    rdi
  420085:	rex.WR
  420086:	rex.RB
  420087:	push   r11
  420089:	push   rsp
  42008a:	xor    DWORD PTR [rsi],esi
  42008c:	pop    rdi
  42008d:	rex.WRB
  42008e:	rex.WB
  42008f:	rex.WRX and BYTE PTR [rbp+0x49],r10b
  420093:	rex.WRX push rsp
  420095:	xor    DWORD PTR [rsi],esi
  420097:	pop    rdi
  420098:	rex.WRB
  420099:	rex.WB
  42009a:	rex.WRX or r12b,BYTE PTR [rbx]
  42009d:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  4200a5:	rex.WRX push rsp
  4200a7:	pop    rdi
  4200a8:	rex.WR
  4200a9:	rex.RB
  4200aa:	push   r11
  4200ac:	push   rsp
  4200ad:	xor    DWORD PTR [rsi],esi
  4200af:	pop    rdi
  4200b0:	rex.WRB
  4200b1:	pop    r8
  4200b3:	and    BYTE PTR [rcx+0x4e],cl
  4200b6:	push   rsp
  4200b7:	xor    DWORD PTR [rsi],esi
  4200b9:	pop    rdi
  4200ba:	rex.WRB
  4200bb:	pop    r8
  4200bd:	or     ah,BYTE PTR [rbx]
  4200bf:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  4200c7:	rex.WRX push rsp
  4200c9:	pop    rdi
  4200ca:	rex.WR
  4200cb:	rex.RB
  4200cc:	push   r11
  4200ce:	push   rsp
  4200cf:	xor    DWORD PTR [rsi],esi
  4200d1:	pop    rdi
  4200d2:	rex.WRB
  4200d3:	rex.WB
  4200d4:	rex.WRX and BYTE PTR [rcx+0x4e],r9b
  4200d8:	push   rsp
  4200d9:	xor    DWORD PTR [rsi],esi
  4200db:	pop    rdi
  4200dc:	rex.WRB
  4200dd:	rex.WB
  4200de:	rex.WRX or r12b,BYTE PTR [rbx]
  4200e1:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  4200e9:	rex.WB
  4200ea:	rex.WRX push rsp
  4200ec:	pop    rdi
  4200ed:	rex.WR
  4200ee:	rex.RB
  4200ef:	push   r11
  4200f1:	push   rsp
  4200f2:	xor    esi,DWORD PTR [rdx]
  4200f4:	pop    rdi
  4200f5:	rex.WRB
  4200f6:	pop    r8
  4200f8:	and    BYTE PTR [rbp+0x49],dl
  4200fb:	rex.WRX push rsp
  4200fd:	xor    esi,DWORD PTR [rdx]
  4200ff:	pop    rdi
  420100:	rex.WRB
  420101:	pop    r8
  420103:	or     ah,BYTE PTR [rbx]
  420105:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  42010d:	rex.WB
  42010e:	rex.WRX push rsp
  420110:	pop    rdi
  420111:	rex.WR
  420112:	rex.RB
  420113:	push   r11
  420115:	push   rsp
  420116:	xor    esi,DWORD PTR [rdx]
  420118:	pop    rdi
  420119:	rex.WRB
  42011a:	rex.WB
  42011b:	rex.WRX and BYTE PTR [rbp+0x49],r10b
  42011f:	rex.WRX push rsp
  420121:	xor    esi,DWORD PTR [rdx]
  420123:	pop    rdi
  420124:	rex.WRB
  420125:	rex.WB
  420126:	rex.WRX or r12b,BYTE PTR [rbx]
  420129:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  420131:	rex.WRX push rsp
  420133:	pop    rdi
  420134:	rex.WR
  420135:	rex.RB
  420136:	push   r11
  420138:	push   rsp
  420139:	xor    esi,DWORD PTR [rdx]
  42013b:	pop    rdi
  42013c:	rex.WRB
  42013d:	pop    r8
  42013f:	and    BYTE PTR [rcx+0x4e],cl
  420142:	push   rsp
  420143:	xor    esi,DWORD PTR [rdx]
  420145:	pop    rdi
  420146:	rex.WRB
  420147:	pop    r8
  420149:	or     ah,BYTE PTR [rbx]
  42014b:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  420153:	rex.WRX push rsp
  420155:	pop    rdi
  420156:	rex.WR
  420157:	rex.RB
  420158:	push   r11
  42015a:	push   rsp
  42015b:	xor    esi,DWORD PTR [rdx]
  42015d:	pop    rdi
  42015e:	rex.WRB
  42015f:	rex.WB
  420160:	rex.WRX and BYTE PTR [rcx+0x4e],r9b
  420164:	push   rsp
  420165:	xor    esi,DWORD PTR [rdx]
  420167:	pop    rdi
  420168:	rex.WRB
  420169:	rex.WB
  42016a:	rex.WRX or r12b,BYTE PTR [rbx]
  42016d:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  420175:	rex.WB
  420176:	rex.WRX push rsp
  420178:	pop    rdi
  420179:	rex.WR
  42017a:	rex.RB
  42017b:	push   r11
  42017d:	push   rsp
  42017e:	ss xor al,0x5f
  420181:	rex.WRB
  420182:	pop    r8
  420184:	and    BYTE PTR [rbp+0x49],dl
  420187:	rex.WRX push rsp
  420189:	ss xor al,0x5f
  42018c:	rex.WRB
  42018d:	pop    r8
  42018f:	or     ah,BYTE PTR [rbx]
  420191:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  420199:	rex.WB
  42019a:	rex.WRX push rsp
  42019c:	pop    rdi
  42019d:	rex.WR
  42019e:	rex.RB
  42019f:	push   r11
  4201a1:	push   rsp
  4201a2:	ss xor al,0x5f
  4201a5:	rex.WRB
  4201a6:	rex.WB
  4201a7:	rex.WRX and BYTE PTR [rbp+0x49],r10b
  4201ab:	rex.WRX push rsp
  4201ad:	ss xor al,0x5f
  4201b0:	rex.WRB
  4201b1:	rex.WB
  4201b2:	rex.WRX or r12b,BYTE PTR [rbx]
  4201b5:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  4201bd:	rex.WRX push rsp
  4201bf:	pop    rdi
  4201c0:	rex.WR
  4201c1:	rex.RB
  4201c2:	push   r11
  4201c4:	push   rsp
  4201c5:	ss xor al,0x5f
  4201c8:	rex.WRB
  4201c9:	pop    r8
  4201cb:	and    BYTE PTR [rcx+0x4e],cl
  4201ce:	push   rsp
  4201cf:	ss xor al,0x5f
  4201d2:	rex.WRB
  4201d3:	pop    r8
  4201d5:	or     ah,BYTE PTR [rbx]
  4201d7:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  4201df:	rex.WRX push rsp
  4201e1:	pop    rdi
  4201e2:	rex.WR
  4201e3:	rex.RB
  4201e4:	push   r11
  4201e6:	push   rsp
  4201e7:	ss xor al,0x5f
  4201ea:	rex.WRB
  4201eb:	rex.WB
  4201ec:	rex.WRX and BYTE PTR [rcx+0x4e],r9b
  4201f0:	push   rsp
  4201f1:	ss xor al,0x5f
  4201f4:	rex.WRB
  4201f5:	rex.WB
  4201f6:	rex.WRX or r9b,BYTE PTR [rdx]
  4201f9:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  4201fd:	imul   ebp,DWORD PTR [rsi+0x65],0x4e495520
  420204:	push   rsp
  420205:	rex.WRB
  420206:	pop    r8
  420208:	pop    rdi
  420209:	rex.WRB
  42020a:	pop    r8
  42020c:	and    BYTE PTR [rbp+0x49],dl
  42020f:	rex.WRX push rsp
  420211:	ss xor al,0x5f
  420214:	rex.WRB
  420215:	pop    r8
  420217:	or     ah,BYTE PTR [rbx]
  420219:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5520
  420221:	rex.WB
  420222:	rex.WRX push rsp
  420224:	rex.WRB
  420225:	pop    r8
  420227:	pop    rdi
  420228:	rex.WRB
  420229:	rex.WB
  42022a:	rex.WRX and BYTE PTR [rbp+0x49],r10b
  42022e:	rex.WRX push rsp
  420230:	ss xor al,0x5f
  420233:	rex.WRB
  420234:	rex.WB
  420235:	rex.WRX or r12b,BYTE PTR [rbx]
  420238:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  420240:	rex.WRX push rsp
  420242:	rex.WRB
  420243:	pop    r8
  420245:	pop    rdi
  420246:	rex.WRB
  420247:	pop    r8
  420249:	and    BYTE PTR [rcx+0x4e],cl
  42024c:	push   rsp
  42024d:	ss xor al,0x5f
  420250:	rex.WRB
  420251:	pop    r8
  420253:	or     ah,BYTE PTR [rbx]
  420255:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4920
  42025d:	rex.WRX push rsp
  42025f:	rex.WRB
  420260:	pop    r8
  420262:	pop    rdi
  420263:	rex.WRB
  420264:	rex.WB
  420265:	rex.WRX and BYTE PTR [rcx+0x4e],r9b
  420269:	push   rsp
  42026a:	ss xor al,0x5f
  42026d:	rex.WRB
  42026e:	rex.WB
  42026f:	rex.WRX or r9b,BYTE PTR [rdx]
  420272:	and    esp,DWORD PTR [rbp+0x6e]
  420275:	imul   esp,DWORD PTR fs:[rsi+0x0],0x69647473
  42027d:	outs   dx,BYTE PTR ds:[rsi]
  42027e:	je     0x4202ae
  420280:	push   0x0
	...
  42028d:	add    BYTE PTR [rax],al
  42028f:	add    BYTE PTR [rcx+0x41],al
  420292:	rex.X pop rdi
  420294:	jbe    0x42030e
  420296:	ja     0x420307
  420298:	jb     0x420305
  42029a:	jae    0x4202fb
  42029c:	jae    0x420312
  42029e:	imul   ebp,DWORD PTR fs:[rsi+0x74],0x0
  4202a6:	add    BYTE PTR [rax],al
  4202a8:	and    ebp,DWORD PTR [rcx+0x66]
  4202ab:	outs   dx,BYTE PTR ds:[rsi]
  4202ac:	fs data16 and BYTE PTR gs:[rdi+0x52],bl
  4202b2:	rex.RB
  4202b3:	rex.RXB push r11
  4202b5:	pop    rdi
  4202b6:	rex.W or spl,BYTE PTR [rbx]
  4202b9:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  4202c1:	push   rdx
  4202c2:	rex.RB
  4202c3:	rex.RXB push r11
  4202c5:	pop    rdi
  4202c6:	rex.W or spl,BYTE PTR [rbx]
  4202c9:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  4202d0:	and    BYTE PTR [rsp+rsi*2],bh
  4202d3:	jns    0x420345
  4202d5:	gs jae 0x420307
  4202d8:	jbe    0x420352
  4202da:	push   rsp
  4202db:	jns    0x42034d
  4202dd:	gs jae 0x42032f
  4202e0:	ins    BYTE PTR es:[rdi],dx
  4202e1:	fs cs push 0x69230a3e
  4202e8:	outs   dx,BYTE PTR ds:[rsi]
  4202e9:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  4202ed:	gs pop rdi
  4202ef:	outs   dx,BYTE PTR ds:[rsi]
  4202f0:	gs js  0x420367
  4202f3:	and    BYTE PTR [rcx+riz*2],bh
  4202f6:	jb     0x42035b
  4202f8:	push   0x2f2e2e2f
  4202fd:	jb     0x420364
  4202ff:	addr32 jae 0x420330
  420302:	push   0x65230a3e
  420307:	outs   dx,BYTE PTR ds:[rsi]
  420308:	imul   esp,DWORD PTR fs:[rsi+0x0],0x73676572
  420310:	cs push 0x0
	...
  42031e:	add    BYTE PTR [rax],al
  420320:	rex.B
  420321:	rex.B
  420322:	rex.X pop rdi
  420324:	jbe    0x42039e
  420326:	ja     0x420397
  420328:	jb     0x420395
  42032a:	jae    0x42038b
  42032c:	jb     0x420393
  42032e:	addr32 jae 0x420390
  420331:	jbe    0x4203ab
  420333:	je     0x4203ae
  420335:	jo     0x42039c
  420337:	jae    0x420339
  420339:	add    BYTE PTR [rax],al
  42033b:	add    BYTE PTR [rax],al
  42033d:	add    BYTE PTR [rax],al
  42033f:	add    BYTE PTR [rbx],ah
  420341:	imul   esp,DWORD PTR [rsi+0x6e],0x20666564
  420348:	pop    rdi
  420349:	push   r11
  42034b:	push   rbx
  42034c:	rex.RB push r10
  42034e:	push   rsp
  42034f:	pop    rdi
  420350:	rex.W or spl,BYTE PTR [rbx]
  420353:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  42035b:	push   r11
  42035d:	push   rbx
  42035e:	rex.RB push r10
  420360:	push   rsp
  420361:	pop    rdi
  420362:	rex.W or cl,BYTE PTR [rdx]
  420365:	and    ebp,DWORD PTR [rcx+0x66]
  420368:	fs data16 and BYTE PTR gs:[rcx+0x73],ah
  42036e:	jae    0x4203d5
  420370:	jb     0x4203e6
  420372:	or     ah,BYTE PTR [rbx]
  420374:	jne    0x4203e4
  420376:	fs data16 and BYTE PTR gs:[rcx+0x73],ah
  42037c:	jae    0x4203e3
  42037e:	jb     0x4203f4
  420380:	or     ah,BYTE PTR [rbx]
  420382:	outs   dx,BYTE PTR gs:[rsi]
  420384:	imul   esp,DWORD PTR fs:[rsi+0xa],0x6669230a
  42038c:	and    BYTE PTR [rbp+riz*2+0x66],ah
  420390:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2864
  420397:	push   rbx
  420398:	push   rsp
  420399:	rex.R
  42039a:	rex.XB pop r15
  42039c:	pop    rdi
  42039d:	sub    DWORD PTR [rax],esp
  42039f:	jl     0x42041d
  4203a1:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4203a5:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2864
  4203ac:	movsxd esi,DWORD PTR [rax+0x6c]
  4203af:	jne    0x420424
  4203b1:	jo     0x42041f
  4203b3:	jne    0x420428
  4203b5:	sub    DWORD PTR [rdx],ecx
  4203b7:	gs js  0x42042e
  4203ba:	gs jb  0x42042b
  4203bd:	and    BYTE PTR [rsi+0x6f],dh
  4203c0:	imul   esp,DWORD PTR [rax+riz*1+0x5f],0x7373615f
  4203c8:	gs jb  0x42043f
  4203cb:	and    BYTE PTR [rax],ch
  4203cd:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4203d0:	jae    0x420446
  4203d2:	and    BYTE PTR [rbx+0x68],ah
  4203d5:	(bad)  
  4203d6:	jb     0x420402
  4203d8:	sub    DWORD PTR [rbx],edi
  4203da:	or     ah,BYTE PTR [rbx]
  4203dc:	gs ins BYTE PTR es:[rdi],dx
  4203de:	jae    0x420445
  4203e0:	or     ah,BYTE PTR [rbp+0x78]
  4203e3:	je     0x42044a
  4203e5:	jb     0x420455
  4203e7:	and    BYTE PTR [rsi+0x6f],dh
  4203ea:	imul   esp,DWORD PTR [rax+riz*1+0x5f],0x7373615f
  4203f2:	gs jb  0x420469
  4203f5:	and    BYTE PTR [rax],ch
  4203f7:	sub    DWORD PTR [rbx],edi
  4203f9:	or     ah,BYTE PTR [rbx]
  4203fb:	outs   dx,BYTE PTR gs:[rsi]
  4203fd:	imul   esp,DWORD PTR fs:[rsi+0xa],0x6669230a
  420405:	fs data16 and BYTE PTR gs:[rsi+0x44],cl
  42040b:	rex.RB
  42040c:	rex.X push rbp
  42040e:	rex.RXB or r12b,BYTE PTR [r11]
  420411:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6120
  420419:	jae    0x42048e
  42041b:	gs jb  0x420492
  42041e:	sub    BYTE PTR [rcx+0x67],ch
  420421:	outs   dx,BYTE PTR ds:[rsi]
  420422:	sub    DWORD PTR [rax],esp
  420424:	sub    BYTE PTR [rax],ch
  420426:	jbe    0x420497
  420428:	imul   esp,DWORD PTR [rcx+rbp*1+0x30],0x65230a29
  420430:	ins    BYTE PTR es:[rdi],dx
  420431:	jae    0x420498
  420433:	or     cl,BYTE PTR [rdx]
  420435:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  420439:	imul   ebp,DWORD PTR [rsi+0x65],0x53534120
  420440:	rex.RB push r10
  420442:	push   rsp
  420443:	pop    rdi
  420444:	push   rbx
  420445:	push   rsp
  420446:	push   rdx
  420447:	rex.WB
  420448:	rex.WRX
  420449:	rex.RXB
  42044a:	rex.WB
  42044b:	rex.RX pop rcx
  42044d:	sub    BYTE PTR [rbx+0x74],dh
  420450:	jb     0x42047b
  420452:	and    BYTE PTR [rcx+0x53],al
  420455:	push   rbx
  420456:	rex.RB push r10
  420458:	push   rsp
  420459:	pop    rdi
  42045a:	push   rbx
  42045b:	push   rsp
  42045c:	push   rdx
  42045d:	rex.WB
  42045e:	rex.WRX
  42045f:	rex.RXB
  420460:	rex.WB
  420461:	rex.RX pop rcx
  420463:	pop    rdi
  420464:	rex.W
  420465:	rex.RB
  420466:	rex.WR push rax
  420468:	rex.RB push r10
  42046a:	sub    BYTE PTR [rbx+0x74],dh
  42046d:	jb     0x420498
  42046f:	or     ah,BYTE PTR [rbx]
  420471:	fs imul bp,WORD PTR gs:[rsi+0x65],0x4120
  420479:	push   rbx
  42047a:	push   rbx
  42047b:	rex.RB push r10
  42047d:	push   rsp
  42047e:	pop    rdi
  42047f:	push   rbx
  420480:	push   rsp
  420481:	push   rdx
  420482:	rex.WB
  420483:	rex.WRX
  420484:	rex.RXB
  420485:	rex.WB
  420486:	rex.RX pop rcx
  420488:	pop    rdi
  420489:	rex.W
  42048a:	rex.RB
  42048b:	rex.WR push rax
  42048d:	rex.RB push r10
  42048f:	sub    BYTE PTR [rbx+0x74],dh
  420492:	jb     0x4204bd
  420494:	and    BYTE PTR [rbx],ah
  420496:	jae    0x42050c
  420498:	jb     0x4204a4
  42049a:	or     ah,BYTE PTR [rbx]
  42049c:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6120
  4204a4:	jae    0x420519
  4204a6:	gs jb  0x42051d
  4204a9:	sub    BYTE PTR [rbp+riz*2+0x73],dh
  4204ad:	je     0x4204d8
  4204af:	and    BYTE PTR [rax],ch
  4204b1:	sub    BYTE PTR [rsi+0x6f],dh
  4204b4:	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x20200a5c
  4204bc:	and    BYTE PTR [rax],ah
  4204be:	and    BYTE PTR [rax],ah
  4204c0:	and    BYTE PTR [rax],ah
  4204c2:	sub    BYTE PTR [rax],ch
  4204c4:	je     0x42052b
  4204c6:	jae    0x42053c
  4204c8:	sub    DWORD PTR [rax],esp
  4204ca:	(bad)  
  4204cb:	and    BYTE PTR [rax],ch
  4204cd:	sub    BYTE PTR [rsi+0x6f],dh
  4204d0:	imul   esp,DWORD PTR [rcx+rbp*1+0x30],0x203a2029
  4204d8:	pop    rsp
  4204d9:	or     ah,BYTE PTR [rax]
  4204db:	and    BYTE PTR [rax],ah
  4204dd:	and    BYTE PTR [rax],ah
  4204df:	and    BYTE PTR [rax],ah
  4204e1:	and    BYTE PTR [rdi+0x5f],bl
  4204e4:	(bad)  
  4204e5:	jae    0x42055a
  4204e7:	gs jb  0x42055e
  4204ea:	sub    BYTE PTR [rdx],ah
  4204ec:	rex.B jae 0x420562
  4204ef:	gs jb  0x420566
  4204f2:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  4204f9:	ins    BYTE PTR es:[rdi],dx
  4204fa:	gs cmp ah,BYTE PTR fs:[rax]
  4204fe:	and    ah,BYTE PTR [rax]
  420500:	push   r11
  420502:	push   rbx
  420503:	rex.RB push r10
  420505:	push   rsp
  420506:	pop    rdi
  420507:	push   rbx
  420508:	push   rsp
  420509:	push   rdx
  42050a:	rex.WB
  42050b:	rex.WRX
  42050c:	rex.RXB
  42050d:	rex.WB
  42050e:	rex.RX pop rcx
  420510:	sub    BYTE PTR [rbp+riz*2+0x73],dh
  420514:	je     0x42053f
  420516:	and    BYTE PTR [rdx],ah
  420518:	sub    al,0x20
  42051a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2022
  420521:	pop    rsp
  420522:	or     ah,BYTE PTR [rax]
  420524:	and    BYTE PTR [rax],ah
  420526:	and    BYTE PTR [rax],ah
  420528:	and    BYTE PTR [rax],ah
  42052a:	and    BYTE PTR [rdi+0x5f],bl
  42052d:	rex.RX
  42052e:	rex.WB
  42052f:	rex.WR
  420530:	rex.RB pop r15
  420532:	pop    rdi
  420533:	and    BYTE PTR [rdx],ah
  420535:	sub    al,0x20
  420537:	ins    BYTE PTR es:[rdi],dx
  420538:	imul   ebp,DWORD PTR [rsi+0x65],0x41202220
  42053f:	push   rbx
  420540:	push   rbx
  420541:	rex.RB push r10
  420543:	push   rsp
  420544:	pop    rdi
  420545:	push   rbx
  420546:	push   rsp
  420547:	push   rdx
  420548:	rex.WB
  420549:	rex.WRX
  42054a:	rex.RXB
  42054b:	rex.WB
  42054c:	rex.RX pop rcx
  42054e:	sub    BYTE PTR [rdi+0x5f],bl
  420551:	rex.WR
  420552:	rex.WB
  420553:	rex.WRX
  420554:	rex.RB pop r15
  420556:	pop    rdi
  420557:	sub    DWORD PTR [rax],esp
  420559:	and    bl,BYTE PTR [rsi+rbp*2+0x22]
  42055d:	sub    DWORD PTR [rcx],ebp
  42055f:	sub    DWORD PTR [rdx],ecx
  420561:	or     ah,BYTE PTR [rbx]
  420563:	outs   dx,BYTE PTR gs:[rsi]
  420565:	imul   esp,DWORD PTR fs:[rsi+0xa],0x6e65230a
  42056d:	imul   esp,DWORD PTR fs:[rsi+0x0],0x65737361
  420575:	jb     0x4205eb
  420577:	cs push 0x0
  42057d:	add    BYTE PTR [rax],al
  42057f:	add    BYTE PTR [rcx+0x41],al
  420582:	rex.X pop rdi
  420584:	jbe    0x4205fe
  420586:	ja     0x4205f7
  420588:	jb     0x4205f5
  42058a:	jae    0x4205eb
  42058c:	(bad)  
  42058d:	jae    0x420602
  42058f:	gs jb  0x420606
  420592:	add    BYTE PTR [rax],al
  420594:	add    BYTE PTR [rax],al
  420596:	add    BYTE PTR [rax],al
  420598:	(bad)  
  420599:	sub    ah,BYTE PTR [rax]
  42059b:	push   rsp
  42059c:	push   0x66207369
  4205a1:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x20736177
  4205a9:	outs   dx,BYTE PTR gs:[esi]
  4205ac:	gs jb  0x420610
  4205af:	je     0x420616
  4205b1:	and    BYTE PTR fs:[rdx+0x79],ah
  4205b5:	and    BYTE PTR [rsi+0x69],ah
  4205b8:	js     0x420623
  4205ba:	outs   dx,BYTE PTR ds:[rsi]
  4205bb:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  4205bf:	gs jae 0x4205e2
  4205c2:	sub    ch,BYTE PTR [rdi]
  4205c4:	or     ah,BYTE PTR [rbx]
  4205c6:	imul   esp,DWORD PTR [rsi+0x6e],0x20666564
  4205cd:	pop    rdi
  4205ce:	pop    rdi
  4205cf:	ins    DWORD PTR es:[rdi],dx
  4205d0:	gs ins DWORD PTR es:[rdi],dx
  4205d2:	outs   dx,DWORD PTR ds:[rsi]
  4205d3:	jb     0x42064e
  4205d5:	pop    rdi
  4205d6:	push   0x200a5f5f
  4205db:	and    BYTE PTR [rbx],ah
  4205dd:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  4205e5:	pop    rdi
  4205e6:	ins    DWORD PTR es:[rdi],dx
  4205e7:	gs ins DWORD PTR es:[rdi],dx
  4205e9:	outs   dx,DWORD PTR ds:[rsi]
  4205ea:	jb     0x420665
  4205ec:	pop    rdi
  4205ed:	push   0xa0a5f5f
  4205f2:	and    BYTE PTR [rax],ah
  4205f4:	and    ebp,DWORD PTR [rcx+0x66]
  4205f7:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  4205fd:	push   rbx
  4205fe:	push   rsp
  4205ff:	rex.R
  420600:	rex.XB pop r15
  420602:	pop    rdi
  420603:	or     ah,BYTE PTR [rax]
  420605:	and    BYTE PTR [rax],ah
  420607:	and    BYTE PTR [rbp+0x78],ah
  42060a:	je     0x420671
  42060c:	jb     0x42067c
  42060e:	and    BYTE PTR [rsi+0x6f],dh
  420611:	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x636d656d
  420619:	movsxd esi,DWORD PTR [rax+0x79]
  42061c:	sub    BYTE PTR [rcx],ch
  42061e:	cmp    ecx,DWORD PTR [rdx]
  420620:	and    BYTE PTR [rax],ah
  420622:	and    BYTE PTR [rax],ah
  420624:	gs js  0x42069b
  420627:	gs jb  0x420698
  42062a:	and    BYTE PTR [rsi+0x6f],dh
  42062d:	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x636d656d
  420635:	push   0x3b292872
  42063a:	or     ah,BYTE PTR [rax]
  42063c:	and    BYTE PTR [rax],ah
  42063e:	and    BYTE PTR [rbp+0x78],ah
  420641:	je     0x4206a8
  420643:	jb     0x4206b3
  420645:	and    BYTE PTR [rsi+0x6f],dh
  420648:	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x636d656d
  420650:	jo     0x4206cb
  420652:	sub    BYTE PTR [rcx],ch
  420654:	cmp    ecx,DWORD PTR [rdx]
  420656:	and    BYTE PTR [rax],ah
  420658:	and    BYTE PTR [rax],ah
  42065a:	gs js  0x4206d1
  42065d:	gs jb  0x4206ce
  420660:	and    BYTE PTR [rsi+0x6f],dh
  420663:	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x736d656d
  42066b:	gs je  0x420696
  42066e:	sub    DWORD PTR [rbx],edi
  420670:	or     ah,BYTE PTR [rax]
  420672:	and    BYTE PTR [rbx],ah
  420674:	gs ins BYTE PTR es:[rdi],dx
  420676:	jae    0x4206dd
  420678:	or     ah,BYTE PTR [rax]
  42067a:	and    BYTE PTR [rax],ah
  42067c:	and    BYTE PTR [rbp+0x78],ah
  42067f:	je     0x4206e6
  420681:	jb     0x4206f1
  420683:	and    BYTE PTR [rbx+0x68],ah
  420686:	(bad)  
  420687:	jb     0x4206a9
  420689:	sub    ch,BYTE PTR [rbp+0x65]
  42068c:	ins    DWORD PTR es:[rdi],dx
  42068d:	movsxd esp,DWORD PTR [rbx+0x70]
  420690:	jns    0x4206ba
  420692:	sub    DWORD PTR [rbx],edi
  420694:	or     ah,BYTE PTR [rax]
  420696:	and    BYTE PTR [rax],ah
  420698:	and    BYTE PTR [rbp+0x78],ah
  42069b:	je     0x420702
  42069d:	jb     0x42070d
  42069f:	and    BYTE PTR [rbx+0x68],ah
  4206a2:	(bad)  
  4206a3:	jb     0x4206c5
  4206a5:	sub    ch,BYTE PTR [rbp+0x65]
  4206a8:	ins    DWORD PTR es:[rdi],dx
  4206a9:	movsxd ebp,DWORD PTR [rax+0x72]
  4206ac:	sub    BYTE PTR [rcx],ch
  4206ae:	cmp    ecx,DWORD PTR [rdx]
  4206b0:	and    BYTE PTR [rax],ah
  4206b2:	and    BYTE PTR [rax],ah
  4206b4:	gs js  0x42072b
  4206b7:	gs jb  0x420728
  4206ba:	and    BYTE PTR [rbx+0x68],ah
  4206bd:	(bad)  
  4206be:	jb     0x4206e0
  4206c0:	sub    ch,BYTE PTR [rbp+0x65]
  4206c3:	ins    DWORD PTR es:[rdi],dx
  4206c4:	movsxd esi,DWORD PTR [rax+0x79]
  4206c7:	sub    BYTE PTR [rcx],ch
  4206c9:	cmp    ecx,DWORD PTR [rdx]
  4206cb:	and    BYTE PTR [rax],ah
  4206cd:	and    BYTE PTR [rax],ah
  4206cf:	gs js  0x420746
  4206d2:	gs jb  0x420743
  4206d5:	and    BYTE PTR [rbx+0x68],ah
  4206d8:	(bad)  
  4206d9:	jb     0x4206fb
  4206db:	sub    ch,BYTE PTR [rbp+0x65]
  4206de:	ins    DWORD PTR es:[rdi],dx
  4206df:	jae    0x420746
  4206e1:	je     0x42070b
  4206e3:	sub    DWORD PTR [rbx],edi
  4206e5:	or     ah,BYTE PTR [rax]
  4206e7:	and    BYTE PTR [rbx],ah
  4206e9:	outs   dx,BYTE PTR gs:[rsi]
  4206eb:	imul   esp,DWORD PTR fs:[rsi+0x20],0x5f202a2f
  4206f3:	pop    rdi
  4206f4:	push   rbx
  4206f5:	push   rsp
  4206f6:	rex.R
  4206f7:	rex.XB pop r15
  4206f9:	pop    rdi
  4206fa:	and    BYTE PTR [rdx],ch
  4206fc:	(bad)  
  4206fd:	or     cl,BYTE PTR [rdx]
  4206ff:	and    BYTE PTR [rax],ah
  420701:	gs js  0x420778
  420704:	gs jb  0x420775
  420707:	and    BYTE PTR [rcx+0x6e],ch
  42070a:	je     0x42072c
  42070c:	ins    DWORD PTR es:[rdi],dx
  42070d:	gs ins DWORD PTR es:[rdi],dx
  42070f:	movsxd ebp,DWORD PTR [rbp+0x70]
  420712:	sub    BYTE PTR [rcx],ch
  420714:	cmp    ecx,DWORD PTR [rdx]
  420716:	or     ah,BYTE PTR [rbx]
  420718:	outs   dx,BYTE PTR gs:[rsi]
  42071a:	imul   esp,DWORD PTR fs:[rsi+0x20],0x5f202a2f
  420722:	pop    rdi
  420723:	ins    DWORD PTR es:[rdi],dx
  420724:	gs ins DWORD PTR es:[rdi],dx
  420726:	outs   dx,DWORD PTR ds:[rsi]
  420727:	jb     0x4207a2
  420729:	pop    rdi
  42072a:	push   0x2a205f5f
  42072f:	(bad)  
	...
  420740:	(bad)  
  420741:	pop    rsp
  420742:	sub    cl,BYTE PTR [rcx]
  420744:	rex pop rsp
  420746:	sub    BYTE PTR [rbx],ah
  420748:	pop    rsp
  420749:	sub    DWORD PTR [rax],ebp
  42074b:	push   0x2f646165
  420750:	ins    DWORD PTR es:[rdi],dx
  420751:	gs ins DWORD PTR es:[rdi],dx
  420753:	outs   dx,DWORD PTR ds:[rsi]
  420754:	jb     0x4207cf
  420756:	cs push 0x2e303509
  42075c:	xor    DWORD PTR [rcx],ecx
  42075e:	and    BYTE PTR [rbp+rbp*2+0x65],bh
  420762:	ins    DWORD PTR es:[rdi],dx
  420763:	outs   dx,DWORD PTR ds:[rsi]
  420764:	jb     0x4207df
  420766:	pop    rsp
  420767:	cs push 0x2e5c3120
  42076d:	pop    rbx
  42076e:	xor    ch,BYTE PTR [rip+0x38205d34]        # 0x386264a8
  420774:	cs (bad) 
  420776:	cs cs (bad) 
  420779:	cs and BYTE PTR cs:[rbx+0x4d],dl
  42077e:	cmp    rsp,QWORD PTR [r8]
  420781:	data16 jb 0x4207f3
  420784:	ins    DWORD PTR es:[rdi],dx
  420785:	and    BYTE PTR [rbx+0x35],dl
  420788:	push   rdx
  420789:	xor    ah,BYTE PTR [rax]
  42078b:	xor    DWORD PTR [rsi+rbp*1+0x32],ebx
  42078f:	or     DWORD PTR [rcx],ebp
  420791:	pop    rsp
  420792:	sub    ch,BYTE PTR [rdi]
  420794:	add    BYTE PTR [rbp+0x65],ch
  420797:	ins    DWORD PTR es:[rdi],dx
  420798:	outs   dx,DWORD PTR ds:[rsi]
  420799:	jb     0x420814
  42079b:	cs push 0x41410000
  4207a1:	rex.X pop rdi
  4207a3:	jae    0x42081a
  4207a5:	outs   dx,BYTE PTR ds:[rsi]
  4207a6:	pop    rdi
  4207a7:	ins    DWORD PTR es:[rdi],dx
  4207a8:	gs ins DWORD PTR es:[rdi],dx
  4207aa:	movsxd esi,DWORD PTR [rax+0x79]
  4207ad:	add    BYTE PTR [rax],al
  4207af:	add    BYTE PTR [rbx],ah
  4207b1:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  4207b8:	pop    rdi
  4207b9:	push   rbx
  4207ba:	push   rsp
  4207bb:	rex.R
  4207bc:	rex.XB pop r15
  4207be:	pop    rdi
  4207bf:	or     ah,BYTE PTR [rax]
  4207c1:	and    BYTE PTR [rbx],ah
  4207c3:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  4207ca:	and    BYTE PTR [rbx+rsi*2],bh
  4207cd:	je     0x420833
  4207cf:	(bad)  
  4207d0:	jb     0x420839
  4207d2:	cs push 0x65230a3e
  4207d8:	ins    BYTE PTR es:[rdi],dx
  4207d9:	jae    0x420840
  4207db:	or     ah,BYTE PTR [rax]
  4207dd:	and    BYTE PTR [rbx],ah
  4207df:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  4207e6:	and    BYTE PTR [rsi+rsi*2],bh
  4207e9:	(bad)  
  4207ea:	jb     0x42084d
  4207ec:	jb     0x420855
  4207ee:	jae    0x42081e
  4207f0:	push   0x65230a3e
  4207f5:	outs   dx,BYTE PTR ds:[rsi]
  4207f6:	imul   esp,DWORD PTR fs:[rsi+0x0],0x2f737973
  4207fe:	jbe    0x420861
  420800:	jb     0x420863
  420802:	jb     0x42086b
  420804:	jae    0x420834
  420806:	push   0x0
  42080b:	add    BYTE PTR [rax],al
  42080d:	add    BYTE PTR [rax],al
  42080f:	add    BYTE PTR [rcx+0x41],al
  420812:	rex.X pop rdi
  420814:	jae    0x420885
  420816:	ins    BYTE PTR es:[rdi],dx
  420817:	(bad)  
  420818:	jb     0x420883
  42081a:	jae    0x42087b
  42081c:	jae    0x420897
  42081e:	jae    0x42087f
  420820:	jbe    0x420883
  420822:	jb     0x420885
  420824:	jb     0x42088d
  420826:	jae    0x420887
  420828:	push   0x0
  42082d:	add    BYTE PTR [rax],al
  42082f:	add    BYTE PTR [rdi],ch
  420831:	sub    ah,BYTE PTR [rax]
  420833:	push   rsp
  420834:	push   0x66207369
  420839:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x65786966
  420841:	jae    0x420863
  420843:	(bad)  
  420844:	and    BYTE PTR [rdx+0x75],ah
  420847:	and    BYTE PTR [ecx+0x6e],ch
  42084b:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42084f:	and    BYTE PTR [rdi+0x5f],bl
  420852:	rex.RX
  420853:	rex.R pop rdi
  420855:	pop    rdx
  420856:	rex.RB push r10
  420858:	rex.WRXB and BYTE PTR [r13+0x61],r13b
  42085c:	movsxd esi,DWORD PTR [rdx+0x6f]
  42085f:	and    BYTE PTR [rax+0x72],dh
  420862:	gs jae 0x4208ca
  420865:	outs   dx,BYTE PTR ds:[rsi]
  420866:	je     0x420888
  420868:	imul   ebp,DWORD PTR [rsi+0x20],0x62696c67
  42086f:	movsxd esp,DWORD PTR [rax]
  420871:	xor    ch,BYTE PTR [rsi]
  420873:	xor    BYTE PTR [rsi],ch
  420875:	js     0x4208a5
  420877:	and    BYTE PTR [rdx],ch
  420879:	(bad)  
  42087a:	or     ah,BYTE PTR [rbx]
  42087c:	imul   esp,DWORD PTR [rsi+0x6e],0x20666564
  420883:	pop    rdi
  420884:	push   rbx
  420885:	rex.RB
  420886:	rex.WR
  420887:	rex.RB
  420888:	rex.XB push r12
  42088a:	rex.X
  42088b:	rex.WB push r12
  42088d:	push   rbx
  42088e:	pop    rdi
  42088f:	rex.W pop rdi
  420891:	push   rdi
  420892:	push   rdx
  420893:	push   r8
  420895:	push   rax
  420896:	rex.RB push r10
  420898:	or     ah,BYTE PTR [rax]
  42089a:	and    BYTE PTR [rbx],ah
  42089c:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  4208a3:	and    BYTE PTR [rsi+riz*2],bh
  4208a6:	gs (bad) 
  4208a8:	je     0x42091f
  4208aa:	jb     0x420911
  4208ac:	jae    0x4208dc
  4208ae:	push   0x20200a3e
  4208b3:	and    ebp,DWORD PTR [rcx+0x6e]
  4208b6:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  4208ba:	gs pop rdi
  4208bc:	outs   dx,BYTE PTR ds:[rsi]
  4208bd:	gs js  0x420934
  4208c0:	and    BYTE PTR [rbx+rsi*2],bh
  4208c3:	gs ins BYTE PTR es:[rdi],dx
  4208c5:	movsxd esi,DWORD PTR gs:[rdx+riz*2+0x69]
  4208ca:	je     0x42093f
  4208cc:	cs push 0x200a0a3e
  4208d2:	and    BYTE PTR [rbx],ah
  4208d4:	imul   esp,DWORD PTR [rsi+0x20],0x69666564
  4208db:	outs   dx,BYTE PTR ds:[rsi]
  4208dc:	gs sub BYTE PTR fs:[rdi+0x5f],bl
  4208e1:	rex.RX
  4208e2:	rex.R pop rdi
  4208e4:	pop    rdx
  4208e5:	rex.RB push r10
  4208e7:	rex.WRXB sub QWORD PTR [r8],r12
  4208ea:	es and BYTE PTR es:[rbp+riz*2+0x66],ah
  4208f0:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2864
  4208f7:	rex.RXB
  4208f8:	rex.WR
  4208f9:	rex.WB
  4208fa:	rex.X
  4208fb:	rex.XB pop r15
  4208fd:	pop    rdi
  4208fe:	sub    DWORD PTR [rax],esp
  420900:	pop    rsp
  420901:	pop    rsp
  420902:	or     ah,BYTE PTR [rax]
  420904:	and    BYTE PTR [rsi],ah
  420906:	and    BYTE PTR es:[rbp+riz*2+0x66],ah
  42090b:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2864
  420912:	rex.RXB
  420913:	rex.WR
  420914:	rex.WB
  420915:	rex.X
  420916:	rex.XB pop r15
  420918:	rex.WRB
  420919:	rex.WB
  42091a:	rex.WRX
  42091b:	rex.WRXB push r10
  42091d:	pop    rdi
  42091e:	pop    rdi
  42091f:	sub    DWORD PTR [rax],esp
  420921:	es and BYTE PTR es:[rdi+0x5f],bl
  420926:	rex.RXB
  420927:	rex.WR
  420928:	rex.WB
  420929:	rex.X
  42092a:	rex.XB pop r15
  42092c:	pop    rdi
  42092d:	and    BYTE PTR [rip+0x2032203d],bh        # 0x20742970
  420933:	pop    rsp
  420934:	pop    rsp
  420935:	or     ah,BYTE PTR [rax]
  420937:	and    BYTE PTR [rsi],ah
  420939:	and    BYTE PTR es:[rdi+0x5f],bl
  42093d:	rex.RXB
  42093e:	rex.WR
  42093f:	rex.WB
  420940:	rex.X
  420941:	rex.XB pop r15
  420943:	rex.WRB
  420944:	rex.WB
  420945:	rex.WRX
  420946:	rex.WRXB push r10
  420948:	pop    rdi
  420949:	pop    rdi
  42094a:	and    BYTE PTR [rip+0xa30203d],bh        # 0xa72298d
  420950:	and    BYTE PTR [rax],ah
  420952:	and    BYTE PTR [rax],ah
  420954:	and    BYTE PTR [rbx],ah
  420956:	jne    0x4209c6
  420958:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  42095e:	rex.RX
  42095f:	rex.R pop rdi
  420961:	pop    rdx
  420962:	rex.RB push r10
  420964:	rex.WRXB or r12b,BYTE PTR [r8]
  420967:	and    BYTE PTR [rax],ah
  420969:	and    BYTE PTR [rax],ah
  42096b:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  42096f:	imul   ebp,DWORD PTR [rsi+0x65],0x465f5f20
  420976:	rex.R pop rdi
  420978:	pop    rdx
  420979:	rex.RB push r10
  42097b:	rex.WRXB sub BYTE PTR [r14+0x64],r12b
  42097f:	jae    0x4209e6
  420981:	je     0x4209f3
  420983:	sub    DWORD PTR [rax],esp
  420985:	pop    rsp
  420986:	pop    rsp
  420987:	or     ah,BYTE PTR [rax]
  420989:	and    BYTE PTR [rax],ah
  42098b:	and    BYTE PTR [rax],ah
  42098d:	outs   dx,DWORD PTR fs:[rsi]
  42098f:	and    BYTE PTR [rbx+0x20],bh
  420992:	pop    rsp
  420993:	pop    rsp
  420994:	or     ah,BYTE PTR [rax]
  420996:	and    BYTE PTR [rax],ah
  420998:	and    BYTE PTR [rax],ah
  42099a:	and    BYTE PTR [rax],ah
  42099c:	and    BYTE PTR [rcx+0x6e],ch
  42099f:	je     0x4209c1
  4209a1:	pop    rdi
  4209a2:	pop    rdi
  4209a3:	xor    BYTE PTR fs:[rax+riz*1],ch
  4209a7:	pop    rdi
  4209a8:	pop    rdi
  4209a9:	xor    DWORD PTR fs:[rbx],edi
  4209ac:	and    BYTE PTR [rsp+rbx*2+0xa],bl
  4209b0:	and    BYTE PTR [rax],ah
  4209b2:	and    BYTE PTR [rax],ah
  4209b4:	and    BYTE PTR [rax],ah
  4209b6:	pop    rdi
  4209b7:	pop    rdi
  4209b8:	(bad)  
  4209b9:	jae    0x420a28
  4209bb:	pop    rdi
  4209bc:	pop    rdi
  4209bd:	and    BYTE PTR [rdi+0x5f],bl
  4209c0:	jbe    0x420a31
  4209c2:	ins    BYTE PTR es:[rdi],dx
  4209c3:	(bad)  
  4209c4:	je     0x420a2f
  4209c6:	ins    BYTE PTR es:[rdi],dx
  4209c7:	gs pop rdi
  4209c9:	pop    rdi
  4209ca:	and    BYTE PTR [rax],ch
  4209cc:	and    ah,BYTE PTR [rbx+0x6c]
  4209cf:	cmp    esp,DWORD PTR fs:[rax]
  4209d2:	jb     0x420a39
  4209d4:	jo     0x420a11
  4209d6:	and    BYTE PTR [rbx+0x74],dh
  4209d9:	outs   dx,DWORD PTR ds:[rsi]
  4209da:	jae    0x420a48
  4209dc:	and    ah,BYTE PTR [rax]
  4209de:	pop    rsp
  4209df:	pop    rsp
  4209e0:	or     ah,BYTE PTR [rax]
  4209e2:	and    BYTE PTR [rax],ah
  4209e4:	and    BYTE PTR [rax],ah
  4209e6:	and    BYTE PTR [rax],ah
  4209e8:	and    BYTE PTR [rax],ah
  4209ea:	and    BYTE PTR [rax],ah
  4209ec:	and    BYTE PTR [rax],ah
  4209ee:	and    BYTE PTR [rax],ah
  4209f0:	and    BYTE PTR [rax],ah
  4209f2:	and    BYTE PTR [rax],ah
  4209f4:	and    BYTE PTR [rax],ah
  4209f6:	and    BYTE PTR [rax],ah
  4209f8:	and    BYTE PTR [rdx],bh
  4209fa:	and    BYTE PTR [rdx],ah
  4209fc:	cmp    eax,0x20226326
  420a01:	sub    BYTE PTR [rdi+0x5f],bl
  420a04:	xor    BYTE PTR fs:[rcx],ch
  420a07:	sub    al,0x20
  420a09:	and    bh,BYTE PTR [rip+0x20224426]        # 0x20644e35
  420a0f:	sub    BYTE PTR [rdi+0x5f],bl
  420a12:	xor    DWORD PTR fs:[rcx],ebp
  420a15:	and    BYTE PTR [rsp+rbx*2+0xa],bl
  420a19:	and    BYTE PTR [rax],ah
  420a1b:	and    BYTE PTR [rax],ah
  420a1d:	and    BYTE PTR [rax],ah
  420a1f:	and    BYTE PTR [rax],ah
  420a21:	and    BYTE PTR [rax],ah
  420a23:	and    BYTE PTR [rax],ah
  420a25:	and    BYTE PTR [rax],ah
  420a27:	and    BYTE PTR [rax],ah
  420a29:	and    BYTE PTR [rax],ah
  420a2b:	and    BYTE PTR [rax],ah
  420a2d:	and    BYTE PTR [rax],ah
  420a2f:	and    BYTE PTR [rax],ah
  420a31:	cmp    ah,BYTE PTR [rax]
  420a33:	and    ah,BYTE PTR [rcx+0x22]
  420a36:	and    BYTE PTR [rax],ch
  420a38:	xor    BYTE PTR [rcx],ch
  420a3a:	sub    al,0x20
  420a3c:	and    dh,BYTE PTR [rax]
  420a3e:	and    ah,BYTE PTR [rax]
  420a40:	sub    BYTE PTR [rbx+0x69],dh
  420a43:	jp     0x420aaa
  420a45:	outs   dx,DWORD PTR ds:[rsi]
  420a46:	data16 and BYTE PTR [rax],ch
  420a49:	pop    rdi
  420a4a:	pop    rdi
  420a4b:	fs pop di
  420a4e:	jae    0x420ab5
  420a50:	je     0x420a7b
  420a52:	and    BYTE PTR [rsp+rbx*2+0xa],bl
  420a56:	and    BYTE PTR [rax],ah
  420a58:	and    BYTE PTR [rax],ah
  420a5a:	and    BYTE PTR [rax],ah
  420a5c:	and    BYTE PTR [rax],ah
  420a5e:	and    BYTE PTR [rax],ah
  420a60:	and    BYTE PTR [rax],ah
  420a62:	and    BYTE PTR [rax],ah
  420a64:	and    BYTE PTR [rax],ah
  420a66:	and    BYTE PTR [rax],ah
  420a68:	and    BYTE PTR [rax],ah
  420a6a:	and    BYTE PTR [rax],ah
  420a6c:	and    BYTE PTR [rax],ah
  420a6e:	and    BYTE PTR [rax],ah
  420a70:	and    BYTE PTR [rax],ah
  420a72:	and    BYTE PTR [rax],ah
  420a74:	and    BYTE PTR [rax],ah
  420a76:	and    BYTE PTR [rax],ah
  420a78:	and    BYTE PTR [rax],ah
  420a7a:	and    BYTE PTR [rax],ah
  420a7c:	and    BYTE PTR [rax],ah
  420a7e:	(bad)  
  420a7f:	and    BYTE PTR [rbx+0x69],dh
  420a82:	jp     0x420ae9
  420a84:	outs   dx,DWORD PTR ds:[rsi]
  420a85:	data16 and BYTE PTR [rax],ch
  420a88:	pop    rdi
  420a89:	pop    rdi
  420a8a:	fs pop di
  420a8d:	ins    DWORD PTR es:[rdi],dx
  420a8e:	(bad)  
  420a8f:	jae    0x420afc
  420a91:	sub    DWORD PTR [rcx],ebp
  420a93:	sub    al,0x20
  420a95:	pop    rsp
  420a96:	pop    rsp
  420a97:	or     ah,BYTE PTR [rax]
  420a99:	and    BYTE PTR [rax],ah
  420a9b:	and    BYTE PTR [rax],ah
  420a9d:	and    BYTE PTR [rax],ah
  420a9f:	and    BYTE PTR [rax],ah
  420aa1:	and    BYTE PTR [rax],ah
  420aa3:	and    BYTE PTR [rax],ah
  420aa5:	and    BYTE PTR [rax],ah
  420aa7:	and    BYTE PTR [rax],ah
  420aa9:	and    BYTE PTR [rax],ah
  420aab:	and    BYTE PTR [rax],ah
  420aad:	and    BYTE PTR [rax],ah
  420aaf:	and    BYTE PTR [rax],ah
  420ab1:	and    BYTE PTR [rdx],ah
  420ab3:	xor    DWORD PTR [rdx],esp
  420ab5:	and    BYTE PTR [rax],ch
  420ab7:	sub    BYTE PTR [rdi+0x5f],bl
  420aba:	fs pop di
  420abd:	ins    DWORD PTR es:[rdi],dx
  420abe:	(bad)  
  420abf:	jae    0x420b2c
  420ac1:	and    BYTE PTR [rdx],ch
  420ac3:	sub    DWORD PTR [rax],esp
  420ac5:	sub    BYTE PTR [rsi+0x64],ah
  420ac8:	jae    0x420b2f
  420aca:	je     0x420b3c
  420acc:	sub    DWORD PTR [rcx],ebp
  420ace:	and    BYTE PTR [rsp+rbx*2+0xa],bl
  420ad2:	and    BYTE PTR [rax],ah
  420ad4:	and    BYTE PTR [rax],ah
  420ad6:	and    BYTE PTR [rax],ah
  420ad8:	and    BYTE PTR [rax],ah
  420ada:	and    BYTE PTR [rax],ah
  420adc:	and    BYTE PTR [rax],ah
  420ade:	and    BYTE PTR [rax],ah
  420ae0:	and    BYTE PTR [rax],ah
  420ae2:	and    BYTE PTR [rax],ah
  420ae4:	and    BYTE PTR [rax],ah
  420ae6:	and    BYTE PTR [rax],ah
  420ae8:	and    BYTE PTR [rax],ah
  420aea:	cmp    ah,BYTE PTR [rax]
  420aec:	and    ch,BYTE PTR [rbp+0x65]
  420aef:	ins    DWORD PTR es:[rdi],dx
  420af0:	outs   dx,DWORD PTR ds:[rsi]
  420af1:	jb     0x420b6c
  420af3:	and    ch,BYTE PTR [rcx]
  420af5:	cmp    esp,DWORD PTR [rax]
  420af7:	pop    rsp
  420af8:	pop    rsp
  420af9:	or     ah,BYTE PTR [rax]
  420afb:	and    BYTE PTR [rax],ah
  420afd:	and    BYTE PTR [rax],ah
  420aff:	and    BYTE PTR [rbp+0x20],bh
  420b02:	ja     0x420b6c
  420b04:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0xa293028
  420b0c:	and    BYTE PTR [rax],ah
  420b0e:	and    esp,DWORD PTR [rbp+0x6e]
  420b11:	imul   esp,DWORD PTR fs:[rsi+0xa],0x2320200a
  420b19:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  420b21:	push   rbx
  420b22:	rex.RB
  420b23:	rex.WR
  420b24:	rex.RB
  420b25:	rex.XB push r12
  420b27:	rex.X
  420b28:	rex.WB push r12
  420b2a:	push   rbx
  420b2b:	pop    rdi
  420b2c:	rex.W pop rdi
  420b2e:	push   rdi
  420b2f:	push   rdx
  420b30:	push   r8
  420b32:	push   rax
  420b33:	rex.RB push r10
  420b35:	or     ah,BYTE PTR [rbx]
  420b37:	outs   dx,BYTE PTR gs:[rsi]
  420b39:	imul   esp,DWORD PTR fs:[rsi+0x20],0x5f202a2f
  420b41:	push   rbx
  420b42:	rex.RB
  420b43:	rex.WR
  420b44:	rex.RB
  420b45:	rex.XB push r12
  420b47:	rex.X
  420b48:	rex.WB push r12
  420b4a:	push   rbx
  420b4b:	pop    rdi
  420b4c:	rex.W pop rdi
  420b4e:	push   rdi
  420b4f:	push   rdx
  420b50:	push   r8
  420b52:	push   rax
  420b53:	rex.RB push r10
  420b55:	and    BYTE PTR [rdx],ch
  420b57:	(bad)  
  420b58:	add    BYTE PTR [rbx+0x65],dh
  420b5b:	ins    BYTE PTR es:[rdi],dx
  420b5c:	movsxd esi,DWORD PTR gs:[rdx+riz*2+0x69]
  420b61:	je     0x420bd6
  420b63:	cs push 0x0
  420b69:	add    BYTE PTR [rax],al
  420b6b:	add    BYTE PTR [rax],al
  420b6d:	add    BYTE PTR [rax],al
  420b6f:	add    BYTE PTR [rcx+0x41],al
  420b72:	rex.X pop rdi
  420b74:	fs pop di
  420b77:	jp     0x420bde
  420b79:	jb     0x420bea
  420b7b:	pop    rdi
  420b7c:	jae    0x420be3
  420b7e:	ins    BYTE PTR es:[rdi],dx
  420b7f:	movsxd esi,DWORD PTR gs:[rdx+riz*2+0x69]
  420b84:	je     0x420bf9
  420b86:	pop    rdi
  420b87:	push   0x0
  420b8c:	add    BYTE PTR [rax],al
  420b8e:	add    BYTE PTR [rax],al
  420b90:	(bad)  
  420b91:	sub    ah,BYTE PTR [rax]
  420b93:	push   rsp
  420b94:	push   0x66207369
  420b99:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x65786966
  420ba1:	jae    0x420bc3
  420ba3:	(bad)  
  420ba4:	and    BYTE PTR [rdx+0x75],ah
  420ba7:	and    BYTE PTR [ecx+0x6e],ch
  420bab:	and    BYTE PTR [rax+rbp*2+0x65],dh
  420baf:	and    BYTE PTR [rdi+0x5f],bl
  420bb2:	rex.RX
  420bb3:	rex.R pop rdi
  420bb5:	pop    rdx
  420bb6:	rex.RB push r10
  420bb8:	rex.WRXB and BYTE PTR [r13+0x61],r13b
  420bbc:	movsxd esi,DWORD PTR [rdx+0x6f]
  420bbf:	and    BYTE PTR [rax+0x72],dh
  420bc2:	gs jae 0x420c2a
  420bc5:	outs   dx,BYTE PTR ds:[rsi]
  420bc6:	je     0x420be8
  420bc8:	imul   ebp,DWORD PTR [rsi+0x20],0x62696c67
  420bcf:	movsxd esp,DWORD PTR [rax]
  420bd1:	xor    DWORD PTR [rsi],ebp
  420bd3:	js     0x420c03
  420bd5:	and    BYTE PTR [rdx],ch
  420bd7:	(bad)  
  420bd8:	or     ah,BYTE PTR [rbx]
  420bda:	imul   esp,DWORD PTR [rsi+0x6e],0x20666564
  420be1:	pop    rdi
  420be2:	push   rsp
  420be3:	pop    rcx
  420be4:	push   rax
  420be5:	rex.RB push r11
  420be7:	pop    rdi
  420be8:	rex.W pop rdi
  420bea:	push   rdi
  420beb:	push   rdx
  420bec:	push   r8
  420bee:	push   rax
  420bef:	rex.RB push r10
  420bf1:	or     ah,BYTE PTR [rbx]
  420bf3:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  420bfa:	and    BYTE PTR [rsi+riz*2],bh
  420bfd:	gs (bad) 
  420bff:	je     0x420c76
  420c01:	jb     0x420c68
  420c03:	jae    0x420c33
  420c05:	push   0x69230a3e
  420c0a:	outs   dx,BYTE PTR ds:[rsi]
  420c0b:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  420c0f:	gs pop rdi
  420c11:	outs   dx,BYTE PTR ds:[rsi]
  420c12:	gs js  0x420c89
  420c15:	and    BYTE PTR [rdi+riz*2],bh
  420c18:	outs   dx,BYTE PTR ds:[rsi]
  420c19:	jne    0x420c4a
  420c1b:	je     0x420c96
  420c1d:	jo     0x420c84
  420c1f:	jae    0x420c4f
  420c21:	push   0x230a0a3e
  420c26:	imul   esp,DWORD PTR [rsi+0x20],0x69666564
  420c2d:	outs   dx,BYTE PTR ds:[rsi]
  420c2e:	gs sub BYTE PTR fs:[rdi+0x5f],bl
  420c33:	rex.RX
  420c34:	rex.R pop rdi
  420c36:	pop    rdx
  420c37:	rex.RB push r10
  420c39:	rex.WRXB sub QWORD PTR [r8],r12
  420c3c:	es and BYTE PTR es:[rcx],ah
  420c40:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2864
  420c48:	pop    rdi
  420c49:	pop    rdi
  420c4a:	rex.RXB
  420c4b:	rex.WR
  420c4c:	rex.WB
  420c4d:	rex.X
  420c4e:	rex.XB pop r15
  420c50:	pop    rdi
  420c51:	sub    DWORD PTR [rdx],ecx
  420c53:	and    esi,DWORD PTR [rbp+0x6e]
  420c56:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  420c5c:	rex.RX
  420c5d:	rex.R pop rdi
  420c5f:	pop    rdx
  420c60:	rex.RB push r10
  420c62:	rex.WRXB or r12b,BYTE PTR [r11]
  420c65:	and    BYTE PTR [rbp+riz*2+0x66],ah
  420c69:	imul   ebp,DWORD PTR [rsi+0x65],0x465f5f20
  420c70:	rex.R pop rdi
  420c72:	pop    rdx
  420c73:	rex.RB push r10
  420c75:	rex.WRXB sub BYTE PTR [r14+0x64],r12b
  420c79:	jae    0x420ce0
  420c7b:	je     0x420ced
  420c7d:	sub    DWORD PTR [rax],esp
  420c7f:	pop    rsp
  420c80:	or     ah,BYTE PTR [rax]
  420c82:	and    BYTE PTR [rdi+rbp*2+0x20],ah
  420c86:	jnp    0x420ca8
  420c88:	pop    rsp
  420c89:	or     ah,BYTE PTR [rax]
  420c8b:	and    BYTE PTR [rax],ah
  420c8d:	and    BYTE PTR [rcx+0x6e],ch
  420c90:	je     0x420cb2
  420c92:	pop    rdi
  420c93:	pop    rdi
  420c94:	xor    BYTE PTR fs:[rax+riz*1],ch
  420c98:	pop    rdi
  420c99:	pop    rdi
  420c9a:	xor    DWORD PTR fs:[rbx],edi
  420c9d:	and    BYTE PTR [rdx+rcx*1+0x20],bl
  420ca1:	and    BYTE PTR [rax],ah
  420ca3:	and    BYTE PTR [rax],ah
  420ca5:	and    BYTE PTR [rax],ah
  420ca7:	and    BYTE PTR [rdi+0x5f],bl
  420caa:	(bad)  
  420cab:	jae    0x420d1a
  420cad:	pop    rdi
  420cae:	pop    rdi
  420caf:	and    BYTE PTR [rdi+0x5f],bl
  420cb2:	jbe    0x420d23
  420cb4:	ins    BYTE PTR es:[rdi],dx
  420cb5:	(bad)  
  420cb6:	je     0x420d21
  420cb8:	ins    BYTE PTR es:[rdi],dx
  420cb9:	gs pop rdi
  420cbb:	pop    rdi
  420cbc:	sub    BYTE PTR [rdx],ah
  420cbe:	movsxd ebp,DWORD PTR [rsp+riz*2+0x20]
  420cc2:	cmp    esp,DWORD PTR [rax]
  420cc4:	jb     0x420d2b
  420cc6:	jo     0x420ce8
  420cc8:	cmp    esp,DWORD PTR [rax]
  420cca:	jae    0x420d40
  420ccc:	outs   dx,DWORD PTR ds:[rsi]
  420ccd:	jae    0x420d3b
  420ccf:	and    ah,BYTE PTR [rax]
  420cd1:	pop    rsp
  420cd2:	or     ah,BYTE PTR [rax]
  420cd4:	and    BYTE PTR [rax],ah
  420cd6:	and    BYTE PTR [rax],ah
  420cd8:	and    BYTE PTR [rax],ah
  420cda:	and    BYTE PTR [rdx],bh
  420cdc:	and    BYTE PTR [rdx],ah
  420cde:	cmp    eax,0x20226326
  420ce3:	sub    BYTE PTR [rdi+0x5f],bl
  420ce6:	xor    BYTE PTR fs:[rcx],ch
  420ce9:	sub    al,0x20
  420ceb:	and    bh,BYTE PTR [rip+0x20224426]        # 0x20645117
  420cf1:	sub    BYTE PTR [rdi+0x5f],bl
  420cf4:	xor    DWORD PTR fs:[rcx],ebp
  420cf7:	and    BYTE PTR [rdx+rcx*1+0x20],bl
  420cfb:	and    BYTE PTR [rax],ah
  420cfd:	and    BYTE PTR [rax],ah
  420cff:	and    BYTE PTR [rax],ah
  420d01:	and    BYTE PTR [rdx],bh
  420d03:	and    BYTE PTR [rdx],ah
  420d05:	(bad)  
  420d06:	and    ah,BYTE PTR [rax]
  420d08:	sub    BYTE PTR [rax],dh
  420d0a:	sub    DWORD PTR [rax+riz*1],ebp
  420d0d:	and    dh,BYTE PTR [rax]
  420d0f:	and    ah,BYTE PTR [rax]
  420d11:	sub    BYTE PTR [rdi+0x5f],bl
  420d14:	rex.RX
  420d15:	rex.R push rbx
  420d17:	rex.RB push r12
  420d19:	pop    rdi
  420d1a:	rex.WR
  420d1b:	rex.WRXB
  420d1c:	rex.WRX
  420d1d:	rex.RXB push r11
  420d1f:	sub    DWORD PTR [rax+riz*1],ebp
  420d22:	pop    rsp
  420d23:	or     ah,BYTE PTR [rax]
  420d25:	and    BYTE PTR [rax],ah
  420d27:	and    BYTE PTR [rax],ah
  420d29:	and    BYTE PTR [rax],ah
  420d2b:	and    BYTE PTR [rax],ah
  420d2d:	and    BYTE PTR [rdx],ah
  420d2f:	xor    DWORD PTR [rdx],esp
  420d31:	and    BYTE PTR [rax],ch
  420d33:	sub    BYTE PTR [rdi+0x5f],bl
  420d36:	fs pop di
  420d39:	jae    0x420da0
  420d3b:	je     0x420d5d
  420d3d:	sub    ch,BYTE PTR [rcx]
  420d3f:	and    BYTE PTR [rax],ch
  420d41:	data16 fs jae 0x420daa
  420d45:	je     0x420db7
  420d47:	sub    DWORD PTR [rcx],ebp
  420d49:	and    BYTE PTR [rdx],bh
  420d4b:	and    ch,BYTE PTR [rbp+0x65]
  420d4e:	ins    DWORD PTR es:[rdi],dx
  420d4f:	outs   dx,DWORD PTR ds:[rsi]
  420d50:	jb     0x420dcb
  420d52:	and    ch,BYTE PTR [rcx]
  420d54:	cmp    esp,DWORD PTR [rax]
  420d56:	pop    rsp
  420d57:	or     ah,BYTE PTR [rax]
  420d59:	and    BYTE PTR [rbp+0x20],bh
  420d5c:	ja     0x420dc6
  420d5e:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0xa293028
  420d66:	and    esp,DWORD PTR [rbp+0x6e]
  420d69:	imul   esp,DWORD PTR fs:[rsi+0xa],0x6564230a
  420d71:	imul   bp,WORD PTR [rsi+0x65],0x5f20
  420d77:	push   rsp
  420d78:	pop    rcx
  420d79:	push   rax
  420d7a:	rex.RB push r11
  420d7c:	pop    rdi
  420d7d:	rex.W pop rdi
  420d7f:	push   rdi
  420d80:	push   rdx
  420d81:	push   r8
  420d83:	push   rax
  420d84:	rex.RB push r10
  420d86:	or     ah,BYTE PTR [rbx]
  420d88:	outs   dx,BYTE PTR gs:[rsi]
  420d8a:	imul   esp,DWORD PTR fs:[rsi+0x20],0x5f202a2f
  420d92:	push   rsp
  420d93:	pop    rcx
  420d94:	push   rax
  420d95:	rex.RB push r11
  420d97:	pop    rdi
  420d98:	rex.W pop rdi
  420d9a:	push   rdi
  420d9b:	push   rdx
  420d9c:	push   r8
  420d9e:	push   rax
  420d9f:	rex.RB push r10
  420da1:	and    BYTE PTR [rdx],ch
  420da3:	(bad)  
  420da4:	add    BYTE PTR [rdi+0x6e],ah
  420da7:	jne    0x420dd8
  420da9:	je     0x420e24
  420dab:	jo     0x420e12
  420dad:	jae    0x420ddd
  420daf:	push   0x0
	...
  420dc0:	rex.B
  420dc1:	rex.B
  420dc2:	rex.X pop rdi
  420dc4:	fs pop di
  420dc7:	jp     0x420e2e
  420dc9:	jb     0x420e3a
  420dcb:	pop    rdi
  420dcc:	outs   dx,BYTE PTR ds:[esi]
  420dce:	jne    0x420e2f
  420dd0:	je     0x420e4b
  420dd2:	jo     0x420e39
  420dd4:	jae    0x420e35
  420dd6:	push   0x202a2f00
  420ddb:	push   rsp
  420ddc:	push   0x66207369
  420de1:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x65786966
  420de9:	jae    0x420e0b
  420deb:	(bad)  
  420dec:	and    BYTE PTR [rdx+0x75],ah
  420def:	and    BYTE PTR [ecx+0x6e],ch
  420df3:	and    BYTE PTR [rax+rbp*2+0x65],dh
  420df7:	and    BYTE PTR [rdi+0x5f],bl
  420dfa:	rex.RX
  420dfb:	rex.R pop rdi
  420dfd:	pop    rdx
  420dfe:	rex.RB push r10
  420e00:	rex.WRXB and BYTE PTR [r13+0x61],r13b
  420e04:	movsxd esi,DWORD PTR [rdx+0x6f]
  420e07:	or     ah,BYTE PTR [rax]
  420e09:	and    BYTE PTR [rax],ah
  420e0b:	outs   dx,WORD PTR ds:[rsi]
  420e0d:	jb     0x420e2f
  420e0f:	outs   dx,DWORD PTR ds:[rsi]
  420e10:	ins    BYTE PTR es:[rdi],dx
  420e11:	fs gs jb 0x420e35
  420e15:	jbe    0x420e7c
  420e17:	jb     0x420e8c
  420e19:	imul   ebp,DWORD PTR [rdi+0x6e],0x666f2073
  420e20:	and    BYTE PTR [rax+rbp*2+0x65],dh
  420e24:	and    BYTE PTR [rcx+rbp*2+0x6e],cl
  420e28:	jne    0x420ea2
  420e2a:	and    BYTE PTR [rbx+0x65],ch
  420e2d:	jb     0x420e9d
  420e2f:	gs ins BYTE PTR es:[rdi],dx
  420e31:	and    BYTE PTR cs:[rdx],ch
  420e34:	(bad)  
  420e35:	or     ah,BYTE PTR [rbx]
  420e37:	imul   esp,DWORD PTR [rsi+0x6e],0x20666564
  420e3e:	pop    rdi
  420e3f:	push   rax
  420e40:	rex.WRXB push r11
  420e42:	rex.WB pop r8
  420e44:	pop    rdi
  420e45:	push   rsp
  420e46:	pop    rcx
  420e47:	push   rax
  420e48:	rex.RB push r11
  420e4a:	pop    rdi
  420e4b:	rex.W pop rdi
  420e4d:	push   rdi
  420e4e:	push   rdx
  420e4f:	push   r8
  420e51:	push   rax
  420e52:	rex.RB push r10
  420e54:	or     ah,BYTE PTR [rbx]
  420e56:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  420e5d:	and    BYTE PTR [rsi+riz*2],bh
  420e60:	gs (bad) 
  420e62:	je     0x420ed9
  420e64:	jb     0x420ecb
  420e66:	jae    0x420e96
  420e68:	push   0x23200a3e
  420e6d:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  420e74:	pop    rdi
  420e75:	outs   dx,BYTE PTR ds:[rsi]
  420e76:	gs js  0x420eed
  420e79:	and    BYTE PTR [rcx+riz*2],bh
  420e7c:	jae    0x420eeb
  420e7e:	(bad)  
  420e7f:	jo     0x420ef0
  420e81:	jae    0x420eec
  420e83:	js     0x420ee4
  420e85:	je     0x420f00
  420e87:	jo     0x420eee
  420e89:	jae    0x420eb9
  420e8b:	push   0x230a0a3e
  420e90:	imul   esp,DWORD PTR [rsi+0x20],0x69666564
  420e97:	outs   dx,BYTE PTR ds:[rsi]
  420e98:	gs sub BYTE PTR fs:[rdi+0x5f],bl
  420e9d:	rex.RX
  420e9e:	rex.R pop rdi
  420ea0:	pop    rdx
  420ea1:	rex.RB push r10
  420ea3:	rex.WRXB sub QWORD PTR [r8],r12
  420ea6:	es and BYTE PTR es:[rcx],ah
  420eaa:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2864
  420eb2:	pop    rdi
  420eb3:	pop    rdi
  420eb4:	rex.RXB
  420eb5:	rex.WR
  420eb6:	rex.WB
  420eb7:	rex.X
  420eb8:	rex.XB pop r15
  420eba:	pop    rdi
  420ebb:	sub    DWORD PTR [rdx],ecx
  420ebd:	and    esi,DWORD PTR [rbp+0x6e]
  420ec0:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  420ec6:	rex.RX
  420ec7:	rex.R pop rdi
  420ec9:	pop    rdx
  420eca:	rex.RB push r10
  420ecc:	rex.WRXB or r12b,BYTE PTR [r11]
  420ecf:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  420ed7:	pop    rdi
  420ed8:	rex.RX
  420ed9:	rex.R pop rdi
  420edb:	pop    rdx
  420edc:	rex.RB push r10
  420ede:	rex.WRXB sub BYTE PTR [r14+0x64],r12b
  420ee2:	jae    0x420f49
  420ee4:	je     0x420f56
  420ee6:	sub    DWORD PTR [rax],esp
  420ee8:	pop    rsp
  420ee9:	or     ah,BYTE PTR [rax]
  420eeb:	and    BYTE PTR [rdi+rbp*2+0x20],ah
  420eef:	jnp    0x420f11
  420ef1:	pop    rsp
  420ef2:	or     ah,BYTE PTR [rax]
  420ef4:	and    BYTE PTR [rax],ah
  420ef6:	and    BYTE PTR [rcx+0x6e],ch
  420ef9:	je     0x420f1b
  420efb:	pop    rdi
  420efc:	pop    rdi
  420efd:	xor    BYTE PTR fs:[rax+riz*1],ch
  420f01:	pop    rdi
  420f02:	pop    rdi
  420f03:	xor    DWORD PTR fs:[rbx],edi
  420f06:	and    BYTE PTR [rdx+rcx*1+0x5f],bl
  420f0a:	pop    rdi
  420f0b:	(bad)  
  420f0c:	jae    0x420f7b
  420f0e:	pop    rdi
  420f0f:	pop    rdi
  420f10:	and    BYTE PTR [rdi+0x5f],bl
  420f13:	jbe    0x420f84
  420f15:	ins    BYTE PTR es:[rdi],dx
  420f16:	(bad)  
  420f17:	je     0x420f82
  420f19:	ins    BYTE PTR es:[rdi],dx
  420f1a:	gs pop rdi
  420f1c:	pop    rdi
  420f1d:	sub    BYTE PTR [rdx],ah
  420f1f:	movsxd ebp,DWORD PTR [rsp+riz*2+0x20]
  420f23:	cmp    esp,DWORD PTR [rax]
  420f25:	jb     0x420f8c
  420f27:	jo     0x420f49
  420f29:	cmp    esp,DWORD PTR [rax]
  420f2b:	jae    0x420fa1
  420f2d:	outs   dx,DWORD PTR ds:[rsi]
  420f2e:	jae    0x420f9c
  420f30:	and    ah,BYTE PTR [rax]
  420f32:	pop    rsp
  420f33:	or     bh,BYTE PTR [rdx]
  420f35:	and    BYTE PTR [rdx],ah
  420f37:	cmp    eax,0x20226326
  420f3c:	sub    BYTE PTR [rdi+0x5f],bl
  420f3f:	xor    BYTE PTR fs:[rcx],ch
  420f42:	sub    al,0x20
  420f44:	and    bh,BYTE PTR [rip+0x20224426]        # 0x20645370
  420f4a:	sub    BYTE PTR [rdi+0x5f],bl
  420f4d:	xor    DWORD PTR fs:[rcx],ebp
  420f50:	and    BYTE PTR [rdx+rcx*1+0x3a],bl
  420f54:	and    BYTE PTR [rdx],ah
  420f56:	(bad)  
  420f57:	and    ah,BYTE PTR [rax]
  420f59:	sub    BYTE PTR [rax],dh
  420f5b:	sub    DWORD PTR [rax+riz*1],ebp
  420f5e:	and    dh,BYTE PTR [rax]
  420f60:	and    ah,BYTE PTR [rax]
  420f62:	sub    BYTE PTR [rdi+0x5f],bl
  420f65:	rex.RX
  420f66:	rex.R push rbx
  420f68:	rex.RB push r12
  420f6a:	pop    rdi
  420f6b:	rex.WR
  420f6c:	rex.WRXB
  420f6d:	rex.WRX
  420f6e:	rex.RXB push r11
  420f70:	sub    DWORD PTR [rax+riz*1],ebp
  420f73:	pop    rsp
  420f74:	or     ah,BYTE PTR [rax]
  420f76:	and    BYTE PTR [rdx],ah
  420f78:	xor    DWORD PTR [rdx],esp
  420f7a:	and    BYTE PTR [rax],ch
  420f7c:	sub    BYTE PTR [rdi+0x5f],bl
  420f7f:	imul   esp,DWORD PTR [rbp+0x72],0x6e
  420f83:	gs ins BYTE PTR es:[rdi],dx
  420f85:	pop    rdi
  420f86:	fs pop di
  420f89:	jae    0x420ff0
  420f8b:	je     0x420fad
  420f8d:	sub    ch,BYTE PTR [rcx]
  420f8f:	and    BYTE PTR [rax],ch
  420f91:	data16 fs jae 0x420ffa
  420f95:	je     0x421007
  420f97:	sub    DWORD PTR [rcx],ebp
  420f99:	and    BYTE PTR [rdx],bh
  420f9b:	and    ch,BYTE PTR [rbp+0x65]
  420f9e:	ins    DWORD PTR es:[rdi],dx
  420f9f:	outs   dx,DWORD PTR ds:[rsi]
  420fa0:	jb     0x42101b
  420fa2:	and    ch,BYTE PTR [rcx]
  420fa4:	cmp    esp,DWORD PTR [rax]
  420fa6:	pop    rsp
  420fa7:	or     ah,BYTE PTR [rax]
  420fa9:	and    BYTE PTR [rbp+0x20],bh
  420fac:	ja     0x421016
  420fae:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0xa293028
  420fb6:	and    esp,DWORD PTR [rbp+0x6e]
  420fb9:	imul   esp,DWORD PTR fs:[rsi+0xa],0x6564230a
  420fc1:	imul   bp,WORD PTR [rsi+0x65],0x5f20
  420fc7:	push   rax
  420fc8:	rex.WRXB push r11
  420fca:	rex.WB pop r8
  420fcc:	pop    rdi
  420fcd:	push   rsp
  420fce:	pop    rcx
  420fcf:	push   rax
  420fd0:	rex.RB push r11
  420fd2:	pop    rdi
  420fd3:	rex.W pop rdi
  420fd5:	push   rdi
  420fd6:	push   rdx
  420fd7:	push   r8
  420fd9:	push   rax
  420fda:	rex.RB push r10
  420fdc:	or     ah,BYTE PTR [rbx]
  420fde:	outs   dx,BYTE PTR gs:[rsi]
  420fe0:	imul   esp,DWORD PTR fs:[rsi+0x20],0x5f202a2f
  420fe8:	push   rax
  420fe9:	rex.WRXB push r11
  420feb:	rex.WB pop r8
  420fed:	pop    rdi
  420fee:	push   rsp
  420fef:	pop    rcx
  420ff0:	push   rax
  420ff1:	rex.RB push r11
  420ff3:	pop    rdi
  420ff4:	rex.W pop rdi
  420ff6:	push   rdi
  420ff7:	push   rdx
  420ff8:	push   r8
  420ffa:	push   rax
  420ffb:	rex.RB push r10
  420ffd:	and    BYTE PTR [rdx],ch
  420fff:	(bad)  
  421000:	add    BYTE PTR [rax+0x6f],dh
  421003:	jae    0x42106e
  421005:	js     0x421066
  421007:	je     0x421082
  421009:	jo     0x421070
  42100b:	jae    0x42106c
  42100d:	ss xor al,0x0
  421010:	js     0x42104a
  421012:	ss pop rdi
  421014:	ss xor al,0x0
  421017:	jge    0x421039
  421019:	ja     0x421083
  42101b:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x6d736100
  421023:	(bad)  
  421024:	jo     0x421095
  421026:	jae    0x421091
  421028:	js     0x421089
  42102a:	je     0x4210a5
  42102c:	jo     0x421093
  42102e:	jae    0x42105e
  421030:	push   0x0
	...
  42103d:	add    BYTE PTR [rax],al
  42103f:	add    BYTE PTR [rcx+0x41],al
  421042:	rex.X pop rdi
  421044:	fs pop di
  421047:	jp     0x4210ae
  421049:	jb     0x4210ba
  42104b:	pop    rdi
  42104c:	(bad)  
  42104d:	jae    0x4210bc
  42104f:	pop    rdi
  421050:	jo     0x4210c1
  421052:	jae    0x4210bd
  421054:	js     0x4210b5
  421056:	je     0x4210d1
  421058:	jo     0x4210bf
  42105a:	jae    0x4210bb
  42105c:	push   0x2f000000
  421061:	sub    ah,BYTE PTR [rax]
  421063:	push   rsp
  421064:	push   0x66207369
  421069:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x746f7270
  421071:	outs   dx,DWORD PTR ds:[rsi]
  421072:	je     0x4210ed
  421074:	jo     0x4210db
  421076:	jae    0x421098
  421078:	je     0x4210e2
  42107a:	and    BYTE PTR gs:[rdi+rbp*2+0x6e],ch
  42107f:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421084:	(bad)  
  421085:	ins    BYTE PTR es:[rdi],dx
  421086:	and    BYTE PTR gs:[rsi+0x75],ah
  42108a:	outs   dx,BYTE PTR ds:[rsi]
  42108b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42108f:	outs   dx,BYTE PTR ds:[rsi]
  421090:	jae    0x4210b2
  421092:	(bad)  
  421093:	jbe    0x4210f6
  421095:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6f20656c
  42109d:	outs   dx,BYTE PTR ds:[rsi]
  42109e:	and    BYTE PTR [rbp+0x61],cl
  4210a1:	movsxd esp,DWORD PTR [rax]
  4210a3:	rex.WRXB push r11
  4210a5:	or     ah,BYTE PTR [rax]
  4210a7:	and    BYTE PTR [rax],ah
  4210a9:	xor    DWORD PTR [rax],esi
  4210ab:	xor    ebp,DWORD PTR cs:[rsi]
  4210ae:	cmp    DWORD PTR [rsi],ebp
  4210b0:	and    BYTE PTR [rax],ah
  4210b2:	sub    ch,BYTE PTR [rdi]
  4210b4:	or     ah,BYTE PTR [rbx]
  4210b6:	imul   esp,DWORD PTR [rsi+0x6e],0x20666564
  4210bd:	pop    rdi
  4210be:	pop    rdi
  4210bf:	rex.WRB
  4210c0:	push   r12
  4210c2:	rex.W pop rdi
  4210c4:	pop    rdi
  4210c5:	or     ah,BYTE PTR [rbx]
  4210c7:	and    BYTE PTR [rbp+0x6e],dh
  4210ca:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  4210d0:	push   r8
  4210d2:	push   rax
  4210d3:	rex.WR
  4210d4:	rex.RB pop r15
  4210d6:	rex.XB
  4210d7:	rex.XB pop r15
  4210d9:	pop    rdi
  4210da:	or     ah,BYTE PTR [rbx]
  4210dc:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4210e0:	imul   ebp,DWORD PTR [rsi+0x65],0x415f5f20
  4210e7:	push   rax
  4210e8:	push   rax
  4210e9:	rex.WR
  4210ea:	rex.RB pop r15
  4210ec:	rex.XB
  4210ed:	rex.XB pop r15
  4210ef:	pop    rdi
  4210f0:	and    BYTE PTR [rax],ah
  4210f2:	xor    DWORD PTR [rbx],esi
  4210f4:	xor    al,0x35
  4210f6:	or     ah,BYTE PTR [rbx]
  4210f8:	and    BYTE PTR [rcx+0x6e],ch
  4210fb:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  4210ff:	gs pop rdi
  421101:	outs   dx,BYTE PTR ds:[rsi]
  421102:	gs js  0x421179
  421105:	and    BYTE PTR [rcx+riz*2],bh
  421108:	jb     0x42116d
  42110a:	push   0x63657469
  42110f:	je     0x421186
  421111:	jb     0x421178
  421113:	(bad)  
  421114:	jo     0x421186
  421116:	movsxd ebp,DWORD PTR [rdi]
  421118:	ins    DWORD PTR es:[rdi],dx
  421119:	(bad)  
  42111a:	je     0x421184
  42111c:	cs push 0x20230a3e
  421122:	jne    0x421192
  421124:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  42112a:	push   r8
  42112c:	push   rax
  42112d:	rex.WR
  42112e:	rex.RB pop r15
  421130:	rex.XB
  421131:	rex.XB pop r15
  421133:	pop    rdi
  421134:	or     ah,BYTE PTR [rbx]
  421136:	and    BYTE PTR [rbp+riz*2+0x66],ah
  42113a:	imul   ebp,DWORD PTR [rsi+0x65],0x415f5f20
  421141:	push   rax
  421142:	push   rax
  421143:	rex.WR
  421144:	rex.RB pop r15
  421146:	rex.XB
  421147:	rex.XB pop r15
  421149:	pop    rdi
  42114a:	and    BYTE PTR [rcx],dh
  42114c:	or     ah,BYTE PTR [rbx]
  42114e:	and    BYTE PTR [rcx+0x66],ch
  421151:	outs   dx,BYTE PTR ds:[rsi]
  421152:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  421158:	rex.WR
  421159:	rex.WB
  42115a:	rex.X
  42115b:	rex.WRB
  42115c:	rex.WR
  42115d:	rex.R
  42115e:	rex.X
  42115f:	rex.WR pop rdi
  421161:	rex.XB
  421162:	rex.WRXB
  421163:	rex.WRB push r8
  421165:	push   r12
  421167:	or     ah,BYTE PTR [rbx]
  421169:	and    BYTE PTR [rax],ah
  42116b:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  421172:	pop    rdi
  421173:	rex.WR
  421174:	rex.WRXB
  421175:	rex.WRX
  421176:	rex.RXB pop r15
  421178:	rex.R
  421179:	rex.WRXB push r13
  42117b:	rex.X
  42117c:	rex.WR
  42117d:	rex.RB pop r15
  42117f:	xor    DWORD PTR [rdx],esi
  421181:	cmp    BYTE PTR [rdi+0x5f],bl
  421184:	or     ah,BYTE PTR [rbx]
  421186:	and    BYTE PTR [rax],ah
  421188:	and    BYTE PTR [rbp+riz*2+0x66],ah
  42118c:	imul   ebp,DWORD PTR [rsi+0x65],0x4c5f5f20
  421193:	rex.WB
  421194:	rex.X
  421195:	rex.WRB
  421196:	rex.WR
  421197:	rex.R
  421198:	rex.X
  421199:	rex.WR pop rdi
  42119b:	rex.XB
  42119c:	rex.WRXB
  42119d:	rex.WRB push r8
  42119f:	push   r12
  4211a1:	sub    BYTE PTR [rbx+0x79],dh
  4211a4:	ins    DWORD PTR es:[rdi],dx
  4211a5:	sub    DWORD PTR [rax],esp
  4211a7:	pop    rdi
  4211a8:	pop    rdi
  4211a9:	(bad)  
  4211aa:	jae    0x421219
  4211ac:	sub    BYTE PTR [rdx],ah
  4211ae:	pop    rdi
  4211af:	and    ah,BYTE PTR [rax]
  4211b1:	and    esi,DWORD PTR [rbx+0x79]
  4211b4:	ins    DWORD PTR es:[rdi],dx
  4211b5:	and    BYTE PTR [rdx],ah
  4211b7:	and    al,0x4c
  4211b9:	rex.R
  4211ba:	rex.X
  4211bb:	xor    QWORD PTR [rdx],r14
  4211be:	cmp    BYTE PTR [rdx],ah
  4211c0:	sub    DWORD PTR [rdx],ecx
  4211c2:	and    esp,DWORD PTR [rax]
  4211c4:	and    BYTE PTR [rbp+0x6c],ah
  4211c7:	jae    0x42122e
  4211c9:	or     ah,BYTE PTR [rbx]
  4211cb:	and    BYTE PTR [rax],ah
  4211cd:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4211d1:	imul   ebp,DWORD PTR [rsi+0x65],0x4c5f5f20
  4211d8:	rex.WB
  4211d9:	rex.X
  4211da:	rex.WRB
  4211db:	rex.WR
  4211dc:	rex.R
  4211dd:	rex.X
  4211de:	rex.WR pop rdi
  4211e0:	rex.XB
  4211e1:	rex.WRXB
  4211e2:	rex.WRB push r8
  4211e4:	push   r12
  4211e6:	sub    BYTE PTR [rbx+0x79],dh
  4211e9:	ins    DWORD PTR es:[rdi],dx
  4211ea:	sub    DWORD PTR [rdx],ecx
  4211ec:	and    esp,DWORD PTR [rax]
  4211ee:	and    BYTE PTR [rbp+0x6e],ah
  4211f1:	imul   esp,DWORD PTR fs:[rsi+0x20],0x5f202a2f
  4211f9:	pop    rdi
  4211fa:	rex.WR
  4211fb:	rex.WRXB
  4211fc:	rex.WRX
  4211fd:	rex.RXB pop r15
  4211ff:	rex.R
  421200:	rex.WRXB push r13
  421202:	rex.X
  421203:	rex.WR
  421204:	rex.RB pop r15
  421206:	xor    DWORD PTR [rdx],esi
  421208:	cmp    BYTE PTR [rdi+0x5f],bl
  42120b:	and    BYTE PTR [rdx],ch
  42120d:	(bad)  
  42120e:	or     ah,BYTE PTR [rbx]
  421210:	and    BYTE PTR [rbp+0x6e],ah
  421213:	imul   esp,DWORD PTR fs:[rsi+0x20],0x5f202a2f
  42121b:	pop    rdi
  42121c:	rex.WR
  42121d:	rex.WB
  42121e:	rex.X
  42121f:	rex.WRB
  421220:	rex.WR
  421221:	rex.R
  421222:	rex.X
  421223:	rex.WR pop rdi
  421225:	rex.XB
  421226:	rex.WRXB
  421227:	rex.WRB push r8
  421229:	push   r12
  42122b:	and    BYTE PTR [rdx],ch
  42122d:	(bad)  
  42122e:	or     ah,BYTE PTR [rbx]
  421230:	and    BYTE PTR [rcx+0x66],ch
  421233:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  421239:	movsxd esi,DWORD PTR [rax+0x6c]
  42123c:	jne    0x4212b1
  42123e:	jo     0x4212ac
  421240:	jne    0x4212b5
  421242:	or     ah,BYTE PTR [rax]
  421244:	and    BYTE PTR [rax],ah
  421246:	gs js  0x4212bd
  421249:	gs jb  0x4212ba
  42124c:	and    BYTE PTR [rdx],ah
  42124e:	rex.XB and spl,BYTE PTR [r8]
  421251:	jnp    0x42125d
  421253:	and    esp,DWORD PTR [rax]
  421255:	outs   dx,BYTE PTR gs:[rsi]
  421257:	imul   esp,DWORD PTR fs:[rsi+0xa],0x78652020
  42125f:	je     0x4212c6
  421261:	jb     0x4212d1
  421263:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421267:	and    BYTE PTR [edi+ebp*2+0x75],ah
  42126c:	(bad)  
  42126d:	ins    BYTE PTR es:[rdi],dx
  42126e:	and    BYTE PTR gs:[rcx+0x63],ah
  421272:	outs   dx,DWORD PTR ds:[rsi]
  421273:	jae    0x4212e1
  421275:	sub    BYTE PTR [rax],ah
  421277:	ins    BYTE PTR es:[rdi],dx
  421278:	outs   dx,DWORD PTR ds:[rsi]
  421279:	outs   dx,BYTE PTR ds:[rsi]
  42127a:	and    BYTE PTR [edi+ebp*2+0x75],ah
  42127f:	(bad)  
  421280:	ins    BYTE PTR es:[rdi],dx
  421281:	and    BYTE PTR gs:[rcx],ch
  421284:	and    BYTE PTR [rdi+0x5f],bl
  421287:	rex.WR
  421288:	rex.WB
  421289:	rex.X
  42128a:	rex.WRB
  42128b:	rex.WR
  42128c:	rex.R
  42128d:	rex.X
  42128e:	rex.WR pop rdi
  421290:	rex.XB
  421291:	rex.WRXB
  421292:	rex.WRB push r8
  421294:	push   r12
  421296:	sub    BYTE PTR [rcx+0x63],ah
  421299:	outs   dx,DWORD PTR ds:[rsi]
  42129a:	jae    0x421308
  42129c:	sub    DWORD PTR [rbx],edi
  42129e:	or     ah,BYTE PTR [rax]
  4212a0:	and    BYTE PTR [rbp+0x78],ah
  4212a3:	je     0x42130a
  4212a5:	jb     0x421315
  4212a7:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  4212ab:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4212b0:	(bad)  
  4212b1:	ins    BYTE PTR es:[rdi],dx
  4212b2:	and    BYTE PTR gs:[rcx+0x73],ah
  4212b6:	imul   ebp,DWORD PTR [rsi+0x6c],0x6f6c2028
  4212bd:	outs   dx,BYTE PTR ds:[rsi]
  4212be:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4212c3:	(bad)  
  4212c4:	ins    BYTE PTR es:[rdi],dx
  4212c5:	and    BYTE PTR gs:[rcx],ch
  4212c8:	and    BYTE PTR [rdi+0x5f],bl
  4212cb:	rex.WR
  4212cc:	rex.WB
  4212cd:	rex.X
  4212ce:	rex.WRB
  4212cf:	rex.WR
  4212d0:	rex.R
  4212d1:	rex.X
  4212d2:	rex.WR pop rdi
  4212d4:	rex.XB
  4212d5:	rex.WRXB
  4212d6:	rex.WRB push r8
  4212d8:	push   r12
  4212da:	sub    BYTE PTR [rcx+0x73],ah
  4212dd:	imul   ebp,DWORD PTR [rsi+0x6c],0x200a3b29
  4212e4:	and    BYTE PTR [rbp+0x78],ah
  4212e7:	je     0x42134e
  4212e9:	jb     0x421359
  4212eb:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  4212ef:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4212f4:	(bad)  
  4212f5:	ins    BYTE PTR es:[rdi],dx
  4212f6:	and    BYTE PTR gs:[rcx+0x74],ah
  4212fa:	(bad)  
  4212fb:	outs   dx,BYTE PTR ds:[rsi]
  4212fc:	ins    BYTE PTR es:[rdi],dx
  4212fd:	sub    BYTE PTR [rax],ah
  4212ff:	ins    BYTE PTR es:[rdi],dx
  421300:	outs   dx,DWORD PTR ds:[rsi]
  421301:	outs   dx,BYTE PTR ds:[rsi]
  421302:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421307:	(bad)  
  421308:	ins    BYTE PTR es:[rdi],dx
  421309:	and    BYTE PTR gs:[rcx],ch
  42130c:	and    BYTE PTR [rdi+0x5f],bl
  42130f:	rex.WR
  421310:	rex.WB
  421311:	rex.X
  421312:	rex.WRB
  421313:	rex.WR
  421314:	rex.R
  421315:	rex.X
  421316:	rex.WR pop rdi
  421318:	rex.XB
  421319:	rex.WRXB
  42131a:	rex.WRB push r8
  42131c:	push   r12
  42131e:	sub    BYTE PTR [rcx+0x74],ah
  421321:	(bad)  
  421322:	outs   dx,BYTE PTR ds:[rsi]
  421323:	ins    BYTE PTR es:[rdi],dx
  421324:	sub    DWORD PTR [rbx],edi
  421326:	or     ah,BYTE PTR [rax]
  421328:	and    BYTE PTR [rbp+0x78],ah
  42132b:	je     0x421392
  42132d:	jb     0x42139d
  42132f:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421333:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421338:	(bad)  
  421339:	ins    BYTE PTR es:[rdi],dx
  42133a:	and    BYTE PTR gs:[rcx+0x74],ah
  42133e:	(bad)  
  42133f:	outs   dx,BYTE PTR ds:[rsi]
  421340:	xor    ch,BYTE PTR [rax+rbp*1+0x20]
  421344:	ins    BYTE PTR es:[rdi],dx
  421345:	outs   dx,DWORD PTR ds:[rsi]
  421346:	outs   dx,BYTE PTR ds:[rsi]
  421347:	and    BYTE PTR [edi+ebp*2+0x75],ah
  42134c:	(bad)  
  42134d:	ins    BYTE PTR es:[rdi],dx
  42134e:	gs sub al,0x20
  421351:	ins    BYTE PTR es:[rdi],dx
  421352:	outs   dx,DWORD PTR ds:[rsi]
  421353:	outs   dx,BYTE PTR ds:[rsi]
  421354:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421359:	(bad)  
  42135a:	ins    BYTE PTR es:[rdi],dx
  42135b:	and    BYTE PTR gs:[rcx],ch
  42135e:	and    BYTE PTR [rdi+0x5f],bl
  421361:	rex.WR
  421362:	rex.WB
  421363:	rex.X
  421364:	rex.WRB
  421365:	rex.WR
  421366:	rex.R
  421367:	rex.X
  421368:	rex.WR pop rdi
  42136a:	rex.XB
  42136b:	rex.WRXB
  42136c:	rex.WRB push r8
  42136e:	push   r12
  421370:	sub    BYTE PTR [rcx+0x74],ah
  421373:	(bad)  
  421374:	outs   dx,BYTE PTR ds:[rsi]
  421375:	xor    ch,BYTE PTR [rcx+rbp*1+0x3b]
  421379:	or     ah,BYTE PTR [rax]
  42137b:	and    BYTE PTR [rbp+0x78],ah
  42137e:	je     0x4213e5
  421380:	jb     0x4213f0
  421382:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421386:	and    BYTE PTR [edi+ebp*2+0x75],ah
  42138b:	(bad)  
  42138c:	ins    BYTE PTR es:[rdi],dx
  42138d:	and    BYTE PTR gs:[rbx+0x6f],ah
  421391:	jae    0x4213ff
  421393:	sub    BYTE PTR [rax],ah
  421395:	ins    BYTE PTR es:[rdi],dx
  421396:	outs   dx,DWORD PTR ds:[rsi]
  421397:	outs   dx,BYTE PTR ds:[rsi]
  421398:	and    BYTE PTR [edi+ebp*2+0x75],ah
  42139d:	(bad)  
  42139e:	ins    BYTE PTR es:[rdi],dx
  42139f:	and    BYTE PTR gs:[rcx],ch
  4213a2:	and    BYTE PTR [rdi+0x5f],bl
  4213a5:	rex.WR
  4213a6:	rex.WB
  4213a7:	rex.X
  4213a8:	rex.WRB
  4213a9:	rex.WR
  4213aa:	rex.R
  4213ab:	rex.X
  4213ac:	rex.WR pop rdi
  4213ae:	rex.XB
  4213af:	rex.WRXB
  4213b0:	rex.WRB push r8
  4213b2:	push   r12
  4213b4:	sub    BYTE PTR [rbx+0x6f],ah
  4213b7:	jae    0x421425
  4213b9:	sub    DWORD PTR [rbx],edi
  4213bb:	or     ah,BYTE PTR [rax]
  4213bd:	and    BYTE PTR [rbp+0x78],ah
  4213c0:	je     0x421427
  4213c2:	jb     0x421432
  4213c4:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  4213c8:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4213cd:	(bad)  
  4213ce:	ins    BYTE PTR es:[rdi],dx
  4213cf:	and    BYTE PTR gs:[rbx+0x69],dh
  4213d3:	outs   dx,BYTE PTR ds:[rsi]
  4213d4:	ins    BYTE PTR es:[rdi],dx
  4213d5:	sub    BYTE PTR [rax],ah
  4213d7:	ins    BYTE PTR es:[rdi],dx
  4213d8:	outs   dx,DWORD PTR ds:[rsi]
  4213d9:	outs   dx,BYTE PTR ds:[rsi]
  4213da:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4213df:	(bad)  
  4213e0:	ins    BYTE PTR es:[rdi],dx
  4213e1:	and    BYTE PTR gs:[rcx],ch
  4213e4:	and    BYTE PTR [rdi+0x5f],bl
  4213e7:	rex.WR
  4213e8:	rex.WB
  4213e9:	rex.X
  4213ea:	rex.WRB
  4213eb:	rex.WR
  4213ec:	rex.R
  4213ed:	rex.X
  4213ee:	rex.WR pop rdi
  4213f0:	rex.XB
  4213f1:	rex.WRXB
  4213f2:	rex.WRB push r8
  4213f4:	push   r12
  4213f6:	sub    BYTE PTR [rbx+0x69],dh
  4213f9:	outs   dx,BYTE PTR ds:[rsi]
  4213fa:	ins    BYTE PTR es:[rdi],dx
  4213fb:	sub    DWORD PTR [rbx],edi
  4213fd:	or     ah,BYTE PTR [rax]
  4213ff:	and    BYTE PTR [rbp+0x78],ah
  421402:	je     0x421469
  421404:	jb     0x421474
  421406:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  42140a:	and    BYTE PTR [edi+ebp*2+0x75],ah
  42140f:	(bad)  
  421410:	ins    BYTE PTR es:[rdi],dx
  421411:	and    BYTE PTR gs:[rcx+riz*2+0x6e],dh
  421416:	ins    BYTE PTR es:[rdi],dx
  421417:	sub    BYTE PTR [rax],ah
  421419:	ins    BYTE PTR es:[rdi],dx
  42141a:	outs   dx,DWORD PTR ds:[rsi]
  42141b:	outs   dx,BYTE PTR ds:[rsi]
  42141c:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421421:	(bad)  
  421422:	ins    BYTE PTR es:[rdi],dx
  421423:	and    BYTE PTR gs:[rcx],ch
  421426:	and    BYTE PTR [rdi+0x5f],bl
  421429:	rex.WR
  42142a:	rex.WB
  42142b:	rex.X
  42142c:	rex.WRB
  42142d:	rex.WR
  42142e:	rex.R
  42142f:	rex.X
  421430:	rex.WR pop rdi
  421432:	rex.XB
  421433:	rex.WRXB
  421434:	rex.WRB push r8
  421436:	push   r12
  421438:	sub    BYTE PTR [rcx+riz*2+0x6e],dh
  42143c:	ins    BYTE PTR es:[rdi],dx
  42143d:	sub    DWORD PTR [rbx],edi
  42143f:	or     ah,BYTE PTR [rax]
  421441:	and    BYTE PTR [rbp+0x78],ah
  421444:	je     0x4214ab
  421446:	jb     0x4214b6
  421448:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  42144c:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421451:	(bad)  
  421452:	ins    BYTE PTR es:[rdi],dx
  421453:	and    BYTE PTR gs:[rcx+0x63],ah
  421457:	outs   dx,DWORD PTR ds:[rsi]
  421458:	jae    0x4214c2
  42145a:	ins    BYTE PTR es:[rdi],dx
  42145b:	sub    BYTE PTR [rax],ah
  42145d:	ins    BYTE PTR es:[rdi],dx
  42145e:	outs   dx,DWORD PTR ds:[rsi]
  42145f:	outs   dx,BYTE PTR ds:[rsi]
  421460:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421465:	(bad)  
  421466:	ins    BYTE PTR es:[rdi],dx
  421467:	and    BYTE PTR gs:[rcx],ch
  42146a:	and    BYTE PTR [rdi+0x5f],bl
  42146d:	rex.WR
  42146e:	rex.WB
  42146f:	rex.X
  421470:	rex.WRB
  421471:	rex.WR
  421472:	rex.R
  421473:	rex.X
  421474:	rex.WR pop rdi
  421476:	rex.XB
  421477:	rex.WRXB
  421478:	rex.WRB push r8
  42147a:	push   r12
  42147c:	sub    BYTE PTR [rcx+0x63],ah
  42147f:	outs   dx,DWORD PTR ds:[rsi]
  421480:	jae    0x4214ea
  421482:	ins    BYTE PTR es:[rdi],dx
  421483:	sub    DWORD PTR [rbx],edi
  421485:	or     ah,BYTE PTR [rax]
  421487:	and    BYTE PTR [rbp+0x78],ah
  42148a:	je     0x4214f1
  42148c:	jb     0x4214fc
  42148e:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421492:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421497:	(bad)  
  421498:	ins    BYTE PTR es:[rdi],dx
  421499:	and    BYTE PTR gs:[rcx+0x73],ah
  42149d:	imul   ebp,DWORD PTR [rsi+0x68],0x6c20286c
  4214a4:	outs   dx,DWORD PTR ds:[rsi]
  4214a5:	outs   dx,BYTE PTR ds:[rsi]
  4214a6:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4214ab:	(bad)  
  4214ac:	ins    BYTE PTR es:[rdi],dx
  4214ad:	and    BYTE PTR gs:[rcx],ch
  4214b0:	and    BYTE PTR [rdi+0x5f],bl
  4214b3:	rex.WR
  4214b4:	rex.WB
  4214b5:	rex.X
  4214b6:	rex.WRB
  4214b7:	rex.WR
  4214b8:	rex.R
  4214b9:	rex.X
  4214ba:	rex.WR pop rdi
  4214bc:	rex.XB
  4214bd:	rex.WRXB
  4214be:	rex.WRB push r8
  4214c0:	push   r12
  4214c2:	sub    BYTE PTR [rcx+0x73],ah
  4214c5:	imul   ebp,DWORD PTR [rsi+0x68],0xa3b296c
  4214cc:	and    BYTE PTR [rax],ah
  4214ce:	gs js  0x421545
  4214d1:	gs jb  0x421542
  4214d4:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  4214d8:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4214dd:	(bad)  
  4214de:	ins    BYTE PTR es:[rdi],dx
  4214df:	and    BYTE PTR gs:[rcx+0x74],ah
  4214e3:	(bad)  
  4214e4:	outs   dx,BYTE PTR ds:[rsi]
  4214e5:	push   0x6c20286c
  4214ea:	outs   dx,DWORD PTR ds:[rsi]
  4214eb:	outs   dx,BYTE PTR ds:[rsi]
  4214ec:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4214f1:	(bad)  
  4214f2:	ins    BYTE PTR es:[rdi],dx
  4214f3:	and    BYTE PTR gs:[rcx],ch
  4214f6:	and    BYTE PTR [rdi+0x5f],bl
  4214f9:	rex.WR
  4214fa:	rex.WB
  4214fb:	rex.X
  4214fc:	rex.WRB
  4214fd:	rex.WR
  4214fe:	rex.R
  4214ff:	rex.X
  421500:	rex.WR pop rdi
  421502:	rex.XB
  421503:	rex.WRXB
  421504:	rex.WRB push r8
  421506:	push   r12
  421508:	sub    BYTE PTR [rcx+0x74],ah
  42150b:	(bad)  
  42150c:	outs   dx,BYTE PTR ds:[rsi]
  42150d:	push   0xa3b296c
  421512:	and    BYTE PTR [rax],ah
  421514:	gs js  0x42158b
  421517:	gs jb  0x421588
  42151a:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  42151e:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421523:	(bad)  
  421524:	ins    BYTE PTR es:[rdi],dx
  421525:	and    BYTE PTR gs:[rbx+0x6f],ah
  421529:	jae    0x421593
  42152b:	ins    BYTE PTR es:[rdi],dx
  42152c:	sub    BYTE PTR [rax],ah
  42152e:	ins    BYTE PTR es:[rdi],dx
  42152f:	outs   dx,DWORD PTR ds:[rsi]
  421530:	outs   dx,BYTE PTR ds:[rsi]
  421531:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421536:	(bad)  
  421537:	ins    BYTE PTR es:[rdi],dx
  421538:	and    BYTE PTR gs:[rcx],ch
  42153b:	and    BYTE PTR [rdi+0x5f],bl
  42153e:	rex.WR
  42153f:	rex.WB
  421540:	rex.X
  421541:	rex.WRB
  421542:	rex.WR
  421543:	rex.R
  421544:	rex.X
  421545:	rex.WR pop rdi
  421547:	rex.XB
  421548:	rex.WRXB
  421549:	rex.WRB push r8
  42154b:	push   r12
  42154d:	sub    BYTE PTR [rbx+0x6f],ah
  421550:	jae    0x4215ba
  421552:	ins    BYTE PTR es:[rdi],dx
  421553:	sub    DWORD PTR [rbx],edi
  421555:	or     ah,BYTE PTR [rax]
  421557:	and    BYTE PTR [rbp+0x78],ah
  42155a:	je     0x4215c1
  42155c:	jb     0x4215cc
  42155e:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421562:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421567:	(bad)  
  421568:	ins    BYTE PTR es:[rdi],dx
  421569:	and    BYTE PTR gs:[rbx+0x69],dh
  42156d:	outs   dx,BYTE PTR ds:[rsi]
  42156e:	push   0x6c20286c
  421573:	outs   dx,DWORD PTR ds:[rsi]
  421574:	outs   dx,BYTE PTR ds:[rsi]
  421575:	and    BYTE PTR [edi+ebp*2+0x75],ah
  42157a:	(bad)  
  42157b:	ins    BYTE PTR es:[rdi],dx
  42157c:	and    BYTE PTR gs:[rcx],ch
  42157f:	and    BYTE PTR [rdi+0x5f],bl
  421582:	rex.WR
  421583:	rex.WB
  421584:	rex.X
  421585:	rex.WRB
  421586:	rex.WR
  421587:	rex.R
  421588:	rex.X
  421589:	rex.WR pop rdi
  42158b:	rex.XB
  42158c:	rex.WRXB
  42158d:	rex.WRB push r8
  42158f:	push   r12
  421591:	sub    BYTE PTR [rbx+0x69],dh
  421594:	outs   dx,BYTE PTR ds:[rsi]
  421595:	push   0xa3b296c
  42159a:	and    BYTE PTR [rax],ah
  42159c:	gs js  0x421613
  42159f:	gs jb  0x421610
  4215a2:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  4215a6:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4215ab:	(bad)  
  4215ac:	ins    BYTE PTR es:[rdi],dx
  4215ad:	and    BYTE PTR gs:[rcx+riz*2+0x6e],dh
  4215b2:	push   0x6c20286c
  4215b7:	outs   dx,DWORD PTR ds:[rsi]
  4215b8:	outs   dx,BYTE PTR ds:[rsi]
  4215b9:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4215be:	(bad)  
  4215bf:	ins    BYTE PTR es:[rdi],dx
  4215c0:	and    BYTE PTR gs:[rcx],ch
  4215c3:	and    BYTE PTR [rdi+0x5f],bl
  4215c6:	rex.WR
  4215c7:	rex.WB
  4215c8:	rex.X
  4215c9:	rex.WRB
  4215ca:	rex.WR
  4215cb:	rex.R
  4215cc:	rex.X
  4215cd:	rex.WR pop rdi
  4215cf:	rex.XB
  4215d0:	rex.WRXB
  4215d1:	rex.WRB push r8
  4215d3:	push   r12
  4215d5:	sub    BYTE PTR [rcx+riz*2+0x6e],dh
  4215d9:	push   0xa3b296c
  4215de:	and    BYTE PTR [rax],ah
  4215e0:	gs js  0x421657
  4215e3:	gs jb  0x421654
  4215e6:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  4215ea:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4215ef:	(bad)  
  4215f0:	ins    BYTE PTR es:[rdi],dx
  4215f1:	and    BYTE PTR gs:[rbp+0x78],ah
  4215f5:	jo     0x421663
  4215f7:	sub    BYTE PTR [rax],ah
  4215f9:	ins    BYTE PTR es:[rdi],dx
  4215fa:	outs   dx,DWORD PTR ds:[rsi]
  4215fb:	outs   dx,BYTE PTR ds:[rsi]
  4215fc:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421601:	(bad)  
  421602:	ins    BYTE PTR es:[rdi],dx
  421603:	and    BYTE PTR gs:[rcx],ch
  421606:	and    BYTE PTR [rdi+0x5f],bl
  421609:	rex.WR
  42160a:	rex.WB
  42160b:	rex.X
  42160c:	rex.WRB
  42160d:	rex.WR
  42160e:	rex.R
  42160f:	rex.X
  421610:	rex.WR pop rdi
  421612:	rex.XB
  421613:	rex.WRXB
  421614:	rex.WRB push r8
  421616:	push   r12
  421618:	sub    BYTE PTR [rbp+0x78],ah
  42161b:	jo     0x421689
  42161d:	sub    DWORD PTR [rbx],edi
  42161f:	or     ah,BYTE PTR [rax]
  421621:	and    BYTE PTR [rbp+0x78],ah
  421624:	je     0x42168b
  421626:	jb     0x421696
  421628:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  42162c:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421631:	(bad)  
  421632:	ins    BYTE PTR es:[rdi],dx
  421633:	and    BYTE PTR gs:[rbp+0x78],ah
  421637:	jo     0x42166b
  421639:	ins    BYTE PTR es:[rdi],dx
  42163a:	sub    BYTE PTR [rax],ah
  42163c:	ins    BYTE PTR es:[rdi],dx
  42163d:	outs   dx,DWORD PTR ds:[rsi]
  42163e:	outs   dx,BYTE PTR ds:[rsi]
  42163f:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421644:	(bad)  
  421645:	ins    BYTE PTR es:[rdi],dx
  421646:	and    BYTE PTR gs:[rcx],ch
  421649:	and    BYTE PTR [rdi+0x5f],bl
  42164c:	rex.WR
  42164d:	rex.WB
  42164e:	rex.X
  42164f:	rex.WRB
  421650:	rex.WR
  421651:	rex.R
  421652:	rex.X
  421653:	rex.WR pop rdi
  421655:	rex.XB
  421656:	rex.WRXB
  421657:	rex.WRB push r8
  421659:	push   r12
  42165b:	sub    BYTE PTR [rbp+0x78],ah
  42165e:	jo     0x421692
  421660:	ins    BYTE PTR es:[rdi],dx
  421661:	sub    DWORD PTR [rbx],edi
  421663:	or     ah,BYTE PTR [rax]
  421665:	and    BYTE PTR [rbp+0x78],ah
  421668:	je     0x4216cf
  42166a:	jb     0x4216da
  42166c:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421670:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421675:	(bad)  
  421676:	ins    BYTE PTR es:[rdi],dx
  421677:	and    BYTE PTR gs:[rbp+0x78],ah
  42167b:	jo     0x4216ea
  42167d:	xor    DWORD PTR [rax+rbp*1+0x20],ebp
  421681:	ins    BYTE PTR es:[rdi],dx
  421682:	outs   dx,DWORD PTR ds:[rsi]
  421683:	outs   dx,BYTE PTR ds:[rsi]
  421684:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421689:	(bad)  
  42168a:	ins    BYTE PTR es:[rdi],dx
  42168b:	and    BYTE PTR gs:[rcx],ch
  42168e:	and    BYTE PTR [rdi+0x5f],bl
  421691:	rex.WR
  421692:	rex.WB
  421693:	rex.X
  421694:	rex.WRB
  421695:	rex.WR
  421696:	rex.R
  421697:	rex.X
  421698:	rex.WR pop rdi
  42169a:	rex.XB
  42169b:	rex.WRXB
  42169c:	rex.WRB push r8
  42169e:	push   r12
  4216a0:	sub    BYTE PTR [rbp+0x78],ah
  4216a3:	jo     0x421712
  4216a5:	xor    DWORD PTR [rcx+rbp*1+0x3b],ebp
  4216a9:	or     ah,BYTE PTR [rax]
  4216ab:	and    BYTE PTR [rbp+0x78],ah
  4216ae:	je     0x421715
  4216b0:	jb     0x421720
  4216b2:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  4216b6:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4216bb:	(bad)  
  4216bc:	ins    BYTE PTR es:[rdi],dx
  4216bd:	and    BYTE PTR gs:[rdi+rbp*2+0x67],ch
  4216c2:	ins    BYTE PTR es:[rdi],dx
  4216c3:	sub    BYTE PTR [rax],ah
  4216c5:	ins    BYTE PTR es:[rdi],dx
  4216c6:	outs   dx,DWORD PTR ds:[rsi]
  4216c7:	outs   dx,BYTE PTR ds:[rsi]
  4216c8:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4216cd:	(bad)  
  4216ce:	ins    BYTE PTR es:[rdi],dx
  4216cf:	and    BYTE PTR gs:[rcx],ch
  4216d2:	and    BYTE PTR [rdi+0x5f],bl
  4216d5:	rex.WR
  4216d6:	rex.WB
  4216d7:	rex.X
  4216d8:	rex.WRB
  4216d9:	rex.WR
  4216da:	rex.R
  4216db:	rex.X
  4216dc:	rex.WR pop rdi
  4216de:	rex.XB
  4216df:	rex.WRXB
  4216e0:	rex.WRB push r8
  4216e2:	push   r12
  4216e4:	sub    BYTE PTR [rdi+rbp*2+0x67],ch
  4216e8:	ins    BYTE PTR es:[rdi],dx
  4216e9:	sub    DWORD PTR [rbx],edi
  4216eb:	or     ah,BYTE PTR [rax]
  4216ed:	and    BYTE PTR [rbp+0x78],ah
  4216f0:	je     0x421757
  4216f2:	jb     0x421762
  4216f4:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  4216f8:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4216fd:	(bad)  
  4216fe:	ins    BYTE PTR es:[rdi],dx
  4216ff:	and    BYTE PTR gs:[rdi+rbp*2+0x67],ch
  421704:	xor    DWORD PTR [rax],esi
  421706:	ins    BYTE PTR es:[rdi],dx
  421707:	sub    BYTE PTR [rax],ah
  421709:	ins    BYTE PTR es:[rdi],dx
  42170a:	outs   dx,DWORD PTR ds:[rsi]
  42170b:	outs   dx,BYTE PTR ds:[rsi]
  42170c:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421711:	(bad)  
  421712:	ins    BYTE PTR es:[rdi],dx
  421713:	and    BYTE PTR gs:[rcx],ch
  421716:	and    BYTE PTR [rdi+0x5f],bl
  421719:	rex.WR
  42171a:	rex.WB
  42171b:	rex.X
  42171c:	rex.WRB
  42171d:	rex.WR
  42171e:	rex.R
  42171f:	rex.X
  421720:	rex.WR pop rdi
  421722:	rex.XB
  421723:	rex.WRXB
  421724:	rex.WRB push r8
  421726:	push   r12
  421728:	sub    BYTE PTR [rdi+rbp*2+0x67],ch
  42172c:	xor    DWORD PTR [rax],esi
  42172e:	ins    BYTE PTR es:[rdi],dx
  42172f:	sub    DWORD PTR [rbx],edi
  421731:	or     ah,BYTE PTR [rax]
  421733:	and    BYTE PTR [rbp+0x78],ah
  421736:	je     0x42179d
  421738:	jb     0x4217a8
  42173a:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  42173e:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421743:	(bad)  
  421744:	ins    BYTE PTR es:[rdi],dx
  421745:	and    BYTE PTR gs:[rdi+rbp*2+0x67],ch
  42174a:	xor    ch,BYTE PTR [rax+rbp*1+0x20]
  42174e:	ins    BYTE PTR es:[rdi],dx
  42174f:	outs   dx,DWORD PTR ds:[rsi]
  421750:	outs   dx,BYTE PTR ds:[rsi]
  421751:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421756:	(bad)  
  421757:	ins    BYTE PTR es:[rdi],dx
  421758:	and    BYTE PTR gs:[rcx],ch
  42175b:	and    BYTE PTR [rdi+0x5f],bl
  42175e:	rex.WR
  42175f:	rex.WB
  421760:	rex.X
  421761:	rex.WRB
  421762:	rex.WR
  421763:	rex.R
  421764:	rex.X
  421765:	rex.WR pop rdi
  421767:	rex.XB
  421768:	rex.WRXB
  421769:	rex.WRB push r8
  42176b:	push   r12
  42176d:	sub    BYTE PTR [rdi+rbp*2+0x67],ch
  421771:	xor    ch,BYTE PTR [rcx+rbp*1+0x3b]
  421775:	or     ah,BYTE PTR [rax]
  421777:	and    BYTE PTR [rbp+0x78],ah
  42177a:	je     0x4217e1
  42177c:	jb     0x4217ec
  42177e:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421782:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421787:	(bad)  
  421788:	ins    BYTE PTR es:[rdi],dx
  421789:	and    BYTE PTR gs:[rdi+rbp*2+0x67],ch
  42178e:	xor    DWORD PTR [rax+0x6c],esi
  421791:	sub    BYTE PTR [rax],ah
  421793:	ins    BYTE PTR es:[rdi],dx
  421794:	outs   dx,DWORD PTR ds:[rsi]
  421795:	outs   dx,BYTE PTR ds:[rsi]
  421796:	and    BYTE PTR [edi+ebp*2+0x75],ah
  42179b:	(bad)  
  42179c:	ins    BYTE PTR es:[rdi],dx
  42179d:	and    BYTE PTR gs:[rcx],ch
  4217a0:	and    BYTE PTR [rdi+0x5f],bl
  4217a3:	rex.WR
  4217a4:	rex.WB
  4217a5:	rex.X
  4217a6:	rex.WRB
  4217a7:	rex.WR
  4217a8:	rex.R
  4217a9:	rex.X
  4217aa:	rex.WR pop rdi
  4217ac:	rex.XB
  4217ad:	rex.WRXB
  4217ae:	rex.WRB push r8
  4217b0:	push   r12
  4217b2:	sub    BYTE PTR [rdi+rbp*2+0x67],ch
  4217b6:	xor    DWORD PTR [rax+0x6c],esi
  4217b9:	sub    DWORD PTR [rbx],edi
  4217bb:	or     ah,BYTE PTR [rax]
  4217bd:	and    BYTE PTR [rbp+0x78],ah
  4217c0:	je     0x421827
  4217c2:	jb     0x421832
  4217c4:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  4217c8:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4217cd:	(bad)  
  4217ce:	ins    BYTE PTR es:[rdi],dx
  4217cf:	and    BYTE PTR gs:[rdi+rbp*2+0x67],ch
  4217d4:	(bad)  
  4217d5:	ins    BYTE PTR es:[rdi],dx
  4217d6:	sub    BYTE PTR [rax],ah
  4217d8:	ins    BYTE PTR es:[rdi],dx
  4217d9:	outs   dx,DWORD PTR ds:[rsi]
  4217da:	outs   dx,BYTE PTR ds:[rsi]
  4217db:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4217e0:	(bad)  
  4217e1:	ins    BYTE PTR es:[rdi],dx
  4217e2:	and    BYTE PTR gs:[rcx],ch
  4217e5:	and    BYTE PTR [rdi+0x5f],bl
  4217e8:	rex.WR
  4217e9:	rex.WB
  4217ea:	rex.X
  4217eb:	rex.WRB
  4217ec:	rex.WR
  4217ed:	rex.R
  4217ee:	rex.X
  4217ef:	rex.WR pop rdi
  4217f1:	rex.XB
  4217f2:	rex.WRXB
  4217f3:	rex.WRB push r8
  4217f5:	push   r12
  4217f7:	sub    BYTE PTR [rdi+rbp*2+0x67],ch
  4217fb:	(bad)  
  4217fc:	ins    BYTE PTR es:[rdi],dx
  4217fd:	sub    DWORD PTR [rbx],edi
  4217ff:	or     ah,BYTE PTR [rax]
  421801:	and    BYTE PTR [rbp+0x78],ah
  421804:	je     0x42186b
  421806:	jb     0x421876
  421808:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  42180c:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421811:	(bad)  
  421812:	ins    BYTE PTR es:[rdi],dx
  421813:	and    BYTE PTR gs:[rbp+0x6f],ch
  421817:	fs data16 ins BYTE PTR es:[rdi],dx
  42181a:	sub    BYTE PTR [rax],ah
  42181c:	ins    BYTE PTR es:[rdi],dx
  42181d:	outs   dx,DWORD PTR ds:[rsi]
  42181e:	outs   dx,BYTE PTR ds:[rsi]
  42181f:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421824:	(bad)  
  421825:	ins    BYTE PTR es:[rdi],dx
  421826:	gs sub al,0x20
  421829:	ins    BYTE PTR es:[rdi],dx
  42182a:	outs   dx,DWORD PTR ds:[rsi]
  42182b:	outs   dx,BYTE PTR ds:[rsi]
  42182c:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421831:	(bad)  
  421832:	ins    BYTE PTR es:[rdi],dx
  421833:	and    BYTE PTR gs:[rdx],ch
  421836:	and    BYTE PTR [rcx],ch
  421838:	and    BYTE PTR [rdi+0x5f],bl
  42183b:	rex.WR
  42183c:	rex.WB
  42183d:	rex.X
  42183e:	rex.WRB
  42183f:	rex.WR
  421840:	rex.R
  421841:	rex.X
  421842:	rex.WR pop rdi
  421844:	rex.XB
  421845:	rex.WRXB
  421846:	rex.WRB push r8
  421848:	push   r12
  42184a:	sub    BYTE PTR [rbp+0x6f],ch
  42184d:	fs data16 ins BYTE PTR es:[rdi],dx
  421850:	sub    DWORD PTR [rbx],edi
  421852:	or     ah,BYTE PTR [rax]
  421854:	and    BYTE PTR [rbp+0x78],ah
  421857:	je     0x4218be
  421859:	jb     0x4218c9
  42185b:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  42185f:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421864:	(bad)  
  421865:	ins    BYTE PTR es:[rdi],dx
  421866:	and    BYTE PTR gs:[rsp+riz*2+0x65],ch
  42186b:	js     0x4218dd
  42186d:	ins    BYTE PTR es:[rdi],dx
  42186e:	sub    BYTE PTR [rax],ah
  421870:	ins    BYTE PTR es:[rdi],dx
  421871:	outs   dx,DWORD PTR ds:[rsi]
  421872:	outs   dx,BYTE PTR ds:[rsi]
  421873:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421878:	(bad)  
  421879:	ins    BYTE PTR es:[rdi],dx
  42187a:	gs sub al,0x20
  42187d:	imul   ebp,DWORD PTR [rsi+0x74],0x5f202920
  421884:	pop    rdi
  421885:	rex.WR
  421886:	rex.WB
  421887:	rex.X
  421888:	rex.WRB
  421889:	rex.WR
  42188a:	rex.R
  42188b:	rex.X
  42188c:	rex.WR pop rdi
  42188e:	rex.XB
  42188f:	rex.WRXB
  421890:	rex.WRB push r8
  421892:	push   r12
  421894:	sub    BYTE PTR [rsp+riz*2+0x65],ch
  421898:	js     0x42190a
  42189a:	ins    BYTE PTR es:[rdi],dx
  42189b:	sub    DWORD PTR [rbx],edi
  42189d:	or     ah,BYTE PTR [rax]
  42189f:	and    BYTE PTR [rbp+0x78],ah
  4218a2:	je     0x421909
  4218a4:	jb     0x421914
  4218a6:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  4218aa:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4218af:	(bad)  
  4218b0:	ins    BYTE PTR es:[rdi],dx
  4218b1:	and    BYTE PTR gs:[rsi+0x72],ah
  4218b5:	gs js  0x421928
  4218b8:	ins    BYTE PTR es:[rdi],dx
  4218b9:	sub    BYTE PTR [rax],ah
  4218bb:	ins    BYTE PTR es:[rdi],dx
  4218bc:	outs   dx,DWORD PTR ds:[rsi]
  4218bd:	outs   dx,BYTE PTR ds:[rsi]
  4218be:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4218c3:	(bad)  
  4218c4:	ins    BYTE PTR es:[rdi],dx
  4218c5:	gs sub al,0x20
  4218c8:	imul   ebp,DWORD PTR [rsi+0x74],0x29202a20
  4218cf:	and    BYTE PTR [rdi+0x5f],bl
  4218d2:	rex.WR
  4218d3:	rex.WB
  4218d4:	rex.X
  4218d5:	rex.WRB
  4218d6:	rex.WR
  4218d7:	rex.R
  4218d8:	rex.X
  4218d9:	rex.WR pop rdi
  4218db:	rex.XB
  4218dc:	rex.WRXB
  4218dd:	rex.WRB push r8
  4218df:	push   r12
  4218e1:	sub    BYTE PTR [rsi+0x72],ah
  4218e4:	gs js  0x421957
  4218e7:	ins    BYTE PTR es:[rdi],dx
  4218e8:	sub    DWORD PTR [rbx],edi
  4218ea:	or     ah,BYTE PTR [rax]
  4218ec:	and    BYTE PTR [rbp+0x78],ah
  4218ef:	je     0x421956
  4218f1:	jb     0x421961
  4218f3:	and    BYTE PTR [rcx+0x6e],ch
  4218f6:	je     0x421918
  4218f8:	imul   ebp,DWORD PTR [rdi+rbp*2+0x67],0x20286c62
  421900:	ins    BYTE PTR es:[rdi],dx
  421901:	outs   dx,DWORD PTR ds:[rsi]
  421902:	outs   dx,BYTE PTR ds:[rsi]
  421903:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421908:	(bad)  
  421909:	ins    BYTE PTR es:[rdi],dx
  42190a:	and    BYTE PTR gs:[rcx],ch
  42190d:	and    BYTE PTR [rdi+0x5f],bl
  421910:	rex.WR
  421911:	rex.WB
  421912:	rex.X
  421913:	rex.WRB
  421914:	rex.WR
  421915:	rex.R
  421916:	rex.X
  421917:	rex.WR pop rdi
  421919:	rex.XB
  42191a:	rex.WRXB
  42191b:	rex.WRB push r8
  42191d:	push   r12
  42191f:	sub    BYTE PTR [rcx+0x6c],ch
  421922:	outs   dx,DWORD PTR ds:[rsi]
  421923:	addr32 (bad) 
  421925:	ins    BYTE PTR es:[rdi],dx
  421926:	sub    DWORD PTR [rbx],edi
  421928:	or     ah,BYTE PTR [rax]
  42192a:	and    BYTE PTR [rbp+0x78],ah
  42192d:	je     0x421994
  42192f:	jb     0x42199f
  421931:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421935:	and    BYTE PTR [edi+ebp*2+0x75],ah
  42193a:	(bad)  
  42193b:	ins    BYTE PTR es:[rdi],dx
  42193c:	and    BYTE PTR gs:[rbx+0x63],dh
  421940:	(bad)  
  421941:	ins    BYTE PTR es:[rdi],dx
  421942:	(bad)  
  421943:	outs   dx,BYTE PTR ds:[rsi]
  421944:	ins    BYTE PTR es:[rdi],dx
  421945:	sub    BYTE PTR [rax],ah
  421947:	ins    BYTE PTR es:[rdi],dx
  421948:	outs   dx,DWORD PTR ds:[rsi]
  421949:	outs   dx,BYTE PTR ds:[rsi]
  42194a:	and    BYTE PTR [edi+ebp*2+0x75],ah
  42194f:	(bad)  
  421950:	ins    BYTE PTR es:[rdi],dx
  421951:	gs sub al,0x20
  421954:	imul   ebp,DWORD PTR [rsi+0x74],0x5f202920
  42195b:	pop    rdi
  42195c:	rex.WR
  42195d:	rex.WB
  42195e:	rex.X
  42195f:	rex.WRB
  421960:	rex.WR
  421961:	rex.R
  421962:	rex.X
  421963:	rex.WR pop rdi
  421965:	rex.XB
  421966:	rex.WRXB
  421967:	rex.WRB push r8
  421969:	push   r12
  42196b:	sub    BYTE PTR [rbx+0x63],dh
  42196e:	(bad)  
  42196f:	ins    BYTE PTR es:[rdi],dx
  421970:	(bad)  
  421971:	outs   dx,BYTE PTR ds:[rsi]
  421972:	ins    BYTE PTR es:[rdi],dx
  421973:	sub    DWORD PTR [rbx],edi
  421975:	or     ah,BYTE PTR [rax]
  421977:	and    BYTE PTR [rbp+0x78],ah
  42197a:	je     0x4219e1
  42197c:	jb     0x4219ec
  42197e:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421982:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421987:	(bad)  
  421988:	ins    BYTE PTR es:[rdi],dx
  421989:	and    BYTE PTR gs:[rbx+0x63],dh
  42198d:	(bad)  
  42198e:	ins    BYTE PTR es:[rdi],dx
  42198f:	(bad)  
  421990:	ins    BYTE PTR es:[rdi],dx
  421991:	outs   dx,BYTE PTR ds:[rsi]
  421992:	ins    BYTE PTR es:[rdi],dx
  421993:	sub    BYTE PTR [rax],ah
  421995:	ins    BYTE PTR es:[rdi],dx
  421996:	outs   dx,DWORD PTR ds:[rsi]
  421997:	outs   dx,BYTE PTR ds:[rsi]
  421998:	and    BYTE PTR [edi+ebp*2+0x75],ah
  42199d:	(bad)  
  42199e:	ins    BYTE PTR es:[rdi],dx
  42199f:	gs sub al,0x20
  4219a2:	ins    BYTE PTR es:[rdi],dx
  4219a3:	outs   dx,DWORD PTR ds:[rsi]
  4219a4:	outs   dx,BYTE PTR ds:[rsi]
  4219a5:	and    BYTE PTR [ecx+0x6e],ch
  4219a9:	je     0x4219cb
  4219ab:	sub    DWORD PTR [rax],esp
  4219ad:	pop    rdi
  4219ae:	pop    rdi
  4219af:	rex.WR
  4219b0:	rex.WB
  4219b1:	rex.X
  4219b2:	rex.WRB
  4219b3:	rex.WR
  4219b4:	rex.R
  4219b5:	rex.X
  4219b6:	rex.WR pop rdi
  4219b8:	rex.XB
  4219b9:	rex.WRXB
  4219ba:	rex.WRB push r8
  4219bc:	push   r12
  4219be:	sub    BYTE PTR [rbx+0x63],dh
  4219c1:	(bad)  
  4219c2:	ins    BYTE PTR es:[rdi],dx
  4219c3:	(bad)  
  4219c4:	ins    BYTE PTR es:[rdi],dx
  4219c5:	outs   dx,BYTE PTR ds:[rsi]
  4219c6:	ins    BYTE PTR es:[rdi],dx
  4219c7:	sub    DWORD PTR [rbx],edi
  4219c9:	or     ah,BYTE PTR [rax]
  4219cb:	and    BYTE PTR [rbp+0x78],ah
  4219ce:	je     0x421a35
  4219d0:	jb     0x421a40
  4219d2:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  4219d6:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4219db:	(bad)  
  4219dc:	ins    BYTE PTR es:[rdi],dx
  4219dd:	and    BYTE PTR gs:[rsi+0x61],ah
  4219e1:	(bad)
  4219e6:	ins    BYTE PTR es:[rdi],dx
  4219e7:	outs   dx,DWORD PTR ds:[rsi]
  4219e8:	outs   dx,BYTE PTR ds:[rsi]
  4219e9:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4219ee:	(bad)  
  4219ef:	ins    BYTE PTR es:[rdi],dx
  4219f0:	and    BYTE PTR gs:[rcx],ch
  4219f3:	and    BYTE PTR [rdi+0x5f],bl
  4219f6:	rex.WR
  4219f7:	rex.WB
  4219f8:	rex.X
  4219f9:	rex.WRB
  4219fa:	rex.WR
  4219fb:	rex.R
  4219fc:	rex.X
  4219fd:	rex.WR pop rdi
  4219ff:	rex.XB
  421a00:	rex.WRXB
  421a01:	rex.WRB push r8
  421a03:	push   r12
  421a05:	sub    BYTE PTR [rsi+0x61],ah
  421a08:	(bad)
  421a0d:	or     ah,BYTE PTR [rax]
  421a0f:	and    BYTE PTR [rbp+0x78],ah
  421a12:	je     0x421a79
  421a14:	jb     0x421a84
  421a16:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421a1a:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421a1f:	(bad)  
  421a20:	ins    BYTE PTR es:[rdi],dx
  421a21:	and    BYTE PTR gs:[rbx+0x62],ah
  421a25:	jb     0x421a9b
  421a27:	ins    BYTE PTR es:[rdi],dx
  421a28:	sub    BYTE PTR [rax],ah
  421a2a:	ins    BYTE PTR es:[rdi],dx
  421a2b:	outs   dx,DWORD PTR ds:[rsi]
  421a2c:	outs   dx,BYTE PTR ds:[rsi]
  421a2d:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421a32:	(bad)  
  421a33:	ins    BYTE PTR es:[rdi],dx
  421a34:	and    BYTE PTR gs:[rcx],ch
  421a37:	and    BYTE PTR [rdi+0x5f],bl
  421a3a:	rex.WR
  421a3b:	rex.WB
  421a3c:	rex.X
  421a3d:	rex.WRB
  421a3e:	rex.WR
  421a3f:	rex.R
  421a40:	rex.X
  421a41:	rex.WR pop rdi
  421a43:	rex.XB
  421a44:	rex.WRXB
  421a45:	rex.WRB push r8
  421a47:	push   r12
  421a49:	sub    BYTE PTR [rbx+0x62],ah
  421a4c:	jb     0x421ac2
  421a4e:	ins    BYTE PTR es:[rdi],dx
  421a4f:	sub    DWORD PTR [rbx],edi
  421a51:	or     ah,BYTE PTR [rax]
  421a53:	and    BYTE PTR [rbp+0x78],ah
  421a56:	je     0x421abd
  421a58:	jb     0x421ac8
  421a5a:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421a5e:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421a63:	(bad)  
  421a64:	ins    BYTE PTR es:[rdi],dx
  421a65:	and    BYTE PTR gs:[rax+0x79],ch
  421a69:	jo     0x421ada
  421a6b:	je     0x421ad9
  421a6d:	sub    BYTE PTR [rax],ah
  421a6f:	ins    BYTE PTR es:[rdi],dx
  421a70:	outs   dx,DWORD PTR ds:[rsi]
  421a71:	outs   dx,BYTE PTR ds:[rsi]
  421a72:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421a77:	(bad)  
  421a78:	ins    BYTE PTR es:[rdi],dx
  421a79:	gs sub al,0x20
  421a7c:	ins    BYTE PTR es:[rdi],dx
  421a7d:	outs   dx,DWORD PTR ds:[rsi]
  421a7e:	outs   dx,BYTE PTR ds:[rsi]
  421a7f:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421a84:	(bad)  
  421a85:	ins    BYTE PTR es:[rdi],dx
  421a86:	and    BYTE PTR gs:[rcx],ch
  421a89:	and    BYTE PTR [rdi+0x5f],bl
  421a8c:	rex.WR
  421a8d:	rex.WB
  421a8e:	rex.X
  421a8f:	rex.WRB
  421a90:	rex.WR
  421a91:	rex.R
  421a92:	rex.X
  421a93:	rex.WR pop rdi
  421a95:	rex.XB
  421a96:	rex.WRXB
  421a97:	rex.WRB push r8
  421a99:	push   r12
  421a9b:	sub    BYTE PTR [rax+0x79],ch
  421a9e:	jo     0x421b0f
  421aa0:	je     0x421b0e
  421aa2:	sub    DWORD PTR [rbx],edi
  421aa4:	or     ah,BYTE PTR [rax]
  421aa6:	and    BYTE PTR [rbp+0x78],ah
  421aa9:	je     0x421b10
  421aab:	jb     0x421b1b
  421aad:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421ab1:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421ab6:	(bad)  
  421ab7:	ins    BYTE PTR es:[rdi],dx
  421ab8:	and    BYTE PTR gs:[rax+0x6f],dh
  421abc:	ja     0x421b2a
  421abe:	sub    BYTE PTR [rax],ah
  421ac0:	ins    BYTE PTR es:[rdi],dx
  421ac1:	outs   dx,DWORD PTR ds:[rsi]
  421ac2:	outs   dx,BYTE PTR ds:[rsi]
  421ac3:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421ac8:	(bad)  
  421ac9:	ins    BYTE PTR es:[rdi],dx
  421aca:	gs sub al,0x20
  421acd:	ins    BYTE PTR es:[rdi],dx
  421ace:	outs   dx,DWORD PTR ds:[rsi]
  421acf:	outs   dx,BYTE PTR ds:[rsi]
  421ad0:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421ad5:	(bad)  
  421ad6:	ins    BYTE PTR es:[rdi],dx
  421ad7:	and    BYTE PTR gs:[rcx],ch
  421ada:	and    BYTE PTR [rdi+0x5f],bl
  421add:	rex.WR
  421ade:	rex.WB
  421adf:	rex.X
  421ae0:	rex.WRB
  421ae1:	rex.WR
  421ae2:	rex.R
  421ae3:	rex.X
  421ae4:	rex.WR pop rdi
  421ae6:	rex.XB
  421ae7:	rex.WRXB
  421ae8:	rex.WRB push r8
  421aea:	push   r12
  421aec:	sub    BYTE PTR [rax+0x6f],dh
  421aef:	ja     0x421b5d
  421af1:	sub    DWORD PTR [rbx],edi
  421af3:	or     ah,BYTE PTR [rax]
  421af5:	and    BYTE PTR [rbp+0x78],ah
  421af8:	je     0x421b5f
  421afa:	jb     0x421b6a
  421afc:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421b00:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421b05:	(bad)  
  421b06:	ins    BYTE PTR es:[rdi],dx
  421b07:	and    BYTE PTR gs:[rbx+0x71],dh
  421b0b:	jb     0x421b81
  421b0d:	ins    BYTE PTR es:[rdi],dx
  421b0e:	sub    BYTE PTR [rax],ah
  421b10:	ins    BYTE PTR es:[rdi],dx
  421b11:	outs   dx,DWORD PTR ds:[rsi]
  421b12:	outs   dx,BYTE PTR ds:[rsi]
  421b13:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421b18:	(bad)  
  421b19:	ins    BYTE PTR es:[rdi],dx
  421b1a:	and    BYTE PTR gs:[rcx],ch
  421b1d:	and    BYTE PTR [rdi+0x5f],bl
  421b20:	rex.WR
  421b21:	rex.WB
  421b22:	rex.X
  421b23:	rex.WRB
  421b24:	rex.WR
  421b25:	rex.R
  421b26:	rex.X
  421b27:	rex.WR pop rdi
  421b29:	rex.XB
  421b2a:	rex.WRXB
  421b2b:	rex.WRB push r8
  421b2d:	push   r12
  421b2f:	sub    BYTE PTR [rbx+0x71],dh
  421b32:	jb     0x421ba8
  421b34:	ins    BYTE PTR es:[rdi],dx
  421b35:	sub    DWORD PTR [rbx],edi
  421b37:	or     ah,BYTE PTR [rax]
  421b39:	and    BYTE PTR [rbp+0x78],ah
  421b3c:	je     0x421ba3
  421b3e:	jb     0x421bae
  421b40:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421b44:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421b49:	(bad)  
  421b4a:	ins    BYTE PTR es:[rdi],dx
  421b4b:	and    BYTE PTR gs:[rbp+0x72],ah
  421b4f:	data16 ins BYTE PTR es:[rdi],dx
  421b51:	sub    BYTE PTR [rax],ah
  421b53:	ins    BYTE PTR es:[rdi],dx
  421b54:	outs   dx,DWORD PTR ds:[rsi]
  421b55:	outs   dx,BYTE PTR ds:[rsi]
  421b56:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421b5b:	(bad)  
  421b5c:	ins    BYTE PTR es:[rdi],dx
  421b5d:	and    BYTE PTR gs:[rcx],ch
  421b60:	and    BYTE PTR [rdi+0x5f],bl
  421b63:	rex.WR
  421b64:	rex.WB
  421b65:	rex.X
  421b66:	rex.WRB
  421b67:	rex.WR
  421b68:	rex.R
  421b69:	rex.X
  421b6a:	rex.WR pop rdi
  421b6c:	rex.XB
  421b6d:	rex.WRXB
  421b6e:	rex.WRB push r8
  421b70:	push   r12
  421b72:	sub    BYTE PTR [rbp+0x72],ah
  421b75:	data16 ins BYTE PTR es:[rdi],dx
  421b77:	sub    DWORD PTR [rbx],edi
  421b79:	or     ah,BYTE PTR [rax]
  421b7b:	and    BYTE PTR [rbp+0x78],ah
  421b7e:	je     0x421be5
  421b80:	jb     0x421bf0
  421b82:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421b86:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421b8b:	(bad)  
  421b8c:	ins    BYTE PTR es:[rdi],dx
  421b8d:	and    BYTE PTR gs:[rbp+0x72],ah
  421b91:	movsxd bp,DWORD PTR [rax+rbp*1+0x20]
  421b96:	ins    BYTE PTR es:[rdi],dx
  421b97:	outs   dx,DWORD PTR ds:[rsi]
  421b98:	outs   dx,BYTE PTR ds:[rsi]
  421b99:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421b9e:	(bad)  
  421b9f:	ins    BYTE PTR es:[rdi],dx
  421ba0:	and    BYTE PTR gs:[rcx],ch
  421ba3:	and    BYTE PTR [rdi+0x5f],bl
  421ba6:	rex.WR
  421ba7:	rex.WB
  421ba8:	rex.X
  421ba9:	rex.WRB
  421baa:	rex.WR
  421bab:	rex.R
  421bac:	rex.X
  421bad:	rex.WR pop rdi
  421baf:	rex.XB
  421bb0:	rex.WRXB
  421bb1:	rex.WRB push r8
  421bb3:	push   r12
  421bb5:	sub    BYTE PTR [rbp+0x72],ah
  421bb8:	movsxd bp,DWORD PTR [rcx+rbp*1+0x3b]
  421bbd:	or     ah,BYTE PTR [rax]
  421bbf:	and    BYTE PTR [rbp+0x78],ah
  421bc2:	je     0x421c29
  421bc4:	jb     0x421c34
  421bc6:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421bca:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421bcf:	(bad)  
  421bd0:	ins    BYTE PTR es:[rdi],dx
  421bd1:	and    BYTE PTR gs:[rdi+riz*2+0x61],ch
  421bd6:	ins    DWORD PTR es:[rdi],dx
  421bd7:	ins    DWORD PTR es:[rdi],dx
  421bd8:	(bad)  
  421bd9:	ins    BYTE PTR es:[rdi],dx
  421bda:	sub    BYTE PTR [rax],ah
  421bdc:	ins    BYTE PTR es:[rdi],dx
  421bdd:	outs   dx,DWORD PTR ds:[rsi]
  421bde:	outs   dx,BYTE PTR ds:[rsi]
  421bdf:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421be4:	(bad)  
  421be5:	ins    BYTE PTR es:[rdi],dx
  421be6:	and    BYTE PTR gs:[rcx],ch
  421be9:	and    BYTE PTR [rdi+0x5f],bl
  421bec:	rex.WR
  421bed:	rex.WB
  421bee:	rex.X
  421bef:	rex.WRB
  421bf0:	rex.WR
  421bf1:	rex.R
  421bf2:	rex.X
  421bf3:	rex.WR pop rdi
  421bf5:	rex.XB
  421bf6:	rex.WRXB
  421bf7:	rex.WRB push r8
  421bf9:	push   r12
  421bfb:	sub    BYTE PTR [rdi+riz*2+0x61],ch
  421bff:	ins    DWORD PTR es:[rdi],dx
  421c00:	ins    DWORD PTR es:[rdi],dx
  421c01:	(bad)  
  421c02:	ins    BYTE PTR es:[rdi],dx
  421c03:	sub    DWORD PTR [rbx],edi
  421c05:	or     ah,BYTE PTR [rax]
  421c07:	and    BYTE PTR [rbp+0x78],ah
  421c0a:	je     0x421c71
  421c0c:	jb     0x421c7c
  421c0e:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421c12:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421c17:	(bad)  
  421c18:	ins    BYTE PTR es:[rdi],dx
  421c19:	and    BYTE PTR gs:[rdi+riz*2+0x61],dh
  421c1e:	ins    DWORD PTR es:[rdi],dx
  421c1f:	ins    DWORD PTR es:[rdi],dx
  421c20:	(bad)  
  421c21:	ins    BYTE PTR es:[rdi],dx
  421c22:	sub    BYTE PTR [rax],ah
  421c24:	ins    BYTE PTR es:[rdi],dx
  421c25:	outs   dx,DWORD PTR ds:[rsi]
  421c26:	outs   dx,BYTE PTR ds:[rsi]
  421c27:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421c2c:	(bad)  
  421c2d:	ins    BYTE PTR es:[rdi],dx
  421c2e:	and    BYTE PTR gs:[rcx],ch
  421c31:	and    BYTE PTR [rdi+0x5f],bl
  421c34:	rex.WR
  421c35:	rex.WB
  421c36:	rex.X
  421c37:	rex.WRB
  421c38:	rex.WR
  421c39:	rex.R
  421c3a:	rex.X
  421c3b:	rex.WR pop rdi
  421c3d:	rex.XB
  421c3e:	rex.WRXB
  421c3f:	rex.WRB push r8
  421c41:	push   r12
  421c43:	sub    BYTE PTR [rdi+riz*2+0x61],dh
  421c47:	ins    DWORD PTR es:[rdi],dx
  421c48:	ins    DWORD PTR es:[rdi],dx
  421c49:	(bad)  
  421c4a:	ins    BYTE PTR es:[rdi],dx
  421c4b:	sub    DWORD PTR [rbx],edi
  421c4d:	or     ah,BYTE PTR [rax]
  421c4f:	and    BYTE PTR [rbp+0x78],ah
  421c52:	je     0x421cb9
  421c54:	jb     0x421cc4
  421c56:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421c5a:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421c5f:	(bad)  
  421c60:	ins    BYTE PTR es:[rdi],dx
  421c61:	and    BYTE PTR gs:[rbx+0x65],ah
  421c65:	imul   ebp,DWORD PTR [rsp+rbp*2+0x28],0x6e6f6c20
  421c6d:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421c72:	(bad)  
  421c73:	ins    BYTE PTR es:[rdi],dx
  421c74:	and    BYTE PTR gs:[rcx],ch
  421c77:	and    BYTE PTR [rdi+0x5f],bl
  421c7a:	rex.WR
  421c7b:	rex.WB
  421c7c:	rex.X
  421c7d:	rex.WRB
  421c7e:	rex.WR
  421c7f:	rex.R
  421c80:	rex.X
  421c81:	rex.WR pop rdi
  421c83:	rex.XB
  421c84:	rex.WRXB
  421c85:	rex.WRB push r8
  421c87:	push   r12
  421c89:	sub    BYTE PTR [rbx+0x65],ah
  421c8c:	imul   ebp,DWORD PTR [rsp+rbp*2+0x29],0x20200a3b
  421c94:	gs js  0x421d0b
  421c97:	gs jb  0x421d08
  421c9a:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421c9e:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421ca3:	(bad)  
  421ca4:	ins    BYTE PTR es:[rdi],dx
  421ca5:	and    BYTE PTR gs:[rsi+0x6c],ah
  421ca9:	outs   dx,DWORD PTR ds:[rsi]
  421caa:	outs   dx,DWORD PTR ds:[rsi]
  421cab:	jb     0x421d19
  421cad:	sub    BYTE PTR [rax],ah
  421caf:	ins    BYTE PTR es:[rdi],dx
  421cb0:	outs   dx,DWORD PTR ds:[rsi]
  421cb1:	outs   dx,BYTE PTR ds:[rsi]
  421cb2:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421cb7:	(bad)  
  421cb8:	ins    BYTE PTR es:[rdi],dx
  421cb9:	and    BYTE PTR gs:[rcx],ch
  421cbc:	and    BYTE PTR [rdi+0x5f],bl
  421cbf:	rex.WR
  421cc0:	rex.WB
  421cc1:	rex.X
  421cc2:	rex.WRB
  421cc3:	rex.WR
  421cc4:	rex.R
  421cc5:	rex.X
  421cc6:	rex.WR pop rdi
  421cc8:	rex.XB
  421cc9:	rex.WRXB
  421cca:	rex.WRB push r8
  421ccc:	push   r12
  421cce:	sub    BYTE PTR [rsi+0x6c],ah
  421cd1:	outs   dx,DWORD PTR ds:[rsi]
  421cd2:	outs   dx,DWORD PTR ds:[rsi]
  421cd3:	jb     0x421d41
  421cd5:	sub    DWORD PTR [rbx],edi
  421cd7:	or     ah,BYTE PTR [rax]
  421cd9:	and    BYTE PTR [rbp+0x78],ah
  421cdc:	je     0x421d43
  421cde:	jb     0x421d4e
  421ce0:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421ce4:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421ce9:	(bad)  
  421cea:	ins    BYTE PTR es:[rdi],dx
  421ceb:	and    BYTE PTR gs:[rsi+0x65],ch
  421cef:	(bad)  
  421cf0:	jb     0x421d54
  421cf2:	jns    0x421d5d
  421cf4:	outs   dx,BYTE PTR ds:[rsi]
  421cf5:	je     0x421d63
  421cf7:	sub    BYTE PTR [rax],ah
  421cf9:	ins    BYTE PTR es:[rdi],dx
  421cfa:	outs   dx,DWORD PTR ds:[rsi]
  421cfb:	outs   dx,BYTE PTR ds:[rsi]
  421cfc:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421d01:	(bad)  
  421d02:	ins    BYTE PTR es:[rdi],dx
  421d03:	and    BYTE PTR gs:[rcx],ch
  421d06:	and    BYTE PTR [rdi+0x5f],bl
  421d09:	rex.WR
  421d0a:	rex.WB
  421d0b:	rex.X
  421d0c:	rex.WRB
  421d0d:	rex.WR
  421d0e:	rex.R
  421d0f:	rex.X
  421d10:	rex.WR pop rdi
  421d12:	rex.XB
  421d13:	rex.WRXB
  421d14:	rex.WRB push r8
  421d16:	push   r12
  421d18:	sub    BYTE PTR [rsi+0x65],ch
  421d1b:	(bad)  
  421d1c:	jb     0x421d80
  421d1e:	jns    0x421d89
  421d20:	outs   dx,BYTE PTR ds:[rsi]
  421d21:	je     0x421d8f
  421d23:	sub    DWORD PTR [rbx],edi
  421d25:	or     ah,BYTE PTR [rax]
  421d27:	and    BYTE PTR [rbp+0x78],ah
  421d2a:	je     0x421d91
  421d2c:	jb     0x421d9c
  421d2e:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421d32:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421d37:	(bad)  
  421d38:	ins    BYTE PTR es:[rdi],dx
  421d39:	and    BYTE PTR gs:[rdx+0x69],dh
  421d3d:	outs   dx,BYTE PTR ds:[rsi]
  421d3e:	je     0x421dac
  421d40:	sub    BYTE PTR [rax],ah
  421d42:	ins    BYTE PTR es:[rdi],dx
  421d43:	outs   dx,DWORD PTR ds:[rsi]
  421d44:	outs   dx,BYTE PTR ds:[rsi]
  421d45:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421d4a:	(bad)  
  421d4b:	ins    BYTE PTR es:[rdi],dx
  421d4c:	and    BYTE PTR gs:[rcx],ch
  421d4f:	and    BYTE PTR [rdi+0x5f],bl
  421d52:	rex.WR
  421d53:	rex.WB
  421d54:	rex.X
  421d55:	rex.WRB
  421d56:	rex.WR
  421d57:	rex.R
  421d58:	rex.X
  421d59:	rex.WR pop rdi
  421d5b:	rex.XB
  421d5c:	rex.WRXB
  421d5d:	rex.WRB push r8
  421d5f:	push   r12
  421d61:	sub    BYTE PTR [rdx+0x69],dh
  421d64:	outs   dx,BYTE PTR ds:[rsi]
  421d65:	je     0x421dd3
  421d67:	sub    DWORD PTR [rbx],edi
  421d69:	or     ah,BYTE PTR [rax]
  421d6b:	and    BYTE PTR [rbp+0x78],ah
  421d6e:	je     0x421dd5
  421d70:	jb     0x421de0
  421d72:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421d76:	and    BYTE PTR [ecx+0x6e],ch
  421d7a:	je     0x421d9c
  421d7c:	ins    BYTE PTR es:[rdi],dx
  421d7d:	jb     0x421de8
  421d7f:	outs   dx,BYTE PTR ds:[rsi]
  421d80:	je     0x421dee
  421d82:	sub    BYTE PTR [rax],ah
  421d84:	ins    BYTE PTR es:[rdi],dx
  421d85:	outs   dx,DWORD PTR ds:[rsi]
  421d86:	outs   dx,BYTE PTR ds:[rsi]
  421d87:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421d8c:	(bad)  
  421d8d:	ins    BYTE PTR es:[rdi],dx
  421d8e:	and    BYTE PTR gs:[rcx],ch
  421d91:	and    BYTE PTR [rdi+0x5f],bl
  421d94:	rex.WR
  421d95:	rex.WB
  421d96:	rex.X
  421d97:	rex.WRB
  421d98:	rex.WR
  421d99:	rex.R
  421d9a:	rex.X
  421d9b:	rex.WR pop rdi
  421d9d:	rex.XB
  421d9e:	rex.WRXB
  421d9f:	rex.WRB push r8
  421da1:	push   r12
  421da3:	sub    BYTE PTR [rdx+rsi*2+0x69],ch
  421da7:	outs   dx,BYTE PTR ds:[rsi]
  421da8:	je     0x421e16
  421daa:	sub    DWORD PTR [rbx],edi
  421dac:	or     ah,BYTE PTR [rax]
  421dae:	and    BYTE PTR [rbp+0x78],ah
  421db1:	je     0x421e18
  421db3:	jb     0x421e23
  421db5:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421db9:	and    BYTE PTR [edi+ebp*2+0x6e],ch
  421dbe:	and    BYTE PTR [ecx+0x6e],ch
  421dc2:	je     0x421de4
  421dc4:	ins    BYTE PTR es:[rdi],dx
  421dc5:	ins    BYTE PTR es:[rdi],dx
  421dc6:	jb     0x421e31
  421dc8:	outs   dx,BYTE PTR ds:[rsi]
  421dc9:	je     0x421e37
  421dcb:	sub    BYTE PTR [rax],ah
  421dcd:	ins    BYTE PTR es:[rdi],dx
  421dce:	outs   dx,DWORD PTR ds:[rsi]
  421dcf:	outs   dx,BYTE PTR ds:[rsi]
  421dd0:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421dd5:	(bad)  
  421dd6:	ins    BYTE PTR es:[rdi],dx
  421dd7:	and    BYTE PTR gs:[rcx],ch
  421dda:	and    BYTE PTR [rdi+0x5f],bl
  421ddd:	rex.WR
  421dde:	rex.WB
  421ddf:	rex.X
  421de0:	rex.WRB
  421de1:	rex.WR
  421de2:	rex.R
  421de3:	rex.X
  421de4:	rex.WR pop rdi
  421de6:	rex.XB
  421de7:	rex.WRXB
  421de8:	rex.WRB push r8
  421dea:	push   r12
  421dec:	sub    BYTE PTR [rsp+rbp*2+0x72],ch
  421df0:	imul   ebp,DWORD PTR [rsi+0x74],0xa3b296c
  421df7:	and    BYTE PTR [rax],ah
  421df9:	gs js  0x421e70
  421dfc:	gs jb  0x421e6d
  421dff:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421e03:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421e08:	(bad)  
  421e09:	ins    BYTE PTR es:[rdi],dx
  421e0a:	and    BYTE PTR gs:[rdx+0x6f],dh
  421e0e:	jne    0x421e7e
  421e10:	fs ins BYTE PTR es:[rdi],dx
  421e12:	sub    BYTE PTR [rax],ah
  421e14:	ins    BYTE PTR es:[rdi],dx
  421e15:	outs   dx,DWORD PTR ds:[rsi]
  421e16:	outs   dx,BYTE PTR ds:[rsi]
  421e17:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421e1c:	(bad)  
  421e1d:	ins    BYTE PTR es:[rdi],dx
  421e1e:	and    BYTE PTR gs:[rcx],ch
  421e21:	and    BYTE PTR [rdi+0x5f],bl
  421e24:	rex.WR
  421e25:	rex.WB
  421e26:	rex.X
  421e27:	rex.WRB
  421e28:	rex.WR
  421e29:	rex.R
  421e2a:	rex.X
  421e2b:	rex.WR pop rdi
  421e2d:	rex.XB
  421e2e:	rex.WRXB
  421e2f:	rex.WRB push r8
  421e31:	push   r12
  421e33:	sub    BYTE PTR [rdx+0x6f],dh
  421e36:	jne    0x421ea6
  421e38:	fs ins BYTE PTR es:[rdi],dx
  421e3a:	sub    DWORD PTR [rbx],edi
  421e3c:	or     ah,BYTE PTR [rax]
  421e3e:	and    BYTE PTR [rbp+0x78],ah
  421e41:	je     0x421ea8
  421e43:	jb     0x421eb3
  421e45:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421e49:	and    BYTE PTR [ecx+0x6e],ch
  421e4d:	je     0x421e6f
  421e4f:	ins    BYTE PTR es:[rdi],dx
  421e50:	jb     0x421ec1
  421e52:	jne    0x421ec2
  421e54:	fs ins BYTE PTR es:[rdi],dx
  421e56:	sub    BYTE PTR [rax],ah
  421e58:	ins    BYTE PTR es:[rdi],dx
  421e59:	outs   dx,DWORD PTR ds:[rsi]
  421e5a:	outs   dx,BYTE PTR ds:[rsi]
  421e5b:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421e60:	(bad)  
  421e61:	ins    BYTE PTR es:[rdi],dx
  421e62:	and    BYTE PTR gs:[rcx],ch
  421e65:	and    BYTE PTR [rdi+0x5f],bl
  421e68:	rex.WR
  421e69:	rex.WB
  421e6a:	rex.X
  421e6b:	rex.WRB
  421e6c:	rex.WR
  421e6d:	rex.R
  421e6e:	rex.X
  421e6f:	rex.WR pop rdi
  421e71:	rex.XB
  421e72:	rex.WRXB
  421e73:	rex.WRB push r8
  421e75:	push   r12
  421e77:	sub    BYTE PTR [rdx+rsi*2+0x6f],ch
  421e7b:	jne    0x421eeb
  421e7d:	fs ins BYTE PTR es:[rdi],dx
  421e7f:	sub    DWORD PTR [rbx],edi
  421e81:	or     ah,BYTE PTR [rax]
  421e83:	and    BYTE PTR [rbp+0x78],ah
  421e86:	je     0x421eed
  421e88:	jb     0x421ef8
  421e8a:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421e8e:	and    BYTE PTR [edi+ebp*2+0x6e],ch
  421e93:	and    BYTE PTR [ecx+0x6e],ch
  421e97:	je     0x421eb9
  421e99:	ins    BYTE PTR es:[rdi],dx
  421e9a:	ins    BYTE PTR es:[rdi],dx
  421e9b:	jb     0x421f0c
  421e9d:	jne    0x421f0d
  421e9f:	fs ins BYTE PTR es:[rdi],dx
  421ea1:	sub    BYTE PTR [rax],ah
  421ea3:	ins    BYTE PTR es:[rdi],dx
  421ea4:	outs   dx,DWORD PTR ds:[rsi]
  421ea5:	outs   dx,BYTE PTR ds:[rsi]
  421ea6:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421eab:	(bad)  
  421eac:	ins    BYTE PTR es:[rdi],dx
  421ead:	and    BYTE PTR gs:[rcx],ch
  421eb0:	and    BYTE PTR [rdi+0x5f],bl
  421eb3:	rex.WR
  421eb4:	rex.WB
  421eb5:	rex.X
  421eb6:	rex.WRB
  421eb7:	rex.WR
  421eb8:	rex.R
  421eb9:	rex.X
  421eba:	rex.WR pop rdi
  421ebc:	rex.XB
  421ebd:	rex.WRXB
  421ebe:	rex.WRB push r8
  421ec0:	push   r12
  421ec2:	sub    BYTE PTR [rsp+rbp*2+0x72],ch
  421ec6:	outs   dx,DWORD PTR ds:[rsi]
  421ec7:	jne    0x421f37
  421ec9:	fs ins BYTE PTR es:[rdi],dx
  421ecb:	sub    DWORD PTR [rbx],edi
  421ecd:	or     ah,BYTE PTR [rax]
  421ecf:	and    BYTE PTR [rbp+0x78],ah
  421ed2:	je     0x421f39
  421ed4:	jb     0x421f44
  421ed6:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421eda:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421edf:	(bad)  
  421ee0:	ins    BYTE PTR es:[rdi],dx
  421ee1:	and    BYTE PTR gs:[rdx+rsi*2+0x75],dh
  421ee6:	outs   dx,BYTE PTR ds:[rsi]
  421ee7:	movsxd ebp,DWORD PTR [rax+rbp*1+0x20]
  421eeb:	ins    BYTE PTR es:[rdi],dx
  421eec:	outs   dx,DWORD PTR ds:[rsi]
  421eed:	outs   dx,BYTE PTR ds:[rsi]
  421eee:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421ef3:	(bad)  
  421ef4:	ins    BYTE PTR es:[rdi],dx
  421ef5:	and    BYTE PTR gs:[rcx],ch
  421ef8:	and    BYTE PTR [rdi+0x5f],bl
  421efb:	rex.WR
  421efc:	rex.WB
  421efd:	rex.X
  421efe:	rex.WRB
  421eff:	rex.WR
  421f00:	rex.R
  421f01:	rex.X
  421f02:	rex.WR pop rdi
  421f04:	rex.XB
  421f05:	rex.WRXB
  421f06:	rex.WRB push r8
  421f08:	push   r12
  421f0a:	sub    BYTE PTR [rdx+rsi*2+0x75],dh
  421f0e:	outs   dx,BYTE PTR ds:[rsi]
  421f0f:	movsxd ebp,DWORD PTR [rcx+rbp*1+0x3b]
  421f13:	or     ah,BYTE PTR [rax]
  421f15:	and    BYTE PTR [rbp+0x78],ah
  421f18:	je     0x421f7f
  421f1a:	jb     0x421f8a
  421f1c:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421f20:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421f25:	(bad)  
  421f26:	ins    BYTE PTR es:[rdi],dx
  421f27:	and    BYTE PTR gs:[rsi+0x6d],ah
  421f2b:	outs   dx,DWORD PTR ds:[rsi]
  421f2c:	fs ins BYTE PTR es:[rdi],dx
  421f2e:	sub    BYTE PTR [rax],ah
  421f30:	ins    BYTE PTR es:[rdi],dx
  421f31:	outs   dx,DWORD PTR ds:[rsi]
  421f32:	outs   dx,BYTE PTR ds:[rsi]
  421f33:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421f38:	(bad)  
  421f39:	ins    BYTE PTR es:[rdi],dx
  421f3a:	gs sub al,0x20
  421f3d:	ins    BYTE PTR es:[rdi],dx
  421f3e:	outs   dx,DWORD PTR ds:[rsi]
  421f3f:	outs   dx,BYTE PTR ds:[rsi]
  421f40:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421f45:	(bad)  
  421f46:	ins    BYTE PTR es:[rdi],dx
  421f47:	sub    DWORD PTR gs:[rax],esp
  421f4a:	pop    rdi
  421f4b:	pop    rdi
  421f4c:	rex.WR
  421f4d:	rex.WB
  421f4e:	rex.X
  421f4f:	rex.WRB
  421f50:	rex.WR
  421f51:	rex.R
  421f52:	rex.X
  421f53:	rex.WR pop rdi
  421f55:	rex.XB
  421f56:	rex.WRXB
  421f57:	rex.WRB push r8
  421f59:	push   r12
  421f5b:	sub    BYTE PTR [rsi+0x6d],ah
  421f5e:	outs   dx,DWORD PTR ds:[rsi]
  421f5f:	fs ins BYTE PTR es:[rdi],dx
  421f61:	sub    DWORD PTR [rbx],edi
  421f63:	or     ah,BYTE PTR [rax]
  421f65:	and    BYTE PTR [rbp+0x78],ah
  421f68:	je     0x421fcf
  421f6a:	jb     0x421fda
  421f6c:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421f70:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421f75:	(bad)  
  421f76:	ins    BYTE PTR es:[rdi],dx
  421f77:	and    BYTE PTR gs:[rdx+0x65],dh
  421f7b:	ins    DWORD PTR es:[rdi],dx
  421f7c:	(bad)  
  421f7d:	imul   ebp,DWORD PTR [rsi+0x64],0x286c7265
  421f84:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421f88:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421f8d:	(bad)  
  421f8e:	ins    BYTE PTR es:[rdi],dx
  421f8f:	gs sub al,0x20
  421f92:	ins    BYTE PTR es:[rdi],dx
  421f93:	outs   dx,DWORD PTR ds:[rsi]
  421f94:	outs   dx,BYTE PTR ds:[rsi]
  421f95:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421f9a:	(bad)  
  421f9b:	ins    BYTE PTR es:[rdi],dx
  421f9c:	and    BYTE PTR gs:[rcx],ch
  421f9f:	and    BYTE PTR [rdi+0x5f],bl
  421fa2:	rex.WR
  421fa3:	rex.WB
  421fa4:	rex.X
  421fa5:	rex.WRB
  421fa6:	rex.WR
  421fa7:	rex.R
  421fa8:	rex.X
  421fa9:	rex.WR pop rdi
  421fab:	rex.XB
  421fac:	rex.WRXB
  421fad:	rex.WRB push r8
  421faf:	push   r12
  421fb1:	sub    BYTE PTR [rdx+0x65],dh
  421fb4:	ins    DWORD PTR es:[rdi],dx
  421fb5:	(bad)  
  421fb6:	imul   ebp,DWORD PTR [rsi+0x64],0x296c7265
  421fbd:	cmp    ecx,DWORD PTR [rdx]
  421fbf:	and    BYTE PTR [rax],ah
  421fc1:	gs js  0x422038
  421fc4:	gs jb  0x422035
  421fc7:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  421fcb:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421fd0:	(bad)  
  421fd1:	ins    BYTE PTR es:[rdi],dx
  421fd2:	and    BYTE PTR gs:[rdx+0x65],dh
  421fd6:	ins    DWORD PTR es:[rdi],dx
  421fd7:	jno    0x42204e
  421fd9:	outs   dx,DWORD PTR ds:[rsi]
  421fda:	ins    BYTE PTR es:[rdi],dx
  421fdb:	sub    BYTE PTR [rax],ah
  421fdd:	ins    BYTE PTR es:[rdi],dx
  421fde:	outs   dx,DWORD PTR ds:[rsi]
  421fdf:	outs   dx,BYTE PTR ds:[rsi]
  421fe0:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421fe5:	(bad)  
  421fe6:	ins    BYTE PTR es:[rdi],dx
  421fe7:	gs sub al,0x20
  421fea:	ins    BYTE PTR es:[rdi],dx
  421feb:	outs   dx,DWORD PTR ds:[rsi]
  421fec:	outs   dx,BYTE PTR ds:[rsi]
  421fed:	and    BYTE PTR [edi+ebp*2+0x75],ah
  421ff2:	(bad)  
  421ff3:	ins    BYTE PTR es:[rdi],dx
  421ff4:	gs sub al,0x20
  421ff7:	imul   ebp,DWORD PTR [rsi+0x74],0x29202a20
  421ffe:	and    BYTE PTR [rdi+0x5f],bl
  422001:	rex.WR
  422002:	rex.WB
  422003:	rex.X
  422004:	rex.WRB
  422005:	rex.WR
  422006:	rex.R
  422007:	rex.X
  422008:	rex.WR pop rdi
  42200a:	rex.XB
  42200b:	rex.WRXB
  42200c:	rex.WRB push r8
  42200e:	push   r12
  422010:	sub    BYTE PTR [rdx+0x65],dh
  422013:	ins    DWORD PTR es:[rdi],dx
  422014:	jno    0x42208b
  422016:	outs   dx,DWORD PTR ds:[rsi]
  422017:	ins    BYTE PTR es:[rdi],dx
  422018:	sub    DWORD PTR [rbx],edi
  42201a:	or     ah,BYTE PTR [rax]
  42201c:	and    BYTE PTR [rbp+0x78],ah
  42201f:	je     0x422086
  422021:	jb     0x422091
  422023:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  422027:	and    BYTE PTR [edi+ebp*2+0x75],ah
  42202c:	(bad)  
  42202d:	ins    BYTE PTR es:[rdi],dx
  42202e:	and    BYTE PTR gs:[rbx+0x6f],ah
  422032:	jo     0x4220ad
  422034:	jae    0x42209f
  422036:	outs   dx,BYTE PTR ds:[esi]
  422038:	ins    BYTE PTR es:[rdi],dx
  422039:	sub    BYTE PTR [rax],ah
  42203b:	ins    BYTE PTR es:[rdi],dx
  42203c:	outs   dx,DWORD PTR ds:[rsi]
  42203d:	outs   dx,BYTE PTR ds:[rsi]
  42203e:	and    BYTE PTR [edi+ebp*2+0x75],ah
  422043:	(bad)  
  422044:	ins    BYTE PTR es:[rdi],dx
  422045:	gs sub al,0x20
  422048:	ins    BYTE PTR es:[rdi],dx
  422049:	outs   dx,DWORD PTR ds:[rsi]
  42204a:	outs   dx,BYTE PTR ds:[rsi]
  42204b:	and    BYTE PTR [edi+ebp*2+0x75],ah
  422050:	(bad)  
  422051:	ins    BYTE PTR es:[rdi],dx
  422052:	and    BYTE PTR gs:[rcx],ch
  422055:	and    BYTE PTR [rdi+0x5f],bl
  422058:	rex.WR
  422059:	rex.WB
  42205a:	rex.X
  42205b:	rex.WRB
  42205c:	rex.WR
  42205d:	rex.R
  42205e:	rex.X
  42205f:	rex.WR pop rdi
  422061:	rex.XB
  422062:	rex.WRXB
  422063:	rex.WRB push r8
  422065:	push   r12
  422067:	sub    BYTE PTR [rbx+0x6f],ah
  42206a:	jo     0x4220e5
  42206c:	jae    0x4220d7
  42206e:	outs   dx,BYTE PTR ds:[esi]
  422070:	ins    BYTE PTR es:[rdi],dx
  422071:	sub    DWORD PTR [rbx],edi
  422073:	or     ah,BYTE PTR [rax]
  422075:	and    BYTE PTR [rbp+0x78],ah
  422078:	je     0x4220df
  42207a:	jb     0x4220ea
  42207c:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  422080:	and    BYTE PTR [edi+ebp*2+0x75],ah
  422085:	(bad)  
  422086:	ins    BYTE PTR es:[rdi],dx
  422087:	and    BYTE PTR gs:[rsi+0x61],ch
  42208b:	outs   dx,BYTE PTR ds:[rsi]
  42208c:	ins    BYTE PTR es:[rdi],dx
  42208d:	sub    BYTE PTR [rax],ah
  42208f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  422092:	jae    0x422108
  422094:	and    BYTE PTR [rbx+0x68],ah
  422097:	(bad)  
  422098:	jb     0x4220ba
  42209a:	sub    ah,BYTE PTR [rax]
  42209c:	sub    DWORD PTR [rax],esp
  42209e:	pop    rdi
  42209f:	pop    rdi
  4220a0:	rex.WR
  4220a1:	rex.WB
  4220a2:	rex.X
  4220a3:	rex.WRB
  4220a4:	rex.WR
  4220a5:	rex.R
  4220a6:	rex.X
  4220a7:	rex.WR pop rdi
  4220a9:	rex.XB
  4220aa:	rex.WRXB
  4220ab:	rex.WRB push r8
  4220ad:	push   r12
  4220af:	sub    BYTE PTR [rsi+0x61],ch
  4220b2:	outs   dx,BYTE PTR ds:[rsi]
  4220b3:	ins    BYTE PTR es:[rdi],dx
  4220b4:	sub    DWORD PTR [rbx],edi
  4220b6:	or     ah,BYTE PTR [rax]
  4220b8:	and    BYTE PTR [rbp+0x78],ah
  4220bb:	je     0x422122
  4220bd:	jb     0x42212d
  4220bf:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  4220c3:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4220c8:	(bad)  
  4220c9:	ins    BYTE PTR es:[rdi],dx
  4220ca:	and    BYTE PTR gs:[rsi+0x65],ch
  4220ce:	js     0x422144
  4220d0:	(bad)  
  4220d1:	data16 je 0x422139
  4220d4:	jb     0x422142
  4220d6:	sub    BYTE PTR [rax],ah
  4220d8:	ins    BYTE PTR es:[rdi],dx
  4220d9:	outs   dx,DWORD PTR ds:[rsi]
  4220da:	outs   dx,BYTE PTR ds:[rsi]
  4220db:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4220e0:	(bad)  
  4220e1:	ins    BYTE PTR es:[rdi],dx
  4220e2:	gs sub al,0x20
  4220e5:	ins    BYTE PTR es:[rdi],dx
  4220e6:	outs   dx,DWORD PTR ds:[rsi]
  4220e7:	outs   dx,BYTE PTR ds:[rsi]
  4220e8:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4220ed:	(bad)  
  4220ee:	ins    BYTE PTR es:[rdi],dx
  4220ef:	and    BYTE PTR gs:[rcx],ch
  4220f2:	and    BYTE PTR [rdi+0x5f],bl
  4220f5:	rex.WR
  4220f6:	rex.WB
  4220f7:	rex.X
  4220f8:	rex.WRB
  4220f9:	rex.WR
  4220fa:	rex.R
  4220fb:	rex.X
  4220fc:	rex.WR pop rdi
  4220fe:	rex.XB
  4220ff:	rex.WRXB
  422100:	rex.WRB push r8
  422102:	push   r12
  422104:	sub    BYTE PTR [rsi+0x65],ch
  422107:	js     0x42217d
  422109:	(bad)  
  42210a:	data16 je 0x422172
  42210d:	jb     0x42217b
  42210f:	sub    DWORD PTR [rbx],edi
  422111:	or     ah,BYTE PTR [rax]
  422113:	and    BYTE PTR [rbp+0x78],ah
  422116:	je     0x42217d
  422118:	jb     0x422188
  42211a:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  42211e:	and    BYTE PTR [edi+ebp*2+0x75],ah
  422123:	(bad)  
  422124:	ins    BYTE PTR es:[rdi],dx
  422125:	and    BYTE PTR gs:[rsi+0x65],ch
  422129:	js     0x42219f
  42212b:	je     0x42219c
  42212d:	ja     0x422190
  42212f:	jb     0x422195
  422131:	ins    BYTE PTR es:[rdi],dx
  422132:	sub    BYTE PTR [rax],ah
  422134:	ins    BYTE PTR es:[rdi],dx
  422135:	outs   dx,DWORD PTR ds:[rsi]
  422136:	outs   dx,BYTE PTR ds:[rsi]
  422137:	and    BYTE PTR [edi+ebp*2+0x75],ah
  42213c:	(bad)  
  42213d:	ins    BYTE PTR es:[rdi],dx
  42213e:	gs sub al,0x20
  422141:	ins    BYTE PTR es:[rdi],dx
  422142:	outs   dx,DWORD PTR ds:[rsi]
  422143:	outs   dx,BYTE PTR ds:[rsi]
  422144:	and    BYTE PTR [edi+ebp*2+0x75],ah
  422149:	(bad)  
  42214a:	ins    BYTE PTR es:[rdi],dx
  42214b:	and    BYTE PTR gs:[rcx],ch
  42214e:	and    BYTE PTR [rdi+0x5f],bl
  422151:	rex.WR
  422152:	rex.WB
  422153:	rex.X
  422154:	rex.WRB
  422155:	rex.WR
  422156:	rex.R
  422157:	rex.X
  422158:	rex.WR pop rdi
  42215a:	rex.XB
  42215b:	rex.WRXB
  42215c:	rex.WRB push r8
  42215e:	push   r12
  422160:	sub    BYTE PTR [rsi+0x65],ch
  422163:	js     0x4221d9
  422165:	je     0x4221d6
  422167:	ja     0x4221ca
  422169:	jb     0x4221cf
  42216b:	ins    BYTE PTR es:[rdi],dx
  42216c:	sub    DWORD PTR [rbx],edi
  42216e:	or     ah,BYTE PTR [rax]
  422170:	and    BYTE PTR [rbp+0x78],ah
  422173:	je     0x4221da
  422175:	jb     0x4221e5
  422177:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  42217b:	and    BYTE PTR [edi+ebp*2+0x75],ah
  422180:	(bad)  
  422181:	ins    BYTE PTR es:[rdi],dx
  422182:	and    BYTE PTR gs:[rsi+0x64],ah
  422186:	imul   ebp,DWORD PTR [rbp+0x6c],0x6f6c2028
  42218d:	outs   dx,BYTE PTR ds:[rsi]
  42218e:	and    BYTE PTR [edi+ebp*2+0x75],ah
  422193:	(bad)  
  422194:	ins    BYTE PTR es:[rdi],dx
  422195:	gs sub al,0x20
  422198:	ins    BYTE PTR es:[rdi],dx
  422199:	outs   dx,DWORD PTR ds:[rsi]
  42219a:	outs   dx,BYTE PTR ds:[rsi]
  42219b:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4221a0:	(bad)  
  4221a1:	ins    BYTE PTR es:[rdi],dx
  4221a2:	and    BYTE PTR gs:[rcx],ch
  4221a5:	and    BYTE PTR [rdi+0x5f],bl
  4221a8:	rex.WR
  4221a9:	rex.WB
  4221aa:	rex.X
  4221ab:	rex.WRB
  4221ac:	rex.WR
  4221ad:	rex.R
  4221ae:	rex.X
  4221af:	rex.WR pop rdi
  4221b1:	rex.XB
  4221b2:	rex.WRXB
  4221b3:	rex.WRB push r8
  4221b5:	push   r12
  4221b7:	sub    BYTE PTR [rsi+0x64],ah
  4221ba:	imul   ebp,DWORD PTR [rbp+0x6c],0x200a3b29
  4221c1:	and    BYTE PTR [rbp+0x78],ah
  4221c4:	je     0x42222b
  4221c6:	jb     0x422236
  4221c8:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  4221cc:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4221d1:	(bad)  
  4221d2:	ins    BYTE PTR es:[rdi],dx
  4221d3:	and    BYTE PTR gs:[rsi+0x6d],ah
  4221d7:	(bad)  
  4221d8:	js     0x422246
  4221da:	sub    BYTE PTR [rax],ah
  4221dc:	ins    BYTE PTR es:[rdi],dx
  4221dd:	outs   dx,DWORD PTR ds:[rsi]
  4221de:	outs   dx,BYTE PTR ds:[rsi]
  4221df:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4221e4:	(bad)  
  4221e5:	ins    BYTE PTR es:[rdi],dx
  4221e6:	gs sub al,0x20
  4221e9:	ins    BYTE PTR es:[rdi],dx
  4221ea:	outs   dx,DWORD PTR ds:[rsi]
  4221eb:	outs   dx,BYTE PTR ds:[rsi]
  4221ec:	and    BYTE PTR [edi+ebp*2+0x75],ah
  4221f1:	(bad)  
  4221f2:	ins    BYTE PTR es:[rdi],dx
  4221f3:	and    BYTE PTR gs:[rcx],ch
  4221f6:	and    BYTE PTR [rdi+0x5f],bl
  4221f9:	rex.WR
  4221fa:	rex.WB
  4221fb:	rex.X
  4221fc:	rex.WRB
  4221fd:	rex.WR
  4221fe:	rex.R
  4221ff:	rex.X
  422200:	rex.WR pop rdi
  422202:	rex.XB
  422203:	rex.WRXB
  422204:	rex.WRB push r8
  422206:	push   r12
  422208:	sub    BYTE PTR [rsi+0x6d],ah
  42220b:	(bad)  
  42220c:	js     0x42227a
  42220e:	sub    DWORD PTR [rbx],edi
  422210:	or     ah,BYTE PTR [rax]
  422212:	and    BYTE PTR [rbp+0x78],ah
  422215:	je     0x42227c
  422217:	jb     0x422287
  422219:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  42221d:	and    BYTE PTR [edi+ebp*2+0x75],ah
  422222:	(bad)  
  422223:	ins    BYTE PTR es:[rdi],dx
  422224:	and    BYTE PTR gs:[rsi+0x6d],ah
  422228:	imul   ebp,DWORD PTR [rsi+0x6c],0x6f6c2028
  42222f:	outs   dx,BYTE PTR ds:[rsi]
  422230:	and    BYTE PTR [edi+ebp*2+0x75],ah
  422235:	(bad)  
  422236:	ins    BYTE PTR es:[rdi],dx
  422237:	gs sub al,0x20
  42223a:	ins    BYTE PTR es:[rdi],dx
  42223b:	outs   dx,DWORD PTR ds:[rsi]
  42223c:	outs   dx,BYTE PTR ds:[rsi]
  42223d:	and    BYTE PTR [edi+ebp*2+0x75],ah
  422242:	(bad)  
  422243:	ins    BYTE PTR es:[rdi],dx
  422244:	and    BYTE PTR gs:[rcx],ch
  422247:	and    BYTE PTR [rdi+0x5f],bl
  42224a:	rex.WR
  42224b:	rex.WB
  42224c:	rex.X
  42224d:	rex.WRB
  42224e:	rex.WR
  42224f:	rex.R
  422250:	rex.X
  422251:	rex.WR pop rdi
  422253:	rex.XB
  422254:	rex.WRXB
  422255:	rex.WRB push r8
  422257:	push   r12
  422259:	sub    BYTE PTR [rsi+0x6d],ah
  42225c:	imul   ebp,DWORD PTR [rsi+0x6c],0x200a3b29
  422263:	and    BYTE PTR [rbp+0x78],ah
  422266:	je     0x4222cd
  422268:	jb     0x4222d8
  42226a:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  42226e:	and    BYTE PTR [edi+ebp*2+0x75],ah
  422273:	(bad)  
  422274:	ins    BYTE PTR es:[rdi],dx
  422275:	and    BYTE PTR gs:[rsi+0x6d],ah
  422279:	(bad)  
  42227a:	ins    BYTE PTR es:[rdi],dx
  42227b:	sub    BYTE PTR [rax],ah
  42227d:	ins    BYTE PTR es:[rdi],dx
  42227e:	outs   dx,DWORD PTR ds:[rsi]
  42227f:	outs   dx,BYTE PTR ds:[rsi]
  422280:	and    BYTE PTR [edi+ebp*2+0x75],ah
  422285:	(bad)  
  422286:	ins    BYTE PTR es:[rdi],dx
  422287:	gs sub al,0x20
  42228a:	ins    BYTE PTR es:[rdi],dx
  42228b:	outs   dx,DWORD PTR ds:[rsi]
  42228c:	outs   dx,BYTE PTR ds:[rsi]
  42228d:	and    BYTE PTR [edi+ebp*2+0x75],ah
  422292:	(bad)  
  422293:	ins    BYTE PTR es:[rdi],dx
  422294:	gs sub al,0x20
  422297:	ins    BYTE PTR es:[rdi],dx
  422298:	outs   dx,DWORD PTR ds:[rsi]
  422299:	outs   dx,BYTE PTR ds:[rsi]
  42229a:	and    BYTE PTR [edi+ebp*2+0x75],ah
  42229f:	(bad)  
  4222a0:	ins    BYTE PTR es:[rdi],dx
  4222a1:	and    BYTE PTR gs:[rcx],ch
  4222a4:	and    BYTE PTR [rdi+0x5f],bl
  4222a7:	rex.WR
  4222a8:	rex.WB
  4222a9:	rex.X
  4222aa:	rex.WRB
  4222ab:	rex.WR
  4222ac:	rex.R
  4222ad:	rex.X
  4222ae:	rex.WR pop rdi
  4222b0:	rex.XB
  4222b1:	rex.WRXB
  4222b2:	rex.WRB push r8
  4222b4:	push   r12
  4222b6:	sub    BYTE PTR [rsi+0x6d],ah
  4222b9:	(bad)  
  4222ba:	ins    BYTE PTR es:[rdi],dx
  4222bb:	sub    DWORD PTR [rbx],edi
  4222bd:	or     ah,BYTE PTR [rbx]
  4222bf:	and    BYTE PTR [rcx+0x66],ch
  4222c2:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  4222c8:	movsxd esi,DWORD PTR [rax+0x6c]
  4222cb:	jne    0x422340
  4222cd:	jo     0x42233b
  4222cf:	jne    0x422344
  4222d1:	or     ah,BYTE PTR [rax]
  4222d3:	and    BYTE PTR [rax],ah
  4222d5:	jge    0x4222e1
  4222d7:	and    esp,DWORD PTR [rax]
  4222d9:	outs   dx,BYTE PTR gs:[rsi]
  4222db:	imul   esp,DWORD PTR fs:[rsi+0xa],0x646e6523
  4222e3:	imul   esp,DWORD PTR [rsi+0x20],0x5f202a2f
  4222ea:	pop    rdi
  4222eb:	rex.WRB
  4222ec:	push   r12
  4222ee:	rex.W pop rdi
  4222f0:	pop    rdi
  4222f1:	and    BYTE PTR [rdx],ch
  4222f3:	(bad)  
  4222f4:	add    BYTE PTR [rax+0x6f],dh
  4222f7:	ja     0x422365
  4222f9:	add    BYTE PTR [rax],al
  4222fb:	add    BYTE PTR [rax],al
  4222fd:	add    BYTE PTR [rax],al
  4222ff:	add    BYTE PTR [rcx+0x72],ah
  422302:	movsxd ebp,DWORD PTR [rax+0x69]
  422305:	je     0x42236c
  422307:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  42230b:	gs (bad) 
  42230d:	jo     0x42237f
  42230f:	movsxd ebp,DWORD PTR [rdi]
  422311:	ins    DWORD PTR es:[rdi],dx
  422312:	(bad)  
  422313:	je     0x42237d
  422315:	cs push 0x0
  42231b:	add    BYTE PTR [rax],al
  42231d:	add    BYTE PTR [rax],al
  42231f:	add    BYTE PTR [rcx+0x41],al
  422322:	rex.X pop rdi
  422324:	fs (bad) 
  422326:	jb     0x42239f
  422328:	imul   ebp,DWORD PTR [rsi+0x37],0x6c5f395f
  42232f:	outs   dx,DWORD PTR ds:[rsi]
  422330:	outs   dx,BYTE PTR ds:[rsi]
  422331:	addr32 pop rdi
  422333:	outs   dx,DWORD PTR fs:[rsi]
  422335:	jne    0x422399
  422337:	ins    BYTE PTR es:[rdi],dx
  422338:	gs pop rdi
  42233a:	data16 jne 0x4223ab
  42233d:	movsxd esi,DWORD PTR [rbx+0x0]
  422340:	or     ah,BYTE PTR [rbx]
  422342:	imul   esp,DWORD PTR [rsi+0x20],0x69666564
  422349:	outs   dx,BYTE PTR ds:[rsi]
  42234a:	gs and BYTE PTR fs:[rdi+0x5f],bl
  42234f:	rex.RXB
  422350:	rex.WRX push rbp
  422352:	rex.RXB pop r15
  422354:	pop    rdi
  422355:	and    BYTE PTR [rsi],ah
  422357:	and    BYTE PTR es:[rbp+riz*2+0x66],ah
  42235c:	imul   ebp,DWORD PTR [rsi+0x65],0x4c5f2064
  422363:	push   r10
  422365:	rex.RXB
  422366:	rex.RB pop r15
  422368:	rex.RX
  422369:	rex.WB
  42236a:	rex.WR
  42236b:	rex.RB push r11
  42236d:	and    BYTE PTR [rsi],ah
  42236f:	and    BYTE PTR es:[rbp+riz*2+0x66],ah
  422374:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2064
  42237b:	movsxd esi,DWORD PTR [rax+0x6c]
  42237e:	jne    0x4223f3
  422380:	jo     0x4223ee
  422382:	jne    0x4223f7
  422384:	or     ah,BYTE PTR [rbx]
  422386:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  42238e:	pop    rdi
  42238f:	outs   dx,BYTE PTR ds:[rsi]
  422390:	gs gs fs pop rdi
  422394:	pop    rdi
  422395:	(bad)  
  422396:	imul   edi,DWORD PTR [rax+0x5f],0x746e6366
  42239d:	ins    BYTE PTR es:[rdi],dx
  42239e:	pop    rdi
  42239f:	push   0x7869665f
  4223a4:	or     ah,BYTE PTR [rbx]
  4223a6:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  4223ad:	pop    rdi
  4223ae:	outs   dx,BYTE PTR ds:[rsi]
  4223af:	gs gs fs pop rdi
  4223b3:	pop    rdi
  4223b4:	(bad)  
  4223b5:	imul   edi,DWORD PTR [rax+0x5f],0x746e6366
  4223bc:	ins    BYTE PTR es:[rdi],dx
  4223bd:	pop    rdi
  4223be:	push   0x7869665f
  4223c3:	or     ah,BYTE PTR [rbx]
  4223c5:	jne    0x422435
  4223c7:	fs data16 and BYTE PTR gs:[rdi+0x70],ch
  4223cd:	outs   dx,BYTE PTR gs:[rsi]
  4223cf:	or     ah,BYTE PTR [rbx]
  4223d1:	jne    0x422441
  4223d3:	fs data16 and BYTE PTR gs:[rbx+0x72],ah
  4223d9:	gs (bad) 
  4223db:	je     0x4223e7
  4223dd:	and    esi,DWORD PTR [rbp+0x6e]
  4223e0:	fs data16 and BYTE PTR gs:[rdi+0x70],ch
  4223e6:	outs   dx,BYTE PTR gs:[rsi]
  4223e8:	(bad)  
  4223e9:	je     0x4223f5
  4223eb:	(bad)  
  4223ec:	sub    ah,BYTE PTR [rax]
  4223ee:	rex.B ins BYTE PTR es:[rdi],dx
  4223f0:	imul   esp,DWORD PTR [rcx+0x73],0x65687420
  4223f7:	and    BYTE PTR [rbx+0x79],dh
  4223fa:	ins    DWORD PTR es:[rdi],dx
  4223fb:	(bad)  
  4223fc:	outs   dx,DWORD PTR ds:[rsi]
  4223fd:	ins    BYTE PTR es:[rdi],dx
  4223fe:	jae    0x422420
  422400:	jne    0x422475
  422402:	imul   ebp,DWORD PTR [rsi+0x67],0x6d736120
  422409:	and    BYTE PTR [rdx],ch
  42240b:	(bad)  
  42240c:	or     ah,BYTE PTR [rbp+0x78]
  42240f:	je     0x422476
  422411:	jb     0x422481
  422413:	and    BYTE PTR [rdx],ah
  422415:	rex.XB and spl,BYTE PTR [r8]
  422418:	jnp    0x422424
  42241a:	gs js  0x422491
  42241d:	gs jb  0x42248e
  422420:	and    BYTE PTR [rcx+0x6e],ch
  422423:	je     0x422445
  422425:	outs   dx,DWORD PTR ds:[rsi]
  422426:	jo     0x42248d
  422428:	outs   dx,BYTE PTR ds:[rsi]
  422429:	sub    BYTE PTR [rbx+0x6f],ah
  42242c:	outs   dx,BYTE PTR ds:[rsi]
  42242d:	jae    0x4224a3
  42242f:	and    BYTE PTR [rbx+0x68],ah
  422432:	(bad)  
  422433:	jb     0x422455
  422435:	sub    ch,BYTE PTR [rax+riz*1]
  422438:	imul   ebp,DWORD PTR [rsi+0x74],0x2e2e202c
  42243f:	sub    DWORD PTR cs:[rax],esp
  422442:	pop    rdi
  422443:	pop    rdi
  422444:	(bad)  
  422445:	jae    0x4224b4
  422447:	pop    rdi
  422448:	pop    rdi
  422449:	sub    BYTE PTR [rdx],ah
  42244b:	outs   dx,DWORD PTR ds:[rsi]
  42244c:	jo     0x4224b3
  42244e:	outs   dx,BYTE PTR ds:[rsi]
  42244f:	ss xor al,0x22
  422452:	sub    DWORD PTR [rbx],edi
  422454:	or     ah,BYTE PTR [rbp+0x78]
  422457:	je     0x4224be
  422459:	jb     0x4224c9
  42245b:	and    BYTE PTR [rcx+0x6e],ch
  42245e:	je     0x422480
  422460:	movsxd esi,DWORD PTR [rdx+0x65]
  422463:	(bad)  
  422464:	je     0x42248e
  422466:	movsxd ebp,DWORD PTR [rdi+0x6e]
  422469:	jae    0x4224df
  42246b:	and    BYTE PTR [rbx+0x68],ah
  42246e:	(bad)  
  42246f:	jb     0x422491
  422471:	sub    ch,BYTE PTR [rax+riz*1]
  422474:	ins    DWORD PTR es:[rdi],dx
  422475:	outs   dx,DWORD PTR ds:[rsi]
  422476:	fs gs pop rdi
  422479:	je     0x4224a4
  42247b:	and    BYTE PTR [rdi+0x5f],bl
  42247e:	(bad)  
  42247f:	jae    0x4224ee
  422481:	pop    rdi
  422482:	pop    rdi
  422483:	sub    BYTE PTR [rdx],ah
  422485:	movsxd esi,DWORD PTR [rdx+0x65]
  422488:	(bad)  
  422489:	je     0x4224c1
  42248b:	xor    al,0x22
  42248d:	sub    DWORD PTR [rbx],edi
  42248f:	or     ah,BYTE PTR [rbx]
  422491:	imul   esp,DWORD PTR [rsi+0x20],0x4f585f28
  422498:	push   rax
  422499:	rex.RB
  42249a:	rex.WRX pop rdi
  42249c:	push   rbx
  42249d:	rex.WRXB push r13
  42249f:	push   rdx
  4224a0:	rex.XB
  4224a1:	and    BYTE PTR [r14],r15b
  4224a4:	cmp    eax,0x30303720
  4224a9:	sub    DWORD PTR [rdx],ecx
  4224ab:	gs js  0x422522
  4224ae:	gs jb  0x42251f
  4224b1:	and    BYTE PTR [rcx+0x6e],ch
  4224b4:	je     0x4224d6
  4224b6:	outs   dx,DWORD PTR ds:[rsi]
  4224b7:	jo     0x42251e
  4224b9:	outs   dx,BYTE PTR ds:[rsi]
  4224ba:	(bad)  
  4224bb:	je     0x4224e5
  4224bd:	imul   ebp,DWORD PTR [rsi+0x74],0x6f63202c
  4224c4:	outs   dx,BYTE PTR ds:[rsi]
  4224c5:	jae    0x42253b
  4224c7:	and    BYTE PTR [rbx+0x68],ah
  4224ca:	(bad)  
  4224cb:	jb     0x4224ed
  4224cd:	sub    ch,BYTE PTR [rax+riz*1]
  4224d0:	imul   ebp,DWORD PTR [rsi+0x74],0x2e2e202c
  4224d7:	sub    DWORD PTR cs:[rax],esp
  4224da:	pop    rdi
  4224db:	pop    rdi
  4224dc:	(bad)  
  4224dd:	jae    0x42254c
  4224df:	pop    rdi
  4224e0:	pop    rdi
  4224e1:	sub    BYTE PTR [rdx],ah
  4224e3:	outs   dx,DWORD PTR ds:[rsi]
  4224e4:	jo     0x42254b
  4224e6:	outs   dx,BYTE PTR ds:[rsi]
  4224e7:	ss xor al,0x61
  4224ea:	je     0x42250e
  4224ec:	sub    DWORD PTR [rbx],edi
  4224ee:	or     ah,BYTE PTR [rbx]
  4224f0:	outs   dx,BYTE PTR gs:[rsi]
  4224f2:	imul   esp,DWORD PTR fs:[rsi+0xa],0x65230a7d
  4224fa:	outs   dx,BYTE PTR ds:[rsi]
  4224fb:	imul   esp,DWORD PTR fs:[rsi+0xa],0x646e6523
  422503:	imul   esp,DWORD PTR [rsi+0xa],0x0
  42250a:	add    BYTE PTR [rax],al
  42250c:	add    BYTE PTR [rax],al
  42250e:	add    BYTE PTR [rax],al
  422510:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6f20
  422518:	jo     0x42257f
  42251a:	outs   dx,BYTE PTR ds:[rsi]
  42251b:	pop    rbx
  42251c:	and    BYTE PTR [rcx],cl
  42251e:	pop    rbp
  42251f:	outs   dx,DWORD PTR ds:[rsi]
  422520:	jo     0x422587
  422522:	outs   dx,BYTE PTR ds:[rsi]
  422523:	ss xor al,0x0
  422526:	movsxd bp,DWORD PTR [rsi+0x74]
  42252a:	ins    BYTE PTR es:[rdi],dx
  42252b:	cs push 0x41410000
  422531:	rex.X pop rdi
  422533:	(bad)  
  422534:	imul   edi,DWORD PTR [rax+0x5f],0x746e6366
  42253b:	ins    BYTE PTR es:[rdi],dx
  42253c:	add    BYTE PTR [rax],al
  42253e:	add    BYTE PTR [rax],al
  422540:	or     ah,BYTE PTR [rbx]
  422542:	imul   esp,DWORD PTR [rsi+0x20],0x69666564
  422549:	outs   dx,BYTE PTR ds:[rsi]
  42254a:	gs and BYTE PTR fs:[rdi+0x5f],bl
  42254f:	rex.RXB
  422550:	rex.WRX push rbp
  422552:	rex.RXB pop r15
  422554:	pop    rdi
  422555:	and    BYTE PTR [rsi],ah
  422557:	and    BYTE PTR es:[rbp+riz*2+0x66],ah
  42255c:	imul   ebp,DWORD PTR [rsi+0x65],0x4c5f2064
  422563:	push   r10
  422565:	rex.RXB
  422566:	rex.RB pop r15
  422568:	rex.RX
  422569:	rex.WB
  42256a:	rex.WR
  42256b:	rex.RB push r11
  42256d:	and    BYTE PTR [rsi],ah
  42256f:	and    BYTE PTR es:[rbp+riz*2+0x66],ah
  422574:	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f2064
  42257b:	movsxd esi,DWORD PTR [rax+0x6c]
  42257e:	jne    0x4225f3
  422580:	jo     0x4225ee
  422582:	jne    0x4225f7
  422584:	or     ah,BYTE PTR [rbx]
  422586:	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f20
  42258e:	pop    rdi
  42258f:	outs   dx,BYTE PTR ds:[rsi]
  422590:	gs gs fs pop rdi
  422594:	pop    rdi
  422595:	(bad)  
  422596:	imul   edi,DWORD PTR [rax+0x5f],0x69647473
  42259d:	outs   dx,DWORD PTR ds:[rsi]
  42259e:	pop    rdi
  42259f:	push   0x7869665f
  4225a4:	or     ah,BYTE PTR [rbx]
  4225a6:	imul   esp,DWORD PTR [rsi+0x64],0x5f206665
  4225ad:	pop    rdi
  4225ae:	outs   dx,BYTE PTR ds:[rsi]
  4225af:	gs gs fs pop rdi
  4225b3:	pop    rdi
  4225b4:	(bad)  
  4225b5:	imul   edi,DWORD PTR [rax+0x5f],0x69647473
  4225bc:	outs   dx,DWORD PTR ds:[rsi]
  4225bd:	pop    rdi
  4225be:	push   0x7869665f
  4225c3:	or     ah,BYTE PTR [rbx]
  4225c5:	jne    0x422635
  4225c7:	fs data16 and BYTE PTR gs:[rsi+0x73],ah
  4225cd:	gs imul ebp,DWORD PTR gs:[rdi+0xa],0x23
  4225d3:	jne    0x422643
  4225d5:	fs data16 and BYTE PTR gs:[rsi+0x74],ah
  4225db:	gs ins BYTE PTR es:[rdi],dx
  4225dd:	ins    BYTE PTR es:[rdi],dx
  4225de:	outs   dx,DWORD PTR ds:[rsi]
  4225df:	or     ah,BYTE PTR [rbx]
  4225e1:	jne    0x422651
  4225e3:	fs data16 and BYTE PTR gs:[rsi+0x67],ah
  4225e9:	gs je  0x42265c
  4225ec:	outs   dx,DWORD PTR ds:[rsi]
  4225ed:	jae    0x4225f9
  4225ef:	and    esi,DWORD PTR [rbp+0x6e]
  4225f2:	fs data16 and BYTE PTR gs:[rsi+0x73],ah
  4225f8:	gs je  0x42266b
  4225fb:	outs   dx,DWORD PTR ds:[rsi]
  4225fc:	jae    0x422608
  4225fe:	and    esi,DWORD PTR [rbp+0x6e]
  422601:	fs data16 and BYTE PTR gs:[rsi+0x6f],ah
  422607:	jo     0x42266e
  422609:	outs   dx,BYTE PTR ds:[rsi]
  42260a:	or     ah,BYTE PTR [rbx]
  42260c:	jne    0x42267c
  42260e:	fs data16 and BYTE PTR gs:[rsi+0x72],ah
  422614:	outs   dx,DWORD PTR gs:[rsi]
  422616:	jo     0x42267d
  422618:	outs   dx,BYTE PTR ds:[rsi]
  422619:	or     ch,BYTE PTR [rdi]
  42261b:	sub    ah,BYTE PTR [rax]
  42261d:	rex.B ins BYTE PTR es:[rdi],dx
  42261f:	imul   esp,DWORD PTR [rcx+0x73],0x65687420
  422626:	and    BYTE PTR [rbx+0x79],dh
  422629:	ins    DWORD PTR es:[rdi],dx
  42262a:	(bad)  
  42262b:	outs   dx,DWORD PTR ds:[rsi]
  42262c:	ins    BYTE PTR es:[rdi],dx
  42262d:	jae    0x42264f
  42262f:	jne    0x4226a4
  422631:	imul   ebp,DWORD PTR [rsi+0x67],0x6d736120
  422638:	and    BYTE PTR [rdx],ch
  42263a:	(bad)  
  42263b:	or     ah,BYTE PTR [rbp+0x78]
  42263e:	je     0x4226a5
  422640:	jb     0x4226b0
  422642:	and    BYTE PTR [rdx],ah
  422644:	rex.XB and spl,BYTE PTR [r8]
  422647:	jnp    0x422653
  422649:	gs js  0x4226c0
  42264c:	gs jb  0x4226bd
  42264f:	and    BYTE PTR [rcx+0x6e],ch
  422652:	je     0x422674
  422654:	data16 addr32 gs je 0x4226c9
  422659:	outs   dx,DWORD PTR ds:[rsi]
  42265a:	jae    0x422684
  42265c:	rex.RX
  42265d:	rex.WB
  42265e:	rex.WR
  42265f:	and    BYTE PTR [r10],r13b
  422662:	sub    al,0x20
  422664:	data16 jo 0x4226d6
  422667:	jae    0x42269f
  422669:	xor    al,0x5f
  42266b:	je     0x42268d
  42266d:	sub    ch,BYTE PTR [rcx]
  42266f:	and    BYTE PTR [rdi+0x5f],bl
  422672:	(bad)  
  422673:	jae    0x4226e2
  422675:	pop    rdi
  422676:	pop    rdi
  422677:	sub    BYTE PTR [rdx],ah
  422679:	data16 addr32 gs je 0x4226ee
  42267e:	outs   dx,DWORD PTR ds:[rsi]
  42267f:	jae    0x4226b7
  422681:	xor    al,0x22
  422683:	sub    DWORD PTR [rbx],edi
  422685:	or     ah,BYTE PTR [rbp+0x78]
  422688:	je     0x4226ef
  42268a:	jb     0x4226fa
  42268c:	and    BYTE PTR [rsi+0x49],al
  42268f:	rex.WR
  422690:	and    BYTE PTR [r10],r13b
  422693:	outs   dx,WORD PTR ds:[rsi]
  422695:	jo     0x4226fc
  422697:	outs   dx,BYTE PTR ds:[rsi]
  422698:	sub    BYTE PTR [rbx+0x6f],ah
  42269b:	outs   dx,BYTE PTR ds:[rsi]
  42269c:	jae    0x422712
  42269e:	and    BYTE PTR [rbx+0x68],ah
  4226a1:	(bad)  
  4226a2:	jb     0x4226c4
  4226a4:	sub    ch,BYTE PTR [rax+riz*1]
  4226a7:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4226aa:	jae    0x422720
  4226ac:	and    BYTE PTR [rbx+0x68],ah
  4226af:	(bad)  
  4226b0:	jb     0x4226d2
  4226b2:	sub    ch,BYTE PTR [rcx]
  4226b4:	and    BYTE PTR [rdi+0x5f],bl
  4226b7:	(bad)  
  4226b8:	jae    0x422727
  4226ba:	pop    rdi
  4226bb:	pop    rdi
  4226bc:	sub    BYTE PTR [rdx],ah
  4226be:	outs   dx,WORD PTR ds:[rsi]
  4226c0:	jo     0x422727
  4226c2:	outs   dx,BYTE PTR ds:[rsi]
  4226c3:	ss xor al,0x22
  4226c6:	sub    DWORD PTR [rbx],edi
  4226c8:	or     ah,BYTE PTR [rbp+0x78]
  4226cb:	je     0x422732
  4226cd:	jb     0x42273d
  4226cf:	and    BYTE PTR [rsi+0x49],al
  4226d2:	rex.WR
  4226d3:	and    BYTE PTR [r10],r13b
  4226d6:	data16 jb 0x42273e
  4226d9:	outs   dx,DWORD PTR ds:[rsi]
  4226da:	jo     0x422741
  4226dc:	outs   dx,BYTE PTR ds:[rsi]
  4226dd:	sub    BYTE PTR [rbx+0x6f],ah
  4226e0:	outs   dx,BYTE PTR ds:[rsi]
  4226e1:	jae    0x422757
  4226e3:	and    BYTE PTR [rbx+0x68],ah
  4226e6:	(bad)  
  4226e7:	jb     0x422709
  4226e9:	sub    ch,BYTE PTR [rax+riz*1]
  4226ec:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4226ef:	jae    0x422765
  4226f1:	and    BYTE PTR [rbx+0x68],ah
  4226f4:	(bad)  
  4226f5:	jb     0x422717
  4226f7:	sub    ch,BYTE PTR [rax+riz*1]
  4226fa:	rex.RX
  4226fb:	rex.WB
  4226fc:	rex.WR
  4226fd:	and    BYTE PTR [r10],r13b
  422700:	sub    DWORD PTR [rax],esp
  422702:	pop    rdi
  422703:	pop    rdi
  422704:	(bad)  
  422705:	jae    0x422774
  422707:	pop    rdi
  422708:	pop    rdi
  422709:	sub    BYTE PTR [rdx],ah
  42270b:	data16 jb 0x422773
  42270e:	outs   dx,DWORD PTR ds:[rsi]
  42270f:	jo     0x422776
  422711:	outs   dx,BYTE PTR ds:[rsi]
  422712:	ss xor al,0x22
  422715:	sub    DWORD PTR [rbx],edi
  422717:	or     ah,BYTE PTR [rbp+0x78]
  42271a:	je     0x422781
  42271c:	jb     0x42278c
  42271e:	and    BYTE PTR [rcx+0x6e],ch
  422721:	je     0x422743
  422723:	data16 jae 0x42278b
  422726:	imul   ebp,DWORD PTR gs:[rdi+0x28],0x46
  42272b:	rex.WB
  42272c:	rex.WR
  42272d:	and    BYTE PTR [r10],r13b
  422730:	sub    al,0x20
  422732:	outs   dx,DWORD PTR ds:[rsi]
  422733:	data16 data16 ss xor al,0x5f
  422738:	je     0x422766
  42273a:	and    BYTE PTR [rcx+0x6e],ch
  42273d:	je     0x422768
  42273f:	and    BYTE PTR [rdi+0x5f],bl
  422742:	(bad)  
  422743:	jae    0x4227b2
  422745:	pop    rdi
  422746:	pop    rdi
  422747:	sub    BYTE PTR [rdx],ah
  422749:	data16 jae 0x4227b1
  42274c:	imul   ebp,DWORD PTR gs:[rdi+0x36],0x34
  422751:	and    ch,BYTE PTR [rcx]
  422753:	cmp    ecx,DWORD PTR [rdx]
  422755:	gs js  0x4227cc
  422758:	gs jb  0x4227c9
  42275b:	and    BYTE PTR [rcx+0x6e],ch
  42275e:	je     0x422780
  422760:	data16 jae 0x4227c8
  422763:	je     0x4227d5
  422765:	outs   dx,DWORD PTR ds:[rsi]
  422766:	jae    0x422790
  422768:	rex.RX
  422769:	rex.WB
  42276a:	rex.WR
  42276b:	and    BYTE PTR [r10],r13b
  42276e:	sub    al,0x20
  422770:	movsxd ebp,DWORD PTR [rdi+0x6e]
  422773:	jae    0x4227e9
  422775:	and    BYTE PTR [rsi+0x70],ah
  422778:	outs   dx,DWORD PTR ds:[rsi]
  422779:	jae    0x4227b1
  42277b:	xor    al,0x5f
  42277d:	je     0x42279f
  42277f:	sub    ch,BYTE PTR [rcx]
  422781:	and    BYTE PTR [rdi+0x5f],bl
  422784:	(bad)  
  422785:	jae    0x4227f4
  422787:	pop    rdi
  422788:	pop    rdi
  422789:	sub    BYTE PTR [rdx],ah
  42278b:	data16 jae 0x4227f3
  42278e:	je     0x422800
  422790:	outs   dx,DWORD PTR ds:[rsi]
  422791:	jae    0x4227c9
  422793:	xor    al,0x22
  422795:	sub    DWORD PTR [rbx],edi
  422797:	or     ah,BYTE PTR [rbp+0x78]
  42279a:	je     0x422801
  42279c:	jb     0x42280c
  42279e:	and    BYTE PTR [rdi+0x66],ch
  4227a1:	data16 ss xor al,0x5f
  4227a5:	je     0x4227c7
  4227a7:	data16 je 0x42280f
  4227aa:	ins    BYTE PTR es:[rdi],dx
  4227ab:	ins    BYTE PTR es:[rdi],dx
  4227ac:	outs   dx,DWORD PTR ds:[rsi]
  4227ad:	sub    BYTE PTR [rsi+0x49],al
  4227b0:	rex.WR
  4227b1:	and    BYTE PTR [r10],r13b
  4227b4:	sub    DWORD PTR [rax],esp
  4227b6:	pop    rdi
  4227b7:	pop    rdi
  4227b8:	(bad)  
  4227b9:	jae    0x422828
  4227bb:	pop    rdi
  4227bc:	pop    rdi
  4227bd:	sub    BYTE PTR [rdx],ah
  4227bf:	data16 je 0x422827
  4227c2:	ins    BYTE PTR es:[rdi],dx
  4227c3:	ins    BYTE PTR es:[rdi],dx
  4227c4:	outs   dx,DWORD PTR ds:[rsi]
  4227c5:	ss xor al,0x22
  4227c8:	sub    DWORD PTR [rbx],edi
  4227ca:	or     bh,BYTE PTR [rbp+0xa]
  4227cd:	and    esp,DWORD PTR [rbp+0x6e]
  4227d0:	imul   esp,DWORD PTR fs:[rsi+0xa],0x646e6523
  4227d8:	imul   esp,DWORD PTR [rsi+0xa],0x0
  4227df:	add    BYTE PTR [rbp+riz*2+0x66],ah
  4227e3:	imul   ebp,DWORD PTR [rsi+0x65],0x706f6620
  4227ea:	outs   dx,BYTE PTR gs:[rsi]
  4227ec:	and    BYTE PTR [rsi+0x6f],ah
  4227ef:	jo     0x422856
  4227f1:	outs   dx,BYTE PTR ds:[rsi]
  4227f2:	ss xor al,0x0
  4227f5:	jae    0x42286b
  4227f7:	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x41000068
  4227ff:	rex.B
  422800:	rex.X pop rdi
  422802:	(bad)  
  422803:	imul   edi,DWORD PTR [rax+0x5f],0x69647473
  42280a:	outs   dx,DWORD PTR ds:[rsi]
  42280b:	add    BYTE PTR [rdi],ch
  42280d:	(bad)  
  42280e:	imul   ebp,DWORD PTR [rsi+0x2f],0x646573
	...
  42281d:	add    BYTE PTR [rax],al
  42281f:	add    BYTE PTR [rsi+0x5b],bl
  422822:	and    BYTE PTR [rcx],cl
  422824:	pop    rbp
  422825:	sub    ah,BYTE PTR [rbx]
  422827:	pop    rbx
  422828:	and    BYTE PTR [rcx],cl
  42282a:	pop    rbp
  42282b:	sub    ch,BYTE PTR [rcx+0x6e]
  42282e:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  422832:	gs pop rbx
  422834:	and    BYTE PTR [rcx],cl
  422836:	pop    rbp
  422837:	sub    ah,BYTE PTR [rdx]
  422839:	pop    rbx
  42283a:	pop    rsi
  42283b:	(bad)  
  42283c:	pop    rbp
  42283d:	add    BYTE PTR [rax],al
  42283f:	add    BYTE PTR [rdi],ch
  422841:	sub    ah,BYTE PTR [rax]
  422843:	and    BYTE PTR [rdi+rcx*2+0x20],al
  422847:	rex.WRX
  422848:	rex.WRXB push r12
  42284a:	and    BYTE PTR [rbp+0x44],al
  42284d:	rex.WB push r12
  42284f:	and    BYTE PTR [rax+rcx*2+0x49],dl
  422853:	push   rbx
  422854:	and    BYTE PTR [rsi+0x49],al
  422857:	rex.WR
  422858:	rex.RB
  422859:	or     cl,BYTE PTR cs:[rdx]
  42285c:	and    BYTE PTR [rax],ah
  42285e:	and    BYTE PTR [rax],ah
  422860:	rex.WB je 0x422883
  422863:	push   0x62207361
  422868:	gs outs dx,BYTE PTR gs:[rsi]
  42286b:	and    BYTE PTR [rcx+0x75],ah
  42286e:	je     0x4228df
  422870:	sub    eax,0x74696465
  422875:	gs and BYTE PTR fs:[rdx+0x79],ah
  42287a:	and    BYTE PTR [rsi+0x69],ah
  42287d:	js     0x4228e8
  42287f:	outs   dx,BYTE PTR ds:[rsi]
  422880:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  422884:	gs jae 0x4228a7
  422887:	data16 jb 0x4228f9
  42288a:	ins    DWORD PTR es:[rdi],dx
  42288b:	cmp    cl,BYTE PTR [rdx]
  42288d:	or     cl,BYTE PTR [rcx]
  42288f:	and    ah,BYTE PTR [rip+0x73252f73]        # 0x73675808
  422895:	and    cl,BYTE PTR [rdx]
  422897:	or     ah,BYTE PTR [rax]
  422899:	and    BYTE PTR [rax],ah
  42289b:	and    BYTE PTR [rax+rbp*2+0x69],dl
  42289f:	jae    0x4228c1
  4228a1:	push   0x74206461
  4228a6:	outs   dx,DWORD PTR ds:[rsi]
  4228a7:	and    BYTE PTR [rdx+0x65],ah
  4228aa:	and    BYTE PTR [rdi+rbp*2+0x6e],ah
  4228ae:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4228b3:	movsxd ebp,DWORD PTR [rdi+0x72]
  4228b6:	jb     0x42291d
  4228b8:	movsxd esi,DWORD PTR [rax+riz*1+0x6e]
  4228bc:	outs   dx,DWORD PTR ds:[rsi]
  4228bd:	outs   dx,BYTE PTR ds:[rsi]
  4228be:	sub    eax,0x6e617473
  4228c3:	fs (bad) 
  4228c5:	jb     0x42292b
  4228c7:	and    BYTE PTR [rbp+0x73],dh
  4228ca:	(bad)  
  4228cb:	addr32 gs jae 0x4228ef
  4228cf:	imul   ebp,DWORD PTR [rsi+0x20],0xa656874
  4228d6:	and    BYTE PTR [rax],ah
  4228d8:	and    BYTE PTR [rax],ah
  4228da:	outs   dx,DWORD PTR ds:[rsi]
  4228db:	jb     0x422946
  4228dd:	imul   ebp,DWORD PTR [esi+0x61],0x6d202c6c
  4228e5:	(bad)  
  4228e6:	outs   dx,BYTE PTR ds:[rsi]
  4228e7:	jne    0x42294f
  4228e9:	(bad)  
  4228ea:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  4228ee:	gs jb  0x422911
  4228f1:	jae    0x422968
  4228f3:	jo     0x422965
  4228f5:	ins    BYTE PTR es:[rdi],dx
  4228f6:	imul   esp,DWORD PTR [rbp+0x64],0x61656820
  4228fd:	fs gs jb 0x422921
  422901:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x2020
  422908:	sub    ch,BYTE PTR [rdi]
  42290a:	or     cl,BYTE PTR [rdx]
  42290c:	add    BYTE PTR [rax],al
  42290e:	add    BYTE PTR [rax],al
  422910:	imul   di,WORD PTR [rax+0x69],0x636e
  422916:	ins    BYTE PTR es:[rdi],dx
  422917:	and    BYTE PTR [rsi+0x65],dh
  42291a:	jb     0x42298f
  42291c:	imul   ebp,DWORD PTR [rdi+0x6e],0x312e3120
	...
  42293f:	add    BYTE PTR [rbp+0x72],ah
  422942:	jb     0x4229b3
  422944:	jb     0x422966
  422946:	and    eax,0x25282064
  42294b:	jae    0x422976
  42294d:	and    BYTE PTR [rdx+0x65],dh
  422950:	(bad)  
  422951:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x706e6920
  422959:	jne    0x4229cf
  42295b:	or     al,BYTE PTR [rax]
  42295d:	ins    BYTE PTR es:[rdi],dx
  42295e:	(bad)  
  42295f:	(bad)  
  422960:	gs ins BYTE PTR es:[rdi],dx
  422962:	and    BYTE PTR [rax+0x61],dh
  422965:	je     0x4229db
  422967:	gs jb  0x4229d8
  42296a:	add    BYTE PTR [rsi+0x61],ch
  42296d:	ins    DWORD PTR es:[rdi],dx
  42296e:	and    BYTE PTR gs:[rax+0x61],dh
  422972:	je     0x4229e8
  422974:	gs jb  0x4229e5
	...
  42297f:	add    BYTE PTR [rsi+0x69],ah
  422982:	js     0x4229ed
  422984:	outs   dx,BYTE PTR ds:[rsi]
  422985:	movsxd ebp,DWORD PTR [rax+riz*1+0x45]
  422989:	push   rdx
  42298a:	push   rdx
  42298b:	rex.WRXB push r10
  42298d:	cmp    ah,BYTE PTR [rax]
  42298f:	and    BYTE PTR [rbx+0x61],ah
  422992:	outs   dx,BYTE PTR ds:[rsi]
  422993:	outs   dx,BYTE PTR ds:[rsi]
  422994:	outs   dx,DWORD PTR ds:[rsi]
  422995:	je     0x4229b7
  422997:	movsxd ebp,DWORD PTR [rdi+0x6d]
  42299a:	jo     0x422a05
  42299c:	ins    BYTE PTR es:[rdi],dx
  42299d:	and    BYTE PTR gs:[rip+0x65722073],ah        # 0x65b44a17
  4229a4:	addr32 gs js 0x4229c8
  4229a8:	outs   dx,WORD PTR ds:[rsi]
  4229aa:	jb     0x4229cc
  4229ac:	and    eax,0x65090a73
  4229b1:	js     0x422a23
  4229b3:	jb     0x4229d5
  4229b5:	cmp    eax,0x73256020
  4229ba:	(bad)  
  4229bb:	or     cl,BYTE PTR [rcx]
  4229bd:	gs jb  0x422a32
  4229c0:	outs   dx,DWORD PTR ds:[rsi]
  4229c1:	jb     0x4229e3
  4229c3:	and    eax,0xa73
	...
  4229e0:	pop    rsi
  4229e1:	pop    rbx
  4229e2:	and    BYTE PTR [rcx],cl
  4229e4:	pop    rbp
  4229e5:	sub    ah,BYTE PTR [rbx]
  4229e7:	pop    rbx
  4229e8:	and    BYTE PTR [rcx],cl
  4229ea:	pop    rbp
  4229eb:	sub    ch,BYTE PTR [rax]
  4229ed:	imul   esp,DWORD PTR [rsi+0x7c],0x65646669
  4229f4:	data16 jl 0x422a60
  4229f7:	data16 outs dx,BYTE PTR ds:[rsi]
  4229f9:	fs sub WORD PTR gs:[rbx+0x20],bx
  4229ff:	or     DWORD PTR [rbp+0x2b],ebx
	...
  422a3e:	add    BYTE PTR [rax],al
  422a40:	ins    DWORD PTR es:[rdi],dx
  422a41:	(bad)  
  422a42:	movsxd ebp,DWORD PTR [rax+0x69]
  422a45:	outs   dx,BYTE PTR ds:[rsi]
  422a46:	gs pop rdi
  422a48:	outs   dx,BYTE PTR ds:[rsi]
  422a49:	(bad)  
  422a4a:	ins    DWORD PTR es:[rdi],dx
  422a4b:	gs pop rdi
  422a4d:	je     0x422ab4
  422a4f:	jae    0x422ac5
  422a51:	add    BYTE PTR [rax],al
  422a53:	add    BYTE PTR [rax],al
  422a55:	add    BYTE PTR [rax],al
  422a57:	add    BYTE PTR [rsi+0x69],ah
  422a5a:	js     0x422ac5
  422a5c:	outs   dx,BYTE PTR ds:[rsi]
  422a5d:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  422a61:	gs jae 0x422a84
  422a64:	gs jb  0x422ad9
  422a67:	outs   dx,DWORD PTR ds:[rsi]
  422a68:	jb     0x422aa4
  422a6a:	and    BYTE PTR [rax],ah
  422a6c:	je     0x422ad6
  422a6e:	and    BYTE PTR gs:[rax+0x25],ah
  422a72:	jae    0x422a9b
  422a74:	and    BYTE PTR [rsi+0x69],ah
  422a77:	js     0x422a99
  422a79:	je     0x422ae0
  422a7b:	jae    0x422af1
  422a7d:	and    BYTE PTR [rcx+0x73],ch
  422a80:	and    BYTE PTR [rbp+0x6e],dh
  422a83:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  422a87:	outs   dx,BYTE PTR ds:[rsi]
  422a88:	or     al,BYTE PTR [rax]
  422a8a:	ins    DWORD PTR es:[rdi],dx
  422a8b:	(bad)  
  422a8c:	movsxd ebp,DWORD PTR [rax+0x69]
  422a8f:	outs   dx,BYTE PTR ds:[rsi]
  422a90:	gs pop rdi
  422a92:	outs   dx,BYTE PTR ds:[rsi]
  422a93:	(bad)  
  422a94:	ins    DWORD PTR es:[rdi],dx
  422a95:	add    BYTE PTR gs:[rbx+0x74],dh
  422a99:	movsxd ebx,DWORD PTR fs:[rdi+0x30]
  422a9d:	pop    rdi
  422a9e:	imul   ebp,DWORD PTR [rsi+0x5f],0x74737973
  422aa5:	gs ins DWORD PTR es:[rdi],dx
  422aa7:	pop    rdi
  422aa8:	push   0x65646165
  422aad:	jb     0x422b22
	...
  422abf:	add    BYTE PTR [rcx+rax*2+0x52],dl
  422ac3:	rex.RXB
  422ac4:	rex.RB push r12
  422ac6:	pop    rdi
  422ac7:	rex.WRB
  422ac8:	rex.B
  422ac9:	rex.XB
  422aca:	rex.W
  422acb:	rex.WB
  422acc:	rex.WRX
  422acd:	add    BYTE PTR [r15+0x52],r9b
  422ad1:	rex.WB
  422ad2:	rex.RXB
  422ad3:	rex.R
  422ad4:	rex.WB push r10
  422ad6:	add    BYTE PTR [rbx+0x52],dl
  422ad9:	rex.XB
  422ada:	rex.R
  422adb:	rex.WB push r10
  422add:	add    BYTE PTR [rcx+0x4e],cl
  422ae0:	push   rax
  422ae1:	push   rbp
  422ae2:	push   rsp
  422ae3:	add    BYTE PTR [rbp+rax*2+0x53],al
  422ae7:	push   rsp
  422ae8:	rex.R
  422ae9:	rex.WB push r10
  422aeb:	add    BYTE PTR [rsi+0x49],al
  422aee:	rex.WRX
  422aef:	rex.R pop rdi
  422af1:	rex.X
  422af2:	push   r11
  422af4:	add    BYTE PTR [r10+rsi*2+0x75],r14b
  422af9:	add    BYTE PTR gs:[rcx],cl
  422afc:	and    eax,0x66000a73
  422b01:	imul   edi,DWORD PTR [rax+0x69],0x206c636e
  422b08:	rex.RB push r10
  422b0a:	push   rdx
  422b0b:	rex.WRXB push r10
  422b0d:	cmp    ah,BYTE PTR [rax]
  422b0f:	and    BYTE PTR [rip+0x6e652073],ah        # 0x6ea74b88
  422b15:	jbe    0x422b80
  422b17:	jb     0x422b88
  422b19:	outs   dx,BYTE PTR ds:[rsi]
  422b1a:	ins    DWORD PTR es:[rdi],dx
  422b1b:	outs   dx,BYTE PTR gs:[rsi]
  422b1d:	je     0x422b3f
  422b1f:	jbe    0x422b82
  422b21:	jb     0x422b8c
  422b23:	(bad)  
  422b24:	(bad)  
  422b25:	ins    BYTE PTR es:[rdi],dx
  422b26:	and    BYTE PTR gs:[rsi+0x6f],ch
  422b2a:	je     0x422b4c
  422b2c:	fs imul bp,WORD PTR gs:[rsi+0x65],0xa64
  422b34:	gs (bad) 
  422b36:	movsxd ebp,DWORD PTR [rax+0x20]
  422b39:	outs   dx,DWORD PTR ds:[rsi]
  422b3a:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  422b3f:	jae    0x422ba6
  422b41:	and    BYTE PTR [rbp+0x75],ch
  422b44:	jae    0x422bba
  422b46:	and    BYTE PTR [rdx+0x65],ah
  422b49:	and    BYTE PTR [rbp+riz*2+0x66],ah
  422b4d:	imul   ebp,DWORD PTR [rsi+0x65],0xa3a64
  422b54:	push   rsp
  422b55:	rex.RB push r11
  422b57:	push   rsp
  422b58:	pop    rdi
  422b59:	rex.WRB
  422b5a:	rex.WRXB
  422b5b:	rex.R
  422b5c:	add    BYTE PTR [r14+0x49],r8b
  422b60:	rex.WRX
  422b61:	rex.R pop rdi
  422b63:	rex.X
  422b64:	push   r11
  422b66:	add    BYTE PTR [r14+0x45],r10b
  422b6a:	push   rdx
  422b6b:	rex.X
  422b6c:	rex.WRXB push r11
  422b6e:	add    BYTE PTR [r13+0x4e],r9b
  422b72:	pop    rdi
  422b73:	rex.WRX
  422b74:	rex.B
  422b75:	rex.WRB
  422b76:	rex.RB pop r15
  422b78:	push   rax
  422b79:	push   r12
  422b7b:	add    BYTE PTR [rbp+rax*2+0x53],al
  422b7f:	push   rsp
  422b80:	rex.R
  422b81:	rex.WB push r10
  422b83:	add    BYTE PTR [rcx+0x4e],cl
  422b86:	push   rax
  422b87:	push   rbp
  422b88:	push   rsp
  422b89:	add    BYTE PTR [rbx+0x52],dl
  422b8c:	rex.XB
  422b8d:	rex.R
  422b8e:	rex.WB push r10
  422b90:	add    BYTE PTR [rdi+0x52],cl
  422b93:	rex.WB
  422b94:	rex.RXB
  422b95:	rex.R
  422b96:	rex.WB push r10
  422b98:	add    BYTE PTR [rcx+rax*2+0x52],dl
  422b9c:	rex.RXB
  422b9d:	rex.RB push r12
  422b9f:	pop    rdi
  422ba0:	rex.WRB
  422ba1:	rex.B
  422ba2:	rex.XB
  422ba3:	rex.W
  422ba4:	rex.WB
  422ba5:	rex.WRX
  422ba6:	add    BYTE PTR [r8],r8b
	...
  422bbd:	add    BYTE PTR [rax],al
  422bbf:	add    BYTE PTR [rdx],dh
  422bc1:	add    esi,edi
  422bc3:	call   QWORD PTR [rax+0x1]
  422bc6:	(bad)  
  422bc7:	call   QWORD PTR [rax+0x1]
  422bca:	(bad)  
  422bcb:	call   QWORD PTR [rax+0x1]
  422bce:	(bad)  
  422bcf:	call   QWORD PTR [rax+0x1]
  422bd2:	(bad)  
  422bd3:	call   QWORD PTR [rax+0x1]
  422bd6:	(bad)  
  422bd7:	inc    DWORD PTR [rbx]
  422bd9:	add    esi,edi
  422bdb:	call   QWORD PTR [rax+0x1]
  422bde:	(bad)  
  422bdf:	inc    DWORD PTR [rdx+0x1]
  422be2:	(bad)  
  422be3:	push   QWORD PTR [rdx]
  422be5:	add    esi,edi
  422be7:	push   QWORD PTR [rdx]
  422be9:	add    esi,edi
  422beb:	push   QWORD PTR [rdx]
  422bed:	add    esi,edi
  422bef:	push   QWORD PTR [rdx]
  422bf1:	add    esi,edi
  422bf3:	jmp    QWORD PTR [rax+0x50fffe01]
  422bf9:	add    esi,edi
  422bfb:	call   QWORD PTR [rax+0x1]
  422bfe:	(bad)  
  422bff:	call   QWORD PTR [rax+0x1]
  422c02:	(bad)  
  422c03:	call   QWORD PTR [rax+0x1]
  422c06:	(bad)  
  422c07:	call   QWORD PTR [rax+0x1]
  422c0a:	(bad)  
  422c0b:	call   QWORD PTR [rax+0x1]
  422c0e:	(bad)  
  422c0f:	call   QWORD PTR [rax+0x1]
  422c12:	(bad)  
  422c13:	jmp    QWORD PTR [rax+0x1]
  422c16:	(bad)  
  422c17:	call   QWORD PTR [rax+0x1]
  422c1a:	(bad)  
  422c1b:	call   QWORD PTR [rax+0x1]
  422c1e:	(bad)  
  422c1f:	call   QWORD PTR [rax+0x1]
  422c22:	(bad)  
  422c23:	call   QWORD PTR [rax+0x1]
  422c26:	(bad)  
  422c27:	push   QWORD PTR [rdx]
  422c29:	add    esi,edi
  422c2b:	push   QWORD PTR [rdx]
  422c2d:	add    esi,edi
  422c2f:	push   QWORD PTR [rdx]
  422c31:	add    esi,edi
  422c33:	push   QWORD PTR [rdx]
  422c35:	add    esi,edi
  422c37:	(bad)  
  422c38:	mov    ecx,0xecfffe04
  422c3d:	(bad)  
  422c3e:	(bad)  
  422c3f:	(bad)  
  422c40:	fadd   DWORD PTR [rsi]
  422c42:	(bad)  
  422c43:	jmp    FWORD PTR [rax+0x58fffe06]
  422c49:	(bad)  
  422c4a:	(bad)  
  422c4b:	dec    eax
  422c4d:	add    eax,0x5b8fffe
  422c52:	(bad)  
  422c53:	(bad)  
  422c54:	mov    eax,0xa8fffe05
  422c59:	add    eax,0x4b9fffe
  422c5e:	(bad)  
  422c5f:	(bad)  
  422c60:	mov    ecx,0xb9fffe04
  422c65:	add    al,0xfe
  422c67:	(bad)  
  422c68:	mov    ecx,0x48fffe04
  422c6d:	add    eax,0x548fffe
  422c72:	(bad)  
  422c73:	jmp    FWORD PTR [rax+0x4]
  422c76:	(bad)  
  422c77:	jmp    FWORD PTR [rax+0x4]
  422c7a:	(bad)  
  422c7b:	dec    DWORD PTR [rax+0x5]
  422c7e:	(bad)  
  422c7f:	dec    DWORD PTR [rax+0x5]
  422c82:	(bad)  
  422c83:	dec    DWORD PTR [rax+0x5]
  422c86:	(bad)  
  422c87:	(bad)  
  422c88:	mov    ecx,0x28fffe04
  422c8d:	add    eax,0x548fffe
  422c92:	(bad)  
  422c93:	call   FWORD PTR [rax+0x4]
  422c96:	(bad)  
  422c97:	(bad)  
  422c98:	sti    
  422c99:	add    al,0xfe
  422c9b:	dec    eax
  422c9d:	add    al,0xfe
  422c9f:	(bad)  
  422ca0:	mov    ecx,0xb9fffe04
  422ca5:	add    al,0xfe
  422ca7:	(bad)  
  422ca8:	mov    ecx,0xb9fffe04
  422cad:	add    al,0xfe
  422caf:	inc    DWORD PTR [rdx+0xb]
  422cb2:	(bad)  
  422cb3:	(bad)  
  422cb4:	mov    ebp,0xf0fffe0b
  422cb9:	adc    eax,0xa9efffe
  422cbe:	(bad)  
  422cbf:	(bad)  
  422cc0:	jg     0x422cd8
  422cc2:	(bad)  
  422cc3:	(bad)  
  422cc4:	jg     0x422cdc
  422cc6:	(bad)  
  422cc7:	(bad)  
  422cc8:	in     al,dx
  422cc9:	adc    al,0xfe
  422ccb:	call   FWORD PTR [rbx+0x14]
  422cce:	(bad)  
  422ccf:	inc    DWORD PTR [rax+0x35fffe13]
  422cd5:	adc    edi,esi
  422cd7:	call   QWORD PTR [rax]
  422cd9:	adc    edi,esi
  422cdb:	call   QWORD PTR [rax+0x12]
  422cde:	(bad)  
  422cdf:	call   QWORD PTR [rcx+rdx*1-0x2]
  422ce3:	inc    ebx
  422ce5:	or     esi,edi
  422ce7:	inc    ebx
  422ce9:	or     esi,edi
  422ceb:	push   rsp
  422ced:	or     eax,0xf82fffe
  422cf2:	(bad)  
  422cf3:	inc    DWORD PTR [rdx-0x20001f3]
  422cf9:	adc    dh,bh
  422cfb:	push   QWORD PTR [rax+rdx*1-0x2]
  422cff:	call   FWORD PTR [rdx+0x17]
  422d02:	(bad)  
  422d03:	inc    DWORD PTR [rbp+0x10]
  422d06:	(bad)  
  422d07:	jmp    rsp
  422d09:	sbb    esi,edi
  422d0b:	jmp    QWORD PTR [rax+0x7ffffe19]
  422d11:	sbb    dh,bh
  422d13:	push   rax
  422d15:	(bad)  
  422d16:	(bad)  
  422d17:	call   QWORD PTR [rax]
  422d19:	sbb    esi,edi
  422d1b:	jmp    FWORD PTR [rsi+0x15]
  422d1e:	(bad)  
  422d1f:	(bad)  
  422d20:	jg     0x422d34
  422d22:	(bad)  
  422d23:	push   rsp
  422d25:	(bad)  
  422d26:	(bad)  
  422d27:	jmp    QWORD PTR [rcx+0x6c]
  422d2a:	outs   dx,BYTE PTR ds:[rsi]
  422d2b:	jne    0x422d9a
  422d2d:	add    BYTE PTR [rcx+0x6c],ah
  422d30:	jo     0x422d9a
  422d32:	(bad)  
  422d33:	add    BYTE PTR [rdx+0x6c],ah
  422d36:	(bad)  
  422d37:	outs   dx,BYTE PTR ds:[rsi]
  422d38:	imul   eax,DWORD PTR [rax],0x63
  422d3b:	outs   dx,BYTE PTR ds:[rsi]
  422d3c:	je     0x422db0
  422d3e:	ins    BYTE PTR es:[rdi],dx
  422d3f:	add    BYTE PTR [rcx+rbp*2+0x67],ah
  422d43:	imul   esi,DWORD PTR [rax+rax*1+0x67],0x68706172
  422d4b:	add    BYTE PTR [rdi+rbp*2+0x77],ch
  422d4f:	gs jb  0x422d52
  422d52:	jo     0x422dc6
  422d54:	imul   ebp,DWORD PTR [rsi+0x74],0x6e757000
  422d5b:	movsxd esi,DWORD PTR [rax+rax*1+0x73]
  422d5f:	jo     0x422dc2
  422d61:	movsxd esp,DWORD PTR [rbp+0x0]
  422d64:	jne    0x422dd6
  422d66:	jo     0x422dcd
  422d68:	jb     0x422d6a
  422d6a:	js     0x422dd0
  422d6c:	imul   esp,DWORD PTR [rdi+0x69],0x74
  422d73:	add    dl,dl
  422d75:	xor    bh,dh
  422d77:	dec    esi
  422d79:	sub    al,0xfe
  422d7b:	dec    esi
  422d7d:	sub    al,0xfe
  422d7f:	dec    esi
  422d81:	sub    al,0xfe
  422d83:	dec    esi
  422d85:	sub    al,0xfe
  422d87:	dec    esi
  422d89:	sub    al,0xfe
  422d8b:	dec    esi
  422d8d:	sub    al,0xfe
  422d8f:	dec    esi
  422d91:	sub    al,0xfe
  422d93:	dec    esi
  422d95:	sub    al,0xfe
  422d97:	dec    esi
  422d99:	sub    al,0xfe
  422d9b:	dec    esi
  422d9d:	sub    al,0xfe
  422d9f:	dec    esi
  422da1:	sub    al,0xfe
  422da3:	dec    esi
  422da5:	sub    al,0xfe
  422da7:	dec    esi
  422da9:	sub    al,0xfe
  422dab:	dec    esi
  422dad:	sub    al,0xfe
  422daf:	dec    esi
  422db1:	sub    al,0xfe
  422db3:	dec    esi
  422db5:	sub    al,0xfe
  422db7:	dec    esi
  422db9:	sub    al,0xfe
  422dbb:	dec    esi
  422dbd:	sub    al,0xfe
  422dbf:	dec    esi
  422dc1:	sub    al,0xfe
  422dc3:	dec    esi
  422dc5:	sub    al,0xfe
  422dc7:	dec    esi
  422dc9:	sub    al,0xfe
  422dcb:	dec    esi
  422dcd:	sub    al,0xfe
  422dcf:	dec    esi
  422dd1:	sub    al,0xfe
  422dd3:	dec    esi
  422dd5:	sub    al,0xfe
  422dd7:	dec    esi
  422dd9:	sub    al,0xfe
  422ddb:	(bad)  
  422ddc:	call   0xffffffffcf422c13
  422de1:	sub    al,0xfe
  422de3:	dec    esi
  422de5:	sub    al,0xfe
  422de7:	dec    esi
  422de9:	sub    al,0xfe
  422deb:	call   rax
  422ded:	xor    edi,esi
  422def:	push   QWORD PTR [rcx-0x180001cc]
  422df5:	sub    eax,0x2dd6fffe
  422dfa:	(bad)  
  422dfb:	dec    esi
  422dfd:	sub    al,0xfe
  422dff:	dec    esi
  422e01:	sub    al,0xfe
  422e03:	push   rcx
  422e05:	(bad)  
  422e06:	(bad)  
  422e07:	dec    esi
  422e09:	sub    al,0xfe
  422e0b:	dec    esi
  422e0d:	sub    al,0xfe
  422e0f:	dec    esi
  422e11:	sub    al,0xfe
  422e13:	dec    esi
  422e15:	sub    al,0xfe
  422e17:	dec    esi
  422e19:	sub    al,0xfe
  422e1b:	dec    esi
  422e1d:	sub    al,0xfe
  422e1f:	dec    esi
  422e21:	sub    al,0xfe
  422e23:	dec    esi
  422e25:	sub    al,0xfe
  422e27:	dec    esi
  422e29:	sub    al,0xfe
  422e2b:	dec    esi
  422e2d:	sub    al,0xfe
  422e2f:	dec    esi
  422e31:	sub    al,0xfe
  422e33:	dec    esi
  422e35:	sub    al,0xfe
  422e37:	dec    esi
  422e39:	sub    al,0xfe
  422e3b:	dec    esi
  422e3d:	sub    al,0xfe
  422e3f:	dec    esi
  422e41:	sub    al,0xfe
  422e43:	dec    esi
  422e45:	sub    al,0xfe
  422e47:	call   rsi
  422e49:	sub    eax,0x2ccefffe
  422e4e:	(bad)  
  422e4f:	dec    esi
  422e51:	sub    al,0xfe
  422e53:	dec    esi
  422e55:	sub    al,0xfe
  422e57:	dec    esi
  422e59:	sub    al,0xfe
  422e5b:	dec    esi
  422e5d:	sub    al,0xfe
  422e5f:	dec    esi
  422e61:	sub    al,0xfe
  422e63:	dec    esi
  422e65:	sub    al,0xfe
  422e67:	dec    esi
  422e69:	sub    al,0xfe
  422e6b:	dec    esi
  422e6d:	sub    al,0xfe
  422e6f:	dec    esi
  422e71:	sub    al,0xfe
  422e73:	dec    esi
  422e75:	sub    al,0xfe
  422e77:	dec    esi
  422e79:	sub    al,0xfe
  422e7b:	dec    esi
  422e7d:	sub    al,0xfe
  422e7f:	dec    esi
  422e81:	sub    al,0xfe
  422e83:	dec    esi
  422e85:	sub    al,0xfe
  422e87:	dec    esi
  422e89:	sub    al,0xfe
  422e8b:	dec    esi
  422e8d:	sub    al,0xfe
  422e8f:	dec    esi
  422e91:	sub    al,0xfe
  422e93:	dec    esi
  422e95:	sub    al,0xfe
  422e97:	dec    esi
  422e99:	sub    al,0xfe
  422e9b:	dec    esi
  422e9d:	sub    al,0xfe
  422e9f:	dec    esi
  422ea1:	sub    al,0xfe
  422ea3:	dec    esi
  422ea5:	sub    al,0xfe
  422ea7:	dec    esi
  422ea9:	sub    al,0xfe
  422eab:	dec    esi
  422ead:	sub    al,0xfe
  422eaf:	dec    esi
  422eb1:	sub    al,0xfe
  422eb3:	dec    esi
  422eb5:	sub    al,0xfe
  422eb7:	inc    DWORD PTR [rcx+0x15fffe30]
  422ebd:	xor    esi,edi
  422ebf:	dec    esi
  422ec1:	sub    al,0xfe
  422ec3:	dec    DWORD PTR [rdi+0x31]
  422ec6:	(bad)  
  422ec7:	dec    esi
  422ec9:	sub    al,0xfe
  422ecb:	dec    esi
  422ecd:	sub    al,0xfe
  422ecf:	dec    esi
  422ed1:	sub    al,0xfe
  422ed3:	dec    esi
  422ed5:	sub    al,0xfe
  422ed7:	dec    esi
  422ed9:	sub    al,0xfe
  422edb:	dec    esi
  422edd:	sub    al,0xfe
  422edf:	dec    esi
  422ee1:	sub    al,0xfe
  422ee3:	dec    esi
  422ee5:	sub    al,0xfe
  422ee7:	dec    esi
  422ee9:	sub    al,0xfe
  422eeb:	dec    esi
  422eed:	sub    al,0xfe
  422eef:	dec    esi
  422ef1:	sub    al,0xfe
  422ef3:	dec    esi
  422ef5:	sub    al,0xfe
  422ef7:	dec    esi
  422ef9:	sub    al,0xfe
  422efb:	dec    esi
  422efd:	sub    al,0xfe
  422eff:	dec    esi
  422f01:	sub    al,0xfe
  422f03:	dec    esi
  422f05:	sub    al,0xfe
  422f07:	dec    esi
  422f09:	sub    al,0xfe
  422f0b:	dec    esi
  422f0d:	sub    al,0xfe
  422f0f:	dec    esi
  422f11:	sub    al,0xfe
  422f13:	dec    esi
  422f15:	sub    al,0xfe
  422f17:	dec    esi
  422f19:	sub    al,0xfe
  422f1b:	dec    esi
  422f1d:	sub    al,0xfe
  422f1f:	dec    esi
  422f21:	sub    al,0xfe
  422f23:	dec    esi
  422f25:	sub    al,0xfe
  422f27:	dec    esi
  422f29:	sub    al,0xfe
  422f2b:	dec    esi
  422f2d:	sub    al,0xfe
  422f2f:	dec    esi
  422f31:	sub    al,0xfe
  422f33:	dec    esi
  422f35:	sub    al,0xfe
  422f37:	(bad)  
  422f38:	fsubr  DWORD PTR [rbx]
  422f3a:	(bad)  
  422f3b:	push   QWORD PTR [rsi]
  422f3d:	xor    bh,dh
  422f3f:	push   QWORD PTR [rbx-0xf0001c7]
  422f45:	xor    edi,esi
  422f47:	jmp    QWORD PTR [rdi-0xb0001cd]
  422f4d:	sub    bh,dh
  422f4f:	jmp    QWORD PTR [rax-0xb0001c7]
  422f55:	sub    bh,dh
  422f57:	push   rsp
  422f59:	sub    bh,dh
  422f5b:	push   rsp
  422f5d:	sub    bh,dh
  422f5f:	push   rsp
  422f61:	sub    bh,dh
  422f63:	push   rsp
  422f65:	sub    bh,dh
  422f67:	dec    DWORD PTR [rsi-0x710001c8]
  422f6d:	cmp    dh,bh
  422f6f:	dec    DWORD PTR [rsi-0x710001c8]
  422f75:	cmp    dh,bh
  422f77:	dec    DWORD PTR [rsi-0x710001c8]
  422f7d:	cmp    dh,bh
  422f7f:	dec    DWORD PTR [rsi-0x710001c8]
  422f85:	cmp    dh,bh
  422f87:	dec    DWORD PTR [rsi-0xb0001c8]
  422f8d:	sub    bh,dh
  422f8f:	push   rsp
  422f91:	sub    bh,dh
  422f93:	push   rdx
  422f95:	(bad)  
  422f96:	(bad)  
  422f97:	push   rsp
  422f99:	sub    bh,dh
  422f9b:	call   QWORD PTR [rsi+0x37]
  422f9e:	(bad)  
  422f9f:	jmp    QWORD PTR [rax-0xb0001c7]
  422fa5:	sub    bh,dh
  422fa7:	push   rsp
  422fa9:	sub    bh,dh
  422fab:	(bad)  
  422fac:	mov    edx,0xf4fffe36
  422fb1:	sub    bh,dh
  422fb3:	push   rsp
  422fb5:	sub    bh,dh
  422fb7:	push   rsp
  422fb9:	sub    bh,dh
  422fbb:	push   rsp
  422fbd:	sub    bh,dh
  422fbf:	push   rsp
  422fc1:	sub    bh,dh
  422fc3:	push   rsp
  422fc5:	sub    bh,dh
  422fc7:	push   rsp
  422fc9:	sub    bh,dh
  422fcb:	push   rsp
  422fcd:	sub    bh,dh
  422fcf:	push   rsp
  422fd1:	sub    bh,dh
  422fd3:	push   rsp
  422fd5:	sub    bh,dh
  422fd7:	push   rsp
  422fd9:	sub    bh,dh
  422fdb:	push   rsp
  422fdd:	sub    bh,dh
  422fdf:	push   rsp
  422fe1:	sub    bh,dh
  422fe3:	push   rsp
  422fe5:	sub    bh,dh
  422fe7:	push   rsp
  422fe9:	sub    bh,dh
  422feb:	push   rsp
  422fed:	sub    bh,dh
  422fef:	push   rsp
  422ff1:	sub    bh,dh
  422ff3:	push   rsp
  422ff5:	sub    bh,dh
  422ff7:	push   rsp
  422ff9:	sub    bh,dh
  422ffb:	push   rsp
  422ffd:	sub    bh,dh
  422fff:	call   FWORD PTR [rbx]
  423001:	ss (bad) 
  423003:	push   rsp
  423005:	sub    bh,dh
  423007:	push   rsp
  423009:	sub    bh,dh
  42300b:	push   rsp
  42300d:	sub    bh,dh
  42300f:	push   rsp
  423011:	sub    bh,dh
  423013:	push   rsp
  423015:	sub    bh,dh
  423017:	push   rsp
  423019:	sub    bh,dh
  42301b:	push   rsp
  42301d:	sub    bh,dh
  42301f:	push   rsp
  423021:	sub    bh,dh
  423023:	(bad)  
  423024:	jg     0x42305b
  423026:	(bad)  
  423027:	push   rsp
  423029:	sub    bh,dh
  42302b:	jmp    rbx
  42302d:	xor    al,0xfe
  42302f:	push   rsp
  423031:	sub    bh,dh
  423033:	push   rsp
  423035:	sub    bh,dh
  423037:	push   rsp
  423039:	sub    bh,dh
  42303b:	push   rsp
  42303d:	sub    bh,dh
  42303f:	push   rsp
  423041:	sub    bh,dh
  423043:	push   rsp
  423045:	sub    bh,dh
  423047:	push   rsp
  423049:	sub    bh,dh
  42304b:	push   rsp
  42304d:	sub    bh,dh
  42304f:	push   rsp
  423051:	sub    bh,dh
  423053:	push   rsp
  423055:	sub    bh,dh
  423057:	push   rsp
  423059:	sub    bh,dh
  42305b:	push   rsp
  42305d:	sub    bh,dh
  42305f:	push   rsp
  423061:	sub    bh,dh
  423063:	push   rsp
  423065:	sub    bh,dh
  423067:	push   rsp
  423069:	sub    bh,dh
  42306b:	push   rsp
  42306d:	sub    bh,dh
  42306f:	push   rsp
  423071:	sub    bh,dh
  423073:	push   rsp
  423075:	sub    bh,dh
  423077:	push   rsp
  423079:	sub    bh,dh
  42307b:	push   rsp
  42307d:	sub    bh,dh
  42307f:	inc    DWORD PTR [rax+0x34]
  423082:	(bad)  
  423083:	push   rsp
  423085:	sub    bh,dh
  423087:	push   rsp
  423089:	sub    bh,dh
  42308b:	push   rsp
  42308d:	sub    bh,dh
  42308f:	call   FWORD PTR [rsp+rsi*1]
  423092:	(bad)  
  423093:	inc    DWORD PTR [rsi]
  423095:	xor    al,0xfe
  423097:	dec    DWORD PTR [rsi+0x6f]
  42309a:	and    BYTE PTR [rax+0x72],dh
  42309d:	gs jbe 0x423109
  4230a0:	outs   dx,DWORD PTR ds:[rsi]
  4230a1:	jne    0x423116
  4230a3:	and    BYTE PTR [rdx+0x65],dh
  4230a6:	addr32 jne 0x423115
  4230a9:	(bad)  
  4230aa:	jb     0x4230cc
  4230ac:	gs js  0x42311f
  4230af:	jb     0x423116
  4230b1:	jae    0x423126
  4230b3:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d654d00
  4230ba:	outs   dx,DWORD PTR ds:[rsi]
  4230bb:	jb     0x423136
  4230bd:	and    BYTE PTR [rbp+0x78],ah
  4230c0:	push   0x74737561
  4230c5:	gs add BYTE PTR fs:[rbx+0x75],dl
  4230ca:	movsxd esp,DWORD PTR [rbx+0x65]
  4230cd:	jae    0x423142
  4230cf:	add    BYTE PTR [rsi+0x6f],cl
  4230d2:	and    BYTE PTR [rbp+0x61],ch
  4230d5:	je     0x42313a
  4230d7:	push   0x766e4900
  4230dc:	(bad)  
  4230dd:	ins    BYTE PTR es:[rdi],dx
  4230de:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x6c756765
  4230e6:	(bad)  
  4230e7:	jb     0x423109
  4230e9:	gs js  0x42315c
  4230ec:	jb     0x423153
  4230ee:	jae    0x423163
  4230f0:	imul   ebp,DWORD PTR [rdi+0x6e],0x766e4900
  4230f7:	(bad)  
  4230f8:	ins    BYTE PTR es:[rdi],dx
  4230f9:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x616c6c6f
  423101:	je     0x42316c
  423103:	outs   dx,DWORD PTR ds:[rsi]
  423104:	outs   dx,BYTE PTR ds:[rsi]
  423105:	and    BYTE PTR [rbx+0x68],ah
  423108:	(bad)  
  423109:	jb     0x42316c
  42310b:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  42310f:	add    BYTE PTR [rcx+0x6e],cl
  423112:	jbe    0x423175
  423114:	ins    BYTE PTR es:[rdi],dx
  423115:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x61726168
  42311d:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  423121:	and    BYTE PTR [rbx+0x6c],ah
  423124:	(bad)  
  423125:	jae    0x42319a
  423127:	and    BYTE PTR [rsi+0x61],ch
  42312a:	ins    DWORD PTR es:[rdi],dx
  42312b:	add    BYTE PTR gs:[rdx+rsi*2+0x61],dl
  423130:	imul   ebp,DWORD PTR [rcx+rbp*2+0x6e],0x61622067
  423138:	movsxd ebp,DWORD PTR [rbx+0x73]
  42313b:	ins    BYTE PTR es:[rdi],dx
  42313c:	(bad)  
  42313d:	jae    0x4231a7
  42313f:	add    BYTE PTR [rcx+0x6e],cl
  423142:	jbe    0x4231a5
  423144:	ins    BYTE PTR es:[rdi],dx
  423145:	imul   esp,DWORD PTR [rax+riz*1+0x62],0x206b6361
  42314d:	jb     0x4231b4
  42314f:	data16 gs jb 0x4231b8
  423153:	outs   dx,BYTE PTR ds:[rsi]
  423154:	movsxd esp,DWORD PTR [rbp+0x0]
  423157:	push   rbp
  423158:	outs   dx,BYTE PTR ds:[rsi]
  423159:	ins    DWORD PTR es:[rdi],dx
  42315a:	(bad)  
  42315b:	je     0x4231c0
  42315d:	push   0x5b206465
  423162:	and    BYTE PTR [rdi+0x72],ch
  423165:	and    BYTE PTR [rbx+0x5e],bl
  423168:	add    BYTE PTR [rbp+0x6e],dl
  42316b:	ins    DWORD PTR es:[rdi],dx
  42316c:	(bad)  
  42316d:	je     0x4231d2
  42316f:	push   0x28206465
  423174:	and    BYTE PTR [rdi+0x72],ch
  423177:	and    BYTE PTR [rax+rbp*1+0x0],bl
  42317b:	push   rbp
  42317c:	outs   dx,BYTE PTR ds:[rsi]
  42317d:	ins    DWORD PTR es:[rdi],dx
  42317e:	(bad)  
  42317f:	je     0x4231e4
  423181:	push   0x5c206465
  423186:	jnp    0x423188
  423188:	rex.WB outs dx,BYTE PTR ds:[rsi]
  42318a:	jbe    0x4231ed
  42318c:	ins    BYTE PTR es:[rdi],dx
  42318d:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x65746e6f
  423195:	outs   dx,BYTE PTR ds:[rsi]
  423196:	je     0x4231b8
  423198:	outs   dx,DWORD PTR ds:[rsi]
  423199:	data16 and BYTE PTR [rbx+rdi*2+0x5c],bl
  42319e:	jge    0x4231a0
  4231a0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4231a2:	jbe    0x423205
  4231a4:	ins    BYTE PTR es:[rdi],dx
  4231a5:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x65676e61
  4231ad:	and    BYTE PTR [rbp+0x6e],ah
  4231b0:	add    BYTE PTR fs:[rax],al
  4231b3:	add    BYTE PTR [rax],al
  4231b5:	add    BYTE PTR [rax],al
  4231b7:	add    BYTE PTR [rcx+0x6e],cl
  4231ba:	jbe    0x42321d
  4231bc:	ins    BYTE PTR es:[rdi],dx
  4231bd:	imul   esp,DWORD PTR [rax+riz*1+0x70],0x65636572
  4231c5:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x67657220
  4231cd:	jne    0x42323b
  4231cf:	(bad)  
  4231d0:	jb     0x4231f2
  4231d2:	gs js  0x423245
  4231d5:	jb     0x42323c
  4231d7:	jae    0x42324c
  4231d9:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  4231e0:	push   rax
  4231e1:	jb     0x423248
  4231e3:	ins    DWORD PTR es:[rdi],dx
  4231e4:	(bad)  
  4231e5:	je     0x42325c
  4231e7:	jb     0x42324e
  4231e9:	and    BYTE PTR [rbp+0x6e],ah
  4231ec:	and    BYTE PTR fs:[rdi+0x66],ch
  4231f0:	and    BYTE PTR [rdx+0x65],dh
  4231f3:	addr32 jne 0x423262
  4231f6:	(bad)  
  4231f7:	jb     0x423219
  4231f9:	gs js  0x42326c
  4231fc:	jb     0x423263
  4231fe:	jae    0x423273
  423200:	imul   ebp,DWORD PTR [rdi+0x6e],0x67655200
  423207:	jne    0x423275
  423209:	(bad)  
  42320a:	jb     0x42322c
  42320c:	gs js  0x42327f
  42320f:	jb     0x423276
  423211:	jae    0x423286
  423213:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f6f7420
  42321a:	and    BYTE PTR [rdx+0x69],ah
  42321d:	add    BYTE PTR [ebp+0x6e],dl
  423221:	ins    DWORD PTR es:[rdi],dx
  423222:	(bad)  
  423223:	je     0x423288
  423225:	push   0x29206465
  42322a:	and    BYTE PTR [rdi+0x72],ch
  42322d:	and    BYTE PTR [rcx+rbp*1+0x0],bl
	...
  42323d:	add    BYTE PTR [rax],al
  42323f:	add    al,cl
  423241:	xor    BYTE PTR [rdx+0x0],al
  423244:	add    BYTE PTR [rax],al
  423246:	add    BYTE PTR [rax],al
  423248:	shl    BYTE PTR [rax],1
  42324a:	rex.X add BYTE PTR [rax],al
  42324d:	add    BYTE PTR [rax],al
  42324f:	add    cl,bl
  423251:	xor    BYTE PTR [rdx+0x0],al
  423254:	add    BYTE PTR [rax],al
  423256:	add    BYTE PTR [rax],al
  423258:	hlt    
  423259:	xor    BYTE PTR [rdx+0x0],al
  42325c:	add    BYTE PTR [rax],al
  42325e:	add    BYTE PTR [rax],al
  423260:	adc    BYTE PTR [rcx],dh
  423262:	rex.X add BYTE PTR [rax],al
  423265:	add    BYTE PTR [rax],al
  423267:	add    BYTE PTR [rip+0x4231],ch        # 0x42749e
  42326d:	add    BYTE PTR [rax],al
  42326f:	add    BYTE PTR [rax+0x31],al
  423272:	rex.X add BYTE PTR [rax],al
  423275:	add    BYTE PTR [rax],al
  423277:	add    BYTE PTR [rdi+0x31],dl
  42327a:	rex.X add BYTE PTR [rax],al
  42327d:	add    BYTE PTR [rax],al
  42327f:	add    BYTE PTR [rcx+0x31],ch
  423282:	rex.X add BYTE PTR [rax],al
  423285:	add    BYTE PTR [rax],al
  423287:	add    BYTE PTR [rbx+0x31],bh
  42328a:	rex.X add BYTE PTR [rax],al
  42328d:	add    BYTE PTR [rax],al
  42328f:	add    BYTE PTR [rax+0x4231],cl
  423295:	add    BYTE PTR [rax],al
  423297:	add    BYTE PTR [rax+0x4231],ah
  42329d:	add    BYTE PTR [rax],al
  42329f:	add    BYTE PTR [rdi+0x4230],dh
  4232a5:	add    BYTE PTR [rax],al
  4232a7:	add    BYTE PTR [rax+0x4231],bh
  4232ad:	add    BYTE PTR [rax],al
  4232af:	add    al,ah
  4232b1:	xor    DWORD PTR [rdx+0x0],eax
  4232b4:	add    BYTE PTR [rax],al
  4232b6:	add    BYTE PTR [rax],al
  4232b8:	add    al,0x32
  4232ba:	rex.X add BYTE PTR [rax],al
  4232bd:	add    BYTE PTR [rax],al
  4232bf:	add    BYTE PTR [rdi],bl
  4232c1:	xor    al,BYTE PTR [rdx+0x0]
	...
  423300:	add    BYTE PTR [rcx],al
  423302:	add    al,BYTE PTR [rbx]
  423304:	add    al,0x5
  423306:	(bad)  
  423307:	(bad)  
  423308:	or     BYTE PTR [rcx],cl
  42330a:	or     cl,BYTE PTR [rbx]
  42330c:	or     al,0xd
  42330e:	(bad)  
  42330f:	movups xmm2,XMMWORD PTR [rcx]
  423312:	adc    dl,BYTE PTR [rbx]
  423314:	adc    al,0x15
  423316:	(bad)  
  423317:	(bad)  
  423318:	sbb    BYTE PTR [rcx],bl
  42331a:	sbb    bl,BYTE PTR [rbx]
  42331c:	sbb    al,0x1d
  42331e:	(bad)  
  42331f:	(bad)  
  423320:	and    BYTE PTR [rcx],ah
  423322:	and    ah,BYTE PTR [rbx]
  423324:	and    al,0x25
  423326:	es (bad) 
  423328:	sub    BYTE PTR [rcx],ch
  42332a:	sub    ch,BYTE PTR [rbx]
  42332c:	sub    al,0x2d
  42332e:	cs (bad) 
  423330:	xor    BYTE PTR [rcx],dh
  423332:	xor    dh,BYTE PTR [rbx]
  423334:	xor    al,0x35
  423336:	ss (bad) 
  423338:	cmp    BYTE PTR [rcx],bh
  42333a:	cmp    bh,BYTE PTR [rbx]
  42333c:	cmp    al,0x3d
  42333e:	ds (bad) 
  423340:	rex
  423341:	rex.B
  423342:	rex.X
  423343:	rex.XB
  423344:	rex.R
  423345:	rex.RB
  423346:	rex.RX
  423347:	rex.RXB
  423348:	rex.W
  423349:	rex.WB
  42334a:	rex.WX
  42334b:	rex.WXB
  42334c:	rex.WR
  42334d:	rex.WRB
  42334e:	rex.WRX
  42334f:	rex.WRXB push r8
  423351:	push   rcx
  423352:	push   rdx
  423353:	push   rbx
  423354:	push   rsp
  423355:	push   rbp
  423356:	push   rsi
  423357:	push   rdi
  423358:	pop    rax
  423359:	pop    rcx
  42335a:	pop    rdx
  42335b:	pop    rbx
  42335c:	pop    rsp
  42335d:	pop    rbp
  42335e:	pop    rsi
  42335f:	pop    rdi
  423360:	(bad)  
  423361:	rex.B
  423362:	rex.X
  423363:	rex.XB
  423364:	rex.R
  423365:	rex.RB
  423366:	rex.RX
  423367:	rex.RXB
  423368:	rex.W
  423369:	rex.WB
  42336a:	rex.WX
  42336b:	rex.WXB
  42336c:	rex.WR
  42336d:	rex.WRB
  42336e:	rex.WRX
  42336f:	rex.WRXB push r8
  423371:	push   rcx
  423372:	push   rdx
  423373:	push   rbx
  423374:	push   rsp
  423375:	push   rbp
  423376:	push   rsi
  423377:	push   rdi
  423378:	pop    rax
  423379:	pop    rcx
  42337a:	pop    rdx
  42337b:	jnp    0x4233f9
  42337d:	jge    0x4233fd
  42337f:	jg     0x423301
  423381:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
  42338b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
  423392:	xchg   edx,eax
  423393:	xchg   ebx,eax
  423394:	xchg   esp,eax
  423395:	xchg   ebp,eax
  423396:	xchg   esi,eax
  423397:	xchg   edi,eax
  423398:	cwde   
  423399:	cdq    
  42339a:	(bad)  
  42339b:	fwait
  42339c:	pushf  
  42339d:	popf   
  42339e:	sahf   
  42339f:	lahf   
  4233a0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
  4233a9:	test   eax,0xadacabaa
  4233ae:	scas   al,BYTE PTR es:[rdi]
  4233af:	scas   eax,DWORD PTR es:[rdi]
  4233b0:	mov    al,0xb1
  4233b2:	mov    dl,0xb3
  4233b4:	mov    ah,0xb5
  4233b6:	mov    dh,0xb7
  4233b8:	mov    eax,0xbcbbbab9
  4233bd:	mov    ebp,0xc1c0bfbe
  4233c2:	ret    0xc4c3
  4233c5:	(bad)
  4233c8:	enter  0xcac9,0xcb
  4233cc:	int3   
  4233cd:	int    0xce
  4233cf:	iret   
  4233d0:	rcl    cl,1
  4233d2:	rcl    bl,cl
  4233d4:	(bad)  
  4233d5:	(bad)  
  4233d6:	(bad)  
  4233d7:	xlat   BYTE PTR ds:[rbx]
  4233d8:	fcomp  st(1)
  4233da:	fcmovu st,st(3)
  4233dc:	(bad)  
  4233de:	(bad)  
  4233e0:	loopne 0x4233c3
  4233e2:	loop   0x4233c7
  4233e4:	in     al,0xe5
  4233e6:	out    0xe7,al
  4233e8:	call   0xffffffffed2e1ed6
  4233ed:	in     eax,dx
  4233ee:	out    dx,al
  4233ef:	out    dx,eax
  4233f0:	lock icebp 
  4233f2:	repnz repz hlt 
  4233f5:	cmc    
  4233f6:	div    bh
  4233f8:	clc    
  4233f9:	stc    
  4233fa:	cli    
  4233fb:	sti    
  4233fc:	cld    
  4233fd:	std    
  4233fe:	(bad)  
  4233ff:	inc    DWORD PTR [rax]
  423401:	add    DWORD PTR [rdx],eax
  423403:	add    eax,DWORD PTR [rax*1+0x9080706]
  42340a:	or     cl,BYTE PTR [rbx]
  42340c:	or     al,0xd
  42340e:	(bad)  
  42340f:	movups xmm2,XMMWORD PTR [rcx]
  423412:	adc    dl,BYTE PTR [rbx]
  423414:	adc    al,0x15
  423416:	(bad)  
  423417:	(bad)  
  423418:	sbb    BYTE PTR [rcx],bl
  42341a:	sbb    bl,BYTE PTR [rbx]
  42341c:	sbb    al,0x1d
  42341e:	(bad)  
  42341f:	(bad)  
  423420:	and    BYTE PTR [rcx],ah
  423422:	and    ah,BYTE PTR [rbx]
  423424:	and    al,0x25
  423426:	es (bad) 
  423428:	sub    BYTE PTR [rcx],ch
  42342a:	sub    ch,BYTE PTR [rbx]
  42342c:	sub    al,0x2d
  42342e:	cs (bad) 
  423430:	xor    BYTE PTR [rcx],dh
  423432:	xor    dh,BYTE PTR [rbx]
  423434:	xor    al,0x35
  423436:	ss (bad) 
  423438:	cmp    BYTE PTR [rcx],bh
  42343a:	cmp    bh,BYTE PTR [rbx]
  42343c:	cmp    al,0x3d
  42343e:	ds (bad) 
  423440:	rex (bad) 
  423442:	(bad)
  423447:	addr32 push 0x6c6b6a69
  42344d:	ins    DWORD PTR es:[rdi],dx
  42344e:	outs   dx,BYTE PTR ds:[rsi]
  42344f:	outs   dx,DWORD PTR ds:[rsi]
  423450:	jo     0x4234c3
  423452:	jb     0x4234c7
  423454:	je     0x4234cb
  423456:	jbe    0x4234cf
  423458:	js     0x4234d3
  42345a:	jp     0x4234b7
  42345c:	pop    rsp
  42345d:	pop    rbp
  42345e:	pop    rsi
  42345f:	pop    rdi
  423460:	(bad)  
  423461:	(bad)  
  423462:	(bad)
  423467:	addr32 push 0x6c6b6a69
  42346d:	ins    DWORD PTR es:[rdi],dx
  42346e:	outs   dx,BYTE PTR ds:[rsi]
  42346f:	outs   dx,DWORD PTR ds:[rsi]
  423470:	jo     0x4234e3
  423472:	jb     0x4234e7
  423474:	je     0x4234eb
  423476:	jbe    0x4234ef
  423478:	js     0x4234f3
  42347a:	jp     0x4234f7
  42347c:	jl     0x4234fb
  42347e:	jle    0x4234ff
  423480:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
  423487:	xchg   DWORD PTR [rax-0x73747577],ecx
  42348d:	lea    ecx,[rsi-0x6d6e6f71]
  423493:	xchg   ebx,eax
  423494:	xchg   esp,eax
  423495:	xchg   ebp,eax
  423496:	xchg   esi,eax
  423497:	xchg   edi,eax
  423498:	cwde   
  423499:	cdq    
  42349a:	(bad)  
  42349b:	fwait
  42349c:	pushf  
  42349d:	popf   
  42349e:	sahf   
  42349f:	lahf   
  4234a0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
  4234a9:	test   eax,0xadacabaa
  4234ae:	scas   al,BYTE PTR es:[rdi]
  4234af:	scas   eax,DWORD PTR es:[rdi]
  4234b0:	mov    al,0xb1
  4234b2:	mov    dl,0xb3
  4234b4:	mov    ah,0xb5
  4234b6:	mov    dh,0xb7
  4234b8:	mov    eax,0xbcbbbab9
  4234bd:	mov    ebp,0xc1c0bfbe
  4234c2:	ret    0xc4c3
  4234c5:	(bad)
  4234c8:	enter  0xcac9,0xcb
  4234cc:	int3   
  4234cd:	int    0xce
  4234cf:	iret   
  4234d0:	rcl    cl,1
  4234d2:	rcl    bl,cl
  4234d4:	(bad)  
  4234d5:	(bad)  
  4234d6:	(bad)  
  4234d7:	xlat   BYTE PTR ds:[rbx]
  4234d8:	fcomp  st(1)
  4234da:	fcmovu st,st(3)
  4234dc:	(bad)  
  4234de:	(bad)  
  4234e0:	loopne 0x4234c3
  4234e2:	loop   0x4234c7
  4234e4:	in     al,0xe5
  4234e6:	out    0xe7,al
  4234e8:	call   0xffffffffed2e1fd6
  4234ed:	in     eax,dx
  4234ee:	out    dx,al
  4234ef:	out    dx,eax
  4234f0:	lock icebp 
  4234f2:	repnz repz hlt 
  4234f5:	cmc    
  4234f6:	div    bh
  4234f8:	clc    
  4234f9:	stc    
  4234fa:	cli    
  4234fb:	sti    
  4234fc:	cld    
  4234fd:	std    
  4234fe:	(bad)  
  4234ff:	inc    DWORD PTR [rdx]
  423501:	or     BYTE PTR [rdx],al
  423503:	add    BYTE PTR [rdx],al
  423505:	add    BYTE PTR [rdx],al
  423507:	add    BYTE PTR [rdx],al
  423509:	add    BYTE PTR [rdx],al
  42350b:	add    BYTE PTR [rdx],al
  42350d:	add    BYTE PTR [rdx],al
  42350f:	add    BYTE PTR [rdx],al
  423511:	add    BYTE PTR [rbx+0x8],al
  423514:	rex.X add al,0x42
  423517:	or     BYTE PTR [rdx+0x8],al
  42351a:	rex.X add al,0x2
  42351d:	add    BYTE PTR [rdx],al
  42351f:	add    BYTE PTR [rdx],al
  423521:	add    BYTE PTR [rdx],al
  423523:	add    BYTE PTR [rdx],al
  423525:	add    BYTE PTR [rdx],al
  423527:	add    BYTE PTR [rdx],al
  423529:	add    BYTE PTR [rdx],al
  42352b:	add    BYTE PTR [rdx],al
  42352d:	add    BYTE PTR [rdx],al
  42352f:	add    BYTE PTR [rdx],al
  423531:	add    BYTE PTR [rdx],al
  423533:	add    BYTE PTR [rdx],al
  423535:	add    BYTE PTR [rdx],al
  423537:	add    BYTE PTR [rdx],al
  423539:	add    BYTE PTR [rdx],al
  42353b:	add    BYTE PTR [rdx],al
  42353d:	add    BYTE PTR [rdx],al
  42353f:	add    BYTE PTR [rcx+0x8],dl
  423542:	xor    BYTE PTR [rax],al
  423544:	xor    BYTE PTR [rax],al
  423546:	xor    BYTE PTR [rax],al
  423548:	xor    BYTE PTR [rax],al
  42354a:	xor    BYTE PTR [rax],al
  42354c:	xor    BYTE PTR [rax],al
  42354e:	xor    BYTE PTR [rax],al
  423550:	xor    BYTE PTR [rax],al
  423552:	xor    BYTE PTR [rax],al
  423554:	xor    BYTE PTR [rax],al
  423556:	xor    BYTE PTR [rax],al
  423558:	xor    BYTE PTR [rax],al
  42355a:	xor    BYTE PTR [rax],al
  42355c:	xor    BYTE PTR [rax],al
  42355e:	xor    BYTE PTR [rax],al
  423560:	adc    al,0x1
  423562:	adc    al,0x1
  423564:	adc    al,0x1
  423566:	adc    al,0x1
  423568:	adc    al,0x1
  42356a:	adc    al,0x1
  42356c:	adc    al,0x1
  42356e:	adc    al,0x1
  423570:	adc    al,0x1
  423572:	adc    al,0x1
  423574:	xor    BYTE PTR [rax],al
  423576:	xor    BYTE PTR [rax],al
  423578:	xor    BYTE PTR [rax],al
  42357a:	xor    BYTE PTR [rax],al
  42357c:	xor    BYTE PTR [rax],al
  42357e:	xor    BYTE PTR [rax],al
  423580:	xor    BYTE PTR [rax],al
  423582:	nop
  423583:	add    edx,DWORD PTR [rax-0x6ffc6ffd]
  423589:	add    edx,DWORD PTR [rax-0x6ffc6ffd]
  42358f:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  423595:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  42359b:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  4235a1:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  4235a7:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  4235ad:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  4235b3:	add    dl,BYTE PTR [rax+0x30003002]
  4235b9:	add    BYTE PTR [rax],dh
  4235bb:	add    BYTE PTR [rax],dh
  4235bd:	add    BYTE PTR [rax],dh
  4235bf:	add    dh,BYTE PTR [rax]
  4235c1:	add    BYTE PTR [rax],bl
  4235c3:	add    ebx,DWORD PTR [rax]
  4235c5:	add    ebx,DWORD PTR [rax]
  4235c7:	add    ebx,DWORD PTR [rax]
  4235c9:	add    ebx,DWORD PTR [rax]
  4235cb:	add    ebx,DWORD PTR [rax]
  4235cd:	add    ebx,DWORD PTR [rax]
  4235cf:	add    bl,BYTE PTR [rax]
  4235d1:	add    bl,BYTE PTR [rax]
  4235d3:	add    bl,BYTE PTR [rax]
  4235d5:	add    bl,BYTE PTR [rax]
  4235d7:	add    bl,BYTE PTR [rax]
  4235d9:	add    bl,BYTE PTR [rax]
  4235db:	add    bl,BYTE PTR [rax]
  4235dd:	add    bl,BYTE PTR [rax]
  4235df:	add    bl,BYTE PTR [rax]
  4235e1:	add    bl,BYTE PTR [rax]
  4235e3:	add    bl,BYTE PTR [rax]
  4235e5:	add    bl,BYTE PTR [rax]
  4235e7:	add    bl,BYTE PTR [rax]
  4235e9:	add    bl,BYTE PTR [rax]
  4235eb:	add    bl,BYTE PTR [rax]
  4235ed:	add    bl,BYTE PTR [rax]
  4235ef:	add    bl,BYTE PTR [rax]
  4235f1:	add    bl,BYTE PTR [rax]
  4235f3:	add    bl,BYTE PTR [rax]
  4235f5:	add    dh,BYTE PTR [rax]
  4235f7:	add    BYTE PTR [rax],dh
  4235f9:	add    BYTE PTR [rax],dh
  4235fb:	add    BYTE PTR [rax],dh
  4235fd:	add    BYTE PTR [rdx],al
	...
  4236ff:	add    BYTE PTR [rdx],bh
  423701:	and    BYTE PTR [rax],al
  423703:	add    BYTE PTR [rax],al
  423705:	add    BYTE PTR [rax],al
  423707:	add    BYTE PTR [rdx],cl
  423709:	and    eax,0x6f732573
  42370e:	jne    0x423784
  423710:	and    BYTE PTR [rdi+0x66],ch
  423713:	and    BYTE PTR [rbp+0x65],ch
  423716:	ins    DWORD PTR es:[rdi],dx
  423717:	outs   dx,DWORD PTR ds:[rsi]
  423718:	jb     0x423793
  42371a:	and    BYTE PTR [rcx+0x6c],ah
  42371d:	ins    BYTE PTR es:[rdi],dx
  42371e:	outs   dx,DWORD PTR ds:[rsi]
  42371f:	movsxd esp,DWORD PTR [rcx+0x74]
  423722:	imul   ebp,DWORD PTR [rsi+0x67],0x756c2520
  423729:	and    BYTE PTR [rdx+0x79],ah
  42372c:	je     0x423793
  42372e:	jae    0x42373a
	...
  423740:	jne    0x4237b0
  423742:	outs   dx,DWORD PTR fs:[rsi]
  423744:	movsxd esi,DWORD PTR [rbp+0x6d]
  423747:	outs   dx,BYTE PTR gs:[rsi]
  423749:	je     0x4237b0
  42374b:	and    BYTE PTR fs:[rbp+0x72],ah
  42374f:	jb     0x4237c0
  423751:	jb     0x423773
  423753:	and    esp,DWORD PTR [rip+0x64]        # 0x4237bd
  423759:	add    BYTE PTR [rax],al
  42375b:	add    BYTE PTR [rax],al
  42375d:	add    BYTE PTR [rax],al
  42375f:	add    BYTE PTR [rax+0x78],al
  423762:	rex.X add BYTE PTR [rax],al
  423765:	add    BYTE PTR [rax],al
  423767:	add    BYTE PTR [rax+0x73],al
  42376a:	rex.X add BYTE PTR [rax],al
  42376d:	add    BYTE PTR [rax],al
  42376f:	add    al,dh
  423771:	xchg   ebx,eax
  423772:	add    BYTE PTR [rax],al
	...
  42377d:	add    BYTE PTR [rax],al
  42377f:	add    BYTE PTR [rcx+0x72],al
  423782:	addr32 jne 0x4237f2
  423785:	outs   dx,BYTE PTR gs:[rsi]
  423787:	je     0x4237a9
  423789:	outs   dx,DWORD PTR fs:[rsi]
  42378b:	ins    DWORD PTR es:[rdi],dx
  42378c:	(bad)  
  42378d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  423794:	jb     0x4237b6
  423796:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  42379a:	rex.B
  42379b:	rex.WB
  42379c:	rex.WRX sub QWORD PTR [rax],r8
  42379f:	rex.B jb 0x423809
  4237a2:	jne    0x423811
  4237a4:	outs   dx,BYTE PTR gs:[rsi]
  4237a6:	je     0x4237c8
  4237a8:	jae    0x423813
  4237aa:	outs   dx,BYTE PTR ds:[rsi]
  4237ab:	addr32 jne 0x42381a
  4237ae:	(bad)  
  4237af:	jb     0x42381a
  4237b1:	je     0x42382c
  4237b3:	and    BYTE PTR [rax],ch
  4237b5:	push   rbx
  4237b6:	rex.WB
  4237b7:	rex.RXB
  4237b8:	rex.WRX sub QWORD PTR [rax],r8
  4237bb:	add    BYTE PTR [rax],al
  4237bd:	add    BYTE PTR [rax],al
  4237bf:	add    BYTE PTR [rdi+0x76],cl
  4237c2:	gs jb  0x42382b
  4237c5:	ins    BYTE PTR es:[rdi],dx
  4237c6:	outs   dx,DWORD PTR ds:[rsi]
  4237c7:	ja     0x4237e9
  4237c9:	jb     0x42382c
  4237cb:	outs   dx,BYTE PTR ds:[rsi]
  4237cc:	and    BYTE PTR gs:[ebp+0x72],ah
  4237d1:	jb     0x423842
  4237d3:	jb     0x4237f5
  4237d5:	sub    BYTE PTR [rdi+0x56],cl
  4237d8:	rex.RB push r10
  4237da:	rex.RX
  4237db:	rex.WR
  4237dc:	rex.WRXB push r15
  4237de:	sub    DWORD PTR [rax],eax
  4237e0:	push   rax
  4237e1:	(bad)  
  4237e2:	jb     0x423858
  4237e4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  4237eb:	jae    0x42380d
  4237ed:	outs   dx,DWORD PTR ds:[rsi]
  4237ee:	data16 and BYTE PTR [rbx+0x69],dh
  4237f2:	outs   dx,BYTE PTR ds:[esi]
  4237f4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4237fb:	and    BYTE PTR gs:[rax],ch
  4237fe:	push   rax
  4237ff:	rex.WR
  423800:	rex.WRXB push r11
  423802:	push   rbx
  423803:	sub    DWORD PTR [rax],eax
  423805:	add    BYTE PTR [rax],al
  423807:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  42380b:	(bad)  
  42380c:	ins    BYTE PTR es:[rdi],dx
  42380d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  423811:	jae    0x423833
  423813:	outs   dx,DWORD PTR ds:[rsi]
  423814:	data16 and BYTE PTR [rbx+0x69],dh
  423818:	outs   dx,BYTE PTR ds:[esi]
  42381a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  423821:	and    BYTE PTR gs:[rax],ch
  423824:	push   rsp
  423825:	rex.WR
  423826:	rex.WRXB push r11
  423828:	push   rbx
  423829:	sub    DWORD PTR [rax],eax
  42382b:	add    BYTE PTR [rax],al
  42382d:	add    BYTE PTR [rax],al
  42382f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  423833:	and    BYTE PTR [rdx+0x65],dh
  423836:	jae    0x4238ad
  423838:	ins    BYTE PTR es:[rdi],dx
  423839:	je     0x42385b
  42383b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  423842:	jae    0x4238b1
  423844:	(bad)  
  423845:	ins    BYTE PTR es:[rdi],dx
  423846:	ins    BYTE PTR es:[rdi],dx
  423847:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42384b:	(bad)  
  42384c:	and    BYTE PTR gs:[rdx+0x65],dh
  423850:	jo     0x4238c4
  423852:	gs jae 0x4238ba
  423855:	outs   dx,BYTE PTR ds:[rsi]
  423856:	je     0x4238bd
  423858:	and    BYTE PTR fs:[rax],ch
  42385b:	push   rbp
  42385c:	rex.WRX
  42385d:	rex.R
  42385e:	rex.RB push r10
  423860:	rex.RX
  423861:	rex.WR
  423862:	rex.WRXB push r15
  423864:	sub    DWORD PTR [rax],eax
  423866:	push   rbp
  423867:	outs   dx,BYTE PTR ds:[rsi]
  423868:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42386c:	outs   dx,BYTE PTR ds:[rsi]
  42386d:	and    BYTE PTR [rbp+0x72],ah
  423870:	jb     0x4238e1
  423872:	jb     0x423874
  423874:	add    BYTE PTR [rax],al
  423876:	add    BYTE PTR [rax],al
  423878:	pop    rdi
  423879:	ins    DWORD PTR es:[rdi],dx
  42387a:	(bad)  
  42387b:	je     0x4238e5
  42387d:	gs jb  0x4238f2
  423880:	sub    BYTE PTR [rcx],ch
  423882:	cmp    ah,BYTE PTR [rax]
  423884:	and    eax,0x6e692073
  423889:	and    BYTE PTR [rip+0x67252873],ah        # 0x67676102
  42388f:	sub    al,0x20
  423891:	and    eax,0x20202967
  423896:	sub    BYTE PTR [rdx+0x65],dh
  423899:	je     0x423911
  42389b:	(bad)  
  42389c:	ins    BYTE PTR es:[rdi],dx
  42389d:	cmp    eax,0xa296725
  4238a2:	add    BYTE PTR [rax],al
  4238a4:	sbb    al,0x5d
  4238a6:	(bad)  
  4238a7:	call   FWORD PTR [rbp+0x5c]
  4238aa:	(bad)  
  4238ab:	dec    esp
  4238ad:	pop    rsp
  4238ae:	(bad)  
  4238af:	(bad)  
  4238b0:	fcomp  QWORD PTR [rsi+rdi*8-0x1]
  4238b4:	in     al,dx
  4238b5:	pop    rsp
  4238b6:	(bad)  
  4238b7:	(bad)  
  4238b8:	cld    
  4238b9:	pop    rsp
  4238ba:	(bad)  
  4238bb:	dec    DWORD PTR [rbx*2+0x694dfffe]
  4238c2:	outs   dx,BYTE PTR ds:[rsi]
  4238c3:	addr32 ja 0x4238f3
  4238c6:	ja     0x4238fe
  4238c8:	xor    al,0x20
  4238ca:	jb     0x423941
  4238cc:	outs   dx,BYTE PTR ds:[rsi]
  4238cd:	je     0x423938
  4238cf:	ins    DWORD PTR es:[rdi],dx
  4238d0:	and    BYTE PTR gs:[rsi+0x61],ah
  4238d4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  4238dc:	add    BYTE PTR [rax],al
  4238de:	add    BYTE PTR [rax],al
  4238e0:	rex.B
  4238e1:	fs fs jb 0x42394a
  4238e5:	jae    0x42395a
  4238e7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61aa595d
  4238ed:	jae    0x42390f
  4238ef:	outs   dx,BYTE PTR ds:[rsi]
  4238f0:	outs   dx,DWORD PTR ds:[rsi]
  4238f1:	and    BYTE PTR [rcx+0x6d],ch
  4238f4:	(bad)  
  4238f5:	addr32 gs sub eax,0x74636573
  4238fc:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  423903:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  42390a:	jne    0x423971
  42390c:	jb     0x423987
  42390e:	and    BYTE PTR [rsi+0x61],ah
  423911:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  423919:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a45983
  42391f:	je     0x423986
  423921:	jae    0x423943
  423923:	(bad)  
  423924:	je     0x423946
  423926:	(bad)  
  423927:	fs fs jb 0x423990
  42392b:	jae    0x4239a0
  42392d:	and    BYTE PTR [rip+0x70],ah        # 0x4239a3
  423933:	add    BYTE PTR [rax],al
  423935:	add    BYTE PTR [rax],al
  423937:	add    BYTE PTR [rax],ah
  423939:	and    BYTE PTR [rsi+0x69],dl
  42393c:	jb     0x4239b2
  42393e:	jne    0x4239a1
  423940:	ins    BYTE PTR es:[rdi],dx
  423941:	push   rax
  423942:	jb     0x4239b3
  423944:	je     0x4239ab
  423946:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  42394a:	(bad)  
  42394b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  423953:	push   0x646f6320
  423958:	and    BYTE PTR gs:[rax],dh
  42395b:	js     0x423982
  42395d:	js     0x42395f
  42395f:	add    BYTE PTR [rax],ah
  423961:	and    BYTE PTR [rbp+0x6e],dl
  423964:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  423968:	outs   dx,BYTE PTR ds:[rsi]
  423969:	and    BYTE PTR [rax+0x73],dh
  42396c:	gs jne 0x4239d3
  42396f:	outs   dx,DWORD PTR ds:[rsi]
  423970:	and    BYTE PTR [rdx+0x65],dh
  423973:	ins    BYTE PTR es:[rdi],dx
  423974:	outs   dx,DWORD PTR ds:[rsi]
  423975:	movsxd esp,DWORD PTR [rcx+0x74]
  423978:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  42397f:	je     0x4239f0
  423981:	movsxd ebp,DWORD PTR [rdi+0x6c]
  423984:	and    BYTE PTR [rsi+0x65],dh
  423987:	jb     0x4239fc
  423989:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  423990:	or     al,BYTE PTR [rax]
  423992:	add    BYTE PTR [rax],al
  423994:	add    BYTE PTR [rax],al
  423996:	add    BYTE PTR [rax],al
  423998:	and    BYTE PTR [rax],ah
  42399a:	push   rbp
  42399b:	outs   dx,BYTE PTR ds:[rsi]
  42399c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4239a0:	outs   dx,BYTE PTR ds:[rsi]
  4239a1:	and    BYTE PTR [rax+0x73],dh
  4239a4:	gs jne 0x423a0b
  4239a7:	outs   dx,DWORD PTR ds:[rsi]
  4239a8:	and    BYTE PTR [rdx+0x65],dh
  4239ab:	ins    BYTE PTR es:[rdi],dx
  4239ac:	outs   dx,DWORD PTR ds:[rsi]
  4239ad:	movsxd esp,DWORD PTR [rcx+0x74]
  4239b0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4239b7:	and    BYTE PTR [rbx+0x69],dh
  4239ba:	jp     0x423a21
  4239bc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4c6826
	...
  4239ce:	add    BYTE PTR [rax],al
  4239d0:	cs jo  0x423a37
  4239d3:	(bad)  
  4239d4:	je     0x423a37
	...
  4239de:	add    BYTE PTR [rax],al
  4239e0:	(bad)  
  4239e1:	xor    BYTE PTR [rcx+0x0],al
	...
  4239f0:	jo     0x423a22
  4239f2:	add    BYTE PTR [r8],al
	...
  4239fd:	add    BYTE PTR [rax],al
  4239ff:	add    BYTE PTR [rax],dh
  423a01:	lods   eax,DWORD PTR ds:[rsi]
  423a02:	add    BYTE PTR [rax],al
	...
  423a0d:	add    BYTE PTR [rax],al
  423a0f:	add    BYTE PTR [rax+0x41],al
  423a12:	rex.X add BYTE PTR [rax],al
	...
  423a1d:	add    BYTE PTR [rax],al
  423a1f:	add    BYTE PTR [rax+0x41],al
  423a22:	rex.X add BYTE PTR [rax],al
	...
  423a2d:	add    BYTE PTR [rax],al
  423a2f:	add    BYTE PTR [rax+0x37],dh
  423a32:	rex.X add BYTE PTR [rax],al
	...
  423a41:	add    BYTE PTR [rax+0x0],al
	...
  423a50:	or     al,0x84
  423a52:	rex.X add BYTE PTR [rax],al
	...
  423a5d:	add    BYTE PTR [rax],al
  423a5f:	add    BYTE PTR [rsp+rax*4],bh
  423a62:	rex.X add BYTE PTR [rax],al
	...
  423a6d:	add    BYTE PTR [rax],al
  423a6f:	add    BYTE PTR [rsp+rax*4+0x42],bl
	...
  423a7f:	add    BYTE PTR [rsp+rax*4+0x42],dh
	...
  423a8f:	add    BYTE PTR [rax+0x4279],al
	...
  423a9d:	add    BYTE PTR [rax],al
  423a9f:	add    BYTE PTR [rax+0x7d],bh
  423aa2:	rex.X add BYTE PTR [rax],al
	...
  423aad:	add    BYTE PTR [rax],al
  423aaf:	add    BYTE PTR [rax+0x7d],dh
  423ab2:	rex.X add BYTE PTR [rax],al
	...
  423abd:	add    BYTE PTR [rax],al
  423abf:	add    BYTE PTR [rax+0x7d],ah
  423ac2:	rex.X add BYTE PTR [rax],al
	...
  423acd:	add    BYTE PTR [rax],al
  423acf:	add    BYTE PTR [rax+0x7d],ch
  423ad2:	rex.X add BYTE PTR [rax],al
	...
  423ae1:	nop
  423ae2:	rex.X add BYTE PTR [rax],al
	...
  423aed:	add    BYTE PTR [rax],al
  423aef:	add    BYTE PTR [rax],dl
  423af1:	nop
  423af2:	rex.X add BYTE PTR [rax],al
	...
  423afd:	add    BYTE PTR [rax],al
  423aff:	add    BYTE PTR [rax],bl
  423b01:	nop
  423b02:	rex.X add BYTE PTR [rax],al
	...
  423b0d:	add    BYTE PTR [rax],al
  423b0f:	add    BYTE PTR [rax],dh
  423b11:	nop
  423b12:	rex.X add BYTE PTR [rax],al
	...
  423b1d:	add    BYTE PTR [rax],al
  423b1f:	add    BYTE PTR [rax],dl
  423b21:	jae    0x423b65
	...
  423b2f:	add    BYTE PTR [rax+0x79],dl
  423b32:	rex.X add BYTE PTR [rax],al
	...
  423b3d:	add    BYTE PTR [rax],al
  423b3f:	add    BYTE PTR [rax+0x409d],al
	...
  423b4d:	add    BYTE PTR [rax],al
  423b4f:	add    al,dl
  423b51:	xchg   esp,eax
  423b52:	add    BYTE PTR [rax],al
	...
  423b61:	jns    0x423ba5
	...
  423b6f:	add    BYTE PTR [rax],al
  423b71:	xor    eax,0x42
	...
  423b7e:	add    BYTE PTR [rax],al
  423b80:	add    BYTE PTR [rdx+rax*2],dh
	...
  423b8f:	add    BYTE PTR [rax],ch
  423b91:	jno    0x423bd5
	...
  423b9f:	add    BYTE PTR [rax],dh
  423ba1:	jns    0x423be5
	...
  423baf:	add    BYTE PTR [rax],ah
  423bb1:	jae    0x423bf5
	...
  423bbf:	add    BYTE PTR [rax],bl
  423bc1:	jns    0x423c05
	...
  423bcf:	add    BYTE PTR [rcx+rdi*2],dl
  423bd2:	rex.X add BYTE PTR [rax],al
	...
  423bdd:	add    BYTE PTR [rax],al
  423bdf:	add    BYTE PTR [rax],dl
  423be1:	jns    0x423c25
	...
  423bef:	add    BYTE PTR [rax],al
  423bf1:	jno    0x423c35
	...
  423bff:	add    al,ch
  423c01:	jo     0x423c45
	...
  423c0f:	add    BYTE PTR [rax],cl
  423c11:	jno    0x423c55
	...
  423c1f:	add    BYTE PTR [rax],ah
  423c21:	jno    0x423c65
	...
  423c2f:	add    al,bh
  423c31:	jo     0x423c75
	...
  423c3f:	add    BYTE PTR [rax],bl
  423c41:	jno    0x423c85
	...
  423c4f:	add    BYTE PTR [rax],dl
  423c51:	jno    0x423c95
	...
  423c5f:	add    al,dh
  423c61:	jo     0x423ca5
	...
  423c6f:	add    BYTE PTR [rax],al
  423c71:	xor    BYTE PTR [rcx+0x0],al
	...
  423c80:	rex.RXB
  423c81:	rex.XB
  423c82:	rex.XB cmp spl,BYTE PTR [r8]
  423c85:	sub    BYTE PTR [rdi+0x4e],al
  423c88:	push   rbp
  423c89:	sub    DWORD PTR [rax],esp
  423c8b:	xor    al,0x2e
  423c8d:	cmp    DWORD PTR [rsi],ebp
  423c8f:	xor    al,0x0
	...
  423c9d:	add    BYTE PTR [rax],al
  423c9f:	add    BYTE PTR [rdi+0x43],al
  423ca2:	rex.XB cmp spl,BYTE PTR [r8]
  423ca5:	sub    BYTE PTR [rdi+0x4e],al
  423ca8:	push   rbp
  423ca9:	sub    DWORD PTR [rax],esp
  423cab:	xor    al,0x2e
  423cad:	cmp    DWORD PTR [rsi],ebp
  423caf:	xor    al,0x0
	...
  423cbd:	add    BYTE PTR [rax],al
  423cbf:	add    BYTE PTR [rdi+0x43],al
  423cc2:	rex.XB cmp spl,BYTE PTR [r8]
  423cc5:	sub    BYTE PTR [rdi+0x4e],al
  423cc8:	push   rbp
  423cc9:	sub    DWORD PTR [rax],esp
  423ccb:	xor    al,0x2e
  423ccd:	cmp    DWORD PTR [rsi],ebp
  423ccf:	xor    al,0x0
	...
  423cdd:	add    BYTE PTR [rax],al
  423cdf:	add    BYTE PTR [rdi+0x43],al
  423ce2:	rex.XB cmp spl,BYTE PTR [r8]
  423ce5:	sub    BYTE PTR [rdi+0x4e],al
  423ce8:	push   rbp
  423ce9:	sub    DWORD PTR [rax],esp
  423ceb:	xor    al,0x2e
  423ced:	cmp    DWORD PTR [rsi],ebp
  423cef:	xor    al,0x0
	...
  423cfd:	add    BYTE PTR [rax],al
  423cff:	add    BYTE PTR [rdi+0x43],al
  423d02:	rex.XB cmp spl,BYTE PTR [r8]
  423d05:	sub    BYTE PTR [rdi+0x4e],al
  423d08:	push   rbp
  423d09:	sub    DWORD PTR [rax],esp
  423d0b:	xor    al,0x2e
  423d0d:	cmp    DWORD PTR [rsi],ebp
  423d0f:	xor    al,0x0
	...
  423d1d:	add    BYTE PTR [rax],al
  423d1f:	add    BYTE PTR [rdi+0x43],al
  423d22:	rex.XB cmp spl,BYTE PTR [r8]
  423d25:	sub    BYTE PTR [rdi+0x4e],al
  423d28:	push   rbp
  423d29:	sub    DWORD PTR [rax],esp
  423d2b:	xor    al,0x2e
  423d2d:	cmp    DWORD PTR [rsi],ebp
  423d2f:	xor    al,0x0
	...
  423d3d:	add    BYTE PTR [rax],al
  423d3f:	add    BYTE PTR [rdi+0x43],al
  423d42:	rex.XB cmp spl,BYTE PTR [r8]
  423d45:	sub    BYTE PTR [rdi+0x4e],al
  423d48:	push   rbp
  423d49:	sub    DWORD PTR [rax],esp
  423d4b:	xor    al,0x2e
  423d4d:	cmp    DWORD PTR [rsi],ebp
  423d4f:	xor    al,0x0
	...
  423d5d:	add    BYTE PTR [rax],al
  423d5f:	add    BYTE PTR [rdi+0x43],al
  423d62:	rex.XB cmp spl,BYTE PTR [r8]
  423d65:	sub    BYTE PTR [rdi+0x4e],al
  423d68:	push   rbp
  423d69:	sub    DWORD PTR [rax],esp
  423d6b:	xor    al,0x2e
  423d6d:	cmp    DWORD PTR [rsi],ebp
  423d6f:	xor    al,0x0
	...
  423d7d:	add    BYTE PTR [rax],al
  423d7f:	add    BYTE PTR [rdi+0x43],al
  423d82:	rex.XB cmp spl,BYTE PTR [r8]
  423d85:	sub    BYTE PTR [rdi+0x4e],al
  423d88:	push   rbp
  423d89:	sub    DWORD PTR [rax],esp
  423d8b:	xor    al,0x2e
  423d8d:	cmp    DWORD PTR [rsi],ebp
  423d8f:	xor    al,0x0
	...
  423d9d:	add    BYTE PTR [rax],al
  423d9f:	add    BYTE PTR [rdi+0x43],al
  423da2:	rex.XB cmp spl,BYTE PTR [r8]
  423da5:	sub    BYTE PTR [rdi+0x4e],al
  423da8:	push   rbp
  423da9:	sub    DWORD PTR [rax],esp
  423dab:	xor    al,0x2e
  423dad:	cmp    DWORD PTR [rsi],ebp
  423daf:	xor    al,0x0
	...
  423dbd:	add    BYTE PTR [rax],al
  423dbf:	add    BYTE PTR [rdi+0x43],al
  423dc2:	rex.XB cmp spl,BYTE PTR [r8]
  423dc5:	sub    BYTE PTR [rdi+0x4e],al
  423dc8:	push   rbp
  423dc9:	sub    DWORD PTR [rax],esp
  423dcb:	xor    al,0x2e
  423dcd:	cmp    DWORD PTR [rsi],ebp
  423dcf:	xor    al,0x0
	...
  423ddd:	add    BYTE PTR [rax],al
  423ddf:	add    BYTE PTR [rdi+0x43],al
  423de2:	rex.XB cmp spl,BYTE PTR [r8]
  423de5:	sub    BYTE PTR [rdi+0x4e],al
  423de8:	push   rbp
  423de9:	sub    DWORD PTR [rax],esp
  423deb:	xor    al,0x2e
  423ded:	cmp    DWORD PTR [rsi],ebp
  423def:	xor    al,0x0
	...
  423dfd:	add    BYTE PTR [rax],al
  423dff:	add    BYTE PTR [rdi+0x43],al
  423e02:	rex.XB cmp spl,BYTE PTR [r8]
  423e05:	sub    BYTE PTR [rdi+0x4e],al
  423e08:	push   rbp
  423e09:	sub    DWORD PTR [rax],esp
  423e0b:	xor    al,0x2e
  423e0d:	cmp    DWORD PTR [rsi],ebp
  423e0f:	xor    al,0x0
	...
  423e1d:	add    BYTE PTR [rax],al
  423e1f:	add    BYTE PTR [rdi+0x43],al
  423e22:	rex.XB cmp spl,BYTE PTR [r8]
  423e25:	sub    BYTE PTR [rdi+0x4e],al
  423e28:	push   rbp
  423e29:	sub    DWORD PTR [rax],esp
  423e2b:	xor    al,0x2e
  423e2d:	cmp    DWORD PTR [rsi],ebp
  423e2f:	xor    al,0x0
	...
  423e3d:	add    BYTE PTR [rax],al
  423e3f:	add    BYTE PTR [rdi+0x43],al
  423e42:	rex.XB cmp spl,BYTE PTR [r8]
  423e45:	sub    BYTE PTR [rdi+0x4e],al
  423e48:	push   rbp
  423e49:	sub    DWORD PTR [rax],esp
  423e4b:	xor    al,0x2e
  423e4d:	cmp    DWORD PTR [rsi],ebp
  423e4f:	xor    al,0x0
	...
  423e5d:	add    BYTE PTR [rax],al
  423e5f:	add    BYTE PTR [rdi+0x43],al
  423e62:	rex.XB cmp spl,BYTE PTR [r8]
  423e65:	sub    BYTE PTR [rdi+0x4e],al
  423e68:	push   rbp
  423e69:	sub    DWORD PTR [rax],esp
  423e6b:	xor    al,0x2e
  423e6d:	cmp    DWORD PTR [rsi],ebp
  423e6f:	xor    al,0x0
	...
  423e7d:	add    BYTE PTR [rax],al
  423e7f:	add    BYTE PTR [rdi+0x43],al
  423e82:	rex.XB cmp spl,BYTE PTR [r8]
  423e85:	sub    BYTE PTR [rdi+0x4e],al
  423e88:	push   rbp
  423e89:	sub    DWORD PTR [rax],esp
  423e8b:	xor    al,0x2e
  423e8d:	cmp    DWORD PTR [rsi],ebp
  423e8f:	xor    al,0x0
	...
  423e9d:	add    BYTE PTR [rax],al
  423e9f:	add    BYTE PTR [rdi+0x43],al
  423ea2:	rex.XB cmp spl,BYTE PTR [r8]
  423ea5:	sub    BYTE PTR [rdi+0x4e],al
  423ea8:	push   rbp
  423ea9:	sub    DWORD PTR [rax],esp
  423eab:	xor    al,0x2e
  423ead:	cmp    DWORD PTR [rsi],ebp
  423eaf:	xor    al,0x0
	...
  423ebd:	add    BYTE PTR [rax],al
  423ebf:	add    BYTE PTR [rdi+0x43],al
  423ec2:	rex.XB cmp spl,BYTE PTR [r8]
  423ec5:	sub    BYTE PTR [rdi+0x4e],al
  423ec8:	push   rbp
  423ec9:	sub    DWORD PTR [rax],esp
  423ecb:	xor    al,0x2e
  423ecd:	cmp    DWORD PTR [rsi],ebp
  423ecf:	xor    al,0x0
	...
  423edd:	add    BYTE PTR [rax],al
  423edf:	add    BYTE PTR [rdi+0x43],al
  423ee2:	rex.XB cmp spl,BYTE PTR [r8]
  423ee5:	sub    BYTE PTR [rdi+0x4e],al
  423ee8:	push   rbp
  423ee9:	sub    DWORD PTR [rax],esp
  423eeb:	xor    al,0x2e
  423eed:	cmp    DWORD PTR [rsi],ebp
  423eef:	xor    al,0x0
	...
  423efd:	add    BYTE PTR [rax],al
  423eff:	add    BYTE PTR [rdi+0x43],al
  423f02:	rex.XB cmp spl,BYTE PTR [r8]
  423f05:	sub    BYTE PTR [rdi+0x4e],al
  423f08:	push   rbp
  423f09:	sub    DWORD PTR [rax],esp
  423f0b:	xor    al,0x2e
  423f0d:	cmp    DWORD PTR [rsi],ebp
  423f0f:	xor    al,0x0
	...
  423f1d:	add    BYTE PTR [rax],al
  423f1f:	add    BYTE PTR [rdi+0x43],al
  423f22:	rex.XB cmp spl,BYTE PTR [r8]
  423f25:	sub    BYTE PTR [rdi+0x4e],al
  423f28:	push   rbp
  423f29:	sub    DWORD PTR [rax],esp
  423f2b:	xor    al,0x2e
  423f2d:	cmp    DWORD PTR [rsi],ebp
  423f2f:	xor    al,0x0
	...
  423f3d:	add    BYTE PTR [rax],al
  423f3f:	add    BYTE PTR [rdi+0x43],al
  423f42:	rex.XB cmp spl,BYTE PTR [r8]
  423f45:	sub    BYTE PTR [rdi+0x4e],al
  423f48:	push   rbp
  423f49:	sub    DWORD PTR [rax],esp
  423f4b:	xor    al,0x2e
  423f4d:	cmp    DWORD PTR [rsi],ebp
  423f4f:	xor    al,0x0
	...
  423f5d:	add    BYTE PTR [rax],al
  423f5f:	add    BYTE PTR [rdi+0x43],al
  423f62:	rex.XB cmp spl,BYTE PTR [r8]
  423f65:	sub    BYTE PTR [rdi+0x4e],al
  423f68:	push   rbp
  423f69:	sub    DWORD PTR [rax],esp
  423f6b:	xor    al,0x2e
  423f6d:	cmp    DWORD PTR [rsi],ebp
  423f6f:	xor    al,0x0
	...
  423f7d:	add    BYTE PTR [rax],al
  423f7f:	add    BYTE PTR [rdi+0x43],al
  423f82:	rex.XB cmp spl,BYTE PTR [r8]
  423f85:	sub    BYTE PTR [rdi+0x4e],al
  423f88:	push   rbp
  423f89:	sub    DWORD PTR [rax],esp
  423f8b:	xor    al,0x2e
  423f8d:	cmp    DWORD PTR [rsi],ebp
  423f8f:	xor    al,0x0
	...
  423f9d:	add    BYTE PTR [rax],al
  423f9f:	add    BYTE PTR [rdi+0x43],al
  423fa2:	rex.XB cmp spl,BYTE PTR [r8]
  423fa5:	sub    BYTE PTR [rdi+0x4e],al
  423fa8:	push   rbp
  423fa9:	sub    DWORD PTR [rax],esp
  423fab:	xor    al,0x2e
  423fad:	cmp    DWORD PTR [rsi],ebp
  423faf:	xor    al,0x0
	...
  423fbd:	add    BYTE PTR [rax],al
  423fbf:	add    BYTE PTR [rdi+0x43],al
  423fc2:	rex.XB cmp spl,BYTE PTR [r8]
  423fc5:	sub    BYTE PTR [rdi+0x4e],al
  423fc8:	push   rbp
  423fc9:	sub    DWORD PTR [rax],esp
  423fcb:	xor    al,0x2e
  423fcd:	cmp    DWORD PTR [rsi],ebp
  423fcf:	xor    al,0x0
	...
  423fdd:	add    BYTE PTR [rax],al
  423fdf:	add    BYTE PTR [rdi+0x43],al
  423fe2:	rex.XB cmp spl,BYTE PTR [r8]
  423fe5:	sub    BYTE PTR [rdi+0x4e],al
  423fe8:	push   rbp
  423fe9:	sub    DWORD PTR [rax],esp
  423feb:	xor    al,0x2e
  423fed:	cmp    DWORD PTR [rsi],ebp
  423fef:	xor    al,0x0
	...
  423ffd:	add    BYTE PTR [rax],al
  423fff:	add    BYTE PTR [rdi+0x43],al
  424002:	rex.XB cmp spl,BYTE PTR [r8]
  424005:	sub    BYTE PTR [rdi+0x4e],al
  424008:	push   rbp
  424009:	sub    DWORD PTR [rax],esp
  42400b:	xor    al,0x2e
  42400d:	cmp    DWORD PTR [rsi],ebp
  42400f:	xor    al,0x0
	...
  42401d:	add    BYTE PTR [rax],al
  42401f:	add    BYTE PTR [rdi+0x43],al
  424022:	rex.XB cmp spl,BYTE PTR [r8]
  424025:	sub    BYTE PTR [rdi+0x4e],al
  424028:	push   rbp
  424029:	sub    DWORD PTR [rax],esp
  42402b:	xor    al,0x2e
  42402d:	cmp    DWORD PTR [rsi],ebp
  42402f:	xor    al,0x0
	...
  42403d:	add    BYTE PTR [rax],al
  42403f:	add    BYTE PTR [rdi+0x43],al
  424042:	rex.XB cmp spl,BYTE PTR [r8]
  424045:	sub    BYTE PTR [rdi+0x4e],al
  424048:	push   rbp
  424049:	sub    DWORD PTR [rax],esp
  42404b:	xor    al,0x2e
  42404d:	cmp    DWORD PTR [rsi],ebp
  42404f:	xor    al,0x0
	...
  42405d:	add    BYTE PTR [rax],al
  42405f:	add    BYTE PTR [rdi+0x43],al
  424062:	rex.XB cmp spl,BYTE PTR [r8]
  424065:	sub    BYTE PTR [rdi+0x4e],al
  424068:	push   rbp
  424069:	sub    DWORD PTR [rax],esp
  42406b:	xor    al,0x2e
  42406d:	cmp    DWORD PTR [rsi],ebp
  42406f:	xor    al,0x0
	...
  42407d:	add    BYTE PTR [rax],al
  42407f:	add    BYTE PTR [rdi+0x43],al
  424082:	rex.XB cmp spl,BYTE PTR [r8]
  424085:	sub    BYTE PTR [rdi+0x4e],al
  424088:	push   rbp
  424089:	sub    DWORD PTR [rax],esp
  42408b:	xor    al,0x2e
  42408d:	cmp    DWORD PTR [rsi],ebp
  42408f:	xor    al,0x0
	...
  42409d:	add    BYTE PTR [rax],al
  42409f:	add    BYTE PTR [rdi+0x43],al
  4240a2:	rex.XB cmp spl,BYTE PTR [r8]
  4240a5:	sub    BYTE PTR [rdi+0x4e],al
  4240a8:	push   rbp
  4240a9:	sub    DWORD PTR [rax],esp
  4240ab:	xor    al,0x2e
  4240ad:	cmp    DWORD PTR [rsi],ebp
  4240af:	xor    al,0x0
	...
  4240bd:	add    BYTE PTR [rax],al
  4240bf:	add    BYTE PTR [rdi+0x43],al
  4240c2:	rex.XB cmp spl,BYTE PTR [r8]
  4240c5:	sub    BYTE PTR [rdi+0x4e],al
  4240c8:	push   rbp
  4240c9:	sub    DWORD PTR [rax],esp
  4240cb:	xor    al,0x2e
  4240cd:	cmp    DWORD PTR [rsi],ebp
  4240cf:	xor    al,0x0
	...
  4240dd:	add    BYTE PTR [rax],al
  4240df:	add    BYTE PTR [rdi+0x43],al
  4240e2:	rex.XB cmp spl,BYTE PTR [r8]
  4240e5:	sub    BYTE PTR [rdi+0x4e],al
  4240e8:	push   rbp
  4240e9:	sub    DWORD PTR [rax],esp
  4240eb:	xor    al,0x2e
  4240ed:	cmp    DWORD PTR [rsi],ebp
  4240ef:	xor    al,0x0
	...
  4240fd:	add    BYTE PTR [rax],al
  4240ff:	add    BYTE PTR [rdi+0x43],al
  424102:	rex.XB cmp spl,BYTE PTR [r8]
  424105:	sub    BYTE PTR [rdi+0x4e],al
  424108:	push   rbp
  424109:	sub    DWORD PTR [rax],esp
  42410b:	xor    al,0x2e
  42410d:	cmp    DWORD PTR [rsi],ebp
  42410f:	xor    al,0x0
	...
  42411d:	add    BYTE PTR [rax],al
  42411f:	add    BYTE PTR [rdi+0x43],al
  424122:	rex.XB cmp spl,BYTE PTR [r8]
  424125:	sub    BYTE PTR [rdi+0x4e],al
  424128:	push   rbp
  424129:	sub    DWORD PTR [rax],esp
  42412b:	xor    al,0x2e
  42412d:	cmp    DWORD PTR [rsi],ebp
  42412f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000425000 <.pdata>:
  425000:	add    BYTE PTR [rax],dl
  425002:	add    BYTE PTR [rax],al
  425004:	add    DWORD PTR [rax],edx
  425006:	add    BYTE PTR [rax],al
  425008:	add    BYTE PTR [rax+0x2],ah
  42500b:	add    BYTE PTR [rax],dl
  42500d:	adc    BYTE PTR [rax],al
  42500f:	add    BYTE PTR [rcx+0x11],dl
  425012:	add    BYTE PTR [rax],al
  425014:	add    al,0x60
  425016:	add    al,BYTE PTR [rax]
  425018:	(bad)  
  425019:	adc    DWORD PTR [rax],eax
  42501b:	add    BYTE PTR [rsi+0xc000011],ch
  425021:	(bad)  
  425022:	add    al,BYTE PTR [rax]
  425024:	mov    al,0x11
  425026:	add    BYTE PTR [rax],al
  425028:	(bad)  
  425029:	adc    al,0x0
  42502b:	add    BYTE PTR [rax+riz*2],dl
  42502e:	add    al,BYTE PTR [rax]
  425030:	rcl    BYTE PTR [rax+rax*1],1
  425033:	add    dl,dh
  425035:	adc    al,0x0
  425037:	add    BYTE PTR [rax],ch
  425039:	(bad)  
  42503a:	add    al,BYTE PTR [rax]
  42503c:	add    BYTE PTR [rip+0x15220000],dl        # 0x15645042
  425042:	add    BYTE PTR [rax],al
  425044:	rex.W (bad) 
  425046:	add    al,BYTE PTR [rax]
  425048:	xor    BYTE PTR [rip+0x16130000],dl        # 0x1655504e
  42504e:	add    BYTE PTR [rax],al
  425050:	push   0x20000260
  425055:	(bad)  
  425056:	add    BYTE PTR [rax],al
  425058:	xlat   BYTE PTR ds:[rbx]
  425059:	(bad)  
  42505a:	add    BYTE PTR [rax],al
  42505c:	je     0x4250be
  42505e:	add    al,BYTE PTR [rax]
  425060:	loopne 0x425079
  425062:	add    BYTE PTR [rax],al
  425064:	and    BYTE PTR [rcx],bl
  425066:	add    BYTE PTR [rax],al
  425068:	test   BYTE PTR [rax+0x2],ah
  42506b:	add    BYTE PTR [rax],ah
  42506d:	sbb    DWORD PTR [rax],eax
  42506f:	add    BYTE PTR [rbx-0x6fffffe6],bl
  425075:	(bad)  
  425076:	add    al,BYTE PTR [rax]
  425078:	movabs al,ds:0xa800001d2900001a
  425081:	(bad)  
  425082:	add    al,BYTE PTR [rax]
  425084:	xor    BYTE PTR [rip+0x25e60000],bl        # 0x2628508a
  42508a:	add    BYTE PTR [rax],al
  42508c:	mov    eax,0xf0000260
  425091:	and    eax,0x26ec0000
  425096:	add    BYTE PTR [rax],al
  425098:	call   0xfffffffff04252fd
  42509d:	add    BYTE PTR es:[rax],al
  4250a0:	jl     0x4250c9
  4250a2:	add    BYTE PTR [rax],al
  4250a4:	clc    
  4250a5:	(bad)  
  4250a6:	add    al,BYTE PTR [rax]
  4250a8:	and    BYTE PTR [rdi],0x0
  4250ab:	add    BYTE PTR [rbx],ch
  4250ad:	sub    BYTE PTR [rax],al
  4250af:	add    BYTE PTR [rax],cl
  4250b1:	(bad)  
  4250b2:	add    al,BYTE PTR [rax]
  4250b4:	xor    BYTE PTR [rax],ch
  4250b6:	add    BYTE PTR [rax],al
  4250b8:	repnz sub BYTE PTR [rax],al
  4250bb:	add    BYTE PTR [rax],bl
  4250bd:	(bad)  
  4250be:	add    al,BYTE PTR [rax]
  4250c0:	add    BYTE PTR [rcx],ch
  4250c2:	add    BYTE PTR [rax],al
  4250c4:	add    ebp,DWORD PTR [rcx]
  4250c6:	add    BYTE PTR [rax],al
  4250c8:	sub    BYTE PTR [rcx+0x2],ah
  4250cb:	add    BYTE PTR [rax],dl
  4250cd:	sub    DWORD PTR [rax],eax
  4250cf:	add    bl,bl
  4250d1:	sub    DWORD PTR [rax],eax
  4250d3:	add    BYTE PTR [rcx+riz*2],ch
  4250d6:	add    al,BYTE PTR [rax]
  4250d8:	loopne 0x425103
  4250da:	add    BYTE PTR [rax],al
  4250dc:	sub    al,BYTE PTR fs:[rax]
  4250df:	add    BYTE PTR [rax],bh
  4250e1:	(bad)  
  4250e2:	add    al,BYTE PTR [rax]
  4250e4:	jo     0x425110
  4250e6:	add    BYTE PTR [rax],al
  4250e8:	(bad)
  4250eb:	add    BYTE PTR [rax+0x61],dl
  4250ee:	add    al,BYTE PTR [rax]
  4250f0:	shr    BYTE PTR [rbx],1
  4250f2:	add    BYTE PTR [rax],al
  4250f4:	mov    gs,WORD PTR [rax+rax*1]
  4250f7:	add    BYTE PTR [rcx+riz*2+0x2],bl
  4250fb:	add    BYTE PTR [rax-0x6bffffd4],dl
  425101:	sub    eax,0x61640000
  425106:	add    al,BYTE PTR [rax]
  425108:	movabs al,ds:0x7000002e1c00002d
  425111:	(bad)  
  425112:	add    al,BYTE PTR [rax]
  425114:	and    BYTE PTR [rsi],ch
  425116:	add    BYTE PTR [rax],al
  425118:	jge    0x425149
  42511a:	add    BYTE PTR [rax],al
  42511c:	jl     0x42517f
  42511e:	add    al,BYTE PTR [rax]
  425120:	sub    BYTE PTR [rdi],0x0
  425123:	add    BYTE PTR [rbx-0x73ffffcd],bh
  425129:	(bad)  
  42512a:	add    al,BYTE PTR [rax]
  42512c:	shl    BYTE PTR [rbx],0x0
  42512f:	add    dh,ah
  425131:	push   rbx
  425132:	add    BYTE PTR [rax],al
  425134:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  425135:	(bad)  
  425136:	add    al,BYTE PTR [rax]
  425138:	lock push rbx
  42513a:	add    BYTE PTR [rax],al
  42513c:	rex.WX push rdi
  42513e:	add    BYTE PTR [rax],al
  425140:	shl    BYTE PTR [rcx+0x2],0x0
  425144:	push   rax
  425145:	push   rdi
  425146:	add    BYTE PTR [rax],al
  425148:	pop    rsp
  425149:	(bad)  
  42514a:	add    BYTE PTR [rax],al
  42514c:	fsub   DWORD PTR [rcx+0x2]
  42514f:	add    BYTE PTR [rax-0x7e],ah
  425152:	add    BYTE PTR [rax],al
  425154:	ins    DWORD PTR es:[rdi],dx
  425155:	(bad)  
  425156:	add    BYTE PTR [rax],al
  425158:	lock (bad) 
  42515a:	add    al,BYTE PTR [rax]
  42515c:	jo     0x4250e0
  42515e:	add    BYTE PTR [rax],al
  425160:	jne    0x4250e4
  425162:	add    BYTE PTR [rax],al
  425164:	hlt    
  425165:	(bad)  
  425166:	add    al,BYTE PTR [rax]
  425168:	add    BYTE PTR [rdx-0x7d420000],0x0
  42516f:	add    al,bh
  425171:	(bad)  
  425172:	add    al,BYTE PTR [rax]
  425174:	rol    BYTE PTR [rdx-0x7d030000],0x0
  42517b:	add    ah,bh
  42517d:	(bad)  
  42517e:	add    al,BYTE PTR [rax]
  425180:	add    BYTE PTR [rbx-0x7cfb0000],al
  425186:	add    BYTE PTR [rax],al
  425188:	add    al,0x62
  42518a:	add    al,BYTE PTR [rax]
  42518c:	adc    BYTE PTR [rbx-0x7cc10000],al
  425192:	add    BYTE PTR [rax],al
  425194:	or     BYTE PTR [rdx+0x2],ah
  425197:	add    BYTE PTR [rax-0x7d],al
  42519a:	add    BYTE PTR [rax],al
  42519c:	rex.RB add DWORD PTR [r8],0x0
  4251a0:	adc    BYTE PTR [rdx+0x2],ah
  4251a3:	add    BYTE PTR [rax-0x7d],dl
  4251a6:	add    BYTE PTR [rax],al
  4251a8:	xchg   edi,eax
  4251a9:	add    DWORD PTR [rax],0x0
  4251ac:	adc    al,0x62
  4251ae:	add    al,BYTE PTR [rax]
  4251b0:	movabs al,ds:0x1c00008467000083
  4251b9:	(bad)  
  4251bb:	add    BYTE PTR [rax-0x7c],dh
  4251be:	add    BYTE PTR [rax],al
  4251c0:	mov    ecx,0x24000084
  4251c5:	(bad)  
  4251c7:	add    al,al
  4251c9:	test   BYTE PTR [rax],al
  4251cb:	add    BYTE PTR [rax],ah
  4251cd:	xchg   BYTE PTR [rax],al
  4251cf:	add    BYTE PTR [rdx+riz*2],ch
  4251d2:	add    al,BYTE PTR [rax]
  4251d4:	and    BYTE PTR [rsi-0x77c60000],al
  4251da:	add    BYTE PTR [rax],al
  4251dc:	rex (bad) 
  4251df:	add    BYTE PTR [rax-0x78],al
  4251e2:	add    BYTE PTR [rax],al
  4251e4:	mov    bh,0x88
  4251e6:	add    BYTE PTR [rax],al
  4251e8:	push   rsp
  4251e9:	(bad)  
  4251eb:	add    al,al
  4251ed:	mov    BYTE PTR [rax],al
  4251ef:	add    BYTE PTR [rcx],dl
  4251f1:	mov    DWORD PTR [rax],eax
  4251f3:	add    BYTE PTR [rdx+riz*2+0x2],ah
  4251f7:	add    BYTE PTR [rax],ah
  4251f9:	mov    DWORD PTR [rax],eax
  4251fb:	add    BYTE PTR [rdi],bl
  4251fd:	mov    es,WORD PTR [rax]
  4251ff:	add    BYTE PTR [rdx+riz*2+0x2],ch
  425203:	add    BYTE PTR [rax],ah
  425205:	mov    es,WORD PTR [rax]
  425207:	add    BYTE PTR [rcx],ah
  425209:	mov    es,WORD PTR [rax]
  42520b:	add    BYTE PTR [rdx+riz*2-0x71cffffe],al
  425212:	add    BYTE PTR [rax],al
  425214:	rex.WXB mov es,WORD PTR [r8]
  425217:	add    BYTE PTR [rax+0x50000262],cl
  42521d:	mov    es,WORD PTR [rax]
  42521f:	add    BYTE PTR [rbp-0x72],dl
  425222:	add    BYTE PTR [rax],al
  425224:	nop
  425225:	(bad)  
  425227:	add    BYTE PTR [rax-0x72],ah
  42522a:	add    BYTE PTR [rax],al
  42522c:	mov    es,WORD PTR gs:[rax]
  42522f:	add    BYTE PTR [rdx+riz*2-0x718ffffe],dl
  425236:	add    BYTE PTR [rax],al
  425238:	jne    0x4251c8
  42523a:	add    BYTE PTR [rax],al
  42523c:	cwde   
  42523d:	(bad)  
  42523f:	add    BYTE PTR [rax-0x77ffff72],al
  425245:	mov    es,WORD PTR [rax]
  425247:	add    BYTE PTR [rdx+riz*2-0x716ffffe],bl
  42524e:	add    BYTE PTR [rax],al
  425250:	loope  0x4251e0
  425252:	add    BYTE PTR [rax],al
  425254:	movabs al,ds:0x2000008ef0000262
  42525d:	pop    QWORD PTR [rax]
  42525f:	add    BYTE PTR [rdx+riz*2-0x70dffffe],ch
  425266:	add    BYTE PTR [rax],al
  425268:	imul   ecx,DWORD PTR [rdi+0x62b40000],0x8f700002
  425272:	add    BYTE PTR [rax],al
  425274:	mov    bl,0x8f
  425276:	add    BYTE PTR [rax],al
  425278:	shl    BYTE PTR [rdx+0x2],0x0
  42527c:	ror    BYTE PTR [rdi-0x6ffd0000],0x0
  425283:	add    al,cl
  425285:	(bad)  
  425287:	add    BYTE PTR [rax],dl
  425289:	nop
  42528a:	add    BYTE PTR [rax],al
  42528c:	xor    BYTE PTR [rax+0x62d00000],dl
  425292:	add    al,BYTE PTR [rax]
  425294:	xor    BYTE PTR [rax-0x6f290000],dl
  42529a:	add    BYTE PTR [rax],al
  42529c:	fsub   DWORD PTR [rdx+0x2]
  42529f:	add    al,ah
  4252a1:	nop
  4252a2:	add    BYTE PTR [rax],al
  4252a4:	stc    
  4252a5:	nop
  4252a6:	add    BYTE PTR [rax],al
  4252a8:	loopne 0x42530c
  4252aa:	add    al,BYTE PTR [rax]
  4252ac:	add    BYTE PTR [rcx-0x6ecb0000],dl
  4252b2:	add    BYTE PTR [rax],al
  4252b4:	call   0x4042551b
  4252b9:	xchg   ecx,eax
  4252ba:	add    BYTE PTR [rax],al
  4252bc:	xchg   ebp,eax
  4252bd:	xchg   ecx,eax
  4252be:	add    BYTE PTR [rax],al
  4252c0:	lock (bad) 
  4252c3:	add    BYTE PTR [rax-0x43ffff6f],ah
  4252c9:	xchg   ecx,eax
  4252ca:	add    BYTE PTR [rax],al
  4252cc:	cld    
  4252cd:	(bad)  
  4252cf:	add    al,al
  4252d1:	xchg   ecx,eax
  4252d2:	add    BYTE PTR [rax],al
  4252d4:	retf   0x91
  4252d7:	add    BYTE PTR [rax],al
  4252d9:	movsxd eax,DWORD PTR [rdx]
  4252db:	add    al,dl
  4252dd:	xchg   ecx,eax
  4252de:	add    BYTE PTR [rax],al
  4252e0:	rcl    DWORD PTR [rcx+0x63040000],cl
  4252e6:	add    al,BYTE PTR [rax]
  4252e8:	loopne 0x42527b
  4252ea:	add    BYTE PTR [rax],al
  4252ec:	mov    dh,0x92
  4252ee:	add    BYTE PTR [rax],al
  4252f0:	or     BYTE PTR [rbx+0x2],ah
  4252f3:	add    al,al
  4252f5:	xchg   edx,eax
  4252f6:	add    BYTE PTR [rax],al
  4252f8:	mov    ebx,0x18000093
  4252fd:	movsxd eax,DWORD PTR [rdx]
  4252ff:	add    al,al
  425301:	xchg   ebx,eax
  425302:	add    BYTE PTR [rax],al
  425304:	out    dx,eax
  425305:	xchg   ebx,eax
  425306:	add    BYTE PTR [rax],al
  425308:	sub    BYTE PTR [rbx+0x2],ah
  42530b:	add    al,dh
  42530d:	xchg   ebx,eax
  42530e:	add    BYTE PTR [rax],al
  425310:	pop    rcx
  425311:	xchg   esp,eax
  425312:	add    BYTE PTR [rax],al
  425314:	xor    BYTE PTR [rbx+0x2],ah
  425317:	add    BYTE PTR [rax-0x6c],ah
  42531a:	add    BYTE PTR [rax],al
  42531c:	movsxd edx,DWORD PTR [rax+rax*1+0x2633c00]
  425323:	add    BYTE PTR [rax-0x6c],dh
  425326:	add    BYTE PTR [rax],al
  425328:	mov    cl,0x94
  42532a:	add    BYTE PTR [rax],al
  42532c:	rex movsxd eax,DWORD PTR [rdx]
  42532f:	add    al,al
  425331:	xchg   esp,eax
  425332:	add    BYTE PTR [rax],al
  425334:	int3   
  425335:	xchg   esp,eax
  425336:	add    BYTE PTR [rax],al
  425338:	movsxd rax,DWORD PTR [rdx]
  42533b:	add    al,dl
  42533d:	xchg   esp,eax
  42533e:	add    BYTE PTR [rax],al
  425340:	int3   
  425341:	xchg   ebp,eax
  425342:	add    BYTE PTR [rax],al
  425344:	movsxd r8,DWORD PTR [rdx]
  425347:	add    al,dl
  425349:	xchg   ebp,eax
  42534a:	add    BYTE PTR [rax],al
  42534c:	rcl    DWORD PTR [rbp+0x63640000],cl
  425352:	add    al,BYTE PTR [rax]
  425354:	loopne 0x4252eb
  425356:	add    BYTE PTR [rax],al
  425358:	in     al,0x95
  42535a:	add    BYTE PTR [rax],al
  42535c:	push   0xfffffffff0000263
  425361:	xchg   ebp,eax
  425362:	add    BYTE PTR [rax],al
  425364:	hlt    
  425365:	xchg   ebp,eax
  425366:	add    BYTE PTR [rax],al
  425368:	ins    BYTE PTR es:[rdi],dx
  425369:	movsxd eax,DWORD PTR [rdx]
  42536b:	add    BYTE PTR [rax],al
  42536d:	xchg   esi,eax
  42536e:	add    BYTE PTR [rax],al
  425370:	(bad)  
  425371:	xchg   esi,eax
  425372:	add    BYTE PTR [rax],al
  425374:	jo     0x4253d9
  425376:	add    al,BYTE PTR [rax]
  425378:	jo     0x425310
  42537a:	add    BYTE PTR [rax],al
  42537c:	rcl    BYTE PTR [rdi+0x637c0000],cl
  425382:	add    al,BYTE PTR [rax]
  425384:	loopne 0x42531d
  425386:	add    BYTE PTR [rax],al
  425388:	fstp   DWORD PTR [rdx+0x63900000]
  42538e:	add    al,BYTE PTR [rax]
  425390:	loopne 0x42532c
  425392:	add    BYTE PTR [rax],al
  425394:	xchg   BYTE PTR [rax+rax*1+0x263a800],bl
  42539b:	add    BYTE PTR [rax+0x7c00009c],dl
  4253a1:	popf   
  4253a2:	add    BYTE PTR [rax],al
  4253a4:	mov    al,0x63
  4253a6:	add    al,BYTE PTR [rax]
  4253a8:	sbb    BYTE PTR [rbp-0x60c80000],0x0
  4253af:	add    al,al
  4253b1:	movsxd eax,DWORD PTR [rdx]
  4253b3:	add    BYTE PTR [rax-0x61],al
  4253b6:	add    BYTE PTR [rax],al
  4253b8:	lods   eax,DWORD PTR ds:[rsi]
  4253b9:	lahf   
  4253ba:	add    BYTE PTR [rax],al
  4253bc:	enter  0x263,0x0
  4253c0:	mov    al,0x9f
  4253c2:	add    BYTE PTR [rax],al
  4253c4:	(bad)  
  4253c5:	movabs al,ds:0xa030000263d80000
  4253ce:	add    BYTE PTR [rax],al
  4253d0:	iret   
  4253d1:	movabs al,ds:0xa0d0000263e40000
  4253da:	add    BYTE PTR [rax],al
  4253dc:	stos   BYTE PTR es:[rdi],al
  4253dd:	movabs eax,ds:0xa1b0000263ec0000
  4253e6:	add    BYTE PTR [rax],al
  4253e8:	iret   
  4253e9:	movabs eax,ds:0xa1d0000263f40000
  4253f2:	add    BYTE PTR [rax],al
  4253f4:	loop   0x425397
  4253f6:	add    BYTE PTR [rax],al
  4253f8:	clc    
  4253f9:	movsxd eax,DWORD PTR [rdx]
  4253fb:	add    al,dh
  4253fd:	movabs eax,ds:0x63fc0000a2350000
  425406:	add    al,BYTE PTR [rax]
  425408:	movabs ds:0x64000000a2de0000,al
  425412:	add    al,BYTE PTR [rax]
  425414:	loopne 0x4253b8
  425416:	add    BYTE PTR [rax],al
  425418:	and    esp,DWORD PTR [rbx+0x640c0000]
  42541e:	add    al,BYTE PTR [rax]
  425420:	xor    BYTE PTR [rbx-0x5c950000],ah
  425426:	add    BYTE PTR [rax],al
  425428:	sbb    BYTE PTR [rdx+rax*1+0x0],ah
  42542c:	jo     0x4253d1
  42542e:	add    BYTE PTR [rax],al
  425430:	(bad)  
  425431:	movabs ds:0xa400000264200000,eax
  42543a:	add    BYTE PTR [rax],al
  42543c:	cmp    BYTE PTR [rax+rax*1+0x2642c00],ah
  425443:	add    BYTE PTR [rax-0x5c],al
  425446:	add    BYTE PTR [rax],al
  425448:	xchg   ebp,eax
  425449:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42544a:	add    BYTE PTR [rax],al
  42544c:	cmp    BYTE PTR [rdx+rax*1+0x0],ah
  425450:	movabs al,ds:0x440000a54e0000a4
  425459:	add    al,BYTE PTR fs:[rax]
  42545c:	nop
  42545d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42545e:	add    BYTE PTR [rax],al
  425460:	stos   BYTE PTR es:[rdi],al
  425461:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  425462:	add    BYTE PTR [rax],al
  425464:	push   rsp
  425465:	add    al,BYTE PTR fs:[rax]
  425468:	shr    BYTE PTR [rcx-0x56280000],1
  42546e:	add    BYTE PTR [rax],al
  425470:	fs add al,BYTE PTR fs:[rax]
  425474:	loopne 0x42541f
  425476:	add    BYTE PTR [rax],al
  425478:	jmp    0x425423
  42547a:	add    BYTE PTR [rax],al
  42547c:	push   0xffffffffb0000264
  425481:	stos   BYTE PTR es:[rdi],al
  425482:	add    BYTE PTR [rax],al
  425484:	call   0xffffffffd0425533
  425489:	(bad)  
  42548a:	add    al,BYTE PTR [rax]
  42548c:	lock stos BYTE PTR es:[rdi],al
  42548e:	add    BYTE PTR [rax],al
  425490:	push   rbp
  425491:	lods   al,BYTE PTR ds:[rsi]
  425492:	add    BYTE PTR [rax],al
  425494:	fsub   QWORD PTR [rax+0x2]
  425497:	add    BYTE PTR [rax-0x54],ah
  42549a:	add    BYTE PTR [rax],al
  42549c:	lods   eax,DWORD PTR es:[rsi]
  42549e:	add    BYTE PTR [rax],al
  4254a0:	rex.R (bad) 
  4254a2:	add    al,BYTE PTR [rax]

Disassembly of section .xdata:

0000000000426000 <.xdata>:
  426000:	add    DWORD PTR [rax],eax
  426002:	add    BYTE PTR [rax],al
  426004:	add    DWORD PTR [rcx+rax*1],eax
  426007:	add    BYTE PTR [rdx+rax*2],al
  42600a:	add    BYTE PTR [rax],al
  42600c:	add    DWORD PTR [rcx+rax*1],eax
  42600f:	add    BYTE PTR [rdx+riz*2],al
  426012:	add    BYTE PTR [rax],al
  426014:	add    DWORD PTR [rdi],ecx
  426016:	or     BYTE PTR [rax],al
  426018:	lgdt   [rbx]
  42601b:	add    BYTE PTR [rax],cl
  42601d:	xor    BYTE PTR [rdi],al
  42601f:	(bad)  
  426020:	(bad)  
  426021:	jo     0x426028
  426023:	push   rax
  426024:	add    al,0xc0
  426026:	add    dl,al
  426028:	or     DWORD PTR [rcx+rax*1],eax
  42602b:	add    BYTE PTR [rdx+rax*2],al
  42602e:	add    BYTE PTR [rax],al
  426030:	shr    BYTE PTR [rcx+0x10000],0x0
  426037:	add    ah,dl
  426039:	adc    al,0x0
  42603b:	add    ah,ch
  42603d:	adc    al,0x0
  42603f:	add    BYTE PTR [rax-0x13ffff63],al
  426045:	adc    al,0x0
  426047:	add    BYTE PTR [rcx],cl
  426049:	add    al,0x1
  42604b:	add    BYTE PTR [rdx+rax*2],al
  42604e:	add    BYTE PTR [rax],al
  426050:	shr    BYTE PTR [rcx+0x10000],0x0
  426057:	add    BYTE PTR [rdx*1+0x151c0000],al
  42605e:	add    BYTE PTR [rax],al
  426060:	sbb    BYTE PTR [rbp+0x151c0000],0x0
  426067:	add    BYTE PTR [rcx],al
  426069:	(bad)  
  42606b:	add    BYTE PTR [rdi],cl
  42606d:	add    DWORD PTR [rbx],ecx
  42606f:	add    al,BYTE PTR [rdx]
  426071:	xor    BYTE PTR [rcx],al
  426073:	(bad)  
  426074:	add    DWORD PTR [rcx],edx
  426076:	(bad)  
  426077:	add    BYTE PTR [rcx],dl
  426079:	add    DWORD PTR [rip+0x8300902],ecx        # 0x8726981
  42607f:	(bad)  
  426080:	add    dh,BYTE PTR [rax+0x1]
  426083:	push   rax
  426084:	add    DWORD PTR [rdi],eax
  426086:	add    al,0x0
  426088:	(bad)  
  426089:	mov    dl,0x3
  42608b:	xor    BYTE PTR [rdx],al
  42608d:	(bad)  
  42608e:	add    DWORD PTR [rax+0x1],esi
  426091:	adc    BYTE PTR [rcx],cl
  426093:	add    BYTE PTR [rax],dl
  426095:	(bad)  
  426096:	or     al,0x30
  426098:	or     esp,DWORD PTR [rax+0xa]
  42609b:	jo     0x4260a6
  42609d:	push   rax
  42609e:	or     al,al
  4260a0:	(bad)  
  4260a1:	rol    BYTE PTR [rax+riz*8],1
  4260a4:	add    dh,al
  4260a6:	add    BYTE PTR [rax],al
  4260a8:	add    DWORD PTR [rax],ecx
  4260aa:	add    eax,0x4620800
  4260af:	xor    BYTE PTR [rbx],al
  4260b1:	(bad)  
  4260b2:	add    dh,BYTE PTR [rax+0x1]
  4260b5:	push   rax
  4260b6:	add    BYTE PTR [rax],al
  4260b8:	add    DWORD PTR [rbx],edx
  4260ba:	or     al,BYTE PTR [rax]
  4260bc:	adc    eax,DWORD PTR [rcx]
  4260be:	adc    eax,0xb300c00
  4260c3:	(bad)  
  4260c4:	or     dh,BYTE PTR [rax+0x9]
  4260c7:	push   rax
  4260c8:	or     al,al
  4260ca:	(bad)  
  4260cb:	rol    BYTE PTR [rax+riz*8],1
  4260ce:	add    dh,al
  4260d0:	add    DWORD PTR [rax],ecx
  4260d2:	add    eax,DWORD PTR [rax]
  4260d4:	or     BYTE PTR [rcx],al
  4260d6:	test   BYTE PTR [rax],al
  4260d8:	add    DWORD PTR [rax],esi
  4260da:	add    BYTE PTR [rax],al
  4260dc:	add    DWORD PTR [rdi],eax
  4260de:	add    al,0x0
  4260e0:	(bad)  
  4260e1:	xor    al,BYTE PTR [rbx]
  4260e3:	xor    BYTE PTR [rdx],al
  4260e5:	(bad)  
  4260e6:	add    DWORD PTR [rax+0x1],esi
  4260e9:	or     al,BYTE PTR [rsi]
  4260eb:	add    BYTE PTR [rdx],cl
  4260ed:	push   rdx
  4260ee:	(bad)  
  4260ef:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b26555
  4260f5:	push   rax
  4260f6:	add    al,al
  4260f8:	add    DWORD PTR [rbx],ecx
  4260fa:	(bad)  
  4260fb:	add    BYTE PTR [rbx],cl
  4260fd:	add    DWORD PTR [rdi+0x3300400],eax
  426103:	(bad)  
  426104:	add    dh,BYTE PTR [rax+0x1]
  426107:	push   rax
  426108:	add    DWORD PTR [rax],ecx
  42610a:	add    eax,0x4620800
  42610f:	xor    BYTE PTR [rbx],al
  426111:	(bad)  
  426112:	add    dh,BYTE PTR [rax+0x1]
  426115:	push   rax
  426116:	add    BYTE PTR [rax],al
  426118:	add    DWORD PTR [rdx],ecx
  42611a:	(bad)  
  42611b:	add    BYTE PTR [rdx],cl
  42611d:	xor    al,BYTE PTR [rsi]
  42611f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b26585
  426125:	push   rax
  426126:	add    al,al
  426128:	add    DWORD PTR [rax],eax
  42612a:	add    BYTE PTR [rax],al
  42612c:	add    DWORD PTR [rdi],eax
  42612e:	add    al,0x0
  426130:	(bad)  
  426131:	xchg   edx,eax
  426132:	add    esi,DWORD PTR [rax]
  426134:	add    ah,BYTE PTR [rax+0x1]
  426137:	jo     0x42613a
  426139:	(bad)  
  42613a:	add    al,0x0
  42613c:	(bad)  
  42613d:	xor    al,BYTE PTR [rbx]
  42613f:	xor    BYTE PTR [rdx],al
  426141:	(bad)  
  426142:	add    DWORD PTR [rax+0x1],esi
  426145:	(bad)  
  426146:	add    eax,DWORD PTR [rax]
  426148:	(bad)  
  426149:	rex.X add sil,BYTE PTR [rax]
  42614c:	add    DWORD PTR [rax+0x0],esp
  42614f:	add    BYTE PTR [rcx],al
  426151:	(bad)  
  426152:	add    eax,DWORD PTR [rax]
  426154:	(bad)  
  426155:	rex.X add spl,BYTE PTR [rax+0x1]
  426159:	jo     0x42615b
  42615b:	add    BYTE PTR [rcx],al
  42615d:	add    al,BYTE PTR [rdx]
  42615f:	add    BYTE PTR [rdx],al
  426161:	xor    BYTE PTR [rcx],al
  426163:	(bad)  
  426164:	add    DWORD PTR [rdi],eax
  426166:	add    al,0x0
  426168:	(bad)  
  426169:	push   rdx
  42616a:	add    esi,DWORD PTR [rax]
  42616c:	add    ah,BYTE PTR [rax+0x1]
  42616f:	jo     0x426172
  426171:	(bad)  
  426172:	add    al,0x0
  426174:	(bad)  
  426175:	push   rdx
  426176:	add    esi,DWORD PTR [rax]
  426178:	add    ah,BYTE PTR [rax+0x1]
  42617b:	jo     0x42617e
  42617d:	or     al,BYTE PTR [rsi]
  42617f:	add    BYTE PTR [rdx],cl
  426181:	push   rdx
  426182:	(bad)  
  426183:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b265e9
  426189:	push   rax
  42618a:	add    al,al
  42618c:	add    DWORD PTR [rax],ebx
  42618e:	or     al,BYTE PTR [rbp-0x7deffce8]
  426194:	or     al,0x30
  426196:	or     esp,DWORD PTR [rax+0xa]
  426199:	jo     0x4261a4
  42619b:	rol    BYTE PTR [rdi],0xd0
  42619e:	add    eax,0x1f003e0
  4261a3:	push   rax
  4261a4:	add    DWORD PTR [rbx],ebx
  4261a6:	or     eax,DWORD PTR [rbp+0x113031b]
  4261ac:	(bad)  
  4261ad:	add    BYTE PTR [rax+rsi*1],cl
  4261b0:	or     esp,DWORD PTR [rax+0xa]
  4261b3:	jo     0x4261be
  4261b5:	rol    BYTE PTR [rdi],0xd0
  4261b8:	add    eax,0x1f003e0
  4261bd:	push   rax
  4261be:	add    BYTE PTR [rax],al
  4261c0:	add    DWORD PTR [rax],edx
  4261c2:	or     DWORD PTR [rax],eax
  4261c4:	adc    dl,al
  4261c6:	or     al,0x30
  4261c8:	or     esp,DWORD PTR [rax+0xa]
  4261cb:	jo     0x4261d6
  4261cd:	push   rax
  4261ce:	or     al,al
  4261d0:	(bad)  
  4261d1:	rol    BYTE PTR [rax+riz*8],1
  4261d4:	add    dh,al
  4261d6:	add    BYTE PTR [rax],al
  4261d8:	add    DWORD PTR [rbx],edx
  4261da:	or     al,BYTE PTR [rax]
  4261dc:	adc    eax,DWORD PTR [rcx]
  4261de:	sub    eax,DWORD PTR [rax]
  4261e0:	or     al,0x30
  4261e2:	or     esp,DWORD PTR [rax+0xa]
  4261e5:	jo     0x4261f0
  4261e7:	push   rax
  4261e8:	or     al,al
  4261ea:	(bad)  
  4261eb:	rol    BYTE PTR [rax+riz*8],1
  4261ee:	add    dh,al
  4261f0:	add    DWORD PTR [rax],eax
  4261f2:	add    BYTE PTR [rax],al
  4261f4:	add    DWORD PTR [rax],eax
  4261f6:	add    BYTE PTR [rax],al
  4261f8:	add    DWORD PTR [rax],eax
  4261fa:	add    BYTE PTR [rax],al
  4261fc:	add    DWORD PTR [rcx+rax*1],eax
  4261ff:	add    BYTE PTR [rdx+riz*4],al
  426202:	add    BYTE PTR [rax],al
  426204:	add    DWORD PTR [rax],eax
  426206:	add    BYTE PTR [rax],al
  426208:	add    DWORD PTR [rcx+rax*1],eax
  42620b:	add    BYTE PTR [rdx+rax*4],al
  42620e:	add    BYTE PTR [rax],al
  426210:	add    DWORD PTR [rax],eax
  426212:	add    BYTE PTR [rax],al
  426214:	add    DWORD PTR [rcx+rax*1],eax
  426217:	add    BYTE PTR [rdx+rax*2],al
  42621a:	add    BYTE PTR [rax],al
  42621c:	add    DWORD PTR [rip+0x32050002],eax        # 0x32476224
  426222:	add    DWORD PTR [rax],esi
  426224:	add    DWORD PTR [rip+0xffffffff92050002],eax        # 0xffffffff9247622c
  42622a:	add    DWORD PTR [rax],esi
  42622c:	add    DWORD PTR [rsi],ecx
  42622e:	or     BYTE PTR [rax],al
  426230:	(bad)  
  426231:	xor    cl,BYTE PTR [rdx]
  426233:	xor    BYTE PTR [rcx],cl
  426235:	(bad)  
  426236:	or     BYTE PTR [rax+0x7],dh
  426239:	push   rax
  42623a:	(bad)  
  42623b:	rol    BYTE PTR [rax+rdx*8],0x2
  42623f:	loopne 0x426242
  426241:	invd   
  426243:	add    BYTE PTR [rdi],cl
  426245:	add    DWORD PTR [rdi],edx
  426247:	add    BYTE PTR [rax],cl
  426249:	xor    BYTE PTR [rdi],al
  42624b:	(bad)  
  42624c:	(bad)  
  42624d:	jo     0x426254
  42624f:	push   rax
  426250:	add    al,0xc0
  426252:	add    dl,al
  426254:	add    DWORD PTR [rax],ecx
  426256:	add    eax,0x4420800
  42625b:	xor    BYTE PTR [rbx],al
  42625d:	(bad)  
  42625e:	add    dh,BYTE PTR [rax+0x1]
  426261:	push   rax
  426262:	add    BYTE PTR [rax],al
  426264:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247626c
  42626a:	add    DWORD PTR [rax],esi
  42626c:	add    DWORD PTR [rax],edx
  42626e:	or     DWORD PTR [rax],eax
  426270:	adc    BYTE PTR [rdx+0xc],ah
  426273:	xor    BYTE PTR [rbx],cl
  426275:	(bad)  
  426276:	or     dh,BYTE PTR [rax+0x9]
  426279:	push   rax
  42627a:	or     al,al
  42627c:	(bad)  
  42627d:	rol    BYTE PTR [rax+riz*8],1
  426280:	add    dh,al
  426282:	add    BYTE PTR [rax],al
  426284:	add    DWORD PTR [rax],eax
  426286:	add    BYTE PTR [rax],al
  426288:	add    DWORD PTR [rip+0x32050002],eax        # 0x32476290
  42628e:	add    DWORD PTR [rax],esi
  426290:	add    DWORD PTR [rax],eax
  426292:	add    BYTE PTR [rax],al
  426294:	add    DWORD PTR [rax],eax
  426296:	add    BYTE PTR [rax],al
  426298:	add    DWORD PTR [rax],eax
  42629a:	add    BYTE PTR [rax],al
  42629c:	add    DWORD PTR [rax],eax
  42629e:	add    BYTE PTR [rax],al
  4262a0:	add    DWORD PTR [rdi],eax
  4262a2:	add    al,0x0
  4262a4:	(bad)  
  4262a5:	push   rdx
  4262a6:	add    esi,DWORD PTR [rax]
  4262a8:	add    ah,BYTE PTR [rax+0x1]
  4262ab:	jo     0x4262ae
  4262ad:	add    eax,0x32050002
  4262b2:	add    DWORD PTR [rax],esi
  4262b4:	add    DWORD PTR [rsi],eax
  4262b6:	add    eax,DWORD PTR [rax]
  4262b8:	(bad)  
  4262b9:	rex.X add sil,BYTE PTR [rax]
  4262bc:	add    DWORD PTR [rax+0x0],esp
  4262bf:	add    BYTE PTR [rcx],al
  4262c1:	add    eax,0x32050002
  4262c6:	add    DWORD PTR [rax],esi
  4262c8:	add    DWORD PTR [rip+0x32050002],eax        # 0x324762d0
  4262ce:	add    DWORD PTR [rax],esi
  4262d0:	add    DWORD PTR [rcx+rax*1],eax
  4262d3:	add    BYTE PTR [rdx+riz*2],al
  4262d6:	add    BYTE PTR [rax],al
  4262d8:	add    DWORD PTR [rip+0x52050002],eax        # 0x524762e0
  4262de:	add    DWORD PTR [rax],esi
  4262e0:	add    DWORD PTR [rcx+rax*1],eax
  4262e3:	add    BYTE PTR [rdx+rax*2],al
  4262e6:	add    BYTE PTR [rax],al
  4262e8:	add    DWORD PTR [rcx+rax*1],eax
  4262eb:	add    BYTE PTR [rdx+rax*2],al
  4262ee:	add    BYTE PTR [rax],al
  4262f0:	add    DWORD PTR [rsi],eax
  4262f2:	add    eax,DWORD PTR [rax]
  4262f4:	(bad)  
  4262f5:	rex.X add sil,BYTE PTR [rax]
  4262f8:	add    DWORD PTR [rax+0x0],esp
  4262fb:	add    BYTE PTR [rcx],al
  4262fd:	add    BYTE PTR [rax],al
  4262ff:	add    BYTE PTR [rcx],al
  426301:	add    BYTE PTR [rax],al
  426303:	add    BYTE PTR [rcx],al
  426305:	add    BYTE PTR [rax],al
  426307:	add    BYTE PTR [rcx],al
  426309:	or     al,BYTE PTR [rsi]
  42630b:	add    BYTE PTR [rdx],cl
  42630d:	jb     0x426315
  42630f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b26775
  426315:	push   rax
  426316:	add    al,al
  426318:	add    DWORD PTR [rdx],ecx
  42631a:	add    eax,0x6d20a05
  42631f:	add    eax,DWORD PTR [rbx]
  426321:	xor    BYTE PTR [rdx],al
  426323:	(bad)  
  426324:	add    DWORD PTR [rax+0x0],edx
  426327:	add    BYTE PTR [rcx],al
  426329:	add    al,0x1
  42632b:	add    BYTE PTR [rdx+rax*2],al
  42632e:	add    BYTE PTR [rax],al
  426330:	add    DWORD PTR [rsi],eax
  426332:	add    eax,DWORD PTR [rax]
  426334:	(bad)  
  426335:	rex.X add sil,BYTE PTR [rax]
  426338:	add    DWORD PTR [rax+0x0],esp
  42633b:	add    BYTE PTR [rcx],al
  42633d:	add    BYTE PTR [rax],al
  42633f:	add    BYTE PTR [rcx],al
  426341:	add    al,0x1
  426343:	add    BYTE PTR [rdx+riz*4],al
  426346:	add    BYTE PTR [rax],al
  426348:	add    DWORD PTR [rax],eax
  42634a:	add    BYTE PTR [rax],al
  42634c:	add    DWORD PTR [rsi],edx
  42634e:	or     DWORD PTR [rax],eax
  426350:	(bad)  
  426351:	mov    BYTE PTR [rsi],al
  426353:	add    BYTE PTR [rax],dl
  426355:	js     0x42635c
  426357:	add    BYTE PTR [rbx],cl
  426359:	push   0xffffffffe2060004
  42635e:	add    dh,BYTE PTR [rax]
  426360:	add    DWORD PTR [rax+0x0],esp
  426363:	add    BYTE PTR [rcx],al
  426365:	add    BYTE PTR [rax],al
  426367:	add    BYTE PTR [rcx],al
  426369:	add    BYTE PTR [rax],al
  42636b:	add    BYTE PTR [rcx],al
  42636d:	add    BYTE PTR [rax],al
  42636f:	add    BYTE PTR [rcx],al
  426371:	(bad)  
  426372:	add    eax,DWORD PTR [rax]
  426374:	(bad)  
  426375:	(bad)  
  426377:	xor    BYTE PTR [rcx],al
  426379:	(bad)  
  42637a:	add    BYTE PTR [rax],al
  42637c:	add    DWORD PTR [rdi+rax*1],ecx
  42637f:	add    BYTE PTR [rdx+riz*4],cl
  426382:	or     BYTE PTR [rax],dh
  426384:	(bad)  
  426385:	(bad)  
  426386:	(bad)  
  426387:	jo     0x42638e
  426389:	push   rax
  42638a:	add    al,0xc0
  42638c:	add    dl,al
  42638e:	add    BYTE PTR [rax],al
  426390:	add    DWORD PTR [rcx],edx
  426392:	or     DWORD PTR [rip+0x30db211],eax        # 0x35015a9
  426398:	or     dh,BYTE PTR [rax]
  42639a:	or     DWORD PTR [rax+0x8],esp
  42639d:	jo     0x4263a6
  42639f:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x2226776
  4263a6:	add    BYTE PTR [rax],al
  4263a8:	add    DWORD PTR [rcx+rax*1],eax
  4263ab:	add    BYTE PTR [rdx+rax*2],al
  4263ae:	add    BYTE PTR [rax],al
  4263b0:	add    DWORD PTR [rdx],ecx
  4263b2:	(bad)  
  4263b3:	add    BYTE PTR [rdx],cl
  4263b5:	xor    al,BYTE PTR [rsi]
  4263b7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b2681d
  4263bd:	push   rax
  4263be:	add    al,al
  4263c0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324763c8
  4263c6:	add    DWORD PTR [rax],esi
  4263c8:	add    DWORD PTR [rax],ecx
  4263ca:	add    eax,0x4420800
  4263cf:	xor    BYTE PTR [rbx],al
  4263d1:	(bad)  
  4263d2:	add    dh,BYTE PTR [rax+0x1]
  4263d5:	push   rax
  4263d6:	add    BYTE PTR [rax],al
  4263d8:	add    DWORD PTR [rdi],eax
  4263da:	add    al,0x0
  4263dc:	(bad)  
  4263dd:	xor    al,BYTE PTR [rbx]
  4263df:	xor    BYTE PTR [rdx],al
  4263e1:	(bad)  
  4263e2:	add    DWORD PTR [rax+0x1],esi
  4263e5:	add    eax,0x32050002
  4263ea:	add    DWORD PTR [rax],esi
  4263ec:	add    DWORD PTR [rip+0x32050002],eax        # 0x324763f4
  4263f2:	add    DWORD PTR [rax],esi
  4263f4:	add    DWORD PTR [rax],eax
  4263f6:	add    BYTE PTR [rax],al
  4263f8:	add    DWORD PTR [rax],eax
  4263fa:	add    BYTE PTR [rax],al
  4263fc:	add    DWORD PTR [rax],eax
  4263fe:	add    BYTE PTR [rax],al
  426400:	add    DWORD PTR [rdi],eax
  426402:	add    al,0x0
  426404:	(bad)  
  426405:	xor    al,BYTE PTR [rbx]
  426407:	xor    BYTE PTR [rdx],al
  426409:	(bad)  
  42640a:	add    DWORD PTR [rax+0x1],esi
  42640d:	(bad)  
  42640e:	add    eax,DWORD PTR [rax]
  426410:	(bad)  
  426411:	rex.X add sil,BYTE PTR [rax]
  426414:	add    DWORD PTR [rax+0x0],esp
  426417:	add    BYTE PTR [rcx],al
  426419:	add    eax,0x32050002
  42641e:	add    DWORD PTR [rax],esi
  426420:	add    DWORD PTR [rdi],eax
  426422:	add    al,0x0
  426424:	(bad)  
  426425:	xor    al,BYTE PTR [rbx]
  426427:	xor    BYTE PTR [rdx],al
  426429:	(bad)  
  42642a:	add    DWORD PTR [rax+0x1],esi
  42642d:	(bad)  
  42642e:	add    eax,DWORD PTR [rax]
  426430:	(bad)  
  426431:	rex.X add sil,BYTE PTR [rax]
  426434:	add    DWORD PTR [rax+0x0],esp
  426437:	add    BYTE PTR [rcx],al
  426439:	(bad)  
  42643a:	add    eax,DWORD PTR [rax]
  42643c:	(bad)  
  42643d:	rex.X add sil,BYTE PTR [rax]
  426440:	add    DWORD PTR [rax+0x0],esp
  426443:	add    BYTE PTR [rcx],al
  426445:	or     BYTE PTR [rip+0x4420800],al        # 0x4846c4b
  42644b:	xor    BYTE PTR [rbx],al
  42644d:	(bad)  
  42644e:	add    dh,BYTE PTR [rax+0x1]
  426451:	push   rax
  426452:	add    BYTE PTR [rax],al
  426454:	add    DWORD PTR [rdx],ecx
  426456:	(bad)  
  426457:	add    BYTE PTR [rdx],cl
  426459:	mov    dl,0x6
  42645b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b268c1
  426461:	push   rax
  426462:	add    al,al
  426464:	add    DWORD PTR [rax],eax
  426466:	add    BYTE PTR [rax],al
  426468:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000427000 <.bss>:
	...

Disassembly of section .idata:

0000000000428000 <.idata>:
  428000:	cmp    al,0x80
  428002:	add    al,BYTE PTR [rax]
	...
  42800c:	pop    rax
  42800d:	mov    eax,DWORD PTR [rdx]
  42800f:	add    BYTE PTR [rbx+rax*4],dh
  428012:	add    al,BYTE PTR [rax]
  428014:	cld    
  428015:	add    BYTE PTR [rdx],0x0
	...
  428020:	or     BYTE PTR [rdx+rax*1+0x283f400],0x0
	...
  42803c:	sub    al,0x86
  42803e:	add    al,BYTE PTR [rax]
  428040:	add    BYTE PTR [rax],al
  428042:	add    BYTE PTR [rax],al
  428044:	xchg   BYTE PTR [rdx],r8b
  428047:	add    BYTE PTR [rax],al
  428049:	add    BYTE PTR [rax],al
  42804b:	add    BYTE PTR [rsi+rax*4+0x2],bl
  42804f:	add    BYTE PTR [rax],al
  428051:	add    BYTE PTR [rax],al
  428053:	add    BYTE PTR [rax-0x7a],dh
  428056:	add    al,BYTE PTR [rax]
  428058:	add    BYTE PTR [rax],al
  42805a:	add    BYTE PTR [rax],al
  42805c:	xchg   BYTE PTR [rsi+0x2],al
  428062:	add    BYTE PTR [rax],al
  428064:	pushf  
  428065:	xchg   BYTE PTR [rdx],al
  428067:	add    BYTE PTR [rax],al
  428069:	add    BYTE PTR [rax],al
  42806b:	add    BYTE PTR [rsi+rax*4+0x2],ch
  428072:	add    BYTE PTR [rax],al
  428074:	mov    esi,0x286
  428079:	add    BYTE PTR [rax],al
  42807b:	add    al,bl
  42807d:	xchg   BYTE PTR [rdx],al
  42807f:	add    BYTE PTR [rax],al
  428081:	add    BYTE PTR [rax],al
  428083:	add    al,ch
  428085:	xchg   BYTE PTR [rdx],al
  428087:	add    BYTE PTR [rax],al
  428089:	add    BYTE PTR [rax],al
  42808b:	add    BYTE PTR [rdi+rax*4],al
  42808e:	add    al,BYTE PTR [rax]
  428090:	add    BYTE PTR [rax],al
  428092:	add    BYTE PTR [rax],al
  428094:	sbb    al,0x87
  428096:	add    al,BYTE PTR [rax]
  428098:	add    BYTE PTR [rax],al
  42809a:	add    BYTE PTR [rax],al
  42809c:	xchg   DWORD PTR ss:[rdx],eax
  42809f:	add    BYTE PTR [rax],al
  4280a1:	add    BYTE PTR [rax],al
  4280a3:	add    BYTE PTR [rdi+rax*4+0x2],cl
  4280a7:	add    BYTE PTR [rax],al
  4280a9:	add    BYTE PTR [rax],al
  4280ab:	add    BYTE PTR [rax-0x79],ah
  4280ae:	add    al,BYTE PTR [rax]
  4280b0:	add    BYTE PTR [rax],al
  4280b2:	add    BYTE PTR [rax],al
  4280b4:	jp     0x42803d
  4280b6:	add    al,BYTE PTR [rax]
  4280b8:	add    BYTE PTR [rax],al
  4280ba:	add    BYTE PTR [rax],al
  4280bc:	mov    es,WORD PTR [rdi+0x2]
  4280c2:	add    BYTE PTR [rax],al
  4280c4:	lods   al,BYTE PTR ds:[rsi]
  4280c5:	xchg   DWORD PTR [rdx],eax
  4280c7:	add    BYTE PTR [rax],al
  4280c9:	add    BYTE PTR [rax],al
  4280cb:	add    BYTE PTR [rdi+rax*4+0x2],dh
  4280d2:	add    BYTE PTR [rax],al
  4280d4:	enter  0x287,0x0
  4280d8:	add    BYTE PTR [rax],al
  4280da:	add    BYTE PTR [rax],al
  4280dc:	(bad)  
  4280dd:	xchg   DWORD PTR [rdx],eax
  4280df:	add    BYTE PTR [rax],al
  4280e1:	add    BYTE PTR [rax],al
  4280e3:	add    dl,dh
  4280e5:	xchg   DWORD PTR [rdx],eax
  4280e7:	add    BYTE PTR [rax],al
  4280e9:	add    BYTE PTR [rax],al
  4280eb:	add    BYTE PTR [rax+rcx*4],al
  4280ee:	add    al,BYTE PTR [rax]
	...
  4280fc:	adc    al,0x88
  4280fe:	add    al,BYTE PTR [rax]
  428100:	add    BYTE PTR [rax],al
  428102:	add    BYTE PTR [rax],al
  428104:	sub    al,0x88
  428106:	add    al,BYTE PTR [rax]
  428108:	add    BYTE PTR [rax],al
  42810a:	add    BYTE PTR [rax],al
  42810c:	cmp    cl,BYTE PTR [rax+0x2]
  428112:	add    BYTE PTR [rax],al
  428114:	rex.WX mov BYTE PTR [rdx],al
  428117:	add    BYTE PTR [rax],al
  428119:	add    BYTE PTR [rax],al
  42811b:	add    BYTE PTR [rsi-0x78],dl
  42811e:	add    al,BYTE PTR [rax]
  428120:	add    BYTE PTR [rax],al
  428122:	add    BYTE PTR [rax],al
  428124:	mov    BYTE PTR fs:[rdx],al
  428127:	add    BYTE PTR [rax],al
  428129:	add    BYTE PTR [rax],al
  42812b:	add    BYTE PTR [rax+rcx*4+0x2],dh
  42812f:	add    BYTE PTR [rax],al
  428131:	add    BYTE PTR [rax],al
  428133:	add    BYTE PTR [rsi+0x288],al
  428139:	add    BYTE PTR [rax],al
  42813b:	add    BYTE PTR [rdx+0x288],bl
  428141:	add    BYTE PTR [rax],al
  428143:	add    BYTE PTR [rax+rcx*4+0x2],ah
  42814a:	add    BYTE PTR [rax],al
  42814c:	scas   al,BYTE PTR es:[rdi]
  42814d:	mov    BYTE PTR [rdx],al
  42814f:	add    BYTE PTR [rax],al
  428151:	add    BYTE PTR [rax],al
  428153:	add    BYTE PTR [rax+rcx*4+0x2],bh
  42815a:	add    BYTE PTR [rax],al
  42815c:	(bad)  
  42815d:	mov    BYTE PTR [rdx],al
  42815f:	add    BYTE PTR [rax],al
  428161:	add    BYTE PTR [rax],al
  428163:	add    al,dl
  428165:	mov    BYTE PTR [rdx],al
  428167:	add    BYTE PTR [rax],al
  428169:	add    BYTE PTR [rax],al
  42816b:	add    dl,bl
  42816d:	mov    BYTE PTR [rdx],al
  42816f:	add    BYTE PTR [rax],al
  428171:	add    BYTE PTR [rax],al
  428173:	add    dh,ah
  428175:	mov    BYTE PTR [rdx],al
  428177:	add    BYTE PTR [rax],al
  428179:	add    BYTE PTR [rax],al
  42817b:	add    dh,ch
  42817d:	mov    BYTE PTR [rdx],al
  42817f:	add    BYTE PTR [rax],al
  428181:	add    BYTE PTR [rax],al
  428183:	add    al,bh
  428185:	mov    BYTE PTR [rdx],al
  428187:	add    BYTE PTR [rax],al
  428189:	add    BYTE PTR [rax],al
  42818b:	add    BYTE PTR [rdx],al
  42818d:	mov    DWORD PTR [rdx],eax
  42818f:	add    BYTE PTR [rax],al
  428191:	add    BYTE PTR [rax],al
  428193:	add    BYTE PTR [rdx],cl
  428195:	mov    DWORD PTR [rdx],eax
  428197:	add    BYTE PTR [rax],al
  428199:	add    BYTE PTR [rax],al
  42819b:	add    BYTE PTR [rdx],dl
  42819d:	mov    DWORD PTR [rdx],eax
  42819f:	add    BYTE PTR [rax],al
  4281a1:	add    BYTE PTR [rax],al
  4281a3:	add    BYTE PTR [rcx+rcx*4],bl
  4281a6:	add    al,BYTE PTR [rax]
  4281a8:	add    BYTE PTR [rax],al
  4281aa:	add    BYTE PTR [rax],al
  4281ac:	and    al,0x89
  4281ae:	add    al,BYTE PTR [rax]
  4281b0:	add    BYTE PTR [rax],al
  4281b2:	add    BYTE PTR [rax],al
  4281b4:	mov    DWORD PTR cs:[rdx],eax
  4281b7:	add    BYTE PTR [rax],al
  4281b9:	add    BYTE PTR [rax],al
  4281bb:	add    BYTE PTR [rsi],dh
  4281bd:	mov    DWORD PTR [rdx],eax
  4281bf:	add    BYTE PTR [rax],al
  4281c1:	add    BYTE PTR [rax],al
  4281c3:	add    BYTE PTR [rax-0x77],al
  4281c6:	add    al,BYTE PTR [rax]
  4281c8:	add    BYTE PTR [rax],al
  4281ca:	add    BYTE PTR [rax],al
  4281cc:	mov    QWORD PTR [rdx],rax
  4281cf:	add    BYTE PTR [rax],al
  4281d1:	add    BYTE PTR [rax],al
  4281d3:	add    BYTE PTR [rdx-0x77],dl
  4281d6:	add    al,BYTE PTR [rax]
  4281d8:	add    BYTE PTR [rax],al
  4281da:	add    BYTE PTR [rax],al
  4281dc:	pop    rdx
  4281dd:	mov    DWORD PTR [rdx],eax
  4281df:	add    BYTE PTR [rax],al
  4281e1:	add    BYTE PTR [rax],al
  4281e3:	add    BYTE PTR [rdx-0x77],ah
  4281e6:	add    al,BYTE PTR [rax]
  4281e8:	add    BYTE PTR [rax],al
  4281ea:	add    BYTE PTR [rax],al
  4281ec:	push   0xffffffffffffff89
  4281ee:	add    al,BYTE PTR [rax]
  4281f0:	add    BYTE PTR [rax],al
  4281f2:	add    BYTE PTR [rax],al
  4281f4:	je     0x42817f
  4281f6:	add    al,BYTE PTR [rax]
  4281f8:	add    BYTE PTR [rax],al
  4281fa:	add    BYTE PTR [rax],al
  4281fc:	jle    0x428187
  4281fe:	add    al,BYTE PTR [rax]
  428200:	add    BYTE PTR [rax],al
  428202:	add    BYTE PTR [rax],al
  428204:	xchg   BYTE PTR [rcx+0x2],cl
  42820a:	add    BYTE PTR [rax],al
  42820c:	nop
  42820d:	mov    DWORD PTR [rdx],eax
  42820f:	add    BYTE PTR [rax],al
  428211:	add    BYTE PTR [rax],al
  428213:	add    BYTE PTR [rdx+0x289],bl
  428219:	add    BYTE PTR [rax],al
  42821b:	add    BYTE PTR [rcx+rcx*4+0x2],ah
  428222:	add    BYTE PTR [rax],al
  428224:	scas   al,BYTE PTR es:[rdi]
  428225:	mov    DWORD PTR [rdx],eax
  428227:	add    BYTE PTR [rax],al
  428229:	add    BYTE PTR [rax],al
  42822b:	add    BYTE PTR [rax+0x289],bh
  428231:	add    BYTE PTR [rax],al
  428233:	add    dl,al
  428235:	mov    DWORD PTR [rdx],eax
  428237:	add    BYTE PTR [rax],al
  428239:	add    BYTE PTR [rax],al
  42823b:	add    ah,cl
  42823d:	mov    DWORD PTR [rdx],eax
  42823f:	add    BYTE PTR [rax],al
  428241:	add    BYTE PTR [rax],al
  428243:	add    dh,dl
  428245:	mov    DWORD PTR [rdx],eax
  428247:	add    BYTE PTR [rax],al
  428249:	add    BYTE PTR [rax],al
  42824b:	add    al,ah
  42824d:	mov    DWORD PTR [rdx],eax
  42824f:	add    BYTE PTR [rax],al
  428251:	add    BYTE PTR [rax],al
  428253:	add    ah,ch
  428255:	mov    DWORD PTR [rdx],eax
  428257:	add    BYTE PTR [rax],al
  428259:	add    BYTE PTR [rax],al
  42825b:	add    dh,dh
  42825d:	mov    DWORD PTR [rdx],eax
  42825f:	add    BYTE PTR [rax],al
  428261:	add    BYTE PTR [rax],al
  428263:	add    BYTE PTR [rax],al
  428265:	mov    al,BYTE PTR [rdx]
  428267:	add    BYTE PTR [rax],al
  428269:	add    BYTE PTR [rax],al
  42826b:	add    BYTE PTR [rdx],cl
  42826d:	mov    al,BYTE PTR [rdx]
  42826f:	add    BYTE PTR [rax],al
  428271:	add    BYTE PTR [rax],al
  428273:	add    BYTE PTR [rdx+rcx*4],dl
  428276:	add    al,BYTE PTR [rax]
  428278:	add    BYTE PTR [rax],al
  42827a:	add    BYTE PTR [rax],al
  42827c:	sbb    al,0x8a
  42827e:	add    al,BYTE PTR [rax]
  428280:	add    BYTE PTR [rax],al
  428282:	add    BYTE PTR [rax],al
  428284:	mov    al,BYTE PTR es:[rdx]
  428287:	add    BYTE PTR [rax],al
  428289:	add    BYTE PTR [rax],al
  42828b:	add    BYTE PTR [rax],dh
  42828d:	mov    al,BYTE PTR [rdx]
  42828f:	add    BYTE PTR [rax],al
  428291:	add    BYTE PTR [rax],al
  428293:	add    BYTE PTR [rdx],bh
  428295:	mov    al,BYTE PTR [rdx]
  428297:	add    BYTE PTR [rax],al
  428299:	add    BYTE PTR [rax],al
  42829b:	add    BYTE PTR [rdx+rcx*4+0x2],al
  42829f:	add    BYTE PTR [rax],al
  4282a1:	add    BYTE PTR [rax],al
  4282a3:	add    BYTE PTR [rsi-0x76],cl
  4282a6:	add    al,BYTE PTR [rax]
  4282a8:	add    BYTE PTR [rax],al
  4282aa:	add    BYTE PTR [rax],al
  4282ac:	pop    rax
  4282ad:	mov    al,BYTE PTR [rdx]
  4282af:	add    BYTE PTR [rax],al
  4282b1:	add    BYTE PTR [rax],al
  4282b3:	add    BYTE PTR [rdx+rcx*4+0x2],ah
  4282b7:	add    BYTE PTR [rax],al
  4282b9:	add    BYTE PTR [rax],al
  4282bb:	add    BYTE PTR [rsi-0x76],ch
  4282be:	add    al,BYTE PTR [rax]
  4282c0:	add    BYTE PTR [rax],al
  4282c2:	add    BYTE PTR [rax],al
  4282c4:	js     0x428250
  4282c6:	add    al,BYTE PTR [rax]
  4282c8:	add    BYTE PTR [rax],al
  4282ca:	add    BYTE PTR [rax],al
  4282cc:	(bad)  
  4282cd:	mov    al,BYTE PTR [rdx]
  4282cf:	add    BYTE PTR [rax],al
  4282d1:	add    BYTE PTR [rax],al
  4282d3:	add    BYTE PTR [rdx+rcx*4+0x2],cl
  4282da:	add    BYTE PTR [rax],al
  4282dc:	cwde   
  4282dd:	mov    al,BYTE PTR [rdx]
  4282df:	add    BYTE PTR [rax],al
  4282e1:	add    BYTE PTR [rax],al
  4282e3:	add    BYTE PTR [rdx+0x28a],ah
  4282e9:	add    BYTE PTR [rax],al
  4282eb:	add    BYTE PTR [rdx+rcx*4+0x2],ch
  4282f2:	add    BYTE PTR [rax],al
  4282f4:	mov    eax,0x28a
  4282f9:	add    BYTE PTR [rax],al
  4282fb:	add    al,al
  4282fd:	mov    al,BYTE PTR [rdx]
  4282ff:	add    BYTE PTR [rax],al
  428301:	add    BYTE PTR [rax],al
  428303:	add    dl,cl
  428305:	mov    al,BYTE PTR [rdx]
  428307:	add    BYTE PTR [rax],al
  428309:	add    BYTE PTR [rax],al
  42830b:	add    ah,dl
  42830d:	mov    al,BYTE PTR [rdx]
  42830f:	add    BYTE PTR [rax],al
  428311:	add    BYTE PTR [rax],al
  428313:	add    dh,bl
  428315:	mov    al,BYTE PTR [rdx]
  428317:	add    BYTE PTR [rax],al
  428319:	add    BYTE PTR [rax],al
  42831b:	add    al,ch
  42831d:	mov    al,BYTE PTR [rdx]
  42831f:	add    BYTE PTR [rax],al
  428321:	add    BYTE PTR [rax],al
  428323:	add    dl,dh
  428325:	mov    al,BYTE PTR [rdx]
	...
  428333:	add    BYTE PTR [rsi+rax*4],ch
  428336:	add    al,BYTE PTR [rax]
  428338:	add    BYTE PTR [rax],al
  42833a:	add    BYTE PTR [rax],al
  42833c:	xchg   BYTE PTR [rdx],r8b
  42833f:	add    BYTE PTR [rax],al
  428341:	add    BYTE PTR [rax],al
  428343:	add    BYTE PTR [rsi+rax*4+0x2],bl
  428347:	add    BYTE PTR [rax],al
  428349:	add    BYTE PTR [rax],al
  42834b:	add    BYTE PTR [rax-0x7a],dh
  42834e:	add    al,BYTE PTR [rax]
  428350:	add    BYTE PTR [rax],al
  428352:	add    BYTE PTR [rax],al
  428354:	xchg   BYTE PTR [rsi+0x2],al
  42835a:	add    BYTE PTR [rax],al
  42835c:	pushf  
  42835d:	xchg   BYTE PTR [rdx],al
  42835f:	add    BYTE PTR [rax],al
  428361:	add    BYTE PTR [rax],al
  428363:	add    BYTE PTR [rsi+rax*4+0x2],ch
  42836a:	add    BYTE PTR [rax],al
  42836c:	mov    esi,0x286
  428371:	add    BYTE PTR [rax],al
  428373:	add    al,bl
  428375:	xchg   BYTE PTR [rdx],al
  428377:	add    BYTE PTR [rax],al
  428379:	add    BYTE PTR [rax],al
  42837b:	add    al,ch
  42837d:	xchg   BYTE PTR [rdx],al
  42837f:	add    BYTE PTR [rax],al
  428381:	add    BYTE PTR [rax],al
  428383:	add    BYTE PTR [rdi+rax*4],al
  428386:	add    al,BYTE PTR [rax]
  428388:	add    BYTE PTR [rax],al
  42838a:	add    BYTE PTR [rax],al
  42838c:	sbb    al,0x87
  42838e:	add    al,BYTE PTR [rax]
  428390:	add    BYTE PTR [rax],al
  428392:	add    BYTE PTR [rax],al
  428394:	xchg   DWORD PTR ss:[rdx],eax
  428397:	add    BYTE PTR [rax],al
  428399:	add    BYTE PTR [rax],al
  42839b:	add    BYTE PTR [rdi+rax*4+0x2],cl
  42839f:	add    BYTE PTR [rax],al
  4283a1:	add    BYTE PTR [rax],al
  4283a3:	add    BYTE PTR [rax-0x79],ah
  4283a6:	add    al,BYTE PTR [rax]
  4283a8:	add    BYTE PTR [rax],al
  4283aa:	add    BYTE PTR [rax],al
  4283ac:	jp     0x428335
  4283ae:	add    al,BYTE PTR [rax]
  4283b0:	add    BYTE PTR [rax],al
  4283b2:	add    BYTE PTR [rax],al
  4283b4:	mov    es,WORD PTR [rdi+0x2]
  4283ba:	add    BYTE PTR [rax],al
  4283bc:	lods   al,BYTE PTR ds:[rsi]
  4283bd:	xchg   DWORD PTR [rdx],eax
  4283bf:	add    BYTE PTR [rax],al
  4283c1:	add    BYTE PTR [rax],al
  4283c3:	add    BYTE PTR [rdi+rax*4+0x2],dh
  4283ca:	add    BYTE PTR [rax],al
  4283cc:	enter  0x287,0x0
  4283d0:	add    BYTE PTR [rax],al
  4283d2:	add    BYTE PTR [rax],al
  4283d4:	(bad)  
  4283d5:	xchg   DWORD PTR [rdx],eax
  4283d7:	add    BYTE PTR [rax],al
  4283d9:	add    BYTE PTR [rax],al
  4283db:	add    dl,dh
  4283dd:	xchg   DWORD PTR [rdx],eax
  4283df:	add    BYTE PTR [rax],al
  4283e1:	add    BYTE PTR [rax],al
  4283e3:	add    BYTE PTR [rax+rcx*4],al
  4283e6:	add    al,BYTE PTR [rax]
	...
  4283f4:	adc    al,0x88
  4283f6:	add    al,BYTE PTR [rax]
  4283f8:	add    BYTE PTR [rax],al
  4283fa:	add    BYTE PTR [rax],al
  4283fc:	sub    al,0x88
  4283fe:	add    al,BYTE PTR [rax]
  428400:	add    BYTE PTR [rax],al
  428402:	add    BYTE PTR [rax],al
  428404:	cmp    cl,BYTE PTR [rax+0x2]
  42840a:	add    BYTE PTR [rax],al
  42840c:	rex.WX mov BYTE PTR [rdx],al
  42840f:	add    BYTE PTR [rax],al
  428411:	add    BYTE PTR [rax],al
  428413:	add    BYTE PTR [rsi-0x78],dl
  428416:	add    al,BYTE PTR [rax]
  428418:	add    BYTE PTR [rax],al
  42841a:	add    BYTE PTR [rax],al
  42841c:	mov    BYTE PTR fs:[rdx],al
  42841f:	add    BYTE PTR [rax],al
  428421:	add    BYTE PTR [rax],al
  428423:	add    BYTE PTR [rax+rcx*4+0x2],dh
  428427:	add    BYTE PTR [rax],al
  428429:	add    BYTE PTR [rax],al
  42842b:	add    BYTE PTR [rsi+0x288],al
  428431:	add    BYTE PTR [rax],al
  428433:	add    BYTE PTR [rdx+0x288],bl
  428439:	add    BYTE PTR [rax],al
  42843b:	add    BYTE PTR [rax+rcx*4+0x2],ah
  428442:	add    BYTE PTR [rax],al
  428444:	scas   al,BYTE PTR es:[rdi]
  428445:	mov    BYTE PTR [rdx],al
  428447:	add    BYTE PTR [rax],al
  428449:	add    BYTE PTR [rax],al
  42844b:	add    BYTE PTR [rax+rcx*4+0x2],bh
  428452:	add    BYTE PTR [rax],al
  428454:	(bad)  
  428455:	mov    BYTE PTR [rdx],al
  428457:	add    BYTE PTR [rax],al
  428459:	add    BYTE PTR [rax],al
  42845b:	add    al,dl
  42845d:	mov    BYTE PTR [rdx],al
  42845f:	add    BYTE PTR [rax],al
  428461:	add    BYTE PTR [rax],al
  428463:	add    dl,bl
  428465:	mov    BYTE PTR [rdx],al
  428467:	add    BYTE PTR [rax],al
  428469:	add    BYTE PTR [rax],al
  42846b:	add    dh,ah
  42846d:	mov    BYTE PTR [rdx],al
  42846f:	add    BYTE PTR [rax],al
  428471:	add    BYTE PTR [rax],al
  428473:	add    dh,ch
  428475:	mov    BYTE PTR [rdx],al
  428477:	add    BYTE PTR [rax],al
  428479:	add    BYTE PTR [rax],al
  42847b:	add    al,bh
  42847d:	mov    BYTE PTR [rdx],al
  42847f:	add    BYTE PTR [rax],al
  428481:	add    BYTE PTR [rax],al
  428483:	add    BYTE PTR [rdx],al
  428485:	mov    DWORD PTR [rdx],eax
  428487:	add    BYTE PTR [rax],al
  428489:	add    BYTE PTR [rax],al
  42848b:	add    BYTE PTR [rdx],cl
  42848d:	mov    DWORD PTR [rdx],eax
  42848f:	add    BYTE PTR [rax],al
  428491:	add    BYTE PTR [rax],al
  428493:	add    BYTE PTR [rdx],dl
  428495:	mov    DWORD PTR [rdx],eax
  428497:	add    BYTE PTR [rax],al
  428499:	add    BYTE PTR [rax],al
  42849b:	add    BYTE PTR [rcx+rcx*4],bl
  42849e:	add    al,BYTE PTR [rax]
  4284a0:	add    BYTE PTR [rax],al
  4284a2:	add    BYTE PTR [rax],al
  4284a4:	and    al,0x89
  4284a6:	add    al,BYTE PTR [rax]
  4284a8:	add    BYTE PTR [rax],al
  4284aa:	add    BYTE PTR [rax],al
  4284ac:	mov    DWORD PTR cs:[rdx],eax
  4284af:	add    BYTE PTR [rax],al
  4284b1:	add    BYTE PTR [rax],al
  4284b3:	add    BYTE PTR [rsi],dh
  4284b5:	mov    DWORD PTR [rdx],eax
  4284b7:	add    BYTE PTR [rax],al
  4284b9:	add    BYTE PTR [rax],al
  4284bb:	add    BYTE PTR [rax-0x77],al
  4284be:	add    al,BYTE PTR [rax]
  4284c0:	add    BYTE PTR [rax],al
  4284c2:	add    BYTE PTR [rax],al
  4284c4:	mov    QWORD PTR [rdx],rax
  4284c7:	add    BYTE PTR [rax],al
  4284c9:	add    BYTE PTR [rax],al
  4284cb:	add    BYTE PTR [rdx-0x77],dl
  4284ce:	add    al,BYTE PTR [rax]
  4284d0:	add    BYTE PTR [rax],al
  4284d2:	add    BYTE PTR [rax],al
  4284d4:	pop    rdx
  4284d5:	mov    DWORD PTR [rdx],eax
  4284d7:	add    BYTE PTR [rax],al
  4284d9:	add    BYTE PTR [rax],al
  4284db:	add    BYTE PTR [rdx-0x77],ah
  4284de:	add    al,BYTE PTR [rax]
  4284e0:	add    BYTE PTR [rax],al
  4284e2:	add    BYTE PTR [rax],al
  4284e4:	push   0xffffffffffffff89
  4284e6:	add    al,BYTE PTR [rax]
  4284e8:	add    BYTE PTR [rax],al
  4284ea:	add    BYTE PTR [rax],al
  4284ec:	je     0x428477
  4284ee:	add    al,BYTE PTR [rax]
  4284f0:	add    BYTE PTR [rax],al
  4284f2:	add    BYTE PTR [rax],al
  4284f4:	jle    0x42847f
  4284f6:	add    al,BYTE PTR [rax]
  4284f8:	add    BYTE PTR [rax],al
  4284fa:	add    BYTE PTR [rax],al
  4284fc:	xchg   BYTE PTR [rcx+0x2],cl
  428502:	add    BYTE PTR [rax],al
  428504:	nop
  428505:	mov    DWORD PTR [rdx],eax
  428507:	add    BYTE PTR [rax],al
  428509:	add    BYTE PTR [rax],al
  42850b:	add    BYTE PTR [rdx+0x289],bl
  428511:	add    BYTE PTR [rax],al
  428513:	add    BYTE PTR [rcx+rcx*4+0x2],ah
  42851a:	add    BYTE PTR [rax],al
  42851c:	scas   al,BYTE PTR es:[rdi]
  42851d:	mov    DWORD PTR [rdx],eax
  42851f:	add    BYTE PTR [rax],al
  428521:	add    BYTE PTR [rax],al
  428523:	add    BYTE PTR [rax+0x289],bh
  428529:	add    BYTE PTR [rax],al
  42852b:	add    dl,al
  42852d:	mov    DWORD PTR [rdx],eax
  42852f:	add    BYTE PTR [rax],al
  428531:	add    BYTE PTR [rax],al
  428533:	add    ah,cl
  428535:	mov    DWORD PTR [rdx],eax
  428537:	add    BYTE PTR [rax],al
  428539:	add    BYTE PTR [rax],al
  42853b:	add    dh,dl
  42853d:	mov    DWORD PTR [rdx],eax
  42853f:	add    BYTE PTR [rax],al
  428541:	add    BYTE PTR [rax],al
  428543:	add    al,ah
  428545:	mov    DWORD PTR [rdx],eax
  428547:	add    BYTE PTR [rax],al
  428549:	add    BYTE PTR [rax],al
  42854b:	add    ah,ch
  42854d:	mov    DWORD PTR [rdx],eax
  42854f:	add    BYTE PTR [rax],al
  428551:	add    BYTE PTR [rax],al
  428553:	add    dh,dh
  428555:	mov    DWORD PTR [rdx],eax
  428557:	add    BYTE PTR [rax],al
  428559:	add    BYTE PTR [rax],al
  42855b:	add    BYTE PTR [rax],al
  42855d:	mov    al,BYTE PTR [rdx]
  42855f:	add    BYTE PTR [rax],al
  428561:	add    BYTE PTR [rax],al
  428563:	add    BYTE PTR [rdx],cl
  428565:	mov    al,BYTE PTR [rdx]
  428567:	add    BYTE PTR [rax],al
  428569:	add    BYTE PTR [rax],al
  42856b:	add    BYTE PTR [rdx+rcx*4],dl
  42856e:	add    al,BYTE PTR [rax]
  428570:	add    BYTE PTR [rax],al
  428572:	add    BYTE PTR [rax],al
  428574:	sbb    al,0x8a
  428576:	add    al,BYTE PTR [rax]
  428578:	add    BYTE PTR [rax],al
  42857a:	add    BYTE PTR [rax],al
  42857c:	mov    al,BYTE PTR es:[rdx]
  42857f:	add    BYTE PTR [rax],al
  428581:	add    BYTE PTR [rax],al
  428583:	add    BYTE PTR [rax],dh
  428585:	mov    al,BYTE PTR [rdx]
  428587:	add    BYTE PTR [rax],al
  428589:	add    BYTE PTR [rax],al
  42858b:	add    BYTE PTR [rdx],bh
  42858d:	mov    al,BYTE PTR [rdx]
  42858f:	add    BYTE PTR [rax],al
  428591:	add    BYTE PTR [rax],al
  428593:	add    BYTE PTR [rdx+rcx*4+0x2],al
  428597:	add    BYTE PTR [rax],al
  428599:	add    BYTE PTR [rax],al
  42859b:	add    BYTE PTR [rsi-0x76],cl
  42859e:	add    al,BYTE PTR [rax]
  4285a0:	add    BYTE PTR [rax],al
  4285a2:	add    BYTE PTR [rax],al
  4285a4:	pop    rax
  4285a5:	mov    al,BYTE PTR [rdx]
  4285a7:	add    BYTE PTR [rax],al
  4285a9:	add    BYTE PTR [rax],al
  4285ab:	add    BYTE PTR [rdx+rcx*4+0x2],ah
  4285af:	add    BYTE PTR [rax],al
  4285b1:	add    BYTE PTR [rax],al
  4285b3:	add    BYTE PTR [rsi-0x76],ch
  4285b6:	add    al,BYTE PTR [rax]
  4285b8:	add    BYTE PTR [rax],al
  4285ba:	add    BYTE PTR [rax],al
  4285bc:	js     0x428548
  4285be:	add    al,BYTE PTR [rax]
  4285c0:	add    BYTE PTR [rax],al
  4285c2:	add    BYTE PTR [rax],al
  4285c4:	(bad)  
  4285c5:	mov    al,BYTE PTR [rdx]
  4285c7:	add    BYTE PTR [rax],al
  4285c9:	add    BYTE PTR [rax],al
  4285cb:	add    BYTE PTR [rdx+rcx*4+0x2],cl
  4285d2:	add    BYTE PTR [rax],al
  4285d4:	cwde   
  4285d5:	mov    al,BYTE PTR [rdx]
  4285d7:	add    BYTE PTR [rax],al
  4285d9:	add    BYTE PTR [rax],al
  4285db:	add    BYTE PTR [rdx+0x28a],ah
  4285e1:	add    BYTE PTR [rax],al
  4285e3:	add    BYTE PTR [rdx+rcx*4+0x2],ch
  4285ea:	add    BYTE PTR [rax],al
  4285ec:	mov    eax,0x28a
  4285f1:	add    BYTE PTR [rax],al
  4285f3:	add    al,al
  4285f5:	mov    al,BYTE PTR [rdx]
  4285f7:	add    BYTE PTR [rax],al
  4285f9:	add    BYTE PTR [rax],al
  4285fb:	add    dl,cl
  4285fd:	mov    al,BYTE PTR [rdx]
  4285ff:	add    BYTE PTR [rax],al
  428601:	add    BYTE PTR [rax],al
  428603:	add    ah,dl
  428605:	mov    al,BYTE PTR [rdx]
  428607:	add    BYTE PTR [rax],al
  428609:	add    BYTE PTR [rax],al
  42860b:	add    dh,bl
  42860d:	mov    al,BYTE PTR [rdx]
  42860f:	add    BYTE PTR [rax],al
  428611:	add    BYTE PTR [rax],al
  428613:	add    al,ch
  428615:	mov    al,BYTE PTR [rdx]
  428617:	add    BYTE PTR [rax],al
  428619:	add    BYTE PTR [rax],al
  42861b:	add    dl,dh
  42861d:	mov    al,BYTE PTR [rdx]
	...
  42862b:	add    al,bl
  42862d:	add    BYTE PTR [rbp+riz*2+0x6c],al
  428631:	gs je  0x428699
  428634:	rex.XB jb 0x4286a0
  428637:	je     0x4286a2
  428639:	movsxd esp,DWORD PTR [rcx+0x6c]
  42863c:	push   rbx
  42863d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  428642:	outs   dx,BYTE PTR ds:[rsi]
  428643:	add    al,bh
  428645:	add    BYTE PTR [rbp+0x6e],al
  428648:	je     0x4286af
  42864a:	jb     0x42868f
  42864c:	jb     0x4286b7
  42864e:	je     0x4286b9
  428650:	movsxd esp,DWORD PTR [rcx+0x6c]
  428653:	push   rbx
  428654:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  428659:	outs   dx,BYTE PTR ds:[rsi]
  42865a:	add    BYTE PTR [rax],al
  42865c:	int    0x1
  42865e:	rex.RXB
  42865f:	gs je  0x4286a5
  428662:	jne    0x4286d6
  428664:	jb     0x4286cb
  428666:	outs   dx,BYTE PTR ds:[rsi]
  428667:	je     0x4286b9
  428669:	jb     0x4286da
  42866b:	movsxd esp,DWORD PTR [rbp+0x73]
  42866e:	jae    0x428670
  428670:	(bad)  
  428671:	add    DWORD PTR [rdi+0x65],eax
  428674:	je     0x4286b9
  428676:	jne    0x4286ea
  428678:	jb     0x4286df
  42867a:	outs   dx,BYTE PTR ds:[rsi]
  42867b:	je     0x4286cd
  42867d:	jb     0x4286ee
  42867f:	movsxd esp,DWORD PTR [rbp+0x73]
  428682:	jae    0x4286cd
  428684:	fs add dl,dl
  428687:	add    DWORD PTR [rdi+0x65],eax
  42868a:	je     0x4286cf
  42868c:	jne    0x428700
  42868e:	jb     0x4286f5
  428690:	outs   dx,BYTE PTR ds:[rsi]
  428691:	je     0x4286e7
  428693:	push   0x64616572
  428698:	rex.WB
  428699:	add    BYTE PTR fs:[rax],al
  42869c:	adc    BYTE PTR [rdx],al
  42869e:	rex.RXB
  42869f:	gs je  0x4286ee
  4286a2:	(bad)  
  4286a3:	jae    0x428719
  4286a5:	rex.RB jb 0x42871a
  4286a8:	outs   dx,DWORD PTR ds:[rsi]
  4286a9:	jb     0x4286ab
  4286ab:	add    BYTE PTR [rbx+0x2],dh
  4286ae:	rex.RXB
  4286af:	gs je  0x428705
  4286b2:	je     0x428715
  4286b4:	jb     0x42872a
  4286b6:	jne    0x428728
  4286b8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4286ba:	outs   dx,WORD PTR ds:[rsi]
  4286bc:	add    BYTE PTR [r10+0x74654702],cl
  4286c3:	push   rbx
  4286c4:	jns    0x428739
  4286c6:	je     0x42872d
  4286c8:	ins    DWORD PTR es:[rdi],dx
  4286c9:	push   rsp
  4286ca:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  4286d1:	ins    BYTE PTR es:[rdi],dx
  4286d2:	gs push rsp
  4286d4:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  4286db:	gs je  0x428732
  4286de:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4286e5:	je     0x4286e7
  4286e7:	add    cl,bh
  4286e9:	add    cl,BYTE PTR [rcx+0x6e]
  4286ec:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  4286f4:	rex.XB jb 0x428760
  4286f7:	je     0x428762
  4286f9:	movsxd esp,DWORD PTR [rcx+0x6c]
  4286fc:	push   rbx
  4286fd:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  428702:	outs   dx,BYTE PTR ds:[rsi]
  428703:	add    BYTE PTR [rbx+0x3],cl
  428706:	rex.WR
  428707:	gs (bad) 
  428709:	jbe    0x428770
  42870b:	rex.XB jb 0x428777
  42870e:	je     0x428779
  428710:	movsxd esp,DWORD PTR [rcx+0x6c]
  428713:	push   rbx
  428714:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  428719:	outs   dx,BYTE PTR ds:[rsi]
  42871a:	add    BYTE PTR [rax],al
  42871c:	mov    ebx,0x65755103
  428721:	jb     0x42879c
  428723:	push   rax
  428724:	gs jb  0x42878d
  428727:	outs   dx,DWORD PTR ds:[rsi]
  428728:	jb     0x428797
  42872a:	(bad)  
  42872b:	outs   dx,BYTE PTR ds:[rsi]
  42872c:	movsxd esp,DWORD PTR [rbp+0x43]
  42872f:	outs   dx,DWORD PTR ds:[rsi]
  428730:	jne    0x4287a0
  428732:	je     0x428799
  428734:	jb     0x428736
  428736:	add    DWORD PTR [rdx+rdx*2],eax
  428739:	je     0x4287a7
  42873b:	rex.B
  42873c:	fs fs rex.RX jne 0x4287af
  428741:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  428745:	outs   dx,BYTE PTR ds:[rsi]
  428746:	push   rsp
  428747:	(bad)  
  428748:	(bad)  
  428749:	ins    BYTE PTR es:[rdi],dx
  42874a:	add    BYTE PTR gs:[rdx],al
  42874d:	add    al,0x52
  42874f:	je     0x4287bd
  428751:	rex.XB (bad) 
  428753:	jo     0x4287c9
  428755:	jne    0x4287c9
  428757:	rex.XB outs dx,DWORD PTR gs:[rsi]
  42875a:	outs   dx,BYTE PTR ds:[rsi]
  42875b:	je     0x4287c2
  42875d:	js     0x4287d3
  42875f:	add    BYTE PTR [rcx],cl
  428761:	add    al,0x52
  428763:	je     0x4287d1
  428765:	rex.WR outs dx,DWORD PTR ds:[rsi]
  428767:	outs   dx,DWORD PTR ds:[rsi]
  428768:	imul   esi,DWORD PTR [rbp+0x70],0x46
  42876c:	jne    0x4287dc
  42876e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  428772:	outs   dx,BYTE PTR ds:[rsi]
  428773:	rex.RB outs dx,BYTE PTR ds:[rsi]
  428775:	je     0x4287e9
  428777:	jns    0x428779
  428779:	add    BYTE PTR [rax],dl
  42877b:	add    al,0x52
  42877d:	je     0x4287eb
  42877f:	push   rsi
  428780:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  428787:	outs   dx,BYTE PTR ds:[rsi]
  428788:	ja     0x4287f3
  42878a:	outs   dx,BYTE PTR ds:[rsi]
  42878b:	add    BYTE PTR fs:[rax],al
  42878e:	lahf   
  42878f:	add    al,0x53
  428791:	gs je  0x4287e9
  428794:	outs   dx,BYTE PTR ds:[rsi]
  428795:	push   0x6c646e61
  42879a:	gs fs rex.RB js 0x428802
  42879f:	gs jo  0x428816
  4287a2:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4287a9:	gs jb  0x4287ac
  4287ac:	lods   al,BYTE PTR ds:[rsi]
  4287ad:	add    al,0x53
  4287af:	ins    BYTE PTR es:[rdi],dx
  4287b0:	gs gs jo 0x4287b4
  4287b4:	mov    edx,0x72655404
  4287b9:	ins    DWORD PTR es:[rdi],dx
  4287ba:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  4287c1:	outs   dx,DWORD PTR ds:[rsi]
  4287c2:	movsxd esp,DWORD PTR [rbp+0x73]
  4287c5:	jae    0x4287c7
  4287c7:	add    cl,al
  4287c9:	add    al,0x54
  4287cb:	ins    BYTE PTR es:[rdi],dx
  4287cc:	jae    0x428815
  4287ce:	gs je  0x428827
  4287d1:	(bad)  
  4287d2:	ins    BYTE PTR es:[rdi],dx
  4287d3:	jne    0x42883a
  4287d5:	add    dh,cl
  4287d7:	add    al,0x55
  4287d9:	outs   dx,BYTE PTR ds:[rsi]
  4287da:	push   0x6c646e61
  4287df:	gs fs rex.RB js 0x428847
  4287e4:	gs jo  0x42885b
  4287e7:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4287ee:	gs jb  0x4287f1
  4287f1:	add    ah,ch
  4287f3:	add    al,0x56
  4287f5:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  4287fc:	jb     0x42886d
  4287fe:	je     0x428865
  428800:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  428804:	out    dx,al
  428805:	add    al,0x56
  428807:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  42880e:	jne    0x428875
  428810:	jb     0x42888b
  428812:	add    BYTE PTR [rax],al
  428814:	(bad)  
  428815:	add    BYTE PTR [rdi+0x5f],bl
  428818:	rex.XB pop r15
  42881a:	jae    0x42888c
  42881c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  428820:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  428827:	ins    BYTE PTR es:[rdi],dx
  428828:	gs jb  0x42882b
  42882b:	add    BYTE PTR [rsi+0x0],cl
  42882e:	pop    rdi
  42882f:	pop    rdi
  428830:	fs ins BYTE PTR es:[rdi],dx
  428832:	ins    BYTE PTR es:[rdi],dx
  428833:	outs   dx,DWORD PTR ds:[rsi]
  428834:	outs   dx,BYTE PTR ds:[rsi]
  428835:	gs js  0x4288a1
  428838:	je     0x42883a
  42883a:	push   rcx
  42883b:	add    BYTE PTR [rdi+0x5f],bl
  42883e:	addr32 gs je 0x4288af
  428842:	(bad)  
  428843:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  42884a:	push   rdx
  42884b:	add    BYTE PTR [rdi+0x5f],bl
  42884e:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  428855:	add    BYTE PTR [rbx+0x0],dl
  428858:	pop    rdi
  428859:	pop    rdi
  42885a:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  428861:	movsxd eax,DWORD PTR [rax]
  428863:	add    BYTE PTR [rdx+0x0],bl
  428866:	pop    rdi
  428867:	pop    rdi
  428868:	ins    BYTE PTR es:[rdi],dx
  428869:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42886c:	jbe    0x4288cd
  42886e:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  428875:	add    BYTE PTR [rdi+0x5f],bl
  428878:	jae    0x4288df
  42887a:	je     0x4288db
  42887c:	(bad)  
  42887d:	jo     0x4288ef
  42887f:	pop    rdi
  428880:	je     0x4288fb
  428882:	jo     0x4288e9
  428884:	add    BYTE PTR [rax],al
  428886:	(bad)  
  428887:	add    BYTE PTR [rdi+0x5f],bl
  42888a:	jae    0x4288f1
  42888c:	je     0x428903
  42888e:	jae    0x4288f5
  428890:	jb     0x4288ff
  428892:	(bad)  
  428893:	je     0x4288fd
  428895:	gs jb  0x42890a
  428898:	add    BYTE PTR [rax],al
  42889a:	jo     0x42889c
  42889c:	pop    rdi
  42889d:	(bad)  
  42889e:	movsxd esp,DWORD PTR [rbx+0x65]
  4288a1:	jae    0x428916
  4288a3:	add    BYTE PTR [rcx+0x0],dh
  4288a6:	pop    rdi
  4288a7:	(bad)  
  4288a8:	movsxd ebp,DWORD PTR [rbp+0x64]
  4288ab:	ins    BYTE PTR es:[rdi],dx
  4288ac:	outs   dx,BYTE PTR ds:[rsi]
  4288ad:	add    BYTE PTR [rax+0x0],bh
  4288b0:	pop    rdi
  4288b1:	(bad)  
  4288b2:	ins    DWORD PTR es:[rdi],dx
  4288b3:	jae    0x42891c
  4288b5:	pop    rdi
  4288b6:	gs js  0x428922
  4288b9:	je     0x4288bb
  4288bb:	add    BYTE PTR [rdx+0x65635f00],cl
  4288c1:	js     0x42892c
  4288c3:	je     0x4288c5
  4288c5:	add    BYTE PTR [rdx+0x72655f00],bh
  4288cb:	jb     0x42893b
  4288cd:	outs   dx,DWORD PTR ds:[rsi]
  4288ce:	add    BYTE PTR [rax],al
  4288d0:	fiadd  DWORD PTR [rax]
  4288d2:	pop    rdi
  4288d3:	ins    WORD PTR es:[rdi],dx
  4288d5:	outs   dx,DWORD PTR ds:[rsi]
  4288d6:	fs add BYTE PTR gs:[rax],al
  4288da:	sbb    al,BYTE PTR [rcx]
  4288dc:	pop    rdi
  4288dd:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  4288e4:	ins    DWORD PTR es:[rdi],dx
  4288e5:	add    BYTE PTR [rax+0x6f6c5f01],al
  4288eb:	movsxd ebp,DWORD PTR [rbx+0x0]
  4288ee:	and    eax,0x6e6f5f02
  4288f3:	gs js  0x42895f
  4288f6:	je     0x4288f8
  4288f8:	(bad)
  4288fc:	outs   dx,BYTE PTR ds:[rsi]
  4288fd:	ins    BYTE PTR es:[rdi],dx
  4288fe:	outs   dx,DWORD PTR ds:[rsi]
  4288ff:	movsxd ebp,DWORD PTR [rbx+0x0]
  428902:	jg     0x428907
  428904:	(bad)  
  428905:	(bad)  
  428906:	outs   dx,DWORD PTR ds:[rsi]
  428907:	jb     0x42897d
  428909:	add    BYTE PTR [rbx+rax*1+0x696f7461],cl
  428910:	add    BYTE PTR [rax],al
  428912:	nop
  428913:	add    esp,DWORD PTR [rbx+0x61]
  428916:	ins    BYTE PTR es:[rdi],dx
  428917:	ins    BYTE PTR es:[rdi],dx
  428918:	outs   dx,DWORD PTR ds:[rsi]
  428919:	movsxd eax,DWORD PTR [rax]
  42891b:	add    BYTE PTR [rbp+0x69786503],bl
  428921:	je     0x428923
  428923:	add    BYTE PTR [rcx+0x6c636603],ah
  428929:	outs   dx,DWORD PTR ds:[rsi]
  42892a:	jae    0x428991
  42892c:	add    BYTE PTR [rax],al
  42892e:	movabs ds:0xa30000666f656603,al
  428937:	add    esp,DWORD PTR [rsi+0x65]
  42893a:	jb     0x4289ae
  42893c:	outs   dx,DWORD PTR ds:[rsi]
  42893d:	jb     0x42893f
  42893f:	add    BYTE PTR [rsi+0x706f6603],ch
  428945:	outs   dx,BYTE PTR gs:[rsi]
  428947:	add    BYTE PTR [rax+0x72706603],dh
  42894d:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  428954:	data16 jo 0x4289cc
  428957:	je     0x4289bc
  428959:	add    BYTE PTR [rsi+0x65726603],dh
  42895f:	(bad)  
  428960:	add    BYTE PTR fs:[rdi+0x65726603],dh
  428967:	add    BYTE PTR gs:[rax],al
  42896a:	mov    eax,0x65726603
  42896f:	outs   dx,DWORD PTR ds:[rsi]
  428970:	jo     0x4289d7
  428972:	outs   dx,BYTE PTR ds:[rsi]
  428973:	add    dl,al
  428975:	add    esp,DWORD PTR [rsi+0x77]
  428978:	jb     0x4289e3
  42897a:	je     0x4289e1
  42897c:	add    BYTE PTR [rax],al
  42897e:	(bad)
  428981:	gs je  0x4289e7
  428984:	add    BYTE PTR [rax],al
  428986:	mov    DWORD PTR [rbx],0x65746567
  42898c:	outs   dx,BYTE PTR ds:[rsi]
  42898d:	jbe    0x42898f
  42898f:	add    dh,cl
  428991:	add    ebp,DWORD PTR [rcx+0x73]
  428994:	(bad)  
  428995:	ins    BYTE PTR es:[rdi],dx
  428996:	outs   dx,BYTE PTR ds:[rsi]
  428997:	jne    0x428a06
  428999:	add    bh,cl
  42899b:	add    ebp,DWORD PTR [rcx+0x73]
  42899e:	(bad)  
  42899f:	ins    BYTE PTR es:[rdi],dx
  4289a0:	jo     0x428a0a
  4289a2:	(bad)  
  4289a3:	add    al,dl
  4289a5:	add    ebp,DWORD PTR [rcx+0x73]
  4289a8:	movsxd ebp,DWORD PTR [rsi+0x74]
  4289ab:	jb     0x428a19
  4289ad:	add    ah,dl
  4289af:	add    ebp,DWORD PTR [rcx+0x73]
  4289b2:	ins    BYTE PTR es:[rdi],dx
  4289b3:	outs   dx,DWORD PTR ds:[rsi]
  4289b4:	ja     0x428a1b
  4289b6:	jb     0x4289b8
  4289b8:	(bad)  
  4289b9:	add    ebp,DWORD PTR [rcx+0x73]
  4289bc:	jo     0x428a30
  4289be:	imul   ebp,DWORD PTR [rsi+0x74],0x6903d600
  4289c5:	jae    0x428a37
  4289c7:	jne    0x428a37
  4289c9:	movsxd esi,DWORD PTR [rax+rax*1-0x29]
  4289cd:	add    ebp,DWORD PTR [rcx+0x73]
  4289d0:	jae    0x428a42
  4289d2:	(bad)  
  4289d3:	movsxd esp,DWORD PTR [rbp+0x0]
  4289d6:	fadd   DWORD PTR [rbx]
  4289d8:	imul   esi,DWORD PTR [rbx+0x75],0x72657070
  4289df:	add    dh,ah
  4289e1:	add    ebp,DWORD PTR [rcx+0x73]
  4289e4:	js     0x428a4a
  4289e6:	imul   esp,DWORD PTR [rdi+0x69],0xf0000074
  4289ed:	add    ebp,DWORD PTR [rbp+0x61]
  4289f0:	ins    BYTE PTR es:[rdi],dx
  4289f1:	ins    BYTE PTR es:[rdi],dx
  4289f2:	outs   dx,DWORD PTR ds:[rsi]
  4289f3:	movsxd eax,DWORD PTR [rax]
  4289f5:	add    bh,dh
  4289f7:	add    ebp,DWORD PTR [rbp+0x65]
  4289fa:	ins    DWORD PTR es:[rdi],dx
  4289fb:	movsxd ebp,DWORD PTR [rbp+0x70]
  4289fe:	add    BYTE PTR [rax],al
  428a00:	clc    
  428a01:	add    ebp,DWORD PTR [rbp+0x65]
  428a04:	ins    DWORD PTR es:[rdi],dx
  428a05:	movsxd esi,DWORD PTR [rax+0x79]
  428a08:	add    BYTE PTR [rax],al
  428a0a:	add    DWORD PTR [rax+rsi*2],eax
  428a0d:	jb     0x428a78
  428a0f:	outs   dx,BYTE PTR ds:[rsi]
  428a10:	je     0x428a78
  428a12:	add    BYTE PTR [rax],al
  428a14:	add    eax,DWORD PTR [rax+rsi*2]
  428a17:	jne    0x428a8d
  428a19:	movsxd eax,DWORD PTR [rax]
  428a1b:	add    BYTE PTR [rsp+rax*1],cl
  428a1e:	jb     0x428a85
  428a20:	(bad)  
  428a21:	ins    BYTE PTR es:[rdi],dx
  428a22:	ins    BYTE PTR es:[rdi],dx
  428a23:	outs   dx,DWORD PTR ds:[rsi]
  428a24:	movsxd eax,DWORD PTR [rax]
  428a26:	(bad)  
  428a27:	add    al,0x73
  428a29:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  428a30:	sbb    eax,DWORD PTR [rbx+rsi*2]
  428a33:	jo     0x428aa7
  428a35:	imul   ebp,DWORD PTR [rsi+0x74],0x4230066
  428a3c:	jae    0x428ab2
  428a3e:	jb     0x428aa3
  428a40:	push   0x24000072
  428a45:	add    al,0x73
  428a47:	je     0x428abb
  428a49:	movsxd ebp,DWORD PTR [rbp+0x70]
  428a4c:	add    BYTE PTR [rax],al
  428a4e:	es add al,0x73
  428a51:	je     0x428ac5
  428a53:	movsxd esi,DWORD PTR [rax+0x79]
  428a56:	add    BYTE PTR [rax],al
  428a58:	sub    DWORD PTR [rbx+rsi*2],eax
  428a5b:	je     0x428acf
  428a5d:	gs jb  0x428ad2
  428a60:	outs   dx,DWORD PTR ds:[rsi]
  428a61:	jb     0x428a63
  428a63:	add    BYTE PTR [rbx],ch
  428a65:	add    al,0x73
  428a67:	je     0x428adb
  428a69:	ins    BYTE PTR es:[rdi],dx
  428a6a:	outs   dx,BYTE PTR gs:[rsi]
  428a6c:	add    BYTE PTR [rax],al
  428a6e:	cs add al,0x73
  428a71:	je     0x428ae5
  428a73:	outs   dx,BYTE PTR ds:[rsi]
  428a74:	movsxd ebp,DWORD PTR [rbp+0x70]
  428a77:	add    BYTE PTR [rdx],dh
  428a79:	add    al,0x73
  428a7b:	je     0x428aef
  428a7d:	jb     0x428ae2
  428a7f:	push   0x4400072
  428a84:	jae    0x428aff
  428a86:	jae    0x428afc
  428a88:	gs ins DWORD PTR es:[rdi],dx
  428a8a:	add    BYTE PTR [rax],al
  428a8c:	rex.WRX add al,0x76
  428a8f:	data16 jo 0x428b04
  428a92:	imul   ebp,DWORD PTR [rsi+0x74],0x89000066
  428a99:	add    al,0x5f
  428a9b:	jae    0x428b11
  428a9d:	(bad)  
  428a9e:	je     0x428ad6
  428aa0:	xor    al,0x0
  428aa2:	scas   eax,DWORD PTR es:[rdi]
  428aa3:	add    al,0x5f
  428aa5:	jne    0x428b15
  428aa7:	ins    BYTE PTR es:[rdi],dx
  428aa8:	imul   ebp,DWORD PTR [rsi+0x6b],0x5f04b300
  428aaf:	je     0x428b16
  428ab1:	ins    DWORD PTR es:[rdi],dx
  428ab2:	jo     0x428b22
  428ab4:	(bad)  
  428ab5:	ins    DWORD PTR es:[rdi],dx
  428ab6:	add    BYTE PTR [rax],al
  428ab8:	rol    DWORD PTR [rdi+rbx*2],cl
  428abb:	outs   dx,DWORD PTR ds:[rsi]
  428abc:	jo     0x428b23
  428abe:	outs   dx,BYTE PTR ds:[rsi]
  428abf:	add    ch,dl
  428ac1:	add    al,0x5f
  428ac3:	ins    DWORD PTR es:[rdi],dx
  428ac4:	imul   esp,DWORD PTR [rcx+rbp*2+0x72],0x0
  428ac9:	add    dh,bl
  428acb:	add    al,0x5f
  428acd:	imul   esi,DWORD PTR [rbx+0x61],0x797474
  428ad4:	loop   0x428ada
  428ad6:	pop    rdi
  428ad7:	addr32 gs je 0x428b3e
  428adb:	ja     0x428b41
  428add:	add    al,ch
  428adf:	add    al,0x5f
  428ae1:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
  428ae8:	in     al,dx
  428ae9:	add    al,0x5f
  428aeb:	outs   dx,WORD PTR fs:[rsi]
  428aee:	jo     0x428b55
  428af0:	outs   dx,BYTE PTR ds:[rsi]
  428af1:	add    ah,bh
  428af3:	add    al,0x5f
  428af5:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  428af9:	add    BYTE PTR gs:[rax],al
  428afc:	add    BYTE PTR [rax-0x7ffffffe],al
  428b02:	add    al,BYTE PTR [rax]
  428b04:	add    BYTE PTR [rax-0x7ffffffe],al
  428b0a:	add    al,BYTE PTR [rax]
  428b0c:	add    BYTE PTR [rax-0x7ffffffe],al
  428b12:	add    al,BYTE PTR [rax]
  428b14:	add    BYTE PTR [rax-0x7ffffffe],al
  428b1a:	add    al,BYTE PTR [rax]
  428b1c:	add    BYTE PTR [rax-0x7ffffffe],al
  428b22:	add    al,BYTE PTR [rax]
  428b24:	add    BYTE PTR [rax-0x7ffffffe],al
  428b2a:	add    al,BYTE PTR [rax]
  428b2c:	add    BYTE PTR [rax-0x7ffffffe],al
  428b32:	add    al,BYTE PTR [rax]
  428b34:	add    BYTE PTR [rax-0x7ffffffe],al
  428b3a:	add    al,BYTE PTR [rax]
  428b3c:	add    BYTE PTR [rax-0x7ffffffe],al
  428b42:	add    al,BYTE PTR [rax]
  428b44:	add    BYTE PTR [rax-0x7ffffffe],al
  428b4a:	add    al,BYTE PTR [rax]
  428b4c:	add    BYTE PTR [rax-0x7ffffffe],al
  428b52:	add    al,BYTE PTR [rax]
  428b54:	add    BYTE PTR [rax+0x454b0002],al
  428b5a:	push   rdx
  428b5b:	rex.WRX
  428b5c:	rex.RB
  428b5d:	xor    r14,QWORD PTR [rdx]
  428b60:	cs fs ins BYTE PTR es:[rdi],dx
  428b63:	ins    BYTE PTR es:[rdi],dx
  428b64:	add    BYTE PTR [rax],al
  428b66:	add    BYTE PTR [rax],al
  428b68:	adc    al,0x80
  428b6a:	add    al,BYTE PTR [rax]
  428b6c:	adc    al,0x80
  428b6e:	add    al,BYTE PTR [rax]
  428b70:	adc    al,0x80
  428b72:	add    al,BYTE PTR [rax]
  428b74:	adc    al,0x80
  428b76:	add    al,BYTE PTR [rax]
  428b78:	adc    al,0x80
  428b7a:	add    al,BYTE PTR [rax]
  428b7c:	adc    al,0x80
  428b7e:	add    al,BYTE PTR [rax]
  428b80:	adc    al,0x80
  428b82:	add    al,BYTE PTR [rax]
  428b84:	adc    al,0x80
  428b86:	add    al,BYTE PTR [rax]
  428b88:	adc    al,0x80
  428b8a:	add    al,BYTE PTR [rax]
  428b8c:	adc    al,0x80
  428b8e:	add    al,BYTE PTR [rax]
  428b90:	adc    al,0x80
  428b92:	add    al,BYTE PTR [rax]
  428b94:	adc    al,0x80
  428b96:	add    al,BYTE PTR [rax]
  428b98:	adc    al,0x80
  428b9a:	add    al,BYTE PTR [rax]
  428b9c:	adc    al,0x80
  428b9e:	add    al,BYTE PTR [rax]
  428ba0:	adc    al,0x80
  428ba2:	add    al,BYTE PTR [rax]
  428ba4:	adc    al,0x80
  428ba6:	add    al,BYTE PTR [rax]
  428ba8:	adc    al,0x80
  428baa:	add    al,BYTE PTR [rax]
  428bac:	adc    al,0x80
  428bae:	add    al,BYTE PTR [rax]
  428bb0:	adc    al,0x80
  428bb2:	add    al,BYTE PTR [rax]
  428bb4:	adc    al,0x80
  428bb6:	add    al,BYTE PTR [rax]
  428bb8:	adc    al,0x80
  428bba:	add    al,BYTE PTR [rax]
  428bbc:	adc    al,0x80
  428bbe:	add    al,BYTE PTR [rax]
  428bc0:	adc    al,0x80
  428bc2:	add    al,BYTE PTR [rax]
  428bc4:	adc    al,0x80
  428bc6:	add    al,BYTE PTR [rax]
  428bc8:	adc    al,0x80
  428bca:	add    al,BYTE PTR [rax]
  428bcc:	adc    al,0x80
  428bce:	add    al,BYTE PTR [rax]
  428bd0:	adc    al,0x80
  428bd2:	add    al,BYTE PTR [rax]
  428bd4:	adc    al,0x80
  428bd6:	add    al,BYTE PTR [rax]
  428bd8:	adc    al,0x80
  428bda:	add    al,BYTE PTR [rax]
  428bdc:	adc    al,0x80
  428bde:	add    al,BYTE PTR [rax]
  428be0:	adc    al,0x80
  428be2:	add    al,BYTE PTR [rax]
  428be4:	adc    al,0x80
  428be6:	add    al,BYTE PTR [rax]
  428be8:	adc    al,0x80
  428bea:	add    al,BYTE PTR [rax]
  428bec:	adc    al,0x80
  428bee:	add    al,BYTE PTR [rax]
  428bf0:	adc    al,0x80
  428bf2:	add    al,BYTE PTR [rax]
  428bf4:	adc    al,0x80
  428bf6:	add    al,BYTE PTR [rax]
  428bf8:	adc    al,0x80
  428bfa:	add    al,BYTE PTR [rax]
  428bfc:	adc    al,0x80
  428bfe:	add    al,BYTE PTR [rax]
  428c00:	adc    al,0x80
  428c02:	add    al,BYTE PTR [rax]
  428c04:	adc    al,0x80
  428c06:	add    al,BYTE PTR [rax]
  428c08:	adc    al,0x80
  428c0a:	add    al,BYTE PTR [rax]
  428c0c:	adc    al,0x80
  428c0e:	add    al,BYTE PTR [rax]
  428c10:	adc    al,0x80
  428c12:	add    al,BYTE PTR [rax]
  428c14:	adc    al,0x80
  428c16:	add    al,BYTE PTR [rax]
  428c18:	adc    al,0x80
  428c1a:	add    al,BYTE PTR [rax]
  428c1c:	adc    al,0x80
  428c1e:	add    al,BYTE PTR [rax]
  428c20:	adc    al,0x80
  428c22:	add    al,BYTE PTR [rax]
  428c24:	adc    al,0x80
  428c26:	add    al,BYTE PTR [rax]
  428c28:	adc    al,0x80
  428c2a:	add    al,BYTE PTR [rax]
  428c2c:	adc    al,0x80
  428c2e:	add    al,BYTE PTR [rax]
  428c30:	adc    al,0x80
  428c32:	add    al,BYTE PTR [rax]
  428c34:	adc    al,0x80
  428c36:	add    al,BYTE PTR [rax]
  428c38:	adc    al,0x80
  428c3a:	add    al,BYTE PTR [rax]
  428c3c:	adc    al,0x80
  428c3e:	add    al,BYTE PTR [rax]
  428c40:	adc    al,0x80
  428c42:	add    al,BYTE PTR [rax]
  428c44:	adc    al,0x80
  428c46:	add    al,BYTE PTR [rax]
  428c48:	adc    al,0x80
  428c4a:	add    al,BYTE PTR [rax]
  428c4c:	adc    al,0x80
  428c4e:	add    al,BYTE PTR [rax]
  428c50:	adc    al,0x80
  428c52:	add    al,BYTE PTR [rax]
  428c54:	adc    al,0x80
  428c56:	add    al,BYTE PTR [rax]
  428c58:	adc    al,0x80
  428c5a:	add    al,BYTE PTR [rax]
  428c5c:	adc    al,0x80
  428c5e:	add    al,BYTE PTR [rax]
  428c60:	adc    al,0x80
  428c62:	add    al,BYTE PTR [rax]
  428c64:	adc    al,0x80
  428c66:	add    al,BYTE PTR [rax]
  428c68:	adc    al,0x80
  428c6a:	add    al,BYTE PTR [rax]
  428c6c:	adc    al,0x80
  428c6e:	add    al,BYTE PTR [rax]
  428c70:	adc    al,0x80
  428c72:	add    al,BYTE PTR [rax]
  428c74:	adc    al,0x80
  428c76:	add    al,BYTE PTR [rax]
  428c78:	adc    al,0x80
  428c7a:	add    al,BYTE PTR [rax]
  428c7c:	adc    al,0x80
  428c7e:	add    al,BYTE PTR [rax]
  428c80:	ins    DWORD PTR es:[rdi],dx
  428c81:	jae    0x428cf9
  428c83:	movsxd esi,DWORD PTR [rdx+0x74]
  428c86:	cs fs ins BYTE PTR es:[rdi],dx
  428c89:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000429000 <.CRT>:
	...
  429008:	(bad)  
  429009:	adc    DWORD PTR [rax+0x0],eax
	...
  429020:	adc    BYTE PTR [rax],dl
  429022:	add    BYTE PTR [rax],al
  429025:	add    BYTE PTR [rax],al
  429027:	add    al,al
  429029:	xchg   ecx,eax
  42902a:	add    BYTE PTR [rax],al
	...
  42903d:	add    BYTE PTR [rax],al
  42903f:	add    al,dh
  429041:	xchg   ebx,eax
  429042:	add    BYTE PTR [rax],al
  429045:	add    BYTE PTR [rax],al
  429047:	add    al,al
  429049:	xchg   ebx,eax
  42904a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000042a000 <.tls>:
	...
  42a020:	add    BYTE PTR [rax+0x42],ah
  42a026:	add    BYTE PTR [rax],al
  42a028:	(bad)  
  42a029:	movabs al,ds:0x791c000000000042
  42a032:	rex.X add BYTE PTR [rax],al
  42a035:	add    BYTE PTR [rax],al
  42a037:	add    BYTE PTR [rax-0x70],al
  42a03a:	rex.X add BYTE PTR [rax],al
	...
